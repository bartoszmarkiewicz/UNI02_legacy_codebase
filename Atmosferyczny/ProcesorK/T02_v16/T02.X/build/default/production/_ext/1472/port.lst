

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Mon Sep 14 17:44:51 2020


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	const,global,class=CODE,delta=1
     4                           	psect	text,global,reloc=2,class=CODE,delta=1
     5                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     6                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     7                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97                           
    98                           	psect	const
    99                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   100                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   101                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   102                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   103                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   104                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   105                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   106                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   107                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   108                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   109                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   110                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   111                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   112                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   113                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   114                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   115                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   116                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   117                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   118                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   119                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   120                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   121                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   122                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   123                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   124                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   125                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   126                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   127                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   128                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   129                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   130                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   131                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   132                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   133                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   134                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   135                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   136                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   137                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   138                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   139                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   140                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   141                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   142                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   143                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   144                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   145                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   146                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   147                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   148                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   149                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   150                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   151                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   152                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   153                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   154                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   155                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   156                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   157                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   158                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   159                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   160                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   161                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   162                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   163                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   164                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   165                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   166                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   167                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   168                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   169                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   170                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   171                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   172                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   173                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   174                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   175                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   176                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   177                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   178                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   179                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   180                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   181                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   182                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   183                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   184                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   185                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   186                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   187                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   188                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   189                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   190                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   191                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   192                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   193                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   194                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   195                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   196                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   197                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   198                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   199  001000                     _Nastawa:
   200  001000  01                 	db	1
   201  001001  01                 	db	1
   202  001002  14                 	db	20
   203  001003  14                 	db	20
   204  001004  02                 	db	2
   205  001005  04                 	db	4
   206  001006  02                 	db	2
   207  001007  02                 	db	2
   208  001008  02                 	db	2
   209  001009  02                 	db	2
   210  00100A  04                 	db	4
   211  00100B  08                 	db	8
   212  00100C  0A                 	db	10
   213  00100D  05                 	db	5
   214  00100E  02                 	db	2
   215  00100F  02                 	db	2
   216  001010  02                 	db	2
   217  001011  02                 	db	2
   218  001012  14                 	db	20
   219  001013  01                 	db	1
   220  001014  14                 	db	20
   221  001015  01                 	db	1
   222  001016  0A                 	db	10
   223  001017  05                 	db	5
   224  001018  14                 	db	20
   225  001019  14                 	db	20
   226  00101A  14                 	db	20
   227  00101B  14                 	db	20
   228  00101C  05                 	db	5
   229  00101D  05                 	db	5
   230  00101E  05                 	db	5
   231  00101F  14                 	db	20
   232  001020  0A                 	db	10
   233  001021  0A                 	db	10
   234  001022  14                 	db	20
   235  001023  14                 	db	20
   236  001024  05                 	db	5
   237  001025  05                 	db	5
   238  001026  08                 	db	8
   239  001027  08                 	db	8
   240  001028  14                 	db	20
   241  001029  14                 	db	20
   242  00102A  02                 	db	2
   243  00102B  0A                 	db	10
   244  00102C  14                 	db	20
   245  00102D  14                 	db	20
   246                           
   247                           	psect	text
   248                           ;port.c: 28: static const Opoznienie Nastawa[23]
      +                          ={
   249                           ;port.c: 29: 1,1,
   250                           ;port.c: 30: 20,20,
   251                           ;port.c: 31: 2,4,
   252                           ;port.c: 32: 2,2,
   253                           ;port.c: 33: 2,2,
   254                           ;port.c: 34: 4,8,
   255                           ;port.c: 35: 10,5,
   256                           ;port.c: 36: 2,2,
   257                           ;port.c: 37: 2,2,
   258                           ;port.c: 38: 20,1,
   259                           ;port.c: 39: 20,1,
   260                           ;port.c: 40: 10,5,
   261                           ;port.c: 41: 20,20,
   262                           ;port.c: 42: 20,20,
   263                           ;port.c: 43: 5,5,
   264                           ;port.c: 44: 5,20,
   265                           ;port.c: 45: 10,10,
   266                           ;port.c: 46: 20,20,
   267                           ;port.c: 47: 5,5,
   268                           ;port.c: 48: 8,8,
   269                           ;port.c: 49: 20,20,
   270                           ;port.c: 50: 2,10,
   271                           ;port.c: 51: 20,20
   272                           ;port.c: 52: };
   273                           ;port.c: 54: static volatile IOPort SPort[23];
   274                           ;port.c: 59: void RefStan(void)
   275                           ;port.c: 60: {
   276  00D9B8                     _RefStan:
   277  000000                     
   278                           ;port.c: 62: SPort[0].Input=0;
   279  00D9B8  010E               	movlb	_SPort shr (0+8)	;volatile
   280  00D9BA  91B3               	bcf	_SPort& (0+255),0,b	;volatile
   281                           ;port.c: 64: SPort[1].Input=(RB5)?1:0;
   282  00D9BC  010E               	movlb	(_SPort+1) shr (0+8)
   283  00D9BE  91B4               	bcf	(_SPort+1)& (0+255),0,b
   284  00D9C0  BA81               	btfsc	3969,5,c	;volatile
   285  00D9C2  81B4               	bsf	(_SPort+1)& (0+255),0,b
   286                           ;port.c: 66: SPort[2].Input=(RC0&&RA7)?1:0;
   287  00D9C4  B082               	btfsc	3970,0,c	;volatile
   288  00D9C6  AE80               	btfss	3968,7,c	;volatile
   289  00D9C8  D002               	goto	u40
   290  00D9CA  0E01               	movlw	1
   291  00D9CC  D001               	goto	u50
   292  00D9CE                     u40:
   293  00D9CE  0E00               	movlw	0
   294  00D9D0                     u50:
   295  00D9D0  6E00               	movwf	btemp,c
   296  00D9D2  EE0E  F0B5         	lfsr	0,_SPort+2
   297  00D9D6  18EF               	xorwf	indf0,w,c
   298  00D9D8  0BFE               	andlw	-2
   299  00D9DA  1800               	xorwf	btemp,w,c
   300  00D9DC  6EEF               	movwf	indf0,c
   301                           ;port.c: 68: SPort[3].Input=(RA6&&RA7)?1:0;
   302  00D9DE  BC80               	btfsc	3968,6,c	;volatile
   303  00D9E0  AE80               	btfss	3968,7,c	;volatile
   304  00D9E2  D002               	goto	u80
   305  00D9E4  0E01               	movlw	1
   306  00D9E6  D001               	goto	u90
   307  00D9E8                     u80:
   308  00D9E8  0E00               	movlw	0
   309  00D9EA                     u90:
   310  00D9EA  6E00               	movwf	btemp,c
   311  00D9EC  EE0E  F0B6         	lfsr	0,_SPort+3
   312  00D9F0  18EF               	xorwf	indf0,w,c
   313  00D9F2  0BFE               	andlw	-2
   314  00D9F4  1800               	xorwf	btemp,w,c
   315  00D9F6  6EEF               	movwf	indf0,c
   316                           ;port.c: 70: SPort[4].Input=(RA7)?1:0;
   317  00D9F8  010E               	movlb	(_SPort+4) shr (0+8)
   318  00D9FA  91B7               	bcf	(_SPort+4)& (0+255),0,b
   319  00D9FC  BE80               	btfsc	3968,7,c	;volatile
   320  00D9FE  81B7               	bsf	(_SPort+4)& (0+255),0,b
   321                           ;port.c: 72: SPort[5].Input=(RD4)?0:1;
   322  00DA00  0E00               	movlw	0
   323  00DA02  A883               	btfss	3971,4,c	;volatile
   324  00DA04  0E01               	movlw	1
   325  00DA06  6E00               	movwf	btemp,c
   326  00DA08  EE0E  F0B8         	lfsr	0,_SPort+5
   327  00DA0C  18EF               	xorwf	indf0,w,c
   328  00DA0E  0BFE               	andlw	-2
   329  00DA10  1800               	xorwf	btemp,w,c
   330  00DA12  6EEF               	movwf	indf0,c
   331                           ;port.c: 74: SPort[6].Input=(RA4)?0:1;
   332  00DA14  0E00               	movlw	0
   333  00DA16  A880               	btfss	3968,4,c	;volatile
   334  00DA18  0E01               	movlw	1
   335  00DA1A  6E00               	movwf	btemp,c
   336  00DA1C  EE0E  F0B9         	lfsr	0,_SPort+6
   337  00DA20  18EF               	xorwf	indf0,w,c
   338  00DA22  0BFE               	andlw	-2
   339  00DA24  1800               	xorwf	btemp,w,c
   340  00DA26  6EEF               	movwf	indf0,c
   341                           ;port.c: 76: SPort[7].Input=0;
   342  00DA28  010E               	movlb	(_SPort+7) shr (0+8)
   343  00DA2A  91BA               	bcf	(_SPort+7)& (0+255),0,b
   344                           ;port.c: 78: SPort[8].Input=(RC5)?0:1;
   345  00DA2C  0E00               	movlw	0
   346  00DA2E  AA82               	btfss	3970,5,c	;volatile
   347  00DA30  0E01               	movlw	1
   348  00DA32  6E00               	movwf	btemp,c
   349  00DA34  EE0E  F0BB         	lfsr	0,_SPort+8
   350  00DA38  18EF               	xorwf	indf0,w,c
   351  00DA3A  0BFE               	andlw	-2
   352  00DA3C  1800               	xorwf	btemp,w,c
   353  00DA3E  6EEF               	movwf	indf0,c
   354                           ;port.c: 80: SPort[9].Input=(DtCO._on_DZ_CO)?1:0
      +                          ;
   355  00DA40  0101               	movlb	_DtCO shr (0+8)
   356  00DA42  0E00               	movlw	0
   357  00DA44  BBB6               	btfsc	_DtCO& (0+255),5,b
   358  00DA46  0E01               	movlw	1
   359  00DA48  6E00               	movwf	btemp,c
   360  00DA4A  EE0E  F0BC         	lfsr	0,_SPort+9
   361  00DA4E  18EF               	xorwf	indf0,w,c
   362  00DA50  0BFE               	andlw	-2
   363  00DA52  1800               	xorwf	btemp,w,c
   364  00DA54  6EEF               	movwf	indf0,c
   365                           ;port.c: 82: SPort[10].Input=(DtCW._on_DZ_CW)?1:
      +                          0;
   366  00DA56  0101               	movlb	_DtCW shr (0+8)
   367  00DA58  0E00               	movlw	0
   368  00DA5A  B9A7               	btfsc	_DtCW& (0+255),4,b
   369  00DA5C  0E01               	movlw	1
   370  00DA5E  6E00               	movwf	btemp,c
   371  00DA60  EE0E  F0BD         	lfsr	0,_SPort+10
   372  00DA64  18EF               	xorwf	indf0,w,c
   373  00DA66  0BFE               	andlw	-2
   374  00DA68  1800               	xorwf	btemp,w,c
   375  00DA6A  6EEF               	movwf	indf0,c
   376                           ;port.c: 84: SPort[11].Input=((RA4)?0:1)||((M._L
      +                          IN_CW)?1:0)||((M._IOT_CW)?1:0);
   377  00DA6C  A880               	btfss	3968,4,c	;volatile
   378  00DA6E  D006               	goto	u151
   379  00DA70  0101               	movlb	(_M+6) shr (0+8)
   380  00DA72  B506               	btfsc	(_M+6)& (0+255),2,b
   381  00DA74  D003               	goto	u151
   382  00DA76  0101               	movlb	(_M+7) shr (0+8)
   383  00DA78  A707               	btfss	(_M+7)& (0+255),3,b
   384  00DA7A  D002               	goto	u150
   385  00DA7C                     u151:
   386  00DA7C  0E01               	movlw	1
   387  00DA7E  D001               	goto	u160
   388  00DA80                     u150:
   389  00DA80  0E00               	movlw	0
   390  00DA82                     u160:
   391  00DA82  6E00               	movwf	btemp,c
   392  00DA84  EE0E  F0BE         	lfsr	0,_SPort+11
   393  00DA88  18EF               	xorwf	indf0,w,c
   394  00DA8A  0BFE               	andlw	-2
   395  00DA8C  1800               	xorwf	btemp,w,c
   396  00DA8E  6EEF               	movwf	indf0,c
   397                           ;port.c: 86: SPort[12].Input=((!((M._AKTYWNE_PGD
      +                          2)?1:0))&&(((RD5)?1:0)||((M._LIN_RT)?1:0)||((M._
      +                          I10V_RT)?1:0)||((M._IOT_RT)?1:0)))||(((M._AKTYWN
      +                          E_PGD2)?1:0)&&((M._pob_PGDRT)?1:0));
   398  00DA90  0101               	movlb	(_M+3) shr (0+8)
   399  00DA92  B703               	btfsc	(_M+3)& (0+255),3,b
   400  00DA94  D00B               	goto	u250
   401  00DA96  BA83               	btfsc	3971,5,c	;volatile
   402  00DA98  D00F               	goto	u281
   403  00DA9A  0101               	movlb	(_M+6) shr (0+8)
   404  00DA9C  B306               	btfsc	(_M+6)& (0+255),1,b
   405  00DA9E  D00C               	goto	u281
   406  00DAA0  0101               	movlb	(_M+7) shr (0+8)
   407  00DAA2  B107               	btfsc	(_M+7)& (0+255),0,b
   408  00DAA4  D009               	goto	u281
   409  00DAA6  0101               	movlb	(_M+7) shr (0+8)
   410  00DAA8  B507               	btfsc	(_M+7)& (0+255),2,b
   411  00DAAA  D006               	goto	u281
   412  00DAAC                     u250:
   413  00DAAC  0101               	movlb	(_M+3) shr (0+8)
   414  00DAAE  A703               	btfss	(_M+3)& (0+255),3,b
   415  00DAB0  D005               	goto	u290
   416  00DAB2  0101               	movlb	(_M+1) shr (0+8)
   417  00DAB4  A101               	btfss	(_M+1)& (0+255),0,b
   418  00DAB6  D002               	goto	u290
   419  00DAB8                     u281:
   420  00DAB8  0E01               	movlw	1
   421  00DABA  D001               	goto	u300
   422  00DABC                     u290:
   423  00DABC  0E00               	movlw	0
   424  00DABE                     u300:
   425  00DABE  6E00               	movwf	btemp,c
   426  00DAC0  EE0E  F0BF         	lfsr	0,_SPort+12
   427  00DAC4  18EF               	xorwf	indf0,w,c
   428  00DAC6  0BFE               	andlw	-2
   429  00DAC8  1800               	xorwf	btemp,w,c
   430  00DACA  6EEF               	movwf	indf0,c
   431                           ;port.c: 88: SPort[13].Input=(DtCO._cold_CO||DtC
      +                          O._hot_CO)?1:0;
   432  00DACC  0101               	movlb	(_DtCO+1) shr (0+8)
   433  00DACE  B5B7               	btfsc	(_DtCO+1)& (0+255),2,b
   434  00DAD0  D003               	goto	u331
   435  00DAD2  0101               	movlb	(_DtCO+1) shr (0+8)
   436  00DAD4  A7B7               	btfss	(_DtCO+1)& (0+255),3,b
   437  00DAD6  D002               	goto	u330
   438  00DAD8                     u331:
   439  00DAD8  0E01               	movlw	1
   440  00DADA  D001               	goto	u340
   441  00DADC                     u330:
   442  00DADC  0E00               	movlw	0
   443  00DADE                     u340:
   444  00DADE  6E00               	movwf	btemp,c
   445  00DAE0  EE0E  F0C0         	lfsr	0,_SPort+13
   446  00DAE4  18EF               	xorwf	indf0,w,c
   447  00DAE6  0BFE               	andlw	-2
   448  00DAE8  1800               	xorwf	btemp,w,c
   449  00DAEA  6EEF               	movwf	indf0,c
   450                           ;port.c: 90: SPort[14].Input=(DtCS._error)?1:0;
   451  00DAEC  0101               	movlb	_DtCS shr (0+8)
   452  00DAEE  0E00               	movlw	0
   453  00DAF0  B798               	btfsc	_DtCS& (0+255),3,b
   454  00DAF2  0E01               	movlw	1
   455  00DAF4  6E00               	movwf	btemp,c
   456  00DAF6  EE0E  F0C1         	lfsr	0,_SPort+14
   457  00DAFA  18EF               	xorwf	indf0,w,c
   458  00DAFC  0BFE               	andlw	-2
   459  00DAFE  1800               	xorwf	btemp,w,c
   460  00DB00  6EEF               	movwf	indf0,c
   461                           ;port.c: 92: SPort[15].Input=(DtCS._work)?1:0;
   462  00DB02  0E00               	movlw	0
   463  00DB04  B998               	btfsc	_DtCS& (0+255),4,b
   464  00DB06  0E01               	movlw	1
   465  00DB08  6E00               	movwf	btemp,c
   466  00DB0A  EE0E  F0C2         	lfsr	0,_SPort+15
   467  00DB0E  18EF               	xorwf	indf0,w,c
   468  00DB10  0BFE               	andlw	-2
   469  00DB12  1800               	xorwf	btemp,w,c
   470  00DB14  6EEF               	movwf	indf0,c
   471                           ;port.c: 94: SPort[16].Input=(DtCS._lo)?1:0;
   472  00DB16  0E00               	movlw	0
   473  00DB18  B398               	btfsc	_DtCS& (0+255),1,b
   474  00DB1A  0E01               	movlw	1
   475  00DB1C  6E00               	movwf	btemp,c
   476  00DB1E  EE0E  F0C3         	lfsr	0,_SPort+16
   477  00DB22  18EF               	xorwf	indf0,w,c
   478  00DB24  0BFE               	andlw	-2
   479  00DB26  1800               	xorwf	btemp,w,c
   480  00DB28  6EEF               	movwf	indf0,c
   481                           ;port.c: 96: SPort[17].Input=(DtCW._cold_CW)?1:0
      +                          ;
   482  00DB2A  0101               	movlb	_DtCW shr (0+8)
   483  00DB2C  0E00               	movlw	0
   484  00DB2E  BFA7               	btfsc	_DtCW& (0+255),7,b
   485  00DB30  0E01               	movlw	1
   486  00DB32  6E00               	movwf	btemp,c
   487  00DB34  EE0E  F0C4         	lfsr	0,_SPort+17
   488  00DB38  18EF               	xorwf	indf0,w,c
   489  00DB3A  0BFE               	andlw	-2
   490  00DB3C  1800               	xorwf	btemp,w,c
   491  00DB3E  6EEF               	movwf	indf0,c
   492                           ;port.c: 98: SPort[18].Input=(DtCO._err_CO)?1:0;
   493  00DB40  0101               	movlb	_DtCO shr (0+8)
   494  00DB42  0E00               	movlw	0
   495  00DB44  B1B6               	btfsc	_DtCO& (0+255),0,b
   496  00DB46  0E01               	movlw	1
   497  00DB48  6E00               	movwf	btemp,c
   498  00DB4A  EE0E  F0C5         	lfsr	0,_SPort+18
   499  00DB4E  18EF               	xorwf	indf0,w,c
   500  00DB50  0BFE               	andlw	-2
   501  00DB52  1800               	xorwf	btemp,w,c
   502  00DB54  6EEF               	movwf	indf0,c
   503                           ;port.c: 100: SPort[19].Input=(DtCO._ad_CO)?1:0;
   504  00DB56  0E00               	movlw	0
   505  00DB58  B5B6               	btfsc	_DtCO& (0+255),2,b
   506  00DB5A  0E01               	movlw	1
   507  00DB5C  6E00               	movwf	btemp,c
   508  00DB5E  EE0E  F0C6         	lfsr	0,_SPort+19
   509  00DB62  18EF               	xorwf	indf0,w,c
   510  00DB64  0BFE               	andlw	-2
   511  00DB66  1800               	xorwf	btemp,w,c
   512  00DB68  6EEF               	movwf	indf0,c
   513                           ;port.c: 102: SPort[20].Input=(DtZW._on_ZW)?1:0;
   514  00DB6A  0101               	movlb	_DtZW shr (0+8)
   515  00DB6C  0E00               	movlw	0
   516  00DB6E  B19C               	btfsc	_DtZW& (0+255),0,b
   517  00DB70  0E01               	movlw	1
   518  00DB72  6E00               	movwf	btemp,c
   519  00DB74  EE0E  F0C7         	lfsr	0,_SPort+20
   520  00DB78  18EF               	xorwf	indf0,w,c
   521  00DB7A  0BFE               	andlw	-2
   522  00DB7C  1800               	xorwf	btemp,w,c
   523  00DB7E  6EEF               	movwf	indf0,c
   524                           ;port.c: 104: SPort[21].Input=(RA6)?1:0;
   525  00DB80  010E               	movlb	(_SPort+21) shr (0+8)
   526  00DB82  91C8               	bcf	(_SPort+21)& (0+255),0,b
   527  00DB84  BC80               	btfsc	3968,6,c	;volatile
   528  00DB86  81C8               	bsf	(_SPort+21)& (0+255),0,b
   529                           ;port.c: 106: SPort[22].Input=(RD5)?1:0;
   530  00DB88  010E               	movlb	(_SPort+22) shr (0+8)
   531  00DB8A  91C9               	bcf	(_SPort+22)& (0+255),0,b
   532  00DB8C  BA83               	btfsc	3971,5,c	;volatile
   533  00DB8E  81C9               	bsf	(_SPort+22)& (0+255),0,b
   534                           ;port.c: 108: }
   535  00DB90  0012               	return	
   536  00DB92                     __end_of_RefStan:
   537                           ;port.c: 112: void FrsStan(void)
   538                           ;port.c: 113: {
   539  00DB92                     _FrsStan:
   540  000000                     
   541                           ;port.c: 115: SPort[0].Output=SPort[0].Input;
   542  00DB92  CEB3  F000         	movff	_SPort,btemp	;volatile
   543  00DB96  010E               	movlb	_SPort shr (0+8)	;volatile
   544  00DB98  93B3               	bcf	_SPort& (0+255),1,b	;volatile
   545  00DB9A  B000               	btfsc	btemp,0,c
   546  00DB9C  83B3               	bsf	_SPort& (0+255),1,b	;volatile
   547                           ;port.c: 116: SPort[0].Timer=0;
   548  00DB9E  EE0E  F0B3         	lfsr	0,_SPort	;volatile
   549  00DBA2  0E03               	movlw	-253
   550  00DBA4  16EF               	andwf	indf0,f,c
   551                           ;port.c: 119: SPort[1].Output=SPort[1].Input;
   552  00DBA6  CEB4  F000         	movff	_SPort+1,btemp
   553  00DBAA  010E               	movlb	(_SPort+1) shr (0+8)
   554  00DBAC  93B4               	bcf	(_SPort+1)& (0+255),1,b
   555  00DBAE  B000               	btfsc	btemp,0,c
   556  00DBB0  83B4               	bsf	(_SPort+1)& (0+255),1,b
   557                           ;port.c: 120: SPort[1].Timer=0;
   558  00DBB2  EE0E  F0B4         	lfsr	0,_SPort+1
   559  00DBB6  16EF               	andwf	indf0,f,c
   560                           ;port.c: 123: SPort[2].Output=SPort[2].Input;
   561  00DBB8  CEB5  F000         	movff	_SPort+2,btemp
   562  00DBBC  010E               	movlb	(_SPort+2) shr (0+8)
   563  00DBBE  93B5               	bcf	(_SPort+2)& (0+255),1,b
   564  00DBC0  B000               	btfsc	btemp,0,c
   565  00DBC2  83B5               	bsf	(_SPort+2)& (0+255),1,b
   566                           ;port.c: 124: SPort[2].Timer=0;
   567  00DBC4  EE0E  F0B5         	lfsr	0,_SPort+2
   568  00DBC8  16EF               	andwf	indf0,f,c
   569                           ;port.c: 127: SPort[3].Output=SPort[3].Input;
   570  00DBCA  CEB6  F000         	movff	_SPort+3,btemp
   571  00DBCE  010E               	movlb	(_SPort+3) shr (0+8)
   572  00DBD0  93B6               	bcf	(_SPort+3)& (0+255),1,b
   573  00DBD2  B000               	btfsc	btemp,0,c
   574  00DBD4  83B6               	bsf	(_SPort+3)& (0+255),1,b
   575                           ;port.c: 128: SPort[3].Timer=0;
   576  00DBD6  EE0E  F0B6         	lfsr	0,_SPort+3
   577  00DBDA  16EF               	andwf	indf0,f,c
   578                           ;port.c: 131: SPort[4].Output=SPort[4].Input;
   579  00DBDC  CEB7  F000         	movff	_SPort+4,btemp
   580  00DBE0  010E               	movlb	(_SPort+4) shr (0+8)
   581  00DBE2  93B7               	bcf	(_SPort+4)& (0+255),1,b
   582  00DBE4  B000               	btfsc	btemp,0,c
   583  00DBE6  83B7               	bsf	(_SPort+4)& (0+255),1,b
   584                           ;port.c: 132: SPort[4].Timer=0;
   585  00DBE8  EE0E  F0B7         	lfsr	0,_SPort+4
   586  00DBEC  16EF               	andwf	indf0,f,c
   587                           ;port.c: 135: SPort[5].Output=SPort[5].Input;
   588  00DBEE  CEB8  F000         	movff	_SPort+5,btemp
   589  00DBF2  010E               	movlb	(_SPort+5) shr (0+8)
   590  00DBF4  93B8               	bcf	(_SPort+5)& (0+255),1,b
   591  00DBF6  B000               	btfsc	btemp,0,c
   592  00DBF8  83B8               	bsf	(_SPort+5)& (0+255),1,b
   593                           ;port.c: 136: SPort[5].Timer=0;
   594  00DBFA  EE0E  F0B8         	lfsr	0,_SPort+5
   595  00DBFE  16EF               	andwf	indf0,f,c
   596                           ;port.c: 139: SPort[6].Output=SPort[6].Input;
   597  00DC00  CEB9  F000         	movff	_SPort+6,btemp
   598  00DC04  010E               	movlb	(_SPort+6) shr (0+8)
   599  00DC06  93B9               	bcf	(_SPort+6)& (0+255),1,b
   600  00DC08  B000               	btfsc	btemp,0,c
   601  00DC0A  83B9               	bsf	(_SPort+6)& (0+255),1,b
   602                           ;port.c: 140: SPort[6].Timer=0;
   603  00DC0C  EE0E  F0B9         	lfsr	0,_SPort+6
   604  00DC10  16EF               	andwf	indf0,f,c
   605                           ;port.c: 143: SPort[7].Output=SPort[7].Input;
   606  00DC12  CEBA  F000         	movff	_SPort+7,btemp
   607  00DC16  010E               	movlb	(_SPort+7) shr (0+8)
   608  00DC18  93BA               	bcf	(_SPort+7)& (0+255),1,b
   609  00DC1A  B000               	btfsc	btemp,0,c
   610  00DC1C  83BA               	bsf	(_SPort+7)& (0+255),1,b
   611                           ;port.c: 144: SPort[7].Timer=0;
   612  00DC1E  EE0E  F0BA         	lfsr	0,_SPort+7
   613  00DC22  16EF               	andwf	indf0,f,c
   614                           ;port.c: 147: SPort[8].Output=SPort[8].Input;
   615  00DC24  CEBB  F000         	movff	_SPort+8,btemp
   616  00DC28  010E               	movlb	(_SPort+8) shr (0+8)
   617  00DC2A  93BB               	bcf	(_SPort+8)& (0+255),1,b
   618  00DC2C  B000               	btfsc	btemp,0,c
   619  00DC2E  83BB               	bsf	(_SPort+8)& (0+255),1,b
   620                           ;port.c: 148: SPort[8].Timer=0;
   621  00DC30  EE0E  F0BB         	lfsr	0,_SPort+8
   622  00DC34  16EF               	andwf	indf0,f,c
   623                           ;port.c: 151: SPort[9].Output=SPort[9].Input;
   624  00DC36  CEBC  F000         	movff	_SPort+9,btemp
   625  00DC3A  010E               	movlb	(_SPort+9) shr (0+8)
   626  00DC3C  93BC               	bcf	(_SPort+9)& (0+255),1,b
   627  00DC3E  B000               	btfsc	btemp,0,c
   628  00DC40  83BC               	bsf	(_SPort+9)& (0+255),1,b
   629                           ;port.c: 152: SPort[9].Timer=0;
   630  00DC42  EE0E  F0BC         	lfsr	0,_SPort+9
   631  00DC46  16EF               	andwf	indf0,f,c
   632                           ;port.c: 155: SPort[10].Output=SPort[10].Input;
   633  00DC48  CEBD  F000         	movff	_SPort+10,btemp
   634  00DC4C  010E               	movlb	(_SPort+10) shr (0+8)
   635  00DC4E  93BD               	bcf	(_SPort+10)& (0+255),1,b
   636  00DC50  B000               	btfsc	btemp,0,c
   637  00DC52  83BD               	bsf	(_SPort+10)& (0+255),1,b
   638                           ;port.c: 156: SPort[10].Timer=0;
   639  00DC54  EE0E  F0BD         	lfsr	0,_SPort+10
   640  00DC58  16EF               	andwf	indf0,f,c
   641                           ;port.c: 159: SPort[11].Output=SPort[11].Input;
   642  00DC5A  CEBE  F000         	movff	_SPort+11,btemp
   643  00DC5E  010E               	movlb	(_SPort+11) shr (0+8)
   644  00DC60  93BE               	bcf	(_SPort+11)& (0+255),1,b
   645  00DC62  B000               	btfsc	btemp,0,c
   646  00DC64  83BE               	bsf	(_SPort+11)& (0+255),1,b
   647                           ;port.c: 160: SPort[11].Timer=0;
   648  00DC66  EE0E  F0BE         	lfsr	0,_SPort+11
   649  00DC6A  16EF               	andwf	indf0,f,c
   650                           ;port.c: 163: SPort[12].Output=SPort[12].Input;
   651  00DC6C  CEBF  F000         	movff	_SPort+12,btemp
   652  00DC70  010E               	movlb	(_SPort+12) shr (0+8)
   653  00DC72  93BF               	bcf	(_SPort+12)& (0+255),1,b
   654  00DC74  B000               	btfsc	btemp,0,c
   655  00DC76  83BF               	bsf	(_SPort+12)& (0+255),1,b
   656                           ;port.c: 164: SPort[12].Timer=0;
   657  00DC78  EE0E  F0BF         	lfsr	0,_SPort+12
   658  00DC7C  16EF               	andwf	indf0,f,c
   659                           ;port.c: 167: SPort[13].Output=SPort[13].Input;
   660  00DC7E  CEC0  F000         	movff	_SPort+13,btemp
   661  00DC82  010E               	movlb	(_SPort+13) shr (0+8)
   662  00DC84  93C0               	bcf	(_SPort+13)& (0+255),1,b
   663  00DC86  B000               	btfsc	btemp,0,c
   664  00DC88  83C0               	bsf	(_SPort+13)& (0+255),1,b
   665                           ;port.c: 168: SPort[13].Timer=0;
   666  00DC8A  EE0E  F0C0         	lfsr	0,_SPort+13
   667  00DC8E  16EF               	andwf	indf0,f,c
   668                           ;port.c: 171: SPort[14].Output=SPort[14].Input;
   669  00DC90  CEC1  F000         	movff	_SPort+14,btemp
   670  00DC94  010E               	movlb	(_SPort+14) shr (0+8)
   671  00DC96  93C1               	bcf	(_SPort+14)& (0+255),1,b
   672  00DC98  B000               	btfsc	btemp,0,c
   673  00DC9A  83C1               	bsf	(_SPort+14)& (0+255),1,b
   674                           ;port.c: 172: SPort[14].Timer=0;
   675  00DC9C  EE0E  F0C1         	lfsr	0,_SPort+14
   676  00DCA0  16EF               	andwf	indf0,f,c
   677                           ;port.c: 175: SPort[15].Output=SPort[15].Input;
   678  00DCA2  CEC2  F000         	movff	_SPort+15,btemp
   679  00DCA6  010E               	movlb	(_SPort+15) shr (0+8)
   680  00DCA8  93C2               	bcf	(_SPort+15)& (0+255),1,b
   681  00DCAA  B000               	btfsc	btemp,0,c
   682  00DCAC  83C2               	bsf	(_SPort+15)& (0+255),1,b
   683                           ;port.c: 176: SPort[15].Timer=0;
   684  00DCAE  EE0E  F0C2         	lfsr	0,_SPort+15
   685  00DCB2  16EF               	andwf	indf0,f,c
   686                           ;port.c: 179: SPort[16].Output=SPort[16].Input;
   687  00DCB4  CEC3  F000         	movff	_SPort+16,btemp
   688  00DCB8  010E               	movlb	(_SPort+16) shr (0+8)
   689  00DCBA  93C3               	bcf	(_SPort+16)& (0+255),1,b
   690  00DCBC  B000               	btfsc	btemp,0,c
   691  00DCBE  83C3               	bsf	(_SPort+16)& (0+255),1,b
   692                           ;port.c: 180: SPort[16].Timer=0;
   693  00DCC0  EE0E  F0C3         	lfsr	0,_SPort+16
   694  00DCC4  16EF               	andwf	indf0,f,c
   695                           ;port.c: 183: SPort[17].Output=SPort[17].Input;
   696  00DCC6  CEC4  F000         	movff	_SPort+17,btemp
   697  00DCCA  010E               	movlb	(_SPort+17) shr (0+8)
   698  00DCCC  93C4               	bcf	(_SPort+17)& (0+255),1,b
   699  00DCCE  B000               	btfsc	btemp,0,c
   700  00DCD0  83C4               	bsf	(_SPort+17)& (0+255),1,b
   701                           ;port.c: 184: SPort[17].Timer=0;
   702  00DCD2  EE0E  F0C4         	lfsr	0,_SPort+17
   703  00DCD6  16EF               	andwf	indf0,f,c
   704                           ;port.c: 187: SPort[18].Output=SPort[18].Input;
   705  00DCD8  CEC5  F000         	movff	_SPort+18,btemp
   706  00DCDC  010E               	movlb	(_SPort+18) shr (0+8)
   707  00DCDE  93C5               	bcf	(_SPort+18)& (0+255),1,b
   708  00DCE0  B000               	btfsc	btemp,0,c
   709  00DCE2  83C5               	bsf	(_SPort+18)& (0+255),1,b
   710                           ;port.c: 188: SPort[18].Timer=0;
   711  00DCE4  EE0E  F0C5         	lfsr	0,_SPort+18
   712  00DCE8  16EF               	andwf	indf0,f,c
   713                           ;port.c: 191: SPort[19].Output=SPort[19].Input;
   714  00DCEA  CEC6  F000         	movff	_SPort+19,btemp
   715  00DCEE  010E               	movlb	(_SPort+19) shr (0+8)
   716  00DCF0  93C6               	bcf	(_SPort+19)& (0+255),1,b
   717  00DCF2  B000               	btfsc	btemp,0,c
   718  00DCF4  83C6               	bsf	(_SPort+19)& (0+255),1,b
   719                           ;port.c: 192: SPort[19].Timer=0;
   720  00DCF6  EE0E  F0C6         	lfsr	0,_SPort+19
   721  00DCFA  16EF               	andwf	indf0,f,c
   722                           ;port.c: 195: SPort[20].Output=SPort[20].Input;
   723  00DCFC  CEC7  F000         	movff	_SPort+20,btemp
   724  00DD00  010E               	movlb	(_SPort+20) shr (0+8)
   725  00DD02  93C7               	bcf	(_SPort+20)& (0+255),1,b
   726  00DD04  B000               	btfsc	btemp,0,c
   727  00DD06  83C7               	bsf	(_SPort+20)& (0+255),1,b
   728                           ;port.c: 196: SPort[20].Timer=0;
   729  00DD08  EE0E  F0C7         	lfsr	0,_SPort+20
   730  00DD0C  16EF               	andwf	indf0,f,c
   731                           ;port.c: 199: SPort[21].Output=SPort[21].Input;
   732  00DD0E  CEC8  F000         	movff	_SPort+21,btemp
   733  00DD12  010E               	movlb	(_SPort+21) shr (0+8)
   734  00DD14  93C8               	bcf	(_SPort+21)& (0+255),1,b
   735  00DD16  B000               	btfsc	btemp,0,c
   736  00DD18  83C8               	bsf	(_SPort+21)& (0+255),1,b
   737                           ;port.c: 200: SPort[21].Timer=0;
   738  00DD1A  EE0E  F0C8         	lfsr	0,_SPort+21
   739  00DD1E  16EF               	andwf	indf0,f,c
   740                           ;port.c: 203: SPort[22].Output=SPort[22].Input;
   741  00DD20  CEC9  F000         	movff	_SPort+22,btemp
   742  00DD24  010E               	movlb	(_SPort+22) shr (0+8)
   743  00DD26  93C9               	bcf	(_SPort+22)& (0+255),1,b
   744  00DD28  B000               	btfsc	btemp,0,c
   745  00DD2A  83C9               	bsf	(_SPort+22)& (0+255),1,b
   746                           ;port.c: 204: SPort[22].Timer=0;
   747  00DD2C  EE0E  F0C9         	lfsr	0,_SPort+22
   748  00DD30  16EF               	andwf	indf0,f,c
   749                           ;port.c: 206: }
   750  00DD32  0C03               	retlw	3
   751  00DD34                     __end_of_FrsStan:
   752                           ;port.c: 211: void InitPort(void)
   753                           ;port.c: 212: {
   754  00DD34                     _InitPort:
   755  000000                     
   756                           ;port.c: 225: PORTA=0b00000000;
   757  00DD34  6A80               	clrf	3968,c	;volatile
   758                           ;port.c: 226: TRISA=0b11111111;
   759  00DD36  6892               	setf	3986,c	;volatile
   760                           ;port.c: 227: PORTB=0b00000000;
   761  00DD38  6A81               	clrf	3969,c	;volatile
   762                           ;port.c: 228: TRISB=0b11111111;
   763  00DD3A  6893               	setf	3987,c	;volatile
   764                           ;port.c: 229: PORTC=0b00000000;
   765  00DD3C  6A82               	clrf	3970,c	;volatile
   766                           ;port.c: 230: TRISC=0b11111001;
   767  00DD3E  0EF9               	movlw	249
   768  00DD40  6E94               	movwf	3988,c	;volatile
   769                           ;port.c: 231: PORTD=0b00000000;
   770  00DD42  6A83               	clrf	3971,c	;volatile
   771                           ;port.c: 232: TRISD=0b00110000;
   772  00DD44  0E30               	movlw	48
   773  00DD46  6E95               	movwf	3989,c	;volatile
   774                           ;port.c: 233: PORTE=0b00000000;
   775  00DD48  6A84               	clrf	3972,c	;volatile
   776                           ;port.c: 234: TRISE=(TRISE&0b11111000)|(0b111111
      +                          11&0b00000111);
   777  00DD4A  5096               	movf	3990,w,c	;volatile
   778  00DD4C  0BF8               	andlw	-8
   779  00DD4E  0907               	iorlw	7
   780  00DD50  6E96               	movwf	3990,c	;volatile
   781                           ;port.c: 237: RefStan();
   782  00DD52  DE32               	call	_RefStan	;wreg free
   783                           ;port.c: 238: FrsStan();
   784  00DD54  D71E               	goto	_FrsStan	;wreg free
   785                           ;port.c: 240: }
   786  00DD56                     __end_of_InitPort:
   787                           ;port.c: 243: void StabPort(void)
   788                           ;port.c: 244: {
   789  00DD56                     _StabPort:
   790  000000                     
   791                           ;port.c: 245: static unsigned char tim=0;
   792  00DD56  010E               	movlb	F1444 shr (0+8)
   793  00DD58  2BB2               	incf	F1444& (0+255),f,b
   794  00DD5A  05B2               	decf	F1444& (0+255),w,b
   795  00DD5C  6E00               	movwf	btemp,c
   796  00DD5E  0E05               	movlw	5
   797  00DD60  5C00               	subwf	btemp,w,c
   798  00DD62  A0D8               	btfss	status,0,c
   799  00DD64  0012               	return	
   800                           ;port.c: 250: tim=0;
   801  00DD66  6BB2               	clrf	F1444& (0+255),b
   802                           ;port.c: 253: RefStan();
   803  00DD68  DE27               	call	_RefStan	;wreg free
   804                           ;port.c: 256: for(i=0;i<23;i++)
   805  00DD6A  6AD9               	clrf	fsr2l,c
   806  00DD6C                     l16:
   807                           ;port.c: 257: {
   808  00DD6C  50D9               	movf	fsr2l,w,c
   809  00DD6E  EE0E  F0B3         	lfsr	0,_SPort
   810  00DD72  26E9               	addwf	fsr0l,f,c
   811  00DD74  0E00               	movlw	0
   812  00DD76  22EA               	addwfc	fsr0h,f,c
   813  00DD78  30EF               	rrcf	indf0,w,c
   814  00DD7A  6E00               	movwf	btemp,c
   815  00DD7C  3000               	rrcf	btemp,w,c
   816  00DD7E  0B3F               	andlw	63
   817  00DD80  E114               	bnz	l19
   818                           ;port.c: 259: {
   819  00DD82  50D9               	movf	fsr2l,w,c
   820  00DD84  EE0E  F0B3         	lfsr	0,_SPort
   821  00DD88  26E9               	addwf	fsr0l,f,c
   822  00DD8A  0E00               	movlw	0
   823  00DD8C  22EA               	addwfc	fsr0h,f,c
   824  00DD8E  50EF               	movf	indf0,w,c
   825  00DD90  0B01               	andlw	1
   826  00DD92  6E00               	movwf	btemp,c
   827  00DD94  50D9               	movf	fsr2l,w,c
   828  00DD96  EE0E  F0B3         	lfsr	0,_SPort
   829  00DD9A  26E9               	addwf	fsr0l,f,c
   830  00DD9C  0E00               	movlw	0
   831  00DD9E  22EA               	addwfc	fsr0h,f,c
   832  00DDA0  30EF               	rrcf	indf0,w,c
   833  00DDA2  0B01               	andlw	1
   834  00DDA4  1800               	xorwf	btemp,w,c
   835  00DDA6  E073               	bz	l18
   836  00DDA8  D05F               	goto	l27
   837                           ;port.c: 261: continue;
   838                           ;port.c: 262: else SPort[i].Timer++;
   839                           ;port.c: 263: }
   840  00DDAA                     l19:
   841                           ;port.c: 264: else
   842  00DDAA  50D9               	movf	fsr2l,w,c
   843  00DDAC  EE0E  F0B3         	lfsr	0,_SPort
   844  00DDB0  26E9               	addwf	fsr0l,f,c
   845  00DDB2  0E00               	movlw	0
   846  00DDB4  22EA               	addwfc	fsr0h,f,c
   847  00DDB6  50EF               	movf	indf0,w,c
   848  00DDB8  6E00               	movwf	btemp,c
   849  00DDBA  50D9               	movf	fsr2l,w,c
   850  00DDBC  0D02               	mullw	2
   851  00DDBE  50F3               	movf	prodl,w,c
   852  00DDC0  0F00               	addlw	low _Nastawa
   853  00DDC2  6EF6               	movwf	tblptrl,c
   854  00DDC4  50F4               	movf	prodh,w,c
   855  00DDC6  6EF7               	movwf	tblptrh,c
   856  00DDC8  0E10               	movlw	high _Nastawa
   857                           ;port.c: 267: else delay=Nastawa[i].Delay2;
   858  00DDCA  22F7               	addwfc	tblptrh,f,c
   859  00DDCC  A200               	btfss	btemp,1,c
   860  00DDCE  D003               	goto	L5
   861  00DDD0  2AF6               	incf	tblptrl,f,c
   862  00DDD2  0E00               	movlw	0
   863  00DDD4  22F7               	addwfc	tblptrh,f,c
   864  00DDD6                     L5:
   865  00DDD6  0008               	tblrd		*
   866  00DDD8  50F5               	movf	tablat,w,c
   867  00DDDA  6EE1               	movwf	fsr1l,c
   868                           ;port.c: 269: if(SPort[i].Timer>=delay)
   869  00DDDC  50D9               	movf	fsr2l,w,c
   870  00DDDE  EE0E  F0B3         	lfsr	0,_SPort
   871  00DDE2  26E9               	addwf	fsr0l,f,c
   872  00DDE4  0E00               	movlw	0
   873  00DDE6  22EA               	addwfc	fsr0h,f,c
   874  00DDE8  30EF               	rrcf	indf0,w,c
   875  00DDEA  6E00               	movwf	btemp,c
   876  00DDEC  3000               	rrcf	btemp,w,c
   877  00DDEE  0B3F               	andlw	63
   878  00DDF0  6E00               	movwf	btemp,c
   879  00DDF2  50E1               	movf	fsr1l,w,c
   880  00DDF4  5C00               	subwf	btemp,w,c
   881  00DDF6  E31C               	bnc	l25
   882                           ;port.c: 270: {
   883  00DDF8  50D9               	movf	fsr2l,w,c
   884  00DDFA  EE0E  F0B3         	lfsr	0,_SPort
   885  00DDFE  26E9               	addwf	fsr0l,f,c
   886  00DE00  0E00               	movlw	0
   887  00DE02  22EA               	addwfc	fsr0h,f,c
   888  00DE04  0E03               	movlw	-253
   889  00DE06  16EF               	andwf	indf0,f,c
   890                           ;port.c: 272: SPort[i].Output=SPort[i].Input;
   891  00DE08  50D9               	movf	fsr2l,w,c
   892  00DE0A  EE0E  F0B3         	lfsr	0,_SPort
   893  00DE0E  26E9               	addwf	fsr0l,f,c
   894  00DE10  0E00               	movlw	0
   895  00DE12  22EA               	addwfc	fsr0h,f,c
   896  00DE14  50EF               	movf	indf0,w,c
   897  00DE16  0B01               	andlw	1
   898  00DE18  6E00               	movwf	btemp,c
   899  00DE1A  50D9               	movf	fsr2l,w,c
   900  00DE1C  EE0E  F0B3         	lfsr	0,_SPort
   901  00DE20  26E9               	addwf	fsr0l,f,c
   902  00DE22  0E00               	movlw	0
   903  00DE24  22EA               	addwfc	fsr0h,f,c
   904  00DE26  3600               	rlcf	btemp,f,c
   905  00DE28  50EF               	movf	indf0,w,c
   906  00DE2A  1800               	xorwf	btemp,w,c
   907  00DE2C  0BFD               	andlw	-3
   908  00DE2E  D02D               	goto	L3
   909                           ;port.c: 273: }
   910  00DE30                     l25:
   911                           ;port.c: 274: else
   912  00DE30  50D9               	movf	fsr2l,w,c
   913  00DE32  EE0E  F0B3         	lfsr	0,_SPort
   914  00DE36  26E9               	addwf	fsr0l,f,c
   915  00DE38  0E00               	movlw	0
   916  00DE3A  22EA               	addwfc	fsr0h,f,c
   917  00DE3C  50EF               	movf	indf0,w,c
   918  00DE3E  0B01               	andlw	1
   919  00DE40  6E00               	movwf	btemp,c
   920  00DE42  50D9               	movf	fsr2l,w,c
   921  00DE44  EE0E  F0B3         	lfsr	0,_SPort
   922  00DE48  26E9               	addwf	fsr0l,f,c
   923  00DE4A  0E00               	movlw	0
   924  00DE4C  22EA               	addwfc	fsr0h,f,c
   925  00DE4E  30EF               	rrcf	indf0,w,c
   926  00DE50  0B01               	andlw	1
   927  00DE52  1800               	xorwf	btemp,w,c
   928  00DE54  E109               	bnz	l27
   929                           ;port.c: 277: SPort[i].Timer=0;
   930  00DE56  50D9               	movf	fsr2l,w,c
   931  00DE58  EE0E  F0B3         	lfsr	0,_SPort
   932  00DE5C  26E9               	addwf	fsr0l,f,c
   933  00DE5E  0E00               	movlw	0
   934  00DE60  22EA               	addwfc	fsr0h,f,c
   935  00DE62  0E03               	movlw	-253
   936  00DE64  16EF               	andwf	indf0,f,c
   937  00DE66  D013               	goto	l18
   938  00DE68                     l27:
   939                           ;port.c: 278: else SPort[i].Timer++;
   940  00DE68  50D9               	movf	fsr2l,w,c
   941  00DE6A  EE0E  F0B3         	lfsr	0,_SPort
   942  00DE6E  26E9               	addwf	fsr0l,f,c
   943  00DE70  0E00               	movlw	0
   944  00DE72  22EA               	addwfc	fsr0h,f,c
   945  00DE74  30EF               	rrcf	indf0,w,c
   946  00DE76  6E00               	movwf	btemp,c
   947  00DE78  3000               	rrcf	btemp,w,c
   948  00DE7A  0B3F               	andlw	63
   949  00DE7C  6E00               	movwf	btemp,c
   950  00DE7E  2A00               	incf	btemp,f,c
   951  00DE80  3600               	rlcf	btemp,f,c
   952  00DE82  3600               	rlcf	btemp,f,c
   953  00DE84  50EF               	movf	indf0,w,c
   954  00DE86  1800               	xorwf	btemp,w,c
   955  00DE88  0B03               	andlw	-253
   956  00DE8A                     L3:
   957  00DE8A  1800               	xorwf	btemp,w,c
   958  00DE8C  6EEF               	movwf	indf0,c
   959  00DE8E                     l18:
   960  00DE8E  2AD9               	incf	fsr2l,f,c
   961  00DE90  0E16               	movlw	22
   962  00DE92  64D9               	cpfsgt	fsr2l,c
   963  00DE94  D76B               	goto	l16
   964  00DE96  0C16               	retlw	22
   965                           ;port.c: 279: }
   966  00DE98                     __end_of_StabPort:
   967                           ;port.c: 285: bit RdPrt(const unsigned char Inde
      +                          x)
   968                           ;port.c: 286: {
   969  00DE98                     _RdPrt:
   970  000000                     
   971                           ; _Index loaded to fsr2l
   972  00DE98  6ED9               	movwf	fsr2l,c
   973                           ;port.c: 287: if (Index>23-1) asm("RESET");
   974  00DE9A  0E16               	movlw	22
   975  00DE9C  64D9               	cpfsgt	fsr2l,c
   976  00DE9E  D001               	goto	l30
   977  00DEA0  00FF               	reset		;#
   978  00DEA2                     l30:
   979                           ;port.c: 288: return SPort[Index].Output;
   980  00DEA2  50D9               	movf	fsr2l,w,c
   981  00DEA4  EE0E  F0B3         	lfsr	0,_SPort
   982  00DEA8  26E9               	addwf	fsr0l,f,c
   983  00DEAA  0E00               	movlw	0
   984  00DEAC  22EA               	addwfc	fsr0h,f,c
   985  00DEAE  30EF               	rrcf	indf0,w,c
   986  00DEB0  0B01               	andlw	1
   987  00DEB2  6E00               	movwf	btemp,c
   988  00DEB4  3000               	rrcf	btemp,w,c
   989  00DEB6  0012               	return	
   990                           ;port.c: 289: }
   991  00DEB8                     __end_of_RdPrt:
   992                           ;       param _nw assigned to ?_SetPrt+0
   993  000000                     _SetPrt$nw	set	?_SetPrt
   994                           ;port.c: 292: void SetPrt(const unsigned char In
      +                          dex, const unsigned char nw)
   995                           ;port.c: 293: {
   996  00DEB8  00EF               	dw	?_SetPrt
   997  00DEBA                     _SetPrt:
   998  000000                     
   999                           ; _Index loaded to fsr2l
  1000  00DEBA  6ED9               	movwf	fsr2l,c
  1001                           ;port.c: 294: if (Index>23-1) asm("RESET");
  1002  00DEBC  0E16               	movlw	22
  1003  00DEBE  64D9               	cpfsgt	fsr2l,c
  1004  00DEC0  D001               	goto	l32
  1005  00DEC2  00FF               	reset		;#
  1006  00DEC4                     l32:
  1007                           ;port.c: 295: SPort[Index].Output=((!nw)?0:1);
  1008  00DEC4  0E00               	movlw	0
  1009  00DEC6  6A00               	clrf	btemp,c
  1010  00DEC8  0100               	movlb	__Lparam shr (0+8)
  1011  00DECA  63EF               	cpfseq	?_SetPrt^(__Lparam& (0+65280)),b
  1012  00DECC  2A00               	incf	btemp,f,c
  1013  00DECE  50D9               	movf	fsr2l,w,c
  1014  00DED0  EE0E  F0B3         	lfsr	0,_SPort
  1015  00DED4  26E9               	addwf	fsr0l,f,c
  1016  00DED6  0E00               	movlw	0
  1017  00DED8  22EA               	addwfc	fsr0h,f,c
  1018  00DEDA  3600               	rlcf	btemp,f,c
  1019  00DEDC  50EF               	movf	indf0,w,c
  1020  00DEDE  1800               	xorwf	btemp,w,c
  1021  00DEE0  0BFD               	andlw	-3
  1022  00DEE2  1800               	xorwf	btemp,w,c
  1023  00DEE4  6EEF               	movwf	indf0,c
  1024                           ;port.c: 296: SPort[Index].Timer=0;
  1025  00DEE6  50D9               	movf	fsr2l,w,c
  1026  00DEE8  EE0E  F0B3         	lfsr	0,_SPort
  1027  00DEEC  26E9               	addwf	fsr0l,f,c
  1028  00DEEE  0E00               	movlw	0
  1029  00DEF0  22EA               	addwfc	fsr0h,f,c
  1030  00DEF2  0E03               	movlw	-253
  1031  00DEF4  16EF               	andwf	indf0,f,c
  1032                           ;port.c: 297: }
  1033  00DEF6  0C03               	retlw	3
  1034  00DEF8                     __end_of_SetPrt:
  1035                           ;port.c: 300: void RefPrt(const unsigned char In
      +                          dex)
  1036                           ;port.c: 301: {
  1037  00DEF8                     _RefPrt:
  1038  000000                     
  1039                           ; _Index loaded to fsr2l
  1040  00DEF8  6ED9               	movwf	fsr2l,c
  1041                           ;port.c: 302: if (Index>23-1) asm("RESET");
  1042  00DEFA  0E16               	movlw	22
  1043  00DEFC  64D9               	cpfsgt	fsr2l,c
  1044  00DEFE  D001               	goto	l34
  1045  00DF00  00FF               	reset		;#
  1046  00DF02                     l34:
  1047                           ;port.c: 303: SPort[Index].Output=SPort[Index].I
      +                          nput;
  1048  00DF02  50D9               	movf	fsr2l,w,c
  1049  00DF04  EE0E  F0B3         	lfsr	0,_SPort
  1050  00DF08  26E9               	addwf	fsr0l,f,c
  1051  00DF0A  0E00               	movlw	0
  1052  00DF0C  22EA               	addwfc	fsr0h,f,c
  1053  00DF0E  50EF               	movf	indf0,w,c
  1054  00DF10  0B01               	andlw	1
  1055  00DF12  6E00               	movwf	btemp,c
  1056  00DF14  50D9               	movf	fsr2l,w,c
  1057  00DF16  EE0E  F0B3         	lfsr	0,_SPort
  1058  00DF1A  26E9               	addwf	fsr0l,f,c
  1059  00DF1C  0E00               	movlw	0
  1060  00DF1E  22EA               	addwfc	fsr0h,f,c
  1061  00DF20  3600               	rlcf	btemp,f,c
  1062  00DF22  50EF               	movf	indf0,w,c
  1063  00DF24  1800               	xorwf	btemp,w,c
  1064  00DF26  0BFD               	andlw	-3
  1065  00DF28  1800               	xorwf	btemp,w,c
  1066  00DF2A  6EEF               	movwf	indf0,c
  1067                           ;port.c: 304: SPort[Index].Timer=0;
  1068  00DF2C  50D9               	movf	fsr2l,w,c
  1069  00DF2E  EE0E  F0B3         	lfsr	0,_SPort
  1070  00DF32  26E9               	addwf	fsr0l,f,c
  1071  00DF34  0E00               	movlw	0
  1072  00DF36  22EA               	addwfc	fsr0h,f,c
  1073  00DF38  0E03               	movlw	-253
  1074  00DF3A  16EF               	andwf	indf0,f,c
  1075                           ;port.c: 305: }
  1076  00DF3C  0C03               	retlw	3
  1077  00DF3E                     __end_of_RefPrt:
  1078  000000                     
  1079  000000                     
  1080  000000                     
  1081  000000                     
  1082  000000                     
  1083  000000                     
  1084  000000                     
  1085  000000                     
  1086  000000                     
  1087  000000                     
  1088  000000                     
  1089  000000                     
  1090  000000                     
  1091  000000                     
  1092  000000                     
  1093  000000                     
  1094  000000                     
  1095  000000                     
  1096  000000                     
  1097  000000                     
  1098  000000                     
  1099  000000                     
  1100  000000                     
  1101  000000                     
  1102  000000                     
  1103  000000                     
  1104  000000                     
  1105  000000                     
  1106  000000                     
  1107  000000                     
  1108  000000                     
  1109  000000                     
  1110  000000                     
  1111  000000                     
  1112  000000                     
  1113  000000                     
  1114  000000                     
  1115  000000                     
  1116  000000                     
  1117  000000                     
  1118  000000                     
  1119  000000                     
  1120  000000                     
  1121  000000                     
  1122  000000                     
  1123  000000                     
  1124  000000                     
  1125  000000                     
  1126  000000                     
  1127  000000                     
  1128  000000                     
  1129  000000                     
  1130  000000                     
  1131  000000                     
  1132  000000                     
  1133  000000                     
  1134  000000                     
  1135  000000                     
  1136  000000                     
  1137  000000                     
  1138  000000                     
  1139  000000                     
  1140  000000                     
  1141  000000                     
  1142  000000                     
  1143  000000                     
  1144  000000                     
  1145  000000                     
  1146  000000                     
  1147  000000                     
  1148  000000                     
  1149  000000                     
  1150  000000                     
  1151  000000                     
  1152  000000                     
  1153  000000                     
  1154  000000                     
  1155  000000                     
  1156  000000                     
  1157  000000                     
  1158  000000                     
  1159  000000                     
  1160  000000                     
  1161  000000                     
  1162  000000                     
  1163  000000                     
  1164  000000                     
  1165  000000                     
  1166  000000                     
  1167  000000                     
  1168  000000                     
  1169  000000                     
  1170  000000                     
  1171  000000                     
  1172  000000                     
  1173  000000                     
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  1185  000000                     
  1186  000000                     
  1187  000000                     
  1188  000000                     
  1189  000000                     
  1190  000000                     
  1191  000000                     
  1192  000000                     
  1193  000000                     
  1194  000000                     
  1195  000000                     
  1196  000000                     
  1197  000000                     
  1198  000000                     
  1199  000000                     
  1200  000000                     
  1201  000000                     
  1202  000000                     
  1203  000000                     
  1204  000000                     
  1205  000000                     
  1206  000000                     
  1207  000000                     
  1208  000000                     
  1209  000000                     
  1210  000000                     
  1211  000000                     
  1212  000000                     
  1213  000000                     
  1214  000000                     
  1215  000000                     
  1216  000000                     
  1217  000000                     
  1218  000000                     
  1219  000000                     
  1220  000000                     
  1221  000000                     
  1222  000000                     
  1223  000000                     
  1224  000000                     
  1225  000000                     
  1226  000000                     
  1227  000000                     
  1228  000000                     
  1229  000000                     
  1230  000000                     
  1231  000000                     
  1232  000000                     
  1233  000000                     
  1234  000000                     
  1235  000000                     
  1236  000000                     
  1237  000000                     
  1238  000000                     
  1239  000000                     
  1240  000000                     
  1241  000000                     
  1242  000000                     
  1243  000000                     
  1244  000000                     
  1245  000000                     
  1246  000000                     
  1247  000000                     
  1248  000000                     
  1249  000000                     
  1250  000000                     
  1251  000000                     
  1252  000000                     
  1253  000000                     
  1254  000000                     
  1255  000000                     
  1256  000000                     
  1257  000000                     
  1258  000000                     
  1259  000000                     
  1260  000000                     
  1261  000000                     
  1262  000000                     
  1263  000000                     
  1264  000000                     
  1265  000000                     
  1266  000000                     
  1267  000000                     
  1268  000000                     
  1269  000000                     
  1270  000000                     
  1271  000000                     
  1272  000000                     
  1273  000000                     
  1274  000000                     
  1275  000000                     
  1276  000000                     
  1277  000000                     
  1278  000000                     
  1279  000000                     
  1280  000000                     
  1281  000000                     
  1282  000000                     
  1283  000000                     
  1284  000000                     
  1285  000000                     
  1286  000000                     
  1287  000000                     
  1288  000000                     
  1289  000000                     
  1290  000000                     
  1291  000000                     
  1292  000000                     
  1293  000000                     
  1294  000000                     
  1295  000000                     
  1296  000000                     
  1297  000000                     
  1298  000000                     
  1299  000000                     
  1300  000000                     
  1301  000000                     
  1302  000000                     
  1303  000000                     
  1304  000000                     
  1305  000000                     
  1306  000000                     
  1307  000000                     
  1308  000000                     
  1309  000000                     
  1310  000000                     
  1311  000000                     
  1312  000000                     
  1313  000000                     
  1314  000000                     
  1315  000000                     
  1316  000000                     
  1317  000000                     
  1318  000000                     
  1319  000000                     
  1320  000000                     
  1321  000000                     
  1322  000000                     
  1323  000000                     
  1324  000000                     
  1325  000000                     
  1326  000000                     
  1327  000000                     
  1328  000000                     
  1329  000000                     
  1330  000000                     
  1331  000000                     
  1332  000000                     
  1333  000000                     
  1334  000000                     
  1335  000000                     
  1336  000000                     
  1337  000000                     
  1338  000000                     
  1339  000000                     
  1340  000000                     
  1341  000000                     
  1342  000000                     
  1343  000000                     
  1344  000000                     
  1345  000000                     
  1346  000000                     
  1347  000000                     
  1348  000000                     
  1349  000000                     
  1350  000000                     
  1351  000000                     
  1352  000000                     
  1353  000000                     
  1354  000000                     
  1355  000000                     
  1356  000000                     
  1357  000000                     
  1358  000000                     
  1359  000000                     
  1360  000000                     
  1361  000000                     
  1362  000000                     
  1363  000000                     
  1364  000000                     
  1365  000000                     
  1366  000000                     
  1367  000000                     
  1368  000000                     
  1369  000000                     
  1370  000000                     
  1371  000000                     
  1372  000000                     
  1373  000000                     
  1374  000000                     
  1375  000000                     
  1376  000000                     
  1377  000000                     
  1378  000000                     
  1379  000000                     
  1380  000000                     
  1381  000000                     
  1382  000000                     
  1383  000000                     
  1384  000000                     
  1385  000000                     
  1386  000000                     
  1387  000000                     
  1388  000000                     
  1389  000000                     
  1390  000000                     
  1391  000000                     
  1392  000000                     
  1393  000000                     
  1394  000000                     
  1395  000000                     
  1396  000000                     
  1397  000000                     
  1398  000000                     
  1399  000000                     
  1400  000000                     
  1401  000000                     
  1402  000000                     
  1403  000000                     
  1404  000000                     
  1405  000000                     
  1406  000000                     
  1407  000000                     
  1408  000000                     
  1409  000000                     
  1410  000000                     
  1411  000000                     
  1412  000000                     
  1413  000000                     
  1414  000000                     
  1415  000000                     
  1416  000000                     
  1417  000000                     
  1418  000000                     
  1419  000000                     
  1420  000000                     
  1421  000000                     
  1422  000000                     
  1423  000000                     
  1424  000000                     
  1425  000000                     
  1426  000000                     
  1427  000000                     
  1428  000000                     
  1429  000000                     
  1430  000000                     
  1431  000000                     
  1432  000000                     
  1433  000000                     
  1434  000000                     
  1435  000000                     
  1436  000000                     
  1437  000000                     
  1438  000000                     
  1439  000000                     
  1440  000000                     
  1441  000000                     
  1442  000000                     
  1443  000000                     
  1444  000000                     
  1445  000000                     
  1446  000000                     
  1447  000000                     
  1448  000000                     
  1449  000000                     
  1450  000000                     
  1451  000000                     
  1452  000000                     
  1453  000000                     
  1454  000000                     
  1455  000000                     
  1456  000000                     
  1457  000000                     
  1458  000000                     
  1459  000000                     
  1460  000000                     
  1461  000000                     
  1462  000000                     
  1463  000000                     
  1464  000000                     
  1465  000000                     
  1466  000000                     
  1467  000000                     
  1468  000000                     
  1469  000000                     
  1470  000000                     
  1471  000000                     
  1472  000000                     
  1473  000000                     
  1474  000000                     
  1475  000000                     
  1476  000000                     
  1477  000000                     
  1478  000000                     
  1479  000000                     
  1480  000000                     
  1481  000000                     
  1482  000000                     
  1483  000000                     
  1484  000000                     
  1485  000000                     
  1486  000000                     
  1487  000000                     
  1488  000000                     
  1489  000000                     
  1490  000000                     
  1491  000000                     
  1492  000000                     
  1493  000000                     
  1494  000000                     
  1495  000000                     
  1496  000000                     
  1497  000000                     
  1498  000000                     
  1499  000000                     
  1500  000000                     
  1501  000000                     
  1502  000000                     
  1503  000000                     
  1504  000000                     
  1505  000000                     
  1506  000000                     
  1507  000000                     
  1508  000000                     
  1509  000000                     
  1510  000000                     
  1511  000000                     
  1512  000000                     
  1513  000000                     
  1514                           
  1515                           	psect	bigbss
  1516  000EB2                     F1444:
  1517  000EB2                     	ds	1
  1518  000000                     
  1519  000000                     
  1520  000000                     
  1521  000000                     
  1522  000000                     
  1523  000000                     
  1524  000000                     
  1525  000000                     
  1526  000000                     
  1527  000000                     
  1528  000000                     
  1529  000000                     
  1530  000000                     
  1531  000000                     
  1532  000000                     
  1533  000000                     
  1534  000000                     
  1535  000000                     
  1536  000000                     
  1537  000000                     
  1538  000000                     
  1539  000000                     
  1540  000000                     
  1541  000000                     
  1542  000000                     
  1543  000000                     
  1544  000000                     
  1545  000000                     
  1546  000000                     
  1547  000000                     
  1548  000000                     
  1549  000000                     
  1550  000000                     
  1551  000000                     
  1552  000000                     
  1553  000000                     
  1554  000000                     
  1555  000000                     
  1556  000000                     
  1557  000000                     
  1558  000000                     
  1559  000000                     
  1560  000000                     
  1561  000000                     
  1562  000000                     
  1563  000000                     
  1564  000000                     
  1565  000000                     
  1566  000000                     
  1567  000000                     
  1568  000000                     
  1569  000000                     
  1570  000000                     
  1571  000000                     
  1572  000000                     
  1573  000000                     
  1574  000000                     
  1575  000000                     
  1576  000000                     
  1577  000000                     
  1578  000000                     
  1579  000000                     
  1580  000000                     
  1581  000000                     
  1582  000000                     
  1583  000000                     
  1584  000000                     
  1585  000000                     
  1586  000000                     
  1587  000000                     
  1588  000000                     
  1589  000000                     
  1590  000000                     
  1591  000000                     
  1592  000000                     
  1593  000000                     
  1594  000000                     
  1595  000000                     
  1596  000000                     
  1597  000000                     
  1598  000000                     
  1599  000000                     
  1600  000000                     
  1601  000000                     
  1602  000000                     
  1603  000000                     
  1604  000000                     
  1605  000000                     
  1606  000000                     
  1607  000000                     
  1608  000000                     
  1609  000000                     
  1610  000000                     
  1611  000000                     
  1612  000000                     
  1613  000000                     
  1614  000000                     
  1615  000000                     
  1616  000000                     
  1617  000000                     
  1618  000000                     
  1619  000000                     
  1620  000000                     
  1621  000000                     
  1622  000000                     
  1623  000000                     
  1624  000000                     
  1625  000000                     
  1626  000000                     
  1627  000000                     
  1628  000000                     
  1629  000000                     
  1630  000000                     
  1631  000000                     
  1632  000000                     
  1633  000000                     
  1634  000000                     
  1635  000000                     
  1636  000000                     
  1637  000000                     
  1638  000000                     
  1639  000000                     
  1640  000000                     
  1641  000000                     
  1642  000000                     
  1643  000000                     
  1644  000000                     
  1645  000000                     
  1646  000000                     
  1647  000000                     
  1648  000000                     
  1649  000000                     
  1650  000EB2                     _SPort:
  1651  000EB2                     	ds	23
  1652                           
  1653                           	psect	temp
  1654  000000                     btemp:
  1655  000000                     	ds	1
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           prodh	equ	0xFF4
  1660                           prodl	equ	0xFF3
  1661                           indf0	equ	0xFEF
  1662                           fsr0h	equ	0xFEA
  1663                           fsr0l	equ	0xFE9
  1664                           fsr1l	equ	0xFE1
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Mon Sep 14 17:44:51 2020

               _M 0100          _StabPort DD56                l30 DEA2  
              l32 DEC4                l16 DD6C                l25 DE30  
              l34 DF02                l18 DE8E                l27 DE68  
              l19 DDAA                u40 D9CE                u50 D9D0  
              u80 D9E8                u90 D9EA               u300 DABE  
             u150 DA80               u151 DA7C               u160 DA82  
             u330 DADC               u250 DAAC               u331 DAD8  
             u340 DADE               u281 DAB8               u290 DABC  
            F1444 0EB2              _DtCO 01B6              _DtCS 0198  
            _DtCW 01A7              _DtZW 019C              fsr0h 000FEA  
            indf0 000FEF              fsr0l 000FE9              fsr1l 000FE1  
            fsr2l 000FD9              btemp 0000              prodh 000FF4  
            prodl 000FF3   __end_of_FrsStan DD34   __end_of_RefStan DB92  
         ?_SetPrt 00EF     __end_of_RdPrt DEB8             _SPort 0EB3  
           _RdPrt DE98        used_btemp0 0001             tablat 000FF5  
           status 000FD8  __end_of_InitPort DD56           _FrsStan DB92  
         _RefStan D9B8           _Nastawa 1000           __Lparam 00E9  
__end_of_StabPort DE98           __ramtop 1000    __end_of_RefPrt DF3E  
  __end_of_SetPrt DEF8            _RefPrt DEF8            _SetPrt DEBA  
          tblptrh 000FF7            tblptrl 000FF6          _InitPort DD34  
