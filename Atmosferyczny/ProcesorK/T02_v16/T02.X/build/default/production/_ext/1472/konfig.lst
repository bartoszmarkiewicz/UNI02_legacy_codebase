

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Mon Sep 14 17:44:54 2020


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	data,global,class=RAM,space=1,delta=1
     5                           	psect	idata,global,class=CODE,delta=1
     6                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     7                           	psect	bss,global,class=RAM,space=1,delta=1
     8                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     	;#
    99                           
   100                           	psect	text
   101                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   102                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   103                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   104                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   105                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   106                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   107                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   108                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   109                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   110                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   111                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   112                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   113                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   114                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   115                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   116                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   117                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   118                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   119                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   120                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   121                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   122                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   123                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   124                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   125                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   126                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   127                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   128                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   129                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   130                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   131                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   132                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   133                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   134                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   135                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   136                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   137                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   138                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   139                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   140                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   141                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   142                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   143                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   144                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   145                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   146                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   147                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   148                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   149                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   150                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   151                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   152                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   153                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   154                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   155                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   156                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   157                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   158                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   159                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   160                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   161                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   162                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   163                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   164                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   165                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   166                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   167                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   168                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   169                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   170                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   171                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   172                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   173                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   174                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   175                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   176                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   177                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   178                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   179                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   180                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   181                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   182                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   183                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   184                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   185                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   186                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   187                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   188                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   189                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   190                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   191                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   192                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   193                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   194                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   195                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   196                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   197                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   198                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   199                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   200                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   201  000000                     	;#
   202                           ;	_i assigned to ?a_CopyEESTAT+1
   203  000000                     _CopyEESTAT$i	set	?a_CopyEESTAT+1
   204                           ;	_nr0 assigned to ?a_CopyEESTAT+0
   205  000000                     _CopyEESTAT$nr0	set	?a_CopyEESTAT
   206                           ;       param _nr1 assigned to ?_CopyEESTAT+0
   207  000000                     _CopyEESTAT$nr1	set	?_CopyEESTAT
   208                           ;	_d assigned to ?a_WriteEESTAT+2
   209  000000                     _WriteEESTAT$d	set	?a_WriteEESTAT+2
   210                           ;	_nr assigned to ?a_WriteEESTAT+1
   211  000000                     _WriteEESTAT$nr	set	?a_WriteEESTAT+1
   212                           ;	_e assigned to ?a_WriteEESTAT+0
   213  000000                     _WriteEESTAT$e	set	?a_WriteEESTAT
   214                           ;	_adr assigned to ?a_WriteBtySTAT+0
   215  000000                     _WriteBtySTAT$adr	set	?a_WriteBtySTAT
   216                           ;       param _dt assigned to ?_WriteBtySTAT+1
   217  000000                     _WriteBtySTAT$dt	set	?_WriteBtySTAT+1
   218                           ;       param _ind assigned to ?_WriteBtySTAT+0
   219  000000                     _WriteBtySTAT$ind	set	?_WriteBtySTAT
   220                           ;	_adr assigned to ?a_ReadBtySTAT+0
   221  000000                     _ReadBtySTAT$adr	set	?a_ReadBtySTAT
   222                           ;       param _ind assigned to ?_ReadBtySTAT+0
   223  000000                     _ReadBtySTAT$ind	set	?_ReadBtySTAT
   224                           ;       param _dt assigned to ?_WriteBtyNZSTAT+0
   225  000000                     _WriteBtyNZSTAT$dt	set	?_WriteBtyNZSTAT
   226                           ;	_ind assigned to ?a_ReadBtyNZSTAT+0
   227  000000                     _ReadBtyNZSTAT$ind	set	?a_ReadBtyNZSTAT
   228                           ;	_ind assigned to ?a_ReadBtyEEHIST+0
   229  000000                     _ReadBtyEEHIST$ind	set	?a_ReadBtyEEHIST
   230                           ;	_ind assigned to ?a_ReadBtyHREF+0
   231  000000                     _ReadBtyHREF$ind	set	?a_ReadBtyHREF
   232                           ;       param _dta assigned to ?_if_eeprom_write
      +                          +2
   233  000000                     _if_eeprom_write$dta	set	?_if_eeprom_write+2
   234                           ;       param _adr assigned to ?_if_eeprom_write
      +                          +0
   235  000000                     _if_eeprom_write$adr	set	?_if_eeprom_write
   236                           ;	_d assigned to ?a_WriteEEALIN+0
   237  000000                     _WriteEEALIN$d	set	?a_WriteEEALIN
   238                           ;	_d assigned to ?a_ReadEEPopPFN+0
   239  000000                     _ReadEEPopPFN$d	set	?a_ReadEEPopPFN
   240                           ;	_d assigned to ?a_ReadEEPFN+0
   241  000000                     _ReadEEPFN$d	set	?a_ReadEEPFN
   242                           ;	_d1 assigned to ?a_WriteEEPFN+0
   243  000000                     _WriteEEPFN$d1	set	?a_WriteEEPFN
   244                           ;	_i assigned to ?a_SetNSTCO+0
   245  000000                     _SetNSTCO$i	set	?a_SetNSTCO
   246                           ;main.h: 36: asm("\tglobal __config" "2"); asm("
      +                          \t__config" "2" " equ " "0xFFFF&0xFFFF&0xFFEF&0x
      +                          FFFF&0xEFFF");
   247  000000                     	;#
   248                           ;main.h: 38: asm("\tglobal __config" "3"); asm("
      +                          \t__config" "3" " equ " "0xFFFF&0x7FFF&0xFDFF");
   249  000000                     	;#
   250                           ;main.h: 39: asm("\tglobal __config" "4"); asm("
      +                          \t__config" "4" " equ " "0xFFFF&0xFFFF&0xFFFB&0x
      +                          FFFF");
   251  000000                     	;#
   252                           ;main.h: 42: asm("\tglobal __config" "5"); asm("
      +                          \t__config" "5" " equ " "0xFFF0");
   253  000000                     	;#
   254                           ;main.h: 43: asm("\tglobal __config" "6"); asm("
      +                          \t__config" "6" " equ " "0xFFF0&0xDFFF");
   255  000000                     	;#
   256                           ;konfig.c: 25: DtMINMAX MinMax[21]=
   257                           ;konfig.c: 26: {
   258                           ;konfig.c: 27: 0x00C1, 0, 99,
   259                           ;konfig.c: 28: 0x00C2, 0, 99,
   260                           ;konfig.c: 29: 0x00C3, 0, 99,
   261                           ;konfig.c: 30: 0x00C4, 0, 1,
   262                           ;konfig.c: 31: 0x00C6, 0, 1,
   263                           ;konfig.c: 32: 0x00C5, 0, 3,
   264                           ;konfig.c: 33: 0x00C8, 0, 1,
   265                           ;konfig.c: 34: 0x00CC, 0, 1,
   266                           ;konfig.c: 35: 0x00CD, 0, 1,
   267                           ;konfig.c: 36: 0x00D0, 0,1,
   268                           ;konfig.c: 37: 0x00D1, 5,25,
   269                           ;konfig.c: 38: 0x00D2, 15,99,
   270                           ;konfig.c: 39: 0x00D3, 25,99,
   271                           ;konfig.c: 40: 0x00D4,25,99,
   272                           ;konfig.c: 41: 0x00D5,0,15,
   273                           ;konfig.c: 42: 0x00D6,70,89,
   274                           ;konfig.c: 43: 0x00D7,0,20,
   275                           ;konfig.c: 44: 0x00D9,35,85,
   276                           ;konfig.c: 45: 0x00DA, 0, 2,
   277                           ;konfig.c: 46: 0x00DC, 0, 1,
   278                           ;konfig.c: 47: 0x00DB, 0, 1,
   279                           ;konfig.c: 48: };
   280                           ;konfig.c: 54: void EnKonf(void)
   281                           ;konfig.c: 55: {
   282  0089E4                     _EnKonf:
   283  000000                     
   284                           ;konfig.c: 56: DtKNF.enknf=1;
   285  0089E4  0102               	movlb	_DtKNF shr (0+8)
   286  0089E6  8130               	bsf	_DtKNF& (0+255),0,b
   287  0089E8  D002               	goto	L9
   288                           ;konfig.c: 57: StartRTS(0);
   289                           ;konfig.c: 58: }
   290  0089EA                     __end_of_EnKonf:
   291                           ;konfig.c: 59: void DsKonf(void)
   292                           ;konfig.c: 60: {
   293  0089EA                     _DsKonf:
   294  000000                     
   295                           ;konfig.c: 61: DtKNF.enknf=0;
   296  0089EA  0102               	movlb	_DtKNF shr (0+8)
   297  0089EC  9130               	bcf	_DtKNF& (0+255),0,b
   298  0089EE                     L9:
   299                           ;konfig.c: 62: StartRTS(0);
   300  0089EE  0E00               	movlw	0
   301  0089F0  EF6F  F073         	goto	_StartRTS
   302                           ;konfig.c: 63: }
   303  0089F4                     __end_of_DsKonf:
   304                           ;konfig.c: 66: void MKonfiguracja(void)
   305                           ;konfig.c: 67: {
   306  0089F4                     _MKonfiguracja:
   307  000000                     
   308                           ;konfig.c: 68: static unsigned char bf_AKTYWNE_K
      +                          NF=0, bf_SAVE_PAR=0;
   309  0089F4  0100               	movlb	__Lparam shr (0+8)
   310  0089F6  6BF0               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
   311  0089F8  C16F  FFE8         	movff	_RSDT1+75,wreg
   312  0089FC  ECC7  F076         	call	_GetBit2
   313  008A00  0101               	movlb	(_M+3) shr (0+8)
   314  008A02  9503               	bcf	(_M+3)& (0+255),2,b
   315  008A04  B0D8               	btfsc	status,0,c
   316  008A06  8503               	bsf	(_M+3)& (0+255),2,b
   317                           ;konfig.c: 79: if(PFN._off) EnKonf();
   318  008A08  0101               	movlb	_PFN shr (0+8)
   319  008A0A  A5A0               	btfss	_PFN& (0+255),2,b
   320  008A0C  D002               	goto	l30
   321  008A0E  DFEA               	call	_EnKonf	;wreg free
   322  008A10  D001               	goto	l31
   323  008A12                     l30:
   324                           ;konfig.c: 80: else DsKonf();
   325  008A12  DFEB               	call	_DsKonf	;wreg free
   326  008A14                     l31:
   327                           ;konfig.c: 83: if((bf_AKTYWNE_KNF&&!M._AKTYWNE_K
      +                          NF)||!MGSD._CON)
   328  008A14  010E               	movlb	F2007 shr (0+8)
   329  008A16  53E8               	movf	F2007& (0+255),f,b
   330  008A18  E003               	bz	u51
   331  008A1A  0101               	movlb	(_M+3) shr (0+8)
   332  008A1C  A503               	btfss	(_M+3)& (0+255),2,b
   333  008A1E  D003               	goto	u70
   334  008A20                     u51:
   335  008A20  0102               	movlb	_MGSD shr (0+8)
   336  008A22  BD4C               	btfsc	_MGSD& (0+255),6,b
   337  008A24  D009               	goto	l32
   338  008A26                     u70:
   339                           ;konfig.c: 84: {
   340  008A26  010E               	movlb	F2007 shr (0+8)
   341  008A28  6BE8               	clrf	F2007& (0+255),b
   342                           ;konfig.c: 86: DtKNF.wymCO=0;
   343  008A2A  0102               	movlb	_DtKNF shr (0+8)
   344  008A2C  9330               	bcf	_DtKNF& (0+255),1,b
   345                           ;konfig.c: 87: DtKNF.wymCW=0;
   346  008A2E  9530               	bcf	_DtKNF& (0+255),2,b
   347                           ;konfig.c: 88: bf_SAVE_PAR=0;
   348  008A30  010E               	movlb	F2008 shr (0+8)
   349  008A32  6BE9               	clrf	F2008& (0+255),b
   350                           ;konfig.c: 89: RdEEParam();
   351  008A34  EF4F  F04D         	goto	_RdEEParam	;wreg free
   352                           ;konfig.c: 90: return;
   353  008A38                     l32:
   354                           ;konfig.c: 91: }
   355  008A38  0101               	movlb	(_M+3) shr (0+8)
   356  008A3A  A503               	btfss	(_M+3)& (0+255),2,b
   357  008A3C  0012               	return	
   358                           ;konfig.c: 93: {
   359  008A3E  010E               	movlb	F2007 shr (0+8)
   360  008A40  53E8               	movf	F2007& (0+255),f,b
   361  008A42  E102               	bnz	l34
   362                           ;konfig.c: 95: {
   363  008A44  010E               	movlb	F2008 shr (0+8)
   364  008A46  6BE9               	clrf	F2008& (0+255),b
   365  008A48                     l34:
   366                           ;konfig.c: 97: }
   367  008A48  0E01               	movlw	1
   368  008A4A  CFE8 FEE8          	movff	wreg,F2007
   369                           ;konfig.c: 99: DtKNF.KRK=RSDT1.inKRK;
   370  008A4E  C176  F232         	movff	_RSDT1+82,_DtKNF+2
   371                           ;konfig.c: 100: RSDT1.outKRK=DtKNF.KRK;
   372  008A52  C232  F146         	movff	_DtKNF+2,_RSDT1+34
   373                           ;konfig.c: 101: switch(DtKNF.KRK)
   374  008A56  D04B               	goto	l36
   375  008A58                     l37:
   376                           ;konfig.c: 102: {
   377                           ;konfig.c: 104: {
   378  008A58  0102               	movlb	_DtKNF shr (0+8)
   379  008A5A  9330               	bcf	_DtKNF& (0+255),1,b
   380                           ;konfig.c: 106: DtKNF.wymCW=0;
   381  008A5C  9530               	bcf	_DtKNF& (0+255),2,b
   382                           ;konfig.c: 107: RefKnfPar();
   383  008A5E  D050               	goto	_RefKnfPar	;wreg free
   384                           ;konfig.c: 108: break;
   385  008A60                     l38:
   386                           ;konfig.c: 109: }
   387                           ;konfig.c: 111: {
   388  008A60  C177  F231         	movff	_RSDT1+83,_DtKNF+1
   389                           ;konfig.c: 113: RSDT1.outPRM=DtKNF.PRM;
   390  008A64  C231  F147         	movff	_DtKNF+1,_RSDT1+35
   391                           ;konfig.c: 115: if(DtKNF.PRM>2)
   392  008A68  0E02               	movlw	2
   393  008A6A  0102               	movlb	(_DtKNF+1) shr (0+8)
   394  008A6C  6531               	cpfsgt	(_DtKNF+1)& (0+255),b
   395  008A6E  D02E               	goto	l41
   396                           ;konfig.c: 116: {
   397  008A70  9330               	bcf	_DtKNF& (0+255),1,b
   398                           ;konfig.c: 118: DtKNF.wymCW=0;
   399  008A72  9530               	bcf	_DtKNF& (0+255),2,b
   400                           ;konfig.c: 119: }
   401  008A74  D02B               	goto	l41
   402  008A76                     l42:
   403                           ;konfig.c: 122: {
   404                           ;konfig.c: 125: {
   405  008A76  C178  F233         	movff	_RSDT1+84,_DtKNF+3
   406                           ;konfig.c: 127: MocStart(DtKNF.mstr);
   407  008A7A  C233  FFE8         	movff	_DtKNF+3,wreg
   408  008A7E  ECD5  F06B         	call	_MocStart
   409                           ;konfig.c: 128: DtKNF.wymCO=1;
   410  008A82  0102               	movlb	_DtKNF shr (0+8)
   411  008A84  8330               	bsf	_DtKNF& (0+255),1,b
   412                           ;konfig.c: 129: DtKNF.wymCW=0;
   413  008A86  9530               	bcf	_DtKNF& (0+255),2,b
   414                           ;konfig.c: 130: break;
   415  008A88  0012               	return	
   416  008A8A                     l43:
   417                           ;konfig.c: 131: }
   418                           ;konfig.c: 134: {
   419  008A8A  C178  F234         	movff	_RSDT1+84,_DtKNF+4
   420                           ;konfig.c: 136: MocMaksCW(DtKNF.mxcw);
   421  008A8E  C234  FFE8         	movff	_DtKNF+4,wreg
   422  008A92  EC64  F06C         	call	_MocMaksCW
   423                           ;konfig.c: 137: DtKNF.wymCO=0;
   424  008A96  0102               	movlb	_DtKNF shr (0+8)
   425  008A98  9330               	bcf	_DtKNF& (0+255),1,b
   426                           ;konfig.c: 138: if(DtKNF.tpkt==0)
   427  008A9A  EE02  F037         	lfsr	0,_DtKNF+7
   428  008A9E  50EF               	movf	indf0,w,c
   429  008AA0  E102               	bnz	l44
   430                           ;konfig.c: 139: {
   431  008AA2  8530               	bsf	_DtKNF& (0+255),2,b
   432                           ;konfig.c: 141: }
   433  008AA4  0012               	return	
   434  008AA6                     l44:
   435                           ;konfig.c: 142: else
   436  008AA6  0E0B               	movlw	11
   437  008AA8  EC4C  F06F         	call	_RdPrt
   438  008AAC  0102               	movlb	_DtKNF shr (0+8)
   439  008AAE  E302               	bnc	L7
   440  008AB0  8530               	bsf	_DtKNF& (0+255),2,b
   441  008AB2  0012               	return	
   442                           ;konfig.c: 145: else DtKNF.wymCW=0;
   443  008AB4                     L7:
   444  008AB4  9530               	bcf	_DtKNF& (0+255),2,b
   445                           ;konfig.c: 146: }
   446  008AB6  0012               	return	
   447  008AB8                     l48:
   448                           ;konfig.c: 148: }
   449                           ;konfig.c: 151: {
   450  008AB8  C178  F235         	movff	_RSDT1+84,_DtKNF+5
   451                           ;konfig.c: 153: MocMaksCO(DtKNF.mxco);
   452  008ABC  C235  FFE8         	movff	_DtKNF+5,wreg
   453  008AC0  EC2A  F06C         	call	_MocMaksCO
   454                           ;konfig.c: 154: DtKNF.wymCO=1;
   455  008AC4  0102               	movlb	_DtKNF shr (0+8)
   456  008AC6  8330               	bsf	_DtKNF& (0+255),1,b
   457                           ;konfig.c: 155: DtKNF.wymCW=0;
   458  008AC8  9530               	bcf	_DtKNF& (0+255),2,b
   459                           ;konfig.c: 156: break;
   460  008ACA  0012               	return	
   461  008ACC                     l41:
   462  008ACC  C231  FFE8         	movff	_DtKNF+1,wreg
   463  008AD0  0A00               	xorlw	0
   464  008AD2  E0D1               	bz	l42
   465  008AD4  0A01               	xorlw	1
   466  008AD6  E0D9               	bz	l43
   467  008AD8  0A03               	xorlw	3
   468  008ADA  E0EE               	bz	l48
   469  008ADC  0012               	return	
   470                           ;konfig.c: 159: break;
   471  008ADE                     l49:
   472                           ;konfig.c: 160: }
   473                           ;konfig.c: 162: {
   474  008ADE  010E               	movlb	F2008 shr (0+8)
   475  008AE0  53E9               	movf	F2008& (0+255),f,b
   476  008AE2  A4D8               	btfss	status,2,c
   477  008AE4  0012               	return	
   478                           ;konfig.c: 164: {
   479  008AE6  D855               	call	_SaveKnfPar	;wreg free
   480  008AE8  CFE8 FEE9          	movff	wreg,F2008
   481                           ;konfig.c: 166: }
   482  008AEC  0012               	return	
   483  008AEE                     l36:
   484  008AEE  C232  FFE8         	movff	_DtKNF+2,wreg
   485  008AF2  0A02               	xorlw	2
   486  008AF4  E0B1               	bz	l37
   487  008AF6  0A01               	xorlw	1
   488  008AF8  E0B3               	bz	l38
   489  008AFA  0A07               	xorlw	7
   490  008AFC  E0F0               	bz	l49
   491  008AFE  0012               	return	
   492                           ;konfig.c: 170: }
   493  008B00                     __end_of_MKonfiguracja:
   494                           ;konfig.c: 174: unsigned char RefKnfPar(void)
   495                           ;konfig.c: 175: {
   496  008B00                     _RefKnfPar:
   497  000000                     
   498                           ;konfig.c: 176: if(RSDT1.RD_KNF)
   499  008B00  0101               	movlb	(_RSDT1+1) shr (0+8)
   500  008B02  A325               	btfss	(_RSDT1+1)& (0+255),1,b
   501  008B04  0C00               	retlw	0
   502                           ;konfig.c: 177: {
   503  008B06  8725               	bsf	(_RSDT1+1)& (0+255),3,b
   504                           ;konfig.c: 179: DtKNF.mstr=RSDT1.inMSTR;
   505  008B08  C179  F233         	movff	_RSDT1+85,_DtKNF+3
   506                           ;konfig.c: 180: DtKNF.mxcw=RSDT1.inMMAXU;
   507  008B0C  C17A  F234         	movff	_RSDT1+86,_DtKNF+4
   508                           ;konfig.c: 181: DtKNF.mxco=RSDT1.inMMAXG;
   509  008B10  C17B  F235         	movff	_RSDT1+87,_DtKNF+5
   510                           ;konfig.c: 182: DtKNF.rdgz=RSDT1.inRGZ;
   511  008B14  C17C  F238         	movff	_RSDT1+88,_DtKNF+8
   512                           ;konfig.c: 183: DtKNF.aleg=RSDT1.inWANL;
   513  008B18  C17D  F24A         	movff	_RSDT1+89,_DtKNF+26
   514                           ;konfig.c: 184: DtKNF.tpkt=RSDT1.inTPKT;
   515  008B1C  C17E  F237         	movff	_RSDT1+90,_DtKNF+7
   516                           ;konfig.c: 185: DtKNF.robg=RSDT1.inWOBG;
   517  008B20  C17F  F23A         	movff	_RSDT1+91,_DtKNF+10
   518                           ;konfig.c: 186: DtKNF.opdg=RSDT1.inOPDG;
   519  008B24  C180  F23B         	movff	_RSDT1+92,_DtKNF+11
   520                           ;konfig.c: 187: DtKNF.tpcs=RSDT1.inTPCS;
   521  008B28  C181  F23C         	movff	_RSDT1+93,_DtKNF+12
   522                           ;konfig.c: 191: switch(RSDT1.vKNF)
   523  008B2C  D020               	goto	l54
   524  008B2E                     l55:
   525                           ;konfig.c: 192: {
   526                           ;konfig.c: 194: DtKNF.cwtm=RSDT1.inCWTM;
   527  008B2E  C18D  F249         	movff	_RSDT1+105,_DtKNF+25
   528                           ;konfig.c: 195: DtKNF.cwmg=RSDT1.inCWMG;
   529  008B32  C18C  F248         	movff	_RSDT1+104,_DtKNF+24
   530                           ;konfig.c: 196: DtKNF.pgdr=RSDT1.inPGDR;
   531  008B36  C18B  F246         	movff	_RSDT1+103,_DtKNF+22
   532  008B3A                     l56:
   533                           ;konfig.c: 197: case 4:
   534                           ;konfig.c: 198: DtKNF.pgmx=RSDT1.inPGMX;
   535  008B3A  C18A  F247         	movff	_RSDT1+102,_DtKNF+23
   536                           ;konfig.c: 199: DtKNF.prop=RSDT1.inPROP;
   537  008B3E  C189  F245         	movff	_RSDT1+101,_DtKNF+21
   538  008B42                     l57:
   539                           ;konfig.c: 200: case 3:
   540                           ;konfig.c: 201: DtKNF.hsco=RSDT1.inHSCO;
   541  008B42  C187  F243         	movff	_RSDT1+99,_DtKNF+19
   542                           ;konfig.c: 202: DtKNF.conw=RSDT1.inCONW;
   543  008B46  C188  F244         	movff	_RSDT1+100,_DtKNF+20
   544                           ;konfig.c: 203: DtKNF.mgpm2=RSDT1.inMGPM2;
   545  008B4A  C186  F242         	movff	_RSDT1+98,_DtKNF+18
   546  008B4E                     l58:
   547                           ;konfig.c: 204: case 2:
   548                           ;konfig.c: 205: DtKNF.rdpm=RSDT1.inRDPM;
   549  008B4E  C182  F23D         	movff	_RSDT1+94,_DtKNF+13
   550                           ;konfig.c: 206: DtKNF.dtpm=RSDT1.inDTPM;
   551  008B52  C183  F23E         	movff	_RSDT1+95,_DtKNF+14
   552                           ;konfig.c: 207: DtKNF.mdpm=RSDT1.inMDPM;
   553  008B56  C184  F23F         	movff	_RSDT1+96,_DtKNF+15
   554                           ;konfig.c: 208: DtKNF.mgpm=RSDT1.inMGPM;
   555  008B5A  C185  F240         	movff	_RSDT1+97,_DtKNF+16
   556                           ;konfig.c: 209: if(DtKNF.mdpm>DtKNF.mgpm) DtKNF.
      +                          mdpm=DtKNF.mgpm;
   557  008B5E  C23F  FFE8         	movff	_DtKNF+15,wreg
   558  008B62  0102               	movlb	(_DtKNF+16) shr (0+8)
   559  008B64  6140               	cpfslt	(_DtKNF+16)& (0+255),b
   560  008B66  D00F               	goto	l53
   561  008B68  C240  F23F         	movff	_DtKNF+16,_DtKNF+15
   562  008B6C                     l60:
   563                           ;konfig.c: 210: case 1:
   564                           ;konfig.c: 211: break;
   565  008B6C  D00C               	goto	l53
   566  008B6E                     l54:
   567  008B6E  C144  FFE8         	movff	_RSDT1+32,wreg
   568  008B72  0A01               	xorlw	1
   569  008B74  E0FB               	bz	l60
   570  008B76  0A03               	xorlw	3
   571  008B78  E0EA               	bz	l58
   572  008B7A  0A01               	xorlw	1
   573  008B7C  E0E2               	bz	l57
   574  008B7E  0A07               	xorlw	7
   575  008B80  E0DC               	bz	l56
   576  008B82  0A01               	xorlw	1
   577  008B84  E0D4               	bz	l55
   578  008B86                     l53:
   579                           ;konfig.c: 214: DtKNF.teco=0;
   580  008B86  0102               	movlb	(_DtKNF+17) shr (0+8)
   581  008B88  6B41               	clrf	(_DtKNF+17)& (0+255),b
   582                           ;konfig.c: 215: RSDT1.RRD_KNF=0;
   583  008B8A  0101               	movlb	(_RSDT1+1) shr (0+8)
   584  008B8C  9725               	bcf	(_RSDT1+1)& (0+255),3,b
   585                           ;konfig.c: 216: RSDT1.RD_KNF=0;
   586  008B8E  9325               	bcf	(_RSDT1+1)& (0+255),1,b
   587                           ;konfig.c: 217: return 1;
   588  008B90  0C01               	retlw	1
   589                           ;konfig.c: 218: }
   590                           ;konfig.c: 220: }
   591  008B92                     __end_of_RefKnfPar:
   592                           ;konfig.c: 223: unsigned char SaveKnfPar(void)
   593                           ;konfig.c: 224: {
   594  008B92                     _SaveKnfPar:
   595  000000                     
   596                           ;konfig.c: 225: if(RefKnfPar())
   597  008B92  DFB6               	call	_RefKnfPar	;wreg free
   598  008B94  0900               	iorlw	0
   599  008B96  E102 EF8A  F04C    	bz	l62
   600                           ;konfig.c: 226: {
   601  008B9C  C233  F002         	movff	_DtKNF+3,btemp+2
   602  008BA0  6A03               	clrf	btemp+3,c
   603  008BA2  EE00  F06D         	lfsr	0,_MinMax+2
   604  008BA6  CFEE F000          	movff	postinc0,btemp
   605  008BAA  CFED F001          	movff	postdec0,btemp+1
   606  008BAE  5003               	movf	btemp+3,w,c
   607  008BB0  5C01               	subwf	btemp+1,w,c
   608  008BB2  E102               	bnz	u175
   609  008BB4  5002               	movf	btemp+2,w,c
   610  008BB6  5C00               	subwf	btemp,w,c
   611  008BB8                     u175:
   612  008BB8  E20F               	bc	u191
   613  008BBA  EE00  F06F         	lfsr	0,_MinMax+4
   614  008BBE  CFEE F000          	movff	postinc0,btemp
   615  008BC2  CFED F001          	movff	postdec0,btemp+1
   616  008BC6  C233  F002         	movff	_DtKNF+3,btemp+2
   617  008BCA  6A03               	clrf	btemp+3,c
   618  008BCC  5001               	movf	btemp+1,w,c
   619  008BCE  5C03               	subwf	btemp+3,w,c
   620  008BD0  E102               	bnz	u185
   621  008BD2  5000               	movf	btemp,w,c
   622  008BD4  5C02               	subwf	btemp+2,w,c
   623  008BD6                     u185:
   624  008BD6  E316               	bnc	u220
   625  008BD8                     u191:
   626  008BD8  C233  F000         	movff	_DtKNF+3,btemp
   627  008BDC  6A01               	clrf	btemp+1,c
   628  008BDE  C06E  FFE8         	movff	_MinMax+3,wreg
   629  008BE2  1801               	xorwf	btemp+1,w,c
   630  008BE4  E103               	bnz	u205
   631  008BE6  C06D  FFE8         	movff	_MinMax+2,wreg
   632  008BEA  1800               	xorwf	btemp,w,c
   633  008BEC                     u205:
   634  008BEC  E00B               	bz	u220
   635  008BEE  C233  F000         	movff	_DtKNF+3,btemp
   636  008BF2  6A01               	clrf	btemp+1,c
   637  008BF4  C070  FFE8         	movff	_MinMax+5,wreg
   638  008BF8  1801               	xorwf	btemp+1,w,c
   639  008BFA  E103               	bnz	u225
   640  008BFC  C06F  FFE8         	movff	_MinMax+4,wreg
   641  008C00  1800               	xorwf	btemp,w,c
   642  008C02                     u225:
   643  008C02  E118               	bnz	l63
   644  008C04                     u220:
   645                           ;konfig.c: 228: if(DtKNF.mstr!=eeprom_read(0x00C
      +                          1)) eeprom_write(0x00C1,DtKNF.mstr);
   646  008C04  0EC1               	movlw	193
   647  008C06  0100               	movlb	__Lparam shr (0+8)
   648  008C08  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   649  008C0A  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   650  008C0C  ECA2  F078         	call	_eeprom_read	;wreg free
   651  008C10  6E00               	movwf	btemp,c
   652  008C12  C000  F002         	movff	btemp,btemp+2
   653  008C16  6A03               	clrf	btemp+3,c
   654  008C18  C233  FFE8         	movff	_DtKNF+3,wreg
   655  008C1C  1802               	xorwf	btemp+2,w,c
   656  008C1E  E101               	bnz	u245
   657  008C20  5203               	movf	btemp+3,f,c
   658  008C22                     u245:
   659  008C22  E008               	bz	l63
   660  008C24  0EC1               	movlw	193
   661  008C26  0100               	movlb	__Lparam shr (0+8)
   662  008C28  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   663  008C2A  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   664  008C2C  C233  F0FB         	movff	_DtKNF+3,?_eeprom_write+2
   665  008C30  EC2F  F078         	call	_eeprom_write	;wreg free
   666  008C34                     l63:
   667                           ;konfig.c: 230: if((DtKNF.mxcw>MinMax[1].min)&&(
      +                          DtKNF.mxcw<MinMax[1].max)||DtKNF.mxcw==MinMax[1]
      +                          .min||DtKNF.mxcw==MinMax[1].max)
   668  008C34  C234  F002         	movff	_DtKNF+4,btemp+2
   669  008C38  6A03               	clrf	btemp+3,c
   670  008C3A  EE00  F073         	lfsr	0,_MinMax+8
   671  008C3E  CFEE F000          	movff	postinc0,btemp
   672  008C42  CFED F001          	movff	postdec0,btemp+1
   673  008C46  5003               	movf	btemp+3,w,c
   674  008C48  5C01               	subwf	btemp+1,w,c
   675  008C4A  E102               	bnz	u255
   676  008C4C  5002               	movf	btemp+2,w,c
   677  008C4E  5C00               	subwf	btemp,w,c
   678  008C50                     u255:
   679  008C50  E20F               	bc	u271
   680  008C52  EE00  F075         	lfsr	0,_MinMax+10
   681  008C56  CFEE F000          	movff	postinc0,btemp
   682  008C5A  CFED F001          	movff	postdec0,btemp+1
   683  008C5E  C234  F002         	movff	_DtKNF+4,btemp+2
   684  008C62  6A03               	clrf	btemp+3,c
   685  008C64  5001               	movf	btemp+1,w,c
   686  008C66  5C03               	subwf	btemp+3,w,c
   687  008C68  E102               	bnz	u265
   688  008C6A  5000               	movf	btemp,w,c
   689  008C6C  5C02               	subwf	btemp+2,w,c
   690  008C6E                     u265:
   691  008C6E  E316               	bnc	u300
   692  008C70                     u271:
   693  008C70  C234  F000         	movff	_DtKNF+4,btemp
   694  008C74  6A01               	clrf	btemp+1,c
   695  008C76  C074  FFE8         	movff	_MinMax+9,wreg
   696  008C7A  1801               	xorwf	btemp+1,w,c
   697  008C7C  E103               	bnz	u285
   698  008C7E  C073  FFE8         	movff	_MinMax+8,wreg
   699  008C82  1800               	xorwf	btemp,w,c
   700  008C84                     u285:
   701  008C84  E00B               	bz	u300
   702  008C86  C234  F000         	movff	_DtKNF+4,btemp
   703  008C8A  6A01               	clrf	btemp+1,c
   704  008C8C  C076  FFE8         	movff	_MinMax+11,wreg
   705  008C90  1801               	xorwf	btemp+1,w,c
   706  008C92  E103               	bnz	u305
   707  008C94  C075  FFE8         	movff	_MinMax+10,wreg
   708  008C98  1800               	xorwf	btemp,w,c
   709  008C9A                     u305:
   710  008C9A  E118               	bnz	l65
   711  008C9C                     u300:
   712                           ;konfig.c: 231: if(DtKNF.mxcw!=eeprom_read(0x00C
      +                          2)) eeprom_write(0x00C2,DtKNF.mxcw);
   713  008C9C  0EC2               	movlw	194
   714  008C9E  0100               	movlb	__Lparam shr (0+8)
   715  008CA0  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   716  008CA2  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   717  008CA4  ECA2  F078         	call	_eeprom_read	;wreg free
   718  008CA8  6E00               	movwf	btemp,c
   719  008CAA  C000  F002         	movff	btemp,btemp+2
   720  008CAE  6A03               	clrf	btemp+3,c
   721  008CB0  C234  FFE8         	movff	_DtKNF+4,wreg
   722  008CB4  1802               	xorwf	btemp+2,w,c
   723  008CB6  E101               	bnz	u325
   724  008CB8  5203               	movf	btemp+3,f,c
   725  008CBA                     u325:
   726  008CBA  E008               	bz	l65
   727  008CBC  0EC2               	movlw	194
   728  008CBE  0100               	movlb	__Lparam shr (0+8)
   729  008CC0  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   730  008CC2  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   731  008CC4  C234  F0FB         	movff	_DtKNF+4,?_eeprom_write+2
   732  008CC8  EC2F  F078         	call	_eeprom_write	;wreg free
   733  008CCC                     l65:
   734                           ;konfig.c: 233: if((DtKNF.mxco>MinMax[2].min)&&(
      +                          DtKNF.mxco<MinMax[2].max)||DtKNF.mxco==MinMax[2]
      +                          .min||DtKNF.mxco==MinMax[2].max)
   735  008CCC  C235  F002         	movff	_DtKNF+5,btemp+2
   736  008CD0  6A03               	clrf	btemp+3,c
   737  008CD2  EE00  F079         	lfsr	0,_MinMax+14
   738  008CD6  CFEE F000          	movff	postinc0,btemp
   739  008CDA  CFED F001          	movff	postdec0,btemp+1
   740  008CDE  5003               	movf	btemp+3,w,c
   741  008CE0  5C01               	subwf	btemp+1,w,c
   742  008CE2  E102               	bnz	u335
   743  008CE4  5002               	movf	btemp+2,w,c
   744  008CE6  5C00               	subwf	btemp,w,c
   745  008CE8                     u335:
   746  008CE8  E20F               	bc	u351
   747  008CEA  EE00  F07B         	lfsr	0,_MinMax+16
   748  008CEE  CFEE F000          	movff	postinc0,btemp
   749  008CF2  CFED F001          	movff	postdec0,btemp+1
   750  008CF6  C235  F002         	movff	_DtKNF+5,btemp+2
   751  008CFA  6A03               	clrf	btemp+3,c
   752  008CFC  5001               	movf	btemp+1,w,c
   753  008CFE  5C03               	subwf	btemp+3,w,c
   754  008D00  E102               	bnz	u345
   755  008D02  5000               	movf	btemp,w,c
   756  008D04  5C02               	subwf	btemp+2,w,c
   757  008D06                     u345:
   758  008D06  E316               	bnc	u380
   759  008D08                     u351:
   760  008D08  C235  F000         	movff	_DtKNF+5,btemp
   761  008D0C  6A01               	clrf	btemp+1,c
   762  008D0E  C07A  FFE8         	movff	_MinMax+15,wreg
   763  008D12  1801               	xorwf	btemp+1,w,c
   764  008D14  E103               	bnz	u365
   765  008D16  C079  FFE8         	movff	_MinMax+14,wreg
   766  008D1A  1800               	xorwf	btemp,w,c
   767  008D1C                     u365:
   768  008D1C  E00B               	bz	u380
   769  008D1E  C235  F000         	movff	_DtKNF+5,btemp
   770  008D22  6A01               	clrf	btemp+1,c
   771  008D24  C07C  FFE8         	movff	_MinMax+17,wreg
   772  008D28  1801               	xorwf	btemp+1,w,c
   773  008D2A  E103               	bnz	u385
   774  008D2C  C07B  FFE8         	movff	_MinMax+16,wreg
   775  008D30  1800               	xorwf	btemp,w,c
   776  008D32                     u385:
   777  008D32  E118               	bnz	l67
   778  008D34                     u380:
   779                           ;konfig.c: 234: if(DtKNF.mxco!=eeprom_read(0x00C
      +                          3)) eeprom_write(0x00C3,DtKNF.mxco);
   780  008D34  0EC3               	movlw	195
   781  008D36  0100               	movlb	__Lparam shr (0+8)
   782  008D38  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   783  008D3A  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   784  008D3C  ECA2  F078         	call	_eeprom_read	;wreg free
   785  008D40  6E00               	movwf	btemp,c
   786  008D42  C000  F002         	movff	btemp,btemp+2
   787  008D46  6A03               	clrf	btemp+3,c
   788  008D48  C235  FFE8         	movff	_DtKNF+5,wreg
   789  008D4C  1802               	xorwf	btemp+2,w,c
   790  008D4E  E101               	bnz	u405
   791  008D50  5203               	movf	btemp+3,f,c
   792  008D52                     u405:
   793  008D52  E008               	bz	l67
   794  008D54  0EC3               	movlw	195
   795  008D56  0100               	movlb	__Lparam shr (0+8)
   796  008D58  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   797  008D5A  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   798  008D5C  C235  F0FB         	movff	_DtKNF+5,?_eeprom_write+2
   799  008D60  EC2F  F078         	call	_eeprom_write	;wreg free
   800  008D64                     l67:
   801                           ;konfig.c: 236: if((DtKNF.rdgz>MinMax[3].min)&&(
      +                          DtKNF.rdgz<MinMax[3].max)||DtKNF.rdgz==MinMax[3]
      +                          .min||DtKNF.rdgz==MinMax[3].max)
   802  008D64  C238  F002         	movff	_DtKNF+8,btemp+2
   803  008D68  6A03               	clrf	btemp+3,c
   804  008D6A  EE00  F07F         	lfsr	0,_MinMax+20
   805  008D6E  CFEE F000          	movff	postinc0,btemp
   806  008D72  CFED F001          	movff	postdec0,btemp+1
   807  008D76  5003               	movf	btemp+3,w,c
   808  008D78  5C01               	subwf	btemp+1,w,c
   809  008D7A  E102               	bnz	u415
   810  008D7C  5002               	movf	btemp+2,w,c
   811  008D7E  5C00               	subwf	btemp,w,c
   812  008D80                     u415:
   813  008D80  E20F               	bc	u431
   814  008D82  EE00  F081         	lfsr	0,_MinMax+22
   815  008D86  CFEE F000          	movff	postinc0,btemp
   816  008D8A  CFED F001          	movff	postdec0,btemp+1
   817  008D8E  C238  F002         	movff	_DtKNF+8,btemp+2
   818  008D92  6A03               	clrf	btemp+3,c
   819  008D94  5001               	movf	btemp+1,w,c
   820  008D96  5C03               	subwf	btemp+3,w,c
   821  008D98  E102               	bnz	u425
   822  008D9A  5000               	movf	btemp,w,c
   823  008D9C  5C02               	subwf	btemp+2,w,c
   824  008D9E                     u425:
   825  008D9E  E316               	bnc	u460
   826  008DA0                     u431:
   827  008DA0  C238  F000         	movff	_DtKNF+8,btemp
   828  008DA4  6A01               	clrf	btemp+1,c
   829  008DA6  C080  FFE8         	movff	_MinMax+21,wreg
   830  008DAA  1801               	xorwf	btemp+1,w,c
   831  008DAC  E103               	bnz	u445
   832  008DAE  C07F  FFE8         	movff	_MinMax+20,wreg
   833  008DB2  1800               	xorwf	btemp,w,c
   834  008DB4                     u445:
   835  008DB4  E00B               	bz	u460
   836  008DB6  C238  F000         	movff	_DtKNF+8,btemp
   837  008DBA  6A01               	clrf	btemp+1,c
   838  008DBC  C082  FFE8         	movff	_MinMax+23,wreg
   839  008DC0  1801               	xorwf	btemp+1,w,c
   840  008DC2  E103               	bnz	u465
   841  008DC4  C081  FFE8         	movff	_MinMax+22,wreg
   842  008DC8  1800               	xorwf	btemp,w,c
   843  008DCA                     u465:
   844  008DCA  E11E               	bnz	l69
   845  008DCC                     u460:
   846                           ;konfig.c: 237: if(DtKNF.rdgz!=eeprom_read(0x00C
      +                          4))
   847  008DCC  0EC4               	movlw	196
   848  008DCE  0100               	movlb	__Lparam shr (0+8)
   849  008DD0  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   850  008DD2  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   851  008DD4  ECA2  F078         	call	_eeprom_read	;wreg free
   852  008DD8  6E00               	movwf	btemp,c
   853  008DDA  C000  F002         	movff	btemp,btemp+2
   854  008DDE  6A03               	clrf	btemp+3,c
   855  008DE0  C238  FFE8         	movff	_DtKNF+8,wreg
   856  008DE4  1802               	xorwf	btemp+2,w,c
   857  008DE6  E101               	bnz	u485
   858  008DE8  5203               	movf	btemp+3,f,c
   859  008DEA                     u485:
   860  008DEA  E00E               	bz	l69
   861                           ;konfig.c: 238: {
   862  008DEC  0EC4               	movlw	196
   863  008DEE  0100               	movlb	__Lparam shr (0+8)
   864  008DF0  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   865  008DF2  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   866  008DF4  C238  F0FB         	movff	_DtKNF+8,?_eeprom_write+2
   867  008DF8  EC2F  F078         	call	_eeprom_write	;wreg free
   868                           ;konfig.c: 240: ModParam(DtKNF.tpkt,DtKNF.rdgz);
   869  008DFC  C238  F0EE         	movff	_DtKNF+8,?_ModParam
   870  008E00  C237  FFE8         	movff	_DtKNF+7,wreg
   871  008E04  EC03  F068         	call	_ModParam
   872  008E08                     l69:
   873                           ;konfig.c: 241: }
   874  008E08  C24A  F002         	movff	_DtKNF+26,btemp+2
   875  008E0C  6A03               	clrf	btemp+3,c
   876  008E0E  EE00  F085         	lfsr	0,_MinMax+26
   877  008E12  CFEE F000          	movff	postinc0,btemp
   878  008E16  CFED F001          	movff	postdec0,btemp+1
   879  008E1A  5003               	movf	btemp+3,w,c
   880  008E1C  5C01               	subwf	btemp+1,w,c
   881  008E1E  E102               	bnz	u495
   882  008E20  5002               	movf	btemp+2,w,c
   883  008E22  5C00               	subwf	btemp,w,c
   884  008E24                     u495:
   885  008E24  E20F               	bc	u511
   886  008E26  EE00  F087         	lfsr	0,_MinMax+28
   887  008E2A  CFEE F000          	movff	postinc0,btemp
   888  008E2E  CFED F001          	movff	postdec0,btemp+1
   889  008E32  C24A  F002         	movff	_DtKNF+26,btemp+2
   890  008E36  6A03               	clrf	btemp+3,c
   891  008E38  5001               	movf	btemp+1,w,c
   892  008E3A  5C03               	subwf	btemp+3,w,c
   893  008E3C  E102               	bnz	u505
   894  008E3E  5000               	movf	btemp,w,c
   895  008E40  5C02               	subwf	btemp+2,w,c
   896  008E42                     u505:
   897  008E42  E316               	bnc	u540
   898  008E44                     u511:
   899  008E44  C24A  F000         	movff	_DtKNF+26,btemp
   900  008E48  6A01               	clrf	btemp+1,c
   901  008E4A  C086  FFE8         	movff	_MinMax+27,wreg
   902  008E4E  1801               	xorwf	btemp+1,w,c
   903  008E50  E103               	bnz	u525
   904  008E52  C085  FFE8         	movff	_MinMax+26,wreg
   905  008E56  1800               	xorwf	btemp,w,c
   906  008E58                     u525:
   907  008E58  E00B               	bz	u540
   908  008E5A  C24A  F000         	movff	_DtKNF+26,btemp
   909  008E5E  6A01               	clrf	btemp+1,c
   910  008E60  C088  FFE8         	movff	_MinMax+29,wreg
   911  008E64  1801               	xorwf	btemp+1,w,c
   912  008E66  E103               	bnz	u545
   913  008E68  C087  FFE8         	movff	_MinMax+28,wreg
   914  008E6C  1800               	xorwf	btemp,w,c
   915  008E6E                     u545:
   916  008E6E  E122               	bnz	l71
   917  008E70                     u540:
   918                           ;konfig.c: 243: if(DtKNF.aleg!=eeprom_read(0x00C
      +                          6))
   919  008E70  0EC6               	movlw	198
   920  008E72  0100               	movlb	__Lparam shr (0+8)
   921  008E74  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   922  008E76  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   923  008E78  ECA2  F078         	call	_eeprom_read	;wreg free
   924  008E7C  6E00               	movwf	btemp,c
   925  008E7E  C000  F002         	movff	btemp,btemp+2
   926  008E82  6A03               	clrf	btemp+3,c
   927  008E84  C24A  FFE8         	movff	_DtKNF+26,wreg
   928  008E88  1802               	xorwf	btemp+2,w,c
   929  008E8A  E101               	bnz	u565
   930  008E8C  5203               	movf	btemp+3,f,c
   931  008E8E                     u565:
   932  008E8E  E012               	bz	l71
   933                           ;konfig.c: 244: {
   934  008E90  0E01               	movlw	1
   935  008E92  ECCC  F073         	call	_StartRTG
   936                           ;konfig.c: 246: eeprom_write(0x00C7,0);
   937  008E96  0EC7               	movlw	199
   938  008E98  0100               	movlb	__Lparam shr (0+8)
   939  008E9A  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   940  008E9C  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   941  008E9E  6BFB               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
   942  008EA0  EC2F  F078         	call	_eeprom_write	;wreg free
   943                           ;konfig.c: 247: eeprom_write(0x00C6,DtKNF.aleg);
   944  008EA4  0EC6               	movlw	198
   945  008EA6  0100               	movlb	__Lparam shr (0+8)
   946  008EA8  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
   947  008EAA  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
   948  008EAC  C24A  F0FB         	movff	_DtKNF+26,?_eeprom_write+2
   949  008EB0  EC2F  F078         	call	_eeprom_write	;wreg free
   950  008EB4                     l71:
   951                           ;konfig.c: 248: }
   952  008EB4  C237  F002         	movff	_DtKNF+7,btemp+2
   953  008EB8  6A03               	clrf	btemp+3,c
   954  008EBA  EE00  F08B         	lfsr	0,_MinMax+32
   955  008EBE  CFEE F000          	movff	postinc0,btemp
   956  008EC2  CFED F001          	movff	postdec0,btemp+1
   957  008EC6  5003               	movf	btemp+3,w,c
   958  008EC8  5C01               	subwf	btemp+1,w,c
   959  008ECA  E102               	bnz	u575
   960  008ECC  5002               	movf	btemp+2,w,c
   961  008ECE  5C00               	subwf	btemp,w,c
   962  008ED0                     u575:
   963  008ED0  E20F               	bc	u591
   964  008ED2  EE00  F08D         	lfsr	0,_MinMax+34
   965  008ED6  CFEE F000          	movff	postinc0,btemp
   966  008EDA  CFED F001          	movff	postdec0,btemp+1
   967  008EDE  C237  F002         	movff	_DtKNF+7,btemp+2
   968  008EE2  6A03               	clrf	btemp+3,c
   969  008EE4  5001               	movf	btemp+1,w,c
   970  008EE6  5C03               	subwf	btemp+3,w,c
   971  008EE8  E102               	bnz	u585
   972  008EEA  5000               	movf	btemp,w,c
   973  008EEC  5C02               	subwf	btemp+2,w,c
   974  008EEE                     u585:
   975  008EEE  E316               	bnc	u620
   976  008EF0                     u591:
   977  008EF0  C237  F000         	movff	_DtKNF+7,btemp
   978  008EF4  6A01               	clrf	btemp+1,c
   979  008EF6  C08C  FFE8         	movff	_MinMax+33,wreg
   980  008EFA  1801               	xorwf	btemp+1,w,c
   981  008EFC  E103               	bnz	u605
   982  008EFE  C08B  FFE8         	movff	_MinMax+32,wreg
   983  008F02  1800               	xorwf	btemp,w,c
   984  008F04                     u605:
   985  008F04  E00B               	bz	u620
   986  008F06  C237  F000         	movff	_DtKNF+7,btemp
   987  008F0A  6A01               	clrf	btemp+1,c
   988  008F0C  C08E  FFE8         	movff	_MinMax+35,wreg
   989  008F10  1801               	xorwf	btemp+1,w,c
   990  008F12  E103               	bnz	u625
   991  008F14  C08D  FFE8         	movff	_MinMax+34,wreg
   992  008F18  1800               	xorwf	btemp,w,c
   993  008F1A                     u625:
   994  008F1A  E156               	bnz	l73
   995  008F1C                     u620:
   996                           ;konfig.c: 250: if(DtKNF.tpkt!=eeprom_read(0x00C
      +                          5))
   997  008F1C  0EC5               	movlw	197
   998  008F1E  0100               	movlb	__Lparam shr (0+8)
   999  008F20  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1000  008F22  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1001  008F24  ECA2  F078         	call	_eeprom_read	;wreg free
  1002  008F28  6E00               	movwf	btemp,c
  1003  008F2A  C000  F002         	movff	btemp,btemp+2
  1004  008F2E  6A03               	clrf	btemp+3,c
  1005  008F30  C237  FFE8         	movff	_DtKNF+7,wreg
  1006  008F34  1802               	xorwf	btemp+2,w,c
  1007  008F36  E101               	bnz	u645
  1008  008F38  5203               	movf	btemp+3,f,c
  1009  008F3A                     u645:
  1010  008F3A  E046               	bz	l73
  1011                           ;konfig.c: 251: {
  1012  008F3C  EC87  F04E         	call	_SetTpKtParam	;wreg free
  1013                           ;konfig.c: 253: if((DtKNF.rdgz>MinMax[3].min)&&(
      +                          DtKNF.rdgz<MinMax[3].max)||DtKNF.rdgz==MinMax[3]
      +                          .min||DtKNF.rdgz==MinMax[3].max)
  1014  008F40  C238  F002         	movff	_DtKNF+8,btemp+2
  1015  008F44  6A03               	clrf	btemp+3,c
  1016  008F46  EE00  F07F         	lfsr	0,_MinMax+20
  1017  008F4A  CFEE F000          	movff	postinc0,btemp
  1018  008F4E  CFED F001          	movff	postdec0,btemp+1
  1019  008F52  5003               	movf	btemp+3,w,c
  1020  008F54  5C01               	subwf	btemp+1,w,c
  1021  008F56  E102               	bnz	u655
  1022  008F58  5002               	movf	btemp+2,w,c
  1023  008F5A  5C00               	subwf	btemp,w,c
  1024  008F5C                     u655:
  1025  008F5C  E20F               	bc	u671
  1026  008F5E  EE00  F081         	lfsr	0,_MinMax+22
  1027  008F62  CFEE F000          	movff	postinc0,btemp
  1028  008F66  CFED F001          	movff	postdec0,btemp+1
  1029  008F6A  C238  F002         	movff	_DtKNF+8,btemp+2
  1030  008F6E  6A03               	clrf	btemp+3,c
  1031  008F70  5001               	movf	btemp+1,w,c
  1032  008F72  5C03               	subwf	btemp+3,w,c
  1033  008F74  E102               	bnz	u665
  1034  008F76  5000               	movf	btemp,w,c
  1035  008F78  5C02               	subwf	btemp+2,w,c
  1036  008F7A                     u665:
  1037  008F7A  E316               	bnc	u700
  1038  008F7C                     u671:
  1039  008F7C  C238  F000         	movff	_DtKNF+8,btemp
  1040  008F80  6A01               	clrf	btemp+1,c
  1041  008F82  C080  FFE8         	movff	_MinMax+21,wreg
  1042  008F86  1801               	xorwf	btemp+1,w,c
  1043  008F88  E103               	bnz	u685
  1044  008F8A  C07F  FFE8         	movff	_MinMax+20,wreg
  1045  008F8E  1800               	xorwf	btemp,w,c
  1046  008F90                     u685:
  1047  008F90  E00B               	bz	u700
  1048  008F92  C238  F000         	movff	_DtKNF+8,btemp
  1049  008F96  6A01               	clrf	btemp+1,c
  1050  008F98  C082  FFE8         	movff	_MinMax+23,wreg
  1051  008F9C  1801               	xorwf	btemp+1,w,c
  1052  008F9E  E103               	bnz	u705
  1053  008FA0  C081  FFE8         	movff	_MinMax+22,wreg
  1054  008FA4  1800               	xorwf	btemp,w,c
  1055  008FA6                     u705:
  1056  008FA6  E106               	bnz	l75
  1057  008FA8                     u700:
  1058                           ;konfig.c: 254: {
  1059  008FA8  C238  F0EE         	movff	_DtKNF+8,?_ModParam
  1060  008FAC  C237  FFE8         	movff	_DtKNF+7,wreg
  1061  008FB0  EC03  F068         	call	_ModParam
  1062  008FB4                     l75:
  1063                           ;konfig.c: 256: }
  1064  008FB4  ECA7  F04E         	call	_SetDefaultValue	;wreg free
  1065                           ;konfig.c: 258: eeprom_write(0x00C5,DtKNF.tpkt);
  1066  008FB8  0EC5               	movlw	197
  1067  008FBA  0100               	movlb	__Lparam shr (0+8)
  1068  008FBC  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1069  008FBE  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1070  008FC0  C237  F0FB         	movff	_DtKNF+7,?_eeprom_write+2
  1071  008FC4  EC2F  F078         	call	_eeprom_write	;wreg free
  1072  008FC8                     l73:
  1073                           ;konfig.c: 259: }
  1074  008FC8  C23A  F002         	movff	_DtKNF+10,btemp+2
  1075  008FCC  6A03               	clrf	btemp+3,c
  1076  008FCE  EE00  F091         	lfsr	0,_MinMax+38
  1077  008FD2  CFEE F000          	movff	postinc0,btemp
  1078  008FD6  CFED F001          	movff	postdec0,btemp+1
  1079  008FDA  5003               	movf	btemp+3,w,c
  1080  008FDC  5C01               	subwf	btemp+1,w,c
  1081  008FDE  E102               	bnz	u725
  1082  008FE0  5002               	movf	btemp+2,w,c
  1083  008FE2  5C00               	subwf	btemp,w,c
  1084  008FE4                     u725:
  1085  008FE4  E20F               	bc	u741
  1086  008FE6  EE00  F093         	lfsr	0,_MinMax+40
  1087  008FEA  CFEE F000          	movff	postinc0,btemp
  1088  008FEE  CFED F001          	movff	postdec0,btemp+1
  1089  008FF2  C23A  F002         	movff	_DtKNF+10,btemp+2
  1090  008FF6  6A03               	clrf	btemp+3,c
  1091  008FF8  5001               	movf	btemp+1,w,c
  1092  008FFA  5C03               	subwf	btemp+3,w,c
  1093  008FFC  E102               	bnz	u735
  1094  008FFE  5000               	movf	btemp,w,c
  1095  009000  5C02               	subwf	btemp+2,w,c
  1096  009002                     u735:
  1097  009002  E316               	bnc	u770
  1098  009004                     u741:
  1099  009004  C23A  F000         	movff	_DtKNF+10,btemp
  1100  009008  6A01               	clrf	btemp+1,c
  1101  00900A  C092  FFE8         	movff	_MinMax+39,wreg
  1102  00900E  1801               	xorwf	btemp+1,w,c
  1103  009010  E103               	bnz	u755
  1104  009012  C091  FFE8         	movff	_MinMax+38,wreg
  1105  009016  1800               	xorwf	btemp,w,c
  1106  009018                     u755:
  1107  009018  E00B               	bz	u770
  1108  00901A  C23A  F000         	movff	_DtKNF+10,btemp
  1109  00901E  6A01               	clrf	btemp+1,c
  1110  009020  C094  FFE8         	movff	_MinMax+41,wreg
  1111  009024  1801               	xorwf	btemp+1,w,c
  1112  009026  E103               	bnz	u775
  1113  009028  C093  FFE8         	movff	_MinMax+40,wreg
  1114  00902C  1800               	xorwf	btemp,w,c
  1115  00902E                     u775:
  1116  00902E  E118               	bnz	l76
  1117  009030                     u770:
  1118                           ;konfig.c: 262: if(DtKNF.robg!=eeprom_read(0x00C
      +                          8)) eeprom_write(0x00C8,DtKNF.robg);
  1119  009030  0EC8               	movlw	200
  1120  009032  0100               	movlb	__Lparam shr (0+8)
  1121  009034  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1122  009036  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1123  009038  ECA2  F078         	call	_eeprom_read	;wreg free
  1124  00903C  6E00               	movwf	btemp,c
  1125  00903E  C000  F002         	movff	btemp,btemp+2
  1126  009042  6A03               	clrf	btemp+3,c
  1127  009044  C23A  FFE8         	movff	_DtKNF+10,wreg
  1128  009048  1802               	xorwf	btemp+2,w,c
  1129  00904A  E101               	bnz	u795
  1130  00904C  5203               	movf	btemp+3,f,c
  1131  00904E                     u795:
  1132  00904E  E008               	bz	l76
  1133  009050  0EC8               	movlw	200
  1134  009052  0100               	movlb	__Lparam shr (0+8)
  1135  009054  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1136  009056  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1137  009058  C23A  F0FB         	movff	_DtKNF+10,?_eeprom_write+2
  1138  00905C  EC2F  F078         	call	_eeprom_write	;wreg free
  1139  009060                     l76:
  1140                           ;konfig.c: 264: if((DtKNF.opdg>MinMax[7].min)&&(
      +                          DtKNF.opdg<MinMax[7].max)||DtKNF.opdg==MinMax[7]
      +                          .min||DtKNF.opdg==MinMax[7].max)
  1141  009060  C23B  F002         	movff	_DtKNF+11,btemp+2
  1142  009064  6A03               	clrf	btemp+3,c
  1143  009066  EE00  F097         	lfsr	0,_MinMax+44
  1144  00906A  CFEE F000          	movff	postinc0,btemp
  1145  00906E  CFED F001          	movff	postdec0,btemp+1
  1146  009072  5003               	movf	btemp+3,w,c
  1147  009074  5C01               	subwf	btemp+1,w,c
  1148  009076  E102               	bnz	u805
  1149  009078  5002               	movf	btemp+2,w,c
  1150  00907A  5C00               	subwf	btemp,w,c
  1151  00907C                     u805:
  1152  00907C  E20F               	bc	u821
  1153  00907E  EE00  F099         	lfsr	0,_MinMax+46
  1154  009082  CFEE F000          	movff	postinc0,btemp
  1155  009086  CFED F001          	movff	postdec0,btemp+1
  1156  00908A  C23B  F002         	movff	_DtKNF+11,btemp+2
  1157  00908E  6A03               	clrf	btemp+3,c
  1158  009090  5001               	movf	btemp+1,w,c
  1159  009092  5C03               	subwf	btemp+3,w,c
  1160  009094  E102               	bnz	u815
  1161  009096  5000               	movf	btemp,w,c
  1162  009098  5C02               	subwf	btemp+2,w,c
  1163  00909A                     u815:
  1164  00909A  E316               	bnc	u850
  1165  00909C                     u821:
  1166  00909C  C23B  F000         	movff	_DtKNF+11,btemp
  1167  0090A0  6A01               	clrf	btemp+1,c
  1168  0090A2  C098  FFE8         	movff	_MinMax+45,wreg
  1169  0090A6  1801               	xorwf	btemp+1,w,c
  1170  0090A8  E103               	bnz	u835
  1171  0090AA  C097  FFE8         	movff	_MinMax+44,wreg
  1172  0090AE  1800               	xorwf	btemp,w,c
  1173  0090B0                     u835:
  1174  0090B0  E00B               	bz	u850
  1175  0090B2  C23B  F000         	movff	_DtKNF+11,btemp
  1176  0090B6  6A01               	clrf	btemp+1,c
  1177  0090B8  C09A  FFE8         	movff	_MinMax+47,wreg
  1178  0090BC  1801               	xorwf	btemp+1,w,c
  1179  0090BE  E103               	bnz	u855
  1180  0090C0  C099  FFE8         	movff	_MinMax+46,wreg
  1181  0090C4  1800               	xorwf	btemp,w,c
  1182  0090C6                     u855:
  1183  0090C6  E118               	bnz	l78
  1184  0090C8                     u850:
  1185                           ;konfig.c: 265: if(DtKNF.opdg!=eeprom_read(0x00C
      +                          C)) eeprom_write(0x00CC,DtKNF.opdg);
  1186  0090C8  0ECC               	movlw	204
  1187  0090CA  0100               	movlb	__Lparam shr (0+8)
  1188  0090CC  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1189  0090CE  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1190  0090D0  ECA2  F078         	call	_eeprom_read	;wreg free
  1191  0090D4  6E00               	movwf	btemp,c
  1192  0090D6  C000  F002         	movff	btemp,btemp+2
  1193  0090DA  6A03               	clrf	btemp+3,c
  1194  0090DC  C23B  FFE8         	movff	_DtKNF+11,wreg
  1195  0090E0  1802               	xorwf	btemp+2,w,c
  1196  0090E2  E101               	bnz	u875
  1197  0090E4  5203               	movf	btemp+3,f,c
  1198  0090E6                     u875:
  1199  0090E6  E008               	bz	l78
  1200  0090E8  0ECC               	movlw	204
  1201  0090EA  0100               	movlb	__Lparam shr (0+8)
  1202  0090EC  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1203  0090EE  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1204  0090F0  C23B  F0FB         	movff	_DtKNF+11,?_eeprom_write+2
  1205  0090F4  EC2F  F078         	call	_eeprom_write	;wreg free
  1206  0090F8                     l78:
  1207                           ;konfig.c: 267: if((DtKNF.tpcs>MinMax[8].min)&&(
      +                          DtKNF.tpcs<MinMax[8].max)||DtKNF.tpcs==MinMax[8]
      +                          .min||DtKNF.tpcs==MinMax[8].max)
  1208  0090F8  C23C  F002         	movff	_DtKNF+12,btemp+2
  1209  0090FC  6A03               	clrf	btemp+3,c
  1210  0090FE  EE00  F09D         	lfsr	0,_MinMax+50
  1211  009102  CFEE F000          	movff	postinc0,btemp
  1212  009106  CFED F001          	movff	postdec0,btemp+1
  1213  00910A  5003               	movf	btemp+3,w,c
  1214  00910C  5C01               	subwf	btemp+1,w,c
  1215  00910E  E102               	bnz	u885
  1216  009110  5002               	movf	btemp+2,w,c
  1217  009112  5C00               	subwf	btemp,w,c
  1218  009114                     u885:
  1219  009114  E20F               	bc	u901
  1220  009116  EE00  F09F         	lfsr	0,_MinMax+52
  1221  00911A  CFEE F000          	movff	postinc0,btemp
  1222  00911E  CFED F001          	movff	postdec0,btemp+1
  1223  009122  C23C  F002         	movff	_DtKNF+12,btemp+2
  1224  009126  6A03               	clrf	btemp+3,c
  1225  009128  5001               	movf	btemp+1,w,c
  1226  00912A  5C03               	subwf	btemp+3,w,c
  1227  00912C  E102               	bnz	u895
  1228  00912E  5000               	movf	btemp,w,c
  1229  009130  5C02               	subwf	btemp+2,w,c
  1230  009132                     u895:
  1231  009132  E316               	bnc	u930
  1232  009134                     u901:
  1233  009134  C23C  F000         	movff	_DtKNF+12,btemp
  1234  009138  6A01               	clrf	btemp+1,c
  1235  00913A  C09E  FFE8         	movff	_MinMax+51,wreg
  1236  00913E  1801               	xorwf	btemp+1,w,c
  1237  009140  E103               	bnz	u915
  1238  009142  C09D  FFE8         	movff	_MinMax+50,wreg
  1239  009146  1800               	xorwf	btemp,w,c
  1240  009148                     u915:
  1241  009148  E00B               	bz	u930
  1242  00914A  C23C  F000         	movff	_DtKNF+12,btemp
  1243  00914E  6A01               	clrf	btemp+1,c
  1244  009150  C0A0  FFE8         	movff	_MinMax+53,wreg
  1245  009154  1801               	xorwf	btemp+1,w,c
  1246  009156  E103               	bnz	u935
  1247  009158  C09F  FFE8         	movff	_MinMax+52,wreg
  1248  00915C  1800               	xorwf	btemp,w,c
  1249  00915E                     u935:
  1250  00915E  E118               	bnz	l80
  1251  009160                     u930:
  1252                           ;konfig.c: 268: if(DtKNF.tpcs!=eeprom_read(0x00C
      +                          D)) eeprom_write(0x00CD,DtKNF.tpcs);
  1253  009160  0ECD               	movlw	205
  1254  009162  0100               	movlb	__Lparam shr (0+8)
  1255  009164  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1256  009166  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1257  009168  ECA2  F078         	call	_eeprom_read	;wreg free
  1258  00916C  6E00               	movwf	btemp,c
  1259  00916E  C000  F002         	movff	btemp,btemp+2
  1260  009172  6A03               	clrf	btemp+3,c
  1261  009174  C23C  FFE8         	movff	_DtKNF+12,wreg
  1262  009178  1802               	xorwf	btemp+2,w,c
  1263  00917A  E101               	bnz	u955
  1264  00917C  5203               	movf	btemp+3,f,c
  1265  00917E                     u955:
  1266  00917E  E008               	bz	l80
  1267  009180  0ECD               	movlw	205
  1268  009182  0100               	movlb	__Lparam shr (0+8)
  1269  009184  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1270  009186  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1271  009188  C23C  F0FB         	movff	_DtKNF+12,?_eeprom_write+2
  1272  00918C  EC2F  F078         	call	_eeprom_write	;wreg free
  1273  009190                     l80:
  1274                           ;konfig.c: 270: if((DtKNF.rdpm>MinMax[9].min)&&(
      +                          DtKNF.rdpm<MinMax[9].max)||DtKNF.rdpm==MinMax[9]
      +                          .min||DtKNF.rdpm==MinMax[9].max)
  1275  009190  C23D  F002         	movff	_DtKNF+13,btemp+2
  1276  009194  6A03               	clrf	btemp+3,c
  1277  009196  EE00  F0A3         	lfsr	0,_MinMax+56
  1278  00919A  CFEE F000          	movff	postinc0,btemp
  1279  00919E  CFED F001          	movff	postdec0,btemp+1
  1280  0091A2  5003               	movf	btemp+3,w,c
  1281  0091A4  5C01               	subwf	btemp+1,w,c
  1282  0091A6  E102               	bnz	u965
  1283  0091A8  5002               	movf	btemp+2,w,c
  1284  0091AA  5C00               	subwf	btemp,w,c
  1285  0091AC                     u965:
  1286  0091AC  E20F               	bc	u981
  1287  0091AE  EE00  F0A5         	lfsr	0,_MinMax+58
  1288  0091B2  CFEE F000          	movff	postinc0,btemp
  1289  0091B6  CFED F001          	movff	postdec0,btemp+1
  1290  0091BA  C23D  F002         	movff	_DtKNF+13,btemp+2
  1291  0091BE  6A03               	clrf	btemp+3,c
  1292  0091C0  5001               	movf	btemp+1,w,c
  1293  0091C2  5C03               	subwf	btemp+3,w,c
  1294  0091C4  E102               	bnz	u975
  1295  0091C6  5000               	movf	btemp,w,c
  1296  0091C8  5C02               	subwf	btemp+2,w,c
  1297  0091CA                     u975:
  1298  0091CA  E316               	bnc	u1010
  1299  0091CC                     u981:
  1300  0091CC  C23D  F000         	movff	_DtKNF+13,btemp
  1301  0091D0  6A01               	clrf	btemp+1,c
  1302  0091D2  C0A4  FFE8         	movff	_MinMax+57,wreg
  1303  0091D6  1801               	xorwf	btemp+1,w,c
  1304  0091D8  E103               	bnz	u995
  1305  0091DA  C0A3  FFE8         	movff	_MinMax+56,wreg
  1306  0091DE  1800               	xorwf	btemp,w,c
  1307  0091E0                     u995:
  1308  0091E0  E00B               	bz	u1010
  1309  0091E2  C23D  F000         	movff	_DtKNF+13,btemp
  1310  0091E6  6A01               	clrf	btemp+1,c
  1311  0091E8  C0A6  FFE8         	movff	_MinMax+59,wreg
  1312  0091EC  1801               	xorwf	btemp+1,w,c
  1313  0091EE  E103               	bnz	u1015
  1314  0091F0  C0A5  FFE8         	movff	_MinMax+58,wreg
  1315  0091F4  1800               	xorwf	btemp,w,c
  1316  0091F6                     u1015:
  1317  0091F6  E118               	bnz	l82
  1318  0091F8                     u1010:
  1319                           ;konfig.c: 271: if(DtKNF.rdpm!=eeprom_read(0x00D
      +                          0)) eeprom_write(0x00D0,DtKNF.rdpm);
  1320  0091F8  0ED0               	movlw	208
  1321  0091FA  0100               	movlb	__Lparam shr (0+8)
  1322  0091FC  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1323  0091FE  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1324  009200  ECA2  F078         	call	_eeprom_read	;wreg free
  1325  009204  6E00               	movwf	btemp,c
  1326  009206  C000  F002         	movff	btemp,btemp+2
  1327  00920A  6A03               	clrf	btemp+3,c
  1328  00920C  C23D  FFE8         	movff	_DtKNF+13,wreg
  1329  009210  1802               	xorwf	btemp+2,w,c
  1330  009212  E101               	bnz	u1035
  1331  009214  5203               	movf	btemp+3,f,c
  1332  009216                     u1035:
  1333  009216  E008               	bz	l82
  1334  009218  0ED0               	movlw	208
  1335  00921A  0100               	movlb	__Lparam shr (0+8)
  1336  00921C  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1337  00921E  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1338  009220  C23D  F0FB         	movff	_DtKNF+13,?_eeprom_write+2
  1339  009224  EC2F  F078         	call	_eeprom_write	;wreg free
  1340  009228                     l82:
  1341                           ;konfig.c: 273: if((DtKNF.dtpm>MinMax[10].min)&&
      +                          (DtKNF.dtpm<MinMax[10].max)||DtKNF.dtpm==MinMax[
      +                          10].min||DtKNF.dtpm==MinMax[10].max)
  1342  009228  C23E  F002         	movff	_DtKNF+14,btemp+2
  1343  00922C  6A03               	clrf	btemp+3,c
  1344  00922E  EE00  F0A9         	lfsr	0,_MinMax+62
  1345  009232  CFEE F000          	movff	postinc0,btemp
  1346  009236  CFED F001          	movff	postdec0,btemp+1
  1347  00923A  5003               	movf	btemp+3,w,c
  1348  00923C  5C01               	subwf	btemp+1,w,c
  1349  00923E  E102               	bnz	u1045
  1350  009240  5002               	movf	btemp+2,w,c
  1351  009242  5C00               	subwf	btemp,w,c
  1352  009244                     u1045:
  1353  009244  E20F               	bc	u1061
  1354  009246  EE00  F0AB         	lfsr	0,_MinMax+64
  1355  00924A  CFEE F000          	movff	postinc0,btemp
  1356  00924E  CFED F001          	movff	postdec0,btemp+1
  1357  009252  C23E  F002         	movff	_DtKNF+14,btemp+2
  1358  009256  6A03               	clrf	btemp+3,c
  1359  009258  5001               	movf	btemp+1,w,c
  1360  00925A  5C03               	subwf	btemp+3,w,c
  1361  00925C  E102               	bnz	u1055
  1362  00925E  5000               	movf	btemp,w,c
  1363  009260  5C02               	subwf	btemp+2,w,c
  1364  009262                     u1055:
  1365  009262  E316               	bnc	u1090
  1366  009264                     u1061:
  1367  009264  C23E  F000         	movff	_DtKNF+14,btemp
  1368  009268  6A01               	clrf	btemp+1,c
  1369  00926A  C0AA  FFE8         	movff	_MinMax+63,wreg
  1370  00926E  1801               	xorwf	btemp+1,w,c
  1371  009270  E103               	bnz	u1075
  1372  009272  C0A9  FFE8         	movff	_MinMax+62,wreg
  1373  009276  1800               	xorwf	btemp,w,c
  1374  009278                     u1075:
  1375  009278  E00B               	bz	u1090
  1376  00927A  C23E  F000         	movff	_DtKNF+14,btemp
  1377  00927E  6A01               	clrf	btemp+1,c
  1378  009280  C0AC  FFE8         	movff	_MinMax+65,wreg
  1379  009284  1801               	xorwf	btemp+1,w,c
  1380  009286  E103               	bnz	u1095
  1381  009288  C0AB  FFE8         	movff	_MinMax+64,wreg
  1382  00928C  1800               	xorwf	btemp,w,c
  1383  00928E                     u1095:
  1384  00928E  E118               	bnz	l84
  1385  009290                     u1090:
  1386                           ;konfig.c: 274: if(DtKNF.dtpm!=eeprom_read(0x00D
      +                          1)) eeprom_write(0x00D1,DtKNF.dtpm);
  1387  009290  0ED1               	movlw	209
  1388  009292  0100               	movlb	__Lparam shr (0+8)
  1389  009294  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1390  009296  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1391  009298  ECA2  F078         	call	_eeprom_read	;wreg free
  1392  00929C  6E00               	movwf	btemp,c
  1393  00929E  C000  F002         	movff	btemp,btemp+2
  1394  0092A2  6A03               	clrf	btemp+3,c
  1395  0092A4  C23E  FFE8         	movff	_DtKNF+14,wreg
  1396  0092A8  1802               	xorwf	btemp+2,w,c
  1397  0092AA  E101               	bnz	u1115
  1398  0092AC  5203               	movf	btemp+3,f,c
  1399  0092AE                     u1115:
  1400  0092AE  E008               	bz	l84
  1401  0092B0  0ED1               	movlw	209
  1402  0092B2  0100               	movlb	__Lparam shr (0+8)
  1403  0092B4  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1404  0092B6  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1405  0092B8  C23E  F0FB         	movff	_DtKNF+14,?_eeprom_write+2
  1406  0092BC  EC2F  F078         	call	_eeprom_write	;wreg free
  1407  0092C0                     l84:
  1408                           ;konfig.c: 276: if((DtKNF.mdpm>MinMax[11].min)&&
      +                          (DtKNF.mdpm<MinMax[11].max)||DtKNF.mdpm==MinMax[
      +                          11].min||DtKNF.mdpm==MinMax[11].max)
  1409  0092C0  C23F  F002         	movff	_DtKNF+15,btemp+2
  1410  0092C4  6A03               	clrf	btemp+3,c
  1411  0092C6  EE00  F0AF         	lfsr	0,_MinMax+68
  1412  0092CA  CFEE F000          	movff	postinc0,btemp
  1413  0092CE  CFED F001          	movff	postdec0,btemp+1
  1414  0092D2  5003               	movf	btemp+3,w,c
  1415  0092D4  5C01               	subwf	btemp+1,w,c
  1416  0092D6  E102               	bnz	u1125
  1417  0092D8  5002               	movf	btemp+2,w,c
  1418  0092DA  5C00               	subwf	btemp,w,c
  1419  0092DC                     u1125:
  1420  0092DC  E20F               	bc	u1141
  1421  0092DE  EE00  F0B1         	lfsr	0,_MinMax+70
  1422  0092E2  CFEE F000          	movff	postinc0,btemp
  1423  0092E6  CFED F001          	movff	postdec0,btemp+1
  1424  0092EA  C23F  F002         	movff	_DtKNF+15,btemp+2
  1425  0092EE  6A03               	clrf	btemp+3,c
  1426  0092F0  5001               	movf	btemp+1,w,c
  1427  0092F2  5C03               	subwf	btemp+3,w,c
  1428  0092F4  E102               	bnz	u1135
  1429  0092F6  5000               	movf	btemp,w,c
  1430  0092F8  5C02               	subwf	btemp+2,w,c
  1431  0092FA                     u1135:
  1432  0092FA  E316               	bnc	u1170
  1433  0092FC                     u1141:
  1434  0092FC  C23F  F000         	movff	_DtKNF+15,btemp
  1435  009300  6A01               	clrf	btemp+1,c
  1436  009302  C0B0  FFE8         	movff	_MinMax+69,wreg
  1437  009306  1801               	xorwf	btemp+1,w,c
  1438  009308  E103               	bnz	u1155
  1439  00930A  C0AF  FFE8         	movff	_MinMax+68,wreg
  1440  00930E  1800               	xorwf	btemp,w,c
  1441  009310                     u1155:
  1442  009310  E00B               	bz	u1170
  1443  009312  C23F  F000         	movff	_DtKNF+15,btemp
  1444  009316  6A01               	clrf	btemp+1,c
  1445  009318  C0B2  FFE8         	movff	_MinMax+71,wreg
  1446  00931C  1801               	xorwf	btemp+1,w,c
  1447  00931E  E103               	bnz	u1175
  1448  009320  C0B1  FFE8         	movff	_MinMax+70,wreg
  1449  009324  1800               	xorwf	btemp,w,c
  1450  009326                     u1175:
  1451  009326  E12E               	bnz	l86
  1452  009328                     u1170:
  1453                           ;konfig.c: 277: {
  1454  009328  C23F  FFE8         	movff	_DtKNF+15,wreg
  1455  00932C  0102               	movlb	(_DtKNF+16) shr (0+8)
  1456  00932E  6140               	cpfslt	(_DtKNF+16)& (0+255),b
  1457  009330  D011               	goto	l87
  1458                           ;konfig.c: 279: {
  1459  009332  EE00  F0AF         	lfsr	0,_MinMax+68
  1460  009336  CFEE F000          	movff	postinc0,btemp
  1461  00933A  CFED F001          	movff	postdec0,btemp+1
  1462  00933E  C240  F002         	movff	_DtKNF+16,btemp+2
  1463  009342  6A03               	clrf	btemp+3,c
  1464  009344  5001               	movf	btemp+1,w,c
  1465  009346  5C03               	subwf	btemp+3,w,c
  1466  009348  E102               	bnz	u1205
  1467  00934A  5000               	movf	btemp,w,c
  1468  00934C  5C02               	subwf	btemp+2,w,c
  1469  00934E                     u1205:
  1470  00934E  B0D8               	btfsc	status,0,c
  1471  009350  C240  F23F         	movff	_DtKNF+16,_DtKNF+15
  1472  009354                     l87:
  1473                           ;konfig.c: 281: }
  1474  009354  0ED2               	movlw	210
  1475  009356  0100               	movlb	__Lparam shr (0+8)
  1476  009358  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1477  00935A  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1478  00935C  ECA2  F078         	call	_eeprom_read	;wreg free
  1479  009360  6E00               	movwf	btemp,c
  1480  009362  C000  F002         	movff	btemp,btemp+2
  1481  009366  6A03               	clrf	btemp+3,c
  1482  009368  C23F  FFE8         	movff	_DtKNF+15,wreg
  1483  00936C  1802               	xorwf	btemp+2,w,c
  1484  00936E  E101               	bnz	u1215
  1485  009370  5203               	movf	btemp+3,f,c
  1486  009372                     u1215:
  1487  009372  E008               	bz	l86
  1488  009374  0ED2               	movlw	210
  1489  009376  0100               	movlb	__Lparam shr (0+8)
  1490  009378  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1491  00937A  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1492  00937C  C23F  F0FB         	movff	_DtKNF+15,?_eeprom_write+2
  1493  009380  EC2F  F078         	call	_eeprom_write	;wreg free
  1494  009384                     l86:
  1495                           ;konfig.c: 283: }
  1496  009384  C240  F002         	movff	_DtKNF+16,btemp+2
  1497  009388  6A03               	clrf	btemp+3,c
  1498  00938A  EE00  F0B5         	lfsr	0,_MinMax+74
  1499  00938E  CFEE F000          	movff	postinc0,btemp
  1500  009392  CFED F001          	movff	postdec0,btemp+1
  1501  009396  5003               	movf	btemp+3,w,c
  1502  009398  5C01               	subwf	btemp+1,w,c
  1503  00939A  E102               	bnz	u1225
  1504  00939C  5002               	movf	btemp+2,w,c
  1505  00939E  5C00               	subwf	btemp,w,c
  1506  0093A0                     u1225:
  1507  0093A0  E20F               	bc	u1241
  1508  0093A2  EE00  F0B7         	lfsr	0,_MinMax+76
  1509  0093A6  CFEE F000          	movff	postinc0,btemp
  1510  0093AA  CFED F001          	movff	postdec0,btemp+1
  1511  0093AE  C240  F002         	movff	_DtKNF+16,btemp+2
  1512  0093B2  6A03               	clrf	btemp+3,c
  1513  0093B4  5001               	movf	btemp+1,w,c
  1514  0093B6  5C03               	subwf	btemp+3,w,c
  1515  0093B8  E102               	bnz	u1235
  1516  0093BA  5000               	movf	btemp,w,c
  1517  0093BC  5C02               	subwf	btemp+2,w,c
  1518  0093BE                     u1235:
  1519  0093BE  E316               	bnc	u1270
  1520  0093C0                     u1241:
  1521  0093C0  C240  F000         	movff	_DtKNF+16,btemp
  1522  0093C4  6A01               	clrf	btemp+1,c
  1523  0093C6  C0B6  FFE8         	movff	_MinMax+75,wreg
  1524  0093CA  1801               	xorwf	btemp+1,w,c
  1525  0093CC  E103               	bnz	u1255
  1526  0093CE  C0B5  FFE8         	movff	_MinMax+74,wreg
  1527  0093D2  1800               	xorwf	btemp,w,c
  1528  0093D4                     u1255:
  1529  0093D4  E00B               	bz	u1270
  1530  0093D6  C240  F000         	movff	_DtKNF+16,btemp
  1531  0093DA  6A01               	clrf	btemp+1,c
  1532  0093DC  C0B8  FFE8         	movff	_MinMax+77,wreg
  1533  0093E0  1801               	xorwf	btemp+1,w,c
  1534  0093E2  E103               	bnz	u1275
  1535  0093E4  C0B7  FFE8         	movff	_MinMax+76,wreg
  1536  0093E8  1800               	xorwf	btemp,w,c
  1537  0093EA                     u1275:
  1538  0093EA  E12E               	bnz	l90
  1539  0093EC                     u1270:
  1540                           ;konfig.c: 286: {
  1541  0093EC  C23F  FFE8         	movff	_DtKNF+15,wreg
  1542  0093F0  0102               	movlb	(_DtKNF+16) shr (0+8)
  1543  0093F2  6140               	cpfslt	(_DtKNF+16)& (0+255),b
  1544  0093F4  D011               	goto	l91
  1545                           ;konfig.c: 288: {
  1546  0093F6  C23F  F002         	movff	_DtKNF+15,btemp+2
  1547  0093FA  6A03               	clrf	btemp+3,c
  1548  0093FC  EE00  F0B7         	lfsr	0,_MinMax+76
  1549  009400  CFEE F000          	movff	postinc0,btemp
  1550  009404  CFED F001          	movff	postdec0,btemp+1
  1551  009408  5003               	movf	btemp+3,w,c
  1552  00940A  5C01               	subwf	btemp+1,w,c
  1553  00940C  E102               	bnz	u1305
  1554  00940E  5002               	movf	btemp+2,w,c
  1555  009410  5C00               	subwf	btemp,w,c
  1556  009412                     u1305:
  1557  009412  B0D8               	btfsc	status,0,c
  1558  009414  C23F  F240         	movff	_DtKNF+15,_DtKNF+16
  1559  009418                     l91:
  1560                           ;konfig.c: 290: }
  1561  009418  0ED3               	movlw	211
  1562  00941A  0100               	movlb	__Lparam shr (0+8)
  1563  00941C  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1564  00941E  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1565  009420  ECA2  F078         	call	_eeprom_read	;wreg free
  1566  009424  6E00               	movwf	btemp,c
  1567  009426  C000  F002         	movff	btemp,btemp+2
  1568  00942A  6A03               	clrf	btemp+3,c
  1569  00942C  C240  FFE8         	movff	_DtKNF+16,wreg
  1570  009430  1802               	xorwf	btemp+2,w,c
  1571  009432  E101               	bnz	u1315
  1572  009434  5203               	movf	btemp+3,f,c
  1573  009436                     u1315:
  1574  009436  E008               	bz	l90
  1575  009438  0ED3               	movlw	211
  1576  00943A  0100               	movlb	__Lparam shr (0+8)
  1577  00943C  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1578  00943E  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1579  009440  C240  F0FB         	movff	_DtKNF+16,?_eeprom_write+2
  1580  009444  EC2F  F078         	call	_eeprom_write	;wreg free
  1581  009448                     l90:
  1582                           ;konfig.c: 292: }
  1583  009448  C242  F002         	movff	_DtKNF+18,btemp+2
  1584  00944C  6A03               	clrf	btemp+3,c
  1585  00944E  EE00  F0BB         	lfsr	0,_MinMax+80
  1586  009452  CFEE F000          	movff	postinc0,btemp
  1587  009456  CFED F001          	movff	postdec0,btemp+1
  1588  00945A  5003               	movf	btemp+3,w,c
  1589  00945C  5C01               	subwf	btemp+1,w,c
  1590  00945E  E102               	bnz	u1325
  1591  009460  5002               	movf	btemp+2,w,c
  1592  009462  5C00               	subwf	btemp,w,c
  1593  009464                     u1325:
  1594  009464  E20F               	bc	u1341
  1595  009466  EE00  F0BD         	lfsr	0,_MinMax+82
  1596  00946A  CFEE F000          	movff	postinc0,btemp
  1597  00946E  CFED F001          	movff	postdec0,btemp+1
  1598  009472  C242  F002         	movff	_DtKNF+18,btemp+2
  1599  009476  6A03               	clrf	btemp+3,c
  1600  009478  5001               	movf	btemp+1,w,c
  1601  00947A  5C03               	subwf	btemp+3,w,c
  1602  00947C  E102               	bnz	u1335
  1603  00947E  5000               	movf	btemp,w,c
  1604  009480  5C02               	subwf	btemp+2,w,c
  1605  009482                     u1335:
  1606  009482  E316               	bnc	u1370
  1607  009484                     u1341:
  1608  009484  C242  F000         	movff	_DtKNF+18,btemp
  1609  009488  6A01               	clrf	btemp+1,c
  1610  00948A  C0BC  FFE8         	movff	_MinMax+81,wreg
  1611  00948E  1801               	xorwf	btemp+1,w,c
  1612  009490  E103               	bnz	u1355
  1613  009492  C0BB  FFE8         	movff	_MinMax+80,wreg
  1614  009496  1800               	xorwf	btemp,w,c
  1615  009498                     u1355:
  1616  009498  E00B               	bz	u1370
  1617  00949A  C242  F000         	movff	_DtKNF+18,btemp
  1618  00949E  6A01               	clrf	btemp+1,c
  1619  0094A0  C0BE  FFE8         	movff	_MinMax+83,wreg
  1620  0094A4  1801               	xorwf	btemp+1,w,c
  1621  0094A6  E103               	bnz	u1375
  1622  0094A8  C0BD  FFE8         	movff	_MinMax+82,wreg
  1623  0094AC  1800               	xorwf	btemp,w,c
  1624  0094AE                     u1375:
  1625  0094AE  E118               	bnz	l94
  1626  0094B0                     u1370:
  1627                           ;konfig.c: 295: {
  1628  0094B0  0ED4               	movlw	212
  1629  0094B2  0100               	movlb	__Lparam shr (0+8)
  1630  0094B4  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1631  0094B6  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1632  0094B8  ECA2  F078         	call	_eeprom_read	;wreg free
  1633  0094BC  6E00               	movwf	btemp,c
  1634  0094BE  C000  F002         	movff	btemp,btemp+2
  1635  0094C2  6A03               	clrf	btemp+3,c
  1636  0094C4  C242  FFE8         	movff	_DtKNF+18,wreg
  1637  0094C8  1802               	xorwf	btemp+2,w,c
  1638  0094CA  E101               	bnz	u1395
  1639  0094CC  5203               	movf	btemp+3,f,c
  1640  0094CE                     u1395:
  1641  0094CE  E008               	bz	l94
  1642  0094D0  0ED4               	movlw	212
  1643  0094D2  0100               	movlb	__Lparam shr (0+8)
  1644  0094D4  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1645  0094D6  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1646  0094D8  C242  F0FB         	movff	_DtKNF+18,?_eeprom_write+2
  1647  0094DC  EC2F  F078         	call	_eeprom_write	;wreg free
  1648  0094E0                     l94:
  1649                           ;konfig.c: 297: }
  1650  0094E0  C243  F002         	movff	_DtKNF+19,btemp+2
  1651  0094E4  6A03               	clrf	btemp+3,c
  1652  0094E6  EE00  F0C1         	lfsr	0,_MinMax+86
  1653  0094EA  CFEE F000          	movff	postinc0,btemp
  1654  0094EE  CFED F001          	movff	postdec0,btemp+1
  1655  0094F2  5003               	movf	btemp+3,w,c
  1656  0094F4  5C01               	subwf	btemp+1,w,c
  1657  0094F6  E102               	bnz	u1405
  1658  0094F8  5002               	movf	btemp+2,w,c
  1659  0094FA  5C00               	subwf	btemp,w,c
  1660  0094FC                     u1405:
  1661  0094FC  E20F               	bc	u1421
  1662  0094FE  EE00  F0C3         	lfsr	0,_MinMax+88
  1663  009502  CFEE F000          	movff	postinc0,btemp
  1664  009506  CFED F001          	movff	postdec0,btemp+1
  1665  00950A  C243  F002         	movff	_DtKNF+19,btemp+2
  1666  00950E  6A03               	clrf	btemp+3,c
  1667  009510  5001               	movf	btemp+1,w,c
  1668  009512  5C03               	subwf	btemp+3,w,c
  1669  009514  E102               	bnz	u1415
  1670  009516  5000               	movf	btemp,w,c
  1671  009518  5C02               	subwf	btemp+2,w,c
  1672  00951A                     u1415:
  1673  00951A  E316               	bnc	u1450
  1674  00951C                     u1421:
  1675  00951C  C243  F000         	movff	_DtKNF+19,btemp
  1676  009520  6A01               	clrf	btemp+1,c
  1677  009522  C0C2  FFE8         	movff	_MinMax+87,wreg
  1678  009526  1801               	xorwf	btemp+1,w,c
  1679  009528  E103               	bnz	u1435
  1680  00952A  C0C1  FFE8         	movff	_MinMax+86,wreg
  1681  00952E  1800               	xorwf	btemp,w,c
  1682  009530                     u1435:
  1683  009530  E00B               	bz	u1450
  1684  009532  C243  F000         	movff	_DtKNF+19,btemp
  1685  009536  6A01               	clrf	btemp+1,c
  1686  009538  C0C4  FFE8         	movff	_MinMax+89,wreg
  1687  00953C  1801               	xorwf	btemp+1,w,c
  1688  00953E  E103               	bnz	u1455
  1689  009540  C0C3  FFE8         	movff	_MinMax+88,wreg
  1690  009544  1800               	xorwf	btemp,w,c
  1691  009546                     u1455:
  1692  009546  E118               	bnz	l96
  1693  009548                     u1450:
  1694                           ;konfig.c: 300: {
  1695  009548  0ED5               	movlw	213
  1696  00954A  0100               	movlb	__Lparam shr (0+8)
  1697  00954C  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1698  00954E  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1699  009550  ECA2  F078         	call	_eeprom_read	;wreg free
  1700  009554  6E00               	movwf	btemp,c
  1701  009556  C000  F002         	movff	btemp,btemp+2
  1702  00955A  6A03               	clrf	btemp+3,c
  1703  00955C  C243  FFE8         	movff	_DtKNF+19,wreg
  1704  009560  1802               	xorwf	btemp+2,w,c
  1705  009562  E101               	bnz	u1475
  1706  009564  5203               	movf	btemp+3,f,c
  1707  009566                     u1475:
  1708  009566  E008               	bz	l96
  1709  009568  0ED5               	movlw	213
  1710  00956A  0100               	movlb	__Lparam shr (0+8)
  1711  00956C  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1712  00956E  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1713  009570  C243  F0FB         	movff	_DtKNF+19,?_eeprom_write+2
  1714  009574  EC2F  F078         	call	_eeprom_write	;wreg free
  1715  009578                     l96:
  1716                           ;konfig.c: 302: }
  1717  009578  C244  F002         	movff	_DtKNF+20,btemp+2
  1718  00957C  6A03               	clrf	btemp+3,c
  1719  00957E  EE00  F0C7         	lfsr	0,_MinMax+92
  1720  009582  CFEE F000          	movff	postinc0,btemp
  1721  009586  CFED F001          	movff	postdec0,btemp+1
  1722  00958A  5003               	movf	btemp+3,w,c
  1723  00958C  5C01               	subwf	btemp+1,w,c
  1724  00958E  E102               	bnz	u1485
  1725  009590  5002               	movf	btemp+2,w,c
  1726  009592  5C00               	subwf	btemp,w,c
  1727  009594                     u1485:
  1728  009594  E20F               	bc	u1501
  1729  009596  EE00  F0C9         	lfsr	0,_MinMax+94
  1730  00959A  CFEE F000          	movff	postinc0,btemp
  1731  00959E  CFED F001          	movff	postdec0,btemp+1
  1732  0095A2  C244  F002         	movff	_DtKNF+20,btemp+2
  1733  0095A6  6A03               	clrf	btemp+3,c
  1734  0095A8  5001               	movf	btemp+1,w,c
  1735  0095AA  5C03               	subwf	btemp+3,w,c
  1736  0095AC  E102               	bnz	u1495
  1737  0095AE  5000               	movf	btemp,w,c
  1738  0095B0  5C02               	subwf	btemp+2,w,c
  1739  0095B2                     u1495:
  1740  0095B2  E316               	bnc	u1530
  1741  0095B4                     u1501:
  1742  0095B4  C244  F000         	movff	_DtKNF+20,btemp
  1743  0095B8  6A01               	clrf	btemp+1,c
  1744  0095BA  C0C8  FFE8         	movff	_MinMax+93,wreg
  1745  0095BE  1801               	xorwf	btemp+1,w,c
  1746  0095C0  E103               	bnz	u1515
  1747  0095C2  C0C7  FFE8         	movff	_MinMax+92,wreg
  1748  0095C6  1800               	xorwf	btemp,w,c
  1749  0095C8                     u1515:
  1750  0095C8  E00B               	bz	u1530
  1751  0095CA  C244  F000         	movff	_DtKNF+20,btemp
  1752  0095CE  6A01               	clrf	btemp+1,c
  1753  0095D0  C0CA  FFE8         	movff	_MinMax+95,wreg
  1754  0095D4  1801               	xorwf	btemp+1,w,c
  1755  0095D6  E103               	bnz	u1535
  1756  0095D8  C0C9  FFE8         	movff	_MinMax+94,wreg
  1757  0095DC  1800               	xorwf	btemp,w,c
  1758  0095DE                     u1535:
  1759  0095DE  E118               	bnz	l98
  1760  0095E0                     u1530:
  1761                           ;konfig.c: 305: {
  1762  0095E0  0ED6               	movlw	214
  1763  0095E2  0100               	movlb	__Lparam shr (0+8)
  1764  0095E4  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1765  0095E6  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1766  0095E8  ECA2  F078         	call	_eeprom_read	;wreg free
  1767  0095EC  6E00               	movwf	btemp,c
  1768  0095EE  C000  F002         	movff	btemp,btemp+2
  1769  0095F2  6A03               	clrf	btemp+3,c
  1770  0095F4  C244  FFE8         	movff	_DtKNF+20,wreg
  1771  0095F8  1802               	xorwf	btemp+2,w,c
  1772  0095FA  E101               	bnz	u1555
  1773  0095FC  5203               	movf	btemp+3,f,c
  1774  0095FE                     u1555:
  1775  0095FE  E008               	bz	l98
  1776  009600  0ED6               	movlw	214
  1777  009602  0100               	movlb	__Lparam shr (0+8)
  1778  009604  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1779  009606  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1780  009608  C244  F0FB         	movff	_DtKNF+20,?_eeprom_write+2
  1781  00960C  EC2F  F078         	call	_eeprom_write	;wreg free
  1782  009610                     l98:
  1783                           ;konfig.c: 307: }
  1784  009610  C245  F002         	movff	_DtKNF+21,btemp+2
  1785  009614  6A03               	clrf	btemp+3,c
  1786  009616  EE00  F0CD         	lfsr	0,_MinMax+98
  1787  00961A  CFEE F000          	movff	postinc0,btemp
  1788  00961E  CFED F001          	movff	postdec0,btemp+1
  1789  009622  5003               	movf	btemp+3,w,c
  1790  009624  5C01               	subwf	btemp+1,w,c
  1791  009626  E102               	bnz	u1565
  1792  009628  5002               	movf	btemp+2,w,c
  1793  00962A  5C00               	subwf	btemp,w,c
  1794  00962C                     u1565:
  1795  00962C  E20F               	bc	u1581
  1796  00962E  EE00  F0CF         	lfsr	0,_MinMax+100
  1797  009632  CFEE F000          	movff	postinc0,btemp
  1798  009636  CFED F001          	movff	postdec0,btemp+1
  1799  00963A  C245  F002         	movff	_DtKNF+21,btemp+2
  1800  00963E  6A03               	clrf	btemp+3,c
  1801  009640  5001               	movf	btemp+1,w,c
  1802  009642  5C03               	subwf	btemp+3,w,c
  1803  009644  E102               	bnz	u1575
  1804  009646  5000               	movf	btemp,w,c
  1805  009648  5C02               	subwf	btemp+2,w,c
  1806  00964A                     u1575:
  1807  00964A  E316               	bnc	u1610
  1808  00964C                     u1581:
  1809  00964C  C245  F000         	movff	_DtKNF+21,btemp
  1810  009650  6A01               	clrf	btemp+1,c
  1811  009652  C0CE  FFE8         	movff	_MinMax+99,wreg
  1812  009656  1801               	xorwf	btemp+1,w,c
  1813  009658  E103               	bnz	u1595
  1814  00965A  C0CD  FFE8         	movff	_MinMax+98,wreg
  1815  00965E  1800               	xorwf	btemp,w,c
  1816  009660                     u1595:
  1817  009660  E00B               	bz	u1610
  1818  009662  C245  F000         	movff	_DtKNF+21,btemp
  1819  009666  6A01               	clrf	btemp+1,c
  1820  009668  C0D0  FFE8         	movff	_MinMax+101,wreg
  1821  00966C  1801               	xorwf	btemp+1,w,c
  1822  00966E  E103               	bnz	u1615
  1823  009670  C0CF  FFE8         	movff	_MinMax+100,wreg
  1824  009674  1800               	xorwf	btemp,w,c
  1825  009676                     u1615:
  1826  009676  E118               	bnz	l100
  1827  009678                     u1610:
  1828                           ;konfig.c: 310: {
  1829  009678  0ED7               	movlw	215
  1830  00967A  0100               	movlb	__Lparam shr (0+8)
  1831  00967C  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1832  00967E  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1833  009680  ECA2  F078         	call	_eeprom_read	;wreg free
  1834  009684  6E00               	movwf	btemp,c
  1835  009686  C000  F002         	movff	btemp,btemp+2
  1836  00968A  6A03               	clrf	btemp+3,c
  1837  00968C  C245  FFE8         	movff	_DtKNF+21,wreg
  1838  009690  1802               	xorwf	btemp+2,w,c
  1839  009692  E101               	bnz	u1635
  1840  009694  5203               	movf	btemp+3,f,c
  1841  009696                     u1635:
  1842  009696  E008               	bz	l100
  1843  009698  0ED7               	movlw	215
  1844  00969A  0100               	movlb	__Lparam shr (0+8)
  1845  00969C  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1846  00969E  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1847  0096A0  C245  F0FB         	movff	_DtKNF+21,?_eeprom_write+2
  1848  0096A4  EC2F  F078         	call	_eeprom_write	;wreg free
  1849  0096A8                     l100:
  1850                           ;konfig.c: 312: }
  1851  0096A8  C247  F002         	movff	_DtKNF+23,btemp+2
  1852  0096AC  6A03               	clrf	btemp+3,c
  1853  0096AE  EE00  F0D3         	lfsr	0,_MinMax+104
  1854  0096B2  CFEE F000          	movff	postinc0,btemp
  1855  0096B6  CFED F001          	movff	postdec0,btemp+1
  1856  0096BA  5003               	movf	btemp+3,w,c
  1857  0096BC  5C01               	subwf	btemp+1,w,c
  1858  0096BE  E102               	bnz	u1645
  1859  0096C0  5002               	movf	btemp+2,w,c
  1860  0096C2  5C00               	subwf	btemp,w,c
  1861  0096C4                     u1645:
  1862  0096C4  E20F               	bc	u1661
  1863  0096C6  EE00  F0D5         	lfsr	0,_MinMax+106
  1864  0096CA  CFEE F000          	movff	postinc0,btemp
  1865  0096CE  CFED F001          	movff	postdec0,btemp+1
  1866  0096D2  C247  F002         	movff	_DtKNF+23,btemp+2
  1867  0096D6  6A03               	clrf	btemp+3,c
  1868  0096D8  5001               	movf	btemp+1,w,c
  1869  0096DA  5C03               	subwf	btemp+3,w,c
  1870  0096DC  E102               	bnz	u1655
  1871  0096DE  5000               	movf	btemp,w,c
  1872  0096E0  5C02               	subwf	btemp+2,w,c
  1873  0096E2                     u1655:
  1874  0096E2  E316               	bnc	u1690
  1875  0096E4                     u1661:
  1876  0096E4  C247  F000         	movff	_DtKNF+23,btemp
  1877  0096E8  6A01               	clrf	btemp+1,c
  1878  0096EA  C0D4  FFE8         	movff	_MinMax+105,wreg
  1879  0096EE  1801               	xorwf	btemp+1,w,c
  1880  0096F0  E103               	bnz	u1675
  1881  0096F2  C0D3  FFE8         	movff	_MinMax+104,wreg
  1882  0096F6  1800               	xorwf	btemp,w,c
  1883  0096F8                     u1675:
  1884  0096F8  E00B               	bz	u1690
  1885  0096FA  C247  F000         	movff	_DtKNF+23,btemp
  1886  0096FE  6A01               	clrf	btemp+1,c
  1887  009700  C0D6  FFE8         	movff	_MinMax+107,wreg
  1888  009704  1801               	xorwf	btemp+1,w,c
  1889  009706  E103               	bnz	u1695
  1890  009708  C0D5  FFE8         	movff	_MinMax+106,wreg
  1891  00970C  1800               	xorwf	btemp,w,c
  1892  00970E                     u1695:
  1893  00970E  E118               	bnz	l102
  1894  009710                     u1690:
  1895                           ;konfig.c: 315: {
  1896  009710  0ED9               	movlw	217
  1897  009712  0100               	movlb	__Lparam shr (0+8)
  1898  009714  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1899  009716  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1900  009718  ECA2  F078         	call	_eeprom_read	;wreg free
  1901  00971C  6E00               	movwf	btemp,c
  1902  00971E  C000  F002         	movff	btemp,btemp+2
  1903  009722  6A03               	clrf	btemp+3,c
  1904  009724  C247  FFE8         	movff	_DtKNF+23,wreg
  1905  009728  1802               	xorwf	btemp+2,w,c
  1906  00972A  E101               	bnz	u1715
  1907  00972C  5203               	movf	btemp+3,f,c
  1908  00972E                     u1715:
  1909  00972E  E008               	bz	l102
  1910  009730  0ED9               	movlw	217
  1911  009732  0100               	movlb	__Lparam shr (0+8)
  1912  009734  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1913  009736  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1914  009738  C247  F0FB         	movff	_DtKNF+23,?_eeprom_write+2
  1915  00973C  EC2F  F078         	call	_eeprom_write	;wreg free
  1916  009740                     l102:
  1917                           ;konfig.c: 317: }
  1918  009740  C246  F002         	movff	_DtKNF+22,btemp+2
  1919  009744  6A03               	clrf	btemp+3,c
  1920  009746  EE00  F0D9         	lfsr	0,_MinMax+110
  1921  00974A  CFEE F000          	movff	postinc0,btemp
  1922  00974E  CFED F001          	movff	postdec0,btemp+1
  1923  009752  5003               	movf	btemp+3,w,c
  1924  009754  5C01               	subwf	btemp+1,w,c
  1925  009756  E102               	bnz	u1725
  1926  009758  5002               	movf	btemp+2,w,c
  1927  00975A  5C00               	subwf	btemp,w,c
  1928  00975C                     u1725:
  1929  00975C  E20F               	bc	u1741
  1930  00975E  EE00  F0DB         	lfsr	0,_MinMax+112
  1931  009762  CFEE F000          	movff	postinc0,btemp
  1932  009766  CFED F001          	movff	postdec0,btemp+1
  1933  00976A  C246  F002         	movff	_DtKNF+22,btemp+2
  1934  00976E  6A03               	clrf	btemp+3,c
  1935  009770  5001               	movf	btemp+1,w,c
  1936  009772  5C03               	subwf	btemp+3,w,c
  1937  009774  E102               	bnz	u1735
  1938  009776  5000               	movf	btemp,w,c
  1939  009778  5C02               	subwf	btemp+2,w,c
  1940  00977A                     u1735:
  1941  00977A  E316               	bnc	u1770
  1942  00977C                     u1741:
  1943  00977C  C246  F000         	movff	_DtKNF+22,btemp
  1944  009780  6A01               	clrf	btemp+1,c
  1945  009782  C0DA  FFE8         	movff	_MinMax+111,wreg
  1946  009786  1801               	xorwf	btemp+1,w,c
  1947  009788  E103               	bnz	u1755
  1948  00978A  C0D9  FFE8         	movff	_MinMax+110,wreg
  1949  00978E  1800               	xorwf	btemp,w,c
  1950  009790                     u1755:
  1951  009790  E00B               	bz	u1770
  1952  009792  C246  F000         	movff	_DtKNF+22,btemp
  1953  009796  6A01               	clrf	btemp+1,c
  1954  009798  C0DC  FFE8         	movff	_MinMax+113,wreg
  1955  00979C  1801               	xorwf	btemp+1,w,c
  1956  00979E  E103               	bnz	u1775
  1957  0097A0  C0DB  FFE8         	movff	_MinMax+112,wreg
  1958  0097A4  1800               	xorwf	btemp,w,c
  1959  0097A6                     u1775:
  1960  0097A6  E118               	bnz	l104
  1961  0097A8                     u1770:
  1962                           ;konfig.c: 319: {
  1963  0097A8  0EDA               	movlw	218
  1964  0097AA  0100               	movlb	__Lparam shr (0+8)
  1965  0097AC  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  1966  0097AE  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  1967  0097B0  ECA2  F078         	call	_eeprom_read	;wreg free
  1968  0097B4  6E00               	movwf	btemp,c
  1969  0097B6  C000  F002         	movff	btemp,btemp+2
  1970  0097BA  6A03               	clrf	btemp+3,c
  1971  0097BC  C246  FFE8         	movff	_DtKNF+22,wreg
  1972  0097C0  1802               	xorwf	btemp+2,w,c
  1973  0097C2  E101               	bnz	u1795
  1974  0097C4  5203               	movf	btemp+3,f,c
  1975  0097C6                     u1795:
  1976  0097C6  E008               	bz	l104
  1977  0097C8  0EDA               	movlw	218
  1978  0097CA  0100               	movlb	__Lparam shr (0+8)
  1979  0097CC  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1980  0097CE  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1981  0097D0  C246  F0FB         	movff	_DtKNF+22,?_eeprom_write+2
  1982  0097D4  EC2F  F078         	call	_eeprom_write	;wreg free
  1983  0097D8                     l104:
  1984                           ;konfig.c: 321: }
  1985  0097D8  C248  F002         	movff	_DtKNF+24,btemp+2
  1986  0097DC  6A03               	clrf	btemp+3,c
  1987  0097DE  EE00  F0DF         	lfsr	0,_MinMax+116
  1988  0097E2  CFEE F000          	movff	postinc0,btemp
  1989  0097E6  CFED F001          	movff	postdec0,btemp+1
  1990  0097EA  5003               	movf	btemp+3,w,c
  1991  0097EC  5C01               	subwf	btemp+1,w,c
  1992  0097EE  E102               	bnz	u1805
  1993  0097F0  5002               	movf	btemp+2,w,c
  1994  0097F2  5C00               	subwf	btemp,w,c
  1995  0097F4                     u1805:
  1996  0097F4  E20F               	bc	u1821
  1997  0097F6  EE00  F0E1         	lfsr	0,_MinMax+118
  1998  0097FA  CFEE F000          	movff	postinc0,btemp
  1999  0097FE  CFED F001          	movff	postdec0,btemp+1
  2000  009802  C248  F002         	movff	_DtKNF+24,btemp+2
  2001  009806  6A03               	clrf	btemp+3,c
  2002  009808  5001               	movf	btemp+1,w,c
  2003  00980A  5C03               	subwf	btemp+3,w,c
  2004  00980C  E102               	bnz	u1815
  2005  00980E  5000               	movf	btemp,w,c
  2006  009810  5C02               	subwf	btemp+2,w,c
  2007  009812                     u1815:
  2008  009812  E316               	bnc	u1850
  2009  009814                     u1821:
  2010  009814  C248  F000         	movff	_DtKNF+24,btemp
  2011  009818  6A01               	clrf	btemp+1,c
  2012  00981A  C0E0  FFE8         	movff	_MinMax+117,wreg
  2013  00981E  1801               	xorwf	btemp+1,w,c
  2014  009820  E103               	bnz	u1835
  2015  009822  C0DF  FFE8         	movff	_MinMax+116,wreg
  2016  009826  1800               	xorwf	btemp,w,c
  2017  009828                     u1835:
  2018  009828  E00B               	bz	u1850
  2019  00982A  C248  F000         	movff	_DtKNF+24,btemp
  2020  00982E  6A01               	clrf	btemp+1,c
  2021  009830  C0E2  FFE8         	movff	_MinMax+119,wreg
  2022  009834  1801               	xorwf	btemp+1,w,c
  2023  009836  E103               	bnz	u1855
  2024  009838  C0E1  FFE8         	movff	_MinMax+118,wreg
  2025  00983C  1800               	xorwf	btemp,w,c
  2026  00983E                     u1855:
  2027  00983E  E118               	bnz	l106
  2028  009840                     u1850:
  2029                           ;konfig.c: 323: {
  2030  009840  0EDC               	movlw	220
  2031  009842  0100               	movlb	__Lparam shr (0+8)
  2032  009844  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2033  009846  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2034  009848  ECA2  F078         	call	_eeprom_read	;wreg free
  2035  00984C  6E00               	movwf	btemp,c
  2036  00984E  C000  F002         	movff	btemp,btemp+2
  2037  009852  6A03               	clrf	btemp+3,c
  2038  009854  C248  FFE8         	movff	_DtKNF+24,wreg
  2039  009858  1802               	xorwf	btemp+2,w,c
  2040  00985A  E101               	bnz	u1875
  2041  00985C  5203               	movf	btemp+3,f,c
  2042  00985E                     u1875:
  2043  00985E  E008               	bz	l106
  2044  009860  0EDC               	movlw	220
  2045  009862  0100               	movlb	__Lparam shr (0+8)
  2046  009864  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2047  009866  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2048  009868  C248  F0FB         	movff	_DtKNF+24,?_eeprom_write+2
  2049  00986C  EC2F  F078         	call	_eeprom_write	;wreg free
  2050  009870                     l106:
  2051                           ;konfig.c: 325: }
  2052  009870  C249  F002         	movff	_DtKNF+25,btemp+2
  2053  009874  6A03               	clrf	btemp+3,c
  2054  009876  EE00  F0E5         	lfsr	0,_MinMax+122
  2055  00987A  CFEE F000          	movff	postinc0,btemp
  2056  00987E  CFED F001          	movff	postdec0,btemp+1
  2057  009882  5003               	movf	btemp+3,w,c
  2058  009884  5C01               	subwf	btemp+1,w,c
  2059  009886  E102               	bnz	u1885
  2060  009888  5002               	movf	btemp+2,w,c
  2061  00988A  5C00               	subwf	btemp,w,c
  2062  00988C                     u1885:
  2063  00988C  E20F               	bc	u1901
  2064  00988E  EE00  F0E7         	lfsr	0,_MinMax+124
  2065  009892  CFEE F000          	movff	postinc0,btemp
  2066  009896  CFED F001          	movff	postdec0,btemp+1
  2067  00989A  C249  F002         	movff	_DtKNF+25,btemp+2
  2068  00989E  6A03               	clrf	btemp+3,c
  2069  0098A0  5001               	movf	btemp+1,w,c
  2070  0098A2  5C03               	subwf	btemp+3,w,c
  2071  0098A4  E102               	bnz	u1895
  2072  0098A6  5000               	movf	btemp,w,c
  2073  0098A8  5C02               	subwf	btemp+2,w,c
  2074  0098AA                     u1895:
  2075  0098AA  E316               	bnc	u1930
  2076  0098AC                     u1901:
  2077  0098AC  C249  F000         	movff	_DtKNF+25,btemp
  2078  0098B0  6A01               	clrf	btemp+1,c
  2079  0098B2  C0E6  FFE8         	movff	_MinMax+123,wreg
  2080  0098B6  1801               	xorwf	btemp+1,w,c
  2081  0098B8  E103               	bnz	u1915
  2082  0098BA  C0E5  FFE8         	movff	_MinMax+122,wreg
  2083  0098BE  1800               	xorwf	btemp,w,c
  2084  0098C0                     u1915:
  2085  0098C0  E00B               	bz	u1930
  2086  0098C2  C249  F000         	movff	_DtKNF+25,btemp
  2087  0098C6  6A01               	clrf	btemp+1,c
  2088  0098C8  C0E8  FFE8         	movff	_MinMax+125,wreg
  2089  0098CC  1801               	xorwf	btemp+1,w,c
  2090  0098CE  E103               	bnz	u1935
  2091  0098D0  C0E7  FFE8         	movff	_MinMax+124,wreg
  2092  0098D4  1800               	xorwf	btemp,w,c
  2093  0098D6                     u1935:
  2094  0098D6  E118               	bnz	l108
  2095  0098D8                     u1930:
  2096                           ;konfig.c: 327: {
  2097  0098D8  0EDB               	movlw	219
  2098  0098DA  0100               	movlb	__Lparam shr (0+8)
  2099  0098DC  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2100  0098DE  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2101  0098E0  ECA2  F078         	call	_eeprom_read	;wreg free
  2102  0098E4  6E00               	movwf	btemp,c
  2103  0098E6  C000  F002         	movff	btemp,btemp+2
  2104  0098EA  6A03               	clrf	btemp+3,c
  2105  0098EC  C249  FFE8         	movff	_DtKNF+25,wreg
  2106  0098F0  1802               	xorwf	btemp+2,w,c
  2107  0098F2  E101               	bnz	u1955
  2108  0098F4  5203               	movf	btemp+3,f,c
  2109  0098F6                     u1955:
  2110  0098F6  E008               	bz	l108
  2111  0098F8  0EDB               	movlw	219
  2112  0098FA  0100               	movlb	__Lparam shr (0+8)
  2113  0098FC  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2114  0098FE  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2115  009900  C249  F0FB         	movff	_DtKNF+25,?_eeprom_write+2
  2116  009904  EC2F  F078         	call	_eeprom_write	;wreg free
  2117  009908                     l108:
  2118                           ;konfig.c: 329: }
  2119  009908  0102               	movlb	(_DtKNF+17) shr (0+8)
  2120  00990A  6B41               	clrf	(_DtKNF+17)& (0+255),b
  2121                           ;konfig.c: 331: RSDT1.RRD_KNF=0;
  2122  00990C  0101               	movlb	(_RSDT1+1) shr (0+8)
  2123  00990E  9725               	bcf	(_RSDT1+1)& (0+255),3,b
  2124                           ;konfig.c: 332: RSDT1.RD_KNF=0;
  2125  009910  9325               	bcf	(_RSDT1+1)& (0+255),1,b
  2126                           ;konfig.c: 333: return 1;
  2127  009912  0C01               	retlw	1
  2128  009914                     l62:
  2129                           ;konfig.c: 334: }
  2130  009914  0C00               	retlw	0
  2131                           ;konfig.c: 336: }
  2132  009916                     __end_of_SaveKnfPar:
  2133                           ;konfig.c: 338: void SetMinMaxPCO(void)
  2134                           ;konfig.c: 339: {
  2135  009916                     _SetMinMaxPCO:
  2136  000000                     
  2137                           ;	_kn assigned to ?a_SetMinMaxPCO+0
  2138  000000                     _SetMinMaxPCO$kn	set	?a_SetMinMaxPCO
  2139                           ;konfig.c: 340: volatile unsigned char kn;
  2140  009916  EE02  F03B         	lfsr	0,_DtKNF+11
  2141  00991A  50EF               	movf	indf0,w,c
  2142  00991C  E119               	bnz	l111
  2143                           ;konfig.c: 343: {
  2144  00991E  0E28               	movlw	40
  2145  009920  CFE8 F1BB          	movff	wreg,_DtCO+5
  2146                           ;konfig.c: 345: kn=DtKNF.pgmx;
  2147  009924  C247  F0EF         	movff	_DtKNF+23,?a_SetMinMaxPCO	;volatile
  2148                           ;konfig.c: 346: if(kn<40) kn=40;
  2149  009928  0100               	movlb	__Lparam shr (0+8)
  2150  00992A  61EF               	cpfslt	?a_SetMinMaxPCO^(__Lparam& (0+65280)),b	
      +                          ;volatile
  2151  00992C  D001               	goto	l112
  2152  00992E  6FEF               	movwf	?a_SetMinMaxPCO^(__Lparam& (0+65280)),b	;
      +                          volatile
  2153  009930                     l112:
  2154                           ;konfig.c: 347: if(kn>85) kn=85;
  2155  009930  0E55               	movlw	85
  2156  009932  0100               	movlb	__Lparam shr (0+8)
  2157  009934  65EF               	cpfsgt	?a_SetMinMaxPCO^(__Lparam& (0+65280)),b	
      +                          ;volatile
  2158  009936  D001               	goto	l113
  2159  009938  6FEF               	movwf	?a_SetMinMaxPCO^(__Lparam& (0+65280)),b	;
      +                          volatile
  2160  00993A                     l113:
  2161                           ;konfig.c: 348: DtCO.maxPCO=kn;
  2162  00993A  C0EF  F1BC         	movff	?a_SetMinMaxPCO,_DtCO+6	;volatile
  2163                           ;konfig.c: 349: if(DtCO.maxPCO<DtCO.minPCO) DtCO
      +                          .maxPCO=DtCO.minPCO;
  2164  00993E  C1BB  FFE8         	movff	_DtCO+5,wreg
  2165  009942  0101               	movlb	(_DtCO+6) shr (0+8)
  2166  009944  61BC               	cpfslt	(_DtCO+6)& (0+255),b
  2167  009946  D002               	goto	l114
  2168  009948  C1BB  F1BC         	movff	_DtCO+5,_DtCO+6
  2169  00994C                     l114:
  2170                           ;konfig.c: 350: M.SETPmin=40;
  2171  00994C  0E28               	movlw	40
  2172  00994E  D018               	goto	L1
  2173                           ;konfig.c: 351: }
  2174  009950                     l111:
  2175                           ;konfig.c: 352: else
  2176  009950  0E23               	movlw	35
  2177  009952  CFE8 F1BB          	movff	wreg,_DtCO+5
  2178                           ;konfig.c: 355: kn=DtKNF.pgmx;
  2179  009956  C247  F0EF         	movff	_DtKNF+23,?a_SetMinMaxPCO	;volatile
  2180                           ;konfig.c: 356: if(kn<35) kn=35;
  2181  00995A  0100               	movlb	__Lparam shr (0+8)
  2182  00995C  61EF               	cpfslt	?a_SetMinMaxPCO^(__Lparam& (0+65280)),b	
      +                          ;volatile
  2183  00995E  D001               	goto	l116
  2184  009960  6FEF               	movwf	?a_SetMinMaxPCO^(__Lparam& (0+65280)),b	;
      +                          volatile
  2185  009962                     l116:
  2186                           ;konfig.c: 357: if(kn>55) kn=55;
  2187  009962  0E37               	movlw	55
  2188  009964  0100               	movlb	__Lparam shr (0+8)
  2189  009966  65EF               	cpfsgt	?a_SetMinMaxPCO^(__Lparam& (0+65280)),b	
      +                          ;volatile
  2190  009968  D001               	goto	l117
  2191  00996A  6FEF               	movwf	?a_SetMinMaxPCO^(__Lparam& (0+65280)),b	;
      +                          volatile
  2192  00996C                     l117:
  2193                           ;konfig.c: 358: DtCO.maxPCO=kn;
  2194  00996C  C0EF  F1BC         	movff	?a_SetMinMaxPCO,_DtCO+6	;volatile
  2195                           ;konfig.c: 359: if(DtCO.maxPCO<DtCO.minPCO) DtCO
      +                          .maxPCO=DtCO.minPCO;
  2196  009970  C1BB  FFE8         	movff	_DtCO+5,wreg
  2197  009974  0101               	movlb	(_DtCO+6) shr (0+8)
  2198  009976  61BC               	cpfslt	(_DtCO+6)& (0+255),b
  2199  009978  D002               	goto	l118
  2200  00997A  C1BB  F1BC         	movff	_DtCO+5,_DtCO+6
  2201  00997E                     l118:
  2202                           ;konfig.c: 360: M.SETPmin=35;
  2203  00997E  0E23               	movlw	35
  2204  009980                     L1:
  2205  009980  CFE8 F121          	movff	wreg,_M+33
  2206                           ;konfig.c: 361: }
  2207  009984  C1BB  F12E         	movff	_DtCO+5,_RSDT1+10
  2208                           ;konfig.c: 363: RSDT1.outPCOmx=DtCO.maxPCO;
  2209  009988  C1BC  F12F         	movff	_DtCO+6,_RSDT1+11
  2210                           ;konfig.c: 364: RSDT1.outSETPmin=M.SETPmin;
  2211  00998C  C121  F142         	movff	_M+33,_RSDT1+30
  2212                           ;konfig.c: 365: }
  2213  009990  0012               	return	
  2214  009992                     __end_of_SetMinMaxPCO:
  2215                           ;konfig.c: 367: void SetMinMaxPGD(void)
  2216                           ;konfig.c: 368: {
  2217  009992                     _SetMinMaxPGD:
  2218  000000                     
  2219                           ;konfig.c: 369: DtCO.minPCO=0;
  2220  009992  0101               	movlb	(_DtCO+5) shr (0+8)
  2221  009994  6BBB               	clrf	(_DtCO+5)& (0+255),b
  2222                           ;konfig.c: 370: DtCO.maxPCO=99;
  2223  009996  0E63               	movlw	99
  2224  009998  CFE8 F1BC          	movff	wreg,_DtCO+6
  2225                           ;konfig.c: 371: if(!DtKNF.opdg)
  2226  00999C  EE02  F03B         	lfsr	0,_DtKNF+11
  2227  0099A0  50EF               	movf	indf0,w,c
  2228  0099A2  E102               	bnz	l120
  2229                           ;konfig.c: 372: {
  2230  0099A4  0E28               	movlw	40
  2231  0099A6  D001               	goto	L2
  2232                           ;konfig.c: 374: }
  2233  0099A8                     l120:
  2234                           ;konfig.c: 375: else
  2235  0099A8  0E23               	movlw	35
  2236  0099AA                     L2:
  2237  0099AA  CFE8 F121          	movff	wreg,_M+33
  2238                           ;konfig.c: 378: }
  2239  0099AE  C1BB  F12E         	movff	_DtCO+5,_RSDT1+10
  2240                           ;konfig.c: 380: RSDT1.outPCOmx=DtCO.maxPCO;
  2241  0099B2  C1BC  F12F         	movff	_DtCO+6,_RSDT1+11
  2242                           ;konfig.c: 381: RSDT1.outSETPmin=M.SETPmin;
  2243  0099B6  C121  F142         	movff	_M+33,_RSDT1+30
  2244                           ;konfig.c: 382: }
  2245  0099BA  0012               	return	
  2246  0099BC                     __end_of_SetMinMaxPGD:
  2247                           ;konfig.c: 384: void ChkPCO(void)
  2248                           ;konfig.c: 385: {
  2249  0099BC                     _ChkPCO:
  2250  000000                     
  2251                           ;konfig.c: 386: if(DtCO.PCO<DtCO.minPCO) DtCO.PC
      +                          O=DtCO.minPCO;
  2252  0099BC  C1BB  FFE8         	movff	_DtCO+5,wreg
  2253  0099C0  0101               	movlb	(_DtCO+3) shr (0+8)
  2254  0099C2  61B9               	cpfslt	(_DtCO+3)& (0+255),b
  2255  0099C4  D002               	goto	l123
  2256  0099C6  C1BB  F1B9         	movff	_DtCO+5,_DtCO+3
  2257  0099CA                     l123:
  2258                           ;konfig.c: 387: if(DtCO.PCO>DtCO.maxPCO) DtCO.PC
      +                          O=DtCO.maxPCO;
  2259  0099CA  C1B9  FFE8         	movff	_DtCO+3,wreg
  2260  0099CE  0101               	movlb	(_DtCO+6) shr (0+8)
  2261  0099D0  61BC               	cpfslt	(_DtCO+6)& (0+255),b
  2262  0099D2  D002               	goto	l124
  2263  0099D4  C1BC  F1B9         	movff	_DtCO+6,_DtCO+3
  2264  0099D8                     l124:
  2265                           ;konfig.c: 388: if(DtCO.PCO!=eeprom_read(0x00C9)
      +                          ) eeprom_write(0x00C9,DtCO.PCO);
  2266  0099D8  0EC9               	movlw	201
  2267  0099DA  0100               	movlb	__Lparam shr (0+8)
  2268  0099DC  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2269  0099DE  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2270  0099E0  ECA2  F078         	call	_eeprom_read	;wreg free
  2271  0099E4  6E00               	movwf	btemp,c
  2272  0099E6  C000  F002         	movff	btemp,btemp+2
  2273  0099EA  6A03               	clrf	btemp+3,c
  2274  0099EC  C1B9  FFE8         	movff	_DtCO+3,wreg
  2275  0099F0  1802               	xorwf	btemp+2,w,c
  2276  0099F2  E001 D27A          	bnz	u2065
  2277  0099F6  D278               	goto	L26
  2278                           ;konfig.c: 389: }
  2279  0099F8                     __end_of_ChkPCO:
  2280                           ;konfig.c: 391: void ChkPGD(void)
  2281                           ;konfig.c: 392: {
  2282  0099F8                     _ChkPGD:
  2283  000000                     
  2284                           ;konfig.c: 393: if(DtCO.PCO<DtCO.minPCO) DtCO.PC
      +                          O=DtCO.minPCO;
  2285  0099F8  C1BB  FFE8         	movff	_DtCO+5,wreg
  2286  0099FC  0101               	movlb	(_DtCO+3) shr (0+8)
  2287  0099FE  61B9               	cpfslt	(_DtCO+3)& (0+255),b
  2288  009A00  D002               	goto	l127
  2289  009A02  C1BB  F1B9         	movff	_DtCO+5,_DtCO+3
  2290  009A06                     l127:
  2291                           ;konfig.c: 394: if(DtCO.PCO>DtCO.maxPCO) DtCO.PC
      +                          O=DtCO.maxPCO;
  2292  009A06  C1B9  FFE8         	movff	_DtCO+3,wreg
  2293  009A0A  0101               	movlb	(_DtCO+6) shr (0+8)
  2294  009A0C  61BC               	cpfslt	(_DtCO+6)& (0+255),b
  2295  009A0E  D002               	goto	l128
  2296  009A10  C1BC  F1B9         	movff	_DtCO+6,_DtCO+3
  2297  009A14                     l128:
  2298                           ;konfig.c: 395: if(DtCO.PCO!=eeprom_read(0x00DD)
      +                          ) eeprom_write(0x00DD,DtCO.PCO);
  2299  009A14  0EDD               	movlw	221
  2300  009A16  0100               	movlb	__Lparam shr (0+8)
  2301  009A18  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2302  009A1A  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2303  009A1C  ECA2  F078         	call	_eeprom_read	;wreg free
  2304  009A20  6E00               	movwf	btemp,c
  2305  009A22  C000  F002         	movff	btemp,btemp+2
  2306  009A26  6A03               	clrf	btemp+3,c
  2307  009A28  C1B9  FFE8         	movff	_DtCO+3,wreg
  2308  009A2C  1802               	xorwf	btemp+2,w,c
  2309  009A2E  E101               	bnz	u2095
  2310  009A30  5203               	movf	btemp+3,f,c
  2311  009A32                     u2095:
  2312  009A32  D272               	goto	u2245
  2313                           ;konfig.c: 396: }
  2314  009A34                     __end_of_ChkPGD:
  2315                           ;konfig.c: 399: void SetNSTCO(void)
  2316                           ;konfig.c: 400: {
  2317  009A34                     _SetNSTCO:
  2318  000000                     
  2319                           ;konfig.c: 401: volatile unsigned char i;
  2320  009A34  0100               	movlb	__Lparam shr (0+8)
  2321  009A36  6BEE               	clrf	?a_SetNSTCO^(__Lparam& (0+65280)),b	;volat
      +                          ile
  2322                           ;konfig.c: 404: while(i<10)
  2323  009A38  D005               	goto	l131
  2324  009A3A                     l132:
  2325                           ;konfig.c: 405: {
  2326  009A3A  0004               	clrwdt		;#
  2327                           ;konfig.c: 407: PomiarZW();
  2328  009A3C  EC97  F03E         	call	_PomiarZW	;wreg free
  2329                           ;konfig.c: 408: i++;
  2330  009A40  0100               	movlb	__Lparam shr (0+8)
  2331  009A42  2BEE               	incf	?a_SetNSTCO^(__Lparam& (0+65280)),f,b	;vol
      +                          atile
  2332  009A44                     l131:
  2333  009A44  0E09               	movlw	9
  2334  009A46  0100               	movlb	__Lparam shr (0+8)
  2335  009A48  65EE               	cpfsgt	?a_SetNSTCO^(__Lparam& (0+65280)),b	;vol
      +                          atile
  2336  009A4A  D7F7               	goto	l132
  2337                           ;konfig.c: 409: }
  2338  009A4C  0101               	movlb	_DtZW shr (0+8)
  2339  009A4E  B19C               	btfsc	_DtZW& (0+255),0,b
  2340  009A50  D00E               	goto	l134
  2341                           ;konfig.c: 411: {
  2342  009A52  0101               	movlb	(_M+3) shr (0+8)
  2343  009A54  9303               	bcf	(_M+3)& (0+255),1,b
  2344                           ;konfig.c: 413: DtCO.PCO=eeprom_read(0x00C9);
  2345  009A56  0EC9               	movlw	201
  2346  009A58  0100               	movlb	__Lparam shr (0+8)
  2347  009A5A  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2348  009A5C  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2349  009A5E  ECA2  F078         	call	_eeprom_read	;wreg free
  2350  009A62  CFE8 F1B9          	movff	wreg,_DtCO+3
  2351                           ;konfig.c: 415: SetMinMaxPCO();
  2352  009A66  DF57               	call	_SetMinMaxPCO	;wreg free
  2353                           ;konfig.c: 416: ChkPCO();
  2354  009A68  DFA9               	call	_ChkPCO	;wreg free
  2355                           ;konfig.c: 417: }
  2356  009A6A  EF25  F03F         	goto	_SetModPCO
  2357  009A6E                     l134:
  2358                           ;konfig.c: 418: else
  2359  009A6E  0101               	movlb	(_M+3) shr (0+8)
  2360  009A70  8303               	bsf	(_M+3)& (0+255),1,b
  2361                           ;konfig.c: 421: DtCO.PCO=eeprom_read(0x00DD);
  2362  009A72  0EDD               	movlw	221
  2363  009A74  0100               	movlb	__Lparam shr (0+8)
  2364  009A76  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2365  009A78  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2366  009A7A  ECA2  F078         	call	_eeprom_read	;wreg free
  2367  009A7E  CFE8 F1B9          	movff	wreg,_DtCO+3
  2368                           ;konfig.c: 423: SetPrt(20,1);
  2369  009A82  0E01               	movlw	1
  2370  009A84  0100               	movlb	__Lparam shr (0+8)
  2371  009A86  6FEF               	movwf	?_SetPrt^(__Lparam& (0+65280)),b
  2372  009A88  0E14               	movlw	20
  2373  009A8A  EC5D  F06F         	call	_SetPrt
  2374                           ;konfig.c: 424: SetMinMaxPGD();
  2375  009A8E  DF81               	call	_SetMinMaxPGD	;wreg free
  2376                           ;konfig.c: 425: ChkPGD();
  2377  009A90  DFB3               	call	_ChkPGD	;wreg free
  2378                           ;konfig.c: 426: DtCO.PGDPCO=GetPGD_PCO();
  2379  009A92  ECCA  F03F         	call	_GetPGD_PCO	;wreg free
  2380  009A96  CFE8 F1BD          	movff	wreg,_DtCO+7
  2381                           ;konfig.c: 427: }
  2382  009A9A  EF25  F03F         	goto	_SetModPCO	;wreg free
  2383                           ;konfig.c: 430: }
  2384  009A9E                     __end_of_SetNSTCO:
  2385                           ;konfig.c: 433: void RdEEParam(void)
  2386                           ;konfig.c: 434: {
  2387  009A9E                     _RdEEParam:
  2388  000000                     
  2389                           ;konfig.c: 436: DtKNF.tpkt=eeprom_read(0x00C5);
  2390  009A9E  0EC5               	movlw	197
  2391  009AA0  0100               	movlb	__Lparam shr (0+8)
  2392  009AA2  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2393  009AA4  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2394  009AA6  ECA2  F078         	call	_eeprom_read	;wreg free
  2395  009AAA  CFE8 F237          	movff	wreg,_DtKNF+7
  2396                           ;konfig.c: 437: RSDT1.outTPKT=DtKNF.tpkt;
  2397  009AAE  C237  F155         	movff	_DtKNF+7,_RSDT1+49
  2398                           ;konfig.c: 438: SetTpKtParam();
  2399  009AB2  D92D               	call	_SetTpKtParam	;wreg free
  2400                           ;konfig.c: 440: ModParam(DtKNF.tpkt,DtKNF.rdgz=e
      +                          eprom_read(0x00C4));
  2401  009AB4  0EC4               	movlw	196
  2402  009AB6  0100               	movlb	__Lparam shr (0+8)
  2403  009AB8  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2404  009ABA  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2405  009ABC  ECA2  F078         	call	_eeprom_read	;wreg free
  2406  009AC0  CFE8 F238          	movff	wreg,_DtKNF+8
  2407  009AC4  C238  F0EE         	movff	_DtKNF+8,?_ModParam
  2408  009AC8  C237  FFE8         	movff	_DtKNF+7,wreg
  2409  009ACC  EC03  F068         	call	_ModParam
  2410                           ;konfig.c: 441: RSDT1.outRGZ=DtKNF.rdgz;
  2411  009AD0  C238  F151         	movff	_DtKNF+8,_RSDT1+45
  2412                           ;konfig.c: 442: MocStart(DtKNF.mstr=eeprom_read(
      +                          0x00C1));
  2413  009AD4  0EC1               	movlw	193
  2414  009AD6  0100               	movlb	__Lparam shr (0+8)
  2415  009AD8  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2416  009ADA  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2417  009ADC  ECA2  F078         	call	_eeprom_read	;wreg free
  2418  009AE0  CFE8 F233          	movff	wreg,_DtKNF+3
  2419  009AE4  C233  FFE8         	movff	_DtKNF+3,wreg
  2420  009AE8  ECD5  F06B         	call	_MocStart
  2421                           ;konfig.c: 443: RSDT1.outMSTR=DtKNF.mstr;
  2422  009AEC  C233  F148         	movff	_DtKNF+3,_RSDT1+36
  2423                           ;konfig.c: 444: MocMaksCW(DtKNF.mxcw=eeprom_read
      +                          (0x00C2));
  2424  009AF0  0EC2               	movlw	194
  2425  009AF2  0100               	movlb	__Lparam shr (0+8)
  2426  009AF4  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2427  009AF6  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2428  009AF8  ECA2  F078         	call	_eeprom_read	;wreg free
  2429  009AFC  CFE8 F234          	movff	wreg,_DtKNF+4
  2430  009B00  C234  FFE8         	movff	_DtKNF+4,wreg
  2431  009B04  EC64  F06C         	call	_MocMaksCW
  2432                           ;konfig.c: 445: RSDT1.outMMAXU=DtKNF.mxcw;
  2433  009B08  C234  F14B         	movff	_DtKNF+4,_RSDT1+39
  2434                           ;konfig.c: 446: MocMaksCO(DtKNF.mxco=eeprom_read
      +                          (0x00C3));
  2435  009B0C  0EC3               	movlw	195
  2436  009B0E  0100               	movlb	__Lparam shr (0+8)
  2437  009B10  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2438  009B12  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2439  009B14  ECA2  F078         	call	_eeprom_read	;wreg free
  2440  009B18  CFE8 F235          	movff	wreg,_DtKNF+5
  2441  009B1C  C235  FFE8         	movff	_DtKNF+5,wreg
  2442  009B20  EC2A  F06C         	call	_MocMaksCO
  2443                           ;konfig.c: 447: RSDT1.outMMAXG=DtKNF.mxco;
  2444  009B24  C235  F14E         	movff	_DtKNF+5,_RSDT1+42
  2445                           ;konfig.c: 448: DtKNF.aleg=eeprom_read(0x00C6);
  2446  009B28  0EC6               	movlw	198
  2447  009B2A  0100               	movlb	__Lparam shr (0+8)
  2448  009B2C  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2449  009B2E  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2450  009B30  ECA2  F078         	call	_eeprom_read	;wreg free
  2451  009B34  CFE8 F24A          	movff	wreg,_DtKNF+26
  2452                           ;konfig.c: 449: RSDT1.outWANL=DtKNF.aleg;
  2453  009B38  C24A  F154         	movff	_DtKNF+26,_RSDT1+48
  2454                           ;konfig.c: 450: DtKNF.robg=eeprom_read(0x00C8);
  2455  009B3C  0EC8               	movlw	200
  2456  009B3E  0100               	movlb	__Lparam shr (0+8)
  2457  009B40  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2458  009B42  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2459  009B44  ECA2  F078         	call	_eeprom_read	;wreg free
  2460  009B48  CFE8 F23A          	movff	wreg,_DtKNF+10
  2461                           ;konfig.c: 451: RSDT1.outWOBG=DtKNF.robg;
  2462  009B4C  C23A  F158         	movff	_DtKNF+10,_RSDT1+52
  2463                           ;konfig.c: 452: PFN.poz=eeprom_read(0x00CB);
  2464  009B50  0ECB               	movlw	203
  2465  009B52  0100               	movlb	__Lparam shr (0+8)
  2466  009B54  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2467  009B56  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2468  009B58  ECA2  F078         	call	_eeprom_read	;wreg free
  2469  009B5C  6E00               	movwf	btemp,c
  2470  009B5E  0101               	movlb	(_PFN+1) shr (0+8)
  2471  009B60  C000  F1A1         	movff	btemp,_PFN+1
  2472  009B64  6BA2               	clrf	(_PFN+2)& (0+255),b
  2473                           ;konfig.c: 453: SetPFN();
  2474  009B66  D906               	call	_SetPFN	;wreg free
  2475                           ;konfig.c: 454: DtKNF.opdg=eeprom_read(0x00CC);
  2476  009B68  0ECC               	movlw	204
  2477  009B6A  0100               	movlb	__Lparam shr (0+8)
  2478  009B6C  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2479  009B6E  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2480  009B70  ECA2  F078         	call	_eeprom_read	;wreg free
  2481  009B74  CFE8 F23B          	movff	wreg,_DtKNF+11
  2482                           ;konfig.c: 455: RSDT1.outOPDG=DtKNF.opdg;
  2483  009B78  C23B  F159         	movff	_DtKNF+11,_RSDT1+53
  2484                           ;konfig.c: 459: DtKNF.tpcs=eeprom_read(0x00CD);
  2485  009B7C  0ECD               	movlw	205
  2486  009B7E  0100               	movlb	__Lparam shr (0+8)
  2487  009B80  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2488  009B82  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2489  009B84  ECA2  F078         	call	_eeprom_read	;wreg free
  2490  009B88  CFE8 F23C          	movff	wreg,_DtKNF+12
  2491                           ;konfig.c: 460: RSDT1.outTPCS=DtKNF.tpcs;
  2492  009B8C  C23C  F15A         	movff	_DtKNF+12,_RSDT1+54
  2493                           ;konfig.c: 461: DtKNF.wymCO=0;
  2494  009B90  0102               	movlb	_DtKNF shr (0+8)
  2495  009B92  9330               	bcf	_DtKNF& (0+255),1,b
  2496                           ;konfig.c: 462: DtKNF.wymCW=0;
  2497  009B94  9530               	bcf	_DtKNF& (0+255),2,b
  2498                           ;konfig.c: 463: M.LICZNIK_ANL=eeprom_read(0x00C7
      +                          );
  2499  009B96  0EC7               	movlw	199
  2500  009B98  0100               	movlb	__Lparam shr (0+8)
  2501  009B9A  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2502  009B9C  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2503  009B9E  ECA2  F078         	call	_eeprom_read	;wreg free
  2504  009BA2  CFE8 F10D          	movff	wreg,_M+13
  2505                           ;konfig.c: 465: if(M.LICZNIK_ANL)
  2506  009BA6  EE01  F00D         	lfsr	0,_M+13
  2507  009BAA  50EF               	movf	indf0,w,c
  2508  009BAC  E011               	bz	l137
  2509                           ;konfig.c: 466: {
  2510  009BAE  EE02  F04A         	lfsr	0,_DtKNF+26
  2511  009BB2  50EF               	movf	indf0,w,c
  2512  009BB4  E004               	bz	u2150
  2513  009BB6  EE02  F037         	lfsr	0,_DtKNF+7
  2514  009BBA  50EF               	movf	indf0,w,c
  2515  009BBC  E009               	bz	l137
  2516  009BBE                     u2150:
  2517                           ;konfig.c: 468: {
  2518  009BBE  0EC7               	movlw	199
  2519  009BC0  0100               	movlb	__Lparam shr (0+8)
  2520  009BC2  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2521  009BC4  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2522  009BC6  6BFB               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  2523  009BC8  EC2F  F078         	call	_eeprom_write	;wreg free
  2524                           ;konfig.c: 470: M.LICZNIK_ANL=0;
  2525  009BCC  0101               	movlb	(_M+13) shr (0+8)
  2526  009BCE  6B0D               	clrf	(_M+13)& (0+255),b
  2527  009BD0                     l137:
  2528                           ;konfig.c: 471: }
  2529  009BD0  0ED0               	movlw	208
  2530  009BD2  0100               	movlb	__Lparam shr (0+8)
  2531  009BD4  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2532  009BD6  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2533  009BD8  ECA2  F078         	call	_eeprom_read	;wreg free
  2534  009BDC  CFE8 F23D          	movff	wreg,_DtKNF+13
  2535                           ;konfig.c: 475: RSDT1.outRDPM=DtKNF.rdpm;
  2536  009BE0  C23D  F15B         	movff	_DtKNF+13,_RSDT1+55
  2537                           ;konfig.c: 476: DtKNF.dtpm=eeprom_read(0x00D1);
  2538  009BE4  0ED1               	movlw	209
  2539  009BE6  0100               	movlb	__Lparam shr (0+8)
  2540  009BE8  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2541  009BEA  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2542  009BEC  ECA2  F078         	call	_eeprom_read	;wreg free
  2543  009BF0  CFE8 F23E          	movff	wreg,_DtKNF+14
  2544                           ;konfig.c: 477: RSDT1.outDTPM=DtKNF.dtpm;
  2545  009BF4  C23E  F15C         	movff	_DtKNF+14,_RSDT1+56
  2546                           ;konfig.c: 478: DtKNF.mdpm=eeprom_read(0x00D2);
  2547  009BF8  0ED2               	movlw	210
  2548  009BFA  0100               	movlb	__Lparam shr (0+8)
  2549  009BFC  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2550  009BFE  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2551  009C00  ECA2  F078         	call	_eeprom_read	;wreg free
  2552  009C04  CFE8 F23F          	movff	wreg,_DtKNF+15
  2553                           ;konfig.c: 479: RSDT1.outMDPM=DtKNF.mdpm;
  2554  009C08  C23F  F15D         	movff	_DtKNF+15,_RSDT1+57
  2555                           ;konfig.c: 480: DtKNF.mgpm=eeprom_read(0x00D3);
  2556  009C0C  0ED3               	movlw	211
  2557  009C0E  0100               	movlb	__Lparam shr (0+8)
  2558  009C10  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2559  009C12  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2560  009C14  ECA2  F078         	call	_eeprom_read	;wreg free
  2561  009C18  CFE8 F240          	movff	wreg,_DtKNF+16
  2562                           ;konfig.c: 481: RSDT1.outMGPM=DtKNF.mgpm;
  2563  009C1C  C240  F15E         	movff	_DtKNF+16,_RSDT1+58
  2564                           ;konfig.c: 482: DtKNF.mgpm2=eeprom_read(0x00D4);
  2565  009C20  0ED4               	movlw	212
  2566  009C22  0100               	movlb	__Lparam shr (0+8)
  2567  009C24  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2568  009C26  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2569  009C28  ECA2  F078         	call	_eeprom_read	;wreg free
  2570  009C2C  CFE8 F242          	movff	wreg,_DtKNF+18
  2571                           ;konfig.c: 483: RSDT1.outMGPM2=DtKNF.mgpm2;
  2572  009C30  C242  F15F         	movff	_DtKNF+18,_RSDT1+59
  2573                           ;konfig.c: 484: DtKNF.hsco=eeprom_read(0x00D5);
  2574  009C34  0ED5               	movlw	213
  2575  009C36  0100               	movlb	__Lparam shr (0+8)
  2576  009C38  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2577  009C3A  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2578  009C3C  ECA2  F078         	call	_eeprom_read	;wreg free
  2579  009C40  CFE8 F243          	movff	wreg,_DtKNF+19
  2580                           ;konfig.c: 485: RSDT1.outHSCO=DtKNF.hsco;
  2581  009C44  C243  F160         	movff	_DtKNF+19,_RSDT1+60
  2582                           ;konfig.c: 486: DtKNF.conw=eeprom_read(0x00D6);
  2583  009C48  0ED6               	movlw	214
  2584  009C4A  0100               	movlb	__Lparam shr (0+8)
  2585  009C4C  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2586  009C4E  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2587  009C50  ECA2  F078         	call	_eeprom_read	;wreg free
  2588  009C54  CFE8 F244          	movff	wreg,_DtKNF+20
  2589                           ;konfig.c: 487: RSDT1.outCONW=DtKNF.conw;
  2590  009C58  C244  F161         	movff	_DtKNF+20,_RSDT1+61
  2591                           ;konfig.c: 488: DtKNF.prop=eeprom_read(0x00D7);
  2592  009C5C  0ED7               	movlw	215
  2593  009C5E  0100               	movlb	__Lparam shr (0+8)
  2594  009C60  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2595  009C62  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2596  009C64  ECA2  F078         	call	_eeprom_read	;wreg free
  2597  009C68  CFE8 F245          	movff	wreg,_DtKNF+21
  2598                           ;konfig.c: 489: RSDT1.outPROP=DtKNF.prop;
  2599  009C6C  C245  F162         	movff	_DtKNF+21,_RSDT1+62
  2600                           ;konfig.c: 490: DtKNF.pgmx=eeprom_read(0x00D9);
  2601  009C70  0ED9               	movlw	217
  2602  009C72  0100               	movlb	__Lparam shr (0+8)
  2603  009C74  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2604  009C76  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2605  009C78  ECA2  F078         	call	_eeprom_read	;wreg free
  2606  009C7C  CFE8 F247          	movff	wreg,_DtKNF+23
  2607                           ;konfig.c: 491: RSDT1.outPGMX=DtKNF.pgmx;
  2608  009C80  C247  F163         	movff	_DtKNF+23,_RSDT1+63
  2609                           ;konfig.c: 493: DtKNF.pgdr=eeprom_read(0x00DA);
  2610  009C84  0EDA               	movlw	218
  2611  009C86  0100               	movlb	__Lparam shr (0+8)
  2612  009C88  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2613  009C8A  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2614  009C8C  ECA2  F078         	call	_eeprom_read	;wreg free
  2615  009C90  CFE8 F246          	movff	wreg,_DtKNF+22
  2616                           ;konfig.c: 494: RSDT1.outPGDR=DtKNF.pgdr;
  2617  009C94  C246  F164         	movff	_DtKNF+22,_RSDT1+64
  2618                           ;konfig.c: 495: DtKNF.cwmg=eeprom_read(0x00DC);
  2619  009C98  0EDC               	movlw	220
  2620  009C9A  0100               	movlb	__Lparam shr (0+8)
  2621  009C9C  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2622  009C9E  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2623  009CA0  ECA2  F078         	call	_eeprom_read	;wreg free
  2624  009CA4  CFE8 F248          	movff	wreg,_DtKNF+24
  2625                           ;konfig.c: 496: RSDT1.outCWMG=DtKNF.cwmg;
  2626  009CA8  C248  F165         	movff	_DtKNF+24,_RSDT1+65
  2627                           ;konfig.c: 497: DtKNF.cwtm=eeprom_read(0x00DB);
  2628  009CAC  0EDB               	movlw	219
  2629  009CAE  0100               	movlb	__Lparam shr (0+8)
  2630  009CB0  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2631  009CB2  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2632  009CB4  ECA2  F078         	call	_eeprom_read	;wreg free
  2633  009CB8  CFE8 F249          	movff	wreg,_DtKNF+25
  2634                           ;konfig.c: 498: RSDT1.outCWTM=DtKNF.cwtm;
  2635  009CBC  C249  F166         	movff	_DtKNF+25,_RSDT1+66
  2636                           ;konfig.c: 500: DtKNF.teco=0;
  2637  009CC0  0102               	movlb	(_DtKNF+17) shr (0+8)
  2638  009CC2  6B41               	clrf	(_DtKNF+17)& (0+255),b
  2639                           ;konfig.c: 502: DtKNF.alin=eeprom_read(0x00D8);
  2640  009CC4  0ED8               	movlw	216
  2641  009CC6  0100               	movlb	__Lparam shr (0+8)
  2642  009CC8  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2643  009CCA  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2644  009CCC  ECA2  F078         	call	_eeprom_read	;wreg free
  2645  009CD0  CFE8 F24B          	movff	wreg,_DtKNF+27
  2646                           ;konfig.c: 503: if((DtKNF.alin<1)||(DtKNF.alin>5
      +                          )) DtKNF.alin=5;
  2647  009CD4  0E01               	movlw	1
  2648  009CD6  0102               	movlb	(_DtKNF+27) shr (0+8)
  2649  009CD8  614B               	cpfslt	(_DtKNF+27)& (0+255),b
  2650  009CDA  D001               	goto	u2161
  2651  009CDC  D003               	goto	u2180
  2652  009CDE                     u2161:
  2653  009CDE  0E05               	movlw	5
  2654  009CE0  654B               	cpfsgt	(_DtKNF+27)& (0+255),b
  2655  009CE2  D003               	goto	l139
  2656  009CE4                     u2180:
  2657  009CE4  0E05               	movlw	5
  2658  009CE6  CFE8 F24B          	movff	wreg,_DtKNF+27
  2659  009CEA                     l139:
  2660                           ;konfig.c: 507: RSDT1.outALIN=DtKNF.alin;
  2661  009CEA  C24B  F167         	movff	_DtKNF+27,_RSDT1+67
  2662                           ;konfig.c: 509: DtCW.PCW=eeprom_read(0x00CA);
  2663  009CEE  0ECA               	movlw	202
  2664  009CF0  0100               	movlb	__Lparam shr (0+8)
  2665  009CF2  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2666  009CF4  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2667  009CF6  ECA2  F078         	call	_eeprom_read	;wreg free
  2668  009CFA  CFE8 F1AA          	movff	wreg,_DtCW+3
  2669                           ;konfig.c: 510: RSDT1.outPCW=DtCW.PCW;
  2670  009CFE  C1AA  F12D         	movff	_DtCW+3,_RSDT1+9
  2671                           ;konfig.c: 511: SetNSTCO();
  2672  009D02  DE98               	call	_SetNSTCO	;wreg free
  2673                           ;konfig.c: 514: RSDT1.outPCO=DtCO.PCO;
  2674  009D04  C1B9  F12C         	movff	_DtCO+3,_RSDT1+8
  2675                           ;konfig.c: 515: RSDT1.outSETPmax=M.SETPmax;
  2676  009D08  C122  F143         	movff	_M+34,_RSDT1+31
  2677                           ;konfig.c: 516: }
  2678  009D0C  0012               	return	
  2679  009D0E                     __end_of_RdEEParam:
  2680                           ;konfig.c: 519: void SetTpKtParam(void)
  2681                           ;konfig.c: 520: {
  2682  009D0E                     _SetTpKtParam:
  2683  000000                     
  2684                           ;konfig.c: 521: switch(DtKNF.tpkt)
  2685  009D0E  D014               	goto	l142
  2686  009D10                     l143:
  2687                           ;konfig.c: 522: {
  2688                           ;konfig.c: 524: {
  2689  009D10  0102               	movlb	(_DtKNF+6) shr (0+8)
  2690  009D12  6B36               	clrf	(_DtKNF+6)& (0+255),b
  2691                           ;konfig.c: 527: DtKNF.tpwm=0;
  2692  009D14  6B39               	clrf	(_DtKNF+9)& (0+255),b
  2693                           ;konfig.c: 528: break;
  2694  009D16  0012               	return	
  2695  009D18                     l144:
  2696                           ;konfig.c: 529: }
  2697                           ;konfig.c: 531: {
  2698  009D18  0102               	movlb	(_DtKNF+6) shr (0+8)
  2699  009D1A  6B36               	clrf	(_DtKNF+6)& (0+255),b
  2700                           ;konfig.c: 534: DtKNF.tpwm=0;
  2701  009D1C  6B39               	clrf	(_DtKNF+9)& (0+255),b
  2702                           ;konfig.c: 535: break;
  2703  009D1E  0012               	return	
  2704  009D20                     l145:
  2705                           ;konfig.c: 536: }
  2706                           ;konfig.c: 538: {
  2707  009D20  0102               	movlb	(_DtKNF+6) shr (0+8)
  2708  009D22  6B36               	clrf	(_DtKNF+6)& (0+255),b
  2709                           ;konfig.c: 541: DtKNF.tpwm=0;
  2710  009D24  6B39               	clrf	(_DtKNF+9)& (0+255),b
  2711                           ;konfig.c: 542: break;
  2712  009D26  0012               	return	
  2713  009D28                     l146:
  2714                           ;konfig.c: 543: }
  2715                           ;konfig.c: 545: {
  2716  009D28  0102               	movlb	(_DtKNF+6) shr (0+8)
  2717  009D2A  6B36               	clrf	(_DtKNF+6)& (0+255),b
  2718                           ;konfig.c: 548: DtKNF.tpwm=0;
  2719  009D2C  6B39               	clrf	(_DtKNF+9)& (0+255),b
  2720                           ;konfig.c: 549: break;
  2721  009D2E  0012               	return	
  2722  009D30                     l147:
  2723                           ;konfig.c: 550: }
  2724                           ;konfig.c: 552: {
  2725  009D30  0102               	movlb	(_DtKNF+6) shr (0+8)
  2726  009D32  6B36               	clrf	(_DtKNF+6)& (0+255),b
  2727                           ;konfig.c: 555: DtKNF.tpwm=0;
  2728  009D34  6B39               	clrf	(_DtKNF+9)& (0+255),b
  2729                           ;konfig.c: 556: break;
  2730  009D36  0012               	return	
  2731  009D38                     l142:
  2732  009D38  C237  FFE8         	movff	_DtKNF+7,wreg
  2733  009D3C  0A00               	xorlw	0
  2734  009D3E  E0E8               	bz	l143
  2735  009D40  0A01               	xorlw	1
  2736  009D42  E0EA               	bz	l144
  2737  009D44  0A03               	xorlw	3
  2738  009D46  E0F0               	bz	l146
  2739  009D48  0A01               	xorlw	1
  2740  009D4A  E0EA               	bz	l145
  2741  009D4C  D7F1               	goto	l147
  2742                           ;konfig.c: 559: }
  2743  009D4E                     __end_of_SetTpKtParam:
  2744                           ;konfig.c: 562: void SetDefaultValue(void)
  2745                           ;konfig.c: 563: {
  2746  009D4E                     _SetDefaultValue:
  2747  000000                     
  2748                           ;konfig.c: 564: switch(DtKNF.tpkt)
  2749  009D4E  D00D               	goto	l150
  2750  009D50                     l151:
  2751                           ;konfig.c: 565: {
  2752                           ;konfig.c: 567: {
  2753  009D50  0E0F               	movlw	15
  2754  009D52  D001               	goto	L12
  2755                           ;konfig.c: 569: eeprom_write(0x00C1,DtKNF.mstr);
  2756                           ;konfig.c: 570: break;
  2757  009D54                     l152:
  2758                           ;konfig.c: 571: }
  2759                           ;konfig.c: 573: {
  2760  009D54  0E28               	movlw	40
  2761  009D56                     L12:
  2762  009D56  CFE8 F233          	movff	wreg,_DtKNF+3
  2763                           ;konfig.c: 575: eeprom_write(0x00C1,DtKNF.mstr);
  2764  009D5A  0EC1               	movlw	193
  2765  009D5C  0100               	movlb	__Lparam shr (0+8)
  2766  009D5E  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2767  009D60  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2768  009D62  C233  F0FB         	movff	_DtKNF+3,?_eeprom_write+2
  2769  009D66  EF2F  F078         	goto	_eeprom_write	;wreg free
  2770                           ;konfig.c: 576: break;
  2771  009D6A                     l150:
  2772  009D6A  C237  FFE8         	movff	_DtKNF+7,wreg
  2773  009D6E  0A03               	xorlw	3
  2774  009D70  E0EF               	bz	l151
  2775  009D72  D7F0               	goto	l152
  2776                           ;konfig.c: 579: }
  2777  009D74                     __end_of_SetDefaultValue:
  2778                           ;konfig.c: 583: void SetPFN(void)
  2779                           ;konfig.c: 584: {
  2780  009D74                     _SetPFN:
  2781  000000                     
  2782                           ;konfig.c: 585: if(PFN.poz==1)
  2783  009D74  0101               	movlb	(_PFN+1) shr (0+8)
  2784  009D76  51A1               	movf	(_PFN+1)& (0+255),w,b
  2785  009D78  0A01               	xorlw	1
  2786  009D7A  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2787  009D7C  E124               	bnz	l154
  2788                           ;konfig.c: 586: {
  2789  009D7E  0101               	movlb	_PFN shr (0+8)
  2790  009D80  99A0               	bcf	_PFN& (0+255),4,b
  2791                           ;konfig.c: 588: PFN._lato=0;
  2792  009D82  97A0               	bcf	_PFN& (0+255),3,b
  2793                           ;konfig.c: 589: PFN._off=1;
  2794  009D84  85A0               	bsf	_PFN& (0+255),2,b
  2795                           ;konfig.c: 590: PFN._csn=0;
  2796  009D86  93A0               	bcf	_PFN& (0+255),1,b
  2797                           ;konfig.c: 591: BitSet2(&RSDT1.outSTAT2,4,0);
  2798  009D88  0100               	movlb	__Lparam shr (0+8)
  2799  009D8A  0E38               	movlw	low (_RSDT1+20)
  2800  009D8C  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2801  009D8E  0E01               	movlw	high (_RSDT1+20)
  2802  009D90  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2803  009D92  0E04               	movlw	4
  2804  009D94  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2805  009D96  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2806  009D98  ECFA  F076         	call	_BitSet2	;wreg free
  2807                           ;konfig.c: 592: BitSet2(&RSDT1.outSTAT2,5,0);
  2808  009D9C  0100               	movlb	__Lparam shr (0+8)
  2809  009D9E  0E38               	movlw	low (_RSDT1+20)
  2810  009DA0  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2811  009DA2  0E01               	movlw	high (_RSDT1+20)
  2812  009DA4  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2813  009DA6  0E05               	movlw	5
  2814  009DA8  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2815  009DAA  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2816  009DAC  ECFA  F076         	call	_BitSet2	;wreg free
  2817                           ;konfig.c: 593: BitSet2(&RSDT1.outSTAT2,6,1);
  2818  009DB0  0100               	movlb	__Lparam shr (0+8)
  2819  009DB2  0E38               	movlw	low (_RSDT1+20)
  2820  009DB4  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2821  009DB6  0E01               	movlw	high (_RSDT1+20)
  2822  009DB8  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2823  009DBA  0E06               	movlw	6
  2824  009DBC  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2825  009DBE  0E01               	movlw	1
  2826  009DC0  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2827  009DC2  EFFA  F076         	goto	_BitSet2	;wreg free
  2828                           ;konfig.c: 594: }
  2829  009DC6                     l154:
  2830                           ;konfig.c: 595: else
  2831  009DC6  0101               	movlb	(_PFN+1) shr (0+8)
  2832  009DC8  51A1               	movf	(_PFN+1)& (0+255),w,b
  2833  009DCA  0A03               	xorlw	3
  2834  009DCC  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2835  009DCE  E11B               	bnz	l156
  2836                           ;konfig.c: 597: {
  2837  009DD0  0101               	movlb	_PFN shr (0+8)
  2838  009DD2  89A0               	bsf	_PFN& (0+255),4,b
  2839                           ;konfig.c: 599: PFN._lato=0;
  2840  009DD4  97A0               	bcf	_PFN& (0+255),3,b
  2841                           ;konfig.c: 600: PFN._off=0;
  2842  009DD6  95A0               	bcf	_PFN& (0+255),2,b
  2843                           ;konfig.c: 601: PFN._csn=0;
  2844  009DD8  93A0               	bcf	_PFN& (0+255),1,b
  2845                           ;konfig.c: 602: BitSet2(&RSDT1.outSTAT2,4,1);
  2846  009DDA  0100               	movlb	__Lparam shr (0+8)
  2847  009DDC  0E38               	movlw	low (_RSDT1+20)
  2848  009DDE  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2849  009DE0  0E01               	movlw	high (_RSDT1+20)
  2850  009DE2  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2851  009DE4  0E04               	movlw	4
  2852  009DE6  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2853  009DE8  0E01               	movlw	1
  2854  009DEA  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2855  009DEC  ECFA  F076         	call	_BitSet2	;wreg free
  2856                           ;konfig.c: 603: BitSet2(&RSDT1.outSTAT2,5,0);
  2857  009DF0  0100               	movlb	__Lparam shr (0+8)
  2858  009DF2  0E38               	movlw	low (_RSDT1+20)
  2859  009DF4  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2860  009DF6  0E01               	movlw	high (_RSDT1+20)
  2861  009DF8  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2862  009DFA  0E05               	movlw	5
  2863  009DFC  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2864  009DFE  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2865  009E00  ECFA  F076         	call	_BitSet2	;wreg free
  2866  009E04  D03E               	goto	L14
  2867                           ;konfig.c: 604: BitSet2(&RSDT1.outSTAT2,6,0);
  2868                           ;konfig.c: 605: }
  2869  009E06                     l156:
  2870                           ;konfig.c: 606: else
  2871  009E06  0101               	movlb	(_PFN+1) shr (0+8)
  2872  009E08  51A1               	movf	(_PFN+1)& (0+255),w,b
  2873  009E0A  0A02               	xorlw	2
  2874  009E0C  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2875                           ;konfig.c: 608: {
  2876  009E0E  0101               	movlb	_PFN shr (0+8)
  2877  009E10  E11A               	bnz	L8
  2878  009E12  99A0               	bcf	_PFN& (0+255),4,b
  2879                           ;konfig.c: 610: PFN._lato=1;
  2880  009E14  87A0               	bsf	_PFN& (0+255),3,b
  2881                           ;konfig.c: 611: PFN._off=0;
  2882  009E16  95A0               	bcf	_PFN& (0+255),2,b
  2883                           ;konfig.c: 612: PFN._csn=0;
  2884  009E18  93A0               	bcf	_PFN& (0+255),1,b
  2885                           ;konfig.c: 613: BitSet2(&RSDT1.outSTAT2,4,0);
  2886  009E1A  0100               	movlb	__Lparam shr (0+8)
  2887  009E1C  0E38               	movlw	low (_RSDT1+20)
  2888  009E1E  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2889  009E20  0E01               	movlw	high (_RSDT1+20)
  2890  009E22  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2891  009E24  0E04               	movlw	4
  2892  009E26  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2893  009E28  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2894  009E2A  ECFA  F076         	call	_BitSet2	;wreg free
  2895                           ;konfig.c: 614: BitSet2(&RSDT1.outSTAT2,5,1);
  2896  009E2E  0100               	movlb	__Lparam shr (0+8)
  2897  009E30  0E38               	movlw	low (_RSDT1+20)
  2898  009E32  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2899  009E34  0E01               	movlw	high (_RSDT1+20)
  2900  009E36  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2901  009E38  0E05               	movlw	5
  2902  009E3A  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2903  009E3C  0E01               	movlw	1
  2904  009E3E  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2905  009E40  ECFA  F076         	call	_BitSet2	;wreg free
  2906  009E44  D01E               	goto	L14
  2907                           ;konfig.c: 615: BitSet2(&RSDT1.outSTAT2,6,0);
  2908                           ;konfig.c: 616: }
  2909                           ;konfig.c: 617: else
  2910  009E46                     L8:
  2911  009E46  89A0               	bsf	_PFN& (0+255),4,b
  2912                           ;konfig.c: 620: PFN._lato=0;
  2913  009E48  0101               	movlb	_PFN shr (0+8)
  2914  009E4A  97A0               	bcf	_PFN& (0+255),3,b
  2915                           ;konfig.c: 621: PFN._off=0;
  2916  009E4C  95A0               	bcf	_PFN& (0+255),2,b
  2917                           ;konfig.c: 622: PFN._csn=0;
  2918  009E4E  93A0               	bcf	_PFN& (0+255),1,b
  2919                           ;konfig.c: 623: PFN.poz=3;
  2920  009E50  0101               	movlb	(_PFN+1) shr (0+8)
  2921  009E52  0E03               	movlw	3
  2922  009E54  6FA1               	movwf	(_PFN+1)& (0+255),b
  2923  009E56  6BA2               	clrf	(_PFN+2)& (0+255),b
  2924                           ;konfig.c: 624: BitSet2(&RSDT1.outSTAT2,4,1);
  2925  009E58  0100               	movlb	__Lparam shr (0+8)
  2926  009E5A  0E38               	movlw	low (_RSDT1+20)
  2927  009E5C  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2928  009E5E  0E01               	movlw	high (_RSDT1+20)
  2929  009E60  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2930  009E62  0E04               	movlw	4
  2931  009E64  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2932  009E66  0E01               	movlw	1
  2933  009E68  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2934  009E6A  ECFA  F076         	call	_BitSet2	;wreg free
  2935                           ;konfig.c: 625: BitSet2(&RSDT1.outSTAT2,5,0);
  2936  009E6E  0100               	movlb	__Lparam shr (0+8)
  2937  009E70  0E38               	movlw	low (_RSDT1+20)
  2938  009E72  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2939  009E74  0E01               	movlw	high (_RSDT1+20)
  2940  009E76  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2941  009E78  0E05               	movlw	5
  2942  009E7A  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2943  009E7C  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2944  009E7E  ECFA  F076         	call	_BitSet2	;wreg free
  2945  009E82                     L14:
  2946                           ;konfig.c: 626: BitSet2(&RSDT1.outSTAT2,6,0);
  2947  009E82  0100               	movlb	__Lparam shr (0+8)
  2948  009E84  0E38               	movlw	low (_RSDT1+20)
  2949  009E86  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  2950  009E88  0E01               	movlw	high (_RSDT1+20)
  2951  009E8A  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  2952  009E8C  0E06               	movlw	6
  2953  009E8E  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  2954  009E90  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  2955  009E92  EFFA  F076         	goto	_BitSet2	;wreg free
  2956                           ;konfig.c: 627: }
  2957  009E96                     __end_of_SetPFN:
  2958                           ;konfig.c: 632: void WriteEEPCW(void)
  2959                           ;konfig.c: 633: {
  2960  009E96                     _WriteEEPCW:
  2961  000000                     
  2962                           ;konfig.c: 634: if(DtCW.PCW!=eeprom_read(0x00CA)
      +                          )
  2963  009E96  0ECA               	movlw	202
  2964  009E98  0100               	movlb	__Lparam shr (0+8)
  2965  009E9A  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  2966  009E9C  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  2967  009E9E  ECA2  F078         	call	_eeprom_read	;wreg free
  2968  009EA2  6E00               	movwf	btemp,c
  2969  009EA4  C000  F002         	movff	btemp,btemp+2
  2970  009EA8  6A03               	clrf	btemp+3,c
  2971  009EAA  C1AA  FFE8         	movff	_DtCW+3,wreg
  2972  009EAE  1802               	xorwf	btemp+2,w,c
  2973  009EB0  E101               	bnz	u2225
  2974  009EB2  5203               	movf	btemp+3,f,c
  2975  009EB4                     u2225:
  2976  009EB4  B4D8               	btfsc	status,2,c
  2977  009EB6  0012               	return	
  2978                           ;konfig.c: 635: {
  2979  009EB8  0ECA               	movlw	202
  2980  009EBA  0100               	movlb	__Lparam shr (0+8)
  2981  009EBC  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2982  009EBE  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2983  009EC0  C1AA  F0FB         	movff	_DtCW+3,?_eeprom_write+2
  2984  009EC4  EF2F  F078         	goto	_eeprom_write	;wreg free
  2985                           ;konfig.c: 637: }
  2986  009EC8                     __end_of_WriteEEPCW:
  2987                           ;konfig.c: 639: unsigned char ReadEEPCW(void)
  2988                           ;konfig.c: 640: {
  2989  009EC8                     _ReadEEPCW:
  2990  000000                     
  2991                           ;konfig.c: 641: return eeprom_read(0x00CA);
  2992  009EC8  0ECA               	movlw	202
  2993  009ECA  D08B               	goto	L18
  2994                           ;konfig.c: 642: }
  2995  009ECC                     __end_of_ReadEEPCW:
  2996                           ;konfig.c: 646: void WriteEEPCO(void)
  2997                           ;konfig.c: 647: {
  2998  009ECC                     _WriteEEPCO:
  2999  000000                     
  3000                           ;konfig.c: 648: if(DtCO.PCO!=eeprom_read(0x00C9)
      +                          )
  3001  009ECC  0EC9               	movlw	201
  3002  009ECE  0100               	movlb	__Lparam shr (0+8)
  3003  009ED0  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3004  009ED2  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  3005  009ED4  ECA2  F078         	call	_eeprom_read	;wreg free
  3006  009ED8  6E00               	movwf	btemp,c
  3007  009EDA  C000  F002         	movff	btemp,btemp+2
  3008  009EDE  6A03               	clrf	btemp+3,c
  3009  009EE0  C1B9  FFE8         	movff	_DtCO+3,wreg
  3010  009EE4  1802               	xorwf	btemp+2,w,c
  3011  009EE6  E101               	bnz	u2235
  3012  009EE8                     L26:
  3013  009EE8  5203               	movf	btemp+3,f,c
  3014  009EEA                     u2065:
  3015  009EEA                     u2235:
  3016  009EEA  B4D8               	btfsc	status,2,c
  3017  009EEC  0012               	return	
  3018                           ;konfig.c: 649: {
  3019  009EEE  0EC9               	movlw	201
  3020  009EF0  D016               	goto	L16
  3021                           ;konfig.c: 651: }
  3022  009EF2                     __end_of_WriteEEPCO:
  3023                           ;konfig.c: 653: unsigned char ReadEEPCO(void)
  3024                           ;konfig.c: 654: {
  3025  009EF2                     _ReadEEPCO:
  3026  000000                     
  3027                           ;konfig.c: 655: return eeprom_read(0x00C9);
  3028  009EF2  0EC9               	movlw	201
  3029  009EF4  D076               	goto	L18
  3030                           ;konfig.c: 656: }
  3031  009EF6                     __end_of_ReadEEPCO:
  3032                           ;konfig.c: 660: unsigned char ReadEEPPGD(void)
  3033                           ;konfig.c: 661: {
  3034  009EF6                     _ReadEEPPGD:
  3035  000000                     
  3036                           ;konfig.c: 662: return eeprom_read(0x00DD);
  3037  009EF6  0EDD               	movlw	221
  3038  009EF8  D074               	goto	L18
  3039                           ;konfig.c: 663: }
  3040  009EFA                     __end_of_ReadEEPPGD:
  3041                           ;konfig.c: 664: void WriteEEPPGD(void)
  3042                           ;konfig.c: 665: {
  3043  009EFA                     _WriteEEPPGD:
  3044  000000                     
  3045                           ;konfig.c: 666: if(DtCO.PCO!=eeprom_read(0x00DD)
      +                          )
  3046  009EFA  0EDD               	movlw	221
  3047  009EFC  0100               	movlb	__Lparam shr (0+8)
  3048  009EFE  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3049  009F00  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  3050  009F02  ECA2  F078         	call	_eeprom_read	;wreg free
  3051  009F06  6E00               	movwf	btemp,c
  3052  009F08  C000  F002         	movff	btemp,btemp+2
  3053  009F0C  6A03               	clrf	btemp+3,c
  3054  009F0E  C1B9  FFE8         	movff	_DtCO+3,wreg
  3055  009F12  1802               	xorwf	btemp+2,w,c
  3056  009F14  E101               	bnz	u2245
  3057  009F16  5203               	movf	btemp+3,f,c
  3058  009F18                     u2245:
  3059  009F18  B4D8               	btfsc	status,2,c
  3060  009F1A  0012               	return	
  3061                           ;konfig.c: 667: {
  3062  009F1C  0EDD               	movlw	221
  3063  009F1E                     L16:
  3064  009F1E  0100               	movlb	__Lparam shr (0+8)
  3065  009F20  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3066  009F22  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3067  009F24  C1B9  F0FB         	movff	_DtCO+3,?_eeprom_write+2
  3068  009F28  EF2F  F078         	goto	_eeprom_write	;wreg free
  3069                           ;konfig.c: 669: }
  3070  009F2C                     __end_of_WriteEEPPGD:
  3071                           ;konfig.c: 674: void WriteEEPFN(void)
  3072                           ;konfig.c: 675: {
  3073  009F2C                     _WriteEEPFN:
  3074  000000                     
  3075                           ;konfig.c: 677: unsigned char d1,d2;
  3076  009F2C  0ECB               	movlw	203
  3077  009F2E  0100               	movlb	__Lparam shr (0+8)
  3078  009F30  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3079  009F32  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  3080  009F34  ECA2  F078         	call	_eeprom_read	;wreg free
  3081  009F38  0100               	movlb	__Lparam shr (0+8)
  3082  009F3A  6FEB               	movwf	?a_WriteEEPFN^(__Lparam& (0+65280)),b
  3083                           ;konfig.c: 679: d1=d1<<4;
  3084  009F3C  3BEB               	swapf	?a_WriteEEPFN^(__Lparam& (0+65280)),f,b
  3085  009F3E  0EF0               	movlw	240
  3086  009F40  17EB               	andwf	?a_WriteEEPFN^(__Lparam& (0+65280)),f,b
  3087                           ;konfig.c: 680: d2=(PFN.poz&0b00001111);
  3088  009F42  C1A1  FFE8         	movff	_PFN+1,wreg
  3089  009F46  0B0F               	andlw	15
  3090  009F48  6ED9               	movwf	fsr2l,c
  3091                           ;konfig.c: 681: d1=d1|d2;
  3092  009F4A  50D9               	movf	fsr2l,w,c
  3093  009F4C  13EB               	iorwf	?a_WriteEEPFN^(__Lparam& (0+65280)),f,b
  3094                           ;konfig.c: 682: if(d1!=eeprom_read(0x00CB))
  3095  009F4E  0ECB               	movlw	203
  3096  009F50  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3097  009F52  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  3098  009F54  ECA2  F078         	call	_eeprom_read	;wreg free
  3099  009F58  6E00               	movwf	btemp,c
  3100  009F5A  C000  F002         	movff	btemp,btemp+2
  3101  009F5E  6A03               	clrf	btemp+3,c
  3102  009F60  C0EB  FFE8         	movff	?a_WriteEEPFN,wreg
  3103  009F64  1802               	xorwf	btemp+2,w,c
  3104  009F66  E101               	bnz	u2255
  3105  009F68  5203               	movf	btemp+3,f,c
  3106  009F6A                     u2255:
  3107  009F6A  B4D8               	btfsc	status,2,c
  3108  009F6C  0012               	return	
  3109                           ;konfig.c: 683: {
  3110  009F6E  0ECB               	movlw	203
  3111  009F70  0100               	movlb	__Lparam shr (0+8)
  3112  009F72  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3113  009F74  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3114  009F76  51EB               	movf	?a_WriteEEPFN^(__Lparam& (0+65280)),w
  3115  009F78  D058               	goto	L20
  3116                           ;konfig.c: 685: }
  3117  009F7A                     __end_of_WriteEEPFN:
  3118                           ;konfig.c: 688: unsigned char ReadEEPFN(void)
  3119                           ;konfig.c: 689: {
  3120  009F7A                     _ReadEEPFN:
  3121  000000                     
  3122                           ;konfig.c: 691: unsigned char d;
  3123  009F7A  0ECB               	movlw	203
  3124  009F7C  0100               	movlb	__Lparam shr (0+8)
  3125  009F7E  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3126  009F80  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  3127  009F82  ECA2  F078         	call	_eeprom_read	;wreg free
  3128  009F86  0100               	movlb	__Lparam shr (0+8)
  3129  009F88  6FEB               	movwf	?a_ReadEEPFN^(__Lparam& (0+65280)),b
  3130                           ;konfig.c: 693: d=d&0b00001111;
  3131  009F8A  0E0F               	movlw	15
  3132  009F8C  17EB               	andwf	?a_ReadEEPFN^(__Lparam& (0+65280)),f,b
  3133                           ;konfig.c: 694: return d;
  3134  009F8E  51EB               	movf	?a_ReadEEPFN^(__Lparam& (0+65280)),w
  3135  009F90  0012               	return	
  3136                           ;konfig.c: 695: }
  3137  009F92                     __end_of_ReadEEPFN:
  3138                           ;konfig.c: 697: unsigned char ReadEEPopPFN(void)
  3139                           ;konfig.c: 698: {
  3140  009F92                     _ReadEEPopPFN:
  3141  000000                     
  3142                           ;konfig.c: 699: unsigned char d;
  3143  009F92  0ECB               	movlw	203
  3144  009F94  0100               	movlb	__Lparam shr (0+8)
  3145  009F96  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3146  009F98  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  3147  009F9A  ECA2  F078         	call	_eeprom_read	;wreg free
  3148  009F9E  0100               	movlb	__Lparam shr (0+8)
  3149  009FA0  6FEB               	movwf	?a_ReadEEPopPFN^(__Lparam& (0+65280)),b
  3150                           ;konfig.c: 701: d=d&0b11110000;
  3151  009FA2  0EF0               	movlw	240
  3152  009FA4  17EB               	andwf	?a_ReadEEPopPFN^(__Lparam& (0+65280)),f,b
  3153                           ;konfig.c: 702: d=d>>4;
  3154  009FA6  3BEB               	swapf	?a_ReadEEPopPFN^(__Lparam& (0+65280)),f,b
  3155  009FA8  0E0F               	movlw	15
  3156  009FAA  17EB               	andwf	?a_ReadEEPopPFN^(__Lparam& (0+65280)),f,b
  3157                           ;konfig.c: 703: return d;
  3158  009FAC  51EB               	movf	?a_ReadEEPopPFN^(__Lparam& (0+65280)),w
  3159  009FAE  0012               	return	
  3160                           ;konfig.c: 704: }
  3161  009FB0                     __end_of_ReadEEPopPFN:
  3162                           ;konfig.c: 708: void WriteEEALIN(unsigned char d
      +                          )
  3163                           ;konfig.c: 709: {
  3164  009FB0                     _WriteEEALIN:
  3165  000000                     
  3166                           ;_d stored from wreg
  3167  009FB0  0100               	movlb	__Lparam shr (0+8)
  3168  009FB2  6FEE               	movwf	?a_WriteEEALIN^(__Lparam& (0+65280)),b
  3169                           ;konfig.c: 710: if(d!=eeprom_read(0x00D8))
  3170  009FB4  0ED8               	movlw	216
  3171  009FB6  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3172  009FB8  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  3173  009FBA  ECA2  F078         	call	_eeprom_read	;wreg free
  3174  009FBE  6E00               	movwf	btemp,c
  3175  009FC0  C000  F002         	movff	btemp,btemp+2
  3176  009FC4  6A03               	clrf	btemp+3,c
  3177  009FC6  C0EE  FFE8         	movff	?a_WriteEEALIN,wreg
  3178  009FCA  1802               	xorwf	btemp+2,w,c
  3179  009FCC  E101               	bnz	u2265
  3180  009FCE  5203               	movf	btemp+3,f,c
  3181  009FD0                     u2265:
  3182  009FD0  B4D8               	btfsc	status,2,c
  3183  009FD2  0012               	return	
  3184                           ;konfig.c: 711: {
  3185  009FD4  0ED8               	movlw	216
  3186  009FD6  0100               	movlb	__Lparam shr (0+8)
  3187  009FD8  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3188  009FDA  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3189  009FDC  51EE               	movf	?a_WriteEEALIN^(__Lparam& (0+65280)),w
  3190  009FDE  D025               	goto	L20
  3191                           ;konfig.c: 713: }
  3192  009FE0                     __end_of_WriteEEALIN:
  3193                           ;konfig.c: 715: unsigned char ReadEEALIN(void)
  3194                           ;konfig.c: 716: {
  3195  009FE0                     _ReadEEALIN:
  3196  000000                     
  3197                           ;konfig.c: 717: return eeprom_read(0x00D8);
  3198  009FE0  0ED8               	movlw	216
  3199  009FE2                     L18:
  3200  009FE2  0100               	movlb	__Lparam shr (0+8)
  3201  009FE4  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3202  009FE6  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  3203  009FE8  EFA2  F078         	goto	_eeprom_read	;wreg free
  3204                           ;konfig.c: 718: }
  3205  009FEC                     __end_of_ReadEEALIN:
  3206                           ;konfig.c: 722: void ClearEETA(void)
  3207                           ;konfig.c: 723: {
  3208  009FEC                     _ClearEETA:
  3209  000000                     
  3210                           ;konfig.c: 724: eeprom_write(0x00C7,0);
  3211  009FEC  0EC7               	movlw	199
  3212  009FEE  0100               	movlb	__Lparam shr (0+8)
  3213  009FF0  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  3214  009FF2  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  3215  009FF4  6BFB               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  3216  009FF6  EF2F  F078         	goto	_eeprom_write	;wreg free
  3217                           ;konfig.c: 725: }
  3218  009FFA                     __end_of_ClearEETA:
  3219                           ;konfig.c: 729: void if_eeprom_write(unsigned in
      +                          t adr, unsigned char dta)
  3220                           ;konfig.c: 730: {
  3221  009FFA  00F6               	dw	?_if_eeprom_write
  3222  009FFC                     _if_eeprom_write:
  3223  000000                     
  3224                           ;konfig.c: 731: if(eeprom_read(adr)!=dta)
  3225  009FFC  C0F6  F0F9         	movff	?_if_eeprom_write,?_eeprom_read
  3226  00A000  C0F7  F0FA         	movff	?_if_eeprom_write+1,?_eeprom_read+1
  3227  00A004  ECA2  F078         	call	_eeprom_read	;wreg free
  3228  00A008  6E00               	movwf	btemp,c
  3229  00A00A  C0F8  F002         	movff	?_if_eeprom_write+2,btemp+2
  3230  00A00E  6A03               	clrf	btemp+3,c
  3231  00A010  C000  FFE8         	movff	btemp,wreg
  3232  00A014  1802               	xorwf	btemp+2,w,c
  3233  00A016  E101               	bnz	u2275
  3234  00A018  5203               	movf	btemp+3,f,c
  3235  00A01A                     u2275:
  3236  00A01A  B4D8               	btfsc	status,2,c
  3237  00A01C  0012               	return	
  3238                           ;konfig.c: 732: {
  3239  00A01E  C0F6  F0F9         	movff	?_if_eeprom_write,?_eeprom_write
  3240  00A022  C0F7  F0FA         	movff	?_if_eeprom_write+1,?_eeprom_write+1
  3241  00A026  0100               	movlb	__Lparam shr (0+8)
  3242  00A028  51F8               	movf	(?_if_eeprom_write+2)^(__Lparam& (0+65280)
      +                          ),w
  3243  00A02A                     L20:
  3244  00A02A  6FFB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  3245  00A02C  EF2F  F078         	goto	_eeprom_write	;wreg free
  3246                           ;konfig.c: 734: }
  3247  00A030                     __end_of_if_eeprom_write:
  3248                           ;konfig.c: 739: unsigned char ReadBtyHNPZ(void)
  3249                           ;konfig.c: 740: {
  3250  00A030                     _ReadBtyHNPZ:
  3251  000000                     
  3252                           ;konfig.c: 741: return eeprom_read(0x01CA);
  3253  00A030  0100               	movlb	__Lparam shr (0+8)
  3254  00A032  0ECA               	movlw	202
  3255  00A034  D002               	goto	L21
  3256                           ;konfig.c: 742: }
  3257  00A036                     __end_of_ReadBtyHNPZ:
  3258                           ;konfig.c: 746: unsigned char ReadBtyHFLG(void)
  3259                           ;konfig.c: 747: {
  3260  00A036                     _ReadBtyHFLG:
  3261  000000                     
  3262                           ;konfig.c: 748: return eeprom_read(0x01CD);
  3263  00A036  0100               	movlb	__Lparam shr (0+8)
  3264  00A038  0ECD               	movlw	205
  3265  00A03A                     L21:
  3266  00A03A  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3267  00A03C  0E01               	movlw	1
  3268  00A03E  D062               	goto	L22
  3269                           ;konfig.c: 749: }
  3270  00A040                     __end_of_ReadBtyHFLG:
  3271                           ;konfig.c: 753: unsigned char ReadBtyHREF(const 
      +                          unsigned char ind)
  3272                           ;konfig.c: 754: {
  3273  00A040                     _ReadBtyHREF:
  3274  000000                     
  3275                           ; _ind loaded to fsr2l
  3276  00A040  6ED9               	movwf	fsr2l,c
  3277                           ;_ind stored from fsr2l
  3278                           ;konfig.c: 755: if(ind>1) return 0;
  3279                           ;_ind stored from fsr2l
  3280  00A042  50D9               	movf	fsr2l,w,c
  3281  00A044  0100               	movlb	__Lparam shr (0+8)
  3282  00A046  6FF2               	movwf	?a_ReadBtyHREF^(__Lparam& (0+65280)),b
  3283  00A048  0E01               	movlw	1
  3284  00A04A  64D9               	cpfsgt	fsr2l,c
  3285  00A04C  D001               	goto	l182
  3286  00A04E  0C00               	retlw	0
  3287  00A050                     l182:
  3288                           ;konfig.c: 756: return eeprom_read(0x01CB+ind);
  3289  00A050  0100               	movlb	__Lparam shr (0+8)
  3290  00A052  0ECB               	movlw	203
  3291  00A054  25F2               	addwf	?a_ReadBtyHREF^(__Lparam& (0+65280)),w
  3292  00A056  D017               	goto	L24
  3293                           ;konfig.c: 757: }
  3294  00A058                     __end_of_ReadBtyHREF:
  3295                           ;konfig.c: 761: unsigned char ReadBtyEEHIST(cons
      +                          t unsigned char ind)
  3296                           ;konfig.c: 762: {
  3297  00A058                     _ReadBtyEEHIST:
  3298  000000                     
  3299                           ; _ind loaded to fsr2l
  3300  00A058  6ED9               	movwf	fsr2l,c
  3301                           ;_ind stored from fsr2l
  3302                           ;konfig.c: 763: if(ind>16-1) return 0;
  3303                           ;_ind stored from fsr2l
  3304  00A05A  50D9               	movf	fsr2l,w,c
  3305  00A05C  0100               	movlb	__Lparam shr (0+8)
  3306  00A05E  6FF2               	movwf	?a_ReadBtyEEHIST^(__Lparam& (0+65280)),b
  3307  00A060  0E0F               	movlw	15
  3308  00A062  64D9               	cpfsgt	fsr2l,c
  3309  00A064  D001               	goto	l184
  3310  00A066  0C00               	retlw	0
  3311  00A068                     l184:
  3312                           ;konfig.c: 764: return eeprom_read(0x01CE+ind);
  3313  00A068  0100               	movlb	__Lparam shr (0+8)
  3314  00A06A  0ECE               	movlw	206
  3315  00A06C  25F2               	addwf	?a_ReadBtyEEHIST^(__Lparam& (0+65280)),w
  3316  00A06E  D00B               	goto	L24
  3317                           ;konfig.c: 765: }
  3318  00A070                     __end_of_ReadBtyEEHIST:
  3319                           ;konfig.c: 777: unsigned char ReadBtyNZSTAT(cons
      +                          t unsigned char ind)
  3320                           ;konfig.c: 778: {
  3321  00A070                     _ReadBtyNZSTAT:
  3322  000000                     
  3323                           ; _ind loaded to fsr2l
  3324  00A070  6ED9               	movwf	fsr2l,c
  3325                           ;_ind stored from fsr2l
  3326                           ;konfig.c: 779: if(ind>1) return 0;
  3327                           ;_ind stored from fsr2l
  3328  00A072  50D9               	movf	fsr2l,w,c
  3329  00A074  0100               	movlb	__Lparam shr (0+8)
  3330  00A076  6FF2               	movwf	?a_ReadBtyNZSTAT^(__Lparam& (0+65280)),b
  3331  00A078  0E01               	movlw	1
  3332  00A07A  64D9               	cpfsgt	fsr2l,c
  3333  00A07C  D001               	goto	l186
  3334  00A07E  0C00               	retlw	0
  3335  00A080                     l186:
  3336                           ;konfig.c: 780: return eeprom_read(0x01E0+ind);
  3337  00A080  0100               	movlb	__Lparam shr (0+8)
  3338  00A082  0EE0               	movlw	224
  3339  00A084  25F2               	addwf	?a_ReadBtyNZSTAT^(__Lparam& (0+65280)),w
  3340  00A086                     L24:
  3341  00A086  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3342  00A088  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
  3343  00A08A  0E01               	movlw	1
  3344  00A08C  23FA               	addwfc	(?_eeprom_read+1)^(__Lparam& (0+65280)),
      +                          f,b
  3345  00A08E  EFA2  F078         	goto	_eeprom_read	;wreg free
  3346                           ;konfig.c: 781: }
  3347  00A092                     __end_of_ReadBtyNZSTAT:
  3348                           ;konfig.c: 785: void WriteBtyNZSTAT(const unsign
      +                          ed char ind, const unsigned char dt)
  3349                           ;konfig.c: 786: {
  3350  00A092  00F2               	dw	?_WriteBtyNZSTAT
  3351  00A094                     _WriteBtyNZSTAT:
  3352  000000                     
  3353                           ; _ind loaded to fsr2l
  3354  00A094  6ED9               	movwf	fsr2l,c
  3355                           ;konfig.c: 787: if(ind>1) return;
  3356  00A096  0E01               	movlw	1
  3357  00A098  64D9               	cpfsgt	fsr2l,c
  3358  00A09A  D001               	goto	l188
  3359  00A09C  0C01               	retlw	1
  3360  00A09E                     l188:
  3361                           ;konfig.c: 788: if_eeprom_write(0x01E0+ind,dt);
  3362  00A09E  0EE0               	movlw	224
  3363  00A0A0  24D9               	addwf	fsr2l,w,c
  3364  00A0A2  0100               	movlb	__Lparam shr (0+8)
  3365  00A0A4  6FF6               	movwf	?_if_eeprom_write^(__Lparam& (0+65280)),b
  3366  00A0A6  6BF7               	clrf	(?_if_eeprom_write+1)^(__Lparam& (0+65280)
      +                          ),b
  3367  00A0A8  0E01               	movlw	1
  3368  00A0AA  23F7               	addwfc	(?_if_eeprom_write+1)^(__Lparam& (0+6528
      +                          0)),f,b
  3369  00A0AC  51F2               	movf	?_WriteBtyNZSTAT^(__Lparam& (0+65280)),w
  3370  00A0AE  D059               	goto	L25
  3371                           ;konfig.c: 789: }
  3372  00A0B0                     __end_of_WriteBtyNZSTAT:
  3373                           ;konfig.c: 796: unsigned char ReadBtySTAT(const 
      +                          unsigned char nr, const unsigned char ind)
  3374                           ;konfig.c: 797: {
  3375  00A0B0  00F4               	dw	?_ReadBtySTAT
  3376  00A0B2                     _ReadBtySTAT:
  3377  000000                     
  3378                           ; _nr loaded to fsr2l
  3379  00A0B2  6ED9               	movwf	fsr2l,c
  3380                           ;konfig.c: 798: volatile unsigned int adr;
  3381  00A0B4  0E03               	movlw	3
  3382  00A0B6  64D9               	cpfsgt	fsr2l,c
  3383  00A0B8  D001               	goto	l190
  3384  00A0BA  0C00               	retlw	0
  3385  00A0BC                     l190:
  3386                           ;konfig.c: 801: if(ind>22-1) return 0;
  3387  00A0BC  0E15               	movlw	21
  3388  00A0BE  0100               	movlb	__Lparam shr (0+8)
  3389  00A0C0  65F4               	cpfsgt	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  3390  00A0C2  D012               	goto	l193
  3391  00A0C4  0C00               	retlw	0
  3392                           ;konfig.c: 802: switch(nr)
  3393  00A0C6                     l194:
  3394                           ;konfig.c: 803: {
  3395                           ;konfig.c: 805: {
  3396  00A0C6  0100               	movlb	__Lparam shr (0+8)
  3397  00A0C8  0EE8               	movlw	232
  3398  00A0CA  6FF5               	movwf	?a_ReadBtySTAT^(__Lparam& (0+65280)),b	;v
      +                          olatile
  3399  00A0CC  0E01               	movlw	1
  3400  00A0CE  D004               	goto	L3
  3401                           ;konfig.c: 807: break;
  3402  00A0D0                     l195:
  3403                           ;konfig.c: 808: }
  3404                           ;konfig.c: 810: {
  3405  00A0D0  0100               	movlb	__Lparam shr (0+8)
  3406  00A0D2  0E08               	movlw	8
  3407  00A0D4                     L4:
  3408  00A0D4  6FF5               	movwf	?a_ReadBtySTAT^(__Lparam& (0+65280)),b	;v
      +                          olatile
  3409  00A0D6  0E02               	movlw	2
  3410  00A0D8                     L3:
  3411  00A0D8  6FF6               	movwf	(?a_ReadBtySTAT+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  3412                           ;konfig.c: 812: break;
  3413  00A0DA  D00E               	goto	l192
  3414  00A0DC                     l196:
  3415                           ;konfig.c: 813: }
  3416                           ;konfig.c: 815: {
  3417  00A0DC  0100               	movlb	__Lparam shr (0+8)
  3418  00A0DE  0E28               	movlw	40
  3419  00A0E0  D7F9               	goto	L4
  3420                           ;konfig.c: 817: break;
  3421  00A0E2                     l197:
  3422                           ;konfig.c: 818: }
  3423                           ;konfig.c: 820: {
  3424  00A0E2  0100               	movlb	__Lparam shr (0+8)
  3425  00A0E4  0E48               	movlw	72
  3426  00A0E6  D7F6               	goto	L4
  3427                           ;konfig.c: 822: break;
  3428  00A0E8                     l193:
  3429  00A0E8  50D9               	movf	fsr2l,w,c
  3430  00A0EA  E0ED               	bz	l194
  3431  00A0EC  0A01               	xorlw	1
  3432  00A0EE  E0F0               	bz	l195
  3433  00A0F0  0A03               	xorlw	3
  3434  00A0F2  E0F4               	bz	l196
  3435  00A0F4  0A01               	xorlw	1
  3436  00A0F6  E0F5               	bz	l197
  3437  00A0F8                     l192:
  3438                           ;konfig.c: 825: return eeprom_read(adr+ind);
  3439  00A0F8  0100               	movlb	__Lparam shr (0+8)
  3440  00A0FA  51F4               	movf	?_ReadBtySTAT^(__Lparam& (0+65280)),w
  3441  00A0FC  25F5               	addwf	?a_ReadBtySTAT^(__Lparam& (0+65280)),w	;v
      +                          olatile
  3442  00A0FE  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
  3443  00A100  0E00               	movlw	0
  3444  00A102  21F6               	addwfc	(?a_ReadBtySTAT+1)^(__Lparam& (0+65280))
      +                          ,w
  3445  00A104                     L22:
  3446  00A104  6FFA               	movwf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
      +                          	;volatile
  3447  00A106  EFA2  F078         	goto	_eeprom_read	;wreg free
  3448                           ;konfig.c: 826: }
  3449  00A10A                     __end_of_ReadBtySTAT:
  3450                           ;konfig.c: 833: void WriteBtySTAT(const unsigned
      +                           char nr, const unsigned char ind, const unsigne
      +                          d char dt)
  3451                           ;konfig.c: 834: {
  3452  00A10A  00F2               	dw	?_WriteBtySTAT
  3453  00A10C                     _WriteBtySTAT:
  3454  000000                     
  3455                           ; _nr loaded to fsr2l
  3456  00A10C  6ED9               	movwf	fsr2l,c
  3457                           ;konfig.c: 835: volatile unsigned int adr;
  3458  00A10E  0E03               	movlw	3
  3459  00A110  64D9               	cpfsgt	fsr2l,c
  3460  00A112  D001               	goto	l199
  3461  00A114  0C03               	retlw	3
  3462  00A116                     l199:
  3463                           ;konfig.c: 838: if(ind>22-1) return;
  3464  00A116  0E15               	movlw	21
  3465  00A118  0100               	movlb	__Lparam shr (0+8)
  3466  00A11A  65F2               	cpfsgt	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3467  00A11C  D012               	goto	l202
  3468  00A11E  0C15               	retlw	21
  3469                           ;konfig.c: 839: switch(nr)
  3470  00A120                     l203:
  3471                           ;konfig.c: 840: {
  3472                           ;konfig.c: 842: {
  3473  00A120  0100               	movlb	__Lparam shr (0+8)
  3474  00A122  0EE8               	movlw	232
  3475  00A124  6FF4               	movwf	?a_WriteBtySTAT^(__Lparam& (0+65280)),b	;
      +                          volatile
  3476  00A126  0E01               	movlw	1
  3477  00A128  D004               	goto	L5
  3478                           ;konfig.c: 844: break;
  3479  00A12A                     l204:
  3480                           ;konfig.c: 845: }
  3481                           ;konfig.c: 847: {
  3482  00A12A  0100               	movlb	__Lparam shr (0+8)
  3483  00A12C  0E08               	movlw	8
  3484  00A12E                     L6:
  3485  00A12E  6FF4               	movwf	?a_WriteBtySTAT^(__Lparam& (0+65280)),b	;
      +                          volatile
  3486  00A130  0E02               	movlw	2
  3487  00A132                     L5:
  3488  00A132  6FF5               	movwf	(?a_WriteBtySTAT+1)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  3489                           ;konfig.c: 849: break;
  3490  00A134  D00E               	goto	l201
  3491  00A136                     l205:
  3492                           ;konfig.c: 850: }
  3493                           ;konfig.c: 852: {
  3494  00A136  0100               	movlb	__Lparam shr (0+8)
  3495  00A138  0E28               	movlw	40
  3496  00A13A  D7F9               	goto	L6
  3497                           ;konfig.c: 854: break;
  3498  00A13C                     l206:
  3499                           ;konfig.c: 855: }
  3500                           ;konfig.c: 857: {
  3501  00A13C  0100               	movlb	__Lparam shr (0+8)
  3502  00A13E  0E48               	movlw	72
  3503  00A140  D7F6               	goto	L6
  3504                           ;konfig.c: 859: break;
  3505  00A142                     l202:
  3506  00A142  50D9               	movf	fsr2l,w,c
  3507  00A144  E0ED               	bz	l203
  3508  00A146  0A01               	xorlw	1
  3509  00A148  E0F0               	bz	l204
  3510  00A14A  0A03               	xorlw	3
  3511  00A14C  E0F4               	bz	l205
  3512  00A14E  0A01               	xorlw	1
  3513  00A150  E0F5               	bz	l206
  3514  00A152                     l201:
  3515                           ;konfig.c: 862: if_eeprom_write(adr+ind,dt);
  3516  00A152  0100               	movlb	__Lparam shr (0+8)
  3517  00A154  51F2               	movf	?_WriteBtySTAT^(__Lparam& (0+65280)),w
  3518  00A156  25F4               	addwf	?a_WriteBtySTAT^(__Lparam& (0+65280)),w	;
      +                          volatile
  3519  00A158  6FF6               	movwf	?_if_eeprom_write^(__Lparam& (0+65280)),b
  3520  00A15A  0E00               	movlw	0
  3521  00A15C  21F5               	addwfc	(?a_WriteBtySTAT+1)^(__Lparam& (0+65280)
      +                          ),w
  3522  00A15E  6FF7               	movwf	(?_if_eeprom_write+1)^(__Lparam& (0+65280
      +                          )),b	;volatile
  3523  00A160  51F3               	movf	(?_WriteBtySTAT+1)^(__Lparam& (0+65280)),w
  3524  00A162                     L25:
  3525  00A162  6FF8               	movwf	(?_if_eeprom_write+2)^(__Lparam& (0+65280
      +                          )),b
  3526  00A164  D74B               	goto	_if_eeprom_write	;wreg free
  3527                           ;konfig.c: 863: }
  3528  00A166                     __end_of_WriteBtySTAT:
  3529                           ;konfig.c: 869: void WriteEESTAT(const unsigned 
      +                          char nr)
  3530                           ;konfig.c: 870: {
  3531  00A166                     _WriteEESTAT:
  3532  000000                     
  3533                           ; _nr loaded to fsr2l
  3534  00A166  6ED9               	movwf	fsr2l,c
  3535                           ;_nr stored from fsr2l
  3536                           ;konfig.c: 871: volatile unsigned int d;
  3537                           ;_nr stored from fsr2l
  3538  00A168  50D9               	movf	fsr2l,w,c
  3539  00A16A  0100               	movlb	__Lparam shr (0+8)
  3540  00A16C  6FEE               	movwf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),
      +                          b
  3541  00A16E  0E03               	movlw	3
  3542  00A170  64D9               	cpfsgt	fsr2l,c
  3543  00A172  D001               	goto	l208
  3544  00A174  0C03               	retlw	3
  3545  00A176                     l208:
  3546                           ;konfig.c: 878: d=ReadBtyNZSTAT(0)+(ReadBtyNZSTA
      +                          T(1)*256);
  3547  00A176  0E00               	movlw	0
  3548  00A178  DF7B               	call	_ReadBtyNZSTAT
  3549  00A17A  0100               	movlb	__Lparam shr (0+8)
  3550  00A17C  6FF1               	movwf	(?a_WriteEESTAT+4)^(?a_WriteEESTAT& (0+65
      +                          280)),b
  3551  00A17E  0E01               	movlw	1
  3552  00A180  DF77               	call	_ReadBtyNZSTAT
  3553  00A182  0100               	movlb	__Lparam shr (0+8)
  3554  00A184  6FF0               	movwf	(?a_WriteEESTAT+3)^(__Lparam& (0+65280)),
      +                          b	;volatile
  3555  00A186  C0F1  F0EF         	movff	?a_WriteEESTAT+4,?a_WriteEESTAT+2
  3556                           ;konfig.c: 879: if(d<0xffff) d++;
  3557  00A18A  29EF               	incf	(?a_WriteEESTAT+2)^(__Lparam& (0+65280)),w
      +                          	;volatile
  3558  00A18C  B4D8               	btfsc	status,2,c
  3559  00A18E  29F0               	incf	(?a_WriteEESTAT+3)^(__Lparam& (0+65280)),w
      +                          	;volatile
  3560  00A190  E003               	bz	l209
  3561  00A192  4BEF               	infsnz	(?a_WriteEESTAT+2)^(__Lparam& (0+65280))
      +                          ,f,b	;volatile
  3562  00A194  2BF0               	incf	(?a_WriteEESTAT+3)^(__Lparam& (0+65280)),f
      +                          ,b	;volatile
  3563  00A196  D004               	goto	l210
  3564  00A198                     l209:
  3565                           ;konfig.c: 880: else d=1;
  3566  00A198  0E01               	movlw	1
  3567  00A19A  0100               	movlb	__Lparam shr (0+8)
  3568  00A19C  6FEF               	movwf	(?a_WriteEESTAT+2)^(__Lparam& (0+65280)),
      +                          b	;volatile
  3569  00A19E  6BF0               	clrf	(?a_WriteEESTAT+3)^(__Lparam& (0+65280)),b
      +                          	;volatile
  3570  00A1A0                     l210:
  3571                           ;konfig.c: 882: e=(unsigned char)(d&0x00ff);
  3572  00A1A0  C0EF  F0ED         	movff	?a_WriteEESTAT+2,?a_WriteEESTAT	;volatile
  3573                           ;konfig.c: 883: WriteBtyNZSTAT(0,e);
  3574  00A1A4  0100               	movlb	__Lparam shr (0+8)
  3575  00A1A6  51ED               	movf	?a_WriteEESTAT^(__Lparam& (0+65280)),w	;vo
      +                          latile
  3576  00A1A8  6FF2               	movwf	?_WriteBtyNZSTAT^(__Lparam& (0+65280)),b
  3577  00A1AA  0E00               	movlw	0
  3578  00A1AC  DF73               	call	_WriteBtyNZSTAT
  3579                           ;konfig.c: 884: e=(unsigned char)((d&0xff00)>>8)
      +                          ;
  3580  00A1AE  0100               	movlb	__Lparam shr (0+8)
  3581  00A1B0  0E00               	movlw	0
  3582  00A1B2  15EF               	andwf	(?a_WriteEESTAT+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  3583  00A1B4  6E00               	movwf	btemp,c
  3584  00A1B6  0EFF               	movlw	255
  3585  00A1B8  15F0               	andwf	(?a_WriteEESTAT+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  3586  00A1BA  6E01               	movwf	btemp+1,c
  3587  00A1BC  C001  F000         	movff	btemp+1,btemp
  3588  00A1C0  6A01               	clrf	btemp+1,c
  3589  00A1C2  5000               	movf	btemp,w,c
  3590  00A1C4  6FED               	movwf	?a_WriteEESTAT^(__Lparam& (0+65280)),b	;v
      +                          olatile
  3591                           ;konfig.c: 885: WriteBtyNZSTAT(1,e);
  3592  00A1C6  51ED               	movf	?a_WriteEESTAT^(__Lparam& (0+65280)),w	;vo
      +                          latile
  3593  00A1C8  6FF2               	movwf	?_WriteBtyNZSTAT^(__Lparam& (0+65280)),b
  3594  00A1CA  0E01               	movlw	1
  3595  00A1CC  DF63               	call	_WriteBtyNZSTAT
  3596                           ;konfig.c: 888: e=ReadBtyHREF(0);
  3597  00A1CE  0E00               	movlw	0
  3598  00A1D0  DF37               	call	_ReadBtyHREF
  3599  00A1D2  0100               	movlb	__Lparam shr (0+8)
  3600  00A1D4  6FED               	movwf	?a_WriteEESTAT^(__Lparam& (0+65280)),b	;v
      +                          olatile
  3601                           ;konfig.c: 889: WriteBtySTAT(nr,0,e);
  3602  00A1D6  6BF2               	clrf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3603  00A1D8  51ED               	movf	?a_WriteEESTAT^(__Lparam& (0+65280)),w	;vo
      +                          latile
  3604  00A1DA  6FF3               	movwf	(?_WriteBtySTAT+1)^(__Lparam& (0+65280)),
      +                          b
  3605  00A1DC  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3606  00A1DE  DF96               	call	_WriteBtySTAT
  3607                           ;konfig.c: 890: e=ReadBtyHREF(1);
  3608  00A1E0  0E01               	movlw	1
  3609  00A1E2  DF2E               	call	_ReadBtyHREF
  3610  00A1E4  0100               	movlb	__Lparam shr (0+8)
  3611  00A1E6  6FED               	movwf	?a_WriteEESTAT^(__Lparam& (0+65280)),b	;v
      +                          olatile
  3612                           ;konfig.c: 891: WriteBtySTAT(nr,1,e);
  3613  00A1E8  0E01               	movlw	1
  3614  00A1EA  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3615  00A1EC  51ED               	movf	?a_WriteEESTAT^(__Lparam& (0+65280)),w	;vo
      +                          latile
  3616  00A1EE  6FF3               	movwf	(?_WriteBtySTAT+1)^(__Lparam& (0+65280)),
      +                          b
  3617  00A1F0  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3618  00A1F2  DF8C               	call	_WriteBtySTAT
  3619                           ;konfig.c: 893: e=RSDT1.outSTAT0;
  3620  00A1F4  C136  F0ED         	movff	_RSDT1+18,?a_WriteEESTAT	;volatile
  3621                           ;konfig.c: 894: e|=0b00000001;
  3622  00A1F8  0100               	movlb	__Lparam shr (0+8)
  3623  00A1FA  81ED               	bsf	?a_WriteEESTAT^(__Lparam& (0+65280)),0,b	;v
      +                          olatile
  3624                           ;konfig.c: 895: if(DtKNF.tpkt==0)
  3625  00A1FC  EE02  F037         	lfsr	0,_DtKNF+7
  3626  00A200  50EF               	movf	indf0,w,c
  3627  00A202  E102               	bnz	l211
  3628                           ;konfig.c: 896: {
  3629  00A204  83ED               	bsf	?a_WriteEESTAT^(__Lparam& (0+65280)),1,b	;v
      +                          olatile
  3630                           ;konfig.c: 898: }
  3631  00A206  D002               	goto	l212
  3632  00A208                     l211:
  3633                           ;konfig.c: 899: else
  3634  00A208  0100               	movlb	__Lparam shr (0+8)
  3635  00A20A  93ED               	bcf	?a_WriteEESTAT^(__Lparam& (0+65280)),1,b	;v
      +                          olatile
  3636  00A20C                     l212:
  3637                           ;konfig.c: 902: }
  3638  00A20C  0E02               	movlw	2
  3639  00A20E  0100               	movlb	__Lparam shr (0+8)
  3640  00A210  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3641  00A212  51ED               	movf	?a_WriteEESTAT^(__Lparam& (0+65280)),w	;vo
      +                          latile
  3642  00A214  6FF3               	movwf	(?_WriteBtySTAT+1)^(__Lparam& (0+65280)),
      +                          b
  3643  00A216  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3644  00A218  DF79               	call	_WriteBtySTAT
  3645                           ;konfig.c: 904: WriteBtySTAT(nr,3,RSDT1.outSTAT1
      +                          );
  3646  00A21A  0E03               	movlw	3
  3647  00A21C  0100               	movlb	__Lparam shr (0+8)
  3648  00A21E  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3649  00A220  C137  F0F3         	movff	_RSDT1+19,?_WriteBtySTAT+1
  3650  00A224  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3651  00A226  DF72               	call	_WriteBtySTAT
  3652                           ;konfig.c: 905: WriteBtySTAT(nr,4,RSDT1.outSTAT2
      +                          );
  3653  00A228  0E04               	movlw	4
  3654  00A22A  0100               	movlb	__Lparam shr (0+8)
  3655  00A22C  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3656  00A22E  C138  F0F3         	movff	_RSDT1+20,?_WriteBtySTAT+1
  3657  00A232  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3658  00A234  DF6B               	call	_WriteBtySTAT
  3659                           ;konfig.c: 906: WriteBtySTAT(nr,5,RSDT1.outSTAT3
      +                          );
  3660  00A236  0E05               	movlw	5
  3661  00A238  0100               	movlb	__Lparam shr (0+8)
  3662  00A23A  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3663  00A23C  C139  F0F3         	movff	_RSDT1+21,?_WriteBtySTAT+1
  3664  00A240  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3665  00A242  DF64               	call	_WriteBtySTAT
  3666                           ;konfig.c: 907: WriteBtySTAT(nr,6,RSDT1.outSTAT4
      +                          );
  3667  00A244  0E06               	movlw	6
  3668  00A246  0100               	movlb	__Lparam shr (0+8)
  3669  00A248  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3670  00A24A  C13A  F0F3         	movff	_RSDT1+22,?_WriteBtySTAT+1
  3671  00A24E  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3672  00A250  DF5D               	call	_WriteBtySTAT
  3673                           ;konfig.c: 908: WriteBtySTAT(nr,7,RSDT1.outSTAT5
      +                          );
  3674  00A252  0E07               	movlw	7
  3675  00A254  0100               	movlb	__Lparam shr (0+8)
  3676  00A256  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3677  00A258  C13B  F0F3         	movff	_RSDT1+23,?_WriteBtySTAT+1
  3678  00A25C  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3679  00A25E  DF56               	call	_WriteBtySTAT
  3680                           ;konfig.c: 909: WriteBtySTAT(nr,8,RSDT1.outrCO);
  3681  00A260  0E08               	movlw	8
  3682  00A262  0100               	movlb	__Lparam shr (0+8)
  3683  00A264  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3684  00A266  C13F  F0F3         	movff	_RSDT1+27,?_WriteBtySTAT+1
  3685  00A26A  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3686  00A26C  DF4F               	call	_WriteBtySTAT
  3687                           ;konfig.c: 910: WriteBtySTAT(nr,9,RSDT1.outrCW);
  3688  00A26E  0E09               	movlw	9
  3689  00A270  0100               	movlb	__Lparam shr (0+8)
  3690  00A272  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3691  00A274  C140  F0F3         	movff	_RSDT1+28,?_WriteBtySTAT+1
  3692  00A278  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3693  00A27A  DF48               	call	_WriteBtySTAT
  3694                           ;konfig.c: 911: WriteBtySTAT(nr,10,RSDT1.outCS);
  3695  00A27C  0E0A               	movlw	10
  3696  00A27E  0100               	movlb	__Lparam shr (0+8)
  3697  00A280  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3698  00A282  C12B  F0F3         	movff	_RSDT1+7,?_WriteBtySTAT+1
  3699  00A286  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3700  00A288  DF41               	call	_WriteBtySTAT
  3701                           ;konfig.c: 912: WriteBtySTAT(nr,11,RSDT1.outIN);
  3702  00A28A  0E0B               	movlw	11
  3703  00A28C  0100               	movlb	__Lparam shr (0+8)
  3704  00A28E  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3705  00A290  C13C  F0F3         	movff	_RSDT1+24,?_WriteBtySTAT+1
  3706  00A294  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3707  00A296  DF3A               	call	_WriteBtySTAT
  3708                           ;konfig.c: 913: WriteBtySTAT(nr,12,RSDT1.outPCO)
      +                          ;
  3709  00A298  0E0C               	movlw	12
  3710  00A29A  0100               	movlb	__Lparam shr (0+8)
  3711  00A29C  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3712  00A29E  C12C  F0F3         	movff	_RSDT1+8,?_WriteBtySTAT+1
  3713  00A2A2  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3714  00A2A4  DF33               	call	_WriteBtySTAT
  3715                           ;konfig.c: 914: WriteBtySTAT(nr,13,RSDT1.outPCW)
      +                          ;
  3716  00A2A6  0E0D               	movlw	13
  3717  00A2A8  0100               	movlb	__Lparam shr (0+8)
  3718  00A2AA  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3719  00A2AC  C12D  F0F3         	movff	_RSDT1+9,?_WriteBtySTAT+1
  3720  00A2B0  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3721  00A2B2  DF2C               	call	_WriteBtySTAT
  3722                           ;konfig.c: 915: WriteBtySTAT(nr,14,RSDT1.outPPCO
      +                          );
  3723  00A2B4  0E0E               	movlw	14
  3724  00A2B6  0100               	movlb	__Lparam shr (0+8)
  3725  00A2B8  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3726  00A2BA  C132  F0F3         	movff	_RSDT1+14,?_WriteBtySTAT+1
  3727  00A2BE  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3728  00A2C0  DF25               	call	_WriteBtySTAT
  3729                           ;konfig.c: 916: WriteBtySTAT(nr,15,RSDT1.outPPCW
      +                          );
  3730  00A2C2  0E0F               	movlw	15
  3731  00A2C4  0100               	movlb	__Lparam shr (0+8)
  3732  00A2C6  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3733  00A2C8  C133  F0F3         	movff	_RSDT1+15,?_WriteBtySTAT+1
  3734  00A2CC  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3735  00A2CE  DF1E               	call	_WriteBtySTAT
  3736                           ;konfig.c: 917: WriteBtySTAT(nr,16,RSDT1.outERR)
      +                          ;
  3737  00A2D0  0E10               	movlw	16
  3738  00A2D2  0100               	movlb	__Lparam shr (0+8)
  3739  00A2D4  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3740  00A2D6  C134  F0F3         	movff	_RSDT1+16,?_WriteBtySTAT+1
  3741  00A2DA  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3742  00A2DC  DF17               	call	_WriteBtySTAT
  3743                           ;konfig.c: 918: WriteBtySTAT(nr,17,RSDT1.outAWR)
      +                          ;
  3744  00A2DE  0E11               	movlw	17
  3745  00A2E0  0100               	movlb	__Lparam shr (0+8)
  3746  00A2E2  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3747  00A2E4  C135  F0F3         	movff	_RSDT1+17,?_WriteBtySTAT+1
  3748  00A2E8  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3749  00A2EA  DF10               	call	_WriteBtySTAT
  3750                           ;konfig.c: 919: WriteBtySTAT(nr,18,RSDT1.outPP);
  3751  00A2EC  0E12               	movlw	18
  3752  00A2EE  0100               	movlb	__Lparam shr (0+8)
  3753  00A2F0  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3754  00A2F2  C13D  F0F3         	movff	_RSDT1+25,?_WriteBtySTAT+1
  3755  00A2F6  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3756  00A2F8  DF09               	call	_WriteBtySTAT
  3757                           ;konfig.c: 920: WriteBtySTAT(nr,19,RSDT1.outPG);
  3758  00A2FA  0E13               	movlw	19
  3759  00A2FC  0100               	movlb	__Lparam shr (0+8)
  3760  00A2FE  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3761  00A300  C13E  F0F3         	movff	_RSDT1+26,?_WriteBtySTAT+1
  3762  00A304  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3763  00A306  DF02               	call	_WriteBtySTAT
  3764                           ;konfig.c: 921: WriteBtySTAT(nr,20,M.CONTSETP);
  3765  00A308  0E14               	movlw	20
  3766  00A30A  0100               	movlb	__Lparam shr (0+8)
  3767  00A30C  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3768  00A30E  C120  F0F3         	movff	_M+32,?_WriteBtySTAT+1
  3769  00A312  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3770  00A314  DEFB               	call	_WriteBtySTAT
  3771                           ;konfig.c: 922: WriteBtySTAT(nr,21,RSDT1.outZW);
  3772  00A316  0E15               	movlw	21
  3773  00A318  0100               	movlb	__Lparam shr (0+8)
  3774  00A31A  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3775  00A31C  C141  F0F3         	movff	_RSDT1+29,?_WriteBtySTAT+1
  3776  00A320  51EE               	movf	(?a_WriteEESTAT+1)^(__Lparam& (0+65280)),w
  3777  00A322  D6F4               	goto	_WriteBtySTAT
  3778                           ;konfig.c: 923: }
  3779  00A324                     __end_of_WriteEESTAT:
  3780                           ;konfig.c: 930: void CopyEESTAT(const unsigned c
      +                          har nr0,const unsigned char nr1)
  3781                           ;konfig.c: 931: {
  3782  00A324  00ED               	dw	?_CopyEESTAT
  3783  00A326                     _CopyEESTAT:
  3784  000000                     
  3785                           ; _nr0 loaded to fsr2l
  3786  00A326  6ED9               	movwf	fsr2l,c
  3787                           ;_nr0 stored from fsr2l
  3788                           ;konfig.c: 932: volatile unsigned char i;
  3789                           ;_nr0 stored from fsr2l
  3790  00A328  50D9               	movf	fsr2l,w,c
  3791  00A32A  0100               	movlb	__Lparam shr (0+8)
  3792  00A32C  6FEE               	movwf	?a_CopyEESTAT^(__Lparam& (0+65280)),b
  3793  00A32E  0E03               	movlw	3
  3794  00A330  64D9               	cpfsgt	fsr2l,c
  3795  00A332  D001               	goto	u2391
  3796  00A334  0C03               	retlw	3
  3797  00A336                     u2391:
  3798  00A336  0E03               	movlw	3
  3799  00A338  65ED               	cpfsgt	?_CopyEESTAT^(__Lparam& (0+65280)),b
  3800  00A33A  D001               	goto	l214
  3801  00A33C  0C03               	retlw	3
  3802  00A33E                     l214:
  3803                           ;konfig.c: 934: for(i=0;i<22;i++)
  3804  00A33E  0100               	movlb	__Lparam shr (0+8)
  3805  00A340  6BEF               	clrf	(?a_CopyEESTAT+1)^(__Lparam& (0+65280)),b	
      +                          ;volatile
  3806  00A342  0E15               	movlw	21
  3807  00A344  65EF               	cpfsgt	(?a_CopyEESTAT+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  3808  00A346  D001               	goto	l215
  3809  00A348  0C15               	retlw	21
  3810  00A34A                     l215:
  3811                           ;konfig.c: 935: {
  3812  00A34A  0100               	movlb	__Lparam shr (0+8)
  3813  00A34C  51EF               	movf	(?a_CopyEESTAT+1)^(__Lparam& (0+65280)),w	
      +                          ;volatile
  3814  00A34E  6FF2               	movwf	?_WriteBtySTAT^(__Lparam& (0+65280)),b
  3815  00A350  51EF               	movf	(?a_CopyEESTAT+1)^(__Lparam& (0+65280)),w	
      +                          ;volatile
  3816  00A352  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  3817  00A354  51EE               	movf	?a_CopyEESTAT^(__Lparam& (0+65280)),w
  3818  00A356  DEAD               	call	_ReadBtySTAT
  3819  00A358  0100               	movlb	__Lparam shr (0+8)
  3820  00A35A  6FF3               	movwf	(?_WriteBtySTAT+1)^(__Lparam& (0+65280)),
      +                          b
  3821  00A35C  51ED               	movf	?_CopyEESTAT^(__Lparam& (0+65280)),w
  3822  00A35E  DED6               	call	_WriteBtySTAT
  3823  00A360  0100               	movlb	__Lparam shr (0+8)
  3824  00A362  2BEF               	incf	(?a_CopyEESTAT+1)^(__Lparam& (0+65280)),f,
      +                          b	;volatile
  3825  00A364  0E15               	movlw	21
  3826  00A366  65EF               	cpfsgt	(?a_CopyEESTAT+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  3827  00A368  D7F0               	goto	l215
  3828  00A36A  0C15               	retlw	21
  3829                           ;konfig.c: 937: }
  3830  00A36C                     __end_of_CopyEESTAT:
  3831  000000                     
  3832  000000                     
  3833  000000                     
  3834  000000                     
  3835  000000                     
  3836  000000                     
  3837  000000                     
  3838  000000                     
  3839  000000                     
  3840  000000                     
  3841  000000                     
  3842  000000                     
  3843  000000                     
  3844  000000                     
  3845  000000                     
  3846  000000                     
  3847  000000                     
  3848  000000                     
  3849  000000                     
  3850  000000                     
  3851  000000                     
  3852  000000                     
  3853  000000                     
  3854  000000                     
  3855  000000                     
  3856  000000                     
  3857  000000                     
  3858  000000                     
  3859  000000                     
  3860  000000                     
  3861  000000                     
  3862  000000                     
  3863  000000                     
  3864  000000                     
  3865  000000                     
  3866  000000                     
  3867  000000                     
  3868  000000                     
  3869  000000                     
  3870  000000                     
  3871  000000                     
  3872  000000                     
  3873  000000                     
  3874  000000                     
  3875  000000                     
  3876  000000                     
  3877  000000                     
  3878  000000                     
  3879  000000                     
  3880  000000                     
  3881  000000                     
  3882  000000                     
  3883  000000                     
  3884  000000                     
  3885  000000                     
  3886  000000                     
  3887  000000                     
  3888  000000                     
  3889  000000                     
  3890  000000                     
  3891  000000                     
  3892  000000                     
  3893  000000                     
  3894  000000                     
  3895  000000                     
  3896  000000                     
  3897  000000                     
  3898  000000                     
  3899  000000                     
  3900  000000                     
  3901  000000                     
  3902  000000                     
  3903  000000                     
  3904  000000                     
  3905  000000                     
  3906  000000                     
  3907  000000                     
  3908  000000                     
  3909  000000                     
  3910  000000                     
  3911  000000                     
  3912  000000                     
  3913  000000                     
  3914  000000                     
  3915  000000                     
  3916  000000                     
  3917  000000                     
  3918  000000                     
  3919  000000                     
  3920  000000                     
  3921  000000                     
  3922  000000                     
  3923  000000                     
  3924  000000                     
  3925  000000                     
  3926  000000                     
  3927  000000                     
  3928  000000                     
  3929  000000                     
  3930  000000                     
  3931  000000                     
  3932  000000                     
  3933  000000                     
  3934  000000                     
  3935  000000                     
  3936  000000                     
  3937  000000                     
  3938  000000                     
  3939  000000                     
  3940  000000                     
  3941  000000                     
  3942  000000                     
  3943  000000                     
  3944  000000                     
  3945  000000                     
  3946  000000                     
  3947  000000                     
  3948  000000                     
  3949  000000                     
  3950  000000                     
  3951  000000                     
  3952  000000                     
  3953  000000                     
  3954  000000                     
  3955  000000                     
  3956  000000                     
  3957  000000                     
  3958  000000                     
  3959  000000                     
  3960  000000                     
  3961  000000                     
  3962  000000                     
  3963  000000                     
  3964  000000                     
  3965  000000                     
  3966  000000                     
  3967  000000                     
  3968  000000                     
  3969  000000                     
  3970  000000                     
  3971  000000                     
  3972  000000                     
  3973  000000                     
  3974  000000                     
  3975  000000                     
  3976  000000                     
  3977  000000                     
  3978  000000                     
  3979  000000                     
  3980  000000                     
  3981  000000                     
  3982  000000                     
  3983  000000                     
  3984  000000                     
  3985  000000                     
  3986  000000                     
  3987  000000                     
  3988  000000                     
  3989  000000                     
  3990  000000                     
  3991  000000                     
  3992  000000                     
  3993  000000                     
  3994  000000                     
  3995  000000                     
  3996  000000                     
  3997  000000                     
  3998  000000                     
  3999  000000                     
  4000  000000                     
  4001  000000                     
  4002  000000                     
  4003  000000                     
  4004  000000                     
  4005  000000                     
  4006  000000                     
  4007  000000                     
  4008  000000                     
  4009  000000                     
  4010  000000                     
  4011  000000                     
  4012  000000                     
  4013  000000                     
  4014  000000                     
  4015  000000                     
  4016  000000                     
  4017  000000                     
  4018  000000                     
  4019  000000                     
  4020  000000                     
  4021  000000                     
  4022  000000                     
  4023  000000                     
  4024  000000                     
  4025  000000                     
  4026  000000                     
  4027  000000                     
  4028  000000                     
  4029  000000                     
  4030  000000                     
  4031  000000                     
  4032  000000                     
  4033  000000                     
  4034  000000                     
  4035  000000                     
  4036  000000                     
  4037  000000                     
  4038  000000                     
  4039  000000                     
  4040  000000                     
  4041  000000                     
  4042  000000                     
  4043  000000                     
  4044  000000                     
  4045  000000                     
  4046  000000                     
  4047  000000                     
  4048  000000                     
  4049  000000                     
  4050  000000                     
  4051  000000                     
  4052  000000                     
  4053  000000                     
  4054  000000                     
  4055  000000                     
  4056  000000                     
  4057  000000                     
  4058  000000                     
  4059  000000                     
  4060  000000                     
  4061  000000                     
  4062  000000                     
  4063  000000                     
  4064  000000                     
  4065  000000                     
  4066  000000                     
  4067  000000                     
  4068  000000                     
  4069  000000                     
  4070  000000                     
  4071  000000                     
  4072  000000                     
  4073  000000                     
  4074  000000                     
  4075  000000                     
  4076  000000                     
  4077  000000                     
  4078  000000                     
  4079  000000                     
  4080  000000                     
  4081  000000                     
  4082  000000                     
  4083  000000                     
  4084  000000                     
  4085  000000                     
  4086  000000                     
  4087  000000                     
  4088  000000                     
  4089  000000                     
  4090  000000                     
  4091  000000                     
  4092  000000                     
  4093  000000                     
  4094  000000                     
  4095  000000                     
  4096  000000                     
  4097  000000                     
  4098  000000                     
  4099  000000                     
  4100  000000                     
  4101  000000                     
  4102  000000                     
  4103  000000                     
  4104  000000                     
  4105  000000                     
  4106  000000                     
  4107  000000                     
  4108  000000                     
  4109  000000                     
  4110  000000                     
  4111  000000                     
  4112  000000                     
  4113  000000                     
  4114  000000                     
  4115  000000                     
  4116  000000                     
  4117  000000                     
  4118  000000                     
  4119  000000                     
  4120  000000                     
  4121  000000                     
  4122  000000                     
  4123  000000                     
  4124  000000                     
  4125  000000                     
  4126  000000                     
  4127  000000                     
  4128  000000                     
  4129  000000                     
  4130  000000                     
  4131  000000                     
  4132  000000                     
  4133  000000                     
  4134  000000                     
  4135  000000                     
  4136  000000                     
  4137  000000                     
  4138  000000                     
  4139  000000                     
  4140  000000                     
  4141  000000                     
  4142  000000                     
  4143  000000                     
  4144  000000                     
  4145  000000                     
  4146  000000                     
  4147  000000                     
  4148  000000                     
  4149  000000                     
  4150  000000                     
  4151  000000                     
  4152  000000                     
  4153  000000                     
  4154  000000                     
  4155  000000                     
  4156  000000                     
  4157  000000                     
  4158  000000                     
  4159  000000                     
  4160  000000                     
  4161  000000                     
  4162  000000                     
  4163  000000                     
  4164  000000                     
  4165  000000                     
  4166  000000                     
  4167  000000                     
  4168  000000                     
  4169  000000                     
  4170  000000                     
  4171  000000                     
  4172  000000                     
  4173  000000                     
  4174  000000                     
  4175  000000                     
  4176  000000                     
  4177  000000                     
  4178  000000                     
  4179  000000                     
  4180  000000                     
  4181  000000                     
  4182  000000                     
  4183  000000                     
  4184  000000                     
  4185  000000                     
  4186  000000                     
  4187  000000                     
  4188  000000                     
  4189  000000                     
  4190  000000                     
  4191  000000                     
  4192  000000                     
  4193  000000                     
  4194  000000                     
  4195  000000                     
  4196  000000                     
  4197  000000                     
  4198  000000                     
  4199  000000                     
  4200  000000                     
  4201  000000                     
  4202  000000                     
  4203  000000                     
  4204  000000                     
  4205  000000                     
  4206  000000                     
  4207  000000                     
  4208  000000                     
  4209  000000                     
  4210  000000                     
  4211  000000                     
  4212  000000                     
  4213  000000                     
  4214  000000                     
  4215  000000                     
  4216  000000                     
  4217  000000                     
  4218  000000                     
  4219  000000                     
  4220  000000                     
  4221  000000                     
  4222  000000                     
  4223  000000                     
  4224  000000                     
  4225  000000                     
  4226  000000                     
  4227  000000                     
  4228  000000                     
  4229  000000                     
  4230  000000                     
  4231  000000                     
  4232  000000                     
  4233  000000                     
  4234  000000                     
  4235  000000                     
  4236  000000                     
  4237  000000                     
  4238  000000                     
  4239  000000                     
  4240  000000                     
  4241  000000                     
  4242  000000                     
  4243  000000                     
  4244  000000                     
  4245  000000                     
  4246  000000                     
  4247  000000                     
  4248  000000                     
  4249  000000                     
  4250  000000                     
  4251  000000                     
  4252  000000                     
  4253  000000                     
  4254  000000                     
  4255  000000                     
  4256  000000                     
  4257  000000                     
  4258  000000                     
  4259  000000                     
  4260  000000                     
  4261  000000                     
  4262  000000                     
  4263  000000                     
  4264  000000                     
  4265  000000                     
  4266  000000                     
  4267                           
  4268                           	psect	data
  4269                           ;main.h: 130: extern void GoldenEye(void);
  4270                           ;main.h: 133: void InitGlobal(void);
  4271                           ;main.h: 134: void ErrDTF(void);
  4272                           ;main.h: 135: void ErrPTG(void);
  4273                           ;main.h: 136: void ToReset(void);
  4274                           ;main.h: 137: void DecWSW(void);
  4275                           ;main.h: 138: void DecERR(void);
  4276                           ;main.h: 139: void DecSTR(void);
  4277                           ;main.h: 140: void DecRozruch(void);
  4278                           ;main.h: 141: void SetRozruch(void);
  4279                           ;main.h: 142: void DecWylacz(void);
  4280                           ;main.h: 143: void SetWylacz(void);
  4281                           ;main.h: 144: void RuszPlomien(void);
  4282                           ;main.h: 145: void ReloadPlomien(void);
  4283                           ;main.h: 146: void RuszCiag(void);
  4284                           ;main.h: 147: void ReloadCiag(void);
  4285                           ;main.h: 148: void Proba48(void);
  4286                           ;main.h: 149: void Rusz48(void);
  4287                           ;main.h: 150: void Proba48Z3(void);
  4288                           ;main.h: 151: void Rusz48Z3(void);
  4289                           ;main.h: 152: void Rozruch(void);
  4290                           ;main.h: 153: void DecyzjaPLM(void);
  4291                           ;main.h: 154: void DecyzjaPLM2(void);
  4292                           ;main.h: 155: void VWybieg(void);
  4293                           ;main.h: 156: void ZmienKCOKCW(void);
  4294                           ;main.h: 157: void FunkcjaSerwisowa(void);
  4295                           ;main.h: 158: void KolejkaPobudzen(void);
  4296                           ;main.h: 159: void BlokadaL3(void);
  4297                           ;main.h: 160: void Blokada15S(void);
  4298                           ;main.h: 161: void ToObiegCW(void);
  4299                           ;main.h: 162: void ToObiegCO(void);
  4300                           ;main.h: 163: void Wylacz(void);
  4301                           ;main.h: 164: void RuszPWR(void);
  4302                           ;main.h: 165: void ClearData(void);
  4303                           ;main.h: 166: void SetLoMod(void);
  4304                           ;main.h: 167: void RestartFltPrt(void);
  4305                           ;main.h: 168: void ClearDiode(void);
  4306                           ;main.h: 169: void DecyzjaAntyLeg(void);
  4307                           ;main.h: 170: void DetekcjaPrzeplywuWG(void);
  4308                           ;main.h: 171: void OczekujNaPrzeplywWG(void);
  4309                           ;main.h: 172: void RefLCDData(void);
  4310                           ;main.h: 173: void GrzejON(void);
  4311                           ;main.h: 174: void GrzejOFF(void);
  4312                           ;main.h: 176: extern void InitOsc(void);
  4313                           ;main.h: 178: extern void InitAC(void);
  4314                           ;main.h: 180: extern void InitWsw(void);
  4315                           ;main.h: 181: extern bit GetPoz(const unsigned c
      +                          har nrkol,const unsigned char nrpoz);
  4316                           ;main.h: 183: extern void InitPWM(void);
  4317                           ;main.h: 184: extern void WritePWM(const unsigne
      +                          d char tpwm);
  4318                           ;main.h: 185: extern void WriteOPWM(unsigned cha
      +                          r tpwm);
  4319                           ;main.h: 186: extern void WritePWM2(const unsign
      +                          ed char tpwm);
  4320                           ;main.h: 187: extern unsigned char ModToProc(uns
      +                          igned char wrt);
  4321                           ;main.h: 189: extern void ClsScr(void);
  4322                           ;main.h: 190: extern void EndClsScr(void);
  4323                           ;main.h: 191: extern void TestScr(void);
  4324                           ;main.h: 192: extern void EndTestScr(void);
  4325                           ;main.h: 193: extern void ClsScr(void);
  4326                           ;main.h: 194: extern void EndClsScr(void);
  4327                           ;main.h: 195: extern void PrintErr(const unsigne
      +                          d char kod, const unsigned char pls);
  4328                           ;main.h: 196: extern void PrintErrCs(const unsig
      +                          ned char kod,const unsigned char cs, const unsig
      +                          ned char pls);
  4329                           ;main.h: 197: extern void PrintErrTm(const unsig
      +                          ned char kod,const unsigned char tm, const unsig
      +                          ned char pls);
  4330                           ;main.h: 198: extern void EndErr(void);
  4331                           ;main.h: 199: extern void PrintPR(const unsigned
      +                           char lkod,unsigned char nkod,unsigned char tryb
      +                          );
  4332                           ;main.h: 200: extern void EndPR(void);
  4333                           ;main.h: 201: extern void PrintNstCO(const unsig
      +                          ned char nst);
  4334                           ;main.h: 202: extern void PrintNstCW(const unsig
      +                          ned char nst);
  4335                           ;main.h: 203: extern void PrintNstKt(const unsig
      +                          ned char nst);
  4336                           ;main.h: 204: extern void EndNst(void);
  4337                           ;main.h: 205: extern void PrintL3(void);
  4338                           ;main.h: 206: extern void EndL3(void);
  4339                           ;main.h: 207: extern void PrintTdzCO(const unsig
      +                          ned char tm);
  4340                           ;main.h: 208: extern void EndTdzCO(void);
  4341                           ;main.h: 209: extern void PrintTdzCW(const unsig
      +                          ned char tm);
  4342                           ;main.h: 210: extern void EndTdzCW(void);
  4343                           ;main.h: 211: extern void PrintOFF(void);
  4344                           ;main.h: 212: extern void EndOFF(void);
  4345                           ;main.h: 213: extern void PrintCS(const unsigned
      +                           char cs);
  4346                           ;main.h: 214: extern void EndCS(void);
  4347                           ;main.h: 215: extern void PrintCW(const unsigned
      +                           char tm);
  4348                           ;main.h: 216: extern void EndCW(void);
  4349                           ;main.h: 217: extern void PrintCO(const unsigned
      +                           char tm);
  4350                           ;main.h: 218: extern void PrintHex(const unsigne
      +                          d char tm);
  4351                           ;main.h: 219: extern void SetDiode(unsigned char
      +                           nrd, unsigned char stn);
  4352                           ;main.h: 220: extern void RefreshNst(const unsig
      +                          ned char nst);
  4353                           ;main.h: 222: extern bit GetBit(const unsigned c
      +                          har data,const unsigned char nbit);
  4354                           ;main.h: 223: extern void BitSet(unsigned char *
      +                          data, const unsigned char nbit,const unsigned ch
      +                          ar bt);
  4355                           ;main.h: 224: extern void BitSet2(unsigned char 
      +                          *data, const unsigned char nbit,const unsigned c
      +                          har bt);
  4356                           ;main.h: 226: extern void StartRTG(const unsigne
      +                          d char Index);
  4357                           ;main.h: 227: extern unsigned char RTG(const uns
      +                          igned char Index);
  4358                           ;main.h: 228: extern void StartRTS(const unsigne
      +                          d char Index);
  4359                           ;main.h: 229: extern unsigned char RTS(const uns
      +                          igned char Index);
  4360                           ;main.h: 230: extern void StartRTdS(const unsign
      +                          ed char Index);
  4361                           ;main.h: 231: extern unsigned char RTdS(const un
      +                          signed char Index);
  4362                           ;main.h: 233: extern void InitTimer1(void);
  4363                           ;main.h: 235: extern void InitPort(void);
  4364                           ;main.h: 236: extern bit RdPrt(const unsigned ch
      +                          ar Index);
  4365                           ;main.h: 237: extern void SetPrt(const unsigned 
      +                          char Index, const unsigned char nw);
  4366                           ;main.h: 238: extern void RefPrt(const unsigned 
      +                          char Index);
  4367                           ;main.h: 240: extern void PwrOnDelay(void);
  4368                           ;main.h: 242: extern void InitI2C(void);
  4369  00006B                     _MinMax:
  4370  00006B                     	ds	2
  4371  00006B                     	ds	2
  4372  00006B                     	ds	2
  4373  00006B                     	ds	2
  4374  00006B                     	ds	2
  4375  00006B                     	ds	2
  4376  00006B                     	ds	2
  4377  00006B                     	ds	2
  4378  00006B                     	ds	2
  4379  00006B                     	ds	2
  4380  00006B                     	ds	2
  4381  00006B                     	ds	2
  4382  00006B                     	ds	2
  4383  00006B                     	ds	2
  4384  00006B                     	ds	2
  4385  00006B                     	ds	2
  4386  00006B                     	ds	2
  4387  00006B                     	ds	2
  4388  00006B                     	ds	2
  4389  00006B                     	ds	2
  4390  00006B                     	ds	2
  4391  00006B                     	ds	2
  4392  00006B                     	ds	2
  4393  00006B                     	ds	2
  4394  00006B                     	ds	2
  4395  00006B                     	ds	2
  4396  00006B                     	ds	2
  4397  00006B                     	ds	2
  4398  00006B                     	ds	2
  4399  00006B                     	ds	2
  4400  00006B                     	ds	2
  4401  00006B                     	ds	2
  4402  00006B                     	ds	2
  4403  00006B                     	ds	2
  4404  00006B                     	ds	2
  4405  00006B                     	ds	2
  4406  00006B                     	ds	2
  4407  00006B                     	ds	2
  4408  00006B                     	ds	2
  4409  00006B                     	ds	2
  4410  00006B                     	ds	2
  4411  00006B                     	ds	2
  4412  00006B                     	ds	2
  4413  00006B                     	ds	2
  4414  00006B                     	ds	2
  4415  00006B                     	ds	2
  4416  00006B                     	ds	2
  4417  00006B                     	ds	2
  4418  00006B                     	ds	2
  4419  00006B                     	ds	2
  4420  00006B                     	ds	2
  4421  00006B                     	ds	2
  4422  00006B                     	ds	2
  4423  00006B                     	ds	2
  4424  00006B                     	ds	2
  4425  00006B                     	ds	2
  4426  00006B                     	ds	2
  4427  00006B                     	ds	2
  4428  00006B                     	ds	2
  4429  00006B                     	ds	2
  4430  00006B                     	ds	2
  4431  00006B                     	ds	2
  4432  00006B                     	ds	2
  4433                           
  4434                           	psect	idata
  4435  001030  00C1               	dw	193
  4436  001032  0000               	dw	0
  4437  001034  0063               	dw	99
  4438  001036  00C2               	dw	194
  4439  001038  0000               	dw	0
  4440  00103A  0063               	dw	99
  4441  00103C  00C3               	dw	195
  4442  00103E  0000               	dw	0
  4443  001040  0063               	dw	99
  4444  001042  00C4               	dw	196
  4445  001044  0000               	dw	0
  4446  001046  0001               	dw	1
  4447  001048  00C6               	dw	198
  4448  00104A  0000               	dw	0
  4449  00104C  0001               	dw	1
  4450  00104E  00C5               	dw	197
  4451  001050  0000               	dw	0
  4452  001052  0003               	dw	3
  4453  001054  00C8               	dw	200
  4454  001056  0000               	dw	0
  4455  001058  0001               	dw	1
  4456  00105A  00CC               	dw	204
  4457  00105C  0000               	dw	0
  4458  00105E  0001               	dw	1
  4459  001060  00CD               	dw	205
  4460  001062  0000               	dw	0
  4461  001064  0001               	dw	1
  4462  001066  00D0               	dw	208
  4463  001068  0000               	dw	0
  4464  00106A  0001               	dw	1
  4465  00106C  00D1               	dw	209
  4466  00106E  0005               	dw	5
  4467  001070  0019               	dw	25
  4468  001072  00D2               	dw	210
  4469  001074  000F               	dw	15
  4470  001076  0063               	dw	99
  4471  001078  00D3               	dw	211
  4472  00107A  0019               	dw	25
  4473  00107C  0063               	dw	99
  4474  00107E  00D4               	dw	212
  4475  001080  0019               	dw	25
  4476  001082  0063               	dw	99
  4477  001084  00D5               	dw	213
  4478  001086  0000               	dw	0
  4479  001088  000F               	dw	15
  4480  00108A  00D6               	dw	214
  4481  00108C  0046               	dw	70
  4482  00108E  0059               	dw	89
  4483  001090  00D7               	dw	215
  4484  001092  0000               	dw	0
  4485  001094  0014               	dw	20
  4486  001096  00D9               	dw	217
  4487  001098  0023               	dw	35
  4488  00109A  0055               	dw	85
  4489  00109C  00DA               	dw	218
  4490  00109E  0000               	dw	0
  4491  0010A0  0002               	dw	2
  4492  0010A2  00DC               	dw	220
  4493  0010A4  0000               	dw	0
  4494  0010A6  0001               	dw	1
  4495  0010A8  00DB               	dw	219
  4496  0010AA  0000               	dw	0
  4497  0010AC  0001               	dw	1
  4498                           
  4499                           	psect	bigbss
  4500  000EE8                     F2007:
  4501  000EE8                     	ds	1
  4502  000EE8                     F2008:
  4503  000EE8                     	ds	1
  4504  000000                     
  4505  000000                     
  4506  000000                     
  4507  000000                     
  4508  000000                     
  4509  000000                     
  4510  000000                     
  4511  000000                     
  4512  000000                     
  4513  000000                     
  4514  000000                     
  4515  000000                     
  4516  000000                     
  4517  000000                     
  4518  000000                     
  4519  000000                     
  4520  000000                     
  4521  000000                     
  4522  000000                     
  4523  000000                     
  4524  000000                     
  4525  000000                     
  4526  000000                     
  4527  000000                     
  4528  000000                     
  4529  000000                     
  4530  000000                     
  4531  000000                     
  4532  000000                     
  4533  000000                     
  4534  000000                     
  4535  000000                     
  4536  000000                     
  4537  000000                     
  4538  000000                     
  4539  000000                     
  4540  000000                     
  4541  000000                     
  4542  000000                     
  4543  000000                     
  4544  000000                     
  4545  000000                     
  4546  000000                     
  4547  000000                     
  4548  000000                     
  4549  000000                     
  4550  000000                     
  4551  000000                     
  4552  000000                     
  4553  000000                     
  4554  000000                     
  4555  000000                     
  4556  000000                     
  4557  000000                     
  4558  000000                     
  4559  000000                     
  4560  000000                     
  4561  000000                     
  4562  000000                     
  4563  000000                     
  4564  000000                     
  4565  000000                     
  4566  000000                     
  4567  000000                     
  4568  000000                     
  4569  000000                     
  4570  000000                     
  4571  000000                     
  4572  000000                     
  4573  000000                     
  4574  000000                     
  4575  000000                     
  4576  000000                     
  4577  000000                     
  4578  000000                     
  4579  000000                     
  4580  000000                     
  4581  000000                     
  4582  000000                     
  4583  000000                     
  4584  000000                     
  4585  000000                     
  4586  000000                     
  4587  000000                     
  4588  000000                     
  4589  000000                     
  4590  000000                     
  4591  000000                     
  4592  000000                     
  4593  000000                     
  4594  000000                     
  4595  000000                     
  4596  000000                     
  4597  000000                     
  4598  000000                     
  4599  000000                     
  4600  000000                     
  4601  000000                     
  4602  000000                     
  4603  000000                     
  4604  000000                     
  4605  000000                     
  4606  000000                     
  4607  000000                     
  4608  000000                     
  4609  000000                     
  4610  000000                     
  4611  000000                     
  4612  000000                     
  4613  000000                     
  4614  000000                     
  4615  000000                     
  4616  000000                     
  4617  000000                     
  4618  000000                     
  4619  000000                     
  4620  000000                     
  4621  000000                     
  4622  000000                     
  4623  000000                     
  4624  000000                     
  4625  000000                     
  4626  000000                     
  4627  000000                     
  4628  000000                     
  4629  000000                     
  4630  000000                     
  4631  000000                     
  4632  000000                     
  4633  000000                     
  4634  000000                     
  4635  000000                     
  4636                           
  4637                           	psect	bss
  4638  000230                     _DtKNF:
  4639  000230                     	ds	28
  4640                           
  4641                           	psect	temp
  4642  000000                     btemp:
  4643  000000                     	ds	4
  4644                           indf0	equ	0xFEF
  4645                           postinc0	equ	0xFEE
  4646                           postdec0	equ	0xFED
  4647                           wreg	equ	0xFE8
  4648                           fsr2l	equ	0xFD9
  4649                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Mon Sep 14 17:44:54 2020

   __end_of_SetMinMaxPGD 99BC     __end_of_SetMinMaxPCO 9992  
                      _M 0100                 _PomiarZW 7D2E  
__end_of_SetDefaultValue 9D74                       l30 8A12  
                     l31 8A14                       l32 8A38  
                     l41 8ACC                       l42 8A76  
                     l34 8A48                       l43 8A8A  
                     l60 8B6C                       l44 8AA6  
                     l36 8AEE                       l53 8B86  
                     l37 8A58                       l62 9914  
                     l54 8B6E                       l38 8A60  
                     l71 8EB4                       l63 8C34  
                     l55 8B2E                       l80 9190  
                     l56 8B3A                       l48 8AB8  
                     l73 8FC8                       l65 8CCC  
                     l57 8B42                       l49 8ADE  
                     l90 9448                       l82 9228  
                     l58 8B4E                       l91 9418  
                     l75 8FB4                       l67 8D64  
                     l84 92C0                       l76 9060  
                     l69 8E08                       l94 94E0  
                     l86 9384                       l78 90F8  
                     l87 9354                       l96 9578  
                     l98 9610                       u51 8A20  
                     u70 8A26   __end_of_WriteBtyNZSTAT A0B0  
        ?a_ReadBtyEEHIST 00F2                 _StartRTG E798  
               _StartRTS E6DE            ??_WriteEESTAT 00ED  
           _SetTpKtParam 9D0E                      l100 96A8  
                    l102 9740                      l111 9950  
                    l120 99A8                      l112 9930  
                    l104 97D8                      l201 A152  
                    l113 993A                      l210 A1A0  
                    l202 A142                      l114 994C  
                    l106 9870                      l211 A208  
                    l203 A120                      l131 9A44  
                    l123 99CA                      l212 A20C  
                    l204 A12A                      l132 9A3A  
                    l124 99D8                      l116 9962  
                    l108 9908                      l205 A136  
                    l117 996C                      l214 A33E  
                    l206 A13C                      l150 9D6A  
                    l142 9D38                      l134 9A6E  
                    l118 997E                      l215 A34A  
                    l151 9D50                      l143 9D10  
                    l127 9A06                      l208 A176  
                    l152 9D54                      l144 9D18  
                    l128 9A14                      l209 A198  
                    l145 9D20                      l137 9BD0  
                    l154 9DC6                      l146 9D28  
                    l147 9D30                      l139 9CEA  
                    l156 9E06                      l190 A0BC  
                    l182 A050                      l192 A0F8  
                    l184 A068                      l193 A0E8  
                    l194 A0C6                      l186 A080  
                    l195 A0D0                      l196 A0DC  
                    l188 A09E                      l197 A0E2  
                    l199 A116                      u300 8C9C  
                    u220 8C04                      u205 8BEC  
                    u305 8C9A                      u225 8C02  
                    u405 8D52                      u325 8CBA  
                    u245 8C22                      u511 8E44  
                    u431 8DA0                      u415 8D80  
                    u351 8D08                      u335 8CE8  
                    u271 8C70                      u255 8C50  
                    u191 8BD8                      u175 8BB8  
                    u505 8E42                      u425 8D9E  
                    u345 8D06                      u265 8C6E  
                    u185 8BD6                      _PFN 01A0  
                    u700 8FA8                      u620 8F1C  
                    u540 8E70                      u460 8DCC  
                    u380 8D34                      u605 8F04  
                    u525 8E58                      u445 8DB4  
                    u365 8D1C                      u285 8C84  
                    u705 8FA6                      u625 8F1A  
                    u545 8E6E                      u465 8DCA  
                    u385 8D32                      u901 9134  
                    u821 909C                      u805 907C  
                    u741 9004                      u725 8FE4  
                    u645 8F3A                      u565 8E8E  
                    u485 8DEA                      u815 909A  
                    u735 9002                      u671 8F7C  
                    u655 8F5C                      u591 8EF0  
                    u575 8ED0                      u495 8E24  
                    u665 8F7A                      u585 8EEE  
                    u930 9160                      u850 90C8  
                    u770 9030                      u915 9148  
                    u835 90B0                      u755 9018  
                    u685 8F90                      u935 915E  
                    u855 90C6                      u775 902E  
                    u955 917E                      u875 90E6  
                    u795 904E                      u981 91CC  
                    u965 91AC                      u885 9114  
                    u975 91CA                      u895 9132  
                    u995 91E0          ?a_ReadBtyNZSTAT 00F2  
               __config1 0030FF                 __config2 00EFEF  
               __config3 007DFF                 __config4 00FFFB  
               __config5 00FFF0                 __config6 00DFF0  
   __end_of_SetTpKtParam 9D4E                      wreg 000FE8  
          ?_eeprom_write 00F9               ?a_SetNSTCO 00EE  
                   F2007 0EE8                     F2008 0EE9  
        _if_eeprom_write 9FFC           ?a_SetMinMaxPCO 00EF  
                   f6363 00F1              ?a_ReadEEPFN 00EB  
                   u1010 91F8                     u1015 91F6  
                   u1115 92AE                     u1035 9216  
                   u1205 934E                     u1141 92FC  
                   u1125 92DC                     u1061 9264  
                   u1045 9244                     u1215 9372  
                   u1135 92FA                     u1055 9262  
                   u1305 9412                     u1241 93C0  
                   u1225 93A0                     u1170 9328  
                   u1090 9290                     u1315 9436  
                   u1235 93BE                     u1155 9310  
                   u1075 9278                     u1501 95B4  
                   u1421 951C                     u1405 94FC  
                   u1341 9484                     u1325 9464  
                   u2150 9BBE                     u1270 93EC  
                   u1415 951A                     u1335 9482  
                   u1255 93D4                     u1175 9326  
                   u1095 928E                     u2225 9EB4  
                   u2161 9CDE                     u2065 9EEA  
                   u1610 9678                     u1530 95E0  
                   u1450 9548                     u1370 94B0  
                   u2235 9EEA                     u1515 95C8  
                   u1435 9530                     u1355 9498  
                   u1275 93EA                     u2180 9CE4  
                   u2245 9F18                     u2255 9F6A  
                   u2095 9A32                     u1615 9676  
                   u1535 95DE                     u1455 9546  
                   u1375 94AE                     u2265 9FD0  
                   u2275 A01A                     u1715 972E  
                   u1635 9696                     u1555 95FE  
                   u1475 9566                     u1395 94CE  
                   u1901 98AC                     u1821 9814  
                   u1805 97F4                     u1741 977C  
                   u1725 975C                     u1661 96E4  
                   u1645 96C4                     u1581 964C  
                   u1565 962C                     u1485 9594  
                   u2391 A336                     u1815 9812  
                   u1735 977A                     u1655 96E2  
                   u1575 964A                     u1495 95B2  
                   u1930 98D8                     u1850 9840  
                   u1770 97A8                     u1690 9710  
                   u1915 98C0                     u1835 9828  
                   u1755 9790                     u1675 96F8  
                   u1595 9660                     u1935 98D6  
                   u1855 983E                     u1775 97A6  
                   u1695 970E                     u1955 98F6  
                   u1875 985E                     u1795 97C6  
                   u1885 988C                     _MGSD 024C  
                   u1895 98AA         ?_if_eeprom_write 00F6  
           _ReadEEPopPFN 9F92                     _DtCO 01B6  
                   _DtCW 01A7                     _DtZW 019C  
                   indf0 000FEF                     fsr2l 000FD9  
                   btemp 0000             ?a_CopyEESTAT 00EE  
   __end_of_ReadEEPopPFN 9FB0                  ?_SetPrt 00EF  
             _WriteEEPCO 9ECC               _WriteEEPFN 9F2C  
             _WriteEEPCW 9E96           ?a_ReadEEPopPFN 00EB  
     __end_of_WriteEEPCO 9EF2       __end_of_WriteEEPFN 9F7A  
     __end_of_WriteEEPCW 9EC8                    _RSDT1 0124  
                  _DtKNF 0230                    _RdPrt DE98  
             used_btemp0 0001               used_btemp1 0001  
             used_btemp2 0001               used_btemp3 0001  
            _eeprom_read F144                  _BitSet2 EDF4  
                _GetBit2 ED8E                 ?_BitSet2 00EE  
                  status 000FD8                 ?_GetBit2 00F0  
__end_of_if_eeprom_write A030             _WriteBtySTAT A10C  
       __end_of_SetNSTCO 9A9E                  __Lparam 00E9  
             _GetPGD_PCO 7F94     __end_of_WriteBtySTAT A166  
           ?_eeprom_read 00F9                  __ramtop 1000  
         __end_of_ChkPGD 9A34           __end_of_ChkPCO 99F8  
         __end_of_EnKonf 89EA           __end_of_DsKonf 89F4  
         __end_of_SetPFN 9E96           ?a_WriteBtySTAT 00F4  
            _WriteEEALIN 9FB0               _CopyEESTAT A326  
            _WriteEEPPGD 9EFA              _WriteEESTAT A166  
     __end_of_CopyEESTAT A36C              _ReadBtyHFLG A036  
            _ReadBtyHREF A040              _ReadBtyHNPZ A030  
    __end_of_WriteEEALIN 9FE0              _ReadBtySTAT A0B2  
    __end_of_WriteEEPPGD 9F2C      __end_of_WriteEESTAT A324  
    __end_of_ReadBtyHFLG A040      __end_of_ReadBtyHREF A058  
    __end_of_ReadBtyHNPZ A036          _SetDefaultValue 9D4E  
    __end_of_ReadBtySTAT A10A                   _ChkPGD 99F8  
                 _ChkPCO 99BC            _ReadBtyEEHIST A058  
                 _EnKonf 89E4                   _DsKonf 89EA  
          ?_WriteBtySTAT 00F2              ?_CopyEESTAT 00ED  
                 _MinMax 006B                   _SetPFN 9D74  
              _RdEEParam 9A9E            ?a_WriteEEALIN 00EE  
                 _SetPrt DEBA        __end_of_RdEEParam 9D0E  
          _ReadBtyNZSTAT A070            ?a_WriteEESTAT 00ED  
              _ClearEETA 9FEC        __end_of_ClearEETA 9FFA  
          ?a_ReadBtyHREF 00F2               _ReadEEALIN 9FE0  
          ?a_ReadBtySTAT 00F5               _ReadEEPPGD 9EF6  
                postdec0 000FED       __end_of_ReadEEALIN 9FEC  
                postinc0 000FEE       __end_of_ReadEEPPGD 9EFA  
  __end_of_ReadBtyEEHIST A070             ?_ReadBtySTAT 00F4  
  __end_of_ReadBtyNZSTAT A092             _eeprom_write F05E  
           ?a_WriteEEPFN 00EB           _WriteBtyNZSTAT A094  
              _ReadEEPCO 9EF2                _ReadEEPFN 9F7A  
              _ReadEEPCW 9EC8        __end_of_ReadEEPCO 9EF6  
      __end_of_ReadEEPFN 9F92        __end_of_ReadEEPCW 9ECC  
          _MKonfiguracja 89F4          ?_WriteBtyNZSTAT 00F2  
              _MocMaksCO D854                _MocMaksCW D8C8  
              _RefKnfPar 8B00        __end_of_RefKnfPar 8B92  
               _ModParam D006                 _MocStart D7AA  
              ?_ModParam 00EE             _SetMinMaxPGD 9992  
           _SetMinMaxPCO 9916                 _SetNSTCO 9A34  
  __end_of_MKonfiguracja 8B00               _SaveKnfPar 8B92  
              _SetModPCO 7E4A       __end_of_SaveKnfPar 9916  
