

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Fri Feb 26 07:54:44 2016


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     5                           	psect	bss,global,class=RAM,space=1,delta=1
     6                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     7                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97                           
    98                           	psect	text
    99                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   100                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   101                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   102                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   103                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   104                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   105                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   106                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   107                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   108                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   109                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   110                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   111                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   112                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   113                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   114                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   115                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   116                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   117                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   118                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   119                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   120                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   121                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   122                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   123                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   124                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   125                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   126                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   127                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   128                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   129                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   130                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   131                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   132                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   133                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   134                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   135                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   136                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   137                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   138                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   139                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   140                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   141                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   142                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   143                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   144                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   145                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   146                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   147                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   148                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   149                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   150                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   151                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   152                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   153                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   154                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   155                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   156                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   157                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   158                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   159                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   160                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   161                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   162                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   163                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   164                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   165                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   166                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   167                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   168                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   169                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   170                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   171                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   172                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   173                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   174                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   175                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   176                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   177                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   178                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   179                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   180                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   181                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   182                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   183                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   184                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   185                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   186                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   187                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   188                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   189                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   190                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   191                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   192                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   193                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   194                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   195                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   196                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   197                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   198                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   199  00693E                     _InitDataPmr:
   200  000000                     
   201                           ;pomiar.c: 39: DtCO._err_CO=0;
   202  00693E  0101               	movlb	_DtCO shr (0+8)
   203  006940  9120               	bcf	_DtCO& (0+255),0,b
   204                           ;pomiar.c: 40: DtCO._su_CO=0;
   205  006942  9320               	bcf	_DtCO& (0+255),1,b
   206                           ;pomiar.c: 41: DtCO._ad_CO=0;
   207  006944  9520               	bcf	_DtCO& (0+255),2,b
   208                           ;pomiar.c: 42: DtCO._su_SRW_CO=0;
   209  006946  9720               	bcf	_DtCO& (0+255),3,b
   210                           ;pomiar.c: 43: DtCO._ad_SRW_CO=0;
   211  006948  9920               	bcf	_DtCO& (0+255),4,b
   212                           ;pomiar.c: 44: DtCO._cold_CO=0;
   213  00694A  9521               	bcf	(_DtCO+1)& (0+255),2,b
   214                           ;pomiar.c: 45: DtCO._hot_CO=0;
   215  00694C  9721               	bcf	(_DtCO+1)& (0+255),3,b
   216                           ;pomiar.c: 46: DtCO._on_DZ_CO=0;
   217  00694E  9B20               	bcf	_DtCO& (0+255),5,b
   218                           ;pomiar.c: 47: DtCO._su_DZ_CO=0;
   219  006950  9D20               	bcf	_DtCO& (0+255),6,b
   220                           ;pomiar.c: 48: DtCO._ad_DZ_CO=0;
   221  006952  9F20               	bcf	_DtCO& (0+255),7,b
   222                           ;pomiar.c: 49: DtCO._ptwp_CO=0;
   223  006954  9121               	bcf	(_DtCO+1)& (0+255),0,b
   224                           ;pomiar.c: 50: DtCO._pz_CO=0;
   225  006956  9321               	bcf	(_DtCO+1)& (0+255),1,b
   226                           ;pomiar.c: 51: DtCO.indCO=0;
   227  006958  6B2A               	clrf	(_DtCO+10)& (0+255),b
   228                           ;pomiar.c: 53: DtCW._err_CW=0;
   229  00695A  9111               	bcf	_DtCW& (0+255),0,b
   230                           ;pomiar.c: 54: DtCW._su_CW=0;
   231  00695C  9311               	bcf	_DtCW& (0+255),1,b
   232                           ;pomiar.c: 55: DtCW._ad_CW=0;
   233  00695E  9511               	bcf	_DtCW& (0+255),2,b
   234                           ;pomiar.c: 56: DtCW._on_DZ_CW=0;
   235  006960  9911               	bcf	_DtCW& (0+255),4,b
   236                           ;pomiar.c: 57: DtCW._su_DZ_CW=0;
   237  006962  9B11               	bcf	_DtCW& (0+255),5,b
   238                           ;pomiar.c: 58: DtCW._ad_DZ_CW=0;
   239  006964  9D11               	bcf	_DtCW& (0+255),6,b
   240                           ;pomiar.c: 59: DtCW.indCW=0;
   241  006966  6B1B               	clrf	(_DtCW+10)& (0+255),b
   242                           ;pomiar.c: 61: DtCS._hi=0;
   243  006968  9104               	bcf	_DtCS& (0+255),0,b
   244                           ;pomiar.c: 62: DtCS._lo=0;
   245  00696A  9304               	bcf	_DtCS& (0+255),1,b
   246                           ;pomiar.c: 63: DtCS._no=0;
   247  00696C  9504               	bcf	_DtCS& (0+255),2,b
   248                           ;pomiar.c: 64: DtCS._error=0;
   249  00696E  9704               	bcf	_DtCS& (0+255),3,b
   250                           ;pomiar.c: 65: DtCS._work=1;
   251  006970  8904               	bsf	_DtCS& (0+255),4,b
   252                           ;pomiar.c: 66: }
   253  006972  0012               	return	
   254  006974                     __end_of_InitDataPmr:
   255                           ;pomiar.c: 69: void IncPmrTimer(void)
   256                           ;pomiar.c: 70: {
   257  006974                     _IncPmrTimer:
   258  000000                     
   259                           ;pomiar.c: 71: if(PmrtimFlt1<0xff) PmrtimFlt1++;
   260  006974  CEB4  F000         	movff	_PmrtimFlt1,btemp
   261  006978  2800               	incf	btemp,w,c
   262  00697A  E002               	bz	l14
   263  00697C  010E               	movlb	_PmrtimFlt1 shr (0+8)
   264  00697E  2BB4               	incf	_PmrtimFlt1& (0+255),f,b
   265  006980                     l14:
   266                           ;pomiar.c: 72: if(PmrtimFlt2<0xff) PmrtimFlt2++;
   267  006980  CEB5  F000         	movff	_PmrtimFlt2,btemp
   268  006984  2800               	incf	btemp,w,c
   269  006986  E002               	bz	l15
   270  006988  010E               	movlb	_PmrtimFlt2 shr (0+8)
   271  00698A  2BB5               	incf	_PmrtimFlt2& (0+255),f,b
   272  00698C                     l15:
   273                           ;pomiar.c: 73: if(PmrtimFlt3<0xffff) PmrtimFlt3+
      +                          +;
   274  00698C  0101               	movlb	_PmrtimFlt3 shr (0+8)
   275  00698E  1D01               	comf	(_PmrtimFlt3+1)& (0+255),w,b
   276  006990  0EFF               	movlw	255
   277  006992  B4D8               	btfsc	status,2,c
   278  006994  1900               	xorwf	_PmrtimFlt3& (0+255),w,b
   279  006996  B4D8               	btfsc	status,2,c
   280  006998  0012               	return	
   281  00699A  4B00               	infsnz	_PmrtimFlt3& (0+255),f,b
   282  00699C  2B01               	incf	(_PmrtimFlt3+1)& (0+255),f,b
   283                           ;pomiar.c: 74: }
   284  00699E  0012               	return	
   285  0069A0                     __end_of_IncPmrTimer:
   286                           ;pomiar.c: 77: void StartTim1(void)
   287                           ;pomiar.c: 78: {
   288  0069A0                     _StartTim1:
   289  000000                     
   290                           ;pomiar.c: 79: PmrtimFlt1=0;
   291  0069A0  010E               	movlb	_PmrtimFlt1 shr (0+8)
   292  0069A2  6BB4               	clrf	_PmrtimFlt1& (0+255),b
   293                           ;pomiar.c: 80: }
   294  0069A4  0012               	return	
   295  0069A6                     __end_of_StartTim1:
   296                           ;pomiar.c: 81: bit PmrTim1(unsigned char tm)
   297                           ;pomiar.c: 82: {
   298  0069A6                     _PmrTim1:
   299  000000                     
   300                           ; _tm loaded to fsr2l
   301  0069A6  6ED9               	movwf	fsr2l,c
   302                           ;pomiar.c: 83: if(PmrtimFlt1<tm) return 0;
   303  0069A8  50D9               	movf	fsr2l,w,c
   304  0069AA  010E               	movlb	_PmrtimFlt1 shr (0+8)
   305  0069AC  61B4               	cpfslt	_PmrtimFlt1& (0+255),b
   306  0069AE  D002               	goto	l19
   307  0069B0  90D8               	bcf	status,0,c
   308  0069B2  0012               	return	
   309  0069B4                     l19:
   310                           ;pomiar.c: 84: return 1;
   311  0069B4  80D8               	bsf	status,0,c
   312  0069B6  0012               	return	
   313                           ;pomiar.c: 85: }
   314  0069B8                     __end_of_PmrTim1:
   315                           ;pomiar.c: 88: void StartTim2(void)
   316                           ;pomiar.c: 89: {
   317  0069B8                     _StartTim2:
   318  000000                     
   319                           ;pomiar.c: 90: PmrtimFlt2=0;
   320  0069B8  010E               	movlb	_PmrtimFlt2 shr (0+8)
   321  0069BA  6BB5               	clrf	_PmrtimFlt2& (0+255),b
   322                           ;pomiar.c: 91: }
   323  0069BC  0012               	return	
   324  0069BE                     __end_of_StartTim2:
   325                           ;pomiar.c: 92: bit PmrTim2(unsigned char tm)
   326                           ;pomiar.c: 93: {
   327  0069BE                     _PmrTim2:
   328  000000                     
   329                           ; _tm loaded to fsr2l
   330  0069BE  6ED9               	movwf	fsr2l,c
   331                           ;pomiar.c: 94: if(PmrtimFlt2<tm) return 0;
   332  0069C0  50D9               	movf	fsr2l,w,c
   333  0069C2  010E               	movlb	_PmrtimFlt2 shr (0+8)
   334  0069C4  61B5               	cpfslt	_PmrtimFlt2& (0+255),b
   335  0069C6  D002               	goto	l22
   336  0069C8  90D8               	bcf	status,0,c
   337  0069CA  0012               	return	
   338  0069CC                     l22:
   339                           ;pomiar.c: 95: return 1;
   340  0069CC  80D8               	bsf	status,0,c
   341  0069CE  0012               	return	
   342                           ;pomiar.c: 96: }
   343  0069D0                     __end_of_PmrTim2:
   344                           ;pomiar.c: 99: void StartTim3(void)
   345                           ;pomiar.c: 100: {
   346  0069D0                     _StartTim3:
   347  000000                     
   348                           ;pomiar.c: 101: PmrtimFlt3=0;
   349  0069D0  EE01  F000         	lfsr	0,_PmrtimFlt3
   350  0069D4  6AEE               	clrf	postinc0,c
   351  0069D6  6AEE               	clrf	postinc0,c
   352                           ;pomiar.c: 102: }
   353  0069D8  0012               	return	
   354  0069DA                     __end_of_StartTim3:
   355                           ;       param _tm assigned to ?_PmrTim3+0
   356  000000                     _PmrTim3$tm	set	?_PmrTim3
   357                           ;pomiar.c: 103: bit PmrTim3(unsigned int tm)
   358                           ;pomiar.c: 104: {
   359  0069DA  00EA               	dw	?_PmrTim3
   360  0069DC                     _PmrTim3:
   361  000000                     
   362                           ;pomiar.c: 105: if(PmrtimFlt3<tm) return 0;
   363  0069DC  C100  F000         	movff	_PmrtimFlt3,btemp
   364  0069E0  C101  F001         	movff	_PmrtimFlt3+1,btemp+1
   365  0069E4  0100               	movlb	__Lparam shr (0+8)
   366  0069E6  51EB               	movf	(?_PmrTim3+1)^(__Lparam& (0+65280)),w
   367  0069E8  5C01               	subwf	btemp+1,w,c
   368  0069EA  E102               	bnz	u65
   369  0069EC  51EA               	movf	?_PmrTim3^(__Lparam& (0+65280)),w
   370  0069EE  5C00               	subwf	btemp,w,c
   371  0069F0                     u65:
   372  0069F0  E202               	bc	l25
   373  0069F2  90D8               	bcf	status,0,c
   374  0069F4  0012               	return	
   375  0069F6                     l25:
   376                           ;pomiar.c: 106: return 1;
   377  0069F6  80D8               	bsf	status,0,c
   378  0069F8  0012               	return	
   379                           ;pomiar.c: 107: }
   380  0069FA                     __end_of_PmrTim3:
   381                           ;pomiar.c: 110: void GoldenEye(void)
   382                           ;pomiar.c: 111: {
   383  0069FA                     _GoldenEye:
   384  000000                     
   385                           ;pomiar.c: 112: signed char dt;
   386  0069FA  C122  FFE8         	movff	_DtCO+2,wreg
   387  0069FE  0101               	movlb	(_DtCO+4) shr (0+8)
   388  006A00  5D24               	subwf	(_DtCO+4)& (0+255),w,b
   389  006A02  6EE1               	movwf	fsr1l,c
   390                           ;pomiar.c: 118: if((DtCO.CO>=(DtCO.PPCO+11))||(D
      +                          tCO.CO<=(DtCO.PPCO-11))) DtCO.SCO=DtCO.CO;
   391  006A04  0E0B               	movlw	11
   392  006A06  C124  F002         	movff	_DtCO+4,btemp+2
   393  006A0A  6A03               	clrf	btemp+3,c
   394  006A0C  2602               	addwf	btemp+2,f,c
   395  006A0E  0E00               	movlw	0
   396  006A10  2203               	addwfc	btemp+3,f,c
   397  006A12  C122  F000         	movff	_DtCO+2,btemp
   398  006A16  6A01               	clrf	btemp+1,c
   399  006A18  5001               	movf	btemp+1,w,c
   400  006A1A  0A80               	xorlw	128
   401  006A1C  6E04               	movwf	btemp+4,c
   402  006A1E  5003               	movf	btemp+3,w,c
   403  006A20  0A80               	xorlw	128
   404  006A22  5C04               	subwf	btemp+4,w,c
   405  006A24  E102               	bnz	u75
   406  006A26  5002               	movf	btemp+2,w,c
   407  006A28  5C00               	subwf	btemp,w,c
   408  006A2A                     u75:
   409  006A2A  E215               	bc	u90
   410  006A2C  C122  F000         	movff	_DtCO+2,btemp
   411  006A30  6A01               	clrf	btemp+1,c
   412  006A32  C124  F002         	movff	_DtCO+4,btemp+2
   413  006A36  0EF5               	movlw	245
   414  006A38  2402               	addwf	btemp+2,w,c
   415  006A3A  6EF6               	movwf	tblptrl,c
   416  006A3C  6AF7               	clrf	tblptrh,c
   417  006A3E  0EFF               	movlw	255
   418  006A40  22F7               	addwfc	tblptrh,f,c
   419  006A42  50F7               	movf	tblptrh,w,c
   420  006A44  0A80               	xorlw	128
   421  006A46  6E02               	movwf	btemp+2,c
   422  006A48  5001               	movf	btemp+1,w,c
   423  006A4A  0A80               	xorlw	128
   424  006A4C  5C02               	subwf	btemp+2,w,c
   425  006A4E  E102               	bnz	u85
   426  006A50  5000               	movf	btemp,w,c
   427  006A52  5CF6               	subwf	tblptrl,w,c
   428  006A54                     u85:
   429  006A54  E303               	bnc	l27
   430  006A56                     u90:
   431  006A56  C122  F12B         	movff	_DtCO+2,_DtCO+11
   432  006A5A  D095               	goto	l28
   433  006A5C                     l27:
   434                           ;pomiar.c: 119: else
   435  006A5C  BEE1               	btfsc	fsr1l,7,c
   436  006A5E  D01A               	goto	l29
   437                           ;pomiar.c: 122: {
   438  006A60  50E1               	movf	fsr1l,w,c
   439  006A62  0A80               	xorlw	128
   440  006A64  0F7F               	addlw	-129
   441  006A66  50E1               	movf	fsr1l,w,c
   442  006A68  E201               	bc	L43
   443  006A6A  D00F               	goto	L15
   444                           ;pomiar.c: 124: else
   445  006A6C                     L43:
   446  006A6C  0A80               	xorlw	128
   447  006A6E  0F7F               	addlw	-129
   448  006A70  E306               	bnc	l32
   449  006A72  50E1               	movf	fsr1l,w,c
   450  006A74  0A80               	xorlw	128
   451  006A76  0F75               	addlw	-139
   452  006A78  E202               	bc	l32
   453  006A7A  0E01               	movlw	1
   454  006A7C  D006               	goto	L15
   455  006A7E                     l32:
   456                           ;pomiar.c: 126: else
   457  006A7E  50E1               	movf	fsr1l,w,c
   458  006A80  0A80               	xorlw	128
   459  006A82  0F75               	addlw	-139
   460  006A84  E303               	bnc	l31
   461  006A86  50E1               	movf	fsr1l,w,c
   462  006A88  080B               	sublw	11
   463  006A8A                     L15:
   464  006A8A  6ED9               	movwf	fsr2l,c
   465  006A8C                     l31:
   466                           ;pomiar.c: 128: DtCO.SCO=DtCO.CO+pop;
   467  006A8C  50D9               	movf	fsr2l,w,c
   468  006A8E  0101               	movlb	(_DtCO+2) shr (0+8)
   469  006A90  2522               	addwf	(_DtCO+2)& (0+255),w,b
   470  006A92  D077               	goto	L16
   471                           ;pomiar.c: 129: }
   472  006A94                     l29:
   473                           ;pomiar.c: 130: else
   474  006A94  C12F  FFD9         	movff	_DtCO+15,fsr2l
   475                           ;pomiar.c: 144: switch(DtKNF.tpkt)
   476  006A98  D011               	goto	l37
   477  006A9A                     l39:
   478                           ;pomiar.c: 147: case 2:
   479  006A9A  EE01  F0BD         	lfsr	0,_DtKNF+11
   480  006A9E  50EF               	movf	indf0,w,c
   481  006AA0  E01B               	bz	L35
   482                           ;pomiar.c: 150: {
   483                           ;pomiar.c: 152: {
   484                           ;pomiar.c: 154: }
   485  006AA2                     l40:
   486                           ;pomiar.c: 156: else
   487  006AA2  50D9               	movf	fsr2l,w,c
   488  006AA4  C124  F000         	movff	_DtCO+4,btemp
   489  006AA8  6A01               	clrf	btemp+1,c
   490  006AAA  2600               	addwf	btemp,f,c
   491  006AAC  0E00               	movlw	0
   492  006AAE  2201               	addwfc	btemp+1,f,c
   493  006AB0  5001               	movf	btemp+1,w,c
   494  006AB2  0A80               	xorlw	128
   495  006AB4  0F80               	addlw	-128
   496  006AB6  0E3D               	movlw	61
   497  006AB8  D01A               	goto	L36
   498                           ;pomiar.c: 159: {
   499                           ;pomiar.c: 161: }
   500  006ABA                     l44:
   501                           ;pomiar.c: 164: }
   502                           ;pomiar.c: 166: {
   503                           ;pomiar.c: 168: {
   504                           ;pomiar.c: 170: {
   505                           ;pomiar.c: 172: }
   506                           ;pomiar.c: 174: else
   507                           ;pomiar.c: 177: {
   508                           ;pomiar.c: 179: }
   509  006ABA                     l49:
   510  006ABA  D7EF               	goto	l39
   511                           ;pomiar.c: 182: }
   512                           ;pomiar.c: 184: {
   513                           ;pomiar.c: 186: {
   514                           ;pomiar.c: 188: {
   515                           ;pomiar.c: 190: }
   516                           ;pomiar.c: 192: else
   517                           ;pomiar.c: 208: }
   518                           ;pomiar.c: 210: else
   519                           ;pomiar.c: 213: {
   520                           ;pomiar.c: 215: }
   521  006ABC                     l37:
   522  006ABC  C1B9  FFE8         	movff	_DtKNF+7,wreg
   523  006AC0  0A00               	xorlw	0
   524  006AC2  E0FB               	bz	l49
   525  006AC4  0A01               	xorlw	1
   526  006AC6  E0E9               	bz	l39
   527  006AC8  0A03               	xorlw	3
   528  006ACA  E0E7               	bz	l39
   529  006ACC  0A01               	xorlw	1
   530  006ACE  E0F5               	bz	l44
   531                           ;pomiar.c: 195: {
   532                           ;pomiar.c: 197: }
   533                           ;pomiar.c: 200: }
   534                           ;pomiar.c: 202: {
   535  006AD0  EE01  F0BD         	lfsr	0,_DtKNF+11
   536  006AD4  50EF               	movf	indf0,w,c
   537  006AD6  E1E5               	bnz	l40
   538  006AD8                     L35:
   539                           ;pomiar.c: 204: {
   540  006AD8  50D9               	movf	fsr2l,w,c
   541  006ADA  C124  F000         	movff	_DtCO+4,btemp
   542  006ADE  6A01               	clrf	btemp+1,c
   543  006AE0  2600               	addwf	btemp,f,c
   544  006AE2  0E00               	movlw	0
   545  006AE4  2201               	addwfc	btemp+1,f,c
   546  006AE6  5001               	movf	btemp+1,w,c
   547  006AE8  0A80               	xorlw	128
   548  006AEA  0F80               	addlw	-128
   549  006AEC  0E5B               	movlw	91
   550  006AEE                     L36:
   551  006AEE  B4D8               	btfsc	status,2,c
   552  006AF0  5C00               	subwf	btemp,w,c
   553  006AF2  E302               	bnc	l36
   554                           ;pomiar.c: 206: {
   555  006AF4  0E05               	movlw	5
   556  006AF6  6ED9               	movwf	fsr2l,c
   557  006AF8                     l36:
   558                           ;pomiar.c: 221: if(hist>1)
   559  006AF8  0E01               	movlw	1
   560  006AFA  64D9               	cpfsgt	fsr2l,c
   561  006AFC  D03E               	goto	l59
   562                           ;pomiar.c: 222: {
   563  006AFE  CFE1 F000          	movff	fsr1l,btemp
   564  006B02  6A01               	clrf	btemp+1,c
   565  006B04  BE00               	btfsc	btemp,7,c
   566  006B06  0601               	decf	btemp+1,f,c
   567  006B08  1E00               	comf	btemp,f,c
   568  006B0A  1E01               	comf	btemp+1,f,c
   569  006B0C  4A00               	infsnz	btemp,f,c
   570  006B0E  2A01               	incf	btemp+1,f,c
   571  006B10  5001               	movf	btemp+1,w,c
   572  006B12  0A80               	xorlw	128
   573  006B14  0F80               	addlw	-128
   574  006B16  0E01               	movlw	1
   575  006B18  B4D8               	btfsc	status,2,c
   576  006B1A  5C00               	subwf	btemp,w,c
   577  006B1C  E202               	bc	l60
   578  006B1E  28E1               	incf	fsr1l,w,c
   579  006B20  D02A               	goto	L17
   580  006B22                     l60:
   581                           ;pomiar.c: 224: else
   582  006B22  CFE1 F000          	movff	fsr1l,btemp
   583  006B26  6A01               	clrf	btemp+1,c
   584  006B28  BE00               	btfsc	btemp,7,c
   585  006B2A  0601               	decf	btemp+1,f,c
   586  006B2C  1E00               	comf	btemp,f,c
   587  006B2E  1E01               	comf	btemp+1,f,c
   588  006B30  4A00               	infsnz	btemp,f,c
   589  006B32  2A01               	incf	btemp+1,f,c
   590  006B34  5001               	movf	btemp+1,w,c
   591  006B36  0A80               	xorlw	128
   592  006B38  0F80               	addlw	-128
   593  006B3A  0E01               	movlw	1
   594  006B3C  B4D8               	btfsc	status,2,c
   595  006B3E  5C00               	subwf	btemp,w,c
   596  006B40  E31C               	bnc	l59
   597  006B42  CFE1 F002          	movff	fsr1l,btemp+2
   598  006B46  6A03               	clrf	btemp+3,c
   599  006B48  BE02               	btfsc	btemp+2,7,c
   600  006B4A  0603               	decf	btemp+3,f,c
   601  006B4C  1E02               	comf	btemp+2,f,c
   602  006B4E  1E03               	comf	btemp+3,f,c
   603  006B50  4A02               	infsnz	btemp+2,f,c
   604  006B52  2A03               	incf	btemp+3,f,c
   605  006B54  0EFF               	movlw	255
   606  006B56  24D9               	addwf	fsr2l,w,c
   607  006B58  6E00               	movwf	btemp,c
   608  006B5A  6A01               	clrf	btemp+1,c
   609  006B5C  0EFF               	movlw	255
   610  006B5E  2201               	addwfc	btemp+1,f,c
   611  006B60  5001               	movf	btemp+1,w,c
   612  006B62  0A80               	xorlw	128
   613  006B64  6E04               	movwf	btemp+4,c
   614  006B66  5003               	movf	btemp+3,w,c
   615  006B68  0A80               	xorlw	128
   616  006B6A  5C04               	subwf	btemp+4,w,c
   617  006B6C  E102               	bnz	u315
   618  006B6E  5002               	movf	btemp+2,w,c
   619  006B70  5C00               	subwf	btemp,w,c
   620  006B72                     u315:
   621  006B72  E303               	bnc	l59
   622  006B74  0E01               	movlw	1
   623  006B76                     L17:
   624  006B76  6ED9               	movwf	fsr2l,c
   625  006B78  D001               	goto	l64
   626                           ;pomiar.c: 226: else pop=0;
   627                           ;pomiar.c: 227: }
   628  006B7A                     l59:
   629                           ;pomiar.c: 228: else pop=0;
   630  006B7A  6AD9               	clrf	fsr2l,c
   631  006B7C                     l64:
   632                           ;pomiar.c: 229: DtCO.SCO=DtCO.CO-pop;
   633  006B7C  50D9               	movf	fsr2l,w,c
   634  006B7E  0101               	movlb	(_DtCO+2) shr (0+8)
   635  006B80  5D22               	subwf	(_DtCO+2)& (0+255),w,b
   636  006B82                     L16:
   637  006B82  CFE8 F12B          	movff	wreg,_DtCO+11
   638  006B86                     l28:
   639                           ;pomiar.c: 230: }
   640  006B86  C12B  F0A1         	movff	_DtCO+11,_RSDT1+4
   641                           ;pomiar.c: 235: if(DtKNF.tpkt!=0)
   642  006B8A  EE01  F0B9         	lfsr	0,_DtKNF+7
   643  006B8E  50EF               	movf	indf0,w,c
   644  006B90  E101 D130          	bz	l65
   645                           ;pomiar.c: 236: {
   646  006B94  C1B9  F000         	movff	_DtKNF+7,btemp
   647  006B98  0400               	decf	btemp,w,c
   648  006B9A  E001 D097          	bnz	l66
   649                           ;pomiar.c: 238: {
   650  006B9E  C113  FFE8         	movff	_DtCW+2,wreg
   651  006BA2  0101               	movlb	(_DtCW+4) shr (0+8)
   652  006BA4  5D15               	subwf	(_DtCW+4)& (0+255),w,b
   653  006BA6  6EE1               	movwf	fsr1l,c
   654                           ;pomiar.c: 240: if((DtCW.CW>=(DtCW.PPCW+11))||(D
      +                          tCW.CW<=(DtCW.PPCW-11))) DtCW.SCW=DtCW.CW;
   655  006BA8  0E0B               	movlw	11
   656  006BAA  C115  F002         	movff	_DtCW+4,btemp+2
   657  006BAE  6A03               	clrf	btemp+3,c
   658  006BB0  2602               	addwf	btemp+2,f,c
   659  006BB2  0E00               	movlw	0
   660  006BB4  2203               	addwfc	btemp+3,f,c
   661  006BB6  C113  F000         	movff	_DtCW+2,btemp
   662  006BBA  6A01               	clrf	btemp+1,c
   663  006BBC  5001               	movf	btemp+1,w,c
   664  006BBE  0A80               	xorlw	128
   665  006BC0  6E04               	movwf	btemp+4,c
   666  006BC2  5003               	movf	btemp+3,w,c
   667  006BC4  0A80               	xorlw	128
   668  006BC6  5C04               	subwf	btemp+4,w,c
   669  006BC8  E102               	bnz	u355
   670  006BCA  5002               	movf	btemp+2,w,c
   671  006BCC  5C00               	subwf	btemp,w,c
   672  006BCE                     u355:
   673  006BCE  E301 D111          	bc	l65
   674  006BD2  C113  F000         	movff	_DtCW+2,btemp
   675  006BD6  6A01               	clrf	btemp+1,c
   676  006BD8  C115  F002         	movff	_DtCW+4,btemp+2
   677  006BDC  0EF5               	movlw	245
   678  006BDE  2402               	addwf	btemp+2,w,c
   679  006BE0  6EF6               	movwf	tblptrl,c
   680  006BE2  6AF7               	clrf	tblptrh,c
   681  006BE4  0EFF               	movlw	255
   682  006BE6  22F7               	addwfc	tblptrh,f,c
   683  006BE8  50F7               	movf	tblptrh,w,c
   684  006BEA  0A80               	xorlw	128
   685  006BEC  6E02               	movwf	btemp+2,c
   686  006BEE  5001               	movf	btemp+1,w,c
   687  006BF0  0A80               	xorlw	128
   688  006BF2  5C02               	subwf	btemp+2,w,c
   689  006BF4  E102               	bnz	u365
   690  006BF6  5000               	movf	btemp,w,c
   691  006BF8  5CF6               	subwf	tblptrl,w,c
   692  006BFA                     u365:
   693  006BFA  E301 D0FB          	bc	l65
   694                           ;pomiar.c: 241: else
   695  006BFE  BEE1               	btfsc	fsr1l,7,c
   696  006C00  D01C               	goto	l69
   697                           ;pomiar.c: 244: {
   698  006C02  50E1               	movf	fsr1l,w,c
   699  006C04  0A80               	xorlw	128
   700  006C06  0F7D               	addlw	-131
   701  006C08  E201 D094          	bnc	L39
   702                           ;pomiar.c: 246: else
   703  006C0C  50E1               	movf	fsr1l,w,c
   704  006C0E  0A80               	xorlw	128
   705  006C10  0F7D               	addlw	-131
   706  006C12  E306               	bnc	l72
   707  006C14  50E1               	movf	fsr1l,w,c
   708  006C16  0A80               	xorlw	128
   709  006C18  0F77               	addlw	-137
   710  006C1A  E202               	bc	l72
   711  006C1C  0E03               	movlw	3
   712  006C1E  D006               	goto	L18
   713  006C20                     l72:
   714                           ;pomiar.c: 248: else
   715  006C20  50E1               	movf	fsr1l,w,c
   716  006C22  0A80               	xorlw	128
   717  006C24  0F77               	addlw	-137
   718  006C26  E303               	bnc	l86
   719  006C28  50E1               	movf	fsr1l,w,c
   720  006C2A  080B               	sublw	11
   721  006C2C                     L18:
   722  006C2C  6ED9               	movwf	fsr2l,c
   723  006C2E                     l86:
   724                           ;pomiar.c: 276: DtCW.SCW=DtCW.CW+pop;
   725  006C2E  50D9               	movf	fsr2l,w,c
   726  006C30  0101               	movlb	(_DtCW+2) shr (0+8)
   727  006C32  2513               	addwf	(_DtCW+2)& (0+255),w,b
   728                           ;pomiar.c: 250: DtCW.SCW=DtCW.CW+pop;
   729  006C34                     L19:
   730  006C34  CFE8 F11C          	movff	wreg,_DtCW+11
   731                           ;pomiar.c: 251: }
   732  006C38  D0DF               	goto	l96
   733  006C3A                     l69:
   734                           ;pomiar.c: 252: else
   735  006C3A  CFE1 F000          	movff	fsr1l,btemp
   736  006C3E  6A01               	clrf	btemp+1,c
   737  006C40  BE00               	btfsc	btemp,7,c
   738  006C42  0601               	decf	btemp+1,f,c
   739  006C44  1E00               	comf	btemp,f,c
   740  006C46  1E01               	comf	btemp+1,f,c
   741  006C48  4A00               	infsnz	btemp,f,c
   742  006C4A  2A01               	incf	btemp+1,f,c
   743  006C4C  5001               	movf	btemp+1,w,c
   744  006C4E  0A80               	xorlw	128
   745  006C50  0F80               	addlw	-128
   746  006C52  0E03               	movlw	3
   747  006C54  B4D8               	btfsc	status,2,c
   748  006C56  5C00               	subwf	btemp,w,c
   749  006C58  E203               	bc	l76
   750  006C5A  50E1               	movf	fsr1l,w,c
   751  006C5C  0800               	sublw	0
   752  006C5E  D0C5               	goto	L6
   753  006C60                     l76:
   754                           ;pomiar.c: 255: else
   755  006C60  CFE1 F000          	movff	fsr1l,btemp
   756  006C64  6A01               	clrf	btemp+1,c
   757  006C66  BE00               	btfsc	btemp,7,c
   758  006C68  0601               	decf	btemp+1,f,c
   759  006C6A  1E00               	comf	btemp,f,c
   760  006C6C  1E01               	comf	btemp+1,f,c
   761  006C6E  4A00               	infsnz	btemp,f,c
   762  006C70  2A01               	incf	btemp+1,f,c
   763  006C72  5001               	movf	btemp+1,w,c
   764  006C74  0A80               	xorlw	128
   765  006C76  0F80               	addlw	-128
   766  006C78  0E03               	movlw	3
   767  006C7A  B4D8               	btfsc	status,2,c
   768  006C7C  5C00               	subwf	btemp,w,c
   769  006C7E  E312               	bnc	l78
   770  006C80  CFE1 F000          	movff	fsr1l,btemp
   771  006C84  6A01               	clrf	btemp+1,c
   772  006C86  BE00               	btfsc	btemp,7,c
   773  006C88  0601               	decf	btemp+1,f,c
   774  006C8A  1E00               	comf	btemp,f,c
   775  006C8C  1E01               	comf	btemp+1,f,c
   776  006C8E  4A00               	infsnz	btemp,f,c
   777  006C90  2A01               	incf	btemp+1,f,c
   778  006C92  5001               	movf	btemp+1,w,c
   779  006C94  0A80               	xorlw	128
   780  006C96  0F80               	addlw	-128
   781  006C98  0E09               	movlw	9
   782  006C9A  B4D8               	btfsc	status,2,c
   783  006C9C  5C00               	subwf	btemp,w,c
   784  006C9E  E202               	bc	l78
   785  006CA0  0E03               	movlw	3
   786  006CA2  D0A3               	goto	L6
   787  006CA4                     l78:
   788                           ;pomiar.c: 257: else
   789  006CA4  CFE1 F000          	movff	fsr1l,btemp
   790  006CA8  6A01               	clrf	btemp+1,c
   791  006CAA  BE00               	btfsc	btemp,7,c
   792  006CAC  0601               	decf	btemp+1,f,c
   793  006CAE  1E00               	comf	btemp,f,c
   794  006CB0  1E01               	comf	btemp+1,f,c
   795  006CB2  4A00               	infsnz	btemp,f,c
   796  006CB4  2A01               	incf	btemp+1,f,c
   797  006CB6  5001               	movf	btemp+1,w,c
   798  006CB8  0A80               	xorlw	128
   799  006CBA  0F80               	addlw	-128
   800  006CBC  0E09               	movlw	9
   801  006CBE  B4D8               	btfsc	status,2,c
   802  006CC0  5C00               	subwf	btemp,w,c
   803  006CC2  E201 D093          	bnc	l92
   804  006CC6  50E1               	movf	fsr1l,w,c
   805  006CC8  0F0B               	addlw	11
   806  006CCA  D08F               	goto	L6
   807                           ;pomiar.c: 259: DtCW.SCW=DtCW.CW-pop;
   808                           ;pomiar.c: 260: }
   809  006CCC                     l66:
   810                           ;pomiar.c: 263: else
   811  006CCC  C113  FFE8         	movff	_DtCW+2,wreg
   812  006CD0  0101               	movlb	(_DtCW+4) shr (0+8)
   813  006CD2  5D15               	subwf	(_DtCW+4)& (0+255),w,b
   814  006CD4  6EE1               	movwf	fsr1l,c
   815                           ;pomiar.c: 266: if((DtCW.CW>=(DtCW.PPCW+8))||(Dt
      +                          CW.CW<=(DtCW.PPCW-8))) DtCW.SCW=DtCW.CW;
   816  006CD6  0E08               	movlw	8
   817  006CD8  C115  F002         	movff	_DtCW+4,btemp+2
   818  006CDC  6A03               	clrf	btemp+3,c
   819  006CDE  2602               	addwf	btemp+2,f,c
   820  006CE0  0E00               	movlw	0
   821  006CE2  2203               	addwfc	btemp+3,f,c
   822  006CE4  C113  F000         	movff	_DtCW+2,btemp
   823  006CE8  6A01               	clrf	btemp+1,c
   824  006CEA  5001               	movf	btemp+1,w,c
   825  006CEC  0A80               	xorlw	128
   826  006CEE  6E04               	movwf	btemp+4,c
   827  006CF0  5003               	movf	btemp+3,w,c
   828  006CF2  0A80               	xorlw	128
   829  006CF4  5C04               	subwf	btemp+4,w,c
   830  006CF6  E102               	bnz	u495
   831  006CF8  5002               	movf	btemp+2,w,c
   832  006CFA  5C00               	subwf	btemp,w,c
   833  006CFC                     u495:
   834  006CFC  E27B               	bc	l65
   835  006CFE  C113  F000         	movff	_DtCW+2,btemp
   836  006D02  6A01               	clrf	btemp+1,c
   837  006D04  C115  F002         	movff	_DtCW+4,btemp+2
   838  006D08  0EF8               	movlw	248
   839  006D0A  2402               	addwf	btemp+2,w,c
   840  006D0C  6EF6               	movwf	tblptrl,c
   841  006D0E  6AF7               	clrf	tblptrh,c
   842  006D10  0EFF               	movlw	255
   843  006D12  22F7               	addwfc	tblptrh,f,c
   844  006D14  50F7               	movf	tblptrh,w,c
   845  006D16  0A80               	xorlw	128
   846  006D18  6E02               	movwf	btemp+2,c
   847  006D1A  5001               	movf	btemp+1,w,c
   848  006D1C  0A80               	xorlw	128
   849  006D1E  5C02               	subwf	btemp+2,w,c
   850  006D20  E102               	bnz	u505
   851  006D22  5000               	movf	btemp,w,c
   852  006D24  5CF6               	subwf	tblptrl,w,c
   853  006D26                     u505:
   854  006D26  E266               	bc	l65
   855                           ;pomiar.c: 267: else
   856  006D28  BEE1               	btfsc	fsr1l,7,c
   857  006D2A  D018               	goto	l84
   858                           ;pomiar.c: 270: {
   859  006D2C  50E1               	movf	fsr1l,w,c
   860  006D2E  0A80               	xorlw	128
   861  006D30  0F7E               	addlw	-130
   862  006D32  E202               	bc	l85
   863  006D34                     L39:
   864  006D34  50E1               	movf	fsr1l,w,c
   865  006D36  D77A               	goto	L18
   866  006D38                     l85:
   867                           ;pomiar.c: 272: else
   868  006D38  50E1               	movf	fsr1l,w,c
   869  006D3A  0A80               	xorlw	128
   870  006D3C  0F7E               	addlw	-130
   871  006D3E  E306               	bnc	l87
   872  006D40  50E1               	movf	fsr1l,w,c
   873  006D42  0A80               	xorlw	128
   874  006D44  0F79               	addlw	-135
   875  006D46  E202               	bc	l87
   876  006D48  0E02               	movlw	2
   877  006D4A  D770               	goto	L18
   878  006D4C                     l87:
   879                           ;pomiar.c: 274: else
   880  006D4C  50E1               	movf	fsr1l,w,c
   881  006D4E  0A80               	xorlw	128
   882  006D50  0F79               	addlw	-135
   883  006D52  E201 D76C          	bnc	l86
   884  006D56  50E1               	movf	fsr1l,w,c
   885  006D58  0808               	sublw	8
   886  006D5A  D768               	goto	L18
   887                           ;pomiar.c: 277: }
   888  006D5C                     l84:
   889                           ;pomiar.c: 278: else
   890  006D5C  CFE1 F000          	movff	fsr1l,btemp
   891  006D60  6A01               	clrf	btemp+1,c
   892  006D62  BE00               	btfsc	btemp,7,c
   893  006D64  0601               	decf	btemp+1,f,c
   894  006D66  1E00               	comf	btemp,f,c
   895  006D68  1E01               	comf	btemp+1,f,c
   896  006D6A  4A00               	infsnz	btemp,f,c
   897  006D6C  2A01               	incf	btemp+1,f,c
   898  006D6E  5001               	movf	btemp+1,w,c
   899  006D70  0A80               	xorlw	128
   900  006D72  0F80               	addlw	-128
   901  006D74  0E02               	movlw	2
   902  006D76  B4D8               	btfsc	status,2,c
   903  006D78  5C00               	subwf	btemp,w,c
   904  006D7A  E203               	bc	l91
   905  006D7C  50E1               	movf	fsr1l,w,c
   906  006D7E  0F02               	addlw	2
   907  006D80  D034               	goto	L6
   908  006D82                     l91:
   909                           ;pomiar.c: 281: else
   910  006D82  CFE1 F000          	movff	fsr1l,btemp
   911  006D86  6A01               	clrf	btemp+1,c
   912  006D88  BE00               	btfsc	btemp,7,c
   913  006D8A  0601               	decf	btemp+1,f,c
   914  006D8C  1E00               	comf	btemp,f,c
   915  006D8E  1E01               	comf	btemp+1,f,c
   916  006D90  4A00               	infsnz	btemp,f,c
   917  006D92  2A01               	incf	btemp+1,f,c
   918  006D94  5001               	movf	btemp+1,w,c
   919  006D96  0A80               	xorlw	128
   920  006D98  0F80               	addlw	-128
   921  006D9A  0E02               	movlw	2
   922  006D9C  B4D8               	btfsc	status,2,c
   923  006D9E  5C00               	subwf	btemp,w,c
   924  006DA0  E312               	bnc	l93
   925  006DA2  CFE1 F000          	movff	fsr1l,btemp
   926  006DA6  6A01               	clrf	btemp+1,c
   927  006DA8  BE00               	btfsc	btemp,7,c
   928  006DAA  0601               	decf	btemp+1,f,c
   929  006DAC  1E00               	comf	btemp,f,c
   930  006DAE  1E01               	comf	btemp+1,f,c
   931  006DB0  4A00               	infsnz	btemp,f,c
   932  006DB2  2A01               	incf	btemp+1,f,c
   933  006DB4  5001               	movf	btemp+1,w,c
   934  006DB6  0A80               	xorlw	128
   935  006DB8  0F80               	addlw	-128
   936  006DBA  0E07               	movlw	7
   937  006DBC  B4D8               	btfsc	status,2,c
   938  006DBE  5C00               	subwf	btemp,w,c
   939  006DC0  E202               	bc	l93
   940  006DC2  0E02               	movlw	2
   941  006DC4  D012               	goto	L6
   942  006DC6                     l93:
   943                           ;pomiar.c: 283: else
   944  006DC6  CFE1 F000          	movff	fsr1l,btemp
   945  006DCA  6A01               	clrf	btemp+1,c
   946  006DCC  BE00               	btfsc	btemp,7,c
   947  006DCE  0601               	decf	btemp+1,f,c
   948  006DD0  1E00               	comf	btemp,f,c
   949  006DD2  1E01               	comf	btemp+1,f,c
   950  006DD4  4A00               	infsnz	btemp,f,c
   951  006DD6  2A01               	incf	btemp+1,f,c
   952  006DD8  5001               	movf	btemp+1,w,c
   953  006DDA  0A80               	xorlw	128
   954  006DDC  0F80               	addlw	-128
   955  006DDE  0E07               	movlw	7
   956  006DE0  B4D8               	btfsc	status,2,c
   957  006DE2  5C00               	subwf	btemp,w,c
   958  006DE4  E303               	bnc	l92
   959  006DE6  50E1               	movf	fsr1l,w,c
   960  006DE8  0F08               	addlw	8
   961  006DEA                     L6:
   962  006DEA  6ED9               	movwf	fsr2l,c
   963  006DEC                     l92:
   964                           ;pomiar.c: 285: DtCW.SCW=DtCW.CW-pop;
   965  006DEC  50D9               	movf	fsr2l,w,c
   966  006DEE  0101               	movlb	(_DtCW+2) shr (0+8)
   967  006DF0  5D13               	subwf	(_DtCW+2)& (0+255),w,b
   968  006DF2  D720               	goto	L19
   969                           ;pomiar.c: 286: }
   970  006DF4                     l65:
   971                           ;pomiar.c: 290: else DtCW.SCW=DtCW.CW;
   972  006DF4  C113  F11C         	movff	_DtCW+2,_DtCW+11
   973  006DF8                     l96:
   974                           ;pomiar.c: 291: RSDT1.outCW=DtCW.SCW;
   975  006DF8  C11C  F0A2         	movff	_DtCW+11,_RSDT1+5
   976                           ;pomiar.c: 292: }
   977  006DFC  0012               	return	
   978  006DFE                     __end_of_GoldenEye:
   979                           ;pomiar.c: 295: void PredkoscZmianCW(void)
   980                           ;pomiar.c: 296: {
   981  006DFE                     _PredkoscZmianCW:
   982  000000                     
   983                           ;pomiar.c: 297: static unsigned char ffcw,indff;
   984  006DFE  0100               	movlb	(_M+27) shr (0+8)
   985  006E00  B585               	btfsc	(_M+27)& (0+255),2,b
   986  006E02  D005               	goto	l98
   987                           ;pomiar.c: 301: {
   988  006E04  010E               	movlb	F1532 shr (0+8)
   989  006E06  6BAB               	clrf	F1532& (0+255),b
   990                           ;pomiar.c: 303: indff=0;
   991  006E08  010E               	movlb	F1533 shr (0+8)
   992  006E0A  6BAC               	clrf	F1533& (0+255),b
   993                           ;pomiar.c: 304: }
   994  006E0C  D036               	goto	l99
   995  006E0E                     l98:
   996                           ;pomiar.c: 305: else
   997  006E0E  010E               	movlb	F1533 shr (0+8)
   998  006E10  53AC               	movf	F1533& (0+255),f,b
   999  006E12  E10C               	bnz	l100
  1000                           ;pomiar.c: 308: {
  1001  006E14  6AD9               	clrf	fsr2l,c
  1002  006E16                     l101:
  1003  006E16  50D9               	movf	fsr2l,w,c
  1004  006E18  EE0E  F0B6         	lfsr	0,_wff
  1005  006E1C  26E9               	addwf	fsr0l,f,c
  1006  006E1E  0E00               	movlw	0
  1007  006E20  22EA               	addwfc	fsr0h,f,c
  1008  006E22  6AEF               	clrf	indf0,c
  1009  006E24  2AD9               	incf	fsr2l,f,c
  1010  006E26  0E09               	movlw	9
  1011  006E28  64D9               	cpfsgt	fsr2l,c
  1012  006E2A  D7F5               	goto	l101
  1013  006E2C                     l100:
  1014                           ;pomiar.c: 310: }
  1015  006E2C  010E               	movlb	F1533 shr (0+8)
  1016  006E2E  2BAC               	incf	F1533& (0+255),f,b
  1017                           ;pomiar.c: 312: if(indff>=9)
  1018  006E30  0E08               	movlw	8
  1019  006E32  65AC               	cpfsgt	F1533& (0+255),b
  1020  006E34  D016               	goto	l104
  1021                           ;pomiar.c: 313: {
  1022  006E36  0E09               	movlw	9
  1023  006E38  CFE8 FEAC          	movff	wreg,F1533
  1024                           ;pomiar.c: 315: for(i=0;i<9;i++) wff[i]=wff[i+1]
      +                          ;
  1025  006E3C  6AD9               	clrf	fsr2l,c
  1026  006E3E                     l105:
  1027  006E3E  50D9               	movf	fsr2l,w,c
  1028  006E40  EE1E  F0B7         	lfsr	1,_wff+1
  1029  006E44  26E1               	addwf	fsr1l,f,c
  1030  006E46  0E00               	movlw	0
  1031  006E48  22E2               	addwfc	fsr1h,f,c
  1032  006E4A  50D9               	movf	fsr2l,w,c
  1033  006E4C  EE0E  F0B6         	lfsr	0,_wff
  1034  006E50  26E9               	addwf	fsr0l,f,c
  1035  006E52  0E00               	movlw	0
  1036  006E54  22EA               	addwfc	fsr0h,f,c
  1037  006E56  CFE7 FFEF          	movff	indf1,indf0
  1038  006E5A  2AD9               	incf	fsr2l,f,c
  1039  006E5C  0E08               	movlw	8
  1040  006E5E  64D9               	cpfsgt	fsr2l,c
  1041  006E60  D7EE               	goto	l105
  1042  006E62                     l104:
  1043                           ;pomiar.c: 316: }
  1044  006E62  CEAC  FFE8         	movff	F1533,wreg
  1045  006E66  EE0E  F0B6         	lfsr	0,_wff
  1046  006E6A  26E9               	addwf	fsr0l,f,c
  1047  006E6C  0E00               	movlw	0
  1048  006E6E  22EA               	addwfc	fsr0h,f,c
  1049  006E70  CEAB  FFE8         	movff	F1532,wreg
  1050  006E74  0101               	movlb	(_DtCW+2) shr (0+8)
  1051  006E76  5D13               	subwf	(_DtCW+2)& (0+255),w,b
  1052  006E78  6EEF               	movwf	indf0,c
  1053  006E7A                     l99:
  1054                           ;pomiar.c: 318: }
  1055  006E7A  C113  FEAB         	movff	_DtCW+2,F1532
  1056                           ;pomiar.c: 320: w=0;
  1057  006E7E  6AE1               	clrf	fsr1l,c
  1058                           ;pomiar.c: 321: for(i=0;i<10;i++) w+=wff[i];
  1059  006E80  6AD9               	clrf	fsr2l,c
  1060  006E82                     l108:
  1061  006E82  50D9               	movf	fsr2l,w,c
  1062  006E84  EE0E  F0B6         	lfsr	0,_wff
  1063  006E88  26E9               	addwf	fsr0l,f,c
  1064  006E8A  0E00               	movlw	0
  1065  006E8C  22EA               	addwfc	fsr0h,f,c
  1066  006E8E  50EF               	movf	indf0,w,c
  1067  006E90  26E1               	addwf	fsr1l,f,c
  1068  006E92  2AD9               	incf	fsr2l,f,c
  1069  006E94  0E09               	movlw	9
  1070  006E96  64D9               	cpfsgt	fsr2l,c
  1071  006E98  D7F4               	goto	l108
  1072                           ;pomiar.c: 322: DtCW.ddDCW=w;
  1073  006E9A  CFE1 F11A          	movff	fsr1l,_DtCW+9
  1074                           ;pomiar.c: 323: }
  1075  006E9E  0C09               	retlw	9
  1076  006EA0                     __end_of_PredkoscZmianCW:
  1077                           ;pomiar.c: 326: void FltParMod(void)
  1078                           ;pomiar.c: 327: {
  1079  006EA0                     _FltParMod:
  1080  000000                     
  1081                           ;pomiar.c: 328: static unsigned char indtm,fco,f
      +                          cw;
  1082  006EA0  C122  FFE8         	movff	_DtCO+2,wreg
  1083  006EA4  010E               	movlb	F1539 shr (0+8)
  1084  006EA6  61AE               	cpfslt	F1539& (0+255),b
  1085  006EA8  D005               	goto	l112
  1086  006EAA  CEAE  FFE8         	movff	F1539,wreg
  1087  006EAE  0101               	movlb	(_DtCO+2) shr (0+8)
  1088  006EB0  5D22               	subwf	(_DtCO+2)& (0+255),w,b
  1089  006EB2  D004               	goto	L7
  1090  006EB4                     l112:
  1091                           ;pomiar.c: 335: else wr=fco-DtCO.CO;
  1092  006EB4  C122  FFE8         	movff	_DtCO+2,wreg
  1093  006EB8  010E               	movlb	F1539 shr (0+8)
  1094  006EBA  5DAE               	subwf	F1539& (0+255),w,b
  1095  006EBC                     L7:
  1096  006EBC  6ED9               	movwf	fsr2l,c
  1097                           ;pomiar.c: 336: if(wr) DtCO.indCO++;
  1098  006EBE  50D9               	movf	fsr2l,w,c
  1099  006EC0  E002               	bz	l114
  1100  006EC2  0101               	movlb	(_DtCO+10) shr (0+8)
  1101  006EC4  2B2A               	incf	(_DtCO+10)& (0+255),f,b
  1102  006EC6                     l114:
  1103                           ;pomiar.c: 337: if(wr>=2) DtCO.indCO=10;
  1104  006EC6  0E01               	movlw	1
  1105  006EC8  64D9               	cpfsgt	fsr2l,c
  1106  006ECA  D003               	goto	l115
  1107  006ECC  0E0A               	movlw	10
  1108  006ECE  CFE8 F12A          	movff	wreg,_DtCO+10
  1109  006ED2                     l115:
  1110                           ;pomiar.c: 339: if(DtCW.CW>fcw) wr=DtCW.CW-fcw;
  1111  006ED2  C113  FFE8         	movff	_DtCW+2,wreg
  1112  006ED6  010E               	movlb	F1540 shr (0+8)
  1113  006ED8  61AF               	cpfslt	F1540& (0+255),b
  1114  006EDA  D005               	goto	l116
  1115  006EDC  CEAF  FFE8         	movff	F1540,wreg
  1116  006EE0  0101               	movlb	(_DtCW+2) shr (0+8)
  1117  006EE2  5D13               	subwf	(_DtCW+2)& (0+255),w,b
  1118  006EE4  D004               	goto	L8
  1119  006EE6                     l116:
  1120                           ;pomiar.c: 340: else wr=fcw-DtCW.CW;
  1121  006EE6  C113  FFE8         	movff	_DtCW+2,wreg
  1122  006EEA  010E               	movlb	F1540 shr (0+8)
  1123  006EEC  5DAF               	subwf	F1540& (0+255),w,b
  1124  006EEE                     L8:
  1125  006EEE  6ED9               	movwf	fsr2l,c
  1126                           ;pomiar.c: 341: if(wr) DtCW.indCW++;
  1127  006EF0  50D9               	movf	fsr2l,w,c
  1128  006EF2  E002               	bz	l118
  1129  006EF4  0101               	movlb	(_DtCW+10) shr (0+8)
  1130  006EF6  2B1B               	incf	(_DtCW+10)& (0+255),f,b
  1131  006EF8                     l118:
  1132                           ;pomiar.c: 342: if(wr>=2) DtCW.indCW=10;
  1133  006EF8  0E01               	movlw	1
  1134  006EFA  64D9               	cpfsgt	fsr2l,c
  1135  006EFC  D003               	goto	l119
  1136  006EFE  0E0A               	movlw	10
  1137  006F00  CFE8 F11B          	movff	wreg,_DtCW+10
  1138  006F04                     l119:
  1139                           ;pomiar.c: 343: PredkoscZmianCW();
  1140  006F04  DF7C               	call	_PredkoscZmianCW	;wreg free
  1141                           ;pomiar.c: 346: indtm++;
  1142  006F06  010E               	movlb	F1538 shr (0+8)
  1143  006F08  2BAD               	incf	F1538& (0+255),f,b
  1144                           ;pomiar.c: 347: if(indtm>9)
  1145  006F0A  0E09               	movlw	9
  1146  006F0C  65AD               	cpfsgt	F1538& (0+255),b
  1147  006F0E  0C09               	retlw	9
  1148                           ;pomiar.c: 348: {
  1149  006F10  6BAD               	clrf	F1538& (0+255),b
  1150                           ;pomiar.c: 351: DtZW.SZW=DtZW.ZW;
  1151  006F12  C10A  F10B         	movff	_DtZW+2,_DtZW+3
  1152                           ;pomiar.c: 354: if(DtCO.indCO<=7) DtCO.dDCO=0;
  1153  006F16  0E08               	movlw	8
  1154  006F18  0101               	movlb	(_DtCO+10) shr (0+8)
  1155  006F1A  612A               	cpfslt	(_DtCO+10)& (0+255),b
  1156  006F1C  D002               	goto	l121
  1157  006F1E  6B29               	clrf	(_DtCO+9)& (0+255),b
  1158  006F20  D008               	goto	l122
  1159  006F22                     l121:
  1160                           ;pomiar.c: 355: else
  1161  006F22  CEAE  FFE8         	movff	F1539,wreg
  1162  006F26  0101               	movlb	(_DtCO+2) shr (0+8)
  1163  006F28  5D22               	subwf	(_DtCO+2)& (0+255),w,b
  1164  006F2A  CFE8 F129          	movff	wreg,_DtCO+9
  1165                           ;pomiar.c: 358: fco=DtCO.CO;
  1166  006F2E  C122  FEAE         	movff	_DtCO+2,F1539
  1167  006F32                     l122:
  1168                           ;pomiar.c: 359: }
  1169  006F32  0101               	movlb	(_DtCO+10) shr (0+8)
  1170  006F34  6B2A               	clrf	(_DtCO+10)& (0+255),b
  1171                           ;pomiar.c: 362: if(DtCW.indCW<=7)
  1172  006F36  0E08               	movlw	8
  1173  006F38  611B               	cpfslt	(_DtCW+10)& (0+255),b
  1174  006F3A  D003               	goto	l123
  1175                           ;pomiar.c: 363: {
  1176  006F3C  6B19               	clrf	(_DtCW+8)& (0+255),b
  1177                           ;pomiar.c: 365: DtCW._fpCW=1;
  1178  006F3E  8512               	bsf	(_DtCW+1)& (0+255),2,b
  1179                           ;pomiar.c: 366: }
  1180  006F40  D009               	goto	l124
  1181  006F42                     l123:
  1182                           ;pomiar.c: 367: else
  1183  006F42  CEAF  FFE8         	movff	F1540,wreg
  1184  006F46  0101               	movlb	(_DtCW+2) shr (0+8)
  1185  006F48  5D13               	subwf	(_DtCW+2)& (0+255),w,b
  1186  006F4A  CFE8 F119          	movff	wreg,_DtCW+8
  1187                           ;pomiar.c: 370: DtCW._fpCW=1;
  1188  006F4E  8512               	bsf	(_DtCW+1)& (0+255),2,b
  1189                           ;pomiar.c: 371: fcw=DtCW.CW;
  1190  006F50  C113  FEAF         	movff	_DtCW+2,F1540
  1191  006F54                     l124:
  1192                           ;pomiar.c: 372: }
  1193  006F54  0101               	movlb	(_DtCW+10) shr (0+8)
  1194  006F56  6B1B               	clrf	(_DtCW+10)& (0+255),b
  1195                           ;pomiar.c: 374: }
  1196  006F58  0012               	return	
  1197  006F5A                     __end_of_FltParMod:
  1198                           ;pomiar.c: 379: void FiltrPomiarowyCOCW(void)
  1199                           ;pomiar.c: 380: {
  1200  006F5A                     _FiltrPomiarowyCOCW:
  1201  000000                     
  1202                           ;pomiar.c: 383: if(PmrTim1(20))
  1203  006F5A  0E14               	movlw	20
  1204  006F5C  DD24               	call	_PmrTim1
  1205  006F5E  E302               	bnc	l126
  1206                           ;pomiar.c: 384: {
  1207  006F60  DD1F               	call	_StartTim1	;wreg free
  1208                           ;pomiar.c: 386: GoldenEye();
  1209  006F62  DD4B               	call	_GoldenEye	;wreg free
  1210  006F64                     l126:
  1211                           ;pomiar.c: 387: }
  1212  006F64  C122  F000         	movff	_DtCO+2,btemp
  1213  006F68  C124  F001         	movff	_DtCO+4,btemp+1
  1214  006F6C  0EFF               	movlw	-1
  1215  006F6E  2601               	addwf	btemp+1,f,c
  1216  006F70  5000               	movf	btemp,w,c
  1217  006F72  5C01               	subwf	btemp+1,w,c
  1218  006F74  CFE8 F128          	movff	wreg,_DtCO+8
  1219                           ;pomiar.c: 392: DtCW.DCW=(DtCW.PPCW-(2-1))-DtCW.
      +                          CW;
  1220  006F78  C113  F000         	movff	_DtCW+2,btemp
  1221  006F7C  C115  F001         	movff	_DtCW+4,btemp+1
  1222  006F80  0EFF               	movlw	-1
  1223  006F82  2601               	addwf	btemp+1,f,c
  1224  006F84  5000               	movf	btemp,w,c
  1225  006F86  5C01               	subwf	btemp+1,w,c
  1226  006F88  CFE8 F118          	movff	wreg,_DtCW+7
  1227                           ;pomiar.c: 394: if(!DtIN._err_IN)
  1228  006F8C  0101               	movlb	_DtIN shr (0+8)
  1229  006F8E  B131               	btfsc	_DtIN& (0+255),0,b
  1230  006F90  D019               	goto	l127
  1231                           ;pomiar.c: 395: {
  1232  006F92  C122  FFE8         	movff	_DtCO+2,wreg
  1233  006F96  6133               	cpfslt	(_DtIN+2)& (0+255),b
  1234  006F98  D006               	goto	l128
  1235  006F9A  C133  FFE8         	movff	_DtIN+2,wreg
  1236  006F9E  5D22               	subwf	(_DtCO+2)& (0+255),w,b
  1237  006FA0  CFE8 F134          	movff	wreg,_DtIN+3
  1238  006FA4  D002               	goto	l129
  1239  006FA6                     l128:
  1240                           ;pomiar.c: 398: else DtIN.DIN=0;
  1241  006FA6  0101               	movlb	(_DtIN+3) shr (0+8)
  1242  006FA8  6B34               	clrf	(_DtIN+3)& (0+255),b
  1243  006FAA                     l129:
  1244                           ;pomiar.c: 400: if((DtCO.PPCO-(1-1))>DtIN.IN) Dt
      +                          IN.DIN2=(DtCO.PPCO-(1-1))-DtIN.IN;
  1245  006FAA  C124  FFE8         	movff	_DtCO+4,wreg
  1246  006FAE  0101               	movlb	(_DtIN+2) shr (0+8)
  1247  006FB0  6133               	cpfslt	(_DtIN+2)& (0+255),b
  1248  006FB2  D006               	goto	l130
  1249  006FB4  C133  FFE8         	movff	_DtIN+2,wreg
  1250  006FB8  5D24               	subwf	(_DtCO+4)& (0+255),w,b
  1251  006FBA  CFE8 F135          	movff	wreg,_DtIN+4
  1252  006FBE  D002               	goto	l127
  1253  006FC0                     l130:
  1254                           ;pomiar.c: 401: else DtIN.DIN2=0;
  1255  006FC0  0101               	movlb	(_DtIN+4) shr (0+8)
  1256  006FC2  6B35               	clrf	(_DtIN+4)& (0+255),b
  1257  006FC4                     l127:
  1258                           ;pomiar.c: 402: }
  1259  006FC4  0E0A               	movlw	10
  1260  006FC6  DCFB               	call	_PmrTim2
  1261  006FC8  E302               	bnc	l132
  1262                           ;pomiar.c: 404: {
  1263  006FCA  DCF6               	call	_StartTim2	;wreg free
  1264                           ;pomiar.c: 406: FltParMod();
  1265  006FCC  DF69               	call	_FltParMod	;wreg free
  1266  006FCE                     l132:
  1267                           ;pomiar.c: 407: }
  1268  006FCE  C129  FFE8         	movff	_DtCO+9,wreg
  1269  006FD2  0A80               	xorlw	128
  1270  006FD4  0F7A               	addlw	-134
  1271  006FD6  0101               	movlb	(_DtCO+1) shr (0+8)
  1272  006FD8  E302               	bnc	L44
  1273  006FDA  8921               	bsf	(_DtCO+1)& (0+255),4,b
  1274  006FDC  0012               	return	
  1275                           ;pomiar.c: 409: else DtCO._ldDCO=0;
  1276  006FDE                     L44:
  1277  006FDE  9921               	bcf	(_DtCO+1)& (0+255),4,b
  1278                           ;pomiar.c: 410: }
  1279  006FE0  0012               	return	
  1280  006FE2                     __end_of_FiltrPomiarowyCOCW:
  1281                           ;pomiar.c: 413: void PomiarCO(void)
  1282                           ;pomiar.c: 414: {
  1283  006FE2                     _PomiarCO:
  1284  000000                     
  1285                           ;pomiar.c: 415: DtCO.AC_CO=ReadAC(0);
  1286  006FE2  0E00               	movlw	0
  1287  006FE4  EC2A  F05F         	call	_ReadAC
  1288  006FE8  CFE8 F12C          	movff	wreg,_DtCO+12
  1289                           ;pomiar.c: 416: DtCO.CO=ReadTabNTC(DtCO.AC_CO);
  1290  006FEC  C12C  FFE8         	movff	_DtCO+12,wreg
  1291  006FF0  EC60  F05F         	call	_ReadTabNTC
  1292  006FF4  CFE8 F122          	movff	wreg,_DtCO+2
  1293                           ;pomiar.c: 417: DtCO.HstCo=DtKNF.hsco;
  1294  006FF8  C1C5  F12F         	movff	_DtKNF+19,_DtCO+15
  1295                           ;pomiar.c: 418: DtCO.F3PPCO=DtKNF.conw;
  1296  006FFC  C1C6  F130         	movff	_DtKNF+20,_DtCO+16
  1297                           ;pomiar.c: 419: if(DtCO.AC_CO<=0X28||DtCO.AC_CO>
      +                          =0XF5)
  1298  007000  0E29               	movlw	41
  1299  007002  0101               	movlb	(_DtCO+12) shr (0+8)
  1300  007004  612C               	cpfslt	(_DtCO+12)& (0+255),b
  1301  007006  D001               	goto	u841
  1302  007008  D003               	goto	u860
  1303  00700A                     u841:
  1304  00700A  0EF4               	movlw	-12
  1305  00700C  652C               	cpfsgt	(_DtCO+12)& (0+255),b
  1306  00700E  D00E               	goto	l136
  1307  007010                     u860:
  1308                           ;pomiar.c: 420: {
  1309  007010  0101               	movlb	_DtCO shr (0+8)
  1310  007012  8120               	bsf	_DtCO& (0+255),0,b
  1311                           ;pomiar.c: 422: DtCO._su_CO=0;
  1312  007014  9320               	bcf	_DtCO& (0+255),1,b
  1313                           ;pomiar.c: 423: DtCO._ad_CO=0;
  1314  007016  9520               	bcf	_DtCO& (0+255),2,b
  1315                           ;pomiar.c: 424: DtCO._cold_CO=0;
  1316  007018  9521               	bcf	(_DtCO+1)& (0+255),2,b
  1317                           ;pomiar.c: 425: DtCO._hot_CO=0;
  1318  00701A  9721               	bcf	(_DtCO+1)& (0+255),3,b
  1319                           ;pomiar.c: 426: DtCO._on_DZ_CO=0;
  1320  00701C  9B20               	bcf	_DtCO& (0+255),5,b
  1321                           ;pomiar.c: 427: DtCO._su_DZ_CO=0;
  1322  00701E  9D20               	bcf	_DtCO& (0+255),6,b
  1323                           ;pomiar.c: 428: DtCO._ad_DZ_CO=0;
  1324  007020  9F20               	bcf	_DtCO& (0+255),7,b
  1325                           ;pomiar.c: 429: DtCO._ptwp_CO=0;
  1326  007022  9121               	bcf	(_DtCO+1)& (0+255),0,b
  1327                           ;pomiar.c: 430: DtCO._pz_CO=0;
  1328  007024  9321               	bcf	(_DtCO+1)& (0+255),1,b
  1329                           ;pomiar.c: 431: DtCO._su_SRW_CO=0;
  1330  007026  9720               	bcf	_DtCO& (0+255),3,b
  1331                           ;pomiar.c: 432: DtCO._ad_SRW_CO=0;
  1332  007028  9920               	bcf	_DtCO& (0+255),4,b
  1333                           ;pomiar.c: 433: return;
  1334  00702A  0012               	return	
  1335  00702C                     l136:
  1336                           ;pomiar.c: 435: else DtCO._err_CO=0;
  1337  00702C  0101               	movlb	_DtCO shr (0+8)
  1338  00702E  9120               	bcf	_DtCO& (0+255),0,b
  1339                           ;pomiar.c: 436: switch(DtKNF.tpkt)
  1340  007030  D269               	goto	l139
  1341  007032                     l141:
  1342                           ;pomiar.c: 439: case 2:
  1343  007032  EE01  F0BD         	lfsr	0,_DtKNF+11
  1344  007036  50EF               	movf	indf0,w,c
  1345                           ;pomiar.c: 444: {
  1346  007038  C12F  FFE8         	movff	_DtCO+15,wreg
  1347  00703C  E134               	bnz	L45
  1348  00703E  C124  F000         	movff	_DtCO+4,btemp
  1349  007042  6A01               	clrf	btemp+1,c
  1350  007044  2600               	addwf	btemp,f,c
  1351  007046  0E00               	movlw	0
  1352  007048  2201               	addwfc	btemp+1,f,c
  1353  00704A  5001               	movf	btemp+1,w,c
  1354  00704C  0A80               	xorlw	128
  1355  00704E  0F80               	addlw	-128
  1356  007050  0E5B               	movlw	91
  1357  007052  B4D8               	btfsc	status,2,c
  1358  007054  5C00               	subwf	btemp,w,c
  1359  007056  E30F               	bnc	l143
  1360                           ;pomiar.c: 446: {
  1361  007058  C122  F000         	movff	_DtCO+2,btemp
  1362  00705C  0EAB               	movlw	171
  1363  00705E                     L22:
  1364  00705E  2400               	addwf	btemp,w,c
  1365  007060  6E02               	movwf	btemp+2,c
  1366  007062  6A03               	clrf	btemp+3,c
  1367  007064  0EFF               	movlw	255
  1368  007066  2203               	addwfc	btemp+3,f,c
  1369  007068  5003               	movf	btemp+3,w,c
  1370  00706A  0A80               	xorlw	128
  1371  00706C  0F80               	addlw	-128
  1372  00706E  0E05               	movlw	5
  1373  007070  B4D8               	btfsc	status,2,c
  1374  007072                     L21:
  1375  007072  5C02               	subwf	btemp+2,w,c
  1376  007074  D014               	goto	u905
  1377                           ;pomiar.c: 448: else DtCO._ad_CO=0;
  1378                           ;pomiar.c: 449: }
  1379  007076                     l143:
  1380                           ;pomiar.c: 450: else
  1381  007076  C12F  F000         	movff	_DtCO+15,btemp
  1382  00707A  6A01               	clrf	btemp+1,c
  1383  00707C  C124  FFE8         	movff	_DtCO+4,wreg
  1384  007080  C122  F002         	movff	_DtCO+2,btemp+2
  1385  007084  6A03               	clrf	btemp+3,c
  1386  007086  5E02               	subwf	btemp+2,f,c
  1387  007088  0E00               	movlw	0
  1388  00708A  5A03               	subwfb	btemp+3,f,c
  1389  00708C  5003               	movf	btemp+3,w,c
  1390  00708E  0A80               	xorlw	128
  1391  007090  6E04               	movwf	btemp+4,c
  1392  007092  5001               	movf	btemp+1,w,c
  1393  007094  0A80               	xorlw	128
  1394  007096  5C04               	subwf	btemp+4,w,c
  1395  007098  E102               	bnz	u905
  1396  00709A  5000               	movf	btemp,w,c
  1397  00709C  D7EA               	goto	L21
  1398  00709E                     u905:
  1399  00709E  E329               	bnc	l154
  1400  0070A0                     u900:
  1401  0070A0  0101               	movlb	_DtCO shr (0+8)
  1402  0070A2  8520               	bsf	_DtCO& (0+255),2,b
  1403  0070A4  D028               	goto	l149
  1404                           ;pomiar.c: 453: else DtCO._ad_CO=0;
  1405                           ;pomiar.c: 454: }
  1406                           ;pomiar.c: 456: else
  1407  0070A6                     L45:
  1408  0070A6  C124  F000         	movff	_DtCO+4,btemp
  1409  0070AA  6A01               	clrf	btemp+1,c
  1410  0070AC  2600               	addwf	btemp,f,c
  1411  0070AE  0E00               	movlw	0
  1412  0070B0  2201               	addwfc	btemp+1,f,c
  1413  0070B2  5001               	movf	btemp+1,w,c
  1414  0070B4  0A80               	xorlw	128
  1415  0070B6  0F80               	addlw	-128
  1416  0070B8  0E3D               	movlw	61
  1417  0070BA  B4D8               	btfsc	status,2,c
  1418  0070BC  5C00               	subwf	btemp,w,c
  1419  0070BE  E304               	bnc	l150
  1420                           ;pomiar.c: 459: {
  1421  0070C0  C122  F000         	movff	_DtCO+2,btemp
  1422  0070C4  0EC9               	movlw	201
  1423  0070C6  D7CB               	goto	L22
  1424                           ;pomiar.c: 461: else DtCO._ad_CO=0;
  1425                           ;pomiar.c: 462: }
  1426  0070C8                     l150:
  1427                           ;pomiar.c: 463: else
  1428  0070C8  C12F  F000         	movff	_DtCO+15,btemp
  1429  0070CC  6A01               	clrf	btemp+1,c
  1430  0070CE  C124  FFE8         	movff	_DtCO+4,wreg
  1431  0070D2  C122  F002         	movff	_DtCO+2,btemp+2
  1432  0070D6  6A03               	clrf	btemp+3,c
  1433  0070D8  5E02               	subwf	btemp+2,f,c
  1434  0070DA  0E00               	movlw	0
  1435  0070DC  5A03               	subwfb	btemp+3,f,c
  1436  0070DE  5003               	movf	btemp+3,w,c
  1437  0070E0  0A80               	xorlw	128
  1438  0070E2  6E04               	movwf	btemp+4,c
  1439  0070E4  5001               	movf	btemp+1,w,c
  1440  0070E6  0A80               	xorlw	128
  1441  0070E8  5C04               	subwf	btemp+4,w,c
  1442  0070EA  E102               	bnz	u935
  1443  0070EC  5000               	movf	btemp,w,c
  1444  0070EE  5C02               	subwf	btemp+2,w,c
  1445  0070F0                     u935:
  1446  0070F0  E2D7               	bc	u900
  1447  0070F2                     l154:
  1448                           ;pomiar.c: 466: else DtCO._ad_CO=0;
  1449  0070F2  0101               	movlb	_DtCO shr (0+8)
  1450  0070F4  9520               	bcf	_DtCO& (0+255),2,b
  1451  0070F6                     l149:
  1452                           ;pomiar.c: 467: }
  1453  0070F6  C122  FFE8         	movff	_DtCO+2,wreg
  1454  0070FA  C124  F000         	movff	_DtCO+4,btemp
  1455  0070FE  6A01               	clrf	btemp+1,c
  1456  007100  5E00               	subwf	btemp,f,c
  1457  007102  0E00               	movlw	0
  1458  007104  5A01               	subwfb	btemp+1,f,c
  1459  007106  5001               	movf	btemp+1,w,c
  1460  007108  0A80               	xorlw	128
  1461  00710A  0F80               	addlw	-128
  1462  00710C  0E05               	movlw	5
  1463  00710E  B4D8               	btfsc	status,2,c
  1464  007110  5C00               	subwf	btemp,w,c
  1465  007112  0101               	movlb	_DtCO shr (0+8)
  1466  007114  E302               	bnc	L46
  1467  007116  8320               	bsf	_DtCO& (0+255),1,b
  1468  007118  D001               	goto	l157
  1469                           ;pomiar.c: 523: else DtCO._su_CO=0;
  1470  00711A                     L46:
  1471  00711A  9320               	bcf	_DtCO& (0+255),1,b
  1472  00711C                     l157:
  1473                           ;pomiar.c: 524: if(DtCO.CO<=50) DtCO._ptwp_CO=1;
  1474  00711C  0E33               	movlw	51
  1475  00711E  0101               	movlb	(_DtCO+2) shr (0+8)
  1476  007120  6122               	cpfslt	(_DtCO+2)& (0+255),b
  1477  007122  D001               	goto	l158
  1478  007124  8121               	bsf	(_DtCO+1)& (0+255),0,b
  1479  007126                     l158:
  1480                           ;pomiar.c: 525: if(DtCO.CO>50+1) DtCO._ptwp_CO=0
      +                          ;
  1481  007126  0E33               	movlw	51
  1482  007128  0101               	movlb	(_DtCO+2) shr (0+8)
  1483  00712A  6522               	cpfsgt	(_DtCO+2)& (0+255),b
  1484  00712C  D001               	goto	l159
  1485  00712E  9121               	bcf	(_DtCO+1)& (0+255),0,b
  1486  007130                     l159:
  1487                           ;pomiar.c: 526: if(DtCO.CO<=82) DtCO._pz_CO=1;
  1488  007130  0E53               	movlw	83
  1489  007132  0101               	movlb	(_DtCO+2) shr (0+8)
  1490  007134  6122               	cpfslt	(_DtCO+2)& (0+255),b
  1491  007136  D001               	goto	l160
  1492  007138  8321               	bsf	(_DtCO+1)& (0+255),1,b
  1493  00713A                     l160:
  1494                           ;pomiar.c: 527: if(DtCO.CO>88) DtCO._pz_CO=0;
  1495  00713A  0E58               	movlw	88
  1496  00713C  D1CA               	goto	L41
  1497                           ;pomiar.c: 528: if(DtCO.CO<=7) DtCO._cold_CO=1;
  1498                           ;pomiar.c: 529: if(DtCO.CO>7+1) DtCO._cold_CO=0;
  1499                           ;pomiar.c: 530: if(DtCO.CO>=88) DtCO._hot_CO=1;
  1500                           ;pomiar.c: 531: if(DtCO.CO<88-1) DtCO._hot_CO=0;
  1501                           ;pomiar.c: 532: break;
  1502  00713E                     l166:
  1503                           ;pomiar.c: 533: }
  1504                           ;pomiar.c: 535: {
  1505  00713E  EE01  F0BD         	lfsr	0,_DtKNF+11
  1506  007142  50EF               	movf	indf0,w,c
  1507                           ;pomiar.c: 539: {
  1508  007144  C12F  FFE8         	movff	_DtCO+15,wreg
  1509  007148  E134               	bnz	L47
  1510  00714A  C124  F000         	movff	_DtCO+4,btemp
  1511  00714E  6A01               	clrf	btemp+1,c
  1512  007150  2600               	addwf	btemp,f,c
  1513  007152  0E00               	movlw	0
  1514  007154  2201               	addwfc	btemp+1,f,c
  1515  007156  5001               	movf	btemp+1,w,c
  1516  007158  0A80               	xorlw	128
  1517  00715A  0F80               	addlw	-128
  1518  00715C  0E5B               	movlw	91
  1519  00715E  B4D8               	btfsc	status,2,c
  1520  007160  5C00               	subwf	btemp,w,c
  1521  007162  E30F               	bnc	l168
  1522                           ;pomiar.c: 541: {
  1523  007164  C122  F000         	movff	_DtCO+2,btemp
  1524  007168  0EAB               	movlw	171
  1525  00716A                     L24:
  1526  00716A  2400               	addwf	btemp,w,c
  1527  00716C  6E02               	movwf	btemp+2,c
  1528  00716E  6A03               	clrf	btemp+3,c
  1529  007170  0EFF               	movlw	255
  1530  007172  2203               	addwfc	btemp+3,f,c
  1531  007174  5003               	movf	btemp+3,w,c
  1532  007176  0A80               	xorlw	128
  1533  007178  0F80               	addlw	-128
  1534  00717A  0E05               	movlw	5
  1535  00717C  B4D8               	btfsc	status,2,c
  1536  00717E                     L23:
  1537  00717E  5C02               	subwf	btemp+2,w,c
  1538  007180  D014               	goto	u1065
  1539                           ;pomiar.c: 543: else DtCO._ad_CO=0;
  1540                           ;pomiar.c: 544: }
  1541  007182                     l168:
  1542                           ;pomiar.c: 545: else
  1543  007182  C12F  F000         	movff	_DtCO+15,btemp
  1544  007186  6A01               	clrf	btemp+1,c
  1545  007188  C124  FFE8         	movff	_DtCO+4,wreg
  1546  00718C  C122  F002         	movff	_DtCO+2,btemp+2
  1547  007190  6A03               	clrf	btemp+3,c
  1548  007192  5E02               	subwf	btemp+2,f,c
  1549  007194  0E00               	movlw	0
  1550  007196  5A03               	subwfb	btemp+3,f,c
  1551  007198  5003               	movf	btemp+3,w,c
  1552  00719A  0A80               	xorlw	128
  1553  00719C  6E04               	movwf	btemp+4,c
  1554  00719E  5001               	movf	btemp+1,w,c
  1555  0071A0  0A80               	xorlw	128
  1556  0071A2  5C04               	subwf	btemp+4,w,c
  1557  0071A4  E102               	bnz	u1065
  1558  0071A6  5000               	movf	btemp,w,c
  1559  0071A8  D7EA               	goto	L23
  1560  0071AA                     u1065:
  1561  0071AA  E329               	bnc	l179
  1562  0071AC                     u1060:
  1563  0071AC  0101               	movlb	_DtCO shr (0+8)
  1564  0071AE  8520               	bsf	_DtCO& (0+255),2,b
  1565  0071B0  D028               	goto	l174
  1566                           ;pomiar.c: 548: else DtCO._ad_CO=0;
  1567                           ;pomiar.c: 549: }
  1568                           ;pomiar.c: 551: else
  1569  0071B2                     L47:
  1570  0071B2  C124  F000         	movff	_DtCO+4,btemp
  1571  0071B6  6A01               	clrf	btemp+1,c
  1572  0071B8  2600               	addwf	btemp,f,c
  1573  0071BA  0E00               	movlw	0
  1574  0071BC  2201               	addwfc	btemp+1,f,c
  1575  0071BE  5001               	movf	btemp+1,w,c
  1576  0071C0  0A80               	xorlw	128
  1577  0071C2  0F80               	addlw	-128
  1578  0071C4  0E3D               	movlw	61
  1579  0071C6  B4D8               	btfsc	status,2,c
  1580  0071C8  5C00               	subwf	btemp,w,c
  1581  0071CA  E304               	bnc	l175
  1582                           ;pomiar.c: 554: {
  1583  0071CC  C122  F000         	movff	_DtCO+2,btemp
  1584  0071D0  0EC9               	movlw	201
  1585  0071D2  D7CB               	goto	L24
  1586                           ;pomiar.c: 556: else DtCO._ad_CO=0;
  1587                           ;pomiar.c: 557: }
  1588  0071D4                     l175:
  1589                           ;pomiar.c: 558: else
  1590  0071D4  C12F  F000         	movff	_DtCO+15,btemp
  1591  0071D8  6A01               	clrf	btemp+1,c
  1592  0071DA  C124  FFE8         	movff	_DtCO+4,wreg
  1593  0071DE  C122  F002         	movff	_DtCO+2,btemp+2
  1594  0071E2  6A03               	clrf	btemp+3,c
  1595  0071E4  5E02               	subwf	btemp+2,f,c
  1596  0071E6  0E00               	movlw	0
  1597  0071E8  5A03               	subwfb	btemp+3,f,c
  1598  0071EA  5003               	movf	btemp+3,w,c
  1599  0071EC  0A80               	xorlw	128
  1600  0071EE  6E04               	movwf	btemp+4,c
  1601  0071F0  5001               	movf	btemp+1,w,c
  1602  0071F2  0A80               	xorlw	128
  1603  0071F4  5C04               	subwf	btemp+4,w,c
  1604  0071F6  E102               	bnz	u1095
  1605  0071F8  5000               	movf	btemp,w,c
  1606  0071FA  5C02               	subwf	btemp+2,w,c
  1607  0071FC                     u1095:
  1608  0071FC  E2D7               	bc	u1060
  1609  0071FE                     l179:
  1610                           ;pomiar.c: 561: else DtCO._ad_CO=0;
  1611  0071FE  0101               	movlb	_DtCO shr (0+8)
  1612  007200  9520               	bcf	_DtCO& (0+255),2,b
  1613  007202                     l174:
  1614                           ;pomiar.c: 562: }
  1615  007202  C122  FFE8         	movff	_DtCO+2,wreg
  1616  007206  C124  F000         	movff	_DtCO+4,btemp
  1617  00720A  6A01               	clrf	btemp+1,c
  1618  00720C  5E00               	subwf	btemp,f,c
  1619  00720E  0E00               	movlw	0
  1620  007210  5A01               	subwfb	btemp+1,f,c
  1621  007212  5001               	movf	btemp+1,w,c
  1622  007214  0A80               	xorlw	128
  1623  007216  0F80               	addlw	-128
  1624  007218  0E05               	movlw	5
  1625  00721A  B4D8               	btfsc	status,2,c
  1626  00721C  5C00               	subwf	btemp,w,c
  1627  00721E  E201 D146          	bnc	l231
  1628  007222                     L42:
  1629  007222  0101               	movlb	_DtCO shr (0+8)
  1630  007224  8320               	bsf	_DtCO& (0+255),1,b
  1631  007226  D145               	goto	l232
  1632                           ;pomiar.c: 618: else DtCO._su_CO=0;
  1633                           ;pomiar.c: 619: if(DtCO.CO<=87) DtCO._ptwp_CO=1;
  1634                           ;pomiar.c: 620: if(DtCO.CO>87+1) DtCO._ptwp_CO=0
      +                          ;
  1635                           ;pomiar.c: 621: if(DtCO.CO<=87) DtCO._pz_CO=1;
  1636                           ;pomiar.c: 622: if(DtCO.CO>91) DtCO._pz_CO=0;
  1637                           ;pomiar.c: 623: if(DtCO.CO<=7) DtCO._cold_CO=1;
  1638                           ;pomiar.c: 624: if(DtCO.CO>7+1) DtCO._cold_CO=0;
  1639                           ;pomiar.c: 625: if(DtCO.CO>=88) DtCO._hot_CO=1;
  1640                           ;pomiar.c: 626: if(DtCO.CO<88-1) DtCO._hot_CO=0;
  1641                           ;pomiar.c: 627: break;
  1642  007228                     l191:
  1643                           ;pomiar.c: 628: }
  1644                           ;pomiar.c: 630: {
  1645  007228  EE01  F0BD         	lfsr	0,_DtKNF+11
  1646  00722C  50EF               	movf	indf0,w,c
  1647                           ;pomiar.c: 634: {
  1648  00722E  C12F  FFE8         	movff	_DtCO+15,wreg
  1649  007232  E134               	bnz	L48
  1650  007234  C124  F000         	movff	_DtCO+4,btemp
  1651  007238  6A01               	clrf	btemp+1,c
  1652  00723A  2600               	addwf	btemp,f,c
  1653  00723C  0E00               	movlw	0
  1654  00723E  2201               	addwfc	btemp+1,f,c
  1655  007240  5001               	movf	btemp+1,w,c
  1656  007242  0A80               	xorlw	128
  1657  007244  0F80               	addlw	-128
  1658  007246  0E5B               	movlw	91
  1659  007248  B4D8               	btfsc	status,2,c
  1660  00724A  5C00               	subwf	btemp,w,c
  1661  00724C  E30F               	bnc	l193
  1662                           ;pomiar.c: 636: {
  1663  00724E  C122  F000         	movff	_DtCO+2,btemp
  1664  007252  0EAB               	movlw	171
  1665  007254                     L26:
  1666  007254  2400               	addwf	btemp,w,c
  1667  007256  6E02               	movwf	btemp+2,c
  1668  007258  6A03               	clrf	btemp+3,c
  1669  00725A  0EFF               	movlw	255
  1670  00725C  2203               	addwfc	btemp+3,f,c
  1671  00725E  5003               	movf	btemp+3,w,c
  1672  007260  0A80               	xorlw	128
  1673  007262  0F80               	addlw	-128
  1674  007264  0E05               	movlw	5
  1675  007266  B4D8               	btfsc	status,2,c
  1676  007268                     L25:
  1677  007268  5C02               	subwf	btemp+2,w,c
  1678  00726A  D014               	goto	u1225
  1679                           ;pomiar.c: 638: else DtCO._ad_CO=0;
  1680                           ;pomiar.c: 639: }
  1681  00726C                     l193:
  1682                           ;pomiar.c: 640: else
  1683  00726C  C12F  F000         	movff	_DtCO+15,btemp
  1684  007270  6A01               	clrf	btemp+1,c
  1685  007272  C124  FFE8         	movff	_DtCO+4,wreg
  1686  007276  C122  F002         	movff	_DtCO+2,btemp+2
  1687  00727A  6A03               	clrf	btemp+3,c
  1688  00727C  5E02               	subwf	btemp+2,f,c
  1689  00727E  0E00               	movlw	0
  1690  007280  5A03               	subwfb	btemp+3,f,c
  1691  007282  5003               	movf	btemp+3,w,c
  1692  007284  0A80               	xorlw	128
  1693  007286  6E04               	movwf	btemp+4,c
  1694  007288  5001               	movf	btemp+1,w,c
  1695  00728A  0A80               	xorlw	128
  1696  00728C  5C04               	subwf	btemp+4,w,c
  1697  00728E  E102               	bnz	u1225
  1698  007290  5000               	movf	btemp,w,c
  1699  007292  D7EA               	goto	L25
  1700  007294                     u1225:
  1701  007294  E329               	bnc	l204
  1702  007296                     u1220:
  1703  007296  0101               	movlb	_DtCO shr (0+8)
  1704  007298  8520               	bsf	_DtCO& (0+255),2,b
  1705  00729A  D028               	goto	l199
  1706                           ;pomiar.c: 643: else DtCO._ad_CO=0;
  1707                           ;pomiar.c: 644: }
  1708                           ;pomiar.c: 646: else
  1709  00729C                     L48:
  1710  00729C  C124  F000         	movff	_DtCO+4,btemp
  1711  0072A0  6A01               	clrf	btemp+1,c
  1712  0072A2  2600               	addwf	btemp,f,c
  1713  0072A4  0E00               	movlw	0
  1714  0072A6  2201               	addwfc	btemp+1,f,c
  1715  0072A8  5001               	movf	btemp+1,w,c
  1716  0072AA  0A80               	xorlw	128
  1717  0072AC  0F80               	addlw	-128
  1718  0072AE  0E3D               	movlw	61
  1719  0072B0  B4D8               	btfsc	status,2,c
  1720  0072B2  5C00               	subwf	btemp,w,c
  1721  0072B4  E304               	bnc	l200
  1722                           ;pomiar.c: 649: {
  1723  0072B6  C122  F000         	movff	_DtCO+2,btemp
  1724  0072BA  0EC9               	movlw	201
  1725  0072BC  D7CB               	goto	L26
  1726                           ;pomiar.c: 651: else DtCO._ad_CO=0;
  1727                           ;pomiar.c: 652: }
  1728  0072BE                     l200:
  1729                           ;pomiar.c: 653: else
  1730  0072BE  C12F  F000         	movff	_DtCO+15,btemp
  1731  0072C2  6A01               	clrf	btemp+1,c
  1732  0072C4  C124  FFE8         	movff	_DtCO+4,wreg
  1733  0072C8  C122  F002         	movff	_DtCO+2,btemp+2
  1734  0072CC  6A03               	clrf	btemp+3,c
  1735  0072CE  5E02               	subwf	btemp+2,f,c
  1736  0072D0  0E00               	movlw	0
  1737  0072D2  5A03               	subwfb	btemp+3,f,c
  1738  0072D4  5003               	movf	btemp+3,w,c
  1739  0072D6  0A80               	xorlw	128
  1740  0072D8  6E04               	movwf	btemp+4,c
  1741  0072DA  5001               	movf	btemp+1,w,c
  1742  0072DC  0A80               	xorlw	128
  1743  0072DE  5C04               	subwf	btemp+4,w,c
  1744  0072E0  E102               	bnz	u1255
  1745  0072E2  5000               	movf	btemp,w,c
  1746  0072E4  5C02               	subwf	btemp+2,w,c
  1747  0072E6                     u1255:
  1748  0072E6  E2D7               	bc	u1220
  1749  0072E8                     l204:
  1750                           ;pomiar.c: 656: else DtCO._ad_CO=0;
  1751  0072E8  0101               	movlb	_DtCO shr (0+8)
  1752  0072EA  9520               	bcf	_DtCO& (0+255),2,b
  1753  0072EC                     l199:
  1754                           ;pomiar.c: 657: }
  1755  0072EC  C122  FFE8         	movff	_DtCO+2,wreg
  1756  0072F0  C124  F000         	movff	_DtCO+4,btemp
  1757  0072F4  6A01               	clrf	btemp+1,c
  1758  0072F6  5E00               	subwf	btemp,f,c
  1759  0072F8  0E00               	movlw	0
  1760  0072FA  5A01               	subwfb	btemp+1,f,c
  1761  0072FC  5001               	movf	btemp+1,w,c
  1762  0072FE  0A80               	xorlw	128
  1763  007300  0F80               	addlw	-128
  1764  007302  0E05               	movlw	5
  1765  007304  B4D8               	btfsc	status,2,c
  1766  007306  5C00               	subwf	btemp,w,c
  1767  007308  0101               	movlb	_DtCO shr (0+8)
  1768  00730A  E302               	bnc	L49
  1769  00730C  8320               	bsf	_DtCO& (0+255),1,b
  1770  00730E  D001               	goto	l207
  1771                           ;pomiar.c: 712: else DtCO._su_CO=0;
  1772  007310                     L49:
  1773  007310  9320               	bcf	_DtCO& (0+255),1,b
  1774  007312                     l207:
  1775                           ;pomiar.c: 718: if(DtCO.CO<=(DtCO.F3PPCO-2)) DtC
      +                          O._ptwp_CO=1;
  1776  007312  C122  F000         	movff	_DtCO+2,btemp
  1777  007316  6A01               	clrf	btemp+1,c
  1778  007318  C130  F002         	movff	_DtCO+16,btemp+2
  1779  00731C  0EFE               	movlw	254
  1780  00731E  2402               	addwf	btemp+2,w,c
  1781  007320  6EF6               	movwf	tblptrl,c
  1782  007322  6AF7               	clrf	tblptrh,c
  1783  007324  0EFF               	movlw	255
  1784  007326  22F7               	addwfc	tblptrh,f,c
  1785  007328  50F7               	movf	tblptrh,w,c
  1786  00732A  0A80               	xorlw	128
  1787  00732C  6E02               	movwf	btemp+2,c
  1788  00732E  5001               	movf	btemp+1,w,c
  1789  007330  0A80               	xorlw	128
  1790  007332  5C02               	subwf	btemp+2,w,c
  1791  007334  E102               	bnz	u1275
  1792  007336  5000               	movf	btemp,w,c
  1793  007338  5CF6               	subwf	tblptrl,w,c
  1794  00733A                     u1275:
  1795  00733A  E302               	bnc	l208
  1796  00733C  0101               	movlb	(_DtCO+1) shr (0+8)
  1797  00733E  8121               	bsf	(_DtCO+1)& (0+255),0,b
  1798  007340                     l208:
  1799                           ;pomiar.c: 719: if(DtCO.CO>((DtCO.F3PPCO-2)+1)) 
      +                          DtCO._ptwp_CO=0;
  1800  007340  C122  F000         	movff	_DtCO+2,btemp
  1801  007344  6A01               	clrf	btemp+1,c
  1802  007346  C130  F002         	movff	_DtCO+16,btemp+2
  1803  00734A  0EFF               	movlw	255
  1804  00734C  2402               	addwf	btemp+2,w,c
  1805  00734E  6EF6               	movwf	tblptrl,c
  1806  007350  6AF7               	clrf	tblptrh,c
  1807  007352  0EFF               	movlw	255
  1808  007354  22F7               	addwfc	tblptrh,f,c
  1809  007356  50F7               	movf	tblptrh,w,c
  1810  007358  0A80               	xorlw	128
  1811  00735A  6E02               	movwf	btemp+2,c
  1812  00735C  5001               	movf	btemp+1,w,c
  1813  00735E  0A80               	xorlw	128
  1814  007360  5C02               	subwf	btemp+2,w,c
  1815  007362  E102               	bnz	u1285
  1816  007364  5000               	movf	btemp,w,c
  1817  007366  5CF6               	subwf	tblptrl,w,c
  1818  007368                     u1285:
  1819  007368  E202               	bc	l209
  1820  00736A  0101               	movlb	(_DtCO+1) shr (0+8)
  1821  00736C  9121               	bcf	(_DtCO+1)& (0+255),0,b
  1822  00736E                     l209:
  1823                           ;pomiar.c: 720: if(DtCO.CO<=(DtCO.F3PPCO-2)) DtC
      +                          O._pz_CO=1;
  1824  00736E  C122  F000         	movff	_DtCO+2,btemp
  1825  007372  6A01               	clrf	btemp+1,c
  1826  007374  C130  F002         	movff	_DtCO+16,btemp+2
  1827  007378  0EFE               	movlw	254
  1828  00737A  2402               	addwf	btemp+2,w,c
  1829  00737C  6EF6               	movwf	tblptrl,c
  1830  00737E  6AF7               	clrf	tblptrh,c
  1831  007380  0EFF               	movlw	255
  1832  007382  22F7               	addwfc	tblptrh,f,c
  1833  007384  50F7               	movf	tblptrh,w,c
  1834  007386  0A80               	xorlw	128
  1835  007388  6E02               	movwf	btemp+2,c
  1836  00738A  5001               	movf	btemp+1,w,c
  1837  00738C  0A80               	xorlw	128
  1838  00738E  5C02               	subwf	btemp+2,w,c
  1839  007390  E102               	bnz	u1295
  1840  007392  5000               	movf	btemp,w,c
  1841  007394  5CF6               	subwf	tblptrl,w,c
  1842  007396                     u1295:
  1843  007396  E302               	bnc	l210
  1844  007398  0101               	movlb	(_DtCO+1) shr (0+8)
  1845  00739A  8321               	bsf	(_DtCO+1)& (0+255),1,b
  1846  00739C                     l210:
  1847                           ;pomiar.c: 721: if(DtCO.CO>(DtCO.F3PPCO+2)) DtCO
      +                          ._pz_CO=0;
  1848  00739C  C122  F000         	movff	_DtCO+2,btemp
  1849  0073A0  6A01               	clrf	btemp+1,c
  1850  0073A2  0E02               	movlw	2
  1851  0073A4  C130  F002         	movff	_DtCO+16,btemp+2
  1852  0073A8  6A03               	clrf	btemp+3,c
  1853  0073AA  2602               	addwf	btemp+2,f,c
  1854  0073AC  0E00               	movlw	0
  1855  0073AE  2203               	addwfc	btemp+3,f,c
  1856  0073B0  5003               	movf	btemp+3,w,c
  1857  0073B2  0A80               	xorlw	128
  1858  0073B4  6E04               	movwf	btemp+4,c
  1859  0073B6  5001               	movf	btemp+1,w,c
  1860  0073B8  0A80               	xorlw	128
  1861  0073BA  5C04               	subwf	btemp+4,w,c
  1862  0073BC  E102               	bnz	u1305
  1863  0073BE  5000               	movf	btemp,w,c
  1864  0073C0  5C02               	subwf	btemp+2,w,c
  1865  0073C2                     u1305:
  1866  0073C2  E301 D08A          	bc	l236
  1867  0073C6  0101               	movlb	(_DtCO+1) shr (0+8)
  1868  0073C8  D087               	goto	L40
  1869                           ;pomiar.c: 723: if(DtCO.CO<=7) DtCO._cold_CO=1;
  1870                           ;pomiar.c: 724: if(DtCO.CO>7+1) DtCO._cold_CO=0;
  1871                           ;pomiar.c: 725: if(DtCO.CO>=88) DtCO._hot_CO=1;
  1872                           ;pomiar.c: 726: if(DtCO.CO<88-1) DtCO._hot_CO=0;
  1873                           ;pomiar.c: 727: break;
  1874  0073CA                     l216:
  1875                           ;pomiar.c: 728: }
  1876                           ;pomiar.c: 730: {
  1877  0073CA  EE01  F0BD         	lfsr	0,_DtKNF+11
  1878  0073CE  50EF               	movf	indf0,w,c
  1879                           ;pomiar.c: 734: {
  1880  0073D0  C12F  FFE8         	movff	_DtCO+15,wreg
  1881  0073D4  E134               	bnz	L50
  1882  0073D6  C124  F000         	movff	_DtCO+4,btemp
  1883  0073DA  6A01               	clrf	btemp+1,c
  1884  0073DC  2600               	addwf	btemp,f,c
  1885  0073DE  0E00               	movlw	0
  1886  0073E0  2201               	addwfc	btemp+1,f,c
  1887  0073E2  5001               	movf	btemp+1,w,c
  1888  0073E4  0A80               	xorlw	128
  1889  0073E6  0F80               	addlw	-128
  1890  0073E8  0E5B               	movlw	91
  1891  0073EA  B4D8               	btfsc	status,2,c
  1892  0073EC  5C00               	subwf	btemp,w,c
  1893  0073EE  E30F               	bnc	l218
  1894                           ;pomiar.c: 736: {
  1895  0073F0  C122  F000         	movff	_DtCO+2,btemp
  1896  0073F4  0EAB               	movlw	171
  1897  0073F6                     L29:
  1898  0073F6  2400               	addwf	btemp,w,c
  1899  0073F8  6E02               	movwf	btemp+2,c
  1900  0073FA  6A03               	clrf	btemp+3,c
  1901  0073FC  0EFF               	movlw	255
  1902  0073FE  2203               	addwfc	btemp+3,f,c
  1903  007400  5003               	movf	btemp+3,w,c
  1904  007402  0A80               	xorlw	128
  1905  007404  0F80               	addlw	-128
  1906  007406  0E05               	movlw	5
  1907  007408  B4D8               	btfsc	status,2,c
  1908  00740A                     L28:
  1909  00740A  5C02               	subwf	btemp+2,w,c
  1910  00740C  D014               	goto	u1385
  1911                           ;pomiar.c: 738: else DtCO._ad_CO=0;
  1912                           ;pomiar.c: 739: }
  1913  00740E                     l218:
  1914                           ;pomiar.c: 740: else
  1915  00740E  C12F  F000         	movff	_DtCO+15,btemp
  1916  007412  6A01               	clrf	btemp+1,c
  1917  007414  C124  FFE8         	movff	_DtCO+4,wreg
  1918  007418  C122  F002         	movff	_DtCO+2,btemp+2
  1919  00741C  6A03               	clrf	btemp+3,c
  1920  00741E  5E02               	subwf	btemp+2,f,c
  1921  007420  0E00               	movlw	0
  1922  007422  5A03               	subwfb	btemp+3,f,c
  1923  007424  5003               	movf	btemp+3,w,c
  1924  007426  0A80               	xorlw	128
  1925  007428  6E04               	movwf	btemp+4,c
  1926  00742A  5001               	movf	btemp+1,w,c
  1927  00742C  0A80               	xorlw	128
  1928  00742E  5C04               	subwf	btemp+4,w,c
  1929  007430  E102               	bnz	u1385
  1930  007432  5000               	movf	btemp,w,c
  1931  007434  D7EA               	goto	L28
  1932  007436                     u1385:
  1933  007436  E329               	bnc	l229
  1934  007438                     u1380:
  1935  007438  0101               	movlb	_DtCO shr (0+8)
  1936  00743A  8520               	bsf	_DtCO& (0+255),2,b
  1937  00743C  D028               	goto	l224
  1938                           ;pomiar.c: 743: else DtCO._ad_CO=0;
  1939                           ;pomiar.c: 744: }
  1940                           ;pomiar.c: 746: else
  1941  00743E                     L50:
  1942  00743E  C124  F000         	movff	_DtCO+4,btemp
  1943  007442  6A01               	clrf	btemp+1,c
  1944  007444  2600               	addwf	btemp,f,c
  1945  007446  0E00               	movlw	0
  1946  007448  2201               	addwfc	btemp+1,f,c
  1947  00744A  5001               	movf	btemp+1,w,c
  1948  00744C  0A80               	xorlw	128
  1949  00744E  0F80               	addlw	-128
  1950  007450  0E3D               	movlw	61
  1951  007452  B4D8               	btfsc	status,2,c
  1952  007454  5C00               	subwf	btemp,w,c
  1953  007456  E304               	bnc	l225
  1954                           ;pomiar.c: 749: {
  1955  007458  C122  F000         	movff	_DtCO+2,btemp
  1956  00745C  0EC9               	movlw	201
  1957  00745E  D7CB               	goto	L29
  1958                           ;pomiar.c: 751: else DtCO._ad_CO=0;
  1959                           ;pomiar.c: 752: }
  1960  007460                     l225:
  1961                           ;pomiar.c: 753: else
  1962  007460  C12F  F000         	movff	_DtCO+15,btemp
  1963  007464  6A01               	clrf	btemp+1,c
  1964  007466  C124  FFE8         	movff	_DtCO+4,wreg
  1965  00746A  C122  F002         	movff	_DtCO+2,btemp+2
  1966  00746E  6A03               	clrf	btemp+3,c
  1967  007470  5E02               	subwf	btemp+2,f,c
  1968  007472  0E00               	movlw	0
  1969  007474  5A03               	subwfb	btemp+3,f,c
  1970  007476  5003               	movf	btemp+3,w,c
  1971  007478  0A80               	xorlw	128
  1972  00747A  6E04               	movwf	btemp+4,c
  1973  00747C  5001               	movf	btemp+1,w,c
  1974  00747E  0A80               	xorlw	128
  1975  007480  5C04               	subwf	btemp+4,w,c
  1976  007482  E102               	bnz	u1415
  1977  007484  5000               	movf	btemp,w,c
  1978  007486  5C02               	subwf	btemp+2,w,c
  1979  007488                     u1415:
  1980  007488  E2D7               	bc	u1380
  1981  00748A                     l229:
  1982                           ;pomiar.c: 756: else DtCO._ad_CO=0;
  1983  00748A  0101               	movlb	_DtCO shr (0+8)
  1984  00748C  9520               	bcf	_DtCO& (0+255),2,b
  1985  00748E                     l224:
  1986                           ;pomiar.c: 757: }
  1987  00748E  C122  FFE8         	movff	_DtCO+2,wreg
  1988  007492  C124  F000         	movff	_DtCO+4,btemp
  1989  007496  6A01               	clrf	btemp+1,c
  1990  007498  5E00               	subwf	btemp,f,c
  1991  00749A  0E00               	movlw	0
  1992  00749C  5A01               	subwfb	btemp+1,f,c
  1993  00749E  5001               	movf	btemp+1,w,c
  1994  0074A0  0A80               	xorlw	128
  1995  0074A2  0F80               	addlw	-128
  1996  0074A4  0E05               	movlw	5
  1997  0074A6  B4D8               	btfsc	status,2,c
  1998  0074A8  5C00               	subwf	btemp,w,c
  1999  0074AA  E301 D6BA          	bc	L42
  2000  0074AE                     l231:
  2001                           ;pomiar.c: 812: else DtCO._su_CO=0;
  2002  0074AE  0101               	movlb	_DtCO shr (0+8)
  2003  0074B0  9320               	bcf	_DtCO& (0+255),1,b
  2004  0074B2                     l232:
  2005                           ;pomiar.c: 813: if(DtCO.CO<=87) DtCO._ptwp_CO=1;
  2006  0074B2  0E58               	movlw	88
  2007  0074B4  0101               	movlb	(_DtCO+2) shr (0+8)
  2008  0074B6  6122               	cpfslt	(_DtCO+2)& (0+255),b
  2009  0074B8  D001               	goto	l233
  2010  0074BA  8121               	bsf	(_DtCO+1)& (0+255),0,b
  2011  0074BC                     l233:
  2012                           ;pomiar.c: 814: if(DtCO.CO>87+1) DtCO._ptwp_CO=0
      +                          ;
  2013  0074BC  0E58               	movlw	88
  2014  0074BE  0101               	movlb	(_DtCO+2) shr (0+8)
  2015  0074C0  6522               	cpfsgt	(_DtCO+2)& (0+255),b
  2016  0074C2  D001               	goto	l234
  2017  0074C4  9121               	bcf	(_DtCO+1)& (0+255),0,b
  2018  0074C6                     l234:
  2019                           ;pomiar.c: 815: if(DtCO.CO<=87) DtCO._pz_CO=1;
  2020  0074C6  0E58               	movlw	88
  2021  0074C8  0101               	movlb	(_DtCO+2) shr (0+8)
  2022  0074CA  6122               	cpfslt	(_DtCO+2)& (0+255),b
  2023  0074CC  D001               	goto	l235
  2024  0074CE  8321               	bsf	(_DtCO+1)& (0+255),1,b
  2025  0074D0                     l235:
  2026                           ;pomiar.c: 816: if(DtCO.CO>91) DtCO._pz_CO=0;
  2027  0074D0  0E5B               	movlw	91
  2028  0074D2                     L41:
  2029  0074D2  0101               	movlb	(_DtCO+2) shr (0+8)
  2030  0074D4  6522               	cpfsgt	(_DtCO+2)& (0+255),b
  2031  0074D6  D001               	goto	l236
  2032  0074D8                     L40:
  2033  0074D8  9321               	bcf	(_DtCO+1)& (0+255),1,b
  2034  0074DA                     l236:
  2035                           ;pomiar.c: 817: if(DtCO.CO<=7) DtCO._cold_CO=1;
  2036  0074DA  0E08               	movlw	8
  2037  0074DC  0101               	movlb	(_DtCO+2) shr (0+8)
  2038  0074DE  6122               	cpfslt	(_DtCO+2)& (0+255),b
  2039  0074E0  D001               	goto	l237
  2040  0074E2  8521               	bsf	(_DtCO+1)& (0+255),2,b
  2041  0074E4                     l237:
  2042                           ;pomiar.c: 818: if(DtCO.CO>7+1) DtCO._cold_CO=0;
  2043  0074E4  0E08               	movlw	8
  2044  0074E6  0101               	movlb	(_DtCO+2) shr (0+8)
  2045  0074E8  6522               	cpfsgt	(_DtCO+2)& (0+255),b
  2046  0074EA  D001               	goto	l238
  2047  0074EC  9521               	bcf	(_DtCO+1)& (0+255),2,b
  2048  0074EE                     l238:
  2049                           ;pomiar.c: 819: if(DtCO.CO>=88) DtCO._hot_CO=1;
  2050  0074EE  0E57               	movlw	87
  2051  0074F0  0101               	movlb	(_DtCO+2) shr (0+8)
  2052  0074F2  6522               	cpfsgt	(_DtCO+2)& (0+255),b
  2053  0074F4  D001               	goto	l239
  2054  0074F6  8721               	bsf	(_DtCO+1)& (0+255),3,b
  2055  0074F8                     l239:
  2056                           ;pomiar.c: 820: if(DtCO.CO<88-1) DtCO._hot_CO=0;
  2057  0074F8  0E57               	movlw	87
  2058  0074FA  0101               	movlb	(_DtCO+2) shr (0+8)
  2059  0074FC  6122               	cpfslt	(_DtCO+2)& (0+255),b
  2060  0074FE  D011               	goto	l138
  2061  007500  9721               	bcf	(_DtCO+1)& (0+255),3,b
  2062                           ;pomiar.c: 821: break;
  2063  007502  D00F               	goto	l138
  2064  007504                     l139:
  2065  007504  C1B9  FFE8         	movff	_DtKNF+7,wreg
  2066  007508  0A00               	xorlw	0
  2067  00750A  E101 D68D          	bz	l191
  2068  00750E  0A01               	xorlw	1
  2069  007510  E101 D58F          	bz	l141
  2070  007514  0A03               	xorlw	3
  2071  007516  E101 D58C          	bz	l141
  2072  00751A  0A01               	xorlw	1
  2073  00751C  E101 D60F          	bz	l166
  2074  007520  D754               	goto	l216
  2075  007522                     l138:
  2076                           ;pomiar.c: 825: if(DtCO.CO<=8)
  2077  007522  0E09               	movlw	9
  2078  007524  0101               	movlb	(_DtCO+2) shr (0+8)
  2079  007526  6122               	cpfslt	(_DtCO+2)& (0+255),b
  2080  007528  D003               	goto	l241
  2081                           ;pomiar.c: 826: {
  2082  00752A  8D20               	bsf	_DtCO& (0+255),6,b
  2083                           ;pomiar.c: 828: DtCO._on_DZ_CO=1;
  2084  00752C  8B20               	bsf	_DtCO& (0+255),5,b
  2085                           ;pomiar.c: 829: }
  2086  00752E  D002               	goto	l242
  2087  007530                     l241:
  2088                           ;pomiar.c: 830: else DtCO._su_DZ_CO=0;
  2089  007530  0101               	movlb	_DtCO shr (0+8)
  2090  007532  9D20               	bcf	_DtCO& (0+255),6,b
  2091  007534                     l242:
  2092                           ;pomiar.c: 831: if(DtCO.CO>=20)
  2093  007534  0E13               	movlw	19
  2094  007536  0101               	movlb	(_DtCO+2) shr (0+8)
  2095  007538  6522               	cpfsgt	(_DtCO+2)& (0+255),b
  2096  00753A  D003               	goto	l243
  2097                           ;pomiar.c: 832: {
  2098  00753C  8F20               	bsf	_DtCO& (0+255),7,b
  2099                           ;pomiar.c: 834: DtCO._on_DZ_CO=0;
  2100  00753E  9B20               	bcf	_DtCO& (0+255),5,b
  2101                           ;pomiar.c: 835: }
  2102  007540  D002               	goto	l244
  2103  007542                     l243:
  2104                           ;pomiar.c: 836: else DtCO._ad_DZ_CO=0;
  2105  007542  0101               	movlb	_DtCO shr (0+8)
  2106  007544  9F20               	bcf	_DtCO& (0+255),7,b
  2107  007546                     l244:
  2108                           ;pomiar.c: 838: if(!DtKNF.opdg)
  2109  007546  EE01  F0BD         	lfsr	0,_DtKNF+11
  2110  00754A  50EF               	movf	indf0,w,c
  2111  00754C  E111               	bnz	l245
  2112                           ;pomiar.c: 839: {
  2113  00754E  0E4F               	movlw	79
  2114  007550  0101               	movlb	(_DtCO+2) shr (0+8)
  2115  007552  6122               	cpfslt	(_DtCO+2)& (0+255),b
  2116  007554  D002               	goto	l246
  2117  007556  8720               	bsf	_DtCO& (0+255),3,b
  2118  007558  D002               	goto	l247
  2119  00755A                     l246:
  2120                           ;pomiar.c: 841: else DtCO._su_SRW_CO=0;
  2121  00755A  0101               	movlb	_DtCO shr (0+8)
  2122  00755C  9720               	bcf	_DtCO& (0+255),3,b
  2123  00755E                     l247:
  2124                           ;pomiar.c: 842: if(DtCO.CO>88) DtCO._ad_SRW_CO=1
      +                          ;
  2125  00755E  0E58               	movlw	88
  2126  007560  0101               	movlb	(_DtCO+2) shr (0+8)
  2127  007562  6522               	cpfsgt	(_DtCO+2)& (0+255),b
  2128  007564  D002               	goto	l248
  2129  007566  8920               	bsf	_DtCO& (0+255),4,b
  2130  007568  0C58               	retlw	88
  2131  00756A                     l248:
  2132                           ;pomiar.c: 843: else DtCO._ad_SRW_CO=0;
  2133  00756A  0101               	movlb	_DtCO shr (0+8)
  2134  00756C  9920               	bcf	_DtCO& (0+255),4,b
  2135                           ;pomiar.c: 844: }
  2136  00756E  0012               	return	
  2137  007570                     l245:
  2138                           ;pomiar.c: 845: else
  2139  007570  0E31               	movlw	49
  2140  007572  0101               	movlb	(_DtCO+2) shr (0+8)
  2141  007574  6122               	cpfslt	(_DtCO+2)& (0+255),b
  2142  007576  D002               	goto	l251
  2143  007578  8720               	bsf	_DtCO& (0+255),3,b
  2144  00757A  D002               	goto	l252
  2145  00757C                     l251:
  2146                           ;pomiar.c: 848: else DtCO._su_SRW_CO=0;
  2147  00757C  0101               	movlb	_DtCO shr (0+8)
  2148  00757E  9720               	bcf	_DtCO& (0+255),3,b
  2149  007580                     l252:
  2150                           ;pomiar.c: 849: if(DtCO.CO>58) DtCO._ad_SRW_CO=1
      +                          ;
  2151  007580  0E3A               	movlw	58
  2152  007582  0101               	movlb	(_DtCO+2) shr (0+8)
  2153  007584  6522               	cpfsgt	(_DtCO+2)& (0+255),b
  2154  007586  D002               	goto	l253
  2155  007588  8920               	bsf	_DtCO& (0+255),4,b
  2156  00758A  0C3A               	retlw	58
  2157  00758C                     l253:
  2158                           ;pomiar.c: 850: else DtCO._ad_SRW_CO=0;
  2159  00758C  0101               	movlb	_DtCO shr (0+8)
  2160  00758E  9920               	bcf	_DtCO& (0+255),4,b
  2161                           ;pomiar.c: 851: }
  2162  007590  0012               	return	
  2163  007592                     __end_of_PomiarCO:
  2164                           ;pomiar.c: 856: void PomiarIN(void)
  2165                           ;pomiar.c: 857: {
  2166  007592                     _PomiarIN:
  2167  000000                     
  2168                           ;pomiar.c: 858: signed char delta;
  2169  007592  0E04               	movlw	4
  2170  007594  EC2A  F05F         	call	_ReadAC
  2171  007598  CFE8 F132          	movff	wreg,_DtIN+1
  2172                           ;pomiar.c: 861: DtIN.IN=ReadTabNTC(DtIN.AC_IN);
  2173  00759C  C132  FFE8         	movff	_DtIN+1,wreg
  2174  0075A0  EC60  F05F         	call	_ReadTabNTC
  2175  0075A4  CFE8 F133          	movff	wreg,_DtIN+2
  2176                           ;pomiar.c: 863: if(DtIN.AC_IN<=0X28||DtIN.AC_IN>
      +                          =0XF5)
  2177  0075A8  0E29               	movlw	41
  2178  0075AA  0101               	movlb	(_DtIN+1) shr (0+8)
  2179  0075AC  6132               	cpfslt	(_DtIN+1)& (0+255),b
  2180  0075AE  D001               	goto	u1581
  2181  0075B0  D003               	goto	u1600
  2182  0075B2                     u1581:
  2183  0075B2  0EF4               	movlw	-12
  2184  0075B4  6532               	cpfsgt	(_DtIN+1)& (0+255),b
  2185  0075B6  D003               	goto	l256
  2186  0075B8                     u1600:
  2187                           ;pomiar.c: 864: {
  2188  0075B8  0101               	movlb	_DtIN shr (0+8)
  2189  0075BA  8131               	bsf	_DtIN& (0+255),0,b
  2190                           ;pomiar.c: 866: return;
  2191  0075BC  0012               	return	
  2192  0075BE                     l256:
  2193                           ;pomiar.c: 868: else DtIN._err_IN=0;
  2194  0075BE  0101               	movlb	_DtIN shr (0+8)
  2195  0075C0  9131               	bcf	_DtIN& (0+255),0,b
  2196                           ;pomiar.c: 869: RSDT1.outIN=DtIN.IN;
  2197  0075C2  C133  F0B2         	movff	_DtIN+2,_RSDT1+21
  2198                           ;pomiar.c: 870: }
  2199  0075C6  0012               	return	
  2200  0075C8                     __end_of_PomiarIN:
  2201                           ;pomiar.c: 873: void PomiarCW(void)
  2202                           ;pomiar.c: 874: {
  2203  0075C8                     _PomiarCW:
  2204  000000                     
  2205                           ;pomiar.c: 875: DtCW.AC_CW=ReadAC(1);
  2206  0075C8  0E01               	movlw	1
  2207  0075CA  EC2A  F05F         	call	_ReadAC
  2208  0075CE  CFE8 F11D          	movff	wreg,_DtCW+12
  2209                           ;pomiar.c: 876: DtCW.CW=ReadTabNTC(DtCW.AC_CW);
  2210  0075D2  C11D  FFE8         	movff	_DtCW+12,wreg
  2211  0075D6  EC60  F05F         	call	_ReadTabNTC
  2212  0075DA  CFE8 F113          	movff	wreg,_DtCW+2
  2213                           ;pomiar.c: 878: if(DtCW.AC_CW<=0X28||DtCW.AC_CW>
      +                          =0XF5)
  2214  0075DE  0E29               	movlw	41
  2215  0075E0  0101               	movlb	(_DtCW+12) shr (0+8)
  2216  0075E2  611D               	cpfslt	(_DtCW+12)& (0+255),b
  2217  0075E4  D001               	goto	u1611
  2218  0075E6  D003               	goto	u1630
  2219  0075E8                     u1611:
  2220  0075E8  0EF4               	movlw	-12
  2221  0075EA  651D               	cpfsgt	(_DtCW+12)& (0+255),b
  2222  0075EC  D00A               	goto	l259
  2223  0075EE                     u1630:
  2224                           ;pomiar.c: 879: {
  2225  0075EE  0101               	movlb	_DtCW shr (0+8)
  2226  0075F0  8111               	bsf	_DtCW& (0+255),0,b
  2227                           ;pomiar.c: 881: DtCW._su_CW=0;
  2228  0075F2  9311               	bcf	_DtCW& (0+255),1,b
  2229                           ;pomiar.c: 882: DtCW._ad_CW=0;
  2230  0075F4  9511               	bcf	_DtCW& (0+255),2,b
  2231                           ;pomiar.c: 883: DtCW._cold_CW=0;
  2232  0075F6  9F11               	bcf	_DtCW& (0+255),7,b
  2233                           ;pomiar.c: 884: DtCW._on_DZ_CW=0;
  2234  0075F8  9911               	bcf	_DtCW& (0+255),4,b
  2235                           ;pomiar.c: 885: DtCW._su_DZ_CW=0;
  2236  0075FA  9B11               	bcf	_DtCW& (0+255),5,b
  2237                           ;pomiar.c: 886: DtCW._ad_DZ_CW=0;
  2238  0075FC  9D11               	bcf	_DtCW& (0+255),6,b
  2239                           ;pomiar.c: 887: DtCW._wpz_CW=0;
  2240  0075FE  9711               	bcf	_DtCW& (0+255),3,b
  2241                           ;pomiar.c: 888: return;
  2242  007600  0012               	return	
  2243  007602                     l259:
  2244                           ;pomiar.c: 890: else DtCW._err_CW=0;
  2245  007602  0101               	movlb	_DtCW shr (0+8)
  2246  007604  9111               	bcf	_DtCW& (0+255),0,b
  2247                           ;pomiar.c: 891: switch(DtKNF.tpkt)
  2248  007606  D060               	goto	l262
  2249  007608                     l264:
  2250                           ;pomiar.c: 894: case 2:
  2251  007608  0E37               	movlw	55
  2252  00760A  0101               	movlb	(_DtCW+3) shr (0+8)
  2253  00760C  6114               	cpfslt	(_DtCW+3)& (0+255),b
  2254  00760E  D010               	goto	l265
  2255                           ;pomiar.c: 901: {
  2256  007610  0E41               	movlw	65
  2257  007612  6513               	cpfsgt	(_DtCW+2)& (0+255),b
  2258  007614  D002               	goto	l266
  2259  007616  8511               	bsf	_DtCW& (0+255),2,b
  2260  007618  D002               	goto	l277
  2261  00761A                     l266:
  2262                           ;pomiar.c: 903: else DtCW._ad_CW=0;
  2263  00761A  0101               	movlb	_DtCW shr (0+8)
  2264  00761C  9511               	bcf	_DtCW& (0+255),2,b
  2265                           ;pomiar.c: 920: else DtCW._ad_CW=0;
  2266  00761E                     l277:
  2267                           ;pomiar.c: 921: if(DtCW.CW<=65-2) DtCW._su_CW=1;
  2268  00761E  0E40               	movlw	64
  2269                           ;pomiar.c: 904: if(DtCW.CW<=65-2) DtCW._su_CW=1;
  2270  007620                     L30:
  2271  007620  0101               	movlb	(_DtCW+2) shr (0+8)
  2272  007622  6113               	cpfslt	(_DtCW+2)& (0+255),b
  2273  007624  D002               	goto	l268
  2274  007626  8311               	bsf	_DtCW& (0+255),1,b
  2275  007628  D05A               	goto	l261
  2276  00762A                     l268:
  2277                           ;pomiar.c: 905: else DtCW._su_CW=0;
  2278  00762A  0101               	movlb	_DtCW shr (0+8)
  2279  00762C  9311               	bcf	_DtCW& (0+255),1,b
  2280                           ;pomiar.c: 906: }
  2281  00762E  D057               	goto	l261
  2282  007630                     l265:
  2283                           ;pomiar.c: 907: else
  2284  007630  0E46               	movlw	70
  2285  007632  0101               	movlb	(_DtCW+2) shr (0+8)
  2286  007634  6513               	cpfsgt	(_DtCW+2)& (0+255),b
  2287  007636  D002               	goto	l271
  2288  007638  8511               	bsf	_DtCW& (0+255),2,b
  2289  00763A  D002               	goto	l272
  2290  00763C                     l271:
  2291                           ;pomiar.c: 910: else DtCW._ad_CW=0;
  2292  00763C  0101               	movlb	_DtCW shr (0+8)
  2293  00763E  9511               	bcf	_DtCW& (0+255),2,b
  2294  007640                     l272:
  2295                           ;pomiar.c: 911: if(DtCW.CW<=70-2) DtCW._su_CW=1;
  2296  007640  0E45               	movlw	69
  2297  007642  D7EE               	goto	L30
  2298                           ;pomiar.c: 912: else DtCW._su_CW=0;
  2299                           ;pomiar.c: 913: }
  2300  007644                     l275:
  2301  007644  D03B               	goto	l291
  2302                           ;pomiar.c: 916: }
  2303                           ;pomiar.c: 918: {
  2304                           ;pomiar.c: 922: else DtCW._su_CW=0;
  2305                           ;pomiar.c: 923: break;
  2306  007646                     l280:
  2307                           ;pomiar.c: 924: }
  2308                           ;pomiar.c: 926: {
  2309  007646  C115  FFE8         	movff	_DtCW+4,wreg
  2310  00764A  C113  F000         	movff	_DtCW+2,btemp
  2311  00764E  6A01               	clrf	btemp+1,c
  2312  007650  5E00               	subwf	btemp,f,c
  2313  007652  0E00               	movlw	0
  2314  007654  5A01               	subwfb	btemp+1,f,c
  2315  007656  5001               	movf	btemp+1,w,c
  2316  007658  0A80               	xorlw	128
  2317  00765A  0F80               	addlw	-128
  2318  00765C  0E01               	movlw	1
  2319  00765E  B4D8               	btfsc	status,2,c
  2320  007660  5C00               	subwf	btemp,w,c
  2321  007662  0101               	movlb	_DtCW shr (0+8)
  2322  007664  E302               	bnc	L51
  2323  007666  8511               	bsf	_DtCW& (0+255),2,b
  2324  007668  D001               	goto	l282
  2325                           ;pomiar.c: 928: else DtCW._ad_CW=0;
  2326  00766A                     L51:
  2327  00766A  9511               	bcf	_DtCW& (0+255),2,b
  2328  00766C                     l282:
  2329                           ;pomiar.c: 929: if((DtCW.PPCW-DtCW.CW)>=5) DtCW.
      +                          _su_CW=1;
  2330  00766C  C113  FFE8         	movff	_DtCW+2,wreg
  2331  007670  C115  F000         	movff	_DtCW+4,btemp
  2332  007674  6A01               	clrf	btemp+1,c
  2333  007676  5E00               	subwf	btemp,f,c
  2334  007678  0E00               	movlw	0
  2335  00767A  5A01               	subwfb	btemp+1,f,c
  2336  00767C  5001               	movf	btemp+1,w,c
  2337  00767E  0A80               	xorlw	128
  2338  007680  0F80               	addlw	-128
  2339  007682  0E05               	movlw	5
  2340  007684  B4D8               	btfsc	status,2,c
  2341  007686  5C00               	subwf	btemp,w,c
  2342  007688  0101               	movlb	_DtCW shr (0+8)
  2343  00768A  E302               	bnc	L52
  2344  00768C  8311               	bsf	_DtCW& (0+255),1,b
  2345  00768E  D001               	goto	l284
  2346                           ;pomiar.c: 930: else DtCW._su_CW=0;
  2347  007690                     L52:
  2348  007690  9311               	bcf	_DtCW& (0+255),1,b
  2349  007692                     l284:
  2350                           ;pomiar.c: 931: if(RdPrt(11))
  2351  007692  0E0B               	movlw	11
  2352  007694  ECC4  F05B         	call	_RdPrt
  2353  007698  E30F               	bnc	l285
  2354                           ;pomiar.c: 932: {
  2355  00769A  0101               	movlb	_DtCW shr (0+8)
  2356  00769C  A311               	btfss	_DtCW& (0+255),1,b
  2357  00769E  D002               	goto	l286
  2358  0076A0  8711               	bsf	_DtCW& (0+255),3,b
  2359  0076A2  D005               	goto	l287
  2360  0076A4                     l286:
  2361                           ;pomiar.c: 934: else if(!M._PRACA) DtCW._wpz_CW=
      +                          0;
  2362  0076A4  0100               	movlb	(_M+27) shr (0+8)
  2363  0076A6  B585               	btfsc	(_M+27)& (0+255),2,b
  2364  0076A8  D002               	goto	l287
  2365  0076AA  0101               	movlb	_DtCW shr (0+8)
  2366  0076AC  9711               	bcf	_DtCW& (0+255),3,b
  2367  0076AE                     l287:
  2368                           ;pomiar.c: 935: if (DtCW._ad_CW) DtCW._wpz_CW=0;
  2369  0076AE  0101               	movlb	_DtCW shr (0+8)
  2370  0076B0  A511               	btfss	_DtCW& (0+255),2,b
  2371  0076B2  D015               	goto	l261
  2372  0076B4                     u1760:
  2373  0076B4  9711               	bcf	_DtCW& (0+255),3,b
  2374                           ;pomiar.c: 936: }
  2375  0076B6  D013               	goto	l261
  2376  0076B8                     l285:
  2377                           ;pomiar.c: 937: else DtCW._wpz_CW=0;
  2378  0076B8  0101               	movlb	_DtCW shr (0+8)
  2379  0076BA  D7FC               	goto	u1760
  2380                           ;pomiar.c: 938: break;
  2381  0076BC                     l291:
  2382                           ;pomiar.c: 939: }
  2383                           ;pomiar.c: 941: {
  2384  0076BC  0E41               	movlw	65
  2385  0076BE  0101               	movlb	(_DtCW+2) shr (0+8)
  2386  0076C0  6513               	cpfsgt	(_DtCW+2)& (0+255),b
  2387  0076C2  D7AB               	goto	l266
  2388  0076C4  8511               	bsf	_DtCW& (0+255),2,b
  2389  0076C6  D7AB               	goto	l277
  2390                           ;pomiar.c: 943: else DtCW._ad_CW=0;
  2391                           ;pomiar.c: 944: if(DtCW.CW<=65-2) DtCW._su_CW=1;
  2392                           ;pomiar.c: 945: else DtCW._su_CW=0;
  2393                           ;pomiar.c: 946: break;
  2394  0076C8                     l262:
  2395  0076C8  C1B9  FFE8         	movff	_DtKNF+7,wreg
  2396  0076CC  0A00               	xorlw	0
  2397  0076CE  E0BB               	bz	l280
  2398  0076D0  0A01               	xorlw	1
  2399  0076D2  E09A               	bz	l264
  2400  0076D4  0A03               	xorlw	3
  2401  0076D6  E098               	bz	l264
  2402  0076D8  0A01               	xorlw	1
  2403  0076DA  E0B4               	bz	l275
  2404  0076DC  D7EF               	goto	l291
  2405  0076DE                     l261:
  2406                           ;pomiar.c: 949: if(DtCW.CW<=5)
  2407  0076DE  0E06               	movlw	6
  2408  0076E0  0101               	movlb	(_DtCW+2) shr (0+8)
  2409  0076E2  6113               	cpfslt	(_DtCW+2)& (0+255),b
  2410  0076E4  D003               	goto	l296
  2411                           ;pomiar.c: 950: {
  2412  0076E6  8B11               	bsf	_DtCW& (0+255),5,b
  2413                           ;pomiar.c: 952: DtCW._on_DZ_CW=1;
  2414  0076E8  8911               	bsf	_DtCW& (0+255),4,b
  2415                           ;pomiar.c: 953: }
  2416  0076EA  D002               	goto	l297
  2417  0076EC                     l296:
  2418                           ;pomiar.c: 954: else DtCW._su_DZ_CW=0;
  2419  0076EC  0101               	movlb	_DtCW shr (0+8)
  2420  0076EE  9B11               	bcf	_DtCW& (0+255),5,b
  2421  0076F0                     l297:
  2422                           ;pomiar.c: 955: if(DtCW.CW>=10)
  2423  0076F0  0E09               	movlw	9
  2424  0076F2  0101               	movlb	(_DtCW+2) shr (0+8)
  2425  0076F4  6513               	cpfsgt	(_DtCW+2)& (0+255),b
  2426  0076F6  D003               	goto	l298
  2427                           ;pomiar.c: 956: {
  2428  0076F8  8D11               	bsf	_DtCW& (0+255),6,b
  2429                           ;pomiar.c: 958: DtCW._on_DZ_CW=0;
  2430  0076FA  9911               	bcf	_DtCW& (0+255),4,b
  2431                           ;pomiar.c: 959: }
  2432  0076FC  D002               	goto	l299
  2433  0076FE                     l298:
  2434                           ;pomiar.c: 960: else DtCW._ad_DZ_CW=0;
  2435  0076FE  0101               	movlb	_DtCW shr (0+8)
  2436  007700  9D11               	bcf	_DtCW& (0+255),6,b
  2437  007702                     l299:
  2438                           ;pomiar.c: 961: if(DtCW.CW<=5) DtCW._cold_CW=1;
  2439  007702  0E06               	movlw	6
  2440  007704  0101               	movlb	(_DtCW+2) shr (0+8)
  2441  007706  6113               	cpfslt	(_DtCW+2)& (0+255),b
  2442  007708  D001               	goto	l300
  2443  00770A  8F11               	bsf	_DtCW& (0+255),7,b
  2444  00770C                     l300:
  2445                           ;pomiar.c: 962: if(DtCW.CW>5+1) DtCW._cold_CW=0;
  2446  00770C  0E06               	movlw	6
  2447  00770E  0101               	movlb	(_DtCW+2) shr (0+8)
  2448  007710  6513               	cpfsgt	(_DtCW+2)& (0+255),b
  2449  007712  0C06               	retlw	6
  2450  007714  9F11               	bcf	_DtCW& (0+255),7,b
  2451                           ;pomiar.c: 963: }
  2452  007716  0C06               	retlw	6
  2453  007718                     __end_of_PomiarCW:
  2454                           ;pomiar.c: 966: void PomiarZW(void)
  2455                           ;pomiar.c: 967: {
  2456  007718                     _PomiarZW:
  2457  000000                     
  2458                           ;pomiar.c: 968: DtZW.AC_ZW=ReadAC(2);
  2459  007718  0E02               	movlw	2
  2460  00771A  EC2A  F05F         	call	_ReadAC
  2461  00771E  CFE8 F109          	movff	wreg,_DtZW+1
  2462                           ;pomiar.c: 969: DtZW.ZW=ReadTabZNTC(DtZW.AC_ZW);
  2463  007722  C109  FFE8         	movff	_DtZW+1,wreg
  2464  007726  ECB1  F05F         	call	_ReadTabZNTC
  2465  00772A  CFE8 F10A          	movff	wreg,_DtZW+2
  2466                           ;pomiar.c: 970: if(DtZW.AC_ZW<=0x0F||DtZW.AC_ZW>
      +                          =0xF0) DtZW._on_ZW=0;
  2467  00772E  0E10               	movlw	16
  2468  007730  0101               	movlb	(_DtZW+1) shr (0+8)
  2469  007732  6109               	cpfslt	(_DtZW+1)& (0+255),b
  2470  007734  D001               	goto	u1831
  2471  007736  D003               	goto	u1850
  2472  007738                     u1831:
  2473  007738  0EEF               	movlw	-17
  2474  00773A  6509               	cpfsgt	(_DtZW+1)& (0+255),b
  2475  00773C  D003               	goto	l303
  2476  00773E                     u1850:
  2477  00773E  0101               	movlb	_DtZW shr (0+8)
  2478  007740  9108               	bcf	_DtZW& (0+255),0,b
  2479  007742  0012               	return	
  2480  007744                     l303:
  2481                           ;pomiar.c: 971: else DtZW._on_ZW=1;
  2482  007744  0101               	movlb	_DtZW shr (0+8)
  2483  007746  8108               	bsf	_DtZW& (0+255),0,b
  2484                           ;pomiar.c: 972: }
  2485  007748  0012               	return	
  2486  00774A                     __end_of_PomiarZW:
  2487                           ;pomiar.c: 975: void SetModPCO(void)
  2488                           ;pomiar.c: 976: {
  2489  00774A                     _SetModPCO:
  2490  000000                     
  2491                           ;pomiar.c: 977: if(M._AKTYWNE_KNF)
  2492  00774A  0100               	movlb	(_M+24) shr (0+8)
  2493  00774C  5182               	movf	(_M+24)& (0+255),w,b
  2494  00774E  1183               	iorwf	(_M+25)& (0+255),w,b
  2495  007750  E00A               	bz	l306
  2496                           ;pomiar.c: 978: {
  2497  007752  EE01  F0BD         	lfsr	0,_DtKNF+11
  2498  007756  50EF               	movf	indf0,w,c
  2499  007758  E104               	bnz	l307
  2500                           ;pomiar.c: 984: {
  2501  00775A                     l314:
  2502                           ;pomiar.c: 988: case 2:
  2503  00775A  0E55               	movlw	85
  2504  00775C                     L9:
  2505  00775C  CFE8 F124          	movff	wreg,_DtCO+4
  2506  007760  D035               	goto	l309
  2507  007762                     l307:
  2508                           ;pomiar.c: 980: else DtCO.PPCO=55;
  2509  007762  0E37               	movlw	55
  2510  007764  D7FB               	goto	L9
  2511                           ;pomiar.c: 981: }
  2512  007766                     l306:
  2513                           ;pomiar.c: 982: else
  2514  007766  0100               	movlb	(_M+8) shr (0+8)
  2515  007768  5172               	movf	(_M+8)& (0+255),w,b
  2516  00776A  1173               	iorwf	(_M+9)& (0+255),w,b
  2517  00776C  E11B               	bnz	l312
  2518  00776E  0100               	movlb	(_M+6) shr (0+8)
  2519  007770  5170               	movf	(_M+6)& (0+255),w,b
  2520  007772  1171               	iorwf	(_M+7)& (0+255),w,b
  2521  007774  E117               	bnz	l312
  2522  007776  0100               	movlb	(_M+14) shr (0+8)
  2523  007778  5178               	movf	(_M+14)& (0+255),w,b
  2524  00777A  1179               	iorwf	(_M+15)& (0+255),w,b
  2525  00777C  E01E               	bz	l310
  2526  00777E  D012               	goto	l312
  2527                           ;pomiar.c: 991: break;
  2528  007780                     l315:
  2529  007780  D00F               	goto	l319
  2530                           ;pomiar.c: 992: }
  2531                           ;pomiar.c: 994: {
  2532                           ;pomiar.c: 996: break;
  2533  007782                     l316:
  2534                           ;pomiar.c: 997: }
  2535                           ;pomiar.c: 999: {
  2536  007782  0100               	movlb	(_M+8) shr (0+8)
  2537  007784  5172               	movf	(_M+8)& (0+255),w,b
  2538  007786  1173               	iorwf	(_M+9)& (0+255),w,b
  2539  007788  E104               	bnz	u1950
  2540  00778A  0100               	movlb	(_M+6) shr (0+8)
  2541  00778C  5170               	movf	(_M+6)& (0+255),w,b
  2542  00778E  1171               	iorwf	(_M+7)& (0+255),w,b
  2543  007790  E003               	bz	l317
  2544  007792                     u1950:
  2545                           ;pomiar.c: 1001: {
  2546  007792  C130  F124         	movff	_DtCO+16,_DtCO+4
  2547                           ;pomiar.c: 1004: }
  2548  007796  D01A               	goto	l309
  2549  007798                     l317:
  2550                           ;pomiar.c: 1005: else
  2551  007798  C130  FFE8         	movff	_DtCO+16,wreg
  2552  00779C  0F02               	addlw	2
  2553  00779E  D7DE               	goto	L9
  2554                           ;pomiar.c: 1009: }
  2555  0077A0                     l319:
  2556                           ;pomiar.c: 1011: }
  2557                           ;pomiar.c: 1013: {
  2558  0077A0  0E59               	movlw	89
  2559  0077A2  D7DC               	goto	L9
  2560                           ;pomiar.c: 1015: break;
  2561  0077A4                     l312:
  2562  0077A4  C1B9  FFE8         	movff	_DtKNF+7,wreg
  2563  0077A8  0A00               	xorlw	0
  2564  0077AA  E0EB               	bz	l316
  2565  0077AC  0A01               	xorlw	1
  2566  0077AE  E0D5               	bz	l314
  2567  0077B0  0A03               	xorlw	3
  2568  0077B2  E0D3               	bz	l314
  2569  0077B4  0A01               	xorlw	1
  2570  0077B6  E0E4               	bz	l315
  2571  0077B8  D7F3               	goto	l319
  2572                           ;pomiar.c: 1018: }
  2573  0077BA                     l310:
  2574                           ;pomiar.c: 1019: else
  2575  0077BA  0100               	movlb	(_M+22) shr (0+8)
  2576  0077BC  5180               	movf	(_M+22)& (0+255),w,b
  2577  0077BE  1181               	iorwf	(_M+23)& (0+255),w,b
  2578  0077C0  E003               	bz	l321
  2579  0077C2  C127  F124         	movff	_DtCO+7,_DtCO+4
  2580  0077C6  D002               	goto	l309
  2581  0077C8                     l321:
  2582                           ;pomiar.c: 1021: else
  2583  0077C8  C123  F124         	movff	_DtCO+3,_DtCO+4
  2584  0077CC                     l309:
  2585                           ;pomiar.c: 1024: }
  2586  0077CC  EE01  F0BD         	lfsr	0,_DtKNF+11
  2587  0077D0  50EF               	movf	indf0,w,c
  2588  0077D2  E109               	bnz	l323
  2589                           ;pomiar.c: 1027: {
  2590  0077D4  0100               	movlb	(_M+4) shr (0+8)
  2591  0077D6  516E               	movf	(_M+4)& (0+255),w,b
  2592  0077D8  116F               	iorwf	(_M+5)& (0+255),w,b
  2593  0077DA  E103               	bnz	l324
  2594  0077DC                     u1980:
  2595  0077DC  C124  F0AA         	movff	_DtCO+4,_RSDT1+13
  2596  0077E0  D00B               	goto	l326
  2597  0077E2                     l324:
  2598                           ;pomiar.c: 1029: else
  2599  0077E2  0E58               	movlw	88
  2600  0077E4  D005               	goto	L56
  2601                           ;pomiar.c: 1032: RSDT1.outPPCO=88;
  2602                           ;pomiar.c: 1033: }
  2603  0077E6                     l323:
  2604                           ;pomiar.c: 1035: else
  2605  0077E6  0100               	movlb	(_M+4) shr (0+8)
  2606  0077E8  516E               	movf	(_M+4)& (0+255),w,b
  2607  0077EA  116F               	iorwf	(_M+5)& (0+255),w,b
  2608  0077EC  E0F7               	bz	u1980
  2609                           ;pomiar.c: 1038: else
  2610  0077EE  0E3A               	movlw	58
  2611  0077F0                     L56:
  2612  0077F0  CFE8 F124          	movff	wreg,_DtCO+4
  2613                           ;pomiar.c: 1041: RSDT1.outPPCO=58;
  2614  0077F4  CFE8 F0AA          	movff	wreg,_RSDT1+13
  2615  0077F8                     l326:
  2616                           ;pomiar.c: 1042: }
  2617  0077F8  0100               	movlb	(_M+12) shr (0+8)
  2618  0077FA  5176               	movf	(_M+12)& (0+255),w,b
  2619  0077FC  1177               	iorwf	(_M+13)& (0+255),w,b
  2620  0077FE  B4D8               	btfsc	status,2,c
  2621  007800  0012               	return	
  2622                           ;pomiar.c: 1045: {
  2623  007802  0E14               	movlw	20
  2624  007804  CFE8 F124          	movff	wreg,_DtCO+4
  2625                           ;pomiar.c: 1047: RSDT1.outPPCO=20;
  2626  007808  CFE8 F0AA          	movff	wreg,_RSDT1+13
  2627                           ;pomiar.c: 1048: }
  2628  00780C  0C14               	retlw	20
  2629  00780E                     __end_of_SetModPCO:
  2630                           ;pomiar.c: 1085: unsigned char GetPGD_PCO(void)
  2631                           ;pomiar.c: 1086: {
  2632  00780E                     _GetPGD_PCO:
  2633  000000                     
  2634                           ;	_m assigned to ?a_GetPGD_PCO+0
  2635  000000                     _GetPGD_PCO$m	set	?a_GetPGD_PCO
  2636                           ;pomiar.c: 1087: unsigned char p;
  2637  00780E  EE01  F0BD         	lfsr	0,_DtKNF+11
  2638  007812  50EF               	movf	indf0,w,c
  2639  007814  E001 D0CC          	bnz	l331
  2640                           ;pomiar.c: 1091: {
  2641  007818  EE01  F023         	lfsr	0,_DtCO+3
  2642  00781C  50EF               	movf	indf0,w,c
  2643  00781E  E101 D0B0          	bz	l332
  2644                           ;pomiar.c: 1093: {
  2645  007822  C10B  FFE8         	movff	_DtZW+3,wreg
  2646  007826  0A80               	xorlw	128
  2647  007828  0F67               	addlw	-153
  2648  00782A  E301 D093          	bc	l333
  2649                           ;pomiar.c: 1095: {
  2650  00782E  C123  F002         	movff	_DtCO+3,btemp+2
  2651  007832  6A03               	clrf	btemp+3,c
  2652  007834  C10B  FFF6         	movff	_DtZW+3,tblptrl
  2653  007838  6AF7               	clrf	tblptrh,c
  2654  00783A  BEF6               	btfsc	tblptrl,7,c
  2655  00783C  06F7               	decf	tblptrh,f,c
  2656  00783E  0E19               	movlw	25
  2657  007840  6E00               	movwf	btemp,c
  2658  007842  6A01               	clrf	btemp+1,c
  2659  007844  50F6               	movf	tblptrl,w,c
  2660  007846  5E00               	subwf	btemp,f,c
  2661  007848  50F7               	movf	tblptrh,w,c
  2662  00784A  5A01               	subwfb	btemp+1,f,c
  2663  00784C  ECBF  F062         	call	awmul
  2664  007850  0100               	movlb	__Lparam shr (0+8)
  2665  007852  C004  F0EC         	movff	btemp+4,?a_GetPGD_PCO
  2666  007856  C005  F0ED         	movff	btemp+5,?a_GetPGD_PCO+1
  2667  00785A  0E00               	movlw	0
  2668  00785C  BFED               	btfsc	(?a_GetPGD_PCO+1)^(__Lparam& (0+65280)),7
      +                          ,b
  2669  00785E  0EFF               	movlw	-1
  2670  007860  6FEE               	movwf	(?a_GetPGD_PCO+2)^(__Lparam& (0+65280)),b
  2671  007862  6FEF               	movwf	(?a_GetPGD_PCO+3)^(__Lparam& (0+65280)),b
  2672                           ;pomiar.c: 1097: m*=(85-40);
  2673  007864  0E2D               	movlw	45
  2674  007866  6E04               	movwf	btemp+4,c
  2675  007868  6A05               	clrf	btemp+5,c
  2676  00786A  6A06               	clrf	btemp+6,c
  2677  00786C  6A07               	clrf	btemp+7,c
  2678  00786E  0EEC               	movlw	low ?a_GetPGD_PCO
  2679  007870  6EE9               	movwf	fsr0l,c
  2680  007872  0E00               	movlw	high ?a_GetPGD_PCO
  2681  007874  6EEA               	movwf	fsr0h,c
  2682  007876  ECDB  F062         	call	almul_f
  2683                           ;pomiar.c: 1098: m*=100;
  2684  00787A  0E64               	movlw	100
  2685  00787C  6E04               	movwf	btemp+4,c
  2686  00787E  6A05               	clrf	btemp+5,c
  2687  007880  6A06               	clrf	btemp+6,c
  2688  007882  6A07               	clrf	btemp+7,c
  2689  007884  0EEC               	movlw	low ?a_GetPGD_PCO
  2690  007886  6EE9               	movwf	fsr0l,c
  2691  007888  0E00               	movlw	high ?a_GetPGD_PCO
  2692  00788A  6EEA               	movwf	fsr0h,c
  2693  00788C  ECDB  F062         	call	almul_f
  2694                           ;pomiar.c: 1099: m/=1485;
  2695  007890  0ECD               	movlw	205
  2696  007892  6E04               	movwf	btemp+4,c
  2697  007894  0E05               	movlw	5
  2698  007896  6E05               	movwf	btemp+5,c
  2699  007898  6A06               	clrf	btemp+6,c
  2700  00789A  6A07               	clrf	btemp+7,c
  2701  00789C  0EEC               	movlw	low ?a_GetPGD_PCO
  2702  00789E  6EE9               	movwf	fsr0l,c
  2703  0078A0  0E00               	movlw	high ?a_GetPGD_PCO
  2704  0078A2  6EEA               	movwf	fsr0h,c
  2705  0078A4  ECEF  F062         	call	aldiv_f
  2706                           ;pomiar.c: 1100: if((40+m/100)>85) return 85;
  2707  0078A8  0E64               	movlw	100
  2708  0078AA  6E04               	movwf	btemp+4,c
  2709  0078AC  6A05               	clrf	btemp+5,c
  2710  0078AE  6A06               	clrf	btemp+6,c
  2711  0078B0  6A07               	clrf	btemp+7,c
  2712  0078B2  C0EC  F000         	movff	?a_GetPGD_PCO,btemp
  2713  0078B6  C0ED  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  2714  0078BA  C0EE  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  2715  0078BE  C0EF  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  2716  0078C2  EC4F  F062         	call	aldiv
  2717  0078C6  0E28               	movlw	40
  2718  0078C8  2400               	addwf	btemp,w,c
  2719  0078CA  6E04               	movwf	btemp+4,c
  2720  0078CC  0E00               	movlw	0
  2721  0078CE  2001               	addwfc	btemp+1,w,c
  2722  0078D0  6E05               	movwf	btemp+5,c
  2723  0078D2  0E00               	movlw	0
  2724  0078D4  2002               	addwfc	btemp+2,w,c
  2725  0078D6  6E06               	movwf	btemp+6,c
  2726  0078D8  0E00               	movlw	0
  2727  0078DA  2003               	addwfc	btemp+3,w,c
  2728  0078DC  6E07               	movwf	btemp+7,c
  2729  0078DE  5007               	movf	btemp+7,w,c
  2730  0078E0  0A80               	xorlw	128
  2731  0078E2  0F80               	addlw	128
  2732  0078E4  E108               	bnz	u2045
  2733  0078E6  0E00               	movlw	0
  2734  0078E8  5C06               	subwf	btemp+6,w,c
  2735  0078EA  E105               	bnz	u2045
  2736  0078EC  0E00               	movlw	0
  2737  0078EE  5C05               	subwf	btemp+5,w,c
  2738  0078F0  E102               	bnz	u2045
  2739  0078F2  0E56               	movlw	86
  2740  0078F4  5C04               	subwf	btemp+4,w,c
  2741  0078F6                     u2045:
  2742  0078F6  E301               	bnc	l334
  2743  0078F8  0C55               	retlw	85
  2744  0078FA                     l334:
  2745                           ;pomiar.c: 1101: else p=40+m/100;
  2746  0078FA  0E64               	movlw	100
  2747  0078FC  6E04               	movwf	btemp+4,c
  2748  0078FE  6A05               	clrf	btemp+5,c
  2749  007900  6A06               	clrf	btemp+6,c
  2750  007902  6A07               	clrf	btemp+7,c
  2751  007904  C0EC  F000         	movff	?a_GetPGD_PCO,btemp
  2752  007908  C0ED  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  2753  00790C  C0EE  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  2754  007910  C0EF  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  2755  007914  EC4F  F062         	call	aldiv
  2756  007918  5000               	movf	btemp,w,c
  2757  00791A  0F28               	addlw	40
  2758  00791C  6ED9               	movwf	fsr2l,c
  2759                           ;pomiar.c: 1103: if(p<40) p=40;
  2760  00791E  0E28               	movlw	40
  2761  007920  60D9               	cpfslt	fsr2l,c
  2762  007922  D001               	goto	l336
  2763  007924  6ED9               	movwf	fsr2l,c
  2764  007926                     l336:
  2765                           ;pomiar.c: 1104: if((p+DtKNF.prop)<85) p=p+DtKNF
      +                          .prop;
  2766  007926  C1C7  FFE8         	movff	_DtKNF+21,wreg
  2767  00792A  CFD9 F000          	movff	fsr2l,btemp
  2768  00792E  6A01               	clrf	btemp+1,c
  2769  007930  2600               	addwf	btemp,f,c
  2770  007932  0E00               	movlw	0
  2771  007934  2201               	addwfc	btemp+1,f,c
  2772  007936  5001               	movf	btemp+1,w,c
  2773  007938  0A80               	xorlw	128
  2774  00793A  0F80               	addlw	-128
  2775  00793C  0E55               	movlw	85
  2776  00793E  B4D8               	btfsc	status,2,c
  2777  007940  5C00               	subwf	btemp,w,c
  2778  007942  E204               	bc	l337
  2779  007944  C1C7  FFE8         	movff	_DtKNF+21,wreg
  2780  007948  26D9               	addwf	fsr2l,f,c
  2781  00794A  D002               	goto	l338
  2782  00794C                     l337:
  2783                           ;pomiar.c: 1105: else p=85;
  2784  00794C  0E55               	movlw	85
  2785  00794E  6ED9               	movwf	fsr2l,c
  2786  007950                     l338:
  2787                           ;pomiar.c: 1106: return p;
  2788  007950  50D9               	movf	fsr2l,w,c
  2789  007952  0012               	return	
  2790  007954                     l333:
  2791                           ;pomiar.c: 1108: else
  2792  007954  0E28               	movlw	40
  2793  007956  6ED9               	movwf	fsr2l,c
  2794                           ;pomiar.c: 1111: if((p+DtKNF.prop)<85) p=p+DtKNF
      +                          .prop;
  2795  007958  C1C7  F000         	movff	_DtKNF+21,btemp
  2796  00795C  6A01               	clrf	btemp+1,c
  2797  00795E  2600               	addwf	btemp,f,c
  2798  007960  0E00               	movlw	0
  2799  007962  2201               	addwfc	btemp+1,f,c
  2800  007964  5001               	movf	btemp+1,w,c
  2801  007966  0A80               	xorlw	128
  2802  007968  0F80               	addlw	-128
  2803  00796A  0E55               	movlw	85
  2804  00796C  B4D8               	btfsc	status,2,c
  2805  00796E  5C00               	subwf	btemp,w,c
  2806  007970  E204               	bc	l340
  2807  007972  C1C7  FFE8         	movff	_DtKNF+21,wreg
  2808  007976  26D9               	addwf	fsr2l,f,c
  2809  007978  D002               	goto	l341
  2810  00797A                     l340:
  2811                           ;pomiar.c: 1112: else p=85;
  2812  00797A  0E55               	movlw	85
  2813  00797C  6ED9               	movwf	fsr2l,c
  2814  00797E                     l341:
  2815                           ;pomiar.c: 1113: return p;
  2816  00797E  50D9               	movf	fsr2l,w,c
  2817  007980  0012               	return	
  2818  007982                     l332:
  2819                           ;pomiar.c: 1116: else
  2820  007982  0E28               	movlw	40
  2821  007984  6ED9               	movwf	fsr2l,c
  2822                           ;pomiar.c: 1119: if((p+DtKNF.prop)<85) p=p+DtKNF
      +                          .prop;
  2823  007986  C1C7  F000         	movff	_DtKNF+21,btemp
  2824  00798A  6A01               	clrf	btemp+1,c
  2825  00798C  2600               	addwf	btemp,f,c
  2826  00798E  0E00               	movlw	0
  2827  007990  2201               	addwfc	btemp+1,f,c
  2828  007992  5001               	movf	btemp+1,w,c
  2829  007994  0A80               	xorlw	128
  2830  007996  0F80               	addlw	-128
  2831  007998  0E55               	movlw	85
  2832  00799A  B4D8               	btfsc	status,2,c
  2833  00799C  5C00               	subwf	btemp,w,c
  2834  00799E  E204               	bc	l343
  2835  0079A0  C1C7  FFE8         	movff	_DtKNF+21,wreg
  2836  0079A4  26D9               	addwf	fsr2l,f,c
  2837  0079A6  D002               	goto	l344
  2838  0079A8                     l343:
  2839                           ;pomiar.c: 1120: else p=85;
  2840  0079A8  0E55               	movlw	85
  2841  0079AA  6ED9               	movwf	fsr2l,c
  2842  0079AC                     l344:
  2843                           ;pomiar.c: 1121: return p;
  2844  0079AC  50D9               	movf	fsr2l,w,c
  2845  0079AE  0012               	return	
  2846  0079B0                     l331:
  2847                           ;pomiar.c: 1124: else
  2848  0079B0  EE01  F023         	lfsr	0,_DtCO+3
  2849  0079B4  50EF               	movf	indf0,w,c
  2850  0079B6  E101 D0B0          	bz	l346
  2851                           ;pomiar.c: 1127: {
  2852  0079BA  C10B  FFE8         	movff	_DtZW+3,wreg
  2853  0079BE  0A80               	xorlw	128
  2854  0079C0  0F67               	addlw	-153
  2855  0079C2  E301 D093          	bc	l347
  2856                           ;pomiar.c: 1129: {
  2857  0079C6  C123  F002         	movff	_DtCO+3,btemp+2
  2858  0079CA  6A03               	clrf	btemp+3,c
  2859  0079CC  C10B  FFF6         	movff	_DtZW+3,tblptrl
  2860  0079D0  6AF7               	clrf	tblptrh,c
  2861  0079D2  BEF6               	btfsc	tblptrl,7,c
  2862  0079D4  06F7               	decf	tblptrh,f,c
  2863  0079D6  0E19               	movlw	25
  2864  0079D8  6E00               	movwf	btemp,c
  2865  0079DA  6A01               	clrf	btemp+1,c
  2866  0079DC  50F6               	movf	tblptrl,w,c
  2867  0079DE  5E00               	subwf	btemp,f,c
  2868  0079E0  50F7               	movf	tblptrh,w,c
  2869  0079E2  5A01               	subwfb	btemp+1,f,c
  2870  0079E4  ECBF  F062         	call	awmul
  2871  0079E8  0100               	movlb	__Lparam shr (0+8)
  2872  0079EA  C004  F0EC         	movff	btemp+4,?a_GetPGD_PCO
  2873  0079EE  C005  F0ED         	movff	btemp+5,?a_GetPGD_PCO+1
  2874  0079F2  0E00               	movlw	0
  2875  0079F4  BFED               	btfsc	(?a_GetPGD_PCO+1)^(__Lparam& (0+65280)),7
      +                          ,b
  2876  0079F6  0EFF               	movlw	-1
  2877  0079F8  6FEE               	movwf	(?a_GetPGD_PCO+2)^(__Lparam& (0+65280)),b
  2878  0079FA  6FEF               	movwf	(?a_GetPGD_PCO+3)^(__Lparam& (0+65280)),b
  2879                           ;pomiar.c: 1131: m*=(55-35);
  2880  0079FC  0E14               	movlw	20
  2881  0079FE  6E04               	movwf	btemp+4,c
  2882  007A00  6A05               	clrf	btemp+5,c
  2883  007A02  6A06               	clrf	btemp+6,c
  2884  007A04  6A07               	clrf	btemp+7,c
  2885  007A06  0EEC               	movlw	low ?a_GetPGD_PCO
  2886  007A08  6EE9               	movwf	fsr0l,c
  2887  007A0A  0E00               	movlw	high ?a_GetPGD_PCO
  2888  007A0C  6EEA               	movwf	fsr0h,c
  2889  007A0E  ECDB  F062         	call	almul_f
  2890                           ;pomiar.c: 1132: m*=100;
  2891  007A12  0E64               	movlw	100
  2892  007A14  6E04               	movwf	btemp+4,c
  2893  007A16  6A05               	clrf	btemp+5,c
  2894  007A18  6A06               	clrf	btemp+6,c
  2895  007A1A  6A07               	clrf	btemp+7,c
  2896  007A1C  0EEC               	movlw	low ?a_GetPGD_PCO
  2897  007A1E  6EE9               	movwf	fsr0l,c
  2898  007A20  0E00               	movlw	high ?a_GetPGD_PCO
  2899  007A22  6EEA               	movwf	fsr0h,c
  2900  007A24  ECDB  F062         	call	almul_f
  2901                           ;pomiar.c: 1133: m/=1485;
  2902  007A28  0ECD               	movlw	205
  2903  007A2A  6E04               	movwf	btemp+4,c
  2904  007A2C  0E05               	movlw	5
  2905  007A2E  6E05               	movwf	btemp+5,c
  2906  007A30  6A06               	clrf	btemp+6,c
  2907  007A32  6A07               	clrf	btemp+7,c
  2908  007A34  0EEC               	movlw	low ?a_GetPGD_PCO
  2909  007A36  6EE9               	movwf	fsr0l,c
  2910  007A38  0E00               	movlw	high ?a_GetPGD_PCO
  2911  007A3A  6EEA               	movwf	fsr0h,c
  2912  007A3C  ECEF  F062         	call	aldiv_f
  2913                           ;pomiar.c: 1134: if((35+m/100)>55) return 55;
  2914  007A40  0E64               	movlw	100
  2915  007A42  6E04               	movwf	btemp+4,c
  2916  007A44  6A05               	clrf	btemp+5,c
  2917  007A46  6A06               	clrf	btemp+6,c
  2918  007A48  6A07               	clrf	btemp+7,c
  2919  007A4A  C0EC  F000         	movff	?a_GetPGD_PCO,btemp
  2920  007A4E  C0ED  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  2921  007A52  C0EE  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  2922  007A56  C0EF  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  2923  007A5A  EC4F  F062         	call	aldiv
  2924  007A5E  0E23               	movlw	35
  2925  007A60  2400               	addwf	btemp,w,c
  2926  007A62  6E04               	movwf	btemp+4,c
  2927  007A64  0E00               	movlw	0
  2928  007A66  2001               	addwfc	btemp+1,w,c
  2929  007A68  6E05               	movwf	btemp+5,c
  2930  007A6A  0E00               	movlw	0
  2931  007A6C  2002               	addwfc	btemp+2,w,c
  2932  007A6E  6E06               	movwf	btemp+6,c
  2933  007A70  0E00               	movlw	0
  2934  007A72  2003               	addwfc	btemp+3,w,c
  2935  007A74  6E07               	movwf	btemp+7,c
  2936  007A76  5007               	movf	btemp+7,w,c
  2937  007A78  0A80               	xorlw	128
  2938  007A7A  0F80               	addlw	128
  2939  007A7C  E108               	bnz	u2115
  2940  007A7E  0E00               	movlw	0
  2941  007A80  5C06               	subwf	btemp+6,w,c
  2942  007A82  E105               	bnz	u2115
  2943  007A84  0E00               	movlw	0
  2944  007A86  5C05               	subwf	btemp+5,w,c
  2945  007A88  E102               	bnz	u2115
  2946  007A8A  0E38               	movlw	56
  2947  007A8C  5C04               	subwf	btemp+4,w,c
  2948  007A8E                     u2115:
  2949  007A8E  E301               	bnc	l348
  2950  007A90  0C37               	retlw	55
  2951  007A92                     l348:
  2952                           ;pomiar.c: 1135: else p=35+m/100;
  2953  007A92  0E64               	movlw	100
  2954  007A94  6E04               	movwf	btemp+4,c
  2955  007A96  6A05               	clrf	btemp+5,c
  2956  007A98  6A06               	clrf	btemp+6,c
  2957  007A9A  6A07               	clrf	btemp+7,c
  2958  007A9C  C0EC  F000         	movff	?a_GetPGD_PCO,btemp
  2959  007AA0  C0ED  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  2960  007AA4  C0EE  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  2961  007AA8  C0EF  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  2962  007AAC  EC4F  F062         	call	aldiv
  2963  007AB0  5000               	movf	btemp,w,c
  2964  007AB2  0F23               	addlw	35
  2965  007AB4  6ED9               	movwf	fsr2l,c
  2966                           ;pomiar.c: 1137: if(p<35) p=35;
  2967  007AB6  0E23               	movlw	35
  2968  007AB8  60D9               	cpfslt	fsr2l,c
  2969  007ABA  D001               	goto	l350
  2970  007ABC  6ED9               	movwf	fsr2l,c
  2971  007ABE                     l350:
  2972                           ;pomiar.c: 1138: if((p+DtKNF.prop)<55) p=p+DtKNF
      +                          .prop;
  2973  007ABE  C1C7  FFE8         	movff	_DtKNF+21,wreg
  2974  007AC2  CFD9 F000          	movff	fsr2l,btemp
  2975  007AC6  6A01               	clrf	btemp+1,c
  2976  007AC8  2600               	addwf	btemp,f,c
  2977  007ACA  0E00               	movlw	0
  2978  007ACC  2201               	addwfc	btemp+1,f,c
  2979  007ACE  5001               	movf	btemp+1,w,c
  2980  007AD0  0A80               	xorlw	128
  2981  007AD2  0F80               	addlw	-128
  2982  007AD4  0E37               	movlw	55
  2983  007AD6  B4D8               	btfsc	status,2,c
  2984  007AD8  5C00               	subwf	btemp,w,c
  2985  007ADA  E204               	bc	l351
  2986  007ADC  C1C7  FFE8         	movff	_DtKNF+21,wreg
  2987  007AE0  26D9               	addwf	fsr2l,f,c
  2988  007AE2  D002               	goto	l352
  2989  007AE4                     l351:
  2990                           ;pomiar.c: 1139: else p=55;
  2991  007AE4  0E37               	movlw	55
  2992  007AE6  6ED9               	movwf	fsr2l,c
  2993  007AE8                     l352:
  2994                           ;pomiar.c: 1140: return p;
  2995  007AE8  50D9               	movf	fsr2l,w,c
  2996  007AEA  0012               	return	
  2997  007AEC                     l347:
  2998                           ;pomiar.c: 1142: else
  2999  007AEC  0E23               	movlw	35
  3000  007AEE  6ED9               	movwf	fsr2l,c
  3001                           ;pomiar.c: 1145: if((p+DtKNF.prop)<55) p=p+DtKNF
      +                          .prop;
  3002  007AF0  C1C7  F000         	movff	_DtKNF+21,btemp
  3003  007AF4  6A01               	clrf	btemp+1,c
  3004  007AF6  2600               	addwf	btemp,f,c
  3005  007AF8  0E00               	movlw	0
  3006  007AFA  2201               	addwfc	btemp+1,f,c
  3007  007AFC  5001               	movf	btemp+1,w,c
  3008  007AFE  0A80               	xorlw	128
  3009  007B00  0F80               	addlw	-128
  3010  007B02  0E37               	movlw	55
  3011  007B04  B4D8               	btfsc	status,2,c
  3012  007B06  5C00               	subwf	btemp,w,c
  3013  007B08  E204               	bc	l354
  3014  007B0A  C1C7  FFE8         	movff	_DtKNF+21,wreg
  3015  007B0E  26D9               	addwf	fsr2l,f,c
  3016  007B10  D002               	goto	l355
  3017  007B12                     l354:
  3018                           ;pomiar.c: 1146: else p=55;
  3019  007B12  0E37               	movlw	55
  3020  007B14  6ED9               	movwf	fsr2l,c
  3021  007B16                     l355:
  3022                           ;pomiar.c: 1147: return p;
  3023  007B16  50D9               	movf	fsr2l,w,c
  3024  007B18  0012               	return	
  3025  007B1A                     l346:
  3026                           ;pomiar.c: 1150: else
  3027  007B1A  0E23               	movlw	35
  3028  007B1C  6ED9               	movwf	fsr2l,c
  3029                           ;pomiar.c: 1153: if((p+DtKNF.prop)<55) p=p+DtKNF
      +                          .prop;
  3030  007B1E  C1C7  F000         	movff	_DtKNF+21,btemp
  3031  007B22  6A01               	clrf	btemp+1,c
  3032  007B24  2600               	addwf	btemp,f,c
  3033  007B26  0E00               	movlw	0
  3034  007B28  2201               	addwfc	btemp+1,f,c
  3035  007B2A  5001               	movf	btemp+1,w,c
  3036  007B2C  0A80               	xorlw	128
  3037  007B2E  0F80               	addlw	-128
  3038  007B30  0E37               	movlw	55
  3039  007B32  B4D8               	btfsc	status,2,c
  3040  007B34  5C00               	subwf	btemp,w,c
  3041  007B36  E204               	bc	l357
  3042  007B38  C1C7  FFE8         	movff	_DtKNF+21,wreg
  3043  007B3C  26D9               	addwf	fsr2l,f,c
  3044  007B3E  D002               	goto	l358
  3045  007B40                     l357:
  3046                           ;pomiar.c: 1154: else p=55;
  3047  007B40  0E37               	movlw	55
  3048  007B42  6ED9               	movwf	fsr2l,c
  3049  007B44                     l358:
  3050                           ;pomiar.c: 1155: return p;
  3051  007B44  50D9               	movf	fsr2l,w,c
  3052  007B46  0012               	return	
  3053                           ;pomiar.c: 1156: }
  3054  007B48                     __end_of_GetPGD_PCO:
  3055                           ;pomiar.c: 1161: void WritePCO(void)
  3056                           ;pomiar.c: 1162: {
  3057  007B48                     _WritePCO:
  3058  000000                     
  3059                           ;pomiar.c: 1163: if(DtCO._newPCO&&RTdS(6)>=10)
  3060  007B48  0101               	movlb	(_DtCO+1) shr (0+8)
  3061  007B4A  AF21               	btfss	(_DtCO+1)& (0+255),7,b
  3062  007B4C  0012               	return	
  3063  007B4E  0E06               	movlw	6
  3064  007B50  EC29  F05C         	call	_RTdS
  3065  007B54  6E00               	movwf	btemp,c
  3066  007B56  0E0A               	movlw	10
  3067  007B58  5C00               	subwf	btemp,w,c
  3068  007B5A  A0D8               	btfss	status,0,c
  3069  007B5C  0012               	return	
  3070                           ;pomiar.c: 1164: {
  3071  007B5E  0101               	movlb	(_DtCO+1) shr (0+8)
  3072  007B60  9F21               	bcf	(_DtCO+1)& (0+255),7,b
  3073                           ;pomiar.c: 1166: StartRTdS(6);
  3074  007B62  0E06               	movlw	6
  3075  007B64  EC17  F05C         	call	_StartRTdS
  3076                           ;pomiar.c: 1167: WriteEEPCO();
  3077  007B68  EF99  F04C         	goto	_WriteEEPCO	;wreg free
  3078                           ;pomiar.c: 1168: }
  3079  007B6C                     __end_of_WritePCO:
  3080                           ;pomiar.c: 1172: void PomiarPCO(void)
  3081                           ;pomiar.c: 1173: {
  3082  007B6C                     _PomiarPCO:
  3083  000000                     
  3084                           ;pomiar.c: 1174: static unsigned char pnst;
  3085  007B6C  0100               	movlb	(_M+22) shr (0+8)
  3086  007B6E  5180               	movf	(_M+22)& (0+255),w,b
  3087  007B70  1181               	iorwf	(_M+23)& (0+255),w,b
  3088  007B72  E10E               	bnz	l362
  3089                           ;pomiar.c: 1178: {
  3090  007B74  EE01  F0BD         	lfsr	0,_DtKNF+11
  3091  007B78  50EF               	movf	indf0,w,c
  3092  007B7A  E105               	bnz	l363
  3093                           ;pomiar.c: 1180: {
  3094  007B7C  0E28               	movlw	40
  3095  007B7E  CFE8 F125          	movff	wreg,_DtCO+5
  3096                           ;pomiar.c: 1182: DtCO.maxPCO=85;
  3097  007B82  0E55               	movlw	85
  3098  007B84  D008               	goto	L10
  3099                           ;pomiar.c: 1183: }
  3100  007B86                     l363:
  3101                           ;pomiar.c: 1184: else
  3102  007B86  0E23               	movlw	35
  3103  007B88  CFE8 F125          	movff	wreg,_DtCO+5
  3104                           ;pomiar.c: 1187: DtCO.maxPCO=55;
  3105  007B8C  0E37               	movlw	55
  3106  007B8E  D003               	goto	L10
  3107                           ;pomiar.c: 1188: }
  3108  007B90                     l362:
  3109                           ;pomiar.c: 1190: else
  3110  007B90  0101               	movlb	(_DtCO+5) shr (0+8)
  3111  007B92  6B25               	clrf	(_DtCO+5)& (0+255),b
  3112                           ;pomiar.c: 1193: DtCO.maxPCO=99;
  3113  007B94  0E63               	movlw	99
  3114  007B96                     L10:
  3115  007B96  CFE8 F126          	movff	wreg,_DtCO+6
  3116                           ;pomiar.c: 1194: }
  3117  007B9A  C125  F0A6         	movff	_DtCO+5,_RSDT1+9
  3118                           ;pomiar.c: 1196: RSDT1.outPCOmx=DtCO.maxPCO;
  3119  007B9E  C126  F0A7         	movff	_DtCO+6,_RSDT1+10
  3120                           ;pomiar.c: 1197: if(!GetBit2(RSDT1.inSTAT0,7)&&M
      +                          GSD._CON)
  3121  007BA2  0E07               	movlw	7
  3122  007BA4  0100               	movlb	__Lparam shr (0+8)
  3123  007BA6  6FEC               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3124  007BA8  C0D3  FFE8         	movff	_RSDT1+54,wreg
  3125  007BAC  EC06  F061         	call	_GetBit2
  3126  007BB0  E221               	bc	l366
  3127  007BB2  0101               	movlb	_MGSD shr (0+8)
  3128  007BB4  AD99               	btfss	_MGSD& (0+255),6,b
  3129  007BB6  D01E               	goto	l366
  3130                           ;pomiar.c: 1198: {
  3131  007BB8  C0D1  FEB0         	movff	_RSDT1+52,F1561
  3132                           ;pomiar.c: 1200: if(pnst<DtCO.minPCO) pnst=DtCO.
      +                          minPCO;
  3133  007BBC  C125  FFE8         	movff	_DtCO+5,wreg
  3134  007BC0  010E               	movlb	F1561 shr (0+8)
  3135  007BC2  61B0               	cpfslt	F1561& (0+255),b
  3136  007BC4  D002               	goto	l367
  3137  007BC6  C125  FEB0         	movff	_DtCO+5,F1561
  3138  007BCA                     l367:
  3139                           ;pomiar.c: 1201: if(pnst>DtCO.maxPCO) pnst=DtCO.
      +                          maxPCO;
  3140  007BCA  CEB0  FFE8         	movff	F1561,wreg
  3141  007BCE  0101               	movlb	(_DtCO+6) shr (0+8)
  3142  007BD0  6126               	cpfslt	(_DtCO+6)& (0+255),b
  3143  007BD2  D002               	goto	l368
  3144  007BD4  C126  FEB0         	movff	_DtCO+6,F1561
  3145  007BD8                     l368:
  3146                           ;pomiar.c: 1202: if(DtCO.PCO!=pnst)
  3147  007BD8  C123  FFE8         	movff	_DtCO+3,wreg
  3148  007BDC  010E               	movlb	F1561 shr (0+8)
  3149  007BDE  19B0               	xorwf	F1561& (0+255),w,b
  3150  007BE0  E007               	bz	l369
  3151                           ;pomiar.c: 1203: {
  3152  007BE2  CEB0  F123         	movff	F1561,_DtCO+3
  3153                           ;pomiar.c: 1205: DtCO._newPCO=1;
  3154  007BE6  0101               	movlb	(_DtCO+1) shr (0+8)
  3155  007BE8  8F21               	bsf	(_DtCO+1)& (0+255),7,b
  3156                           ;pomiar.c: 1206: StartRTdS(6);
  3157  007BEA  0E06               	movlw	6
  3158  007BEC  EC17  F05C         	call	_StartRTdS
  3159  007BF0                     l369:
  3160                           ;pomiar.c: 1207: }
  3161  007BF0  DFAB               	call	_WritePCO	;wreg free
  3162  007BF2  D012               	goto	l372
  3163                           ;pomiar.c: 1209: RSDT1.outPCO=DtCO.PCO;
  3164                           ;pomiar.c: 1210: }
  3165  007BF4                     l366:
  3166                           ;pomiar.c: 1211: else
  3167  007BF4  ECA1  F04C         	call	_ReadEEPCO	;wreg free
  3168  007BF8  CFE8 F123          	movff	wreg,_DtCO+3
  3169                           ;pomiar.c: 1214: if(pnst<DtCO.minPCO) pnst=DtCO.
      +                          minPCO;
  3170  007BFC  C125  FFE8         	movff	_DtCO+5,wreg
  3171  007C00  010E               	movlb	F1561 shr (0+8)
  3172  007C02  61B0               	cpfslt	F1561& (0+255),b
  3173  007C04  D002               	goto	l371
  3174  007C06  C125  FEB0         	movff	_DtCO+5,F1561
  3175  007C0A                     l371:
  3176                           ;pomiar.c: 1215: if(pnst>DtCO.maxPCO) pnst=DtCO.
      +                          maxPCO;
  3177  007C0A  CEB0  FFE8         	movff	F1561,wreg
  3178  007C0E  0101               	movlb	(_DtCO+6) shr (0+8)
  3179  007C10  6126               	cpfslt	(_DtCO+6)& (0+255),b
  3180  007C12  D002               	goto	l372
  3181  007C14  C126  FEB0         	movff	_DtCO+6,F1561
  3182  007C18                     l372:
  3183                           ;pomiar.c: 1216: RSDT1.outPCO=DtCO.PCO;
  3184  007C18  C123  F0A4         	movff	_DtCO+3,_RSDT1+7
  3185                           ;pomiar.c: 1217: }
  3186  007C1C  0100               	movlb	(_M+22) shr (0+8)
  3187  007C1E  5180               	movf	(_M+22)& (0+255),w,b
  3188  007C20  1181               	iorwf	(_M+23)& (0+255),w,b
  3189  007C22  E003               	bz	l373
  3190  007C24  DDF4               	call	_GetPGD_PCO	;wreg free
  3191  007C26  CFE8 F127          	movff	wreg,_DtCO+7
  3192  007C2A                     l373:
  3193                           ;pomiar.c: 1220: SetModPCO();
  3194  007C2A  DD8F               	call	_SetModPCO	;wreg free
  3195                           ;pomiar.c: 1221: DtCO.DAD_CO=ReturnACfromNTC(DtC
      +                          O.PPCO-1);
  3196  007C2C  0101               	movlb	(_DtCO+4) shr (0+8)
  3197  007C2E  0524               	decf	(_DtCO+4)& (0+255),w,b
  3198  007C30  EC93  F05F         	call	_ReturnACfromNTC
  3199  007C34  CFE8 F12E          	movff	wreg,_DtCO+14
  3200                           ;pomiar.c: 1222: DtCO.MAD_CO=ReturnACfromNTC(DtC
      +                          O.PPCO-1-6);
  3201  007C38  C124  FFE8         	movff	_DtCO+4,wreg
  3202  007C3C  0FF9               	addlw	-7
  3203  007C3E  EC93  F05F         	call	_ReturnACfromNTC
  3204  007C42  CFE8 F12D          	movff	wreg,_DtCO+13
  3205                           ;pomiar.c: 1223: }
  3206  007C46  0012               	return	
  3207  007C48                     __end_of_PomiarPCO:
  3208                           ;pomiar.c: 1227: void WritePCW(void)
  3209                           ;pomiar.c: 1228: {
  3210  007C48                     _WritePCW:
  3211  000000                     
  3212                           ;pomiar.c: 1229: if(DtCW._newPCW&&RTdS(7)>=10)
  3213  007C48  0101               	movlb	(_DtCW+1) shr (0+8)
  3214  007C4A  A112               	btfss	(_DtCW+1)& (0+255),0,b
  3215  007C4C  0012               	return	
  3216  007C4E  0E07               	movlw	7
  3217  007C50  EC29  F05C         	call	_RTdS
  3218  007C54  6E00               	movwf	btemp,c
  3219  007C56  0E0A               	movlw	10
  3220  007C58  5C00               	subwf	btemp,w,c
  3221  007C5A  A0D8               	btfss	status,0,c
  3222  007C5C  0012               	return	
  3223                           ;pomiar.c: 1230: {
  3224  007C5E  0101               	movlb	(_DtCW+1) shr (0+8)
  3225  007C60  9112               	bcf	(_DtCW+1)& (0+255),0,b
  3226                           ;pomiar.c: 1232: StartRTdS(7);
  3227  007C62  0E07               	movlw	7
  3228  007C64  EC17  F05C         	call	_StartRTdS
  3229                           ;pomiar.c: 1233: WriteEEPCW();
  3230  007C68  EF8F  F04C         	goto	_WriteEEPCW	;wreg free
  3231                           ;pomiar.c: 1234: }
  3232  007C6C                     __end_of_WritePCW:
  3233                           ;pomiar.c: 1238: void SetModPCW(void)
  3234                           ;pomiar.c: 1239: {
  3235  007C6C                     _SetModPCW:
  3236  000000                     
  3237                           ;pomiar.c: 1240: if(M._AKTYWNE_KNF) DtCW.PPCW=60
      +                          ;
  3238  007C6C  0100               	movlb	(_M+24) shr (0+8)
  3239  007C6E  5182               	movf	(_M+24)& (0+255),w,b
  3240  007C70  1183               	iorwf	(_M+25)& (0+255),w,b
  3241  007C72  E002               	bz	l377
  3242  007C74  0E3C               	movlw	60
  3243  007C76  D009               	goto	L11
  3244  007C78                     l377:
  3245                           ;pomiar.c: 1241: else
  3246  007C78  EE01  F0B9         	lfsr	0,_DtKNF+7
  3247  007C7C  50EF               	movf	indf0,w,c
  3248  007C7E  E108               	bnz	l379
  3249  007C80  0100               	movlb	(_M+6) shr (0+8)
  3250  007C82  5170               	movf	(_M+6)& (0+255),w,b
  3251  007C84  1171               	iorwf	(_M+7)& (0+255),w,b
  3252  007C86  E004               	bz	l379
  3253  007C88  0E46               	movlw	70
  3254  007C8A                     L11:
  3255  007C8A  CFE8 F115          	movff	wreg,_DtCW+4
  3256  007C8E  D002               	goto	l378
  3257  007C90                     l379:
  3258                           ;pomiar.c: 1243: else DtCW.PPCW=DtCW.PCW;
  3259  007C90  C114  F115         	movff	_DtCW+3,_DtCW+4
  3260  007C94                     l378:
  3261                           ;pomiar.c: 1245: if(M._pob_DzCW)
  3262  007C94  0100               	movlb	(_M+14) shr (0+8)
  3263  007C96  5178               	movf	(_M+14)& (0+255),w,b
  3264  007C98  1179               	iorwf	(_M+15)& (0+255),w,b
  3265  007C9A  E003               	bz	l381
  3266                           ;pomiar.c: 1246: {
  3267  007C9C  0E0A               	movlw	10
  3268  007C9E  CFE8 F115          	movff	wreg,_DtCW+4
  3269  007CA2                     l381:
  3270                           ;pomiar.c: 1248: }
  3271  007CA2  C115  F0AB         	movff	_DtCW+4,_RSDT1+14
  3272                           ;pomiar.c: 1250: }
  3273  007CA6  0012               	return	
  3274  007CA8                     __end_of_SetModPCW:
  3275                           ;pomiar.c: 1253: void PomiarPCW(void)
  3276                           ;pomiar.c: 1254: {
  3277  007CA8                     _PomiarPCW:
  3278  000000                     
  3279                           ;pomiar.c: 1255: static unsigned char pnst;
  3280  007CA8  D006               	goto	l384
  3281  007CAA                     l386:
  3282                           ;pomiar.c: 1262: case 2:
  3283                           ;pomiar.c: 1265: DtCW.maxPCW=60;
  3284                           ;pomiar.c: 1266: break;
  3285  007CAA                     l387:
  3286  007CAA  D00F               	goto	L34
  3287                           ;pomiar.c: 1267: }
  3288                           ;pomiar.c: 1269: {
  3289                           ;pomiar.c: 1271: DtCW.maxPCW=60;
  3290                           ;pomiar.c: 1272: break;
  3291  007CAC                     l388:
  3292                           ;pomiar.c: 1273: }
  3293                           ;pomiar.c: 1275: {
  3294  007CAC  0E23               	movlw	35
  3295  007CAE  CFE8 F116          	movff	wreg,_DtCW+5
  3296                           ;pomiar.c: 1277: DtCW.maxPCW=65;
  3297  007CB2  0E41               	movlw	65
  3298  007CB4  D00E               	goto	L13
  3299                           ;pomiar.c: 1284: break;
  3300  007CB6                     l384:
  3301  007CB6  C1B9  FFE8         	movff	_DtKNF+7,wreg
  3302  007CBA  0A00               	xorlw	0
  3303  007CBC  E0F7               	bz	l388
  3304  007CBE  0A01               	xorlw	1
  3305  007CC0  E0F4               	bz	l386
  3306  007CC2  0A03               	xorlw	3
  3307  007CC4  E0F2               	bz	l386
  3308  007CC6  0A01               	xorlw	1
  3309  007CC8  E0F0               	bz	l387
  3310  007CCA                     L34:
  3311                           ;pomiar.c: 1278: break;
  3312                           ;pomiar.c: 1279: }
  3313                           ;pomiar.c: 1281: {
  3314  007CCA  0E1E               	movlw	30
  3315  007CCC  CFE8 F116          	movff	wreg,_DtCW+5
  3316                           ;pomiar.c: 1283: DtCW.maxPCW=60;
  3317  007CD0  0E3C               	movlw	60
  3318  007CD2                     L13:
  3319  007CD2  CFE8 F117          	movff	wreg,_DtCW+6
  3320                           ;pomiar.c: 1287: RSDT1.outPCWmn=DtCW.minPCW;
  3321  007CD6  C116  F0A8         	movff	_DtCW+5,_RSDT1+11
  3322                           ;pomiar.c: 1288: RSDT1.outPCWmx=DtCW.maxPCW;
  3323  007CDA  C117  F0A9         	movff	_DtCW+6,_RSDT1+12
  3324                           ;pomiar.c: 1289: if(!GetBit2(RSDT1.inSTAT0,7)&&M
      +                          GSD._CON)
  3325  007CDE  0E07               	movlw	7
  3326  007CE0  0100               	movlb	__Lparam shr (0+8)
  3327  007CE2  6FEC               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3328  007CE4  C0D3  FFE8         	movff	_RSDT1+54,wreg
  3329  007CE8  EC06  F061         	call	_GetBit2
  3330  007CEC  E221               	bc	l390
  3331  007CEE  0101               	movlb	_MGSD shr (0+8)
  3332  007CF0  AD99               	btfss	_MGSD& (0+255),6,b
  3333  007CF2  D01E               	goto	l390
  3334                           ;pomiar.c: 1290: {
  3335  007CF4  C0D2  FEB1         	movff	_RSDT1+53,F1571
  3336                           ;pomiar.c: 1293: if(pnst<DtCW.minPCW) pnst=DtCW.
      +                          minPCW;
  3337  007CF8  C116  FFE8         	movff	_DtCW+5,wreg
  3338  007CFC  010E               	movlb	F1571 shr (0+8)
  3339  007CFE  61B1               	cpfslt	F1571& (0+255),b
  3340  007D00  D002               	goto	l391
  3341  007D02  C116  FEB1         	movff	_DtCW+5,F1571
  3342  007D06                     l391:
  3343                           ;pomiar.c: 1294: if(pnst>DtCW.maxPCW) pnst=DtCW.
      +                          maxPCW;
  3344  007D06  CEB1  FFE8         	movff	F1571,wreg
  3345  007D0A  0101               	movlb	(_DtCW+6) shr (0+8)
  3346  007D0C  6117               	cpfslt	(_DtCW+6)& (0+255),b
  3347  007D0E  D002               	goto	l392
  3348  007D10  C117  FEB1         	movff	_DtCW+6,F1571
  3349  007D14                     l392:
  3350                           ;pomiar.c: 1295: if(DtCW.PCW!=pnst)
  3351  007D14  C114  FFE8         	movff	_DtCW+3,wreg
  3352  007D18  010E               	movlb	F1571 shr (0+8)
  3353  007D1A  19B1               	xorwf	F1571& (0+255),w,b
  3354  007D1C  E007               	bz	l393
  3355                           ;pomiar.c: 1296: {
  3356  007D1E  CEB1  F114         	movff	F1571,_DtCW+3
  3357                           ;pomiar.c: 1298: DtCW._newPCW=1;
  3358  007D22  0101               	movlb	(_DtCW+1) shr (0+8)
  3359  007D24  8112               	bsf	(_DtCW+1)& (0+255),0,b
  3360                           ;pomiar.c: 1299: StartRTdS(7);
  3361  007D26  0E07               	movlw	7
  3362  007D28  EC17  F05C         	call	_StartRTdS
  3363  007D2C                     l393:
  3364                           ;pomiar.c: 1300: }
  3365  007D2C  DF8D               	call	_WritePCW	;wreg free
  3366  007D2E  D012               	goto	l396
  3367                           ;pomiar.c: 1302: RSDT1.outPCW=DtCW.PCW;
  3368                           ;pomiar.c: 1303: }
  3369  007D30                     l390:
  3370                           ;pomiar.c: 1304: else
  3371  007D30  EC97  F04C         	call	_ReadEEPCW	;wreg free
  3372  007D34  CFE8 F114          	movff	wreg,_DtCW+3
  3373                           ;pomiar.c: 1307: if(pnst<DtCW.minPCW) pnst=DtCW.
      +                          minPCW;
  3374  007D38  C116  FFE8         	movff	_DtCW+5,wreg
  3375  007D3C  010E               	movlb	F1571 shr (0+8)
  3376  007D3E  61B1               	cpfslt	F1571& (0+255),b
  3377  007D40  D002               	goto	l395
  3378  007D42  C116  FEB1         	movff	_DtCW+5,F1571
  3379  007D46                     l395:
  3380                           ;pomiar.c: 1308: if(pnst>DtCW.maxPCW) pnst=DtCW.
      +                          maxPCW;
  3381  007D46  CEB1  FFE8         	movff	F1571,wreg
  3382  007D4A  0101               	movlb	(_DtCW+6) shr (0+8)
  3383  007D4C  6117               	cpfslt	(_DtCW+6)& (0+255),b
  3384  007D4E  D002               	goto	l396
  3385  007D50  C117  FEB1         	movff	_DtCW+6,F1571
  3386  007D54                     l396:
  3387                           ;pomiar.c: 1309: RSDT1.outPCW=DtCW.PCW;
  3388  007D54  C114  F0A5         	movff	_DtCW+3,_RSDT1+8
  3389                           ;pomiar.c: 1310: }
  3390  007D58  DF89               	call	_SetModPCW	;wreg free
  3391                           ;pomiar.c: 1313: DtCW.DAD_CW=ReturnACfromNTC(DtC
      +                          W.PPCW-(2-1));
  3392  007D5A  0101               	movlb	(_DtCW+4) shr (0+8)
  3393  007D5C  0515               	decf	(_DtCW+4)& (0+255),w,b
  3394  007D5E  EC93  F05F         	call	_ReturnACfromNTC
  3395  007D62  CFE8 F11F          	movff	wreg,_DtCW+14
  3396                           ;pomiar.c: 1314: DtCW.MAD_CW=ReturnACfromNTC(DtC
      +                          W.PPCW-(2-1)-9);
  3397  007D66  C115  FFE8         	movff	_DtCW+4,wreg
  3398  007D6A  0FF6               	addlw	-10
  3399  007D6C  EC93  F05F         	call	_ReturnACfromNTC
  3400  007D70  CFE8 F11E          	movff	wreg,_DtCW+13
  3401                           ;pomiar.c: 1315: }
  3402  007D74  0012               	return	
  3403  007D76                     __end_of_PomiarPCW:
  3404                           ;pomiar.c: 1319: void WritePFN(void)
  3405                           ;pomiar.c: 1320: {
  3406  007D76                     _WritePFN:
  3407  000000                     
  3408                           ;pomiar.c: 1321: if(PFN._newPFN&&RTdS(8)>=10)
  3409  007D76  0101               	movlb	_PFN shr (0+8)
  3410  007D78  A10C               	btfss	_PFN& (0+255),0,b
  3411  007D7A  0012               	return	
  3412  007D7C  0E08               	movlw	8
  3413  007D7E  EC29  F05C         	call	_RTdS
  3414  007D82  6E00               	movwf	btemp,c
  3415  007D84  0E0A               	movlw	10
  3416  007D86  5C00               	subwf	btemp,w,c
  3417  007D88  A0D8               	btfss	status,0,c
  3418  007D8A  0012               	return	
  3419                           ;pomiar.c: 1322: {
  3420  007D8C  0101               	movlb	_PFN shr (0+8)
  3421  007D8E  910C               	bcf	_PFN& (0+255),0,b
  3422                           ;pomiar.c: 1324: StartRTdS(8);
  3423  007D90  0E08               	movlw	8
  3424  007D92  EC17  F05C         	call	_StartRTdS
  3425                           ;pomiar.c: 1325: WriteEEPFN();
  3426  007D96  EFA3  F04C         	goto	_WriteEEPFN	;wreg free
  3427                           ;pomiar.c: 1326: }
  3428  007D9A                     __end_of_WritePFN:
  3429                           ;pomiar.c: 1330: void PomiarPFN(void)
  3430                           ;pomiar.c: 1331: {
  3431  007D9A                     _PomiarPFN:
  3432  000000                     
  3433                           ;pomiar.c: 1332: static unsigned char pnst;
  3434  007D9A  0E07               	movlw	7
  3435  007D9C  0100               	movlb	__Lparam shr (0+8)
  3436  007D9E  6FEC               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3437  007DA0  C0D3  FFE8         	movff	_RSDT1+54,wreg
  3438  007DA4  EC06  F061         	call	_GetBit2
  3439  007DA8  E301 D0DE          	bc	l400
  3440  007DAC  0101               	movlb	_MGSD shr (0+8)
  3441  007DAE  AD99               	btfss	_MGSD& (0+255),6,b
  3442  007DB0  D0DB               	goto	l400
  3443                           ;pomiar.c: 1336: {
  3444  007DB2  0E05               	movlw	5
  3445  007DB4  0100               	movlb	__Lparam shr (0+8)
  3446  007DB6  6FEC               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3447  007DB8  C0D3  FFE8         	movff	_RSDT1+54,wreg
  3448  007DBC  EC06  F061         	call	_GetBit2
  3449  007DC0  E328               	bnc	l401
  3450                           ;pomiar.c: 1338: {
  3451  007DC2  0101               	movlb	_PFN shr (0+8)
  3452  007DC4  990C               	bcf	_PFN& (0+255),4,b
  3453                           ;pomiar.c: 1340: PFN._lato=0;
  3454  007DC6  970C               	bcf	_PFN& (0+255),3,b
  3455                           ;pomiar.c: 1341: PFN._off=1;
  3456  007DC8  850C               	bsf	_PFN& (0+255),2,b
  3457                           ;pomiar.c: 1342: PFN._csn=0;
  3458  007DCA  930C               	bcf	_PFN& (0+255),1,b
  3459                           ;pomiar.c: 1343: PFN.poz=1;
  3460  007DCC  0E01               	movlw	1
  3461  007DCE  6F0D               	movwf	(_PFN+1)& (0+255),b
  3462  007DD0  6B0E               	clrf	(_PFN+2)& (0+255),b
  3463                           ;pomiar.c: 1344: BitSet2(&RSDT1.outSTAT2,4,0);
  3464  007DD2  0100               	movlb	__Lparam shr (0+8)
  3465  007DD4  0EB0               	movlw	low (_RSDT1+19)
  3466  007DD6  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3467  007DD8  0E00               	movlw	high (_RSDT1+19)
  3468  007DDA  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3469  007DDC  0E04               	movlw	4
  3470  007DDE  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3471  007DE0  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3472  007DE2  EC39  F061         	call	_BitSet2	;wreg free
  3473                           ;pomiar.c: 1345: BitSet2(&RSDT1.outSTAT2,5,0);
  3474  007DE6  0100               	movlb	__Lparam shr (0+8)
  3475  007DE8  0EB0               	movlw	low (_RSDT1+19)
  3476  007DEA  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3477  007DEC  0E00               	movlw	high (_RSDT1+19)
  3478  007DEE  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3479  007DF0  0E05               	movlw	5
  3480  007DF2  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3481  007DF4  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3482  007DF6  EC39  F061         	call	_BitSet2	;wreg free
  3483                           ;pomiar.c: 1346: BitSet2(&RSDT1.outSTAT2,6,1);
  3484  007DFA  0100               	movlb	__Lparam shr (0+8)
  3485  007DFC  0EB0               	movlw	low (_RSDT1+19)
  3486  007DFE  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3487  007E00  0E00               	movlw	high (_RSDT1+19)
  3488  007E02  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3489  007E04  0E06               	movlw	6
  3490  007E06  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3491  007E08  0E01               	movlw	1
  3492  007E0A  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3493  007E0C  EC39  F061         	call	_BitSet2	;wreg free
  3494                           ;pomiar.c: 1347: }
  3495  007E10  D086               	goto	l402
  3496  007E12                     l401:
  3497                           ;pomiar.c: 1348: else
  3498  007E12  0E03               	movlw	3
  3499  007E14  0100               	movlb	__Lparam shr (0+8)
  3500  007E16  6FEC               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3501  007E18  C0D3  FFE8         	movff	_RSDT1+54,wreg
  3502  007E1C  EC06  F061         	call	_GetBit2
  3503  007E20  E328               	bnc	l403
  3504                           ;pomiar.c: 1350: {
  3505  007E22  0101               	movlb	_PFN shr (0+8)
  3506  007E24  890C               	bsf	_PFN& (0+255),4,b
  3507                           ;pomiar.c: 1352: PFN._lato=0;
  3508  007E26  970C               	bcf	_PFN& (0+255),3,b
  3509                           ;pomiar.c: 1353: PFN._off=0;
  3510  007E28  950C               	bcf	_PFN& (0+255),2,b
  3511                           ;pomiar.c: 1354: PFN._csn=0;
  3512  007E2A  930C               	bcf	_PFN& (0+255),1,b
  3513                           ;pomiar.c: 1355: PFN.poz=3;
  3514  007E2C  0E03               	movlw	3
  3515  007E2E  6F0D               	movwf	(_PFN+1)& (0+255),b
  3516  007E30  6B0E               	clrf	(_PFN+2)& (0+255),b
  3517                           ;pomiar.c: 1356: BitSet2(&RSDT1.outSTAT2,4,1);
  3518  007E32  0100               	movlb	__Lparam shr (0+8)
  3519  007E34  0EB0               	movlw	low (_RSDT1+19)
  3520  007E36  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3521  007E38  0E00               	movlw	high (_RSDT1+19)
  3522  007E3A  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3523  007E3C  0E04               	movlw	4
  3524  007E3E  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3525  007E40  0E01               	movlw	1
  3526  007E42  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3527  007E44  EC39  F061         	call	_BitSet2	;wreg free
  3528                           ;pomiar.c: 1357: BitSet2(&RSDT1.outSTAT2,5,0);
  3529  007E48  0100               	movlb	__Lparam shr (0+8)
  3530  007E4A  0EB0               	movlw	low (_RSDT1+19)
  3531  007E4C  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3532  007E4E  0E00               	movlw	high (_RSDT1+19)
  3533  007E50  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3534  007E52  0E05               	movlw	5
  3535  007E54  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3536  007E56  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3537  007E58  EC39  F061         	call	_BitSet2	;wreg free
  3538                           ;pomiar.c: 1358: BitSet2(&RSDT1.outSTAT2,6,0);
  3539  007E5C  0100               	movlb	__Lparam shr (0+8)
  3540  007E5E  0EB0               	movlw	low (_RSDT1+19)
  3541  007E60  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3542  007E62  0E00               	movlw	high (_RSDT1+19)
  3543  007E64  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3544  007E66  0E06               	movlw	6
  3545  007E68  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3546  007E6A  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3547  007E6C  EC39  F061         	call	_BitSet2	;wreg free
  3548                           ;pomiar.c: 1359: }
  3549  007E70  D056               	goto	l402
  3550  007E72                     l403:
  3551                           ;pomiar.c: 1360: else
  3552  007E72  0E04               	movlw	4
  3553  007E74  0100               	movlb	__Lparam shr (0+8)
  3554  007E76  6FEC               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3555  007E78  C0D3  FFE8         	movff	_RSDT1+54,wreg
  3556  007E7C  EC06  F061         	call	_GetBit2
  3557                           ;pomiar.c: 1362: {
  3558  007E80  0101               	movlb	_PFN shr (0+8)
  3559  007E82  E327               	bnc	L53
  3560  007E84  990C               	bcf	_PFN& (0+255),4,b
  3561                           ;pomiar.c: 1364: PFN._lato=1;
  3562  007E86  870C               	bsf	_PFN& (0+255),3,b
  3563                           ;pomiar.c: 1365: PFN._off=0;
  3564  007E88  950C               	bcf	_PFN& (0+255),2,b
  3565                           ;pomiar.c: 1366: PFN._csn=0;
  3566  007E8A  930C               	bcf	_PFN& (0+255),1,b
  3567                           ;pomiar.c: 1367: PFN.poz=2;
  3568  007E8C  0E02               	movlw	2
  3569  007E8E  6F0D               	movwf	(_PFN+1)& (0+255),b
  3570  007E90  6B0E               	clrf	(_PFN+2)& (0+255),b
  3571                           ;pomiar.c: 1368: BitSet2(&RSDT1.outSTAT2,4,0);
  3572  007E92  0100               	movlb	__Lparam shr (0+8)
  3573  007E94  0EB0               	movlw	low (_RSDT1+19)
  3574  007E96  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3575  007E98  0E00               	movlw	high (_RSDT1+19)
  3576  007E9A  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3577  007E9C  0E04               	movlw	4
  3578  007E9E  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3579  007EA0  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3580  007EA2  EC39  F061         	call	_BitSet2	;wreg free
  3581                           ;pomiar.c: 1369: BitSet2(&RSDT1.outSTAT2,5,1);
  3582  007EA6  0100               	movlb	__Lparam shr (0+8)
  3583  007EA8  0EB0               	movlw	low (_RSDT1+19)
  3584  007EAA  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3585  007EAC  0E00               	movlw	high (_RSDT1+19)
  3586  007EAE  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3587  007EB0  0E05               	movlw	5
  3588  007EB2  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3589  007EB4  0E01               	movlw	1
  3590  007EB6  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3591  007EB8  EC39  F061         	call	_BitSet2	;wreg free
  3592                           ;pomiar.c: 1370: BitSet2(&RSDT1.outSTAT2,6,0);
  3593  007EBC  0100               	movlb	__Lparam shr (0+8)
  3594  007EBE  0EB0               	movlw	low (_RSDT1+19)
  3595  007EC0  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3596  007EC2  0E00               	movlw	high (_RSDT1+19)
  3597  007EC4  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3598  007EC6  0E06               	movlw	6
  3599  007EC8  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3600  007ECA  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3601  007ECC  EC39  F061         	call	_BitSet2	;wreg free
  3602                           ;pomiar.c: 1371: }
  3603  007ED0  D026               	goto	l402
  3604                           ;pomiar.c: 1372: else
  3605  007ED2                     L53:
  3606  007ED2  890C               	bsf	_PFN& (0+255),4,b
  3607                           ;pomiar.c: 1375: PFN._lato=0;
  3608  007ED4  970C               	bcf	_PFN& (0+255),3,b
  3609                           ;pomiar.c: 1376: PFN._off=0;
  3610  007ED6  950C               	bcf	_PFN& (0+255),2,b
  3611                           ;pomiar.c: 1377: PFN._csn=0;
  3612  007ED8  930C               	bcf	_PFN& (0+255),1,b
  3613                           ;pomiar.c: 1378: PFN.poz=3;
  3614  007EDA  0E03               	movlw	3
  3615  007EDC  6F0D               	movwf	(_PFN+1)& (0+255),b
  3616  007EDE  6B0E               	clrf	(_PFN+2)& (0+255),b
  3617                           ;pomiar.c: 1379: BitSet2(&RSDT1.outSTAT2,4,1);
  3618  007EE0  0100               	movlb	__Lparam shr (0+8)
  3619  007EE2  0EB0               	movlw	low (_RSDT1+19)
  3620  007EE4  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3621  007EE6  0E00               	movlw	high (_RSDT1+19)
  3622  007EE8  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3623  007EEA  0E04               	movlw	4
  3624  007EEC  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3625  007EEE  0E01               	movlw	1
  3626  007EF0  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3627  007EF2  EC39  F061         	call	_BitSet2	;wreg free
  3628                           ;pomiar.c: 1380: BitSet2(&RSDT1.outSTAT2,5,0);
  3629  007EF6  0100               	movlb	__Lparam shr (0+8)
  3630  007EF8  0EB0               	movlw	low (_RSDT1+19)
  3631  007EFA  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3632  007EFC  0E00               	movlw	high (_RSDT1+19)
  3633  007EFE  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3634  007F00  0E05               	movlw	5
  3635  007F02  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3636  007F04  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3637  007F06  EC39  F061         	call	_BitSet2	;wreg free
  3638                           ;pomiar.c: 1381: BitSet2(&RSDT1.outSTAT2,6,0);
  3639  007F0A  0100               	movlb	__Lparam shr (0+8)
  3640  007F0C  0EB0               	movlw	low (_RSDT1+19)
  3641  007F0E  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  3642  007F10  0E00               	movlw	high (_RSDT1+19)
  3643  007F12  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  3644  007F14  0E06               	movlw	6
  3645  007F16  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  3646  007F18  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  3647  007F1A  EC39  F061         	call	_BitSet2	;wreg free
  3648  007F1E                     l402:
  3649                           ;pomiar.c: 1382: }
  3650  007F1E  ECAB  F04C         	call	_ReadEEPFN	;wreg free
  3651  007F22  CFE8 FEB2          	movff	wreg,F1578
  3652                           ;pomiar.c: 1384: if(PFN.poz!=pnst)
  3653  007F26  CEB2  F000         	movff	F1578,btemp
  3654  007F2A  6A01               	clrf	btemp+1,c
  3655  007F2C  C10E  FFE8         	movff	_PFN+2,wreg
  3656  007F30  1801               	xorwf	btemp+1,w,c
  3657  007F32  E103               	bnz	u2555
  3658  007F34  C10D  FFE8         	movff	_PFN+1,wreg
  3659  007F38  1800               	xorwf	btemp,w,c
  3660  007F3A                     u2555:
  3661  007F3A  E008               	bz	l407
  3662                           ;pomiar.c: 1385: {
  3663  007F3C  0101               	movlb	_PFN shr (0+8)
  3664  007F3E  B10C               	btfsc	_PFN& (0+255),0,b
  3665  007F40  D003               	goto	l408
  3666  007F42  0E08               	movlw	8
  3667  007F44  EC17  F05C         	call	_StartRTdS
  3668  007F48                     l408:
  3669                           ;pomiar.c: 1387: PFN._newPFN=1;
  3670  007F48  0101               	movlb	_PFN shr (0+8)
  3671  007F4A  810C               	bsf	_PFN& (0+255),0,b
  3672  007F4C                     l407:
  3673                           ;pomiar.c: 1388: }
  3674  007F4C  DF14               	call	_WritePFN	;wreg free
  3675                           ;pomiar.c: 1391: if(GetBit2(RSDT1.inSTAT0,6)) PF
      +                          N._res=1;
  3676  007F4E  0E06               	movlw	6
  3677  007F50  0100               	movlb	__Lparam shr (0+8)
  3678  007F52  6FEC               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3679  007F54  C0D3  FFE8         	movff	_RSDT1+54,wreg
  3680  007F58  EC06  F061         	call	_GetBit2
  3681  007F5C  0101               	movlb	_PFN shr (0+8)
  3682  007F5E  E302               	bnc	L54
  3683  007F60  8B0C               	bsf	_PFN& (0+255),5,b
  3684  007F62  0012               	return	
  3685                           ;pomiar.c: 1392: else PFN._res=0;
  3686  007F64                     L54:
  3687  007F64  9B0C               	bcf	_PFN& (0+255),5,b
  3688                           ;pomiar.c: 1393: }
  3689  007F66  0012               	return	
  3690  007F68                     l400:
  3691                           ;pomiar.c: 1394: else
  3692  007F68  ECAB  F04C         	call	_ReadEEPFN	;wreg free
  3693  007F6C  6E00               	movwf	btemp,c
  3694  007F6E  0101               	movlb	(_PFN+1) shr (0+8)
  3695  007F70  C000  F10D         	movff	btemp,_PFN+1
  3696  007F74  6B0E               	clrf	(_PFN+2)& (0+255),b
  3697                           ;pomiar.c: 1397: SetPFN();
  3698  007F76  EFFE  F04B         	goto	_SetPFN	;wreg free
  3699                           ;pomiar.c: 1398: }
  3700  007F7A                     __end_of_PomiarPFN:
  3701                           ;pomiar.c: 1402: void PomiarCS(void)
  3702                           ;pomiar.c: 1403: {
  3703  007F7A                     _PomiarCS:
  3704  000000                     
  3705                           ;	_dac assigned to ?a_PomiarCS+0
  3706  000000                     _PomiarCS$dac	set	?a_PomiarCS
  3707                           ;pomiar.c: 1404: static unsigned char pcs;
  3708  007F7A  0E03               	movlw	3
  3709  007F7C  EC2A  F05F         	call	_ReadAC
  3710  007F80  0100               	movlb	__Lparam shr (0+8)
  3711  007F82  6FEC               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  3712                           ;pomiar.c: 1407: mmm=dac;
  3713  007F84  C0EC  FEF9         	movff	?a_PomiarCS,_mmm
  3714                           ;pomiar.c: 1408: if((!DtKNF.tpcs&&(dac<16||dac>2
      +                          35))||(DtKNF.tpcs&&(dac<16||dac>235)))
  3715  007F88  EE01  F0BE         	lfsr	0,_DtKNF+12
  3716  007F8C  50EF               	movf	indf0,w,c
  3717  007F8E  E108               	bnz	u2611
  3718  007F90  0E10               	movlw	16
  3719  007F92  61EC               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3720  007F94  D001               	goto	u2591
  3721  007F96  D010               	goto	u2680
  3722  007F98                     u2591:
  3723  007F98  0EEB               	movlw	-21
  3724  007F9A  65EC               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3725  007F9C  D001               	goto	u2611
  3726  007F9E  D00C               	goto	u2680
  3727  007FA0                     u2611:
  3728  007FA0  EE01  F0BE         	lfsr	0,_DtKNF+12
  3729  007FA4  50EF               	movf	indf0,w,c
  3730  007FA6  E022               	bz	l413
  3731  007FA8  0E10               	movlw	16
  3732  007FAA  0100               	movlb	__Lparam shr (0+8)
  3733  007FAC  61EC               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3734  007FAE  D001               	goto	u2641
  3735  007FB0  D003               	goto	u2680
  3736  007FB2                     u2641:
  3737  007FB2  0EEB               	movlw	-21
  3738  007FB4  65EC               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3739  007FB6  D01A               	goto	l413
  3740  007FB8                     u2680:
  3741                           ;pomiar.c: 1409: {
  3742  007FB8  EE01  F0BC         	lfsr	0,_DtKNF+10
  3743  007FBC  50EF               	movf	indf0,w,c
  3744                           ;pomiar.c: 1411: {
  3745  007FBE  0101               	movlb	_DtCS shr (0+8)
  3746  007FC0  E10B               	bnz	L55
  3747  007FC2  9704               	bcf	_DtCS& (0+255),3,b
  3748                           ;pomiar.c: 1413: DtCS._no=0;
  3749  007FC4  9504               	bcf	_DtCS& (0+255),2,b
  3750                           ;pomiar.c: 1414: DtCS._lo=0;
  3751  007FC6  9304               	bcf	_DtCS& (0+255),1,b
  3752                           ;pomiar.c: 1415: DtCS._hi=0;
  3753  007FC8  9104               	bcf	_DtCS& (0+255),0,b
  3754                           ;pomiar.c: 1416: DtCS._work=1;
  3755  007FCA  8904               	bsf	_DtCS& (0+255),4,b
  3756                           ;pomiar.c: 1417: DtCS._no_mont=1;
  3757  007FCC  0E01               	movlw	1
  3758  007FCE  6F05               	movwf	(_DtCS+1)& (0+255),b
  3759  007FD0  0E00               	movlw	0
  3760  007FD2  6B06               	clrf	(_DtCS+2)& (0+255),b
  3761                           ;pomiar.c: 1418: DtCS.CS=0;
  3762  007FD4  6B07               	clrf	(_DtCS+3)& (0+255),b
  3763                           ;pomiar.c: 1419: }
  3764  007FD6  0012               	return	
  3765                           ;pomiar.c: 1420: else
  3766  007FD8                     L55:
  3767  007FD8  8704               	bsf	_DtCS& (0+255),3,b
  3768                           ;pomiar.c: 1423: DtCS._no=0;
  3769  007FDA  9504               	bcf	_DtCS& (0+255),2,b
  3770                           ;pomiar.c: 1424: DtCS._lo=0;
  3771  007FDC  9304               	bcf	_DtCS& (0+255),1,b
  3772                           ;pomiar.c: 1425: DtCS._hi=0;
  3773  007FDE  9104               	bcf	_DtCS& (0+255),0,b
  3774                           ;pomiar.c: 1426: DtCS._work=0;
  3775  007FE0  9904               	bcf	_DtCS& (0+255),4,b
  3776                           ;pomiar.c: 1427: DtCS._no_mont=0;
  3777  007FE2  EE01  F005         	lfsr	0,_DtCS+1
  3778  007FE6  6AEE               	clrf	postinc0,c
  3779  007FE8  6AEE               	clrf	postinc0,c
  3780                           ;pomiar.c: 1428: }
  3781  007FEA  0012               	return	
  3782  007FEC                     l413:
  3783                           ;pomiar.c: 1430: else
  3784  007FEC  0101               	movlb	_DtCS shr (0+8)
  3785  007FEE  9704               	bcf	_DtCS& (0+255),3,b
  3786                           ;pomiar.c: 1433: DtCS._no_mont=0;
  3787  007FF0  EE01  F005         	lfsr	0,_DtCS+1
  3788  007FF4  6AEE               	clrf	postinc0,c
  3789  007FF6  6AEE               	clrf	postinc0,c
  3790                           ;pomiar.c: 1434: if(!DtKNF.tpcs)
  3791  007FF8  EE01  F0BE         	lfsr	0,_DtKNF+12
  3792  007FFC  50EF               	movf	indf0,w,c
  3793  007FFE  E121               	bnz	l417
  3794                           ;pomiar.c: 1435: {
  3795  008000  0E1E               	movlw	30
  3796  008002  0100               	movlb	__Lparam shr (0+8)
  3797  008004  61EC               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3798  008006  D001               	goto	l418
  3799  008008  6FEC               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  3800  00800A                     l418:
  3801                           ;pomiar.c: 1437: if(dac>210) dac=210;
  3802  00800A  0ED2               	movlw	-46
  3803  00800C  0100               	movlb	__Lparam shr (0+8)
  3804  00800E  65EC               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3805  008010  D002               	goto	l419
  3806  008012  0ED2               	movlw	210
  3807  008014  6FEC               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  3808  008016                     l419:
  3809                           ;pomiar.c: 1438: cs=((dac-30)*10)/(((210-30)*10)
      +                          /40);
  3810  008016  0E0A               	movlw	10
  3811  008018  6E02               	movwf	btemp+2,c
  3812  00801A  6A03               	clrf	btemp+3,c
  3813  00801C  0100               	movlb	__Lparam shr (0+8)
  3814  00801E  0EE2               	movlw	226
  3815  008020  25EC               	addwf	?a_PomiarCS^(__Lparam& (0+65280)),w
  3816  008022  6E00               	movwf	btemp,c
  3817  008024  6A01               	clrf	btemp+1,c
  3818  008026  0EFF               	movlw	255
  3819  008028  2201               	addwfc	btemp+1,f,c
  3820  00802A  ECBF  F062         	call	awmul
  3821  00802E  C004  F000         	movff	btemp+4,btemp
  3822  008032  C005  F001         	movff	btemp+5,btemp+1
  3823  008036  0E2D               	movlw	45
  3824  008038  6E02               	movwf	btemp+2,c
  3825  00803A  6A03               	clrf	btemp+3,c
  3826  00803C  EC88  F062         	call	awdiv
  3827  008040  D020               	goto	L38
  3828                           ;pomiar.c: 1439: if(cs<40)
  3829                           ;pomiar.c: 1440: if((cs-pcs>0)&&(cs-pcs)<2) cs=p
      +                          cs;
  3830                           ;pomiar.c: 1441: if(cs>40) cs=40;
  3831                           ;pomiar.c: 1442: }
  3832  008042                     l417:
  3833                           ;pomiar.c: 1443: else
  3834  008042  0E23               	movlw	35
  3835  008044  0100               	movlb	__Lparam shr (0+8)
  3836  008046  61EC               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3837  008048  D001               	goto	l424
  3838  00804A  6FEC               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  3839  00804C                     l424:
  3840                           ;pomiar.c: 1446: if(dac>190) dac=190;
  3841  00804C  0EBE               	movlw	-66
  3842  00804E  0100               	movlb	__Lparam shr (0+8)
  3843  008050  65EC               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  3844  008052  D002               	goto	l425
  3845  008054  0EBE               	movlw	190
  3846  008056  6FEC               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  3847  008058                     l425:
  3848                           ;pomiar.c: 1447: cs=((dac-35)*10)/(((190-35)*10)
      +                          /40);
  3849  008058  0E0A               	movlw	10
  3850  00805A  6E02               	movwf	btemp+2,c
  3851  00805C  6A03               	clrf	btemp+3,c
  3852  00805E  0100               	movlb	__Lparam shr (0+8)
  3853  008060  0EDD               	movlw	221
  3854  008062  25EC               	addwf	?a_PomiarCS^(__Lparam& (0+65280)),w
  3855  008064  6E00               	movwf	btemp,c
  3856  008066  6A01               	clrf	btemp+1,c
  3857  008068  0EFF               	movlw	255
  3858  00806A  2201               	addwfc	btemp+1,f,c
  3859  00806C  ECBF  F062         	call	awmul
  3860  008070  C004  F000         	movff	btemp+4,btemp
  3861  008074  C005  F001         	movff	btemp+5,btemp+1
  3862  008078  0E26               	movlw	38
  3863  00807A  6E02               	movwf	btemp+2,c
  3864  00807C  6A03               	clrf	btemp+3,c
  3865  00807E  EC88  F062         	call	awdiv
  3866  008082                     L38:
  3867  008082  5004               	movf	btemp+4,w,c
  3868  008084  6ED9               	movwf	fsr2l,c
  3869                           ;pomiar.c: 1448: if(cs<40)
  3870  008086  0E28               	movlw	40
  3871  008088  60D9               	cpfslt	fsr2l,c
  3872  00808A  D020               	goto	l426
  3873                           ;pomiar.c: 1449: if((cs-pcs>0)&&(cs-pcs)<2) cs=p
      +                          cs;
  3874  00808C  CEB3  FFE8         	movff	F1582,wreg
  3875  008090  CFD9 F000          	movff	fsr2l,btemp
  3876  008094  6A01               	clrf	btemp+1,c
  3877  008096  5E00               	subwf	btemp,f,c
  3878  008098  0E00               	movlw	0
  3879  00809A  5A01               	subwfb	btemp+1,f,c
  3880  00809C  5001               	movf	btemp+1,w,c
  3881  00809E  0A80               	xorlw	128
  3882  0080A0  0F80               	addlw	-128
  3883  0080A2  0E01               	movlw	1
  3884  0080A4  B4D8               	btfsc	status,2,c
  3885  0080A6  5C00               	subwf	btemp,w,c
  3886  0080A8  E311               	bnc	l426
  3887  0080AA  CEB3  FFE8         	movff	F1582,wreg
  3888  0080AE  CFD9 F000          	movff	fsr2l,btemp
  3889  0080B2  6A01               	clrf	btemp+1,c
  3890  0080B4  5E00               	subwf	btemp,f,c
  3891  0080B6  0E00               	movlw	0
  3892  0080B8  5A01               	subwfb	btemp+1,f,c
  3893  0080BA  5001               	movf	btemp+1,w,c
  3894  0080BC  0A80               	xorlw	128
  3895  0080BE  0F80               	addlw	-128
  3896  0080C0  0E02               	movlw	2
  3897  0080C2  B4D8               	btfsc	status,2,c
  3898  0080C4  5C00               	subwf	btemp,w,c
  3899  0080C6  A0D8               	btfss	status,0,c
  3900  0080C8  CEB3  FFD9         	movff	F1582,fsr2l
  3901  0080CC                     l426:
  3902                           ;pomiar.c: 1450: if(cs>40) cs=40;
  3903  0080CC  0E28               	movlw	40
  3904  0080CE  64D9               	cpfsgt	fsr2l,c
  3905  0080D0  D001               	goto	l423
  3906  0080D2  6ED9               	movwf	fsr2l,c
  3907  0080D4                     l423:
  3908                           ;pomiar.c: 1451: }
  3909  0080D4  CFD9 FEB3          	movff	fsr2l,F1582
  3910                           ;pomiar.c: 1453: DtCS.CS=cs;
  3911  0080D8  CFD9 F107          	movff	fsr2l,_DtCS+3
  3912                           ;pomiar.c: 1454: RSDT1.outCS=DtCS.CS;
  3913  0080DC  C107  F0A3         	movff	_DtCS+3,_RSDT1+6
  3914                           ;pomiar.c: 1455: if(DtKNF.robg==0)
  3915  0080E0  EE01  F0BC         	lfsr	0,_DtKNF+10
  3916  0080E4  50EF               	movf	indf0,w,c
  3917  0080E6  E10D               	bnz	l429
  3918                           ;pomiar.c: 1456: {
  3919  0080E8  0101               	movlb	_DtCS shr (0+8)
  3920  0080EA  9504               	bcf	_DtCS& (0+255),2,b
  3921                           ;pomiar.c: 1459: DtCS._lo=0;
  3922  0080EC  9304               	bcf	_DtCS& (0+255),1,b
  3923                           ;pomiar.c: 1460: if(DtCS.CS<=27) DtCS._work=1;
  3924  0080EE  0E1C               	movlw	28
  3925  0080F0  6107               	cpfslt	(_DtCS+3)& (0+255),b
  3926  0080F2  D002               	goto	l430
  3927  0080F4                     L14:
  3928  0080F4  8904               	bsf	_DtCS& (0+255),4,b
  3929  0080F6  D02B               	goto	l433
  3930  0080F8                     l430:
  3931                           ;pomiar.c: 1461: else
  3932  0080F8  0E1C               	movlw	28
  3933  0080FA  0101               	movlb	(_DtCS+3) shr (0+8)
  3934  0080FC  6507               	cpfsgt	(_DtCS+3)& (0+255),b
  3935  0080FE  D027               	goto	l433
  3936  008100  D025               	goto	L32
  3937                           ;pomiar.c: 1463: }
  3938  008102                     l429:
  3939                           ;pomiar.c: 1464: else
  3940  008102  0E03               	movlw	3
  3941  008104  0101               	movlb	(_DtCS+3) shr (0+8)
  3942  008106  6107               	cpfslt	(_DtCS+3)& (0+255),b
  3943  008108  D002               	goto	l434
  3944  00810A  8504               	bsf	_DtCS& (0+255),2,b
  3945  00810C  D002               	goto	l435
  3946  00810E                     l434:
  3947                           ;pomiar.c: 1468: else DtCS._no=0;
  3948  00810E  0101               	movlb	_DtCS shr (0+8)
  3949  008110  9504               	bcf	_DtCS& (0+255),2,b
  3950  008112                     l435:
  3951                           ;pomiar.c: 1469: if(!DtCS._no&&DtCS.CS<5) DtCS._
      +                          lo=1;
  3952  008112  0101               	movlb	_DtCS shr (0+8)
  3953  008114  B504               	btfsc	_DtCS& (0+255),2,b
  3954  008116  D006               	goto	l436
  3955  008118  0E05               	movlw	5
  3956  00811A  6107               	cpfslt	(_DtCS+3)& (0+255),b
  3957  00811C  D003               	goto	l436
  3958  00811E  0101               	movlb	_DtCS shr (0+8)
  3959  008120  8304               	bsf	_DtCS& (0+255),1,b
  3960  008122  D002               	goto	l437
  3961  008124                     l436:
  3962                           ;pomiar.c: 1470: else DtCS._lo=0;
  3963  008124  0101               	movlb	_DtCS shr (0+8)
  3964  008126  9304               	bcf	_DtCS& (0+255),1,b
  3965  008128                     l437:
  3966                           ;pomiar.c: 1471: if((DtCS.CS>=6)&&(DtCS.CS<=27))
      +                           DtCS._work=1;
  3967  008128  0E05               	movlw	5
  3968  00812A  0101               	movlb	(_DtCS+3) shr (0+8)
  3969  00812C  6507               	cpfsgt	(_DtCS+3)& (0+255),b
  3970  00812E  D005               	goto	l438
  3971  008130  0E1C               	movlw	28
  3972  008132  6107               	cpfslt	(_DtCS+3)& (0+255),b
  3973  008134  D002               	goto	l438
  3974  008136  0101               	movlb	_DtCS shr (0+8)
  3975  008138  D7DD               	goto	L14
  3976  00813A                     l438:
  3977                           ;pomiar.c: 1472: else
  3978  00813A  0E05               	movlw	5
  3979  00813C  0101               	movlb	(_DtCS+3) shr (0+8)
  3980  00813E  6107               	cpfslt	(_DtCS+3)& (0+255),b
  3981  008140  D001               	goto	u2951
  3982  008142  D003               	goto	u2970
  3983  008144                     u2951:
  3984  008144  0E1C               	movlw	28
  3985  008146  6507               	cpfsgt	(_DtCS+3)& (0+255),b
  3986  008148  D002               	goto	l433
  3987  00814A                     u2970:
  3988  00814A  0101               	movlb	_DtCS shr (0+8)
  3989  00814C                     L32:
  3990  00814C  9904               	bcf	_DtCS& (0+255),4,b
  3991  00814E                     l433:
  3992                           ;pomiar.c: 1474: }
  3993  00814E  0E1C               	movlw	28
  3994  008150  0101               	movlb	(_DtCS+3) shr (0+8)
  3995  008152  6507               	cpfsgt	(_DtCS+3)& (0+255),b
  3996  008154  D002               	goto	l441
  3997  008156  8104               	bsf	_DtCS& (0+255),0,b
  3998  008158  0C1C               	retlw	28
  3999  00815A                     l441:
  4000                           ;pomiar.c: 1476: else DtCS._hi=0;
  4001  00815A  0101               	movlb	_DtCS shr (0+8)
  4002  00815C  9104               	bcf	_DtCS& (0+255),0,b
  4003                           ;pomiar.c: 1477: }
  4004  00815E  0012               	return	
  4005  008160                     __end_of_PomiarCS:
  4006  000000                     
  4007  000000                     
  4008  000000                     
  4009  000000                     
  4010  000000                     
  4011  000000                     
  4012  000000                     
  4013  000000                     
  4014  000000                     
  4015  000000                     
  4016  000000                     
  4017  000000                     
  4018  000000                     
  4019  000000                     
  4020  000000                     
  4021  000000                     
  4022  000000                     
  4023  000000                     
  4024  000000                     
  4025  000000                     
  4026  000000                     
  4027  000000                     
  4028  000000                     
  4029  000000                     
  4030  000000                     
  4031  000000                     
  4032  000000                     
  4033  000000                     
  4034  000000                     
  4035  000000                     
  4036  000000                     
  4037  000000                     
  4038  000000                     
  4039  000000                     
  4040  000000                     
  4041  000000                     
  4042  000000                     
  4043  000000                     
  4044  000000                     
  4045  000000                     
  4046  000000                     
  4047  000000                     
  4048  000000                     
  4049  000000                     
  4050  000000                     
  4051  000000                     
  4052  000000                     
  4053  000000                     
  4054  000000                     
  4055  000000                     
  4056  000000                     
  4057  000000                     
  4058  000000                     
  4059  000000                     
  4060  000000                     
  4061  000000                     
  4062  000000                     
  4063  000000                     
  4064  000000                     
  4065  000000                     
  4066  000000                     
  4067  000000                     
  4068  000000                     
  4069  000000                     
  4070  000000                     
  4071  000000                     
  4072  000000                     
  4073  000000                     
  4074  000000                     
  4075  000000                     
  4076  000000                     
  4077  000000                     
  4078  000000                     
  4079  000000                     
  4080  000000                     
  4081  000000                     
  4082  000000                     
  4083  000000                     
  4084  000000                     
  4085  000000                     
  4086  000000                     
  4087  000000                     
  4088  000000                     
  4089  000000                     
  4090  000000                     
  4091  000000                     
  4092  000000                     
  4093  000000                     
  4094  000000                     
  4095  000000                     
  4096  000000                     
  4097  000000                     
  4098  000000                     
  4099  000000                     
  4100  000000                     
  4101  000000                     
  4102  000000                     
  4103  000000                     
  4104  000000                     
  4105  000000                     
  4106  000000                     
  4107  000000                     
  4108  000000                     
  4109  000000                     
  4110  000000                     
  4111  000000                     
  4112  000000                     
  4113  000000                     
  4114  000000                     
  4115  000000                     
  4116  000000                     
  4117  000000                     
  4118  000000                     
  4119  000000                     
  4120  000000                     
  4121  000000                     
  4122  000000                     
  4123  000000                     
  4124  000000                     
  4125  000000                     
  4126  000000                     
  4127  000000                     
  4128  000000                     
  4129  000000                     
  4130  000000                     
  4131  000000                     
  4132  000000                     
  4133  000000                     
  4134  000000                     
  4135  000000                     
  4136  000000                     
  4137  000000                     
  4138  000000                     
  4139  000000                     
  4140  000000                     
  4141  000000                     
  4142  000000                     
  4143  000000                     
  4144  000000                     
  4145  000000                     
  4146  000000                     
  4147  000000                     
  4148  000000                     
  4149  000000                     
  4150  000000                     
  4151  000000                     
  4152  000000                     
  4153  000000                     
  4154  000000                     
  4155  000000                     
  4156  000000                     
  4157  000000                     
  4158  000000                     
  4159  000000                     
  4160  000000                     
  4161  000000                     
  4162  000000                     
  4163  000000                     
  4164  000000                     
  4165  000000                     
  4166  000000                     
  4167  000000                     
  4168  000000                     
  4169  000000                     
  4170  000000                     
  4171  000000                     
  4172  000000                     
  4173  000000                     
  4174  000000                     
  4175  000000                     
  4176  000000                     
  4177  000000                     
  4178  000000                     
  4179  000000                     
  4180  000000                     
  4181  000000                     
  4182  000000                     
  4183  000000                     
  4184  000000                     
  4185  000000                     
  4186  000000                     
  4187  000000                     
  4188  000000                     
  4189  000000                     
  4190  000000                     
  4191  000000                     
  4192  000000                     
  4193  000000                     
  4194  000000                     
  4195  000000                     
  4196  000000                     
  4197  000000                     
  4198  000000                     
  4199  000000                     
  4200  000000                     
  4201  000000                     
  4202  000000                     
  4203  000000                     
  4204  000000                     
  4205  000000                     
  4206  000000                     
  4207  000000                     
  4208  000000                     
  4209  000000                     
  4210  000000                     
  4211  000000                     
  4212  000000                     
  4213  000000                     
  4214  000000                     
  4215  000000                     
  4216  000000                     
  4217  000000                     
  4218  000000                     
  4219  000000                     
  4220  000000                     
  4221  000000                     
  4222  000000                     
  4223  000000                     
  4224  000000                     
  4225  000000                     
  4226  000000                     
  4227  000000                     
  4228  000000                     
  4229  000000                     
  4230  000000                     
  4231  000000                     
  4232  000000                     
  4233  000000                     
  4234  000000                     
  4235  000000                     
  4236  000000                     
  4237  000000                     
  4238  000000                     
  4239  000000                     
  4240  000000                     
  4241  000000                     
  4242  000000                     
  4243  000000                     
  4244  000000                     
  4245  000000                     
  4246  000000                     
  4247  000000                     
  4248  000000                     
  4249  000000                     
  4250  000000                     
  4251  000000                     
  4252  000000                     
  4253  000000                     
  4254  000000                     
  4255  000000                     
  4256  000000                     
  4257  000000                     
  4258  000000                     
  4259  000000                     
  4260  000000                     
  4261  000000                     
  4262  000000                     
  4263  000000                     
  4264  000000                     
  4265  000000                     
  4266  000000                     
  4267  000000                     
  4268  000000                     
  4269  000000                     
  4270  000000                     
  4271  000000                     
  4272  000000                     
  4273  000000                     
  4274  000000                     
  4275  000000                     
  4276  000000                     
  4277  000000                     
  4278  000000                     
  4279  000000                     
  4280  000000                     
  4281  000000                     
  4282  000000                     
  4283  000000                     
  4284  000000                     
  4285  000000                     
  4286  000000                     
  4287  000000                     
  4288  000000                     
  4289  000000                     
  4290  000000                     
  4291  000000                     
  4292  000000                     
  4293  000000                     
  4294  000000                     
  4295  000000                     
  4296  000000                     
  4297  000000                     
  4298  000000                     
  4299  000000                     
  4300  000000                     
  4301  000000                     
  4302  000000                     
  4303  000000                     
  4304  000000                     
  4305  000000                     
  4306  000000                     
  4307  000000                     
  4308  000000                     
  4309  000000                     
  4310  000000                     
  4311  000000                     
  4312  000000                     
  4313  000000                     
  4314  000000                     
  4315  000000                     
  4316  000000                     
  4317  000000                     
  4318  000000                     
  4319  000000                     
  4320  000000                     
  4321  000000                     
  4322  000000                     
  4323  000000                     
  4324  000000                     
  4325  000000                     
  4326  000000                     
  4327  000000                     
  4328  000000                     
  4329  000000                     
  4330  000000                     
  4331  000000                     
  4332  000000                     
  4333  000000                     
  4334  000000                     
  4335  000000                     
  4336  000000                     
  4337  000000                     
  4338  000000                     
  4339  000000                     
  4340  000000                     
  4341  000000                     
  4342  000000                     
  4343  000000                     
  4344  000000                     
  4345  000000                     
  4346  000000                     
  4347  000000                     
  4348  000000                     
  4349  000000                     
  4350  000000                     
  4351  000000                     
  4352  000000                     
  4353  000000                     
  4354  000000                     
  4355  000000                     
  4356  000000                     
  4357  000000                     
  4358  000000                     
  4359  000000                     
  4360  000000                     
  4361  000000                     
  4362  000000                     
  4363  000000                     
  4364  000000                     
  4365  000000                     
  4366  000000                     
  4367  000000                     
  4368  000000                     
  4369  000000                     
  4370  000000                     
  4371  000000                     
  4372  000000                     
  4373  000000                     
  4374  000000                     
  4375  000000                     
  4376  000000                     
  4377  000000                     
  4378  000000                     
  4379  000000                     
  4380  000000                     
  4381  000000                     
  4382  000000                     
  4383  000000                     
  4384  000000                     
  4385  000000                     
  4386  000000                     
  4387  000000                     
  4388  000000                     
  4389  000000                     
  4390  000000                     
  4391  000000                     
  4392  000000                     
  4393  000000                     
  4394  000000                     
  4395  000000                     
  4396  000000                     
  4397  000000                     
  4398  000000                     
  4399  000000                     
  4400  000000                     
  4401  000000                     
  4402  000000                     
  4403  000000                     
  4404  000000                     
  4405  000000                     
  4406  000000                     
  4407  000000                     
  4408  000000                     
  4409  000000                     
  4410  000000                     
  4411  000000                     
  4412  000000                     
  4413  000000                     
  4414  000000                     
  4415  000000                     
  4416  000000                     
  4417  000000                     
  4418  000000                     
  4419  000000                     
  4420  000000                     
  4421  000000                     
  4422  000000                     
  4423  000000                     
  4424  000000                     
  4425  000000                     
  4426  000000                     
  4427  000000                     
  4428  000000                     
  4429  000000                     
  4430  000000                     
  4431  000000                     
  4432  000000                     
  4433  000000                     
  4434  000000                     
  4435  000000                     
  4436  000000                     
  4437  000000                     
  4438  000000                     
  4439  000000                     
  4440  000000                     
  4441  000000                     
  4442                           
  4443                           	psect	bigbss
  4444  000EAB                     F1532:
  4445  000EAB                     	ds	1
  4446  000EAB                     F1533:
  4447  000EAB                     	ds	1
  4448  000EAB                     F1538:
  4449  000EAB                     	ds	1
  4450  000EAB                     F1539:
  4451  000EAB                     	ds	1
  4452  000EAB                     F1540:
  4453  000EAB                     	ds	1
  4454  000EAB                     F1561:
  4455  000EAB                     	ds	1
  4456  000EAB                     F1571:
  4457  000EAB                     	ds	1
  4458  000EAB                     F1578:
  4459  000EAB                     	ds	1
  4460  000EAB                     F1582:
  4461  000EAB                     	ds	1
  4462  000000                     
  4463  000000                     
  4464  000000                     
  4465  000000                     
  4466  000000                     
  4467  000000                     
  4468  000000                     
  4469  000000                     
  4470  000000                     
  4471  000000                     
  4472  000000                     
  4473  000000                     
  4474  000000                     
  4475  000000                     
  4476  000000                     
  4477  000000                     
  4478  000000                     
  4479  000000                     
  4480  000000                     
  4481  000000                     
  4482  000000                     
  4483  000000                     
  4484  000000                     
  4485  000000                     
  4486  000000                     
  4487  000000                     
  4488  000000                     
  4489  000000                     
  4490  000000                     
  4491  000000                     
  4492  000000                     
  4493  000000                     
  4494  000000                     
  4495  000000                     
  4496  000000                     
  4497  000000                     
  4498  000000                     
  4499  000000                     
  4500  000000                     
  4501  000000                     
  4502  000000                     
  4503  000000                     
  4504  000000                     
  4505  000000                     
  4506  000000                     
  4507  000000                     
  4508  000000                     
  4509  000000                     
  4510  000000                     
  4511  000000                     
  4512  000000                     
  4513  000000                     
  4514  000000                     
  4515  000000                     
  4516  000000                     
  4517  000000                     
  4518  000000                     
  4519  000000                     
  4520  000000                     
  4521  000000                     
  4522  000000                     
  4523  000000                     
  4524  000000                     
  4525  000000                     
  4526  000000                     
  4527  000000                     
  4528  000000                     
  4529  000000                     
  4530  000000                     
  4531  000000                     
  4532  000000                     
  4533  000000                     
  4534  000000                     
  4535  000000                     
  4536  000000                     
  4537  000000                     
  4538  000000                     
  4539  000000                     
  4540  000EAB                     _PmrtimFlt1:
  4541  000EAB                     	ds	1
  4542  000EAB                     _PmrtimFlt2:
  4543  000EAB                     	ds	1
  4544  000000                     
  4545  000000                     
  4546  000000                     
  4547  000000                     
  4548  000000                     
  4549  000000                     
  4550  000000                     
  4551  000000                     
  4552  000000                     
  4553  000000                     
  4554  000000                     
  4555  000000                     
  4556  000000                     
  4557  000000                     
  4558  000000                     
  4559  000000                     
  4560  000000                     
  4561  000000                     
  4562  000000                     
  4563  000000                     
  4564  000000                     
  4565  000000                     
  4566  000000                     
  4567  000000                     
  4568  000000                     
  4569  000000                     
  4570  000000                     
  4571  000000                     
  4572  000000                     
  4573  000000                     
  4574  000000                     
  4575  000000                     
  4576  000000                     
  4577  000000                     
  4578  000000                     
  4579  000000                     
  4580  000000                     
  4581  000000                     
  4582  000000                     
  4583  000000                     
  4584  000000                     
  4585  000000                     
  4586  000000                     
  4587  000000                     
  4588  000000                     
  4589  000000                     
  4590  000000                     
  4591  000000                     
  4592  000000                     
  4593  000000                     
  4594  000EAB                     _wff:
  4595  000EAB                     	ds	12
  4596                           
  4597                           	psect	bss
  4598  000100                     _PmrtimFlt3:
  4599  000100                     	ds	2
  4600  000000                     
  4601  000000                     
  4602  000000                     
  4603  000000                     
  4604  000100                     _pbf:
  4605  000100                     	ds	2
  4606  000100                     _DtCS:
  4607  000100                     	ds	4
  4608  000100                     _DtZW:
  4609  000100                     	ds	4
  4610  000100                     _PFN:
  4611  000100                     	ds	5
  4612  000100                     _DtCW:
  4613  000100                     	ds	15
  4614  000100                     _DtCO:
  4615  000100                     	ds	17
  4616  000100                     _DtIN:
  4617  000100                     	ds	20
  4618                           
  4619                           	psect	temp
  4620  000000                     btemp:
  4621  000000                     	ds	8
  4622                           tblptrh	equ	0xFF7
  4623                           tblptrl	equ	0xFF6
  4624                           indf0	equ	0xFEF
  4625                           postinc0	equ	0xFEE
  4626                           fsr0h	equ	0xFEA
  4627                           fsr0l	equ	0xFE9
  4628                           wreg	equ	0xFE8
  4629                           indf1	equ	0xFE7
  4630                           fsr1h	equ	0xFE2
  4631                           fsr1l	equ	0xFE1
  4632                           fsr2l	equ	0xFD9
  4633                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Fri Feb 26 07:54:44 2016

                         _M 006A                    _PomiarCO 6FE2  
                  _PomiarCS 7F7A                    _PomiarCW 75C8  
                  _PomiarIN 7592                    _PomiarZW 7718  
                        l22 69CC                          l14 6980  
                        l31 6A8C                          l15 698C  
                        l40 6AA2                          l32 6A7E  
                        l25 69F6                          l27 6A5C  
                        l19 69B4                          l60 6B22  
                        l44 6ABA                          l36 6AF8  
                        l28 6B86                          l37 6ABC  
                        l29 6A94                          l39 6A9A  
                        l72 6C20                          l64 6B7C  
                        l65 6DF4                          l49 6ABA  
                        l66 6CCC                          l91 6D82  
                        l59 6B7A                          l92 6DEC  
                        l84 6D5C                          l76 6C60  
                        l93 6DC6                          l85 6D38  
                        l69 6C3A                          l86 6C2E  
                        l78 6CA4                          l87 6D4C  
                        l96 6DF8                          l98 6E0E  
                        l99 6E7A                          u65 69F0  
                        u90 6A56                          u75 6A2A  
                        u85 6A54                   _PomiarPCO 7B6C  
                 _PomiarPFN 7D9A                   _PomiarPCW 7CA8  
         __end_of_PomiarPCO 7C48           __end_of_PomiarPFN 7F7A  
         __end_of_PomiarPCW 7D76                ?a_GetPGD_PCO 00EC  
__end_of_FiltrPomiarowyCOCW 6FE2                         l100 6E2C  
                       l101 6E16                         l200 72BE  
                       l112 6EB4                         l104 6E62  
                       l121 6F22                         l105 6E3E  
                       l210 739C                         l130 6FC0  
                       l122 6F32                         l114 6EC6  
                       l123 6F42                         l115 6ED2  
                       l300 770C                         l204 72E8  
                       l132 6FCE                         l124 6F54  
                       l116 6EE6                         l108 6E82  
                       l141 7032                         l310 77BA  
                       l150 70C8                         l126 6F64  
                       l118 6EF8                         l303 7744  
                       l231 74AE                         l207 7312  
                       l143 7076                         l127 6FC4  
                       l119 6F04                         l400 7F68  
                       l312 77A4                         l232 74B2  
                       l224 748E                         l216 73CA  
                       l208 7340                         l160 713A  
                       l136 702C                         l128 6FA6  
                       l401 7E12                         l321 77C8  
                       l241 7530                         l233 74BC  
                       l225 7460                         l209 736E  
                       l129 6FAA                         l402 7F1E  
                       l314 775A                         l306 7766  
                       l242 7534                         l234 74C6  
                       l218 740E                         l138 7522  
                       l154 70F2                         l403 7E72  
                       l331 79B0                         l323 77E6  
                       l315 7780                         l307 7762  
                       l251 757C                         l243 7542  
                       l235 74D0                         l139 7504  
                       l340 797A                         l332 7982  
                       l324 77E2                         l316 7782  
                       l252 7580                         l244 7546  
                       l236 74DA                         l413 7FEC  
                       l341 797E                         l333 7954  
                       l317 7798                         l309 77CC  
                       l261 76DE                         l253 758C  
                       l245 7570                         l237 74E4  
                       l229 748A                         l157 711C  
                       l149 70F6                         l430 80F8  
                       l350 7ABE                         l334 78FA  
                       l326 77F8                         l262 76C8  
                       l246 755A                         l238 74EE  
                       l174 7202                         l166 713E  
                       l158 7126                         l423 80D4  
                       l407 7F4C                         l351 7AE4  
                       l343 79A8                         l319 77A0  
                       l271 763C                         l247 755E  
                       l239 74F8                         l191 7228  
                       l175 71D4                         l159 7130  
                       l424 804C                         l408 7F48  
                       l352 7AE8                         l344 79AC  
                       l336 7926                         l280 7646  
                       l272 7640                         l264 7608  
                       l256 75BE                         l248 756A  
                       l168 7182                         l441 815A  
                       l433 814E                         l425 8058  
                       l417 8042                         l337 794C  
                       l265 7630                         l193 726C  
                       l434 810E                         l426 80CC  
                       l418 800A                         l362 7B90  
                       l354 7B12                         l346 7B1A  
                       l338 7950                         l282 766C  
                       l266 761A                         l435 8112  
                       l419 8016                         l371 7C0A  
                       l363 7B86                         l355 7B16  
                       l347 7AEC                         l291 76BC  
                       l275 7644                         l259 7602  
                       l179 71FE                         l436 8124  
                       l372 7C18                         l348 7A92  
                       l284 7692                         l268 762A  
                       l437 8128                         l429 8102  
                       l381 7CA2                         l373 7C2A  
                       l357 7B40                         l285 76B8  
                       l277 761E                         l438 813A  
                       l390 7D30                         l366 7BF4  
                       l358 7B44                         l286 76A4  
                       l391 7D06                         l367 7BCA  
                       l287 76AE                         l199 72EC  
                       l392 7D14                         l384 7CB6  
                       l368 7BD8                         l296 76EC  
                       l393 7D2C                         l377 7C78  
                       l369 7BF0                         l297 76F0  
                       l386 7CAA                         l378 7C94  
                       l298 76FE                         l395 7D46  
                       l387 7CAA                         l379 7C90  
                       l299 7702                         l396 7D54  
                       l388 7CAC                         u315 6B72  
                       u505 6D26                         _PFN 010C  
                       u355 6BCE                         u365 6BFA  
                  _WritePCO 7B48                         u900 70A0  
                  _WritePFN 7D76                         u495 6CFC  
                       u905 709E                         u841 700A  
                  _WritePCW 7C48                         u860 7010  
                       u935 70F0                         _pbf 0102  
                       _mmm 0EF9                         _wff 0EB6  
                       wreg 000FE8                   _StartRTdS B82E  
                 _StartTim1 69A0                   _StartTim2 69B8  
                 _StartTim3 69D0             _ReturnACfromNTC BF26  
                      F1540 0EAF                        F1532 0EAB  
                      F1533 0EAC                        F1561 0EB0  
                      F1538 0EAD           __end_of_StartTim1 69A6  
                      F1571 0EB1                        F1539 0EAE  
         __end_of_StartTim2 69BE           __end_of_StartTim3 69DA  
                      F1582 0EB3                        F1578 0EB2  
                ?a_PomiarCS 00EC                  _PmrtimFlt1 0EB4  
                _PmrtimFlt2 0EB5                  _PmrtimFlt3 0100  
                      u1220 7296                        u1060 71AC  
                      u1305 73C2                        u1225 7294  
                      u1065 71AA                        u2115 7A8E  
                      u2045 78F6                        u1415 7488  
                      u1255 72E6                        u1095 71FC  
                      u1600 75B8                        u1611 75E8  
                      u1275 733A                        u1380 7438  
                      u1285 7368                        u1630 75EE  
                      u1295 7396                        u1385 7436  
                      u2611 7FA0                        u1581 75B2  
                      u1831 7738                        u1760 76B4  
                      u2641 7FB2                        u1850 773E  
                      u2555 7F3A                        u1950 7792  
                      u2591 7F98                        u2680 7FB8  
                      u1980 77DC                        _MGSD 0199  
                      u2951 8144                        u2970 814A  
                      _DtCO 0120                        _DtCS 0104  
                      _DtCW 0111                        _DtIN 0131  
                      _RTdS B852                        _DtZW 0108  
                      aldiv C49E                        fsr0h 000FEA  
                      fsr1h 000FE2                        indf0 000FEF  
                      fsr0l 000FE9                        indf1 000FE7  
                      fsr1l 000FE1                        fsr2l 000FD9  
                      btemp 0000                        awdiv C510  
                      awmul C57E             __end_of_PmrTim1 69B8  
           __end_of_PmrTim2 69D0             __end_of_PmrTim3 69FA  
           _PredkoscZmianCW 6DFE                  _WriteEEPCO 9932  
                _WriteEEPFN 9946                  _WriteEEPCW 991E  
                     _RSDT1 009D                       _DtKNF 01B2  
                     _RdPrt B788                  used_btemp0 0001  
                used_btemp1 0001                  used_btemp2 0001  
                used_btemp3 0001                  used_btemp4 0001  
                used_btemp5 0001                  used_btemp6 0001  
                used_btemp7 0001                 _IncPmrTimer 6974  
                   _BitSet2 C272                     _GetBit2 C20C  
                  ?_BitSet2 00EE         __end_of_IncPmrTimer 69A0  
                     status 000FD8                    ?_GetBit2 00EC  
                   _PmrTim1 69A6                     _PmrTim2 69BE  
                   _PmrTim3 69DC                     __Lparam 00EA  
                  ?_PmrTim3 00EA                  _GetPGD_PCO 780E  
        _FiltrPomiarowyCOCW 6F5A          __end_of_GetPGD_PCO 7B48  
          __end_of_PomiarCO 7592            __end_of_PomiarCS 8160  
          __end_of_PomiarCW 7718            __end_of_PomiarIN 75C8  
          __end_of_PomiarZW 774A                     __ramtop 1000  
          __end_of_WritePCO 7B6C            __end_of_WritePFN 7D9A  
          __end_of_WritePCW 7C6C     __end_of_PredkoscZmianCW 6EA0  
               _InitDataPmr 693E         __end_of_InitDataPmr 6974  
               _ReadTabZNTC BF62                      _ReadAC BE54  
                    _SetPFN 97FC                     postinc0 000FEE  
                    aldiv_f C5DE                      almul_f C5B6  
                 _FltParMod 6EA0                  _ReadTabNTC BEC0  
         __end_of_FltParMod 6F5A                      tblptrh 000FF7  
                    tblptrl 000FF6                   _ReadEEPCO 9942  
                 _ReadEEPFN 9956                   _ReadEEPCW 992E  
                 _GoldenEye 69FA           __end_of_GoldenEye 6DFE  
                 _SetModPCO 774A                   _SetModPCW 7C6C  
         __end_of_SetModPCO 780E           __end_of_SetModPCW 7CA8  
