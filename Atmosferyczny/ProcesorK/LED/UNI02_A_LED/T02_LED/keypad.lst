

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Wed Mar 20 08:54:41 2013


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bss,global,class=RAM,space=1,delta=1
     5                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     6                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     7  000000                     
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96                           
    97                           	psect	text
    98                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
    99                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   100                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   101                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   102                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   103                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   104                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   105                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   106                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   107                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   108                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   109                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   110                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   111                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   112                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   113                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   114                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   115                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   116                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   117                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   118                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   119                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   120                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   121                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   122                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   123                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   124                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   125                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   126                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   127                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   128                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   129                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   130                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   131                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   132                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   133                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   134                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   135                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   136                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   137                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   138                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   139                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   140                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   141                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   142                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   143                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   144                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   145                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   146                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   147                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   148                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   149                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   150                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   151                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   152                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   153                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   154                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   155                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   156                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   157                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   158                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   159                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   160                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   161                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   162                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   163                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   164                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   165                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   166                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   167                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   168                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   169                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   170                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   171                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   172                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   173                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   174                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   175                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   176                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   177                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   178                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   179                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   180                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   181                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   182                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   183                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   184                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   185                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   186                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   187                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   188                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   189                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   190                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   191                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   192                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   193                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   194                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   195                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   196                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   197                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   198  00D1F2                     _IncKeyTimer:
   199                           ;       param _ky assigned to ?_ExxResKey+0
   200  000000                     _ExxResKey$ky	set	?_ExxResKey
   201                           ;       param _pTim assigned to ?_ExxPresKey+3
   202  000000                     _ExxPresKey$pTim	set	?_ExxPresKey+3
   203                           ;       param _dTim assigned to ?_ExxPresKey+2
   204  000000                     _ExxPresKey$dTim	set	?_ExxPresKey+2
   205                           ;       param _ky assigned to ?_ExxPresKey+0
   206  000000                     _ExxPresKey$ky	set	?_ExxPresKey
   207                           ;       param _ky assigned to ?_WaitToLowEx+0
   208  000000                     _WaitToLowEx$ky	set	?_WaitToLowEx
   209                           ;       param _ky assigned to ?_ResBufKeyEx+0
   210  000000                     _ResBufKeyEx$ky	set	?_ResBufKeyEx
   211                           ;       param _ky assigned to ?_PresKeyEX+0
   212  000000                     _PresKeyEX$ky	set	?_PresKeyEX
   213                           ;       param _ky assigned to ?_KeyTim+0
   214  000000                     _KeyTim$ky	set	?_KeyTim
   215  000000                     
   216                           ;keypad.c: 28: unsigned char i;
   217  00D1F2  6AD9               	clrf	fsr2l,c
   218  00D1F4                     l3:
   219                           ;keypad.c: 31: {
   220  00D1F4  50D9               	movf	fsr2l,w,c
   221  00D1F6  0D05               	mullw	5
   222  00D1F8  0EAE               	movlw	low (_ky+1)
   223  00D1FA  24F3               	addwf	prodl,w,c
   224  00D1FC  6EE9               	movwf	fsr0l,c
   225  00D1FE  0E01               	movlw	high (_ky+1)
   226  00D200  20F4               	addwfc	prodh,w,c
   227  00D202  6EEA               	movwf	fsr0h,c
   228  00D204  2AEF               	incf	indf0,f,c
   229                           ;keypad.c: 33: if(ky[i].cS>9)
   230  00D206  50D9               	movf	fsr2l,w,c
   231  00D208  0D05               	mullw	5
   232  00D20A  0EAE               	movlw	low (_ky+1)
   233  00D20C  24F3               	addwf	prodl,w,c
   234  00D20E  6EE9               	movwf	fsr0l,c
   235  00D210  0E01               	movlw	high (_ky+1)
   236  00D212  20F4               	addwfc	prodh,w,c
   237  00D214  6EEA               	movwf	fsr0h,c
   238  00D216  50EF               	movf	indf0,w,c
   239  00D218  6E00               	movwf	btemp,c
   240  00D21A  0E0A               	movlw	10
   241  00D21C  5C00               	subwf	btemp,w,c
   242  00D21E  E31E               	bnc	l6
   243                           ;keypad.c: 34: {
   244  00D220  50D9               	movf	fsr2l,w,c
   245  00D222  0D05               	mullw	5
   246  00D224  0EAE               	movlw	low (_ky+1)
   247  00D226  24F3               	addwf	prodl,w,c
   248  00D228  6EE9               	movwf	fsr0l,c
   249  00D22A  0E01               	movlw	high (_ky+1)
   250  00D22C  20F4               	addwfc	prodh,w,c
   251  00D22E  6EEA               	movwf	fsr0h,c
   252  00D230  6AEF               	clrf	indf0,c
   253                           ;keypad.c: 36: if(ky[i].dS<255) ky[i].dS++;
   254  00D232  50D9               	movf	fsr2l,w,c
   255  00D234  0D05               	mullw	5
   256  00D236  0EAF               	movlw	low (_ky+2)
   257  00D238  24F3               	addwf	prodl,w,c
   258  00D23A  6EE9               	movwf	fsr0l,c
   259  00D23C  0E01               	movlw	high (_ky+2)
   260  00D23E  20F4               	addwfc	prodh,w,c
   261  00D240  6EEA               	movwf	fsr0h,c
   262  00D242  50EF               	movf	indf0,w,c
   263  00D244  6E00               	movwf	btemp,c
   264  00D246  2800               	incf	btemp,w,c
   265  00D248  E009               	bz	l6
   266  00D24A  50D9               	movf	fsr2l,w,c
   267  00D24C  0D05               	mullw	5
   268  00D24E  0EAF               	movlw	low (_ky+2)
   269  00D250  24F3               	addwf	prodl,w,c
   270  00D252  6EE9               	movwf	fsr0l,c
   271  00D254  0E01               	movlw	high (_ky+2)
   272  00D256  20F4               	addwfc	prodh,w,c
   273  00D258  6EEA               	movwf	fsr0h,c
   274  00D25A  2AEF               	incf	indf0,f,c
   275  00D25C                     l6:
   276  00D25C  2AD9               	incf	fsr2l,f,c
   277  00D25E  0E06               	movlw	6
   278  00D260  64D9               	cpfsgt	fsr2l,c
   279  00D262  D7C8               	goto	l3
   280                           ;keypad.c: 37: }
   281  00D264  6AD9               	clrf	fsr2l,c
   282  00D266                     l8:
   283                           ;keypad.c: 64: {
   284  00D266  50D9               	movf	fsr2l,w,c
   285  00D268  0D05               	mullw	5
   286  00D26A  0ED1               	movlw	low (_xxky+1)
   287  00D26C  24F3               	addwf	prodl,w,c
   288  00D26E  6EE9               	movwf	fsr0l,c
   289  00D270  0E01               	movlw	high (_xxky+1)
   290  00D272  20F4               	addwfc	prodh,w,c
   291  00D274  6EEA               	movwf	fsr0h,c
   292  00D276  2AEF               	incf	indf0,f,c
   293                           ;keypad.c: 66: if(xxky[i].cS>9)
   294  00D278  50D9               	movf	fsr2l,w,c
   295  00D27A  0D05               	mullw	5
   296  00D27C  0ED1               	movlw	low (_xxky+1)
   297  00D27E  24F3               	addwf	prodl,w,c
   298  00D280  6EE9               	movwf	fsr0l,c
   299  00D282  0E01               	movlw	high (_xxky+1)
   300  00D284  20F4               	addwfc	prodh,w,c
   301  00D286  6EEA               	movwf	fsr0h,c
   302  00D288  50EF               	movf	indf0,w,c
   303  00D28A  6E00               	movwf	btemp,c
   304  00D28C  0E0A               	movlw	10
   305  00D28E  5C00               	subwf	btemp,w,c
   306  00D290  E31E               	bnc	l11
   307                           ;keypad.c: 67: {
   308  00D292  50D9               	movf	fsr2l,w,c
   309  00D294  0D05               	mullw	5
   310  00D296  0ED1               	movlw	low (_xxky+1)
   311  00D298  24F3               	addwf	prodl,w,c
   312  00D29A  6EE9               	movwf	fsr0l,c
   313  00D29C  0E01               	movlw	high (_xxky+1)
   314  00D29E  20F4               	addwfc	prodh,w,c
   315  00D2A0  6EEA               	movwf	fsr0h,c
   316  00D2A2  6AEF               	clrf	indf0,c
   317                           ;keypad.c: 69: if(xxky[i].dS<255) xxky[i].dS++;
   318  00D2A4  50D9               	movf	fsr2l,w,c
   319  00D2A6  0D05               	mullw	5
   320  00D2A8  0ED2               	movlw	low (_xxky+2)
   321  00D2AA  24F3               	addwf	prodl,w,c
   322  00D2AC  6EE9               	movwf	fsr0l,c
   323  00D2AE  0E01               	movlw	high (_xxky+2)
   324  00D2B0  20F4               	addwfc	prodh,w,c
   325  00D2B2  6EEA               	movwf	fsr0h,c
   326  00D2B4  50EF               	movf	indf0,w,c
   327  00D2B6  6E00               	movwf	btemp,c
   328  00D2B8  2800               	incf	btemp,w,c
   329  00D2BA  E009               	bz	l11
   330  00D2BC  50D9               	movf	fsr2l,w,c
   331  00D2BE  0D05               	mullw	5
   332  00D2C0  0ED2               	movlw	low (_xxky+2)
   333  00D2C2  24F3               	addwf	prodl,w,c
   334  00D2C4  6EE9               	movwf	fsr0l,c
   335  00D2C6  0E01               	movlw	high (_xxky+2)
   336  00D2C8  20F4               	addwfc	prodh,w,c
   337  00D2CA  6EEA               	movwf	fsr0h,c
   338  00D2CC  2AEF               	incf	indf0,f,c
   339  00D2CE                     l11:
   340  00D2CE  2AD9               	incf	fsr2l,f,c
   341  00D2D0  0E06               	movlw	6
   342  00D2D2  64D9               	cpfsgt	fsr2l,c
   343  00D2D4  D7C8               	goto	l8
   344  00D2D6  0C06               	retlw	6
   345                           ;keypad.c: 70: }
   346  00D2D8                     __end_of_IncKeyTimer:
   347                           ;       param _ky assigned to ?_StartKeyTim+0
   348  000000                     _StartKeyTim$ky	set	?_StartKeyTim
   349                           ;keypad.c: 76: void StartKeyTim(StPin *ky)
   350                           ;keypad.c: 77: {
   351  00D2D8  00FA               	dw	?_StartKeyTim
   352  00D2DA                     _StartKeyTim:
   353  000000                     
   354                           ;keypad.c: 78: (*ky).cS=0;
   355                           ; _ky loaded to fsr1
   356  00D2DA  C0FA  FFE1         	movff	?_StartKeyTim,fsr1l
   357  00D2DE  C0FB  FFE2         	movff	?_StartKeyTim+1,fsr1h
   358  00D2E2  EE00 F001          	lfsr	0,1
   359  00D2E6  50E1               	movf	fsr1l,w,c
   360  00D2E8  26E9               	addwf	fsr0l,f,c
   361  00D2EA  50E2               	movf	fsr1h,w,c
   362  00D2EC  22EA               	addwfc	fsr0h,f,c
   363  00D2EE  6AEF               	clrf	indf0,c
   364                           ;keypad.c: 79: (*ky).dS=0;
   365  00D2F0  EE00 F002          	lfsr	0,2
   366  00D2F4  50E1               	movf	fsr1l,w,c
   367  00D2F6  26E9               	addwf	fsr0l,f,c
   368  00D2F8  50E2               	movf	fsr1h,w,c
   369  00D2FA  22EA               	addwfc	fsr0h,f,c
   370  00D2FC  6AEF               	clrf	indf0,c
   371                           ;keypad.c: 80: }
   372  00D2FE  0C00               	retlw	0
   373  00D300                     __end_of_StartKeyTim:
   374                           ;keypad.c: 83: unsigned char KeyTim(StPin *ky)
   375                           ;keypad.c: 84: {
   376  00D300  00FA               	dw	?_KeyTim
   377  00D302                     _KeyTim:
   378  000000                     
   379                           ;keypad.c: 85: return (*ky).dS;
   380  00D302  0100               	movlb	__Lparam shr (0+8)
   381  00D304  EE00 F002          	lfsr	0,2
   382  00D308  51FA               	movf	?_KeyTim^(__Lparam& (0+65280)),w
   383  00D30A  26E9               	addwf	fsr0l,f,c
   384  00D30C  51FB               	movf	(?_KeyTim+1)^(__Lparam& (0+65280)),w
   385  00D30E  22EA               	addwfc	fsr0h,f,c
   386  00D310  50EF               	movf	indf0,w,c
   387  00D312  0012               	return	
   388                           ;keypad.c: 86: }
   389  00D314                     __end_of_KeyTim:
   390                           ;keypad.c: 129: unsigned char PresKeyEX(unsigned
      +                           char k,StPin *ky)
   391                           ;keypad.c: 130: {
   392  00D314  00DB               	dw	?_PresKeyEX
   393  00D316                     _PresKeyEX:
   394  000000                     
   395                           ; _k loaded to fsr1l
   396  00D316  6EE1               	movwf	fsr1l,c
   397                           ;keypad.c: 132: (*ky).bk=(k)?1:0;
   398                           ; _ky loaded to fsr2
   399  00D318  C0DB  FFD9         	movff	?_PresKeyEX,fsr2l
   400  00D31C  C0DC  FFDA         	movff	?_PresKeyEX+1,fsr2h
   401  00D320  0E00               	movlw	0
   402  00D322  6A00               	clrf	btemp,c
   403  00D324  62E1               	cpfseq	fsr1l,c
   404  00D326  2A00               	incf	btemp,f,c
   405  00D328  50DF               	movf	indf2,w,c
   406  00D32A  1800               	xorwf	btemp,w,c
   407  00D32C  0BFE               	andlw	-2
   408  00D32E  1800               	xorwf	btemp,w,c
   409  00D330  6EDF               	movwf	indf2,c
   410                           ;keypad.c: 133: switch ((*ky).krk)
   411  00D332  D0D1               	goto	l17
   412  00D334                     l18:
   413                           ;keypad.c: 134: {
   414                           ;keypad.c: 137: {
   415  00D334  50DF               	movf	indf2,w,c
   416  00D336  6E00               	movwf	btemp,c
   417  00D338  B200               	btfsc	btemp,1,c
   418  00D33A  D016               	goto	l19
   419  00D33C  50DF               	movf	indf2,w,c
   420  00D33E  6E00               	movwf	btemp,c
   421                           ;keypad.c: 139: {
   422  00D340  50DF               	movf	indf2,w,c
   423  00D342  A000               	btfss	btemp,0,c
   424  00D344  D012               	goto	L1
   425  00D346  0BFD               	andlw	-3
   426  00D348  0902               	iorlw	2
   427  00D34A  6EDF               	movwf	indf2,c
   428                           ;keypad.c: 141: StartKeyTim(ky);
   429  00D34C  CFD9 F0FA          	movff	fsr2l,?_StartKeyTim
   430  00D350  CFDA F0FB          	movff	fsr2h,?_StartKeyTim+1
   431  00D354  DFC2               	call	_StartKeyTim	;wreg free
   432                           ;keypad.c: 142: (*ky).krk=1;
   433  00D356  EE00 F003          	lfsr	0,3
   434  00D35A  50D9               	movf	fsr2l,w,c
   435  00D35C  26E9               	addwf	fsr0l,f,c
   436  00D35E  50DA               	movf	fsr2h,w,c
   437  00D360  22EA               	addwfc	fsr0h,f,c
   438  00D362  0E01               	movlw	1
   439  00D364  6EEF               	movwf	indf0,c
   440                           ;keypad.c: 143: }
   441  00D366  0C00               	retlw	0
   442  00D368                     l19:
   443                           ;keypad.c: 144: else (*ky).sbk=((*ky).bk)?1:0;
   444  00D368  50DF               	movf	indf2,w,c
   445  00D36A                     L1:
   446  00D36A  6E00               	movwf	btemp,c
   447  00D36C  0E00               	movlw	0
   448  00D36E  B000               	btfsc	btemp,0,c
   449  00D370  0E01               	movlw	1
   450  00D372  6E00               	movwf	btemp,c
   451  00D374  3600               	rlcf	btemp,f,c
   452  00D376  50DF               	movf	indf2,w,c
   453  00D378  1800               	xorwf	btemp,w,c
   454  00D37A  0BFD               	andlw	-3
   455  00D37C  1800               	xorwf	btemp,w,c
   456  00D37E  6EDF               	movwf	indf2,c
   457                           ;keypad.c: 145: return 0;
   458  00D380  0C00               	retlw	0
   459  00D382                     l21:
   460                           ;keypad.c: 146: }
   461                           ;keypad.c: 149: {
   462  00D382  EE10 F004          	lfsr	1,4
   463  00D386  50D9               	movf	fsr2l,w,c
   464  00D388  26E1               	addwf	fsr1l,f,c
   465  00D38A  50DA               	movf	fsr2h,w,c
   466  00D38C  22E2               	addwfc	fsr1h,f,c
   467  00D38E  CFD9 F0FA          	movff	fsr2l,?_KeyTim
   468  00D392  CFDA F0FB          	movff	fsr2h,?_KeyTim+1
   469  00D396  DFB5               	call	_KeyTim	;wreg free
   470  00D398  6E00               	movwf	btemp,c
   471  00D39A  2800               	incf	btemp,w,c
   472  00D39C  6EE7               	movwf	indf1,c
   473                           ;keypad.c: 151: if((*ky).val>99) (*ky).val=99;
   474  00D39E  EE00 F004          	lfsr	0,4
   475  00D3A2  50D9               	movf	fsr2l,w,c
   476  00D3A4  26E9               	addwf	fsr0l,f,c
   477  00D3A6  50DA               	movf	fsr2h,w,c
   478  00D3A8  22EA               	addwfc	fsr0h,f,c
   479  00D3AA  50EF               	movf	indf0,w,c
   480  00D3AC  6E00               	movwf	btemp,c
   481  00D3AE  0E64               	movlw	100
   482  00D3B0  5C00               	subwf	btemp,w,c
   483  00D3B2  E308               	bnc	l22
   484  00D3B4  EE00 F004          	lfsr	0,4
   485  00D3B8  50D9               	movf	fsr2l,w,c
   486  00D3BA  26E9               	addwf	fsr0l,f,c
   487  00D3BC  50DA               	movf	fsr2h,w,c
   488  00D3BE  22EA               	addwfc	fsr0h,f,c
   489  00D3C0  0E63               	movlw	99
   490  00D3C2  6EEF               	movwf	indf0,c
   491  00D3C4                     l22:
   492                           ;keypad.c: 152: if((*ky).sbk&&!(*ky).bk)
   493  00D3C4  50DF               	movf	indf2,w,c
   494  00D3C6  6E00               	movwf	btemp,c
   495  00D3C8  A200               	btfss	btemp,1,c
   496  00D3CA  D037               	goto	l23
   497  00D3CC  50DF               	movf	indf2,w,c
   498  00D3CE  6E00               	movwf	btemp,c
   499  00D3D0  B000               	btfsc	btemp,0,c
   500  00D3D2  D033               	goto	l23
   501                           ;keypad.c: 153: {
   502  00D3D4  0EFD               	movlw	-3
   503  00D3D6  16DF               	andwf	indf2,f,c
   504                           ;keypad.c: 155: if(((*ky).val-1)<8)
   505  00D3D8  EE00 F004          	lfsr	0,4
   506  00D3DC  50D9               	movf	fsr2l,w,c
   507  00D3DE  26E9               	addwf	fsr0l,f,c
   508  00D3E0  50DA               	movf	fsr2h,w,c
   509  00D3E2  22EA               	addwfc	fsr0h,f,c
   510  00D3E4  50EF               	movf	indf0,w,c
   511  00D3E6  6E00               	movwf	btemp,c
   512  00D3E8  0FFF               	addlw	255
   513  00D3EA  6E02               	movwf	btemp+2,c
   514  00D3EC  6A03               	clrf	btemp+3,c
   515  00D3EE  0EFF               	movlw	255
   516  00D3F0  2203               	addwfc	btemp+3,f,c
   517  00D3F2  5003               	movf	btemp+3,w,c
   518  00D3F4  0A80               	xorlw	128
   519  00D3F6  0F80               	addlw	-128
   520  00D3F8  0E08               	movlw	8
   521  00D3FA  B4D8               	btfsc	status,2,c
   522  00D3FC  5C02               	subwf	btemp+2,w,c
   523  00D3FE  E208               	bc	l24
   524                           ;keypad.c: 156: {
   525  00D400  EE00 F004          	lfsr	0,4
   526  00D404  50D9               	movf	fsr2l,w,c
   527  00D406  26E9               	addwf	fsr0l,f,c
   528  00D408  50DA               	movf	fsr2h,w,c
   529  00D40A  22EA               	addwfc	fsr0h,f,c
   530  00D40C  0E64               	movlw	100
   531  00D40E  6EEF               	movwf	indf0,c
   532  00D410                     l24:
   533                           ;keypad.c: 158: }
   534  00D410  CFD9 F0FA          	movff	fsr2l,?_StartKeyTim
   535  00D414  CFDA F0FB          	movff	fsr2h,?_StartKeyTim+1
   536  00D418  DF60               	call	_StartKeyTim	;wreg free
   537                           ;keypad.c: 160: (*ky).krk=2;
   538  00D41A  EE00 F003          	lfsr	0,3
   539  00D41E  50D9               	movf	fsr2l,w,c
   540  00D420  26E9               	addwf	fsr0l,f,c
   541  00D422  50DA               	movf	fsr2h,w,c
   542  00D424  22EA               	addwfc	fsr0h,f,c
   543  00D426  0E02               	movlw	2
   544  00D428  6EEF               	movwf	indf0,c
   545                           ;keypad.c: 161: return (*ky).val;
   546  00D42A  EE00 F004          	lfsr	0,4
   547  00D42E  50D9               	movf	fsr2l,w,c
   548  00D430  26E9               	addwf	fsr0l,f,c
   549  00D432  50DA               	movf	fsr2h,w,c
   550  00D434  22EA               	addwfc	fsr0h,f,c
   551  00D436  50EF               	movf	indf0,w,c
   552  00D438  0012               	return	
   553  00D43A                     l23:
   554                           ;keypad.c: 162: }
   555  00D43A  EE00 F004          	lfsr	0,4
   556  00D43E  50D9               	movf	fsr2l,w,c
   557  00D440  26E9               	addwf	fsr0l,f,c
   558  00D442  50DA               	movf	fsr2h,w,c
   559  00D444  22EA               	addwfc	fsr0h,f,c
   560  00D446  50EF               	movf	indf0,w,c
   561  00D448  0012               	return	
   562  00D44A                     l25:
   563                           ;keypad.c: 164: }
   564                           ;keypad.c: 167: {
   565  00D44A  CFD9 F0FA          	movff	fsr2l,?_KeyTim
   566  00D44E  CFDA F0FB          	movff	fsr2h,?_KeyTim+1
   567  00D452  DF57               	call	_KeyTim	;wreg free
   568  00D454  6E00               	movwf	btemp,c
   569  00D456  C000  F002         	movff	btemp,btemp+2
   570  00D45A  6A03               	clrf	btemp+3,c
   571  00D45C  5003               	movf	btemp+3,w,c
   572  00D45E  0A80               	xorlw	128
   573  00D460  0F80               	addlw	-128
   574  00D462  0E02               	movlw	2
   575  00D464  B4D8               	btfsc	status,2,c
   576  00D466  5C02               	subwf	btemp+2,w,c
   577  00D468  E308               	bnc	u191
   578  00D46A  50DF               	movf	indf2,w,c
   579  00D46C  6E00               	movwf	btemp,c
   580  00D46E  B200               	btfsc	btemp,1,c
   581  00D470  D004               	goto	u191
   582  00D472  50DF               	movf	indf2,w,c
   583  00D474  6E00               	movwf	btemp,c
   584  00D476  B000               	btfsc	btemp,0,c
   585  00D478  D010               	goto	u210
   586  00D47A                     u191:
   587  00D47A  CFD9 F0FA          	movff	fsr2l,?_KeyTim
   588  00D47E  CFDA F0FB          	movff	fsr2h,?_KeyTim+1
   589  00D482  DF3F               	call	_KeyTim	;wreg free
   590  00D484  6E00               	movwf	btemp,c
   591  00D486  C000  F002         	movff	btemp,btemp+2
   592  00D48A  6A03               	clrf	btemp+3,c
   593  00D48C  5003               	movf	btemp+3,w,c
   594  00D48E  0A80               	xorlw	128
   595  00D490  0F80               	addlw	-128
   596  00D492  0E0A               	movlw	10
   597  00D494  B4D8               	btfsc	status,2,c
   598  00D496  5C02               	subwf	btemp+2,w,c
   599  00D498  E308               	bnc	l26
   600  00D49A                     u210:
   601                           ;keypad.c: 169: {
   602  00D49A  EE00 F003          	lfsr	0,3
   603  00D49E  50D9               	movf	fsr2l,w,c
   604  00D4A0  26E9               	addwf	fsr0l,f,c
   605  00D4A2  50DA               	movf	fsr2h,w,c
   606  00D4A4  22EA               	addwfc	fsr0h,f,c
   607  00D4A6  6AEF               	clrf	indf0,c
   608                           ;keypad.c: 171: return 0;
   609  00D4A8  0C00               	retlw	0
   610  00D4AA                     l26:
   611                           ;keypad.c: 172: }
   612  00D4AA  EE00 F004          	lfsr	0,4
   613  00D4AE  50D9               	movf	fsr2l,w,c
   614  00D4B0  26E9               	addwf	fsr0l,f,c
   615  00D4B2  50DA               	movf	fsr2h,w,c
   616  00D4B4  22EA               	addwfc	fsr0h,f,c
   617  00D4B6  50EF               	movf	indf0,w,c
   618  00D4B8  0012               	return	
   619  00D4BA                     l27:
   620                           ;keypad.c: 174: }
   621                           ;keypad.c: 176: {
   622  00D4BA  50DF               	movf	indf2,w,c
   623  00D4BC  6E00               	movwf	btemp,c
   624  00D4BE  B000               	btfsc	btemp,0,c
   625  00D4C0  0C00               	retlw	0
   626                           ;keypad.c: 178: {
   627  00D4C2  0EFD               	movlw	-3
   628  00D4C4  16DF               	andwf	indf2,f,c
   629                           ;keypad.c: 180: (*ky).krk=0;
   630  00D4C6  EE00 F003          	lfsr	0,3
   631  00D4CA  50D9               	movf	fsr2l,w,c
   632  00D4CC  26E9               	addwf	fsr0l,f,c
   633  00D4CE  50DA               	movf	fsr2h,w,c
   634  00D4D0  22EA               	addwfc	fsr0h,f,c
   635  00D4D2  6AEF               	clrf	indf0,c
   636                           ;keypad.c: 181: }
   637  00D4D4  0C00               	retlw	0
   638  00D4D6                     l17:
   639  00D4D6  EE00 F003          	lfsr	0,3
   640  00D4DA  50D9               	movf	fsr2l,w,c
   641  00D4DC  26E9               	addwf	fsr0l,f,c
   642  00D4DE  50DA               	movf	fsr2h,w,c
   643  00D4E0  22EA               	addwfc	fsr0h,f,c
   644  00D4E2  50EF               	movf	indf0,w,c
   645  00D4E4  E101 D726          	bz	l18
   646  00D4E8  0A01               	xorlw	1
   647  00D4EA  E101 D74A          	bz	l21
   648  00D4EE  0A03               	xorlw	3
   649  00D4F0  E0AC               	bz	l25
   650  00D4F2  0A01               	xorlw	1
   651  00D4F4  E0E2               	bz	l27
   652                           ;keypad.c: 185: return 0;
   653  00D4F6  0C00               	retlw	0
   654                           ;keypad.c: 186: }
   655  00D4F8                     __end_of_PresKeyEX:
   656                           ;keypad.c: 188: void ResBufKeyEx(StPin *ky)
   657                           ;keypad.c: 189: {
   658  00D4F8  00DB               	dw	?_ResBufKeyEx
   659  00D4FA                     _ResBufKeyEx:
   660  000000                     
   661                           ;keypad.c: 190: (*ky).sbk=0;
   662                           ; _ky loaded to fsr1
   663  00D4FA  C0DB  FFE1         	movff	?_ResBufKeyEx,fsr1l
   664  00D4FE  C0DC  FFE2         	movff	?_ResBufKeyEx+1,fsr1h
   665  00D502  0EFD               	movlw	-3
   666  00D504  16E7               	andwf	indf1,f,c
   667                           ;keypad.c: 191: (*ky).krk=0;
   668  00D506  EE00 F003          	lfsr	0,3
   669  00D50A  50E1               	movf	fsr1l,w,c
   670  00D50C  26E9               	addwf	fsr0l,f,c
   671  00D50E  50E2               	movf	fsr1h,w,c
   672  00D510  22EA               	addwfc	fsr0h,f,c
   673  00D512  6AEF               	clrf	indf0,c
   674                           ;keypad.c: 192: (*ky).val=0;
   675  00D514  EE00 F004          	lfsr	0,4
   676  00D518  50E1               	movf	fsr1l,w,c
   677  00D51A  26E9               	addwf	fsr0l,f,c
   678  00D51C  50E2               	movf	fsr1h,w,c
   679  00D51E  22EA               	addwfc	fsr0h,f,c
   680  00D520  6AEF               	clrf	indf0,c
   681                           ;keypad.c: 193: }
   682  00D522  0C00               	retlw	0
   683  00D524                     __end_of_ResBufKeyEx:
   684                           ;keypad.c: 195: void WaitToLowEx(StPin *ky)
   685                           ;keypad.c: 196: {
   686  00D524  00DB               	dw	?_WaitToLowEx
   687  00D526                     _WaitToLowEx:
   688  000000                     
   689                           ;keypad.c: 197: (*ky).krk=3;
   690                           ; _ky loaded to fsr1
   691  00D526  C0DB  FFE1         	movff	?_WaitToLowEx,fsr1l
   692  00D52A  C0DC  FFE2         	movff	?_WaitToLowEx+1,fsr1h
   693  00D52E  EE00 F003          	lfsr	0,3
   694  00D532  50E1               	movf	fsr1l,w,c
   695  00D534  26E9               	addwf	fsr0l,f,c
   696  00D536  50E2               	movf	fsr1h,w,c
   697  00D538  22EA               	addwfc	fsr0h,f,c
   698  00D53A  0E03               	movlw	3
   699  00D53C  6EEF               	movwf	indf0,c
   700                           ;keypad.c: 198: (*ky).val=0;
   701  00D53E  EE00 F004          	lfsr	0,4
   702  00D542  50E1               	movf	fsr1l,w,c
   703  00D544  26E9               	addwf	fsr0l,f,c
   704  00D546  50E2               	movf	fsr1h,w,c
   705  00D548  22EA               	addwfc	fsr0h,f,c
   706  00D54A  6AEF               	clrf	indf0,c
   707                           ;keypad.c: 199: }
   708  00D54C  0C00               	retlw	0
   709  00D54E                     __end_of_WaitToLowEx:
   710                           ;keypad.c: 286: unsigned char ExxPresKey(unsigne
      +                          d char k,StPin *ky,unsigned char dTim,unsigned c
      +                          har pTim)
   711                           ;keypad.c: 287: {
   712  00D54E  00F6               	dw	?_ExxPresKey
   713  00D550                     _ExxPresKey:
   714  000000                     
   715                           ; _k loaded to fsr1l
   716  00D550  6EE1               	movwf	fsr1l,c
   717                           ;keypad.c: 288: (*ky).bk=(k)?1:0;
   718                           ; _ky loaded to fsr2
   719  00D552  C0F6  FFD9         	movff	?_ExxPresKey,fsr2l
   720  00D556  C0F7  FFDA         	movff	?_ExxPresKey+1,fsr2h
   721  00D55A  0E00               	movlw	0
   722  00D55C  6A00               	clrf	btemp,c
   723  00D55E  62E1               	cpfseq	fsr1l,c
   724  00D560  2A00               	incf	btemp,f,c
   725  00D562  50DF               	movf	indf2,w,c
   726  00D564  1800               	xorwf	btemp,w,c
   727  00D566  0BFE               	andlw	-2
   728  00D568  1800               	xorwf	btemp,w,c
   729  00D56A  6EDF               	movwf	indf2,c
   730                           ;keypad.c: 290: if((*ky).fl&&(*ky).sbk&&!(*ky).b
      +                          k)
   731  00D56C  50DF               	movf	indf2,w,c
   732  00D56E  6E00               	movwf	btemp,c
   733  00D570  A800               	btfss	btemp,4,c
   734  00D572  D01B               	goto	l32
   735  00D574  50DF               	movf	indf2,w,c
   736  00D576  6E00               	movwf	btemp,c
   737  00D578  A200               	btfss	btemp,1,c
   738  00D57A  D017               	goto	l32
   739  00D57C  50DF               	movf	indf2,w,c
   740  00D57E  6E00               	movwf	btemp,c
   741  00D580  B000               	btfsc	btemp,0,c
   742  00D582  D013               	goto	l32
   743                           ;keypad.c: 291: {
   744  00D584  0EEF               	movlw	-17
   745  00D586  16DF               	andwf	indf2,f,c
   746                           ;keypad.c: 293: (*ky).sbk=((*ky).bk)?1:0;
   747  00D588  50DF               	movf	indf2,w,c
   748  00D58A  6E00               	movwf	btemp,c
   749  00D58C  0E00               	movlw	0
   750  00D58E  B000               	btfsc	btemp,0,c
   751  00D590  0E01               	movlw	1
   752  00D592  6E00               	movwf	btemp,c
   753  00D594  3600               	rlcf	btemp,f,c
   754  00D596  50DF               	movf	indf2,w,c
   755  00D598  1800               	xorwf	btemp,w,c
   756  00D59A  0BFD               	andlw	-3
   757  00D59C  1800               	xorwf	btemp,w,c
   758  00D59E  6EDF               	movwf	indf2,c
   759                           ;keypad.c: 294: StartKeyTim(ky);
   760  00D5A0  CFD9 F0FA          	movff	fsr2l,?_StartKeyTim
   761  00D5A4  CFDA F0FB          	movff	fsr2h,?_StartKeyTim+1
   762  00D5A8  DE98               	call	_StartKeyTim	;wreg free
   763  00D5AA                     l32:
   764                           ;keypad.c: 295: }
   765  00D5AA  50DF               	movf	indf2,w,c
   766  00D5AC  6E00               	movwf	btemp,c
   767  00D5AE  B200               	btfsc	btemp,1,c
   768  00D5B0  D016               	goto	l33
   769  00D5B2  50DF               	movf	indf2,w,c
   770  00D5B4  6E00               	movwf	btemp,c
   771  00D5B6  A000               	btfss	btemp,0,c
   772  00D5B8  D012               	goto	l33
   773                           ;keypad.c: 297: {
   774  00D5BA  50DF               	movf	indf2,w,c
   775  00D5BC  6E00               	movwf	btemp,c
   776  00D5BE  0E00               	movlw	0
   777  00D5C0  B000               	btfsc	btemp,0,c
   778  00D5C2  0E01               	movlw	1
   779  00D5C4  6E00               	movwf	btemp,c
   780  00D5C6  3600               	rlcf	btemp,f,c
   781  00D5C8  50DF               	movf	indf2,w,c
   782  00D5CA  1800               	xorwf	btemp,w,c
   783  00D5CC  0BFD               	andlw	-3
   784  00D5CE  1800               	xorwf	btemp,w,c
   785  00D5D0  6EDF               	movwf	indf2,c
   786                           ;keypad.c: 299: StartKeyTim(ky);
   787  00D5D2  CFD9 F0FA          	movff	fsr2l,?_StartKeyTim
   788  00D5D6  CFDA F0FB          	movff	fsr2h,?_StartKeyTim+1
   789  00D5DA  DE7F               	call	_StartKeyTim	;wreg free
   790                           ;keypad.c: 300: return 1;
   791  00D5DC  0C01               	retlw	1
   792  00D5DE                     l33:
   793                           ;keypad.c: 301: }
   794  00D5DE  50DF               	movf	indf2,w,c
   795  00D5E0  6E00               	movwf	btemp,c
   796  00D5E2  B800               	btfsc	btemp,4,c
   797  00D5E4  D019               	goto	l34
   798  00D5E6  50DF               	movf	indf2,w,c
   799  00D5E8  6E00               	movwf	btemp,c
   800  00D5EA  A200               	btfss	btemp,1,c
   801  00D5EC  D015               	goto	l34
   802  00D5EE  50DF               	movf	indf2,w,c
   803  00D5F0  6E00               	movwf	btemp,c
   804  00D5F2  B000               	btfsc	btemp,0,c
   805  00D5F4  D011               	goto	l34
   806                           ;keypad.c: 303: {
   807  00D5F6  50DF               	movf	indf2,w,c
   808  00D5F8  6E00               	movwf	btemp,c
   809  00D5FA  0E00               	movlw	0
   810  00D5FC  B000               	btfsc	btemp,0,c
   811  00D5FE  0E01               	movlw	1
   812  00D600  6E00               	movwf	btemp,c
   813  00D602  3600               	rlcf	btemp,f,c
   814  00D604  50DF               	movf	indf2,w,c
   815  00D606  1800               	xorwf	btemp,w,c
   816  00D608  0BFD               	andlw	-3
   817  00D60A  1800               	xorwf	btemp,w,c
   818  00D60C  6EDF               	movwf	indf2,c
   819                           ;keypad.c: 305: StartKeyTim(ky);
   820  00D60E  CFD9 F0FA          	movff	fsr2l,?_StartKeyTim
   821  00D612  CFDA F0FB          	movff	fsr2h,?_StartKeyTim+1
   822  00D616  DE61               	call	_StartKeyTim	;wreg free
   823  00D618                     l34:
   824                           ;keypad.c: 306: }
   825  00D618  50DF               	movf	indf2,w,c
   826  00D61A  6E00               	movwf	btemp,c
   827  00D61C  A200               	btfss	btemp,1,c
   828  00D61E  D046               	goto	l35
   829  00D620  50DF               	movf	indf2,w,c
   830  00D622  6E00               	movwf	btemp,c
   831  00D624  A000               	btfss	btemp,0,c
   832  00D626  D042               	goto	l35
   833                           ;keypad.c: 308: {
   834  00D628  50DF               	movf	indf2,w,c
   835  00D62A  6E00               	movwf	btemp,c
   836  00D62C  B400               	btfsc	btemp,2,c
   837  00D62E  D01E               	goto	l36
   838  00D630  C0F8  F000         	movff	?_ExxPresKey+2,btemp
   839  00D634  6A01               	clrf	btemp+1,c
   840  00D636  CFD9 F0FA          	movff	fsr2l,?_KeyTim
   841  00D63A  CFDA F0FB          	movff	fsr2h,?_KeyTim+1
   842  00D63E  DE61               	call	_KeyTim	;wreg free
   843  00D640  6E02               	movwf	btemp+2,c
   844  00D642  C002  FFF6         	movff	btemp+2,tblptrl
   845  00D646  6AF7               	clrf	tblptrh,c
   846  00D648  50F7               	movf	tblptrh,w,c
   847  00D64A  0A80               	xorlw	128
   848  00D64C  6E02               	movwf	btemp+2,c
   849  00D64E  5001               	movf	btemp+1,w,c
   850  00D650  0A80               	xorlw	128
   851  00D652  5C02               	subwf	btemp+2,w,c
   852  00D654  E102               	bnz	u405
   853  00D656  5000               	movf	btemp,w,c
   854  00D658  5CF6               	subwf	tblptrl,w,c
   855  00D65A                     u405:
   856  00D65A  E308               	bnc	l36
   857                           ;keypad.c: 311: {
   858  00D65C  50DF               	movf	indf2,w,c
   859  00D65E  0BEF               	andlw	-17
   860  00D660  0910               	iorlw	16
   861  00D662  6EDF               	movwf	indf2,c
   862                           ;keypad.c: 313: (*ky).ap=1;
   863  00D664  50DF               	movf	indf2,w,c
   864  00D666  0BFB               	andlw	-5
   865  00D668  0904               	iorlw	4
   866  00D66A  6EDF               	movwf	indf2,c
   867  00D66C                     l36:
   868                           ;keypad.c: 314: }
   869  00D66C  50DF               	movf	indf2,w,c
   870  00D66E  6E00               	movwf	btemp,c
   871  00D670  A400               	btfss	btemp,2,c
   872  00D672  D01E               	goto	l38
   873  00D674  C0F9  F000         	movff	?_ExxPresKey+3,btemp
   874  00D678  6A01               	clrf	btemp+1,c
   875  00D67A  CFD9 F0FA          	movff	fsr2l,?_KeyTim
   876  00D67E  CFDA F0FB          	movff	fsr2h,?_KeyTim+1
   877  00D682  DE3F               	call	_KeyTim	;wreg free
   878  00D684  6E02               	movwf	btemp+2,c
   879  00D686  C002  FFF6         	movff	btemp+2,tblptrl
   880  00D68A  6AF7               	clrf	tblptrh,c
   881  00D68C  50F7               	movf	tblptrh,w,c
   882  00D68E  0A80               	xorlw	128
   883  00D690  6E02               	movwf	btemp+2,c
   884  00D692  5001               	movf	btemp+1,w,c
   885  00D694  0A80               	xorlw	128
   886  00D696  5C02               	subwf	btemp+2,w,c
   887  00D698  E102               	bnz	u435
   888  00D69A  5000               	movf	btemp,w,c
   889  00D69C  5CF6               	subwf	tblptrl,w,c
   890  00D69E                     u435:
   891  00D69E  E308               	bnc	l38
   892                           ;keypad.c: 316: {
   893  00D6A0  CFD9 F0FA          	movff	fsr2l,?_StartKeyTim
   894  00D6A4  CFDA F0FB          	movff	fsr2h,?_StartKeyTim+1
   895  00D6A8  DE18               	call	_StartKeyTim	;wreg free
   896                           ;keypad.c: 318: return 2;
   897  00D6AA  0C02               	retlw	2
   898                           ;keypad.c: 319: }
   899  00D6AC                     l35:
   900  00D6AC  0EFB               	movlw	-5
   901  00D6AE  16DF               	andwf	indf2,f,c
   902  00D6B0                     l38:
   903                           ;keypad.c: 321: (*ky).sbk=((*ky).bk)?1:0;
   904  00D6B0  50DF               	movf	indf2,w,c
   905  00D6B2  6E00               	movwf	btemp,c
   906  00D6B4  0E00               	movlw	0
   907  00D6B6  B000               	btfsc	btemp,0,c
   908  00D6B8  0E01               	movlw	1
   909  00D6BA  6E00               	movwf	btemp,c
   910  00D6BC  3600               	rlcf	btemp,f,c
   911  00D6BE  50DF               	movf	indf2,w,c
   912  00D6C0  1800               	xorwf	btemp,w,c
   913  00D6C2  0BFD               	andlw	-3
   914  00D6C4  1800               	xorwf	btemp,w,c
   915  00D6C6  6EDF               	movwf	indf2,c
   916                           ;keypad.c: 322: if ((*ky).ap) return 3;
   917  00D6C8  50DF               	movf	indf2,w,c
   918  00D6CA  6E00               	movwf	btemp,c
   919  00D6CC  B400               	btfsc	btemp,2,c
   920  00D6CE  0C03               	retlw	3
   921                           ;keypad.c: 323: return 0;
   922  00D6D0  0C00               	retlw	0
   923                           ;keypad.c: 324: }
   924  00D6D2                     __end_of_ExxPresKey:
   925                           ;keypad.c: 325: void ExxResKey(StPin *ky)
   926                           ;keypad.c: 326: {
   927  00D6D2  00D7               	dw	?_ExxResKey
   928  00D6D4                     _ExxResKey:
   929  000000                     
   930                           ;keypad.c: 327: (*ky).bk=0;
   931                           ; _ky loaded to fsr1
   932  00D6D4  C0D7  FFE1         	movff	?_ExxResKey,fsr1l
   933  00D6D8  C0D8  FFE2         	movff	?_ExxResKey+1,fsr1h
   934  00D6DC  0EFE               	movlw	-2
   935  00D6DE  16E7               	andwf	indf1,f,c
   936                           ;keypad.c: 328: (*ky).sbk=0;
   937  00D6E0  0EFD               	movlw	-3
   938  00D6E2  16E7               	andwf	indf1,f,c
   939                           ;keypad.c: 329: (*ky).ap=0;
   940  00D6E4  0EFB               	movlw	-5
   941  00D6E6  16E7               	andwf	indf1,f,c
   942                           ;keypad.c: 330: StartKeyTim(ky);
   943  00D6E8  CFE1 F0FA          	movff	fsr1l,?_StartKeyTim
   944  00D6EC  CFE2 F0FB          	movff	fsr1h,?_StartKeyTim+1
   945  00D6F0  D5F4               	goto	_StartKeyTim	;wreg free
   946                           ;keypad.c: 331: }
   947  00D6F2                     __end_of_ExxResKey:
   948  000000                     
   949  000000                     
   950  000000                     
   951  000000                     
   952  000000                     
   953  000000                     
   954  000000                     
   955  000000                     
   956  000000                     
   957  000000                     
   958  000000                     
   959  000000                     
   960  000000                     
   961  000000                     
   962  000000                     
   963  000000                     
   964  000000                     
   965  000000                     
   966  000000                     
   967  000000                     
   968  000000                     
   969  000000                     
   970  000000                     
   971  000000                     
   972  000000                     
   973  000000                     
   974  000000                     
   975  000000                     
   976  000000                     
   977  000000                     
   978  000000                     
   979  000000                     
   980  000000                     
   981  000000                     
   982  000000                     
   983  000000                     
   984  000000                     
   985  000000                     
   986  000000                     
   987  000000                     
   988  000000                     
   989  000000                     
   990  000000                     
   991  000000                     
   992  000000                     
   993  000000                     
   994  000000                     
   995  000000                     
   996  000000                     
   997  000000                     
   998  000000                     
   999  000000                     
  1000  000000                     
  1001  000000                     
  1002  000000                     
  1003  000000                     
  1004  000000                     
  1005  000000                     
  1006  000000                     
  1007  000000                     
  1008  000000                     
  1009  000000                     
  1010  000000                     
  1011  000000                     
  1012  000000                     
  1013  000000                     
  1014  000000                     
  1015  000000                     
  1016  000000                     
  1017  000000                     
  1018  000000                     
  1019  000000                     
  1020  000000                     
  1021  000000                     
  1022  000000                     
  1023  000000                     
  1024  000000                     
  1025  000000                     
  1026  000000                     
  1027  000000                     
  1028  000000                     
  1029  000000                     
  1030  000000                     
  1031  000000                     
  1032  000000                     
  1033  000000                     
  1034  000000                     
  1035  000000                     
  1036  000000                     
  1037  000000                     
  1038  000000                     
  1039  000000                     
  1040  000000                     
  1041  000000                     
  1042  000000                     
  1043  000000                     
  1044  000000                     
  1045  000000                     
  1046  000000                     
  1047  000000                     
  1048  000000                     
  1049  000000                     
  1050  000000                     
  1051  000000                     
  1052  000000                     
  1053  000000                     
  1054  000000                     
  1055  000000                     
  1056  000000                     
  1057  000000                     
  1058  000000                     
  1059  000000                     
  1060  000000                     
  1061  000000                     
  1062  000000                     
  1063  000000                     
  1064  000000                     
  1065  000000                     
  1066  000000                     
  1067  000000                     
  1068  000000                     
  1069  000000                     
  1070  000000                     
  1071  000000                     
  1072  000000                     
  1073  000000                     
  1074  000000                     
  1075  000000                     
  1076  000000                     
  1077  000000                     
  1078  000000                     
  1079  000000                     
  1080  000000                     
  1081  000000                     
  1082  000000                     
  1083  000000                     
  1084  000000                     
  1085  000000                     
  1086  000000                     
  1087  000000                     
  1088  000000                     
  1089  000000                     
  1090  000000                     
  1091  000000                     
  1092  000000                     
  1093  000000                     
  1094  000000                     
  1095  000000                     
  1096  000000                     
  1097  000000                     
  1098  000000                     
  1099  000000                     
  1100  000000                     
  1101  000000                     
  1102  000000                     
  1103  000000                     
  1104  000000                     
  1105  000000                     
  1106  000000                     
  1107  000000                     
  1108  000000                     
  1109  000000                     
  1110  000000                     
  1111  000000                     
  1112  000000                     
  1113  000000                     
  1114  000000                     
  1115  000000                     
  1116  000000                     
  1117  000000                     
  1118  000000                     
  1119  000000                     
  1120  000000                     
  1121  000000                     
  1122  000000                     
  1123  000000                     
  1124  000000                     
  1125  000000                     
  1126  000000                     
  1127  000000                     
  1128  000000                     
  1129  000000                     
  1130  000000                     
  1131  000000                     
  1132  000000                     
  1133  000000                     
  1134  000000                     
  1135  000000                     
  1136  000000                     
  1137  000000                     
  1138  000000                     
  1139  000000                     
  1140  000000                     
  1141  000000                     
  1142  000000                     
  1143  000000                     
  1144  000000                     
  1145  000000                     
  1146  000000                     
  1147  000000                     
  1148  000000                     
  1149  000000                     
  1150  000000                     
  1151  000000                     
  1152  000000                     
  1153  000000                     
  1154  000000                     
  1155  000000                     
  1156  000000                     
  1157  000000                     
  1158  000000                     
  1159  000000                     
  1160  000000                     
  1161  000000                     
  1162  000000                     
  1163  000000                     
  1164  000000                     
  1165  000000                     
  1166  000000                     
  1167  000000                     
  1168  000000                     
  1169  000000                     
  1170  000000                     
  1171  000000                     
  1172  000000                     
  1173  000000                     
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  1185  000000                     
  1186  000000                     
  1187  000000                     
  1188  000000                     
  1189  000000                     
  1190  000000                     
  1191  000000                     
  1192  000000                     
  1193  000000                     
  1194  000000                     
  1195  000000                     
  1196  000000                     
  1197  000000                     
  1198  000000                     
  1199  000000                     
  1200  000000                     
  1201  000000                     
  1202  000000                     
  1203  000000                     
  1204  000000                     
  1205  000000                     
  1206  000000                     
  1207  000000                     
  1208  000000                     
  1209  000000                     
  1210  000000                     
  1211  000000                     
  1212  000000                     
  1213  000000                     
  1214  000000                     
  1215  000000                     
  1216  000000                     
  1217  000000                     
  1218  000000                     
  1219  000000                     
  1220  000000                     
  1221  000000                     
  1222  000000                     
  1223  000000                     
  1224  000000                     
  1225  000000                     
  1226  000000                     
  1227  000000                     
  1228  000000                     
  1229  000000                     
  1230  000000                     
  1231  000000                     
  1232  000000                     
  1233  000000                     
  1234  000000                     
  1235  000000                     
  1236  000000                     
  1237  000000                     
  1238  000000                     
  1239  000000                     
  1240  000000                     
  1241  000000                     
  1242  000000                     
  1243  000000                     
  1244  000000                     
  1245  000000                     
  1246  000000                     
  1247  000000                     
  1248  000000                     
  1249  000000                     
  1250  000000                     
  1251  000000                     
  1252  000000                     
  1253  000000                     
  1254  000000                     
  1255  000000                     
  1256  000000                     
  1257  000000                     
  1258  000000                     
  1259  000000                     
  1260  000000                     
  1261  000000                     
  1262  000000                     
  1263  000000                     
  1264  000000                     
  1265  000000                     
  1266  000000                     
  1267  000000                     
  1268  000000                     
  1269  000000                     
  1270  000000                     
  1271  000000                     
  1272  000000                     
  1273  000000                     
  1274  000000                     
  1275  000000                     
  1276  000000                     
  1277  000000                     
  1278  000000                     
  1279  000000                     
  1280  000000                     
  1281  000000                     
  1282  000000                     
  1283  000000                     
  1284  000000                     
  1285  000000                     
  1286  000000                     
  1287  000000                     
  1288  000000                     
  1289  000000                     
  1290  000000                     
  1291  000000                     
  1292  000000                     
  1293  000000                     
  1294  000000                     
  1295  000000                     
  1296  000000                     
  1297  000000                     
  1298  000000                     
  1299  000000                     
  1300  000000                     
  1301  000000                     
  1302  000000                     
  1303  000000                     
  1304  000000                     
  1305  000000                     
  1306  000000                     
  1307  000000                     
  1308  000000                     
  1309  000000                     
  1310  000000                     
  1311  000000                     
  1312  000000                     
  1313  000000                     
  1314  000000                     
  1315  000000                     
  1316  000000                     
  1317  000000                     
  1318  000000                     
  1319  000000                     
  1320  000000                     
  1321  000000                     
  1322  000000                     
  1323  000000                     
  1324  000000                     
  1325  000000                     
  1326  000000                     
  1327  000000                     
  1328  000000                     
  1329  000000                     
  1330  000000                     
  1331  000000                     
  1332  000000                     
  1333  000000                     
  1334  000000                     
  1335  000000                     
  1336  000000                     
  1337  000000                     
  1338  000000                     
  1339  000000                     
  1340  000000                     
  1341  000000                     
  1342  000000                     
  1343  000000                     
  1344  000000                     
  1345  000000                     
  1346  000000                     
  1347  000000                     
  1348  000000                     
  1349  000000                     
  1350  000000                     
  1351  000000                     
  1352  000000                     
  1353  000000                     
  1354  000000                     
  1355  000000                     
  1356  000000                     
  1357  000000                     
  1358  000000                     
  1359  000000                     
  1360  000000                     
  1361  000000                     
  1362  000000                     
  1363  000000                     
  1364  000000                     
  1365  000000                     
  1366  000000                     
  1367  000000                     
  1368  000000                     
  1369  000000                     
  1370  000000                     
  1371  000000                     
  1372  000000                     
  1373  000000                     
  1374  000000                     
  1375  000000                     
  1376  000000                     
  1377  000000                     
  1378  000000                     
  1379  000000                     
  1380  000000                     
  1381  000000                     
  1382  000000                     
  1383  000000                     
  1384  000000                     
  1385  000000                     
  1386  000000                     
  1387  000000                     
  1388  000000                     
  1389  000000                     
  1390  000000                     
  1391  000000                     
  1392  000000                     
  1393  000000                     
  1394  000000                     
  1395  000000                     
  1396  000000                     
  1397  000000                     
  1398  000000                     
  1399  000000                     
  1400  000000                     
  1401  000000                     
  1402  000000                     
  1403  000000                     
  1404  000000                     
  1405  000000                     
  1406  000000                     
  1407  000000                     
  1408  000000                     
  1409  000000                     
  1410  000000                     
  1411  000000                     
  1412  000000                     
  1413  000000                     
  1414  000000                     
  1415  000000                     
  1416  000000                     
  1417  000000                     
  1418  000000                     
  1419  000000                     
  1420  000000                     
  1421  000000                     
  1422  000000                     
  1423  000000                     
  1424  000000                     
  1425  000000                     
  1426  000000                     
  1427  000000                     
  1428  000000                     
  1429  000000                     
  1430  000000                     
  1431  000000                     
  1432  000000                     
  1433  000000                     
  1434  000000                     
  1435  000000                     
  1436  000000                     
  1437  000000                     
  1438  000000                     
  1439  000000                     
  1440  000000                     
  1441  000000                     
  1442  000000                     
  1443  000000                     
  1444  000000                     
  1445  000000                     
  1446  000000                     
  1447  000000                     
  1448  000000                     
  1449  000000                     
  1450  000000                     
  1451  000000                     
  1452  000000                     
  1453  000000                     
  1454  000000                     
  1455  000000                     
  1456  000000                     
  1457  000000                     
  1458  000000                     
  1459  000000                     
  1460  000000                     
  1461  000000                     
  1462  000000                     
  1463  000000                     
  1464  000000                     
  1465  000000                     
  1466  000000                     
  1467  000000                     
  1468  000000                     
  1469  000000                     
  1470  000000                     
  1471  000000                     
  1472  000000                     
  1473  000000                     
  1474  000000                     
  1475  000000                     
  1476  000000                     
  1477  000000                     
  1478  000000                     
  1479  000000                     
  1480  000000                     
  1481  000000                     
  1482  000000                     
  1483  000000                     
  1484  000000                     
  1485  000000                     
  1486  000000                     
  1487  000000                     
  1488  000000                     
  1489  000000                     
  1490  000000                     
  1491  000000                     
  1492  000000                     
  1493  000000                     
  1494  000000                     
  1495  000000                     
  1496  000000                     
  1497  000000                     
  1498  000000                     
  1499  000000                     
  1500  000000                     
  1501  000000                     
  1502  000000                     
  1503  000000                     
  1504  000000                     
  1505  000000                     
  1506  000000                     
  1507  000000                     
  1508  000000                     
  1509  000000                     
  1510  000000                     
  1511  000000                     
  1512  000000                     
  1513  000000                     
  1514  000000                     
  1515  000000                     
  1516                           
  1517                           	psect	bss
  1518  0001AD                     _ky:
  1519  0001AD                     	ds	35
  1520  0001AD                     _xxky:
  1521  0001AD                     	ds	35
  1522                           
  1523                           	psect	temp
  1524  000000                     btemp:
  1525  000000                     	ds	4
  1526                           tblptrh	equ	0xFF7
  1527                           tblptrl	equ	0xFF6
  1528                           prodh	equ	0xFF4
  1529                           prodl	equ	0xFF3
  1530                           indf0	equ	0xFEF
  1531                           fsr0h	equ	0xFEA
  1532                           fsr0l	equ	0xFE9
  1533                           indf1	equ	0xFE7
  1534                           fsr1h	equ	0xFE2
  1535                           fsr1l	equ	0xFE1
  1536                           indf2	equ	0xFDF
  1537                           fsr2h	equ	0xFDA
  1538                           fsr2l	equ	0xFD9
  1539                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Wed Mar 20 08:54:41 2013

                  l3 D1F4                    l6 D25C  
                  l8 D266            _PresKeyEX D316  
                 l11 D2CE                   l21 D382  
                 l22 D3C4                   l23 D43A  
                 l32 D5AA                   l24 D410  
                 l33 D5DE                   l25 D44A  
                 l17 D4D6                   l34 D618  
                 l26 D4AA                   l18 D334  
                 l35 D6AC                   l27 D4BA  
                 l19 D368                   l36 D66C  
                 l38 D6B0    __end_of_PresKeyEX D4F8  
                 _ky 01AD           ?_PresKeyEX 00DB  
                u210 D49A                  u405 D65A  
                u191 D47A                  u435 D69E  
        _WaitToLowEx D526  __end_of_WaitToLowEx D54E  
               fsr0h 000FEA                 fsr1h 000FE2  
               indf0 000FEF                 fsr0l 000FE9  
               indf1 000FE7                 fsr1l 000FE1  
               indf2 000FDF                 fsr2l 000FD9  
               btemp 0000                 _xxky 01D0  
               prodh 000FF4                 prodl 000FF3  
            ?_KeyTim 00FA         ?_WaitToLowEx 00DB  
        _IncKeyTimer D1F2           used_btemp0 0001  
         used_btemp1 0001           used_btemp2 0001  
         used_btemp3 0001  __end_of_IncKeyTimer D2D8  
              status 000FD8          _StartKeyTim D2DA  
__end_of_StartKeyTim D300              __Lparam 00D7  
            __ramtop 1000         ?_StartKeyTim 00FA  
     __end_of_KeyTim D314               _KeyTim D302  
        _ResBufKeyEx D4FA  __end_of_ResBufKeyEx D524  
             tblptrh 000FF7               tblptrl 000FF6  
         _ExxPresKey D550   __end_of_ExxPresKey D6D2  
          _ExxResKey D6D4    __end_of_ExxResKey D6F2  
        ?_ExxPresKey 00F6           ?_ExxResKey 00D7  
       ?_ResBufKeyEx 00DB  
