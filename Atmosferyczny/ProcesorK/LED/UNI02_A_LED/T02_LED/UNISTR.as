opt subtitle "HI-TECH Software Omniscient Code Generator (PRO mode) build 49521"

opt pagewidth 120

	opt pm

	processor	18F46K20
porta	equ	0F80h
portb	equ	0F81h
portc	equ	0F82h
portd	equ	0F83h
porte	equ	0F84h
lata	equ	0F89h
latb	equ	0F8Ah
latc	equ	0F8Bh
latd	equ	0F8Ch
late	equ	0F8Dh
trisa	equ	0F92h
trisb	equ	0F93h
trisc	equ	0F94h
trisd	equ	0F95h
trise	equ	0F96h
pie1	equ	0F9Dh
pir1	equ	0F9Eh
ipr1	equ	0F9Fh
pie2	equ	0FA0h
pir2	equ	0FA1h
ipr2	equ	0FA2h
t3con	equ	0FB1h
tmr3l	equ	0FB2h
tmr3h	equ	0FB3h
ccp1con	equ	0FBDh
ccpr1l	equ	0FBEh
ccpr1h	equ	0FBFh
adcon1	equ	0FC1h
adcon0	equ	0FC2h
adresl	equ	0FC3h
adresh	equ	0FC4h
sspcon2	equ	0FC5h
sspcon1	equ	0FC6h
sspstat	equ	0FC7h
sspadd	equ	0FC8h
sspbuf	equ	0FC9h
t2con	equ	0FCAh
pr2	equ	0FCBh
tmr2	equ	0FCCh
t1con	equ	0FCDh
tmr1l	equ	0FCEh
tmr1h	equ	0FCFh
rcon	equ	0FD0h
wdtcon	equ	0FD1h
lvdcon	equ	0FD2h
osccon	equ	0FD3h
t0con	equ	0FD5h
tmr0l	equ	0FD6h
tmr0h	equ	0FD7h
status	equ	0FD8h
fsr2	equ	0FD9h
fsr2l	equ	0FD9h
fsr2h	equ	0FDAh
plusw2	equ	0FDBh
preinc2	equ	0FDCh
postdec2	equ	0FDDh
postinc2	equ	0FDEh
indf2	equ	0FDFh
bsr	equ	0FE0h
fsr1	equ	0FE1h
fsr1l	equ	0FE1h
fsr1h	equ	0FE2h
plusw1	equ	0FE3h
preinc1	equ	0FE4h
postdec1	equ	0FE5h
postinc1	equ	0FE6h
indf1	equ	0FE7h
wreg	equ	0FE8h
fsr0	equ	0FE9h
fsr0l	equ	0FE9h
fsr0h	equ	0FEAh
plusw0	equ	0FEBh
preinc0	equ	0FECh
postdec0	equ	0FEDh
postinc0	equ	0FEEh
indf0	equ	0FEFh
intcon3	equ	0FF0h
intcon2	equ	0FF1h
intcon	equ	0FF2h
prod	equ	0FF3h
prodl	equ	0FF3h
prodh	equ	0FF4h
tablat	equ	0FF5h
tblptr	equ	0FF6h
tblptrl	equ	0FF6h
tblptrh	equ	0FF7h
tblptru	equ	0FF8h
pcl	equ	0FF9h
pclat	equ	0FFAh
pclath	equ	0FFAh
pclatu	equ	0FFBh
stkptr	equ	0FFCh
tosl	equ	0FFDh
tosh	equ	0FFEh
tosu	equ	0FFFh
skipnz macro
	btfsc	status,2
	endm
	global	__ramtop
	global	__accesstop
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 155 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 155 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 99,99,98,98,97,96,95,95 ;# 
# 156 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 156 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 94,93,92,92,91,90,90,89 ;# 
# 157 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 157 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 88,88,87,87,86,85,85,84 ;# 
# 158 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 158 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 84,83,82,82,81,81,80,80 ;# 
# 159 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 159 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 79,79,78,77,77,76,76,75 ;# 
# 160 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 160 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 75,74,74,73,73,72,72,71 ;# 
# 161 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 161 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 71,70,70,70,69,69,68,68 ;# 
# 162 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 162 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 67,67,66,66,65,65,64,64 ;# 
# 163 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 163 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 64,63,63,62,62,61,61,61 ;# 
# 164 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 164 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 60,60,59,59,58,58,57,57 ;# 
# 165 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 165 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 57,56,56,55,55,54,54,54 ;# 
# 166 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 166 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 53,53,52,52,52,51,51,50 ;# 
# 167 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 167 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 50,49,49,49,48,48,47,47 ;# 
# 168 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 168 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 46,46,46,45,45,44,44,44 ;# 
# 169 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 169 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 43,43,42,42,41,41,41,40 ;# 
# 170 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 170 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 40,39,39,38,38,37,37,37 ;# 
# 171 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 171 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 36,36,35,35,34,34,33,33 ;# 
# 172 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 172 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 32,32,31,31,30,30,29,29 ;# 
# 173 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 173 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 28,28,27,27,26,26,25,24 ;# 
# 174 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 174 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 24,23,23,22,22,21,21,20 ;# 
# 175 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 175 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 19,19,18,17,17,16,16,15 ;# 
# 176 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 176 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 14,14,13,12,11,11,10,09 ;# 
# 177 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 177 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 08,07,06,06,05,04,03,02 ;# 
# 178 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 178 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 01,00,00,00,00,00,00,00 ;# 
# 208 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 208 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 0,40,99,99,0,3,0,0 ;# 
# 209 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 209 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 1,85,60,3,0,0,00,00 ;# 
# 211 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 211 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 0,20,15,0,5,0,0,0 ;# 
# 212 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 212 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 0,0,0,0,0,0,0,0 ;# 
# 217 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 217 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 40,40,39,38,38,37,36,36 ;# 
# 218 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 218 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 35,34,34,33,33,32,32,31 ;# 
# 219 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 219 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 31,30,30,29,29,28,28,27 ;# 
# 220 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 220 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 27,26,26,25,25,24,24,23 ;# 
# 221 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 221 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 23,22,22,22,21,21,20,20 ;# 
# 222 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 222 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 20,19,19,18,18,18,17,17 ;# 
# 223 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 223 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 17,16,16,15,15,15,14,14 ;# 
# 224 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 224 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 14,13,13,13,12,12,12,11 ;# 
# 225 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 225 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 11,11,10,10,10,9,9,9 ;# 
# 226 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 226 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 8,8,8,7,7,7,6,6 ;# 
# 227 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 227 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 6,5,5,5,4,4,4,3 ;# 
# 228 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 228 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 3,3,2,2,2,1,1,1 ;# 
# 229 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 229 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 1,0,0,0,-1,-1,-1,-2 ;# 
# 230 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 230 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -2,-2,-2,-3,-3,-3,-4,-4 ;# 
# 231 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 231 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -4,-5,-5,-5,-6,-6,-6,-7 ;# 
# 232 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 232 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -7,-7,-8,-8,-8,-9,-9,-9 ;# 
# 233 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 233 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -9,-10,-10,-10,-11,-11,-11,-12 ;# 
# 234 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 234 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -12,-13,-13,-13,-13,-14,-14,-14 ;# 
# 235 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 235 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -15,-15,-16,-16,-16,-17,-17,-17 ;# 
# 236 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 236 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -18,-18,-18,-19,-19,-20,-20,-20 ;# 
# 237 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 237 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -21,-21,-22,-22,-22,-23,-23,-24 ;# 
# 238 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 238 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -24,-25,-25,-25,-26,-26,-27,-27 ;# 
# 239 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 239 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -28,-28,-29,-29,-30,-30,-31,-31 ;# 
# 240 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 240 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -32,-33,-33,-34,-35,-35,-36,-37 ;# 
# 241 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 241 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -37,-38,-39,-40,-40,-40,-40,-40 ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 155 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 155 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 99,99,98,98,97,96,95,95 ;# 
# 156 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 156 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 94,93,92,92,91,90,90,89 ;# 
# 157 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 157 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 88,88,87,87,86,85,85,84 ;# 
# 158 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 158 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 84,83,82,82,81,81,80,80 ;# 
# 159 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 159 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 79,79,78,77,77,76,76,75 ;# 
# 160 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 160 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 75,74,74,73,73,72,72,71 ;# 
# 161 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 161 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 71,70,70,70,69,69,68,68 ;# 
# 162 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 162 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 67,67,66,66,65,65,64,64 ;# 
# 163 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 163 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 64,63,63,62,62,61,61,61 ;# 
# 164 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 164 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 60,60,59,59,58,58,57,57 ;# 
# 165 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 165 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 57,56,56,55,55,54,54,54 ;# 
# 166 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 166 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 53,53,52,52,52,51,51,50 ;# 
# 167 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 167 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 50,49,49,49,48,48,47,47 ;# 
# 168 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 168 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 46,46,46,45,45,44,44,44 ;# 
# 169 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 169 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 43,43,42,42,41,41,41,40 ;# 
# 170 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 170 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 40,39,39,38,38,37,37,37 ;# 
# 171 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 171 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 36,36,35,35,34,34,33,33 ;# 
# 172 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 172 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 32,32,31,31,30,30,29,29 ;# 
# 173 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 173 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 28,28,27,27,26,26,25,24 ;# 
# 174 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 174 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 24,23,23,22,22,21,21,20 ;# 
# 175 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 175 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 19,19,18,17,17,16,16,15 ;# 
# 176 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 176 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 14,14,13,12,11,11,10,09 ;# 
# 177 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 177 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 08,07,06,06,05,04,03,02 ;# 
# 178 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 178 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 01,00,00,00,00,00,00,00 ;# 
# 208 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 208 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 0,40,99,99,0,3,0,0 ;# 
# 209 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 209 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 1,85,60,3,0,0,00,00 ;# 
# 211 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 211 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 0,20,15,0,5,0,0,0 ;# 
# 212 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 212 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 0,0,0,0,0,0,0,0 ;# 
# 217 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 217 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 40,40,39,38,38,37,36,36 ;# 
# 218 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 218 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 35,34,34,33,33,32,32,31 ;# 
# 219 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 219 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 31,30,30,29,29,28,28,27 ;# 
# 220 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 220 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 27,26,26,25,25,24,24,23 ;# 
# 221 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 221 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 23,22,22,22,21,21,20,20 ;# 
# 222 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 222 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 20,19,19,18,18,18,17,17 ;# 
# 223 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 223 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 17,16,16,15,15,15,14,14 ;# 
# 224 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 224 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 14,13,13,13,12,12,12,11 ;# 
# 225 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 225 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 11,11,10,10,10,9,9,9 ;# 
# 226 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 226 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 8,8,8,7,7,7,6,6 ;# 
# 227 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 227 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 6,5,5,5,4,4,4,3 ;# 
# 228 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 228 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 3,3,2,2,2,1,1,1 ;# 
# 229 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 229 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db 1,0,0,0,-1,-1,-1,-2 ;# 
# 230 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 230 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -2,-2,-2,-3,-3,-3,-4,-4 ;# 
# 231 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 231 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -4,-5,-5,-5,-6,-6,-6,-7 ;# 
# 232 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 232 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -7,-7,-8,-8,-8,-9,-9,-9 ;# 
# 233 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 233 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -9,-10,-10,-10,-11,-11,-11,-12 ;# 
# 234 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 234 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -12,-13,-13,-13,-13,-14,-14,-14 ;# 
# 235 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 235 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -15,-15,-16,-16,-16,-17,-17,-17 ;# 
# 236 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 236 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -18,-18,-18,-19,-19,-20,-20,-20 ;# 
# 237 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 237 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -21,-21,-22,-22,-22,-23,-23,-24 ;# 
# 238 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 238 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -24,-25,-25,-25,-26,-26,-27,-27 ;# 
# 239 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 239 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -28,-28,-29,-29,-30,-30,-31,-31 ;# 
# 240 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 240 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -32,-33,-33,-34,-35,-35,-36,-37 ;# 
# 241 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
psect eeprom_data,class=EEDATA ;# 
# 241 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\eeprom.h"
db -37,-38,-39,-40,-40,-40,-40,-40 ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
# 46 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPMSK equ 0F77h ;# 
# 107 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SLRCON equ 0F78h ;# 
# 150 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON1 equ 0F79h ;# 
# 188 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM2CON0 equ 0F7Ah ;# 
# 257 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CM1CON0 equ 0F7Bh ;# 
# 326 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WPUB equ 0F7Ch ;# 
# 387 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IOCB equ 0F7Dh ;# 
# 425 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSEL equ 0F7Eh ;# 
# 486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ANSELH equ 0F7Fh ;# 
# 529 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTA equ 0F80h ;# 
# 766 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTB equ 0F81h ;# 
# 973 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTC equ 0F82h ;# 
# 1163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTD equ 0F83h ;# 
# 1304 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PORTE equ 0F84h ;# 
# 1635 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATA equ 0F89h ;# 
# 1767 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATB equ 0F8Ah ;# 
# 1899 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATC equ 0F8Bh ;# 
# 2031 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATD equ 0F8Ch ;# 
# 2163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LATE equ 0F8Dh ;# 
# 2265 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISA equ 0F92h ;# 
# 2270 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRA equ 0F92h ;# 
# 2486 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISB equ 0F93h ;# 
# 2491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRB equ 0F93h ;# 
# 2707 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISC equ 0F94h ;# 
# 2712 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRC equ 0F94h ;# 
# 2928 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISD equ 0F95h ;# 
# 2933 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRD equ 0F95h ;# 
# 3149 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TRISE equ 0F96h ;# 
# 3154 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
DDRE equ 0F96h ;# 
# 3300 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCTUNE equ 0F9Bh ;# 
# 3369 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE1 equ 0F9Dh ;# 
# 3448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR1 equ 0F9Eh ;# 
# 3527 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR1 equ 0F9Fh ;# 
# 3606 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIE2 equ 0FA0h ;# 
# 3685 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PIR2 equ 0FA1h ;# 
# 3764 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
IPR2 equ 0FA2h ;# 
# 3843 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON1 equ 0FA6h ;# 
# 3908 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EECON2 equ 0FA7h ;# 
# 3914 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEDATA equ 0FA8h ;# 
# 3920 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADR equ 0FA9h ;# 
# 3981 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
EEADRH equ 0FAAh ;# 
# 4006 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA equ 0FABh ;# 
# 4011 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCSTA1 equ 0FABh ;# 
# 4163 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA equ 0FACh ;# 
# 4168 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXSTA1 equ 0FACh ;# 
# 4426 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG equ 0FADh ;# 
# 4431 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TXREG1 equ 0FADh ;# 
# 4437 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG equ 0FAEh ;# 
# 4442 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCREG1 equ 0FAEh ;# 
# 4448 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG equ 0FAFh ;# 
# 4453 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRG1 equ 0FAFh ;# 
# 4459 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SPBRGH equ 0FB0h ;# 
# 4465 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T3CON equ 0FB1h ;# 
# 4578 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3 equ 0FB2h ;# 
# 4584 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3L equ 0FB2h ;# 
# 4590 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR3H equ 0FB3h ;# 
# 4596 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON2 equ 0FB4h ;# 
# 4622 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CVRCON equ 0FB5h ;# 
# 4700 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ECCP1AS equ 0FB6h ;# 
# 4781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PWM1CON equ 0FB7h ;# 
# 4850 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCON equ 0FB8h ;# 
# 4855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BAUDCTL equ 0FB8h ;# 
# 5015 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PSTRCON equ 0FB9h ;# 
# 5058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP2CON equ 0FBAh ;# 
# 5121 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2 equ 0FBBh ;# 
# 5127 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2L equ 0FBBh ;# 
# 5133 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR2H equ 0FBCh ;# 
# 5139 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCP1CON equ 0FBDh ;# 
# 5220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1 equ 0FBEh ;# 
# 5226 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1L equ 0FBEh ;# 
# 5232 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
CCPR1H equ 0FBFh ;# 
# 5238 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON2 equ 0FC0h ;# 
# 5308 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON1 equ 0FC1h ;# 
# 5361 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADCON0 equ 0FC2h ;# 
# 5479 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRES equ 0FC3h ;# 
# 5485 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESL equ 0FC3h ;# 
# 5491 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
ADRESH equ 0FC4h ;# 
# 5497 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON2 equ 0FC5h ;# 
# 5558 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPCON1 equ 0FC6h ;# 
# 5627 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPSTAT equ 0FC7h ;# 
# 5855 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPADD equ 0FC8h ;# 
# 5861 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
SSPBUF equ 0FC9h ;# 
# 5867 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T2CON equ 0FCAh ;# 
# 5937 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PR2 equ 0FCBh ;# 
# 5942 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
MEMCON equ 0FCBh ;# 
# 5948 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR2 equ 0FCCh ;# 
# 5954 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T1CON equ 0FCDh ;# 
# 6058 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1 equ 0FCEh ;# 
# 6064 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1L equ 0FCEh ;# 
# 6070 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR1H equ 0FCFh ;# 
# 6076 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
RCON equ 0FD0h ;# 
# 6208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WDTCON equ 0FD1h ;# 
# 6235 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
HLVDCON equ 0FD2h ;# 
# 6240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
LVDCON equ 0FD2h ;# 
# 6504 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
OSCCON equ 0FD3h ;# 
# 6580 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
T0CON equ 0FD5h ;# 
# 6649 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0 equ 0FD6h ;# 
# 6655 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0L equ 0FD6h ;# 
# 6661 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TMR0H equ 0FD7h ;# 
# 6667 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STATUS equ 0FD8h ;# 
# 6745 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2 equ 0FD9h ;# 
# 6751 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2L equ 0FD9h ;# 
# 6757 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR2H equ 0FDAh ;# 
# 6763 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW2 equ 0FDBh ;# 
# 6769 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC2 equ 0FDCh ;# 
# 6775 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC2 equ 0FDDh ;# 
# 6781 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC2 equ 0FDEh ;# 
# 6787 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF2 equ 0FDFh ;# 
# 6793 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
BSR equ 0FE0h ;# 
# 6799 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1 equ 0FE1h ;# 
# 6805 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1L equ 0FE1h ;# 
# 6811 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR1H equ 0FE2h ;# 
# 6817 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW1 equ 0FE3h ;# 
# 6823 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC1 equ 0FE4h ;# 
# 6829 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC1 equ 0FE5h ;# 
# 6835 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC1 equ 0FE6h ;# 
# 6841 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF1 equ 0FE7h ;# 
# 6847 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
WREG equ 0FE8h ;# 
# 6858 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0 equ 0FE9h ;# 
# 6864 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0L equ 0FE9h ;# 
# 6870 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
FSR0H equ 0FEAh ;# 
# 6876 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PLUSW0 equ 0FEBh ;# 
# 6882 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PREINC0 equ 0FECh ;# 
# 6888 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTDEC0 equ 0FEDh ;# 
# 6894 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
POSTINC0 equ 0FEEh ;# 
# 6900 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INDF0 equ 0FEFh ;# 
# 6906 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON3 equ 0FF0h ;# 
# 6997 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON2 equ 0FF1h ;# 
# 7066 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
INTCON equ 0FF2h ;# 
# 7202 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PROD equ 0FF3h ;# 
# 7208 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODL equ 0FF3h ;# 
# 7214 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PRODH equ 0FF4h ;# 
# 7220 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TABLAT equ 0FF5h ;# 
# 7228 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTR equ 0FF6h ;# 
# 7234 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRL equ 0FF6h ;# 
# 7240 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRH equ 0FF7h ;# 
# 7246 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TBLPTRU equ 0FF8h ;# 
# 7254 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLAT equ 0FF9h ;# 
# 7261 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PC equ 0FF9h ;# 
# 7267 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCL equ 0FF9h ;# 
# 7273 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATH equ 0FFAh ;# 
# 7279 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
PCLATU equ 0FFBh ;# 
# 7285 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
STKPTR equ 0FFCh ;# 
# 7358 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOS equ 0FFDh ;# 
# 7364 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSL equ 0FFDh ;# 
# 7370 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSH equ 0FFEh ;# 
# 7376 "C:\Program Files\Microchip\xc8\v1.12\include\pic18f46k20.h"
TOSU equ 0FFFh ;# 
	FNCALL	_main,_InitOsc
	FNCALL	_main,_InitGlobal
	FNCALL	_main,_InitTimer1
	FNCALL	_main,_InitPort
	FNCALL	_main,_InitAC
	FNCALL	_main,_InitWsw
	FNCALL	_main,_InitPWM
	FNCALL	_main,_InitI2C
	FNCALL	_main,_InitUart
	FNCALL	_main,_InitDataPmr
	FNCALL	_main,_ClearData
	FNCALL	_main,_TestScr
	FNCALL	_main,_PwrOnDelay
	FNCALL	_main,_EndTestScr
	FNCALL	_main,_ClsScr
	FNCALL	_main,_EndClsScr
	FNCALL	_main,_RdEEParam
	FNCALL	_main,_EnKonf
	FNCALL	_main,_Read_b_eep
	FNCALL	_main,_PrintErr
	FNCALL	_main,_ErrPTG
	FNCALL	_main,_PomiarCO
	FNCALL	_main,_PomiarCW
	FNCALL	_main,_PomiarZW
	FNCALL	_main,_PomiarCS
	FNCALL	_main,_PomiarPCO
	FNCALL	_main,_PomiarPCW
	FNCALL	_main,_PomiarPFN
	FNCALL	_main,_PomiarIN
	FNCALL	_main,_RefInterfaceData
	FNCALL	_main,_RdPrt
	FNCALL	_main,_RestartFltPrt
	FNCALL	_main,_StartRTS
	FNCALL	_main,_WritePWM2
	FNCALL	_main,_TrybPracy
	FNCALL	_main,_FiltrPomiarowyCOCW
	FNCALL	_main,_DecWSW
	FNCALL	_main,_DecERR
	FNCALL	_main,_DecSTR
	FNCALL	_main,_DecRozruch
	FNCALL	_main,_DecWylacz
	FNCALL	_main,_FunkcjaSerwisowa
	FNCALL	_main,_DecyzjaAntyLeg
	FNCALL	_main,_KolejkaPobudzen
	FNCALL	_main,_RglPmp
	FNCALL	_main,_ZmienKCOKCW
	FNCALL	_main,_Wylacz
	FNCALL	_main,_Rozruch
	FNCALL	_main,_VWybieg
	FNCALL	_main,_ReloadPlomien
	FNCALL	_main,_RuszPlomien
	FNCALL	_main,_ReloadCiag
	FNCALL	_main,_RuszCiag
	FNCALL	_main,_Proba48
	FNCALL	_main,_Rusz48
	FNCALL	_main,_Proba48Z3
	FNCALL	_main,_Rusz48Z3
	FNCALL	_main,_BlokadaL3
	FNCALL	_main,_Blokada15S
	FNCALL	_main,_Moduluj
	FNCALL	_main,_DetekcjaPrzeplywuWG
	FNCALL	_main,_OczekujNaPrzeplywWG
	FNCALL	_InitPort,_RefStan
	FNCALL	_InitPort,_FrsStan
	FNCALL	_InitWsw,_SetStatus
	FNCALL	_TestScr,_SetStatus
	FNCALL	_TestScr,_SetData
	FNCALL	_TestScr,_SetDiode
	FNCALL	_PwrOnDelay,_StartRTdS
	FNCALL	_PwrOnDelay,_RTdS
	FNCALL	_EndTestScr,_SetStatus
	FNCALL	_EndTestScr,_SetData
	FNCALL	_EndTestScr,_SetDiode
	FNCALL	_ClsScr,_WswOff
	FNCALL	_EndClsScr,_AllKolToFirstPoz
	FNCALL	_EndClsScr,_WswOn
	FNCALL	_RdEEParam,_Read_b_eep
	FNCALL	_RdEEParam,_SetTpKtParam
	FNCALL	_RdEEParam,_ModParam
	FNCALL	_RdEEParam,_MocStart
	FNCALL	_RdEEParam,_MocMaksCW
	FNCALL	_RdEEParam,_MocMaksCO
	FNCALL	_RdEEParam,_SetPFN
	FNCALL	_RdEEParam,_SetNST
	FNCALL	_RdEEParam,_Busy_eep
	FNCALL	_RdEEParam,_Write_b_eep
	FNCALL	_EnKonf,_StartRTS
	FNCALL	_PomiarIN,_ReadAC
	FNCALL	_PomiarIN,_ReadTabNTC
	FNCALL	_RestartFltPrt,_SetPrt
	FNCALL	_TrybPracy,_RdPrt
	FNCALL	_TrybPracy,_PresKeyEX
	FNCALL	_TrybPracy,_WaitToLowEx
	FNCALL	_TrybPracy,_ResBufKeyEx
	FNCALL	_TrybPracy,_SetPrt
	FNCALL	_TrybPracy,_StartRTdS
	FNCALL	_TrybPracy,_RestartKol
	FNCALL	_TrybPracy,_RTdS
	FNCALL	_FiltrPomiarowyCOCW,_PmrTim1
	FNCALL	_FiltrPomiarowyCOCW,_StartTim1
	FNCALL	_FiltrPomiarowyCOCW,_GoldenEye
	FNCALL	_FiltrPomiarowyCOCW,_PmrTim2
	FNCALL	_FiltrPomiarowyCOCW,_StartTim2
	FNCALL	_FiltrPomiarowyCOCW,_FltParMod
	FNCALL	_DecWSW,_NastawaCOCW
	FNCALL	_DecWSW,_PrintErr
	FNCALL	_DecWSW,_PrintErrTm
	FNCALL	_DecWSW,_PrintErrCs
	FNCALL	_DecWSW,_EndErr
	FNCALL	_DecWSW,_PrintOFF
	FNCALL	_DecWSW,_EndOFF
	FNCALL	_DecWSW,_PrintCS
	FNCALL	_DecWSW,_EndCS
	FNCALL	_DecWSW,_PrintCW
	FNCALL	_DecWSW,_EndCW
	FNCALL	_DecWSW,_PrintCO
	FNCALL	_DecWSW,_PrintL3
	FNCALL	_DecWSW,_SetDiode
	FNCALL	_DecERR,_RdPrt
	FNCALL	_DecERR,_SetErr
	FNCALL	_DecERR,_ErrPTG
	FNCALL	_DecERR,_EndErr
	FNCALL	_DecERR,_SetMsg
	FNCALL	_DecERR,_StartRTS
	FNCALL	_DecERR,_PrintErr
	FNCALL	_DecSTR,_RTS
	FNCALL	_DecSTR,_RdPrt
	FNCALL	_DecSTR,_ToObiegCW
	FNCALL	_DecSTR,_ToObiegCO
	FNCALL	_DecSTR,_RestartMod
	FNCALL	_DecSTR,_WritePWM
	FNCALL	_DecRozruch,_SetRozruch
	FNCALL	_DecWylacz,_SetWylacz
	FNCALL	_DecWylacz,_RdPrt
	FNCALL	_DecWylacz,_SetL3
	FNCALL	_FunkcjaSerwisowa,_StartRTM
	FNCALL	_FunkcjaSerwisowa,_RTM
	FNCALL	_DecyzjaAntyLeg,_StartRTG
	FNCALL	_DecyzjaAntyLeg,_RTM
	FNCALL	_DecyzjaAntyLeg,_RTG
	FNCALL	_DecyzjaAntyLeg,_StartRTM
	FNCALL	_DecyzjaAntyLeg,_Busy_eep
	FNCALL	_DecyzjaAntyLeg,_Write_b_eep
	FNCALL	_KolejkaPobudzen,_RdPrt
	FNCALL	_RglPmp,_RglPmp1
	FNCALL	_RglPmp,_RglPmp2
	FNCALL	_RglPmp,_StartRTS
	FNCALL	_RglPmp,_ProcToPmpPwm
	FNCALL	_RglPmp,_WritePWM2
	FNCALL	_Rozruch,_StartRTS
	FNCALL	_Rozruch,_RTS
	FNCALL	_Rozruch,_RdPrt
	FNCALL	_Rozruch,_PrintErr
	FNCALL	_Rozruch,_ErrPTG
	FNCALL	_Rozruch,_WritePWM
	FNCALL	_Rozruch,_GrzejON
	FNCALL	_Rozruch,_DecyzjaPLM
	FNCALL	_Rozruch,_DecyzjaPLM2
	FNCALL	_ReloadPlomien,_RTdS
	FNCALL	_RuszPlomien,_StartRTS
	FNCALL	_RuszPlomien,_RTS
	FNCALL	_RuszPlomien,_StartRTdS
	FNCALL	_ReloadCiag,_RTM
	FNCALL	_ReloadCiag,_RTS
	FNCALL	_RuszCiag,_StartRTS
	FNCALL	_RuszCiag,_StartRTM
	FNCALL	_RuszCiag,_RTS
	FNCALL	_RuszCiag,_RTM
	FNCALL	_RuszCiag,_PrintErr
	FNCALL	_RuszCiag,_ErrPTG
	FNCALL	_RuszCiag,_RdPrt
	FNCALL	_BlokadaL3,_StartRTM
	FNCALL	_BlokadaL3,_SetL3
	FNCALL	_BlokadaL3,_EndL3
	FNCALL	_BlokadaL3,_RTM
	FNCALL	_Blokada15S,_StartRTdS
	FNCALL	_Blokada15S,_RTdS
	FNCALL	_Moduluj,_StartCO
	FNCALL	_Moduluj,_ReadDataCO
	FNCALL	_Moduluj,_ModToCO
	FNCALL	_Moduluj,_ModZgCO
	FNCALL	_Moduluj,_ModDkCO
	FNCALL	_Moduluj,_RTdS
	FNCALL	_Moduluj,_StartRTdS
	FNCALL	_Moduluj,_IncConstCOCW
	FNCALL	_Moduluj,_IncMaxCO
	FNCALL	_Moduluj,_ModPruCO
	FNCALL	_Moduluj,_ModPrzCO
	FNCALL	_Moduluj,_PropOPT
	FNCALL	_Moduluj,_StartMCW
	FNCALL	_Moduluj,_ReadDataCW
	FNCALL	_Moduluj,_ModToCW
	FNCALL	_Moduluj,_ModZgCW
	FNCALL	_Moduluj,_ModDkCW
	FNCALL	_Moduluj,_IncMaxCW
	FNCALL	_Moduluj,_ModPruCW
	FNCALL	_Moduluj,_ModPrzCW
	FNCALL	_Moduluj,_PropCO
	FNCALL	_Moduluj,_StartCO2
	FNCALL	_Moduluj,_ReadDataCO2
	FNCALL	_Moduluj,_ModToCO2
	FNCALL	_Moduluj,_IncConstCO2
	FNCALL	_Moduluj,_StartMCW2
	FNCALL	_Moduluj,_ReadDataCW2
	FNCALL	_Moduluj,_ModToCW2
	FNCALL	_Moduluj,_ModZgCW2
	FNCALL	_Moduluj,_ModDkCW2
	FNCALL	_Moduluj,_IncConstCW2
	FNCALL	_Moduluj,_IncMaxCW2
	FNCALL	_Moduluj,_ModPruCW2
	FNCALL	_Moduluj,_ModPrzCW2
	FNCALL	_Moduluj,_PropCO2
	FNCALL	_Moduluj,_StartMCO3
	FNCALL	_Moduluj,_ModToCO3
	FNCALL	_Moduluj,_ModToCW3
	FNCALL	_Moduluj,_StartCO4
	FNCALL	_Moduluj,_ReadDataCO4
	FNCALL	_Moduluj,_ModToCO4
	FNCALL	_Moduluj,_IncConstCOCW4
	FNCALL	_Moduluj,_StartMCW4
	FNCALL	_Moduluj,_ReadDataCW4
	FNCALL	_Moduluj,_ModToCW4
	FNCALL	_Moduluj,_ModZgCW4
	FNCALL	_Moduluj,_ModDkCW4
	FNCALL	_Moduluj,_IncMaxCW4
	FNCALL	_Moduluj,_ModPruCW4
	FNCALL	_Moduluj,_ModPrzCW4
	FNCALL	_Moduluj,_PropCO4
	FNCALL	_DetekcjaPrzeplywuWG,_RdPrt
	FNCALL	_DetekcjaPrzeplywuWG,_StartRTS
	FNCALL	_DetekcjaPrzeplywuWG,_RTS
	FNCALL	_OczekujNaPrzeplywWG,_RdPrt
	FNCALL	_OczekujNaPrzeplywWG,_StartRTS
	FNCALL	_OczekujNaPrzeplywWG,_RTS
	FNCALL	_OczekujNaPrzeplywWG,_PrintErr
	FNCALL	_OczekujNaPrzeplywWG,_ErrPTG
	FNCALL	_NastawaCOCW,_StartRTdS
	FNCALL	_NastawaCOCW,_EndNst
	FNCALL	_NastawaCOCW,_PrintNstCW
	FNCALL	_NastawaCOCW,_PrintNstCO
	FNCALL	_NastawaCOCW,_RTdS
	FNCALL	_NastawaCOCW,_RdPrt
	FNCALL	_NastawaCOCW,_ReadParam
	FNCALL	_EndNst,_ResetKol
	FNCALL	_PrintNstCW,_SetData
	FNCALL	_PrintNstCW,_SetStatus
	FNCALL	_PrintNstCW,_RestartKol
	FNCALL	_PrintNstCO,_SetData
	FNCALL	_PrintNstCO,_SetStatus
	FNCALL	_PrintNstCO,_RestartKol
	FNCALL	_ReadParam,_RdPrt
	FNCALL	_ReadParam,_ReadDataXONLID
	FNCALL	_ReadParam,_RTdS
	FNCALL	_ReadParam,_StartRTdS
	FNCALL	_PrintErrTm,_SetData
	FNCALL	_PrintErrTm,_SetStatus
	FNCALL	_PrintErrTm,_SetPoz
	FNCALL	_PrintErrCs,_SetData
	FNCALL	_PrintErrCs,_SetStatus
	FNCALL	_PrintErrCs,_SetPoz
	FNCALL	_PrintOFF,_SetStatus
	FNCALL	_PrintOFF,_SetData
	FNCALL	_EndOFF,_SetStatus
	FNCALL	_PrintCS,_SetStatus
	FNCALL	_PrintCS,_SetData
	FNCALL	_EndCS,_SetStatus
	FNCALL	_PrintCW,_SetStatus
	FNCALL	_PrintCW,_SetData
	FNCALL	_EndCW,_SetStatus
	FNCALL	_PrintCO,_SetStatus
	FNCALL	_PrintCO,_SetData
	FNCALL	_PrintL3,_SetData
	FNCALL	_PrintL3,_SetStatus
	FNCALL	_PrintL3,_SetPoz
	FNCALL	_SetDiode,_Swsdid
	FNCALL	_SetDiode,_Rwsdid
	FNCALL	_SetRozruch,_EndL3
	FNCALL	_EndL3,_ResetKol
	FNCALL	_SetWylacz,_GrzejOFF
	FNCALL	_SetWylacz,_ToObiegCO
	FNCALL	_SetWylacz,_SetPrt
	FNCALL	_DecyzjaPLM,_PrintErr
	FNCALL	_DecyzjaPLM,_ErrPTG
	FNCALL	_DecyzjaPLM2,_PrintErr
	FNCALL	_DecyzjaPLM2,_ErrPTG
	FNCALL	_DecyzjaPLM2,_RdPrt
	FNCALL	_PrintErr,_SetData
	FNCALL	_PrintErr,_SetStatus
	FNCALL	_PrintErr,_SetPoz
	FNCALL	_ErrPTG,_GrzejOFF
	FNCALL	_ErrPTG,_VZPauza
	FNCALL	_ErrPTG,_Busy_eep
	FNCALL	_ErrPTG,_Write_b_eep
	FNCALL	_ErrPTG,_WritePWM
	FNCALL	_ErrPTG,_PomiarPCO
	FNCALL	_ErrPTG,_PomiarPCW
	FNCALL	_ErrPTG,_PomiarPFN
	FNCALL	_ErrPTG,_PomiarCO
	FNCALL	_ErrPTG,_PomiarCW
	FNCALL	_ErrPTG,_PomiarCS
	FNCALL	_ErrPTG,_Proba48
	FNCALL	_ErrPTG,_Proba48Z3
	FNCALL	_ErrPTG,_RefInterfaceData
	FNCALL	_ErrPTG,_RdPrt
	FNCALL	_ErrPTG,_ToObiegCO
	FNCALL	_ErrPTG,_ToObiegCW
	FNCALL	_ErrPTG,_ZmienKCOKCW
	FNCALL	_ErrPTG,_Wylacz
	FNCALL	_ErrPTG,_VWybieg
	FNCALL	_ErrPTG,_Rusz48
	FNCALL	_ErrPTG,_Rusz48Z3
	FNCALL	_ErrPTG,_KeyRes
	FNCALL	_ErrPTG,_ToReset
	FNCALL	_PomiarCO,_ReadAC
	FNCALL	_PomiarCO,_ReadTabNTC
	FNCALL	_PomiarCW,_ReadAC
	FNCALL	_PomiarCW,_ReadTabNTC
	FNCALL	_PomiarCW,_RdPrt
	FNCALL	_ReadTabNTC,_Read_b_eep
	FNCALL	_PomiarCS,_ReadAC
	FNCALL	_PomiarCS,___wmul
	FNCALL	_PomiarCS,___awdiv
	FNCALL	_PomiarPCO,_StartRTdS
	FNCALL	_PomiarPCO,_WritePCO
	FNCALL	_PomiarPCO,_GetPGD_PCO
	FNCALL	_PomiarPCO,_SetModPCO
	FNCALL	_PomiarPCO,_ReturnACfromNTC
	FNCALL	_PomiarPCW,_StartRTdS
	FNCALL	_PomiarPCW,_WritePCW
	FNCALL	_PomiarPCW,_SetModPCW
	FNCALL	_PomiarPCW,_ReturnACfromNTC
	FNCALL	_ReturnACfromNTC,_Read_b_eep
	FNCALL	_PomiarPFN,_ReadEEPFN
	FNCALL	_PomiarPFN,_StartRTdS
	FNCALL	_PomiarPFN,_WritePFN
	FNCALL	_RefInterfaceData,_RdPrt
	FNCALL	_ZmienKCOKCW,_StartRTdS
	FNCALL	_ZmienKCOKCW,_RTdS
	FNCALL	_Wylacz,_StartRTS
	FNCALL	_Wylacz,_RTS
	FNCALL	_Wylacz,_RdPrt
	FNCALL	_VWybieg,_StartRTS
	FNCALL	_VWybieg,_RTS
	FNCALL	_Proba48,_StartRTG
	FNCALL	_Proba48,_RTG
	FNCALL	_Rusz48,_StartRTS
	FNCALL	_Rusz48,_ToObiegCO
	FNCALL	_Rusz48,_RTS
	FNCALL	_Rusz48,_ToObiegCW
	FNCALL	_Proba48Z3,_StartRTG
	FNCALL	_Proba48Z3,_RTG
	FNCALL	_Rusz48Z3,_ToObiegCW
	FNCALL	_Rusz48Z3,_StartRTS
	FNCALL	_Rusz48Z3,_RTS
	FNCALL	_KeyRes,_RdPrt
	FNCALL	_KeyRes,_StartRTS
	FNCALL	_KeyRes,_RTS
	FNCALL	_VZPauza,_StartRTS
	FNCALL	_VZPauza,_RTS
	FNCALL	_ToReset,_EndErr
	FNCALL	_ToReset,_Busy_eep
	FNCALL	_ToReset,_Write_b_eep
	FNCALL	_ToReset,_StartRTS
	FNCALL	_ToReset,_RTS
	FNCALL	_EndErr,_ResetKol
	FNCALL	_GoldenEye,___wmul
	FNCALL	_FltParMod,_PredkoscZmianCW
	FNCALL	_GetPGD_PCO,___wmul
	FNCALL	_GetPGD_PCO,___lmul
	FNCALL	_GetPGD_PCO,___aldiv
	FNCALL	_WritePCO,_RTdS
	FNCALL	_WritePCO,_StartRTdS
	FNCALL	_WritePCO,_WriteEEPCO
	FNCALL	_WriteEEPCO,_Busy_eep
	FNCALL	_WriteEEPCO,_Write_b_eep
	FNCALL	_WritePCW,_RTdS
	FNCALL	_WritePCW,_StartRTdS
	FNCALL	_WritePCW,_WriteEEPCW
	FNCALL	_WriteEEPCW,_Busy_eep
	FNCALL	_WriteEEPCW,_Write_b_eep
	FNCALL	_WritePFN,_RTdS
	FNCALL	_WritePFN,_StartRTdS
	FNCALL	_WritePFN,_WriteEEPFN
	FNCALL	_WriteEEPFN,_Busy_eep
	FNCALL	_WriteEEPFN,_Write_b_eep
	FNCALL	_ReadEEPFN,_Read_b_eep
	FNCALL	_MocStart,___wmul
	FNCALL	_MocStart,___awdiv
	FNCALL	_MocStart,___lwdiv
	FNCALL	_MocMaksCO,___wmul
	FNCALL	_MocMaksCO,___awdiv
	FNCALL	_MocMaksCO,___lwdiv
	FNCALL	_MocMaksCW,___wmul
	FNCALL	_MocMaksCW,___awdiv
	FNCALL	_MocMaksCW,___lwdiv
	FNCALL	_StartCO,_StartRTdS
	FNCALL	_ModToCO,_ClrMod
	FNCALL	_ModZgCO,_Tnizsza
	FNCALL	_ModZgCO,_Tmaleje
	FNCALL	_ModZgCO,_Tstoi
	FNCALL	_ModZgCO,___wmul
	FNCALL	_ModZgCO,___aldiv
	FNCALL	_ModZgCO,___lmul
	FNCALL	_ModDkCO,_Twyzsza
	FNCALL	_ModDkCO,___wmul
	FNCALL	_IncConstCOCW,_Tstoi
	FNCALL	_IncMaxCO,_Trosnie
	FNCALL	_ModPruCO,_Tmaleje
	FNCALL	_ModPruCO,_Trowna
	FNCALL	_ModPruCO,_Trosnie
	FNCALL	_ModPrzCO,_Twyzsza
	FNCALL	_PropOPT,_WriteOPWM
	FNCALL	_StartMCW,_StartRTdS
	FNCALL	_StartMCW,_FirstPCW
	FNCALL	_StartMCW,___awdiv
	FNCALL	_ModToCW,_ClrMod
	FNCALL	_ModZgCW,_Tnizsza
	FNCALL	_ModZgCW,_Twyzsza
	FNCALL	_ModZgCW,_Tstoi
	FNCALL	_ModZgCW,___wmul
	FNCALL	_ModZgCW,___aldiv
	FNCALL	_ModZgCW,___lmul
	FNCALL	_ModDkCW,_Trowna
	FNCALL	_ModDkCW,_Tnizsza
	FNCALL	_ModDkCW,___wmul
	FNCALL	_IncMaxCW,_Trosnie
	FNCALL	_ModPruCW,_Tnizsza
	FNCALL	_ModPruCW,_Tstoi
	FNCALL	_ModPruCW,_Trosnie
	FNCALL	_ModPruCW,_Twyzsza
	FNCALL	_ModPruCW,_Tmaleje
	FNCALL	_ModPrzCW,_Tnizsza
	FNCALL	_ModPrzCW,___awdiv
	FNCALL	_ModPrzCW,_Tmaleje
	FNCALL	_ModPrzCW,_Twyzsza
	FNCALL	_PropCO,_WriteOPWM
	FNCALL	_StartCO2,_StartRTdS
	FNCALL	_ModToCO2,_ClrMod2
	FNCALL	_IncConstCO2,_Tstoi
	FNCALL	_StartMCW2,_StartRTdS
	FNCALL	_StartMCW2,_FirstPCW2
	FNCALL	_ModToCW2,_ClrMod2
	FNCALL	_ModZgCW2,_Tnizsza
	FNCALL	_ModZgCW2,_FirstPCW2
	FNCALL	_ModZgCW2,___wmul
	FNCALL	_ModZgCW2,___aldiv
	FNCALL	_ModZgCW2,___lmul
	FNCALL	_ModDkCW2,___wmul
	FNCALL	_IncConstCW2,_TFrosnie
	FNCALL	_IncConstCW2,_Tstoi
	FNCALL	_IncMaxCW2,_Trosnie
	FNCALL	_IncMaxCW2,_TFrosnie
	FNCALL	_ModPruCW2,_Tnizsza
	FNCALL	_ModPruCW2,_Trosnie
	FNCALL	_ModPruCW2,_TFrosnie
	FNCALL	_ModPruCW2,_TFmaleje
	FNCALL	_ModPruCW2,_TFstoi
	FNCALL	_ModPruCW2,_Twyzsza
	FNCALL	_ModPruCW2,_Trowna
	FNCALL	_ModPruCW2,_Tstoi
	FNCALL	_ModPruCW2,_Tmaleje
	FNCALL	_ModPrzCW2,_Tmaleje
	FNCALL	_ModPrzCW2,_Twyzsza
	FNCALL	_ModPrzCW2,_Tstoi
	FNCALL	_ModPrzCW2,_TFmaleje
	FNCALL	_ModPrzCW2,_Tnizsza
	FNCALL	_PropCO2,_WriteOPWM
	FNCALL	_StartMCO3,_StartRTdS
	FNCALL	_ModToCW3,_Tnizsza
	FNCALL	_StartCO4,_StartRTdS
	FNCALL	_ModToCO4,_ClrMod4
	FNCALL	_IncConstCOCW4,_Tstoi
	FNCALL	_StartMCW4,_StartRTdS
	FNCALL	_ModToCW4,_ClrMod4
	FNCALL	_ModZgCW4,_Tnizsza
	FNCALL	_ModZgCW4,___wmul
	FNCALL	_ModZgCW4,___aldiv
	FNCALL	_ModZgCW4,___lmul
	FNCALL	_ModDkCW4,___wmul
	FNCALL	_IncMaxCW4,_Trosnie
	FNCALL	_ModPruCW4,_Tnizsza
	FNCALL	_ModPruCW4,_Tstoi
	FNCALL	_ModPruCW4,_Trosnie
	FNCALL	_ModPruCW4,_Twyzsza
	FNCALL	_ModPruCW4,_Tmaleje
	FNCALL	_ModPrzCW4,___wmul
	FNCALL	_ModPrzCW4,___lwdiv
	FNCALL	_ModPrzCW4,_Tmaleje
	FNCALL	_ModPrzCW4,_Twyzsza
	FNCALL	_ModPrzCW4,_Tnizsza
	FNCALL	_ModPrzCW4,_Tstoi
	FNCALL	_PropCO4,_WriteOPWM
	FNCALL	_WriteOPWM,___wmul
	FNCALL	_WriteOPWM,___lwdiv
	FNCALL	_FirstPCW,___awdiv
	FNCALL	_FirstPCW,___wmul
	FNCALL	_FirstPCW,___aldiv
	FNCALL	_FirstPCW,___lmul
	FNCALL	_SetNST,_PomiarZW
	FNCALL	_SetNST,_SetPrt
	FNCALL	_SetNST,_Read_b_eep
	FNCALL	_SetNST,_Busy_eep
	FNCALL	_SetNST,_Write_b_eep
	FNCALL	_PomiarZW,_ReadAC
	FNCALL	_PomiarZW,_ReadTabZNTC
	FNCALL	_ReadTabZNTC,_Read_b_eep
	FNCALL	_RglPmp1,_StartRTS
	FNCALL	_RglPmp1,_ProcToPmpPwm
	FNCALL	_RglPmp1,_WritePWM2
	FNCALL	_RglPmp1,_RTS
	FNCALL	_RglPmp1,_ModPmp1
	FNCALL	_ModPmp1,_RTdS
	FNCALL	_ModPmp1,_StartRTdS
	FNCALL	_ModPmp1,_Twyzsza
	FNCALL	_ModPmp1,_Tnizsza
	FNCALL	_RglPmp2,_StartRTS
	FNCALL	_RglPmp2,_ProcToPmpPwm
	FNCALL	_RglPmp2,_WritePWM2
	FNCALL	_RglPmp2,_RTS
	FNCALL	_RglPmp2,_ModPmp2
	FNCALL	_ProcToPmpPwm,___wmul
	FNCALL	_ProcToPmpPwm,___lwdiv
	FNCALL	_ModPmp2,_RetHI
	FNCALL	_ModPmp2,_RetLO
	FNCALL	_ModPmp2,_RetDelta
	FNCALL	_ModPmp2,_StartRTdS
	FNCALL	_ModPmp2,_RTdS
	FNCALL	_ModPmp2,_Twyzsza
	FNCALL	_ModPmp2,_Tnizsza
	FNCALL	_RetDelta,_RetKrkDelta
	FNCALL	_RetDelta,___awdiv
	FNCALL	_RetKrkDelta,_RetHI
	FNCALL	_RetKrkDelta,_RetLO
	FNCALL	_RetKrkDelta,_RetDelta4
	FNCALL	_RetKrkDelta,___wmul
	FNCALL	_RetKrkDelta,___awdiv
	FNCALL	_RetHI,___awdiv
	FNCALL	_RetLO,___awdiv
	FNCALL	_RetDelta4,_RetDelta1
	FNCALL	_RetDelta4,_RetDelta2
	FNCALL	_RetDelta4,_RetDelta3
	FNCALL	_RetDelta4,_RetMax
	FNCALL	_RetDelta4,_RetMin
	FNCALL	_PresKeyEX,_StartKeyTim
	FNCALL	_PresKeyEX,_KeyTim
	FNCALL	_ReadDataXONLID,_ExxPresKey
	FNCALL	_ReadDataXONLID,___lbdiv
	FNCALL	_ReadDataXONLID,___lwmod
	FNCALL	_ExxPresKey,_StartKeyTim
	FNCALL	_ExxPresKey,_KeyTim
	FNROOT	_main
	FNCALL	_ISR,_IntUSARTRC
	FNCALL	_ISR,_IntUSARTTR
	FNCALL	_ISR,_ReloadTimer1
	FNCALL	_ISR,_IncRTimer
	FNCALL	_ISR,_IncPmrTimer
	FNCALL	_ISR,_IncKeyTimer
	FNCALL	_ISR,_RefreshWSW
	FNCALL	_ISR,_StabPort
	FNCALL	_ISR,_FormatDataIMY
	FNCALL	_ISR,_IntPWM
	FNCALL	_ISR,_IntPWM2
	FNCALL	_ISR,_I2CSlaveTR
	FNCALL	_I2CSlaveTR,_SetTData
	FNCALL	_I2CSlaveTR,_LiczCHK
	FNCALL	_I2CSlaveTR,_SetRData
	FNCALL	_I2CSlaveTR,_ReceptDataI2C
	FNCALL	_I2CSlaveTR,_TransmitDataI2C
	FNCALL	_SetTData,i2_RdPrt
	FNCALL	_ReceptDataI2C,_LiczCHK
	FNCALL	_ReceptDataI2C,_ToWork
	FNCALL	_FormatDataIMY,i2_RdPrt
	FNCALL	_FormatDataIMY,_BitSet
	FNCALL	_IntUSARTRC,_VerifyNDatCHK
	FNCALL	_RefreshWSW,_KolProc
	FNCALL	_RefreshWSW,_SetPrWswData
	FNCALL	_RefreshWSW,_FormatWswData
	FNCALL	_RefreshWSW,_PrintWswData
	FNCALL	_StabPort,i2_RefStan
	FNCALL	_VerifyNDatCHK,_SetNDatCHK
	FNCALL	_FormatWswData,i2___lbdiv
	FNCALL	_FormatWswData,___lbmod
	FNCALL	_FormatWswData,_Swbty
	FNCALL	_FormatWswData,_Rwbty
	FNCALL	intlevel2,_ISR
	global	intlevel2
	FNROOT	intlevel2
	global	_Nastawa
psect	smallconst,class=SMALLCONST,space=0,reloc=2
global __psmallconst
__psmallconst:
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
	line	26
_Nastawa:
	db	low(01h)
	db	low(01h)
	db	low(014h)
	db	low(014h)
	db	low(02h)
	db	low(04h)
	db	low(02h)
	db	low(02h)
	db	low(02h)
	db	low(02h)
	db	low(04h)
	db	low(08h)
	db	low(02h)
	db	low(02h)
	db	low(02h)
	db	low(02h)
	db	low(02h)
	db	low(02h)
	db	low(014h)
	db	low(01h)
	db	low(014h)
	db	low(01h)
	db	low(02h)
	db	low(02h)
	db	low(014h)
	db	low(014h)
	db	low(014h)
	db	low(014h)
	db	low(05h)
	db	low(05h)
	db	low(05h)
	db	low(014h)
	db	low(0Ah)
	db	low(0Ah)
	db	low(014h)
	db	low(014h)
	db	low(05h)
	db	low(05h)
	db	low(08h)
	db	low(08h)
	db	low(014h)
	db	low(014h)
	db	low(02h)
	db	low(0Ah)
	db	low(01h)
	db	low(01h)
	db	low(01h)
	db	low(01h)
	db	low(0)
	db	low(0)
	db	low(0)
	db	low(0)
	global __end_of_Nastawa
__end_of_Nastawa:
	global	_Znak
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	283
_Znak:
	db	low(050h)
	db	low(0F9h)
	db	low(032h)
	db	low(031h)
	db	low(099h)
	db	low(015h)
	db	low(014h)
	db	low(079h)
	db	low(010h)
	db	low(011h)
	db	low(018h)
	db	low(094h)
	db	low(056h)
	db	low(0B0h)
	db	low(016h)
	db	low(01Eh)
	global __end_of_Znak
__end_of_Znak:
	global	_Klj
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	216
_Klj:
	db	low(low((_KL0))|(__smallconst&~0xff))
	db	low(02h)
	db	low(low((_KL1))|(__smallconst&~0xff))
	db	low(02h)
	db	low(low((_KL2))|(__smallconst&~0xff))
	db	low(02h)
	db	low(low((_KL3))|(__smallconst&~0xff))
	db	low(02h)
	global __end_of_Klj
__end_of_Klj:
	global	_KL0
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	207
_KL0:
	db	low(low((_KL0_AP))|(__smallconst&~0xff))
	db	low(low((_KL0_WP))|(__smallconst&~0xff))
	db	low(low((_KL0_FP))|(__smallconst&~0xff))
	dw	(_KL0_FC)&0ffffh
	db	low(low((_KL0_OUT))|(__smallconst&~0xff))
	global __end_of_KL0
__end_of_KL0:
	global	_KL0_WP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	127
_KL0_WP:
	db	low(0)
	db	low(0)
	db	low(08h)
	db	low(0)
	db	low(0)
	db	low(08h)
	global __end_of_KL0_WP
__end_of_KL0_WP:
	global	_KL1
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	208
_KL1:
	db	low(low((_KL1_AP))|(__smallconst&~0xff))
	db	low(low((_KL1_WP))|(__smallconst&~0xff))
	db	low(low((_KL1_FP))|(__smallconst&~0xff))
	dw	(_KL1_FC)&0ffffh
	db	low(low((_KL1_OUT))|(__smallconst&~0xff))
	global __end_of_KL1
__end_of_KL1:
	global	_KL1_WP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	132
_KL1_WP:
	db	low(0)
	db	low(0)
	db	low(06h)
	db	low(0)
	db	low(0)
	db	low(06h)
	global __end_of_KL1_WP
__end_of_KL1_WP:
	global	_KL2
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	209
_KL2:
	db	low(low((_KL2_AP))|(__smallconst&~0xff))
	db	low(low((_KL2_WP))|(__smallconst&~0xff))
	db	low(low((_KL2_FP))|(__smallconst&~0xff))
	dw	(_KL2_FC)&0ffffh
	db	low(low((_KL2_OUT))|(__smallconst&~0xff))
	global __end_of_KL2
__end_of_KL2:
	global	_KL2_WP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	137
_KL2_WP:
	db	low(0)
	db	low(0)
	db	low(06h)
	db	low(0)
	db	low(0)
	db	low(06h)
	global __end_of_KL2_WP
__end_of_KL2_WP:
	global	_KL3
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	210
_KL3:
	db	low(low((_KL3_AP))|(__smallconst&~0xff))
	db	low(low((_KL3_WP))|(__smallconst&~0xff))
	db	low(low((_KL3_FP))|(__smallconst&~0xff))
	dw	(_KL3_FC)&0ffffh
	db	low(low((_KL3_OUT))|(__smallconst&~0xff))
	global __end_of_KL3
__end_of_KL3:
	global	_KL3_WP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	142
_KL3_WP:
	db	low(0)
	db	low(0)
	db	low(01Eh)
	db	low(0)
	db	low(0)
	db	low(014h)
	global __end_of_KL3_WP
__end_of_KL3_WP:
	global	_KL0_AP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	100
_KL0_AP:
	dw	(_DWD)&0ffffh
	dw	(_DWD+04h)&0ffffh
	global __end_of_KL0_AP
__end_of_KL0_AP:
	global	_KL0_FP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	153
_KL0_FP:
	db	low(0)
	db	low(0)
	db	low(0)
	db	low(0)
	global __end_of_KL0_FP
__end_of_KL0_FP:
	global	_KL0_OUT
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	200
_KL0_OUT:
	dw	(_PWD)&0ffffh
	db	low(0)
	db	low(0)
	global __end_of_KL0_OUT
__end_of_KL0_OUT:
	global	_KL1_AP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	105
_KL1_AP:
	dw	(_DWD+08h)&0ffffh
	dw	(_DWD+08h)&0ffffh
	global __end_of_KL1_AP
__end_of_KL1_AP:
	global	_KL1_FP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	158
_KL1_FP:
	db	low(0)
	db	low(0)
	db	low(0)
	db	low(0)
	global __end_of_KL1_FP
__end_of_KL1_FP:
	global	_KL1_OUT
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	201
_KL1_OUT:
	dw	(_PWD+04h)&0ffffh
	db	low(0)
	db	low(0)
	global __end_of_KL1_OUT
__end_of_KL1_OUT:
	global	_KL2_AP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	110
_KL2_AP:
	dw	(_DWD+0Ch)&0ffffh
	dw	(_DWD+010h)&0ffffh
	global __end_of_KL2_AP
__end_of_KL2_AP:
	global	_KL2_FP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	163
_KL2_FP:
	db	low(0)
	db	low(0)
	db	low(0)
	db	low(0)
	global __end_of_KL2_FP
__end_of_KL2_FP:
	global	_KL2_OUT
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	202
_KL2_OUT:
	dw	(_PWD+08h)&0ffffh
	db	low(04h)
	db	low(0)
	global __end_of_KL2_OUT
__end_of_KL2_OUT:
	global	_KL3_AP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	115
_KL3_AP:
	dw	(_DWD+014h)&0ffffh
	dw	(_DWD+018h)&0ffffh
	global __end_of_KL3_AP
__end_of_KL3_AP:
	global	_KL3_FP
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	168
_KL3_FP:
	db	low(0)
	db	low(0)
	db	low(0)
	db	low(0)
	global __end_of_KL3_FP
__end_of_KL3_FP:
	global	_KL3_OUT
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	203
_KL3_OUT:
	dw	(_PWD+0Ch)&0ffffh
	db	low(0)
	db	low(0)
	global __end_of_KL3_OUT
__end_of_KL3_OUT:
psect	smallconst
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\timer1.c"
	line	12
_RldT1:
	dw	(063BFh)&0ffffh
	global __end_of_RldT1
__end_of_RldT1:
	global	_Nastawa
	global	_Znak
	global	_Klj
	global	_KL0
	global	_KL0_WP
	global	_KL1
	global	_KL1_WP
	global	_KL2
	global	_KL2_WP
	global	_KL3
	global	_KL3_WP
	global	_KL0_AP
	global	_KL0_FP
	global	_KL0_OUT
	global	_KL1_AP
	global	_KL1_FP
	global	_KL1_OUT
	global	_KL2_AP
	global	_KL2_FP
	global	_KL2_OUT
	global	_KL3_AP
	global	_KL3_FP
	global	_KL3_OUT
	global	_rgl
	global	_DtCS
	global	_CommRT
	global	_PMP
	global	ModPruCW@s
	global	PomiarCS@pcs
	global	ReadDataXONLID@pp
	global	_RSerial
	global	_tmr
	global	_wsdid
	global	_zmn
	global	IntPWM@btOsc
	global	ReadDataXONLID@dtmo
	global	_mux
	global	_M
	global	_PWM
	global	_SPort
	global	_DtCW
	global	FltParMod@fco
	global	FltParMod@fcw
	global	PomiarPCO@pnst
	global	PomiarPCW@pnst
	global	PredkoscZmianCW@indff
	global	_pwm_kwr
	global	_DtCO
	global	_Sk
	global	_dSk
	global	_DtIN
	global	_DtKNF
	global	_Mn
	global	_KTim
	global	_Gd
	global	_UADt
	global	_DtZW
	global	_KInd
	global	_WswData
	global	_LedData
	global	_PmrtimFlt3
	global	_wbty
	global	FltParMod@indtm
	global	ModPruCO@l
	global	ModPruCW2@l
	global	ModPruCW2@m
	global	ModPruCW2@o
	global	ModPruCW2@p
	global	ModPruCW2@q
	global	ModPruCW2@r
	global	ModPruCW2@s
	global	ModPruCW4@l
	global	ModPruCW4@m
	global	ModPruCW4@o
	global	ModPruCW4@p
	global	ModPruCW4@q
	global	ModPruCW4@s
	global	ModPruCW@l
	global	ModPruCW@m
	global	ModPruCW@o
	global	ModPruCW@p
	global	ModPruCW@q
	global	ModPrzCW4@trb
	global	ModZgCW2@pop
	global	ModZgCW4@pop
	global	NastawaCOCW@obg_co
	global	NastawaCOCW@obg_cw
	global	NastawaCOCW@pcw
	global	NastawaCOCW@zmn2
	global	PomiarPFN@pnst
	global	PredkoscZmianCW@ffcw
	global	ReadDataXONLID@es2
	global	ReadDataXONLID@iu
	global	ReadDataXONLID@ktu
	global	ReadParam@pnst
	global	StabPort@tim
	global	_PmrtimFlt1
	global	_PmrtimFlt2
	global	_pwm_center
	global	_tmr2
	global	_PFN
	global	_DtI2C
	global	_KL0_FC
	global	_KL1_FC
	global	_KL2_FC
	global	_KL3_FC
	global	_zps
	global	_RSDT1
	global	_wff
	global	_PWD
	global	_ky
	global	_xxky
	global	_DWD
	global	_BufI2C
	global	_bufRUART
	global	_bufTUART
	global	_ADRESH
_ADRESH	set	0xFC4
	global	_ANSEL
_ANSEL	set	0xF7E
	global	_ANSELH
_ANSELH	set	0xF7F
	global	_CCP1CON
_CCP1CON	set	0xFBD
	global	_CCP2CON
_CCP2CON	set	0xFBA
	global	_CCPR1H
_CCPR1H	set	0xFBF
	global	_CCPR1L
_CCPR1L	set	0xFBE
	global	_CCPR2H
_CCPR2H	set	0xFBC
	global	_CCPR2L
_CCPR2L	set	0xFBB
	global	_EEADR
_EEADR	set	0xFA9
	global	_EEADRH
_EEADRH	set	0xFAA
	global	_EECON1bits
_EECON1bits	set	0xFA6
	global	_EECON2
_EECON2	set	0xFA7
	global	_EEDATA
_EEDATA	set	0xFA8
	global	_INTCONbits
_INTCONbits	set	0xFF2
	global	_PORTA
_PORTA	set	0xF80
	global	_PORTAbits
_PORTAbits	set	0xF80
	global	_PORTB
_PORTB	set	0xF81
	global	_PORTBbits
_PORTBbits	set	0xF81
	global	_PORTC
_PORTC	set	0xF82
	global	_PORTCbits
_PORTCbits	set	0xF82
	global	_PORTD
_PORTD	set	0xF83
	global	_PORTDbits
_PORTDbits	set	0xF83
	global	_PORTE
_PORTE	set	0xF84
	global	_PORTEbits
_PORTEbits	set	0xF84
	global	_PR2
_PR2	set	0xFCB
	global	_RCREG
_RCREG	set	0xFAE
	global	_SPBRG
_SPBRG	set	0xFAF
	global	_SSPADD
_SSPADD	set	0xFC8
	global	_SSPBUF
_SSPBUF	set	0xFC9
	global	_T2CON
_T2CON	set	0xFCA
	global	_TMR1H
_TMR1H	set	0xFCF
	global	_TMR1L
_TMR1L	set	0xFCE
	global	_TMR2
_TMR2	set	0xFCC
	global	_TRISA
_TRISA	set	0xF92
	global	_TRISB
_TRISB	set	0xF93
	global	_TRISC
_TRISC	set	0xF94
	global	_TRISD
_TRISD	set	0xF95
	global	_TRISE
_TRISE	set	0xF96
	global	_TXREG
_TXREG	set	0xFAD
	global	_ACQT0
_ACQT0	set	0x7E03
	global	_ACQT1
_ACQT1	set	0x7E04
	global	_ACQT2
_ACQT2	set	0x7E05
	global	_ADCS0
_ADCS0	set	0x7E00
	global	_ADCS1
_ADCS1	set	0x7E01
	global	_ADCS2
_ADCS2	set	0x7E02
	global	_ADDEN
_ADDEN	set	0x7D5B
	global	_ADFM
_ADFM	set	0x7E07
	global	_ADIE
_ADIE	set	0x7CEE
	global	_ADON
_ADON	set	0x7E10
	global	_BOR
_BOR	set	0x7E80
	global	_BRGH
_BRGH	set	0x7D62
	global	_CHS0
_CHS0	set	0x7E12
	global	_CHS1
_CHS1	set	0x7E13
	global	_CHS2
_CHS2	set	0x7E14
	global	_CHS3
_CHS3	set	0x7E15
	global	_CKE
_CKE	set	0x7E3E
	global	_CKP
_CKP	set	0x7E34
	global	_CREN
_CREN	set	0x7D5C
	global	_CSRC
_CSRC	set	0x7D67
	global	_DA
_DA	set	0x7E3D
	global	_DC1B0
_DC1B0	set	0x7DEC
	global	_DC1B1
_DC1B1	set	0x7DED
	global	_DC2B0
_DC2B0	set	0x7DD4
	global	_DC2B1
_DC2B1	set	0x7DD5
	global	_GIEH
_GIEH	set	0x7F97
	global	_GIEL
_GIEL	set	0x7F96
	global	_GODONE
_GODONE	set	0x7E11
	global	_IPEN
_IPEN	set	0x7E87
	global	_IRCF0
_IRCF0	set	0x7E9C
	global	_IRCF1
_IRCF1	set	0x7E9D
	global	_IRCF2
_IRCF2	set	0x7E9E
	global	_PLLEN
_PLLEN	set	0x7CDE
	global	_POR
_POR	set	0x7E81
	global	_RCIE
_RCIE	set	0x7CED
	global	_RCIF
_RCIF	set	0x7CF5
	global	_RCIP
_RCIP	set	0x7CFD
	global	_RW
_RW	set	0x7E3A
	global	_RX9
_RX9	set	0x7D5E
	global	_RX9D
_RX9D	set	0x7D58
	global	_SCS0
_SCS0	set	0x7E98
	global	_SCS1
_SCS1	set	0x7E99
	global	_SMP
_SMP	set	0x7E3F
	global	_SPEN
_SPEN	set	0x7D5F
	global	_SSPEN
_SSPEN	set	0x7E35
	global	_SSPIE
_SSPIE	set	0x7CEB
	global	_SSPIF
_SSPIF	set	0x7CF3
	global	_SSPIP
_SSPIP	set	0x7CFB
	global	_SSPM0
_SSPM0	set	0x7E30
	global	_SSPM1
_SSPM1	set	0x7E31
	global	_SSPM2
_SSPM2	set	0x7E32
	global	_SSPM3
_SSPM3	set	0x7E33
	global	_SSPOV
_SSPOV	set	0x7E36
	global	_SYNC
_SYNC	set	0x7D64
	global	_T1CKPS0
_T1CKPS0	set	0x7E6C
	global	_T1CKPS1
_T1CKPS1	set	0x7E6D
	global	_T1RD16
_T1RD16	set	0x7E6F
	global	_TMR0IE
_TMR0IE	set	0x7F95
	global	_TMR0IF
_TMR0IF	set	0x7F92
	global	_TMR1CS
_TMR1CS	set	0x7E69
	global	_TMR1IE
_TMR1IE	set	0x7CE8
	global	_TMR1IF
_TMR1IF	set	0x7CF0
	global	_TMR1IP
_TMR1IP	set	0x7CF8
	global	_TMR1ON
_TMR1ON	set	0x7E68
	global	_TMR2IE
_TMR2IE	set	0x7CE9
	global	_TMR2IF
_TMR2IF	set	0x7CF1
	global	_TMR2ON
_TMR2ON	set	0x7E52
	global	_TRISC3
_TRISC3	set	0x7CA3
	global	_TRISC4
_TRISC4	set	0x7CA4
	global	_TX9
_TX9	set	0x7D66
	global	_TX9D
_TX9D	set	0x7D60
	global	_TXEN
_TXEN	set	0x7D65
	global	_TXIE
_TXIE	set	0x7CEC
	global	_TXIF
_TXIF	set	0x7CF4
	global	_TXIP
_TXIP	set	0x7CFC
	global	_VCFG0
_VCFG0	set	0x7E0C
	global	_VCFG1
_VCFG1	set	0x7E0D
	global	_WCOL
_WCOL	set	0x7E37
; #config settings
global __CFG_IESO$ON
__CFG_IESO$ON equ 0x0
global __CFG_FOSC$INTIO67
__CFG_FOSC$INTIO67 equ 0x0
global __CFG_FCMEN$ON
__CFG_FCMEN$ON equ 0x0
global __CFG_BORV$27
__CFG_BORV$27 equ 0x0
global __CFG_WDTPS$128
__CFG_WDTPS$128 equ 0x0
global __CFG_PBADEN$OFF
__CFG_PBADEN$OFF equ 0x0
global __CFG_MCLRE$OFF
__CFG_MCLRE$OFF equ 0x0
global __CFG_XINST$ON
__CFG_XINST$ON equ 0x0
global __CFG_LVP$OFF
__CFG_LVP$OFF equ 0x0
global __CFG_CP0$ON
__CFG_CP0$ON equ 0x0
global __CFG_CP1$ON
__CFG_CP1$ON equ 0x0
global __CFG_CP2$ON
__CFG_CP2$ON equ 0x0
global __CFG_CP3$ON
__CFG_CP3$ON equ 0x0
global __CFG_WRT0$ON
__CFG_WRT0$ON equ 0x0
global __CFG_WRT1$ON
__CFG_WRT1$ON equ 0x0
global __CFG_WRT2$ON
__CFG_WRT2$ON equ 0x0
global __CFG_WRT3$ON
__CFG_WRT3$ON equ 0x0
global __CFG_WRTC$ON
__CFG_WRTC$ON equ 0x0
	file	"UNISTR.as"
	line	#
psect	cinit,class=CODE,delta=1,reloc=2
global __pcinit
__pcinit:
global start_initialization
start_initialization:

global __initialization
__initialization:
psect	bitbssCOMRAM,class=COMRAM,bit,space=1
global __pbitbssCOMRAM
__pbitbssCOMRAM:
IntPWM@btOsc:
       ds      1
ReadDataXONLID@dtmo:
       ds      1
_mux:
       ds      1
psect	bssCOMRAM,class=COMRAM,space=1
global __pbssCOMRAM
__pbssCOMRAM:
	global	_rgl
_rgl:
       ds      10
	global	_DtCS
_DtCS:
       ds      4
_CommRT:
       ds      3
	global	_PMP
_PMP:
       ds      3
ModPruCW@s:
       ds      1
PomiarCS@pcs:
       ds      1
ReadDataXONLID@pp:
       ds      1
	global	_RSerial
_RSerial:
       ds      1
	global	_tmr
_tmr:
       ds      1
_wsdid:
       ds      1
	global	_zmn
_zmn:
       ds      1
psect	bssBANK0,class=BANK0,space=1
global __pbssBANK0
__pbssBANK0:
	global	_M
_M:
       ds      51
	global	_PWM
_PWM:
       ds      34
_SPort:
       ds      26
	global	_DtCW
_DtCW:
       ds      15
FltParMod@fco:
       ds      1
FltParMod@fcw:
       ds      1
PomiarPCO@pnst:
       ds      1
PomiarPCW@pnst:
       ds      1
PredkoscZmianCW@indff:
       ds      1
	global	_pwm_kwr
_pwm_kwr:
       ds      1
	global	_DtCO
_DtCO:
       ds      15
psect	bssBANK1,class=BANK1,space=1
global __pbssBANK1
__pbssBANK1:
	global	_Sk
_Sk:
       ds      32
	global	_dSk
_dSk:
       ds      22
	global	_DtIN
_DtIN:
       ds      20
	global	_DtKNF
_DtKNF:
       ds      18
	global	_Mn
_Mn:
       ds      14
_KTim:
       ds      12
	global	_Gd
_Gd:
       ds      6
	global	_UADt
_UADt:
       ds      5
	global	_DtZW
_DtZW:
       ds      4
_KInd:
       ds      4
_WswData:
       ds      4
_LedData:
       ds      3
_PmrtimFlt3:
       ds      2
_wbty:
       ds      2
FltParMod@indtm:
       ds      1
ModPruCO@l:
       ds      1
ModPruCW2@l:
       ds      1
ModPruCW2@m:
       ds      1
ModPruCW2@o:
       ds      1
ModPruCW2@p:
       ds      1
ModPruCW2@q:
       ds      1
ModPruCW2@r:
       ds      1
ModPruCW2@s:
       ds      1
ModPruCW4@l:
       ds      1
ModPruCW4@m:
       ds      1
ModPruCW4@o:
       ds      1
ModPruCW4@p:
       ds      1
ModPruCW4@q:
       ds      1
ModPruCW4@s:
       ds      1
ModPruCW@l:
       ds      1
ModPruCW@m:
       ds      1
ModPruCW@o:
       ds      1
ModPruCW@p:
       ds      1
ModPruCW@q:
       ds      1
ModPrzCW4@trb:
       ds      1
ModZgCW2@pop:
       ds      1
ModZgCW4@pop:
       ds      1
NastawaCOCW@obg_co:
       ds      1
NastawaCOCW@obg_cw:
       ds      1
NastawaCOCW@pcw:
       ds      1
NastawaCOCW@zmn2:
       ds      1
PomiarPFN@pnst:
       ds      1
PredkoscZmianCW@ffcw:
       ds      1
ReadDataXONLID@es2:
       ds      1
ReadDataXONLID@iu:
       ds      1
ReadDataXONLID@ktu:
       ds      1
ReadParam@pnst:
       ds      1
StabPort@tim:
       ds      1
_PmrtimFlt1:
       ds      1
_PmrtimFlt2:
       ds      1
	global	_pwm_center
_pwm_center:
       ds      1
	global	_tmr2
_tmr2:
       ds      1
	global	_PFN
_PFN:
       ds      35
_DtI2C:
       ds      23
_KL0_FC:
       ds      2
_KL1_FC:
       ds      2
_KL2_FC:
       ds      2
_KL3_FC:
       ds      2
	global	_zps
_zps:
       ds      1
psect	bssBANK2,class=BANK2,space=1
global __pbssBANK2
__pbssBANK2:
	global	_RSDT1
_RSDT1:
       ds      65
	global	_wff
_wff:
       ds      12
	global	_PWD
_PWD:
       ds      40
	global	_ky
_ky:
       ds      35
	global	_xxky
_xxky:
       ds      35
	global	_DWD
_DWD:
       ds      28
_BufI2C:
       ds      25
psect	bssBANK3,class=BANK3,space=1
global __pbssBANK3
__pbssBANK3:
	global	_bufRUART
_bufRUART:
       ds      35
	global	_bufTUART
_bufTUART:
       ds      35
psect	cinit
; Clear objects allocated to BANK3 (70 bytes)
	global __pbssBANK3
lfsr	0,__pbssBANK3
movlw	70
clear_0:
clrf	postinc0,c
decf	wreg
bnz	clear_0
; Clear objects allocated to BANK2 (240 bytes)
	global __pbssBANK2
lfsr	0,__pbssBANK2
movlw	240
clear_1:
clrf	postinc0,c
decf	wreg
bnz	clear_1
; Clear objects allocated to BANK1 (253 bytes)
	global __pbssBANK1
lfsr	0,__pbssBANK1
movlw	253
clear_2:
clrf	postinc0,c
decf	wreg
bnz	clear_2
; Clear objects allocated to BANK0 (147 bytes)
	global __pbssBANK0
lfsr	0,__pbssBANK0
movlw	147
clear_3:
clrf	postinc0,c
decf	wreg
bnz	clear_3
; Clear objects allocated to BITCOMRAM (1 bytes)
	global __pbitbssCOMRAM
clrf	(__pbitbssCOMRAM/8+0)&0xffh,c
; Clear objects allocated to COMRAM (27 bytes)
	global __pbssCOMRAM
lfsr	0,__pbssCOMRAM
movlw	27
clear_4:
clrf	postinc0,c
decf	wreg
bnz	clear_4
psect cinit,class=CODE,delta=1
global end_of_initialization,__end_of__initialization

;End of C runtime variable initialization code

end_of_initialization:
__end_of__initialization:movlb 0
goto _main	;jump to C main() function
psect	cstackBANK3,class=BANK3,space=1
global __pcstackBANK3
__pcstackBANK3:
	global	?_ReadParam
?_ReadParam:	; 0 bytes @ 0x0
??_ModPmp2:	; 0 bytes @ 0x0
	global	ReadParam@param
ReadParam@param:	; 2 bytes @ 0x0
	ds   2
	global	ReadParam@zmiana
ReadParam@zmiana:	; 1 bytes @ 0x2
	ds   1
	global	ReadParam@zapis
ReadParam@zapis:	; 2 bytes @ 0x3
	ds   2
	global	ModPmp2@p
ModPmp2@p:	; 1 bytes @ 0x5
	global	ReadParam@min
ReadParam@min:	; 2 bytes @ 0x5
	ds   1
	global	ModPmp2@tim
ModPmp2@tim:	; 1 bytes @ 0x6
	ds   1
	global	ModPmp2@pdw
ModPmp2@pdw:	; 1 bytes @ 0x7
	global	ReadParam@max
ReadParam@max:	; 2 bytes @ 0x7
	ds   1
	global	ModPmp2@pup
ModPmp2@pup:	; 1 bytes @ 0x8
	ds   1
	global	ModPmp2@ppwm
ModPmp2@ppwm:	; 1 bytes @ 0x9
	global	ReadParam@rckl
ReadParam@rckl:	; 1 bytes @ 0x9
	ds   1
	global	ReadParam@fst
ReadParam@fst:	; 1 bytes @ 0xA
	ds   1
	global	_ReadParam$5561
_ReadParam$5561:	; 2 bytes @ 0xB
	ds   2
	global	ReadParam@stp
ReadParam@stp:	; 1 bytes @ 0xD
	ds   1
	global	ReadParam@ovi
ReadParam@ovi:	; 1 bytes @ 0xE
	ds   1
	global	ReadParam@ovd
ReadParam@ovd:	; 1 bytes @ 0xF
	ds   1
	global	_main$2063
_main$2063:	; 1 bytes @ 0x10
	ds   1
	global	_main$2064
_main$2064:	; 1 bytes @ 0x11
	ds   1
psect	cstackBANK2,class=BANK2,space=1
global __pcstackBANK2
__pcstackBANK2:
	global	?_ReadDataXONLID
?_ReadDataXONLID:	; 1 bytes @ 0x0
	global	GetPGD_PCO@p
GetPGD_PCO@p:	; 1 bytes @ 0x0
	global	ModZgCO@p
ModZgCO@p:	; 1 bytes @ 0x0
	global	FirstPCW@tmp
FirstPCW@tmp:	; 1 bytes @ 0x0
	global	ModZgCW@p
ModZgCW@p:	; 1 bytes @ 0x0
	global	ModPrzCW@maxmod
ModPrzCW@maxmod:	; 1 bytes @ 0x0
	global	ModZgCW4@p
ModZgCW4@p:	; 1 bytes @ 0x0
	global	ModZgCW2@p
ModZgCW2@p:	; 1 bytes @ 0x0
	global	RetHI@k
RetHI@k:	; 1 bytes @ 0x0
	global	RetLO@k
RetLO@k:	; 1 bytes @ 0x0
	global	ReadDataXONLID@ky
ReadDataXONLID@ky:	; 2 bytes @ 0x0
	ds   1
	global	FirstPCW@p
FirstPCW@p:	; 1 bytes @ 0x1
	global	RetHI@pco
RetHI@pco:	; 1 bytes @ 0x1
	global	RetLO@pco
RetLO@pco:	; 1 bytes @ 0x1
	global	ModPrzCW@r
ModPrzCW@r:	; 2 bytes @ 0x1
	global	GetPGD_PCO@m
GetPGD_PCO@m:	; 4 bytes @ 0x1
	global	ModZgCO@m
ModZgCO@m:	; 4 bytes @ 0x1
	global	ModZgCW@m
ModZgCW@m:	; 4 bytes @ 0x1
	global	ModZgCW4@m
ModZgCW4@m:	; 4 bytes @ 0x1
	global	ModZgCW2@m
ModZgCW2@m:	; 4 bytes @ 0x1
	ds   1
	global	FirstPCW@p2
FirstPCW@p2:	; 1 bytes @ 0x2
	global	RetHI@w
RetHI@w:	; 1 bytes @ 0x2
	global	RetLO@w
RetLO@w:	; 1 bytes @ 0x2
	global	ReadDataXONLID@dt
ReadDataXONLID@dt:	; 2 bytes @ 0x2
	ds   1
	global	FirstPCW@maxmod
FirstPCW@maxmod:	; 1 bytes @ 0x3
	global	ModPrzCW@p
ModPrzCW@p:	; 1 bytes @ 0x3
	global	RetHI@emax
RetHI@emax:	; 1 bytes @ 0x3
	global	RetLO@ehi
RetLO@ehi:	; 1 bytes @ 0x3
	ds   1
	global	RetDelta4@pco
RetDelta4@pco:	; 1 bytes @ 0x4
	global	ReadDataXONLID@ovf
ReadDataXONLID@ovf:	; 2 bytes @ 0x4
	global	FirstPCW@m
FirstPCW@m:	; 4 bytes @ 0x4
	ds   1
	global	RetDelta4@d
RetDelta4@d:	; 1 bytes @ 0x5
	ds   1
	global	RetKrkDelta@pco
RetKrkDelta@pco:	; 1 bytes @ 0x6
	global	ReadDataXONLID@tid
ReadDataXONLID@tid:	; 1 bytes @ 0x6
	ds   1
	global	RetKrkDelta@min
RetKrkDelta@min:	; 1 bytes @ 0x7
	global	ReadDataXONLID@min
ReadDataXONLID@min:	; 2 bytes @ 0x7
	ds   1
	global	RetKrkDelta@max
RetKrkDelta@max:	; 1 bytes @ 0x8
	ds   1
	global	RetKrkDelta@d
RetKrkDelta@d:	; 1 bytes @ 0x9
	global	ReadDataXONLID@max
ReadDataXONLID@max:	; 2 bytes @ 0x9
	ds   1
	global	RetKrkDelta@i
RetKrkDelta@i:	; 1 bytes @ 0xA
	ds   1
	global	RetDelta@pco
RetDelta@pco:	; 1 bytes @ 0xB
	global	ReadDataXONLID@step
ReadDataXONLID@step:	; 1 bytes @ 0xB
	ds   1
	global	RetDelta@k
RetDelta@k:	; 1 bytes @ 0xC
	global	ReadDataXONLID@step2
ReadDataXONLID@step2:	; 1 bytes @ 0xC
	ds   1
??_RglPmp2:	; 0 bytes @ 0xD
	global	ReadDataXONLID@fst
ReadDataXONLID@fst:	; 1 bytes @ 0xD
	ds   1
??_main:	; 0 bytes @ 0xE
	ds   1
psect	cstackBANK1,class=BANK1,space=1
global __pcstackBANK1
__pcstackBANK1:
??_Moduluj:	; 0 bytes @ 0x0
	global	?_RetDelta4
?_RetDelta4:	; 1 bytes @ 0x0
	global	_DecWSW$2088
_DecWSW$2088:	; 1 bytes @ 0x0
	global	RetDelta4@eco
RetDelta4@eco:	; 1 bytes @ 0x0
	ds   1
	global	_DecWSW$2089
_DecWSW$2089:	; 1 bytes @ 0x1
	global	RetDelta4@hi
RetDelta4@hi:	; 1 bytes @ 0x1
	ds   1
	global	_DecWSW$2090
_DecWSW$2090:	; 1 bytes @ 0x2
	global	RetDelta4@lo
RetDelta4@lo:	; 1 bytes @ 0x2
	ds   1
psect	cstackBANK0,class=BANK0,space=1
global __pcstackBANK0
__pcstackBANK0:
??_ModDkCO:	; 0 bytes @ 0x0
??_ModDkCW:	; 0 bytes @ 0x0
??_ModDkCW2:	; 0 bytes @ 0x0
??_ModDkCW4:	; 0 bytes @ 0x0
??_GoldenEye:	; 0 bytes @ 0x0
??_ReadDataXONLID:	; 0 bytes @ 0x0
	global	?___awdiv
?___awdiv:	; 2 bytes @ 0x0
	global	?___lwdiv
?___lwdiv:	; 2 bytes @ 0x0
	global	PrintErrCs@kod
PrintErrCs@kod:	; 1 bytes @ 0x0
	global	PrintErrTm@kod
PrintErrTm@kod:	; 1 bytes @ 0x0
	global	ModPruCO@tmp
ModPruCO@tmp:	; 1 bytes @ 0x0
	global	ModPruCW@tmp
ModPruCW@tmp:	; 1 bytes @ 0x0
	global	ModPruCW4@tmp
ModPruCW4@tmp:	; 1 bytes @ 0x0
	global	ModPruCW2@tmp
ModPruCW2@tmp:	; 1 bytes @ 0x0
	global	ModPmp1@p
ModPmp1@p:	; 1 bytes @ 0x0
	global	TrybPracy@ExtR
TrybPracy@ExtR:	; 1 bytes @ 0x0
	global	___aldiv@counter
___aldiv@counter:	; 1 bytes @ 0x0
	global	___awdiv@dividend
___awdiv@dividend:	; 2 bytes @ 0x0
	global	___lwdiv@dividend
___lwdiv@dividend:	; 2 bytes @ 0x0
	global	___lmul@product
___lmul@product:	; 4 bytes @ 0x0
	ds   1
	global	ModPruCO@k
ModPruCO@k:	; 1 bytes @ 0x1
	global	ModPruCW@k
ModPruCW@k:	; 1 bytes @ 0x1
	global	ModPruCW4@k
ModPruCW4@k:	; 1 bytes @ 0x1
	global	ModPruCW2@k
ModPruCW2@k:	; 1 bytes @ 0x1
	global	ModPmp1@tim
ModPmp1@tim:	; 1 bytes @ 0x1
	global	TrybPracy@ExtR2
TrybPracy@ExtR2:	; 1 bytes @ 0x1
	global	___aldiv@sign
___aldiv@sign:	; 1 bytes @ 0x1
	ds   1
	global	ModPmp1@pdw
ModPmp1@pdw:	; 1 bytes @ 0x2
	global	_TrybPracy$5567
_TrybPracy$5567:	; 1 bytes @ 0x2
	global	___awdiv@divisor
___awdiv@divisor:	; 2 bytes @ 0x2
	global	___lwdiv@divisor
___lwdiv@divisor:	; 2 bytes @ 0x2
	global	___aldiv@quotient
___aldiv@quotient:	; 4 bytes @ 0x2
	ds   1
	global	ModPmp1@pup
ModPmp1@pup:	; 1 bytes @ 0x3
	global	_TrybPracy$5568
_TrybPracy$5568:	; 1 bytes @ 0x3
	ds   1
??_ModPrzCW4:	; 0 bytes @ 0x4
??_WriteOPWM:	; 0 bytes @ 0x4
	global	ProcToPmpPwm@prc
ProcToPmpPwm@prc:	; 1 bytes @ 0x4
	global	ModPmp1@ppwm
ModPmp1@ppwm:	; 1 bytes @ 0x4
	global	ReadDataXONLID@k
ReadDataXONLID@k:	; 1 bytes @ 0x4
	global	TrybPracy@key2
TrybPracy@key2:	; 1 bytes @ 0x4
	global	___awdiv@counter
___awdiv@counter:	; 1 bytes @ 0x4
	ds   1
	global	ModDkCO@ada
ModDkCO@ada:	; 1 bytes @ 0x5
	global	ModDkCW@ada
ModDkCW@ada:	; 1 bytes @ 0x5
	global	ModDkCW4@k
ModDkCW4@k:	; 1 bytes @ 0x5
	global	ModDkCW2@k
ModDkCW2@k:	; 1 bytes @ 0x5
	global	ReadDataXONLID@key
ReadDataXONLID@key:	; 1 bytes @ 0x5
	global	TrybPracy@key
TrybPracy@key:	; 1 bytes @ 0x5
	global	___awdiv@sign
___awdiv@sign:	; 1 bytes @ 0x5
	global	ProcToPmpPwm@p
ProcToPmpPwm@p:	; 2 bytes @ 0x5
	ds   1
??_ReadParam:	; 0 bytes @ 0x6
??_ModZgCO:	; 0 bytes @ 0x6
??_ModZgCW:	; 0 bytes @ 0x6
??_ModZgCW2:	; 0 bytes @ 0x6
??_ModZgCW4:	; 0 bytes @ 0x6
??_GetPGD_PCO:	; 0 bytes @ 0x6
	global	ModDkCO@k
ModDkCO@k:	; 1 bytes @ 0x6
	global	ModDkCW@k
ModDkCW@k:	; 1 bytes @ 0x6
	global	ModDkCW4@p
ModDkCW4@p:	; 1 bytes @ 0x6
	global	ModDkCW2@p
ModDkCW2@p:	; 1 bytes @ 0x6
	global	___awdiv@quotient
___awdiv@quotient:	; 2 bytes @ 0x6
	ds   1
??_RglPmp1:	; 0 bytes @ 0x7
	global	ModDkCO@p
ModDkCO@p:	; 1 bytes @ 0x7
	global	ModDkCW@p
ModDkCW@p:	; 1 bytes @ 0x7
	global	ModDkCW4@ada
ModDkCW4@ada:	; 1 bytes @ 0x7
	global	ModDkCW2@ada
ModDkCW2@ada:	; 1 bytes @ 0x7
	ds   1
??_ModPrzCW:	; 0 bytes @ 0x8
??_FirstPCW:	; 0 bytes @ 0x8
??_RetHI:	; 0 bytes @ 0x8
??_RetLO:	; 0 bytes @ 0x8
	global	PomiarCS@dac
PomiarCS@dac:	; 1 bytes @ 0x8
	global	MocStart@tmp
MocStart@tmp:	; 2 bytes @ 0x8
	global	MocMaksCO@tmp
MocMaksCO@tmp:	; 2 bytes @ 0x8
	global	MocMaksCW@tmp
MocMaksCW@tmp:	; 2 bytes @ 0x8
	global	ModDkCO@m
ModDkCO@m:	; 4 bytes @ 0x8
	global	ModDkCW@m
ModDkCW@m:	; 4 bytes @ 0x8
	global	ModDkCW4@m
ModDkCW4@m:	; 4 bytes @ 0x8
	global	ModDkCW2@m
ModDkCW2@m:	; 4 bytes @ 0x8
	ds   1
	global	PomiarCS@cs
PomiarCS@cs:	; 1 bytes @ 0x9
	global	WriteOPWM@aosc
WriteOPWM@aosc:	; 1 bytes @ 0x9
	global	ModPrzCW4@p
ModPrzCW4@p:	; 2 bytes @ 0x9
	ds   1
??_Rozruch:	; 0 bytes @ 0xA
??_RuszCiag:	; 0 bytes @ 0xA
??_OczekujNaPrzeplywWG:	; 0 bytes @ 0xA
??_NastawaCOCW:	; 0 bytes @ 0xA
	global	DecERR@w
DecERR@w:	; 1 bytes @ 0xA
	global	MocStart@nst
MocStart@nst:	; 1 bytes @ 0xA
	global	MocMaksCO@nst
MocMaksCO@nst:	; 1 bytes @ 0xA
	global	MocMaksCW@nst
MocMaksCW@nst:	; 1 bytes @ 0xA
	global	WriteOPWM@tmp
WriteOPWM@tmp:	; 2 bytes @ 0xA
	ds   1
	global	_DecERR$2094
_DecERR$2094:	; 1 bytes @ 0xB
	global	OczekujNaPrzeplywWG@pmp
OczekujNaPrzeplywWG@pmp:	; 1 bytes @ 0xB
	ds   1
	global	_DecERR$2095
_DecERR$2095:	; 1 bytes @ 0xC
	global	OczekujNaPrzeplywWG@prz
OczekujNaPrzeplywWG@prz:	; 1 bytes @ 0xC
	global	WriteOPWM@tpwm
WriteOPWM@tpwm:	; 1 bytes @ 0xC
	ds   1
psect	cstackCOMRAM,class=COMRAM,space=1
global __pcstackCOMRAM
__pcstackCOMRAM:
?_SetTData:	; 0 bytes @ 0x0
??_LiczCHK:	; 0 bytes @ 0x0
?_SetRData:	; 0 bytes @ 0x0
??_SetRData:	; 0 bytes @ 0x0
?_ReceptDataI2C:	; 0 bytes @ 0x0
?_TransmitDataI2C:	; 0 bytes @ 0x0
??_TransmitDataI2C:	; 0 bytes @ 0x0
?_ToWork:	; 0 bytes @ 0x0
??_ToWork:	; 0 bytes @ 0x0
?_RdPrt:	; 1 bit 
?_IntUSARTRC:	; 0 bytes @ 0x0
?_IntUSARTTR:	; 0 bytes @ 0x0
??_IntUSARTTR:	; 0 bytes @ 0x0
?_ReloadTimer1:	; 0 bytes @ 0x0
??_ReloadTimer1:	; 0 bytes @ 0x0
?_IncRTimer:	; 0 bytes @ 0x0
??_IncRTimer:	; 0 bytes @ 0x0
?_IncPmrTimer:	; 0 bytes @ 0x0
??_IncPmrTimer:	; 0 bytes @ 0x0
?_IncKeyTimer:	; 0 bytes @ 0x0
??_IncKeyTimer:	; 0 bytes @ 0x0
?_RefreshWSW:	; 0 bytes @ 0x0
?_StabPort:	; 0 bytes @ 0x0
?_IntPWM:	; 0 bytes @ 0x0
??_IntPWM:	; 0 bytes @ 0x0
?_IntPWM2:	; 0 bytes @ 0x0
??_IntPWM2:	; 0 bytes @ 0x0
?_InitOsc:	; 0 bytes @ 0x0
?_InitGlobal:	; 0 bytes @ 0x0
?_InitTimer1:	; 0 bytes @ 0x0
?_InitPort:	; 0 bytes @ 0x0
?_InitWsw:	; 0 bytes @ 0x0
?_InitPWM:	; 0 bytes @ 0x0
?_InitUart:	; 0 bytes @ 0x0
?_InitDataPmr:	; 0 bytes @ 0x0
?_ClearData:	; 0 bytes @ 0x0
?_TestScr:	; 0 bytes @ 0x0
?_PwrOnDelay:	; 0 bytes @ 0x0
?_EndTestScr:	; 0 bytes @ 0x0
?_ClsScr:	; 0 bytes @ 0x0
?_EndClsScr:	; 0 bytes @ 0x0
?_RdEEParam:	; 0 bytes @ 0x0
?_EnKonf:	; 0 bytes @ 0x0
?_ErrPTG:	; 0 bytes @ 0x0
?_PomiarCO:	; 0 bytes @ 0x0
?_PomiarCW:	; 0 bytes @ 0x0
?_PomiarZW:	; 0 bytes @ 0x0
?_PomiarCS:	; 0 bytes @ 0x0
?_PomiarPCO:	; 0 bytes @ 0x0
?_PomiarPCW:	; 0 bytes @ 0x0
?_PomiarPFN:	; 0 bytes @ 0x0
?_PomiarIN:	; 0 bytes @ 0x0
?_RefInterfaceData:	; 0 bytes @ 0x0
?_RestartFltPrt:	; 0 bytes @ 0x0
?_StartRTS:	; 0 bytes @ 0x0
?_WritePWM2:	; 0 bytes @ 0x0
?_TrybPracy:	; 0 bytes @ 0x0
?_FiltrPomiarowyCOCW:	; 0 bytes @ 0x0
?_DecWSW:	; 0 bytes @ 0x0
?_DecERR:	; 0 bytes @ 0x0
?_DecSTR:	; 0 bytes @ 0x0
?_DecRozruch:	; 0 bytes @ 0x0
?_DecWylacz:	; 0 bytes @ 0x0
?_FunkcjaSerwisowa:	; 0 bytes @ 0x0
?_DecyzjaAntyLeg:	; 0 bytes @ 0x0
?_KolejkaPobudzen:	; 0 bytes @ 0x0
?_RglPmp:	; 0 bytes @ 0x0
?_ZmienKCOKCW:	; 0 bytes @ 0x0
?_Wylacz:	; 0 bytes @ 0x0
?_Rozruch:	; 0 bytes @ 0x0
?_VWybieg:	; 0 bytes @ 0x0
?_ReloadPlomien:	; 0 bytes @ 0x0
?_RuszPlomien:	; 0 bytes @ 0x0
?_ReloadCiag:	; 0 bytes @ 0x0
?_RuszCiag:	; 0 bytes @ 0x0
?_Proba48:	; 0 bytes @ 0x0
?_Rusz48:	; 0 bytes @ 0x0
?_Proba48Z3:	; 0 bytes @ 0x0
?_Rusz48Z3:	; 0 bytes @ 0x0
?_BlokadaL3:	; 0 bytes @ 0x0
?_Blokada15S:	; 0 bytes @ 0x0
?_Moduluj:	; 0 bytes @ 0x0
?_DetekcjaPrzeplywuWG:	; 0 bytes @ 0x0
?_OczekujNaPrzeplywWG:	; 0 bytes @ 0x0
?_StartRTG:	; 0 bytes @ 0x0
?_StartRTM:	; 0 bytes @ 0x0
?_Busy_eep:	; 0 bytes @ 0x0
?_StartRTdS:	; 0 bytes @ 0x0
?_EndNst:	; 0 bytes @ 0x0
?_PrintNstCW:	; 0 bytes @ 0x0
?_PrintNstCO:	; 0 bytes @ 0x0
?_EndErr:	; 0 bytes @ 0x0
?_PrintOFF:	; 0 bytes @ 0x0
?_EndOFF:	; 0 bytes @ 0x0
?_PrintCS:	; 0 bytes @ 0x0
?_EndCS:	; 0 bytes @ 0x0
?_PrintCW:	; 0 bytes @ 0x0
?_EndCW:	; 0 bytes @ 0x0
?_PrintCO:	; 0 bytes @ 0x0
?_PrintL3:	; 0 bytes @ 0x0
?_SetErr:	; 0 bytes @ 0x0
?_SetMsg:	; 0 bytes @ 0x0
?_ToObiegCW:	; 0 bytes @ 0x0
?_ToObiegCO:	; 0 bytes @ 0x0
?_RestartMod:	; 0 bytes @ 0x0
?_WritePWM:	; 0 bytes @ 0x0
?_SetRozruch:	; 0 bytes @ 0x0
?_EndL3:	; 0 bytes @ 0x0
?_SetWylacz:	; 0 bytes @ 0x0
?_SetL3:	; 0 bytes @ 0x0
?_GrzejOFF:	; 0 bytes @ 0x0
?_DecyzjaPLM:	; 0 bytes @ 0x0
?_DecyzjaPLM2:	; 0 bytes @ 0x0
?_ToReset:	; 0 bytes @ 0x0
?_WriteEEPCO:	; 0 bytes @ 0x0
?_WriteEEPCW:	; 0 bytes @ 0x0
?_WriteEEPFN:	; 0 bytes @ 0x0
?_WswOff:	; 0 bytes @ 0x0
?_AllKolToFirstPoz:	; 0 bytes @ 0x0
?_WswOn:	; 0 bytes @ 0x0
?_ResetKol:	; 0 bytes @ 0x0
?_RestartKol:	; 0 bytes @ 0x0
?_Swsdid:	; 0 bytes @ 0x0
?_Rwsdid:	; 0 bytes @ 0x0
?_StartCO:	; 0 bytes @ 0x0
?_ReadDataCO:	; 0 bytes @ 0x0
?_ModToCO:	; 0 bytes @ 0x0
?_ModZgCO:	; 0 bytes @ 0x0
?_ModDkCO:	; 0 bytes @ 0x0
?_IncConstCOCW:	; 0 bytes @ 0x0
?_IncMaxCO:	; 0 bytes @ 0x0
?_ModPruCO:	; 0 bytes @ 0x0
?_ModPrzCO:	; 0 bytes @ 0x0
?_PropOPT:	; 0 bytes @ 0x0
?_StartMCW:	; 0 bytes @ 0x0
?_ReadDataCW:	; 0 bytes @ 0x0
?_ModToCW:	; 0 bytes @ 0x0
?_ModZgCW:	; 0 bytes @ 0x0
?_ModDkCW:	; 0 bytes @ 0x0
?_IncMaxCW:	; 0 bytes @ 0x0
?_ModPruCW:	; 0 bytes @ 0x0
?_ModPrzCW:	; 0 bytes @ 0x0
?_PropCO:	; 0 bytes @ 0x0
?_StartCO2:	; 0 bytes @ 0x0
?_ReadDataCO2:	; 0 bytes @ 0x0
?_ModToCO2:	; 0 bytes @ 0x0
?_IncConstCO2:	; 0 bytes @ 0x0
?_StartMCW2:	; 0 bytes @ 0x0
?_ReadDataCW2:	; 0 bytes @ 0x0
?_ModToCW2:	; 0 bytes @ 0x0
?_ModZgCW2:	; 0 bytes @ 0x0
?_ModDkCW2:	; 0 bytes @ 0x0
?_IncConstCW2:	; 0 bytes @ 0x0
?_IncMaxCW2:	; 0 bytes @ 0x0
?_ModPruCW2:	; 0 bytes @ 0x0
?_ModPrzCW2:	; 0 bytes @ 0x0
?_PropCO2:	; 0 bytes @ 0x0
?_StartMCO3:	; 0 bytes @ 0x0
?_ModToCO3:	; 0 bytes @ 0x0
?_ModToCW3:	; 0 bytes @ 0x0
?_StartCO4:	; 0 bytes @ 0x0
?_ReadDataCO4:	; 0 bytes @ 0x0
?_ModToCO4:	; 0 bytes @ 0x0
?_IncConstCOCW4:	; 0 bytes @ 0x0
?_StartMCW4:	; 0 bytes @ 0x0
?_ReadDataCW4:	; 0 bytes @ 0x0
?_ModToCW4:	; 0 bytes @ 0x0
?_ModZgCW4:	; 0 bytes @ 0x0
?_ModDkCW4:	; 0 bytes @ 0x0
?_IncMaxCW4:	; 0 bytes @ 0x0
?_ModPruCW4:	; 0 bytes @ 0x0
?_ModPrzCW4:	; 0 bytes @ 0x0
?_PropCO4:	; 0 bytes @ 0x0
?_Tnizsza:	; 1 bit 
?_Tmaleje:	; 1 bit 
?_Tstoi:	; 1 bit 
?_Twyzsza:	; 1 bit 
?_Trowna:	; 1 bit 
?_Trosnie:	; 1 bit 
?_FirstPCW2:	; 0 bytes @ 0x0
?_TFrosnie:	; 1 bit 
?_TFmaleje:	; 1 bit 
?_TFstoi:	; 1 bit 
?_SetTpKtParam:	; 0 bytes @ 0x0
?_SetPFN:	; 0 bytes @ 0x0
?_KolProc:	; 0 bytes @ 0x0
??_KolProc:	; 0 bytes @ 0x0
?_SetPrWswData:	; 0 bytes @ 0x0
??_SetPrWswData:	; 0 bytes @ 0x0
?_FormatWswData:	; 0 bytes @ 0x0
?_PrintWswData:	; 0 bytes @ 0x0
??_PrintWswData:	; 0 bytes @ 0x0
?_Swbty:	; 0 bytes @ 0x0
??_Swbty:	; 0 bytes @ 0x0
?_Rwbty:	; 0 bytes @ 0x0
??_Rwbty:	; 0 bytes @ 0x0
?_InitAC:	; 0 bytes @ 0x0
?_InitI2C:	; 0 bytes @ 0x0
?_I2CSlaveTR:	; 0 bytes @ 0x0
?_FormatDataIMY:	; 0 bytes @ 0x0
?_ISR:	; 0 bytes @ 0x0
?_main:	; 0 bytes @ 0x0
?_NastawaCOCW:	; 0 bytes @ 0x0
?_GrzejON:	; 0 bytes @ 0x0
?_KeyRes:	; 1 bit 
?_VZPauza:	; 0 bytes @ 0x0
?_StartTim1:	; 0 bytes @ 0x0
?_PmrTim1:	; 1 bit 
?_StartTim2:	; 0 bytes @ 0x0
?_PmrTim2:	; 1 bit 
?_GoldenEye:	; 0 bytes @ 0x0
?_PredkoscZmianCW:	; 0 bytes @ 0x0
?_FltParMod:	; 0 bytes @ 0x0
?_SetModPCO:	; 0 bytes @ 0x0
?_WritePCO:	; 0 bytes @ 0x0
?_WritePCW:	; 0 bytes @ 0x0
?_SetModPCW:	; 0 bytes @ 0x0
?_WritePFN:	; 0 bytes @ 0x0
?_RefStan:	; 0 bytes @ 0x0
?_FrsStan:	; 0 bytes @ 0x0
?_WriteOPWM:	; 0 bytes @ 0x0
?_MocStart:	; 0 bytes @ 0x0
?_MocMaksCO:	; 0 bytes @ 0x0
?_MocMaksCW:	; 0 bytes @ 0x0
?_ClrMod:	; 0 bytes @ 0x0
?_ClrMod4:	; 0 bytes @ 0x0
?_ClrMod2:	; 0 bytes @ 0x0
?_SetNST:	; 0 bytes @ 0x0
??_SetNDatCHK:	; 0 bytes @ 0x0
?_RglPmp1:	; 0 bytes @ 0x0
?_RglPmp2:	; 0 bytes @ 0x0
?i2_RefStan:	; 0 bytes @ 0x0
??i2_RefStan:	; 0 bytes @ 0x0
?i2_RdPrt:	; 1 bit 
??i2_RdPrt:	; 0 bytes @ 0x0
?_LiczCHK:	; 1 bytes @ 0x0
?_RTM:	; 1 bytes @ 0x0
?_RTG:	; 1 bytes @ 0x0
?_RTdS:	; 1 bytes @ 0x0
?_RTS:	; 1 bytes @ 0x0
?_ReadEEPFN:	; 1 bytes @ 0x0
?_FirstPCW:	; 1 bytes @ 0x0
?_VerifyNDatCHK:	; 1 bytes @ 0x0
?_ReadAC:	; 1 bytes @ 0x0
?_ReadTabNTC:	; 1 bytes @ 0x0
?_ReturnACfromNTC:	; 1 bytes @ 0x0
?_ReadTabZNTC:	; 1 bytes @ 0x0
?_GetPGD_PCO:	; 1 bytes @ 0x0
?_SetNDatCHK:	; 1 bytes @ 0x0
?_ProcToPmpPwm:	; 1 bytes @ 0x0
?_ModPmp1:	; 1 bytes @ 0x0
?_RetKrkDelta:	; 1 bytes @ 0x0
?_ModPmp2:	; 1 bytes @ 0x0
	global	?___lbmod
?___lbmod:	; 1 bytes @ 0x0
	global	?i2___lbdiv
?i2___lbdiv:	; 1 bytes @ 0x0
NastawaCOCW@one:	; 1 bytes @ 0x0
	global	IncRTimer@i
IncRTimer@i:	; 1 bytes @ 0x0
	global	Swbty@mask
Swbty@mask:	; 1 bytes @ 0x0
	global	Rwbty@mask
Rwbty@mask:	; 1 bytes @ 0x0
	global	IncKeyTimer@i
IncKeyTimer@i:	; 1 bytes @ 0x0
	global	___lbmod@divisor
___lbmod@divisor:	; 1 bytes @ 0x0
	global	i2___lbdiv@divisor
i2___lbdiv@divisor:	; 1 bytes @ 0x0
	ds   1
??___lbmod:	; 0 bytes @ 0x1
??i2___lbdiv:	; 0 bytes @ 0x1
	global	SetPrWswData@i
SetPrWswData@i:	; 1 bytes @ 0x1
	global	Swbty@dtd
Swbty@dtd:	; 1 bytes @ 0x1
	global	Rwbty@dtd
Rwbty@dtd:	; 1 bytes @ 0x1
	global	___lbmod@dividend
___lbmod@dividend:	; 1 bytes @ 0x1
	global	i2_RefStan$2769
i2_RefStan$2769:	; 1 bytes @ 0x1
	global	i2RdPrt@Index
i2RdPrt@Index:	; 1 bytes @ 0x1
	global	i2___lbdiv@dividend
i2___lbdiv@dividend:	; 1 bytes @ 0x1
	ds   1
??_SetTData:	; 0 bytes @ 0x2
	global	?_BitSet
?_BitSet:	; 0 bytes @ 0x2
	global	SetNDatCHK@Data
SetNDatCHK@Data:	; 1 bytes @ 0x2
	global	___lbmod@counter
___lbmod@counter:	; 1 bytes @ 0x2
	global	i2_RefStan$2770
i2_RefStan$2770:	; 1 bytes @ 0x2
	global	i2___lbdiv@counter
i2___lbdiv@counter:	; 1 bytes @ 0x2
	global	BitSet@data
BitSet@data:	; 2 bytes @ 0x2
	ds   1
	global	SetNDatCHK@a
SetNDatCHK@a:	; 1 bytes @ 0x3
	global	___lbmod@rem
___lbmod@rem:	; 1 bytes @ 0x3
	global	i2_RefStan$2771
i2_RefStan$2771:	; 1 bytes @ 0x3
	global	i2___lbdiv@quotient
i2___lbdiv@quotient:	; 1 bytes @ 0x3
	ds   1
??_StabPort:	; 0 bytes @ 0x4
??_FormatWswData:	; 0 bytes @ 0x4
	global	BitSet@nbit
BitSet@nbit:	; 1 bytes @ 0x4
	global	SetNDatCHK@b
SetNDatCHK@b:	; 1 bytes @ 0x4
	global	PrintWswData@j
PrintWswData@j:	; 1 bytes @ 0x4
	ds   1
	global	BitSet@bt
BitSet@bt:	; 1 bytes @ 0x5
	global	LiczCHK@chk
LiczCHK@chk:	; 1 bytes @ 0x5
	global	SetNDatCHK@d
SetNDatCHK@d:	; 1 bytes @ 0x5
	global	PrintWswData@k
PrintWswData@k:	; 1 bytes @ 0x5
	ds   1
??_VerifyNDatCHK:	; 0 bytes @ 0x6
??_BitSet:	; 0 bytes @ 0x6
	global	LiczCHK@NBTI2C
LiczCHK@NBTI2C:	; 1 bytes @ 0x6
	global	StabPort@delay
StabPort@delay:	; 1 bytes @ 0x6
	global	VerifyNDatCHK@Data
VerifyNDatCHK@Data:	; 1 bytes @ 0x6
	global	PrintWswData@i
PrintWswData@i:	; 1 bytes @ 0x6
	ds   1
??_IntUSARTRC:	; 0 bytes @ 0x7
	global	LiczCHK@i
LiczCHK@i:	; 1 bytes @ 0x7
	global	StabPort@i
StabPort@i:	; 1 bytes @ 0x7
	ds   1
??_ReceptDataI2C:	; 0 bytes @ 0x8
??_I2CSlaveTR:	; 0 bytes @ 0x8
	ds   1
??_FormatDataIMY:	; 0 bytes @ 0x9
	global	_FormatDataIMY$1098
_FormatDataIMY$1098:	; 2 bytes @ 0x9
	ds   2
	global	_FormatDataIMY$1065
_FormatDataIMY$1065:	; 1 bytes @ 0xB
	global	KolProc@l
KolProc@l:	; 1 bytes @ 0xB
	ds   1
	global	_FormatDataIMY$1099
_FormatDataIMY$1099:	; 1 bytes @ 0xC
	global	KolProc@nC
KolProc@nC:	; 1 bytes @ 0xC
	ds   1
	global	_FormatDataIMY$1100
_FormatDataIMY$1100:	; 1 bytes @ 0xD
	global	KolProc@k
KolProc@k:	; 1 bytes @ 0xD
	ds   1
	global	_FormatDataIMY$1101
_FormatDataIMY$1101:	; 1 bytes @ 0xE
	global	KolProc@i
KolProc@i:	; 1 bytes @ 0xE
	ds   1
	global	_FormatDataIMY$1102
_FormatDataIMY$1102:	; 1 bytes @ 0xF
	global	KolProc@j
KolProc@j:	; 1 bytes @ 0xF
	ds   1
??_RefreshWSW:	; 0 bytes @ 0x10
	global	_FormatDataIMY$1103
_FormatDataIMY$1103:	; 1 bytes @ 0x10
	ds   1
	global	_FormatDataIMY$1104
_FormatDataIMY$1104:	; 1 bytes @ 0x11
	ds   1
	global	_FormatDataIMY$1105
_FormatDataIMY$1105:	; 1 bytes @ 0x12
	ds   1
??_ISR:	; 0 bytes @ 0x13
	ds   10
??_RdPrt:	; 0 bytes @ 0x1D
??_InitOsc:	; 0 bytes @ 0x1D
??_InitGlobal:	; 0 bytes @ 0x1D
??_InitTimer1:	; 0 bytes @ 0x1D
??_InitPWM:	; 0 bytes @ 0x1D
??_InitUart:	; 0 bytes @ 0x1D
??_InitDataPmr:	; 0 bytes @ 0x1D
??_ClearData:	; 0 bytes @ 0x1D
??_ClsScr:	; 0 bytes @ 0x1D
??_StartRTS:	; 0 bytes @ 0x1D
??_WritePWM2:	; 0 bytes @ 0x1D
	global	?_SetPrt
?_SetPrt:	; 0 bytes @ 0x1D
??_StartRTG:	; 0 bytes @ 0x1D
??_RTM:	; 0 bytes @ 0x1D
??_RTG:	; 0 bytes @ 0x1D
??_StartRTM:	; 0 bytes @ 0x1D
??_Busy_eep:	; 0 bytes @ 0x1D
	global	?_Write_b_eep
?_Write_b_eep:	; 0 bytes @ 0x1D
??_StartRTdS:	; 0 bytes @ 0x1D
??_RTdS:	; 0 bytes @ 0x1D
??_SetErr:	; 0 bytes @ 0x1D
??_SetMsg:	; 0 bytes @ 0x1D
??_RTS:	; 0 bytes @ 0x1D
??_ToObiegCW:	; 0 bytes @ 0x1D
??_ToObiegCO:	; 0 bytes @ 0x1D
??_RestartMod:	; 0 bytes @ 0x1D
??_WritePWM:	; 0 bytes @ 0x1D
??_SetL3:	; 0 bytes @ 0x1D
??_GrzejOFF:	; 0 bytes @ 0x1D
??_WswOff:	; 0 bytes @ 0x1D
??_AllKolToFirstPoz:	; 0 bytes @ 0x1D
??_WswOn:	; 0 bytes @ 0x1D
	global	?_SetData
?_SetData:	; 0 bytes @ 0x1D
	global	?_SetStatus
?_SetStatus:	; 0 bytes @ 0x1D
	global	?_SetPoz
?_SetPoz:	; 0 bytes @ 0x1D
??_ResetKol:	; 0 bytes @ 0x1D
??_RestartKol:	; 0 bytes @ 0x1D
??_Swsdid:	; 0 bytes @ 0x1D
??_Rwsdid:	; 0 bytes @ 0x1D
??_ReadDataCO:	; 0 bytes @ 0x1D
??_ModToCO:	; 0 bytes @ 0x1D
??_IncConstCOCW:	; 0 bytes @ 0x1D
??_ReadDataCW:	; 0 bytes @ 0x1D
??_ModToCW:	; 0 bytes @ 0x1D
??_ReadDataCO2:	; 0 bytes @ 0x1D
??_ModToCO2:	; 0 bytes @ 0x1D
??_IncConstCO2:	; 0 bytes @ 0x1D
??_ReadDataCW2:	; 0 bytes @ 0x1D
??_ModToCW2:	; 0 bytes @ 0x1D
??_ModToCO3:	; 0 bytes @ 0x1D
??_ReadDataCO4:	; 0 bytes @ 0x1D
??_ModToCO4:	; 0 bytes @ 0x1D
??_IncConstCOCW4:	; 0 bytes @ 0x1D
??_ReadDataCW4:	; 0 bytes @ 0x1D
??_ModToCW4:	; 0 bytes @ 0x1D
??_Tnizsza:	; 0 bytes @ 0x1D
??_Tmaleje:	; 0 bytes @ 0x1D
??_Tstoi:	; 0 bytes @ 0x1D
??_Twyzsza:	; 0 bytes @ 0x1D
??_Trowna:	; 0 bytes @ 0x1D
??_Trosnie:	; 0 bytes @ 0x1D
??_FirstPCW2:	; 0 bytes @ 0x1D
??_TFrosnie:	; 0 bytes @ 0x1D
??_TFmaleje:	; 0 bytes @ 0x1D
??_TFstoi:	; 0 bytes @ 0x1D
??_SetTpKtParam:	; 0 bytes @ 0x1D
??_SetPFN:	; 0 bytes @ 0x1D
??_InitAC:	; 0 bytes @ 0x1D
??_ReadAC:	; 0 bytes @ 0x1D
??_InitI2C:	; 0 bytes @ 0x1D
??_GrzejON:	; 0 bytes @ 0x1D
??_StartTim1:	; 0 bytes @ 0x1D
??_PmrTim1:	; 0 bytes @ 0x1D
??_StartTim2:	; 0 bytes @ 0x1D
??_PmrTim2:	; 0 bytes @ 0x1D
??_PredkoscZmianCW:	; 0 bytes @ 0x1D
??_SetModPCO:	; 0 bytes @ 0x1D
??_SetModPCW:	; 0 bytes @ 0x1D
??_RefStan:	; 0 bytes @ 0x1D
??_FrsStan:	; 0 bytes @ 0x1D
??_ClrMod:	; 0 bytes @ 0x1D
??_ClrMod4:	; 0 bytes @ 0x1D
??_ClrMod2:	; 0 bytes @ 0x1D
	global	?_StartKeyTim
?_StartKeyTim:	; 0 bytes @ 0x1D
	global	?_ResBufKeyEx
?_ResBufKeyEx:	; 0 bytes @ 0x1D
	global	?_WaitToLowEx
?_WaitToLowEx:	; 0 bytes @ 0x1D
	global	?_Read_b_eep
?_Read_b_eep:	; 1 bytes @ 0x1D
	global	?_RetMax
?_RetMax:	; 1 bytes @ 0x1D
	global	?_RetDelta1
?_RetDelta1:	; 1 bytes @ 0x1D
	global	?_RetDelta2
?_RetDelta2:	; 1 bytes @ 0x1D
	global	?_RetDelta3
?_RetDelta3:	; 1 bytes @ 0x1D
	global	?_KeyTim
?_KeyTim:	; 1 bytes @ 0x1D
	global	?___lbdiv
?___lbdiv:	; 1 bytes @ 0x1D
	global	?___lwmod
?___lwmod:	; 2 bytes @ 0x1D
	global	?___wmul
?___wmul:	; 2 bytes @ 0x1D
	global	?___aldiv
?___aldiv:	; 4 bytes @ 0x1D
	global	?___lmul
?___lmul:	; 4 bytes @ 0x1D
	global	PmrTim1@tm
PmrTim1@tm:	; 1 bytes @ 0x1D
	global	PmrTim2@tm
PmrTim2@tm:	; 1 bytes @ 0x1D
	global	PredkoscZmianCW@w
PredkoscZmianCW@w:	; 1 bytes @ 0x1D
	global	SetPrt@nw
SetPrt@nw:	; 1 bytes @ 0x1D
	global	SetErr@kod
SetErr@kod:	; 1 bytes @ 0x1D
	global	SetMsg@kod
SetMsg@kod:	; 1 bytes @ 0x1D
	global	WritePWM@tpwm
WritePWM@tpwm:	; 1 bytes @ 0x1D
	global	WritePWM2@tpwm
WritePWM2@tpwm:	; 1 bytes @ 0x1D
	global	Trosnie@t
Trosnie@t:	; 1 bytes @ 0x1D
	global	Tnizsza@t
Tnizsza@t:	; 1 bytes @ 0x1D
	global	TFrosnie@t
TFrosnie@t:	; 1 bytes @ 0x1D
	global	StartRTdS@Index
StartRTdS@Index:	; 1 bytes @ 0x1D
	global	RTdS@Index
RTdS@Index:	; 1 bytes @ 0x1D
	global	StartRTS@Index
StartRTS@Index:	; 1 bytes @ 0x1D
	global	RTS@Index
RTS@Index:	; 1 bytes @ 0x1D
	global	StartRTM@Index
StartRTM@Index:	; 1 bytes @ 0x1D
	global	RTM@Index
RTM@Index:	; 1 bytes @ 0x1D
	global	StartRTG@Index
StartRTG@Index:	; 1 bytes @ 0x1D
	global	RTG@Index
RTG@Index:	; 1 bytes @ 0x1D
	global	RetMax@b
RetMax@b:	; 1 bytes @ 0x1D
	global	RetDelta1@hi
RetDelta1@hi:	; 1 bytes @ 0x1D
	global	RetDelta2@ddlt
RetDelta2@ddlt:	; 1 bytes @ 0x1D
	global	RetDelta3@lo
RetDelta3@lo:	; 1 bytes @ 0x1D
	global	Swsdid@dtd
Swsdid@dtd:	; 1 bytes @ 0x1D
	global	Rwsdid@dtd
Rwsdid@dtd:	; 1 bytes @ 0x1D
	global	SetPoz@nrpoz
SetPoz@nrpoz:	; 1 bytes @ 0x1D
	global	ResetKol@nrkol
ResetKol@nrkol:	; 1 bytes @ 0x1D
	global	RestartKol@nrkol
RestartKol@nrkol:	; 1 bytes @ 0x1D
	global	AllKolToFirstPoz@j
AllKolToFirstPoz@j:	; 1 bytes @ 0x1D
	global	___lbdiv@divisor
___lbdiv@divisor:	; 1 bytes @ 0x1D
	global	SetData@wData
SetData@wData:	; 2 bytes @ 0x1D
	global	SetStatus@wData
SetStatus@wData:	; 2 bytes @ 0x1D
	global	StartKeyTim@ky
StartKeyTim@ky:	; 2 bytes @ 0x1D
	global	KeyTim@ky
KeyTim@ky:	; 2 bytes @ 0x1D
	global	ResBufKeyEx@ky
ResBufKeyEx@ky:	; 2 bytes @ 0x1D
	global	WaitToLowEx@ky
WaitToLowEx@ky:	; 2 bytes @ 0x1D
	global	Read_b_eep@badd
Read_b_eep@badd:	; 2 bytes @ 0x1D
	global	Write_b_eep@badd
Write_b_eep@badd:	; 2 bytes @ 0x1D
	global	___lwmod@dividend
___lwmod@dividend:	; 2 bytes @ 0x1D
	global	___wmul@multiplier
___wmul@multiplier:	; 2 bytes @ 0x1D
	global	___aldiv@dividend
___aldiv@dividend:	; 4 bytes @ 0x1D
	global	___lmul@multiplier
___lmul@multiplier:	; 4 bytes @ 0x1D
	ds   1
??_PwrOnDelay:	; 0 bytes @ 0x1E
??_EndClsScr:	; 0 bytes @ 0x1E
??_EnKonf:	; 0 bytes @ 0x1E
??_DecRozruch:	; 0 bytes @ 0x1E
??_FunkcjaSerwisowa:	; 0 bytes @ 0x1E
??_ZmienKCOKCW:	; 0 bytes @ 0x1E
??_VWybieg:	; 0 bytes @ 0x1E
??_ReloadPlomien:	; 0 bytes @ 0x1E
??_RuszPlomien:	; 0 bytes @ 0x1E
??_ReloadCiag:	; 0 bytes @ 0x1E
??_Proba48:	; 0 bytes @ 0x1E
??_Rusz48:	; 0 bytes @ 0x1E
??_Proba48Z3:	; 0 bytes @ 0x1E
??_Rusz48Z3:	; 0 bytes @ 0x1E
??_BlokadaL3:	; 0 bytes @ 0x1E
??_Blokada15S:	; 0 bytes @ 0x1E
??_SetPrt:	; 0 bytes @ 0x1E
??_EndNst:	; 0 bytes @ 0x1E
??_EndErr:	; 0 bytes @ 0x1E
	global	?_SetDiode
?_SetDiode:	; 0 bytes @ 0x1E
??_SetRozruch:	; 0 bytes @ 0x1E
??_EndL3:	; 0 bytes @ 0x1E
??_SetPoz:	; 0 bytes @ 0x1E
??_StartCO:	; 0 bytes @ 0x1E
??_IncMaxCO:	; 0 bytes @ 0x1E
??_IncMaxCW:	; 0 bytes @ 0x1E
??_StartCO2:	; 0 bytes @ 0x1E
??_StartMCW2:	; 0 bytes @ 0x1E
??_IncConstCW2:	; 0 bytes @ 0x1E
??_IncMaxCW2:	; 0 bytes @ 0x1E
??_StartMCO3:	; 0 bytes @ 0x1E
??_ModToCW3:	; 0 bytes @ 0x1E
??_StartCO4:	; 0 bytes @ 0x1E
??_StartMCW4:	; 0 bytes @ 0x1E
??_IncMaxCW4:	; 0 bytes @ 0x1E
??_VZPauza:	; 0 bytes @ 0x1E
??_RetMax:	; 0 bytes @ 0x1E
??_RetDelta1:	; 0 bytes @ 0x1E
??_RetDelta2:	; 0 bytes @ 0x1E
??_RetDelta3:	; 0 bytes @ 0x1E
??___lbdiv:	; 0 bytes @ 0x1E
	global	ReadAC@chanel
ReadAC@chanel:	; 1 bytes @ 0x1E
	global	PredkoscZmianCW@i
PredkoscZmianCW@i:	; 1 bytes @ 0x1E
	global	_RefStan$2769
_RefStan$2769:	; 1 bytes @ 0x1E
	global	RdPrt@Index
RdPrt@Index:	; 1 bytes @ 0x1E
	global	SetDiode@stn
SetDiode@stn:	; 1 bytes @ 0x1E
	global	RetDelta1@pco
RetDelta1@pco:	; 1 bytes @ 0x1E
	global	RetDelta2@eco
RetDelta2@eco:	; 1 bytes @ 0x1E
	global	RetDelta3@pco
RetDelta3@pco:	; 1 bytes @ 0x1E
	global	___lbdiv@dividend
___lbdiv@dividend:	; 1 bytes @ 0x1E
	ds   1
??_Read_b_eep:	; 0 bytes @ 0x1F
??_RefInterfaceData:	; 0 bytes @ 0x1F
??_DecSTR:	; 0 bytes @ 0x1F
??_KolejkaPobudzen:	; 0 bytes @ 0x1F
??_Wylacz:	; 0 bytes @ 0x1F
??_DetekcjaPrzeplywuWG:	; 0 bytes @ 0x1F
??_SetDiode:	; 0 bytes @ 0x1F
??_ReadEEPFN:	; 0 bytes @ 0x1F
??_ReadTabNTC:	; 0 bytes @ 0x1F
??_ReturnACfromNTC:	; 0 bytes @ 0x1F
??_ReadTabZNTC:	; 0 bytes @ 0x1F
??_KeyRes:	; 0 bytes @ 0x1F
??_FltParMod:	; 0 bytes @ 0x1F
	global	?_ModParam
?_ModParam:	; 0 bytes @ 0x1F
??_StartKeyTim:	; 0 bytes @ 0x1F
??_KeyTim:	; 0 bytes @ 0x1F
??_ResBufKeyEx:	; 0 bytes @ 0x1F
??_WaitToLowEx:	; 0 bytes @ 0x1F
	global	?_PresKeyEX
?_PresKeyEX:	; 1 bytes @ 0x1F
	global	?_ExxPresKey
?_ExxPresKey:	; 1 bytes @ 0x1F
	global	ReadTabNTC@zrAC
ReadTabNTC@zrAC:	; 1 bytes @ 0x1F
	global	ReturnACfromNTC@data
ReturnACfromNTC@data:	; 1 bytes @ 0x1F
	global	ReadTabZNTC@zrAC
ReadTabZNTC@zrAC:	; 1 bytes @ 0x1F
	global	_KolejkaPobudzen$2077
_KolejkaPobudzen$2077:	; 1 bytes @ 0x1F
	global	FltParMod@wr
FltParMod@wr:	; 1 bytes @ 0x1F
	global	_RefStan$2770
_RefStan$2770:	; 1 bytes @ 0x1F
	global	SetPrt@Index
SetPrt@Index:	; 1 bytes @ 0x1F
	global	SetDiode@wd
SetDiode@wd:	; 1 bytes @ 0x1F
	global	ModParam@tpg
ModParam@tpg:	; 1 bytes @ 0x1F
	global	RetMax@a
RetMax@a:	; 1 bytes @ 0x1F
	global	RetDelta2@kD
RetDelta2@kD:	; 1 bytes @ 0x1F
	global	SetData@wdt1
SetData@wdt1:	; 1 bytes @ 0x1F
	global	Write_b_eep@bdat
Write_b_eep@bdat:	; 1 bytes @ 0x1F
	global	___lbdiv@counter
___lbdiv@counter:	; 1 bytes @ 0x1F
	global	SetStatus@wst
SetStatus@wst:	; 2 bytes @ 0x1F
	global	PresKeyEX@ky
PresKeyEX@ky:	; 2 bytes @ 0x1F
	global	ExxPresKey@ky
ExxPresKey@ky:	; 2 bytes @ 0x1F
	global	___lwmod@divisor
___lwmod@divisor:	; 2 bytes @ 0x1F
	global	___wmul@multiplicand
___wmul@multiplicand:	; 2 bytes @ 0x1F
	ds   1
??_RestartFltPrt:	; 0 bytes @ 0x20
??_DecWylacz:	; 0 bytes @ 0x20
??_Write_b_eep:	; 0 bytes @ 0x20
??_SetWylacz:	; 0 bytes @ 0x20
??_ModParam:	; 0 bytes @ 0x20
	global	?_RetMin
?_RetMin:	; 1 bytes @ 0x20
	global	ReadTabNTC@data
ReadTabNTC@data:	; 1 bytes @ 0x20
	global	ReturnACfromNTC@bdta
ReturnACfromNTC@bdta:	; 1 bytes @ 0x20
	global	ReadTabZNTC@data
ReadTabZNTC@data:	; 1 bytes @ 0x20
	global	_RefInterfaceData$2069
_RefInterfaceData$2069:	; 1 bytes @ 0x20
	global	_KolejkaPobudzen$2078
_KolejkaPobudzen$2078:	; 1 bytes @ 0x20
	global	DetekcjaPrzeplywuWG@pmp
DetekcjaPrzeplywuWG@pmp:	; 1 bytes @ 0x20
	global	_RefStan$2771
_RefStan$2771:	; 1 bytes @ 0x20
	global	Tmaleje@t
Tmaleje@t:	; 1 bytes @ 0x20
	global	Twyzsza@t
Twyzsza@t:	; 1 bytes @ 0x20
	global	TFmaleje@t
TFmaleje@t:	; 1 bytes @ 0x20
	global	RetMin@b
RetMin@b:	; 1 bytes @ 0x20
	global	SetData@wdt0
SetData@wdt0:	; 1 bytes @ 0x20
	global	Write_b_eep@GIE_BIT_VAL
Write_b_eep@GIE_BIT_VAL:	; 1 bytes @ 0x20
	global	___lbdiv@quotient
___lbdiv@quotient:	; 1 bytes @ 0x20
	ds   1
??_InitPort:	; 0 bytes @ 0x21
??_DecyzjaAntyLeg:	; 0 bytes @ 0x21
??_ToReset:	; 0 bytes @ 0x21
??_WriteEEPCO:	; 0 bytes @ 0x21
??_WriteEEPCW:	; 0 bytes @ 0x21
??_WriteEEPFN:	; 0 bytes @ 0x21
??_SetData:	; 0 bytes @ 0x21
??_ModPruCO:	; 0 bytes @ 0x21
??_ModPrzCO:	; 0 bytes @ 0x21
??_ModPruCW:	; 0 bytes @ 0x21
??_ModPruCW2:	; 0 bytes @ 0x21
??_ModPrzCW2:	; 0 bytes @ 0x21
??_ModPruCW4:	; 0 bytes @ 0x21
??_WritePCO:	; 0 bytes @ 0x21
??_WritePCW:	; 0 bytes @ 0x21
??_WritePFN:	; 0 bytes @ 0x21
??_ModPmp1:	; 0 bytes @ 0x21
??_RetMin:	; 0 bytes @ 0x21
??_PresKeyEX:	; 0 bytes @ 0x21
??___lwmod:	; 0 bytes @ 0x21
??___wmul:	; 0 bytes @ 0x21
	global	_RefInterfaceData$2070
_RefInterfaceData$2070:	; 1 bytes @ 0x21
	global	KolejkaPobudzen@wr
KolejkaPobudzen@wr:	; 1 bytes @ 0x21
	global	DetekcjaPrzeplywuWG@prz
DetekcjaPrzeplywuWG@prz:	; 1 bytes @ 0x21
	global	ModParam@tpk
ModParam@tpk:	; 1 bytes @ 0x21
	global	ExxPresKey@dTim
ExxPresKey@dTim:	; 1 bytes @ 0x21
	global	___lwmod@counter
___lwmod@counter:	; 1 bytes @ 0x21
	global	ReadTabNTC@i
ReadTabNTC@i:	; 2 bytes @ 0x21
	global	ReturnACfromNTC@i
ReturnACfromNTC@i:	; 2 bytes @ 0x21
	global	ReadTabZNTC@i
ReadTabZNTC@i:	; 2 bytes @ 0x21
	global	SetStatus@mask
SetStatus@mask:	; 2 bytes @ 0x21
	global	___wmul@product
___wmul@product:	; 2 bytes @ 0x21
	global	___aldiv@divisor
___aldiv@divisor:	; 4 bytes @ 0x21
	global	___lmul@multiplicand
___lmul@multiplicand:	; 4 bytes @ 0x21
	ds   1
??_PomiarPFN:	; 0 bytes @ 0x22
	global	_RefInterfaceData$2071
_RefInterfaceData$2071:	; 1 bytes @ 0x22
	global	RetMin@a
RetMin@a:	; 1 bytes @ 0x22
	global	SetPoz@nrkol
SetPoz@nrkol:	; 1 bytes @ 0x22
	global	ExxPresKey@pTim
ExxPresKey@pTim:	; 1 bytes @ 0x22
	ds   1
??_PomiarCO:	; 0 bytes @ 0x23
??_PomiarCW:	; 0 bytes @ 0x23
??_PomiarZW:	; 0 bytes @ 0x23
??_PomiarCS:	; 0 bytes @ 0x23
??_PomiarPCW:	; 0 bytes @ 0x23
??_PomiarIN:	; 0 bytes @ 0x23
??_SetStatus:	; 0 bytes @ 0x23
??_SetNST:	; 0 bytes @ 0x23
??_ExxPresKey:	; 0 bytes @ 0x23
??___awdiv:	; 0 bytes @ 0x23
??___lwdiv:	; 0 bytes @ 0x23
	global	?_RetHI
?_RetHI:	; 1 bytes @ 0x23
	global	?_RetLO
?_RetLO:	; 1 bytes @ 0x23
	global	_RefInterfaceData$2072
_RefInterfaceData$2072:	; 1 bytes @ 0x23
	global	GoldenEye@pop
GoldenEye@pop:	; 1 bytes @ 0x23
	global	RetHI@eco
RetHI@eco:	; 1 bytes @ 0x23
	global	RetLO@eco
RetLO@eco:	; 1 bytes @ 0x23
	global	___lwdiv@counter
___lwdiv@counter:	; 1 bytes @ 0x23
	ds   1
??_InitWsw:	; 0 bytes @ 0x24
??_TestScr:	; 0 bytes @ 0x24
??_EndTestScr:	; 0 bytes @ 0x24
	global	?_PrintErr
?_PrintErr:	; 0 bytes @ 0x24
??_PrintNstCW:	; 0 bytes @ 0x24
??_PrintNstCO:	; 0 bytes @ 0x24
	global	?_PrintErrTm
?_PrintErrTm:	; 0 bytes @ 0x24
	global	?_PrintErrCs
?_PrintErrCs:	; 0 bytes @ 0x24
??_PrintOFF:	; 0 bytes @ 0x24
??_EndOFF:	; 0 bytes @ 0x24
??_PrintCS:	; 0 bytes @ 0x24
??_EndCS:	; 0 bytes @ 0x24
??_PrintCW:	; 0 bytes @ 0x24
??_EndCW:	; 0 bytes @ 0x24
??_PrintCO:	; 0 bytes @ 0x24
??_PrintL3:	; 0 bytes @ 0x24
	global	_RefInterfaceData$2073
_RefInterfaceData$2073:	; 1 bytes @ 0x24
	global	GoldenEye@dt
GoldenEye@dt:	; 1 bytes @ 0x24
	global	PrintErr@pls
PrintErr@pls:	; 1 bytes @ 0x24
	global	PrintErrCs@cs
PrintErrCs@cs:	; 1 bytes @ 0x24
	global	PrintErrTm@tm
PrintErrTm@tm:	; 1 bytes @ 0x24
	global	PrintNstCW@nst
PrintNstCW@nst:	; 1 bytes @ 0x24
	global	PrintNstCO@nst
PrintNstCO@nst:	; 1 bytes @ 0x24
	global	PrintCS@cs
PrintCS@cs:	; 1 bytes @ 0x24
	global	PrintCW@tm
PrintCW@tm:	; 1 bytes @ 0x24
	global	PrintCO@tm
PrintCO@tm:	; 1 bytes @ 0x24
	global	RetHI@max
RetHI@max:	; 1 bytes @ 0x24
	global	RetLO@min
RetLO@min:	; 1 bytes @ 0x24
	global	InitWsw@i
InitWsw@i:	; 1 bytes @ 0x24
	global	PresKeyEX@k
PresKeyEX@k:	; 1 bytes @ 0x24
	global	___lwdiv@quotient
___lwdiv@quotient:	; 2 bytes @ 0x24
	ds   1
??_PrintErr:	; 0 bytes @ 0x25
??_PomiarPCO:	; 0 bytes @ 0x25
??_TrybPracy:	; 0 bytes @ 0x25
??_FiltrPomiarowyCOCW:	; 0 bytes @ 0x25
??_StartMCW:	; 0 bytes @ 0x25
??_RetDelta4:	; 0 bytes @ 0x25
??_RetKrkDelta:	; 0 bytes @ 0x25
??___aldiv:	; 0 bytes @ 0x25
??___lmul:	; 0 bytes @ 0x25
	global	?_RetDelta
?_RetDelta:	; 1 bytes @ 0x25
	global	_RefInterfaceData$2074
_RefInterfaceData$2074:	; 1 bytes @ 0x25
	global	PrintErr@kod
PrintErr@kod:	; 1 bytes @ 0x25
	global	PrintErrCs@pls
PrintErrCs@pls:	; 1 bytes @ 0x25
	global	PrintErrTm@pls
PrintErrTm@pls:	; 1 bytes @ 0x25
	global	RetDelta@eco
RetDelta@eco:	; 1 bytes @ 0x25
	global	ExxPresKey@k
ExxPresKey@k:	; 1 bytes @ 0x25
	ds   1
??_RdEEParam:	; 0 bytes @ 0x26
??_ErrPTG:	; 0 bytes @ 0x26
??_DecWSW:	; 0 bytes @ 0x26
??_DecERR:	; 0 bytes @ 0x26
??_RglPmp:	; 0 bytes @ 0x26
??_PrintErrTm:	; 0 bytes @ 0x26
??_PrintErrCs:	; 0 bytes @ 0x26
??_DecyzjaPLM:	; 0 bytes @ 0x26
??_DecyzjaPLM2:	; 0 bytes @ 0x26
??_PropOPT:	; 0 bytes @ 0x26
??_PropCO:	; 0 bytes @ 0x26
??_PropCO2:	; 0 bytes @ 0x26
??_PropCO4:	; 0 bytes @ 0x26
??_MocStart:	; 0 bytes @ 0x26
??_MocMaksCO:	; 0 bytes @ 0x26
??_MocMaksCW:	; 0 bytes @ 0x26
??_ProcToPmpPwm:	; 0 bytes @ 0x26
??_RetDelta:	; 0 bytes @ 0x26
;!
;!Data Sizes:
;!    Strings     0
;!    Constant    174
;!    Data        0
;!    BSS         737
;!    Persistent  0
;!    Stack       0
;!
;!Auto Spaces:
;!    Space          Size  Autos    Used
;!    COMRAM           95     38      66
;!    BANK0           160     13     160
;!    BANK1           256      3     256
;!    BANK2           256     15     255
;!    BANK3           256     18      88
;!    BANK4           256      0       0
;!    BANK5           256      0       0
;!    BANK6           256      0       0
;!    BANK7           256      0       0
;!    BANK8           256      0       0
;!    BANK9           256      0       0
;!    BANK10          256      0       0
;!    BANK11          256      0       0
;!    BANK12          256      0       0
;!    BANK13          256      0       0
;!    BANK14          256      0       0
;!    BANK15           96      0       0

;!
;!Pointer List with Targets:
;!
;!    ?___lwmod	unsigned int  size(2) Largest target is 35
;!		 -> PFN(BANK1[35]), 
;!
;!    ?___lwdiv	unsigned int  size(1) Largest target is 0
;!
;!    ?___awdiv	int  size(1) Largest target is 0
;!
;!    ?___aldiv	long  size(1) Largest target is 0
;!
;!    ?___lmul	unsigned long  size(1) Largest target is 0
;!
;!    ?___wmul	unsigned int  size(1) Largest target is 0
;!
;!    ReadParam@zapis	PTR unsigned char  size(2) Largest target is 1
;!		 -> zps(BANK1[1]), 
;!
;!    ReadParam@zmiana	PTR unsigned char  size(1) Largest target is 1
;!		 -> zmn(COMRAM[1]), 
;!
;!    ReadParam@param	PTR unsigned int  size(2) Largest target is 35
;!		 -> PFN(BANK1[35]), 
;!
;!    ReadDataXONLID@ovf	PTR unsigned char  size(2) Largest target is 1
;!		 -> ReadParam@ovd(BANK3[1]), ReadParam@ovi(BANK3[1]), 
;!
;!    ReadDataXONLID@dt	PTR unsigned int  size(2) Largest target is 35
;!		 -> PFN(BANK1[35]), 
;!
;!    ReadDataXONLID@ky	PTR struct . size(2) Largest target is 35
;!		 -> xxky(BANK2[35]), 
;!
;!    ExxPresKey@ky	PTR struct . size(2) Largest target is 35
;!		 -> xxky(BANK2[35]), 
;!
;!    WaitToLowEx@ky	PTR struct . size(2) Largest target is 35
;!		 -> ky(BANK2[35]), 
;!
;!    ResBufKeyEx@ky	PTR struct . size(2) Largest target is 35
;!		 -> ky(BANK2[35]), 
;!
;!    PresKeyEX@ky	PTR struct . size(2) Largest target is 35
;!		 -> ky(BANK2[35]), 
;!
;!    KeyTim@ky	PTR struct . size(2) Largest target is 35
;!		 -> xxky(BANK2[35]), ky(BANK2[35]), 
;!
;!    StartKeyTim@ky	PTR struct . size(2) Largest target is 35
;!		 -> xxky(BANK2[35]), ky(BANK2[35]), 
;!
;!    SetStatus@wData	PTR struct . size(2) Largest target is 40
;!		 -> PWD(BANK2[40]), DWD(BANK2[28]), 
;!
;!    SetData@wData	PTR struct . size(2) Largest target is 40
;!		 -> PWD(BANK2[40]), DWD(BANK2[28]), 
;!
;!    Klj.KL.KAP.PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK2[28]), 
;!
;!    Klj.KL.KOut.CAdr	PTR struct . size(2) Largest target is 40
;!		 -> PWD(BANK2[40]), 
;!
;!    Klj.KL.KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    Klj.KL.KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 
;!
;!    Klj.KL.KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    Klj.KL.KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    Klj.KL.KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    S4920$KL	PTR const struct . size(1) Largest target is 15
;!		 -> KL3(CODE[6]), KL2(CODE[6]), KL1(CODE[6]), KL0(CODE[6]), 
;!
;!    Klj.KL	PTR const struct . size(1) Largest target is 15
;!		 -> KL3(CODE[6]), KL2(CODE[6]), KL1(CODE[6]), KL0(CODE[6]), 
;!
;!    KL3.KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    KL3.KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 
;!
;!    KL3.KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    KL3.KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    KL3.KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    KL2.KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    KL2.KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 
;!
;!    KL2.KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    KL2.KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    KL2.KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    KL1.KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    KL1.KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 
;!
;!    KL1.KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    KL1.KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    KL1.KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    S4914$KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    KL0.KOut	PTR const struct . size(1) Largest target is 5
;!		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 
;!
;!    S4914$KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 
;!
;!    KL0.KFc	PTR struct . size(2) Largest target is 2
;!		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 
;!
;!    S4914$KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    KL0.KFP	PTR const struct . size(1) Largest target is 4
;!		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 
;!
;!    S4914$KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    KL0.KWP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 
;!
;!    S4914$KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    KL0.KAP	PTR const struct . size(1) Largest target is 6
;!		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 
;!
;!    KL3_OUT.CAdr	PTR struct . size(2) Largest target is 40
;!		 -> PWD(BANK2[40]), 
;!
;!    KL2_OUT.CAdr	PTR struct . size(2) Largest target is 40
;!		 -> PWD(BANK2[40]), 
;!
;!    KL1_OUT.CAdr	PTR struct . size(2) Largest target is 40
;!		 -> PWD(BANK2[40]), 
;!
;!    S4910$CAdr	PTR struct . size(2) Largest target is 40
;!		 -> PWD(BANK2[40]), 
;!
;!    KL0_OUT.CAdr	PTR struct . size(2) Largest target is 40
;!		 -> PWD(BANK2[40]), 
;!
;!    KL3_AP.PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK2[28]), 
;!
;!    KL2_AP.PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK2[28]), 
;!
;!    KL1_AP.PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK2[28]), 
;!
;!    S4901$PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK2[28]), 
;!
;!    KL0_AP.PAdr	PTR struct . size(2) Largest target is 28
;!		 -> DWD(BANK2[28]), 
;!
;!    BitSet@data	PTR unsigned char  size(2) Largest target is 23
;!		 -> DtI2C(BANK1[23]), 
;!


;!
;!Critical Paths under _main in COMRAM
;!
;!    _main->_PrintErr
;!    _main->_RefInterfaceData
;!    _main->_TrybPracy
;!    _main->_FiltrPomiarowyCOCW
;!    _InitPort->_RefStan
;!    _InitWsw->_SetStatus
;!    _TestScr->_SetStatus
;!    _PwrOnDelay->_StartRTdS
;!    _PwrOnDelay->_RTdS
;!    _EndTestScr->_SetStatus
;!    _EndClsScr->_AllKolToFirstPoz
;!    _EnKonf->_StartRTS
;!    _PomiarIN->_ReadTabNTC
;!    _RestartFltPrt->_SetPrt
;!    _TrybPracy->_PresKeyEX
;!    _FiltrPomiarowyCOCW->_GoldenEye
;!    _DecWSW->_PrintErr
;!    _DecWSW->_PrintErrTm
;!    _DecWSW->_PrintErrCs
;!    _DecERR->_PrintErr
;!    _DecSTR->_RdPrt
;!    _FunkcjaSerwisowa->_StartRTM
;!    _FunkcjaSerwisowa->_RTM
;!    _DecyzjaAntyLeg->_Write_b_eep
;!    _KolejkaPobudzen->_RdPrt
;!    _Rozruch->_PrintErr
;!    _ReloadPlomien->_RTdS
;!    _RuszPlomien->_StartRTS
;!    _RuszPlomien->_RTS
;!    _RuszPlomien->_StartRTdS
;!    _ReloadCiag->_RTM
;!    _ReloadCiag->_RTS
;!    _RuszCiag->_PrintErr
;!    _BlokadaL3->_StartRTM
;!    _BlokadaL3->_RTM
;!    _Blokada15S->_StartRTdS
;!    _Blokada15S->_RTdS
;!    _Moduluj->_ModPruCO
;!    _Moduluj->_ModPrzCO
;!    _Moduluj->_ModPruCW
;!    _Moduluj->_ModPruCW2
;!    _Moduluj->_ModPruCW4
;!    _DetekcjaPrzeplywuWG->_RdPrt
;!    _OczekujNaPrzeplywWG->_PrintErr
;!    _EndNst->_ResetKol
;!    _PrintNstCW->_SetStatus
;!    _PrintNstCO->_SetStatus
;!    _PrintErrTm->_SetStatus
;!    _PrintErrCs->_SetStatus
;!    _PrintOFF->_SetStatus
;!    _EndOFF->_SetStatus
;!    _PrintCS->_SetStatus
;!    _EndCS->_SetStatus
;!    _PrintCW->_SetStatus
;!    _EndCW->_SetStatus
;!    _PrintCO->_SetStatus
;!    _PrintL3->_SetStatus
;!    _SetDiode->_Swsdid
;!    _SetDiode->_Rwsdid
;!    _EndL3->_ResetKol
;!    _SetWylacz->_SetPrt
;!    _DecyzjaPLM->_PrintErr
;!    _DecyzjaPLM2->_PrintErr
;!    _PrintErr->_SetStatus
;!    _ErrPTG->_RefInterfaceData
;!    _PomiarCO->_ReadTabNTC
;!    _PomiarCW->_ReadTabNTC
;!    _ReadTabNTC->_Read_b_eep
;!    _PomiarCS->___wmul
;!    _PomiarPCW->_ReturnACfromNTC
;!    _ReturnACfromNTC->_Read_b_eep
;!    _PomiarPFN->_WritePFN
;!    _RefInterfaceData->_RdPrt
;!    _ZmienKCOKCW->_StartRTdS
;!    _ZmienKCOKCW->_RTdS
;!    _Wylacz->_RdPrt
;!    _VWybieg->_StartRTS
;!    _VWybieg->_RTS
;!    _Proba48->_StartRTG
;!    _Proba48->_RTG
;!    _Rusz48->_StartRTS
;!    _Rusz48->_RTS
;!    _Proba48Z3->_StartRTG
;!    _Proba48Z3->_RTG
;!    _Rusz48Z3->_StartRTS
;!    _Rusz48Z3->_RTS
;!    _KeyRes->_RdPrt
;!    _VZPauza->_StartRTS
;!    _VZPauza->_RTS
;!    _ToReset->_Write_b_eep
;!    _EndErr->_ResetKol
;!    _GoldenEye->___wmul
;!    _FltParMod->_PredkoscZmianCW
;!    _GetPGD_PCO->___lmul
;!    _GetPGD_PCO->___aldiv
;!    _WriteEEPCO->_Write_b_eep
;!    _WriteEEPCW->_Write_b_eep
;!    _WriteEEPFN->_Write_b_eep
;!    _ReadEEPFN->_Read_b_eep
;!    _ModParam->_Read_b_eep
;!    _MocStart->___lwdiv
;!    _MocMaksCO->___lwdiv
;!    _MocMaksCW->___lwdiv
;!    _StartCO->_StartRTdS
;!    _ModZgCO->___aldiv
;!    _ModZgCO->___lmul
;!    _ModDkCO->___wmul
;!    _IncMaxCO->_Trosnie
;!    _ModPruCO->_Tmaleje
;!    _ModPrzCO->_Twyzsza
;!    _ModZgCW->___aldiv
;!    _ModZgCW->___lmul
;!    _ModDkCW->___wmul
;!    _IncMaxCW->_Trosnie
;!    _ModPruCW->_Twyzsza
;!    _ModPruCW->_Tmaleje
;!    _StartCO2->_StartRTdS
;!    _StartMCW2->_StartRTdS
;!    _ModZgCW2->___aldiv
;!    _ModZgCW2->___lmul
;!    _ModDkCW2->___wmul
;!    _IncConstCW2->_TFrosnie
;!    _IncMaxCW2->_Trosnie
;!    _IncMaxCW2->_TFrosnie
;!    _ModPruCW2->_TFmaleje
;!    _ModPruCW2->_Twyzsza
;!    _ModPruCW2->_Tmaleje
;!    _ModPrzCW2->_Tmaleje
;!    _ModPrzCW2->_Twyzsza
;!    _ModPrzCW2->_TFmaleje
;!    _StartMCO3->_StartRTdS
;!    _ModToCW3->_Tnizsza
;!    _StartCO4->_StartRTdS
;!    _StartMCW4->_StartRTdS
;!    _ModZgCW4->___aldiv
;!    _ModZgCW4->___lmul
;!    _ModDkCW4->___wmul
;!    _IncMaxCW4->_Trosnie
;!    _ModPruCW4->_Twyzsza
;!    _ModPruCW4->_Tmaleje
;!    _ModPrzCW4->___lwdiv
;!    _WriteOPWM->___lwdiv
;!    _FirstPCW->___aldiv
;!    _FirstPCW->___lmul
;!    _PomiarZW->_ReadTabZNTC
;!    _ReadTabZNTC->_Read_b_eep
;!    _RglPmp1->_ModPmp1
;!    _ModPmp1->_Twyzsza
;!    _ProcToPmpPwm->___lwdiv
;!    _ModPmp2->_RetDelta
;!    _RetKrkDelta->_RetHI
;!    _RetKrkDelta->_RetLO
;!    _RetDelta4->_RetHI
;!    _RetDelta4->_RetLO
;!    _RetMin->_RetMax
;!    _PresKeyEX->_StartKeyTim
;!    _PresKeyEX->_KeyTim
;!    _PresKeyEX->_RdPrt
;!    _ReadDataXONLID->_ExxPresKey
;!    _ExxPresKey->_StartKeyTim
;!    _ExxPresKey->_KeyTim
;!    ___awdiv->___wmul
;!    ___lwdiv->___wmul
;!
;!Critical Paths under _ISR in COMRAM
;!
;!    _ISR->_FormatDataIMY
;!    _I2CSlaveTR->_LiczCHK
;!    _SetTData->i2_RdPrt
;!    _ReceptDataI2C->_LiczCHK
;!    _FormatDataIMY->_BitSet
;!    _BitSet->i2_RdPrt
;!    _IntUSARTRC->_VerifyNDatCHK
;!    _RefreshWSW->_KolProc
;!    _StabPort->i2_RefStan
;!    _VerifyNDatCHK->_SetNDatCHK
;!    _FormatWswData->i2___lbdiv
;!    _FormatWswData->___lbmod
;!
;!Critical Paths under _main in BANK0
;!
;!    _main->_DecERR
;!    _main->_OczekujNaPrzeplywWG
;!    _RdEEParam->_MocStart
;!    _RdEEParam->_MocMaksCW
;!    _RdEEParam->_MocMaksCO
;!    _FiltrPomiarowyCOCW->_GoldenEye
;!    _DecWSW->_NastawaCOCW
;!    _Moduluj->_ModPrzCW
;!    _NastawaCOCW->_ReadParam
;!    _ReadParam->_ReadDataXONLID
;!    _ErrPTG->_PomiarCS
;!    _PomiarCS->___awdiv
;!    _PomiarPCO->_GetPGD_PCO
;!    _GetPGD_PCO->___aldiv
;!    _MocStart->___awdiv
;!    _MocMaksCO->___awdiv
;!    _MocMaksCW->___awdiv
;!    _ModZgCO->___aldiv
;!    _PropOPT->_WriteOPWM
;!    _StartMCW->_FirstPCW
;!    _ModZgCW->___aldiv
;!    _ModPrzCW->___awdiv
;!    _PropCO->_WriteOPWM
;!    _ModZgCW2->___aldiv
;!    _PropCO2->_WriteOPWM
;!    _ModZgCW4->___aldiv
;!    _ModPrzCW4->___lwdiv
;!    _PropCO4->_WriteOPWM
;!    _WriteOPWM->___lwdiv
;!    _FirstPCW->___awdiv
;!    _RglPmp1->_ProcToPmpPwm
;!    _ProcToPmpPwm->___lwdiv
;!    _ModPmp2->_RetHI
;!    _ModPmp2->_RetLO
;!    _RetKrkDelta->_RetHI
;!    _RetKrkDelta->_RetLO
;!    _RetHI->___awdiv
;!    _RetLO->___awdiv
;!    _RetDelta4->_RetHI
;!    _RetDelta4->_RetLO
;!
;!Critical Paths under _ISR in BANK0
;!
;!    None.
;!
;!Critical Paths under _main in BANK1
;!
;!    _main->_DecWSW
;!    _RetKrkDelta->_RetDelta4
;!
;!Critical Paths under _ISR in BANK1
;!
;!    None.
;!
;!Critical Paths under _main in BANK2
;!
;!    _RglPmp->_RglPmp2
;!    _ReadParam->_ReadDataXONLID
;!    _PomiarPCO->_GetPGD_PCO
;!    _StartMCW->_FirstPCW
;!    _ModPmp2->_RetDelta
;!    _RetDelta->_RetKrkDelta
;!    _RetKrkDelta->_RetDelta4
;!    _RetDelta4->_RetHI
;!    _RetDelta4->_RetLO
;!
;!Critical Paths under _ISR in BANK2
;!
;!    None.
;!
;!Critical Paths under _main in BANK3
;!
;!    _NastawaCOCW->_ReadParam
;!    _RglPmp2->_ModPmp2
;!
;!Critical Paths under _ISR in BANK3
;!
;!    None.
;!
;!Critical Paths under _main in BANK4
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK4
;!
;!    None.
;!
;!Critical Paths under _main in BANK5
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK5
;!
;!    None.
;!
;!Critical Paths under _main in BANK6
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK6
;!
;!    None.
;!
;!Critical Paths under _main in BANK7
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK7
;!
;!    None.
;!
;!Critical Paths under _main in BANK8
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK8
;!
;!    None.
;!
;!Critical Paths under _main in BANK9
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK9
;!
;!    None.
;!
;!Critical Paths under _main in BANK10
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK10
;!
;!    None.
;!
;!Critical Paths under _main in BANK11
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK11
;!
;!    None.
;!
;!Critical Paths under _main in BANK12
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK12
;!
;!    None.
;!
;!Critical Paths under _main in BANK13
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK13
;!
;!    None.
;!
;!Critical Paths under _main in BANK14
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK14
;!
;!    None.
;!
;!Critical Paths under _main in BANK15
;!
;!    None.
;!
;!Critical Paths under _ISR in BANK15
;!
;!    None.

;;
;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
;;

;!
;!Call Graph Tables:
;!
;! ---------------------------------------------------------------------------------
;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
;! ---------------------------------------------------------------------------------
;! (0) _main                                                 3     3      0  165884
;!                                             14 BANK2      1     1      0
;!                                             16 BANK3      2     2      0
;!                            _InitOsc
;!                         _InitGlobal
;!                         _InitTimer1
;!                           _InitPort
;!                             _InitAC
;!                            _InitWsw
;!                            _InitPWM
;!                            _InitI2C
;!                           _InitUart
;!                        _InitDataPmr
;!                          _ClearData
;!                            _TestScr
;!                         _PwrOnDelay
;!                         _EndTestScr
;!                             _ClsScr
;!                          _EndClsScr
;!                          _RdEEParam
;!                             _EnKonf
;!                         _Read_b_eep
;!                           _PrintErr
;!                             _ErrPTG
;!                           _PomiarCO
;!                           _PomiarCW
;!                           _PomiarZW
;!                           _PomiarCS
;!                          _PomiarPCO
;!                          _PomiarPCW
;!                          _PomiarPFN
;!                           _PomiarIN
;!                   _RefInterfaceData
;!                              _RdPrt
;!                      _RestartFltPrt
;!                           _StartRTS
;!                          _WritePWM2
;!                          _TrybPracy
;!                 _FiltrPomiarowyCOCW
;!                             _DecWSW
;!                             _DecERR
;!                             _DecSTR
;!                         _DecRozruch
;!                          _DecWylacz
;!                   _FunkcjaSerwisowa
;!                     _DecyzjaAntyLeg
;!                    _KolejkaPobudzen
;!                             _RglPmp
;!                        _ZmienKCOKCW
;!                             _Wylacz
;!                            _Rozruch
;!                            _VWybieg
;!                      _ReloadPlomien
;!                        _RuszPlomien
;!                         _ReloadCiag
;!                           _RuszCiag
;!                            _Proba48
;!                             _Rusz48
;!                          _Proba48Z3
;!                           _Rusz48Z3
;!                          _BlokadaL3
;!                         _Blokada15S
;!                            _Moduluj
;!                _DetekcjaPrzeplywuWG
;!                _OczekujNaPrzeplywWG
;! ---------------------------------------------------------------------------------
;! (1) _InitAC                                               0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitI2C                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitOsc                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitGlobal                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitTimer1                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitPort                                             0     0      0     111
;!                            _RefStan
;!                            _FrsStan
;! ---------------------------------------------------------------------------------
;! (1) _InitWsw                                              1     1      0    1902
;!                                             36 COMRAM     1     1      0
;!                          _SetStatus
;! ---------------------------------------------------------------------------------
;! (1) _InitPWM                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitUart                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _InitDataPmr                                          0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _ClearData                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (1) _TestScr                                              0     0      0    2154
;!                          _SetStatus
;!                            _SetData
;!                           _SetDiode
;! ---------------------------------------------------------------------------------
;! (1) _PwrOnDelay                                           1     1      0     210
;!                                             30 COMRAM     1     1      0
;!                          _StartRTdS
;!                               _RTdS
;! ---------------------------------------------------------------------------------
;! (1) _EndTestScr                                           0     0      0    2154
;!                          _SetStatus
;!                            _SetData
;!                           _SetDiode
;! ---------------------------------------------------------------------------------
;! (1) _ClsScr                                               0     0      0       0
;!                             _WswOff
;! ---------------------------------------------------------------------------------
;! (1) _EndClsScr                                            0     0      0     161
;!                   _AllKolToFirstPoz
;!                              _WswOn
;! ---------------------------------------------------------------------------------
;! (1) _RdEEParam                                            0     0      0    3757
;!                         _Read_b_eep
;!                       _SetTpKtParam
;!                           _ModParam
;!                           _MocStart
;!                          _MocMaksCW
;!                          _MocMaksCO
;!                             _SetPFN
;!                             _SetNST
;!                           _Busy_eep
;!                        _Write_b_eep
;! ---------------------------------------------------------------------------------
;! (1) _EnKonf                                               0     0      0      93
;!                           _StartRTS
;! ---------------------------------------------------------------------------------
;! (1) _PomiarIN                                             0     0      0     390
;!                             _ReadAC
;!                         _ReadTabNTC
;! ---------------------------------------------------------------------------------
;! (1) _RestartFltPrt                                        0     0      0     124
;!                             _SetPrt
;! ---------------------------------------------------------------------------------
;! (1) _TrybPracy                                            7     7      0    2967
;!                                             37 COMRAM     1     1      0
;!                                              0 BANK0      6     6      0
;!                              _RdPrt
;!                          _PresKeyEX
;!                        _WaitToLowEx
;!                        _ResBufKeyEx
;!                             _SetPrt
;!                          _StartRTdS
;!                         _RestartKol
;!                               _RTdS
;! ---------------------------------------------------------------------------------
;! (1) _FiltrPomiarowyCOCW                                   1     1      0    2157
;!                                             37 COMRAM     1     1      0
;!                            _PmrTim1
;!                          _StartTim1
;!                          _GoldenEye
;!                            _PmrTim2
;!                          _StartTim2
;!                          _FltParMod
;! ---------------------------------------------------------------------------------
;! (1) _DecWSW                                               3     3      0   35142
;!                                              0 BANK1      3     3      0
;!                        _NastawaCOCW
;!                           _PrintErr
;!                         _PrintErrTm
;!                         _PrintErrCs
;!                             _EndErr
;!                           _PrintOFF
;!                             _EndOFF
;!                            _PrintCS
;!                              _EndCS
;!                            _PrintCW
;!                              _EndCW
;!                            _PrintCO
;!                            _PrintL3
;!                           _SetDiode
;! ---------------------------------------------------------------------------------
;! (1) _DecERR                                               4     4      0   10874
;!                                             10 BANK0      3     3      0
;!                              _RdPrt
;!                             _SetErr
;!                             _ErrPTG
;!                             _EndErr
;!                             _SetMsg
;!                           _StartRTS
;!                           _PrintErr
;! ---------------------------------------------------------------------------------
;! (1) _DecSTR                                               1     1      0     177
;!                                             31 COMRAM     1     1      0
;!                                _RTS
;!                              _RdPrt
;!                          _ToObiegCW
;!                          _ToObiegCO
;!                         _RestartMod
;!                           _WritePWM
;! ---------------------------------------------------------------------------------
;! (1) _DecRozruch                                           0     0      0      84
;!                         _SetRozruch
;! ---------------------------------------------------------------------------------
;! (1) _DecWylacz                                            0     0      0     208
;!                          _SetWylacz
;!                              _RdPrt
;!                              _SetL3
;! ---------------------------------------------------------------------------------
;! (1) _FunkcjaSerwisowa                                     1     1      0     155
;!                                             30 COMRAM     1     1      0
;!                           _StartRTM
;!                                _RTM
;! ---------------------------------------------------------------------------------
;! (1) _DecyzjaAntyLeg                                       1     1      0     440
;!                                             33 COMRAM     1     1      0
;!                           _StartRTG
;!                                _RTM
;!                                _RTG
;!                           _StartRTM
;!                           _Busy_eep
;!                        _Write_b_eep
;! ---------------------------------------------------------------------------------
;! (1) _KolejkaPobudzen                                      3     3      0     252
;!                                             31 COMRAM     3     3      0
;!                              _RdPrt
;! ---------------------------------------------------------------------------------
;! (1) _RglPmp                                               0     0      0   10680
;!                            _RglPmp1
;!                            _RglPmp2
;!                           _StartRTS
;!                       _ProcToPmpPwm
;!                          _WritePWM2
;! ---------------------------------------------------------------------------------
;! (1) _Rozruch                                              1     1      0   31521
;!                                             10 BANK0      1     1      0
;!                           _StartRTS
;!                                _RTS
;!                              _RdPrt
;!                           _PrintErr
;!                             _ErrPTG
;!                           _WritePWM
;!                            _GrzejON
;!                         _DecyzjaPLM
;!                        _DecyzjaPLM2
;! ---------------------------------------------------------------------------------
;! (1) _ReloadPlomien                                        1     1      0      84
;!                                             30 COMRAM     1     1      0
;!                               _RTdS
;! ---------------------------------------------------------------------------------
;! (1) _RuszPlomien                                          1     1      0     281
;!                                             30 COMRAM     1     1      0
;!                           _StartRTS
;!                                _RTS
;!                          _StartRTdS
;! ---------------------------------------------------------------------------------
;! (1) _ReloadCiag                                           1     1      0     124
;!                                             30 COMRAM     1     1      0
;!                                _RTM
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (1) _RuszCiag                                             1     1      0   10783
;!                                             10 BANK0      1     1      0
;!                           _StartRTS
;!                           _StartRTM
;!                                _RTS
;!                                _RTM
;!                           _PrintErr
;!                             _ErrPTG
;!                              _RdPrt
;! ---------------------------------------------------------------------------------
;! (1) _BlokadaL3                                            1     1      0     239
;!                                             30 COMRAM     1     1      0
;!                           _StartRTM
;!                              _SetL3
;!                              _EndL3
;!                                _RTM
;! ---------------------------------------------------------------------------------
;! (1) _Blokada15S                                           1     1      0     210
;!                                             30 COMRAM     1     1      0
;!                          _StartRTdS
;!                               _RTdS
;! ---------------------------------------------------------------------------------
;! (1) _Moduluj                                              1     1      0   19118
;!                                              0 BANK1      1     1      0
;!                            _StartCO
;!                         _ReadDataCO
;!                            _ModToCO
;!                            _ModZgCO
;!                            _ModDkCO
;!                               _RTdS
;!                          _StartRTdS
;!                       _IncConstCOCW
;!                           _IncMaxCO
;!                           _ModPruCO
;!                           _ModPrzCO
;!                            _PropOPT
;!                           _StartMCW
;!                         _ReadDataCW
;!                            _ModToCW
;!                            _ModZgCW
;!                            _ModDkCW
;!                           _IncMaxCW
;!                           _ModPruCW
;!                           _ModPrzCW
;!                             _PropCO
;!                           _StartCO2
;!                        _ReadDataCO2
;!                           _ModToCO2
;!                        _IncConstCO2
;!                          _StartMCW2
;!                        _ReadDataCW2
;!                           _ModToCW2
;!                           _ModZgCW2
;!                           _ModDkCW2
;!                        _IncConstCW2
;!                          _IncMaxCW2
;!                          _ModPruCW2
;!                          _ModPrzCW2
;!                            _PropCO2
;!                          _StartMCO3
;!                           _ModToCO3
;!                           _ModToCW3
;!                           _StartCO4
;!                        _ReadDataCO4
;!                           _ModToCO4
;!                      _IncConstCOCW4
;!                          _StartMCW4
;!                        _ReadDataCW4
;!                           _ModToCW4
;!                           _ModZgCW4
;!                           _ModDkCW4
;!                          _IncMaxCW4
;!                          _ModPruCW4
;!                          _ModPrzCW4
;!                            _PropCO4
;! ---------------------------------------------------------------------------------
;! (1) _DetekcjaPrzeplywuWG                                  3     3      0     377
;!                                             31 COMRAM     3     3      0
;!                              _RdPrt
;!                           _StartRTS
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (1) _OczekujNaPrzeplywWG                                  3     3      0   10724
;!                                             10 BANK0      3     3      0
;!                              _RdPrt
;!                           _StartRTS
;!                                _RTS
;!                           _PrintErr
;!                             _ErrPTG
;! ---------------------------------------------------------------------------------
;! (2) _RTM                                                  1     1      0      62
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _StartRTM                                             1     1      0      93
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _NastawaCOCW                                          2     2      0   12414
;!                                             10 BANK0      1     1      0
;!                          _StartRTdS
;!                             _EndNst
;!                         _PrintNstCW
;!                         _PrintNstCO
;!                               _RTdS
;!                              _RdPrt
;!                          _ReadParam
;! ---------------------------------------------------------------------------------
;! (3) _EndNst                                               0     0      0      84
;!                           _ResetKol
;! ---------------------------------------------------------------------------------
;! (3) _PrintNstCW                                           1     1      0    2100
;!                                             36 COMRAM     1     1      0
;!                            _SetData
;!                          _SetStatus
;!                         _RestartKol
;! ---------------------------------------------------------------------------------
;! (3) _PrintNstCO                                           1     1      0    2100
;!                                             36 COMRAM     1     1      0
;!                            _SetData
;!                          _SetStatus
;!                         _RestartKol
;! ---------------------------------------------------------------------------------
;! (3) _ReadParam                                           20     9     11    7836
;!                                              6 BANK0      4     4      0
;!                                              0 BANK3     16     5     11
;!                              _RdPrt
;!                     _ReadDataXONLID
;!                               _RTdS
;!                          _StartRTdS
;! ---------------------------------------------------------------------------------
;! (2) _PrintErrTm                                           3     1      2    2310
;!                                             36 COMRAM     2     0      2
;!                                              0 BANK0      1     1      0
;!                            _SetData
;!                          _SetStatus
;!                             _SetPoz
;! ---------------------------------------------------------------------------------
;! (2) _PrintErrCs                                           3     1      2    2310
;!                                             36 COMRAM     2     0      2
;!                                              0 BANK0      1     1      0
;!                            _SetData
;!                          _SetStatus
;!                             _SetPoz
;! ---------------------------------------------------------------------------------
;! (2) _PrintOFF                                             0     0      0    1932
;!                          _SetStatus
;!                            _SetData
;! ---------------------------------------------------------------------------------
;! (2) _EndOFF                                               0     0      0    1764
;!                          _SetStatus
;! ---------------------------------------------------------------------------------
;! (2) _PrintCS                                              1     1      0    1974
;!                                             36 COMRAM     1     1      0
;!                          _SetStatus
;!                            _SetData
;! ---------------------------------------------------------------------------------
;! (2) _EndCS                                                0     0      0    1764
;!                          _SetStatus
;! ---------------------------------------------------------------------------------
;! (2) _PrintCW                                              1     1      0    1974
;!                                             36 COMRAM     1     1      0
;!                          _SetStatus
;!                            _SetData
;! ---------------------------------------------------------------------------------
;! (2) _EndCW                                                0     0      0    1764
;!                          _SetStatus
;! ---------------------------------------------------------------------------------
;! (2) _PrintCO                                              1     1      0    1974
;!                                             36 COMRAM     1     1      0
;!                          _SetStatus
;!                            _SetData
;! ---------------------------------------------------------------------------------
;! (2) _PrintL3                                              0     0      0    2184
;!                            _SetData
;!                          _SetStatus
;!                             _SetPoz
;! ---------------------------------------------------------------------------------
;! (2) _SetDiode                                             2     1      1     222
;!                                             30 COMRAM     2     1      1
;!                             _Swsdid
;!                             _Rwsdid
;! ---------------------------------------------------------------------------------
;! (2) _SetErr                                               1     1      0      31
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _SetMsg                                               1     1      0      31
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _RestartMod                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _SetRozruch                                           0     0      0      84
;!                              _EndL3
;! ---------------------------------------------------------------------------------
;! (2) _EndL3                                                0     0      0      84
;!                           _ResetKol
;! ---------------------------------------------------------------------------------
;! (2) _SetWylacz                                            0     0      0     124
;!                           _GrzejOFF
;!                          _ToObiegCO
;!                             _SetPrt
;! ---------------------------------------------------------------------------------
;! (2) _SetL3                                                0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _GrzejON                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _DecyzjaPLM                                           0     0      0   10389
;!                           _PrintErr
;!                             _ErrPTG
;! ---------------------------------------------------------------------------------
;! (2) _DecyzjaPLM2                                          0     0      0   10473
;!                           _PrintErr
;!                             _ErrPTG
;!                              _RdPrt
;! ---------------------------------------------------------------------------------
;! (2) _PrintErr                                             2     1      1    2310
;!                                             36 COMRAM     2     1      1
;!                            _SetData
;!                          _SetStatus
;!                             _SetPoz
;! ---------------------------------------------------------------------------------
;! (2) _ErrPTG                                               0     0      0    8079
;!                           _GrzejOFF
;!                            _VZPauza
;!                           _Busy_eep
;!                        _Write_b_eep
;!                           _WritePWM
;!                          _PomiarPCO
;!                          _PomiarPCW
;!                          _PomiarPFN
;!                           _PomiarCO
;!                           _PomiarCW
;!                           _PomiarCS
;!                            _Proba48
;!                          _Proba48Z3
;!                   _RefInterfaceData
;!                              _RdPrt
;!                          _ToObiegCO
;!                          _ToObiegCW
;!                        _ZmienKCOKCW
;!                             _Wylacz
;!                            _VWybieg
;!                             _Rusz48
;!                           _Rusz48Z3
;!                             _KeyRes
;!                            _ToReset
;! ---------------------------------------------------------------------------------
;! (3) _PomiarCO                                             2     2      0     390
;!                                             35 COMRAM     2     2      0
;!                             _ReadAC
;!                         _ReadTabNTC
;! ---------------------------------------------------------------------------------
;! (3) _PomiarCW                                             2     2      0     474
;!                                             35 COMRAM     2     2      0
;!                             _ReadAC
;!                         _ReadTabNTC
;!                              _RdPrt
;! ---------------------------------------------------------------------------------
;! (4) _ReadTabNTC                                           4     4      0     266
;!                                             31 COMRAM     4     4      0
;!                         _Read_b_eep
;! ---------------------------------------------------------------------------------
;! (3) _PomiarCS                                             4     4      0    1358
;!                                             35 COMRAM     2     2      0
;!                                              8 BANK0      2     2      0
;!                             _ReadAC
;!                             ___wmul
;!                            ___awdiv
;! ---------------------------------------------------------------------------------
;! (3) _PomiarPCO                                            0     0      0    1935
;!                          _StartRTdS
;!                           _WritePCO
;!                         _GetPGD_PCO
;!                          _SetModPCO
;!                    _ReturnACfromNTC
;! ---------------------------------------------------------------------------------
;! (3) _PomiarPCW                                            0     0      0     754
;!                          _StartRTdS
;!                           _WritePCW
;!                          _SetModPCW
;!                    _ReturnACfromNTC
;! ---------------------------------------------------------------------------------
;! (4) _ReturnACfromNTC                                      4     4      0     288
;!                                             31 COMRAM     4     4      0
;!                         _Read_b_eep
;! ---------------------------------------------------------------------------------
;! (3) _PomiarPFN                                            0     0      0     528
;!                          _ReadEEPFN
;!                          _StartRTdS
;!                           _WritePFN
;! ---------------------------------------------------------------------------------
;! (3) _RefInterfaceData                                     7     7      0     408
;!                                             31 COMRAM     7     7      0
;!                              _RdPrt
;! ---------------------------------------------------------------------------------
;! (3) _ZmienKCOKCW                                          1     1      0     210
;!                                             30 COMRAM     1     1      0
;!                          _StartRTdS
;!                               _RTdS
;! ---------------------------------------------------------------------------------
;! (3) _Wylacz                                               1     1      0     239
;!                                             31 COMRAM     1     1      0
;!                           _StartRTS
;!                                _RTS
;!                              _RdPrt
;! ---------------------------------------------------------------------------------
;! (3) _VWybieg                                              1     1      0     155
;!                                             30 COMRAM     1     1      0
;!                           _StartRTS
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (3) _Proba48                                              1     1      0     155
;!                                             30 COMRAM     1     1      0
;!                           _StartRTG
;!                                _RTG
;! ---------------------------------------------------------------------------------
;! (3) _Rusz48                                               1     1      0     155
;!                                             30 COMRAM     1     1      0
;!                           _StartRTS
;!                          _ToObiegCO
;!                                _RTS
;!                          _ToObiegCW
;! ---------------------------------------------------------------------------------
;! (3) _Proba48Z3                                            1     1      0     155
;!                                             30 COMRAM     1     1      0
;!                           _StartRTG
;!                                _RTG
;! ---------------------------------------------------------------------------------
;! (3) _Rusz48Z3                                             1     1      0     155
;!                                             30 COMRAM     1     1      0
;!                          _ToObiegCW
;!                           _StartRTS
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (4) _StartRTG                                             1     1      0      93
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (4) _RTG                                                  1     1      0      62
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (4) _ToObiegCW                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (4) _ToObiegCO                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (3) _WritePWM                                             1     1      0      31
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (3) _GrzejOFF                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (3) _KeyRes                                               0     0      0     239
;!                              _RdPrt
;!                           _StartRTS
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (4) _RdPrt                                                2     2      0      84
;!                                             29 COMRAM     2     2      0
;! ---------------------------------------------------------------------------------
;! (3) _VZPauza                                              1     1      0     155
;!                                             30 COMRAM     1     1      0
;!                           _StartRTS
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (3) _ToReset                                              0     0      0     369
;!                             _EndErr
;!                           _Busy_eep
;!                        _Write_b_eep
;!                           _StartRTS
;!                                _RTS
;! ---------------------------------------------------------------------------------
;! (4) _EndErr                                               0     0      0      84
;!                           _ResetKol
;! ---------------------------------------------------------------------------------
;! (2) _StartTim1                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _PmrTim1                                              1     1      0      31
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _StartTim2                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _PmrTim2                                              1     1      0      31
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _GoldenEye                                            7     7      0    1594
;!                                             35 COMRAM     2     2      0
;!                                              0 BANK0      5     5      0
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (2) _FltParMod                                            1     1      0     501
;!                                             31 COMRAM     1     1      0
;!                    _PredkoscZmianCW
;! ---------------------------------------------------------------------------------
;! (3) _PredkoscZmianCW                                      2     2      0     365
;!                                             29 COMRAM     2     2      0
;! ---------------------------------------------------------------------------------
;! (4) _SetModPCO                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (4) _GetPGD_PCO                                           9     9      0    1181
;!                                              6 BANK0      4     4      0
;!                                              0 BANK2      5     5      0
;!                             ___wmul
;!                             ___lmul
;!                            ___aldiv
;! ---------------------------------------------------------------------------------
;! (4) _WritePCO                                             1     1      0     340
;!                                             33 COMRAM     1     1      0
;!                               _RTdS
;!                          _StartRTdS
;!                         _WriteEEPCO
;! ---------------------------------------------------------------------------------
;! (5) _WriteEEPCO                                           0     0      0     130
;!                           _Busy_eep
;!                        _Write_b_eep
;! ---------------------------------------------------------------------------------
;! (4) _WritePCW                                             1     1      0     340
;!                                             33 COMRAM     1     1      0
;!                               _RTdS
;!                          _StartRTdS
;!                         _WriteEEPCW
;! ---------------------------------------------------------------------------------
;! (5) _WriteEEPCW                                           0     0      0     130
;!                           _Busy_eep
;!                        _Write_b_eep
;! ---------------------------------------------------------------------------------
;! (4) _SetModPCW                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (4) _WritePFN                                             1     1      0     340
;!                                             33 COMRAM     1     1      0
;!                               _RTdS
;!                          _StartRTdS
;!                         _WriteEEPFN
;! ---------------------------------------------------------------------------------
;! (5) _WriteEEPFN                                           0     0      0     130
;!                           _Busy_eep
;!                        _Write_b_eep
;! ---------------------------------------------------------------------------------
;! (4) _ReadEEPFN                                            0     0      0      62
;!                         _Read_b_eep
;! ---------------------------------------------------------------------------------
;! (2) _RefStan                                              4     4      0     111
;!                                             29 COMRAM     4     4      0
;! ---------------------------------------------------------------------------------
;! (2) _FrsStan                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _WswOff                                               0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _AllKolToFirstPoz                                     1     1      0     161
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _WswOn                                                0     0      0       0
;! ---------------------------------------------------------------------------------
;! (3) _SetData                                              4     0      4     168
;!                                             29 COMRAM     4     0      4
;! ---------------------------------------------------------------------------------
;! (3) _SetStatus                                            7     1      6    1764
;!                                             29 COMRAM     7     1      6
;! ---------------------------------------------------------------------------------
;! (3) _SetPoz                                               6     5      1     252
;!                                             29 COMRAM     6     5      1
;! ---------------------------------------------------------------------------------
;! (5) _ResetKol                                             1     1      0      84
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (4) _RestartKol                                           1     1      0      84
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (3) _Swsdid                                               1     1      0      48
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (3) _Rwsdid                                               1     1      0      48
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _ModParam                                             3     2      1      93
;!                                             31 COMRAM     3     2      1
;!                         _Read_b_eep (ARG)
;! ---------------------------------------------------------------------------------
;! (2) _MocStart                                             3     3      0     921
;!                                              8 BANK0      3     3      0
;!                             ___wmul
;!                            ___awdiv
;!                            ___lwdiv
;! ---------------------------------------------------------------------------------
;! (2) _MocMaksCO                                            3     3      0     921
;!                                              8 BANK0      3     3      0
;!                             ___wmul
;!                            ___awdiv
;!                            ___lwdiv
;! ---------------------------------------------------------------------------------
;! (2) _MocMaksCW                                            3     3      0     921
;!                                              8 BANK0      3     3      0
;!                             ___wmul
;!                            ___awdiv
;!                            ___lwdiv
;! ---------------------------------------------------------------------------------
;! (2) _StartCO                                              0     0      0     126
;!                          _StartRTdS
;! ---------------------------------------------------------------------------------
;! (2) _ReadDataCO                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _ModToCO                                              0     0      0       0
;!                             _ClrMod
;! ---------------------------------------------------------------------------------
;! (2) _ModZgCO                                             10    10      0    1116
;!                                              6 BANK0      5     5      0
;!                                              0 BANK2      5     5      0
;!                            _Tnizsza
;!                            _Tmaleje
;!                              _Tstoi
;!                             ___wmul
;!                            ___aldiv
;!                             ___lmul
;! ---------------------------------------------------------------------------------
;! (2) _ModDkCO                                             12    12      0     374
;!                                              0 BANK0     12    12      0
;!                            _Twyzsza
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (2) _IncConstCOCW                                         0     0      0       0
;!                              _Tstoi
;! ---------------------------------------------------------------------------------
;! (2) _IncMaxCO                                             6     6      0     220
;!                                             30 COMRAM     6     6      0
;!                            _Trosnie
;! ---------------------------------------------------------------------------------
;! (2) _ModPruCO                                             7     7      0     424
;!                                             33 COMRAM     5     5      0
;!                                              0 BANK0      2     2      0
;!                            _Tmaleje
;!                             _Trowna
;!                            _Trosnie
;! ---------------------------------------------------------------------------------
;! (2) _ModPrzCO                                             6     6      0      96
;!                                             33 COMRAM     5     5      0
;!                                              0 BANK0      1     1      0
;!                            _Twyzsza
;! ---------------------------------------------------------------------------------
;! (2) _PropOPT                                              0     0      0     937
;!                          _WriteOPWM
;! ---------------------------------------------------------------------------------
;! (2) _StartMCW                                             0     0      0    2908
;!                          _StartRTdS
;!                           _FirstPCW
;!                            ___awdiv
;! ---------------------------------------------------------------------------------
;! (2) _ReadDataCW                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _ModToCW                                              0     0      0       0
;!                             _ClrMod
;! ---------------------------------------------------------------------------------
;! (2) _ModZgCW                                             10    10      0    1116
;!                                              6 BANK0      5     5      0
;!                                              0 BANK2      5     5      0
;!                            _Tnizsza
;!                            _Twyzsza
;!                              _Tstoi
;!                             ___wmul
;!                            ___aldiv
;!                             ___lmul
;! ---------------------------------------------------------------------------------
;! (2) _ModDkCW                                             12    12      0     374
;!                                              0 BANK0     12    12      0
;!                             _Trowna
;!                            _Tnizsza
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (2) _IncMaxCW                                             6     6      0     350
;!                                             30 COMRAM     6     6      0
;!                            _Trosnie
;! ---------------------------------------------------------------------------------
;! (2) _ModPruCW                                             7     7      0     599
;!                                             33 COMRAM     5     5      0
;!                                              0 BANK0      2     2      0
;!                            _Tnizsza
;!                              _Tstoi
;!                            _Trosnie
;!                            _Twyzsza
;!                            _Tmaleje
;! ---------------------------------------------------------------------------------
;! (2) _ModPrzCW                                             9     9      0    1726
;!                                              8 BANK0      5     5      0
;!                                              0 BANK2      4     4      0
;!                            _Tnizsza
;!                            ___awdiv
;!                            _Tmaleje
;!                            _Twyzsza
;! ---------------------------------------------------------------------------------
;! (2) _PropCO                                               0     0      0     937
;!                          _WriteOPWM
;! ---------------------------------------------------------------------------------
;! (2) _StartCO2                                             0     0      0     126
;!                          _StartRTdS
;! ---------------------------------------------------------------------------------
;! (2) _ReadDataCO2                                          0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _ModToCO2                                             0     0      0       0
;!                            _ClrMod2
;! ---------------------------------------------------------------------------------
;! (2) _IncConstCO2                                          0     0      0       0
;!                              _Tstoi
;! ---------------------------------------------------------------------------------
;! (2) _StartMCW2                                            0     0      0     126
;!                          _StartRTdS
;!                          _FirstPCW2
;! ---------------------------------------------------------------------------------
;! (2) _ReadDataCW2                                          0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _ModToCW2                                             0     0      0       0
;!                            _ClrMod2
;! ---------------------------------------------------------------------------------
;! (2) _ModZgCW2                                            10    10      0    1085
;!                                              6 BANK0      5     5      0
;!                                              0 BANK2      5     5      0
;!                            _Tnizsza
;!                          _FirstPCW2
;!                             ___wmul
;!                            ___aldiv
;!                             ___lmul
;! ---------------------------------------------------------------------------------
;! (2) _ModDkCW2                                            12    12      0     374
;!                                              0 BANK0     12    12      0
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (2) _IncConstCW2                                          0     0      0      31
;!                           _TFrosnie
;!                              _Tstoi
;! ---------------------------------------------------------------------------------
;! (2) _IncMaxCW2                                            3     3      0     127
;!                                             30 COMRAM     3     3      0
;!                            _Trosnie
;!                           _TFrosnie
;! ---------------------------------------------------------------------------------
;! (2) _ModPruCW2                                            7     7      0     664
;!                                             33 COMRAM     5     5      0
;!                                              0 BANK0      2     2      0
;!                            _Tnizsza
;!                            _Trosnie
;!                           _TFrosnie
;!                           _TFmaleje
;!                             _TFstoi
;!                            _Twyzsza
;!                             _Trowna
;!                              _Tstoi
;!                            _Tmaleje
;! ---------------------------------------------------------------------------------
;! (2) _ModPrzCW2                                            0     0      0     124
;!                            _Tmaleje
;!                            _Twyzsza
;!                              _Tstoi
;!                           _TFmaleje
;!                            _Tnizsza
;! ---------------------------------------------------------------------------------
;! (2) _PropCO2                                              0     0      0     937
;!                          _WriteOPWM
;! ---------------------------------------------------------------------------------
;! (2) _StartMCO3                                            0     0      0     126
;!                          _StartRTdS
;! ---------------------------------------------------------------------------------
;! (2) _ModToCO3                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _ModToCW3                                             5     5      0      31
;!                                             30 COMRAM     5     5      0
;!                            _Tnizsza
;! ---------------------------------------------------------------------------------
;! (2) _StartCO4                                             0     0      0     126
;!                          _StartRTdS
;! ---------------------------------------------------------------------------------
;! (2) _ReadDataCO4                                          0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _ModToCO4                                             0     0      0       0
;!                            _ClrMod4
;! ---------------------------------------------------------------------------------
;! (2) _IncConstCOCW4                                        0     0      0       0
;!                              _Tstoi
;! ---------------------------------------------------------------------------------
;! (2) _StartMCW4                                            0     0      0     126
;!                          _StartRTdS
;! ---------------------------------------------------------------------------------
;! (2) _ReadDataCW4                                          0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _ModToCW4                                             0     0      0       0
;!                            _ClrMod4
;! ---------------------------------------------------------------------------------
;! (2) _ModZgCW4                                            10    10      0    1085
;!                                              6 BANK0      5     5      0
;!                                              0 BANK2      5     5      0
;!                            _Tnizsza
;!                             ___wmul
;!                            ___aldiv
;!                             ___lmul
;! ---------------------------------------------------------------------------------
;! (2) _ModDkCW4                                            12    12      0     374
;!                                              0 BANK0     12    12      0
;!                             ___wmul
;! ---------------------------------------------------------------------------------
;! (2) _IncMaxCW4                                            3     3      0      96
;!                                             30 COMRAM     3     3      0
;!                            _Trosnie
;! ---------------------------------------------------------------------------------
;! (2) _ModPruCW4                                            7     7      0     572
;!                                             33 COMRAM     5     5      0
;!                                              0 BANK0      2     2      0
;!                            _Tnizsza
;!                              _Tstoi
;!                            _Trosnie
;!                            _Twyzsza
;!                            _Tmaleje
;! ---------------------------------------------------------------------------------
;! (2) _ModPrzCW4                                            7     7      0     538
;!                                              4 BANK0      7     7      0
;!                             ___wmul
;!                            ___lwdiv
;!                            _Tmaleje
;!                            _Twyzsza
;!                            _Tnizsza
;!                              _Tstoi
;! ---------------------------------------------------------------------------------
;! (2) _PropCO4                                              0     0      0     937
;!                          _WriteOPWM
;! ---------------------------------------------------------------------------------
;! (3) _WriteOPWM                                            9     9      0     937
;!                                              4 BANK0      9     9      0
;!                             ___wmul
;!                            ___lwdiv
;! ---------------------------------------------------------------------------------
;! (3) _Tmaleje                                              4     4      0      31
;!                                             29 COMRAM     4     4      0
;! ---------------------------------------------------------------------------------
;! (3) _Tstoi                                                0     0      0       0
;! ---------------------------------------------------------------------------------
;! (3) _Trowna                                               0     0      0       0
;! ---------------------------------------------------------------------------------
;! (3) _Trosnie                                              1     1      0      31
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (3) _FirstPCW                                            13    13      0    2337
;!                                              8 BANK0      5     5      0
;!                                              0 BANK2      8     8      0
;!                            ___awdiv
;!                             ___wmul
;!                            ___aldiv
;!                             ___lmul
;! ---------------------------------------------------------------------------------
;! (3) _ClrMod                                               0     0      0       0
;! ---------------------------------------------------------------------------------
;! (3) _ClrMod4                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (3) _FirstPCW2                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (3) _ClrMod2                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (3) _TFrosnie                                             1     1      0      31
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (3) _TFmaleje                                             4     4      0      31
;!                                             29 COMRAM     4     4      0
;! ---------------------------------------------------------------------------------
;! (3) _TFstoi                                               0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _SetTpKtParam                                         0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _SetNST                                               0     0      0     709
;!                           _PomiarZW
;!                             _SetPrt
;!                         _Read_b_eep
;!                           _Busy_eep
;!                        _Write_b_eep
;! ---------------------------------------------------------------------------------
;! (5) _Read_b_eep                                           2     0      2      62
;!                                             29 COMRAM     2     0      2
;! ---------------------------------------------------------------------------------
;! (1) _PomiarZW                                             0     0      0     393
;!                             _ReadAC
;!                        _ReadTabZNTC
;! ---------------------------------------------------------------------------------
;! (4) _ReadAC                                               2     2      0     124
;!                                             29 COMRAM     2     2      0
;! ---------------------------------------------------------------------------------
;! (2) _ReadTabZNTC                                          4     4      0     269
;!                                             31 COMRAM     4     4      0
;!                         _Read_b_eep
;! ---------------------------------------------------------------------------------
;! (3) _SetPrt                                               3     2      1     124
;!                                             29 COMRAM     3     2      1
;! ---------------------------------------------------------------------------------
;! (4) _Busy_eep                                             0     0      0       0
;! ---------------------------------------------------------------------------------
;! (4) _Write_b_eep                                          4     1      3     130
;!                                             29 COMRAM     4     1      3
;! ---------------------------------------------------------------------------------
;! (2) _SetPFN                                               0     0      0       0
;! ---------------------------------------------------------------------------------
;! (2) _RglPmp1                                              1     1      0    2000
;!                                              7 BANK0      1     1      0
;!                           _StartRTS
;!                       _ProcToPmpPwm
;!                          _WritePWM2
;!                                _RTS
;!                            _ModPmp1
;! ---------------------------------------------------------------------------------
;! (3) _ModPmp1                                             10    10      0    1304
;!                                             33 COMRAM     5     5      0
;!                                              0 BANK0      5     5      0
;!                               _RTdS
;!                          _StartRTdS
;!                            _Twyzsza
;!                            _Tnizsza
;! ---------------------------------------------------------------------------------
;! (2) _RglPmp2                                              1     1      0    8046
;!                                             13 BANK2      1     1      0
;!                           _StartRTS
;!                       _ProcToPmpPwm
;!                          _WritePWM2
;!                                _RTS
;!                            _ModPmp2
;! ---------------------------------------------------------------------------------
;! (4) _StartRTS                                             1     1      0      93
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _WritePWM2                                            1     1      0      31
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (4) _RTS                                                  1     1      0      62
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (2) _ProcToPmpPwm                                         3     3      0     510
;!                                              4 BANK0      3     3      0
;!                             ___wmul
;!                            ___lwdiv
;! ---------------------------------------------------------------------------------
;! (3) _ModPmp2                                             10    10      0    7350
;!                                              0 BANK3     10    10      0
;!                              _RetHI
;!                              _RetLO
;!                           _RetDelta
;!                          _StartRTdS
;!                               _RTdS
;!                            _Twyzsza
;!                            _Tnizsza
;! ---------------------------------------------------------------------------------
;! (4) _StartRTdS                                            1     1      0     126
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (4) _RTdS                                                 1     1      0      84
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (3) _Tnizsza                                              1     1      0      31
;!                                             29 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (3) _Twyzsza                                              4     4      0      31
;!                                             29 COMRAM     4     4      0
;! ---------------------------------------------------------------------------------
;! (4) _RetDelta                                             3     2      1    4264
;!                                             37 COMRAM     1     0      1
;!                                             11 BANK2      2     2      0
;!                        _RetKrkDelta
;!                            ___awdiv
;! ---------------------------------------------------------------------------------
;! (5) _RetKrkDelta                                          5     5      0    3661
;!                                              6 BANK2      5     5      0
;!                              _RetHI
;!                              _RetLO
;!                          _RetDelta4
;!                             ___wmul
;!                            ___awdiv
;! ---------------------------------------------------------------------------------
;! (6) _RetHI                                               11     9      2     891
;!                                             35 COMRAM     2     0      2
;!                                              8 BANK0      5     5      0
;!                                              0 BANK2      4     4      0
;!                            ___awdiv
;! ---------------------------------------------------------------------------------
;! (6) _RetLO                                               11     9      2     891
;!                                             35 COMRAM     2     0      2
;!                                              8 BANK0      5     5      0
;!                                              0 BANK2      4     4      0
;!                            ___awdiv
;! ---------------------------------------------------------------------------------
;! (6) _RetDelta4                                            5     2      3     719
;!                                              0 BANK1      3     0      3
;!                                              4 BANK2      2     2      0
;!                          _RetDelta1
;!                          _RetDelta2
;!                          _RetDelta3
;!                             _RetMax
;!                             _RetMin
;!                              _RetHI (ARG)
;!                              _RetLO (ARG)
;! ---------------------------------------------------------------------------------
;! (7) _RetMin                                               3     2      1     124
;!                                             32 COMRAM     3     2      1
;!                             _RetMax (ARG)
;! ---------------------------------------------------------------------------------
;! (7) _RetMax                                               3     2      1     124
;!                                             29 COMRAM     3     2      1
;! ---------------------------------------------------------------------------------
;! (7) _RetDelta1                                            2     1      1      62
;!                                             29 COMRAM     2     1      1
;! ---------------------------------------------------------------------------------
;! (7) _RetDelta2                                            3     2      1     127
;!                                             29 COMRAM     3     2      1
;! ---------------------------------------------------------------------------------
;! (7) _RetDelta3                                            2     1      1      62
;!                                             29 COMRAM     2     1      1
;! ---------------------------------------------------------------------------------
;! (2) _PresKeyEX                                            6     4      2    1470
;!                                             31 COMRAM     6     4      2
;!                        _StartKeyTim
;!                             _KeyTim
;!                              _RdPrt (ARG)
;! ---------------------------------------------------------------------------------
;! (2) _ResBufKeyEx                                          2     0      2      93
;!                                             29 COMRAM     2     0      2
;! ---------------------------------------------------------------------------------
;! (2) _WaitToLowEx                                          2     0      2      62
;!                                             29 COMRAM     2     0      2
;! ---------------------------------------------------------------------------------
;! (4) _ReadDataXONLID                                      20     6     14    5130
;!                                              0 BANK0      6     6      0
;!                                              0 BANK2     14     0     14
;!                         _ExxPresKey
;!                            ___lbdiv
;!                            ___lwmod
;!                              _RdPrt (ARG)
;! ---------------------------------------------------------------------------------
;! (5) _ExxPresKey                                           7     3      4    1596
;!                                             31 COMRAM     7     3      4
;!                        _StartKeyTim
;!                             _KeyTim
;! ---------------------------------------------------------------------------------
;! (6) _StartKeyTim                                          2     0      2      84
;!                                             29 COMRAM     2     0      2
;! ---------------------------------------------------------------------------------
;! (6) _KeyTim                                               2     0      2      42
;!                                             29 COMRAM     2     0      2
;! ---------------------------------------------------------------------------------
;! (5) ___aldiv                                             14     6      8     445
;!                                             29 COMRAM     8     0      8
;!                                              0 BANK0      6     6      0
;! ---------------------------------------------------------------------------------
;! (4) ___awdiv                                              8     4      4     445
;!                                              0 BANK0      8     4      4
;!                             ___wmul (ARG)
;! ---------------------------------------------------------------------------------
;! (5) ___lbdiv                                              4     3      1     342
;!                                             29 COMRAM     4     3      1
;! ---------------------------------------------------------------------------------
;! (5) ___lmul                                              12     4      8     136
;!                                             29 COMRAM     8     0      8
;!                                              0 BANK0      4     4      0
;! ---------------------------------------------------------------------------------
;! (4) ___lwdiv                                              7     3      4     241
;!                                             35 COMRAM     3     3      0
;!                                              0 BANK0      4     0      4
;!                             ___wmul (ARG)
;! ---------------------------------------------------------------------------------
;! (5) ___lwmod                                              5     1      4     324
;!                                             29 COMRAM     5     1      4
;! ---------------------------------------------------------------------------------
;! (4) ___wmul                                               6     2      4     136
;!                                             29 COMRAM     6     2      4
;! ---------------------------------------------------------------------------------
;! Estimated maximum stack depth 7
;! ---------------------------------------------------------------------------------
;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
;! ---------------------------------------------------------------------------------
;! (8) _ISR                                                 10    10      0    5731
;!                                             19 COMRAM    10    10      0
;!                         _IntUSARTRC
;!                         _IntUSARTTR
;!                       _ReloadTimer1
;!                          _IncRTimer
;!                        _IncPmrTimer
;!                        _IncKeyTimer
;!                         _RefreshWSW
;!                           _StabPort
;!                      _FormatDataIMY
;!                             _IntPWM
;!                            _IntPWM2
;!                         _I2CSlaveTR
;! ---------------------------------------------------------------------------------
;! (9) _I2CSlaveTR                                           1     1      0     462
;!                           _SetTData
;!                            _LiczCHK
;!                           _SetRData
;!                      _ReceptDataI2C
;!                    _TransmitDataI2C
;! ---------------------------------------------------------------------------------
;! (10) _SetTData                                            0     0      0     146
;!                            i2_RdPrt
;! ---------------------------------------------------------------------------------
;! (10) _SetRData                                            0     0      0       0
;! ---------------------------------------------------------------------------------
;! (10) _ReceptDataI2C                                       0     0      0     158
;!                            _LiczCHK
;!                             _ToWork
;! ---------------------------------------------------------------------------------
;! (11) _LiczCHK                                             8     8      0     158
;!                                              0 COMRAM     8     8      0
;! ---------------------------------------------------------------------------------
;! (10) _TransmitDataI2C                                     0     0      0       0
;! ---------------------------------------------------------------------------------
;! (11) _ToWork                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (9) _FormatDataIMY                                       10    10      0     472
;!                                              9 COMRAM    10    10      0
;!                            i2_RdPrt
;!                             _BitSet
;! ---------------------------------------------------------------------------------
;! (10) _BitSet                                              7     3      4     110
;!                                              2 COMRAM     7     3      4
;!                            i2_RdPrt (ARG)
;! ---------------------------------------------------------------------------------
;! (9) _IntUSARTRC                                           0     0      0     179
;!                      _VerifyNDatCHK
;! ---------------------------------------------------------------------------------
;! (9) _IntUSARTTR                                           0     0      0       0
;! ---------------------------------------------------------------------------------
;! (9) _ReloadTimer1                                         0     0      0       0
;! ---------------------------------------------------------------------------------
;! (9) _IncRTimer                                            1     1      0     624
;!                                              0 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (9) _IncPmrTimer                                          0     0      0       0
;! ---------------------------------------------------------------------------------
;! (9) _IncKeyTimer                                          1     1      0     312
;!                                              0 COMRAM     1     1      0
;! ---------------------------------------------------------------------------------
;! (9) _RefreshWSW                                           0     0      0    3051
;!                            _KolProc
;!                       _SetPrWswData
;!                      _FormatWswData
;!                       _PrintWswData
;! ---------------------------------------------------------------------------------
;! (9) _StabPort                                             4     4      0     631
;!                                              4 COMRAM     4     4      0
;!                          i2_RefStan
;! ---------------------------------------------------------------------------------
;! (9) _IntPWM                                               0     0      0       0
;! ---------------------------------------------------------------------------------
;! (9) _IntPWM2                                              0     0      0       0
;! ---------------------------------------------------------------------------------
;! (10) _VerifyNDatCHK                                       1     1      0     179
;!                                              6 COMRAM     1     1      0
;!                         _SetNDatCHK
;! ---------------------------------------------------------------------------------
;! (11) _SetNDatCHK                                          6     6      0     135
;!                                              0 COMRAM     6     6      0
;! ---------------------------------------------------------------------------------
;! (10) _KolProc                                            16    16      0    1819
;!                                              0 COMRAM    16    16      0
;! ---------------------------------------------------------------------------------
;! (10) _SetPrWswData                                        2     2      0      90
;!                                              0 COMRAM     2     2      0
;! ---------------------------------------------------------------------------------
;! (10) _FormatWswData                                       2     2      0     822
;!                                              4 COMRAM     2     2      0
;!                          i2___lbdiv
;!                            ___lbmod
;!                              _Swbty
;!                              _Rwbty
;! ---------------------------------------------------------------------------------
;! (10) _PrintWswData                                        7     7      0     320
;!                                              0 COMRAM     7     7      0
;! ---------------------------------------------------------------------------------
;! (11) _Swbty                                               2     2      0      68
;!                                              0 COMRAM     2     2      0
;! ---------------------------------------------------------------------------------
;! (11) _Rwbty                                               2     2      0      68
;!                                              0 COMRAM     2     2      0
;! ---------------------------------------------------------------------------------
;! (11) ___lbmod                                             4     3      1     159
;!                                              0 COMRAM     4     3      1
;! ---------------------------------------------------------------------------------
;! (11) i2___lbdiv                                           4     3      1     527
;!                                              0 COMRAM     4     3      1
;! ---------------------------------------------------------------------------------
;! (11) i2_RdPrt                                             2     2      0     146
;!                                              0 COMRAM     2     2      0
;! ---------------------------------------------------------------------------------
;! (10) i2_RefStan                                           4     4      0     231
;!                                              0 COMRAM     4     4      0
;! ---------------------------------------------------------------------------------
;! Estimated maximum stack depth 11
;! ---------------------------------------------------------------------------------
;!
;! Call Graph Graphs:
;!
;! _main (ROOT)
;!   _InitOsc
;!   _InitGlobal
;!   _InitTimer1
;!   _InitPort
;!     _RefStan
;!     _FrsStan
;!   _InitAC
;!   _InitWsw
;!     _SetStatus
;!   _InitPWM
;!   _InitI2C
;!   _InitUart
;!   _InitDataPmr
;!   _ClearData
;!   _TestScr
;!     _SetStatus
;!     _SetData
;!     _SetDiode
;!       _Swsdid
;!       _Rwsdid
;!   _PwrOnDelay
;!     _StartRTdS
;!     _RTdS
;!   _EndTestScr
;!     _SetStatus
;!     _SetData
;!     _SetDiode
;!       _Swsdid
;!       _Rwsdid
;!   _ClsScr
;!     _WswOff
;!   _EndClsScr
;!     _AllKolToFirstPoz
;!     _WswOn
;!   _RdEEParam
;!     _Read_b_eep
;!     _SetTpKtParam
;!     _ModParam
;!       _Read_b_eep (ARG)
;!     _MocStart
;!       ___wmul
;!       ___awdiv
;!         ___wmul (ARG)
;!       ___lwdiv
;!         ___wmul (ARG)
;!     _MocMaksCW
;!       ___wmul
;!       ___awdiv
;!         ___wmul (ARG)
;!       ___lwdiv
;!         ___wmul (ARG)
;!     _MocMaksCO
;!       ___wmul
;!       ___awdiv
;!         ___wmul (ARG)
;!       ___lwdiv
;!         ___wmul (ARG)
;!     _SetPFN
;!     _SetNST
;!       _PomiarZW
;!         _ReadAC
;!         _ReadTabZNTC
;!           _Read_b_eep
;!       _SetPrt
;!       _Read_b_eep
;!       _Busy_eep
;!       _Write_b_eep
;!     _Busy_eep
;!     _Write_b_eep
;!   _EnKonf
;!     _StartRTS
;!   _Read_b_eep
;!   _PrintErr
;!     _SetData
;!     _SetStatus
;!     _SetPoz
;!   _ErrPTG
;!     _GrzejOFF
;!     _VZPauza
;!       _StartRTS
;!       _RTS
;!     _Busy_eep
;!     _Write_b_eep
;!     _WritePWM
;!     _PomiarPCO
;!       _StartRTdS
;!       _WritePCO
;!         _RTdS
;!         _StartRTdS
;!         _WriteEEPCO
;!           _Busy_eep
;!           _Write_b_eep
;!       _GetPGD_PCO
;!         ___wmul
;!         ___lmul
;!         ___aldiv
;!       _SetModPCO
;!       _ReturnACfromNTC
;!         _Read_b_eep
;!     _PomiarPCW
;!       _StartRTdS
;!       _WritePCW
;!         _RTdS
;!         _StartRTdS
;!         _WriteEEPCW
;!           _Busy_eep
;!           _Write_b_eep
;!       _SetModPCW
;!       _ReturnACfromNTC
;!         _Read_b_eep
;!     _PomiarPFN
;!       _ReadEEPFN
;!         _Read_b_eep
;!       _StartRTdS
;!       _WritePFN
;!         _RTdS
;!         _StartRTdS
;!         _WriteEEPFN
;!           _Busy_eep
;!           _Write_b_eep
;!     _PomiarCO
;!       _ReadAC
;!       _ReadTabNTC
;!         _Read_b_eep
;!     _PomiarCW
;!       _ReadAC
;!       _ReadTabNTC
;!         _Read_b_eep
;!       _RdPrt
;!     _PomiarCS
;!       _ReadAC
;!       ___wmul
;!       ___awdiv
;!         ___wmul (ARG)
;!     _Proba48
;!       _StartRTG
;!       _RTG
;!     _Proba48Z3
;!       _StartRTG
;!       _RTG
;!     _RefInterfaceData
;!       _RdPrt
;!     _RdPrt
;!     _ToObiegCO
;!     _ToObiegCW
;!     _ZmienKCOKCW
;!       _StartRTdS
;!       _RTdS
;!     _Wylacz
;!       _StartRTS
;!       _RTS
;!       _RdPrt
;!     _VWybieg
;!       _StartRTS
;!       _RTS
;!     _Rusz48
;!       _StartRTS
;!       _ToObiegCO
;!       _RTS
;!       _ToObiegCW
;!     _Rusz48Z3
;!       _ToObiegCW
;!       _StartRTS
;!       _RTS
;!     _KeyRes
;!       _RdPrt
;!       _StartRTS
;!       _RTS
;!     _ToReset
;!       _EndErr
;!         _ResetKol
;!       _Busy_eep
;!       _Write_b_eep
;!       _StartRTS
;!       _RTS
;!   _PomiarCO
;!     _ReadAC
;!     _ReadTabNTC
;!       _Read_b_eep
;!   _PomiarCW
;!     _ReadAC
;!     _ReadTabNTC
;!       _Read_b_eep
;!     _RdPrt
;!   _PomiarZW
;!     _ReadAC
;!     _ReadTabZNTC
;!       _Read_b_eep
;!   _PomiarCS
;!     _ReadAC
;!     ___wmul
;!     ___awdiv
;!       ___wmul (ARG)
;!   _PomiarPCO
;!     _StartRTdS
;!     _WritePCO
;!       _RTdS
;!       _StartRTdS
;!       _WriteEEPCO
;!         _Busy_eep
;!         _Write_b_eep
;!     _GetPGD_PCO
;!       ___wmul
;!       ___lmul
;!       ___aldiv
;!     _SetModPCO
;!     _ReturnACfromNTC
;!       _Read_b_eep
;!   _PomiarPCW
;!     _StartRTdS
;!     _WritePCW
;!       _RTdS
;!       _StartRTdS
;!       _WriteEEPCW
;!         _Busy_eep
;!         _Write_b_eep
;!     _SetModPCW
;!     _ReturnACfromNTC
;!       _Read_b_eep
;!   _PomiarPFN
;!     _ReadEEPFN
;!       _Read_b_eep
;!     _StartRTdS
;!     _WritePFN
;!       _RTdS
;!       _StartRTdS
;!       _WriteEEPFN
;!         _Busy_eep
;!         _Write_b_eep
;!   _PomiarIN
;!     _ReadAC
;!     _ReadTabNTC
;!       _Read_b_eep
;!   _RefInterfaceData
;!     _RdPrt
;!   _RdPrt
;!   _RestartFltPrt
;!     _SetPrt
;!   _StartRTS
;!   _WritePWM2
;!   _TrybPracy
;!     _RdPrt
;!     _PresKeyEX
;!       _StartKeyTim
;!       _KeyTim
;!       _RdPrt (ARG)
;!     _WaitToLowEx
;!     _ResBufKeyEx
;!     _SetPrt
;!     _StartRTdS
;!     _RestartKol
;!     _RTdS
;!   _FiltrPomiarowyCOCW
;!     _PmrTim1
;!     _StartTim1
;!     _GoldenEye
;!       ___wmul
;!     _PmrTim2
;!     _StartTim2
;!     _FltParMod
;!       _PredkoscZmianCW
;!   _DecWSW
;!     _NastawaCOCW
;!       _StartRTdS
;!       _EndNst
;!         _ResetKol
;!       _PrintNstCW
;!         _SetData
;!         _SetStatus
;!         _RestartKol
;!       _PrintNstCO
;!         _SetData
;!         _SetStatus
;!         _RestartKol
;!       _RTdS
;!       _RdPrt
;!       _ReadParam
;!         _RdPrt
;!         _ReadDataXONLID
;!           _ExxPresKey
;!             _StartKeyTim
;!             _KeyTim
;!           ___lbdiv
;!           ___lwmod
;!           _RdPrt (ARG)
;!         _RTdS
;!         _StartRTdS
;!     _PrintErr
;!       _SetData
;!       _SetStatus
;!       _SetPoz
;!     _PrintErrTm
;!       _SetData
;!       _SetStatus
;!       _SetPoz
;!     _PrintErrCs
;!       _SetData
;!       _SetStatus
;!       _SetPoz
;!     _EndErr
;!       _ResetKol
;!     _PrintOFF
;!       _SetStatus
;!       _SetData
;!     _EndOFF
;!       _SetStatus
;!     _PrintCS
;!       _SetStatus
;!       _SetData
;!     _EndCS
;!       _SetStatus
;!     _PrintCW
;!       _SetStatus
;!       _SetData
;!     _EndCW
;!       _SetStatus
;!     _PrintCO
;!       _SetStatus
;!       _SetData
;!     _PrintL3
;!       _SetData
;!       _SetStatus
;!       _SetPoz
;!     _SetDiode
;!       _Swsdid
;!       _Rwsdid
;!   _DecERR
;!     _RdPrt
;!     _SetErr
;!     _ErrPTG
;!       _GrzejOFF
;!       _VZPauza
;!         _StartRTS
;!         _RTS
;!       _Busy_eep
;!       _Write_b_eep
;!       _WritePWM
;!       _PomiarPCO
;!         _StartRTdS
;!         _WritePCO
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPCO
;!             _Busy_eep
;!             _Write_b_eep
;!         _GetPGD_PCO
;!           ___wmul
;!           ___lmul
;!           ___aldiv
;!         _SetModPCO
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!       _PomiarPCW
;!         _StartRTdS
;!         _WritePCW
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPCW
;!             _Busy_eep
;!             _Write_b_eep
;!         _SetModPCW
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!       _PomiarPFN
;!         _ReadEEPFN
;!           _Read_b_eep
;!         _StartRTdS
;!         _WritePFN
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPFN
;!             _Busy_eep
;!             _Write_b_eep
;!       _PomiarCO
;!         _ReadAC
;!         _ReadTabNTC
;!           _Read_b_eep
;!       _PomiarCW
;!         _ReadAC
;!         _ReadTabNTC
;!           _Read_b_eep
;!         _RdPrt
;!       _PomiarCS
;!         _ReadAC
;!         ___wmul
;!         ___awdiv
;!           ___wmul (ARG)
;!       _Proba48
;!         _StartRTG
;!         _RTG
;!       _Proba48Z3
;!         _StartRTG
;!         _RTG
;!       _RefInterfaceData
;!         _RdPrt
;!       _RdPrt
;!       _ToObiegCO
;!       _ToObiegCW
;!       _ZmienKCOKCW
;!         _StartRTdS
;!         _RTdS
;!       _Wylacz
;!         _StartRTS
;!         _RTS
;!         _RdPrt
;!       _VWybieg
;!         _StartRTS
;!         _RTS
;!       _Rusz48
;!         _StartRTS
;!         _ToObiegCO
;!         _RTS
;!         _ToObiegCW
;!       _Rusz48Z3
;!         _ToObiegCW
;!         _StartRTS
;!         _RTS
;!       _KeyRes
;!         _RdPrt
;!         _StartRTS
;!         _RTS
;!       _ToReset
;!         _EndErr
;!           _ResetKol
;!         _Busy_eep
;!         _Write_b_eep
;!         _StartRTS
;!         _RTS
;!     _EndErr
;!       _ResetKol
;!     _SetMsg
;!     _StartRTS
;!     _PrintErr
;!       _SetData
;!       _SetStatus
;!       _SetPoz
;!   _DecSTR
;!     _RTS
;!     _RdPrt
;!     _ToObiegCW
;!     _ToObiegCO
;!     _RestartMod
;!     _WritePWM
;!   _DecRozruch
;!     _SetRozruch
;!       _EndL3
;!         _ResetKol
;!   _DecWylacz
;!     _SetWylacz
;!       _GrzejOFF
;!       _ToObiegCO
;!       _SetPrt
;!     _RdPrt
;!     _SetL3
;!   _FunkcjaSerwisowa
;!     _StartRTM
;!     _RTM
;!   _DecyzjaAntyLeg
;!     _StartRTG
;!     _RTM
;!     _RTG
;!     _StartRTM
;!     _Busy_eep
;!     _Write_b_eep
;!   _KolejkaPobudzen
;!     _RdPrt
;!   _RglPmp
;!     _RglPmp1
;!       _StartRTS
;!       _ProcToPmpPwm
;!         ___wmul
;!         ___lwdiv
;!           ___wmul (ARG)
;!       _WritePWM2
;!       _RTS
;!       _ModPmp1
;!         _RTdS
;!         _StartRTdS
;!         _Twyzsza
;!         _Tnizsza
;!     _RglPmp2
;!       _StartRTS
;!       _ProcToPmpPwm
;!         ___wmul
;!         ___lwdiv
;!           ___wmul (ARG)
;!       _WritePWM2
;!       _RTS
;!       _ModPmp2
;!         _RetHI
;!           ___awdiv
;!             ___wmul (ARG)
;!         _RetLO
;!           ___awdiv
;!             ___wmul (ARG)
;!         _RetDelta
;!           _RetKrkDelta
;!             _RetHI
;!               ___awdiv
;!                 ___wmul (ARG)
;!             _RetLO
;!               ___awdiv
;!                 ___wmul (ARG)
;!             _RetDelta4
;!               _RetDelta1
;!               _RetDelta2
;!               _RetDelta3
;!               _RetMax
;!               _RetMin
;!                 _RetMax (ARG)
;!               _RetHI (ARG)
;!                 ___awdiv
;!                   ___wmul (ARG)
;!               _RetLO (ARG)
;!                 ___awdiv
;!                   ___wmul (ARG)
;!             ___wmul
;!             ___awdiv
;!               ___wmul (ARG)
;!           ___awdiv
;!             ___wmul (ARG)
;!         _StartRTdS
;!         _RTdS
;!         _Twyzsza
;!         _Tnizsza
;!     _StartRTS
;!     _ProcToPmpPwm
;!       ___wmul
;!       ___lwdiv
;!         ___wmul (ARG)
;!     _WritePWM2
;!   _ZmienKCOKCW
;!     _StartRTdS
;!     _RTdS
;!   _Wylacz
;!     _StartRTS
;!     _RTS
;!     _RdPrt
;!   _Rozruch
;!     _StartRTS
;!     _RTS
;!     _RdPrt
;!     _PrintErr
;!       _SetData
;!       _SetStatus
;!       _SetPoz
;!     _ErrPTG
;!       _GrzejOFF
;!       _VZPauza
;!         _StartRTS
;!         _RTS
;!       _Busy_eep
;!       _Write_b_eep
;!       _WritePWM
;!       _PomiarPCO
;!         _StartRTdS
;!         _WritePCO
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPCO
;!             _Busy_eep
;!             _Write_b_eep
;!         _GetPGD_PCO
;!           ___wmul
;!           ___lmul
;!           ___aldiv
;!         _SetModPCO
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!       _PomiarPCW
;!         _StartRTdS
;!         _WritePCW
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPCW
;!             _Busy_eep
;!             _Write_b_eep
;!         _SetModPCW
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!       _PomiarPFN
;!         _ReadEEPFN
;!           _Read_b_eep
;!         _StartRTdS
;!         _WritePFN
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPFN
;!             _Busy_eep
;!             _Write_b_eep
;!       _PomiarCO
;!         _ReadAC
;!         _ReadTabNTC
;!           _Read_b_eep
;!       _PomiarCW
;!         _ReadAC
;!         _ReadTabNTC
;!           _Read_b_eep
;!         _RdPrt
;!       _PomiarCS
;!         _ReadAC
;!         ___wmul
;!         ___awdiv
;!           ___wmul (ARG)
;!       _Proba48
;!         _StartRTG
;!         _RTG
;!       _Proba48Z3
;!         _StartRTG
;!         _RTG
;!       _RefInterfaceData
;!         _RdPrt
;!       _RdPrt
;!       _ToObiegCO
;!       _ToObiegCW
;!       _ZmienKCOKCW
;!         _StartRTdS
;!         _RTdS
;!       _Wylacz
;!         _StartRTS
;!         _RTS
;!         _RdPrt
;!       _VWybieg
;!         _StartRTS
;!         _RTS
;!       _Rusz48
;!         _StartRTS
;!         _ToObiegCO
;!         _RTS
;!         _ToObiegCW
;!       _Rusz48Z3
;!         _ToObiegCW
;!         _StartRTS
;!         _RTS
;!       _KeyRes
;!         _RdPrt
;!         _StartRTS
;!         _RTS
;!       _ToReset
;!         _EndErr
;!           _ResetKol
;!         _Busy_eep
;!         _Write_b_eep
;!         _StartRTS
;!         _RTS
;!     _WritePWM
;!     _GrzejON
;!     _DecyzjaPLM
;!       _PrintErr
;!         _SetData
;!         _SetStatus
;!         _SetPoz
;!       _ErrPTG
;!         _GrzejOFF
;!         _VZPauza
;!           _StartRTS
;!           _RTS
;!         _Busy_eep
;!         _Write_b_eep
;!         _WritePWM
;!         _PomiarPCO
;!           _StartRTdS
;!           _WritePCO
;!             _RTdS
;!             _StartRTdS
;!             _WriteEEPCO
;!               _Busy_eep
;!               _Write_b_eep
;!           _GetPGD_PCO
;!             ___wmul
;!             ___lmul
;!             ___aldiv
;!           _SetModPCO
;!           _ReturnACfromNTC
;!             _Read_b_eep
;!         _PomiarPCW
;!           _StartRTdS
;!           _WritePCW
;!             _RTdS
;!             _StartRTdS
;!             _WriteEEPCW
;!               _Busy_eep
;!               _Write_b_eep
;!           _SetModPCW
;!           _ReturnACfromNTC
;!             _Read_b_eep
;!         _PomiarPFN
;!           _ReadEEPFN
;!             _Read_b_eep
;!           _StartRTdS
;!           _WritePFN
;!             _RTdS
;!             _StartRTdS
;!             _WriteEEPFN
;!               _Busy_eep
;!               _Write_b_eep
;!         _PomiarCO
;!           _ReadAC
;!           _ReadTabNTC
;!             _Read_b_eep
;!         _PomiarCW
;!           _ReadAC
;!           _ReadTabNTC
;!             _Read_b_eep
;!           _RdPrt
;!         _PomiarCS
;!           _ReadAC
;!           ___wmul
;!           ___awdiv
;!             ___wmul (ARG)
;!         _Proba48
;!           _StartRTG
;!           _RTG
;!         _Proba48Z3
;!           _StartRTG
;!           _RTG
;!         _RefInterfaceData
;!           _RdPrt
;!         _RdPrt
;!         _ToObiegCO
;!         _ToObiegCW
;!         _ZmienKCOKCW
;!           _StartRTdS
;!           _RTdS
;!         _Wylacz
;!           _StartRTS
;!           _RTS
;!           _RdPrt
;!         _VWybieg
;!           _StartRTS
;!           _RTS
;!         _Rusz48
;!           _StartRTS
;!           _ToObiegCO
;!           _RTS
;!           _ToObiegCW
;!         _Rusz48Z3
;!           _ToObiegCW
;!           _StartRTS
;!           _RTS
;!         _KeyRes
;!           _RdPrt
;!           _StartRTS
;!           _RTS
;!         _ToReset
;!           _EndErr
;!             _ResetKol
;!           _Busy_eep
;!           _Write_b_eep
;!           _StartRTS
;!           _RTS
;!     _DecyzjaPLM2
;!       _PrintErr
;!         _SetData
;!         _SetStatus
;!         _SetPoz
;!       _ErrPTG
;!         _GrzejOFF
;!         _VZPauza
;!           _StartRTS
;!           _RTS
;!         _Busy_eep
;!         _Write_b_eep
;!         _WritePWM
;!         _PomiarPCO
;!           _StartRTdS
;!           _WritePCO
;!             _RTdS
;!             _StartRTdS
;!             _WriteEEPCO
;!               _Busy_eep
;!               _Write_b_eep
;!           _GetPGD_PCO
;!             ___wmul
;!             ___lmul
;!             ___aldiv
;!           _SetModPCO
;!           _ReturnACfromNTC
;!             _Read_b_eep
;!         _PomiarPCW
;!           _StartRTdS
;!           _WritePCW
;!             _RTdS
;!             _StartRTdS
;!             _WriteEEPCW
;!               _Busy_eep
;!               _Write_b_eep
;!           _SetModPCW
;!           _ReturnACfromNTC
;!             _Read_b_eep
;!         _PomiarPFN
;!           _ReadEEPFN
;!             _Read_b_eep
;!           _StartRTdS
;!           _WritePFN
;!             _RTdS
;!             _StartRTdS
;!             _WriteEEPFN
;!               _Busy_eep
;!               _Write_b_eep
;!         _PomiarCO
;!           _ReadAC
;!           _ReadTabNTC
;!             _Read_b_eep
;!         _PomiarCW
;!           _ReadAC
;!           _ReadTabNTC
;!             _Read_b_eep
;!           _RdPrt
;!         _PomiarCS
;!           _ReadAC
;!           ___wmul
;!           ___awdiv
;!             ___wmul (ARG)
;!         _Proba48
;!           _StartRTG
;!           _RTG
;!         _Proba48Z3
;!           _StartRTG
;!           _RTG
;!         _RefInterfaceData
;!           _RdPrt
;!         _RdPrt
;!         _ToObiegCO
;!         _ToObiegCW
;!         _ZmienKCOKCW
;!           _StartRTdS
;!           _RTdS
;!         _Wylacz
;!           _StartRTS
;!           _RTS
;!           _RdPrt
;!         _VWybieg
;!           _StartRTS
;!           _RTS
;!         _Rusz48
;!           _StartRTS
;!           _ToObiegCO
;!           _RTS
;!           _ToObiegCW
;!         _Rusz48Z3
;!           _ToObiegCW
;!           _StartRTS
;!           _RTS
;!         _KeyRes
;!           _RdPrt
;!           _StartRTS
;!           _RTS
;!         _ToReset
;!           _EndErr
;!             _ResetKol
;!           _Busy_eep
;!           _Write_b_eep
;!           _StartRTS
;!           _RTS
;!       _RdPrt
;!   _VWybieg
;!     _StartRTS
;!     _RTS
;!   _ReloadPlomien
;!     _RTdS
;!   _RuszPlomien
;!     _StartRTS
;!     _RTS
;!     _StartRTdS
;!   _ReloadCiag
;!     _RTM
;!     _RTS
;!   _RuszCiag
;!     _StartRTS
;!     _StartRTM
;!     _RTS
;!     _RTM
;!     _PrintErr
;!       _SetData
;!       _SetStatus
;!       _SetPoz
;!     _ErrPTG
;!       _GrzejOFF
;!       _VZPauza
;!         _StartRTS
;!         _RTS
;!       _Busy_eep
;!       _Write_b_eep
;!       _WritePWM
;!       _PomiarPCO
;!         _StartRTdS
;!         _WritePCO
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPCO
;!             _Busy_eep
;!             _Write_b_eep
;!         _GetPGD_PCO
;!           ___wmul
;!           ___lmul
;!           ___aldiv
;!         _SetModPCO
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!       _PomiarPCW
;!         _StartRTdS
;!         _WritePCW
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPCW
;!             _Busy_eep
;!             _Write_b_eep
;!         _SetModPCW
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!       _PomiarPFN
;!         _ReadEEPFN
;!           _Read_b_eep
;!         _StartRTdS
;!         _WritePFN
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPFN
;!             _Busy_eep
;!             _Write_b_eep
;!       _PomiarCO
;!         _ReadAC
;!         _ReadTabNTC
;!           _Read_b_eep
;!       _PomiarCW
;!         _ReadAC
;!         _ReadTabNTC
;!           _Read_b_eep
;!         _RdPrt
;!       _PomiarCS
;!         _ReadAC
;!         ___wmul
;!         ___awdiv
;!           ___wmul (ARG)
;!       _Proba48
;!         _StartRTG
;!         _RTG
;!       _Proba48Z3
;!         _StartRTG
;!         _RTG
;!       _RefInterfaceData
;!         _RdPrt
;!       _RdPrt
;!       _ToObiegCO
;!       _ToObiegCW
;!       _ZmienKCOKCW
;!         _StartRTdS
;!         _RTdS
;!       _Wylacz
;!         _StartRTS
;!         _RTS
;!         _RdPrt
;!       _VWybieg
;!         _StartRTS
;!         _RTS
;!       _Rusz48
;!         _StartRTS
;!         _ToObiegCO
;!         _RTS
;!         _ToObiegCW
;!       _Rusz48Z3
;!         _ToObiegCW
;!         _StartRTS
;!         _RTS
;!       _KeyRes
;!         _RdPrt
;!         _StartRTS
;!         _RTS
;!       _ToReset
;!         _EndErr
;!           _ResetKol
;!         _Busy_eep
;!         _Write_b_eep
;!         _StartRTS
;!         _RTS
;!     _RdPrt
;!   _Proba48
;!     _StartRTG
;!     _RTG
;!   _Rusz48
;!     _StartRTS
;!     _ToObiegCO
;!     _RTS
;!     _ToObiegCW
;!   _Proba48Z3
;!     _StartRTG
;!     _RTG
;!   _Rusz48Z3
;!     _ToObiegCW
;!     _StartRTS
;!     _RTS
;!   _BlokadaL3
;!     _StartRTM
;!     _SetL3
;!     _EndL3
;!       _ResetKol
;!     _RTM
;!   _Blokada15S
;!     _StartRTdS
;!     _RTdS
;!   _Moduluj
;!     _StartCO
;!       _StartRTdS
;!     _ReadDataCO
;!     _ModToCO
;!       _ClrMod
;!     _ModZgCO
;!       _Tnizsza
;!       _Tmaleje
;!       _Tstoi
;!       ___wmul
;!       ___aldiv
;!       ___lmul
;!     _ModDkCO
;!       _Twyzsza
;!       ___wmul
;!     _RTdS
;!     _StartRTdS
;!     _IncConstCOCW
;!       _Tstoi
;!     _IncMaxCO
;!       _Trosnie
;!     _ModPruCO
;!       _Tmaleje
;!       _Trowna
;!       _Trosnie
;!     _ModPrzCO
;!       _Twyzsza
;!     _PropOPT
;!       _WriteOPWM
;!         ___wmul
;!         ___lwdiv
;!           ___wmul (ARG)
;!     _StartMCW
;!       _StartRTdS
;!       _FirstPCW
;!         ___awdiv
;!           ___wmul (ARG)
;!         ___wmul
;!         ___aldiv
;!         ___lmul
;!       ___awdiv
;!         ___wmul (ARG)
;!     _ReadDataCW
;!     _ModToCW
;!       _ClrMod
;!     _ModZgCW
;!       _Tnizsza
;!       _Twyzsza
;!       _Tstoi
;!       ___wmul
;!       ___aldiv
;!       ___lmul
;!     _ModDkCW
;!       _Trowna
;!       _Tnizsza
;!       ___wmul
;!     _IncMaxCW
;!       _Trosnie
;!     _ModPruCW
;!       _Tnizsza
;!       _Tstoi
;!       _Trosnie
;!       _Twyzsza
;!       _Tmaleje
;!     _ModPrzCW
;!       _Tnizsza
;!       ___awdiv
;!         ___wmul (ARG)
;!       _Tmaleje
;!       _Twyzsza
;!     _PropCO
;!       _WriteOPWM
;!         ___wmul
;!         ___lwdiv
;!           ___wmul (ARG)
;!     _StartCO2
;!       _StartRTdS
;!     _ReadDataCO2
;!     _ModToCO2
;!       _ClrMod2
;!     _IncConstCO2
;!       _Tstoi
;!     _StartMCW2
;!       _StartRTdS
;!       _FirstPCW2
;!     _ReadDataCW2
;!     _ModToCW2
;!       _ClrMod2
;!     _ModZgCW2
;!       _Tnizsza
;!       _FirstPCW2
;!       ___wmul
;!       ___aldiv
;!       ___lmul
;!     _ModDkCW2
;!       ___wmul
;!     _IncConstCW2
;!       _TFrosnie
;!       _Tstoi
;!     _IncMaxCW2
;!       _Trosnie
;!       _TFrosnie
;!     _ModPruCW2
;!       _Tnizsza
;!       _Trosnie
;!       _TFrosnie
;!       _TFmaleje
;!       _TFstoi
;!       _Twyzsza
;!       _Trowna
;!       _Tstoi
;!       _Tmaleje
;!     _ModPrzCW2
;!       _Tmaleje
;!       _Twyzsza
;!       _Tstoi
;!       _TFmaleje
;!       _Tnizsza
;!     _PropCO2
;!       _WriteOPWM
;!         ___wmul
;!         ___lwdiv
;!           ___wmul (ARG)
;!     _StartMCO3
;!       _StartRTdS
;!     _ModToCO3
;!     _ModToCW3
;!       _Tnizsza
;!     _StartCO4
;!       _StartRTdS
;!     _ReadDataCO4
;!     _ModToCO4
;!       _ClrMod4
;!     _IncConstCOCW4
;!       _Tstoi
;!     _StartMCW4
;!       _StartRTdS
;!     _ReadDataCW4
;!     _ModToCW4
;!       _ClrMod4
;!     _ModZgCW4
;!       _Tnizsza
;!       ___wmul
;!       ___aldiv
;!       ___lmul
;!     _ModDkCW4
;!       ___wmul
;!     _IncMaxCW4
;!       _Trosnie
;!     _ModPruCW4
;!       _Tnizsza
;!       _Tstoi
;!       _Trosnie
;!       _Twyzsza
;!       _Tmaleje
;!     _ModPrzCW4
;!       ___wmul
;!       ___lwdiv
;!         ___wmul (ARG)
;!       _Tmaleje
;!       _Twyzsza
;!       _Tnizsza
;!       _Tstoi
;!     _PropCO4
;!       _WriteOPWM
;!         ___wmul
;!         ___lwdiv
;!           ___wmul (ARG)
;!   _DetekcjaPrzeplywuWG
;!     _RdPrt
;!     _StartRTS
;!     _RTS
;!   _OczekujNaPrzeplywWG
;!     _RdPrt
;!     _StartRTS
;!     _RTS
;!     _PrintErr
;!       _SetData
;!       _SetStatus
;!       _SetPoz
;!     _ErrPTG
;!       _GrzejOFF
;!       _VZPauza
;!         _StartRTS
;!         _RTS
;!       _Busy_eep
;!       _Write_b_eep
;!       _WritePWM
;!       _PomiarPCO
;!         _StartRTdS
;!         _WritePCO
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPCO
;!             _Busy_eep
;!             _Write_b_eep
;!         _GetPGD_PCO
;!           ___wmul
;!           ___lmul
;!           ___aldiv
;!         _SetModPCO
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!       _PomiarPCW
;!         _StartRTdS
;!         _WritePCW
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPCW
;!             _Busy_eep
;!             _Write_b_eep
;!         _SetModPCW
;!         _ReturnACfromNTC
;!           _Read_b_eep
;!       _PomiarPFN
;!         _ReadEEPFN
;!           _Read_b_eep
;!         _StartRTdS
;!         _WritePFN
;!           _RTdS
;!           _StartRTdS
;!           _WriteEEPFN
;!             _Busy_eep
;!             _Write_b_eep
;!       _PomiarCO
;!         _ReadAC
;!         _ReadTabNTC
;!           _Read_b_eep
;!       _PomiarCW
;!         _ReadAC
;!         _ReadTabNTC
;!           _Read_b_eep
;!         _RdPrt
;!       _PomiarCS
;!         _ReadAC
;!         ___wmul
;!         ___awdiv
;!           ___wmul (ARG)
;!       _Proba48
;!         _StartRTG
;!         _RTG
;!       _Proba48Z3
;!         _StartRTG
;!         _RTG
;!       _RefInterfaceData
;!         _RdPrt
;!       _RdPrt
;!       _ToObiegCO
;!       _ToObiegCW
;!       _ZmienKCOKCW
;!         _StartRTdS
;!         _RTdS
;!       _Wylacz
;!         _StartRTS
;!         _RTS
;!         _RdPrt
;!       _VWybieg
;!         _StartRTS
;!         _RTS
;!       _Rusz48
;!         _StartRTS
;!         _ToObiegCO
;!         _RTS
;!         _ToObiegCW
;!       _Rusz48Z3
;!         _ToObiegCW
;!         _StartRTS
;!         _RTS
;!       _KeyRes
;!         _RdPrt
;!         _StartRTS
;!         _RTS
;!       _ToReset
;!         _EndErr
;!           _ResetKol
;!         _Busy_eep
;!         _Write_b_eep
;!         _StartRTS
;!         _RTS
;!
;! _ISR (ROOT)
;!   _IntUSARTRC
;!     _VerifyNDatCHK
;!       _SetNDatCHK
;!   _IntUSARTTR
;!   _ReloadTimer1
;!   _IncRTimer
;!   _IncPmrTimer
;!   _IncKeyTimer
;!   _RefreshWSW
;!     _KolProc
;!     _SetPrWswData
;!     _FormatWswData
;!       i2___lbdiv
;!       ___lbmod
;!       _Swbty
;!       _Rwbty
;!     _PrintWswData
;!   _StabPort
;!     i2_RefStan
;!   _FormatDataIMY
;!     i2_RdPrt
;!     _BitSet
;!       i2_RdPrt (ARG)
;!   _IntPWM
;!   _IntPWM2
;!   _I2CSlaveTR
;!     _SetTData
;!       i2_RdPrt
;!     _LiczCHK
;!     _SetRData
;!     _ReceptDataI2C
;!       _LiczCHK
;!       _ToWork
;!     _TransmitDataI2C
;!

;! Address spaces:

;!Name               Size   Autos  Total    Cost      Usage
;!BIGRAM             F5F      0       0      37        0.0%
;!EEDATA             400      0       0       0        0.0%
;!BITBANK14          100      0       0      33        0.0%
;!BANK14             100      0       0      34        0.0%
;!BITBANK13          100      0       0      30        0.0%
;!BANK13             100      0       0      31        0.0%
;!BITBANK12          100      0       0      28        0.0%
;!BANK12             100      0       0      29        0.0%
;!BITBANK11          100      0       0      26        0.0%
;!BANK11             100      0       0      27        0.0%
;!BITBANK10          100      0       0      24        0.0%
;!BANK10             100      0       0      25        0.0%
;!BITBANK9           100      0       0      22        0.0%
;!BANK9              100      0       0      23        0.0%
;!BITBANK8           100      0       0      20        0.0%
;!BANK8              100      0       0      21        0.0%
;!BITBANK7           100      0       0      18        0.0%
;!BANK7              100      0       0      19        0.0%
;!BITBANK6           100      0       0      16        0.0%
;!BANK6              100      0       0      17        0.0%
;!BITBANK5           100      0       0      14        0.0%
;!BANK5              100      0       0      15        0.0%
;!BITBANK4           100      0       0      12        0.0%
;!BANK4              100      0       0      13        0.0%
;!BITBANK3           100      0       0      10        0.0%
;!BANK3              100     12      58      11       34.4%
;!BITBANK2           100      0       0       8        0.0%
;!BANK2              100      F      FF       9       99.6%
;!BITBANK1           100      0       0       6        0.0%
;!BANK1              100      3     100       7      100.0%
;!BITBANK0            A0      0       0       4        0.0%
;!BANK0               A0      D      A0       5      100.0%
;!BITBANK15           60      0       0      35        0.0%
;!BANK15              60      0       0      36        0.0%
;!BITCOMRAM           5F      0       1       0        1.1%
;!COMRAM              5F     26      42       1       69.5%
;!BITSFR               0      0       0      40        0.0%
;!SFR                  0      0       0      40        0.0%
;!STACK                0      0       F       2        0.0%
;!NULL                 0      0       0       0        0.0%
;!ABS                  0      0     339      32        0.0%
;!DATA                 0      0     348       3        0.0%
;!CODE                 0      0       0       0        0.0%

	global	_main

;; *************** function _main *****************
;; Defined at:
;;		line 52 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       1       2       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels required when called:   11
;; This function calls:
;;		_InitOsc
;;		_InitGlobal
;;		_InitTimer1
;;		_InitPort
;;		_InitAC
;;		_InitWsw
;;		_InitPWM
;;		_InitI2C
;;		_InitUart
;;		_InitDataPmr
;;		_ClearData
;;		_TestScr
;;		_PwrOnDelay
;;		_EndTestScr
;;		_ClsScr
;;		_EndClsScr
;;		_RdEEParam
;;		_EnKonf
;;		_Read_b_eep
;;		_PrintErr
;;		_ErrPTG
;;		_PomiarCO
;;		_PomiarCW
;;		_PomiarZW
;;		_PomiarCS
;;		_PomiarPCO
;;		_PomiarPCW
;;		_PomiarPFN
;;		_PomiarIN
;;		_RefInterfaceData
;;		_RdPrt
;;		_RestartFltPrt
;;		_StartRTS
;;		_WritePWM2
;;		_TrybPracy
;;		_FiltrPomiarowyCOCW
;;		_DecWSW
;;		_DecERR
;;		_DecSTR
;;		_DecRozruch
;;		_DecWylacz
;;		_FunkcjaSerwisowa
;;		_DecyzjaAntyLeg
;;		_KolejkaPobudzen
;;		_RglPmp
;;		_ZmienKCOKCW
;;		_Wylacz
;;		_Rozruch
;;		_VWybieg
;;		_ReloadPlomien
;;		_RuszPlomien
;;		_ReloadCiag
;;		_RuszCiag
;;		_Proba48
;;		_Rusz48
;;		_Proba48Z3
;;		_Rusz48Z3
;;		_BlokadaL3
;;		_Blokada15S
;;		_Moduluj
;;		_DetekcjaPrzeplywuWG
;;		_OczekujNaPrzeplywWG
;; This function is called by:
;;		Startup code after reset
;; This function uses a non-reentrant model
;;
psect	text0,class=CODE,space=0,reloc=2
global __ptext0
__ptext0:
psect	text0
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	52
	global	__size_of_main
	__size_of_main	equ	__end_of_main-_main
	
_main:; BSR set to: 0

	opt	stack 20
	line	55
	
l36648:
;main.c: 55: InitOsc();
	call	_InitOsc	;wreg free
	line	56
;main.c: 56: InitGlobal();
	call	_InitGlobal	;wreg free
	line	57
	
l36650:
;main.c: 57: InitTimer1();
	call	_InitTimer1	;wreg free
	line	58
	
l36652:
;main.c: 58: InitPort();
	call	_InitPort	;wreg free
	line	59
	
l36654:; BSR set to: 0

;main.c: 59: InitAC();
	call	_InitAC	;wreg free
	line	60
	
l36656:; BSR set to: 0

;main.c: 60: InitWsw();
	call	_InitWsw	;wreg free
	line	61
	
l36658:; BSR set to: 2

;main.c: 61: InitPWM();
	call	_InitPWM	;wreg free
	line	62
	
l36660:; BSR set to: 0

;main.c: 62: InitI2C();
	call	_InitI2C	;wreg free
	line	63
	
l36662:; BSR set to: 1

;main.c: 63: InitUart();
	call	_InitUart	;wreg free
	line	64
	
l36664:; BSR set to: 1

;main.c: 64: InitDataPmr();
	call	_InitDataPmr	;wreg free
	line	65
	
l36666:; BSR set to: 0

;main.c: 65: ClearData();
	call	_ClearData	;wreg free
	line	69
	
l36668:; BSR set to: 0

;main.c: 69: if (!POR||!BOR)
	btfss	c:(32385/8),(32385)&7	;volatile
	goto	u69431
	goto	u69430
u69431:
	goto	l586
u69430:
	
l36670:; BSR set to: 0

	btfsc	c:(32384/8),(32384)&7	;volatile
	goto	u69441
	goto	u69440
u69441:
	goto	l584
u69440:
	
l586:; BSR set to: 0

	line	71
;main.c: 70: {
;main.c: 71: M._PW_START=1;
	bsf	(0+(_M+01Bh))&0ffh,0
	line	72
	
l36672:; BSR set to: 0

;main.c: 72: TestScr();
	call	_TestScr	;wreg free
	line	73
	
l36674:; BSR set to: 2

;main.c: 73: PwrOnDelay();
	call	_PwrOnDelay	;wreg free
	line	74
	
l36676:; BSR set to: 1

;main.c: 74: EndTestScr();
	call	_EndTestScr	;wreg free
	line	75
;main.c: 75: }
	goto	l36684
	line	76
	
l584:; BSR set to: 0

	line	78
;main.c: 76: else
;main.c: 77: {
;main.c: 78: M._RS_START=1;
	bsf	(0+(_M+01Ah))&0ffh,7
	line	79
	
l36678:; BSR set to: 0

;main.c: 79: ClsScr();
	call	_ClsScr	;wreg free
	line	80
	
l36680:; BSR set to: 1

;main.c: 80: PwrOnDelay();
	call	_PwrOnDelay	;wreg free
	line	81
	
l36682:; BSR set to: 1

;main.c: 81: EndClsScr();
	call	_EndClsScr	;wreg free
	line	84
	
l36684:
;main.c: 82: }
;main.c: 84: RdEEParam();
	call	_RdEEParam	;wreg free
	line	87
	
l36686:; BSR set to: 1

;main.c: 87: if (!POR||!BOR)
	btfss	c:(32385/8),(32385)&7	;volatile
	goto	u69451
	goto	u69450
u69451:
	goto	l590
u69450:
	
l36688:; BSR set to: 1

	btfsc	c:(32384/8),(32384)&7	;volatile
	goto	u69461
	goto	u69460
u69461:
	goto	l36692
u69460:
	
l590:; BSR set to: 1

	line	89
;main.c: 88: {
;main.c: 89: POR=1;
	bsf	c:(32385/8),(32385)&7	;volatile
	line	90
;main.c: 90: BOR=1;
	bsf	c:(32384/8),(32384)&7	;volatile
	line	91
	
l36690:; BSR set to: 1

;main.c: 91: EnKonf();
	call	_EnKonf	;wreg free
	line	94
	
l36692:; BSR set to: 1

;main.c: 92: }
;main.c: 94: PORTDbits.RD2=0;
	bcf	((c:3971)),c,2	;volatile
	line	95
;main.c: 95: switch(DtKNF.tpkt)
	goto	l36702
	line	100
	
l36694:; BSR set to: 1

;main.c: 98: case 2:
;main.c: 99: {
;main.c: 100: M._RPM_CW=!PORTDbits.RD2;
	
	btfss	((c:3971)),c,2	;volatile
	goto	u69471
	goto	u69470
u69471:
	movlw	1
	goto	u69476
u69470:
	movlw	0
u69476:
	movlb	2	; () banked
	movwf	(??_main+0+0)&0ffh
	rrcf	((??_main+0+0))&0ffh
	rrcf	((??_main+0+0))&0ffh
	movlb	0	; () banked
	movf	(0+(_M+01Bh))&0ffh,w
	movlb	2	; () banked
	xorwf	((??_main+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<7)
	xorwf	((??_main+0+0))&0ffh,w
	movlb	0	; () banked
	movwf	(0+(_M+01Bh))&0ffh
	line	101
;main.c: 101: break;
	goto	l36704
	line	106
	
l36696:; BSR set to: 1

;main.c: 104: case 3:
;main.c: 105: {
;main.c: 106: M._RPM_CW=!PORTDbits.RD1;
	
	btfss	((c:3971)),c,1	;volatile
	goto	u69481
	goto	u69480
u69481:
	movlw	1
	goto	u69486
u69480:
	movlw	0
u69486:
	movlb	2	; () banked
	movwf	(??_main+0+0)&0ffh
	rrcf	((??_main+0+0))&0ffh
	rrcf	((??_main+0+0))&0ffh
	movlb	0	; () banked
	movf	(0+(_M+01Bh))&0ffh,w
	movlb	2	; () banked
	xorwf	((??_main+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<7)
	xorwf	((??_main+0+0))&0ffh,w
	movlb	0	; () banked
	movwf	(0+(_M+01Bh))&0ffh
	line	107
;main.c: 107: break;
	goto	l36704
	line	95
	
l36702:; BSR set to: 1

	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l36696
	xorlw	1^0	; case 1
	skipnz
	goto	l36694
	xorlw	2^1	; case 2
	skipnz
	goto	l36694
	xorlw	3^2	; case 3
	skipnz
	goto	l36696
	goto	l36696

	line	117
	
l36704:; BSR set to: 0

;main.c: 117: if(M.ERR_BTY=Read_b_eep(0x00C0))
	movlw	high(0C0h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0C0h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	0	; () banked
	movwf	(0+(_M+022h))&0ffh
	movlb	0	; () banked
	movf	(0+(_M+022h))&0ffh,w
	btfsc	status,2
	goto	u69491
	goto	u69490
u69491:
	goto	l36722
u69490:
	line	119
	
l36706:; BSR set to: 0

;main.c: 118: {
;main.c: 119: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u69501
	goto	u69500
u69501:
	goto	l36714
u69500:
	line	121
	
l36708:; BSR set to: 1

;main.c: 120: {
;main.c: 121: if(M.ERR_BTY==5)
	movlb	0	; () banked
	movf	(0+(_M+022h))&0ffh,w
	xorlw	5

	btfss	status,2
	goto	u69511
	goto	u69510
u69511:
	goto	l36714
u69510:
	line	123
	
l36710:; BSR set to: 0

;main.c: 122: {
;main.c: 123: PrintErr(M.ERR_BTY,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movf	(0+(_M+022h))&0ffh,w
	
	call	_PrintErr
	line	124
	
l36712:; BSR set to: 1

;main.c: 124: ErrPTG();
	call	_ErrPTG	;wreg free
	line	127
	
l36714:
;main.c: 125: }
;main.c: 126: }
;main.c: 127: if((M.ERR_BTY>=1)&&(M.ERR_BTY<=3))
	movlb	0	; () banked
	movf	(0+(_M+022h))&0ffh,w
	btfsc	status,2
	goto	u69521
	goto	u69520
u69521:
	goto	l601
u69520:
	
l36716:; BSR set to: 0

	movlw	(04h)&0ffh
	cpfslt	(0+(_M+022h))&0ffh
	goto	u69531
	goto	u69530
u69531:
	goto	l601
u69530:
	line	129
	
l36718:; BSR set to: 0

;main.c: 128: {
;main.c: 129: PrintErr(M.ERR_BTY,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movf	(0+(_M+022h))&0ffh,w
	
	call	_PrintErr
	line	130
	
l36720:; BSR set to: 1

;main.c: 130: ErrPTG();
	call	_ErrPTG	;wreg free
	line	131
;main.c: 131: }
	goto	l36722
	line	132
	
l601:; BSR set to: 0

;main.c: 132: else M.ERR_BTY=0;
	clrf	(0+(_M+022h))&0ffh
	line	136
	
l36722:
;main.c: 133: }
;main.c: 136: PomiarCO();
	call	_PomiarCO	;wreg free
	line	137
;main.c: 137: PomiarCW();
	call	_PomiarCW	;wreg free
	line	138
;main.c: 138: PomiarZW();
	call	_PomiarZW	;wreg free
	line	139
;main.c: 139: PomiarCS();
	call	_PomiarCS	;wreg free
	line	140
	
l36724:; BSR set to: 1

;main.c: 140: PomiarPCO();
	call	_PomiarPCO	;wreg free
	line	141
	
l36726:; BSR set to: 0

;main.c: 141: PomiarPCW();
	call	_PomiarPCW	;wreg free
	line	142
	
l36728:; BSR set to: 0

;main.c: 142: PomiarPFN();
	call	_PomiarPFN	;wreg free
	line	143
	
l36730:
;main.c: 143: PomiarIN();
	call	_PomiarIN	;wreg free
	line	144
	
l36732:; BSR set to: 1

;main.c: 144: DtCO._newPCO=0;
	movlb	0	; () banked
	bcf	(0+(_DtCO+01h))&0ffh,7
	line	145
	
l36734:; BSR set to: 0

;main.c: 145: DtCW._newPCW=0;
	bcf	(0+(_DtCW+01h))&0ffh,0
	line	146
	
l36736:; BSR set to: 0

;main.c: 146: RefInterfaceData();
	call	_RefInterfaceData	;wreg free
	line	148
	
l36738:; BSR set to: 1

;main.c: 148: PORTDbits.RD3=0;
	bcf	((c:3971)),c,3	;volatile
	line	149
	
l36740:; BSR set to: 1

;main.c: 149: PORTDbits.RD0=0;
	bcf	((c:3971)),c,0	;volatile
	line	152
	
l36742:; BSR set to: 1

;main.c: 152: M._TURBO=!RdPrt(2)||RdPrt(3);
	movlw	low(01h)
	movlb	3	; () banked
	movwf	((_main$2063))&0ffh
	
l36744:; BSR set to: 3

	movlw	(02h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u69541
	goto	u69540
u69541:
	goto	l604
u69540:
	
l36746:; BSR set to: 0

	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u69551
	goto	u69550
u69551:
	goto	l604
u69550:
	
l36748:; BSR set to: 0

	movlb	3	; () banked
	clrf	((_main$2063))&0ffh
	
l604:
	movlb	3	; () banked
	btfsc	(_main$2063)&0ffh,0
	bra	u69565
	movlb	0	; () banked
	bcf	(0+(_M+01Bh))&0ffh,1
	bra	u69566
	u69565:
	movlb	0	; () banked
	bsf	(0+(_M+01Bh))&0ffh,1
	u69566:

	line	153
	
l36750:; BSR set to: 0

;main.c: 153: RestartFltPrt();
	call	_RestartFltPrt	;wreg free
	line	154
	
l36752:; BSR set to: 0

;main.c: 154: StartRTS(9);
	movlw	(09h)&0ffh
	
	call	_StartRTS
	line	158
	
l36754:; BSR set to: 1

;main.c: 158: DtCW.PCW=65;
	movlw	low(041h)
	movlb	0	; () banked
	movwf	(0+(_DtCW+03h))&0ffh
	line	159
	
l36756:; BSR set to: 0

;main.c: 159: DtCO.PCO=85;
	movlw	low(055h)
	movwf	(0+(_DtCO+03h))&0ffh
	line	162
	
l36758:; BSR set to: 0

;main.c: 162: WritePWM2(0);
	movlw	(0)&0ffh
	
	call	_WritePWM2
	line	163
;main.c: 163: while(1)
	
l605:
	line	165
# 165 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
clrwdt ;# 
psect	text0
	line	166
	
l36760:
;main.c: 166: PFN._opgprg=1;
	movlb	1	; () banked
	bsf	(0+(_PFN+05h))&0ffh,4
	line	167
	
l36762:; BSR set to: 1

;main.c: 167: PFN._opgres=0;
	bcf	(0+(_PFN+05h))&0ffh,3
	line	171
	
l36764:; BSR set to: 1

;main.c: 171: M._PRACA=M._ROZRUCH||PORTDbits.RD0;
	movlw	low(01h)
	movlb	3	; () banked
	movwf	((_main$2064))&0ffh
	
l36766:; BSR set to: 3

	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u69571
	goto	u69570
u69571:
	goto	l607
u69570:
	
l36768:; BSR set to: 0

	
	btfsc	((c:3971)),c,0	;volatile
	goto	u69581
	goto	u69580
u69581:
	goto	l607
u69580:
	
l36770:; BSR set to: 0

	movlb	3	; () banked
	clrf	((_main$2064))&0ffh
	
l607:
	movlb	3	; () banked
	btfsc	(_main$2064)&0ffh,0
	bra	u69595
	movlb	0	; () banked
	bcf	(0+(_M+01Bh))&0ffh,2
	bra	u69596
	u69595:
	movlb	0	; () banked
	bsf	(0+(_M+01Bh))&0ffh,2
	u69596:

	line	174
	
l36772:; BSR set to: 0

;main.c: 174: RefInterfaceData();
	call	_RefInterfaceData	;wreg free
	line	175
	
l36774:; BSR set to: 1

;main.c: 175: TrybPracy();
	call	_TrybPracy	;wreg free
	line	178
	
l36776:; BSR set to: 1

;main.c: 178: PomiarPCO();
	call	_PomiarPCO	;wreg free
	line	179
	
l36778:; BSR set to: 0

;main.c: 179: PomiarPCW();
	call	_PomiarPCW	;wreg free
	line	180
	
l36780:; BSR set to: 0

;main.c: 180: PomiarPFN();
	call	_PomiarPFN	;wreg free
	line	181
	
l36782:
;main.c: 181: PomiarCO();
	call	_PomiarCO	;wreg free
	line	182
	
l36784:; BSR set to: 0

;main.c: 182: PomiarCW();
	call	_PomiarCW	;wreg free
	line	183
	
l36786:; BSR set to: 0

;main.c: 183: PomiarZW();
	call	_PomiarZW	;wreg free
	line	184
	
l36788:; BSR set to: 1

;main.c: 184: FiltrPomiarowyCOCW();
	call	_FiltrPomiarowyCOCW	;wreg free
	line	185
	
l36790:; BSR set to: 0

;main.c: 185: PomiarCS();
	call	_PomiarCS	;wreg free
	line	186
	
l36792:; BSR set to: 1

;main.c: 186: PomiarIN();
	call	_PomiarIN	;wreg free
	line	188
	
l36794:; BSR set to: 1

;main.c: 188: DecWSW();
	call	_DecWSW	;wreg free
	line	189
	
l36796:; BSR set to: 1

;main.c: 189: DecERR();
	call	_DecERR	;wreg free
	line	190
	
l36798:
;main.c: 190: DecSTR();
	call	_DecSTR	;wreg free
	line	191
	
l36800:; BSR set to: 0

;main.c: 191: DecRozruch();
	call	_DecRozruch	;wreg free
	line	192
	
l36802:; BSR set to: 0

;main.c: 192: DecWylacz();
	call	_DecWylacz	;wreg free
	line	193
	
l36804:; BSR set to: 0

;main.c: 193: FunkcjaSerwisowa();
	call	_FunkcjaSerwisowa	;wreg free
	line	194
	
l36806:
;main.c: 194: DecyzjaAntyLeg();
	call	_DecyzjaAntyLeg	;wreg free
	line	195
	
l36808:
;main.c: 195: KolejkaPobudzen();
	call	_KolejkaPobudzen	;wreg free
	line	198
	
l36810:; BSR set to: 0

;main.c: 198: RglPmp();
	call	_RglPmp	;wreg free
	line	199
	
l36812:; BSR set to: 0

;main.c: 199: if(M._ZMKCOCW) ZmienKCOKCW();
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u69601
	goto	u69600
u69601:
	goto	l36816
u69600:
	
l36814:; BSR set to: 0

	call	_ZmienKCOKCW	;wreg free
	line	200
	
l36816:
;main.c: 200: if(M._WYLACZ) Wylacz();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,0
	goto	u69611
	goto	u69610
u69611:
	goto	l36820
u69610:
	
l36818:; BSR set to: 0

	call	_Wylacz	;wreg free
	line	201
	
l36820:
;main.c: 201: if(M._ROZRUCH) Rozruch();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,2
	goto	u69621
	goto	u69620
u69621:
	goto	l36824
u69620:
	
l36822:; BSR set to: 0

	call	_Rozruch	;wreg free
	line	202
	
l36824:
;main.c: 202: if(M._VWYBIEG) VWybieg();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,6
	goto	u69631
	goto	u69630
u69631:
	goto	l611
u69630:
	
l36826:; BSR set to: 0

	call	_VWybieg	;wreg free
	
l611:
	line	203
;main.c: 203: ReloadPlomien();
	call	_ReloadPlomien	;wreg free
	line	204
	
l36828:
;main.c: 204: if(M._RUSZ_PLOMIEN) RuszPlomien();
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,0
	goto	u69641
	goto	u69640
u69641:
	goto	l612
u69640:
	
l36830:; BSR set to: 0

	call	_RuszPlomien	;wreg free
	
l612:
	line	205
;main.c: 205: ReloadCiag();
	call	_ReloadCiag	;wreg free
	line	206
	
l36832:
;main.c: 206: if(M._RUSZ_CIAG) RuszCiag();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,7
	goto	u69651
	goto	u69650
u69651:
	goto	l36836
u69650:
	
l36834:; BSR set to: 0

	call	_RuszCiag	;wreg free
	line	207
	
l36836:
;main.c: 207: Proba48();
	call	_Proba48	;wreg free
	line	208
	
l36838:
;main.c: 208: if(M._RUSZ_48) Rusz48();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,3
	goto	u69661
	goto	u69660
u69661:
	goto	l614
u69660:
	
l36840:; BSR set to: 0

	call	_Rusz48	;wreg free
	
l614:
	line	209
;main.c: 209: Proba48Z3();
	call	_Proba48Z3	;wreg free
	line	210
	
l36842:
;main.c: 210: if(M._RUSZ_48Z3) Rusz48Z3();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,4
	goto	u69671
	goto	u69670
u69671:
	goto	l36846
u69670:
	
l36844:; BSR set to: 0

	call	_Rusz48Z3	;wreg free
	line	211
	
l36846:
;main.c: 211: if(M._BLOKUJ_3M) BlokadaL3();
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,3
	goto	u69681
	goto	u69680
u69681:
	goto	l36850
u69680:
	
l36848:; BSR set to: 0

	call	_BlokadaL3	;wreg free
	line	212
	
l36850:
;main.c: 212: if(M._BLOKUJ_15S)
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,4
	goto	u69691
	goto	u69690
u69691:
	goto	l36856
u69690:
	line	214
	
l36852:; BSR set to: 0

;main.c: 213: {
;main.c: 214: if(!M._PRACA) Blokada15S();
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u69701
	goto	u69700
u69701:
	goto	l36856
u69700:
	
l36854:; BSR set to: 0

	call	_Blokada15S	;wreg free
	line	216
	
l36856:
;main.c: 215: }
;main.c: 216: if(M._MODULUJ) Moduluj();
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,5
	goto	u69711
	goto	u69710
u69711:
	goto	l36860
u69710:
	
l36858:; BSR set to: 0

	call	_Moduluj	;wreg free
	line	217
	
l36860:; BSR set to: 0

;main.c: 217: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u69721
	goto	u69720
u69721:
	goto	l605
u69720:
	line	219
	
l36862:; BSR set to: 1

;main.c: 218: {
;main.c: 219: DetekcjaPrzeplywuWG();
	call	_DetekcjaPrzeplywuWG	;wreg free
	line	220
	
l36864:
;main.c: 220: if(M._RUSZ_POMPE) OczekujNaPrzeplywWG();
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,2
	goto	u69731
	goto	u69730
u69731:
	goto	l605
u69730:
	
l36866:; BSR set to: 0

	call	_OczekujNaPrzeplywWG	;wreg free
	goto	l605
	global	start
	goto	start
	opt stack 0
psect	text1,class=CODE,space=0,reloc=2
global __ptext1
__ptext1:
	line	223
GLOBAL	__end_of_main
	__end_of_main:
	signat	_main,88
	global	_InitAC

;; *************** function _InitAC *****************
;; Defined at:
;;		line 13 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text1
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
	line	13
	global	__size_of_InitAC
	__size_of_InitAC	equ	__end_of_InitAC-_InitAC
	
_InitAC:
	opt	stack 26
	line	14
	
l27796:; BSR set to: 0

;ac.c: 14: ADIE=0;
	bcf	c:(31982/8),(31982)&7	;volatile
	line	21
;ac.c: 21: ACQT0=0;
	bcf	c:(32259/8),(32259)&7	;volatile
	line	22
;ac.c: 22: ACQT1=0;
	bcf	c:(32260/8),(32260)&7	;volatile
	line	23
;ac.c: 23: ACQT2=0;
	bcf	c:(32261/8),(32261)&7	;volatile
	line	26
;ac.c: 26: ADCS0=0;
	bcf	c:(32256/8),(32256)&7	;volatile
	line	27
;ac.c: 27: ADCS1=1;
	bsf	c:(32257/8),(32257)&7	;volatile
	line	28
;ac.c: 28: ADCS2=0;
	bcf	c:(32258/8),(32258)&7	;volatile
	line	30
;ac.c: 30: VCFG0=0;
	bcf	c:(32268/8),(32268)&7	;volatile
	line	31
;ac.c: 31: VCFG1=0;
	bcf	c:(32269/8),(32269)&7	;volatile
	line	37
	
l27798:; BSR set to: 0

;ac.c: 37: ANSEL=0b00001111;
	movlw	low(0Fh)
	movwf	((c:3966)),c	;volatile
	line	38
	
l27800:; BSR set to: 0

;ac.c: 38: ANSELH=0b00000000;
	clrf	((c:3967)),c	;volatile
	line	40
	
l27802:; BSR set to: 0

;ac.c: 40: ADFM=0;
	bcf	c:(32263/8),(32263)&7	;volatile
	line	41
	
l27804:; BSR set to: 0

;ac.c: 41: ADON=1;
	bsf	c:(32272/8),(32272)&7	;volatile
	line	42
	
l27806:; BSR set to: 0

;ac.c: 42: CHS0=0;
	bcf	c:(32274/8),(32274)&7	;volatile
	line	43
	
l27808:; BSR set to: 0

;ac.c: 43: CHS1=0;
	bcf	c:(32275/8),(32275)&7	;volatile
	line	44
	
l27810:; BSR set to: 0

;ac.c: 44: CHS2=0;
	bcf	c:(32276/8),(32276)&7	;volatile
	line	45
	
l27812:; BSR set to: 0

;ac.c: 45: CHS3=0;
	bcf	c:(32277/8),(32277)&7	;volatile
	line	46
	
l43:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_InitAC
	__end_of_InitAC:
	signat	_InitAC,88
	global	_InitI2C

;; *************** function _InitI2C *****************
;; Defined at:
;;		line 37 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text2,class=CODE,space=0,reloc=2
global __ptext2
__ptext2:
psect	text2
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
	line	37
	global	__size_of_InitI2C
	__size_of_InitI2C	equ	__end_of_InitI2C-_InitI2C
	
_InitI2C:; BSR set to: 0

	opt	stack 26
	line	39
	
l27910:; BSR set to: 0

;i2c_s.c: 39: TRISC3=1;
	bsf	c:(31907/8),(31907)&7	;volatile
	line	40
;i2c_s.c: 40: TRISC4=1;
	bsf	c:(31908/8),(31908)&7	;volatile
	line	43
	
l27912:; BSR set to: 0

;i2c_s.c: 43: SSPADD=0b11001100;
	movlw	low(0CCh)
	movwf	((c:4040)),c	;volatile
	line	46
	
l27914:; BSR set to: 0

;i2c_s.c: 46: SSPM0=0;
	bcf	c:(32304/8),(32304)&7	;volatile
	line	47
	
l27916:; BSR set to: 0

;i2c_s.c: 47: SSPM1=1;
	bsf	c:(32305/8),(32305)&7	;volatile
	line	48
	
l27918:; BSR set to: 0

;i2c_s.c: 48: SSPM2=1;
	bsf	c:(32306/8),(32306)&7	;volatile
	line	49
	
l27920:; BSR set to: 0

;i2c_s.c: 49: SSPM3=0;
	bcf	c:(32307/8),(32307)&7	;volatile
	line	50
	
l27922:; BSR set to: 0

;i2c_s.c: 50: SSPEN=1;
	bsf	c:(32309/8),(32309)&7	;volatile
	line	51
	
l27924:; BSR set to: 0

;i2c_s.c: 51: CKP=1;
	bsf	c:(32308/8),(32308)&7	;volatile
	line	54
	
l27926:; BSR set to: 0

;i2c_s.c: 54: SMP=1;
	bsf	c:(32319/8),(32319)&7	;volatile
	line	55
	
l27928:; BSR set to: 0

;i2c_s.c: 55: CKE=0;
	bcf	c:(32318/8),(32318)&7	;volatile
	line	58
	
l27930:; BSR set to: 0

;i2c_s.c: 58: SSPIE=1;
	bsf	c:(31979/8),(31979)&7	;volatile
	line	63
	
l27932:; BSR set to: 0

;i2c_s.c: 63: SSPIP=1;
	bsf	c:(31995/8),(31995)&7	;volatile
	line	65
	
l27934:; BSR set to: 0

;i2c_s.c: 65: BufI2C.indeks=0;
	movlb	2	; () banked
	clrf	((_BufI2C))&0ffh
	line	66
	
l27936:; BSR set to: 2

;i2c_s.c: 66: DtI2C.error=0;
	movlb	1	; () banked
	clrf	(0+(_DtI2C+01h))&0ffh
	line	67
	
l27938:; BSR set to: 1

;i2c_s.c: 67: DtI2C.krok=0;
	bcf	((_DtI2C))&0ffh,0
	line	68
	
l166:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_InitI2C
	__end_of_InitI2C:
	signat	_InitI2C,88
	global	_InitOsc

;; *************** function _InitOsc *****************
;; Defined at:
;;		line 9 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\osc.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFFF/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text3,class=CODE,space=0,reloc=2
global __ptext3
__ptext3:
psect	text3
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\osc.c"
	line	9
	global	__size_of_InitOsc
	__size_of_InitOsc	equ	__end_of_InitOsc-_InitOsc
	
_InitOsc:; BSR set to: 1

	opt	stack 26
	line	10
	
l28168:
;osc.c: 10: IRCF2=1;
	bsf	c:(32414/8),(32414)&7	;volatile
	line	11
;osc.c: 11: IRCF1=1;
	bsf	c:(32413/8),(32413)&7	;volatile
	line	12
;osc.c: 12: IRCF0=0;
	bcf	c:(32412/8),(32412)&7	;volatile
	line	13
;osc.c: 13: SCS1=0;
	bcf	c:(32409/8),(32409)&7	;volatile
	line	14
;osc.c: 14: SCS0=0;
	bcf	c:(32408/8),(32408)&7	;volatile
	line	22
;osc.c: 22: PLLEN=1;
	bsf	c:(31966/8),(31966)&7	;volatile
	line	26
	
l1821:
	return
	opt stack 0
GLOBAL	__end_of_InitOsc
	__end_of_InitOsc:
	signat	_InitOsc,88
	global	_InitGlobal

;; *************** function _InitGlobal *****************
;; Defined at:
;;		line 3815 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFFF/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text4,class=CODE,space=0,reloc=2
global __ptext4
__ptext4:
psect	text4
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3815
	global	__size_of_InitGlobal
	__size_of_InitGlobal	equ	__end_of_InitGlobal-_InitGlobal
	
_InitGlobal:
	opt	stack 26
	line	3817
	
l28170:
;main.c: 3817: IPEN=1;
	bsf	c:(32391/8),(32391)&7	;volatile
	line	3819
;main.c: 3819: GIEH=1;
	bsf	c:(32663/8),(32663)&7	;volatile
	line	3820
;main.c: 3820: GIEL=1;
	bsf	c:(32662/8),(32662)&7	;volatile
	line	3821
	
l1806:
	return
	opt stack 0
GLOBAL	__end_of_InitGlobal
	__end_of_InitGlobal:
	signat	_InitGlobal,88
	global	_InitTimer1

;; *************** function _InitTimer1 *****************
;; Defined at:
;;		line 17 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\timer1.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFFF/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text5,class=CODE,space=0,reloc=2
global __ptext5
__ptext5:
psect	text5
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\timer1.c"
	line	17
	global	__size_of_InitTimer1
	__size_of_InitTimer1	equ	__end_of_InitTimer1-_InitTimer1
	
_InitTimer1:
	opt	stack 26
	line	20
	
l28172:
;timer1.c: 20: TMR1H=(unsigned char)(RldT1>>8);
	movlw	low(063h)
	movwf	((c:4047)),c	;volatile
	line	21
;timer1.c: 21: TMR1L=(unsigned char)(RldT1&0xFF);
	movlw	low(0BFh)
	movwf	((c:4046)),c	;volatile
	line	24
	
l28174:
;timer1.c: 24: TMR1IF=0;
	bcf	c:(31984/8),(31984)&7	;volatile
	line	25
	
l28176:
;timer1.c: 25: TMR1IE=1;
	bsf	c:(31976/8),(31976)&7	;volatile
	line	26
	
l28178:
;timer1.c: 26: TMR1IP=1;
	bsf	c:(31992/8),(31992)&7	;volatile
	line	29
	
l28180:
;timer1.c: 29: T1RD16=1;
	bsf	c:(32367/8),(32367)&7	;volatile
	line	37
	
l28182:
;timer1.c: 37: T1CKPS1=0;
	bcf	c:(32365/8),(32365)&7	;volatile
	line	38
	
l28184:
;timer1.c: 38: T1CKPS0=1;
	bsf	c:(32364/8),(32364)&7	;volatile
	line	48
	
l28186:
;timer1.c: 48: TMR1CS=0;
	bcf	c:(32361/8),(32361)&7	;volatile
	line	49
	
l28188:
;timer1.c: 49: TMR1ON=1;
	bsf	c:(32360/8),(32360)&7	;volatile
	line	51
	
l3753:
	return
	opt stack 0
GLOBAL	__end_of_InitTimer1
	__end_of_InitTimer1:
	signat	_InitTimer1,88
	global	_InitPort

;; *************** function _InitPort *****************
;; Defined at:
;;		line 231 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RefStan
;;		_FrsStan
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text6,class=CODE,space=0,reloc=2
global __ptext6
__ptext6:
psect	text6
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
	line	231
	global	__size_of_InitPort
	__size_of_InitPort	equ	__end_of_InitPort-_InitPort
	
_InitPort:
	opt	stack 25
	line	244
	
l28190:
;port.c: 244: PORTA=0b00000000;
	clrf	((c:3968)),c	;volatile
	line	245
;port.c: 245: TRISA=0b11111111;
	setf	((c:3986)),c	;volatile
	line	246
;port.c: 246: PORTB=0b00000000;
	clrf	((c:3969)),c	;volatile
	line	247
;port.c: 247: TRISB=0b11111111;
	setf	((c:3987)),c	;volatile
	line	248
;port.c: 248: PORTC=0b00000000;
	clrf	((c:3970)),c	;volatile
	line	249
	
l28192:
;port.c: 249: TRISC=0b11111001;
	movlw	low(0F9h)
	movwf	((c:3988)),c	;volatile
	line	250
	
l28194:
;port.c: 250: PORTD=0b00000000;
	clrf	((c:3971)),c	;volatile
	line	251
;port.c: 251: TRISD=0b00110000;
	movlw	low(030h)
	movwf	((c:3989)),c	;volatile
	line	252
	
l28196:
;port.c: 252: PORTE=0b00000000;
	clrf	((c:3972)),c	;volatile
	line	253
	
l28198:
;port.c: 253: TRISE=(TRISE&0b11111000)|(0b11111000&0b00000111);
	movlw	(0F8h)&0ffh
	andwf	((c:3990)),c	;volatile
	line	256
	
l28200:
;port.c: 256: RefStan();
	call	_RefStan	;wreg free
	line	257
;port.c: 257: FrsStan();
	call	_FrsStan	;wreg free
	line	259
	
l2344:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_InitPort
	__end_of_InitPort:
	signat	_InitPort,88
	global	_InitWsw

;; *************** function _InitWsw *****************
;; Defined at:
;;		line 50 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1   36[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text7,class=CODE,space=0,reloc=2
global __ptext7
__ptext7:
psect	text7
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	50
	global	__size_of_InitWsw
	__size_of_InitWsw	equ	__end_of_InitWsw-_InitWsw
	
_InitWsw:; BSR set to: 0

	opt	stack 25
	line	54
	
l36868:; BSR set to: 0

;wsw.c: 51: unsigned char i;
;wsw.c: 54: PORTEbits.RE1=0;
	bcf	((c:3972)),c,1	;volatile
	line	55
;wsw.c: 55: PORTEbits.RE2=0;
	bcf	((c:3972)),c,2	;volatile
	line	56
;wsw.c: 56: PORTEbits.RE0=0;
	bcf	((c:3972)),c,0	;volatile
	line	58
;wsw.c: 58: wbty[0]=0xff;
	movlb	1	; () banked
	setf	((_wbty))&0ffh
	line	59
;wsw.c: 59: wbty[1]=0xff;
	setf	(0+(_wbty+01h))&0ffh
	line	60
;wsw.c: 60: wsdid=0x00;
	clrf	((c:_wsdid)),c
	line	69
;wsw.c: 69: for(i=0;i<10-1;i++) PWD[i].St.focus=0;
	clrf	((c:InitWsw@i)),c
	
l36874:
	movf	((c:InitWsw@i)),c,w
	mullw	04h
	movlb	2	; () banked
	movlw	low(_PWD)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_PWD)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	((0 & ((1<<1)-1))<<0)|not (((1<<1)-1)<<0)
	andwf	(indf2)&0ffh
	
l36876:; BSR set to: 2

	incf	((c:InitWsw@i)),c
	
l36878:; BSR set to: 2

	movlw	(09h-1)
	cpfsgt	((c:InitWsw@i)),c
	goto	u69741
	goto	u69740
u69741:
	goto	l36874
u69740:
	line	76
	
l36880:; BSR set to: 2

;wsw.c: 76: SetStatus(&PWD[3],0b0100000000000000,0b1111111111111111);
	movlw	high(_PWD+0Ch)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+0Ch)
	movwf	((c:?_SetStatus)),c
	movlw	high(04000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	77
;wsw.c: 77: SetStatus(&PWD[4],0b0100000000000000,0b1111111111111111);
	movlw	high(_PWD+010h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+010h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	78
;wsw.c: 78: SetStatus(&PWD[5],0b0010000000000000,0b1111111111111111);
	movlw	high(_PWD+014h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+014h)
	movwf	((c:?_SetStatus)),c
	movlw	high(02000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(02000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	79
;wsw.c: 79: SetStatus(&PWD[6],0b0100000000000000|0b0000010000000000,0b1111111111111111);
	movlw	high(_PWD+018h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+018h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04400h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04400h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	80
;wsw.c: 80: SetStatus(&PWD[7],0b0100000000000000,0b1111111111111111);
	movlw	high(_PWD+01Ch)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+01Ch)
	movwf	((c:?_SetStatus)),c
	movlw	high(04000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	81
;wsw.c: 81: SetStatus(&PWD[8],0b0100000000000000,0b1111111111111111);
	movlw	high(_PWD+020h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+020h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	87
	
l4394:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_InitWsw
	__end_of_InitWsw:
	signat	_InitWsw,88
	global	_InitPWM

;; *************** function _InitPWM *****************
;; Defined at:
;;		line 12 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text8,class=CODE,space=0,reloc=2
global __ptext8
__ptext8:
psect	text8
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
	line	12
	global	__size_of_InitPWM
	__size_of_InitPWM	equ	__end_of_InitPWM-_InitPWM
	
_InitPWM:; BSR set to: 2

	opt	stack 26
	line	14
	
l28216:; BSR set to: 2

;pwm.c: 14: CCP1CON=0;
	clrf	((c:4029)),c	;volatile
	line	15
;pwm.c: 15: CCPR1L=0;
	clrf	((c:4030)),c	;volatile
	line	16
;pwm.c: 16: CCPR1H=0;
	clrf	((c:4031)),c	;volatile
	line	17
	
l28218:; BSR set to: 2

;pwm.c: 17: CCP1CON=0b00001100;
	movlw	low(0Ch)
	movwf	((c:4029)),c	;volatile
	line	19
	
l28220:; BSR set to: 2

;pwm.c: 19: CCP2CON=0;
	clrf	((c:4026)),c	;volatile
	line	20
	
l28222:; BSR set to: 2

;pwm.c: 20: CCPR2L=0;
	clrf	((c:4027)),c	;volatile
	line	21
	
l28224:; BSR set to: 2

;pwm.c: 21: CCPR2H=0;
	clrf	((c:4028)),c	;volatile
	line	22
;pwm.c: 22: CCP2CON=0b00001100;
	movlw	low(0Ch)
	movwf	((c:4026)),c	;volatile
	line	24
	
l28226:; BSR set to: 2

;pwm.c: 24: TMR2=0;
	clrf	((c:4044)),c	;volatile
	line	25
;pwm.c: 25: T2CON=0b00000010;
	movlw	low(02h)
	movwf	((c:4042)),c	;volatile
	line	26
;pwm.c: 26: PR2=0x7C;
	movlw	low(07Ch)
	movwf	((c:4043)),c	;volatile
	line	27
	
l28228:; BSR set to: 2

;pwm.c: 27: TMR2IE=1;
	bsf	c:(31977/8),(31977)&7	;volatile
	line	28
	
l28230:; BSR set to: 2

;pwm.c: 28: TMR2ON=1;
	bsf	c:(32338/8),(32338)&7	;volatile
	line	40
;pwm.c: 40: PWM.HIPWM=(0x7C+1)<<1;
	movlw	low(0FAh)
	movlb	0	; () banked
	movwf	(0+(_PWM+08h))&0ffh	;volatile
	line	53
	
l28232:; BSR set to: 0

;pwm.c: 53: PWM.BufPWM=0;
	clrf	(0+(_PWM+01h))&0ffh	;volatile
	line	54
	
l28234:; BSR set to: 0

;pwm.c: 54: PWM.NewPWM=0;
	clrf	(0+(_PWM+04h))&0ffh	;volatile
	line	55
	
l28236:; BSR set to: 0

;pwm.c: 55: PWM.BufOSC=0;
	clrf	(0+(_PWM+02h))&0ffh	;volatile
	line	56
	
l28238:; BSR set to: 0

;pwm.c: 56: PWM.NewOSC=0;
	clrf	(0+(_PWM+03h))&0ffh	;volatile
	line	57
	
l28240:; BSR set to: 0

;pwm.c: 57: PWM.BufPWM2=0;
	clrf	(0+(_PWM+06h))&0ffh	;volatile
	line	58
	
l28242:; BSR set to: 0

;pwm.c: 58: PWM.NewPWM2=0;
	clrf	(0+(_PWM+07h))&0ffh	;volatile
	line	59
	
l2559:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_InitPWM
	__end_of_InitPWM:
	signat	_InitPWM,88
	global	_InitUart

;; *************** function _InitUart *****************
;; Defined at:
;;		line 21 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text9,class=CODE,space=0,reloc=2
global __ptext9
__ptext9:
psect	text9
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
	line	21
	global	__size_of_InitUart
	__size_of_InitUart	equ	__end_of_InitUart-_InitUart
	
_InitUart:; BSR set to: 0

	opt	stack 26
	line	26
	
l28244:; BSR set to: 1

;uart9b.c: 26: CSRC=0;
	bcf	c:(32103/8),(32103)&7	;volatile
	line	27
;uart9b.c: 27: RX9=1;
	bsf	c:(32094/8),(32094)&7	;volatile
	line	28
	
l28246:; BSR set to: 1

;uart9b.c: 28: SPBRG=((8*4*1000000/2400)/64)-1;
	movlw	low(0CFh)
	movwf	((c:4015)),c	;volatile
	line	29
	
l28248:; BSR set to: 1

;uart9b.c: 29: SYNC=0;
	bcf	c:(32100/8),(32100)&7	;volatile
	line	30
	
l28250:; BSR set to: 1

;uart9b.c: 30: BRGH=0;
	bcf	c:(32098/8),(32098)&7	;volatile
	line	31
	
l28252:; BSR set to: 1

;uart9b.c: 31: ADDEN=1;
	bsf	c:(32091/8),(32091)&7	;volatile
	line	32
	
l28254:; BSR set to: 1

;uart9b.c: 32: TX9=1;
	bsf	c:(32102/8),(32102)&7	;volatile
	line	33
	
l28256:; BSR set to: 1

;uart9b.c: 33: RCIP=1;
	bsf	c:(31997/8),(31997)&7	;volatile
	line	34
	
l28258:; BSR set to: 1

;uart9b.c: 34: RCIE=1;
	bsf	c:(31981/8),(31981)&7	;volatile
	line	35
	
l28260:; BSR set to: 1

;uart9b.c: 35: TXIP=1;
	bsf	c:(31996/8),(31996)&7	;volatile
	line	36
	
l28262:; BSR set to: 1

;uart9b.c: 36: TXEN=1;
	bsf	c:(32101/8),(32101)&7	;volatile
	line	37
	
l28264:; BSR set to: 1

;uart9b.c: 37: SPEN=1;
	bsf	c:(32095/8),(32095)&7	;volatile
	line	38
	
l28266:; BSR set to: 1

;uart9b.c: 38: CREN=1;
	bsf	c:(32092/8),(32092)&7	;volatile
	line	41
	
l28268:; BSR set to: 1

;uart9b.c: 41: UADt.RData=0;
	bcf	((_UADt))&0ffh,0
	line	42
	
l28270:; BSR set to: 1

;uart9b.c: 42: UADt.RErrREC=0;
	bcf	((_UADt))&0ffh,2
	line	43
	
l28272:; BSR set to: 1

;uart9b.c: 43: UADt.RErrBUF=0;
	bcf	((_UADt))&0ffh,3
	line	45
	
l28274:; BSR set to: 1

;uart9b.c: 45: UADt.TData=0;
	bcf	((_UADt))&0ffh,4
	line	46
	
l28276:; BSR set to: 1

;uart9b.c: 46: UADt.RNData=0;
	clrf	(0+(_UADt+02h))&0ffh
	line	47
	
l28278:; BSR set to: 1

;uart9b.c: 47: UADt.TNData=0;
	clrf	(0+(_UADt+03h))&0ffh
	line	49
	
l28280:; BSR set to: 1

;uart9b.c: 49: UADt.REnd=0;
	bcf	((_UADt))&0ffh,1
	line	50
	
l28282:; BSR set to: 1

;uart9b.c: 50: UADt.TEnd=0;
	bcf	((_UADt))&0ffh,5
	line	51
	
l28284:; BSR set to: 1

;uart9b.c: 51: UADt.indeks=0;
	clrf	(0+(_UADt+01h))&0ffh
	line	53
	
l28286:; BSR set to: 1

;uart9b.c: 53: TXIE=0;
	bcf	c:(31980/8),(31980)&7	;volatile
	line	54
	
l4037:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_InitUart
	__end_of_InitUart:
	signat	_InitUart,88
	global	_InitDataPmr

;; *************** function _InitDataPmr *****************
;; Defined at:
;;		line 38 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text10,class=CODE,space=0,reloc=2
global __ptext10
__ptext10:
psect	text10
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	38
	global	__size_of_InitDataPmr
	__size_of_InitDataPmr	equ	__end_of_InitDataPmr-_InitDataPmr
	
_InitDataPmr:; BSR set to: 1

	opt	stack 26
	line	39
	
l28288:; BSR set to: 1

;pomiar.c: 39: DtCO._err_CO=0;
	movlb	0	; () banked
	bcf	((_DtCO))&0ffh,0
	line	40
;pomiar.c: 40: DtCO._su_CO=0;
	bcf	((_DtCO))&0ffh,1
	line	41
;pomiar.c: 41: DtCO._ad_CO=0;
	bcf	((_DtCO))&0ffh,2
	line	42
;pomiar.c: 42: DtCO._su_SRW_CO=0;
	bcf	((_DtCO))&0ffh,3
	line	43
;pomiar.c: 43: DtCO._ad_SRW_CO=0;
	bcf	((_DtCO))&0ffh,4
	line	44
;pomiar.c: 44: DtCO._cold_CO=0;
	bcf	(0+(_DtCO+01h))&0ffh,2
	line	45
;pomiar.c: 45: DtCO._hot_CO=0;
	bcf	(0+(_DtCO+01h))&0ffh,3
	line	46
;pomiar.c: 46: DtCO._on_DZ_CO=0;
	bcf	((_DtCO))&0ffh,5
	line	47
;pomiar.c: 47: DtCO._su_DZ_CO=0;
	bcf	((_DtCO))&0ffh,6
	line	48
;pomiar.c: 48: DtCO._ad_DZ_CO=0;
	bcf	((_DtCO))&0ffh,7
	line	49
;pomiar.c: 49: DtCO._ptwp_CO=0;
	bcf	(0+(_DtCO+01h))&0ffh,0
	line	50
;pomiar.c: 50: DtCO._pz_CO=0;
	bcf	(0+(_DtCO+01h))&0ffh,1
	line	51
;pomiar.c: 51: DtCO.indCO=0;
	clrf	(0+(_DtCO+0Ah))&0ffh
	line	53
;pomiar.c: 53: DtCW._err_CW=0;
	bcf	((_DtCW))&0ffh,0
	line	54
;pomiar.c: 54: DtCW._su_CW=0;
	bcf	((_DtCW))&0ffh,1
	line	55
;pomiar.c: 55: DtCW._ad_CW=0;
	bcf	((_DtCW))&0ffh,2
	line	56
;pomiar.c: 56: DtCW._on_DZ_CW=0;
	bcf	((_DtCW))&0ffh,4
	line	57
;pomiar.c: 57: DtCW._su_DZ_CW=0;
	bcf	((_DtCW))&0ffh,5
	line	58
;pomiar.c: 58: DtCW._ad_DZ_CW=0;
	bcf	((_DtCW))&0ffh,6
	line	59
;pomiar.c: 59: DtCW.indCW=0;
	clrf	(0+(_DtCW+0Ah))&0ffh
	line	61
;pomiar.c: 61: DtCS._hi=0;
	bcf	((c:_DtCS)),c,0
	line	62
;pomiar.c: 62: DtCS._lo=0;
	bcf	((c:_DtCS)),c,1
	line	63
;pomiar.c: 63: DtCS._no=0;
	bcf	((c:_DtCS)),c,2
	line	64
;pomiar.c: 64: DtCS._error=0;
	bcf	((c:_DtCS)),c,3
	line	65
;pomiar.c: 65: DtCS._work=1;
	bsf	((c:_DtCS)),c,4
	line	66
	
l1870:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_InitDataPmr
	__end_of_InitDataPmr:
	signat	_InitDataPmr,88
	global	_ClearData

;; *************** function _ClearData *****************
;; Defined at:
;;		line 229 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text11,class=CODE,space=0,reloc=2
global __ptext11
__ptext11:
psect	text11
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	229
	global	__size_of_ClearData
	__size_of_ClearData	equ	__end_of_ClearData-_ClearData
	
_ClearData:; BSR set to: 0

	opt	stack 26
	line	230
	
l28290:; BSR set to: 0

;main.c: 230: DtKNF.enknf=0;
	movlb	1	; () banked
	bcf	((_DtKNF))&0ffh,0
	line	231
;main.c: 231: M._pob_KCO=0;
	movlb	0	; () banked
	clrf	((_M))&0ffh
	clrf	((_M+1))&0ffh
	line	232
;main.c: 232: M._pob_KCW=0;
	clrf	(0+(_M+02h))&0ffh
	clrf	(1+(_M+02h))&0ffh
	line	233
;main.c: 233: M._pob_AL=0;
	clrf	(0+(_M+06h))&0ffh
	clrf	(1+(_M+06h))&0ffh
	line	234
;main.c: 234: M._pob_SRW=0;
	clrf	(0+(_M+04h))&0ffh
	clrf	(1+(_M+04h))&0ffh
	line	235
;main.c: 235: M._pob_CO=0;
	clrf	(0+(_M+0Ah))&0ffh
	clrf	(1+(_M+0Ah))&0ffh
	line	236
;main.c: 236: M._pob_CW=0;
	clrf	(0+(_M+08h))&0ffh
	clrf	(1+(_M+08h))&0ffh
	line	237
;main.c: 237: M._pob_DzCO=0;
	clrf	(0+(_M+0Ch))&0ffh
	clrf	(1+(_M+0Ch))&0ffh
	line	238
;main.c: 238: M._pob_DzCW=0;
	clrf	(0+(_M+0Eh))&0ffh
	clrf	(1+(_M+0Eh))&0ffh
	line	240
;main.c: 240: M._WYLACZ=0;
	bcf	(0+(_M+010h))&0ffh,0
	line	241
;main.c: 241: M._ZMKCOCW=0;
	bcf	(0+(_M+010h))&0ffh,1
	line	242
;main.c: 242: M._ROZRUCH=0;
	bcf	(0+(_M+010h))&0ffh,2
	line	243
;main.c: 243: M._RUSZ_48=0;
	bcf	(0+(_M+010h))&0ffh,3
	line	244
;main.c: 244: M._RUSZ_48Z3=0;
	bcf	(0+(_M+010h))&0ffh,4
	line	245
;main.c: 245: M._RUSZ_PWR=0;
	bcf	(0+(_M+010h))&0ffh,5
	line	246
;main.c: 246: M._VWYBIEG=0;
	bcf	(0+(_M+010h))&0ffh,6
	line	247
;main.c: 247: M._MODULUJ=0;
	bcf	(0+(_M+011h))&0ffh,5
	line	248
;main.c: 248: M._RUSZ_CIAG=0;
	bcf	(0+(_M+010h))&0ffh,7
	line	249
;main.c: 249: M._RUSZ_PLOMIEN=0;
	bcf	(0+(_M+011h))&0ffh,0
	line	250
;main.c: 250: M._RUSZ_RPLM=0;
	bcf	(0+(_M+011h))&0ffh,1
	line	251
;main.c: 251: M._RUSZ_POMPE=0;
	bcf	(0+(_M+011h))&0ffh,2
	line	252
;main.c: 252: M._BLOKUJ_3M=0;
	bcf	(0+(_M+011h))&0ffh,3
	line	253
;main.c: 253: M._BLOKUJ_15S=0;
	bcf	(0+(_M+011h))&0ffh,4
	line	254
;main.c: 254: M._MODULUJ=0;
	bcf	(0+(_M+011h))&0ffh,5
	line	256
;main.c: 256: M._AKTYWNE_AL=0;
	clrf	(0+(_M+014h))&0ffh
	clrf	(1+(_M+014h))&0ffh
	line	257
;main.c: 257: M._AKTYWNE_SRW=0;
	clrf	(0+(_M+012h))&0ffh
	clrf	(1+(_M+012h))&0ffh
	line	258
;main.c: 258: M._AKTYWNE_PGD=0;
	clrf	(0+(_M+016h))&0ffh
	clrf	(1+(_M+016h))&0ffh
	line	259
;main.c: 259: M._AKTYWNE_KNF=0;
	clrf	(0+(_M+018h))&0ffh
	clrf	(1+(_M+018h))&0ffh
	line	260
;main.c: 260: M._RUSZ_NTC_CO=0;
	bcf	(0+(_M+01Ah))&0ffh,0
	line	261
;main.c: 261: M._RUSZ_NTC_CW=0;
	bcf	(0+(_M+01Ah))&0ffh,1
	line	262
;main.c: 262: M._RUSZ_STB=0;
	bcf	(0+(_M+01Ah))&0ffh,3
	line	263
;main.c: 263: M._RUSZ_MOD=0;
	bcf	(0+(_M+01Ah))&0ffh,4
	line	264
;main.c: 264: M._RUSZ_CISN=0;
	bcf	(0+(_M+01Ah))&0ffh,5
	line	265
;main.c: 265: M._RUSZ_NCISN=0;
	bcf	(0+(_M+01Ah))&0ffh,6
	line	267
;main.c: 267: M._PW_START=0;
	bcf	(0+(_M+01Bh))&0ffh,0
	line	268
;main.c: 268: M._RS_START=0;
	bcf	(0+(_M+01Ah))&0ffh,7
	line	269
;main.c: 269: M._TURBO=0;
	bcf	(0+(_M+01Bh))&0ffh,1
	line	270
;main.c: 270: M._PRACA=0;
	bcf	(0+(_M+01Bh))&0ffh,2
	line	271
;main.c: 271: M._OST_PL=0;
	bcf	(0+(_M+01Bh))&0ffh,3
	line	272
;main.c: 272: M._RUN_MNMOD=0;
	bcf	(0+(_M+01Bh))&0ffh,4
	line	273
;main.c: 273: M._KCW_PMP=0;
	bcf	(0+(_M+01Bh))&0ffh,5
	line	274
;main.c: 274: M._DE_VNT=0;
	bcf	(0+(_M+01Bh))&0ffh,6
	line	275
;main.c: 275: M._DE_PMP=0;
	bcf	(0+(_M+01Ch))&0ffh,2
	line	276
;main.c: 276: M._RPM_CW=0;
	bcf	(0+(_M+01Bh))&0ffh,7
	line	277
;main.c: 277: M._RUSZ_NTC_IN=0;
	bcf	(0+(_M+01Ah))&0ffh,2
	line	279
;main.c: 279: M.ERR_BTY=0;
	clrf	(0+(_M+022h))&0ffh
	line	280
;main.c: 280: M.ROZ=0;
	clrf	(0+(_M+023h))&0ffh
	line	281
;main.c: 281: M.R48=0;
	clrf	(0+(_M+024h))&0ffh
	line	282
;main.c: 282: M.R48Z3=0;
	clrf	(0+(_M+025h))&0ffh
	line	283
;main.c: 283: M.BL3=0;
	clrf	(0+(_M+026h))&0ffh
	line	284
;main.c: 284: M.BL15=0;
	clrf	(0+(_M+027h))&0ffh
	line	285
;main.c: 285: M.WYL=0;
	clrf	(0+(_M+028h))&0ffh
	line	286
;main.c: 286: M.RPR=0;
	clrf	(0+(_M+029h))&0ffh
	line	287
;main.c: 287: M.RPL=0;
	clrf	(0+(_M+02Ah))&0ffh
	line	288
;main.c: 288: M.RCI=0;
	clrf	(0+(_M+02Bh))&0ffh
	line	289
;main.c: 289: M.MNM=0;
	clrf	(0+(_M+02Ch))&0ffh
	line	290
;main.c: 290: M.ZKP=0;
	clrf	(0+(_M+02Dh))&0ffh
	line	291
;main.c: 291: M.VWB=0;
	clrf	(0+(_M+02Eh))&0ffh
	line	292
;main.c: 292: M.SRV=0;
	clrf	(0+(_M+02Fh))&0ffh
	line	293
;main.c: 293: M.KRS=0;
	clrf	(0+(_M+030h))&0ffh
	line	294
;main.c: 294: M.HVZ=0;
	clrf	(0+(_M+031h))&0ffh
	line	295
;main.c: 295: M.LICZNIK_PL=0;
	clrf	(0+(_M+01Dh))&0ffh
	line	296
;main.c: 296: M.LICZNIK_CIG=0;
	clrf	(0+(_M+01Eh))&0ffh
	line	297
;main.c: 297: M.LICZNIK_CIG2=0;
	clrf	(0+(_M+01Fh))&0ffh
	line	298
;main.c: 298: M.LICZNIK_CIG3=0;
	clrf	(0+(_M+020h))&0ffh
	line	299
;main.c: 299: M.DPR=0;
	clrf	(0+(_M+032h))&0ffh
	line	301
;main.c: 301: PORTDbits.RD3=0;
	bcf	((c:3971)),c,3	;volatile
	line	302
;main.c: 302: PORTDbits.RD0=0;
	bcf	((c:3971)),c,0	;volatile
	line	303
;main.c: 303: PORTDbits.RD2=0;
	bcf	((c:3971)),c,2	;volatile
	line	304
	
l627:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ClearData
	__end_of_ClearData:
	signat	_ClearData,88
	global	_TestScr

;; *************** function _TestScr *****************
;; Defined at:
;;		line 300 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_SetStatus
;;		_SetData
;;		_SetDiode
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text12,class=CODE,space=0,reloc=2
global __ptext12
__ptext12:
psect	text12
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	300
	global	__size_of_TestScr
	__size_of_TestScr	equ	__end_of_TestScr-_TestScr
	
_TestScr:; BSR set to: 0

	opt	stack 24
	line	301
	
l36882:; BSR set to: 0

;print.c: 301: SetStatus(&PWD[9],0b0000000000000000|0b0000010000000000|0b0000100000000000,0b1111111111111111);
	movlb	2	; () banked
	movlw	high(_PWD+024h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+024h)
	movwf	((c:?_SetStatus)),c
	movlw	high(0C00h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(0C00h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	302
;print.c: 302: SetData(&PWD[9],0b00000000,0b00000000);
	movlw	high(_PWD+024h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_PWD+024h)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+03h)),c
	call	_SetData	;wreg free
	line	304
	
l36884:; BSR set to: 2

;print.c: 304: SetDiode(0b00000001|0b00001000|0b00000010|0b00000100,1);
	movlw	low(01h)
	movwf	((c:?_SetDiode)),c
	movlw	(0Fh)&0ffh
	
	call	_SetDiode
	line	306
	
l2516:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_TestScr
	__end_of_TestScr:
	signat	_TestScr,88
	global	_PwrOnDelay

;; *************** function _PwrOnDelay *****************
;; Defined at:
;;		line 8 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwron.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : C/2
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;;		_RTdS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text13,class=CODE,space=0,reloc=2
global __ptext13
__ptext13:
psect	text13
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwron.c"
	line	8
	global	__size_of_PwrOnDelay
	__size_of_PwrOnDelay	equ	__end_of_PwrOnDelay-_PwrOnDelay
	
_PwrOnDelay:; BSR set to: 2

	opt	stack 25
	line	9
	
l36886:
;pwron.c: 9: StartRTdS(0);
	movlw	(0)&0ffh
	
	call	_StartRTdS
	line	10
;pwron.c: 10: while(RTdS(0)<15)
	goto	l36888
	
l2636:; BSR set to: 1

	line	12
# 12 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwron.c"
clrwdt ;# 
psect	text13
	line	10
	
l36888:
	movlw	(0)&0ffh
	
	call	_RTdS
	movwf	(??_PwrOnDelay+0+0)&0ffh,c
	movlw	(0Fh)&0ffh
	subwf	((??_PwrOnDelay+0+0)),c,w
	btfss	status,0
	goto	u69751
	goto	u69750
u69751:
	goto	l2636
u69750:
	line	15
	
l2638:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PwrOnDelay
	__end_of_PwrOnDelay:
	signat	_PwrOnDelay,88
	global	_EndTestScr

;; *************** function _EndTestScr *****************
;; Defined at:
;;		line 308 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_SetStatus
;;		_SetData
;;		_SetDiode
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text14,class=CODE,space=0,reloc=2
global __ptext14
__ptext14:
psect	text14
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	308
	global	__size_of_EndTestScr
	__size_of_EndTestScr	equ	__end_of_EndTestScr-_EndTestScr
	
_EndTestScr:; BSR set to: 1

	opt	stack 24
	line	309
	
l36890:; BSR set to: 1

;print.c: 309: SetStatus(&PWD[9],0b0100000000000000,0b1111111111111111);
	movlb	2	; () banked
	movlw	high(_PWD+024h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+024h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	310
;print.c: 310: SetData(&PWD[9],0,0);
	movlw	high(_PWD+024h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_PWD+024h)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+03h)),c
	call	_SetData	;wreg free
	line	312
	
l36892:; BSR set to: 2

;print.c: 312: SetDiode(0b00000001|0b00001000|0b00000010|0b00000100,0);
	movlw	low(0)
	movwf	((c:?_SetDiode)),c
	movlw	(0Fh)&0ffh
	
	call	_SetDiode
	line	314
	
l2519:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_EndTestScr
	__end_of_EndTestScr:
	signat	_EndTestScr,88
	global	_ClsScr

;; *************** function _ClsScr *****************
;; Defined at:
;;		line 38 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_WswOff
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text15,class=CODE,space=0,reloc=2
global __ptext15
__ptext15:
psect	text15
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	38
	global	__size_of_ClsScr
	__size_of_ClsScr	equ	__end_of_ClsScr-_ClsScr
	
_ClsScr:; BSR set to: 2

	opt	stack 25
	line	39
	
l28304:; BSR set to: 0

;print.c: 39: WswOff();
	call	_WswOff	;wreg free
	line	40
	
l2410:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ClsScr
	__end_of_ClsScr:
	signat	_ClsScr,88
	global	_EndClsScr

;; *************** function _EndClsScr *****************
;; Defined at:
;;		line 43 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_AllKolToFirstPoz
;;		_WswOn
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text16,class=CODE,space=0,reloc=2
global __ptext16
__ptext16:
psect	text16
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	43
	global	__size_of_EndClsScr
	__size_of_EndClsScr	equ	__end_of_EndClsScr-_EndClsScr
	
_EndClsScr:; BSR set to: 1

	opt	stack 25
	line	44
	
l28306:; BSR set to: 1

;print.c: 44: AllKolToFirstPoz();
	call	_AllKolToFirstPoz	;wreg free
	line	45
	
l28308:; BSR set to: 1

;print.c: 45: WswOn();
	call	_WswOn	;wreg free
	line	46
	
l2413:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_EndClsScr
	__end_of_EndClsScr:
	signat	_EndClsScr,88
	global	_RdEEParam

;; *************** function _RdEEParam *****************
;; Defined at:
;;		line 244 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
;; Tracked objects:
;;		On entry : C/2
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    8
;; This function calls:
;;		_Read_b_eep
;;		_SetTpKtParam
;;		_ModParam
;;		_MocStart
;;		_MocMaksCW
;;		_MocMaksCO
;;		_SetPFN
;;		_SetNST
;;		_Busy_eep
;;		_Write_b_eep
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text17,class=CODE,space=0,reloc=2
global __ptext17
__ptext17:
psect	text17
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
	line	244
	global	__size_of_RdEEParam
	__size_of_RdEEParam	equ	__end_of_RdEEParam-_RdEEParam
	
_RdEEParam:; BSR set to: 1

	opt	stack 22
	line	246
	
l28310:
;konfig.c: 246: DtKNF.tpkt=Read_b_eep(0x00C5);
	movlw	high(0C5h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0C5h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+07h))&0ffh
	line	247
	
l28312:; BSR set to: 1

;konfig.c: 247: RSDT1.outTPKT=DtKNF.tpkt;
	movff	0+(_DtKNF+07h),0+(_RSDT1+024h)
	line	248
;konfig.c: 248: SetTpKtParam();
	call	_SetTpKtParam	;wreg free
	line	250
	
l28314:; BSR set to: 1

;konfig.c: 250: ModParam(DtKNF.tpkt,DtKNF.rdgz=Read_b_eep(0x00C4));
	movlw	high(0C4h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0C4h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+08h))&0ffh
	movff	0+(_DtKNF+08h),(c:?_ModParam)
	movf	(0+(_DtKNF+07h))&0ffh,w
	
	call	_ModParam
	line	251
	
l28316:; BSR set to: 0

;konfig.c: 251: RSDT1.outRGZ=DtKNF.rdgz;
	movff	0+(_DtKNF+08h),0+(_RSDT1+020h)
	line	252
	
l28318:; BSR set to: 0

;konfig.c: 252: MocStart(DtKNF.mstr=Read_b_eep(0x00C1));
	movlw	high(0C1h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0C1h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+03h))&0ffh
	movlb	1	; () banked
	movf	(0+(_DtKNF+03h))&0ffh,w
	
	call	_MocStart
	line	253
	
l28320:; BSR set to: 0

;konfig.c: 253: RSDT1.outMSTR=DtKNF.mstr;
	movff	0+(_DtKNF+03h),0+(_RSDT1+017h)
	line	254
	
l28322:; BSR set to: 0

;konfig.c: 254: MocMaksCW(DtKNF.mxcw=Read_b_eep(0x00C2));
	movlw	high(0C2h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0C2h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+04h))&0ffh
	movlb	1	; () banked
	movf	(0+(_DtKNF+04h))&0ffh,w
	
	call	_MocMaksCW
	line	255
	
l28324:; BSR set to: 0

;konfig.c: 255: RSDT1.outMMAXU=DtKNF.mxcw;
	movff	0+(_DtKNF+04h),0+(_RSDT1+01Ah)
	line	256
	
l28326:; BSR set to: 0

;konfig.c: 256: MocMaksCO(DtKNF.mxco=Read_b_eep(0x00C3));
	movlw	high(0C3h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0C3h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+05h))&0ffh
	movlb	1	; () banked
	movf	(0+(_DtKNF+05h))&0ffh,w
	
	call	_MocMaksCO
	line	257
	
l28328:; BSR set to: 0

;konfig.c: 257: RSDT1.outMMAXG=DtKNF.mxco;
	movff	0+(_DtKNF+05h),0+(_RSDT1+01Dh)
	line	258
	
l28330:; BSR set to: 0

;konfig.c: 258: DtKNF.aleg=Read_b_eep(0x00C6);
	movlw	high(0C6h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0C6h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+011h))&0ffh
	line	259
	
l28332:; BSR set to: 1

;konfig.c: 259: RSDT1.outWANL=DtKNF.aleg;
	movff	0+(_DtKNF+011h),0+(_RSDT1+023h)
	line	260
	
l28334:; BSR set to: 1

;konfig.c: 260: DtKNF.robg=Read_b_eep(0x00C8);
	movlw	high(0C8h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0C8h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+0Eh))&0ffh
	line	261
	
l28336:; BSR set to: 1

;konfig.c: 261: RSDT1.outWOBG=DtKNF.robg;
	movff	0+(_DtKNF+0Eh),0+(_RSDT1+027h)
	line	262
	
l28338:; BSR set to: 1

;konfig.c: 262: PFN.poz=Read_b_eep(0x00CB);
	movlw	high(0CBh)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0CBh)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_PFN+01Fh))&0ffh
	clrf	(1+(_PFN+01Fh))&0ffh
	line	263
	
l28340:; BSR set to: 1

;konfig.c: 263: SetPFN();
	call	_SetPFN	;wreg free
	line	264
	
l28342:; BSR set to: 1

;konfig.c: 264: DtKNF.opdg=Read_b_eep(0x00CC);
	movlw	high(0CCh)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0CCh)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+0Fh))&0ffh
	line	265
	
l28344:; BSR set to: 1

;konfig.c: 265: RSDT1.outOPDG=DtKNF.opdg;
	movff	0+(_DtKNF+0Fh),0+(_RSDT1+028h)
	line	266
	
l28346:; BSR set to: 1

;konfig.c: 266: DtCO.PCO=Read_b_eep(0x00C9);
	movlw	high(0C9h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0C9h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	0	; () banked
	movwf	(0+(_DtCO+03h))&0ffh
	line	267
	
l28348:; BSR set to: 0

;konfig.c: 267: DtCW.PCW=Read_b_eep(0x00CA);
	movlw	high(0CAh)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0CAh)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	0	; () banked
	movwf	(0+(_DtCW+03h))&0ffh
	line	268
	
l28350:; BSR set to: 0

;konfig.c: 268: SetNST();
	call	_SetNST	;wreg free
	line	269
	
l28352:
;konfig.c: 269: PFN.PCO=DtCO.PCO;
	movlb	0	; () banked
	movlb	1	; () banked
	movff	0+(_DtCO+03h),0+(_PFN+01Ah)
	clrf	(1+(_PFN+01Ah))&0ffh
	line	270
	
l28354:; BSR set to: 1

;konfig.c: 270: PFN.PCW=DtCW.PCW;
	movlb	0	; () banked
	movlb	1	; () banked
	movff	0+(_DtCW+03h),0+(_PFN+01Ch)
	clrf	(1+(_PFN+01Ch))&0ffh
	line	271
	
l28356:; BSR set to: 1

;konfig.c: 271: DtKNF.tpcs=Read_b_eep(0x00CD);
	movlw	high(0CDh)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0CDh)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+010h))&0ffh
	line	272
	
l28358:; BSR set to: 1

;konfig.c: 272: RSDT1.outTPCS=DtKNF.tpcs;
	movff	0+(_DtKNF+010h),0+(_RSDT1+029h)
	line	273
	
l28360:; BSR set to: 1

;konfig.c: 273: DtKNF.wymCO=0;
	bcf	((_DtKNF))&0ffh,1
	line	274
	
l28362:; BSR set to: 1

;konfig.c: 274: DtKNF.wymCW=0;
	bcf	((_DtKNF))&0ffh,2
	line	275
	
l28364:; BSR set to: 1

;konfig.c: 275: M.LICZNIK_ANL=Read_b_eep(0x00C7);
	movlw	high(0C7h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0C7h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	0	; () banked
	movwf	(0+(_M+021h))&0ffh
	line	277
	
l28366:; BSR set to: 0

;konfig.c: 277: if(M.LICZNIK_ANL)
	movf	(0+(_M+021h))&0ffh,w
	btfsc	status,2
	goto	u48411
	goto	u48410
u48411:
	goto	l28378
u48410:
	line	279
	
l28368:; BSR set to: 0

;konfig.c: 278: {
;konfig.c: 279: if(!DtKNF.aleg||(DtKNF.tpkt!=0))
	movlb	1	; () banked
	movf	(0+(_DtKNF+011h))&0ffh,w
	btfsc	status,2
	goto	u48421
	goto	u48420
u48421:
	goto	l28372
u48420:
	
l28370:; BSR set to: 1

	movf	(0+(_DtKNF+07h))&0ffh,w
	btfsc	status,2
	goto	u48431
	goto	u48430
u48431:
	goto	l28378
u48430:
	line	281
	
l28372:; BSR set to: 1

;konfig.c: 280: {
;konfig.c: 281: (Busy_eep(), Write_b_eep(0x00C7,0));
	call	_Busy_eep	;wreg free
	
l28374:; BSR set to: 1

	movlw	high(0C7h)
	movwf	((c:?_Write_b_eep+1)),c
	movlw	low(0C7h)
	movwf	((c:?_Write_b_eep)),c
	movlw	low(0)
	movwf	(0+((c:?_Write_b_eep)+02h)),c
	call	_Write_b_eep	;wreg free
	line	282
	
l28376:
;konfig.c: 282: M.LICZNIK_ANL=0;
	movlb	0	; () banked
	clrf	(0+(_M+021h))&0ffh
	line	286
	
l28378:
;konfig.c: 283: }
;konfig.c: 284: }
;konfig.c: 286: DtKNF.rdpm=Read_b_eep(0x00D0);
	movlw	high(0D0h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0D0h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+09h))&0ffh
	line	287
	
l28380:; BSR set to: 1

;konfig.c: 287: RSDT1.outRDPM=DtKNF.rdpm;
	movff	0+(_DtKNF+09h),0+(_RSDT1+02Ah)
	line	288
	
l28382:; BSR set to: 1

;konfig.c: 288: DtKNF.dtpm=Read_b_eep(0x00D1);
	movlw	high(0D1h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0D1h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+0Ah))&0ffh
	line	289
	
l28384:; BSR set to: 1

;konfig.c: 289: RSDT1.outDTPM=DtKNF.dtpm;
	movff	0+(_DtKNF+0Ah),0+(_RSDT1+02Bh)
	line	290
	
l28386:; BSR set to: 1

;konfig.c: 290: DtKNF.mdpm=Read_b_eep(0x00D2);
	movlw	high(0D2h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0D2h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	1	; () banked
	movwf	(0+(_DtKNF+0Bh))&0ffh
	line	291
	
l28388:; BSR set to: 1

;konfig.c: 291: RSDT1.outMDPM=DtKNF.mdpm;
	movff	0+(_DtKNF+0Bh),0+(_RSDT1+02Ch)
	line	297
	
l28390:; BSR set to: 1

;konfig.c: 297: DtKNF.teco=0;
	clrf	(0+(_DtKNF+0Ch))&0ffh
	line	298
	
l28392:; BSR set to: 1

;konfig.c: 298: DtIN.Eco=5;
	movlw	low(05h)
	movwf	(0+(_DtIN+09h))&0ffh
	line	299
	
l3944:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RdEEParam
	__end_of_RdEEParam:
	signat	_RdEEParam,88
	global	_EnKonf

;; *************** function _EnKonf *****************
;; Defined at:
;;		line 35 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text18,class=CODE,space=0,reloc=2
global __ptext18
__ptext18:
psect	text18
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
	line	35
	global	__size_of_EnKonf
	__size_of_EnKonf	equ	__end_of_EnKonf-_EnKonf
	
_EnKonf:; BSR set to: 1

	opt	stack 25
	line	36
	
l28394:; BSR set to: 1

;konfig.c: 36: DtKNF.enknf=1;
	bsf	((_DtKNF))&0ffh,0
	line	37
	
l28396:; BSR set to: 1

;konfig.c: 37: StartRTS(0);
	movlw	(0)&0ffh
	
	call	_StartRTS
	line	38
	
l3817:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_EnKonf
	__end_of_EnKonf:
	signat	_EnKonf,88
	global	_PomiarIN

;; *************** function _PomiarIN *****************
;; Defined at:
;;		line 444 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_ReadAC
;;		_ReadTabNTC
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text19,class=CODE,space=0,reloc=2
global __ptext19
__ptext19:
psect	text19
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	444
	global	__size_of_PomiarIN
	__size_of_PomiarIN	equ	__end_of_PomiarIN-_PomiarIN
	
_PomiarIN:; BSR set to: 1

	opt	stack 24
	line	447
	
l29082:
;pomiar.c: 447: DtIN.AC_IN=ReadAC(4);
	movlw	(04h)&0ffh
	
	call	_ReadAC
	movlb	1	; () banked
	movwf	(0+(_DtIN+01h))&0ffh
	line	448
;pomiar.c: 448: DtIN.IN=ReadTabNTC(DtIN.AC_IN);
	movf	(0+(_DtIN+01h))&0ffh,w
	
	call	_ReadTabNTC
	movlb	1	; () banked
	movwf	(0+(_DtIN+02h))&0ffh
	line	449
	
l29084:; BSR set to: 1

;pomiar.c: 449: PFN.IN=DtIN.IN;
	movff	0+(_DtIN+02h),0+(_PFN+0Ch)
	line	450
	
l29086:; BSR set to: 1

;pomiar.c: 450: if(DtIN.AC_IN<=0X28||DtIN.AC_IN>=0XF5)
	lfsr	2,_DtIN+01h
	movlw	(029h-1)
	cpfsgt	indf2
	goto	u50351
	goto	u50350
u50351:
	goto	l2084
u50350:
	
l29088:; BSR set to: 1

	lfsr	2,_DtIN+01h
	movlw	(0F5h-1)
	cpfsgt	indf2
	goto	u50361
	goto	u50360
u50361:
	goto	l2082
u50360:
	
l2084:; BSR set to: 1

	line	452
;pomiar.c: 451: {
;pomiar.c: 452: DtIN._err_IN=1;
	bsf	((_DtIN))&0ffh,0
	line	453
;pomiar.c: 453: return;
	goto	l2085
	line	455
	
l2082:; BSR set to: 1

;pomiar.c: 455: else DtIN._err_IN=0;
	bcf	((_DtIN))&0ffh,0
	line	456
	
l2085:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PomiarIN
	__end_of_PomiarIN:
	signat	_PomiarIN,88
	global	_RestartFltPrt

;; *************** function _RestartFltPrt *****************
;; Defined at:
;;		line 307 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetPrt
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text20,class=CODE,space=0,reloc=2
global __ptext20
__ptext20:
psect	text20
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	307
	global	__size_of_RestartFltPrt
	__size_of_RestartFltPrt	equ	__end_of_RestartFltPrt-_RestartFltPrt
	
_RestartFltPrt:; BSR set to: 1

	opt	stack 25
	line	308
	
l29210:; BSR set to: 0

;main.c: 308: SetPrt(13,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(0Dh)&0ffh
	
	call	_SetPrt
	line	309
;main.c: 309: SetPrt(17,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(011h)&0ffh
	
	call	_SetPrt
	line	310
;main.c: 310: SetPrt(9,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(09h)&0ffh
	
	call	_SetPrt
	line	311
;main.c: 311: SetPrt(10,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(0Ah)&0ffh
	
	call	_SetPrt
	line	312
;main.c: 312: SetPrt(12,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(0Ch)&0ffh
	
	call	_SetPrt
	line	313
;main.c: 313: SetPrt(11,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(0Bh)&0ffh
	
	call	_SetPrt
	line	314
;main.c: 314: SetPrt(7,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(07h)&0ffh
	
	call	_SetPrt
	line	315
	
l630:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RestartFltPrt
	__end_of_RestartFltPrt:
	signat	_RestartFltPrt,88
	global	_TrybPracy

;; *************** function _TrybPracy *****************
;; Defined at:
;;		line 89 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konsola.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  key             1    5[BANK0 ] unsigned char 
;;  key2            1    4[BANK0 ] unsigned char 
;;  ExtR2           1    1[BANK0 ] unsigned char 
;;  ExtR            1    0[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_RdPrt
;;		_PresKeyEX
;;		_WaitToLowEx
;;		_ResBufKeyEx
;;		_SetPrt
;;		_StartRTdS
;;		_RestartKol
;;		_RTdS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text21,class=CODE,space=0,reloc=2
global __ptext21
__ptext21:
psect	text21
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konsola.c"
	line	89
	global	__size_of_TrybPracy
	__size_of_TrybPracy	equ	__end_of_TrybPracy-_TrybPracy
	
_TrybPracy:; BSR set to: 0

	opt	stack 24
	line	93
	
l37390:; BSR set to: 1

;konsola.c: 91: unsigned char key,key2,ExtR,ExtR2;
;konsola.c: 93: PFN._aktywne_KNF=0;
	bcf	(0+(_PFN+02h))&0ffh,6
	line	94
;konsola.c: 94: PFN._opgres=0;
	bcf	(0+(_PFN+05h))&0ffh,3
	line	95
;konsola.c: 95: if(!PFN._aktywne_KNF&&!PFN._opgres)
	
	btfsc	(0+(_PFN+02h))&0ffh,6
	goto	u71291
	goto	u71290
u71291:
	goto	l4796
u71290:
	
l37392:; BSR set to: 1

	
	btfsc	(0+(_PFN+05h))&0ffh,3
	goto	u71301
	goto	u71300
u71301:
	goto	l4796
u71300:
	line	99
	
l37394:; BSR set to: 1

;konsola.c: 96: {
;konsola.c: 99: if(!RdPrt(23))
	movlw	(017h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71311
	goto	u71310
u71311:
	goto	l37430
u71310:
	line	101
	
l37396:; BSR set to: 0

;konsola.c: 100: {
;konsola.c: 101: key=PresKeyEX(RdPrt(22),&ky[0]);
	movlb	2	; () banked
	movlw	high(_ky)
	movwf	((c:?_PresKeyEX+1)),c
	movlw	low(_ky)
	movwf	((c:?_PresKeyEX)),c
	movlw	(016h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71321
	goto	u71320
u71321:
	movlw	1
	goto	u71326
u71320:
	movlw	0
u71326:
	
	call	_PresKeyEX
	movwf	((TrybPracy@key))&0ffh
	line	102
	
l37398:; BSR set to: 0

;konsola.c: 102: if(key!=100&&key>=16)
	movf	((TrybPracy@key))&0ffh,w
	xorlw	100

	btfsc	status,2
	goto	u71331
	goto	u71330
u71331:
	goto	l37430
u71330:
	
l37400:; BSR set to: 0

	movlw	(010h-1)
	cpfsgt	((TrybPracy@key))&0ffh
	goto	u71341
	goto	u71340
u71341:
	goto	l37430
u71340:
	line	104
	
l37402:; BSR set to: 0

;konsola.c: 103: {
;konsola.c: 104: WaitToLowEx(&ky[0]);
	movlb	2	; () banked
	movlw	high(_ky)
	movwf	((c:?_WaitToLowEx+1)),c
	movlw	low(_ky)
	movwf	((c:?_WaitToLowEx)),c
	call	_WaitToLowEx	;wreg free
	line	105
	
l37404:; BSR set to: 2

;konsola.c: 105: PFN._off=!PFN._off;
	movlb	1	; () banked
	
	btfss	((_PFN))&0ffh,0
	goto	u71351
	goto	u71350
u71351:
	movlw	1
	goto	u71356
u71350:
	movlw	0
u71356:
	movwf	(??_TrybPracy+0+0)&0ffh,c
	movf	((_PFN))&0ffh,w
	xorwf	((??_TrybPracy+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_TrybPracy+0+0)),c,w
	movwf	((_PFN))&0ffh
	line	106
	
l37406:; BSR set to: 1

;konsola.c: 106: PFN._set_nco=0;
	bcf	((_PFN))&0ffh,7
	line	107
	
l37408:; BSR set to: 1

;konsola.c: 107: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	108
	
l37410:; BSR set to: 1

;konsola.c: 108: PFN._str_nco=0;
	bcf	((_PFN))&0ffh,3
	line	109
	
l37412:; BSR set to: 1

;konsola.c: 109: PFN._str_ncw=0;
	bcf	((_PFN))&0ffh,4
	line	110
	
l37414:; BSR set to: 1

;konsola.c: 110: PFN._prn_res=0;
	bcf	(0+(_PFN+03h))&0ffh,0
	line	111
	
l37416:; BSR set to: 1

;konsola.c: 111: PFN._set_fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,4
	line	112
	
l37418:; BSR set to: 1

;konsola.c: 112: PFN._fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,6
	line	113
	
l37420:; BSR set to: 1

;konsola.c: 113: PFN._set_aleg=0;
	bcf	(0+(_PFN+01h))&0ffh,5
	line	114
	
l37422:; BSR set to: 1

;konsola.c: 114: PFN._aleg=0;
	bcf	(0+(_PFN+02h))&0ffh,0
	line	115
	
l37424:; BSR set to: 1

;konsola.c: 115: ResBufKeyEx(&ky[2]);
	movlb	2	; () banked
	movlw	high(_ky+0Ah)
	movwf	((c:?_ResBufKeyEx+1)),c
	movlw	low(_ky+0Ah)
	movwf	((c:?_ResBufKeyEx)),c
	call	_ResBufKeyEx	;wreg free
	line	116
	
l37426:; BSR set to: 2

;konsola.c: 116: ResBufKeyEx(&ky[3]);
	movlw	high(_ky+0Fh)
	movwf	((c:?_ResBufKeyEx+1)),c
	movlw	low(_ky+0Fh)
	movwf	((c:?_ResBufKeyEx)),c
	call	_ResBufKeyEx	;wreg free
	line	117
	
l37428:; BSR set to: 2

;konsola.c: 117: ResBufKeyEx(&ky[1]);
	movlw	high(_ky+05h)
	movwf	((c:?_ResBufKeyEx+1)),c
	movlw	low(_ky+05h)
	movwf	((c:?_ResBufKeyEx)),c
	call	_ResBufKeyEx	;wreg free
	line	121
	
l37430:
;konsola.c: 118: }
;konsola.c: 119: }
;konsola.c: 121: if(!PFN._off&&!PFN._lato&&!PFN._zima)
	movlb	1	; () banked
	
	btfsc	((_PFN))&0ffh,0
	goto	u71361
	goto	u71360
u71361:
	goto	l37438
u71360:
	
l37432:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,1
	goto	u71371
	goto	u71370
u71371:
	goto	l37438
u71370:
	
l37434:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,2
	goto	u71381
	goto	u71380
u71381:
	goto	l37438
u71380:
	line	123
	
l37436:; BSR set to: 1

;konsola.c: 122: {
;konsola.c: 123: PFN._lato=0;
	bcf	((_PFN))&0ffh,1
	line	124
;konsola.c: 124: PFN._zima=1;
	bsf	((_PFN))&0ffh,2
	line	127
	
l37438:; BSR set to: 1

;konsola.c: 125: }
;konsola.c: 127: if(!RdPrt(22)&&!RdPrt(24)&&!RdPrt(25)&&!PFN._off&&!PFN._fnserw&&!PFN._aleg)
	movlw	(016h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71391
	goto	u71390
u71391:
	goto	l37472
u71390:
	
l37440:; BSR set to: 0

	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71401
	goto	u71400
u71401:
	goto	l37472
u71400:
	
l37442:; BSR set to: 0

	movlw	(019h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71411
	goto	u71410
u71411:
	goto	l37472
u71410:
	
l37444:; BSR set to: 0

	movlb	1	; () banked
	
	btfsc	((_PFN))&0ffh,0
	goto	u71421
	goto	u71420
u71421:
	goto	l37472
u71420:
	
l37446:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,6
	goto	u71431
	goto	u71430
u71431:
	goto	l37472
u71430:
	
l37448:; BSR set to: 1

	
	btfsc	(0+(_PFN+02h))&0ffh,0
	goto	u71441
	goto	u71440
u71441:
	goto	l37472
u71440:
	line	129
	
l37450:; BSR set to: 1

;konsola.c: 128: {
;konsola.c: 129: key=PresKeyEX(RdPrt(23),&ky[1]);
	movlb	2	; () banked
	movlw	high(_ky+05h)
	movwf	((c:?_PresKeyEX+1)),c
	movlw	low(_ky+05h)
	movwf	((c:?_PresKeyEX)),c
	movlw	(017h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71451
	goto	u71450
u71451:
	movlw	1
	goto	u71456
u71450:
	movlw	0
u71456:
	
	call	_PresKeyEX
	movwf	((TrybPracy@key))&0ffh
	line	130
	
l37452:; BSR set to: 0

;konsola.c: 130: if(key!=100&&key>=8)
	movf	((TrybPracy@key))&0ffh,w
	xorlw	100

	btfsc	status,2
	goto	u71461
	goto	u71460
u71461:
	goto	l37472
u71460:
	
l37454:; BSR set to: 0

	movlw	(08h-1)
	cpfsgt	((TrybPracy@key))&0ffh
	goto	u71471
	goto	u71470
u71471:
	goto	l37472
u71470:
	line	132
	
l37456:; BSR set to: 0

;konsola.c: 131: {
;konsola.c: 132: WaitToLowEx(&ky[1]);
	movlb	2	; () banked
	movlw	high(_ky+05h)
	movwf	((c:?_WaitToLowEx+1)),c
	movlw	low(_ky+05h)
	movwf	((c:?_WaitToLowEx)),c
	call	_WaitToLowEx	;wreg free
	line	133
	
l37458:; BSR set to: 2

;konsola.c: 133: PFN._lato=!PFN._lato;
	movlb	1	; () banked
	
	btfss	((_PFN))&0ffh,1
	goto	u71481
	goto	u71480
u71481:
	movlw	1
	goto	u71486
u71480:
	movlw	0
u71486:
	movwf	(??_TrybPracy+0+0)&0ffh,c
	rlncf	((??_TrybPracy+0+0)),c
	movf	((_PFN))&0ffh,w
	xorwf	((??_TrybPracy+0+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_TrybPracy+0+0)),c,w
	movwf	((_PFN))&0ffh
	line	134
	
l37460:; BSR set to: 1

;konsola.c: 134: PFN._zima=!PFN._lato;
	
	btfss	((_PFN))&0ffh,1
	goto	u71491
	goto	u71490
u71491:
	movlw	1
	goto	u71496
u71490:
	movlw	0
u71496:
	movwf	(??_TrybPracy+0+0)&0ffh,c
	rlncf	((??_TrybPracy+0+0)),c
	rlncf	((??_TrybPracy+0+0)),c
	movf	((_PFN))&0ffh,w
	xorwf	((??_TrybPracy+0+0)),c,w
	andlw	not (((1<<1)-1)<<2)
	xorwf	((??_TrybPracy+0+0)),c,w
	movwf	((_PFN))&0ffh
	line	135
	
l37462:; BSR set to: 1

;konsola.c: 135: PFN._set_nco=0;
	bcf	((_PFN))&0ffh,7
	line	136
	
l37464:; BSR set to: 1

;konsola.c: 136: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	137
	
l37466:; BSR set to: 1

;konsola.c: 137: PFN._fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,6
	line	138
	
l37468:; BSR set to: 1

;konsola.c: 138: PFN._aleg=0;
	bcf	(0+(_PFN+02h))&0ffh,0
	line	139
	
l37470:; BSR set to: 1

;konsola.c: 139: PFN._prn_res=0;
	bcf	(0+(_PFN+03h))&0ffh,0
	line	144
	
l37472:
;konsola.c: 140: }
;konsola.c: 141: }
;konsola.c: 144: if(PFN._oaleg) PFN._set_aleg=0;
	movlb	1	; () banked
	
	btfss	(0+(_PFN+04h))&0ffh,0
	goto	u71501
	goto	u71500
u71501:
	goto	l4802
u71500:
	
l37474:; BSR set to: 1

	bcf	(0+(_PFN+01h))&0ffh,5
	
l4802:; BSR set to: 1

	line	145
;konsola.c: 145: if(PFN._ofnserw) PFN._set_fnserw=0;
	
	btfss	(0+(_PFN+03h))&0ffh,7
	goto	u71511
	goto	u71510
u71511:
	goto	l37478
u71510:
	
l37476:; BSR set to: 1

	bcf	(0+(_PFN+01h))&0ffh,4
	line	147
	
l37478:; BSR set to: 1

;konsola.c: 147: if(!RdPrt(22)&&!RdPrt(24)&&!RdPrt(25)&&!PFN._off&&!PFN._fnserw&&!PFN._aleg)
	movlw	(016h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71521
	goto	u71520
u71521:
	goto	l37556
u71520:
	
l37480:; BSR set to: 0

	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71531
	goto	u71530
u71531:
	goto	l37556
u71530:
	
l37482:; BSR set to: 0

	movlw	(019h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71541
	goto	u71540
u71541:
	goto	l37556
u71540:
	
l37484:; BSR set to: 0

	movlb	1	; () banked
	
	btfsc	((_PFN))&0ffh,0
	goto	u71551
	goto	u71550
u71551:
	goto	l37556
u71550:
	
l37486:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,6
	goto	u71561
	goto	u71560
u71561:
	goto	l37556
u71560:
	
l37488:; BSR set to: 1

	
	btfsc	(0+(_PFN+02h))&0ffh,0
	goto	u71571
	goto	u71570
u71571:
	goto	l37556
u71570:
	line	149
	
l37490:; BSR set to: 1

;konsola.c: 148: {
;konsola.c: 149: key=PresKeyEX(RdPrt(23),&ky[1]);
	movlb	2	; () banked
	movlw	high(_ky+05h)
	movwf	((c:?_PresKeyEX+1)),c
	movlw	low(_ky+05h)
	movwf	((c:?_PresKeyEX)),c
	movlw	(017h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71581
	goto	u71580
u71581:
	movlw	1
	goto	u71586
u71580:
	movlw	0
u71586:
	
	call	_PresKeyEX
	movwf	((TrybPracy@key))&0ffh
	line	150
	
l37492:; BSR set to: 0

;konsola.c: 150: if(key==100)
	movf	((TrybPracy@key))&0ffh,w
	xorlw	100

	btfss	status,2
	goto	u71591
	goto	u71590
u71591:
	goto	l37556
u71590:
	line	152
	
l37494:; BSR set to: 0

;konsola.c: 151: {
;konsola.c: 152: ResBufKeyEx(&ky[1]);
	movlb	2	; () banked
	movlw	high(_ky+05h)
	movwf	((c:?_ResBufKeyEx+1)),c
	movlw	low(_ky+05h)
	movwf	((c:?_ResBufKeyEx)),c
	call	_ResBufKeyEx	;wreg free
	line	153
	
l37496:; BSR set to: 2

;konsola.c: 153: PFN.b_set_nco=0;
	movlb	1	; () banked
	bcf	(0+(_PFN+01h))&0ffh,1
	line	154
	
l37498:; BSR set to: 1

;konsola.c: 154: PFN.b_set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,2
	line	155
	
l37500:; BSR set to: 1

;konsola.c: 155: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	156
	
l37502:; BSR set to: 1

;konsola.c: 156: PFN._prn_res=0;
	bcf	(0+(_PFN+03h))&0ffh,0
	line	157
	
l37504:; BSR set to: 1

;konsola.c: 157: if(PFN._set_nco)
	
	btfss	((_PFN))&0ffh,7
	goto	u71601
	goto	u71600
u71601:
	goto	l4806
u71600:
	line	159
	
l37506:; BSR set to: 1

;konsola.c: 158: {
;konsola.c: 159: if(PFN._newPCO)
	
	btfss	(0+(_PFN+02h))&0ffh,1
	goto	u71611
	goto	u71610
u71611:
	goto	l4807
u71610:
	line	161
	
l37508:; BSR set to: 1

;konsola.c: 160: {
;konsola.c: 161: PFN._newPCO=0;
	bcf	(0+(_PFN+02h))&0ffh,1
	line	162
;konsola.c: 162: PFN._set_nco=0;
	bcf	((_PFN))&0ffh,7
	line	163
;konsola.c: 163: PFN.b_set_nco=0;
	bcf	(0+(_PFN+01h))&0ffh,1
	line	164
;konsola.c: 164: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	165
;konsola.c: 165: PFN.b_set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,2
	line	166
;konsola.c: 166: PFN._set_fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,4
	line	167
;konsola.c: 167: PFN._set_aleg=0;
	bcf	(0+(_PFN+01h))&0ffh,5
	line	168
	
l37510:; BSR set to: 1

;konsola.c: 168: SetPrt(25,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(019h)&0ffh
	
	call	_SetPrt
	line	169
;konsola.c: 169: SetPrt(24,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(018h)&0ffh
	
	call	_SetPrt
	line	170
;konsola.c: 170: SetPrt(23,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(017h)&0ffh
	
	call	_SetPrt
	line	171
	
l37512:; BSR set to: 0

;konsola.c: 171: ResBufKeyEx(&ky[3]);
	movlb	2	; () banked
	movlw	high(_ky+0Fh)
	movwf	((c:?_ResBufKeyEx+1)),c
	movlw	low(_ky+0Fh)
	movwf	((c:?_ResBufKeyEx)),c
	call	_ResBufKeyEx	;wreg free
	line	172
	
l37514:; BSR set to: 2

;konsola.c: 172: ResBufKeyEx(&ky[2]);
	movlw	high(_ky+0Ah)
	movwf	((c:?_ResBufKeyEx+1)),c
	movlw	low(_ky+0Ah)
	movwf	((c:?_ResBufKeyEx)),c
	call	_ResBufKeyEx	;wreg free
	line	173
;konsola.c: 173: }
	goto	l37548
	line	174
	
l4807:; BSR set to: 1

	line	175
;konsola.c: 174: else
;konsola.c: 175: if(PFN._zima&&!PFN._obgCW&&!PFN._set_fnserw) {PFN._set_nco=0;PFN._set_fnserw=1;PFN._fns_max=1;}
	
	btfss	((_PFN))&0ffh,2
	goto	u71621
	goto	u71620
u71621:
	goto	l4809
u71620:
	
l37516:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,2
	goto	u71631
	goto	u71630
u71631:
	goto	l4809
u71630:
	
l37518:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,4
	goto	u71641
	goto	u71640
u71641:
	goto	l4809
u71640:
	
l37520:; BSR set to: 1

	bcf	((_PFN))&0ffh,7
	bsf	(0+(_PFN+01h))&0ffh,4
	bsf	(0+(_PFN+01h))&0ffh,7
	goto	l37548
	line	176
	
l4809:; BSR set to: 1

	line	177
;konsola.c: 176: else
;konsola.c: 177: if(PFN._EnAleg&&!PFN._set_aleg) {PFN._set_nco=0;PFN._set_aleg=1;}
	
	btfss	(0+(_PFN+02h))&0ffh,7
	goto	u71651
	goto	u71650
u71651:
	goto	l4811
u71650:
	
l37522:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,5
	goto	u71661
	goto	u71660
u71661:
	goto	l4811
u71660:
	
l37524:; BSR set to: 1

	bcf	((_PFN))&0ffh,7
	bsf	(0+(_PFN+01h))&0ffh,5
	goto	l37548
	line	178
	
l4811:; BSR set to: 1

	line	180
;konsola.c: 178: else
;konsola.c: 179: {
;konsola.c: 180: PFN._newPCO=0;
	bcf	(0+(_PFN+02h))&0ffh,1
	line	181
;konsola.c: 181: PFN._set_nco=0;
	bcf	((_PFN))&0ffh,7
	line	182
;konsola.c: 182: PFN.b_set_nco=0;
	bcf	(0+(_PFN+01h))&0ffh,1
	line	183
;konsola.c: 183: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	184
;konsola.c: 184: PFN.b_set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,2
	line	185
;konsola.c: 185: PFN._set_fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,4
	line	186
;konsola.c: 186: PFN._set_aleg=0;
	bcf	(0+(_PFN+01h))&0ffh,5
	line	187
	
l37526:; BSR set to: 1

;konsola.c: 187: SetPrt(25,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(019h)&0ffh
	
	call	_SetPrt
	line	188
;konsola.c: 188: SetPrt(24,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(018h)&0ffh
	
	call	_SetPrt
	line	189
;konsola.c: 189: SetPrt(23,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(017h)&0ffh
	
	call	_SetPrt
	goto	l37512
	line	194
	
l4806:; BSR set to: 1

	line	195
;konsola.c: 194: else
;konsola.c: 195: if(PFN._set_fnserw&&!PFN._ferr&&!PFN._fmsg)
	
	btfss	(0+(_PFN+01h))&0ffh,4
	goto	u71671
	goto	u71670
u71671:
	goto	l4814
u71670:
	
l37532:; BSR set to: 1

	
	btfsc	(0+(_PFN+05h))&0ffh,0
	goto	u71681
	goto	u71680
u71681:
	goto	l4814
u71680:
	
l37534:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,7
	goto	u71691
	goto	u71690
u71691:
	goto	l4814
u71690:
	line	197
	
l37536:; BSR set to: 1

;konsola.c: 196: {
;konsola.c: 197: if(PFN._EnAleg&&!PFN._set_aleg) {PFN._set_fnserw=0;PFN._set_aleg=1;}
	
	btfss	(0+(_PFN+02h))&0ffh,7
	goto	u71701
	goto	u71700
u71701:
	goto	l4815
u71700:
	
l37538:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,5
	goto	u71711
	goto	u71710
u71711:
	goto	l4815
u71710:
	
l37540:; BSR set to: 1

	bcf	(0+(_PFN+01h))&0ffh,4
	bsf	(0+(_PFN+01h))&0ffh,5
	goto	l37548
	line	198
	
l4815:; BSR set to: 1

	line	200
;konsola.c: 198: else
;konsola.c: 199: {
;konsola.c: 200: PFN._newPCO=0;
	bcf	(0+(_PFN+02h))&0ffh,1
	line	201
;konsola.c: 201: PFN._set_nco=0;
	bcf	((_PFN))&0ffh,7
	line	202
;konsola.c: 202: PFN.b_set_nco=0;
	bcf	(0+(_PFN+01h))&0ffh,1
	line	203
;konsola.c: 203: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	204
;konsola.c: 204: PFN.b_set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,2
	line	205
;konsola.c: 205: PFN._set_fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,4
	line	206
;konsola.c: 206: PFN._set_aleg=0;
	bcf	(0+(_PFN+01h))&0ffh,5
	goto	l37548
	line	209
	
l4814:; BSR set to: 1

	line	210
;konsola.c: 209: else
;konsola.c: 210: if(PFN._set_aleg&&!PFN._ferr&&!PFN._fmsg)
	
	btfss	(0+(_PFN+01h))&0ffh,5
	goto	u71721
	goto	u71720
u71721:
	goto	l4818
u71720:
	
l37542:; BSR set to: 1

	
	btfsc	(0+(_PFN+05h))&0ffh,0
	goto	u71731
	goto	u71730
u71731:
	goto	l4818
u71730:
	
l37544:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,7
	goto	u71741
	goto	u71740
u71741:
	goto	l4818
u71740:
	goto	l4815
	line	220
	
l4818:; BSR set to: 1

	line	222
;konsola.c: 220: else
;konsola.c: 221: {
;konsola.c: 222: PFN._set_fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,4
	line	223
;konsola.c: 223: PFN._set_aleg=0;
	bcf	(0+(_PFN+01h))&0ffh,5
	line	224
;konsola.c: 224: PFN._set_nco=1;
	bsf	((_PFN))&0ffh,7
	line	226
	
l37548:
;konsola.c: 225: }
;konsola.c: 226: StartRTdS(9);
	movlw	(09h)&0ffh
	
	call	_StartRTdS
	line	227
	
l37550:; BSR set to: 1

;konsola.c: 227: if(PFN._set_nco)
	
	btfss	((_PFN))&0ffh,7
	goto	u71751
	goto	u71750
u71751:
	goto	l37556
u71750:
	line	229
	
l37552:; BSR set to: 1

;konsola.c: 228: {
;konsola.c: 229: PFN.b_set_nco=0;
	bcf	(0+(_PFN+01h))&0ffh,1
	line	230
	
l37554:; BSR set to: 1

;konsola.c: 230: RestartKol(2);
	movlw	(02h)&0ffh
	
	call	_RestartKol
	line	236
	
l37556:
;konsola.c: 233: }
;konsola.c: 234: }
;konsola.c: 235: }
;konsola.c: 236: if(RTdS(9)>30)
	movlw	(09h)&0ffh
	
	call	_RTdS
	movwf	(??_TrybPracy+0+0)&0ffh,c
	movlw	(01Fh)&0ffh
	subwf	((??_TrybPracy+0+0)),c,w
	btfss	status,0
	goto	u71761
	goto	u71760
u71761:
	goto	l37560
u71760:
	line	238
	
l37558:; BSR set to: 1

;konsola.c: 237: {
;konsola.c: 238: PFN._set_nco=0;
	bcf	((_PFN))&0ffh,7
	line	239
;konsola.c: 239: PFN.b_set_nco=0;
	bcf	(0+(_PFN+01h))&0ffh,1
	line	240
;konsola.c: 240: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	241
;konsola.c: 241: PFN.b_set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,2
	line	242
;konsola.c: 242: PFN._set_fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,4
	line	243
;konsola.c: 243: PFN._set_aleg=0;
	bcf	(0+(_PFN+01h))&0ffh,5
	line	246
	
l37560:; BSR set to: 1

;konsola.c: 244: }
;konsola.c: 246: if(!RdPrt(22)&&!RdPrt(25)&&!PFN._off&&!PFN._fnserw&&!PFN._aleg)
	movlw	(016h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71771
	goto	u71770
u71771:
	goto	l4822
u71770:
	
l37562:; BSR set to: 0

	movlw	(019h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71781
	goto	u71780
u71781:
	goto	l4822
u71780:
	
l37564:; BSR set to: 0

	movlb	1	; () banked
	
	btfsc	((_PFN))&0ffh,0
	goto	u71791
	goto	u71790
u71791:
	goto	l4822
u71790:
	
l37566:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,6
	goto	u71801
	goto	u71800
u71801:
	goto	l4822
u71800:
	
l37568:; BSR set to: 1

	
	btfsc	(0+(_PFN+02h))&0ffh,0
	goto	u71811
	goto	u71810
u71811:
	goto	l4822
u71810:
	line	248
	
l37570:; BSR set to: 1

;konsola.c: 247: {
;konsola.c: 248: if(PFN._set_fnserw)
	
	btfss	(0+(_PFN+01h))&0ffh,4
	goto	u71821
	goto	u71820
u71821:
	goto	l37590
u71820:
	line	250
	
l37572:; BSR set to: 1

;konsola.c: 249: {
;konsola.c: 250: key=PresKeyEX(RdPrt(24),&ky[2]);
	movlb	2	; () banked
	movlw	high(_ky+0Ah)
	movwf	((c:?_PresKeyEX+1)),c
	movlw	low(_ky+0Ah)
	movwf	((c:?_PresKeyEX)),c
	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71831
	goto	u71830
u71831:
	movlw	1
	goto	u71836
u71830:
	movlw	0
u71836:
	
	call	_PresKeyEX
	movwf	((TrybPracy@key))&0ffh
	line	251
	
l37574:; BSR set to: 0

;konsola.c: 251: if(key!=100&&key>=10)
	movf	((TrybPracy@key))&0ffh,w
	xorlw	100

	btfsc	status,2
	goto	u71841
	goto	u71840
u71841:
	goto	l37590
u71840:
	
l37576:; BSR set to: 0

	movlw	(0Ah-1)
	cpfsgt	((TrybPracy@key))&0ffh
	goto	u71851
	goto	u71850
u71851:
	goto	l37590
u71850:
	line	253
	
l37578:; BSR set to: 0

;konsola.c: 252: {
;konsola.c: 253: WaitToLowEx(&ky[2]);
	movlb	2	; () banked
	movlw	high(_ky+0Ah)
	movwf	((c:?_WaitToLowEx+1)),c
	movlw	low(_ky+0Ah)
	movwf	((c:?_WaitToLowEx)),c
	call	_WaitToLowEx	;wreg free
	line	254
	
l37580:; BSR set to: 2

;konsola.c: 254: PFN._fnserw=1;
	movlb	1	; () banked
	bsf	(0+(_PFN+01h))&0ffh,6
	line	255
	
l37582:; BSR set to: 1

;konsola.c: 255: PFN._prn_res=0;
	bcf	(0+(_PFN+03h))&0ffh,0
	line	256
	
l37584:; BSR set to: 1

;konsola.c: 256: PFN._set_nco=0;
	bcf	((_PFN))&0ffh,7
	line	257
	
l37586:; BSR set to: 1

;konsola.c: 257: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	258
	
l37588:; BSR set to: 1

;konsola.c: 258: PFN.b_ofnserw=0;
	bcf	(0+(_PFN+019h))&0ffh,0
	line	261
	
l37590:
;konsola.c: 259: }
;konsola.c: 260: }
;konsola.c: 261: if(PFN._set_aleg)
	movlb	1	; () banked
	
	btfss	(0+(_PFN+01h))&0ffh,5
	goto	u71861
	goto	u71860
u71861:
	goto	l4822
u71860:
	line	263
	
l37592:; BSR set to: 1

;konsola.c: 262: {
;konsola.c: 263: key=PresKeyEX(RdPrt(24),&ky[2]);
	movlb	2	; () banked
	movlw	high(_ky+0Ah)
	movwf	((c:?_PresKeyEX+1)),c
	movlw	low(_ky+0Ah)
	movwf	((c:?_PresKeyEX)),c
	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71871
	goto	u71870
u71871:
	movlw	1
	goto	u71876
u71870:
	movlw	0
u71876:
	
	call	_PresKeyEX
	movwf	((TrybPracy@key))&0ffh
	line	264
	
l37594:; BSR set to: 0

;konsola.c: 264: if(key!=100&&key>=10)
	movf	((TrybPracy@key))&0ffh,w
	xorlw	100

	btfsc	status,2
	goto	u71881
	goto	u71880
u71881:
	goto	l4822
u71880:
	
l37596:; BSR set to: 0

	movlw	(0Ah-1)
	cpfsgt	((TrybPracy@key))&0ffh
	goto	u71891
	goto	u71890
u71891:
	goto	l4822
u71890:
	line	266
	
l37598:; BSR set to: 0

;konsola.c: 265: {
;konsola.c: 266: WaitToLowEx(&ky[2]);
	movlb	2	; () banked
	movlw	high(_ky+0Ah)
	movwf	((c:?_WaitToLowEx+1)),c
	movlw	low(_ky+0Ah)
	movwf	((c:?_WaitToLowEx)),c
	call	_WaitToLowEx	;wreg free
	line	267
	
l37600:; BSR set to: 2

;konsola.c: 267: PFN._aleg=1;
	movlb	1	; () banked
	bsf	(0+(_PFN+02h))&0ffh,0
	line	268
	
l37602:; BSR set to: 1

;konsola.c: 268: PFN._set_nco=0;
	bcf	((_PFN))&0ffh,7
	line	269
	
l37604:; BSR set to: 1

;konsola.c: 269: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	270
	
l37606:; BSR set to: 1

;konsola.c: 270: PFN.b_oaleg=0;
	bcf	(0+(_PFN+019h))&0ffh,1
	line	273
	
l4822:
	line	276
;konsola.c: 271: }
;konsola.c: 272: }
;konsola.c: 273: }
;konsola.c: 276: if(!RdPrt(22)&&!RdPrt(23)&&!PFN._off&&!PFN._fnserw&&!PFN._aleg&&!PFN._set_fnserw&&!PFN._set_aleg&&!PFN._set_nco&&!PFN._set_ncw)
	movlw	(016h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71901
	goto	u71900
u71901:
	goto	l37646
u71900:
	
l37608:; BSR set to: 0

	movlw	(017h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71911
	goto	u71910
u71911:
	goto	l37646
u71910:
	
l37610:; BSR set to: 0

	movlb	1	; () banked
	
	btfsc	((_PFN))&0ffh,0
	goto	u71921
	goto	u71920
u71921:
	goto	l37646
u71920:
	
l37612:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,6
	goto	u71931
	goto	u71930
u71931:
	goto	l37646
u71930:
	
l37614:; BSR set to: 1

	
	btfsc	(0+(_PFN+02h))&0ffh,0
	goto	u71941
	goto	u71940
u71941:
	goto	l37646
u71940:
	
l37616:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,4
	goto	u71951
	goto	u71950
u71951:
	goto	l37646
u71950:
	
l37618:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,5
	goto	u71961
	goto	u71960
u71961:
	goto	l37646
u71960:
	
l37620:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,7
	goto	u71971
	goto	u71970
u71971:
	goto	l37646
u71970:
	
l37622:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,0
	goto	u71981
	goto	u71980
u71981:
	goto	l37646
u71980:
	line	278
	
l37624:; BSR set to: 1

;konsola.c: 277: {
;konsola.c: 278: key=PresKeyEX(RdPrt(25),&ky[3]);
	movlb	2	; () banked
	movlw	high(_ky+0Fh)
	movwf	((c:?_PresKeyEX+1)),c
	movlw	low(_ky+0Fh)
	movwf	((c:?_PresKeyEX)),c
	movlw	(019h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u71991
	goto	u71990
u71991:
	movlw	1
	goto	u71996
u71990:
	movlw	0
u71996:
	
	call	_PresKeyEX
	movwf	((TrybPracy@key))&0ffh
	line	279
;konsola.c: 279: key2=PresKeyEX(RdPrt(24),&ky[2]);
	movlb	2	; () banked
	movlw	high(_ky+0Ah)
	movwf	((c:?_PresKeyEX+1)),c
	movlw	low(_ky+0Ah)
	movwf	((c:?_PresKeyEX)),c
	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u72001
	goto	u72000
u72001:
	movlw	1
	goto	u72006
u72000:
	movlw	0
u72006:
	
	call	_PresKeyEX
	movwf	((TrybPracy@key2))&0ffh
	line	280
	
l37626:; BSR set to: 0

;konsola.c: 280: if(key==100||key>=8||key2==100||key2>=8)
	movf	((TrybPracy@key))&0ffh,w
	xorlw	100

	btfsc	status,2
	goto	u72011
	goto	u72010
u72011:
	goto	l37634
u72010:
	
l37628:; BSR set to: 0

	movlw	(08h)&0ffh
	cpfslt	((TrybPracy@key))&0ffh
	goto	u72021
	goto	u72020
u72021:
	goto	l37634
u72020:
	
l37630:; BSR set to: 0

	movf	((TrybPracy@key2))&0ffh,w
	xorlw	100

	btfsc	status,2
	goto	u72031
	goto	u72030
u72031:
	goto	l37634
u72030:
	
l37632:; BSR set to: 0

	movlw	(08h-1)
	cpfsgt	((TrybPracy@key2))&0ffh
	goto	u72041
	goto	u72040
u72041:
	goto	l37646
u72040:
	line	282
	
l37634:; BSR set to: 0

;konsola.c: 281: {
;konsola.c: 282: ResBufKeyEx(&ky[3]);
	movlb	2	; () banked
	movlw	high(_ky+0Fh)
	movwf	((c:?_ResBufKeyEx+1)),c
	movlw	low(_ky+0Fh)
	movwf	((c:?_ResBufKeyEx)),c
	call	_ResBufKeyEx	;wreg free
	line	283
;konsola.c: 283: ResBufKeyEx(&ky[2]);
	movlw	high(_ky+0Ah)
	movwf	((c:?_ResBufKeyEx+1)),c
	movlw	low(_ky+0Ah)
	movwf	((c:?_ResBufKeyEx)),c
	call	_ResBufKeyEx	;wreg free
	line	284
;konsola.c: 284: RestartKol(2);
	movlw	(02h)&0ffh
	
	call	_RestartKol
	line	287
	
l37636:; BSR set to: 1

;konsola.c: 287: PFN.b_set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,2
	line	288
	
l37638:; BSR set to: 1

;konsola.c: 288: PFN._prn_res=0;
	bcf	(0+(_PFN+03h))&0ffh,0
	line	289
	
l37640:; BSR set to: 1

;konsola.c: 289: PFN._set_ncw=1;
	bsf	(0+(_PFN+01h))&0ffh,0
	line	290
	
l37642:; BSR set to: 1

;konsola.c: 290: PFN._mod_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,3
	line	291
	
l37644:; BSR set to: 1

;konsola.c: 291: StartRTdS(9);
	movlw	(09h)&0ffh
	
	call	_StartRTdS
	line	295
	
l37646:
;konsola.c: 292: }
;konsola.c: 293: }
;konsola.c: 295: ExtR=(!PFN._pmpPWM||PFN._errIN||!PFN._ofzima||PFN._obgCW||!PFN._obgCO)?0:1;
	movlb	0	; () banked
	clrf	((_TrybPracy$5567))&0ffh
	
l37648:; BSR set to: 0

	movlb	1	; () banked
	
	btfss	(0+(_PFN+06h))&0ffh,5
	goto	u72051
	goto	u72050
u72051:
	goto	l37660
u72050:
	
l37650:; BSR set to: 1

	
	btfsc	(0+(_PFN+06h))&0ffh,4
	goto	u72061
	goto	u72060
u72061:
	goto	l37660
u72060:
	
l37652:; BSR set to: 1

	
	btfss	(0+(_PFN+06h))&0ffh,1
	goto	u72071
	goto	u72070
u72071:
	goto	l37660
u72070:
	
l37654:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,2
	goto	u72081
	goto	u72080
u72081:
	goto	l37660
u72080:
	
l37656:; BSR set to: 1

	
	btfss	(0+(_PFN+04h))&0ffh,1
	goto	u72091
	goto	u72090
u72091:
	goto	l37660
u72090:
	
l37658:; BSR set to: 1

	movlw	low(01h)
	movlb	0	; () banked
	movwf	((_TrybPracy$5567))&0ffh
	
l37660:
	movff	(_TrybPracy$5567),(TrybPracy@ExtR)
	line	296
	
l37662:
;konsola.c: 296: ExtR2=(PFN._errIN||!PFN._obgCO)?0:1;
	movlb	0	; () banked
	clrf	((_TrybPracy$5568))&0ffh
	
l37664:; BSR set to: 0

	movlb	1	; () banked
	
	btfsc	(0+(_PFN+06h))&0ffh,4
	goto	u72101
	goto	u72100
u72101:
	goto	l37670
u72100:
	
l37666:; BSR set to: 1

	
	btfss	(0+(_PFN+04h))&0ffh,1
	goto	u72111
	goto	u72110
u72111:
	goto	l37670
u72110:
	
l37668:; BSR set to: 1

	movlw	low(01h)
	movlb	0	; () banked
	movwf	((_TrybPracy$5568))&0ffh
	
l37670:
	movff	(_TrybPracy$5568),(TrybPracy@ExtR2)
	line	298
	
l37672:
;konsola.c: 298: if(RTdS(10)>50)
	movlw	(0Ah)&0ffh
	
	call	_RTdS
	movwf	(??_TrybPracy+0+0)&0ffh,c
	movlw	(033h)&0ffh
	subwf	((??_TrybPracy+0+0)),c,w
	btfss	status,0
	goto	u72121
	goto	u72120
u72121:
	goto	l4835
u72120:
	line	300
	
l37674:; BSR set to: 1

;konsola.c: 299: {
;konsola.c: 300: PFN._prn_res=0;
	bcf	(0+(_PFN+03h))&0ffh,0
	line	301
	
l4835:; BSR set to: 1

	line	302
;konsola.c: 301: }
;konsola.c: 302: if(PFN._prn_res&&(PFN._errCS||PFN._fnoCS)&&PFN._errIN)
	
	btfss	(0+(_PFN+03h))&0ffh,0
	goto	u72131
	goto	u72130
u72131:
	goto	l4836
u72130:
	
l37676:; BSR set to: 1

	
	btfsc	(0+(_PFN+05h))&0ffh,5
	goto	u72141
	goto	u72140
u72141:
	goto	l4838
u72140:
	
l37678:; BSR set to: 1

	
	btfss	(0+(_PFN+06h))&0ffh,0
	goto	u72151
	goto	u72150
u72151:
	goto	l4836
u72150:
	
l4838:; BSR set to: 1

	
	btfss	(0+(_PFN+06h))&0ffh,4
	goto	u72161
	goto	u72160
u72161:
	goto	l4836
u72160:
	line	304
	
l37680:; BSR set to: 1

;konsola.c: 303: {
;konsola.c: 304: PFN._prn_res=0;
	bcf	(0+(_PFN+03h))&0ffh,0
	line	305
	
l4836:; BSR set to: 1

	line	306
;konsola.c: 305: }
;konsola.c: 306: if(PFN._prn_res&&(PFN._errCS||PFN._fnoCS)&&(PFN._obgCW||PFN._oflato))
	
	btfss	(0+(_PFN+03h))&0ffh,0
	goto	u72171
	goto	u72170
u72171:
	goto	l4839
u72170:
	
l37682:; BSR set to: 1

	
	btfsc	(0+(_PFN+05h))&0ffh,5
	goto	u72181
	goto	u72180
u72181:
	goto	l4841
u72180:
	
l37684:; BSR set to: 1

	
	btfss	(0+(_PFN+06h))&0ffh,0
	goto	u72191
	goto	u72190
u72191:
	goto	l4839
u72190:
	
l4841:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,2
	goto	u72201
	goto	u72200
u72201:
	goto	l4843
u72200:
	
l37686:; BSR set to: 1

	
	btfss	(0+(_PFN+06h))&0ffh,2
	goto	u72211
	goto	u72210
u72211:
	goto	l4839
u72210:
	
l4843:; BSR set to: 1

	line	308
;konsola.c: 307: {
;konsola.c: 308: PFN._prn_res=0;
	bcf	(0+(_PFN+03h))&0ffh,0
	line	309
	
l4839:; BSR set to: 1

	line	310
;konsola.c: 309: }
;konsola.c: 310: if(!PFN._prn_res)
	
	btfsc	(0+(_PFN+03h))&0ffh,0
	goto	u72221
	goto	u72220
u72221:
	goto	l37690
u72220:
	line	312
	
l37688:; BSR set to: 1

;konsola.c: 311: {
;konsola.c: 312: PFN._prn_cs=0;
	bcf	(0+(_PFN+03h))&0ffh,1
	line	313
;konsola.c: 313: PFN._prn_in=0;
	bcf	(0+(_PFN+03h))&0ffh,2
	line	314
;konsola.c: 314: }
	goto	l4845
	line	317
	
l37690:; BSR set to: 1

;konsola.c: 315: else
;konsola.c: 316: {
;konsola.c: 317: if(ExtR)
	movlb	0	; () banked
	movf	((TrybPracy@ExtR))&0ffh,w
	btfsc	status,2
	goto	u72231
	goto	u72230
u72231:
	goto	l37696
u72230:
	line	319
	
l37692:; BSR set to: 0

;konsola.c: 318: {
;konsola.c: 319: if(RTdS(10)<(50/2))
	movlw	(0Ah)&0ffh
	
	call	_RTdS
	movwf	(??_TrybPracy+0+0)&0ffh,c
	movlw	(019h)&0ffh
	subwf	((??_TrybPracy+0+0)),c,w
	btfsc	status,0
	goto	u72241
	goto	u72240
u72241:
	goto	l4847
u72240:
	line	321
	
l37694:; BSR set to: 1

;konsola.c: 320: {
;konsola.c: 321: PFN._prn_cs=1;
	bsf	(0+(_PFN+03h))&0ffh,1
	line	322
;konsola.c: 322: PFN._prn_in=0;
	bcf	(0+(_PFN+03h))&0ffh,2
	line	323
;konsola.c: 323: }
	goto	l4845
	line	324
	
l4847:; BSR set to: 1

	line	326
;konsola.c: 324: else
;konsola.c: 325: {
;konsola.c: 326: PFN._prn_cs=0;
	bcf	(0+(_PFN+03h))&0ffh,1
	line	327
;konsola.c: 327: PFN._prn_in=1;
	bsf	(0+(_PFN+03h))&0ffh,2
	goto	l4845
	line	332
	
l37696:; BSR set to: 0

;konsola.c: 330: else
;konsola.c: 331: {
;konsola.c: 332: if(ExtR2)
	movf	((TrybPracy@ExtR2))&0ffh,w
	btfsc	status,2
	goto	u72251
	goto	u72250
u72251:
	goto	l4850
u72250:
	line	334
	
l37698:; BSR set to: 0

;konsola.c: 333: {
;konsola.c: 334: if(PFN._errCS||PFN._fnoCS)
	movlb	1	; () banked
	
	btfsc	(0+(_PFN+05h))&0ffh,5
	goto	u72261
	goto	u72260
u72261:
	goto	l37702
u72260:
	
l37700:; BSR set to: 1

	
	btfss	(0+(_PFN+06h))&0ffh,0
	goto	u72271
	goto	u72270
u72271:
	goto	l37706
u72270:
	line	336
	
l37702:; BSR set to: 1

;konsola.c: 335: {
;konsola.c: 336: if(RTdS(10)<50)
	movlw	(0Ah)&0ffh
	
	call	_RTdS
	movwf	(??_TrybPracy+0+0)&0ffh,c
	movlw	(032h)&0ffh
	subwf	((??_TrybPracy+0+0)),c,w
	btfsc	status,0
	goto	u72281
	goto	u72280
u72281:
	goto	l4845
u72280:
	goto	l4847
	line	344
	
l37706:; BSR set to: 1

;konsola.c: 342: else
;konsola.c: 343: {
;konsola.c: 344: if(RTdS(10)<(50/2))
	movlw	(0Ah)&0ffh
	
	call	_RTdS
	movwf	(??_TrybPracy+0+0)&0ffh,c
	movlw	(019h)&0ffh
	subwf	((??_TrybPracy+0+0)),c,w
	btfsc	status,0
	goto	u72291
	goto	u72290
u72291:
	goto	l4856
u72290:
	goto	l37694
	line	349
	
l4856:; BSR set to: 1

	line	351
;konsola.c: 349: else
;konsola.c: 350: {
;konsola.c: 351: if(!PFN._errIN)
	
	btfsc	(0+(_PFN+06h))&0ffh,4
	goto	u72301
	goto	u72300
u72301:
	goto	l37694
u72300:
	line	353
	
l37710:; BSR set to: 1

;konsola.c: 352: {
;konsola.c: 353: if(RTdS(10)>=(50/2))
	movlw	(0Ah)&0ffh
	
	call	_RTdS
	movwf	(??_TrybPracy+0+0)&0ffh,c
	movlw	(019h)&0ffh
	subwf	((??_TrybPracy+0+0)),c,w
	btfss	status,0
	goto	u72311
	goto	u72310
u72311:
	goto	l4845
u72310:
	goto	l4847
	line	367
	
l4850:; BSR set to: 0

	line	369
;konsola.c: 367: else
;konsola.c: 368: {
;konsola.c: 369: if(!(PFN._errCS||PFN._fnoCS))
	movlb	1	; () banked
	
	btfsc	(0+(_PFN+05h))&0ffh,5
	goto	u72321
	goto	u72320
u72321:
	goto	l37688
u72320:
	
l37714:; BSR set to: 1

	
	btfsc	(0+(_PFN+06h))&0ffh,0
	goto	u72331
	goto	u72330
u72331:
	goto	l37688
u72330:
	line	371
	
l37716:; BSR set to: 1

;konsola.c: 370: {
;konsola.c: 371: if(RTdS(10)<50)
	movlw	(0Ah)&0ffh
	
	call	_RTdS
	movwf	(??_TrybPracy+0+0)&0ffh,c
	movlw	(032h)&0ffh
	subwf	((??_TrybPracy+0+0)),c,w
	btfsc	status,0
	goto	u72341
	goto	u72340
u72341:
	goto	l4845
u72340:
	goto	l37694
	line	384
	
l4845:; BSR set to: 1

	line	386
;konsola.c: 381: }
;konsola.c: 382: }
;konsola.c: 383: }
;konsola.c: 384: }
;konsola.c: 386: if(!PFN._off&&(PFN._fnserw||PFN._ofnserw))
	
	btfsc	((_PFN))&0ffh,0
	goto	u72351
	goto	u72350
u72351:
	goto	l37736
u72350:
	
l37720:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,6
	goto	u72361
	goto	u72360
u72361:
	goto	l37724
u72360:
	
l37722:; BSR set to: 1

	
	btfss	(0+(_PFN+03h))&0ffh,7
	goto	u72371
	goto	u72370
u72371:
	goto	l37736
u72370:
	line	388
	
l37724:; BSR set to: 1

;konsola.c: 387: {
;konsola.c: 388: if(PresKeyEX(RdPrt(24),&ky[2])>0)
	movlb	2	; () banked
	movlw	high(_ky+0Ah)
	movwf	((c:?_PresKeyEX+1)),c
	movlw	low(_ky+0Ah)
	movwf	((c:?_PresKeyEX)),c
	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u72381
	goto	u72380
u72381:
	movlw	1
	goto	u72386
u72380:
	movlw	0
u72386:
	
	call	_PresKeyEX
	iorlw	0
	btfsc	status,2
	goto	u72391
	goto	u72390
u72391:
	goto	l37730
u72390:
	line	390
	
l37726:; BSR set to: 0

;konsola.c: 389: {
;konsola.c: 390: ResBufKeyEx(&ky[2]);
	movlb	2	; () banked
	movlw	high(_ky+0Ah)
	movwf	((c:?_ResBufKeyEx+1)),c
	movlw	low(_ky+0Ah)
	movwf	((c:?_ResBufKeyEx)),c
	call	_ResBufKeyEx	;wreg free
	line	391
	
l37728:; BSR set to: 2

;konsola.c: 391: PFN._fns_max=1;
	movlb	1	; () banked
	bsf	(0+(_PFN+01h))&0ffh,7
	line	393
	
l37730:
;konsola.c: 392: }
;konsola.c: 393: if(PresKeyEX(RdPrt(25),&ky[3])>0)
	movlb	2	; () banked
	movlw	high(_ky+0Fh)
	movwf	((c:?_PresKeyEX+1)),c
	movlw	low(_ky+0Fh)
	movwf	((c:?_PresKeyEX)),c
	movlw	(019h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u72401
	goto	u72400
u72401:
	movlw	1
	goto	u72406
u72400:
	movlw	0
u72406:
	
	call	_PresKeyEX
	iorlw	0
	btfsc	status,2
	goto	u72411
	goto	u72410
u72411:
	goto	l37736
u72410:
	line	395
	
l37732:; BSR set to: 0

;konsola.c: 394: {
;konsola.c: 395: ResBufKeyEx(&ky[3]);
	movlb	2	; () banked
	movlw	high(_ky+0Fh)
	movwf	((c:?_ResBufKeyEx+1)),c
	movlw	low(_ky+0Fh)
	movwf	((c:?_ResBufKeyEx)),c
	call	_ResBufKeyEx	;wreg free
	line	396
	
l37734:; BSR set to: 2

;konsola.c: 396: PFN._fns_max=0;
	movlb	1	; () banked
	bcf	(0+(_PFN+01h))&0ffh,7
	line	401
	
l37736:
;konsola.c: 397: }
;konsola.c: 398: }
;konsola.c: 401: key=PresKeyEX(RdPrt(22),&ky[0]);
	movlb	2	; () banked
	movlw	high(_ky)
	movwf	((c:?_PresKeyEX+1)),c
	movlw	low(_ky)
	movwf	((c:?_PresKeyEX)),c
	movlw	(016h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u72421
	goto	u72420
u72421:
	movlw	1
	goto	u72426
u72420:
	movlw	0
u72426:
	
	call	_PresKeyEX
	movwf	((TrybPracy@key))&0ffh
	line	402
	
l37738:; BSR set to: 0

;konsola.c: 402: if(key==100)
	movf	((TrybPracy@key))&0ffh,w
	xorlw	100

	btfss	status,2
	goto	u72431
	goto	u72430
u72431:
	goto	l37794
u72430:
	line	404
	
l37740:; BSR set to: 0

;konsola.c: 403: {
;konsola.c: 404: if(PFN._set_nco||PFN._set_ncw||PFN._str_nco||PFN._str_ncw||PFN._prn_res||PFN._set_fnserw||PFN._fnserw||PFN._set_aleg||PFN._aleg)
	movlb	1	; () banked
	
	btfsc	((_PFN))&0ffh,7
	goto	u72441
	goto	u72440
u72441:
	goto	l37758
u72440:
	
l37742:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,0
	goto	u72451
	goto	u72450
u72451:
	goto	l37758
u72450:
	
l37744:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,3
	goto	u72461
	goto	u72460
u72461:
	goto	l37758
u72460:
	
l37746:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,4
	goto	u72471
	goto	u72470
u72471:
	goto	l37758
u72470:
	
l37748:; BSR set to: 1

	
	btfsc	(0+(_PFN+03h))&0ffh,0
	goto	u72481
	goto	u72480
u72481:
	goto	l37758
u72480:
	
l37750:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,4
	goto	u72491
	goto	u72490
u72491:
	goto	l37758
u72490:
	
l37752:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,6
	goto	u72501
	goto	u72500
u72501:
	goto	l37758
u72500:
	
l37754:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,5
	goto	u72511
	goto	u72510
u72511:
	goto	l37758
u72510:
	
l37756:; BSR set to: 1

	
	btfss	(0+(_PFN+02h))&0ffh,0
	goto	u72521
	goto	u72520
u72521:
	goto	l4871
u72520:
	line	406
	
l37758:; BSR set to: 1

;konsola.c: 405: {
;konsola.c: 406: WaitToLowEx(&ky[0]);
	movlb	2	; () banked
	movlw	high(_ky)
	movwf	((c:?_WaitToLowEx+1)),c
	movlw	low(_ky)
	movwf	((c:?_WaitToLowEx)),c
	call	_WaitToLowEx	;wreg free
	line	407
	
l37760:; BSR set to: 2

;konsola.c: 407: PFN._set_nco=0;
	movlb	1	; () banked
	bcf	((_PFN))&0ffh,7
	line	408
	
l37762:; BSR set to: 1

;konsola.c: 408: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	409
	
l37764:; BSR set to: 1

;konsola.c: 409: PFN._str_nco=0;
	bcf	((_PFN))&0ffh,3
	line	410
	
l37766:; BSR set to: 1

;konsola.c: 410: PFN._str_ncw=0;
	bcf	((_PFN))&0ffh,4
	line	411
	
l37768:; BSR set to: 1

;konsola.c: 411: PFN._mod_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,3
	line	412
	
l37770:; BSR set to: 1

;konsola.c: 412: PFN._prn_res=0;
	bcf	(0+(_PFN+03h))&0ffh,0
	line	413
	
l37772:; BSR set to: 1

;konsola.c: 413: PFN._set_fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,4
	line	414
	
l37774:; BSR set to: 1

;konsola.c: 414: PFN._fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,6
	line	415
	
l37776:; BSR set to: 1

;konsola.c: 415: PFN._set_aleg=0;
	bcf	(0+(_PFN+01h))&0ffh,5
	line	416
	
l37778:; BSR set to: 1

;konsola.c: 416: PFN._aleg=0;
	bcf	(0+(_PFN+02h))&0ffh,0
	line	417
;konsola.c: 417: }
	goto	l37794
	line	418
	
l4871:; BSR set to: 1

	line	419
;konsola.c: 418: else
;konsola.c: 419: if(!PFN._off&&!PFN._ferr&&!PFN._fmsg)
	
	btfsc	((_PFN))&0ffh,0
	goto	u72531
	goto	u72530
u72531:
	goto	l4870
u72530:
	
l37780:; BSR set to: 1

	
	btfsc	(0+(_PFN+05h))&0ffh,0
	goto	u72541
	goto	u72540
u72541:
	goto	l4870
u72540:
	
l37782:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,7
	goto	u72551
	goto	u72550
u72551:
	goto	l4870
u72550:
	line	421
	
l37784:; BSR set to: 1

;konsola.c: 420: {
;konsola.c: 421: WaitToLowEx(&ky[0]);
	movlb	2	; () banked
	movlw	high(_ky)
	movwf	((c:?_WaitToLowEx+1)),c
	movlw	low(_ky)
	movwf	((c:?_WaitToLowEx)),c
	call	_WaitToLowEx	;wreg free
	line	422
	
l37786:; BSR set to: 2

;konsola.c: 422: if(!PFN._errCS||(PFN._fnoCS&&!PFN._errIN))
	movlb	1	; () banked
	
	btfss	(0+(_PFN+05h))&0ffh,5
	goto	u72561
	goto	u72560
u72561:
	goto	l4878
u72560:
	
l37788:; BSR set to: 1

	
	btfss	(0+(_PFN+06h))&0ffh,0
	goto	u72571
	goto	u72570
u72571:
	goto	l37792
u72570:
	
l37790:; BSR set to: 1

	
	btfsc	(0+(_PFN+06h))&0ffh,4
	goto	u72581
	goto	u72580
u72581:
	goto	l37792
u72580:
	
l4878:; BSR set to: 1

	line	424
;konsola.c: 423: {
;konsola.c: 424: PFN._prn_res=1;
	bsf	(0+(_PFN+03h))&0ffh,0
	line	426
	
l37792:; BSR set to: 1

;konsola.c: 425: }
;konsola.c: 426: StartRTdS(10);
	movlw	(0Ah)&0ffh
	
	call	_StartRTdS
	goto	l37794
	line	428
	
l4870:; BSR set to: 1

	line	430
;konsola.c: 427: }
;konsola.c: 428: }
;konsola.c: 430: }
	goto	l37794
	line	431
	
l4796:; BSR set to: 1

	line	433
;konsola.c: 431: else
;konsola.c: 432: {
;konsola.c: 433: PFN._set_nco=0;
	bcf	((_PFN))&0ffh,7
	line	434
;konsola.c: 434: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	435
;konsola.c: 435: PFN._str_nco=0;
	bcf	((_PFN))&0ffh,3
	line	436
;konsola.c: 436: PFN._str_ncw=0;
	bcf	((_PFN))&0ffh,4
	line	437
;konsola.c: 437: PFN._prn_res=0;
	bcf	(0+(_PFN+03h))&0ffh,0
	line	438
;konsola.c: 438: PFN._set_fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,4
	line	439
;konsola.c: 439: PFN._fnserw=0;
	bcf	(0+(_PFN+01h))&0ffh,6
	line	440
;konsola.c: 440: PFN._set_aleg=0;
	bcf	(0+(_PFN+01h))&0ffh,5
	line	441
;konsola.c: 441: PFN._aleg=0;
	bcf	(0+(_PFN+02h))&0ffh,0
	line	444
	
l37794:
;konsola.c: 442: }
;konsola.c: 444: if(RdPrt(22))
	movlw	(016h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u72591
	goto	u72590
u72591:
	goto	l4880
u72590:
	line	446
	
l37796:; BSR set to: 0

;konsola.c: 445: {
;konsola.c: 446: PFN._res=1;
	movlb	1	; () banked
	bsf	(0+(_PFN+02h))&0ffh,3
	line	447
;konsola.c: 447: }
	goto	l4882
	line	448
	
l4880:; BSR set to: 0

;konsola.c: 448: else PFN._res=0;
	movlb	1	; () banked
	bcf	(0+(_PFN+02h))&0ffh,3
	line	449
	
l4882:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_TrybPracy
	__end_of_TrybPracy:
	signat	_TrybPracy,88
	global	_FiltrPomiarowyCOCW

;; *************** function _FiltrPomiarowyCOCW *****************
;; Defined at:
;;		line 287 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_PmrTim1
;;		_StartTim1
;;		_GoldenEye
;;		_PmrTim2
;;		_StartTim2
;;		_FltParMod
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text22,class=CODE,space=0,reloc=2
global __ptext22
__ptext22:
psect	text22
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	287
	global	__size_of_FiltrPomiarowyCOCW
	__size_of_FiltrPomiarowyCOCW	equ	__end_of_FiltrPomiarowyCOCW-_FiltrPomiarowyCOCW
	
_FiltrPomiarowyCOCW:; BSR set to: 1

	opt	stack 24
	line	290
	
l29632:; BSR set to: 1

;pomiar.c: 290: if(PmrTim1(20))
	movlw	(014h)&0ffh
	
	call	_PmrTim1
	btfss	status,0
	goto	u52131
	goto	u52130
u52131:
	goto	l29638
u52130:
	line	292
	
l29634:; BSR set to: 1

;pomiar.c: 291: {
;pomiar.c: 292: StartTim1();
	call	_StartTim1	;wreg free
	line	293
	
l29636:; BSR set to: 1

;pomiar.c: 293: GoldenEye();
	call	_GoldenEye	;wreg free
	line	297
	
l29638:
;pomiar.c: 294: }
;pomiar.c: 297: DtCO.DCO=(DtCO.PPCO-1)-DtCO.CO;
	movlb	0	; () banked
	movf	(0+(_DtCO+02h))&0ffh,w
	subwf	(0+(_DtCO+04h))&0ffh,w
	movwf	(??_FiltrPomiarowyCOCW+0+0)&0ffh,c
	decf	((??_FiltrPomiarowyCOCW+0+0)),c,w
	movwf	(0+(_DtCO+08h))&0ffh
	line	299
	
l29640:; BSR set to: 0

;pomiar.c: 299: DtCW.DCW=(DtCW.PPCW-(2-1))-DtCW.CW;
	movf	(0+(_DtCW+02h))&0ffh,w
	subwf	(0+(_DtCW+04h))&0ffh,w
	movwf	(??_FiltrPomiarowyCOCW+0+0)&0ffh,c
	decf	((??_FiltrPomiarowyCOCW+0+0)),c,w
	movwf	(0+(_DtCW+07h))&0ffh
	line	301
	
l29642:; BSR set to: 0

;pomiar.c: 301: if(!DtIN._err_IN)
	movlb	1	; () banked
	
	btfsc	((_DtIN))&0ffh,0
	goto	u52141
	goto	u52140
u52141:
	goto	l29652
u52140:
	line	304
	
l29644:; BSR set to: 1

;pomiar.c: 302: {
;pomiar.c: 304: if(DtCO.CO>DtIN.IN) DtIN.DIN=DtCO.CO-DtIN.IN;
	movlb	0	; () banked
	movf	(0+(_DtCO+02h))&0ffh,w
	movlb	1	; () banked
	cpfslt	(0+(_DtIN+02h))&0ffh
	goto	u52151
	goto	u52150
u52151:
	goto	l1996
u52150:
	
l29646:; BSR set to: 1

	movf	(0+(_DtIN+02h))&0ffh,w
	movlb	0	; () banked
	subwf	(0+(_DtCO+02h))&0ffh,w
	movlb	1	; () banked
	movwf	(0+(_DtIN+03h))&0ffh
	goto	l29648
	line	305
	
l1996:; BSR set to: 1

;pomiar.c: 305: else DtIN.DIN=0;
	clrf	(0+(_DtIN+03h))&0ffh
	line	307
	
l29648:; BSR set to: 1

;pomiar.c: 307: if((DtCO.PPCO-(1-1))>DtIN.IN) DtIN.DIN2=(DtCO.PPCO-(1-1))-DtIN.IN;
	movlb	0	; () banked
	movf	(0+(_DtCO+04h))&0ffh,w
	movlb	1	; () banked
	cpfslt	(0+(_DtIN+02h))&0ffh
	goto	u52161
	goto	u52160
u52161:
	goto	l1998
u52160:
	
l29650:; BSR set to: 1

	movf	(0+(_DtIN+02h))&0ffh,w
	movlb	0	; () banked
	subwf	(0+(_DtCO+04h))&0ffh,w
	movlb	1	; () banked
	movwf	(0+(_DtIN+04h))&0ffh
	goto	l29652
	line	308
	
l1998:; BSR set to: 1

;pomiar.c: 308: else DtIN.DIN2=0;
	clrf	(0+(_DtIN+04h))&0ffh
	line	311
	
l29652:; BSR set to: 1

;pomiar.c: 309: }
;pomiar.c: 311: if(PmrTim2(10))
	movlw	(0Ah)&0ffh
	
	call	_PmrTim2
	btfss	status,0
	goto	u52171
	goto	u52170
u52171:
	goto	l29658
u52170:
	line	313
	
l29654:; BSR set to: 1

;pomiar.c: 312: {
;pomiar.c: 313: StartTim2();
	call	_StartTim2	;wreg free
	line	314
	
l29656:; BSR set to: 1

;pomiar.c: 314: FltParMod();
	call	_FltParMod	;wreg free
	line	316
	
l29658:
;pomiar.c: 315: }
;pomiar.c: 316: if(DtCO.dDCO>=6) DtCO._ldDCO=1;
	movlb	0	; () banked
	movf	(0+(_DtCO+09h))&0ffh,w
	xorlw	80h
	addlw	-((06h)^80h)
	btfss	status,0
	goto	u52181
	goto	u52180
u52181:
	goto	l2001
u52180:
	
l29660:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,4
	goto	l2003
	line	317
	
l2001:; BSR set to: 0

;pomiar.c: 317: else DtCO._ldDCO=0;
	bcf	(0+(_DtCO+01h))&0ffh,4
	line	318
	
l2003:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_FiltrPomiarowyCOCW
	__end_of_FiltrPomiarowyCOCW:
	signat	_FiltrPomiarowyCOCW,88
	global	_DecWSW

;; *************** function _DecWSW *****************
;; Defined at:
;;		line 936 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_NastawaCOCW
;;		_PrintErr
;;		_PrintErrTm
;;		_PrintErrCs
;;		_EndErr
;;		_PrintOFF
;;		_EndOFF
;;		_PrintCS
;;		_EndCS
;;		_PrintCW
;;		_EndCW
;;		_PrintCO
;;		_PrintL3
;;		_SetDiode
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text23,class=CODE,space=0,reloc=2
global __ptext23
__ptext23:
psect	text23
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	936
	global	__size_of_DecWSW
	__size_of_DecWSW	equ	__end_of_DecWSW-_DecWSW
	
_DecWSW:; BSR set to: 0

	opt	stack 21
	line	938
	
l37798:; BSR set to: 1

;main.c: 938: if(PFN._ferr||PFN._fmsg)
	
	btfsc	(0+(_PFN+05h))&0ffh,0
	goto	u72601
	goto	u72600
u72601:
	goto	l37802
u72600:
	
l37800:; BSR set to: 1

	
	btfss	(0+(_PFN+04h))&0ffh,7
	goto	u72611
	goto	u72610
u72611:
	goto	l37830
u72610:
	line	940
	
l37802:; BSR set to: 1

;main.c: 939: {
;main.c: 940: NastawaCOCW(1);
	movlw	(01h)&0ffh
	
	call	_NastawaCOCW
	line	941
	
l37804:; BSR set to: 1

;main.c: 941: if(PFN._ferr)
	
	btfss	(0+(_PFN+05h))&0ffh,0
	goto	u72621
	goto	u72620
u72621:
	goto	l781
u72620:
	line	943
	
l37806:; BSR set to: 1

;main.c: 942: {
;main.c: 943: if(!PFN._KnfDisErr||PFN._opgres)
	
	btfss	(0+(_PFN+02h))&0ffh,5
	goto	u72631
	goto	u72630
u72631:
	goto	l784
u72630:
	
l37808:; BSR set to: 1

	
	btfss	(0+(_PFN+05h))&0ffh,3
	goto	u72641
	goto	u72640
u72641:
	goto	l37830
u72640:
	
l784:; BSR set to: 1

	line	945
;main.c: 944: {
;main.c: 945: if(PFN._opgres) PrintErr(PFN.KERR,1);
	
	btfss	(0+(_PFN+05h))&0ffh,3
	goto	u72651
	goto	u72650
u72651:
	goto	l37812
u72650:
	
l37810:; BSR set to: 1

	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movf	(0+(_PFN+010h))&0ffh,w
	
	call	_PrintErr
	goto	l37838
	line	947
	
l37812:; BSR set to: 1

;main.c: 946: else
;main.c: 947: if(PFN.KERR!=7&&PFN.KERR!=9&&PFN.KERR!=0x0E) PrintErr(PFN.KERR,1);
	movf	(0+(_PFN+010h))&0ffh,w
	xorlw	7

	btfsc	status,2
	goto	u72661
	goto	u72660
u72661:
	goto	l37820
u72660:
	
l37814:; BSR set to: 1

	movf	(0+(_PFN+010h))&0ffh,w
	xorlw	9

	btfsc	status,2
	goto	u72671
	goto	u72670
u72671:
	goto	l37820
u72670:
	
l37816:; BSR set to: 1

	movf	(0+(_PFN+010h))&0ffh,w
	xorlw	14

	btfsc	status,2
	goto	u72681
	goto	u72680
u72681:
	goto	l37820
u72680:
	
l37818:; BSR set to: 1

	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movf	(0+(_PFN+010h))&0ffh,w
	
	call	_PrintErr
	goto	l37838
	line	950
	
l37820:; BSR set to: 1

;main.c: 948: else
;main.c: 949: {
;main.c: 950: if(PFN.KERR==7||PFN.KERR==0x0E)
	movf	(0+(_PFN+010h))&0ffh,w
	xorlw	7

	btfsc	status,2
	goto	u72691
	goto	u72690
u72691:
	goto	l37824
u72690:
	
l37822:; BSR set to: 1

	movf	(0+(_PFN+010h))&0ffh,w
	xorlw	14

	btfss	status,2
	goto	u72701
	goto	u72700
u72701:
	goto	l37826
u72700:
	line	952
	
l37824:; BSR set to: 1

;main.c: 951: {
;main.c: 952: PrintErrTm(PFN.KERR,PFN.CO,1);
	movff	0+(_PFN+09h),(c:?_PrintErrTm)
	movlw	low(01h)
	movwf	(0+((c:?_PrintErrTm)+01h)),c
	movf	(0+(_PFN+010h))&0ffh,w
	
	call	_PrintErrTm
	line	953
;main.c: 953: }
	goto	l37838
	line	955
	
l37826:; BSR set to: 1

;main.c: 954: else
;main.c: 955: if(PFN.KERR==9)
	movf	(0+(_PFN+010h))&0ffh,w
	xorlw	9

	btfss	status,2
	goto	u72711
	goto	u72710
u72711:
	goto	l786
u72710:
	line	957
	
l37828:; BSR set to: 1

;main.c: 956: {
;main.c: 957: PrintErrCs(PFN.KERR,PFN.CS,1);
	movff	0+(_PFN+0Bh),(c:?_PrintErrCs)
	movlw	low(01h)
	movwf	(0+((c:?_PrintErrCs)+01h)),c
	movf	(0+(_PFN+010h))&0ffh,w
	
	call	_PrintErrCs
	goto	l37838
	line	959
	
l786:; BSR set to: 1

	line	960
;main.c: 958: }
;main.c: 959: }
;main.c: 960: }
	goto	l37838
	line	963
	
l37830:; BSR set to: 1

;main.c: 961: else
;main.c: 962: {
;main.c: 963: EndErr();
	call	_EndErr	;wreg free
	goto	l37838
	line	966
	
l781:; BSR set to: 1

	line	968
;main.c: 966: else
;main.c: 967: {
;main.c: 968: if(!PFN._KnfDisErr)
	
	btfsc	(0+(_PFN+02h))&0ffh,5
	goto	u72721
	goto	u72720
u72721:
	goto	l37830
u72720:
	line	970
	
l37832:; BSR set to: 1

;main.c: 969: {
;main.c: 970: PrintErr(PFN.KAWR,0);
	movlw	low(0)
	movwf	((c:?_PrintErr)),c
	movf	(0+(_PFN+0Fh))&0ffh,w
	
	call	_PrintErr
	line	979
;main.c: 971: }else EndErr();
	
l37838:; BSR set to: 1

;main.c: 977: }
;main.c: 979: if(!PFN._opKNF&&!PFN._ferr&&!PFN._fmsg)
	
	btfsc	(0+(_PFN+04h))&0ffh,3
	goto	u72731
	goto	u72730
u72731:
	goto	l37960
u72730:
	
l37840:; BSR set to: 1

	
	btfsc	(0+(_PFN+05h))&0ffh,0
	goto	u72741
	goto	u72740
u72741:
	goto	l37960
u72740:
	
l37842:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,7
	goto	u72751
	goto	u72750
u72751:
	goto	l37960
u72750:
	line	981
	
l37844:; BSR set to: 1

;main.c: 980: {
;main.c: 981: if(PFN._ofoff)
	
	btfss	(0+(_PFN+06h))&0ffh,3
	goto	u72761
	goto	u72760
u72761:
	goto	l800
u72760:
	line	984
	
l37846:; BSR set to: 1

;main.c: 982: {
;main.c: 984: if((PFN._errCS||PFN._fnoCS)&&!PFN._tdzCO&&!PFN._tdzCW)
	
	btfsc	(0+(_PFN+05h))&0ffh,5
	goto	u72771
	goto	u72770
u72771:
	goto	l803
u72770:
	
l37848:; BSR set to: 1

	
	btfss	(0+(_PFN+06h))&0ffh,0
	goto	u72781
	goto	u72780
u72781:
	goto	l801
u72780:
	
l803:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,5
	goto	u72791
	goto	u72790
u72791:
	goto	l801
u72790:
	
l37850:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,6
	goto	u72801
	goto	u72800
u72801:
	goto	l801
u72800:
	line	986
	
l37852:; BSR set to: 1

;main.c: 985: {
;main.c: 986: PrintOFF();
	call	_PrintOFF	;wreg free
	line	987
;main.c: 987: }
	goto	l37960
	line	988
	
l801:; BSR set to: 1

	line	990
;main.c: 988: else
;main.c: 989: {
;main.c: 990: if(!PFN._errCS&&!PFN._fnoCS&&!PFN._tdzCO&&!PFN._tdzCW)
	
	btfsc	(0+(_PFN+05h))&0ffh,5
	goto	u72811
	goto	u72810
u72811:
	goto	l805
u72810:
	
l37854:; BSR set to: 1

	
	btfsc	(0+(_PFN+06h))&0ffh,0
	goto	u72821
	goto	u72820
u72821:
	goto	l805
u72820:
	
l37856:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,5
	goto	u72831
	goto	u72830
u72831:
	goto	l805
u72830:
	
l37858:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,6
	goto	u72841
	goto	u72840
u72841:
	goto	l805
u72840:
	line	992
	
l37860:; BSR set to: 1

;main.c: 991: {
;main.c: 992: EndOFF();
	call	_EndOFF	;wreg free
	line	993
;main.c: 993: PrintCS(PFN.CS);
	movlb	1	; () banked
	movf	(0+(_PFN+0Bh))&0ffh,w
	
	call	_PrintCS
	line	994
;main.c: 994: }
	goto	l37960
	line	995
	
l805:; BSR set to: 1

	line	996
;main.c: 995: else
;main.c: 996: if(PFN._tdzCW&&!PFN._errCW)
	
	btfss	(0+(_PFN+04h))&0ffh,6
	goto	u72851
	goto	u72850
u72851:
	goto	l807
u72850:
	
l37862:; BSR set to: 1

	
	btfsc	(0+(_PFN+05h))&0ffh,7
	goto	u72861
	goto	u72860
u72861:
	goto	l807
u72860:
	line	998
	
l37864:; BSR set to: 1

;main.c: 997: {
;main.c: 998: EndOFF();
	call	_EndOFF	;wreg free
	line	999
;main.c: 999: EndCS();
	call	_EndCS	;wreg free
	line	1000
;main.c: 1000: PrintCW(PFN.CW);
	movlb	1	; () banked
	movf	(0+(_PFN+0Ah))&0ffh,w
	
	call	_PrintCW
	line	1001
;main.c: 1001: }
	goto	l37960
	line	1002
	
l807:; BSR set to: 1

	line	1005
;main.c: 1002: else
;main.c: 1003: {
;main.c: 1005: if(PFN._tdzCO&&!PFN._errCO)
	
	btfss	(0+(_PFN+04h))&0ffh,5
	goto	u72871
	goto	u72870
u72871:
	goto	l37852
u72870:
	
l37866:; BSR set to: 1

	
	btfsc	(0+(_PFN+05h))&0ffh,6
	goto	u72881
	goto	u72880
u72881:
	goto	l37852
u72880:
	line	1007
	
l37868:; BSR set to: 1

;main.c: 1006: {
;main.c: 1007: EndOFF();
	call	_EndOFF	;wreg free
	line	1008
;main.c: 1008: EndCS();
	call	_EndCS	;wreg free
	line	1009
;main.c: 1009: EndCW();
	call	_EndCW	;wreg free
	line	1010
;main.c: 1010: PrintCO(PFN.CO);
	movlb	1	; () banked
	movf	(0+(_PFN+09h))&0ffh,w
	
	call	_PrintCO
	line	1011
;main.c: 1011: }
	goto	l37960
	line	1019
	
l800:; BSR set to: 1

	line	1023
;main.c: 1019: else
;main.c: 1020: {
;main.c: 1023: if(PFN._oflato)
	
	btfss	(0+(_PFN+06h))&0ffh,2
	goto	u72891
	goto	u72890
u72891:
	goto	l812
u72890:
	line	1025
	
l37872:; BSR set to: 1

;main.c: 1024: {
;main.c: 1025: if(!PFN._oaleg||PFN._set_aleg)
	
	btfss	(0+(_PFN+04h))&0ffh,0
	goto	u72901
	goto	u72900
u72901:
	goto	l815
u72900:
	
l37874:; BSR set to: 1

	
	btfss	(0+(_PFN+01h))&0ffh,5
	goto	u72911
	goto	u72910
u72911:
	goto	l813
u72910:
	
l815:; BSR set to: 1

	line	1027
;main.c: 1026: {
;main.c: 1027: if(PFN._obgCO||PFN._tdzCO)
	
	btfsc	(0+(_PFN+04h))&0ffh,1
	goto	u72921
	goto	u72920
u72921:
	goto	l818
u72920:
	
l37876:; BSR set to: 1

	
	btfss	(0+(_PFN+04h))&0ffh,5
	goto	u72931
	goto	u72930
u72931:
	goto	l816
u72930:
	
l818:; BSR set to: 1

	line	1029
;main.c: 1028: {
;main.c: 1029: if(PFN._prn_res)
	
	btfss	(0+(_PFN+03h))&0ffh,0
	goto	u72941
	goto	u72940
u72941:
	goto	l819
u72940:
	line	1031
	
l37878:; BSR set to: 1

;main.c: 1030: {
;main.c: 1031: if(PFN._prn_cs)
	
	btfss	(0+(_PFN+03h))&0ffh,1
	goto	u72951
	goto	u72950
u72951:
	goto	l824
u72950:
	line	1033
	
l37880:; BSR set to: 1

;main.c: 1032: {
;main.c: 1033: EndOFF();
	call	_EndOFF	;wreg free
	line	1034
;main.c: 1034: PrintCS(PFN.CS);
	movlb	1	; () banked
	movf	(0+(_PFN+0Bh))&0ffh,w
	
	call	_PrintCS
	goto	l37958
	line	1037
	
l819:; BSR set to: 1

	line	1039
;main.c: 1037: else
;main.c: 1038: {
;main.c: 1039: if(!PFN._errCO)
	
	btfsc	(0+(_PFN+05h))&0ffh,6
	goto	u72961
	goto	u72960
u72961:
	goto	l37884
u72960:
	line	1041
	
l37882:; BSR set to: 1

;main.c: 1040: {
;main.c: 1041: EndOFF();
	call	_EndOFF	;wreg free
	line	1042
;main.c: 1042: EndCS();
	call	_EndCS	;wreg free
	line	1043
;main.c: 1043: EndCW();
	call	_EndCW	;wreg free
	line	1044
;main.c: 1044: PrintCO(PFN.CO);
	movlb	1	; () banked
	movf	(0+(_PFN+09h))&0ffh,w
	
	call	_PrintCO
	line	1045
;main.c: 1045: }
	goto	l37958
	line	1048
	
l37884:; BSR set to: 1

;main.c: 1046: else
;main.c: 1047: {
;main.c: 1048: PrintOFF();
	call	_PrintOFF	;wreg free
	goto	l37958
	line	1052
	
l816:; BSR set to: 1

	line	1054
;main.c: 1052: else
;main.c: 1053: {
;main.c: 1054: if(PFN._prn_res)
	
	btfss	(0+(_PFN+03h))&0ffh,0
	goto	u72971
	goto	u72970
u72971:
	goto	l825
u72970:
	line	1056
	
l37886:; BSR set to: 1

;main.c: 1055: {
;main.c: 1056: if(PFN._prn_cs)
	
	btfss	(0+(_PFN+03h))&0ffh,1
	goto	u72981
	goto	u72980
u72981:
	goto	l824
u72980:
	line	1058
	
l37888:; BSR set to: 1

;main.c: 1057: {
;main.c: 1058: EndOFF();
	call	_EndOFF	;wreg free
	line	1059
;main.c: 1059: PrintCS(PFN.CS);
	movlb	1	; () banked
	movf	(0+(_PFN+0Bh))&0ffh,w
	
	call	_PrintCS
	goto	l37958
	line	1062
	
l825:; BSR set to: 1

	line	1064
;main.c: 1062: else
;main.c: 1063: {
;main.c: 1064: if(!PFN._errCW)
	
	btfsc	(0+(_PFN+05h))&0ffh,7
	goto	u72991
	goto	u72990
u72991:
	goto	l37884
u72990:
	line	1066
	
l37890:; BSR set to: 1

;main.c: 1065: {
;main.c: 1066: EndOFF();
	call	_EndOFF	;wreg free
	line	1067
;main.c: 1067: EndCS();
	call	_EndCS	;wreg free
	line	1068
;main.c: 1068: PrintCW(PFN.CW);
	movlb	1	; () banked
	movf	(0+(_PFN+0Ah))&0ffh,w
	
	call	_PrintCW
	line	1069
;main.c: 1069: }
	goto	l37958
	line	1075
	
l824:; BSR set to: 1

	line	1076
;main.c: 1073: }
;main.c: 1074: }
;main.c: 1075: }
;main.c: 1076: }
	goto	l37958
	line	1077
	
l813:; BSR set to: 1

	line	1079
;main.c: 1077: else
;main.c: 1078: {
;main.c: 1079: if(!PFN._errCW&&PFN._obgCW)
	
	btfsc	(0+(_PFN+05h))&0ffh,7
	goto	u73001
	goto	u73000
u73001:
	goto	l37884
u73000:
	
l37894:; BSR set to: 1

	
	btfss	(0+(_PFN+04h))&0ffh,2
	goto	u73011
	goto	u73010
u73011:
	goto	l37884
u73010:
	line	1081
	
l37896:; BSR set to: 1

;main.c: 1080: {
;main.c: 1081: EndOFF();
	call	_EndOFF	;wreg free
	line	1082
;main.c: 1082: EndCS();
	call	_EndCS	;wreg free
	line	1083
;main.c: 1083: PrintCW(PFN.CW);
	movlb	1	; () banked
	movf	(0+(_PFN+0Ah))&0ffh,w
	
	call	_PrintCW
	line	1084
;main.c: 1084: }
	goto	l37958
	line	1091
	
l812:; BSR set to: 1

	line	1094
;main.c: 1091: else
;main.c: 1094: if(PFN._ofzima)
	
	btfss	(0+(_PFN+06h))&0ffh,1
	goto	u73021
	goto	u73020
u73021:
	goto	l37958
u73020:
	line	1096
	
l37900:; BSR set to: 1

;main.c: 1095: {
;main.c: 1096: if(!PFN._ofnserw&&!PFN._oaleg&&!PFN._set_fnserw&&!PFN._set_aleg)
	
	btfsc	(0+(_PFN+03h))&0ffh,7
	goto	u73031
	goto	u73030
u73031:
	goto	l835
u73030:
	
l37902:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,0
	goto	u73041
	goto	u73040
u73041:
	goto	l835
u73040:
	
l37904:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,4
	goto	u73051
	goto	u73050
u73051:
	goto	l835
u73050:
	
l37906:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,5
	goto	u73061
	goto	u73060
u73061:
	goto	l835
u73060:
	line	1098
	
l37908:; BSR set to: 1

;main.c: 1097: {
;main.c: 1098: if(!PFN._obgCO&&!PFN._obgCW)
	
	btfsc	(0+(_PFN+04h))&0ffh,1
	goto	u73071
	goto	u73070
u73071:
	goto	l836
u73070:
	
l37910:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,2
	goto	u73081
	goto	u73080
u73081:
	goto	l836
u73080:
	line	1100
	
l37912:; BSR set to: 1

;main.c: 1099: {
;main.c: 1100: if(PFN._prn_res)
	
	btfss	(0+(_PFN+03h))&0ffh,0
	goto	u73091
	goto	u73090
u73091:
	goto	l837
u73090:
	line	1102
	
l37914:; BSR set to: 1

;main.c: 1101: {
;main.c: 1102: if(PFN._prn_cs)
	
	btfss	(0+(_PFN+03h))&0ffh,1
	goto	u73101
	goto	u73100
u73101:
	goto	l37918
u73100:
	line	1104
	
l37916:; BSR set to: 1

;main.c: 1103: {
;main.c: 1104: EndOFF();
	call	_EndOFF	;wreg free
	line	1105
;main.c: 1105: PrintCS(PFN.CS);
	movlb	1	; () banked
	movf	(0+(_PFN+0Bh))&0ffh,w
	
	call	_PrintCS
	line	1106
;main.c: 1106: }
	goto	l37958
	line	1107
	
l37918:; BSR set to: 1

;main.c: 1107: else EndCS();
	call	_EndCS	;wreg free
	goto	l37958
	line	1111
	
l837:; BSR set to: 1

	line	1113
;main.c: 1111: else
;main.c: 1112: {
;main.c: 1113: if(PFN._fL3) PrintL3();
	
	btfss	(0+(_PFN+05h))&0ffh,1
	goto	u73111
	goto	u73110
u73111:
	goto	l37884
u73110:
	
l37920:; BSR set to: 1

	call	_PrintL3	;wreg free
	goto	l37958
	line	1120
	
l836:; BSR set to: 1

	line	1122
;main.c: 1120: else
;main.c: 1121: {
;main.c: 1122: if(PFN._obgCO)
	
	btfss	(0+(_PFN+04h))&0ffh,1
	goto	u73121
	goto	u73120
u73121:
	goto	l844
u73120:
	line	1124
	
l37924:; BSR set to: 1

;main.c: 1123: {
;main.c: 1124: if(PFN._prn_res)
	
	btfss	(0+(_PFN+03h))&0ffh,0
	goto	u73131
	goto	u73130
u73131:
	goto	l845
u73130:
	line	1126
	
l37926:; BSR set to: 1

;main.c: 1125: {
;main.c: 1126: if(PFN._prn_cs)
	
	btfss	(0+(_PFN+03h))&0ffh,1
	goto	u73141
	goto	u73140
u73141:
	goto	l37918
u73140:
	line	1128
	
l37928:; BSR set to: 1

;main.c: 1127: {
;main.c: 1128: EndOFF();
	call	_EndOFF	;wreg free
	line	1129
;main.c: 1129: PrintCS(PFN.CS);
	movlb	1	; () banked
	movf	(0+(_PFN+0Bh))&0ffh,w
	
	call	_PrintCS
	line	1130
;main.c: 1130: }
	goto	l37958
	line	1135
	
l845:; BSR set to: 1

	line	1137
;main.c: 1135: else
;main.c: 1136: {
;main.c: 1137: if(!PFN._errCO)
	
	btfsc	(0+(_PFN+05h))&0ffh,6
	goto	u73151
	goto	u73150
u73151:
	goto	l37884
u73150:
	line	1139
	
l37932:; BSR set to: 1

;main.c: 1138: {
;main.c: 1139: EndOFF();
	call	_EndOFF	;wreg free
	line	1140
;main.c: 1140: EndCS();
	call	_EndCS	;wreg free
	line	1141
;main.c: 1141: EndCW();
	call	_EndCW	;wreg free
	line	1142
;main.c: 1142: PrintCO(PFN.CO);
	movlb	1	; () banked
	movf	(0+(_PFN+09h))&0ffh,w
	
	call	_PrintCO
	line	1143
;main.c: 1143: }
	goto	l37958
	line	1147
	
l844:; BSR set to: 1

	line	1149
;main.c: 1147: else
;main.c: 1148: {
;main.c: 1149: if(PFN._prn_res)
	
	btfss	(0+(_PFN+03h))&0ffh,0
	goto	u73161
	goto	u73160
u73161:
	goto	l852
u73160:
	line	1151
	
l37936:; BSR set to: 1

;main.c: 1150: {
;main.c: 1151: if(PFN._prn_cs)
	
	btfss	(0+(_PFN+03h))&0ffh,1
	goto	u73171
	goto	u73170
u73171:
	goto	l824
u73170:
	line	1153
	
l37938:; BSR set to: 1

;main.c: 1152: {
;main.c: 1153: EndOFF();
	call	_EndOFF	;wreg free
	line	1154
;main.c: 1154: PrintCS(PFN.CS);
	movlb	1	; () banked
	movf	(0+(_PFN+0Bh))&0ffh,w
	
	call	_PrintCS
	goto	l37958
	line	1157
	
l852:; BSR set to: 1

	line	1160
;main.c: 1157: else
;main.c: 1158: {
;main.c: 1160: if(!PFN._errCW)
	
	btfsc	(0+(_PFN+05h))&0ffh,7
	goto	u73181
	goto	u73180
u73181:
	goto	l37884
u73180:
	line	1162
	
l37940:; BSR set to: 1

;main.c: 1161: {
;main.c: 1162: EndOFF();
	call	_EndOFF	;wreg free
	line	1163
;main.c: 1163: EndCS();
	call	_EndCS	;wreg free
	line	1164
;main.c: 1164: PrintCW(PFN.CW);
	movlb	1	; () banked
	movf	(0+(_PFN+0Ah))&0ffh,w
	
	call	_PrintCW
	line	1165
;main.c: 1165: }
	goto	l37958
	line	1171
	
l835:; BSR set to: 1

	line	1173
;main.c: 1171: else
;main.c: 1172: {
;main.c: 1173: if(PFN._ofnserw||PFN._set_fnserw)
	
	btfsc	(0+(_PFN+03h))&0ffh,7
	goto	u73191
	goto	u73190
u73191:
	goto	l860
u73190:
	
l37944:; BSR set to: 1

	
	btfss	(0+(_PFN+01h))&0ffh,4
	goto	u73201
	goto	u73200
u73201:
	goto	l858
u73200:
	
l860:; BSR set to: 1

	line	1175
;main.c: 1174: {
;main.c: 1175: if(!PFN._errCO&&PFN._obgCO)
	
	btfsc	(0+(_PFN+05h))&0ffh,6
	goto	u73211
	goto	u73210
u73211:
	goto	l37884
u73210:
	
l37946:; BSR set to: 1

	
	btfss	(0+(_PFN+04h))&0ffh,1
	goto	u73221
	goto	u73220
u73221:
	goto	l37884
u73220:
	line	1177
	
l37948:; BSR set to: 1

;main.c: 1176: {
;main.c: 1177: EndOFF();
	call	_EndOFF	;wreg free
	line	1178
;main.c: 1178: EndCS();
	call	_EndCS	;wreg free
	line	1179
;main.c: 1179: EndCW();
	call	_EndCW	;wreg free
	line	1180
;main.c: 1180: PrintCO(PFN.CO);
	movlb	1	; () banked
	movf	(0+(_PFN+09h))&0ffh,w
	
	call	_PrintCO
	line	1181
;main.c: 1181: }
	goto	l37958
	line	1184
	
l858:; BSR set to: 1

	line	1186
;main.c: 1184: else
;main.c: 1185: {
;main.c: 1186: if(!PFN._errCW&&PFN._obgCW)
	
	btfsc	(0+(_PFN+05h))&0ffh,7
	goto	u73231
	goto	u73230
u73231:
	goto	l37884
u73230:
	
l37952:; BSR set to: 1

	
	btfss	(0+(_PFN+04h))&0ffh,2
	goto	u73241
	goto	u73240
u73241:
	goto	l37884
u73240:
	line	1188
	
l37954:; BSR set to: 1

;main.c: 1187: {
;main.c: 1188: EndOFF();
	call	_EndOFF	;wreg free
	line	1189
;main.c: 1189: EndCS();
	call	_EndCS	;wreg free
	line	1190
;main.c: 1190: PrintCW(PFN.CW);
	movlb	1	; () banked
	movf	(0+(_PFN+0Ah))&0ffh,w
	
	call	_PrintCW
	line	1198
;main.c: 1191: }
	
l37958:
;main.c: 1193: }
;main.c: 1194: }
;main.c: 1195: }
;main.c: 1198: NastawaCOCW(1);
	movlw	(01h)&0ffh
	
	call	_NastawaCOCW
	line	1203
	
l37960:
;main.c: 1200: }
;main.c: 1201: }
;main.c: 1203: SetDiode(0b00000010,PFN._plmCW||PFN._plmCO);
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((_DecWSW$2088))&0ffh
	
l37962:; BSR set to: 1

	
	btfsc	(0+(_PFN+03h))&0ffh,6
	goto	u73251
	goto	u73250
u73251:
	goto	l37968
u73250:
	
l37964:; BSR set to: 1

	
	btfsc	(0+(_PFN+03h))&0ffh,5
	goto	u73261
	goto	u73260
u73261:
	goto	l37968
u73260:
	
l37966:; BSR set to: 1

	clrf	((_DecWSW$2088))&0ffh
	
l37968:; BSR set to: 1

	movff	(_DecWSW$2088),(c:?_SetDiode)
	movlw	(02h)&0ffh
	
	call	_SetDiode
	line	1205
;main.c: 1205: SetDiode(0b00000100,PFN._ofnserw);
	movlw	0
	btfsc	(0+(_PFN+03h))&0ffh,7
	movlw	1
	movwf	((c:?_SetDiode)),c
	movlw	(04h)&0ffh
	
	call	_SetDiode
	line	1207
	
l37970:; BSR set to: 1

;main.c: 1207: SetDiode(0b00000001,PFN._ofzima&&!PFN._ofoff&&!PFN._opKNF);
	clrf	((_DecWSW$2089))&0ffh
	
l37972:; BSR set to: 1

	
	btfss	(0+(_PFN+06h))&0ffh,1
	goto	u73271
	goto	u73270
u73271:
	goto	l37980
u73270:
	
l37974:; BSR set to: 1

	
	btfsc	(0+(_PFN+06h))&0ffh,3
	goto	u73281
	goto	u73280
u73281:
	goto	l37980
u73280:
	
l37976:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,3
	goto	u73291
	goto	u73290
u73291:
	goto	l37980
u73290:
	
l37978:; BSR set to: 1

	movlw	low(01h)
	movwf	((_DecWSW$2089))&0ffh
	
l37980:; BSR set to: 1

	movff	(_DecWSW$2089),(c:?_SetDiode)
	movlw	(01h)&0ffh
	
	call	_SetDiode
	line	1208
	
l37982:; BSR set to: 1

;main.c: 1208: SetDiode(0b00001000,(PFN._ofzima||PFN._oflato)&&!PFN._ofoff&&!PFN._opKNF);
	clrf	((_DecWSW$2090))&0ffh
	
l37984:; BSR set to: 1

	
	btfsc	(0+(_PFN+06h))&0ffh,1
	goto	u73301
	goto	u73300
u73301:
	goto	l36622
u73300:
	
l37986:; BSR set to: 1

	
	btfss	(0+(_PFN+06h))&0ffh,2
	goto	u73311
	goto	u73310
u73311:
	goto	l37992
u73310:
	
l36622:; BSR set to: 1

	
	btfsc	(0+(_PFN+06h))&0ffh,3
	goto	u73321
	goto	u73320
u73321:
	goto	l37992
u73320:
	
l37988:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,3
	goto	u73331
	goto	u73330
u73331:
	goto	l37992
u73330:
	
l37990:; BSR set to: 1

	movlw	low(01h)
	movwf	((_DecWSW$2090))&0ffh
	
l37992:; BSR set to: 1

	movff	(_DecWSW$2090),(c:?_SetDiode)
	movlw	(08h)&0ffh
	
	call	_SetDiode
	line	1209
	
l872:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_DecWSW
	__end_of_DecWSW:
	signat	_DecWSW,88
	global	_DecERR

;; *************** function _DecERR *****************
;; Defined at:
;;		line 1215 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  w               1   10[BANK0 ] unsigned char 
;;  KnfDisErr       1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_RdPrt
;;		_SetErr
;;		_ErrPTG
;;		_EndErr
;;		_SetMsg
;;		_StartRTS
;;		_PrintErr
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text24,class=CODE,space=0,reloc=2
global __ptext24
__ptext24:
psect	text24
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	1215
	global	__size_of_DecERR
	__size_of_DecERR	equ	__end_of_DecERR-_DecERR
	
_DecERR:; BSR set to: 1

	opt	stack 21
	line	1226
	
l37994:; BSR set to: 1

;main.c: 1217: unsigned char w;
;main.c: 1226: if(!RdPrt(4))
	movlw	(04h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u73341
	goto	u73340
u73341:
	goto	l38002
u73340:
	line	1228
	
l37996:; BSR set to: 0

;main.c: 1227: {
;main.c: 1228: M.ERR_BTY=0x02;
	movlw	low(02h)
	movwf	(0+(_M+022h))&0ffh
	line	1230
	
l37998:; BSR set to: 0

;main.c: 1230: SetErr(0x02);
	movlw	(02h)&0ffh
	
	call	_SetErr
	line	1231
	
l38000:; BSR set to: 1

;main.c: 1231: ErrPTG();
	call	_ErrPTG	;wreg free
	line	1234
	
l38002:
;main.c: 1232: }
;main.c: 1234: if(M._RUSZ_PLOMIEN)
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,0
	goto	u73351
	goto	u73350
u73351:
	goto	l876
u73350:
	line	1236
	
l38004:; BSR set to: 0

;main.c: 1235: {
;main.c: 1236: M.ERR_BTY=0;
	clrf	(0+(_M+022h))&0ffh
	line	1239
;main.c: 1239: if(PFN._KnfDisErr) EndErr();
	movlb	1	; () banked
	
	btfss	(0+(_PFN+02h))&0ffh,5
	goto	u73361
	goto	u73360
u73361:
	goto	l38008
u73360:
	
l38006:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l38010
	line	1240
	
l38008:; BSR set to: 1

;main.c: 1240: else SetMsg(0x01);
	movlw	(01h)&0ffh
	
	call	_SetMsg
	line	1241
	
l38010:
;main.c: 1241: M._RUSZ_NTC_CO=0;
	movlb	0	; () banked
	bcf	(0+(_M+01Ah))&0ffh,0
	line	1242
	
l38012:
;main.c: 1242: M._RUSZ_CISN=0;
	movlb	0	; () banked
	bcf	(0+(_M+01Ah))&0ffh,5
	line	1243
	
l38014:; BSR set to: 0

;main.c: 1243: M._RUSZ_NCISN=0;
	bcf	(0+(_M+01Ah))&0ffh,6
	line	1244
	
l38016:; BSR set to: 0

;main.c: 1244: M._RUSZ_NTC_CW=0;
	bcf	(0+(_M+01Ah))&0ffh,1
	line	1245
	
l38018:; BSR set to: 0

;main.c: 1245: M._RUSZ_MOD=0;
	bcf	(0+(_M+01Ah))&0ffh,4
	line	1246
;main.c: 1246: }
	goto	l879
	line	1247
	
l876:; BSR set to: 0

	line	1248
;main.c: 1247: else
;main.c: 1248: if(M._RUSZ_CIAG)
	
	btfss	(0+(_M+010h))&0ffh,7
	goto	u73371
	goto	u73370
u73371:
	goto	l38036
u73370:
	line	1250
	
l38020:; BSR set to: 0

;main.c: 1249: {
;main.c: 1250: M.ERR_BTY=0;
	clrf	(0+(_M+022h))&0ffh
	line	1259
;main.c: 1259: if(PFN._KnfDisErr) EndErr();
	movlb	1	; () banked
	
	btfss	(0+(_PFN+02h))&0ffh,5
	goto	u73381
	goto	u73380
u73381:
	goto	l881
u73380:
	goto	l38006
	line	1260
	
l881:; BSR set to: 1

	line	1262
;main.c: 1260: else
;main.c: 1261: {
;main.c: 1262: if(M._prb_CIG) SetMsg(0x03);
	movlb	0	; () banked
	
	btfss	(0+(_M+01Ch))&0ffh,0
	goto	u73391
	goto	u73390
u73391:
	goto	l38010
u73390:
	
l38024:; BSR set to: 0

	movlw	(03h)&0ffh
	
	call	_SetMsg
	goto	l38010
	line	1272
	
l38036:; BSR set to: 0

;main.c: 1270: else
;main.c: 1272: if((RdPrt(18)&&(DtKNF.tpkt!=1)&&(DtKNF.tpkt!=2))||(RdPrt(18)&&!M._pob_KCW&&!M._pob_CW&&(DtKNF.tpkt==1||DtKNF.tpkt==2)))
	movlw	(012h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u73401
	goto	u73400
u73401:
	goto	l38042
u73400:
	
l38038:; BSR set to: 0

	movlb	1	; () banked
	decf	(0+(_DtKNF+07h))&0ffh,w

	btfsc	status,2
	goto	u73411
	goto	u73410
u73411:
	goto	l38042
u73410:
	
l38040:; BSR set to: 1

	movf	(0+(_DtKNF+07h))&0ffh,w
	xorlw	2

	btfss	status,2
	goto	u73421
	goto	u73420
u73421:
	goto	l38052
u73420:
	
l38042:
	movlw	(012h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u73431
	goto	u73430
u73431:
	goto	l885
u73430:
	
l38044:; BSR set to: 0

	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfss	status,2
	goto	u73441
	goto	u73440
u73441:
	goto	l885
u73440:
	
l38046:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u73451
	goto	u73450
u73451:
	goto	l885
u73450:
	
l38048:; BSR set to: 0

	movlb	1	; () banked
	decf	(0+(_DtKNF+07h))&0ffh,w

	btfsc	status,2
	goto	u73461
	goto	u73460
u73461:
	goto	l38052
u73460:
	
l38050:; BSR set to: 1

	movf	(0+(_DtKNF+07h))&0ffh,w
	xorlw	2

	btfss	status,2
	goto	u73471
	goto	u73470
u73471:
	goto	l885
u73470:
	line	1274
	
l38052:; BSR set to: 1

;main.c: 1273: {
;main.c: 1274: M.ERR_BTY=0x04;
	movlw	low(04h)
	movlb	0	; () banked
	movwf	(0+(_M+022h))&0ffh
	line	1277
	
l38054:; BSR set to: 0

;main.c: 1277: if(PFN._KnfDisErr) EndErr();
	movlb	1	; () banked
	
	btfss	(0+(_PFN+02h))&0ffh,5
	goto	u73481
	goto	u73480
u73481:
	goto	l38058
u73480:
	
l38056:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l38060
	line	1278
	
l38058:; BSR set to: 1

;main.c: 1278: else SetErr(0x04);
	movlw	(04h)&0ffh
	
	call	_SetErr
	line	1279
	
l38060:; BSR set to: 1

;main.c: 1279: M._RUSZ_NTC_CO=1;
	movlb	0	; () banked
	bsf	(0+(_M+01Ah))&0ffh,0
	goto	l38012
	line	1285
	
l885:
	line	1287
;main.c: 1285: else
;main.c: 1286: {
;main.c: 1287: M._RUSZ_NTC_CO=0;
	movlb	0	; () banked
	bcf	(0+(_M+01Ah))&0ffh,0
	line	1289
;main.c: 1289: if(M._RUSZ_POMPE)
	
	btfss	(0+(_M+011h))&0ffh,2
	goto	u73491
	goto	u73490
u73491:
	goto	l38084
u73490:
	line	1291
	
l38070:; BSR set to: 0

;main.c: 1290: {
;main.c: 1291: M.ERR_BTY=0;
	clrf	(0+(_M+022h))&0ffh
	line	1297
;main.c: 1297: if(PFN._KnfDisErr) EndErr();
	movlb	1	; () banked
	
	btfss	(0+(_PFN+02h))&0ffh,5
	goto	u73501
	goto	u73500
u73501:
	goto	l896
u73500:
	
l38072:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l38012
	line	1298
	
l896:; BSR set to: 1

	line	1300
;main.c: 1298: else
;main.c: 1299: {
;main.c: 1300: if(M._prb_PRZ) SetMsg(0x05);
	movlb	0	; () banked
	
	btfss	(0+(_M+01Ch))&0ffh,1
	goto	u73511
	goto	u73510
u73511:
	goto	l38012
u73510:
	
l38074:; BSR set to: 0

	movlw	(05h)&0ffh
	
	call	_SetMsg
	goto	l38012
	line	1310
	
l38084:; BSR set to: 0

;main.c: 1307: else
;main.c: 1308: {
;main.c: 1310: if(RdPrt(14))
	movlw	(0Eh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u73521
	goto	u73520
u73521:
	goto	l900
u73520:
	line	1312
	
l38086:; BSR set to: 0

;main.c: 1311: {
;main.c: 1312: M.ERR_BTY=0x08;
	movlw	low(08h)
	movwf	(0+(_M+022h))&0ffh
	line	1315
	
l38088:; BSR set to: 0

;main.c: 1315: if(PFN._KnfDisErr) EndErr();
	movlb	1	; () banked
	
	btfss	(0+(_PFN+02h))&0ffh,5
	goto	u73531
	goto	u73530
u73531:
	goto	l38092
u73530:
	
l38090:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l38094
	line	1316
	
l38092:; BSR set to: 1

;main.c: 1316: else SetErr(0x08);
	movlw	(08h)&0ffh
	
	call	_SetErr
	line	1317
	
l38094:; BSR set to: 1

;main.c: 1317: M._RUSZ_NCISN=1;
	movlb	0	; () banked
	bsf	(0+(_M+01Ah))&0ffh,6
	line	1318
	
l38096:; BSR set to: 0

;main.c: 1318: M._RUSZ_CISN=0;
	bcf	(0+(_M+01Ah))&0ffh,5
	goto	l38016
	line	1322
	
l900:; BSR set to: 0

	line	1324
;main.c: 1322: else
;main.c: 1323: {
;main.c: 1324: M._RUSZ_NCISN=0;
	bcf	(0+(_M+01Ah))&0ffh,6
	line	1326
	
l38102:; BSR set to: 0

;main.c: 1326: if(!RdPrt(15))
	movlw	(0Fh)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u73541
	goto	u73540
u73541:
	goto	l904
u73540:
	line	1329
	
l38104:; BSR set to: 0

;main.c: 1327: {
;main.c: 1329: M.ERR_BTY=0x09;
	movlw	low(09h)
	movwf	(0+(_M+022h))&0ffh
	line	1332
	
l38106:; BSR set to: 0

;main.c: 1332: if(PFN._KnfDisErr) EndErr();
	movlb	1	; () banked
	
	btfss	(0+(_PFN+02h))&0ffh,5
	goto	u73551
	goto	u73550
u73551:
	goto	l38110
u73550:
	
l38108:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l38112
	line	1333
	
l38110:; BSR set to: 1

;main.c: 1333: else SetErr(0x09);
	movlw	(09h)&0ffh
	
	call	_SetErr
	line	1335
	
l38112:; BSR set to: 1

;main.c: 1335: M._RUSZ_CISN=1;
	movlb	0	; () banked
	bsf	(0+(_M+01Ah))&0ffh,5
	goto	l38016
	line	1339
	
l904:; BSR set to: 0

	line	1341
;main.c: 1339: else
;main.c: 1340: {
;main.c: 1341: M._RUSZ_CISN=0;
	bcf	(0+(_M+01Ah))&0ffh,5
	line	1342
	
l38118:; BSR set to: 0

;main.c: 1342: if(DtKNF.tpkt!=0)
	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	btfsc	status,2
	goto	u73561
	goto	u73560
u73561:
	goto	l38136
u73560:
	line	1344
	
l38120:; BSR set to: 1

;main.c: 1343: {
;main.c: 1344: w=(DtCW._err_CW&&(PFN.poz==2))||((PFN.poz==3)&&DtCW._err_CW&&(M._pob_CW||M._pob_KCW||M._pob_AL));
	movlw	low(01h)
	movlb	0	; () banked
	movwf	((_DecERR$2094))&0ffh
	
l38122:; BSR set to: 0

	
	btfss	((_DtCW))&0ffh,0
	goto	u73571
	goto	u73570
u73571:
	goto	l38126
u73570:
	
l38124:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	2
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u73581
	goto	u73580
u73581:
	goto	l910
u73580:
	
l38126:
	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u73591
	goto	u73590
u73591:
	goto	l36626
u73590:
	
l38128:; BSR set to: 1

	movlb	0	; () banked
	
	btfss	((_DtCW))&0ffh,0
	goto	u73601
	goto	u73600
u73601:
	goto	l36626
u73600:
	
l38130:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u73611
	goto	u73610
u73611:
	goto	l910
u73610:
	
l38132:; BSR set to: 0

	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfss	status,2
	goto	u73621
	goto	u73620
u73621:
	goto	l910
u73620:
	
l38134:; BSR set to: 0

	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfss	status,2
	goto	u73631
	goto	u73630
u73631:
	goto	l910
u73630:
	
l36626:
	movlb	0	; () banked
	clrf	((_DecERR$2094))&0ffh
	
l910:
	movff	(_DecERR$2094),(DecERR@w)
	line	1345
;main.c: 1345: }
	goto	l38148
	line	1348
	
l38136:; BSR set to: 1

;main.c: 1346: else
;main.c: 1347: {
;main.c: 1348: w=(DtCW._err_CW&&(PFN.poz==2))||((PFN.poz==3)&&DtCW._err_CW&&RdPrt(11));
	movlw	low(01h)
	movlb	0	; () banked
	movwf	((_DecERR$2095))&0ffh
	
l38138:; BSR set to: 0

	
	btfss	((_DtCW))&0ffh,0
	goto	u73641
	goto	u73640
u73641:
	goto	l38142
u73640:
	
l38140:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	2
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u73651
	goto	u73650
u73651:
	goto	l913
u73650:
	
l38142:
	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u73661
	goto	u73660
u73661:
	goto	l36630
u73660:
	
l38144:; BSR set to: 1

	movlb	0	; () banked
	
	btfss	((_DtCW))&0ffh,0
	goto	u73671
	goto	u73670
u73671:
	goto	l36630
u73670:
	
l38146:; BSR set to: 0

	movlw	(0Bh)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u73681
	goto	u73680
u73681:
	goto	l913
u73680:
	
l36630:
	movlb	0	; () banked
	clrf	((_DecERR$2095))&0ffh
	
l913:
	movff	(_DecERR$2095),(DecERR@w)
	line	1351
	
l38148:
;main.c: 1349: }
;main.c: 1351: if(w)
	movlb	0	; () banked
	movf	((DecERR@w))&0ffh,w
	btfsc	status,2
	goto	u73691
	goto	u73690
u73691:
	goto	l914
u73690:
	line	1353
	
l38150:; BSR set to: 0

;main.c: 1352: {
;main.c: 1353: M.ERR_BTY=0x0A;
	movlw	low(0Ah)
	movwf	(0+(_M+022h))&0ffh
	line	1356
	
l38152:; BSR set to: 0

;main.c: 1356: if(PFN._KnfDisErr) EndErr();
	movlb	1	; () banked
	
	btfss	(0+(_PFN+02h))&0ffh,5
	goto	u73701
	goto	u73700
u73701:
	goto	l38156
u73700:
	
l38154:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l38158
	line	1357
	
l38156:; BSR set to: 1

;main.c: 1357: else SetErr(0x0A);
	movlw	(0Ah)&0ffh
	
	call	_SetErr
	line	1358
	
l38158:; BSR set to: 1

;main.c: 1358: M._RUSZ_NTC_CW=1;
	movlb	0	; () banked
	bsf	(0+(_M+01Ah))&0ffh,1
	goto	l38018
	line	1361
	
l914:; BSR set to: 0

	line	1363
;main.c: 1361: else
;main.c: 1362: {
;main.c: 1363: M._RUSZ_NTC_CW=0;
	bcf	(0+(_M+01Ah))&0ffh,1
	line	1365
	
l38162:; BSR set to: 0

;main.c: 1365: if(!RdPrt(8))
	movlw	(08h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u73711
	goto	u73710
u73711:
	goto	l918
u73710:
	line	1367
	
l38164:; BSR set to: 0

;main.c: 1366: {
;main.c: 1367: M.ERR_BTY=0x07;
	movlw	low(07h)
	movwf	(0+(_M+022h))&0ffh
	line	1370
	
l38166:; BSR set to: 0

;main.c: 1370: if(PFN._KnfDisErr) EndErr();
	movlb	1	; () banked
	
	btfss	(0+(_PFN+02h))&0ffh,5
	goto	u73721
	goto	u73720
u73721:
	goto	l38170
u73720:
	
l38168:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l38172
	line	1371
	
l38170:; BSR set to: 1

;main.c: 1371: else SetErr(0x07);
	movlw	(07h)&0ffh
	
	call	_SetErr
	line	1372
	
l38172:; BSR set to: 1

;main.c: 1372: M._RUSZ_MOD=1;
	movlb	0	; () banked
	bsf	(0+(_M+01Ah))&0ffh,4
	line	1373
;main.c: 1373: }
	goto	l879
	line	1374
	
l918:; BSR set to: 0

	line	1376
;main.c: 1374: else
;main.c: 1375: {
;main.c: 1376: M._RUSZ_MOD=0;
	bcf	(0+(_M+01Ah))&0ffh,4
	line	1377
	
l38174:; BSR set to: 0

;main.c: 1377: if(DtKNF.rdpm!=0)
	movlb	1	; () banked
	movf	(0+(_DtKNF+09h))&0ffh,w
	btfsc	status,2
	goto	u73731
	goto	u73730
u73731:
	goto	l923
u73730:
	line	1379
	
l38176:; BSR set to: 1

;main.c: 1378: {
;main.c: 1379: if((PFN.poz==3)&&(M._PRACA&&!M._RPM_CW)&&DtIN._err_IN)
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u73741
	goto	u73740
u73741:
	goto	l923
u73740:
	
l38178:; BSR set to: 1

	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u73751
	goto	u73750
u73751:
	goto	l923
u73750:
	
l38180:; BSR set to: 0

	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u73761
	goto	u73760
u73761:
	goto	l923
u73760:
	
l38182:; BSR set to: 0

	movlb	1	; () banked
	
	btfss	((_DtIN))&0ffh,0
	goto	u73771
	goto	u73770
u73771:
	goto	l923
u73770:
	line	1381
	
l38184:; BSR set to: 1

;main.c: 1380: {
;main.c: 1381: M.ERR_BTY=0x0E;
	movlw	low(0Eh)
	movlb	0	; () banked
	movwf	(0+(_M+022h))&0ffh
	line	1384
	
l38186:; BSR set to: 0

;main.c: 1384: if(PFN._KnfDisErr) EndErr();
	movlb	1	; () banked
	
	btfss	(0+(_PFN+02h))&0ffh,5
	goto	u73781
	goto	u73780
u73781:
	goto	l38190
u73780:
	
l38188:; BSR set to: 1

	call	_EndErr	;wreg free
	goto	l38192
	line	1385
	
l38190:; BSR set to: 1

;main.c: 1385: else SetErr(0x0E);
	movlw	(0Eh)&0ffh
	
	call	_SetErr
	line	1386
	
l38192:; BSR set to: 1

;main.c: 1386: M._RUSZ_NTC_IN=1;
	movlb	0	; () banked
	bsf	(0+(_M+01Ah))&0ffh,2
	line	1387
;main.c: 1387: }
	goto	l879
	line	1388
	
l923:
	line	1390
;main.c: 1388: else
;main.c: 1389: {
;main.c: 1390: M._RUSZ_NTC_IN=0;
	movlb	0	; () banked
	bcf	(0+(_M+01Ah))&0ffh,2
	line	1402
	
l879:; BSR set to: 0

	line	1407
;main.c: 1396: }
;main.c: 1397: }
;main.c: 1398: }
;main.c: 1399: }
;main.c: 1400: }
;main.c: 1401: }
;main.c: 1402: }
;main.c: 1407: if(!M._RUSZ_PLOMIEN&&!RdPrt(5)&&!M._ROZRUCH&&PORTDbits.RD0)
	
	btfsc	(0+(_M+011h))&0ffh,0
	goto	u73791
	goto	u73790
u73791:
	goto	l928
u73790:
	
l38194:; BSR set to: 0

	movlw	(05h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u73801
	goto	u73800
u73801:
	goto	l928
u73800:
	
l38196:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u73811
	goto	u73810
u73811:
	goto	l928
u73810:
	
l38198:; BSR set to: 0

	
	btfss	((c:3971)),c,0	;volatile
	goto	u73821
	goto	u73820
u73821:
	goto	l928
u73820:
	line	1409
	
l38200:; BSR set to: 0

;main.c: 1408: {
;main.c: 1409: if(M._TURBO)
	
	btfss	(0+(_M+01Bh))&0ffh,1
	goto	u73831
	goto	u73830
u73831:
	goto	l38214
u73830:
	line	1411
	
l38202:; BSR set to: 0

;main.c: 1410: {
;main.c: 1411: if(PORTDbits.RD3)
	
	btfss	((c:3971)),c,3	;volatile
	goto	u73841
	goto	u73840
u73841:
	goto	l38210
u73840:
	line	1413
	
l38204:; BSR set to: 0

;main.c: 1412: {
;main.c: 1413: if(RdPrt(3)&&RdPrt(4))
	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u73851
	goto	u73850
u73851:
	goto	l928
u73850:
	
l38206:; BSR set to: 0

	movlw	(04h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u73861
	goto	u73860
u73861:
	goto	l928
u73860:
	line	1415
	
l38208:; BSR set to: 0

;main.c: 1414: {
;main.c: 1415: M.RPL=0;
	clrf	(0+(_M+02Ah))&0ffh
	line	1416
;main.c: 1416: M._RUSZ_PLOMIEN=1;
	bsf	(0+(_M+011h))&0ffh,0
	goto	l928
	line	1421
	
l38210:; BSR set to: 0

;main.c: 1419: else
;main.c: 1420: {
;main.c: 1421: if(RdPrt(4))
	movlw	(04h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u73871
	goto	u73870
u73871:
	goto	l928
u73870:
	goto	l38208
	line	1430
	
l38214:; BSR set to: 0

;main.c: 1428: else
;main.c: 1429: {
;main.c: 1430: if(RdPrt(2)&&RdPrt(4))
	movlw	(02h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u73881
	goto	u73880
u73881:
	goto	l928
u73880:
	
l38216:; BSR set to: 0

	movlw	(04h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u73891
	goto	u73890
u73891:
	goto	l928
u73890:
	goto	l38208
	line	1436
	
l928:; BSR set to: 0

	line	1439
;main.c: 1434: }
;main.c: 1435: }
;main.c: 1436: }
;main.c: 1439: if(!M._TURBO)
	
	btfsc	(0+(_M+01Bh))&0ffh,1
	goto	u73901
	goto	u73900
u73901:
	goto	l936
u73900:
	line	1441
	
l38220:; BSR set to: 0

;main.c: 1440: {
;main.c: 1441: if(!M._RUSZ_CIAG&&!RdPrt(2)&&RdPrt(4)&&M._PRACA)
	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u73911
	goto	u73910
u73911:
	goto	l38256
u73910:
	
l38222:; BSR set to: 0

	movlw	(02h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u73921
	goto	u73920
u73921:
	goto	l38256
u73920:
	
l38224:; BSR set to: 0

	movlw	(04h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u73931
	goto	u73930
u73931:
	goto	l38256
u73930:
	
l38226:; BSR set to: 0

	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u73941
	goto	u73940
u73941:
	goto	l38256
u73940:
	line	1443
	
l38228:; BSR set to: 0

;main.c: 1442: {
;main.c: 1443: M.RCI=0;
	clrf	(0+(_M+02Bh))&0ffh
	line	1444
;main.c: 1444: M._RUSZ_CIAG=1;
	bsf	(0+(_M+010h))&0ffh,7
	goto	l38256
	line	1456
	
l936:; BSR set to: 0

	line	1458
;main.c: 1456: else
;main.c: 1457: {
;main.c: 1458: if(!M._RUSZ_CIAG&&!M._ROZRUCH&&!M._DE_VNT&&((!RdPrt(3)&&PORTDbits.RD3)||(RdPrt(3)&&!PORTDbits.RD3)))
	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u73951
	goto	u73950
u73951:
	goto	l38256
u73950:
	
l38230:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u73961
	goto	u73960
u73961:
	goto	l38256
u73960:
	
l38232:; BSR set to: 0

	
	btfsc	(0+(_M+01Bh))&0ffh,6
	goto	u73971
	goto	u73970
u73971:
	goto	l38256
u73970:
	
l38234:; BSR set to: 0

	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u73981
	goto	u73980
u73981:
	goto	l38238
u73980:
	
l38236:; BSR set to: 0

	
	btfsc	((c:3971)),c,3	;volatile
	goto	u73991
	goto	u73990
u73991:
	goto	l941
u73990:
	
l38238:; BSR set to: 0

	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u74001
	goto	u74000
u74001:
	goto	l38256
u74000:
	
l38240:; BSR set to: 0

	
	btfsc	((c:3971)),c,3	;volatile
	goto	u74011
	goto	u74010
u74011:
	goto	l38256
u74010:
	
l941:; BSR set to: 0

	line	1460
;main.c: 1459: {
;main.c: 1460: M.RCI=0;
	clrf	(0+(_M+02Bh))&0ffh
	line	1461
;main.c: 1461: M._RUSZ_CIAG=1;
	bsf	(0+(_M+010h))&0ffh,7
	line	1462
;main.c: 1462: if(!M.LICZNIK_CIG) StartRTS(10);
	tstfsz	(0+(_M+01Eh))&0ffh
	goto	u74021
	goto	u74020
u74021:
	goto	l38244
u74020:
	
l38242:; BSR set to: 0

	movlw	(0Ah)&0ffh
	
	call	_StartRTS
	line	1463
	
l38244:
;main.c: 1463: M.LICZNIK_CIG++;
	movlb	0	; () banked
	incf	(0+(_M+01Eh))&0ffh
	line	1464
	
l38246:; BSR set to: 0

;main.c: 1464: if(M.LICZNIK_CIG>=5)
	lfsr	2,_M+01Eh
	movlw	(05h-1)
	cpfsgt	indf2
	goto	u74031
	goto	u74030
u74031:
	goto	l38256
u74030:
	line	1466
	
l38248:; BSR set to: 0

;main.c: 1465: {
;main.c: 1466: M.LICZNIK_CIG=0;
	clrf	(0+(_M+01Eh))&0ffh
	line	1467
	
l38250:; BSR set to: 0

;main.c: 1467: M.ERR_BTY=0x03;
	movlw	low(03h)
	movwf	(0+(_M+022h))&0ffh
	line	1468
	
l38252:; BSR set to: 0

;main.c: 1468: PrintErr(0x03,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movlw	(03h)&0ffh
	
	call	_PrintErr
	line	1469
	
l38254:; BSR set to: 1

;main.c: 1469: ErrPTG();
	call	_ErrPTG	;wreg free
	line	1478
	
l38256:
;main.c: 1470: }
;main.c: 1471: }
;main.c: 1472: }
;main.c: 1478: if(!M._RUSZ_PLOMIEN&&!M._RUSZ_CIAG)
	movlb	0	; () banked
	
	btfsc	(0+(_M+011h))&0ffh,0
	goto	u74041
	goto	u74040
u74041:
	goto	l949
u74040:
	
l38258:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u74051
	goto	u74050
u74051:
	goto	l949
u74050:
	line	1479
	
l38260:; BSR set to: 0

;main.c: 1479: if(!M._RUSZ_NTC_CO&&!M._RUSZ_NCISN&&!M._RUSZ_CISN)
	
	btfsc	(0+(_M+01Ah))&0ffh,0
	goto	u74061
	goto	u74060
u74061:
	goto	l949
u74060:
	
l38262:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,6
	goto	u74071
	goto	u74070
u74071:
	goto	l949
u74070:
	
l38264:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,5
	goto	u74081
	goto	u74080
u74081:
	goto	l949
u74080:
	line	1480
	
l38266:; BSR set to: 0

;main.c: 1480: if(!M._RUSZ_NTC_CW&&!M._RUSZ_MOD&&!M._RUSZ_POMPE&&!M._RUSZ_NTC_IN)
	
	btfsc	(0+(_M+01Ah))&0ffh,1
	goto	u74091
	goto	u74090
u74091:
	goto	l949
u74090:
	
l38268:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,4
	goto	u74101
	goto	u74100
u74101:
	goto	l949
u74100:
	
l38270:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,2
	goto	u74111
	goto	u74110
u74111:
	goto	l949
u74110:
	
l38272:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,2
	goto	u74121
	goto	u74120
u74121:
	goto	l949
u74120:
	line	1482
	
l38274:; BSR set to: 0

;main.c: 1481: {
;main.c: 1482: M.ERR_BTY=0x00;
	clrf	(0+(_M+022h))&0ffh
	line	1483
	
l38276:; BSR set to: 0

;main.c: 1483: EndErr();
	call	_EndErr	;wreg free
	line	1485
	
l949:
	return
	opt stack 0
GLOBAL	__end_of_DecERR
	__end_of_DecERR:
	signat	_DecERR,88
	global	_DecSTR

;; *************** function _DecSTR *****************
;; Defined at:
;;		line 1490 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RTS
;;		_RdPrt
;;		_ToObiegCW
;;		_ToObiegCO
;;		_RestartMod
;;		_WritePWM
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text25,class=CODE,space=0,reloc=2
global __ptext25
__ptext25:
psect	text25
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	1490
	global	__size_of_DecSTR
	__size_of_DecSTR	equ	__end_of_DecSTR-_DecSTR
	
_DecSTR:
	opt	stack 25
	line	1496
	
l38278:
;main.c: 1496: if(RTS(9)>=3)
	movlw	(09h)&0ffh
	
	call	_RTS
	movwf	(??_DecSTR+0+0)&0ffh,c
	movlw	(03h)&0ffh
	subwf	((??_DecSTR+0+0)),c,w
	btfss	status,0
	goto	u74131
	goto	u74130
u74131:
	goto	l38282
u74130:
	line	1498
	
l38280:; BSR set to: 1

;main.c: 1497: {
;main.c: 1498: M._PW_START=0;
	movlb	0	; () banked
	bcf	(0+(_M+01Bh))&0ffh,0
	line	1499
;main.c: 1499: M._RS_START=0;
	bcf	(0+(_M+01Ah))&0ffh,7
	line	1502
	
l38282:
;main.c: 1500: }
;main.c: 1502: M._AKTYWNE_PGD=(RdPrt(20))?1:0;
	movlw	(014h)&0ffh
	
	call	_RdPrt
	movlw	0
	btfsc	status,0
	movlw	1
	movwf	(0+(_M+016h))&0ffh
	clrf	(1+(_M+016h))&0ffh
	line	1504
	
l38284:; BSR set to: 0

;main.c: 1504: if(!M._ROZRUCH&&PORTDbits.RD0&&DtCO._ldDCO) M._RUN_MNMOD=1;
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u74141
	goto	u74140
u74141:
	goto	l953
u74140:
	
l38286:; BSR set to: 0

	
	btfss	((c:3971)),c,0	;volatile
	goto	u74151
	goto	u74150
u74151:
	goto	l953
u74150:
	
l38288:; BSR set to: 0

	
	btfss	(0+(_DtCO+01h))&0ffh,4
	goto	u74161
	goto	u74160
u74161:
	goto	l953
u74160:
	
l38290:; BSR set to: 0

	bsf	(0+(_M+01Bh))&0ffh,4
	goto	l954
	line	1505
	
l953:; BSR set to: 0

;main.c: 1505: else M._RUN_MNMOD=0;
	bcf	(0+(_M+01Bh))&0ffh,4
	
l954:; BSR set to: 0

	line	1508
;main.c: 1508: if(!M._ZMKCOCW)
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u74171
	goto	u74170
u74171:
	goto	l955
u74170:
	line	1511
	
l38292:; BSR set to: 0

;main.c: 1509: {
;main.c: 1511: if(M._PRACA&&(M._pob_KCW||M._pob_CW||M._pob_DzCW||M._pob_AL)) ToObiegCW();
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u74181
	goto	u74180
u74181:
	goto	l956
u74180:
	
l38294:; BSR set to: 0

	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfss	status,2
	goto	u74191
	goto	u74190
u74191:
	goto	l38302
u74190:
	
l38296:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u74201
	goto	u74200
u74201:
	goto	l38302
u74200:
	
l38298:; BSR set to: 0

	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfss	status,2
	goto	u74211
	goto	u74210
u74211:
	goto	l38302
u74210:
	
l38300:; BSR set to: 0

	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfsc	status,2
	goto	u74221
	goto	u74220
u74221:
	goto	l956
u74220:
	
l38302:; BSR set to: 0

	call	_ToObiegCW	;wreg free
	goto	l955
	line	1512
	
l956:; BSR set to: 0

	line	1514
;main.c: 1512: else
;main.c: 1514: if(M._PRACA&&!M._BLOKUJ_15S&&(M._pob_KCO||M._pob_SRW||M._pob_CO||M._pob_DzCO)) ToObiegCO();
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u74231
	goto	u74230
u74231:
	goto	l960
u74230:
	
l38304:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u74241
	goto	u74240
u74241:
	goto	l960
u74240:
	
l38306:; BSR set to: 0

	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfss	status,2
	goto	u74251
	goto	u74250
u74251:
	goto	l38314
u74250:
	
l38308:; BSR set to: 0

	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfss	status,2
	goto	u74261
	goto	u74260
u74261:
	goto	l38314
u74260:
	
l38310:; BSR set to: 0

	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfss	status,2
	goto	u74271
	goto	u74270
u74271:
	goto	l38314
u74270:
	
l38312:; BSR set to: 0

	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfsc	status,2
	goto	u74281
	goto	u74280
u74281:
	goto	l960
u74280:
	
l38314:; BSR set to: 0

	call	_ToObiegCO	;wreg free
	goto	l955
	line	1515
	
l960:; BSR set to: 0

	line	1517
;main.c: 1515: else
;main.c: 1517: if(!M._PRACA&&M._WYLACZ&&(DtKNF.tpkt==3)&&(!DtCO._err_CO&&!DtCO._ptwp_CO)&&M._pob_CW) ToObiegCW();
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u74291
	goto	u74290
u74291:
	goto	l964
u74290:
	
l38316:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,0
	goto	u74301
	goto	u74300
u74301:
	goto	l964
u74300:
	
l38318:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	xorlw	3

	btfss	status,2
	goto	u74311
	goto	u74310
u74311:
	goto	l964
u74310:
	
l38320:; BSR set to: 1

	movlb	0	; () banked
	
	btfsc	((_DtCO))&0ffh,0
	goto	u74321
	goto	u74320
u74321:
	goto	l964
u74320:
	
l38322:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,0
	goto	u74331
	goto	u74330
u74331:
	goto	l964
u74330:
	
l38324:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u74341
	goto	u74340
u74341:
	goto	l964
u74340:
	goto	l38302
	line	1518
	
l964:
	line	1519
;main.c: 1518: else
;main.c: 1519: if(!M._PRACA&&M._WYLACZ&&(DtKNF.tpkt==0)&&(!DtCO._err_CO&&!DtCO._ptwp_CO)&&((PFN.poz==2)||(PFN.poz==3))&&DtCW._wpz_CW) ToObiegCW();
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u74351
	goto	u74350
u74351:
	goto	l966
u74350:
	
l38328:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,0
	goto	u74361
	goto	u74360
u74361:
	goto	l966
u74360:
	
l38330:; BSR set to: 0

	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+07h))&0ffh
	goto	u74371
	goto	u74370
u74371:
	goto	l966
u74370:
	
l38332:; BSR set to: 1

	movlb	0	; () banked
	
	btfsc	((_DtCO))&0ffh,0
	goto	u74381
	goto	u74380
u74381:
	goto	l966
u74380:
	
l38334:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,0
	goto	u74391
	goto	u74390
u74391:
	goto	l966
u74390:
	
l38336:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	2
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u74401
	goto	u74400
u74401:
	goto	l968
u74400:
	
l38338:; BSR set to: 1

	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u74411
	goto	u74410
u74411:
	goto	l966
u74410:
	
l968:; BSR set to: 1

	movlb	0	; () banked
	
	btfss	((_DtCW))&0ffh,3
	goto	u74421
	goto	u74420
u74421:
	goto	l966
u74420:
	goto	l38302
	line	1520
	
l966:
	line	1522
;main.c: 1520: else
;main.c: 1522: if(!M._PRACA&&!M._BLOKUJ_15S&&(RdPrt(13)||M._RUSZ_48)) ToObiegCO();
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u74431
	goto	u74430
u74431:
	goto	l970
u74430:
	
l38342:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u74441
	goto	u74440
u74441:
	goto	l970
u74440:
	
l38344:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u74451
	goto	u74450
u74451:
	goto	l38314
u74450:
	
l38346:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,3
	goto	u74461
	goto	u74460
u74461:
	goto	l970
u74460:
	goto	l38314
	line	1523
	
l970:; BSR set to: 0

	line	1525
;main.c: 1523: else
;main.c: 1525: if(!M._PRACA&&!M._BLOKUJ_15S&&M._pob_CO&&!DtCO._su_CO) ToObiegCO();
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u74471
	goto	u74470
u74471:
	goto	l38394
u74470:
	
l38350:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u74481
	goto	u74480
u74481:
	goto	l38394
u74480:
	
l38352:; BSR set to: 0

	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u74491
	goto	u74490
u74491:
	goto	l38394
u74490:
	
l38354:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,1
	goto	u74501
	goto	u74500
u74501:
	goto	l38394
u74500:
	goto	l38314
	line	1531
	
l978:; BSR set to: 1

	line	1534
;main.c: 1531: case 2:
;main.c: 1532: {
;main.c: 1534: if(!M._PRACA&&!M._WYLACZ&&!M._RUSZ_48) ToObiegCW();
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u74511
	goto	u74510
u74511:
	goto	l973
u74510:
	
l38358:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u74521
	goto	u74520
u74521:
	goto	l973
u74520:
	
l38360:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u74531
	goto	u74530
u74531:
	goto	l973
u74530:
	goto	l38302
	line	1537
;main.c: 1536: }
;main.c: 1537: case 3:
	
l981:; BSR set to: 1

	line	1540
;main.c: 1538: {
;main.c: 1540: if(!M._PRACA&&!M._WYLACZ&&!M._RUSZ_48&&(!PORTDbits.RD2||M._RUSZ_48Z3)) ToObiegCW();
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u74541
	goto	u74540
u74541:
	goto	l973
u74540:
	
l38364:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u74551
	goto	u74550
u74551:
	goto	l973
u74550:
	
l38366:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u74561
	goto	u74560
u74561:
	goto	l973
u74560:
	
l38368:; BSR set to: 0

	
	btfss	((c:3971)),c,2	;volatile
	goto	u74571
	goto	u74570
u74571:
	goto	l38302
u74570:
	
l38370:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,4
	goto	u74581
	goto	u74580
u74581:
	goto	l973
u74580:
	goto	l38302
	line	1543
;main.c: 1542: }
;main.c: 1543: case 0:
	
l985:; BSR set to: 1

	line	1546
;main.c: 1544: {
;main.c: 1546: if(!M._PRACA&&(RdPrt(17)||(!M._WYLACZ&&!M._RUSZ_48&&!PORTDbits.RD2))) ToObiegCW();
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u74591
	goto	u74590
u74591:
	goto	l973
u74590:
	
l38374:; BSR set to: 0

	movlw	(011h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u74601
	goto	u74600
u74601:
	goto	l38302
u74600:
	
l38376:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u74611
	goto	u74610
u74611:
	goto	l973
u74610:
	
l38378:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u74621
	goto	u74620
u74621:
	goto	l973
u74620:
	
l38380:; BSR set to: 0

	
	btfsc	((c:3971)),c,2	;volatile
	goto	u74631
	goto	u74630
u74631:
	goto	l973
u74630:
	goto	l38302
	line	1549
;main.c: 1548: }
;main.c: 1549: default:
	
l989:; BSR set to: 1

	line	1552
;main.c: 1550: {
;main.c: 1552: if(!M._PRACA&&!M._WYLACZ&&!M._RUSZ_48&&!PORTDbits.RD2) ToObiegCW();
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u74641
	goto	u74640
u74641:
	goto	l973
u74640:
	
l38384:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u74651
	goto	u74650
u74651:
	goto	l973
u74650:
	
l38386:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u74661
	goto	u74660
u74661:
	goto	l973
u74660:
	
l38388:; BSR set to: 0

	
	btfsc	((c:3971)),c,2	;volatile
	goto	u74671
	goto	u74670
u74671:
	goto	l973
u74670:
	goto	l38302
	line	1528
	
l38394:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l985
	xorlw	1^0	; case 1
	skipnz
	goto	l978
	xorlw	2^1	; case 2
	skipnz
	goto	l978
	xorlw	3^2	; case 3
	skipnz
	goto	l981
	goto	l989

	line	1556
	
l973:; BSR set to: 0

	line	1557
	
l955:; BSR set to: 0

	line	1560
;main.c: 1556: }
;main.c: 1557: }
;main.c: 1560: if(!M._ZMKCOCW)
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u74681
	goto	u74680
u74681:
	goto	l38474
u74680:
	goto	l38472
	line	1565
	
l994:; BSR set to: 1

	line	1567
;main.c: 1565: case 2:
;main.c: 1566: {
;main.c: 1567: if(!M._WYLACZ&&!M._RUSZ_48&&!M._PRACA)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u74691
	goto	u74690
u74691:
	goto	l38474
u74690:
	
l38398:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u74701
	goto	u74700
u74701:
	goto	l38474
u74700:
	
l38400:; BSR set to: 0

	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u74711
	goto	u74710
u74711:
	goto	l38474
u74710:
	line	1570
	
l38402:; BSR set to: 0

;main.c: 1568: {
;main.c: 1570: if(!M._RPM_CW&&RdPrt(13))
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u74721
	goto	u74720
u74721:
	goto	l996
u74720:
	
l38404:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u74731
	goto	u74730
u74731:
	goto	l996
u74730:
	line	1572
	
l38406:; BSR set to: 0

;main.c: 1571: {
;main.c: 1572: M._WYLACZ=1;
	bsf	(0+(_M+010h))&0ffh,0
	line	1573
;main.c: 1573: }
	goto	l38474
	line	1574
	
l996:; BSR set to: 0

	line	1576
;main.c: 1574: else
;main.c: 1576: if(!M._RPM_CW&&M._pob_CO&&!DtCO._su_CO)
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u74741
	goto	u74740
u74741:
	goto	l999
u74740:
	
l38408:; BSR set to: 0

	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u74751
	goto	u74750
u74751:
	goto	l999
u74750:
	
l38410:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,1
	goto	u74761
	goto	u74760
u74761:
	goto	l999
u74760:
	goto	l38406
	line	1583
;main.c: 1582: }
;main.c: 1583: case 3:
	
l1000:; BSR set to: 1

	line	1585
;main.c: 1584: {
;main.c: 1585: if(!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48&&!M._RUSZ_48Z3&&!M._PRACA)
	
	btfsc	((c:3971)),c,2	;volatile
	goto	u74771
	goto	u74770
u74771:
	goto	l38474
u74770:
	
l38414:; BSR set to: 1

	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u74781
	goto	u74780
u74781:
	goto	l38474
u74780:
	
l38416:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u74791
	goto	u74790
u74791:
	goto	l38474
u74790:
	
l38418:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,4
	goto	u74801
	goto	u74800
u74801:
	goto	l38474
u74800:
	
l38420:; BSR set to: 0

	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u74811
	goto	u74810
u74811:
	goto	l38474
u74810:
	line	1588
	
l38422:; BSR set to: 0

;main.c: 1586: {
;main.c: 1588: if(!M._RPM_CW&&RdPrt(13))
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u74821
	goto	u74820
u74821:
	goto	l1002
u74820:
	
l38424:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u74831
	goto	u74830
u74831:
	goto	l1002
u74830:
	line	1590
	
l38426:; BSR set to: 0

;main.c: 1589: {
;main.c: 1590: M._WYLACZ=1;
	bsf	(0+(_M+010h))&0ffh,0
	line	1591
;main.c: 1591: PORTDbits.RD2=1;
	bsf	((c:3971)),c,2	;volatile
	line	1592
;main.c: 1592: }
	goto	l38474
	line	1593
	
l1002:; BSR set to: 0

	line	1595
;main.c: 1593: else
;main.c: 1595: if(!M._RPM_CW&&M._pob_CO&&!DtCO._su_CO)
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u74841
	goto	u74840
u74841:
	goto	l38474
u74840:
	
l38428:; BSR set to: 0

	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u74851
	goto	u74850
u74851:
	goto	l38474
u74850:
	
l38430:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,1
	goto	u74861
	goto	u74860
u74861:
	goto	l38474
u74860:
	goto	l38426
	line	1603
;main.c: 1602: }
;main.c: 1603: case 0:
	
l1005:; BSR set to: 1

	line	1605
;main.c: 1604: {
;main.c: 1605: if(!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48&&!M._PRACA)
	
	btfsc	((c:3971)),c,2	;volatile
	goto	u74871
	goto	u74870
u74871:
	goto	l38474
u74870:
	
l38434:; BSR set to: 1

	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u74881
	goto	u74880
u74881:
	goto	l38474
u74880:
	
l38436:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u74891
	goto	u74890
u74891:
	goto	l38474
u74890:
	
l38438:; BSR set to: 0

	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u74901
	goto	u74900
u74901:
	goto	l38474
u74900:
	line	1608
	
l38440:; BSR set to: 0

;main.c: 1606: {
;main.c: 1608: if((!M._RPM_CW&&RdPrt(13))||(M._RPM_CW&&RdPrt(17)))
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u74911
	goto	u74910
u74911:
	goto	l1011
u74910:
	
l38442:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u74921
	goto	u74920
u74921:
	goto	l38426
u74920:
	
l1011:; BSR set to: 0

	
	btfss	(0+(_M+01Bh))&0ffh,7
	goto	u74931
	goto	u74930
u74931:
	goto	l1007
u74930:
	
l38444:; BSR set to: 0

	movlw	(011h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u74941
	goto	u74940
u74941:
	goto	l1007
u74940:
	goto	l38426
	line	1613
	
l1007:; BSR set to: 0

	line	1615
;main.c: 1613: else
;main.c: 1615: if(!M._RPM_CW&&M._pob_CO&&!DtCO._su_CO)
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u74951
	goto	u74950
u74951:
	goto	l38474
u74950:
	
l38446:; BSR set to: 0

	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u74961
	goto	u74960
u74961:
	goto	l38474
u74960:
	
l38448:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,1
	goto	u74971
	goto	u74970
u74971:
	goto	l38474
u74970:
	goto	l38426
	line	1623
;main.c: 1622: }
;main.c: 1623: default:
	
l1014:; BSR set to: 1

	line	1625
;main.c: 1624: {
;main.c: 1625: if(!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48&&!M._PRACA)
	
	btfsc	((c:3971)),c,2	;volatile
	goto	u74981
	goto	u74980
u74981:
	goto	l38474
u74980:
	
l38452:; BSR set to: 1

	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u74991
	goto	u74990
u74991:
	goto	l38474
u74990:
	
l38454:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u75001
	goto	u75000
u75001:
	goto	l38474
u75000:
	
l38456:; BSR set to: 0

	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u75011
	goto	u75010
u75011:
	goto	l38474
u75010:
	line	1628
	
l38458:; BSR set to: 0

;main.c: 1626: {
;main.c: 1628: if(!M._RPM_CW&&RdPrt(13))
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u75021
	goto	u75020
u75021:
	goto	l1016
u75020:
	
l38460:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u75031
	goto	u75030
u75031:
	goto	l1016
u75030:
	goto	l38426
	line	1633
	
l1016:; BSR set to: 0

	line	1635
;main.c: 1633: else
;main.c: 1635: if(!M._RPM_CW&&M._pob_CO&&!DtCO._su_CO)
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u75041
	goto	u75040
u75041:
	goto	l38474
u75040:
	
l38464:; BSR set to: 0

	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u75051
	goto	u75050
u75051:
	goto	l38474
u75050:
	
l38466:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,1
	goto	u75061
	goto	u75060
u75061:
	goto	l38474
u75060:
	goto	l38426
	line	1562
	
l38472:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1005
	xorlw	1^0	; case 1
	skipnz
	goto	l994
	xorlw	2^1	; case 2
	skipnz
	goto	l994
	xorlw	3^2	; case 3
	skipnz
	goto	l1000
	goto	l1014

	line	1643
	
l999:; BSR set to: 0

	line	1648
	
l38474:
;main.c: 1644: }
;main.c: 1648: if(M._pob_CO||M._pob_CW||M._pob_AL)
	movlb	0	; () banked
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfss	status,2
	goto	u75071
	goto	u75070
u75071:
	goto	l1021
u75070:
	
l38476:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u75081
	goto	u75080
u75081:
	goto	l1021
u75080:
	
l38478:; BSR set to: 0

	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfsc	status,2
	goto	u75091
	goto	u75090
u75091:
	goto	l1022
u75090:
	
l1021:; BSR set to: 0

	line	1650
;main.c: 1649: {
;main.c: 1650: if(!M._ROZRUCH&&PORTDbits.RD0)
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u75101
	goto	u75100
u75101:
	goto	l1022
u75100:
	
l38480:; BSR set to: 0

	
	btfss	((c:3971)),c,0	;volatile
	goto	u75111
	goto	u75110
u75111:
	goto	l1022
u75110:
	line	1652
	
l38482:; BSR set to: 0

;main.c: 1651: {
;main.c: 1652: if(!M._MODULUJ)
	
	btfsc	(0+(_M+011h))&0ffh,5
	goto	u75121
	goto	u75120
u75121:
	goto	l1025
u75120:
	line	1654
	
l38484:; BSR set to: 0

;main.c: 1653: {
;main.c: 1654: M._MODULUJ=1;
	bsf	(0+(_M+011h))&0ffh,5
	line	1655
	
l38486:; BSR set to: 0

;main.c: 1655: RestartMod();
	call	_RestartMod	;wreg free
	goto	l1025
	line	1659
	
l1022:; BSR set to: 0

;main.c: 1659: else M._MODULUJ=0;
	bcf	(0+(_M+011h))&0ffh,5
	line	1661
	
l1025:; BSR set to: 0

	line	1663
;main.c: 1663: if(!M._PRACA||!RdPrt(8)||M._RUN_MNMOD)
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u75131
	goto	u75130
u75131:
	goto	l1028
u75130:
	
l38488:; BSR set to: 0

	movlw	(08h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u75141
	goto	u75140
u75141:
	goto	l1028
u75140:
	
l38490:; BSR set to: 0

	
	btfss	(0+(_M+01Bh))&0ffh,4
	goto	u75151
	goto	u75150
u75151:
	goto	l38498
u75150:
	
l1028:; BSR set to: 0

	line	1665
;main.c: 1664: {
;main.c: 1665: M._MODULUJ=0;
	bcf	(0+(_M+011h))&0ffh,5
	line	1666
;main.c: 1666: if(!M._PRACA||!RdPrt(8)) WritePWM(0);
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u75161
	goto	u75160
u75161:
	goto	l38494
u75160:
	
l38492:; BSR set to: 0

	movlw	(08h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u75171
	goto	u75170
u75171:
	goto	l38496
u75170:
	
l38494:; BSR set to: 0

	movlw	(0)&0ffh
	
	call	_WritePWM
	goto	l38498
	line	1667
	
l38496:; BSR set to: 0

;main.c: 1667: else WritePWM(PWM.MDMOD);
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	
	call	_WritePWM
	line	1670
	
l38498:; BSR set to: 0

;main.c: 1668: }
;main.c: 1670: if(M._pob_KCW&&!M._ROZRUCH&&PORTDbits.RD0) WritePWM(PWM.MMAXCW);
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfsc	status,2
	goto	u75181
	goto	u75180
u75181:
	goto	l38506
u75180:
	
l38500:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u75191
	goto	u75190
u75191:
	goto	l38506
u75190:
	
l38502:; BSR set to: 0

	
	btfss	((c:3971)),c,0	;volatile
	goto	u75201
	goto	u75200
u75201:
	goto	l38506
u75200:
	
l38504:; BSR set to: 0

	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	
	call	_WritePWM
	line	1671
	
l38506:; BSR set to: 0

;main.c: 1671: if(M._pob_KCO&&!M._ROZRUCH&&PORTDbits.RD0) WritePWM(PWM.MMAXCO);
	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfsc	status,2
	goto	u75211
	goto	u75210
u75211:
	goto	l38514
u75210:
	
l38508:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u75221
	goto	u75220
u75221:
	goto	l38514
u75220:
	
l38510:; BSR set to: 0

	
	btfss	((c:3971)),c,0	;volatile
	goto	u75231
	goto	u75230
u75231:
	goto	l38514
u75230:
	
l38512:; BSR set to: 0

	movf	(0+(_PWM+01Dh))&0ffh,w	;volatile
	
	call	_WritePWM
	line	1675
	
l38514:; BSR set to: 0

;main.c: 1675: if(M._pob_SRW&&!M._ROZRUCH&&PORTDbits.RD0)
	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfsc	status,2
	goto	u75241
	goto	u75240
u75241:
	goto	l38526
u75240:
	
l38516:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u75251
	goto	u75250
u75251:
	goto	l38526
u75250:
	
l38518:; BSR set to: 0

	
	btfss	((c:3971)),c,0	;volatile
	goto	u75261
	goto	u75260
u75261:
	goto	l38526
u75260:
	line	1677
	
l38520:; BSR set to: 0

;main.c: 1676: {
;main.c: 1677: if(PFN._fns_max) WritePWM(0xF0);
	movlb	1	; () banked
	
	btfss	(0+(_PFN+01h))&0ffh,7
	goto	u75271
	goto	u75270
u75271:
	goto	l38524
u75270:
	
l38522:; BSR set to: 1

	movlw	(0F0h)&0ffh
	
	call	_WritePWM
	goto	l38526
	line	1678
	
l38524:; BSR set to: 1

;main.c: 1678: else WritePWM(PWM.MDMOD);
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	
	call	_WritePWM
	line	1681
	
l38526:; BSR set to: 0

;main.c: 1679: }
;main.c: 1681: if(M._pob_DzCO&&!M._ROZRUCH&&PORTDbits.RD0) WritePWM(PWM.MDMOD);
	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfsc	status,2
	goto	u75281
	goto	u75280
u75281:
	goto	l38534
u75280:
	
l38528:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u75291
	goto	u75290
u75291:
	goto	l38534
u75290:
	
l38530:; BSR set to: 0

	
	btfss	((c:3971)),c,0	;volatile
	goto	u75301
	goto	u75300
u75301:
	goto	l38534
u75300:
	
l38532:; BSR set to: 0

	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	
	call	_WritePWM
	line	1682
	
l38534:; BSR set to: 0

;main.c: 1682: if(M._pob_DzCW&&!M._ROZRUCH&&PORTDbits.RD0) WritePWM(PWM.MDMOD);
	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfsc	status,2
	goto	u75311
	goto	u75310
u75311:
	goto	l1040
u75310:
	
l38536:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u75321
	goto	u75320
u75321:
	goto	l1040
u75320:
	
l38538:; BSR set to: 0

	
	btfss	((c:3971)),c,0	;volatile
	goto	u75331
	goto	u75330
u75331:
	goto	l1040
u75330:
	
l38540:; BSR set to: 0

	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	
	call	_WritePWM
	line	1683
	
l1040:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_DecSTR
	__end_of_DecSTR:
	signat	_DecSTR,88
	global	_DecRozruch

;; *************** function _DecRozruch *****************
;; Defined at:
;;		line 1796 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    7
;; This function calls:
;;		_SetRozruch
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text26,class=CODE,space=0,reloc=2
global __ptext26
__ptext26:
psect	text26
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	1796
	global	__size_of_DecRozruch
	__size_of_DecRozruch	equ	__end_of_DecRozruch-_DecRozruch
	
_DecRozruch:; BSR set to: 0

	opt	stack 23
	line	1797
	
l38542:; BSR set to: 0

;main.c: 1797: switch(DtKNF.tpkt)
	goto	l38808
	line	1800
	
l1086:; BSR set to: 1

	line	1802
;main.c: 1800: case 2:
;main.c: 1801: {
;main.c: 1802: if(!M._ROZRUCH&&!PORTDbits.RD0)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u75341
	goto	u75340
u75341:
	goto	l1157
u75340:
	
l38544:; BSR set to: 0

	
	btfsc	((c:3971)),c,0	;volatile
	goto	u75351
	goto	u75350
u75351:
	goto	l1157
u75350:
	line	1803
	
l38546:; BSR set to: 0

;main.c: 1803: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M._RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u75361
	goto	u75360
u75361:
	goto	l1157
u75360:
	
l38548:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,5
	goto	u75371
	goto	u75370
u75371:
	goto	l1157
u75370:
	
l38550:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,0
	goto	u75381
	goto	u75380
u75381:
	goto	l1157
u75380:
	
l38552:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u75391
	goto	u75390
u75391:
	goto	l1157
u75390:
	
l38554:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,3
	goto	u75401
	goto	u75400
u75401:
	goto	l1157
u75400:
	
l38556:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,0
	goto	u75411
	goto	u75410
u75411:
	goto	l1157
u75410:
	
l38558:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,1
	goto	u75421
	goto	u75420
u75421:
	goto	l1157
u75420:
	line	1804
	
l38560:; BSR set to: 0

;main.c: 1804: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&&!M._RUSZ_NCISN)
	
	btfsc	(0+(_M+011h))&0ffh,2
	goto	u75431
	goto	u75430
u75431:
	goto	l1157
u75430:
	
l38562:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,5
	goto	u75441
	goto	u75440
u75441:
	goto	l1157
u75440:
	
l38564:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,6
	goto	u75451
	goto	u75450
u75451:
	goto	l1157
u75450:
	line	1806
	
l38566:; BSR set to: 0

;main.c: 1805: {
;main.c: 1806: if(M._pob_KCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfsc	status,2
	goto	u75461
	goto	u75460
u75461:
	goto	l38574
u75460:
	line	1808
	
l38568:; BSR set to: 0

;main.c: 1807: {
;main.c: 1808: if(DtCW._su_CW)
	
	btfss	((_DtCW))&0ffh,1
	goto	u75471
	goto	u75470
u75471:
	goto	l1157
u75470:
	line	1810
	
l38570:; BSR set to: 0

;main.c: 1809: {
;main.c: 1810: M._BLOKUJ_15S=1;
	bsf	(0+(_M+011h))&0ffh,4
	line	1811
;main.c: 1811: M.BL15=0;
	clrf	(0+(_M+027h))&0ffh
	line	1812
	
l38572:; BSR set to: 0

;main.c: 1812: SetRozruch();
	call	_SetRozruch	;wreg free
	goto	l1157
	line	1816
	
l38574:; BSR set to: 0

;main.c: 1815: else
;main.c: 1816: if(M._pob_KCO)
	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfsc	status,2
	goto	u75481
	goto	u75480
u75481:
	goto	l38580
u75480:
	line	1818
	
l38576:; BSR set to: 0

;main.c: 1817: {
;main.c: 1818: if(DtCO._su_CO) SetRozruch();
	
	btfss	((_DtCO))&0ffh,1
	goto	u75491
	goto	u75490
u75491:
	goto	l1157
u75490:
	goto	l38572
	line	1821
	
l38580:; BSR set to: 0

;main.c: 1820: else
;main.c: 1821: if(M._pob_SRW)
	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfsc	status,2
	goto	u75501
	goto	u75500
u75501:
	goto	l38586
u75500:
	line	1823
	
l38582:; BSR set to: 0

;main.c: 1822: {
;main.c: 1823: if(DtCO._su_SRW_CO) SetRozruch();
	
	btfss	((_DtCO))&0ffh,3
	goto	u75511
	goto	u75510
u75511:
	goto	l1157
u75510:
	goto	l38572
	line	1826
	
l38586:; BSR set to: 0

;main.c: 1825: else
;main.c: 1826: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u75521
	goto	u75520
u75521:
	goto	l38594
u75520:
	line	1828
	
l38588:; BSR set to: 0

;main.c: 1827: {
;main.c: 1828: if(DtCW._su_CW)
	
	btfss	((_DtCW))&0ffh,1
	goto	u75531
	goto	u75530
u75531:
	goto	l1089
u75530:
	goto	l38570
	line	1836
	
l38594:; BSR set to: 0

;main.c: 1835: else
;main.c: 1836: if(M._pob_CO&&DtCO._su_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u75541
	goto	u75540
u75541:
	goto	l38604
u75540:
	
l38596:; BSR set to: 0

	
	btfss	((_DtCO))&0ffh,1
	goto	u75551
	goto	u75550
u75551:
	goto	l38604
u75550:
	
l38598:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u75561
	goto	u75560
u75561:
	goto	l38604
u75560:
	
l38600:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u75571
	goto	u75570
u75571:
	goto	l38604
u75570:
	goto	l38572
	line	1841
	
l38604:; BSR set to: 0

;main.c: 1840: else
;main.c: 1841: if(M._pob_DzCO&&DtCO._su_DZ_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfsc	status,2
	goto	u75581
	goto	u75580
u75581:
	goto	l38614
u75580:
	
l38606:; BSR set to: 0

	
	btfss	((_DtCO))&0ffh,6
	goto	u75591
	goto	u75590
u75591:
	goto	l38614
u75590:
	
l38608:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u75601
	goto	u75600
u75601:
	goto	l38614
u75600:
	
l38610:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u75611
	goto	u75610
u75611:
	goto	l38614
u75610:
	goto	l38572
	line	1846
	
l38614:; BSR set to: 0

;main.c: 1845: else
;main.c: 1846: if(M._pob_DzCW&&DtCW._su_DZ_CW)
	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfsc	status,2
	goto	u75621
	goto	u75620
u75621:
	goto	l1089
u75620:
	
l38616:; BSR set to: 0

	
	btfss	((_DtCW))&0ffh,5
	goto	u75631
	goto	u75630
u75631:
	goto	l1089
u75630:
	goto	l38570
	line	1852
	
l1089:; BSR set to: 0

	goto	l1157
	line	1856
	
l1109:; BSR set to: 1

	line	1858
;main.c: 1856: case 3:
;main.c: 1857: {
;main.c: 1858: if(!M._ROZRUCH&&!PORTDbits.RD0)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u75641
	goto	u75640
u75641:
	goto	l1157
u75640:
	
l38622:; BSR set to: 0

	
	btfsc	((c:3971)),c,0	;volatile
	goto	u75651
	goto	u75650
u75651:
	goto	l1157
u75650:
	line	1859
	
l38624:; BSR set to: 0

;main.c: 1859: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M._RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u75661
	goto	u75660
u75661:
	goto	l1157
u75660:
	
l38626:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,5
	goto	u75671
	goto	u75670
u75671:
	goto	l1157
u75670:
	
l38628:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,0
	goto	u75681
	goto	u75680
u75681:
	goto	l1157
u75680:
	
l38630:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u75691
	goto	u75690
u75691:
	goto	l1157
u75690:
	
l38632:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,3
	goto	u75701
	goto	u75700
u75701:
	goto	l1157
u75700:
	
l38634:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,0
	goto	u75711
	goto	u75710
u75711:
	goto	l1157
u75710:
	
l38636:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,1
	goto	u75721
	goto	u75720
u75721:
	goto	l1157
u75720:
	line	1860
	
l38638:; BSR set to: 0

;main.c: 1860: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&&!M._RUSZ_NCISN)
	
	btfsc	(0+(_M+011h))&0ffh,2
	goto	u75731
	goto	u75730
u75731:
	goto	l1157
u75730:
	
l38640:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,5
	goto	u75741
	goto	u75740
u75741:
	goto	l1157
u75740:
	
l38642:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,6
	goto	u75751
	goto	u75750
u75751:
	goto	l1157
u75750:
	line	1862
	
l38644:; BSR set to: 0

;main.c: 1861: {
;main.c: 1862: if(M._pob_KCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfsc	status,2
	goto	u75761
	goto	u75760
u75761:
	goto	l38654
u75760:
	line	1864
	
l38646:; BSR set to: 0

;main.c: 1863: {
;main.c: 1864: if(DtCW._su_CW&&DtCO._pz_CO)
	
	btfss	((_DtCW))&0ffh,1
	goto	u75771
	goto	u75770
u75771:
	goto	l1157
u75770:
	
l38648:; BSR set to: 0

	
	btfss	(0+(_DtCO+01h))&0ffh,1
	goto	u75781
	goto	u75780
u75781:
	goto	l1157
u75780:
	goto	l38570
	line	1872
	
l38654:; BSR set to: 0

;main.c: 1871: else
;main.c: 1872: if(M._pob_KCO)
	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfsc	status,2
	goto	u75791
	goto	u75790
u75791:
	goto	l38660
u75790:
	line	1874
	
l38656:; BSR set to: 0

;main.c: 1873: {
;main.c: 1874: if(DtCO._su_CO) SetRozruch();
	
	btfss	((_DtCO))&0ffh,1
	goto	u75801
	goto	u75800
u75801:
	goto	l1157
u75800:
	goto	l38572
	line	1877
	
l38660:; BSR set to: 0

;main.c: 1876: else
;main.c: 1877: if(M._pob_SRW)
	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfsc	status,2
	goto	u75811
	goto	u75810
u75811:
	goto	l38666
u75810:
	line	1879
	
l38662:; BSR set to: 0

;main.c: 1878: {
;main.c: 1879: if(DtCO._su_SRW_CO) SetRozruch();
	
	btfss	((_DtCO))&0ffh,3
	goto	u75821
	goto	u75820
u75821:
	goto	l1157
u75820:
	goto	l38572
	line	1882
	
l38666:; BSR set to: 0

;main.c: 1881: else
;main.c: 1882: if(M._pob_AL)
	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfsc	status,2
	goto	u75831
	goto	u75830
u75831:
	goto	l38674
u75830:
	line	1884
	
l38668:; BSR set to: 0

;main.c: 1883: {
;main.c: 1884: if(DtCO._pz_CO)
	
	btfss	(0+(_DtCO+01h))&0ffh,1
	goto	u75841
	goto	u75840
u75841:
	goto	l1157
u75840:
	goto	l38570
	line	1892
	
l38674:; BSR set to: 0

;main.c: 1891: else
;main.c: 1892: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u75851
	goto	u75850
u75851:
	goto	l38684
u75850:
	line	1894
	
l38676:; BSR set to: 0

;main.c: 1893: {
;main.c: 1894: if(DtCW._su_CW&&DtCO._pz_CO)
	
	btfss	((_DtCW))&0ffh,1
	goto	u75861
	goto	u75860
u75861:
	goto	l1157
u75860:
	
l38678:; BSR set to: 0

	
	btfss	(0+(_DtCO+01h))&0ffh,1
	goto	u75871
	goto	u75870
u75871:
	goto	l1157
u75870:
	goto	l38570
	line	1902
	
l38684:; BSR set to: 0

;main.c: 1901: else
;main.c: 1902: if(M._pob_CO&&DtCO._su_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u75881
	goto	u75880
u75881:
	goto	l38694
u75880:
	
l38686:; BSR set to: 0

	
	btfss	((_DtCO))&0ffh,1
	goto	u75891
	goto	u75890
u75891:
	goto	l38694
u75890:
	
l38688:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u75901
	goto	u75900
u75901:
	goto	l38694
u75900:
	
l38690:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u75911
	goto	u75910
u75911:
	goto	l38694
u75910:
	goto	l38572
	line	1907
	
l38694:; BSR set to: 0

;main.c: 1906: else
;main.c: 1907: if(M._pob_DzCO&&DtCO._su_DZ_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfsc	status,2
	goto	u75921
	goto	u75920
u75921:
	goto	l38704
u75920:
	
l38696:; BSR set to: 0

	
	btfss	((_DtCO))&0ffh,6
	goto	u75931
	goto	u75930
u75931:
	goto	l38704
u75930:
	
l38698:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u75941
	goto	u75940
u75941:
	goto	l38704
u75940:
	
l38700:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u75951
	goto	u75950
u75951:
	goto	l38704
u75950:
	goto	l38572
	line	1912
	
l38704:; BSR set to: 0

;main.c: 1911: else
;main.c: 1912: if(M._pob_DzCW&&DtCW._su_DZ_CW&&DtCO._pz_CO)
	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfsc	status,2
	goto	u75961
	goto	u75960
u75961:
	goto	l1089
u75960:
	
l38706:; BSR set to: 0

	
	btfss	((_DtCW))&0ffh,5
	goto	u75971
	goto	u75970
u75971:
	goto	l1089
u75970:
	
l38708:; BSR set to: 0

	
	btfss	(0+(_DtCO+01h))&0ffh,1
	goto	u75981
	goto	u75980
u75981:
	goto	l1089
u75980:
	goto	l38570
	line	1921
;main.c: 1920: }
;main.c: 1921: default:
	
l1133:; BSR set to: 1

	line	1923
;main.c: 1922: {
;main.c: 1923: if(!M._ROZRUCH&&!PORTDbits.RD0)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u75991
	goto	u75990
u75991:
	goto	l1157
u75990:
	
l38714:; BSR set to: 0

	
	btfsc	((c:3971)),c,0	;volatile
	goto	u76001
	goto	u76000
u76001:
	goto	l1157
u76000:
	line	1924
	
l38716:; BSR set to: 0

;main.c: 1924: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M._RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u76011
	goto	u76010
u76011:
	goto	l1157
u76010:
	
l38718:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,5
	goto	u76021
	goto	u76020
u76021:
	goto	l1157
u76020:
	
l38720:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,0
	goto	u76031
	goto	u76030
u76031:
	goto	l1157
u76030:
	
l38722:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u76041
	goto	u76040
u76041:
	goto	l1157
u76040:
	
l38724:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,3
	goto	u76051
	goto	u76050
u76051:
	goto	l1157
u76050:
	
l38726:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,0
	goto	u76061
	goto	u76060
u76061:
	goto	l1157
u76060:
	
l38728:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,1
	goto	u76071
	goto	u76070
u76071:
	goto	l1157
u76070:
	line	1925
	
l38730:; BSR set to: 0

;main.c: 1925: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&&!M._RUSZ_NCISN)
	
	btfsc	(0+(_M+011h))&0ffh,2
	goto	u76081
	goto	u76080
u76081:
	goto	l1157
u76080:
	
l38732:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,5
	goto	u76091
	goto	u76090
u76091:
	goto	l1157
u76090:
	
l38734:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,6
	goto	u76101
	goto	u76100
u76101:
	goto	l1157
u76100:
	line	1927
	
l38736:; BSR set to: 0

;main.c: 1926: {
;main.c: 1927: if(M._pob_KCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfsc	status,2
	goto	u76111
	goto	u76110
u76111:
	goto	l38746
u76110:
	line	1929
	
l38738:; BSR set to: 0

;main.c: 1928: {
;main.c: 1929: if(DtCW._su_CW&&DtCO._pz_CO)
	
	btfss	((_DtCW))&0ffh,1
	goto	u76121
	goto	u76120
u76121:
	goto	l1157
u76120:
	
l38740:; BSR set to: 0

	
	btfss	(0+(_DtCO+01h))&0ffh,1
	goto	u76131
	goto	u76130
u76131:
	goto	l1157
u76130:
	goto	l38570
	line	1937
	
l38746:; BSR set to: 0

;main.c: 1936: else
;main.c: 1937: if(M._pob_KCO)
	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfsc	status,2
	goto	u76141
	goto	u76140
u76141:
	goto	l38752
u76140:
	line	1939
	
l38748:; BSR set to: 0

;main.c: 1938: {
;main.c: 1939: if(DtCO._su_CO) SetRozruch();
	
	btfss	((_DtCO))&0ffh,1
	goto	u76151
	goto	u76150
u76151:
	goto	l1157
u76150:
	goto	l38572
	line	1942
	
l38752:; BSR set to: 0

;main.c: 1941: else
;main.c: 1942: if(M._pob_SRW)
	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfsc	status,2
	goto	u76161
	goto	u76160
u76161:
	goto	l38758
u76160:
	line	1944
	
l38754:; BSR set to: 0

;main.c: 1943: {
;main.c: 1944: if(DtCO._su_SRW_CO) SetRozruch();
	
	btfss	((_DtCO))&0ffh,3
	goto	u76171
	goto	u76170
u76171:
	goto	l1157
u76170:
	goto	l38572
	line	1947
	
l38758:; BSR set to: 0

;main.c: 1946: else
;main.c: 1947: if(M._pob_AL)
	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfsc	status,2
	goto	u76181
	goto	u76180
u76181:
	goto	l38766
u76180:
	line	1949
	
l38760:; BSR set to: 0

;main.c: 1948: {
;main.c: 1949: if(DtCO._pz_CO)
	
	btfss	(0+(_DtCO+01h))&0ffh,1
	goto	u76191
	goto	u76190
u76191:
	goto	l1157
u76190:
	goto	l38570
	line	1957
	
l38766:; BSR set to: 0

;main.c: 1956: else
;main.c: 1957: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u76201
	goto	u76200
u76201:
	goto	l38776
u76200:
	line	1959
	
l38768:; BSR set to: 0

;main.c: 1958: {
;main.c: 1959: if(DtCW._su_CW&&DtCO._pz_CO)
	
	btfss	((_DtCW))&0ffh,1
	goto	u76211
	goto	u76210
u76211:
	goto	l1157
u76210:
	
l38770:; BSR set to: 0

	
	btfss	(0+(_DtCO+01h))&0ffh,1
	goto	u76221
	goto	u76220
u76221:
	goto	l1157
u76220:
	goto	l38570
	line	1967
	
l38776:; BSR set to: 0

;main.c: 1966: else
;main.c: 1967: if(M._pob_CO&&DtCO._su_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u76231
	goto	u76230
u76231:
	goto	l38786
u76230:
	
l38778:; BSR set to: 0

	
	btfss	((_DtCO))&0ffh,1
	goto	u76241
	goto	u76240
u76241:
	goto	l38786
u76240:
	
l38780:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u76251
	goto	u76250
u76251:
	goto	l38786
u76250:
	
l38782:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u76261
	goto	u76260
u76261:
	goto	l38786
u76260:
	goto	l38572
	line	1972
	
l38786:; BSR set to: 0

;main.c: 1971: else
;main.c: 1972: if(M._pob_DzCO&&DtCO._su_DZ_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfsc	status,2
	goto	u76271
	goto	u76270
u76271:
	goto	l38796
u76270:
	
l38788:; BSR set to: 0

	
	btfss	((_DtCO))&0ffh,6
	goto	u76281
	goto	u76280
u76281:
	goto	l38796
u76280:
	
l38790:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u76291
	goto	u76290
u76291:
	goto	l38796
u76290:
	
l38792:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u76301
	goto	u76300
u76301:
	goto	l38796
u76300:
	goto	l38572
	line	1977
	
l38796:; BSR set to: 0

;main.c: 1976: else
;main.c: 1977: if(M._pob_DzCW&&DtCW._su_DZ_CW&&DtCO._pz_CO)
	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfsc	status,2
	goto	u76311
	goto	u76310
u76311:
	goto	l1089
u76310:
	
l38798:; BSR set to: 0

	
	btfss	((_DtCW))&0ffh,5
	goto	u76321
	goto	u76320
u76321:
	goto	l1089
u76320:
	
l38800:; BSR set to: 0

	
	btfss	(0+(_DtCO+01h))&0ffh,1
	goto	u76331
	goto	u76330
u76331:
	goto	l1089
u76330:
	goto	l38570
	line	1797
	
l38808:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1109
	xorlw	1^0	; case 1
	skipnz
	goto	l1086
	xorlw	2^1	; case 2
	skipnz
	goto	l1086
	xorlw	3^2	; case 3
	skipnz
	goto	l1109
	goto	l1133

	line	1987
	
l1157:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_DecRozruch
	__end_of_DecRozruch:
	signat	_DecRozruch,88
	global	_DecWylacz

;; *************** function _DecWylacz *****************
;; Defined at:
;;		line 2015 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_SetWylacz
;;		_RdPrt
;;		_SetL3
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text27,class=CODE,space=0,reloc=2
global __ptext27
__ptext27:
psect	text27
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2015
	global	__size_of_DecWylacz
	__size_of_DecWylacz	equ	__end_of_DecWylacz-_DecWylacz
	
_DecWylacz:; BSR set to: 0

	opt	stack 24
	line	2016
	
l38810:; BSR set to: 0

;main.c: 2016: switch(DtKNF.tpkt)
	goto	l39142
	line	2019
	
l1165:; BSR set to: 1

	line	2021
;main.c: 2019: case 2:
;main.c: 2020: {
;main.c: 2021: if(!M._WYLACZ)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u76341
	goto	u76340
u76341:
	goto	l1171
u76340:
	line	2022
	
l38812:; BSR set to: 0

;main.c: 2022: if(M._ROZRUCH||PORTDbits.RD0)
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u76351
	goto	u76350
u76351:
	goto	l38816
u76350:
	
l38814:; BSR set to: 0

	
	btfss	((c:3971)),c,0	;volatile
	goto	u76361
	goto	u76360
u76361:
	goto	l1171
u76360:
	line	2024
	
l38816:; BSR set to: 0

;main.c: 2023: {
;main.c: 2024: if(!M._pob_KCW&&!M._pob_KCO&&!M._pob_SRW&&!M._pob_CW&&!M._pob_CO&&!M._pob_DzCO&&!M._pob_DzCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfss	status,2
	goto	u76371
	goto	u76370
u76371:
	goto	l1170
u76370:
	
l38818:; BSR set to: 0

	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfss	status,2
	goto	u76381
	goto	u76380
u76381:
	goto	l1170
u76380:
	
l38820:; BSR set to: 0

	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfss	status,2
	goto	u76391
	goto	u76390
u76391:
	goto	l1170
u76390:
	
l38822:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u76401
	goto	u76400
u76401:
	goto	l1170
u76400:
	
l38824:; BSR set to: 0

	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfss	status,2
	goto	u76411
	goto	u76410
u76411:
	goto	l1170
u76410:
	
l38826:; BSR set to: 0

	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfss	status,2
	goto	u76421
	goto	u76420
u76421:
	goto	l1170
u76420:
	
l38828:; BSR set to: 0

	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfss	status,2
	goto	u76431
	goto	u76430
u76431:
	goto	l1170
u76430:
	line	2026
	
l38830:
;main.c: 2025: {
;main.c: 2026: SetWylacz();
	call	_SetWylacz	;wreg free
	goto	l1171
	line	2027
	
l38832:; BSR set to: 0

;main.c: 2027: return;
	goto	l1171
	line	2028
	
l1170:; BSR set to: 0

	line	2029
;main.c: 2028: }
;main.c: 2029: if(M._RUSZ_PWR||M._RUSZ_PLOMIEN||M._RUSZ_CIAG||M._RUSZ_STB||M._RUSZ_NTC_CO||M._RUSZ_NTC_CW||M._RUSZ_POMPE||M._RUSZ_CISN||M._RUSZ_NCISN)
	
	btfsc	(0+(_M+010h))&0ffh,5
	goto	u76441
	goto	u76440
u76441:
	goto	l38830
u76440:
	
l38834:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,0
	goto	u76451
	goto	u76450
u76451:
	goto	l38830
u76450:
	
l38836:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u76461
	goto	u76460
u76461:
	goto	l38830
u76460:
	
l38838:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,3
	goto	u76471
	goto	u76470
u76471:
	goto	l38830
u76470:
	
l38840:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,0
	goto	u76481
	goto	u76480
u76481:
	goto	l38830
u76480:
	
l38842:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,1
	goto	u76491
	goto	u76490
u76491:
	goto	l38830
u76490:
	
l38844:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,2
	goto	u76501
	goto	u76500
u76501:
	goto	l38830
u76500:
	
l38846:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,5
	goto	u76511
	goto	u76510
u76511:
	goto	l38830
u76510:
	
l38848:; BSR set to: 0

	
	btfss	(0+(_M+01Ah))&0ffh,6
	goto	u76521
	goto	u76520
u76521:
	goto	l38852
u76520:
	goto	l38830
	line	2034
	
l38852:; BSR set to: 0

;main.c: 2033: else
;main.c: 2034: if(M._pob_KCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfsc	status,2
	goto	u76531
	goto	u76530
u76531:
	goto	l38858
u76530:
	line	2036
	
l38854:; BSR set to: 0

;main.c: 2035: {
;main.c: 2036: if(DtCW._ad_CW) SetWylacz();
	
	btfss	((_DtCW))&0ffh,2
	goto	u76541
	goto	u76540
u76541:
	goto	l1171
u76540:
	goto	l38830
	line	2039
	
l38858:; BSR set to: 0

;main.c: 2038: else
;main.c: 2039: if(M._pob_KCO)
	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfsc	status,2
	goto	u76551
	goto	u76550
u76551:
	goto	l38864
u76550:
	line	2041
	
l38860:; BSR set to: 0

;main.c: 2040: {
;main.c: 2041: if(RdPrt(19)) SetWylacz();
	movlw	(013h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u76561
	goto	u76560
u76561:
	goto	l1171
u76560:
	goto	l38830
	line	2044
	
l38864:; BSR set to: 0

;main.c: 2043: else
;main.c: 2044: if(M._pob_SRW)
	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfsc	status,2
	goto	u76571
	goto	u76570
u76571:
	goto	l38870
u76570:
	line	2046
	
l38866:; BSR set to: 0

;main.c: 2045: {
;main.c: 2046: if(DtCO._ad_SRW_CO) SetWylacz();
	
	btfss	((_DtCO))&0ffh,4
	goto	u76581
	goto	u76580
u76581:
	goto	l1171
u76580:
	goto	l38830
	line	2049
	
l38870:; BSR set to: 0

;main.c: 2048: else
;main.c: 2049: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u76591
	goto	u76590
u76591:
	goto	l38876
u76590:
	line	2051
	
l38872:; BSR set to: 0

;main.c: 2050: {
;main.c: 2051: if(DtCW._ad_CW) SetWylacz();
	
	btfss	((_DtCW))&0ffh,2
	goto	u76601
	goto	u76600
u76601:
	goto	l38832
u76600:
	goto	l38830
	line	2054
	
l38876:; BSR set to: 0

;main.c: 2053: else
;main.c: 2054: if(M._pob_CO&&(RdPrt(19)||M._BLOKUJ_3M||M._BLOKUJ_15S))
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u76611
	goto	u76610
u76611:
	goto	l38896
u76610:
	
l38878:; BSR set to: 0

	movlw	(013h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u76621
	goto	u76620
u76621:
	goto	l38884
u76620:
	
l38880:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u76631
	goto	u76630
u76631:
	goto	l38884
u76630:
	
l38882:; BSR set to: 0

	
	btfss	(0+(_M+011h))&0ffh,4
	goto	u76641
	goto	u76640
u76641:
	goto	l38896
u76640:
	line	2056
	
l38884:; BSR set to: 0

;main.c: 2055: {
;main.c: 2056: if(RdPrt(19)&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
	movlw	(013h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u76651
	goto	u76650
u76651:
	goto	l38830
u76650:
	
l38886:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u76661
	goto	u76660
u76661:
	goto	l38830
u76660:
	
l38888:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u76671
	goto	u76670
u76671:
	goto	l38830
u76670:
	line	2058
	
l38890:; BSR set to: 0

;main.c: 2057: {
;main.c: 2058: M._BLOKUJ_3M=1;
	bsf	(0+(_M+011h))&0ffh,3
	line	2059
;main.c: 2059: M.BL3=0;
	clrf	(0+(_M+026h))&0ffh
	line	2060
	
l38892:; BSR set to: 0

;main.c: 2060: SetL3();
	call	_SetL3	;wreg free
	goto	l38830
	line	2065
	
l38896:; BSR set to: 0

;main.c: 2064: else
;main.c: 2065: if(M._pob_DzCO&&(DtCO._ad_DZ_CO||M._BLOKUJ_3M||M._BLOKUJ_15S))
	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfsc	status,2
	goto	u76681
	goto	u76680
u76681:
	goto	l38906
u76680:
	
l38898:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,7
	goto	u76691
	goto	u76690
u76691:
	goto	l38830
u76690:
	
l38900:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u76701
	goto	u76700
u76701:
	goto	l38830
u76700:
	
l38902:; BSR set to: 0

	
	btfss	(0+(_M+011h))&0ffh,4
	goto	u76711
	goto	u76710
u76711:
	goto	l38906
u76710:
	goto	l38830
	line	2070
	
l38906:; BSR set to: 0

;main.c: 2069: else
;main.c: 2070: if(M._pob_DzCW&&DtCW._ad_DZ_CW)
	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfsc	status,2
	goto	u76721
	goto	u76720
u76721:
	goto	l38832
u76720:
	
l38908:; BSR set to: 0

	
	btfss	((_DtCW))&0ffh,6
	goto	u76731
	goto	u76730
u76731:
	goto	l38832
u76730:
	goto	l38830
	line	2078
	
l1200:; BSR set to: 1

	line	2080
;main.c: 2078: case 3:
;main.c: 2079: {
;main.c: 2080: if(!M._WYLACZ)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u76741
	goto	u76740
u76741:
	goto	l1171
u76740:
	line	2081
	
l38912:; BSR set to: 0

;main.c: 2081: if(M._ROZRUCH||PORTDbits.RD0)
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u76751
	goto	u76750
u76751:
	goto	l38916
u76750:
	
l38914:; BSR set to: 0

	
	btfss	((c:3971)),c,0	;volatile
	goto	u76761
	goto	u76760
u76761:
	goto	l1171
u76760:
	line	2083
	
l38916:; BSR set to: 0

;main.c: 2082: {
;main.c: 2083: if(!M._pob_KCW&&!M._pob_AL&&!M._pob_KCO&&!M._pob_SRW&&!M._pob_CW&&!M._pob_CO&&!M._pob_DzCO&&!M._pob_DzCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfss	status,2
	goto	u76771
	goto	u76770
u76771:
	goto	l1205
u76770:
	
l38918:; BSR set to: 0

	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfss	status,2
	goto	u76781
	goto	u76780
u76781:
	goto	l1205
u76780:
	
l38920:; BSR set to: 0

	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfss	status,2
	goto	u76791
	goto	u76790
u76791:
	goto	l1205
u76790:
	
l38922:; BSR set to: 0

	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfss	status,2
	goto	u76801
	goto	u76800
u76801:
	goto	l1205
u76800:
	
l38924:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u76811
	goto	u76810
u76811:
	goto	l1205
u76810:
	
l38926:; BSR set to: 0

	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfss	status,2
	goto	u76821
	goto	u76820
u76821:
	goto	l1205
u76820:
	
l38928:; BSR set to: 0

	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfss	status,2
	goto	u76831
	goto	u76830
u76831:
	goto	l1205
u76830:
	
l38930:; BSR set to: 0

	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfss	status,2
	goto	u76841
	goto	u76840
u76841:
	goto	l1205
u76840:
	goto	l38830
	line	2087
	
l1205:; BSR set to: 0

	line	2088
;main.c: 2087: }
;main.c: 2088: if(M._RUSZ_PWR||M._RUSZ_PLOMIEN||M._RUSZ_CIAG||M._RUSZ_STB||M._RUSZ_NTC_CO||M._RUSZ_NTC_CW||M._RUSZ_POMPE||M._RUSZ_CISN||M._RUSZ_NCISN)
	
	btfsc	(0+(_M+010h))&0ffh,5
	goto	u76851
	goto	u76850
u76851:
	goto	l38830
u76850:
	
l38936:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,0
	goto	u76861
	goto	u76860
u76861:
	goto	l38830
u76860:
	
l38938:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u76871
	goto	u76870
u76871:
	goto	l38830
u76870:
	
l38940:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,3
	goto	u76881
	goto	u76880
u76881:
	goto	l38830
u76880:
	
l38942:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,0
	goto	u76891
	goto	u76890
u76891:
	goto	l38830
u76890:
	
l38944:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,1
	goto	u76901
	goto	u76900
u76901:
	goto	l38830
u76900:
	
l38946:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,2
	goto	u76911
	goto	u76910
u76911:
	goto	l38830
u76910:
	
l38948:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,5
	goto	u76921
	goto	u76920
u76921:
	goto	l38830
u76920:
	
l38950:; BSR set to: 0

	
	btfss	(0+(_M+01Ah))&0ffh,6
	goto	u76931
	goto	u76930
u76931:
	goto	l38954
u76930:
	goto	l38830
	line	2093
	
l38954:; BSR set to: 0

;main.c: 2092: else
;main.c: 2093: if(M._pob_KCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfsc	status,2
	goto	u76941
	goto	u76940
u76941:
	goto	l38962
u76940:
	line	2095
	
l38956:; BSR set to: 0

;main.c: 2094: {
;main.c: 2095: if(DtCW._ad_CW||!DtCO._pz_CO) SetWylacz();
	
	btfsc	((_DtCW))&0ffh,2
	goto	u76951
	goto	u76950
u76951:
	goto	l38830
u76950:
	
l38958:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,1
	goto	u76961
	goto	u76960
u76961:
	goto	l1171
u76960:
	goto	l38830
	line	2098
	
l38962:; BSR set to: 0

;main.c: 2097: else
;main.c: 2098: if(M._pob_AL)
	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfsc	status,2
	goto	u76971
	goto	u76970
u76971:
	goto	l38968
u76970:
	line	2100
	
l38964:; BSR set to: 0

;main.c: 2099: {
;main.c: 2100: if(!DtCO._pz_CO) SetWylacz();
	
	btfsc	(0+(_DtCO+01h))&0ffh,1
	goto	u76981
	goto	u76980
u76981:
	goto	l1171
u76980:
	goto	l38830
	line	2103
	
l38968:; BSR set to: 0

;main.c: 2102: else
;main.c: 2103: if(M._pob_KCO)
	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfsc	status,2
	goto	u76991
	goto	u76990
u76991:
	goto	l38974
u76990:
	line	2105
	
l38970:; BSR set to: 0

;main.c: 2104: {
;main.c: 2105: if(RdPrt(19)) SetWylacz();
	movlw	(013h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u77001
	goto	u77000
u77001:
	goto	l1171
u77000:
	goto	l38830
	line	2108
	
l38974:; BSR set to: 0

;main.c: 2107: else
;main.c: 2108: if(M._pob_SRW)
	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfsc	status,2
	goto	u77011
	goto	u77010
u77011:
	goto	l38980
u77010:
	line	2110
	
l38976:; BSR set to: 0

;main.c: 2109: {
;main.c: 2110: if(DtCO._ad_SRW_CO) SetWylacz();
	
	btfss	((_DtCO))&0ffh,4
	goto	u77021
	goto	u77020
u77021:
	goto	l1171
u77020:
	goto	l38830
	line	2113
	
l38980:; BSR set to: 0

;main.c: 2112: else
;main.c: 2113: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u77031
	goto	u77030
u77031:
	goto	l38988
u77030:
	line	2115
	
l38982:; BSR set to: 0

;main.c: 2114: {
;main.c: 2115: if(DtCW._ad_CW||!DtCO._pz_CO) SetWylacz();
	
	btfsc	((_DtCW))&0ffh,2
	goto	u77041
	goto	u77040
u77041:
	goto	l38830
u77040:
	
l38984:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,1
	goto	u77051
	goto	u77050
u77051:
	goto	l1171
u77050:
	goto	l38830
	line	2118
	
l38988:; BSR set to: 0

;main.c: 2117: else
;main.c: 2118: if(M._pob_CO&&(RdPrt(19)||M._BLOKUJ_3M||M._BLOKUJ_15S))
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u77061
	goto	u77060
u77061:
	goto	l39008
u77060:
	
l38990:; BSR set to: 0

	movlw	(013h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u77071
	goto	u77070
u77071:
	goto	l38996
u77070:
	
l38992:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u77081
	goto	u77080
u77081:
	goto	l38996
u77080:
	
l38994:; BSR set to: 0

	
	btfss	(0+(_M+011h))&0ffh,4
	goto	u77091
	goto	u77090
u77091:
	goto	l39008
u77090:
	line	2120
	
l38996:; BSR set to: 0

;main.c: 2119: {
;main.c: 2120: if(RdPrt(19)&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
	movlw	(013h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u77101
	goto	u77100
u77101:
	goto	l38830
u77100:
	
l38998:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u77111
	goto	u77110
u77111:
	goto	l38830
u77110:
	
l39000:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u77121
	goto	u77120
u77121:
	goto	l38830
u77120:
	goto	l38890
	line	2129
	
l39008:; BSR set to: 0

;main.c: 2128: else
;main.c: 2129: if(M._pob_DzCO&&(DtCO._ad_DZ_CO||M._BLOKUJ_3M||M._BLOKUJ_15S))
	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfsc	status,2
	goto	u77131
	goto	u77130
u77131:
	goto	l39018
u77130:
	
l39010:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,7
	goto	u77141
	goto	u77140
u77141:
	goto	l38830
u77140:
	
l39012:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u77151
	goto	u77150
u77151:
	goto	l38830
u77150:
	
l39014:; BSR set to: 0

	
	btfss	(0+(_M+011h))&0ffh,4
	goto	u77161
	goto	u77160
u77161:
	goto	l39018
u77160:
	goto	l38830
	line	2134
	
l39018:; BSR set to: 0

;main.c: 2133: else
;main.c: 2134: if(M._pob_DzCW&&(DtCW._ad_DZ_CW||!DtCO._pz_CO))
	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfsc	status,2
	goto	u77171
	goto	u77170
u77171:
	goto	l38832
u77170:
	
l39020:; BSR set to: 0

	
	btfsc	((_DtCW))&0ffh,6
	goto	u77181
	goto	u77180
u77181:
	goto	l38830
u77180:
	
l39022:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,1
	goto	u77191
	goto	u77190
u77191:
	goto	l38832
u77190:
	goto	l38830
	line	2141
;main.c: 2140: }
;main.c: 2141: default:
	
l1241:; BSR set to: 1

	line	2143
;main.c: 2142: {
;main.c: 2143: if(!M._WYLACZ)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u77201
	goto	u77200
u77201:
	goto	l1171
u77200:
	line	2144
	
l39026:; BSR set to: 0

;main.c: 2144: if(M._ROZRUCH||PORTDbits.RD0)
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u77211
	goto	u77210
u77211:
	goto	l39030
u77210:
	
l39028:; BSR set to: 0

	
	btfss	((c:3971)),c,0	;volatile
	goto	u77221
	goto	u77220
u77221:
	goto	l1171
u77220:
	line	2146
	
l39030:; BSR set to: 0

;main.c: 2145: {
;main.c: 2146: if(!M._pob_KCW&&!M._pob_AL&&!M._pob_KCO&&!M._pob_SRW&&!M._pob_CW&&!M._pob_CO&&!M._pob_DzCO&&!M._pob_DzCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfss	status,2
	goto	u77231
	goto	u77230
u77231:
	goto	l1246
u77230:
	
l39032:; BSR set to: 0

	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfss	status,2
	goto	u77241
	goto	u77240
u77241:
	goto	l1246
u77240:
	
l39034:; BSR set to: 0

	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfss	status,2
	goto	u77251
	goto	u77250
u77251:
	goto	l1246
u77250:
	
l39036:; BSR set to: 0

	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfss	status,2
	goto	u77261
	goto	u77260
u77261:
	goto	l1246
u77260:
	
l39038:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u77271
	goto	u77270
u77271:
	goto	l1246
u77270:
	
l39040:; BSR set to: 0

	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfss	status,2
	goto	u77281
	goto	u77280
u77281:
	goto	l1246
u77280:
	
l39042:; BSR set to: 0

	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfss	status,2
	goto	u77291
	goto	u77290
u77291:
	goto	l1246
u77290:
	
l39044:; BSR set to: 0

	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfss	status,2
	goto	u77301
	goto	u77300
u77301:
	goto	l1246
u77300:
	goto	l38830
	line	2150
	
l1246:; BSR set to: 0

	line	2151
;main.c: 2150: }
;main.c: 2151: if(M._RUSZ_PWR||M._RUSZ_PLOMIEN||M._RUSZ_CIAG||M._RUSZ_STB||M._RUSZ_NTC_CO||M._RUSZ_NTC_CW||M._RUSZ_POMPE||M._RUSZ_CISN||M._RUSZ_NCISN)
	
	btfsc	(0+(_M+010h))&0ffh,5
	goto	u77311
	goto	u77310
u77311:
	goto	l38830
u77310:
	
l39050:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,0
	goto	u77321
	goto	u77320
u77321:
	goto	l38830
u77320:
	
l39052:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u77331
	goto	u77330
u77331:
	goto	l38830
u77330:
	
l39054:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,3
	goto	u77341
	goto	u77340
u77341:
	goto	l38830
u77340:
	
l39056:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,0
	goto	u77351
	goto	u77350
u77351:
	goto	l38830
u77350:
	
l39058:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,1
	goto	u77361
	goto	u77360
u77361:
	goto	l38830
u77360:
	
l39060:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,2
	goto	u77371
	goto	u77370
u77371:
	goto	l38830
u77370:
	
l39062:; BSR set to: 0

	
	btfsc	(0+(_M+01Ah))&0ffh,5
	goto	u77381
	goto	u77380
u77381:
	goto	l38830
u77380:
	
l39064:; BSR set to: 0

	
	btfss	(0+(_M+01Ah))&0ffh,6
	goto	u77391
	goto	u77390
u77391:
	goto	l39068
u77390:
	goto	l38830
	line	2156
	
l39068:; BSR set to: 0

;main.c: 2155: else
;main.c: 2156: if(M._pob_KCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfsc	status,2
	goto	u77401
	goto	u77400
u77401:
	goto	l39076
u77400:
	line	2158
	
l39070:; BSR set to: 0

;main.c: 2157: {
;main.c: 2158: if(DtCW._ad_CW||!DtCO._pz_CO) SetWylacz();
	
	btfsc	((_DtCW))&0ffh,2
	goto	u77411
	goto	u77410
u77411:
	goto	l38830
u77410:
	
l39072:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,1
	goto	u77421
	goto	u77420
u77421:
	goto	l1171
u77420:
	goto	l38830
	line	2161
	
l39076:; BSR set to: 0

;main.c: 2160: else
;main.c: 2161: if(M._pob_AL)
	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfsc	status,2
	goto	u77431
	goto	u77430
u77431:
	goto	l39082
u77430:
	line	2163
	
l39078:; BSR set to: 0

;main.c: 2162: {
;main.c: 2163: if(!DtCO._pz_CO) SetWylacz();
	
	btfsc	(0+(_DtCO+01h))&0ffh,1
	goto	u77441
	goto	u77440
u77441:
	goto	l1171
u77440:
	goto	l38830
	line	2166
	
l39082:; BSR set to: 0

;main.c: 2165: else
;main.c: 2166: if(M._pob_KCO)
	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfsc	status,2
	goto	u77451
	goto	u77450
u77451:
	goto	l39088
u77450:
	line	2168
	
l39084:; BSR set to: 0

;main.c: 2167: {
;main.c: 2168: if(RdPrt(19)) SetWylacz();
	movlw	(013h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u77461
	goto	u77460
u77461:
	goto	l1171
u77460:
	goto	l38830
	line	2171
	
l39088:; BSR set to: 0

;main.c: 2170: else
;main.c: 2171: if(M._pob_SRW)
	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfsc	status,2
	goto	u77471
	goto	u77470
u77471:
	goto	l39094
u77470:
	line	2173
	
l39090:; BSR set to: 0

;main.c: 2172: {
;main.c: 2173: if(DtCO._ad_SRW_CO) SetWylacz();
	
	btfss	((_DtCO))&0ffh,4
	goto	u77481
	goto	u77480
u77481:
	goto	l1171
u77480:
	goto	l38830
	line	2176
	
l39094:; BSR set to: 0

;main.c: 2175: else
;main.c: 2176: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u77491
	goto	u77490
u77491:
	goto	l39102
u77490:
	line	2178
	
l39096:; BSR set to: 0

;main.c: 2177: {
;main.c: 2178: if(DtCW._ad_CW||!DtCO._pz_CO) SetWylacz();
	
	btfsc	((_DtCW))&0ffh,2
	goto	u77501
	goto	u77500
u77501:
	goto	l38830
u77500:
	
l39098:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,1
	goto	u77511
	goto	u77510
u77511:
	goto	l1171
u77510:
	goto	l38830
	line	2181
	
l39102:; BSR set to: 0

;main.c: 2180: else
;main.c: 2181: if(M._pob_CO&&(RdPrt(19)||M._BLOKUJ_3M||M._BLOKUJ_15S))
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u77521
	goto	u77520
u77521:
	goto	l39122
u77520:
	
l39104:; BSR set to: 0

	movlw	(013h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u77531
	goto	u77530
u77531:
	goto	l39110
u77530:
	
l39106:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u77541
	goto	u77540
u77541:
	goto	l39110
u77540:
	
l39108:; BSR set to: 0

	
	btfss	(0+(_M+011h))&0ffh,4
	goto	u77551
	goto	u77550
u77551:
	goto	l39122
u77550:
	line	2183
	
l39110:; BSR set to: 0

;main.c: 2182: {
;main.c: 2183: if(RdPrt(19)&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
	movlw	(013h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u77561
	goto	u77560
u77561:
	goto	l38830
u77560:
	
l39112:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u77571
	goto	u77570
u77571:
	goto	l38830
u77570:
	
l39114:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,4
	goto	u77581
	goto	u77580
u77581:
	goto	l38830
u77580:
	goto	l38890
	line	2192
	
l39122:; BSR set to: 0

;main.c: 2191: else
;main.c: 2192: if(M._pob_DzCO&&(DtCO._ad_DZ_CO||M._BLOKUJ_3M||M._BLOKUJ_15S))
	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfsc	status,2
	goto	u77591
	goto	u77590
u77591:
	goto	l39132
u77590:
	
l39124:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,7
	goto	u77601
	goto	u77600
u77601:
	goto	l38830
u77600:
	
l39126:; BSR set to: 0

	
	btfsc	(0+(_M+011h))&0ffh,3
	goto	u77611
	goto	u77610
u77611:
	goto	l38830
u77610:
	
l39128:; BSR set to: 0

	
	btfss	(0+(_M+011h))&0ffh,4
	goto	u77621
	goto	u77620
u77621:
	goto	l39132
u77620:
	goto	l38830
	line	2197
	
l39132:; BSR set to: 0

;main.c: 2196: else
;main.c: 2197: if(M._pob_DzCW&&(DtCW._ad_DZ_CW||!DtCO._pz_CO))
	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfsc	status,2
	goto	u77631
	goto	u77630
u77631:
	goto	l38832
u77630:
	
l39134:; BSR set to: 0

	
	btfsc	((_DtCW))&0ffh,6
	goto	u77641
	goto	u77640
u77641:
	goto	l38830
u77640:
	
l39136:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,1
	goto	u77651
	goto	u77650
u77651:
	goto	l38832
u77650:
	goto	l38830
	line	2016
	
l39142:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1200
	xorlw	1^0	; case 1
	skipnz
	goto	l1165
	xorlw	2^1	; case 2
	skipnz
	goto	l1165
	xorlw	3^2	; case 3
	skipnz
	goto	l1200
	goto	l1241

	line	2205
	
l1171:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_DecWylacz
	__end_of_DecWylacz:
	signat	_DecWylacz,88
	global	_FunkcjaSerwisowa

;; *************** function _FunkcjaSerwisowa *****************
;; Defined at:
;;		line 2264 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTM
;;		_RTM
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text28,class=CODE,space=0,reloc=2
global __ptext28
__ptext28:
psect	text28
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2264
	global	__size_of_FunkcjaSerwisowa
	__size_of_FunkcjaSerwisowa	equ	__end_of_FunkcjaSerwisowa-_FunkcjaSerwisowa
	
_FunkcjaSerwisowa:; BSR set to: 0

	opt	stack 25
	line	2265
	
l31008:; BSR set to: 0

;main.c: 2265: if(M._AKTYWNE_KNF)
	movf	(1+(_M+018h))&0ffh,w
	iorwf (0+(_M+018h))&0ffh,w

	btfsc	status,2
	goto	u57251
	goto	u57250
u57251:
	goto	l31034
u57250:
	line	2267
	
l31010:
;main.c: 2266: {
;main.c: 2267: M.SRV=0;
	movlb	0	; () banked
	clrf	(0+(_M+02Fh))&0ffh
	line	2268
;main.c: 2268: M._AKTYWNE_SRW=0;
	clrf	(0+(_M+012h))&0ffh
	clrf	(1+(_M+012h))&0ffh
	line	2269
;main.c: 2269: }
	goto	l1307
	line	2275
	
l31012:; BSR set to: 0

;main.c: 2274: {
;main.c: 2275: if((PFN.poz==3)&&(PFN._fnserw&&!PFN._ofnserw))
	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u57261
	goto	u57260
u57261:
	goto	l1307
u57260:
	
l31014:; BSR set to: 1

	
	btfss	(0+(_PFN+01h))&0ffh,6
	goto	u57271
	goto	u57270
u57271:
	goto	l1307
u57270:
	
l31016:; BSR set to: 1

	
	btfsc	(0+(_PFN+03h))&0ffh,7
	goto	u57281
	goto	u57280
u57281:
	goto	l1307
u57280:
	line	2277
	
l31018:; BSR set to: 1

;main.c: 2276: {
;main.c: 2277: M.SRV=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	(0+(_M+02Fh))&0ffh
	line	2278
;main.c: 2278: M._AKTYWNE_SRW=1;
	movlw	high(01h)
	movwf	(1+(_M+012h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+012h))&0ffh
	line	2279
	
l31020:; BSR set to: 0

;main.c: 2279: StartRTM(1);
	movlw	(01h)&0ffh
	
	call	_StartRTM
	goto	l1307
	line	2286
	
l31022:; BSR set to: 0

;main.c: 2284: {
;main.c: 2286: if((PFN.poz==3)&&!PFN._res&&(RTM(1)<15)) return;
	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u57291
	goto	u57290
u57291:
	goto	l31010
u57290:
	
l31024:; BSR set to: 1

	
	btfsc	(0+(_PFN+02h))&0ffh,3
	goto	u57301
	goto	u57300
u57301:
	goto	l31010
u57300:
	
l31026:; BSR set to: 1

	movlw	(01h)&0ffh
	
	call	_RTM
	movwf	(??_FunkcjaSerwisowa+0+0)&0ffh,c
	movlw	(0Fh)&0ffh
	subwf	((??_FunkcjaSerwisowa+0+0)),c,w
	btfsc	status,0
	goto	u57311
	goto	u57310
u57311:
	goto	l31010
u57310:
	goto	l1307
	line	2271
	
l31034:; BSR set to: 0

	movf	(0+(_M+02Fh))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l31012
	xorlw	1^0	; case 1
	skipnz
	goto	l31022
	goto	l1307

	line	2295
	
l1307:
	return
	opt stack 0
GLOBAL	__end_of_FunkcjaSerwisowa
	__end_of_FunkcjaSerwisowa:
	signat	_FunkcjaSerwisowa,88
	global	_DecyzjaAntyLeg

;; *************** function _DecyzjaAntyLeg *****************
;; Defined at:
;;		line 542 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTG
;;		_RTM
;;		_RTG
;;		_StartRTM
;;		_Busy_eep
;;		_Write_b_eep
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text29,class=CODE,space=0,reloc=2
global __ptext29
__ptext29:
psect	text29
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	542
	global	__size_of_DecyzjaAntyLeg
	__size_of_DecyzjaAntyLeg	equ	__end_of_DecyzjaAntyLeg-_DecyzjaAntyLeg
	
_DecyzjaAntyLeg:
	opt	stack 25
	line	638
	
l31036:
;main.c: 638: if(DtKNF.tpkt==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+07h))&0ffh
	goto	u57321
	goto	u57320
u57321:
	goto	l714
u57320:
	line	642
	
l31038:; BSR set to: 1

;main.c: 639: {
;main.c: 642: if(M._AKTYWNE_AL)
	movlb	0	; () banked
	movf	(1+(_M+014h))&0ffh,w
	iorwf (0+(_M+014h))&0ffh,w

	btfsc	status,2
	goto	u57331
	goto	u57330
u57331:
	goto	l31062
u57330:
	line	644
	
l31040:; BSR set to: 0

;main.c: 643: {
;main.c: 644: if(DtKNF.aleg)
	movlb	1	; () banked
	movf	(0+(_DtKNF+011h))&0ffh,w
	btfsc	status,2
	goto	u57341
	goto	u57340
u57341:
	goto	l31046
u57340:
	line	646
	
l31042:; BSR set to: 1

;main.c: 645: {
;main.c: 646: StartRTG(1);
	movlw	(01h)&0ffh
	
	call	_StartRTG
	line	647
	
l31044:; BSR set to: 1

;main.c: 647: M.LICZNIK_ANL=0;
	movlb	0	; () banked
	clrf	(0+(_M+021h))&0ffh
	line	649
	
l31046:
;main.c: 648: }
;main.c: 649: if(M._AKTYWNE_KNF||M._AKTYWNE_SRW)
	movlb	0	; () banked
	movf	(1+(_M+018h))&0ffh,w
	iorwf (0+(_M+018h))&0ffh,w

	btfss	status,2
	goto	u57351
	goto	u57350
u57351:
	goto	l714
u57350:
	
l31048:; BSR set to: 0

	movf	(1+(_M+012h))&0ffh,w
	iorwf (0+(_M+012h))&0ffh,w

	btfsc	status,2
	goto	u57361
	goto	u57360
u57361:
	goto	l31050
u57360:
	
l714:
	line	651
;main.c: 650: {
;main.c: 651: M._AKTYWNE_AL=0;
	movlb	0	; () banked
	clrf	(0+(_M+014h))&0ffh
	clrf	(1+(_M+014h))&0ffh
	line	652
;main.c: 652: return;
	goto	l715
	line	655
	
l31050:; BSR set to: 0

;main.c: 653: }
;main.c: 655: if(!((PFN.poz==2)||(PFN.poz==3)))
	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	2
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u57371
	goto	u57370
u57371:
	goto	l31056
u57370:
	
l31052:; BSR set to: 1

	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u57381
	goto	u57380
u57381:
	goto	l31056
u57380:
	goto	l714
	line	661
	
l31056:; BSR set to: 1

;main.c: 659: }
;main.c: 661: if(RTM(4)>=60)
	movlw	(04h)&0ffh
	
	call	_RTM
	movwf	(??_DecyzjaAntyLeg+0+0)&0ffh,c
	movlw	(03Ch)&0ffh
	subwf	((??_DecyzjaAntyLeg+0+0)),c,w
	btfss	status,0
	goto	u57391
	goto	u57390
u57391:
	goto	l717
u57390:
	goto	l714
	line	665
	
l717:; BSR set to: 1

	line	668
;main.c: 665: }
;main.c: 668: if(PFN._res)
	
	btfss	(0+(_PFN+02h))&0ffh,3
	goto	u57401
	goto	u57400
u57401:
	goto	l31062
u57400:
	goto	l714
	line	676
	
l31062:
;main.c: 672: }
;main.c: 673: }
;main.c: 676: if(!M._AKTYWNE_AL)
	movlb	0	; () banked
	movf	(1+(_M+014h))&0ffh,w
	iorwf (0+(_M+014h))&0ffh,w

	btfss	status,2
	goto	u57411
	goto	u57410
u57411:
	goto	l31116
u57410:
	line	678
	
l31064:; BSR set to: 0

;main.c: 677: {
;main.c: 678: if(M._AKTYWNE_KNF||M._AKTYWNE_SRW)
	movf	(1+(_M+018h))&0ffh,w
	iorwf (0+(_M+018h))&0ffh,w

	btfss	status,2
	goto	u57421
	goto	u57420
u57421:
	goto	l715
u57420:
	
l31066:; BSR set to: 0

	movf	(1+(_M+012h))&0ffh,w
	iorwf (0+(_M+012h))&0ffh,w

	btfsc	status,2
	goto	u57431
	goto	u57430
u57431:
	goto	l31068
u57430:
	goto	l715
	line	684
	
l31068:; BSR set to: 0

;main.c: 681: }
;main.c: 684: if(DtKNF.aleg)
	movlb	1	; () banked
	movf	(0+(_DtKNF+011h))&0ffh,w
	btfsc	status,2
	goto	u57441
	goto	u57440
u57441:
	goto	l723
u57440:
	line	686
	
l31070:; BSR set to: 1

;main.c: 685: {
;main.c: 686: if(RTG(1)>=1)
	movlw	(01h)&0ffh
	
	call	_RTG
	iorlw	0
	btfsc	status,2
	goto	u57451
	goto	u57450
u57451:
	goto	l723
u57450:
	line	688
	
l31072:; BSR set to: 1

;main.c: 687: {
;main.c: 688: StartRTG(1);
	movlw	(01h)&0ffh
	
	call	_StartRTG
	line	689
	
l31074:; BSR set to: 1

;main.c: 689: M.LICZNIK_ANL++;
	movlb	0	; () banked
	incf	(0+(_M+021h))&0ffh
	line	690
	
l31076:; BSR set to: 0

;main.c: 690: if(M.LICZNIK_ANL>=168)
	lfsr	2,_M+021h
	movlw	(0A8h-1)
	cpfsgt	indf2
	goto	u57461
	goto	u57460
u57461:
	goto	l31096
u57460:
	line	692
	
l31078:; BSR set to: 0

;main.c: 691: {
;main.c: 692: M.LICZNIK_ANL=0;
	clrf	(0+(_M+021h))&0ffh
	line	693
	
l31080:; BSR set to: 0

;main.c: 693: if((PFN.poz==2)||(PFN.poz==3)) M._AKTYWNE_AL=1;
	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	2
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u57471
	goto	u57470
u57471:
	goto	l31084
u57470:
	
l31082:; BSR set to: 1

	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u57481
	goto	u57480
u57481:
	goto	l31086
u57480:
	
l31084:; BSR set to: 1

	movlw	high(01h)
	movlb	0	; () banked
	movwf	(1+(_M+014h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+014h))&0ffh
	line	694
	
l31086:
;main.c: 694: StartRTM(4);
	movlw	(04h)&0ffh
	
	call	_StartRTM
	line	695
	
l31088:; BSR set to: 1

;main.c: 695: (Busy_eep(), Write_b_eep(0x00C7,0));
	call	_Busy_eep	;wreg free
	
l31090:; BSR set to: 1

	movlw	high(0C7h)
	movwf	((c:?_Write_b_eep+1)),c
	movlw	low(0C7h)
	movwf	((c:?_Write_b_eep)),c
	movlw	low(0)
	movwf	(0+((c:?_Write_b_eep)+02h)),c
	call	_Write_b_eep	;wreg free
	goto	l715
	line	700
	
l31096:; BSR set to: 0

;main.c: 698: else
;main.c: 699: {
;main.c: 700: (Busy_eep(), Write_b_eep(0x00C7,M.LICZNIK_ANL));
	call	_Busy_eep	;wreg free
	
l31098:; BSR set to: 0

	movlw	high(0C7h)
	movwf	((c:?_Write_b_eep+1)),c
	movlw	low(0C7h)
	movwf	((c:?_Write_b_eep)),c
	movff	0+(_M+021h),0+((c:?_Write_b_eep)+02h)
	call	_Write_b_eep	;wreg free
	line	703
	
l723:
	line	705
;main.c: 701: }
;main.c: 702: }
;main.c: 703: }
;main.c: 705: if(!((PFN.poz==2)||(PFN.poz==3)))
	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	2
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u57491
	goto	u57490
u57491:
	goto	l730
u57490:
	
l31100:; BSR set to: 1

	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u57501
	goto	u57500
u57501:
	goto	l730
u57500:
	goto	l715
	line	708
	
l730:; BSR set to: 1

	line	711
;main.c: 708: }
;main.c: 711: if(PFN._aleg&&!PFN._oaleg)
	
	btfss	(0+(_PFN+02h))&0ffh,0
	goto	u57511
	goto	u57510
u57511:
	goto	l715
u57510:
	
l31104:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,0
	goto	u57521
	goto	u57520
u57521:
	goto	l715
u57520:
	line	713
	
l31106:; BSR set to: 1

;main.c: 712: {
;main.c: 713: M.LICZNIK_ANL=0;
	movlb	0	; () banked
	clrf	(0+(_M+021h))&0ffh
	line	714
	
l31108:; BSR set to: 0

;main.c: 714: M._AKTYWNE_AL=1;
	movlw	high(01h)
	movwf	(1+(_M+014h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+014h))&0ffh
	line	715
	
l31110:; BSR set to: 0

;main.c: 715: StartRTM(4);
	movlw	(04h)&0ffh
	
	call	_StartRTM
	goto	l31088
	line	721
	
l31116:; BSR set to: 0

;main.c: 719: else
;main.c: 720: {
;main.c: 721: StartRTG(1);
	movlw	(01h)&0ffh
	
	call	_StartRTG
	line	722
	
l31118:; BSR set to: 1

;main.c: 722: M.LICZNIK_ANL=0;
	movlb	0	; () banked
	clrf	(0+(_M+021h))&0ffh
	line	727
	
l715:
	return
	opt stack 0
GLOBAL	__end_of_DecyzjaAntyLeg
	__end_of_DecyzjaAntyLeg:
	signat	_DecyzjaAntyLeg,88
	global	_KolejkaPobudzen

;; *************** function _KolejkaPobudzen *****************
;; Defined at:
;;		line 433 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  wr              1   33[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RdPrt
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text30,class=CODE,space=0,reloc=2
global __ptext30
__ptext30:
psect	text30
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	433
	global	__size_of_KolejkaPobudzen
	__size_of_KolejkaPobudzen	equ	__end_of_KolejkaPobudzen-_KolejkaPobudzen
	
_KolejkaPobudzen:
	opt	stack 25
	line	434
	
l39144:
	line	437
	
l39146:
;main.c: 437: if(M._AKTYWNE_KNF)
	movlb	0	; () banked
	movf	(1+(_M+018h))&0ffh,w
	iorwf (0+(_M+018h))&0ffh,w

	btfsc	status,2
	goto	u77661
	goto	u77660
u77661:
	goto	l674
u77660:
	line	439
	
l39148:; BSR set to: 0

;main.c: 438: {
;main.c: 439: M._pob_SRW=0;
	clrf	(0+(_M+04h))&0ffh
	clrf	(1+(_M+04h))&0ffh
	line	440
;main.c: 440: M._pob_AL=0;
	clrf	(0+(_M+06h))&0ffh
	clrf	(1+(_M+06h))&0ffh
	line	441
;main.c: 441: M._pob_CO=0;
	clrf	(0+(_M+0Ah))&0ffh
	clrf	(1+(_M+0Ah))&0ffh
	line	442
;main.c: 442: M._pob_CW=0;
	clrf	(0+(_M+08h))&0ffh
	clrf	(1+(_M+08h))&0ffh
	line	443
;main.c: 443: M._pob_DzCO=0;
	clrf	(0+(_M+0Ch))&0ffh
	clrf	(1+(_M+0Ch))&0ffh
	line	444
;main.c: 444: M._pob_DzCW=0;
	clrf	(0+(_M+0Eh))&0ffh
	clrf	(1+(_M+0Eh))&0ffh
	line	445
	
l39150:; BSR set to: 0

;main.c: 445: if((PFN.poz==2)||(PFN.poz==3))
	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	2
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u77671
	goto	u77670
u77671:
	goto	l677
u77670:
	
l39152:; BSR set to: 1

	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u77681
	goto	u77680
u77681:
	goto	l675
u77680:
	
l677:; BSR set to: 1

	line	447
;main.c: 446: {
;main.c: 447: if(DtKNF.wymCW) M._pob_KCW=1;
	
	btfss	((_DtKNF))&0ffh,2
	goto	u77691
	goto	u77690
u77691:
	goto	l678
u77690:
	
l39154:; BSR set to: 1

	movlw	high(01h)
	movlb	0	; () banked
	movwf	(1+(_M+02h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+02h))&0ffh
	goto	l679
	line	448
	
l678:; BSR set to: 1

;main.c: 448: else M._pob_KCW=0;
	movlb	0	; () banked
	clrf	(0+(_M+02h))&0ffh
	clrf	(1+(_M+02h))&0ffh
	
l679:; BSR set to: 0

	line	449
;main.c: 449: if(DtKNF.wymCO) M._pob_KCO=1;
	movlb	1	; () banked
	
	btfss	((_DtKNF))&0ffh,1
	goto	u77701
	goto	u77700
u77701:
	goto	l680
u77700:
	
l39156:; BSR set to: 1

	movlw	high(01h)
	movlb	0	; () banked
	movwf	((_M+1))&0ffh
	movlw	low(01h)
	movwf	((_M))&0ffh
	goto	l706
	line	450
	
l680:; BSR set to: 1

;main.c: 450: else M._pob_KCO=0;
	movlb	0	; () banked
	clrf	((_M))&0ffh
	clrf	((_M+1))&0ffh
	goto	l706
	line	452
	
l675:; BSR set to: 1

	line	454
;main.c: 452: else
;main.c: 453: {
;main.c: 454: M._pob_KCW=0;
	movlb	0	; () banked
	clrf	(0+(_M+02h))&0ffh
	clrf	(1+(_M+02h))&0ffh
	line	455
;main.c: 455: M._pob_KCO=0;
	clrf	((_M))&0ffh
	clrf	((_M+1))&0ffh
	goto	l706
	line	458
	
l674:; BSR set to: 0

	line	461
;main.c: 458: else
;main.c: 459: {
;main.c: 461: M._pob_KCW=0;
	clrf	(0+(_M+02h))&0ffh
	clrf	(1+(_M+02h))&0ffh
	line	462
;main.c: 462: M._pob_KCO=0;
	clrf	((_M))&0ffh
	clrf	((_M+1))&0ffh
	line	463
	
l39158:; BSR set to: 0

;main.c: 463: if(M._AKTYWNE_SRW&&(PFN.poz==3))
	movf	(1+(_M+012h))&0ffh,w
	iorwf (0+(_M+012h))&0ffh,w

	btfsc	status,2
	goto	u77711
	goto	u77710
u77711:
	goto	l684
u77710:
	
l39160:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u77721
	goto	u77720
u77721:
	goto	l684
u77720:
	line	465
	
l39162:; BSR set to: 1

;main.c: 464: {
;main.c: 465: M._pob_SRW=1;
	movlw	high(01h)
	movlb	0	; () banked
	movwf	(1+(_M+04h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+04h))&0ffh
	line	466
	
l39164:; BSR set to: 0

;main.c: 466: M._pob_AL=0;
	clrf	(0+(_M+06h))&0ffh
	clrf	(1+(_M+06h))&0ffh
	line	467
	
l39166:; BSR set to: 0

;main.c: 467: M._pob_CW=0;
	clrf	(0+(_M+08h))&0ffh
	clrf	(1+(_M+08h))&0ffh
	line	468
	
l39168:; BSR set to: 0

;main.c: 468: M._pob_CO=0;
	clrf	(0+(_M+0Ah))&0ffh
	clrf	(1+(_M+0Ah))&0ffh
	line	469
	
l39170:; BSR set to: 0

;main.c: 469: M._pob_DzCO=0;
	clrf	(0+(_M+0Ch))&0ffh
	clrf	(1+(_M+0Ch))&0ffh
	line	470
	
l39172:
;main.c: 470: M._pob_DzCW=0;
	movlb	0	; () banked
	clrf	(0+(_M+0Eh))&0ffh
	clrf	(1+(_M+0Eh))&0ffh
	line	471
;main.c: 471: }
	goto	l706
	line	472
	
l684:
	line	475
;main.c: 472: else
;main.c: 473: {
;main.c: 475: M._pob_SRW=0;
	movlb	0	; () banked
	clrf	(0+(_M+04h))&0ffh
	clrf	(1+(_M+04h))&0ffh
	line	476
	
l39174:; BSR set to: 0

;main.c: 476: if(M._AKTYWNE_AL)
	movf	(1+(_M+014h))&0ffh,w
	iorwf (0+(_M+014h))&0ffh,w

	btfsc	status,2
	goto	u77731
	goto	u77730
u77731:
	goto	l686
u77730:
	line	478
	
l39176:; BSR set to: 0

;main.c: 477: {
;main.c: 478: if(70>DtCW.CW) M._pob_AL=1;
	movlw	(046h)&0ffh
	cpfslt	(0+(_DtCW+02h))&0ffh
	goto	u77741
	goto	u77740
u77741:
	goto	l687
u77740:
	
l39178:; BSR set to: 0

	movlw	high(01h)
	movwf	(1+(_M+06h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+06h))&0ffh
	goto	l688
	line	479
	
l687:; BSR set to: 0

	line	481
;main.c: 479: else
;main.c: 480: {
;main.c: 481: M._pob_AL=0;
	clrf	(0+(_M+06h))&0ffh
	clrf	(1+(_M+06h))&0ffh
	line	482
;main.c: 482: M._AKTYWNE_AL=0;
	clrf	(0+(_M+014h))&0ffh
	clrf	(1+(_M+014h))&0ffh
	line	483
	
l688:; BSR set to: 0

	line	484
;main.c: 483: }
;main.c: 484: M._pob_CW=0;
	clrf	(0+(_M+08h))&0ffh
	clrf	(1+(_M+08h))&0ffh
	line	485
;main.c: 485: M._pob_CO=0;
	clrf	(0+(_M+0Ah))&0ffh
	clrf	(1+(_M+0Ah))&0ffh
	line	486
;main.c: 486: M._pob_DzCO=0;
	clrf	(0+(_M+0Ch))&0ffh
	clrf	(1+(_M+0Ch))&0ffh
	line	487
;main.c: 487: M._pob_DzCW=0;
	clrf	(0+(_M+0Eh))&0ffh
	clrf	(1+(_M+0Eh))&0ffh
	line	488
;main.c: 488: }
	goto	l706
	line	489
	
l686:; BSR set to: 0

	line	492
;main.c: 489: else
;main.c: 490: {
;main.c: 492: M._pob_AL=0;
	clrf	(0+(_M+06h))&0ffh
	clrf	(1+(_M+06h))&0ffh
	line	493
	
l39180:; BSR set to: 0

;main.c: 493: if(DtKNF.tpkt!=0) wr=RdPrt(11)&&((PFN.poz==2)||(PFN.poz==3));
	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	btfsc	status,2
	goto	u77751
	goto	u77750
u77751:
	goto	l690
u77750:
	
l39182:; BSR set to: 1

	clrf	((c:_KolejkaPobudzen$2077)),c
	
l39184:; BSR set to: 1

	movlw	(0Bh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u77761
	goto	u77760
u77761:
	goto	l39192
u77760:
	
l39186:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	2
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u77771
	goto	u77770
u77771:
	goto	l39190
u77770:
	
l39188:; BSR set to: 1

	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u77781
	goto	u77780
u77781:
	goto	l39192
u77780:
	
l39190:; BSR set to: 1

	movlw	low(01h)
	movwf	((c:_KolejkaPobudzen$2077)),c
	
l39192:
	movff	(c:_KolejkaPobudzen$2077),(c:KolejkaPobudzen@wr)
	goto	l693
	line	494
	
l690:; BSR set to: 1

;main.c: 494: else wr=DtCW._wpz_CW&&DtCO._pz_CO&&((PFN.poz==2)||(PFN.poz==3));
	clrf	((c:_KolejkaPobudzen$2078)),c
	movlb	0	; () banked
	
	btfss	((_DtCW))&0ffh,3
	goto	u77791
	goto	u77790
u77791:
	goto	l39202
u77790:
	
l39194:; BSR set to: 0

	
	btfss	(0+(_DtCO+01h))&0ffh,1
	goto	u77801
	goto	u77800
u77801:
	goto	l39202
u77800:
	
l39196:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	2
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u77811
	goto	u77810
u77811:
	goto	l39200
u77810:
	
l39198:; BSR set to: 1

	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u77821
	goto	u77820
u77821:
	goto	l39202
u77820:
	
l39200:; BSR set to: 1

	movlw	low(01h)
	movwf	((c:_KolejkaPobudzen$2078)),c
	
l39202:
	movff	(c:_KolejkaPobudzen$2078),(c:KolejkaPobudzen@wr)
	
l693:
	line	495
;main.c: 495: if(wr!=0)
	movf	((c:KolejkaPobudzen@wr)),c,w
	btfsc	status,2
	goto	u77831
	goto	u77830
u77831:
	goto	l696
u77830:
	line	497
	
l39204:
;main.c: 496: {
;main.c: 497: M._pob_CW=1;
	movlw	high(01h)
	movlb	0	; () banked
	movwf	(1+(_M+08h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+08h))&0ffh
	goto	l39168
	line	502
	
l696:
	line	505
;main.c: 502: else
;main.c: 503: {
;main.c: 505: M._pob_CW=0;
	movlb	0	; () banked
	clrf	(0+(_M+08h))&0ffh
	clrf	(1+(_M+08h))&0ffh
	line	506
	
l39212:; BSR set to: 0

;main.c: 506: if(RdPrt(12)&&(PFN.poz==3))
	movlw	(0Ch)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u77841
	goto	u77840
u77841:
	goto	l698
u77840:
	
l39214:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u77851
	goto	u77850
u77851:
	goto	l698
u77850:
	line	508
	
l39216:; BSR set to: 1

;main.c: 507: {
;main.c: 508: M._pob_CO=1;
	movlw	high(01h)
	movlb	0	; () banked
	movwf	(1+(_M+0Ah))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+0Ah))&0ffh
	goto	l39170
	line	512
	
l698:
	line	515
;main.c: 512: else
;main.c: 513: {
;main.c: 515: M._pob_CO=0;
	movlb	0	; () banked
	clrf	(0+(_M+0Ah))&0ffh
	clrf	(1+(_M+0Ah))&0ffh
	line	516
	
l39222:; BSR set to: 0

;main.c: 516: if(RdPrt(9))
	movlw	(09h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u77861
	goto	u77860
u77861:
	goto	l700
u77860:
	line	518
	
l39224:; BSR set to: 0

;main.c: 517: {
;main.c: 518: M._pob_DzCO=1;
	movlw	high(01h)
	movwf	(1+(_M+0Ch))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+0Ch))&0ffh
	goto	l39172
	line	521
	
l700:; BSR set to: 0

	line	523
;main.c: 521: else
;main.c: 522: {
;main.c: 523: M._pob_DzCO=0;
	clrf	(0+(_M+0Ch))&0ffh
	clrf	(1+(_M+0Ch))&0ffh
	line	524
;main.c: 524: if(DtKNF.tpkt==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+07h))&0ffh
	goto	u77871
	goto	u77870
u77871:
	goto	l39172
u77870:
	line	527
	
l39228:; BSR set to: 1

;main.c: 525: {
;main.c: 527: if(RdPrt(10)) M._pob_DzCW=1;
	movlw	(0Ah)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u77881
	goto	u77880
u77881:
	goto	l39172
u77880:
	
l39230:; BSR set to: 0

	movlw	high(01h)
	movwf	(1+(_M+0Eh))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+0Eh))&0ffh
	line	537
	
l706:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_KolejkaPobudzen
	__end_of_KolejkaPobudzen:
	signat	_KolejkaPobudzen,88
	global	_RglPmp

;; *************** function _RglPmp *****************
;; Defined at:
;;		line 528 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:   10
;; This function calls:
;;		_RglPmp1
;;		_RglPmp2
;;		_StartRTS
;;		_ProcToPmpPwm
;;		_WritePWM2
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text31,class=CODE,space=0,reloc=2
global __ptext31
__ptext31:
psect	text31
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	528
	global	__size_of_RglPmp
	__size_of_RglPmp	equ	__end_of_RglPmp-_RglPmp
	
_RglPmp:; BSR set to: 0

	opt	stack 20
	line	529
	
l39232:; BSR set to: 0

;pompa.c: 529: if(DtKNF.rdpm)
	movlb	1	; () banked
	movf	(0+(_DtKNF+09h))&0ffh,w
	btfsc	status,2
	goto	u77891
	goto	u77890
u77891:
	goto	l4351
u77890:
	line	531
	
l39234:; BSR set to: 1

;pompa.c: 530: {
;pompa.c: 531: if(!DtKNF.teco)
	tstfsz	(0+(_DtKNF+0Ch))&0ffh
	goto	u77901
	goto	u77900
u77901:
	goto	l39238
u77900:
	line	533
	
l39236:; BSR set to: 1

;pompa.c: 532: {
;pompa.c: 533: RglPmp1();
	call	_RglPmp1	;wreg free
	line	534
;pompa.c: 534: }
	goto	l4359
	line	537
	
l39238:; BSR set to: 1

;pompa.c: 535: else
;pompa.c: 536: {
;pompa.c: 537: RglPmp2();
	call	_RglPmp2	;wreg free
	goto	l4359
	line	540
	
l4351:; BSR set to: 1

	line	542
;pompa.c: 540: else
;pompa.c: 541: {
;pompa.c: 542: if(!M._PRACA)
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u77911
	goto	u77910
u77911:
	goto	l39244
u77910:
	line	544
	
l39240:; BSR set to: 0

;pompa.c: 543: {
;pompa.c: 544: StartRTS(15);
	movlw	(0Fh)&0ffh
	
	call	_StartRTS
	line	545
	
l39242:; BSR set to: 1

;pompa.c: 545: if(PORTDbits.RD2)
	
	btfss	((c:3971)),c,2	;volatile
	goto	u77921
	goto	u77920
u77921:
	goto	l4356
u77920:
	line	547
	
l39244:
;pompa.c: 546: {
;pompa.c: 547: PMP.APROC=15;
	movlw	low(0Fh)
	movwf	(0+((c:_PMP)+02h)),c
	line	548
;pompa.c: 548: }
	goto	l39248
	line	549
	
l4356:; BSR set to: 1

	line	551
;pompa.c: 549: else
;pompa.c: 550: {
;pompa.c: 551: PMP.APROC=0;
	clrf	(0+((c:_PMP)+02h)),c
	line	558
	
l39248:
;pompa.c: 557: }
;pompa.c: 558: WritePWM2(ProcToPmpPwm(PMP.APROC));
	movf	(0+((c:_PMP)+02h)),c,w
	
	call	_ProcToPmpPwm
	
	call	_WritePWM2
	line	560
	
l4359:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RglPmp
	__end_of_RglPmp:
	signat	_RglPmp,88
	global	_Rozruch

;; *************** function _Rozruch *****************
;; Defined at:
;;		line 2437 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:   10
;; This function calls:
;;		_StartRTS
;;		_RTS
;;		_RdPrt
;;		_PrintErr
;;		_ErrPTG
;;		_WritePWM
;;		_GrzejON
;;		_DecyzjaPLM
;;		_DecyzjaPLM2
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text32,class=CODE,space=0,reloc=2
global __ptext32
__ptext32:
psect	text32
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2437
	global	__size_of_Rozruch
	__size_of_Rozruch	equ	__end_of_Rozruch-_Rozruch
	
_Rozruch:; BSR set to: 0

	opt	stack 20
	line	2438
	
l39538:; BSR set to: 0

;main.c: 2438: switch(M.ROZ)
	goto	l39702
	line	2441
;main.c: 2439: {
;main.c: 2441: case 0:
	
l1342:; BSR set to: 0

	line	2443
;main.c: 2442: {
;main.c: 2443: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u78681
	goto	u78680
u78681:
	goto	l39544
u78680:
	line	2445
	
l39540:; BSR set to: 1

;main.c: 2444: {
;main.c: 2445: if(M._ZMKCOCW) return;
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u78691
	goto	u78690
u78691:
	goto	l39544
u78690:
	goto	l1345
	line	2447
	
l39544:
;main.c: 2446: }
;main.c: 2447: M.ROZ=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	(0+(_M+023h))&0ffh
	line	2448
	
l39546:; BSR set to: 0

;main.c: 2448: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	line	2453
	
l39548:
;main.c: 2452: {
;main.c: 2453: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u78701
	goto	u78700
u78701:
	goto	l39574
u78700:
	line	2455
	
l39550:; BSR set to: 1

;main.c: 2454: {
;main.c: 2455: if(RTS(2)<1) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	iorlw	0
	btfss	status,2
	goto	u78711
	goto	u78710
u78711:
	goto	l1348
u78710:
	goto	l1345
	
l1348:; BSR set to: 1

	line	2456
;main.c: 2456: PORTDbits.RD2=0;
	bcf	((c:3971)),c,2	;volatile
	line	2457
	
l39554:; BSR set to: 1

;main.c: 2457: if(!RdPrt(1))
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u78721
	goto	u78720
u78721:
	goto	l39562
u78720:
	line	2459
	
l39556:; BSR set to: 0

;main.c: 2458: {
;main.c: 2459: M.ROZ=2;
	movlw	low(02h)
	movwf	(0+(_M+023h))&0ffh
	line	2460
	
l39558:; BSR set to: 0

;main.c: 2460: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	goto	l1345
	line	2463
	
l39562:; BSR set to: 0

;main.c: 2462: }
;main.c: 2463: if(RTS(2)<5) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(05h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u78731
	goto	u78730
u78731:
	goto	l39566
u78730:
	goto	l1345
	line	2464
	
l39566:; BSR set to: 0

;main.c: 2464: M.ERR_BTY=0x05;
	movlw	low(05h)
	movwf	(0+(_M+022h))&0ffh
	line	2465
	
l39568:; BSR set to: 0

;main.c: 2465: PrintErr(0x05,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movlw	(05h)&0ffh
	
	call	_PrintErr
	line	2466
	
l39570:; BSR set to: 1

;main.c: 2466: ErrPTG();
	call	_ErrPTG	;wreg free
	goto	l1345
	line	2469
	
l39574:; BSR set to: 1

;main.c: 2468: }
;main.c: 2469: M.ROZ=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	(0+(_M+023h))&0ffh
	line	2470
	
l39576:; BSR set to: 0

;main.c: 2470: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	goto	l39588
	line	2478
	
l1354:; BSR set to: 1

	line	2480
;main.c: 2478: case 2:
;main.c: 2479: {
;main.c: 2480: if(!M._RPM_CW&&(DtKNF.robg==0)) PORTDbits.RD2=1;
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u78741
	goto	u78740
u78741:
	goto	l39590
u78740:
	
l39578:; BSR set to: 0

	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u78751
	goto	u78750
u78751:
	goto	l39590
u78750:
	
l39580:
	bsf	((c:3971)),c,2	;volatile
	goto	l39590
	line	2484
	
l1358:; BSR set to: 1

	line	2486
;main.c: 2484: case 3:
;main.c: 2485: {
;main.c: 2486: if(!M._ZMKCOCW) PORTDbits.RD2=1;
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u78761
	goto	u78760
u78761:
	goto	l39590
u78760:
	goto	l39580
	line	2489
;main.c: 2488: }
;main.c: 2489: default:
	
l1360:; BSR set to: 1

	line	2491
;main.c: 2490: {
;main.c: 2491: if(!M._ZMKCOCW) PORTDbits.RD2=1;
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u78771
	goto	u78770
u78771:
	goto	l39590
u78770:
	goto	l39580
	line	2475
	
l39588:
	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1358
	xorlw	1^0	; case 1
	skipnz
	goto	l1354
	xorlw	2^1	; case 2
	skipnz
	goto	l1354
	xorlw	3^2	; case 3
	skipnz
	goto	l1358
	goto	l1360

	line	2495
	
l39590:
;main.c: 2495: WritePWM(PWM.MDMOD);
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	
	call	_WritePWM
	line	2496
	
l39592:; BSR set to: 0

;main.c: 2496: M.ROZ=3;
	movlw	low(03h)
	movwf	(0+(_M+023h))&0ffh
	line	2497
	
l39594:; BSR set to: 0

;main.c: 2497: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	line	2502
	
l39596:
;main.c: 2501: {
;main.c: 2502: if(M._TURBO)
	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,1
	goto	u78781
	goto	u78780
u78781:
	goto	l39606
u78780:
	line	2504
	
l39598:; BSR set to: 0

;main.c: 2503: {
;main.c: 2504: if(RdPrt(3)&&!PORTDbits.RD3)
	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u78791
	goto	u78790
u78791:
	goto	l1364
u78790:
	
l39600:; BSR set to: 0

	
	btfsc	((c:3971)),c,3	;volatile
	goto	u78801
	goto	u78800
u78801:
	goto	l1364
u78800:
	line	2506
	
l39602:; BSR set to: 0

;main.c: 2505: {
;main.c: 2506: if(RTS(2)<5) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(05h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u78811
	goto	u78810
u78811:
	goto	l1365
u78810:
	goto	l1345
	
l1365:; BSR set to: 0

	line	2507
;main.c: 2507: M.RCI=0;
	clrf	(0+(_M+02Bh))&0ffh
	line	2508
;main.c: 2508: M._RUSZ_CIAG=1;
	bsf	(0+(_M+010h))&0ffh,7
	line	2509
;main.c: 2509: return;
	goto	l1345
	line	2510
	
l1364:; BSR set to: 0

	line	2511
;main.c: 2510: }
;main.c: 2511: PORTDbits.RD3=1;
	bsf	((c:3971)),c,3	;volatile
	line	2513
	
l39606:; BSR set to: 0

;main.c: 2512: }
;main.c: 2513: M.ROZ=4;
	movlw	low(04h)
	movwf	(0+(_M+023h))&0ffh
	line	2514
	
l39608:; BSR set to: 0

;main.c: 2514: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	line	2519
	
l39610:
;main.c: 2518: {
;main.c: 2519: if(M._TURBO)
	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,1
	goto	u78821
	goto	u78820
u78821:
	goto	l39620
u78820:
	line	2521
	
l39612:; BSR set to: 0

;main.c: 2520: {
;main.c: 2521: if(!RdPrt(21)&&PORTDbits.RD3)
	movlw	(015h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u78831
	goto	u78830
u78831:
	goto	l39620
u78830:
	
l39614:; BSR set to: 0

	
	btfss	((c:3971)),c,3	;volatile
	goto	u78841
	goto	u78840
u78841:
	goto	l39620
u78840:
	line	2523
	
l39616:; BSR set to: 0

;main.c: 2522: {
;main.c: 2523: if(RTS(2)<5) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(05h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u78851
	goto	u78850
u78851:
	goto	l1365
u78850:
	goto	l1345
	line	2529
	
l39620:; BSR set to: 0

;main.c: 2527: }
;main.c: 2528: }
;main.c: 2529: M.ROZ=5;
	movlw	low(05h)
	movwf	(0+(_M+023h))&0ffh
	line	2530
	
l39622:; BSR set to: 0

;main.c: 2530: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	line	2535
	
l39624:
;main.c: 2534: {
;main.c: 2535: if(M._TURBO&&!RdPrt(21))
	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,1
	goto	u78861
	goto	u78860
u78861:
	goto	l39630
u78860:
	
l39626:; BSR set to: 0

	movlw	(015h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u78871
	goto	u78870
u78871:
	goto	l39630
u78870:
	goto	l1365
	line	2541
	
l39630:; BSR set to: 0

;main.c: 2540: }
;main.c: 2541: if(RdPrt(5)&&!PORTDbits.RD0)
	movlw	(05h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u78881
	goto	u78880
u78881:
	goto	l39644
u78880:
	
l39632:; BSR set to: 0

	
	btfsc	((c:3971)),c,0	;volatile
	goto	u78891
	goto	u78890
u78891:
	goto	l39644
u78890:
	line	2543
	
l39634:; BSR set to: 0

;main.c: 2542: {
;main.c: 2543: if(RTS(2)<5) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(05h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u78901
	goto	u78900
u78901:
	goto	l39638
u78900:
	goto	l1345
	line	2544
	
l39638:; BSR set to: 0

;main.c: 2544: M.ERR_BTY=0x06;
	movlw	low(06h)
	movwf	(0+(_M+022h))&0ffh
	line	2545
	
l39640:; BSR set to: 0

;main.c: 2545: PrintErr(0x06,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movlw	(06h)&0ffh
	
	call	_PrintErr
	line	2546
	
l39642:; BSR set to: 1

;main.c: 2546: ErrPTG();
	call	_ErrPTG	;wreg free
	line	2548
	
l39644:
;main.c: 2547: }
;main.c: 2548: GrzejON();
	call	_GrzejON	;wreg free
	line	2549
	
l39646:
;main.c: 2549: M.ROZ=6;
	movlw	low(06h)
	movlb	0	; () banked
	movwf	(0+(_M+023h))&0ffh
	line	2550
	
l39648:; BSR set to: 0

;main.c: 2550: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	goto	l39656
	line	2563
	
l1380:; BSR set to: 1

	line	2565
;main.c: 2563: case 3:
;main.c: 2564: {
;main.c: 2565: if(!M._ZMKCOCW) PORTDbits.RD2=1;
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u78911
	goto	u78910
u78911:
	goto	l1378
u78910:
	
l39650:; BSR set to: 0

	bsf	((c:3971)),c,2	;volatile
	goto	l1378
	line	2568
;main.c: 2567: }
;main.c: 2568: default:
	
l1382:; BSR set to: 1

	line	2570
;main.c: 2569: {
;main.c: 2570: if(!M._ZMKCOCW) PORTDbits.RD2=1;
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u78921
	goto	u78920
u78921:
	goto	l1378
u78920:
	goto	l39650
	line	2555
	
l39656:
	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1380
	xorlw	1^0	; case 1
	skipnz
	goto	l1378
	xorlw	2^1	; case 2
	skipnz
	goto	l1378
	xorlw	3^2	; case 3
	skipnz
	goto	l1380
	goto	l1382

	line	2573
	
l1378:
	line	2574
;main.c: 2574: if(M._TURBO&&!RdPrt(21))
	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,1
	goto	u78931
	goto	u78930
u78931:
	goto	l39662
u78930:
	
l39658:; BSR set to: 0

	movlw	(015h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u78941
	goto	u78940
u78941:
	goto	l39662
u78940:
	goto	l1365
	line	2580
	
l39662:; BSR set to: 0

;main.c: 2579: }
;main.c: 2580: if(RdPrt(8)) WritePWM(PWM.MSTART);
	movlw	(08h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u78951
	goto	u78950
u78951:
	goto	l39666
u78950:
	
l39664:; BSR set to: 0

	movf	(0+(_PWM+01Ch))&0ffh,w	;volatile
	
	call	_WritePWM
	goto	l39668
	line	2581
	
l39666:; BSR set to: 0

;main.c: 2581: else WritePWM(PWM.MDMOD);
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	
	call	_WritePWM
	line	2583
	
l39668:; BSR set to: 0

;main.c: 2583: if(RTS(2)<2) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(02h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u78961
	goto	u78960
u78961:
	goto	l39672
u78960:
	goto	l1345
	line	2585
	
l39672:; BSR set to: 0

;main.c: 2585: if(RTS(2)<7)
	movlw	(02h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(07h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u78971
	goto	u78970
u78971:
	goto	l39684
u78970:
	line	2587
	
l39674:; BSR set to: 0

;main.c: 2586: {
;main.c: 2587: if(RdPrt(5))
	movlw	(05h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u78981
	goto	u78980
u78981:
	goto	l1345
u78980:
	line	2589
	
l39676:; BSR set to: 0

;main.c: 2588: {
;main.c: 2589: M.ROZ=7;
	movlw	low(07h)
	movwf	(0+(_M+023h))&0ffh
	line	2590
	
l39678:; BSR set to: 0

;main.c: 2590: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	goto	l1345
	line	2596
	
l39684:; BSR set to: 0

;main.c: 2594: else
;main.c: 2595: {
;main.c: 2596: DecyzjaPLM();
	call	_DecyzjaPLM	;wreg free
	goto	l1345
	line	2601
;main.c: 2598: }
;main.c: 2599: }
;main.c: 2601: case 7:
	
l1391:; BSR set to: 0

	line	2603
;main.c: 2602: {
;main.c: 2603: if(M._RPM_CW)
	
	btfss	(0+(_M+01Bh))&0ffh,7
	goto	u78991
	goto	u78990
u78991:
	goto	l1392
u78990:
	line	2605
	
l39688:; BSR set to: 0

;main.c: 2604: {
;main.c: 2605: M._ROZRUCH=0;
	bcf	(0+(_M+010h))&0ffh,2
	line	2606
;main.c: 2606: M.ROZ=0;
	clrf	(0+(_M+023h))&0ffh
	line	2607
;main.c: 2607: return;
	goto	l1345
	line	2608
	
l1392:; BSR set to: 0

	line	2609
;main.c: 2608: }
;main.c: 2609: if(M._TURBO&&!RdPrt(21))
	
	btfss	(0+(_M+01Bh))&0ffh,1
	goto	u79001
	goto	u79000
u79001:
	goto	l39694
u79000:
	
l39690:; BSR set to: 0

	movlw	(015h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u79011
	goto	u79010
u79011:
	goto	l39694
u79010:
	goto	l1365
	line	2615
	
l39694:; BSR set to: 0

;main.c: 2614: }
;main.c: 2615: if(!RdPrt(5))
	movlw	(05h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u79021
	goto	u79020
u79021:
	goto	l39698
u79020:
	line	2617
	
l39696:; BSR set to: 0

;main.c: 2616: {
;main.c: 2617: DecyzjaPLM2();
	call	_DecyzjaPLM2	;wreg free
	line	2620
	
l39698:
;main.c: 2619: }
;main.c: 2620: if(RTS(2)<2) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_Rozruch+0+0)&0ffh
	movlw	(02h)&0ffh
	subwf	((??_Rozruch+0+0))&0ffh,w
	btfsc	status,0
	goto	u79031
	goto	u79030
u79031:
	goto	l39688
u79030:
	goto	l1345
	line	2438
	
l39702:; BSR set to: 0

	movf	(0+(_M+023h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 8, Range of values is 0 to 7
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           25    13 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1342
	xorlw	1^0	; case 1
	skipnz
	goto	l39548
	xorlw	2^1	; case 2
	skipnz
	goto	l39588
	xorlw	3^2	; case 3
	skipnz
	goto	l39596
	xorlw	4^3	; case 4
	skipnz
	goto	l39610
	xorlw	5^4	; case 5
	skipnz
	goto	l39624
	xorlw	6^5	; case 6
	skipnz
	goto	l39656
	xorlw	7^6	; case 7
	skipnz
	goto	l1391
	goto	l1345

	line	2625
	
l1345:
	return
	opt stack 0
GLOBAL	__end_of_Rozruch
	__end_of_Rozruch:
	signat	_Rozruch,88
	global	_ReloadPlomien

;; *************** function _ReloadPlomien *****************
;; Defined at:
;;		line 3207 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RTdS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text33,class=CODE,space=0,reloc=2
global __ptext33
__ptext33:
psect	text33
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3207
	global	__size_of_ReloadPlomien
	__size_of_ReloadPlomien	equ	__end_of_ReloadPlomien-_ReloadPlomien
	
_ReloadPlomien:
	opt	stack 25
	line	3208
	
l39704:
;main.c: 3208: if(!M._RUSZ_PLOMIEN&&!M._ZMKCOCW&&!M._ROZRUCH&&(RTdS(4)>9))
	movlb	0	; () banked
	
	btfsc	(0+(_M+011h))&0ffh,0
	goto	u79041
	goto	u79040
u79041:
	goto	l1600
u79040:
	
l39706:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u79051
	goto	u79050
u79051:
	goto	l1600
u79050:
	
l39708:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u79061
	goto	u79060
u79061:
	goto	l1600
u79060:
	
l39710:; BSR set to: 0

	movlw	(04h)&0ffh
	
	call	_RTdS
	movwf	(??_ReloadPlomien+0+0)&0ffh,c
	movlw	(0Ah)&0ffh
	subwf	((??_ReloadPlomien+0+0)),c,w
	btfss	status,0
	goto	u79071
	goto	u79070
u79071:
	goto	l1600
u79070:
	line	3210
	
l39712:; BSR set to: 1

;main.c: 3209: {
;main.c: 3210: M._RUSZ_RPLM=0;
	movlb	0	; () banked
	bcf	(0+(_M+011h))&0ffh,1
	line	3211
;main.c: 3211: M._OST_PL=0;
	bcf	(0+(_M+01Bh))&0ffh,3
	line	3212
;main.c: 3212: M.LICZNIK_PL=0;
	clrf	(0+(_M+01Dh))&0ffh
	line	3214
	
l1600:
	return
	opt stack 0
GLOBAL	__end_of_ReloadPlomien
	__end_of_ReloadPlomien:
	signat	_ReloadPlomien,88
	global	_RuszPlomien

;; *************** function _RuszPlomien *****************
;; Defined at:
;;		line 3149 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTS
;;		_RTS
;;		_StartRTdS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text34,class=CODE,space=0,reloc=2
global __ptext34
__ptext34:
psect	text34
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3149
	global	__size_of_RuszPlomien
	__size_of_RuszPlomien	equ	__end_of_RuszPlomien-_RuszPlomien
	
_RuszPlomien:
	opt	stack 25
	line	3150
	
l39714:; BSR set to: 0

;main.c: 3150: switch(M.RPL)
	goto	l39752
	line	3154
	
l39716:; BSR set to: 0

;main.c: 3153: {
;main.c: 3154: M.RPL=1;
	movlw	low(01h)
	movwf	(0+(_M+02Ah))&0ffh
	line	3155
	
l39718:; BSR set to: 0

;main.c: 3155: StartRTS(3);
	movlw	(03h)&0ffh
	
	call	_StartRTS
	line	3159
	
l39720:
;main.c: 3158: {
;main.c: 3159: if(RTS(3)<30) return;
	movlw	(03h)&0ffh
	
	call	_RTS
	movwf	(??_RuszPlomien+0+0)&0ffh,c
	movlw	(01Eh)&0ffh
	subwf	((??_RuszPlomien+0+0)),c,w
	btfsc	status,0
	goto	u79081
	goto	u79080
u79081:
	goto	l39724
u79080:
	goto	l1585
	line	3160
	
l39724:; BSR set to: 1

;main.c: 3160: M.LICZNIK_PL++;
	movlb	0	; () banked
	incf	(0+(_M+01Dh))&0ffh
	line	3161
	
l39726:; BSR set to: 0

;main.c: 3161: if(M._RUSZ_RPLM)
	
	btfss	(0+(_M+011h))&0ffh,1
	goto	u79091
	goto	u79090
u79091:
	goto	l1586
u79090:
	line	3163
	
l39728:; BSR set to: 0

;main.c: 3162: {
;main.c: 3163: if(!PWM.tpGZ)
	
	btfsc	((_PWM))&0ffh,2	;volatile
	goto	u79101
	goto	u79100
u79101:
	goto	l39734
u79100:
	line	3165
	
l39730:; BSR set to: 0

;main.c: 3164: {
;main.c: 3165: if(M.LICZNIK_PL>=3-1)
	lfsr	2,_M+01Dh
	movlw	(02h-1)
	cpfsgt	indf2
	goto	u79111
	goto	u79110
u79111:
	goto	l39746
u79110:
	line	3167
	
l39732:; BSR set to: 0

;main.c: 3166: {
;main.c: 3167: M._OST_PL=1;
	bsf	(0+(_M+01Bh))&0ffh,3
	line	3168
;main.c: 3168: M._RUSZ_RPLM=0;
	bcf	(0+(_M+011h))&0ffh,1
	goto	l39746
	line	3173
	
l39734:; BSR set to: 0

;main.c: 3171: else
;main.c: 3172: {
;main.c: 3173: if(M.LICZNIK_PL>=2-1)
	movf	(0+(_M+01Dh))&0ffh,w
	btfsc	status,2
	goto	u79121
	goto	u79120
u79121:
	goto	l39746
u79120:
	goto	l39732
	line	3180
	
l1586:; BSR set to: 0

	line	3182
;main.c: 3180: else
;main.c: 3181: {
;main.c: 3182: if(!PWM.tpGZ)
	
	btfsc	((_PWM))&0ffh,2	;volatile
	goto	u79131
	goto	u79130
u79131:
	goto	l39742
u79130:
	line	3184
	
l39738:; BSR set to: 0

;main.c: 3183: {
;main.c: 3184: if(M.LICZNIK_PL>=3)
	lfsr	2,_M+01Dh
	movlw	(03h-1)
	cpfsgt	indf2
	goto	u79141
	goto	u79140
u79141:
	goto	l39746
u79140:
	goto	l39732
	line	3192
	
l39742:; BSR set to: 0

;main.c: 3190: else
;main.c: 3191: {
;main.c: 3192: if(M.LICZNIK_PL>=2)
	lfsr	2,_M+01Dh
	movlw	(02h-1)
	cpfsgt	indf2
	goto	u79151
	goto	u79150
u79151:
	goto	l39746
u79150:
	goto	l39732
	line	3199
	
l39746:; BSR set to: 0

;main.c: 3196: }
;main.c: 3197: }
;main.c: 3198: }
;main.c: 3199: StartRTdS(4);
	movlw	(04h)&0ffh
	
	call	_StartRTdS
	line	3200
	
l39748:; BSR set to: 1

;main.c: 3200: M._RUSZ_PLOMIEN=0;
	movlb	0	; () banked
	bcf	(0+(_M+011h))&0ffh,0
	line	3201
	
l39750:; BSR set to: 0

;main.c: 3201: M.RPL=0;
	clrf	(0+(_M+02Ah))&0ffh
	line	3203
;main.c: 3202: }
;main.c: 3203: }
	goto	l1585
	line	3150
	
l39752:; BSR set to: 0

	movf	(0+(_M+02Ah))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39716
	xorlw	1^0	; case 1
	skipnz
	goto	l39720
	goto	l1585

	line	3204
	
l1585:
	return
	opt stack 0
GLOBAL	__end_of_RuszPlomien
	__end_of_RuszPlomien:
	signat	_RuszPlomien,88
	global	_ReloadCiag

;; *************** function _ReloadCiag *****************
;; Defined at:
;;		line 3333 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RTM
;;		_RTS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text35,class=CODE,space=0,reloc=2
global __ptext35
__ptext35:
psect	text35
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3333
	global	__size_of_ReloadCiag
	__size_of_ReloadCiag	equ	__end_of_ReloadCiag-_ReloadCiag
	
_ReloadCiag:
	opt	stack 25
	line	3334
	
l31754:
;main.c: 3334: if(!M._TURBO)
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,1
	goto	u59061
	goto	u59060
u59061:
	goto	l31762
u59060:
	line	3336
	
l31756:; BSR set to: 0

;main.c: 3335: {
;main.c: 3336: if(!M._RUSZ_CIAG&&RTM(6)>60) M.LICZNIK_CIG2=0;
	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u59071
	goto	u59070
u59071:
	goto	l1638
u59070:
	
l31758:; BSR set to: 0

	movlw	(06h)&0ffh
	
	call	_RTM
	movwf	(??_ReloadCiag+0+0)&0ffh,c
	movlw	(03Dh)&0ffh
	subwf	((??_ReloadCiag+0+0)),c,w
	btfss	status,0
	goto	u59081
	goto	u59080
u59081:
	goto	l1638
u59080:
	
l31760:; BSR set to: 1

	movlb	0	; () banked
	clrf	(0+(_M+01Fh))&0ffh
	goto	l1638
	line	3340
	
l31762:; BSR set to: 0

;main.c: 3338: else
;main.c: 3339: {
;main.c: 3340: if(RTS(10)>60)
	movlw	(0Ah)&0ffh
	
	call	_RTS
	movwf	(??_ReloadCiag+0+0)&0ffh,c
	movlw	(03Dh)&0ffh
	subwf	((??_ReloadCiag+0+0)),c,w
	btfss	status,0
	goto	u59091
	goto	u59090
u59091:
	goto	l1636
u59090:
	line	3342
	
l31764:; BSR set to: 1

;main.c: 3341: {
;main.c: 3342: M.LICZNIK_CIG=0;
	movlb	0	; () banked
	clrf	(0+(_M+01Eh))&0ffh
	line	3343
	
l1636:
	line	3344
;main.c: 3343: }
;main.c: 3344: if(!M._RUSZ_CIAG&&(RTS(14)>60))
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,7
	goto	u59101
	goto	u59100
u59101:
	goto	l1638
u59100:
	
l31766:; BSR set to: 0

	movlw	(0Eh)&0ffh
	
	call	_RTS
	movwf	(??_ReloadCiag+0+0)&0ffh,c
	movlw	(03Dh)&0ffh
	subwf	((??_ReloadCiag+0+0)),c,w
	btfss	status,0
	goto	u59111
	goto	u59110
u59111:
	goto	l1638
u59110:
	line	3346
	
l31768:; BSR set to: 1

;main.c: 3345: {
;main.c: 3346: M.LICZNIK_CIG3=0;
	movlb	0	; () banked
	clrf	(0+(_M+020h))&0ffh
	line	3349
	
l1638:
	return
	opt stack 0
GLOBAL	__end_of_ReloadCiag
	__end_of_ReloadCiag:
	signat	_ReloadCiag,88
	global	_RuszCiag

;; *************** function _RuszCiag *****************
;; Defined at:
;;		line 3219 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_StartRTS
;;		_StartRTM
;;		_RTS
;;		_RTM
;;		_PrintErr
;;		_ErrPTG
;;		_RdPrt
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text36,class=CODE,space=0,reloc=2
global __ptext36
__ptext36:
psect	text36
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3219
	global	__size_of_RuszCiag
	__size_of_RuszCiag	equ	__end_of_RuszCiag-_RuszCiag
	
_RuszCiag:
	opt	stack 21
	line	3220
	
l39754:; BSR set to: 0

;main.c: 3220: if(!M._TURBO)
	
	btfsc	(0+(_M+01Bh))&0ffh,1
	goto	u79161
	goto	u79160
u79161:
	goto	l39888
u79160:
	goto	l39798
	line	3226
	
l39758:; BSR set to: 0

;main.c: 3225: {
;main.c: 3226: M.RCI=1;
	movlw	low(01h)
	movwf	(0+(_M+02Bh))&0ffh
	line	3227
	
l39760:; BSR set to: 0

;main.c: 3227: M._prb_CIG=0;
	bcf	(0+(_M+01Ch))&0ffh,0
	line	3228
	
l39762:; BSR set to: 0

;main.c: 3228: StartRTS(4);
	movlw	(04h)&0ffh
	
	call	_StartRTS
	line	3229
	
l39764:; BSR set to: 1

;main.c: 3229: StartRTM(3);
	movlw	(03h)&0ffh
	
	call	_StartRTM
	line	3233
	
l39766:
;main.c: 3232: {
;main.c: 3233: if(RTS(4)>1) M._prb_CIG=1;
	movlw	(04h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(02h)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfss	status,0
	goto	u79171
	goto	u79170
u79171:
	goto	l39770
u79170:
	
l39768:; BSR set to: 0

	bsf	(0+(_M+01Ch))&0ffh,0
	line	3234
	
l39770:; BSR set to: 0

;main.c: 3234: if(RTM(3)<15) return;
	movlw	(03h)&0ffh
	
	call	_RTM
	movlb	0	; () banked
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(0Fh)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfsc	status,0
	goto	u79181
	goto	u79180
u79181:
	goto	l39774
u79180:
	goto	l1609
	line	3235
	
l39774:; BSR set to: 0

;main.c: 3235: M.LICZNIK_CIG2++;
	incf	(0+(_M+01Fh))&0ffh
	line	3236
	
l39776:; BSR set to: 0

;main.c: 3236: if(M.LICZNIK_CIG2>=4)
	lfsr	2,_M+01Fh
	movlw	(04h-1)
	cpfsgt	indf2
	goto	u79191
	goto	u79190
u79191:
	goto	l39786
u79190:
	line	3238
	
l39778:; BSR set to: 0

;main.c: 3237: {
;main.c: 3238: M.LICZNIK_CIG2=0;
	clrf	(0+(_M+01Fh))&0ffh
	line	3239
	
l39780:; BSR set to: 0

;main.c: 3239: M.ERR_BTY=0x03;
	movlw	low(03h)
	movwf	(0+(_M+022h))&0ffh
	line	3240
	
l39782:; BSR set to: 0

;main.c: 3240: PrintErr(0x03,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movlw	(03h)&0ffh
	
	call	_PrintErr
	line	3241
	
l39784:; BSR set to: 1

;main.c: 3241: ErrPTG();
	call	_ErrPTG	;wreg free
	line	3243
	
l39786:
;main.c: 3242: }
;main.c: 3243: M.RCI=0;
	movlb	0	; () banked
	clrf	(0+(_M+02Bh))&0ffh
	line	3244
	
l39788:; BSR set to: 0

;main.c: 3244: M._RUSZ_CIAG=0;
	bcf	(0+(_M+010h))&0ffh,7
	line	3245
	
l39790:; BSR set to: 0

;main.c: 3245: M._prb_CIG=0;
	bcf	(0+(_M+01Ch))&0ffh,0
	line	3246
	
l39792:; BSR set to: 0

;main.c: 3246: StartRTM(6);
	movlw	(06h)&0ffh
	
	call	_StartRTM
	goto	l1609
	line	3222
	
l39798:; BSR set to: 0

	movf	(0+(_M+02Bh))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39758
	xorlw	1^0	; case 1
	skipnz
	goto	l39766
	goto	l1609

	line	3255
;main.c: 3254: {
;main.c: 3255: case 0:
	
l1614:; BSR set to: 0

	line	3257
;main.c: 3256: {
;main.c: 3257: M._prb_CIG=0;
	bcf	(0+(_M+01Ch))&0ffh,0
	line	3258
	
l39800:; BSR set to: 0

;main.c: 3258: StartRTS(4);
	movlw	(04h)&0ffh
	
	call	_StartRTS
	line	3259
	
l39802:; BSR set to: 1

;main.c: 3259: if(PORTDbits.RD3)
	
	btfss	((c:3971)),c,3	;volatile
	goto	u79201
	goto	u79200
u79201:
	goto	l39808
u79200:
	line	3261
	
l39804:; BSR set to: 1

;main.c: 3260: {
;main.c: 3261: M._VWYBIEG=1;
	movlb	0	; () banked
	bsf	(0+(_M+010h))&0ffh,6
	line	3262
;main.c: 3262: M.VWB=0;
	clrf	(0+(_M+02Eh))&0ffh
	line	3263
	
l39806:; BSR set to: 0

;main.c: 3263: M.RCI=1;
	movlw	low(01h)
	movwf	(0+(_M+02Bh))&0ffh
	line	3264
;main.c: 3264: }
	goto	l1609
	line	3265
	
l39808:; BSR set to: 1

;main.c: 3265: else M.RCI=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	(0+(_M+02Bh))&0ffh
	goto	l1609
	line	3270
	
l39810:; BSR set to: 0

;main.c: 3269: {
;main.c: 3270: if(RTS(4)>1) M._prb_CIG=1;
	movlw	(04h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(02h)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfss	status,0
	goto	u79211
	goto	u79210
u79211:
	goto	l39814
u79210:
	
l39812:; BSR set to: 0

	bsf	(0+(_M+01Ch))&0ffh,0
	line	3272
	
l39814:; BSR set to: 0

;main.c: 3272: if(RdPrt(3))
	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u79221
	goto	u79220
u79221:
	goto	l39822
u79220:
	line	3274
	
l39816:; BSR set to: 0

;main.c: 3273: {
;main.c: 3274: M.RCI=4;
	movlw	low(04h)
	movwf	(0+(_M+02Bh))&0ffh
	line	3275
	
l39818:; BSR set to: 0

;main.c: 3275: M.LICZNIK_CIG3=0;
	clrf	(0+(_M+020h))&0ffh
	line	3276
	
l39820:; BSR set to: 0

;main.c: 3276: StartRTS(4);
	movlw	(04h)&0ffh
	
	call	_StartRTS
	line	3277
;main.c: 3277: break;
	goto	l1609
	line	3279
	
l39822:; BSR set to: 0

;main.c: 3278: }
;main.c: 3279: if(RTS(4)<15-1) return;
	movlw	(04h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(0Eh)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfsc	status,0
	goto	u79231
	goto	u79230
u79231:
	goto	l39826
u79230:
	goto	l1609
	line	3280
	
l39826:; BSR set to: 0

;main.c: 3280: M.RCI=3;
	movlw	low(03h)
	movwf	(0+(_M+02Bh))&0ffh
	line	3281
	
l39828:; BSR set to: 0

;main.c: 3281: StartRTS(4);
	movlw	(04h)&0ffh
	
	call	_StartRTS
	line	3282
;main.c: 3282: break;
	goto	l1609
	line	3287
	
l39830:; BSR set to: 0

;main.c: 3286: {
;main.c: 3287: if(RTS(4)>1) M._prb_CIG=1;
	movlw	(04h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(02h)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfss	status,0
	goto	u79241
	goto	u79240
u79241:
	goto	l39834
u79240:
	
l39832:; BSR set to: 0

	bsf	(0+(_M+01Ch))&0ffh,0
	line	3289
	
l39834:; BSR set to: 0

;main.c: 3289: if(!RdPrt(3))
	movlw	(03h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u79251
	goto	u79250
u79251:
	goto	l39840
u79250:
	line	3291
	
l39836:; BSR set to: 0

;main.c: 3290: {
;main.c: 3291: M.RCI=4;
	movlw	low(04h)
	movwf	(0+(_M+02Bh))&0ffh
	line	3292
	
l39838:; BSR set to: 0

;main.c: 3292: StartRTS(4);
	movlw	(04h)&0ffh
	
	call	_StartRTS
	line	3293
;main.c: 3293: break;
	goto	l1609
	line	3295
	
l39840:; BSR set to: 0

;main.c: 3294: }
;main.c: 3295: if(RTS(4)<15-1) return;
	movlw	(04h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(0Eh)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfsc	status,0
	goto	u79261
	goto	u79260
u79261:
	goto	l39844
u79260:
	goto	l1609
	line	3296
	
l39844:; BSR set to: 0

;main.c: 3296: M.ERR_BTY=0x03;
	movlw	low(03h)
	movwf	(0+(_M+022h))&0ffh
	line	3297
	
l39846:; BSR set to: 0

;main.c: 3297: PrintErr(0x03,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movlw	(03h)&0ffh
	
	call	_PrintErr
	line	3298
	
l39848:; BSR set to: 1

;main.c: 3298: ErrPTG();
	call	_ErrPTG	;wreg free
	line	3303
	
l39850:
;main.c: 3302: {
;main.c: 3303: PORTDbits.RD3=0;
	bcf	((c:3971)),c,3	;volatile
	line	3304
	
l39852:
;main.c: 3304: if(RTS(4)<5-1) return;
	movlw	(04h)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_RuszCiag+0+0)&0ffh
	movlw	(04h)&0ffh
	subwf	((??_RuszCiag+0+0))&0ffh,w
	btfsc	status,0
	goto	u79271
	goto	u79270
u79271:
	goto	l39856
u79270:
	goto	l1609
	line	3305
	
l39856:; BSR set to: 0

;main.c: 3305: M.LICZNIK_CIG3++;
	incf	(0+(_M+020h))&0ffh
	line	3306
	
l39858:; BSR set to: 0

;main.c: 3306: if(M.LICZNIK_CIG3>=10)
	lfsr	2,_M+020h
	movlw	(0Ah-1)
	cpfsgt	indf2
	goto	u79281
	goto	u79280
u79281:
	goto	l39868
u79280:
	line	3308
	
l39860:; BSR set to: 0

;main.c: 3307: {
;main.c: 3308: M.LICZNIK_CIG3=0;
	clrf	(0+(_M+020h))&0ffh
	line	3309
	
l39862:; BSR set to: 0

;main.c: 3309: M.ERR_BTY=0x03;
	movlw	low(03h)
	movwf	(0+(_M+022h))&0ffh
	line	3310
	
l39864:; BSR set to: 0

;main.c: 3310: PrintErr(0x03,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movlw	(03h)&0ffh
	
	call	_PrintErr
	line	3311
	
l39866:; BSR set to: 1

;main.c: 3311: ErrPTG();
	call	_ErrPTG	;wreg free
	line	3313
	
l39868:
;main.c: 3312: }
;main.c: 3313: M.RCI=4;
	movlw	low(04h)
	movlb	0	; () banked
	movwf	(0+(_M+02Bh))&0ffh
	line	3314
	
l39870:; BSR set to: 0

;main.c: 3314: StartRTS(4);
	movlw	(04h)&0ffh
	
	call	_StartRTS
	line	3315
;main.c: 3315: break;
	goto	l1609
	line	3319
	
l39872:; BSR set to: 0

;main.c: 3318: {
;main.c: 3319: if(RTS(4)<1) return;
	movlw	(04h)&0ffh
	
	call	_RTS
	iorlw	0
	btfss	status,2
	goto	u79291
	goto	u79290
u79291:
	goto	l39876
u79290:
	goto	l1609
	line	3320
	
l39876:; BSR set to: 1

;main.c: 3320: StartRTS(14);
	movlw	(0Eh)&0ffh
	
	call	_StartRTS
	line	3321
	
l39878:; BSR set to: 1

;main.c: 3321: M._prb_CIG=0;
	movlb	0	; () banked
	bcf	(0+(_M+01Ch))&0ffh,0
	line	3322
	
l39880:; BSR set to: 0

;main.c: 3322: M._RUSZ_CIAG=0;
	bcf	(0+(_M+010h))&0ffh,7
	line	3323
	
l39882:; BSR set to: 0

;main.c: 3323: M.RCI=0;
	clrf	(0+(_M+02Bh))&0ffh
	goto	l1609
	line	3253
	
l39888:; BSR set to: 0

	movf	(0+(_M+02Bh))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 5, Range of values is 0 to 4
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           16     9 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1614
	xorlw	1^0	; case 1
	skipnz
	goto	l39810
	xorlw	2^1	; case 2
	skipnz
	goto	l39830
	xorlw	3^2	; case 3
	skipnz
	goto	l39850
	xorlw	4^3	; case 4
	skipnz
	goto	l39872
	goto	l1609

	line	3328
	
l1609:
	return
	opt stack 0
GLOBAL	__end_of_RuszCiag
	__end_of_RuszCiag:
	signat	_RuszCiag,88
	global	_BlokadaL3

;; *************** function _BlokadaL3 *****************
;; Defined at:
;;		line 2345 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_StartRTM
;;		_SetL3
;;		_EndL3
;;		_RTM
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text37,class=CODE,space=0,reloc=2
global __ptext37
__ptext37:
psect	text37
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2345
	global	__size_of_BlokadaL3
	__size_of_BlokadaL3	equ	__end_of_BlokadaL3-_BlokadaL3
	
_BlokadaL3:
	opt	stack 24
	line	2346
	
l39890:; BSR set to: 0

;main.c: 2346: switch(M.BL3)
	goto	l39916
	line	2350
	
l39892:; BSR set to: 0

;main.c: 2349: {
;main.c: 2350: M.BL3=1;
	movlw	low(01h)
	movwf	(0+(_M+026h))&0ffh
	line	2351
	
l39894:; BSR set to: 0

;main.c: 2351: StartRTM(2);
	movlw	(02h)&0ffh
	
	call	_StartRTM
	line	2355
	
l39896:
;main.c: 2354: {
;main.c: 2355: SetL3();
	call	_SetL3	;wreg free
	line	2356
	
l39898:; BSR set to: 1

;main.c: 2356: if((PFN.poz!=3&&!M._ZMKCOCW)||M._pob_CW||(DtKNF.tpkt==0&&DtCW._wpz_CW))
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u79301
	goto	u79300
u79301:
	goto	l39902
u79300:
	
l39900:; BSR set to: 1

	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u79311
	goto	u79310
u79311:
	goto	l1316
u79310:
	
l39902:
	movlb	0	; () banked
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u79321
	goto	u79320
u79321:
	goto	l1316
u79320:
	
l39904:; BSR set to: 0

	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+07h))&0ffh
	goto	u79331
	goto	u79330
u79331:
	goto	l39910
u79330:
	
l39906:; BSR set to: 1

	movlb	0	; () banked
	
	btfss	((_DtCW))&0ffh,3
	goto	u79341
	goto	u79340
u79341:
	goto	l39910
u79340:
	
l1316:; BSR set to: 0

	line	2358
;main.c: 2357: {
;main.c: 2358: M._BLOKUJ_3M=0;
	bcf	(0+(_M+011h))&0ffh,3
	line	2359
;main.c: 2359: M.BL3=0;
	clrf	(0+(_M+026h))&0ffh
	line	2360
	
l39908:; BSR set to: 0

;main.c: 2360: EndL3();
	call	_EndL3	;wreg free
	line	2362
	
l39910:
;main.c: 2361: }
;main.c: 2362: if(RTM(2)<3) return;
	movlw	(02h)&0ffh
	
	call	_RTM
	movwf	(??_BlokadaL3+0+0)&0ffh,c
	movlw	(03h)&0ffh
	subwf	((??_BlokadaL3+0+0)),c,w
	btfsc	status,0
	goto	u79351
	goto	u79350
u79351:
	goto	l1319
u79350:
	goto	l1320
	
l1319:; BSR set to: 1

	line	2363
;main.c: 2363: M._BLOKUJ_3M=0;
	movlb	0	; () banked
	bcf	(0+(_M+011h))&0ffh,3
	line	2364
;main.c: 2364: M.BL3=0;
	clrf	(0+(_M+026h))&0ffh
	line	2365
	
l39914:; BSR set to: 0

;main.c: 2365: EndL3();
	call	_EndL3	;wreg free
	line	2367
;main.c: 2366: }
;main.c: 2367: }
	goto	l1320
	line	2346
	
l39916:; BSR set to: 0

	movf	(0+(_M+026h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39892
	xorlw	1^0	; case 1
	skipnz
	goto	l39896
	goto	l1320

	line	2368
	
l1320:
	return
	opt stack 0
GLOBAL	__end_of_BlokadaL3
	__end_of_BlokadaL3:
	signat	_BlokadaL3,88
	global	_Blokada15S

;; *************** function _Blokada15S *****************
;; Defined at:
;;		line 2373 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;;		_RTdS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text38,class=CODE,space=0,reloc=2
global __ptext38
__ptext38:
psect	text38
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2373
	global	__size_of_Blokada15S
	__size_of_Blokada15S	equ	__end_of_Blokada15S-_Blokada15S
	
_Blokada15S:
	opt	stack 25
	line	2374
	
l39918:; BSR set to: 0

;main.c: 2374: switch(M.BL15)
	goto	l39934
	line	2378
	
l39920:; BSR set to: 0

;main.c: 2377: {
;main.c: 2378: M.BL15=1;
	movlw	low(01h)
	movwf	(0+(_M+027h))&0ffh
	line	2379
	
l39922:; BSR set to: 0

;main.c: 2379: StartRTdS(3);
	movlw	(03h)&0ffh
	
	call	_StartRTdS
	line	2383
	
l39924:
;main.c: 2382: {
;main.c: 2383: if((RTdS(3)>1)&&(PFN.poz!=3))
	movlw	(03h)&0ffh
	
	call	_RTdS
	movwf	(??_Blokada15S+0+0)&0ffh,c
	movlw	(02h)&0ffh
	subwf	((??_Blokada15S+0+0)),c,w
	btfss	status,0
	goto	u79361
	goto	u79360
u79361:
	goto	l39930
u79360:
	
l39926:; BSR set to: 1

	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u79371
	goto	u79370
u79371:
	goto	l39930
u79370:
	line	2385
	
l39928:; BSR set to: 1

;main.c: 2384: {
;main.c: 2385: M._BLOKUJ_15S=0;
	movlb	0	; () banked
	bcf	(0+(_M+011h))&0ffh,4
	line	2386
;main.c: 2386: M.BL15=0;
	clrf	(0+(_M+027h))&0ffh
	line	2388
	
l39930:
;main.c: 2387: }
;main.c: 2388: if(RTdS(3)<150) return;
	movlw	(03h)&0ffh
	
	call	_RTdS
	movwf	(??_Blokada15S+0+0)&0ffh,c
	movlw	(096h)&0ffh
	subwf	((??_Blokada15S+0+0)),c,w
	btfsc	status,0
	goto	u79381
	goto	u79380
u79381:
	goto	l1328
u79380:
	goto	l1329
	
l1328:; BSR set to: 1

	line	2389
;main.c: 2389: M._BLOKUJ_15S=0;
	movlb	0	; () banked
	bcf	(0+(_M+011h))&0ffh,4
	line	2390
;main.c: 2390: M.BL15=0;
	clrf	(0+(_M+027h))&0ffh
	line	2392
;main.c: 2391: }
;main.c: 2392: }
	goto	l1329
	line	2374
	
l39934:; BSR set to: 0

	movf	(0+(_M+027h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39920
	xorlw	1^0	; case 1
	skipnz
	goto	l39924
	goto	l1329

	line	2393
	
l1329:
	return
	opt stack 0
GLOBAL	__end_of_Blokada15S
	__end_of_Blokada15S:
	signat	_Blokada15S,88
	global	_Moduluj

;; *************** function _Moduluj *****************
;; Defined at:
;;		line 26 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    7
;; This function calls:
;;		_StartCO
;;		_ReadDataCO
;;		_ModToCO
;;		_ModZgCO
;;		_ModDkCO
;;		_RTdS
;;		_StartRTdS
;;		_IncConstCOCW
;;		_IncMaxCO
;;		_ModPruCO
;;		_ModPrzCO
;;		_PropOPT
;;		_StartMCW
;;		_ReadDataCW
;;		_ModToCW
;;		_ModZgCW
;;		_ModDkCW
;;		_IncMaxCW
;;		_ModPruCW
;;		_ModPrzCW
;;		_PropCO
;;		_StartCO2
;;		_ReadDataCO2
;;		_ModToCO2
;;		_IncConstCO2
;;		_StartMCW2
;;		_ReadDataCW2
;;		_ModToCW2
;;		_ModZgCW2
;;		_ModDkCW2
;;		_IncConstCW2
;;		_IncMaxCW2
;;		_ModPruCW2
;;		_ModPrzCW2
;;		_PropCO2
;;		_StartMCO3
;;		_ModToCO3
;;		_ModToCW3
;;		_StartCO4
;;		_ReadDataCO4
;;		_ModToCO4
;;		_IncConstCOCW4
;;		_StartMCW4
;;		_ReadDataCW4
;;		_ModToCW4
;;		_ModZgCW4
;;		_ModDkCW4
;;		_IncMaxCW4
;;		_ModPruCW4
;;		_ModPrzCW4
;;		_PropCO4
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text39,class=CODE,space=0,reloc=2
global __ptext39
__ptext39:
psect	text39
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	26
	global	__size_of_Moduluj
	__size_of_Moduluj	equ	__end_of_Moduluj-_Moduluj
	
_Moduluj:
	opt	stack 23
	line	30
	
l39936:; BSR set to: 0

;rgl.c: 30: switch(DtKNF.tpkt)
	goto	l40192
	line	34
	
l39938:; BSR set to: 1

;rgl.c: 33: {
;rgl.c: 34: if(M._pob_CO)
	movlb	0	; () banked
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u79391
	goto	u79390
u79391:
	goto	l39962
u79390:
	line	36
	
l39940:; BSR set to: 0

;rgl.c: 35: {
;rgl.c: 36: PWM.MAXPWM=PWM.MMAXCO;
	movff	0+(_PWM+01Dh),0+(_PWM+021h)	;volatile
	line	37
;rgl.c: 37: PWM.MINPWM=PWM.MDMOD;
	movff	0+(_PWM+09h),0+(_PWM+020h)	;volatile
	line	38
	
l39942:; BSR set to: 0

;rgl.c: 38: StartCO();
	call	_StartCO	;wreg free
	line	39
	
l39944:; BSR set to: 0

;rgl.c: 39: ReadDataCO();
	call	_ReadDataCO	;wreg free
	line	40
	
l39946:; BSR set to: 0

;rgl.c: 40: ModToCO();
	call	_ModToCO	;wreg free
	line	41
	
l39948:; BSR set to: 0

;rgl.c: 41: ModZgCO();
	call	_ModZgCO	;wreg free
	line	42
	
l39950:
;rgl.c: 42: ModDkCO();
	call	_ModDkCO	;wreg free
	line	43
;rgl.c: 43: if(RTdS(2)>10)
	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_Moduluj+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_Moduluj+0+0))&0ffh,w
	btfss	status,0
	goto	u79401
	goto	u79400
u79401:
	goto	l39958
u79400:
	line	45
	
l39952:; BSR set to: 1

;rgl.c: 44: {
;rgl.c: 45: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	46
	
l39954:; BSR set to: 1

;rgl.c: 46: IncConstCOCW();
	call	_IncConstCOCW	;wreg free
	line	47
	
l39956:; BSR set to: 1

;rgl.c: 47: IncMaxCO();
	call	_IncMaxCO	;wreg free
	line	48
;rgl.c: 48: ModPruCO();
	call	_ModPruCO	;wreg free
	line	50
	
l39958:
;rgl.c: 49: }
;rgl.c: 50: ModPrzCO();
	call	_ModPrzCO	;wreg free
	line	51
	
l39960:
;rgl.c: 51: PropOPT();
	call	_PropOPT	;wreg free
	line	52
;rgl.c: 52: }
	goto	l2823
	line	54
	
l39962:; BSR set to: 0

;rgl.c: 53: else
;rgl.c: 54: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u79411
	goto	u79410
u79411:
	goto	l2823
u79410:
	line	56
	
l39964:; BSR set to: 0

;rgl.c: 55: {
;rgl.c: 56: StartMCW();
	call	_StartMCW	;wreg free
	line	57
	
l39966:; BSR set to: 0

;rgl.c: 57: ReadDataCW();
	call	_ReadDataCW	;wreg free
	line	58
	
l39968:; BSR set to: 0

;rgl.c: 58: ModToCW();
	call	_ModToCW	;wreg free
	line	59
	
l39970:; BSR set to: 0

;rgl.c: 59: ModZgCW();
	call	_ModZgCW	;wreg free
	line	60
	
l39972:
;rgl.c: 60: ModDkCW();
	call	_ModDkCW	;wreg free
	line	61
	
l39974:
;rgl.c: 61: if(RTdS(2)>10)
	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_Moduluj+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_Moduluj+0+0))&0ffh,w
	btfss	status,0
	goto	u79421
	goto	u79420
u79421:
	goto	l39992
u79420:
	line	63
	
l39976:; BSR set to: 1

;rgl.c: 62: {
;rgl.c: 63: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	64
	
l39978:; BSR set to: 1

;rgl.c: 64: if(tmr<0xff) tmr++;
	incf	((c:_tmr)),c,w

	btfsc	status,2
	goto	u79431
	goto	u79430
u79431:
	goto	l39982
u79430:
	
l39980:; BSR set to: 1

	incf	((c:_tmr)),c
	line	65
	
l39982:; BSR set to: 1

;rgl.c: 65: if(tmr2<0xff) tmr2++;
	incf	((_tmr2))&0ffh,w

	btfsc	status,2
	goto	u79441
	goto	u79440
u79441:
	goto	l39986
u79440:
	
l39984:; BSR set to: 1

	incf	((_tmr2))&0ffh
	line	66
	
l39986:; BSR set to: 1

;rgl.c: 66: IncConstCOCW();
	call	_IncConstCOCW	;wreg free
	line	67
	
l39988:; BSR set to: 1

;rgl.c: 67: IncMaxCW();
	call	_IncMaxCW	;wreg free
	line	68
	
l39990:; BSR set to: 0

;rgl.c: 68: ModPruCW();
	call	_ModPruCW	;wreg free
	line	70
	
l39992:
;rgl.c: 69: }
;rgl.c: 70: ModPrzCW();
	call	_ModPrzCW	;wreg free
	line	71
	
l39994:
;rgl.c: 71: PropCO();
	call	_PropCO	;wreg free
	goto	l2823
	line	77
	
l39996:; BSR set to: 1

;rgl.c: 76: {
;rgl.c: 77: if(M._pob_CO)
	movlb	0	; () banked
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u79451
	goto	u79450
u79451:
	goto	l40020
u79450:
	line	79
	
l39998:; BSR set to: 0

;rgl.c: 78: {
;rgl.c: 79: PWM.MAXPWM=PWM.MMAXCO;
	movff	0+(_PWM+01Dh),0+(_PWM+021h)	;volatile
	line	80
;rgl.c: 80: PWM.MINPWM=PWM.MDMOD;
	movff	0+(_PWM+09h),0+(_PWM+020h)	;volatile
	line	81
	
l40000:; BSR set to: 0

;rgl.c: 81: StartCO2();
	call	_StartCO2	;wreg free
	line	82
	
l40002:; BSR set to: 0

;rgl.c: 82: ReadDataCO2();
	call	_ReadDataCO2	;wreg free
	line	83
	
l40004:; BSR set to: 0

;rgl.c: 83: ModToCO2();
	call	_ModToCO2	;wreg free
	line	84
	
l40006:; BSR set to: 0

;rgl.c: 84: ModZgCO();
	call	_ModZgCO	;wreg free
	line	85
	
l40008:
;rgl.c: 85: ModDkCO();
	call	_ModDkCO	;wreg free
	line	86
;rgl.c: 86: if(RTdS(2)>10)
	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_Moduluj+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_Moduluj+0+0))&0ffh,w
	btfss	status,0
	goto	u79461
	goto	u79460
u79461:
	goto	l39958
u79460:
	line	88
	
l40010:; BSR set to: 1

;rgl.c: 87: {
;rgl.c: 88: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	89
	
l40012:; BSR set to: 1

;rgl.c: 89: IncConstCO2();
	call	_IncConstCO2	;wreg free
	goto	l39956
	line	98
	
l40020:; BSR set to: 0

;rgl.c: 97: else
;rgl.c: 98: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u79471
	goto	u79470
u79471:
	goto	l2823
u79470:
	line	100
	
l40022:; BSR set to: 0

;rgl.c: 99: {
;rgl.c: 100: StartMCW2();
	call	_StartMCW2	;wreg free
	line	101
	
l40024:; BSR set to: 0

;rgl.c: 101: ReadDataCW2();
	call	_ReadDataCW2	;wreg free
	line	102
	
l40026:; BSR set to: 0

;rgl.c: 102: ModToCW2();
	call	_ModToCW2	;wreg free
	line	103
	
l40028:; BSR set to: 0

;rgl.c: 103: ModZgCW2();
	call	_ModZgCW2	;wreg free
	line	104
	
l40030:
;rgl.c: 104: ModDkCW2();
	call	_ModDkCW2	;wreg free
	line	105
;rgl.c: 105: if(RTdS(2)>10)
	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_Moduluj+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_Moduluj+0+0))&0ffh,w
	btfss	status,0
	goto	u79481
	goto	u79480
u79481:
	goto	l40040
u79480:
	line	107
	
l40032:; BSR set to: 1

;rgl.c: 106: {
;rgl.c: 107: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	108
	
l40034:; BSR set to: 1

;rgl.c: 108: IncConstCW2();
	call	_IncConstCW2	;wreg free
	line	109
	
l40036:; BSR set to: 1

;rgl.c: 109: IncMaxCW2();
	call	_IncMaxCW2	;wreg free
	line	110
	
l40038:
;rgl.c: 110: ModPruCW2();
	call	_ModPruCW2	;wreg free
	line	112
	
l40040:
;rgl.c: 111: }
;rgl.c: 112: ModPrzCW2();
	call	_ModPrzCW2	;wreg free
	line	113
	
l40042:
;rgl.c: 113: PropCO2();
	call	_PropCO2	;wreg free
	goto	l2823
	line	119
	
l40044:; BSR set to: 1

;rgl.c: 118: {
;rgl.c: 119: if(M._pob_CO)
	movlb	0	; () banked
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u79491
	goto	u79490
u79491:
	goto	l40068
u79490:
	line	121
	
l40046:; BSR set to: 0

;rgl.c: 120: {
;rgl.c: 121: PWM.MAXPWM=PWM.MMAXCO;
	movff	0+(_PWM+01Dh),0+(_PWM+021h)	;volatile
	line	122
;rgl.c: 122: PWM.MINPWM=PWM.MDMOD;
	movff	0+(_PWM+09h),0+(_PWM+020h)	;volatile
	line	123
	
l40048:; BSR set to: 0

;rgl.c: 123: StartMCO3();
	call	_StartMCO3	;wreg free
	line	124
	
l40050:; BSR set to: 0

;rgl.c: 124: ReadDataCO2();
	call	_ReadDataCO2	;wreg free
	line	125
	
l40052:; BSR set to: 0

;rgl.c: 125: ModToCO3();
	call	_ModToCO3	;wreg free
	line	126
	
l40054:; BSR set to: 0

;rgl.c: 126: ModZgCO();
	call	_ModZgCO	;wreg free
	line	127
	
l40056:
;rgl.c: 127: ModDkCO();
	call	_ModDkCO	;wreg free
	line	128
;rgl.c: 128: if(RTdS(2)>10)
	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_Moduluj+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_Moduluj+0+0))&0ffh,w
	btfss	status,0
	goto	u79501
	goto	u79500
u79501:
	goto	l39958
u79500:
	line	130
	
l40058:; BSR set to: 1

;rgl.c: 129: {
;rgl.c: 130: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	goto	l40012
	line	140
	
l40068:; BSR set to: 0

;rgl.c: 139: else
;rgl.c: 140: if(M._pob_CW||M._pob_AL)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u79511
	goto	u79510
u79511:
	goto	l2809
u79510:
	
l40070:; BSR set to: 0

	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfsc	status,2
	goto	u79521
	goto	u79520
u79521:
	goto	l2823
u79520:
	
l2809:; BSR set to: 0

	line	142
;rgl.c: 141: {
;rgl.c: 142: PWM.MAXPWM=PWM.MMAXCW;
	movff	0+(_PWM+01Eh),0+(_PWM+021h)	;volatile
	line	143
	
l40072:; BSR set to: 0

;rgl.c: 143: StartMCO3();
	call	_StartMCO3	;wreg free
	line	144
	
l40074:; BSR set to: 0

;rgl.c: 144: ReadDataCO2();
	call	_ReadDataCO2	;wreg free
	line	145
	
l40076:; BSR set to: 0

;rgl.c: 145: ModToCW3();
	call	_ModToCW3	;wreg free
	line	146
	
l40078:; BSR set to: 0

;rgl.c: 146: ModZgCO();
	call	_ModZgCO	;wreg free
	line	147
	
l40080:
;rgl.c: 147: ModDkCO();
	call	_ModDkCO	;wreg free
	line	148
	
l40082:
;rgl.c: 148: if(RTdS(2)>10)
	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_Moduluj+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_Moduluj+0+0))&0ffh,w
	btfss	status,0
	goto	u79531
	goto	u79530
u79531:
	goto	l39958
u79530:
	line	150
	
l40084:; BSR set to: 1

;rgl.c: 149: {
;rgl.c: 150: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	goto	l40012
	line	163
	
l40094:; BSR set to: 1

;rgl.c: 162: {
;rgl.c: 163: if(M._pob_CO)
	movlb	0	; () banked
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u79541
	goto	u79540
u79541:
	goto	l40118
u79540:
	line	165
	
l40096:; BSR set to: 0

;rgl.c: 164: {
;rgl.c: 165: PWM.MAXPWM=PWM.MMAXCO;
	movff	0+(_PWM+01Dh),0+(_PWM+021h)	;volatile
	line	166
;rgl.c: 166: PWM.MINPWM=PWM.MDMOD;
	movff	0+(_PWM+09h),0+(_PWM+020h)	;volatile
	line	167
	
l40098:; BSR set to: 0

;rgl.c: 167: StartCO4();
	call	_StartCO4	;wreg free
	line	168
	
l40100:; BSR set to: 0

;rgl.c: 168: ReadDataCO4();
	call	_ReadDataCO4	;wreg free
	line	169
	
l40102:; BSR set to: 0

;rgl.c: 169: ModToCO4();
	call	_ModToCO4	;wreg free
	line	170
	
l40104:; BSR set to: 0

;rgl.c: 170: ModZgCO();
	call	_ModZgCO	;wreg free
	line	171
	
l40106:
;rgl.c: 171: ModDkCO();
	call	_ModDkCO	;wreg free
	line	172
;rgl.c: 172: if(RTdS(2)>10)
	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_Moduluj+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_Moduluj+0+0))&0ffh,w
	btfss	status,0
	goto	u79551
	goto	u79550
u79551:
	goto	l39958
u79550:
	line	174
	
l40108:; BSR set to: 1

;rgl.c: 173: {
;rgl.c: 174: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	175
	
l40110:; BSR set to: 1

;rgl.c: 175: IncConstCOCW4();
	call	_IncConstCOCW4	;wreg free
	goto	l39956
	line	183
	
l40118:; BSR set to: 0

;rgl.c: 182: else
;rgl.c: 183: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u79561
	goto	u79560
u79561:
	goto	l2823
u79560:
	line	185
	
l40120:; BSR set to: 0

;rgl.c: 184: {
;rgl.c: 185: StartMCW4();
	call	_StartMCW4	;wreg free
	line	186
	
l40122:; BSR set to: 0

;rgl.c: 186: ReadDataCW4();
	call	_ReadDataCW4	;wreg free
	line	187
	
l40124:; BSR set to: 0

;rgl.c: 187: ModToCW4();
	call	_ModToCW4	;wreg free
	line	188
	
l40126:; BSR set to: 0

;rgl.c: 188: ModZgCW4();
	call	_ModZgCW4	;wreg free
	line	189
	
l40128:
;rgl.c: 189: ModDkCW4();
	call	_ModDkCW4	;wreg free
	line	190
;rgl.c: 190: if(RTdS(2)>10)
	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_Moduluj+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_Moduluj+0+0))&0ffh,w
	btfss	status,0
	goto	u79571
	goto	u79570
u79571:
	goto	l40138
u79570:
	line	192
	
l40130:; BSR set to: 1

;rgl.c: 191: {
;rgl.c: 192: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	193
	
l40132:; BSR set to: 1

;rgl.c: 193: IncConstCOCW4();
	call	_IncConstCOCW4	;wreg free
	line	194
	
l40134:; BSR set to: 1

;rgl.c: 194: IncMaxCW4();
	call	_IncMaxCW4	;wreg free
	line	195
	
l40136:
;rgl.c: 195: ModPruCW4();
	call	_ModPruCW4	;wreg free
	line	197
	
l40138:
;rgl.c: 196: }
;rgl.c: 197: ModPrzCW4();
	call	_ModPrzCW4	;wreg free
	line	198
	
l40140:
;rgl.c: 198: PropCO4();
	call	_PropCO4	;wreg free
	goto	l2823
	line	204
	
l40142:; BSR set to: 1

;rgl.c: 203: {
;rgl.c: 204: if(M._pob_CO)
	movlb	0	; () banked
	movf	(1+(_M+0Ah))&0ffh,w
	iorwf (0+(_M+0Ah))&0ffh,w

	btfsc	status,2
	goto	u79581
	goto	u79580
u79581:
	goto	l40166
u79580:
	line	206
	
l40144:; BSR set to: 0

;rgl.c: 205: {
;rgl.c: 206: PWM.MAXPWM=PWM.MMAXCO;
	movff	0+(_PWM+01Dh),0+(_PWM+021h)	;volatile
	line	207
;rgl.c: 207: PWM.MINPWM=PWM.MDMOD;
	movff	0+(_PWM+09h),0+(_PWM+020h)	;volatile
	line	208
	
l40146:; BSR set to: 0

;rgl.c: 208: StartCO2();
	call	_StartCO2	;wreg free
	line	209
	
l40148:; BSR set to: 0

;rgl.c: 209: ReadDataCO2();
	call	_ReadDataCO2	;wreg free
	line	210
	
l40150:; BSR set to: 0

;rgl.c: 210: ModToCO2();
	call	_ModToCO2	;wreg free
	line	211
	
l40152:; BSR set to: 0

;rgl.c: 211: ModZgCO();
	call	_ModZgCO	;wreg free
	line	212
	
l40154:
;rgl.c: 212: ModDkCO();
	call	_ModDkCO	;wreg free
	line	213
;rgl.c: 213: if(RTdS(2)>10)
	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_Moduluj+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_Moduluj+0+0))&0ffh,w
	btfss	status,0
	goto	u79591
	goto	u79590
u79591:
	goto	l39958
u79590:
	line	215
	
l40156:; BSR set to: 1

;rgl.c: 214: {
;rgl.c: 215: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	goto	l40012
	line	225
	
l40166:; BSR set to: 0

;rgl.c: 224: else
;rgl.c: 225: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u79601
	goto	u79600
u79601:
	goto	l2823
u79600:
	line	227
	
l40168:; BSR set to: 0

;rgl.c: 226: {
;rgl.c: 227: StartMCW2();
	call	_StartMCW2	;wreg free
	line	228
	
l40170:; BSR set to: 0

;rgl.c: 228: ReadDataCW2();
	call	_ReadDataCW2	;wreg free
	line	229
	
l40172:; BSR set to: 0

;rgl.c: 229: ModToCW2();
	call	_ModToCW2	;wreg free
	line	230
	
l40174:; BSR set to: 0

;rgl.c: 230: ModZgCW2();
	call	_ModZgCW2	;wreg free
	line	231
	
l40176:
;rgl.c: 231: ModDkCW2();
	call	_ModDkCW2	;wreg free
	line	232
;rgl.c: 232: if(RTdS(2)>10)
	movlw	(02h)&0ffh
	
	call	_RTdS
	movwf	(??_Moduluj+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_Moduluj+0+0))&0ffh,w
	btfss	status,0
	goto	u79611
	goto	u79610
u79611:
	goto	l40040
u79610:
	line	234
	
l40178:; BSR set to: 1

;rgl.c: 233: {
;rgl.c: 234: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	goto	l40034
	line	30
	
l40192:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l40044
	xorlw	1^0	; case 1
	skipnz
	goto	l39938
	xorlw	2^1	; case 2
	skipnz
	goto	l40094
	xorlw	3^2	; case 3
	skipnz
	goto	l39996
	goto	l40142

	line	245
	
l2823:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_Moduluj
	__end_of_Moduluj:
	signat	_Moduluj,88
	global	_DetekcjaPrzeplywuWG

;; *************** function _DetekcjaPrzeplywuWG *****************
;; Defined at:
;;		line 2968 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  prz             1   33[COMRAM] unsigned char 
;;  pmp             1   32[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RdPrt
;;		_StartRTS
;;		_RTS
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text40,class=CODE,space=0,reloc=2
global __ptext40
__ptext40:
psect	text40
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2968
	global	__size_of_DetekcjaPrzeplywuWG
	__size_of_DetekcjaPrzeplywuWG	equ	__end_of_DetekcjaPrzeplywuWG-_DetekcjaPrzeplywuWG
	
_DetekcjaPrzeplywuWG:; BSR set to: 0

	opt	stack 25
	line	2971
	
l40194:; BSR set to: 1

;main.c: 2969: unsigned char pmp,prz;
;main.c: 2971: pmp=(PORTDbits.RD2)?1:0;
	
	btfsc	((c:3971)),c,2	;volatile
	goto	u79621
	goto	u79620
u79621:
	movlw	1
	goto	u79626
u79620:
	movlw	0
u79626:
	movwf	((c:DetekcjaPrzeplywuWG@pmp)),c
	line	2972
	
l40196:; BSR set to: 1

;main.c: 2972: prz=(RdPrt(1))?1:0;
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u79631
	goto	u79630
u79631:
	movlw	1
	goto	u79636
u79630:
	movlw	0
u79636:
	movwf	((c:DetekcjaPrzeplywuWG@prz)),c
	line	2974
	
l40198:; BSR set to: 0

;main.c: 2974: if(pmp)
	movf	((c:DetekcjaPrzeplywuWG@pmp)),c,w
	btfsc	status,2
	goto	u79641
	goto	u79640
u79641:
	goto	l40214
u79640:
	line	2976
	
l40200:; BSR set to: 0

;main.c: 2975: {
;main.c: 2976: if(!prz&&!M._DE_PMP)
	tstfsz	((c:DetekcjaPrzeplywuWG@prz)),c
	goto	u79651
	goto	u79650
u79651:
	goto	l1520
u79650:
	
l40202:; BSR set to: 0

	
	btfsc	(0+(_M+01Ch))&0ffh,2
	goto	u79661
	goto	u79660
u79661:
	goto	l1520
u79660:
	line	2978
	
l40204:; BSR set to: 0

;main.c: 2977: {
;main.c: 2978: M._DE_PMP=1;
	bsf	(0+(_M+01Ch))&0ffh,2
	line	2979
;main.c: 2979: M.DPR=0;
	clrf	(0+(_M+032h))&0ffh
	line	2980
	
l1520:; BSR set to: 0

	line	2981
;main.c: 2980: }
;main.c: 2981: if(M._DE_PMP)
	
	btfss	(0+(_M+01Ch))&0ffh,2
	goto	u79671
	goto	u79670
u79671:
	goto	l1526
u79670:
	goto	l40222
	line	2987
	
l40208:; BSR set to: 0

;main.c: 2986: {
;main.c: 2987: StartRTS(12);
	movlw	(0Ch)&0ffh
	
	call	_StartRTS
	line	2988
	
l40210:; BSR set to: 1

;main.c: 2988: M.DPR=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	(0+(_M+032h))&0ffh
	line	2992
	
l40212:; BSR set to: 0

;main.c: 2991: {
;main.c: 2992: if(prz)
	movf	((c:DetekcjaPrzeplywuWG@prz)),c,w
	btfsc	status,2
	goto	u79681
	goto	u79680
u79681:
	goto	l40216
u79680:
	line	2994
	
l40214:; BSR set to: 0

;main.c: 2993: {
;main.c: 2994: M._DE_PMP=0;
	bcf	(0+(_M+01Ch))&0ffh,2
	line	2995
;main.c: 2995: M.DPR=0;
	clrf	(0+(_M+032h))&0ffh
	line	2996
;main.c: 2996: return;
	goto	l1526
	line	2998
	
l40216:; BSR set to: 0

;main.c: 2997: }
;main.c: 2998: if(RTS(12)<3) return;
	movlw	(0Ch)&0ffh
	
	call	_RTS
	movwf	(??_DetekcjaPrzeplywuWG+0+0)&0ffh,c
	movlw	(03h)&0ffh
	subwf	((??_DetekcjaPrzeplywuWG+0+0)),c,w
	btfsc	status,0
	goto	u79691
	goto	u79690
u79691:
	goto	l1527
u79690:
	goto	l1526
	
l1527:; BSR set to: 1

	line	2999
;main.c: 2999: if(!M._RUSZ_POMPE)
	movlb	0	; () banked
	
	btfsc	(0+(_M+011h))&0ffh,2
	goto	u79701
	goto	u79700
u79701:
	goto	l40214
u79700:
	line	3001
	
l40220:; BSR set to: 0

;main.c: 3000: {
;main.c: 3001: M.RPR=0;
	clrf	(0+(_M+029h))&0ffh
	line	3002
;main.c: 3002: M._RUSZ_POMPE=1;
	bsf	(0+(_M+011h))&0ffh,2
	goto	l40214
	line	2983
	
l40222:; BSR set to: 0

	movf	(0+(_M+032h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l40208
	xorlw	1^0	; case 1
	skipnz
	goto	l40212
	goto	l1526

	line	3015
	
l1526:
	return
	opt stack 0
GLOBAL	__end_of_DetekcjaPrzeplywuWG
	__end_of_DetekcjaPrzeplywuWG:
	signat	_DetekcjaPrzeplywuWG,88
	global	_OczekujNaPrzeplywWG

;; *************** function _OczekujNaPrzeplywWG *****************
;; Defined at:
;;		line 3020 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  prz             1   12[BANK0 ] unsigned char 
;;  pmp             1   11[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_RdPrt
;;		_StartRTS
;;		_RTS
;;		_PrintErr
;;		_ErrPTG
;; This function is called by:
;;		_main
;; This function uses a non-reentrant model
;;
psect	text41,class=CODE,space=0,reloc=2
global __ptext41
__ptext41:
psect	text41
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3020
	global	__size_of_OczekujNaPrzeplywWG
	__size_of_OczekujNaPrzeplywWG	equ	__end_of_OczekujNaPrzeplywWG-_OczekujNaPrzeplywWG
	
_OczekujNaPrzeplywWG:
	opt	stack 21
	line	3023
	
l40224:; BSR set to: 0

;main.c: 3021: unsigned char pmp,prz;
;main.c: 3023: pmp=(PORTDbits.RD2)?1:0;
	
	btfsc	((c:3971)),c,2	;volatile
	goto	u79711
	goto	u79710
u79711:
	movlw	1
	goto	u79716
u79710:
	movlw	0
u79716:
	movwf	((OczekujNaPrzeplywWG@pmp))&0ffh
	line	3024
	
l40226:; BSR set to: 0

;main.c: 3024: prz=(RdPrt(1))?1:0;
	movlw	(01h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u79721
	goto	u79720
u79721:
	movlw	1
	goto	u79726
u79720:
	movlw	0
u79726:
	movwf	((OczekujNaPrzeplywWG@prz))&0ffh
	line	3026
;main.c: 3026: switch(M.RPR)
	goto	l40250
	line	3030
	
l40228:; BSR set to: 0

;main.c: 3029: {
;main.c: 3030: M.RPR=1;
	movlw	low(01h)
	movwf	(0+(_M+029h))&0ffh
	line	3031
	
l40230:; BSR set to: 0

;main.c: 3031: M._prb_PRZ=1;
	bsf	(0+(_M+01Ch))&0ffh,1
	line	3032
	
l40232:; BSR set to: 0

;main.c: 3032: StartRTS(13);
	movlw	(0Dh)&0ffh
	
	call	_StartRTS
	line	3036
	
l40234:
;main.c: 3035: {
;main.c: 3036: if(prz&&pmp)
	movlb	0	; () banked
	movf	((OczekujNaPrzeplywWG@prz))&0ffh,w
	btfsc	status,2
	goto	u79731
	goto	u79730
u79731:
	goto	l40240
u79730:
	
l40236:; BSR set to: 0

	movf	((OczekujNaPrzeplywWG@pmp))&0ffh,w
	btfsc	status,2
	goto	u79741
	goto	u79740
u79741:
	goto	l40240
u79740:
	line	3038
	
l40238:; BSR set to: 0

;main.c: 3037: {
;main.c: 3038: M.RPR=0;
	clrf	(0+(_M+029h))&0ffh
	line	3039
;main.c: 3039: M._RUSZ_POMPE=0;
	bcf	(0+(_M+011h))&0ffh,2
	line	3040
;main.c: 3040: M._prb_PRZ=0;
	bcf	(0+(_M+01Ch))&0ffh,1
	line	3041
;main.c: 3041: return;
	goto	l1537
	line	3043
	
l40240:; BSR set to: 0

;main.c: 3042: }
;main.c: 3043: if(RTS(13)<240) return;
	movlw	(0Dh)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_OczekujNaPrzeplywWG+0+0)&0ffh
	movlw	(0F0h)&0ffh
	subwf	((??_OczekujNaPrzeplywWG+0+0))&0ffh,w
	btfsc	status,0
	goto	u79751
	goto	u79750
u79751:
	goto	l1538
u79750:
	goto	l1537
	
l1538:; BSR set to: 0

	line	3044
;main.c: 3044: M._RUSZ_POMPE=0;
	bcf	(0+(_M+011h))&0ffh,2
	line	3045
	
l40244:; BSR set to: 0

;main.c: 3045: M.ERR_BTY=0x05;
	movlw	low(05h)
	movwf	(0+(_M+022h))&0ffh
	line	3046
	
l40246:; BSR set to: 0

;main.c: 3046: PrintErr(0x05,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movlw	(05h)&0ffh
	
	call	_PrintErr
	line	3047
	
l40248:; BSR set to: 1

;main.c: 3047: ErrPTG();
	call	_ErrPTG	;wreg free
	line	3049
;main.c: 3048: }
;main.c: 3049: }
	goto	l1537
	line	3026
	
l40250:; BSR set to: 0

	movf	(0+(_M+029h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l40228
	xorlw	1^0	; case 1
	skipnz
	goto	l40234
	goto	l1537

	line	3050
	
l1537:
	return
	opt stack 0
GLOBAL	__end_of_OczekujNaPrzeplywWG
	__end_of_OczekujNaPrzeplywWG:
	signat	_OczekujNaPrzeplywWG,88
	global	_RTM

;; *************** function _RTM *****************
;; Defined at:
;;		line 91 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecyzjaAntyLeg
;;		_FunkcjaSerwisowa
;;		_BlokadaL3
;;		_RuszCiag
;;		_ReloadCiag
;; This function uses a non-reentrant model
;;
psect	text42,class=CODE,space=0,reloc=2
global __ptext42
__ptext42:
psect	text42
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
	line	91
	global	__size_of_RTM
	__size_of_RTM	equ	__end_of_RTM-_RTM
	
_RTM:
	opt	stack 25
;RTM@Index stored from wreg
	movff	wreg,(c:RTM@Index)
	line	92
	
l32408:
;rtimer.c: 92: if (Index>7-1) asm("RESET");
	movlw	(07h-1)
	cpfsgt	((c:RTM@Index)),c
	goto	u59971
	goto	u59970
u59971:
	goto	l32412
u59970:
	
l32410:
# 92 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
RESET ;# 
psect	text42
	line	93
	
l32412:
;rtimer.c: 93: return Mn[Index].M;
	movf	((c:RTM@Index)),c,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_Mn+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Mn+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	line	94
	
l3694:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RTM
	__end_of_RTM:
	signat	_RTM,4217
	global	_StartRTM

;; *************** function _StartRTM *****************
;; Defined at:
;;		line 85 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecyzjaAntyLeg
;;		_FunkcjaSerwisowa
;;		_BlokadaL3
;;		_RuszCiag
;; This function uses a non-reentrant model
;;
psect	text43,class=CODE,space=0,reloc=2
global __ptext43
__ptext43:
psect	text43
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
	line	85
	global	__size_of_StartRTM
	__size_of_StartRTM	equ	__end_of_StartRTM-_StartRTM
	
_StartRTM:; BSR set to: 1

	opt	stack 25
;StartRTM@Index stored from wreg
	movff	wreg,(c:StartRTM@Index)
	line	86
	
l32424:
;rtimer.c: 86: if (Index>7-1) asm("RESET");
	movlw	(07h-1)
	cpfsgt	((c:StartRTM@Index)),c
	goto	u59991
	goto	u59990
u59991:
	goto	l32428
u59990:
	
l32426:
# 86 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
RESET ;# 
psect	text43
	line	87
	
l32428:
;rtimer.c: 87: Mn[Index].S=0;
	movf	((c:StartRTM@Index)),c,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_Mn)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Mn)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	88
;rtimer.c: 88: Mn[Index].M=0;
	movf	((c:StartRTM@Index)),c,w
	mullw	02h
	movlw	low(_Mn+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Mn+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	89
	
l3690:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_StartRTM
	__end_of_StartRTM:
	signat	_StartRTM,4216
	global	_NastawaCOCW

;; *************** function _NastawaCOCW *****************
;; Defined at:
;;		line 828 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;  one             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  one             1    0[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : C/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    8
;; This function calls:
;;		_StartRTdS
;;		_EndNst
;;		_PrintNstCW
;;		_PrintNstCO
;;		_RTdS
;;		_RdPrt
;;		_ReadParam
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text44,class=CODE,space=0,reloc=2
global __ptext44
__ptext44:
psect	text44
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	828
	global	__size_of_NastawaCOCW
	__size_of_NastawaCOCW	equ	__end_of_NastawaCOCW-_NastawaCOCW
	
_NastawaCOCW:; BSR set to: 1

	opt	stack 21
	line	832
	
l40252:
;main.c: 829: static unsigned char obg_cw=0,obg_co=0,zmn2=0,zmn3=0,pcw;
;main.c: 832: if(PFN._ofnserw||PFN._set_fnserw||PFN._oaleg||PFN._set_aleg)
	movlb	1	; () banked
	
	btfsc	(0+(_PFN+03h))&0ffh,7
	goto	u79761
	goto	u79760
u79761:
	goto	l748
u79760:
	
l40254:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,4
	goto	u79771
	goto	u79770
u79771:
	goto	l748
u79770:
	
l40256:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,0
	goto	u79781
	goto	u79780
u79781:
	goto	l748
u79780:
	
l40258:; BSR set to: 1

	
	btfss	(0+(_PFN+01h))&0ffh,5
	goto	u79791
	goto	u79790
u79791:
	goto	l746
u79790:
	
l748:; BSR set to: 1

	line	834
;main.c: 833: {
;main.c: 834: PFN._set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,0
	line	835
;main.c: 835: PFN._set_nco=0;
	bcf	((_PFN))&0ffh,7
	line	836
;main.c: 836: PFN._str_nco=0;
	bcf	((_PFN))&0ffh,3
	line	837
	
l746:; BSR set to: 1

	line	839
;main.c: 837: }
;main.c: 839: if(!PFN._set_ncw&&!obg_cw&&PFN._obgCW)
	
	btfsc	(0+(_PFN+01h))&0ffh,0
	goto	u79801
	goto	u79800
u79801:
	goto	l40268
u79800:
	
l40260:; BSR set to: 1

	tstfsz	((NastawaCOCW@obg_cw))&0ffh
	goto	u79811
	goto	u79810
u79811:
	goto	l40268
u79810:
	
l40262:; BSR set to: 1

	
	btfss	(0+(_PFN+04h))&0ffh,2
	goto	u79821
	goto	u79820
u79821:
	goto	l40268
u79820:
	line	841
	
l40264:; BSR set to: 1

;main.c: 840: {
;main.c: 841: PFN._str_ncw=1;
	bsf	((_PFN))&0ffh,4
	line	842
;main.c: 842: PFN.b_str_ncw=1;
	bsf	((_PFN))&0ffh,6
	line	843
	
l40266:; BSR set to: 1

;main.c: 843: StartRTdS(9);
	movlw	(09h)&0ffh
	
	call	_StartRTdS
	line	845
	
l40268:; BSR set to: 1

;main.c: 844: }
;main.c: 845: obg_cw=PFN._obgCW;
	movlw	0
	btfsc	(0+(_PFN+04h))&0ffh,2
	movlw	1
	movwf	((NastawaCOCW@obg_cw))&0ffh
	line	846
	
l40270:; BSR set to: 1

;main.c: 846: if(PFN.b_str_ncw)
	
	btfss	((_PFN))&0ffh,6
	goto	u79831
	goto	u79830
u79831:
	goto	l40276
u79830:
	line	848
	
l40272:; BSR set to: 1

;main.c: 847: {
;main.c: 848: PFN.b_str_ncw=0;
	bcf	((_PFN))&0ffh,6
	line	849
	
l40274:; BSR set to: 1

;main.c: 849: EndNst();
	call	_EndNst	;wreg free
	line	850
;main.c: 850: PrintNstCW(PFN.PPCW);
	movf	(0+(_PFN+0Eh))&0ffh,w
	
	call	_PrintNstCW
	line	853
	
l40276:; BSR set to: 1

;main.c: 851: }
;main.c: 853: if(!PFN._set_nco&&!obg_co&&PFN._obgCO)
	
	btfsc	((_PFN))&0ffh,7
	goto	u79841
	goto	u79840
u79841:
	goto	l40286
u79840:
	
l40278:; BSR set to: 1

	tstfsz	((NastawaCOCW@obg_co))&0ffh
	goto	u79851
	goto	u79850
u79851:
	goto	l40286
u79850:
	
l40280:; BSR set to: 1

	
	btfss	(0+(_PFN+04h))&0ffh,1
	goto	u79861
	goto	u79860
u79861:
	goto	l40286
u79860:
	line	855
	
l40282:; BSR set to: 1

;main.c: 854: {
;main.c: 855: PFN._str_nco=1;
	bsf	((_PFN))&0ffh,3
	line	856
;main.c: 856: PFN.b_str_nco=1;
	bsf	((_PFN))&0ffh,5
	line	857
	
l40284:; BSR set to: 1

;main.c: 857: StartRTdS(9);
	movlw	(09h)&0ffh
	
	call	_StartRTdS
	line	859
	
l40286:; BSR set to: 1

;main.c: 858: }
;main.c: 859: obg_co=PFN._obgCO;
	movlw	0
	btfsc	(0+(_PFN+04h))&0ffh,1
	movlw	1
	movwf	((NastawaCOCW@obg_co))&0ffh
	line	860
	
l40288:; BSR set to: 1

;main.c: 860: if(PFN.b_str_nco)
	
	btfss	((_PFN))&0ffh,5
	goto	u79871
	goto	u79870
u79871:
	goto	l40302
u79870:
	line	862
	
l40290:; BSR set to: 1

;main.c: 861: {
;main.c: 862: PFN.b_str_nco=0;
	bcf	((_PFN))&0ffh,5
	line	863
	
l40292:; BSR set to: 1

;main.c: 863: EndNst();
	call	_EndNst	;wreg free
	line	864
	
l40294:; BSR set to: 1

;main.c: 864: if(PFN._ofnserw||PFN._set_fnserw)
	
	btfsc	(0+(_PFN+03h))&0ffh,7
	goto	u79881
	goto	u79880
u79881:
	goto	l755
u79880:
	
l40296:; BSR set to: 1

	
	btfss	(0+(_PFN+01h))&0ffh,4
	goto	u79891
	goto	u79890
u79891:
	goto	l40300
u79890:
	
l755:; BSR set to: 1

	line	866
;main.c: 865: {
;main.c: 866: PFN._set_nco=0;
	bcf	((_PFN))&0ffh,7
	line	867
;main.c: 867: PFN._str_nco=0;
	bcf	((_PFN))&0ffh,3
	line	868
	
l40298:; BSR set to: 1

;main.c: 868: EndNst();
	call	_EndNst	;wreg free
	line	869
;main.c: 869: }
	goto	l40302
	line	870
	
l40300:; BSR set to: 1

;main.c: 870: else PrintNstCO(PFN.PPCO);
	movf	(0+(_PFN+0Dh))&0ffh,w
	
	call	_PrintNstCO
	line	873
	
l40302:; BSR set to: 1

;main.c: 871: }
;main.c: 873: if(PFN._set_nco||PFN._set_ncw||RTdS(9)>30)
	
	btfsc	((_PFN))&0ffh,7
	goto	u79901
	goto	u79900
u79901:
	goto	l759
u79900:
	
l40304:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,0
	goto	u79911
	goto	u79910
u79911:
	goto	l759
u79910:
	
l40306:; BSR set to: 1

	movlw	(09h)&0ffh
	
	call	_RTdS
	movlb	0	; () banked
	movwf	(??_NastawaCOCW+0+0)&0ffh
	movlw	(01Fh)&0ffh
	subwf	((??_NastawaCOCW+0+0))&0ffh,w
	btfss	status,0
	goto	u79921
	goto	u79920
u79921:
	goto	l757
u79920:
	
l759:
	line	875
;main.c: 874: {
;main.c: 875: PFN._str_nco=0;
	movlb	1	; () banked
	bcf	((_PFN))&0ffh,3
	line	876
;main.c: 876: PFN._str_ncw=0;
	bcf	((_PFN))&0ffh,4
	line	877
	
l757:
	line	879
;main.c: 877: }
;main.c: 879: if(PFN._set_ncw)
	movlb	1	; () banked
	
	btfss	(0+(_PFN+01h))&0ffh,0
	goto	u79931
	goto	u79930
u79931:
	goto	l40340
u79930:
	line	881
	
l40308:; BSR set to: 1

;main.c: 880: {
;main.c: 881: pcw=PFN.PCW;
	movff	0+(_PFN+01Ch),(NastawaCOCW@pcw)
	line	882
;main.c: 882: if(!PFN._mod_ncw&&!RdPrt(24)&&!RdPrt(25))
	
	btfsc	(0+(_PFN+01h))&0ffh,3
	goto	u79941
	goto	u79940
u79941:
	goto	l761
u79940:
	
l40310:; BSR set to: 1

	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u79951
	goto	u79950
u79951:
	goto	l761
u79950:
	
l40312:; BSR set to: 0

	movlw	(019h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u79961
	goto	u79960
u79961:
	goto	l761
u79960:
	line	884
	
l40314:; BSR set to: 0

;main.c: 883: {
;main.c: 884: PFN._mod_ncw=1;
	movlb	1	; () banked
	bsf	(0+(_PFN+01h))&0ffh,3
	line	885
	
l761:
	line	886
;main.c: 885: }
;main.c: 886: if(PFN._mod_ncw) ReadParam(&PFN.PCW,&zmn,&zps,DtCW.minPCW,DtCW.maxPCW,0,1);
	movlb	1	; () banked
	
	btfss	(0+(_PFN+01h))&0ffh,3
	goto	u79971
	goto	u79970
u79971:
	goto	l40318
u79970:
	
l40316:; BSR set to: 1

	movlw	high(_PFN+01Ch)
	movlb	3	; () banked
	movwf	((?_ReadParam+1))&0ffh
	movlb	1	; () banked
	movlw	low(_PFN+01Ch)
	movlb	3	; () banked
	movwf	((?_ReadParam))&0ffh
	movlw	low((c:_zmn))
	movwf	(0+(?_ReadParam+02h))&0ffh
	movlb	1	; () banked
	movlw	high(_zps)
	movlb	3	; () banked
	movwf	(1+(?_ReadParam+03h))&0ffh
	movlb	1	; () banked
	movlw	low(_zps)
	movlb	3	; () banked
	movwf	(0+(?_ReadParam+03h))&0ffh
	movlb	0	; () banked
	movlb	3	; () banked
	movff	0+(_DtCW+05h),0+(?_ReadParam+05h)
	clrf	(1+(?_ReadParam+05h))&0ffh
	movlb	0	; () banked
	movlb	3	; () banked
	movff	0+(_DtCW+06h),0+(?_ReadParam+07h)
	clrf	(1+(?_ReadParam+07h))&0ffh
	movlw	low(0)
	movwf	(0+(?_ReadParam+09h))&0ffh
	movlw	low(01h)
	movwf	(0+(?_ReadParam+0Ah))&0ffh
	call	_ReadParam	;wreg free
	line	887
	
l40318:
;main.c: 887: if(!PFN.b_set_ncw)
	movlb	1	; () banked
	
	btfsc	(0+(_PFN+01h))&0ffh,2
	goto	u79981
	goto	u79980
u79981:
	goto	l40328
u79980:
	line	889
	
l40320:; BSR set to: 1

;main.c: 888: {
;main.c: 889: PFN.b_set_ncw=1;
	bsf	(0+(_PFN+01h))&0ffh,2
	line	890
	
l40322:; BSR set to: 1

;main.c: 890: EndNst();
	call	_EndNst	;wreg free
	line	891
	
l40324:; BSR set to: 1

;main.c: 891: zmn2=1;
	movlw	low(01h)
	movwf	((NastawaCOCW@zmn2))&0ffh
	line	892
	
l40326:; BSR set to: 1

;main.c: 892: pcw=PFN.PCW;
	movff	0+(_PFN+01Ch),(NastawaCOCW@pcw)
	line	894
	
l40328:; BSR set to: 1

;main.c: 893: }
;main.c: 894: if(zmn2||zmn)
	tstfsz	((NastawaCOCW@zmn2))&0ffh
	goto	u79991
	goto	u79990
u79991:
	goto	l40332
u79990:
	
l40330:; BSR set to: 1

	movf	((c:_zmn)),c,w
	btfsc	status,2
	goto	u80001
	goto	u80000
u80001:
	goto	l40340
u80000:
	line	896
	
l40332:; BSR set to: 1

;main.c: 895: {
;main.c: 896: PFN._newPCW=(pcw!=PFN.PCW);
	movf	((NastawaCOCW@pcw))&0ffh,w
	xorwf	(0+(_PFN+01Ch))&0ffh,w
	iorwf	(1+(_PFN+01Ch))&0ffh,w

	btfss	status,2
	goto	u80011
	goto	u80010
u80011:
	movlw	1
	goto	u80016
u80010:
	movlw	0
u80016:
	movlb	0	; () banked
	movwf	(??_NastawaCOCW+0+0)&0ffh
	rlncf	((??_NastawaCOCW+0+0))&0ffh
	rlncf	((??_NastawaCOCW+0+0))&0ffh
	movlb	1	; () banked
	movf	(0+(_PFN+02h))&0ffh,w
	movlb	0	; () banked
	xorwf	((??_NastawaCOCW+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<2)
	xorwf	((??_NastawaCOCW+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(0+(_PFN+02h))&0ffh
	line	897
	
l40334:; BSR set to: 1

;main.c: 897: zmn2=0;
	clrf	((NastawaCOCW@zmn2))&0ffh
	line	898
	
l40336:; BSR set to: 1

;main.c: 898: StartRTdS(9);
	movlw	(09h)&0ffh
	
	call	_StartRTdS
	line	899
	
l40338:; BSR set to: 1

;main.c: 899: PrintNstCW(PFN.PCW);
	movf	(0+(_PFN+01Ch))&0ffh,w
	
	call	_PrintNstCW
	line	903
	
l40340:; BSR set to: 1

;main.c: 900: }
;main.c: 901: }
;main.c: 903: if(PFN._set_nco)
	
	btfss	((_PFN))&0ffh,7
	goto	u80021
	goto	u80020
u80021:
	goto	l40370
u80020:
	line	905
	
l40342:; BSR set to: 1

;main.c: 904: {
;main.c: 905: pcw=PFN.PCO;
	movff	0+(_PFN+01Ah),(NastawaCOCW@pcw)
	line	906
	
l40344:; BSR set to: 1

;main.c: 906: ReadParam(&PFN.PCO,&zmn,&zps,DtCO.minPCO,DtCO.maxPCO,0,1);
	movlw	high(_PFN+01Ah)
	movlb	3	; () banked
	movwf	((?_ReadParam+1))&0ffh
	movlb	1	; () banked
	movlw	low(_PFN+01Ah)
	movlb	3	; () banked
	movwf	((?_ReadParam))&0ffh
	movlw	low((c:_zmn))
	movwf	(0+(?_ReadParam+02h))&0ffh
	movlb	1	; () banked
	movlw	high(_zps)
	movlb	3	; () banked
	movwf	(1+(?_ReadParam+03h))&0ffh
	movlb	1	; () banked
	movlw	low(_zps)
	movlb	3	; () banked
	movwf	(0+(?_ReadParam+03h))&0ffh
	movlb	0	; () banked
	movlb	3	; () banked
	movff	0+(_DtCO+05h),0+(?_ReadParam+05h)
	clrf	(1+(?_ReadParam+05h))&0ffh
	movlb	0	; () banked
	movlb	3	; () banked
	movff	0+(_DtCO+06h),0+(?_ReadParam+07h)
	clrf	(1+(?_ReadParam+07h))&0ffh
	movlw	low(0)
	movwf	(0+(?_ReadParam+09h))&0ffh
	movlw	low(01h)
	movwf	(0+(?_ReadParam+0Ah))&0ffh
	call	_ReadParam	;wreg free
	line	907
	
l40346:
;main.c: 907: if(!PFN.b_set_nco)
	movlb	1	; () banked
	
	btfsc	(0+(_PFN+01h))&0ffh,1
	goto	u80031
	goto	u80030
u80031:
	goto	l40358
u80030:
	line	909
	
l40348:; BSR set to: 1

;main.c: 908: {
;main.c: 909: PFN.b_set_nco=1;
	bsf	(0+(_PFN+01h))&0ffh,1
	line	910
	
l40350:; BSR set to: 1

;main.c: 910: EndNst();
	call	_EndNst	;wreg free
	line	911
	
l40352:; BSR set to: 1

;main.c: 911: zmn2=1;
	movlw	low(01h)
	movwf	((NastawaCOCW@zmn2))&0ffh
	line	912
	
l40354:; BSR set to: 1

;main.c: 912: pcw=PFN.PCO;
	movff	0+(_PFN+01Ah),(NastawaCOCW@pcw)
	line	913
	
l40356:; BSR set to: 1

;main.c: 913: PFN._newPCO=0;
	bcf	(0+(_PFN+02h))&0ffh,1
	line	915
	
l40358:; BSR set to: 1

;main.c: 914: }
;main.c: 915: if(zmn2||zmn)
	tstfsz	((NastawaCOCW@zmn2))&0ffh
	goto	u80041
	goto	u80040
u80041:
	goto	l771
u80040:
	
l40360:; BSR set to: 1

	movf	((c:_zmn)),c,w
	btfsc	status,2
	goto	u80051
	goto	u80050
u80051:
	goto	l40370
u80050:
	
l771:; BSR set to: 1

	line	917
;main.c: 916: {
;main.c: 917: if(!PFN._newPCO) PFN._newPCO=(pcw!=PFN.PCO);
	
	btfsc	(0+(_PFN+02h))&0ffh,1
	goto	u80061
	goto	u80060
u80061:
	goto	l40364
u80060:
	
l40362:; BSR set to: 1

	movf	((NastawaCOCW@pcw))&0ffh,w
	xorwf	(0+(_PFN+01Ah))&0ffh,w
	iorwf	(1+(_PFN+01Ah))&0ffh,w

	btfss	status,2
	goto	u80071
	goto	u80070
u80071:
	movlw	1
	goto	u80076
u80070:
	movlw	0
u80076:
	movlb	0	; () banked
	movwf	(??_NastawaCOCW+0+0)&0ffh
	rlncf	((??_NastawaCOCW+0+0))&0ffh
	movlb	1	; () banked
	movf	(0+(_PFN+02h))&0ffh,w
	movlb	0	; () banked
	xorwf	((??_NastawaCOCW+0+0))&0ffh,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_NastawaCOCW+0+0))&0ffh,w
	movlb	1	; () banked
	movwf	(0+(_PFN+02h))&0ffh
	line	918
	
l40364:; BSR set to: 1

;main.c: 918: zmn2=0;
	clrf	((NastawaCOCW@zmn2))&0ffh
	line	919
	
l40366:; BSR set to: 1

;main.c: 919: StartRTdS(9);
	movlw	(09h)&0ffh
	
	call	_StartRTdS
	line	920
	
l40368:; BSR set to: 1

;main.c: 920: PrintNstCO(PFN.PCO);
	movf	(0+(_PFN+01Ah))&0ffh,w
	
	call	_PrintNstCO
	line	924
	
l40370:; BSR set to: 1

;main.c: 921: }
;main.c: 922: }
;main.c: 924: if(!PFN._set_ncw&&!PFN._set_nco)
	
	btfsc	(0+(_PFN+01h))&0ffh,0
	goto	u80081
	goto	u80080
u80081:
	goto	l775
u80080:
	
l40372:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,7
	goto	u80091
	goto	u80090
u80091:
	goto	l775
u80090:
	line	926
	
l40374:; BSR set to: 1

;main.c: 925: {
;main.c: 926: if(!PFN._str_ncw&&!PFN._str_nco) EndNst();
	
	btfsc	((_PFN))&0ffh,4
	goto	u80101
	goto	u80100
u80101:
	goto	l40380
u80100:
	
l40376:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,3
	goto	u80111
	goto	u80110
u80111:
	goto	l40380
u80110:
	
l40378:; BSR set to: 1

	call	_EndNst	;wreg free
	line	927
	
l40380:; BSR set to: 1

;main.c: 927: PFN.b_set_ncw=0;
	bcf	(0+(_PFN+01h))&0ffh,2
	line	928
	
l40382:; BSR set to: 1

;main.c: 928: PFN.b_set_nco=0;
	bcf	(0+(_PFN+01h))&0ffh,1
	line	930
	
l775:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_NastawaCOCW
	__end_of_NastawaCOCW:
	signat	_NastawaCOCW,4216
	global	_EndNst

;; *************** function _EndNst *****************
;; Defined at:
;;		line 176 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ResetKol
;; This function is called by:
;;		_NastawaCOCW
;; This function uses a non-reentrant model
;;
psect	text45,class=CODE,space=0,reloc=2
global __ptext45
__ptext45:
psect	text45
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	176
	global	__size_of_EndNst
	__size_of_EndNst	equ	__end_of_EndNst-_EndNst
	
_EndNst:; BSR set to: 1

	opt	stack 23
	line	177
	
l40390:; BSR set to: 1

;print.c: 177: ResetKol(2);
	movlw	(02h)&0ffh
	
	call	_ResetKol
	line	178
	
l2466:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_EndNst
	__end_of_EndNst:
	signat	_EndNst,88
	global	_PrintNstCW

;; *************** function _PrintNstCW *****************
;; Defined at:
;;		line 149 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;  nst             1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  nst             1   36[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetData
;;		_SetStatus
;;		_RestartKol
;; This function is called by:
;;		_NastawaCOCW
;; This function uses a non-reentrant model
;;
psect	text46,class=CODE,space=0,reloc=2
global __ptext46
__ptext46:
psect	text46
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	149
	global	__size_of_PrintNstCW
	__size_of_PrintNstCW	equ	__end_of_PrintNstCW-_PrintNstCW
	
_PrintNstCW:; BSR set to: 1

	opt	stack 23
;PrintNstCW@nst stored from wreg
	movff	wreg,(c:PrintNstCW@nst)
	line	150
	
l40392:; BSR set to: 1

;print.c: 150: SetData(&DWD[3],0,nst);
	movlb	2	; () banked
	movlw	high(_DWD+0Ch)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD+0Ch)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(c:PrintNstCW@nst),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	151
;print.c: 151: SetData(&DWD[4],0,nst);
	movlw	high(_DWD+010h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD+010h)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(c:PrintNstCW@nst),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	152
;print.c: 152: SetStatus(&DWD[3],0b0100000000000000|0b0000000000100000|0b00001000,0b1111111111111111);
	movlw	high(_DWD+0Ch)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+0Ch)
	movwf	((c:?_SetStatus)),c
	movlw	high(04028h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04028h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	153
;print.c: 153: SetStatus(&DWD[4],0b0100000000000000|0b0000000000010000|0b00001000,0b1111111111111111);
	movlw	high(_DWD+010h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+010h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04018h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04018h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	154
;print.c: 154: RestartKol(2);
	movlw	(02h)&0ffh
	
	call	_RestartKol
	line	155
	
l2457:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PrintNstCW
	__end_of_PrintNstCW:
	signat	_PrintNstCW,4216
	global	_PrintNstCO

;; *************** function _PrintNstCO *****************
;; Defined at:
;;		line 158 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;  nst             1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  nst             1   36[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetData
;;		_SetStatus
;;		_RestartKol
;; This function is called by:
;;		_NastawaCOCW
;; This function uses a non-reentrant model
;;
psect	text47,class=CODE,space=0,reloc=2
global __ptext47
__ptext47:
psect	text47
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	158
	global	__size_of_PrintNstCO
	__size_of_PrintNstCO	equ	__end_of_PrintNstCO-_PrintNstCO
	
_PrintNstCO:; BSR set to: 1

	opt	stack 23
;PrintNstCO@nst stored from wreg
	movff	wreg,(c:PrintNstCO@nst)
	line	159
	
l40394:; BSR set to: 1

;print.c: 159: SetData(&DWD[3],0,nst);
	movlb	2	; () banked
	movlw	high(_DWD+0Ch)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD+0Ch)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(c:PrintNstCO@nst),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	160
;print.c: 160: SetData(&DWD[4],0,nst);
	movlw	high(_DWD+010h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD+010h)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(c:PrintNstCO@nst),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	161
;print.c: 161: SetStatus(&DWD[3],0b0100000000000000|0b0000000000100000|0b00000001,0b1111111111111111);
	movlw	high(_DWD+0Ch)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+0Ch)
	movwf	((c:?_SetStatus)),c
	movlw	high(04021h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04021h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	162
;print.c: 162: SetStatus(&DWD[4],0b0100000000000000|0b0000000000010000|0b00000001,0b1111111111111111);
	movlw	high(_DWD+010h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+010h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04011h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04011h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	163
;print.c: 163: RestartKol(2);
	movlw	(02h)&0ffh
	
	call	_RestartKol
	line	164
	
l2460:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PrintNstCO
	__end_of_PrintNstCO:
	signat	_PrintNstCO,4216
	global	_ReadParam

;; *************** function _ReadParam *****************
;; Defined at:
;;		line 45 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konsola.c"
;; Parameters:    Size  Location     Type
;;  param           2    0[BANK3 ] PTR unsigned int 
;;		 -> PFN(35), 
;;  zmiana          1    2[BANK3 ] PTR unsigned char 
;;		 -> zmn(1), 
;;  zapis           2    3[BANK3 ] PTR unsigned char 
;;		 -> zps(1), 
;;  min             2    5[BANK3 ] unsigned int 
;;  max             2    7[BANK3 ] unsigned int 
;;  rckl            1    9[BANK3 ] unsigned char 
;;  fst             1   10[BANK3 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  ovd             1   15[BANK3 ] unsigned char 
;;  ovi             1   14[BANK3 ] unsigned char 
;;  stp             1   13[BANK3 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/3
;;		On exit  : C/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0      11       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       4       0       0      16       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       20 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    7
;; This function calls:
;;		_RdPrt
;;		_ReadDataXONLID
;;		_RTdS
;;		_StartRTdS
;; This function is called by:
;;		_NastawaCOCW
;; This function uses a non-reentrant model
;;
psect	text48,class=CODE,space=0,reloc=2
global __ptext48
__ptext48:
psect	text48
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konsola.c"
	line	45
	global	__size_of_ReadParam
	__size_of_ReadParam	equ	__end_of_ReadParam-_ReadParam
	
_ReadParam:; BSR set to: 1

	opt	stack 21
	line	49
	
l40404:; BSR set to: 3

;konsola.c: 46: static unsigned char pnst;
;konsola.c: 47: unsigned char stp,ovi,ovd;
;konsola.c: 49: ovi=0;
	clrf	((ReadParam@ovi))&0ffh
	line	50
;konsola.c: 50: ovd=0;
	clrf	((ReadParam@ovd))&0ffh
	line	51
	
l40406:; BSR set to: 3

;konsola.c: 51: if(*param<min) *param=min;
	movff	(ReadParam@param),fsr2l
	movff	(ReadParam@param+1),fsr2h
	movff	postinc2,??_ReadParam+0+0
	movff	postdec2,??_ReadParam+0+0+1
	movf	((ReadParam@min))&0ffh,w
	movlb	0	; () banked
	subwf	(??_ReadParam+0+0)&0ffh,w
	movlb	3	; () banked
	movf	((ReadParam@min+1))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ReadParam+0+1)&0ffh,w
	btfsc	status,0
	goto	u80141
	goto	u80140
u80141:
	goto	l40410
u80140:
	
l40408:; BSR set to: 0

	movff	(ReadParam@param),fsr2l
	movff	(ReadParam@param+1),fsr2h
	movlb	3	; () banked
	movff	(ReadParam@min),postinc2
	movff	(ReadParam@min+1),postdec2
	line	52
	
l40410:
;konsola.c: 52: if(*param>max) *param=max;
	movff	(ReadParam@param),fsr2l
	movff	(ReadParam@param+1),fsr2h
	movff	postinc2,??_ReadParam+0+0
	movff	postdec2,??_ReadParam+0+0+1
	movlb	0	; () banked
	movf	(??_ReadParam+0+0)&0ffh,w
	movlb	3	; () banked
	subwf	((ReadParam@max))&0ffh,w
	movlb	0	; () banked
	movf	(??_ReadParam+0+1)&0ffh,w
	movlb	3	; () banked
	subwfb	((ReadParam@max+1))&0ffh,w
	btfsc	status,0
	goto	u80151
	goto	u80150
u80151:
	goto	l40414
u80150:
	
l40412:; BSR set to: 3

	movff	(ReadParam@param),fsr2l
	movff	(ReadParam@param+1),fsr2h
	movff	(ReadParam@max),postinc2
	movff	(ReadParam@max+1),postdec2
	line	53
	
l40414:; BSR set to: 3

;konsola.c: 53: if((max-min)>99) stp=5;
	movff	(ReadParam@max),??_ReadParam+0+0
	movff	(ReadParam@max+1),??_ReadParam+0+0+1
	movf	((ReadParam@min))&0ffh,w
	movlb	0	; () banked
	subwf	(??_ReadParam+0+0)&0ffh
	movlb	3	; () banked
	movf	((ReadParam@min+1))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ReadParam+0+1)&0ffh
	movlw	064h
	subwf	(??_ReadParam+0+0)&0ffh,w
	movlw	0
	subwfb	(??_ReadParam+0+1)&0ffh,w
	btfss	status,0
	goto	u80161
	goto	u80160
u80161:
	goto	l40418
u80160:
	
l40416:; BSR set to: 0

	movlw	low(05h)
	movlb	3	; () banked
	movwf	((ReadParam@stp))&0ffh
	goto	l40420
	line	54
	
l40418:; BSR set to: 0

;konsola.c: 54: else stp=1;
	movlw	low(01h)
	movlb	3	; () banked
	movwf	((ReadParam@stp))&0ffh
	line	55
	
l40420:; BSR set to: 3

;konsola.c: 55: if(!(RdPrt(25)&&RdPrt(24)))
	movlw	(019h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u80171
	goto	u80170
u80171:
	goto	l40424
u80170:
	
l40422:; BSR set to: 0

	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u80181
	goto	u80180
u80181:
	goto	l40496
u80180:
	line	57
	
l40424:; BSR set to: 0

;konsola.c: 56: {
;konsola.c: 57: if(!RdPrt(25))
	movlw	(019h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u80191
	goto	u80190
u80191:
	goto	l40442
u80190:
	line	59
	
l40426:; BSR set to: 0

;konsola.c: 58: {
;konsola.c: 59: ReadDataXONLID(RdPrt(24),&xxky[2],param,&ovi,1,min,max,1,stp,fst);
	movlb	2	; () banked
	movlw	high(_xxky+0Ah)
	movwf	((?_ReadDataXONLID+1))&0ffh
	movlw	low(_xxky+0Ah)
	movwf	((?_ReadDataXONLID))&0ffh
	movff	(ReadParam@param),0+(?_ReadDataXONLID+02h)
	movff	(ReadParam@param+1),1+(?_ReadDataXONLID+02h)
	movlb	3	; () banked
	movlw	high(ReadParam@ovi)
	movlb	2	; () banked
	movwf	(1+(?_ReadDataXONLID+04h))&0ffh
	movlb	3	; () banked
	movlw	low(ReadParam@ovi)
	movlb	2	; () banked
	movwf	(0+(?_ReadDataXONLID+04h))&0ffh
	movlw	low(01h)
	movwf	(0+(?_ReadDataXONLID+06h))&0ffh
	movff	(ReadParam@min),0+(?_ReadDataXONLID+07h)
	movff	(ReadParam@min+1),1+(?_ReadDataXONLID+07h)
	movff	(ReadParam@max),0+(?_ReadDataXONLID+09h)
	movff	(ReadParam@max+1),1+(?_ReadDataXONLID+09h)
	movlw	low(01h)
	movwf	(0+(?_ReadDataXONLID+0Bh))&0ffh
	movff	(ReadParam@stp),0+(?_ReadDataXONLID+0Ch)
	movff	(ReadParam@fst),0+(?_ReadDataXONLID+0Dh)
	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u80201
	goto	u80200
u80201:
	movlw	1
	goto	u80206
u80200:
	movlw	0
u80206:
	
	movlb	2	; () banked
	call	_ReadDataXONLID
	line	60
	
l40428:
;konsola.c: 60: if(rckl&&ovi) *param=min;
	movlb	3	; () banked
	movf	((ReadParam@rckl))&0ffh,w
	btfsc	status,2
	goto	u80211
	goto	u80210
u80211:
	goto	l40434
u80210:
	
l40430:; BSR set to: 3

	movf	((ReadParam@ovi))&0ffh,w
	btfsc	status,2
	goto	u80221
	goto	u80220
u80221:
	goto	l40434
u80220:
	
l40432:; BSR set to: 3

	movff	(ReadParam@param),fsr2l
	movff	(ReadParam@param+1),fsr2h
	movff	(ReadParam@min),postinc2
	movff	(ReadParam@min+1),postdec2
	line	61
	
l40434:; BSR set to: 3

;konsola.c: 61: if(!rckl&&RdPrt(24)&&(*param==max)) *zmiana=1;
	tstfsz	((ReadParam@rckl))&0ffh
	goto	u80231
	goto	u80230
u80231:
	goto	l40460
u80230:
	
l40436:; BSR set to: 3

	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u80241
	goto	u80240
u80241:
	goto	l40460
u80240:
	
l40438:; BSR set to: 0

	movff	(ReadParam@param),fsr2l
	movff	(ReadParam@param+1),fsr2h
	movlb	3	; () banked
	movf	postinc2
	movf	((ReadParam@max+1))&0ffh,w
	xorwf	postdec2,w
	movff	(ReadParam@max),wreg
	btfsc	status,2
	xorwf	indf2,w

	btfss	status,2
	goto	u80251
	goto	u80250
u80251:
	goto	l40460
u80250:
	
l40440:; BSR set to: 3

	movf	((ReadParam@zmiana))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movlw	low(01h)
	movwf	indf2
	goto	l40460
	line	64
	
l40442:; BSR set to: 0

;konsola.c: 63: else
;konsola.c: 64: if(!RdPrt(24))
	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u80261
	goto	u80260
u80261:
	goto	l40460
u80260:
	line	66
	
l40444:; BSR set to: 0

;konsola.c: 65: {
;konsola.c: 66: ReadDataXONLID(RdPrt(25),&xxky[3],param,&ovd,0,min,max,1,stp,fst);
	movlb	2	; () banked
	movlw	high(_xxky+0Fh)
	movwf	((?_ReadDataXONLID+1))&0ffh
	movlw	low(_xxky+0Fh)
	movwf	((?_ReadDataXONLID))&0ffh
	movff	(ReadParam@param),0+(?_ReadDataXONLID+02h)
	movff	(ReadParam@param+1),1+(?_ReadDataXONLID+02h)
	movlb	3	; () banked
	movlw	high(ReadParam@ovd)
	movlb	2	; () banked
	movwf	(1+(?_ReadDataXONLID+04h))&0ffh
	movlb	3	; () banked
	movlw	low(ReadParam@ovd)
	movlb	2	; () banked
	movwf	(0+(?_ReadDataXONLID+04h))&0ffh
	movlw	low(0)
	movwf	(0+(?_ReadDataXONLID+06h))&0ffh
	movff	(ReadParam@min),0+(?_ReadDataXONLID+07h)
	movff	(ReadParam@min+1),1+(?_ReadDataXONLID+07h)
	movff	(ReadParam@max),0+(?_ReadDataXONLID+09h)
	movff	(ReadParam@max+1),1+(?_ReadDataXONLID+09h)
	movlw	low(01h)
	movwf	(0+(?_ReadDataXONLID+0Bh))&0ffh
	movff	(ReadParam@stp),0+(?_ReadDataXONLID+0Ch)
	movff	(ReadParam@fst),0+(?_ReadDataXONLID+0Dh)
	movlw	(019h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u80271
	goto	u80270
u80271:
	movlw	1
	goto	u80276
u80270:
	movlw	0
u80276:
	
	movlb	2	; () banked
	call	_ReadDataXONLID
	line	67
	
l40446:
;konsola.c: 67: if(rckl&&ovd) *param=max;
	movlb	3	; () banked
	movf	((ReadParam@rckl))&0ffh,w
	btfsc	status,2
	goto	u80281
	goto	u80280
u80281:
	goto	l40452
u80280:
	
l40448:; BSR set to: 3

	movf	((ReadParam@ovd))&0ffh,w
	btfsc	status,2
	goto	u80291
	goto	u80290
u80291:
	goto	l40452
u80290:
	
l40450:; BSR set to: 3

	movff	(ReadParam@param),fsr2l
	movff	(ReadParam@param+1),fsr2h
	movff	(ReadParam@max),postinc2
	movff	(ReadParam@max+1),postdec2
	line	68
	
l40452:; BSR set to: 3

;konsola.c: 68: if(!rckl&&RdPrt(25)&&(*param==min)) *zmiana=1;
	tstfsz	((ReadParam@rckl))&0ffh
	goto	u80301
	goto	u80300
u80301:
	goto	l40460
u80300:
	
l40454:; BSR set to: 3

	movlw	(019h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u80311
	goto	u80310
u80311:
	goto	l40460
u80310:
	
l40456:; BSR set to: 0

	movff	(ReadParam@param),fsr2l
	movff	(ReadParam@param+1),fsr2h
	movlb	3	; () banked
	movf	postinc2
	movf	((ReadParam@min+1))&0ffh,w
	xorwf	postdec2,w
	movff	(ReadParam@min),wreg
	btfsc	status,2
	xorwf	indf2,w

	btfss	status,2
	goto	u80321
	goto	u80320
u80321:
	goto	l40460
u80320:
	goto	l40440
	line	70
	
l40460:
;konsola.c: 69: }
;konsola.c: 70: if(!RdPrt(25)&&!RdPrt(24))
	movlw	(019h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u80331
	goto	u80330
u80331:
	goto	l40468
u80330:
	
l40462:; BSR set to: 0

	movlw	(018h)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u80341
	goto	u80340
u80341:
	goto	l40468
u80340:
	line	72
	
l40464:; BSR set to: 0

;konsola.c: 71: {
;konsola.c: 72: if(RTdS(6)>5) *zmiana=0;
	movlw	(06h)&0ffh
	
	call	_RTdS
	movlb	0	; () banked
	movwf	(??_ReadParam+0+0)&0ffh
	movlw	(06h)&0ffh
	subwf	((??_ReadParam+0+0))&0ffh,w
	btfss	status,0
	goto	u80351
	goto	u80350
u80351:
	goto	l40468
u80350:
	
l40466:; BSR set to: 0

	movlb	3	; () banked
	movf	((ReadParam@zmiana))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movlw	low(0)
	movwf	indf2
	line	75
	
l40468:
;konsola.c: 73: }
;konsola.c: 75: if(*param!=pnst)
	movff	(ReadParam@param),fsr2l
	movff	(ReadParam@param+1),fsr2h
	movff	postinc2,??_ReadParam+0+0
	movff	postdec2,??_ReadParam+0+0+1
	movlb	1	; () banked
	movf	((ReadParam@pnst))&0ffh,w
	movlb	0	; () banked
	xorwf	(??_ReadParam+0+0)&0ffh,w
	iorwf	(??_ReadParam+0+1)&0ffh,w

	btfsc	status,2
	goto	u80361
	goto	u80360
u80361:
	goto	l4793
u80360:
	line	77
	
l40470:; BSR set to: 0

;konsola.c: 76: {
;konsola.c: 77: if(rckl&&ovi) *zmiana=3;
	movlb	3	; () banked
	movf	((ReadParam@rckl))&0ffh,w
	btfsc	status,2
	goto	u80371
	goto	u80370
u80371:
	goto	l40476
u80370:
	
l40472:; BSR set to: 3

	movf	((ReadParam@ovi))&0ffh,w
	btfsc	status,2
	goto	u80381
	goto	u80380
u80381:
	goto	l40476
u80380:
	
l40474:; BSR set to: 3

	movf	((ReadParam@zmiana))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movlw	low(03h)
	movwf	indf2
	goto	l40490
	line	79
	
l40476:; BSR set to: 3

;konsola.c: 78: else
;konsola.c: 79: if(rckl&&ovd) *zmiana=2;
	movf	((ReadParam@rckl))&0ffh,w
	btfsc	status,2
	goto	u80391
	goto	u80390
u80391:
	goto	l40482
u80390:
	
l40478:; BSR set to: 3

	movf	((ReadParam@ovd))&0ffh,w
	btfsc	status,2
	goto	u80401
	goto	u80400
u80401:
	goto	l40482
u80400:
	
l40480:; BSR set to: 3

	movf	((ReadParam@zmiana))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movlw	low(02h)
	movwf	indf2
	goto	l40490
	line	80
	
l40482:; BSR set to: 3

;konsola.c: 80: else *zmiana=(pnst<*param)?3:2;
	movff	(ReadParam@param),fsr2l
	movff	(ReadParam@param+1),fsr2h
	movff	postinc2,??_ReadParam+0+0
	movff	postdec2,??_ReadParam+0+0+1
	movlb	1	; () banked
	movf	((ReadParam@pnst))&0ffh,w
	movlb	0	; () banked
	movwf	(??_ReadParam+2+0)&0ffh
	clrf	(??_ReadParam+2+0+1)&0ffh

	movf	(??_ReadParam+0+0)&0ffh,w
	subwf	(??_ReadParam+2+0)&0ffh,w
	movf	(??_ReadParam+0+1)&0ffh,w
	subwfb	(??_ReadParam+2+1)&0ffh,w
	btfss	status,0
	goto	u80411
	goto	u80410
u80411:
	goto	l40486
u80410:
	
l40484:; BSR set to: 0

	movlw	high(02h)
	movlb	3	; () banked
	movwf	((_ReadParam$5561+1))&0ffh
	movlw	low(02h)
	movwf	((_ReadParam$5561))&0ffh
	goto	l40488
	
l40486:; BSR set to: 0

	movlw	high(03h)
	movlb	3	; () banked
	movwf	((_ReadParam$5561+1))&0ffh
	movlw	low(03h)
	movwf	((_ReadParam$5561))&0ffh
	
l40488:; BSR set to: 3

	movf	((ReadParam@zmiana))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movff	(_ReadParam$5561),indf2

	line	81
	
l40490:; BSR set to: 3

;konsola.c: 81: pnst=*param;
	movff	(ReadParam@param),fsr2l
	movff	(ReadParam@param+1),fsr2h
	movf	indf2,w
	movlb	1	; () banked
	movwf	((ReadParam@pnst))&0ffh
	line	82
	
l40492:; BSR set to: 1

;konsola.c: 82: StartRTdS(6);
	movlw	(06h)&0ffh
	
	call	_StartRTdS
	line	83
	
l40494:; BSR set to: 1

;konsola.c: 83: *zapis=1;
	movff	(ReadParam@zapis),fsr2l
	movff	(ReadParam@zapis+1),fsr2h
	movlw	low(01h)
	movwf	indf2
	goto	l4793
	line	85
	
l40496:; BSR set to: 0

	movlb	3	; () banked
	movf	((ReadParam@zmiana))&0ffh,w
	movwf	fsr2l
	clrf	fsr2h
	movlw	low(0)
	movwf	indf2
	line	86
	
l4793:
	return
	opt stack 0
GLOBAL	__end_of_ReadParam
	__end_of_ReadParam:
	signat	_ReadParam,28792
	global	_PrintErrTm

;; *************** function _PrintErrTm *****************
;; Defined at:
;;		line 90 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;  kod             1    wreg     const unsigned char 
;;  tm              1   36[COMRAM] const unsigned char 
;;  pls             1   37[COMRAM] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  kod             1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetData
;;		_SetStatus
;;		_SetPoz
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text49,class=CODE,space=0,reloc=2
global __ptext49
__ptext49:
psect	text49
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	90
	global	__size_of_PrintErrTm
	__size_of_PrintErrTm	equ	__end_of_PrintErrTm-_PrintErrTm
	
_PrintErrTm:
	opt	stack 24
;PrintErrTm@kod stored from wreg
	movff	wreg,(PrintErrTm@kod)
	line	91
	
l40498:; BSR set to: 1

;print.c: 91: SetData(&DWD[0],0,kod);
	movlb	2	; () banked
	movlw	high(_DWD)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(PrintErrTm@kod),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	92
;print.c: 92: SetData(&DWD[1],0,tm);
	movlw	high(_DWD+04h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD+04h)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(c:PrintErrTm@tm),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	93
;print.c: 93: SetStatus(&DWD[0],0b0010000000000000|0b0000000000100000|0b00000100,0b1111111111111111);
	movlw	high(_DWD)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD)
	movwf	((c:?_SetStatus)),c
	movlw	high(02024h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(02024h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	94
	
l40500:; BSR set to: 2

;print.c: 94: if(pls) SetStatus(&DWD[1],0b0100000000000000|0b0000000000010000|0b00000100,0b1111111111111111);
	movf	((c:PrintErrTm@pls)),c,w
	btfsc	status,2
	goto	u80421
	goto	u80420
u80421:
	goto	l40504
u80420:
	
l40502:; BSR set to: 2

	movlw	high(_DWD+04h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+04h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04014h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04014h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	goto	l40506
	line	95
	
l40504:; BSR set to: 2

;print.c: 95: else SetStatus(&DWD[1],0b0100000000000000|0b0000000000100000|0b00000100,0b1111111111111111);
	movlw	high(_DWD+04h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+04h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04024h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04024h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	96
	
l40506:; BSR set to: 2

;print.c: 96: SetPoz(0,0);
	movlw	low(0)
	movwf	((c:?_SetPoz)),c
	movlw	(0)&0ffh
	
	call	_SetPoz
	line	97
	
l40508:; BSR set to: 1

;print.c: 97: SetPoz(0,1);
	movlw	low(01h)
	movwf	((c:?_SetPoz)),c
	movlw	(0)&0ffh
	
	call	_SetPoz
	line	98
	
l2434:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PrintErrTm
	__end_of_PrintErrTm:
	signat	_PrintErrTm,12408
	global	_PrintErrCs

;; *************** function _PrintErrCs *****************
;; Defined at:
;;		line 79 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;  kod             1    wreg     const unsigned char 
;;  cs              1   36[COMRAM] const unsigned char 
;;  pls             1   37[COMRAM] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  kod             1    0[BANK0 ] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetData
;;		_SetStatus
;;		_SetPoz
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text50,class=CODE,space=0,reloc=2
global __ptext50
__ptext50:
psect	text50
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	79
	global	__size_of_PrintErrCs
	__size_of_PrintErrCs	equ	__end_of_PrintErrCs-_PrintErrCs
	
_PrintErrCs:; BSR set to: 1

	opt	stack 24
;PrintErrCs@kod stored from wreg
	movff	wreg,(PrintErrCs@kod)
	line	80
	
l40510:; BSR set to: 1

;print.c: 80: SetData(&DWD[0],0,kod);
	movlb	2	; () banked
	movlw	high(_DWD)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(PrintErrCs@kod),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	81
;print.c: 81: SetData(&DWD[1],0,cs);
	movlw	high(_DWD+04h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD+04h)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(c:PrintErrCs@cs),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	82
;print.c: 82: SetStatus(&DWD[0],0b0010000000000000|0b0000000000100000|0b00000100,0b1111111111111111);
	movlw	high(_DWD)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD)
	movwf	((c:?_SetStatus)),c
	movlw	high(02024h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(02024h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	84
	
l40512:; BSR set to: 2

;print.c: 84: if(pls) SetStatus(&DWD[1],0b0100000000000000|0b0000010000000000|0b0000000000010000|0b00000100,0b1111111111111111);
	movf	((c:PrintErrCs@pls)),c,w
	btfsc	status,2
	goto	u80431
	goto	u80430
u80431:
	goto	l40516
u80430:
	
l40514:; BSR set to: 2

	movlw	high(_DWD+04h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+04h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04414h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04414h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	goto	l40518
	line	85
	
l40516:; BSR set to: 2

;print.c: 85: else SetStatus(&DWD[1],0b0100000000000000|0b0000010000000000|0b0000000000100000|0b00000100,0b1111111111111111);
	movlw	high(_DWD+04h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+04h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04424h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04424h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	86
	
l40518:; BSR set to: 2

;print.c: 86: SetPoz(0,0);
	movlw	low(0)
	movwf	((c:?_SetPoz)),c
	movlw	(0)&0ffh
	
	call	_SetPoz
	line	87
	
l40520:; BSR set to: 1

;print.c: 87: SetPoz(0,1);
	movlw	low(01h)
	movwf	((c:?_SetPoz)),c
	movlw	(0)&0ffh
	
	call	_SetPoz
	line	88
	
l2429:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PrintErrCs
	__end_of_PrintErrCs:
	signat	_PrintErrCs,12408
	global	_PrintOFF

;; *************** function _PrintOFF *****************
;; Defined at:
;;		line 242 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text51,class=CODE,space=0,reloc=2
global __ptext51
__ptext51:
psect	text51
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	242
	global	__size_of_PrintOFF
	__size_of_PrintOFF	equ	__end_of_PrintOFF-_PrintOFF
	
_PrintOFF:; BSR set to: 1

	opt	stack 24
	line	243
	
l40526:; BSR set to: 1

;print.c: 243: SetStatus(&PWD[6],0b0000000001000000|0b0000000010000000|0b1000000000000000,0b1111111111111111);
	movlb	2	; () banked
	movlw	high(_PWD+018h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+018h)
	movwf	((c:?_SetStatus)),c
	movlw	high(080C0h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(080C0h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	244
;print.c: 244: SetData(&PWD[6],0b10111111,0b10111111);
	movlw	high(_PWD+018h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_PWD+018h)
	movwf	((c:?_SetData)),c
	movlw	low(0BFh)
	movwf	(0+((c:?_SetData)+02h)),c
	movlw	low(0BFh)
	movwf	(0+((c:?_SetData)+03h)),c
	call	_SetData	;wreg free
	line	245
	
l2492:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_PrintOFF
	__end_of_PrintOFF:
	signat	_PrintOFF,88
	global	_EndOFF

;; *************** function _EndOFF *****************
;; Defined at:
;;		line 248 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text52,class=CODE,space=0,reloc=2
global __ptext52
__ptext52:
psect	text52
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	248
	global	__size_of_EndOFF
	__size_of_EndOFF	equ	__end_of_EndOFF-_EndOFF
	
_EndOFF:; BSR set to: 2

	opt	stack 24
	line	249
	
l40528:; BSR set to: 1

;print.c: 249: SetStatus(&PWD[6],0b0000000001000000|0b0000000010000000,0b1111111111111111);
	movlb	2	; () banked
	movlw	high(_PWD+018h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+018h)
	movwf	((c:?_SetStatus)),c
	movlw	high(0C0h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(0C0h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	250
	
l2495:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_EndOFF
	__end_of_EndOFF:
	signat	_EndOFF,88
	global	_PrintCS

;; *************** function _PrintCS *****************
;; Defined at:
;;		line 255 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;  cs              1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  cs              1   36[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text53,class=CODE,space=0,reloc=2
global __ptext53
__ptext53:
psect	text53
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	255
	global	__size_of_PrintCS
	__size_of_PrintCS	equ	__end_of_PrintCS-_PrintCS
	
_PrintCS:; BSR set to: 2

	opt	stack 24
;PrintCS@cs stored from wreg
	movff	wreg,(c:PrintCS@cs)
	line	256
	
l40530:; BSR set to: 1

;print.c: 256: SetStatus(&PWD[7],0b0100000000000000|0b0000010000000000|0b1000000000000000,0b1111111111111111);
	movlb	2	; () banked
	movlw	high(_PWD+01Ch)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+01Ch)
	movwf	((c:?_SetStatus)),c
	movlw	high(0C400h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(0C400h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	257
;print.c: 257: SetData(&PWD[7],0,cs);
	movlw	high(_PWD+01Ch)
	movwf	((c:?_SetData+1)),c
	movlw	low(_PWD+01Ch)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(c:PrintCS@cs),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	258
	
l2498:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_PrintCS
	__end_of_PrintCS:
	signat	_PrintCS,4216
	global	_EndCS

;; *************** function _EndCS *****************
;; Defined at:
;;		line 261 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : C/2
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text54,class=CODE,space=0,reloc=2
global __ptext54
__ptext54:
psect	text54
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	261
	global	__size_of_EndCS
	__size_of_EndCS	equ	__end_of_EndCS-_EndCS
	
_EndCS:; BSR set to: 2

	opt	stack 24
	line	262
	
l40532:
;print.c: 262: SetStatus(&PWD[7],0b0100000000000000|0b0000010000000000,0b1111111111111111);
	movlb	2	; () banked
	movlw	high(_PWD+01Ch)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+01Ch)
	movwf	((c:?_SetStatus)),c
	movlw	high(04400h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04400h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	263
	
l2501:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_EndCS
	__end_of_EndCS:
	signat	_EndCS,88
	global	_PrintCW

;; *************** function _PrintCW *****************
;; Defined at:
;;		line 269 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;  tm              1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  tm              1   36[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text55,class=CODE,space=0,reloc=2
global __ptext55
__ptext55:
psect	text55
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	269
	global	__size_of_PrintCW
	__size_of_PrintCW	equ	__end_of_PrintCW-_PrintCW
	
_PrintCW:; BSR set to: 2

	opt	stack 24
;PrintCW@tm stored from wreg
	movff	wreg,(c:PrintCW@tm)
	line	270
	
l40534:; BSR set to: 1

;print.c: 270: SetStatus(&PWD[8],0b0100000000000000|0b1000000000000000,0b1111111111111111);
	movlb	2	; () banked
	movlw	high(_PWD+020h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+020h)
	movwf	((c:?_SetStatus)),c
	movlw	high(0C000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(0C000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	271
;print.c: 271: SetData(&PWD[8],0,tm);
	movlw	high(_PWD+020h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_PWD+020h)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(c:PrintCW@tm),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	272
	
l2504:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_PrintCW
	__end_of_PrintCW:
	signat	_PrintCW,4216
	global	_EndCW

;; *************** function _EndCW *****************
;; Defined at:
;;		line 275 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text56,class=CODE,space=0,reloc=2
global __ptext56
__ptext56:
psect	text56
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	275
	global	__size_of_EndCW
	__size_of_EndCW	equ	__end_of_EndCW-_EndCW
	
_EndCW:; BSR set to: 2

	opt	stack 24
	line	276
	
l40536:; BSR set to: 2

;print.c: 276: SetStatus(&PWD[8],0b0100000000000000,0b1111111111111111);
	movlw	high(_PWD+020h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+020h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	277
	
l2507:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_EndCW
	__end_of_EndCW:
	signat	_EndCW,88
	global	_PrintCO

;; *************** function _PrintCO *****************
;; Defined at:
;;		line 283 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;  tm              1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  tm              1   36[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetStatus
;;		_SetData
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text57,class=CODE,space=0,reloc=2
global __ptext57
__ptext57:
psect	text57
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	283
	global	__size_of_PrintCO
	__size_of_PrintCO	equ	__end_of_PrintCO-_PrintCO
	
_PrintCO:; BSR set to: 2

	opt	stack 24
;PrintCO@tm stored from wreg
	movff	wreg,(c:PrintCO@tm)
	line	284
	
l40538:; BSR set to: 1

;print.c: 284: SetStatus(&PWD[9],0b0100000000000000,0b1111111111111111);
	movlb	2	; () banked
	movlw	high(_PWD+024h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_PWD+024h)
	movwf	((c:?_SetStatus)),c
	movlw	high(04000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(04000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	285
;print.c: 285: SetData(&PWD[9],0,tm);
	movlw	high(_PWD+024h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_PWD+024h)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(c:PrintCO@tm),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	286
	
l2510:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_PrintCO
	__end_of_PrintCO:
	signat	_PrintCO,4216
	global	_PrintL3

;; *************** function _PrintL3 *****************
;; Defined at:
;;		line 189 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetData
;;		_SetStatus
;;		_SetPoz
;; This function is called by:
;;		_DecWSW
;; This function uses a non-reentrant model
;;
psect	text58,class=CODE,space=0,reloc=2
global __ptext58
__ptext58:
psect	text58
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	189
	global	__size_of_PrintL3
	__size_of_PrintL3	equ	__end_of_PrintL3-_PrintL3
	
_PrintL3:; BSR set to: 2

	opt	stack 24
	line	190
	
l40540:; BSR set to: 1

;print.c: 190: SetData(&DWD[5],0b11010110,0b00110001);
	movlb	2	; () banked
	movlw	high(_DWD+014h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD+014h)
	movwf	((c:?_SetData)),c
	movlw	low(0D6h)
	movwf	(0+((c:?_SetData)+02h)),c
	movlw	low(031h)
	movwf	(0+((c:?_SetData)+03h)),c
	call	_SetData	;wreg free
	line	191
;print.c: 191: SetStatus(&DWD[5],0b0000000000000000|0b1000000000000000,0b1111111111111111);
	movlw	high(_DWD+014h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+014h)
	movwf	((c:?_SetStatus)),c
	movlw	high(08000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(08000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	192
	
l40542:; BSR set to: 2

;print.c: 192: if(DtCO._err_CO)
	movlb	0	; () banked
	
	btfss	((_DtCO))&0ffh,0
	goto	u80441
	goto	u80440
u80441:
	goto	l40546
u80440:
	line	194
	
l40544:; BSR set to: 0

;print.c: 193: {
;print.c: 194: SetData(&DWD[6],0b11010110,0b00110001);
	movlb	2	; () banked
	movlw	high(_DWD+018h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD+018h)
	movwf	((c:?_SetData)),c
	movlw	low(0D6h)
	movwf	(0+((c:?_SetData)+02h)),c
	movlw	low(031h)
	movwf	(0+((c:?_SetData)+03h)),c
	call	_SetData	;wreg free
	line	195
;print.c: 195: SetStatus(&DWD[6],0b0000000000000000|0b1000000000000000,0b1111111111111111);
	movlw	high(_DWD+018h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+018h)
	movwf	((c:?_SetStatus)),c
	movlw	high(08000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(08000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	196
;print.c: 196: }
	goto	l40548
	line	199
	
l40546:; BSR set to: 0

;print.c: 197: else
;print.c: 198: {
;print.c: 199: SetData(&DWD[6],0,DtCO.SCO);
	movlb	2	; () banked
	movlw	high(_DWD+018h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD+018h)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	0+(_DtCO+0Bh),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	200
;print.c: 200: SetStatus(&DWD[6],0b0100000000000000|0b1000000000000000,0b1111111111111111);
	movlw	high(_DWD+018h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+018h)
	movwf	((c:?_SetStatus)),c
	movlw	high(0C000h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(0C000h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	202
	
l40548:; BSR set to: 2

;print.c: 201: }
;print.c: 202: SetPoz(3,0);
	movlw	low(0)
	movwf	((c:?_SetPoz)),c
	movlw	(03h)&0ffh
	
	call	_SetPoz
	line	203
	
l40550:; BSR set to: 1

;print.c: 203: SetPoz(3,1);
	movlw	low(01h)
	movwf	((c:?_SetPoz)),c
	movlw	(03h)&0ffh
	
	call	_SetPoz
	line	204
	
l2474:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PrintL3
	__end_of_PrintL3:
	signat	_PrintL3,88
	global	_SetDiode

;; *************** function _SetDiode *****************
;; Defined at:
;;		line 322 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;  wd              1    wreg     unsigned char 
;;  stn             1   30[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  wd              1   31[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : C/2
;;		On exit  : C/2
;;		Unchanged: FFFFFFF3/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Swsdid
;;		_Rwsdid
;; This function is called by:
;;		_DecWSW
;;		_TestScr
;;		_EndTestScr
;; This function uses a non-reentrant model
;;
psect	text59,class=CODE,space=0,reloc=2
global __ptext59
__ptext59:
psect	text59
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	322
	global	__size_of_SetDiode
	__size_of_SetDiode	equ	__end_of_SetDiode-_SetDiode
	
_SetDiode:; BSR set to: 1

	opt	stack 24
;SetDiode@wd stored from wreg
	movff	wreg,(c:SetDiode@wd)
	line	323
	
l40552:
;print.c: 323: if(stn) Swsdid(wd);
	movf	((c:SetDiode@stn)),c,w
	btfsc	status,2
	goto	u80451
	goto	u80450
u80451:
	goto	l40556
u80450:
	
l40554:
	movf	((c:SetDiode@wd)),c,w
	
	call	_Swsdid
	goto	l2524
	line	324
	
l40556:
;print.c: 324: else Rwsdid(wd);
	movf	((c:SetDiode@wd)),c,w
	
	call	_Rwsdid
	line	325
	
l2524:
	return
	opt stack 0
GLOBAL	__end_of_SetDiode
	__end_of_SetDiode:
	signat	_SetDiode,8312
	global	_SetErr

;; *************** function _SetErr *****************
;; Defined at:
;;		line 51 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;  kod             1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  kod             1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecERR
;; This function uses a non-reentrant model
;;
psect	text60,class=CODE,space=0,reloc=2
global __ptext60
__ptext60:
psect	text60
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	51
	global	__size_of_SetErr
	__size_of_SetErr	equ	__end_of_SetErr-_SetErr
	
_SetErr:
	opt	stack 25
;SetErr@kod stored from wreg
	movff	wreg,(c:SetErr@kod)
	line	52
	
l32762:
;print.c: 52: PFN._ferr=1;
	movlb	1	; () banked
	bsf	(0+(_PFN+05h))&0ffh,0
	line	53
	
l32764:; BSR set to: 1

;print.c: 53: PFN.KERR=kod;
	movff	(c:SetErr@kod),0+(_PFN+010h)
	line	54
	
l2416:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_SetErr
	__end_of_SetErr:
	signat	_SetErr,4216
	global	_SetMsg

;; *************** function _SetMsg *****************
;; Defined at:
;;		line 59 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;  kod             1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  kod             1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecERR
;; This function uses a non-reentrant model
;;
psect	text61,class=CODE,space=0,reloc=2
global __ptext61
__ptext61:
psect	text61
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	59
	global	__size_of_SetMsg
	__size_of_SetMsg	equ	__end_of_SetMsg-_SetMsg
	
_SetMsg:; BSR set to: 1

	opt	stack 25
;SetMsg@kod stored from wreg
	movff	wreg,(c:SetMsg@kod)
	line	60
	
l32766:
;print.c: 60: PFN._fmsg=1;
	movlb	1	; () banked
	bsf	(0+(_PFN+04h))&0ffh,7
	line	61
	
l32768:; BSR set to: 1

;print.c: 61: PFN.KAWR=kod;
	movff	(c:SetMsg@kod),0+(_PFN+0Fh)
	line	62
	
l2419:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_SetMsg
	__end_of_SetMsg:
	signat	_SetMsg,4216
	global	_RestartMod

;; *************** function _RestartMod *****************
;; Defined at:
;;		line 2533 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecSTR
;; This function uses a non-reentrant model
;;
psect	text62,class=CODE,space=0,reloc=2
global __ptext62
__ptext62:
psect	text62
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2533
	global	__size_of_RestartMod
	__size_of_RestartMod	equ	__end_of_RestartMod-_RestartMod
	
_RestartMod:; BSR set to: 1

	opt	stack 25
	line	2534
	
l32842:; BSR set to: 0

;rgl.c: 2534: rgl.btco=0;
	bcf	((c:_rgl)),c,0
	line	2535
;rgl.c: 2535: rgl.btcw=0;
	bcf	((c:_rgl)),c,1
	line	2536
;rgl.c: 2536: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	2537
;rgl.c: 2537: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	2538
;rgl.c: 2538: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	2539
;rgl.c: 2539: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	2540
;rgl.c: 2540: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	2541
;rgl.c: 2541: rgl.deln1=0;
	bcf	((c:_rgl)),c,7
	line	2542
;rgl.c: 2542: rgl.inv_mod=0;
	bcf	(0+((c:_rgl)+01h)),c,0
	line	2543
	
l3660:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RestartMod
	__end_of_RestartMod:
	signat	_RestartMod,88
	global	_SetRozruch

;; *************** function _SetRozruch *****************
;; Defined at:
;;		line 1990 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_EndL3
;; This function is called by:
;;		_DecRozruch
;; This function uses a non-reentrant model
;;
psect	text63,class=CODE,space=0,reloc=2
global __ptext63
__ptext63:
psect	text63
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	1990
	global	__size_of_SetRozruch
	__size_of_SetRozruch	equ	__end_of_SetRozruch-_SetRozruch
	
_SetRozruch:; BSR set to: 0

	opt	stack 23
	line	1991
	
l40558:; BSR set to: 0

;main.c: 1991: M._BLOKUJ_3M=0;
	bcf	(0+(_M+011h))&0ffh,3
	line	1992
;main.c: 1992: M.BL3=0;
	clrf	(0+(_M+026h))&0ffh
	line	1993
	
l40560:; BSR set to: 0

;main.c: 1993: EndL3();
	call	_EndL3	;wreg free
	line	1994
	
l40562:; BSR set to: 1

;main.c: 1994: M._RUSZ_48=0;
	movlb	0	; () banked
	bcf	(0+(_M+010h))&0ffh,3
	line	1995
	
l40564:; BSR set to: 0

;main.c: 1995: M.R48=0;
	clrf	(0+(_M+024h))&0ffh
	line	1996
	
l40566:; BSR set to: 0

;main.c: 1996: M._RUSZ_48Z3=0;
	bcf	(0+(_M+010h))&0ffh,4
	line	1997
	
l40568:; BSR set to: 0

;main.c: 1997: M.R48Z3=0;
	clrf	(0+(_M+025h))&0ffh
	line	1998
	
l40570:; BSR set to: 0

;main.c: 1998: M._VWYBIEG=0;
	bcf	(0+(_M+010h))&0ffh,6
	line	1999
	
l40572:; BSR set to: 0

;main.c: 1999: M._DE_VNT=0;
	bcf	(0+(_M+01Bh))&0ffh,6
	line	2000
	
l40574:; BSR set to: 0

;main.c: 2000: M.VWB=0;
	clrf	(0+(_M+02Eh))&0ffh
	line	2002
	
l40576:; BSR set to: 0

;main.c: 2002: M._KCW_PMP=0;
	bcf	(0+(_M+01Bh))&0ffh,5
	line	2003
	
l40578:; BSR set to: 0

;main.c: 2003: M.WYL=0;
	clrf	(0+(_M+028h))&0ffh
	line	2004
	
l40580:; BSR set to: 0

;main.c: 2004: M.RPR=0;
	clrf	(0+(_M+029h))&0ffh
	line	2005
	
l40582:; BSR set to: 0

;main.c: 2005: M._WYLACZ=0;
	bcf	(0+(_M+010h))&0ffh,0
	line	2006
	
l40584:; BSR set to: 0

;main.c: 2006: M._RUSZ_POMPE=0;
	bcf	(0+(_M+011h))&0ffh,2
	line	2007
	
l40586:; BSR set to: 0

;main.c: 2007: M._ROZRUCH=1;
	bsf	(0+(_M+010h))&0ffh,2
	line	2008
	
l40588:; BSR set to: 0

;main.c: 2009: x=0;
	clrf	(0+(_M+023h))&0ffh
	line	2010
	
l1160:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetRozruch
	__end_of_SetRozruch:
	signat	_SetRozruch,88
	global	_EndL3

;; *************** function _EndL3 *****************
;; Defined at:
;;		line 208 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ResetKol
;; This function is called by:
;;		_SetRozruch
;;		_BlokadaL3
;; This function uses a non-reentrant model
;;
psect	text64,class=CODE,space=0,reloc=2
global __ptext64
__ptext64:
psect	text64
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	208
	global	__size_of_EndL3
	__size_of_EndL3	equ	__end_of_EndL3-_EndL3
	
_EndL3:; BSR set to: 0

	opt	stack 24
	line	209
	
l40590:; BSR set to: 0

;print.c: 209: PFN._fL3=0;
	movlb	1	; () banked
	bcf	(0+(_PFN+05h))&0ffh,1
	line	210
	
l40592:; BSR set to: 1

;print.c: 210: ResetKol(3);
	movlw	(03h)&0ffh
	
	call	_ResetKol
	line	211
	
l2477:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_EndL3
	__end_of_EndL3:
	signat	_EndL3,88
	global	_SetWylacz

;; *************** function _SetWylacz *****************
;; Defined at:
;;		line 2208 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_GrzejOFF
;;		_ToObiegCO
;;		_SetPrt
;; This function is called by:
;;		_DecWylacz
;; This function uses a non-reentrant model
;;
psect	text65,class=CODE,space=0,reloc=2
global __ptext65
__ptext65:
psect	text65
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2208
	global	__size_of_SetWylacz
	__size_of_SetWylacz	equ	__end_of_SetWylacz-_SetWylacz
	
_SetWylacz:; BSR set to: 1

	opt	stack 24
	line	2209
	
l32888:
;main.c: 2209: GrzejOFF();
	call	_GrzejOFF	;wreg free
	line	2212
;main.c: 2212: switch(DtKNF.tpkt)
	goto	l32900
	line	2215
	
l1286:; BSR set to: 1

	line	2217
;main.c: 2215: case 2:
;main.c: 2216: {
;main.c: 2217: if(!PORTDbits.RD2)
	
	btfsc	((c:3971)),c,2	;volatile
	goto	u61001
	goto	u61000
u61001:
	goto	l1287
u61000:
	line	2219
	
l32890:; BSR set to: 1

;main.c: 2218: {
;main.c: 2219: M._KCW_PMP=1;
	movlb	0	; () banked
	bsf	(0+(_M+01Bh))&0ffh,5
	line	2220
;main.c: 2220: M._BLOKUJ_15S=1;
	bsf	(0+(_M+011h))&0ffh,4
	line	2221
;main.c: 2221: M.BL15=0;
	clrf	(0+(_M+027h))&0ffh
	line	2222
;main.c: 2222: }
	goto	l32892
	line	2223
	
l1287:; BSR set to: 1

;main.c: 2223: else M._KCW_PMP=0;
	movlb	0	; () banked
	bcf	(0+(_M+01Bh))&0ffh,5
	line	2224
	
l32892:; BSR set to: 0

;main.c: 2224: ToObiegCO();
	call	_ToObiegCO	;wreg free
	line	2225
;main.c: 2225: break;
	goto	l1289
	line	2228
	
l1291:; BSR set to: 1

	line	2230
;main.c: 2228: case 3:
;main.c: 2229: {
;main.c: 2230: if(!PORTDbits.RD1)
	
	btfsc	((c:3971)),c,1	;volatile
	goto	u61011
	goto	u61010
u61011:
	goto	l1289
u61010:
	line	2232
	
l32894:; BSR set to: 1

;main.c: 2231: {
;main.c: 2232: M._BLOKUJ_15S=1;
	movlb	0	; () banked
	bsf	(0+(_M+011h))&0ffh,4
	line	2233
;main.c: 2233: M.BL15=0;
	clrf	(0+(_M+027h))&0ffh
	goto	l1289
	line	2237
;main.c: 2236: }
;main.c: 2237: default:
	
l1293:; BSR set to: 1

	line	2239
;main.c: 2238: {
;main.c: 2239: if(!PORTDbits.RD1)
	
	btfsc	((c:3971)),c,1	;volatile
	goto	u61021
	goto	u61020
u61021:
	goto	l1289
u61020:
	goto	l32894
	line	2212
	
l32900:
	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1291
	xorlw	1^0	; case 1
	skipnz
	goto	l1286
	xorlw	2^1	; case 2
	skipnz
	goto	l1286
	xorlw	3^2	; case 3
	skipnz
	goto	l1291
	goto	l1293

	line	2246
	
l1289:
	line	2248
;main.c: 2248: M._WYLACZ=1;
	movlb	0	; () banked
	bsf	(0+(_M+010h))&0ffh,0
	line	2249
;main.c: 2249: if(M._TURBO&&PORTDbits.RD3) M._VWYBIEG=1;
	
	btfss	(0+(_M+01Bh))&0ffh,1
	goto	u61031
	goto	u61030
u61031:
	goto	l1295
u61030:
	
l32902:; BSR set to: 0

	
	btfss	((c:3971)),c,3	;volatile
	goto	u61041
	goto	u61040
u61041:
	goto	l1295
u61040:
	
l32904:; BSR set to: 0

	bsf	(0+(_M+010h))&0ffh,6
	
l1295:; BSR set to: 0

	line	2250
;main.c: 2250: M.ROZ=0;
	clrf	(0+(_M+023h))&0ffh
	line	2251
;main.c: 2251: M.MNM=0;
	clrf	(0+(_M+02Ch))&0ffh
	line	2252
;main.c: 2252: M._ROZRUCH=0;
	bcf	(0+(_M+010h))&0ffh,2
	line	2253
;main.c: 2253: M._RUN_MNMOD=0;
	bcf	(0+(_M+01Bh))&0ffh,4
	line	2256
;main.c: 2256: DtCO._on_DZ_CO=0;
	bcf	((_DtCO))&0ffh,5
	line	2257
	
l32906:; BSR set to: 0

;main.c: 2257: SetPrt(9,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(09h)&0ffh
	
	call	_SetPrt
	line	2258
	
l32908:; BSR set to: 0

;main.c: 2258: DtCW._on_DZ_CW=0;
	bcf	((_DtCW))&0ffh,4
	line	2259
;main.c: 2259: SetPrt(10,0);
	movlw	low(0)
	movwf	((c:?_SetPrt)),c
	movlw	(0Ah)&0ffh
	
	call	_SetPrt
	line	2260
	
l1296:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetWylacz
	__end_of_SetWylacz:
	signat	_SetWylacz,88
	global	_SetL3

;; *************** function _SetL3 *****************
;; Defined at:
;;		line 182 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecWylacz
;;		_BlokadaL3
;; This function uses a non-reentrant model
;;
psect	text66,class=CODE,space=0,reloc=2
global __ptext66
__ptext66:
psect	text66
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	182
	global	__size_of_SetL3
	__size_of_SetL3	equ	__end_of_SetL3-_SetL3
	
_SetL3:; BSR set to: 0

	opt	stack 25
	line	183
	
l32910:
;print.c: 183: PFN._fL3=1;
	movlb	1	; () banked
	bsf	(0+(_PFN+05h))&0ffh,1
	line	184
	
l2469:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_SetL3
	__end_of_SetL3:
	signat	_SetL3,88
	global	_GrzejON

;; *************** function _GrzejON *****************
;; Defined at:
;;		line 2398 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Rozruch
;; This function uses a non-reentrant model
;;
psect	text67,class=CODE,space=0,reloc=2
global __ptext67
__ptext67:
psect	text67
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2398
	global	__size_of_GrzejON
	__size_of_GrzejON	equ	__end_of_GrzejON-_GrzejON
	
_GrzejON:; BSR set to: 1

	opt	stack 25
	line	2399
	
l32916:
;main.c: 2399: PORTDbits.RD0=1;
	bsf	((c:3971)),c,0	;volatile
	line	2400
# 2400 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2401
# 2401 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2402
# 2402 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2403
# 2403 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2404
# 2404 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2405
# 2405 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2406
# 2406 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2407
# 2407 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
psect	text67
	line	2408
;main.c: 2408: PORTDbits.RD3=1;
	bsf	((c:3971)),c,3	;volatile
	line	2409
	
l1333:
	return
	opt stack 0
GLOBAL	__end_of_GrzejON
	__end_of_GrzejON:
	signat	_GrzejON,88
	global	_DecyzjaPLM

;; *************** function _DecyzjaPLM *****************
;; Defined at:
;;		line 2627 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_PrintErr
;;		_ErrPTG
;; This function is called by:
;;		_Rozruch
;; This function uses a non-reentrant model
;;
psect	text68,class=CODE,space=0,reloc=2
global __ptext68
__ptext68:
psect	text68
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2627
	global	__size_of_DecyzjaPLM
	__size_of_DecyzjaPLM	equ	__end_of_DecyzjaPLM-_DecyzjaPLM
	
_DecyzjaPLM:
	opt	stack 20
	line	2628
	
l40594:; BSR set to: 0

;main.c: 2628: if(M._OST_PL)
	
	btfss	(0+(_M+01Bh))&0ffh,3
	goto	u80461
	goto	u80460
u80461:
	goto	l1399
u80460:
	line	2630
	
l40596:; BSR set to: 0

;main.c: 2629: {
;main.c: 2630: M.ERR_BTY=0x01;
	movlw	low(01h)
	movwf	(0+(_M+022h))&0ffh
	line	2631
	
l40598:; BSR set to: 0

;main.c: 2631: PrintErr(0x01,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movlw	(01h)&0ffh
	
	call	_PrintErr
	line	2632
	
l40600:; BSR set to: 1

;main.c: 2632: ErrPTG();
	call	_ErrPTG	;wreg free
	line	2633
;main.c: 2633: }
	goto	l1402
	line	2634
	
l1399:; BSR set to: 0

	line	2636
;main.c: 2634: else
;main.c: 2635: {
;main.c: 2636: M._RUSZ_PLOMIEN=1;
	bsf	(0+(_M+011h))&0ffh,0
	line	2637
;main.c: 2637: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
	tstfsz	(0+(_M+01Dh))&0ffh
	goto	u80471
	goto	u80470
u80471:
	goto	l1401
u80470:
	
l40602:; BSR set to: 0

	bsf	(0+(_M+011h))&0ffh,1
	
l1401:; BSR set to: 0

	line	2638
;main.c: 2638: M._ROZRUCH=0;
	bcf	(0+(_M+010h))&0ffh,2
	line	2639
;main.c: 2639: M.ROZ=0;
	clrf	(0+(_M+023h))&0ffh
	line	2641
	
l1402:
	return
	opt stack 0
GLOBAL	__end_of_DecyzjaPLM
	__end_of_DecyzjaPLM:
	signat	_DecyzjaPLM,88
	global	_DecyzjaPLM2

;; *************** function _DecyzjaPLM2 *****************
;; Defined at:
;;		line 2643 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_PrintErr
;;		_ErrPTG
;;		_RdPrt
;; This function is called by:
;;		_Rozruch
;; This function uses a non-reentrant model
;;
psect	text69,class=CODE,space=0,reloc=2
global __ptext69
__ptext69:
psect	text69
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2643
	global	__size_of_DecyzjaPLM2
	__size_of_DecyzjaPLM2	equ	__end_of_DecyzjaPLM2-_DecyzjaPLM2
	
_DecyzjaPLM2:
	opt	stack 20
	line	2644
	
l40604:; BSR set to: 0

;main.c: 2644: if(M._TURBO)
	
	btfss	(0+(_M+01Bh))&0ffh,1
	goto	u80481
	goto	u80480
u80481:
	goto	l1405
u80480:
	line	2646
	
l40606:; BSR set to: 0

;main.c: 2645: {
;main.c: 2646: if(PORTDbits.RD3)
	
	btfss	((c:3971)),c,3	;volatile
	goto	u80491
	goto	u80490
u80491:
	goto	l40622
u80490:
	line	2649
	
l40608:; BSR set to: 0

;main.c: 2647: {
;main.c: 2649: if(PORTAbits.RA6&&PORTAbits.RA7)
	
	btfss	((c:3968)),c,6	;volatile
	goto	u80501
	goto	u80500
u80501:
	goto	l1421
u80500:
	
l40610:; BSR set to: 0

	
	btfss	((c:3968)),c,7	;volatile
	goto	u80511
	goto	u80510
u80511:
	goto	l1421
u80510:
	line	2651
	
l40612:; BSR set to: 0

;main.c: 2650: {
;main.c: 2651: if(M._OST_PL)
	
	btfss	(0+(_M+01Bh))&0ffh,3
	goto	u80521
	goto	u80520
u80521:
	goto	l1408
u80520:
	line	2653
	
l40614:; BSR set to: 0

;main.c: 2652: {
;main.c: 2653: M.ERR_BTY=0x01;
	movlw	low(01h)
	movwf	(0+(_M+022h))&0ffh
	line	2654
	
l40616:; BSR set to: 0

;main.c: 2654: PrintErr(0x01,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movlw	(01h)&0ffh
	
	call	_PrintErr
	line	2655
	
l40618:; BSR set to: 1

;main.c: 2655: ErrPTG();
	call	_ErrPTG	;wreg free
	line	2656
;main.c: 2656: }
	goto	l1421
	line	2657
	
l1408:; BSR set to: 0

	line	2659
;main.c: 2657: else
;main.c: 2658: {
;main.c: 2659: M.RPL=0;
	clrf	(0+(_M+02Ah))&0ffh
	line	2660
;main.c: 2660: M._RUSZ_PLOMIEN=1;
	bsf	(0+(_M+011h))&0ffh,0
	line	2661
;main.c: 2661: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
	tstfsz	(0+(_M+01Dh))&0ffh
	goto	u80531
	goto	u80530
u80531:
	goto	l1410
u80530:
	
l40620:; BSR set to: 0

	bsf	(0+(_M+011h))&0ffh,1
	
l1410:; BSR set to: 0

	line	2662
;main.c: 2662: M._ROZRUCH=0;
	bcf	(0+(_M+010h))&0ffh,2
	line	2663
;main.c: 2663: M.ROZ=0;
	clrf	(0+(_M+023h))&0ffh
	goto	l1421
	line	2669
	
l40622:; BSR set to: 0

;main.c: 2667: else
;main.c: 2668: {
;main.c: 2669: if(RdPrt(4))
	movlw	(04h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u80541
	goto	u80540
u80541:
	goto	l1421
u80540:
	line	2671
	
l40624:; BSR set to: 0

;main.c: 2670: {
;main.c: 2671: if(M._OST_PL)
	
	btfss	(0+(_M+01Bh))&0ffh,3
	goto	u80551
	goto	u80550
u80551:
	goto	l1413
u80550:
	line	2673
	
l40626:; BSR set to: 0

;main.c: 2672: {
;main.c: 2673: M.ERR_BTY=0x01;
	movlw	low(01h)
	movwf	(0+(_M+022h))&0ffh
	line	2674
	
l40628:; BSR set to: 0

;main.c: 2674: PrintErr(0x01,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movlw	(01h)&0ffh
	
	call	_PrintErr
	goto	l40618
	line	2677
	
l1413:; BSR set to: 0

	line	2679
;main.c: 2677: else
;main.c: 2678: {
;main.c: 2679: M.RPL=0;
	clrf	(0+(_M+02Ah))&0ffh
	line	2680
;main.c: 2680: M._RUSZ_PLOMIEN=1;
	bsf	(0+(_M+011h))&0ffh,0
	line	2681
;main.c: 2681: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
	tstfsz	(0+(_M+01Dh))&0ffh
	goto	u80561
	goto	u80560
u80561:
	goto	l1410
u80560:
	goto	l40620
	line	2688
	
l1405:; BSR set to: 0

	line	2691
;main.c: 2688: else
;main.c: 2689: {
;main.c: 2691: if(PORTCbits.RC0&&PORTAbits.RA7)
	
	btfss	((c:3970)),c,0	;volatile
	goto	u80571
	goto	u80570
u80571:
	goto	l1421
u80570:
	
l40634:; BSR set to: 0

	
	btfss	((c:3968)),c,7	;volatile
	goto	u80581
	goto	u80580
u80581:
	goto	l1421
u80580:
	line	2693
	
l40636:; BSR set to: 0

;main.c: 2692: {
;main.c: 2693: if(M._OST_PL)
	
	btfss	(0+(_M+01Bh))&0ffh,3
	goto	u80591
	goto	u80590
u80591:
	goto	l1418
u80590:
	line	2695
	
l40638:; BSR set to: 0

;main.c: 2694: {
;main.c: 2695: M.ERR_BTY=0x01;
	movlw	low(01h)
	movwf	(0+(_M+022h))&0ffh
	line	2696
	
l40640:; BSR set to: 0

;main.c: 2696: PrintErr(0x01,1);
	movlw	low(01h)
	movwf	((c:?_PrintErr)),c
	movlw	(01h)&0ffh
	
	call	_PrintErr
	goto	l40618
	line	2699
	
l1418:; BSR set to: 0

	line	2701
;main.c: 2699: else
;main.c: 2700: {
;main.c: 2701: M.RPL=0;
	clrf	(0+(_M+02Ah))&0ffh
	line	2702
;main.c: 2702: M._RUSZ_PLOMIEN=1;
	bsf	(0+(_M+011h))&0ffh,0
	line	2703
;main.c: 2703: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
	tstfsz	(0+(_M+01Dh))&0ffh
	goto	u80601
	goto	u80600
u80601:
	goto	l1410
u80600:
	goto	l40620
	line	2709
	
l1421:
	return
	opt stack 0
GLOBAL	__end_of_DecyzjaPLM2
	__end_of_DecyzjaPLM2:
	signat	_DecyzjaPLM2,88
	global	_PrintErr

;; *************** function _PrintErr *****************
;; Defined at:
;;		line 69 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;  kod             1    wreg     const unsigned char 
;;  pls             1   36[COMRAM] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  kod             1   37[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_SetData
;;		_SetStatus
;;		_SetPoz
;; This function is called by:
;;		_main
;;		_DecWSW
;;		_DecERR
;;		_Rozruch
;;		_DecyzjaPLM
;;		_DecyzjaPLM2
;;		_OczekujNaPrzeplywWG
;;		_RuszCiag
;; This function uses a non-reentrant model
;;
psect	text70,class=CODE,space=0,reloc=2
global __ptext70
__ptext70:
psect	text70
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	69
	global	__size_of_PrintErr
	__size_of_PrintErr	equ	__end_of_PrintErr-_PrintErr
	
_PrintErr:
	opt	stack 24
;PrintErr@kod stored from wreg
	movff	wreg,(c:PrintErr@kod)
	line	70
	
l36894:
;print.c: 70: SetData(&DWD[0],0,kod);
	movlb	2	; () banked
	movlw	high(_DWD)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(c:PrintErr@kod),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	71
;print.c: 71: SetData(&DWD[1],0,kod);
	movlw	high(_DWD+04h)
	movwf	((c:?_SetData+1)),c
	movlw	low(_DWD+04h)
	movwf	((c:?_SetData)),c
	movlw	low(0)
	movwf	(0+((c:?_SetData)+02h)),c
	movff	(c:PrintErr@kod),0+((c:?_SetData)+03h)
	call	_SetData	;wreg free
	line	72
;print.c: 72: SetStatus(&DWD[0],0b0010000000000000|0b0000000000100000|0b00000100,0b1111111111111111);
	movlw	high(_DWD)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD)
	movwf	((c:?_SetStatus)),c
	movlw	high(02024h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(02024h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	73
	
l36896:; BSR set to: 2

;print.c: 73: if(pls) SetStatus(&DWD[1],0b0010000000000000|0b0000000000010000|0b00000100,0b1111111111111111);
	movf	((c:PrintErr@pls)),c,w
	btfsc	status,2
	goto	u69761
	goto	u69760
u69761:
	goto	l36900
u69760:
	
l36898:; BSR set to: 2

	movlw	high(_DWD+04h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+04h)
	movwf	((c:?_SetStatus)),c
	movlw	high(02014h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(02014h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	goto	l36902
	line	74
	
l36900:; BSR set to: 2

;print.c: 74: else SetStatus(&DWD[1],0b0010000000000000|0b0000000000100000|0b00000100,0b1111111111111111);
	movlw	high(_DWD+04h)
	movwf	((c:?_SetStatus+1)),c
	movlw	low(_DWD+04h)
	movwf	((c:?_SetStatus)),c
	movlw	high(02024h)
	movwf	(1+((c:?_SetStatus)+02h)),c
	movlw	low(02024h)
	movwf	(0+((c:?_SetStatus)+02h)),c
	movlw	high(0FFFFh)
	movwf	(1+((c:?_SetStatus)+04h)),c
	movlw	low(0FFFFh)
	movwf	(0+((c:?_SetStatus)+04h)),c
	call	_SetStatus	;wreg free
	line	75
	
l36902:; BSR set to: 2

;print.c: 75: SetPoz(0,0);
	movlw	low(0)
	movwf	((c:?_SetPoz)),c
	movlw	(0)&0ffh
	
	call	_SetPoz
	line	76
	
l36904:; BSR set to: 1

;print.c: 76: SetPoz(0,1);
	movlw	low(01h)
	movwf	((c:?_SetPoz)),c
	movlw	(0)&0ffh
	
	call	_SetPoz
	line	77
	
l2424:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PrintErr
	__end_of_PrintErr:
	signat	_PrintErr,8312
	global	_ErrPTG

;; *************** function _ErrPTG *****************
;; Defined at:
;;		line 3630 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    8
;; This function calls:
;;		_GrzejOFF
;;		_VZPauza
;;		_Busy_eep
;;		_Write_b_eep
;;		_WritePWM
;;		_PomiarPCO
;;		_PomiarPCW
;;		_PomiarPFN
;;		_PomiarCO
;;		_PomiarCW
;;		_PomiarCS
;;		_Proba48
;;		_Proba48Z3
;;		_RefInterfaceData
;;		_RdPrt
;;		_ToObiegCO
;;		_ToObiegCW
;;		_ZmienKCOKCW
;;		_Wylacz
;;		_VWybieg
;;		_Rusz48
;;		_Rusz48Z3
;;		_KeyRes
;;		_ToReset
;; This function is called by:
;;		_main
;;		_DecERR
;;		_Rozruch
;;		_DecyzjaPLM
;;		_DecyzjaPLM2
;;		_OczekujNaPrzeplywWG
;;		_RuszCiag
;; This function uses a non-reentrant model
;;
psect	text71,class=CODE,space=0,reloc=2
global __ptext71
__ptext71:
psect	text71
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3630
	global	__size_of_ErrPTG
	__size_of_ErrPTG	equ	__end_of_ErrPTG-_ErrPTG
	
_ErrPTG:; BSR set to: 1

	opt	stack 21
	line	3634
	
l36906:
;main.c: 3634: GrzejOFF();
	call	_GrzejOFF	;wreg free
	line	3635
	
l36908:
;main.c: 3635: VZPauza();
	call	_VZPauza	;wreg free
	line	3636
	
l36910:; BSR set to: 1

;main.c: 3636: if(DtKNF.robg==0)
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u69771
	goto	u69770
u69771:
	goto	l36918
u69770:
	line	3638
	
l36912:; BSR set to: 1

;main.c: 3637: {
;main.c: 3638: if(M.ERR_BTY==5)
	movlb	0	; () banked
	movf	(0+(_M+022h))&0ffh,w
	xorlw	5

	btfss	status,2
	goto	u69781
	goto	u69780
u69781:
	goto	l36918
u69780:
	line	3640
	
l36914:; BSR set to: 0

;main.c: 3639: {
;main.c: 3640: (Busy_eep(), Write_b_eep(0x00C0,M.ERR_BTY));
	call	_Busy_eep	;wreg free
	
l36916:; BSR set to: 0

	movlw	high(0C0h)
	movwf	((c:?_Write_b_eep+1)),c
	movlw	low(0C0h)
	movwf	((c:?_Write_b_eep)),c
	movff	0+(_M+022h),0+((c:?_Write_b_eep)+02h)
	call	_Write_b_eep	;wreg free
	line	3643
	
l36918:
;main.c: 3641: }
;main.c: 3642: }
;main.c: 3643: if((M.ERR_BTY>=1)&&(M.ERR_BTY<=3)) (Busy_eep(), Write_b_eep(0x00C0,M.ERR_BTY));
	movlb	0	; () banked
	movf	(0+(_M+022h))&0ffh,w
	btfsc	status,2
	goto	u69791
	goto	u69790
u69791:
	goto	l36926
u69790:
	
l36920:; BSR set to: 0

	movlw	(04h)&0ffh
	cpfslt	(0+(_M+022h))&0ffh
	goto	u69801
	goto	u69800
u69801:
	goto	l36926
u69800:
	
l36922:; BSR set to: 0

	call	_Busy_eep	;wreg free
	
l36924:; BSR set to: 0

	movlw	high(0C0h)
	movwf	((c:?_Write_b_eep+1)),c
	movlw	low(0C0h)
	movwf	((c:?_Write_b_eep)),c
	movff	0+(_M+022h),0+((c:?_Write_b_eep)+02h)
	call	_Write_b_eep	;wreg free
	line	3644
	
l36926:
;main.c: 3644: M._RUSZ_POMPE=0;
	movlb	0	; () banked
	bcf	(0+(_M+011h))&0ffh,2
	line	3645
	
l36928:; BSR set to: 0

;main.c: 3645: M._ROZRUCH=0;
	bcf	(0+(_M+010h))&0ffh,2
	line	3646
	
l36930:; BSR set to: 0

;main.c: 3646: M._MODULUJ=0;
	bcf	(0+(_M+011h))&0ffh,5
	line	3647
	
l36932:; BSR set to: 0

;main.c: 3647: WritePWM(0);
	movlw	(0)&0ffh
	
	call	_WritePWM
	line	3648
	
l36934:; BSR set to: 0

;main.c: 3648: if(!M._WYLACZ)
	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u69811
	goto	u69810
u69811:
	goto	l1735
u69810:
	line	3650
	
l36936:; BSR set to: 0

;main.c: 3649: {
;main.c: 3650: M.WYL=0;
	clrf	(0+(_M+028h))&0ffh
	line	3651
;main.c: 3651: switch(DtKNF.tpkt)
	goto	l36950
	line	3654
	
l1738:; BSR set to: 1

	line	3656
;main.c: 3654: case 2:
;main.c: 3655: {
;main.c: 3656: if(PORTDbits.RD2) M._WYLACZ=1;
	
	btfss	((c:3971)),c,2	;volatile
	goto	u69821
	goto	u69820
u69821:
	goto	l1735
u69820:
	
l36938:
	movlb	0	; () banked
	bsf	(0+(_M+010h))&0ffh,0
	goto	l1735
	line	3660
	
l1742:; BSR set to: 1

	line	3662
;main.c: 3660: case 3:
;main.c: 3661: {
;main.c: 3662: if(M._ZMKCOCW) M._WYLACZ=1;
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u69831
	goto	u69830
u69831:
	goto	l1743
u69830:
	goto	l36938
	line	3663
	
l1743:; BSR set to: 0

	line	3664
;main.c: 3663: else
;main.c: 3664: if(PORTDbits.RD2) M._WYLACZ=1;
	
	btfss	((c:3971)),c,2	;volatile
	goto	u69841
	goto	u69840
u69841:
	goto	l1735
u69840:
	goto	l36938
	line	3667
;main.c: 3666: }
;main.c: 3667: default:
	
l1746:; BSR set to: 1

	line	3669
;main.c: 3668: {
;main.c: 3669: if(M._ZMKCOCW) M._WYLACZ=1;
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u69851
	goto	u69850
u69851:
	goto	l1747
u69850:
	goto	l36938
	line	3670
	
l1747:; BSR set to: 0

	line	3671
;main.c: 3670: else
;main.c: 3671: if(PORTDbits.RD2) M._WYLACZ=1;
	
	btfss	((c:3971)),c,2	;volatile
	goto	u69861
	goto	u69860
u69861:
	goto	l1735
u69860:
	goto	l36938
	line	3651
	
l36950:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1742
	xorlw	1^0	; case 1
	skipnz
	goto	l1738
	xorlw	2^1	; case 2
	skipnz
	goto	l1738
	xorlw	3^2	; case 3
	skipnz
	goto	l1742
	goto	l1746

	line	3675
	
l1735:
	line	3676
;main.c: 3675: }
;main.c: 3676: if(M._TURBO&&PORTDbits.RD3) M._VWYBIEG=1;
	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,1
	goto	u69871
	goto	u69870
u69871:
	goto	l1750
u69870:
	
l36952:; BSR set to: 0

	
	btfss	((c:3971)),c,3	;volatile
	goto	u69881
	goto	u69880
u69881:
	goto	l1750
u69880:
	
l36954:; BSR set to: 0

	bsf	(0+(_M+010h))&0ffh,6
	
l1750:; BSR set to: 0

	line	3677
;main.c: 3677: M._RUSZ_PWR=0;
	bcf	(0+(_M+010h))&0ffh,5
	line	3678
;main.c: 3678: M.HVZ=0;
	clrf	(0+(_M+031h))&0ffh
	line	3679
;main.c: 3679: M.KRS=0;
	clrf	(0+(_M+030h))&0ffh
	line	3682
;main.c: 3682: while(1)
	
l1751:
	line	3684
# 3684 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
clrwdt ;# 
psect	text71
	line	3685
;main.c: 3685: PFN._opgprg=0;
	movlb	1	; () banked
	bcf	(0+(_PFN+05h))&0ffh,4
	line	3686
;main.c: 3686: PFN._opgres=1;
	bsf	(0+(_PFN+05h))&0ffh,3
	line	3687
;main.c: 3687: PFN._ferr=1;
	bsf	(0+(_PFN+05h))&0ffh,0
	line	3695
	
l36956:; BSR set to: 1

;main.c: 3695: PomiarPCO();
	call	_PomiarPCO	;wreg free
	line	3696
;main.c: 3696: PomiarPCW();
	call	_PomiarPCW	;wreg free
	line	3697
;main.c: 3697: PomiarPFN();
	call	_PomiarPFN	;wreg free
	line	3698
	
l36958:
;main.c: 3698: PomiarCO();
	call	_PomiarCO	;wreg free
	line	3699
	
l36960:; BSR set to: 0

;main.c: 3699: PomiarCW();
	call	_PomiarCW	;wreg free
	line	3700
	
l36962:; BSR set to: 0

;main.c: 3700: PomiarCS();
	call	_PomiarCS	;wreg free
	line	3702
	
l36964:; BSR set to: 1

;main.c: 3702: Proba48();
	call	_Proba48	;wreg free
	line	3703
	
l36966:
;main.c: 3703: Proba48Z3();
	call	_Proba48Z3	;wreg free
	line	3705
	
l36968:
;main.c: 3705: RefInterfaceData();
	call	_RefInterfaceData	;wreg free
	line	3707
;main.c: 3707: switch(DtKNF.tpkt)
	goto	l37082
	line	3710
	
l1754:; BSR set to: 1

	line	3713
;main.c: 3710: case 2:
;main.c: 3711: {
;main.c: 3713: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&RdPrt(13)) ToObiegCO();
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,5
	goto	u69891
	goto	u69890
u69891:
	goto	l1755
u69890:
	
l36970:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u69901
	goto	u69900
u69901:
	goto	l1755
u69900:
	
l36972:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u69911
	goto	u69910
u69911:
	goto	l1755
u69910:
	
l36974:; BSR set to: 0

	call	_ToObiegCO	;wreg free
	goto	l36982
	line	3714
	
l1755:; BSR set to: 0

	line	3715
;main.c: 3714: else
;main.c: 3715: if(!M._ZMKCOCW&&!M._WYLACZ&&!M._RUSZ_48) ToObiegCW();
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u69921
	goto	u69920
u69921:
	goto	l36982
u69920:
	
l36976:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u69931
	goto	u69930
u69931:
	goto	l36982
u69930:
	
l36978:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u69941
	goto	u69940
u69941:
	goto	l36982
u69940:
	
l36980:; BSR set to: 0

	call	_ToObiegCW	;wreg free
	line	3717
	
l36982:; BSR set to: 0

;main.c: 3717: if(!M._WYLACZ&&PORTDbits.RD2)
	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u69951
	goto	u69950
u69951:
	goto	l1759
u69950:
	
l36984:; BSR set to: 0

	
	btfss	((c:3971)),c,2	;volatile
	goto	u69961
	goto	u69960
u69961:
	goto	l1759
u69960:
	line	3719
	
l36986:; BSR set to: 0

;main.c: 3718: {
;main.c: 3719: M._WYLACZ=1;
	bsf	(0+(_M+010h))&0ffh,0
	goto	l1759
	line	3723
;main.c: 3722: }
;main.c: 3723: case 3:
	
l1760:; BSR set to: 1

	line	3726
;main.c: 3724: {
;main.c: 3726: if(!M._ZMKCOCW&&RdPrt(13)) ToObiegCO();
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u69971
	goto	u69970
u69971:
	goto	l1761
u69970:
	
l36988:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u69981
	goto	u69980
u69981:
	goto	l1761
u69980:
	
l36990:; BSR set to: 0

	call	_ToObiegCO	;wreg free
	goto	l37002
	line	3727
	
l1761:; BSR set to: 0

	line	3728
;main.c: 3727: else
;main.c: 3728: if(!M._ZMKCOCW&&!M._WYLACZ&&!M._RUSZ_48&&(!PORTDbits.RD2||M._RUSZ_48Z3)) ToObiegCW();
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u69991
	goto	u69990
u69991:
	goto	l37002
u69990:
	
l36992:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u70001
	goto	u70000
u70001:
	goto	l37002
u70000:
	
l36994:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u70011
	goto	u70010
u70011:
	goto	l37002
u70010:
	
l36996:; BSR set to: 0

	
	btfss	((c:3971)),c,2	;volatile
	goto	u70021
	goto	u70020
u70021:
	goto	l37000
u70020:
	
l36998:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,4
	goto	u70031
	goto	u70030
u70031:
	goto	l37002
u70030:
	
l37000:; BSR set to: 0

	call	_ToObiegCW	;wreg free
	line	3730
	
l37002:; BSR set to: 0

;main.c: 3730: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48&&!M._RUSZ_48Z3)
	
	btfsc	(0+(_M+010h))&0ffh,5
	goto	u70041
	goto	u70040
u70041:
	goto	l1759
u70040:
	
l37004:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u70051
	goto	u70050
u70051:
	goto	l1759
u70050:
	
l37006:; BSR set to: 0

	
	btfsc	((c:3971)),c,2	;volatile
	goto	u70061
	goto	u70060
u70061:
	goto	l1759
u70060:
	
l37008:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u70071
	goto	u70070
u70071:
	goto	l1759
u70070:
	
l37010:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u70081
	goto	u70080
u70081:
	goto	l1759
u70080:
	
l37012:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,4
	goto	u70091
	goto	u70090
u70091:
	goto	l1759
u70090:
	line	3732
	
l37014:; BSR set to: 0

;main.c: 3731: {
;main.c: 3732: if(!M._RPM_CW&&RdPrt(13))
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u70101
	goto	u70100
u70101:
	goto	l1759
u70100:
	
l37016:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u70111
	goto	u70110
u70111:
	goto	l1759
u70110:
	line	3734
	
l37018:; BSR set to: 0

;main.c: 3733: {
;main.c: 3734: M._WYLACZ=1;
	bsf	(0+(_M+010h))&0ffh,0
	line	3735
;main.c: 3735: PORTDbits.RD2=1;
	bsf	((c:3971)),c,2	;volatile
	goto	l1759
	line	3740
;main.c: 3739: }
;main.c: 3740: case 0:
	
l1768:; BSR set to: 1

	line	3743
;main.c: 3741: {
;main.c: 3743: if(!M._ZMKCOCW&&RdPrt(13)) ToObiegCO();
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u70121
	goto	u70120
u70121:
	goto	l1769
u70120:
	
l37020:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u70131
	goto	u70130
u70131:
	goto	l1769
u70130:
	
l37022:; BSR set to: 0

	call	_ToObiegCO	;wreg free
	goto	l37036
	line	3744
	
l1769:; BSR set to: 0

	line	3745
;main.c: 3744: else
;main.c: 3745: if(!M._ZMKCOCW&&RdPrt(10)) ToObiegCW();
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u70141
	goto	u70140
u70141:
	goto	l1771
u70140:
	
l37024:; BSR set to: 0

	movlw	(0Ah)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u70151
	goto	u70150
u70151:
	goto	l1771
u70150:
	
l37026:; BSR set to: 0

	call	_ToObiegCW	;wreg free
	goto	l37036
	line	3746
	
l1771:; BSR set to: 0

	line	3747
;main.c: 3746: else
;main.c: 3747: if(!M._ZMKCOCW&&!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48) ToObiegCW();
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u70161
	goto	u70160
u70161:
	goto	l37036
u70160:
	
l37028:; BSR set to: 0

	
	btfsc	((c:3971)),c,2	;volatile
	goto	u70171
	goto	u70170
u70171:
	goto	l37036
u70170:
	
l37030:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u70181
	goto	u70180
u70181:
	goto	l37036
u70180:
	
l37032:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u70191
	goto	u70190
u70191:
	goto	l37036
u70190:
	goto	l37026
	line	3749
	
l37036:; BSR set to: 0

;main.c: 3749: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48)
	
	btfsc	(0+(_M+010h))&0ffh,5
	goto	u70201
	goto	u70200
u70201:
	goto	l1759
u70200:
	
l37038:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u70211
	goto	u70210
u70211:
	goto	l1759
u70210:
	
l37040:; BSR set to: 0

	
	btfsc	((c:3971)),c,2	;volatile
	goto	u70221
	goto	u70220
u70221:
	goto	l1759
u70220:
	
l37042:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u70231
	goto	u70230
u70231:
	goto	l1759
u70230:
	
l37044:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u70241
	goto	u70240
u70241:
	goto	l1759
u70240:
	line	3751
	
l37046:; BSR set to: 0

;main.c: 3750: {
;main.c: 3751: if((!M._RPM_CW&&RdPrt(13))||(M._RPM_CW&&RdPrt(10)))
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u70251
	goto	u70250
u70251:
	goto	l1779
u70250:
	
l37048:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfsc	status,0
	goto	u70261
	goto	u70260
u70261:
	goto	l37018
u70260:
	
l1779:; BSR set to: 0

	
	btfss	(0+(_M+01Bh))&0ffh,7
	goto	u70271
	goto	u70270
u70271:
	goto	l1759
u70270:
	
l37050:; BSR set to: 0

	movlw	(0Ah)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u70281
	goto	u70280
u70281:
	goto	l1759
u70280:
	goto	l37018
	line	3759
;main.c: 3758: }
;main.c: 3759: default:
	
l1780:; BSR set to: 1

	line	3762
;main.c: 3760: {
;main.c: 3762: if(!M._ZMKCOCW&&RdPrt(13)) ToObiegCO();
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u70291
	goto	u70290
u70291:
	goto	l1781
u70290:
	
l37052:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u70301
	goto	u70300
u70301:
	goto	l1781
u70300:
	
l37054:; BSR set to: 0

	call	_ToObiegCO	;wreg free
	goto	l37064
	line	3763
	
l1781:; BSR set to: 0

	line	3764
;main.c: 3763: else
;main.c: 3764: if(!M._ZMKCOCW&&!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48) ToObiegCW();
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u70311
	goto	u70310
u70311:
	goto	l37064
u70310:
	
l37056:; BSR set to: 0

	
	btfsc	((c:3971)),c,2	;volatile
	goto	u70321
	goto	u70320
u70321:
	goto	l37064
u70320:
	
l37058:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u70331
	goto	u70330
u70331:
	goto	l37064
u70330:
	
l37060:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u70341
	goto	u70340
u70341:
	goto	l37064
u70340:
	
l37062:; BSR set to: 0

	call	_ToObiegCW	;wreg free
	line	3766
	
l37064:; BSR set to: 0

;main.c: 3766: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48)
	
	btfsc	(0+(_M+010h))&0ffh,5
	goto	u70351
	goto	u70350
u70351:
	goto	l1759
u70350:
	
l37066:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u70361
	goto	u70360
u70361:
	goto	l1759
u70360:
	
l37068:; BSR set to: 0

	
	btfsc	((c:3971)),c,2	;volatile
	goto	u70371
	goto	u70370
u70371:
	goto	l1759
u70370:
	
l37070:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,0
	goto	u70381
	goto	u70380
u70381:
	goto	l1759
u70380:
	
l37072:; BSR set to: 0

	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u70391
	goto	u70390
u70391:
	goto	l1759
u70390:
	line	3768
	
l37074:; BSR set to: 0

;main.c: 3767: {
;main.c: 3768: if(!M._RPM_CW&&RdPrt(13))
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u70401
	goto	u70400
u70401:
	goto	l1759
u70400:
	
l37076:; BSR set to: 0

	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u70411
	goto	u70410
u70411:
	goto	l1759
u70410:
	goto	l37018
	line	3707
	
l37082:; BSR set to: 1

	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1768
	xorlw	1^0	; case 1
	skipnz
	goto	l1754
	xorlw	2^1	; case 2
	skipnz
	goto	l1754
	xorlw	3^2	; case 3
	skipnz
	goto	l1760
	goto	l1780

	line	3776
	
l1759:; BSR set to: 0

	line	3778
;main.c: 3778: if(M._ZMKCOCW) ZmienKCOKCW();
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u70421
	goto	u70420
u70421:
	goto	l37086
u70420:
	
l37084:; BSR set to: 0

	call	_ZmienKCOKCW	;wreg free
	line	3779
	
l37086:
;main.c: 3779: if(M._WYLACZ) Wylacz();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,0
	goto	u70431
	goto	u70430
u70431:
	goto	l37090
u70430:
	
l37088:; BSR set to: 0

	call	_Wylacz	;wreg free
	line	3780
	
l37090:
;main.c: 3780: if(M._VWYBIEG) VWybieg();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,6
	goto	u70441
	goto	u70440
u70441:
	goto	l37094
u70440:
	
l37092:; BSR set to: 0

	call	_VWybieg	;wreg free
	line	3781
	
l37094:
;main.c: 3781: if(M._RUSZ_48) Rusz48();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,3
	goto	u70451
	goto	u70450
u70451:
	goto	l37098
u70450:
	
l37096:; BSR set to: 0

	call	_Rusz48	;wreg free
	line	3782
	
l37098:
;main.c: 3782: if(M._RUSZ_48Z3) Rusz48Z3();
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,4
	goto	u70461
	goto	u70460
u70461:
	goto	l1790
u70460:
	
l37100:; BSR set to: 0

	call	_Rusz48Z3	;wreg free
	
l1790:
	line	3785
;main.c: 3785: if(KeyRes())
	call	_KeyRes	;wreg free
	btfss	status,0
	goto	u70471
	goto	u70470
u70471:
	goto	l1751
u70470:
	line	3787
	
l37102:
;main.c: 3786: {
;main.c: 3787: PORTDbits.RD3=0;
	bcf	((c:3971)),c,3	;volatile
	line	3788
;main.c: 3788: PORTDbits.RD2=0;
	bcf	((c:3971)),c,2	;volatile
	line	3789
	
l37104:
;main.c: 3789: ToReset();
	call	_ToReset	;wreg free
	goto	l1751
	return
	opt stack 0
psect	text72,class=CODE,space=0,reloc=2
global __ptext72
__ptext72:
	line	3792
GLOBAL	__end_of_ErrPTG
	__end_of_ErrPTG:
	signat	_ErrPTG,88
	global	_PomiarCO

;; *************** function _PomiarCO *****************
;; Defined at:
;;		line 322 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_ReadAC
;;		_ReadTabNTC
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text72
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	322
	global	__size_of_PomiarCO
	__size_of_PomiarCO	equ	__end_of_PomiarCO-_PomiarCO
	
_PomiarCO:
	opt	stack 22
	line	323
	
l28610:
;pomiar.c: 323: DtCO.AC_CO=ReadAC(0);
	movlw	(0)&0ffh
	
	call	_ReadAC
	movlb	0	; () banked
	movwf	(0+(_DtCO+0Ch))&0ffh
	line	324
;pomiar.c: 324: DtCO.CO=ReadTabNTC(DtCO.AC_CO);
	movf	(0+(_DtCO+0Ch))&0ffh,w
	
	call	_ReadTabNTC
	movlb	0	; () banked
	movwf	(0+(_DtCO+02h))&0ffh
	line	326
	
l28612:; BSR set to: 0

;pomiar.c: 326: if(DtCO.AC_CO<=0X28||DtCO.AC_CO>=0XF5)
	lfsr	2,_DtCO+0Ch
	movlw	(029h-1)
	cpfsgt	indf2
	goto	u49161
	goto	u49160
u49161:
	goto	l2008
u49160:
	
l28614:; BSR set to: 0

	lfsr	2,_DtCO+0Ch
	movlw	(0F5h-1)
	cpfsgt	indf2
	goto	u49171
	goto	u49170
u49171:
	goto	l2006
u49170:
	
l2008:; BSR set to: 0

	line	328
;pomiar.c: 327: {
;pomiar.c: 328: DtCO._err_CO=1;
	bsf	((_DtCO))&0ffh,0
	line	329
;pomiar.c: 329: DtCO._su_CO=0;
	bcf	((_DtCO))&0ffh,1
	line	330
;pomiar.c: 330: DtCO._ad_CO=0;
	bcf	((_DtCO))&0ffh,2
	line	331
;pomiar.c: 331: DtCO._cold_CO=0;
	bcf	(0+(_DtCO+01h))&0ffh,2
	line	332
;pomiar.c: 332: DtCO._hot_CO=0;
	bcf	(0+(_DtCO+01h))&0ffh,3
	line	333
;pomiar.c: 333: DtCO._on_DZ_CO=0;
	bcf	((_DtCO))&0ffh,5
	line	334
;pomiar.c: 334: DtCO._su_DZ_CO=0;
	bcf	((_DtCO))&0ffh,6
	line	335
;pomiar.c: 335: DtCO._ad_DZ_CO=0;
	bcf	((_DtCO))&0ffh,7
	line	336
;pomiar.c: 336: DtCO._ptwp_CO=0;
	bcf	(0+(_DtCO+01h))&0ffh,0
	line	337
;pomiar.c: 337: DtCO._pz_CO=0;
	bcf	(0+(_DtCO+01h))&0ffh,1
	line	338
;pomiar.c: 338: DtCO._su_SRW_CO=0;
	bcf	((_DtCO))&0ffh,3
	line	339
;pomiar.c: 339: DtCO._ad_SRW_CO=0;
	bcf	((_DtCO))&0ffh,4
	line	340
;pomiar.c: 340: return;
	goto	l2009
	line	342
	
l2006:; BSR set to: 0

;pomiar.c: 342: else DtCO._err_CO=0;
	bcf	((_DtCO))&0ffh,0
	goto	l28780
	line	348
	
l28618:; BSR set to: 1

;pomiar.c: 346: case 2:
;pomiar.c: 347: {
;pomiar.c: 348: if((DtCO.CO-DtCO.PPCO)>=5) DtCO._ad_CO=1;
	movlb	0	; () banked
	movf	(0+(_DtCO+04h))&0ffh,w
	movff	0+(_DtCO+02h),??_PomiarCO+0+0
	clrf	(??_PomiarCO+0+0+1)&0ffh,c
	subwf	(??_PomiarCO+0+0),c
	movlw	0
	subwfb	(??_PomiarCO+0+1),c
	movf	(??_PomiarCO+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	05h
	btfsc	status,2
	subwf	(??_PomiarCO+0+0),c,w
	btfss	status,0
	goto	u49181
	goto	u49180
u49181:
	goto	l2014
u49180:
	
l28620:; BSR set to: 0

	bsf	((_DtCO))&0ffh,2
	goto	l28622
	line	349
	
l2014:; BSR set to: 0

;pomiar.c: 349: else DtCO._ad_CO=0;
	bcf	((_DtCO))&0ffh,2
	line	350
	
l28622:; BSR set to: 0

;pomiar.c: 350: if((DtCO.PPCO-DtCO.CO)>=5) DtCO._su_CO=1;
	movf	(0+(_DtCO+02h))&0ffh,w
	movff	0+(_DtCO+04h),??_PomiarCO+0+0
	clrf	(??_PomiarCO+0+0+1)&0ffh,c
	subwf	(??_PomiarCO+0+0),c
	movlw	0
	subwfb	(??_PomiarCO+0+1),c
	movf	(??_PomiarCO+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	05h
	btfsc	status,2
	subwf	(??_PomiarCO+0+0),c,w
	btfss	status,0
	goto	u49191
	goto	u49190
u49191:
	goto	l2016
u49190:
	
l28624:; BSR set to: 0

	bsf	((_DtCO))&0ffh,1
	goto	l28626
	line	351
	
l2016:; BSR set to: 0

;pomiar.c: 351: else DtCO._su_CO=0;
	bcf	((_DtCO))&0ffh,1
	line	352
	
l28626:; BSR set to: 0

;pomiar.c: 352: if(DtCO.CO<=50) DtCO._ptwp_CO=1;
	movlw	(033h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49201
	goto	u49200
u49201:
	goto	l28630
u49200:
	
l28628:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,0
	line	353
	
l28630:; BSR set to: 0

;pomiar.c: 353: if(DtCO.CO>50+1) DtCO._ptwp_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(034h-1)
	cpfsgt	indf2
	goto	u49211
	goto	u49210
u49211:
	goto	l28634
u49210:
	
l28632:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,0
	line	354
	
l28634:; BSR set to: 0

;pomiar.c: 354: if(DtCO.CO<=82) DtCO._pz_CO=1;
	movlw	(053h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49221
	goto	u49220
u49221:
	goto	l28638
u49220:
	
l28636:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,1
	line	355
	
l28638:; BSR set to: 0

;pomiar.c: 355: if(DtCO.CO>88) DtCO._pz_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(059h-1)
	cpfsgt	indf2
	goto	u49231
	goto	u49230
u49231:
	goto	l28642
u49230:
	
l28640:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,1
	line	356
	
l28642:; BSR set to: 0

;pomiar.c: 356: if(DtCO.CO<=7) DtCO._cold_CO=1;
	movlw	(08h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49241
	goto	u49240
u49241:
	goto	l28646
u49240:
	
l28644:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,2
	line	357
	
l28646:; BSR set to: 0

;pomiar.c: 357: if(DtCO.CO>7+1) DtCO._cold_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(09h-1)
	cpfsgt	indf2
	goto	u49251
	goto	u49250
u49251:
	goto	l28650
u49250:
	
l28648:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,2
	line	358
	
l28650:; BSR set to: 0

;pomiar.c: 358: if(DtCO.CO>=88) DtCO._hot_CO=1;
	lfsr	2,_DtCO+02h
	movlw	(058h-1)
	cpfsgt	indf2
	goto	u49261
	goto	u49260
u49261:
	goto	l28654
u49260:
	
l28652:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,3
	line	359
	
l28654:; BSR set to: 0

;pomiar.c: 359: if(DtCO.CO<88-1) DtCO._hot_CO=0;
	movlw	(057h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49271
	goto	u49270
u49271:
	goto	l28782
u49270:
	
l28656:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,3
	goto	l28782
	line	364
	
l28658:; BSR set to: 1

;pomiar.c: 363: {
;pomiar.c: 364: if((DtCO.CO-DtCO.PPCO)>=5) DtCO._ad_CO=1;
	movlb	0	; () banked
	movf	(0+(_DtCO+04h))&0ffh,w
	movff	0+(_DtCO+02h),??_PomiarCO+0+0
	clrf	(??_PomiarCO+0+0+1)&0ffh,c
	subwf	(??_PomiarCO+0+0),c
	movlw	0
	subwfb	(??_PomiarCO+0+1),c
	movf	(??_PomiarCO+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	05h
	btfsc	status,2
	subwf	(??_PomiarCO+0+0),c,w
	btfss	status,0
	goto	u49281
	goto	u49280
u49281:
	goto	l2028
u49280:
	
l28660:; BSR set to: 0

	bsf	((_DtCO))&0ffh,2
	goto	l28662
	line	365
	
l2028:; BSR set to: 0

;pomiar.c: 365: else DtCO._ad_CO=0;
	bcf	((_DtCO))&0ffh,2
	line	366
	
l28662:; BSR set to: 0

;pomiar.c: 366: if((DtCO.PPCO-DtCO.CO)>=5) DtCO._su_CO=1;
	movf	(0+(_DtCO+02h))&0ffh,w
	movff	0+(_DtCO+04h),??_PomiarCO+0+0
	clrf	(??_PomiarCO+0+0+1)&0ffh,c
	subwf	(??_PomiarCO+0+0),c
	movlw	0
	subwfb	(??_PomiarCO+0+1),c
	movf	(??_PomiarCO+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	05h
	btfsc	status,2
	subwf	(??_PomiarCO+0+0),c,w
	btfss	status,0
	goto	u49291
	goto	u49290
u49291:
	goto	l2030
u49290:
	
l28664:; BSR set to: 0

	bsf	((_DtCO))&0ffh,1
	goto	l28666
	line	367
	
l2030:; BSR set to: 0

;pomiar.c: 367: else DtCO._su_CO=0;
	bcf	((_DtCO))&0ffh,1
	line	368
	
l28666:; BSR set to: 0

;pomiar.c: 368: if(DtCO.CO<=82) DtCO._ptwp_CO=1;
	movlw	(053h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49301
	goto	u49300
u49301:
	goto	l28670
u49300:
	
l28668:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,0
	line	369
	
l28670:; BSR set to: 0

;pomiar.c: 369: if(DtCO.CO>82+1) DtCO._ptwp_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(054h-1)
	cpfsgt	indf2
	goto	u49311
	goto	u49310
u49311:
	goto	l28674
u49310:
	
l28672:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,0
	line	370
	
l28674:; BSR set to: 0

;pomiar.c: 370: if(DtCO.CO<=82) DtCO._pz_CO=1;
	movlw	(053h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49321
	goto	u49320
u49321:
	goto	l28678
u49320:
	
l28676:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,1
	line	371
	
l28678:; BSR set to: 0

;pomiar.c: 371: if(DtCO.CO>88) DtCO._pz_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(059h-1)
	cpfsgt	indf2
	goto	u49331
	goto	u49330
u49331:
	goto	l28682
u49330:
	
l28680:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,1
	line	372
	
l28682:; BSR set to: 0

;pomiar.c: 372: if(DtCO.CO<=7) DtCO._cold_CO=1;
	movlw	(08h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49341
	goto	u49340
u49341:
	goto	l28686
u49340:
	
l28684:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,2
	line	373
	
l28686:; BSR set to: 0

;pomiar.c: 373: if(DtCO.CO>7+1) DtCO._cold_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(09h-1)
	cpfsgt	indf2
	goto	u49351
	goto	u49350
u49351:
	goto	l28690
u49350:
	
l28688:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,2
	line	374
	
l28690:; BSR set to: 0

;pomiar.c: 374: if(DtCO.CO>=88) DtCO._hot_CO=1;
	lfsr	2,_DtCO+02h
	movlw	(058h-1)
	cpfsgt	indf2
	goto	u49361
	goto	u49360
u49361:
	goto	l28694
u49360:
	
l28692:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,3
	line	375
	
l28694:; BSR set to: 0

;pomiar.c: 375: if(DtCO.CO<88-1) DtCO._hot_CO=0;
	movlw	(057h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49371
	goto	u49370
u49371:
	goto	l28782
u49370:
	goto	l28656
	line	380
	
l28698:; BSR set to: 1

;pomiar.c: 379: {
;pomiar.c: 380: if((DtCO.CO-DtCO.PPCO)>=5) DtCO._ad_CO=1;
	movlb	0	; () banked
	movf	(0+(_DtCO+04h))&0ffh,w
	movff	0+(_DtCO+02h),??_PomiarCO+0+0
	clrf	(??_PomiarCO+0+0+1)&0ffh,c
	subwf	(??_PomiarCO+0+0),c
	movlw	0
	subwfb	(??_PomiarCO+0+1),c
	movf	(??_PomiarCO+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	05h
	btfsc	status,2
	subwf	(??_PomiarCO+0+0),c,w
	btfss	status,0
	goto	u49381
	goto	u49380
u49381:
	goto	l2041
u49380:
	
l28700:; BSR set to: 0

	bsf	((_DtCO))&0ffh,2
	goto	l28702
	line	381
	
l2041:; BSR set to: 0

;pomiar.c: 381: else DtCO._ad_CO=0;
	bcf	((_DtCO))&0ffh,2
	line	382
	
l28702:; BSR set to: 0

;pomiar.c: 382: if((DtCO.PPCO-DtCO.CO)>=5) DtCO._su_CO=1;
	movf	(0+(_DtCO+02h))&0ffh,w
	movff	0+(_DtCO+04h),??_PomiarCO+0+0
	clrf	(??_PomiarCO+0+0+1)&0ffh,c
	subwf	(??_PomiarCO+0+0),c
	movlw	0
	subwfb	(??_PomiarCO+0+1),c
	movf	(??_PomiarCO+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	05h
	btfsc	status,2
	subwf	(??_PomiarCO+0+0),c,w
	btfss	status,0
	goto	u49391
	goto	u49390
u49391:
	goto	l2043
u49390:
	
l28704:; BSR set to: 0

	bsf	((_DtCO))&0ffh,1
	goto	l28706
	line	383
	
l2043:; BSR set to: 0

;pomiar.c: 383: else DtCO._su_CO=0;
	bcf	((_DtCO))&0ffh,1
	line	384
	
l28706:; BSR set to: 0

;pomiar.c: 384: if(DtCO.CO<=82) DtCO._ptwp_CO=1;
	movlw	(053h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49401
	goto	u49400
u49401:
	goto	l28710
u49400:
	
l28708:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,0
	line	385
	
l28710:; BSR set to: 0

;pomiar.c: 385: if(DtCO.CO>82+1) DtCO._ptwp_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(054h-1)
	cpfsgt	indf2
	goto	u49411
	goto	u49410
u49411:
	goto	l28714
u49410:
	
l28712:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,0
	line	386
	
l28714:; BSR set to: 0

;pomiar.c: 386: if(DtCO.CO<=82) DtCO._pz_CO=1;
	movlw	(053h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49421
	goto	u49420
u49421:
	goto	l28718
u49420:
	
l28716:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,1
	line	387
	
l28718:; BSR set to: 0

;pomiar.c: 387: if(DtCO.CO>88) DtCO._pz_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(059h-1)
	cpfsgt	indf2
	goto	u49431
	goto	u49430
u49431:
	goto	l28722
u49430:
	
l28720:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,1
	line	388
	
l28722:; BSR set to: 0

;pomiar.c: 388: if(DtCO.CO<=7) DtCO._cold_CO=1;
	movlw	(08h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49441
	goto	u49440
u49441:
	goto	l28726
u49440:
	
l28724:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,2
	line	389
	
l28726:; BSR set to: 0

;pomiar.c: 389: if(DtCO.CO>7+1) DtCO._cold_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(09h-1)
	cpfsgt	indf2
	goto	u49451
	goto	u49450
u49451:
	goto	l28730
u49450:
	
l28728:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,2
	line	390
	
l28730:; BSR set to: 0

;pomiar.c: 390: if(DtCO.CO>=88) DtCO._hot_CO=1;
	lfsr	2,_DtCO+02h
	movlw	(058h-1)
	cpfsgt	indf2
	goto	u49461
	goto	u49460
u49461:
	goto	l28734
u49460:
	
l28732:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,3
	line	391
	
l28734:; BSR set to: 0

;pomiar.c: 391: if(DtCO.CO<88-1) DtCO._hot_CO=0;
	movlw	(057h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49471
	goto	u49470
u49471:
	goto	l28782
u49470:
	goto	l28656
	line	396
	
l28738:; BSR set to: 1

;pomiar.c: 395: {
;pomiar.c: 396: if((DtCO.CO-DtCO.PPCO)>=5) DtCO._ad_CO=1;
	movlb	0	; () banked
	movf	(0+(_DtCO+04h))&0ffh,w
	movff	0+(_DtCO+02h),??_PomiarCO+0+0
	clrf	(??_PomiarCO+0+0+1)&0ffh,c
	subwf	(??_PomiarCO+0+0),c
	movlw	0
	subwfb	(??_PomiarCO+0+1),c
	movf	(??_PomiarCO+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	05h
	btfsc	status,2
	subwf	(??_PomiarCO+0+0),c,w
	btfss	status,0
	goto	u49481
	goto	u49480
u49481:
	goto	l2054
u49480:
	
l28740:; BSR set to: 0

	bsf	((_DtCO))&0ffh,2
	goto	l28742
	line	397
	
l2054:; BSR set to: 0

;pomiar.c: 397: else DtCO._ad_CO=0;
	bcf	((_DtCO))&0ffh,2
	line	398
	
l28742:; BSR set to: 0

;pomiar.c: 398: if((DtCO.PPCO-DtCO.CO)>=5) DtCO._su_CO=1;
	movf	(0+(_DtCO+02h))&0ffh,w
	movff	0+(_DtCO+04h),??_PomiarCO+0+0
	clrf	(??_PomiarCO+0+0+1)&0ffh,c
	subwf	(??_PomiarCO+0+0),c
	movlw	0
	subwfb	(??_PomiarCO+0+1),c
	movf	(??_PomiarCO+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	05h
	btfsc	status,2
	subwf	(??_PomiarCO+0+0),c,w
	btfss	status,0
	goto	u49491
	goto	u49490
u49491:
	goto	l2056
u49490:
	
l28744:; BSR set to: 0

	bsf	((_DtCO))&0ffh,1
	goto	l28746
	line	399
	
l2056:; BSR set to: 0

;pomiar.c: 399: else DtCO._su_CO=0;
	bcf	((_DtCO))&0ffh,1
	line	400
	
l28746:; BSR set to: 0

;pomiar.c: 400: if(DtCO.CO<=82) DtCO._ptwp_CO=1;
	movlw	(053h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49501
	goto	u49500
u49501:
	goto	l28750
u49500:
	
l28748:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,0
	line	401
	
l28750:; BSR set to: 0

;pomiar.c: 401: if(DtCO.CO>82+1) DtCO._ptwp_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(054h-1)
	cpfsgt	indf2
	goto	u49511
	goto	u49510
u49511:
	goto	l28754
u49510:
	
l28752:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,0
	line	402
	
l28754:; BSR set to: 0

;pomiar.c: 402: if(DtCO.CO<=82) DtCO._pz_CO=1;
	movlw	(053h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49521
	goto	u49520
u49521:
	goto	l28758
u49520:
	
l28756:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,1
	line	403
	
l28758:; BSR set to: 0

;pomiar.c: 403: if(DtCO.CO>88) DtCO._pz_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(059h-1)
	cpfsgt	indf2
	goto	u49531
	goto	u49530
u49531:
	goto	l28762
u49530:
	
l28760:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,1
	line	404
	
l28762:; BSR set to: 0

;pomiar.c: 404: if(DtCO.CO<=7) DtCO._cold_CO=1;
	movlw	(08h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49541
	goto	u49540
u49541:
	goto	l28766
u49540:
	
l28764:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,2
	line	405
	
l28766:; BSR set to: 0

;pomiar.c: 405: if(DtCO.CO>7+1) DtCO._cold_CO=0;
	lfsr	2,_DtCO+02h
	movlw	(09h-1)
	cpfsgt	indf2
	goto	u49551
	goto	u49550
u49551:
	goto	l28770
u49550:
	
l28768:; BSR set to: 0

	bcf	(0+(_DtCO+01h))&0ffh,2
	line	406
	
l28770:; BSR set to: 0

;pomiar.c: 406: if(DtCO.CO>=88) DtCO._hot_CO=1;
	lfsr	2,_DtCO+02h
	movlw	(058h-1)
	cpfsgt	indf2
	goto	u49561
	goto	u49560
u49561:
	goto	l28774
u49560:
	
l28772:; BSR set to: 0

	bsf	(0+(_DtCO+01h))&0ffh,3
	line	407
	
l28774:; BSR set to: 0

;pomiar.c: 407: if(DtCO.CO<88-1) DtCO._hot_CO=0;
	movlw	(057h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49571
	goto	u49570
u49571:
	goto	l28782
u49570:
	goto	l28656
	line	343
	
l28780:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l28698
	xorlw	1^0	; case 1
	skipnz
	goto	l28618
	xorlw	2^1	; case 2
	skipnz
	goto	l28618
	xorlw	3^2	; case 3
	skipnz
	goto	l28658
	goto	l28738

	line	412
	
l28782:; BSR set to: 0

;pomiar.c: 412: if(DtCO.CO<=8)
	movlw	(09h)&0ffh
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49581
	goto	u49580
u49581:
	goto	l2066
u49580:
	line	414
	
l28784:; BSR set to: 0

;pomiar.c: 413: {
;pomiar.c: 414: DtCO._su_DZ_CO=1;
	bsf	((_DtCO))&0ffh,6
	line	415
;pomiar.c: 415: DtCO._on_DZ_CO=1;
	bsf	((_DtCO))&0ffh,5
	line	416
;pomiar.c: 416: }
	goto	l28786
	line	417
	
l2066:; BSR set to: 0

;pomiar.c: 417: else DtCO._su_DZ_CO=0;
	bcf	((_DtCO))&0ffh,6
	line	418
	
l28786:; BSR set to: 0

;pomiar.c: 418: if(DtCO.CO>20)
	lfsr	2,_DtCO+02h
	movlw	(015h-1)
	cpfsgt	indf2
	goto	u49591
	goto	u49590
u49591:
	goto	l2068
u49590:
	line	420
	
l28788:; BSR set to: 0

;pomiar.c: 419: {
;pomiar.c: 420: DtCO._ad_DZ_CO=1;
	bsf	((_DtCO))&0ffh,7
	line	421
;pomiar.c: 421: DtCO._on_DZ_CO=0;
	bcf	((_DtCO))&0ffh,5
	line	422
;pomiar.c: 422: }
	goto	l2069
	line	423
	
l2068:; BSR set to: 0

;pomiar.c: 423: else DtCO._ad_DZ_CO=0;
	bcf	((_DtCO))&0ffh,7
	
l2069:; BSR set to: 0

	line	425
;pomiar.c: 425: if(!DtKNF.opdg)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Fh))&0ffh
	goto	u49601
	goto	u49600
u49601:
	goto	l28798
u49600:
	line	427
	
l28790:; BSR set to: 1

;pomiar.c: 426: {
;pomiar.c: 427: if(DtCO.CO<=78) DtCO._su_SRW_CO=1;
	movlw	(04Fh)&0ffh
	movlb	0	; () banked
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49611
	goto	u49610
u49611:
	goto	l2071
u49610:
	
l28792:; BSR set to: 0

	bsf	((_DtCO))&0ffh,3
	goto	l28794
	line	428
	
l2071:; BSR set to: 0

;pomiar.c: 428: else DtCO._su_SRW_CO=0;
	bcf	((_DtCO))&0ffh,3
	line	429
	
l28794:; BSR set to: 0

;pomiar.c: 429: if(DtCO.CO>88) DtCO._ad_SRW_CO=1;
	lfsr	2,_DtCO+02h
	movlw	(059h-1)
	cpfsgt	indf2
	goto	u49621
	goto	u49620
u49621:
	goto	l2073
u49620:
	
l28796:; BSR set to: 0

	bsf	((_DtCO))&0ffh,4
	goto	l2009
	line	430
	
l2073:; BSR set to: 0

;pomiar.c: 430: else DtCO._ad_SRW_CO=0;
	bcf	((_DtCO))&0ffh,4
	goto	l2009
	line	434
	
l28798:; BSR set to: 1

;pomiar.c: 432: else
;pomiar.c: 433: {
;pomiar.c: 434: if(DtCO.CO<=48) DtCO._su_SRW_CO=1;
	movlw	(031h)&0ffh
	movlb	0	; () banked
	cpfslt	(0+(_DtCO+02h))&0ffh
	goto	u49631
	goto	u49630
u49631:
	goto	l2076
u49630:
	
l28800:; BSR set to: 0

	bsf	((_DtCO))&0ffh,3
	goto	l28802
	line	435
	
l2076:; BSR set to: 0

;pomiar.c: 435: else DtCO._su_SRW_CO=0;
	bcf	((_DtCO))&0ffh,3
	line	436
	
l28802:; BSR set to: 0

;pomiar.c: 436: if(DtCO.CO>58) DtCO._ad_SRW_CO=1;
	lfsr	2,_DtCO+02h
	movlw	(03Bh-1)
	cpfsgt	indf2
	goto	u49641
	goto	u49640
u49641:
	goto	l2073
u49640:
	goto	l28796
	line	439
	
l2009:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PomiarCO
	__end_of_PomiarCO:
	signat	_PomiarCO,88
	global	_PomiarCW

;; *************** function _PomiarCW *****************
;; Defined at:
;;		line 460 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_ReadAC
;;		_ReadTabNTC
;;		_RdPrt
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text73,class=CODE,space=0,reloc=2
global __ptext73
__ptext73:
psect	text73
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	460
	global	__size_of_PomiarCW
	__size_of_PomiarCW	equ	__end_of_PomiarCW-_PomiarCW
	
_PomiarCW:; BSR set to: 0

	opt	stack 22
	line	461
	
l37106:; BSR set to: 0

;pomiar.c: 461: DtCW.AC_CW=ReadAC(1);
	movlw	(01h)&0ffh
	
	call	_ReadAC
	movwf	(0+(_DtCW+0Ch))&0ffh
	line	462
;pomiar.c: 462: DtCW.CW=ReadTabNTC(DtCW.AC_CW);
	movf	(0+(_DtCW+0Ch))&0ffh,w
	
	call	_ReadTabNTC
	movlb	0	; () banked
	movwf	(0+(_DtCW+02h))&0ffh
	line	464
	
l37108:; BSR set to: 0

;pomiar.c: 464: if(DtCW.AC_CW<=0X28||DtCW.AC_CW>=0XF5)
	lfsr	2,_DtCW+0Ch
	movlw	(029h-1)
	cpfsgt	indf2
	goto	u70481
	goto	u70480
u70481:
	goto	l2091
u70480:
	
l37110:; BSR set to: 0

	lfsr	2,_DtCW+0Ch
	movlw	(0F5h-1)
	cpfsgt	indf2
	goto	u70491
	goto	u70490
u70491:
	goto	l2089
u70490:
	
l2091:; BSR set to: 0

	line	466
;pomiar.c: 465: {
;pomiar.c: 466: DtCW._err_CW=1;
	bsf	((_DtCW))&0ffh,0
	line	467
;pomiar.c: 467: DtCW._su_CW=0;
	bcf	((_DtCW))&0ffh,1
	line	468
;pomiar.c: 468: DtCW._ad_CW=0;
	bcf	((_DtCW))&0ffh,2
	line	469
;pomiar.c: 469: DtCW._cold_CW=0;
	bcf	((_DtCW))&0ffh,7
	line	470
;pomiar.c: 470: DtCW._on_DZ_CW=0;
	bcf	((_DtCW))&0ffh,4
	line	471
;pomiar.c: 471: DtCW._su_DZ_CW=0;
	bcf	((_DtCW))&0ffh,5
	line	472
;pomiar.c: 472: DtCW._ad_DZ_CW=0;
	bcf	((_DtCW))&0ffh,6
	line	473
;pomiar.c: 473: DtCW._wpz_CW=0;
	bcf	((_DtCW))&0ffh,3
	line	474
;pomiar.c: 474: return;
	goto	l2092
	line	476
	
l2089:; BSR set to: 0

;pomiar.c: 476: else DtCW._err_CW=0;
	bcf	((_DtCW))&0ffh,0
	goto	l37168
	line	486
	
l37114:; BSR set to: 1

;pomiar.c: 480: case 2:
;pomiar.c: 481: {
;pomiar.c: 486: if(DtCW.PCW<55)
	movlw	(037h)&0ffh
	movlb	0	; () banked
	cpfslt	(0+(_DtCW+03h))&0ffh
	goto	u70501
	goto	u70500
u70501:
	goto	l37124
u70500:
	line	488
	
l37116:; BSR set to: 0

;pomiar.c: 487: {
;pomiar.c: 488: if(DtCW.CW>65) DtCW._ad_CW=1;
	lfsr	2,_DtCW+02h
	movlw	(042h-1)
	cpfsgt	indf2
	goto	u70511
	goto	u70510
u70511:
	goto	l2098
u70510:
	
l37118:; BSR set to: 0

	bsf	((_DtCW))&0ffh,2
	goto	l37120
	line	489
	
l2098:; BSR set to: 0

;pomiar.c: 489: else DtCW._ad_CW=0;
	bcf	((_DtCW))&0ffh,2
	line	490
	
l37120:; BSR set to: 0

;pomiar.c: 490: if(DtCW.CW<=65-2) DtCW._su_CW=1;
	movlw	(040h)&0ffh
	cpfslt	(0+(_DtCW+02h))&0ffh
	goto	u70521
	goto	u70520
u70521:
	goto	l2100
u70520:
	
l37122:; BSR set to: 0

	bsf	((_DtCW))&0ffh,1
	goto	l37170
	line	491
	
l2100:; BSR set to: 0

;pomiar.c: 491: else DtCW._su_CW=0;
	bcf	((_DtCW))&0ffh,1
	goto	l37170
	line	495
	
l37124:; BSR set to: 0

;pomiar.c: 493: else
;pomiar.c: 494: {
;pomiar.c: 495: if(DtCW.CW>70) DtCW._ad_CW=1;
	lfsr	2,_DtCW+02h
	movlw	(047h-1)
	cpfsgt	indf2
	goto	u70531
	goto	u70530
u70531:
	goto	l2103
u70530:
	
l37126:; BSR set to: 0

	bsf	((_DtCW))&0ffh,2
	goto	l37128
	line	496
	
l2103:; BSR set to: 0

;pomiar.c: 496: else DtCW._ad_CW=0;
	bcf	((_DtCW))&0ffh,2
	line	497
	
l37128:; BSR set to: 0

;pomiar.c: 497: if(DtCW.CW<=70-2) DtCW._su_CW=1;
	movlw	(045h)&0ffh
	cpfslt	(0+(_DtCW+02h))&0ffh
	goto	u70541
	goto	u70540
u70541:
	goto	l2100
u70540:
	goto	l37122
	line	505
	
l37132:; BSR set to: 1

;pomiar.c: 504: {
;pomiar.c: 505: if(DtCW.CW>65) DtCW._ad_CW=1;
	movlb	0	; () banked
	lfsr	2,_DtCW+02h
	movlw	(042h-1)
	cpfsgt	indf2
	goto	u70551
	goto	u70550
u70551:
	goto	l2109
u70550:
	
l37134:; BSR set to: 0

	bsf	((_DtCW))&0ffh,2
	goto	l37136
	line	506
	
l2109:; BSR set to: 0

;pomiar.c: 506: else DtCW._ad_CW=0;
	bcf	((_DtCW))&0ffh,2
	line	507
	
l37136:; BSR set to: 0

;pomiar.c: 507: if(DtCW.CW<=65-2) DtCW._su_CW=1;
	movlw	(040h)&0ffh
	cpfslt	(0+(_DtCW+02h))&0ffh
	goto	u70561
	goto	u70560
u70561:
	goto	l2100
u70560:
	goto	l37122
	line	513
	
l37140:; BSR set to: 1

;pomiar.c: 512: {
;pomiar.c: 513: if((DtCW.CW-DtCW.PPCW)>=1) DtCW._ad_CW=1;
	movlb	0	; () banked
	movf	(0+(_DtCW+04h))&0ffh,w
	movff	0+(_DtCW+02h),??_PomiarCW+0+0
	clrf	(??_PomiarCW+0+0+1)&0ffh,c
	subwf	(??_PomiarCW+0+0),c
	movlw	0
	subwfb	(??_PomiarCW+0+1),c
	movf	(??_PomiarCW+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	01h
	btfsc	status,2
	subwf	(??_PomiarCW+0+0),c,w
	btfss	status,0
	goto	u70571
	goto	u70570
u70571:
	goto	l2114
u70570:
	
l37142:; BSR set to: 0

	bsf	((_DtCW))&0ffh,2
	goto	l37144
	line	514
	
l2114:; BSR set to: 0

;pomiar.c: 514: else DtCW._ad_CW=0;
	bcf	((_DtCW))&0ffh,2
	line	515
	
l37144:; BSR set to: 0

;pomiar.c: 515: if((DtCW.PPCW-DtCW.CW)>=5) DtCW._su_CW=1;
	movf	(0+(_DtCW+02h))&0ffh,w
	movff	0+(_DtCW+04h),??_PomiarCW+0+0
	clrf	(??_PomiarCW+0+0+1)&0ffh,c
	subwf	(??_PomiarCW+0+0),c
	movlw	0
	subwfb	(??_PomiarCW+0+1),c
	movf	(??_PomiarCW+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	05h
	btfsc	status,2
	subwf	(??_PomiarCW+0+0),c,w
	btfss	status,0
	goto	u70581
	goto	u70580
u70581:
	goto	l2116
u70580:
	
l37146:; BSR set to: 0

	bsf	((_DtCW))&0ffh,1
	goto	l37148
	line	516
	
l2116:; BSR set to: 0

;pomiar.c: 516: else DtCW._su_CW=0;
	bcf	((_DtCW))&0ffh,1
	line	517
	
l37148:; BSR set to: 0

;pomiar.c: 517: if(RdPrt(11))
	movlw	(0Bh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u70591
	goto	u70590
u70591:
	goto	l37156
u70590:
	line	519
	
l37150:; BSR set to: 0

;pomiar.c: 518: {
;pomiar.c: 519: if (DtCW._su_CW) DtCW._wpz_CW=1;
	
	btfss	((_DtCW))&0ffh,1
	goto	u70601
	goto	u70600
u70601:
	goto	l2119
u70600:
	
l37152:; BSR set to: 0

	bsf	((_DtCW))&0ffh,3
	goto	l2120
	line	520
	
l2119:; BSR set to: 0

;pomiar.c: 520: else if(!M._PRACA) DtCW._wpz_CW=0;
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u70611
	goto	u70610
u70611:
	goto	l2120
u70610:
	
l37154:; BSR set to: 0

	bcf	((_DtCW))&0ffh,3
	line	521
	
l2120:; BSR set to: 0

;pomiar.c: 521: if (DtCW._ad_CW) DtCW._wpz_CW=0;
	
	btfss	((_DtCW))&0ffh,2
	goto	u70621
	goto	u70620
u70621:
	goto	l37170
u70620:
	
l37156:; BSR set to: 0

	bcf	((_DtCW))&0ffh,3
	goto	l37170
	line	528
	
l37158:; BSR set to: 1

;pomiar.c: 527: {
;pomiar.c: 528: if(DtCW.CW>65) DtCW._ad_CW=1;
	movlb	0	; () banked
	lfsr	2,_DtCW+02h
	movlw	(042h-1)
	cpfsgt	indf2
	goto	u70631
	goto	u70630
u70631:
	goto	l2125
u70630:
	
l37160:; BSR set to: 0

	bsf	((_DtCW))&0ffh,2
	goto	l37162
	line	529
	
l2125:; BSR set to: 0

;pomiar.c: 529: else DtCW._ad_CW=0;
	bcf	((_DtCW))&0ffh,2
	line	530
	
l37162:; BSR set to: 0

;pomiar.c: 530: if(DtCW.CW<=65-2) DtCW._su_CW=1;
	movlw	(040h)&0ffh
	cpfslt	(0+(_DtCW+02h))&0ffh
	goto	u70641
	goto	u70640
u70641:
	goto	l2100
u70640:
	goto	l37122
	line	477
	
l37168:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l37140
	xorlw	1^0	; case 1
	skipnz
	goto	l37114
	xorlw	2^1	; case 2
	skipnz
	goto	l37114
	xorlw	3^2	; case 3
	skipnz
	goto	l37132
	goto	l37158

	line	535
	
l37170:; BSR set to: 0

;pomiar.c: 535: if(DtCW.CW<=5)
	movlw	(06h)&0ffh
	cpfslt	(0+(_DtCW+02h))&0ffh
	goto	u70651
	goto	u70650
u70651:
	goto	l2129
u70650:
	line	537
	
l37172:; BSR set to: 0

;pomiar.c: 536: {
;pomiar.c: 537: DtCW._su_DZ_CW=1;
	bsf	((_DtCW))&0ffh,5
	line	538
;pomiar.c: 538: DtCW._on_DZ_CW=1;
	bsf	((_DtCW))&0ffh,4
	line	539
;pomiar.c: 539: }
	goto	l37174
	line	540
	
l2129:; BSR set to: 0

;pomiar.c: 540: else DtCW._su_DZ_CW=0;
	bcf	((_DtCW))&0ffh,5
	line	541
	
l37174:; BSR set to: 0

;pomiar.c: 541: if(DtCW.CW>10)
	lfsr	2,_DtCW+02h
	movlw	(0Bh-1)
	cpfsgt	indf2
	goto	u70661
	goto	u70660
u70661:
	goto	l2131
u70660:
	line	543
	
l37176:; BSR set to: 0

;pomiar.c: 542: {
;pomiar.c: 543: DtCW._ad_DZ_CW=1;
	bsf	((_DtCW))&0ffh,6
	line	544
;pomiar.c: 544: DtCW._on_DZ_CW=0;
	bcf	((_DtCW))&0ffh,4
	line	545
;pomiar.c: 545: }
	goto	l37178
	line	546
	
l2131:; BSR set to: 0

;pomiar.c: 546: else DtCW._ad_DZ_CW=0;
	bcf	((_DtCW))&0ffh,6
	line	547
	
l37178:; BSR set to: 0

;pomiar.c: 547: if(DtCW.CW<=5) DtCW._cold_CW=1;
	movlw	(06h)&0ffh
	cpfslt	(0+(_DtCW+02h))&0ffh
	goto	u70671
	goto	u70670
u70671:
	goto	l37182
u70670:
	
l37180:; BSR set to: 0

	bsf	((_DtCW))&0ffh,7
	line	548
	
l37182:; BSR set to: 0

;pomiar.c: 548: if(DtCW.CW>5+1) DtCW._cold_CW=0;
	lfsr	2,_DtCW+02h
	movlw	(07h-1)
	cpfsgt	indf2
	goto	u70681
	goto	u70680
u70681:
	goto	l2092
u70680:
	
l37184:; BSR set to: 0

	bcf	((_DtCW))&0ffh,7
	line	549
	
l2092:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PomiarCW
	__end_of_PomiarCW:
	signat	_PomiarCW,88
	global	_ReadTabNTC

;; *************** function _ReadTabNTC *****************
;; Defined at:
;;		line 112 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
;; Parameters:    Size  Location     Type
;;  zrAC            1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  zrAC            1   31[COMRAM] unsigned char 
;;  i               2   33[COMRAM] unsigned int 
;;  data            1   32[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Read_b_eep
;; This function is called by:
;;		_PomiarCO
;;		_PomiarIN
;;		_PomiarCW
;; This function uses a non-reentrant model
;;
psect	text74,class=CODE,space=0,reloc=2
global __ptext74
__ptext74:
psect	text74
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
	line	112
	global	__size_of_ReadTabNTC
	__size_of_ReadTabNTC	equ	__end_of_ReadTabNTC-_ReadTabNTC
	
_ReadTabNTC:; BSR set to: 0

	opt	stack 22
;ReadTabNTC@zrAC stored from wreg
	line	115
	movff	wreg,(c:ReadTabNTC@zrAC)
	
l27828:
;ac.c: 113: unsigned int i;
;ac.c: 114: unsigned char data;
;ac.c: 115: i=zrAC;
	movff	(c:ReadTabNTC@zrAC),(c:ReadTabNTC@i)
	clrf	((c:ReadTabNTC@i+1)),c
	line	117
	
l27830:
;ac.c: 117: if(i<0x34) i=0x34;
	movlw	034h
	subwf	((c:ReadTabNTC@i)),c,w
	movlw	0
	subwfb	((c:ReadTabNTC@i+1)),c,w
	btfsc	status,0
	goto	u47991
	goto	u47990
u47991:
	goto	l27834
u47990:
	
l27832:
	movlw	high(034h)
	movwf	((c:ReadTabNTC@i+1)),c
	movlw	low(034h)
	movwf	((c:ReadTabNTC@i)),c
	line	118
	
l27834:
;ac.c: 118: if(i>0xED) i=0xED;
	movlw	0EEh
	subwf	((c:ReadTabNTC@i)),c,w
	movlw	0
	subwfb	((c:ReadTabNTC@i+1)),c,w
	btfss	status,0
	goto	u48001
	goto	u48000
u48001:
	goto	l27838
u48000:
	
l27836:
	movlw	high(0EDh)
	movwf	((c:ReadTabNTC@i+1)),c
	movlw	low(0EDh)
	movwf	((c:ReadTabNTC@i)),c
	line	119
	
l27838:
;ac.c: 119: i-=0x34;
	movlw	034h
	subwf	((c:ReadTabNTC@i)),c
	movlw	0
	subwfb	((c:ReadTabNTC@i+1)),c
	line	120
	
l27840:
;ac.c: 120: if(i>192) i=192;
	movlw	0C1h
	subwf	((c:ReadTabNTC@i)),c,w
	movlw	0
	subwfb	((c:ReadTabNTC@i+1)),c,w
	btfss	status,0
	goto	u48011
	goto	u48010
u48011:
	goto	l27844
u48010:
	
l27842:
	movlw	high(0C0h)
	movwf	((c:ReadTabNTC@i+1)),c
	movlw	low(0C0h)
	movwf	((c:ReadTabNTC@i)),c
	line	123
	
l27844:
;ac.c: 123: data=Read_b_eep(i);
	movff	(c:ReadTabNTC@i),(c:?_Read_b_eep)
	movff	(c:ReadTabNTC@i+1),(c:?_Read_b_eep+1)
	call	_Read_b_eep	;wreg free
	movwf	((c:ReadTabNTC@data)),c
	line	124
	
l27846:
;ac.c: 124: return data;
	movf	((c:ReadTabNTC@data)),c,w
	line	125
	
l55:
	return
	opt stack 0
GLOBAL	__end_of_ReadTabNTC
	__end_of_ReadTabNTC:
	signat	_ReadTabNTC,4217
	global	_PomiarCS

;; *************** function _PomiarCS *****************
;; Defined at:
;;		line 909 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  cs              1    9[BANK0 ] unsigned char 
;;  dac             1    8[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ReadAC
;;		___wmul
;;		___awdiv
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text75,class=CODE,space=0,reloc=2
global __ptext75
__ptext75:
psect	text75
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	909
	global	__size_of_PomiarCS
	__size_of_PomiarCS	equ	__end_of_PomiarCS-_PomiarCS
	
_PomiarCS:
	opt	stack 23
	line	912
	
l28892:
;pomiar.c: 910: static unsigned char pcs;
;pomiar.c: 911: unsigned char dac,cs;
;pomiar.c: 912: dac=ReadAC(3);
	movlw	(03h)&0ffh
	
	call	_ReadAC
	movlb	0	; () banked
	movwf	((PomiarCS@dac))&0ffh
	line	914
	
l28894:; BSR set to: 0

;pomiar.c: 914: if((!DtKNF.tpcs&&(dac<16||dac>235))||(DtKNF.tpcs&&(dac<16||dac>235)))
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+010h))&0ffh
	goto	u49881
	goto	u49880
u49881:
	goto	l28900
u49880:
	
l28896:; BSR set to: 1

	movlw	(010h-1)
	movlb	0	; () banked
	cpfsgt	((PomiarCS@dac))&0ffh
	goto	u49891
	goto	u49890
u49891:
	goto	l2253
u49890:
	
l28898:; BSR set to: 0

	movlw	(0ECh)&0ffh
	cpfslt	((PomiarCS@dac))&0ffh
	goto	u49901
	goto	u49900
u49901:
	goto	l2253
u49900:
	
l28900:
	movlb	1	; () banked
	movf	(0+(_DtKNF+010h))&0ffh,w
	btfsc	status,2
	goto	u49911
	goto	u49910
u49911:
	goto	l2251
u49910:
	
l28902:; BSR set to: 1

	movlw	(010h-1)
	movlb	0	; () banked
	cpfsgt	((PomiarCS@dac))&0ffh
	goto	u49921
	goto	u49920
u49921:
	goto	l2253
u49920:
	
l28904:; BSR set to: 0

	movlw	(0ECh-1)
	cpfsgt	((PomiarCS@dac))&0ffh
	goto	u49931
	goto	u49930
u49931:
	goto	l2251
u49930:
	
l2253:; BSR set to: 0

	line	916
;pomiar.c: 915: {
;pomiar.c: 916: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u49941
	goto	u49940
u49941:
	goto	l2258
u49940:
	line	918
	
l28906:; BSR set to: 1

;pomiar.c: 917: {
;pomiar.c: 918: DtCS._error=0;
	bcf	((c:_DtCS)),c,3
	line	919
;pomiar.c: 919: DtCS._no=0;
	bcf	((c:_DtCS)),c,2
	line	920
;pomiar.c: 920: DtCS._lo=0;
	bcf	((c:_DtCS)),c,1
	line	921
;pomiar.c: 921: DtCS._hi=0;
	bcf	((c:_DtCS)),c,0
	line	922
;pomiar.c: 922: DtCS._work=1;
	bsf	((c:_DtCS)),c,4
	line	923
	
l28908:; BSR set to: 1

;pomiar.c: 923: DtCS._no_mont=1;
	movlw	high(01h)
	movwf	(1+((c:_DtCS)+01h)),c
	movlw	low(01h)
	movwf	(0+((c:_DtCS)+01h)),c
	line	924
	
l28910:; BSR set to: 1

;pomiar.c: 924: DtCS.CS=0;
	clrf	(0+((c:_DtCS)+03h)),c
	line	925
;pomiar.c: 925: }
	goto	l2289
	line	926
	
l2258:; BSR set to: 1

	line	928
;pomiar.c: 926: else
;pomiar.c: 927: {
;pomiar.c: 928: DtCS._error=1;
	bsf	((c:_DtCS)),c,3
	line	929
;pomiar.c: 929: DtCS._no=0;
	bcf	((c:_DtCS)),c,2
	line	930
;pomiar.c: 930: DtCS._lo=0;
	bcf	((c:_DtCS)),c,1
	line	931
;pomiar.c: 931: DtCS._hi=0;
	bcf	((c:_DtCS)),c,0
	line	932
;pomiar.c: 932: DtCS._work=0;
	bcf	((c:_DtCS)),c,4
	line	933
;pomiar.c: 933: DtCS._no_mont=0;
	clrf	(0+((c:_DtCS)+01h)),c
	clrf	(1+((c:_DtCS)+01h)),c
	goto	l2289
	line	936
	
l2251:
	line	938
;pomiar.c: 936: else
;pomiar.c: 937: {
;pomiar.c: 938: DtCS._error=0;
	bcf	((c:_DtCS)),c,3
	line	939
;pomiar.c: 939: DtCS._no_mont=0;
	clrf	(0+((c:_DtCS)+01h)),c
	clrf	(1+((c:_DtCS)+01h)),c
	line	940
;pomiar.c: 940: if(!DtKNF.tpcs)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+010h))&0ffh
	goto	u49951
	goto	u49950
u49951:
	goto	l28934
u49950:
	line	942
	
l28912:; BSR set to: 1

;pomiar.c: 941: {
;pomiar.c: 942: if(dac<30) dac=30;
	movlw	(01Eh)&0ffh
	movlb	0	; () banked
	cpfslt	((PomiarCS@dac))&0ffh
	goto	u49961
	goto	u49960
u49961:
	goto	l28916
u49960:
	
l28914:; BSR set to: 0

	movlw	low(01Eh)
	movwf	((PomiarCS@dac))&0ffh
	line	943
	
l28916:; BSR set to: 0

;pomiar.c: 943: if(dac>210) dac=210;
	movlw	(0D3h-1)
	cpfsgt	((PomiarCS@dac))&0ffh
	goto	u49971
	goto	u49970
u49971:
	goto	l28920
u49970:
	
l28918:; BSR set to: 0

	movlw	low(0D2h)
	movwf	((PomiarCS@dac))&0ffh
	line	944
	
l28920:; BSR set to: 0

;pomiar.c: 944: cs=((dac-30)*10)/(((210-30)*10)/40);
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	movlw	low(-30)
	addwf	((PomiarCS@dac))&0ffh,w
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	movlw	high(-30)
	addwfc	1+((c:?___wmul)),c
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___awdiv)
	movff	1+?___wmul,(?___awdiv+1)
	movlw	high(02Dh)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(02Dh)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movwf	((PomiarCS@cs))&0ffh
	line	945
	
l28922:; BSR set to: 0

;pomiar.c: 945: if(cs<40)
	movlw	(028h)&0ffh
	cpfslt	((PomiarCS@cs))&0ffh
	goto	u49981
	goto	u49980
u49981:
	goto	l28930
u49980:
	line	946
	
l28924:; BSR set to: 0

;pomiar.c: 946: if((cs-pcs>0)&&(cs-pcs)<2) cs=pcs;
	movf	((c:PomiarCS@pcs)),c,w
	movff	(PomiarCS@cs),??_PomiarCS+0+0
	clrf	(??_PomiarCS+0+0+1)&0ffh,c
	subwf	(??_PomiarCS+0+0),c
	movlw	0
	subwfb	(??_PomiarCS+0+1),c
	movf	(??_PomiarCS+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	01h
	btfsc	status,2
	subwf	(??_PomiarCS+0+0),c,w
	btfss	status,0
	goto	u49991
	goto	u49990
u49991:
	goto	l28930
u49990:
	
l28926:; BSR set to: 0

	movf	((c:PomiarCS@pcs)),c,w
	movff	(PomiarCS@cs),??_PomiarCS+0+0
	clrf	(??_PomiarCS+0+0+1)&0ffh,c
	subwf	(??_PomiarCS+0+0),c
	movlw	0
	subwfb	(??_PomiarCS+0+1),c
	movf	(??_PomiarCS+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	02h
	btfsc	status,2
	subwf	(??_PomiarCS+0+0),c,w
	btfsc	status,0
	goto	u50001
	goto	u50000
u50001:
	goto	l28930
u50000:
	
l28928:; BSR set to: 0

	movff	(c:PomiarCS@pcs),(PomiarCS@cs)
	line	947
	
l28930:; BSR set to: 0

;pomiar.c: 947: if(cs>40) cs=40;
	movlw	(029h-1)
	cpfsgt	((PomiarCS@cs))&0ffh
	goto	u50011
	goto	u50010
u50011:
	goto	l28956
u50010:
	
l28932:; BSR set to: 0

	movlw	low(028h)
	movwf	((PomiarCS@cs))&0ffh
	goto	l28956
	line	951
	
l28934:; BSR set to: 1

;pomiar.c: 949: else
;pomiar.c: 950: {
;pomiar.c: 951: if(dac<35) dac=35;
	movlw	(023h)&0ffh
	movlb	0	; () banked
	cpfslt	((PomiarCS@dac))&0ffh
	goto	u50021
	goto	u50020
u50021:
	goto	l28938
u50020:
	
l28936:; BSR set to: 0

	movlw	low(023h)
	movwf	((PomiarCS@dac))&0ffh
	line	952
	
l28938:; BSR set to: 0

;pomiar.c: 952: if(dac>190) dac=190;
	movlw	(0BFh-1)
	cpfsgt	((PomiarCS@dac))&0ffh
	goto	u50031
	goto	u50030
u50031:
	goto	l28942
u50030:
	
l28940:; BSR set to: 0

	movlw	low(0BEh)
	movwf	((PomiarCS@dac))&0ffh
	line	953
	
l28942:; BSR set to: 0

;pomiar.c: 953: cs=((dac-35)*10)/(((190-35)*10)/40);
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	movlw	low(-35)
	addwf	((PomiarCS@dac))&0ffh,w
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	movlw	high(-35)
	addwfc	1+((c:?___wmul)),c
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___awdiv)
	movff	1+?___wmul,(?___awdiv+1)
	movlw	high(026h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(026h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movwf	((PomiarCS@cs))&0ffh
	line	954
	
l28944:; BSR set to: 0

;pomiar.c: 954: if(cs<40)
	movlw	(028h)&0ffh
	cpfslt	((PomiarCS@cs))&0ffh
	goto	u50041
	goto	u50040
u50041:
	goto	l28952
u50040:
	line	955
	
l28946:; BSR set to: 0

;pomiar.c: 955: if((cs-pcs>0)&&(cs-pcs)<2) cs=pcs;
	movf	((c:PomiarCS@pcs)),c,w
	movff	(PomiarCS@cs),??_PomiarCS+0+0
	clrf	(??_PomiarCS+0+0+1)&0ffh,c
	subwf	(??_PomiarCS+0+0),c
	movlw	0
	subwfb	(??_PomiarCS+0+1),c
	movf	(??_PomiarCS+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	01h
	btfsc	status,2
	subwf	(??_PomiarCS+0+0),c,w
	btfss	status,0
	goto	u50051
	goto	u50050
u50051:
	goto	l28952
u50050:
	
l28948:; BSR set to: 0

	movf	((c:PomiarCS@pcs)),c,w
	movff	(PomiarCS@cs),??_PomiarCS+0+0
	clrf	(??_PomiarCS+0+0+1)&0ffh,c
	subwf	(??_PomiarCS+0+0),c
	movlw	0
	subwfb	(??_PomiarCS+0+1),c
	movf	(??_PomiarCS+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	02h
	btfsc	status,2
	subwf	(??_PomiarCS+0+0),c,w
	btfsc	status,0
	goto	u50061
	goto	u50060
u50061:
	goto	l28952
u50060:
	
l28950:; BSR set to: 0

	movff	(c:PomiarCS@pcs),(PomiarCS@cs)
	line	956
	
l28952:; BSR set to: 0

;pomiar.c: 956: if(cs>40) cs=40;
	movlw	(029h-1)
	cpfsgt	((PomiarCS@cs))&0ffh
	goto	u50071
	goto	u50070
u50071:
	goto	l28956
u50070:
	goto	l28932
	line	958
	
l28956:; BSR set to: 0

;pomiar.c: 957: }
;pomiar.c: 958: pcs=cs;
	movff	(PomiarCS@cs),(c:PomiarCS@pcs)
	line	959
	
l28958:; BSR set to: 0

;pomiar.c: 959: DtCS.CS=cs;
	movff	(PomiarCS@cs),0+((c:_DtCS)+03h)
	line	960
	
l28960:; BSR set to: 0

;pomiar.c: 960: PFN.CS=DtCS.CS;
	movff	0+((c:_DtCS)+03h),0+(_PFN+0Bh)
	line	961
	
l28962:; BSR set to: 0

;pomiar.c: 961: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u50081
	goto	u50080
u50081:
	goto	l28974
u50080:
	line	964
	
l28964:; BSR set to: 1

;pomiar.c: 962: {
;pomiar.c: 964: DtCS._no=0;
	bcf	((c:_DtCS)),c,2
	line	965
;pomiar.c: 965: DtCS._lo=0;
	bcf	((c:_DtCS)),c,1
	line	966
	
l28966:; BSR set to: 1

;pomiar.c: 966: if(DtCS.CS<=27) DtCS._work=1;
	movlw	(01Ch)&0ffh
	cpfslt	(0+((c:_DtCS)+03h)),c
	goto	u50091
	goto	u50090
u50091:
	goto	l28970
u50090:
	
l28968:; BSR set to: 1

	bsf	((c:_DtCS)),c,4
	goto	l28992
	line	968
	
l28970:; BSR set to: 1

;pomiar.c: 967: else
;pomiar.c: 968: if(DtCS.CS>=29) DtCS._work=0;
	lfsr	2,(c:_DtCS)+03h
	movlw	(01Dh-1)
	cpfsgt	indf2
	goto	u50101
	goto	u50100
u50101:
	goto	l28992
u50100:
	
l28972:; BSR set to: 1

	bcf	((c:_DtCS)),c,4
	goto	l28992
	line	973
	
l28974:; BSR set to: 1

;pomiar.c: 970: else
;pomiar.c: 971: {
;pomiar.c: 973: if(DtCS.CS<3) DtCS._no=1;
	movlw	(03h)&0ffh
	cpfslt	(0+((c:_DtCS)+03h)),c
	goto	u50111
	goto	u50110
u50111:
	goto	l2278
u50110:
	
l28976:; BSR set to: 1

	bsf	((c:_DtCS)),c,2
	goto	l2279
	line	974
	
l2278:; BSR set to: 1

;pomiar.c: 974: else DtCS._no=0;
	bcf	((c:_DtCS)),c,2
	
l2279:; BSR set to: 1

	line	975
;pomiar.c: 975: if(!DtCS._no&&DtCS.CS<5) DtCS._lo=1;
	
	btfsc	((c:_DtCS)),c,2
	goto	u50121
	goto	u50120
u50121:
	goto	l2280
u50120:
	
l28978:; BSR set to: 1

	movlw	(05h)&0ffh
	cpfslt	(0+((c:_DtCS)+03h)),c
	goto	u50131
	goto	u50130
u50131:
	goto	l2280
u50130:
	
l28980:; BSR set to: 1

	bsf	((c:_DtCS)),c,1
	goto	l28982
	line	976
	
l2280:; BSR set to: 1

;pomiar.c: 976: else DtCS._lo=0;
	bcf	((c:_DtCS)),c,1
	line	977
	
l28982:; BSR set to: 1

;pomiar.c: 977: if((DtCS.CS>=6)&&(DtCS.CS<=27)) DtCS._work=1;
	lfsr	2,(c:_DtCS)+03h
	movlw	(06h-1)
	cpfsgt	indf2
	goto	u50141
	goto	u50140
u50141:
	goto	l28988
u50140:
	
l28984:; BSR set to: 1

	movlw	(01Ch)&0ffh
	cpfslt	(0+((c:_DtCS)+03h)),c
	goto	u50151
	goto	u50150
u50151:
	goto	l28988
u50150:
	goto	l28968
	line	979
	
l28988:; BSR set to: 1

;pomiar.c: 978: else
;pomiar.c: 979: if((DtCS.CS<=4)||(DtCS.CS>=29)) DtCS._work=0;
	lfsr	2,(c:_DtCS)+03h
	movlw	(05h-1)
	cpfsgt	indf2
	goto	u50161
	goto	u50160
u50161:
	goto	l28972
u50160:
	
l28990:; BSR set to: 1

	lfsr	2,(c:_DtCS)+03h
	movlw	(01Dh-1)
	cpfsgt	indf2
	goto	u50171
	goto	u50170
u50171:
	goto	l28992
u50170:
	goto	l28972
	line	981
	
l28992:; BSR set to: 1

;pomiar.c: 980: }
;pomiar.c: 981: if(DtCS.CS>=29) DtCS._hi=1;
	lfsr	2,(c:_DtCS)+03h
	movlw	(01Dh-1)
	cpfsgt	indf2
	goto	u50181
	goto	u50180
u50181:
	goto	l2287
u50180:
	
l28994:; BSR set to: 1

	bsf	((c:_DtCS)),c,0
	goto	l2289
	line	982
	
l2287:; BSR set to: 1

;pomiar.c: 982: else DtCS._hi=0;
	bcf	((c:_DtCS)),c,0
	line	984
	
l2289:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PomiarCS
	__end_of_PomiarCS:
	signat	_PomiarCS,88
	global	_PomiarPCO

;; *************** function _PomiarPCO *****************
;; Defined at:
;;		line 707 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    7
;; This function calls:
;;		_StartRTdS
;;		_WritePCO
;;		_GetPGD_PCO
;;		_SetModPCO
;;		_ReturnACfromNTC
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text76,class=CODE,space=0,reloc=2
global __ptext76
__ptext76:
psect	text76
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	707
	global	__size_of_PomiarPCO
	__size_of_PomiarPCO	equ	__end_of_PomiarPCO-_PomiarPCO
	
_PomiarPCO:; BSR set to: 1

	opt	stack 21
	line	711
	
l37186:; BSR set to: 1

;pomiar.c: 708: static unsigned char pnst;
;pomiar.c: 711: if(!M._AKTYWNE_PGD)
	movlb	0	; () banked
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfss	status,2
	goto	u70691
	goto	u70690
u70691:
	goto	l2194
u70690:
	line	713
	
l37188:; BSR set to: 0

;pomiar.c: 712: {
;pomiar.c: 713: if(!DtKNF.opdg)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Fh))&0ffh
	goto	u70701
	goto	u70700
u70701:
	goto	l37192
u70700:
	line	715
	
l37190:; BSR set to: 1

;pomiar.c: 714: {
;pomiar.c: 715: DtCO.minPCO=40;
	movlw	low(028h)
	movlb	0	; () banked
	movwf	(0+(_DtCO+05h))&0ffh
	line	716
;pomiar.c: 716: DtCO.maxPCO=85;
	movlw	low(055h)
	movwf	(0+(_DtCO+06h))&0ffh
	line	717
;pomiar.c: 717: }
	goto	l37196
	line	720
	
l37192:; BSR set to: 1

;pomiar.c: 718: else
;pomiar.c: 719: {
;pomiar.c: 720: DtCO.minPCO=35;
	movlw	low(023h)
	movlb	0	; () banked
	movwf	(0+(_DtCO+05h))&0ffh
	line	721
;pomiar.c: 721: DtCO.maxPCO=55;
	movlw	low(037h)
	movwf	(0+(_DtCO+06h))&0ffh
	goto	l37196
	line	724
	
l2194:; BSR set to: 0

	line	726
;pomiar.c: 724: else
;pomiar.c: 725: {
;pomiar.c: 726: DtCO.minPCO=0;
	clrf	(0+(_DtCO+05h))&0ffh
	line	727
	
l37194:; BSR set to: 0

;pomiar.c: 727: DtCO.maxPCO=99;
	movlw	low(063h)
	movwf	(0+(_DtCO+06h))&0ffh
	line	729
	
l37196:; BSR set to: 0

;pomiar.c: 728: }
;pomiar.c: 729: pnst=PFN.PCO;
	movff	0+(_PFN+01Ah),(PomiarPCO@pnst)
	line	730
;pomiar.c: 730: if(pnst<DtCO.minPCO) pnst=DtCO.minPCO;
	movf	(0+(_DtCO+05h))&0ffh,w
	cpfslt	((PomiarPCO@pnst))&0ffh
	goto	u70711
	goto	u70710
u70711:
	goto	l37200
u70710:
	
l37198:; BSR set to: 0

	movff	0+(_DtCO+05h),(PomiarPCO@pnst)
	line	731
	
l37200:; BSR set to: 0

;pomiar.c: 731: if(pnst>DtCO.maxPCO) pnst=DtCO.maxPCO;
	movf	((PomiarPCO@pnst))&0ffh,w
	cpfslt	(0+(_DtCO+06h))&0ffh
	goto	u70721
	goto	u70720
u70721:
	goto	l37204
u70720:
	
l37202:; BSR set to: 0

	movff	0+(_DtCO+06h),(PomiarPCO@pnst)
	line	732
	
l37204:; BSR set to: 0

;pomiar.c: 732: if(DtCO.PCO!=pnst)
	movf	(0+(_DtCO+03h))&0ffh,w
	xorwf	((PomiarPCO@pnst))&0ffh,w
	btfsc	status,2
	goto	u70731
	goto	u70730
u70731:
	goto	l2200
u70730:
	line	734
	
l37206:; BSR set to: 0

;pomiar.c: 733: {
;pomiar.c: 734: DtCO.PCO=pnst;
	movff	(PomiarPCO@pnst),0+(_DtCO+03h)
	line	735
;pomiar.c: 735: DtCO._newPCO=1;
	bsf	(0+(_DtCO+01h))&0ffh,7
	line	736
	
l37208:; BSR set to: 0

;pomiar.c: 736: StartRTdS(5);
	movlw	(05h)&0ffh
	
	call	_StartRTdS
	line	737
	
l2200:
	line	738
;pomiar.c: 737: }
;pomiar.c: 738: WritePCO();
	call	_WritePCO	;wreg free
	line	739
	
l37210:
;pomiar.c: 739: if(M._AKTYWNE_PGD) DtCO.PGDPCO=GetPGD_PCO();
	movlb	0	; () banked
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfsc	status,2
	goto	u70741
	goto	u70740
u70741:
	goto	l2201
u70740:
	
l37212:; BSR set to: 0

	call	_GetPGD_PCO	;wreg free
	movlb	0	; () banked
	movwf	(0+(_DtCO+07h))&0ffh
	
l2201:; BSR set to: 0

	line	740
;pomiar.c: 740: SetModPCO();
	call	_SetModPCO	;wreg free
	line	741
;pomiar.c: 741: DtCO.DAD_CO=ReturnACfromNTC(DtCO.PPCO-1);
	movlb	0	; () banked
	decf	(0+(_DtCO+04h))&0ffh,w
	
	call	_ReturnACfromNTC
	movlb	0	; () banked
	movwf	(0+(_DtCO+0Eh))&0ffh
	line	742
;pomiar.c: 742: DtCO.MAD_CO=ReturnACfromNTC(DtCO.PPCO-1-6);
	movf	(0+(_DtCO+04h))&0ffh,w
	addlw	low(0F9h)
	
	call	_ReturnACfromNTC
	movlb	0	; () banked
	movwf	(0+(_DtCO+0Dh))&0ffh
	line	743
	
l2202:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PomiarPCO
	__end_of_PomiarPCO:
	signat	_PomiarPCO,88
	global	_PomiarPCW

;; *************** function _PomiarPCW *****************
;; Defined at:
;;		line 770 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    7
;; This function calls:
;;		_StartRTdS
;;		_WritePCW
;;		_SetModPCW
;;		_ReturnACfromNTC
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text77,class=CODE,space=0,reloc=2
global __ptext77
__ptext77:
psect	text77
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	770
	global	__size_of_PomiarPCW
	__size_of_PomiarPCW	equ	__end_of_PomiarPCW-_PomiarPCW
	
_PomiarPCW:; BSR set to: 0

	opt	stack 21
	line	775
	
l37214:; BSR set to: 0

;pomiar.c: 771: static unsigned char pnst;
;pomiar.c: 775: switch(DtKNF.tpkt)
	goto	l37226
	line	780
	
l37216:; BSR set to: 1

;pomiar.c: 778: case 2:
;pomiar.c: 779: {
;pomiar.c: 780: DtCW.minPCW=30;
	movlw	low(01Eh)
	movlb	0	; () banked
	movwf	(0+(_DtCW+05h))&0ffh
	line	781
;pomiar.c: 781: DtCW.maxPCW=60;
	movlw	low(03Ch)
	movwf	(0+(_DtCW+06h))&0ffh
	line	782
;pomiar.c: 782: break;
	goto	l2222
	line	792
	
l37220:; BSR set to: 1

;pomiar.c: 791: {
;pomiar.c: 792: DtCW.minPCW=35;
	movlw	low(023h)
	movlb	0	; () banked
	movwf	(0+(_DtCW+05h))&0ffh
	line	793
;pomiar.c: 793: DtCW.maxPCW=65;
	movlw	low(041h)
	movwf	(0+(_DtCW+06h))&0ffh
	line	794
;pomiar.c: 794: break;
	goto	l2222
	line	775
	
l37226:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l37220
	xorlw	1^0	; case 1
	skipnz
	goto	l37216
	xorlw	2^1	; case 2
	skipnz
	goto	l37216
	xorlw	3^2	; case 3
	skipnz
	goto	l37216
	goto	l37216

	line	802
	
l2222:; BSR set to: 0

	line	803
;pomiar.c: 803: pnst=PFN.PCW;
	movff	0+(_PFN+01Ch),(PomiarPCW@pnst)
	line	804
	
l37228:; BSR set to: 0

;pomiar.c: 804: if(pnst<DtCW.minPCW) pnst=DtCW.minPCW;
	movf	(0+(_DtCW+05h))&0ffh,w
	cpfslt	((PomiarPCW@pnst))&0ffh
	goto	u70751
	goto	u70750
u70751:
	goto	l37232
u70750:
	
l37230:; BSR set to: 0

	movff	0+(_DtCW+05h),(PomiarPCW@pnst)
	line	805
	
l37232:; BSR set to: 0

;pomiar.c: 805: if(pnst>DtCW.maxPCW) pnst=DtCW.maxPCW;
	movf	((PomiarPCW@pnst))&0ffh,w
	cpfslt	(0+(_DtCW+06h))&0ffh
	goto	u70761
	goto	u70760
u70761:
	goto	l37236
u70760:
	
l37234:; BSR set to: 0

	movff	0+(_DtCW+06h),(PomiarPCW@pnst)
	line	806
	
l37236:; BSR set to: 0

;pomiar.c: 806: if(DtCW.PCW!=pnst)
	movf	(0+(_DtCW+03h))&0ffh,w
	xorwf	((PomiarPCW@pnst))&0ffh,w
	btfsc	status,2
	goto	u70771
	goto	u70770
u70771:
	goto	l2228
u70770:
	line	808
	
l37238:; BSR set to: 0

;pomiar.c: 807: {
;pomiar.c: 808: DtCW.PCW=pnst;
	movff	(PomiarPCW@pnst),0+(_DtCW+03h)
	line	809
;pomiar.c: 809: DtCW._newPCW=1;
	bsf	(0+(_DtCW+01h))&0ffh,0
	line	810
	
l37240:; BSR set to: 0

;pomiar.c: 810: StartRTdS(6);
	movlw	(06h)&0ffh
	
	call	_StartRTdS
	line	811
	
l2228:
	line	812
;pomiar.c: 811: }
;pomiar.c: 812: WritePCW();
	call	_WritePCW	;wreg free
	line	813
	
l37242:
;pomiar.c: 813: SetModPCW();
	call	_SetModPCW	;wreg free
	line	814
	
l37244:
;pomiar.c: 814: DtCW.DAD_CW=ReturnACfromNTC(DtCW.PPCW-(2-1));
	movlb	0	; () banked
	decf	(0+(_DtCW+04h))&0ffh,w
	
	call	_ReturnACfromNTC
	movlb	0	; () banked
	movwf	(0+(_DtCW+0Eh))&0ffh
	line	815
	
l37246:; BSR set to: 0

;pomiar.c: 815: DtCW.MAD_CW=ReturnACfromNTC(DtCW.PPCW-(2-1)-9);
	movf	(0+(_DtCW+04h))&0ffh,w
	addlw	low(0F6h)
	
	call	_ReturnACfromNTC
	movlb	0	; () banked
	movwf	(0+(_DtCW+0Dh))&0ffh
	line	816
	
l2229:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PomiarPCW
	__end_of_PomiarPCW:
	signat	_PomiarPCW,88
	global	_ReturnACfromNTC

;; *************** function _ReturnACfromNTC *****************
;; Defined at:
;;		line 129 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
;; Parameters:    Size  Location     Type
;;  data            1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  data            1   31[COMRAM] unsigned char 
;;  i               2   33[COMRAM] unsigned int 
;;  bdta            1   32[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Read_b_eep
;; This function is called by:
;;		_PomiarPCO
;;		_PomiarPCW
;; This function uses a non-reentrant model
;;
psect	text78,class=CODE,space=0,reloc=2
global __ptext78
__ptext78:
psect	text78
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
	line	129
	global	__size_of_ReturnACfromNTC
	__size_of_ReturnACfromNTC	equ	__end_of_ReturnACfromNTC-_ReturnACfromNTC
	
_ReturnACfromNTC:; BSR set to: 0

	opt	stack 22
;ReturnACfromNTC@data stored from wreg
	line	132
	movff	wreg,(c:ReturnACfromNTC@data)
	
l27864:; BSR set to: 0

;ac.c: 130: unsigned int i;
;ac.c: 131: unsigned char bdta;
;ac.c: 132: for(i=0x0000;i<0x0000+192;i++)
	clrf	((c:ReturnACfromNTC@i)),c
	clrf	((c:ReturnACfromNTC@i+1)),c
	line	134
	
l27870:
;ac.c: 133: {
;ac.c: 134: bdta=Read_b_eep(i);
	movff	(c:ReturnACfromNTC@i),(c:?_Read_b_eep)
	movff	(c:ReturnACfromNTC@i+1),(c:?_Read_b_eep+1)
	call	_Read_b_eep	;wreg free
	movwf	((c:ReturnACfromNTC@bdta)),c
	line	135
	
l27872:
;ac.c: 135: if(bdta<data) return ((i-0x0000)+0x34)-1;
	movf	((c:ReturnACfromNTC@data)),c,w
	cpfslt	((c:ReturnACfromNTC@bdta)),c
	goto	u48021
	goto	u48020
u48021:
	goto	l27878
u48020:
	
l27874:
	movf	((c:ReturnACfromNTC@i)),c,w
	addlw	low(033h)
	goto	l61
	line	132
	
l27878:
	infsnz	((c:ReturnACfromNTC@i)),c
	incf	((c:ReturnACfromNTC@i+1)),c
	
l27880:
	movlw	0C0h
	subwf	((c:ReturnACfromNTC@i)),c,w
	movlw	0
	subwfb	((c:ReturnACfromNTC@i+1)),c,w
	btfss	status,0
	goto	u48031
	goto	u48030
u48031:
	goto	l27870
u48030:
	line	137
	
l27882:
;ac.c: 136: }
;ac.c: 137: return (i-0x0000)+0x34;
	movf	((c:ReturnACfromNTC@i)),c,w
	addlw	low(034h)
	line	138
	
l61:
	return
	opt stack 0
GLOBAL	__end_of_ReturnACfromNTC
	__end_of_ReturnACfromNTC:
	signat	_ReturnACfromNTC,4217
	global	_PomiarPFN

;; *************** function _PomiarPFN *****************
;; Defined at:
;;		line 877 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    7
;; This function calls:
;;		_ReadEEPFN
;;		_StartRTdS
;;		_WritePFN
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text79,class=CODE,space=0,reloc=2
global __ptext79
__ptext79:
psect	text79
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	877
	global	__size_of_PomiarPFN
	__size_of_PomiarPFN	equ	__end_of_PomiarPFN-_PomiarPFN
	
_PomiarPFN:
	opt	stack 21
	line	880
	
l37248:; BSR set to: 0

;pomiar.c: 878: static unsigned char pnst;
;pomiar.c: 880: if(PFN._off)
	movlb	1	; () banked
	
	btfss	((_PFN))&0ffh,0
	goto	u70781
	goto	u70780
u70781:
	goto	l2238
u70780:
	line	882
	
l37250:; BSR set to: 1

;pomiar.c: 881: {
;pomiar.c: 882: PFN.poz=1;
	movlw	high(01h)
	movwf	(1+(_PFN+01Fh))&0ffh
	movlw	low(01h)
	movwf	(0+(_PFN+01Fh))&0ffh
	line	883
;pomiar.c: 883: }
	goto	l37262
	line	884
	
l2238:; BSR set to: 1

	line	885
;pomiar.c: 884: else
;pomiar.c: 885: if(PFN._zima&&!PFN._off)
	
	btfss	((_PFN))&0ffh,2
	goto	u70791
	goto	u70790
u70791:
	goto	l2240
u70790:
	
l37252:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,0
	goto	u70801
	goto	u70800
u70801:
	goto	l2240
u70800:
	line	887
	
l37254:; BSR set to: 1

;pomiar.c: 886: {
;pomiar.c: 887: PFN.poz=3;
	movlw	high(03h)
	movwf	(1+(_PFN+01Fh))&0ffh
	movlw	low(03h)
	movwf	(0+(_PFN+01Fh))&0ffh
	line	888
;pomiar.c: 888: }
	goto	l37262
	line	889
	
l2240:; BSR set to: 1

	line	890
;pomiar.c: 889: else
;pomiar.c: 890: if(PFN._lato&&!PFN._off)
	
	btfss	((_PFN))&0ffh,1
	goto	u70811
	goto	u70810
u70811:
	goto	l37254
u70810:
	
l37256:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,0
	goto	u70821
	goto	u70820
u70821:
	goto	l37254
u70820:
	line	892
	
l37258:; BSR set to: 1

;pomiar.c: 891: {
;pomiar.c: 892: PFN.poz=2;
	movlw	high(02h)
	movwf	(1+(_PFN+01Fh))&0ffh
	movlw	low(02h)
	movwf	(0+(_PFN+01Fh))&0ffh
	line	898
;pomiar.c: 893: }
	
l37262:; BSR set to: 1

;pomiar.c: 897: }
;pomiar.c: 898: pnst=ReadEEPFN();
	call	_ReadEEPFN	;wreg free
	movlb	1	; () banked
	movwf	((PomiarPFN@pnst))&0ffh
	line	899
	
l37264:; BSR set to: 1

;pomiar.c: 899: if(PFN.poz!=pnst)
	movf	((PomiarPFN@pnst))&0ffh,w
	xorwf	(0+(_PFN+01Fh))&0ffh,w
	iorwf	(1+(_PFN+01Fh))&0ffh,w

	btfsc	status,2
	goto	u70831
	goto	u70830
u70831:
	goto	l2244
u70830:
	line	901
	
l37266:; BSR set to: 1

;pomiar.c: 900: {
;pomiar.c: 901: if(!PFN._newPFN) StartRTdS(7);
	
	btfsc	(0+(_PFN+03h))&0ffh,3
	goto	u70841
	goto	u70840
u70841:
	goto	l37270
u70840:
	
l37268:; BSR set to: 1

	movlw	(07h)&0ffh
	
	call	_StartRTdS
	line	902
	
l37270:; BSR set to: 1

;pomiar.c: 902: PFN._newPFN=1;
	bsf	(0+(_PFN+03h))&0ffh,3
	line	903
	
l2244:; BSR set to: 1

	line	904
;pomiar.c: 903: }
;pomiar.c: 904: WritePFN();
	call	_WritePFN	;wreg free
	line	905
	
l2246:
	return
	opt stack 0
GLOBAL	__end_of_PomiarPFN
	__end_of_PomiarPFN:
	signat	_PomiarPFN,88
	global	_RefInterfaceData

;; *************** function _RefInterfaceData *****************
;; Defined at:
;;		line 346 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RdPrt
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text80,class=CODE,space=0,reloc=2
global __ptext80
__ptext80:
psect	text80
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	346
	global	__size_of_RefInterfaceData
	__size_of_RefInterfaceData	equ	__end_of_RefInterfaceData-_RefInterfaceData
	
_RefInterfaceData:
	opt	stack 23
	line	381
	
l37272:
;main.c: 381: PFN._EnAleg=(DtKNF.tpkt==0);
	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	btfsc	status,2
	goto	u70851
	goto	u70850
u70851:
	movlw	1
	goto	u70856
u70850:
	movlw	0
u70856:
	movwf	(??_RefInterfaceData+0+0)&0ffh,c
	rrcf	((??_RefInterfaceData+0+0)),c
	rrcf	((??_RefInterfaceData+0+0)),c
	movf	(0+(_PFN+02h))&0ffh,w
	xorwf	((??_RefInterfaceData+0+0)),c,w
	andlw	not (((1<<1)-1)<<7)
	xorwf	((??_RefInterfaceData+0+0)),c,w
	movwf	(0+(_PFN+02h))&0ffh
	line	382
	
l37274:; BSR set to: 1

;main.c: 382: PFN._plmCO=M._PRACA&&!M._RPM_CW&&RdPrt(5);
	clrf	((c:_RefInterfaceData$2069)),c
	
l37276:; BSR set to: 1

	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u70861
	goto	u70860
u70861:
	goto	l37284
u70860:
	
l37278:; BSR set to: 0

	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u70871
	goto	u70870
u70871:
	goto	l37284
u70870:
	
l37280:; BSR set to: 0

	movlw	(05h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u70881
	goto	u70880
u70881:
	goto	l37284
u70880:
	
l37282:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_RefInterfaceData$2069)),c
	
l37284:; BSR set to: 0

	btfsc	(c:_RefInterfaceData$2069),c,0
	bra	u70895
	movlb	1	; () banked
	bcf	(0+(_PFN+03h))&0ffh,5
	bra	u70896
	u70895:
	movlb	1	; () banked
	bsf	(0+(_PFN+03h))&0ffh,5
	u70896:

	line	383
	
l37286:; BSR set to: 1

;main.c: 383: PFN._plmCW=M._PRACA&&M._RPM_CW&&RdPrt(5);
	clrf	((c:_RefInterfaceData$2070)),c
	
l37288:; BSR set to: 1

	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u70901
	goto	u70900
u70901:
	goto	l37296
u70900:
	
l37290:; BSR set to: 0

	
	btfss	(0+(_M+01Bh))&0ffh,7
	goto	u70911
	goto	u70910
u70911:
	goto	l37296
u70910:
	
l37292:; BSR set to: 0

	movlw	(05h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u70921
	goto	u70920
u70921:
	goto	l37296
u70920:
	
l37294:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_RefInterfaceData$2070)),c
	
l37296:; BSR set to: 0

	btfsc	(c:_RefInterfaceData$2070),c,0
	bra	u70935
	movlb	1	; () banked
	bcf	(0+(_PFN+03h))&0ffh,6
	bra	u70936
	u70935:
	movlb	1	; () banked
	bsf	(0+(_PFN+03h))&0ffh,6
	u70936:

	line	384
	
l37298:; BSR set to: 1

;main.c: 384: PFN._ofnserw=M._AKTYWNE_SRW;
	movlb	0	; () banked
	btfsc	0+(_M+012h)&0ffh,0
	bra	u70945
	movlb	1	; () banked
	bcf	(0+(_PFN+03h))&0ffh,7
	bra	u70946
	u70945:
	movlb	1	; () banked
	bsf	(0+(_PFN+03h))&0ffh,7
	u70946:

	line	385
	
l37300:; BSR set to: 1

;main.c: 385: PFN._oaleg=M._AKTYWNE_AL;
	movlb	0	; () banked
	btfsc	0+(_M+014h)&0ffh,0
	bra	u70955
	movlb	1	; () banked
	bcf	(0+(_PFN+04h))&0ffh,0
	bra	u70956
	u70955:
	movlb	1	; () banked
	bsf	(0+(_PFN+04h))&0ffh,0
	u70956:

	line	386
	
l37302:; BSR set to: 1

;main.c: 386: PFN._opKNF=M._AKTYWNE_KNF;
	movlb	0	; () banked
	btfsc	0+(_M+018h)&0ffh,0
	bra	u70965
	movlb	1	; () banked
	bcf	(0+(_PFN+04h))&0ffh,3
	bra	u70966
	u70965:
	movlb	1	; () banked
	bsf	(0+(_PFN+04h))&0ffh,3
	u70966:

	line	387
	
l37304:; BSR set to: 1

;main.c: 387: PFN._enKNF=DtKNF.enknf;
	btfss	((_DtKNF))&0ffh,0
	bra	u70975
	bsf	(0+(_PFN+04h))&0ffh,4
	bra	u70977
	u70975:	
	movlb	1	; () banked
	bcf	(0+(_PFN+04h))&0ffh,4
	u70977:
	line	389
	
l37306:; BSR set to: 1

;main.c: 389: PFN._tdzCO=PFN._plmCO&&M._pob_DzCO;
	clrf	((c:_RefInterfaceData$2071)),c
	
l37308:; BSR set to: 1

	
	btfss	(0+(_PFN+03h))&0ffh,5
	goto	u70981
	goto	u70980
u70981:
	goto	l37314
u70980:
	
l37310:; BSR set to: 1

	movlb	0	; () banked
	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfsc	status,2
	goto	u70991
	goto	u70990
u70991:
	goto	l37314
u70990:
	
l37312:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_RefInterfaceData$2071)),c
	
l37314:
	btfsc	(c:_RefInterfaceData$2071),c,0
	bra	u71005
	movlb	1	; () banked
	bcf	(0+(_PFN+04h))&0ffh,5
	bra	u71006
	u71005:
	movlb	1	; () banked
	bsf	(0+(_PFN+04h))&0ffh,5
	u71006:

	line	390
	
l37316:; BSR set to: 1

;main.c: 390: PFN._tdzCW=PFN._plmCW&&M._pob_DzCW;
	clrf	((c:_RefInterfaceData$2072)),c
	
l37318:; BSR set to: 1

	
	btfss	(0+(_PFN+03h))&0ffh,6
	goto	u71011
	goto	u71010
u71011:
	goto	l37324
u71010:
	
l37320:; BSR set to: 1

	movlb	0	; () banked
	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfsc	status,2
	goto	u71021
	goto	u71020
u71021:
	goto	l37324
u71020:
	
l37322:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_RefInterfaceData$2072)),c
	
l37324:
	btfsc	(c:_RefInterfaceData$2072),c,0
	bra	u71035
	movlb	1	; () banked
	bcf	(0+(_PFN+04h))&0ffh,6
	bra	u71036
	u71035:
	movlb	1	; () banked
	bsf	(0+(_PFN+04h))&0ffh,6
	u71036:

	line	393
	
l37326:; BSR set to: 1

;main.c: 393: PFN._pgd=M._AKTYWNE_PGD;
	movlb	0	; () banked
	btfsc	0+(_M+016h)&0ffh,0
	bra	u71045
	movlb	1	; () banked
	bcf	(0+(_PFN+05h))&0ffh,2
	bra	u71046
	u71045:
	movlb	1	; () banked
	bsf	(0+(_PFN+05h))&0ffh,2
	u71046:

	line	394
	
l37328:; BSR set to: 1

;main.c: 394: PFN._obgCO=M._PRACA&&!M._RPM_CW;
	clrf	((c:_RefInterfaceData$2073)),c
	
l37330:; BSR set to: 1

	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u71051
	goto	u71050
u71051:
	goto	l37336
u71050:
	
l37332:; BSR set to: 0

	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u71061
	goto	u71060
u71061:
	goto	l37336
u71060:
	
l37334:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_RefInterfaceData$2073)),c
	
l37336:; BSR set to: 0

	btfsc	(c:_RefInterfaceData$2073),c,0
	bra	u71075
	movlb	1	; () banked
	bcf	(0+(_PFN+04h))&0ffh,1
	bra	u71076
	u71075:
	movlb	1	; () banked
	bsf	(0+(_PFN+04h))&0ffh,1
	u71076:

	line	395
	
l37338:; BSR set to: 1

;main.c: 395: PFN._obgCW=M._PRACA&&M._RPM_CW;
	clrf	((c:_RefInterfaceData$2074)),c
	
l37340:; BSR set to: 1

	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u71081
	goto	u71080
u71081:
	goto	l37346
u71080:
	
l37342:; BSR set to: 0

	
	btfss	(0+(_M+01Bh))&0ffh,7
	goto	u71091
	goto	u71090
u71091:
	goto	l37346
u71090:
	
l37344:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_RefInterfaceData$2074)),c
	
l37346:; BSR set to: 0

	btfsc	(c:_RefInterfaceData$2074),c,0
	bra	u71105
	movlb	1	; () banked
	bcf	(0+(_PFN+04h))&0ffh,2
	bra	u71106
	u71105:
	movlb	1	; () banked
	bsf	(0+(_PFN+04h))&0ffh,2
	u71106:

	line	397
	
l37348:; BSR set to: 1

;main.c: 397: PFN._errCS=DtCS._error;
	btfss	((c:_DtCS)),c,3
	bra	u71115
	bsf	(0+(_PFN+05h))&0ffh,5
	bra	u71117
	u71115:	
	movlb	1	; () banked
	bcf	(0+(_PFN+05h))&0ffh,5
	u71117:
	line	398
	
l37350:; BSR set to: 1

;main.c: 398: PFN._errCO=DtCO._err_CO;
	movlb	0	; () banked
	btfss	((_DtCO))&0ffh,0
	bra	u71125
	movlb	1	; () banked
	bsf	(0+(_PFN+05h))&0ffh,6
	bra	u71127
	u71125:	
	movlb	1	; () banked
	bcf	(0+(_PFN+05h))&0ffh,6
	u71127:
	line	399
	
l37352:; BSR set to: 1

;main.c: 399: PFN._errCW=DtCW._err_CW;
	movlb	0	; () banked
	btfss	((_DtCW))&0ffh,0
	bra	u71135
	movlb	1	; () banked
	bsf	(0+(_PFN+05h))&0ffh,7
	bra	u71137
	u71135:	
	movlb	1	; () banked
	bcf	(0+(_PFN+05h))&0ffh,7
	u71137:
	line	400
	
l37354:; BSR set to: 1

;main.c: 400: PFN._fnoCS=DtCS._no_mont;
	btfsc	0+((c:_DtCS)+01h),c,0
	bra	u71145
	bcf	(0+(_PFN+06h))&0ffh,0
	bra	u71146
	u71145:
	movlb	1	; () banked
	bsf	(0+(_PFN+06h))&0ffh,0
	u71146:

	line	402
	
l37356:; BSR set to: 1

;main.c: 402: PFN._ofzima=PFN._zima;
	btfss	((_PFN))&0ffh,2
	bra	u71155
	bsf	(0+(_PFN+06h))&0ffh,1
	bra	u71157
	u71155:	
	movlb	1	; () banked
	bcf	(0+(_PFN+06h))&0ffh,1
	u71157:
	line	403
	
l37358:; BSR set to: 1

;main.c: 403: PFN._oflato=PFN._lato;
	btfss	((_PFN))&0ffh,1
	bra	u71165
	bsf	(0+(_PFN+06h))&0ffh,2
	bra	u71167
	u71165:	
	movlb	1	; () banked
	bcf	(0+(_PFN+06h))&0ffh,2
	u71167:
	line	404
	
l37360:; BSR set to: 1

;main.c: 404: PFN._ofoff=PFN._off;
	btfss	((_PFN))&0ffh,0
	bra	u71175
	bsf	(0+(_PFN+06h))&0ffh,3
	bra	u71177
	u71175:	
	movlb	1	; () banked
	bcf	(0+(_PFN+06h))&0ffh,3
	u71177:
	line	406
	
l37362:; BSR set to: 1

;main.c: 406: PFN._errIN=DtIN._err_IN;
	btfss	((_DtIN))&0ffh,0
	bra	u71185
	bsf	(0+(_PFN+06h))&0ffh,4
	bra	u71187
	u71185:	
	movlb	1	; () banked
	bcf	(0+(_PFN+06h))&0ffh,4
	u71187:
	line	407
	
l37364:; BSR set to: 1

;main.c: 407: PFN._pmpPWM=(DtKNF.rdpm!=0)?1:0;
	movlw	(0)&0ffh
	lfsr	2,_DtKNF+09h
	clrf	prodl
	cpfseq	indf2
	incf	prodl
	movff	prodl,??_RefInterfaceData+0+0
	swapf	(??_RefInterfaceData+0+0),c
	rlncf	(??_RefInterfaceData+0+0),c
	movf	(0+(_PFN+06h))&0ffh,w
	xorwf	(??_RefInterfaceData+0+0),c,w
	andlw	not (((1<<1)-1)<<5)
	xorwf	(??_RefInterfaceData+0+0),c,w
	movwf	(0+(_PFN+06h))&0ffh
	line	408
	
l37366:; BSR set to: 1

;main.c: 408: PFN._trbECO=(DtKNF.teco!=0)?1:0;
	movlw	(0)&0ffh
	lfsr	2,_DtKNF+0Ch
	clrf	prodl
	cpfseq	indf2
	incf	prodl
	movff	prodl,??_RefInterfaceData+0+0
	swapf	(??_RefInterfaceData+0+0),c
	rlncf	(??_RefInterfaceData+0+0),c
	rlncf	(??_RefInterfaceData+0+0),c
	movf	(0+(_PFN+06h))&0ffh,w
	xorwf	(??_RefInterfaceData+0+0),c,w
	andlw	not (((1<<1)-1)<<6)
	xorwf	(??_RefInterfaceData+0+0),c,w
	movwf	(0+(_PFN+06h))&0ffh
	line	410
	
l37368:; BSR set to: 1

;main.c: 410: if(PFN._ofnserw) PFN.b_ofnserw=1;
	
	btfss	(0+(_PFN+03h))&0ffh,7
	goto	u71191
	goto	u71190
u71191:
	goto	l665
u71190:
	
l37370:; BSR set to: 1

	bsf	(0+(_PFN+019h))&0ffh,0
	
l665:; BSR set to: 1

	line	411
;main.c: 411: if(PFN._ofnserw&&!PFN._fnserw) PFN._fnserw=1;
	
	btfss	(0+(_PFN+03h))&0ffh,7
	goto	u71201
	goto	u71200
u71201:
	goto	l666
u71200:
	
l37372:; BSR set to: 1

	
	btfsc	(0+(_PFN+01h))&0ffh,6
	goto	u71211
	goto	u71210
u71211:
	goto	l666
u71210:
	
l37374:; BSR set to: 1

	bsf	(0+(_PFN+01h))&0ffh,6
	
l666:; BSR set to: 1

	line	412
;main.c: 412: if(PFN.b_ofnserw&&!PFN._ofnserw) PFN._fnserw=0;
	
	btfss	(0+(_PFN+019h))&0ffh,0
	goto	u71221
	goto	u71220
u71221:
	goto	l667
u71220:
	
l37376:; BSR set to: 1

	
	btfsc	(0+(_PFN+03h))&0ffh,7
	goto	u71231
	goto	u71230
u71231:
	goto	l667
u71230:
	
l37378:; BSR set to: 1

	bcf	(0+(_PFN+01h))&0ffh,6
	
l667:; BSR set to: 1

	line	413
;main.c: 413: if(PFN._oaleg) PFN.b_oaleg=1;
	
	btfss	(0+(_PFN+04h))&0ffh,0
	goto	u71241
	goto	u71240
u71241:
	goto	l668
u71240:
	
l37380:; BSR set to: 1

	bsf	(0+(_PFN+019h))&0ffh,1
	
l668:; BSR set to: 1

	line	414
;main.c: 414: if(PFN._oaleg&&!PFN._aleg) PFN._aleg=1;
	
	btfss	(0+(_PFN+04h))&0ffh,0
	goto	u71251
	goto	u71250
u71251:
	goto	l669
u71250:
	
l37382:; BSR set to: 1

	
	btfsc	(0+(_PFN+02h))&0ffh,0
	goto	u71261
	goto	u71260
u71261:
	goto	l669
u71260:
	
l37384:; BSR set to: 1

	bsf	(0+(_PFN+02h))&0ffh,0
	
l669:; BSR set to: 1

	line	415
;main.c: 415: if(PFN.b_oaleg&&!PFN._oaleg) PFN._aleg=0;
	
	btfss	(0+(_PFN+019h))&0ffh,1
	goto	u71271
	goto	u71270
u71271:
	goto	l671
u71270:
	
l37386:; BSR set to: 1

	
	btfsc	(0+(_PFN+04h))&0ffh,0
	goto	u71281
	goto	u71280
u71281:
	goto	l671
u71280:
	
l37388:; BSR set to: 1

	bcf	(0+(_PFN+02h))&0ffh,0
	line	428
	
l671:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RefInterfaceData
	__end_of_RefInterfaceData:
	signat	_RefInterfaceData,88
	global	_ZmienKCOKCW

;; *************** function _ZmienKCOKCW *****************
;; Defined at:
;;		line 3055 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;;		_RTdS
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text81,class=CODE,space=0,reloc=2
global __ptext81
__ptext81:
psect	text81
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3055
	global	__size_of_ZmienKCOKCW
	__size_of_ZmienKCOKCW	equ	__end_of_ZmienKCOKCW-_ZmienKCOKCW
	
_ZmienKCOKCW:; BSR set to: 1

	opt	stack 23
	line	3056
	
l39250:; BSR set to: 0

;main.c: 3056: switch(DtKNF.tpkt)
	goto	l39322
	line	3065
	
l39252:; BSR set to: 0

;main.c: 3064: {
;main.c: 3065: PORTDbits.RD2=!PORTDbits.RD2;
	
	btfss	((c:3971)),c,2	;volatile
	goto	u77931
	goto	u77930
u77931:
	movlw	1
	goto	u77936
u77930:
	movlw	0
u77936:
	movwf	(??_ZmienKCOKCW+0+0)&0ffh,c
	rlncf	((??_ZmienKCOKCW+0+0)),c
	rlncf	((??_ZmienKCOKCW+0+0)),c
	movf	((c:3971)),c,w	;volatile
	xorwf	((??_ZmienKCOKCW+0+0)),c,w
	andlw	not (((1<<1)-1)<<2)
	xorwf	((??_ZmienKCOKCW+0+0)),c,w
	movwf	((c:3971)),c	;volatile
	line	3066
	
l39254:; BSR set to: 0

;main.c: 3066: M.ZKP=1;
	movlw	low(01h)
	movwf	(0+(_M+02Dh))&0ffh
	line	3067
	
l39256:; BSR set to: 0

;main.c: 3067: StartRTdS(1);
	movlw	(01h)&0ffh
	
	call	_StartRTdS
	line	3071
	
l39258:
;main.c: 3070: {
;main.c: 3071: if(RTdS(1)<10/2) return;
	movlw	(01h)&0ffh
	
	call	_RTdS
	movwf	(??_ZmienKCOKCW+0+0)&0ffh,c
	movlw	(05h)&0ffh
	subwf	((??_ZmienKCOKCW+0+0)),c,w
	btfsc	status,0
	goto	u77941
	goto	u77940
u77941:
	goto	l1548
u77940:
	goto	l1549
	
l1548:; BSR set to: 1

	line	3072
;main.c: 3072: M._ZMKCOCW=0;
	movlb	0	; () banked
	bcf	(0+(_M+010h))&0ffh,1
	line	3073
;main.c: 3073: M.ZKP=0;
	clrf	(0+(_M+02Dh))&0ffh
	line	3075
;main.c: 3074: }
;main.c: 3075: }
	goto	l1549
	line	3061
	
l39262:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+02Dh))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39252
	xorlw	1^0	; case 1
	skipnz
	goto	l39258
	goto	l1549

	line	3085
	
l39264:; BSR set to: 0

;main.c: 3084: {
;main.c: 3085: M.ZKP=1;
	movlw	low(01h)
	movwf	(0+(_M+02Dh))&0ffh
	line	3086
	
l39266:; BSR set to: 0

;main.c: 3086: PORTDbits.RD2=0;
	bcf	((c:3971)),c,2	;volatile
	line	3087
	
l39268:; BSR set to: 0

;main.c: 3087: StartRTdS(1);
	movlw	(01h)&0ffh
	
	call	_StartRTdS
	line	3091
	
l39270:
;main.c: 3090: {
;main.c: 3091: if(RTdS(1)<10/2) return;
	movlw	(01h)&0ffh
	
	call	_RTdS
	movwf	(??_ZmienKCOKCW+0+0)&0ffh,c
	movlw	(05h)&0ffh
	subwf	((??_ZmienKCOKCW+0+0)),c,w
	btfsc	status,0
	goto	u77951
	goto	u77950
u77951:
	goto	l39274
u77950:
	goto	l1549
	line	3092
	
l39274:; BSR set to: 1

;main.c: 3092: PORTDbits.RD1=!PORTDbits.RD1;
	
	btfss	((c:3971)),c,1	;volatile
	goto	u77961
	goto	u77960
u77961:
	movlw	1
	goto	u77966
u77960:
	movlw	0
u77966:
	movwf	(??_ZmienKCOKCW+0+0)&0ffh,c
	rlncf	((??_ZmienKCOKCW+0+0)),c
	movf	((c:3971)),c,w	;volatile
	xorwf	((??_ZmienKCOKCW+0+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ZmienKCOKCW+0+0)),c,w
	movwf	((c:3971)),c	;volatile
	line	3093
	
l39276:; BSR set to: 1

;main.c: 3093: M.ZKP=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	(0+(_M+02Dh))&0ffh
	line	3097
	
l39278:; BSR set to: 0

;main.c: 3096: {
;main.c: 3097: if(RTdS(1)<10) return;
	movlw	(01h)&0ffh
	
	call	_RTdS
	movwf	(??_ZmienKCOKCW+0+0)&0ffh,c
	movlw	(0Ah)&0ffh
	subwf	((??_ZmienKCOKCW+0+0)),c,w
	btfsc	status,0
	goto	u77971
	goto	u77970
u77971:
	goto	l1558
u77970:
	goto	l1549
	
l1558:; BSR set to: 1

	line	3098
;main.c: 3098: M._ZMKCOCW=0;
	movlb	0	; () banked
	bcf	(0+(_M+010h))&0ffh,1
	line	3099
;main.c: 3099: M.ZKP=0;
	clrf	(0+(_M+02Dh))&0ffh
	line	3102
;main.c: 3102: if(M._ROZRUCH||PORTDbits.RD0||M._WYLACZ) PORTDbits.RD2=1;
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u77981
	goto	u77980
u77981:
	goto	l1561
u77980:
	
l39282:; BSR set to: 0

	
	btfsc	((c:3971)),c,0	;volatile
	goto	u77991
	goto	u77990
u77991:
	goto	l1561
u77990:
	
l39284:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,0
	goto	u78001
	goto	u78000
u78001:
	goto	l1559
u78000:
	
l1561:; BSR set to: 0

	bsf	((c:3971)),c,2	;volatile
	
l1559:; BSR set to: 0

	line	3103
;main.c: 3103: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u78011
	goto	u78010
u78011:
	goto	l1549
u78010:
	line	3105
	
l39286:; BSR set to: 1

;main.c: 3104: {
;main.c: 3105: if(M._RUSZ_POMPE) PORTDbits.RD2=1;
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,2
	goto	u78021
	goto	u78020
u78021:
	goto	l1549
u78020:
	
l39288:; BSR set to: 0

	bsf	((c:3971)),c,2	;volatile
	goto	l1549
	line	3081
	
l39290:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+02Dh))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 3, Range of values is 0 to 2
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           10     6 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39264
	xorlw	1^0	; case 1
	skipnz
	goto	l39270
	xorlw	2^1	; case 2
	skipnz
	goto	l39278
	goto	l1549

	line	3117
	
l39292:; BSR set to: 0

;main.c: 3116: {
;main.c: 3117: M.ZKP=1;
	movlw	low(01h)
	movwf	(0+(_M+02Dh))&0ffh
	line	3118
	
l39294:; BSR set to: 0

;main.c: 3118: PORTDbits.RD2=0;
	bcf	((c:3971)),c,2	;volatile
	line	3119
	
l39296:; BSR set to: 0

;main.c: 3119: StartRTdS(1);
	movlw	(01h)&0ffh
	
	call	_StartRTdS
	line	3123
	
l39298:
;main.c: 3122: {
;main.c: 3123: if(RTdS(1)<10/2) return;
	movlw	(01h)&0ffh
	
	call	_RTdS
	movwf	(??_ZmienKCOKCW+0+0)&0ffh,c
	movlw	(05h)&0ffh
	subwf	((??_ZmienKCOKCW+0+0)),c,w
	btfsc	status,0
	goto	u78031
	goto	u78030
u78031:
	goto	l39302
u78030:
	goto	l1549
	line	3124
	
l39302:; BSR set to: 1

;main.c: 3124: PORTDbits.RD1=!PORTDbits.RD1;
	
	btfss	((c:3971)),c,1	;volatile
	goto	u78041
	goto	u78040
u78041:
	movlw	1
	goto	u78046
u78040:
	movlw	0
u78046:
	movwf	(??_ZmienKCOKCW+0+0)&0ffh,c
	rlncf	((??_ZmienKCOKCW+0+0)),c
	movf	((c:3971)),c,w	;volatile
	xorwf	((??_ZmienKCOKCW+0+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ZmienKCOKCW+0+0)),c,w
	movwf	((c:3971)),c	;volatile
	line	3125
	
l39304:; BSR set to: 1

;main.c: 3125: M.ZKP=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	(0+(_M+02Dh))&0ffh
	line	3129
	
l39306:; BSR set to: 0

;main.c: 3128: {
;main.c: 3129: if(RTdS(1)<10) return;
	movlw	(01h)&0ffh
	
	call	_RTdS
	movwf	(??_ZmienKCOKCW+0+0)&0ffh,c
	movlw	(0Ah)&0ffh
	subwf	((??_ZmienKCOKCW+0+0)),c,w
	btfsc	status,0
	goto	u78051
	goto	u78050
u78051:
	goto	l1571
u78050:
	goto	l1549
	
l1571:; BSR set to: 1

	line	3130
;main.c: 3130: M._ZMKCOCW=0;
	movlb	0	; () banked
	bcf	(0+(_M+010h))&0ffh,1
	line	3131
;main.c: 3131: M.ZKP=0;
	clrf	(0+(_M+02Dh))&0ffh
	line	3134
;main.c: 3134: if(M._ROZRUCH||PORTDbits.RD0||M._WYLACZ) PORTDbits.RD2=1;
	
	btfsc	(0+(_M+010h))&0ffh,2
	goto	u78061
	goto	u78060
u78061:
	goto	l1574
u78060:
	
l39310:; BSR set to: 0

	
	btfsc	((c:3971)),c,0	;volatile
	goto	u78071
	goto	u78070
u78071:
	goto	l1574
u78070:
	
l39312:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,0
	goto	u78081
	goto	u78080
u78081:
	goto	l1572
u78080:
	
l1574:; BSR set to: 0

	bsf	((c:3971)),c,2	;volatile
	
l1572:; BSR set to: 0

	line	3135
;main.c: 3135: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u78091
	goto	u78090
u78091:
	goto	l1549
u78090:
	line	3137
	
l39314:; BSR set to: 1

;main.c: 3136: {
;main.c: 3137: if(M._RUSZ_POMPE) PORTDbits.RD2=1;
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,2
	goto	u78101
	goto	u78100
u78101:
	goto	l1549
u78100:
	goto	l39288
	line	3113
	
l39318:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+02Dh))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 3, Range of values is 0 to 2
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           10     6 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39292
	xorlw	1^0	; case 1
	skipnz
	goto	l39298
	xorlw	2^1	; case 2
	skipnz
	goto	l39306
	goto	l1549

	line	3056
	
l39322:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39290
	xorlw	1^0	; case 1
	skipnz
	goto	l39262
	xorlw	2^1	; case 2
	skipnz
	goto	l39262
	xorlw	3^2	; case 3
	skipnz
	goto	l39290
	goto	l39318

	line	3144
	
l1549:
	return
	opt stack 0
GLOBAL	__end_of_ZmienKCOKCW
	__end_of_ZmienKCOKCW:
	signat	_ZmienKCOKCW,88
	global	_Wylacz

;; *************** function _Wylacz *****************
;; Defined at:
;;		line 2714 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTS
;;		_RTS
;;		_RdPrt
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text82,class=CODE,space=0,reloc=2
global __ptext82
__ptext82:
psect	text82
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2714
	global	__size_of_Wylacz
	__size_of_Wylacz	equ	__end_of_Wylacz-_Wylacz
	
_Wylacz:
	opt	stack 23
	line	2715
	
l39324:; BSR set to: 0

;main.c: 2715: switch(DtKNF.tpkt)
	goto	l39536
	line	2724
	
l39326:; BSR set to: 0

;main.c: 2723: {
;main.c: 2724: M.WYL=1;
	movlw	low(01h)
	movwf	(0+(_M+028h))&0ffh
	line	2725
	
l39328:; BSR set to: 0

;main.c: 2725: StartRTS(7);
	movlw	(07h)&0ffh
	
	call	_StartRTS
	line	2729
	
l39330:
;main.c: 2728: {
;main.c: 2729: if(M._KCW_PMP)
	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,5
	goto	u78111
	goto	u78110
u78111:
	goto	l39352
u78110:
	line	2731
	
l39332:; BSR set to: 0

;main.c: 2730: {
;main.c: 2731: if(RTS(7)>=20)
	movlw	(07h)&0ffh
	
	call	_RTS
	movwf	(??_Wylacz+0+0)&0ffh,c
	movlw	(014h)&0ffh
	subwf	((??_Wylacz+0+0)),c,w
	btfss	status,0
	goto	u78121
	goto	u78120
u78121:
	goto	l39342
u78120:
	line	2733
	
l39334:; BSR set to: 1

;main.c: 2732: {
;main.c: 2733: if(!DtCO._err_CO&&DtCO._ptwp_CO)
	movlb	0	; () banked
	
	btfsc	((_DtCO))&0ffh,0
	goto	u78131
	goto	u78130
u78131:
	goto	l39342
u78130:
	
l39336:; BSR set to: 0

	
	btfss	(0+(_DtCO+01h))&0ffh,0
	goto	u78141
	goto	u78140
u78141:
	goto	l39342
u78140:
	line	2735
	
l39338:
;main.c: 2734: {
;main.c: 2735: M.WYL=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	(0+(_M+028h))&0ffh
	goto	l1433
	line	2739
	
l39342:
;main.c: 2737: }
;main.c: 2738: }
;main.c: 2739: if(RTS(7)<180) return;
	movlw	(07h)&0ffh
	
	call	_RTS
	movwf	(??_Wylacz+0+0)&0ffh,c
	movlw	(0B4h)&0ffh
	subwf	((??_Wylacz+0+0)),c,w
	btfsc	status,0
	goto	u78151
	goto	u78150
u78151:
	goto	l39338
u78150:
	goto	l1433
	line	2745
	
l39352:; BSR set to: 0

;main.c: 2743: else
;main.c: 2744: {
;main.c: 2745: if(RTS(7)<180) return;
	movlw	(07h)&0ffh
	
	call	_RTS
	movwf	(??_Wylacz+0+0)&0ffh,c
	movlw	(0B4h)&0ffh
	subwf	((??_Wylacz+0+0)),c,w
	btfsc	status,0
	goto	u78161
	goto	u78160
u78161:
	goto	l39356
u78160:
	goto	l1433
	line	2746
	
l39356:; BSR set to: 1

;main.c: 2746: M.WYL=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	(0+(_M+028h))&0ffh
	line	2751
	
l39358:; BSR set to: 0

;main.c: 2750: {
;main.c: 2751: if(RdPrt(13)) return;
	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u78171
	goto	u78170
u78171:
	goto	l1438
u78170:
	goto	l1433
	
l1438:; BSR set to: 0

	line	2752
;main.c: 2752: if(!M._KCW_PMP)
	
	btfsc	(0+(_M+01Bh))&0ffh,5
	goto	u78181
	goto	u78180
u78181:
	goto	l1439
u78180:
	line	2754
	
l39362:; BSR set to: 0

;main.c: 2753: {
;main.c: 2754: if(!DtCO._err_CO&&!DtCO._su_CO) return;
	
	btfsc	((_DtCO))&0ffh,0
	goto	u78191
	goto	u78190
u78191:
	goto	l1439
u78190:
	
l39364:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,1
	goto	u78201
	goto	u78200
u78201:
	goto	l1439
u78200:
	goto	l1433
	line	2755
	
l1439:; BSR set to: 0

	line	2756
;main.c: 2755: }
;main.c: 2756: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u78211
	goto	u78210
u78211:
	goto	l1441
u78210:
	line	2758
	
l39368:; BSR set to: 1

;main.c: 2757: {
;main.c: 2758: if(M._RUSZ_POMPE) return;
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,2
	goto	u78221
	goto	u78220
u78221:
	goto	l1441
u78220:
	goto	l1433
	line	2759
	
l1441:
	line	2760
;main.c: 2759: }
;main.c: 2760: M._KCW_PMP=0;
	movlb	0	; () banked
	bcf	(0+(_M+01Bh))&0ffh,5
	line	2761
;main.c: 2761: M._WYLACZ=0;
	bcf	(0+(_M+010h))&0ffh,0
	line	2762
;main.c: 2762: M.WYL=0;
	clrf	(0+(_M+028h))&0ffh
	line	2764
;main.c: 2763: }
;main.c: 2764: }
	goto	l1433
	line	2720
	
l39372:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+028h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 3, Range of values is 0 to 2
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           10     6 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39326
	xorlw	1^0	; case 1
	skipnz
	goto	l39330
	xorlw	2^1	; case 2
	skipnz
	goto	l39358
	goto	l1433

	line	2773
	
l39374:; BSR set to: 0

;main.c: 2772: {
;main.c: 2773: M.WYL=1;
	movlw	low(01h)
	movwf	(0+(_M+028h))&0ffh
	line	2774
	
l39376:; BSR set to: 0

;main.c: 2774: StartRTS(7);
	movlw	(07h)&0ffh
	
	call	_StartRTS
	line	2778
	
l39378:
;main.c: 2777: {
;main.c: 2778: if(M._RPM_CW)
	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,7
	goto	u78231
	goto	u78230
u78231:
	goto	l39400
u78230:
	line	2780
	
l39380:; BSR set to: 0

;main.c: 2779: {
;main.c: 2780: if(RTS(7)>=20)
	movlw	(07h)&0ffh
	
	call	_RTS
	movwf	(??_Wylacz+0+0)&0ffh,c
	movlw	(014h)&0ffh
	subwf	((??_Wylacz+0+0)),c,w
	btfss	status,0
	goto	u78241
	goto	u78240
u78241:
	goto	l39390
u78240:
	line	2782
	
l39382:; BSR set to: 1

;main.c: 2781: {
;main.c: 2782: if(!DtCO._err_CO&&DtCO._ptwp_CO)
	movlb	0	; () banked
	
	btfsc	((_DtCO))&0ffh,0
	goto	u78251
	goto	u78250
u78251:
	goto	l39390
u78250:
	
l39384:; BSR set to: 0

	
	btfss	(0+(_DtCO+01h))&0ffh,0
	goto	u78261
	goto	u78260
u78261:
	goto	l39390
u78260:
	goto	l39338
	line	2788
	
l39390:
;main.c: 2786: }
;main.c: 2787: }
;main.c: 2788: if(RTS(7)<180) return;
	movlw	(07h)&0ffh
	
	call	_RTS
	movwf	(??_Wylacz+0+0)&0ffh,c
	movlw	(0B4h)&0ffh
	subwf	((??_Wylacz+0+0)),c,w
	btfsc	status,0
	goto	u78271
	goto	u78270
u78271:
	goto	l39338
u78270:
	goto	l1433
	line	2794
	
l39400:; BSR set to: 0

;main.c: 2792: else
;main.c: 2793: {
;main.c: 2794: if(RTS(7)<180) return;
	movlw	(07h)&0ffh
	
	call	_RTS
	movwf	(??_Wylacz+0+0)&0ffh,c
	movlw	(0B4h)&0ffh
	subwf	((??_Wylacz+0+0)),c,w
	btfsc	status,0
	goto	u78281
	goto	u78280
u78281:
	goto	l39404
u78280:
	goto	l1433
	line	2795
	
l39404:; BSR set to: 1

;main.c: 2795: M.WYL=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	(0+(_M+028h))&0ffh
	line	2800
	
l39406:; BSR set to: 0

;main.c: 2799: {
;main.c: 2800: if(!M._RPM_CW)
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u78291
	goto	u78290
u78291:
	goto	l1455
u78290:
	line	2802
	
l39408:; BSR set to: 0

;main.c: 2801: {
;main.c: 2802: if(RdPrt(13)) return;
	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u78301
	goto	u78300
u78301:
	goto	l1456
u78300:
	goto	l1433
	
l1456:; BSR set to: 0

	line	2803
;main.c: 2803: if(!DtCO._err_CO&&!DtCO._su_CO) return;
	
	btfsc	((_DtCO))&0ffh,0
	goto	u78311
	goto	u78310
u78311:
	goto	l1458
u78310:
	
l39412:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,1
	goto	u78321
	goto	u78320
u78321:
	goto	l1458
u78320:
	goto	l1433
	line	2805
	
l1455:; BSR set to: 0

	line	2807
;main.c: 2805: else
;main.c: 2806: {
;main.c: 2807: if(!DtCO._err_CO&&!DtCO._ptwp_CO&&M._pob_CW) return;
	
	btfsc	((_DtCO))&0ffh,0
	goto	u78331
	goto	u78330
u78331:
	goto	l1458
u78330:
	
l39416:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,0
	goto	u78341
	goto	u78340
u78341:
	goto	l1458
u78340:
	
l39418:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u78351
	goto	u78350
u78351:
	goto	l1458
u78350:
	goto	l1433
	line	2808
	
l1458:; BSR set to: 0

	line	2809
;main.c: 2808: }
;main.c: 2809: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u78361
	goto	u78360
u78361:
	goto	l1460
u78360:
	line	2811
	
l39422:; BSR set to: 1

;main.c: 2810: {
;main.c: 2811: if(M._RUSZ_POMPE) return;
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,2
	goto	u78371
	goto	u78370
u78371:
	goto	l1460
u78370:
	goto	l1433
	line	2812
	
l1460:
	line	2813
;main.c: 2812: }
;main.c: 2813: if(!M._ZMKCOCW) PORTDbits.RD2=0;
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u78381
	goto	u78380
u78381:
	goto	l1462
u78380:
	
l39426:; BSR set to: 0

	bcf	((c:3971)),c,2	;volatile
	
l1462:; BSR set to: 0

	line	2814
;main.c: 2814: M._WYLACZ=0;
	bcf	(0+(_M+010h))&0ffh,0
	line	2815
;main.c: 2815: M.WYL=0;
	clrf	(0+(_M+028h))&0ffh
	line	2817
;main.c: 2816: }
;main.c: 2817: }
	goto	l1433
	line	2769
	
l39428:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+028h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 3, Range of values is 0 to 2
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           10     6 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39374
	xorlw	1^0	; case 1
	skipnz
	goto	l39378
	xorlw	2^1	; case 2
	skipnz
	goto	l39406
	goto	l1433

	line	2826
	
l39430:; BSR set to: 0

;main.c: 2825: {
;main.c: 2826: M.WYL=1;
	movlw	low(01h)
	movwf	(0+(_M+028h))&0ffh
	line	2827
	
l39432:; BSR set to: 0

;main.c: 2827: StartRTS(7);
	movlw	(07h)&0ffh
	
	call	_StartRTS
	line	2831
	
l39434:
;main.c: 2830: {
;main.c: 2831: if(M._RPM_CW)
	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,7
	goto	u78391
	goto	u78390
u78391:
	goto	l39450
u78390:
	line	2833
	
l39436:; BSR set to: 0

;main.c: 2832: {
;main.c: 2833: if(RTS(7)<60) return;
	movlw	(07h)&0ffh
	
	call	_RTS
	movwf	(??_Wylacz+0+0)&0ffh,c
	movlw	(03Ch)&0ffh
	subwf	((??_Wylacz+0+0)),c,w
	btfsc	status,0
	goto	u78401
	goto	u78400
u78401:
	goto	l1469
u78400:
	goto	l1433
	
l1469:; BSR set to: 1

	line	2834
;main.c: 2834: if(!DtCO._err_CO)
	movlb	0	; () banked
	
	btfsc	((_DtCO))&0ffh,0
	goto	u78411
	goto	u78410
u78411:
	goto	l39448
u78410:
	line	2836
	
l39440:; BSR set to: 0

;main.c: 2835: {
;main.c: 2836: if(DtCO._ptwp_CO)
	
	btfss	(0+(_DtCO+01h))&0ffh,0
	goto	u78421
	goto	u78420
u78421:
	goto	l1433
u78420:
	goto	l39338
	line	2844
	
l39448:
;main.c: 2842: else
;main.c: 2843: {
;main.c: 2844: M.WYL=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	(0+(_M+028h))&0ffh
	goto	l39456
	line	2849
	
l39450:; BSR set to: 0

;main.c: 2847: else
;main.c: 2848: {
;main.c: 2849: if(RTS(7)<180) return;
	movlw	(07h)&0ffh
	
	call	_RTS
	movwf	(??_Wylacz+0+0)&0ffh,c
	movlw	(0B4h)&0ffh
	subwf	((??_Wylacz+0+0)),c,w
	btfsc	status,0
	goto	u78431
	goto	u78430
u78431:
	goto	l39448
u78430:
	goto	l1433
	line	2855
	
l39456:; BSR set to: 0

;main.c: 2854: {
;main.c: 2855: if(M._RPM_CW)
	
	btfss	(0+(_M+01Bh))&0ffh,7
	goto	u78441
	goto	u78440
u78441:
	goto	l39462
u78440:
	line	2857
	
l39458:; BSR set to: 0

;main.c: 2856: {
;main.c: 2857: if(RdPrt(17)) return;
	movlw	(011h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u78451
	goto	u78450
u78451:
	goto	l1478
u78450:
	goto	l1433
	line	2861
	
l39462:; BSR set to: 0

;main.c: 2859: else
;main.c: 2860: {
;main.c: 2861: if(RdPrt(13)) return;
	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u78461
	goto	u78460
u78461:
	goto	l1479
u78460:
	goto	l1433
	
l1479:; BSR set to: 0

	line	2862
;main.c: 2862: if(!DtCO._err_CO&&!DtCO._su_CO) return;
	
	btfsc	((_DtCO))&0ffh,0
	goto	u78471
	goto	u78470
u78471:
	goto	l1478
u78470:
	
l39466:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,1
	goto	u78481
	goto	u78480
u78481:
	goto	l1478
u78480:
	goto	l1433
	line	2863
	
l1478:; BSR set to: 0

	line	2864
;main.c: 2863: }
;main.c: 2864: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u78491
	goto	u78490
u78491:
	goto	l1481
u78490:
	line	2866
	
l39470:; BSR set to: 1

;main.c: 2865: {
;main.c: 2866: if(M._RUSZ_POMPE) return;
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,2
	goto	u78501
	goto	u78500
u78501:
	goto	l1481
u78500:
	goto	l1433
	line	2867
	
l1481:
	line	2868
;main.c: 2867: }
;main.c: 2868: if(!M._ZMKCOCW)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u78511
	goto	u78510
u78511:
	goto	l1462
u78510:
	goto	l39426
	line	2822
	
l39476:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+028h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 3, Range of values is 0 to 2
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           10     6 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39430
	xorlw	1^0	; case 1
	skipnz
	goto	l39434
	xorlw	2^1	; case 2
	skipnz
	goto	l39456
	goto	l1433

	line	2884
	
l39478:; BSR set to: 0

;main.c: 2883: {
;main.c: 2884: M.WYL=1;
	movlw	low(01h)
	movwf	(0+(_M+028h))&0ffh
	line	2885
	
l39480:; BSR set to: 0

;main.c: 2885: StartRTS(7);
	movlw	(07h)&0ffh
	
	call	_StartRTS
	line	2889
	
l39482:
;main.c: 2888: {
;main.c: 2889: if(M._RPM_CW)
	movlb	0	; () banked
	
	btfss	(0+(_M+01Bh))&0ffh,7
	goto	u78521
	goto	u78520
u78521:
	goto	l39504
u78520:
	line	2891
	
l39484:; BSR set to: 0

;main.c: 2890: {
;main.c: 2891: if(RTS(7)>=20)
	movlw	(07h)&0ffh
	
	call	_RTS
	movwf	(??_Wylacz+0+0)&0ffh,c
	movlw	(014h)&0ffh
	subwf	((??_Wylacz+0+0)),c,w
	btfss	status,0
	goto	u78531
	goto	u78530
u78531:
	goto	l39494
u78530:
	line	2893
	
l39486:; BSR set to: 1

;main.c: 2892: {
;main.c: 2893: if(!DtCO._err_CO&&DtCO._ptwp_CO)
	movlb	0	; () banked
	
	btfsc	((_DtCO))&0ffh,0
	goto	u78541
	goto	u78540
u78541:
	goto	l39494
u78540:
	
l39488:; BSR set to: 0

	
	btfss	(0+(_DtCO+01h))&0ffh,0
	goto	u78551
	goto	u78550
u78551:
	goto	l39494
u78550:
	goto	l39338
	line	2899
	
l39494:
;main.c: 2897: }
;main.c: 2898: }
;main.c: 2899: if(RTS(7)<180) return;
	movlw	(07h)&0ffh
	
	call	_RTS
	movwf	(??_Wylacz+0+0)&0ffh,c
	movlw	(0B4h)&0ffh
	subwf	((??_Wylacz+0+0)),c,w
	btfsc	status,0
	goto	u78561
	goto	u78560
u78561:
	goto	l39338
u78560:
	goto	l1433
	line	2905
	
l39504:; BSR set to: 0

;main.c: 2903: else
;main.c: 2904: {
;main.c: 2905: if(RTS(7)<180) return;
	movlw	(07h)&0ffh
	
	call	_RTS
	movwf	(??_Wylacz+0+0)&0ffh,c
	movlw	(0B4h)&0ffh
	subwf	((??_Wylacz+0+0)),c,w
	btfsc	status,0
	goto	u78571
	goto	u78570
u78571:
	goto	l39508
u78570:
	goto	l1433
	line	2906
	
l39508:; BSR set to: 1

;main.c: 2906: M.WYL=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	(0+(_M+028h))&0ffh
	line	2911
	
l39510:; BSR set to: 0

;main.c: 2910: {
;main.c: 2911: if(!M._RPM_CW)
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u78581
	goto	u78580
u78581:
	goto	l1496
u78580:
	line	2913
	
l39512:; BSR set to: 0

;main.c: 2912: {
;main.c: 2913: if(RdPrt(13)) return;
	movlw	(0Dh)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u78591
	goto	u78590
u78591:
	goto	l1497
u78590:
	goto	l1433
	
l1497:; BSR set to: 0

	line	2914
;main.c: 2914: if(!DtCO._err_CO&&!DtCO._su_CO) return;
	
	btfsc	((_DtCO))&0ffh,0
	goto	u78601
	goto	u78600
u78601:
	goto	l1499
u78600:
	
l39516:; BSR set to: 0

	
	btfsc	((_DtCO))&0ffh,1
	goto	u78611
	goto	u78610
u78611:
	goto	l1499
u78610:
	goto	l1433
	line	2916
	
l1496:; BSR set to: 0

	line	2918
;main.c: 2916: else
;main.c: 2917: {
;main.c: 2918: if(!DtCO._err_CO&&!DtCO._ptwp_CO&&M._pob_CW) return;
	
	btfsc	((_DtCO))&0ffh,0
	goto	u78621
	goto	u78620
u78621:
	goto	l1499
u78620:
	
l39520:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,0
	goto	u78631
	goto	u78630
u78631:
	goto	l1499
u78630:
	
l39522:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u78641
	goto	u78640
u78641:
	goto	l1499
u78640:
	goto	l1433
	line	2919
	
l1499:; BSR set to: 0

	line	2920
;main.c: 2919: }
;main.c: 2920: if(DtKNF.robg==0)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	u78651
	goto	u78650
u78651:
	goto	l1501
u78650:
	line	2922
	
l39526:; BSR set to: 1

;main.c: 2921: {
;main.c: 2922: if(M._RUSZ_POMPE) return;
	movlb	0	; () banked
	
	btfss	(0+(_M+011h))&0ffh,2
	goto	u78661
	goto	u78660
u78661:
	goto	l1501
u78660:
	goto	l1433
	line	2923
	
l1501:
	line	2924
;main.c: 2923: }
;main.c: 2924: if(!M._ZMKCOCW) PORTDbits.RD2=0;
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u78671
	goto	u78670
u78671:
	goto	l1462
u78670:
	goto	l39426
	line	2880
	
l39532:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+028h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 3, Range of values is 0 to 2
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           10     6 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39478
	xorlw	1^0	; case 1
	skipnz
	goto	l39482
	xorlw	2^1	; case 2
	skipnz
	goto	l39510
	goto	l1433

	line	2715
	
l39536:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l39476
	xorlw	1^0	; case 1
	skipnz
	goto	l39372
	xorlw	2^1	; case 2
	skipnz
	goto	l39372
	xorlw	3^2	; case 3
	skipnz
	goto	l39428
	goto	l39532

	line	2932
	
l1433:
	return
	opt stack 0
GLOBAL	__end_of_Wylacz
	__end_of_Wylacz:
	signat	_Wylacz,88
	global	_VWybieg

;; *************** function _VWybieg *****************
;; Defined at:
;;		line 2937 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTS
;;		_RTS
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text83,class=CODE,space=0,reloc=2
global __ptext83
__ptext83:
psect	text83
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2937
	global	__size_of_VWybieg
	__size_of_VWybieg	equ	__end_of_VWybieg-_VWybieg
	
_VWybieg:
	opt	stack 23
	line	2938
	
l31680:; BSR set to: 0

;main.c: 2938: switch(M.VWB)
	goto	l31702
	line	2942
	
l31682:; BSR set to: 0

;main.c: 2941: {
;main.c: 2942: M.VWB=1;
	movlw	low(01h)
	movwf	(0+(_M+02Eh))&0ffh
	line	2943
	
l31684:; BSR set to: 0

;main.c: 2943: M._DE_VNT=1;
	bsf	(0+(_M+01Bh))&0ffh,6
	line	2944
	
l31686:; BSR set to: 0

;main.c: 2944: StartRTS(6);
	movlw	(06h)&0ffh
	
	call	_StartRTS
	line	2948
	
l31688:
;main.c: 2947: {
;main.c: 2948: if(RTS(6)>=2) M._DE_VNT=0;
	movlw	(06h)&0ffh
	
	call	_RTS
	movwf	(??_VWybieg+0+0)&0ffh,c
	movlw	(02h)&0ffh
	subwf	((??_VWybieg+0+0)),c,w
	btfss	status,0
	goto	u58911
	goto	u58910
u58911:
	goto	l31692
u58910:
	
l31690:; BSR set to: 1

	movlb	0	; () banked
	bcf	(0+(_M+01Bh))&0ffh,6
	line	2949
	
l31692:
;main.c: 2949: if(RTS(6)<15) return;
	movlw	(06h)&0ffh
	
	call	_RTS
	movwf	(??_VWybieg+0+0)&0ffh,c
	movlw	(0Fh)&0ffh
	subwf	((??_VWybieg+0+0)),c,w
	btfsc	status,0
	goto	u58921
	goto	u58920
u58921:
	goto	l1512
u58920:
	goto	l1513
	
l1512:; BSR set to: 1

	line	2951
;main.c: 2951: PORTDbits.RD3=0;
	bcf	((c:3971)),c,3	;volatile
	line	2952
;main.c: 2952: M._DE_VNT=1;
	movlb	0	; () banked
	bsf	(0+(_M+01Bh))&0ffh,6
	line	2953
	
l31696:; BSR set to: 0

;main.c: 2953: M.VWB=2;
	movlw	low(02h)
	movwf	(0+(_M+02Eh))&0ffh
	line	2957
	
l31698:; BSR set to: 0

;main.c: 2956: {
;main.c: 2957: if(RTS(6)<15+2) return;
	movlw	(06h)&0ffh
	
	call	_RTS
	movwf	(??_VWybieg+0+0)&0ffh,c
	movlw	(011h)&0ffh
	subwf	((??_VWybieg+0+0)),c,w
	btfsc	status,0
	goto	u58931
	goto	u58930
u58931:
	goto	l1515
u58930:
	goto	l1513
	
l1515:; BSR set to: 1

	line	2958
;main.c: 2958: M._DE_VNT=0;
	movlb	0	; () banked
	bcf	(0+(_M+01Bh))&0ffh,6
	line	2959
;main.c: 2959: M._VWYBIEG=0;
	bcf	(0+(_M+010h))&0ffh,6
	line	2960
;main.c: 2960: M.VWB=0;
	clrf	(0+(_M+02Eh))&0ffh
	line	2962
;main.c: 2961: }
;main.c: 2962: }
	goto	l1513
	line	2938
	
l31702:; BSR set to: 0

	movf	(0+(_M+02Eh))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 3, Range of values is 0 to 2
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           10     6 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l31682
	xorlw	1^0	; case 1
	skipnz
	goto	l31688
	xorlw	2^1	; case 2
	skipnz
	goto	l31698
	goto	l1513

	line	2963
	
l1513:
	return
	opt stack 0
GLOBAL	__end_of_VWybieg
	__end_of_VWybieg:
	signat	_VWybieg,88
	global	_Proba48

;; *************** function _Proba48 *****************
;; Defined at:
;;		line 3354 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTG
;;		_RTG
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text84,class=CODE,space=0,reloc=2
global __ptext84
__ptext84:
psect	text84
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3354
	global	__size_of_Proba48
	__size_of_Proba48	equ	__end_of_Proba48-_Proba48
	
_Proba48:
	opt	stack 23
	line	3356
	
l31906:
;main.c: 3356: if(M._RUSZ_48||M._RUSZ_48Z3) return;
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,3
	goto	u59261
	goto	u59260
u59261:
	goto	l1644
u59260:
	
l31908:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,4
	goto	u59271
	goto	u59270
u59271:
	goto	l1641
u59270:
	goto	l1644
	
l1641:; BSR set to: 0

	line	3357
;main.c: 3357: if(PORTDbits.RD2) StartRTG(0);
	
	btfss	((c:3971)),c,2	;volatile
	goto	u59281
	goto	u59280
u59281:
	goto	l31912
u59280:
	
l31910:; BSR set to: 0

	movlw	(0)&0ffh
	
	call	_StartRTG
	goto	l1644
	line	3360
	
l31912:; BSR set to: 0

;main.c: 3358: else
;main.c: 3359: {
;main.c: 3360: if(RTG(0)>=24)
	movlw	(0)&0ffh
	
	call	_RTG
	movwf	(??_Proba48+0+0)&0ffh,c
	movlw	(018h)&0ffh
	subwf	((??_Proba48+0+0)),c,w
	btfss	status,0
	goto	u59291
	goto	u59290
u59291:
	goto	l1644
u59290:
	line	3362
	
l31914:; BSR set to: 1

;main.c: 3361: {
;main.c: 3362: M.R48=0;
	movlb	0	; () banked
	clrf	(0+(_M+024h))&0ffh
	line	3363
;main.c: 3363: M._RUSZ_48=1;
	bsf	(0+(_M+010h))&0ffh,3
	line	3364
	
l31916:; BSR set to: 0

;main.c: 3364: StartRTG(0);
	movlw	(0)&0ffh
	
	call	_StartRTG
	line	3380
	
l1644:
	return
	opt stack 0
GLOBAL	__end_of_Proba48
	__end_of_Proba48:
	signat	_Proba48,88
	global	_Rusz48

;; *************** function _Rusz48 *****************
;; Defined at:
;;		line 3386 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTS
;;		_ToObiegCO
;;		_RTS
;;		_ToObiegCW
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text85,class=CODE,space=0,reloc=2
global __ptext85
__ptext85:
psect	text85
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3386
	global	__size_of_Rusz48
	__size_of_Rusz48	equ	__end_of_Rusz48-_Rusz48
	
_Rusz48:
	opt	stack 23
	line	3387
	
l31918:; BSR set to: 0

;main.c: 3387: switch(DtKNF.tpkt)
	goto	l31984
	line	3394
;main.c: 3393: {
;main.c: 3394: case 0:
	
l1654:; BSR set to: 0

	line	3396
;main.c: 3395: {
;main.c: 3396: if(M._ZMKCOCW) return;
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u59301
	goto	u59300
u59301:
	goto	l31922
u59300:
	goto	l1656
	line	3397
	
l31922:; BSR set to: 0

;main.c: 3397: StartRTS(5);
	movlw	(05h)&0ffh
	
	call	_StartRTS
	line	3398
	
l31924:; BSR set to: 1

;main.c: 3398: ToObiegCO();
	call	_ToObiegCO	;wreg free
	line	3399
	
l31926:; BSR set to: 0

;main.c: 3399: M.R48=1;
	movlw	low(01h)
	movwf	(0+(_M+024h))&0ffh
	line	3403
	
l31928:; BSR set to: 0

;main.c: 3402: {
;main.c: 3403: if(RTS(5)<180) return;
	movlw	(05h)&0ffh
	
	call	_RTS
	movwf	(??_Rusz48+0+0)&0ffh,c
	movlw	(0B4h)&0ffh
	subwf	((??_Rusz48+0+0)),c,w
	btfsc	status,0
	goto	u59311
	goto	u59310
u59311:
	goto	l1658
u59310:
	goto	l1656
	
l1658:; BSR set to: 1

	line	3404
;main.c: 3404: if(M._ZMKCOCW) return;
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u59321
	goto	u59320
u59321:
	goto	l31934
u59320:
	goto	l1656
	line	3405
	
l31934:; BSR set to: 0

;main.c: 3405: ToObiegCW();
	call	_ToObiegCW	;wreg free
	line	3406
	
l31936:; BSR set to: 0

;main.c: 3406: M._RUSZ_48=0;
	bcf	(0+(_M+010h))&0ffh,3
	line	3407
	
l31938:; BSR set to: 0

;main.c: 3407: M.R48=0;
	clrf	(0+(_M+024h))&0ffh
	line	3409
;main.c: 3408: }
;main.c: 3409: }
	goto	l1656
	line	3392
	
l31940:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+024h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1654
	xorlw	1^0	; case 1
	skipnz
	goto	l31928
	goto	l1656

	line	3419
	
l31942:; BSR set to: 0

;main.c: 3418: {
;main.c: 3419: ToObiegCO();
	call	_ToObiegCO	;wreg free
	line	3420
	
l31944:; BSR set to: 0

;main.c: 3420: if(M._ZMKCOCW) return;
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u59331
	goto	u59330
u59331:
	goto	l31948
u59330:
	goto	l1656
	line	3421
	
l31948:; BSR set to: 0

;main.c: 3421: StartRTS(5);
	movlw	(05h)&0ffh
	
	call	_StartRTS
	line	3422
	
l31950:; BSR set to: 1

;main.c: 3422: PORTDbits.RD2=1;
	bsf	((c:3971)),c,2	;volatile
	line	3423
	
l31952:; BSR set to: 1

;main.c: 3423: M.R48=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	(0+(_M+024h))&0ffh
	line	3427
	
l31954:; BSR set to: 0

;main.c: 3426: {
;main.c: 3427: if(RTS(5)<180) return;
	movlw	(05h)&0ffh
	
	call	_RTS
	movwf	(??_Rusz48+0+0)&0ffh,c
	movlw	(0B4h)&0ffh
	subwf	((??_Rusz48+0+0)),c,w
	btfsc	status,0
	goto	u59341
	goto	u59340
u59341:
	goto	l1668
u59340:
	goto	l1656
	
l1668:; BSR set to: 1

	line	3428
;main.c: 3428: if(M._ZMKCOCW) return;
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u59351
	goto	u59350
u59351:
	goto	l1669
u59350:
	goto	l1656
	
l1669:; BSR set to: 0

	line	3429
;main.c: 3429: PORTDbits.RD2=0;
	bcf	((c:3971)),c,2	;volatile
	line	3430
;main.c: 3430: M._RUSZ_48=0;
	bcf	(0+(_M+010h))&0ffh,3
	line	3431
;main.c: 3431: M.R48=0;
	clrf	(0+(_M+024h))&0ffh
	line	3433
;main.c: 3432: }
;main.c: 3433: }
	goto	l1656
	line	3415
	
l31960:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+024h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l31942
	xorlw	1^0	; case 1
	skipnz
	goto	l31954
	goto	l1656

	line	3442
	
l31962:; BSR set to: 0

;main.c: 3441: {
;main.c: 3442: ToObiegCO();
	call	_ToObiegCO	;wreg free
	line	3443
	
l31964:; BSR set to: 0

;main.c: 3443: if(M._ZMKCOCW) return;
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u59361
	goto	u59360
u59361:
	goto	l31968
u59360:
	goto	l1656
	line	3444
	
l31968:; BSR set to: 0

;main.c: 3444: StartRTS(5);
	movlw	(05h)&0ffh
	
	call	_StartRTS
	line	3445
	
l31970:; BSR set to: 1

;main.c: 3445: PORTDbits.RD2=1;
	bsf	((c:3971)),c,2	;volatile
	line	3446
	
l31972:; BSR set to: 1

;main.c: 3446: M.R48=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	(0+(_M+024h))&0ffh
	line	3450
	
l31974:; BSR set to: 0

;main.c: 3449: {
;main.c: 3450: if(RTS(5)<180) return;
	movlw	(05h)&0ffh
	
	call	_RTS
	movwf	(??_Rusz48+0+0)&0ffh,c
	movlw	(0B4h)&0ffh
	subwf	((??_Rusz48+0+0)),c,w
	btfsc	status,0
	goto	u59371
	goto	u59370
u59371:
	goto	l1676
u59370:
	goto	l1656
	
l1676:; BSR set to: 1

	line	3451
;main.c: 3451: if(M._ZMKCOCW) return;
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u59381
	goto	u59380
u59381:
	goto	l1669
u59380:
	goto	l1656
	line	3438
	
l31980:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+024h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l31962
	xorlw	1^0	; case 1
	skipnz
	goto	l31974
	goto	l1656

	line	3387
	
l31984:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l31960
	xorlw	1^0	; case 1
	skipnz
	goto	l31940
	xorlw	2^1	; case 2
	skipnz
	goto	l31940
	xorlw	3^2	; case 3
	skipnz
	goto	l31960
	goto	l31980

	line	3460
	
l1656:
	return
	opt stack 0
GLOBAL	__end_of_Rusz48
	__end_of_Rusz48:
	signat	_Rusz48,88
	global	_Proba48Z3

;; *************** function _Proba48Z3 *****************
;; Defined at:
;;		line 3464 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTG
;;		_RTG
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text86,class=CODE,space=0,reloc=2
global __ptext86
__ptext86:
psect	text86
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3464
	global	__size_of_Proba48Z3
	__size_of_Proba48Z3	equ	__end_of_Proba48Z3-_Proba48Z3
	
_Proba48Z3:
	opt	stack 23
	line	3466
	
l31986:
;main.c: 3466: switch(DtKNF.tpkt)
	goto	l32004
	line	3468
;main.c: 3467: {
;main.c: 3468: case 3:
	
l1682:; BSR set to: 1

	line	3470
;main.c: 3469: {
;main.c: 3470: if(M._RUSZ_48Z3||M._RUSZ_48) return;
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,4
	goto	u59391
	goto	u59390
u59391:
	goto	l1686
u59390:
	
l31988:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,3
	goto	u59401
	goto	u59400
u59401:
	goto	l1683
u59400:
	goto	l1686
	
l1683:; BSR set to: 0

	line	3471
;main.c: 3471: if(PORTDbits.RD2&&!PORTDbits.RD1) StartRTG(2);
	
	btfss	((c:3971)),c,2	;volatile
	goto	u59411
	goto	u59410
u59411:
	goto	l1687
u59410:
	
l31990:; BSR set to: 0

	
	btfsc	((c:3971)),c,1	;volatile
	goto	u59421
	goto	u59420
u59421:
	goto	l1687
u59420:
	
l31992:; BSR set to: 0

	movlw	(02h)&0ffh
	
	call	_StartRTG
	goto	l1686
	line	3472
	
l1687:; BSR set to: 0

	line	3474
;main.c: 3472: else
;main.c: 3473: {
;main.c: 3474: if(PORTDbits.RD2||M._ZMKCOCW) return;
	
	btfsc	((c:3971)),c,2	;volatile
	goto	u59431
	goto	u59430
u59431:
	goto	l1686
u59430:
	
l31994:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u59441
	goto	u59440
u59441:
	goto	l31996
u59440:
	goto	l1686
	line	3475
	
l31996:; BSR set to: 0

;main.c: 3475: if(RTG(2)>=47)
	movlw	(02h)&0ffh
	
	call	_RTG
	movwf	(??_Proba48Z3+0+0)&0ffh,c
	movlw	(02Fh)&0ffh
	subwf	((??_Proba48Z3+0+0)),c,w
	btfss	status,0
	goto	u59451
	goto	u59450
u59451:
	goto	l1686
u59450:
	line	3477
	
l31998:; BSR set to: 1

;main.c: 3476: {
;main.c: 3477: M.R48Z3=0;
	movlb	0	; () banked
	clrf	(0+(_M+025h))&0ffh
	line	3478
;main.c: 3478: M._RUSZ_48Z3=1;
	bsf	(0+(_M+010h))&0ffh,4
	line	3479
	
l32000:; BSR set to: 0

;main.c: 3479: StartRTG(2);
	movlw	(02h)&0ffh
	
	call	_StartRTG
	goto	l1686
	line	3466
	
l32004:
	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 1, Range of values is 3 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            4     3 (average)
;	Chosen strategy is simple_byte

	xorlw	3^0	; case 3
	skipnz
	goto	l1682
	goto	l1686

	line	3506
	
l1686:
	return
	opt stack 0
GLOBAL	__end_of_Proba48Z3
	__end_of_Proba48Z3:
	signat	_Proba48Z3,88
	global	_Rusz48Z3

;; *************** function _Rusz48Z3 *****************
;; Defined at:
;;		line 3511 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ToObiegCW
;;		_StartRTS
;;		_RTS
;; This function is called by:
;;		_main
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text87,class=CODE,space=0,reloc=2
global __ptext87
__ptext87:
psect	text87
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3511
	global	__size_of_Rusz48Z3
	__size_of_Rusz48Z3	equ	__end_of_Rusz48Z3-_Rusz48Z3
	
_Rusz48Z3:
	opt	stack 23
	line	3512
	
l32006:; BSR set to: 0

;main.c: 3512: switch(DtKNF.tpkt)
	goto	l32030
	line	3520
	
l32008:; BSR set to: 0

;main.c: 3519: {
;main.c: 3520: ToObiegCW();
	call	_ToObiegCW	;wreg free
	line	3521
	
l32010:; BSR set to: 0

;main.c: 3521: if(M._ZMKCOCW) return;
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u59461
	goto	u59460
u59461:
	goto	l32014
u59460:
	goto	l1701
	line	3522
	
l32014:; BSR set to: 0

;main.c: 3522: StartRTS(5);
	movlw	(05h)&0ffh
	
	call	_StartRTS
	line	3523
	
l32016:; BSR set to: 1

;main.c: 3523: PORTDbits.RD2=1;
	bsf	((c:3971)),c,2	;volatile
	line	3524
	
l32018:; BSR set to: 1

;main.c: 3524: M.R48Z3=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	(0+(_M+025h))&0ffh
	line	3528
	
l32020:; BSR set to: 0

;main.c: 3527: {
;main.c: 3528: if(RTS(5)<15) return;
	movlw	(05h)&0ffh
	
	call	_RTS
	movwf	(??_Rusz48Z3+0+0)&0ffh,c
	movlw	(0Fh)&0ffh
	subwf	((??_Rusz48Z3+0+0)),c,w
	btfsc	status,0
	goto	u59471
	goto	u59470
u59471:
	goto	l1703
u59470:
	goto	l1701
	
l1703:; BSR set to: 1

	line	3529
;main.c: 3529: if(M._ZMKCOCW) return;
	movlb	0	; () banked
	
	btfss	(0+(_M+010h))&0ffh,1
	goto	u59481
	goto	u59480
u59481:
	goto	l1704
u59480:
	goto	l1701
	
l1704:; BSR set to: 0

	line	3530
;main.c: 3530: PORTDbits.RD2=0;
	bcf	((c:3971)),c,2	;volatile
	line	3531
;main.c: 3531: M._RUSZ_48Z3=0;
	bcf	(0+(_M+010h))&0ffh,4
	line	3532
;main.c: 3532: M.R48Z3=0;
	clrf	(0+(_M+025h))&0ffh
	line	3534
;main.c: 3533: }
;main.c: 3534: }
	goto	l1701
	line	3516
	
l32026:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+025h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l32008
	xorlw	1^0	; case 1
	skipnz
	goto	l32020
	goto	l1701

	line	3512
	
l32030:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 1, Range of values is 3 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            4     3 (average)
;	Chosen strategy is simple_byte

	xorlw	3^0	; case 3
	skipnz
	goto	l32026
	goto	l1701

	line	3538
	
l1701:
	return
	opt stack 0
GLOBAL	__end_of_Rusz48Z3
	__end_of_Rusz48Z3:
	signat	_Rusz48Z3,88
	global	_StartRTG

;; *************** function _StartRTG *****************
;; Defined at:
;;		line 105 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecyzjaAntyLeg
;;		_Proba48
;;		_Proba48Z3
;; This function uses a non-reentrant model
;;
psect	text88,class=CODE,space=0,reloc=2
global __ptext88
__ptext88:
psect	text88
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
	line	105
	global	__size_of_StartRTG
	__size_of_StartRTG	equ	__end_of_StartRTG-_StartRTG
	
_StartRTG:
	opt	stack 23
;StartRTG@Index stored from wreg
	movff	wreg,(c:StartRTG@Index)
	line	106
	
l32402:
;rtimer.c: 106: if (Index>3-1) asm("RESET");
	movlw	(03h-1)
	cpfsgt	((c:StartRTG@Index)),c
	goto	u59961
	goto	u59960
u59961:
	goto	l32406
u59960:
	
l32404:
# 106 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
RESET ;# 
psect	text88
	line	107
	
l32406:
;rtimer.c: 107: Gd[Index].M=0;
	movf	((c:StartRTG@Index)),c,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_Gd)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Gd)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	108
;rtimer.c: 108: Gd[Index].G=0;
	movf	((c:StartRTG@Index)),c,w
	mullw	02h
	movlw	low(_Gd+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Gd+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	109
	
l3702:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_StartRTG
	__end_of_StartRTG:
	signat	_StartRTG,4216
	global	_RTG

;; *************** function _RTG *****************
;; Defined at:
;;		line 111 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecyzjaAntyLeg
;;		_Proba48
;;		_Proba48Z3
;; This function uses a non-reentrant model
;;
psect	text89,class=CODE,space=0,reloc=2
global __ptext89
__ptext89:
psect	text89
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
	line	111
	global	__size_of_RTG
	__size_of_RTG	equ	__end_of_RTG-_RTG
	
_RTG:; BSR set to: 1

	opt	stack 23
;RTG@Index stored from wreg
	movff	wreg,(c:RTG@Index)
	line	112
	
l32416:
;rtimer.c: 112: if (Index>3-1) asm("RESET");
	movlw	(03h-1)
	cpfsgt	((c:RTG@Index)),c
	goto	u59981
	goto	u59980
u59981:
	goto	l32420
u59980:
	
l32418:
# 112 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
RESET ;# 
psect	text89
	line	113
	
l32420:
;rtimer.c: 113: return Gd[Index].G;
	movf	((c:RTG@Index)),c,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_Gd+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Gd+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	line	114
	
l3706:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RTG
	__end_of_RTG:
	signat	_RTG,4217
	global	_ToObiegCW

;; *************** function _ToObiegCW *****************
;; Defined at:
;;		line 1725 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecSTR
;;		_Rusz48
;;		_Rusz48Z3
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text90,class=CODE,space=0,reloc=2
global __ptext90
__ptext90:
psect	text90
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	1725
	global	__size_of_ToObiegCW
	__size_of_ToObiegCW	equ	__end_of_ToObiegCW-_ToObiegCW
	
_ToObiegCW:; BSR set to: 1

	opt	stack 23
	line	1726
	
l32778:
;main.c: 1726: switch(DtKNF.tpkt)
	goto	l32822
	line	1729
	
l1058:; BSR set to: 1

	line	1731
;main.c: 1729: case 2:
;main.c: 1730: {
;main.c: 1731: if(!M._ZMKCOCW&&PORTDbits.RD2)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u60741
	goto	u60740
u60741:
	goto	l1064
u60740:
	
l32780:; BSR set to: 0

	
	btfss	((c:3971)),c,2	;volatile
	goto	u60751
	goto	u60750
u60751:
	goto	l1064
u60750:
	line	1733
	
l32782:; BSR set to: 0

;main.c: 1732: {
;main.c: 1733: M._RPM_CW=1;
	bsf	(0+(_M+01Bh))&0ffh,7
	line	1734
;main.c: 1734: M._ZMKCOCW=1;
	bsf	(0+(_M+010h))&0ffh,1
	line	1735
;main.c: 1735: M.ZKP=0;
	clrf	(0+(_M+02Dh))&0ffh
	line	1736
	
l32784:; BSR set to: 0

;main.c: 1736: if(M._pob_KCW||M._pob_CW||M._pob_DzCW)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfss	status,2
	goto	u60761
	goto	u60760
u60761:
	goto	l1062
u60760:
	
l32786:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u60771
	goto	u60770
u60771:
	goto	l1062
u60770:
	
l32788:; BSR set to: 0

	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfsc	status,2
	goto	u60781
	goto	u60780
u60781:
	goto	l1064
u60780:
	
l1062:; BSR set to: 0

	line	1738
;main.c: 1737: {
;main.c: 1738: if(M._PRACA)
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u60791
	goto	u60790
u60791:
	goto	l1064
u60790:
	line	1740
	
l32790:; BSR set to: 0

;main.c: 1739: {
;main.c: 1740: M._BLOKUJ_15S=1;
	bsf	(0+(_M+011h))&0ffh,4
	line	1741
;main.c: 1741: M.BL15=0;
	clrf	(0+(_M+027h))&0ffh
	goto	l1064
	line	1748
	
l1066:; BSR set to: 1

	line	1750
;main.c: 1748: case 3:
;main.c: 1749: {
;main.c: 1750: if(!M._ZMKCOCW&&PORTDbits.RD1)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u60801
	goto	u60800
u60801:
	goto	l1064
u60800:
	
l32792:; BSR set to: 0

	
	btfss	((c:3971)),c,1	;volatile
	goto	u60811
	goto	u60810
u60811:
	goto	l1064
u60810:
	line	1752
	
l32794:; BSR set to: 0

;main.c: 1751: {
;main.c: 1752: M._RPM_CW=1;
	bsf	(0+(_M+01Bh))&0ffh,7
	line	1753
;main.c: 1753: M._ZMKCOCW=1;
	bsf	(0+(_M+010h))&0ffh,1
	line	1754
;main.c: 1754: M.ZKP=0;
	clrf	(0+(_M+02Dh))&0ffh
	line	1755
	
l32796:; BSR set to: 0

;main.c: 1755: if(M._pob_KCW||M._pob_CW||M._pob_DzCW||M._pob_AL)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfss	status,2
	goto	u60821
	goto	u60820
u60821:
	goto	l1070
u60820:
	
l32798:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u60831
	goto	u60830
u60831:
	goto	l1070
u60830:
	
l32800:; BSR set to: 0

	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfss	status,2
	goto	u60841
	goto	u60840
u60841:
	goto	l1070
u60840:
	
l32802:; BSR set to: 0

	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfsc	status,2
	goto	u60851
	goto	u60850
u60851:
	goto	l1064
u60850:
	
l1070:; BSR set to: 0

	line	1757
;main.c: 1756: {
;main.c: 1757: if(M._PRACA)
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u60861
	goto	u60860
u60861:
	goto	l1064
u60860:
	goto	l32790
	line	1766
;main.c: 1765: }
;main.c: 1766: default:
	
l1072:; BSR set to: 1

	line	1768
;main.c: 1767: {
;main.c: 1768: if(!M._ZMKCOCW&&PORTDbits.RD1)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u60871
	goto	u60870
u60871:
	goto	l1064
u60870:
	
l32806:; BSR set to: 0

	
	btfss	((c:3971)),c,1	;volatile
	goto	u60881
	goto	u60880
u60881:
	goto	l1064
u60880:
	line	1770
	
l32808:; BSR set to: 0

;main.c: 1769: {
;main.c: 1770: M._RPM_CW=1;
	bsf	(0+(_M+01Bh))&0ffh,7
	line	1771
;main.c: 1771: M._ZMKCOCW=1;
	bsf	(0+(_M+010h))&0ffh,1
	line	1772
;main.c: 1772: M.ZKP=0;
	clrf	(0+(_M+02Dh))&0ffh
	line	1773
	
l32810:; BSR set to: 0

;main.c: 1773: if(M._pob_KCW||M._pob_CW||M._pob_DzCW||M._pob_AL)
	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfss	status,2
	goto	u60891
	goto	u60890
u60891:
	goto	l1076
u60890:
	
l32812:; BSR set to: 0

	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfss	status,2
	goto	u60901
	goto	u60900
u60901:
	goto	l1076
u60900:
	
l32814:; BSR set to: 0

	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfss	status,2
	goto	u60911
	goto	u60910
u60911:
	goto	l1076
u60910:
	
l32816:; BSR set to: 0

	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfsc	status,2
	goto	u60921
	goto	u60920
u60921:
	goto	l1064
u60920:
	
l1076:; BSR set to: 0

	line	1775
;main.c: 1774: {
;main.c: 1775: if(M._PRACA)
	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	u60931
	goto	u60930
u60931:
	goto	l1064
u60930:
	goto	l32790
	line	1726
	
l32822:
	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1066
	xorlw	1^0	; case 1
	skipnz
	goto	l1058
	xorlw	2^1	; case 2
	skipnz
	goto	l1058
	xorlw	3^2	; case 3
	skipnz
	goto	l1066
	goto	l1072

	line	1785
	
l1064:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ToObiegCW
	__end_of_ToObiegCW:
	signat	_ToObiegCW,88
	global	_ToObiegCO

;; *************** function _ToObiegCO *****************
;; Defined at:
;;		line 1686 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecSTR
;;		_SetWylacz
;;		_Rusz48
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text91,class=CODE,space=0,reloc=2
global __ptext91
__ptext91:
psect	text91
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	1686
	global	__size_of_ToObiegCO
	__size_of_ToObiegCO	equ	__end_of_ToObiegCO-_ToObiegCO
	
_ToObiegCO:; BSR set to: 0

	opt	stack 23
	line	1687
	
l32824:
;main.c: 1687: switch(DtKNF.tpkt)
	goto	l32840
	line	1690
	
l1045:; BSR set to: 1

	line	1692
;main.c: 1690: case 2:
;main.c: 1691: {
;main.c: 1692: if(!M._ZMKCOCW&&!PORTDbits.RD2)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u60941
	goto	u60940
u60941:
	goto	l1047
u60940:
	
l32826:; BSR set to: 0

	
	btfsc	((c:3971)),c,2	;volatile
	goto	u60951
	goto	u60950
u60951:
	goto	l1047
u60950:
	line	1694
	
l32828:; BSR set to: 0

;main.c: 1693: {
;main.c: 1694: M._RPM_CW=0;
	bcf	(0+(_M+01Bh))&0ffh,7
	line	1695
;main.c: 1695: M._ZMKCOCW=1;
	bsf	(0+(_M+010h))&0ffh,1
	line	1696
;main.c: 1696: M.ZKP=0;
	clrf	(0+(_M+02Dh))&0ffh
	goto	l1047
	line	1701
	
l1049:; BSR set to: 1

	line	1703
;main.c: 1701: case 3:
;main.c: 1702: {
;main.c: 1703: if(!M._ZMKCOCW&&!PORTDbits.RD1)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u60961
	goto	u60960
u60961:
	goto	l1047
u60960:
	
l32830:; BSR set to: 0

	
	btfsc	((c:3971)),c,1	;volatile
	goto	u60971
	goto	u60970
u60971:
	goto	l1047
u60970:
	goto	l32828
	line	1711
;main.c: 1710: }
;main.c: 1711: default:
	
l1051:; BSR set to: 1

	line	1713
;main.c: 1712: {
;main.c: 1713: if(!M._ZMKCOCW&&!PORTDbits.RD1)
	movlb	0	; () banked
	
	btfsc	(0+(_M+010h))&0ffh,1
	goto	u60981
	goto	u60980
u60981:
	goto	l1047
u60980:
	
l32834:; BSR set to: 0

	
	btfsc	((c:3971)),c,1	;volatile
	goto	u60991
	goto	u60990
u60991:
	goto	l1047
u60990:
	goto	l32828
	line	1687
	
l32840:
	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1049
	xorlw	1^0	; case 1
	skipnz
	goto	l1045
	xorlw	2^1	; case 2
	skipnz
	goto	l1045
	xorlw	3^2	; case 3
	skipnz
	goto	l1049
	goto	l1051

	line	1722
	
l1047:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ToObiegCO
	__end_of_ToObiegCO:
	signat	_ToObiegCO,88
	global	_WritePWM

;; *************** function _WritePWM *****************
;; Defined at:
;;		line 381 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
;; Parameters:    Size  Location     Type
;;  tpwm            1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  tpwm            1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecSTR
;;		_Rozruch
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text92,class=CODE,space=0,reloc=2
global __ptext92
__ptext92:
psect	text92
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
	line	381
	global	__size_of_WritePWM
	__size_of_WritePWM	equ	__end_of_WritePWM-_WritePWM
	
_WritePWM:; BSR set to: 0

	opt	stack 24
;WritePWM@tpwm stored from wreg
	movff	wreg,(c:WritePWM@tpwm)
	line	382
	
l32844:
;pwm.c: 382: PWM._ENPWM=0;
	movlb	0	; () banked
	bcf	((_PWM))&0ffh,0	;volatile
	line	383
	
l32846:; BSR set to: 0

;pwm.c: 383: PWM.BufPWM=tpwm;
	movff	(c:WritePWM@tpwm),0+(_PWM+01h)	;volatile
	line	384
	
l32848:; BSR set to: 0

;pwm.c: 384: PWM.BufOSC=0;
	clrf	(0+(_PWM+02h))&0ffh	;volatile
	line	385
	
l32850:; BSR set to: 0

;pwm.c: 385: PWM._ENPWM=1;
	bsf	((_PWM))&0ffh,0	;volatile
	line	386
	
l2581:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_WritePWM
	__end_of_WritePWM:
	signat	_WritePWM,4216
	global	_GrzejOFF

;; *************** function _GrzejOFF *****************
;; Defined at:
;;		line 2414 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_SetWylacz
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text93,class=CODE,space=0,reloc=2
global __ptext93
__ptext93:
psect	text93
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	2414
	global	__size_of_GrzejOFF
	__size_of_GrzejOFF	equ	__end_of_GrzejOFF-_GrzejOFF
	
_GrzejOFF:; BSR set to: 0

	opt	stack 24
	line	2415
	
l32912:
;main.c: 2415: if(!M._TURBO)
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,1
	goto	u61051
	goto	u61050
u61051:
	goto	l1336
u61050:
	line	2417
	
l32914:; BSR set to: 0

;main.c: 2416: {
;main.c: 2417: PORTDbits.RD3=0;
	bcf	((c:3971)),c,3	;volatile
	line	2418
# 2418 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2419
# 2419 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2420
# 2420 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2421
# 2421 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2422
# 2422 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2423
# 2423 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2424
# 2424 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
	line	2425
# 2425 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
nop ;# 
psect	text93
	line	2426
;main.c: 2426: PORTDbits.RD0=0;
	bcf	((c:3971)),c,0	;volatile
	line	2427
;main.c: 2427: }
	goto	l1338
	line	2428
	
l1336:; BSR set to: 0

	line	2430
;main.c: 2428: else
;main.c: 2429: {
;main.c: 2430: PORTDbits.RD0=0;
	bcf	((c:3971)),c,0	;volatile
	line	2432
	
l1338:
	return
	opt stack 0
GLOBAL	__end_of_GrzejOFF
	__end_of_GrzejOFF:
	signat	_GrzejOFF,88
	global	_KeyRes

;; *************** function _KeyRes *****************
;; Defined at:
;;		line 3573 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RdPrt
;;		_StartRTS
;;		_RTS
;; This function is called by:
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text94,class=CODE,space=0,reloc=2
global __ptext94
__ptext94:
psect	text94
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3573
	global	__size_of_KeyRes
	__size_of_KeyRes	equ	__end_of_KeyRes-_KeyRes
	
_KeyRes:
	opt	stack 23
	line	3574
	
l40646:
;main.c: 3574: if(RdPrt(22))
	movlw	(016h)&0ffh
	
	call	_RdPrt
	btfss	status,0
	goto	u80611
	goto	u80610
u80611:
	goto	l1709
u80610:
	line	3576
	
l40648:; BSR set to: 0

;main.c: 3575: {
;main.c: 3576: PFN._res=1;
	movlb	1	; () banked
	bsf	(0+(_PFN+02h))&0ffh,3
	line	3577
;main.c: 3577: }
	goto	l40666
	line	3578
	
l1709:; BSR set to: 0

;main.c: 3578: else PFN._res=0;
	movlb	1	; () banked
	bcf	(0+(_PFN+02h))&0ffh,3
	goto	l40666
	line	3581
;main.c: 3580: {
;main.c: 3581: case 0:
	
l1712:; BSR set to: 0

	line	3583
;main.c: 3582: {
;main.c: 3583: if(PFN._res)
	movlb	1	; () banked
	
	btfss	(0+(_PFN+02h))&0ffh,3
	goto	u80621
	goto	u80620
u80621:
	goto	l40656
u80620:
	line	3585
	
l40650:; BSR set to: 1

;main.c: 3584: {
;main.c: 3585: M.KRS=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	(0+(_M+030h))&0ffh
	line	3586
	
l40652:; BSR set to: 0

;main.c: 3586: StartRTS(8);
	movlw	(08h)&0ffh
	
	call	_StartRTS
	goto	l40656
	line	3590
;main.c: 3589: }
;main.c: 3590: case 1:
	
l1715:; BSR set to: 0

	line	3592
;main.c: 3591: {
;main.c: 3592: if(PFN._res)
	movlb	1	; () banked
	
	btfss	(0+(_PFN+02h))&0ffh,3
	goto	u80631
	goto	u80630
u80631:
	goto	l1716
u80630:
	line	3594
	
l40654:; BSR set to: 1

;main.c: 3593: {
;main.c: 3594: if(RTS(8)<1) return 0;
	movlw	(08h)&0ffh
	
	call	_RTS
	iorlw	0
	btfss	status,2
	goto	u80641
	goto	u80640
u80641:
	goto	l40660
u80640:
	
l40656:
	bcf	status,0
	goto	l1718
	line	3595
	
l40660:; BSR set to: 1

;main.c: 3595: return 1;
	bsf	status,0
	goto	l1718
	line	3598
	
l1716:; BSR set to: 1

	line	3600
;main.c: 3598: else
;main.c: 3599: {
;main.c: 3600: M.KRS=0;
	movlb	0	; () banked
	clrf	(0+(_M+030h))&0ffh
	goto	l40656
	line	3579
	
l40666:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+030h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 0 to 1
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l1712
	xorlw	1^0	; case 1
	skipnz
	goto	l1715
	goto	l40656

	line	3605
	
l1718:
	return
	opt stack 0
GLOBAL	__end_of_KeyRes
	__end_of_KeyRes:
	signat	_KeyRes,88
	global	_RdPrt

;; *************** function _RdPrt *****************
;; Defined at:
;;		line 305 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1   30[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : C/3
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;;		_RefInterfaceData
;;		_KolejkaPobudzen
;;		_NastawaCOCW
;;		_DecERR
;;		_DecSTR
;;		_DecWylacz
;;		_Rozruch
;;		_DecyzjaPLM2
;;		_Wylacz
;;		_DetekcjaPrzeplywuWG
;;		_OczekujNaPrzeplywWG
;;		_RuszCiag
;;		_KeyRes
;;		_ErrPTG
;;		_PomiarCW
;;		_ReadParam
;;		_TrybPracy
;; This function uses a non-reentrant model
;;
psect	text95,class=CODE,space=0,reloc=2
global __ptext95
__ptext95:
psect	text95
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
	line	305
	global	__size_of_RdPrt
	__size_of_RdPrt	equ	__end_of_RdPrt-_RdPrt
	
_RdPrt:
	opt	stack 23
;RdPrt@Index stored from wreg
	movff	wreg,(c:RdPrt@Index)
	line	306
	
l36640:
;port.c: 306: if (Index>26-1) asm("RESET");
	movlw	(01Ah-1)
	cpfsgt	((c:RdPrt@Index)),c
	goto	u69421
	goto	u69420
u69421:
	goto	l36644
u69420:
	
l36642:
# 306 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
RESET ;# 
psect	text95
	line	307
	
l36644:
;port.c: 307: return SPort[Index].Output;
	movf	((c:RdPrt@Index)),c,w
	movlb	0	; () banked
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2)&0ffh,w
	andlw	(1<<1)-1
	movwf	(??_RdPrt+0+0)&0ffh,c
	rrcf	((??_RdPrt+0+0)),c,w
	line	308
	
l2367:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RdPrt
	__end_of_RdPrt:
	signat	_RdPrt,4216
	global	_VZPauza

;; *************** function _VZPauza *****************
;; Defined at:
;;		line 3610 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : 0/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTS
;;		_RTS
;; This function is called by:
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text96,class=CODE,space=0,reloc=2
global __ptext96
__ptext96:
psect	text96
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3610
	global	__size_of_VZPauza
	__size_of_VZPauza	equ	__end_of_VZPauza-_VZPauza
	
_VZPauza:; BSR set to: 0

	opt	stack 23
	line	3612
	
l32996:
;main.c: 3612: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	line	3613
;main.c: 3613: while(1)
	
l1722:; BSR set to: 1

	line	3615
# 3615 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
clrwdt ;# 
psect	text96
	line	3616
	
l32998:
;main.c: 3616: if(M.ERR_BTY==2)
	movlb	0	; () banked
	movf	(0+(_M+022h))&0ffh,w
	xorlw	2

	btfss	status,2
	goto	u61251
	goto	u61250
u61251:
	goto	l33004
u61250:
	line	3618
	
l33000:; BSR set to: 0

;main.c: 3617: {
;main.c: 3618: if(RTS(2)>=3) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movwf	(??_VZPauza+0+0)&0ffh,c
	movlw	(03h)&0ffh
	subwf	((??_VZPauza+0+0)),c,w
	btfss	status,0
	goto	u61261
	goto	u61260
u61261:
	goto	l1722
u61260:
	goto	l1725
	line	3622
	
l33004:; BSR set to: 0

;main.c: 3620: else
;main.c: 3621: {
;main.c: 3622: if(RTS(2)>=2) return;
	movlw	(02h)&0ffh
	
	call	_RTS
	movwf	(??_VZPauza+0+0)&0ffh,c
	movlw	(02h)&0ffh
	subwf	((??_VZPauza+0+0)),c,w
	btfss	status,0
	goto	u61271
	goto	u61270
u61271:
	goto	l1722
u61270:
	line	3625
	
l1725:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_VZPauza
	__end_of_VZPauza:
	signat	_VZPauza,88
	global	_ToReset

;; *************** function _ToReset *****************
;; Defined at:
;;		line 3795 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_EndErr
;;		_Busy_eep
;;		_Write_b_eep
;;		_StartRTS
;;		_RTS
;; This function is called by:
;;		_ErrPTG
;; This function uses a non-reentrant model
;;
psect	text97,class=CODE,space=0,reloc=2
global __ptext97
__ptext97:
psect	text97
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
	line	3795
	global	__size_of_ToReset
	__size_of_ToReset	equ	__end_of_ToReset-_ToReset
	
_ToReset:; BSR set to: 1

	opt	stack 22
	line	3796
	
l40672:
;main.c: 3796: PORTDbits.RD3=0;
	bcf	((c:3971)),c,3	;volatile
	line	3797
;main.c: 3797: PORTDbits.RD2=0;
	bcf	((c:3971)),c,2	;volatile
	line	3798
	
l40674:
;main.c: 3798: EndErr();
	call	_EndErr	;wreg free
	line	3799
	
l40676:; BSR set to: 1

;main.c: 3799: PFN._opgprg=0;
	bcf	(0+(_PFN+05h))&0ffh,4
	line	3800
	
l40678:; BSR set to: 1

;main.c: 3800: PFN._opgres=0;
	bcf	(0+(_PFN+05h))&0ffh,3
	line	3803
	
l40680:; BSR set to: 1

;main.c: 3803: (Busy_eep(), Write_b_eep(0x00C0,0x00));
	call	_Busy_eep	;wreg free
	
l40682:; BSR set to: 1

	movlw	high(0C0h)
	movwf	((c:?_Write_b_eep+1)),c
	movlw	low(0C0h)
	movwf	((c:?_Write_b_eep)),c
	movlw	low(0)
	movwf	(0+((c:?_Write_b_eep)+02h)),c
	call	_Write_b_eep	;wreg free
	line	3804
	
l40684:
;main.c: 3804: StartRTS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTS
	line	3805
;main.c: 3805: while(RTS(2)<1)
	goto	l40686
	
l1798:; BSR set to: 1

	line	3807
# 3807 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
clrwdt ;# 
psect	text97
	line	3805
	
l40686:
	movlw	(02h)&0ffh
	
	call	_RTS
	iorlw	0
	btfsc	status,2
	goto	u80651
	goto	u80650
u80651:
	goto	l1798
u80650:
	line	3810
;main.c: 3809: }
;main.c: 3810: while(1);
	
l1800:
	goto	l1800
	return
	opt stack 0
psect	text98,class=CODE,space=0,reloc=2
global __ptext98
__ptext98:
	line	3811
GLOBAL	__end_of_ToReset
	__end_of_ToReset:
	signat	_ToReset,88
	global	_EndErr

;; *************** function _EndErr *****************
;; Defined at:
;;		line 101 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ResetKol
;; This function is called by:
;;		_DecWSW
;;		_DecERR
;;		_ToReset
;; This function uses a non-reentrant model
;;
psect	text98
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
	line	101
	global	__size_of_EndErr
	__size_of_EndErr	equ	__end_of_EndErr-_EndErr
	
_EndErr:
	opt	stack 22
	line	102
	
l40522:
;print.c: 102: PFN._fmsg=0;
	movlb	1	; () banked
	bcf	(0+(_PFN+04h))&0ffh,7
	line	103
;print.c: 103: PFN._ferr=0;
	bcf	(0+(_PFN+05h))&0ffh,0
	line	104
;print.c: 104: PFN.KERR=0;
	clrf	(0+(_PFN+010h))&0ffh
	line	105
;print.c: 105: PFN.KAWR=0;
	clrf	(0+(_PFN+0Fh))&0ffh
	line	106
	
l40524:; BSR set to: 1

;print.c: 106: ResetKol(0);
	movlw	(0)&0ffh
	
	call	_ResetKol
	line	107
	
l2437:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_EndErr
	__end_of_EndErr:
	signat	_EndErr,88
	global	_StartTim1

;; *************** function _StartTim1 *****************
;; Defined at:
;;		line 78 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FiltrPomiarowyCOCW
;; This function uses a non-reentrant model
;;
psect	text99,class=CODE,space=0,reloc=2
global __ptext99
__ptext99:
psect	text99
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	78
	global	__size_of_StartTim1
	__size_of_StartTim1	equ	__end_of_StartTim1-_StartTim1
	
_StartTim1:; BSR set to: 1

	opt	stack 25
	line	79
	
l33024:; BSR set to: 1

;pomiar.c: 79: PmrtimFlt1=0;
	clrf	((_PmrtimFlt1))&0ffh
	line	80
	
l1879:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_StartTim1
	__end_of_StartTim1:
	signat	_StartTim1,88
	global	_PmrTim1

;; *************** function _PmrTim1 *****************
;; Defined at:
;;		line 82 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;  tm              1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  tm              1   29[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FiltrPomiarowyCOCW
;; This function uses a non-reentrant model
;;
psect	text100,class=CODE,space=0,reloc=2
global __ptext100
__ptext100:
psect	text100
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	82
	global	__size_of_PmrTim1
	__size_of_PmrTim1	equ	__end_of_PmrTim1-_PmrTim1
	
_PmrTim1:; BSR set to: 1

	opt	stack 25
;PmrTim1@tm stored from wreg
	movff	wreg,(c:PmrTim1@tm)
	line	83
	
l33026:; BSR set to: 1

;pomiar.c: 83: if(PmrtimFlt1<tm) return 0;
	movf	((c:PmrTim1@tm)),c,w
	cpfslt	((_PmrtimFlt1))&0ffh
	goto	u61291
	goto	u61290
u61291:
	goto	l33032
u61290:
	
l33028:; BSR set to: 1

	bcf	status,0
	goto	l1883
	line	84
	
l33032:; BSR set to: 1

;pomiar.c: 84: return 1;
	bsf	status,0
	line	85
	
l1883:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PmrTim1
	__end_of_PmrTim1:
	signat	_PmrTim1,4216
	global	_StartTim2

;; *************** function _StartTim2 *****************
;; Defined at:
;;		line 89 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FiltrPomiarowyCOCW
;; This function uses a non-reentrant model
;;
psect	text101,class=CODE,space=0,reloc=2
global __ptext101
__ptext101:
psect	text101
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	89
	global	__size_of_StartTim2
	__size_of_StartTim2	equ	__end_of_StartTim2-_StartTim2
	
_StartTim2:; BSR set to: 1

	opt	stack 25
	line	90
	
l33036:; BSR set to: 1

;pomiar.c: 90: PmrtimFlt2=0;
	clrf	((_PmrtimFlt2))&0ffh
	line	91
	
l1886:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_StartTim2
	__end_of_StartTim2:
	signat	_StartTim2,88
	global	_PmrTim2

;; *************** function _PmrTim2 *****************
;; Defined at:
;;		line 93 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;  tm              1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  tm              1   29[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FiltrPomiarowyCOCW
;; This function uses a non-reentrant model
;;
psect	text102,class=CODE,space=0,reloc=2
global __ptext102
__ptext102:
psect	text102
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	93
	global	__size_of_PmrTim2
	__size_of_PmrTim2	equ	__end_of_PmrTim2-_PmrTim2
	
_PmrTim2:; BSR set to: 1

	opt	stack 25
;PmrTim2@tm stored from wreg
	movff	wreg,(c:PmrTim2@tm)
	line	94
	
l33038:; BSR set to: 1

;pomiar.c: 94: if(PmrtimFlt2<tm) return 0;
	movf	((c:PmrTim2@tm)),c,w
	cpfslt	((_PmrtimFlt2))&0ffh
	goto	u61301
	goto	u61300
u61301:
	goto	l33044
u61300:
	
l33040:; BSR set to: 1

	bcf	status,0
	goto	l1890
	line	95
	
l33044:; BSR set to: 1

;pomiar.c: 95: return 1;
	bsf	status,0
	line	96
	
l1890:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PmrTim2
	__end_of_PmrTim2:
	signat	_PmrTim2,4216
	global	_GoldenEye

;; *************** function _GoldenEye *****************
;; Defined at:
;;		line 111 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  dt              1   36[COMRAM] char 
;;  pop             1   35[COMRAM] char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;; This function is called by:
;;		_FiltrPomiarowyCOCW
;; This function uses a non-reentrant model
;;
psect	text103,class=CODE,space=0,reloc=2
global __ptext103
__ptext103:
psect	text103
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	111
	global	__size_of_GoldenEye
	__size_of_GoldenEye	equ	__end_of_GoldenEye-_GoldenEye
	
_GoldenEye:; BSR set to: 1

	opt	stack 24
	line	116
	
l33048:; BSR set to: 1

;pomiar.c: 112: signed char dt;
;pomiar.c: 113: signed char pop;
;pomiar.c: 116: dt=DtCO.PPCO-DtCO.CO;
	movlb	0	; () banked
	movf	(0+(_DtCO+02h))&0ffh,w
	subwf	(0+(_DtCO+04h))&0ffh,w
	movwf	((c:GoldenEye@dt)),c
	line	117
;pomiar.c: 117: if((DtCO.CO>=(DtCO.PPCO+8))||(DtCO.CO<=(DtCO.PPCO-8))) DtCO.SCO=DtCO.CO;
	movf	(0+(_DtCO+04h))&0ffh,w
	movwf	(??_GoldenEye+0+0)&0ffh
	clrf	(??_GoldenEye+0+0+1)&0ffh

	movlw	08h
	addwf	(??_GoldenEye+0+0)&0ffh
	movlw	0
	addwfc	(??_GoldenEye+0+1)&0ffh
	movf	(0+(_DtCO+02h))&0ffh,w
	movwf	(??_GoldenEye+2+0)&0ffh
	clrf	(??_GoldenEye+2+0+1)&0ffh

	movf	(??_GoldenEye+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_GoldenEye+4+0)&0ffh
	movf	(??_GoldenEye+0+0)&0ffh,w
	subwf	(??_GoldenEye+2+0)&0ffh,w
	movf	(??_GoldenEye+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_GoldenEye+4+0)&0ffh,w
	btfsc	status,0
	goto	u61311
	goto	u61310
u61311:
	goto	l1902
u61310:
	
l33050:; BSR set to: 0

	movf	(0+(_DtCO+02h))&0ffh,w
	movwf	(??_GoldenEye+0+0)&0ffh
	clrf	(??_GoldenEye+0+0+1)&0ffh

	movlw	low(-8)
	addwf	(0+(_DtCO+04h))&0ffh,w
	movwf	(??_GoldenEye+2+0)&0ffh
	clrf	1+(??_GoldenEye+2+0)&0ffh
	movlw	high(-8)
	addwfc	1+(??_GoldenEye+2+0)&0ffh
	movf	(??_GoldenEye+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_GoldenEye+4+0)&0ffh
	movf	(??_GoldenEye+0+0)&0ffh,w
	subwf	(??_GoldenEye+2+0)&0ffh,w
	movf	(??_GoldenEye+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_GoldenEye+4+0)&0ffh,w
	btfss	status,0
	goto	u61321
	goto	u61320
u61321:
	goto	l1900
u61320:
	
l1902:; BSR set to: 0

	movff	0+(_DtCO+02h),0+(_DtCO+0Bh)
	goto	l33080
	line	118
	
l1900:; BSR set to: 0

	line	120
;pomiar.c: 118: else
;pomiar.c: 119: {
;pomiar.c: 120: if(dt>=0)
	btfsc	((c:GoldenEye@dt)),c,7
	goto	u61331
	goto	u61330
u61331:
	goto	l33066
u61330:
	line	122
	
l33052:; BSR set to: 0

;pomiar.c: 121: {
;pomiar.c: 122: if(dt<1) pop=dt;
	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((01h)^80h)
	btfsc	status,0
	goto	u61341
	goto	u61340
u61341:
	goto	l33056
u61340:
	
l33054:; BSR set to: 0

	movff	(c:GoldenEye@dt),(c:GoldenEye@pop)
	goto	l1906
	line	124
	
l33056:; BSR set to: 0

;pomiar.c: 123: else
;pomiar.c: 124: if((dt>=1)&&(dt<=(8-1))) pop=1;
	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((01h)^80h)
	btfss	status,0
	goto	u61351
	goto	u61350
u61351:
	goto	l33062
u61350:
	
l33058:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((08h)^80h)
	btfsc	status,0
	goto	u61361
	goto	u61360
u61361:
	goto	l33062
u61360:
	
l33060:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:GoldenEye@pop)),c
	goto	l1906
	line	126
	
l33062:; BSR set to: 0

;pomiar.c: 125: else
;pomiar.c: 126: if(dt>(8-1)) pop=8-dt;
	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((08h)^80h)
	btfss	status,0
	goto	u61371
	goto	u61370
u61371:
	goto	l1906
u61370:
	
l33064:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	sublw	low(08h)
	movwf	((c:GoldenEye@pop)),c
	line	127
	
l1906:; BSR set to: 0

;pomiar.c: 127: DtCO.SCO=DtCO.CO+pop;
	movf	(0+(_DtCO+02h))&0ffh,w
	addwf	((c:GoldenEye@pop)),c,w
	movwf	(0+(_DtCO+0Bh))&0ffh
	line	128
;pomiar.c: 128: }
	goto	l33080
	line	131
	
l33066:; BSR set to: 0

;pomiar.c: 129: else
;pomiar.c: 130: {
;pomiar.c: 131: if(-1*dt<1) pop=1+dt;
	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	01h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfsc	status,0
	goto	u61381
	goto	u61380
u61381:
	goto	l33070
u61380:
	
l33068:; BSR set to: 0

	incf	((c:GoldenEye@dt)),c,w
	movwf	((c:GoldenEye@pop)),c
	goto	l1912
	line	133
	
l33070:; BSR set to: 0

;pomiar.c: 132: else
;pomiar.c: 133: if((-1*dt>=1)&&(-1*dt<=(8-1))) pop=1;
	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	01h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfss	status,0
	goto	u61391
	goto	u61390
u61391:
	goto	l33076
u61390:
	
l33072:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	08h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfsc	status,0
	goto	u61401
	goto	u61400
u61401:
	goto	l33076
u61400:
	
l33074:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:GoldenEye@pop)),c
	goto	l1912
	line	135
	
l33076:; BSR set to: 0

;pomiar.c: 134: else
;pomiar.c: 135: if(-1*dt>(8-1)) pop=8+dt;
	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	08h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfss	status,0
	goto	u61411
	goto	u61410
u61411:
	goto	l1912
u61410:
	
l33078:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	addlw	low(08h)
	movwf	((c:GoldenEye@pop)),c
	line	136
	
l1912:; BSR set to: 0

;pomiar.c: 136: DtCO.SCO=DtCO.CO-pop;
	movf	((c:GoldenEye@pop)),c,w
	subwf	(0+(_DtCO+02h))&0ffh,w
	movwf	(0+(_DtCO+0Bh))&0ffh
	line	139
	
l33080:; BSR set to: 0

;pomiar.c: 137: }
;pomiar.c: 138: }
;pomiar.c: 139: PFN.CO=DtCO.SCO;
	movff	0+(_DtCO+0Bh),0+(_PFN+09h)
	line	142
	
l33082:; BSR set to: 0

;pomiar.c: 142: if(DtKNF.tpkt!=0)
	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	btfsc	status,2
	goto	u61421
	goto	u61420
u61421:
	goto	l1920
u61420:
	line	144
	
l33084:; BSR set to: 1

;pomiar.c: 143: {
;pomiar.c: 144: if(DtKNF.tpkt==1)
	decf	(0+(_DtKNF+07h))&0ffh,w

	btfss	status,2
	goto	u61431
	goto	u61430
u61431:
	goto	l33118
u61430:
	line	146
	
l33086:; BSR set to: 1

;pomiar.c: 145: {
;pomiar.c: 146: dt=DtCW.PPCW-DtCW.CW;
	movlb	0	; () banked
	movf	(0+(_DtCW+02h))&0ffh,w
	subwf	(0+(_DtCW+04h))&0ffh,w
	movwf	((c:GoldenEye@dt)),c
	line	147
;pomiar.c: 147: if((DtCW.CW>=(DtCW.PPCW+11))||(DtCW.CW<=(DtCW.PPCW-11))) DtCW.SCW=DtCW.CW;
	movf	(0+(_DtCW+04h))&0ffh,w
	movwf	(??_GoldenEye+0+0)&0ffh
	clrf	(??_GoldenEye+0+0+1)&0ffh

	movlw	0Bh
	addwf	(??_GoldenEye+0+0)&0ffh
	movlw	0
	addwfc	(??_GoldenEye+0+1)&0ffh
	movf	(0+(_DtCW+02h))&0ffh,w
	movwf	(??_GoldenEye+2+0)&0ffh
	clrf	(??_GoldenEye+2+0+1)&0ffh

	movf	(??_GoldenEye+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_GoldenEye+4+0)&0ffh
	movf	(??_GoldenEye+0+0)&0ffh,w
	subwf	(??_GoldenEye+2+0)&0ffh,w
	movf	(??_GoldenEye+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_GoldenEye+4+0)&0ffh,w
	btfsc	status,0
	goto	u61441
	goto	u61440
u61441:
	goto	l1920
u61440:
	
l33088:; BSR set to: 0

	movf	(0+(_DtCW+02h))&0ffh,w
	movwf	(??_GoldenEye+0+0)&0ffh
	clrf	(??_GoldenEye+0+0+1)&0ffh

	movlw	low(-11)
	addwf	(0+(_DtCW+04h))&0ffh,w
	movwf	(??_GoldenEye+2+0)&0ffh
	clrf	1+(??_GoldenEye+2+0)&0ffh
	movlw	high(-11)
	addwfc	1+(??_GoldenEye+2+0)&0ffh
	movf	(??_GoldenEye+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_GoldenEye+4+0)&0ffh
	movf	(??_GoldenEye+0+0)&0ffh,w
	subwf	(??_GoldenEye+2+0)&0ffh,w
	movf	(??_GoldenEye+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_GoldenEye+4+0)&0ffh,w
	btfss	status,0
	goto	u61451
	goto	u61450
u61451:
	goto	l1918
u61450:
	
l1920:
	movff	0+(_DtCW+02h),0+(_DtCW+0Bh)
	goto	l1951
	line	148
	
l1918:; BSR set to: 0

	line	150
;pomiar.c: 148: else
;pomiar.c: 149: {
;pomiar.c: 150: if(dt>=0)
	btfsc	((c:GoldenEye@dt)),c,7
	goto	u61461
	goto	u61460
u61461:
	goto	l33104
u61460:
	line	152
	
l33090:; BSR set to: 0

;pomiar.c: 151: {
;pomiar.c: 152: if(dt<3) pop=dt;
	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((03h)^80h)
	btfsc	status,0
	goto	u61471
	goto	u61470
u61471:
	goto	l33094
u61470:
	
l33092:; BSR set to: 0

	movff	(c:GoldenEye@dt),(c:GoldenEye@pop)
	goto	l1924
	line	154
	
l33094:; BSR set to: 0

;pomiar.c: 153: else
;pomiar.c: 154: if((dt>=3)&&(dt<=(11-3))) pop=3;
	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((03h)^80h)
	btfss	status,0
	goto	u61481
	goto	u61480
u61481:
	goto	l33100
u61480:
	
l33096:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((09h)^80h)
	btfsc	status,0
	goto	u61491
	goto	u61490
u61491:
	goto	l33100
u61490:
	
l33098:; BSR set to: 0

	movlw	low(03h)
	movwf	((c:GoldenEye@pop)),c
	goto	l1924
	line	156
	
l33100:; BSR set to: 0

;pomiar.c: 155: else
;pomiar.c: 156: if(dt>(11-3)) pop=11-dt;
	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((09h)^80h)
	btfss	status,0
	goto	u61501
	goto	u61500
u61501:
	goto	l1924
u61500:
	
l33102:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	sublw	low(0Bh)
	movwf	((c:GoldenEye@pop)),c
	line	157
	
l1924:; BSR set to: 0

;pomiar.c: 157: DtCW.SCW=DtCW.CW+pop;
	movf	(0+(_DtCW+02h))&0ffh,w
	addwf	((c:GoldenEye@pop)),c,w
	movwf	(0+(_DtCW+0Bh))&0ffh
	line	158
;pomiar.c: 158: }
	goto	l1951
	line	161
	
l33104:; BSR set to: 0

;pomiar.c: 159: else
;pomiar.c: 160: {
;pomiar.c: 161: if((-1*dt)<3) pop=(-1*dt);
	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	03h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfsc	status,0
	goto	u61511
	goto	u61510
u61511:
	goto	l33108
u61510:
	
l33106:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	mullw	01h
	movf	(prodl),c,w
	sublw	0
	movwf	((c:GoldenEye@pop)),c
	goto	l1930
	line	163
	
l33108:; BSR set to: 0

;pomiar.c: 162: else
;pomiar.c: 163: if(((-1*dt)>=3)&&((-1*dt)<=(11-3))) pop=3;
	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	03h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfss	status,0
	goto	u61521
	goto	u61520
u61521:
	goto	l33114
u61520:
	
l33110:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	09h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfsc	status,0
	goto	u61531
	goto	u61530
u61531:
	goto	l33114
u61530:
	
l33112:; BSR set to: 0

	movlw	low(03h)
	movwf	((c:GoldenEye@pop)),c
	goto	l1930
	line	165
	
l33114:; BSR set to: 0

;pomiar.c: 164: else
;pomiar.c: 165: if((-1*dt)>(11-3)) pop=11+dt;
	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	09h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfss	status,0
	goto	u61541
	goto	u61540
u61541:
	goto	l1930
u61540:
	
l33116:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	addlw	low(0Bh)
	movwf	((c:GoldenEye@pop)),c
	line	166
	
l1930:; BSR set to: 0

;pomiar.c: 166: DtCW.SCW=DtCW.CW-pop;
	movf	((c:GoldenEye@pop)),c,w
	subwf	(0+(_DtCW+02h))&0ffh,w
	movwf	(0+(_DtCW+0Bh))&0ffh
	goto	l1951
	line	172
	
l33118:; BSR set to: 1

;pomiar.c: 170: else
;pomiar.c: 171: {
;pomiar.c: 172: dt=DtCW.PPCW-DtCW.CW;
	movlb	0	; () banked
	movf	(0+(_DtCW+02h))&0ffh,w
	subwf	(0+(_DtCW+04h))&0ffh,w
	movwf	((c:GoldenEye@dt)),c
	line	173
;pomiar.c: 173: if((DtCW.CW>=(DtCW.PPCW+8))||(DtCW.CW<=(DtCW.PPCW-8))) DtCW.SCW=DtCW.CW;
	movf	(0+(_DtCW+04h))&0ffh,w
	movwf	(??_GoldenEye+0+0)&0ffh
	clrf	(??_GoldenEye+0+0+1)&0ffh

	movlw	08h
	addwf	(??_GoldenEye+0+0)&0ffh
	movlw	0
	addwfc	(??_GoldenEye+0+1)&0ffh
	movf	(0+(_DtCW+02h))&0ffh,w
	movwf	(??_GoldenEye+2+0)&0ffh
	clrf	(??_GoldenEye+2+0+1)&0ffh

	movf	(??_GoldenEye+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_GoldenEye+4+0)&0ffh
	movf	(??_GoldenEye+0+0)&0ffh,w
	subwf	(??_GoldenEye+2+0)&0ffh,w
	movf	(??_GoldenEye+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_GoldenEye+4+0)&0ffh,w
	btfsc	status,0
	goto	u61551
	goto	u61550
u61551:
	goto	l1920
u61550:
	
l33120:; BSR set to: 0

	movf	(0+(_DtCW+02h))&0ffh,w
	movwf	(??_GoldenEye+0+0)&0ffh
	clrf	(??_GoldenEye+0+0+1)&0ffh

	movlw	low(-8)
	addwf	(0+(_DtCW+04h))&0ffh,w
	movwf	(??_GoldenEye+2+0)&0ffh
	clrf	1+(??_GoldenEye+2+0)&0ffh
	movlw	high(-8)
	addwfc	1+(??_GoldenEye+2+0)&0ffh
	movf	(??_GoldenEye+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_GoldenEye+4+0)&0ffh
	movf	(??_GoldenEye+0+0)&0ffh,w
	subwf	(??_GoldenEye+2+0)&0ffh,w
	movf	(??_GoldenEye+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_GoldenEye+4+0)&0ffh,w
	btfss	status,0
	goto	u61561
	goto	u61560
u61561:
	goto	l1935
u61560:
	goto	l1920
	line	174
	
l1935:; BSR set to: 0

	line	176
;pomiar.c: 174: else
;pomiar.c: 175: {
;pomiar.c: 176: if(dt>=0)
	btfsc	((c:GoldenEye@dt)),c,7
	goto	u61571
	goto	u61570
u61571:
	goto	l33136
u61570:
	line	178
	
l33122:; BSR set to: 0

;pomiar.c: 177: {
;pomiar.c: 178: if(dt<2) pop=dt;
	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((02h)^80h)
	btfsc	status,0
	goto	u61581
	goto	u61580
u61581:
	goto	l33126
u61580:
	goto	l33092
	line	180
	
l33126:; BSR set to: 0

;pomiar.c: 179: else
;pomiar.c: 180: if((dt>=2)&&(dt<=(8-2))) pop=2;
	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((02h)^80h)
	btfss	status,0
	goto	u61591
	goto	u61590
u61591:
	goto	l33132
u61590:
	
l33128:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((07h)^80h)
	btfsc	status,0
	goto	u61601
	goto	u61600
u61601:
	goto	l33132
u61600:
	
l33130:; BSR set to: 0

	movlw	low(02h)
	movwf	((c:GoldenEye@pop)),c
	goto	l1924
	line	182
	
l33132:; BSR set to: 0

;pomiar.c: 181: else
;pomiar.c: 182: if(dt>(8-2)) pop=8-dt;
	movf	((c:GoldenEye@dt)),c,w
	xorlw	80h
	addlw	-((07h)^80h)
	btfss	status,0
	goto	u61611
	goto	u61610
u61611:
	goto	l1924
u61610:
	
l33134:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	sublw	low(08h)
	movwf	((c:GoldenEye@pop)),c
	goto	l1924
	line	187
	
l33136:; BSR set to: 0

;pomiar.c: 185: else
;pomiar.c: 186: {
;pomiar.c: 187: if(-1*dt<2) pop=2+dt;
	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	02h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfsc	status,0
	goto	u61621
	goto	u61620
u61621:
	goto	l33140
u61620:
	
l33138:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	addlw	low(02h)
	movwf	((c:GoldenEye@pop)),c
	goto	l1930
	line	189
	
l33140:; BSR set to: 0

;pomiar.c: 188: else
;pomiar.c: 189: if((-1*dt>=2)&&(-1*dt<=(8-2))) pop=2;
	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	02h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfss	status,0
	goto	u61631
	goto	u61630
u61631:
	goto	l33146
u61630:
	
l33142:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	07h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfsc	status,0
	goto	u61641
	goto	u61640
u61641:
	goto	l33146
u61640:
	
l33144:; BSR set to: 0

	movlw	low(02h)
	movwf	((c:GoldenEye@pop)),c
	goto	l1930
	line	191
	
l33146:; BSR set to: 0

;pomiar.c: 190: else
;pomiar.c: 191: if(-1*dt>(8-2)) pop=8+dt;
	movf	((c:GoldenEye@dt)),c,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(01h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	comf	(0+?___wmul),c
	comf	(1+?___wmul),c
	infsnz	(0+?___wmul),c
	incf	(1+?___wmul),c
	movf	(1+?___wmul),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	07h
	btfsc	status,2
	subwf	(0+?___wmul),c,w
	btfss	status,0
	goto	u61651
	goto	u61650
u61651:
	goto	l1930
u61650:
	
l33148:; BSR set to: 0

	movf	((c:GoldenEye@dt)),c,w
	addlw	low(08h)
	movwf	((c:GoldenEye@pop)),c
	goto	l1930
	line	197
	
l1951:
	line	198
;pomiar.c: 198: PFN.CW=DtCW.SCW;
	movff	0+(_DtCW+0Bh),0+(_PFN+0Ah)
	line	199
	
l1952:
	return
	opt stack 0
GLOBAL	__end_of_GoldenEye
	__end_of_GoldenEye:
	signat	_GoldenEye,88
	global	_FltParMod

;; *************** function _FltParMod *****************
;; Defined at:
;;		line 234 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  wr              1   31[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_PredkoscZmianCW
;; This function is called by:
;;		_FiltrPomiarowyCOCW
;; This function uses a non-reentrant model
;;
psect	text104,class=CODE,space=0,reloc=2
global __ptext104
__ptext104:
psect	text104
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	234
	global	__size_of_FltParMod
	__size_of_FltParMod	equ	__end_of_FltParMod-_FltParMod
	
_FltParMod:
	opt	stack 24
	line	241
	
l33202:; BSR set to: 1

;pomiar.c: 235: static unsigned char indtm,fco,fcw;
;pomiar.c: 236: unsigned char wr;
;pomiar.c: 241: if(DtCO.CO>fco) wr=DtCO.CO-fco;
	movlb	0	; () banked
	movf	(0+(_DtCO+02h))&0ffh,w
	cpfslt	((FltParMod@fco))&0ffh
	goto	u61721
	goto	u61720
u61721:
	goto	l33206
u61720:
	
l33204:; BSR set to: 0

	movf	((FltParMod@fco))&0ffh,w
	subwf	(0+(_DtCO+02h))&0ffh,w
	movwf	((c:FltParMod@wr)),c
	goto	l33208
	line	242
	
l33206:; BSR set to: 0

;pomiar.c: 242: else wr=fco-DtCO.CO;
	movf	(0+(_DtCO+02h))&0ffh,w
	subwf	((FltParMod@fco))&0ffh,w
	movwf	((c:FltParMod@wr)),c
	line	243
	
l33208:; BSR set to: 0

;pomiar.c: 243: if(wr) DtCO.indCO++;
	movf	((c:FltParMod@wr)),c,w
	btfsc	status,2
	goto	u61731
	goto	u61730
u61731:
	goto	l33212
u61730:
	
l33210:; BSR set to: 0

	incf	(0+(_DtCO+0Ah))&0ffh
	line	244
	
l33212:; BSR set to: 0

;pomiar.c: 244: if(wr>=2) DtCO.indCO=10;
	movlw	(02h-1)
	cpfsgt	((c:FltParMod@wr)),c
	goto	u61741
	goto	u61740
u61741:
	goto	l1981
u61740:
	
l33214:; BSR set to: 0

	movlw	low(0Ah)
	movwf	(0+(_DtCO+0Ah))&0ffh
	
l1981:; BSR set to: 0

	line	246
;pomiar.c: 246: if(DtCW.CW>fcw) wr=DtCW.CW-fcw;
	movf	(0+(_DtCW+02h))&0ffh,w
	cpfslt	((FltParMod@fcw))&0ffh
	goto	u61751
	goto	u61750
u61751:
	goto	l33218
u61750:
	
l33216:; BSR set to: 0

	movf	((FltParMod@fcw))&0ffh,w
	subwf	(0+(_DtCW+02h))&0ffh,w
	movwf	((c:FltParMod@wr)),c
	goto	l33220
	line	247
	
l33218:; BSR set to: 0

;pomiar.c: 247: else wr=fcw-DtCW.CW;
	movf	(0+(_DtCW+02h))&0ffh,w
	subwf	((FltParMod@fcw))&0ffh,w
	movwf	((c:FltParMod@wr)),c
	line	248
	
l33220:; BSR set to: 0

;pomiar.c: 248: if(wr) DtCW.indCW++;
	movf	((c:FltParMod@wr)),c,w
	btfsc	status,2
	goto	u61761
	goto	u61760
u61761:
	goto	l33224
u61760:
	
l33222:; BSR set to: 0

	incf	(0+(_DtCW+0Ah))&0ffh
	line	249
	
l33224:; BSR set to: 0

;pomiar.c: 249: if(wr>=2) DtCW.indCW=10;
	movlw	(02h-1)
	cpfsgt	((c:FltParMod@wr)),c
	goto	u61771
	goto	u61770
u61771:
	goto	l33228
u61770:
	
l33226:; BSR set to: 0

	movlw	low(0Ah)
	movwf	(0+(_DtCW+0Ah))&0ffh
	line	250
	
l33228:; BSR set to: 0

;pomiar.c: 250: PredkoscZmianCW();
	call	_PredkoscZmianCW	;wreg free
	line	253
	
l33230:; BSR set to: 2

;pomiar.c: 253: indtm++;
	movlb	1	; () banked
	incf	((FltParMod@indtm))&0ffh
	line	254
	
l33232:; BSR set to: 1

;pomiar.c: 254: if(indtm>9)
	movlw	(0Ah-1)
	cpfsgt	((FltParMod@indtm))&0ffh
	goto	u61781
	goto	u61780
u61781:
	goto	l1991
u61780:
	line	256
	
l33234:; BSR set to: 1

;pomiar.c: 255: {
;pomiar.c: 256: indtm=0;
	clrf	((FltParMod@indtm))&0ffh
	line	258
;pomiar.c: 258: DtZW.SZW=DtZW.ZW;
	movff	0+(_DtZW+02h),0+(_DtZW+03h)
	line	261
	
l33236:; BSR set to: 1

;pomiar.c: 261: if(DtCO.indCO<=7) DtCO.dDCO=0;
	movlw	(08h)&0ffh
	movlb	0	; () banked
	cpfslt	(0+(_DtCO+0Ah))&0ffh
	goto	u61791
	goto	u61790
u61791:
	goto	l33240
u61790:
	
l33238:; BSR set to: 0

	clrf	(0+(_DtCO+09h))&0ffh
	goto	l33244
	line	264
	
l33240:; BSR set to: 0

;pomiar.c: 262: else
;pomiar.c: 263: {
;pomiar.c: 264: DtCO.dDCO=DtCO.CO-fco;
	movf	((FltParMod@fco))&0ffh,w
	subwf	(0+(_DtCO+02h))&0ffh,w
	movwf	(0+(_DtCO+09h))&0ffh
	line	265
	
l33242:; BSR set to: 0

;pomiar.c: 265: fco=DtCO.CO;
	movff	0+(_DtCO+02h),(FltParMod@fco)
	line	267
	
l33244:; BSR set to: 0

;pomiar.c: 266: }
;pomiar.c: 267: DtCO.indCO=0;
	clrf	(0+(_DtCO+0Ah))&0ffh
	line	269
	
l33246:; BSR set to: 0

;pomiar.c: 269: if(DtCW.indCW<=7)
	movlw	(08h)&0ffh
	cpfslt	(0+(_DtCW+0Ah))&0ffh
	goto	u61801
	goto	u61800
u61801:
	goto	l33250
u61800:
	line	271
	
l33248:; BSR set to: 0

;pomiar.c: 270: {
;pomiar.c: 271: DtCW.dDCW=0;
	clrf	(0+(_DtCW+08h))&0ffh
	line	272
;pomiar.c: 272: DtCW._fpCW=1;
	bsf	(0+(_DtCW+01h))&0ffh,2
	line	273
;pomiar.c: 273: }
	goto	l33256
	line	276
	
l33250:; BSR set to: 0

;pomiar.c: 274: else
;pomiar.c: 275: {
;pomiar.c: 276: DtCW.dDCW=DtCW.CW-fcw;
	movf	((FltParMod@fcw))&0ffh,w
	subwf	(0+(_DtCW+02h))&0ffh,w
	movwf	(0+(_DtCW+08h))&0ffh
	line	277
	
l33252:; BSR set to: 0

;pomiar.c: 277: DtCW._fpCW=1;
	bsf	(0+(_DtCW+01h))&0ffh,2
	line	278
	
l33254:; BSR set to: 0

;pomiar.c: 278: fcw=DtCW.CW;
	movff	0+(_DtCW+02h),(FltParMod@fcw)
	line	280
	
l33256:; BSR set to: 0

;pomiar.c: 279: }
;pomiar.c: 280: DtCW.indCW=0;
	clrf	(0+(_DtCW+0Ah))&0ffh
	line	282
	
l1991:
	return
	opt stack 0
GLOBAL	__end_of_FltParMod
	__end_of_FltParMod:
	signat	_FltParMod,88
	global	_PredkoscZmianCW

;; *************** function _PredkoscZmianCW *****************
;; Defined at:
;;		line 203 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1   30[COMRAM] unsigned char 
;;  w               1   29[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FltParMod
;; This function uses a non-reentrant model
;;
psect	text105,class=CODE,space=0,reloc=2
global __ptext105
__ptext105:
psect	text105
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	203
	global	__size_of_PredkoscZmianCW
	__size_of_PredkoscZmianCW	equ	__end_of_PredkoscZmianCW-_PredkoscZmianCW
	
_PredkoscZmianCW:
	opt	stack 24
	line	207
	
l33150:; BSR set to: 0

;pomiar.c: 204: static unsigned char ffcw,indff;
;pomiar.c: 205: unsigned char i,w;
;pomiar.c: 207: if(!M._PRACA)
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u61661
	goto	u61660
u61661:
	goto	l1959
u61660:
	line	209
	
l33152:; BSR set to: 0

;pomiar.c: 208: {
;pomiar.c: 209: ffcw=0;
	movlb	1	; () banked
	clrf	((PredkoscZmianCW@ffcw))&0ffh
	line	210
;pomiar.c: 210: indff=0;
	movlb	0	; () banked
	clrf	((PredkoscZmianCW@indff))&0ffh
	line	211
;pomiar.c: 211: }
	goto	l33186
	line	212
	
l1959:; BSR set to: 0

	line	214
;pomiar.c: 212: else
;pomiar.c: 213: {
;pomiar.c: 214: if(!indff)
	tstfsz	((PredkoscZmianCW@indff))&0ffh
	goto	u61671
	goto	u61670
u61671:
	goto	l33166
u61670:
	line	216
	
l33154:; BSR set to: 0

;pomiar.c: 215: {
;pomiar.c: 216: for(i=0;i<10;i++) wff[i]=0;
	clrf	((c:PredkoscZmianCW@i)),c
	
l33160:
	movlb	2	; () banked
	movlw	low(_wff)
	addwf	((c:PredkoscZmianCW@i)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_wff)
	addwfc	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	
l33162:; BSR set to: 2

	incf	((c:PredkoscZmianCW@i)),c
	
l33164:; BSR set to: 2

	movlw	(0Ah-1)
	cpfsgt	((c:PredkoscZmianCW@i)),c
	goto	u61681
	goto	u61680
u61681:
	goto	l33160
u61680:
	line	218
	
l33166:
;pomiar.c: 217: }
;pomiar.c: 218: indff++;
	movlb	0	; () banked
	incf	((PredkoscZmianCW@indff))&0ffh
	line	219
	
l33168:; BSR set to: 0

;pomiar.c: 219: if(indff>=9)
	movlw	(09h-1)
	cpfsgt	((PredkoscZmianCW@indff))&0ffh
	goto	u61691
	goto	u61690
u61691:
	goto	l33184
u61690:
	line	221
	
l33170:; BSR set to: 0

;pomiar.c: 220: {
;pomiar.c: 221: indff=9;
	movlw	low(09h)
	movwf	((PredkoscZmianCW@indff))&0ffh
	line	222
	
l33172:; BSR set to: 0

;pomiar.c: 222: for(i=0;i<9;i++) wff[i]=wff[i+1];
	clrf	((c:PredkoscZmianCW@i)),c
	
l33178:
	movlb	2	; () banked
	movlw	low(_wff+01h)
	addwf	((c:PredkoscZmianCW@i)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_wff+01h)
	addwfc	1+c:fsr2l
	movlw	low(_wff)
	addwf	((c:PredkoscZmianCW@i)),c,w
	movwf	c:fsr1l
	clrf	1+c:fsr1l
	movlw	high(_wff)
	addwfc	1+c:fsr1l
	movff	indf2,indf1
	
l33180:; BSR set to: 2

	incf	((c:PredkoscZmianCW@i)),c
	
l33182:; BSR set to: 2

	movlw	(09h-1)
	cpfsgt	((c:PredkoscZmianCW@i)),c
	goto	u61701
	goto	u61700
u61701:
	goto	l33178
u61700:
	line	224
	
l33184:
;pomiar.c: 223: }
;pomiar.c: 224: wff[indff]=DtCW.CW-ffcw;
	movlb	2	; () banked
	movlw	low(_wff)
	movlb	0	; () banked
	addwf	((PredkoscZmianCW@indff))&0ffh,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlb	2	; () banked
	movlw	high(_wff)
	addwfc	1+c:fsr2l
	movlb	1	; () banked
	movf	((PredkoscZmianCW@ffcw))&0ffh,w
	movlb	0	; () banked
	subwf	(0+(_DtCW+02h))&0ffh,w
	movwf	indf2

	line	226
	
l33186:; BSR set to: 0

;pomiar.c: 225: }
;pomiar.c: 226: ffcw=DtCW.CW;
	movff	0+(_DtCW+02h),(PredkoscZmianCW@ffcw)
	line	227
	
l33188:; BSR set to: 0

;pomiar.c: 227: w=0;
	clrf	((c:PredkoscZmianCW@w)),c
	line	228
	
l33190:; BSR set to: 0

;pomiar.c: 228: for(i=0;i<10;i++) w+=wff[i];
	clrf	((c:PredkoscZmianCW@i)),c
	
l33196:
	movlb	2	; () banked
	movlw	low(_wff)
	addwf	((c:PredkoscZmianCW@i)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_wff)
	addwfc	1+c:fsr2l
	movf	indf2,w
	addwf	((c:PredkoscZmianCW@w)),c
	
l33198:; BSR set to: 2

	incf	((c:PredkoscZmianCW@i)),c
	
l33200:; BSR set to: 2

	movlw	(0Ah-1)
	cpfsgt	((c:PredkoscZmianCW@i)),c
	goto	u61711
	goto	u61710
u61711:
	goto	l33196
u61710:
	
l1968:; BSR set to: 2

	line	229
;pomiar.c: 229: DtCW.ddDCW=w;
	movff	(c:PredkoscZmianCW@w),0+(_DtCW+09h)
	line	230
	
l1969:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_PredkoscZmianCW
	__end_of_PredkoscZmianCW:
	signat	_PredkoscZmianCW,88
	global	_SetModPCO

;; *************** function _SetModPCO *****************
;; Defined at:
;;		line 562 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PomiarPCO
;; This function uses a non-reentrant model
;;
psect	text106,class=CODE,space=0,reloc=2
global __ptext106
__ptext106:
psect	text106
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	562
	global	__size_of_SetModPCO
	__size_of_SetModPCO	equ	__end_of_SetModPCO-_SetModPCO
	
_SetModPCO:; BSR set to: 2

	opt	stack 23
	line	563
	
l33258:; BSR set to: 0

;pomiar.c: 563: if(M._AKTYWNE_KNF)
	movf	(1+(_M+018h))&0ffh,w
	iorwf (0+(_M+018h))&0ffh,w

	btfsc	status,2
	goto	u61811
	goto	u61810
u61811:
	goto	l33266
u61810:
	line	565
	
l33260:; BSR set to: 0

;pomiar.c: 564: {
;pomiar.c: 565: if(!DtKNF.opdg) DtCO.PPCO=85;
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Fh))&0ffh
	goto	u61821
	goto	u61820
u61821:
	goto	l33264
u61820:
	
l33262:; BSR set to: 1

	movlw	low(055h)
	movlb	0	; () banked
	movwf	(0+(_DtCO+04h))&0ffh
	goto	l2147
	line	566
	
l33264:; BSR set to: 1

;pomiar.c: 566: else DtCO.PPCO=55;
	movlw	low(037h)
	movlb	0	; () banked
	movwf	(0+(_DtCO+04h))&0ffh
	goto	l2147
	line	569
	
l33266:; BSR set to: 0

;pomiar.c: 568: else
;pomiar.c: 569: if(M._pob_CW)
	movf	(1+(_M+08h))&0ffh,w
	iorwf (0+(_M+08h))&0ffh,w

	btfsc	status,2
	goto	u61831
	goto	u61830
u61831:
	goto	l33282
u61830:
	line	571
	
l33280:; BSR set to: 0

	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l33262
	xorlw	1^0	; case 1
	skipnz
	goto	l33262
	xorlw	2^1	; case 2
	skipnz
	goto	l33262
	xorlw	3^2	; case 3
	skipnz
	goto	l33262
	goto	l33262

	line	597
	
l33282:; BSR set to: 0

;pomiar.c: 596: else
;pomiar.c: 597: if(M._AKTYWNE_PGD) DtCO.PPCO=DtCO.PGDPCO;
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfsc	status,2
	goto	u61841
	goto	u61840
u61841:
	goto	l2157
u61840:
	
l33284:; BSR set to: 0

	movff	0+(_DtCO+07h),0+(_DtCO+04h)
	goto	l2147
	line	598
	
l2157:; BSR set to: 0

	line	600
;pomiar.c: 598: else
;pomiar.c: 599: {
;pomiar.c: 600: DtCO.PPCO=DtCO.PCO;
	movff	0+(_DtCO+03h),0+(_DtCO+04h)
	line	601
	
l2147:; BSR set to: 0

	line	602
;pomiar.c: 601: }
;pomiar.c: 602: if(!DtKNF.opdg)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Fh))&0ffh
	goto	u61851
	goto	u61850
u61851:
	goto	l33292
u61850:
	line	604
	
l33286:; BSR set to: 1

;pomiar.c: 603: {
;pomiar.c: 604: if(!M._pob_SRW) PFN.PPCO=DtCO.PPCO;
	movlb	0	; () banked
	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfss	status,2
	goto	u61861
	goto	u61860
u61861:
	goto	l33290
u61860:
	
l33288:; BSR set to: 0

	movff	0+(_DtCO+04h),0+(_PFN+0Dh)
	goto	l33298
	line	605
	
l33290:; BSR set to: 0

;pomiar.c: 605: else PFN.PPCO=88;
	movlw	low(058h)
	movlb	1	; () banked
	movwf	(0+(_PFN+0Dh))&0ffh
	goto	l33298
	line	609
	
l33292:; BSR set to: 1

;pomiar.c: 607: else
;pomiar.c: 608: {
;pomiar.c: 609: if(!M._pob_SRW) PFN.PPCO=DtCO.PPCO;
	movlb	0	; () banked
	movf	(1+(_M+04h))&0ffh,w
	iorwf (0+(_M+04h))&0ffh,w

	btfss	status,2
	goto	u61871
	goto	u61870
u61871:
	goto	l33296
u61870:
	goto	l33288
	line	610
	
l33296:; BSR set to: 0

;pomiar.c: 610: else PFN.PPCO=58;
	movlw	low(03Ah)
	movlb	1	; () banked
	movwf	(0+(_PFN+0Dh))&0ffh
	line	612
	
l33298:
;pomiar.c: 611: }
;pomiar.c: 612: if(M._pob_DzCO) PFN.PPCO=21;
	movlb	0	; () banked
	movf	(1+(_M+0Ch))&0ffh,w
	iorwf (0+(_M+0Ch))&0ffh,w

	btfsc	status,2
	goto	u61881
	goto	u61880
u61881:
	goto	l2166
u61880:
	
l33300:; BSR set to: 0

	movlw	low(015h)
	movlb	1	; () banked
	movwf	(0+(_PFN+0Dh))&0ffh
	line	613
	
l2166:
	return
	opt stack 0
GLOBAL	__end_of_SetModPCO
	__end_of_SetModPCO:
	signat	_SetModPCO,88
	global	_GetPGD_PCO

;; *************** function _GetPGD_PCO *****************
;; Defined at:
;;		line 650 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4    1[BANK2 ] long 
;;  p               1    0[BANK2 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : C/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       4       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        9 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;;		___lmul
;;		___aldiv
;; This function is called by:
;;		_PomiarPCO
;; This function uses a non-reentrant model
;;
psect	text107,class=CODE,space=0,reloc=2
global __ptext107
__ptext107:
psect	text107
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	650
	global	__size_of_GetPGD_PCO
	__size_of_GetPGD_PCO	equ	__end_of_GetPGD_PCO-_GetPGD_PCO
	
_GetPGD_PCO:
	opt	stack 22
	line	654
	
l33302:; BSR set to: 0

;pomiar.c: 651: unsigned char p;
;pomiar.c: 652: signed long m;
;pomiar.c: 654: if(!DtKNF.opdg)
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Fh))&0ffh
	goto	u61891
	goto	u61890
u61891:
	goto	l33338
u61890:
	line	656
	
l33304:; BSR set to: 1

;pomiar.c: 655: {
;pomiar.c: 656: if(DtCO.PCO)
	movlb	0	; () banked
	movf	(0+(_DtCO+03h))&0ffh,w
	btfsc	status,2
	goto	u61901
	goto	u61900
u61901:
	goto	l33320
u61900:
	line	658
	
l33306:; BSR set to: 0

;pomiar.c: 657: {
;pomiar.c: 658: if(DtZW.SZW<25)
	movlb	1	; () banked
	movf	(0+(_DtZW+03h))&0ffh,w
	xorlw	80h
	addlw	-((019h)^80h)
	btfsc	status,0
	goto	u61911
	goto	u61910
u61911:
	goto	l33320
u61910:
	line	660
	
l33308:; BSR set to: 1

;pomiar.c: 659: {
;pomiar.c: 660: m=(25-DtZW.SZW)*DtCO.PCO;
	movff	0+(_DtZW+03h),??_GetPGD_PCO+0+0
	movlb	0	; () banked
	clrf	(??_GetPGD_PCO+0+0+1)&0ffh
	btfsc	(??_GetPGD_PCO+0+0)&0ffh,7
	decf	(??_GetPGD_PCO+0+0+1)&0ffh
	movf	(??_GetPGD_PCO+0+0)&0ffh,w
	sublw	low(019h)
	
	movwf	((c:?___wmul)),c
	movf	(??_GetPGD_PCO+0+1)&0ffh,w
	btfss	status,0
	incf	wreg
	sublw	high(019h)
	
	movwf	1+((c:?___wmul)),c
	movff	0+(_DtCO+03h),0+((c:?___wmul)+02h)
	clrf	(1+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movlb	2	; () banked
	movff	0+?___wmul,(GetPGD_PCO@m)
	movff	1+?___wmul,(GetPGD_PCO@m+1)
	movlw	0
	btfsc	((GetPGD_PCO@m+1))&0ffh,7
	movlw	-1
	movwf	((GetPGD_PCO@m+2))&0ffh
	movwf	((GetPGD_PCO@m+3))&0ffh
	line	661
;pomiar.c: 661: m*=(85-40);
	movff	(GetPGD_PCO@m),(c:?___lmul)
	movff	(GetPGD_PCO@m+1),(c:?___lmul+1)
	movff	(GetPGD_PCO@m+2),(c:?___lmul+2)
	movff	(GetPGD_PCO@m+3),(c:?___lmul+3)
	movlw	low(02Dh)
	movwf	(0+((c:?___lmul)+04h)),c
	movlw	high(02Dh)
	movwf	(1+((c:?___lmul)+04h)),c
	movlw	low highword(02Dh)
	movwf	(2+((c:?___lmul)+04h)),c
	movlw	high highword(02Dh)
	movwf	(3+((c:?___lmul)+04h)),c
	call	___lmul	;wreg free
	movff	0+?___lmul,(GetPGD_PCO@m)
	movff	1+?___lmul,(GetPGD_PCO@m+1)
	movff	2+?___lmul,(GetPGD_PCO@m+2)
	movff	3+?___lmul,(GetPGD_PCO@m+3)
	line	662
;pomiar.c: 662: m*=100;
	movff	(GetPGD_PCO@m),(c:?___lmul)
	movff	(GetPGD_PCO@m+1),(c:?___lmul+1)
	movff	(GetPGD_PCO@m+2),(c:?___lmul+2)
	movff	(GetPGD_PCO@m+3),(c:?___lmul+3)
	movlw	low(064h)
	movwf	(0+((c:?___lmul)+04h)),c
	movlw	high(064h)
	movwf	(1+((c:?___lmul)+04h)),c
	movlw	low highword(064h)
	movwf	(2+((c:?___lmul)+04h)),c
	movlw	high highword(064h)
	movwf	(3+((c:?___lmul)+04h)),c
	call	___lmul	;wreg free
	movff	0+?___lmul,(GetPGD_PCO@m)
	movff	1+?___lmul,(GetPGD_PCO@m+1)
	movff	2+?___lmul,(GetPGD_PCO@m+2)
	movff	3+?___lmul,(GetPGD_PCO@m+3)
	line	663
;pomiar.c: 663: m/=1485;
	movff	(GetPGD_PCO@m),(c:?___aldiv)
	movff	(GetPGD_PCO@m+1),(c:?___aldiv+1)
	movff	(GetPGD_PCO@m+2),(c:?___aldiv+2)
	movff	(GetPGD_PCO@m+3),(c:?___aldiv+3)
	movlw	low(05CDh)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(05CDh)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(05CDh)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(05CDh)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movff	0+?___aldiv,(GetPGD_PCO@m)
	movff	1+?___aldiv,(GetPGD_PCO@m+1)
	movff	2+?___aldiv,(GetPGD_PCO@m+2)
	movff	3+?___aldiv,(GetPGD_PCO@m+3)
	line	664
;pomiar.c: 664: if((40+m/100)>85) return 85;
	movff	(GetPGD_PCO@m),(c:?___aldiv)
	movff	(GetPGD_PCO@m+1),(c:?___aldiv+1)
	movff	(GetPGD_PCO@m+2),(c:?___aldiv+2)
	movff	(GetPGD_PCO@m+3),(c:?___aldiv+3)
	movlw	low(064h)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(064h)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(064h)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(064h)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movlw	028h
	addwf	(0+?___aldiv),c,w
	movwf	(??_GetPGD_PCO+0+0)&0ffh
	movlw	0
	addwfc	(1+?___aldiv),c,w
	movwf	1+(??_GetPGD_PCO+0+0)&0ffh
	movlw	0
	addwfc	(2+?___aldiv),c,w
	movwf	2+(??_GetPGD_PCO+0+0)&0ffh
	movlw	0
	addwfc	(3+?___aldiv),c,w
	movwf	3+(??_GetPGD_PCO+0+0)&0ffh
	movf	(??_GetPGD_PCO+0+3)&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u61925
	movlw	0
	subwf	(??_GetPGD_PCO+0+2)&0ffh,w
	bnz	u61925
	movlw	0
	subwf	(??_GetPGD_PCO+0+1)&0ffh,w
	bnz	u61925
	movlw	056h
	subwf	(??_GetPGD_PCO+0+0)&0ffh,w
u61925:

	btfss	status,0
	goto	u61921
	goto	u61920
u61921:
	goto	l33316
u61920:
	
l33310:; BSR set to: 0

	movlw	(055h)&0ffh
	goto	l2173
	line	665
	
l33316:; BSR set to: 0

;pomiar.c: 665: else p=40+m/100;
	movff	(GetPGD_PCO@m),(c:?___aldiv)
	movff	(GetPGD_PCO@m+1),(c:?___aldiv+1)
	movff	(GetPGD_PCO@m+2),(c:?___aldiv+2)
	movff	(GetPGD_PCO@m+3),(c:?___aldiv+3)
	movlw	low(064h)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(064h)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(064h)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(064h)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movf	(0+?___aldiv),c,w
	addlw	low(028h)
	movlb	2	; () banked
	movwf	((GetPGD_PCO@p))&0ffh
	line	666
	
l33318:; BSR set to: 2

;pomiar.c: 666: if(p<40) return 40;
	movlw	(028h)&0ffh
	cpfslt	((GetPGD_PCO@p))&0ffh
	goto	u61931
	goto	u61930
u61931:
	goto	l33324
u61930:
	
l33320:
	movlw	(028h)&0ffh
	goto	l2173
	line	667
	
l33324:; BSR set to: 2

;pomiar.c: 667: return p;
	movf	((GetPGD_PCO@p))&0ffh,w
	goto	l2173
	line	675
	
l33338:; BSR set to: 1

;pomiar.c: 673: else
;pomiar.c: 674: {
;pomiar.c: 675: if(DtCO.PCO)
	movlb	0	; () banked
	movf	(0+(_DtCO+03h))&0ffh,w
	btfsc	status,2
	goto	u61941
	goto	u61940
u61941:
	goto	l33354
u61940:
	line	677
	
l33340:; BSR set to: 0

;pomiar.c: 676: {
;pomiar.c: 677: if(DtZW.SZW<25)
	movlb	1	; () banked
	movf	(0+(_DtZW+03h))&0ffh,w
	xorlw	80h
	addlw	-((019h)^80h)
	btfsc	status,0
	goto	u61951
	goto	u61950
u61951:
	goto	l33354
u61950:
	line	679
	
l33342:; BSR set to: 1

;pomiar.c: 678: {
;pomiar.c: 679: m=(25-DtZW.SZW)*DtCO.PCO;
	movff	0+(_DtZW+03h),??_GetPGD_PCO+0+0
	movlb	0	; () banked
	clrf	(??_GetPGD_PCO+0+0+1)&0ffh
	btfsc	(??_GetPGD_PCO+0+0)&0ffh,7
	decf	(??_GetPGD_PCO+0+0+1)&0ffh
	movf	(??_GetPGD_PCO+0+0)&0ffh,w
	sublw	low(019h)
	
	movwf	((c:?___wmul)),c
	movf	(??_GetPGD_PCO+0+1)&0ffh,w
	btfss	status,0
	incf	wreg
	sublw	high(019h)
	
	movwf	1+((c:?___wmul)),c
	movff	0+(_DtCO+03h),0+((c:?___wmul)+02h)
	clrf	(1+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movlb	2	; () banked
	movff	0+?___wmul,(GetPGD_PCO@m)
	movff	1+?___wmul,(GetPGD_PCO@m+1)
	movlw	0
	btfsc	((GetPGD_PCO@m+1))&0ffh,7
	movlw	-1
	movwf	((GetPGD_PCO@m+2))&0ffh
	movwf	((GetPGD_PCO@m+3))&0ffh
	line	680
;pomiar.c: 680: m*=(55-35);
	movff	(GetPGD_PCO@m),(c:?___lmul)
	movff	(GetPGD_PCO@m+1),(c:?___lmul+1)
	movff	(GetPGD_PCO@m+2),(c:?___lmul+2)
	movff	(GetPGD_PCO@m+3),(c:?___lmul+3)
	movlw	low(014h)
	movwf	(0+((c:?___lmul)+04h)),c
	movlw	high(014h)
	movwf	(1+((c:?___lmul)+04h)),c
	movlw	low highword(014h)
	movwf	(2+((c:?___lmul)+04h)),c
	movlw	high highword(014h)
	movwf	(3+((c:?___lmul)+04h)),c
	call	___lmul	;wreg free
	movff	0+?___lmul,(GetPGD_PCO@m)
	movff	1+?___lmul,(GetPGD_PCO@m+1)
	movff	2+?___lmul,(GetPGD_PCO@m+2)
	movff	3+?___lmul,(GetPGD_PCO@m+3)
	line	681
;pomiar.c: 681: m*=100;
	movff	(GetPGD_PCO@m),(c:?___lmul)
	movff	(GetPGD_PCO@m+1),(c:?___lmul+1)
	movff	(GetPGD_PCO@m+2),(c:?___lmul+2)
	movff	(GetPGD_PCO@m+3),(c:?___lmul+3)
	movlw	low(064h)
	movwf	(0+((c:?___lmul)+04h)),c
	movlw	high(064h)
	movwf	(1+((c:?___lmul)+04h)),c
	movlw	low highword(064h)
	movwf	(2+((c:?___lmul)+04h)),c
	movlw	high highword(064h)
	movwf	(3+((c:?___lmul)+04h)),c
	call	___lmul	;wreg free
	movff	0+?___lmul,(GetPGD_PCO@m)
	movff	1+?___lmul,(GetPGD_PCO@m+1)
	movff	2+?___lmul,(GetPGD_PCO@m+2)
	movff	3+?___lmul,(GetPGD_PCO@m+3)
	line	682
;pomiar.c: 682: m/=1485;
	movff	(GetPGD_PCO@m),(c:?___aldiv)
	movff	(GetPGD_PCO@m+1),(c:?___aldiv+1)
	movff	(GetPGD_PCO@m+2),(c:?___aldiv+2)
	movff	(GetPGD_PCO@m+3),(c:?___aldiv+3)
	movlw	low(05CDh)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(05CDh)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(05CDh)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(05CDh)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movff	0+?___aldiv,(GetPGD_PCO@m)
	movff	1+?___aldiv,(GetPGD_PCO@m+1)
	movff	2+?___aldiv,(GetPGD_PCO@m+2)
	movff	3+?___aldiv,(GetPGD_PCO@m+3)
	line	683
;pomiar.c: 683: if((35+m/100)>55) return 55;
	movff	(GetPGD_PCO@m),(c:?___aldiv)
	movff	(GetPGD_PCO@m+1),(c:?___aldiv+1)
	movff	(GetPGD_PCO@m+2),(c:?___aldiv+2)
	movff	(GetPGD_PCO@m+3),(c:?___aldiv+3)
	movlw	low(064h)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(064h)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(064h)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(064h)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movlw	023h
	addwf	(0+?___aldiv),c,w
	movwf	(??_GetPGD_PCO+0+0)&0ffh
	movlw	0
	addwfc	(1+?___aldiv),c,w
	movwf	1+(??_GetPGD_PCO+0+0)&0ffh
	movlw	0
	addwfc	(2+?___aldiv),c,w
	movwf	2+(??_GetPGD_PCO+0+0)&0ffh
	movlw	0
	addwfc	(3+?___aldiv),c,w
	movwf	3+(??_GetPGD_PCO+0+0)&0ffh
	movf	(??_GetPGD_PCO+0+3)&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u61965
	movlw	0
	subwf	(??_GetPGD_PCO+0+2)&0ffh,w
	bnz	u61965
	movlw	0
	subwf	(??_GetPGD_PCO+0+1)&0ffh,w
	bnz	u61965
	movlw	038h
	subwf	(??_GetPGD_PCO+0+0)&0ffh,w
u61965:

	btfss	status,0
	goto	u61961
	goto	u61960
u61961:
	goto	l33350
u61960:
	
l33344:; BSR set to: 0

	movlw	(037h)&0ffh
	goto	l2173
	line	684
	
l33350:; BSR set to: 0

;pomiar.c: 684: else p=35+m/100;
	movff	(GetPGD_PCO@m),(c:?___aldiv)
	movff	(GetPGD_PCO@m+1),(c:?___aldiv+1)
	movff	(GetPGD_PCO@m+2),(c:?___aldiv+2)
	movff	(GetPGD_PCO@m+3),(c:?___aldiv+3)
	movlw	low(064h)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(064h)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(064h)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(064h)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movf	(0+?___aldiv),c,w
	addlw	low(023h)
	movlb	2	; () banked
	movwf	((GetPGD_PCO@p))&0ffh
	line	685
	
l33352:; BSR set to: 2

;pomiar.c: 685: if(p<35) return 35;
	movlw	(023h)&0ffh
	cpfslt	((GetPGD_PCO@p))&0ffh
	goto	u61971
	goto	u61970
u61971:
	goto	l33324
u61970:
	
l33354:
	movlw	(023h)&0ffh
	line	692
	
l2173:
	return
	opt stack 0
GLOBAL	__end_of_GetPGD_PCO
	__end_of_GetPGD_PCO:
	signat	_GetPGD_PCO,89
	global	_WritePCO

;; *************** function _WritePCO *****************
;; Defined at:
;;		line 696 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_RTdS
;;		_StartRTdS
;;		_WriteEEPCO
;; This function is called by:
;;		_PomiarPCO
;; This function uses a non-reentrant model
;;
psect	text108,class=CODE,space=0,reloc=2
global __ptext108
__ptext108:
psect	text108
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	696
	global	__size_of_WritePCO
	__size_of_WritePCO	equ	__end_of_WritePCO-_WritePCO
	
_WritePCO:
	opt	stack 21
	line	697
	
l40688:
;pomiar.c: 697: if(DtCO._newPCO&&RTdS(5)>=10)
	movlb	0	; () banked
	
	btfss	(0+(_DtCO+01h))&0ffh,7
	goto	u80661
	goto	u80660
u80661:
	goto	l2189
u80660:
	
l40690:; BSR set to: 0

	movlw	(05h)&0ffh
	
	call	_RTdS
	movwf	(??_WritePCO+0+0)&0ffh,c
	movlw	(0Ah)&0ffh
	subwf	((??_WritePCO+0+0)),c,w
	btfss	status,0
	goto	u80671
	goto	u80670
u80671:
	goto	l2189
u80670:
	line	699
	
l40692:; BSR set to: 1

;pomiar.c: 698: {
;pomiar.c: 699: DtCO._newPCO=0;
	movlb	0	; () banked
	bcf	(0+(_DtCO+01h))&0ffh,7
	line	700
	
l40694:; BSR set to: 0

;pomiar.c: 700: StartRTdS(5);
	movlw	(05h)&0ffh
	
	call	_StartRTdS
	line	701
	
l40696:; BSR set to: 1

;pomiar.c: 701: WriteEEPCO();
	call	_WriteEEPCO	;wreg free
	line	703
	
l2189:
	return
	opt stack 0
GLOBAL	__end_of_WritePCO
	__end_of_WritePCO:
	signat	_WritePCO,88
	global	_WriteEEPCO

;; *************** function _WriteEEPCO *****************
;; Defined at:
;;		line 412 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Busy_eep
;;		_Write_b_eep
;; This function is called by:
;;		_WritePCO
;; This function uses a non-reentrant model
;;
psect	text109,class=CODE,space=0,reloc=2
global __ptext109
__ptext109:
psect	text109
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
	line	412
	global	__size_of_WriteEEPCO
	__size_of_WriteEEPCO	equ	__end_of_WriteEEPCO-_WriteEEPCO
	
_WriteEEPCO:
	opt	stack 21
	line	413
	
l33382:; BSR set to: 1

;konfig.c: 413: (Busy_eep(), Write_b_eep(0x00C9,DtCO.PCO));
	call	_Busy_eep	;wreg free
	
l33384:; BSR set to: 1

	movlw	high(0C9h)
	movwf	((c:?_Write_b_eep+1)),c
	movlw	low(0C9h)
	movwf	((c:?_Write_b_eep)),c
	movff	0+(_DtCO+03h),0+((c:?_Write_b_eep)+02h)
	call	_Write_b_eep	;wreg free
	line	414
	
l3979:
	return
	opt stack 0
GLOBAL	__end_of_WriteEEPCO
	__end_of_WriteEEPCO:
	signat	_WriteEEPCO,88
	global	_WritePCW

;; *************** function _WritePCW *****************
;; Defined at:
;;		line 748 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_RTdS
;;		_StartRTdS
;;		_WriteEEPCW
;; This function is called by:
;;		_PomiarPCW
;; This function uses a non-reentrant model
;;
psect	text110,class=CODE,space=0,reloc=2
global __ptext110
__ptext110:
psect	text110
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	748
	global	__size_of_WritePCW
	__size_of_WritePCW	equ	__end_of_WritePCW-_WritePCW
	
_WritePCW:
	opt	stack 21
	line	749
	
l40698:
;pomiar.c: 749: if(DtCW._newPCW&&RTdS(6)>=10)
	movlb	0	; () banked
	
	btfss	(0+(_DtCW+01h))&0ffh,0
	goto	u80681
	goto	u80680
u80681:
	goto	l2206
u80680:
	
l40700:; BSR set to: 0

	movlw	(06h)&0ffh
	
	call	_RTdS
	movwf	(??_WritePCW+0+0)&0ffh,c
	movlw	(0Ah)&0ffh
	subwf	((??_WritePCW+0+0)),c,w
	btfss	status,0
	goto	u80691
	goto	u80690
u80691:
	goto	l2206
u80690:
	line	751
	
l40702:; BSR set to: 1

;pomiar.c: 750: {
;pomiar.c: 751: DtCW._newPCW=0;
	movlb	0	; () banked
	bcf	(0+(_DtCW+01h))&0ffh,0
	line	752
	
l40704:; BSR set to: 0

;pomiar.c: 752: StartRTdS(6);
	movlw	(06h)&0ffh
	
	call	_StartRTdS
	line	753
	
l40706:; BSR set to: 1

;pomiar.c: 753: WriteEEPCW();
	call	_WriteEEPCW	;wreg free
	line	755
	
l2206:
	return
	opt stack 0
GLOBAL	__end_of_WritePCW
	__end_of_WritePCW:
	signat	_WritePCW,88
	global	_WriteEEPCW

;; *************** function _WriteEEPCW *****************
;; Defined at:
;;		line 402 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Busy_eep
;;		_Write_b_eep
;; This function is called by:
;;		_WritePCW
;; This function uses a non-reentrant model
;;
psect	text111,class=CODE,space=0,reloc=2
global __ptext111
__ptext111:
psect	text111
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
	line	402
	global	__size_of_WriteEEPCW
	__size_of_WriteEEPCW	equ	__end_of_WriteEEPCW-_WriteEEPCW
	
_WriteEEPCW:
	opt	stack 21
	line	403
	
l33396:; BSR set to: 1

;konfig.c: 403: (Busy_eep(), Write_b_eep(0x00CA,DtCW.PCW));
	call	_Busy_eep	;wreg free
	
l33398:; BSR set to: 1

	movlw	high(0CAh)
	movwf	((c:?_Write_b_eep+1)),c
	movlw	low(0CAh)
	movwf	((c:?_Write_b_eep)),c
	movff	0+(_DtCW+03h),0+((c:?_Write_b_eep)+02h)
	call	_Write_b_eep	;wreg free
	line	404
	
l3973:
	return
	opt stack 0
GLOBAL	__end_of_WriteEEPCW
	__end_of_WriteEEPCW:
	signat	_WriteEEPCW,88
	global	_SetModPCW

;; *************** function _SetModPCW *****************
;; Defined at:
;;		line 759 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PomiarPCW
;; This function uses a non-reentrant model
;;
psect	text112,class=CODE,space=0,reloc=2
global __ptext112
__ptext112:
psect	text112
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	759
	global	__size_of_SetModPCW
	__size_of_SetModPCW	equ	__end_of_SetModPCW-_SetModPCW
	
_SetModPCW:
	opt	stack 23
	line	760
	
l33400:
;pomiar.c: 760: if(M._AKTYWNE_KNF) DtCW.PPCW=60;
	movlb	0	; () banked
	movf	(1+(_M+018h))&0ffh,w
	iorwf (0+(_M+018h))&0ffh,w

	btfsc	status,2
	goto	u62021
	goto	u62020
u62021:
	goto	l2209
u62020:
	
l33402:; BSR set to: 0

	movlw	low(03Ch)
	movwf	(0+(_DtCW+04h))&0ffh
	goto	l2210
	line	761
	
l2209:; BSR set to: 0

	line	762
;pomiar.c: 761: else
;pomiar.c: 762: if((DtKNF.tpkt==0)&&M._pob_AL) DtCW.PPCW=70;
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+07h))&0ffh
	goto	u62031
	goto	u62030
u62031:
	goto	l2211
u62030:
	
l33404:; BSR set to: 1

	movlb	0	; () banked
	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfsc	status,2
	goto	u62041
	goto	u62040
u62041:
	goto	l2211
u62040:
	
l33406:; BSR set to: 0

	movlw	low(046h)
	movwf	(0+(_DtCW+04h))&0ffh
	goto	l2210
	line	763
	
l2211:
;pomiar.c: 763: else DtCW.PPCW=DtCW.PCW;
	movff	0+(_DtCW+03h),0+(_DtCW+04h)
	
l2210:
	line	764
;pomiar.c: 764: PFN.PPCW=DtCW.PPCW;
	movff	0+(_DtCW+04h),0+(_PFN+0Eh)
	line	765
	
l33408:
;pomiar.c: 765: if(M._pob_DzCW) PFN.PPCW=21;
	movlb	0	; () banked
	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfsc	status,2
	goto	u62051
	goto	u62050
u62051:
	goto	l2214
u62050:
	
l33410:; BSR set to: 0

	movlw	low(015h)
	movlb	1	; () banked
	movwf	(0+(_PFN+0Eh))&0ffh
	line	766
	
l2214:
	return
	opt stack 0
GLOBAL	__end_of_SetModPCW
	__end_of_SetModPCW:
	signat	_SetModPCW,88
	global	_WritePFN

;; *************** function _WritePFN *****************
;; Defined at:
;;		line 866 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_RTdS
;;		_StartRTdS
;;		_WriteEEPFN
;; This function is called by:
;;		_PomiarPFN
;; This function uses a non-reentrant model
;;
psect	text113,class=CODE,space=0,reloc=2
global __ptext113
__ptext113:
psect	text113
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	866
	global	__size_of_WritePFN
	__size_of_WritePFN	equ	__end_of_WritePFN-_WritePFN
	
_WritePFN:
	opt	stack 21
	line	867
	
l40708:; BSR set to: 1

;pomiar.c: 867: if(PFN._newPFN&&RTdS(7)>=10)
	
	btfss	(0+(_PFN+03h))&0ffh,3
	goto	u80701
	goto	u80700
u80701:
	goto	l2233
u80700:
	
l40710:; BSR set to: 1

	movlw	(07h)&0ffh
	
	call	_RTdS
	movwf	(??_WritePFN+0+0)&0ffh,c
	movlw	(0Ah)&0ffh
	subwf	((??_WritePFN+0+0)),c,w
	btfss	status,0
	goto	u80711
	goto	u80710
u80711:
	goto	l2233
u80710:
	line	869
	
l40712:; BSR set to: 1

;pomiar.c: 868: {
;pomiar.c: 869: PFN._newPFN=0;
	bcf	(0+(_PFN+03h))&0ffh,3
	line	870
	
l40714:; BSR set to: 1

;pomiar.c: 870: StartRTdS(7);
	movlw	(07h)&0ffh
	
	call	_StartRTdS
	line	871
	
l40716:; BSR set to: 1

;pomiar.c: 871: WriteEEPFN();
	call	_WriteEEPFN	;wreg free
	line	873
	
l2233:
	return
	opt stack 0
GLOBAL	__end_of_WritePFN
	__end_of_WritePFN:
	signat	_WritePFN,88
	global	_WriteEEPFN

;; *************** function _WriteEEPFN *****************
;; Defined at:
;;		line 422 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Busy_eep
;;		_Write_b_eep
;; This function is called by:
;;		_WritePFN
;; This function uses a non-reentrant model
;;
psect	text114,class=CODE,space=0,reloc=2
global __ptext114
__ptext114:
psect	text114
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
	line	422
	global	__size_of_WriteEEPFN
	__size_of_WriteEEPFN	equ	__end_of_WriteEEPFN-_WriteEEPFN
	
_WriteEEPFN:
	opt	stack 21
	line	423
	
l33422:; BSR set to: 1

;konfig.c: 423: (Busy_eep(), Write_b_eep(0x00CB,PFN.poz));
	call	_Busy_eep	;wreg free
	
l33424:; BSR set to: 1

	movlw	high(0CBh)
	movwf	((c:?_Write_b_eep+1)),c
	movlw	low(0CBh)
	movwf	((c:?_Write_b_eep)),c
	movff	0+(_PFN+01Fh),0+((c:?_Write_b_eep)+02h)
	call	_Write_b_eep	;wreg free
	line	424
	
l3985:
	return
	opt stack 0
GLOBAL	__end_of_WriteEEPFN
	__end_of_WriteEEPFN:
	signat	_WriteEEPFN,88
	global	_ReadEEPFN

;; *************** function _ReadEEPFN *****************
;; Defined at:
;;		line 426 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Read_b_eep
;; This function is called by:
;;		_PomiarPFN
;; This function uses a non-reentrant model
;;
psect	text115,class=CODE,space=0,reloc=2
global __ptext115
__ptext115:
psect	text115
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
	line	426
	global	__size_of_ReadEEPFN
	__size_of_ReadEEPFN	equ	__end_of_ReadEEPFN-_ReadEEPFN
	
_ReadEEPFN:
	opt	stack 22
	line	427
	
l33426:; BSR set to: 1

;konfig.c: 427: return Read_b_eep(0x00CB);
	movlw	high(0CBh)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0CBh)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	line	428
	
l3988:
	return
	opt stack 0
GLOBAL	__end_of_ReadEEPFN
	__end_of_ReadEEPFN:
	signat	_ReadEEPFN,89
	global	_RefStan

;; *************** function _RefStan *****************
;; Defined at:
;;		line 61 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_InitPort
;; This function uses a non-reentrant model
;;
psect	text116,class=CODE,space=0,reloc=2
global __ptext116
__ptext116:
psect	text116
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
	line	61
	global	__size_of_RefStan
	__size_of_RefStan	equ	__end_of_RefStan-_RefStan
	
_RefStan:
	opt	stack 25
	line	63
	
l33430:
;port.c: 63: SPort[0].Input=0;
	movlb	0	; () banked
	bcf	((_SPort))&0ffh,0	;volatile
	line	65
	
l33432:; BSR set to: 0

;port.c: 65: SPort[1].Input=(PORTBbits.RB5)?1:0;
	
	btfsc	((c:3969)),c,5	;volatile
	goto	u62081
	goto	u62080
u62081:
	movlw	1
	goto	u62086
u62080:
	movlw	0
u62086:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+01h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+01h))&0ffh	;volatile
	line	67
	
l33434:; BSR set to: 0

;port.c: 67: SPort[2].Input=(PORTCbits.RC0&&PORTAbits.RA7)?1:0;
	clrf	((c:_RefStan$2769)),c
	
l33436:; BSR set to: 0

	
	btfss	((c:3970)),c,0	;volatile
	goto	u62091
	goto	u62090
u62091:
	goto	l33442
u62090:
	
l33438:; BSR set to: 0

	
	btfss	((c:3968)),c,7	;volatile
	goto	u62101
	goto	u62100
u62101:
	goto	l33442
u62100:
	
l33440:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_RefStan$2769)),c
	
l33442:; BSR set to: 0

	btfsc	(c:_RefStan$2769),c,0
	bra	u62115
	bcf	(0+(_SPort+02h))&0ffh,0	;volatile
	bra	u62116
	u62115:
	movlb	0	; () banked
	bsf	(0+(_SPort+02h))&0ffh,0	;volatile
	u62116:

	line	69
	
l33444:; BSR set to: 0

;port.c: 69: SPort[3].Input=(PORTAbits.RA6&&PORTAbits.RA7)?1:0;
	clrf	((c:_RefStan$2770)),c
	
l33446:; BSR set to: 0

	
	btfss	((c:3968)),c,6	;volatile
	goto	u62121
	goto	u62120
u62121:
	goto	l33452
u62120:
	
l33448:; BSR set to: 0

	
	btfss	((c:3968)),c,7	;volatile
	goto	u62131
	goto	u62130
u62131:
	goto	l33452
u62130:
	
l33450:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_RefStan$2770)),c
	
l33452:; BSR set to: 0

	btfsc	(c:_RefStan$2770),c,0
	bra	u62145
	bcf	(0+(_SPort+03h))&0ffh,0	;volatile
	bra	u62146
	u62145:
	movlb	0	; () banked
	bsf	(0+(_SPort+03h))&0ffh,0	;volatile
	u62146:

	line	71
	
l33454:; BSR set to: 0

;port.c: 71: SPort[4].Input=(PORTAbits.RA7)?1:0;
	
	btfsc	((c:3968)),c,7	;volatile
	goto	u62151
	goto	u62150
u62151:
	movlw	1
	goto	u62156
u62150:
	movlw	0
u62156:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+04h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+04h))&0ffh	;volatile
	line	73
	
l33456:; BSR set to: 0

;port.c: 73: SPort[5].Input=(PORTDbits.RD4)?0:1;
	
	btfss	((c:3971)),c,4	;volatile
	goto	u62161
	goto	u62160
u62161:
	movlw	1
	goto	u62166
u62160:
	movlw	0
u62166:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+05h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+05h))&0ffh	;volatile
	line	75
	
l33458:; BSR set to: 0

;port.c: 75: SPort[6].Input=0;
	bcf	(0+(_SPort+06h))&0ffh,0	;volatile
	line	77
	
l33460:; BSR set to: 0

;port.c: 77: SPort[7].Input=0;
	bcf	(0+(_SPort+07h))&0ffh,0	;volatile
	line	79
	
l33462:; BSR set to: 0

;port.c: 79: SPort[8].Input=(PORTCbits.RC5)?0:1;
	
	btfss	((c:3970)),c,5	;volatile
	goto	u62171
	goto	u62170
u62171:
	movlw	1
	goto	u62176
u62170:
	movlw	0
u62176:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+08h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+08h))&0ffh	;volatile
	line	81
	
l33464:; BSR set to: 0

;port.c: 81: SPort[9].Input=(DtCO._on_DZ_CO)?1:0;
	
	btfsc	((_DtCO))&0ffh,5
	goto	u62181
	goto	u62180
u62181:
	movlw	1
	goto	u62186
u62180:
	movlw	0
u62186:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+09h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+09h))&0ffh	;volatile
	line	83
	
l33466:; BSR set to: 0

;port.c: 83: SPort[10].Input=(DtCW._on_DZ_CW)?1:0;
	
	btfsc	((_DtCW))&0ffh,4
	goto	u62191
	goto	u62190
u62191:
	movlw	1
	goto	u62196
u62190:
	movlw	0
u62196:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+0Ah))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+0Ah))&0ffh	;volatile
	line	85
	
l33468:; BSR set to: 0

;port.c: 85: SPort[11].Input=(PORTAbits.RA4)?0:1;
	
	btfss	((c:3968)),c,4	;volatile
	goto	u62201
	goto	u62200
u62201:
	movlw	1
	goto	u62206
u62200:
	movlw	0
u62206:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+0Bh))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+0Bh))&0ffh	;volatile
	line	87
	
l33470:; BSR set to: 0

;port.c: 87: SPort[12].Input=(PORTDbits.RD5)?1:0;
	
	btfsc	((c:3971)),c,5	;volatile
	goto	u62211
	goto	u62210
u62211:
	movlw	1
	goto	u62216
u62210:
	movlw	0
u62216:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+0Ch))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+0Ch))&0ffh	;volatile
	line	89
	
l33472:; BSR set to: 0

;port.c: 89: SPort[13].Input=(DtCO._cold_CO||DtCO._hot_CO)?1:0;
	movlw	low(01h)
	movwf	((c:_RefStan$2771)),c
	
l33474:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,2
	goto	u62221
	goto	u62220
u62221:
	goto	l2337
u62220:
	
l33476:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,3
	goto	u62231
	goto	u62230
u62231:
	goto	l2337
u62230:
	
l33478:; BSR set to: 0

	clrf	((c:_RefStan$2771)),c
	
l2337:; BSR set to: 0

	btfsc	(c:_RefStan$2771),c,0
	bra	u62245
	bcf	(0+(_SPort+0Dh))&0ffh,0	;volatile
	bra	u62246
	u62245:
	movlb	0	; () banked
	bsf	(0+(_SPort+0Dh))&0ffh,0	;volatile
	u62246:

	line	91
	
l33480:; BSR set to: 0

;port.c: 91: SPort[14].Input=(DtCS._error)?1:0;
	
	btfsc	((c:_DtCS)),c,3
	goto	u62251
	goto	u62250
u62251:
	movlw	1
	goto	u62256
u62250:
	movlw	0
u62256:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+0Eh))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+0Eh))&0ffh	;volatile
	line	93
;port.c: 93: SPort[15].Input=(DtCS._work)?1:0;
	
	btfsc	((c:_DtCS)),c,4
	goto	u62261
	goto	u62260
u62261:
	movlw	1
	goto	u62266
u62260:
	movlw	0
u62266:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+0Fh))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+0Fh))&0ffh	;volatile
	line	95
;port.c: 95: SPort[16].Input=(DtCS._lo)?1:0;
	
	btfsc	((c:_DtCS)),c,1
	goto	u62271
	goto	u62270
u62271:
	movlw	1
	goto	u62276
u62270:
	movlw	0
u62276:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+010h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+010h))&0ffh	;volatile
	line	97
;port.c: 97: SPort[17].Input=(DtCW._cold_CW)?1:0;
	
	btfsc	((_DtCW))&0ffh,7
	goto	u62281
	goto	u62280
u62281:
	movlw	1
	goto	u62286
u62280:
	movlw	0
u62286:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+011h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+011h))&0ffh	;volatile
	line	99
;port.c: 99: SPort[18].Input=(DtCO._err_CO)?1:0;
	
	btfsc	((_DtCO))&0ffh,0
	goto	u62291
	goto	u62290
u62291:
	movlw	1
	goto	u62296
u62290:
	movlw	0
u62296:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+012h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+012h))&0ffh	;volatile
	line	101
;port.c: 101: SPort[19].Input=(DtCO._ad_CO)?1:0;
	
	btfsc	((_DtCO))&0ffh,2
	goto	u62301
	goto	u62300
u62301:
	movlw	1
	goto	u62306
u62300:
	movlw	0
u62306:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+013h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+013h))&0ffh	;volatile
	line	103
;port.c: 103: SPort[20].Input=(DtZW._on_ZW)?1:0;
	movlb	1	; () banked
	
	btfsc	((_DtZW))&0ffh,0
	goto	u62311
	goto	u62310
u62311:
	movlw	1
	goto	u62316
u62310:
	movlw	0
u62316:
	movwf	(??_RefStan+0+0)&0ffh,c
	movlb	0	; () banked
	movf	(0+(_SPort+014h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+014h))&0ffh	;volatile
	line	105
;port.c: 105: SPort[21].Input=(PORTAbits.RA6)?1:0;
	
	btfsc	((c:3968)),c,6	;volatile
	goto	u62321
	goto	u62320
u62321:
	movlw	1
	goto	u62326
u62320:
	movlw	0
u62326:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+015h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+015h))&0ffh	;volatile
	line	107
;port.c: 107: SPort[22].Input=(PORTBbits.RB1)?0:1;
	
	btfss	((c:3969)),c,1	;volatile
	goto	u62331
	goto	u62330
u62331:
	movlw	1
	goto	u62336
u62330:
	movlw	0
u62336:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+016h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+016h))&0ffh	;volatile
	line	109
;port.c: 109: SPort[23].Input=(PORTBbits.RB2)?0:1;
	
	btfss	((c:3969)),c,2	;volatile
	goto	u62341
	goto	u62340
u62341:
	movlw	1
	goto	u62346
u62340:
	movlw	0
u62346:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+017h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+017h))&0ffh	;volatile
	line	111
;port.c: 111: SPort[24].Input=(PORTBbits.RB4)?0:1;
	
	btfss	((c:3969)),c,4	;volatile
	goto	u62351
	goto	u62350
u62351:
	movlw	1
	goto	u62356
u62350:
	movlw	0
u62356:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+018h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+018h))&0ffh	;volatile
	line	113
;port.c: 113: SPort[25].Input=(PORTBbits.RB3)?0:1;
	
	btfss	((c:3969)),c,3	;volatile
	goto	u62361
	goto	u62360
u62361:
	movlw	1
	goto	u62366
u62360:
	movlw	0
u62366:
	movwf	(??_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+019h))&0ffh,w	;volatile
	xorwf	((??_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_RefStan+0+0)),c,w
	movwf	(0+(_SPort+019h))&0ffh	;volatile
	line	115
	
l2338:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RefStan
	__end_of_RefStan:
	signat	_RefStan,88
	global	_FrsStan

;; *************** function _FrsStan *****************
;; Defined at:
;;		line 120 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_InitPort
;; This function uses a non-reentrant model
;;
psect	text117,class=CODE,space=0,reloc=2
global __ptext117
__ptext117:
psect	text117
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
	line	120
	global	__size_of_FrsStan
	__size_of_FrsStan	equ	__end_of_FrsStan-_FrsStan
	
_FrsStan:; BSR set to: 0

	opt	stack 25
	line	122
	
l33482:; BSR set to: 0

;port.c: 122: SPort[0].Output=SPort[0].Input;
	btfss	((_SPort))&0ffh,0	;volatile
	bra	u62375
	bsf	((_SPort))&0ffh,1	;volatile
	bra	u62377
	u62375:	
	movlb	0	; () banked
	bcf	((_SPort))&0ffh,1	;volatile
	u62377:
	line	123
	
l33484:; BSR set to: 0

;port.c: 123: SPort[0].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	((_SPort))&0ffh	;volatile
	line	126
	
l33486:; BSR set to: 0

;port.c: 126: SPort[1].Output=SPort[1].Input;
	btfss	(0+(_SPort+01h))&0ffh,0	;volatile
	bra	u62385
	bsf	(0+(_SPort+01h))&0ffh,1	;volatile
	bra	u62387
	u62385:	
	movlb	0	; () banked
	bcf	(0+(_SPort+01h))&0ffh,1	;volatile
	u62387:
	line	127
;port.c: 127: SPort[1].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+01h))&0ffh	;volatile
	line	130
	
l33488:; BSR set to: 0

;port.c: 130: SPort[2].Output=SPort[2].Input;
	btfss	(0+(_SPort+02h))&0ffh,0	;volatile
	bra	u62395
	bsf	(0+(_SPort+02h))&0ffh,1	;volatile
	bra	u62397
	u62395:	
	movlb	0	; () banked
	bcf	(0+(_SPort+02h))&0ffh,1	;volatile
	u62397:
	line	131
;port.c: 131: SPort[2].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+02h))&0ffh	;volatile
	line	134
	
l33490:; BSR set to: 0

;port.c: 134: SPort[3].Output=SPort[3].Input;
	btfss	(0+(_SPort+03h))&0ffh,0	;volatile
	bra	u62405
	bsf	(0+(_SPort+03h))&0ffh,1	;volatile
	bra	u62407
	u62405:	
	movlb	0	; () banked
	bcf	(0+(_SPort+03h))&0ffh,1	;volatile
	u62407:
	line	135
;port.c: 135: SPort[3].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+03h))&0ffh	;volatile
	line	138
	
l33492:; BSR set to: 0

;port.c: 138: SPort[4].Output=SPort[4].Input;
	btfss	(0+(_SPort+04h))&0ffh,0	;volatile
	bra	u62415
	bsf	(0+(_SPort+04h))&0ffh,1	;volatile
	bra	u62417
	u62415:	
	movlb	0	; () banked
	bcf	(0+(_SPort+04h))&0ffh,1	;volatile
	u62417:
	line	139
;port.c: 139: SPort[4].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+04h))&0ffh	;volatile
	line	142
	
l33494:; BSR set to: 0

;port.c: 142: SPort[5].Output=SPort[5].Input;
	btfss	(0+(_SPort+05h))&0ffh,0	;volatile
	bra	u62425
	bsf	(0+(_SPort+05h))&0ffh,1	;volatile
	bra	u62427
	u62425:	
	movlb	0	; () banked
	bcf	(0+(_SPort+05h))&0ffh,1	;volatile
	u62427:
	line	143
;port.c: 143: SPort[5].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+05h))&0ffh	;volatile
	line	146
	
l33496:; BSR set to: 0

;port.c: 146: SPort[6].Output=SPort[6].Input;
	btfss	(0+(_SPort+06h))&0ffh,0	;volatile
	bra	u62435
	bsf	(0+(_SPort+06h))&0ffh,1	;volatile
	bra	u62437
	u62435:	
	movlb	0	; () banked
	bcf	(0+(_SPort+06h))&0ffh,1	;volatile
	u62437:
	line	147
;port.c: 147: SPort[6].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+06h))&0ffh	;volatile
	line	150
	
l33498:; BSR set to: 0

;port.c: 150: SPort[7].Output=SPort[7].Input;
	btfss	(0+(_SPort+07h))&0ffh,0	;volatile
	bra	u62445
	bsf	(0+(_SPort+07h))&0ffh,1	;volatile
	bra	u62447
	u62445:	
	movlb	0	; () banked
	bcf	(0+(_SPort+07h))&0ffh,1	;volatile
	u62447:
	line	151
;port.c: 151: SPort[7].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+07h))&0ffh	;volatile
	line	154
	
l33500:; BSR set to: 0

;port.c: 154: SPort[8].Output=SPort[8].Input;
	btfss	(0+(_SPort+08h))&0ffh,0	;volatile
	bra	u62455
	bsf	(0+(_SPort+08h))&0ffh,1	;volatile
	bra	u62457
	u62455:	
	movlb	0	; () banked
	bcf	(0+(_SPort+08h))&0ffh,1	;volatile
	u62457:
	line	155
;port.c: 155: SPort[8].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+08h))&0ffh	;volatile
	line	158
	
l33502:; BSR set to: 0

;port.c: 158: SPort[9].Output=SPort[9].Input;
	btfss	(0+(_SPort+09h))&0ffh,0	;volatile
	bra	u62465
	bsf	(0+(_SPort+09h))&0ffh,1	;volatile
	bra	u62467
	u62465:	
	movlb	0	; () banked
	bcf	(0+(_SPort+09h))&0ffh,1	;volatile
	u62467:
	line	159
;port.c: 159: SPort[9].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+09h))&0ffh	;volatile
	line	162
	
l33504:; BSR set to: 0

;port.c: 162: SPort[10].Output=SPort[10].Input;
	btfss	(0+(_SPort+0Ah))&0ffh,0	;volatile
	bra	u62475
	bsf	(0+(_SPort+0Ah))&0ffh,1	;volatile
	bra	u62477
	u62475:	
	movlb	0	; () banked
	bcf	(0+(_SPort+0Ah))&0ffh,1	;volatile
	u62477:
	line	163
;port.c: 163: SPort[10].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+0Ah))&0ffh	;volatile
	line	166
	
l33506:; BSR set to: 0

;port.c: 166: SPort[11].Output=SPort[11].Input;
	btfss	(0+(_SPort+0Bh))&0ffh,0	;volatile
	bra	u62485
	bsf	(0+(_SPort+0Bh))&0ffh,1	;volatile
	bra	u62487
	u62485:	
	movlb	0	; () banked
	bcf	(0+(_SPort+0Bh))&0ffh,1	;volatile
	u62487:
	line	167
;port.c: 167: SPort[11].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+0Bh))&0ffh	;volatile
	line	170
	
l33508:; BSR set to: 0

;port.c: 170: SPort[12].Output=SPort[12].Input;
	btfss	(0+(_SPort+0Ch))&0ffh,0	;volatile
	bra	u62495
	bsf	(0+(_SPort+0Ch))&0ffh,1	;volatile
	bra	u62497
	u62495:	
	movlb	0	; () banked
	bcf	(0+(_SPort+0Ch))&0ffh,1	;volatile
	u62497:
	line	171
;port.c: 171: SPort[12].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+0Ch))&0ffh	;volatile
	line	174
	
l33510:; BSR set to: 0

;port.c: 174: SPort[13].Output=SPort[13].Input;
	btfss	(0+(_SPort+0Dh))&0ffh,0	;volatile
	bra	u62505
	bsf	(0+(_SPort+0Dh))&0ffh,1	;volatile
	bra	u62507
	u62505:	
	movlb	0	; () banked
	bcf	(0+(_SPort+0Dh))&0ffh,1	;volatile
	u62507:
	line	175
;port.c: 175: SPort[13].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+0Dh))&0ffh	;volatile
	line	178
	
l33512:; BSR set to: 0

;port.c: 178: SPort[14].Output=SPort[14].Input;
	btfss	(0+(_SPort+0Eh))&0ffh,0	;volatile
	bra	u62515
	bsf	(0+(_SPort+0Eh))&0ffh,1	;volatile
	bra	u62517
	u62515:	
	movlb	0	; () banked
	bcf	(0+(_SPort+0Eh))&0ffh,1	;volatile
	u62517:
	line	179
;port.c: 179: SPort[14].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+0Eh))&0ffh	;volatile
	line	182
	
l33514:; BSR set to: 0

;port.c: 182: SPort[15].Output=SPort[15].Input;
	btfss	(0+(_SPort+0Fh))&0ffh,0	;volatile
	bra	u62525
	bsf	(0+(_SPort+0Fh))&0ffh,1	;volatile
	bra	u62527
	u62525:	
	movlb	0	; () banked
	bcf	(0+(_SPort+0Fh))&0ffh,1	;volatile
	u62527:
	line	183
;port.c: 183: SPort[15].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+0Fh))&0ffh	;volatile
	line	186
	
l33516:; BSR set to: 0

;port.c: 186: SPort[16].Output=SPort[16].Input;
	btfss	(0+(_SPort+010h))&0ffh,0	;volatile
	bra	u62535
	bsf	(0+(_SPort+010h))&0ffh,1	;volatile
	bra	u62537
	u62535:	
	movlb	0	; () banked
	bcf	(0+(_SPort+010h))&0ffh,1	;volatile
	u62537:
	line	187
;port.c: 187: SPort[16].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+010h))&0ffh	;volatile
	line	190
	
l33518:; BSR set to: 0

;port.c: 190: SPort[17].Output=SPort[17].Input;
	btfss	(0+(_SPort+011h))&0ffh,0	;volatile
	bra	u62545
	bsf	(0+(_SPort+011h))&0ffh,1	;volatile
	bra	u62547
	u62545:	
	movlb	0	; () banked
	bcf	(0+(_SPort+011h))&0ffh,1	;volatile
	u62547:
	line	191
;port.c: 191: SPort[17].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+011h))&0ffh	;volatile
	line	194
	
l33520:; BSR set to: 0

;port.c: 194: SPort[18].Output=SPort[18].Input;
	btfss	(0+(_SPort+012h))&0ffh,0	;volatile
	bra	u62555
	bsf	(0+(_SPort+012h))&0ffh,1	;volatile
	bra	u62557
	u62555:	
	movlb	0	; () banked
	bcf	(0+(_SPort+012h))&0ffh,1	;volatile
	u62557:
	line	195
;port.c: 195: SPort[18].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+012h))&0ffh	;volatile
	line	198
	
l33522:; BSR set to: 0

;port.c: 198: SPort[19].Output=SPort[19].Input;
	btfss	(0+(_SPort+013h))&0ffh,0	;volatile
	bra	u62565
	bsf	(0+(_SPort+013h))&0ffh,1	;volatile
	bra	u62567
	u62565:	
	movlb	0	; () banked
	bcf	(0+(_SPort+013h))&0ffh,1	;volatile
	u62567:
	line	199
;port.c: 199: SPort[19].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+013h))&0ffh	;volatile
	line	202
	
l33524:; BSR set to: 0

;port.c: 202: SPort[20].Output=SPort[20].Input;
	btfss	(0+(_SPort+014h))&0ffh,0	;volatile
	bra	u62575
	bsf	(0+(_SPort+014h))&0ffh,1	;volatile
	bra	u62577
	u62575:	
	movlb	0	; () banked
	bcf	(0+(_SPort+014h))&0ffh,1	;volatile
	u62577:
	line	203
;port.c: 203: SPort[20].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+014h))&0ffh	;volatile
	line	206
	
l33526:; BSR set to: 0

;port.c: 206: SPort[21].Output=SPort[21].Input;
	btfss	(0+(_SPort+015h))&0ffh,0	;volatile
	bra	u62585
	bsf	(0+(_SPort+015h))&0ffh,1	;volatile
	bra	u62587
	u62585:	
	movlb	0	; () banked
	bcf	(0+(_SPort+015h))&0ffh,1	;volatile
	u62587:
	line	207
;port.c: 207: SPort[21].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+015h))&0ffh	;volatile
	line	210
	
l33528:; BSR set to: 0

;port.c: 210: SPort[22].Output=SPort[22].Input;
	btfss	(0+(_SPort+016h))&0ffh,0	;volatile
	bra	u62595
	bsf	(0+(_SPort+016h))&0ffh,1	;volatile
	bra	u62597
	u62595:	
	movlb	0	; () banked
	bcf	(0+(_SPort+016h))&0ffh,1	;volatile
	u62597:
	line	211
;port.c: 211: SPort[22].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+016h))&0ffh	;volatile
	line	214
	
l33530:; BSR set to: 0

;port.c: 214: SPort[23].Output=SPort[23].Input;
	btfss	(0+(_SPort+017h))&0ffh,0	;volatile
	bra	u62605
	bsf	(0+(_SPort+017h))&0ffh,1	;volatile
	bra	u62607
	u62605:	
	movlb	0	; () banked
	bcf	(0+(_SPort+017h))&0ffh,1	;volatile
	u62607:
	line	215
;port.c: 215: SPort[23].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+017h))&0ffh	;volatile
	line	218
	
l33532:; BSR set to: 0

;port.c: 218: SPort[24].Output=SPort[24].Input;
	btfss	(0+(_SPort+018h))&0ffh,0	;volatile
	bra	u62615
	bsf	(0+(_SPort+018h))&0ffh,1	;volatile
	bra	u62617
	u62615:	
	movlb	0	; () banked
	bcf	(0+(_SPort+018h))&0ffh,1	;volatile
	u62617:
	line	219
;port.c: 219: SPort[24].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+018h))&0ffh	;volatile
	line	222
	
l33534:; BSR set to: 0

;port.c: 222: SPort[25].Output=SPort[25].Input;
	btfss	(0+(_SPort+019h))&0ffh,0	;volatile
	bra	u62625
	bsf	(0+(_SPort+019h))&0ffh,1	;volatile
	bra	u62627
	u62625:	
	movlb	0	; () banked
	bcf	(0+(_SPort+019h))&0ffh,1	;volatile
	u62627:
	line	223
;port.c: 223: SPort[25].Timer=0;
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(0+(_SPort+019h))&0ffh	;volatile
	line	225
	
l2341:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_FrsStan
	__end_of_FrsStan:
	signat	_FrsStan,88
	global	_WswOff

;; *************** function _WswOff *****************
;; Defined at:
;;		line 630 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ClsScr
;; This function uses a non-reentrant model
;;
psect	text118,class=CODE,space=0,reloc=2
global __ptext118
__ptext118:
psect	text118
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	630
	global	__size_of_WswOff
	__size_of_WswOff	equ	__end_of_WswOff-_WswOff
	
_WswOff:; BSR set to: 0

	opt	stack 25
	line	631
	
l33536:; BSR set to: 0

;wsw.c: 631: LedData.setOff=1;
	movlb	1	; () banked
	bsf	((_LedData))&0ffh,0
	line	632
	
l4566:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_WswOff
	__end_of_WswOff:
	signat	_WswOff,88
	global	_AllKolToFirstPoz

;; *************** function _AllKolToFirstPoz *****************
;; Defined at:
;;		line 709 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  j               1   29[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_EndClsScr
;; This function uses a non-reentrant model
;;
psect	text119,class=CODE,space=0,reloc=2
global __ptext119
__ptext119:
psect	text119
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	709
	global	__size_of_AllKolToFirstPoz
	__size_of_AllKolToFirstPoz	equ	__end_of_AllKolToFirstPoz-_AllKolToFirstPoz
	
_AllKolToFirstPoz:; BSR set to: 1

	opt	stack 25
	line	711
	
l33538:; BSR set to: 1

;wsw.c: 710: unsigned char j;
;wsw.c: 711: for(j=0;j<4;j++)
	clrf	((c:AllKolToFirstPoz@j)),c
	line	713
	
l33544:; BSR set to: 1

;wsw.c: 712: {
;wsw.c: 713: KInd[j].indeks=0;
	movlw	low(_KInd)
	addwf	((c:AllKolToFirstPoz@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	714
	
l33546:; BSR set to: 1

;wsw.c: 714: KTim[j].ncS=0;
	movf	((c:AllKolToFirstPoz@j)),c,w
	mullw	03h
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	715
	
l33548:; BSR set to: 1

;wsw.c: 715: KTim[j].ndS=0;
	movf	((c:AllKolToFirstPoz@j)),c,w
	mullw	03h
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	711
	
l33550:; BSR set to: 1

	incf	((c:AllKolToFirstPoz@j)),c
	
l33552:; BSR set to: 1

	movlw	(04h-1)
	cpfsgt	((c:AllKolToFirstPoz@j)),c
	goto	u62631
	goto	u62630
u62631:
	goto	l33544
u62630:
	line	717
	
l4622:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_AllKolToFirstPoz
	__end_of_AllKolToFirstPoz:
	signat	_AllKolToFirstPoz,88
	global	_WswOn

;; *************** function _WswOn *****************
;; Defined at:
;;		line 635 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_EndClsScr
;; This function uses a non-reentrant model
;;
psect	text120,class=CODE,space=0,reloc=2
global __ptext120
__ptext120:
psect	text120
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	635
	global	__size_of_WswOn
	__size_of_WswOn	equ	__end_of_WswOn-_WswOn
	
_WswOn:; BSR set to: 1

	opt	stack 25
	line	636
	
l33554:; BSR set to: 1

;wsw.c: 636: LedData.setOff=0;
	bcf	((_LedData))&0ffh,0
	line	637
	
l4569:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_WswOn
	__end_of_WswOn:
	signat	_WswOn,88
	global	_SetData

;; *************** function _SetData *****************
;; Defined at:
;;		line 643 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;  wData           2   29[COMRAM] PTR struct .
;;		 -> PWD(40), DWD(28), 
;;  wdt1            1   31[COMRAM] const unsigned char 
;;  wdt0            1   32[COMRAM] const unsigned char 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PrintErr
;;		_PrintErrCs
;;		_PrintErrTm
;;		_PrintNstCW
;;		_PrintNstCO
;;		_PrintL3
;;		_PrintOFF
;;		_PrintCS
;;		_PrintCW
;;		_PrintCO
;;		_TestScr
;;		_EndTestScr
;; This function uses a non-reentrant model
;;
psect	text121,class=CODE,space=0,reloc=2
global __ptext121
__ptext121:
psect	text121
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	643
	global	__size_of_SetData
	__size_of_SetData	equ	__end_of_SetData-_SetData
	
_SetData:; BSR set to: 1

	opt	stack 24
	line	644
	
l40718:; BSR set to: 2

;wsw.c: 644: (*wData).Dt.Data1=wdt1;
	lfsr	2,02h
	movf	((c:SetData@wData)),c,w
	addwf	fsr2l
	movf	((c:SetData@wData+1)),c,w
	addwfc	fsr2h
	movff	(c:SetData@wdt1),indf2

	line	645
;wsw.c: 645: (*wData).Dt.Data0=wdt0;
	lfsr	2,03h
	movf	((c:SetData@wData)),c,w
	addwf	fsr2l
	movf	((c:SetData@wData+1)),c,w
	addwfc	fsr2h
	movff	(c:SetData@wdt0),indf2

	line	646
	
l4572:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_SetData
	__end_of_SetData:
	signat	_SetData,12408
	global	_SetStatus

;; *************** function _SetStatus *****************
;; Defined at:
;;		line 652 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;  wData           2   29[COMRAM] PTR struct .
;;		 -> PWD(40), DWD(28), 
;;  wst             2   31[COMRAM] const unsigned int 
;;  mask            2   33[COMRAM] const unsigned int 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PrintErr
;;		_PrintErrCs
;;		_PrintErrTm
;;		_PrintNstCW
;;		_PrintNstCO
;;		_PrintL3
;;		_PrintOFF
;;		_EndOFF
;;		_PrintCS
;;		_EndCS
;;		_PrintCW
;;		_EndCW
;;		_PrintCO
;;		_TestScr
;;		_EndTestScr
;;		_InitWsw
;; This function uses a non-reentrant model
;;
psect	text122,class=CODE,space=0,reloc=2
global __ptext122
__ptext122:
psect	text122
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	652
	global	__size_of_SetStatus
	__size_of_SetStatus	equ	__end_of_SetStatus-_SetStatus
	
_SetStatus:; BSR set to: 2

	opt	stack 24
	line	653
	
l40720:; BSR set to: 2

;wsw.c: 653: if (mask&0b1000000000000000)(*wData).St.focus=(wst&0b1000000000000000)?1:0;
	
	btfss	((c:SetStatus@mask+1)),c,(15)&7
	goto	u80721
	goto	u80720
u80721:
	goto	l40724
u80720:
	
l40722:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst+1)),c,(15)&7
	goto	u80731
	goto	u80730
u80731:
	movlw	1
	goto	u80736
u80730:
	movlw	0
u80736:
	movwf	(??_SetStatus+0+0)&0ffh,c
	movff	(c:SetStatus@wData),fsr2l
	movff	(c:SetStatus@wData+1),fsr2h
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	654
	
l40724:; BSR set to: 2

;wsw.c: 654: if (mask&0b0100000000000000)(*wData).St.dec=(wst&0b0100000000000000)?1:0;
	
	btfss	((c:SetStatus@mask+1)),c,(14)&7
	goto	u80741
	goto	u80740
u80741:
	goto	l40728
u80740:
	
l40726:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst+1)),c,(14)&7
	goto	u80751
	goto	u80750
u80751:
	movlw	1
	goto	u80756
u80750:
	movlw	0
u80756:
	movwf	(??_SetStatus+0+0)&0ffh,c
	movff	(c:SetStatus@wData),fsr2l
	movff	(c:SetStatus@wData+1),fsr2h
	rlncf	((??_SetStatus+0+0)),c
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	655
	
l40728:; BSR set to: 2

;wsw.c: 655: if (mask&0b0010000000000000)(*wData).St.hex=(wst&0b0010000000000000)?1:0;
	
	btfss	((c:SetStatus@mask+1)),c,(13)&7
	goto	u80761
	goto	u80760
u80761:
	goto	l40732
u80760:
	
l40730:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst+1)),c,(13)&7
	goto	u80771
	goto	u80770
u80771:
	movlw	1
	goto	u80776
u80770:
	movlw	0
u80776:
	movwf	(??_SetStatus+0+0)&0ffh,c
	movff	(c:SetStatus@wData),fsr2l
	movff	(c:SetStatus@wData+1),fsr2h
	rlncf	((??_SetStatus+0+0)),c
	rlncf	((??_SetStatus+0+0)),c
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not (((1<<1)-1)<<2)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	656
	
l40732:; BSR set to: 2

;wsw.c: 656: if (mask&0b0001000000000000)(*wData).St.autoOFF=(wst&0b0001000000000000)?1:0;
	
	btfss	((c:SetStatus@mask+1)),c,(12)&7
	goto	u80781
	goto	u80780
u80781:
	goto	l40736
u80780:
	
l40734:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst+1)),c,(12)&7
	goto	u80791
	goto	u80790
u80791:
	movlw	1
	goto	u80796
u80790:
	movlw	0
u80796:
	movwf	(??_SetStatus+0+0)&0ffh,c
	movff	(c:SetStatus@wData),fsr2l
	movff	(c:SetStatus@wData+1),fsr2h
	rlncf	((??_SetStatus+0+0)),c
	rlncf	((??_SetStatus+0+0)),c
	rlncf	((??_SetStatus+0+0)),c
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not (((1<<1)-1)<<3)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	657
	
l40736:; BSR set to: 2

;wsw.c: 657: if (mask&0b0000100000000000)(*wData).St.kropka0=(wst&0b0000100000000000)?1:0;
	
	btfss	((c:SetStatus@mask+1)),c,(11)&7
	goto	u80801
	goto	u80800
u80801:
	goto	l40740
u80800:
	
l40738:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst+1)),c,(11)&7
	goto	u80811
	goto	u80810
u80811:
	movlw	1
	goto	u80816
u80810:
	movlw	0
u80816:
	movwf	(??_SetStatus+0+0)&0ffh,c
	movff	(c:SetStatus@wData),fsr2l
	movff	(c:SetStatus@wData+1),fsr2h
	swapf	((??_SetStatus+0+0)),c
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not (((1<<1)-1)<<4)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	658
	
l40740:; BSR set to: 2

;wsw.c: 658: if (mask&0b0000010000000000)(*wData).St.kropka1=(wst&0b0000010000000000)?1:0;
	
	btfss	((c:SetStatus@mask+1)),c,(10)&7
	goto	u80821
	goto	u80820
u80821:
	goto	l40744
u80820:
	
l40742:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst+1)),c,(10)&7
	goto	u80831
	goto	u80830
u80831:
	movlw	1
	goto	u80836
u80830:
	movlw	0
u80836:
	movwf	(??_SetStatus+0+0)&0ffh,c
	movff	(c:SetStatus@wData),fsr2l
	movff	(c:SetStatus@wData+1),fsr2h
	swapf	((??_SetStatus+0+0)),c
	rlncf	((??_SetStatus+0+0)),c
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not (((1<<1)-1)<<5)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	659
	
l40744:; BSR set to: 2

;wsw.c: 659: if (mask&0b0000001000000000)(*wData).St.wygas0=(wst&0b0000001000000000)?1:0;
	
	btfss	((c:SetStatus@mask+1)),c,(9)&7
	goto	u80841
	goto	u80840
u80841:
	goto	l40748
u80840:
	
l40746:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst+1)),c,(9)&7
	goto	u80851
	goto	u80850
u80851:
	movlw	1
	goto	u80856
u80850:
	movlw	0
u80856:
	movwf	(??_SetStatus+0+0)&0ffh,c
	movff	(c:SetStatus@wData),fsr2l
	movff	(c:SetStatus@wData+1),fsr2h
	swapf	((??_SetStatus+0+0)),c
	rlncf	((??_SetStatus+0+0)),c
	rlncf	((??_SetStatus+0+0)),c
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not (((1<<1)-1)<<6)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	660
	
l40748:; BSR set to: 2

;wsw.c: 660: if (mask&0b0000000100000000)(*wData).St.wygas1=(wst&0b0000000100000000)?1:0;
	
	btfss	((c:SetStatus@mask+1)),c,(8)&7
	goto	u80861
	goto	u80860
u80861:
	goto	l40752
u80860:
	
l40750:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst+1)),c,(8)&7
	goto	u80871
	goto	u80870
u80871:
	movlw	1
	goto	u80876
u80870:
	movlw	0
u80876:
	movwf	(??_SetStatus+0+0)&0ffh,c
	movff	(c:SetStatus@wData),fsr2l
	movff	(c:SetStatus@wData+1),fsr2h
	rrcf	((??_SetStatus+0+0)),c
	rrcf	((??_SetStatus+0+0)),c
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not (((1<<1)-1)<<7)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	661
	
l40752:; BSR set to: 2

;wsw.c: 661: if (mask&0b0000000010000000)(*wData).St.led0=(wst&0b0000000010000000)?1:0;
	
	btfss	((c:SetStatus@mask)),c,(7)&7
	goto	u80881
	goto	u80880
u80881:
	goto	l40756
u80880:
	
l40754:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst)),c,(7)&7
	goto	u80891
	goto	u80890
u80891:
	movlw	1
	goto	u80896
u80890:
	movlw	0
u80896:
	movwf	(??_SetStatus+0+0)&0ffh,c
	lfsr	2,01h
	movf	((c:SetStatus@wData)),c,w
	addwf	fsr2l
	movf	((c:SetStatus@wData+1)),c,w
	addwfc	fsr2h
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	662
	
l40756:; BSR set to: 2

;wsw.c: 662: if (mask&0b0000000001000000)(*wData).St.led1=(wst&0b0000000001000000)?1:0;
	
	btfss	((c:SetStatus@mask)),c,(6)&7
	goto	u80901
	goto	u80900
u80901:
	goto	l40760
u80900:
	
l40758:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst)),c,(6)&7
	goto	u80911
	goto	u80910
u80911:
	movlw	1
	goto	u80916
u80910:
	movlw	0
u80916:
	movwf	(??_SetStatus+0+0)&0ffh,c
	lfsr	2,01h
	movf	((c:SetStatus@wData)),c,w
	addwf	fsr2l
	movf	((c:SetStatus@wData+1)),c,w
	addwfc	fsr2h
	rlncf	((??_SetStatus+0+0)),c
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	663
	
l40760:; BSR set to: 2

;wsw.c: 663: if (mask&0b0000000000100000)(*wData).St.sdiode=(wst&0b0000000000100000)?1:0;
	
	btfss	((c:SetStatus@mask)),c,(5)&7
	goto	u80921
	goto	u80920
u80921:
	goto	l40764
u80920:
	
l40762:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst)),c,(5)&7
	goto	u80931
	goto	u80930
u80931:
	movlw	1
	goto	u80936
u80930:
	movlw	0
u80936:
	movwf	(??_SetStatus+0+0)&0ffh,c
	lfsr	2,01h
	movf	((c:SetStatus@wData)),c,w
	addwf	fsr2l
	movf	((c:SetStatus@wData+1)),c,w
	addwfc	fsr2h
	rlncf	((??_SetStatus+0+0)),c
	rlncf	((??_SetStatus+0+0)),c
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not (((1<<1)-1)<<2)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	664
	
l40764:; BSR set to: 2

;wsw.c: 664: if (mask&0b0000000000010000)(*wData).St.rdiode=(wst&0b0000000000010000)?1:0;
	
	btfss	((c:SetStatus@mask)),c,(4)&7
	goto	u80941
	goto	u80940
u80941:
	goto	l40768
u80940:
	
l40766:; BSR set to: 2

	
	btfsc	((c:SetStatus@wst)),c,(4)&7
	goto	u80951
	goto	u80950
u80951:
	movlw	1
	goto	u80956
u80950:
	movlw	0
u80956:
	movwf	(??_SetStatus+0+0)&0ffh,c
	lfsr	2,01h
	movf	((c:SetStatus@wData)),c,w
	addwf	fsr2l
	movf	((c:SetStatus@wData+1)),c,w
	addwfc	fsr2h
	rlncf	((??_SetStatus+0+0)),c
	rlncf	((??_SetStatus+0+0)),c
	rlncf	((??_SetStatus+0+0)),c
	movf	(indf2),c,w
	xorwf	((??_SetStatus+0+0)),c,w
	andlw	not (((1<<1)-1)<<3)
	xorwf	((??_SetStatus+0+0)),c,w
	movwf	(indf2),c
	line	666
	
l40768:; BSR set to: 2

;wsw.c: 666: if (mask&0b0000000000001111)
	movf	((c:SetStatus@mask)),c,w
	andlw	low(0Fh)
	btfsc	status,2
	goto	u80961
	goto	u80960
u80961:
	goto	l4591
u80960:
	line	667
	
l40770:; BSR set to: 2

;wsw.c: 667: if(((*wData).St.sdiode||(*wData).St.rdiode)&&(wst&0b0000000000001111))
	lfsr	2,01h
	movf	((c:SetStatus@wData)),c,w
	addwf	fsr2l
	movf	((c:SetStatus@wData+1)),c,w
	addwfc	fsr2h
	movf	indf2,w
	movwf	(??_SetStatus+0+0)&0ffh,c
	
	btfsc	((??_SetStatus+0+0)),c,2
	goto	u80971
	goto	u80970
u80971:
	goto	l40774
u80970:
	
l40772:; BSR set to: 2

	lfsr	2,01h
	movf	((c:SetStatus@wData)),c,w
	addwf	fsr2l
	movf	((c:SetStatus@wData+1)),c,w
	addwfc	fsr2h
	movf	indf2,w
	movwf	(??_SetStatus+0+0)&0ffh,c
	
	btfss	((??_SetStatus+0+0)),c,3
	goto	u80981
	goto	u80980
u80981:
	goto	l4591
u80980:
	
l40774:; BSR set to: 2

	movf	((c:SetStatus@wst)),c,w
	andlw	low(0Fh)
	btfsc	status,2
	goto	u80991
	goto	u80990
u80991:
	goto	l4591
u80990:
	line	669
	
l40776:; BSR set to: 2

;wsw.c: 668: {
;wsw.c: 669: (*wData).St.wbdid=(wst&0b0000000000001111);
	movff	(c:SetStatus@wst),??_SetStatus+0+0
	movlw	0Fh
	andwf	(??_SetStatus+0+0),c
	lfsr	2,01h
	movf	((c:SetStatus@wData)),c,w
	addwf	fsr2l
	movf	((c:SetStatus@wData+1)),c,w
	addwfc	fsr2h
	swapf	(??_SetStatus+0+0),c
	movf	(indf2),c,w
	xorwf	(??_SetStatus+0+0),c,w
	andlw	not (((1<<4)-1)<<4)
	xorwf	(??_SetStatus+0+0),c,w
	movwf	(indf2),c
	line	671
	
l4591:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_SetStatus
	__end_of_SetStatus:
	signat	_SetStatus,12408
	global	_SetPoz

;; *************** function _SetPoz *****************
;; Defined at:
;;		line 683 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;  nrkol           1    wreg     const unsigned char 
;;  nrpoz           1   29[COMRAM] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  nrkol           1   34[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
;; Tracked objects:
;;		On entry : C/2
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PrintErr
;;		_PrintErrCs
;;		_PrintErrTm
;;		_PrintL3
;; This function uses a non-reentrant model
;;
psect	text123,class=CODE,space=0,reloc=2
global __ptext123
__ptext123:
psect	text123
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	683
	global	__size_of_SetPoz
	__size_of_SetPoz	equ	__end_of_SetPoz-_SetPoz
	
_SetPoz:; BSR set to: 2

	opt	stack 24
;SetPoz@nrkol stored from wreg
	movff	wreg,(c:SetPoz@nrkol)
	line	684
	
l40778:
;wsw.c: 684: if ((nrkol>=4)||(nrpoz>=Klj[nrkol].nPzc)) asm("RESET");
	movlw	(04h)&0ffh
	cpfslt	((c:SetPoz@nrkol)),c
	goto	u81001
	goto	u81000
u81001:
	goto	l4602
u81000:
	
l40780:
	movf	((c:SetPoz@nrkol)),c,w
	mullw	02h
	movff	prodl,??_SetPoz+0+0
	movlw	01h
	addwf	(??_SetPoz+0+0),c
	movf	(??_SetPoz+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_SetPoz+1+0)&0ffh,c
	movff	(??_SetPoz+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	subwf	((c:SetPoz@nrpoz)),c,w
	btfss	status,0
	goto	u81011
	goto	u81010
u81011:
	goto	l40782
u81010:
	
l4602:
# 684 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
RESET ;# 
psect	text123
	line	685
	
l40782:
;wsw.c: 685: (*Klj[nrkol].KL).KFc[nrpoz].focus=1;
	movf	((c:SetPoz@nrkol)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_SetPoz+0+0)&0ffh,c
	movff	(??_SetPoz+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_SetPoz+1+0
	movlw	03h
	addwf	(??_SetPoz+1+0),c
	movff	??_SetPoz+1+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_SetPoz+2+0
	tblrd	*+
	
	movff	tablat,??_SetPoz+2+0+1
	movf	((c:SetPoz@nrpoz)),c,w
	addwf	(??_SetPoz+2+0),c,w
	movwf	c:fsr2l
	movlw	0
	addwfc	(??_SetPoz+2+1),c,w
	movwf	1+c:fsr2l
	movlw	(01h & ((1<<1)-1))<<0
	iorwf	(indf2)&0ffh
	line	686
	
l40784:
;wsw.c: 686: KInd[nrkol].reset=0;
	movlb	1	; () banked
	movlw	low(_KInd)
	addwf	((c:SetPoz@nrkol)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movlw	((0 & ((1<<1)-1))<<1)|not (((1<<1)-1)<<1)
	andwf	(indf2)&0ffh
	line	687
	
l4603:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_SetPoz
	__end_of_SetPoz:
	signat	_SetPoz,8312
	global	_ResetKol

;; *************** function _ResetKol *****************
;; Defined at:
;;		line 696 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;  nrkol           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  nrkol           1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_EndErr
;;		_EndNst
;;		_EndL3
;; This function uses a non-reentrant model
;;
psect	text124,class=CODE,space=0,reloc=2
global __ptext124
__ptext124:
psect	text124
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	696
	global	__size_of_ResetKol
	__size_of_ResetKol	equ	__end_of_ResetKol-_ResetKol
	
_ResetKol:; BSR set to: 1

	opt	stack 22
;ResetKol@nrkol stored from wreg
	movff	wreg,(c:ResetKol@nrkol)
	line	697
	
l40786:; BSR set to: 1

;wsw.c: 697: if (nrkol>=4) asm("RESET");
	movlw	(04h-1)
	cpfsgt	((c:ResetKol@nrkol)),c
	goto	u81021
	goto	u81020
u81021:
	goto	l40790
u81020:
	
l40788:; BSR set to: 1

# 697 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
RESET ;# 
psect	text124
	line	698
	
l40790:
;wsw.c: 698: KInd[nrkol].reset=1;
	movlb	1	; () banked
	movlw	low(_KInd)
	addwf	((c:ResetKol@nrkol)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movlw	(01h & ((1<<1)-1))<<1
	iorwf	(indf2)&0ffh
	line	699
	
l4613:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_ResetKol
	__end_of_ResetKol:
	signat	_ResetKol,4216
	global	_RestartKol

;; *************** function _RestartKol *****************
;; Defined at:
;;		line 703 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;  nrkol           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  nrkol           1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : C/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PrintNstCW
;;		_PrintNstCO
;;		_TrybPracy
;; This function uses a non-reentrant model
;;
psect	text125,class=CODE,space=0,reloc=2
global __ptext125
__ptext125:
psect	text125
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	703
	global	__size_of_RestartKol
	__size_of_RestartKol	equ	__end_of_RestartKol-_RestartKol
	
_RestartKol:; BSR set to: 1

	opt	stack 23
;RestartKol@nrkol stored from wreg
	movff	wreg,(c:RestartKol@nrkol)
	line	704
	
l40792:
;wsw.c: 704: if (nrkol>=4) asm("RESET");
	movlw	(04h-1)
	cpfsgt	((c:RestartKol@nrkol)),c
	goto	u81031
	goto	u81030
u81031:
	goto	l40796
u81030:
	
l40794:
# 704 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
RESET ;# 
psect	text125
	line	705
	
l40796:
;wsw.c: 705: KInd[nrkol].restart=1;
	movlb	1	; () banked
	movlw	low(_KInd)
	addwf	((c:RestartKol@nrkol)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movlw	(01h & ((1<<1)-1))<<0
	iorwf	(indf2)&0ffh
	line	706
	
l4617:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RestartKol
	__end_of_RestartKol:
	signat	_RestartKol,4216
	global	_Swsdid

;; *************** function _Swsdid *****************
;; Defined at:
;;		line 615 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;  dtd             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  dtd             1   29[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : C/2
;;		On exit  : C/2
;;		Unchanged: FFFFFFF3/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_SetDiode
;; This function uses a non-reentrant model
;;
psect	text126,class=CODE,space=0,reloc=2
global __ptext126
__ptext126:
psect	text126
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	615
	global	__size_of_Swsdid
	__size_of_Swsdid	equ	__end_of_Swsdid-_Swsdid
	
_Swsdid:; BSR set to: 1

	opt	stack 24
;Swsdid@dtd stored from wreg
	movff	wreg,(c:Swsdid@dtd)
	line	616
	
l40798:
;wsw.c: 616: dtd=dtd&0x0f;
	movlw	(0Fh)&0ffh
	andwf	((c:Swsdid@dtd)),c
	line	617
;wsw.c: 617: wsdid|=dtd;
	movf	((c:Swsdid@dtd)),c,w
	iorwf	((c:_wsdid)),c
	line	618
	
l4560:
	return
	opt stack 0
GLOBAL	__end_of_Swsdid
	__end_of_Swsdid:
	signat	_Swsdid,4216
	global	_Rwsdid

;; *************** function _Rwsdid *****************
;; Defined at:
;;		line 621 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;  dtd             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  dtd             1   29[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : C/2
;;		On exit  : C/2
;;		Unchanged: FFFFFFF3/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_SetDiode
;; This function uses a non-reentrant model
;;
psect	text127,class=CODE,space=0,reloc=2
global __ptext127
__ptext127:
psect	text127
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	621
	global	__size_of_Rwsdid
	__size_of_Rwsdid	equ	__end_of_Rwsdid-_Rwsdid
	
_Rwsdid:
	opt	stack 24
;Rwsdid@dtd stored from wreg
	movff	wreg,(c:Rwsdid@dtd)
	line	622
	
l40800:
;wsw.c: 622: dtd=dtd&0x0f;
	movlw	(0Fh)&0ffh
	andwf	((c:Rwsdid@dtd)),c
	line	623
;wsw.c: 623: wsdid&=~(dtd);
	movf	((c:Rwsdid@dtd)),c,w
	xorlw	0ffh
	andwf	((c:_wsdid)),c
	line	624
	
l4563:
	return
	opt stack 0
GLOBAL	__end_of_Rwsdid
	__end_of_Rwsdid:
	signat	_Rwsdid,4216
	global	_ModParam

;; *************** function _ModParam *****************
;; Defined at:
;;		line 66 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
;; Parameters:    Size  Location     Type
;;  tpk             1    wreg     const unsigned char 
;;  tpg             1   31[COMRAM] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  tpk             1   33[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text128,class=CODE,space=0,reloc=2
global __ptext128
__ptext128:
psect	text128
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
	line	66
	global	__size_of_ModParam
	__size_of_ModParam	equ	__end_of_ModParam-_ModParam
	
_ModParam:
	opt	stack 25
;ModParam@tpk stored from wreg
	movff	wreg,(c:ModParam@tpk)
	line	67
	
l33640:; BSR set to: 1

;pwm.c: 67: PWM.tpGZ=(tpg!=0);
	movlw	(0)&0ffh
	clrf	prodl
	cpfseq	((c:ModParam@tpg)),c
	incf	prodl
	movff	prodl,??_ModParam+0+0
	rlncf	(??_ModParam+0+0),c
	rlncf	(??_ModParam+0+0),c
	movlb	0	; () banked
	movf	((_PWM))&0ffh,w	;volatile
	xorwf	(??_ModParam+0+0),c,w
	andlw	not (((1<<1)-1)<<2)
	xorwf	(??_ModParam+0+0),c,w
	movwf	((_PWM))&0ffh	;volatile
	line	70
	
l33642:; BSR set to: 0

;pwm.c: 70: if(!PWM.tpGZ)
	
	btfsc	((_PWM))&0ffh,2	;volatile
	goto	u62961
	goto	u62960
u62961:
	goto	l33672
u62960:
	goto	l33658
	line	74
;pwm.c: 73: {
;pwm.c: 74: case 0:
	
l2564:; BSR set to: 0

	line	76
;pwm.c: 75: {
;pwm.c: 76: PWM._ENOSC=(1!=0);
	bsf	((_PWM))&0ffh,1	;volatile
	line	77
	
l33646:; BSR set to: 0

;pwm.c: 77: PWM.MDMOD=0x30;
	movlw	low(030h)
	movwf	(0+(_PWM+09h))&0ffh	;volatile
	line	78
;pwm.c: 78: PWM.MGMOD=0x9F;
	movlw	low(09Fh)
	movwf	(0+(_PWM+0Ah))&0ffh	;volatile
	line	79
;pwm.c: 79: PWM.MAXOSC=20;
	movlw	low(014h)
	movwf	(0+(_PWM+0Bh))&0ffh	;volatile
	line	80
;pwm.c: 80: PWM.MINOSC=5;
	movlw	low(05h)
	movwf	(0+(_PWM+0Ch))&0ffh	;volatile
	line	81
;pwm.c: 81: PWM.MAD_MOD=0x14;
	movlw	low(014h)
	movwf	(0+(_PWM+0Dh))&0ffh	;volatile
	line	82
;pwm.c: 82: PWM.MAG_MOD=0xF7;
	movlw	low(0F7h)
	movwf	(0+(_PWM+0Eh))&0ffh	;volatile
	line	83
;pwm.c: 83: PWM.GWMSTART=99;
	movlw	low(063h)
	movwf	(0+(_PWM+0Fh))&0ffh	;volatile
	line	84
;pwm.c: 84: PWM.MDSTART=0x30;
	movlw	low(030h)
	movwf	(0+(_PWM+010h))&0ffh	;volatile
	line	85
;pwm.c: 85: PWM.MGSTART=0x9F+10;
	movlw	low(0A9h)
	movwf	(0+(_PWM+011h))&0ffh	;volatile
	line	86
;pwm.c: 86: PWM.GWMMAXCO=99;
	movlw	low(063h)
	movwf	(0+(_PWM+012h))&0ffh	;volatile
	line	87
;pwm.c: 87: PWM.MDMAXCO=0x30;
	movlw	low(030h)
	movwf	(0+(_PWM+013h))&0ffh	;volatile
	line	88
;pwm.c: 88: PWM.MGMAXCO=0x9F+10;
	movlw	low(0A9h)
	movwf	(0+(_PWM+014h))&0ffh	;volatile
	line	89
;pwm.c: 89: PWM.GWMMAXCW=99;
	movlw	low(063h)
	movwf	(0+(_PWM+015h))&0ffh	;volatile
	line	90
;pwm.c: 90: PWM.MDMAXCW=0x30;
	movlw	low(030h)
	movwf	(0+(_PWM+016h))&0ffh	;volatile
	line	91
;pwm.c: 91: PWM.MGMAXCW=0x9F+10;
	movlw	low(0A9h)
	movwf	(0+(_PWM+017h))&0ffh	;volatile
	line	92
;pwm.c: 92: PWM.FIRSTPB=0x75;
	movlw	low(075h)
	movwf	(0+(_PWM+018h))&0ffh	;volatile
	line	93
;pwm.c: 93: PWM.PROP1=0x9F-1*((0x9F-0x30)/7);
	movlw	low(090h)
	movwf	(0+(_PWM+019h))&0ffh	;volatile
	line	94
;pwm.c: 94: PWM.PROP2=0x9F-2*((0x9F-0x30)/7);
	movlw	low(081h)
	movwf	(0+(_PWM+01Ah))&0ffh	;volatile
	line	95
;pwm.c: 95: PWM.PROP3=0x9F-3*((0x9F-0x30)/7);
	movlw	low(072h)
	movwf	(0+(_PWM+01Bh))&0ffh	;volatile
	line	96
;pwm.c: 96: break;
	goto	l2578
	line	98
;pwm.c: 97: }
;pwm.c: 98: case 1:
	
l2566:; BSR set to: 0

	line	100
;pwm.c: 99: {
;pwm.c: 100: PWM._ENOSC=(1!=0);
	bsf	((_PWM))&0ffh,1	;volatile
	line	101
	
l33648:; BSR set to: 0

;pwm.c: 101: PWM.MDMOD=0x20;
	movlw	low(020h)
	movwf	(0+(_PWM+09h))&0ffh	;volatile
	line	102
;pwm.c: 102: PWM.MGMOD=0x9F;
	movlw	low(09Fh)
	movwf	(0+(_PWM+0Ah))&0ffh	;volatile
	line	103
;pwm.c: 103: PWM.MAXOSC=30;
	movlw	low(01Eh)
	movwf	(0+(_PWM+0Bh))&0ffh	;volatile
	line	104
;pwm.c: 104: PWM.MINOSC=5;
	movlw	low(05h)
	movwf	(0+(_PWM+0Ch))&0ffh	;volatile
	line	105
;pwm.c: 105: PWM.MAD_MOD=0x14;
	movlw	low(014h)
	movwf	(0+(_PWM+0Dh))&0ffh	;volatile
	line	106
;pwm.c: 106: PWM.MAG_MOD=0xF7;
	movlw	low(0F7h)
	movwf	(0+(_PWM+0Eh))&0ffh	;volatile
	line	107
;pwm.c: 107: PWM.GWMSTART=99;
	movlw	low(063h)
	movwf	(0+(_PWM+0Fh))&0ffh	;volatile
	line	108
;pwm.c: 108: PWM.MDSTART=0x20;
	movlw	low(020h)
	movwf	(0+(_PWM+010h))&0ffh	;volatile
	line	109
;pwm.c: 109: PWM.MGSTART=0x9F+10;
	movlw	low(0A9h)
	movwf	(0+(_PWM+011h))&0ffh	;volatile
	line	110
;pwm.c: 110: PWM.GWMMAXCO=99;
	movlw	low(063h)
	movwf	(0+(_PWM+012h))&0ffh	;volatile
	line	111
;pwm.c: 111: PWM.MDMAXCO=0x20;
	movlw	low(020h)
	movwf	(0+(_PWM+013h))&0ffh	;volatile
	line	112
;pwm.c: 112: PWM.MGMAXCO=0x9F+10;
	movlw	low(0A9h)
	movwf	(0+(_PWM+014h))&0ffh	;volatile
	line	113
;pwm.c: 113: PWM.GWMMAXCW=99;
	movlw	low(063h)
	movwf	(0+(_PWM+015h))&0ffh	;volatile
	line	114
;pwm.c: 114: PWM.MDMAXCW=0x20;
	movlw	low(020h)
	movwf	(0+(_PWM+016h))&0ffh	;volatile
	line	115
;pwm.c: 115: PWM.MGMAXCW=0x9F+10;
	movlw	low(0A9h)
	movwf	(0+(_PWM+017h))&0ffh	;volatile
	line	116
;pwm.c: 116: PWM.FIRSTPB=0x75;
	movlw	low(075h)
	movwf	(0+(_PWM+018h))&0ffh	;volatile
	line	117
;pwm.c: 117: PWM.PROP1=0x9F-1*((0x9F-0x20)/7);
	movlw	low(08Dh)
	movwf	(0+(_PWM+019h))&0ffh	;volatile
	line	118
;pwm.c: 118: PWM.PROP2=0x9F-2*((0x9F-0x20)/7);
	movlw	low(07Bh)
	movwf	(0+(_PWM+01Ah))&0ffh	;volatile
	line	119
;pwm.c: 119: PWM.PROP3=0x9F-3*((0x9F-0x20)/7);
	movlw	low(069h)
	movwf	(0+(_PWM+01Bh))&0ffh	;volatile
	line	120
;pwm.c: 120: break;
	goto	l2578
	line	149
;pwm.c: 121: }
;pwm.c: 149: case 2:
	
l2567:; BSR set to: 0

	line	151
;pwm.c: 150: {
;pwm.c: 151: PWM._ENOSC=(1!=0);
	bsf	((_PWM))&0ffh,1	;volatile
	line	152
	
l33650:; BSR set to: 0

;pwm.c: 152: PWM.MDMOD=0x30;
	movlw	low(030h)
	movwf	(0+(_PWM+09h))&0ffh	;volatile
	line	153
;pwm.c: 153: PWM.MGMOD=0xA0;
	movlw	low(0A0h)
	movwf	(0+(_PWM+0Ah))&0ffh	;volatile
	line	154
;pwm.c: 154: PWM.MAXOSC=25;
	movlw	low(019h)
	movwf	(0+(_PWM+0Bh))&0ffh	;volatile
	line	155
;pwm.c: 155: PWM.MINOSC=5;
	movlw	low(05h)
	movwf	(0+(_PWM+0Ch))&0ffh	;volatile
	line	156
;pwm.c: 156: PWM.MAD_MOD=0x14;
	movlw	low(014h)
	movwf	(0+(_PWM+0Dh))&0ffh	;volatile
	line	157
;pwm.c: 157: PWM.MAG_MOD=0xF7;
	movlw	low(0F7h)
	movwf	(0+(_PWM+0Eh))&0ffh	;volatile
	line	158
;pwm.c: 158: PWM.GWMSTART=99;
	movlw	low(063h)
	movwf	(0+(_PWM+0Fh))&0ffh	;volatile
	line	159
;pwm.c: 159: PWM.MDSTART=0x30;
	movlw	low(030h)
	movwf	(0+(_PWM+010h))&0ffh	;volatile
	line	160
;pwm.c: 160: PWM.MGSTART=0xA0+10;
	movlw	low(0AAh)
	movwf	(0+(_PWM+011h))&0ffh	;volatile
	line	161
;pwm.c: 161: PWM.GWMMAXCO=99;
	movlw	low(063h)
	movwf	(0+(_PWM+012h))&0ffh	;volatile
	line	162
;pwm.c: 162: PWM.MDMAXCO=0x30;
	movlw	low(030h)
	movwf	(0+(_PWM+013h))&0ffh	;volatile
	line	163
;pwm.c: 163: PWM.MGMAXCO=0xA0+10;
	movlw	low(0AAh)
	movwf	(0+(_PWM+014h))&0ffh	;volatile
	line	164
;pwm.c: 164: PWM.GWMMAXCW=99;
	movlw	low(063h)
	movwf	(0+(_PWM+015h))&0ffh	;volatile
	line	165
;pwm.c: 165: PWM.MDMAXCW=0x30;
	movlw	low(030h)
	movwf	(0+(_PWM+016h))&0ffh	;volatile
	line	166
;pwm.c: 166: PWM.MGMAXCW=0xA0+10;
	movlw	low(0AAh)
	movwf	(0+(_PWM+017h))&0ffh	;volatile
	line	167
;pwm.c: 167: PWM.FIRSTPB=0x6E;
	movlw	low(06Eh)
	movwf	(0+(_PWM+018h))&0ffh	;volatile
	line	168
;pwm.c: 168: PWM.PROP1=0xA0-1*((0xA0-0x30)/7);
	movlw	low(090h)
	movwf	(0+(_PWM+019h))&0ffh	;volatile
	line	169
;pwm.c: 169: PWM.PROP2=0xA0-2*((0xA0-0x30)/7);
	movlw	low(080h)
	movwf	(0+(_PWM+01Ah))&0ffh	;volatile
	line	170
;pwm.c: 170: PWM.PROP3=0xA0-3*((0xA0-0x30)/7);
	movlw	low(070h)
	movwf	(0+(_PWM+01Bh))&0ffh	;volatile
	line	171
;pwm.c: 171: break;
	goto	l2578
	line	173
;pwm.c: 172: }
;pwm.c: 173: case 3:
	
l2568:; BSR set to: 0

	line	175
;pwm.c: 174: {
;pwm.c: 175: PWM._ENOSC=(1!=0);
	bsf	((_PWM))&0ffh,1	;volatile
	line	176
	
l33652:; BSR set to: 0

;pwm.c: 176: PWM.MDMOD=0x2D;
	movlw	low(02Dh)
	movwf	(0+(_PWM+09h))&0ffh	;volatile
	line	177
;pwm.c: 177: PWM.MGMOD=0x9F;
	movlw	low(09Fh)
	movwf	(0+(_PWM+0Ah))&0ffh	;volatile
	line	178
;pwm.c: 178: PWM.MAXOSC=15;
	movlw	low(0Fh)
	movwf	(0+(_PWM+0Bh))&0ffh	;volatile
	line	179
;pwm.c: 179: PWM.MINOSC=5;
	movlw	low(05h)
	movwf	(0+(_PWM+0Ch))&0ffh	;volatile
	line	180
;pwm.c: 180: PWM.MAD_MOD=0x14;
	movlw	low(014h)
	movwf	(0+(_PWM+0Dh))&0ffh	;volatile
	line	181
;pwm.c: 181: PWM.MAG_MOD=0xF7;
	movlw	low(0F7h)
	movwf	(0+(_PWM+0Eh))&0ffh	;volatile
	line	182
;pwm.c: 182: PWM.GWMSTART=99;
	movlw	low(063h)
	movwf	(0+(_PWM+0Fh))&0ffh	;volatile
	line	183
;pwm.c: 183: PWM.MDSTART=0x2D;
	movlw	low(02Dh)
	movwf	(0+(_PWM+010h))&0ffh	;volatile
	line	184
;pwm.c: 184: PWM.MGSTART=0x9F+10;
	movlw	low(0A9h)
	movwf	(0+(_PWM+011h))&0ffh	;volatile
	line	185
;pwm.c: 185: PWM.GWMMAXCO=99;
	movlw	low(063h)
	movwf	(0+(_PWM+012h))&0ffh	;volatile
	line	186
;pwm.c: 186: PWM.MDMAXCO=0x2D;
	movlw	low(02Dh)
	movwf	(0+(_PWM+013h))&0ffh	;volatile
	line	187
;pwm.c: 187: PWM.MGMAXCO=0x9F+10;
	movlw	low(0A9h)
	movwf	(0+(_PWM+014h))&0ffh	;volatile
	line	188
;pwm.c: 188: PWM.GWMMAXCW=99;
	movlw	low(063h)
	movwf	(0+(_PWM+015h))&0ffh	;volatile
	line	189
;pwm.c: 189: PWM.MDMAXCW=0x2D;
	movlw	low(02Dh)
	movwf	(0+(_PWM+016h))&0ffh	;volatile
	line	190
;pwm.c: 190: PWM.MGMAXCW=0x9F+10;
	movlw	low(0A9h)
	movwf	(0+(_PWM+017h))&0ffh	;volatile
	line	191
;pwm.c: 191: PWM.FIRSTPB=0x6E;
	movlw	low(06Eh)
	movwf	(0+(_PWM+018h))&0ffh	;volatile
	line	192
;pwm.c: 192: PWM.PROP1=0x9F-1*((0x9F-0x2D)/7);
	movlw	low(08Fh)
	movwf	(0+(_PWM+019h))&0ffh	;volatile
	line	193
;pwm.c: 193: PWM.PROP2=0x9F-2*((0x9F-0x2D)/7);
	movlw	low(07Fh)
	movwf	(0+(_PWM+01Ah))&0ffh	;volatile
	line	194
;pwm.c: 194: PWM.PROP3=0x9F-3*((0x9F-0x2D)/7);
	movlw	low(06Fh)
	movwf	(0+(_PWM+01Bh))&0ffh	;volatile
	line	195
;pwm.c: 195: break;
	goto	l2578
	line	72
	
l33658:; BSR set to: 0

	movf	((c:ModParam@tpk)),c,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l2564
	xorlw	1^0	; case 1
	skipnz
	goto	l2566
	xorlw	2^1	; case 2
	skipnz
	goto	l2567
	xorlw	3^2	; case 3
	skipnz
	goto	l2568
	goto	l2568

	line	227
;pwm.c: 226: {
;pwm.c: 227: case 0:
	
l2572:; BSR set to: 0

	line	229
;pwm.c: 228: {
;pwm.c: 229: PWM._ENOSC=(1!=0);
	bsf	((_PWM))&0ffh,1	;volatile
	line	230
	
l33660:; BSR set to: 0

;pwm.c: 230: PWM.MDMOD=0x48;
	movlw	low(048h)
	movwf	(0+(_PWM+09h))&0ffh	;volatile
	line	231
;pwm.c: 231: PWM.MGMOD=0xEB;
	movlw	low(0EBh)
	movwf	(0+(_PWM+0Ah))&0ffh	;volatile
	line	232
;pwm.c: 232: PWM.MAXOSC=20;
	movlw	low(014h)
	movwf	(0+(_PWM+0Bh))&0ffh	;volatile
	line	233
;pwm.c: 233: PWM.MINOSC=5;
	movlw	low(05h)
	movwf	(0+(_PWM+0Ch))&0ffh	;volatile
	line	234
;pwm.c: 234: PWM.MAD_MOD=0x14;
	movlw	low(014h)
	movwf	(0+(_PWM+0Dh))&0ffh	;volatile
	line	235
;pwm.c: 235: PWM.MAG_MOD=0xF7;
	movlw	low(0F7h)
	movwf	(0+(_PWM+0Eh))&0ffh	;volatile
	line	236
;pwm.c: 236: PWM.GWMSTART=99;
	movlw	low(063h)
	movwf	(0+(_PWM+0Fh))&0ffh	;volatile
	line	237
;pwm.c: 237: PWM.MDSTART=0x48;
	movlw	low(048h)
	movwf	(0+(_PWM+010h))&0ffh	;volatile
	line	238
;pwm.c: 238: PWM.MGSTART=0xEB+10;
	movlw	low(0F5h)
	movwf	(0+(_PWM+011h))&0ffh	;volatile
	line	239
;pwm.c: 239: PWM.GWMMAXCO=99;
	movlw	low(063h)
	movwf	(0+(_PWM+012h))&0ffh	;volatile
	line	240
;pwm.c: 240: PWM.MDMAXCO=0x48;
	movlw	low(048h)
	movwf	(0+(_PWM+013h))&0ffh	;volatile
	line	241
;pwm.c: 241: PWM.MGMAXCO=0xEB+10;
	movlw	low(0F5h)
	movwf	(0+(_PWM+014h))&0ffh	;volatile
	line	242
;pwm.c: 242: PWM.GWMMAXCW=99;
	movlw	low(063h)
	movwf	(0+(_PWM+015h))&0ffh	;volatile
	line	243
;pwm.c: 243: PWM.MDMAXCW=0x48;
	movlw	low(048h)
	movwf	(0+(_PWM+016h))&0ffh	;volatile
	line	244
;pwm.c: 244: PWM.MGMAXCW=0xEB+10;
	movlw	low(0F5h)
	movwf	(0+(_PWM+017h))&0ffh	;volatile
	line	245
;pwm.c: 245: PWM.FIRSTPB=0xAA;
	movlw	low(0AAh)
	movwf	(0+(_PWM+018h))&0ffh	;volatile
	line	246
;pwm.c: 246: PWM.PROP1=0xEB-1*((0xEB-0x48)/7);
	movlw	low(0D4h)
	movwf	(0+(_PWM+019h))&0ffh	;volatile
	line	247
;pwm.c: 247: PWM.PROP2=0xEB-2*((0xEB-0x48)/7);
	movlw	low(0BDh)
	movwf	(0+(_PWM+01Ah))&0ffh	;volatile
	line	248
;pwm.c: 248: PWM.PROP3=0xEB-3*((0xEB-0x48)/7);
	movlw	low(0A6h)
	movwf	(0+(_PWM+01Bh))&0ffh	;volatile
	line	249
;pwm.c: 249: break;
	goto	l2578
	line	251
;pwm.c: 250: }
;pwm.c: 251: case 1:
	
l2574:; BSR set to: 0

	line	253
;pwm.c: 252: {
;pwm.c: 253: PWM._ENOSC=(1!=0);
	bsf	((_PWM))&0ffh,1	;volatile
	line	254
	
l33662:; BSR set to: 0

;pwm.c: 254: PWM.MDMOD=0x40;
	movlw	low(040h)
	movwf	(0+(_PWM+09h))&0ffh	;volatile
	line	255
;pwm.c: 255: PWM.MGMOD=0xE0;
	movlw	low(0E0h)
	movwf	(0+(_PWM+0Ah))&0ffh	;volatile
	line	256
;pwm.c: 256: PWM.MAXOSC=30;
	movlw	low(01Eh)
	movwf	(0+(_PWM+0Bh))&0ffh	;volatile
	line	257
;pwm.c: 257: PWM.MINOSC=5;
	movlw	low(05h)
	movwf	(0+(_PWM+0Ch))&0ffh	;volatile
	line	258
;pwm.c: 258: PWM.MAD_MOD=0x14;
	movlw	low(014h)
	movwf	(0+(_PWM+0Dh))&0ffh	;volatile
	line	259
;pwm.c: 259: PWM.MAG_MOD=0xF7;
	movlw	low(0F7h)
	movwf	(0+(_PWM+0Eh))&0ffh	;volatile
	line	260
;pwm.c: 260: PWM.GWMSTART=99;
	movlw	low(063h)
	movwf	(0+(_PWM+0Fh))&0ffh	;volatile
	line	261
;pwm.c: 261: PWM.MDSTART=0x40;
	movlw	low(040h)
	movwf	(0+(_PWM+010h))&0ffh	;volatile
	line	262
;pwm.c: 262: PWM.MGSTART=0xE0+10;
	movlw	low(0EAh)
	movwf	(0+(_PWM+011h))&0ffh	;volatile
	line	263
;pwm.c: 263: PWM.GWMMAXCO=99;
	movlw	low(063h)
	movwf	(0+(_PWM+012h))&0ffh	;volatile
	line	264
;pwm.c: 264: PWM.MDMAXCO=0x40;
	movlw	low(040h)
	movwf	(0+(_PWM+013h))&0ffh	;volatile
	line	265
;pwm.c: 265: PWM.MGMAXCO=0xE0+10;
	movlw	low(0EAh)
	movwf	(0+(_PWM+014h))&0ffh	;volatile
	line	266
;pwm.c: 266: PWM.GWMMAXCW=99;
	movlw	low(063h)
	movwf	(0+(_PWM+015h))&0ffh	;volatile
	line	267
;pwm.c: 267: PWM.MDMAXCW=0x40;
	movlw	low(040h)
	movwf	(0+(_PWM+016h))&0ffh	;volatile
	line	268
;pwm.c: 268: PWM.MGMAXCW=0xE0+10;
	movlw	low(0EAh)
	movwf	(0+(_PWM+017h))&0ffh	;volatile
	line	269
;pwm.c: 269: PWM.FIRSTPB=0xA3;
	movlw	low(0A3h)
	movwf	(0+(_PWM+018h))&0ffh	;volatile
	line	270
;pwm.c: 270: PWM.PROP1=0xE0-1*((0xE0-0x40)/7);
	movlw	low(0CAh)
	movwf	(0+(_PWM+019h))&0ffh	;volatile
	line	271
;pwm.c: 271: PWM.PROP2=0xE0-2*((0xE0-0x40)/7);
	movlw	low(0B4h)
	movwf	(0+(_PWM+01Ah))&0ffh	;volatile
	line	272
;pwm.c: 272: PWM.PROP3=0xE0-3*((0xE0-0x40)/7);
	movlw	low(09Eh)
	movwf	(0+(_PWM+01Bh))&0ffh	;volatile
	line	273
;pwm.c: 273: break;
	goto	l2578
	line	302
;pwm.c: 274: }
;pwm.c: 302: case 2:
	
l2575:; BSR set to: 0

	line	304
;pwm.c: 303: {
;pwm.c: 304: PWM._ENOSC=(1!=0);
	bsf	((_PWM))&0ffh,1	;volatile
	line	305
	
l33664:; BSR set to: 0

;pwm.c: 305: PWM.MDMOD=0x5A;
	movlw	low(05Ah)
	movwf	(0+(_PWM+09h))&0ffh	;volatile
	line	306
;pwm.c: 306: PWM.MGMOD=0xCD;
	movlw	low(0CDh)
	movwf	(0+(_PWM+0Ah))&0ffh	;volatile
	line	307
;pwm.c: 307: PWM.MAXOSC=25;
	movlw	low(019h)
	movwf	(0+(_PWM+0Bh))&0ffh	;volatile
	line	308
;pwm.c: 308: PWM.MINOSC=5;
	movlw	low(05h)
	movwf	(0+(_PWM+0Ch))&0ffh	;volatile
	line	309
;pwm.c: 309: PWM.MAD_MOD=0x14;
	movlw	low(014h)
	movwf	(0+(_PWM+0Dh))&0ffh	;volatile
	line	310
;pwm.c: 310: PWM.MAG_MOD=0xF7;
	movlw	low(0F7h)
	movwf	(0+(_PWM+0Eh))&0ffh	;volatile
	line	311
;pwm.c: 311: PWM.GWMSTART=99;
	movlw	low(063h)
	movwf	(0+(_PWM+0Fh))&0ffh	;volatile
	line	312
;pwm.c: 312: PWM.MDSTART=0x5A;
	movlw	low(05Ah)
	movwf	(0+(_PWM+010h))&0ffh	;volatile
	line	313
;pwm.c: 313: PWM.MGSTART=0xCD+10;
	movlw	low(0D7h)
	movwf	(0+(_PWM+011h))&0ffh	;volatile
	line	314
;pwm.c: 314: PWM.GWMMAXCO=99;
	movlw	low(063h)
	movwf	(0+(_PWM+012h))&0ffh	;volatile
	line	315
;pwm.c: 315: PWM.MDMAXCO=0x5A;
	movlw	low(05Ah)
	movwf	(0+(_PWM+013h))&0ffh	;volatile
	line	316
;pwm.c: 316: PWM.MGMAXCO=0xCD+10;
	movlw	low(0D7h)
	movwf	(0+(_PWM+014h))&0ffh	;volatile
	line	317
;pwm.c: 317: PWM.GWMMAXCW=99;
	movlw	low(063h)
	movwf	(0+(_PWM+015h))&0ffh	;volatile
	line	318
;pwm.c: 318: PWM.MDMAXCW=0x5A;
	movlw	low(05Ah)
	movwf	(0+(_PWM+016h))&0ffh	;volatile
	line	319
;pwm.c: 319: PWM.MGMAXCW=0xCD+10;
	movlw	low(0D7h)
	movwf	(0+(_PWM+017h))&0ffh	;volatile
	line	320
;pwm.c: 320: PWM.FIRSTPB=0x9B;
	movlw	low(09Bh)
	movwf	(0+(_PWM+018h))&0ffh	;volatile
	line	321
;pwm.c: 321: PWM.PROP1=0xCD-1*((0xCD-0x5A)/7);
	movlw	low(0BDh)
	movwf	(0+(_PWM+019h))&0ffh	;volatile
	line	322
;pwm.c: 322: PWM.PROP2=0xCD-2*((0xCD-0x5A)/7);
	movlw	low(0ADh)
	movwf	(0+(_PWM+01Ah))&0ffh	;volatile
	line	323
;pwm.c: 323: PWM.PROP3=0xCD-3*((0xCD-0x5A)/7);
	movlw	low(09Dh)
	movwf	(0+(_PWM+01Bh))&0ffh	;volatile
	line	324
;pwm.c: 324: break;
	goto	l2578
	line	326
;pwm.c: 325: }
;pwm.c: 326: case 3:
	
l2576:; BSR set to: 0

	line	328
;pwm.c: 327: {
;pwm.c: 328: PWM._ENOSC=(1!=0);
	bsf	((_PWM))&0ffh,1	;volatile
	line	329
	
l33666:; BSR set to: 0

;pwm.c: 329: PWM.MDMOD=0x35;
	movlw	low(035h)
	movwf	(0+(_PWM+09h))&0ffh	;volatile
	line	330
;pwm.c: 330: PWM.MGMOD=0xF0;
	movlw	low(0F0h)
	movwf	(0+(_PWM+0Ah))&0ffh	;volatile
	line	331
;pwm.c: 331: PWM.MAXOSC=15;
	movlw	low(0Fh)
	movwf	(0+(_PWM+0Bh))&0ffh	;volatile
	line	332
;pwm.c: 332: PWM.MINOSC=5;
	movlw	low(05h)
	movwf	(0+(_PWM+0Ch))&0ffh	;volatile
	line	333
;pwm.c: 333: PWM.MAD_MOD=0x14;
	movlw	low(014h)
	movwf	(0+(_PWM+0Dh))&0ffh	;volatile
	line	334
;pwm.c: 334: PWM.MAG_MOD=0xF7;
	movlw	low(0F7h)
	movwf	(0+(_PWM+0Eh))&0ffh	;volatile
	line	335
;pwm.c: 335: PWM.GWMSTART=99;
	movlw	low(063h)
	movwf	(0+(_PWM+0Fh))&0ffh	;volatile
	line	336
;pwm.c: 336: PWM.MDSTART=0x35;
	movlw	low(035h)
	movwf	(0+(_PWM+010h))&0ffh	;volatile
	line	337
;pwm.c: 337: PWM.MGSTART=0xF0+10;
	movlw	low(0FAh)
	movwf	(0+(_PWM+011h))&0ffh	;volatile
	line	338
;pwm.c: 338: PWM.GWMMAXCO=99;
	movlw	low(063h)
	movwf	(0+(_PWM+012h))&0ffh	;volatile
	line	339
;pwm.c: 339: PWM.MDMAXCO=0x35;
	movlw	low(035h)
	movwf	(0+(_PWM+013h))&0ffh	;volatile
	line	340
;pwm.c: 340: PWM.MGMAXCO=0xF0+10;
	movlw	low(0FAh)
	movwf	(0+(_PWM+014h))&0ffh	;volatile
	line	341
;pwm.c: 341: PWM.GWMMAXCW=99;
	movlw	low(063h)
	movwf	(0+(_PWM+015h))&0ffh	;volatile
	line	342
;pwm.c: 342: PWM.MDMAXCW=0x35;
	movlw	low(035h)
	movwf	(0+(_PWM+016h))&0ffh	;volatile
	line	343
;pwm.c: 343: PWM.MGMAXCW=0xF0+10;
	movlw	low(0FAh)
	movwf	(0+(_PWM+017h))&0ffh	;volatile
	line	344
;pwm.c: 344: PWM.FIRSTPB=0xA5;
	movlw	low(0A5h)
	movwf	(0+(_PWM+018h))&0ffh	;volatile
	line	345
;pwm.c: 345: PWM.PROP1=0xF0-1*((0xF0-0x35)/7);
	movlw	low(0D6h)
	movwf	(0+(_PWM+019h))&0ffh	;volatile
	line	346
;pwm.c: 346: PWM.PROP2=0xF0-2*((0xF0-0x35)/7);
	movlw	low(0BCh)
	movwf	(0+(_PWM+01Ah))&0ffh	;volatile
	line	347
;pwm.c: 347: PWM.PROP3=0xF0-3*((0xF0-0x35)/7);
	movlw	low(0A2h)
	movwf	(0+(_PWM+01Bh))&0ffh	;volatile
	line	348
;pwm.c: 348: break;
	goto	l2578
	line	225
	
l33672:; BSR set to: 0

	movf	((c:ModParam@tpk)),c,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l2572
	xorlw	1^0	; case 1
	skipnz
	goto	l2574
	xorlw	2^1	; case 2
	skipnz
	goto	l2575
	xorlw	3^2	; case 3
	skipnz
	goto	l2576
	goto	l2576

	line	376
	
l2578:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModParam
	__end_of_ModParam:
	signat	_ModParam,8312
	global	_MocStart

;; *************** function _MocStart *****************
;; Defined at:
;;		line 446 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
;; Parameters:    Size  Location     Type
;;  nst             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  nst             1   10[BANK0 ] unsigned char 
;;  tmp             2    8[BANK0 ] unsigned int 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;;		___awdiv
;;		___lwdiv
;; This function is called by:
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text129,class=CODE,space=0,reloc=2
global __ptext129
__ptext129:
psect	text129
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
	line	446
	global	__size_of_MocStart
	__size_of_MocStart	equ	__end_of_MocStart-_MocStart
	
_MocStart:; BSR set to: 0

	opt	stack 24
;MocStart@nst stored from wreg
	line	449
	movff	wreg,(MocStart@nst)
	
l33710:; BSR set to: 1

;pwm.c: 447: unsigned int tmp;
;pwm.c: 449: if(nst>PWM.GWMSTART) nst=PWM.GWMSTART;
	movlb	0	; () banked
	movf	((MocStart@nst))&0ffh,w
	cpfslt	(0+(_PWM+0Fh))&0ffh	;volatile
	goto	u63051
	goto	u63050
u63051:
	goto	l33714
u63050:
	
l33712:; BSR set to: 0

	movff	0+(_PWM+0Fh),(MocStart@nst)	;volatile
	line	450
	
l33714:; BSR set to: 0

;pwm.c: 450: tmp=((PWM.MGSTART-PWM.MDSTART)*10)/PWM.GWMSTART;
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	movf	(0+(_PWM+010h))&0ffh,w	;volatile
	subwf	(0+(_PWM+011h))&0ffh,w	;volatile
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	btfss	status,0
	decf	1+((c:?___wmul)),c
	
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___awdiv)
	movff	1+?___wmul,(?___awdiv+1)
	movff	0+(_PWM+0Fh),0+(?___awdiv+02h)	;volatile
	clrf	(1+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movff	0+?___awdiv,(MocStart@tmp)
	movff	1+?___awdiv,(MocStart@tmp+1)
	line	451
	
l33716:; BSR set to: 0

;pwm.c: 451: PWM.MSTART=PWM.MDSTART+(unsigned char)((nst*tmp)/10);
	movff	(MocStart@tmp),0+((c:?___wmul)+02h)
	movff	(MocStart@tmp+1),1+((c:?___wmul)+02h)
	movff	(MocStart@nst),(c:?___wmul)
	clrf	((c:?___wmul+1)),c
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___lwdiv)
	movff	1+?___wmul,(?___lwdiv+1)
	movlw	high(0Ah)
	movwf	(1+(?___lwdiv+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___lwdiv+02h))&0ffh
	call	___lwdiv	;wreg free
	movf	(0+?___lwdiv)&0ffh,w
	addwf	(0+(_PWM+010h))&0ffh,w	;volatile
	movwf	(0+(_PWM+01Ch))&0ffh	;volatile
	line	452
	
l2603:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_MocStart
	__end_of_MocStart:
	signat	_MocStart,4216
	global	_MocMaksCO

;; *************** function _MocMaksCO *****************
;; Defined at:
;;		line 458 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
;; Parameters:    Size  Location     Type
;;  nst             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  nst             1   10[BANK0 ] unsigned char 
;;  tmp             2    8[BANK0 ] unsigned int 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;;		___awdiv
;;		___lwdiv
;; This function is called by:
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text130,class=CODE,space=0,reloc=2
global __ptext130
__ptext130:
psect	text130
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
	line	458
	global	__size_of_MocMaksCO
	__size_of_MocMaksCO	equ	__end_of_MocMaksCO-_MocMaksCO
	
_MocMaksCO:; BSR set to: 0

	opt	stack 24
;MocMaksCO@nst stored from wreg
	line	461
	movff	wreg,(MocMaksCO@nst)
	
l33718:; BSR set to: 1

;pwm.c: 459: unsigned int tmp;
;pwm.c: 461: if(nst>PWM.GWMMAXCO) nst=PWM.GWMMAXCO;
	movlb	0	; () banked
	movf	((MocMaksCO@nst))&0ffh,w
	cpfslt	(0+(_PWM+012h))&0ffh	;volatile
	goto	u63061
	goto	u63060
u63061:
	goto	l33722
u63060:
	
l33720:; BSR set to: 0

	movff	0+(_PWM+012h),(MocMaksCO@nst)	;volatile
	line	462
	
l33722:; BSR set to: 0

;pwm.c: 462: tmp=((PWM.MGMAXCO-PWM.MDMAXCO)*10)/PWM.GWMMAXCO;
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	movf	(0+(_PWM+013h))&0ffh,w	;volatile
	subwf	(0+(_PWM+014h))&0ffh,w	;volatile
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	btfss	status,0
	decf	1+((c:?___wmul)),c
	
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___awdiv)
	movff	1+?___wmul,(?___awdiv+1)
	movff	0+(_PWM+012h),0+(?___awdiv+02h)	;volatile
	clrf	(1+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movff	0+?___awdiv,(MocMaksCO@tmp)
	movff	1+?___awdiv,(MocMaksCO@tmp+1)
	line	463
	
l33724:; BSR set to: 0

;pwm.c: 463: PWM.MMAXCO=PWM.MDMAXCO+(unsigned char)((nst*tmp)/10);
	movff	(MocMaksCO@tmp),0+((c:?___wmul)+02h)
	movff	(MocMaksCO@tmp+1),1+((c:?___wmul)+02h)
	movff	(MocMaksCO@nst),(c:?___wmul)
	clrf	((c:?___wmul+1)),c
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___lwdiv)
	movff	1+?___wmul,(?___lwdiv+1)
	movlw	high(0Ah)
	movwf	(1+(?___lwdiv+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___lwdiv+02h))&0ffh
	call	___lwdiv	;wreg free
	movf	(0+?___lwdiv)&0ffh,w
	addwf	(0+(_PWM+013h))&0ffh,w	;volatile
	movwf	(0+(_PWM+01Dh))&0ffh	;volatile
	line	464
	
l2607:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_MocMaksCO
	__end_of_MocMaksCO:
	signat	_MocMaksCO,4216
	global	_MocMaksCW

;; *************** function _MocMaksCW *****************
;; Defined at:
;;		line 470 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
;; Parameters:    Size  Location     Type
;;  nst             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  nst             1   10[BANK0 ] unsigned char 
;;  tmp             2    8[BANK0 ] unsigned int 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;;		___awdiv
;;		___lwdiv
;; This function is called by:
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text131,class=CODE,space=0,reloc=2
global __ptext131
__ptext131:
psect	text131
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
	line	470
	global	__size_of_MocMaksCW
	__size_of_MocMaksCW	equ	__end_of_MocMaksCW-_MocMaksCW
	
_MocMaksCW:; BSR set to: 0

	opt	stack 24
;MocMaksCW@nst stored from wreg
	line	473
	movff	wreg,(MocMaksCW@nst)
	
l33726:; BSR set to: 1

;pwm.c: 471: unsigned int tmp;
;pwm.c: 473: if(nst>PWM.GWMMAXCW) nst=PWM.GWMMAXCW;
	movlb	0	; () banked
	movf	((MocMaksCW@nst))&0ffh,w
	cpfslt	(0+(_PWM+015h))&0ffh	;volatile
	goto	u63071
	goto	u63070
u63071:
	goto	l33730
u63070:
	
l33728:; BSR set to: 0

	movff	0+(_PWM+015h),(MocMaksCW@nst)	;volatile
	line	474
	
l33730:; BSR set to: 0

;pwm.c: 474: tmp=((PWM.MGMAXCW-PWM.MDMAXCW)*10)/PWM.GWMMAXCW;
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	movf	(0+(_PWM+016h))&0ffh,w	;volatile
	subwf	(0+(_PWM+017h))&0ffh,w	;volatile
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	btfss	status,0
	decf	1+((c:?___wmul)),c
	
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___awdiv)
	movff	1+?___wmul,(?___awdiv+1)
	movff	0+(_PWM+015h),0+(?___awdiv+02h)	;volatile
	clrf	(1+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movff	0+?___awdiv,(MocMaksCW@tmp)
	movff	1+?___awdiv,(MocMaksCW@tmp+1)
	line	475
	
l33732:; BSR set to: 0

;pwm.c: 475: PWM.MMAXCW=PWM.MDMAXCW+(unsigned char)((nst*tmp)/10);
	movff	(MocMaksCW@tmp),0+((c:?___wmul)+02h)
	movff	(MocMaksCW@tmp+1),1+((c:?___wmul)+02h)
	movff	(MocMaksCW@nst),(c:?___wmul)
	clrf	((c:?___wmul+1)),c
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___lwdiv)
	movff	1+?___wmul,(?___lwdiv+1)
	movlw	high(0Ah)
	movwf	(1+(?___lwdiv+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___lwdiv+02h))&0ffh
	call	___lwdiv	;wreg free
	movf	(0+?___lwdiv)&0ffh,w
	addwf	(0+(_PWM+016h))&0ffh,w	;volatile
	movwf	(0+(_PWM+01Eh))&0ffh	;volatile
	line	476
	
l2611:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_MocMaksCW
	__end_of_MocMaksCW:
	signat	_MocMaksCW,4216
	global	_StartCO

;; *************** function _StartCO *****************
;; Defined at:
;;		line 518 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text132,class=CODE,space=0,reloc=2
global __ptext132
__ptext132:
psect	text132
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	518
	global	__size_of_StartCO
	__size_of_StartCO	equ	__end_of_StartCO-_StartCO
	
_StartCO:; BSR set to: 0

	opt	stack 24
	line	521
	
l40802:; BSR set to: 0

;rgl.c: 521: if(rgl.btco||rgl.btcw) return;
	
	btfsc	((c:_rgl)),c,0
	goto	u81041
	goto	u81040
u81041:
	goto	l2932
u81040:
	
l40804:; BSR set to: 0

	
	btfss	((c:_rgl)),c,1
	goto	u81051
	goto	u81050
u81051:
	goto	l40806
u81050:
	goto	l2932
	line	522
	
l40806:; BSR set to: 0

;rgl.c: 522: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	523
	
l40808:; BSR set to: 1

;rgl.c: 523: DtCO.dDCO=0;
	movlb	0	; () banked
	clrf	(0+(_DtCO+09h))&0ffh
	line	524
	
l40810:; BSR set to: 0

;rgl.c: 524: DtCO.indCO=0;
	clrf	(0+(_DtCO+0Ah))&0ffh
	line	525
	
l40812:; BSR set to: 0

;rgl.c: 525: DtCW.dDCW=0;
	clrf	(0+(_DtCW+08h))&0ffh
	line	526
	
l40814:; BSR set to: 0

;rgl.c: 526: DtCW.indCW=0;
	clrf	(0+(_DtCW+0Ah))&0ffh
	line	527
	
l40816:; BSR set to: 0

;rgl.c: 527: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	528
	
l40818:; BSR set to: 0

;rgl.c: 528: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	529
	
l40820:; BSR set to: 0

;rgl.c: 529: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	531
	
l40822:; BSR set to: 0

;rgl.c: 531: if(PWM.MMAXCO>PWM.FIRSTPB)
	movf	(0+(_PWM+01Dh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+018h))&0ffh	;volatile
	goto	u81061
	goto	u81060
u81061:
	goto	l2933
u81060:
	line	533
	
l40824:; BSR set to: 0

;rgl.c: 532: {
;rgl.c: 533: rgl.xmod=PWM.FIRSTPB;
	movff	0+(_PWM+018h),0+((c:_rgl)+08h)	;volatile
	line	534
;rgl.c: 534: }
	goto	l2934
	line	535
	
l2933:; BSR set to: 0

	line	537
;rgl.c: 535: else
;rgl.c: 536: {
;rgl.c: 537: rgl.xmod=PWM.MMAXCO;
	movff	0+(_PWM+01Dh),0+((c:_rgl)+08h)	;volatile
	line	538
	
l2934:; BSR set to: 0

	line	539
;rgl.c: 538: }
;rgl.c: 539: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	540
;rgl.c: 540: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	541
;rgl.c: 541: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	542
;rgl.c: 542: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	543
;rgl.c: 543: rgl.inv_mod=0;
	bcf	(0+((c:_rgl)+01h)),c,0
	line	544
	
l2932:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartCO
	__end_of_StartCO:
	signat	_StartCO,88
	global	_ReadDataCO

;; *************** function _ReadDataCO *****************
;; Defined at:
;;		line 749 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text133,class=CODE,space=0,reloc=2
global __ptext133
__ptext133:
psect	text133
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	749
	global	__size_of_ReadDataCO
	__size_of_ReadDataCO	equ	__end_of_ReadDataCO-_ReadDataCO
	
_ReadDataCO:; BSR set to: 0

	opt	stack 25
	line	750
	
l33758:; BSR set to: 0

;rgl.c: 750: rgl.x_t=DtCO.DCO;
	movff	0+(_DtCO+08h),0+((c:_rgl)+02h)
	line	751
;rgl.c: 751: rgl.x_dt=DtCO.dDCO;
	movff	0+(_DtCO+09h),0+((c:_rgl)+04h)
	line	752
	
l2983:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ReadDataCO
	__end_of_ReadDataCO:
	signat	_ReadDataCO,88
	global	_ModToCO

;; *************** function _ModToCO *****************
;; Defined at:
;;		line 731 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ClrMod
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text134,class=CODE,space=0,reloc=2
global __ptext134
__ptext134:
psect	text134
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	731
	global	__size_of_ModToCO
	__size_of_ModToCO	equ	__end_of_ModToCO-_ModToCO
	
_ModToCO:; BSR set to: 0

	opt	stack 24
	line	732
	
l33760:; BSR set to: 0

;rgl.c: 732: rgl.btco=1;
	bsf	((c:_rgl)),c,0
	line	733
;rgl.c: 733: if(rgl.btcw)
	
	btfss	((c:_rgl)),c,1
	goto	u63111
	goto	u63110
u63111:
	goto	l2975
u63110:
	line	735
	
l33762:; BSR set to: 0

;rgl.c: 734: {
;rgl.c: 735: rgl.btcw=0;
	bcf	((c:_rgl)),c,1
	line	736
	
l33764:; BSR set to: 0

;rgl.c: 736: ClrMod();
	call	_ClrMod	;wreg free
	line	738
	
l2975:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModToCO
	__end_of_ModToCO:
	signat	_ModToCO,88
	global	_ModZgCO

;; *************** function _ModZgCO *****************
;; Defined at:
;;		line 301 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4    1[BANK2 ] long 
;;  p               1    0[BANK2 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : D/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       5       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       10 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tnizsza
;;		_Tmaleje
;;		_Tstoi
;;		___wmul
;;		___aldiv
;;		___lmul
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text135,class=CODE,space=0,reloc=2
global __ptext135
__ptext135:
psect	text135
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	301
	global	__size_of_ModZgCO
	__size_of_ModZgCO	equ	__end_of_ModZgCO-_ModZgCO
	
_ModZgCO:; BSR set to: 0

	opt	stack 24
	line	306
	
l33766:; BSR set to: 0

;rgl.c: 302: signed long m;
;rgl.c: 303: unsigned char p;
;rgl.c: 306: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u63121
	goto	u63120
u63121:
	goto	l33772
u63120:
	line	308
	
l33768:; BSR set to: 0

;rgl.c: 307: {
;rgl.c: 308: if(Tnizsza(10))
	movlw	(0Ah)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u63131
	goto	u63130
u63131:
	goto	l2840
u63130:
	line	310
	
l33770:; BSR set to: 0

;rgl.c: 309: {
;rgl.c: 310: rgl.xmod=PWM.BufPWM;
	movff	0+(_PWM+01h),0+((c:_rgl)+08h)	;volatile
	line	311
;rgl.c: 311: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	312
;rgl.c: 312: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	317
;rgl.c: 313: }
	
l33772:; BSR set to: 0

;rgl.c: 315: }
;rgl.c: 317: if((!Tnizsza(5)&&Tmaleje(0))||(!Tnizsza(2)&&Tstoi()))
	movlw	(05h)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u63141
	goto	u63140
u63141:
	goto	l33776
u63140:
	
l33774:; BSR set to: 0

	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfsc	status,0
	goto	u63151
	goto	u63150
u63151:
	goto	l2843
u63150:
	
l33776:; BSR set to: 0

	movlw	(02h)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u63161
	goto	u63160
u63161:
	goto	l33784
u63160:
	
l33778:; BSR set to: 0

	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u63171
	goto	u63170
u63171:
	goto	l33784
u63170:
	
l2843:; BSR set to: 0

	line	319
;rgl.c: 318: {
;rgl.c: 319: rgl.fz=1;
	bsf	((c:_rgl)),c,2
	line	320
;rgl.c: 320: rgl.srp=PWM.BufPWM;
	movff	0+(_PWM+01h),0+((c:_rgl)+07h)	;volatile
	line	321
;rgl.c: 321: rgl.xmod=PWM.BufPWM;
	movff	0+(_PWM+01h),0+((c:_rgl)+08h)	;volatile
	line	322
	
l33780:; BSR set to: 0

;rgl.c: 322: if(rgl.xmod>PWM.MGMOD)
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u63181
	goto	u63180
u63181:
	goto	l2840
u63180:
	line	324
	
l33782:; BSR set to: 0

;rgl.c: 323: {
;rgl.c: 324: rgl.srp=PWM.MGMOD;
	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	line	325
;rgl.c: 325: rgl.xmod=PWM.MGMOD;
	movff	0+(_PWM+0Ah),0+((c:_rgl)+08h)	;volatile
	goto	l2840
	line	329
	
l33784:; BSR set to: 0

;rgl.c: 328: }
;rgl.c: 329: if(rgl.xmod>=PWM.MDMOD) m=(rgl.xmod-PWM.MDMOD)*10;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	btfss	status,0
	goto	u63191
	goto	u63190
u63191:
	goto	l2847
u63190:
	
l33786:; BSR set to: 0

	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	btfss	status,0
	decf	1+((c:?___wmul)),c
	
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movlb	2	; () banked
	movff	0+?___wmul,(ModZgCO@m)
	movff	1+?___wmul,(ModZgCO@m+1)
	movlw	0
	btfsc	((ModZgCO@m+1))&0ffh,7
	movlw	-1
	movwf	((ModZgCO@m+2))&0ffh
	movwf	((ModZgCO@m+3))&0ffh
	goto	l33788
	line	330
	
l2847:; BSR set to: 0

;rgl.c: 330: else m=0;
	movlb	2	; () banked
	clrf	((ModZgCO@m))&0ffh
	clrf	((ModZgCO@m+1))&0ffh
	clrf	((ModZgCO@m+2))&0ffh
	clrf	((ModZgCO@m+3))&0ffh

	line	331
	
l33788:; BSR set to: 2

;rgl.c: 331: m=m/(DtCO.MAD_CO-DtCO.DAD_CO);
	movff	(ModZgCO@m),(c:?___aldiv)
	movff	(ModZgCO@m+1),(c:?___aldiv+1)
	movff	(ModZgCO@m+2),(c:?___aldiv+2)
	movff	(ModZgCO@m+3),(c:?___aldiv+3)
	movlb	0	; () banked
	movf	(0+(_DtCO+0Eh))&0ffh,w
	movff	0+(_DtCO+0Dh),??_ModZgCO+0+0
	clrf	(??_ModZgCO+0+0+1)&0ffh
	subwf	(??_ModZgCO+0+0)&0ffh
	movlw	0
	subwfb	(??_ModZgCO+0+1)&0ffh
	movff	??_ModZgCO+0+0,0+((c:?___aldiv)+04h)
	movff	??_ModZgCO+0+1,1+((c:?___aldiv)+04h)
	movlw	0
	btfsc	(1+((c:?___aldiv)+04h)),c,7
	movlw	-1
	movwf	(2+((c:?___aldiv)+04h)),c
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movff	0+?___aldiv,(ModZgCO@m)
	movff	1+?___aldiv,(ModZgCO@m+1)
	movff	2+?___aldiv,(ModZgCO@m+2)
	movff	3+?___aldiv,(ModZgCO@m+3)
	line	332
;rgl.c: 332: m=m*(DtCO.AC_CO-DtCO.DAD_CO);
	movff	(ModZgCO@m),(c:?___lmul)
	movff	(ModZgCO@m+1),(c:?___lmul+1)
	movff	(ModZgCO@m+2),(c:?___lmul+2)
	movff	(ModZgCO@m+3),(c:?___lmul+3)
	movf	(0+(_DtCO+0Eh))&0ffh,w
	movff	0+(_DtCO+0Ch),??_ModZgCO+0+0
	clrf	(??_ModZgCO+0+0+1)&0ffh
	subwf	(??_ModZgCO+0+0)&0ffh
	movlw	0
	subwfb	(??_ModZgCO+0+1)&0ffh
	movff	??_ModZgCO+0+0,0+((c:?___lmul)+04h)
	movff	??_ModZgCO+0+1,1+((c:?___lmul)+04h)
	movlw	0
	btfsc	(1+((c:?___lmul)+04h)),c,7
	movlw	-1
	movwf	(2+((c:?___lmul)+04h)),c
	movwf	(3+((c:?___lmul)+04h)),c
	call	___lmul	;wreg free
	movff	0+?___lmul,(ModZgCO@m)
	movff	1+?___lmul,(ModZgCO@m+1)
	movff	2+?___lmul,(ModZgCO@m+2)
	movff	3+?___lmul,(ModZgCO@m+3)
	line	333
	
l33790:
;rgl.c: 333: if(m<0) m=0;
	movlb	2	; () banked
	btfss	((ModZgCO@m+3))&0ffh,7
	goto	u63201
	goto	u63200
u63201:
	goto	l33794
u63200:
	
l33792:; BSR set to: 2

	clrf	((ModZgCO@m))&0ffh
	clrf	((ModZgCO@m+1))&0ffh
	clrf	((ModZgCO@m+2))&0ffh
	clrf	((ModZgCO@m+3))&0ffh

	line	334
	
l33794:; BSR set to: 2

;rgl.c: 334: m=m/10+PWM.MDMOD;
	movff	(ModZgCO@m),(c:?___aldiv)
	movff	(ModZgCO@m+1),(c:?___aldiv+1)
	movff	(ModZgCO@m+2),(c:?___aldiv+2)
	movff	(ModZgCO@m+3),(c:?___aldiv+3)
	movlw	low(0Ah)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(0Ah)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(0Ah)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(0Ah)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	addwf	(0+?___aldiv),c,w
	movlb	2	; () banked
	movwf	((ModZgCO@m))&0ffh
	movlw	0
	addwfc	(1+?___aldiv),c,w
	movwf	1+((ModZgCO@m))&0ffh
	movlw	0
	addwfc	(2+?___aldiv),c,w
	movwf	2+((ModZgCO@m))&0ffh
	movlw	0
	addwfc	(3+?___aldiv),c,w
	movwf	3+((ModZgCO@m))&0ffh
	line	335
	
l33796:; BSR set to: 2

;rgl.c: 335: if(m>0xff)
	movf	((ModZgCO@m+3))&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u63215
	movlw	0
	subwf	((ModZgCO@m+2))&0ffh,w
	bnz	u63215
	movlw	01h
	subwf	((ModZgCO@m+1))&0ffh,w
	bnz	u63215
	movlw	0
	subwf	((ModZgCO@m))&0ffh,w
u63215:

	btfss	status,0
	goto	u63211
	goto	u63210
u63211:
	goto	l2850
u63210:
	line	337
	
l33798:; BSR set to: 2

;rgl.c: 336: {
;rgl.c: 337: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	338
;rgl.c: 338: rgl.tmp_pwm=rgl.xmod;
	movff	0+((c:_rgl)+08h),0+((c:_rgl)+09h)
	line	339
;rgl.c: 339: return;
	goto	l2840
	line	340
	
l2850:; BSR set to: 2

	line	341
;rgl.c: 340: }
;rgl.c: 341: if(rgl.fz&&(rgl.xmod>m))
	
	btfss	((c:_rgl)),c,2
	goto	u63221
	goto	u63220
u63221:
	goto	l2851
u63220:
	
l33800:; BSR set to: 2

	movff	0+((c:_rgl)+08h),??_ModZgCO+0+0
	movlb	0	; () banked
	clrf	(??_ModZgCO+0+0+1)&0ffh
	clrf	(??_ModZgCO+0+0+2)&0ffh
	clrf	(??_ModZgCO+0+0+3)&0ffh
	movlb	2	; () banked
	movf	((ModZgCO@m+3))&0ffh,w
	xorlw	80h
	movlb	0	; () banked
	movwf	(??_ModZgCO+4+0)&0ffh
	movf	(??_ModZgCO+0+0)&0ffh,w
	movlb	2	; () banked
	subwf	((ModZgCO@m))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCO+0+1)&0ffh,w
	movlb	2	; () banked
	subwfb	((ModZgCO@m+1))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCO+0+2)&0ffh,w
	movlb	2	; () banked
	subwfb	((ModZgCO@m+2))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCO+0+3)&0ffh,w
	xorlw	80h
	subwfb	(??_ModZgCO+4+0)&0ffh,w
	btfsc	status,0
	goto	u63231
	goto	u63230
u63231:
	goto	l2851
u63230:
	line	342
	
l33802:; BSR set to: 0

;rgl.c: 342: rgl.srp=(rgl.xmod-m);
	movlb	2	; () banked
	movf	((ModZgCO@m))&0ffh,w
	subwf	(0+((c:_rgl)+08h)),c,w
	movwf	(0+((c:_rgl)+07h)),c
	
l2851:
	line	343
;rgl.c: 343: m+=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	movlb	2	; () banked
	addwf	((ModZgCO@m))&0ffh
	movlw	0
	addwfc	((ModZgCO@m+1))&0ffh
	addwfc	((ModZgCO@m+2))&0ffh
	addwfc	((ModZgCO@m+3))&0ffh
	line	344
;rgl.c: 344: if(m>rgl.xmod) p=rgl.xmod;
	movff	0+((c:_rgl)+08h),??_ModZgCO+0+0
	movlb	0	; () banked
	clrf	(??_ModZgCO+0+0+1)&0ffh
	clrf	(??_ModZgCO+0+0+2)&0ffh
	clrf	(??_ModZgCO+0+0+3)&0ffh
	movf	(??_ModZgCO+0+3)&0ffh,w
	xorlw	80h
	movwf	(??_ModZgCO+4+0)&0ffh
	movlb	2	; () banked
	movf	((ModZgCO@m))&0ffh,w
	movlb	0	; () banked
	subwf	(??_ModZgCO+0+0)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCO@m+1))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ModZgCO+0+1)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCO@m+2))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ModZgCO+0+2)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCO@m+3))&0ffh,w
	xorlw	80h
	movlb	0	; () banked
	subwfb	(??_ModZgCO+4+0)&0ffh,w
	btfsc	status,0
	goto	u63241
	goto	u63240
u63241:
	goto	l2852
u63240:
	
l33804:; BSR set to: 0

	movff	0+((c:_rgl)+08h),(ModZgCO@p)
	goto	l2853
	line	345
	
l2852:; BSR set to: 0

;rgl.c: 345: else p=m;
	movff	(ModZgCO@m),(ModZgCO@p)
	
l2853:; BSR set to: 0

	line	346
;rgl.c: 346: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	347
;rgl.c: 347: rgl.tmp_pwm=p;
	movff	(ModZgCO@p),0+((c:_rgl)+09h)
	line	348
	
l2840:
	return
	opt stack 0
GLOBAL	__end_of_ModZgCO
	__end_of_ModZgCO:
	signat	_ModZgCO,88
	global	_ModDkCO

;; *************** function _ModDkCO *****************
;; Defined at:
;;		line 352 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4    8[BANK0 ] long 
;;  p               1    7[BANK0 ] unsigned char 
;;  k               1    6[BANK0 ] unsigned char 
;;  ada             1    5[BANK0 ] char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : D/0
;;		On exit  : D/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       12 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Twyzsza
;;		___wmul
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text136,class=CODE,space=0,reloc=2
global __ptext136
__ptext136:
psect	text136
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	352
	global	__size_of_ModDkCO
	__size_of_ModDkCO	equ	__end_of_ModDkCO-_ModDkCO
	
_ModDkCO:
	opt	stack 24
	line	357
	
l33806:
;rgl.c: 353: signed long m;
;rgl.c: 354: signed char ada;
;rgl.c: 355: unsigned char k,p;
;rgl.c: 357: if(!rgl.fz) return;
	
	btfsc	((c:_rgl)),c,2
	goto	u63251
	goto	u63250
u63251:
	goto	l33810
u63250:
	goto	l2857
	line	358
	
l33810:
;rgl.c: 358: ada=DtCO.AC_CO-DtCO.DAD_CO;
	movlb	0	; () banked
	movf	(0+(_DtCO+0Eh))&0ffh,w
	subwf	(0+(_DtCO+0Ch))&0ffh,w
	movwf	((ModDkCO@ada))&0ffh
	line	359
	
l33812:; BSR set to: 0

;rgl.c: 359: k=5;
	movlw	low(05h)
	movwf	((ModDkCO@k))&0ffh
	line	360
	
l33814:; BSR set to: 0

;rgl.c: 360: if(Twyzsza(0)) k=6;
	movlw	(0)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u63261
	goto	u63260
u63261:
	goto	l33818
u63260:
	
l33816:; BSR set to: 0

	movlw	low(06h)
	movwf	((ModDkCO@k))&0ffh
	line	361
	
l33818:; BSR set to: 0

;rgl.c: 361: m=rgl.srp+k*ada;
	movff	(ModDkCO@k),(c:?___wmul)
	clrf	((c:?___wmul+1)),c
	movf	((ModDkCO@ada))&0ffh,w
	movwf	(0+((c:?___wmul)+02h)),c
	clrf	(1+((c:?___wmul)+02h)),c
	btfsc	(0+((c:?___wmul)+02h)),c,7
	decf	(1+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	(0+?___wmul),c,w
	movwf	(??_ModDkCO+0+0)&0ffh
	movlw	0
	addwfc	(1+?___wmul),c,w
	movwf	1+(??_ModDkCO+0+0)&0ffh
	movff	??_ModDkCO+0+0,(ModDkCO@m)
	movff	??_ModDkCO+0+1,(ModDkCO@m+1)
	movlw	0
	btfsc	((ModDkCO@m+1))&0ffh,7
	movlw	-1
	movwf	((ModDkCO@m+2))&0ffh
	movwf	((ModDkCO@m+3))&0ffh
	line	362
	
l33820:; BSR set to: 0

;rgl.c: 362: if(m>rgl.xmod) p=rgl.xmod;
	movff	0+((c:_rgl)+08h),??_ModDkCO+0+0
	clrf	(??_ModDkCO+0+0+1)&0ffh
	clrf	(??_ModDkCO+0+0+2)&0ffh
	clrf	(??_ModDkCO+0+0+3)&0ffh
	movf	(??_ModDkCO+0+3)&0ffh,w
	xorlw	80h
	movwf	(??_ModDkCO+4+0)&0ffh
	movf	((ModDkCO@m))&0ffh,w
	subwf	(??_ModDkCO+0+0)&0ffh,w
	movf	((ModDkCO@m+1))&0ffh,w
	subwfb	(??_ModDkCO+0+1)&0ffh,w
	movf	((ModDkCO@m+2))&0ffh,w
	subwfb	(??_ModDkCO+0+2)&0ffh,w
	movf	((ModDkCO@m+3))&0ffh,w
	xorlw	80h
	subwfb	(??_ModDkCO+4+0)&0ffh,w
	btfsc	status,0
	goto	u63271
	goto	u63270
u63271:
	goto	l33824
u63270:
	
l33822:; BSR set to: 0

	movff	0+((c:_rgl)+08h),(ModDkCO@p)
	goto	l2860
	line	364
	
l33824:; BSR set to: 0

;rgl.c: 363: else
;rgl.c: 364: if(m<PWM.MDMOD) p=PWM.MDMOD;
	movff	0+(_PWM+09h),??_ModDkCO+0+0	;volatile
	clrf	(??_ModDkCO+0+0+1)&0ffh
	clrf	(??_ModDkCO+0+0+2)&0ffh
	clrf	(??_ModDkCO+0+0+3)&0ffh
	movf	((ModDkCO@m+3))&0ffh,w
	xorlw	80h
	movwf	(??_ModDkCO+4+0)&0ffh
	movf	(??_ModDkCO+0+0)&0ffh,w
	subwf	((ModDkCO@m))&0ffh,w
	movf	(??_ModDkCO+0+1)&0ffh,w
	subwfb	((ModDkCO@m+1))&0ffh,w
	movf	(??_ModDkCO+0+2)&0ffh,w
	subwfb	((ModDkCO@m+2))&0ffh,w
	movf	(??_ModDkCO+0+3)&0ffh,w
	xorlw	80h
	subwfb	(??_ModDkCO+4+0)&0ffh,w
	btfsc	status,0
	goto	u63281
	goto	u63280
u63281:
	goto	l2861
u63280:
	
l33826:; BSR set to: 0

	movff	0+(_PWM+09h),(ModDkCO@p)	;volatile
	goto	l2860
	line	365
	
l2861:; BSR set to: 0

;rgl.c: 365: else p=m;
	movff	(ModDkCO@m),(ModDkCO@p)
	
l2860:; BSR set to: 0

	line	366
;rgl.c: 366: rgl.tmp_pwm=p;
	movff	(ModDkCO@p),0+((c:_rgl)+09h)
	line	367
	
l2857:
	return
	opt stack 0
GLOBAL	__end_of_ModDkCO
	__end_of_ModDkCO:
	signat	_ModDkCO,88
	global	_IncConstCOCW

;; *************** function _IncConstCOCW *****************
;; Defined at:
;;		line 742 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tstoi
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text137,class=CODE,space=0,reloc=2
global __ptext137
__ptext137:
psect	text137
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	742
	global	__size_of_IncConstCOCW
	__size_of_IncConstCOCW	equ	__end_of_IncConstCOCW-_IncConstCOCW
	
_IncConstCOCW:
	opt	stack 24
	line	743
	
l33828:; BSR set to: 1

;rgl.c: 743: if(Tstoi()) rgl.ytmp++;
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u63291
	goto	u63290
u63291:
	goto	l2978
u63290:
	
l33830:; BSR set to: 1

	incf	(0+((c:_rgl)+06h)),c
	goto	l2980
	line	744
	
l2978:; BSR set to: 1

;rgl.c: 744: else rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	745
	
l2980:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_IncConstCOCW
	__end_of_IncConstCOCW:
	signat	_IncConstCOCW,88
	global	_IncMaxCO

;; *************** function _IncMaxCO *****************
;; Defined at:
;;		line 446 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Trosnie
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text138,class=CODE,space=0,reloc=2
global __ptext138
__ptext138:
psect	text138
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	446
	global	__size_of_IncMaxCO
	__size_of_IncMaxCO	equ	__end_of_IncMaxCO-_IncMaxCO
	
_IncMaxCO:; BSR set to: 1

	opt	stack 24
	line	449
	
l33832:
;rgl.c: 447: unsigned char k;
;rgl.c: 449: if(Trosnie(1)) return;
	movlw	(01h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u63301
	goto	u63300
u63301:
	goto	l33836
u63300:
	goto	l2901
	line	451
	
l33836:
	line	452
	
l33838:
;rgl.c: 452: if(!rgl.fz)
	
	btfsc	((c:_rgl)),c,2
	goto	u63311
	goto	u63310
u63311:
	goto	l33850
u63310:
	line	454
	
l33840:
;rgl.c: 453: {
;rgl.c: 454: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
	movf	(0+((c:_rgl)+08h)),c,w
	movwf	(??_IncMaxCO+0+0)&0ffh,c
	clrf	(??_IncMaxCO+0+0+1)&0ffh,c

	movlw	06h
	addwf	(??_IncMaxCO+0+0),c
	movlw	0
	addwfc	(??_IncMaxCO+0+1),c
	movf	(??_IncMaxCO+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	0F1h
	btfsc	status,2
	subwf	(??_IncMaxCO+0+0),c,w
	btfss	status,0
	goto	u63321
	goto	u63320
u63321:
	goto	l33844
u63320:
	
l33842:
	movlw	low(0F0h)
	movwf	(0+((c:_rgl)+08h)),c
	goto	l33846
	line	455
	
l33844:
;rgl.c: 455: else rgl.xmod+=k;
	movlw	(06h)&0ffh
	addwf	(0+((c:_rgl)+08h)),c
	line	456
	
l33846:
;rgl.c: 456: if(rgl.xmod>PWM.MAXPWM) rgl.xmod=PWM.MAXPWM;
	movf	(0+((c:_rgl)+08h)),c,w
	movlb	0	; () banked
	cpfslt	(0+(_PWM+021h))&0ffh	;volatile
	goto	u63331
	goto	u63330
u63331:
	goto	l2901
u63330:
	
l33848:; BSR set to: 0

	movff	0+(_PWM+021h),0+((c:_rgl)+08h)	;volatile
	goto	l2901
	line	460
	
l33850:
;rgl.c: 458: else
;rgl.c: 459: {
;rgl.c: 460: if(PWM.MAXPWM>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+021h))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u63341
	goto	u63340
u63341:
	goto	l33858
u63340:
	line	462
	
l33852:; BSR set to: 0

;rgl.c: 461: {
;rgl.c: 462: if(rgl.xmod+k>PWM.MGMOD) rgl.xmod=PWM.MGMOD;
	movf	(0+((c:_rgl)+08h)),c,w
	movwf	(??_IncMaxCO+0+0)&0ffh,c
	clrf	(??_IncMaxCO+0+0+1)&0ffh,c

	movlw	06h
	addwf	(??_IncMaxCO+0+0),c
	movlw	0
	addwfc	(??_IncMaxCO+0+1),c
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	movwf	(??_IncMaxCO+2+0)&0ffh,c
	clrf	(??_IncMaxCO+2+0+1)&0ffh,c

	movf	(??_IncMaxCO+2+1),c,w
	xorlw	80h
	movwf	(??_IncMaxCO+4+0)&0ffh,c
	movf	(??_IncMaxCO+0+0),c,w
	subwf	(??_IncMaxCO+2+0),c,w
	movf	(??_IncMaxCO+0+1),c,w
	xorlw	80h
	subwfb	(??_IncMaxCO+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u63351
	goto	u63350
u63351:
	goto	l33856
u63350:
	
l33854:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+08h)	;volatile
	goto	l2901
	line	463
	
l33856:; BSR set to: 0

;rgl.c: 463: else rgl.xmod+=k;
	movlw	(06h)&0ffh
	addwf	(0+((c:_rgl)+08h)),c
	goto	l2901
	line	467
	
l33858:; BSR set to: 0

;rgl.c: 465: else
;rgl.c: 466: {
;rgl.c: 467: if(rgl.xmod+k>PWM.MAXPWM) rgl.xmod=PWM.MAXPWM;
	movf	(0+((c:_rgl)+08h)),c,w
	movwf	(??_IncMaxCO+0+0)&0ffh,c
	clrf	(??_IncMaxCO+0+0+1)&0ffh,c

	movlw	06h
	addwf	(??_IncMaxCO+0+0),c
	movlw	0
	addwfc	(??_IncMaxCO+0+1),c
	movf	(0+(_PWM+021h))&0ffh,w	;volatile
	movwf	(??_IncMaxCO+2+0)&0ffh,c
	clrf	(??_IncMaxCO+2+0+1)&0ffh,c

	movf	(??_IncMaxCO+2+1),c,w
	xorlw	80h
	movwf	(??_IncMaxCO+4+0)&0ffh,c
	movf	(??_IncMaxCO+0+0),c,w
	subwf	(??_IncMaxCO+2+0),c,w
	movf	(??_IncMaxCO+0+1),c,w
	xorlw	80h
	subwfb	(??_IncMaxCO+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u63361
	goto	u63360
u63361:
	goto	l33856
u63360:
	goto	l33848
	line	471
	
l2901:
	return
	opt stack 0
GLOBAL	__end_of_IncMaxCO
	__end_of_IncMaxCO:
	signat	_IncMaxCO,88
	global	_ModPruCO

;; *************** function _ModPruCO *****************
;; Defined at:
;;		line 373 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    1[BANK0 ] unsigned char 
;;  tmp             1    0[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tmaleje
;;		_Trowna
;;		_Trosnie
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text139,class=CODE,space=0,reloc=2
global __ptext139
__ptext139:
psect	text139
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	373
	global	__size_of_ModPruCO
	__size_of_ModPruCO	equ	__end_of_ModPruCO-_ModPruCO
	
_ModPruCO:
	opt	stack 24
	line	377
	
l33864:
;rgl.c: 374: static unsigned char l;
;rgl.c: 375: unsigned char tmp,k;
;rgl.c: 377: if(!rgl.fz)
	
	btfsc	((c:_rgl)),c,2
	goto	u63371
	goto	u63370
u63371:
	goto	l33892
u63370:
	line	379
	
l33866:
;rgl.c: 378: {
;rgl.c: 379: if(Tmaleje(0)||rgl.ytmp>2)
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfsc	status,0
	goto	u63381
	goto	u63380
u63381:
	goto	l2870
u63380:
	
l33868:
	lfsr	2,(c:_rgl)+06h
	movlw	(03h-1)
	cpfsgt	indf2
	goto	u63391
	goto	u63390
u63391:
	goto	l2872
u63390:
	
l2870:
	line	381
;rgl.c: 380: {
;rgl.c: 381: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	382
	
l33870:
;rgl.c: 382: if(PWM.BufPWM>rgl.xmod) return;
	movlb	0	; () banked
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u63401
	goto	u63400
u63401:
	goto	l33874
u63400:
	goto	l2872
	
l33872:; BSR set to: 0

	goto	l2872
	line	383
	
l33874:; BSR set to: 0

;rgl.c: 383: tmp=rgl.xmod-PWM.BufPWM;
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	movwf	((ModPruCO@tmp))&0ffh
	line	384
	
l33876:; BSR set to: 0

;rgl.c: 384: k=6;
	movlw	low(06h)
	movwf	((ModPruCO@k))&0ffh
	line	385
	
l33878:; BSR set to: 0

;rgl.c: 385: if(k>tmp) k=tmp;
	movlw	(06h)&0ffh
	cpfslt	((ModPruCO@tmp))&0ffh
	goto	u63411
	goto	u63410
u63411:
	goto	l33882
u63410:
	
l33880:; BSR set to: 0

	movff	(ModPruCO@tmp),(ModPruCO@k)
	line	386
	
l33882:; BSR set to: 0

;rgl.c: 386: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	((ModPruCO@k))&0ffh,w
	movff	0+((c:_rgl)+07h),??_ModPruCO+0+0
	clrf	(??_ModPruCO+0+0+1)&0ffh,c
	addwf	(??_ModPruCO+0+0),c
	movlw	0
	addwfc	(??_ModPruCO+0+1),c
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	movwf	(??_ModPruCO+2+0)&0ffh,c
	clrf	(??_ModPruCO+2+0+1)&0ffh,c

	movf	(??_ModPruCO+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCO+4+0)&0ffh,c
	movf	(??_ModPruCO+0+0),c,w
	subwf	(??_ModPruCO+2+0),c,w
	movf	(??_ModPruCO+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCO+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u63421
	goto	u63420
u63421:
	goto	l33886
u63420:
	
l33884:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	goto	l2872
	line	387
	
l33886:; BSR set to: 0

;rgl.c: 387: else rgl.srp+=k;
	movf	((ModPruCO@k))&0ffh,w
	addwf	(0+((c:_rgl)+07h)),c
	goto	l2872
	line	393
	
l33892:
;rgl.c: 391: else
;rgl.c: 392: {
;rgl.c: 393: if(!Trowna())
	call	_Trowna	;wreg free
	btfsc	status,0
	goto	u63431
	goto	u63430
u63431:
	goto	l2877
u63430:
	line	395
	
l33894:
;rgl.c: 394: {
;rgl.c: 395: if(DtCO.DAD_CO>DtCO.AC_CO)
	movlb	0	; () banked
	movf	(0+(_DtCO+0Eh))&0ffh,w
	cpfslt	(0+(_DtCO+0Ch))&0ffh
	goto	u63441
	goto	u63440
u63441:
	goto	l33924
u63440:
	line	397
	
l33896:; BSR set to: 0

;rgl.c: 396: {
;rgl.c: 397: if(Tmaleje(0)) return;
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfss	status,0
	goto	u63451
	goto	u63450
u63451:
	goto	l33900
u63450:
	goto	l2872
	line	398
	
l33900:; BSR set to: 0

;rgl.c: 398: if(l>=2)
	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCO@l))&0ffh
	goto	u63461
	goto	u63460
u63461:
	goto	l2880
u63460:
	line	400
	
l33902:; BSR set to: 1

;rgl.c: 399: {
;rgl.c: 400: k=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	((ModPruCO@k))&0ffh
	line	401
	
l33904:; BSR set to: 0

;rgl.c: 401: l=0;
	movlb	1	; () banked
	clrf	((ModPruCO@l))&0ffh
	line	402
;rgl.c: 402: }
	goto	l33908
	line	403
	
l2880:; BSR set to: 1

	line	405
;rgl.c: 403: else
;rgl.c: 404: {
;rgl.c: 405: k=0;
	movlb	0	; () banked
	clrf	((ModPruCO@k))&0ffh
	line	406
	
l33906:; BSR set to: 0

;rgl.c: 406: l++;
	movlb	1	; () banked
	incf	((ModPruCO@l))&0ffh
	line	408
	
l33908:; BSR set to: 1

;rgl.c: 407: }
;rgl.c: 408: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM.MDMOD;
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPruCO+0+0)&0ffh,c
	clrf	(??_ModPruCO+0+0+1)&0ffh,c

	movf	((ModPruCO@k))&0ffh,w
	movff	0+((c:_rgl)+07h),??_ModPruCO+2+0
	clrf	(??_ModPruCO+2+0+1)&0ffh,c
	subwf	(??_ModPruCO+2+0),c
	movlw	0
	subwfb	(??_ModPruCO+2+1),c
	movf	(??_ModPruCO+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCO+4+0)&0ffh,c
	movf	(??_ModPruCO+0+0),c,w
	subwf	(??_ModPruCO+2+0),c,w
	movf	(??_ModPruCO+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCO+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u63471
	goto	u63470
u63471:
	goto	l33912
u63470:
	
l33910:; BSR set to: 0

	movff	0+(_PWM+09h),0+((c:_rgl)+07h)	;volatile
	goto	l33914
	line	409
	
l33912:; BSR set to: 0

;rgl.c: 409: else rgl.srp-=k;
	movf	((ModPruCO@k))&0ffh,w
	subwf	(0+((c:_rgl)+07h)),c
	line	410
	
l33914:; BSR set to: 0

;rgl.c: 410: if(rgl.srp>PWM.MAXPWM) rgl.srp=PWM.MAXPWM;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+(_PWM+021h))&0ffh	;volatile
	goto	u63481
	goto	u63480
u63481:
	goto	l33918
u63480:
	
l33916:; BSR set to: 0

	movff	0+(_PWM+021h),0+((c:_rgl)+07h)	;volatile
	line	411
	
l33918:; BSR set to: 0

;rgl.c: 411: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u63491
	goto	u63490
u63491:
	goto	l2872
u63490:
	
l33920:; BSR set to: 0

	movff	0+((c:_rgl)+07h),0+((c:_rgl)+08h)
	goto	l2872
	line	416
	
l33924:; BSR set to: 0

;rgl.c: 414: else
;rgl.c: 415: {
;rgl.c: 416: if(Trosnie(0)) return;
	movlw	(0)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u63501
	goto	u63500
u63501:
	goto	l33928
u63500:
	goto	l2872
	line	417
	
l33928:; BSR set to: 0

;rgl.c: 417: if(l>=1)
	movlb	1	; () banked
	movf	((ModPruCO@l))&0ffh,w
	btfsc	status,2
	goto	u63511
	goto	u63510
u63511:
	goto	l2888
u63510:
	line	419
	
l33930:; BSR set to: 1

;rgl.c: 418: {
;rgl.c: 419: k=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	((ModPruCO@k))&0ffh
	line	420
	
l33932:; BSR set to: 0

;rgl.c: 420: l=0;
	movlb	1	; () banked
	clrf	((ModPruCO@l))&0ffh
	line	421
;rgl.c: 421: }
	goto	l33936
	line	422
	
l2888:; BSR set to: 1

	line	424
;rgl.c: 422: else
;rgl.c: 423: {
;rgl.c: 424: k=0;
	movlb	0	; () banked
	clrf	((ModPruCO@k))&0ffh
	line	425
	
l33934:; BSR set to: 0

;rgl.c: 425: l++;
	movlb	1	; () banked
	incf	((ModPruCO@l))&0ffh
	line	427
	
l33936:; BSR set to: 1

;rgl.c: 426: }
;rgl.c: 427: if(PWM.MAXPWM>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+021h))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u63521
	goto	u63520
u63521:
	goto	l33944
u63520:
	line	429
	
l33938:; BSR set to: 0

;rgl.c: 428: {
;rgl.c: 429: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	((ModPruCO@k))&0ffh,w
	movff	0+((c:_rgl)+07h),??_ModPruCO+0+0
	clrf	(??_ModPruCO+0+0+1)&0ffh,c
	addwf	(??_ModPruCO+0+0),c
	movlw	0
	addwfc	(??_ModPruCO+0+1),c
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	movwf	(??_ModPruCO+2+0)&0ffh,c
	clrf	(??_ModPruCO+2+0+1)&0ffh,c

	movf	(??_ModPruCO+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCO+4+0)&0ffh,c
	movf	(??_ModPruCO+0+0),c,w
	subwf	(??_ModPruCO+2+0),c,w
	movf	(??_ModPruCO+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCO+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u63531
	goto	u63530
u63531:
	goto	l33942
u63530:
	
l33940:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	goto	l33950
	line	430
	
l33942:; BSR set to: 0

;rgl.c: 430: else rgl.srp+=k;
	movf	((ModPruCO@k))&0ffh,w
	addwf	(0+((c:_rgl)+07h)),c
	goto	l33950
	line	434
	
l33944:; BSR set to: 0

;rgl.c: 432: else
;rgl.c: 433: {
;rgl.c: 434: if(rgl.srp+k>PWM.MAXPWM) rgl.srp=PWM.MAXPWM;
	movf	((ModPruCO@k))&0ffh,w
	movff	0+((c:_rgl)+07h),??_ModPruCO+0+0
	clrf	(??_ModPruCO+0+0+1)&0ffh,c
	addwf	(??_ModPruCO+0+0),c
	movlw	0
	addwfc	(??_ModPruCO+0+1),c
	movf	(0+(_PWM+021h))&0ffh,w	;volatile
	movwf	(??_ModPruCO+2+0)&0ffh,c
	clrf	(??_ModPruCO+2+0+1)&0ffh,c

	movf	(??_ModPruCO+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCO+4+0)&0ffh,c
	movf	(??_ModPruCO+0+0),c,w
	subwf	(??_ModPruCO+2+0),c,w
	movf	(??_ModPruCO+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCO+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u63541
	goto	u63540
u63541:
	goto	l33942
u63540:
	
l33946:; BSR set to: 0

	movff	0+(_PWM+021h),0+((c:_rgl)+07h)	;volatile
	line	437
	
l33950:; BSR set to: 0

;rgl.c: 436: }
;rgl.c: 437: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u63551
	goto	u63550
u63551:
	goto	l33872
u63550:
	goto	l33920
	line	439
	
l2877:
	movlb	1	; () banked
	clrf	((ModPruCO@l))&0ffh
	line	441
	
l2872:
	return
	opt stack 0
GLOBAL	__end_of_ModPruCO
	__end_of_ModPruCO:
	signat	_ModPruCO,88
	global	_ModPrzCO

;; *************** function _ModPrzCO *****************
;; Defined at:
;;		line 475 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Twyzsza
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text140,class=CODE,space=0,reloc=2
global __ptext140
__ptext140:
psect	text140
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	475
	global	__size_of_ModPrzCO
	__size_of_ModPrzCO	equ	__end_of_ModPrzCO-_ModPrzCO
	
_ModPrzCO:
	opt	stack 24
	line	478
	
l33954:
;rgl.c: 476: unsigned char k;
;rgl.c: 478: if(!rgl.nmod)
	
	btfsc	((c:_rgl)),c,5
	goto	u63561
	goto	u63560
u63561:
	goto	l33968
u63560:
	line	480
	
l33956:
;rgl.c: 479: {
;rgl.c: 480: if(Twyzsza(3))
	movlw	(03h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u63571
	goto	u63570
u63571:
	goto	l2921
u63570:
	line	482
	
l33958:
;rgl.c: 481: {
;rgl.c: 482: rgl.nmod=1;
	bsf	((c:_rgl)),c,5
	line	483
	
l33960:
	line	484
	
l33962:
;rgl.c: 484: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM.MDMOD;
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPrzCO+0+0)&0ffh,c
	clrf	(??_ModPrzCO+0+0+1)&0ffh,c

	movlw	low(-20)
	addwf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_ModPrzCO+2+0)&0ffh,c
	clrf	1+(??_ModPrzCO+2+0)&0ffh,c
	movlw	high(-20)
	addwfc	1+(??_ModPrzCO+2+0)&0ffh,c
	movf	(??_ModPrzCO+2+1),c,w
	xorlw	80h
	movwf	(??_ModPrzCO+4+0)&0ffh,c
	movf	(??_ModPrzCO+0+0),c,w
	subwf	(??_ModPrzCO+2+0),c,w
	movf	(??_ModPrzCO+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPrzCO+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u63581
	goto	u63580
u63581:
	goto	l33966
u63580:
	
l33964:; BSR set to: 0

	movff	0+(_PWM+09h),0+((c:_rgl)+07h)	;volatile
	goto	l2921
	line	485
	
l33966:; BSR set to: 0

;rgl.c: 485: else rgl.srp-=k;
	movlw	(014h)&0ffh
	subwf	(0+((c:_rgl)+07h)),c
	goto	l2921
	line	490
	
l33968:
;rgl.c: 488: else
;rgl.c: 489: {
;rgl.c: 490: if(!Twyzsza(2))
	movlw	(02h)&0ffh
	
	call	_Twyzsza
	btfsc	status,0
	goto	u63591
	goto	u63590
u63591:
	goto	l2921
u63590:
	line	491
	
l33970:
;rgl.c: 491: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	493
	
l2921:
	return
	opt stack 0
GLOBAL	__end_of_ModPrzCO
	__end_of_ModPrzCO:
	signat	_ModPrzCO,88
	global	_PropOPT

;; *************** function _PropOPT *****************
;; Defined at:
;;		line 497 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_WriteOPWM
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text141,class=CODE,space=0,reloc=2
global __ptext141
__ptext141:
psect	text141
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	497
	global	__size_of_PropOPT
	__size_of_PropOPT	equ	__end_of_PropOPT-_PropOPT
	
_PropOPT:
	opt	stack 23
	line	498
	
l33972:
;rgl.c: 498: if(rgl.nmod)
	
	btfss	((c:_rgl)),c,5
	goto	u63601
	goto	u63600
u63601:
	goto	l33976
u63600:
	line	500
	
l33974:
;rgl.c: 499: {
;rgl.c: 500: WriteOPWM(PWM.MDMOD);
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	
	call	_WriteOPWM
	line	502
;rgl.c: 502: }
	goto	l2926
	line	505
	
l33976:
;rgl.c: 503: else
;rgl.c: 504: {
;rgl.c: 505: WriteOPWM(rgl.tmp_pwm);
	movf	(0+((c:_rgl)+09h)),c,w
	
	call	_WriteOPWM
	line	508
	
l2926:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PropOPT
	__end_of_PropOPT:
	signat	_PropOPT,88
	global	_StartMCW

;; *************** function _StartMCW *****************
;; Defined at:
;;		line 548 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_StartRTdS
;;		_FirstPCW
;;		___awdiv
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text142,class=CODE,space=0,reloc=2
global __ptext142
__ptext142:
psect	text142
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	548
	global	__size_of_StartMCW
	__size_of_StartMCW	equ	__end_of_StartMCW-_StartMCW
	
_StartMCW:; BSR set to: 0

	opt	stack 23
	line	549
	
l40826:; BSR set to: 0

;rgl.c: 549: if(rgl.btco||rgl.btcw) return;
	
	btfsc	((c:_rgl)),c,0
	goto	u81071
	goto	u81070
u81071:
	goto	l2940
u81070:
	
l40828:; BSR set to: 0

	
	btfss	((c:_rgl)),c,1
	goto	u81081
	goto	u81080
u81081:
	goto	l40830
u81080:
	goto	l2940
	line	550
	
l40830:; BSR set to: 0

;rgl.c: 550: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	551
	
l40832:; BSR set to: 1

;rgl.c: 551: DtCO.dDCO=0;
	movlb	0	; () banked
	clrf	(0+(_DtCO+09h))&0ffh
	line	552
	
l40834:; BSR set to: 0

;rgl.c: 552: DtCW.dDCW=0;
	clrf	(0+(_DtCW+08h))&0ffh
	line	553
	
l40836:; BSR set to: 0

;rgl.c: 553: DtCO.indCO=0;
	clrf	(0+(_DtCO+0Ah))&0ffh
	line	554
	
l40838:; BSR set to: 0

;rgl.c: 554: DtCW.indCW=0;
	clrf	(0+(_DtCW+0Ah))&0ffh
	line	555
	
l40840:; BSR set to: 0

;rgl.c: 555: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	556
	
l40842:; BSR set to: 0

;rgl.c: 556: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	557
	
l40844:; BSR set to: 0

;rgl.c: 557: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	559
	
l40846:; BSR set to: 0

;rgl.c: 559: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	560
	
l40848:; BSR set to: 0

;rgl.c: 560: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	561
	
l40850:; BSR set to: 0

;rgl.c: 561: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	562
	
l40852:; BSR set to: 0

;rgl.c: 562: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	563
	
l40854:; BSR set to: 0

;rgl.c: 563: rgl.inv_mod=0;
	bcf	(0+((c:_rgl)+01h)),c,0
	line	564
	
l40856:; BSR set to: 0

;rgl.c: 564: rgl.xmod=FirstPCW();
	call	_FirstPCW	;wreg free
	movwf	(0+((c:_rgl)+08h)),c
	line	565
	
l40858:; BSR set to: 2

;rgl.c: 565: tmr=1;
	movlw	low(01h)
	movwf	((c:_tmr)),c
	line	566
	
l40860:; BSR set to: 2

;rgl.c: 566: tmr2=1;
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((_tmr2))&0ffh
	line	567
	
l40862:; BSR set to: 1

;rgl.c: 567: pwm_center=PWM.MDMOD+(PWM.MGMOD-PWM.MDMOD)/2;
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	
	movwf	((?___awdiv))&0ffh
	clrf	1+((?___awdiv))&0ffh
	btfss	status,0
	decf	1+((?___awdiv))&0ffh
	
	movlw	high(02h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(02h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	addwf	(0+(_PWM+09h))&0ffh,w	;volatile
	movlb	1	; () banked
	movwf	((_pwm_center))&0ffh
	line	568
	
l40864:; BSR set to: 1

;rgl.c: 568: pwm_kwr=PWM.MDMOD+(PWM.MGMOD-PWM.MDMOD)/4;
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	
	movwf	((?___awdiv))&0ffh
	clrf	1+((?___awdiv))&0ffh
	btfss	status,0
	decf	1+((?___awdiv))&0ffh
	
	movlw	high(04h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(04h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	addwf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	((_pwm_kwr))&0ffh
	line	569
	
l2940:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartMCW
	__end_of_StartMCW:
	signat	_StartMCW,88
	global	_ReadDataCW

;; *************** function _ReadDataCW *****************
;; Defined at:
;;		line 756 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text143,class=CODE,space=0,reloc=2
global __ptext143
__ptext143:
psect	text143
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	756
	global	__size_of_ReadDataCW
	__size_of_ReadDataCW	equ	__end_of_ReadDataCW-_ReadDataCW
	
_ReadDataCW:; BSR set to: 0

	opt	stack 25
	line	757
	
l34018:; BSR set to: 0

;rgl.c: 757: rgl.x_t=DtCW.DCW;
	movff	0+(_DtCW+07h),0+((c:_rgl)+02h)
	line	758
;rgl.c: 758: rgl.x_f=DtCO.DCO;
	movff	0+(_DtCO+08h),0+((c:_rgl)+03h)
	line	759
;rgl.c: 759: rgl.x_dt=DtCW.dDCW;
	movff	0+(_DtCW+08h),0+((c:_rgl)+04h)
	line	760
;rgl.c: 760: rgl.x_df=DtCO.dDCO;
	movff	0+(_DtCO+09h),0+((c:_rgl)+05h)
	line	761
	
l2986:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ReadDataCW
	__end_of_ReadDataCW:
	signat	_ReadDataCW,88
	global	_ModToCW

;; *************** function _ModToCW *****************
;; Defined at:
;;		line 720 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ClrMod
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text144,class=CODE,space=0,reloc=2
global __ptext144
__ptext144:
psect	text144
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	720
	global	__size_of_ModToCW
	__size_of_ModToCW	equ	__end_of_ModToCW-_ModToCW
	
_ModToCW:; BSR set to: 0

	opt	stack 24
	line	721
	
l34020:; BSR set to: 0

;rgl.c: 721: rgl.btcw=1;
	bsf	((c:_rgl)),c,1
	line	722
;rgl.c: 722: if(rgl.btco)
	
	btfss	((c:_rgl)),c,0
	goto	u63631
	goto	u63630
u63631:
	goto	l2971
u63630:
	line	724
	
l34022:; BSR set to: 0

;rgl.c: 723: {
;rgl.c: 724: rgl.btco=0;
	bcf	((c:_rgl)),c,0
	line	725
	
l34024:; BSR set to: 0

;rgl.c: 725: ClrMod();
	call	_ClrMod	;wreg free
	line	727
	
l2971:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModToCW
	__end_of_ModToCW:
	signat	_ModToCW,88
	global	_ModZgCW

;; *************** function _ModZgCW *****************
;; Defined at:
;;		line 765 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4    1[BANK2 ] long 
;;  p               1    0[BANK2 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : D/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       5       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       10 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tnizsza
;;		_Twyzsza
;;		_Tstoi
;;		___wmul
;;		___aldiv
;;		___lmul
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text145,class=CODE,space=0,reloc=2
global __ptext145
__ptext145:
psect	text145
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	765
	global	__size_of_ModZgCW
	__size_of_ModZgCW	equ	__end_of_ModZgCW-_ModZgCW
	
_ModZgCW:; BSR set to: 0

	opt	stack 24
	line	768
	
l34026:; BSR set to: 0

;rgl.c: 766: signed long m;
;rgl.c: 767: unsigned char p;
;rgl.c: 768: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u63641
	goto	u63640
u63641:
	goto	l34032
u63640:
	line	770
	
l34028:; BSR set to: 0

;rgl.c: 769: {
;rgl.c: 770: if(Tnizsza(3))
	movlw	(03h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u63651
	goto	u63650
u63651:
	goto	l2992
u63650:
	line	772
	
l34030:; BSR set to: 0

;rgl.c: 771: {
;rgl.c: 772: rgl.xmod=PWM.BufPWM;
	movff	0+(_PWM+01h),0+((c:_rgl)+08h)	;volatile
	line	773
;rgl.c: 773: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	774
;rgl.c: 774: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	775
;rgl.c: 775: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	776
;rgl.c: 776: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	780
;rgl.c: 777: }
	
l34032:; BSR set to: 0

;rgl.c: 779: }
;rgl.c: 780: if(Twyzsza(0)&&Tstoi())
	movlw	(0)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u63661
	goto	u63660
u63661:
	goto	l34042
u63660:
	
l34034:; BSR set to: 0

	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u63671
	goto	u63670
u63671:
	goto	l34042
u63670:
	line	782
	
l34036:; BSR set to: 0

;rgl.c: 781: {
;rgl.c: 782: rgl.fz=1;
	bsf	((c:_rgl)),c,2
	line	783
;rgl.c: 783: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	784
;rgl.c: 784: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	785
;rgl.c: 785: rgl.srp=PWM.BufPWM;
	movff	0+(_PWM+01h),0+((c:_rgl)+07h)	;volatile
	line	786
;rgl.c: 786: rgl.xmod=PWM.BufPWM;
	movff	0+(_PWM+01h),0+((c:_rgl)+08h)	;volatile
	line	787
	
l34038:; BSR set to: 0

;rgl.c: 787: if(rgl.xmod>PWM.MGMOD)
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u63681
	goto	u63680
u63681:
	goto	l2992
u63680:
	line	789
	
l34040:; BSR set to: 0

;rgl.c: 788: {
;rgl.c: 789: rgl.srp=PWM.MGMOD;
	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	line	790
;rgl.c: 790: rgl.xmod=PWM.MGMOD;
	movff	0+(_PWM+0Ah),0+((c:_rgl)+08h)	;volatile
	goto	l2992
	line	794
	
l34042:; BSR set to: 0

;rgl.c: 793: }
;rgl.c: 794: if(rgl.xmod>=PWM.MDMOD) m=(rgl.xmod-PWM.MDMOD)*10;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	btfss	status,0
	goto	u63691
	goto	u63690
u63691:
	goto	l2995
u63690:
	
l34044:; BSR set to: 0

	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	btfss	status,0
	decf	1+((c:?___wmul)),c
	
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movlb	2	; () banked
	movff	0+?___wmul,(ModZgCW@m)
	movff	1+?___wmul,(ModZgCW@m+1)
	movlw	0
	btfsc	((ModZgCW@m+1))&0ffh,7
	movlw	-1
	movwf	((ModZgCW@m+2))&0ffh
	movwf	((ModZgCW@m+3))&0ffh
	goto	l34046
	line	795
	
l2995:; BSR set to: 0

;rgl.c: 795: else m=0;
	movlb	2	; () banked
	clrf	((ModZgCW@m))&0ffh
	clrf	((ModZgCW@m+1))&0ffh
	clrf	((ModZgCW@m+2))&0ffh
	clrf	((ModZgCW@m+3))&0ffh

	line	796
	
l34046:; BSR set to: 2

;rgl.c: 796: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
	movff	(ModZgCW@m),(c:?___aldiv)
	movff	(ModZgCW@m+1),(c:?___aldiv+1)
	movff	(ModZgCW@m+2),(c:?___aldiv+2)
	movff	(ModZgCW@m+3),(c:?___aldiv+3)
	movlb	0	; () banked
	movf	(0+(_DtCW+0Eh))&0ffh,w
	movff	0+(_DtCW+0Dh),??_ModZgCW+0+0
	clrf	(??_ModZgCW+0+0+1)&0ffh
	subwf	(??_ModZgCW+0+0)&0ffh
	movlw	0
	subwfb	(??_ModZgCW+0+1)&0ffh
	movff	??_ModZgCW+0+0,0+((c:?___aldiv)+04h)
	movff	??_ModZgCW+0+1,1+((c:?___aldiv)+04h)
	movlw	0
	btfsc	(1+((c:?___aldiv)+04h)),c,7
	movlw	-1
	movwf	(2+((c:?___aldiv)+04h)),c
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movff	0+?___aldiv,(ModZgCW@m)
	movff	1+?___aldiv,(ModZgCW@m+1)
	movff	2+?___aldiv,(ModZgCW@m+2)
	movff	3+?___aldiv,(ModZgCW@m+3)
	line	797
;rgl.c: 797: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
	movff	(ModZgCW@m),(c:?___lmul)
	movff	(ModZgCW@m+1),(c:?___lmul+1)
	movff	(ModZgCW@m+2),(c:?___lmul+2)
	movff	(ModZgCW@m+3),(c:?___lmul+3)
	movf	(0+(_DtCW+0Eh))&0ffh,w
	movff	0+(_DtCW+0Ch),??_ModZgCW+0+0
	clrf	(??_ModZgCW+0+0+1)&0ffh
	subwf	(??_ModZgCW+0+0)&0ffh
	movlw	0
	subwfb	(??_ModZgCW+0+1)&0ffh
	movff	??_ModZgCW+0+0,0+((c:?___lmul)+04h)
	movff	??_ModZgCW+0+1,1+((c:?___lmul)+04h)
	movlw	0
	btfsc	(1+((c:?___lmul)+04h)),c,7
	movlw	-1
	movwf	(2+((c:?___lmul)+04h)),c
	movwf	(3+((c:?___lmul)+04h)),c
	call	___lmul	;wreg free
	movff	0+?___lmul,(ModZgCW@m)
	movff	1+?___lmul,(ModZgCW@m+1)
	movff	2+?___lmul,(ModZgCW@m+2)
	movff	3+?___lmul,(ModZgCW@m+3)
	line	798
	
l34048:
;rgl.c: 798: if(m<0) m=0;
	movlb	2	; () banked
	btfss	((ModZgCW@m+3))&0ffh,7
	goto	u63701
	goto	u63700
u63701:
	goto	l34052
u63700:
	
l34050:; BSR set to: 2

	clrf	((ModZgCW@m))&0ffh
	clrf	((ModZgCW@m+1))&0ffh
	clrf	((ModZgCW@m+2))&0ffh
	clrf	((ModZgCW@m+3))&0ffh

	line	799
	
l34052:; BSR set to: 2

;rgl.c: 799: m=m/10+PWM.MDMOD;
	movff	(ModZgCW@m),(c:?___aldiv)
	movff	(ModZgCW@m+1),(c:?___aldiv+1)
	movff	(ModZgCW@m+2),(c:?___aldiv+2)
	movff	(ModZgCW@m+3),(c:?___aldiv+3)
	movlw	low(0Ah)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(0Ah)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(0Ah)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(0Ah)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	addwf	(0+?___aldiv),c,w
	movlb	2	; () banked
	movwf	((ModZgCW@m))&0ffh
	movlw	0
	addwfc	(1+?___aldiv),c,w
	movwf	1+((ModZgCW@m))&0ffh
	movlw	0
	addwfc	(2+?___aldiv),c,w
	movwf	2+((ModZgCW@m))&0ffh
	movlw	0
	addwfc	(3+?___aldiv),c,w
	movwf	3+((ModZgCW@m))&0ffh
	line	800
	
l34054:; BSR set to: 2

;rgl.c: 800: if(m>0xff)
	movf	((ModZgCW@m+3))&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u63715
	movlw	0
	subwf	((ModZgCW@m+2))&0ffh,w
	bnz	u63715
	movlw	01h
	subwf	((ModZgCW@m+1))&0ffh,w
	bnz	u63715
	movlw	0
	subwf	((ModZgCW@m))&0ffh,w
u63715:

	btfss	status,0
	goto	u63711
	goto	u63710
u63711:
	goto	l2998
u63710:
	line	802
	
l34056:; BSR set to: 2

;rgl.c: 801: {
;rgl.c: 802: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	803
;rgl.c: 803: rgl.tmp_pwm=rgl.xmod;
	movff	0+((c:_rgl)+08h),0+((c:_rgl)+09h)
	line	804
;rgl.c: 804: return;
	goto	l2992
	line	805
	
l2998:; BSR set to: 2

	line	806
;rgl.c: 805: }
;rgl.c: 806: if(rgl.fz&&(rgl.xmod>m))
	
	btfss	((c:_rgl)),c,2
	goto	u63721
	goto	u63720
u63721:
	goto	l2999
u63720:
	
l34058:; BSR set to: 2

	movff	0+((c:_rgl)+08h),??_ModZgCW+0+0
	movlb	0	; () banked
	clrf	(??_ModZgCW+0+0+1)&0ffh
	clrf	(??_ModZgCW+0+0+2)&0ffh
	clrf	(??_ModZgCW+0+0+3)&0ffh
	movlb	2	; () banked
	movf	((ModZgCW@m+3))&0ffh,w
	xorlw	80h
	movlb	0	; () banked
	movwf	(??_ModZgCW+4+0)&0ffh
	movf	(??_ModZgCW+0+0)&0ffh,w
	movlb	2	; () banked
	subwf	((ModZgCW@m))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCW+0+1)&0ffh,w
	movlb	2	; () banked
	subwfb	((ModZgCW@m+1))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCW+0+2)&0ffh,w
	movlb	2	; () banked
	subwfb	((ModZgCW@m+2))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCW+0+3)&0ffh,w
	xorlw	80h
	subwfb	(??_ModZgCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u63731
	goto	u63730
u63731:
	goto	l2999
u63730:
	line	807
	
l34060:; BSR set to: 0

;rgl.c: 807: rgl.srp=(rgl.xmod-m);
	movlb	2	; () banked
	movf	((ModZgCW@m))&0ffh,w
	subwf	(0+((c:_rgl)+08h)),c,w
	movwf	(0+((c:_rgl)+07h)),c
	
l2999:
	line	808
;rgl.c: 808: m+=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	movlb	2	; () banked
	addwf	((ModZgCW@m))&0ffh
	movlw	0
	addwfc	((ModZgCW@m+1))&0ffh
	addwfc	((ModZgCW@m+2))&0ffh
	addwfc	((ModZgCW@m+3))&0ffh
	line	809
;rgl.c: 809: if(m>rgl.xmod) p=rgl.xmod;
	movff	0+((c:_rgl)+08h),??_ModZgCW+0+0
	movlb	0	; () banked
	clrf	(??_ModZgCW+0+0+1)&0ffh
	clrf	(??_ModZgCW+0+0+2)&0ffh
	clrf	(??_ModZgCW+0+0+3)&0ffh
	movf	(??_ModZgCW+0+3)&0ffh,w
	xorlw	80h
	movwf	(??_ModZgCW+4+0)&0ffh
	movlb	2	; () banked
	movf	((ModZgCW@m))&0ffh,w
	movlb	0	; () banked
	subwf	(??_ModZgCW+0+0)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCW@m+1))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ModZgCW+0+1)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCW@m+2))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ModZgCW+0+2)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCW@m+3))&0ffh,w
	xorlw	80h
	movlb	0	; () banked
	subwfb	(??_ModZgCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u63741
	goto	u63740
u63741:
	goto	l3000
u63740:
	
l34062:; BSR set to: 0

	movff	0+((c:_rgl)+08h),(ModZgCW@p)
	goto	l3001
	line	810
	
l3000:; BSR set to: 0

;rgl.c: 810: else p=m;
	movff	(ModZgCW@m),(ModZgCW@p)
	
l3001:; BSR set to: 0

	line	811
;rgl.c: 811: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	812
;rgl.c: 812: rgl.tmp_pwm=p;
	movff	(ModZgCW@p),0+((c:_rgl)+09h)
	line	813
	
l2992:
	return
	opt stack 0
GLOBAL	__end_of_ModZgCW
	__end_of_ModZgCW:
	signat	_ModZgCW,88
	global	_ModDkCW

;; *************** function _ModDkCW *****************
;; Defined at:
;;		line 817 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4    8[BANK0 ] long 
;;  p               1    7[BANK0 ] unsigned char 
;;  k               1    6[BANK0 ] unsigned char 
;;  ada             1    5[BANK0 ] char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : D/0
;;		On exit  : D/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       12 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Trowna
;;		_Tnizsza
;;		___wmul
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text146,class=CODE,space=0,reloc=2
global __ptext146
__ptext146:
psect	text146
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	817
	global	__size_of_ModDkCW
	__size_of_ModDkCW	equ	__end_of_ModDkCW-_ModDkCW
	
_ModDkCW:
	opt	stack 24
	line	822
	
l34064:
;rgl.c: 818: signed long m;
;rgl.c: 819: signed char ada;
;rgl.c: 820: unsigned char k,p;
;rgl.c: 822: if(!rgl.fz) return;
	
	btfsc	((c:_rgl)),c,2
	goto	u63751
	goto	u63750
u63751:
	goto	l34068
u63750:
	goto	l3005
	line	823
	
l34068:
;rgl.c: 823: ada=DtCW.AC_CW-DtCW.DAD_CW;
	movlb	0	; () banked
	movf	(0+(_DtCW+0Eh))&0ffh,w
	subwf	(0+(_DtCW+0Ch))&0ffh,w
	movwf	((ModDkCW@ada))&0ffh
	line	824
	
l34070:; BSR set to: 0

;rgl.c: 824: k=1;
	movlw	low(01h)
	movwf	((ModDkCW@k))&0ffh
	line	825
	
l34072:; BSR set to: 0

;rgl.c: 825: if(Trowna()) return;
	call	_Trowna	;wreg free
	btfss	status,0
	goto	u63761
	goto	u63760
u63761:
	goto	l34076
u63760:
	goto	l3005
	line	826
	
l34076:; BSR set to: 0

;rgl.c: 826: if(Tnizsza(0))
	movlw	(0)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u63771
	goto	u63770
u63771:
	goto	l34080
u63770:
	line	828
	
l34078:; BSR set to: 0

;rgl.c: 827: {
;rgl.c: 828: k=2;
	movlw	low(02h)
	movwf	((ModDkCW@k))&0ffh
	line	843
	
l34080:; BSR set to: 0

;rgl.c: 834: }
;rgl.c: 843: m=rgl.srp+k*ada;
	movff	(ModDkCW@k),(c:?___wmul)
	clrf	((c:?___wmul+1)),c
	movf	((ModDkCW@ada))&0ffh,w
	movwf	(0+((c:?___wmul)+02h)),c
	clrf	(1+((c:?___wmul)+02h)),c
	btfsc	(0+((c:?___wmul)+02h)),c,7
	decf	(1+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	(0+?___wmul),c,w
	movwf	(??_ModDkCW+0+0)&0ffh
	movlw	0
	addwfc	(1+?___wmul),c,w
	movwf	1+(??_ModDkCW+0+0)&0ffh
	movff	??_ModDkCW+0+0,(ModDkCW@m)
	movff	??_ModDkCW+0+1,(ModDkCW@m+1)
	movlw	0
	btfsc	((ModDkCW@m+1))&0ffh,7
	movlw	-1
	movwf	((ModDkCW@m+2))&0ffh
	movwf	((ModDkCW@m+3))&0ffh
	line	844
	
l34082:; BSR set to: 0

;rgl.c: 844: if(m>rgl.xmod) p=rgl.xmod;
	movff	0+((c:_rgl)+08h),??_ModDkCW+0+0
	clrf	(??_ModDkCW+0+0+1)&0ffh
	clrf	(??_ModDkCW+0+0+2)&0ffh
	clrf	(??_ModDkCW+0+0+3)&0ffh
	movf	(??_ModDkCW+0+3)&0ffh,w
	xorlw	80h
	movwf	(??_ModDkCW+4+0)&0ffh
	movf	((ModDkCW@m))&0ffh,w
	subwf	(??_ModDkCW+0+0)&0ffh,w
	movf	((ModDkCW@m+1))&0ffh,w
	subwfb	(??_ModDkCW+0+1)&0ffh,w
	movf	((ModDkCW@m+2))&0ffh,w
	subwfb	(??_ModDkCW+0+2)&0ffh,w
	movf	((ModDkCW@m+3))&0ffh,w
	xorlw	80h
	subwfb	(??_ModDkCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u63781
	goto	u63780
u63781:
	goto	l34086
u63780:
	
l34084:; BSR set to: 0

	movff	0+((c:_rgl)+08h),(ModDkCW@p)
	goto	l3009
	line	846
	
l34086:; BSR set to: 0

;rgl.c: 845: else
;rgl.c: 846: if(m<PWM.MDMOD) p=PWM.MDMOD;
	movff	0+(_PWM+09h),??_ModDkCW+0+0	;volatile
	clrf	(??_ModDkCW+0+0+1)&0ffh
	clrf	(??_ModDkCW+0+0+2)&0ffh
	clrf	(??_ModDkCW+0+0+3)&0ffh
	movf	((ModDkCW@m+3))&0ffh,w
	xorlw	80h
	movwf	(??_ModDkCW+4+0)&0ffh
	movf	(??_ModDkCW+0+0)&0ffh,w
	subwf	((ModDkCW@m))&0ffh,w
	movf	(??_ModDkCW+0+1)&0ffh,w
	subwfb	((ModDkCW@m+1))&0ffh,w
	movf	(??_ModDkCW+0+2)&0ffh,w
	subwfb	((ModDkCW@m+2))&0ffh,w
	movf	(??_ModDkCW+0+3)&0ffh,w
	xorlw	80h
	subwfb	(??_ModDkCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u63791
	goto	u63790
u63791:
	goto	l3010
u63790:
	
l34088:; BSR set to: 0

	movff	0+(_PWM+09h),(ModDkCW@p)	;volatile
	goto	l3009
	line	847
	
l3010:; BSR set to: 0

;rgl.c: 847: else p=m;
	movff	(ModDkCW@m),(ModDkCW@p)
	
l3009:; BSR set to: 0

	line	848
;rgl.c: 848: rgl.tmp_pwm=p;
	movff	(ModDkCW@p),0+((c:_rgl)+09h)
	line	849
	
l3005:
	return
	opt stack 0
GLOBAL	__end_of_ModDkCW
	__end_of_ModDkCW:
	signat	_ModDkCW,88
	global	_IncMaxCW

;; *************** function _IncMaxCW *****************
;; Defined at:
;;		line 1074 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Trosnie
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text147,class=CODE,space=0,reloc=2
global __ptext147
__ptext147:
psect	text147
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1074
	global	__size_of_IncMaxCW
	__size_of_IncMaxCW	equ	__end_of_IncMaxCW-_IncMaxCW
	
_IncMaxCW:
	opt	stack 24
	line	1079
	
l34090:; BSR set to: 1

;rgl.c: 1075: unsigned char k;
;rgl.c: 1079: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u63801
	goto	u63800
u63801:
	goto	l34102
u63800:
	line	1081
	
l34092:; BSR set to: 1

;rgl.c: 1080: {
;rgl.c: 1081: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u63811
	goto	u63810
u63811:
	goto	l34098
u63810:
	line	1083
	
l34094:; BSR set to: 0

;rgl.c: 1082: {
;rgl.c: 1083: if(rgl.xmod>PWM.MGMOD) rgl.xmod=PWM.MGMOD;
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u63821
	goto	u63820
u63821:
	goto	l3112
u63820:
	
l34096:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+08h)	;volatile
	goto	l3112
	line	1087
	
l34098:; BSR set to: 0

;rgl.c: 1085: else
;rgl.c: 1086: {
;rgl.c: 1087: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u63831
	goto	u63830
u63831:
	goto	l3112
u63830:
	
l34100:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+08h)	;volatile
	goto	l3112
	line	1093
	
l34102:; BSR set to: 1

;rgl.c: 1090: }
;rgl.c: 1093: if(Trosnie(2)&&!rgl.med_up)
	movlw	(02h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u63841
	goto	u63840
u63841:
	goto	l34122
u63840:
	
l34104:; BSR set to: 1

	
	btfsc	((c:_rgl)),c,3
	goto	u63851
	goto	u63850
u63851:
	goto	l34122
u63850:
	line	1095
	
l34106:; BSR set to: 1

;rgl.c: 1094: {
;rgl.c: 1095: rgl.med_up=1;
	bsf	((c:_rgl)),c,3
	line	1096
	
l34108:; BSR set to: 1

	line	1097
;rgl.c: 1097: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u63861
	goto	u63860
u63861:
	goto	l34116
u63860:
	line	1099
	
l34110:; BSR set to: 0

;rgl.c: 1098: {
;rgl.c: 1099: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_IncMaxCW+0+0)&0ffh,c
	clrf	(??_IncMaxCW+0+0+1)&0ffh,c

	movlw	05h
	addwf	(??_IncMaxCW+0+0),c
	movlw	0
	addwfc	(??_IncMaxCW+0+1),c
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	movwf	(??_IncMaxCW+2+0)&0ffh,c
	clrf	(??_IncMaxCW+2+0+1)&0ffh,c

	movf	(??_IncMaxCW+2+1),c,w
	xorlw	80h
	movwf	(??_IncMaxCW+4+0)&0ffh,c
	movf	(??_IncMaxCW+0+0),c,w
	subwf	(??_IncMaxCW+2+0),c,w
	movf	(??_IncMaxCW+0+1),c,w
	xorlw	80h
	subwfb	(??_IncMaxCW+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u63871
	goto	u63870
u63871:
	goto	l34114
u63870:
	
l34112:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	goto	l34122
	line	1100
	
l34114:; BSR set to: 0

;rgl.c: 1100: else rgl.srp+=k;
	movlw	(05h)&0ffh
	addwf	(0+((c:_rgl)+07h)),c
	goto	l34122
	line	1104
	
l34116:; BSR set to: 0

;rgl.c: 1102: else
;rgl.c: 1103: {
;rgl.c: 1104: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_IncMaxCW+0+0)&0ffh,c
	clrf	(??_IncMaxCW+0+0+1)&0ffh,c

	movlw	05h
	addwf	(??_IncMaxCW+0+0),c
	movlw	0
	addwfc	(??_IncMaxCW+0+1),c
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	movwf	(??_IncMaxCW+2+0)&0ffh,c
	clrf	(??_IncMaxCW+2+0+1)&0ffh,c

	movf	(??_IncMaxCW+2+1),c,w
	xorlw	80h
	movwf	(??_IncMaxCW+4+0)&0ffh,c
	movf	(??_IncMaxCW+0+0),c,w
	subwf	(??_IncMaxCW+2+0),c,w
	movf	(??_IncMaxCW+0+1),c,w
	xorlw	80h
	subwfb	(??_IncMaxCW+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u63881
	goto	u63880
u63881:
	goto	l34114
u63880:
	
l34118:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	line	1108
	
l34122:
;rgl.c: 1106: }
;rgl.c: 1107: }
;rgl.c: 1108: if(Trosnie(3)&&!rgl.fast_up)
	movlw	(03h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u63891
	goto	u63890
u63891:
	goto	l3120
u63890:
	
l34124:
	
	btfsc	((c:_rgl)),c,4
	goto	u63901
	goto	u63900
u63901:
	goto	l3120
u63900:
	line	1110
	
l34126:
;rgl.c: 1109: {
;rgl.c: 1110: rgl.fast_up=1;
	bsf	((c:_rgl)),c,4
	line	1111
	
l34128:
	line	1112
;rgl.c: 1112: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u63911
	goto	u63910
u63911:
	goto	l34136
u63910:
	line	1114
	
l34130:; BSR set to: 0

;rgl.c: 1113: {
;rgl.c: 1114: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_IncMaxCW+0+0)&0ffh,c
	clrf	(??_IncMaxCW+0+0+1)&0ffh,c

	movlw	08h
	addwf	(??_IncMaxCW+0+0),c
	movlw	0
	addwfc	(??_IncMaxCW+0+1),c
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	movwf	(??_IncMaxCW+2+0)&0ffh,c
	clrf	(??_IncMaxCW+2+0+1)&0ffh,c

	movf	(??_IncMaxCW+2+1),c,w
	xorlw	80h
	movwf	(??_IncMaxCW+4+0)&0ffh,c
	movf	(??_IncMaxCW+0+0),c,w
	subwf	(??_IncMaxCW+2+0),c,w
	movf	(??_IncMaxCW+0+1),c,w
	xorlw	80h
	subwfb	(??_IncMaxCW+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u63921
	goto	u63920
u63921:
	goto	l34134
u63920:
	
l34132:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	goto	l3120
	line	1115
	
l34134:; BSR set to: 0

;rgl.c: 1115: else rgl.srp+=k;
	movlw	(08h)&0ffh
	addwf	(0+((c:_rgl)+07h)),c
	goto	l3120
	line	1119
	
l34136:; BSR set to: 0

;rgl.c: 1117: else
;rgl.c: 1118: {
;rgl.c: 1119: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_IncMaxCW+0+0)&0ffh,c
	clrf	(??_IncMaxCW+0+0+1)&0ffh,c

	movlw	08h
	addwf	(??_IncMaxCW+0+0),c
	movlw	0
	addwfc	(??_IncMaxCW+0+1),c
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	movwf	(??_IncMaxCW+2+0)&0ffh,c
	clrf	(??_IncMaxCW+2+0+1)&0ffh,c

	movf	(??_IncMaxCW+2+1),c,w
	xorlw	80h
	movwf	(??_IncMaxCW+4+0)&0ffh,c
	movf	(??_IncMaxCW+0+0),c,w
	subwf	(??_IncMaxCW+2+0),c,w
	movf	(??_IncMaxCW+0+1),c,w
	xorlw	80h
	subwfb	(??_IncMaxCW+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u63931
	goto	u63930
u63931:
	goto	l34134
u63930:
	
l34138:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	line	1122
	
l3120:
	line	1125
;rgl.c: 1121: }
;rgl.c: 1122: }
;rgl.c: 1125: if(rgl.tmp_pwm>=pwm_kwr)
	movlb	0	; () banked
	movf	((_pwm_kwr))&0ffh,w
	subwf	(0+((c:_rgl)+09h)),c,w
	btfss	status,0
	goto	u63941
	goto	u63940
u63941:
	goto	l34146
u63940:
	line	1127
	
l34142:; BSR set to: 0

;rgl.c: 1126: {
;rgl.c: 1127: if(Trosnie(2)) return;
	movlw	(02h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u63951
	goto	u63950
u63951:
	goto	l34150
u63950:
	goto	l3112
	line	1131
	
l34146:; BSR set to: 0

;rgl.c: 1129: else
;rgl.c: 1130: {
;rgl.c: 1131: if(Trosnie(1)) return;
	movlw	(01h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u63961
	goto	u63960
u63961:
	goto	l34150
u63960:
	goto	l3112
	line	1133
	
l34150:; BSR set to: 0

	line	1134
	
l34152:; BSR set to: 0

;rgl.c: 1134: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
	movf	(0+((c:_rgl)+08h)),c,w
	movwf	(??_IncMaxCW+0+0)&0ffh,c
	clrf	(??_IncMaxCW+0+0+1)&0ffh,c

	movlw	05h
	addwf	(??_IncMaxCW+0+0),c
	movlw	0
	addwfc	(??_IncMaxCW+0+1),c
	movf	(??_IncMaxCW+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	0F1h
	btfsc	status,2
	subwf	(??_IncMaxCW+0+0),c,w
	btfss	status,0
	goto	u63971
	goto	u63970
u63971:
	goto	l34156
u63970:
	
l34154:; BSR set to: 0

	movlw	low(0F0h)
	movwf	(0+((c:_rgl)+08h)),c
	goto	l34158
	line	1135
	
l34156:; BSR set to: 0

;rgl.c: 1135: else rgl.xmod+=k;
	movlw	(05h)&0ffh
	addwf	(0+((c:_rgl)+08h)),c
	line	1136
	
l34158:; BSR set to: 0

;rgl.c: 1136: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u63981
	goto	u63980
u63981:
	goto	l3112
u63980:
	goto	l34100
	line	1137
	
l3112:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_IncMaxCW
	__end_of_IncMaxCW:
	signat	_IncMaxCW,88
	global	_ModPruCW

;; *************** function _ModPruCW *****************
;; Defined at:
;;		line 855 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    1[BANK0 ] char 
;;  tmp             1    0[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tnizsza
;;		_Tstoi
;;		_Trosnie
;;		_Twyzsza
;;		_Tmaleje
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text148,class=CODE,space=0,reloc=2
global __ptext148
__ptext148:
psect	text148
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	855
	global	__size_of_ModPruCW
	__size_of_ModPruCW	equ	__end_of_ModPruCW-_ModPruCW
	
_ModPruCW:; BSR set to: 0

	opt	stack 24
	line	860
	
l34162:; BSR set to: 0

;rgl.c: 856: static unsigned char l,m,o,p,q,r,s;
;rgl.c: 857: unsigned char tmp;
;rgl.c: 858: signed char k;
;rgl.c: 860: if(!rgl.fz)
	
	btfsc	((c:_rgl)),c,2
	goto	u63991
	goto	u63990
u63991:
	goto	l3028
u63990:
	line	862
	
l34164:; BSR set to: 0

;rgl.c: 861: {
;rgl.c: 862: l=0;
	movlb	1	; () banked
	clrf	((ModPruCW@l))&0ffh
	line	863
;rgl.c: 863: m=0;
	clrf	((ModPruCW@m))&0ffh
	line	864
;rgl.c: 864: o=0;
	clrf	((ModPruCW@o))&0ffh
	line	865
;rgl.c: 865: p=0;
	clrf	((ModPruCW@p))&0ffh
	line	866
	
l34166:; BSR set to: 1

;rgl.c: 866: if(q<255) q++;
	incf	((ModPruCW@q))&0ffh,w

	btfsc	status,2
	goto	u64001
	goto	u64000
u64001:
	goto	l34170
u64000:
	
l34168:; BSR set to: 1

	incf	((ModPruCW@q))&0ffh
	line	867
	
l34170:; BSR set to: 1

;rgl.c: 867: if(s<255) s++;
	incf	((c:ModPruCW@s)),c,w

	btfsc	status,2
	goto	u64011
	goto	u64010
u64011:
	goto	l34174
u64010:
	
l34172:; BSR set to: 1

	incf	((c:ModPruCW@s)),c
	line	868
	
l34174:; BSR set to: 1

;rgl.c: 868: if(DtCW._newPCW) s=0;
	movlb	0	; () banked
	
	btfss	(0+(_DtCW+01h))&0ffh,0
	goto	u64021
	goto	u64020
u64021:
	goto	l34178
u64020:
	
l34176:; BSR set to: 0

	clrf	((c:ModPruCW@s)),c
	line	869
	
l34178:; BSR set to: 0

;rgl.c: 869: if(Tnizsza(0))
	movlw	(0)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u64031
	goto	u64030
u64031:
	goto	l3060
u64030:
	line	871
	
l34180:; BSR set to: 0

;rgl.c: 870: {
;rgl.c: 871: if(!Tnizsza(10))
	movlw	(0Ah)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u64041
	goto	u64040
u64041:
	goto	l3060
u64040:
	line	873
	
l34182:; BSR set to: 0

;rgl.c: 872: {
;rgl.c: 873: k=0;
	clrf	((ModPruCW@k))&0ffh
	line	874
	
l34184:; BSR set to: 0

;rgl.c: 874: if(rgl.tmp_pwm>=pwm_center)
	movlb	1	; () banked
	movf	((_pwm_center))&0ffh,w
	subwf	(0+((c:_rgl)+09h)),c,w
	btfss	status,0
	goto	u64051
	goto	u64050
u64051:
	goto	l34224
u64050:
	line	876
	
l34186:; BSR set to: 1

;rgl.c: 875: {
;rgl.c: 876: if(Tnizsza(5)&&Tstoi()&&s>=1)
	movlw	(05h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u64061
	goto	u64060
u64061:
	goto	l34196
u64060:
	
l34188:; BSR set to: 1

	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64071
	goto	u64070
u64071:
	goto	l34196
u64070:
	
l34190:; BSR set to: 1

	movf	((c:ModPruCW@s)),c,w
	btfsc	status,2
	goto	u64081
	goto	u64080
u64081:
	goto	l34196
u64080:
	line	878
	
l34192:; BSR set to: 1

;rgl.c: 877: {
;rgl.c: 878: s=0;
	clrf	((c:ModPruCW@s)),c
	line	879
	
l34194:; BSR set to: 1

;rgl.c: 879: k=20;
	movlw	low(014h)
	movlb	0	; () banked
	movwf	((ModPruCW@k))&0ffh
	line	880
;rgl.c: 880: }
	goto	l34282
	line	882
	
l34196:; BSR set to: 1

;rgl.c: 881: else
;rgl.c: 882: if(Tnizsza(4)&&Tstoi()&&s>=1)
	movlw	(04h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u64091
	goto	u64090
u64091:
	goto	l34206
u64090:
	
l34198:; BSR set to: 1

	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64101
	goto	u64100
u64101:
	goto	l34206
u64100:
	
l34200:; BSR set to: 1

	movf	((c:ModPruCW@s)),c,w
	btfsc	status,2
	goto	u64111
	goto	u64110
u64111:
	goto	l34206
u64110:
	line	884
	
l34202:; BSR set to: 1

;rgl.c: 883: {
;rgl.c: 884: s=0;
	clrf	((c:ModPruCW@s)),c
	line	885
	
l34204:; BSR set to: 1

;rgl.c: 885: k=15;
	movlw	low(0Fh)
	movlb	0	; () banked
	movwf	((ModPruCW@k))&0ffh
	line	886
;rgl.c: 886: }
	goto	l34282
	line	888
	
l34206:; BSR set to: 1

;rgl.c: 887: else
;rgl.c: 888: if(Tnizsza(2)&&Tstoi()&&s>=1)
	movlw	(02h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u64121
	goto	u64120
u64121:
	goto	l34216
u64120:
	
l34208:; BSR set to: 1

	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64131
	goto	u64130
u64131:
	goto	l34216
u64130:
	
l34210:; BSR set to: 1

	movf	((c:ModPruCW@s)),c,w
	btfsc	status,2
	goto	u64141
	goto	u64140
u64141:
	goto	l34216
u64140:
	line	890
	
l34212:
;rgl.c: 889: {
;rgl.c: 890: s=0;
	clrf	((c:ModPruCW@s)),c
	line	891
	
l34214:
;rgl.c: 891: k=10;
	movlw	low(0Ah)
	movlb	0	; () banked
	movwf	((ModPruCW@k))&0ffh
	line	892
;rgl.c: 892: }
	goto	l34282
	line	894
	
l34216:; BSR set to: 1

;rgl.c: 893: else
;rgl.c: 894: if(Tstoi()&&s>=1)
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64151
	goto	u64150
u64151:
	goto	l3038
u64150:
	
l34218:; BSR set to: 1

	movf	((c:ModPruCW@s)),c,w
	btfsc	status,2
	goto	u64161
	goto	u64160
u64161:
	goto	l3038
u64160:
	line	896
	
l34220:
;rgl.c: 895: {
;rgl.c: 896: s=0;
	clrf	((c:ModPruCW@s)),c
	line	897
	
l34222:
;rgl.c: 897: k=5;
	movlw	low(05h)
	movlb	0	; () banked
	movwf	((ModPruCW@k))&0ffh
	goto	l34282
	line	899
	
l3038:
	goto	l34282
	line	902
	
l34224:; BSR set to: 1

;rgl.c: 900: else
;rgl.c: 901: {
;rgl.c: 902: if(rgl.tmp_pwm>=pwm_kwr)
	movlb	0	; () banked
	movf	((_pwm_kwr))&0ffh,w
	subwf	(0+((c:_rgl)+09h)),c,w
	btfss	status,0
	goto	u64171
	goto	u64170
u64171:
	goto	l34264
u64170:
	line	904
	
l34226:; BSR set to: 0

;rgl.c: 903: {
;rgl.c: 904: if(Tnizsza(5)&&Tstoi()&&s>=1)
	movlw	(05h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u64181
	goto	u64180
u64181:
	goto	l34236
u64180:
	
l34228:; BSR set to: 0

	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64191
	goto	u64190
u64191:
	goto	l34236
u64190:
	
l34230:; BSR set to: 0

	movf	((c:ModPruCW@s)),c,w
	btfsc	status,2
	goto	u64201
	goto	u64200
u64201:
	goto	l34236
u64200:
	goto	l34212
	line	910
	
l34236:; BSR set to: 0

;rgl.c: 909: else
;rgl.c: 910: if(Tnizsza(4)&&Tstoi()&&s>=1)
	movlw	(04h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u64211
	goto	u64210
u64211:
	goto	l34246
u64210:
	
l34238:; BSR set to: 0

	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64221
	goto	u64220
u64221:
	goto	l34246
u64220:
	
l34240:; BSR set to: 0

	movf	((c:ModPruCW@s)),c,w
	btfsc	status,2
	goto	u64231
	goto	u64230
u64231:
	goto	l34246
u64230:
	line	912
	
l34242:; BSR set to: 0

;rgl.c: 911: {
;rgl.c: 912: s=0;
	clrf	((c:ModPruCW@s)),c
	line	913
	
l34244:; BSR set to: 0

;rgl.c: 913: k=8;
	movlw	low(08h)
	movwf	((ModPruCW@k))&0ffh
	line	914
;rgl.c: 914: }
	goto	l34282
	line	916
	
l34246:; BSR set to: 0

;rgl.c: 915: else
;rgl.c: 916: if(Tnizsza(2)&&Tstoi()&&s>=1)
	movlw	(02h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u64241
	goto	u64240
u64241:
	goto	l34256
u64240:
	
l34248:; BSR set to: 0

	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64251
	goto	u64250
u64251:
	goto	l34256
u64250:
	
l34250:; BSR set to: 0

	movf	((c:ModPruCW@s)),c,w
	btfsc	status,2
	goto	u64261
	goto	u64260
u64261:
	goto	l34256
u64260:
	goto	l34220
	line	922
	
l34256:; BSR set to: 0

;rgl.c: 921: else
;rgl.c: 922: if(Tstoi()&&s>=1)
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64271
	goto	u64270
u64271:
	goto	l3038
u64270:
	
l34258:; BSR set to: 0

	movf	((c:ModPruCW@s)),c,w
	btfsc	status,2
	goto	u64281
	goto	u64280
u64281:
	goto	l3038
u64280:
	line	924
	
l34260:; BSR set to: 0

;rgl.c: 923: {
;rgl.c: 924: s=0;
	clrf	((c:ModPruCW@s)),c
	line	925
	
l34262:; BSR set to: 0

;rgl.c: 925: k=2;
	movlw	low(02h)
	movwf	((ModPruCW@k))&0ffh
	goto	l34282
	line	930
	
l34264:; BSR set to: 0

;rgl.c: 928: else
;rgl.c: 929: {
;rgl.c: 930: if(Tnizsza(2)&&Tstoi()&&s>=1)
	movlw	(02h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u64291
	goto	u64290
u64291:
	goto	l34274
u64290:
	
l34266:; BSR set to: 0

	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64301
	goto	u64300
u64301:
	goto	l34274
u64300:
	
l34268:; BSR set to: 0

	movf	((c:ModPruCW@s)),c,w
	btfsc	status,2
	goto	u64311
	goto	u64310
u64311:
	goto	l34274
u64310:
	goto	l34220
	line	936
	
l34274:; BSR set to: 0

;rgl.c: 935: else
;rgl.c: 936: if(Tstoi()&&s>=1)
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64321
	goto	u64320
u64321:
	goto	l34282
u64320:
	
l34276:; BSR set to: 0

	movf	((c:ModPruCW@s)),c,w
	btfsc	status,2
	goto	u64331
	goto	u64330
u64331:
	goto	l34282
u64330:
	goto	l34260
	line	943
	
l34282:
;rgl.c: 940: }
;rgl.c: 941: }
;rgl.c: 942: }
;rgl.c: 943: if(rgl.tmp_pwm>=pwm_kwr)
	movlb	0	; () banked
	movf	((_pwm_kwr))&0ffh,w
	subwf	(0+((c:_rgl)+09h)),c,w
	btfss	status,0
	goto	u64341
	goto	u64340
u64341:
	goto	l34296
u64340:
	line	945
	
l34284:; BSR set to: 0

;rgl.c: 944: {
;rgl.c: 945: if(Trosnie(1)&&s>=1)
	movlw	(01h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u64351
	goto	u64350
u64351:
	goto	l3056
u64350:
	
l34286:; BSR set to: 0

	movf	((c:ModPruCW@s)),c,w
	btfsc	status,2
	goto	u64361
	goto	u64360
u64361:
	goto	l3056
u64360:
	line	947
	
l34288:; BSR set to: 0

;rgl.c: 946: {
;rgl.c: 947: s=0;
	clrf	((c:ModPruCW@s)),c
	line	948
	
l34290:; BSR set to: 0

;rgl.c: 948: k=10;
	movlw	low(0Ah)
	movwf	((ModPruCW@k))&0ffh
	line	949
	
l34292:; BSR set to: 0

;rgl.c: 949: if(Trosnie(2)) k=8;
	movlw	(02h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u64371
	goto	u64370
u64371:
	goto	l34296
u64370:
	
l34294:; BSR set to: 0

	movlw	low(08h)
	movwf	((ModPruCW@k))&0ffh
	goto	l34296
	line	951
	
l3056:; BSR set to: 0

	line	952
;rgl.c: 951: else
;rgl.c: 952: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	954
	
l34296:; BSR set to: 0

;rgl.c: 953: }
;rgl.c: 954: if(PWM.BufPWM>rgl.xmod) return;
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u64381
	goto	u64380
u64381:
	goto	l34300
u64380:
	goto	l3060
	line	955
	
l34300:; BSR set to: 0

;rgl.c: 955: tmp=rgl.xmod-PWM.BufPWM;
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	movwf	((ModPruCW@tmp))&0ffh
	line	956
;rgl.c: 956: if(k>tmp) k=tmp;
	movf	((ModPruCW@tmp))&0ffh,w
	bsf	status,0
	bsf	status,2
	btfss	((ModPruCW@k))&0ffh,7
	subwf	((ModPruCW@k))&0ffh,w
	btfss	status,0
	bsf	status,2
	btfsc	status,2
	goto	u64391
	goto	u64390
u64391:
	goto	l34304
u64390:
	
l34302:; BSR set to: 0

	movff	(ModPruCW@tmp),(ModPruCW@k)
	line	957
	
l34304:; BSR set to: 0

;rgl.c: 957: if(PWM.MMAXCW>PWM.MGMOD)
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u64401
	goto	u64400
u64401:
	goto	l34312
u64400:
	line	959
	
l34306:; BSR set to: 0

;rgl.c: 958: {
;rgl.c: 959: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW@k))&0ffh,w
	movwf	(??_ModPruCW+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW+0+0)&0ffh,c
	
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	movwf	(??_ModPruCW+2+0)&0ffh,c
	clrf	(??_ModPruCW+2+0+1)&0ffh,c

	movf	(??_ModPruCW+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW+4+0)&0ffh,c
	movf	(??_ModPruCW+0+0),c,w
	subwf	(??_ModPruCW+2+0),c,w
	movf	(??_ModPruCW+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u64411
	goto	u64410
u64411:
	goto	l34310
u64410:
	
l34308:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	goto	l3060
	line	960
	
l34310:; BSR set to: 0

;rgl.c: 960: else rgl.srp+=k;
	movf	((ModPruCW@k))&0ffh,w
	addwf	(0+((c:_rgl)+07h)),c
	goto	l3060
	line	964
	
l34312:; BSR set to: 0

;rgl.c: 962: else
;rgl.c: 963: {
;rgl.c: 964: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW@k))&0ffh,w
	movwf	(??_ModPruCW+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW+0+0)&0ffh,c
	
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	movwf	(??_ModPruCW+2+0)&0ffh,c
	clrf	(??_ModPruCW+2+0+1)&0ffh,c

	movf	(??_ModPruCW+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW+4+0)&0ffh,c
	movf	(??_ModPruCW+0+0),c,w
	subwf	(??_ModPruCW+2+0),c,w
	movf	(??_ModPruCW+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u64421
	goto	u64420
u64421:
	goto	l34310
u64420:
	
l34314:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	goto	l3060
	line	973
	
l3028:; BSR set to: 0

	line	975
;rgl.c: 976: r=0;
	movlb	1	; () banked
	clrf	((ModPruCW@q))&0ffh
	line	977
;rgl.c: 977: s=0;
	clrf	((c:ModPruCW@s)),c
	line	978
	
l34322:; BSR set to: 1

;rgl.c: 978: if(m<255) m++;
	incf	((ModPruCW@m))&0ffh,w

	btfsc	status,2
	goto	u64431
	goto	u64430
u64431:
	goto	l34326
u64430:
	
l34324:; BSR set to: 1

	incf	((ModPruCW@m))&0ffh
	line	979
	
l34326:; BSR set to: 1

;rgl.c: 979: if(p<255) p++;
	incf	((ModPruCW@p))&0ffh,w

	btfsc	status,2
	goto	u64441
	goto	u64440
u64441:
	goto	l34330
u64440:
	
l34328:; BSR set to: 1

	incf	((ModPruCW@p))&0ffh
	line	980
	
l34330:; BSR set to: 1

;rgl.c: 980: if(o<255) o++;
	incf	((ModPruCW@o))&0ffh,w

	btfsc	status,2
	goto	u64451
	goto	u64450
u64451:
	goto	l34334
u64450:
	
l34332:; BSR set to: 1

	incf	((ModPruCW@o))&0ffh
	line	981
	
l34334:; BSR set to: 1

;rgl.c: 981: if(DtCW.DAD_CW>DtCW.AC_CW)
	movlb	0	; () banked
	movf	(0+(_DtCW+0Eh))&0ffh,w
	cpfslt	(0+(_DtCW+0Ch))&0ffh
	goto	u64461
	goto	u64460
u64461:
	goto	l3074
u64460:
	line	983
	
l34336:; BSR set to: 0

;rgl.c: 982: {
;rgl.c: 983: k=0;
	clrf	((ModPruCW@k))&0ffh
	line	984
	
l34338:; BSR set to: 0

;rgl.c: 984: if(Trosnie(0)&&m>=2)
	movlw	(0)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u64471
	goto	u64470
u64471:
	goto	l34346
u64470:
	
l34340:; BSR set to: 0

	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW@m))&0ffh
	goto	u64481
	goto	u64480
u64481:
	goto	l34346
u64480:
	line	986
	
l34342:; BSR set to: 1

;rgl.c: 985: {
;rgl.c: 986: p=0;
	clrf	((ModPruCW@p))&0ffh
	line	987
;rgl.c: 987: o=0;
	clrf	((ModPruCW@o))&0ffh
	line	988
;rgl.c: 988: l=0;
	clrf	((ModPruCW@l))&0ffh
	line	989
;rgl.c: 989: m=0;
	clrf	((ModPruCW@m))&0ffh
	line	990
	
l34344:; BSR set to: 1

;rgl.c: 990: k=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	((ModPruCW@k))&0ffh
	line	991
;rgl.c: 991: }
	goto	l34362
	line	993
	
l34346:
;rgl.c: 992: else
;rgl.c: 993: if(Twyzsza(1))
	movlw	(01h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u64491
	goto	u64490
u64491:
	goto	l34358
u64490:
	line	995
	
l34348:
;rgl.c: 994: {
;rgl.c: 995: if(Tstoi())
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64501
	goto	u64500
u64501:
	goto	l34362
u64500:
	line	997
	
l34350:
;rgl.c: 996: {
;rgl.c: 997: if(l>=2)
	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW@l))&0ffh
	goto	u64511
	goto	u64510
u64511:
	goto	l3079
u64510:
	line	999
	
l34352:; BSR set to: 1

;rgl.c: 998: {
;rgl.c: 999: k=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	((ModPruCW@k))&0ffh
	line	1000
	
l34354:; BSR set to: 0

;rgl.c: 1000: if(Twyzsza(3)) k=2;
	movlw	(03h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u64521
	goto	u64520
u64521:
	goto	l34358
u64520:
	
l34356:; BSR set to: 0

	movlw	low(02h)
	movwf	((ModPruCW@k))&0ffh
	line	1001
	
l34358:
;rgl.c: 1001: l=0;
	movlb	1	; () banked
	clrf	((ModPruCW@l))&0ffh
	line	1002
;rgl.c: 1002: }
	goto	l34362
	line	1003
	
l3079:; BSR set to: 1

	line	1005
;rgl.c: 1003: else
;rgl.c: 1004: {
;rgl.c: 1005: k=0;
	movlb	0	; () banked
	clrf	((ModPruCW@k))&0ffh
	line	1006
	
l34360:; BSR set to: 0

;rgl.c: 1006: l++;
	movlb	1	; () banked
	incf	((ModPruCW@l))&0ffh
	line	1010
	
l34362:
;rgl.c: 1010: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u64531
	goto	u64530
u64531:
	goto	l34368
u64530:
	line	1012
	
l34364:; BSR set to: 0

;rgl.c: 1011: {
;rgl.c: 1012: if(rgl.srp>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u64541
	goto	u64540
u64541:
	goto	l34372
u64540:
	
l34366:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	goto	l34372
	line	1016
	
l34368:; BSR set to: 0

;rgl.c: 1014: else
;rgl.c: 1015: {
;rgl.c: 1016: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u64551
	goto	u64550
u64551:
	goto	l34372
u64550:
	
l34370:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	line	1018
	
l34372:; BSR set to: 0

;rgl.c: 1017: }
;rgl.c: 1018: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM.MDMOD;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPruCW+0+0)&0ffh,c
	clrf	(??_ModPruCW+0+0+1)&0ffh,c

	movf	((ModPruCW@k))&0ffh,w
	subwf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_ModPruCW+2+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfss	((ModPruCW@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW+2+0)&0ffh,c
	
	movf	(??_ModPruCW+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW+4+0)&0ffh,c
	movf	(??_ModPruCW+0+0),c,w
	subwf	(??_ModPruCW+2+0),c,w
	movf	(??_ModPruCW+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u64561
	goto	u64560
u64561:
	goto	l34376
u64560:
	
l34374:; BSR set to: 0

	movff	0+(_PWM+09h),0+((c:_rgl)+07h)	;volatile
	goto	l34378
	line	1019
	
l34376:; BSR set to: 0

;rgl.c: 1019: else rgl.srp-=k;
	movf	((ModPruCW@k))&0ffh,w
	subwf	(0+((c:_rgl)+07h)),c
	line	1022
	
l34378:; BSR set to: 0

;rgl.c: 1022: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u64571
	goto	u64570
u64571:
	goto	l3060
u64570:
	
l34380:; BSR set to: 0

	movff	0+((c:_rgl)+07h),0+((c:_rgl)+08h)
	goto	l3060
	line	1025
	
l3074:; BSR set to: 0

	line	1027
;rgl.c: 1025: else
;rgl.c: 1026: {
;rgl.c: 1027: k=0;
	clrf	((ModPruCW@k))&0ffh
	line	1028
	
l34384:; BSR set to: 0

;rgl.c: 1028: if(Tmaleje(0)&&m>=2)
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfss	status,0
	goto	u64581
	goto	u64580
u64581:
	goto	l34392
u64580:
	
l34386:; BSR set to: 0

	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW@m))&0ffh
	goto	u64591
	goto	u64590
u64591:
	goto	l34392
u64590:
	line	1030
	
l34388:; BSR set to: 1

;rgl.c: 1029: {
;rgl.c: 1030: p=0;
	clrf	((ModPruCW@p))&0ffh
	line	1031
;rgl.c: 1031: o=0;
	clrf	((ModPruCW@o))&0ffh
	line	1032
;rgl.c: 1032: l=0;
	clrf	((ModPruCW@l))&0ffh
	line	1033
;rgl.c: 1033: m=0;
	clrf	((ModPruCW@m))&0ffh
	line	1034
	
l34390:; BSR set to: 1

;rgl.c: 1034: k=5;
	movlw	low(05h)
	movlb	0	; () banked
	movwf	((ModPruCW@k))&0ffh
	line	1036
;rgl.c: 1036: }
	goto	l34404
	line	1038
	
l34392:
;rgl.c: 1037: else
;rgl.c: 1038: if(Tnizsza(1))
	movlw	(01h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u64601
	goto	u64600
u64601:
	goto	l34400
u64600:
	line	1040
	
l34394:
;rgl.c: 1039: {
;rgl.c: 1040: if(Tstoi())
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u64611
	goto	u64610
u64611:
	goto	l34404
u64610:
	line	1042
	
l34396:
;rgl.c: 1041: {
;rgl.c: 1042: if(l>=3)
	movlw	(03h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW@l))&0ffh
	goto	u64621
	goto	u64620
u64621:
	goto	l3095
u64620:
	line	1044
	
l34398:; BSR set to: 1

;rgl.c: 1043: {
;rgl.c: 1044: k=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	((ModPruCW@k))&0ffh
	line	1045
	
l34400:
;rgl.c: 1045: l=0;
	movlb	1	; () banked
	clrf	((ModPruCW@l))&0ffh
	line	1046
;rgl.c: 1046: }
	goto	l34404
	line	1047
	
l3095:; BSR set to: 1

	line	1049
;rgl.c: 1047: else
;rgl.c: 1048: {
;rgl.c: 1049: k=0;
	movlb	0	; () banked
	clrf	((ModPruCW@k))&0ffh
	line	1050
	
l34402:; BSR set to: 0

;rgl.c: 1050: l++;
	movlb	1	; () banked
	incf	((ModPruCW@l))&0ffh
	line	1054
	
l34404:
;rgl.c: 1054: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u64631
	goto	u64630
u64631:
	goto	l34412
u64630:
	line	1056
	
l34406:; BSR set to: 0

;rgl.c: 1055: {
;rgl.c: 1056: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW@k))&0ffh,w
	movwf	(??_ModPruCW+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW+0+0)&0ffh,c
	
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	movwf	(??_ModPruCW+2+0)&0ffh,c
	clrf	(??_ModPruCW+2+0+1)&0ffh,c

	movf	(??_ModPruCW+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW+4+0)&0ffh,c
	movf	(??_ModPruCW+0+0),c,w
	subwf	(??_ModPruCW+2+0),c,w
	movf	(??_ModPruCW+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u64641
	goto	u64640
u64641:
	goto	l34410
u64640:
	
l34408:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	goto	l34418
	line	1057
	
l34410:; BSR set to: 0

;rgl.c: 1057: else rgl.srp+=k;
	movf	((ModPruCW@k))&0ffh,w
	addwf	(0+((c:_rgl)+07h)),c
	goto	l34418
	line	1061
	
l34412:; BSR set to: 0

;rgl.c: 1059: else
;rgl.c: 1060: {
;rgl.c: 1061: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW@k))&0ffh,w
	movwf	(??_ModPruCW+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW+0+0)&0ffh,c
	
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	movwf	(??_ModPruCW+2+0)&0ffh,c
	clrf	(??_ModPruCW+2+0+1)&0ffh,c

	movf	(??_ModPruCW+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW+4+0)&0ffh,c
	movf	(??_ModPruCW+0+0),c,w
	subwf	(??_ModPruCW+2+0),c,w
	movf	(??_ModPruCW+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u64651
	goto	u64650
u64651:
	goto	l34410
u64650:
	
l34414:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	line	1064
	
l34418:; BSR set to: 0

;rgl.c: 1063: }
;rgl.c: 1064: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u64661
	goto	u64660
u64661:
	goto	l3060
u64660:
	goto	l34380
	line	1068
	
l3060:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModPruCW
	__end_of_ModPruCW:
	signat	_ModPruCW,88
	global	_ModPrzCW

;; *************** function _ModPrzCW *****************
;; Defined at:
;;		line 1168 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  r               2    1[BANK2 ] int 
;;  p               1    3[BANK2 ] unsigned char 
;;  maxmod          1    0[BANK2 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : C/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       5       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        9 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tnizsza
;;		___awdiv
;;		_Tmaleje
;;		_Twyzsza
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text149,class=CODE,space=0,reloc=2
global __ptext149
__ptext149:
psect	text149
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1168
	global	__size_of_ModPrzCW
	__size_of_ModPrzCW	equ	__end_of_ModPrzCW-_ModPrzCW
	
_ModPrzCW:; BSR set to: 0

	opt	stack 24
	line	1174
	
l34422:
;rgl.c: 1169: unsigned char p,maxmod;
;rgl.c: 1170: signed int r;
;rgl.c: 1171: static unsigned char timer1;
;rgl.c: 1174: if(Tnizsza(0))
	movlw	(0)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u64671
	goto	u64670
u64671:
	goto	l3138
u64670:
	line	1176
	
l34424:
;rgl.c: 1175: {
;rgl.c: 1176: if(PWM.MMAXCW<PWM.MGMOD) maxmod=PWM.MMAXCW;
	movlb	0	; () banked
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u64681
	goto	u64680
u64681:
	goto	l3139
u64680:
	
l34426:; BSR set to: 0

	movff	0+(_PWM+01Eh),(ModPrzCW@maxmod)	;volatile
	goto	l34428
	line	1177
	
l3139:; BSR set to: 0

;rgl.c: 1177: else maxmod=PWM.MGMOD;
	movff	0+(_PWM+0Ah),(ModPrzCW@maxmod)	;volatile
	line	1180
	
l34428:; BSR set to: 0

;rgl.c: 1180: if(rgl.tmp_pwm>=pwm_center)
	movlb	1	; () banked
	movf	((_pwm_center))&0ffh,w
	subwf	(0+((c:_rgl)+09h)),c,w
	btfss	status,0
	goto	u64691
	goto	u64690
u64691:
	goto	l34470
u64690:
	line	1182
	
l34430:; BSR set to: 1

;rgl.c: 1181: {
;rgl.c: 1182: if(rgl.xmod<=maxmod) p=rgl.xmod;
	movf	(0+((c:_rgl)+08h)),c,w
	movlb	2	; () banked
	subwf	((ModPrzCW@maxmod))&0ffh,w
	btfss	status,0
	goto	u64701
	goto	u64700
u64701:
	goto	l3142
u64700:
	
l34432:; BSR set to: 2

	movff	0+((c:_rgl)+08h),(ModPrzCW@p)
	goto	l34434
	line	1183
	
l3142:; BSR set to: 2

	line	1185
;rgl.c: 1183: else
;rgl.c: 1184: {
;rgl.c: 1185: p=maxmod;
	movff	(ModPrzCW@maxmod),(ModPrzCW@p)
	line	1186
;rgl.c: 1186: rgl.xmod=maxmod;
	movff	(ModPrzCW@maxmod),0+((c:_rgl)+08h)
	line	1188
	
l34434:; BSR set to: 2

;rgl.c: 1187: }
;rgl.c: 1188: if((DtCW.ddDCW>6)&&(tmr>1))
	movlb	0	; () banked
	movf	(0+(_DtCW+09h))&0ffh,w
	xorlw	80h
	addlw	-((07h)^80h)
	btfss	status,0
	goto	u64711
	goto	u64710
u64711:
	goto	l34446
u64710:
	
l34436:; BSR set to: 0

	movlw	(02h-1)
	cpfsgt	((c:_tmr)),c
	goto	u64721
	goto	u64720
u64721:
	goto	l34446
u64720:
	line	1190
	
l34438:; BSR set to: 0

;rgl.c: 1189: {
;rgl.c: 1190: tmr=0;
	clrf	((c:_tmr)),c
	line	1191
	
l34440:; BSR set to: 0

;rgl.c: 1191: r=p-PWM.MDMOD;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	
	movwf	((ModPrzCW@r))&0ffh
	clrf	1+((ModPrzCW@r))&0ffh
	btfss	status,0
	decf	1+((ModPrzCW@r))&0ffh
	
	line	1192
	
l34442:; BSR set to: 2

;rgl.c: 1192: if((p-(r/3))>PWM.MDMOD) p-=r/3;
	movff	(ModPrzCW@r),(?___awdiv)
	movff	(ModPrzCW@r+1),(?___awdiv+1)
	movlw	high(03h)
	movlb	0	; () banked
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(03h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	movlb	0	; () banked
	movwf	(??_ModPrzCW+0+0)&0ffh
	movf	(1+?___awdiv)&0ffh,w
	btfss	status,0
	incf	(1+?___awdiv)&0ffh,w
	clrf	1+(??_ModPrzCW+0+0)&0ffh
	subwf	1+(??_ModPrzCW+0+0)&0ffh
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPrzCW+2+0)&0ffh
	clrf	(??_ModPrzCW+2+0+1)&0ffh

	movf	(??_ModPrzCW+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW+4+0)&0ffh
	movf	(??_ModPrzCW+0+0)&0ffh,w
	subwf	(??_ModPrzCW+2+0)&0ffh,w
	movf	(??_ModPrzCW+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u64731
	goto	u64730
u64731:
	goto	l3145
u64730:
	
l34444:; BSR set to: 0

	movff	(ModPrzCW@r),(?___awdiv)
	movff	(ModPrzCW@r+1),(?___awdiv+1)
	movlw	high(03h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(03h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh
	goto	l3146
	line	1193
	
l3145:; BSR set to: 0

;rgl.c: 1193: else p=PWM.MDMOD;
	movff	0+(_PWM+09h),(ModPrzCW@p)	;volatile
	
l3146:
	line	1194
;rgl.c: 1194: rgl.xmod=p;
	movff	(ModPrzCW@p),0+((c:_rgl)+08h)
	line	1195
;rgl.c: 1195: }
	goto	l3138
	line	1197
	
l34446:; BSR set to: 0

;rgl.c: 1196: else
;rgl.c: 1197: if((DtCW.ddDCW>4)&&(tmr>1))
	movf	(0+(_DtCW+09h))&0ffh,w
	xorlw	80h
	addlw	-((05h)^80h)
	btfss	status,0
	goto	u64741
	goto	u64740
u64741:
	goto	l34458
u64740:
	
l34448:; BSR set to: 0

	movlw	(02h-1)
	cpfsgt	((c:_tmr)),c
	goto	u64751
	goto	u64750
u64751:
	goto	l34458
u64750:
	line	1199
	
l34450:; BSR set to: 0

;rgl.c: 1198: {
;rgl.c: 1199: tmr=0;
	clrf	((c:_tmr)),c
	line	1200
	
l34452:; BSR set to: 0

;rgl.c: 1200: r=p-PWM.MDMOD;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	
	movwf	((ModPrzCW@r))&0ffh
	clrf	1+((ModPrzCW@r))&0ffh
	btfss	status,0
	decf	1+((ModPrzCW@r))&0ffh
	
	line	1201
	
l34454:; BSR set to: 2

;rgl.c: 1201: if((p-(r/4))>PWM.MDMOD) p-=r/4;
	movff	(ModPrzCW@r),(?___awdiv)
	movff	(ModPrzCW@r+1),(?___awdiv+1)
	movlw	high(04h)
	movlb	0	; () banked
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(04h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	movlb	0	; () banked
	movwf	(??_ModPrzCW+0+0)&0ffh
	movf	(1+?___awdiv)&0ffh,w
	btfss	status,0
	incf	(1+?___awdiv)&0ffh,w
	clrf	1+(??_ModPrzCW+0+0)&0ffh
	subwf	1+(??_ModPrzCW+0+0)&0ffh
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPrzCW+2+0)&0ffh
	clrf	(??_ModPrzCW+2+0+1)&0ffh

	movf	(??_ModPrzCW+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW+4+0)&0ffh
	movf	(??_ModPrzCW+0+0)&0ffh,w
	subwf	(??_ModPrzCW+2+0)&0ffh,w
	movf	(??_ModPrzCW+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u64761
	goto	u64760
u64761:
	goto	l3145
u64760:
	
l34456:; BSR set to: 0

	movff	(ModPrzCW@r),(?___awdiv)
	movff	(ModPrzCW@r+1),(?___awdiv+1)
	movlw	high(04h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(04h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh
	goto	l3146
	line	1206
	
l34458:; BSR set to: 0

;rgl.c: 1205: else
;rgl.c: 1206: if((DtCW.ddDCW>3)&&(tmr>0))
	movf	(0+(_DtCW+09h))&0ffh,w
	xorlw	80h
	addlw	-((04h)^80h)
	btfss	status,0
	goto	u64771
	goto	u64770
u64771:
	goto	l3147
u64770:
	
l34460:; BSR set to: 0

	movf	((c:_tmr)),c,w
	btfsc	status,2
	goto	u64781
	goto	u64780
u64781:
	goto	l3147
u64780:
	line	1208
	
l34462:; BSR set to: 0

;rgl.c: 1207: {
;rgl.c: 1208: tmr=0;
	clrf	((c:_tmr)),c
	line	1209
	
l34464:; BSR set to: 0

;rgl.c: 1209: r=p-PWM.MDMOD;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	
	movwf	((ModPrzCW@r))&0ffh
	clrf	1+((ModPrzCW@r))&0ffh
	btfss	status,0
	decf	1+((ModPrzCW@r))&0ffh
	
	line	1210
	
l34466:; BSR set to: 2

;rgl.c: 1210: if((p-(r/14))>PWM.MDMOD) p-=r/14;
	movff	(ModPrzCW@r),(?___awdiv)
	movff	(ModPrzCW@r+1),(?___awdiv+1)
	movlw	high(0Eh)
	movlb	0	; () banked
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(0Eh)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	movlb	0	; () banked
	movwf	(??_ModPrzCW+0+0)&0ffh
	movf	(1+?___awdiv)&0ffh,w
	btfss	status,0
	incf	(1+?___awdiv)&0ffh,w
	clrf	1+(??_ModPrzCW+0+0)&0ffh
	subwf	1+(??_ModPrzCW+0+0)&0ffh
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPrzCW+2+0)&0ffh
	clrf	(??_ModPrzCW+2+0+1)&0ffh

	movf	(??_ModPrzCW+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW+4+0)&0ffh
	movf	(??_ModPrzCW+0+0)&0ffh,w
	subwf	(??_ModPrzCW+2+0)&0ffh,w
	movf	(??_ModPrzCW+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u64791
	goto	u64790
u64791:
	goto	l3145
u64790:
	
l34468:; BSR set to: 0

	movff	(ModPrzCW@r),(?___awdiv)
	movff	(ModPrzCW@r+1),(?___awdiv+1)
	movlw	high(0Eh)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(0Eh)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh
	goto	l3146
	line	1214
	
l3147:; BSR set to: 0

;rgl.c: 1213: }
;rgl.c: 1214: }
	goto	l3138
	line	1217
	
l34470:; BSR set to: 1

;rgl.c: 1215: else
;rgl.c: 1216: {
;rgl.c: 1217: if(rgl.xmod<=maxmod) p=rgl.xmod;
	movf	(0+((c:_rgl)+08h)),c,w
	movlb	2	; () banked
	subwf	((ModPrzCW@maxmod))&0ffh,w
	btfss	status,0
	goto	u64801
	goto	u64800
u64801:
	goto	l3156
u64800:
	
l34472:; BSR set to: 2

	movff	0+((c:_rgl)+08h),(ModPrzCW@p)
	goto	l34474
	line	1218
	
l3156:; BSR set to: 2

	line	1220
;rgl.c: 1218: else
;rgl.c: 1219: {
;rgl.c: 1220: p=maxmod;
	movff	(ModPrzCW@maxmod),(ModPrzCW@p)
	line	1221
;rgl.c: 1221: rgl.xmod=maxmod;
	movff	(ModPrzCW@maxmod),0+((c:_rgl)+08h)
	line	1223
	
l34474:; BSR set to: 2

;rgl.c: 1222: }
;rgl.c: 1223: if((DtCW.ddDCW>6)&&(tmr>1))
	movlb	0	; () banked
	movf	(0+(_DtCW+09h))&0ffh,w
	xorlw	80h
	addlw	-((07h)^80h)
	btfss	status,0
	goto	u64811
	goto	u64810
u64811:
	goto	l34486
u64810:
	
l34476:; BSR set to: 0

	movlw	(02h-1)
	cpfsgt	((c:_tmr)),c
	goto	u64821
	goto	u64820
u64821:
	goto	l34486
u64820:
	line	1225
	
l34478:; BSR set to: 0

;rgl.c: 1224: {
;rgl.c: 1225: tmr=0;
	clrf	((c:_tmr)),c
	line	1226
	
l34480:; BSR set to: 0

;rgl.c: 1226: r=p-PWM.MDMOD;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	
	movwf	((ModPrzCW@r))&0ffh
	clrf	1+((ModPrzCW@r))&0ffh
	btfss	status,0
	decf	1+((ModPrzCW@r))&0ffh
	
	line	1227
	
l34482:; BSR set to: 2

;rgl.c: 1227: if((p-(r/2))>PWM.MDMOD) p-=r/2;
	movff	(ModPrzCW@r),(?___awdiv)
	movff	(ModPrzCW@r+1),(?___awdiv+1)
	movlw	high(02h)
	movlb	0	; () banked
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(02h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	movlb	0	; () banked
	movwf	(??_ModPrzCW+0+0)&0ffh
	movf	(1+?___awdiv)&0ffh,w
	btfss	status,0
	incf	(1+?___awdiv)&0ffh,w
	clrf	1+(??_ModPrzCW+0+0)&0ffh
	subwf	1+(??_ModPrzCW+0+0)&0ffh
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPrzCW+2+0)&0ffh
	clrf	(??_ModPrzCW+2+0+1)&0ffh

	movf	(??_ModPrzCW+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW+4+0)&0ffh
	movf	(??_ModPrzCW+0+0)&0ffh,w
	subwf	(??_ModPrzCW+2+0)&0ffh,w
	movf	(??_ModPrzCW+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u64831
	goto	u64830
u64831:
	goto	l3145
u64830:
	
l34484:; BSR set to: 0

	movff	(ModPrzCW@r),(?___awdiv)
	movff	(ModPrzCW@r+1),(?___awdiv+1)
	movlw	high(02h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(02h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh
	goto	l3146
	line	1232
	
l34486:; BSR set to: 0

;rgl.c: 1231: else
;rgl.c: 1232: if((DtCW.ddDCW>4)&&(tmr>1))
	movf	(0+(_DtCW+09h))&0ffh,w
	xorlw	80h
	addlw	-((05h)^80h)
	btfss	status,0
	goto	u64841
	goto	u64840
u64841:
	goto	l34498
u64840:
	
l34488:; BSR set to: 0

	movlw	(02h-1)
	cpfsgt	((c:_tmr)),c
	goto	u64851
	goto	u64850
u64851:
	goto	l34498
u64850:
	line	1234
	
l34490:; BSR set to: 0

;rgl.c: 1233: {
;rgl.c: 1234: tmr=0;
	clrf	((c:_tmr)),c
	line	1235
	
l34492:; BSR set to: 0

;rgl.c: 1235: r=p-PWM.MDMOD;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	
	movwf	((ModPrzCW@r))&0ffh
	clrf	1+((ModPrzCW@r))&0ffh
	btfss	status,0
	decf	1+((ModPrzCW@r))&0ffh
	
	line	1236
	
l34494:; BSR set to: 2

;rgl.c: 1236: if((p-(r/3))>PWM.MDMOD) p-=r/3;
	movff	(ModPrzCW@r),(?___awdiv)
	movff	(ModPrzCW@r+1),(?___awdiv+1)
	movlw	high(03h)
	movlb	0	; () banked
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(03h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	movlb	0	; () banked
	movwf	(??_ModPrzCW+0+0)&0ffh
	movf	(1+?___awdiv)&0ffh,w
	btfss	status,0
	incf	(1+?___awdiv)&0ffh,w
	clrf	1+(??_ModPrzCW+0+0)&0ffh
	subwf	1+(??_ModPrzCW+0+0)&0ffh
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPrzCW+2+0)&0ffh
	clrf	(??_ModPrzCW+2+0+1)&0ffh

	movf	(??_ModPrzCW+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW+4+0)&0ffh
	movf	(??_ModPrzCW+0+0)&0ffh,w
	subwf	(??_ModPrzCW+2+0)&0ffh,w
	movf	(??_ModPrzCW+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u64861
	goto	u64860
u64861:
	goto	l3145
u64860:
	goto	l34444
	line	1241
	
l34498:; BSR set to: 0

;rgl.c: 1240: else
;rgl.c: 1241: if((DtCW.ddDCW>3)&&(tmr>0))
	movf	(0+(_DtCW+09h))&0ffh,w
	xorlw	80h
	addlw	-((04h)^80h)
	btfss	status,0
	goto	u64871
	goto	u64870
u64871:
	goto	l3138
u64870:
	
l34500:; BSR set to: 0

	movf	((c:_tmr)),c,w
	btfsc	status,2
	goto	u64881
	goto	u64880
u64881:
	goto	l3138
u64880:
	line	1243
	
l34502:; BSR set to: 0

;rgl.c: 1242: {
;rgl.c: 1243: tmr=0;
	clrf	((c:_tmr)),c
	line	1244
	
l34504:; BSR set to: 0

;rgl.c: 1244: r=p-PWM.MDMOD;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	
	movwf	((ModPrzCW@r))&0ffh
	clrf	1+((ModPrzCW@r))&0ffh
	btfss	status,0
	decf	1+((ModPrzCW@r))&0ffh
	
	line	1245
	
l34506:; BSR set to: 2

;rgl.c: 1245: if((p-(r/4))>PWM.MDMOD) p-=r/4;
	movff	(ModPrzCW@r),(?___awdiv)
	movff	(ModPrzCW@r+1),(?___awdiv+1)
	movlw	high(04h)
	movlb	0	; () banked
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(04h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	subwf	((ModPrzCW@p))&0ffh,w
	movlb	0	; () banked
	movwf	(??_ModPrzCW+0+0)&0ffh
	movf	(1+?___awdiv)&0ffh,w
	btfss	status,0
	incf	(1+?___awdiv)&0ffh,w
	clrf	1+(??_ModPrzCW+0+0)&0ffh
	subwf	1+(??_ModPrzCW+0+0)&0ffh
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPrzCW+2+0)&0ffh
	clrf	(??_ModPrzCW+2+0+1)&0ffh

	movf	(??_ModPrzCW+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW+4+0)&0ffh
	movf	(??_ModPrzCW+0+0)&0ffh,w
	subwf	(??_ModPrzCW+2+0)&0ffh,w
	movf	(??_ModPrzCW+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u64891
	goto	u64890
u64891:
	goto	l3145
u64890:
	goto	l34456
	line	1259
	
l3138:
	line	1260
;rgl.c: 1248: }
;rgl.c: 1249: }
;rgl.c: 1259: }
;rgl.c: 1260: if(!rgl.nmod)
	
	btfsc	((c:_rgl)),c,5
	goto	u64901
	goto	u64900
u64901:
	goto	l34530
u64900:
	line	1262
	
l34510:
;rgl.c: 1261: {
;rgl.c: 1262: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u64911
	goto	u64910
u64911:
	goto	l3176
u64910:
	line	1264
	
l34512:
;rgl.c: 1263: {
;rgl.c: 1264: if(!Tmaleje(0))
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfsc	status,0
	goto	u64921
	goto	u64920
u64921:
	goto	l3176
u64920:
	line	1266
	
l34514:
;rgl.c: 1265: {
;rgl.c: 1266: if(Twyzsza(4))
	movlw	(04h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u64931
	goto	u64930
u64931:
	goto	l3176
u64930:
	line	1268
	
l34516:
;rgl.c: 1267: {
;rgl.c: 1268: if(rgl.tmp_pwm>=pwm_kwr)
	movlb	0	; () banked
	movf	((_pwm_kwr))&0ffh,w
	subwf	(0+((c:_rgl)+09h)),c,w
	btfss	status,0
	goto	u64941
	goto	u64940
u64941:
	goto	l34524
u64940:
	line	1270
	
l34518:; BSR set to: 0

;rgl.c: 1269: {
;rgl.c: 1270: if(rgl.srp-5<PWM.MDMOD) rgl.srp=PWM.MDMOD;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPrzCW+0+0)&0ffh
	clrf	(??_ModPrzCW+0+0+1)&0ffh

	movlw	low(-5)
	addwf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_ModPrzCW+2+0)&0ffh
	clrf	1+(??_ModPrzCW+2+0)&0ffh
	movlw	high(-5)
	addwfc	1+(??_ModPrzCW+2+0)&0ffh
	movf	(??_ModPrzCW+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW+4+0)&0ffh
	movf	(??_ModPrzCW+0+0)&0ffh,w
	subwf	(??_ModPrzCW+2+0)&0ffh,w
	movf	(??_ModPrzCW+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u64951
	goto	u64950
u64951:
	goto	l34522
u64950:
	
l34520:; BSR set to: 0

	movff	0+(_PWM+09h),0+((c:_rgl)+07h)	;volatile
	goto	l34524
	line	1271
	
l34522:; BSR set to: 0

;rgl.c: 1271: else rgl.srp-=5;
	movlw	(05h)&0ffh
	subwf	(0+((c:_rgl)+07h)),c
	line	1273
	
l34524:; BSR set to: 0

;rgl.c: 1272: }
;rgl.c: 1273: rgl.nmod=1;
	bsf	((c:_rgl)),c,5
	goto	l3176
	line	1284
	
l34530:
;rgl.c: 1282: else
;rgl.c: 1283: {
;rgl.c: 1284: if(Tmaleje(0))
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfss	status,0
	goto	u64961
	goto	u64960
u64961:
	goto	l3176
u64960:
	line	1285
	
l34532:
;rgl.c: 1285: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	1288
	
l3176:
	return
	opt stack 0
GLOBAL	__end_of_ModPrzCW
	__end_of_ModPrzCW:
	signat	_ModPrzCW,88
	global	_PropCO

;; *************** function _PropCO *****************
;; Defined at:
;;		line 1295 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : C/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_WriteOPWM
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text150,class=CODE,space=0,reloc=2
global __ptext150
__ptext150:
psect	text150
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1295
	global	__size_of_PropCO
	__size_of_PropCO	equ	__end_of_PropCO-_PropCO
	
_PropCO:
	opt	stack 23
	line	1296
	
l34534:
;rgl.c: 1296: if(!rgl.nmod)
	
	btfsc	((c:_rgl)),c,5
	goto	u64971
	goto	u64970
u64971:
	goto	l34564
u64970:
	line	1298
	
l34536:
;rgl.c: 1297: {
;rgl.c: 1298: if(!DtCO._err_CO)
	movlb	0	; () banked
	
	btfsc	((_DtCO))&0ffh,0
	goto	u64981
	goto	u64980
u64981:
	goto	l34562
u64980:
	line	1300
	
l34538:; BSR set to: 0

;rgl.c: 1299: {
;rgl.c: 1300: if(rgl.x_f==3)
	movf	(0+((c:_rgl)+03h)),c,w
	xorlw	3

	btfss	status,2
	goto	u64991
	goto	u64990
u64991:
	goto	l34544
u64990:
	line	1302
	
l34540:; BSR set to: 0

;rgl.c: 1301: {
;rgl.c: 1302: if(rgl.tmp_pwm>PWM.MGMOD)
	movf	(0+((c:_rgl)+09h)),c,w
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u65001
	goto	u65000
u65001:
	goto	l34562
u65000:
	line	1303
	
l34542:; BSR set to: 0

;rgl.c: 1303: rgl.tmp_pwm=PWM.MGMOD;
	movff	0+(_PWM+0Ah),0+((c:_rgl)+09h)	;volatile
	goto	l34562
	line	1306
	
l34544:; BSR set to: 0

;rgl.c: 1305: else
;rgl.c: 1306: if(rgl.x_f==2)
	movf	(0+((c:_rgl)+03h)),c,w
	xorlw	2

	btfss	status,2
	goto	u65011
	goto	u65010
u65011:
	goto	l34550
u65010:
	line	1308
	
l34546:; BSR set to: 0

;rgl.c: 1307: {
;rgl.c: 1308: if(rgl.tmp_pwm>PWM.PROP1)
	movf	(0+((c:_rgl)+09h)),c,w
	cpfslt	(0+(_PWM+019h))&0ffh	;volatile
	goto	u65021
	goto	u65020
u65021:
	goto	l34562
u65020:
	line	1309
	
l34548:; BSR set to: 0

;rgl.c: 1309: rgl.tmp_pwm=PWM.PROP1;
	movff	0+(_PWM+019h),0+((c:_rgl)+09h)	;volatile
	goto	l34562
	line	1312
	
l34550:; BSR set to: 0

;rgl.c: 1311: else
;rgl.c: 1312: if(rgl.x_f==1)
	decf	(0+((c:_rgl)+03h)),c,w

	btfss	status,2
	goto	u65031
	goto	u65030
u65031:
	goto	l34556
u65030:
	line	1314
	
l34552:; BSR set to: 0

;rgl.c: 1313: {
;rgl.c: 1314: if(rgl.tmp_pwm>PWM.PROP2)
	movf	(0+((c:_rgl)+09h)),c,w
	cpfslt	(0+(_PWM+01Ah))&0ffh	;volatile
	goto	u65041
	goto	u65040
u65041:
	goto	l34562
u65040:
	line	1315
	
l34554:; BSR set to: 0

;rgl.c: 1315: rgl.tmp_pwm=PWM.PROP2;
	movff	0+(_PWM+01Ah),0+((c:_rgl)+09h)	;volatile
	goto	l34562
	line	1318
	
l34556:; BSR set to: 0

;rgl.c: 1317: else
;rgl.c: 1318: if(rgl.x_f<=0)
	movf	(0+((c:_rgl)+03h)),c,w
	xorlw	80h
	addlw	-((01h)^80h)
	btfsc	status,0
	goto	u65051
	goto	u65050
u65051:
	goto	l34562
u65050:
	line	1320
	
l34558:; BSR set to: 0

;rgl.c: 1319: {
;rgl.c: 1320: if(rgl.tmp_pwm>PWM.PROP3)
	movf	(0+((c:_rgl)+09h)),c,w
	cpfslt	(0+(_PWM+01Bh))&0ffh	;volatile
	goto	u65061
	goto	u65060
u65061:
	goto	l3188
u65060:
	line	1321
	
l34560:; BSR set to: 0

;rgl.c: 1321: rgl.tmp_pwm=PWM.PROP3;
	movff	0+(_PWM+01Bh),0+((c:_rgl)+09h)	;volatile
	goto	l34562
	line	1323
	
l3188:; BSR set to: 0

	line	1324
	
l34562:; BSR set to: 0

;rgl.c: 1322: }
;rgl.c: 1323: }
;rgl.c: 1324: WriteOPWM(rgl.tmp_pwm);
	movf	(0+((c:_rgl)+09h)),c,w
	
	call	_WriteOPWM
	line	1325
;rgl.c: 1325: }
	goto	l3198
	line	1326
	
l34564:
;rgl.c: 1326: else WriteOPWM(PWM.MDMOD);
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	
	call	_WriteOPWM
	line	1327
	
l3198:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PropCO
	__end_of_PropCO:
	signat	_PropCO,88
	global	_StartCO2

;; *************** function _StartCO2 *****************
;; Defined at:
;;		line 1834 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text151,class=CODE,space=0,reloc=2
global __ptext151
__ptext151:
psect	text151
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1834
	global	__size_of_StartCO2
	__size_of_StartCO2	equ	__end_of_StartCO2-_StartCO2
	
_StartCO2:; BSR set to: 0

	opt	stack 24
	line	1837
	
l40866:; BSR set to: 0

;rgl.c: 1837: if(rgl.btco||rgl.btcw) return;
	
	btfsc	((c:_rgl)),c,0
	goto	u81091
	goto	u81090
u81091:
	goto	l3405
u81090:
	
l40868:; BSR set to: 0

	
	btfss	((c:_rgl)),c,1
	goto	u81101
	goto	u81100
u81101:
	goto	l40870
u81100:
	goto	l3405
	line	1838
	
l40870:; BSR set to: 0

;rgl.c: 1838: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	1839
	
l40872:; BSR set to: 1

;rgl.c: 1839: DtCO.dDCO=0;
	movlb	0	; () banked
	clrf	(0+(_DtCO+09h))&0ffh
	line	1840
	
l40874:; BSR set to: 0

;rgl.c: 1840: DtCO.indCO=0;
	clrf	(0+(_DtCO+0Ah))&0ffh
	line	1841
	
l40876:; BSR set to: 0

;rgl.c: 1841: DtCW.dDCW=0;
	clrf	(0+(_DtCW+08h))&0ffh
	line	1842
	
l40878:; BSR set to: 0

;rgl.c: 1842: DtCW.indCW=0;
	clrf	(0+(_DtCW+0Ah))&0ffh
	line	1843
	
l40880:; BSR set to: 0

;rgl.c: 1843: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	1844
	
l40882:; BSR set to: 0

;rgl.c: 1844: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	1845
	
l40884:; BSR set to: 0

;rgl.c: 1845: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	1849
	
l40886:; BSR set to: 0

;rgl.c: 1849: if(PWM.MMAXCO>PWM.FIRSTPB)
	movf	(0+(_PWM+01Dh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+018h))&0ffh	;volatile
	goto	u81111
	goto	u81110
u81111:
	goto	l3406
u81110:
	line	1851
	
l40888:; BSR set to: 0

;rgl.c: 1850: {
;rgl.c: 1851: rgl.xmod=PWM.FIRSTPB;
	movff	0+(_PWM+018h),0+((c:_rgl)+08h)	;volatile
	line	1852
;rgl.c: 1852: }
	goto	l3407
	line	1853
	
l3406:; BSR set to: 0

	line	1855
;rgl.c: 1853: else
;rgl.c: 1854: {
;rgl.c: 1855: rgl.xmod=PWM.MMAXCO;
	movff	0+(_PWM+01Dh),0+((c:_rgl)+08h)	;volatile
	line	1856
	
l3407:; BSR set to: 0

	line	1881
;rgl.c: 1856: }
;rgl.c: 1881: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	1882
;rgl.c: 1882: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	1883
;rgl.c: 1883: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	1884
;rgl.c: 1884: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	1885
;rgl.c: 1885: rgl.deln1=0;
	bcf	((c:_rgl)),c,7
	line	1886
;rgl.c: 1886: rgl.inv_mod=0;
	bcf	(0+((c:_rgl)+01h)),c,0
	line	1887
	
l3405:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartCO2
	__end_of_StartCO2:
	signat	_StartCO2,88
	global	_ReadDataCO2

;; *************** function _ReadDataCO2 *****************
;; Defined at:
;;		line 2010 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text152,class=CODE,space=0,reloc=2
global __ptext152
__ptext152:
psect	text152
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2010
	global	__size_of_ReadDataCO2
	__size_of_ReadDataCO2	equ	__end_of_ReadDataCO2-_ReadDataCO2
	
_ReadDataCO2:; BSR set to: 0

	opt	stack 25
	line	2011
	
l34590:; BSR set to: 0

;rgl.c: 2011: rgl.x_t=DtCO.DCO;
	movff	0+(_DtCO+08h),0+((c:_rgl)+02h)
	line	2012
;rgl.c: 2012: rgl.x_dt=DtCO.dDCO;
	movff	0+(_DtCO+09h),0+((c:_rgl)+04h)
	line	2013
	
l3450:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ReadDataCO2
	__end_of_ReadDataCO2:
	signat	_ReadDataCO2,88
	global	_ModToCO2

;; *************** function _ModToCO2 *****************
;; Defined at:
;;		line 1982 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ClrMod2
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text153,class=CODE,space=0,reloc=2
global __ptext153
__ptext153:
psect	text153
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1982
	global	__size_of_ModToCO2
	__size_of_ModToCO2	equ	__end_of_ModToCO2-_ModToCO2
	
_ModToCO2:; BSR set to: 0

	opt	stack 24
	line	1983
	
l34592:; BSR set to: 0

;rgl.c: 1983: rgl.btco=1;
	bsf	((c:_rgl)),c,0
	line	1984
;rgl.c: 1984: if(rgl.btcw)
	
	btfss	((c:_rgl)),c,1
	goto	u65101
	goto	u65100
u65101:
	goto	l3435
u65100:
	line	1986
	
l34594:; BSR set to: 0

;rgl.c: 1985: {
;rgl.c: 1986: rgl.btcw=0;
	bcf	((c:_rgl)),c,1
	line	1987
	
l34596:; BSR set to: 0

;rgl.c: 1987: ClrMod2();
	call	_ClrMod2	;wreg free
	line	1989
	
l3435:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModToCO2
	__end_of_ModToCO2:
	signat	_ModToCO2,88
	global	_IncConstCO2

;; *************** function _IncConstCO2 *****************
;; Defined at:
;;		line 2003 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tstoi
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text154,class=CODE,space=0,reloc=2
global __ptext154
__ptext154:
psect	text154
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2003
	global	__size_of_IncConstCO2
	__size_of_IncConstCO2	equ	__end_of_IncConstCO2-_IncConstCO2
	
_IncConstCO2:; BSR set to: 0

	opt	stack 24
	line	2004
	
l34598:
;rgl.c: 2004: if(Tstoi()) rgl.ytmp++;
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u65111
	goto	u65110
u65111:
	goto	l3445
u65110:
	
l34600:; BSR set to: 1

	incf	(0+((c:_rgl)+06h)),c
	goto	l3447
	line	2005
	
l3445:; BSR set to: 1

;rgl.c: 2005: else rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	2006
	
l3447:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_IncConstCO2
	__end_of_IncConstCO2:
	signat	_IncConstCO2,88
	global	_StartMCW2

;; *************** function _StartMCW2 *****************
;; Defined at:
;;		line 1891 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;;		_FirstPCW2
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text155,class=CODE,space=0,reloc=2
global __ptext155
__ptext155:
psect	text155
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1891
	global	__size_of_StartMCW2
	__size_of_StartMCW2	equ	__end_of_StartMCW2-_StartMCW2
	
_StartMCW2:; BSR set to: 1

	opt	stack 24
	line	1892
	
l40890:; BSR set to: 0

;rgl.c: 1892: if(rgl.btco||rgl.btcw) return;
	
	btfsc	((c:_rgl)),c,0
	goto	u81121
	goto	u81120
u81121:
	goto	l3413
u81120:
	
l40892:; BSR set to: 0

	
	btfss	((c:_rgl)),c,1
	goto	u81131
	goto	u81130
u81131:
	goto	l40894
u81130:
	goto	l3413
	line	1893
	
l40894:; BSR set to: 0

;rgl.c: 1893: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	1894
	
l40896:; BSR set to: 1

;rgl.c: 1894: DtCO.dDCO=0;
	movlb	0	; () banked
	clrf	(0+(_DtCO+09h))&0ffh
	line	1895
	
l40898:; BSR set to: 0

;rgl.c: 1895: DtCW.dDCW=0;
	clrf	(0+(_DtCW+08h))&0ffh
	line	1896
	
l40900:; BSR set to: 0

;rgl.c: 1896: DtCO.indCO=0;
	clrf	(0+(_DtCO+0Ah))&0ffh
	line	1897
	
l40902:; BSR set to: 0

;rgl.c: 1897: DtCW.indCW=0;
	clrf	(0+(_DtCW+0Ah))&0ffh
	line	1898
	
l40904:; BSR set to: 0

;rgl.c: 1898: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	1899
	
l40906:; BSR set to: 0

;rgl.c: 1899: FirstPCW2();
	call	_FirstPCW2	;wreg free
	line	1900
	
l40908:; BSR set to: 0

;rgl.c: 1900: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	1901
	
l40910:; BSR set to: 0

;rgl.c: 1901: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	1902
	
l40912:; BSR set to: 0

;rgl.c: 1902: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	1903
	
l3413:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartMCW2
	__end_of_StartMCW2:
	signat	_StartMCW2,88
	global	_ReadDataCW2

;; *************** function _ReadDataCW2 *****************
;; Defined at:
;;		line 2017 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text156,class=CODE,space=0,reloc=2
global __ptext156
__ptext156:
psect	text156
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2017
	global	__size_of_ReadDataCW2
	__size_of_ReadDataCW2	equ	__end_of_ReadDataCW2-_ReadDataCW2
	
_ReadDataCW2:; BSR set to: 0

	opt	stack 25
	line	2018
	
l34626:; BSR set to: 0

;rgl.c: 2018: rgl.x_t=DtCW.DCW;
	movff	0+(_DtCW+07h),0+((c:_rgl)+02h)
	line	2019
;rgl.c: 2019: rgl.x_f=DtCO.DCO;
	movff	0+(_DtCO+08h),0+((c:_rgl)+03h)
	line	2020
;rgl.c: 2020: rgl.x_dt=DtCW.dDCW;
	movff	0+(_DtCW+08h),0+((c:_rgl)+04h)
	line	2021
;rgl.c: 2021: rgl.x_df=DtCO.dDCO;
	movff	0+(_DtCO+09h),0+((c:_rgl)+05h)
	line	2022
	
l3453:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ReadDataCW2
	__end_of_ReadDataCW2:
	signat	_ReadDataCW2,88
	global	_ModToCW2

;; *************** function _ModToCW2 *****************
;; Defined at:
;;		line 1971 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ClrMod2
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text157,class=CODE,space=0,reloc=2
global __ptext157
__ptext157:
psect	text157
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1971
	global	__size_of_ModToCW2
	__size_of_ModToCW2	equ	__end_of_ModToCW2-_ModToCW2
	
_ModToCW2:; BSR set to: 0

	opt	stack 24
	line	1972
	
l34628:; BSR set to: 0

;rgl.c: 1972: rgl.btcw=1;
	bsf	((c:_rgl)),c,1
	line	1973
;rgl.c: 1973: if(rgl.btco)
	
	btfss	((c:_rgl)),c,0
	goto	u65141
	goto	u65140
u65141:
	goto	l3431
u65140:
	line	1975
	
l34630:; BSR set to: 0

;rgl.c: 1974: {
;rgl.c: 1975: rgl.btco=0;
	bcf	((c:_rgl)),c,0
	line	1976
	
l34632:; BSR set to: 0

;rgl.c: 1976: ClrMod2();
	call	_ClrMod2	;wreg free
	line	1978
	
l3431:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModToCW2
	__end_of_ModToCW2:
	signat	_ModToCW2,88
	global	_ModZgCW2

;; *************** function _ModZgCW2 *****************
;; Defined at:
;;		line 2026 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4    1[BANK2 ] long 
;;  p               1    0[BANK2 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : D/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       5       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       10 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tnizsza
;;		_FirstPCW2
;;		___wmul
;;		___aldiv
;;		___lmul
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text158,class=CODE,space=0,reloc=2
global __ptext158
__ptext158:
psect	text158
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2026
	global	__size_of_ModZgCW2
	__size_of_ModZgCW2	equ	__end_of_ModZgCW2-_ModZgCW2
	
_ModZgCW2:; BSR set to: 0

	opt	stack 24
	line	2031
	
l34634:; BSR set to: 0

;rgl.c: 2027: signed long m;
;rgl.c: 2028: unsigned char p;
;rgl.c: 2029: static unsigned char pop;
;rgl.c: 2031: if(Tnizsza(10))
	movlw	(0Ah)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u65151
	goto	u65150
u65151:
	goto	l34640
u65150:
	line	2033
	
l34636:; BSR set to: 0

;rgl.c: 2032: {
;rgl.c: 2033: pop=20;
	movlw	low(014h)
	movlb	1	; () banked
	movwf	((ModZgCW2@pop))&0ffh
	line	2034
	
l34638:; BSR set to: 1

;rgl.c: 2034: FirstPCW2();
	call	_FirstPCW2	;wreg free
	line	2036
	
l34640:; BSR set to: 0

;rgl.c: 2035: }
;rgl.c: 2036: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u65161
	goto	u65160
u65161:
	goto	l34646
u65160:
	line	2038
	
l34642:; BSR set to: 0

;rgl.c: 2037: {
;rgl.c: 2038: if(Tnizsza(2))
	movlw	(02h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u65171
	goto	u65170
u65171:
	goto	l3462
u65170:
	line	2040
	
l34644:; BSR set to: 0

;rgl.c: 2039: {
;rgl.c: 2040: rgl.xmod=PWM.BufPWM;
	movff	0+(_PWM+01h),0+((c:_rgl)+08h)	;volatile
	line	2041
;rgl.c: 2041: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	2042
;rgl.c: 2042: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	2043
;rgl.c: 2043: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	2044
;rgl.c: 2044: pop=0;
	movlb	1	; () banked
	clrf	((ModZgCW2@pop))&0ffh
	line	2048
;rgl.c: 2045: }
	
l34646:
;rgl.c: 2047: }
;rgl.c: 2048: if(!Tnizsza(1))
	movlw	(01h)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u65181
	goto	u65180
u65181:
	goto	l34664
u65180:
	line	2050
	
l34648:
;rgl.c: 2049: {
;rgl.c: 2050: rgl.fz=1;
	bsf	((c:_rgl)),c,2
	line	2051
;rgl.c: 2051: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	2052
;rgl.c: 2052: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	2053
	
l34650:
;rgl.c: 2053: rgl.srp=PWM.BufPWM+pop;
	movlb	0	; () banked
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	movlb	1	; () banked
	addwf	((ModZgCW2@pop))&0ffh,w
	movwf	(0+((c:_rgl)+07h)),c
	line	2054
;rgl.c: 2054: rgl.xmod=PWM.BufPWM+pop;
	movlb	0	; () banked
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	movlb	1	; () banked
	addwf	((ModZgCW2@pop))&0ffh,w
	movwf	(0+((c:_rgl)+08h)),c
	line	2055
	
l34652:; BSR set to: 1

;rgl.c: 2055: pop=0;
	clrf	((ModZgCW2@pop))&0ffh
	line	2056
	
l34654:; BSR set to: 1

;rgl.c: 2056: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u65191
	goto	u65190
u65191:
	goto	l34660
u65190:
	line	2058
	
l34656:; BSR set to: 0

;rgl.c: 2057: {
;rgl.c: 2058: if(rgl.xmod>PWM.MGMOD)
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u65201
	goto	u65200
u65201:
	goto	l3462
u65200:
	line	2060
	
l34658:; BSR set to: 0

;rgl.c: 2059: {
;rgl.c: 2060: rgl.srp=PWM.MGMOD;
	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	line	2061
;rgl.c: 2061: rgl.xmod=PWM.MGMOD;
	movff	0+(_PWM+0Ah),0+((c:_rgl)+08h)	;volatile
	goto	l3462
	line	2066
	
l34660:; BSR set to: 0

;rgl.c: 2064: else
;rgl.c: 2065: {
;rgl.c: 2066: if(rgl.xmod>PWM.MMAXCW)
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u65211
	goto	u65210
u65211:
	goto	l3462
u65210:
	line	2068
	
l34662:; BSR set to: 0

;rgl.c: 2067: {
;rgl.c: 2068: rgl.srp=PWM.MMAXCW;
	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	line	2069
;rgl.c: 2069: rgl.xmod=PWM.MMAXCW;
	movff	0+(_PWM+01Eh),0+((c:_rgl)+08h)	;volatile
	goto	l3462
	line	2074
	
l34664:
;rgl.c: 2073: }
;rgl.c: 2074: if(rgl.xmod>=PWM.MDMOD) m=(rgl.xmod-PWM.MDMOD)*10;
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	btfss	status,0
	goto	u65221
	goto	u65220
u65221:
	goto	l3468
u65220:
	
l34666:; BSR set to: 0

	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	btfss	status,0
	decf	1+((c:?___wmul)),c
	
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movlb	2	; () banked
	movff	0+?___wmul,(ModZgCW2@m)
	movff	1+?___wmul,(ModZgCW2@m+1)
	movlw	0
	btfsc	((ModZgCW2@m+1))&0ffh,7
	movlw	-1
	movwf	((ModZgCW2@m+2))&0ffh
	movwf	((ModZgCW2@m+3))&0ffh
	goto	l34668
	line	2075
	
l3468:; BSR set to: 0

;rgl.c: 2075: else m=0;
	movlb	2	; () banked
	clrf	((ModZgCW2@m))&0ffh
	clrf	((ModZgCW2@m+1))&0ffh
	clrf	((ModZgCW2@m+2))&0ffh
	clrf	((ModZgCW2@m+3))&0ffh

	line	2076
	
l34668:; BSR set to: 2

;rgl.c: 2076: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
	movff	(ModZgCW2@m),(c:?___aldiv)
	movff	(ModZgCW2@m+1),(c:?___aldiv+1)
	movff	(ModZgCW2@m+2),(c:?___aldiv+2)
	movff	(ModZgCW2@m+3),(c:?___aldiv+3)
	movlb	0	; () banked
	movf	(0+(_DtCW+0Eh))&0ffh,w
	movff	0+(_DtCW+0Dh),??_ModZgCW2+0+0
	clrf	(??_ModZgCW2+0+0+1)&0ffh
	subwf	(??_ModZgCW2+0+0)&0ffh
	movlw	0
	subwfb	(??_ModZgCW2+0+1)&0ffh
	movff	??_ModZgCW2+0+0,0+((c:?___aldiv)+04h)
	movff	??_ModZgCW2+0+1,1+((c:?___aldiv)+04h)
	movlw	0
	btfsc	(1+((c:?___aldiv)+04h)),c,7
	movlw	-1
	movwf	(2+((c:?___aldiv)+04h)),c
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movff	0+?___aldiv,(ModZgCW2@m)
	movff	1+?___aldiv,(ModZgCW2@m+1)
	movff	2+?___aldiv,(ModZgCW2@m+2)
	movff	3+?___aldiv,(ModZgCW2@m+3)
	line	2077
;rgl.c: 2077: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
	movff	(ModZgCW2@m),(c:?___lmul)
	movff	(ModZgCW2@m+1),(c:?___lmul+1)
	movff	(ModZgCW2@m+2),(c:?___lmul+2)
	movff	(ModZgCW2@m+3),(c:?___lmul+3)
	movf	(0+(_DtCW+0Eh))&0ffh,w
	movff	0+(_DtCW+0Ch),??_ModZgCW2+0+0
	clrf	(??_ModZgCW2+0+0+1)&0ffh
	subwf	(??_ModZgCW2+0+0)&0ffh
	movlw	0
	subwfb	(??_ModZgCW2+0+1)&0ffh
	movff	??_ModZgCW2+0+0,0+((c:?___lmul)+04h)
	movff	??_ModZgCW2+0+1,1+((c:?___lmul)+04h)
	movlw	0
	btfsc	(1+((c:?___lmul)+04h)),c,7
	movlw	-1
	movwf	(2+((c:?___lmul)+04h)),c
	movwf	(3+((c:?___lmul)+04h)),c
	call	___lmul	;wreg free
	movff	0+?___lmul,(ModZgCW2@m)
	movff	1+?___lmul,(ModZgCW2@m+1)
	movff	2+?___lmul,(ModZgCW2@m+2)
	movff	3+?___lmul,(ModZgCW2@m+3)
	line	2078
	
l34670:
;rgl.c: 2078: if(m<0) m=0;
	movlb	2	; () banked
	btfss	((ModZgCW2@m+3))&0ffh,7
	goto	u65231
	goto	u65230
u65231:
	goto	l34674
u65230:
	
l34672:; BSR set to: 2

	clrf	((ModZgCW2@m))&0ffh
	clrf	((ModZgCW2@m+1))&0ffh
	clrf	((ModZgCW2@m+2))&0ffh
	clrf	((ModZgCW2@m+3))&0ffh

	line	2079
	
l34674:; BSR set to: 2

;rgl.c: 2079: m=m/10+PWM.MDMOD;
	movff	(ModZgCW2@m),(c:?___aldiv)
	movff	(ModZgCW2@m+1),(c:?___aldiv+1)
	movff	(ModZgCW2@m+2),(c:?___aldiv+2)
	movff	(ModZgCW2@m+3),(c:?___aldiv+3)
	movlw	low(0Ah)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(0Ah)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(0Ah)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(0Ah)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	addwf	(0+?___aldiv),c,w
	movlb	2	; () banked
	movwf	((ModZgCW2@m))&0ffh
	movlw	0
	addwfc	(1+?___aldiv),c,w
	movwf	1+((ModZgCW2@m))&0ffh
	movlw	0
	addwfc	(2+?___aldiv),c,w
	movwf	2+((ModZgCW2@m))&0ffh
	movlw	0
	addwfc	(3+?___aldiv),c,w
	movwf	3+((ModZgCW2@m))&0ffh
	line	2080
	
l34676:; BSR set to: 2

;rgl.c: 2080: if(m>0xff)
	movf	((ModZgCW2@m+3))&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u65245
	movlw	0
	subwf	((ModZgCW2@m+2))&0ffh,w
	bnz	u65245
	movlw	01h
	subwf	((ModZgCW2@m+1))&0ffh,w
	bnz	u65245
	movlw	0
	subwf	((ModZgCW2@m))&0ffh,w
u65245:

	btfss	status,0
	goto	u65241
	goto	u65240
u65241:
	goto	l3471
u65240:
	line	2082
	
l34678:; BSR set to: 2

;rgl.c: 2081: {
;rgl.c: 2082: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	2083
;rgl.c: 2083: rgl.tmp_pwm=rgl.xmod;
	movff	0+((c:_rgl)+08h),0+((c:_rgl)+09h)
	line	2084
;rgl.c: 2084: return;
	goto	l3462
	line	2085
	
l3471:; BSR set to: 2

	line	2086
;rgl.c: 2085: }
;rgl.c: 2086: if(rgl.fz&&(rgl.xmod>m))
	
	btfss	((c:_rgl)),c,2
	goto	u65251
	goto	u65250
u65251:
	goto	l3472
u65250:
	
l34680:; BSR set to: 2

	movff	0+((c:_rgl)+08h),??_ModZgCW2+0+0
	movlb	0	; () banked
	clrf	(??_ModZgCW2+0+0+1)&0ffh
	clrf	(??_ModZgCW2+0+0+2)&0ffh
	clrf	(??_ModZgCW2+0+0+3)&0ffh
	movlb	2	; () banked
	movf	((ModZgCW2@m+3))&0ffh,w
	xorlw	80h
	movlb	0	; () banked
	movwf	(??_ModZgCW2+4+0)&0ffh
	movf	(??_ModZgCW2+0+0)&0ffh,w
	movlb	2	; () banked
	subwf	((ModZgCW2@m))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCW2+0+1)&0ffh,w
	movlb	2	; () banked
	subwfb	((ModZgCW2@m+1))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCW2+0+2)&0ffh,w
	movlb	2	; () banked
	subwfb	((ModZgCW2@m+2))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCW2+0+3)&0ffh,w
	xorlw	80h
	subwfb	(??_ModZgCW2+4+0)&0ffh,w
	btfsc	status,0
	goto	u65261
	goto	u65260
u65261:
	goto	l3472
u65260:
	line	2087
	
l34682:; BSR set to: 0

;rgl.c: 2087: rgl.srp=(rgl.xmod-m);
	movlb	2	; () banked
	movf	((ModZgCW2@m))&0ffh,w
	subwf	(0+((c:_rgl)+08h)),c,w
	movwf	(0+((c:_rgl)+07h)),c
	
l3472:
	line	2088
;rgl.c: 2088: m+=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	movlb	2	; () banked
	addwf	((ModZgCW2@m))&0ffh
	movlw	0
	addwfc	((ModZgCW2@m+1))&0ffh
	addwfc	((ModZgCW2@m+2))&0ffh
	addwfc	((ModZgCW2@m+3))&0ffh
	line	2089
;rgl.c: 2089: if(m>rgl.xmod) p=rgl.xmod;
	movff	0+((c:_rgl)+08h),??_ModZgCW2+0+0
	movlb	0	; () banked
	clrf	(??_ModZgCW2+0+0+1)&0ffh
	clrf	(??_ModZgCW2+0+0+2)&0ffh
	clrf	(??_ModZgCW2+0+0+3)&0ffh
	movf	(??_ModZgCW2+0+3)&0ffh,w
	xorlw	80h
	movwf	(??_ModZgCW2+4+0)&0ffh
	movlb	2	; () banked
	movf	((ModZgCW2@m))&0ffh,w
	movlb	0	; () banked
	subwf	(??_ModZgCW2+0+0)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCW2@m+1))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ModZgCW2+0+1)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCW2@m+2))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ModZgCW2+0+2)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCW2@m+3))&0ffh,w
	xorlw	80h
	movlb	0	; () banked
	subwfb	(??_ModZgCW2+4+0)&0ffh,w
	btfsc	status,0
	goto	u65271
	goto	u65270
u65271:
	goto	l3473
u65270:
	
l34684:; BSR set to: 0

	movff	0+((c:_rgl)+08h),(ModZgCW2@p)
	goto	l3474
	line	2090
	
l3473:; BSR set to: 0

;rgl.c: 2090: else p=m;
	movff	(ModZgCW2@m),(ModZgCW2@p)
	
l3474:; BSR set to: 0

	line	2091
;rgl.c: 2091: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	2092
;rgl.c: 2092: rgl.tmp_pwm=p;
	movff	(ModZgCW2@p),0+((c:_rgl)+09h)
	line	2093
	
l3462:
	return
	opt stack 0
GLOBAL	__end_of_ModZgCW2
	__end_of_ModZgCW2:
	signat	_ModZgCW2,88
	global	_ModDkCW2

;; *************** function _ModDkCW2 *****************
;; Defined at:
;;		line 2097 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4    8[BANK0 ] long 
;;  ada             1    7[BANK0 ] char 
;;  p               1    6[BANK0 ] unsigned char 
;;  k               1    5[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : D/0
;;		On exit  : D/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       12 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text159,class=CODE,space=0,reloc=2
global __ptext159
__ptext159:
psect	text159
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2097
	global	__size_of_ModDkCW2
	__size_of_ModDkCW2	equ	__end_of_ModDkCW2-_ModDkCW2
	
_ModDkCW2:
	opt	stack 24
	line	2102
	
l34686:
;rgl.c: 2098: signed long m;
;rgl.c: 2099: signed char ada;
;rgl.c: 2100: unsigned char k,p;
;rgl.c: 2102: if(!rgl.fz) return;
	
	btfsc	((c:_rgl)),c,2
	goto	u65281
	goto	u65280
u65281:
	goto	l34690
u65280:
	goto	l3478
	line	2103
	
l34690:
;rgl.c: 2103: ada=DtCW.AC_CW-DtCW.DAD_CW;
	movlb	0	; () banked
	movf	(0+(_DtCW+0Eh))&0ffh,w
	subwf	(0+(_DtCW+0Ch))&0ffh,w
	movwf	((ModDkCW2@ada))&0ffh
	line	2104
	
l34692:; BSR set to: 0

;rgl.c: 2104: k=9;
	movlw	low(09h)
	movwf	((ModDkCW2@k))&0ffh
	line	2105
	
l34694:; BSR set to: 0

;rgl.c: 2105: if(ada<0) k=8;
	btfss	((ModDkCW2@ada))&0ffh,7
	goto	u65291
	goto	u65290
u65291:
	goto	l34698
u65290:
	
l34696:; BSR set to: 0

	movlw	low(08h)
	movwf	((ModDkCW2@k))&0ffh
	line	2106
	
l34698:; BSR set to: 0

;rgl.c: 2106: m=rgl.srp+k*ada;
	movff	(ModDkCW2@k),(c:?___wmul)
	clrf	((c:?___wmul+1)),c
	movf	((ModDkCW2@ada))&0ffh,w
	movwf	(0+((c:?___wmul)+02h)),c
	clrf	(1+((c:?___wmul)+02h)),c
	btfsc	(0+((c:?___wmul)+02h)),c,7
	decf	(1+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	(0+?___wmul),c,w
	movwf	(??_ModDkCW2+0+0)&0ffh
	movlw	0
	addwfc	(1+?___wmul),c,w
	movwf	1+(??_ModDkCW2+0+0)&0ffh
	movff	??_ModDkCW2+0+0,(ModDkCW2@m)
	movff	??_ModDkCW2+0+1,(ModDkCW2@m+1)
	movlw	0
	btfsc	((ModDkCW2@m+1))&0ffh,7
	movlw	-1
	movwf	((ModDkCW2@m+2))&0ffh
	movwf	((ModDkCW2@m+3))&0ffh
	line	2107
	
l34700:; BSR set to: 0

;rgl.c: 2107: if(m>rgl.xmod) p=rgl.xmod;
	movff	0+((c:_rgl)+08h),??_ModDkCW2+0+0
	clrf	(??_ModDkCW2+0+0+1)&0ffh
	clrf	(??_ModDkCW2+0+0+2)&0ffh
	clrf	(??_ModDkCW2+0+0+3)&0ffh
	movf	(??_ModDkCW2+0+3)&0ffh,w
	xorlw	80h
	movwf	(??_ModDkCW2+4+0)&0ffh
	movf	((ModDkCW2@m))&0ffh,w
	subwf	(??_ModDkCW2+0+0)&0ffh,w
	movf	((ModDkCW2@m+1))&0ffh,w
	subwfb	(??_ModDkCW2+0+1)&0ffh,w
	movf	((ModDkCW2@m+2))&0ffh,w
	subwfb	(??_ModDkCW2+0+2)&0ffh,w
	movf	((ModDkCW2@m+3))&0ffh,w
	xorlw	80h
	subwfb	(??_ModDkCW2+4+0)&0ffh,w
	btfsc	status,0
	goto	u65301
	goto	u65300
u65301:
	goto	l34704
u65300:
	
l34702:; BSR set to: 0

	movff	0+((c:_rgl)+08h),(ModDkCW2@p)
	goto	l3481
	line	2109
	
l34704:; BSR set to: 0

;rgl.c: 2108: else
;rgl.c: 2109: if(m<PWM.MDMOD) p=PWM.MDMOD;
	movff	0+(_PWM+09h),??_ModDkCW2+0+0	;volatile
	clrf	(??_ModDkCW2+0+0+1)&0ffh
	clrf	(??_ModDkCW2+0+0+2)&0ffh
	clrf	(??_ModDkCW2+0+0+3)&0ffh
	movf	((ModDkCW2@m+3))&0ffh,w
	xorlw	80h
	movwf	(??_ModDkCW2+4+0)&0ffh
	movf	(??_ModDkCW2+0+0)&0ffh,w
	subwf	((ModDkCW2@m))&0ffh,w
	movf	(??_ModDkCW2+0+1)&0ffh,w
	subwfb	((ModDkCW2@m+1))&0ffh,w
	movf	(??_ModDkCW2+0+2)&0ffh,w
	subwfb	((ModDkCW2@m+2))&0ffh,w
	movf	(??_ModDkCW2+0+3)&0ffh,w
	xorlw	80h
	subwfb	(??_ModDkCW2+4+0)&0ffh,w
	btfsc	status,0
	goto	u65311
	goto	u65310
u65311:
	goto	l3482
u65310:
	
l34706:; BSR set to: 0

	movff	0+(_PWM+09h),(ModDkCW2@p)	;volatile
	goto	l3481
	line	2110
	
l3482:; BSR set to: 0

;rgl.c: 2110: else p=m;
	movff	(ModDkCW2@m),(ModDkCW2@p)
	
l3481:; BSR set to: 0

	line	2111
;rgl.c: 2111: rgl.tmp_pwm=p;
	movff	(ModDkCW2@p),0+((c:_rgl)+09h)
	line	2112
	
l3478:
	return
	opt stack 0
GLOBAL	__end_of_ModDkCW2
	__end_of_ModDkCW2:
	signat	_ModDkCW2,88
	global	_IncConstCW2

;; *************** function _IncConstCW2 *****************
;; Defined at:
;;		line 1993 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_TFrosnie
;;		_Tstoi
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text160,class=CODE,space=0,reloc=2
global __ptext160
__ptext160:
psect	text160
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1993
	global	__size_of_IncConstCW2
	__size_of_IncConstCW2	equ	__end_of_IncConstCW2-_IncConstCW2
	
_IncConstCW2:
	opt	stack 24
	line	1994
	
l34708:
;rgl.c: 1994: if(!TFrosnie(0))
	movlw	(0)&0ffh
	
	call	_TFrosnie
	btfsc	status,0
	goto	u65321
	goto	u65320
u65321:
	goto	l3439
u65320:
	line	1996
	
l34710:; BSR set to: 1

;rgl.c: 1995: {
;rgl.c: 1996: if(Tstoi()) rgl.ytmp++;
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u65331
	goto	u65330
u65331:
	goto	l3439
u65330:
	
l34712:; BSR set to: 1

	incf	(0+((c:_rgl)+06h)),c
	goto	l3442
	line	1997
	
l3439:; BSR set to: 1

;rgl.c: 1997: else rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	2000
	
l3442:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_IncConstCW2
	__end_of_IncConstCW2:
	signat	_IncConstCW2,88
	global	_IncMaxCW2

;; *************** function _IncMaxCW2 *****************
;; Defined at:
;;		line 2313 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Trosnie
;;		_TFrosnie
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text161,class=CODE,space=0,reloc=2
global __ptext161
__ptext161:
psect	text161
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2313
	global	__size_of_IncMaxCW2
	__size_of_IncMaxCW2	equ	__end_of_IncMaxCW2-_IncMaxCW2
	
_IncMaxCW2:; BSR set to: 1

	opt	stack 24
	line	2317
	
l34714:; BSR set to: 1

;rgl.c: 2314: unsigned char k;
;rgl.c: 2317: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u65341
	goto	u65340
u65341:
	goto	l34726
u65340:
	line	2319
	
l34716:; BSR set to: 1

;rgl.c: 2318: {
;rgl.c: 2319: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u65351
	goto	u65350
u65351:
	goto	l34722
u65350:
	line	2321
	
l34718:; BSR set to: 0

;rgl.c: 2320: {
;rgl.c: 2321: if(rgl.xmod>PWM.MGMOD) rgl.xmod=PWM.MGMOD;
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u65361
	goto	u65360
u65361:
	goto	l3580
u65360:
	
l34720:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+08h)	;volatile
	goto	l3580
	line	2325
	
l34722:; BSR set to: 0

;rgl.c: 2323: else
;rgl.c: 2324: {
;rgl.c: 2325: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u65371
	goto	u65370
u65371:
	goto	l3580
u65370:
	
l34724:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+08h)	;volatile
	goto	l3580
	line	2330
	
l34726:; BSR set to: 1

;rgl.c: 2328: }
;rgl.c: 2330: if(Trosnie(1)||TFrosnie(1)) return;
	movlw	(01h)&0ffh
	
	call	_Trosnie
	btfsc	status,0
	goto	u65381
	goto	u65380
u65381:
	goto	l3580
u65380:
	
l34728:; BSR set to: 1

	movlw	(01h)&0ffh
	
	call	_TFrosnie
	btfss	status,0
	goto	u65391
	goto	u65390
u65391:
	goto	l34730
u65390:
	goto	l3580
	line	2331
	
l34730:; BSR set to: 1

	line	2332
	
l34732:; BSR set to: 1

;rgl.c: 2332: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
	movf	(0+((c:_rgl)+08h)),c,w
	movwf	(??_IncMaxCW2+0+0)&0ffh,c
	clrf	(??_IncMaxCW2+0+0+1)&0ffh,c

	movlw	05h
	addwf	(??_IncMaxCW2+0+0),c
	movlw	0
	addwfc	(??_IncMaxCW2+0+1),c
	movf	(??_IncMaxCW2+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	0F1h
	btfsc	status,2
	subwf	(??_IncMaxCW2+0+0),c,w
	btfss	status,0
	goto	u65401
	goto	u65400
u65401:
	goto	l34736
u65400:
	
l34734:; BSR set to: 1

	movlw	low(0F0h)
	movwf	(0+((c:_rgl)+08h)),c
	goto	l34738
	line	2333
	
l34736:; BSR set to: 1

;rgl.c: 2333: else rgl.xmod+=k;
	movlw	(05h)&0ffh
	addwf	(0+((c:_rgl)+08h)),c
	line	2334
	
l34738:; BSR set to: 1

;rgl.c: 2334: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
	movf	(0+((c:_rgl)+08h)),c,w
	movlb	0	; () banked
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u65411
	goto	u65410
u65411:
	goto	l3580
u65410:
	goto	l34724
	line	2335
	
l3580:
	return
	opt stack 0
GLOBAL	__end_of_IncMaxCW2
	__end_of_IncMaxCW2:
	signat	_IncMaxCW2,88
	global	_ModPruCW2

;; *************** function _ModPruCW2 *****************
;; Defined at:
;;		line 2118 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    1[BANK0 ] char 
;;  tmp             1    0[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tnizsza
;;		_Trosnie
;;		_TFrosnie
;;		_TFmaleje
;;		_TFstoi
;;		_Twyzsza
;;		_Trowna
;;		_Tstoi
;;		_Tmaleje
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text162,class=CODE,space=0,reloc=2
global __ptext162
__ptext162:
psect	text162
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2118
	global	__size_of_ModPruCW2
	__size_of_ModPruCW2	equ	__end_of_ModPruCW2-_ModPruCW2
	
_ModPruCW2:
	opt	stack 24
	line	2122
	
l34742:
;rgl.c: 2119: static unsigned char l,m,o,p,q,r,s;
;rgl.c: 2120: unsigned char tmp;
;rgl.c: 2121: signed char k;
;rgl.c: 2122: if(!rgl.fz)
	
	btfsc	((c:_rgl)),c,2
	goto	u65421
	goto	u65420
u65421:
	goto	l3500
u65420:
	line	2124
	
l34744:
;rgl.c: 2123: {
;rgl.c: 2124: l=0;
	movlb	1	; () banked
	clrf	((ModPruCW2@l))&0ffh
	line	2125
;rgl.c: 2125: m=0;
	clrf	((ModPruCW2@m))&0ffh
	line	2126
;rgl.c: 2126: o=0;
	clrf	((ModPruCW2@o))&0ffh
	line	2127
;rgl.c: 2127: p=0;
	clrf	((ModPruCW2@p))&0ffh
	line	2128
	
l34746:; BSR set to: 1

;rgl.c: 2128: if(q<255) q++;
	incf	((ModPruCW2@q))&0ffh,w

	btfsc	status,2
	goto	u65431
	goto	u65430
u65431:
	goto	l34750
u65430:
	
l34748:; BSR set to: 1

	incf	((ModPruCW2@q))&0ffh
	line	2129
	
l34750:; BSR set to: 1

;rgl.c: 2129: if(s<255) s++;
	incf	((ModPruCW2@s))&0ffh,w

	btfsc	status,2
	goto	u65441
	goto	u65440
u65441:
	goto	l34754
u65440:
	
l34752:; BSR set to: 1

	incf	((ModPruCW2@s))&0ffh
	line	2130
	
l34754:; BSR set to: 1

;rgl.c: 2130: if(DtCW._newPCW) s=0;
	movlb	0	; () banked
	
	btfss	(0+(_DtCW+01h))&0ffh,0
	goto	u65451
	goto	u65450
u65451:
	goto	l34758
u65450:
	
l34756:; BSR set to: 0

	movlb	1	; () banked
	clrf	((ModPruCW2@s))&0ffh
	line	2131
	
l34758:
;rgl.c: 2131: if(Tnizsza(0))
	movlw	(0)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u65461
	goto	u65460
u65461:
	goto	l3519
u65460:
	line	2133
	
l34760:
;rgl.c: 2132: {
;rgl.c: 2133: if(!Tnizsza(10))
	movlw	(0Ah)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u65471
	goto	u65470
u65471:
	goto	l3519
u65470:
	line	2135
	
l34762:
;rgl.c: 2134: {
;rgl.c: 2135: k=0;
	movlb	0	; () banked
	clrf	((ModPruCW2@k))&0ffh
	line	2136
	
l34764:; BSR set to: 0

;rgl.c: 2136: if((Trosnie(1)||TFrosnie(1))&&s>=1)
	movlw	(01h)&0ffh
	
	call	_Trosnie
	btfsc	status,0
	goto	u65481
	goto	u65480
u65481:
	goto	l34768
u65480:
	
l34766:; BSR set to: 0

	movlw	(01h)&0ffh
	
	call	_TFrosnie
	btfss	status,0
	goto	u65491
	goto	u65490
u65491:
	goto	l34780
u65490:
	
l34768:; BSR set to: 0

	movlb	1	; () banked
	movf	((ModPruCW2@s))&0ffh,w
	btfsc	status,2
	goto	u65501
	goto	u65500
u65501:
	goto	l34780
u65500:
	line	2138
	
l34770:; BSR set to: 1

;rgl.c: 2137: {
;rgl.c: 2138: s=0;
	clrf	((ModPruCW2@s))&0ffh
	line	2139
	
l34772:; BSR set to: 1

;rgl.c: 2139: k=10;
	movlw	low(0Ah)
	movlb	0	; () banked
	movwf	((ModPruCW2@k))&0ffh
	line	2140
	
l34774:; BSR set to: 0

;rgl.c: 2140: if(Trosnie(2)||TFrosnie(2)) k=8;
	movlw	(02h)&0ffh
	
	call	_Trosnie
	btfsc	status,0
	goto	u65511
	goto	u65510
u65511:
	goto	l34778
u65510:
	
l34776:; BSR set to: 0

	movlw	(02h)&0ffh
	
	call	_TFrosnie
	btfss	status,0
	goto	u65521
	goto	u65520
u65521:
	goto	l34798
u65520:
	
l34778:; BSR set to: 0

	movlw	low(08h)
	movwf	((ModPruCW2@k))&0ffh
	goto	l34798
	line	2143
	
l34780:
;rgl.c: 2142: else
;rgl.c: 2143: if(TFmaleje(0)&&q>=1)
	movlw	(0)&0ffh
	
	call	_TFmaleje
	btfss	status,0
	goto	u65531
	goto	u65530
u65531:
	goto	l34788
u65530:
	
l34782:
	movlb	1	; () banked
	movf	((ModPruCW2@q))&0ffh,w
	btfsc	status,2
	goto	u65541
	goto	u65540
u65541:
	goto	l34788
u65540:
	line	2145
	
l34784:; BSR set to: 1

;rgl.c: 2144: {
;rgl.c: 2145: q=0;
	clrf	((ModPruCW2@q))&0ffh
	line	2146
	
l34786:; BSR set to: 1

;rgl.c: 2146: k=6;
	movlw	low(06h)
	movlb	0	; () banked
	movwf	((ModPruCW2@k))&0ffh
	line	2147
;rgl.c: 2147: }else
	goto	l34798
	line	2148
	
l34788:
;rgl.c: 2148: if(TFstoi())
	call	_TFstoi	;wreg free
	btfss	status,0
	goto	u65551
	goto	u65550
u65551:
	goto	l34798
u65550:
	line	2150
	
l34790:
;rgl.c: 2149: {
;rgl.c: 2150: if(r>=1)
	movlb	1	; () banked
	movf	((ModPruCW2@r))&0ffh,w
	btfsc	status,2
	goto	u65561
	goto	u65560
u65561:
	goto	l3516
u65560:
	line	2152
	
l34792:; BSR set to: 1

;rgl.c: 2151: {
;rgl.c: 2152: k=6;
	movlw	low(06h)
	movlb	0	; () banked
	movwf	((ModPruCW2@k))&0ffh
	line	2153
	
l34794:; BSR set to: 0

;rgl.c: 2153: r=0;
	movlb	1	; () banked
	clrf	((ModPruCW2@r))&0ffh
	line	2154
;rgl.c: 2154: }
	goto	l34798
	line	2155
	
l3516:; BSR set to: 1

	line	2157
;rgl.c: 2155: else
;rgl.c: 2156: {
;rgl.c: 2157: k=0;
	movlb	0	; () banked
	clrf	((ModPruCW2@k))&0ffh
	line	2158
	
l34796:; BSR set to: 0

;rgl.c: 2158: r++;
	movlb	1	; () banked
	incf	((ModPruCW2@r))&0ffh
	line	2161
	
l34798:
;rgl.c: 2159: }
;rgl.c: 2160: }
;rgl.c: 2161: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	2162
	
l34800:
;rgl.c: 2162: if(PWM.BufPWM>rgl.xmod) return;
	movlb	0	; () banked
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u65571
	goto	u65570
u65571:
	goto	l34804
u65570:
	goto	l3519
	line	2163
	
l34804:; BSR set to: 0

;rgl.c: 2163: tmp=rgl.xmod-PWM.BufPWM;
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	movwf	((ModPruCW2@tmp))&0ffh
	line	2164
;rgl.c: 2164: if(k>tmp) k=tmp;
	movf	((ModPruCW2@tmp))&0ffh,w
	bsf	status,0
	bsf	status,2
	btfss	((ModPruCW2@k))&0ffh,7
	subwf	((ModPruCW2@k))&0ffh,w
	btfss	status,0
	bsf	status,2
	btfsc	status,2
	goto	u65581
	goto	u65580
u65581:
	goto	l34808
u65580:
	
l34806:; BSR set to: 0

	movff	(ModPruCW2@tmp),(ModPruCW2@k)
	line	2167
	
l34808:; BSR set to: 0

;rgl.c: 2167: if(PWM.MMAXCW>PWM.MGMOD)
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u65591
	goto	u65590
u65591:
	goto	l34816
u65590:
	line	2169
	
l34810:; BSR set to: 0

;rgl.c: 2168: {
;rgl.c: 2169: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW2@k))&0ffh,w
	movwf	(??_ModPruCW2+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW2@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW2+0+0)&0ffh,c
	
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	movwf	(??_ModPruCW2+2+0)&0ffh,c
	clrf	(??_ModPruCW2+2+0+1)&0ffh,c

	movf	(??_ModPruCW2+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW2+4+0)&0ffh,c
	movf	(??_ModPruCW2+0+0),c,w
	subwf	(??_ModPruCW2+2+0),c,w
	movf	(??_ModPruCW2+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW2+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u65601
	goto	u65600
u65601:
	goto	l34814
u65600:
	
l34812:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	goto	l3519
	line	2170
	
l34814:; BSR set to: 0

;rgl.c: 2170: else rgl.srp+=k;
	movf	((ModPruCW2@k))&0ffh,w
	addwf	(0+((c:_rgl)+07h)),c
	goto	l3519
	line	2174
	
l34816:; BSR set to: 0

;rgl.c: 2172: else
;rgl.c: 2173: {
;rgl.c: 2174: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW2@k))&0ffh,w
	movwf	(??_ModPruCW2+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW2@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW2+0+0)&0ffh,c
	
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	movwf	(??_ModPruCW2+2+0)&0ffh,c
	clrf	(??_ModPruCW2+2+0+1)&0ffh,c

	movf	(??_ModPruCW2+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW2+4+0)&0ffh,c
	movf	(??_ModPruCW2+0+0),c,w
	subwf	(??_ModPruCW2+2+0),c,w
	movf	(??_ModPruCW2+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW2+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u65611
	goto	u65610
u65611:
	goto	l34814
u65610:
	
l34818:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	goto	l3519
	line	2183
	
l3500:
	line	2185
;rgl.c: 2183: else
;rgl.c: 2184: {
;rgl.c: 2185: q=0;
	movlb	1	; () banked
	clrf	((ModPruCW2@q))&0ffh
	line	2186
;rgl.c: 2186: r=0;
	clrf	((ModPruCW2@r))&0ffh
	line	2187
;rgl.c: 2187: s=0;
	clrf	((ModPruCW2@s))&0ffh
	line	2188
	
l34826:; BSR set to: 1

;rgl.c: 2188: if(m<255) m++;
	incf	((ModPruCW2@m))&0ffh,w

	btfsc	status,2
	goto	u65621
	goto	u65620
u65621:
	goto	l34830
u65620:
	
l34828:; BSR set to: 1

	incf	((ModPruCW2@m))&0ffh
	line	2189
	
l34830:; BSR set to: 1

;rgl.c: 2189: if(p<255) p++;
	incf	((ModPruCW2@p))&0ffh,w

	btfsc	status,2
	goto	u65631
	goto	u65630
u65631:
	goto	l34834
u65630:
	
l34832:; BSR set to: 1

	incf	((ModPruCW2@p))&0ffh
	line	2190
	
l34834:; BSR set to: 1

;rgl.c: 2190: if(o<255) o++;
	incf	((ModPruCW2@o))&0ffh,w

	btfsc	status,2
	goto	u65641
	goto	u65640
u65641:
	goto	l34838
u65640:
	
l34836:; BSR set to: 1

	incf	((ModPruCW2@o))&0ffh
	line	2191
	
l34838:; BSR set to: 1

;rgl.c: 2191: if(DtCW.DAD_CW>DtCW.AC_CW)
	movlb	0	; () banked
	movf	(0+(_DtCW+0Eh))&0ffh,w
	cpfslt	(0+(_DtCW+0Ch))&0ffh
	goto	u65651
	goto	u65650
u65651:
	goto	l3533
u65650:
	line	2193
	
l34840:; BSR set to: 0

;rgl.c: 2192: {
;rgl.c: 2193: k=0;
	clrf	((ModPruCW2@k))&0ffh
	line	2194
	
l34842:; BSR set to: 0

;rgl.c: 2194: if(TFmaleje(0)&&!Twyzsza(0)&&p>=2)
	movlw	(0)&0ffh
	
	call	_TFmaleje
	btfss	status,0
	goto	u65661
	goto	u65660
u65661:
	goto	l34850
u65660:
	
l34844:; BSR set to: 0

	movlw	(0)&0ffh
	
	call	_Twyzsza
	btfsc	status,0
	goto	u65671
	goto	u65670
u65671:
	goto	l34850
u65670:
	
l34846:; BSR set to: 0

	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW2@p))&0ffh
	goto	u65681
	goto	u65680
u65681:
	goto	l34850
u65680:
	line	2196
	
l34848:; BSR set to: 1

;rgl.c: 2195: {
;rgl.c: 2196: p=0;
	clrf	((ModPruCW2@p))&0ffh
	line	2197
;rgl.c: 2197: o=0;
	clrf	((ModPruCW2@o))&0ffh
	line	2198
;rgl.c: 2198: l=0;
	clrf	((ModPruCW2@l))&0ffh
	line	2199
;rgl.c: 2199: m=0;
	clrf	((ModPruCW2@m))&0ffh
	line	2200
;rgl.c: 2200: k=-1;
	movlb	0	; () banked
	setf	((ModPruCW2@k))&0ffh
	line	2201
;rgl.c: 2201: }
	goto	l34888
	line	2203
	
l34850:
;rgl.c: 2202: else
;rgl.c: 2203: if(TFrosnie(0)&&o>=2)
	movlw	(0)&0ffh
	
	call	_TFrosnie
	btfss	status,0
	goto	u65691
	goto	u65690
u65691:
	goto	l34862
u65690:
	
l34852:
	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW2@o))&0ffh
	goto	u65701
	goto	u65700
u65701:
	goto	l34862
u65700:
	line	2205
	
l34854:; BSR set to: 1

;rgl.c: 2204: {
;rgl.c: 2205: o=0;
	clrf	((ModPruCW2@o))&0ffh
	line	2206
;rgl.c: 2206: p=0;
	clrf	((ModPruCW2@p))&0ffh
	line	2207
;rgl.c: 2207: l=0;
	clrf	((ModPruCW2@l))&0ffh
	line	2208
;rgl.c: 2208: m=0;
	clrf	((ModPruCW2@m))&0ffh
	line	2209
	
l34856:; BSR set to: 1

;rgl.c: 2209: k=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	((ModPruCW2@k))&0ffh
	line	2210
	
l34858:; BSR set to: 0

;rgl.c: 2210: if(Trowna()) k=1;
	call	_Trowna	;wreg free
	btfss	status,0
	goto	u65711
	goto	u65710
u65711:
	goto	l34888
u65710:
	
l34860:; BSR set to: 0

	movlw	low(01h)
	movwf	((ModPruCW2@k))&0ffh
	goto	l34888
	line	2213
	
l34862:
;rgl.c: 2212: else
;rgl.c: 2213: if(Trosnie(0)&&m>=2)
	movlw	(0)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u65721
	goto	u65720
u65721:
	goto	l34870
u65720:
	
l34864:
	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW2@m))&0ffh
	goto	u65731
	goto	u65730
u65731:
	goto	l34870
u65730:
	line	2215
	
l34866:; BSR set to: 1

;rgl.c: 2214: {
;rgl.c: 2215: p=0;
	clrf	((ModPruCW2@p))&0ffh
	line	2216
;rgl.c: 2216: o=0;
	clrf	((ModPruCW2@o))&0ffh
	line	2217
;rgl.c: 2217: l=0;
	clrf	((ModPruCW2@l))&0ffh
	line	2218
;rgl.c: 2218: m=0;
	clrf	((ModPruCW2@m))&0ffh
	line	2219
	
l34868:; BSR set to: 1

;rgl.c: 2219: k=3;
	movlw	low(03h)
	movlb	0	; () banked
	movwf	((ModPruCW2@k))&0ffh
	line	2220
;rgl.c: 2220: }
	goto	l34888
	line	2222
	
l34870:
;rgl.c: 2221: else
;rgl.c: 2222: if(Twyzsza(1))
	movlw	(01h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u65741
	goto	u65740
u65741:
	goto	l34884
u65740:
	line	2224
	
l34872:
;rgl.c: 2223: {
;rgl.c: 2224: if(Tstoi()&&TFstoi())
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u65751
	goto	u65750
u65751:
	goto	l34888
u65750:
	
l34874:
	call	_TFstoi	;wreg free
	btfss	status,0
	goto	u65761
	goto	u65760
u65761:
	goto	l34888
u65760:
	line	2226
	
l34876:
;rgl.c: 2225: {
;rgl.c: 2226: if(l>=2)
	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW2@l))&0ffh
	goto	u65771
	goto	u65770
u65771:
	goto	l3543
u65770:
	line	2228
	
l34878:; BSR set to: 1

;rgl.c: 2227: {
;rgl.c: 2228: k=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	((ModPruCW2@k))&0ffh
	line	2229
	
l34880:; BSR set to: 0

;rgl.c: 2229: if(Twyzsza(3)) k=2;
	movlw	(03h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u65781
	goto	u65780
u65781:
	goto	l34884
u65780:
	
l34882:; BSR set to: 0

	movlw	low(02h)
	movwf	((ModPruCW2@k))&0ffh
	line	2230
	
l34884:
;rgl.c: 2230: l=0;
	movlb	1	; () banked
	clrf	((ModPruCW2@l))&0ffh
	line	2231
;rgl.c: 2231: }
	goto	l34888
	line	2232
	
l3543:; BSR set to: 1

	line	2234
;rgl.c: 2232: else
;rgl.c: 2233: {
;rgl.c: 2234: k=0;
	movlb	0	; () banked
	clrf	((ModPruCW2@k))&0ffh
	line	2235
	
l34886:; BSR set to: 0

;rgl.c: 2235: l++;
	movlb	1	; () banked
	incf	((ModPruCW2@l))&0ffh
	line	2239
	
l34888:
;rgl.c: 2239: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM.MDMOD;
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPruCW2+0+0)&0ffh,c
	clrf	(??_ModPruCW2+0+0+1)&0ffh,c

	movf	((ModPruCW2@k))&0ffh,w
	subwf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_ModPruCW2+2+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfss	((ModPruCW2@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW2+2+0)&0ffh,c
	
	movf	(??_ModPruCW2+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW2+4+0)&0ffh,c
	movf	(??_ModPruCW2+0+0),c,w
	subwf	(??_ModPruCW2+2+0),c,w
	movf	(??_ModPruCW2+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW2+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u65791
	goto	u65790
u65791:
	goto	l34892
u65790:
	
l34890:; BSR set to: 0

	movff	0+(_PWM+09h),0+((c:_rgl)+07h)	;volatile
	goto	l34894
	line	2240
	
l34892:; BSR set to: 0

;rgl.c: 2240: else rgl.srp-=k;
	movf	((ModPruCW2@k))&0ffh,w
	subwf	(0+((c:_rgl)+07h)),c
	line	2241
	
l34894:; BSR set to: 0

;rgl.c: 2241: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u65801
	goto	u65800
u65801:
	goto	l34898
u65800:
	
l34896:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	line	2242
	
l34898:; BSR set to: 0

;rgl.c: 2242: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u65811
	goto	u65810
u65811:
	goto	l3519
u65810:
	
l34900:; BSR set to: 0

	movff	0+((c:_rgl)+07h),0+((c:_rgl)+08h)
	goto	l3519
	line	2245
	
l3533:; BSR set to: 0

	line	2247
;rgl.c: 2245: else
;rgl.c: 2246: {
;rgl.c: 2247: k=0;
	clrf	((ModPruCW2@k))&0ffh
	line	2248
	
l34904:; BSR set to: 0

;rgl.c: 2248: if(TFrosnie(0)&&o>=2)
	movlw	(0)&0ffh
	
	call	_TFrosnie
	btfss	status,0
	goto	u65821
	goto	u65820
u65821:
	goto	l34916
u65820:
	
l34906:; BSR set to: 0

	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW2@o))&0ffh
	goto	u65831
	goto	u65830
u65831:
	goto	l34916
u65830:
	line	2250
	
l34908:; BSR set to: 1

;rgl.c: 2249: {
;rgl.c: 2250: o=0;
	clrf	((ModPruCW2@o))&0ffh
	line	2251
;rgl.c: 2251: p=0;
	clrf	((ModPruCW2@p))&0ffh
	line	2252
;rgl.c: 2252: l=0;
	clrf	((ModPruCW2@l))&0ffh
	line	2253
;rgl.c: 2253: m=0;
	clrf	((ModPruCW2@m))&0ffh
	line	2254
	
l34910:; BSR set to: 1

;rgl.c: 2254: k=-3;
	movlw	low(-3)
	movlb	0	; () banked
	movwf	((ModPruCW2@k))&0ffh
	line	2255
	
l34912:; BSR set to: 0

;rgl.c: 2255: if(Trowna()) k=-2;
	call	_Trowna	;wreg free
	btfss	status,0
	goto	u65841
	goto	u65840
u65841:
	goto	l34954
u65840:
	
l34914:; BSR set to: 0

	movlw	low(-2)
	movwf	((ModPruCW2@k))&0ffh
	goto	l34954
	line	2258
	
l34916:
;rgl.c: 2257: else
;rgl.c: 2258: if(TFmaleje(0)&&p>=2)
	movlw	(0)&0ffh
	
	call	_TFmaleje
	btfss	status,0
	goto	u65851
	goto	u65850
u65851:
	goto	l34928
u65850:
	
l34918:
	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW2@p))&0ffh
	goto	u65861
	goto	u65860
u65861:
	goto	l34928
u65860:
	line	2260
	
l34920:; BSR set to: 1

;rgl.c: 2259: {
;rgl.c: 2260: p=0;
	clrf	((ModPruCW2@p))&0ffh
	line	2261
;rgl.c: 2261: o=0;
	clrf	((ModPruCW2@o))&0ffh
	line	2262
;rgl.c: 2262: l=0;
	clrf	((ModPruCW2@l))&0ffh
	line	2263
;rgl.c: 2263: m=0;
	clrf	((ModPruCW2@m))&0ffh
	line	2264
	
l34922:; BSR set to: 1

;rgl.c: 2264: k=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	((ModPruCW2@k))&0ffh
	line	2265
	
l34924:; BSR set to: 0

;rgl.c: 2265: if(Trowna()) k=1;
	call	_Trowna	;wreg free
	btfss	status,0
	goto	u65871
	goto	u65870
u65871:
	goto	l34954
u65870:
	
l34926:; BSR set to: 0

	movlw	low(01h)
	movwf	((ModPruCW2@k))&0ffh
	goto	l34954
	line	2268
	
l34928:
;rgl.c: 2267: else
;rgl.c: 2268: if(Tmaleje(0)&&m>=2)
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfss	status,0
	goto	u65881
	goto	u65880
u65881:
	goto	l34940
u65880:
	
l34930:
	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW2@m))&0ffh
	goto	u65891
	goto	u65890
u65891:
	goto	l34940
u65890:
	line	2270
	
l34932:; BSR set to: 1

;rgl.c: 2269: {
;rgl.c: 2270: p=0;
	clrf	((ModPruCW2@p))&0ffh
	line	2271
;rgl.c: 2271: o=0;
	clrf	((ModPruCW2@o))&0ffh
	line	2272
;rgl.c: 2272: l=0;
	clrf	((ModPruCW2@l))&0ffh
	line	2273
;rgl.c: 2273: m=0;
	clrf	((ModPruCW2@m))&0ffh
	line	2274
	
l34934:; BSR set to: 1

;rgl.c: 2274: k=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	((ModPruCW2@k))&0ffh
	line	2275
	
l34936:; BSR set to: 0

;rgl.c: 2275: if(Tnizsza(0)) k=3;
	movlw	(0)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u65901
	goto	u65900
u65901:
	goto	l34954
u65900:
	
l34938:; BSR set to: 0

	movlw	low(03h)
	movwf	((ModPruCW2@k))&0ffh
	goto	l34954
	line	2278
	
l34940:
;rgl.c: 2277: else
;rgl.c: 2278: if(Tnizsza(1))
	movlw	(01h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u65911
	goto	u65910
u65911:
	goto	l34950
u65910:
	line	2280
	
l34942:
;rgl.c: 2279: {
;rgl.c: 2280: if(Tstoi()&&TFstoi())
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u65921
	goto	u65920
u65921:
	goto	l34954
u65920:
	
l34944:
	call	_TFstoi	;wreg free
	btfss	status,0
	goto	u65931
	goto	u65930
u65931:
	goto	l34954
u65930:
	line	2282
	
l34946:
;rgl.c: 2281: {
;rgl.c: 2282: if(l>=3)
	movlw	(03h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW2@l))&0ffh
	goto	u65941
	goto	u65940
u65941:
	goto	l3563
u65940:
	line	2284
	
l34948:; BSR set to: 1

;rgl.c: 2283: {
;rgl.c: 2284: k=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	((ModPruCW2@k))&0ffh
	line	2285
	
l34950:
;rgl.c: 2285: l=0;
	movlb	1	; () banked
	clrf	((ModPruCW2@l))&0ffh
	line	2286
;rgl.c: 2286: }
	goto	l34954
	line	2287
	
l3563:; BSR set to: 1

	line	2289
;rgl.c: 2287: else
;rgl.c: 2288: {
;rgl.c: 2289: k=0;
	movlb	0	; () banked
	clrf	((ModPruCW2@k))&0ffh
	line	2290
	
l34952:; BSR set to: 0

;rgl.c: 2290: l++;
	movlb	1	; () banked
	incf	((ModPruCW2@l))&0ffh
	line	2294
	
l34954:
;rgl.c: 2294: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u65951
	goto	u65950
u65951:
	goto	l34962
u65950:
	line	2296
	
l34956:; BSR set to: 0

;rgl.c: 2295: {
;rgl.c: 2296: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW2@k))&0ffh,w
	movwf	(??_ModPruCW2+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW2@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW2+0+0)&0ffh,c
	
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	movwf	(??_ModPruCW2+2+0)&0ffh,c
	clrf	(??_ModPruCW2+2+0+1)&0ffh,c

	movf	(??_ModPruCW2+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW2+4+0)&0ffh,c
	movf	(??_ModPruCW2+0+0),c,w
	subwf	(??_ModPruCW2+2+0),c,w
	movf	(??_ModPruCW2+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW2+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u65961
	goto	u65960
u65961:
	goto	l34960
u65960:
	
l34958:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	goto	l34968
	line	2297
	
l34960:; BSR set to: 0

;rgl.c: 2297: else rgl.srp+=k;
	movf	((ModPruCW2@k))&0ffh,w
	addwf	(0+((c:_rgl)+07h)),c
	goto	l34968
	line	2301
	
l34962:; BSR set to: 0

;rgl.c: 2299: else
;rgl.c: 2300: {
;rgl.c: 2301: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW2@k))&0ffh,w
	movwf	(??_ModPruCW2+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW2@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW2+0+0)&0ffh,c
	
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	movwf	(??_ModPruCW2+2+0)&0ffh,c
	clrf	(??_ModPruCW2+2+0+1)&0ffh,c

	movf	(??_ModPruCW2+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW2+4+0)&0ffh,c
	movf	(??_ModPruCW2+0+0),c,w
	subwf	(??_ModPruCW2+2+0),c,w
	movf	(??_ModPruCW2+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW2+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u65971
	goto	u65970
u65971:
	goto	l34960
u65970:
	
l34964:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	line	2304
	
l34968:; BSR set to: 0

;rgl.c: 2303: }
;rgl.c: 2304: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u65981
	goto	u65980
u65981:
	goto	l3519
u65980:
	goto	l34900
	line	2308
	
l3519:
	return
	opt stack 0
GLOBAL	__end_of_ModPruCW2
	__end_of_ModPruCW2:
	signat	_ModPruCW2,88
	global	_ModPrzCW2

;; *************** function _ModPrzCW2 *****************
;; Defined at:
;;		line 2339 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/1
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tmaleje
;;		_Twyzsza
;;		_Tstoi
;;		_TFmaleje
;;		_Tnizsza
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text163,class=CODE,space=0,reloc=2
global __ptext163
__ptext163:
psect	text163
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2339
	global	__size_of_ModPrzCW2
	__size_of_ModPrzCW2	equ	__end_of_ModPrzCW2-_ModPrzCW2
	
_ModPrzCW2:
	opt	stack 24
	line	2340
	
l34972:
;rgl.c: 2340: if(!rgl.nmod)
	
	btfsc	((c:_rgl)),c,5
	goto	u65991
	goto	u65990
u65991:
	goto	l34980
u65990:
	line	2342
	
l34974:
;rgl.c: 2341: {
;rgl.c: 2342: if(!Tmaleje(0)&&Twyzsza(3))
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfsc	status,0
	goto	u66001
	goto	u66000
u66001:
	goto	l3596
u66000:
	
l34976:
	movlw	(03h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u66011
	goto	u66010
u66011:
	goto	l3596
u66010:
	line	2344
	
l34978:
;rgl.c: 2343: {
;rgl.c: 2344: rgl.nmod=1;
	bsf	((c:_rgl)),c,5
	goto	l3596
	line	2349
	
l34980:
;rgl.c: 2347: else
;rgl.c: 2348: {
;rgl.c: 2349: if(!Twyzsza(3))
	movlw	(03h)&0ffh
	
	call	_Twyzsza
	btfsc	status,0
	goto	u66021
	goto	u66020
u66021:
	goto	l3596
u66020:
	line	2351
	
l34982:
;rgl.c: 2350: {
;rgl.c: 2351: if(Tmaleje(0)) rgl.nmod=0;
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfss	status,0
	goto	u66031
	goto	u66030
u66031:
	goto	l34986
u66030:
	
l34984:
	bcf	((c:_rgl)),c,5
	line	2352
	
l34986:
;rgl.c: 2352: if(Tstoi()&&TFmaleje(0)) rgl.nmod=0;
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u66041
	goto	u66040
u66041:
	goto	l34992
u66040:
	
l34988:
	movlw	(0)&0ffh
	
	call	_TFmaleje
	btfss	status,0
	goto	u66051
	goto	u66050
u66051:
	goto	l34992
u66050:
	
l34990:
	bcf	((c:_rgl)),c,5
	line	2353
	
l34992:
;rgl.c: 2353: if(Tnizsza(3)) rgl.nmod=0;
	movlw	(03h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u66061
	goto	u66060
u66061:
	goto	l3596
u66060:
	
l34994:
	bcf	((c:_rgl)),c,5
	line	2356
	
l3596:
	return
	opt stack 0
GLOBAL	__end_of_ModPrzCW2
	__end_of_ModPrzCW2:
	signat	_ModPrzCW2,88
	global	_PropCO2

;; *************** function _PropCO2 *****************
;; Defined at:
;;		line 2360 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_WriteOPWM
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text164,class=CODE,space=0,reloc=2
global __ptext164
__ptext164:
psect	text164
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2360
	global	__size_of_PropCO2
	__size_of_PropCO2	equ	__end_of_PropCO2-_PropCO2
	
_PropCO2:
	opt	stack 23
	line	2361
	
l34996:
;rgl.c: 2361: if(!rgl.nmod)
	
	btfsc	((c:_rgl)),c,5
	goto	u66071
	goto	u66070
u66071:
	goto	l35024
u66070:
	line	2363
	
l34998:
;rgl.c: 2362: {
;rgl.c: 2363: if(rgl.x_f==3)
	movf	(0+((c:_rgl)+03h)),c,w
	xorlw	3

	btfss	status,2
	goto	u66081
	goto	u66080
u66081:
	goto	l35004
u66080:
	line	2365
	
l35000:
;rgl.c: 2364: {
;rgl.c: 2365: if(rgl.tmp_pwm>PWM.MGMOD)
	movf	(0+((c:_rgl)+09h)),c,w
	movlb	0	; () banked
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u66091
	goto	u66090
u66091:
	goto	l35022
u66090:
	line	2366
	
l35002:; BSR set to: 0

;rgl.c: 2366: rgl.tmp_pwm=PWM.MGMOD;
	movff	0+(_PWM+0Ah),0+((c:_rgl)+09h)	;volatile
	goto	l35022
	line	2369
	
l35004:
;rgl.c: 2368: else
;rgl.c: 2369: if(rgl.x_f==2)
	movf	(0+((c:_rgl)+03h)),c,w
	xorlw	2

	btfss	status,2
	goto	u66101
	goto	u66100
u66101:
	goto	l35010
u66100:
	line	2371
	
l35006:
;rgl.c: 2370: {
;rgl.c: 2371: if(rgl.tmp_pwm>PWM.PROP1)
	movf	(0+((c:_rgl)+09h)),c,w
	movlb	0	; () banked
	cpfslt	(0+(_PWM+019h))&0ffh	;volatile
	goto	u66111
	goto	u66110
u66111:
	goto	l35022
u66110:
	line	2372
	
l35008:; BSR set to: 0

;rgl.c: 2372: rgl.tmp_pwm=PWM.PROP1;
	movff	0+(_PWM+019h),0+((c:_rgl)+09h)	;volatile
	goto	l35022
	line	2375
	
l35010:
;rgl.c: 2374: else
;rgl.c: 2375: if(rgl.x_f==1)
	decf	(0+((c:_rgl)+03h)),c,w

	btfss	status,2
	goto	u66121
	goto	u66120
u66121:
	goto	l35016
u66120:
	line	2377
	
l35012:
;rgl.c: 2376: {
;rgl.c: 2377: if(rgl.tmp_pwm>PWM.PROP2)
	movf	(0+((c:_rgl)+09h)),c,w
	movlb	0	; () banked
	cpfslt	(0+(_PWM+01Ah))&0ffh	;volatile
	goto	u66131
	goto	u66130
u66131:
	goto	l35022
u66130:
	line	2378
	
l35014:; BSR set to: 0

;rgl.c: 2378: rgl.tmp_pwm=PWM.PROP2;
	movff	0+(_PWM+01Ah),0+((c:_rgl)+09h)	;volatile
	goto	l35022
	line	2381
	
l35016:
;rgl.c: 2380: else
;rgl.c: 2381: if(rgl.x_f<=0)
	movf	(0+((c:_rgl)+03h)),c,w
	xorlw	80h
	addlw	-((01h)^80h)
	btfsc	status,0
	goto	u66141
	goto	u66140
u66141:
	goto	l35022
u66140:
	line	2383
	
l35018:
;rgl.c: 2382: {
;rgl.c: 2383: if(rgl.tmp_pwm>PWM.PROP3)
	movf	(0+((c:_rgl)+09h)),c,w
	movlb	0	; () banked
	cpfslt	(0+(_PWM+01Bh))&0ffh	;volatile
	goto	u66151
	goto	u66150
u66151:
	goto	l35022
u66150:
	line	2384
	
l35020:; BSR set to: 0

;rgl.c: 2384: rgl.tmp_pwm=PWM.PROP3;
	movff	0+(_PWM+01Bh),0+((c:_rgl)+09h)	;volatile
	line	2386
	
l35022:
;rgl.c: 2385: }
;rgl.c: 2386: WriteOPWM(rgl.tmp_pwm);
	movf	(0+((c:_rgl)+09h)),c,w
	
	call	_WriteOPWM
	line	2388
;rgl.c: 2388: }
	goto	l3612
	line	2389
	
l35024:
;rgl.c: 2389: else WriteOPWM(PWM.MDMOD);
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	
	call	_WriteOPWM
	line	2390
	
l3612:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PropCO2
	__end_of_PropCO2:
	signat	_PropCO2,88
	global	_StartMCO3

;; *************** function _StartMCO3 *****************
;; Defined at:
;;		line 2424 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text165,class=CODE,space=0,reloc=2
global __ptext165
__ptext165:
psect	text165
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2424
	global	__size_of_StartMCO3
	__size_of_StartMCO3	equ	__end_of_StartMCO3-_StartMCO3
	
_StartMCO3:; BSR set to: 0

	opt	stack 24
	line	2425
	
l40914:; BSR set to: 0

;rgl.c: 2425: if(rgl.btco||rgl.btcw) return;
	
	btfsc	((c:_rgl)),c,0
	goto	u81141
	goto	u81140
u81141:
	goto	l3628
u81140:
	
l40916:; BSR set to: 0

	
	btfss	((c:_rgl)),c,1
	goto	u81151
	goto	u81150
u81151:
	goto	l40918
u81150:
	goto	l3628
	line	2426
	
l40918:; BSR set to: 0

;rgl.c: 2426: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	2427
	
l40920:; BSR set to: 1

;rgl.c: 2427: DtCO.dDCO=0;
	movlb	0	; () banked
	clrf	(0+(_DtCO+09h))&0ffh
	line	2428
	
l40922:; BSR set to: 0

;rgl.c: 2428: DtCO.indCO=0;
	clrf	(0+(_DtCO+0Ah))&0ffh
	line	2429
	
l40924:; BSR set to: 0

;rgl.c: 2429: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	2430
	
l40926:; BSR set to: 0

;rgl.c: 2430: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	2431
	
l40928:; BSR set to: 0

;rgl.c: 2431: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	2433
	
l40930:; BSR set to: 0

;rgl.c: 2433: if(PWM.MAXPWM>PWM.FIRSTPB)
	movf	(0+(_PWM+021h))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+018h))&0ffh	;volatile
	goto	u81161
	goto	u81160
u81161:
	goto	l3629
u81160:
	line	2435
	
l40932:; BSR set to: 0

;rgl.c: 2434: {
;rgl.c: 2435: rgl.xmod=PWM.FIRSTPB;
	movff	0+(_PWM+018h),0+((c:_rgl)+08h)	;volatile
	line	2436
;rgl.c: 2436: }
	goto	l3630
	line	2437
	
l3629:; BSR set to: 0

	line	2439
;rgl.c: 2437: else
;rgl.c: 2438: {
;rgl.c: 2439: rgl.xmod=PWM.MAXPWM;
	movff	0+(_PWM+021h),0+((c:_rgl)+08h)	;volatile
	line	2440
	
l3630:; BSR set to: 0

	line	2441
;rgl.c: 2440: }
;rgl.c: 2441: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	2442
;rgl.c: 2442: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	2443
;rgl.c: 2443: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	2444
;rgl.c: 2444: rgl.btcw=0;
	bcf	((c:_rgl)),c,1
	line	2445
;rgl.c: 2445: rgl.btco=1;
	bsf	((c:_rgl)),c,0
	line	2446
;rgl.c: 2446: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	2447
;rgl.c: 2447: rgl.deln1=0;
	bcf	((c:_rgl)),c,7
	line	2448
;rgl.c: 2448: rgl.inv_mod=0;
	bcf	(0+((c:_rgl)+01h)),c,0
	line	2449
	
l3628:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartMCO3
	__end_of_StartMCO3:
	signat	_StartMCO3,88
	global	_ModToCO3

;; *************** function _ModToCO3 *****************
;; Defined at:
;;		line 2417 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text166,class=CODE,space=0,reloc=2
global __ptext166
__ptext166:
psect	text166
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2417
	global	__size_of_ModToCO3
	__size_of_ModToCO3	equ	__end_of_ModToCO3-_ModToCO3
	
_ModToCO3:; BSR set to: 0

	opt	stack 25
	line	2418
	
l35046:; BSR set to: 0

;rgl.c: 2418: rgl.btco=1;
	bsf	((c:_rgl)),c,0
	line	2419
;rgl.c: 2419: rgl.btcw=0;
	bcf	((c:_rgl)),c,1
	line	2420
	
l3622:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModToCO3
	__end_of_ModToCO3:
	signat	_ModToCO3,88
	global	_ModToCW3

;; *************** function _ModToCW3 *****************
;; Defined at:
;;		line 2401 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        5 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tnizsza
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text167,class=CODE,space=0,reloc=2
global __ptext167
__ptext167:
psect	text167
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2401
	global	__size_of_ModToCW3
	__size_of_ModToCW3	equ	__end_of_ModToCW3-_ModToCW3
	
_ModToCW3:; BSR set to: 0

	opt	stack 24
	line	2402
	
l35048:; BSR set to: 0

;rgl.c: 2402: rgl.btcw=1;
	bsf	((c:_rgl)),c,1
	line	2403
;rgl.c: 2403: if(rgl.btco)
	
	btfss	((c:_rgl)),c,0
	goto	u66191
	goto	u66190
u66191:
	goto	l3619
u66190:
	line	2405
	
l35050:; BSR set to: 0

;rgl.c: 2404: {
;rgl.c: 2405: rgl.btco=0;
	bcf	((c:_rgl)),c,0
	line	2407
	
l35052:; BSR set to: 0

;rgl.c: 2407: if(!Tnizsza(0))
	movlw	(0)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u66201
	goto	u66200
u66201:
	goto	l3619
u66200:
	line	2409
	
l35054:; BSR set to: 0

;rgl.c: 2408: {
;rgl.c: 2409: if(rgl.srp-10<PWM.MDMOD) rgl.srp=PWM.MDMOD;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModToCW3+0+0)&0ffh,c
	clrf	(??_ModToCW3+0+0+1)&0ffh,c

	movlw	low(-10)
	addwf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_ModToCW3+2+0)&0ffh,c
	clrf	1+(??_ModToCW3+2+0)&0ffh,c
	movlw	high(-10)
	addwfc	1+(??_ModToCW3+2+0)&0ffh,c
	movf	(??_ModToCW3+2+1),c,w
	xorlw	80h
	movwf	(??_ModToCW3+4+0)&0ffh,c
	movf	(??_ModToCW3+0+0),c,w
	subwf	(??_ModToCW3+2+0),c,w
	movf	(??_ModToCW3+0+1),c,w
	xorlw	80h
	subwfb	(??_ModToCW3+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u66211
	goto	u66210
u66211:
	goto	l35058
u66210:
	
l35056:; BSR set to: 0

	movff	0+(_PWM+09h),0+((c:_rgl)+07h)	;volatile
	goto	l3619
	line	2410
	
l35058:; BSR set to: 0

;rgl.c: 2410: else rgl.srp-=10;
	movlw	(0Ah)&0ffh
	subwf	(0+((c:_rgl)+07h)),c
	line	2413
	
l3619:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModToCW3
	__end_of_ModToCW3:
	signat	_ModToCW3,88
	global	_StartCO4

;; *************** function _StartCO4 *****************
;; Defined at:
;;		line 1337 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text168,class=CODE,space=0,reloc=2
global __ptext168
__ptext168:
psect	text168
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1337
	global	__size_of_StartCO4
	__size_of_StartCO4	equ	__end_of_StartCO4-_StartCO4
	
_StartCO4:; BSR set to: 0

	opt	stack 24
	line	1340
	
l40934:; BSR set to: 0

;rgl.c: 1340: if(rgl.btco||rgl.btcw) return;
	
	btfsc	((c:_rgl)),c,0
	goto	u81171
	goto	u81170
u81171:
	goto	l3204
u81170:
	
l40936:; BSR set to: 0

	
	btfss	((c:_rgl)),c,1
	goto	u81181
	goto	u81180
u81181:
	goto	l40938
u81180:
	goto	l3204
	line	1341
	
l40938:; BSR set to: 0

;rgl.c: 1341: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	1342
	
l40940:; BSR set to: 1

;rgl.c: 1342: DtCO.dDCO=0;
	movlb	0	; () banked
	clrf	(0+(_DtCO+09h))&0ffh
	line	1343
	
l40942:; BSR set to: 0

;rgl.c: 1343: DtCO.indCO=0;
	clrf	(0+(_DtCO+0Ah))&0ffh
	line	1344
	
l40944:; BSR set to: 0

;rgl.c: 1344: DtCW.dDCW=0;
	clrf	(0+(_DtCW+08h))&0ffh
	line	1345
	
l40946:; BSR set to: 0

;rgl.c: 1345: DtCW.indCW=0;
	clrf	(0+(_DtCW+0Ah))&0ffh
	line	1346
	
l40948:; BSR set to: 0

;rgl.c: 1346: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	1347
	
l40950:; BSR set to: 0

;rgl.c: 1347: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	1348
	
l40952:; BSR set to: 0

;rgl.c: 1348: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	1350
	
l40954:; BSR set to: 0

;rgl.c: 1350: if(PWM.MMAXCO>PWM.FIRSTPB)
	movf	(0+(_PWM+01Dh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+018h))&0ffh	;volatile
	goto	u81191
	goto	u81190
u81191:
	goto	l3205
u81190:
	line	1352
	
l40956:; BSR set to: 0

;rgl.c: 1351: {
;rgl.c: 1352: rgl.xmod=PWM.FIRSTPB;
	movff	0+(_PWM+018h),0+((c:_rgl)+08h)	;volatile
	line	1353
;rgl.c: 1353: }
	goto	l3206
	line	1354
	
l3205:; BSR set to: 0

	line	1356
;rgl.c: 1354: else
;rgl.c: 1355: {
;rgl.c: 1356: rgl.xmod=PWM.MMAXCO;
	movff	0+(_PWM+01Dh),0+((c:_rgl)+08h)	;volatile
	line	1357
	
l3206:; BSR set to: 0

	line	1358
;rgl.c: 1357: }
;rgl.c: 1358: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	1359
;rgl.c: 1359: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	1360
;rgl.c: 1360: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	1361
;rgl.c: 1361: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	1362
;rgl.c: 1362: rgl.inv_mod=0;
	bcf	(0+((c:_rgl)+01h)),c,0
	line	1363
	
l3204:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartCO4
	__end_of_StartCO4:
	signat	_StartCO4,88
	global	_ReadDataCO4

;; *************** function _ReadDataCO4 *****************
;; Defined at:
;;		line 1450 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text169,class=CODE,space=0,reloc=2
global __ptext169
__ptext169:
psect	text169
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1450
	global	__size_of_ReadDataCO4
	__size_of_ReadDataCO4	equ	__end_of_ReadDataCO4-_ReadDataCO4
	
_ReadDataCO4:; BSR set to: 0

	opt	stack 25
	line	1451
	
l35084:; BSR set to: 0

;rgl.c: 1451: rgl.x_t=DtCO.DCO;
	movff	0+(_DtCO+08h),0+((c:_rgl)+02h)
	line	1452
;rgl.c: 1452: rgl.x_dt=DtCO.dDCO;
	movff	0+(_DtCO+09h),0+((c:_rgl)+04h)
	line	1453
	
l3242:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ReadDataCO4
	__end_of_ReadDataCO4:
	signat	_ReadDataCO4,88
	global	_ModToCO4

;; *************** function _ModToCO4 *****************
;; Defined at:
;;		line 1432 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ClrMod4
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text170,class=CODE,space=0,reloc=2
global __ptext170
__ptext170:
psect	text170
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1432
	global	__size_of_ModToCO4
	__size_of_ModToCO4	equ	__end_of_ModToCO4-_ModToCO4
	
_ModToCO4:; BSR set to: 0

	opt	stack 24
	line	1433
	
l35086:; BSR set to: 0

;rgl.c: 1433: rgl.btco=1;
	bsf	((c:_rgl)),c,0
	line	1434
;rgl.c: 1434: if(rgl.btcw)
	
	btfss	((c:_rgl)),c,1
	goto	u66251
	goto	u66250
u66251:
	goto	l3234
u66250:
	line	1436
	
l35088:; BSR set to: 0

;rgl.c: 1435: {
;rgl.c: 1436: rgl.btcw=0;
	bcf	((c:_rgl)),c,1
	line	1437
	
l35090:; BSR set to: 0

;rgl.c: 1437: ClrMod4();
	call	_ClrMod4	;wreg free
	line	1439
	
l3234:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModToCO4
	__end_of_ModToCO4:
	signat	_ModToCO4,88
	global	_IncConstCOCW4

;; *************** function _IncConstCOCW4 *****************
;; Defined at:
;;		line 1443 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tstoi
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text171,class=CODE,space=0,reloc=2
global __ptext171
__ptext171:
psect	text171
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1443
	global	__size_of_IncConstCOCW4
	__size_of_IncConstCOCW4	equ	__end_of_IncConstCOCW4-_IncConstCOCW4
	
_IncConstCOCW4:; BSR set to: 0

	opt	stack 24
	line	1444
	
l35092:; BSR set to: 1

;rgl.c: 1444: if(Tstoi()) rgl.ytmp++;
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u66261
	goto	u66260
u66261:
	goto	l3237
u66260:
	
l35094:; BSR set to: 1

	incf	(0+((c:_rgl)+06h)),c
	goto	l3239
	line	1445
	
l3237:; BSR set to: 1

;rgl.c: 1445: else rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	1446
	
l3239:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_IncConstCOCW4
	__end_of_IncConstCOCW4:
	signat	_IncConstCOCW4,88
	global	_StartMCW4

;; *************** function _StartMCW4 *****************
;; Defined at:
;;		line 1367 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartRTdS
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text172,class=CODE,space=0,reloc=2
global __ptext172
__ptext172:
psect	text172
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1367
	global	__size_of_StartMCW4
	__size_of_StartMCW4	equ	__end_of_StartMCW4-_StartMCW4
	
_StartMCW4:; BSR set to: 1

	opt	stack 24
	line	1368
	
l40958:; BSR set to: 0

;rgl.c: 1368: if(rgl.btco||rgl.btcw) return;
	
	btfsc	((c:_rgl)),c,0
	goto	u81201
	goto	u81200
u81201:
	goto	l3212
u81200:
	
l40960:; BSR set to: 0

	
	btfss	((c:_rgl)),c,1
	goto	u81211
	goto	u81210
u81211:
	goto	l40962
u81210:
	goto	l3212
	line	1369
	
l40962:; BSR set to: 0

;rgl.c: 1369: StartRTdS(2);
	movlw	(02h)&0ffh
	
	call	_StartRTdS
	line	1370
	
l40964:; BSR set to: 1

;rgl.c: 1370: DtCO.dDCO=0;
	movlb	0	; () banked
	clrf	(0+(_DtCO+09h))&0ffh
	line	1371
	
l40966:; BSR set to: 0

;rgl.c: 1371: DtCW.dDCW=0;
	clrf	(0+(_DtCW+08h))&0ffh
	line	1372
	
l40968:; BSR set to: 0

;rgl.c: 1372: DtCO.indCO=0;
	clrf	(0+(_DtCO+0Ah))&0ffh
	line	1373
	
l40970:; BSR set to: 0

;rgl.c: 1373: DtCW.indCW=0;
	clrf	(0+(_DtCW+0Ah))&0ffh
	line	1374
	
l40972:; BSR set to: 0

;rgl.c: 1374: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	1375
	
l40974:; BSR set to: 0

;rgl.c: 1375: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	1376
	
l40976:; BSR set to: 0

;rgl.c: 1376: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	1378
	
l40978:; BSR set to: 0

;rgl.c: 1378: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	1379
	
l40980:; BSR set to: 0

;rgl.c: 1379: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	1380
	
l40982:; BSR set to: 0

;rgl.c: 1380: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	1381
	
l40984:; BSR set to: 0

;rgl.c: 1381: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	1382
	
l40986:; BSR set to: 0

;rgl.c: 1382: rgl.inv_mod=0;
	bcf	(0+((c:_rgl)+01h)),c,0
	line	1383
	
l40988:; BSR set to: 0

;rgl.c: 1383: rgl.xmod=PWM.MDMOD;
	movff	0+(_PWM+09h),0+((c:_rgl)+08h)	;volatile
	line	1384
	
l3212:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartMCW4
	__end_of_StartMCW4:
	signat	_StartMCW4,88
	global	_ReadDataCW4

;; *************** function _ReadDataCW4 *****************
;; Defined at:
;;		line 1457 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text173,class=CODE,space=0,reloc=2
global __ptext173
__ptext173:
psect	text173
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1457
	global	__size_of_ReadDataCW4
	__size_of_ReadDataCW4	equ	__end_of_ReadDataCW4-_ReadDataCW4
	
_ReadDataCW4:; BSR set to: 0

	opt	stack 25
	line	1458
	
l35128:; BSR set to: 0

;rgl.c: 1458: rgl.x_t=DtCW.DCW;
	movff	0+(_DtCW+07h),0+((c:_rgl)+02h)
	line	1459
;rgl.c: 1459: rgl.x_f=DtCO.DCO;
	movff	0+(_DtCO+08h),0+((c:_rgl)+03h)
	line	1460
;rgl.c: 1460: rgl.x_dt=DtCW.dDCW;
	movff	0+(_DtCW+08h),0+((c:_rgl)+04h)
	line	1461
;rgl.c: 1461: rgl.x_df=DtCO.dDCO;
	movff	0+(_DtCO+09h),0+((c:_rgl)+05h)
	line	1462
	
l3245:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ReadDataCW4
	__end_of_ReadDataCW4:
	signat	_ReadDataCW4,88
	global	_ModToCW4

;; *************** function _ModToCW4 *****************
;; Defined at:
;;		line 1421 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_ClrMod4
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text174,class=CODE,space=0,reloc=2
global __ptext174
__ptext174:
psect	text174
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1421
	global	__size_of_ModToCW4
	__size_of_ModToCW4	equ	__end_of_ModToCW4-_ModToCW4
	
_ModToCW4:; BSR set to: 0

	opt	stack 24
	line	1422
	
l35130:; BSR set to: 0

;rgl.c: 1422: rgl.btcw=1;
	bsf	((c:_rgl)),c,1
	line	1423
;rgl.c: 1423: if(rgl.btco)
	
	btfss	((c:_rgl)),c,0
	goto	u66291
	goto	u66290
u66291:
	goto	l3230
u66290:
	line	1425
	
l35132:; BSR set to: 0

;rgl.c: 1424: {
;rgl.c: 1425: rgl.btco=0;
	bcf	((c:_rgl)),c,0
	line	1426
	
l35134:; BSR set to: 0

;rgl.c: 1426: ClrMod4();
	call	_ClrMod4	;wreg free
	line	1428
	
l3230:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModToCW4
	__end_of_ModToCW4:
	signat	_ModToCW4,88
	global	_ModZgCW4

;; *************** function _ModZgCW4 *****************
;; Defined at:
;;		line 1466 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4    1[BANK2 ] long 
;;  p               1    0[BANK2 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : C/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       5       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       10 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tnizsza
;;		___wmul
;;		___aldiv
;;		___lmul
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text175,class=CODE,space=0,reloc=2
global __ptext175
__ptext175:
psect	text175
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1466
	global	__size_of_ModZgCW4
	__size_of_ModZgCW4	equ	__end_of_ModZgCW4-_ModZgCW4
	
_ModZgCW4:; BSR set to: 0

	opt	stack 24
	line	1471
	
l35136:; BSR set to: 0

;rgl.c: 1467: signed long m;
;rgl.c: 1468: unsigned char p;
;rgl.c: 1469: static unsigned char pop;
;rgl.c: 1471: if(Tnizsza(10))
	movlw	(0Ah)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u66301
	goto	u66300
u66301:
	goto	l3250
u66300:
	line	1473
	
l35138:; BSR set to: 0

;rgl.c: 1472: {
;rgl.c: 1473: pop=0;
	movlb	1	; () banked
	clrf	((ModZgCW4@pop))&0ffh
	line	1475
	
l3250:
	line	1476
;rgl.c: 1475: }
;rgl.c: 1476: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u66311
	goto	u66310
u66311:
	goto	l35144
u66310:
	line	1478
	
l35140:
;rgl.c: 1477: {
;rgl.c: 1478: if(Tnizsza(2))
	movlw	(02h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u66321
	goto	u66320
u66321:
	goto	l3254
u66320:
	line	1480
	
l35142:
;rgl.c: 1479: {
;rgl.c: 1480: rgl.xmod=PWM.BufPWM;
	movff	0+(_PWM+01h),0+((c:_rgl)+08h)	;volatile
	line	1481
;rgl.c: 1481: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	1482
;rgl.c: 1482: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	1483
;rgl.c: 1483: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	1484
;rgl.c: 1484: pop=0;
	movlb	1	; () banked
	clrf	((ModZgCW4@pop))&0ffh
	line	1488
;rgl.c: 1485: }
	
l35144:
;rgl.c: 1487: }
;rgl.c: 1488: if(!Tnizsza(1))
	movlw	(01h)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u66331
	goto	u66330
u66331:
	goto	l35162
u66330:
	line	1490
	
l35146:
;rgl.c: 1489: {
;rgl.c: 1490: rgl.fz=1;
	bsf	((c:_rgl)),c,2
	line	1491
;rgl.c: 1491: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	1492
;rgl.c: 1492: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	1493
	
l35148:
;rgl.c: 1493: rgl.srp=PWM.BufPWM+pop;
	movlb	0	; () banked
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	movlb	1	; () banked
	addwf	((ModZgCW4@pop))&0ffh,w
	movwf	(0+((c:_rgl)+07h)),c
	line	1494
;rgl.c: 1494: rgl.xmod=PWM.BufPWM+pop;
	movlb	0	; () banked
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	movlb	1	; () banked
	addwf	((ModZgCW4@pop))&0ffh,w
	movwf	(0+((c:_rgl)+08h)),c
	line	1495
	
l35150:; BSR set to: 1

;rgl.c: 1495: pop=0;
	clrf	((ModZgCW4@pop))&0ffh
	line	1496
	
l35152:; BSR set to: 1

;rgl.c: 1496: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u66341
	goto	u66340
u66341:
	goto	l35158
u66340:
	line	1498
	
l35154:; BSR set to: 0

;rgl.c: 1497: {
;rgl.c: 1498: if(rgl.xmod>PWM.MGMOD)
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u66351
	goto	u66350
u66351:
	goto	l3254
u66350:
	line	1500
	
l35156:; BSR set to: 0

;rgl.c: 1499: {
;rgl.c: 1500: rgl.srp=PWM.MGMOD;
	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	line	1501
;rgl.c: 1501: rgl.xmod=PWM.MGMOD;
	movff	0+(_PWM+0Ah),0+((c:_rgl)+08h)	;volatile
	goto	l3254
	line	1506
	
l35158:; BSR set to: 0

;rgl.c: 1504: else
;rgl.c: 1505: {
;rgl.c: 1506: if(rgl.xmod>PWM.MMAXCW)
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u66361
	goto	u66360
u66361:
	goto	l3254
u66360:
	line	1508
	
l35160:; BSR set to: 0

;rgl.c: 1507: {
;rgl.c: 1508: rgl.srp=PWM.MMAXCW;
	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	line	1509
;rgl.c: 1509: rgl.xmod=PWM.MMAXCW;
	movff	0+(_PWM+01Eh),0+((c:_rgl)+08h)	;volatile
	goto	l3254
	line	1514
	
l35162:
;rgl.c: 1513: }
;rgl.c: 1514: if(rgl.xmod>=PWM.MDMOD) m=(rgl.xmod-PWM.MDMOD)*10;
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	btfss	status,0
	goto	u66371
	goto	u66370
u66371:
	goto	l3260
u66370:
	
l35164:; BSR set to: 0

	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	btfss	status,0
	decf	1+((c:?___wmul)),c
	
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movlb	2	; () banked
	movff	0+?___wmul,(ModZgCW4@m)
	movff	1+?___wmul,(ModZgCW4@m+1)
	movlw	0
	btfsc	((ModZgCW4@m+1))&0ffh,7
	movlw	-1
	movwf	((ModZgCW4@m+2))&0ffh
	movwf	((ModZgCW4@m+3))&0ffh
	goto	l35166
	line	1515
	
l3260:; BSR set to: 0

;rgl.c: 1515: else m=0;
	movlb	2	; () banked
	clrf	((ModZgCW4@m))&0ffh
	clrf	((ModZgCW4@m+1))&0ffh
	clrf	((ModZgCW4@m+2))&0ffh
	clrf	((ModZgCW4@m+3))&0ffh

	line	1516
	
l35166:; BSR set to: 2

;rgl.c: 1516: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
	movff	(ModZgCW4@m),(c:?___aldiv)
	movff	(ModZgCW4@m+1),(c:?___aldiv+1)
	movff	(ModZgCW4@m+2),(c:?___aldiv+2)
	movff	(ModZgCW4@m+3),(c:?___aldiv+3)
	movlb	0	; () banked
	movf	(0+(_DtCW+0Eh))&0ffh,w
	movff	0+(_DtCW+0Dh),??_ModZgCW4+0+0
	clrf	(??_ModZgCW4+0+0+1)&0ffh
	subwf	(??_ModZgCW4+0+0)&0ffh
	movlw	0
	subwfb	(??_ModZgCW4+0+1)&0ffh
	movff	??_ModZgCW4+0+0,0+((c:?___aldiv)+04h)
	movff	??_ModZgCW4+0+1,1+((c:?___aldiv)+04h)
	movlw	0
	btfsc	(1+((c:?___aldiv)+04h)),c,7
	movlw	-1
	movwf	(2+((c:?___aldiv)+04h)),c
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movff	0+?___aldiv,(ModZgCW4@m)
	movff	1+?___aldiv,(ModZgCW4@m+1)
	movff	2+?___aldiv,(ModZgCW4@m+2)
	movff	3+?___aldiv,(ModZgCW4@m+3)
	line	1517
;rgl.c: 1517: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
	movff	(ModZgCW4@m),(c:?___lmul)
	movff	(ModZgCW4@m+1),(c:?___lmul+1)
	movff	(ModZgCW4@m+2),(c:?___lmul+2)
	movff	(ModZgCW4@m+3),(c:?___lmul+3)
	movf	(0+(_DtCW+0Eh))&0ffh,w
	movff	0+(_DtCW+0Ch),??_ModZgCW4+0+0
	clrf	(??_ModZgCW4+0+0+1)&0ffh
	subwf	(??_ModZgCW4+0+0)&0ffh
	movlw	0
	subwfb	(??_ModZgCW4+0+1)&0ffh
	movff	??_ModZgCW4+0+0,0+((c:?___lmul)+04h)
	movff	??_ModZgCW4+0+1,1+((c:?___lmul)+04h)
	movlw	0
	btfsc	(1+((c:?___lmul)+04h)),c,7
	movlw	-1
	movwf	(2+((c:?___lmul)+04h)),c
	movwf	(3+((c:?___lmul)+04h)),c
	call	___lmul	;wreg free
	movff	0+?___lmul,(ModZgCW4@m)
	movff	1+?___lmul,(ModZgCW4@m+1)
	movff	2+?___lmul,(ModZgCW4@m+2)
	movff	3+?___lmul,(ModZgCW4@m+3)
	line	1518
	
l35168:
;rgl.c: 1518: if(m<0) m=0;
	movlb	2	; () banked
	btfss	((ModZgCW4@m+3))&0ffh,7
	goto	u66381
	goto	u66380
u66381:
	goto	l35172
u66380:
	
l35170:; BSR set to: 2

	clrf	((ModZgCW4@m))&0ffh
	clrf	((ModZgCW4@m+1))&0ffh
	clrf	((ModZgCW4@m+2))&0ffh
	clrf	((ModZgCW4@m+3))&0ffh

	line	1519
	
l35172:; BSR set to: 2

;rgl.c: 1519: m=m/10+PWM.MDMOD;
	movff	(ModZgCW4@m),(c:?___aldiv)
	movff	(ModZgCW4@m+1),(c:?___aldiv+1)
	movff	(ModZgCW4@m+2),(c:?___aldiv+2)
	movff	(ModZgCW4@m+3),(c:?___aldiv+3)
	movlw	low(0Ah)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(0Ah)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(0Ah)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(0Ah)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	addwf	(0+?___aldiv),c,w
	movlb	2	; () banked
	movwf	((ModZgCW4@m))&0ffh
	movlw	0
	addwfc	(1+?___aldiv),c,w
	movwf	1+((ModZgCW4@m))&0ffh
	movlw	0
	addwfc	(2+?___aldiv),c,w
	movwf	2+((ModZgCW4@m))&0ffh
	movlw	0
	addwfc	(3+?___aldiv),c,w
	movwf	3+((ModZgCW4@m))&0ffh
	line	1520
	
l35174:; BSR set to: 2

;rgl.c: 1520: if(m>0xff)
	movf	((ModZgCW4@m+3))&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u66395
	movlw	0
	subwf	((ModZgCW4@m+2))&0ffh,w
	bnz	u66395
	movlw	01h
	subwf	((ModZgCW4@m+1))&0ffh,w
	bnz	u66395
	movlw	0
	subwf	((ModZgCW4@m))&0ffh,w
u66395:

	btfss	status,0
	goto	u66391
	goto	u66390
u66391:
	goto	l3263
u66390:
	line	1522
	
l35176:; BSR set to: 2

;rgl.c: 1521: {
;rgl.c: 1522: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	1523
;rgl.c: 1523: rgl.tmp_pwm=rgl.xmod;
	movff	0+((c:_rgl)+08h),0+((c:_rgl)+09h)
	line	1524
;rgl.c: 1524: return;
	goto	l3254
	line	1525
	
l3263:; BSR set to: 2

	line	1526
;rgl.c: 1525: }
;rgl.c: 1526: if(rgl.fz&&(rgl.xmod>m))
	
	btfss	((c:_rgl)),c,2
	goto	u66401
	goto	u66400
u66401:
	goto	l3264
u66400:
	
l35178:; BSR set to: 2

	movff	0+((c:_rgl)+08h),??_ModZgCW4+0+0
	movlb	0	; () banked
	clrf	(??_ModZgCW4+0+0+1)&0ffh
	clrf	(??_ModZgCW4+0+0+2)&0ffh
	clrf	(??_ModZgCW4+0+0+3)&0ffh
	movlb	2	; () banked
	movf	((ModZgCW4@m+3))&0ffh,w
	xorlw	80h
	movlb	0	; () banked
	movwf	(??_ModZgCW4+4+0)&0ffh
	movf	(??_ModZgCW4+0+0)&0ffh,w
	movlb	2	; () banked
	subwf	((ModZgCW4@m))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCW4+0+1)&0ffh,w
	movlb	2	; () banked
	subwfb	((ModZgCW4@m+1))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCW4+0+2)&0ffh,w
	movlb	2	; () banked
	subwfb	((ModZgCW4@m+2))&0ffh,w
	movlb	0	; () banked
	movf	(??_ModZgCW4+0+3)&0ffh,w
	xorlw	80h
	subwfb	(??_ModZgCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u66411
	goto	u66410
u66411:
	goto	l3264
u66410:
	line	1527
	
l35180:; BSR set to: 0

;rgl.c: 1527: rgl.srp=(rgl.xmod-m);
	movlb	2	; () banked
	movf	((ModZgCW4@m))&0ffh,w
	subwf	(0+((c:_rgl)+08h)),c,w
	movwf	(0+((c:_rgl)+07h)),c
	
l3264:
	line	1528
;rgl.c: 1528: m+=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	movlb	2	; () banked
	addwf	((ModZgCW4@m))&0ffh
	movlw	0
	addwfc	((ModZgCW4@m+1))&0ffh
	addwfc	((ModZgCW4@m+2))&0ffh
	addwfc	((ModZgCW4@m+3))&0ffh
	line	1529
;rgl.c: 1529: if(m>rgl.xmod) p=rgl.xmod;
	movff	0+((c:_rgl)+08h),??_ModZgCW4+0+0
	movlb	0	; () banked
	clrf	(??_ModZgCW4+0+0+1)&0ffh
	clrf	(??_ModZgCW4+0+0+2)&0ffh
	clrf	(??_ModZgCW4+0+0+3)&0ffh
	movf	(??_ModZgCW4+0+3)&0ffh,w
	xorlw	80h
	movwf	(??_ModZgCW4+4+0)&0ffh
	movlb	2	; () banked
	movf	((ModZgCW4@m))&0ffh,w
	movlb	0	; () banked
	subwf	(??_ModZgCW4+0+0)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCW4@m+1))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ModZgCW4+0+1)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCW4@m+2))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ModZgCW4+0+2)&0ffh,w
	movlb	2	; () banked
	movf	((ModZgCW4@m+3))&0ffh,w
	xorlw	80h
	movlb	0	; () banked
	subwfb	(??_ModZgCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u66421
	goto	u66420
u66421:
	goto	l3265
u66420:
	
l35182:; BSR set to: 0

	movff	0+((c:_rgl)+08h),(ModZgCW4@p)
	goto	l3266
	line	1530
	
l3265:; BSR set to: 0

;rgl.c: 1530: else p=m;
	movff	(ModZgCW4@m),(ModZgCW4@p)
	
l3266:; BSR set to: 0

	line	1531
;rgl.c: 1531: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	1532
;rgl.c: 1532: rgl.tmp_pwm=p;
	movff	(ModZgCW4@p),0+((c:_rgl)+09h)
	line	1533
	
l3254:
	return
	opt stack 0
GLOBAL	__end_of_ModZgCW4
	__end_of_ModZgCW4:
	signat	_ModZgCW4,88
	global	_ModDkCW4

;; *************** function _ModDkCW4 *****************
;; Defined at:
;;		line 1537 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4    8[BANK0 ] long 
;;  ada             1    7[BANK0 ] char 
;;  p               1    6[BANK0 ] unsigned char 
;;  k               1    5[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : C/0
;;		On exit  : C/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       12 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text176,class=CODE,space=0,reloc=2
global __ptext176
__ptext176:
psect	text176
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1537
	global	__size_of_ModDkCW4
	__size_of_ModDkCW4	equ	__end_of_ModDkCW4-_ModDkCW4
	
_ModDkCW4:
	opt	stack 24
	line	1542
	
l35184:
;rgl.c: 1538: signed long m;
;rgl.c: 1539: signed char ada;
;rgl.c: 1540: unsigned char k,p;
;rgl.c: 1542: if(!rgl.fz) return;
	
	btfsc	((c:_rgl)),c,2
	goto	u66431
	goto	u66430
u66431:
	goto	l35188
u66430:
	goto	l3270
	line	1543
	
l35188:
;rgl.c: 1543: ada=DtCW.AC_CW-DtCW.DAD_CW;
	movlb	0	; () banked
	movf	(0+(_DtCW+0Eh))&0ffh,w
	subwf	(0+(_DtCW+0Ch))&0ffh,w
	movwf	((ModDkCW4@ada))&0ffh
	line	1544
	
l35190:; BSR set to: 0

;rgl.c: 1544: k=2;
	movlw	low(02h)
	movwf	((ModDkCW4@k))&0ffh
	line	1545
	
l35192:; BSR set to: 0

;rgl.c: 1545: if(ada<0) k=1;
	btfss	((ModDkCW4@ada))&0ffh,7
	goto	u66441
	goto	u66440
u66441:
	goto	l35196
u66440:
	
l35194:; BSR set to: 0

	movlw	low(01h)
	movwf	((ModDkCW4@k))&0ffh
	line	1546
	
l35196:; BSR set to: 0

;rgl.c: 1546: m=rgl.srp+k*ada;
	movff	(ModDkCW4@k),(c:?___wmul)
	clrf	((c:?___wmul+1)),c
	movf	((ModDkCW4@ada))&0ffh,w
	movwf	(0+((c:?___wmul)+02h)),c
	clrf	(1+((c:?___wmul)+02h)),c
	btfsc	(0+((c:?___wmul)+02h)),c,7
	decf	(1+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	(0+?___wmul),c,w
	movwf	(??_ModDkCW4+0+0)&0ffh
	movlw	0
	addwfc	(1+?___wmul),c,w
	movwf	1+(??_ModDkCW4+0+0)&0ffh
	movff	??_ModDkCW4+0+0,(ModDkCW4@m)
	movff	??_ModDkCW4+0+1,(ModDkCW4@m+1)
	movlw	0
	btfsc	((ModDkCW4@m+1))&0ffh,7
	movlw	-1
	movwf	((ModDkCW4@m+2))&0ffh
	movwf	((ModDkCW4@m+3))&0ffh
	line	1547
	
l35198:; BSR set to: 0

;rgl.c: 1547: if(m>rgl.xmod) p=rgl.xmod;
	movff	0+((c:_rgl)+08h),??_ModDkCW4+0+0
	clrf	(??_ModDkCW4+0+0+1)&0ffh
	clrf	(??_ModDkCW4+0+0+2)&0ffh
	clrf	(??_ModDkCW4+0+0+3)&0ffh
	movf	(??_ModDkCW4+0+3)&0ffh,w
	xorlw	80h
	movwf	(??_ModDkCW4+4+0)&0ffh
	movf	((ModDkCW4@m))&0ffh,w
	subwf	(??_ModDkCW4+0+0)&0ffh,w
	movf	((ModDkCW4@m+1))&0ffh,w
	subwfb	(??_ModDkCW4+0+1)&0ffh,w
	movf	((ModDkCW4@m+2))&0ffh,w
	subwfb	(??_ModDkCW4+0+2)&0ffh,w
	movf	((ModDkCW4@m+3))&0ffh,w
	xorlw	80h
	subwfb	(??_ModDkCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u66451
	goto	u66450
u66451:
	goto	l35202
u66450:
	
l35200:; BSR set to: 0

	movff	0+((c:_rgl)+08h),(ModDkCW4@p)
	goto	l3273
	line	1549
	
l35202:; BSR set to: 0

;rgl.c: 1548: else
;rgl.c: 1549: if(m<PWM.MDMOD) p=PWM.MDMOD;
	movff	0+(_PWM+09h),??_ModDkCW4+0+0	;volatile
	clrf	(??_ModDkCW4+0+0+1)&0ffh
	clrf	(??_ModDkCW4+0+0+2)&0ffh
	clrf	(??_ModDkCW4+0+0+3)&0ffh
	movf	((ModDkCW4@m+3))&0ffh,w
	xorlw	80h
	movwf	(??_ModDkCW4+4+0)&0ffh
	movf	(??_ModDkCW4+0+0)&0ffh,w
	subwf	((ModDkCW4@m))&0ffh,w
	movf	(??_ModDkCW4+0+1)&0ffh,w
	subwfb	((ModDkCW4@m+1))&0ffh,w
	movf	(??_ModDkCW4+0+2)&0ffh,w
	subwfb	((ModDkCW4@m+2))&0ffh,w
	movf	(??_ModDkCW4+0+3)&0ffh,w
	xorlw	80h
	subwfb	(??_ModDkCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u66461
	goto	u66460
u66461:
	goto	l3274
u66460:
	
l35204:; BSR set to: 0

	movff	0+(_PWM+09h),(ModDkCW4@p)	;volatile
	goto	l3273
	line	1550
	
l3274:; BSR set to: 0

;rgl.c: 1550: else p=m;
	movff	(ModDkCW4@m),(ModDkCW4@p)
	
l3273:; BSR set to: 0

	line	1551
;rgl.c: 1551: rgl.tmp_pwm=p;
	movff	(ModDkCW4@p),0+((c:_rgl)+09h)
	line	1552
	
l3270:
	return
	opt stack 0
GLOBAL	__end_of_ModDkCW4
	__end_of_ModDkCW4:
	signat	_ModDkCW4,88
	global	_IncMaxCW4

;; *************** function _IncMaxCW4 *****************
;; Defined at:
;;		line 1699 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Trosnie
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text177,class=CODE,space=0,reloc=2
global __ptext177
__ptext177:
psect	text177
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1699
	global	__size_of_IncMaxCW4
	__size_of_IncMaxCW4	equ	__end_of_IncMaxCW4-_IncMaxCW4
	
_IncMaxCW4:
	opt	stack 24
	line	1703
	
l35206:; BSR set to: 1

;rgl.c: 1700: unsigned char k;
;rgl.c: 1703: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u66471
	goto	u66470
u66471:
	goto	l35218
u66470:
	line	1705
	
l35208:; BSR set to: 1

;rgl.c: 1704: {
;rgl.c: 1705: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u66481
	goto	u66480
u66481:
	goto	l35214
u66480:
	line	1707
	
l35210:; BSR set to: 0

;rgl.c: 1706: {
;rgl.c: 1707: if(rgl.xmod>PWM.MGMOD) rgl.xmod=PWM.MGMOD;
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u66491
	goto	u66490
u66491:
	goto	l3352
u66490:
	
l35212:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+08h)	;volatile
	goto	l3352
	line	1711
	
l35214:; BSR set to: 0

;rgl.c: 1709: else
;rgl.c: 1710: {
;rgl.c: 1711: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
	movf	(0+((c:_rgl)+08h)),c,w
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u66501
	goto	u66500
u66501:
	goto	l3352
u66500:
	
l35216:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+08h)	;volatile
	goto	l3352
	line	1717
	
l35218:; BSR set to: 1

;rgl.c: 1714: }
;rgl.c: 1717: if(Trosnie(1)) return;
	movlw	(01h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u66511
	goto	u66510
u66511:
	goto	l35222
u66510:
	goto	l3352
	line	1718
	
l35222:; BSR set to: 1

	line	1719
	
l35224:; BSR set to: 1

;rgl.c: 1719: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
	movf	(0+((c:_rgl)+08h)),c,w
	movwf	(??_IncMaxCW4+0+0)&0ffh,c
	clrf	(??_IncMaxCW4+0+0+1)&0ffh,c

	movlw	05h
	addwf	(??_IncMaxCW4+0+0),c
	movlw	0
	addwfc	(??_IncMaxCW4+0+1),c
	movf	(??_IncMaxCW4+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	0F1h
	btfsc	status,2
	subwf	(??_IncMaxCW4+0+0),c,w
	btfss	status,0
	goto	u66521
	goto	u66520
u66521:
	goto	l35228
u66520:
	
l35226:; BSR set to: 1

	movlw	low(0F0h)
	movwf	(0+((c:_rgl)+08h)),c
	goto	l35230
	line	1720
	
l35228:; BSR set to: 1

;rgl.c: 1720: else rgl.xmod+=k;
	movlw	(05h)&0ffh
	addwf	(0+((c:_rgl)+08h)),c
	line	1721
	
l35230:; BSR set to: 1

;rgl.c: 1721: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
	movf	(0+((c:_rgl)+08h)),c,w
	movlb	0	; () banked
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u66531
	goto	u66530
u66531:
	goto	l3352
u66530:
	goto	l35216
	line	1722
	
l3352:
	return
	opt stack 0
GLOBAL	__end_of_IncMaxCW4
	__end_of_IncMaxCW4:
	signat	_IncMaxCW4,88
	global	_ModPruCW4

;; *************** function _ModPruCW4 *****************
;; Defined at:
;;		line 1558 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  k               1    1[BANK0 ] char 
;;  tmp             1    0[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Tnizsza
;;		_Tstoi
;;		_Trosnie
;;		_Twyzsza
;;		_Tmaleje
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text178,class=CODE,space=0,reloc=2
global __ptext178
__ptext178:
psect	text178
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1558
	global	__size_of_ModPruCW4
	__size_of_ModPruCW4	equ	__end_of_ModPruCW4-_ModPruCW4
	
_ModPruCW4:
	opt	stack 24
	line	1562
	
l35234:
;rgl.c: 1559: static unsigned char l,m,o,p,q,r,s;
;rgl.c: 1560: unsigned char tmp;
;rgl.c: 1561: signed char k;
;rgl.c: 1562: if(!rgl.fz)
	
	btfsc	((c:_rgl)),c,2
	goto	u66541
	goto	u66540
u66541:
	goto	l3292
u66540:
	line	1564
	
l35236:
;rgl.c: 1563: {
;rgl.c: 1564: l=0;
	movlb	1	; () banked
	clrf	((ModPruCW4@l))&0ffh
	line	1565
;rgl.c: 1565: m=0;
	clrf	((ModPruCW4@m))&0ffh
	line	1566
;rgl.c: 1566: o=0;
	clrf	((ModPruCW4@o))&0ffh
	line	1567
;rgl.c: 1567: p=0;
	clrf	((ModPruCW4@p))&0ffh
	line	1568
	
l35238:; BSR set to: 1

;rgl.c: 1568: if(q<255) q++;
	incf	((ModPruCW4@q))&0ffh,w

	btfsc	status,2
	goto	u66551
	goto	u66550
u66551:
	goto	l35242
u66550:
	
l35240:; BSR set to: 1

	incf	((ModPruCW4@q))&0ffh
	line	1569
	
l35242:; BSR set to: 1

;rgl.c: 1569: if(s<255) s++;
	incf	((ModPruCW4@s))&0ffh,w

	btfsc	status,2
	goto	u66561
	goto	u66560
u66561:
	goto	l35246
u66560:
	
l35244:; BSR set to: 1

	incf	((ModPruCW4@s))&0ffh
	line	1570
	
l35246:; BSR set to: 1

;rgl.c: 1570: if(DtCW._newPCW) s=0;
	movlb	0	; () banked
	
	btfss	(0+(_DtCW+01h))&0ffh,0
	goto	u66571
	goto	u66570
u66571:
	goto	l35250
u66570:
	
l35248:; BSR set to: 0

	movlb	1	; () banked
	clrf	((ModPruCW4@s))&0ffh
	line	1571
	
l35250:
;rgl.c: 1571: if(Tnizsza(0))
	movlw	(0)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u66581
	goto	u66580
u66581:
	goto	l3303
u66580:
	line	1573
	
l35252:
;rgl.c: 1572: {
;rgl.c: 1573: if(!Tnizsza(10))
	movlw	(0Ah)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u66591
	goto	u66590
u66591:
	goto	l3303
u66590:
	line	1575
	
l35254:
;rgl.c: 1574: {
;rgl.c: 1575: k=0;
	movlb	0	; () banked
	clrf	((ModPruCW4@k))&0ffh
	line	1576
	
l35256:; BSR set to: 0

;rgl.c: 1576: if(Tstoi()&&s>=1)
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u66601
	goto	u66600
u66601:
	goto	l35264
u66600:
	
l35258:; BSR set to: 0

	movlb	1	; () banked
	movf	((ModPruCW4@s))&0ffh,w
	btfsc	status,2
	goto	u66611
	goto	u66610
u66611:
	goto	l35264
u66610:
	line	1578
	
l35260:; BSR set to: 1

;rgl.c: 1577: {
;rgl.c: 1578: s=0;
	clrf	((ModPruCW4@s))&0ffh
	line	1579
	
l35262:; BSR set to: 1

;rgl.c: 1579: k=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	1581
	
l35264:
;rgl.c: 1580: }
;rgl.c: 1581: if(Trosnie(1)&&s>=1)
	movlw	(01h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u66621
	goto	u66620
u66621:
	goto	l3299
u66620:
	
l35266:
	movlb	1	; () banked
	movf	((ModPruCW4@s))&0ffh,w
	btfsc	status,2
	goto	u66631
	goto	u66630
u66631:
	goto	l3299
u66630:
	line	1583
	
l35268:; BSR set to: 1

;rgl.c: 1582: {
;rgl.c: 1583: s=0;
	clrf	((ModPruCW4@s))&0ffh
	line	1584
	
l35270:; BSR set to: 1

;rgl.c: 1584: k=10;
	movlw	low(0Ah)
	movlb	0	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	1585
	
l35272:; BSR set to: 0

;rgl.c: 1585: if(Trosnie(2)) k=8;
	movlw	(02h)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u66641
	goto	u66640
u66641:
	goto	l35276
u66640:
	
l35274:; BSR set to: 0

	movlw	low(08h)
	movwf	((ModPruCW4@k))&0ffh
	goto	l35276
	line	1587
	
l3299:
	line	1588
;rgl.c: 1587: else
;rgl.c: 1588: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	1589
	
l35276:
;rgl.c: 1589: if(PWM.BufPWM>rgl.xmod) return;
	movlb	0	; () banked
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u66651
	goto	u66650
u66651:
	goto	l35280
u66650:
	goto	l3303
	line	1590
	
l35280:; BSR set to: 0

;rgl.c: 1590: tmp=rgl.xmod-PWM.BufPWM;
	movf	(0+(_PWM+01h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+08h)),c,w
	movwf	((ModPruCW4@tmp))&0ffh
	line	1591
;rgl.c: 1591: if(k>tmp) k=tmp;
	movf	((ModPruCW4@tmp))&0ffh,w
	bsf	status,0
	bsf	status,2
	btfss	((ModPruCW4@k))&0ffh,7
	subwf	((ModPruCW4@k))&0ffh,w
	btfss	status,0
	bsf	status,2
	btfsc	status,2
	goto	u66661
	goto	u66660
u66661:
	goto	l35284
u66660:
	
l35282:; BSR set to: 0

	movff	(ModPruCW4@tmp),(ModPruCW4@k)
	line	1592
	
l35284:; BSR set to: 0

;rgl.c: 1592: if(PWM.MMAXCW>PWM.MGMOD)
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u66671
	goto	u66670
u66671:
	goto	l35292
u66670:
	line	1594
	
l35286:; BSR set to: 0

;rgl.c: 1593: {
;rgl.c: 1594: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW4@k))&0ffh,w
	movwf	(??_ModPruCW4+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW4@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW4+0+0)&0ffh,c
	
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	movwf	(??_ModPruCW4+2+0)&0ffh,c
	clrf	(??_ModPruCW4+2+0+1)&0ffh,c

	movf	(??_ModPruCW4+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW4+4+0)&0ffh,c
	movf	(??_ModPruCW4+0+0),c,w
	subwf	(??_ModPruCW4+2+0),c,w
	movf	(??_ModPruCW4+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW4+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u66681
	goto	u66680
u66681:
	goto	l35290
u66680:
	
l35288:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	goto	l3303
	line	1595
	
l35290:; BSR set to: 0

;rgl.c: 1595: else rgl.srp+=k;
	movf	((ModPruCW4@k))&0ffh,w
	addwf	(0+((c:_rgl)+07h)),c
	goto	l3303
	line	1599
	
l35292:; BSR set to: 0

;rgl.c: 1597: else
;rgl.c: 1598: {
;rgl.c: 1599: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW4@k))&0ffh,w
	movwf	(??_ModPruCW4+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW4@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW4+0+0)&0ffh,c
	
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	movwf	(??_ModPruCW4+2+0)&0ffh,c
	clrf	(??_ModPruCW4+2+0+1)&0ffh,c

	movf	(??_ModPruCW4+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW4+4+0)&0ffh,c
	movf	(??_ModPruCW4+0+0),c,w
	subwf	(??_ModPruCW4+2+0),c,w
	movf	(??_ModPruCW4+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW4+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u66691
	goto	u66690
u66691:
	goto	l35290
u66690:
	
l35294:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	goto	l3303
	line	1608
	
l3292:
	line	1610
;rgl.c: 1611: r=0;
	movlb	1	; () banked
	clrf	((ModPruCW4@q))&0ffh
	line	1612
;rgl.c: 1612: s=0;
	clrf	((ModPruCW4@s))&0ffh
	line	1613
	
l35302:; BSR set to: 1

;rgl.c: 1613: if(m<255) m++;
	incf	((ModPruCW4@m))&0ffh,w

	btfsc	status,2
	goto	u66701
	goto	u66700
u66701:
	goto	l35306
u66700:
	
l35304:; BSR set to: 1

	incf	((ModPruCW4@m))&0ffh
	line	1614
	
l35306:; BSR set to: 1

;rgl.c: 1614: if(p<255) p++;
	incf	((ModPruCW4@p))&0ffh,w

	btfsc	status,2
	goto	u66711
	goto	u66710
u66711:
	goto	l35310
u66710:
	
l35308:; BSR set to: 1

	incf	((ModPruCW4@p))&0ffh
	line	1615
	
l35310:; BSR set to: 1

;rgl.c: 1615: if(o<255) o++;
	incf	((ModPruCW4@o))&0ffh,w

	btfsc	status,2
	goto	u66721
	goto	u66720
u66721:
	goto	l35314
u66720:
	
l35312:; BSR set to: 1

	incf	((ModPruCW4@o))&0ffh
	line	1616
	
l35314:; BSR set to: 1

;rgl.c: 1616: if(DtCW.DAD_CW>DtCW.AC_CW)
	movlb	0	; () banked
	movf	(0+(_DtCW+0Eh))&0ffh,w
	cpfslt	(0+(_DtCW+0Ch))&0ffh
	goto	u66731
	goto	u66730
u66731:
	goto	l3317
u66730:
	line	1618
	
l35316:; BSR set to: 0

;rgl.c: 1617: {
;rgl.c: 1618: k=0;
	clrf	((ModPruCW4@k))&0ffh
	line	1619
	
l35318:; BSR set to: 0

;rgl.c: 1619: if(Trosnie(0)&&m>=2)
	movlw	(0)&0ffh
	
	call	_Trosnie
	btfss	status,0
	goto	u66741
	goto	u66740
u66741:
	goto	l35326
u66740:
	
l35320:; BSR set to: 0

	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW4@m))&0ffh
	goto	u66751
	goto	u66750
u66751:
	goto	l35326
u66750:
	line	1621
	
l35322:; BSR set to: 1

;rgl.c: 1620: {
;rgl.c: 1621: p=0;
	clrf	((ModPruCW4@p))&0ffh
	line	1622
;rgl.c: 1622: o=0;
	clrf	((ModPruCW4@o))&0ffh
	line	1623
;rgl.c: 1623: l=0;
	clrf	((ModPruCW4@l))&0ffh
	line	1624
;rgl.c: 1624: m=0;
	clrf	((ModPruCW4@m))&0ffh
	line	1625
	
l35324:; BSR set to: 1

;rgl.c: 1625: k=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	1626
;rgl.c: 1626: }
	goto	l35342
	line	1628
	
l35326:
;rgl.c: 1627: else
;rgl.c: 1628: if(Twyzsza(1))
	movlw	(01h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u66761
	goto	u66760
u66761:
	goto	l35338
u66760:
	line	1630
	
l35328:
;rgl.c: 1629: {
;rgl.c: 1630: if(Tstoi())
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u66771
	goto	u66770
u66771:
	goto	l35342
u66770:
	line	1632
	
l35330:
;rgl.c: 1631: {
;rgl.c: 1632: if(l>=2)
	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW4@l))&0ffh
	goto	u66781
	goto	u66780
u66781:
	goto	l3322
u66780:
	line	1634
	
l35332:; BSR set to: 1

;rgl.c: 1633: {
;rgl.c: 1634: k=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	1635
	
l35334:; BSR set to: 0

;rgl.c: 1635: if(Twyzsza(3)) k=2;
	movlw	(03h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u66791
	goto	u66790
u66791:
	goto	l35338
u66790:
	
l35336:; BSR set to: 0

	movlw	low(02h)
	movwf	((ModPruCW4@k))&0ffh
	line	1636
	
l35338:
;rgl.c: 1636: l=0;
	movlb	1	; () banked
	clrf	((ModPruCW4@l))&0ffh
	line	1637
;rgl.c: 1637: }
	goto	l35342
	line	1638
	
l3322:; BSR set to: 1

	line	1640
;rgl.c: 1638: else
;rgl.c: 1639: {
;rgl.c: 1640: k=0;
	movlb	0	; () banked
	clrf	((ModPruCW4@k))&0ffh
	line	1641
	
l35340:; BSR set to: 0

;rgl.c: 1641: l++;
	movlb	1	; () banked
	incf	((ModPruCW4@l))&0ffh
	line	1645
	
l35342:
;rgl.c: 1645: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM.MDMOD;
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPruCW4+0+0)&0ffh,c
	clrf	(??_ModPruCW4+0+0+1)&0ffh,c

	movf	((ModPruCW4@k))&0ffh,w
	subwf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_ModPruCW4+2+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfss	((ModPruCW4@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW4+2+0)&0ffh,c
	
	movf	(??_ModPruCW4+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW4+4+0)&0ffh,c
	movf	(??_ModPruCW4+0+0),c,w
	subwf	(??_ModPruCW4+2+0),c,w
	movf	(??_ModPruCW4+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW4+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u66801
	goto	u66800
u66801:
	goto	l35346
u66800:
	
l35344:; BSR set to: 0

	movff	0+(_PWM+09h),0+((c:_rgl)+07h)	;volatile
	goto	l35348
	line	1646
	
l35346:; BSR set to: 0

;rgl.c: 1646: else rgl.srp-=k;
	movf	((ModPruCW4@k))&0ffh,w
	subwf	(0+((c:_rgl)+07h)),c
	line	1647
	
l35348:; BSR set to: 0

;rgl.c: 1647: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+(_PWM+01Eh))&0ffh	;volatile
	goto	u66811
	goto	u66810
u66811:
	goto	l35352
u66810:
	
l35350:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	line	1648
	
l35352:; BSR set to: 0

;rgl.c: 1648: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u66821
	goto	u66820
u66821:
	goto	l3303
u66820:
	
l35354:; BSR set to: 0

	movff	0+((c:_rgl)+07h),0+((c:_rgl)+08h)
	goto	l3303
	line	1651
	
l3317:; BSR set to: 0

	line	1653
;rgl.c: 1651: else
;rgl.c: 1652: {
;rgl.c: 1653: k=0;
	clrf	((ModPruCW4@k))&0ffh
	line	1654
	
l35358:; BSR set to: 0

;rgl.c: 1654: if(Tmaleje(0)&&m>=2)
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfss	status,0
	goto	u66831
	goto	u66830
u66831:
	goto	l35366
u66830:
	
l35360:; BSR set to: 0

	movlw	(02h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW4@m))&0ffh
	goto	u66841
	goto	u66840
u66841:
	goto	l35366
u66840:
	line	1656
	
l35362:; BSR set to: 1

;rgl.c: 1655: {
;rgl.c: 1656: p=0;
	clrf	((ModPruCW4@p))&0ffh
	line	1657
;rgl.c: 1657: o=0;
	clrf	((ModPruCW4@o))&0ffh
	line	1658
;rgl.c: 1658: l=0;
	clrf	((ModPruCW4@l))&0ffh
	line	1659
;rgl.c: 1659: m=0;
	clrf	((ModPruCW4@m))&0ffh
	line	1660
	
l35364:; BSR set to: 1

;rgl.c: 1660: k=1;
	movlw	low(01h)
	movlb	0	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	1662
;rgl.c: 1662: }
	goto	l35378
	line	1664
	
l35366:
;rgl.c: 1663: else
;rgl.c: 1664: if(Tnizsza(1))
	movlw	(01h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u66851
	goto	u66850
u66851:
	goto	l35374
u66850:
	line	1666
	
l35368:
;rgl.c: 1665: {
;rgl.c: 1666: if(Tstoi())
	call	_Tstoi	;wreg free
	btfss	status,0
	goto	u66861
	goto	u66860
u66861:
	goto	l35378
u66860:
	line	1668
	
l35370:
;rgl.c: 1667: {
;rgl.c: 1668: if(l>=3)
	movlw	(03h-1)
	movlb	1	; () banked
	cpfsgt	((ModPruCW4@l))&0ffh
	goto	u66871
	goto	u66870
u66871:
	goto	l3335
u66870:
	line	1670
	
l35372:; BSR set to: 1

;rgl.c: 1669: {
;rgl.c: 1670: k=2;
	movlw	low(02h)
	movlb	0	; () banked
	movwf	((ModPruCW4@k))&0ffh
	line	1671
	
l35374:
;rgl.c: 1671: l=0;
	movlb	1	; () banked
	clrf	((ModPruCW4@l))&0ffh
	line	1672
;rgl.c: 1672: }
	goto	l35378
	line	1673
	
l3335:; BSR set to: 1

	line	1675
;rgl.c: 1673: else
;rgl.c: 1674: {
;rgl.c: 1675: k=0;
	movlb	0	; () banked
	clrf	((ModPruCW4@k))&0ffh
	line	1676
	
l35376:; BSR set to: 0

;rgl.c: 1676: l++;
	movlb	1	; () banked
	incf	((ModPruCW4@l))&0ffh
	line	1680
	
l35378:
;rgl.c: 1680: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u66881
	goto	u66880
u66881:
	goto	l35386
u66880:
	line	1682
	
l35380:; BSR set to: 0

;rgl.c: 1681: {
;rgl.c: 1682: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW4@k))&0ffh,w
	movwf	(??_ModPruCW4+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW4@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW4+0+0)&0ffh,c
	
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	movwf	(??_ModPruCW4+2+0)&0ffh,c
	clrf	(??_ModPruCW4+2+0+1)&0ffh,c

	movf	(??_ModPruCW4+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW4+4+0)&0ffh,c
	movf	(??_ModPruCW4+0+0),c,w
	subwf	(??_ModPruCW4+2+0),c,w
	movf	(??_ModPruCW4+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW4+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u66891
	goto	u66890
u66891:
	goto	l35384
u66890:
	
l35382:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+07h)	;volatile
	goto	l35392
	line	1683
	
l35384:; BSR set to: 0

;rgl.c: 1683: else rgl.srp+=k;
	movf	((ModPruCW4@k))&0ffh,w
	addwf	(0+((c:_rgl)+07h)),c
	goto	l35392
	line	1687
	
l35386:; BSR set to: 0

;rgl.c: 1685: else
;rgl.c: 1686: {
;rgl.c: 1687: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
	movf	(0+((c:_rgl)+07h)),c,w
	addwf	((ModPruCW4@k))&0ffh,w
	movwf	(??_ModPruCW4+0+0)&0ffh,c
	clrf	wreg
	btfsc	status,0
	incf	wreg
	btfsc	((ModPruCW4@k))&0ffh,7
	decf	wreg
	movwf	1+(??_ModPruCW4+0+0)&0ffh,c
	
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	movwf	(??_ModPruCW4+2+0)&0ffh,c
	clrf	(??_ModPruCW4+2+0+1)&0ffh,c

	movf	(??_ModPruCW4+2+1),c,w
	xorlw	80h
	movwf	(??_ModPruCW4+4+0)&0ffh,c
	movf	(??_ModPruCW4+0+0),c,w
	subwf	(??_ModPruCW4+2+0),c,w
	movf	(??_ModPruCW4+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPruCW4+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u66901
	goto	u66900
u66901:
	goto	l35384
u66900:
	
l35388:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+07h)	;volatile
	line	1690
	
l35392:; BSR set to: 0

;rgl.c: 1689: }
;rgl.c: 1690: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
	movf	(0+((c:_rgl)+07h)),c,w
	cpfslt	(0+((c:_rgl)+08h)),c
	goto	u66911
	goto	u66910
u66911:
	goto	l3303
u66910:
	goto	l35354
	line	1694
	
l3303:
	return
	opt stack 0
GLOBAL	__end_of_ModPruCW4
	__end_of_ModPruCW4:
	signat	_ModPruCW4,88
	global	_ModPrzCW4

;; *************** function _ModPrzCW4 *****************
;; Defined at:
;;		line 1726 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  p               2    9[BANK0 ] unsigned int 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;;		___lwdiv
;;		_Tmaleje
;;		_Twyzsza
;;		_Tnizsza
;;		_Tstoi
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text179,class=CODE,space=0,reloc=2
global __ptext179
__ptext179:
psect	text179
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1726
	global	__size_of_ModPrzCW4
	__size_of_ModPrzCW4	equ	__end_of_ModPrzCW4-_ModPrzCW4
	
_ModPrzCW4:
	opt	stack 24
	line	1730
	
l35396:
;rgl.c: 1727: static unsigned char trb=0;
;rgl.c: 1728: unsigned int p;
;rgl.c: 1730: p=(rgl.tmp_pwm-PWM.MDMOD)*100;
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+09h)),c,w
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	btfss	status,0
	decf	1+((c:?___wmul)),c
	
	movlw	high(064h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(064h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movff	0+?___wmul,(ModPrzCW4@p)
	movff	1+?___wmul,(ModPrzCW4@p+1)
	line	1731
;rgl.c: 1731: p=p/(PWM.MGMOD-PWM.MDMOD);
	movff	(ModPrzCW4@p),(?___lwdiv)
	movff	(ModPrzCW4@p+1),(?___lwdiv+1)
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	
	movwf	(0+(?___lwdiv+02h))&0ffh
	clrf	1+(0+(?___lwdiv+02h))&0ffh
	btfss	status,0
	decf	1+(0+(?___lwdiv+02h))&0ffh
	
	call	___lwdiv	;wreg free
	movff	0+?___lwdiv,(ModPrzCW4@p)
	movff	1+?___lwdiv,(ModPrzCW4@p+1)
	line	1733
	
l35398:; BSR set to: 0

;rgl.c: 1733: if(!rgl.nmod)
	
	btfsc	((c:_rgl)),c,5
	goto	u66921
	goto	u66920
u66921:
	goto	l35442
u66920:
	line	1735
	
l35400:; BSR set to: 0

;rgl.c: 1734: {
;rgl.c: 1735: trb=0;
	movlb	1	; () banked
	clrf	((ModPrzCW4@trb))&0ffh
	line	1736
	
l35402:; BSR set to: 1

;rgl.c: 1736: if(p<=35)
	movlw	024h
	movlb	0	; () banked
	subwf	((ModPrzCW4@p))&0ffh,w
	movlw	0
	subwfb	((ModPrzCW4@p+1))&0ffh,w
	btfsc	status,0
	goto	u66931
	goto	u66930
u66931:
	goto	l35412
u66930:
	line	1738
	
l35404:; BSR set to: 0

;rgl.c: 1737: {
;rgl.c: 1738: if(!Tmaleje(0)&&Twyzsza(3))
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfsc	status,0
	goto	u66941
	goto	u66940
u66941:
	goto	l3369
u66940:
	
l35406:; BSR set to: 0

	movlw	(03h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u66951
	goto	u66950
u66951:
	goto	l3369
u66950:
	line	1740
	
l35408:; BSR set to: 0

;rgl.c: 1739: {
;rgl.c: 1740: trb=1;
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((ModPrzCW4@trb))&0ffh
	line	1741
	
l35410:; BSR set to: 1

;rgl.c: 1741: rgl.nmod=1;
	bsf	((c:_rgl)),c,5
	goto	l3369
	line	1746
	
l35412:; BSR set to: 0

;rgl.c: 1744: else
;rgl.c: 1745: {
;rgl.c: 1746: if(!Tmaleje(0))
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfsc	status,0
	goto	u66961
	goto	u66960
u66961:
	goto	l3369
u66960:
	line	1748
	
l35414:; BSR set to: 0

;rgl.c: 1747: {
;rgl.c: 1748: if(Twyzsza(5))
	movlw	(05h)&0ffh
	
	call	_Twyzsza
	btfss	status,0
	goto	u66971
	goto	u66970
u66971:
	goto	l35426
u66970:
	line	1750
	
l35416:; BSR set to: 0

;rgl.c: 1749: {
;rgl.c: 1750: if(rgl.srp-3<PWM.MDMOD) rgl.srp=PWM.MDMOD;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movwf	(??_ModPrzCW4+0+0)&0ffh
	clrf	(??_ModPrzCW4+0+0+1)&0ffh

	movlw	low(-3)
	addwf	(0+((c:_rgl)+07h)),c,w
	movwf	(??_ModPrzCW4+2+0)&0ffh
	clrf	1+(??_ModPrzCW4+2+0)&0ffh
	movlw	high(-3)
	addwfc	1+(??_ModPrzCW4+2+0)&0ffh
	movf	(??_ModPrzCW4+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPrzCW4+4+0)&0ffh
	movf	(??_ModPrzCW4+0+0)&0ffh,w
	subwf	(??_ModPrzCW4+2+0)&0ffh,w
	movf	(??_ModPrzCW4+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPrzCW4+4+0)&0ffh,w
	btfsc	status,0
	goto	u66981
	goto	u66980
u66981:
	goto	l35420
u66980:
	
l35418:; BSR set to: 0

	movff	0+(_PWM+09h),0+((c:_rgl)+07h)	;volatile
	goto	l35422
	line	1751
	
l35420:; BSR set to: 0

;rgl.c: 1751: else rgl.srp-=3;
	movlw	(03h)&0ffh
	subwf	(0+((c:_rgl)+07h)),c
	line	1752
	
l35422:; BSR set to: 0

;rgl.c: 1752: trb=2;
	movlw	low(02h)
	movlb	1	; () banked
	movwf	((ModPrzCW4@trb))&0ffh
	goto	l35410
	line	1754
	
l35426:; BSR set to: 0

;rgl.c: 1754: return;
	goto	l3369
	line	1766
	
l35428:; BSR set to: 1

;rgl.c: 1765: {
;rgl.c: 1766: if(!Twyzsza(3))
	movlw	(03h)&0ffh
	
	call	_Twyzsza
	btfsc	status,0
	goto	u66991
	goto	u66990
u66991:
	goto	l3369
u66990:
	line	1768
	
l35430:; BSR set to: 1

;rgl.c: 1767: {
;rgl.c: 1768: if(Tnizsza(3)||Tstoi()||Tmaleje(0))
	movlw	(03h)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u67001
	goto	u67000
u67001:
	goto	l3377
u67000:
	
l35432:; BSR set to: 1

	call	_Tstoi	;wreg free
	btfsc	status,0
	goto	u67011
	goto	u67010
u67011:
	goto	l3377
u67010:
	
l35434:; BSR set to: 1

	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfss	status,0
	goto	u67021
	goto	u67020
u67021:
	goto	l3369
u67020:
	
l3377:; BSR set to: 1

	line	1770
;rgl.c: 1769: {
;rgl.c: 1770: trb=0;
	clrf	((ModPrzCW4@trb))&0ffh
	line	1771
;rgl.c: 1771: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	goto	l3369
	line	1778
	
l35436:; BSR set to: 1

;rgl.c: 1777: {
;rgl.c: 1778: if(Tmaleje(0)||!Twyzsza(4))
	movlw	(0)&0ffh
	
	call	_Tmaleje
	btfsc	status,0
	goto	u67031
	goto	u67030
u67031:
	goto	l3377
u67030:
	
l35438:; BSR set to: 1

	movlw	(04h)&0ffh
	
	call	_Twyzsza
	btfsc	status,0
	goto	u67041
	goto	u67040
u67041:
	goto	l3369
u67040:
	goto	l3377
	line	1762
	
l35442:; BSR set to: 0

	movlb	1	; () banked
	movf	((ModPrzCW4@trb))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 2, Range of values is 1 to 2
; switch strategies available:
; Name         Instructions Cycles
; simple_byte            7     4 (average)
;	Chosen strategy is simple_byte

	xorlw	1^0	; case 1
	skipnz
	goto	l35428
	xorlw	2^1	; case 2
	skipnz
	goto	l35436
	goto	l3369

	line	1788
	
l3369:
	return
	opt stack 0
GLOBAL	__end_of_ModPrzCW4
	__end_of_ModPrzCW4:
	signat	_ModPrzCW4,88
	global	_PropCO4

;; *************** function _PropCO4 *****************
;; Defined at:
;;		line 1792 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_WriteOPWM
;; This function is called by:
;;		_Moduluj
;; This function uses a non-reentrant model
;;
psect	text180,class=CODE,space=0,reloc=2
global __ptext180
__ptext180:
psect	text180
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1792
	global	__size_of_PropCO4
	__size_of_PropCO4	equ	__end_of_PropCO4-_PropCO4
	
_PropCO4:
	opt	stack 23
	line	1793
	
l35444:
;rgl.c: 1793: if(!rgl.nmod)
	
	btfsc	((c:_rgl)),c,5
	goto	u67051
	goto	u67050
u67051:
	goto	l35474
u67050:
	line	1795
	
l35446:
;rgl.c: 1794: {
;rgl.c: 1795: if(!DtCO._err_CO)
	movlb	0	; () banked
	
	btfsc	((_DtCO))&0ffh,0
	goto	u67061
	goto	u67060
u67061:
	goto	l35472
u67060:
	line	1797
	
l35448:; BSR set to: 0

;rgl.c: 1796: {
;rgl.c: 1797: if(rgl.x_f==3)
	movf	(0+((c:_rgl)+03h)),c,w
	xorlw	3

	btfss	status,2
	goto	u67071
	goto	u67070
u67071:
	goto	l35454
u67070:
	line	1799
	
l35450:; BSR set to: 0

;rgl.c: 1798: {
;rgl.c: 1799: if(rgl.tmp_pwm>PWM.MGMOD)
	movf	(0+((c:_rgl)+09h)),c,w
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u67081
	goto	u67080
u67081:
	goto	l35472
u67080:
	line	1800
	
l35452:; BSR set to: 0

;rgl.c: 1800: rgl.tmp_pwm=PWM.MGMOD;
	movff	0+(_PWM+0Ah),0+((c:_rgl)+09h)	;volatile
	goto	l35472
	line	1803
	
l35454:; BSR set to: 0

;rgl.c: 1802: else
;rgl.c: 1803: if(rgl.x_f==2)
	movf	(0+((c:_rgl)+03h)),c,w
	xorlw	2

	btfss	status,2
	goto	u67091
	goto	u67090
u67091:
	goto	l35460
u67090:
	line	1805
	
l35456:; BSR set to: 0

;rgl.c: 1804: {
;rgl.c: 1805: if(rgl.tmp_pwm>PWM.PROP1)
	movf	(0+((c:_rgl)+09h)),c,w
	cpfslt	(0+(_PWM+019h))&0ffh	;volatile
	goto	u67101
	goto	u67100
u67101:
	goto	l35472
u67100:
	line	1806
	
l35458:; BSR set to: 0

;rgl.c: 1806: rgl.tmp_pwm=PWM.PROP1;
	movff	0+(_PWM+019h),0+((c:_rgl)+09h)	;volatile
	goto	l35472
	line	1809
	
l35460:; BSR set to: 0

;rgl.c: 1808: else
;rgl.c: 1809: if(rgl.x_f==1)
	decf	(0+((c:_rgl)+03h)),c,w

	btfss	status,2
	goto	u67111
	goto	u67110
u67111:
	goto	l35466
u67110:
	line	1811
	
l35462:; BSR set to: 0

;rgl.c: 1810: {
;rgl.c: 1811: if(rgl.tmp_pwm>PWM.PROP2)
	movf	(0+((c:_rgl)+09h)),c,w
	cpfslt	(0+(_PWM+01Ah))&0ffh	;volatile
	goto	u67121
	goto	u67120
u67121:
	goto	l35472
u67120:
	line	1812
	
l35464:; BSR set to: 0

;rgl.c: 1812: rgl.tmp_pwm=PWM.PROP2;
	movff	0+(_PWM+01Ah),0+((c:_rgl)+09h)	;volatile
	goto	l35472
	line	1815
	
l35466:; BSR set to: 0

;rgl.c: 1814: else
;rgl.c: 1815: if(rgl.x_f<=0)
	movf	(0+((c:_rgl)+03h)),c,w
	xorlw	80h
	addlw	-((01h)^80h)
	btfsc	status,0
	goto	u67131
	goto	u67130
u67131:
	goto	l35472
u67130:
	line	1817
	
l35468:; BSR set to: 0

;rgl.c: 1816: {
;rgl.c: 1817: if(rgl.tmp_pwm>PWM.PROP3)
	movf	(0+((c:_rgl)+09h)),c,w
	cpfslt	(0+(_PWM+01Bh))&0ffh	;volatile
	goto	u67141
	goto	u67140
u67141:
	goto	l3389
u67140:
	line	1818
	
l35470:; BSR set to: 0

;rgl.c: 1818: rgl.tmp_pwm=PWM.PROP3;
	movff	0+(_PWM+01Bh),0+((c:_rgl)+09h)	;volatile
	goto	l35472
	line	1820
	
l3389:; BSR set to: 0

	line	1821
	
l35472:; BSR set to: 0

;rgl.c: 1819: }
;rgl.c: 1820: }
;rgl.c: 1821: WriteOPWM(rgl.tmp_pwm);
	movf	(0+((c:_rgl)+09h)),c,w
	
	call	_WriteOPWM
	line	1822
;rgl.c: 1822: }
	goto	l3399
	line	1823
	
l35474:
;rgl.c: 1823: else WriteOPWM(PWM.MDMOD);
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	
	call	_WriteOPWM
	line	1824
	
l3399:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PropCO4
	__end_of_PropCO4:
	signat	_PropCO4,88
	global	_WriteOPWM

;; *************** function _WriteOPWM *****************
;; Defined at:
;;		line 400 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
;; Parameters:    Size  Location     Type
;;  tpwm            1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  tpwm            1   12[BANK0 ] unsigned char 
;;  tmp             2   10[BANK0 ] unsigned int 
;;  aosc            1    9[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        9 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;;		___lwdiv
;; This function is called by:
;;		_PropOPT
;;		_PropCO
;;		_PropCO4
;;		_PropCO2
;; This function uses a non-reentrant model
;;
psect	text181,class=CODE,space=0,reloc=2
global __ptext181
__ptext181:
psect	text181
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
	line	400
	global	__size_of_WriteOPWM
	__size_of_WriteOPWM	equ	__end_of_WriteOPWM-_WriteOPWM
	
_WriteOPWM:; BSR set to: 0

	opt	stack 23
;WriteOPWM@tpwm stored from wreg
	line	411
	movff	wreg,(WriteOPWM@tpwm)
	
l33674:
;pwm.c: 401: unsigned char aosc;
;pwm.c: 402: unsigned int tmp;
;pwm.c: 411: if(tpwm<PWM.MDMOD) tpwm=PWM.MDMOD;
	movlb	0	; () banked
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	cpfslt	((WriteOPWM@tpwm))&0ffh
	goto	u62971
	goto	u62970
u62971:
	goto	l33678
u62970:
	
l33676:; BSR set to: 0

	movff	0+(_PWM+09h),(WriteOPWM@tpwm)	;volatile
	line	413
	
l33678:; BSR set to: 0

;pwm.c: 413: if(tpwm>0xF0) tpwm=0xF0;
	movlw	(0F1h-1)
	cpfsgt	((WriteOPWM@tpwm))&0ffh
	goto	u62981
	goto	u62980
u62981:
	goto	l33682
u62980:
	
l33680:; BSR set to: 0

	movlw	low(0F0h)
	movwf	((WriteOPWM@tpwm))&0ffh
	line	414
	
l33682:; BSR set to: 0

;pwm.c: 414: if(PWM._ENOSC)
	
	btfss	((_PWM))&0ffh,1	;volatile
	goto	u62991
	goto	u62990
u62991:
	goto	l33702
u62990:
	line	417
	
l33684:; BSR set to: 0

;pwm.c: 415: {
;pwm.c: 417: if(tpwm>=PWM.MGMOD) aosc=PWM.MINOSC;
	movf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	subwf	((WriteOPWM@tpwm))&0ffh,w
	btfss	status,0
	goto	u63001
	goto	u63000
u63001:
	goto	l33688
u63000:
	
l33686:; BSR set to: 0

	movff	0+(_PWM+0Ch),(WriteOPWM@aosc)	;volatile
	goto	l2591
	line	420
	
l33688:; BSR set to: 0

;pwm.c: 418: else
;pwm.c: 419: {
;pwm.c: 420: tmp=(tpwm-PWM.MDMOD)*100;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	((WriteOPWM@tpwm))&0ffh,w
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	btfss	status,0
	decf	1+((c:?___wmul)),c
	
	movlw	high(064h)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(064h)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movff	0+?___wmul,(WriteOPWM@tmp)
	movff	1+?___wmul,(WriteOPWM@tmp+1)
	line	421
;pwm.c: 421: tmp/=(PWM.MGMOD-PWM.MDMOD);
	movff	(WriteOPWM@tmp),(?___lwdiv)
	movff	(WriteOPWM@tmp+1),(?___lwdiv+1)
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+(_PWM+0Ah))&0ffh,w	;volatile
	
	movwf	(0+(?___lwdiv+02h))&0ffh
	clrf	1+(0+(?___lwdiv+02h))&0ffh
	btfss	status,0
	decf	1+(0+(?___lwdiv+02h))&0ffh
	
	call	___lwdiv	;wreg free
	movff	0+?___lwdiv,(WriteOPWM@tmp)
	movff	1+?___lwdiv,(WriteOPWM@tmp+1)
	line	422
;pwm.c: 422: tmp*=(PWM.MAXOSC-PWM.MINOSC);
	movff	(WriteOPWM@tmp),(c:?___wmul)
	movff	(WriteOPWM@tmp+1),(c:?___wmul+1)
	movf	(0+(_PWM+0Ch))&0ffh,w	;volatile
	subwf	(0+(_PWM+0Bh))&0ffh,w	;volatile
	
	movwf	(0+((c:?___wmul)+02h)),c
	clrf	1+(0+((c:?___wmul)+02h)),c
	btfss	status,0
	decf	1+(0+((c:?___wmul)+02h)),c
	
	call	___wmul	;wreg free
	movff	0+?___wmul,(WriteOPWM@tmp)
	movff	1+?___wmul,(WriteOPWM@tmp+1)
	line	423
;pwm.c: 423: tmp/=100;
	movff	(WriteOPWM@tmp),(?___lwdiv)
	movff	(WriteOPWM@tmp+1),(?___lwdiv+1)
	movlw	high(064h)
	movwf	(1+(?___lwdiv+02h))&0ffh
	movlw	low(064h)
	movwf	(0+(?___lwdiv+02h))&0ffh
	call	___lwdiv	;wreg free
	movff	0+?___lwdiv,(WriteOPWM@tmp)
	movff	1+?___lwdiv,(WriteOPWM@tmp+1)
	line	424
	
l33690:; BSR set to: 0

;pwm.c: 424: if(tmp>PWM.MAXOSC) aosc=PWM.MINOSC;
	movf	(0+(_PWM+0Bh))&0ffh,w	;volatile
	movwf	(??_WriteOPWM+0+0)&0ffh
	clrf	(??_WriteOPWM+0+0+1)&0ffh

	movf	((WriteOPWM@tmp))&0ffh,w
	subwf	(??_WriteOPWM+0+0)&0ffh,w
	movf	((WriteOPWM@tmp+1))&0ffh,w
	subwfb	(??_WriteOPWM+0+1)&0ffh,w
	btfsc	status,0
	goto	u63011
	goto	u63010
u63011:
	goto	l33694
u63010:
	goto	l33686
	line	425
	
l33694:; BSR set to: 0

;pwm.c: 425: else aosc=PWM.MAXOSC-(unsigned char)tmp;
	movf	((WriteOPWM@tmp))&0ffh,w
	subwf	(0+(_PWM+0Bh))&0ffh,w	;volatile
	movwf	((WriteOPWM@aosc))&0ffh
	line	426
	
l2591:; BSR set to: 0

	line	428
;pwm.c: 426: }
;pwm.c: 428: if(aosc>(PWM.MAG_MOD-tpwm)) aosc=PWM.MAG_MOD-tpwm;
	movf	((WriteOPWM@aosc))&0ffh,w
	movwf	(??_WriteOPWM+0+0)&0ffh
	clrf	(??_WriteOPWM+0+0+1)&0ffh

	movf	((WriteOPWM@tpwm))&0ffh,w
	movff	0+(_PWM+0Eh),??_WriteOPWM+2+0	;volatile
	clrf	(??_WriteOPWM+2+0+1)&0ffh
	subwf	(??_WriteOPWM+2+0)&0ffh
	movlw	0
	subwfb	(??_WriteOPWM+2+1)&0ffh
	movf	(??_WriteOPWM+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_WriteOPWM+4+0)&0ffh
	movf	(??_WriteOPWM+0+0)&0ffh,w
	subwf	(??_WriteOPWM+2+0)&0ffh,w
	movf	(??_WriteOPWM+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_WriteOPWM+4+0)&0ffh,w
	btfsc	status,0
	goto	u63021
	goto	u63020
u63021:
	goto	l33698
u63020:
	
l33696:; BSR set to: 0

	movf	((WriteOPWM@tpwm))&0ffh,w
	subwf	(0+(_PWM+0Eh))&0ffh,w	;volatile
	movwf	((WriteOPWM@aosc))&0ffh
	goto	l33702
	line	430
	
l33698:; BSR set to: 0

;pwm.c: 429: else
;pwm.c: 430: if(aosc>(tpwm-PWM.MAD_MOD)) aosc=tpwm-PWM.MAD_MOD;
	movf	((WriteOPWM@aosc))&0ffh,w
	movwf	(??_WriteOPWM+0+0)&0ffh
	clrf	(??_WriteOPWM+0+0+1)&0ffh

	movf	(0+(_PWM+0Dh))&0ffh,w	;volatile
	movff	(WriteOPWM@tpwm),??_WriteOPWM+2+0
	clrf	(??_WriteOPWM+2+0+1)&0ffh
	subwf	(??_WriteOPWM+2+0)&0ffh
	movlw	0
	subwfb	(??_WriteOPWM+2+1)&0ffh
	movf	(??_WriteOPWM+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_WriteOPWM+4+0)&0ffh
	movf	(??_WriteOPWM+0+0)&0ffh,w
	subwf	(??_WriteOPWM+2+0)&0ffh,w
	movf	(??_WriteOPWM+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_WriteOPWM+4+0)&0ffh,w
	btfsc	status,0
	goto	u63031
	goto	u63030
u63031:
	goto	l33702
u63030:
	
l33700:; BSR set to: 0

	movf	(0+(_PWM+0Dh))&0ffh,w	;volatile
	subwf	((WriteOPWM@tpwm))&0ffh,w
	movwf	((WriteOPWM@aosc))&0ffh
	line	434
	
l33702:; BSR set to: 0

;pwm.c: 431: }
;pwm.c: 434: PWM._ENPWM=0;
	bcf	((_PWM))&0ffh,0	;volatile
	line	435
	
l33704:; BSR set to: 0

;pwm.c: 435: PWM.BufPWM=tpwm;
	movff	(WriteOPWM@tpwm),0+(_PWM+01h)	;volatile
	line	436
	
l33706:; BSR set to: 0

;pwm.c: 436: if(PWM._ENOSC) PWM.BufOSC=aosc;
	
	btfss	((_PWM))&0ffh,1	;volatile
	goto	u63041
	goto	u63040
u63041:
	goto	l2597
u63040:
	
l33708:; BSR set to: 0

	movff	(WriteOPWM@aosc),0+(_PWM+02h)	;volatile
	goto	l2598
	line	437
	
l2597:; BSR set to: 0

;pwm.c: 437: else PWM.BufOSC=0;
	clrf	(0+(_PWM+02h))&0ffh	;volatile
	
l2598:; BSR set to: 0

	line	438
;pwm.c: 438: PWM._ENPWM=1;
	bsf	((_PWM))&0ffh,0	;volatile
	line	439
	
l2599:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_WriteOPWM
	__end_of_WriteOPWM:
	signat	_WriteOPWM,4216
	global	_Tmaleje

;; *************** function _Tmaleje *****************
;; Defined at:
;;		line 2469 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;  t               1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  t               1   32[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : C/0
;;		On exit  : C/0
;;		Unchanged: FFFFFFF3/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModZgCO
;;		_ModPruCO
;;		_ModPruCW
;;		_ModPrzCW
;;		_ModPruCW4
;;		_ModPrzCW4
;;		_ModPruCW2
;;		_ModPrzCW2
;; This function uses a non-reentrant model
;;
psect	text182,class=CODE,space=0,reloc=2
global __ptext182
__ptext182:
psect	text182
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2469
	global	__size_of_Tmaleje
	__size_of_Tmaleje	equ	__end_of_Tmaleje-_Tmaleje
	
_Tmaleje:; BSR set to: 0

	opt	stack 24
;Tmaleje@t stored from wreg
	movff	wreg,(c:Tmaleje@t)
	line	2470
	
l35484:
;rgl.c: 2470: return (rgl.x_dt<(-1*t));
	movf	((c:Tmaleje@t)),c,w
	mullw	01h
	comf	(prodl),c
	comf	(prodh),c
	infsnz	(prodl),c
	incf	(prodh),c
	movff	0+((c:_rgl)+04h),??_Tmaleje+0+0
	clrf	(??_Tmaleje+0+0+1)&0ffh,c
	btfsc	(??_Tmaleje+0+0)&0ffh,c,7
	decf	(??_Tmaleje+0+0+1)&0ffh,c
	movf	(??_Tmaleje+0+1),c,w
	xorlw	80h
	movwf	(??_Tmaleje+2+0)&0ffh,c
	movf	(prodl),c,w
	subwf	(??_Tmaleje+0+0),c,w
	movf	(prodh),c,w
	xorlw	80h
	subwfb	(??_Tmaleje+2+0)&0ffh,c,w
	btfss	status,0
	goto	u67161
	goto	u67160
u67161:
	goto	l35488
u67160:
	
l35486:
	bcf	status,0
	goto	l3636
	
l35488:
	bsf	status,0
	line	2471
	
l3636:
	return
	opt stack 0
GLOBAL	__end_of_Tmaleje
	__end_of_Tmaleje:
	signat	_Tmaleje,4216
	global	_Tstoi

;; *************** function _Tstoi *****************
;; Defined at:
;;		line 2476 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModZgCO
;;		_IncConstCOCW
;;		_ModZgCW
;;		_ModPruCW
;;		_IncConstCOCW4
;;		_ModPruCW4
;;		_ModPrzCW4
;;		_IncConstCW2
;;		_IncConstCO2
;;		_ModPruCW2
;;		_ModPrzCW2
;; This function uses a non-reentrant model
;;
psect	text183,class=CODE,space=0,reloc=2
global __ptext183
__ptext183:
psect	text183
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2476
	global	__size_of_Tstoi
	__size_of_Tstoi	equ	__end_of_Tstoi-_Tstoi
	
_Tstoi:
	opt	stack 24
	line	2477
	
l35492:
;rgl.c: 2477: return !rgl.x_dt;
	movf	(0+((c:_rgl)+04h)),c,w
	btfsc	status,2
	goto	u67171
	goto	u67170
u67171:
	goto	l35496
u67170:
	
l35494:
	bcf	status,0
	goto	l3639
	
l35496:
	bsf	status,0
	line	2478
	
l3639:
	return
	opt stack 0
GLOBAL	__end_of_Tstoi
	__end_of_Tstoi:
	signat	_Tstoi,88
	global	_Trowna

;; *************** function _Trowna *****************
;; Defined at:
;;		line 2502 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/1
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModPruCO
;;		_ModDkCW
;;		_ModPruCW2
;; This function uses a non-reentrant model
;;
psect	text184,class=CODE,space=0,reloc=2
global __ptext184
__ptext184:
psect	text184
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2502
	global	__size_of_Trowna
	__size_of_Trowna	equ	__end_of_Trowna-_Trowna
	
_Trowna:
	opt	stack 24
	line	2503
	
l35508:
;rgl.c: 2503: return !rgl.x_t;
	movf	(0+((c:_rgl)+02h)),c,w
	btfsc	status,2
	goto	u67191
	goto	u67190
u67191:
	goto	l35512
u67190:
	
l35510:
	bcf	status,0
	goto	l3648
	
l35512:
	bsf	status,0
	line	2504
	
l3648:
	return
	opt stack 0
GLOBAL	__end_of_Trowna
	__end_of_Trowna:
	signat	_Trowna,88
	global	_Trosnie

;; *************** function _Trosnie *****************
;; Defined at:
;;		line 2460 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;  t               1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  t               1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/1
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModPruCO
;;		_IncMaxCO
;;		_ModPruCW
;;		_IncMaxCW
;;		_ModPruCW4
;;		_IncMaxCW4
;;		_ModPruCW2
;;		_IncMaxCW2
;; This function uses a non-reentrant model
;;
psect	text185,class=CODE,space=0,reloc=2
global __ptext185
__ptext185:
psect	text185
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2460
	global	__size_of_Trosnie
	__size_of_Trosnie	equ	__end_of_Trosnie-_Trosnie
	
_Trosnie:
	opt	stack 24
;Trosnie@t stored from wreg
	movff	wreg,(c:Trosnie@t)
	line	2461
	
l35516:
;rgl.c: 2461: return (rgl.x_dt>t);
	movf	((c:Trosnie@t)),c,w
	btfsc	(0+((c:_rgl)+04h)),c,7
	goto	u67200
	xorlw	0ffh
	addwf	(0+((c:_rgl)+04h)),c,w
	btfsc	status,0
	goto	u67201
	goto	u67200
u67201:
	goto	l35520
u67200:
	
l35518:
	bcf	status,0
	goto	l3633
	
l35520:
	bsf	status,0
	line	2462
	
l3633:
	return
	opt stack 0
GLOBAL	__end_of_Trosnie
	__end_of_Trosnie:
	signat	_Trosnie,4216
	global	_FirstPCW

;; *************** function _FirstPCW *****************
;; Defined at:
;;		line 632 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  m               4    4[BANK2 ] long 
;;  maxmod          1    3[BANK2 ] unsigned char 
;;  p2              1    2[BANK2 ] unsigned char 
;;  p               1    1[BANK2 ] unsigned char 
;;  tmp             1    0[BANK2 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       5       0       8       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       13 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___awdiv
;;		___wmul
;;		___aldiv
;;		___lmul
;; This function is called by:
;;		_StartMCW
;; This function uses a non-reentrant model
;;
psect	text186,class=CODE,space=0,reloc=2
global __ptext186
__ptext186:
psect	text186
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	632
	global	__size_of_FirstPCW
	__size_of_FirstPCW	equ	__end_of_FirstPCW-_FirstPCW
	
_FirstPCW:
	opt	stack 23
	line	640
	
l35524:; BSR set to: 0

;rgl.c: 633: signed long m;
;rgl.c: 634: unsigned char maxmod,p,p2,tmp;
;rgl.c: 640: tmp=(PWM.FIRSTPB-PWM.MDMOD)/4;
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	subwf	(0+(_PWM+018h))&0ffh,w	;volatile
	
	movwf	((?___awdiv))&0ffh
	clrf	1+((?___awdiv))&0ffh
	btfss	status,0
	decf	1+((?___awdiv))&0ffh
	
	movlw	high(04h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(04h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	movwf	((FirstPCW@tmp))&0ffh
	line	641
	
l35526:; BSR set to: 2

;rgl.c: 641: if(PWM.MMAXCW>(PWM.FIRSTPB+tmp))
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	movwf	(??_FirstPCW+0+0)&0ffh
	clrf	(??_FirstPCW+0+0+1)&0ffh

	movlb	2	; () banked
	movf	((FirstPCW@tmp))&0ffh,w
	movlb	0	; () banked
	movff	0+(_PWM+018h),??_FirstPCW+2+0	;volatile
	clrf	(??_FirstPCW+2+0+1)&0ffh
	addwf	(??_FirstPCW+2+0)&0ffh
	movlw	0
	addwfc	(??_FirstPCW+2+1)&0ffh
	movf	(??_FirstPCW+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_FirstPCW+4+0)&0ffh
	movf	(??_FirstPCW+0+0)&0ffh,w
	subwf	(??_FirstPCW+2+0)&0ffh,w
	movf	(??_FirstPCW+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_FirstPCW+4+0)&0ffh,w
	btfsc	status,0
	goto	u67211
	goto	u67210
u67211:
	goto	l2943
u67210:
	line	643
	
l35528:; BSR set to: 0

;rgl.c: 642: {
;rgl.c: 643: maxmod=PWM.FIRSTPB+tmp;
	movf	(0+(_PWM+018h))&0ffh,w	;volatile
	movlb	2	; () banked
	addwf	((FirstPCW@tmp))&0ffh,w
	movwf	((FirstPCW@maxmod))&0ffh
	line	644
;rgl.c: 644: }
	goto	l35530
	line	645
	
l2943:; BSR set to: 0

	line	647
;rgl.c: 645: else
;rgl.c: 646: {
;rgl.c: 647: maxmod=PWM.MMAXCW;
	movff	0+(_PWM+01Eh),(FirstPCW@maxmod)	;volatile
	line	653
	
l35530:
;rgl.c: 648: }
;rgl.c: 653: if(DtCW.CW>=20&&DtCW.CW<=60)
	movlb	0	; () banked
	lfsr	2,_DtCW+02h
	movlw	(014h-1)
	cpfsgt	indf2
	goto	u67221
	goto	u67220
u67221:
	goto	l35546
u67220:
	
l35532:; BSR set to: 0

	movlw	(03Dh)&0ffh
	cpfslt	(0+(_DtCW+02h))&0ffh
	goto	u67231
	goto	u67230
u67231:
	goto	l35546
u67230:
	line	655
	
l35534:; BSR set to: 0

;rgl.c: 654: {
;rgl.c: 655: m=(60-DtCW.CW)*10;
	movf	(0+(_DtCW+02h))&0ffh,w
	sublw	low(03Ch)
	
	movwf	((c:?___wmul)),c
	movlw	0
	btfss	status,0
	incf	wreg
	sublw	high(03Ch)
	
	movwf	1+((c:?___wmul)),c
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movlb	2	; () banked
	movff	0+?___wmul,(FirstPCW@m)
	movff	1+?___wmul,(FirstPCW@m+1)
	movlw	0
	btfsc	((FirstPCW@m+1))&0ffh,7
	movlw	-1
	movwf	((FirstPCW@m+2))&0ffh
	movwf	((FirstPCW@m+3))&0ffh
	line	656
;rgl.c: 656: m=m/(60-20);
	movff	(FirstPCW@m),(c:?___aldiv)
	movff	(FirstPCW@m+1),(c:?___aldiv+1)
	movff	(FirstPCW@m+2),(c:?___aldiv+2)
	movff	(FirstPCW@m+3),(c:?___aldiv+3)
	movlw	low(028h)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(028h)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(028h)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(028h)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movff	0+?___aldiv,(FirstPCW@m)
	movff	1+?___aldiv,(FirstPCW@m+1)
	movff	2+?___aldiv,(FirstPCW@m+2)
	movff	3+?___aldiv,(FirstPCW@m+3)
	line	657
;rgl.c: 657: m=m*(maxmod-PWM.MDMOD);
	movff	(FirstPCW@m),(c:?___lmul)
	movff	(FirstPCW@m+1),(c:?___lmul+1)
	movff	(FirstPCW@m+2),(c:?___lmul+2)
	movff	(FirstPCW@m+3),(c:?___lmul+3)
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movlb	2	; () banked
	movff	(FirstPCW@maxmod),??_FirstPCW+0+0
	movlb	0	; () banked
	clrf	(??_FirstPCW+0+0+1)&0ffh
	subwf	(??_FirstPCW+0+0)&0ffh
	movlw	0
	subwfb	(??_FirstPCW+0+1)&0ffh
	movff	??_FirstPCW+0+0,0+((c:?___lmul)+04h)
	movff	??_FirstPCW+0+1,1+((c:?___lmul)+04h)
	movlw	0
	btfsc	(1+((c:?___lmul)+04h)),c,7
	movlw	-1
	movwf	(2+((c:?___lmul)+04h)),c
	movwf	(3+((c:?___lmul)+04h)),c
	call	___lmul	;wreg free
	movff	0+?___lmul,(FirstPCW@m)
	movff	1+?___lmul,(FirstPCW@m+1)
	movff	2+?___lmul,(FirstPCW@m+2)
	movff	3+?___lmul,(FirstPCW@m+3)
	line	658
	
l35536:
;rgl.c: 658: if(m<0) m=0;
	movlb	2	; () banked
	btfss	((FirstPCW@m+3))&0ffh,7
	goto	u67241
	goto	u67240
u67241:
	goto	l35540
u67240:
	
l35538:; BSR set to: 2

	clrf	((FirstPCW@m))&0ffh
	clrf	((FirstPCW@m+1))&0ffh
	clrf	((FirstPCW@m+2))&0ffh
	clrf	((FirstPCW@m+3))&0ffh

	line	659
	
l35540:; BSR set to: 2

;rgl.c: 659: m=m/10+PWM.MDMOD;
	movff	(FirstPCW@m),(c:?___aldiv)
	movff	(FirstPCW@m+1),(c:?___aldiv+1)
	movff	(FirstPCW@m+2),(c:?___aldiv+2)
	movff	(FirstPCW@m+3),(c:?___aldiv+3)
	movlw	low(0Ah)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(0Ah)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(0Ah)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(0Ah)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	addwf	(0+?___aldiv),c,w
	movlb	2	; () banked
	movwf	((FirstPCW@m))&0ffh
	movlw	0
	addwfc	(1+?___aldiv),c,w
	movwf	1+((FirstPCW@m))&0ffh
	movlw	0
	addwfc	(2+?___aldiv),c,w
	movwf	2+((FirstPCW@m))&0ffh
	movlw	0
	addwfc	(3+?___aldiv),c,w
	movwf	3+((FirstPCW@m))&0ffh
	line	660
	
l35542:; BSR set to: 2

;rgl.c: 660: if(m>0xff) p=maxmod;
	movf	((FirstPCW@m+3))&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u67255
	movlw	0
	subwf	((FirstPCW@m+2))&0ffh,w
	bnz	u67255
	movlw	01h
	subwf	((FirstPCW@m+1))&0ffh,w
	bnz	u67255
	movlw	0
	subwf	((FirstPCW@m))&0ffh,w
u67255:

	btfss	status,0
	goto	u67251
	goto	u67250
u67251:
	goto	l2947
u67250:
	
l35544:; BSR set to: 2

	movff	(FirstPCW@maxmod),(FirstPCW@p)
	goto	l35554
	line	661
	
l2947:; BSR set to: 2

;rgl.c: 661: else p=m;
	movff	(FirstPCW@m),(FirstPCW@p)
	goto	l35554
	line	665
	
l35546:; BSR set to: 0

;rgl.c: 663: else
;rgl.c: 664: {
;rgl.c: 665: if(DtCW.CW<20) p=maxmod;
	movlw	(014h)&0ffh
	cpfslt	(0+(_DtCW+02h))&0ffh
	goto	u67261
	goto	u67260
u67261:
	goto	l35550
u67260:
	
l35548:; BSR set to: 0

	movff	(FirstPCW@maxmod),(FirstPCW@p)
	line	666
	
l35550:; BSR set to: 0

;rgl.c: 666: if(DtCW.CW>60) p=PWM.MDMOD;
	lfsr	2,_DtCW+02h
	movlw	(03Dh-1)
	cpfsgt	indf2
	goto	u67271
	goto	u67270
u67271:
	goto	l35554
u67270:
	
l35552:; BSR set to: 0

	movff	0+(_PWM+09h),(FirstPCW@p)	;volatile
	line	670
	
l35554:
;rgl.c: 667: }
;rgl.c: 670: m=(DtCW.PCW-30)*10;
	movlw	low(-30)
	movlb	0	; () banked
	addwf	(0+(_DtCW+03h))&0ffh,w
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	movlw	high(-30)
	addwfc	1+((c:?___wmul)),c
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movlb	2	; () banked
	movff	0+?___wmul,(FirstPCW@m)
	movff	1+?___wmul,(FirstPCW@m+1)
	movlw	0
	btfsc	((FirstPCW@m+1))&0ffh,7
	movlw	-1
	movwf	((FirstPCW@m+2))&0ffh
	movwf	((FirstPCW@m+3))&0ffh
	line	671
;rgl.c: 671: m=m/(60-30);
	movff	(FirstPCW@m),(c:?___aldiv)
	movff	(FirstPCW@m+1),(c:?___aldiv+1)
	movff	(FirstPCW@m+2),(c:?___aldiv+2)
	movff	(FirstPCW@m+3),(c:?___aldiv+3)
	movlw	low(01Eh)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(01Eh)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(01Eh)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(01Eh)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movff	0+?___aldiv,(FirstPCW@m)
	movff	1+?___aldiv,(FirstPCW@m+1)
	movff	2+?___aldiv,(FirstPCW@m+2)
	movff	3+?___aldiv,(FirstPCW@m+3)
	line	672
;rgl.c: 672: m=m*(maxmod-PWM.MDMOD);
	movff	(FirstPCW@m),(c:?___lmul)
	movff	(FirstPCW@m+1),(c:?___lmul+1)
	movff	(FirstPCW@m+2),(c:?___lmul+2)
	movff	(FirstPCW@m+3),(c:?___lmul+3)
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movlb	2	; () banked
	movff	(FirstPCW@maxmod),??_FirstPCW+0+0
	movlb	0	; () banked
	clrf	(??_FirstPCW+0+0+1)&0ffh
	subwf	(??_FirstPCW+0+0)&0ffh
	movlw	0
	subwfb	(??_FirstPCW+0+1)&0ffh
	movff	??_FirstPCW+0+0,0+((c:?___lmul)+04h)
	movff	??_FirstPCW+0+1,1+((c:?___lmul)+04h)
	movlw	0
	btfsc	(1+((c:?___lmul)+04h)),c,7
	movlw	-1
	movwf	(2+((c:?___lmul)+04h)),c
	movwf	(3+((c:?___lmul)+04h)),c
	call	___lmul	;wreg free
	movff	0+?___lmul,(FirstPCW@m)
	movff	1+?___lmul,(FirstPCW@m+1)
	movff	2+?___lmul,(FirstPCW@m+2)
	movff	3+?___lmul,(FirstPCW@m+3)
	line	673
	
l35556:
;rgl.c: 673: if(m<0) m=0;
	movlb	2	; () banked
	btfss	((FirstPCW@m+3))&0ffh,7
	goto	u67281
	goto	u67280
u67281:
	goto	l35560
u67280:
	
l35558:; BSR set to: 2

	clrf	((FirstPCW@m))&0ffh
	clrf	((FirstPCW@m+1))&0ffh
	clrf	((FirstPCW@m+2))&0ffh
	clrf	((FirstPCW@m+3))&0ffh

	line	674
	
l35560:; BSR set to: 2

;rgl.c: 674: m=m/10+PWM.MDMOD;
	movff	(FirstPCW@m),(c:?___aldiv)
	movff	(FirstPCW@m+1),(c:?___aldiv+1)
	movff	(FirstPCW@m+2),(c:?___aldiv+2)
	movff	(FirstPCW@m+3),(c:?___aldiv+3)
	movlw	low(0Ah)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(0Ah)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(0Ah)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(0Ah)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	addwf	(0+?___aldiv),c,w
	movlb	2	; () banked
	movwf	((FirstPCW@m))&0ffh
	movlw	0
	addwfc	(1+?___aldiv),c,w
	movwf	1+((FirstPCW@m))&0ffh
	movlw	0
	addwfc	(2+?___aldiv),c,w
	movwf	2+((FirstPCW@m))&0ffh
	movlw	0
	addwfc	(3+?___aldiv),c,w
	movwf	3+((FirstPCW@m))&0ffh
	line	675
	
l35562:; BSR set to: 2

;rgl.c: 675: if(m>0xff) p2=maxmod;
	movf	((FirstPCW@m+3))&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u67295
	movlw	0
	subwf	((FirstPCW@m+2))&0ffh,w
	bnz	u67295
	movlw	01h
	subwf	((FirstPCW@m+1))&0ffh,w
	bnz	u67295
	movlw	0
	subwf	((FirstPCW@m))&0ffh,w
u67295:

	btfss	status,0
	goto	u67291
	goto	u67290
u67291:
	goto	l2953
u67290:
	
l35564:; BSR set to: 2

	movff	(FirstPCW@maxmod),(FirstPCW@p2)
	goto	l35566
	line	676
	
l2953:; BSR set to: 2

;rgl.c: 676: else p2=m;
	movff	(FirstPCW@m),(FirstPCW@p2)
	line	679
	
l35566:; BSR set to: 2

;rgl.c: 679: if(p>p2) p=p2;
	movf	((FirstPCW@p))&0ffh,w
	cpfslt	((FirstPCW@p2))&0ffh
	goto	u67301
	goto	u67300
u67301:
	goto	l2955
u67300:
	
l35568:; BSR set to: 2

	movff	(FirstPCW@p2),(FirstPCW@p)
	
l2955:; BSR set to: 2

	line	682
;rgl.c: 682: if(DtCW.DCW>=0&&DtCW.DCW<=40)
	movlb	0	; () banked
	btfsc	(0+(_DtCW+07h))&0ffh,7
	goto	u67311
	goto	u67310
u67311:
	goto	l35584
u67310:
	
l35570:; BSR set to: 0

	movf	(0+(_DtCW+07h))&0ffh,w
	xorlw	80h
	addlw	-((029h)^80h)
	btfsc	status,0
	goto	u67321
	goto	u67320
u67321:
	goto	l35584
u67320:
	line	684
	
l35572:; BSR set to: 0

;rgl.c: 683: {
;rgl.c: 684: m=DtCW.DCW*10;
	movf	(0+(_DtCW+07h))&0ffh,w
	movwf	((c:?___wmul)),c
	clrf	((c:?___wmul+1)),c
	btfsc	((c:?___wmul)),c,7
	decf	((c:?___wmul+1)),c
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	call	___wmul	;wreg free
	movlb	2	; () banked
	movff	0+?___wmul,(FirstPCW@m)
	movff	1+?___wmul,(FirstPCW@m+1)
	movlw	0
	btfsc	((FirstPCW@m+1))&0ffh,7
	movlw	-1
	movwf	((FirstPCW@m+2))&0ffh
	movwf	((FirstPCW@m+3))&0ffh
	line	685
;rgl.c: 685: m=m/(40-0);
	movff	(FirstPCW@m),(c:?___aldiv)
	movff	(FirstPCW@m+1),(c:?___aldiv+1)
	movff	(FirstPCW@m+2),(c:?___aldiv+2)
	movff	(FirstPCW@m+3),(c:?___aldiv+3)
	movlw	low(028h)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(028h)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(028h)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(028h)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movff	0+?___aldiv,(FirstPCW@m)
	movff	1+?___aldiv,(FirstPCW@m+1)
	movff	2+?___aldiv,(FirstPCW@m+2)
	movff	3+?___aldiv,(FirstPCW@m+3)
	line	686
;rgl.c: 686: m=m*(maxmod-PWM.MDMOD);
	movff	(FirstPCW@m),(c:?___lmul)
	movff	(FirstPCW@m+1),(c:?___lmul+1)
	movff	(FirstPCW@m+2),(c:?___lmul+2)
	movff	(FirstPCW@m+3),(c:?___lmul+3)
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	movlb	2	; () banked
	movff	(FirstPCW@maxmod),??_FirstPCW+0+0
	movlb	0	; () banked
	clrf	(??_FirstPCW+0+0+1)&0ffh
	subwf	(??_FirstPCW+0+0)&0ffh
	movlw	0
	subwfb	(??_FirstPCW+0+1)&0ffh
	movff	??_FirstPCW+0+0,0+((c:?___lmul)+04h)
	movff	??_FirstPCW+0+1,1+((c:?___lmul)+04h)
	movlw	0
	btfsc	(1+((c:?___lmul)+04h)),c,7
	movlw	-1
	movwf	(2+((c:?___lmul)+04h)),c
	movwf	(3+((c:?___lmul)+04h)),c
	call	___lmul	;wreg free
	movff	0+?___lmul,(FirstPCW@m)
	movff	1+?___lmul,(FirstPCW@m+1)
	movff	2+?___lmul,(FirstPCW@m+2)
	movff	3+?___lmul,(FirstPCW@m+3)
	line	687
	
l35574:
;rgl.c: 687: if(m<0) m=0;
	movlb	2	; () banked
	btfss	((FirstPCW@m+3))&0ffh,7
	goto	u67331
	goto	u67330
u67331:
	goto	l35578
u67330:
	
l35576:; BSR set to: 2

	clrf	((FirstPCW@m))&0ffh
	clrf	((FirstPCW@m+1))&0ffh
	clrf	((FirstPCW@m+2))&0ffh
	clrf	((FirstPCW@m+3))&0ffh

	line	688
	
l35578:; BSR set to: 2

;rgl.c: 688: m=m/10+PWM.MDMOD;
	movff	(FirstPCW@m),(c:?___aldiv)
	movff	(FirstPCW@m+1),(c:?___aldiv+1)
	movff	(FirstPCW@m+2),(c:?___aldiv+2)
	movff	(FirstPCW@m+3),(c:?___aldiv+3)
	movlw	low(0Ah)
	movwf	(0+((c:?___aldiv)+04h)),c
	movlw	high(0Ah)
	movwf	(1+((c:?___aldiv)+04h)),c
	movlw	low highword(0Ah)
	movwf	(2+((c:?___aldiv)+04h)),c
	movlw	high highword(0Ah)
	movwf	(3+((c:?___aldiv)+04h)),c
	call	___aldiv	;wreg free
	movf	(0+(_PWM+09h))&0ffh,w	;volatile
	addwf	(0+?___aldiv),c,w
	movlb	2	; () banked
	movwf	((FirstPCW@m))&0ffh
	movlw	0
	addwfc	(1+?___aldiv),c,w
	movwf	1+((FirstPCW@m))&0ffh
	movlw	0
	addwfc	(2+?___aldiv),c,w
	movwf	2+((FirstPCW@m))&0ffh
	movlw	0
	addwfc	(3+?___aldiv),c,w
	movwf	3+((FirstPCW@m))&0ffh
	line	689
	
l35580:; BSR set to: 2

;rgl.c: 689: if(m>0xff) p2=maxmod;
	movf	((FirstPCW@m+3))&0ffh,w
	xorlw	80h
	addlw	-(0)^80h
	
	bnz	u67345
	movlw	0
	subwf	((FirstPCW@m+2))&0ffh,w
	bnz	u67345
	movlw	01h
	subwf	((FirstPCW@m+1))&0ffh,w
	bnz	u67345
	movlw	0
	subwf	((FirstPCW@m))&0ffh,w
u67345:

	btfss	status,0
	goto	u67341
	goto	u67340
u67341:
	goto	l2958
u67340:
	
l35582:; BSR set to: 2

	movff	(FirstPCW@maxmod),(FirstPCW@p2)
	goto	l35590
	line	690
	
l2958:; BSR set to: 2

;rgl.c: 690: else p2=m;
	movff	(FirstPCW@m),(FirstPCW@p2)
	goto	l35590
	line	694
	
l35584:; BSR set to: 0

;rgl.c: 692: else
;rgl.c: 693: {
;rgl.c: 694: if(DtCW.DCW>40) p2=maxmod;
	movf	(0+(_DtCW+07h))&0ffh,w
	xorlw	80h
	addlw	-((029h)^80h)
	btfss	status,0
	goto	u67351
	goto	u67350
u67351:
	goto	l2961
u67350:
	
l35586:; BSR set to: 0

	movff	(FirstPCW@maxmod),(FirstPCW@p2)
	
l2961:; BSR set to: 0

	line	695
;rgl.c: 695: if(DtCW.DCW<0) p2=PWM.MDMOD;
	btfss	(0+(_DtCW+07h))&0ffh,7
	goto	u67361
	goto	u67360
u67361:
	goto	l35590
u67360:
	
l35588:; BSR set to: 0

	movff	0+(_PWM+09h),(FirstPCW@p2)	;volatile
	line	699
	
l35590:
;rgl.c: 696: }
;rgl.c: 699: if(p>p2) p=p2;
	movlb	2	; () banked
	movf	((FirstPCW@p))&0ffh,w
	cpfslt	((FirstPCW@p2))&0ffh
	goto	u67371
	goto	u67370
u67371:
	goto	l35594
u67370:
	
l35592:; BSR set to: 2

	movff	(FirstPCW@p2),(FirstPCW@p)
	line	701
	
l35594:; BSR set to: 2

;rgl.c: 701: return p;
	movf	((FirstPCW@p))&0ffh,w
	line	702
	
l2964:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_FirstPCW
	__end_of_FirstPCW:
	signat	_FirstPCW,89
	global	_ClrMod

;; *************** function _ClrMod *****************
;; Defined at:
;;		line 706 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModToCW
;;		_ModToCO
;; This function uses a non-reentrant model
;;
psect	text187,class=CODE,space=0,reloc=2
global __ptext187
__ptext187:
psect	text187
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	706
	global	__size_of_ClrMod
	__size_of_ClrMod	equ	__end_of_ClrMod-_ClrMod
	
_ClrMod:; BSR set to: 2

	opt	stack 24
	line	707
	
l35598:; BSR set to: 0

;rgl.c: 707: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	708
;rgl.c: 708: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	709
;rgl.c: 709: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	710
;rgl.c: 710: rgl.xmod=PWM.BufPWM;
	movff	0+(_PWM+01h),0+((c:_rgl)+08h)	;volatile
	line	711
;rgl.c: 711: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	712
;rgl.c: 712: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	713
;rgl.c: 713: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	714
;rgl.c: 714: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	715
;rgl.c: 715: rgl.inv_mod=0;
	bcf	(0+((c:_rgl)+01h)),c,0
	line	716
	
l2967:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ClrMod
	__end_of_ClrMod:
	signat	_ClrMod,88
	global	_ClrMod4

;; *************** function _ClrMod4 *****************
;; Defined at:
;;		line 1407 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModToCW4
;;		_ModToCO4
;; This function uses a non-reentrant model
;;
psect	text188,class=CODE,space=0,reloc=2
global __ptext188
__ptext188:
psect	text188
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1407
	global	__size_of_ClrMod4
	__size_of_ClrMod4	equ	__end_of_ClrMod4-_ClrMod4
	
_ClrMod4:; BSR set to: 0

	opt	stack 24
	line	1408
	
l35600:; BSR set to: 0

;rgl.c: 1408: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	1409
;rgl.c: 1409: rgl.med_up=0;
	bcf	((c:_rgl)),c,3
	line	1410
;rgl.c: 1410: rgl.fast_up=0;
	bcf	((c:_rgl)),c,4
	line	1411
;rgl.c: 1411: rgl.xmod=PWM.BufPWM;
	movff	0+(_PWM+01h),0+((c:_rgl)+08h)	;volatile
	line	1412
;rgl.c: 1412: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	1413
;rgl.c: 1413: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	1414
;rgl.c: 1414: rgl.nmod=0;
	bcf	((c:_rgl)),c,5
	line	1415
;rgl.c: 1415: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	1416
;rgl.c: 1416: rgl.inv_mod=0;
	bcf	(0+((c:_rgl)+01h)),c,0
	line	1417
	
l3226:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ClrMod4
	__end_of_ClrMod4:
	signat	_ClrMod4,88
	global	_FirstPCW2

;; *************** function _FirstPCW2 *****************
;; Defined at:
;;		line 1907 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_StartMCW2
;;		_ModZgCW2
;; This function uses a non-reentrant model
;;
psect	text189,class=CODE,space=0,reloc=2
global __ptext189
__ptext189:
psect	text189
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1907
	global	__size_of_FirstPCW2
	__size_of_FirstPCW2	equ	__end_of_FirstPCW2-_FirstPCW2
	
_FirstPCW2:; BSR set to: 0

	opt	stack 24
	line	1908
	
l35602:
;rgl.c: 1908: if(PWM.MMAXCW>PWM.MGMOD)
	movlb	0	; () banked
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+0Ah))&0ffh	;volatile
	goto	u67381
	goto	u67380
u67381:
	goto	l35608
u67380:
	line	1910
	
l35604:; BSR set to: 0

;rgl.c: 1909: {
;rgl.c: 1910: if(DtCW.DCW>0) rgl.xmod=PWM.MGMOD;
	movf	(0+(_DtCW+07h))&0ffh,w
	xorlw	80h
	addlw	-((01h)^80h)
	btfss	status,0
	goto	u67391
	goto	u67390
u67391:
	goto	l3417
u67390:
	
l35606:; BSR set to: 0

	movff	0+(_PWM+0Ah),0+((c:_rgl)+08h)	;volatile
	goto	l3424
	line	1911
	
l3417:; BSR set to: 0

;rgl.c: 1911: else rgl.xmod=PWM.FIRSTPB;
	movff	0+(_PWM+018h),0+((c:_rgl)+08h)	;volatile
	goto	l3424
	line	1915
	
l35608:; BSR set to: 0

;rgl.c: 1913: else
;rgl.c: 1914: {
;rgl.c: 1915: if(DtCW.DCW>0) rgl.xmod=PWM.MMAXCW;
	movf	(0+(_DtCW+07h))&0ffh,w
	xorlw	80h
	addlw	-((01h)^80h)
	btfss	status,0
	goto	u67401
	goto	u67400
u67401:
	goto	l35612
u67400:
	
l35610:; BSR set to: 0

	movff	0+(_PWM+01Eh),0+((c:_rgl)+08h)	;volatile
	goto	l3424
	line	1918
	
l35612:; BSR set to: 0

;rgl.c: 1916: else
;rgl.c: 1917: {
;rgl.c: 1918: if(PWM.MMAXCW>PWM.FIRSTPB) rgl.xmod=PWM.FIRSTPB;
	movf	(0+(_PWM+01Eh))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+018h))&0ffh	;volatile
	goto	u67411
	goto	u67410
u67411:
	goto	l35610
u67410:
	goto	l3417
	line	1957
	
l3424:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_FirstPCW2
	__end_of_FirstPCW2:
	signat	_FirstPCW2,88
	global	_ClrMod2

;; *************** function _ClrMod2 *****************
;; Defined at:
;;		line 1961 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModToCW2
;;		_ModToCO2
;; This function uses a non-reentrant model
;;
psect	text190,class=CODE,space=0,reloc=2
global __ptext190
__ptext190:
psect	text190
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	1961
	global	__size_of_ClrMod2
	__size_of_ClrMod2	equ	__end_of_ClrMod2-_ClrMod2
	
_ClrMod2:; BSR set to: 0

	opt	stack 24
	line	1962
	
l35616:; BSR set to: 0

;rgl.c: 1962: rgl.fz=0;
	bcf	((c:_rgl)),c,2
	line	1963
;rgl.c: 1963: rgl.xmod=PWM.BufPWM;
	movff	0+(_PWM+01h),0+((c:_rgl)+08h)	;volatile
	line	1964
;rgl.c: 1964: rgl.srp=0;
	clrf	(0+((c:_rgl)+07h)),c
	line	1965
;rgl.c: 1965: rgl.ytmp=0;
	clrf	(0+((c:_rgl)+06h)),c
	line	1966
;rgl.c: 1966: rgl.del1s=0;
	bcf	((c:_rgl)),c,6
	line	1967
	
l3427:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ClrMod2
	__end_of_ClrMod2:
	signat	_ClrMod2,88
	global	_TFrosnie

;; *************** function _TFrosnie *****************
;; Defined at:
;;		line 2511 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;  t               1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  t               1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/1
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_IncConstCW2
;;		_ModPruCW2
;;		_IncMaxCW2
;; This function uses a non-reentrant model
;;
psect	text191,class=CODE,space=0,reloc=2
global __ptext191
__ptext191:
psect	text191
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2511
	global	__size_of_TFrosnie
	__size_of_TFrosnie	equ	__end_of_TFrosnie-_TFrosnie
	
_TFrosnie:; BSR set to: 0

	opt	stack 24
;TFrosnie@t stored from wreg
	movff	wreg,(c:TFrosnie@t)
	line	2512
	
l35618:
;rgl.c: 2512: return (rgl.x_df>t);
	movf	((c:TFrosnie@t)),c,w
	btfsc	(0+((c:_rgl)+05h)),c,7
	goto	u67420
	xorlw	0ffh
	addwf	(0+((c:_rgl)+05h)),c,w
	btfsc	status,0
	goto	u67421
	goto	u67420
u67421:
	goto	l35622
u67420:
	
l35620:
	bcf	status,0
	goto	l3651
	
l35622:
	bsf	status,0
	line	2513
	
l3651:
	return
	opt stack 0
GLOBAL	__end_of_TFrosnie
	__end_of_TFrosnie:
	signat	_TFrosnie,4216
	global	_TFmaleje

;; *************** function _TFmaleje *****************
;; Defined at:
;;		line 2520 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;  t               1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  t               1   32[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModPruCW2
;;		_ModPrzCW2
;; This function uses a non-reentrant model
;;
psect	text192,class=CODE,space=0,reloc=2
global __ptext192
__ptext192:
psect	text192
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2520
	global	__size_of_TFmaleje
	__size_of_TFmaleje	equ	__end_of_TFmaleje-_TFmaleje
	
_TFmaleje:
	opt	stack 24
;TFmaleje@t stored from wreg
	movff	wreg,(c:TFmaleje@t)
	line	2521
	
l35626:
;rgl.c: 2521: return (rgl.x_df<(-1*t));
	movf	((c:TFmaleje@t)),c,w
	mullw	01h
	comf	(prodl),c
	comf	(prodh),c
	infsnz	(prodl),c
	incf	(prodh),c
	movff	0+((c:_rgl)+05h),??_TFmaleje+0+0
	clrf	(??_TFmaleje+0+0+1)&0ffh,c
	btfsc	(??_TFmaleje+0+0)&0ffh,c,7
	decf	(??_TFmaleje+0+0+1)&0ffh,c
	movf	(??_TFmaleje+0+1),c,w
	xorlw	80h
	movwf	(??_TFmaleje+2+0)&0ffh,c
	movf	(prodl),c,w
	subwf	(??_TFmaleje+0+0),c,w
	movf	(prodh),c,w
	xorlw	80h
	subwfb	(??_TFmaleje+2+0)&0ffh,c,w
	btfss	status,0
	goto	u67431
	goto	u67430
u67431:
	goto	l35630
u67430:
	
l35628:
	bcf	status,0
	goto	l3654
	
l35630:
	bsf	status,0
	line	2522
	
l3654:
	return
	opt stack 0
GLOBAL	__end_of_TFmaleje
	__end_of_TFmaleje:
	signat	_TFmaleje,4216
	global	_TFstoi

;; *************** function _TFstoi *****************
;; Defined at:
;;		line 2527 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModPruCW2
;; This function uses a non-reentrant model
;;
psect	text193,class=CODE,space=0,reloc=2
global __ptext193
__ptext193:
psect	text193
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2527
	global	__size_of_TFstoi
	__size_of_TFstoi	equ	__end_of_TFstoi-_TFstoi
	
_TFstoi:
	opt	stack 24
	line	2528
	
l35634:
;rgl.c: 2528: return !rgl.x_df;
	movf	(0+((c:_rgl)+05h)),c,w
	btfsc	status,2
	goto	u67441
	goto	u67440
u67441:
	goto	l35638
u67440:
	
l35636:
	bcf	status,0
	goto	l3657
	
l35638:
	bsf	status,0
	line	2529
	
l3657:
	return
	opt stack 0
GLOBAL	__end_of_TFstoi
	__end_of_TFstoi:
	signat	_TFstoi,88
	global	_SetTpKtParam

;; *************** function _SetTpKtParam *****************
;; Defined at:
;;		line 303 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text194,class=CODE,space=0,reloc=2
global __ptext194
__ptext194:
psect	text194
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
	line	303
	global	__size_of_SetTpKtParam
	__size_of_SetTpKtParam	equ	__end_of_SetTpKtParam-_SetTpKtParam
	
_SetTpKtParam:
	opt	stack 25
	line	304
	
l35642:; BSR set to: 1

;konfig.c: 304: switch(DtKNF.tpkt)
	goto	l35646
	line	306
;konfig.c: 305: {
;konfig.c: 306: case 0:
	
l3948:; BSR set to: 1

	line	308
;konfig.c: 307: {
;konfig.c: 308: DtKNF.czpr=0;
	clrf	(0+(_DtKNF+06h))&0ffh
	line	310
;konfig.c: 310: DtKNF.tpwm=0;
	clrf	(0+(_DtKNF+0Dh))&0ffh
	line	311
;konfig.c: 311: break;
	goto	l3954
	line	304
	
l35646:; BSR set to: 1

	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l3948
	xorlw	1^0	; case 1
	skipnz
	goto	l3948
	xorlw	2^1	; case 2
	skipnz
	goto	l3948
	xorlw	3^2	; case 3
	skipnz
	goto	l3948
	goto	l3948

	line	342
	
l3954:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_SetTpKtParam
	__end_of_SetTpKtParam:
	signat	_SetTpKtParam,88
	global	_SetNST

;; *************** function _SetNST *****************
;; Defined at:
;;		line 213 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    7
;; This function calls:
;;		_PomiarZW
;;		_SetPrt
;;		_Read_b_eep
;;		_Busy_eep
;;		_Write_b_eep
;; This function is called by:
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text195,class=CODE,space=0,reloc=2
global __ptext195
__ptext195:
psect	text195
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
	line	213
	global	__size_of_SetNST
	__size_of_SetNST	equ	__end_of_SetNST-_SetNST
	
_SetNST:; BSR set to: 1

	opt	stack 22
	line	214
	
l35648:; BSR set to: 0

;konfig.c: 214: PomiarZW();
	call	_PomiarZW	;wreg free
	line	215
	
l35650:; BSR set to: 1

;konfig.c: 215: if(!DtZW._on_ZW)
	
	btfsc	((_DtZW))&0ffh,0
	goto	u67451
	goto	u67450
u67451:
	goto	l35658
u67450:
	line	217
	
l35652:; BSR set to: 1

;konfig.c: 216: {
;konfig.c: 217: if(!DtKNF.opdg)
	tstfsz	(0+(_DtKNF+0Fh))&0ffh
	goto	u67461
	goto	u67460
u67461:
	goto	l35656
u67460:
	line	219
	
l35654:; BSR set to: 1

;konfig.c: 218: {
;konfig.c: 219: DtCO.minPCO=40;
	movlw	low(028h)
	movlb	0	; () banked
	movwf	(0+(_DtCO+05h))&0ffh
	line	220
;konfig.c: 220: DtCO.maxPCO=85;
	movlw	low(055h)
	movwf	(0+(_DtCO+06h))&0ffh
	line	221
;konfig.c: 221: }
	goto	l35666
	line	224
	
l35656:; BSR set to: 1

;konfig.c: 222: else
;konfig.c: 223: {
;konfig.c: 224: DtCO.minPCO=35;
	movlw	low(023h)
	movlb	0	; () banked
	movwf	(0+(_DtCO+05h))&0ffh
	line	225
;konfig.c: 225: DtCO.maxPCO=55;
	movlw	low(037h)
	movwf	(0+(_DtCO+06h))&0ffh
	goto	l35666
	line	230
	
l35658:; BSR set to: 1

;konfig.c: 228: else
;konfig.c: 229: {
;konfig.c: 230: M._AKTYWNE_PGD=1;
	movlw	high(01h)
	movlb	0	; () banked
	movwf	(1+(_M+016h))&0ffh
	movlw	low(01h)
	movwf	(0+(_M+016h))&0ffh
	line	231
	
l35660:; BSR set to: 0

;konfig.c: 231: SetPrt(20,1);
	movlw	low(01h)
	movwf	((c:?_SetPrt)),c
	movlw	(014h)&0ffh
	
	call	_SetPrt
	line	232
	
l35662:; BSR set to: 0

;konfig.c: 232: DtCO.minPCO=0;
	clrf	(0+(_DtCO+05h))&0ffh
	line	233
	
l35664:; BSR set to: 0

;konfig.c: 233: DtCO.maxPCO=99;
	movlw	low(063h)
	movwf	(0+(_DtCO+06h))&0ffh
	line	235
	
l35666:; BSR set to: 0

;konfig.c: 234: }
;konfig.c: 235: RSDT1.outPCOmn=DtCO.minPCO;
	movff	0+(_DtCO+05h),0+(_RSDT1+0Ah)
	line	236
	
l35668:; BSR set to: 0

;konfig.c: 236: RSDT1.outPCOmx=DtCO.maxPCO;
	movff	0+(_DtCO+06h),0+(_RSDT1+0Bh)
	line	237
	
l35670:; BSR set to: 0

;konfig.c: 237: if(DtCO.PCO<DtCO.minPCO) DtCO.PCO=DtCO.minPCO;
	movf	(0+(_DtCO+05h))&0ffh,w
	cpfslt	(0+(_DtCO+03h))&0ffh
	goto	u67471
	goto	u67470
u67471:
	goto	l35674
u67470:
	
l35672:; BSR set to: 0

	movff	0+(_DtCO+05h),0+(_DtCO+03h)
	line	238
	
l35674:; BSR set to: 0

;konfig.c: 238: if(DtCO.PCO>DtCO.maxPCO) DtCO.PCO=DtCO.maxPCO;
	movf	(0+(_DtCO+03h))&0ffh,w
	cpfslt	(0+(_DtCO+06h))&0ffh
	goto	u67481
	goto	u67480
u67481:
	goto	l35678
u67480:
	
l35676:; BSR set to: 0

	movff	0+(_DtCO+06h),0+(_DtCO+03h)
	line	239
	
l35678:; BSR set to: 0

;konfig.c: 239: if(DtCO.PCO!=Read_b_eep(0x00C9)) (Busy_eep(), Write_b_eep(0x00C9,DtCO.PCO));
	movlw	high(0C9h)
	movwf	((c:?_Read_b_eep+1)),c
	movlw	low(0C9h)
	movwf	((c:?_Read_b_eep)),c
	call	_Read_b_eep	;wreg free
	movlb	0	; () banked
	xorwf	(0+(_DtCO+03h))&0ffh,w
	btfsc	status,2
	goto	u67491
	goto	u67490
u67491:
	goto	l3937
u67490:
	
l35680:; BSR set to: 0

	call	_Busy_eep	;wreg free
	
l35682:; BSR set to: 0

	movlw	high(0C9h)
	movwf	((c:?_Write_b_eep+1)),c
	movlw	low(0C9h)
	movwf	((c:?_Write_b_eep)),c
	movff	0+(_DtCO+03h),0+((c:?_Write_b_eep)+02h)
	call	_Write_b_eep	;wreg free
	line	240
	
l3937:
	return
	opt stack 0
GLOBAL	__end_of_SetNST
	__end_of_SetNST:
	signat	_SetNST,88
	global	_Read_b_eep

;; *************** function _Read_b_eep *****************
;; Defined at:
;;		line 36 in file "plib/EEP/read_B.c"
;; Parameters:    Size  Location     Type
;;  badd            2   29[COMRAM] unsigned int 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ReadTabNTC
;;		_ReturnACfromNTC
;;		_ReadTabZNTC
;;		_main
;;		_SetNST
;;		_RdEEParam
;;		_ReadEEPFN
;; This function uses a non-reentrant model
;;
psect	text196,class=CODE,space=0,reloc=2
global __ptext196
__ptext196:
psect	text196
	file	"plib/EEP/read_B.c"
	line	36
	global	__size_of_Read_b_eep
	__size_of_Read_b_eep	equ	__end_of_Read_b_eep-_Read_b_eep
	
_Read_b_eep:
	opt	stack 22
	line	37
	
l27850:
	movf	((c:Read_b_eep@badd+1)),c,w
	andlw	low(03h)
	movwf	((c:4010)),c	;volatile
	line	38
	
l27852:
	movff	(c:Read_b_eep@badd),(c:4009)	;volatile
	line	39
	
l27854:
	bcf	((c:4006)),c,6	;volatile
	line	40
	
l27856:
	bcf	((c:4006)),c,7	;volatile
	line	41
	
l27858:
	bsf	((c:4006)),c,0	;volatile
	line	42
# 42 "plib/EEP/read_B.c"
nop ;# 
	line	43
# 43 "plib/EEP/read_B.c"
nop ;# 
psect	text196
	line	44
	
l27860:
	movf	((c:4008)),c,w	;volatile
	line	45
	
l4901:
	return
	opt stack 0
GLOBAL	__end_of_Read_b_eep
	__end_of_Read_b_eep:
	signat	_Read_b_eep,4217
	global	_PomiarZW

;; *************** function _PomiarZW *****************
;; Defined at:
;;		line 553 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_ReadAC
;;		_ReadTabZNTC
;; This function is called by:
;;		_main
;;		_SetNST
;; This function uses a non-reentrant model
;;
psect	text197,class=CODE,space=0,reloc=2
global __ptext197
__ptext197:
psect	text197
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	553
	global	__size_of_PomiarZW
	__size_of_PomiarZW	equ	__end_of_PomiarZW-_PomiarZW
	
_PomiarZW:
	opt	stack 24
	line	554
	
l28886:; BSR set to: 0

;pomiar.c: 554: DtZW.AC_ZW=ReadAC(2);
	movlw	(02h)&0ffh
	
	call	_ReadAC
	movlb	1	; () banked
	movwf	(0+(_DtZW+01h))&0ffh
	line	555
;pomiar.c: 555: DtZW.ZW=ReadTabZNTC(DtZW.AC_ZW);
	movf	(0+(_DtZW+01h))&0ffh,w
	
	call	_ReadTabZNTC
	movlb	1	; () banked
	movwf	(0+(_DtZW+02h))&0ffh
	line	556
	
l28888:; BSR set to: 1

;pomiar.c: 556: if(DtZW.AC_ZW<=0x0F||DtZW.AC_ZW>=0xF0) DtZW._on_ZW=0;
	lfsr	2,_DtZW+01h
	movlw	(010h-1)
	cpfsgt	indf2
	goto	u49861
	goto	u49860
u49861:
	goto	l2139
u49860:
	
l28890:; BSR set to: 1

	lfsr	2,_DtZW+01h
	movlw	(0F0h-1)
	cpfsgt	indf2
	goto	u49871
	goto	u49870
u49871:
	goto	l2137
u49870:
	
l2139:; BSR set to: 1

	bcf	((_DtZW))&0ffh,0
	goto	l2141
	line	557
	
l2137:; BSR set to: 1

;pomiar.c: 557: else DtZW._on_ZW=1;
	bsf	((_DtZW))&0ffh,0
	line	558
	
l2141:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PomiarZW
	__end_of_PomiarZW:
	signat	_PomiarZW,88
	global	_ReadAC

;; *************** function _ReadAC *****************
;; Defined at:
;;		line 97 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
;; Parameters:    Size  Location     Type
;;  chanel          1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  chanel          1   30[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFFF/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PomiarCO
;;		_PomiarIN
;;		_PomiarCW
;;		_PomiarZW
;;		_PomiarCS
;; This function uses a non-reentrant model
;;
psect	text198,class=CODE,space=0,reloc=2
global __ptext198
__ptext198:
psect	text198
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
	line	97
	global	__size_of_ReadAC
	__size_of_ReadAC	equ	__end_of_ReadAC-_ReadAC
	
_ReadAC:; BSR set to: 1

	opt	stack 23
;ReadAC@chanel stored from wreg
	line	101
	movff	wreg,(c:ReadAC@chanel)
	
l27814:
;ac.c: 101: CHS0=(chanel&0b00000001);
	btfss	((c:ReadAC@chanel)),c,0
	bra	u47945
	bsf	c:(32274/8),(32274)&7	;volatile
	u47945:
	btfsc	((c:ReadAC@chanel)),c,0
	bra	u47946
	bcf	c:(32274/8),(32274)&7	;volatile
	u47946:
	line	102
	
l27816:
;ac.c: 102: CHS1=((chanel&0b00000010)>>1);
	movff	(c:ReadAC@chanel),??_ReadAC+0+0
	bcf	status,0
	rrcf	(??_ReadAC+0+0),c

	rrcf	(??_ReadAC+0+0),c,w
	btfss	status,0
	bra	u47955
	bsf	c:(32275/8),(32275)&7	;volatile
	u47955:
	btfsc	status,0
	bra	u47956
	bcf	c:(32275/8),(32275)&7	;volatile
	u47956:
	line	103
	
l27818:
;ac.c: 103: CHS2=((chanel&0b00000100)>>2);
	movff	(c:ReadAC@chanel),??_ReadAC+0+0
	bcf	status,0
	rrcf	(??_ReadAC+0+0),c
	bcf	status,0
	rrcf	(??_ReadAC+0+0),c

	rrcf	(??_ReadAC+0+0),c,w
	btfss	status,0
	bra	u47965
	bsf	c:(32276/8),(32276)&7	;volatile
	u47965:
	btfsc	status,0
	bra	u47966
	bcf	c:(32276/8),(32276)&7	;volatile
	u47966:
	line	104
	
l27820:
;ac.c: 104: CHS3=((chanel&0b00001000)>>3);
	movff	(c:ReadAC@chanel),??_ReadAC+0+0
	bcf	status,0
	rrcf	(??_ReadAC+0+0),c
	bcf	status,0
	rrcf	(??_ReadAC+0+0),c
	bcf	status,0
	rrcf	(??_ReadAC+0+0),c

	rrcf	(??_ReadAC+0+0),c,w
	btfss	status,0
	bra	u47975
	bsf	c:(32277/8),(32277)&7	;volatile
	u47975:
	btfsc	status,0
	bra	u47976
	bcf	c:(32277/8),(32277)&7	;volatile
	u47976:
	line	105
	
l27822:
;ac.c: 105: GODONE=1;
	bsf	c:(32273/8),(32273)&7	;volatile
	line	106
;ac.c: 106: while(GODONE)continue;
	
l46:
	btfsc	c:(32273/8),(32273)&7	;volatile
	goto	u47981
	goto	u47980
u47981:
	goto	l46
u47980:
	line	107
	
l27824:
;ac.c: 107: return ADRESH;
	movf	((c:4036)),c,w	;volatile
	line	108
	
l49:
	return
	opt stack 0
GLOBAL	__end_of_ReadAC
	__end_of_ReadAC:
	signat	_ReadAC,4217
	global	_ReadTabZNTC

;; *************** function _ReadTabZNTC *****************
;; Defined at:
;;		line 142 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
;; Parameters:    Size  Location     Type
;;  zrAC            1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  zrAC            1   31[COMRAM] unsigned char 
;;  i               2   33[COMRAM] unsigned int 
;;  data            1   32[COMRAM] char 
;; Return value:  Size  Location     Type
;;                  1    wreg      char 
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_Read_b_eep
;; This function is called by:
;;		_PomiarZW
;; This function uses a non-reentrant model
;;
psect	text199,class=CODE,space=0,reloc=2
global __ptext199
__ptext199:
psect	text199
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
	line	142
	global	__size_of_ReadTabZNTC
	__size_of_ReadTabZNTC	equ	__end_of_ReadTabZNTC-_ReadTabZNTC
	
_ReadTabZNTC:
	opt	stack 24
;ReadTabZNTC@zrAC stored from wreg
	line	145
	movff	wreg,(c:ReadTabZNTC@zrAC)
	
l27886:; BSR set to: 1

;ac.c: 143: unsigned int i;
;ac.c: 144: signed char data;
;ac.c: 145: i=zrAC;
	movff	(c:ReadTabZNTC@zrAC),(c:ReadTabZNTC@i)
	clrf	((c:ReadTabZNTC@i+1)),c
	line	147
	
l27888:; BSR set to: 1

;ac.c: 147: if(i<0x29) i=0x29;
	movlw	029h
	subwf	((c:ReadTabZNTC@i)),c,w
	movlw	0
	subwfb	((c:ReadTabZNTC@i+1)),c,w
	btfsc	status,0
	goto	u48041
	goto	u48040
u48041:
	goto	l27892
u48040:
	
l27890:; BSR set to: 1

	movlw	high(029h)
	movwf	((c:ReadTabZNTC@i+1)),c
	movlw	low(029h)
	movwf	((c:ReadTabZNTC@i)),c
	line	148
	
l27892:; BSR set to: 1

;ac.c: 148: if(i>0xEC) i=0xEC;
	movlw	0EDh
	subwf	((c:ReadTabZNTC@i)),c,w
	movlw	0
	subwfb	((c:ReadTabZNTC@i+1)),c,w
	btfss	status,0
	goto	u48051
	goto	u48050
u48051:
	goto	l27896
u48050:
	
l27894:; BSR set to: 1

	movlw	high(0ECh)
	movwf	((c:ReadTabZNTC@i+1)),c
	movlw	low(0ECh)
	movwf	((c:ReadTabZNTC@i)),c
	line	149
	
l27896:; BSR set to: 1

;ac.c: 149: i-=0x29;
	movlw	029h
	subwf	((c:ReadTabZNTC@i)),c
	movlw	0
	subwfb	((c:ReadTabZNTC@i+1)),c
	line	150
	
l27898:; BSR set to: 1

;ac.c: 150: if(i>200) i=200;
	movlw	0C9h
	subwf	((c:ReadTabZNTC@i)),c,w
	movlw	0
	subwfb	((c:ReadTabZNTC@i+1)),c,w
	btfss	status,0
	goto	u48061
	goto	u48060
u48061:
	goto	l27902
u48060:
	
l27900:; BSR set to: 1

	movlw	high(0C8h)
	movwf	((c:ReadTabZNTC@i+1)),c
	movlw	low(0C8h)
	movwf	((c:ReadTabZNTC@i)),c
	line	151
	
l27902:; BSR set to: 1

;ac.c: 151: i+=0x00E0;
	movlw	0E0h
	addwf	((c:ReadTabZNTC@i)),c
	movlw	0
	addwfc	((c:ReadTabZNTC@i+1)),c
	line	153
	
l27904:; BSR set to: 1

;ac.c: 153: data=Read_b_eep(i);
	movff	(c:ReadTabZNTC@i),(c:?_Read_b_eep)
	movff	(c:ReadTabZNTC@i+1),(c:?_Read_b_eep+1)
	call	_Read_b_eep	;wreg free
	movwf	((c:ReadTabZNTC@data)),c
	line	154
	
l27906:
;ac.c: 154: return data;
	movf	((c:ReadTabZNTC@data)),c,w
	line	155
	
l67:
	return
	opt stack 0
GLOBAL	__end_of_ReadTabZNTC
	__end_of_ReadTabZNTC:
	signat	_ReadTabZNTC,4217
	global	_SetPrt

;; *************** function _SetPrt *****************
;; Defined at:
;;		line 312 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;;  nw              1   29[COMRAM] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1   31[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RestartFltPrt
;;		_SetWylacz
;;		_SetNST
;;		_TrybPracy
;; This function uses a non-reentrant model
;;
psect	text200,class=CODE,space=0,reloc=2
global __ptext200
__ptext200:
psect	text200
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
	line	312
	global	__size_of_SetPrt
	__size_of_SetPrt	equ	__end_of_SetPrt-_SetPrt
	
_SetPrt:
	opt	stack 24
;SetPrt@Index stored from wreg
	movff	wreg,(c:SetPrt@Index)
	line	313
	
l32394:
;port.c: 313: if (Index>26-1) asm("RESET");
	movlw	(01Ah-1)
	cpfsgt	((c:SetPrt@Index)),c
	goto	u59951
	goto	u59950
u59951:
	goto	l32398
u59950:
	
l32396:
# 313 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
RESET ;# 
psect	text200
	line	314
	
l32398:
;port.c: 314: SPort[Index].Output=((!nw)?0:1);
	movlw	(0)&0ffh
	clrf	prodl
	cpfseq	((c:SetPrt@nw)),c
	incf	prodl
	movff	prodl,??_SetPrt+0+0
	movf	((c:SetPrt@Index)),c,w
	movlb	0	; () banked
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rlncf	(??_SetPrt+0+0),c
	movf	(indf2)&0ffh,w
	xorwf	(??_SetPrt+0+0),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	(??_SetPrt+0+0),c,w
	movwf	(indf2)&0ffh
	line	315
	
l32400:; BSR set to: 0

;port.c: 315: SPort[Index].Timer=0;
	movf	((c:SetPrt@Index)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	316
	
l2371:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_SetPrt
	__end_of_SetPrt:
	signat	_SetPrt,8312
	global	_Busy_eep

;; *************** function _Busy_eep *****************
;; Defined at:
;;		line 13 in file "plib/EEP/busy_eep.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/1
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecyzjaAntyLeg
;;		_ErrPTG
;;		_ToReset
;;		_SetNST
;;		_RdEEParam
;;		_WriteEEPCW
;;		_WriteEEPCO
;;		_WriteEEPFN
;; This function uses a non-reentrant model
;;
psect	text201,class=CODE,space=0,reloc=2
global __ptext201
__ptext201:
psect	text201
	file	"plib/EEP/busy_eep.c"
	line	13
	global	__size_of_Busy_eep
	__size_of_Busy_eep	equ	__end_of_Busy_eep-_Busy_eep
	
_Busy_eep:; BSR set to: 0

	opt	stack 23
	line	14
	
l32430:
	
l4887:
	
	btfsc	((c:4006)),c,1	;volatile
	goto	u60001
	goto	u60000
u60001:
	goto	l4887
u60000:
	line	15
	
l4890:
	return
	opt stack 0
GLOBAL	__end_of_Busy_eep
	__end_of_Busy_eep:
	signat	_Busy_eep,88
	global	_Write_b_eep

;; *************** function _Write_b_eep *****************
;; Defined at:
;;		line 50 in file "plib/EEP/write_B.c"
;; Parameters:    Size  Location     Type
;;  badd            2   29[COMRAM] unsigned int 
;;  bdat            1   31[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  GIE_BIT_VAL     1   32[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecyzjaAntyLeg
;;		_ErrPTG
;;		_ToReset
;;		_SetNST
;;		_RdEEParam
;;		_WriteEEPCW
;;		_WriteEEPCO
;;		_WriteEEPFN
;; This function uses a non-reentrant model
;;
psect	text202,class=CODE,space=0,reloc=2
global __ptext202
__ptext202:
psect	text202
	file	"plib/EEP/write_B.c"
	line	50
	global	__size_of_Write_b_eep
	__size_of_Write_b_eep	equ	__end_of_Write_b_eep-_Write_b_eep
	
_Write_b_eep:
	opt	stack 23
	line	51
	
l32432:
	line	52
	
l32434:
	movf	((c:Write_b_eep@badd+1)),c,w
	andlw	low(03h)
	movwf	((c:4010)),c	;volatile
	line	53
	
l32436:
	movff	(c:Write_b_eep@badd),(c:4009)	;volatile
	line	54
	
l32438:
	movff	(c:Write_b_eep@bdat),(c:4008)	;volatile
	line	55
	
l32440:
	bcf	((c:4006)),c,7	;volatile
	line	56
	
l32442:
	bcf	((c:4006)),c,6	;volatile
	line	57
	
l32444:
	bsf	((c:4006)),c,2	;volatile
	line	58
	
l32446:
	movlw	0
	btfsc	((c:4082)),c,7	;volatile
	movlw	1
	movwf	((c:Write_b_eep@GIE_BIT_VAL)),c
	line	59
	
l32448:
	bcf	((c:4082)),c,7	;volatile
	line	60
	
l32450:
	movlw	low(055h)
	movwf	((c:4007)),c	;volatile
	line	61
	
l32452:
	movlw	low(0AAh)
	movwf	((c:4007)),c	;volatile
	line	62
	
l32454:
	bsf	((c:4006)),c,1	;volatile
	line	63
	
l4916:
	
	btfsc	((c:4006)),c,1	;volatile
	goto	u60011
	goto	u60010
u60011:
	goto	l4916
u60010:
	
l4918:
	line	64
	btfsc	(c:Write_b_eep@GIE_BIT_VAL),c,0
	bra	u60025
	bcf	((c:4082)),c,7	;volatile
	bra	u60026
	u60025:
	bsf	((c:4082)),c,7	;volatile
	u60026:

	line	65
	bcf	((c:4006)),c,2	;volatile
	line	66
	
l4919:
	return
	opt stack 0
GLOBAL	__end_of_Write_b_eep
	__end_of_Write_b_eep:
	signat	_Write_b_eep,8312
	global	_SetPFN

;; *************** function _SetPFN *****************
;; Defined at:
;;		line 366 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RdEEParam
;; This function uses a non-reentrant model
;;
psect	text203,class=CODE,space=0,reloc=2
global __ptext203
__ptext203:
psect	text203
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
	line	366
	global	__size_of_SetPFN
	__size_of_SetPFN	equ	__end_of_SetPFN-_SetPFN
	
_SetPFN:
	opt	stack 25
	line	367
	
l35684:; BSR set to: 1

;konfig.c: 367: if(PFN.poz==1)
	decf	(0+(_PFN+01Fh))&0ffh,w
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u67501
	goto	u67500
u67501:
	goto	l35688
u67500:
	line	369
	
l35686:; BSR set to: 1

;konfig.c: 368: {
;konfig.c: 369: PFN._zima=0;
	bcf	((_PFN))&0ffh,2
	line	370
;konfig.c: 370: PFN._lato=0;
	bcf	((_PFN))&0ffh,1
	line	371
;konfig.c: 371: PFN._off=1;
	bsf	((_PFN))&0ffh,0
	line	372
;konfig.c: 372: PFN._csn=0;
	bcf	(0+(_PFN+03h))&0ffh,4
	line	373
;konfig.c: 373: }
	goto	l3970
	line	375
	
l35688:; BSR set to: 1

;konfig.c: 374: else
;konfig.c: 375: if(PFN.poz==3)
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	3
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u67511
	goto	u67510
u67511:
	goto	l35692
u67510:
	line	377
	
l35690:; BSR set to: 1

;konfig.c: 376: {
;konfig.c: 377: PFN._zima=1;
	bsf	((_PFN))&0ffh,2
	line	378
;konfig.c: 378: PFN._lato=0;
	bcf	((_PFN))&0ffh,1
	line	379
;konfig.c: 379: PFN._off=0;
	bcf	((_PFN))&0ffh,0
	line	380
;konfig.c: 380: PFN._csn=0;
	bcf	(0+(_PFN+03h))&0ffh,4
	line	381
;konfig.c: 381: }
	goto	l3970
	line	383
	
l35692:; BSR set to: 1

;konfig.c: 382: else
;konfig.c: 383: if(PFN.poz==2)
	movf	(0+(_PFN+01Fh))&0ffh,w
	xorlw	2
	iorwf (1+(_PFN+01Fh))&0ffh,w

	btfss	status,2
	goto	u67521
	goto	u67520
u67521:
	goto	l3968
u67520:
	line	385
	
l35694:; BSR set to: 1

;konfig.c: 384: {
;konfig.c: 385: PFN._zima=0;
	bcf	((_PFN))&0ffh,2
	line	386
;konfig.c: 386: PFN._lato=1;
	bsf	((_PFN))&0ffh,1
	line	387
;konfig.c: 387: PFN._off=0;
	bcf	((_PFN))&0ffh,0
	line	388
;konfig.c: 388: PFN._csn=0;
	bcf	(0+(_PFN+03h))&0ffh,4
	line	389
;konfig.c: 389: }
	goto	l3970
	line	390
	
l3968:; BSR set to: 1

	line	392
;konfig.c: 390: else
;konfig.c: 391: {
;konfig.c: 392: PFN._zima=1;
	bsf	((_PFN))&0ffh,2
	line	393
;konfig.c: 393: PFN._lato=0;
	bcf	((_PFN))&0ffh,1
	line	394
;konfig.c: 394: PFN._off=0;
	bcf	((_PFN))&0ffh,0
	line	395
;konfig.c: 395: PFN._csn=0;
	bcf	(0+(_PFN+03h))&0ffh,4
	line	396
	
l35696:; BSR set to: 1

;konfig.c: 396: PFN.poz=3;
	movlw	high(03h)
	movwf	(1+(_PFN+01Fh))&0ffh
	movlw	low(03h)
	movwf	(0+(_PFN+01Fh))&0ffh
	line	398
	
l3970:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_SetPFN
	__end_of_SetPFN:
	signat	_SetPFN,88
	global	_RglPmp1

;; *************** function _RglPmp1 *****************
;; Defined at:
;;		line 159 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_StartRTS
;;		_ProcToPmpPwm
;;		_WritePWM2
;;		_RTS
;;		_ModPmp1
;; This function is called by:
;;		_RglPmp
;; This function uses a non-reentrant model
;;
psect	text204,class=CODE,space=0,reloc=2
global __ptext204
__ptext204:
psect	text204
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	159
	global	__size_of_RglPmp1
	__size_of_RglPmp1	equ	__end_of_RglPmp1-_RglPmp1
	
_RglPmp1:; BSR set to: 1

	opt	stack 23
	line	160
	
l41110:; BSR set to: 1

;pompa.c: 160: PMP.MGPROC=100;
	movlw	low(064h)
	movwf	((c:_PMP)),c
	line	161
	
l41112:; BSR set to: 1

;pompa.c: 161: PMP.MDPROC=DtKNF.mdpm;
	movff	0+(_DtKNF+0Bh),0+((c:_PMP)+01h)
	line	162
	
l41114:; BSR set to: 1

;pompa.c: 162: DtIN.DDLT=DtKNF.dtpm;
	movff	0+(_DtKNF+0Ah),0+(_DtIN+05h)
	line	163
	
l41116:; BSR set to: 1

;pompa.c: 163: if(!M._PRACA)
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u81581
	goto	u81580
u81581:
	goto	l4207
u81580:
	line	165
	
l41118:; BSR set to: 0

;pompa.c: 164: {
;pompa.c: 165: DtIN.pop=0;
	movlb	1	; () banked
	clrf	(0+(_DtIN+013h))&0ffh
	line	166
	
l41120:; BSR set to: 1

;pompa.c: 166: StartRTS(15);
	movlw	(0Fh)&0ffh
	
	call	_StartRTS
	line	167
	
l41122:; BSR set to: 1

;pompa.c: 167: if(PORTDbits.RD2)
	
	btfss	((c:3971)),c,2	;volatile
	goto	u81591
	goto	u81590
u81591:
	goto	l4208
u81590:
	line	169
	
l41124:; BSR set to: 1

;pompa.c: 168: {
;pompa.c: 169: PMP.APROC=PMP.MGPROC;
	movff	(c:_PMP),0+((c:_PMP)+02h)
	line	170
;pompa.c: 170: }
	goto	l41126
	line	171
	
l4208:; BSR set to: 1

	line	173
;pompa.c: 171: else
;pompa.c: 172: {
;pompa.c: 173: PMP.APROC=0;
	clrf	(0+((c:_PMP)+02h)),c
	line	175
	
l41126:; BSR set to: 1

;pompa.c: 174: }
;pompa.c: 175: WritePWM2(ProcToPmpPwm(PMP.APROC));
	movf	(0+((c:_PMP)+02h)),c,w
	
	call	_ProcToPmpPwm
	
	call	_WritePWM2
	line	176
;pompa.c: 176: }
	goto	l4213
	line	177
	
l4207:; BSR set to: 0

	line	179
;pompa.c: 177: else
;pompa.c: 178: {
;pompa.c: 179: if(M._MODULUJ&&!DtIN._err_IN&&!M._RPM_CW&&RTS(15)>10)
	
	btfss	(0+(_M+011h))&0ffh,5
	goto	u81601
	goto	u81600
u81601:
	goto	l4211
u81600:
	
l41128:; BSR set to: 0

	movlb	1	; () banked
	
	btfsc	((_DtIN))&0ffh,0
	goto	u81611
	goto	u81610
u81611:
	goto	l4211
u81610:
	
l41130:; BSR set to: 1

	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u81621
	goto	u81620
u81621:
	goto	l4211
u81620:
	
l41132:; BSR set to: 0

	movlw	(0Fh)&0ffh
	
	call	_RTS
	movlb	0	; () banked
	movwf	(??_RglPmp1+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_RglPmp1+0+0))&0ffh,w
	btfss	status,0
	goto	u81631
	goto	u81630
u81631:
	goto	l4211
u81630:
	line	181
	
l41134:; BSR set to: 0

;pompa.c: 180: {
;pompa.c: 181: PMP.APROC=ModPmp1(PMP.APROC);
	movf	(0+((c:_PMP)+02h)),c,w
	
	call	_ModPmp1
	movwf	(0+((c:_PMP)+02h)),c
	line	182
;pompa.c: 182: }
	goto	l41136
	line	183
	
l4211:
	line	185
;pompa.c: 183: else
;pompa.c: 184: {
;pompa.c: 185: PMP.APROC=PMP.MGPROC;
	movff	(c:_PMP),0+((c:_PMP)+02h)
	line	187
	
l41136:
;pompa.c: 186: }
;pompa.c: 187: WritePWM2(ProcToPmpPwm(PMP.APROC));
	movf	(0+((c:_PMP)+02h)),c,w
	
	call	_ProcToPmpPwm
	
	call	_WritePWM2
	line	189
	
l4213:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RglPmp1
	__end_of_RglPmp1:
	signat	_RglPmp1,88
	global	_ModPmp1

;; *************** function _ModPmp1 *****************
;; Defined at:
;;		line 39 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  p               1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  p               1    0[BANK0 ] unsigned char 
;;  ppwm            1    4[BANK0 ] unsigned char 
;;  pup             1    3[BANK0 ] unsigned char 
;;  pdw             1    2[BANK0 ] unsigned char 
;;  tim             1    1[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       10 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RTdS
;;		_StartRTdS
;;		_Twyzsza
;;		_Tnizsza
;; This function is called by:
;;		_RglPmp1
;; This function uses a non-reentrant model
;;
psect	text205,class=CODE,space=0,reloc=2
global __ptext205
__ptext205:
psect	text205
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	39
	global	__size_of_ModPmp1
	__size_of_ModPmp1	equ	__end_of_ModPmp1-_ModPmp1
	
_ModPmp1:; BSR set to: 0

	opt	stack 23
;ModPmp1@p stored from wreg
	line	42
	movff	wreg,(ModPmp1@p)
	
l40990:; BSR set to: 0

;pompa.c: 40: unsigned char ppwm, tim, pup, pdw;
;pompa.c: 42: ppwm=p;
	movff	(ModPmp1@p),(ModPmp1@ppwm)
	line	44
	
l40992:; BSR set to: 0

;pompa.c: 44: if(rgl.fz||ppwm!=PMP.MGPROC)
	
	btfsc	((c:_rgl)),c,2
	goto	u81221
	goto	u81220
u81221:
	goto	l40996
u81220:
	
l40994:; BSR set to: 0

	movf	((c:_PMP)),c,w
	xorwf	((ModPmp1@ppwm))&0ffh,w
	btfsc	status,2
	goto	u81231
	goto	u81230
u81231:
	goto	l41102
u81230:
	line	47
	
l40996:; BSR set to: 0

;pompa.c: 45: {
;pompa.c: 47: if(DtIN.DIN2>DtIN.DDLT)
	movlb	1	; () banked
	movf	(0+(_DtIN+04h))&0ffh,w
	cpfslt	(0+(_DtIN+05h))&0ffh
	goto	u81241
	goto	u81240
u81241:
	goto	l41008
u81240:
	line	50
	
l40998:; BSR set to: 1

;pompa.c: 48: {
;pompa.c: 50: tim=100;
	movlw	low(064h)
	movlb	0	; () banked
	movwf	((ModPmp1@tim))&0ffh
	line	51
	
l41000:; BSR set to: 0

;pompa.c: 51: if(DtIN.DIN2-DtIN.DDLT==2) tim=120;
	movlb	1	; () banked
	movf	(0+(_DtIN+05h))&0ffh,w
	movff	0+(_DtIN+04h),??_ModPmp1+0+0
	clrf	(??_ModPmp1+0+0+1)&0ffh,c
	subwf	(??_ModPmp1+0+0),c
	movlw	0
	subwfb	(??_ModPmp1+0+1),c
	movf	(??_ModPmp1+0+0),c,w
	xorlw	2
	iorwf (??_ModPmp1+0+1),c,w

	btfss	status,2
	goto	u81251
	goto	u81250
u81251:
	goto	l41004
u81250:
	
l41002:; BSR set to: 1

	movlw	low(078h)
	movlb	0	; () banked
	movwf	((ModPmp1@tim))&0ffh
	goto	l41018
	line	53
	
l41004:; BSR set to: 1

;pompa.c: 52: else
;pompa.c: 53: if(DtIN.DIN2-DtIN.DDLT==1) tim=150;
	movf	(0+(_DtIN+05h))&0ffh,w
	movff	0+(_DtIN+04h),??_ModPmp1+0+0
	clrf	(??_ModPmp1+0+0+1)&0ffh,c
	subwf	(??_ModPmp1+0+0),c
	movlw	0
	subwfb	(??_ModPmp1+0+1),c
	decf	(??_ModPmp1+0+0),c,w
	iorwf (??_ModPmp1+0+1),c,w

	btfss	status,2
	goto	u81261
	goto	u81260
u81261:
	goto	l41018
u81260:
	
l41006:; BSR set to: 1

	movlw	low(096h)
	movlb	0	; () banked
	movwf	((ModPmp1@tim))&0ffh
	goto	l41018
	line	58
	
l41008:; BSR set to: 1

;pompa.c: 55: else
;pompa.c: 56: {
;pompa.c: 58: tim=120;
	movlw	low(078h)
	movlb	0	; () banked
	movwf	((ModPmp1@tim))&0ffh
	line	59
	
l41010:; BSR set to: 0

;pompa.c: 59: if(DtIN.DDLT-DtIN.DIN2==2) tim=150;
	movlb	1	; () banked
	movf	(0+(_DtIN+04h))&0ffh,w
	movff	0+(_DtIN+05h),??_ModPmp1+0+0
	clrf	(??_ModPmp1+0+0+1)&0ffh,c
	subwf	(??_ModPmp1+0+0),c
	movlw	0
	subwfb	(??_ModPmp1+0+1),c
	movf	(??_ModPmp1+0+0),c,w
	xorlw	2
	iorwf (??_ModPmp1+0+1),c,w

	btfss	status,2
	goto	u81271
	goto	u81270
u81271:
	goto	l41014
u81270:
	goto	l41006
	line	61
	
l41014:; BSR set to: 1

;pompa.c: 60: else
;pompa.c: 61: if(DtIN.DDLT-DtIN.DIN2==1) tim=180;
	movf	(0+(_DtIN+04h))&0ffh,w
	movff	0+(_DtIN+05h),??_ModPmp1+0+0
	clrf	(??_ModPmp1+0+0+1)&0ffh,c
	subwf	(??_ModPmp1+0+0),c
	movlw	0
	subwfb	(??_ModPmp1+0+1),c
	decf	(??_ModPmp1+0+0),c,w
	iorwf (??_ModPmp1+0+1),c,w

	btfss	status,2
	goto	u81281
	goto	u81280
u81281:
	goto	l41018
u81280:
	
l41016:; BSR set to: 1

	movlw	low(0B4h)
	movlb	0	; () banked
	movwf	((ModPmp1@tim))&0ffh
	line	63
	
l41018:
;pompa.c: 62: }
;pompa.c: 63: pup=0;
	movlb	0	; () banked
	clrf	((ModPmp1@pup))&0ffh
	line	64
	
l41020:; BSR set to: 0

;pompa.c: 64: pdw=0;
	clrf	((ModPmp1@pdw))&0ffh
	line	65
	
l41022:; BSR set to: 0

;pompa.c: 65: if((RTdS(8)>tim)||(ppwm<=PMP.MDPROC)||(ppwm>=PMP.MGPROC))
	movlw	(08h)&0ffh
	
	call	_RTdS
	movlb	0	; () banked
	subwf	((ModPmp1@tim))&0ffh,w
	btfss	status,0
	goto	u81291
	goto	u81290
u81291:
	goto	l41028
u81290:
	
l41024:; BSR set to: 0

	movf	((ModPmp1@ppwm))&0ffh,w
	cpfslt	(0+((c:_PMP)+01h)),c
	goto	u81301
	goto	u81300
u81301:
	goto	l41028
u81300:
	
l41026:; BSR set to: 0

	movf	((c:_PMP)),c,w
	subwf	((ModPmp1@ppwm))&0ffh,w
	btfss	status,0
	goto	u81311
	goto	u81310
u81311:
	goto	l41106
u81310:
	line	67
	
l41028:; BSR set to: 0

;pompa.c: 66: {
;pompa.c: 67: StartRTdS(8);
	movlw	(08h)&0ffh
	
	call	_StartRTdS
	line	69
	
l41030:; BSR set to: 1

;pompa.c: 69: if(!pup)
	line	70
	
l41032:; BSR set to: 1

;pompa.c: 70: if(rgl.tmp_pwm<=PWM.MINPWM)
	movf	(0+((c:_rgl)+09h)),c,w
	movlb	0	; () banked
	subwf	(0+(_PWM+020h))&0ffh,w	;volatile
	btfss	status,0
	goto	u81321
	goto	u81320
u81321:
	goto	l41046
u81320:
	line	72
	
l41034:; BSR set to: 0

;pompa.c: 71: {
;pompa.c: 72: if(Twyzsza(2)||Tnizsza(2))
	movlw	(02h)&0ffh
	
	call	_Twyzsza
	btfsc	status,0
	goto	u81331
	goto	u81330
u81331:
	goto	l41038
u81330:
	
l41036:; BSR set to: 0

	movlw	(02h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u81341
	goto	u81340
u81341:
	goto	l41046
u81340:
	line	74
	
l41038:; BSR set to: 0

;pompa.c: 73: {
;pompa.c: 74: if(ppwm<PMP.MGPROC)
	movf	((c:_PMP)),c,w
	cpfslt	((ModPmp1@ppwm))&0ffh
	goto	u81351
	goto	u81350
u81351:
	goto	l41046
u81350:
	line	76
	
l41040:; BSR set to: 0

;pompa.c: 75: {
;pompa.c: 76: if(((ppwm+1)<PMP.MGPROC))
	movf	((c:_PMP)),c,w
	movwf	(??_ModPmp1+0+0)&0ffh,c
	clrf	(??_ModPmp1+0+0+1)&0ffh,c

	movf	((ModPmp1@ppwm))&0ffh,w
	movwf	(??_ModPmp1+2+0)&0ffh,c
	clrf	(??_ModPmp1+2+0+1)&0ffh,c

	movlw	01h
	addwf	(??_ModPmp1+2+0),c
	movlw	0
	addwfc	(??_ModPmp1+2+1),c
	movf	(??_ModPmp1+2+1),c,w
	xorlw	80h
	movwf	(??_ModPmp1+4+0)&0ffh,c
	movf	(??_ModPmp1+0+0),c,w
	subwf	(??_ModPmp1+2+0),c,w
	movf	(??_ModPmp1+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPmp1+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u81361
	goto	u81360
u81361:
	goto	l4175
u81360:
	line	78
	
l41042:; BSR set to: 0

;pompa.c: 77: {
;pompa.c: 78: ppwm+=1;
	incf	((ModPmp1@ppwm))&0ffh
	line	79
	
l41044:; BSR set to: 0

;pompa.c: 79: pup=1;
	movlw	low(01h)
	movwf	((ModPmp1@pup))&0ffh
	line	80
;pompa.c: 80: }
	goto	l41046
	line	81
	
l4175:; BSR set to: 0

;pompa.c: 81: else ppwm=PMP.MGPROC;
	movff	(c:_PMP),(ModPmp1@ppwm)
	line	86
	
l41046:; BSR set to: 0

;pompa.c: 82: }
;pompa.c: 83: }
;pompa.c: 84: }
;pompa.c: 86: if(rgl.tmp_pwm>PWM.MINPWM||((rgl.tmp_pwm<=PWM.MINPWM)&&!Twyzsza(1)))
	movf	(0+((c:_rgl)+09h)),c,w
	subwf	(0+(_PWM+020h))&0ffh,w	;volatile
	btfss	status,0
	goto	u81371
	goto	u81370
u81371:
	goto	l41052
u81370:
	
l41048:; BSR set to: 0

	movf	(0+((c:_rgl)+09h)),c,w
	subwf	(0+(_PWM+020h))&0ffh,w	;volatile
	btfss	status,0
	goto	u81381
	goto	u81380
u81381:
	goto	l41074
u81380:
	
l41050:; BSR set to: 0

	movlw	(01h)&0ffh
	
	call	_Twyzsza
	btfsc	status,0
	goto	u81391
	goto	u81390
u81391:
	goto	l41074
u81390:
	line	88
	
l41052:; BSR set to: 0

;pompa.c: 87: {
;pompa.c: 88: if(DtIN.DIN<DtIN.DDLT)
	movlb	1	; () banked
	movf	(0+(_DtIN+05h))&0ffh,w
	cpfslt	(0+(_DtIN+03h))&0ffh
	goto	u81401
	goto	u81400
u81401:
	goto	l41074
u81400:
	line	90
	
l41054:; BSR set to: 1

;pompa.c: 89: {
;pompa.c: 90: if(!pdw)
	line	91
	
l41056:; BSR set to: 1

;pompa.c: 91: if(ppwm>PMP.MDPROC)
	movlb	0	; () banked
	movf	((ModPmp1@ppwm))&0ffh,w
	cpfslt	(0+((c:_PMP)+01h)),c
	goto	u81411
	goto	u81410
u81411:
	goto	l4181
u81410:
	line	93
	
l41058:; BSR set to: 0

;pompa.c: 92: {
;pompa.c: 93: if(((ppwm-2)>PMP.MDPROC))
	movlw	low(-2)
	addwf	((ModPmp1@ppwm))&0ffh,w
	movwf	(??_ModPmp1+0+0)&0ffh,c
	clrf	1+(??_ModPmp1+0+0)&0ffh,c
	movlw	high(-2)
	addwfc	1+(??_ModPmp1+0+0)&0ffh,c
	movf	(0+((c:_PMP)+01h)),c,w
	movwf	(??_ModPmp1+2+0)&0ffh,c
	clrf	(??_ModPmp1+2+0+1)&0ffh,c

	movf	(??_ModPmp1+2+1),c,w
	xorlw	80h
	movwf	(??_ModPmp1+4+0)&0ffh,c
	movf	(??_ModPmp1+0+0),c,w
	subwf	(??_ModPmp1+2+0),c,w
	movf	(??_ModPmp1+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPmp1+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u81421
	goto	u81420
u81421:
	goto	l4183
u81420:
	line	95
	
l41060:; BSR set to: 0

;pompa.c: 94: {
;pompa.c: 95: ppwm-=2;
	movlw	(02h)&0ffh
	subwf	((ModPmp1@ppwm))&0ffh
	line	96
	
l41062:; BSR set to: 0

;pompa.c: 96: pdw=1;
	movlw	low(01h)
	movwf	((ModPmp1@pdw))&0ffh
	line	97
;pompa.c: 97: }
	goto	l4181
	line	98
	
l4183:; BSR set to: 0

;pompa.c: 98: else ppwm=PMP.MDPROC;
	movff	0+((c:_PMP)+01h),(ModPmp1@ppwm)
	line	100
	
l4181:; BSR set to: 0

;pompa.c: 99: }
;pompa.c: 100: if(!pdw)
	tstfsz	((ModPmp1@pdw))&0ffh
	goto	u81431
	goto	u81430
u81431:
	goto	l41074
u81430:
	line	101
	
l41064:; BSR set to: 0

;pompa.c: 101: if(DtIN.DIN<DtIN.DIN2)
	movlb	1	; () banked
	movf	(0+(_DtIN+04h))&0ffh,w
	cpfslt	(0+(_DtIN+03h))&0ffh
	goto	u81441
	goto	u81440
u81441:
	goto	l41074
u81440:
	line	103
	
l41066:; BSR set to: 1

;pompa.c: 102: {
;pompa.c: 103: if(ppwm>PMP.MDPROC)
	movlb	0	; () banked
	movf	((ModPmp1@ppwm))&0ffh,w
	cpfslt	(0+((c:_PMP)+01h)),c
	goto	u81451
	goto	u81450
u81451:
	goto	l41074
u81450:
	line	105
	
l41068:; BSR set to: 0

;pompa.c: 104: {
;pompa.c: 105: if(((ppwm-2)>PMP.MDPROC))
	movlw	low(-2)
	addwf	((ModPmp1@ppwm))&0ffh,w
	movwf	(??_ModPmp1+0+0)&0ffh,c
	clrf	1+(??_ModPmp1+0+0)&0ffh,c
	movlw	high(-2)
	addwfc	1+(??_ModPmp1+0+0)&0ffh,c
	movf	(0+((c:_PMP)+01h)),c,w
	movwf	(??_ModPmp1+2+0)&0ffh,c
	clrf	(??_ModPmp1+2+0+1)&0ffh,c

	movf	(??_ModPmp1+2+1),c,w
	xorlw	80h
	movwf	(??_ModPmp1+4+0)&0ffh,c
	movf	(??_ModPmp1+0+0),c,w
	subwf	(??_ModPmp1+2+0),c,w
	movf	(??_ModPmp1+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPmp1+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u81461
	goto	u81460
u81461:
	goto	l4188
u81460:
	line	107
	
l41070:; BSR set to: 0

;pompa.c: 106: {
;pompa.c: 107: ppwm-=2;
	movlw	(02h)&0ffh
	subwf	((ModPmp1@ppwm))&0ffh
	line	108
	
l41072:; BSR set to: 0

	line	109
;pompa.c: 109: }
	goto	l41074
	line	110
	
l4188:; BSR set to: 0

;pompa.c: 110: else ppwm=PMP.MDPROC;
	movff	0+((c:_PMP)+01h),(ModPmp1@ppwm)
	line	116
	
l41074:
;pompa.c: 111: }
;pompa.c: 112: }
;pompa.c: 113: }
;pompa.c: 114: }
;pompa.c: 116: if(rgl.tmp_pwm<PWM.MAXPWM||((rgl.tmp_pwm>=PWM.MAXPWM)&&!Tnizsza(1)))
	movlb	0	; () banked
	movf	(0+(_PWM+021h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+09h)),c,w
	btfss	status,0
	goto	u81471
	goto	u81470
u81471:
	goto	l41080
u81470:
	
l41076:; BSR set to: 0

	movf	(0+(_PWM+021h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+09h)),c,w
	btfss	status,0
	goto	u81481
	goto	u81480
u81481:
	goto	l41106
u81480:
	
l41078:; BSR set to: 0

	movlw	(01h)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u81491
	goto	u81490
u81491:
	goto	l41106
u81490:
	line	118
	
l41080:; BSR set to: 0

;pompa.c: 117: {
;pompa.c: 118: if(DtIN.DIN>DtIN.DDLT)
	movlb	1	; () banked
	movf	(0+(_DtIN+03h))&0ffh,w
	cpfslt	(0+(_DtIN+05h))&0ffh
	goto	u81501
	goto	u81500
u81501:
	goto	l41106
u81500:
	line	120
	
l41082:; BSR set to: 1

;pompa.c: 119: {
;pompa.c: 120: if(!pup)
	movlb	0	; () banked
	tstfsz	((ModPmp1@pup))&0ffh
	goto	u81511
	goto	u81510
u81511:
	goto	l4194
u81510:
	line	121
	
l41084:; BSR set to: 0

;pompa.c: 121: if(ppwm<PMP.MGPROC)
	movf	((c:_PMP)),c,w
	cpfslt	((ModPmp1@ppwm))&0ffh
	goto	u81521
	goto	u81520
u81521:
	goto	l4194
u81520:
	line	123
	
l41086:; BSR set to: 0

;pompa.c: 122: {
;pompa.c: 123: if(((ppwm+1)<PMP.MGPROC))
	movf	((c:_PMP)),c,w
	movwf	(??_ModPmp1+0+0)&0ffh,c
	clrf	(??_ModPmp1+0+0+1)&0ffh,c

	movf	((ModPmp1@ppwm))&0ffh,w
	movwf	(??_ModPmp1+2+0)&0ffh,c
	clrf	(??_ModPmp1+2+0+1)&0ffh,c

	movlw	01h
	addwf	(??_ModPmp1+2+0),c
	movlw	0
	addwfc	(??_ModPmp1+2+1),c
	movf	(??_ModPmp1+2+1),c,w
	xorlw	80h
	movwf	(??_ModPmp1+4+0)&0ffh,c
	movf	(??_ModPmp1+0+0),c,w
	subwf	(??_ModPmp1+2+0),c,w
	movf	(??_ModPmp1+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPmp1+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u81531
	goto	u81530
u81531:
	goto	l4196
u81530:
	line	125
	
l41088:; BSR set to: 0

;pompa.c: 124: {
;pompa.c: 125: ppwm+=1;
	incf	((ModPmp1@ppwm))&0ffh
	line	126
	
l41090:; BSR set to: 0

;pompa.c: 126: pup=1;
	movlw	low(01h)
	movwf	((ModPmp1@pup))&0ffh
	line	127
;pompa.c: 127: }
	goto	l4194
	line	128
	
l4196:; BSR set to: 0

;pompa.c: 128: else ppwm=PMP.MGPROC;
	movff	(c:_PMP),(ModPmp1@ppwm)
	line	130
	
l4194:; BSR set to: 0

;pompa.c: 129: }
;pompa.c: 130: if(!pup)
	tstfsz	((ModPmp1@pup))&0ffh
	goto	u81541
	goto	u81540
u81541:
	goto	l41106
u81540:
	line	131
	
l41092:; BSR set to: 0

;pompa.c: 131: if(DtIN.DIN>DtIN.DIN2)
	movlb	1	; () banked
	movf	(0+(_DtIN+03h))&0ffh,w
	cpfslt	(0+(_DtIN+04h))&0ffh
	goto	u81551
	goto	u81550
u81551:
	goto	l41106
u81550:
	line	133
	
l41094:; BSR set to: 1

;pompa.c: 132: {
;pompa.c: 133: if(ppwm<PMP.MGPROC)
	movf	((c:_PMP)),c,w
	movlb	0	; () banked
	cpfslt	((ModPmp1@ppwm))&0ffh
	goto	u81561
	goto	u81560
u81561:
	goto	l41106
u81560:
	line	135
	
l41096:; BSR set to: 0

;pompa.c: 134: {
;pompa.c: 135: if(((ppwm+1)<PMP.MGPROC))
	movf	((c:_PMP)),c,w
	movwf	(??_ModPmp1+0+0)&0ffh,c
	clrf	(??_ModPmp1+0+0+1)&0ffh,c

	movf	((ModPmp1@ppwm))&0ffh,w
	movwf	(??_ModPmp1+2+0)&0ffh,c
	clrf	(??_ModPmp1+2+0+1)&0ffh,c

	movlw	01h
	addwf	(??_ModPmp1+2+0),c
	movlw	0
	addwfc	(??_ModPmp1+2+1),c
	movf	(??_ModPmp1+2+1),c,w
	xorlw	80h
	movwf	(??_ModPmp1+4+0)&0ffh,c
	movf	(??_ModPmp1+0+0),c,w
	subwf	(??_ModPmp1+2+0),c,w
	movf	(??_ModPmp1+0+1),c,w
	xorlw	80h
	subwfb	(??_ModPmp1+4+0)&0ffh,c,w
	btfsc	status,0
	goto	u81571
	goto	u81570
u81571:
	goto	l4201
u81570:
	line	137
	
l41098:; BSR set to: 0

;pompa.c: 136: {
;pompa.c: 137: ppwm+=1;
	incf	((ModPmp1@ppwm))&0ffh
	line	138
	
l41100:; BSR set to: 0

	line	139
;pompa.c: 139: }
	goto	l41106
	line	140
	
l4201:
;pompa.c: 140: else ppwm=PMP.MGPROC;
	movff	(c:_PMP),(ModPmp1@ppwm)
	goto	l41106
	line	150
	
l41102:; BSR set to: 0

;pompa.c: 148: else
;pompa.c: 149: {
;pompa.c: 150: StartRTdS(8);
	movlw	(08h)&0ffh
	
	call	_StartRTdS
	goto	l4201
	line	153
	
l41106:
;pompa.c: 152: }
;pompa.c: 153: return ppwm;
	movlb	0	; () banked
	movf	((ModPmp1@ppwm))&0ffh,w
	line	154
	
l4204:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ModPmp1
	__end_of_ModPmp1:
	signat	_ModPmp1,4217
	global	_RglPmp2

;; *************** function _RglPmp2 *****************
;; Defined at:
;;		line 456 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    9
;; This function calls:
;;		_StartRTS
;;		_ProcToPmpPwm
;;		_WritePWM2
;;		_RTS
;;		_ModPmp2
;; This function is called by:
;;		_RglPmp
;; This function uses a non-reentrant model
;;
psect	text206,class=CODE,space=0,reloc=2
global __ptext206
__ptext206:
psect	text206
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	456
	global	__size_of_RglPmp2
	__size_of_RglPmp2	equ	__end_of_RglPmp2-_RglPmp2
	
_RglPmp2:; BSR set to: 0

	opt	stack 20
	line	457
	
l41264:; BSR set to: 1

;pompa.c: 457: PMP.MGPROC=100;
	movlw	low(064h)
	movwf	((c:_PMP)),c
	line	458
	
l41266:; BSR set to: 1

;pompa.c: 458: PMP.MDPROC=DtKNF.mdpm;
	movff	0+(_DtKNF+0Bh),0+((c:_PMP)+01h)
	line	461
	
l41268:; BSR set to: 1

;pompa.c: 461: if(!M._PRACA)
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,2
	goto	u82021
	goto	u82020
u82021:
	goto	l4323
u82020:
	line	463
	
l41270:; BSR set to: 0

;pompa.c: 462: {
;pompa.c: 463: DtIN.pop=0;
	movlb	1	; () banked
	clrf	(0+(_DtIN+013h))&0ffh
	line	464
	
l41272:; BSR set to: 1

;pompa.c: 464: StartRTS(15);
	movlw	(0Fh)&0ffh
	
	call	_StartRTS
	line	465
	
l41274:; BSR set to: 1

;pompa.c: 465: if(PORTDbits.RD2)
	
	btfss	((c:3971)),c,2	;volatile
	goto	u82031
	goto	u82030
u82031:
	goto	l4324
u82030:
	line	467
	
l41276:; BSR set to: 1

;pompa.c: 466: {
;pompa.c: 467: PMP.APROC=PMP.MGPROC;
	movff	(c:_PMP),0+((c:_PMP)+02h)
	line	468
;pompa.c: 468: }
	goto	l41278
	line	469
	
l4324:; BSR set to: 1

	line	471
;pompa.c: 469: else
;pompa.c: 470: {
;pompa.c: 471: PMP.APROC=0;
	clrf	(0+((c:_PMP)+02h)),c
	line	473
	
l41278:; BSR set to: 1

;pompa.c: 472: }
;pompa.c: 473: WritePWM2(ProcToPmpPwm(PMP.APROC));
	movf	(0+((c:_PMP)+02h)),c,w
	
	call	_ProcToPmpPwm
	
	call	_WritePWM2
	line	474
;pompa.c: 474: }
	goto	l4330
	line	475
	
l4323:; BSR set to: 0

	line	477
;pompa.c: 475: else
;pompa.c: 476: {
;pompa.c: 477: if(M._MODULUJ&&!DtIN._err_IN&&!M._RPM_CW&&RTS(15)>10)
	
	btfss	(0+(_M+011h))&0ffh,5
	goto	u82041
	goto	u82040
u82041:
	goto	l4327
u82040:
	
l41280:; BSR set to: 0

	movlb	1	; () banked
	
	btfsc	((_DtIN))&0ffh,0
	goto	u82051
	goto	u82050
u82051:
	goto	l4327
u82050:
	
l41282:; BSR set to: 1

	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,7
	goto	u82061
	goto	u82060
u82061:
	goto	l4327
u82060:
	
l41284:; BSR set to: 0

	movlw	(0Fh)&0ffh
	
	call	_RTS
	movlb	2	; () banked
	movwf	(??_RglPmp2+0+0)&0ffh
	movlw	(0Bh)&0ffh
	subwf	((??_RglPmp2+0+0))&0ffh,w
	btfss	status,0
	goto	u82071
	goto	u82070
u82071:
	goto	l4327
u82070:
	line	479
	
l41286:; BSR set to: 2

;pompa.c: 478: {
;pompa.c: 479: if(rgl.fz)
	
	btfss	((c:_rgl)),c,2
	goto	u82081
	goto	u82080
u82081:
	goto	l41290
u82080:
	line	481
	
l41288:; BSR set to: 2

;pompa.c: 480: {
;pompa.c: 481: PMP.APROC=ModPmp2(PMP.APROC);
	movf	(0+((c:_PMP)+02h)),c,w
	
	call	_ModPmp2
	movwf	(0+((c:_PMP)+02h)),c
	goto	l41290
	line	484
	
l4327:
	line	486
;pompa.c: 484: else
;pompa.c: 485: {
;pompa.c: 486: PMP.APROC=PMP.MGPROC;
	movff	(c:_PMP),0+((c:_PMP)+02h)
	line	488
	
l41290:
;pompa.c: 487: }
;pompa.c: 488: WritePWM2(ProcToPmpPwm(PMP.APROC));
	movf	(0+((c:_PMP)+02h)),c,w
	
	call	_ProcToPmpPwm
	
	call	_WritePWM2
	line	490
	
l4330:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_RglPmp2
	__end_of_RglPmp2:
	signat	_RglPmp2,88
	global	_StartRTS

;; *************** function _StartRTS *****************
;; Defined at:
;;		line 70 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;;		_DecERR
;;		_Rozruch
;;		_Wylacz
;;		_VWybieg
;;		_DetekcjaPrzeplywuWG
;;		_OczekujNaPrzeplywWG
;;		_RuszPlomien
;;		_RuszCiag
;;		_Rusz48
;;		_Rusz48Z3
;;		_KeyRes
;;		_VZPauza
;;		_ToReset
;;		_EnKonf
;;		_RglPmp1
;;		_RglPmp2
;;		_RglPmp
;; This function uses a non-reentrant model
;;
psect	text207,class=CODE,space=0,reloc=2
global __ptext207
__ptext207:
psect	text207
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
	line	70
	global	__size_of_StartRTS
	__size_of_StartRTS	equ	__end_of_StartRTS-_StartRTS
	
_StartRTS:; BSR set to: 0

	opt	stack 23
;StartRTS@Index stored from wreg
	movff	wreg,(c:StartRTS@Index)
	line	71
	
l29212:
;rtimer.c: 71: if (Index>16-1) asm("RESET");
	movlw	(010h-1)
	cpfsgt	((c:StartRTS@Index)),c
	goto	u50811
	goto	u50810
u50811:
	goto	l29216
u50810:
	
l29214:
# 71 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
RESET ;# 
psect	text207
	line	72
	
l29216:
;rtimer.c: 72: Sk[Index].dS=0;
	movf	((c:StartRTS@Index)),c,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_Sk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	73
;rtimer.c: 73: Sk[Index].S=0;
	movf	((c:StartRTS@Index)),c,w
	mullw	02h
	movlw	low(_Sk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	74
	
l3682:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_StartRTS
	__end_of_StartRTS:
	signat	_StartRTS,4216
	global	_WritePWM2

;; *************** function _WritePWM2 *****************
;; Defined at:
;;		line 391 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
;; Parameters:    Size  Location     Type
;;  tpwm            1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  tpwm            1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_main
;;		_RglPmp1
;;		_RglPmp2
;;		_RglPmp
;; This function uses a non-reentrant model
;;
psect	text208,class=CODE,space=0,reloc=2
global __ptext208
__ptext208:
psect	text208
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
	line	391
	global	__size_of_WritePWM2
	__size_of_WritePWM2	equ	__end_of_WritePWM2-_WritePWM2
	
_WritePWM2:; BSR set to: 1

	opt	stack 25
;WritePWM2@tpwm stored from wreg
	movff	wreg,(c:WritePWM2@tpwm)
	line	392
	
l29218:; BSR set to: 0

;pwm.c: 392: PWM._ENPWM2=0;
	bcf	(0+(_PWM+05h))&0ffh,0	;volatile
	line	393
	
l29220:; BSR set to: 0

;pwm.c: 393: PWM.BufPWM2=tpwm;
	movff	(c:WritePWM2@tpwm),0+(_PWM+06h)	;volatile
	line	394
	
l29222:; BSR set to: 0

;pwm.c: 394: PWM._ENPWM2=1;
	bsf	(0+(_PWM+05h))&0ffh,0	;volatile
	line	395
	
l2584:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_WritePWM2
	__end_of_WritePWM2:
	signat	_WritePWM2,4216
	global	_RTS

;; *************** function _RTS *****************
;; Defined at:
;;		line 76 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : 0/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_DecSTR
;;		_Rozruch
;;		_Wylacz
;;		_VWybieg
;;		_DetekcjaPrzeplywuWG
;;		_OczekujNaPrzeplywWG
;;		_RuszPlomien
;;		_RuszCiag
;;		_ReloadCiag
;;		_Rusz48
;;		_Rusz48Z3
;;		_KeyRes
;;		_VZPauza
;;		_ToReset
;;		_RglPmp1
;;		_RglPmp2
;; This function uses a non-reentrant model
;;
psect	text209,class=CODE,space=0,reloc=2
global __ptext209
__ptext209:
psect	text209
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
	line	76
	global	__size_of_RTS
	__size_of_RTS	equ	__end_of_RTS-_RTS
	
_RTS:; BSR set to: 0

	opt	stack 23
;RTS@Index stored from wreg
	movff	wreg,(c:RTS@Index)
	line	77
	
l32770:
;rtimer.c: 77: if (Index>16-1) asm("RESET");
	movlw	(010h-1)
	cpfsgt	((c:RTS@Index)),c
	goto	u60731
	goto	u60730
u60731:
	goto	l32774
u60730:
	
l32772:
# 77 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
RESET ;# 
psect	text209
	line	78
	
l32774:
;rtimer.c: 78: return Sk[Index].S;
	movf	((c:RTS@Index)),c,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_Sk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	line	79
	
l3686:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RTS
	__end_of_RTS:
	signat	_RTS,4217
	global	_ProcToPmpPwm

;; *************** function _ProcToPmpPwm *****************
;; Defined at:
;;		line 26 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  prc             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  prc             1    4[BANK0 ] unsigned char 
;;  p               2    5[BANK0 ] unsigned int 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : C/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___wmul
;;		___lwdiv
;; This function is called by:
;;		_RglPmp1
;;		_RglPmp2
;;		_RglPmp
;; This function uses a non-reentrant model
;;
psect	text210,class=CODE,space=0,reloc=2
global __ptext210
__ptext210:
psect	text210
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	26
	global	__size_of_ProcToPmpPwm
	__size_of_ProcToPmpPwm	equ	__end_of_ProcToPmpPwm-_ProcToPmpPwm
	
_ProcToPmpPwm:; BSR set to: 1

	opt	stack 24
;ProcToPmpPwm@prc stored from wreg
	line	29
	movff	wreg,(ProcToPmpPwm@prc)
	
l35698:
;pompa.c: 27: unsigned int p;
;pompa.c: 29: if(prc>100) prc=100;
	movlw	(065h-1)
	movlb	0	; () banked
	cpfsgt	((ProcToPmpPwm@prc))&0ffh
	goto	u67531
	goto	u67530
u67531:
	goto	l35702
u67530:
	
l35700:; BSR set to: 0

	movlw	low(064h)
	movwf	((ProcToPmpPwm@prc))&0ffh
	line	30
	
l35702:; BSR set to: 0

;pompa.c: 30: p=PWM.HIPWM;
	movff	0+(_PWM+08h),(ProcToPmpPwm@p)	;volatile
	clrf	((ProcToPmpPwm@p+1))&0ffh
	line	31
	
l35704:; BSR set to: 0

;pompa.c: 31: p=(prc*p)/100;
	movff	(ProcToPmpPwm@p),0+((c:?___wmul)+02h)
	movff	(ProcToPmpPwm@p+1),1+((c:?___wmul)+02h)
	movff	(ProcToPmpPwm@prc),(c:?___wmul)
	clrf	((c:?___wmul+1)),c
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___lwdiv)
	movff	1+?___wmul,(?___lwdiv+1)
	movlw	high(064h)
	movwf	(1+(?___lwdiv+02h))&0ffh
	movlw	low(064h)
	movwf	(0+(?___lwdiv+02h))&0ffh
	call	___lwdiv	;wreg free
	movff	0+?___lwdiv,(ProcToPmpPwm@p)
	movff	1+?___lwdiv,(ProcToPmpPwm@p+1)
	line	32
	
l35706:; BSR set to: 0

;pompa.c: 32: return (unsigned char)p;
	movf	((ProcToPmpPwm@p))&0ffh,w
	line	33
	
l4152:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ProcToPmpPwm
	__end_of_ProcToPmpPwm:
	signat	_ProcToPmpPwm,4217
	global	_ModPmp2

;; *************** function _ModPmp2 *****************
;; Defined at:
;;		line 311 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  p               1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  p               1    5[BANK3 ] unsigned char 
;;  ppwm            1    9[BANK3 ] unsigned char 
;;  pup             1    8[BANK3 ] unsigned char 
;;  pdw             1    7[BANK3 ] unsigned char 
;;  tim             1    6[BANK3 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : D/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0      10       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       10 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    8
;; This function calls:
;;		_RetHI
;;		_RetLO
;;		_RetDelta
;;		_StartRTdS
;;		_RTdS
;;		_Twyzsza
;;		_Tnizsza
;; This function is called by:
;;		_RglPmp2
;; This function uses a non-reentrant model
;;
psect	text211,class=CODE,space=0,reloc=2
global __ptext211
__ptext211:
psect	text211
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	311
	global	__size_of_ModPmp2
	__size_of_ModPmp2	equ	__end_of_ModPmp2-_ModPmp2
	
_ModPmp2:; BSR set to: 0

	opt	stack 20
;ModPmp2@p stored from wreg
	line	315
	movff	wreg,(ModPmp2@p)
	
l41138:; BSR set to: 2

;pompa.c: 312: unsigned char ppwm, tim, pup, pdw;
;pompa.c: 315: DtIN.Eco5LO=25;
	movlw	low(019h)
	movlb	1	; () banked
	movwf	(0+(_DtIN+0Ch))&0ffh
	line	316
;pompa.c: 316: DtIN.Eco5HI=55;
	movlw	low(037h)
	movwf	(0+(_DtIN+0Bh))&0ffh
	line	317
;pompa.c: 317: if(DtIN.PPEco)
	movf	(0+(_DtIN+0Ah))&0ffh,w
	btfsc	status,2
	goto	u81641
	goto	u81640
u81641:
	goto	l4268
u81640:
	line	319
	
l41140:; BSR set to: 1

;pompa.c: 318: {
;pompa.c: 319: DtIN.HI=RetHI(DtCO.PPCO,DtIN.PPEco-1,80);
	decf	(0+(_DtIN+0Ah))&0ffh,w
	movwf	((c:?_RetHI)),c
	movlw	low(050h)
	movwf	(0+((c:?_RetHI)+01h)),c
	movlb	0	; () banked
	movf	(0+(_DtCO+04h))&0ffh,w
	
	call	_RetHI
	movlb	1	; () banked
	movwf	(0+(_DtIN+0Dh))&0ffh
	line	320
;pompa.c: 320: DtIN.LO=RetLO(DtCO.PPCO,DtIN.PPEco-1,10);
	decf	(0+(_DtIN+0Ah))&0ffh,w
	movwf	((c:?_RetLO)),c
	movlw	low(0Ah)
	movwf	(0+((c:?_RetLO)+01h)),c
	movlb	0	; () banked
	movf	(0+(_DtCO+04h))&0ffh,w
	
	call	_RetLO
	movlb	1	; () banked
	movwf	(0+(_DtIN+0Eh))&0ffh
	line	321
;pompa.c: 321: DtIN.delta=RetDelta(DtCO.PPCO,DtIN.PPEco-1);
	decf	(0+(_DtIN+0Ah))&0ffh,w
	movwf	((c:?_RetDelta)),c
	movlb	0	; () banked
	movf	(0+(_DtCO+04h))&0ffh,w
	
	call	_RetDelta
	movlb	1	; () banked
	movwf	(0+(_DtIN+012h))&0ffh
	line	322
;pompa.c: 322: }
	goto	l4269
	line	323
	
l4268:; BSR set to: 1

	line	325
;pompa.c: 323: else
;pompa.c: 324: {
;pompa.c: 325: DtIN.HI=0;
	clrf	(0+(_DtIN+0Dh))&0ffh
	line	327
;pompa.c: 327: DtIN.delta=0;
	clrf	(0+(_DtIN+012h))&0ffh
	line	328
	
l4269:; BSR set to: 1

	line	329
;pompa.c: 328: }
;pompa.c: 329: if(!DtIN.delta)
	tstfsz	(0+(_DtIN+012h))&0ffh
	goto	u81651
	goto	u81650
u81651:
	goto	l4270
u81650:
	line	331
	
l41142:; BSR set to: 1

;pompa.c: 330: {
;pompa.c: 331: StartRTdS(8);
	movlw	(08h)&0ffh
	
	call	_StartRTdS
	line	332
	
l41144:; BSR set to: 1

;pompa.c: 332: return PMP.MGPROC;
	movf	((c:_PMP)),c,w
	goto	l4271
	line	333
	
l4270:; BSR set to: 1

	line	336
;pompa.c: 333: }
;pompa.c: 336: ppwm=p;
	movff	(ModPmp2@p),(ModPmp2@ppwm)
	line	338
;pompa.c: 338: if(rgl.fz||ppwm!=PMP.MGPROC)
	
	btfsc	((c:_rgl)),c,2
	goto	u81661
	goto	u81660
u81661:
	goto	l4274
u81660:
	
l41148:; BSR set to: 1

	movf	((c:_PMP)),c,w
	movlb	3	; () banked
	xorwf	((ModPmp2@ppwm))&0ffh,w
	btfsc	status,2
	goto	u81671
	goto	u81670
u81671:
	goto	l41256
u81670:
	
l4274:
	line	341
;pompa.c: 339: {
;pompa.c: 341: DtIN.cDLT=DtIN.delta;
	movff	0+(_DtIN+012h),0+(_DtIN+06h)
	line	344
	
l41150:
;pompa.c: 344: if(DtIN.DIN2>DtIN.cDLT)
	movlb	1	; () banked
	movf	(0+(_DtIN+04h))&0ffh,w
	cpfslt	(0+(_DtIN+06h))&0ffh
	goto	u81681
	goto	u81680
u81681:
	goto	l41162
u81680:
	line	346
	
l41152:; BSR set to: 1

;pompa.c: 345: {
;pompa.c: 346: tim=50;
	movlw	low(032h)
	movlb	3	; () banked
	movwf	((ModPmp2@tim))&0ffh
	line	347
	
l41154:; BSR set to: 3

;pompa.c: 347: if(DtIN.DIN2-DtIN.cDLT==2) tim=100;
	movlb	1	; () banked
	movf	(0+(_DtIN+06h))&0ffh,w
	movff	0+(_DtIN+04h),??_ModPmp2+0+0
	movlb	3	; () banked
	clrf	(??_ModPmp2+0+0+1)&0ffh
	subwf	(??_ModPmp2+0+0)&0ffh
	movlw	0
	subwfb	(??_ModPmp2+0+1)&0ffh
	movf	(??_ModPmp2+0+0)&0ffh,w
	xorlw	2
	iorwf (??_ModPmp2+0+1)&0ffh,w

	btfss	status,2
	goto	u81691
	goto	u81690
u81691:
	goto	l41158
u81690:
	
l41156:; BSR set to: 3

	movlw	low(064h)
	movwf	((ModPmp2@tim))&0ffh
	goto	l41172
	line	349
	
l41158:; BSR set to: 3

;pompa.c: 348: else
;pompa.c: 349: if(DtIN.DIN2-DtIN.cDLT==1) tim=150;
	movlb	1	; () banked
	movf	(0+(_DtIN+06h))&0ffh,w
	movff	0+(_DtIN+04h),??_ModPmp2+0+0
	movlb	3	; () banked
	clrf	(??_ModPmp2+0+0+1)&0ffh
	subwf	(??_ModPmp2+0+0)&0ffh
	movlw	0
	subwfb	(??_ModPmp2+0+1)&0ffh
	decf	(??_ModPmp2+0+0)&0ffh,w
	iorwf (??_ModPmp2+0+1)&0ffh,w

	btfss	status,2
	goto	u81701
	goto	u81700
u81701:
	goto	l41172
u81700:
	
l41160:; BSR set to: 3

	movlw	low(096h)
	movwf	((ModPmp2@tim))&0ffh
	goto	l41172
	line	353
	
l41162:; BSR set to: 1

;pompa.c: 351: else
;pompa.c: 352: {
;pompa.c: 353: tim=80;
	movlw	low(050h)
	movlb	3	; () banked
	movwf	((ModPmp2@tim))&0ffh
	line	354
	
l41164:; BSR set to: 3

;pompa.c: 354: if(DtIN.cDLT-DtIN.DIN2==2) tim=100;
	movlb	1	; () banked
	movf	(0+(_DtIN+04h))&0ffh,w
	movff	0+(_DtIN+06h),??_ModPmp2+0+0
	movlb	3	; () banked
	clrf	(??_ModPmp2+0+0+1)&0ffh
	subwf	(??_ModPmp2+0+0)&0ffh
	movlw	0
	subwfb	(??_ModPmp2+0+1)&0ffh
	movf	(??_ModPmp2+0+0)&0ffh,w
	xorlw	2
	iorwf (??_ModPmp2+0+1)&0ffh,w

	btfss	status,2
	goto	u81711
	goto	u81710
u81711:
	goto	l41168
u81710:
	goto	l41156
	line	356
	
l41168:; BSR set to: 3

;pompa.c: 355: else
;pompa.c: 356: if(DtIN.cDLT-DtIN.DIN2==1) tim=150;
	movlb	1	; () banked
	movf	(0+(_DtIN+04h))&0ffh,w
	movff	0+(_DtIN+06h),??_ModPmp2+0+0
	movlb	3	; () banked
	clrf	(??_ModPmp2+0+0+1)&0ffh
	subwf	(??_ModPmp2+0+0)&0ffh
	movlw	0
	subwfb	(??_ModPmp2+0+1)&0ffh
	decf	(??_ModPmp2+0+0)&0ffh,w
	iorwf (??_ModPmp2+0+1)&0ffh,w

	btfss	status,2
	goto	u81721
	goto	u81720
u81721:
	goto	l41172
u81720:
	goto	l41160
	line	360
	
l41172:; BSR set to: 3

;pompa.c: 357: }
;pompa.c: 360: pup=0;
	clrf	((ModPmp2@pup))&0ffh
	line	361
	
l41174:; BSR set to: 3

;pompa.c: 361: pdw=0;
	clrf	((ModPmp2@pdw))&0ffh
	line	362
	
l41176:; BSR set to: 3

;pompa.c: 362: if((RTdS(8)>tim)||(ppwm<=PMP.MDPROC)||(ppwm>=PMP.MGPROC))
	movlw	(08h)&0ffh
	
	call	_RTdS
	movlb	3	; () banked
	subwf	((ModPmp2@tim))&0ffh,w
	btfss	status,0
	goto	u81731
	goto	u81730
u81731:
	goto	l41182
u81730:
	
l41178:; BSR set to: 3

	movf	((ModPmp2@ppwm))&0ffh,w
	cpfslt	(0+((c:_PMP)+01h)),c
	goto	u81741
	goto	u81740
u81741:
	goto	l41182
u81740:
	
l41180:; BSR set to: 3

	movf	((c:_PMP)),c,w
	subwf	((ModPmp2@ppwm))&0ffh,w
	btfss	status,0
	goto	u81751
	goto	u81750
u81751:
	goto	l41260
u81750:
	line	364
	
l41182:; BSR set to: 3

;pompa.c: 363: {
;pompa.c: 364: StartRTdS(8);
	movlw	(08h)&0ffh
	
	call	_StartRTdS
	line	366
	
l41184:; BSR set to: 1

;pompa.c: 366: if(!pup)
	line	367
	
l41186:; BSR set to: 1

;pompa.c: 367: if(rgl.tmp_pwm<=PWM.MINPWM)
	movf	(0+((c:_rgl)+09h)),c,w
	movlb	0	; () banked
	subwf	(0+(_PWM+020h))&0ffh,w	;volatile
	btfss	status,0
	goto	u81761
	goto	u81760
u81761:
	goto	l41200
u81760:
	line	369
	
l41188:; BSR set to: 0

;pompa.c: 368: {
;pompa.c: 369: if(Twyzsza(2)||Tnizsza(2))
	movlw	(02h)&0ffh
	
	call	_Twyzsza
	btfsc	status,0
	goto	u81771
	goto	u81770
u81771:
	goto	l41192
u81770:
	
l41190:; BSR set to: 0

	movlw	(02h)&0ffh
	
	call	_Tnizsza
	btfss	status,0
	goto	u81781
	goto	u81780
u81781:
	goto	l41200
u81780:
	line	371
	
l41192:; BSR set to: 0

;pompa.c: 370: {
;pompa.c: 371: if(ppwm<PMP.MGPROC)
	movf	((c:_PMP)),c,w
	movlb	3	; () banked
	cpfslt	((ModPmp2@ppwm))&0ffh
	goto	u81791
	goto	u81790
u81791:
	goto	l41200
u81790:
	line	373
	
l41194:; BSR set to: 3

;pompa.c: 372: {
;pompa.c: 373: if(((ppwm+1)<PMP.MGPROC))
	movf	((c:_PMP)),c,w
	movwf	(??_ModPmp2+0+0)&0ffh
	clrf	(??_ModPmp2+0+0+1)&0ffh

	movf	((ModPmp2@ppwm))&0ffh,w
	movwf	(??_ModPmp2+2+0)&0ffh
	clrf	(??_ModPmp2+2+0+1)&0ffh

	movlw	01h
	addwf	(??_ModPmp2+2+0)&0ffh
	movlw	0
	addwfc	(??_ModPmp2+2+1)&0ffh
	movf	(??_ModPmp2+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPmp2+4+0)&0ffh
	movf	(??_ModPmp2+0+0)&0ffh,w
	subwf	(??_ModPmp2+2+0)&0ffh,w
	movf	(??_ModPmp2+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPmp2+4+0)&0ffh,w
	btfsc	status,0
	goto	u81801
	goto	u81800
u81801:
	goto	l4292
u81800:
	line	375
	
l41196:; BSR set to: 3

;pompa.c: 374: {
;pompa.c: 375: ppwm+=1;
	incf	((ModPmp2@ppwm))&0ffh
	line	376
	
l41198:; BSR set to: 3

;pompa.c: 376: pup=1;
	movlw	low(01h)
	movwf	((ModPmp2@pup))&0ffh
	line	377
;pompa.c: 377: }
	goto	l41200
	line	378
	
l4292:; BSR set to: 3

;pompa.c: 378: else ppwm=PMP.MGPROC;
	movff	(c:_PMP),(ModPmp2@ppwm)
	line	383
	
l41200:
;pompa.c: 379: }
;pompa.c: 380: }
;pompa.c: 381: }
;pompa.c: 383: if(rgl.tmp_pwm>PWM.MINPWM||((rgl.tmp_pwm<=PWM.MINPWM)&&!Twyzsza(1)))
	movf	(0+((c:_rgl)+09h)),c,w
	movlb	0	; () banked
	subwf	(0+(_PWM+020h))&0ffh,w	;volatile
	btfss	status,0
	goto	u81811
	goto	u81810
u81811:
	goto	l41206
u81810:
	
l41202:; BSR set to: 0

	movf	(0+((c:_rgl)+09h)),c,w
	subwf	(0+(_PWM+020h))&0ffh,w	;volatile
	btfss	status,0
	goto	u81821
	goto	u81820
u81821:
	goto	l41228
u81820:
	
l41204:; BSR set to: 0

	movlw	(01h)&0ffh
	
	call	_Twyzsza
	btfsc	status,0
	goto	u81831
	goto	u81830
u81831:
	goto	l41228
u81830:
	line	385
	
l41206:; BSR set to: 0

;pompa.c: 384: {
;pompa.c: 385: if(DtIN.DIN<DtIN.cDLT)
	movlb	1	; () banked
	movf	(0+(_DtIN+06h))&0ffh,w
	cpfslt	(0+(_DtIN+03h))&0ffh
	goto	u81841
	goto	u81840
u81841:
	goto	l41228
u81840:
	line	387
	
l41208:; BSR set to: 1

;pompa.c: 386: {
;pompa.c: 387: if(!pdw)
	line	388
	
l41210:; BSR set to: 1

;pompa.c: 388: if(ppwm>PMP.MDPROC)
	movlb	3	; () banked
	movf	((ModPmp2@ppwm))&0ffh,w
	cpfslt	(0+((c:_PMP)+01h)),c
	goto	u81851
	goto	u81850
u81851:
	goto	l4298
u81850:
	line	390
	
l41212:; BSR set to: 3

;pompa.c: 389: {
;pompa.c: 390: if(((ppwm-2)>PMP.MDPROC))
	movlw	low(-2)
	addwf	((ModPmp2@ppwm))&0ffh,w
	movwf	(??_ModPmp2+0+0)&0ffh
	clrf	1+(??_ModPmp2+0+0)&0ffh
	movlw	high(-2)
	addwfc	1+(??_ModPmp2+0+0)&0ffh
	movf	(0+((c:_PMP)+01h)),c,w
	movwf	(??_ModPmp2+2+0)&0ffh
	clrf	(??_ModPmp2+2+0+1)&0ffh

	movf	(??_ModPmp2+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPmp2+4+0)&0ffh
	movf	(??_ModPmp2+0+0)&0ffh,w
	subwf	(??_ModPmp2+2+0)&0ffh,w
	movf	(??_ModPmp2+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPmp2+4+0)&0ffh,w
	btfsc	status,0
	goto	u81861
	goto	u81860
u81861:
	goto	l4300
u81860:
	line	392
	
l41214:; BSR set to: 3

;pompa.c: 391: {
;pompa.c: 392: ppwm-=2;
	movlw	(02h)&0ffh
	subwf	((ModPmp2@ppwm))&0ffh
	line	393
	
l41216:; BSR set to: 3

;pompa.c: 393: pdw=1;
	movlw	low(01h)
	movwf	((ModPmp2@pdw))&0ffh
	line	394
;pompa.c: 394: }
	goto	l4298
	line	395
	
l4300:; BSR set to: 3

;pompa.c: 395: else ppwm=PMP.MDPROC;
	movff	0+((c:_PMP)+01h),(ModPmp2@ppwm)
	line	397
	
l4298:; BSR set to: 3

;pompa.c: 396: }
;pompa.c: 397: if(!pdw)
	tstfsz	((ModPmp2@pdw))&0ffh
	goto	u81871
	goto	u81870
u81871:
	goto	l41228
u81870:
	line	398
	
l41218:; BSR set to: 3

;pompa.c: 398: if(DtIN.DIN<DtIN.DIN2)
	movlb	1	; () banked
	movf	(0+(_DtIN+04h))&0ffh,w
	cpfslt	(0+(_DtIN+03h))&0ffh
	goto	u81881
	goto	u81880
u81881:
	goto	l41228
u81880:
	line	400
	
l41220:; BSR set to: 1

;pompa.c: 399: {
;pompa.c: 400: if(ppwm>PMP.MDPROC)
	movlb	3	; () banked
	movf	((ModPmp2@ppwm))&0ffh,w
	cpfslt	(0+((c:_PMP)+01h)),c
	goto	u81891
	goto	u81890
u81891:
	goto	l41228
u81890:
	line	402
	
l41222:; BSR set to: 3

;pompa.c: 401: {
;pompa.c: 402: if(((ppwm-2)>PMP.MDPROC))
	movlw	low(-2)
	addwf	((ModPmp2@ppwm))&0ffh,w
	movwf	(??_ModPmp2+0+0)&0ffh
	clrf	1+(??_ModPmp2+0+0)&0ffh
	movlw	high(-2)
	addwfc	1+(??_ModPmp2+0+0)&0ffh
	movf	(0+((c:_PMP)+01h)),c,w
	movwf	(??_ModPmp2+2+0)&0ffh
	clrf	(??_ModPmp2+2+0+1)&0ffh

	movf	(??_ModPmp2+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPmp2+4+0)&0ffh
	movf	(??_ModPmp2+0+0)&0ffh,w
	subwf	(??_ModPmp2+2+0)&0ffh,w
	movf	(??_ModPmp2+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPmp2+4+0)&0ffh,w
	btfsc	status,0
	goto	u81901
	goto	u81900
u81901:
	goto	l4305
u81900:
	line	404
	
l41224:; BSR set to: 3

;pompa.c: 403: {
;pompa.c: 404: ppwm-=2;
	movlw	(02h)&0ffh
	subwf	((ModPmp2@ppwm))&0ffh
	line	405
	
l41226:; BSR set to: 3

	line	406
;pompa.c: 406: }
	goto	l41228
	line	407
	
l4305:; BSR set to: 3

;pompa.c: 407: else ppwm=PMP.MDPROC;
	movff	0+((c:_PMP)+01h),(ModPmp2@ppwm)
	line	413
	
l41228:
;pompa.c: 408: }
;pompa.c: 409: }
;pompa.c: 410: }
;pompa.c: 411: }
;pompa.c: 413: if(rgl.tmp_pwm<PWM.MAXPWM||((rgl.tmp_pwm>=PWM.MAXPWM)&&!Tnizsza(1)))
	movlb	0	; () banked
	movf	(0+(_PWM+021h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+09h)),c,w
	btfss	status,0
	goto	u81911
	goto	u81910
u81911:
	goto	l41234
u81910:
	
l41230:; BSR set to: 0

	movf	(0+(_PWM+021h))&0ffh,w	;volatile
	subwf	(0+((c:_rgl)+09h)),c,w
	btfss	status,0
	goto	u81921
	goto	u81920
u81921:
	goto	l41260
u81920:
	
l41232:; BSR set to: 0

	movlw	(01h)&0ffh
	
	call	_Tnizsza
	btfsc	status,0
	goto	u81931
	goto	u81930
u81931:
	goto	l41260
u81930:
	line	415
	
l41234:; BSR set to: 0

;pompa.c: 414: {
;pompa.c: 415: if(DtIN.DIN>DtIN.cDLT)
	movlb	1	; () banked
	movf	(0+(_DtIN+03h))&0ffh,w
	cpfslt	(0+(_DtIN+06h))&0ffh
	goto	u81941
	goto	u81940
u81941:
	goto	l41260
u81940:
	line	417
	
l41236:; BSR set to: 1

;pompa.c: 416: {
;pompa.c: 417: if(!pup)
	movlb	3	; () banked
	tstfsz	((ModPmp2@pup))&0ffh
	goto	u81951
	goto	u81950
u81951:
	goto	l4311
u81950:
	line	418
	
l41238:; BSR set to: 3

;pompa.c: 418: if(ppwm<PMP.MGPROC)
	movf	((c:_PMP)),c,w
	cpfslt	((ModPmp2@ppwm))&0ffh
	goto	u81961
	goto	u81960
u81961:
	goto	l4311
u81960:
	line	420
	
l41240:; BSR set to: 3

;pompa.c: 419: {
;pompa.c: 420: if(((ppwm+1)<PMP.MGPROC))
	movf	((c:_PMP)),c,w
	movwf	(??_ModPmp2+0+0)&0ffh
	clrf	(??_ModPmp2+0+0+1)&0ffh

	movf	((ModPmp2@ppwm))&0ffh,w
	movwf	(??_ModPmp2+2+0)&0ffh
	clrf	(??_ModPmp2+2+0+1)&0ffh

	movlw	01h
	addwf	(??_ModPmp2+2+0)&0ffh
	movlw	0
	addwfc	(??_ModPmp2+2+1)&0ffh
	movf	(??_ModPmp2+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPmp2+4+0)&0ffh
	movf	(??_ModPmp2+0+0)&0ffh,w
	subwf	(??_ModPmp2+2+0)&0ffh,w
	movf	(??_ModPmp2+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPmp2+4+0)&0ffh,w
	btfsc	status,0
	goto	u81971
	goto	u81970
u81971:
	goto	l4313
u81970:
	line	422
	
l41242:; BSR set to: 3

;pompa.c: 421: {
;pompa.c: 422: ppwm+=1;
	incf	((ModPmp2@ppwm))&0ffh
	line	423
	
l41244:; BSR set to: 3

;pompa.c: 423: pup=1;
	movlw	low(01h)
	movwf	((ModPmp2@pup))&0ffh
	line	424
;pompa.c: 424: }
	goto	l4311
	line	425
	
l4313:; BSR set to: 3

;pompa.c: 425: else ppwm=PMP.MGPROC;
	movff	(c:_PMP),(ModPmp2@ppwm)
	line	427
	
l4311:; BSR set to: 3

;pompa.c: 426: }
;pompa.c: 427: if(!pup)
	tstfsz	((ModPmp2@pup))&0ffh
	goto	u81981
	goto	u81980
u81981:
	goto	l41260
u81980:
	line	428
	
l41246:; BSR set to: 3

;pompa.c: 428: if(DtIN.DIN>DtIN.DIN2)
	movlb	1	; () banked
	movf	(0+(_DtIN+03h))&0ffh,w
	cpfslt	(0+(_DtIN+04h))&0ffh
	goto	u81991
	goto	u81990
u81991:
	goto	l41260
u81990:
	line	430
	
l41248:; BSR set to: 1

;pompa.c: 429: {
;pompa.c: 430: if(ppwm<PMP.MGPROC)
	movf	((c:_PMP)),c,w
	movlb	3	; () banked
	cpfslt	((ModPmp2@ppwm))&0ffh
	goto	u82001
	goto	u82000
u82001:
	goto	l41260
u82000:
	line	432
	
l41250:; BSR set to: 3

;pompa.c: 431: {
;pompa.c: 432: if(((ppwm+1)<PMP.MGPROC))
	movf	((c:_PMP)),c,w
	movwf	(??_ModPmp2+0+0)&0ffh
	clrf	(??_ModPmp2+0+0+1)&0ffh

	movf	((ModPmp2@ppwm))&0ffh,w
	movwf	(??_ModPmp2+2+0)&0ffh
	clrf	(??_ModPmp2+2+0+1)&0ffh

	movlw	01h
	addwf	(??_ModPmp2+2+0)&0ffh
	movlw	0
	addwfc	(??_ModPmp2+2+1)&0ffh
	movf	(??_ModPmp2+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_ModPmp2+4+0)&0ffh
	movf	(??_ModPmp2+0+0)&0ffh,w
	subwf	(??_ModPmp2+2+0)&0ffh,w
	movf	(??_ModPmp2+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_ModPmp2+4+0)&0ffh,w
	btfsc	status,0
	goto	u82011
	goto	u82010
u82011:
	goto	l4318
u82010:
	line	434
	
l41252:; BSR set to: 3

;pompa.c: 433: {
;pompa.c: 434: ppwm+=1;
	incf	((ModPmp2@ppwm))&0ffh
	line	435
	
l41254:; BSR set to: 3

	line	436
;pompa.c: 436: }
	goto	l41260
	line	437
	
l4318:
;pompa.c: 437: else ppwm=PMP.MGPROC;
	movff	(c:_PMP),(ModPmp2@ppwm)
	goto	l41260
	line	447
	
l41256:; BSR set to: 3

;pompa.c: 445: else
;pompa.c: 446: {
;pompa.c: 447: StartRTdS(8);
	movlw	(08h)&0ffh
	
	call	_StartRTdS
	goto	l4318
	line	450
	
l41260:
;pompa.c: 449: }
;pompa.c: 450: return ppwm;
	movlb	3	; () banked
	movf	((ModPmp2@ppwm))&0ffh,w
	line	451
	
l4271:
	return
	opt stack 0
GLOBAL	__end_of_ModPmp2
	__end_of_ModPmp2:
	signat	_ModPmp2,4217
	global	_StartRTdS

;; *************** function _StartRTdS *****************
;; Defined at:
;;		line 55 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : C/2
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_NastawaCOCW
;;		_Blokada15S
;;		_ZmienKCOKCW
;;		_RuszPlomien
;;		_WritePCO
;;		_PomiarPCO
;;		_WritePCW
;;		_PomiarPCW
;;		_WritePFN
;;		_PomiarPFN
;;		_PwrOnDelay
;;		_Moduluj
;;		_StartCO
;;		_StartMCW
;;		_StartCO4
;;		_StartMCW4
;;		_StartCO2
;;		_StartMCW2
;;		_StartMCO3
;;		_ModPmp1
;;		_ModPmp2
;;		_ReadParam
;;		_TrybPracy
;; This function uses a non-reentrant model
;;
psect	text212,class=CODE,space=0,reloc=2
global __ptext212
__ptext212:
psect	text212
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
	line	55
	global	__size_of_StartRTdS
	__size_of_StartRTdS	equ	__end_of_StartRTdS-_StartRTdS
	
_StartRTdS:
	opt	stack 23
;StartRTdS@Index stored from wreg
	movff	wreg,(c:StartRTdS@Index)
	line	56
	
l40384:
;rtimer.c: 56: if (Index>11-1) asm("RESET");
	movlw	(0Bh-1)
	cpfsgt	((c:StartRTdS@Index)),c
	goto	u80121
	goto	u80120
u80121:
	goto	l40388
u80120:
	
l40386:
# 56 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
RESET ;# 
psect	text212
	line	57
	
l40388:
;rtimer.c: 57: dSk[Index].cS=0;
	movf	((c:StartRTdS@Index)),c,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_dSk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	58
;rtimer.c: 58: dSk[Index].dS=0;
	movf	((c:StartRTdS@Index)),c,w
	mullw	02h
	movlw	low(_dSk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	59
	
l3674:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_StartRTdS
	__end_of_StartRTdS:
	signat	_StartRTdS,4216
	global	_RTdS

;; *************** function _RTdS *****************
;; Defined at:
;;		line 61 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
;; Parameters:    Size  Location     Type
;;  Index           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Index           1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : 0/1
;;		On exit  : F/1
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_NastawaCOCW
;;		_Blokada15S
;;		_ZmienKCOKCW
;;		_ReloadPlomien
;;		_WritePCO
;;		_WritePCW
;;		_WritePFN
;;		_PwrOnDelay
;;		_Moduluj
;;		_ModPmp1
;;		_ModPmp2
;;		_ReadParam
;;		_TrybPracy
;; This function uses a non-reentrant model
;;
psect	text213,class=CODE,space=0,reloc=2
global __ptext213
__ptext213:
psect	text213
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
	line	61
	global	__size_of_RTdS
	__size_of_RTdS	equ	__end_of_RTdS-_RTdS
	
_RTdS:; BSR set to: 1

	opt	stack 23
;RTdS@Index stored from wreg
	movff	wreg,(c:RTdS@Index)
	line	62
	
l40396:
;rtimer.c: 62: if (Index>11-1) asm("RESET");
	movlw	(0Bh-1)
	cpfsgt	((c:RTdS@Index)),c
	goto	u80131
	goto	u80130
u80131:
	goto	l40400
u80130:
	
l40398:
# 62 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
RESET ;# 
psect	text213
	line	63
	
l40400:
;rtimer.c: 63: return dSk[Index].dS;
	movf	((c:RTdS@Index)),c,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_dSk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	line	64
	
l3678:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RTdS
	__end_of_RTdS:
	signat	_RTdS,4217
	global	_Tnizsza

;; *************** function _Tnizsza *****************
;; Defined at:
;;		line 2486 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;  t               1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  t               1   29[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModZgCO
;;		_ModZgCW
;;		_ModDkCW
;;		_ModPruCW
;;		_ModPrzCW
;;		_ModZgCW4
;;		_ModPruCW4
;;		_ModPrzCW4
;;		_ModZgCW2
;;		_ModPruCW2
;;		_ModPrzCW2
;;		_ModToCW3
;;		_ModPmp1
;;		_ModPmp2
;; This function uses a non-reentrant model
;;
psect	text214,class=CODE,space=0,reloc=2
global __ptext214
__ptext214:
psect	text214
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2486
	global	__size_of_Tnizsza
	__size_of_Tnizsza	equ	__end_of_Tnizsza-_Tnizsza
	
_Tnizsza:; BSR set to: 1

	opt	stack 24
;Tnizsza@t stored from wreg
	movff	wreg,(c:Tnizsza@t)
	line	2487
	
l35476:
;rgl.c: 2487: return (rgl.x_t>t);
	movf	((c:Tnizsza@t)),c,w
	btfsc	(0+((c:_rgl)+02h)),c,7
	goto	u67150
	xorlw	0ffh
	addwf	(0+((c:_rgl)+02h)),c,w
	btfsc	status,0
	goto	u67151
	goto	u67150
u67151:
	goto	l35480
u67150:
	
l35478:
	bcf	status,0
	goto	l3642
	
l35480:
	bsf	status,0
	line	2488
	
l3642:
	return
	opt stack 0
GLOBAL	__end_of_Tnizsza
	__end_of_Tnizsza:
	signat	_Tnizsza,4216
	global	_Twyzsza

;; *************** function _Twyzsza *****************
;; Defined at:
;;		line 2495 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
;; Parameters:    Size  Location     Type
;;  t               1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  t               1   32[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : C/0
;;		On exit  : C/0
;;		Unchanged: FFFFFFF3/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ModDkCO
;;		_ModPrzCO
;;		_ModZgCW
;;		_ModPruCW
;;		_ModPrzCW
;;		_ModPruCW4
;;		_ModPrzCW4
;;		_ModPruCW2
;;		_ModPrzCW2
;;		_ModPmp1
;;		_ModPmp2
;; This function uses a non-reentrant model
;;
psect	text215,class=CODE,space=0,reloc=2
global __ptext215
__ptext215:
psect	text215
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
	line	2495
	global	__size_of_Twyzsza
	__size_of_Twyzsza	equ	__end_of_Twyzsza-_Twyzsza
	
_Twyzsza:
	opt	stack 24
;Twyzsza@t stored from wreg
	movff	wreg,(c:Twyzsza@t)
	line	2496
	
l35500:
;rgl.c: 2496: return (rgl.x_t<(-1*t));
	movf	((c:Twyzsza@t)),c,w
	mullw	01h
	comf	(prodl),c
	comf	(prodh),c
	infsnz	(prodl),c
	incf	(prodh),c
	movff	0+((c:_rgl)+02h),??_Twyzsza+0+0
	clrf	(??_Twyzsza+0+0+1)&0ffh,c
	btfsc	(??_Twyzsza+0+0)&0ffh,c,7
	decf	(??_Twyzsza+0+0+1)&0ffh,c
	movf	(??_Twyzsza+0+1),c,w
	xorlw	80h
	movwf	(??_Twyzsza+2+0)&0ffh,c
	movf	(prodl),c,w
	subwf	(??_Twyzsza+0+0),c,w
	movf	(prodh),c,w
	xorlw	80h
	subwfb	(??_Twyzsza+2+0)&0ffh,c,w
	btfss	status,0
	goto	u67181
	goto	u67180
u67181:
	goto	l35504
u67180:
	
l35502:
	bcf	status,0
	goto	l3645
	
l35504:
	bsf	status,0
	line	2497
	
l3645:
	return
	opt stack 0
GLOBAL	__end_of_Twyzsza
	__end_of_Twyzsza:
	signat	_Twyzsza,4216
	global	_RetDelta

;; *************** function _RetDelta *****************
;; Defined at:
;;		line 300 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  pco             1    wreg     unsigned char 
;;  eco             1   37[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  pco             1   11[BANK2 ] unsigned char 
;;  k               1   12[BANK2 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : D/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    7
;; This function calls:
;;		_RetKrkDelta
;;		___awdiv
;; This function is called by:
;;		_ModPmp2
;; This function uses a non-reentrant model
;;
psect	text216,class=CODE,space=0,reloc=2
global __ptext216
__ptext216:
psect	text216
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	300
	global	__size_of_RetDelta
	__size_of_RetDelta	equ	__end_of_RetDelta-_RetDelta
	
_RetDelta:
	opt	stack 20
;RetDelta@pco stored from wreg
	line	303
	movff	wreg,(RetDelta@pco)
	
l36002:; BSR set to: 0

;pompa.c: 301: unsigned char k;
;pompa.c: 303: k=RetKrkDelta(pco);
	movlb	2	; () banked
	movf	((RetDelta@pco))&0ffh,w
	
	call	_RetKrkDelta
	movlb	2	; () banked
	movwf	((RetDelta@k))&0ffh
	line	304
	
l36004:; BSR set to: 2

;pompa.c: 304: if(eco&&k) return (k*(eco))/10;
	movf	((c:RetDelta@eco)),c,w
	btfsc	status,2
	goto	u68111
	goto	u68110
u68111:
	goto	l36014
u68110:
	
l36006:; BSR set to: 2

	movf	((RetDelta@k))&0ffh,w
	btfsc	status,2
	goto	u68121
	goto	u68120
u68121:
	goto	l36014
u68120:
	
l36008:; BSR set to: 2

	movf	((RetDelta@k))&0ffh,w
	mulwf	((c:RetDelta@eco)),c
	movff	prodl,(?___awdiv)
	movff	prodh,(?___awdiv+1)
	movlw	high(0Ah)
	movlb	0	; () banked
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(0Ah)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	goto	l4264
	line	305
	
l36014:; BSR set to: 2

;pompa.c: 305: else return 0;
	movlw	(0)&0ffh
	line	306
	
l4264:
	return
	opt stack 0
GLOBAL	__end_of_RetDelta
	__end_of_RetDelta:
	signat	_RetDelta,8313
	global	_RetKrkDelta

;; *************** function _RetKrkDelta *****************
;; Defined at:
;;		line 283 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  pco             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  pco             1    6[BANK2 ] unsigned char 
;;  i               1   10[BANK2 ] unsigned char 
;;  d               1    9[BANK2 ] unsigned char 
;;  max             1    8[BANK2 ] unsigned char 
;;  min             1    7[BANK2 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : D/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        5 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_RetHI
;;		_RetLO
;;		_RetDelta4
;;		___wmul
;;		___awdiv
;; This function is called by:
;;		_RetDelta
;; This function uses a non-reentrant model
;;
psect	text217,class=CODE,space=0,reloc=2
global __ptext217
__ptext217:
psect	text217
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	283
	global	__size_of_RetKrkDelta
	__size_of_RetKrkDelta	equ	__end_of_RetKrkDelta-_RetKrkDelta
	
_RetKrkDelta:
	opt	stack 20
;RetKrkDelta@pco stored from wreg
	line	286
	movff	wreg,(RetKrkDelta@pco)
	
l35970:; BSR set to: 2

;pompa.c: 284: unsigned char i,d,min,max;
;pompa.c: 286: max=0;
	clrf	((RetKrkDelta@max))&0ffh
	line	287
	
l35972:; BSR set to: 2

;pompa.c: 287: min=100;
	movlw	low(064h)
	movwf	((RetKrkDelta@min))&0ffh
	line	288
;pompa.c: 288: for(i=1;i<10;i++)
	movlw	low(01h)
	movwf	((RetKrkDelta@i))&0ffh
	line	290
	
l35978:; BSR set to: 2

;pompa.c: 289: {
;pompa.c: 290: d=RetDelta4(pco,i,RetHI(pco,i,80),RetLO(pco,i,10));
	movff	(RetKrkDelta@i),(?_RetDelta4)
	movff	(RetKrkDelta@i),(c:?_RetHI)
	movlw	low(050h)
	movwf	(0+((c:?_RetHI)+01h)),c
	movf	((RetKrkDelta@pco))&0ffh,w
	
	call	_RetHI
	movlb	1	; () banked
	movwf	(0+(?_RetDelta4+01h))&0ffh
	movff	(RetKrkDelta@i),(c:?_RetLO)
	movlw	low(0Ah)
	movwf	(0+((c:?_RetLO)+01h)),c
	movlb	2	; () banked
	movf	((RetKrkDelta@pco))&0ffh,w
	
	call	_RetLO
	movlb	1	; () banked
	movwf	(0+(?_RetDelta4+02h))&0ffh
	movlb	2	; () banked
	movf	((RetKrkDelta@pco))&0ffh,w
	
	movlb	1	; () banked
	call	_RetDelta4
	movwf	((RetKrkDelta@d))&0ffh
	line	291
	
l35980:; BSR set to: 2

;pompa.c: 291: if(d>max) max=d;
	movf	((RetKrkDelta@d))&0ffh,w
	cpfslt	((RetKrkDelta@max))&0ffh
	goto	u68071
	goto	u68070
u68071:
	goto	l35984
u68070:
	
l35982:; BSR set to: 2

	movff	(RetKrkDelta@d),(RetKrkDelta@max)
	line	292
	
l35984:; BSR set to: 2

;pompa.c: 292: if(d<min) min=d;
	movf	((RetKrkDelta@min))&0ffh,w
	cpfslt	((RetKrkDelta@d))&0ffh
	goto	u68081
	goto	u68080
u68081:
	goto	l35988
u68080:
	
l35986:; BSR set to: 2

	movff	(RetKrkDelta@d),(RetKrkDelta@min)
	line	288
	
l35988:; BSR set to: 2

	incf	((RetKrkDelta@i))&0ffh
	
l35990:; BSR set to: 2

	movlw	(0Ah-1)
	cpfsgt	((RetKrkDelta@i))&0ffh
	goto	u68091
	goto	u68090
u68091:
	goto	l35978
u68090:
	line	294
	
l35992:; BSR set to: 2

;pompa.c: 293: }
;pompa.c: 294: if(max<=min) return 0;
	movf	((RetKrkDelta@max))&0ffh,w
	subwf	((RetKrkDelta@min))&0ffh,w
	btfss	status,0
	goto	u68101
	goto	u68100
u68101:
	goto	l35998
u68100:
	
l35994:; BSR set to: 2

	movlw	(0)&0ffh
	goto	l4260
	line	295
	
l35998:; BSR set to: 2

;pompa.c: 295: return ((max-min)*10)/9;
	movlw	high(0Ah)
	movwf	(1+((c:?___wmul)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___wmul)+02h)),c
	movf	((RetKrkDelta@min))&0ffh,w
	subwf	((RetKrkDelta@max))&0ffh,w
	
	movwf	((c:?___wmul)),c
	clrf	1+((c:?___wmul)),c
	btfss	status,0
	decf	1+((c:?___wmul)),c
	
	call	___wmul	;wreg free
	movff	0+?___wmul,(?___awdiv)
	movff	1+?___wmul,(?___awdiv+1)
	movlw	high(09h)
	movlb	0	; () banked
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(09h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	line	296
	
l4260:
	return
	opt stack 0
GLOBAL	__end_of_RetKrkDelta
	__end_of_RetKrkDelta:
	signat	_RetKrkDelta,4217
	global	_RetHI

;; *************** function _RetHI *****************
;; Defined at:
;;		line 212 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  pco             1    wreg     unsigned char 
;;  eco             1   35[COMRAM] unsigned char 
;;  max             1   36[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  pco             1    1[BANK2 ] unsigned char 
;;  emax            1    3[BANK2 ] unsigned char 
;;  w               1    2[BANK2 ] char 
;;  k               1    0[BANK2 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : D/0
;;		On exit  : C/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       5       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       11 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___awdiv
;; This function is called by:
;;		_RetKrkDelta
;;		_ModPmp2
;; This function uses a non-reentrant model
;;
psect	text218,class=CODE,space=0,reloc=2
global __ptext218
__ptext218:
psect	text218
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	212
	global	__size_of_RetHI
	__size_of_RetHI	equ	__end_of_RetHI-_RetHI
	
_RetHI:
	opt	stack 20
;RetHI@pco stored from wreg
	line	216
	movff	wreg,(RetHI@pco)
	
l35878:
;pompa.c: 213: signed char w;
;pompa.c: 214: unsigned char k,emax;
;pompa.c: 216: if(pco>max) emax=pco;
	movlb	2	; () banked
	movf	((RetHI@pco))&0ffh,w
	cpfslt	((c:RetHI@max)),c
	goto	u67981
	goto	u67980
u67981:
	goto	l4224
u67980:
	
l35880:; BSR set to: 2

	movff	(RetHI@pco),(RetHI@emax)
	goto	l35882
	line	217
	
l4224:; BSR set to: 2

;pompa.c: 217: else emax=max;
	movff	(c:RetHI@max),(RetHI@emax)
	line	219
	
l35882:; BSR set to: 2

;pompa.c: 219: k=(emax-DtIN.Eco5HI)/4;
	movlb	1	; () banked
	movf	(0+(_DtIN+0Bh))&0ffh,w
	movlb	2	; () banked
	subwf	((RetHI@emax))&0ffh,w
	movlb	0	; () banked
	
	movwf	((?___awdiv))&0ffh
	clrf	1+((?___awdiv))&0ffh
	btfss	status,0
	decf	1+((?___awdiv))&0ffh
	
	movlw	high(04h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(04h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	movwf	((RetHI@k))&0ffh
	line	220
	
l35884:; BSR set to: 2

;pompa.c: 220: w=(DtIN.Eco5HI+((5-eco)*k));
	movf	((c:RetHI@eco)),c,w
	sublw	low(05h)
	mulwf	((RetHI@k))&0ffh
	movf	(prodl),c,w
	movlb	1	; () banked
	addwf	(0+(_DtIN+0Bh))&0ffh,w
	movlb	2	; () banked
	movwf	((RetHI@w))&0ffh
	line	221
	
l35886:; BSR set to: 2

;pompa.c: 221: if(w<=emax&&w>=DtIN.Eco5LO) return w;
	movf	((RetHI@emax))&0ffh,w
	btfsc	((RetHI@w))&0ffh,7
	goto	u67990
	xorlw	0ffh
	addwf	((RetHI@w))&0ffh,w
	btfsc	status,0
	goto	u67991
	goto	u67990
u67991:
	goto	l35896
u67990:
	
l35888:; BSR set to: 2

	movlb	1	; () banked
	movf	(0+(_DtIN+0Ch))&0ffh,w
	movlb	0	; () banked
	movwf	(??_RetHI+0+0)&0ffh
	clrf	(??_RetHI+0+0+1)&0ffh

	movlb	2	; () banked
	movff	(RetHI@w),??_RetHI+2+0
	movlb	0	; () banked
	clrf	(??_RetHI+2+0+1)&0ffh
	btfsc	(??_RetHI+2+0)&0ffh,7
	decf	(??_RetHI+2+0+1)&0ffh
	movf	(??_RetHI+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_RetHI+4+0)&0ffh
	movf	(??_RetHI+0+0)&0ffh,w
	subwf	(??_RetHI+2+0)&0ffh,w
	movf	(??_RetHI+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_RetHI+4+0)&0ffh,w
	btfss	status,0
	goto	u68001
	goto	u68000
u68001:
	goto	l35896
u68000:
	
l35890:; BSR set to: 0

	movlb	2	; () banked
	movf	((RetHI@w))&0ffh,w
	goto	l4227
	line	223
	
l35896:
;pompa.c: 222: else
;pompa.c: 223: if(w>emax) return emax;
	movlb	2	; () banked
	movf	((RetHI@emax))&0ffh,w
	bsf	status,0
	bsf	status,2
	btfss	((RetHI@w))&0ffh,7
	subwf	((RetHI@w))&0ffh,w
	btfss	status,0
	bsf	status,2
	btfsc	status,2
	goto	u68011
	goto	u68010
u68011:
	goto	l35904
u68010:
	
l35898:; BSR set to: 2

	movf	((RetHI@emax))&0ffh,w
	goto	l4227
	line	224
	
l35904:; BSR set to: 2

;pompa.c: 224: else return DtIN.Eco5LO;
	movlb	1	; () banked
	movf	(0+(_DtIN+0Ch))&0ffh,w
	line	225
	
l4227:
	return
	opt stack 0
GLOBAL	__end_of_RetHI
	__end_of_RetHI:
	signat	_RetHI,12409
	global	_RetLO

;; *************** function _RetLO *****************
;; Defined at:
;;		line 230 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  pco             1    wreg     unsigned char 
;;  eco             1   35[COMRAM] unsigned char 
;;  min             1   36[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  pco             1    1[BANK2 ] unsigned char 
;;  ehi             1    3[BANK2 ] unsigned char 
;;  w               1    2[BANK2 ] char 
;;  k               1    0[BANK2 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : D/0
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       5       0       4       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       11 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		___awdiv
;; This function is called by:
;;		_RetKrkDelta
;;		_ModPmp2
;; This function uses a non-reentrant model
;;
psect	text219,class=CODE,space=0,reloc=2
global __ptext219
__ptext219:
psect	text219
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	230
	global	__size_of_RetLO
	__size_of_RetLO	equ	__end_of_RetLO-_RetLO
	
_RetLO:
	opt	stack 20
;RetLO@pco stored from wreg
	line	234
	movff	wreg,(RetLO@pco)
	
l35908:
;pompa.c: 231: signed char w;
;pompa.c: 232: unsigned char k,ehi;
;pompa.c: 234: if(pco<DtIN.Eco5HI) ehi=pco;
	movlb	1	; () banked
	movf	(0+(_DtIN+0Bh))&0ffh,w
	movlb	2	; () banked
	cpfslt	((RetLO@pco))&0ffh
	goto	u68021
	goto	u68020
u68021:
	goto	l4233
u68020:
	
l35910:; BSR set to: 2

	movff	(RetLO@pco),(RetLO@ehi)
	goto	l35912
	line	235
	
l4233:; BSR set to: 2

;pompa.c: 235: else ehi=DtIN.Eco5HI;
	movff	0+(_DtIN+0Bh),(RetLO@ehi)
	line	237
	
l35912:; BSR set to: 2

;pompa.c: 237: k=(ehi-DtIN.Eco5LO)/4;
	movlb	1	; () banked
	movf	(0+(_DtIN+0Ch))&0ffh,w
	movlb	2	; () banked
	subwf	((RetLO@ehi))&0ffh,w
	movlb	0	; () banked
	
	movwf	((?___awdiv))&0ffh
	clrf	1+((?___awdiv))&0ffh
	btfss	status,0
	decf	1+((?___awdiv))&0ffh
	
	movlw	high(04h)
	movwf	(1+(?___awdiv+02h))&0ffh
	movlw	low(04h)
	movwf	(0+(?___awdiv+02h))&0ffh
	call	___awdiv	;wreg free
	movf	(0+?___awdiv)&0ffh,w
	movlb	2	; () banked
	movwf	((RetLO@k))&0ffh
	line	238
	
l35914:; BSR set to: 2

;pompa.c: 238: w=(DtIN.Eco5LO+((5-eco)*k));
	movf	((c:RetLO@eco)),c,w
	sublw	low(05h)
	mulwf	((RetLO@k))&0ffh
	movf	(prodl),c,w
	movlb	1	; () banked
	addwf	(0+(_DtIN+0Ch))&0ffh,w
	movlb	2	; () banked
	movwf	((RetLO@w))&0ffh
	line	240
	
l35916:; BSR set to: 2

;pompa.c: 240: if(w<=ehi&&w>=min) return w;
	movf	((RetLO@ehi))&0ffh,w
	btfsc	((RetLO@w))&0ffh,7
	goto	u68030
	xorlw	0ffh
	addwf	((RetLO@w))&0ffh,w
	btfsc	status,0
	goto	u68031
	goto	u68030
u68031:
	goto	l35926
u68030:
	
l35918:; BSR set to: 2

	movf	((c:RetLO@min)),c,w
	movlb	0	; () banked
	movwf	(??_RetLO+0+0)&0ffh
	clrf	(??_RetLO+0+0+1)&0ffh

	movlb	2	; () banked
	movff	(RetLO@w),??_RetLO+2+0
	movlb	0	; () banked
	clrf	(??_RetLO+2+0+1)&0ffh
	btfsc	(??_RetLO+2+0)&0ffh,7
	decf	(??_RetLO+2+0+1)&0ffh
	movf	(??_RetLO+2+1)&0ffh,w
	xorlw	80h
	movwf	(??_RetLO+4+0)&0ffh
	movf	(??_RetLO+0+0)&0ffh,w
	subwf	(??_RetLO+2+0)&0ffh,w
	movf	(??_RetLO+0+1)&0ffh,w
	xorlw	80h
	subwfb	(??_RetLO+4+0)&0ffh,w
	btfss	status,0
	goto	u68041
	goto	u68040
u68041:
	goto	l35926
u68040:
	
l35920:; BSR set to: 0

	movlb	2	; () banked
	movf	((RetLO@w))&0ffh,w
	goto	l4236
	line	242
	
l35926:
;pompa.c: 241: else
;pompa.c: 242: if(w>ehi) return ehi;
	movlb	2	; () banked
	movf	((RetLO@ehi))&0ffh,w
	bsf	status,0
	bsf	status,2
	btfss	((RetLO@w))&0ffh,7
	subwf	((RetLO@w))&0ffh,w
	btfss	status,0
	bsf	status,2
	btfsc	status,2
	goto	u68051
	goto	u68050
u68051:
	goto	l35934
u68050:
	
l35928:; BSR set to: 2

	movf	((RetLO@ehi))&0ffh,w
	goto	l4236
	line	243
	
l35934:; BSR set to: 2

;pompa.c: 243: else return min;
	movf	((c:RetLO@min)),c,w
	line	244
	
l4236:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_RetLO
	__end_of_RetLO:
	signat	_RetLO,12409
	global	_RetDelta4

;; *************** function _RetDelta4 *****************
;; Defined at:
;;		line 270 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  pco             1    wreg     unsigned char 
;;  eco             1    0[BANK1 ] unsigned char 
;;  hi              1    1[BANK1 ] unsigned char 
;;  lo              1    2[BANK1 ] unsigned char 
;; Auto vars:     Size  Location     Type
;;  pco             1    4[BANK2 ] unsigned char 
;;  d               1    5[BANK2 ] char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       3       2       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        5 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_RetDelta1
;;		_RetDelta2
;;		_RetDelta3
;;		_RetMax
;;		_RetMin
;; This function is called by:
;;		_RetKrkDelta
;; This function uses a non-reentrant model
;;
psect	text220,class=CODE,space=0,reloc=2
global __ptext220
__ptext220:
psect	text220
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	270
	global	__size_of_RetDelta4
	__size_of_RetDelta4	equ	__end_of_RetDelta4-_RetDelta4
	
_RetDelta4:; BSR set to: 2

	opt	stack 20
;RetDelta4@pco stored from wreg
	line	273
	movff	wreg,(RetDelta4@pco)
	
l35952:; BSR set to: 2

;pompa.c: 271: signed char d;
;pompa.c: 273: DtIN.delta1=RetDelta1(pco,hi);
	movff	(RetDelta4@hi),(c:?_RetDelta1)
	movf	((RetDelta4@pco))&0ffh,w
	
	call	_RetDelta1
	movlb	1	; () banked
	movwf	(0+(_DtIN+0Fh))&0ffh
	line	274
	
l35954:; BSR set to: 1

;pompa.c: 274: DtIN.delta2=RetDelta2(eco,20);
	movlw	low(014h)
	movwf	((c:?_RetDelta2)),c
	movf	((RetDelta4@eco))&0ffh,w
	
	call	_RetDelta2
	movwf	(0+(_DtIN+010h))&0ffh
	line	275
	
l35956:; BSR set to: 1

;pompa.c: 275: DtIN.delta3=RetDelta3(pco,lo);
	movff	(RetDelta4@lo),(c:?_RetDelta3)
	movlb	2	; () banked
	movf	((RetDelta4@pco))&0ffh,w
	
	call	_RetDelta3
	movlb	1	; () banked
	movwf	(0+(_DtIN+011h))&0ffh
	line	276
	
l35958:; BSR set to: 1

;pompa.c: 276: d=RetMin(DtIN.delta3,RetMax(DtIN.delta1,DtIN.delta2));
	movff	0+(_DtIN+010h),(c:?_RetMax)
	movf	(0+(_DtIN+0Fh))&0ffh,w
	
	call	_RetMax
	movwf	((c:?_RetMin)),c
	movf	(0+(_DtIN+011h))&0ffh,w
	
	call	_RetMin
	movlb	2	; () banked
	movwf	((RetDelta4@d))&0ffh
	line	277
	
l35960:; BSR set to: 2

;pompa.c: 277: if(d>0) return d;
	movf	((RetDelta4@d))&0ffh,w
	xorlw	80h
	addlw	-((01h)^80h)
	btfss	status,0
	goto	u68061
	goto	u68060
u68061:
	goto	l35966
u68060:
	
l35962:; BSR set to: 2

	movf	((RetDelta4@d))&0ffh,w
	goto	l4252
	line	278
	
l35966:; BSR set to: 2

;pompa.c: 278: return 0;
	movlw	(0)&0ffh
	line	279
	
l4252:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_RetDelta4
	__end_of_RetDelta4:
	signat	_RetDelta4,16505
	global	_RetMin

;; *************** function _RetMin *****************
;; Defined at:
;;		line 197 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  a               1    wreg     char 
;;  b               1   32[COMRAM] char 
;; Auto vars:     Size  Location     Type
;;  a               1   34[COMRAM] char 
;; Return value:  Size  Location     Type
;;                  1    wreg      char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RetDelta4
;; This function uses a non-reentrant model
;;
psect	text221,class=CODE,space=0,reloc=2
global __ptext221
__ptext221:
psect	text221
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	197
	global	__size_of_RetMin
	__size_of_RetMin	equ	__end_of_RetMin-_RetMin
	
_RetMin:; BSR set to: 2

	opt	stack 20
;RetMin@a stored from wreg
	movff	wreg,(c:RetMin@a)
	line	198
	
l35858:; BSR set to: 1

;pompa.c: 198: if(a<=b) return a;
	movf	((c:RetMin@b)),c,w
	xorlw	80h
	movwf	(??_RetMin+0+0)&0ffh,c
	movf	((c:RetMin@a)),c,w
	xorlw	80h
	subwf	(??_RetMin+0+0),c,w
	btfss	status,0
	goto	u67961
	goto	u67960
u67961:
	goto	l35864
u67960:
	
l35860:; BSR set to: 1

	movf	((c:RetMin@a)),c,w
	goto	l4217
	line	199
	
l35864:; BSR set to: 1

;pompa.c: 199: return b;
	movf	((c:RetMin@b)),c,w
	line	200
	
l4217:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RetMin
	__end_of_RetMin:
	signat	_RetMin,8313
	global	_RetMax

;; *************** function _RetMax *****************
;; Defined at:
;;		line 204 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  a               1    wreg     char 
;;  b               1   29[COMRAM] char 
;; Auto vars:     Size  Location     Type
;;  a               1   31[COMRAM] char 
;; Return value:  Size  Location     Type
;;                  1    wreg      char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RetDelta4
;; This function uses a non-reentrant model
;;
psect	text222,class=CODE,space=0,reloc=2
global __ptext222
__ptext222:
psect	text222
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	204
	global	__size_of_RetMax
	__size_of_RetMax	equ	__end_of_RetMax-_RetMax
	
_RetMax:; BSR set to: 1

	opt	stack 20
;RetMax@a stored from wreg
	movff	wreg,(c:RetMax@a)
	line	205
	
l35868:; BSR set to: 1

;pompa.c: 205: if(a>=b) return a;
	movf	((c:RetMax@a)),c,w
	xorlw	80h
	movwf	(??_RetMax+0+0)&0ffh,c
	movf	((c:RetMax@b)),c,w
	xorlw	80h
	subwf	(??_RetMax+0+0),c,w
	btfss	status,0
	goto	u67971
	goto	u67970
u67971:
	goto	l35874
u67970:
	
l35870:; BSR set to: 1

	movf	((c:RetMax@a)),c,w
	goto	l4221
	line	206
	
l35874:; BSR set to: 1

;pompa.c: 206: return b;
	movf	((c:RetMax@b)),c,w
	line	207
	
l4221:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RetMax
	__end_of_RetMax:
	signat	_RetMax,8313
	global	_RetDelta1

;; *************** function _RetDelta1 *****************
;; Defined at:
;;		line 248 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  pco             1    wreg     unsigned char 
;;  hi              1   29[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  pco             1   30[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RetDelta4
;; This function uses a non-reentrant model
;;
psect	text223,class=CODE,space=0,reloc=2
global __ptext223
__ptext223:
psect	text223
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	248
	global	__size_of_RetDelta1
	__size_of_RetDelta1	equ	__end_of_RetDelta1-_RetDelta1
	
_RetDelta1:; BSR set to: 1

	opt	stack 20
;RetDelta1@pco stored from wreg
	movff	wreg,(c:RetDelta1@pco)
	line	249
	
l35938:; BSR set to: 2

;pompa.c: 249: return (pco-hi);
	movf	((c:RetDelta1@hi)),c,w
	subwf	((c:RetDelta1@pco)),c,w
	line	250
	
l4242:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_RetDelta1
	__end_of_RetDelta1:
	signat	_RetDelta1,8313
	global	_RetDelta2

;; *************** function _RetDelta2 *****************
;; Defined at:
;;		line 255 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  eco             1    wreg     unsigned char 
;;  ddlt            1   29[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  eco             1   30[COMRAM] unsigned char 
;;  kD              1   31[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      char 
;; Registers used:
;;		wreg, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        3 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RetDelta4
;; This function uses a non-reentrant model
;;
psect	text224,class=CODE,space=0,reloc=2
global __ptext224
__ptext224:
psect	text224
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	255
	global	__size_of_RetDelta2
	__size_of_RetDelta2	equ	__end_of_RetDelta2-_RetDelta2
	
_RetDelta2:; BSR set to: 2

	opt	stack 20
;RetDelta2@eco stored from wreg
	line	258
	movff	wreg,(c:RetDelta2@eco)
	
l35942:; BSR set to: 1

;pompa.c: 256: unsigned char kD;
;pompa.c: 258: kD=ddlt/4;
	rrncf	((c:RetDelta2@ddlt)),c,w
	rrncf	wreg
	andlw	(0ffh shr 2) & 0ffh
	movwf	((c:RetDelta2@kD)),c
	line	259
	
l35944:; BSR set to: 1

;pompa.c: 259: return (ddlt+(kD*(eco-5)));
	movf	((c:RetDelta2@eco)),c,w
	addlw	low(-5)
	mulwf	((c:RetDelta2@kD)),c
	movf	(prodl),c,w
	addwf	((c:RetDelta2@ddlt)),c,w
	line	260
	
l4245:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RetDelta2
	__end_of_RetDelta2:
	signat	_RetDelta2,8313
	global	_RetDelta3

;; *************** function _RetDelta3 *****************
;; Defined at:
;;		line 264 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
;; Parameters:    Size  Location     Type
;;  pco             1    wreg     unsigned char 
;;  lo              1   29[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  pco             1   30[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RetDelta4
;; This function uses a non-reentrant model
;;
psect	text225,class=CODE,space=0,reloc=2
global __ptext225
__ptext225:
psect	text225
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
	line	264
	global	__size_of_RetDelta3
	__size_of_RetDelta3	equ	__end_of_RetDelta3-_RetDelta3
	
_RetDelta3:; BSR set to: 1

	opt	stack 20
;RetDelta3@pco stored from wreg
	movff	wreg,(c:RetDelta3@pco)
	line	265
	
l35948:; BSR set to: 2

;pompa.c: 265: return (pco-lo);
	movf	((c:RetDelta3@lo)),c,w
	subwf	((c:RetDelta3@pco)),c,w
	line	266
	
l4248:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_RetDelta3
	__end_of_RetDelta3:
	signat	_RetDelta3,8313
	global	_PresKeyEX

;; *************** function _PresKeyEX *****************
;; Defined at:
;;		line 130 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;;  ky              2   31[COMRAM] PTR struct .
;;		 -> ky(35), 
;; Auto vars:     Size  Location     Type
;;  k               1   36[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartKeyTim
;;		_KeyTim
;; This function is called by:
;;		_TrybPracy
;; This function uses a non-reentrant model
;;
psect	text226,class=CODE,space=0,reloc=2
global __ptext226
__ptext226:
psect	text226
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
	line	130
	global	__size_of_PresKeyEX
	__size_of_PresKeyEX	equ	__end_of_PresKeyEX-_PresKeyEX
	
_PresKeyEX:; BSR set to: 2

	opt	stack 24
;PresKeyEX@k stored from wreg
	line	132
	movff	wreg,(c:PresKeyEX@k)
	
l41298:; BSR set to: 0

;keypad.c: 132: (*ky).bk=(k)?1:0;
	movlw	(0)&0ffh
	clrf	prodl
	cpfseq	((c:PresKeyEX@k)),c
	incf	prodl
	movff	prodl,??_PresKeyEX+0+0
	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movf	(indf2),c,w
	xorwf	(??_PresKeyEX+0+0),c,w
	andlw	not ((1<<1)-1)
	xorwf	(??_PresKeyEX+0+0),c,w
	movwf	(indf2),c
	line	133
;keypad.c: 133: switch ((*ky).krk)
	goto	l41372
	line	138
	
l41300:; BSR set to: 0

;keypad.c: 137: {
;keypad.c: 138: if(!(*ky).sbk&&(*ky).bk)
	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	
	btfsc	((??_PresKeyEX+0+0)),c,1
	goto	u82091
	goto	u82090
u82091:
	goto	l41310
u82090:
	
l41302:; BSR set to: 0

	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	
	btfss	((??_PresKeyEX+0+0)),c,0
	goto	u82101
	goto	u82100
u82101:
	goto	l41310
u82100:
	line	140
	
l41304:; BSR set to: 0

;keypad.c: 139: {
;keypad.c: 140: (*ky).sbk=1;
	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movlw	(01h & ((1<<1)-1))<<1
	iorwf	(indf2),c
	line	141
	
l41306:; BSR set to: 0

;keypad.c: 141: StartKeyTim(ky);
	movff	(c:PresKeyEX@ky),(c:?_StartKeyTim)
	movff	(c:PresKeyEX@ky+1),(c:?_StartKeyTim+1)
	call	_StartKeyTim	;wreg free
	line	142
	
l41308:; BSR set to: 0

;keypad.c: 142: (*ky).krk=1;
	lfsr	2,03h
	movf	((c:PresKeyEX@ky)),c,w
	addwf	fsr2l
	movf	((c:PresKeyEX@ky+1)),c,w
	addwfc	fsr2h
	movlw	low(01h)
	movwf	indf2
	line	143
;keypad.c: 143: }
	goto	l41312
	line	144
	
l41310:; BSR set to: 0

;keypad.c: 144: else (*ky).sbk=((*ky).bk)?1:0;
	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	
	btfsc	((??_PresKeyEX+0+0)),c,0
	goto	u82111
	goto	u82110
u82111:
	movlw	1
	goto	u82116
u82110:
	movlw	0
u82116:
	movwf	(??_PresKeyEX+1+0)&0ffh,c
	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	rlncf	((??_PresKeyEX+1+0)),c
	movf	(indf2),c,w
	xorwf	((??_PresKeyEX+1+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_PresKeyEX+1+0)),c,w
	movwf	(indf2),c
	line	145
	
l41312:; BSR set to: 0

;keypad.c: 145: return 0;
	movlw	(0)&0ffh
	goto	l4650
	line	150
	
l41316:; BSR set to: 0

;keypad.c: 149: {
;keypad.c: 150: (*ky).val=KeyTim(ky)+1;
	movff	(c:PresKeyEX@ky),(c:?_KeyTim)
	movff	(c:PresKeyEX@ky+1),(c:?_KeyTim+1)
	call	_KeyTim	;wreg free
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	movlw	01h
	addwf	((??_PresKeyEX+0+0)),c
	lfsr	2,04h
	movf	((c:PresKeyEX@ky)),c,w
	addwf	fsr2l
	movf	((c:PresKeyEX@ky+1)),c,w
	addwfc	fsr2h
	movff	(??_PresKeyEX+0+0),indf2

	line	151
	
l41318:; BSR set to: 0

;keypad.c: 151: if((*ky).val>99) (*ky).val=99;
	lfsr	2,04h
	movf	((c:PresKeyEX@ky)),c,w
	addwf	fsr2l
	movf	((c:PresKeyEX@ky+1)),c,w
	addwfc	fsr2h
	movlw	(064h-1)
	cpfsgt	indf2
	goto	u82121
	goto	u82120
u82121:
	goto	l4652
u82120:
	
l41320:; BSR set to: 0

	lfsr	2,04h
	movf	((c:PresKeyEX@ky)),c,w
	addwf	fsr2l
	movf	((c:PresKeyEX@ky+1)),c,w
	addwfc	fsr2h
	movlw	low(063h)
	movwf	indf2
	
l4652:; BSR set to: 0

	line	152
;keypad.c: 152: if((*ky).sbk&&!(*ky).bk)
	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	
	btfss	((??_PresKeyEX+0+0)),c,1
	goto	u82131
	goto	u82130
u82131:
	goto	l41334
u82130:
	
l41322:; BSR set to: 0

	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	
	btfsc	((??_PresKeyEX+0+0)),c,0
	goto	u82141
	goto	u82140
u82141:
	goto	l41334
u82140:
	line	154
	
l41324:; BSR set to: 0

;keypad.c: 153: {
;keypad.c: 154: (*ky).sbk=0;
	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movlw	((0 & ((1<<1)-1))<<1)|not (((1<<1)-1)<<1)
	andwf	(indf2),c
	line	155
	
l41326:; BSR set to: 0

;keypad.c: 155: if(((*ky).val-1)<8)
	lfsr	2,04h
	movf	((c:PresKeyEX@ky)),c,w
	addwf	fsr2l
	movf	((c:PresKeyEX@ky+1)),c,w
	addwfc	fsr2h
	movf	indf2,w
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	movlw	low(-1)
	addwf	((??_PresKeyEX+0+0)),c,w
	movwf	(??_PresKeyEX+1+0)&0ffh,c
	clrf	1+(??_PresKeyEX+1+0)&0ffh,c
	movlw	high(-1)
	addwfc	1+(??_PresKeyEX+1+0)&0ffh,c
	movf	(??_PresKeyEX+1+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	08h
	btfsc	status,2
	subwf	(??_PresKeyEX+1+0),c,w
	btfsc	status,0
	goto	u82151
	goto	u82150
u82151:
	goto	l41330
u82150:
	line	157
	
l41328:; BSR set to: 0

;keypad.c: 156: {
;keypad.c: 157: (*ky).val=100;
	lfsr	2,04h
	movf	((c:PresKeyEX@ky)),c,w
	addwf	fsr2l
	movf	((c:PresKeyEX@ky+1)),c,w
	addwfc	fsr2h
	movlw	low(064h)
	movwf	indf2
	line	159
	
l41330:; BSR set to: 0

;keypad.c: 158: }
;keypad.c: 159: StartKeyTim(ky);
	movff	(c:PresKeyEX@ky),(c:?_StartKeyTim)
	movff	(c:PresKeyEX@ky+1),(c:?_StartKeyTim+1)
	call	_StartKeyTim	;wreg free
	line	160
	
l41332:; BSR set to: 0

;keypad.c: 160: (*ky).krk=2;
	lfsr	2,03h
	movf	((c:PresKeyEX@ky)),c,w
	addwf	fsr2l
	movf	((c:PresKeyEX@ky+1)),c,w
	addwfc	fsr2h
	movlw	low(02h)
	movwf	indf2
	line	161
	
l41334:; BSR set to: 0

;keypad.c: 161: return (*ky).val;
	lfsr	2,04h
	movf	((c:PresKeyEX@ky)),c,w
	addwf	fsr2l
	movf	((c:PresKeyEX@ky+1)),c,w
	addwfc	fsr2h
	movf	indf2,w
	goto	l4650
	line	168
	
l41342:; BSR set to: 0

;keypad.c: 167: {
;keypad.c: 168: if((KeyTim(ky)>1&&!(*ky).sbk&&(*ky).bk)||KeyTim(ky)>=10)
	movff	(c:PresKeyEX@ky),(c:?_KeyTim)
	movff	(c:PresKeyEX@ky+1),(c:?_KeyTim+1)
	call	_KeyTim	;wreg free
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	movlw	(02h)&0ffh
	subwf	((??_PresKeyEX+0+0)),c,w
	btfss	status,0
	goto	u82161
	goto	u82160
u82161:
	goto	l41348
u82160:
	
l41344:; BSR set to: 0

	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	
	btfsc	((??_PresKeyEX+0+0)),c,1
	goto	u82171
	goto	u82170
u82171:
	goto	l41348
u82170:
	
l41346:; BSR set to: 0

	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	
	btfsc	((??_PresKeyEX+0+0)),c,0
	goto	u82181
	goto	u82180
u82181:
	goto	l41350
u82180:
	
l41348:; BSR set to: 0

	movff	(c:PresKeyEX@ky),(c:?_KeyTim)
	movff	(c:PresKeyEX@ky+1),(c:?_KeyTim+1)
	call	_KeyTim	;wreg free
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	movlw	(0Ah)&0ffh
	subwf	((??_PresKeyEX+0+0)),c,w
	btfss	status,0
	goto	u82191
	goto	u82190
u82191:
	goto	l41334
u82190:
	line	170
	
l41350:; BSR set to: 0

;keypad.c: 169: {
;keypad.c: 170: (*ky).krk=0;
	lfsr	2,03h
	movf	((c:PresKeyEX@ky)),c,w
	addwf	fsr2l
	movf	((c:PresKeyEX@ky+1)),c,w
	addwfc	fsr2h
	movlw	low(0)
	movwf	indf2
	goto	l41312
	line	177
	
l41360:; BSR set to: 0

;keypad.c: 176: {
;keypad.c: 177: if(!(*ky).bk)
	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_PresKeyEX+0+0)&0ffh,c
	
	btfsc	((??_PresKeyEX+0+0)),c,0
	goto	u82201
	goto	u82200
u82201:
	goto	l41312
u82200:
	line	179
	
l41362:; BSR set to: 0

;keypad.c: 178: {
;keypad.c: 179: (*ky).sbk=0;
	movff	(c:PresKeyEX@ky),fsr2l
	movff	(c:PresKeyEX@ky+1),fsr2h
	movlw	((0 & ((1<<1)-1))<<1)|not (((1<<1)-1)<<1)
	andwf	(indf2),c
	goto	l41350
	line	133
	
l41372:; BSR set to: 0

	lfsr	2,03h
	movf	((c:PresKeyEX@ky)),c,w
	addwf	fsr2l
	movf	((c:PresKeyEX@ky+1)),c,w
	addwfc	fsr2h
	movf	indf2,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	l41300
	xorlw	1^0	; case 1
	skipnz
	goto	l41316
	xorlw	2^1	; case 2
	skipnz
	goto	l41342
	xorlw	3^2	; case 3
	skipnz
	goto	l41360
	goto	l41312

	line	186
	
l4650:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_PresKeyEX
	__end_of_PresKeyEX:
	signat	_PresKeyEX,8313
	global	_ResBufKeyEx

;; *************** function _ResBufKeyEx *****************
;; Defined at:
;;		line 189 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
;; Parameters:    Size  Location     Type
;;  ky              2   29[COMRAM] PTR struct .
;;		 -> ky(35), 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_TrybPracy
;; This function uses a non-reentrant model
;;
psect	text227,class=CODE,space=0,reloc=2
global __ptext227
__ptext227:
psect	text227
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
	line	189
	global	__size_of_ResBufKeyEx
	__size_of_ResBufKeyEx	equ	__end_of_ResBufKeyEx-_ResBufKeyEx
	
_ResBufKeyEx:; BSR set to: 0

	opt	stack 25
	line	190
	
l36258:; BSR set to: 2

;keypad.c: 190: (*ky).sbk=0;
	movff	(c:ResBufKeyEx@ky),fsr2l
	movff	(c:ResBufKeyEx@ky+1),fsr2h
	movlw	((0 & ((1<<1)-1))<<1)|not (((1<<1)-1)<<1)
	andwf	(indf2),c
	line	191
	
l36260:; BSR set to: 2

;keypad.c: 191: (*ky).krk=0;
	lfsr	2,03h
	movf	((c:ResBufKeyEx@ky)),c,w
	addwf	fsr2l
	movf	((c:ResBufKeyEx@ky+1)),c,w
	addwfc	fsr2h
	movlw	low(0)
	movwf	indf2
	line	192
	
l36262:; BSR set to: 2

;keypad.c: 192: (*ky).val=0;
	lfsr	2,04h
	movf	((c:ResBufKeyEx@ky)),c,w
	addwf	fsr2l
	movf	((c:ResBufKeyEx@ky+1)),c,w
	addwfc	fsr2h
	movlw	low(0)
	movwf	indf2
	line	193
	
l4666:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_ResBufKeyEx
	__end_of_ResBufKeyEx:
	signat	_ResBufKeyEx,4216
	global	_WaitToLowEx

;; *************** function _WaitToLowEx *****************
;; Defined at:
;;		line 196 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
;; Parameters:    Size  Location     Type
;;  ky              2   29[COMRAM] PTR struct .
;;		 -> ky(35), 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_TrybPracy
;; This function uses a non-reentrant model
;;
psect	text228,class=CODE,space=0,reloc=2
global __ptext228
__ptext228:
psect	text228
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
	line	196
	global	__size_of_WaitToLowEx
	__size_of_WaitToLowEx	equ	__end_of_WaitToLowEx-_WaitToLowEx
	
_WaitToLowEx:; BSR set to: 2

	opt	stack 25
	line	197
	
l36264:; BSR set to: 2

;keypad.c: 197: (*ky).krk=3;
	lfsr	2,03h
	movf	((c:WaitToLowEx@ky)),c,w
	addwf	fsr2l
	movf	((c:WaitToLowEx@ky+1)),c,w
	addwfc	fsr2h
	movlw	low(03h)
	movwf	indf2
	line	198
;keypad.c: 198: (*ky).val=0;
	lfsr	2,04h
	movf	((c:WaitToLowEx@ky)),c,w
	addwf	fsr2l
	movf	((c:WaitToLowEx@ky+1)),c,w
	addwfc	fsr2h
	movlw	low(0)
	movwf	indf2
	line	199
	
l4669:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_WaitToLowEx
	__end_of_WaitToLowEx:
	signat	_WaitToLowEx,4216
	global	_ReadDataXONLID

;; *************** function _ReadDataXONLID *****************
;; Defined at:
;;		line 349 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\readdtal.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;;  ky              2    0[BANK2 ] PTR struct .
;;		 -> xxky(35), 
;;  dt              2    2[BANK2 ] PTR unsigned int 
;;		 -> PFN(35), 
;;  ovf             2    4[BANK2 ] PTR unsigned char 
;;		 -> ReadParam@ovd(1), ReadParam@ovi(1), 
;;  tid             1    6[BANK2 ] unsigned char 
;;  min             2    7[BANK2 ] unsigned int 
;;  max             2    9[BANK2 ] unsigned int 
;;  step            1   11[BANK2 ] const unsigned char 
;;  step2           1   12[BANK2 ] const unsigned char 
;;  fst             1   13[BANK2 ] const unsigned char 
;; Auto vars:     Size  Location     Type
;;  k               1    4[BANK0 ] unsigned char 
;;  key             1    5[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : C/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0      14       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       6       0      14       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       20 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    6
;; This function calls:
;;		_ExxPresKey
;;		___lbdiv
;;		___lwmod
;; This function is called by:
;;		_ReadParam
;; This function uses a non-reentrant model
;;
psect	text229,class=CODE,space=0,reloc=2
global __ptext229
__ptext229:
psect	text229
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\readdtal.c"
	line	349
	global	__size_of_ReadDataXONLID
	__size_of_ReadDataXONLID	equ	__end_of_ReadDataXONLID-_ReadDataXONLID
	
_ReadDataXONLID:; BSR set to: 2

	opt	stack 21
;ReadDataXONLID@k stored from wreg
	line	354
	movff	wreg,(ReadDataXONLID@k)
	line	352
	
l41448:; BSR set to: 0

	line	354
;readdtal.c: 354: if(!dtmo)
	movlb	(ReadDataXONLID@dtmo/8) >> 8
	btfsc	(ReadDataXONLID@dtmo/8),c,(ReadDataXONLID@dtmo)&7
	goto	u82401
	goto	u82400
u82401:
	goto	l41452
u82400:
	line	356
	
l41450:
;readdtal.c: 355: {
;readdtal.c: 356: dtmo=1;
	movlb	(ReadDataXONLID@dtmo/8) >> 8
	bsf	(ReadDataXONLID@dtmo/8),c,(ReadDataXONLID@dtmo)&7
	line	357
;readdtal.c: 357: ktu=0;
	movlb	1	; () banked
	clrf	((ReadDataXONLID@ktu))&0ffh
	line	358
;readdtal.c: 358: iu=0;
	clrf	((ReadDataXONLID@iu))&0ffh
	line	359
;readdtal.c: 359: es2=0;
	clrf	((ReadDataXONLID@es2))&0ffh
	line	360
;readdtal.c: 360: pp=step;
	movff	(ReadDataXONLID@step),(c:ReadDataXONLID@pp)
	line	363
	
l41452:
;readdtal.c: 361: }
;readdtal.c: 363: if(key=ExxPresKey(k,ky,5,ktu))
	movff	(ReadDataXONLID@ky),(c:?_ExxPresKey)
	movff	(ReadDataXONLID@ky+1),(c:?_ExxPresKey+1)
	movlw	low(05h)
	movwf	(0+((c:?_ExxPresKey)+02h)),c
	movff	(ReadDataXONLID@ktu),0+((c:?_ExxPresKey)+03h)
	movlb	0	; () banked
	movf	((ReadDataXONLID@k))&0ffh,w
	
	call	_ExxPresKey
	movwf	((ReadDataXONLID@key))&0ffh
	movlb	0	; () banked
	movf	((ReadDataXONLID@key))&0ffh,w
	btfsc	status,2
	goto	u82411
	goto	u82410
u82411:
	goto	l4699
u82410:
	line	365
	
l41454:; BSR set to: 0

;readdtal.c: 364: {
;readdtal.c: 365: if(key==1||((key==2)&&!fst))
	decf	((ReadDataXONLID@key))&0ffh,w

	btfsc	status,2
	goto	u82421
	goto	u82420
u82421:
	goto	l4702
u82420:
	
l41456:; BSR set to: 0

	movf	((ReadDataXONLID@key))&0ffh,w
	xorlw	2

	btfss	status,2
	goto	u82431
	goto	u82430
u82431:
	goto	l41496
u82430:
	
l41458:; BSR set to: 0

	movlb	2	; () banked
	tstfsz	((ReadDataXONLID@fst))&0ffh
	goto	u82441
	goto	u82440
u82441:
	goto	l41496
u82440:
	
l4702:
	line	367
;readdtal.c: 366: {
;readdtal.c: 367: iu=0;
	movlb	1	; () banked
	clrf	((ReadDataXONLID@iu))&0ffh
	line	368
	
l41460:; BSR set to: 1

;readdtal.c: 368: ktu=5;
	movlw	low(05h)
	movwf	((ReadDataXONLID@ktu))&0ffh
	line	369
	
l41462:; BSR set to: 1

;readdtal.c: 369: es2=0;
	clrf	((ReadDataXONLID@es2))&0ffh
	line	370
	
l41464:; BSR set to: 1

;readdtal.c: 370: pp=step;
	movff	(ReadDataXONLID@step),(c:ReadDataXONLID@pp)
	line	371
	
l41466:; BSR set to: 1

;readdtal.c: 371: if(!tid)
	movlb	2	; () banked
	tstfsz	((ReadDataXONLID@tid))&0ffh
	goto	u82451
	goto	u82450
u82451:
	goto	l41484
u82450:
	line	373
	
l41468:; BSR set to: 2

;readdtal.c: 372: {
;readdtal.c: 373: if(!*dt||((*dt-pp)<min)) *ovf=1;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movf	postinc2,w
	iorwf	postdec2,w
	btfsc	status,2
	goto	u82461
	goto	u82460
u82461:
	goto	l41472
u82460:
	
l41470:; BSR set to: 2

	movf	((c:ReadDataXONLID@pp)),c,w
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movlb	0	; () banked
	subwf	(??_ReadDataXONLID+0+0)&0ffh
	movlw	0
	subwfb	(??_ReadDataXONLID+0+1)&0ffh
	movlb	2	; () banked
	movf	((ReadDataXONLID@min))&0ffh,w
	movlb	0	; () banked
	subwf	(??_ReadDataXONLID+0+0)&0ffh,w
	movlb	2	; () banked
	movf	((ReadDataXONLID@min+1))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ReadDataXONLID+0+1)&0ffh,w
	btfsc	status,0
	goto	u82471
	goto	u82470
u82471:
	goto	l41474
u82470:
	
l41472:
	movff	(ReadDataXONLID@ovf),fsr2l
	movff	(ReadDataXONLID@ovf+1),fsr2h
	movlw	low(01h)
	movwf	indf2
	goto	l41476
	line	374
	
l41474:; BSR set to: 0

;readdtal.c: 374: else *ovf=0;
	movff	(ReadDataXONLID@ovf),fsr2l
	movff	(ReadDataXONLID@ovf+1),fsr2h
	movlw	low(0)
	movwf	indf2
	line	375
	
l41476:
;readdtal.c: 375: if(*dt&&((*dt-pp)>min)) *dt=*dt-pp;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movf	postinc2,w
	iorwf	postdec2,w
	btfsc	status,2
	goto	u82481
	goto	u82480
u82481:
	goto	l41482
u82480:
	
l41478:
	movf	((c:ReadDataXONLID@pp)),c,w
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movlb	0	; () banked
	subwf	(??_ReadDataXONLID+0+0)&0ffh
	movlw	0
	subwfb	(??_ReadDataXONLID+0+1)&0ffh
	movf	(??_ReadDataXONLID+0+0)&0ffh,w
	movlb	2	; () banked
	subwf	((ReadDataXONLID@min))&0ffh,w
	movlb	0	; () banked
	movf	(??_ReadDataXONLID+0+1)&0ffh,w
	movlb	2	; () banked
	subwfb	((ReadDataXONLID@min+1))&0ffh,w
	btfsc	status,0
	goto	u82491
	goto	u82490
u82491:
	goto	l41482
u82490:
	
l41480:; BSR set to: 2

	movf	((c:ReadDataXONLID@pp)),c,w
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movlb	0	; () banked
	subwf	(??_ReadDataXONLID+0+0)&0ffh
	movlw	0
	subwfb	(??_ReadDataXONLID+0+1)&0ffh
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	??_ReadDataXONLID+0+0,postinc2
	movff	??_ReadDataXONLID+0+1,postdec2

	goto	l41496
	line	376
	
l41482:
;readdtal.c: 376: else *dt=min;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movlb	2	; () banked
	movff	(ReadDataXONLID@min),postinc2
	movff	(ReadDataXONLID@min+1),postdec2
	goto	l41496
	line	380
	
l41484:; BSR set to: 2

;readdtal.c: 378: else
;readdtal.c: 379: {
;readdtal.c: 380: if((*dt+pp)>max) *ovf=1;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movf	((c:ReadDataXONLID@pp)),c,w
	movlb	0	; () banked
	addwf	(??_ReadDataXONLID+0+0)&0ffh,w
	movwf	(??_ReadDataXONLID+2+0)&0ffh
	movlw	0
	addwfc	(??_ReadDataXONLID+0+1)&0ffh,w
	movwf	1+(??_ReadDataXONLID+2+0)&0ffh
	movf	(??_ReadDataXONLID+2+0)&0ffh,w
	movlb	2	; () banked
	subwf	((ReadDataXONLID@max))&0ffh,w
	movlb	0	; () banked
	movf	(??_ReadDataXONLID+2+1)&0ffh,w
	movlb	2	; () banked
	subwfb	((ReadDataXONLID@max+1))&0ffh,w
	btfsc	status,0
	goto	u82501
	goto	u82500
u82501:
	goto	l41488
u82500:
	
l41486:; BSR set to: 2

	movff	(ReadDataXONLID@ovf),fsr2l
	movff	(ReadDataXONLID@ovf+1),fsr2h
	movlw	low(01h)
	movwf	indf2
	goto	l41490
	line	381
	
l41488:; BSR set to: 2

;readdtal.c: 381: else *ovf=0;
	movff	(ReadDataXONLID@ovf),fsr2l
	movff	(ReadDataXONLID@ovf+1),fsr2h
	movlw	low(0)
	movwf	indf2
	line	382
	
l41490:; BSR set to: 2

;readdtal.c: 382: if(*dt+pp<=max) *dt=*dt+pp;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movf	((c:ReadDataXONLID@pp)),c,w
	movlb	0	; () banked
	addwf	(??_ReadDataXONLID+0+0)&0ffh,w
	movwf	(??_ReadDataXONLID+2+0)&0ffh
	movlw	0
	addwfc	(??_ReadDataXONLID+0+1)&0ffh,w
	movwf	1+(??_ReadDataXONLID+2+0)&0ffh
	movf	(??_ReadDataXONLID+2+0)&0ffh,w
	movlb	2	; () banked
	subwf	((ReadDataXONLID@max))&0ffh,w
	movlb	0	; () banked
	movf	(??_ReadDataXONLID+2+1)&0ffh,w
	movlb	2	; () banked
	subwfb	((ReadDataXONLID@max+1))&0ffh,w
	btfss	status,0
	goto	u82511
	goto	u82510
u82511:
	goto	l41494
u82510:
	
l41492:; BSR set to: 2

	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movf	((c:ReadDataXONLID@pp)),c,w
	movlb	0	; () banked
	addwf	(??_ReadDataXONLID+0+0)&0ffh,w
	movwf	(??_ReadDataXONLID+2+0)&0ffh
	movlw	0
	addwfc	(??_ReadDataXONLID+0+1)&0ffh,w
	movwf	1+(??_ReadDataXONLID+2+0)&0ffh
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	??_ReadDataXONLID+2+0,postinc2
	movff	??_ReadDataXONLID+2+1,postdec2

	goto	l41496
	line	383
	
l41494:; BSR set to: 2

;readdtal.c: 383: else *dt=max;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	(ReadDataXONLID@max),postinc2
	movff	(ReadDataXONLID@max+1),postdec2
	line	386
	
l41496:
;readdtal.c: 384: }
;readdtal.c: 385: }
;readdtal.c: 386: if(key==2&&fst)
	movlb	0	; () banked
	movf	((ReadDataXONLID@key))&0ffh,w
	xorlw	2

	btfss	status,2
	goto	u82521
	goto	u82520
u82521:
	goto	l41546
u82520:
	
l41498:; BSR set to: 0

	movlb	2	; () banked
	movf	((ReadDataXONLID@fst))&0ffh,w
	btfsc	status,2
	goto	u82531
	goto	u82530
u82531:
	goto	l41546
u82530:
	line	388
	
l41500:; BSR set to: 2

;readdtal.c: 387: {
;readdtal.c: 388: if (iu<=(5-1)*3) iu++;
	movlw	(0Dh)&0ffh
	movlb	1	; () banked
	cpfslt	((ReadDataXONLID@iu))&0ffh
	goto	u82541
	goto	u82540
u82541:
	goto	l41504
u82540:
	
l41502:; BSR set to: 1

	incf	((ReadDataXONLID@iu))&0ffh
	line	389
	
l41504:; BSR set to: 1

;readdtal.c: 389: ktu=5-iu/3;
	movlw	low(03h)
	movwf	((c:?___lbdiv)),c
	movf	((ReadDataXONLID@iu))&0ffh,w
	
	call	___lbdiv
	movlb	0	; () banked
	movwf	(??_ReadDataXONLID+0+0)&0ffh
	movf	((??_ReadDataXONLID+0+0))&0ffh,w
	sublw	low(05h)
	movlb	1	; () banked
	movwf	((ReadDataXONLID@ktu))&0ffh
	line	390
	
l41506:; BSR set to: 1

;readdtal.c: 390: if (iu>(5-1)*3)
	movlw	(0Dh-1)
	cpfsgt	((ReadDataXONLID@iu))&0ffh
	goto	u82551
	goto	u82550
u82551:
	goto	l4717
u82550:
	line	392
	
l41508:; BSR set to: 1

;readdtal.c: 391: {
;readdtal.c: 392: if(es2)
	movf	((ReadDataXONLID@es2))&0ffh,w
	btfsc	status,2
	goto	u82561
	goto	u82560
u82561:
	goto	l4718
u82560:
	line	394
	
l41510:; BSR set to: 1

;readdtal.c: 393: {
;readdtal.c: 394: if(pp<step2) pp++;
	movlb	2	; () banked
	movf	((ReadDataXONLID@step2))&0ffh,w
	cpfslt	((c:ReadDataXONLID@pp)),c
	goto	u82571
	goto	u82570
u82571:
	goto	l41514
u82570:
	
l41512:; BSR set to: 2

	incf	((c:ReadDataXONLID@pp)),c
	goto	l41514
	line	396
	
l4718:; BSR set to: 1

;readdtal.c: 396: else pp=step;
	movff	(ReadDataXONLID@step),(c:ReadDataXONLID@pp)
	line	397
	
l41514:
;readdtal.c: 397: if((*dt%10)==0) es2=1;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,(c:?___lwmod)
	movff	postdec2,(c:?___lwmod+1)
	movlw	high(0Ah)
	movwf	(1+((c:?___lwmod)+02h)),c
	movlw	low(0Ah)
	movwf	(0+((c:?___lwmod)+02h)),c
	call	___lwmod	;wreg free
	movf	(1+?___lwmod),c,w
	iorwf (0+?___lwmod),c,w

	btfss	status,2
	goto	u82581
	goto	u82580
u82581:
	goto	l4722
u82580:
	
l41516:
	movlw	low(01h)
	movlb	1	; () banked
	movwf	((ReadDataXONLID@es2))&0ffh
	goto	l4722
	line	399
	
l4717:; BSR set to: 1

	line	401
;readdtal.c: 399: else
;readdtal.c: 400: {
;readdtal.c: 401: es2=0;
	clrf	((ReadDataXONLID@es2))&0ffh
	line	402
;readdtal.c: 402: pp=step;
	movff	(ReadDataXONLID@step),(c:ReadDataXONLID@pp)
	line	403
	
l4722:
	line	404
;readdtal.c: 403: }
;readdtal.c: 404: if(!tid)
	movlb	2	; () banked
	tstfsz	((ReadDataXONLID@tid))&0ffh
	goto	u82591
	goto	u82590
u82591:
	goto	l41534
u82590:
	line	406
	
l41518:; BSR set to: 2

;readdtal.c: 405: {
;readdtal.c: 406: if(!*dt||((*dt-pp)<min)) *ovf=1;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movf	postinc2,w
	iorwf	postdec2,w
	btfsc	status,2
	goto	u82601
	goto	u82600
u82601:
	goto	l41522
u82600:
	
l41520:; BSR set to: 2

	movf	((c:ReadDataXONLID@pp)),c,w
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movlb	0	; () banked
	subwf	(??_ReadDataXONLID+0+0)&0ffh
	movlw	0
	subwfb	(??_ReadDataXONLID+0+1)&0ffh
	movlb	2	; () banked
	movf	((ReadDataXONLID@min))&0ffh,w
	movlb	0	; () banked
	subwf	(??_ReadDataXONLID+0+0)&0ffh,w
	movlb	2	; () banked
	movf	((ReadDataXONLID@min+1))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ReadDataXONLID+0+1)&0ffh,w
	btfsc	status,0
	goto	u82611
	goto	u82610
u82611:
	goto	l41524
u82610:
	
l41522:
	movff	(ReadDataXONLID@ovf),fsr2l
	movff	(ReadDataXONLID@ovf+1),fsr2h
	movlw	low(01h)
	movwf	indf2
	goto	l41526
	line	407
	
l41524:; BSR set to: 0

;readdtal.c: 407: else *ovf=0;
	movff	(ReadDataXONLID@ovf),fsr2l
	movff	(ReadDataXONLID@ovf+1),fsr2h
	movlw	low(0)
	movwf	indf2
	line	408
	
l41526:
;readdtal.c: 408: if(*dt&&((*dt-pp)>min)) *dt=*dt-pp;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movf	postinc2,w
	iorwf	postdec2,w
	btfsc	status,2
	goto	u82621
	goto	u82620
u82621:
	goto	l41532
u82620:
	
l41528:
	movf	((c:ReadDataXONLID@pp)),c,w
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movlb	0	; () banked
	subwf	(??_ReadDataXONLID+0+0)&0ffh
	movlw	0
	subwfb	(??_ReadDataXONLID+0+1)&0ffh
	movf	(??_ReadDataXONLID+0+0)&0ffh,w
	movlb	2	; () banked
	subwf	((ReadDataXONLID@min))&0ffh,w
	movlb	0	; () banked
	movf	(??_ReadDataXONLID+0+1)&0ffh,w
	movlb	2	; () banked
	subwfb	((ReadDataXONLID@min+1))&0ffh,w
	btfsc	status,0
	goto	u82631
	goto	u82630
u82631:
	goto	l41532
u82630:
	
l41530:; BSR set to: 2

	movf	((c:ReadDataXONLID@pp)),c,w
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movlb	0	; () banked
	subwf	(??_ReadDataXONLID+0+0)&0ffh
	movlw	0
	subwfb	(??_ReadDataXONLID+0+1)&0ffh
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	??_ReadDataXONLID+0+0,postinc2
	movff	??_ReadDataXONLID+0+1,postdec2

	goto	l41546
	line	409
	
l41532:
;readdtal.c: 409: else *dt=min;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movlb	2	; () banked
	movff	(ReadDataXONLID@min),postinc2
	movff	(ReadDataXONLID@min+1),postdec2
	goto	l41546
	line	413
	
l41534:; BSR set to: 2

;readdtal.c: 411: else
;readdtal.c: 412: {
;readdtal.c: 413: if((*dt+pp)>max) *ovf=1;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movf	((c:ReadDataXONLID@pp)),c,w
	movlb	0	; () banked
	addwf	(??_ReadDataXONLID+0+0)&0ffh,w
	movwf	(??_ReadDataXONLID+2+0)&0ffh
	movlw	0
	addwfc	(??_ReadDataXONLID+0+1)&0ffh,w
	movwf	1+(??_ReadDataXONLID+2+0)&0ffh
	movf	(??_ReadDataXONLID+2+0)&0ffh,w
	movlb	2	; () banked
	subwf	((ReadDataXONLID@max))&0ffh,w
	movlb	0	; () banked
	movf	(??_ReadDataXONLID+2+1)&0ffh,w
	movlb	2	; () banked
	subwfb	((ReadDataXONLID@max+1))&0ffh,w
	btfsc	status,0
	goto	u82641
	goto	u82640
u82641:
	goto	l41538
u82640:
	
l41536:; BSR set to: 2

	movff	(ReadDataXONLID@ovf),fsr2l
	movff	(ReadDataXONLID@ovf+1),fsr2h
	movlw	low(01h)
	movwf	indf2
	goto	l41540
	line	414
	
l41538:; BSR set to: 2

;readdtal.c: 414: else *ovf=0;
	movff	(ReadDataXONLID@ovf),fsr2l
	movff	(ReadDataXONLID@ovf+1),fsr2h
	movlw	low(0)
	movwf	indf2
	line	415
	
l41540:; BSR set to: 2

;readdtal.c: 415: if(*dt+pp<=max) *dt=*dt+pp;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movf	((c:ReadDataXONLID@pp)),c,w
	movlb	0	; () banked
	addwf	(??_ReadDataXONLID+0+0)&0ffh,w
	movwf	(??_ReadDataXONLID+2+0)&0ffh
	movlw	0
	addwfc	(??_ReadDataXONLID+0+1)&0ffh,w
	movwf	1+(??_ReadDataXONLID+2+0)&0ffh
	movf	(??_ReadDataXONLID+2+0)&0ffh,w
	movlb	2	; () banked
	subwf	((ReadDataXONLID@max))&0ffh,w
	movlb	0	; () banked
	movf	(??_ReadDataXONLID+2+1)&0ffh,w
	movlb	2	; () banked
	subwfb	((ReadDataXONLID@max+1))&0ffh,w
	btfss	status,0
	goto	u82651
	goto	u82650
u82651:
	goto	l41544
u82650:
	
l41542:; BSR set to: 2

	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movf	((c:ReadDataXONLID@pp)),c,w
	movlb	0	; () banked
	addwf	(??_ReadDataXONLID+0+0)&0ffh,w
	movwf	(??_ReadDataXONLID+2+0)&0ffh
	movlw	0
	addwfc	(??_ReadDataXONLID+0+1)&0ffh,w
	movwf	1+(??_ReadDataXONLID+2+0)&0ffh
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	??_ReadDataXONLID+2+0,postinc2
	movff	??_ReadDataXONLID+2+1,postdec2

	goto	l41546
	line	416
	
l41544:; BSR set to: 2

;readdtal.c: 416: else *dt=max;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	(ReadDataXONLID@max),postinc2
	movff	(ReadDataXONLID@max+1),postdec2
	line	420
	
l41546:
;readdtal.c: 417: }
;readdtal.c: 419: }
;readdtal.c: 420: if(*dt<min) *dt=min;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movlb	2	; () banked
	movf	((ReadDataXONLID@min))&0ffh,w
	movlb	0	; () banked
	subwf	(??_ReadDataXONLID+0+0)&0ffh,w
	movlb	2	; () banked
	movf	((ReadDataXONLID@min+1))&0ffh,w
	movlb	0	; () banked
	subwfb	(??_ReadDataXONLID+0+1)&0ffh,w
	btfsc	status,0
	goto	u82661
	goto	u82660
u82661:
	goto	l41550
u82660:
	
l41548:; BSR set to: 0

	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movlb	2	; () banked
	movff	(ReadDataXONLID@min),postinc2
	movff	(ReadDataXONLID@min+1),postdec2
	line	421
	
l41550:
;readdtal.c: 421: if(*dt>max) *dt=max;
	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	postinc2,??_ReadDataXONLID+0+0
	movff	postdec2,??_ReadDataXONLID+0+0+1
	movlb	0	; () banked
	movf	(??_ReadDataXONLID+0+0)&0ffh,w
	movlb	2	; () banked
	subwf	((ReadDataXONLID@max))&0ffh,w
	movlb	0	; () banked
	movf	(??_ReadDataXONLID+0+1)&0ffh,w
	movlb	2	; () banked
	subwfb	((ReadDataXONLID@max+1))&0ffh,w
	btfsc	status,0
	goto	u82671
	goto	u82670
u82671:
	goto	l4737
u82670:
	
l41552:; BSR set to: 2

	movff	(ReadDataXONLID@dt),fsr2l
	movff	(ReadDataXONLID@dt+1),fsr2h
	movff	(ReadDataXONLID@max),postinc2
	movff	(ReadDataXONLID@max+1),postdec2
	goto	l4737
	line	424
	
l4699:; BSR set to: 0

	line	426
;readdtal.c: 424: else
;readdtal.c: 425: {
;readdtal.c: 426: iu=0;
	movlb	1	; () banked
	clrf	((ReadDataXONLID@iu))&0ffh
	line	427
	
l41558:; BSR set to: 1

;readdtal.c: 427: ktu=5;
	movlw	low(05h)
	movwf	((ReadDataXONLID@ktu))&0ffh
	line	428
	
l41560:; BSR set to: 1

;readdtal.c: 428: es2=0;
	clrf	((ReadDataXONLID@es2))&0ffh
	line	429
	
l41562:; BSR set to: 1

;readdtal.c: 429: pp=step;
	movff	(ReadDataXONLID@step),(c:ReadDataXONLID@pp)
	line	432
	
l4737:
	return
	opt stack 0
GLOBAL	__end_of_ReadDataXONLID
	__end_of_ReadDataXONLID:
	signat	_ReadDataXONLID,41081
	global	_ExxPresKey

;; *************** function _ExxPresKey *****************
;; Defined at:
;;		line 287 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
;; Parameters:    Size  Location     Type
;;  k               1    wreg     unsigned char 
;;  ky              2   31[COMRAM] PTR struct .
;;		 -> xxky(35), 
;;  dTim            1   33[COMRAM] unsigned char 
;;  pTim            1   34[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  k               1   37[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    5
;; This function calls:
;;		_StartKeyTim
;;		_KeyTim
;; This function is called by:
;;		_ReadDataXONLID
;; This function uses a non-reentrant model
;;
psect	text230,class=CODE,space=0,reloc=2
global __ptext230
__ptext230:
psect	text230
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
	line	287
	global	__size_of_ExxPresKey
	__size_of_ExxPresKey	equ	__end_of_ExxPresKey-_ExxPresKey
	
_ExxPresKey:
	opt	stack 21
;ExxPresKey@k stored from wreg
	movff	wreg,(c:ExxPresKey@k)
	line	288
	
l41378:; BSR set to: 0

;keypad.c: 288: (*ky).bk=(k)?1:0;
	movlw	(0)&0ffh
	clrf	prodl
	cpfseq	((c:ExxPresKey@k)),c
	incf	prodl
	movff	prodl,??_ExxPresKey+0+0
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	(indf2),c,w
	xorwf	(??_ExxPresKey+0+0),c,w
	andlw	not ((1<<1)-1)
	xorwf	(??_ExxPresKey+0+0),c,w
	movwf	(indf2),c
	line	290
	
l41380:; BSR set to: 0

;keypad.c: 290: if((*ky).fl&&(*ky).sbk&&!(*ky).bk)
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfss	((??_ExxPresKey+0+0)),c,4
	goto	u82211
	goto	u82210
u82211:
	goto	l41392
u82210:
	
l41382:; BSR set to: 0

	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfss	((??_ExxPresKey+0+0)),c,1
	goto	u82221
	goto	u82220
u82221:
	goto	l41392
u82220:
	
l41384:; BSR set to: 0

	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfsc	((??_ExxPresKey+0+0)),c,0
	goto	u82231
	goto	u82230
u82231:
	goto	l41392
u82230:
	line	292
	
l41386:; BSR set to: 0

;keypad.c: 291: {
;keypad.c: 292: (*ky).fl=0;
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movlw	((0 & ((1<<1)-1))<<4)|not (((1<<1)-1)<<4)
	andwf	(indf2),c
	line	293
	
l41388:; BSR set to: 0

;keypad.c: 293: (*ky).sbk=((*ky).bk)?1:0;
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfsc	((??_ExxPresKey+0+0)),c,0
	goto	u82241
	goto	u82240
u82241:
	movlw	1
	goto	u82246
u82240:
	movlw	0
u82246:
	movwf	(??_ExxPresKey+1+0)&0ffh,c
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	rlncf	((??_ExxPresKey+1+0)),c
	movf	(indf2),c,w
	xorwf	((??_ExxPresKey+1+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExxPresKey+1+0)),c,w
	movwf	(indf2),c
	line	294
	
l41390:; BSR set to: 0

;keypad.c: 294: StartKeyTim(ky);
	movff	(c:ExxPresKey@ky),(c:?_StartKeyTim)
	movff	(c:ExxPresKey@ky+1),(c:?_StartKeyTim+1)
	call	_StartKeyTim	;wreg free
	line	296
	
l41392:; BSR set to: 0

;keypad.c: 295: }
;keypad.c: 296: if (!(*ky).sbk&&(*ky).bk)
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfsc	((??_ExxPresKey+0+0)),c,1
	goto	u82251
	goto	u82250
u82251:
	goto	l41404
u82250:
	
l41394:; BSR set to: 0

	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfss	((??_ExxPresKey+0+0)),c,0
	goto	u82261
	goto	u82260
u82261:
	goto	l41404
u82260:
	line	298
	
l41396:; BSR set to: 0

;keypad.c: 297: {
;keypad.c: 298: (*ky).sbk=((*ky).bk)?1:0;
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfsc	((??_ExxPresKey+0+0)),c,0
	goto	u82271
	goto	u82270
u82271:
	movlw	1
	goto	u82276
u82270:
	movlw	0
u82276:
	movwf	(??_ExxPresKey+1+0)&0ffh,c
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	rlncf	((??_ExxPresKey+1+0)),c
	movf	(indf2),c,w
	xorwf	((??_ExxPresKey+1+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExxPresKey+1+0)),c,w
	movwf	(indf2),c
	line	299
	
l41398:; BSR set to: 0

;keypad.c: 299: StartKeyTim(ky);
	movff	(c:ExxPresKey@ky),(c:?_StartKeyTim)
	movff	(c:ExxPresKey@ky+1),(c:?_StartKeyTim+1)
	call	_StartKeyTim	;wreg free
	line	300
	
l41400:; BSR set to: 0

;keypad.c: 300: return 1;
	movlw	(01h)&0ffh
	goto	l4674
	line	302
	
l41404:; BSR set to: 0

;keypad.c: 301: }
;keypad.c: 302: if (!(*ky).fl&&(*ky).sbk&&!(*ky).bk)
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfsc	((??_ExxPresKey+0+0)),c,4
	goto	u82281
	goto	u82280
u82281:
	goto	l41414
u82280:
	
l41406:; BSR set to: 0

	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfss	((??_ExxPresKey+0+0)),c,1
	goto	u82291
	goto	u82290
u82291:
	goto	l41414
u82290:
	
l41408:; BSR set to: 0

	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfsc	((??_ExxPresKey+0+0)),c,0
	goto	u82301
	goto	u82300
u82301:
	goto	l41414
u82300:
	line	304
	
l41410:; BSR set to: 0

;keypad.c: 303: {
;keypad.c: 304: (*ky).sbk=((*ky).bk)?1:0;
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfsc	((??_ExxPresKey+0+0)),c,0
	goto	u82311
	goto	u82310
u82311:
	movlw	1
	goto	u82316
u82310:
	movlw	0
u82316:
	movwf	(??_ExxPresKey+1+0)&0ffh,c
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	rlncf	((??_ExxPresKey+1+0)),c
	movf	(indf2),c,w
	xorwf	((??_ExxPresKey+1+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExxPresKey+1+0)),c,w
	movwf	(indf2),c
	line	305
	
l41412:; BSR set to: 0

;keypad.c: 305: StartKeyTim(ky);
	movff	(c:ExxPresKey@ky),(c:?_StartKeyTim)
	movff	(c:ExxPresKey@ky+1),(c:?_StartKeyTim+1)
	call	_StartKeyTim	;wreg free
	line	307
	
l41414:; BSR set to: 0

;keypad.c: 306: }
;keypad.c: 307: if((*ky).sbk&&(*ky).bk)
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfss	((??_ExxPresKey+0+0)),c,1
	goto	u82321
	goto	u82320
u82321:
	goto	l41434
u82320:
	
l41416:; BSR set to: 0

	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfss	((??_ExxPresKey+0+0)),c,0
	goto	u82331
	goto	u82330
u82331:
	goto	l41434
u82330:
	line	310
	
l41418:; BSR set to: 0

;keypad.c: 308: {
;keypad.c: 310: if(!(*ky).ap&&KeyTim(ky)>=dTim)
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfsc	((??_ExxPresKey+0+0)),c,2
	goto	u82341
	goto	u82340
u82341:
	goto	l41424
u82340:
	
l41420:; BSR set to: 0

	movff	(c:ExxPresKey@ky),(c:?_KeyTim)
	movff	(c:ExxPresKey@ky+1),(c:?_KeyTim+1)
	call	_KeyTim	;wreg free
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	movf	((c:ExxPresKey@dTim)),c,w
	subwf	((??_ExxPresKey+0+0)),c,w
	btfss	status,0
	goto	u82351
	goto	u82350
u82351:
	goto	l41424
u82350:
	line	312
	
l41422:; BSR set to: 0

;keypad.c: 311: {
;keypad.c: 312: (*ky).fl=1;
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movlw	(01h & ((1<<1)-1))<<4
	iorwf	(indf2),c
	line	313
;keypad.c: 313: (*ky).ap=1;
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movlw	(01h & ((1<<1)-1))<<2
	iorwf	(indf2),c
	line	315
	
l41424:; BSR set to: 0

;keypad.c: 314: }
;keypad.c: 315: if((*ky).ap&&KeyTim(ky)>=pTim)
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfss	((??_ExxPresKey+0+0)),c,2
	goto	u82361
	goto	u82360
u82361:
	goto	l41436
u82360:
	
l41426:; BSR set to: 0

	movff	(c:ExxPresKey@ky),(c:?_KeyTim)
	movff	(c:ExxPresKey@ky+1),(c:?_KeyTim+1)
	call	_KeyTim	;wreg free
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	movf	((c:ExxPresKey@pTim)),c,w
	subwf	((??_ExxPresKey+0+0)),c,w
	btfss	status,0
	goto	u82371
	goto	u82370
u82371:
	goto	l41436
u82370:
	line	317
	
l41428:; BSR set to: 0

;keypad.c: 316: {
;keypad.c: 317: StartKeyTim(ky);
	movff	(c:ExxPresKey@ky),(c:?_StartKeyTim)
	movff	(c:ExxPresKey@ky+1),(c:?_StartKeyTim+1)
	call	_StartKeyTim	;wreg free
	line	318
	
l41430:; BSR set to: 0

;keypad.c: 318: return 2;
	movlw	(02h)&0ffh
	goto	l4674
	line	320
	
l41434:; BSR set to: 0

	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movlw	((0 & ((1<<1)-1))<<2)|not (((1<<1)-1)<<2)
	andwf	(indf2),c
	line	321
	
l41436:; BSR set to: 0

;keypad.c: 321: (*ky).sbk=((*ky).bk)?1:0;
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfsc	((??_ExxPresKey+0+0)),c,0
	goto	u82381
	goto	u82380
u82381:
	movlw	1
	goto	u82386
u82380:
	movlw	0
u82386:
	movwf	(??_ExxPresKey+1+0)&0ffh,c
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	rlncf	((??_ExxPresKey+1+0)),c
	movf	(indf2),c,w
	xorwf	((??_ExxPresKey+1+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_ExxPresKey+1+0)),c,w
	movwf	(indf2),c
	line	322
	
l41438:; BSR set to: 0

;keypad.c: 322: if ((*ky).ap) return 3;
	movff	(c:ExxPresKey@ky),fsr2l
	movff	(c:ExxPresKey@ky+1),fsr2h
	movf	indf2,w
	movwf	(??_ExxPresKey+0+0)&0ffh,c
	
	btfss	((??_ExxPresKey+0+0)),c,2
	goto	u82391
	goto	u82390
u82391:
	goto	l41444
u82390:
	
l41440:; BSR set to: 0

	movlw	(03h)&0ffh
	goto	l4674
	line	323
	
l41444:; BSR set to: 0

;keypad.c: 323: return 0;
	movlw	(0)&0ffh
	line	324
	
l4674:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_ExxPresKey
	__end_of_ExxPresKey:
	signat	_ExxPresKey,16505
	global	_StartKeyTim

;; *************** function _StartKeyTim *****************
;; Defined at:
;;		line 77 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
;; Parameters:    Size  Location     Type
;;  ky              2   29[COMRAM] PTR struct .
;;		 -> xxky(35), ky(35), 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PresKeyEX
;;		_ExxPresKey
;; This function uses a non-reentrant model
;;
psect	text231,class=CODE,space=0,reloc=2
global __ptext231
__ptext231:
psect	text231
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
	line	77
	global	__size_of_StartKeyTim
	__size_of_StartKeyTim	equ	__end_of_StartKeyTim-_StartKeyTim
	
_StartKeyTim:; BSR set to: 0

	opt	stack 21
	line	78
	
l41292:; BSR set to: 0

;keypad.c: 78: (*ky).cS=0;
	lfsr	2,01h
	movf	((c:StartKeyTim@ky)),c,w
	addwf	fsr2l
	movf	((c:StartKeyTim@ky+1)),c,w
	addwfc	fsr2h
	movlw	low(0)
	movwf	indf2
	line	79
;keypad.c: 79: (*ky).dS=0;
	lfsr	2,02h
	movf	((c:StartKeyTim@ky)),c,w
	addwf	fsr2l
	movf	((c:StartKeyTim@ky+1)),c,w
	addwfc	fsr2h
	movlw	low(0)
	movwf	indf2
	line	80
	
l4640:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_StartKeyTim
	__end_of_StartKeyTim:
	signat	_StartKeyTim,4216
	global	_KeyTim

;; *************** function _KeyTim *****************
;; Defined at:
;;		line 84 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
;; Parameters:    Size  Location     Type
;;  ky              2   29[COMRAM] PTR struct .
;;		 -> xxky(35), ky(35), 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PresKeyEX
;;		_ExxPresKey
;; This function uses a non-reentrant model
;;
psect	text232,class=CODE,space=0,reloc=2
global __ptext232
__ptext232:
psect	text232
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
	line	84
	global	__size_of_KeyTim
	__size_of_KeyTim	equ	__end_of_KeyTim-_KeyTim
	
_KeyTim:; BSR set to: 0

	opt	stack 21
	line	85
	
l41294:; BSR set to: 0

;keypad.c: 85: return (*ky).dS;
	lfsr	2,02h
	movf	((c:KeyTim@ky)),c,w
	addwf	fsr2l
	movf	((c:KeyTim@ky+1)),c,w
	addwfc	fsr2h
	movf	indf2,w
	line	86
	
l4643:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_KeyTim
	__end_of_KeyTim:
	signat	_KeyTim,4217
	global	___aldiv

;; *************** function ___aldiv *****************
;; Defined at:
;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.12\sources\aldiv.c"
;; Parameters:    Size  Location     Type
;;  dividend        4   29[COMRAM] long 
;;  divisor         4   33[COMRAM] long 
;; Auto vars:     Size  Location     Type
;;  quotient        4    2[BANK0 ] long 
;;  sign            1    1[BANK0 ] unsigned char 
;;  counter         1    0[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  4   29[COMRAM] long 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : D/2
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       14 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_GetPGD_PCO
;;		_ModZgCO
;;		_FirstPCW
;;		_ModZgCW
;;		_ModZgCW4
;;		_ModZgCW2
;; This function uses a non-reentrant model
;;
psect	text233,class=CODE,space=0,reloc=2
global __ptext233
__ptext233:
psect	text233
	file	"C:\Program Files\Microchip\xc8\v1.12\sources\aldiv.c"
	line	10
	global	__size_of___aldiv
	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
	
___aldiv:; BSR set to: 0

	opt	stack 22
	line	14
	
l36454:
	movlb	0	; () banked
	clrf	((___aldiv@sign))&0ffh
	line	15
	btfss	((c:___aldiv@divisor+3)),c,7
	goto	u69171
	goto	u69170
u69171:
	goto	l36460
u69170:
	line	16
	
l36456:; BSR set to: 0

	comf	((c:___aldiv@divisor+3)),c
	comf	((c:___aldiv@divisor+2)),c
	comf	((c:___aldiv@divisor+1)),c
	negf	((c:___aldiv@divisor)),c
	movlw	0
	addwfc	((c:___aldiv@divisor+1)),c
	addwfc	((c:___aldiv@divisor+2)),c
	addwfc	((c:___aldiv@divisor+3)),c
	line	17
	
l36458:; BSR set to: 0

	movlw	low(01h)
	movwf	((___aldiv@sign))&0ffh
	line	19
	
l36460:; BSR set to: 0

	btfss	((c:___aldiv@dividend+3)),c,7
	goto	u69181
	goto	u69180
u69181:
	goto	l36466
u69180:
	line	20
	
l36462:; BSR set to: 0

	comf	((c:___aldiv@dividend+3)),c
	comf	((c:___aldiv@dividend+2)),c
	comf	((c:___aldiv@dividend+1)),c
	negf	((c:___aldiv@dividend)),c
	movlw	0
	addwfc	((c:___aldiv@dividend+1)),c
	addwfc	((c:___aldiv@dividend+2)),c
	addwfc	((c:___aldiv@dividend+3)),c
	line	21
	
l36464:; BSR set to: 0

	movlw	(01h)&0ffh
	xorwf	((___aldiv@sign))&0ffh
	line	23
	
l36466:; BSR set to: 0

	clrf	((___aldiv@quotient))&0ffh
	clrf	((___aldiv@quotient+1))&0ffh
	clrf	((___aldiv@quotient+2))&0ffh
	clrf	((___aldiv@quotient+3))&0ffh

	line	24
	
l36468:; BSR set to: 0

	movf	((c:___aldiv@divisor+3)),c,w
	iorwf ((c:___aldiv@divisor)),c,w
	iorwf ((c:___aldiv@divisor+1)),c,w
	iorwf ((c:___aldiv@divisor+2)),c,w

	btfsc	status,2
	goto	u69191
	goto	u69190
u69191:
	goto	l36488
u69190:
	line	25
	
l36470:; BSR set to: 0

	movlw	low(01h)
	movwf	((___aldiv@counter))&0ffh
	line	26
	goto	l36474
	line	27
	
l36472:; BSR set to: 0

	bcf	status,0
	rlcf	((c:___aldiv@divisor)),c
	rlcf	((c:___aldiv@divisor+1)),c
	rlcf	((c:___aldiv@divisor+2)),c
	rlcf	((c:___aldiv@divisor+3)),c
	line	28
	incf	((___aldiv@counter))&0ffh
	line	26
	
l36474:; BSR set to: 0

	
	btfss	((c:___aldiv@divisor+3)),c,(31)&7
	goto	u69201
	goto	u69200
u69201:
	goto	l36472
u69200:
	line	31
	
l36476:; BSR set to: 0

	bcf	status,0
	rlcf	((___aldiv@quotient))&0ffh
	rlcf	((___aldiv@quotient+1))&0ffh
	rlcf	((___aldiv@quotient+2))&0ffh
	rlcf	((___aldiv@quotient+3))&0ffh
	line	32
	
l36478:; BSR set to: 0

	movf	((c:___aldiv@divisor)),c,w
	subwf	((c:___aldiv@dividend)),c,w
	movf	((c:___aldiv@divisor+1)),c,w
	subwfb	((c:___aldiv@dividend+1)),c,w
	movf	((c:___aldiv@divisor+2)),c,w
	subwfb	((c:___aldiv@dividend+2)),c,w
	movf	((c:___aldiv@divisor+3)),c,w
	subwfb	((c:___aldiv@dividend+3)),c,w
	btfss	status,0
	goto	u69211
	goto	u69210
u69211:
	goto	l36484
u69210:
	line	33
	
l36480:; BSR set to: 0

	movf	((c:___aldiv@divisor)),c,w
	subwf	((c:___aldiv@dividend)),c
	movf	((c:___aldiv@divisor+1)),c,w
	subwfb	((c:___aldiv@dividend+1)),c
	movf	((c:___aldiv@divisor+2)),c,w
	subwfb	((c:___aldiv@dividend+2)),c
	movf	((c:___aldiv@divisor+3)),c,w
	subwfb	((c:___aldiv@dividend+3)),c
	line	34
	
l36482:; BSR set to: 0

	bsf	(0+(0/8)+(___aldiv@quotient))&0ffh,(0)&7
	line	36
	
l36484:; BSR set to: 0

	bcf	status,0
	rrcf	((c:___aldiv@divisor+3)),c
	rrcf	((c:___aldiv@divisor+2)),c
	rrcf	((c:___aldiv@divisor+1)),c
	rrcf	((c:___aldiv@divisor)),c
	line	37
	
l36486:; BSR set to: 0

	decfsz	((___aldiv@counter))&0ffh
	
	goto	l36476
	line	39
	
l36488:; BSR set to: 0

	movf	((___aldiv@sign))&0ffh,w
	btfsc	status,2
	goto	u69221
	goto	u69220
u69221:
	goto	l36492
u69220:
	line	40
	
l36490:; BSR set to: 0

	comf	((___aldiv@quotient+3))&0ffh
	comf	((___aldiv@quotient+2))&0ffh
	comf	((___aldiv@quotient+1))&0ffh
	negf	((___aldiv@quotient))&0ffh
	movlw	0
	addwfc	((___aldiv@quotient+1))&0ffh
	addwfc	((___aldiv@quotient+2))&0ffh
	addwfc	((___aldiv@quotient+3))&0ffh
	line	41
	
l36492:; BSR set to: 0

	movff	(___aldiv@quotient),(c:?___aldiv)
	movff	(___aldiv@quotient+1),(c:?___aldiv+1)
	movff	(___aldiv@quotient+2),(c:?___aldiv+2)
	movff	(___aldiv@quotient+3),(c:?___aldiv+3)
	line	42
	
l4970:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of___aldiv
	__end_of___aldiv:
	signat	___aldiv,8316
	global	___awdiv

;; *************** function ___awdiv *****************
;; Defined at:
;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.12\sources\awdiv.c"
;; Parameters:    Size  Location     Type
;;  dividend        2    0[BANK0 ] int 
;;  divisor         2    2[BANK0 ] int 
;; Auto vars:     Size  Location     Type
;;  quotient        2    6[BANK0 ] int 
;;  sign            1    5[BANK0 ] unsigned char 
;;  counter         1    4[BANK0 ] unsigned char 
;; Return value:  Size  Location     Type
;;                  2    0[BANK0 ] int 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        8 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_PomiarCS
;;		_MocStart
;;		_MocMaksCO
;;		_MocMaksCW
;;		_StartMCW
;;		_FirstPCW
;;		_ModPrzCW
;;		_RetHI
;;		_RetLO
;;		_RetKrkDelta
;;		_RetDelta
;; This function uses a non-reentrant model
;;
psect	text234,class=CODE,space=0,reloc=2
global __ptext234
__ptext234:
psect	text234
	file	"C:\Program Files\Microchip\xc8\v1.12\sources\awdiv.c"
	line	10
	global	__size_of___awdiv
	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
	
___awdiv:; BSR set to: 0

	opt	stack 23
	line	14
	
l36496:; BSR set to: 0

	clrf	((___awdiv@sign))&0ffh
	line	15
	btfss	((___awdiv@divisor+1))&0ffh,7
	goto	u69231
	goto	u69230
u69231:
	goto	l36502
u69230:
	line	16
	
l36498:; BSR set to: 0

	negf	((___awdiv@divisor))&0ffh
	comf	((___awdiv@divisor+1))&0ffh
	btfsc	status,0
	incf	((___awdiv@divisor+1))&0ffh
	line	17
	
l36500:; BSR set to: 0

	movlw	low(01h)
	movwf	((___awdiv@sign))&0ffh
	line	19
	
l36502:; BSR set to: 0

	btfss	((___awdiv@dividend+1))&0ffh,7
	goto	u69241
	goto	u69240
u69241:
	goto	l36508
u69240:
	line	20
	
l36504:; BSR set to: 0

	negf	((___awdiv@dividend))&0ffh
	comf	((___awdiv@dividend+1))&0ffh
	btfsc	status,0
	incf	((___awdiv@dividend+1))&0ffh
	line	21
	
l36506:; BSR set to: 0

	movlw	(01h)&0ffh
	xorwf	((___awdiv@sign))&0ffh
	line	23
	
l36508:; BSR set to: 0

	clrf	((___awdiv@quotient))&0ffh
	clrf	((___awdiv@quotient+1))&0ffh
	line	24
	
l36510:; BSR set to: 0

	movf	((___awdiv@divisor+1))&0ffh,w
	iorwf ((___awdiv@divisor))&0ffh,w

	btfsc	status,2
	goto	u69251
	goto	u69250
u69251:
	goto	l36530
u69250:
	line	25
	
l36512:; BSR set to: 0

	movlw	low(01h)
	movwf	((___awdiv@counter))&0ffh
	line	26
	goto	l36516
	line	27
	
l36514:; BSR set to: 0

	bcf	status,0
	rlcf	((___awdiv@divisor))&0ffh
	rlcf	((___awdiv@divisor+1))&0ffh
	line	28
	incf	((___awdiv@counter))&0ffh
	line	26
	
l36516:; BSR set to: 0

	
	btfss	((___awdiv@divisor+1))&0ffh,(15)&7
	goto	u69261
	goto	u69260
u69261:
	goto	l36514
u69260:
	line	31
	
l36518:; BSR set to: 0

	bcf	status,0
	rlcf	((___awdiv@quotient))&0ffh
	rlcf	((___awdiv@quotient+1))&0ffh
	line	32
	
l36520:; BSR set to: 0

	movf	((___awdiv@divisor))&0ffh,w
	subwf	((___awdiv@dividend))&0ffh,w
	movf	((___awdiv@divisor+1))&0ffh,w
	subwfb	((___awdiv@dividend+1))&0ffh,w
	btfss	status,0
	goto	u69271
	goto	u69270
u69271:
	goto	l36526
u69270:
	line	33
	
l36522:; BSR set to: 0

	movf	((___awdiv@divisor))&0ffh,w
	subwf	((___awdiv@dividend))&0ffh
	movf	((___awdiv@divisor+1))&0ffh,w
	subwfb	((___awdiv@dividend+1))&0ffh

	line	34
	
l36524:; BSR set to: 0

	bsf	(0+(0/8)+(___awdiv@quotient))&0ffh,(0)&7
	line	36
	
l36526:; BSR set to: 0

	bcf	status,0
	rrcf	((___awdiv@divisor+1))&0ffh
	rrcf	((___awdiv@divisor))&0ffh
	line	37
	
l36528:; BSR set to: 0

	decfsz	((___awdiv@counter))&0ffh
	
	goto	l36518
	line	39
	
l36530:; BSR set to: 0

	movf	((___awdiv@sign))&0ffh,w
	btfsc	status,2
	goto	u69281
	goto	u69280
u69281:
	goto	l36534
u69280:
	line	40
	
l36532:; BSR set to: 0

	negf	((___awdiv@quotient))&0ffh
	comf	((___awdiv@quotient+1))&0ffh
	btfsc	status,0
	incf	((___awdiv@quotient+1))&0ffh
	line	41
	
l36534:; BSR set to: 0

	movff	(___awdiv@quotient),(?___awdiv)
	movff	(___awdiv@quotient+1),(?___awdiv+1)
	line	42
	
l5049:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of___awdiv
	__end_of___awdiv:
	signat	___awdiv,8314
	global	___lbdiv

;; *************** function ___lbdiv *****************
;; Defined at:
;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lbdiv.c"
;; Parameters:    Size  Location     Type
;;  dividend        1    wreg     unsigned char 
;;  divisor         1   29[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  dividend        1   30[COMRAM] unsigned char 
;;  quotient        1   32[COMRAM] unsigned char 
;;  counter         1   31[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ReadDataXONLID
;; This function uses a non-reentrant model
;;
psect	text235,class=CODE,space=0,reloc=2
global __ptext235
__ptext235:
psect	text235
	file	"C:\Program Files\Microchip\xc8\v1.12\sources\lbdiv.c"
	line	5
	global	__size_of___lbdiv
	__size_of___lbdiv	equ	__end_of___lbdiv-___lbdiv
	
___lbdiv:; BSR set to: 0

	opt	stack 22
;___lbdiv@dividend stored from wreg
	line	9
	movff	wreg,(c:___lbdiv@dividend)
	
l41566:; BSR set to: 1

	clrf	((c:___lbdiv@quotient)),c
	line	10
	
l41568:; BSR set to: 1

	movf	((c:___lbdiv@divisor)),c,w
	btfsc	status,2
	goto	u82681
	goto	u82680
u82681:
	goto	l41588
u82680:
	line	11
	
l41570:; BSR set to: 1

	movlw	low(01h)
	movwf	((c:___lbdiv@counter)),c
	line	12
	goto	l41576
	line	13
	
l41572:; BSR set to: 1

	bcf status,0
	rlcf	((c:___lbdiv@divisor)),c

	line	14
	
l41574:; BSR set to: 1

	incf	((c:___lbdiv@counter)),c
	line	12
	
l41576:; BSR set to: 1

	
	btfss	((c:___lbdiv@divisor)),c,(7)&7
	goto	u82691
	goto	u82690
u82691:
	goto	l41572
u82690:
	line	17
	
l41578:; BSR set to: 1

	bcf status,0
	rlcf	((c:___lbdiv@quotient)),c

	line	18
	movf	((c:___lbdiv@divisor)),c,w
	subwf	((c:___lbdiv@dividend)),c,w
	btfss	status,0
	goto	u82701
	goto	u82700
u82701:
	goto	l41584
u82700:
	line	19
	
l41580:; BSR set to: 1

	movf	((c:___lbdiv@divisor)),c,w
	subwf	((c:___lbdiv@dividend)),c
	line	20
	
l41582:; BSR set to: 1

	bsf	(0+(0/8)+(c:___lbdiv@quotient)),c,(0)&7
	line	22
	
l41584:; BSR set to: 1

	bcf status,0
	rrcf	((c:___lbdiv@divisor)),c

	line	23
	
l41586:; BSR set to: 1

	decfsz	((c:___lbdiv@counter)),c
	
	goto	l41578
	line	25
	
l41588:; BSR set to: 1

	movf	((c:___lbdiv@quotient)),c,w
	line	26
	
l5292:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of___lbdiv
	__end_of___lbdiv:
	signat	___lbdiv,8313
	global	___lmul

;; *************** function ___lmul *****************
;; Defined at:
;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lmul.c"
;; Parameters:    Size  Location     Type
;;  multiplier      4   29[COMRAM] unsigned long 
;;  multiplicand    4   33[COMRAM] unsigned long 
;; Auto vars:     Size  Location     Type
;;  product         4    0[BANK0 ] unsigned long 
;; Return value:  Size  Location     Type
;;                  4   29[COMRAM] unsigned long 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : D/2
;;		On exit  : D/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       12 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_GetPGD_PCO
;;		_ModZgCO
;;		_FirstPCW
;;		_ModZgCW
;;		_ModZgCW4
;;		_ModZgCW2
;; This function uses a non-reentrant model
;;
psect	text236,class=CODE,space=0,reloc=2
global __ptext236
__ptext236:
psect	text236
	file	"C:\Program Files\Microchip\xc8\v1.12\sources\lmul.c"
	line	3
	global	__size_of___lmul
	__size_of___lmul	equ	__end_of___lmul-___lmul
	
___lmul:; BSR set to: 1

	opt	stack 22
	line	4
	
l36564:
	movlb	0	; () banked
	clrf	((___lmul@product))&0ffh
	clrf	((___lmul@product+1))&0ffh
	clrf	((___lmul@product+2))&0ffh
	clrf	((___lmul@product+3))&0ffh

	line	6
	
l5344:
	line	7
	
	btfss	((c:___lmul@multiplier)),c,(0)&7
	goto	u69321
	goto	u69320
u69321:
	goto	l36568
u69320:
	line	8
	
l36566:
	movf	((c:___lmul@multiplicand)),c,w
	movlb	0	; () banked
	addwf	((___lmul@product))&0ffh
	movf	((c:___lmul@multiplicand+1)),c,w
	addwfc	((___lmul@product+1))&0ffh
	movf	((c:___lmul@multiplicand+2)),c,w
	addwfc	((___lmul@product+2))&0ffh
	movf	((c:___lmul@multiplicand+3)),c,w
	addwfc	((___lmul@product+3))&0ffh
	line	9
	
l36568:
	bcf	status,0
	rlcf	((c:___lmul@multiplicand)),c
	rlcf	((c:___lmul@multiplicand+1)),c
	rlcf	((c:___lmul@multiplicand+2)),c
	rlcf	((c:___lmul@multiplicand+3)),c
	line	10
	
l36570:
	bcf	status,0
	rrcf	((c:___lmul@multiplier+3)),c
	rrcf	((c:___lmul@multiplier+2)),c
	rrcf	((c:___lmul@multiplier+1)),c
	rrcf	((c:___lmul@multiplier)),c
	line	11
	movf	((c:___lmul@multiplier+3)),c,w
	iorwf ((c:___lmul@multiplier)),c,w
	iorwf ((c:___lmul@multiplier+1)),c,w
	iorwf ((c:___lmul@multiplier+2)),c,w

	btfss	status,2
	goto	u69331
	goto	u69330
u69331:
	goto	l5344
u69330:
	
l5346:
	line	12
	movff	(___lmul@product),(c:?___lmul)
	movff	(___lmul@product+1),(c:?___lmul+1)
	movff	(___lmul@product+2),(c:?___lmul+2)
	movff	(___lmul@product+3),(c:?___lmul+3)
	line	13
	
l5347:
	return
	opt stack 0
GLOBAL	__end_of___lmul
	__end_of___lmul:
	signat	___lmul,8316
	global	___lwdiv

;; *************** function ___lwdiv *****************
;; Defined at:
;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lwdiv.c"
;; Parameters:    Size  Location     Type
;;  dividend        2    0[BANK0 ] unsigned int 
;;  divisor         2    2[BANK0 ] unsigned int 
;; Auto vars:     Size  Location     Type
;;  quotient        2   36[COMRAM] unsigned int 
;;  counter         1   35[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  2    0[BANK0 ] unsigned int 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_WriteOPWM
;;		_MocStart
;;		_MocMaksCO
;;		_MocMaksCW
;;		_ModPrzCW4
;;		_ProcToPmpPwm
;; This function uses a non-reentrant model
;;
psect	text237,class=CODE,space=0,reloc=2
global __ptext237
__ptext237:
psect	text237
	file	"C:\Program Files\Microchip\xc8\v1.12\sources\lwdiv.c"
	line	10
	global	__size_of___lwdiv
	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
	
___lwdiv:
	opt	stack 23
	line	14
	
l36572:; BSR set to: 0

	clrf	((c:___lwdiv@quotient)),c
	clrf	((c:___lwdiv@quotient+1)),c
	line	15
	
l36574:; BSR set to: 0

	movf	((___lwdiv@divisor+1))&0ffh,w
	iorwf ((___lwdiv@divisor))&0ffh,w

	btfsc	status,2
	goto	u69341
	goto	u69340
u69341:
	goto	l5380
u69340:
	line	16
	
l36576:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:___lwdiv@counter)),c
	line	17
	goto	l36580
	line	18
	
l36578:; BSR set to: 0

	bcf	status,0
	rlcf	((___lwdiv@divisor))&0ffh
	rlcf	((___lwdiv@divisor+1))&0ffh
	line	19
	incf	((c:___lwdiv@counter)),c
	line	17
	
l36580:; BSR set to: 0

	
	btfss	((___lwdiv@divisor+1))&0ffh,(15)&7
	goto	u69351
	goto	u69350
u69351:
	goto	l36578
u69350:
	line	22
	
l36582:; BSR set to: 0

	bcf	status,0
	rlcf	((c:___lwdiv@quotient)),c
	rlcf	((c:___lwdiv@quotient+1)),c
	line	23
	
l36584:; BSR set to: 0

	movf	((___lwdiv@divisor))&0ffh,w
	subwf	((___lwdiv@dividend))&0ffh,w
	movf	((___lwdiv@divisor+1))&0ffh,w
	subwfb	((___lwdiv@dividend+1))&0ffh,w
	btfss	status,0
	goto	u69361
	goto	u69360
u69361:
	goto	l36590
u69360:
	line	24
	
l36586:; BSR set to: 0

	movf	((___lwdiv@divisor))&0ffh,w
	subwf	((___lwdiv@dividend))&0ffh
	movf	((___lwdiv@divisor+1))&0ffh,w
	subwfb	((___lwdiv@dividend+1))&0ffh

	line	25
	
l36588:; BSR set to: 0

	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
	line	27
	
l36590:; BSR set to: 0

	bcf	status,0
	rrcf	((___lwdiv@divisor+1))&0ffh
	rrcf	((___lwdiv@divisor))&0ffh
	line	28
	
l36592:; BSR set to: 0

	decfsz	((c:___lwdiv@counter)),c
	
	goto	l36582
	line	29
	
l5380:; BSR set to: 0

	line	30
	movff	(c:___lwdiv@quotient),(?___lwdiv)
	movff	(c:___lwdiv@quotient+1),(?___lwdiv+1)
	line	31
	
l5387:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of___lwdiv
	__end_of___lwdiv:
	signat	___lwdiv,8314
	global	___lwmod

;; *************** function ___lwmod *****************
;; Defined at:
;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lwmod.c"
;; Parameters:    Size  Location     Type
;;  dividend        2   29[COMRAM] unsigned int 
;;  divisor         2   31[COMRAM] unsigned int 
;; Auto vars:     Size  Location     Type
;;  counter         1   33[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  2   29[COMRAM] unsigned int 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : C/2
;;		On exit  : C/2
;;		Unchanged: FFFFFFF3/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        5 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ReadDataXONLID
;; This function uses a non-reentrant model
;;
psect	text238,class=CODE,space=0,reloc=2
global __ptext238
__ptext238:
psect	text238
	file	"C:\Program Files\Microchip\xc8\v1.12\sources\lwmod.c"
	line	10
	global	__size_of___lwmod
	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
	
___lwmod:; BSR set to: 0

	opt	stack 22
	line	13
	
l41592:
	movf	((c:___lwmod@divisor+1)),c,w
	iorwf ((c:___lwmod@divisor)),c,w

	btfsc	status,2
	goto	u82711
	goto	u82710
u82711:
	goto	l5390
u82710:
	line	14
	
l41594:
	movlw	low(01h)
	movwf	((c:___lwmod@counter)),c
	line	15
	goto	l41598
	line	16
	
l41596:
	bcf	status,0
	rlcf	((c:___lwmod@divisor)),c
	rlcf	((c:___lwmod@divisor+1)),c
	line	17
	incf	((c:___lwmod@counter)),c
	line	15
	
l41598:
	
	btfss	((c:___lwmod@divisor+1)),c,(15)&7
	goto	u82721
	goto	u82720
u82721:
	goto	l41596
u82720:
	line	20
	
l41600:
	movf	((c:___lwmod@divisor)),c,w
	subwf	((c:___lwmod@dividend)),c,w
	movf	((c:___lwmod@divisor+1)),c,w
	subwfb	((c:___lwmod@dividend+1)),c,w
	btfss	status,0
	goto	u82731
	goto	u82730
u82731:
	goto	l41604
u82730:
	line	21
	
l41602:
	movf	((c:___lwmod@divisor)),c,w
	subwf	((c:___lwmod@dividend)),c
	movf	((c:___lwmod@divisor+1)),c,w
	subwfb	((c:___lwmod@dividend+1)),c

	line	22
	
l41604:
	bcf	status,0
	rrcf	((c:___lwmod@divisor+1)),c
	rrcf	((c:___lwmod@divisor)),c
	line	23
	
l41606:
	decfsz	((c:___lwmod@counter)),c
	
	goto	l41600
	line	24
	
l5390:
	line	25
	movff	(c:___lwmod@dividend),(c:?___lwmod)
	movff	(c:___lwmod@dividend+1),(c:?___lwmod+1)
	line	26
	
l5397:
	return
	opt stack 0
GLOBAL	__end_of___lwmod
	__end_of___lwmod:
	signat	___lwmod,8314
	global	___wmul

;; *************** function ___wmul *****************
;; Defined at:
;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.12\sources\wmul.c"
;; Parameters:    Size  Location     Type
;;  multiplier      2   29[COMRAM] unsigned int 
;;  multiplicand    2   31[COMRAM] unsigned int 
;; Auto vars:     Size  Location     Type
;;  product         2   33[COMRAM] unsigned int 
;; Return value:  Size  Location     Type
;;                  2   29[COMRAM] unsigned int 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : D/0
;;		On exit  : D/0
;;		Unchanged: FFFFFFF2/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    4
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_GoldenEye
;;		_GetPGD_PCO
;;		_PomiarCS
;;		_WriteOPWM
;;		_MocStart
;;		_MocMaksCO
;;		_MocMaksCW
;;		_ModZgCO
;;		_ModDkCO
;;		_FirstPCW
;;		_ModZgCW
;;		_ModDkCW
;;		_ModZgCW4
;;		_ModDkCW4
;;		_ModPrzCW4
;;		_ModZgCW2
;;		_ModDkCW2
;;		_ProcToPmpPwm
;;		_RetKrkDelta
;; This function uses a non-reentrant model
;;
psect	text239,class=CODE,space=0,reloc=2
global __ptext239
__ptext239:
psect	text239
	file	"C:\Program Files\Microchip\xc8\v1.12\sources\wmul.c"
	line	3
	global	__size_of___wmul
	__size_of___wmul	equ	__end_of___wmul-___wmul
	
___wmul:
	opt	stack 23
	line	4
	
l36610:
	clrf	((c:___wmul@product)),c
	clrf	((c:___wmul@product+1)),c
	line	6
	
l5416:
	line	7
	
	btfss	((c:___wmul@multiplier)),c,(0)&7
	goto	u69401
	goto	u69400
u69401:
	goto	l36614
u69400:
	line	8
	
l36612:
	movf	((c:___wmul@multiplicand)),c,w
	addwf	((c:___wmul@product)),c
	movf	((c:___wmul@multiplicand+1)),c,w
	addwfc	((c:___wmul@product+1)),c

	line	9
	
l36614:
	bcf	status,0
	rlcf	((c:___wmul@multiplicand)),c
	rlcf	((c:___wmul@multiplicand+1)),c
	line	10
	
l36616:
	bcf	status,0
	rrcf	((c:___wmul@multiplier+1)),c
	rrcf	((c:___wmul@multiplier)),c
	line	11
	movf	((c:___wmul@multiplier+1)),c,w
	iorwf ((c:___wmul@multiplier)),c,w

	btfss	status,2
	goto	u69411
	goto	u69410
u69411:
	goto	l5416
u69410:
	
l5418:
	line	12
	movff	(c:___wmul@product),(c:?___wmul)
	movff	(c:___wmul@product+1),(c:?___wmul+1)
	line	13
	
l5419:
	return
	opt stack 0
GLOBAL	__end_of___wmul
	__end_of___wmul:
	signat	___wmul,8314
	global	_ISR

;; *************** function _ISR *****************
;; Defined at:
;;		line 10 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\isr.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       10 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    3
;; This function calls:
;;		_IntUSARTRC
;;		_IntUSARTTR
;;		_ReloadTimer1
;;		_IncRTimer
;;		_IncPmrTimer
;;		_IncKeyTimer
;;		_RefreshWSW
;;		_StabPort
;;		_FormatDataIMY
;;		_IntPWM
;;		_IntPWM2
;;		_I2CSlaveTR
;; This function is called by:
;;		Interrupt level 2
;; This function uses a non-reentrant model
;;
psect	intcode,class=CODE,space=0,reloc=2
global __pintcode
__pintcode:
psect	intcode
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\isr.c"
	line	10
	global	__size_of_ISR
	__size_of_ISR	equ	__end_of_ISR-_ISR
	
_ISR:
	opt	stack 20
	movff	fsr1l+0,??_ISR+0
	movff	fsr1h+0,??_ISR+1
	movff	fsr2l+0,??_ISR+2
	movff	fsr2h+0,??_ISR+3
	movff	prodl+0,??_ISR+4
	movff	prodh+0,??_ISR+5
	movff	tblptrl+0,??_ISR+6
	movff	tblptrh+0,??_ISR+7
	movff	tblptru+0,??_ISR+8
	movff	tablat+0,??_ISR+9
	line	11
	
i2l27490:
;isr.c: 11: if((RCIF)&&(RCIE))
	btfss	c:(31989/8),(31989)&7	;volatile
	goto	i2u4782_41
	goto	i2u4782_40
i2u4782_41:
	goto	i2l27496
i2u4782_40:
	
i2l27492:
	btfss	c:(31981/8),(31981)&7	;volatile
	goto	i2u4783_41
	goto	i2u4783_40
i2u4783_41:
	goto	i2l27496
i2u4783_40:
	line	13
	
i2l27494:
;isr.c: 12: {
;isr.c: 13: IntUSARTRC();
	call	_IntUSARTRC	;wreg free
	line	15
	
i2l27496:
;isr.c: 14: }
;isr.c: 15: if((TXIF)&&(TXIE))
	btfss	c:(31988/8),(31988)&7	;volatile
	goto	i2u4784_41
	goto	i2u4784_40
i2u4784_41:
	goto	i2l27502
i2u4784_40:
	
i2l27498:
	btfss	c:(31980/8),(31980)&7	;volatile
	goto	i2u4785_41
	goto	i2u4785_40
i2u4785_41:
	goto	i2l27502
i2u4785_40:
	line	17
	
i2l27500:
;isr.c: 16: {
;isr.c: 17: IntUSARTTR();
	call	_IntUSARTTR	;wreg free
	line	19
	
i2l27502:
;isr.c: 18: }
;isr.c: 19: if((TMR1IF)&&(TMR1IE))
	btfss	c:(31984/8),(31984)&7	;volatile
	goto	i2u4786_41
	goto	i2u4786_40
i2u4786_41:
	goto	i2l27522
i2u4786_40:
	
i2l27504:
	btfss	c:(31976/8),(31976)&7	;volatile
	goto	i2u4787_41
	goto	i2u4787_40
i2u4787_41:
	goto	i2l27522
i2u4787_40:
	line	21
	
i2l27506:
;isr.c: 20: {
;isr.c: 21: TMR1IF=0;
	bcf	c:(31984/8),(31984)&7	;volatile
	line	22
	
i2l27508:
;isr.c: 22: ReloadTimer1();
	call	_ReloadTimer1	;wreg free
	line	23
	
i2l27510:
;isr.c: 23: IncRTimer();
	call	_IncRTimer	;wreg free
	line	24
	
i2l27512:; BSR set to: 1

;isr.c: 24: IncPmrTimer();
	call	_IncPmrTimer	;wreg free
	line	25
	
i2l27514:; BSR set to: 1

;isr.c: 25: IncKeyTimer();
	call	_IncKeyTimer	;wreg free
	line	27
	
i2l27516:; BSR set to: 2

;isr.c: 27: RefreshWSW();
	call	_RefreshWSW	;wreg free
	line	30
	
i2l27518:; BSR set to: 1

;isr.c: 30: StabPort();
	call	_StabPort	;wreg free
	line	31
	
i2l27520:
;isr.c: 31: FormatDataIMY();
	call	_FormatDataIMY	;wreg free
	line	33
	
i2l27522:
;isr.c: 32: }
;isr.c: 33: if((TMR0IF)&&(TMR0IE))
	btfss	c:(32658/8),(32658)&7	;volatile
	goto	i2u4788_41
	goto	i2u4788_40
i2u4788_41:
	goto	i2l336
i2u4788_40:
	
i2l27524:
	btfss	c:(32661/8),(32661)&7	;volatile
	goto	i2u4789_41
	goto	i2u4789_40
i2u4789_41:
	goto	i2l336
i2u4789_40:
	line	35
	
i2l27526:
;isr.c: 34: {
;isr.c: 35: TMR0IF=0;
	bcf	c:(32658/8),(32658)&7	;volatile
	line	36
	
i2l336:
	line	37
;isr.c: 36: }
;isr.c: 37: if((TMR2IF)&&(TMR2IE))
	btfss	c:(31985/8),(31985)&7	;volatile
	goto	i2u4790_41
	goto	i2u4790_40
i2u4790_41:
	goto	i2l27534
i2u4790_40:
	
i2l27528:
	btfss	c:(31977/8),(31977)&7	;volatile
	goto	i2u4791_41
	goto	i2u4791_40
i2u4791_41:
	goto	i2l27534
i2u4791_40:
	line	39
	
i2l27530:
;isr.c: 38: {
;isr.c: 39: TMR2IF=0;
	bcf	c:(31985/8),(31985)&7	;volatile
	line	40
	
i2l27532:
;isr.c: 40: IntPWM();
	call	_IntPWM	;wreg free
	line	41
;isr.c: 41: IntPWM2();
	call	_IntPWM2	;wreg free
	line	43
	
i2l27534:
;isr.c: 42: }
;isr.c: 43: if((SSPIF)&&(SSPIE))
	btfss	c:(31987/8),(31987)&7	;volatile
	goto	i2u4792_41
	goto	i2u4792_40
i2u4792_41:
	goto	i2l339
i2u4792_40:
	
i2l27536:
	btfss	c:(31979/8),(31979)&7	;volatile
	goto	i2u4793_41
	goto	i2u4793_40
i2u4793_41:
	goto	i2l339
i2u4793_40:
	line	45
	
i2l27538:
;isr.c: 44: {
;isr.c: 45: SSPIF=0;
	bcf	c:(31987/8),(31987)&7	;volatile
	line	46
	
i2l27540:
;isr.c: 46: I2CSlaveTR();
	call	_I2CSlaveTR	;wreg free
	line	48
	
i2l339:
	movff	??_ISR+9,tablat+0
	movff	??_ISR+8,tblptru+0
	movff	??_ISR+7,tblptrh+0
	movff	??_ISR+6,tblptrl+0
	movff	??_ISR+5,prodh+0
	movff	??_ISR+4,prodl+0
	movff	??_ISR+3,fsr2h+0
	movff	??_ISR+2,fsr2l+0
	movff	??_ISR+1,fsr1h+0
	movff	??_ISR+0,fsr1l+0
	retfie f
	opt stack 0
GLOBAL	__end_of_ISR
	__end_of_ISR:
	signat	_ISR,88
	global	_I2CSlaveTR

;; *************** function _I2CSlaveTR *****************
;; Defined at:
;;		line 75 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  dt              1    0        unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/2
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		_SetTData
;;		_LiczCHK
;;		_SetRData
;;		_ReceptDataI2C
;;		_TransmitDataI2C
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text241,class=CODE,space=0,reloc=2
global __ptext241
__ptext241:
psect	text241
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
	line	75
	global	__size_of_I2CSlaveTR
	__size_of_I2CSlaveTR	equ	__end_of_I2CSlaveTR-_I2CSlaveTR
	
_I2CSlaveTR:
	opt	stack 20
	line	78
	
i2l27222:
;i2c_s.c: 76: unsigned char dt;
;i2c_s.c: 78: if(WCOL)
	btfss	c:(32311/8),(32311)&7	;volatile
	goto	i2u4712_41
	goto	i2u4712_40
i2u4712_41:
	goto	i2l169
i2u4712_40:
	line	80
	
i2l27224:
;i2c_s.c: 79: {
;i2c_s.c: 80: WCOL=0;
	bcf	c:(32311/8),(32311)&7	;volatile
	line	81
	
i2l27226:
;i2c_s.c: 81: DtI2C.error=7;
	movlw	low(07h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+01h))&0ffh
	line	83
;i2c_s.c: 83: }
	goto	i2l170
	line	84
	
i2l169:
	line	85
;i2c_s.c: 84: else
;i2c_s.c: 85: if(SSPOV)
	btfss	c:(32310/8),(32310)&7	;volatile
	goto	i2u4713_41
	goto	i2u4713_40
i2u4713_41:
	goto	i2l171
i2u4713_40:
	line	87
	
i2l27228:
;i2c_s.c: 86: {
;i2c_s.c: 87: SSPOV=0;
	bcf	c:(32310/8),(32310)&7	;volatile
	line	88
	
i2l27230:
;i2c_s.c: 88: DtI2C.error=8;
	movlw	low(08h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+01h))&0ffh
	line	89
;i2c_s.c: 89: }
	goto	i2l170
	line	90
	
i2l171:
	line	92
;i2c_s.c: 90: else
;i2c_s.c: 91: {
;i2c_s.c: 92: if(!DA)
	btfsc	c:(32317/8),(32317)&7	;volatile
	goto	i2u4714_41
	goto	i2u4714_40
i2u4714_41:
	goto	i2l173
i2u4714_40:
	line	95
	
i2l27232:
;i2c_s.c: 93: {
;i2c_s.c: 95: if(RW)
	btfss	c:(32314/8),(32314)&7	;volatile
	goto	i2u4715_41
	goto	i2u4715_40
i2u4715_41:
	goto	i2l174
i2u4715_40:
	line	98
	
i2l27234:
;i2c_s.c: 96: {
;i2c_s.c: 98: DtI2C.krok=1;
	movlb	1	; () banked
	bsf	((_DtI2C))&0ffh,0
	line	99
	
i2l27236:; BSR set to: 1

;i2c_s.c: 99: SetTData();
	call	_SetTData	;wreg free
	line	100
;i2c_s.c: 100: BufI2C.Bf[22-1]=LiczCHK(22);
	movlw	(016h)&0ffh
	
	call	_LiczCHK
	movwf	(0+(_BufI2C+016h))&0ffh
	line	101
	
i2l27238:; BSR set to: 2

;i2c_s.c: 101: BufI2C.indeks=0;
	clrf	((_BufI2C))&0ffh
	line	102
	
i2l27240:; BSR set to: 2

;i2c_s.c: 102: dt=SSPBUF;
	movf	((c:4041)),c,w	;volatile
	line	103
;i2c_s.c: 103: }
	goto	i2l173
	line	104
	
i2l174:
	line	107
;i2c_s.c: 104: else
;i2c_s.c: 105: {
;i2c_s.c: 107: DtI2C.krok=0;
	movlb	1	; () banked
	bcf	((_DtI2C))&0ffh,0
	line	108
	
i2l27242:; BSR set to: 1

;i2c_s.c: 108: SetRData();
	call	_SetRData	;wreg free
	line	109
	
i2l27244:; BSR set to: 2

;i2c_s.c: 109: dt=SSPBUF;
	movf	((c:4041)),c,w	;volatile
	goto	i2l176
	line	112
	
i2l173:
	line	115
;i2c_s.c: 111: }
;i2c_s.c: 112: }
;i2c_s.c: 115: if(DtI2C.krok==0)
	movlb	1	; () banked
	
	btfsc	((_DtI2C))&0ffh,0
	goto	i2u4716_41
	goto	i2u4716_40
i2u4716_41:
	goto	i2l177
i2u4716_40:
	line	117
	
i2l27248:; BSR set to: 1

;i2c_s.c: 116: {
;i2c_s.c: 117: ReceptDataI2C();
	call	_ReceptDataI2C	;wreg free
	goto	i2l176
	line	119
	
i2l177:; BSR set to: 1

	line	121
;i2c_s.c: 119: }
;i2c_s.c: 121: if(DtI2C.krok==1)
	
	btfss	((_DtI2C))&0ffh,0
	goto	i2u4717_41
	goto	i2u4717_40
i2u4717_41:
	goto	i2l170
i2u4717_40:
	line	123
	
i2l27252:; BSR set to: 1

;i2c_s.c: 122: {
;i2c_s.c: 123: TransmitDataI2C();
	call	_TransmitDataI2C	;wreg free
	goto	i2l176
	line	126
	
i2l170:; BSR set to: 1

	line	128
;i2c_s.c: 125: }
;i2c_s.c: 126: }
;i2c_s.c: 128: CKP=1;
	bsf	c:(32308/8),(32308)&7	;volatile
	line	129
;i2c_s.c: 129: DtI2C.krok=0;
	bcf	((_DtI2C))&0ffh,0
	line	130
;i2c_s.c: 130: BufI2C.indeks=0;
	movlb	2	; () banked
	clrf	((_BufI2C))&0ffh
	line	131
	
i2l176:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_I2CSlaveTR
	__end_of_I2CSlaveTR:
	signat	_I2CSlaveTR,88
	global	_SetTData

;; *************** function _SetTData *****************
;; Defined at:
;;		line 182 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/2
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    1
;; This function calls:
;;		i2_RdPrt
;; This function is called by:
;;		_I2CSlaveTR
;; This function uses a non-reentrant model
;;
psect	text242,class=CODE,space=0,reloc=2
global __ptext242
__ptext242:
psect	text242
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
	line	182
	global	__size_of_SetTData
	__size_of_SetTData	equ	__end_of_SetTData-_SetTData
	
_SetTData:; BSR set to: 2

	opt	stack 20
	line	186
	
i2l27080:; BSR set to: 1

;i2c_s.c: 186: BufI2C.Bf[0]=DtI2C.kod;
	movff	0+(_DtI2C+02h),0+(_BufI2C+01h)
	line	187
	
i2l27082:; BSR set to: 1

;i2c_s.c: 187: BufI2C.Bf[1]=RdPrt(22);
	movlw	(016h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4680_41
	goto	i2u4680_40
i2u4680_41:
	movlw	1
	goto	i2u4680_46
i2u4680_40:
	movlw	0
i2u4680_46:
	movlb	2	; () banked
	movwf	(0+(_BufI2C+02h))&0ffh
	line	188
;i2c_s.c: 188: BufI2C.Bf[2]=RdPrt(23);
	movlw	(017h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4681_41
	goto	i2u4681_40
i2u4681_41:
	movlw	1
	goto	i2u4681_46
i2u4681_40:
	movlw	0
i2u4681_46:
	movlb	2	; () banked
	movwf	(0+(_BufI2C+03h))&0ffh
	line	189
;i2c_s.c: 189: BufI2C.Bf[3]=RdPrt(24);
	movlw	(018h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4682_41
	goto	i2u4682_40
i2u4682_41:
	movlw	1
	goto	i2u4682_46
i2u4682_40:
	movlw	0
i2u4682_46:
	movlb	2	; () banked
	movwf	(0+(_BufI2C+04h))&0ffh
	line	190
;i2c_s.c: 190: BufI2C.Bf[4]=RdPrt(25);
	movlw	(019h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4683_41
	goto	i2u4683_40
i2u4683_41:
	movlw	1
	goto	i2u4683_46
i2u4683_40:
	movlw	0
i2u4683_46:
	movlb	2	; () banked
	movwf	(0+(_BufI2C+05h))&0ffh
	line	191
	
i2l27084:; BSR set to: 2

;i2c_s.c: 191: BufI2C.Bf[5]=DtI2C.CS;
	movff	0+(_DtI2C+07h),0+(_BufI2C+06h)
	line	192
	
i2l27086:; BSR set to: 2

;i2c_s.c: 192: BufI2C.Bf[6]=DtI2C.STR_PWM;
	movff	0+(_DtI2C+08h),0+(_BufI2C+07h)
	line	193
	
i2l27088:; BSR set to: 2

;i2c_s.c: 193: BufI2C.Bf[7]=DtI2C.MAX_PWM;
	movff	0+(_DtI2C+09h),0+(_BufI2C+08h)
	line	194
	
i2l27090:; BSR set to: 2

;i2c_s.c: 194: BufI2C.Bf[8]=DtI2C.BUF_PWM;
	movff	0+(_DtI2C+0Ah),0+(_BufI2C+09h)
	line	195
	
i2l27092:; BSR set to: 2

;i2c_s.c: 195: BufI2C.Bf[9]=DtI2C.ST_AD1;
	movff	0+(_DtI2C+0Bh),0+(_BufI2C+0Ah)
	line	196
	
i2l27094:; BSR set to: 2

;i2c_s.c: 196: BufI2C.Bf[10]=DtI2C.ST_AD2;
	movff	0+(_DtI2C+0Ch),0+(_BufI2C+0Bh)
	line	197
	
i2l27096:; BSR set to: 2

;i2c_s.c: 197: BufI2C.Bf[11]=DtI2C.ST_AD3;
	movff	0+(_DtI2C+0Dh),0+(_BufI2C+0Ch)
	line	198
	
i2l27098:; BSR set to: 2

;i2c_s.c: 198: BufI2C.Bf[12]=DtI2C.PORTC;
	movff	0+(_DtI2C+0Eh),0+(_BufI2C+0Dh)
	line	199
	
i2l27100:; BSR set to: 2

;i2c_s.c: 199: BufI2C.Bf[13]=DtI2C.PORTD;
	movff	0+(_DtI2C+0Fh),0+(_BufI2C+0Eh)
	line	200
	
i2l27102:; BSR set to: 2

;i2c_s.c: 200: BufI2C.Bf[14]=DtI2C.ST_GLOBAL0;
	movff	0+(_DtI2C+010h),0+(_BufI2C+0Fh)
	line	201
	
i2l27104:; BSR set to: 2

;i2c_s.c: 201: BufI2C.Bf[15]=DtI2C.ST_GLOBAL2;
	movff	0+(_DtI2C+011h),0+(_BufI2C+010h)
	line	202
	
i2l27106:; BSR set to: 2

;i2c_s.c: 202: BufI2C.Bf[16]=DtI2C.ST_GLOBAL3;
	movff	0+(_DtI2C+012h),0+(_BufI2C+011h)
	line	203
	
i2l27108:; BSR set to: 2

;i2c_s.c: 203: BufI2C.Bf[17]=DtI2C.ST_GLOBAL4;
	movff	0+(_DtI2C+013h),0+(_BufI2C+012h)
	line	204
	
i2l27110:; BSR set to: 2

;i2c_s.c: 204: BufI2C.Bf[18]=DtI2C.TPRZ_CW;
	movff	0+(_DtI2C+014h),0+(_BufI2C+013h)
	line	205
	
i2l27112:; BSR set to: 2

;i2c_s.c: 205: BufI2C.Bf[19]=DtI2C.ST0_WSW;
	movff	0+(_DtI2C+015h),0+(_BufI2C+014h)
	line	206
	
i2l27114:; BSR set to: 2

;i2c_s.c: 206: BufI2C.Bf[20]=DtI2C.ERR_BTY;
	movff	0+(_DtI2C+016h),0+(_BufI2C+015h)
	line	207
	
i2l203:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_SetTData
	__end_of_SetTData:
	signat	_SetTData,88
	global	_SetRData

;; *************** function _SetRData *****************
;; Defined at:
;;		line 211 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_I2CSlaveTR
;; This function uses a non-reentrant model
;;
psect	text243,class=CODE,space=0,reloc=2
global __ptext243
__ptext243:
psect	text243
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
	line	211
	global	__size_of_SetRData
	__size_of_SetRData	equ	__end_of_SetRData-_SetRData
	
_SetRData:; BSR set to: 2

	opt	stack 21
	line	212
	
i2l17850:; BSR set to: 1

;i2c_s.c: 212: BufI2C.indeks=0;
	movlb	2	; () banked
	clrf	((_BufI2C))&0ffh
	line	213
	
i2l206:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_SetRData
	__end_of_SetRData:
	signat	_SetRData,88
	global	_ReceptDataI2C

;; *************** function _ReceptDataI2C *****************
;; Defined at:
;;		line 163 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    1
;; This function calls:
;;		_LiczCHK
;;		_ToWork
;; This function is called by:
;;		_I2CSlaveTR
;; This function uses a non-reentrant model
;;
psect	text244,class=CODE,space=0,reloc=2
global __ptext244
__ptext244:
psect	text244
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
	line	163
	global	__size_of_ReceptDataI2C
	__size_of_ReceptDataI2C	equ	__end_of_ReceptDataI2C-_ReceptDataI2C
	
_ReceptDataI2C:; BSR set to: 2

	opt	stack 20
	line	164
	
i2l27116:; BSR set to: 1

;i2c_s.c: 164: if(BufI2C.indeks<3)
	movlw	(03h)&0ffh
	movlb	2	; () banked
	cpfslt	((_BufI2C))&0ffh
	goto	i2u4684_41
	goto	i2u4684_40
i2u4684_41:
	goto	i2l197
i2u4684_40:
	line	166
	
i2l27118:; BSR set to: 2

;i2c_s.c: 165: {
;i2c_s.c: 166: BufI2C.Bf[BufI2C.indeks]=SSPBUF;
	movlw	low(_BufI2C+01h)
	addwf	((_BufI2C))&0ffh,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_BufI2C+01h)
	addwfc	1+c:fsr2l
	movff	(c:4041),indf2	;volatile

	line	167
	
i2l27120:; BSR set to: 2

;i2c_s.c: 167: BufI2C.indeks++;
	incf	((_BufI2C))&0ffh
	line	168
	
i2l27122:; BSR set to: 2

;i2c_s.c: 168: if(BufI2C.indeks==3-1)
	movf	((_BufI2C))&0ffh,w
	xorlw	2

	btfss	status,2
	goto	i2u4685_41
	goto	i2u4685_40
i2u4685_41:
	goto	i2l197
i2u4685_40:
	line	169
	
i2l27124:; BSR set to: 2

;i2c_s.c: 169: if(LiczCHK(3)==BufI2C.Bf[3-1]) ToWork();
	movlw	(03h)&0ffh
	
	call	_LiczCHK
	xorwf	(0+(_BufI2C+03h))&0ffh,w
	btfss	status,2
	goto	i2u4686_41
	goto	i2u4686_40
i2u4686_41:
	goto	i2l197
i2u4686_40:
	
i2l27126:; BSR set to: 2

	call	_ToWork	;wreg free
	line	171
	
i2l197:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_ReceptDataI2C
	__end_of_ReceptDataI2C:
	signat	_ReceptDataI2C,88
	global	_LiczCHK

;; *************** function _LiczCHK *****************
;; Defined at:
;;		line 136 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
;; Parameters:    Size  Location     Type
;;  NBTI2C          1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  NBTI2C          1    6[COMRAM] const unsigned char 
;;  i               1    7[COMRAM] unsigned char 
;;  chk             1    5[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        8 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_I2CSlaveTR
;;		_ReceptDataI2C
;; This function uses a non-reentrant model
;;
psect	text245,class=CODE,space=0,reloc=2
global __ptext245
__ptext245:
psect	text245
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
	line	136
	global	__size_of_LiczCHK
	__size_of_LiczCHK	equ	__end_of_LiczCHK-_LiczCHK
	
_LiczCHK:; BSR set to: 2

	opt	stack 20
;LiczCHK@NBTI2C stored from wreg
	line	138
	movff	wreg,(c:LiczCHK@NBTI2C)
	
i2l17834:; BSR set to: 2

;i2c_s.c: 137: unsigned char i;
;i2c_s.c: 138: unsigned char chk=0;
	clrf	((c:LiczCHK@chk)),c
	line	140
;i2c_s.c: 140: for(i=0;i<NBTI2C-1;i++) chk+=(BufI2C.Bf[i]+i)^0xAA;
	clrf	((c:LiczCHK@i)),c
	
i2l17836:; BSR set to: 2

	movlw	low(-1)
	addwf	((c:LiczCHK@NBTI2C)),c,w
	movwf	(??_LiczCHK+0+0)&0ffh,c
	clrf	1+(??_LiczCHK+0+0)&0ffh,c
	movlw	high(-1)
	addwfc	1+(??_LiczCHK+0+0)&0ffh,c
	movf	(??_LiczCHK+0+1),c,w
	xorlw	80h
	addlw	-((0)^80h)
	movlw	01h
	btfsc	status,2
	subwf	(??_LiczCHK+0+0),c,w
	btfsc	status,0
	goto	i2u2426_41
	goto	i2u2426_40
i2u2426_41:
	goto	i2l17840
i2u2426_40:
	goto	i2l17846
	
i2l17840:; BSR set to: 2

	movlw	low(_BufI2C+01h)
	addwf	((c:LiczCHK@i)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_BufI2C+01h)
	addwfc	1+c:fsr2l
	movf	indf2,w
	addwf	((c:LiczCHK@i)),c,w
	xorlw	low(0AAh)
	addwf	((c:LiczCHK@chk)),c
	
i2l17842:; BSR set to: 2

	incf	((c:LiczCHK@i)),c
	
i2l17844:; BSR set to: 2

	movlw	low(-1)
	addwf	((c:LiczCHK@NBTI2C)),c,w
	movwf	(??_LiczCHK+0+0)&0ffh,c
	clrf	1+(??_LiczCHK+0+0)&0ffh,c
	movlw	high(-1)
	addwfc	1+(??_LiczCHK+0+0)&0ffh,c
	movf	((c:LiczCHK@i)),c,w
	movwf	(??_LiczCHK+2+0)&0ffh,c
	clrf	(??_LiczCHK+2+0+1)&0ffh,c

	movf	(??_LiczCHK+2+1),c,w
	xorlw	80h
	movwf	(??_LiczCHK+4+0)&0ffh,c
	movf	(??_LiczCHK+0+0),c,w
	subwf	(??_LiczCHK+2+0),c,w
	movf	(??_LiczCHK+0+1),c,w
	xorlw	80h
	subwfb	(??_LiczCHK+4+0)&0ffh,c,w
	btfss	status,0
	goto	i2u2427_41
	goto	i2u2427_40
i2u2427_41:
	goto	i2l17840
i2u2427_40:
	line	141
	
i2l17846:; BSR set to: 2

;i2c_s.c: 141: return chk;
	movf	((c:LiczCHK@chk)),c,w
	line	142
	
i2l183:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_LiczCHK
	__end_of_LiczCHK:
	signat	_LiczCHK,4217
	global	_TransmitDataI2C

;; *************** function _TransmitDataI2C *****************
;; Defined at:
;;		line 146 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_I2CSlaveTR
;; This function uses a non-reentrant model
;;
psect	text246,class=CODE,space=0,reloc=2
global __ptext246
__ptext246:
psect	text246
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
	line	146
	global	__size_of_TransmitDataI2C
	__size_of_TransmitDataI2C	equ	__end_of_TransmitDataI2C-_TransmitDataI2C
	
_TransmitDataI2C:; BSR set to: 2

	opt	stack 21
	line	147
	
i2l17852:; BSR set to: 1

;i2c_s.c: 147: if(RW)
	btfss	c:(32314/8),(32314)&7	;volatile
	goto	i2u2428_41
	goto	i2u2428_40
i2u2428_41:
	goto	i2l186
i2u2428_40:
	line	149
	
i2l17854:; BSR set to: 1

;i2c_s.c: 148: {
;i2c_s.c: 149: if(BufI2C.indeks<24) SSPBUF=BufI2C.Bf[BufI2C.indeks];
	movlw	(018h)&0ffh
	movlb	2	; () banked
	cpfslt	((_BufI2C))&0ffh
	goto	i2u2429_41
	goto	i2u2429_40
i2u2429_41:
	goto	i2l187
i2u2429_40:
	
i2l17856:; BSR set to: 2

	movlw	low(_BufI2C+01h)
	addwf	((_BufI2C))&0ffh,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_BufI2C+01h)
	addwfc	1+c:fsr2l
	movf	indf2,w
	movwf	((c:4041)),c	;volatile
	goto	i2l188
	line	150
	
i2l187:; BSR set to: 2

;i2c_s.c: 150: else SSPBUF=BufI2C.Bf[24-1];
	movff	0+(_BufI2C+018h),(c:4041)	;volatile
	
i2l188:; BSR set to: 2

	line	151
;i2c_s.c: 151: CKP=1;
	bsf	c:(32308/8),(32308)&7	;volatile
	line	152
	
i2l17858:; BSR set to: 2

;i2c_s.c: 152: if(BufI2C.indeks<22-1) BufI2C.indeks++;
	movlw	(015h)&0ffh
	cpfslt	((_BufI2C))&0ffh
	goto	i2u2430_41
	goto	i2u2430_40
i2u2430_41:
	goto	i2l191
i2u2430_40:
	
i2l17860:; BSR set to: 2

	incf	((_BufI2C))&0ffh
	goto	i2l191
	line	154
	
i2l186:; BSR set to: 1

	line	156
;i2c_s.c: 154: else
;i2c_s.c: 155: {
;i2c_s.c: 156: CKP=1;
	bsf	c:(32308/8),(32308)&7	;volatile
	line	157
;i2c_s.c: 157: BufI2C.indeks=0;
	movlb	2	; () banked
	clrf	((_BufI2C))&0ffh
	line	159
	
i2l191:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_TransmitDataI2C
	__end_of_TransmitDataI2C:
	signat	_TransmitDataI2C,88
	global	_ToWork

;; *************** function _ToWork *****************
;; Defined at:
;;		line 175 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		None
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ReceptDataI2C
;; This function uses a non-reentrant model
;;
psect	text247,class=CODE,space=0,reloc=2
global __ptext247
__ptext247:
psect	text247
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
	line	175
	global	__size_of_ToWork
	__size_of_ToWork	equ	__end_of_ToWork-_ToWork
	
_ToWork:; BSR set to: 2

	opt	stack 20
	line	177
	
i2l200:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_ToWork
	__end_of_ToWork:
	signat	_ToWork,88
	global	_FormatDataIMY

;; *************** function _FormatDataIMY *****************
;; Defined at:
;;		line 217 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : E/1
;;		On exit  : E/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       10 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    1
;; This function calls:
;;		i2_RdPrt
;;		_BitSet
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text248,class=CODE,space=0,reloc=2
global __ptext248
__ptext248:
psect	text248
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
	line	217
	global	__size_of_FormatDataIMY
	__size_of_FormatDataIMY	equ	__end_of_FormatDataIMY-_FormatDataIMY
	
_FormatDataIMY:; BSR set to: 2

	opt	stack 21
	line	220
	
i2l27256:
;i2c_s.c: 220: switch(DtKNF.tpkt)
	goto	i2l27278
	line	222
;i2c_s.c: 221: {
;i2c_s.c: 222: case 0:
	
i2l210:; BSR set to: 1

	line	223
;i2c_s.c: 223: if(!M._TURBO) DtI2C.kod=0xA0;
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,1
	goto	i2u4718_41
	goto	i2u4718_40
i2u4718_41:
	goto	i2l27260
i2u4718_40:
	
i2l27258:; BSR set to: 0

	movlw	low(0A0h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+02h))&0ffh
	goto	i2l27280
	line	224
	
i2l27260:; BSR set to: 0

;i2c_s.c: 224: else DtI2C.kod=0xA5;
	movlw	low(0A5h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+02h))&0ffh
	goto	i2l27280
	line	226
;i2c_s.c: 226: case 1:
	
i2l214:; BSR set to: 1

	line	227
;i2c_s.c: 227: if(!M._TURBO) DtI2C.kod=0xA2;
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,1
	goto	i2u4719_41
	goto	i2u4719_40
i2u4719_41:
	goto	i2l27264
i2u4719_40:
	
i2l27262:; BSR set to: 0

	movlw	low(0A2h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+02h))&0ffh
	goto	i2l27280
	line	228
	
i2l27264:; BSR set to: 0

;i2c_s.c: 228: else DtI2C.kod=0xA7;
	movlw	low(0A7h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+02h))&0ffh
	goto	i2l27280
	line	230
;i2c_s.c: 230: case 2:
	
i2l217:; BSR set to: 1

	line	231
;i2c_s.c: 231: if(!M._TURBO) DtI2C.kod=0xA4;
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,1
	goto	i2u4720_41
	goto	i2u4720_40
i2u4720_41:
	goto	i2l27268
i2u4720_40:
	
i2l27266:; BSR set to: 0

	movlw	low(0A4h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+02h))&0ffh
	goto	i2l27280
	line	232
	
i2l27268:; BSR set to: 0

;i2c_s.c: 232: else DtI2C.kod=0xA9;
	movlw	low(0A9h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+02h))&0ffh
	goto	i2l27280
	line	234
;i2c_s.c: 234: case 3:
	
i2l220:; BSR set to: 1

	line	235
;i2c_s.c: 235: if(!M._TURBO) DtI2C.kod=0xAA;
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,1
	goto	i2u4721_41
	goto	i2u4721_40
i2u4721_41:
	goto	i2l27272
i2u4721_40:
	
i2l27270:; BSR set to: 0

	movlw	low(0AAh)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+02h))&0ffh
	goto	i2l27280
	line	236
	
i2l27272:; BSR set to: 0

;i2c_s.c: 236: else DtI2C.kod=0xAB;
	movlw	low(0ABh)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+02h))&0ffh
	goto	i2l27280
	line	238
;i2c_s.c: 238: default:
	
i2l223:; BSR set to: 1

	line	239
;i2c_s.c: 239: if(!M._TURBO) DtI2C.kod=0xAA;
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,1
	goto	i2u4722_41
	goto	i2u4722_40
i2u4722_41:
	goto	i2l27272
i2u4722_40:
	goto	i2l27270
	line	220
	
i2l27278:
	movlb	1	; () banked
	movf	(0+(_DtKNF+07h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 4, Range of values is 0 to 3
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           13     7 (average)
;	Chosen strategy is simple_byte

	xorlw	0^0	; case 0
	skipnz
	goto	i2l210
	xorlw	1^0	; case 1
	skipnz
	goto	i2l214
	xorlw	2^1	; case 2
	skipnz
	goto	i2l217
	xorlw	3^2	; case 3
	skipnz
	goto	i2l220
	goto	i2l223

	line	243
	
i2l27280:; BSR set to: 1

;i2c_s.c: 243: if(M._AKTYWNE_KNF) DtI2C.PCO=DtCO.PPCO;
	movlb	0	; () banked
	movf	(1+(_M+018h))&0ffh,w
	iorwf (0+(_M+018h))&0ffh,w

	btfsc	status,2
	goto	i2u4723_41
	goto	i2u4723_40
i2u4723_41:
	goto	i2l27284
i2u4723_40:
	
i2l27282:; BSR set to: 0

	movff	0+(_DtCO+04h),0+(_DtI2C+03h)
	goto	i2l227
	line	245
	
i2l27284:; BSR set to: 0

;i2c_s.c: 244: else
;i2c_s.c: 245: if(M._AKTYWNE_PGD) DtI2C.PCO=DtCO.PPCO;
	movf	(1+(_M+016h))&0ffh,w
	iorwf (0+(_M+016h))&0ffh,w

	btfsc	status,2
	goto	i2u4724_41
	goto	i2u4724_40
i2u4724_41:
	goto	i2l228
i2u4724_40:
	goto	i2l27282
	line	246
	
i2l228:; BSR set to: 0

;i2c_s.c: 246: else DtI2C.PCO=DtCO.PCO;
	movff	0+(_DtCO+03h),0+(_DtI2C+03h)
	
i2l227:; BSR set to: 0

	line	248
;i2c_s.c: 248: DtI2C.CO=DtCO.CO;
	movff	0+(_DtCO+02h),0+(_DtI2C+04h)
	line	250
	
i2l27288:; BSR set to: 0

;i2c_s.c: 250: if(M._AKTYWNE_KNF) DtI2C.PCW=DtCW.PPCW;
	movf	(1+(_M+018h))&0ffh,w
	iorwf (0+(_M+018h))&0ffh,w

	btfsc	status,2
	goto	i2u4725_41
	goto	i2u4725_40
i2u4725_41:
	goto	i2l27292
i2u4725_40:
	
i2l27290:; BSR set to: 0

	movff	0+(_DtCW+04h),0+(_DtI2C+05h)
	goto	i2l231
	line	252
	
i2l27292:; BSR set to: 0

;i2c_s.c: 251: else
;i2c_s.c: 252: if(M._pob_AL) DtI2C.PCW=DtCW.PPCW;
	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfsc	status,2
	goto	i2u4726_41
	goto	i2u4726_40
i2u4726_41:
	goto	i2l232
i2u4726_40:
	goto	i2l27290
	line	253
	
i2l232:; BSR set to: 0

;i2c_s.c: 253: else DtI2C.PCW=DtCW.PCW;
	movff	0+(_DtCW+03h),0+(_DtI2C+05h)
	
i2l231:; BSR set to: 0

	line	255
;i2c_s.c: 255: DtI2C.CW=DtCW.CW;
	movff	0+(_DtCW+02h),0+(_DtI2C+06h)
	line	257
;i2c_s.c: 257: DtI2C.CS=DtCS.CS;
	movff	0+((c:_DtCS)+03h),0+(_DtI2C+07h)
	line	259
;i2c_s.c: 259: DtI2C.STR_PWM=PWM.MSTART;
	movff	0+(_PWM+01Ch),0+(_DtI2C+08h)	;volatile
	line	261
;i2c_s.c: 261: DtI2C.MAX_PWM=PWM.MMAXCO;
	movff	0+(_PWM+01Dh),0+(_DtI2C+09h)	;volatile
	line	263
;i2c_s.c: 263: DtI2C.BUF_PWM=PWM.BufPWM;
	movff	0+(_PWM+01h),0+(_DtI2C+0Ah)	;volatile
	line	265
	
i2l27296:; BSR set to: 0

;i2c_s.c: 265: BitSet(&DtI2C.ST_AD1,0,RdPrt(18));
	movlb	1	; () banked
	movlw	high(_DtI2C+0Bh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Bh)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(012h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4727_41
	goto	i2u4727_40
i2u4727_41:
	movlw	1
	goto	i2u4727_46
i2u4727_40:
	movlw	0
i2u4727_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	266
;i2c_s.c: 266: BitSet(&DtI2C.ST_AD1,1,DtCW._err_CW);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Bh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Bh)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	((_DtCW))&0ffh,0
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	267
;i2c_s.c: 267: BitSet(&DtI2C.ST_AD1,2,DtCO._newPCO);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Bh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Bh)
	movwf	((c:?_BitSet)),c
	movlw	low(02h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_DtCO+01h))&0ffh,7
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	268
;i2c_s.c: 268: BitSet(&DtI2C.ST_AD1,3,DtCW._newPCW);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Bh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Bh)
	movwf	((c:?_BitSet)),c
	movlw	low(03h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_DtCW+01h))&0ffh,0
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	269
;i2c_s.c: 269: BitSet(&DtI2C.ST_AD1,4,RdPrt(14));
	movlb	1	; () banked
	movlw	high(_DtI2C+0Bh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Bh)
	movwf	((c:?_BitSet)),c
	movlw	low(04h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(0Eh)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4728_41
	goto	i2u4728_40
i2u4728_41:
	movlw	1
	goto	i2u4728_46
i2u4728_40:
	movlw	0
i2u4728_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	270
;i2c_s.c: 270: BitSet(&DtI2C.ST_AD1,5,DtCS._lo);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Bh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Bh)
	movwf	((c:?_BitSet)),c
	movlw	low(05h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:_DtCS)),c,1
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	271
;i2c_s.c: 271: BitSet(&DtI2C.ST_AD1,6,DtCS._hi);
	movlw	high(_DtI2C+0Bh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Bh)
	movwf	((c:?_BitSet)),c
	movlw	low(06h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:_DtCS)),c,0
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	272
;i2c_s.c: 272: BitSet(&DtI2C.ST_AD1,7,RdPrt(15));
	movlw	high(_DtI2C+0Bh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Bh)
	movwf	((c:?_BitSet)),c
	movlw	low(07h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(0Fh)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4729_41
	goto	i2u4729_40
i2u4729_41:
	movlw	1
	goto	i2u4729_46
i2u4729_40:
	movlw	0
i2u4729_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	274
;i2c_s.c: 274: BitSet(&DtI2C.ST_AD2,0,DtCO._su_CO);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Ch)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Ch)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	((_DtCO))&0ffh,1
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	275
;i2c_s.c: 275: BitSet(&DtI2C.ST_AD2,1,RdPrt(19));
	movlb	1	; () banked
	movlw	high(_DtI2C+0Ch)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Ch)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(013h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4730_41
	goto	i2u4730_40
i2u4730_41:
	movlw	1
	goto	i2u4730_46
i2u4730_40:
	movlw	0
i2u4730_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	276
;i2c_s.c: 276: BitSet(&DtI2C.ST_AD2,2,DtCO._on_DZ_CO);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Ch)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Ch)
	movwf	((c:?_BitSet)),c
	movlw	low(02h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	((_DtCO))&0ffh,5
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	277
	
i2l27298:; BSR set to: 0

;i2c_s.c: 277: BitSet(&DtI2C.ST_AD2,3,DtCO._cold_CO||DtCO._hot_CO);
	movlw	low(01h)
	movwf	((c:_FormatDataIMY$1065)),c
	
i2l27300:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,2
	goto	i2u4731_41
	goto	i2u4731_40
i2u4731_41:
	goto	i2l27306
i2u4731_40:
	
i2l27302:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,3
	goto	i2u4732_41
	goto	i2u4732_40
i2u4732_41:
	goto	i2l27306
i2u4732_40:
	
i2l27304:; BSR set to: 0

	clrf	((c:_FormatDataIMY$1065)),c
	
i2l27306:; BSR set to: 0

	movlb	1	; () banked
	movlw	high(_DtI2C+0Ch)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Ch)
	movwf	((c:?_BitSet)),c
	movlw	low(03h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movff	(c:_FormatDataIMY$1065),0+((c:?_BitSet)+03h)
	call	_BitSet	;wreg free
	line	278
;i2c_s.c: 278: BitSet(&DtI2C.ST_AD2,4,DtCW._su_CW);
	movlw	high(_DtI2C+0Ch)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Ch)
	movwf	((c:?_BitSet)),c
	movlw	low(04h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	((_DtCW))&0ffh,1
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	279
;i2c_s.c: 279: BitSet(&DtI2C.ST_AD2,5,DtCW._ad_CW);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Ch)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Ch)
	movwf	((c:?_BitSet)),c
	movlw	low(05h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	((_DtCW))&0ffh,2
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	280
;i2c_s.c: 280: BitSet(&DtI2C.ST_AD2,6,RdPrt(6));
	movlb	1	; () banked
	movlw	high(_DtI2C+0Ch)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Ch)
	movwf	((c:?_BitSet)),c
	movlw	low(06h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(06h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4733_41
	goto	i2u4733_40
i2u4733_41:
	movlw	1
	goto	i2u4733_46
i2u4733_40:
	movlw	0
i2u4733_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	281
;i2c_s.c: 281: BitSet(&DtI2C.ST_AD2,7,RdPrt(6));
	movlb	1	; () banked
	movlw	high(_DtI2C+0Ch)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Ch)
	movwf	((c:?_BitSet)),c
	movlw	low(07h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(06h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4734_41
	goto	i2u4734_40
i2u4734_41:
	movlw	1
	goto	i2u4734_46
i2u4734_40:
	movlw	0
i2u4734_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	283
;i2c_s.c: 283: BitSet(&DtI2C.ST_AD3,0,DtCO._hot_CO);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Dh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Dh)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_DtCO+01h))&0ffh,3
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	284
;i2c_s.c: 284: BitSet(&DtI2C.ST_AD3,1,DtCS._no);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Dh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Dh)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:_DtCS)),c,2
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	285
;i2c_s.c: 285: BitSet(&DtI2C.ST_AD3,2,RdPrt(16));
	movlw	high(_DtI2C+0Dh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Dh)
	movwf	((c:?_BitSet)),c
	movlw	low(02h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(010h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4735_41
	goto	i2u4735_40
i2u4735_41:
	movlw	1
	goto	i2u4735_46
i2u4735_40:
	movlw	0
i2u4735_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	286
;i2c_s.c: 286: BitSet(&DtI2C.ST_AD3,3,RdPrt(16));
	movlb	1	; () banked
	movlw	high(_DtI2C+0Dh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Dh)
	movwf	((c:?_BitSet)),c
	movlw	low(03h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(010h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4736_41
	goto	i2u4736_40
i2u4736_41:
	movlw	1
	goto	i2u4736_46
i2u4736_40:
	movlw	0
i2u4736_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	287
;i2c_s.c: 287: BitSet(&DtI2C.ST_AD3,5,M._BLOKUJ_15S);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Dh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Dh)
	movwf	((c:?_BitSet)),c
	movlw	low(05h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+011h))&0ffh,4
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	289
;i2c_s.c: 289: BitSet(&DtI2C.PORTC,0,PORTDbits.RD4);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Eh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Eh)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:3971)),c,4	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	290
;i2c_s.c: 290: BitSet(&DtI2C.PORTC,1,1);
	movlw	high(_DtI2C+0Eh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Eh)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	291
;i2c_s.c: 291: BitSet(&DtI2C.PORTC,3,PORTDbits.RD3);
	movlw	high(_DtI2C+0Eh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Eh)
	movwf	((c:?_BitSet)),c
	movlw	low(03h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:3971)),c,3	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	292
;i2c_s.c: 292: BitSet(&DtI2C.PORTC,5,PORTBbits.RB5);
	movlw	high(_DtI2C+0Eh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Eh)
	movwf	((c:?_BitSet)),c
	movlw	low(05h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:3969)),c,5	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	293
	
i2l27308:; BSR set to: 1

;i2c_s.c: 293: if(!M._TURBO)
	movlb	0	; () banked
	
	btfsc	(0+(_M+01Bh))&0ffh,1
	goto	i2u4737_41
	goto	i2u4737_40
i2u4737_41:
	goto	i2l27312
i2u4737_40:
	line	294
	
i2l27310:; BSR set to: 0

;i2c_s.c: 294: BitSet(&DtI2C.PORTC,6,PORTCbits.RC0);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Eh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Eh)
	movwf	((c:?_BitSet)),c
	movlw	low(06h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:3970)),c,0	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	goto	i2l237
	line	296
	
i2l27312:; BSR set to: 0

;i2c_s.c: 295: else
;i2c_s.c: 296: BitSet(&DtI2C.PORTC,6,PORTAbits.RA6);
	movlb	1	; () banked
	movlw	high(_DtI2C+0Eh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Eh)
	movwf	((c:?_BitSet)),c
	movlw	low(06h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:3968)),c,6	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	
i2l237:; BSR set to: 1

	line	297
;i2c_s.c: 297: BitSet(&DtI2C.PORTC,7,PORTCbits.RC5);
	movlw	high(_DtI2C+0Eh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Eh)
	movwf	((c:?_BitSet)),c
	movlw	low(07h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:3970)),c,5	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	299
;i2c_s.c: 299: BitSet(&DtI2C.PORTD,0,0);
	movlw	high(_DtI2C+0Fh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Fh)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	300
;i2c_s.c: 300: BitSet(&DtI2C.PORTD,1,PORTDbits.RD0);
	movlw	high(_DtI2C+0Fh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Fh)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:3971)),c,0	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	301
;i2c_s.c: 301: BitSet(&DtI2C.PORTD,2,PORTDbits.RD1);
	movlw	high(_DtI2C+0Fh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Fh)
	movwf	((c:?_BitSet)),c
	movlw	low(02h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:3971)),c,1	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	302
;i2c_s.c: 302: BitSet(&DtI2C.PORTD,3,PORTDbits.RD2);
	movlw	high(_DtI2C+0Fh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Fh)
	movwf	((c:?_BitSet)),c
	movlw	low(03h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((c:3971)),c,2	;volatile
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	303
;i2c_s.c: 303: BitSet(&DtI2C.PORTD,4,PFN._res);
	movlw	high(_DtI2C+0Fh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Fh)
	movwf	((c:?_BitSet)),c
	movlw	low(04h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	(0+(_PFN+02h))&0ffh,3
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	304
;i2c_s.c: 304: BitSet(&DtI2C.PORTD,5,PFN._off);
	movlw	high(_DtI2C+0Fh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Fh)
	movwf	((c:?_BitSet)),c
	movlw	low(05h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((_PFN))&0ffh,0
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	305
;i2c_s.c: 305: BitSet(&DtI2C.PORTD,6,PFN._zima);
	movlw	high(_DtI2C+0Fh)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+0Fh)
	movwf	((c:?_BitSet)),c
	movlw	low(06h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	((_PFN))&0ffh,2
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	307
	
i2l27314:; BSR set to: 1

;i2c_s.c: 307: if(DtKNF.tpkt!=0)
	movf	(0+(_DtKNF+07h))&0ffh,w
	btfsc	status,2
	goto	i2u4738_41
	goto	i2u4738_40
i2u4738_41:
	goto	i2l27322
i2u4738_40:
	line	309
	
i2l27316:; BSR set to: 1

;i2c_s.c: 308: {
;i2c_s.c: 309: BitSet(&DtI2C.ST_GLOBAL0,0,(!M._AKTYWNE_SRW&&!M._pob_KCO)?RdPrt(11):0);
	movlb	0	; () banked
	movf	(1+(_M+012h))&0ffh,w
	iorwf (0+(_M+012h))&0ffh,w

	btfss	status,2
	goto	i2u4739_41
	goto	i2u4739_40
i2u4739_41:
	goto	i2l244
i2u4739_40:
	
i2l27318:; BSR set to: 0

	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfsc	status,2
	goto	i2u4740_41
	goto	i2u4740_40
i2u4740_41:
	goto	i2l27320
i2u4740_40:
	
i2l244:; BSR set to: 0

	clrf	((c:_FormatDataIMY$1098)),c
	clrf	((c:_FormatDataIMY$1098+1)),c
	goto	i2l242
	
i2l27320:; BSR set to: 0

	movlw	(0Bh)&0ffh
	
	call	i2_RdPrt
	movlw	0
	btfsc	status,0
	movlw	1
	movwf	((c:_FormatDataIMY$1098)),c
	clrf	((c:_FormatDataIMY$1098+1)),c
	
i2l242:; BSR set to: 0

	movlb	1	; () banked
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movff	(c:_FormatDataIMY$1098),0+((c:?_BitSet)+03h)
	call	_BitSet	;wreg free
	line	310
;i2c_s.c: 310: }
	goto	i2l245
	line	313
	
i2l27322:; BSR set to: 1

;i2c_s.c: 311: else
;i2c_s.c: 312: {
;i2c_s.c: 313: if((M._pob_AL||M._pob_KCW||M._pob_DzCW)&&M._PRACA) BitSet(&DtI2C.ST_GLOBAL0,0,1);
	movlb	0	; () banked
	movf	(1+(_M+06h))&0ffh,w
	iorwf (0+(_M+06h))&0ffh,w

	btfss	status,2
	goto	i2u4741_41
	goto	i2u4741_40
i2u4741_41:
	goto	i2l248
i2u4741_40:
	
i2l27324:; BSR set to: 0

	movf	(1+(_M+02h))&0ffh,w
	iorwf (0+(_M+02h))&0ffh,w

	btfss	status,2
	goto	i2u4742_41
	goto	i2u4742_40
i2u4742_41:
	goto	i2l248
i2u4742_40:
	
i2l27326:; BSR set to: 0

	movf	(1+(_M+0Eh))&0ffh,w
	iorwf (0+(_M+0Eh))&0ffh,w

	btfsc	status,2
	goto	i2u4743_41
	goto	i2u4743_40
i2u4743_41:
	goto	i2l27330
i2u4743_40:
	
i2l248:; BSR set to: 0

	
	btfss	(0+(_M+01Bh))&0ffh,2
	goto	i2u4744_41
	goto	i2u4744_40
i2u4744_41:
	goto	i2l27330
i2u4744_40:
	
i2l27328:; BSR set to: 0

	movlb	1	; () banked
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	goto	i2l245
	line	316
	
i2l27330:; BSR set to: 0

;i2c_s.c: 314: else
;i2c_s.c: 315: {
;i2c_s.c: 316: if(!M._AKTYWNE_SRW&&!M._pob_KCO)
	movf	(1+(_M+012h))&0ffh,w
	iorwf (0+(_M+012h))&0ffh,w

	btfss	status,2
	goto	i2u4745_41
	goto	i2u4745_40
i2u4745_41:
	goto	i2l27344
i2u4745_40:
	
i2l27332:; BSR set to: 0

	movf	((_M+1))&0ffh,w
	iorwf ((_M))&0ffh,w

	btfss	status,2
	goto	i2u4746_41
	goto	i2u4746_40
i2u4746_41:
	goto	i2l27344
i2u4746_40:
	line	317
	
i2l27334:; BSR set to: 0

;i2c_s.c: 317: BitSet(&DtI2C.ST_GLOBAL0,0,(RdPrt(11)&&DtCW._wpz_CW)?1:0);
	clrf	((c:_FormatDataIMY$1099)),c
	
i2l27336:; BSR set to: 0

	movlw	(0Bh)&0ffh
	
	call	i2_RdPrt
	btfss	status,0
	goto	i2u4747_41
	goto	i2u4747_40
i2u4747_41:
	goto	i2l27342
i2u4747_40:
	
i2l27338:; BSR set to: 0

	
	btfss	((_DtCW))&0ffh,3
	goto	i2u4748_41
	goto	i2u4748_40
i2u4748_41:
	goto	i2l27342
i2u4748_40:
	
i2l27340:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_FormatDataIMY$1099)),c
	
i2l27342:; BSR set to: 0

	movlb	1	; () banked
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movff	(c:_FormatDataIMY$1099),0+((c:?_BitSet)+03h)
	call	_BitSet	;wreg free
	goto	i2l245
	line	319
	
i2l27344:; BSR set to: 0

;i2c_s.c: 318: else
;i2c_s.c: 319: BitSet(&DtI2C.ST_GLOBAL0,0,0);
	movlb	1	; () banked
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	321
	
i2l245:; BSR set to: 1

	line	322
;i2c_s.c: 320: }
;i2c_s.c: 321: }
;i2c_s.c: 322: BitSet(&DtI2C.ST_GLOBAL0,1,RdPrt(12));
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(0Ch)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4749_41
	goto	i2u4749_40
i2u4749_41:
	movlw	1
	goto	i2u4749_46
i2u4749_40:
	movlw	0
i2u4749_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	323
;i2c_s.c: 323: BitSet(&DtI2C.ST_GLOBAL0,2,1);
	movlb	1	; () banked
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(02h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	324
;i2c_s.c: 324: BitSet(&DtI2C.ST_GLOBAL0,3,RdPrt(1));
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(03h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(01h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4750_41
	goto	i2u4750_40
i2u4750_41:
	movlw	1
	goto	i2u4750_46
i2u4750_40:
	movlw	0
i2u4750_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	325
	
i2l27346:; BSR set to: 0

;i2c_s.c: 325: if(!M._TURBO)
	
	btfsc	(0+(_M+01Bh))&0ffh,1
	goto	i2u4751_41
	goto	i2u4751_40
i2u4751_41:
	goto	i2l27350
i2u4751_40:
	line	326
	
i2l27348:; BSR set to: 0

;i2c_s.c: 326: BitSet(&DtI2C.ST_GLOBAL0,4,!RdPrt(2));
	movlb	1	; () banked
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(04h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(02h)&0ffh
	
	call	i2_RdPrt
	btfss	status,0
	goto	i2u4752_41
	goto	i2u4752_40
i2u4752_41:
	movlw	1
	goto	i2u4752_46
i2u4752_40:
	movlw	0
i2u4752_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	goto	i2l255
	line	328
	
i2l27350:; BSR set to: 0

;i2c_s.c: 327: else
;i2c_s.c: 328: BitSet(&DtI2C.ST_GLOBAL0,4,!RdPrt(3));
	movlb	1	; () banked
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(04h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(03h)&0ffh
	
	call	i2_RdPrt
	btfss	status,0
	goto	i2u4753_41
	goto	i2u4753_40
i2u4753_41:
	movlw	1
	goto	i2u4753_46
i2u4753_40:
	movlw	0
i2u4753_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	
i2l255:; BSR set to: 0

	line	329
;i2c_s.c: 329: BitSet(&DtI2C.ST_GLOBAL0,5,!RdPrt(8));
	movlb	1	; () banked
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(05h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(08h)&0ffh
	
	call	i2_RdPrt
	btfss	status,0
	goto	i2u4754_41
	goto	i2u4754_40
i2u4754_41:
	movlw	1
	goto	i2u4754_46
i2u4754_40:
	movlw	0
i2u4754_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	330
;i2c_s.c: 330: BitSet(&DtI2C.ST_GLOBAL0,6,PFN._res);
	movlb	1	; () banked
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(06h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	btfsc	(0+(_PFN+02h))&0ffh,3
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	331
;i2c_s.c: 331: BitSet(&DtI2C.ST_GLOBAL0,7,!RdPrt(5));
	movlw	high(_DtI2C+010h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+010h)
	movwf	((c:?_BitSet)),c
	movlw	low(07h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(05h)&0ffh
	
	call	i2_RdPrt
	btfss	status,0
	goto	i2u4755_41
	goto	i2u4755_40
i2u4755_41:
	movlw	1
	goto	i2u4755_46
i2u4755_40:
	movlw	0
i2u4755_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	333
;i2c_s.c: 333: BitSet(&DtI2C.ST_GLOBAL2,0,DtKNF.opdg);
	movlb	1	; () banked
	movlw	high(_DtI2C+011h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+011h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movff	0+(_DtKNF+0Fh),0+((c:?_BitSet)+03h)
	call	_BitSet	;wreg free
	line	334
;i2c_s.c: 334: BitSet(&DtI2C.ST_GLOBAL2,1,DtKNF.rdgz);
	movlw	high(_DtI2C+011h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+011h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movff	0+(_DtKNF+08h),0+((c:?_BitSet)+03h)
	call	_BitSet	;wreg free
	line	335
;i2c_s.c: 335: BitSet(&DtI2C.ST_GLOBAL2,2,0);
	movlw	high(_DtI2C+011h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+011h)
	movwf	((c:?_BitSet)),c
	movlw	low(02h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	336
;i2c_s.c: 336: BitSet(&DtI2C.ST_GLOBAL2,3,RdPrt(9));
	movlw	high(_DtI2C+011h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+011h)
	movwf	((c:?_BitSet)),c
	movlw	low(03h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(09h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4756_41
	goto	i2u4756_40
i2u4756_41:
	movlw	1
	goto	i2u4756_46
i2u4756_40:
	movlw	0
i2u4756_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	337
;i2c_s.c: 337: BitSet(&DtI2C.ST_GLOBAL2,4,RdPrt(9));
	movlb	1	; () banked
	movlw	high(_DtI2C+011h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+011h)
	movwf	((c:?_BitSet)),c
	movlw	low(04h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(09h)&0ffh
	
	call	i2_RdPrt
	btfsc	status,0
	goto	i2u4757_41
	goto	i2u4757_40
i2u4757_41:
	movlw	1
	goto	i2u4757_46
i2u4757_40:
	movlw	0
i2u4757_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	338
	
i2l27352:; BSR set to: 0

;i2c_s.c: 338: BitSet(&DtI2C.ST_GLOBAL2,5,PFN._lato||PFN._zima);
	movlw	low(01h)
	movwf	((c:_FormatDataIMY$1100)),c
	
i2l27354:; BSR set to: 0

	movlb	1	; () banked
	
	btfsc	((_PFN))&0ffh,1
	goto	i2u4758_41
	goto	i2u4758_40
i2u4758_41:
	goto	i2l27360
i2u4758_40:
	
i2l27356:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,2
	goto	i2u4759_41
	goto	i2u4759_40
i2u4759_41:
	goto	i2l27360
i2u4759_40:
	
i2l27358:; BSR set to: 1

	clrf	((c:_FormatDataIMY$1100)),c
	
i2l27360:; BSR set to: 1

	movlw	high(_DtI2C+011h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+011h)
	movwf	((c:?_BitSet)),c
	movlw	low(05h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movff	(c:_FormatDataIMY$1100),0+((c:?_BitSet)+03h)
	call	_BitSet	;wreg free
	line	339
	
i2l27362:; BSR set to: 1

;i2c_s.c: 339: BitSet(&DtI2C.ST_GLOBAL2,6,PFN._lato||PFN._zima);
	movlw	low(01h)
	movwf	((c:_FormatDataIMY$1101)),c
	
i2l27364:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,1
	goto	i2u4760_41
	goto	i2u4760_40
i2u4760_41:
	goto	i2l27370
i2u4760_40:
	
i2l27366:; BSR set to: 1

	
	btfsc	((_PFN))&0ffh,2
	goto	i2u4761_41
	goto	i2u4761_40
i2u4761_41:
	goto	i2l27370
i2u4761_40:
	
i2l27368:; BSR set to: 1

	clrf	((c:_FormatDataIMY$1101)),c
	
i2l27370:; BSR set to: 1

	movlw	high(_DtI2C+011h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+011h)
	movwf	((c:?_BitSet)),c
	movlw	low(06h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movff	(c:_FormatDataIMY$1101),0+((c:?_BitSet)+03h)
	call	_BitSet	;wreg free
	line	340
;i2c_s.c: 340: BitSet(&DtI2C.ST_GLOBAL2,7,!RdPrt(4));
	movlw	high(_DtI2C+011h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+011h)
	movwf	((c:?_BitSet)),c
	movlw	low(07h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	(04h)&0ffh
	
	call	i2_RdPrt
	btfss	status,0
	goto	i2u4762_41
	goto	i2u4762_40
i2u4762_41:
	movlw	1
	goto	i2u4762_46
i2u4762_40:
	movlw	0
i2u4762_46:
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	342
;i2c_s.c: 342: BitSet(&DtI2C.ST_GLOBAL3,0,M._ROZRUCH);
	movlb	1	; () banked
	movlw	high(_DtI2C+012h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+012h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+010h))&0ffh,2
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	343
;i2c_s.c: 343: BitSet(&DtI2C.ST_GLOBAL3,1,M._WYLACZ);
	movlb	1	; () banked
	movlw	high(_DtI2C+012h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+012h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+010h))&0ffh,0
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	344
;i2c_s.c: 344: BitSet(&DtI2C.ST_GLOBAL3,2,M._RUSZ_CIAG);
	movlb	1	; () banked
	movlw	high(_DtI2C+012h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+012h)
	movwf	((c:?_BitSet)),c
	movlw	low(02h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+010h))&0ffh,7
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	345
;i2c_s.c: 345: BitSet(&DtI2C.ST_GLOBAL3,3,M._RUSZ_POMPE);
	movlb	1	; () banked
	movlw	high(_DtI2C+012h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+012h)
	movwf	((c:?_BitSet)),c
	movlw	low(03h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+011h))&0ffh,2
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	346
;i2c_s.c: 346: BitSet(&DtI2C.ST_GLOBAL3,4,M._RUSZ_NTC_CO);
	movlb	1	; () banked
	movlw	high(_DtI2C+012h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+012h)
	movwf	((c:?_BitSet)),c
	movlw	low(04h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+01Ah))&0ffh,0
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	347
;i2c_s.c: 347: BitSet(&DtI2C.ST_GLOBAL3,5,M._RUSZ_PLOMIEN);
	movlb	1	; () banked
	movlw	high(_DtI2C+012h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+012h)
	movwf	((c:?_BitSet)),c
	movlw	low(05h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+011h))&0ffh,0
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	348
;i2c_s.c: 348: BitSet(&DtI2C.ST_GLOBAL3,6,M._RUSZ_STB);
	movlb	1	; () banked
	movlw	high(_DtI2C+012h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+012h)
	movwf	((c:?_BitSet)),c
	movlw	low(06h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+01Ah))&0ffh,3
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	349
;i2c_s.c: 349: BitSet(&DtI2C.ST_GLOBAL3,7,M._BLOKUJ_3M);
	movlb	1	; () banked
	movlw	high(_DtI2C+012h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+012h)
	movwf	((c:?_BitSet)),c
	movlw	low(07h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+011h))&0ffh,3
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	351
;i2c_s.c: 351: BitSet(&DtI2C.ST_GLOBAL4,0,M._RUSZ_48);
	movlb	1	; () banked
	movlw	high(_DtI2C+013h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+013h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+010h))&0ffh,3
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	352
;i2c_s.c: 352: BitSet(&DtI2C.ST_GLOBAL4,1,0);
	movlb	1	; () banked
	movlw	high(_DtI2C+013h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+013h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	353
;i2c_s.c: 353: BitSet(&DtI2C.ST_GLOBAL4,2,M._MODULUJ);
	movlw	high(_DtI2C+013h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+013h)
	movwf	((c:?_BitSet)),c
	movlw	low(02h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+011h))&0ffh,5
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	354
;i2c_s.c: 354: BitSet(&DtI2C.ST_GLOBAL4,3,0);
	movlb	1	; () banked
	movlw	high(_DtI2C+013h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+013h)
	movwf	((c:?_BitSet)),c
	movlw	low(03h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	355
;i2c_s.c: 355: BitSet(&DtI2C.ST_GLOBAL4,4,M._OST_PL);
	movlw	high(_DtI2C+013h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+013h)
	movwf	((c:?_BitSet)),c
	movlw	low(04h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+01Bh))&0ffh,3
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	356
;i2c_s.c: 356: BitSet(&DtI2C.ST_GLOBAL4,5,M._VWYBIEG);
	movlb	1	; () banked
	movlw	high(_DtI2C+013h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+013h)
	movwf	((c:?_BitSet)),c
	movlw	low(05h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+010h))&0ffh,6
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	357
;i2c_s.c: 357: BitSet(&DtI2C.ST_GLOBAL4,6,0);
	movlb	1	; () banked
	movlw	high(_DtI2C+013h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+013h)
	movwf	((c:?_BitSet)),c
	movlw	low(06h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	358
;i2c_s.c: 358: BitSet(&DtI2C.ST_GLOBAL4,7,M._ZMKCOCW);
	movlw	high(_DtI2C+013h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+013h)
	movwf	((c:?_BitSet)),c
	movlw	low(07h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	0
	movlb	0	; () banked
	btfsc	(0+(_M+010h))&0ffh,1
	movlw	1
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	360
	
i2l27372:; BSR set to: 0

;i2c_s.c: 360: DtI2C.TPRZ_CW=0;
	movlb	1	; () banked
	clrf	(0+(_DtI2C+014h))&0ffh
	line	362
	
i2l27374:; BSR set to: 1

;i2c_s.c: 362: DtI2C.ST0_WSW=0;
	clrf	(0+(_DtI2C+015h))&0ffh
	line	363
	
i2l27376:; BSR set to: 1

;i2c_s.c: 363: BitSet(&DtI2C.ST0_WSW,0,!M.ERR_BTY&&M._RUSZ_PLOMIEN);
	clrf	((c:_FormatDataIMY$1102)),c
	
i2l27378:; BSR set to: 1

	movlb	0	; () banked
	tstfsz	(0+(_M+022h))&0ffh
	goto	i2u4763_41
	goto	i2u4763_40
i2u4763_41:
	goto	i2l27384
i2u4763_40:
	
i2l27380:; BSR set to: 0

	
	btfss	(0+(_M+011h))&0ffh,0
	goto	i2u4764_41
	goto	i2u4764_40
i2u4764_41:
	goto	i2l27384
i2u4764_40:
	
i2l27382:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_FormatDataIMY$1102)),c
	
i2l27384:; BSR set to: 0

	movlb	1	; () banked
	movlw	high(_DtI2C+015h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+015h)
	movwf	((c:?_BitSet)),c
	movlw	low(0)
	movwf	(0+((c:?_BitSet)+02h)),c
	movff	(c:_FormatDataIMY$1102),0+((c:?_BitSet)+03h)
	call	_BitSet	;wreg free
	line	364
	
i2l27386:; BSR set to: 1

;i2c_s.c: 364: BitSet(&DtI2C.ST0_WSW,1,!M.ERR_BTY&&M._RUSZ_STB);
	clrf	((c:_FormatDataIMY$1103)),c
	
i2l27388:; BSR set to: 1

	movlb	0	; () banked
	tstfsz	(0+(_M+022h))&0ffh
	goto	i2u4765_41
	goto	i2u4765_40
i2u4765_41:
	goto	i2l27394
i2u4765_40:
	
i2l27390:; BSR set to: 0

	
	btfss	(0+(_M+01Ah))&0ffh,3
	goto	i2u4766_41
	goto	i2u4766_40
i2u4766_41:
	goto	i2l27394
i2u4766_40:
	
i2l27392:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_FormatDataIMY$1103)),c
	
i2l27394:; BSR set to: 0

	movlb	1	; () banked
	movlw	high(_DtI2C+015h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+015h)
	movwf	((c:?_BitSet)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movff	(c:_FormatDataIMY$1103),0+((c:?_BitSet)+03h)
	call	_BitSet	;wreg free
	line	365
	
i2l27396:; BSR set to: 1

;i2c_s.c: 365: BitSet(&DtI2C.ST0_WSW,2,!M.ERR_BTY&&M._RUSZ_CIAG&&M._prb_CIG);
	clrf	((c:_FormatDataIMY$1104)),c
	
i2l27398:; BSR set to: 1

	movlb	0	; () banked
	tstfsz	(0+(_M+022h))&0ffh
	goto	i2u4767_41
	goto	i2u4767_40
i2u4767_41:
	goto	i2l27406
i2u4767_40:
	
i2l27400:; BSR set to: 0

	
	btfss	(0+(_M+010h))&0ffh,7
	goto	i2u4768_41
	goto	i2u4768_40
i2u4768_41:
	goto	i2l27406
i2u4768_40:
	
i2l27402:; BSR set to: 0

	
	btfss	(0+(_M+01Ch))&0ffh,0
	goto	i2u4769_41
	goto	i2u4769_40
i2u4769_41:
	goto	i2l27406
i2u4769_40:
	
i2l27404:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_FormatDataIMY$1104)),c
	
i2l27406:; BSR set to: 0

	movlb	1	; () banked
	movlw	high(_DtI2C+015h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+015h)
	movwf	((c:?_BitSet)),c
	movlw	low(02h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movff	(c:_FormatDataIMY$1104),0+((c:?_BitSet)+03h)
	call	_BitSet	;wreg free
	line	366
	
i2l27408:; BSR set to: 1

;i2c_s.c: 366: if(DtKNF.robg==0) BitSet(&DtI2C.ST0_WSW,4,!M.ERR_BTY&&M._RUSZ_POMPE&&M._prb_PRZ);
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	i2u4770_41
	goto	i2u4770_40
i2u4770_41:
	goto	i2l27442
i2u4770_40:
	
i2l27410:; BSR set to: 1

	clrf	((c:_FormatDataIMY$1105)),c
	movlb	0	; () banked
	tstfsz	(0+(_M+022h))&0ffh
	goto	i2u4771_41
	goto	i2u4771_40
i2u4771_41:
	goto	i2l27418
i2u4771_40:
	
i2l27412:; BSR set to: 0

	
	btfss	(0+(_M+011h))&0ffh,2
	goto	i2u4772_41
	goto	i2u4772_40
i2u4772_41:
	goto	i2l27418
i2u4772_40:
	
i2l27414:; BSR set to: 0

	
	btfss	(0+(_M+01Ch))&0ffh,1
	goto	i2u4773_41
	goto	i2u4773_40
i2u4773_41:
	goto	i2l27418
i2u4773_40:
	
i2l27416:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:_FormatDataIMY$1105)),c
	
i2l27418:; BSR set to: 0

	movlb	1	; () banked
	movlw	high(_DtI2C+015h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+015h)
	movwf	((c:?_BitSet)),c
	movlw	low(04h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movff	(c:_FormatDataIMY$1105),0+((c:?_BitSet)+03h)
	call	_BitSet	;wreg free
	goto	i2l27442
	line	371
	
i2l27420:; BSR set to: 0

;i2c_s.c: 371: DtI2C.ERR_BTY=1;
	movlw	low(01h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+016h))&0ffh
	line	372
;i2c_s.c: 372: break;
	goto	i2l282
	line	374
	
i2l27422:; BSR set to: 0

;i2c_s.c: 374: DtI2C.ERR_BTY=2;
	movlw	low(02h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+016h))&0ffh
	line	375
;i2c_s.c: 375: break;
	goto	i2l282
	line	377
	
i2l27424:; BSR set to: 0

;i2c_s.c: 377: DtI2C.ERR_BTY=3;
	movlw	low(03h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+016h))&0ffh
	line	378
;i2c_s.c: 378: break;
	goto	i2l282
	line	380
	
i2l27426:; BSR set to: 0

;i2c_s.c: 380: BitSet(&DtI2C.ST0_WSW,3,1);
	movlb	1	; () banked
	movlw	high(_DtI2C+015h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+015h)
	movwf	((c:?_BitSet)),c
	movlw	low(03h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	381
;i2c_s.c: 381: break;
	goto	i2l282
	line	382
;i2c_s.c: 382: case 0x05:
	
i2l275:; BSR set to: 0

	line	383
;i2c_s.c: 383: if(DtKNF.robg==0) DtI2C.ERR_BTY=5;
	movlb	1	; () banked
	tstfsz	(0+(_DtKNF+0Eh))&0ffh
	goto	i2u4774_41
	goto	i2u4774_40
i2u4774_41:
	goto	i2l27430
i2u4774_40:
	
i2l27428:; BSR set to: 1

	movlw	low(05h)
	movwf	(0+(_DtI2C+016h))&0ffh
	goto	i2l282
	line	384
	
i2l27430:; BSR set to: 1

;i2c_s.c: 384: else BitSet(&DtI2C.ST0_WSW,4,1);
	movlw	high(_DtI2C+015h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+015h)
	movwf	((c:?_BitSet)),c
	movlw	low(04h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	goto	i2l282
	line	387
	
i2l27432:; BSR set to: 0

;i2c_s.c: 387: DtI2C.ERR_BTY=6;
	movlw	low(06h)
	movlb	1	; () banked
	movwf	(0+(_DtI2C+016h))&0ffh
	line	388
;i2c_s.c: 388: break;
	goto	i2l282
	line	390
	
i2l27434:; BSR set to: 0

;i2c_s.c: 390: BitSet(&DtI2C.ST0_WSW,5,1);
	movlb	1	; () banked
	movlw	high(_DtI2C+015h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+015h)
	movwf	((c:?_BitSet)),c
	movlw	low(05h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	391
;i2c_s.c: 391: break;
	goto	i2l282
	line	393
	
i2l27436:; BSR set to: 0

;i2c_s.c: 393: BitSet(&DtI2C.ST0_WSW,6,1);
	movlb	1	; () banked
	movlw	high(_DtI2C+015h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+015h)
	movwf	((c:?_BitSet)),c
	movlw	low(06h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	394
;i2c_s.c: 394: break;
	goto	i2l282
	line	396
	
i2l27438:; BSR set to: 0

;i2c_s.c: 396: BitSet(&DtI2C.ST0_WSW,7,1);
	movlb	1	; () banked
	movlw	high(_DtI2C+015h)
	movwf	((c:?_BitSet+1)),c
	movlw	low(_DtI2C+015h)
	movwf	((c:?_BitSet)),c
	movlw	low(07h)
	movwf	(0+((c:?_BitSet)+02h)),c
	movlw	low(01h)
	movwf	(0+((c:?_BitSet)+03h)),c
	call	_BitSet	;wreg free
	line	397
;i2c_s.c: 397: break;
	goto	i2l282
	line	368
	
i2l27442:; BSR set to: 1

	movlb	0	; () banked
	movf	(0+(_M+022h))&0ffh,w
	; Switch size 1, requested type "space"
; Number of cases is 9, Range of values is 1 to 9
; switch strategies available:
; Name         Instructions Cycles
; simple_byte           28    15 (average)
;	Chosen strategy is simple_byte

	xorlw	1^0	; case 1
	skipnz
	goto	i2l27420
	xorlw	2^1	; case 2
	skipnz
	goto	i2l27422
	xorlw	3^2	; case 3
	skipnz
	goto	i2l27424
	xorlw	4^3	; case 4
	skipnz
	goto	i2l27426
	xorlw	5^4	; case 5
	skipnz
	goto	i2l275
	xorlw	6^5	; case 6
	skipnz
	goto	i2l27432
	xorlw	7^6	; case 7
	skipnz
	goto	i2l27434
	xorlw	8^7	; case 8
	skipnz
	goto	i2l27436
	xorlw	9^8	; case 9
	skipnz
	goto	i2l27438
	goto	i2l282

	line	399
	
i2l282:
	return
	opt stack 0
GLOBAL	__end_of_FormatDataIMY
	__end_of_FormatDataIMY:
	signat	_FormatDataIMY,88
	global	_BitSet

;; *************** function _BitSet *****************
;; Defined at:
;;		line 22 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\bit.c"
;; Parameters:    Size  Location     Type
;;  data            2    2[COMRAM] PTR unsigned char 
;;		 -> DtI2C(23), 
;;  nbit            1    4[COMRAM] const unsigned char 
;;  bt              1    5[COMRAM] const unsigned char 
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : E/0
;;		On exit  : E/0
;;		Unchanged: FFFFFFF1/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FormatDataIMY
;; This function uses a non-reentrant model
;;
psect	text249,class=CODE,space=0,reloc=2
global __ptext249
__ptext249:
psect	text249
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\bit.c"
	line	22
	global	__size_of_BitSet
	__size_of_BitSet	equ	__end_of_BitSet-_BitSet
	
_BitSet:
	opt	stack 21
	line	23
	
i2l27074:
;bit.c: 23: if(bt) *data|=1<<nbit;
	movf	((c:BitSet@bt)),c,w
	btfsc	status,2
	goto	i2u4677_41
	goto	i2u4677_40
i2u4677_41:
	goto	i2l27078
i2u4677_40:
	
i2l27076:
	movff	(c:BitSet@nbit),??_BitSet+0+0
	movlw	(01h)&0ffh
	movwf	(??_BitSet+1+0)&0ffh,c
	incf	(??_BitSet+0+0),c
	goto	i2u4678_44
i2u4678_45:
	bcf	status,0
	rlcf	((??_BitSet+1+0)),c
i2u4678_44:
	decfsz	(??_BitSet+0+0),c
	goto	i2u4678_45
	movff	(c:BitSet@data),fsr2l
	movff	(c:BitSet@data+1),fsr2h
	movf	((??_BitSet+1+0)),c,w
	iorwf	indf2
	goto	i2l80
	line	24
	
i2l27078:
;bit.c: 24: else *data&=~(1<<nbit);
	movff	(c:BitSet@nbit),??_BitSet+0+0
	movlw	(01h)&0ffh
	movwf	(??_BitSet+1+0)&0ffh,c
	incf	(??_BitSet+0+0),c
	goto	i2u4679_44
i2u4679_45:
	bcf	status,0
	rlcf	((??_BitSet+1+0)),c
i2u4679_44:
	decfsz	(??_BitSet+0+0),c
	goto	i2u4679_45
	movf	((??_BitSet+1+0)),c,w
	xorlw	0ffh
	movwf	(??_BitSet+2+0)&0ffh,c
	movff	(c:BitSet@data),fsr2l
	movff	(c:BitSet@data+1),fsr2h
	movf	((??_BitSet+2+0)),c,w
	andwf	indf2
	line	25
	
i2l80:
	return
	opt stack 0
GLOBAL	__end_of_BitSet
	__end_of_BitSet:
	signat	_BitSet,12408
	global	_IntUSARTRC

;; *************** function _IntUSARTRC *****************
;; Defined at:
;;		line 59 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		_VerifyNDatCHK
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text250,class=CODE,space=0,reloc=2
global __ptext250
__ptext250:
psect	text250
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
	line	59
	global	__size_of_IntUSARTRC
	__size_of_IntUSARTRC	equ	__end_of_IntUSARTRC-_IntUSARTRC
	
_IntUSARTRC:
	opt	stack 20
	line	60
	
i2l27444:
;uart9b.c: 60: if(ADDEN&&RX9D)
	btfss	c:(32091/8),(32091)&7	;volatile
	goto	i2u4775_41
	goto	i2u4775_40
i2u4775_41:
	goto	i2l4040
i2u4775_40:
	
i2l27446:
	btfss	c:(32088/8),(32088)&7	;volatile
	goto	i2u4776_41
	goto	i2u4776_40
i2u4776_41:
	goto	i2l4040
i2u4776_40:
	line	62
	
i2l27448:
;uart9b.c: 61: {
;uart9b.c: 62: RSerial=RCREG;
	movff	(c:4014),(c:_RSerial)	;volatile
	line	63
	
i2l27450:
;uart9b.c: 63: if(RSerial==0x02)
	movf	((c:_RSerial)),c,w	;volatile
	xorlw	2

	btfss	status,2
	goto	i2u4777_41
	goto	i2u4777_40
i2u4777_41:
	goto	i2l4042
i2u4777_40:
	line	65
	
i2l27452:
;uart9b.c: 64: {
;uart9b.c: 65: ADDEN=0;
	bcf	c:(32091/8),(32091)&7	;volatile
	line	66
;uart9b.c: 66: UADt.indeks=0;
	movlb	1	; () banked
	clrf	(0+(_UADt+01h))&0ffh
	line	67
	
i2l27454:; BSR set to: 1

;uart9b.c: 67: bufRUART[UADt.indeks++]=RSerial;
	movlb	3	; () banked
	movlw	low(_bufRUART)
	movlb	1	; () banked
	addwf	(0+(_UADt+01h))&0ffh,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlb	3	; () banked
	movlw	high(_bufRUART)
	addwfc	1+c:fsr2l
	movff	(c:_RSerial),indf2	;volatile

	
i2l27456:; BSR set to: 3

	movlb	1	; () banked
	incf	(0+(_UADt+01h))&0ffh
	line	68
	
i2l27458:; BSR set to: 1

;uart9b.c: 68: UADt.RData=1;
	bsf	((_UADt))&0ffh,0
	goto	i2l4042
	line	71
	
i2l4040:
	line	72
;uart9b.c: 71: }
;uart9b.c: 72: RSerial=RCREG;
	movff	(c:4014),(c:_RSerial)	;volatile
	line	73
	
i2l27462:
;uart9b.c: 73: if (UADt.indeks<35)
	movlw	(023h)&0ffh
	movlb	1	; () banked
	cpfslt	(0+(_UADt+01h))&0ffh
	goto	i2u4778_41
	goto	i2u4778_40
i2u4778_41:
	goto	i2l4044
i2u4778_40:
	line	75
	
i2l27464:; BSR set to: 1

;uart9b.c: 74: {
;uart9b.c: 75: bufRUART[UADt.indeks++]=RSerial;
	movlb	3	; () banked
	movlw	low(_bufRUART)
	movlb	1	; () banked
	addwf	(0+(_UADt+01h))&0ffh,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlb	3	; () banked
	movlw	high(_bufRUART)
	addwfc	1+c:fsr2l
	movff	(c:_RSerial),indf2	;volatile

	
i2l27466:; BSR set to: 3

	movlb	1	; () banked
	incf	(0+(_UADt+01h))&0ffh
	line	76
	
i2l27468:; BSR set to: 1

;uart9b.c: 76: UADt.RNData=bufRUART[1];
	movff	0+(_bufRUART+01h),0+(_UADt+02h)
	line	77
	
i2l27470:; BSR set to: 1

;uart9b.c: 77: if(VerifyNDatCHK(UADt.RNData))
	movf	(0+(_UADt+02h))&0ffh,w
	
	call	_VerifyNDatCHK
	iorlw	0
	btfsc	status,2
	goto	i2u4779_41
	goto	i2u4779_40
i2u4779_41:
	goto	i2l4044
i2u4779_40:
	line	80
	
i2l27472:; BSR set to: 1

;uart9b.c: 78: {
;uart9b.c: 80: UADt.RNData=UADt.RNData&0b00011111;
	movf	(0+(_UADt+02h))&0ffh,w
	andlw	low(01Fh)
	movwf	(0+(_UADt+02h))&0ffh
	line	81
	
i2l27474:; BSR set to: 1

;uart9b.c: 81: if(UADt.RNData>35) UADt.RNData=35;
	lfsr	2,_UADt+02h
	movlw	(024h-1)
	cpfsgt	indf2
	goto	i2u4780_41
	goto	i2u4780_40
i2u4780_41:
	goto	i2l27478
i2u4780_40:
	
i2l27476:; BSR set to: 1

	movlw	low(023h)
	movwf	(0+(_UADt+02h))&0ffh
	line	82
	
i2l27478:; BSR set to: 1

;uart9b.c: 82: if (UADt.indeks>=UADt.RNData)
	movf	(0+(_UADt+02h))&0ffh,w
	subwf	(0+(_UADt+01h))&0ffh,w
	btfss	status,0
	goto	i2u4781_41
	goto	i2u4781_40
i2u4781_41:
	goto	i2l4042
i2u4781_40:
	line	84
	
i2l27480:; BSR set to: 1

;uart9b.c: 83: {
;uart9b.c: 84: ADDEN=1;
	bsf	c:(32091/8),(32091)&7	;volatile
	line	85
;uart9b.c: 85: UADt.RData=0;
	bcf	((_UADt))&0ffh,0
	line	86
;uart9b.c: 86: UADt.REnd=1;
	bsf	((_UADt))&0ffh,1
	goto	i2l4042
	line	89
	
i2l4044:; BSR set to: 1

	line	91
;uart9b.c: 89: else
;uart9b.c: 90: {
;uart9b.c: 91: ADDEN=1;
	bsf	c:(32091/8),(32091)&7	;volatile
	line	92
;uart9b.c: 92: UADt.RData=0;
	bcf	((_UADt))&0ffh,0
	line	93
;uart9b.c: 93: UADt.REnd=0;
	bcf	((_UADt))&0ffh,1
	line	94
;uart9b.c: 94: UADt.RErrBUF=1;
	bsf	((_UADt))&0ffh,3
	line	105
	
i2l4042:
	return
	opt stack 0
GLOBAL	__end_of_IntUSARTRC
	__end_of_IntUSARTRC:
	signat	_IntUSARTRC,88
	global	_IntUSARTTR

;; *************** function _IntUSARTTR *****************
;; Defined at:
;;		line 128 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text251,class=CODE,space=0,reloc=2
global __ptext251
__ptext251:
psect	text251
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
	line	128
	global	__size_of_IntUSARTTR
	__size_of_IntUSARTTR	equ	__end_of_IntUSARTTR-_IntUSARTTR
	
_IntUSARTTR:
	opt	stack 22
	line	129
	
i2l17870:
;uart9b.c: 129: if(!UADt.indeks) TX9D=1;
	movlb	1	; () banked
	tstfsz	(0+(_UADt+01h))&0ffh
	goto	i2u2432_41
	goto	i2u2432_40
i2u2432_41:
	goto	i2l4054
i2u2432_40:
	
i2l17872:; BSR set to: 1

	bsf	c:(32096/8),(32096)&7	;volatile
	goto	i2l17874
	line	130
	
i2l4054:; BSR set to: 1

;uart9b.c: 130: else TX9D=0;
	bcf	c:(32096/8),(32096)&7	;volatile
	line	131
	
i2l17874:; BSR set to: 1

;uart9b.c: 131: if(UADt.TNData>35) UADt.TNData=35;
	lfsr	2,_UADt+03h
	movlw	(024h-1)
	cpfsgt	indf2
	goto	i2u2433_41
	goto	i2u2433_40
i2u2433_41:
	goto	i2l17878
i2u2433_40:
	
i2l17876:; BSR set to: 1

	movlw	low(023h)
	movwf	(0+(_UADt+03h))&0ffh
	line	132
	
i2l17878:; BSR set to: 1

;uart9b.c: 132: if(UADt.indeks>35-1) UADt.indeks=35-1;
	lfsr	2,_UADt+01h
	movlw	(023h-1)
	cpfsgt	indf2
	goto	i2u2434_41
	goto	i2u2434_40
i2u2434_41:
	goto	i2l17882
i2u2434_40:
	
i2l17880:; BSR set to: 1

	movlw	low(022h)
	movwf	(0+(_UADt+01h))&0ffh
	line	133
	
i2l17882:; BSR set to: 1

;uart9b.c: 133: TXREG=bufTUART[UADt.indeks++];
	movlb	3	; () banked
	movlw	low(_bufTUART)
	movlb	1	; () banked
	addwf	(0+(_UADt+01h))&0ffh,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlb	3	; () banked
	movlw	high(_bufTUART)
	addwfc	1+c:fsr2l
	movf	indf2,w
	movwf	((c:4013)),c	;volatile
	
i2l17884:; BSR set to: 3

	movlb	1	; () banked
	incf	(0+(_UADt+01h))&0ffh
	line	134
	
i2l17886:; BSR set to: 1

;uart9b.c: 134: if(UADt.indeks<UADt.TNData) UADt.TData=1;
	movf	(0+(_UADt+03h))&0ffh,w
	cpfslt	(0+(_UADt+01h))&0ffh
	goto	i2u2435_41
	goto	i2u2435_40
i2u2435_41:
	goto	i2l4058
i2u2435_40:
	
i2l17888:; BSR set to: 1

	bsf	((_UADt))&0ffh,4
	goto	i2l4060
	line	135
	
i2l4058:; BSR set to: 1

	line	137
;uart9b.c: 135: else
;uart9b.c: 136: {
;uart9b.c: 137: UADt.TData=0;
	bcf	((_UADt))&0ffh,4
	line	138
;uart9b.c: 138: UADt.TEnd=1;
	bsf	((_UADt))&0ffh,5
	line	139
;uart9b.c: 139: TXIE=0;
	bcf	c:(31980/8),(31980)&7	;volatile
	line	141
	
i2l4060:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_IntUSARTTR
	__end_of_IntUSARTTR:
	signat	_IntUSARTTR,88
	global	_ReloadTimer1

;; *************** function _ReloadTimer1 *****************
;; Defined at:
;;		line 55 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\timer1.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : 0/0
;;		Unchanged: FFFFFFFF/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text252,class=CODE,space=0,reloc=2
global __ptext252
__ptext252:
psect	text252
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\timer1.c"
	line	55
	global	__size_of_ReloadTimer1
	__size_of_ReloadTimer1	equ	__end_of_ReloadTimer1-_ReloadTimer1
	
_ReloadTimer1:; BSR set to: 1

	opt	stack 22
	line	56
	
i2l8036:
;timer1.c: 56: TMR1H=(unsigned char)(RldT1>>8);
	movlw	low(063h)
	movwf	((c:4047)),c	;volatile
	line	57
;timer1.c: 57: TMR1L=(unsigned char)(RldT1&0xFF);
	movlw	low(0BFh)
	movwf	((c:4046)),c	;volatile
	line	58
	
i2l3756:
	return
	opt stack 0
GLOBAL	__end_of_ReloadTimer1
	__end_of_ReloadTimer1:
	signat	_ReloadTimer1,88
	global	_IncRTimer

;; *************** function _IncRTimer *****************
;; Defined at:
;;		line 120 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1    0[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text253,class=CODE,space=0,reloc=2
global __ptext253
__ptext253:
psect	text253
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
	line	120
	global	__size_of_IncRTimer
	__size_of_IncRTimer	equ	__end_of_IncRTimer-_IncRTimer
	
_IncRTimer:
	opt	stack 22
	line	135
	
i2l17890:
;rtimer.c: 122: unsigned char i;
;rtimer.c: 135: for(i=0;i<11;i++)
	clrf	((c:IncRTimer@i)),c
	line	137
	
i2l17896:
;rtimer.c: 136: {
;rtimer.c: 137: dSk[i].cS++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlb	1	; () banked
	movlw	low(_dSk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	138
;rtimer.c: 138: if(dSk[i].cS>9)
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_dSk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	(0Ah-1)
	cpfsgt	indf2
	goto	i2u2436_41
	goto	i2u2436_40
i2u2436_41:
	goto	i2l17902
i2u2436_40:
	line	140
	
i2l17898:; BSR set to: 1

;rtimer.c: 139: {
;rtimer.c: 140: dSk[i].cS=0;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_dSk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	141
;rtimer.c: 141: if(dSk[i].dS<255) dSk[i].dS++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_dSk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	xorlw	0FFh

	btfsc	status,2
	goto	i2u2437_41
	goto	i2u2437_40
i2u2437_41:
	goto	i2l17902
i2u2437_40:
	
i2l17900:; BSR set to: 1

	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_dSk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_dSk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	135
	
i2l17902:; BSR set to: 1

	incf	((c:IncRTimer@i)),c
	
i2l17904:; BSR set to: 1

	movlw	(0Bh-1)
	cpfsgt	((c:IncRTimer@i)),c
	goto	i2u2438_41
	goto	i2u2438_40
i2u2438_41:
	goto	i2l17896
i2u2438_40:
	line	148
	
i2l17906:; BSR set to: 1

;rtimer.c: 142: }
;rtimer.c: 143: }
;rtimer.c: 148: CommRT.cS++;
	incf	((c:_CommRT)),c	;volatile
	line	149
	
i2l17908:; BSR set to: 1

;rtimer.c: 149: if(CommRT.cS>9)
	movlw	(0Ah-1)
	cpfsgt	((c:_CommRT)),c	;volatile
	goto	i2u2439_41
	goto	i2u2439_40
i2u2439_41:
	goto	i2l3728
i2u2439_40:
	line	151
	
i2l17910:; BSR set to: 1

;rtimer.c: 150: {
;rtimer.c: 151: CommRT.cS=0;
	clrf	((c:_CommRT)),c	;volatile
	line	152
	
i2l17912:; BSR set to: 1

;rtimer.c: 152: CommRT.dS++;
	incf	(0+((c:_CommRT)+01h)),c	;volatile
	line	157
	
i2l17914:; BSR set to: 1

;rtimer.c: 157: for(i=0;i<16;i++)
	clrf	((c:IncRTimer@i)),c
	line	159
	
i2l17920:; BSR set to: 1

;rtimer.c: 158: {
;rtimer.c: 159: Sk[i].dS++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Sk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	160
;rtimer.c: 160: if(Sk[i].dS>9)
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Sk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	(0Ah-1)
	cpfsgt	indf2
	goto	i2u2440_41
	goto	i2u2440_40
i2u2440_41:
	goto	i2l17926
i2u2440_40:
	line	162
	
i2l17922:; BSR set to: 1

;rtimer.c: 161: {
;rtimer.c: 162: Sk[i].dS=0;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Sk)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	163
;rtimer.c: 163: if(Sk[i].S<255) Sk[i].S++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Sk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	xorlw	0FFh

	btfsc	status,2
	goto	i2u2441_41
	goto	i2u2441_40
i2u2441_41:
	goto	i2l17926
i2u2441_40:
	
i2l17924:; BSR set to: 1

	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Sk+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Sk+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	157
	
i2l17926:; BSR set to: 1

	incf	((c:IncRTimer@i)),c
	
i2l17928:; BSR set to: 1

	movlw	(010h-1)
	cpfsgt	((c:IncRTimer@i)),c
	goto	i2u2442_41
	goto	i2u2442_40
i2u2442_41:
	goto	i2l17920
i2u2442_40:
	line	168
	
i2l17930:; BSR set to: 1

;rtimer.c: 164: }
;rtimer.c: 165: }
;rtimer.c: 168: if(CommRT.dS>9)
	lfsr	2,(c:_CommRT)+01h	;volatile
	movlw	(0Ah-1)
	cpfsgt	indf2
	goto	i2u2443_41
	goto	i2u2443_40
i2u2443_41:
	goto	i2l3728
i2u2443_40:
	line	170
	
i2l17932:; BSR set to: 1

;rtimer.c: 169: {
;rtimer.c: 170: CommRT.dS=0;
	clrf	(0+((c:_CommRT)+01h)),c	;volatile
	line	171
	
i2l17934:; BSR set to: 1

;rtimer.c: 171: CommRT.S++;
	incf	(0+((c:_CommRT)+02h)),c	;volatile
	line	176
	
i2l17936:; BSR set to: 1

;rtimer.c: 176: for(i=0;i<7;i++)
	clrf	((c:IncRTimer@i)),c
	line	178
	
i2l17942:; BSR set to: 1

;rtimer.c: 177: {
;rtimer.c: 178: Mn[i].S++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Mn)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Mn)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	179
;rtimer.c: 179: if(Mn[i].S>59)
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Mn)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Mn)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	(03Ch-1)
	cpfsgt	indf2
	goto	i2u2444_41
	goto	i2u2444_40
i2u2444_41:
	goto	i2l17948
i2u2444_40:
	line	181
	
i2l17944:; BSR set to: 1

;rtimer.c: 180: {
;rtimer.c: 181: Mn[i].S=0;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Mn)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Mn)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	182
;rtimer.c: 182: if(Mn[i].M<255) Mn[i].M++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Mn+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Mn+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	xorlw	0FFh

	btfsc	status,2
	goto	i2u2445_41
	goto	i2u2445_40
i2u2445_41:
	goto	i2l17948
i2u2445_40:
	
i2l17946:; BSR set to: 1

	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Mn+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Mn+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	176
	
i2l17948:; BSR set to: 1

	incf	((c:IncRTimer@i)),c
	
i2l17950:; BSR set to: 1

	movlw	(07h-1)
	cpfsgt	((c:IncRTimer@i)),c
	goto	i2u2446_41
	goto	i2u2446_40
i2u2446_41:
	goto	i2l17942
i2u2446_40:
	line	187
	
i2l17952:; BSR set to: 1

;rtimer.c: 183: }
;rtimer.c: 184: }
;rtimer.c: 187: if (CommRT.S>59)
	lfsr	2,(c:_CommRT)+02h	;volatile
	movlw	(03Ch-1)
	cpfsgt	indf2
	goto	i2u2447_41
	goto	i2u2447_40
i2u2447_41:
	goto	i2l3728
i2u2447_40:
	line	189
	
i2l17954:; BSR set to: 1

;rtimer.c: 188: {
;rtimer.c: 189: CommRT.S=0;
	clrf	(0+((c:_CommRT)+02h)),c	;volatile
	line	194
;rtimer.c: 194: for(i=0;i<3;i++)
	clrf	((c:IncRTimer@i)),c
	line	196
	
i2l17960:; BSR set to: 1

;rtimer.c: 195: {
;rtimer.c: 196: Gd[i].M++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Gd)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Gd)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	197
;rtimer.c: 197: if(Gd[i].M>59)
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Gd)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Gd)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	(03Ch-1)
	cpfsgt	indf2
	goto	i2u2448_41
	goto	i2u2448_40
i2u2448_41:
	goto	i2l17966
i2u2448_40:
	line	199
	
i2l17962:; BSR set to: 1

;rtimer.c: 198: {
;rtimer.c: 199: Gd[i].M=0;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Gd)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Gd)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	200
;rtimer.c: 200: if(Gd[i].G<255) Gd[i].G++;
	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Gd+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Gd+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	xorlw	0FFh

	btfsc	status,2
	goto	i2u2449_41
	goto	i2u2449_40
i2u2449_41:
	goto	i2l17966
i2u2449_40:
	
i2l17964:; BSR set to: 1

	movf	((c:IncRTimer@i)),c,w
	mullw	02h
	movlw	low(_Gd+01h)	;volatile
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_Gd+01h)	;volatile
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	194
	
i2l17966:; BSR set to: 1

	incf	((c:IncRTimer@i)),c
	
i2l17968:; BSR set to: 1

	movlw	(03h-1)
	cpfsgt	((c:IncRTimer@i)),c
	goto	i2u2450_41
	goto	i2u2450_40
i2u2450_41:
	goto	i2l17960
i2u2450_40:
	line	210
	
i2l3728:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_IncRTimer
	__end_of_IncRTimer:
	signat	_IncRTimer,88
	global	_IncPmrTimer

;; *************** function _IncPmrTimer *****************
;; Defined at:
;;		line 70 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text254,class=CODE,space=0,reloc=2
global __ptext254
__ptext254:
psect	text254
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
	line	70
	global	__size_of_IncPmrTimer
	__size_of_IncPmrTimer	equ	__end_of_IncPmrTimer-_IncPmrTimer
	
_IncPmrTimer:; BSR set to: 1

	opt	stack 22
	line	71
	
i2l17970:; BSR set to: 1

;pomiar.c: 71: if(PmrtimFlt1<0xff) PmrtimFlt1++;
	incf	((_PmrtimFlt1))&0ffh,w

	btfsc	status,2
	goto	i2u2451_41
	goto	i2u2451_40
i2u2451_41:
	goto	i2l17974
i2u2451_40:
	
i2l17972:; BSR set to: 1

	incf	((_PmrtimFlt1))&0ffh
	line	72
	
i2l17974:; BSR set to: 1

;pomiar.c: 72: if(PmrtimFlt2<0xff) PmrtimFlt2++;
	incf	((_PmrtimFlt2))&0ffh,w

	btfsc	status,2
	goto	i2u2452_41
	goto	i2u2452_40
i2u2452_41:
	goto	i2l17978
i2u2452_40:
	
i2l17976:; BSR set to: 1

	incf	((_PmrtimFlt2))&0ffh
	line	73
	
i2l17978:; BSR set to: 1

;pomiar.c: 73: if(PmrtimFlt3<0xffff) PmrtimFlt3++;
	incf	((_PmrtimFlt3))&0ffh,w
	btfsc	status,2
	incf ((_PmrtimFlt3+1))&0ffh,w

	btfsc	status,2
	goto	i2u2453_41
	goto	i2u2453_40
i2u2453_41:
	goto	i2l1876
i2u2453_40:
	
i2l17980:; BSR set to: 1

	infsnz	((_PmrtimFlt3))&0ffh
	incf	((_PmrtimFlt3+1))&0ffh
	line	74
	
i2l1876:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_IncPmrTimer
	__end_of_IncPmrTimer:
	signat	_IncPmrTimer,88
	global	_IncKeyTimer

;; *************** function _IncKeyTimer *****************
;; Defined at:
;;		line 27 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1    0[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/2
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text255,class=CODE,space=0,reloc=2
global __ptext255
__ptext255:
psect	text255
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
	line	27
	global	__size_of_IncKeyTimer
	__size_of_IncKeyTimer	equ	__end_of_IncKeyTimer-_IncKeyTimer
	
_IncKeyTimer:; BSR set to: 1

	opt	stack 22
	line	30
	
i2l17982:; BSR set to: 1

;keypad.c: 28: unsigned char i;
;keypad.c: 30: for(i=0;i<7;i++)
	clrf	((c:IncKeyTimer@i)),c
	line	32
	
i2l17988:
;keypad.c: 31: {
;keypad.c: 32: ky[i].cS++;
	movf	((c:IncKeyTimer@i)),c,w
	mullw	05h
	movlb	2	; () banked
	movlw	low(_ky+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_ky+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	33
;keypad.c: 33: if(ky[i].cS>9)
	movf	((c:IncKeyTimer@i)),c,w
	mullw	05h
	movlw	low(_ky+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_ky+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	(0Ah-1)
	cpfsgt	indf2
	goto	i2u2454_41
	goto	i2u2454_40
i2u2454_41:
	goto	i2l17994
i2u2454_40:
	line	35
	
i2l17990:; BSR set to: 2

;keypad.c: 34: {
;keypad.c: 35: ky[i].cS=0;
	movf	((c:IncKeyTimer@i)),c,w
	mullw	05h
	movlw	low(_ky+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_ky+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	36
;keypad.c: 36: if(ky[i].dS<255) ky[i].dS++;
	movf	((c:IncKeyTimer@i)),c,w
	mullw	05h
	movlw	low(_ky+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_ky+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	xorlw	0FFh

	btfsc	status,2
	goto	i2u2455_41
	goto	i2u2455_40
i2u2455_41:
	goto	i2l17994
i2u2455_40:
	
i2l17992:; BSR set to: 2

	movf	((c:IncKeyTimer@i)),c,w
	mullw	05h
	movlw	low(_ky+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_ky+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	30
	
i2l17994:; BSR set to: 2

	incf	((c:IncKeyTimer@i)),c
	
i2l17996:; BSR set to: 2

	movlw	(07h-1)
	cpfsgt	((c:IncKeyTimer@i)),c
	goto	i2u2456_41
	goto	i2u2456_40
i2u2456_41:
	goto	i2l17988
i2u2456_40:
	
i2l4630:; BSR set to: 2

	line	63
;keypad.c: 37: }
;keypad.c: 38: }
;keypad.c: 63: for(i=0;i<7;i++)
	clrf	((c:IncKeyTimer@i)),c
	line	65
	
i2l18002:; BSR set to: 2

;keypad.c: 64: {
;keypad.c: 65: xxky[i].cS++;
	movf	((c:IncKeyTimer@i)),c,w
	mullw	05h
	movlw	low(_xxky+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_xxky+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	66
;keypad.c: 66: if(xxky[i].cS>9)
	movf	((c:IncKeyTimer@i)),c,w
	mullw	05h
	movlw	low(_xxky+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_xxky+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	(0Ah-1)
	cpfsgt	indf2
	goto	i2u2457_41
	goto	i2u2457_40
i2u2457_41:
	goto	i2l18008
i2u2457_40:
	line	68
	
i2l18004:; BSR set to: 2

;keypad.c: 67: {
;keypad.c: 68: xxky[i].cS=0;
	movf	((c:IncKeyTimer@i)),c,w
	mullw	05h
	movlw	low(_xxky+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_xxky+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	69
;keypad.c: 69: if(xxky[i].dS<255) xxky[i].dS++;
	movf	((c:IncKeyTimer@i)),c,w
	mullw	05h
	movlw	low(_xxky+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_xxky+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	xorlw	0FFh

	btfsc	status,2
	goto	i2u2458_41
	goto	i2u2458_40
i2u2458_41:
	goto	i2l18008
i2u2458_40:
	
i2l18006:; BSR set to: 2

	movf	((c:IncKeyTimer@i)),c,w
	mullw	05h
	movlw	low(_xxky+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_xxky+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	63
	
i2l18008:; BSR set to: 2

	incf	((c:IncKeyTimer@i)),c
	
i2l18010:; BSR set to: 2

	movlw	(07h-1)
	cpfsgt	((c:IncKeyTimer@i)),c
	goto	i2u2459_41
	goto	i2u2459_40
i2u2459_41:
	goto	i2l18002
i2u2459_40:
	line	73
	
i2l4637:; BSR set to: 2

	return
	opt stack 0
GLOBAL	__end_of_IncKeyTimer
	__end_of_IncKeyTimer:
	signat	_IncKeyTimer,88
	global	_RefreshWSW

;; *************** function _RefreshWSW *****************
;; Defined at:
;;		line 307 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    2
;; This function calls:
;;		_KolProc
;;		_SetPrWswData
;;		_FormatWswData
;;		_PrintWswData
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text256,class=CODE,space=0,reloc=2
global __ptext256
__ptext256:
psect	text256
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	307
	global	__size_of_RefreshWSW
	__size_of_RefreshWSW	equ	__end_of_RefreshWSW-_RefreshWSW
	
_RefreshWSW:; BSR set to: 2

	opt	stack 20
	line	309
	
i2l27482:; BSR set to: 2

;wsw.c: 309: KolProc();
	call	_KolProc	;wreg free
	line	311
	
i2l27484:
;wsw.c: 311: SetPrWswData();
	call	_SetPrWswData	;wreg free
	line	312
	
i2l27486:
;wsw.c: 312: FormatWswData();
	call	_FormatWswData	;wreg free
	line	313
	
i2l27488:; BSR set to: 1

;wsw.c: 313: PrintWswData();
	call	_PrintWswData	;wreg free
	line	314
	
i2l4453:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_RefreshWSW
	__end_of_RefreshWSW:
	signat	_RefreshWSW,88
	global	_StabPort

;; *************** function _StabPort *****************
;; Defined at:
;;		line 263 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1    7[COMRAM] unsigned char 
;;  delay           1    6[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : E/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    1
;; This function calls:
;;		i2_RefStan
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text257,class=CODE,space=0,reloc=2
global __ptext257
__ptext257:
psect	text257
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
	line	263
	global	__size_of_StabPort
	__size_of_StabPort	equ	__end_of_StabPort-_StabPort
	
_StabPort:; BSR set to: 1

	opt	stack 21
	line	268
	
i2l27128:; BSR set to: 1

;port.c: 264: static unsigned char tim=0;
;port.c: 265: unsigned char i,delay;
;port.c: 268: if(tim++<5) return;
	movlw	(06h)&0ffh
	incf	((StabPort@tim))&0ffh
	movlb	1	; () banked
	cpfslt	((StabPort@tim))&0ffh
	goto	i2u4687_41
	goto	i2u4687_40
i2u4687_41:
	goto	i2l2349
i2u4687_40:
	goto	i2l2350
	
i2l2349:; BSR set to: 1

	line	269
;port.c: 269: tim=0;
	clrf	((StabPort@tim))&0ffh
	line	272
	
i2l27132:; BSR set to: 1

;port.c: 272: RefStan();
	call	i2_RefStan	;wreg free
	line	275
	
i2l27134:; BSR set to: 0

;port.c: 275: for(i=0;i<26;i++)
	clrf	((c:StabPort@i)),c
	line	277
	
i2l27140:; BSR set to: 0

;port.c: 276: {
;port.c: 277: if(!SPort[i].Timer)
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2)&0ffh,w
	rrcf	wreg,f
	andlw	(1<<6)-1
	iorlw	0
	btfss	status,2
	goto	i2u4688_41
	goto	i2u4688_40
i2u4688_41:
	goto	i2l27150
i2u4688_40:
	line	279
	
i2l27142:; BSR set to: 0

;port.c: 278: {
;port.c: 279: if(SPort[i].Output==SPort[i].Input)
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movf	(indf2)&0ffh,w
	andlw	(1<<1)-1
	movwf	(??_StabPort+0+0)&0ffh,c
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2)&0ffh,w
	andlw	(1<<1)-1
	xorwf	((??_StabPort+0+0)),c,w
	btfss	status,2
	goto	i2u4689_41
	goto	i2u4689_40
i2u4689_41:
	goto	i2l27148
i2u4689_40:
	goto	i2l27166
	line	281
	
i2l27148:; BSR set to: 0

;port.c: 281: else SPort[i].Timer++;
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2)&0ffh,w
	movwf	(??_StabPort+0+0)&0ffh,c
	rrcf	(??_StabPort+0+0)&0ffh,c,w
	andlw	(1<<6)-1
	movwf	(??_StabPort+0+0)&0ffh,c
	incf	(??_StabPort+0+0),c
	rlcf	(??_StabPort+0+0)&0ffh,c
	rlcf	(??_StabPort+0+0)&0ffh,c
	movf	(indf2)&0ffh,w
	xorwf	(??_StabPort+0+0)&0ffh,c,w
	andlw	not (((1<<6)-1)<<2)
	xorwf	(??_StabPort+0+0)&0ffh,c,w
	movwf	(indf2)&0ffh
	goto	i2l27166
	line	285
	
i2l27150:; BSR set to: 0

;port.c: 283: else
;port.c: 284: {
;port.c: 285: if(!SPort[i].Output) delay=Nastawa[i].Delay1;
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movf	indf2,w
	movwf	(??_StabPort+0+0)&0ffh,c
	
	btfsc	((??_StabPort+0+0)),c,1
	goto	i2u4690_41
	goto	i2u4690_40
i2u4690_41:
	goto	i2l27154
i2u4690_40:
	
i2l27152:; BSR set to: 0

	movf	((c:StabPort@i)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Nastawa)
	movwf	(??_StabPort+0+0)&0ffh,c
	movff	(??_StabPort+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,(c:StabPort@delay)
	goto	i2l27156
	line	286
	
i2l27154:; BSR set to: 0

;port.c: 286: else delay=Nastawa[i].Delay2;
	movf	((c:StabPort@i)),c,w
	mullw	02h
	movff	prodl,??_StabPort+0+0
	movlw	01h
	addwf	(??_StabPort+0+0),c
	movf	(??_StabPort+0+0),c,w
	addlw	low(_Nastawa)
	movwf	(??_StabPort+1+0)&0ffh,c
	movff	(??_StabPort+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,(c:StabPort@delay)
	line	288
	
i2l27156:; BSR set to: 0

;port.c: 288: if(SPort[i].Timer>=delay)
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2)&0ffh,w
	rrcf	wreg,f
	andlw	(1<<6)-1
	movwf	(??_StabPort+0+0)&0ffh,c
	movf	((c:StabPort@delay)),c,w
	subwf	((??_StabPort+0+0)),c,w
	btfss	status,0
	goto	i2u4691_41
	goto	i2u4691_40
i2u4691_41:
	goto	i2l27160
i2u4691_40:
	line	290
	
i2l27158:; BSR set to: 0

;port.c: 289: {
;port.c: 290: SPort[i].Timer=0;
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	291
;port.c: 291: SPort[i].Output=SPort[i].Input;
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movf	(indf2)&0ffh,w
	andlw	(1<<1)-1
	movwf	(??_StabPort+0+0)&0ffh,c
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rlncf	((??_StabPort+0+0)),c
	movf	(indf2)&0ffh,w
	xorwf	((??_StabPort+0+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_StabPort+0+0)),c,w
	movwf	(indf2)&0ffh
	line	292
;port.c: 292: }
	goto	i2l27166
	line	295
	
i2l27160:; BSR set to: 0

;port.c: 293: else
;port.c: 294: {
;port.c: 295: if (SPort[i].Output==SPort[i].Input)
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movf	(indf2)&0ffh,w
	andlw	(1<<1)-1
	movwf	(??_StabPort+0+0)&0ffh,c
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2)&0ffh,w
	andlw	(1<<1)-1
	xorwf	((??_StabPort+0+0)),c,w
	btfss	status,2
	goto	i2u4692_41
	goto	i2u4692_40
i2u4692_41:
	goto	i2l27148
i2u4692_40:
	line	296
	
i2l27162:; BSR set to: 0

;port.c: 296: SPort[i].Timer=0;
	movf	((c:StabPort@i)),c,w
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	275
	
i2l27166:; BSR set to: 0

	incf	((c:StabPort@i)),c
	
i2l27168:; BSR set to: 0

	movlw	(01Ah-1)
	cpfsgt	((c:StabPort@i)),c
	goto	i2u4693_41
	goto	i2u4693_40
i2u4693_41:
	goto	i2l27140
i2u4693_40:
	line	301
	
i2l2350:
	return
	opt stack 0
GLOBAL	__end_of_StabPort
	__end_of_StabPort:
	signat	_StabPort,88
	global	_IntPWM

;; *************** function _IntPWM *****************
;; Defined at:
;;		line 488 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : 0/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text258,class=CODE,space=0,reloc=2
global __ptext258
__ptext258:
psect	text258
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
	line	488
	global	__size_of_IntPWM
	__size_of_IntPWM	equ	__end_of_IntPWM-_IntPWM
	
_IntPWM:
	opt	stack 22
	line	491
	
i2l18012:
;pwm.c: 489: static bit btOsc=0;
;pwm.c: 491: if(PWM._ENPWM)
	movlb	0	; () banked
	
	btfss	((_PWM))&0ffh,0	;volatile
	goto	i2u2460_41
	goto	i2u2460_40
i2u2460_41:
	goto	i2l2616
i2u2460_40:
	line	493
	
i2l18014:; BSR set to: 0

;pwm.c: 492: {
;pwm.c: 493: PWM.NewPWM=PWM.BufPWM;
	movff	0+(_PWM+01h),0+(_PWM+04h)	;volatile
	line	494
;pwm.c: 494: PWM.NewOSC=PWM.BufOSC;
	movff	0+(_PWM+02h),0+(_PWM+03h)	;volatile
	line	495
	
i2l2616:; BSR set to: 0

	line	496
;pwm.c: 495: }
;pwm.c: 496: if(PWM._ENOSC)
	
	btfss	((_PWM))&0ffh,1	;volatile
	goto	i2u2461_41
	goto	i2u2461_40
i2u2461_41:
	goto	i2l18024
i2u2461_40:
	line	499
	
i2l18016:; BSR set to: 0

;pwm.c: 497: {
;pwm.c: 499: if(!btOsc)
	movlb	(IntPWM@btOsc/8) >> 8
	btfsc	(IntPWM@btOsc/8),c,(IntPWM@btOsc)&7
	goto	i2u2462_41
	goto	i2u2462_40
i2u2462_41:
	goto	i2l2618
i2u2462_40:
	line	501
	
i2l18018:
;pwm.c: 500: {
;pwm.c: 501: btOsc=1;
	movlb	(IntPWM@btOsc/8) >> 8
	bsf	(IntPWM@btOsc/8),c,(IntPWM@btOsc)&7
	line	502
	
i2l18020:
;pwm.c: 502: PWM.NewPWM-=PWM.NewOSC;
	movlb	0	; () banked
	movf	(0+(_PWM+03h))&0ffh,w	;volatile
	subwf	(0+(_PWM+04h))&0ffh	;volatile
	line	503
;pwm.c: 503: }
	goto	i2l18024
	line	504
	
i2l2618:
	line	506
;pwm.c: 504: else
;pwm.c: 505: {
;pwm.c: 506: btOsc=0;
	movlb	(IntPWM@btOsc/8) >> 8
	bcf	(IntPWM@btOsc/8),c,(IntPWM@btOsc)&7
	line	507
	
i2l18022:
;pwm.c: 507: PWM.NewPWM+=PWM.NewOSC;
	movlb	0	; () banked
	movf	(0+(_PWM+03h))&0ffh,w	;volatile
	addwf	(0+(_PWM+04h))&0ffh	;volatile
	line	511
	
i2l18024:; BSR set to: 0

;pwm.c: 508: }
;pwm.c: 509: }
;pwm.c: 511: if(PWM.NewPWM>PWM.HIPWM) PWM.NewPWM=PWM.HIPWM;
	movf	(0+(_PWM+04h))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+08h))&0ffh	;volatile
	goto	i2u2463_41
	goto	i2u2463_40
i2u2463_41:
	goto	i2l2620
i2u2463_40:
	
i2l18026:; BSR set to: 0

	movff	0+(_PWM+08h),0+(_PWM+04h)	;volatile
	
i2l2620:; BSR set to: 0

	line	519
;pwm.c: 519: DC1B1=((PWM.NewPWM&0b00000001)>0)?1:0;
	
	btfsc	(0+(_PWM+04h))&0ffh,(0)&7	;volatile
	goto	i2u2464_41
	goto	i2u2464_40
i2u2464_41:
	bsf	c:(32237/8),(32237)&7	;volatile
	goto	i2u2465_45
i2u2464_40:
	bcf	c:(32237/8),(32237)&7	;volatile
i2u2465_45:
	line	520
;pwm.c: 520: DC1B0=0;
	bcf	c:(32236/8),(32236)&7	;volatile
	line	521
	
i2l18028:
;pwm.c: 521: CCPR1L=PWM.NewPWM>>1;
	movlb	0	; () banked
	bcf	status,0
	rrcf	(0+(_PWM+04h))&0ffh,w	;volatile
	movwf	((c:4030)),c	;volatile
	line	528
	
i2l2621:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_IntPWM
	__end_of_IntPWM:
	signat	_IntPWM,88
	global	_IntPWM2

;; *************** function _IntPWM2 *****************
;; Defined at:
;;		line 532 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/0
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        0 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_ISR
;; This function uses a non-reentrant model
;;
psect	text259,class=CODE,space=0,reloc=2
global __ptext259
__ptext259:
psect	text259
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
	line	532
	global	__size_of_IntPWM2
	__size_of_IntPWM2	equ	__end_of_IntPWM2-_IntPWM2
	
_IntPWM2:; BSR set to: 0

	opt	stack 22
	line	535
	
i2l18030:; BSR set to: 0

;pwm.c: 533: static bit btOsc=0;
;pwm.c: 535: if(PWM._ENPWM2)
	
	btfss	(0+(_PWM+05h))&0ffh,0	;volatile
	goto	i2u2466_41
	goto	i2u2466_40
i2u2466_41:
	goto	i2l18034
i2u2466_40:
	line	537
	
i2l18032:; BSR set to: 0

;pwm.c: 536: {
;pwm.c: 537: PWM.NewPWM2=PWM.BufPWM2;
	movff	0+(_PWM+06h),0+(_PWM+07h)	;volatile
	line	539
	
i2l18034:; BSR set to: 0

;pwm.c: 538: }
;pwm.c: 539: if(PWM.NewPWM2>PWM.HIPWM) PWM.NewPWM2=PWM.HIPWM;
	movf	(0+(_PWM+07h))&0ffh,w	;volatile
	cpfslt	(0+(_PWM+08h))&0ffh	;volatile
	goto	i2u2467_41
	goto	i2u2467_40
i2u2467_41:
	goto	i2l2627
i2u2467_40:
	
i2l18036:; BSR set to: 0

	movff	0+(_PWM+08h),0+(_PWM+07h)	;volatile
	
i2l2627:; BSR set to: 0

	line	549
;pwm.c: 549: DC2B1=((PWM.NewPWM2&0b00000001)>0)?1:0;
	
	btfsc	(0+(_PWM+07h))&0ffh,(0)&7	;volatile
	goto	i2u2468_41
	goto	i2u2468_40
i2u2468_41:
	bsf	c:(32213/8),(32213)&7	;volatile
	goto	i2u2469_45
i2u2468_40:
	bcf	c:(32213/8),(32213)&7	;volatile
i2u2469_45:
	line	550
;pwm.c: 550: DC2B0=0;
	bcf	c:(32212/8),(32212)&7	;volatile
	line	551
	
i2l18038:
;pwm.c: 551: CCPR2L=PWM.NewPWM2>>1;
	movlb	0	; () banked
	bcf	status,0
	rrcf	(0+(_PWM+07h))&0ffh,w	;volatile
	movwf	((c:4027)),c	;volatile
	line	558
	
i2l2628:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_of_IntPWM2
	__end_of_IntPWM2:
	signat	_IntPWM2,88
	global	_VerifyNDatCHK

;; *************** function _VerifyNDatCHK *****************
;; Defined at:
;;		line 250 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
;; Parameters:    Size  Location     Type
;;  Data            1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Data            1    6[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0, cstack
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        1 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    1
;; This function calls:
;;		_SetNDatCHK
;; This function is called by:
;;		_IntUSARTRC
;; This function uses a non-reentrant model
;;
psect	text260,class=CODE,space=0,reloc=2
global __ptext260
__ptext260:
psect	text260
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
	line	250
	global	__size_of_VerifyNDatCHK
	__size_of_VerifyNDatCHK	equ	__end_of_VerifyNDatCHK-_VerifyNDatCHK
	
_VerifyNDatCHK:; BSR set to: 0

	opt	stack 20
;VerifyNDatCHK@Data stored from wreg
	movff	wreg,(c:VerifyNDatCHK@Data)
	line	251
	
i2l27170:; BSR set to: 1

;uart9b.c: 251: if(SetNDatCHK(Data)==Data) return 1;
	movf	((c:VerifyNDatCHK@Data)),c,w
	
	call	_SetNDatCHK
	xorwf	((c:VerifyNDatCHK@Data)),c,w
	btfss	status,2
	goto	i2u4694_41
	goto	i2u4694_40
i2u4694_41:
	goto	i2l27176
i2u4694_40:
	
i2l27172:; BSR set to: 1

	movlw	(01h)&0ffh
	goto	i2l4118
	line	252
	
i2l27176:; BSR set to: 1

;uart9b.c: 252: return 0;
	movlw	(0)&0ffh
	line	253
	
i2l4118:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_VerifyNDatCHK
	__end_of_VerifyNDatCHK:
	signat	_VerifyNDatCHK,4217
	global	_SetNDatCHK

;; *************** function _SetNDatCHK *****************
;; Defined at:
;;		line 241 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
;; Parameters:    Size  Location     Type
;;  Data            1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  Data            1    2[COMRAM] const unsigned char 
;;  d               1    5[COMRAM] unsigned char 
;;  b               1    4[COMRAM] unsigned char 
;;  a               1    3[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        6 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_VerifyNDatCHK
;; This function uses a non-reentrant model
;;
psect	text261,class=CODE,space=0,reloc=2
global __ptext261
__ptext261:
psect	text261
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
	line	241
	global	__size_of_SetNDatCHK
	__size_of_SetNDatCHK	equ	__end_of_SetNDatCHK-_SetNDatCHK
	
_SetNDatCHK:; BSR set to: 1

	opt	stack 20
;SetNDatCHK@Data stored from wreg
	line	243
	movff	wreg,(c:SetNDatCHK@Data)
	
i2l25822:; BSR set to: 1

;uart9b.c: 242: unsigned char a,b,d;
;uart9b.c: 243: d=Data&0b00011111;
	movf	((c:SetNDatCHK@Data)),c,w
	andlw	low(01Fh)
	movwf	((c:SetNDatCHK@d)),c
	line	244
;uart9b.c: 244: a=d&0b00000111;
	movf	((c:SetNDatCHK@d)),c,w
	andlw	low(07h)
	movwf	((c:SetNDatCHK@a)),c
	line	245
;uart9b.c: 245: b=0b00000100|(d>>3);
	swapf	((c:SetNDatCHK@d)),c,w
	rlncf	wreg
	andlw	(0ffh shr 3) & 0ffh
	iorlw	low(04h)
	movwf	((c:SetNDatCHK@b)),c
	line	246
;uart9b.c: 246: return d|((a^b)<<5);
	movf	((c:SetNDatCHK@a)),c,w
	xorwf	((c:SetNDatCHK@b)),c,w
	movwf	(??_SetNDatCHK+0+0)&0ffh,c
	movlw	05h
	movwf	(??_SetNDatCHK+1+0)&0ffh,c
i2u4417_45:
	bcf	status,0
	rlcf	((??_SetNDatCHK+0+0)),c
	decfsz	(??_SetNDatCHK+1+0)&0ffh,c
	goto	i2u4417_45
	movf	((??_SetNDatCHK+0+0)),c,w
	iorwf	((c:SetNDatCHK@d)),c,w
	line	247
	
i2l4114:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_SetNDatCHK
	__end_of_SetNDatCHK:
	signat	_SetNDatCHK,4217
	global	_KolProc

;; *************** function _KolProc *****************
;; Defined at:
;;		line 320 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  j               1   15[COMRAM] unsigned char 
;;  i               1   14[COMRAM] unsigned char 
;;  k               1   13[COMRAM] unsigned char 
;;  nC              1   12[COMRAM] unsigned char 
;;  l               1   11[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
;; Tracked objects:
;;		On entry : F/2
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:         11       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:       16 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RefreshWSW
;; This function uses a non-reentrant model
;;
psect	text262,class=CODE,space=0,reloc=2
global __ptext262
__ptext262:
psect	text262
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	320
	global	__size_of_KolProc
	__size_of_KolProc	equ	__end_of_KolProc-_KolProc
	
_KolProc:; BSR set to: 1

	opt	stack 21
	line	323
	
i2l26300:; BSR set to: 2

;wsw.c: 321: unsigned char i,j,k,l,nC;
;wsw.c: 323: for(j=0;j<4;j++)
	clrf	((c:KolProc@j)),c
	line	325
	
i2l26306:
;wsw.c: 324: {
;wsw.c: 325: nC=(*(*Klj[j].KL).KOut).nCykli;
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	02h
	addwf	(??_KolProc+2+0),c
	movff	??_KolProc+2+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,(c:KolProc@nC)
	line	326
	
i2l26308:
;wsw.c: 326: if((KInd[j].reset)||(nC&&KTim[j].cykl>=nC))
	movlb	1	; () banked
	movlw	low(_KInd)
	addwf	((c:KolProc@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movf	indf2,w
	movwf	(??_KolProc+0+0)&0ffh,c
	
	btfsc	((??_KolProc+0+0)),c,1
	goto	i2u4523_41
	goto	i2u4523_40
i2u4523_41:
	goto	i2l26314
i2u4523_40:
	
i2l26310:; BSR set to: 1

	movf	((c:KolProc@nC)),c,w
	btfsc	status,2
	goto	i2u4524_41
	goto	i2u4524_40
i2u4524_41:
	goto	i2l26326
i2u4524_40:
	
i2l26312:; BSR set to: 1

	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	movwf	(??_KolProc+0+0)&0ffh,c
	movf	((c:KolProc@nC)),c,w
	subwf	((??_KolProc+0+0)),c,w
	btfss	status,0
	goto	i2u4525_41
	goto	i2u4525_40
i2u4525_41:
	goto	i2l26326
i2u4525_40:
	line	328
	
i2l26314:; BSR set to: 1

;wsw.c: 327: {
;wsw.c: 328: KTim[j].cykl=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	329
	
i2l26316:; BSR set to: 1

;wsw.c: 329: KInd[j].reset=0;
	movlw	low(_KInd)
	addwf	((c:KolProc@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movlw	((0 & ((1<<1)-1))<<1)|not (((1<<1)-1)<<1)
	andwf	(indf2)&0ffh
	line	330
	
i2l26318:; BSR set to: 1

;wsw.c: 330: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j].KL).KFc[i].focus=0;
	clrf	((c:KolProc@i)),c
	goto	i2l26324
	
i2l26320:
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	03h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0+1
	movf	((c:KolProc@i)),c,w
	addwf	(??_KolProc+2+0),c,w
	movwf	c:fsr2l
	movlw	0
	addwfc	(??_KolProc+2+1),c,w
	movwf	1+c:fsr2l
	movlw	((0 & ((1<<1)-1))<<0)|not (((1<<1)-1)<<0)
	andwf	(indf2)&0ffh
	
i2l26322:
	incf	((c:KolProc@i)),c
	
i2l26324:
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	subwf	((c:KolProc@i)),c,w
	btfss	status,0
	goto	i2u4526_41
	goto	i2u4526_40
i2u4526_41:
	goto	i2l26320
i2u4526_40:
	line	332
	
i2l26326:
;wsw.c: 331: }
;wsw.c: 332: if(KInd[j].restart&&nC)
	movlb	1	; () banked
	movlw	low(_KInd)
	addwf	((c:KolProc@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movf	indf2,w
	movwf	(??_KolProc+0+0)&0ffh,c
	
	btfss	((??_KolProc+0+0)),c,0
	goto	i2u4527_41
	goto	i2u4527_40
i2u4527_41:
	goto	i2l26340
i2u4527_40:
	
i2l26328:; BSR set to: 1

	movf	((c:KolProc@nC)),c,w
	btfsc	status,2
	goto	i2u4528_41
	goto	i2u4528_40
i2u4528_41:
	goto	i2l26340
i2u4528_40:
	line	334
	
i2l26330:; BSR set to: 1

;wsw.c: 333: {
;wsw.c: 334: KTim[j].cykl=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	335
	
i2l26332:; BSR set to: 1

;wsw.c: 335: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j].KL).KFc[i].focus=1;
	clrf	((c:KolProc@i)),c
	goto	i2l26338
	
i2l26334:
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	03h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0+1
	movf	((c:KolProc@i)),c,w
	addwf	(??_KolProc+2+0),c,w
	movwf	c:fsr2l
	movlw	0
	addwfc	(??_KolProc+2+1),c,w
	movwf	1+c:fsr2l
	movlw	(01h & ((1<<1)-1))<<0
	iorwf	(indf2)&0ffh
	
i2l26336:
	incf	((c:KolProc@i)),c
	
i2l26338:
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	subwf	((c:KolProc@i)),c,w
	btfss	status,0
	goto	i2u4529_41
	goto	i2u4529_40
i2u4529_41:
	goto	i2l26334
i2u4529_40:
	line	337
	
i2l26340:
;wsw.c: 336: }
;wsw.c: 337: if(KInd[j].restart||!((*(*(*Klj[j].KL).KOut).CAdr).St.focus))
	movlb	1	; () banked
	movlw	low(_KInd)
	addwf	((c:KolProc@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movf	indf2,w
	movwf	(??_KolProc+0+0)&0ffh,c
	
	btfsc	((??_KolProc+0+0)),c,0
	goto	i2u4530_41
	goto	i2u4530_40
i2u4530_41:
	goto	i2l26344
i2u4530_40:
	
i2l26342:; BSR set to: 1

	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0+1
	movff	??_KolProc+3+0,fsr2l
	movff	??_KolProc+3+1,fsr2h
	movf	indf2,w
	movwf	(??_KolProc+5+0)&0ffh,c
	
	btfsc	((??_KolProc+5+0)),c,0
	goto	i2u4531_41
	goto	i2u4531_40
i2u4531_41:
	goto	i2l26354
i2u4531_40:
	line	339
	
i2l26344:; BSR set to: 1

;wsw.c: 338: {
;wsw.c: 339: KInd[j].restart=0;
	movlw	low(_KInd)
	addwf	((c:KolProc@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movlw	((0 & ((1<<1)-1))<<0)|not (((1<<1)-1)<<0)
	andwf	(indf2)&0ffh
	line	341
	
i2l26346:; BSR set to: 1

;wsw.c: 341: if(!nC)
	tstfsz	((c:KolProc@nC)),c
	goto	i2u4532_41
	goto	i2u4532_40
i2u4532_41:
	goto	i2l26354
i2u4532_40:
	line	343
	
i2l26348:; BSR set to: 1

;wsw.c: 342: {
;wsw.c: 343: KInd[j].indeks=0;
	movlw	low(_KInd)
	addwf	((c:KolProc@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	344
	
i2l26350:; BSR set to: 1

;wsw.c: 344: KTim[j].ncS=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	345
	
i2l26352:; BSR set to: 1

;wsw.c: 345: KTim[j].ndS=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	353
	
i2l26354:; BSR set to: 1

;wsw.c: 346: }
;wsw.c: 352: }
;wsw.c: 353: (*(*(*Klj[j].KL).KOut).CAdr).St.focus=0;
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0+1
	movff	??_KolProc+3+0,fsr2l
	movff	??_KolProc+3+1,fsr2h
	movlw	((0 & ((1<<1)-1))<<0)|not (((1<<1)-1)<<0)
	andwf	(indf2)&0ffh
	line	354
	
i2l26356:
;wsw.c: 354: for(i=KInd[j].indeks;i<Klj[j].nPzc;i++)
	movlb	1	; () banked
	movlw	low(_KInd)
	addwf	((c:KolProc@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	rrcf	(indf2)&0ffh,w
	rrcf	wreg,f
	andlw	(1<<6)-1
	movwf	((c:KolProc@i)),c
	goto	i2l26436
	line	357
	
i2l26358:
;wsw.c: 355: {
;wsw.c: 357: if (!(*Klj[j].KL).KFc[i].focus)
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	03h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0+1
	movf	((c:KolProc@i)),c,w
	addwf	(??_KolProc+2+0),c,w
	movwf	c:fsr2l
	movlw	0
	addwfc	(??_KolProc+2+1),c,w
	movwf	1+c:fsr2l
	movf	indf2,w
	movwf	(??_KolProc+4+0)&0ffh,c
	
	btfsc	((??_KolProc+4+0)),c,0
	goto	i2u4533_41
	goto	i2u4533_40
i2u4533_41:
	goto	i2l26368
i2u4533_40:
	line	359
	
i2l26360:
;wsw.c: 358: {
;wsw.c: 359: if(i>=Klj[j].nPzc-1)
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	low(-1)
	addwf	(??_KolProc+2+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	clrf	1+(??_KolProc+3+0)&0ffh,c
	movlw	high(-1)
	addwfc	1+(??_KolProc+3+0)&0ffh,c
	movf	((c:KolProc@i)),c,w
	movwf	(??_KolProc+5+0)&0ffh,c
	clrf	(??_KolProc+5+0+1)&0ffh,c

	movf	(??_KolProc+5+1),c,w
	xorlw	80h
	movwf	(??_KolProc+7+0)&0ffh,c
	movf	(??_KolProc+3+0),c,w
	subwf	(??_KolProc+5+0),c,w
	movf	(??_KolProc+3+1),c,w
	xorlw	80h
	subwfb	(??_KolProc+7+0)&0ffh,c,w
	btfss	status,0
	goto	i2u4534_41
	goto	i2u4534_40
i2u4534_41:
	goto	i2l26434
i2u4534_40:
	line	361
	
i2l26362:
;wsw.c: 360: {
;wsw.c: 361: KInd[j].indeks=0;
	movlb	1	; () banked
	movlw	low(_KInd)
	addwf	((c:KolProc@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	362
	
i2l26364:; BSR set to: 1

;wsw.c: 362: if(nC) KTim[j].cykl++;
	movf	((c:KolProc@nC)),c,w
	btfsc	status,2
	goto	i2u4535_41
	goto	i2u4535_40
i2u4535_41:
	goto	i2l26434
i2u4535_40:
	
i2l26366:; BSR set to: 1

	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	goto	i2l26434
	line	367
	
i2l26368:
;wsw.c: 365: }
;wsw.c: 367: KInd[j].indeks=i;
	movff	(c:KolProc@i),??_KolProc+0+0
	movlb	1	; () banked
	movlw	low(_KInd)
	addwf	((c:KolProc@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	rlncf	(??_KolProc+0+0),c
	rlncf	(??_KolProc+0+0),c
	movf	(indf2)&0ffh,w
	xorwf	(??_KolProc+0+0),c,w
	andlw	not (((1<<6)-1)<<2)
	xorwf	(??_KolProc+0+0),c,w
	movwf	(indf2)&0ffh
	line	370
	
i2l26370:; BSR set to: 1

;wsw.c: 370: for(k=j+1;k<4;k++)
	incf	((c:KolProc@j)),c,w
	movwf	((c:KolProc@k)),c
	
i2l26372:
	movlw	(04h-1)
	cpfsgt	((c:KolProc@k)),c
	goto	i2u4536_41
	goto	i2u4536_40
i2u4536_41:
	goto	i2l26376
i2u4536_40:
	goto	i2l26392
	line	371
	
i2l26376:
;wsw.c: 371: if((*(*Klj[k].KL).KOut).nCykli)
	movf	((c:KolProc@k)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	02h
	addwf	(??_KolProc+2+0),c
	movff	??_KolProc+2+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	iorlw	0
	btfsc	status,2
	goto	i2u4537_41
	goto	i2u4537_40
i2u4537_41:
	goto	i2l26388
i2u4537_40:
	line	373
	
i2l26378:
;wsw.c: 372: {
;wsw.c: 373: for(l=0;l<Klj[k].nPzc;l++) (*Klj[k].KL).KFc[l].focus=0;
	clrf	((c:KolProc@l)),c
	goto	i2l26384
	
i2l26380:
	movf	((c:KolProc@k)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	03h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0
	tblrd	*+
	
	movff	tablat,??_KolProc+2+0+1
	movf	((c:KolProc@l)),c,w
	addwf	(??_KolProc+2+0),c,w
	movwf	c:fsr2l
	movlw	0
	addwfc	(??_KolProc+2+1),c,w
	movwf	1+c:fsr2l
	movlw	((0 & ((1<<1)-1))<<0)|not (((1<<1)-1)<<0)
	andwf	(indf2)&0ffh
	
i2l26382:
	incf	((c:KolProc@l)),c
	
i2l26384:
	movf	((c:KolProc@k)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	subwf	((c:KolProc@l)),c,w
	btfss	status,0
	goto	i2u4538_41
	goto	i2u4538_40
i2u4538_41:
	goto	i2l26380
i2u4538_40:
	line	374
	
i2l26386:
;wsw.c: 374: KTim[k].cykl=0;
	movf	((c:KolProc@k)),c,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim+02h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+02h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	370
	
i2l26388:
	incf	((c:KolProc@k)),c
	goto	i2l26372
	line	379
	
i2l26392:
;wsw.c: 375: }
;wsw.c: 379: for(k=j+1;k<4;k++)
	incf	((c:KolProc@j)),c,w
	movwf	((c:KolProc@k)),c
	
i2l26394:
	movlw	(04h-1)
	cpfsgt	((c:KolProc@k)),c
	goto	i2u4539_41
	goto	i2u4539_40
i2u4539_41:
	goto	i2l26398
i2u4539_40:
	goto	i2l26408
	line	381
	
i2l26398:
;wsw.c: 380: {
;wsw.c: 381: KInd[k].indeks=0;
	movlb	1	; () banked
	movlw	low(_KInd)
	addwf	((c:KolProc@k)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	382
	
i2l26400:; BSR set to: 1

;wsw.c: 382: KTim[k].ncS=0;
	movf	((c:KolProc@k)),c,w
	mullw	03h
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	383
	
i2l26402:; BSR set to: 1

;wsw.c: 383: KTim[k].ndS=0;
	movf	((c:KolProc@k)),c,w
	mullw	03h
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	379
	
i2l26404:; BSR set to: 1

	incf	((c:KolProc@k)),c
	goto	i2l26394
	line	387
	
i2l26408:
;wsw.c: 384: }
;wsw.c: 387: (*(*(*Klj[j].KL).KOut).CAdr).St.focus=1;
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0+1
	movff	??_KolProc+3+0,fsr2l
	movff	??_KolProc+3+1,fsr2h
	movlw	(01h & ((1<<1)-1))<<0
	iorwf	(indf2)&0ffh
	line	391
;wsw.c: 391: if (KTim[j].ndS<(*Klj[j].KL).KWP[i].delay)
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlb	1	; () banked
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	movwf	(??_KolProc+0+0)&0ffh,c
	movf	((c:KolProc@i)),c,w
	mullw	03h
	movff	prodl,??_KolProc+1+0
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+2+0)&0ffh,c
	movff	(??_KolProc+2+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+3+0
	movlw	01h
	addwf	(??_KolProc+3+0),c
	movff	??_KolProc+3+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	addwf	(??_KolProc+1+0),c,w
	movwf	(??_KolProc+4+0)&0ffh,c
	movlw	02h
	addwf	((??_KolProc+4+0)),c
	movff	(??_KolProc+4+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	subwf	((??_KolProc+0+0)),c,w
	btfsc	status,0
	goto	i2u4540_41
	goto	i2u4540_40
i2u4540_41:
	goto	i2l26424
i2u4540_40:
	line	393
	
i2l26410:; BSR set to: 1

;wsw.c: 392: {
;wsw.c: 393: KTim[j].ncS++;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	394
;wsw.c: 394: if (KTim[j].ncS>=10)
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	(0Ah-1)
	cpfsgt	indf2
	goto	i2u4541_41
	goto	i2u4541_40
i2u4541_41:
	goto	i2l26414
i2u4541_40:
	line	396
	
i2l26412:; BSR set to: 1

;wsw.c: 395: {
;wsw.c: 396: KTim[j].ncS=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	397
;wsw.c: 397: KTim[j].ndS++;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	incf	indf2

	line	399
	
i2l26414:; BSR set to: 1

;wsw.c: 398: }
;wsw.c: 399: if((*Klj[j].KL).KAP[i].PAdr==0)
	movf	((c:KolProc@i)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	addwf	(??_KolProc+0+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	movff	(??_KolProc+3+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0+1
	movf	(??_KolProc+4+1),c,w
	iorwf (??_KolProc+4+0),c,w

	btfss	status,2
	goto	i2u4542_41
	goto	i2u4542_40
i2u4542_41:
	goto	i2l26418
i2u4542_40:
	line	401
	
i2l26416:; BSR set to: 1

;wsw.c: 400: {
;wsw.c: 401: (*(*(*Klj[j].KL).KOut).CAdr).St=(*Klj[j].KL).KFP[i].PFrm;
	movf	((c:KolProc@i)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	02h
	addwf	(??_KolProc+2+0),c
	movff	??_KolProc+2+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	addwf	(??_KolProc+0+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	movff	(??_KolProc+3+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0+1
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+6+0)&0ffh,c
	movff	(??_KolProc+6+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+7+0
	movlw	05h
	addwf	(??_KolProc+7+0),c
	movff	??_KolProc+7+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+8+0
	movff	??_KolProc+8+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0+1
	movff	??_KolProc+9+0,fsr2l
	movff	??_KolProc+9+1,fsr2h
	movff	??_KolProc+4+0,postinc2
	movff	??_KolProc+4+1,postdec2

	line	402
;wsw.c: 402: (*(*(*Klj[j].KL).KOut).CAdr).Dt=(*Klj[j].KL).KWP[i].PWrt;
	movf	((c:KolProc@i)),c,w
	mullw	03h
	movff	prodl,??_KolProc+0+0
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	01h
	addwf	(??_KolProc+2+0),c
	movff	??_KolProc+2+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	addwf	(??_KolProc+0+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	movff	(??_KolProc+3+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0+1
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+6+0)&0ffh,c
	movff	(??_KolProc+6+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+7+0
	movlw	05h
	addwf	(??_KolProc+7+0),c
	movff	??_KolProc+7+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+8+0
	movff	??_KolProc+8+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0+1
	movlw	low(02h)
	addwf	(??_KolProc+9+0),c,w
	movwf	c:fsr2l
	movlw	high(02h)
	addwfc	(??_KolProc+9+1),c,w
	movwf	1+c:fsr2l
	movff	??_KolProc+4+0,postinc2
	movff	??_KolProc+4+1,postdec2

	line	403
;wsw.c: 403: }else (*(*(*Klj[j].KL).KOut).CAdr)=*((*Klj[j].KL).KAP[i].PAdr);
	goto	i2l26420
	
i2l26418:; BSR set to: 1

	movf	((c:KolProc@i)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	addwf	(??_KolProc+0+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	movff	(??_KolProc+3+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0
	tblrd	*+
	
	movff	tablat,??_KolProc+4+0+1
	movff	??_KolProc+4+0,fsr2l
	movff	??_KolProc+4+1,fsr2h
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+6+0)&0ffh,c
	movff	(??_KolProc+6+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+7+0
	movlw	05h
	addwf	(??_KolProc+7+0),c
	movff	??_KolProc+7+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+8+0
	movff	??_KolProc+8+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0
	tblrd	*+
	
	movff	tablat,??_KolProc+9+0+1
	movff	??_KolProc+9+0,fsr1l
	movff	??_KolProc+9+1,fsr1h
	movff	postinc2,postinc1
	movff	postinc2,postinc1
	movff	postinc2,postinc1
	movff	postdec2,postdec1
	movf	postdec1
	movf	postdec1
	line	404
	
i2l26420:; BSR set to: 1

;wsw.c: 404: (*(*(*Klj[j].KL).KOut).CAdr).St.focus=1;
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movf	(prodl),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+0+0)&0ffh,c
	movff	(??_KolProc+0+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+1+0
	movlw	05h
	addwf	(??_KolProc+1+0),c
	movff	??_KolProc+1+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movff	??_KolProc+2+0,tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0
	tblrd	*+
	
	movff	tablat,??_KolProc+3+0+1
	movff	??_KolProc+3+0,fsr2l
	movff	??_KolProc+3+1,fsr2h
	movlw	(01h & ((1<<1)-1))<<0
	iorwf	(indf2)&0ffh
	line	405
;wsw.c: 405: break;
	goto	i2l26438
	line	408
	
i2l26424:; BSR set to: 1

;wsw.c: 407: {
;wsw.c: 408: KTim[j].ncS=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	409
;wsw.c: 409: KTim[j].ndS=0;
	movf	((c:KolProc@j)),c,w
	mullw	03h
	movlw	low(_KTim+01h)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_KTim+01h)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlw	low(0)
	movwf	indf2
	line	410
	
i2l26426:; BSR set to: 1

;wsw.c: 410: if (KInd[j].indeks>=Klj[j].nPzc-1)
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,??_KolProc+2+0
	movlw	low(-1)
	addwf	(??_KolProc+2+0),c,w
	movwf	(??_KolProc+3+0)&0ffh,c
	clrf	1+(??_KolProc+3+0)&0ffh,c
	movlw	high(-1)
	addwfc	1+(??_KolProc+3+0)&0ffh,c
	movlw	low(_KInd)
	addwf	((c:KolProc@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	rrcf	(indf2)&0ffh,w
	rrcf	wreg,f
	andlw	(1<<6)-1
	movwf	(??_KolProc+5+0)&0ffh,c
	clrf	(??_KolProc+5+0+1)&0ffh,c

	movf	(??_KolProc+5+1),c,w
	xorlw	80h
	movwf	(??_KolProc+7+0)&0ffh,c
	movf	(??_KolProc+3+0),c,w
	subwf	(??_KolProc+5+0),c,w
	movf	(??_KolProc+3+1),c,w
	xorlw	80h
	subwfb	(??_KolProc+7+0)&0ffh,c,w
	btfss	status,0
	goto	i2u4543_41
	goto	i2u4543_40
i2u4543_41:
	goto	i2l26434
i2u4543_40:
	line	412
	
i2l26428:; BSR set to: 1

;wsw.c: 411: {
;wsw.c: 412: KInd[j].indeks=0;
	movlw	low(_KInd)
	addwf	((c:KolProc@j)),c,w
	movwf	c:fsr2l
	clrf	1+c:fsr2l
	movlw	high(_KInd)
	addwfc	1+c:fsr2l
	movlw	((0 & ((1<<6)-1))<<2)|not (((1<<6)-1)<<2)
	andwf	(indf2)&0ffh
	line	413
	
i2l26430:; BSR set to: 1

;wsw.c: 413: if(nC) KTim[j].cykl++;
	movf	((c:KolProc@nC)),c,w
	btfsc	status,2
	goto	i2u4544_41
	goto	i2u4544_40
i2u4544_41:
	goto	i2l26434
i2u4544_40:
	goto	i2l26366
	line	354
	
i2l26434:
	incf	((c:KolProc@i)),c
	
i2l26436:
	movf	((c:KolProc@j)),c,w
	mullw	02h
	movff	prodl,??_KolProc+0+0
	movlw	01h
	addwf	(??_KolProc+0+0),c
	movf	(??_KolProc+0+0),c,w
	addlw	low(_Klj)
	movwf	(??_KolProc+1+0)&0ffh,c
	movff	(??_KolProc+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	subwf	((c:KolProc@i)),c,w
	btfss	status,0
	goto	i2u4545_41
	goto	i2u4545_40
i2u4545_41:
	goto	i2l26358
i2u4545_40:
	line	323
	
i2l26438:
	incf	((c:KolProc@j)),c
	
i2l26440:
	movlw	(04h-1)
	cpfsgt	((c:KolProc@j)),c
	goto	i2u4546_41
	goto	i2u4546_40
i2u4546_41:
	goto	i2l26306
i2u4546_40:
	line	418
	
i2l4494:
	return
	opt stack 0
GLOBAL	__end_of_KolProc
	__end_of_KolProc:
	signat	_KolProc,88
	global	_SetPrWswData

;; *************** function _SetPrWswData *****************
;; Defined at:
;;		line 425 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1    1[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
;; Tracked objects:
;;		On entry : 0/2
;;		On exit  : C/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RefreshWSW
;; This function uses a non-reentrant model
;;
psect	text263,class=CODE,space=0,reloc=2
global __ptext263
__ptext263:
psect	text263
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	425
	global	__size_of_SetPrWswData
	__size_of_SetPrWswData	equ	__end_of_SetPrWswData-_SetPrWswData
	
_SetPrWswData:
	opt	stack 21
	line	427
	
i2l26442:
;wsw.c: 426: unsigned char i;
;wsw.c: 427: for(i=0;i<10-1;i++)
	clrf	((c:SetPrWswData@i)),c
	line	429
	
i2l26448:
;wsw.c: 428: {
;wsw.c: 429: if(PWD[i].St.focus)
	movf	((c:SetPrWswData@i)),c,w
	mullw	04h
	movlb	2	; () banked
	movlw	low(_PWD)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_PWD)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movf	indf2,w
	movwf	(??_SetPrWswData+0+0)&0ffh,c
	
	btfss	((??_SetPrWswData+0+0)),c,0
	goto	i2u4547_41
	goto	i2u4547_40
i2u4547_41:
	goto	i2l26454
i2u4547_40:
	line	431
	
i2l26450:; BSR set to: 2

;wsw.c: 430: {
;wsw.c: 431: WswData=PWD[i];
	movf	((c:SetPrWswData@i)),c,w
	mullw	04h
	movlw	low(_PWD)
	addwf	(prodl),c,w
	movwf	c:fsr2l
	movlw	high(_PWD)
	addwfc	prod+1,w
	movwf	1+c:fsr2l
	movlb	1	; () banked
	movff	postinc2,(_WswData)
	movff	postinc2,(_WswData+1)
	movff	postinc2,(_WswData+2)
	movff	postinc2,(_WswData+3)
	goto	i2l4500
	line	427
	
i2l26454:; BSR set to: 2

;wsw.c: 433: };
	incf	((c:SetPrWswData@i)),c
	
i2l26456:; BSR set to: 2

	movlw	(09h-1)
	cpfsgt	((c:SetPrWswData@i)),c
	goto	i2u4548_41
	goto	i2u4548_40
i2u4548_41:
	goto	i2l26448
i2u4548_40:
	
i2l4498:; BSR set to: 2

	line	435
;wsw.c: 434: }
;wsw.c: 435: WswData=PWD[10-1];
	movff	0+(_PWD+024h),(_WswData)
	movff	1+(_PWD+024h),(_WswData+1)
	movff	2+(_PWD+024h),(_WswData+2)
	movff	3+(_PWD+024h),(_WswData+3)
	line	436
	
i2l4500:
	return
	opt stack 0
GLOBAL	__end_of_SetPrWswData
	__end_of_SetPrWswData:
	signat	_SetPrWswData,88
	global	_FormatWswData

;; *************** function _FormatWswData *****************
;; Defined at:
;;		line 442 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;		None
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
;; Tracked objects:
;;		On entry : C/2
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; Hardware stack levels required when called:    1
;; This function calls:
;;		i2___lbdiv
;;		___lbmod
;;		_Swbty
;;		_Rwbty
;; This function is called by:
;;		_RefreshWSW
;; This function uses a non-reentrant model
;;
psect	text264,class=CODE,space=0,reloc=2
global __ptext264
__ptext264:
psect	text264
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	442
	global	__size_of_FormatWswData
	__size_of_FormatWswData	equ	__end_of_FormatWswData-_FormatWswData
	
_FormatWswData:
	opt	stack 20
	line	445
	
i2l27180:
;wsw.c: 445: if(WswData.St.hex)
	movlb	1	; () banked
	
	btfss	((_WswData))&0ffh,2
	goto	i2u4695_41
	goto	i2u4695_40
i2u4695_41:
	goto	i2l4503
i2u4695_40:
	line	447
	
i2l27182:; BSR set to: 1

;wsw.c: 446: {
;wsw.c: 447: LedData.dLed1=Znak[(WswData.Dt.Data0&0xF0)>>4];
	movff	0+(_WswData+03h),??_FormatWswData+0+0
	swapf	(??_FormatWswData+0+0),c
	movlw	(0ffh shr 4) & 0ffh
	andwf	(??_FormatWswData+0+0),c
	movlw	0Fh
	andwf	(??_FormatWswData+0+0),c
	movf	(??_FormatWswData+0+0),c,w
	addlw	low(_Znak)
	movwf	(??_FormatWswData+1+0)&0ffh,c
	movff	(??_FormatWswData+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,0+(_LedData+01h)
	line	448
;wsw.c: 448: LedData.dLed0=Znak[WswData.Dt.Data0&0x0F];
	movff	0+(_WswData+03h),??_FormatWswData+0+0
	movlw	0Fh
	andwf	(??_FormatWswData+0+0),c
	movf	(??_FormatWswData+0+0),c,w
	addlw	low(_Znak)
	movwf	(??_FormatWswData+1+0)&0ffh,c
	movff	(??_FormatWswData+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,0+(_LedData+02h)
	line	449
;wsw.c: 449: }else
	goto	i2l4504
	
i2l4503:; BSR set to: 1

	line	450
;wsw.c: 450: if(WswData.St.dec)
	
	btfss	((_WswData))&0ffh,1
	goto	i2u4696_41
	goto	i2u4696_40
i2u4696_41:
	goto	i2l4505
i2u4696_40:
	line	452
	
i2l27184:; BSR set to: 1

;wsw.c: 451: {
;wsw.c: 452: if(WswData.Dt.Data0>99) WswData.Dt.Data0=99;
	lfsr	2,_WswData+03h
	movlw	(064h-1)
	cpfsgt	indf2
	goto	i2u4697_41
	goto	i2u4697_40
i2u4697_41:
	goto	i2l27188
i2u4697_40:
	
i2l27186:; BSR set to: 1

	movlw	low(063h)
	movwf	(0+(_WswData+03h))&0ffh
	line	453
	
i2l27188:; BSR set to: 1

;wsw.c: 453: LedData.dLed1=Znak[WswData.Dt.Data0/10];
	movlw	low(0Ah)
	movwf	((c:?i2___lbdiv)),c
	movf	(0+(_WswData+03h))&0ffh,w
	
	call	i2___lbdiv
	movwf	(??_FormatWswData+0+0)&0ffh,c
	movf	((??_FormatWswData+0+0)),c,w
	addlw	low(_Znak)
	movwf	(??_FormatWswData+1+0)&0ffh,c
	movff	(??_FormatWswData+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movff	tablat,0+(_LedData+01h)
	line	454
	
i2l27190:; BSR set to: 1

;wsw.c: 454: LedData.dLed0=Znak[WswData.Dt.Data0%10];
	movlw	low(0Ah)
	movwf	((c:?___lbmod)),c
	movf	(0+(_WswData+03h))&0ffh,w
	
	call	___lbmod
	movwf	(??_FormatWswData+0+0)&0ffh,c
	movf	((??_FormatWswData+0+0)),c,w
	addlw	low(_Znak)
	movwf	(??_FormatWswData+1+0)&0ffh,c
	movff	(??_FormatWswData+1+0),tblptrl
	movlw	high(__smallconst)
	movwf	tblptrh
	movlw	low highword(__smallconst)
	movwf	tblptru
	tblrd	*
	
	movlb	1	; () banked
	movff	tablat,0+(_LedData+02h)
	line	455
;wsw.c: 455: }else
	goto	i2l4504
	
i2l4505:; BSR set to: 1

	line	457
;wsw.c: 456: {
;wsw.c: 457: LedData.dLed1=WswData.Dt.Data1;
	movff	0+(_WswData+02h),0+(_LedData+01h)
	line	458
;wsw.c: 458: LedData.dLed0=WswData.Dt.Data0;
	movff	0+(_WswData+03h),0+(_LedData+02h)
	line	459
	
i2l4504:; BSR set to: 1

	line	460
;wsw.c: 459: }
;wsw.c: 460: if (WswData.St.autoOFF&&(LedData.dLed1==Znak[0]))
	
	btfss	((_WswData))&0ffh,3
	goto	i2u4698_41
	goto	i2u4698_40
i2u4698_41:
	goto	i2l4508
i2u4698_40:
	
i2l27192:; BSR set to: 1

	movlw	low((_Znak))
	movwf	tblptrl
	movlw	high((_Znak))
	movwf	tblptrh
	movlw	low highword((_Znak))
	movwf	tblptru
	tblrd	*
	
	movf	tablat,w

	lfsr	2,_LedData+01h
	cpfseq	indf2
	goto	i2u4699_41
	goto	i2u4699_40
i2u4699_41:
	goto	i2l4508
i2u4699_40:
	line	461
	
i2l27194:; BSR set to: 1

;wsw.c: 461: LedData.dLed1=0b11111111;
	setf	(0+(_LedData+01h))&0ffh
	
i2l4508:; BSR set to: 1

	line	462
;wsw.c: 462: if (WswData.St.kropka0)
	
	btfss	((_WswData))&0ffh,4
	goto	i2u4700_41
	goto	i2u4700_40
i2u4700_41:
	goto	i2l27198
i2u4700_40:
	line	463
	
i2l27196:; BSR set to: 1

;wsw.c: 463: LedData.dLed0=LedData.dLed0&0b11101111;
	movf	(0+(_LedData+02h))&0ffh,w
	andlw	low(0EFh)
	movwf	(0+(_LedData+02h))&0ffh
	line	464
	
i2l27198:; BSR set to: 1

;wsw.c: 464: if (WswData.St.kropka1)
	
	btfss	((_WswData))&0ffh,5
	goto	i2u4701_41
	goto	i2u4701_40
i2u4701_41:
	goto	i2l27202
i2u4701_40:
	line	465
	
i2l27200:; BSR set to: 1

;wsw.c: 465: LedData.dLed1=LedData.dLed1&0b11101111;
	movf	(0+(_LedData+01h))&0ffh,w
	andlw	low(0EFh)
	movwf	(0+(_LedData+01h))&0ffh
	line	466
	
i2l27202:; BSR set to: 1

;wsw.c: 466: if (WswData.St.wygas0||LedData.setOff)
	
	btfsc	((_WswData))&0ffh,6
	goto	i2u4702_41
	goto	i2u4702_40
i2u4702_41:
	goto	i2l4513
i2u4702_40:
	
i2l27204:; BSR set to: 1

	
	btfss	((_LedData))&0ffh,0
	goto	i2u4703_41
	goto	i2u4703_40
i2u4703_41:
	goto	i2l4511
i2u4703_40:
	
i2l4513:; BSR set to: 1

	line	467
;wsw.c: 467: LedData.dLed0=0b11111111;
	setf	(0+(_LedData+02h))&0ffh
	
i2l4511:; BSR set to: 1

	line	468
;wsw.c: 468: if (WswData.St.wygas1||LedData.setOff)
	
	btfsc	((_WswData))&0ffh,7
	goto	i2u4704_41
	goto	i2u4704_40
i2u4704_41:
	goto	i2l4516
i2u4704_40:
	
i2l27206:; BSR set to: 1

	
	btfss	((_LedData))&0ffh,0
	goto	i2u4705_41
	goto	i2u4705_40
i2u4705_41:
	goto	i2l4514
i2u4705_40:
	
i2l4516:; BSR set to: 1

	line	469
;wsw.c: 469: LedData.dLed1=0b11111111;
	setf	(0+(_LedData+01h))&0ffh
	
i2l4514:; BSR set to: 1

	line	471
;wsw.c: 471: if (LedData.setOff)
	
	btfss	((_LedData))&0ffh,0
	goto	i2u4706_41
	goto	i2u4706_40
i2u4706_41:
	goto	i2l27210
i2u4706_40:
	line	475
	
i2l27208:; BSR set to: 1

;wsw.c: 472: {
;wsw.c: 475: wbty[1]|=0x0f;
	movlw	(0Fh)&0ffh
	iorwf	(0+(_wbty+01h))&0ffh
	line	480
;wsw.c: 480: }
	goto	i2l4526
	line	482
	
i2l27210:; BSR set to: 1

;wsw.c: 481: else
;wsw.c: 482: if (WswData.St.wbdid&&(WswData.St.sdiode||WswData.St.rdiode))
	swapf	(0+(_WswData+01h))&0ffh,w
	andlw	(1<<4)-1
	iorlw	0
	btfsc	status,2
	goto	i2u4707_41
	goto	i2u4707_40
i2u4707_41:
	goto	i2l27220
i2u4707_40:
	
i2l27212:; BSR set to: 1

	
	btfsc	(0+(_WswData+01h))&0ffh,2
	goto	i2u4708_41
	goto	i2u4708_40
i2u4708_41:
	goto	i2l4521
i2u4708_40:
	
i2l27214:; BSR set to: 1

	
	btfss	(0+(_WswData+01h))&0ffh,3
	goto	i2u4709_41
	goto	i2u4709_40
i2u4709_41:
	goto	i2l27220
i2u4709_40:
	
i2l4521:; BSR set to: 1

	line	486
;wsw.c: 483: {
;wsw.c: 486: if (WswData.St.sdiode) Swbty(WswData.St.wbdid);
	
	btfss	(0+(_WswData+01h))&0ffh,2
	goto	i2u4710_41
	goto	i2u4710_40
i2u4710_41:
	goto	i2l4522
i2u4710_40:
	
i2l27216:; BSR set to: 1

	swapf	(0+(_WswData+01h))&0ffh,w
	andlw	(1<<4)-1
	
	call	_Swbty
	goto	i2l4526
	line	487
	
i2l4522:; BSR set to: 1

	line	488
;wsw.c: 487: else
;wsw.c: 488: if (WswData.St.rdiode) Rwbty(WswData.St.wbdid);
	
	btfss	(0+(_WswData+01h))&0ffh,3
	goto	i2u4711_41
	goto	i2u4711_40
i2u4711_41:
	goto	i2l4525
i2u4711_40:
	
i2l27218:; BSR set to: 1

	swapf	(0+(_WswData+01h))&0ffh,w
	andlw	(1<<4)-1
	
	call	_Rwbty
	goto	i2l4526
	line	495
	
i2l27220:; BSR set to: 1

;wsw.c: 490: else
;wsw.c: 491: {
;wsw.c: 495: wbty[1]|=0x0f;
	movlw	(0Fh)&0ffh
	iorwf	(0+(_wbty+01h))&0ffh
	line	496
;wsw.c: 496: wbty[1]&=~(wsdid);
	movf	((c:_wsdid)),c,w
	xorlw	0ffh
	andwf	(0+(_wbty+01h))&0ffh
	goto	i2l4526
	line	502
	
i2l4525:; BSR set to: 1

	line	504
	
i2l4526:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_FormatWswData
	__end_of_FormatWswData:
	signat	_FormatWswData,88
	global	_PrintWswData

;; *************** function _PrintWswData *****************
;; Defined at:
;;		line 509 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  i               1    6[COMRAM] unsigned char 
;;  k               1    5[COMRAM] unsigned char 
;;  j               1    4[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        7 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_RefreshWSW
;; This function uses a non-reentrant model
;;
psect	text265,class=CODE,space=0,reloc=2
global __ptext265
__ptext265:
psect	text265
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	509
	global	__size_of_PrintWswData
	__size_of_PrintWswData	equ	__end_of_PrintWswData-_PrintWswData
	
_PrintWswData:; BSR set to: 1

	opt	stack 21
	line	532
	
i2l26458:; BSR set to: 1

;wsw.c: 511: unsigned char i,j,k;
;wsw.c: 532: mux=!mux;
	movlb	(_mux/8) >> 8
	movlb	(_mux/8) >> 8
	btg	(_mux/8),c,(_mux)&7
	line	534
;wsw.c: 534: if (mux)
	movlb	(_mux/8) >> 8
	btfss	(_mux/8),c,(_mux)&7
	goto	i2u4549_41
	goto	i2u4549_40
i2u4549_41:
	goto	i2l4529
i2u4549_40:
	line	535
	
i2l26460:
;wsw.c: 535: wbty[0]=LedData.dLed0;
	movff	0+(_LedData+02h),(_wbty)
	goto	i2l4530
	line	536
	
i2l4529:
	line	537
;wsw.c: 536: else
;wsw.c: 537: wbty[0]=LedData.dLed1;
	movff	0+(_LedData+01h),(_wbty)
	
i2l4530:
	line	544
;wsw.c: 544: if(mux) wbty[2-1]|=(1<<4);
	movlb	(_mux/8) >> 8
	btfss	(_mux/8),c,(_mux)&7
	goto	i2u4550_41
	goto	i2u4550_40
i2u4550_41:
	goto	i2l26464
i2u4550_40:
	
i2l26462:
	movlb	1	; () banked
	bsf	(0+(4/8)+0+(_wbty+01h))&0ffh,(4)&7
	goto	i2l26466
	line	545
	
i2l26464:
;wsw.c: 545: else wbty[2-1]&=~(1<<4);
	movlb	1	; () banked
	bcf	(0+(4/8)+0+(_wbty+01h))&0ffh,(4)&7
	line	546
	
i2l26466:; BSR set to: 1

;wsw.c: 546: for(k=0;k<2;k++)
	clrf	((c:PrintWswData@k)),c
	line	547
	
i2l4533:; BSR set to: 1

	line	548
;wsw.c: 547: {
;wsw.c: 548: for(j=0;j<8;j++)
	clrf	((c:PrintWswData@j)),c
	line	550
	
i2l26476:; BSR set to: 1

;wsw.c: 549: {
;wsw.c: 550: PORTEbits.RE1=(wbty[2-1-k]&(1<<(8-1-j)))?1:0;
	movf	((c:PrintWswData@k)),c,w
	sublw	low(_wbty+01h)
	movwf	c:fsr2l
	movlw	0
	btfss	status,0
	incf	wreg
	sublw	high(_wbty+01h)
	
	movwf	1+c:fsr2l
	movf	indf2,w
	movwf	(??_PrintWswData+0+0)&0ffh,c
	movf	((c:PrintWswData@j)),c,w
	sublw	low(07h)
	movwf	(??_PrintWswData+1+0)&0ffh,c
	movlw	(01h)&0ffh
	movwf	(??_PrintWswData+2+0)&0ffh,c
	incf	((??_PrintWswData+1+0)),c
	goto	i2u4551_44
i2u4551_45:
	bcf	status,0
	rlcf	((??_PrintWswData+2+0)),c
i2u4551_44:
	decfsz	((??_PrintWswData+1+0)),c
	goto	i2u4551_45
	movf	((??_PrintWswData+2+0)),c,w
	andwf	((??_PrintWswData+0+0)),c,w
	iorlw	0
	btfss	status,2
	goto	i2u4552_41
	goto	i2u4552_40
i2u4552_41:
	movlw	1
	goto	i2u4552_46
i2u4552_40:
	movlw	0
i2u4552_46:
	movwf	(??_PrintWswData+3+0)&0ffh,c
	rlncf	((??_PrintWswData+3+0)),c
	movf	((c:3972)),c,w	;volatile
	xorwf	((??_PrintWswData+3+0)),c,w
	andlw	not (((1<<1)-1)<<1)
	xorwf	((??_PrintWswData+3+0)),c,w
	movwf	((c:3972)),c	;volatile
	line	552
	
i2l26478:; BSR set to: 1

;wsw.c: 552: for(i=0;i<10;i++);
	clrf	((c:PrintWswData@i)),c
	
i2l26484:; BSR set to: 1

	incf	((c:PrintWswData@i)),c
	
i2l26486:; BSR set to: 1

	movlw	(0Ah-1)
	cpfsgt	((c:PrintWswData@i)),c
	goto	i2u4553_41
	goto	i2u4553_40
i2u4553_41:
	goto	i2l26484
i2u4553_40:
	
i2l4538:; BSR set to: 1

	line	553
;wsw.c: 553: PORTEbits.RE2=1;
	bsf	((c:3972)),c,2	;volatile
	line	554
;wsw.c: 554: for(i=0;i<10;i++);
	clrf	((c:PrintWswData@i)),c
	
i2l26492:; BSR set to: 1

	incf	((c:PrintWswData@i)),c
	
i2l26494:; BSR set to: 1

	movlw	(0Ah-1)
	cpfsgt	((c:PrintWswData@i)),c
	goto	i2u4554_41
	goto	i2u4554_40
i2u4554_41:
	goto	i2l26492
i2u4554_40:
	
i2l4540:; BSR set to: 1

	line	555
;wsw.c: 555: PORTEbits.RE2=0;
	bcf	((c:3972)),c,2	;volatile
	line	548
	
i2l26496:; BSR set to: 1

	incf	((c:PrintWswData@j)),c
	
i2l26498:; BSR set to: 1

	movlw	(08h-1)
	cpfsgt	((c:PrintWswData@j)),c
	goto	i2u4555_41
	goto	i2u4555_40
i2u4555_41:
	goto	i2l26476
i2u4555_40:
	line	546
	
i2l26500:; BSR set to: 1

	incf	((c:PrintWswData@k)),c
	
i2l26502:; BSR set to: 1

	movlw	(02h-1)
	cpfsgt	((c:PrintWswData@k)),c
	goto	i2u4556_41
	goto	i2u4556_40
i2u4556_41:
	goto	i2l4533
i2u4556_40:
	
i2l4534:; BSR set to: 1

	line	559
;wsw.c: 556: }
;wsw.c: 557: }
;wsw.c: 559: for(i=0;i<10;i++);
	clrf	((c:PrintWswData@i)),c
	
i2l26508:; BSR set to: 1

	incf	((c:PrintWswData@i)),c
	
i2l26510:; BSR set to: 1

	movlw	(0Ah-1)
	cpfsgt	((c:PrintWswData@i)),c
	goto	i2u4557_41
	goto	i2u4557_40
i2u4557_41:
	goto	i2l26508
i2u4557_40:
	
i2l4542:; BSR set to: 1

	line	560
;wsw.c: 560: PORTEbits.RE0=1;
	bsf	((c:3972)),c,0	;volatile
	line	561
;wsw.c: 561: for(i=0;i<10;i++);
	clrf	((c:PrintWswData@i)),c
	
i2l26516:; BSR set to: 1

	incf	((c:PrintWswData@i)),c
	
i2l26518:; BSR set to: 1

	movlw	(0Ah-1)
	cpfsgt	((c:PrintWswData@i)),c
	goto	i2u4558_41
	goto	i2u4558_40
i2u4558_41:
	goto	i2l26516
i2u4558_40:
	
i2l4544:; BSR set to: 1

	line	562
;wsw.c: 562: PORTEbits.RE0=0;
	bcf	((c:3972)),c,0	;volatile
	line	564
	
i2l4545:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_PrintWswData
	__end_of_PrintWswData:
	signat	_PrintWswData,88
	global	_Swbty

;; *************** function _Swbty *****************
;; Defined at:
;;		line 581 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;  dtd             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  dtd             1    1[COMRAM] unsigned char 
;;  mask            1    0[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FormatWswData
;; This function uses a non-reentrant model
;;
psect	text266,class=CODE,space=0,reloc=2
global __ptext266
__ptext266:
psect	text266
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	581
	global	__size_of_Swbty
	__size_of_Swbty	equ	__end_of_Swbty-_Swbty
	
_Swbty:; BSR set to: 1

	opt	stack 20
;Swbty@dtd stored from wreg
	line	583
	movff	wreg,(c:Swbty@dtd)
	
i2l26520:; BSR set to: 1

;wsw.c: 582: unsigned char mask;
;wsw.c: 583: dtd=dtd&0x0f;
	movlw	(0Fh)&0ffh
	andwf	((c:Swbty@dtd)),c
	line	584
;wsw.c: 584: mask=~(wsdid&dtd);
	movf	((c:_wsdid)),c,w
	andwf	((c:Swbty@dtd)),c,w
	xorlw	0ffh
	movwf	((c:Swbty@mask)),c
	line	588
;wsw.c: 588: wbty[1]|=0x0f;
	movlw	(0Fh)&0ffh
	iorwf	(0+(_wbty+01h))&0ffh
	line	589
;wsw.c: 589: wbty[1]&=~(dtd|(wsdid&mask));
	movf	((c:_wsdid)),c,w
	andwf	((c:Swbty@mask)),c,w
	iorwf	((c:Swbty@dtd)),c,w
	xorlw	0ffh
	andwf	(0+(_wbty+01h))&0ffh
	line	595
	
i2l4554:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_Swbty
	__end_of_Swbty:
	signat	_Swbty,4216
	global	_Rwbty

;; *************** function _Rwbty *****************
;; Defined at:
;;		line 598 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
;; Parameters:    Size  Location     Type
;;  dtd             1    wreg     unsigned char 
;; Auto vars:     Size  Location     Type
;;  dtd             1    1[COMRAM] unsigned char 
;;  mask            1    0[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FormatWswData
;; This function uses a non-reentrant model
;;
psect	text267,class=CODE,space=0,reloc=2
global __ptext267
__ptext267:
psect	text267
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
	line	598
	global	__size_of_Rwbty
	__size_of_Rwbty	equ	__end_of_Rwbty-_Rwbty
	
_Rwbty:; BSR set to: 1

	opt	stack 20
;Rwbty@dtd stored from wreg
	line	601
	movff	wreg,(c:Rwbty@dtd)
	
i2l26522:; BSR set to: 1

;wsw.c: 599: unsigned char mask;
;wsw.c: 601: dtd=dtd&0x0f;
	movlw	(0Fh)&0ffh
	andwf	((c:Rwbty@dtd)),c
	line	602
;wsw.c: 602: mask=~(wsdid&dtd);
	movf	((c:_wsdid)),c,w
	andwf	((c:Rwbty@dtd)),c,w
	xorlw	0ffh
	movwf	((c:Rwbty@mask)),c
	line	605
;wsw.c: 605: wbty[1]|=0x0f;
	movlw	(0Fh)&0ffh
	iorwf	(0+(_wbty+01h))&0ffh
	line	606
;wsw.c: 606: wbty[1]&=~((~dtd)&(wsdid&mask));
	movf	((c:Rwbty@dtd)),c,w
	xorlw	0ffh
	andwf	((c:_wsdid)),c,w
	andwf	((c:Rwbty@mask)),c,w
	xorlw	0ffh
	andwf	(0+(_wbty+01h))&0ffh
	line	612
	
i2l4557:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_of_Rwbty
	__end_of_Rwbty:
	signat	_Rwbty,4216
	global	___lbmod

;; *************** function ___lbmod *****************
;; Defined at:
;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lbmod.c"
;; Parameters:    Size  Location     Type
;;  dividend        1    wreg     unsigned char 
;;  divisor         1    0[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  dividend        1    1[COMRAM] unsigned char 
;;  rem             1    3[COMRAM] unsigned char 
;;  counter         1    2[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : 0/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FormatWswData
;; This function uses a non-reentrant model
;;
psect	text268,class=CODE,space=0,reloc=2
global __ptext268
__ptext268:
psect	text268
	file	"C:\Program Files\Microchip\xc8\v1.12\sources\lbmod.c"
	line	5
	global	__size_of___lbmod
	__size_of___lbmod	equ	__end_of___lbmod-___lbmod
	
___lbmod:; BSR set to: 1

	opt	stack 20
;___lbmod@dividend stored from wreg
	line	9
	movff	wreg,(c:___lbmod@dividend)
	
i2l26916:; BSR set to: 1

	movlw	low(08h)
	movwf	((c:___lbmod@counter)),c
	line	10
	
i2l26918:; BSR set to: 1

	clrf	((c:___lbmod@rem)),c
	line	12
	
i2l26920:
	bcf	status,0
	rlcf	((c:___lbmod@dividend))&0ffh,w
	rlcf	((c:___lbmod@rem))&0ffh,w
	movwf	((c:___lbmod@rem)),c
	line	13
	
i2l26922:
	bcf status,0
	rlcf	((c:___lbmod@dividend)),c

	line	14
	
i2l26924:
	movf	((c:___lbmod@divisor)),c,w
	subwf	((c:___lbmod@rem)),c,w
	btfss	status,0
	goto	i2u4633_41
	goto	i2u4633_40
i2u4633_41:
	goto	i2l26928
i2u4633_40:
	line	15
	
i2l26926:
	movf	((c:___lbmod@divisor)),c,w
	subwf	((c:___lbmod@rem)),c
	line	16
	
i2l26928:
	decfsz	((c:___lbmod@counter)),c
	
	goto	i2l26920
	line	17
	
i2l26930:
	movf	((c:___lbmod@rem)),c,w
	line	18
	
i2l5298:
	return
	opt stack 0
GLOBAL	__end_of___lbmod
	__end_of___lbmod:
	signat	___lbmod,8313
	global	i2___lbdiv

;; *************** function i2___lbdiv *****************
;; Defined at:
;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lbdiv.c"
;; Parameters:    Size  Location     Type
;;  __lbdiv         1    wreg     unsigned char 
;;  __lbdiv         1    0[COMRAM] unsigned char 
;; Auto vars:     Size  Location     Type
;;  __lbdiv         1    1[COMRAM] unsigned char 
;;  __lbdiv         1    3[COMRAM] unsigned char 
;;  __lbdiv         1    2[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;                  1    wreg      unsigned char 
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/1
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_FormatWswData
;; This function uses a non-reentrant model
;;
psect	text269,class=CODE,space=0,reloc=2
global __ptext269
__ptext269:
psect	text269
	file	"C:\Program Files\Microchip\xc8\v1.12\sources\lbdiv.c"
	line	5
	global	__size_ofi2___lbdiv
	__size_ofi2___lbdiv	equ	__end_ofi2___lbdiv-i2___lbdiv
	
i2___lbdiv:
	opt	stack 20
;i2___lbdiv@dividend stored from wreg
	line	9
	movff	wreg,(c:i2___lbdiv@dividend)
	
i2l27048:; BSR set to: 1

	clrf	((c:i2___lbdiv@quotient)),c
	line	10
	
i2l27050:; BSR set to: 1

	movf	((c:i2___lbdiv@divisor)),c,w
	btfsc	status,2
	goto	i2u4674_41
	goto	i2u4674_40
i2u4674_41:
	goto	i2l27070
i2u4674_40:
	line	11
	
i2l27052:; BSR set to: 1

	movlw	low(01h)
	movwf	((c:i2___lbdiv@counter)),c
	line	12
	goto	i2l27058
	line	13
	
i2l27054:; BSR set to: 1

	bcf status,0
	rlcf	((c:i2___lbdiv@divisor)),c

	line	14
	
i2l27056:; BSR set to: 1

	incf	((c:i2___lbdiv@counter)),c
	line	12
	
i2l27058:; BSR set to: 1

	
	btfss	((c:i2___lbdiv@divisor)),c,(7)&7
	goto	i2u4675_41
	goto	i2u4675_40
i2u4675_41:
	goto	i2l27054
i2u4675_40:
	line	17
	
i2l27060:; BSR set to: 1

	bcf status,0
	rlcf	((c:i2___lbdiv@quotient)),c

	line	18
	movf	((c:i2___lbdiv@divisor)),c,w
	subwf	((c:i2___lbdiv@dividend)),c,w
	btfss	status,0
	goto	i2u4676_41
	goto	i2u4676_40
i2u4676_41:
	goto	i2l27066
i2u4676_40:
	line	19
	
i2l27062:; BSR set to: 1

	movf	((c:i2___lbdiv@divisor)),c,w
	subwf	((c:i2___lbdiv@dividend)),c
	line	20
	
i2l27064:; BSR set to: 1

	bsf	(0+(0/8)+(c:i2___lbdiv@quotient)),c,(0)&7
	line	22
	
i2l27066:; BSR set to: 1

	bcf status,0
	rrcf	((c:i2___lbdiv@divisor)),c

	line	23
	
i2l27068:; BSR set to: 1

	decfsz	((c:i2___lbdiv@counter)),c
	
	goto	i2l27060
	line	25
	
i2l27070:; BSR set to: 1

	movf	((c:i2___lbdiv@quotient)),c,w
	line	26
	
i2l5292:; BSR set to: 1

	return
	opt stack 0
GLOBAL	__end_ofi2___lbdiv
	__end_ofi2___lbdiv:
	signat	i2___lbdiv,89
	global	i2_RdPrt

;; *************** function i2_RdPrt *****************
;; Defined at:
;;		line 305 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
;; Parameters:    Size  Location     Type
;;  RdPrt           1    wreg     const unsigned char 
;; Auto vars:     Size  Location     Type
;;  RdPrt           1    1[COMRAM] const unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, fsr2l, fsr2h, status,2, status,0
;; Tracked objects:
;;		On entry : C/1
;;		On exit  : F/0
;;		Unchanged: 0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        2 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_SetTData
;;		_FormatDataIMY
;; This function uses a non-reentrant model
;;
psect	text270,class=CODE,space=0,reloc=2
global __ptext270
__ptext270:
psect	text270
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
	line	305
	global	__size_ofi2_RdPrt
	__size_ofi2_RdPrt	equ	__end_ofi2_RdPrt-i2_RdPrt
	
i2_RdPrt:; BSR set to: 1

	opt	stack 20
;i2RdPrt@Index stored from wreg
	movff	wreg,(c:i2RdPrt@Index)
	line	306
	
i2l27040:
;port.c: 306: if (Index>26-1) asm("RESET");
	movlw	(01Ah-1)
	cpfsgt	((c:i2RdPrt@Index)),c
	goto	i2u4673_41
	goto	i2u4673_40
i2u4673_41:
	goto	i2l27044
i2u4673_40:
	
i2l27042:
# 306 "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
RESET ;# 
psect	text270
	line	307
	
i2l27044:
;port.c: 307: return SPort[Index].Output;
	movf	((c:i2RdPrt@Index)),c,w
	movlb	0	; () banked
	addlw	low(_SPort)	;volatile
	movwf	fsr2l
	clrf	fsr2h
	rrcf	(indf2)&0ffh,w
	andlw	(1<<1)-1
	movwf	(??i2_RdPrt+0+0)&0ffh,c
	rrcf	((??i2_RdPrt+0+0)),c,w
	line	308
	
i2l2367:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_ofi2_RdPrt
	__end_ofi2_RdPrt:
	signat	i2_RdPrt,88
	global	i2_RefStan

;; *************** function i2_RefStan *****************
;; Defined at:
;;		line 61 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
;; Parameters:    Size  Location     Type
;;		None
;; Auto vars:     Size  Location     Type
;;  RefStan         1    3[COMRAM] unsigned char 
;;  RefStan         1    2[COMRAM] unsigned char 
;;  RefStan         1    1[COMRAM] unsigned char 
;; Return value:  Size  Location     Type
;;		None               void
;; Registers used:
;;		wreg, status,2, status,0
;; Tracked objects:
;;		On entry : F/1
;;		On exit  : F/0
;;		Unchanged: FFFFFFF0/0
;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
;;Total ram usage:        4 bytes
;; Hardware stack levels used:    1
;; This function calls:
;;		Nothing
;; This function is called by:
;;		_StabPort
;; This function uses a non-reentrant model
;;
psect	text271,class=CODE,space=0,reloc=2
global __ptext271
__ptext271:
psect	text271
	file	"C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
	line	61
	global	__size_ofi2_RefStan
	__size_ofi2_RefStan	equ	__end_ofi2_RefStan-i2_RefStan
	
i2_RefStan:; BSR set to: 0

	opt	stack 21
	line	63
	
i2l26988:; BSR set to: 1

;port.c: 63: SPort[0].Input=0;
	movlb	0	; () banked
	bcf	((_SPort))&0ffh,0	;volatile
	line	65
	
i2l26990:; BSR set to: 0

;port.c: 65: SPort[1].Input=(PORTBbits.RB5)?1:0;
	
	btfsc	((c:3969)),c,5	;volatile
	goto	i2u4644_41
	goto	i2u4644_40
i2u4644_41:
	movlw	1
	goto	i2u4644_46
i2u4644_40:
	movlw	0
i2u4644_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+01h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+01h))&0ffh	;volatile
	line	67
	
i2l26992:; BSR set to: 0

;port.c: 67: SPort[2].Input=(PORTCbits.RC0&&PORTAbits.RA7)?1:0;
	clrf	((c:i2_RefStan$2769)),c
	
i2l26994:; BSR set to: 0

	
	btfss	((c:3970)),c,0	;volatile
	goto	i2u4645_41
	goto	i2u4645_40
i2u4645_41:
	goto	i2l27000
i2u4645_40:
	
i2l26996:; BSR set to: 0

	
	btfss	((c:3968)),c,7	;volatile
	goto	i2u4646_41
	goto	i2u4646_40
i2u4646_41:
	goto	i2l27000
i2u4646_40:
	
i2l26998:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:i2_RefStan$2769)),c
	
i2l27000:; BSR set to: 0

	btfsc	(c:i2_RefStan$2769),c,0
	bra	i2u4647_45
	bcf	(0+(_SPort+02h))&0ffh,0	;volatile
	bra	i2u4647_46
	i2u4647_45:
	movlb	0	; () banked
	bsf	(0+(_SPort+02h))&0ffh,0	;volatile
	i2u4647_46:

	line	69
	
i2l27002:; BSR set to: 0

;port.c: 69: SPort[3].Input=(PORTAbits.RA6&&PORTAbits.RA7)?1:0;
	clrf	((c:i2_RefStan$2770)),c
	
i2l27004:; BSR set to: 0

	
	btfss	((c:3968)),c,6	;volatile
	goto	i2u4648_41
	goto	i2u4648_40
i2u4648_41:
	goto	i2l27010
i2u4648_40:
	
i2l27006:; BSR set to: 0

	
	btfss	((c:3968)),c,7	;volatile
	goto	i2u4649_41
	goto	i2u4649_40
i2u4649_41:
	goto	i2l27010
i2u4649_40:
	
i2l27008:; BSR set to: 0

	movlw	low(01h)
	movwf	((c:i2_RefStan$2770)),c
	
i2l27010:; BSR set to: 0

	btfsc	(c:i2_RefStan$2770),c,0
	bra	i2u4650_45
	bcf	(0+(_SPort+03h))&0ffh,0	;volatile
	bra	i2u4650_46
	i2u4650_45:
	movlb	0	; () banked
	bsf	(0+(_SPort+03h))&0ffh,0	;volatile
	i2u4650_46:

	line	71
	
i2l27012:; BSR set to: 0

;port.c: 71: SPort[4].Input=(PORTAbits.RA7)?1:0;
	
	btfsc	((c:3968)),c,7	;volatile
	goto	i2u4651_41
	goto	i2u4651_40
i2u4651_41:
	movlw	1
	goto	i2u4651_46
i2u4651_40:
	movlw	0
i2u4651_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+04h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+04h))&0ffh	;volatile
	line	73
	
i2l27014:; BSR set to: 0

;port.c: 73: SPort[5].Input=(PORTDbits.RD4)?0:1;
	
	btfss	((c:3971)),c,4	;volatile
	goto	i2u4652_41
	goto	i2u4652_40
i2u4652_41:
	movlw	1
	goto	i2u4652_46
i2u4652_40:
	movlw	0
i2u4652_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+05h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+05h))&0ffh	;volatile
	line	75
	
i2l27016:; BSR set to: 0

;port.c: 75: SPort[6].Input=0;
	bcf	(0+(_SPort+06h))&0ffh,0	;volatile
	line	77
	
i2l27018:; BSR set to: 0

;port.c: 77: SPort[7].Input=0;
	bcf	(0+(_SPort+07h))&0ffh,0	;volatile
	line	79
	
i2l27020:; BSR set to: 0

;port.c: 79: SPort[8].Input=(PORTCbits.RC5)?0:1;
	
	btfss	((c:3970)),c,5	;volatile
	goto	i2u4653_41
	goto	i2u4653_40
i2u4653_41:
	movlw	1
	goto	i2u4653_46
i2u4653_40:
	movlw	0
i2u4653_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+08h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+08h))&0ffh	;volatile
	line	81
	
i2l27022:; BSR set to: 0

;port.c: 81: SPort[9].Input=(DtCO._on_DZ_CO)?1:0;
	
	btfsc	((_DtCO))&0ffh,5
	goto	i2u4654_41
	goto	i2u4654_40
i2u4654_41:
	movlw	1
	goto	i2u4654_46
i2u4654_40:
	movlw	0
i2u4654_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+09h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+09h))&0ffh	;volatile
	line	83
	
i2l27024:; BSR set to: 0

;port.c: 83: SPort[10].Input=(DtCW._on_DZ_CW)?1:0;
	
	btfsc	((_DtCW))&0ffh,4
	goto	i2u4655_41
	goto	i2u4655_40
i2u4655_41:
	movlw	1
	goto	i2u4655_46
i2u4655_40:
	movlw	0
i2u4655_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+0Ah))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+0Ah))&0ffh	;volatile
	line	85
	
i2l27026:; BSR set to: 0

;port.c: 85: SPort[11].Input=(PORTAbits.RA4)?0:1;
	
	btfss	((c:3968)),c,4	;volatile
	goto	i2u4656_41
	goto	i2u4656_40
i2u4656_41:
	movlw	1
	goto	i2u4656_46
i2u4656_40:
	movlw	0
i2u4656_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+0Bh))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+0Bh))&0ffh	;volatile
	line	87
	
i2l27028:; BSR set to: 0

;port.c: 87: SPort[12].Input=(PORTDbits.RD5)?1:0;
	
	btfsc	((c:3971)),c,5	;volatile
	goto	i2u4657_41
	goto	i2u4657_40
i2u4657_41:
	movlw	1
	goto	i2u4657_46
i2u4657_40:
	movlw	0
i2u4657_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+0Ch))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+0Ch))&0ffh	;volatile
	line	89
	
i2l27030:; BSR set to: 0

;port.c: 89: SPort[13].Input=(DtCO._cold_CO||DtCO._hot_CO)?1:0;
	movlw	low(01h)
	movwf	((c:i2_RefStan$2771)),c
	
i2l27032:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,2
	goto	i2u4658_41
	goto	i2u4658_40
i2u4658_41:
	goto	i2l2337
i2u4658_40:
	
i2l27034:; BSR set to: 0

	
	btfsc	(0+(_DtCO+01h))&0ffh,3
	goto	i2u4659_41
	goto	i2u4659_40
i2u4659_41:
	goto	i2l2337
i2u4659_40:
	
i2l27036:; BSR set to: 0

	clrf	((c:i2_RefStan$2771)),c
	
i2l2337:; BSR set to: 0

	btfsc	(c:i2_RefStan$2771),c,0
	bra	i2u4660_45
	bcf	(0+(_SPort+0Dh))&0ffh,0	;volatile
	bra	i2u4660_46
	i2u4660_45:
	movlb	0	; () banked
	bsf	(0+(_SPort+0Dh))&0ffh,0	;volatile
	i2u4660_46:

	line	91
	
i2l27038:; BSR set to: 0

;port.c: 91: SPort[14].Input=(DtCS._error)?1:0;
	
	btfsc	((c:_DtCS)),c,3
	goto	i2u4661_41
	goto	i2u4661_40
i2u4661_41:
	movlw	1
	goto	i2u4661_46
i2u4661_40:
	movlw	0
i2u4661_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+0Eh))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+0Eh))&0ffh	;volatile
	line	93
;port.c: 93: SPort[15].Input=(DtCS._work)?1:0;
	
	btfsc	((c:_DtCS)),c,4
	goto	i2u4662_41
	goto	i2u4662_40
i2u4662_41:
	movlw	1
	goto	i2u4662_46
i2u4662_40:
	movlw	0
i2u4662_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+0Fh))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+0Fh))&0ffh	;volatile
	line	95
;port.c: 95: SPort[16].Input=(DtCS._lo)?1:0;
	
	btfsc	((c:_DtCS)),c,1
	goto	i2u4663_41
	goto	i2u4663_40
i2u4663_41:
	movlw	1
	goto	i2u4663_46
i2u4663_40:
	movlw	0
i2u4663_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+010h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+010h))&0ffh	;volatile
	line	97
;port.c: 97: SPort[17].Input=(DtCW._cold_CW)?1:0;
	
	btfsc	((_DtCW))&0ffh,7
	goto	i2u4664_41
	goto	i2u4664_40
i2u4664_41:
	movlw	1
	goto	i2u4664_46
i2u4664_40:
	movlw	0
i2u4664_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+011h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+011h))&0ffh	;volatile
	line	99
;port.c: 99: SPort[18].Input=(DtCO._err_CO)?1:0;
	
	btfsc	((_DtCO))&0ffh,0
	goto	i2u4665_41
	goto	i2u4665_40
i2u4665_41:
	movlw	1
	goto	i2u4665_46
i2u4665_40:
	movlw	0
i2u4665_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+012h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+012h))&0ffh	;volatile
	line	101
;port.c: 101: SPort[19].Input=(DtCO._ad_CO)?1:0;
	
	btfsc	((_DtCO))&0ffh,2
	goto	i2u4666_41
	goto	i2u4666_40
i2u4666_41:
	movlw	1
	goto	i2u4666_46
i2u4666_40:
	movlw	0
i2u4666_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+013h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+013h))&0ffh	;volatile
	line	103
;port.c: 103: SPort[20].Input=(DtZW._on_ZW)?1:0;
	movlb	1	; () banked
	
	btfsc	((_DtZW))&0ffh,0
	goto	i2u4667_41
	goto	i2u4667_40
i2u4667_41:
	movlw	1
	goto	i2u4667_46
i2u4667_40:
	movlw	0
i2u4667_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movlb	0	; () banked
	movf	(0+(_SPort+014h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+014h))&0ffh	;volatile
	line	105
;port.c: 105: SPort[21].Input=(PORTAbits.RA6)?1:0;
	
	btfsc	((c:3968)),c,6	;volatile
	goto	i2u4668_41
	goto	i2u4668_40
i2u4668_41:
	movlw	1
	goto	i2u4668_46
i2u4668_40:
	movlw	0
i2u4668_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+015h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+015h))&0ffh	;volatile
	line	107
;port.c: 107: SPort[22].Input=(PORTBbits.RB1)?0:1;
	
	btfss	((c:3969)),c,1	;volatile
	goto	i2u4669_41
	goto	i2u4669_40
i2u4669_41:
	movlw	1
	goto	i2u4669_46
i2u4669_40:
	movlw	0
i2u4669_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+016h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+016h))&0ffh	;volatile
	line	109
;port.c: 109: SPort[23].Input=(PORTBbits.RB2)?0:1;
	
	btfss	((c:3969)),c,2	;volatile
	goto	i2u4670_41
	goto	i2u4670_40
i2u4670_41:
	movlw	1
	goto	i2u4670_46
i2u4670_40:
	movlw	0
i2u4670_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+017h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+017h))&0ffh	;volatile
	line	111
;port.c: 111: SPort[24].Input=(PORTBbits.RB4)?0:1;
	
	btfss	((c:3969)),c,4	;volatile
	goto	i2u4671_41
	goto	i2u4671_40
i2u4671_41:
	movlw	1
	goto	i2u4671_46
i2u4671_40:
	movlw	0
i2u4671_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+018h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+018h))&0ffh	;volatile
	line	113
;port.c: 113: SPort[25].Input=(PORTBbits.RB3)?0:1;
	
	btfss	((c:3969)),c,3	;volatile
	goto	i2u4672_41
	goto	i2u4672_40
i2u4672_41:
	movlw	1
	goto	i2u4672_46
i2u4672_40:
	movlw	0
i2u4672_46:
	movwf	(??i2_RefStan+0+0)&0ffh,c
	movf	(0+(_SPort+019h))&0ffh,w	;volatile
	xorwf	((??i2_RefStan+0+0)),c,w
	andlw	not ((1<<1)-1)
	xorwf	((??i2_RefStan+0+0)),c,w
	movwf	(0+(_SPort+019h))&0ffh	;volatile
	line	115
	
i2l2338:; BSR set to: 0

	return
	opt stack 0
GLOBAL	__end_ofi2_RefStan
	__end_ofi2_RefStan:
	signat	i2_RefStan,88
psect	smallconst
	db 0	; dummy byte at the end
	global	__smallconst
	global	__mediumconst
	GLOBAL	__activetblptr
__activetblptr	EQU	3
	psect	intsave_regs,class=BIGRAM,space=1
	PSECT	rparam,class=COMRAM,space=1
	GLOBAL	__Lrparam
	FNCONF	rparam,??,?
GLOBAL	__Lparam, __Hparam
GLOBAL	__Lrparam, __Hrparam
__Lparam	EQU	__Lrparam
__Hparam	EQU	__Hrparam
	end
