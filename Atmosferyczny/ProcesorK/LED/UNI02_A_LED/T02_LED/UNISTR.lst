

Microchip Technology PIC18 PRO Macro Assembler V1.12 build 49521 
                                                                                               Wed Mar 20 14:05:15 2013

HI-TECH Software Omniscient Code Generator (PRO mode) build 49521
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,delta=1
   160                           	psect	text141,global,reloc=2,class=CODE,delta=1
   161                           	psect	text142,global,reloc=2,class=CODE,delta=1
   162                           	psect	text143,global,reloc=2,class=CODE,delta=1
   163                           	psect	text144,global,reloc=2,class=CODE,delta=1
   164                           	psect	text145,global,reloc=2,class=CODE,delta=1
   165                           	psect	text146,global,reloc=2,class=CODE,delta=1
   166                           	psect	text147,global,reloc=2,class=CODE,delta=1
   167                           	psect	text148,global,reloc=2,class=CODE,delta=1
   168                           	psect	text149,global,reloc=2,class=CODE,delta=1
   169                           	psect	text150,global,reloc=2,class=CODE,delta=1
   170                           	psect	text151,global,reloc=2,class=CODE,delta=1
   171                           	psect	text152,global,reloc=2,class=CODE,delta=1
   172                           	psect	text153,global,reloc=2,class=CODE,delta=1
   173                           	psect	text154,global,reloc=2,class=CODE,delta=1
   174                           	psect	text155,global,reloc=2,class=CODE,delta=1
   175                           	psect	text156,global,reloc=2,class=CODE,delta=1
   176                           	psect	text157,global,reloc=2,class=CODE,delta=1
   177                           	psect	text158,global,reloc=2,class=CODE,delta=1
   178                           	psect	text159,global,reloc=2,class=CODE,delta=1
   179                           	psect	text160,global,reloc=2,class=CODE,delta=1
   180                           	psect	text161,global,reloc=2,class=CODE,delta=1
   181                           	psect	text162,global,reloc=2,class=CODE,delta=1
   182                           	psect	text163,global,reloc=2,class=CODE,delta=1
   183                           	psect	text164,global,reloc=2,class=CODE,delta=1
   184                           	psect	text165,global,reloc=2,class=CODE,delta=1
   185                           	psect	text166,global,reloc=2,class=CODE,delta=1
   186                           	psect	text167,global,reloc=2,class=CODE,delta=1
   187                           	psect	text168,global,reloc=2,class=CODE,delta=1
   188                           	psect	text169,global,reloc=2,class=CODE,delta=1
   189                           	psect	text170,global,reloc=2,class=CODE,delta=1
   190                           	psect	text171,global,reloc=2,class=CODE,delta=1
   191                           	psect	text172,global,reloc=2,class=CODE,delta=1
   192                           	psect	text173,global,reloc=2,class=CODE,delta=1
   193                           	psect	text174,global,reloc=2,class=CODE,delta=1
   194                           	psect	text175,global,reloc=2,class=CODE,delta=1
   195                           	psect	text176,global,reloc=2,class=CODE,delta=1
   196                           	psect	text177,global,reloc=2,class=CODE,delta=1
   197                           	psect	text178,global,reloc=2,class=CODE,delta=1
   198                           	psect	text179,global,reloc=2,class=CODE,delta=1
   199                           	psect	text180,global,reloc=2,class=CODE,delta=1
   200                           	psect	text181,global,reloc=2,class=CODE,delta=1
   201                           	psect	text182,global,reloc=2,class=CODE,delta=1
   202                           	psect	text183,global,reloc=2,class=CODE,delta=1
   203                           	psect	text184,global,reloc=2,class=CODE,delta=1
   204                           	psect	text185,global,reloc=2,class=CODE,delta=1
   205                           	psect	text186,global,reloc=2,class=CODE,delta=1
   206                           	psect	text187,global,reloc=2,class=CODE,delta=1
   207                           	psect	text188,global,reloc=2,class=CODE,delta=1
   208                           	psect	text189,global,reloc=2,class=CODE,delta=1
   209                           	psect	text190,global,reloc=2,class=CODE,delta=1
   210                           	psect	text191,global,reloc=2,class=CODE,delta=1
   211                           	psect	text192,global,reloc=2,class=CODE,delta=1
   212                           	psect	text193,global,reloc=2,class=CODE,delta=1
   213                           	psect	text194,global,reloc=2,class=CODE,delta=1
   214                           	psect	text195,global,reloc=2,class=CODE,delta=1
   215                           	psect	text196,global,reloc=2,class=CODE,delta=1
   216                           	psect	text197,global,reloc=2,class=CODE,delta=1
   217                           	psect	text198,global,reloc=2,class=CODE,delta=1
   218                           	psect	text199,global,reloc=2,class=CODE,delta=1
   219                           	psect	text200,global,reloc=2,class=CODE,delta=1
   220                           	psect	text201,global,reloc=2,class=CODE,delta=1
   221                           	psect	text202,global,reloc=2,class=CODE,delta=1
   222                           	psect	text203,global,reloc=2,class=CODE,delta=1
   223                           	psect	text204,global,reloc=2,class=CODE,delta=1
   224                           	psect	text205,global,reloc=2,class=CODE,delta=1
   225                           	psect	text206,global,reloc=2,class=CODE,delta=1
   226                           	psect	text207,global,reloc=2,class=CODE,delta=1
   227                           	psect	text208,global,reloc=2,class=CODE,delta=1
   228                           	psect	text209,global,reloc=2,class=CODE,delta=1
   229                           	psect	text210,global,reloc=2,class=CODE,delta=1
   230                           	psect	text211,global,reloc=2,class=CODE,delta=1
   231                           	psect	text212,global,reloc=2,class=CODE,delta=1
   232                           	psect	text213,global,reloc=2,class=CODE,delta=1
   233                           	psect	text214,global,reloc=2,class=CODE,delta=1
   234                           	psect	text215,global,reloc=2,class=CODE,delta=1
   235                           	psect	text216,global,reloc=2,class=CODE,delta=1
   236                           	psect	text217,global,reloc=2,class=CODE,delta=1
   237                           	psect	text218,global,reloc=2,class=CODE,delta=1
   238                           	psect	text219,global,reloc=2,class=CODE,delta=1
   239                           	psect	text220,global,reloc=2,class=CODE,delta=1
   240                           	psect	text221,global,reloc=2,class=CODE,delta=1
   241                           	psect	text222,global,reloc=2,class=CODE,delta=1
   242                           	psect	text223,global,reloc=2,class=CODE,delta=1
   243                           	psect	text224,global,reloc=2,class=CODE,delta=1
   244                           	psect	text225,global,reloc=2,class=CODE,delta=1
   245                           	psect	text226,global,reloc=2,class=CODE,delta=1
   246                           	psect	text227,global,reloc=2,class=CODE,delta=1
   247                           	psect	text228,global,reloc=2,class=CODE,delta=1
   248                           	psect	text229,global,reloc=2,class=CODE,delta=1
   249                           	psect	text230,global,reloc=2,class=CODE,delta=1
   250                           	psect	text231,global,reloc=2,class=CODE,delta=1
   251                           	psect	text232,global,reloc=2,class=CODE,delta=1
   252                           	psect	text233,global,reloc=2,class=CODE,delta=1
   253                           	psect	text234,global,reloc=2,class=CODE,delta=1
   254                           	psect	text235,global,reloc=2,class=CODE,delta=1
   255                           	psect	text236,global,reloc=2,class=CODE,delta=1
   256                           	psect	text237,global,reloc=2,class=CODE,delta=1
   257                           	psect	text238,global,reloc=2,class=CODE,delta=1
   258                           	psect	text239,global,reloc=2,class=CODE,delta=1
   259                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   260                           	psect	text241,global,reloc=2,class=CODE,delta=1
   261                           	psect	text242,global,reloc=2,class=CODE,delta=1
   262                           	psect	text243,global,reloc=2,class=CODE,delta=1
   263                           	psect	text244,global,reloc=2,class=CODE,delta=1
   264                           	psect	text245,global,reloc=2,class=CODE,delta=1
   265                           	psect	text246,global,reloc=2,class=CODE,delta=1
   266                           	psect	text247,global,reloc=2,class=CODE,delta=1
   267                           	psect	text248,global,reloc=2,class=CODE,delta=1
   268                           	psect	text249,global,reloc=2,class=CODE,delta=1
   269                           	psect	text250,global,reloc=2,class=CODE,delta=1
   270                           	psect	text251,global,reloc=2,class=CODE,delta=1
   271                           	psect	text252,global,reloc=2,class=CODE,delta=1
   272                           	psect	text253,global,reloc=2,class=CODE,delta=1
   273                           	psect	text254,global,reloc=2,class=CODE,delta=1
   274                           	psect	text255,global,reloc=2,class=CODE,delta=1
   275                           	psect	text256,global,reloc=2,class=CODE,delta=1
   276                           	psect	text257,global,reloc=2,class=CODE,delta=1
   277                           	psect	text258,global,reloc=2,class=CODE,delta=1
   278                           	psect	text259,global,reloc=2,class=CODE,delta=1
   279                           	psect	text260,global,reloc=2,class=CODE,delta=1
   280                           	psect	text261,global,reloc=2,class=CODE,delta=1
   281                           	psect	text262,global,reloc=2,class=CODE,delta=1
   282                           	psect	text263,global,reloc=2,class=CODE,delta=1
   283                           	psect	text264,global,reloc=2,class=CODE,delta=1
   284                           	psect	text265,global,reloc=2,class=CODE,delta=1
   285                           	psect	text266,global,reloc=2,class=CODE,delta=1
   286                           	psect	text267,global,reloc=2,class=CODE,delta=1
   287                           	psect	text268,global,reloc=2,class=CODE,delta=1
   288                           	psect	text269,global,reloc=2,class=CODE,delta=1
   289                           	psect	text270,global,reloc=2,class=CODE,delta=1
   290                           	psect	text271,global,reloc=2,class=CODE,delta=1
   291                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   292                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   293                           	psect	pa_nodes,global,class=CODE,delta=1
   294  0000                     tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           prodh	equ	0xFF4
   299                           prodl	equ	0xFF3
   300                           intcon	equ	0xFF2
   301                           wreg	equ	0xFE8
   302                           indf1	equ	0xFE7
   303                           postinc1	equ	0xFE6
   304                           postdec1	equ	0xFE5
   305                           fsr1h	equ	0xFE2
   306                           fsr1l	equ	0xFE1
   307                           indf2	equ	0xFDF
   308                           postinc2	equ	0xFDE
   309                           postdec2	equ	0xFDD
   310                           fsr2h	equ	0xFDA
   311                           fsr2l	equ	0xFD9
   312                           status	equ	0xFD8
   313                           
   314                           	psect	eeprom_data
   315  F00000  63 63 62 62 61 60  	db	99,99,98,98,97,96,95,95	;# 
      +       5F 5F              
   316  F00008  5E 5D 5C 5C 5B 5A  	db	94,93,92,92,91,90,90,89	;# 
      +       5A 59              
   317  F00010  58 58 57 57 56 55  	db	88,88,87,87,86,85,85,84	;# 
      +       55 54              
   318  F00018  54 53 52 52 51 51  	db	84,83,82,82,81,81,80,80	;# 
      +       50 50              
   319  F00020  4F 4F 4E 4D 4D 4C  	db	79,79,78,77,77,76,76,75	;# 
      +       4C 4B              
   320  F00028  4B 4A 4A 49 49 48  	db	75,74,74,73,73,72,72,71	;# 
      +       48 47              
   321  F00030  47 46 46 46 45 45  	db	71,70,70,70,69,69,68,68	;# 
      +       44 44              
   322  F00038  43 43 42 42 41 41  	db	67,67,66,66,65,65,64,64	;# 
      +       40 40              
   323  F00040  40 3F 3F 3E 3E 3D  	db	64,63,63,62,62,61,61,61	;# 
      +       3D 3D              
   324  F00048  3C 3C 3B 3B 3A 3A  	db	60,60,59,59,58,58,57,57	;# 
      +       39 39              
   325  F00050  39 38 38 37 37 36  	db	57,56,56,55,55,54,54,54	;# 
      +       36 36              
   326  F00058  35 35 34 34 34 33  	db	53,53,52,52,52,51,51,50	;# 
      +       33 32              
   327  F00060  32 31 31 31 30 30  	db	50,49,49,49,48,48,47,47	;# 
      +       2F 2F              
   328  F00068  2E 2E 2E 2D 2D 2C  	db	46,46,46,45,45,44,44,44	;# 
      +       2C 2C              
   329  F00070  2B 2B 2A 2A 29 29  	db	43,43,42,42,41,41,41,40	;# 
      +       29 28              
   330  F00078  28 27 27 26 26 25  	db	40,39,39,38,38,37,37,37	;# 
      +       25 25              
   331  F00080  24 24 23 23 22 22  	db	36,36,35,35,34,34,33,33	;# 
      +       21 21              
   332  F00088  20 20 1F 1F 1E 1E  	db	32,32,31,31,30,30,29,29	;# 
      +       1D 1D              
   333  F00090  1C 1C 1B 1B 1A 1A  	db	28,28,27,27,26,26,25,24	;# 
      +       19 18              
   334  F00098  18 17 17 16 16 15  	db	24,23,23,22,22,21,21,20	;# 
      +       15 14              
   335  F000A0  13 13 12 11 11 10  	db	19,19,18,17,17,16,16,15	;# 
      +       10 0F              
   336  F000A8  0E 0E 0D 0C 0B 0B  	db	14,14,13,12,11,11,10,9	;# 
      +       0A 09              
   337  F000B0  08 07 06 06 05 04  	db	8,7,6,6,5,4,3,2	;# 
      +       03 02              
   338  F000B8  01 00 00 00 00 00  	db	1,0,0,0,0,0,0,0	;# 
      +       00 00              
   339  F000C0  00 28 63 63 00 03  	db	0,40,99,99,0,3,0,0	;# 
      +       00 00              
   340  F000C8  01 55 3C 03 00 00  	db	1,85,60,3,0,0,0,0	;# 
      +       00 00              
   341  F000D0  00 14 0F 00 05 00  	db	0,20,15,0,5,0,0,0	;# 
      +       00 00              
   342  F000D8  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;# 
      +       00 00              
   343  F000E0  28 28 27 26 26 25  	db	40,40,39,38,38,37,36,36	;# 
      +       24 24              
   344  F000E8  23 22 22 21 21 20  	db	35,34,34,33,33,32,32,31	;# 
      +       20 1F              
   345  F000F0  1F 1E 1E 1D 1D 1C  	db	31,30,30,29,29,28,28,27	;# 
      +       1C 1B              
   346  F000F8  1B 1A 1A 19 19 18  	db	27,26,26,25,25,24,24,23	;# 
      +       18 17              
   347  F00100  17 16 16 16 15 15  	db	23,22,22,22,21,21,20,20	;# 
      +       14 14              
   348  F00108  14 13 13 12 12 12  	db	20,19,19,18,18,18,17,17	;# 
      +       11 11              
   349  F00110  11 10 10 0F 0F 0F  	db	17,16,16,15,15,15,14,14	;# 
      +       0E 0E              
   350  F00118  0E 0D 0D 0D 0C 0C  	db	14,13,13,13,12,12,12,11	;# 
      +       0C 0B              
   351  F00120  0B 0B 0A 0A 0A 09  	db	11,11,10,10,10,9,9,9	;# 
      +       09 09              
   352  F00128  08 08 08 07 07 07  	db	8,8,8,7,7,7,6,6	;# 
      +       06 06              
   353  F00130  06 05 05 05 04 04  	db	6,5,5,5,4,4,4,3	;# 
      +       04 03              
   354  F00138  03 03 02 02 02 01  	db	3,3,2,2,2,1,1,1	;# 
      +       01 01              
   355  F00140  01 00 00 00 FF FF  	db	1,0,0,0,-1,-1,-1,-2	;# 
      +       FF FE              
   356  F00148  FE FE FE FD FD FD  	db	-2,-2,-2,-3,-3,-3,-4,-4	;# 
      +       FC FC              
   357  F00150  FC FB FB FB FA FA  	db	-4,-5,-5,-5,-6,-6,-6,-7	;# 
      +       FA F9              
   358  F00158  F9 F9 F8 F8 F8 F7  	db	-7,-7,-8,-8,-8,-9,-9,-9	;# 
      +       F7 F7              
   359  F00160  F7 F6 F6 F6 F5 F5  	db	-9,-10,-10,-10,-11,-11,-11,-12	;# 
      +       F5 F4              
   360  F00168  F4 F3 F3 F3 F3 F2  	db	-12,-13,-13,-13,-13,-14,-14,-14	;# 
      +       F2 F2              
   361  F00170  F1 F1 F0 F0 F0 EF  	db	-15,-15,-16,-16,-16,-17,-17,-17	;# 
      +       EF EF              
   362  F00178  EE EE EE ED ED EC  	db	-18,-18,-18,-19,-19,-20,-20,-20	;# 
      +       EC EC              
   363  F00180  EB EB EA EA EA E9  	db	-21,-21,-22,-22,-22,-23,-23,-24	;# 
      +       E9 E8              
   364  F00188  E8 E7 E7 E7 E6 E6  	db	-24,-25,-25,-25,-26,-26,-27,-27	;# 
      +       E5 E5              
   365  F00190  E4 E4 E3 E3 E2 E2  	db	-28,-28,-29,-29,-30,-30,-31,-31	;# 
      +       E1 E1              
   366  F00198  E0 DF DF DE DD DD  	db	-32,-33,-33,-34,-35,-35,-36,-37	;# 
      +       DC DB              
   367  F001A0  DB DA D9 D8 D8 D8  	db	-37,-38,-39,-40,-40,-40,-40,-40	;# 
      +       D8 D8              
   368  F001A8  63 63 62 62 61 60  	db	99,99,98,98,97,96,95,95	;# 
      +       5F 5F              
   369  F001B0  5E 5D 5C 5C 5B 5A  	db	94,93,92,92,91,90,90,89	;# 
      +       5A 59              
   370  F001B8  58 58 57 57 56 55  	db	88,88,87,87,86,85,85,84	;# 
      +       55 54              
   371  F001C0  54 53 52 52 51 51  	db	84,83,82,82,81,81,80,80	;# 
      +       50 50              
   372  F001C8  4F 4F 4E 4D 4D 4C  	db	79,79,78,77,77,76,76,75	;# 
      +       4C 4B              
   373  F001D0  4B 4A 4A 49 49 48  	db	75,74,74,73,73,72,72,71	;# 
      +       48 47              
   374  F001D8  47 46 46 46 45 45  	db	71,70,70,70,69,69,68,68	;# 
      +       44 44              
   375  F001E0  43 43 42 42 41 41  	db	67,67,66,66,65,65,64,64	;# 
      +       40 40              
   376  F001E8  40 3F 3F 3E 3E 3D  	db	64,63,63,62,62,61,61,61	;# 
      +       3D 3D              
   377  F001F0  3C 3C 3B 3B 3A 3A  	db	60,60,59,59,58,58,57,57	;# 
      +       39 39              
   378  F001F8  39 38 38 37 37 36  	db	57,56,56,55,55,54,54,54	;# 
      +       36 36              
   379  F00200  35 35 34 34 34 33  	db	53,53,52,52,52,51,51,50	;# 
      +       33 32              
   380  F00208  32 31 31 31 30 30  	db	50,49,49,49,48,48,47,47	;# 
      +       2F 2F              
   381  F00210  2E 2E 2E 2D 2D 2C  	db	46,46,46,45,45,44,44,44	;# 
      +       2C 2C              
   382  F00218  2B 2B 2A 2A 29 29  	db	43,43,42,42,41,41,41,40	;# 
      +       29 28              
   383  F00220  28 27 27 26 26 25  	db	40,39,39,38,38,37,37,37	;# 
      +       25 25              
   384  F00228  24 24 23 23 22 22  	db	36,36,35,35,34,34,33,33	;# 
      +       21 21              
   385  F00230  20 20 1F 1F 1E 1E  	db	32,32,31,31,30,30,29,29	;# 
      +       1D 1D              
   386  F00238  1C 1C 1B 1B 1A 1A  	db	28,28,27,27,26,26,25,24	;# 
      +       19 18              
   387  F00240  18 17 17 16 16 15  	db	24,23,23,22,22,21,21,20	;# 
      +       15 14              
   388  F00248  13 13 12 11 11 10  	db	19,19,18,17,17,16,16,15	;# 
      +       10 0F              
   389  F00250  0E 0E 0D 0C 0B 0B  	db	14,14,13,12,11,11,10,9	;# 
      +       0A 09              
   390  F00258  08 07 06 06 05 04  	db	8,7,6,6,5,4,3,2	;# 
      +       03 02              
   391  F00260  01 00 00 00 00 00  	db	1,0,0,0,0,0,0,0	;# 
      +       00 00              
   392  F00268  00 28 63 63 00 03  	db	0,40,99,99,0,3,0,0	;# 
      +       00 00              
   393  F00270  01 55 3C 03 00 00  	db	1,85,60,3,0,0,0,0	;# 
      +       00 00              
   394  F00278  00 14 0F 00 05 00  	db	0,20,15,0,5,0,0,0	;# 
      +       00 00              
   395  F00280  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;# 
      +       00 00              
   396  F00288  28 28 27 26 26 25  	db	40,40,39,38,38,37,36,36	;# 
      +       24 24              
   397  F00290  23 22 22 21 21 20  	db	35,34,34,33,33,32,32,31	;# 
      +       20 1F              
   398  F00298  1F 1E 1E 1D 1D 1C  	db	31,30,30,29,29,28,28,27	;# 
      +       1C 1B              
   399  F002A0  1B 1A 1A 19 19 18  	db	27,26,26,25,25,24,24,23	;# 
      +       18 17              
   400  F002A8  17 16 16 16 15 15  	db	23,22,22,22,21,21,20,20	;# 
      +       14 14              
   401  F002B0  14 13 13 12 12 12  	db	20,19,19,18,18,18,17,17	;# 
      +       11 11              
   402  F002B8  11 10 10 0F 0F 0F  	db	17,16,16,15,15,15,14,14	;# 
      +       0E 0E              
   403  F002C0  0E 0D 0D 0D 0C 0C  	db	14,13,13,13,12,12,12,11	;# 
      +       0C 0B              
   404  F002C8  0B 0B 0A 0A 0A 09  	db	11,11,10,10,10,9,9,9	;# 
      +       09 09              
   405  F002D0  08 08 08 07 07 07  	db	8,8,8,7,7,7,6,6	;# 
      +       06 06              
   406  F002D8  06 05 05 05 04 04  	db	6,5,5,5,4,4,4,3	;# 
      +       04 03              
   407  F002E0  03 03 02 02 02 01  	db	3,3,2,2,2,1,1,1	;# 
      +       01 01              
   408  F002E8  01 00 00 00 FF FF  	db	1,0,0,0,-1,-1,-1,-2	;# 
      +       FF FE              
   409  F002F0  FE FE FE FD FD FD  	db	-2,-2,-2,-3,-3,-3,-4,-4	;# 
      +       FC FC              
   410  F002F8  FC FB FB FB FA FA  	db	-4,-5,-5,-5,-6,-6,-6,-7	;# 
      +       FA F9              
   411  F00300  F9 F9 F8 F8 F8 F7  	db	-7,-7,-8,-8,-8,-9,-9,-9	;# 
      +       F7 F7              
   412  F00308  F7 F6 F6 F6 F5 F5  	db	-9,-10,-10,-10,-11,-11,-11,-12	;# 
      +       F5 F4              
   413  F00310  F4 F3 F3 F3 F3 F2  	db	-12,-13,-13,-13,-13,-14,-14,-14	;# 
      +       F2 F2              
   414  F00318  F1 F1 F0 F0 F0 EF  	db	-15,-15,-16,-16,-16,-17,-17,-17	;# 
      +       EF EF              
   415  F00320  EE EE EE ED ED EC  	db	-18,-18,-18,-19,-19,-20,-20,-20	;# 
      +       EC EC              
   416  F00328  EB EB EA EA EA E9  	db	-21,-21,-22,-22,-22,-23,-23,-24	;# 
      +       E9 E8              
   417  F00330  E8 E7 E7 E7 E6 E6  	db	-24,-25,-25,-25,-26,-26,-27,-27	;# 
      +       E5 E5              
   418  F00338  E4 E4 E3 E3 E2 E2  	db	-28,-28,-29,-29,-30,-30,-31,-31	;# 
      +       E1 E1              
   419  F00340  E0 DF DF DE DD DD  	db	-32,-33,-33,-34,-35,-35,-36,-37	;# 
      +       DC DB              
   420  F00348  DB DA D9 D8 D8 D8  	db	-37,-38,-39,-40,-40,-40,-40,-40	;# 
      +       D8 D8              
   421  0000                     tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           tblptrl	equ	0xFF6
   424                           tablat	equ	0xFF5
   425                           prodh	equ	0xFF4
   426                           prodl	equ	0xFF3
   427                           intcon	equ	0xFF2
   428                           wreg	equ	0xFE8
   429                           indf1	equ	0xFE7
   430                           postinc1	equ	0xFE6
   431                           postdec1	equ	0xFE5
   432                           fsr1h	equ	0xFE2
   433                           fsr1l	equ	0xFE1
   434                           indf2	equ	0xFDF
   435                           postinc2	equ	0xFDE
   436                           postdec2	equ	0xFDD
   437                           fsr2h	equ	0xFDA
   438                           fsr2l	equ	0xFD9
   439                           status	equ	0xFD8
   440                           
   441                           	psect	smallconst
   442  001000                     __psmallconst:
   443                           	opt stack 0
   444  001000                     _Nastawa:
   445                           	opt stack 0
   446  001000  01                 	db	1
   447  001001  01                 	db	1
   448  001002  14                 	db	20
   449  001003  14                 	db	20
   450  001004  02                 	db	2
   451  001005  04                 	db	4
   452  001006  02                 	db	2
   453  001007  02                 	db	2
   454  001008  02                 	db	2
   455  001009  02                 	db	2
   456  00100A  04                 	db	4
   457  00100B  08                 	db	8
   458  00100C  02                 	db	2
   459  00100D  02                 	db	2
   460  00100E  02                 	db	2
   461  00100F  02                 	db	2
   462  001010  02                 	db	2
   463  001011  02                 	db	2
   464  001012  14                 	db	20
   465  001013  01                 	db	1
   466  001014  14                 	db	20
   467  001015  01                 	db	1
   468  001016  02                 	db	2
   469  001017  02                 	db	2
   470  001018  14                 	db	20
   471  001019  14                 	db	20
   472  00101A  14                 	db	20
   473  00101B  14                 	db	20
   474  00101C  05                 	db	5
   475  00101D  05                 	db	5
   476  00101E  05                 	db	5
   477  00101F  14                 	db	20
   478  001020  0A                 	db	10
   479  001021  0A                 	db	10
   480  001022  14                 	db	20
   481  001023  14                 	db	20
   482  001024  05                 	db	5
   483  001025  05                 	db	5
   484  001026  08                 	db	8
   485  001027  08                 	db	8
   486  001028  14                 	db	20
   487  001029  14                 	db	20
   488  00102A  02                 	db	2
   489  00102B  0A                 	db	10
   490  00102C  01                 	db	1
   491  00102D  01                 	db	1
   492  00102E  01                 	db	1
   493  00102F  01                 	db	1
   494  001030  00                 	db	0
   495  001031  00                 	db	0
   496  001032  00                 	db	0
   497  001033  00                 	db	0
   498  001034                     __end_of_Nastawa:
   499                           	opt stack 0
   500  001034                     _Znak:
   501                           	opt stack 0
   502  001034  50                 	db	80
   503  001035  F9                 	db	249
   504  001036  32                 	db	50
   505  001037  31                 	db	49
   506  001038  99                 	db	153
   507  001039  15                 	db	21
   508  00103A  14                 	db	20
   509  00103B  79                 	db	121
   510  00103C  10                 	db	16
   511  00103D  11                 	db	17
   512  00103E  18                 	db	24
   513  00103F  94                 	db	148
   514  001040  56                 	db	86
   515  001041  B0                 	db	176
   516  001042  16                 	db	22
   517  001043  1E                 	db	30
   518  001044                     __end_of_Znak:
   519                           	opt stack 0
   520  001044                     _Klj:
   521                           	opt stack 0
   522  001044  4C                 	db	low ((low _KL0)| (__smallconst& (0+-256)))
   523  001045  02                 	db	2
   524  001046  58                 	db	low ((low _KL1)| (__smallconst& (0+-256)))
   525  001047  02                 	db	2
   526  001048  64                 	db	low ((low _KL2)| (__smallconst& (0+-256)))
   527  001049  02                 	db	2
   528  00104A  70                 	db	low ((low _KL3)| (__smallconst& (0+-256)))
   529  00104B  02                 	db	2
   530  00104C                     __end_of_Klj:
   531                           	opt stack 0
   532  00104C                     _KL0:
   533                           	opt stack 0
   534  00104C  7C                 	db	low ((low _KL0_AP)| (__smallconst& (0+-256)))
   535  00104D  52                 	db	low ((low _KL0_WP)| (__smallconst& (0+-256)))
   536  00104E  80                 	db	low ((low _KL0_FP)| (__smallconst& (0+-256)))
   537  00104F  01F4               	dw	_KL0_FC& (0+65535)
   538  001051  84                 	db	low ((low _KL0_OUT)| (__smallconst& (0+-256)))
   539  001052                     __end_of_KL0:
   540                           	opt stack 0
   541  001052                     _KL0_WP:
   542                           	opt stack 0
   543  001052  00                 	db	0
   544  001053  00                 	db	0
   545  001054  08                 	db	8
   546  001055  00                 	db	0
   547  001056  00                 	db	0
   548  001057  08                 	db	8
   549  001058                     __end_of_KL0_WP:
   550                           	opt stack 0
   551  001058                     _KL1:
   552                           	opt stack 0
   553  001058  88                 	db	low ((low _KL1_AP)| (__smallconst& (0+-256)))
   554  001059  5E                 	db	low ((low _KL1_WP)| (__smallconst& (0+-256)))
   555  00105A  8C                 	db	low ((low _KL1_FP)| (__smallconst& (0+-256)))
   556  00105B  01F6               	dw	_KL1_FC& (0+65535)
   557  00105D  90                 	db	low ((low _KL1_OUT)| (__smallconst& (0+-256)))
   558  00105E                     __end_of_KL1:
   559                           	opt stack 0
   560  00105E                     _KL1_WP:
   561                           	opt stack 0
   562  00105E  00                 	db	0
   563  00105F  00                 	db	0
   564  001060  06                 	db	6
   565  001061  00                 	db	0
   566  001062  00                 	db	0
   567  001063  06                 	db	6
   568  001064                     __end_of_KL1_WP:
   569                           	opt stack 0
   570  001064                     _KL2:
   571                           	opt stack 0
   572  001064  94                 	db	low ((low _KL2_AP)| (__smallconst& (0+-256)))
   573  001065  6A                 	db	low ((low _KL2_WP)| (__smallconst& (0+-256)))
   574  001066  98                 	db	low ((low _KL2_FP)| (__smallconst& (0+-256)))
   575  001067  01F8               	dw	_KL2_FC& (0+65535)
   576  001069  9C                 	db	low ((low _KL2_OUT)| (__smallconst& (0+-256)))
   577  00106A                     __end_of_KL2:
   578                           	opt stack 0
   579  00106A                     _KL2_WP:
   580                           	opt stack 0
   581  00106A  00                 	db	0
   582  00106B  00                 	db	0
   583  00106C  06                 	db	6
   584  00106D  00                 	db	0
   585  00106E  00                 	db	0
   586  00106F  06                 	db	6
   587  001070                     __end_of_KL2_WP:
   588                           	opt stack 0
   589  001070                     _KL3:
   590                           	opt stack 0
   591  001070  A0                 	db	low ((low _KL3_AP)| (__smallconst& (0+-256)))
   592  001071  76                 	db	low ((low _KL3_WP)| (__smallconst& (0+-256)))
   593  001072  A4                 	db	low ((low _KL3_FP)| (__smallconst& (0+-256)))
   594  001073  01FA               	dw	_KL3_FC& (0+65535)
   595  001075  A8                 	db	low ((low _KL3_OUT)| (__smallconst& (0+-256)))
   596  001076                     __end_of_KL3:
   597                           	opt stack 0
   598  001076                     _KL3_WP:
   599                           	opt stack 0
   600  001076  00                 	db	0
   601  001077  00                 	db	0
   602  001078  1E                 	db	30
   603  001079  00                 	db	0
   604  00107A  00                 	db	0
   605  00107B  14                 	db	20
   606  00107C                     __end_of_KL3_WP:
   607                           	opt stack 0
   608  00107C                     _KL0_AP:
   609                           	opt stack 0
   610  00107C  02BB               	dw	_DWD& (0+65535)
   611  00107E  02BF               	dw	(_DWD+4)& (0+65535)
   612  001080                     __end_of_KL0_AP:
   613                           	opt stack 0
   614  001080                     _KL0_FP:
   615                           	opt stack 0
   616  001080  00                 	db	0
   617  001081  00                 	db	0
   618  001082  00                 	db	0
   619  001083  00                 	db	0
   620  001084                     __end_of_KL0_FP:
   621                           	opt stack 0
   622  001084                     _KL0_OUT:
   623                           	opt stack 0
   624  001084  024D               	dw	_PWD& (0+65535)
   625  001086  00                 	db	0
   626  001087  00                 	db	0
   627  001088                     __end_of_KL0_OUT:
   628                           	opt stack 0
   629  001088                     _KL1_AP:
   630                           	opt stack 0
   631  001088  02C3               	dw	(_DWD+8)& (0+65535)
   632  00108A  02C3               	dw	(_DWD+8)& (0+65535)
   633  00108C                     __end_of_KL1_AP:
   634                           	opt stack 0
   635  00108C                     _KL1_FP:
   636                           	opt stack 0
   637  00108C  00                 	db	0
   638  00108D  00                 	db	0
   639  00108E  00                 	db	0
   640  00108F  00                 	db	0
   641  001090                     __end_of_KL1_FP:
   642                           	opt stack 0
   643  001090                     _KL1_OUT:
   644                           	opt stack 0
   645  001090  0251               	dw	(_PWD+4)& (0+65535)
   646  001092  00                 	db	0
   647  001093  00                 	db	0
   648  001094                     __end_of_KL1_OUT:
   649                           	opt stack 0
   650  001094                     _KL2_AP:
   651                           	opt stack 0
   652  001094  02C7               	dw	(_DWD+12)& (0+65535)
   653  001096  02CB               	dw	(_DWD+16)& (0+65535)
   654  001098                     __end_of_KL2_AP:
   655                           	opt stack 0
   656  001098                     _KL2_FP:
   657                           	opt stack 0
   658  001098  00                 	db	0
   659  001099  00                 	db	0
   660  00109A  00                 	db	0
   661  00109B  00                 	db	0
   662  00109C                     __end_of_KL2_FP:
   663                           	opt stack 0
   664  00109C                     _KL2_OUT:
   665                           	opt stack 0
   666  00109C  0255               	dw	(_PWD+8)& (0+65535)
   667  00109E  04                 	db	4
   668  00109F  00                 	db	0
   669  0010A0                     __end_of_KL2_OUT:
   670                           	opt stack 0
   671  0010A0                     _KL3_AP:
   672                           	opt stack 0
   673  0010A0  02CF               	dw	(_DWD+20)& (0+65535)
   674  0010A2  02D3               	dw	(_DWD+24)& (0+65535)
   675  0010A4                     __end_of_KL3_AP:
   676                           	opt stack 0
   677  0010A4                     _KL3_FP:
   678                           	opt stack 0
   679  0010A4  00                 	db	0
   680  0010A5  00                 	db	0
   681  0010A6  00                 	db	0
   682  0010A7  00                 	db	0
   683  0010A8                     __end_of_KL3_FP:
   684                           	opt stack 0
   685  0010A8                     _KL3_OUT:
   686                           	opt stack 0
   687  0010A8  0259               	dw	(_PWD+12)& (0+65535)
   688  0010AA  00                 	db	0
   689  0010AB  00                 	db	0
   690  0010AC                     __end_of_KL3_OUT:
   691                           	opt stack 0
   692  0010AC  63BF               	dw	25535
   693  0010AE                     __end_of_RldT1:
   694                           	opt stack 0
   695  0000                     _ADRESH	set	4036
   696  0000                     _ANSEL	set	3966
   697  0000                     _ANSELH	set	3967
   698  0000                     _CCP1CON	set	4029
   699  0000                     _CCP2CON	set	4026
   700  0000                     _CCPR1H	set	4031
   701  0000                     _CCPR1L	set	4030
   702  0000                     _CCPR2H	set	4028
   703  0000                     _CCPR2L	set	4027
   704  0000                     _EEADR	set	4009
   705  0000                     _EEADRH	set	4010
   706  0000                     _EECON1bits	set	4006
   707  0000                     _EECON2	set	4007
   708  0000                     _EEDATA	set	4008
   709  0000                     _INTCONbits	set	4082
   710  0000                     _PORTA	set	3968
   711  0000                     _PORTAbits	set	3968
   712  0000                     _PORTB	set	3969
   713  0000                     _PORTBbits	set	3969
   714  0000                     _PORTC	set	3970
   715  0000                     _PORTCbits	set	3970
   716  0000                     _PORTD	set	3971
   717  0000                     _PORTDbits	set	3971
   718  0000                     _PORTE	set	3972
   719  0000                     _PORTEbits	set	3972
   720  0000                     _PR2	set	4043
   721  0000                     _RCREG	set	4014
   722  0000                     _SPBRG	set	4015
   723  0000                     _SSPADD	set	4040
   724  0000                     _SSPBUF	set	4041
   725  0000                     _T2CON	set	4042
   726  0000                     _TMR1H	set	4047
   727  0000                     _TMR1L	set	4046
   728  0000                     _TMR2	set	4044
   729  0000                     _TRISA	set	3986
   730  0000                     _TRISB	set	3987
   731  0000                     _TRISC	set	3988
   732  0000                     _TRISD	set	3989
   733  0000                     _TRISE	set	3990
   734  0000                     _TXREG	set	4013
   735  0000                     _ACQT0	set	32259
   736  0000                     _ACQT1	set	32260
   737  0000                     _ACQT2	set	32261
   738  0000                     _ADCS0	set	32256
   739  0000                     _ADCS1	set	32257
   740  0000                     _ADCS2	set	32258
   741  0000                     _ADDEN	set	32091
   742  0000                     _ADFM	set	32263
   743  0000                     _ADIE	set	31982
   744  0000                     _ADON	set	32272
   745  0000                     _BOR	set	32384
   746  0000                     _BRGH	set	32098
   747  0000                     _CHS0	set	32274
   748  0000                     _CHS1	set	32275
   749  0000                     _CHS2	set	32276
   750  0000                     _CHS3	set	32277
   751  0000                     _CKE	set	32318
   752  0000                     _CKP	set	32308
   753  0000                     _CREN	set	32092
   754  0000                     _CSRC	set	32103
   755  0000                     _DA	set	32317
   756  0000                     _DC1B0	set	32236
   757  0000                     _DC1B1	set	32237
   758  0000                     _DC2B0	set	32212
   759  0000                     _DC2B1	set	32213
   760  0000                     _GIEH	set	32663
   761  0000                     _GIEL	set	32662
   762  0000                     _GODONE	set	32273
   763  0000                     _IPEN	set	32391
   764  0000                     _IRCF0	set	32412
   765  0000                     _IRCF1	set	32413
   766  0000                     _IRCF2	set	32414
   767  0000                     _PLLEN	set	31966
   768  0000                     _POR	set	32385
   769  0000                     _RCIE	set	31981
   770  0000                     _RCIF	set	31989
   771  0000                     _RCIP	set	31997
   772  0000                     _RW	set	32314
   773  0000                     _RX9	set	32094
   774  0000                     _RX9D	set	32088
   775  0000                     _SCS0	set	32408
   776  0000                     _SCS1	set	32409
   777  0000                     _SMP	set	32319
   778  0000                     _SPEN	set	32095
   779  0000                     _SSPEN	set	32309
   780  0000                     _SSPIE	set	31979
   781  0000                     _SSPIF	set	31987
   782  0000                     _SSPIP	set	31995
   783  0000                     _SSPM0	set	32304
   784  0000                     _SSPM1	set	32305
   785  0000                     _SSPM2	set	32306
   786  0000                     _SSPM3	set	32307
   787  0000                     _SSPOV	set	32310
   788  0000                     _SYNC	set	32100
   789  0000                     _T1CKPS0	set	32364
   790  0000                     _T1CKPS1	set	32365
   791  0000                     _T1RD16	set	32367
   792  0000                     _TMR0IE	set	32661
   793  0000                     _TMR0IF	set	32658
   794  0000                     _TMR1CS	set	32361
   795  0000                     _TMR1IE	set	31976
   796  0000                     _TMR1IF	set	31984
   797  0000                     _TMR1IP	set	31992
   798  0000                     _TMR1ON	set	32360
   799  0000                     _TMR2IE	set	31977
   800  0000                     _TMR2IF	set	31985
   801  0000                     _TMR2ON	set	32338
   802  0000                     _TRISC3	set	31907
   803  0000                     _TRISC4	set	31908
   804  0000                     _TX9	set	32102
   805  0000                     _TX9D	set	32096
   806  0000                     _TXEN	set	32101
   807  0000                     _TXIE	set	31980
   808  0000                     _TXIF	set	31988
   809  0000                     _TXIP	set	31996
   810  0000                     _VCFG0	set	32268
   811  0000                     _VCFG1	set	32269
   812  0000                     _WCOL	set	32311
   813                           
   814                           ; #config settings
   815  0010AE  00                 	db	0	; dummy byte at the end
   816  0000                     tblptru	equ	0xFF8
   817                           tblptrh	equ	0xFF7
   818                           tblptrl	equ	0xFF6
   819                           tablat	equ	0xFF5
   820                           prodh	equ	0xFF4
   821                           prodl	equ	0xFF3
   822                           intcon	equ	0xFF2
   823                           wreg	equ	0xFE8
   824                           indf1	equ	0xFE7
   825                           postinc1	equ	0xFE6
   826                           postdec1	equ	0xFE5
   827                           fsr1h	equ	0xFE2
   828                           fsr1l	equ	0xFE1
   829                           indf2	equ	0xFDF
   830                           postinc2	equ	0xFDE
   831                           postdec2	equ	0xFDD
   832                           fsr2h	equ	0xFDA
   833                           fsr2l	equ	0xFD9
   834                           status	equ	0xFD8
   835                           
   836                           	psect	cinit
   837  00A490                     __pcinit:
   838                           	opt stack 0
   839  00A490                     start_initialization:
   840                           	opt stack 0
   841  00A490                     __initialization:
   842                           	opt stack 0
   843                           
   844                           ; Clear objects allocated to BANK3 (70 bytes)
   845  00A490  EE03  F000         	lfsr	0,__pbssBANK3
   846  00A494  0E46               	movlw	70
   847  00A496                     clear_0:
   848  00A496  6AEE               	clrf	postinc0,c
   849  00A498  06E8               	decf	wreg,f,c
   850  00A49A  E1FD               	bnz	clear_0
   851                           
   852                           ; Clear objects allocated to BANK2 (240 bytes)
   853  00A49C  EE02  F000         	lfsr	0,__pbssBANK2
   854  00A4A0  0EF0               	movlw	240
   855  00A4A2                     clear_1:
   856  00A4A2  6AEE               	clrf	postinc0,c
   857  00A4A4  06E8               	decf	wreg,f,c
   858  00A4A6  E1FD               	bnz	clear_1
   859                           
   860                           ; Clear objects allocated to BANK1 (253 bytes)
   861  00A4A8  EE01  F000         	lfsr	0,__pbssBANK1
   862  00A4AC  0EFD               	movlw	253
   863  00A4AE                     clear_2:
   864  00A4AE  6AEE               	clrf	postinc0,c
   865  00A4B0  06E8               	decf	wreg,f,c
   866  00A4B2  E1FD               	bnz	clear_2
   867                           
   868                           ; Clear objects allocated to BANK0 (147 bytes)
   869  00A4B4  EE00  F060         	lfsr	0,__pbssBANK0
   870  00A4B8  0E93               	movlw	147
   871  00A4BA                     clear_3:
   872  00A4BA  6AEE               	clrf	postinc0,c
   873  00A4BC  06E8               	decf	wreg,f,c
   874  00A4BE  E1FD               	bnz	clear_3
   875                           
   876                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   877  00A4C0  6A42               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   878                           
   879                           ; Clear objects allocated to COMRAM (27 bytes)
   880  00A4C2  EE00  F027         	lfsr	0,__pbssCOMRAM
   881  00A4C6  0E1B               	movlw	27
   882  00A4C8                     clear_4:
   883  00A4C8  6AEE               	clrf	postinc0,c
   884  00A4CA  06E8               	decf	wreg,f,c
   885  00A4CC  E1FD               	bnz	clear_4
   886  00A4CE                     end_of_initialization:
   887                           	opt stack 0
   888  00A4CE                     __end_of__initialization:
   889                           	opt stack 0
   890  00A4CE  0100               	movlb	0
   891  00A4D0  EF44  F024         	goto	_main	;jump to C main() function
   892                           tblptru	equ	0xFF8
   893                           tblptrh	equ	0xFF7
   894                           tblptrl	equ	0xFF6
   895                           tablat	equ	0xFF5
   896                           prodh	equ	0xFF4
   897                           prodl	equ	0xFF3
   898                           intcon	equ	0xFF2
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           indf1	equ	0xFE7
   902                           postinc1	equ	0xFE6
   903                           postdec1	equ	0xFE5
   904                           fsr1h	equ	0xFE2
   905                           fsr1l	equ	0xFE1
   906                           indf2	equ	0xFDF
   907                           postinc2	equ	0xFDE
   908                           postdec2	equ	0xFDD
   909                           fsr2h	equ	0xFDA
   910                           fsr2l	equ	0xFD9
   911                           status	equ	0xFD8
   912                           
   913                           	psect	bitbssCOMRAM
   914  000210                     __pbitbssCOMRAM:
   915                           	opt stack 0
   916  000210                     IntPWM@btOsc:
   917                           	opt stack 0
   918  000210                     	ds	1
   919  000211                     ReadDataXONLID@dtmo:
   920                           	opt stack 0
   921  000211                     	ds	1
   922  000212                     _mux:
   923                           	opt stack 0
   924  000212                     	ds	1
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           prodh	equ	0xFF4
   930                           prodl	equ	0xFF3
   931                           intcon	equ	0xFF2
   932                           postinc0	equ	0xFEE
   933                           wreg	equ	0xFE8
   934                           indf1	equ	0xFE7
   935                           postinc1	equ	0xFE6
   936                           postdec1	equ	0xFE5
   937                           fsr1h	equ	0xFE2
   938                           fsr1l	equ	0xFE1
   939                           indf2	equ	0xFDF
   940                           postinc2	equ	0xFDE
   941                           postdec2	equ	0xFDD
   942                           fsr2h	equ	0xFDA
   943                           fsr2l	equ	0xFD9
   944                           status	equ	0xFD8
   945                           
   946                           	psect	bssCOMRAM
   947  000027                     __pbssCOMRAM:
   948                           	opt stack 0
   949  000027                     _rgl:
   950                           	opt stack 0
   951  000027                     	ds	10
   952  000031                     _DtCS:
   953                           	opt stack 0
   954  000031                     	ds	4
   955  000035                     _CommRT:
   956                           	opt stack 0
   957  000035                     	ds	3
   958  000038                     _PMP:
   959                           	opt stack 0
   960  000038                     	ds	3
   961  00003B                     ModPruCW@s:
   962                           	opt stack 0
   963  00003B                     	ds	1
   964  00003C                     PomiarCS@pcs:
   965                           	opt stack 0
   966  00003C                     	ds	1
   967  00003D                     ReadDataXONLID@pp:
   968                           	opt stack 0
   969  00003D                     	ds	1
   970  00003E                     _RSerial:
   971                           	opt stack 0
   972  00003E                     	ds	1
   973  00003F                     _tmr:
   974                           	opt stack 0
   975  00003F                     	ds	1
   976  000040                     _wsdid:
   977                           	opt stack 0
   978  000040                     	ds	1
   979  000041                     _zmn:
   980                           	opt stack 0
   981  000041                     	ds	1
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           prodh	equ	0xFF4
   987                           prodl	equ	0xFF3
   988                           intcon	equ	0xFF2
   989                           postinc0	equ	0xFEE
   990                           wreg	equ	0xFE8
   991                           indf1	equ	0xFE7
   992                           postinc1	equ	0xFE6
   993                           postdec1	equ	0xFE5
   994                           fsr1h	equ	0xFE2
   995                           fsr1l	equ	0xFE1
   996                           indf2	equ	0xFDF
   997                           postinc2	equ	0xFDE
   998                           postdec2	equ	0xFDD
   999                           fsr2h	equ	0xFDA
  1000                           fsr2l	equ	0xFD9
  1001                           status	equ	0xFD8
  1002                           
  1003                           	psect	bssBANK0
  1004  000060                     __pbssBANK0:
  1005                           	opt stack 0
  1006  000060                     _M:
  1007                           	opt stack 0
  1008  000060                     	ds	51
  1009  000093                     _PWM:
  1010                           	opt stack 0
  1011  000093                     	ds	34
  1012  0000B5                     _SPort:
  1013                           	opt stack 0
  1014  0000B5                     	ds	26
  1015  0000CF                     _DtCW:
  1016                           	opt stack 0
  1017  0000CF                     	ds	15
  1018  0000DE                     FltParMod@fco:
  1019                           	opt stack 0
  1020  0000DE                     	ds	1
  1021  0000DF                     FltParMod@fcw:
  1022                           	opt stack 0
  1023  0000DF                     	ds	1
  1024  0000E0                     PomiarPCO@pnst:
  1025                           	opt stack 0
  1026  0000E0                     	ds	1
  1027  0000E1                     PomiarPCW@pnst:
  1028                           	opt stack 0
  1029  0000E1                     	ds	1
  1030  0000E2                     PredkoscZmianCW@indff:
  1031                           	opt stack 0
  1032  0000E2                     	ds	1
  1033  0000E3                     _pwm_kwr:
  1034                           	opt stack 0
  1035  0000E3                     	ds	1
  1036  0000E4                     _DtCO:
  1037                           	opt stack 0
  1038  0000E4                     	ds	15
  1039                           tblptru	equ	0xFF8
  1040                           tblptrh	equ	0xFF7
  1041                           tblptrl	equ	0xFF6
  1042                           tablat	equ	0xFF5
  1043                           prodh	equ	0xFF4
  1044                           prodl	equ	0xFF3
  1045                           intcon	equ	0xFF2
  1046                           postinc0	equ	0xFEE
  1047                           wreg	equ	0xFE8
  1048                           indf1	equ	0xFE7
  1049                           postinc1	equ	0xFE6
  1050                           postdec1	equ	0xFE5
  1051                           fsr1h	equ	0xFE2
  1052                           fsr1l	equ	0xFE1
  1053                           indf2	equ	0xFDF
  1054                           postinc2	equ	0xFDE
  1055                           postdec2	equ	0xFDD
  1056                           fsr2h	equ	0xFDA
  1057                           fsr2l	equ	0xFD9
  1058                           status	equ	0xFD8
  1059                           
  1060                           	psect	bssBANK1
  1061  000100                     __pbssBANK1:
  1062                           	opt stack 0
  1063  000100                     _Sk:
  1064                           	opt stack 0
  1065  000100                     	ds	32
  1066  000120                     _dSk:
  1067                           	opt stack 0
  1068  000120                     	ds	22
  1069  000136                     _DtIN:
  1070                           	opt stack 0
  1071  000136                     	ds	20
  1072  00014A                     _DtKNF:
  1073                           	opt stack 0
  1074  00014A                     	ds	18
  1075  00015C                     _Mn:
  1076                           	opt stack 0
  1077  00015C                     	ds	14
  1078  00016A                     _KTim:
  1079                           	opt stack 0
  1080  00016A                     	ds	12
  1081  000176                     _Gd:
  1082                           	opt stack 0
  1083  000176                     	ds	6
  1084  00017C                     _UADt:
  1085                           	opt stack 0
  1086  00017C                     	ds	5
  1087  000181                     _DtZW:
  1088                           	opt stack 0
  1089  000181                     	ds	4
  1090  000185                     _KInd:
  1091                           	opt stack 0
  1092  000185                     	ds	4
  1093  000189                     _WswData:
  1094                           	opt stack 0
  1095  000189                     	ds	4
  1096  00018D                     _LedData:
  1097                           	opt stack 0
  1098  00018D                     	ds	3
  1099  000190                     _PmrtimFlt3:
  1100                           	opt stack 0
  1101  000190                     	ds	2
  1102  000192                     _wbty:
  1103                           	opt stack 0
  1104  000192                     	ds	2
  1105  000194                     FltParMod@indtm:
  1106                           	opt stack 0
  1107  000194                     	ds	1
  1108  000195                     ModPruCO@l:
  1109                           	opt stack 0
  1110  000195                     	ds	1
  1111  000196                     ModPruCW2@l:
  1112                           	opt stack 0
  1113  000196                     	ds	1
  1114  000197                     ModPruCW2@m:
  1115                           	opt stack 0
  1116  000197                     	ds	1
  1117  000198                     ModPruCW2@o:
  1118                           	opt stack 0
  1119  000198                     	ds	1
  1120  000199                     ModPruCW2@p:
  1121                           	opt stack 0
  1122  000199                     	ds	1
  1123  00019A                     ModPruCW2@q:
  1124                           	opt stack 0
  1125  00019A                     	ds	1
  1126  00019B                     ModPruCW2@r:
  1127                           	opt stack 0
  1128  00019B                     	ds	1
  1129  00019C                     ModPruCW2@s:
  1130                           	opt stack 0
  1131  00019C                     	ds	1
  1132  00019D                     ModPruCW4@l:
  1133                           	opt stack 0
  1134  00019D                     	ds	1
  1135  00019E                     ModPruCW4@m:
  1136                           	opt stack 0
  1137  00019E                     	ds	1
  1138  00019F                     ModPruCW4@o:
  1139                           	opt stack 0
  1140  00019F                     	ds	1
  1141  0001A0                     ModPruCW4@p:
  1142                           	opt stack 0
  1143  0001A0                     	ds	1
  1144  0001A1                     ModPruCW4@q:
  1145                           	opt stack 0
  1146  0001A1                     	ds	1
  1147  0001A2                     ModPruCW4@s:
  1148                           	opt stack 0
  1149  0001A2                     	ds	1
  1150  0001A3                     ModPruCW@l:
  1151                           	opt stack 0
  1152  0001A3                     	ds	1
  1153  0001A4                     ModPruCW@m:
  1154                           	opt stack 0
  1155  0001A4                     	ds	1
  1156  0001A5                     ModPruCW@o:
  1157                           	opt stack 0
  1158  0001A5                     	ds	1
  1159  0001A6                     ModPruCW@p:
  1160                           	opt stack 0
  1161  0001A6                     	ds	1
  1162  0001A7                     ModPruCW@q:
  1163                           	opt stack 0
  1164  0001A7                     	ds	1
  1165  0001A8                     ModPrzCW4@trb:
  1166                           	opt stack 0
  1167  0001A8                     	ds	1
  1168  0001A9                     ModZgCW2@pop:
  1169                           	opt stack 0
  1170  0001A9                     	ds	1
  1171  0001AA                     ModZgCW4@pop:
  1172                           	opt stack 0
  1173  0001AA                     	ds	1
  1174  0001AB                     NastawaCOCW@obg_co:
  1175                           	opt stack 0
  1176  0001AB                     	ds	1
  1177  0001AC                     NastawaCOCW@obg_cw:
  1178                           	opt stack 0
  1179  0001AC                     	ds	1
  1180  0001AD                     NastawaCOCW@pcw:
  1181                           	opt stack 0
  1182  0001AD                     	ds	1
  1183  0001AE                     NastawaCOCW@zmn2:
  1184                           	opt stack 0
  1185  0001AE                     	ds	1
  1186  0001AF                     PomiarPFN@pnst:
  1187                           	opt stack 0
  1188  0001AF                     	ds	1
  1189  0001B0                     PredkoscZmianCW@ffcw:
  1190                           	opt stack 0
  1191  0001B0                     	ds	1
  1192  0001B1                     ReadDataXONLID@es2:
  1193                           	opt stack 0
  1194  0001B1                     	ds	1
  1195  0001B2                     ReadDataXONLID@iu:
  1196                           	opt stack 0
  1197  0001B2                     	ds	1
  1198  0001B3                     ReadDataXONLID@ktu:
  1199                           	opt stack 0
  1200  0001B3                     	ds	1
  1201  0001B4                     ReadParam@pnst:
  1202                           	opt stack 0
  1203  0001B4                     	ds	1
  1204  0001B5                     StabPort@tim:
  1205                           	opt stack 0
  1206  0001B5                     	ds	1
  1207  0001B6                     _PmrtimFlt1:
  1208                           	opt stack 0
  1209  0001B6                     	ds	1
  1210  0001B7                     _PmrtimFlt2:
  1211                           	opt stack 0
  1212  0001B7                     	ds	1
  1213  0001B8                     _pwm_center:
  1214                           	opt stack 0
  1215  0001B8                     	ds	1
  1216  0001B9                     _tmr2:
  1217                           	opt stack 0
  1218  0001B9                     	ds	1
  1219  0001BA                     _PFN:
  1220                           	opt stack 0
  1221  0001BA                     	ds	35
  1222  0001DD                     _DtI2C:
  1223                           	opt stack 0
  1224  0001DD                     	ds	23
  1225  0001F4                     _KL0_FC:
  1226                           	opt stack 0
  1227  0001F4                     	ds	2
  1228  0001F6                     _KL1_FC:
  1229                           	opt stack 0
  1230  0001F6                     	ds	2
  1231  0001F8                     _KL2_FC:
  1232                           	opt stack 0
  1233  0001F8                     	ds	2
  1234  0001FA                     _KL3_FC:
  1235                           	opt stack 0
  1236  0001FA                     	ds	2
  1237  0001FC                     _zps:
  1238                           	opt stack 0
  1239  0001FC                     	ds	1
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           prodh	equ	0xFF4
  1245                           prodl	equ	0xFF3
  1246                           intcon	equ	0xFF2
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           indf1	equ	0xFE7
  1250                           postinc1	equ	0xFE6
  1251                           postdec1	equ	0xFE5
  1252                           fsr1h	equ	0xFE2
  1253                           fsr1l	equ	0xFE1
  1254                           indf2	equ	0xFDF
  1255                           postinc2	equ	0xFDE
  1256                           postdec2	equ	0xFDD
  1257                           fsr2h	equ	0xFDA
  1258                           fsr2l	equ	0xFD9
  1259                           status	equ	0xFD8
  1260                           
  1261                           	psect	bssBANK2
  1262  000200                     __pbssBANK2:
  1263                           	opt stack 0
  1264  000200                     _RSDT1:
  1265                           	opt stack 0
  1266  000200                     	ds	65
  1267  000241                     _wff:
  1268                           	opt stack 0
  1269  000241                     	ds	12
  1270  00024D                     _PWD:
  1271                           	opt stack 0
  1272  00024D                     	ds	40
  1273  000275                     _ky:
  1274                           	opt stack 0
  1275  000275                     	ds	35
  1276  000298                     _xxky:
  1277                           	opt stack 0
  1278  000298                     	ds	35
  1279  0002BB                     _DWD:
  1280                           	opt stack 0
  1281  0002BB                     	ds	28
  1282  0002D7                     _BufI2C:
  1283                           	opt stack 0
  1284  0002D7                     	ds	25
  1285                           tblptru	equ	0xFF8
  1286                           tblptrh	equ	0xFF7
  1287                           tblptrl	equ	0xFF6
  1288                           tablat	equ	0xFF5
  1289                           prodh	equ	0xFF4
  1290                           prodl	equ	0xFF3
  1291                           intcon	equ	0xFF2
  1292                           postinc0	equ	0xFEE
  1293                           wreg	equ	0xFE8
  1294                           indf1	equ	0xFE7
  1295                           postinc1	equ	0xFE6
  1296                           postdec1	equ	0xFE5
  1297                           fsr1h	equ	0xFE2
  1298                           fsr1l	equ	0xFE1
  1299                           indf2	equ	0xFDF
  1300                           postinc2	equ	0xFDE
  1301                           postdec2	equ	0xFDD
  1302                           fsr2h	equ	0xFDA
  1303                           fsr2l	equ	0xFD9
  1304                           status	equ	0xFD8
  1305                           
  1306                           	psect	bssBANK3
  1307  000300                     __pbssBANK3:
  1308                           	opt stack 0
  1309  000300                     _bufRUART:
  1310                           	opt stack 0
  1311  000300                     	ds	35
  1312  000323                     _bufTUART:
  1313                           	opt stack 0
  1314  000323                     	ds	35
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           intcon	equ	0xFF2
  1322                           postinc0	equ	0xFEE
  1323                           wreg	equ	0xFE8
  1324                           indf1	equ	0xFE7
  1325                           postinc1	equ	0xFE6
  1326                           postdec1	equ	0xFE5
  1327                           fsr1h	equ	0xFE2
  1328                           fsr1l	equ	0xFE1
  1329                           indf2	equ	0xFDF
  1330                           postinc2	equ	0xFDE
  1331                           postdec2	equ	0xFDD
  1332                           fsr2h	equ	0xFDA
  1333                           fsr2l	equ	0xFD9
  1334                           status	equ	0xFD8
  1335                           
  1336                           	psect	cstackBANK3
  1337  000346                     __pcstackBANK3:
  1338                           	opt stack 0
  1339  000346                     ?_ReadParam:
  1340                           	opt stack 0
  1341  000346                     ??_ModPmp2:
  1342  000346                     ReadParam@param:
  1343                           	opt stack 0
  1344                           
  1345                           ; 2 bytes @ 0x0
  1346  000346                     	ds	2
  1347  000348                     ReadParam@zmiana:
  1348                           	opt stack 0
  1349                           
  1350                           ; 1 bytes @ 0x2
  1351  000348                     	ds	1
  1352  000349                     ReadParam@zapis:
  1353                           	opt stack 0
  1354                           
  1355                           ; 2 bytes @ 0x3
  1356  000349                     	ds	2
  1357  00034B                     ModPmp2@p:
  1358                           	opt stack 0
  1359  00034B                     ReadParam@min:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0x5
  1363  00034B                     	ds	1
  1364  00034C                     ModPmp2@tim:
  1365                           	opt stack 0
  1366                           
  1367                           ; 1 bytes @ 0x6
  1368  00034C                     	ds	1
  1369  00034D                     ModPmp2@pdw:
  1370                           	opt stack 0
  1371  00034D                     ReadParam@max:
  1372                           	opt stack 0
  1373                           
  1374                           ; 2 bytes @ 0x7
  1375  00034D                     	ds	1
  1376  00034E                     ModPmp2@pup:
  1377                           	opt stack 0
  1378                           
  1379                           ; 1 bytes @ 0x8
  1380  00034E                     	ds	1
  1381  00034F                     ModPmp2@ppwm:
  1382                           	opt stack 0
  1383  00034F                     ReadParam@rckl:
  1384                           	opt stack 0
  1385                           
  1386                           ; 1 bytes @ 0x9
  1387  00034F                     	ds	1
  1388  000350                     ReadParam@fst:
  1389                           	opt stack 0
  1390                           
  1391                           ; 1 bytes @ 0xA
  1392  000350                     	ds	1
  1393  000351                     _ReadParam$5559:
  1394                           	opt stack 0
  1395                           
  1396                           ; 2 bytes @ 0xB
  1397  000351                     	ds	2
  1398  000353                     ReadParam@stp:
  1399                           	opt stack 0
  1400                           
  1401                           ; 1 bytes @ 0xD
  1402  000353                     	ds	1
  1403  000354                     ReadParam@ovi:
  1404                           	opt stack 0
  1405                           
  1406                           ; 1 bytes @ 0xE
  1407  000354                     	ds	1
  1408  000355                     ReadParam@ovd:
  1409                           	opt stack 0
  1410                           
  1411                           ; 1 bytes @ 0xF
  1412  000355                     	ds	1
  1413  000356                     _main$2062:
  1414                           	opt stack 0
  1415                           
  1416                           ; 1 bytes @ 0x10
  1417  000356                     	ds	1
  1418  000357                     _main$2063:
  1419                           	opt stack 0
  1420                           
  1421                           ; 1 bytes @ 0x11
  1422  000357                     	ds	1
  1423                           tblptru	equ	0xFF8
  1424                           tblptrh	equ	0xFF7
  1425                           tblptrl	equ	0xFF6
  1426                           tablat	equ	0xFF5
  1427                           prodh	equ	0xFF4
  1428                           prodl	equ	0xFF3
  1429                           intcon	equ	0xFF2
  1430                           postinc0	equ	0xFEE
  1431                           wreg	equ	0xFE8
  1432                           indf1	equ	0xFE7
  1433                           postinc1	equ	0xFE6
  1434                           postdec1	equ	0xFE5
  1435                           fsr1h	equ	0xFE2
  1436                           fsr1l	equ	0xFE1
  1437                           indf2	equ	0xFDF
  1438                           postinc2	equ	0xFDE
  1439                           postdec2	equ	0xFDD
  1440                           fsr2h	equ	0xFDA
  1441                           fsr2l	equ	0xFD9
  1442                           status	equ	0xFD8
  1443                           
  1444                           	psect	cstackBANK2
  1445  0002F0                     __pcstackBANK2:
  1446                           	opt stack 0
  1447  0002F0                     ?_ReadDataXONLID:
  1448                           	opt stack 0
  1449  0002F0                     GetPGD_PCO@p:
  1450                           	opt stack 0
  1451  0002F0                     ModZgCO@p:
  1452                           	opt stack 0
  1453  0002F0                     FirstPCW@tmp:
  1454                           	opt stack 0
  1455  0002F0                     ModZgCW@p:
  1456                           	opt stack 0
  1457  0002F0                     ModPrzCW@maxmod:
  1458                           	opt stack 0
  1459  0002F0                     ModZgCW4@p:
  1460                           	opt stack 0
  1461  0002F0                     ModZgCW2@p:
  1462                           	opt stack 0
  1463  0002F0                     RetHI@k:
  1464                           	opt stack 0
  1465  0002F0                     RetLO@k:
  1466                           	opt stack 0
  1467  0002F0                     ReadDataXONLID@ky:
  1468                           	opt stack 0
  1469                           
  1470                           ; 2 bytes @ 0x0
  1471  0002F0                     	ds	1
  1472  0002F1                     FirstPCW@p:
  1473                           	opt stack 0
  1474  0002F1                     RetHI@pco:
  1475                           	opt stack 0
  1476  0002F1                     RetLO@pco:
  1477                           	opt stack 0
  1478  0002F1                     ModPrzCW@r:
  1479                           	opt stack 0
  1480  0002F1                     GetPGD_PCO@m:
  1481                           	opt stack 0
  1482  0002F1                     ModZgCO@m:
  1483                           	opt stack 0
  1484  0002F1                     ModZgCW@m:
  1485                           	opt stack 0
  1486  0002F1                     ModZgCW4@m:
  1487                           	opt stack 0
  1488  0002F1                     ModZgCW2@m:
  1489                           	opt stack 0
  1490                           
  1491                           ; 4 bytes @ 0x1
  1492  0002F1                     	ds	1
  1493  0002F2                     FirstPCW@p2:
  1494                           	opt stack 0
  1495  0002F2                     RetHI@w:
  1496                           	opt stack 0
  1497  0002F2                     RetLO@w:
  1498                           	opt stack 0
  1499  0002F2                     ReadDataXONLID@dt:
  1500                           	opt stack 0
  1501                           
  1502                           ; 2 bytes @ 0x2
  1503  0002F2                     	ds	1
  1504  0002F3                     FirstPCW@maxmod:
  1505                           	opt stack 0
  1506  0002F3                     ModPrzCW@p:
  1507                           	opt stack 0
  1508  0002F3                     RetHI@emax:
  1509                           	opt stack 0
  1510  0002F3                     RetLO@ehi:
  1511                           	opt stack 0
  1512                           
  1513                           ; 1 bytes @ 0x3
  1514  0002F3                     	ds	1
  1515  0002F4                     RetDelta4@pco:
  1516                           	opt stack 0
  1517  0002F4                     ReadDataXONLID@ovf:
  1518                           	opt stack 0
  1519  0002F4                     FirstPCW@m:
  1520                           	opt stack 0
  1521                           
  1522                           ; 4 bytes @ 0x4
  1523  0002F4                     	ds	1
  1524  0002F5                     RetDelta4@d:
  1525                           	opt stack 0
  1526                           
  1527                           ; 1 bytes @ 0x5
  1528  0002F5                     	ds	1
  1529  0002F6                     RetKrkDelta@pco:
  1530                           	opt stack 0
  1531  0002F6                     ReadDataXONLID@tid:
  1532                           	opt stack 0
  1533                           
  1534                           ; 1 bytes @ 0x6
  1535  0002F6                     	ds	1
  1536  0002F7                     RetKrkDelta@min:
  1537                           	opt stack 0
  1538  0002F7                     ReadDataXONLID@min:
  1539                           	opt stack 0
  1540                           
  1541                           ; 2 bytes @ 0x7
  1542  0002F7                     	ds	1
  1543  0002F8                     RetKrkDelta@max:
  1544                           	opt stack 0
  1545                           
  1546                           ; 1 bytes @ 0x8
  1547  0002F8                     	ds	1
  1548  0002F9                     RetKrkDelta@d:
  1549                           	opt stack 0
  1550  0002F9                     ReadDataXONLID@max:
  1551                           	opt stack 0
  1552                           
  1553                           ; 2 bytes @ 0x9
  1554  0002F9                     	ds	1
  1555  0002FA                     RetKrkDelta@i:
  1556                           	opt stack 0
  1557                           
  1558                           ; 1 bytes @ 0xA
  1559  0002FA                     	ds	1
  1560  0002FB                     RetDelta@pco:
  1561                           	opt stack 0
  1562  0002FB                     ReadDataXONLID@step:
  1563                           	opt stack 0
  1564                           
  1565                           ; 1 bytes @ 0xB
  1566  0002FB                     	ds	1
  1567  0002FC                     RetDelta@k:
  1568                           	opt stack 0
  1569  0002FC                     ReadDataXONLID@step2:
  1570                           	opt stack 0
  1571                           
  1572                           ; 1 bytes @ 0xC
  1573  0002FC                     	ds	1
  1574  0002FD                     ??_RglPmp2:
  1575  0002FD                     ReadDataXONLID@fst:
  1576                           	opt stack 0
  1577                           
  1578                           ; 1 bytes @ 0xD
  1579  0002FD                     	ds	1
  1580  0002FE                     ??_main:
  1581                           
  1582                           ; 0 bytes @ 0xE
  1583  0002FE                     	ds	1
  1584                           tblptru	equ	0xFF8
  1585                           tblptrh	equ	0xFF7
  1586                           tblptrl	equ	0xFF6
  1587                           tablat	equ	0xFF5
  1588                           prodh	equ	0xFF4
  1589                           prodl	equ	0xFF3
  1590                           intcon	equ	0xFF2
  1591                           postinc0	equ	0xFEE
  1592                           wreg	equ	0xFE8
  1593                           indf1	equ	0xFE7
  1594                           postinc1	equ	0xFE6
  1595                           postdec1	equ	0xFE5
  1596                           fsr1h	equ	0xFE2
  1597                           fsr1l	equ	0xFE1
  1598                           indf2	equ	0xFDF
  1599                           postinc2	equ	0xFDE
  1600                           postdec2	equ	0xFDD
  1601                           fsr2h	equ	0xFDA
  1602                           fsr2l	equ	0xFD9
  1603                           status	equ	0xFD8
  1604                           
  1605                           	psect	cstackBANK1
  1606  0001FD                     __pcstackBANK1:
  1607                           	opt stack 0
  1608  0001FD                     ??_Moduluj:
  1609  0001FD                     ?_RetDelta4:
  1610                           	opt stack 0
  1611  0001FD                     _DecWSW$2086:
  1612                           	opt stack 0
  1613  0001FD                     RetDelta4@eco:
  1614                           	opt stack 0
  1615                           
  1616                           ; 1 bytes @ 0x0
  1617  0001FD                     	ds	1
  1618  0001FE                     _DecWSW$2087:
  1619                           	opt stack 0
  1620  0001FE                     RetDelta4@hi:
  1621                           	opt stack 0
  1622                           
  1623                           ; 1 bytes @ 0x1
  1624  0001FE                     	ds	1
  1625  0001FF                     _DecWSW$2088:
  1626                           	opt stack 0
  1627  0001FF                     RetDelta4@lo:
  1628                           	opt stack 0
  1629                           
  1630                           ; 1 bytes @ 0x2
  1631  0001FF                     	ds	1
  1632                           tblptru	equ	0xFF8
  1633                           tblptrh	equ	0xFF7
  1634                           tblptrl	equ	0xFF6
  1635                           tablat	equ	0xFF5
  1636                           prodh	equ	0xFF4
  1637                           prodl	equ	0xFF3
  1638                           intcon	equ	0xFF2
  1639                           postinc0	equ	0xFEE
  1640                           wreg	equ	0xFE8
  1641                           indf1	equ	0xFE7
  1642                           postinc1	equ	0xFE6
  1643                           postdec1	equ	0xFE5
  1644                           fsr1h	equ	0xFE2
  1645                           fsr1l	equ	0xFE1
  1646                           indf2	equ	0xFDF
  1647                           postinc2	equ	0xFDE
  1648                           postdec2	equ	0xFDD
  1649                           fsr2h	equ	0xFDA
  1650                           fsr2l	equ	0xFD9
  1651                           status	equ	0xFD8
  1652                           
  1653                           	psect	cstackBANK0
  1654  0000F3                     __pcstackBANK0:
  1655                           	opt stack 0
  1656  0000F3                     ??_ModDkCO:
  1657  0000F3                     ??_ModDkCW:
  1658  0000F3                     ??_ModDkCW2:
  1659  0000F3                     ??_ModDkCW4:
  1660  0000F3                     ??_GoldenEye:
  1661  0000F3                     ??_ReadDataXONLID:
  1662  0000F3                     ?___awdiv:
  1663                           	opt stack 0
  1664  0000F3                     ?___lwdiv:
  1665                           	opt stack 0
  1666  0000F3                     PrintErrCs@kod:
  1667                           	opt stack 0
  1668  0000F3                     PrintErrTm@kod:
  1669                           	opt stack 0
  1670  0000F3                     ModPruCO@tmp:
  1671                           	opt stack 0
  1672  0000F3                     ModPruCW@tmp:
  1673                           	opt stack 0
  1674  0000F3                     ModPruCW4@tmp:
  1675                           	opt stack 0
  1676  0000F3                     ModPruCW2@tmp:
  1677                           	opt stack 0
  1678  0000F3                     ModPmp1@p:
  1679                           	opt stack 0
  1680  0000F3                     TrybPracy@ExtR:
  1681                           	opt stack 0
  1682  0000F3                     ___aldiv@counter:
  1683                           	opt stack 0
  1684  0000F3                     ___awdiv@dividend:
  1685                           	opt stack 0
  1686  0000F3                     ___lwdiv@dividend:
  1687                           	opt stack 0
  1688  0000F3                     ___lmul@product:
  1689                           	opt stack 0
  1690                           
  1691                           ; 4 bytes @ 0x0
  1692  0000F3                     	ds	1
  1693  0000F4                     ModPruCO@k:
  1694                           	opt stack 0
  1695  0000F4                     ModPruCW@k:
  1696                           	opt stack 0
  1697  0000F4                     ModPruCW4@k:
  1698                           	opt stack 0
  1699  0000F4                     ModPruCW2@k:
  1700                           	opt stack 0
  1701  0000F4                     ModPmp1@tim:
  1702                           	opt stack 0
  1703  0000F4                     TrybPracy@ExtR2:
  1704                           	opt stack 0
  1705  0000F4                     ___aldiv@sign:
  1706                           	opt stack 0
  1707                           
  1708                           ; 1 bytes @ 0x1
  1709  0000F4                     	ds	1
  1710  0000F5                     ModPmp1@pdw:
  1711                           	opt stack 0
  1712  0000F5                     _TrybPracy$5565:
  1713                           	opt stack 0
  1714  0000F5                     ___awdiv@divisor:
  1715                           	opt stack 0
  1716  0000F5                     ___lwdiv@divisor:
  1717                           	opt stack 0
  1718  0000F5                     ___aldiv@quotient:
  1719                           	opt stack 0
  1720                           
  1721                           ; 4 bytes @ 0x2
  1722  0000F5                     	ds	1
  1723  0000F6                     ModPmp1@pup:
  1724                           	opt stack 0
  1725  0000F6                     _TrybPracy$5566:
  1726                           	opt stack 0
  1727                           
  1728                           ; 1 bytes @ 0x3
  1729  0000F6                     	ds	1
  1730  0000F7                     ??_ModPrzCW4:
  1731  0000F7                     ??_WriteOPWM:
  1732  0000F7                     ProcToPmpPwm@prc:
  1733                           	opt stack 0
  1734  0000F7                     ModPmp1@ppwm:
  1735                           	opt stack 0
  1736  0000F7                     ReadDataXONLID@k:
  1737                           	opt stack 0
  1738  0000F7                     TrybPracy@key2:
  1739                           	opt stack 0
  1740  0000F7                     ___awdiv@counter:
  1741                           	opt stack 0
  1742                           
  1743                           ; 1 bytes @ 0x4
  1744  0000F7                     	ds	1
  1745  0000F8                     ModDkCO@ada:
  1746                           	opt stack 0
  1747  0000F8                     ModDkCW@ada:
  1748                           	opt stack 0
  1749  0000F8                     ModDkCW4@k:
  1750                           	opt stack 0
  1751  0000F8                     ModDkCW2@k:
  1752                           	opt stack 0
  1753  0000F8                     ReadDataXONLID@key:
  1754                           	opt stack 0
  1755  0000F8                     TrybPracy@key:
  1756                           	opt stack 0
  1757  0000F8                     ___awdiv@sign:
  1758                           	opt stack 0
  1759  0000F8                     ProcToPmpPwm@p:
  1760                           	opt stack 0
  1761                           
  1762                           ; 2 bytes @ 0x5
  1763  0000F8                     	ds	1
  1764  0000F9                     ??_ReadParam:
  1765  0000F9                     ??_ModZgCO:
  1766  0000F9                     ??_ModZgCW:
  1767  0000F9                     ??_ModZgCW2:
  1768  0000F9                     ??_ModZgCW4:
  1769  0000F9                     ??_GetPGD_PCO:
  1770  0000F9                     ModDkCO@k:
  1771                           	opt stack 0
  1772  0000F9                     ModDkCW@k:
  1773                           	opt stack 0
  1774  0000F9                     ModDkCW4@p:
  1775                           	opt stack 0
  1776  0000F9                     ModDkCW2@p:
  1777                           	opt stack 0
  1778  0000F9                     ___awdiv@quotient:
  1779                           	opt stack 0
  1780                           
  1781                           ; 2 bytes @ 0x6
  1782  0000F9                     	ds	1
  1783  0000FA                     ??_RglPmp1:
  1784  0000FA                     ModDkCO@p:
  1785                           	opt stack 0
  1786  0000FA                     ModDkCW@p:
  1787                           	opt stack 0
  1788  0000FA                     ModDkCW4@ada:
  1789                           	opt stack 0
  1790  0000FA                     ModDkCW2@ada:
  1791                           	opt stack 0
  1792                           
  1793                           ; 1 bytes @ 0x7
  1794  0000FA                     	ds	1
  1795  0000FB                     ??_ModPrzCW:
  1796  0000FB                     ??_FirstPCW:
  1797  0000FB                     ??_RetHI:
  1798  0000FB                     ??_RetLO:
  1799  0000FB                     PomiarCS@dac:
  1800                           	opt stack 0
  1801  0000FB                     MocStart@tmp:
  1802                           	opt stack 0
  1803  0000FB                     MocMaksCO@tmp:
  1804                           	opt stack 0
  1805  0000FB                     MocMaksCW@tmp:
  1806                           	opt stack 0
  1807  0000FB                     ModDkCO@m:
  1808                           	opt stack 0
  1809  0000FB                     ModDkCW@m:
  1810                           	opt stack 0
  1811  0000FB                     ModDkCW4@m:
  1812                           	opt stack 0
  1813  0000FB                     ModDkCW2@m:
  1814                           	opt stack 0
  1815                           
  1816                           ; 4 bytes @ 0x8
  1817  0000FB                     	ds	1
  1818  0000FC                     PomiarCS@cs:
  1819                           	opt stack 0
  1820  0000FC                     WriteOPWM@aosc:
  1821                           	opt stack 0
  1822  0000FC                     ModPrzCW4@p:
  1823                           	opt stack 0
  1824                           
  1825                           ; 2 bytes @ 0x9
  1826  0000FC                     	ds	1
  1827  0000FD                     ??_Rozruch:
  1828  0000FD                     ??_RuszCiag:
  1829  0000FD                     ??_OczekujNaPrzeplywWG:
  1830  0000FD                     ??_NastawaCOCW:
  1831  0000FD                     DecERR@w:
  1832                           	opt stack 0
  1833  0000FD                     MocStart@nst:
  1834                           	opt stack 0
  1835  0000FD                     MocMaksCO@nst:
  1836                           	opt stack 0
  1837  0000FD                     MocMaksCW@nst:
  1838                           	opt stack 0
  1839  0000FD                     WriteOPWM@tmp:
  1840                           	opt stack 0
  1841                           
  1842                           ; 2 bytes @ 0xA
  1843  0000FD                     	ds	1
  1844  0000FE                     _DecERR$2092:
  1845                           	opt stack 0
  1846  0000FE                     OczekujNaPrzeplywWG@pmp:
  1847                           	opt stack 0
  1848                           
  1849                           ; 1 bytes @ 0xB
  1850  0000FE                     	ds	1
  1851  0000FF                     _DecERR$2093:
  1852                           	opt stack 0
  1853  0000FF                     OczekujNaPrzeplywWG@prz:
  1854                           	opt stack 0
  1855  0000FF                     WriteOPWM@tpwm:
  1856                           	opt stack 0
  1857                           
  1858                           ; 1 bytes @ 0xC
  1859  0000FF                     	ds	1
  1860                           tblptru	equ	0xFF8
  1861                           tblptrh	equ	0xFF7
  1862                           tblptrl	equ	0xFF6
  1863                           tablat	equ	0xFF5
  1864                           prodh	equ	0xFF4
  1865                           prodl	equ	0xFF3
  1866                           intcon	equ	0xFF2
  1867                           postinc0	equ	0xFEE
  1868                           wreg	equ	0xFE8
  1869                           indf1	equ	0xFE7
  1870                           postinc1	equ	0xFE6
  1871                           postdec1	equ	0xFE5
  1872                           fsr1h	equ	0xFE2
  1873                           fsr1l	equ	0xFE1
  1874                           indf2	equ	0xFDF
  1875                           postinc2	equ	0xFDE
  1876                           postdec2	equ	0xFDD
  1877                           fsr2h	equ	0xFDA
  1878                           fsr2l	equ	0xFD9
  1879                           status	equ	0xFD8
  1880                           
  1881                           	psect	cstackCOMRAM
  1882  000001                     __pcstackCOMRAM:
  1883                           	opt stack 0
  1884  000001                     ??_LiczCHK:
  1885  000001                     ??_KolProc:
  1886  000001                     ??_SetPrWswData:
  1887  000001                     ??_PrintWswData:
  1888  000001                     ??_SetNDatCHK:
  1889  000001                     ??i2_RefStan:
  1890  000001                     ??i2_RdPrt:
  1891  000001                     ?___lbmod:
  1892                           	opt stack 0
  1893  000001                     ?i2___lbdiv:
  1894                           	opt stack 0
  1895  000001                     IncRTimer@i:
  1896                           	opt stack 0
  1897  000001                     Swbty@mask:
  1898                           	opt stack 0
  1899  000001                     Rwbty@mask:
  1900                           	opt stack 0
  1901  000001                     IncKeyTimer@i:
  1902                           	opt stack 0
  1903  000001                     ___lbmod@divisor:
  1904                           	opt stack 0
  1905  000001                     i2___lbdiv@divisor:
  1906                           	opt stack 0
  1907                           
  1908                           ; 1 bytes @ 0x0
  1909  000001                     	ds	1
  1910  000002                     SetPrWswData@i:
  1911                           	opt stack 0
  1912  000002                     Swbty@dtd:
  1913                           	opt stack 0
  1914  000002                     Rwbty@dtd:
  1915                           	opt stack 0
  1916  000002                     ___lbmod@dividend:
  1917                           	opt stack 0
  1918  000002                     i2_RefStan$2767:
  1919                           	opt stack 0
  1920  000002                     i2RdPrt@Index:
  1921                           	opt stack 0
  1922  000002                     i2___lbdiv@dividend:
  1923                           	opt stack 0
  1924                           
  1925                           ; 1 bytes @ 0x1
  1926  000002                     	ds	1
  1927  000003                     ?_BitSet:
  1928                           	opt stack 0
  1929  000003                     SetNDatCHK@Data:
  1930                           	opt stack 0
  1931  000003                     ___lbmod@counter:
  1932                           	opt stack 0
  1933  000003                     i2_RefStan$2768:
  1934                           	opt stack 0
  1935  000003                     i2___lbdiv@counter:
  1936                           	opt stack 0
  1937  000003                     BitSet@data:
  1938                           	opt stack 0
  1939                           
  1940                           ; 2 bytes @ 0x2
  1941  000003                     	ds	1
  1942  000004                     SetNDatCHK@a:
  1943                           	opt stack 0
  1944  000004                     ___lbmod@rem:
  1945                           	opt stack 0
  1946  000004                     i2_RefStan$2769:
  1947                           	opt stack 0
  1948  000004                     i2___lbdiv@quotient:
  1949                           	opt stack 0
  1950                           
  1951                           ; 1 bytes @ 0x3
  1952  000004                     	ds	1
  1953  000005                     ??_StabPort:
  1954  000005                     ??_FormatWswData:
  1955  000005                     BitSet@nbit:
  1956                           	opt stack 0
  1957  000005                     SetNDatCHK@b:
  1958                           	opt stack 0
  1959  000005                     PrintWswData@j:
  1960                           	opt stack 0
  1961                           
  1962                           ; 1 bytes @ 0x4
  1963  000005                     	ds	1
  1964  000006                     BitSet@bt:
  1965                           	opt stack 0
  1966  000006                     LiczCHK@chk:
  1967                           	opt stack 0
  1968  000006                     SetNDatCHK@d:
  1969                           	opt stack 0
  1970  000006                     PrintWswData@k:
  1971                           	opt stack 0
  1972                           
  1973                           ; 1 bytes @ 0x5
  1974  000006                     	ds	1
  1975  000007                     ??_BitSet:
  1976  000007                     LiczCHK@NBTI2C:
  1977                           	opt stack 0
  1978  000007                     StabPort@delay:
  1979                           	opt stack 0
  1980  000007                     VerifyNDatCHK@Data:
  1981                           	opt stack 0
  1982  000007                     PrintWswData@i:
  1983                           	opt stack 0
  1984                           
  1985                           ; 1 bytes @ 0x6
  1986  000007                     	ds	1
  1987  000008                     LiczCHK@i:
  1988                           	opt stack 0
  1989  000008                     StabPort@i:
  1990                           	opt stack 0
  1991                           
  1992                           ; 1 bytes @ 0x7
  1993  000008                     	ds	1
  1994  000009                     
  1995                           ; 0 bytes @ 0x8
  1996  000009                     	ds	1
  1997  00000A                     _FormatDataIMY$1098:
  1998                           	opt stack 0
  1999                           
  2000                           ; 2 bytes @ 0x9
  2001  00000A                     	ds	2
  2002  00000C                     _FormatDataIMY$1065:
  2003                           	opt stack 0
  2004  00000C                     KolProc@l:
  2005                           	opt stack 0
  2006                           
  2007                           ; 1 bytes @ 0xB
  2008  00000C                     	ds	1
  2009  00000D                     _FormatDataIMY$1099:
  2010                           	opt stack 0
  2011  00000D                     KolProc@nC:
  2012                           	opt stack 0
  2013                           
  2014                           ; 1 bytes @ 0xC
  2015  00000D                     	ds	1
  2016  00000E                     _FormatDataIMY$1100:
  2017                           	opt stack 0
  2018  00000E                     KolProc@k:
  2019                           	opt stack 0
  2020                           
  2021                           ; 1 bytes @ 0xD
  2022  00000E                     	ds	1
  2023  00000F                     _FormatDataIMY$1101:
  2024                           	opt stack 0
  2025  00000F                     KolProc@i:
  2026                           	opt stack 0
  2027                           
  2028                           ; 1 bytes @ 0xE
  2029  00000F                     	ds	1
  2030  000010                     _FormatDataIMY$1102:
  2031                           	opt stack 0
  2032  000010                     KolProc@j:
  2033                           	opt stack 0
  2034                           
  2035                           ; 1 bytes @ 0xF
  2036  000010                     	ds	1
  2037  000011                     _FormatDataIMY$1103:
  2038                           	opt stack 0
  2039                           
  2040                           ; 1 bytes @ 0x10
  2041  000011                     	ds	1
  2042  000012                     _FormatDataIMY$1104:
  2043                           	opt stack 0
  2044                           
  2045                           ; 1 bytes @ 0x11
  2046  000012                     	ds	1
  2047  000013                     _FormatDataIMY$1105:
  2048                           	opt stack 0
  2049                           
  2050                           ; 1 bytes @ 0x12
  2051  000013                     	ds	1
  2052  000014                     ??_ISR:
  2053                           
  2054                           ; 0 bytes @ 0x13
  2055  000014                     	ds	10
  2056  00001E                     ??_RdPrt:
  2057  00001E                     ?_SetPrt:
  2058                           	opt stack 0
  2059  00001E                     ?_Write_b_eep:
  2060                           	opt stack 0
  2061  00001E                     ?_SetData:
  2062                           	opt stack 0
  2063  00001E                     ?_SetStatus:
  2064                           	opt stack 0
  2065  00001E                     ?_SetPoz:
  2066                           	opt stack 0
  2067  00001E                     ??_Tmaleje:
  2068  00001E                     ??_Twyzsza:
  2069  00001E                     ??_TFmaleje:
  2070  00001E                     ??_ReadAC:
  2071  00001E                     ??_RefStan:
  2072  00001E                     ?_StartKeyTim:
  2073                           	opt stack 0
  2074  00001E                     ?_ResBufKeyEx:
  2075                           	opt stack 0
  2076  00001E                     ?_WaitToLowEx:
  2077                           	opt stack 0
  2078  00001E                     ?_Read_b_eep:
  2079                           	opt stack 0
  2080  00001E                     ?_RetMax:
  2081                           	opt stack 0
  2082  00001E                     ?_RetDelta1:
  2083                           	opt stack 0
  2084  00001E                     ?_RetDelta2:
  2085                           	opt stack 0
  2086  00001E                     ?_RetDelta3:
  2087                           	opt stack 0
  2088  00001E                     ?_KeyTim:
  2089                           	opt stack 0
  2090  00001E                     ?___lbdiv:
  2091                           	opt stack 0
  2092  00001E                     ?___lwmod:
  2093                           	opt stack 0
  2094  00001E                     ?___wmul:
  2095                           	opt stack 0
  2096  00001E                     ?___aldiv:
  2097                           	opt stack 0
  2098  00001E                     ?___lmul:
  2099                           	opt stack 0
  2100  00001E                     PmrTim1@tm:
  2101                           	opt stack 0
  2102  00001E                     PmrTim2@tm:
  2103                           	opt stack 0
  2104  00001E                     PredkoscZmianCW@w:
  2105                           	opt stack 0
  2106  00001E                     SetPrt@nw:
  2107                           	opt stack 0
  2108  00001E                     SetErr@kod:
  2109                           	opt stack 0
  2110  00001E                     SetMsg@kod:
  2111                           	opt stack 0
  2112  00001E                     WritePWM@tpwm:
  2113                           	opt stack 0
  2114  00001E                     WritePWM2@tpwm:
  2115                           	opt stack 0
  2116  00001E                     Trosnie@t:
  2117                           	opt stack 0
  2118  00001E                     Tnizsza@t:
  2119                           	opt stack 0
  2120  00001E                     TFrosnie@t:
  2121                           	opt stack 0
  2122  00001E                     StartRTdS@Index:
  2123                           	opt stack 0
  2124  00001E                     RTdS@Index:
  2125                           	opt stack 0
  2126  00001E                     StartRTS@Index:
  2127                           	opt stack 0
  2128  00001E                     RTS@Index:
  2129                           	opt stack 0
  2130  00001E                     StartRTM@Index:
  2131                           	opt stack 0
  2132  00001E                     RTM@Index:
  2133                           	opt stack 0
  2134  00001E                     StartRTG@Index:
  2135                           	opt stack 0
  2136  00001E                     RTG@Index:
  2137                           	opt stack 0
  2138  00001E                     RetMax@b:
  2139                           	opt stack 0
  2140  00001E                     RetDelta1@hi:
  2141                           	opt stack 0
  2142  00001E                     RetDelta2@ddlt:
  2143                           	opt stack 0
  2144  00001E                     RetDelta3@lo:
  2145                           	opt stack 0
  2146  00001E                     Swsdid@dtd:
  2147                           	opt stack 0
  2148  00001E                     Rwsdid@dtd:
  2149                           	opt stack 0
  2150  00001E                     SetPoz@nrpoz:
  2151                           	opt stack 0
  2152  00001E                     ResetKol@nrkol:
  2153                           	opt stack 0
  2154  00001E                     RestartKol@nrkol:
  2155                           	opt stack 0
  2156  00001E                     AllKolToFirstPoz@j:
  2157                           	opt stack 0
  2158  00001E                     ___lbdiv@divisor:
  2159                           	opt stack 0
  2160  00001E                     SetData@wData:
  2161                           	opt stack 0
  2162  00001E                     SetStatus@wData:
  2163                           	opt stack 0
  2164  00001E                     StartKeyTim@ky:
  2165                           	opt stack 0
  2166  00001E                     KeyTim@ky:
  2167                           	opt stack 0
  2168  00001E                     ResBufKeyEx@ky:
  2169                           	opt stack 0
  2170  00001E                     WaitToLowEx@ky:
  2171                           	opt stack 0
  2172  00001E                     Read_b_eep@badd:
  2173                           	opt stack 0
  2174  00001E                     Write_b_eep@badd:
  2175                           	opt stack 0
  2176  00001E                     ___lwmod@dividend:
  2177                           	opt stack 0
  2178  00001E                     ___wmul@multiplier:
  2179                           	opt stack 0
  2180  00001E                     ___aldiv@dividend:
  2181                           	opt stack 0
  2182  00001E                     ___lmul@multiplier:
  2183                           	opt stack 0
  2184                           
  2185                           ; 4 bytes @ 0x1D
  2186  00001E                     	ds	1
  2187  00001F                     ??_PwrOnDelay:
  2188  00001F                     ??_FunkcjaSerwisowa:
  2189  00001F                     ??_ZmienKCOKCW:
  2190  00001F                     ??_VWybieg:
  2191  00001F                     ??_ReloadPlomien:
  2192  00001F                     ??_RuszPlomien:
  2193  00001F                     ??_ReloadCiag:
  2194  00001F                     ??_Proba48:
  2195  00001F                     ??_Rusz48:
  2196  00001F                     ??_Proba48Z3:
  2197  00001F                     ??_Rusz48Z3:
  2198  00001F                     ??_BlokadaL3:
  2199  00001F                     ??_Blokada15S:
  2200  00001F                     ??_SetPrt:
  2201  00001F                     ?_SetDiode:
  2202                           	opt stack 0
  2203  00001F                     ??_SetPoz:
  2204  00001F                     ??_IncMaxCO:
  2205  00001F                     ??_IncMaxCW:
  2206  00001F                     ??_IncMaxCW2:
  2207  00001F                     ??_ModToCW3:
  2208  00001F                     ??_IncMaxCW4:
  2209  00001F                     ??_VZPauza:
  2210  00001F                     ??_RetMax:
  2211  00001F                     ReadAC@chanel:
  2212                           	opt stack 0
  2213  00001F                     PredkoscZmianCW@i:
  2214                           	opt stack 0
  2215  00001F                     _RefStan$2767:
  2216                           	opt stack 0
  2217  00001F                     RdPrt@Index:
  2218                           	opt stack 0
  2219  00001F                     SetDiode@stn:
  2220                           	opt stack 0
  2221  00001F                     RetDelta1@pco:
  2222                           	opt stack 0
  2223  00001F                     RetDelta2@eco:
  2224                           	opt stack 0
  2225  00001F                     RetDelta3@pco:
  2226                           	opt stack 0
  2227  00001F                     ___lbdiv@dividend:
  2228                           	opt stack 0
  2229                           
  2230                           ; 1 bytes @ 0x1E
  2231  00001F                     	ds	1
  2232  000020                     ??_RefInterfaceData:
  2233  000020                     ??_DecSTR:
  2234  000020                     ??_Wylacz:
  2235  000020                     ??_DetekcjaPrzeplywuWG:
  2236  000020                     ?_ModParam:
  2237                           	opt stack 0
  2238  000020                     ?_PresKeyEX:
  2239                           	opt stack 0
  2240  000020                     ?_ExxPresKey:
  2241                           	opt stack 0
  2242  000020                     ReadTabNTC@zrAC:
  2243                           	opt stack 0
  2244  000020                     ReturnACfromNTC@data:
  2245                           	opt stack 0
  2246  000020                     ReadTabZNTC@zrAC:
  2247                           	opt stack 0
  2248  000020                     _KolejkaPobudzen$2076:
  2249                           	opt stack 0
  2250  000020                     FltParMod@wr:
  2251                           	opt stack 0
  2252  000020                     _RefStan$2768:
  2253                           	opt stack 0
  2254  000020                     SetPrt@Index:
  2255                           	opt stack 0
  2256  000020                     SetDiode@wd:
  2257                           	opt stack 0
  2258  000020                     ModParam@tpg:
  2259                           	opt stack 0
  2260  000020                     RetMax@a:
  2261                           	opt stack 0
  2262  000020                     RetDelta2@kD:
  2263                           	opt stack 0
  2264  000020                     SetData@wdt1:
  2265                           	opt stack 0
  2266  000020                     Write_b_eep@bdat:
  2267                           	opt stack 0
  2268  000020                     ___lbdiv@counter:
  2269                           	opt stack 0
  2270  000020                     SetStatus@wst:
  2271                           	opt stack 0
  2272  000020                     PresKeyEX@ky:
  2273                           	opt stack 0
  2274  000020                     ExxPresKey@ky:
  2275                           	opt stack 0
  2276  000020                     ___lwmod@divisor:
  2277                           	opt stack 0
  2278  000020                     ___wmul@multiplicand:
  2279                           	opt stack 0
  2280                           
  2281                           ; 2 bytes @ 0x1F
  2282  000020                     	ds	1
  2283  000021                     ??_ModParam:
  2284  000021                     ?_RetMin:
  2285                           	opt stack 0
  2286  000021                     ReadTabNTC@data:
  2287                           	opt stack 0
  2288  000021                     ReturnACfromNTC@bdta:
  2289                           	opt stack 0
  2290  000021                     ReadTabZNTC@data:
  2291                           	opt stack 0
  2292  000021                     _RefInterfaceData$2068:
  2293                           	opt stack 0
  2294  000021                     _KolejkaPobudzen$2077:
  2295                           	opt stack 0
  2296  000021                     DetekcjaPrzeplywuWG@pmp:
  2297                           	opt stack 0
  2298  000021                     _RefStan$2769:
  2299                           	opt stack 0
  2300  000021                     Tmaleje@t:
  2301                           	opt stack 0
  2302  000021                     Twyzsza@t:
  2303                           	opt stack 0
  2304  000021                     TFmaleje@t:
  2305                           	opt stack 0
  2306  000021                     RetMin@b:
  2307                           	opt stack 0
  2308  000021                     SetData@wdt0:
  2309                           	opt stack 0
  2310  000021                     Write_b_eep@GIE_BIT_VAL:
  2311                           	opt stack 0
  2312  000021                     ___lbdiv@quotient:
  2313                           	opt stack 0
  2314                           
  2315                           ; 1 bytes @ 0x20
  2316  000021                     	ds	1
  2317  000022                     ??_DecyzjaAntyLeg:
  2318  000022                     ??_ModPruCO:
  2319  000022                     ??_ModPrzCO:
  2320  000022                     ??_ModPruCW:
  2321  000022                     ??_ModPruCW2:
  2322  000022                     ??_ModPruCW4:
  2323  000022                     ??_WritePCO:
  2324  000022                     ??_WritePCW:
  2325  000022                     ??_WritePFN:
  2326  000022                     ??_ModPmp1:
  2327  000022                     ??_RetMin:
  2328  000022                     ??_PresKeyEX:
  2329  000022                     _RefInterfaceData$2069:
  2330                           	opt stack 0
  2331  000022                     KolejkaPobudzen@wr:
  2332                           	opt stack 0
  2333  000022                     DetekcjaPrzeplywuWG@prz:
  2334                           	opt stack 0
  2335  000022                     ModParam@tpk:
  2336                           	opt stack 0
  2337  000022                     ExxPresKey@dTim:
  2338                           	opt stack 0
  2339  000022                     ___lwmod@counter:
  2340                           	opt stack 0
  2341  000022                     ReadTabNTC@i:
  2342                           	opt stack 0
  2343  000022                     ReturnACfromNTC@i:
  2344                           	opt stack 0
  2345  000022                     ReadTabZNTC@i:
  2346                           	opt stack 0
  2347  000022                     SetStatus@mask:
  2348                           	opt stack 0
  2349  000022                     ___wmul@product:
  2350                           	opt stack 0
  2351  000022                     ___aldiv@divisor:
  2352                           	opt stack 0
  2353  000022                     ___lmul@multiplicand:
  2354                           	opt stack 0
  2355                           
  2356                           ; 4 bytes @ 0x21
  2357  000022                     	ds	1
  2358  000023                     _RefInterfaceData$2070:
  2359                           	opt stack 0
  2360  000023                     RetMin@a:
  2361                           	opt stack 0
  2362  000023                     SetPoz@nrkol:
  2363                           	opt stack 0
  2364  000023                     ExxPresKey@pTim:
  2365                           	opt stack 0
  2366                           
  2367                           ; 1 bytes @ 0x22
  2368  000023                     	ds	1
  2369  000024                     ??_PomiarCO:
  2370  000024                     ??_PomiarCW:
  2371  000024                     ??_PomiarCS:
  2372  000024                     ??_SetStatus:
  2373  000024                     ??_ExxPresKey:
  2374  000024                     ?_RetHI:
  2375                           	opt stack 0
  2376  000024                     ?_RetLO:
  2377                           	opt stack 0
  2378  000024                     _RefInterfaceData$2071:
  2379                           	opt stack 0
  2380  000024                     GoldenEye@pop:
  2381                           	opt stack 0
  2382  000024                     RetHI@eco:
  2383                           	opt stack 0
  2384  000024                     RetLO@eco:
  2385                           	opt stack 0
  2386  000024                     ___lwdiv@counter:
  2387                           	opt stack 0
  2388                           
  2389                           ; 1 bytes @ 0x23
  2390  000024                     	ds	1
  2391  000025                     ?_PrintErr:
  2392                           	opt stack 0
  2393  000025                     ?_PrintErrTm:
  2394                           	opt stack 0
  2395  000025                     ?_PrintErrCs:
  2396                           	opt stack 0
  2397  000025                     _RefInterfaceData$2072:
  2398                           	opt stack 0
  2399  000025                     GoldenEye@dt:
  2400                           	opt stack 0
  2401  000025                     PrintErr@pls:
  2402                           	opt stack 0
  2403  000025                     PrintErrCs@cs:
  2404                           	opt stack 0
  2405  000025                     PrintErrTm@tm:
  2406                           	opt stack 0
  2407  000025                     PrintNstCW@nst:
  2408                           	opt stack 0
  2409  000025                     PrintNstCO@nst:
  2410                           	opt stack 0
  2411  000025                     PrintCS@cs:
  2412                           	opt stack 0
  2413  000025                     PrintCW@tm:
  2414                           	opt stack 0
  2415  000025                     PrintCO@tm:
  2416                           	opt stack 0
  2417  000025                     RetHI@max:
  2418                           	opt stack 0
  2419  000025                     RetLO@min:
  2420                           	opt stack 0
  2421  000025                     InitWsw@i:
  2422                           	opt stack 0
  2423  000025                     PresKeyEX@k:
  2424                           	opt stack 0
  2425  000025                     ___lwdiv@quotient:
  2426                           	opt stack 0
  2427                           
  2428                           ; 2 bytes @ 0x24
  2429  000025                     	ds	1
  2430  000026                     ??_TrybPracy:
  2431  000026                     ??_FiltrPomiarowyCOCW:
  2432  000026                     ?_RetDelta:
  2433                           	opt stack 0
  2434  000026                     _RefInterfaceData$2073:
  2435                           	opt stack 0
  2436  000026                     PrintErr@kod:
  2437                           	opt stack 0
  2438  000026                     PrintErrCs@pls:
  2439                           	opt stack 0
  2440  000026                     PrintErrTm@pls:
  2441                           	opt stack 0
  2442  000026                     RetDelta@eco:
  2443                           	opt stack 0
  2444  000026                     ExxPresKey@k:
  2445                           	opt stack 0
  2446                           
  2447                           ; 1 bytes @ 0x25
  2448  000026                     	ds	1
  2449  000027                     tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           prodh	equ	0xFF4
  2454                           prodl	equ	0xFF3
  2455                           intcon	equ	0xFF2
  2456                           postinc0	equ	0xFEE
  2457                           wreg	equ	0xFE8
  2458                           indf1	equ	0xFE7
  2459                           postinc1	equ	0xFE6
  2460                           postdec1	equ	0xFE5
  2461                           fsr1h	equ	0xFE2
  2462                           fsr1l	equ	0xFE1
  2463                           indf2	equ	0xFDF
  2464                           postinc2	equ	0xFDE
  2465                           postdec2	equ	0xFDD
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470                           ; 0 bytes @ 0x26
  2471 ;;
  2472 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2473 ;;
  2474 ;; *************** function _main *****************
  2475 ;; Defined at:
  2476 ;;		line 52 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;		None               void
  2483 ;; Registers used:
  2484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
      +u, prodl, prodh, bsr, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : E/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Totals:         0       0       0       1       2       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;Total ram usage:        3 bytes
  2495 ;; Hardware stack levels required when called:   11
  2496 ;; This function calls:
  2497 ;;		_InitOsc
  2498 ;;		_InitGlobal
  2499 ;;		_InitTimer1
  2500 ;;		_InitPort
  2501 ;;		_InitAC
  2502 ;;		_InitWsw
  2503 ;;		_InitPWM
  2504 ;;		_InitI2C
  2505 ;;		_InitUart
  2506 ;;		_InitDataPmr
  2507 ;;		_ClearData
  2508 ;;		_TestScr
  2509 ;;		_PwrOnDelay
  2510 ;;		_EndTestScr
  2511 ;;		_ClsScr
  2512 ;;		_EndClsScr
  2513 ;;		_RdEEParam
  2514 ;;		_EnKonf
  2515 ;;		_Read_b_eep
  2516 ;;		_PrintErr
  2517 ;;		_ErrPTG
  2518 ;;		_PomiarCO
  2519 ;;		_PomiarCW
  2520 ;;		_PomiarZW
  2521 ;;		_PomiarCS
  2522 ;;		_PomiarPCO
  2523 ;;		_PomiarPCW
  2524 ;;		_PomiarPFN
  2525 ;;		_PomiarIN
  2526 ;;		_RefInterfaceData
  2527 ;;		_RdPrt
  2528 ;;		_RestartFltPrt
  2529 ;;		_StartRTS
  2530 ;;		_WritePWM2
  2531 ;;		_TrybPracy
  2532 ;;		_FiltrPomiarowyCOCW
  2533 ;;		_DecWSW
  2534 ;;		_DecERR
  2535 ;;		_DecSTR
  2536 ;;		_DecRozruch
  2537 ;;		_DecWylacz
  2538 ;;		_FunkcjaSerwisowa
  2539 ;;		_DecyzjaAntyLeg
  2540 ;;		_KolejkaPobudzen
  2541 ;;		_RglPmp
  2542 ;;		_ZmienKCOKCW
  2543 ;;		_Wylacz
  2544 ;;		_Rozruch
  2545 ;;		_VWybieg
  2546 ;;		_ReloadPlomien
  2547 ;;		_RuszPlomien
  2548 ;;		_ReloadCiag
  2549 ;;		_RuszCiag
  2550 ;;		_Proba48
  2551 ;;		_Rusz48
  2552 ;;		_Proba48Z3
  2553 ;;		_Rusz48Z3
  2554 ;;		_BlokadaL3
  2555 ;;		_Blokada15S
  2556 ;;		_Moduluj
  2557 ;;		_DetekcjaPrzeplywuWG
  2558 ;;		_OczekujNaPrzeplywWG
  2559 ;; This function is called by:
  2560 ;;		Startup code after reset
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text0
  2565  004888                     __ptext0:
  2566                           	opt stack 0
  2567  004888                     _main:
  2568                           	opt stack 20
  2569                           
  2570                           ;main.c: 55: InitOsc();
  2571                           
  2572                           ; BSR set to: 0
  2573  004888  EC6D  F05A         	call	_InitOsc	;wreg free
  2574                           
  2575                           ;main.c: 56: InitGlobal();
  2576  00488C  EC11  F05B         	call	_InitGlobal	;wreg free
  2577                           
  2578                           ;main.c: 57: InitTimer1();
  2579  004890  EC20  F059         	call	_InitTimer1	;wreg free
  2580                           
  2581                           ;main.c: 58: InitPort();
  2582  004894  EC31  F058         	call	_InitPort	;wreg free
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;main.c: 59: InitAC();
  2586  004898  EC17  F057         	call	_InitAC	;wreg free
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;main.c: 60: InitWsw();
  2590  00489C  EC91  F045         	call	_InitWsw	;wreg free
  2591                           
  2592                           ; BSR set to: 2
  2593                           ;main.c: 61: InitPWM();
  2594  0048A0  ECF4  F053         	call	_InitPWM	;wreg free
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;main.c: 62: InitI2C();
  2598  0048A4  ECC7  F056         	call	_InitI2C	;wreg free
  2599                           
  2600                           ; BSR set to: 1
  2601                           ;main.c: 63: InitUart();
  2602  0048A8  EC4E  F055         	call	_InitUart	;wreg free
  2603                           
  2604                           ; BSR set to: 1
  2605                           ;main.c: 64: InitDataPmr();
  2606  0048AC  EC0F  F054         	call	_InitDataPmr	;wreg free
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;main.c: 65: ClearData();
  2610  0048B0  ECF2  F043         	call	_ClearData	;wreg free
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;main.c: 69: if (!POR||!BOR)
  2614  0048B4  A2D0               	btfss	4048,1,c	;volatile
  2615  0048B6  D002               	goto	l584
  2616                           
  2617                           ; BSR set to: 0
  2618  0048B8  B0D0               	btfsc	4048,0,c	;volatile
  2619  0048BA  D008               	goto	l582
  2620  0048BC                     l584:
  2621                           
  2622                           ; BSR set to: 0
  2623                           ;main.c: 70: {
  2624                           ;main.c: 71: M._PW_START=1;
  2625  0048BC  817B               	bsf	(_M+27)& (0+255),0,b
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;main.c: 72: TestScr();
  2629  0048BE  EC2A  F054         	call	_TestScr	;wreg free
  2630                           
  2631                           ; BSR set to: 2
  2632                           ;main.c: 73: PwrOnDelay();
  2633  0048C2  EC04  F059         	call	_PwrOnDelay	;wreg free
  2634                           
  2635                           ; BSR set to: 1
  2636                           ;main.c: 74: EndTestScr();
  2637  0048C6  ECB2  F056         	call	_EndTestScr	;wreg free
  2638                           
  2639                           ;main.c: 75: }
  2640  0048CA  D007               	goto	l36688
  2641  0048CC                     l582:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;main.c: 76: else
  2645                           ;main.c: 77: {
  2646                           ;main.c: 78: M._RS_START=1;
  2647  0048CC  8F7A               	bsf	(_M+26)& (0+255),7,b
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;main.c: 79: ClsScr();
  2651  0048CE  EC2F  F05B         	call	_ClsScr	;wreg free
  2652                           
  2653                           ; BSR set to: 1
  2654                           ;main.c: 80: PwrOnDelay();
  2655  0048D2  EC04  F059         	call	_PwrOnDelay	;wreg free
  2656                           
  2657                           ; BSR set to: 1
  2658                           ;main.c: 81: EndClsScr();
  2659  0048D6  EC15  F05B         	call	_EndClsScr	;wreg free
  2660  0048DA                     l36688:
  2661                           
  2662                           ;main.c: 82: }
  2663                           ;main.c: 84: RdEEParam();
  2664  0048DA  ECA2  F03B         	call	_RdEEParam	;wreg free
  2665                           
  2666                           ; BSR set to: 1
  2667                           ;main.c: 87: if (!POR||!BOR)
  2668  0048DE  A2D0               	btfss	4048,1,c	;volatile
  2669  0048E0  D002               	goto	l588
  2670                           
  2671                           ; BSR set to: 1
  2672  0048E2  B0D0               	btfsc	4048,0,c	;volatile
  2673  0048E4  D004               	goto	l36696
  2674  0048E6                     l588:
  2675                           
  2676                           ; BSR set to: 1
  2677                           ;main.c: 88: {
  2678                           ;main.c: 89: POR=1;
  2679  0048E6  82D0               	bsf	4048,1,c	;volatile
  2680                           
  2681                           ;main.c: 90: BOR=1;
  2682  0048E8  80D0               	bsf	4048,0,c	;volatile
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;main.c: 91: EnKonf();
  2686  0048EA  EC19  F05B         	call	_EnKonf	;wreg free
  2687  0048EE                     l36696:
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;main.c: 92: }
  2691                           ;main.c: 94: PORTDbits.RD2=0;
  2692  0048EE  9483               	bcf	3971,2,c	;volatile
  2693                           
  2694                           ;main.c: 95: switch(DtKNF.tpkt)
  2695  0048F0  D016               	goto	l36706
  2696  0048F2                     l36698:
  2697                           
  2698                           ; BSR set to: 1
  2699                           ;main.c: 98: case 2:
  2700                           ;main.c: 99: {
  2701                           ;main.c: 100: M._RPM_CW=!PORTDbits.RD2;
  2702  0048F2  B483               	btfsc	3971,2,c	;volatile
  2703  0048F4  D012               	goto	u69510
  2704  0048F6  0E01               	movlw	1
  2705  0048F8                     u69506:
  2706  0048F8  0102               	movlb	2	; () banked
  2707  0048FA  6FFE               	movwf	??_main& (0+255),b
  2708  0048FC  33FE               	rrcf	??_main& (0+255),f,b
  2709  0048FE  33FE               	rrcf	??_main& (0+255),f,b
  2710  004900  0100               	movlb	0	; () banked
  2711  004902  517B               	movf	(_M+27)& (0+255),w,b
  2712  004904  0102               	movlb	2	; () banked
  2713  004906  19FE               	xorwf	??_main& (0+255),w,b
  2714  004908  0B7F               	andlw	-129
  2715  00490A  19FE               	xorwf	??_main& (0+255),w,b
  2716  00490C  0100               	movlb	0	; () banked
  2717  00490E  6F7B               	movwf	(_M+27)& (0+255),b
  2718                           
  2719                           ;main.c: 101: break;
  2720  004910  D00E               	goto	l36708
  2721  004912                     l36700:
  2722                           
  2723                           ; BSR set to: 1
  2724                           ;main.c: 104: case 3:
  2725                           ;main.c: 105: {
  2726                           ;main.c: 106: M._RPM_CW=!PORTDbits.RD1;
  2727  004912  B283               	btfsc	3971,1,c	;volatile
  2728  004914  D002               	goto	u69510
  2729  004916  0E01               	movlw	1
  2730  004918  D7EF               	goto	u69506
  2731  00491A                     u69510:
  2732  00491A  0E00               	movlw	0
  2733  00491C  D7ED               	goto	u69506
  2734  00491E                     l36706:
  2735                           
  2736                           ; BSR set to: 1
  2737  00491E  5151               	movf	(_DtKNF+7)& (0+255),w,b
  2738                           
  2739                           ; Switch size 1, requested type "space"
  2740                           ; Number of cases is 4, Range of values is 0 to 3
  2741                           ; switch strategies available:
  2742                           ; Name         Instructions Cycles
  2743                           ; simple_byte           13     7 (average)
  2744                           ;	Chosen strategy is simple_byte
  2745  004920  E0F8               	bz	l36700
  2746  004922  0A01               	xorlw	1	; case 1
  2747  004924  E0E6               	bz	l36698
  2748  004926  0A03               	xorlw	3	; case 2
  2749  004928  E0E4               	bz	l36698
  2750  00492A  0A01               	xorlw	1	; case 3
  2751  00492C  D7F2               	goto	l36700
  2752  00492E                     l36708:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;main.c: 117: if(M.ERR_BTY=Read_b_eep(0x00C0))
  2756  00492E  6A1F               	clrf	?_Read_b_eep+1,c
  2757  004930  0EC0               	movlw	192
  2758  004932  6E1E               	movwf	?_Read_b_eep,c
  2759  004934  EC83  F059         	call	_Read_b_eep	;wreg free
  2760  004938  0100               	movlb	0	; () banked
  2761  00493A  6F82               	movwf	(_M+34)& (0+255),b
  2762  00493C  5182               	movf	(_M+34)& (0+255),w,b
  2763  00493E  E01D               	bz	l36726
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;main.c: 118: {
  2767                           ;main.c: 119: if(DtKNF.robg==0)
  2768  004940  0101               	movlb	1	; () banked
  2769  004942  6758               	tstfsz	(_DtKNF+14)& (0+255),b
  2770  004944  D00B               	goto	l36718
  2771                           
  2772                           ; BSR set to: 1
  2773                           ;main.c: 120: {
  2774                           ;main.c: 121: if(M.ERR_BTY==5)
  2775  004946  0100               	movlb	0	; () banked
  2776  004948  5182               	movf	(_M+34)& (0+255),w,b
  2777  00494A  0A05               	xorlw	5
  2778  00494C  E107               	bnz	l36718
  2779                           
  2780                           ; BSR set to: 0
  2781                           ;main.c: 122: {
  2782                           ;main.c: 123: PrintErr(M.ERR_BTY,1);
  2783  00494E  0E01               	movlw	1
  2784  004950  6E25               	movwf	?_PrintErr,c
  2785  004952  5182               	movf	(_M+34)& (0+255),w,b
  2786  004954  ECA6  F047         	call	_PrintErr
  2787                           
  2788                           ; BSR set to: 1
  2789                           ;main.c: 124: ErrPTG();
  2790  004958  EC27  F02C         	call	_ErrPTG	;wreg free
  2791  00495C                     l36718:
  2792                           
  2793                           ;main.c: 125: }
  2794                           ;main.c: 126: }
  2795                           ;main.c: 127: if((M.ERR_BTY>=1)&&(M.ERR_BTY<=3))
  2796  00495C  0100               	movlb	0	; () banked
  2797  00495E  5182               	movf	(_M+34)& (0+255),w,b
  2798  004960  E00B               	bz	l599
  2799                           
  2800                           ; BSR set to: 0
  2801  004962  0E04               	movlw	4
  2802  004964  6182               	cpfslt	(_M+34)& (0+255),b
  2803  004966  D008               	goto	l599
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;main.c: 128: {
  2807                           ;main.c: 129: PrintErr(M.ERR_BTY,1);
  2808  004968  0E01               	movlw	1
  2809  00496A  6E25               	movwf	?_PrintErr,c
  2810  00496C  5182               	movf	(_M+34)& (0+255),w,b
  2811  00496E  ECA6  F047         	call	_PrintErr
  2812                           
  2813                           ; BSR set to: 1
  2814                           ;main.c: 130: ErrPTG();
  2815  004972  EC27  F02C         	call	_ErrPTG	;wreg free
  2816                           
  2817                           ;main.c: 131: }
  2818  004976  D001               	goto	l36726
  2819  004978                     l599:
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;main.c: 132: else M.ERR_BTY=0;
  2823  004978  6B82               	clrf	(_M+34)& (0+255),b
  2824  00497A                     l36726:
  2825                           
  2826                           ;main.c: 133: }
  2827                           ;main.c: 136: PomiarCO();
  2828  00497A  EC97  F037         	call	_PomiarCO	;wreg free
  2829                           
  2830                           ;main.c: 137: PomiarCW();
  2831  00497E  ECED  F03E         	call	_PomiarCW	;wreg free
  2832                           
  2833                           ;main.c: 138: PomiarZW();
  2834  004982  ECFB  F055         	call	_PomiarZW	;wreg free
  2835                           
  2836                           ;main.c: 139: PomiarCS();
  2837  004986  EC41  F039         	call	_PomiarCS	;wreg free
  2838                           
  2839                           ; BSR set to: 1
  2840                           ;main.c: 140: PomiarPCO();
  2841  00498A  EC3C  F049         	call	_PomiarPCO	;wreg free
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;main.c: 141: PomiarPCW();
  2845  00498E  EC73  F04A         	call	_PomiarPCW	;wreg free
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;main.c: 142: PomiarPFN();
  2849  004992  EC6A  F052         	call	_PomiarPFN	;wreg free
  2850                           
  2851                           ;main.c: 143: PomiarIN();
  2852  004996  ECCC  F054         	call	_PomiarIN	;wreg free
  2853                           
  2854                           ; BSR set to: 1
  2855                           ;main.c: 144: DtCO._newPCO=0;
  2856  00499A  0100               	movlb	0	; () banked
  2857  00499C  9FE5               	bcf	(_DtCO+1)& (0+255),7,b
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;main.c: 145: DtCW._newPCW=0;
  2861  00499E  91D0               	bcf	(_DtCW+1)& (0+255),0,b
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;main.c: 146: RefInterfaceData();
  2865  0049A0  EC37  F031         	call	_RefInterfaceData	;wreg free
  2866                           
  2867                           ; BSR set to: 1
  2868                           ;main.c: 148: PORTDbits.RD3=0;
  2869  0049A4  9683               	bcf	3971,3,c	;volatile
  2870                           
  2871                           ; BSR set to: 1
  2872                           ;main.c: 149: PORTDbits.RD0=0;
  2873  0049A6  9083               	bcf	3971,0,c	;volatile
  2874                           
  2875                           ; BSR set to: 1
  2876                           ;main.c: 152: M._TURBO=!RdPrt(2)||RdPrt(3);
  2877  0049A8  0E01               	movlw	1
  2878  0049AA  0103               	movlb	3	; () banked
  2879  0049AC  6F56               	movwf	_main$2062& (0+255),b
  2880                           
  2881                           ; BSR set to: 3
  2882  0049AE  0E02               	movlw	2
  2883  0049B0  EC84  F058         	call	_RdPrt
  2884  0049B4  E306               	bnc	l602
  2885                           
  2886                           ; BSR set to: 0
  2887  0049B6  0E03               	movlw	3
  2888  0049B8  EC84  F058         	call	_RdPrt
  2889  0049BC  E202               	bc	l602
  2890                           
  2891                           ; BSR set to: 0
  2892  0049BE  0103               	movlb	3	; () banked
  2893  0049C0  6B56               	clrf	_main$2062& (0+255),b
  2894  0049C2                     l602:
  2895  0049C2  0103               	movlb	3	; () banked
  2896  0049C4  B156               	btfsc	_main$2062& (0+255),0,b
  2897  0049C6  D003               	bra	u69595
  2898  0049C8  0100               	movlb	0	; () banked
  2899  0049CA  937B               	bcf	(_M+27)& (0+255),1,b
  2900  0049CC  D002               	bra	u69596
  2901  0049CE                     u69595:
  2902  0049CE  0100               	movlb	0	; () banked
  2903  0049D0  837B               	bsf	(_M+27)& (0+255),1,b
  2904  0049D2                     u69596:
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;main.c: 153: RestartFltPrt();
  2908  0049D2  ECA0  F053         	call	_RestartFltPrt	;wreg free
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;main.c: 154: StartRTS(9);
  2912  0049D6  0E09               	movlw	9
  2913  0049D8  EC9C  F057         	call	_StartRTS
  2914                           
  2915                           ; BSR set to: 1
  2916                           ;main.c: 158: DtCW.PCW=65;
  2917  0049DC  0E41               	movlw	65
  2918  0049DE  0100               	movlb	0	; () banked
  2919  0049E0  6FD2               	movwf	(_DtCW+3)& (0+255),b
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;main.c: 159: DtCO.PCO=85;
  2923  0049E2  0E55               	movlw	85
  2924  0049E4  6FE7               	movwf	(_DtCO+3)& (0+255),b
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;main.c: 162: WritePWM2(0);
  2928  0049E6  0E00               	movlw	0
  2929  0049E8  ECAC  F05A         	call	_WritePWM2
  2930  0049EC                     l603:
  2931  0049EC  0004               	clrwdt		;# 
  2932                           
  2933                           ;main.c: 166: PFN._opgprg=1;
  2934  0049EE  0101               	movlb	1	; () banked
  2935  0049F0  89BF               	bsf	(_PFN+5)& (0+255),4,b
  2936                           
  2937                           ; BSR set to: 1
  2938                           ;main.c: 167: PFN._opgres=0;
  2939  0049F2  97BF               	bcf	(_PFN+5)& (0+255),3,b
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;main.c: 171: M._PRACA=M._ROZRUCH||PORTDbits.RD0;
  2943  0049F4  0E01               	movlw	1
  2944  0049F6  0103               	movlb	3	; () banked
  2945  0049F8  6F57               	movwf	_main$2063& (0+255),b
  2946                           
  2947                           ; BSR set to: 3
  2948  0049FA  0100               	movlb	0	; () banked
  2949  0049FC  A570               	btfss	(_M+16)& (0+255),2,b
  2950                           
  2951                           ; BSR set to: 0
  2952  0049FE  B083               	btfsc	3971,0,c	;volatile
  2953  004A00  D002               	goto	l605
  2954                           
  2955                           ; BSR set to: 0
  2956  004A02  0103               	movlb	3	; () banked
  2957  004A04  6B57               	clrf	_main$2063& (0+255),b
  2958  004A06                     l605:
  2959  004A06  0103               	movlb	3	; () banked
  2960  004A08  B157               	btfsc	_main$2063& (0+255),0,b
  2961  004A0A  D003               	bra	u69625
  2962  004A0C  0100               	movlb	0	; () banked
  2963  004A0E  957B               	bcf	(_M+27)& (0+255),2,b
  2964  004A10  D002               	bra	u69626
  2965  004A12                     u69625:
  2966  004A12  0100               	movlb	0	; () banked
  2967  004A14  857B               	bsf	(_M+27)& (0+255),2,b
  2968  004A16                     u69626:
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;main.c: 174: RefInterfaceData();
  2972  004A16  EC37  F031         	call	_RefInterfaceData	;wreg free
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;main.c: 175: TrybPracy();
  2976  004A1A  EC0B  F00D         	call	_TrybPracy	;wreg free
  2977                           
  2978                           ; BSR set to: 1
  2979                           ;main.c: 178: PomiarPCO();
  2980  004A1E  EC3C  F049         	call	_PomiarPCO	;wreg free
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;main.c: 179: PomiarPCW();
  2984  004A22  EC73  F04A         	call	_PomiarPCW	;wreg free
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;main.c: 180: PomiarPFN();
  2988  004A26  EC6A  F052         	call	_PomiarPFN	;wreg free
  2989                           
  2990                           ;main.c: 181: PomiarCO();
  2991  004A2A  EC97  F037         	call	_PomiarCO	;wreg free
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;main.c: 182: PomiarCW();
  2995  004A2E  ECED  F03E         	call	_PomiarCW	;wreg free
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;main.c: 183: PomiarZW();
  2999  004A32  ECFB  F055         	call	_PomiarZW	;wreg free
  3000                           
  3001                           ; BSR set to: 1
  3002                           ;main.c: 184: FiltrPomiarowyCOCW();
  3003  004A36  EC7E  F049         	call	_FiltrPomiarowyCOCW	;wreg free
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;main.c: 185: PomiarCS();
  3007  004A3A  EC41  F039         	call	_PomiarCS	;wreg free
  3008                           
  3009                           ; BSR set to: 1
  3010                           ;main.c: 186: PomiarIN();
  3011  004A3E  ECCC  F054         	call	_PomiarIN	;wreg free
  3012                           
  3013                           ; BSR set to: 1
  3014                           ;main.c: 188: DecWSW();
  3015  004A42  ECF1  F019         	call	_DecWSW	;wreg free
  3016                           
  3017                           ; BSR set to: 1
  3018                           ;main.c: 189: DecERR();
  3019  004A46  EC08  F017         	call	_DecERR	;wreg free
  3020                           
  3021                           ;main.c: 190: DecSTR();
  3022  004A4A  EC88  F018         	call	_DecSTR	;wreg free
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;main.c: 191: DecRozruch();
  3026  004A4E  EC0F  F03A         	call	_DecRozruch	;wreg free
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;main.c: 192: DecWylacz();
  3030  004A52  EC52  F01B         	call	_DecWylacz	;wreg free
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;main.c: 193: FunkcjaSerwisowa();
  3034  004A56  EC4E  F04F         	call	_FunkcjaSerwisowa	;wreg free
  3035                           
  3036                           ;main.c: 194: DecyzjaAntyLeg();
  3037  004A5A  EC04  F040         	call	_DecyzjaAntyLeg	;wreg free
  3038                           
  3039                           ;main.c: 195: KolejkaPobudzen();
  3040  004A5E  ECDA  F03A         	call	_KolejkaPobudzen	;wreg free
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;main.c: 198: RglPmp();
  3044  004A62  EC67  F055         	call	_RglPmp	;wreg free
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;main.c: 199: if(M._ZMKCOCW) ZmienKCOKCW();
  3048  004A66  B370               	btfsc	(_M+16)& (0+255),1,b
  3049                           
  3050                           ; BSR set to: 0
  3051  004A68  EC5B  F03E         	call	_ZmienKCOKCW	;wreg free
  3052                           
  3053                           ;main.c: 200: if(M._WYLACZ) Wylacz();
  3054  004A6C  0100               	movlb	0	; () banked
  3055  004A6E  B170               	btfsc	(_M+16)& (0+255),0,b
  3056                           
  3057                           ; BSR set to: 0
  3058  004A70  EC72  F025         	call	_Wylacz	;wreg free
  3059                           
  3060                           ;main.c: 201: if(M._ROZRUCH) Rozruch();
  3061  004A74  0100               	movlb	0	; () banked
  3062  004A76  B570               	btfsc	(_M+16)& (0+255),2,b
  3063                           
  3064                           ; BSR set to: 0
  3065  004A78  EC12  F02B         	call	_Rozruch	;wreg free
  3066                           
  3067                           ;main.c: 202: if(M._VWYBIEG) VWybieg();
  3068  004A7C  0100               	movlb	0	; () banked
  3069  004A7E  BD70               	btfsc	(_M+16)& (0+255),6,b
  3070                           
  3071                           ; BSR set to: 0
  3072  004A80  ECFC  F04D         	call	_VWybieg	;wreg free
  3073                           
  3074                           ;main.c: 203: ReloadPlomien();
  3075  004A84  EC2A  F057         	call	_ReloadPlomien	;wreg free
  3076                           
  3077                           ;main.c: 204: if(M._RUSZ_PLOMIEN) RuszPlomien();
  3078  004A88  0100               	movlb	0	; () banked
  3079  004A8A  B171               	btfsc	(_M+17)& (0+255),0,b
  3080                           
  3081                           ; BSR set to: 0
  3082  004A8C  EC98  F04D         	call	_RuszPlomien	;wreg free
  3083                           
  3084                           ;main.c: 205: ReloadCiag();
  3085  004A90  ECFA  F050         	call	_ReloadCiag	;wreg free
  3086                           
  3087                           ;main.c: 206: if(M._RUSZ_CIAG) RuszCiag();
  3088  004A94  0100               	movlb	0	; () banked
  3089  004A96  BF70               	btfsc	(_M+16)& (0+255),7,b
  3090                           
  3091                           ; BSR set to: 0
  3092  004A98  EC5E  F03C         	call	_RuszCiag	;wreg free
  3093                           
  3094                           ;main.c: 207: Proba48();
  3095  004A9C  ECEF  F056         	call	_Proba48	;wreg free
  3096                           
  3097                           ;main.c: 208: if(M._RUSZ_48) Rusz48();
  3098  004AA0  0100               	movlb	0	; () banked
  3099  004AA2  B770               	btfsc	(_M+16)& (0+255),3,b
  3100                           
  3101                           ; BSR set to: 0
  3102  004AA4  EC82  F042         	call	_Rusz48	;wreg free
  3103                           
  3104                           ;main.c: 209: Proba48Z3();
  3105  004AA8  ECCF  F052         	call	_Proba48Z3	;wreg free
  3106                           
  3107                           ;main.c: 210: if(M._RUSZ_48Z3) Rusz48Z3();
  3108  004AAC  0100               	movlb	0	; () banked
  3109  004AAE  B970               	btfsc	(_M+16)& (0+255),4,b
  3110                           
  3111                           ; BSR set to: 0
  3112  004AB0  ECAA  F050         	call	_Rusz48Z3	;wreg free
  3113                           
  3114                           ;main.c: 211: if(M._BLOKUJ_3M) BlokadaL3();
  3115  004AB4  0100               	movlb	0	; () banked
  3116  004AB6  B771               	btfsc	(_M+17)& (0+255),3,b
  3117                           
  3118                           ; BSR set to: 0
  3119  004AB8  EC60  F04E         	call	_BlokadaL3	;wreg free
  3120                           
  3121                           ;main.c: 212: if(M._BLOKUJ_15S)
  3122  004ABC  0100               	movlb	0	; () banked
  3123  004ABE  B971               	btfsc	(_M+17)& (0+255),4,b
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;main.c: 213: {
  3127                           ;main.c: 214: if(!M._PRACA) Blokada15S();
  3128  004AC0  B57B               	btfsc	(_M+27)& (0+255),2,b
  3129  004AC2  D002               	goto	l36860
  3130                           
  3131                           ; BSR set to: 0
  3132  004AC4  EC48  F051         	call	_Blokada15S	;wreg free
  3133  004AC8                     l36860:
  3134                           
  3135                           ;main.c: 215: }
  3136                           ;main.c: 216: if(M._MODULUJ) Moduluj();
  3137  004AC8  0100               	movlb	0	; () banked
  3138  004ACA  BB71               	btfsc	(_M+17)& (0+255),5,b
  3139                           
  3140                           ; BSR set to: 0
  3141  004ACC  ECA8  F01C         	call	_Moduluj	;wreg free
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;main.c: 217: if(DtKNF.robg==0)
  3145  004AD0  0101               	movlb	1	; () banked
  3146  004AD2  6758               	tstfsz	(_DtKNF+14)& (0+255),b
  3147  004AD4  D78B               	goto	l603
  3148                           
  3149                           ; BSR set to: 1
  3150                           ;main.c: 218: {
  3151                           ;main.c: 219: DetekcjaPrzeplywuWG();
  3152  004AD6  ECC1  F04B         	call	_DetekcjaPrzeplywuWG	;wreg free
  3153                           
  3154                           ;main.c: 220: if(M._RUSZ_POMPE) OczekujNaPrzeplywWG();
  3155  004ADA  0100               	movlb	0	; () banked
  3156  004ADC  B571               	btfsc	(_M+17)& (0+255),2,b
  3157                           
  3158                           ; BSR set to: 0
  3159  004ADE  EC95  F04C         	call	_OczekujNaPrzeplywWG	;wreg free
  3160  004AE2  D784               	goto	l603
  3161                           tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           prodh	equ	0xFF4
  3166                           prodl	equ	0xFF3
  3167                           intcon	equ	0xFF2
  3168                           postinc0	equ	0xFEE
  3169                           wreg	equ	0xFE8
  3170                           indf1	equ	0xFE7
  3171                           postinc1	equ	0xFE6
  3172                           postdec1	equ	0xFE5
  3173                           fsr1h	equ	0xFE2
  3174                           fsr1l	equ	0xFE1
  3175                           indf2	equ	0xFDF
  3176                           postinc2	equ	0xFDE
  3177                           postdec2	equ	0xFDD
  3178                           fsr2h	equ	0xFDA
  3179                           fsr2l	equ	0xFD9
  3180                           status	equ	0xFD8
  3181                           
  3182 ;; *************** function _InitAC *****************
  3183 ;; Defined at:
  3184 ;;		line 13 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;		None               void
  3191 ;; Registers used:
  3192 ;;		wreg, status,2
  3193 ;; Tracked objects:
  3194 ;;		On entry : F/0
  3195 ;;		On exit  : F/0
  3196 ;;		Unchanged: FFFFFFF0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    4
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text1
  3213  00AE2E                     __ptext1:
  3214                           	opt stack 0
  3215  00AE2E                     __end_of_main:
  3216                           	opt stack 0
  3217  00AE2E                     _InitAC:
  3218                           	opt stack 26
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;ac.c: 14: ADIE=0;
  3222  00AE2E  9C9D               	bcf	3997,6,c	;volatile
  3223                           
  3224                           ;ac.c: 21: ACQT0=0;
  3225  00AE30  96C0               	bcf	4032,3,c	;volatile
  3226                           
  3227                           ;ac.c: 22: ACQT1=0;
  3228  00AE32  98C0               	bcf	4032,4,c	;volatile
  3229                           
  3230                           ;ac.c: 23: ACQT2=0;
  3231  00AE34  9AC0               	bcf	4032,5,c	;volatile
  3232                           
  3233                           ;ac.c: 26: ADCS0=0;
  3234  00AE36  90C0               	bcf	4032,0,c	;volatile
  3235                           
  3236                           ;ac.c: 27: ADCS1=1;
  3237  00AE38  82C0               	bsf	4032,1,c	;volatile
  3238                           
  3239                           ;ac.c: 28: ADCS2=0;
  3240  00AE3A  94C0               	bcf	4032,2,c	;volatile
  3241                           
  3242                           ;ac.c: 30: VCFG0=0;
  3243  00AE3C  98C1               	bcf	4033,4,c	;volatile
  3244                           
  3245                           ;ac.c: 31: VCFG1=0;
  3246  00AE3E  9AC1               	bcf	4033,5,c	;volatile
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;ac.c: 37: ANSEL=0b00001111;
  3250  00AE40  0E0F               	movlw	15
  3251  00AE42  6E7E               	movwf	3966,c	;volatile
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;ac.c: 38: ANSELH=0b00000000;
  3255  00AE44  6A7F               	clrf	3967,c	;volatile
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;ac.c: 40: ADFM=0;
  3259  00AE46  9EC0               	bcf	4032,7,c	;volatile
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;ac.c: 41: ADON=1;
  3263  00AE48  80C2               	bsf	4034,0,c	;volatile
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;ac.c: 42: CHS0=0;
  3267  00AE4A  94C2               	bcf	4034,2,c	;volatile
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;ac.c: 43: CHS1=0;
  3271  00AE4C  96C2               	bcf	4034,3,c	;volatile
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;ac.c: 44: CHS2=0;
  3275  00AE4E  98C2               	bcf	4034,4,c	;volatile
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;ac.c: 45: CHS3=0;
  3279  00AE50  9AC2               	bcf	4034,5,c	;volatile
  3280                           
  3281                           ; BSR set to: 0
  3282  00AE52  0012               	return	
  3283  00AE54                     __end_of_InitAC:
  3284                           	opt stack 0
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           prodh	equ	0xFF4
  3290                           prodl	equ	0xFF3
  3291                           intcon	equ	0xFF2
  3292                           postinc0	equ	0xFEE
  3293                           wreg	equ	0xFE8
  3294                           indf1	equ	0xFE7
  3295                           postinc1	equ	0xFE6
  3296                           postdec1	equ	0xFE5
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           indf2	equ	0xFDF
  3300                           postinc2	equ	0xFDE
  3301                           postdec2	equ	0xFDD
  3302                           fsr2h	equ	0xFDA
  3303                           fsr2l	equ	0xFD9
  3304                           status	equ	0xFD8
  3305                           
  3306 ;; *************** function _InitI2C *****************
  3307 ;; Defined at:
  3308 ;;		line 37 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;		None               void
  3315 ;; Registers used:
  3316 ;;		wreg, status,2
  3317 ;; Tracked objects:
  3318 ;;		On entry : F/0
  3319 ;;		On exit  : F/1
  3320 ;;		Unchanged: FFFFFFF0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;Total ram usage:        0 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    4
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text2
  3337  00AD8E                     __ptext2:
  3338                           	opt stack 0
  3339  00AD8E                     _InitI2C:
  3340                           	opt stack 26
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;i2c_s.c: 39: TRISC3=1;
  3344                           
  3345                           ; BSR set to: 0
  3346  00AD8E  8694               	bsf	3988,3,c	;volatile
  3347                           
  3348                           ;i2c_s.c: 40: TRISC4=1;
  3349  00AD90  8894               	bsf	3988,4,c	;volatile
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;i2c_s.c: 43: SSPADD=0b11001100;
  3353  00AD92  0ECC               	movlw	204
  3354  00AD94  6EC8               	movwf	4040,c	;volatile
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;i2c_s.c: 46: SSPM0=0;
  3358  00AD96  90C6               	bcf	4038,0,c	;volatile
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;i2c_s.c: 47: SSPM1=1;
  3362  00AD98  82C6               	bsf	4038,1,c	;volatile
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;i2c_s.c: 48: SSPM2=1;
  3366  00AD9A  84C6               	bsf	4038,2,c	;volatile
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;i2c_s.c: 49: SSPM3=0;
  3370  00AD9C  96C6               	bcf	4038,3,c	;volatile
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;i2c_s.c: 50: SSPEN=1;
  3374  00AD9E  8AC6               	bsf	4038,5,c	;volatile
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;i2c_s.c: 51: CKP=1;
  3378  00ADA0  88C6               	bsf	4038,4,c	;volatile
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;i2c_s.c: 54: SMP=1;
  3382  00ADA2  8EC7               	bsf	4039,7,c	;volatile
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;i2c_s.c: 55: CKE=0;
  3386  00ADA4  9CC7               	bcf	4039,6,c	;volatile
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;i2c_s.c: 58: SSPIE=1;
  3390  00ADA6  869D               	bsf	3997,3,c	;volatile
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;i2c_s.c: 63: SSPIP=1;
  3394  00ADA8  869F               	bsf	3999,3,c	;volatile
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;i2c_s.c: 65: BufI2C.indeks=0;
  3398  00ADAA  0102               	movlb	2	; () banked
  3399  00ADAC  6BD7               	clrf	_BufI2C& (0+255),b
  3400                           
  3401                           ; BSR set to: 2
  3402                           ;i2c_s.c: 66: DtI2C.error=0;
  3403  00ADAE  0101               	movlb	1	; () banked
  3404  00ADB0  6BDE               	clrf	(_DtI2C+1)& (0+255),b
  3405                           
  3406                           ; BSR set to: 1
  3407                           ;i2c_s.c: 67: DtI2C.krok=0;
  3408  00ADB2  91DD               	bcf	_DtI2C& (0+255),0,b
  3409                           
  3410                           ; BSR set to: 1
  3411  00ADB4  0012               	return	
  3412  00ADB6                     __end_of_InitI2C:
  3413                           	opt stack 0
  3414                           tblptru	equ	0xFF8
  3415                           tblptrh	equ	0xFF7
  3416                           tblptrl	equ	0xFF6
  3417                           tablat	equ	0xFF5
  3418                           prodh	equ	0xFF4
  3419                           prodl	equ	0xFF3
  3420                           intcon	equ	0xFF2
  3421                           postinc0	equ	0xFEE
  3422                           wreg	equ	0xFE8
  3423                           indf1	equ	0xFE7
  3424                           postinc1	equ	0xFE6
  3425                           postdec1	equ	0xFE5
  3426                           fsr1h	equ	0xFE2
  3427                           fsr1l	equ	0xFE1
  3428                           indf2	equ	0xFDF
  3429                           postinc2	equ	0xFDE
  3430                           postdec2	equ	0xFDD
  3431                           fsr2h	equ	0xFDA
  3432                           fsr2l	equ	0xFD9
  3433                           status	equ	0xFD8
  3434                           
  3435 ;; *************** function _InitOsc *****************
  3436 ;; Defined at:
  3437 ;;		line 9 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\osc.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;		None               void
  3444 ;; Registers used:
  3445 ;;		None
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: FFFFFFFF/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    4
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_main
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text3
  3466  00B4DA                     __ptext3:
  3467                           	opt stack 0
  3468  00B4DA                     _InitOsc:
  3469                           	opt stack 26
  3470                           
  3471                           ;osc.c: 10: IRCF2=1;
  3472                           
  3473                           ; BSR set to: 1
  3474  00B4DA  8CD3               	bsf	4051,6,c	;volatile
  3475                           
  3476                           ;osc.c: 11: IRCF1=1;
  3477  00B4DC  8AD3               	bsf	4051,5,c	;volatile
  3478                           
  3479                           ;osc.c: 12: IRCF0=0;
  3480  00B4DE  98D3               	bcf	4051,4,c	;volatile
  3481                           
  3482                           ;osc.c: 13: SCS1=0;
  3483  00B4E0  92D3               	bcf	4051,1,c	;volatile
  3484                           
  3485                           ;osc.c: 14: SCS0=0;
  3486  00B4E2  90D3               	bcf	4051,0,c	;volatile
  3487                           
  3488                           ;osc.c: 22: PLLEN=1;
  3489  00B4E4  8C9B               	bsf	3995,6,c	;volatile
  3490  00B4E6  0012               	return	
  3491  00B4E8                     __end_of_InitOsc:
  3492                           	opt stack 0
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           prodh	equ	0xFF4
  3498                           prodl	equ	0xFF3
  3499                           intcon	equ	0xFF2
  3500                           postinc0	equ	0xFEE
  3501                           wreg	equ	0xFE8
  3502                           indf1	equ	0xFE7
  3503                           postinc1	equ	0xFE6
  3504                           postdec1	equ	0xFE5
  3505                           fsr1h	equ	0xFE2
  3506                           fsr1l	equ	0xFE1
  3507                           indf2	equ	0xFDF
  3508                           postinc2	equ	0xFDE
  3509                           postdec2	equ	0xFDD
  3510                           fsr2h	equ	0xFDA
  3511                           fsr2l	equ	0xFD9
  3512                           status	equ	0xFD8
  3513                           
  3514 ;; *************** function _InitGlobal *****************
  3515 ;; Defined at:
  3516 ;;		line 3815 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;		None
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;		None
  3521 ;; Return value:  Size  Location     Type
  3522 ;;		None               void
  3523 ;; Registers used:
  3524 ;;		None
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: FFFFFFFF/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;Total ram usage:        0 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    4
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_main
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text4
  3545  00B622                     __ptext4:
  3546                           	opt stack 0
  3547  00B622                     _InitGlobal:
  3548                           	opt stack 26
  3549                           
  3550                           ;main.c: 3817: IPEN=1;
  3551  00B622  8ED0               	bsf	4048,7,c	;volatile
  3552                           
  3553                           ;main.c: 3819: GIEH=1;
  3554  00B624  8EF2               	bsf	intcon,7,c	;volatile
  3555                           
  3556                           ;main.c: 3820: GIEL=1;
  3557  00B626  8CF2               	bsf	intcon,6,c	;volatile
  3558  00B628  0012               	return	
  3559  00B62A                     __end_of_InitGlobal:
  3560                           	opt stack 0
  3561                           tblptru	equ	0xFF8
  3562                           tblptrh	equ	0xFF7
  3563                           tblptrl	equ	0xFF6
  3564                           tablat	equ	0xFF5
  3565                           prodh	equ	0xFF4
  3566                           prodl	equ	0xFF3
  3567                           intcon	equ	0xFF2
  3568                           postinc0	equ	0xFEE
  3569                           wreg	equ	0xFE8
  3570                           indf1	equ	0xFE7
  3571                           postinc1	equ	0xFE6
  3572                           postdec1	equ	0xFE5
  3573                           fsr1h	equ	0xFE2
  3574                           fsr1l	equ	0xFE1
  3575                           indf2	equ	0xFDF
  3576                           postinc2	equ	0xFDE
  3577                           postdec2	equ	0xFDD
  3578                           fsr2h	equ	0xFDA
  3579                           fsr2l	equ	0xFD9
  3580                           status	equ	0xFD8
  3581                           
  3582 ;; *************** function _InitTimer1 *****************
  3583 ;; Defined at:
  3584 ;;		line 17 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\timer1.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;		None               void
  3591 ;; Registers used:
  3592 ;;		wreg, status,2
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: FFFFFFFF/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    4
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text5
  3613  00B240                     __ptext5:
  3614                           	opt stack 0
  3615  00B240                     _InitTimer1:
  3616                           	opt stack 26
  3617                           
  3618                           ;timer1.c: 20: TMR1H=(unsigned char)(RldT1>>8);
  3619  00B240  0E63               	movlw	99
  3620  00B242  6ECF               	movwf	4047,c	;volatile
  3621                           
  3622                           ;timer1.c: 21: TMR1L=(unsigned char)(RldT1&0xFF);
  3623  00B244  0EBF               	movlw	191
  3624  00B246  6ECE               	movwf	4046,c	;volatile
  3625                           
  3626                           ;timer1.c: 24: TMR1IF=0;
  3627  00B248  909E               	bcf	3998,0,c	;volatile
  3628                           
  3629                           ;timer1.c: 25: TMR1IE=1;
  3630  00B24A  809D               	bsf	3997,0,c	;volatile
  3631                           
  3632                           ;timer1.c: 26: TMR1IP=1;
  3633  00B24C  809F               	bsf	3999,0,c	;volatile
  3634                           
  3635                           ;timer1.c: 29: T1RD16=1;
  3636  00B24E  8ECD               	bsf	4045,7,c	;volatile
  3637                           
  3638                           ;timer1.c: 37: T1CKPS1=0;
  3639  00B250  9ACD               	bcf	4045,5,c	;volatile
  3640                           
  3641                           ;timer1.c: 38: T1CKPS0=1;
  3642  00B252  88CD               	bsf	4045,4,c	;volatile
  3643                           
  3644                           ;timer1.c: 48: TMR1CS=0;
  3645  00B254  92CD               	bcf	4045,1,c	;volatile
  3646                           
  3647                           ;timer1.c: 49: TMR1ON=1;
  3648  00B256  80CD               	bsf	4045,0,c	;volatile
  3649  00B258  0CBF               	retlw	191
  3650  00B25A                     __end_of_InitTimer1:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           prodh	equ	0xFF4
  3657                           prodl	equ	0xFF3
  3658                           intcon	equ	0xFF2
  3659                           postinc0	equ	0xFEE
  3660                           wreg	equ	0xFE8
  3661                           indf1	equ	0xFE7
  3662                           postinc1	equ	0xFE6
  3663                           postdec1	equ	0xFE5
  3664                           fsr1h	equ	0xFE2
  3665                           fsr1l	equ	0xFE1
  3666                           indf2	equ	0xFDF
  3667                           postinc2	equ	0xFDE
  3668                           postdec2	equ	0xFDD
  3669                           fsr2h	equ	0xFDA
  3670                           fsr2l	equ	0xFD9
  3671                           status	equ	0xFD8
  3672                           
  3673 ;; *************** function _InitPort *****************
  3674 ;; Defined at:
  3675 ;;		line 231 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;		None               void
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : F/0
  3687 ;;		Unchanged: FFFFFFF0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;Total ram usage:        0 bytes
  3694 ;; Hardware stack levels used:    1
  3695 ;; Hardware stack levels required when called:    5
  3696 ;; This function calls:
  3697 ;;		_RefStan
  3698 ;;		_FrsStan
  3699 ;; This function is called by:
  3700 ;;		_main
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text6
  3705  00B062                     __ptext6:
  3706                           	opt stack 0
  3707  00B062                     _InitPort:
  3708                           	opt stack 25
  3709                           
  3710                           ;port.c: 244: PORTA=0b00000000;
  3711  00B062  6A80               	clrf	3968,c	;volatile
  3712                           
  3713                           ;port.c: 245: TRISA=0b11111111;
  3714  00B064  6892               	setf	3986,c	;volatile
  3715                           
  3716                           ;port.c: 246: PORTB=0b00000000;
  3717  00B066  6A81               	clrf	3969,c	;volatile
  3718                           
  3719                           ;port.c: 247: TRISB=0b11111111;
  3720  00B068  6893               	setf	3987,c	;volatile
  3721                           
  3722                           ;port.c: 248: PORTC=0b00000000;
  3723  00B06A  6A82               	clrf	3970,c	;volatile
  3724                           
  3725                           ;port.c: 249: TRISC=0b11111001;
  3726  00B06C  0EF9               	movlw	249
  3727  00B06E  6E94               	movwf	3988,c	;volatile
  3728                           
  3729                           ;port.c: 250: PORTD=0b00000000;
  3730  00B070  6A83               	clrf	3971,c	;volatile
  3731                           
  3732                           ;port.c: 251: TRISD=0b00110000;
  3733  00B072  0E30               	movlw	48
  3734  00B074  6E95               	movwf	3989,c	;volatile
  3735                           
  3736                           ;port.c: 252: PORTE=0b00000000;
  3737  00B076  6A84               	clrf	3972,c	;volatile
  3738                           
  3739                           ;port.c: 253: TRISE=(TRISE&0b11111000)|(0b11111000&0b00000111);
  3740  00B078  0EF8               	movlw	248
  3741  00B07A  1696               	andwf	3990,f,c	;volatile
  3742                           
  3743                           ;port.c: 256: RefStan();
  3744  00B07C  ECD9  F035         	call	_RefStan	;wreg free
  3745                           
  3746                           ;port.c: 257: FrsStan();
  3747  00B080  EF70  F038         	goto	_FrsStan	;wreg free
  3748  00B084                     __end_of_InitPort:
  3749                           	opt stack 0
  3750                           tblptru	equ	0xFF8
  3751                           tblptrh	equ	0xFF7
  3752                           tblptrl	equ	0xFF6
  3753                           tablat	equ	0xFF5
  3754                           prodh	equ	0xFF4
  3755                           prodl	equ	0xFF3
  3756                           intcon	equ	0xFF2
  3757                           postinc0	equ	0xFEE
  3758                           wreg	equ	0xFE8
  3759                           indf1	equ	0xFE7
  3760                           postinc1	equ	0xFE6
  3761                           postdec1	equ	0xFE5
  3762                           fsr1h	equ	0xFE2
  3763                           fsr1l	equ	0xFE1
  3764                           indf2	equ	0xFDF
  3765                           postinc2	equ	0xFDE
  3766                           postdec2	equ	0xFDD
  3767                           fsr2h	equ	0xFDA
  3768                           fsr2l	equ	0xFD9
  3769                           status	equ	0xFD8
  3770                           
  3771 ;; *************** function _InitWsw *****************
  3772 ;; Defined at:
  3773 ;;		line 50 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  i               1   36[COMRAM] unsigned char 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;		None               void
  3780 ;; Registers used:
  3781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : F/0
  3784 ;;		On exit  : F/2
  3785 ;;		Unchanged: FFFFFFF0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;Total ram usage:        1 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    5
  3794 ;; This function calls:
  3795 ;;		_SetStatus
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text7
  3802  008B22                     __ptext7:
  3803                           	opt stack 0
  3804  008B22                     _InitWsw:
  3805                           	opt stack 25
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;wsw.c: 51: unsigned char i;
  3809                           ;wsw.c: 54: PORTEbits.RE1=0;
  3810                           
  3811                           ; BSR set to: 0
  3812  008B22  9284               	bcf	3972,1,c	;volatile
  3813                           
  3814                           ;wsw.c: 55: PORTEbits.RE2=0;
  3815  008B24  9484               	bcf	3972,2,c	;volatile
  3816                           
  3817                           ;wsw.c: 56: PORTEbits.RE0=0;
  3818  008B26  9084               	bcf	3972,0,c	;volatile
  3819                           
  3820                           ;wsw.c: 58: wbty[0]=0xff;
  3821  008B28  0101               	movlb	1	; () banked
  3822  008B2A  6992               	setf	_wbty& (0+255),b
  3823                           
  3824                           ;wsw.c: 59: wbty[1]=0xff;
  3825  008B2C  6993               	setf	(_wbty+1)& (0+255),b
  3826                           
  3827                           ;wsw.c: 60: wsdid=0x00;
  3828  008B2E  6A40               	clrf	_wsdid,c
  3829                           
  3830                           ;wsw.c: 69: for(i=0;i<10-1;i++) PWD[i].St.focus=0;
  3831  008B30  6A25               	clrf	InitWsw@i,c
  3832  008B32                     l36878:
  3833  008B32  5025               	movf	InitWsw@i,w,c
  3834  008B34  0D04               	mullw	4
  3835  008B36  0102               	movlb	2	; () banked
  3836  008B38  EC51  F050         	call	PL156	;call to abstracted procedure
  3837  008B3C  0EFE               	movlw	-2
  3838  008B3E  16DF               	andwf	223,f,c
  3839                           
  3840                           ; BSR set to: 2
  3841  008B40  2A25               	incf	InitWsw@i,f,c
  3842                           
  3843                           ; BSR set to: 2
  3844  008B42  0E08               	movlw	8
  3845  008B44  6425               	cpfsgt	InitWsw@i,c
  3846  008B46  D7F5               	goto	l36878
  3847                           
  3848                           ; BSR set to: 2
  3849                           ;wsw.c: 76: SetStatus(&PWD[3],0b0100000000000000,0b1111111111111111);
  3850  008B48  0E02               	movlw	high (_PWD+12)
  3851  008B4A  6E1F               	movwf	?_SetStatus+1,c
  3852  008B4C  0E59               	movlw	low (_PWD+12)
  3853  008B4E  D831               	call	PL78	;call to abstracted procedure
  3854  008B50  ECF3  F034         	call	_SetStatus	;wreg free
  3855                           
  3856                           ;wsw.c: 77: SetStatus(&PWD[4],0b0100000000000000,0b1111111111111111);
  3857  008B54  0E02               	movlw	high (_PWD+16)
  3858  008B56  6E1F               	movwf	?_SetStatus+1,c
  3859  008B58  0E5D               	movlw	low (_PWD+16)
  3860  008B5A  D82B               	call	PL78	;call to abstracted procedure
  3861  008B5C  ECF3  F034         	call	_SetStatus	;wreg free
  3862                           
  3863                           ;wsw.c: 78: SetStatus(&PWD[5],0b0010000000000000,0b1111111111111111);
  3864  008B60  0E02               	movlw	high (_PWD+20)
  3865  008B62  6E1F               	movwf	?_SetStatus+1,c
  3866  008B64  0E61               	movlw	low (_PWD+20)
  3867  008B66  6E1E               	movwf	?_SetStatus,c
  3868  008B68  0E20               	movlw	32
  3869  008B6A  6E21               	movwf	?_SetStatus+3,c
  3870  008B6C  6A20               	clrf	?_SetStatus+2,c
  3871  008B6E  0EFF               	movlw	255
  3872  008B70  6823               	setf	?_SetStatus+5,c
  3873  008B72  6822               	setf	?_SetStatus+4,c
  3874  008B74  ECF3  F034         	call	_SetStatus	;wreg free
  3875                           
  3876                           ;wsw.c: 79: SetStatus(&PWD[6],0b0100000000000000|0b0000010000000000,0b1111111111111111);
  3877  008B78  0E02               	movlw	high (_PWD+24)
  3878  008B7A  6E1F               	movwf	?_SetStatus+1,c
  3879  008B7C  0E65               	movlw	low (_PWD+24)
  3880  008B7E  6E1E               	movwf	?_SetStatus,c
  3881  008B80  0E44               	movlw	68
  3882  008B82  6E21               	movwf	?_SetStatus+3,c
  3883  008B84  6A20               	clrf	?_SetStatus+2,c
  3884  008B86  0EFF               	movlw	255
  3885  008B88  6823               	setf	?_SetStatus+5,c
  3886  008B8A  6822               	setf	?_SetStatus+4,c
  3887  008B8C  ECF3  F034         	call	_SetStatus	;wreg free
  3888                           
  3889                           ;wsw.c: 80: SetStatus(&PWD[7],0b0100000000000000,0b1111111111111111);
  3890  008B90  0E02               	movlw	high (_PWD+28)
  3891  008B92  6E1F               	movwf	?_SetStatus+1,c
  3892  008B94  0E69               	movlw	low (_PWD+28)
  3893  008B96  D80D               	call	PL78	;call to abstracted procedure
  3894  008B98  ECF3  F034         	call	_SetStatus	;wreg free
  3895                           
  3896                           ;wsw.c: 81: SetStatus(&PWD[8],0b0100000000000000,0b1111111111111111);
  3897  008B9C  0E02               	movlw	high (_PWD+32)
  3898  008B9E  6E1F               	movwf	?_SetStatus+1,c
  3899  008BA0  0E6D               	movlw	low (_PWD+32)
  3900  008BA2  6E1E               	movwf	?_SetStatus,c
  3901  008BA4  0E40               	movlw	64
  3902  008BA6  6E21               	movwf	?_SetStatus+3,c
  3903  008BA8  6A20               	clrf	?_SetStatus+2,c
  3904  008BAA  6823               	setf	?_SetStatus+5,c
  3905  008BAC  6822               	setf	?_SetStatus+4,c
  3906  008BAE  EFF3  F034         	goto	_SetStatus	;wreg free
  3907  008BB2                     __end_of_InitWsw:
  3908                           	opt stack 0
  3909  008BB2                     PL78:
  3910                           	opt stack 25
  3911  008BB2  6E1E               	movwf	?_SetStatus,c
  3912  008BB4  0E40               	movlw	64
  3913  008BB6  6E21               	movwf	?_SetStatus+3,c
  3914  008BB8  6A20               	clrf	?_SetStatus+2,c
  3915  008BBA  6823               	setf	?_SetStatus+5,c
  3916  008BBC  6822               	setf	?_SetStatus+4,c
  3917  008BBE  0CFF               	retlw	255
  3918  008BC0                     __end_ofPL78:
  3919                           	opt stack 0
  3920                           tblptru	equ	0xFF8
  3921                           tblptrh	equ	0xFF7
  3922                           tblptrl	equ	0xFF6
  3923                           tablat	equ	0xFF5
  3924                           prodh	equ	0xFF4
  3925                           prodl	equ	0xFF3
  3926                           intcon	equ	0xFF2
  3927                           postinc0	equ	0xFEE
  3928                           wreg	equ	0xFE8
  3929                           indf1	equ	0xFE7
  3930                           postinc1	equ	0xFE6
  3931                           postdec1	equ	0xFE5
  3932                           fsr1h	equ	0xFE2
  3933                           fsr1l	equ	0xFE1
  3934                           indf2	equ	0xFDF
  3935                           postinc2	equ	0xFDE
  3936                           postdec2	equ	0xFDD
  3937                           fsr2h	equ	0xFDA
  3938                           fsr2l	equ	0xFD9
  3939                           status	equ	0xFD8
  3940                           
  3941 ;; *************** function _InitPWM *****************
  3942 ;; Defined at:
  3943 ;;		line 12 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;		None               void
  3950 ;; Registers used:
  3951 ;;		wreg, status,2
  3952 ;; Tracked objects:
  3953 ;;		On entry : F/2
  3954 ;;		On exit  : F/0
  3955 ;;		Unchanged: FFFFFFF0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    4
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_main
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text8
  3972  00A7E8                     __ptext8:
  3973                           	opt stack 0
  3974  00A7E8                     _InitPWM:
  3975                           	opt stack 26
  3976                           
  3977                           ; BSR set to: 2
  3978                           ;pwm.c: 14: CCP1CON=0;
  3979                           
  3980                           ; BSR set to: 2
  3981  00A7E8  6ABD               	clrf	4029,c	;volatile
  3982                           
  3983                           ;pwm.c: 15: CCPR1L=0;
  3984  00A7EA  6ABE               	clrf	4030,c	;volatile
  3985                           
  3986                           ;pwm.c: 16: CCPR1H=0;
  3987  00A7EC  6ABF               	clrf	4031,c	;volatile
  3988                           
  3989                           ; BSR set to: 2
  3990                           ;pwm.c: 17: CCP1CON=0b00001100;
  3991  00A7EE  0E0C               	movlw	12
  3992  00A7F0  6EBD               	movwf	4029,c	;volatile
  3993                           
  3994                           ; BSR set to: 2
  3995                           ;pwm.c: 19: CCP2CON=0;
  3996  00A7F2  6ABA               	clrf	4026,c	;volatile
  3997                           
  3998                           ; BSR set to: 2
  3999                           ;pwm.c: 20: CCPR2L=0;
  4000  00A7F4  6ABB               	clrf	4027,c	;volatile
  4001                           
  4002                           ; BSR set to: 2
  4003                           ;pwm.c: 21: CCPR2H=0;
  4004  00A7F6  6ABC               	clrf	4028,c	;volatile
  4005                           
  4006                           ;pwm.c: 22: CCP2CON=0b00001100;
  4007  00A7F8  0E0C               	movlw	12
  4008  00A7FA  6EBA               	movwf	4026,c	;volatile
  4009                           
  4010                           ; BSR set to: 2
  4011                           ;pwm.c: 24: TMR2=0;
  4012  00A7FC  6ACC               	clrf	4044,c	;volatile
  4013                           
  4014                           ;pwm.c: 25: T2CON=0b00000010;
  4015  00A7FE  0E02               	movlw	2
  4016  00A800  6ECA               	movwf	4042,c	;volatile
  4017                           
  4018                           ;pwm.c: 26: PR2=0x7C;
  4019  00A802  0E7C               	movlw	124
  4020  00A804  6ECB               	movwf	4043,c	;volatile
  4021                           
  4022                           ; BSR set to: 2
  4023                           ;pwm.c: 27: TMR2IE=1;
  4024  00A806  829D               	bsf	3997,1,c	;volatile
  4025                           
  4026                           ; BSR set to: 2
  4027                           ;pwm.c: 28: TMR2ON=1;
  4028  00A808  84CA               	bsf	4042,2,c	;volatile
  4029                           
  4030                           ;pwm.c: 40: PWM.HIPWM=(0x7C+1)<<1;
  4031  00A80A  0EFA               	movlw	250
  4032  00A80C  0100               	movlb	0	; () banked
  4033  00A80E  6F9B               	movwf	(_PWM+8)& (0+255),b	;volatile
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;pwm.c: 53: PWM.BufPWM=0;
  4037  00A810  6B94               	clrf	(_PWM+1)& (0+255),b	;volatile
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;pwm.c: 54: PWM.NewPWM=0;
  4041  00A812  6B97               	clrf	(_PWM+4)& (0+255),b	;volatile
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;pwm.c: 55: PWM.BufOSC=0;
  4045  00A814  6B95               	clrf	(_PWM+2)& (0+255),b	;volatile
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;pwm.c: 56: PWM.NewOSC=0;
  4049  00A816  6B96               	clrf	(_PWM+3)& (0+255),b	;volatile
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;pwm.c: 57: PWM.BufPWM2=0;
  4053  00A818  6B99               	clrf	(_PWM+6)& (0+255),b	;volatile
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;pwm.c: 58: PWM.NewPWM2=0;
  4057  00A81A  6B9A               	clrf	(_PWM+7)& (0+255),b	;volatile
  4058                           
  4059                           ; BSR set to: 0
  4060  00A81C  0012               	return	
  4061  00A81E                     __end_of_InitPWM:
  4062                           	opt stack 0
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           prodh	equ	0xFF4
  4068                           prodl	equ	0xFF3
  4069                           intcon	equ	0xFF2
  4070                           postinc0	equ	0xFEE
  4071                           wreg	equ	0xFE8
  4072                           indf1	equ	0xFE7
  4073                           postinc1	equ	0xFE6
  4074                           postdec1	equ	0xFE5
  4075                           fsr1h	equ	0xFE2
  4076                           fsr1l	equ	0xFE1
  4077                           indf2	equ	0xFDF
  4078                           postinc2	equ	0xFDE
  4079                           postdec2	equ	0xFDD
  4080                           fsr2h	equ	0xFDA
  4081                           fsr2l	equ	0xFD9
  4082                           status	equ	0xFD8
  4083                           
  4084 ;; *************** function _InitUart *****************
  4085 ;; Defined at:
  4086 ;;		line 21 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;		None               void
  4093 ;; Registers used:
  4094 ;;		wreg, status,2
  4095 ;; Tracked objects:
  4096 ;;		On entry : F/1
  4097 ;;		On exit  : F/1
  4098 ;;		Unchanged: FFFFFFF0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    4
  4107 ;; This function calls:
  4108 ;;		Nothing
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text9
  4115  00AA9C                     __ptext9:
  4116                           	opt stack 0
  4117  00AA9C                     _InitUart:
  4118                           	opt stack 26
  4119                           
  4120                           ; BSR set to: 1
  4121                           ;uart9b.c: 26: CSRC=0;
  4122                           
  4123                           ; BSR set to: 0
  4124  00AA9C  9EAC               	bcf	4012,7,c	;volatile
  4125                           
  4126                           ;uart9b.c: 27: RX9=1;
  4127  00AA9E  8CAB               	bsf	4011,6,c	;volatile
  4128                           
  4129                           ; BSR set to: 1
  4130                           ;uart9b.c: 28: SPBRG=((8*4*1000000/2400)/64)-1;
  4131  00AAA0  0ECF               	movlw	207
  4132  00AAA2  6EAF               	movwf	4015,c	;volatile
  4133                           
  4134                           ; BSR set to: 1
  4135                           ;uart9b.c: 29: SYNC=0;
  4136  00AAA4  98AC               	bcf	4012,4,c	;volatile
  4137                           
  4138                           ; BSR set to: 1
  4139                           ;uart9b.c: 30: BRGH=0;
  4140  00AAA6  94AC               	bcf	4012,2,c	;volatile
  4141                           
  4142                           ; BSR set to: 1
  4143                           ;uart9b.c: 31: ADDEN=1;
  4144  00AAA8  86AB               	bsf	4011,3,c	;volatile
  4145                           
  4146                           ; BSR set to: 1
  4147                           ;uart9b.c: 32: TX9=1;
  4148  00AAAA  8CAC               	bsf	4012,6,c	;volatile
  4149                           
  4150                           ; BSR set to: 1
  4151                           ;uart9b.c: 33: RCIP=1;
  4152  00AAAC  8A9F               	bsf	3999,5,c	;volatile
  4153                           
  4154                           ; BSR set to: 1
  4155                           ;uart9b.c: 34: RCIE=1;
  4156  00AAAE  8A9D               	bsf	3997,5,c	;volatile
  4157                           
  4158                           ; BSR set to: 1
  4159                           ;uart9b.c: 35: TXIP=1;
  4160  00AAB0  889F               	bsf	3999,4,c	;volatile
  4161                           
  4162                           ; BSR set to: 1
  4163                           ;uart9b.c: 36: TXEN=1;
  4164  00AAB2  8AAC               	bsf	4012,5,c	;volatile
  4165                           
  4166                           ; BSR set to: 1
  4167                           ;uart9b.c: 37: SPEN=1;
  4168  00AAB4  8EAB               	bsf	4011,7,c	;volatile
  4169                           
  4170                           ; BSR set to: 1
  4171                           ;uart9b.c: 38: CREN=1;
  4172  00AAB6  88AB               	bsf	4011,4,c	;volatile
  4173                           
  4174                           ; BSR set to: 1
  4175                           ;uart9b.c: 41: UADt.RData=0;
  4176  00AAB8  917C               	bcf	_UADt& (0+255),0,b
  4177                           
  4178                           ; BSR set to: 1
  4179                           ;uart9b.c: 42: UADt.RErrREC=0;
  4180  00AABA  957C               	bcf	_UADt& (0+255),2,b
  4181                           
  4182                           ; BSR set to: 1
  4183                           ;uart9b.c: 43: UADt.RErrBUF=0;
  4184  00AABC  977C               	bcf	_UADt& (0+255),3,b
  4185                           
  4186                           ; BSR set to: 1
  4187                           ;uart9b.c: 45: UADt.TData=0;
  4188  00AABE  997C               	bcf	_UADt& (0+255),4,b
  4189                           
  4190                           ; BSR set to: 1
  4191                           ;uart9b.c: 46: UADt.RNData=0;
  4192  00AAC0  6B7E               	clrf	(_UADt+2)& (0+255),b
  4193                           
  4194                           ; BSR set to: 1
  4195                           ;uart9b.c: 47: UADt.TNData=0;
  4196  00AAC2  6B7F               	clrf	(_UADt+3)& (0+255),b
  4197                           
  4198                           ; BSR set to: 1
  4199                           ;uart9b.c: 49: UADt.REnd=0;
  4200  00AAC4  937C               	bcf	_UADt& (0+255),1,b
  4201                           
  4202                           ; BSR set to: 1
  4203                           ;uart9b.c: 50: UADt.TEnd=0;
  4204  00AAC6  9B7C               	bcf	_UADt& (0+255),5,b
  4205                           
  4206                           ; BSR set to: 1
  4207                           ;uart9b.c: 51: UADt.indeks=0;
  4208  00AAC8  6B7D               	clrf	(_UADt+1)& (0+255),b
  4209                           
  4210                           ; BSR set to: 1
  4211                           ;uart9b.c: 53: TXIE=0;
  4212  00AACA  989D               	bcf	3997,4,c	;volatile
  4213                           
  4214                           ; BSR set to: 1
  4215  00AACC  0012               	return	
  4216  00AACE                     __end_of_InitUart:
  4217                           	opt stack 0
  4218                           tblptru	equ	0xFF8
  4219                           tblptrh	equ	0xFF7
  4220                           tblptrl	equ	0xFF6
  4221                           tablat	equ	0xFF5
  4222                           prodh	equ	0xFF4
  4223                           prodl	equ	0xFF3
  4224                           intcon	equ	0xFF2
  4225                           postinc0	equ	0xFEE
  4226                           wreg	equ	0xFE8
  4227                           indf1	equ	0xFE7
  4228                           postinc1	equ	0xFE6
  4229                           postdec1	equ	0xFE5
  4230                           fsr1h	equ	0xFE2
  4231                           fsr1l	equ	0xFE1
  4232                           indf2	equ	0xFDF
  4233                           postinc2	equ	0xFDE
  4234                           postdec2	equ	0xFDD
  4235                           fsr2h	equ	0xFDA
  4236                           fsr2l	equ	0xFD9
  4237                           status	equ	0xFD8
  4238                           
  4239 ;; *************** function _InitDataPmr *****************
  4240 ;; Defined at:
  4241 ;;		line 38 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;		None               void
  4248 ;; Registers used:
  4249 ;;		None
  4250 ;; Tracked objects:
  4251 ;;		On entry : F/1
  4252 ;;		On exit  : F/0
  4253 ;;		Unchanged: FFFFFFF0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;Total ram usage:        0 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:    4
  4262 ;; This function calls:
  4263 ;;		Nothing
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text10
  4270  00A81E                     __ptext10:
  4271                           	opt stack 0
  4272  00A81E                     _InitDataPmr:
  4273                           	opt stack 26
  4274                           
  4275                           ; BSR set to: 1
  4276                           ;pomiar.c: 39: DtCO._err_CO=0;
  4277                           
  4278                           ; BSR set to: 1
  4279  00A81E  0100               	movlb	0	; () banked
  4280  00A820  91E4               	bcf	_DtCO& (0+255),0,b
  4281                           
  4282                           ;pomiar.c: 40: DtCO._su_CO=0;
  4283  00A822  93E4               	bcf	_DtCO& (0+255),1,b
  4284                           
  4285                           ;pomiar.c: 41: DtCO._ad_CO=0;
  4286  00A824  95E4               	bcf	_DtCO& (0+255),2,b
  4287                           
  4288                           ;pomiar.c: 42: DtCO._su_SRW_CO=0;
  4289  00A826  97E4               	bcf	_DtCO& (0+255),3,b
  4290                           
  4291                           ;pomiar.c: 43: DtCO._ad_SRW_CO=0;
  4292  00A828  99E4               	bcf	_DtCO& (0+255),4,b
  4293                           
  4294                           ;pomiar.c: 44: DtCO._cold_CO=0;
  4295  00A82A  95E5               	bcf	(_DtCO+1)& (0+255),2,b
  4296                           
  4297                           ;pomiar.c: 45: DtCO._hot_CO=0;
  4298  00A82C  97E5               	bcf	(_DtCO+1)& (0+255),3,b
  4299                           
  4300                           ;pomiar.c: 46: DtCO._on_DZ_CO=0;
  4301  00A82E  9BE4               	bcf	_DtCO& (0+255),5,b
  4302                           
  4303                           ;pomiar.c: 47: DtCO._su_DZ_CO=0;
  4304  00A830  9DE4               	bcf	_DtCO& (0+255),6,b
  4305                           
  4306                           ;pomiar.c: 48: DtCO._ad_DZ_CO=0;
  4307  00A832  9FE4               	bcf	_DtCO& (0+255),7,b
  4308                           
  4309                           ;pomiar.c: 49: DtCO._ptwp_CO=0;
  4310  00A834  91E5               	bcf	(_DtCO+1)& (0+255),0,b
  4311                           
  4312                           ;pomiar.c: 50: DtCO._pz_CO=0;
  4313  00A836  93E5               	bcf	(_DtCO+1)& (0+255),1,b
  4314                           
  4315                           ;pomiar.c: 51: DtCO.indCO=0;
  4316  00A838  6BEE               	clrf	(_DtCO+10)& (0+255),b
  4317                           
  4318                           ;pomiar.c: 53: DtCW._err_CW=0;
  4319  00A83A  91CF               	bcf	_DtCW& (0+255),0,b
  4320                           
  4321                           ;pomiar.c: 54: DtCW._su_CW=0;
  4322  00A83C  93CF               	bcf	_DtCW& (0+255),1,b
  4323                           
  4324                           ;pomiar.c: 55: DtCW._ad_CW=0;
  4325  00A83E  95CF               	bcf	_DtCW& (0+255),2,b
  4326                           
  4327                           ;pomiar.c: 56: DtCW._on_DZ_CW=0;
  4328  00A840  99CF               	bcf	_DtCW& (0+255),4,b
  4329                           
  4330                           ;pomiar.c: 57: DtCW._su_DZ_CW=0;
  4331  00A842  9BCF               	bcf	_DtCW& (0+255),5,b
  4332                           
  4333                           ;pomiar.c: 58: DtCW._ad_DZ_CW=0;
  4334  00A844  9DCF               	bcf	_DtCW& (0+255),6,b
  4335                           
  4336                           ;pomiar.c: 59: DtCW.indCW=0;
  4337  00A846  6BD9               	clrf	(_DtCW+10)& (0+255),b
  4338                           
  4339                           ;pomiar.c: 61: DtCS._hi=0;
  4340  00A848  9031               	bcf	_DtCS,0,c
  4341                           
  4342                           ;pomiar.c: 62: DtCS._lo=0;
  4343  00A84A  9231               	bcf	_DtCS,1,c
  4344                           
  4345                           ;pomiar.c: 63: DtCS._no=0;
  4346  00A84C  9431               	bcf	_DtCS,2,c
  4347                           
  4348                           ;pomiar.c: 64: DtCS._error=0;
  4349  00A84E  9631               	bcf	_DtCS,3,c
  4350                           
  4351                           ;pomiar.c: 65: DtCS._work=1;
  4352  00A850  8831               	bsf	_DtCS,4,c
  4353                           
  4354                           ; BSR set to: 0
  4355  00A852  0012               	return	
  4356  00A854                     __end_of_InitDataPmr:
  4357                           	opt stack 0
  4358                           tblptru	equ	0xFF8
  4359                           tblptrh	equ	0xFF7
  4360                           tblptrl	equ	0xFF6
  4361                           tablat	equ	0xFF5
  4362                           prodh	equ	0xFF4
  4363                           prodl	equ	0xFF3
  4364                           intcon	equ	0xFF2
  4365                           postinc0	equ	0xFEE
  4366                           wreg	equ	0xFE8
  4367                           indf1	equ	0xFE7
  4368                           postinc1	equ	0xFE6
  4369                           postdec1	equ	0xFE5
  4370                           fsr1h	equ	0xFE2
  4371                           fsr1l	equ	0xFE1
  4372                           indf2	equ	0xFDF
  4373                           postinc2	equ	0xFDE
  4374                           postdec2	equ	0xFDD
  4375                           fsr2h	equ	0xFDA
  4376                           fsr2l	equ	0xFD9
  4377                           status	equ	0xFD8
  4378                           
  4379 ;; *************** function _ClearData *****************
  4380 ;; Defined at:
  4381 ;;		line 229 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;		None
  4384 ;; Auto vars:     Size  Location     Type
  4385 ;;		None
  4386 ;; Return value:  Size  Location     Type
  4387 ;;		None               void
  4388 ;; Registers used:
  4389 ;;		None
  4390 ;; Tracked objects:
  4391 ;;		On entry : F/0
  4392 ;;		On exit  : F/0
  4393 ;;		Unchanged: FFFFFFF0/0
  4394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4399 ;;Total ram usage:        0 bytes
  4400 ;; Hardware stack levels used:    1
  4401 ;; Hardware stack levels required when called:    4
  4402 ;; This function calls:
  4403 ;;		Nothing
  4404 ;; This function is called by:
  4405 ;;		_main
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text11
  4410  0087E4                     __ptext11:
  4411                           	opt stack 0
  4412  0087E4                     _ClearData:
  4413                           	opt stack 26
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;main.c: 230: DtKNF.enknf=0;
  4417                           
  4418                           ; BSR set to: 0
  4419  0087E4  0101               	movlb	1	; () banked
  4420  0087E6  914A               	bcf	_DtKNF& (0+255),0,b
  4421                           
  4422                           ;main.c: 231: M._pob_KCO=0;
  4423  0087E8  0100               	movlb	0	; () banked
  4424  0087EA  6B60               	clrf	_M& (0+255),b
  4425  0087EC  6B61               	clrf	(_M+1)& (0+255),b
  4426                           
  4427                           ;main.c: 232: M._pob_KCW=0;
  4428  0087EE  6B62               	clrf	(_M+2)& (0+255),b
  4429  0087F0  6B63               	clrf	(_M+3)& (0+255),b
  4430                           
  4431                           ;main.c: 233: M._pob_AL=0;
  4432  0087F2  6B66               	clrf	(_M+6)& (0+255),b
  4433  0087F4  6B67               	clrf	(_M+7)& (0+255),b
  4434                           
  4435                           ;main.c: 234: M._pob_SRW=0;
  4436  0087F6  6B64               	clrf	(_M+4)& (0+255),b
  4437  0087F8  6B65               	clrf	(_M+5)& (0+255),b
  4438                           
  4439                           ;main.c: 235: M._pob_CO=0;
  4440  0087FA  6B6A               	clrf	(_M+10)& (0+255),b
  4441  0087FC  6B6B               	clrf	(_M+11)& (0+255),b
  4442                           
  4443                           ;main.c: 236: M._pob_CW=0;
  4444  0087FE  6B68               	clrf	(_M+8)& (0+255),b
  4445  008800  6B69               	clrf	(_M+9)& (0+255),b
  4446                           
  4447                           ;main.c: 237: M._pob_DzCO=0;
  4448  008802  6B6C               	clrf	(_M+12)& (0+255),b
  4449  008804  6B6D               	clrf	(_M+13)& (0+255),b
  4450                           
  4451                           ;main.c: 238: M._pob_DzCW=0;
  4452  008806  6B6E               	clrf	(_M+14)& (0+255),b
  4453  008808  6B6F               	clrf	(_M+15)& (0+255),b
  4454                           
  4455                           ;main.c: 240: M._WYLACZ=0;
  4456  00880A  9170               	bcf	(_M+16)& (0+255),0,b
  4457                           
  4458                           ;main.c: 241: M._ZMKCOCW=0;
  4459  00880C  9370               	bcf	(_M+16)& (0+255),1,b
  4460                           
  4461                           ;main.c: 242: M._ROZRUCH=0;
  4462  00880E  9570               	bcf	(_M+16)& (0+255),2,b
  4463                           
  4464                           ;main.c: 243: M._RUSZ_48=0;
  4465  008810  9770               	bcf	(_M+16)& (0+255),3,b
  4466                           
  4467                           ;main.c: 244: M._RUSZ_48Z3=0;
  4468  008812  9970               	bcf	(_M+16)& (0+255),4,b
  4469                           
  4470                           ;main.c: 245: M._RUSZ_PWR=0;
  4471  008814  9B70               	bcf	(_M+16)& (0+255),5,b
  4472                           
  4473                           ;main.c: 246: M._VWYBIEG=0;
  4474  008816  9D70               	bcf	(_M+16)& (0+255),6,b
  4475                           
  4476                           ;main.c: 247: M._MODULUJ=0;
  4477  008818  9B71               	bcf	(_M+17)& (0+255),5,b
  4478                           
  4479                           ;main.c: 248: M._RUSZ_CIAG=0;
  4480  00881A  9F70               	bcf	(_M+16)& (0+255),7,b
  4481                           
  4482                           ;main.c: 249: M._RUSZ_PLOMIEN=0;
  4483  00881C  9171               	bcf	(_M+17)& (0+255),0,b
  4484                           
  4485                           ;main.c: 250: M._RUSZ_RPLM=0;
  4486  00881E  9371               	bcf	(_M+17)& (0+255),1,b
  4487                           
  4488                           ;main.c: 251: M._RUSZ_POMPE=0;
  4489  008820  9571               	bcf	(_M+17)& (0+255),2,b
  4490                           
  4491                           ;main.c: 252: M._BLOKUJ_3M=0;
  4492  008822  9771               	bcf	(_M+17)& (0+255),3,b
  4493                           
  4494                           ;main.c: 253: M._BLOKUJ_15S=0;
  4495  008824  9971               	bcf	(_M+17)& (0+255),4,b
  4496                           
  4497                           ;main.c: 254: M._MODULUJ=0;
  4498  008826  9B71               	bcf	(_M+17)& (0+255),5,b
  4499                           
  4500                           ;main.c: 256: M._AKTYWNE_AL=0;
  4501  008828  6B74               	clrf	(_M+20)& (0+255),b
  4502  00882A  6B75               	clrf	(_M+21)& (0+255),b
  4503                           
  4504                           ;main.c: 257: M._AKTYWNE_SRW=0;
  4505  00882C  6B72               	clrf	(_M+18)& (0+255),b
  4506  00882E  6B73               	clrf	(_M+19)& (0+255),b
  4507                           
  4508                           ;main.c: 258: M._AKTYWNE_PGD=0;
  4509  008830  6B76               	clrf	(_M+22)& (0+255),b
  4510  008832  6B77               	clrf	(_M+23)& (0+255),b
  4511                           
  4512                           ;main.c: 259: M._AKTYWNE_KNF=0;
  4513  008834  6B78               	clrf	(_M+24)& (0+255),b
  4514  008836  6B79               	clrf	(_M+25)& (0+255),b
  4515                           
  4516                           ;main.c: 260: M._RUSZ_NTC_CO=0;
  4517  008838  917A               	bcf	(_M+26)& (0+255),0,b
  4518                           
  4519                           ;main.c: 261: M._RUSZ_NTC_CW=0;
  4520  00883A  937A               	bcf	(_M+26)& (0+255),1,b
  4521                           
  4522                           ;main.c: 262: M._RUSZ_STB=0;
  4523  00883C  977A               	bcf	(_M+26)& (0+255),3,b
  4524                           
  4525                           ;main.c: 263: M._RUSZ_MOD=0;
  4526  00883E  997A               	bcf	(_M+26)& (0+255),4,b
  4527                           
  4528                           ;main.c: 264: M._RUSZ_CISN=0;
  4529  008840  9B7A               	bcf	(_M+26)& (0+255),5,b
  4530                           
  4531                           ;main.c: 265: M._RUSZ_NCISN=0;
  4532  008842  9D7A               	bcf	(_M+26)& (0+255),6,b
  4533                           
  4534                           ;main.c: 267: M._PW_START=0;
  4535  008844  917B               	bcf	(_M+27)& (0+255),0,b
  4536                           
  4537                           ;main.c: 268: M._RS_START=0;
  4538  008846  9F7A               	bcf	(_M+26)& (0+255),7,b
  4539                           
  4540                           ;main.c: 269: M._TURBO=0;
  4541  008848  937B               	bcf	(_M+27)& (0+255),1,b
  4542                           
  4543                           ;main.c: 270: M._PRACA=0;
  4544  00884A  957B               	bcf	(_M+27)& (0+255),2,b
  4545                           
  4546                           ;main.c: 271: M._OST_PL=0;
  4547  00884C  977B               	bcf	(_M+27)& (0+255),3,b
  4548                           
  4549                           ;main.c: 272: M._RUN_MNMOD=0;
  4550  00884E  997B               	bcf	(_M+27)& (0+255),4,b
  4551                           
  4552                           ;main.c: 273: M._KCW_PMP=0;
  4553  008850  9B7B               	bcf	(_M+27)& (0+255),5,b
  4554                           
  4555                           ;main.c: 274: M._DE_VNT=0;
  4556  008852  9D7B               	bcf	(_M+27)& (0+255),6,b
  4557                           
  4558                           ;main.c: 275: M._DE_PMP=0;
  4559  008854  957C               	bcf	(_M+28)& (0+255),2,b
  4560                           
  4561                           ;main.c: 276: M._RPM_CW=0;
  4562  008856  9F7B               	bcf	(_M+27)& (0+255),7,b
  4563                           
  4564                           ;main.c: 277: M._RUSZ_NTC_IN=0;
  4565  008858  957A               	bcf	(_M+26)& (0+255),2,b
  4566                           
  4567                           ;main.c: 279: M.ERR_BTY=0;
  4568  00885A  6B82               	clrf	(_M+34)& (0+255),b
  4569                           
  4570                           ;main.c: 280: M.ROZ=0;
  4571  00885C  6B83               	clrf	(_M+35)& (0+255),b
  4572                           
  4573                           ;main.c: 281: M.R48=0;
  4574  00885E  6B84               	clrf	(_M+36)& (0+255),b
  4575                           
  4576                           ;main.c: 282: M.R48Z3=0;
  4577  008860  6B85               	clrf	(_M+37)& (0+255),b
  4578                           
  4579                           ;main.c: 283: M.BL3=0;
  4580  008862  6B86               	clrf	(_M+38)& (0+255),b
  4581                           
  4582                           ;main.c: 284: M.BL15=0;
  4583  008864  6B87               	clrf	(_M+39)& (0+255),b
  4584                           
  4585                           ;main.c: 285: M.WYL=0;
  4586  008866  6B88               	clrf	(_M+40)& (0+255),b
  4587                           
  4588                           ;main.c: 286: M.RPR=0;
  4589  008868  6B89               	clrf	(_M+41)& (0+255),b
  4590                           
  4591                           ;main.c: 287: M.RPL=0;
  4592  00886A  6B8A               	clrf	(_M+42)& (0+255),b
  4593                           
  4594                           ;main.c: 288: M.RCI=0;
  4595  00886C  6B8B               	clrf	(_M+43)& (0+255),b
  4596                           
  4597                           ;main.c: 289: M.MNM=0;
  4598  00886E  6B8C               	clrf	(_M+44)& (0+255),b
  4599                           
  4600                           ;main.c: 290: M.ZKP=0;
  4601  008870  6B8D               	clrf	(_M+45)& (0+255),b
  4602                           
  4603                           ;main.c: 291: M.VWB=0;
  4604  008872  6B8E               	clrf	(_M+46)& (0+255),b
  4605                           
  4606                           ;main.c: 292: M.SRV=0;
  4607  008874  6B8F               	clrf	(_M+47)& (0+255),b
  4608                           
  4609                           ;main.c: 293: M.KRS=0;
  4610  008876  6B90               	clrf	(_M+48)& (0+255),b
  4611                           
  4612                           ;main.c: 294: M.HVZ=0;
  4613  008878  6B91               	clrf	(_M+49)& (0+255),b
  4614                           
  4615                           ;main.c: 295: M.LICZNIK_PL=0;
  4616  00887A  6B7D               	clrf	(_M+29)& (0+255),b
  4617                           
  4618                           ;main.c: 296: M.LICZNIK_CIG=0;
  4619  00887C  6B7E               	clrf	(_M+30)& (0+255),b
  4620                           
  4621                           ;main.c: 297: M.LICZNIK_CIG2=0;
  4622  00887E  6B7F               	clrf	(_M+31)& (0+255),b
  4623                           
  4624                           ;main.c: 298: M.LICZNIK_CIG3=0;
  4625  008880  6B80               	clrf	(_M+32)& (0+255),b
  4626                           
  4627                           ;main.c: 299: M.DPR=0;
  4628  008882  6B92               	clrf	(_M+50)& (0+255),b
  4629                           
  4630                           ;main.c: 301: PORTDbits.RD3=0;
  4631  008884  9683               	bcf	3971,3,c	;volatile
  4632                           
  4633                           ;main.c: 302: PORTDbits.RD0=0;
  4634  008886  9083               	bcf	3971,0,c	;volatile
  4635                           
  4636                           ;main.c: 303: PORTDbits.RD2=0;
  4637  008888  9483               	bcf	3971,2,c	;volatile
  4638                           
  4639                           ; BSR set to: 0
  4640  00888A  0012               	return	
  4641  00888C                     __end_of_ClearData:
  4642                           	opt stack 0
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           prodh	equ	0xFF4
  4648                           prodl	equ	0xFF3
  4649                           intcon	equ	0xFF2
  4650                           postinc0	equ	0xFEE
  4651                           wreg	equ	0xFE8
  4652                           indf1	equ	0xFE7
  4653                           postinc1	equ	0xFE6
  4654                           postdec1	equ	0xFE5
  4655                           fsr1h	equ	0xFE2
  4656                           fsr1l	equ	0xFE1
  4657                           indf2	equ	0xFDF
  4658                           postinc2	equ	0xFDE
  4659                           postdec2	equ	0xFDD
  4660                           fsr2h	equ	0xFDA
  4661                           fsr2l	equ	0xFD9
  4662                           status	equ	0xFD8
  4663                           
  4664 ;; *************** function _TestScr *****************
  4665 ;; Defined at:
  4666 ;;		line 300 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;		None
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;		None
  4671 ;; Return value:  Size  Location     Type
  4672 ;;		None               void
  4673 ;; Registers used:
  4674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : F/0
  4677 ;;		On exit  : F/2
  4678 ;;		Unchanged: FFFFFFF0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;Total ram usage:        0 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:    6
  4687 ;; This function calls:
  4688 ;;		_SetStatus
  4689 ;;		_SetData
  4690 ;;		_SetDiode
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text12
  4697  00A854                     __ptext12:
  4698                           	opt stack 0
  4699  00A854                     _TestScr:
  4700                           	opt stack 24
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;print.c: 301: SetStatus(&PWD[9],0b0000000000000000|0b0000010000000000|0b000010000000000
      +                          0,0b1111111111111111);
  4704                           
  4705                           ; BSR set to: 0
  4706  00A854  0102               	movlb	2	; () banked
  4707  00A856  0E02               	movlw	high (_PWD+36)
  4708  00A858  6E1F               	movwf	?_SetStatus+1,c
  4709  00A85A  0E71               	movlw	low (_PWD+36)
  4710  00A85C  6E1E               	movwf	?_SetStatus,c
  4711  00A85E  0E0C               	movlw	12
  4712  00A860  6E21               	movwf	?_SetStatus+3,c
  4713  00A862  6A20               	clrf	?_SetStatus+2,c
  4714  00A864  0EFF               	movlw	255
  4715  00A866  6823               	setf	?_SetStatus+5,c
  4716  00A868  6822               	setf	?_SetStatus+4,c
  4717  00A86A  ECF3  F034         	call	_SetStatus	;wreg free
  4718                           
  4719                           ;print.c: 302: SetData(&PWD[9],0b00000000,0b00000000);
  4720  00A86E  0E02               	movlw	high (_PWD+36)
  4721  00A870  6E1F               	movwf	?_SetData+1,c
  4722  00A872  0E71               	movlw	low (_PWD+36)
  4723  00A874  6E1E               	movwf	?_SetData,c
  4724  00A876  0E00               	movlw	0
  4725  00A878  6A20               	clrf	?_SetData+2,c
  4726  00A87A  6A21               	clrf	?_SetData+3,c
  4727  00A87C  EC42  F058         	call	_SetData	;wreg free
  4728                           
  4729                           ; BSR set to: 2
  4730                           ;print.c: 304: SetDiode(0b00000001|0b00001000|0b00000010|0b00000100,1);
  4731  00A880  0E01               	movlw	1
  4732  00A882  6E1F               	movwf	?_SetDiode,c
  4733  00A884  0E0F               	movlw	15
  4734  00A886  EFDE  F059         	goto	_SetDiode
  4735  00A88A                     __end_of_TestScr:
  4736                           	opt stack 0
  4737                           tblptru	equ	0xFF8
  4738                           tblptrh	equ	0xFF7
  4739                           tblptrl	equ	0xFF6
  4740                           tablat	equ	0xFF5
  4741                           prodh	equ	0xFF4
  4742                           prodl	equ	0xFF3
  4743                           intcon	equ	0xFF2
  4744                           postinc0	equ	0xFEE
  4745                           wreg	equ	0xFE8
  4746                           indf1	equ	0xFE7
  4747                           postinc1	equ	0xFE6
  4748                           postdec1	equ	0xFE5
  4749                           fsr1h	equ	0xFE2
  4750                           fsr1l	equ	0xFE1
  4751                           indf2	equ	0xFDF
  4752                           postinc2	equ	0xFDE
  4753                           postdec2	equ	0xFDD
  4754                           fsr2h	equ	0xFDA
  4755                           fsr2l	equ	0xFD9
  4756                           status	equ	0xFD8
  4757                           
  4758 ;; *************** function _PwrOnDelay *****************
  4759 ;; Defined at:
  4760 ;;		line 8 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwron.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;		None               void
  4767 ;; Registers used:
  4768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : C/2
  4771 ;;		On exit  : F/1
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;Total ram usage:        1 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    5
  4781 ;; This function calls:
  4782 ;;		_StartRTdS
  4783 ;;		_RTdS
  4784 ;; This function is called by:
  4785 ;;		_main
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text13
  4790  00B208                     __ptext13:
  4791                           	opt stack 0
  4792  00B208                     _PwrOnDelay:
  4793                           	opt stack 25
  4794                           
  4795                           ;pwron.c: 9: StartRTdS(0);
  4796                           
  4797                           ; BSR set to: 2
  4798  00B208  0E00               	movlw	0
  4799  00B20A  ECC2  F057         	call	_StartRTdS
  4800                           
  4801                           ;pwron.c: 10: while(RTdS(0)<15)
  4802  00B20E  D001               	goto	l36892
  4803  00B210                     l2634:
  4804                           
  4805                           ; BSR set to: 1
  4806  00B210  0004               	clrwdt		;# 
  4807  00B212                     l36892:
  4808  00B212  0E00               	movlw	0
  4809  00B214  ECD5  F057         	call	_RTdS
  4810  00B218  6E1F               	movwf	??_PwrOnDelay& (0+255),c
  4811  00B21A  0E0F               	movlw	15
  4812  00B21C  5C1F               	subwf	??_PwrOnDelay,w,c
  4813  00B21E  B0D8               	btfsc	status,0,c
  4814  00B220  0012               	return	
  4815  00B222  D7F6               	goto	l2634
  4816  00B224                     __end_of_PwrOnDelay:
  4817                           	opt stack 0
  4818                           tblptru	equ	0xFF8
  4819                           tblptrh	equ	0xFF7
  4820                           tblptrl	equ	0xFF6
  4821                           tablat	equ	0xFF5
  4822                           prodh	equ	0xFF4
  4823                           prodl	equ	0xFF3
  4824                           intcon	equ	0xFF2
  4825                           postinc0	equ	0xFEE
  4826                           wreg	equ	0xFE8
  4827                           indf1	equ	0xFE7
  4828                           postinc1	equ	0xFE6
  4829                           postdec1	equ	0xFE5
  4830                           fsr1h	equ	0xFE2
  4831                           fsr1l	equ	0xFE1
  4832                           indf2	equ	0xFDF
  4833                           postinc2	equ	0xFDE
  4834                           postdec2	equ	0xFDD
  4835                           fsr2h	equ	0xFDA
  4836                           fsr2l	equ	0xFD9
  4837                           status	equ	0xFD8
  4838                           
  4839 ;; *************** function _EndTestScr *****************
  4840 ;; Defined at:
  4841 ;;		line 308 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;		None               void
  4848 ;; Registers used:
  4849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : F/1
  4852 ;;		On exit  : F/2
  4853 ;;		Unchanged: FFFFFFF0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4859 ;;Total ram usage:        0 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    6
  4862 ;; This function calls:
  4863 ;;		_SetStatus
  4864 ;;		_SetData
  4865 ;;		_SetDiode
  4866 ;; This function is called by:
  4867 ;;		_main
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text14
  4872  00AD64                     __ptext14:
  4873                           	opt stack 0
  4874  00AD64                     _EndTestScr:
  4875                           	opt stack 24
  4876                           
  4877                           ; BSR set to: 1
  4878                           ;print.c: 309: SetStatus(&PWD[9],0b0100000000000000,0b1111111111111111);
  4879                           
  4880                           ; BSR set to: 1
  4881  00AD64  0102               	movlb	2	; () banked
  4882  00AD66  0E02               	movlw	high (_PWD+36)
  4883  00AD68  6E1F               	movwf	?_SetStatus+1,c
  4884  00AD6A  0E71               	movlw	low (_PWD+36)
  4885  00AD6C  ECD9  F045         	call	PL78	;call to abstracted procedure
  4886  00AD70  ECF3  F034         	call	_SetStatus	;wreg free
  4887                           
  4888                           ;print.c: 310: SetData(&PWD[9],0,0);
  4889  00AD74  0E02               	movlw	high (_PWD+36)
  4890  00AD76  6E1F               	movwf	?_SetData+1,c
  4891  00AD78  0E71               	movlw	low (_PWD+36)
  4892  00AD7A  6E1E               	movwf	?_SetData,c
  4893  00AD7C  0E00               	movlw	0
  4894  00AD7E  6A20               	clrf	?_SetData+2,c
  4895  00AD80  6A21               	clrf	?_SetData+3,c
  4896  00AD82  EC42  F058         	call	_SetData	;wreg free
  4897                           
  4898                           ; BSR set to: 2
  4899                           ;print.c: 312: SetDiode(0b00000001|0b00001000|0b00000010|0b00000100,0);
  4900  00AD86  6A1F               	clrf	?_SetDiode,c
  4901  00AD88  0E0F               	movlw	15
  4902  00AD8A  EFDE  F059         	goto	_SetDiode
  4903  00AD8E                     __end_of_EndTestScr:
  4904                           	opt stack 0
  4905                           tblptru	equ	0xFF8
  4906                           tblptrh	equ	0xFF7
  4907                           tblptrl	equ	0xFF6
  4908                           tablat	equ	0xFF5
  4909                           prodh	equ	0xFF4
  4910                           prodl	equ	0xFF3
  4911                           intcon	equ	0xFF2
  4912                           postinc0	equ	0xFEE
  4913                           wreg	equ	0xFE8
  4914                           indf1	equ	0xFE7
  4915                           postinc1	equ	0xFE6
  4916                           postdec1	equ	0xFE5
  4917                           fsr1h	equ	0xFE2
  4918                           fsr1l	equ	0xFE1
  4919                           indf2	equ	0xFDF
  4920                           postinc2	equ	0xFDE
  4921                           postdec2	equ	0xFDD
  4922                           fsr2h	equ	0xFDA
  4923                           fsr2l	equ	0xFD9
  4924                           status	equ	0xFD8
  4925                           
  4926 ;; *************** function _ClsScr *****************
  4927 ;; Defined at:
  4928 ;;		line 38 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;		None               void
  4935 ;; Registers used:
  4936 ;;		cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : F/0
  4939 ;;		On exit  : F/1
  4940 ;;		Unchanged: FFFFFFF0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;Total ram usage:        0 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    5
  4949 ;; This function calls:
  4950 ;;		_WswOff
  4951 ;; This function is called by:
  4952 ;;		_main
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text15
  4957  00B65E                     __ptext15:
  4958                           	opt stack 0
  4959  00B65E                     _ClsScr:
  4960                           	opt stack 25
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;print.c: 39: WswOff();
  4964                           
  4965                           ; BSR set to: 2
  4966  00B65E  EF23  F05B         	goto	_WswOff	;wreg free
  4967  00B662                     __end_of_ClsScr:
  4968                           	opt stack 0
  4969                           tblptru	equ	0xFF8
  4970                           tblptrh	equ	0xFF7
  4971                           tblptrl	equ	0xFF6
  4972                           tablat	equ	0xFF5
  4973                           prodh	equ	0xFF4
  4974                           prodl	equ	0xFF3
  4975                           intcon	equ	0xFF2
  4976                           postinc0	equ	0xFEE
  4977                           wreg	equ	0xFE8
  4978                           indf1	equ	0xFE7
  4979                           postinc1	equ	0xFE6
  4980                           postdec1	equ	0xFE5
  4981                           fsr1h	equ	0xFE2
  4982                           fsr1l	equ	0xFE1
  4983                           indf2	equ	0xFDF
  4984                           postinc2	equ	0xFDE
  4985                           postdec2	equ	0xFDD
  4986                           fsr2h	equ	0xFDA
  4987                           fsr2l	equ	0xFD9
  4988                           status	equ	0xFD8
  4989                           
  4990 ;; *************** function _EndClsScr *****************
  4991 ;; Defined at:
  4992 ;;		line 43 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;		None
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;		None
  4997 ;; Return value:  Size  Location     Type
  4998 ;;		None               void
  4999 ;; Registers used:
  5000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5001 ;; Tracked objects:
  5002 ;;		On entry : F/1
  5003 ;;		On exit  : F/1
  5004 ;;		Unchanged: FFFFFFF0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;Total ram usage:        0 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    5
  5013 ;; This function calls:
  5014 ;;		_AllKolToFirstPoz
  5015 ;;		_WswOn
  5016 ;; This function is called by:
  5017 ;;		_main
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text16
  5022  00B62A                     __ptext16:
  5023                           	opt stack 0
  5024  00B62A                     _EndClsScr:
  5025                           	opt stack 25
  5026                           
  5027                           ; BSR set to: 1
  5028                           ;print.c: 44: AllKolToFirstPoz();
  5029                           
  5030                           ; BSR set to: 1
  5031  00B62A  EC80  F055         	call	_AllKolToFirstPoz	;wreg free
  5032                           
  5033                           ; BSR set to: 1
  5034                           ;print.c: 45: WswOn();
  5035  00B62E  EF35  F05B         	goto	_WswOn	;wreg free
  5036  00B632                     __end_of_EndClsScr:
  5037                           	opt stack 0
  5038                           tblptru	equ	0xFF8
  5039                           tblptrh	equ	0xFF7
  5040                           tblptrl	equ	0xFF6
  5041                           tablat	equ	0xFF5
  5042                           prodh	equ	0xFF4
  5043                           prodl	equ	0xFF3
  5044                           intcon	equ	0xFF2
  5045                           postinc0	equ	0xFEE
  5046                           wreg	equ	0xFE8
  5047                           indf1	equ	0xFE7
  5048                           postinc1	equ	0xFE6
  5049                           postdec1	equ	0xFE5
  5050                           fsr1h	equ	0xFE2
  5051                           fsr1l	equ	0xFE1
  5052                           indf2	equ	0xFDF
  5053                           postinc2	equ	0xFDE
  5054                           postdec2	equ	0xFDD
  5055                           fsr2h	equ	0xFDA
  5056                           fsr2l	equ	0xFD9
  5057                           status	equ	0xFD8
  5058                           
  5059 ;; *************** function _RdEEParam *****************
  5060 ;; Defined at:
  5061 ;;		line 244 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;		None
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;		None
  5066 ;; Return value:  Size  Location     Type
  5067 ;;		None               void
  5068 ;; Registers used:
  5069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : C/2
  5072 ;;		On exit  : F/1
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;Total ram usage:        0 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    8
  5082 ;; This function calls:
  5083 ;;		_Read_b_eep
  5084 ;;		_SetTpKtParam
  5085 ;;		_ModParam
  5086 ;;		_MocStart
  5087 ;;		_MocMaksCW
  5088 ;;		_MocMaksCO
  5089 ;;		_SetPFN
  5090 ;;		_SetNST
  5091 ;;		_Busy_eep
  5092 ;;		_Write_b_eep
  5093 ;; This function is called by:
  5094 ;;		_main
  5095 ;; This function uses a non-reentrant model
  5096 ;;
  5097                           
  5098                           	psect	text17
  5099  007744                     __ptext17:
  5100                           	opt stack 0
  5101  007744                     _RdEEParam:
  5102                           	opt stack 22
  5103                           
  5104                           ;konfig.c: 246: DtKNF.tpkt=Read_b_eep(0x00C5);
  5105                           
  5106                           ; BSR set to: 1
  5107  007744  6A1F               	clrf	?_Read_b_eep+1,c
  5108  007746  0EC5               	movlw	197
  5109  007748  6E1E               	movwf	?_Read_b_eep,c
  5110  00774A  EC83  F059         	call	_Read_b_eep	;wreg free
  5111  00774E  0101               	movlb	1	; () banked
  5112  007750  6F51               	movwf	(_DtKNF+7)& (0+255),b
  5113                           
  5114                           ; BSR set to: 1
  5115                           ;konfig.c: 247: RSDT1.outTPKT=DtKNF.tpkt;
  5116  007752  C151  F224         	movff	_DtKNF+7,_RSDT1+36
  5117                           
  5118                           ;konfig.c: 248: SetTpKtParam();
  5119  007756  EC77  F059         	call	_SetTpKtParam	;wreg free
  5120                           
  5121                           ; BSR set to: 1
  5122                           ;konfig.c: 250: ModParam(DtKNF.tpkt,DtKNF.rdgz=Read_b_eep(0x00C4));
  5123  00775A  6A1F               	clrf	?_Read_b_eep+1,c
  5124  00775C  0EC4               	movlw	196
  5125  00775E  6E1E               	movwf	?_Read_b_eep,c
  5126  007760  EC83  F059         	call	_Read_b_eep	;wreg free
  5127  007764  0101               	movlb	1	; () banked
  5128  007766  6F52               	movwf	(_DtKNF+8)& (0+255),b
  5129  007768  C152  F020         	movff	_DtKNF+8,?_ModParam
  5130  00776C  5151               	movf	(_DtKNF+7)& (0+255),w,b
  5131  00776E  EC0E  F023         	call	_ModParam
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;konfig.c: 251: RSDT1.outRGZ=DtKNF.rdgz;
  5135  007772  C152  F220         	movff	_DtKNF+8,_RSDT1+32
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;konfig.c: 252: MocStart(DtKNF.mstr=Read_b_eep(0x00C1));
  5139  007776  6A1F               	clrf	?_Read_b_eep+1,c
  5140  007778  0EC1               	movlw	193
  5141  00777A  6E1E               	movwf	?_Read_b_eep,c
  5142  00777C  EC83  F059         	call	_Read_b_eep	;wreg free
  5143  007780  0101               	movlb	1	; () banked
  5144  007782  6F4D               	movwf	(_DtKNF+3)& (0+255),b
  5145  007784  514D               	movf	(_DtKNF+3)& (0+255),w,b
  5146  007786  EC1F  F04B         	call	_MocStart
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;konfig.c: 253: RSDT1.outMSTR=DtKNF.mstr;
  5150  00778A  C14D  F217         	movff	_DtKNF+3,_RSDT1+23
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;konfig.c: 254: MocMaksCW(DtKNF.mxcw=Read_b_eep(0x00C2));
  5154  00778E  6A1F               	clrf	?_Read_b_eep+1,c
  5155  007790  0EC2               	movlw	194
  5156  007792  6E1E               	movwf	?_Read_b_eep,c
  5157  007794  EC83  F059         	call	_Read_b_eep	;wreg free
  5158  007798  0101               	movlb	1	; () banked
  5159  00779A  6F4E               	movwf	(_DtKNF+4)& (0+255),b
  5160  00779C  514E               	movf	(_DtKNF+4)& (0+255),w,b
  5161  00779E  EC8B  F04B         	call	_MocMaksCW
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;konfig.c: 255: RSDT1.outMMAXU=DtKNF.mxcw;
  5165  0077A2  C14E  F21A         	movff	_DtKNF+4,_RSDT1+26
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;konfig.c: 256: MocMaksCO(DtKNF.mxco=Read_b_eep(0x00C3));
  5169  0077A6  6A1F               	clrf	?_Read_b_eep+1,c
  5170  0077A8  0EC3               	movlw	195
  5171  0077AA  6E1E               	movwf	?_Read_b_eep,c
  5172  0077AC  EC83  F059         	call	_Read_b_eep	;wreg free
  5173  0077B0  0101               	movlb	1	; () banked
  5174  0077B2  6F4F               	movwf	(_DtKNF+5)& (0+255),b
  5175  0077B4  514F               	movf	(_DtKNF+5)& (0+255),w,b
  5176  0077B6  EC55  F04B         	call	_MocMaksCO
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;konfig.c: 257: RSDT1.outMMAXG=DtKNF.mxco;
  5180  0077BA  C14F  F21D         	movff	_DtKNF+5,_RSDT1+29
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;konfig.c: 258: DtKNF.aleg=Read_b_eep(0x00C6);
  5184  0077BE  6A1F               	clrf	?_Read_b_eep+1,c
  5185  0077C0  0EC6               	movlw	198
  5186  0077C2  6E1E               	movwf	?_Read_b_eep,c
  5187  0077C4  EC83  F059         	call	_Read_b_eep	;wreg free
  5188  0077C8  0101               	movlb	1	; () banked
  5189  0077CA  6F5B               	movwf	(_DtKNF+17)& (0+255),b
  5190                           
  5191                           ; BSR set to: 1
  5192                           ;konfig.c: 259: RSDT1.outWANL=DtKNF.aleg;
  5193  0077CC  C15B  F223         	movff	_DtKNF+17,_RSDT1+35
  5194                           
  5195                           ; BSR set to: 1
  5196                           ;konfig.c: 260: DtKNF.robg=Read_b_eep(0x00C8);
  5197  0077D0  6A1F               	clrf	?_Read_b_eep+1,c
  5198  0077D2  0EC8               	movlw	200
  5199  0077D4  6E1E               	movwf	?_Read_b_eep,c
  5200  0077D6  EC83  F059         	call	_Read_b_eep	;wreg free
  5201  0077DA  0101               	movlb	1	; () banked
  5202  0077DC  6F58               	movwf	(_DtKNF+14)& (0+255),b
  5203                           
  5204                           ; BSR set to: 1
  5205                           ;konfig.c: 261: RSDT1.outWOBG=DtKNF.robg;
  5206  0077DE  C158  F227         	movff	_DtKNF+14,_RSDT1+39
  5207                           
  5208                           ; BSR set to: 1
  5209                           ;konfig.c: 262: PFN.poz=Read_b_eep(0x00CB);
  5210  0077E2  6A1F               	clrf	?_Read_b_eep+1,c
  5211  0077E4  0ECB               	movlw	203
  5212  0077E6  6E1E               	movwf	?_Read_b_eep,c
  5213  0077E8  EC83  F059         	call	_Read_b_eep	;wreg free
  5214  0077EC  0101               	movlb	1	; () banked
  5215  0077EE  6FD9               	movwf	(_PFN+31)& (0+255),b
  5216  0077F0  6BDA               	clrf	(_PFN+32)& (0+255),b
  5217                           
  5218                           ; BSR set to: 1
  5219                           ;konfig.c: 263: SetPFN();
  5220  0077F2  EC25  F052         	call	_SetPFN	;wreg free
  5221                           
  5222                           ; BSR set to: 1
  5223                           ;konfig.c: 264: DtKNF.opdg=Read_b_eep(0x00CC);
  5224  0077F6  6A1F               	clrf	?_Read_b_eep+1,c
  5225  0077F8  0ECC               	movlw	204
  5226  0077FA  6E1E               	movwf	?_Read_b_eep,c
  5227  0077FC  EC83  F059         	call	_Read_b_eep	;wreg free
  5228  007800  0101               	movlb	1	; () banked
  5229  007802  6F59               	movwf	(_DtKNF+15)& (0+255),b
  5230                           
  5231                           ; BSR set to: 1
  5232                           ;konfig.c: 265: RSDT1.outOPDG=DtKNF.opdg;
  5233  007804  C159  F228         	movff	_DtKNF+15,_RSDT1+40
  5234                           
  5235                           ; BSR set to: 1
  5236                           ;konfig.c: 266: DtCO.PCO=Read_b_eep(0x00C9);
  5237  007808  6A1F               	clrf	?_Read_b_eep+1,c
  5238  00780A  0EC9               	movlw	201
  5239  00780C  6E1E               	movwf	?_Read_b_eep,c
  5240  00780E  EC83  F059         	call	_Read_b_eep	;wreg free
  5241  007812  0100               	movlb	0	; () banked
  5242  007814  6FE7               	movwf	(_DtCO+3)& (0+255),b
  5243                           
  5244                           ; BSR set to: 0
  5245                           ;konfig.c: 267: DtCW.PCW=Read_b_eep(0x00CA);
  5246  007816  6A1F               	clrf	?_Read_b_eep+1,c
  5247  007818  0ECA               	movlw	202
  5248  00781A  6E1E               	movwf	?_Read_b_eep,c
  5249  00781C  EC83  F059         	call	_Read_b_eep	;wreg free
  5250  007820  0100               	movlb	0	; () banked
  5251  007822  6FD2               	movwf	(_DtCW+3)& (0+255),b
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;konfig.c: 268: SetNST();
  5255  007824  ECAE  F04A         	call	_SetNST	;wreg free
  5256                           
  5257                           ;konfig.c: 269: PFN.PCO=DtCO.PCO;
  5258  007828  0101               	movlb	1	; () banked
  5259  00782A  C0E7  F1D4         	movff	_DtCO+3,_PFN+26
  5260  00782E  6BD5               	clrf	(_PFN+27)& (0+255),b
  5261                           
  5262                           ; BSR set to: 1
  5263                           ;konfig.c: 270: PFN.PCW=DtCW.PCW;
  5264  007830  C0D2  F1D6         	movff	_DtCW+3,_PFN+28
  5265  007834  6BD7               	clrf	(_PFN+29)& (0+255),b
  5266                           
  5267                           ; BSR set to: 1
  5268                           ;konfig.c: 271: DtKNF.tpcs=Read_b_eep(0x00CD);
  5269  007836  6A1F               	clrf	?_Read_b_eep+1,c
  5270  007838  0ECD               	movlw	205
  5271  00783A  6E1E               	movwf	?_Read_b_eep,c
  5272  00783C  EC83  F059         	call	_Read_b_eep	;wreg free
  5273  007840  0101               	movlb	1	; () banked
  5274  007842  6F5A               	movwf	(_DtKNF+16)& (0+255),b
  5275                           
  5276                           ; BSR set to: 1
  5277                           ;konfig.c: 272: RSDT1.outTPCS=DtKNF.tpcs;
  5278  007844  C15A  F229         	movff	_DtKNF+16,_RSDT1+41
  5279                           
  5280                           ; BSR set to: 1
  5281                           ;konfig.c: 273: DtKNF.wymCO=0;
  5282  007848  934A               	bcf	_DtKNF& (0+255),1,b
  5283                           
  5284                           ; BSR set to: 1
  5285                           ;konfig.c: 274: DtKNF.wymCW=0;
  5286  00784A  954A               	bcf	_DtKNF& (0+255),2,b
  5287                           
  5288                           ; BSR set to: 1
  5289                           ;konfig.c: 275: M.LICZNIK_ANL=Read_b_eep(0x00C7);
  5290  00784C  6A1F               	clrf	?_Read_b_eep+1,c
  5291  00784E  0EC7               	movlw	199
  5292  007850  6E1E               	movwf	?_Read_b_eep,c
  5293  007852  EC83  F059         	call	_Read_b_eep	;wreg free
  5294  007856  0100               	movlb	0	; () banked
  5295  007858  6F81               	movwf	(_M+33)& (0+255),b
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;konfig.c: 277: if(M.LICZNIK_ANL)
  5299  00785A  5181               	movf	(_M+33)& (0+255),w,b
  5300  00785C  E010               	bz	l28380
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;konfig.c: 278: {
  5304                           ;konfig.c: 279: if(!DtKNF.aleg||(DtKNF.tpkt!=0))
  5305  00785E  0101               	movlb	1	; () banked
  5306  007860  515B               	movf	(_DtKNF+17)& (0+255),w,b
  5307  007862  E002               	bz	l28374
  5308                           
  5309                           ; BSR set to: 1
  5310  007864  5151               	movf	(_DtKNF+7)& (0+255),w,b
  5311  007866  E00B               	bz	l28380
  5312  007868                     l28374:
  5313                           
  5314                           ; BSR set to: 1
  5315                           ;konfig.c: 280: {
  5316                           ;konfig.c: 281: (Busy_eep(), Write_b_eep(0x00C7,0));
  5317  007868  EC29  F05B         	call	_Busy_eep	;wreg free
  5318                           
  5319                           ; BSR set to: 1
  5320  00786C  6A1F               	clrf	?_Write_b_eep+1,c
  5321  00786E  0EC7               	movlw	199
  5322  007870  6E1E               	movwf	?_Write_b_eep,c
  5323  007872  0E00               	movlw	0
  5324  007874  6A20               	clrf	?_Write_b_eep+2,c
  5325  007876  EC83  F053         	call	_Write_b_eep	;wreg free
  5326                           
  5327                           ;konfig.c: 282: M.LICZNIK_ANL=0;
  5328  00787A  0100               	movlb	0	; () banked
  5329  00787C  6B81               	clrf	(_M+33)& (0+255),b
  5330  00787E                     l28380:
  5331                           
  5332                           ;konfig.c: 283: }
  5333                           ;konfig.c: 284: }
  5334                           ;konfig.c: 286: DtKNF.rdpm=Read_b_eep(0x00D0);
  5335  00787E  6A1F               	clrf	?_Read_b_eep+1,c
  5336  007880  0ED0               	movlw	208
  5337  007882  6E1E               	movwf	?_Read_b_eep,c
  5338  007884  EC83  F059         	call	_Read_b_eep	;wreg free
  5339  007888  0101               	movlb	1	; () banked
  5340  00788A  6F53               	movwf	(_DtKNF+9)& (0+255),b
  5341                           
  5342                           ; BSR set to: 1
  5343                           ;konfig.c: 287: RSDT1.outRDPM=DtKNF.rdpm;
  5344  00788C  C153  F22A         	movff	_DtKNF+9,_RSDT1+42
  5345                           
  5346                           ; BSR set to: 1
  5347                           ;konfig.c: 288: DtKNF.dtpm=Read_b_eep(0x00D1);
  5348  007890  6A1F               	clrf	?_Read_b_eep+1,c
  5349  007892  0ED1               	movlw	209
  5350  007894  6E1E               	movwf	?_Read_b_eep,c
  5351  007896  EC83  F059         	call	_Read_b_eep	;wreg free
  5352  00789A  0101               	movlb	1	; () banked
  5353  00789C  6F54               	movwf	(_DtKNF+10)& (0+255),b
  5354                           
  5355                           ; BSR set to: 1
  5356                           ;konfig.c: 289: RSDT1.outDTPM=DtKNF.dtpm;
  5357  00789E  C154  F22B         	movff	_DtKNF+10,_RSDT1+43
  5358                           
  5359                           ; BSR set to: 1
  5360                           ;konfig.c: 290: DtKNF.mdpm=Read_b_eep(0x00D2);
  5361  0078A2  6A1F               	clrf	?_Read_b_eep+1,c
  5362  0078A4  0ED2               	movlw	210
  5363  0078A6  6E1E               	movwf	?_Read_b_eep,c
  5364  0078A8  EC83  F059         	call	_Read_b_eep	;wreg free
  5365  0078AC  0101               	movlb	1	; () banked
  5366  0078AE  6F55               	movwf	(_DtKNF+11)& (0+255),b
  5367                           
  5368                           ; BSR set to: 1
  5369                           ;konfig.c: 291: RSDT1.outMDPM=DtKNF.mdpm;
  5370  0078B0  C155  F22C         	movff	_DtKNF+11,_RSDT1+44
  5371                           
  5372                           ; BSR set to: 1
  5373                           ;konfig.c: 297: DtKNF.teco=0;
  5374  0078B4  6B56               	clrf	(_DtKNF+12)& (0+255),b
  5375                           
  5376                           ; BSR set to: 1
  5377                           ;konfig.c: 298: DtIN.Eco=5;
  5378  0078B6  0E05               	movlw	5
  5379  0078B8  6F3F               	movwf	(_DtIN+9)& (0+255),b
  5380                           
  5381                           ; BSR set to: 1
  5382  0078BA  0C05               	retlw	5
  5383  0078BC                     __end_of_RdEEParam:
  5384                           	opt stack 0
  5385                           tblptru	equ	0xFF8
  5386                           tblptrh	equ	0xFF7
  5387                           tblptrl	equ	0xFF6
  5388                           tablat	equ	0xFF5
  5389                           prodh	equ	0xFF4
  5390                           prodl	equ	0xFF3
  5391                           intcon	equ	0xFF2
  5392                           postinc0	equ	0xFEE
  5393                           wreg	equ	0xFE8
  5394                           indf1	equ	0xFE7
  5395                           postinc1	equ	0xFE6
  5396                           postdec1	equ	0xFE5
  5397                           fsr1h	equ	0xFE2
  5398                           fsr1l	equ	0xFE1
  5399                           indf2	equ	0xFDF
  5400                           postinc2	equ	0xFDE
  5401                           postdec2	equ	0xFDD
  5402                           fsr2h	equ	0xFDA
  5403                           fsr2l	equ	0xFD9
  5404                           status	equ	0xFD8
  5405                           
  5406 ;; *************** function _EnKonf *****************
  5407 ;; Defined at:
  5408 ;;		line 35 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;		None               void
  5415 ;; Registers used:
  5416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : F/1
  5419 ;;		On exit  : F/1
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    5
  5429 ;; This function calls:
  5430 ;;		_StartRTS
  5431 ;; This function is called by:
  5432 ;;		_main
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text18
  5437  00B632                     __ptext18:
  5438                           	opt stack 0
  5439  00B632                     _EnKonf:
  5440                           	opt stack 25
  5441                           
  5442                           ; BSR set to: 1
  5443                           ;konfig.c: 36: DtKNF.enknf=1;
  5444                           
  5445                           ; BSR set to: 1
  5446  00B632  814A               	bsf	_DtKNF& (0+255),0,b
  5447                           
  5448                           ; BSR set to: 1
  5449                           ;konfig.c: 37: StartRTS(0);
  5450  00B634  0E00               	movlw	0
  5451  00B636  EF9C  F057         	goto	_StartRTS
  5452  00B63A                     __end_of_EnKonf:
  5453                           	opt stack 0
  5454                           tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           prodh	equ	0xFF4
  5459                           prodl	equ	0xFF3
  5460                           intcon	equ	0xFF2
  5461                           postinc0	equ	0xFEE
  5462                           wreg	equ	0xFE8
  5463                           indf1	equ	0xFE7
  5464                           postinc1	equ	0xFE6
  5465                           postdec1	equ	0xFE5
  5466                           fsr1h	equ	0xFE2
  5467                           fsr1l	equ	0xFE1
  5468                           indf2	equ	0xFDF
  5469                           postinc2	equ	0xFDE
  5470                           postdec2	equ	0xFDD
  5471                           fsr2h	equ	0xFDA
  5472                           fsr2l	equ	0xFD9
  5473                           status	equ	0xFD8
  5474                           
  5475 ;; *************** function _PomiarIN *****************
  5476 ;; Defined at:
  5477 ;;		line 444 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;		None               void
  5484 ;; Registers used:
  5485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : F/1
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;Total ram usage:        0 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    6
  5498 ;; This function calls:
  5499 ;;		_ReadAC
  5500 ;;		_ReadTabNTC
  5501 ;; This function is called by:
  5502 ;;		_main
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text19
  5507  00A998                     __ptext19:
  5508                           	opt stack 0
  5509  00A998                     _PomiarIN:
  5510                           	opt stack 24
  5511                           
  5512                           ;pomiar.c: 447: DtIN.AC_IN=ReadAC(4);
  5513                           
  5514                           ; BSR set to: 1
  5515  00A998  0E04               	movlw	4
  5516  00A99A  EC31  F04D         	call	_ReadAC
  5517  00A99E  0101               	movlb	1	; () banked
  5518  00A9A0  6F37               	movwf	(_DtIN+1)& (0+255),b
  5519                           
  5520                           ;pomiar.c: 448: DtIN.IN=ReadTabNTC(DtIN.AC_IN);
  5521  00A9A2  5137               	movf	(_DtIN+1)& (0+255),w,b
  5522  00A9A4  EC04  F050         	call	_ReadTabNTC
  5523  00A9A8  0101               	movlb	1	; () banked
  5524  00A9AA  6F38               	movwf	(_DtIN+2)& (0+255),b
  5525                           
  5526                           ; BSR set to: 1
  5527                           ;pomiar.c: 449: PFN.IN=DtIN.IN;
  5528  00A9AC  C138  F1C6         	movff	_DtIN+2,_PFN+12
  5529                           
  5530                           ; BSR set to: 1
  5531                           ;pomiar.c: 450: if(DtIN.AC_IN<=0X28||DtIN.AC_IN>=0XF5)
  5532  00A9B0  EE21  F037         	lfsr	2,_DtIN+1
  5533  00A9B4  0E28               	movlw	40
  5534  00A9B6  64DF               	cpfsgt	indf2,c
  5535  00A9B8  D005               	goto	l2082
  5536                           
  5537                           ; BSR set to: 1
  5538  00A9BA  EE21  F037         	lfsr	2,_DtIN+1
  5539  00A9BE  0EF4               	movlw	244
  5540  00A9C0  64DF               	cpfsgt	indf2,c
  5541  00A9C2  D002               	goto	l2080
  5542  00A9C4                     l2082:
  5543                           
  5544                           ; BSR set to: 1
  5545                           ;pomiar.c: 451: {
  5546                           ;pomiar.c: 452: DtIN._err_IN=1;
  5547  00A9C4  8136               	bsf	_DtIN& (0+255),0,b
  5548                           
  5549                           ;pomiar.c: 453: return;
  5550  00A9C6  0012               	return	
  5551  00A9C8                     l2080:
  5552                           
  5553                           ; BSR set to: 1
  5554                           ;pomiar.c: 455: else DtIN._err_IN=0;
  5555  00A9C8  9136               	bcf	_DtIN& (0+255),0,b
  5556                           
  5557                           ; BSR set to: 1
  5558  00A9CA  0012               	return	
  5559  00A9CC                     __end_of_PomiarIN:
  5560                           	opt stack 0
  5561                           tblptru	equ	0xFF8
  5562                           tblptrh	equ	0xFF7
  5563                           tblptrl	equ	0xFF6
  5564                           tablat	equ	0xFF5
  5565                           prodh	equ	0xFF4
  5566                           prodl	equ	0xFF3
  5567                           intcon	equ	0xFF2
  5568                           postinc0	equ	0xFEE
  5569                           wreg	equ	0xFE8
  5570                           indf1	equ	0xFE7
  5571                           postinc1	equ	0xFE6
  5572                           postdec1	equ	0xFE5
  5573                           fsr1h	equ	0xFE2
  5574                           fsr1l	equ	0xFE1
  5575                           indf2	equ	0xFDF
  5576                           postinc2	equ	0xFDE
  5577                           postdec2	equ	0xFDD
  5578                           fsr2h	equ	0xFDA
  5579                           fsr2l	equ	0xFD9
  5580                           status	equ	0xFD8
  5581                           
  5582 ;; *************** function _RestartFltPrt *****************
  5583 ;; Defined at:
  5584 ;;		line 307 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;		None
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;		None
  5589 ;; Return value:  Size  Location     Type
  5590 ;;		None               void
  5591 ;; Registers used:
  5592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : F/0
  5595 ;;		On exit  : F/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5602 ;;Total ram usage:        0 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    5
  5605 ;; This function calls:
  5606 ;;		_SetPrt
  5607 ;; This function is called by:
  5608 ;;		_main
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text20
  5613  00A740                     __ptext20:
  5614                           	opt stack 0
  5615  00A740                     _RestartFltPrt:
  5616                           	opt stack 25
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;main.c: 308: SetPrt(13,0);
  5620                           
  5621                           ; BSR set to: 1
  5622  00A740  6A1E               	clrf	?_SetPrt,c
  5623  00A742  0E0D               	movlw	13
  5624  00A744  EC0E  F053         	call	_SetPrt
  5625                           
  5626                           ;main.c: 309: SetPrt(17,0);
  5627  00A748  6A1E               	clrf	?_SetPrt,c
  5628  00A74A  0E11               	movlw	17
  5629  00A74C  EC0E  F053         	call	_SetPrt
  5630                           
  5631                           ;main.c: 310: SetPrt(9,0);
  5632  00A750  6A1E               	clrf	?_SetPrt,c
  5633  00A752  0E09               	movlw	9
  5634  00A754  EC0E  F053         	call	_SetPrt
  5635                           
  5636                           ;main.c: 311: SetPrt(10,0);
  5637  00A758  6A1E               	clrf	?_SetPrt,c
  5638  00A75A  0E0A               	movlw	10
  5639  00A75C  EC0E  F053         	call	_SetPrt
  5640                           
  5641                           ;main.c: 312: SetPrt(12,0);
  5642  00A760  6A1E               	clrf	?_SetPrt,c
  5643  00A762  0E0C               	movlw	12
  5644  00A764  EC0E  F053         	call	_SetPrt
  5645                           
  5646                           ;main.c: 313: SetPrt(11,0);
  5647  00A768  6A1E               	clrf	?_SetPrt,c
  5648  00A76A  0E0B               	movlw	11
  5649  00A76C  EC0E  F053         	call	_SetPrt
  5650                           
  5651                           ;main.c: 314: SetPrt(7,0);
  5652  00A770  6A1E               	clrf	?_SetPrt,c
  5653  00A772  0E07               	movlw	7
  5654  00A774  EF0E  F053         	goto	_SetPrt
  5655  00A778                     __end_of_RestartFltPrt:
  5656                           	opt stack 0
  5657                           tblptru	equ	0xFF8
  5658                           tblptrh	equ	0xFF7
  5659                           tblptrl	equ	0xFF6
  5660                           tablat	equ	0xFF5
  5661                           prodh	equ	0xFF4
  5662                           prodl	equ	0xFF3
  5663                           intcon	equ	0xFF2
  5664                           postinc0	equ	0xFEE
  5665                           wreg	equ	0xFE8
  5666                           indf1	equ	0xFE7
  5667                           postinc1	equ	0xFE6
  5668                           postdec1	equ	0xFE5
  5669                           fsr1h	equ	0xFE2
  5670                           fsr1l	equ	0xFE1
  5671                           indf2	equ	0xFDF
  5672                           postinc2	equ	0xFDE
  5673                           postdec2	equ	0xFDD
  5674                           fsr2h	equ	0xFDA
  5675                           fsr2l	equ	0xFD9
  5676                           status	equ	0xFD8
  5677                           
  5678 ;; *************** function _TrybPracy *****************
  5679 ;; Defined at:
  5680 ;;		line 89 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konsola.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;		None
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  key             1    5[BANK0 ] unsigned char 
  5685 ;;  key2            1    4[BANK0 ] unsigned char 
  5686 ;;  ExtR2           1    1[BANK0 ] unsigned char 
  5687 ;;  ExtR            1    0[BANK0 ] unsigned char 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;		None               void
  5690 ;; Registers used:
  5691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5692 ;; Tracked objects:
  5693 ;;		On entry : F/1
  5694 ;;		On exit  : F/1
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;Total ram usage:        7 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:    6
  5704 ;; This function calls:
  5705 ;;		_RdPrt
  5706 ;;		_PresKeyEX
  5707 ;;		_WaitToLowEx
  5708 ;;		_ResBufKeyEx
  5709 ;;		_SetPrt
  5710 ;;		_StartRTdS
  5711 ;;		_RestartKol
  5712 ;;		_RTdS
  5713 ;; This function is called by:
  5714 ;;		_main
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text21
  5719  001A16                     __ptext21:
  5720                           	opt stack 0
  5721  001A16                     _TrybPracy:
  5722                           	opt stack 24
  5723                           
  5724                           ; BSR set to: 1
  5725                           ;konsola.c: 91: unsigned char key,key2,ExtR,ExtR2;
  5726                           ;konsola.c: 93: PFN._aktywne_KNF=0;
  5727                           
  5728                           ; BSR set to: 0
  5729  001A16  9DBC               	bcf	(_PFN+2)& (0+255),6,b
  5730                           
  5731                           ;konsola.c: 94: PFN._opgres=0;
  5732  001A18  97BF               	bcf	(_PFN+5)& (0+255),3,b
  5733                           
  5734                           ;konsola.c: 95: if(!PFN._aktywne_KNF&&!PFN._opgres)
  5735  001A1A  ADBC               	btfss	(_PFN+2)& (0+255),6,b
  5736                           
  5737                           ; BSR set to: 1
  5738  001A1C  B7BF               	btfsc	(_PFN+5)& (0+255),3,b
  5739  001A1E  D2BA               	goto	l4794
  5740                           
  5741                           ; BSR set to: 1
  5742                           ;konsola.c: 96: {
  5743                           ;konsola.c: 99: if(!RdPrt(23))
  5744  001A20  0E17               	movlw	23
  5745  001A22  EC84  F058         	call	_RdPrt
  5746  001A26  E23B               	bc	l37434
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;konsola.c: 100: {
  5750                           ;konsola.c: 101: key=PresKeyEX(RdPrt(22),&ky[0]);
  5751  001A28  DACF               	call	PL200	;call to abstracted procedure
  5752  001A2A  EC84  F058         	call	_RdPrt
  5753  001A2E  0E01               	movlw	1
  5754  001A30  A0D8               	btfss	status,0,c
  5755  001A32  0E00               	movlw	0
  5756  001A34  EC43  F02F         	call	_PresKeyEX
  5757  001A38  6FF8               	movwf	TrybPracy@key& (0+255),b
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;konsola.c: 102: if(key!=100&&key>=16)
  5761  001A3A  51F8               	movf	TrybPracy@key& (0+255),w,b
  5762  001A3C  0A64               	xorlw	100
  5763  001A3E  E02F               	bz	l37434
  5764                           
  5765                           ; BSR set to: 0
  5766  001A40  0E0F               	movlw	15
  5767  001A42  65F8               	cpfsgt	TrybPracy@key& (0+255),b
  5768  001A44  D02C               	goto	l37434
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;konsola.c: 103: {
  5772                           ;konsola.c: 104: WaitToLowEx(&ky[0]);
  5773  001A46  0102               	movlb	2	; () banked
  5774  001A48  0E02               	movlw	high _ky
  5775  001A4A  6E1F               	movwf	?_WaitToLowEx+1,c
  5776  001A4C  0E75               	movlw	low _ky
  5777  001A4E  6E1E               	movwf	?_WaitToLowEx,c
  5778  001A50  EC53  F058         	call	_WaitToLowEx	;wreg free
  5779                           
  5780                           ; BSR set to: 2
  5781                           ;konsola.c: 105: PFN._off=!PFN._off;
  5782  001A54  0101               	movlb	1	; () banked
  5783  001A56  0E01               	movlw	1
  5784  001A58  B1BA               	btfsc	_PFN& (0+255),0,b
  5785  001A5A  0E00               	movlw	0
  5786  001A5C  6E26               	movwf	??_TrybPracy& (0+255),c
  5787  001A5E  19BA               	xorwf	_PFN& (0+255),w,b
  5788  001A60  0BFE               	andlw	-2
  5789  001A62  1826               	xorwf	??_TrybPracy,w,c
  5790  001A64  6FBA               	movwf	_PFN& (0+255),b
  5791                           
  5792                           ; BSR set to: 1
  5793                           ;konsola.c: 106: PFN._set_nco=0;
  5794  001A66  9FBA               	bcf	_PFN& (0+255),7,b
  5795                           
  5796                           ; BSR set to: 1
  5797                           ;konsola.c: 107: PFN._set_ncw=0;
  5798  001A68  91BB               	bcf	(_PFN+1)& (0+255),0,b
  5799                           
  5800                           ; BSR set to: 1
  5801                           ;konsola.c: 108: PFN._str_nco=0;
  5802  001A6A  97BA               	bcf	_PFN& (0+255),3,b
  5803                           
  5804                           ; BSR set to: 1
  5805                           ;konsola.c: 109: PFN._str_ncw=0;
  5806  001A6C  99BA               	bcf	_PFN& (0+255),4,b
  5807                           
  5808                           ; BSR set to: 1
  5809                           ;konsola.c: 110: PFN._prn_res=0;
  5810  001A6E  91BD               	bcf	(_PFN+3)& (0+255),0,b
  5811                           
  5812                           ; BSR set to: 1
  5813                           ;konsola.c: 111: PFN._set_fnserw=0;
  5814  001A70  99BB               	bcf	(_PFN+1)& (0+255),4,b
  5815                           
  5816                           ; BSR set to: 1
  5817                           ;konsola.c: 112: PFN._fnserw=0;
  5818  001A72  9DBB               	bcf	(_PFN+1)& (0+255),6,b
  5819                           
  5820                           ; BSR set to: 1
  5821                           ;konsola.c: 113: PFN._set_aleg=0;
  5822  001A74  9BBB               	bcf	(_PFN+1)& (0+255),5,b
  5823                           
  5824                           ; BSR set to: 1
  5825                           ;konsola.c: 114: PFN._aleg=0;
  5826  001A76  91BC               	bcf	(_PFN+2)& (0+255),0,b
  5827                           
  5828                           ; BSR set to: 1
  5829                           ;konsola.c: 115: ResBufKeyEx(&ky[2]);
  5830  001A78  0102               	movlb	2	; () banked
  5831  001A7A  0E02               	movlw	high (_ky+10)
  5832  001A7C  6E1F               	movwf	?_ResBufKeyEx+1,c
  5833  001A7E  0E7F               	movlw	low (_ky+10)
  5834  001A80  6E1E               	movwf	?_ResBufKeyEx,c
  5835  001A82  EC86  F056         	call	_ResBufKeyEx	;wreg free
  5836                           
  5837                           ; BSR set to: 2
  5838                           ;konsola.c: 116: ResBufKeyEx(&ky[3]);
  5839  001A86  0E02               	movlw	high (_ky+15)
  5840  001A88  6E1F               	movwf	?_ResBufKeyEx+1,c
  5841  001A8A  0E84               	movlw	low (_ky+15)
  5842  001A8C  6E1E               	movwf	?_ResBufKeyEx,c
  5843  001A8E  EC86  F056         	call	_ResBufKeyEx	;wreg free
  5844                           
  5845                           ; BSR set to: 2
  5846                           ;konsola.c: 117: ResBufKeyEx(&ky[1]);
  5847  001A92  0E02               	movlw	high (_ky+5)
  5848  001A94  6E1F               	movwf	?_ResBufKeyEx+1,c
  5849  001A96  0E7A               	movlw	low (_ky+5)
  5850  001A98  6E1E               	movwf	?_ResBufKeyEx,c
  5851  001A9A  EC86  F056         	call	_ResBufKeyEx	;wreg free
  5852  001A9E                     l37434:
  5853                           
  5854                           ;konsola.c: 118: }
  5855                           ;konsola.c: 119: }
  5856                           ;konsola.c: 121: if(!PFN._off&&!PFN._lato&&!PFN._zima)
  5857  001A9E  0101               	movlb	1	; () banked
  5858  001AA0  A1BA               	btfss	_PFN& (0+255),0,b
  5859                           
  5860                           ; BSR set to: 1
  5861  001AA2  B3BA               	btfsc	_PFN& (0+255),1,b
  5862  001AA4  D004               	goto	l37442
  5863                           
  5864                           ; BSR set to: 1
  5865  001AA6  B5BA               	btfsc	_PFN& (0+255),2,b
  5866  001AA8  D002               	goto	l37442
  5867                           
  5868                           ; BSR set to: 1
  5869                           ;konsola.c: 122: {
  5870                           ;konsola.c: 123: PFN._lato=0;
  5871  001AAA  93BA               	bcf	_PFN& (0+255),1,b
  5872                           
  5873                           ;konsola.c: 124: PFN._zima=1;
  5874  001AAC  85BA               	bsf	_PFN& (0+255),2,b
  5875  001AAE                     l37442:
  5876                           
  5877                           ; BSR set to: 1
  5878                           ;konsola.c: 125: }
  5879                           ;konsola.c: 127: if(!RdPrt(22)&&!RdPrt(24)&&!RdPrt(25)&&!PFN._off&&!PFN._fnserw&&!PFN._a
      +                          leg)
  5880  001AAE  0E16               	movlw	22
  5881  001AB0  EC84  F058         	call	_RdPrt
  5882  001AB4  E244               	bc	l37476
  5883                           
  5884                           ; BSR set to: 0
  5885  001AB6  0E18               	movlw	24
  5886  001AB8  EC84  F058         	call	_RdPrt
  5887  001ABC  E240               	bc	l37476
  5888                           
  5889                           ; BSR set to: 0
  5890  001ABE  0E19               	movlw	25
  5891  001AC0  EC84  F058         	call	_RdPrt
  5892  001AC4  E23C               	bc	l37476
  5893                           
  5894                           ; BSR set to: 0
  5895  001AC6  0101               	movlb	1	; () banked
  5896  001AC8  A1BA               	btfss	_PFN& (0+255),0,b
  5897                           
  5898                           ; BSR set to: 1
  5899  001ACA  BDBB               	btfsc	(_PFN+1)& (0+255),6,b
  5900  001ACC  D038               	goto	l37476
  5901                           
  5902                           ; BSR set to: 1
  5903  001ACE  B1BC               	btfsc	(_PFN+2)& (0+255),0,b
  5904  001AD0  D036               	goto	l37476
  5905                           
  5906                           ; BSR set to: 1
  5907                           ;konsola.c: 128: {
  5908                           ;konsola.c: 129: key=PresKeyEX(RdPrt(23),&ky[1]);
  5909  001AD2  0102               	movlb	2	; () banked
  5910  001AD4  0E02               	movlw	high (_ky+5)
  5911  001AD6  6E21               	movwf	?_PresKeyEX+1,c
  5912  001AD8  0E7A               	movlw	low (_ky+5)
  5913  001ADA  6E20               	movwf	?_PresKeyEX,c
  5914  001ADC  0E17               	movlw	23
  5915  001ADE  EC84  F058         	call	_RdPrt
  5916  001AE2  0E01               	movlw	1
  5917  001AE4  A0D8               	btfss	status,0,c
  5918  001AE6  0E00               	movlw	0
  5919  001AE8  EC43  F02F         	call	_PresKeyEX
  5920  001AEC  6FF8               	movwf	TrybPracy@key& (0+255),b
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;konsola.c: 130: if(key!=100&&key>=8)
  5924  001AEE  51F8               	movf	TrybPracy@key& (0+255),w,b
  5925  001AF0  0A64               	xorlw	100
  5926  001AF2  E025               	bz	l37476
  5927                           
  5928                           ; BSR set to: 0
  5929  001AF4  0E07               	movlw	7
  5930  001AF6  65F8               	cpfsgt	TrybPracy@key& (0+255),b
  5931  001AF8  D022               	goto	l37476
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;konsola.c: 131: {
  5935                           ;konsola.c: 132: WaitToLowEx(&ky[1]);
  5936  001AFA  0102               	movlb	2	; () banked
  5937  001AFC  0E02               	movlw	high (_ky+5)
  5938  001AFE  6E1F               	movwf	?_WaitToLowEx+1,c
  5939  001B00  0E7A               	movlw	low (_ky+5)
  5940  001B02  6E1E               	movwf	?_WaitToLowEx,c
  5941  001B04  EC53  F058         	call	_WaitToLowEx	;wreg free
  5942                           
  5943                           ; BSR set to: 2
  5944                           ;konsola.c: 133: PFN._lato=!PFN._lato;
  5945  001B08  0101               	movlb	1	; () banked
  5946  001B0A  0E01               	movlw	1
  5947  001B0C  B3BA               	btfsc	_PFN& (0+255),1,b
  5948  001B0E  0E00               	movlw	0
  5949  001B10  6E26               	movwf	??_TrybPracy& (0+255),c
  5950  001B12  4626               	rlncf	??_TrybPracy,f,c
  5951  001B14  51BA               	movf	_PFN& (0+255),w,b
  5952  001B16  1826               	xorwf	??_TrybPracy,w,c
  5953  001B18  0BFD               	andlw	-3
  5954  001B1A  1826               	xorwf	??_TrybPracy,w,c
  5955  001B1C  6FBA               	movwf	_PFN& (0+255),b
  5956  001B1E  0E01               	movlw	1
  5957                           
  5958                           ; BSR set to: 1
  5959                           ;konsola.c: 134: PFN._zima=!PFN._lato;
  5960  001B20  B3BA               	btfsc	_PFN& (0+255),1,b
  5961  001B22  0E00               	movlw	0
  5962  001B24  6E26               	movwf	??_TrybPracy& (0+255),c
  5963  001B26  4626               	rlncf	??_TrybPracy,f,c
  5964  001B28  4626               	rlncf	??_TrybPracy,f,c
  5965  001B2A  51BA               	movf	_PFN& (0+255),w,b
  5966  001B2C  1826               	xorwf	??_TrybPracy,w,c
  5967  001B2E  0BFB               	andlw	-5
  5968  001B30  1826               	xorwf	??_TrybPracy,w,c
  5969  001B32  6FBA               	movwf	_PFN& (0+255),b
  5970                           
  5971                           ; BSR set to: 1
  5972                           ;konsola.c: 135: PFN._set_nco=0;
  5973  001B34  9FBA               	bcf	_PFN& (0+255),7,b
  5974                           
  5975                           ; BSR set to: 1
  5976                           ;konsola.c: 136: PFN._set_ncw=0;
  5977  001B36  91BB               	bcf	(_PFN+1)& (0+255),0,b
  5978                           
  5979                           ; BSR set to: 1
  5980                           ;konsola.c: 137: PFN._fnserw=0;
  5981  001B38  9DBB               	bcf	(_PFN+1)& (0+255),6,b
  5982                           
  5983                           ; BSR set to: 1
  5984                           ;konsola.c: 138: PFN._aleg=0;
  5985  001B3A  91BC               	bcf	(_PFN+2)& (0+255),0,b
  5986                           
  5987                           ; BSR set to: 1
  5988                           ;konsola.c: 139: PFN._prn_res=0;
  5989  001B3C  91BD               	bcf	(_PFN+3)& (0+255),0,b
  5990  001B3E                     l37476:
  5991                           
  5992                           ;konsola.c: 140: }
  5993                           ;konsola.c: 141: }
  5994                           ;konsola.c: 144: if(PFN._oaleg) PFN._set_aleg=0;
  5995  001B3E  0101               	movlb	1	; () banked
  5996  001B40  B1BE               	btfsc	(_PFN+4)& (0+255),0,b
  5997                           
  5998                           ; BSR set to: 1
  5999  001B42  9BBB               	bcf	(_PFN+1)& (0+255),5,b
  6000                           
  6001                           ; BSR set to: 1
  6002                           ;konsola.c: 145: if(PFN._ofnserw) PFN._set_fnserw=0;
  6003  001B44  BFBD               	btfsc	(_PFN+3)& (0+255),7,b
  6004                           
  6005                           ; BSR set to: 1
  6006  001B46  99BB               	bcf	(_PFN+1)& (0+255),4,b
  6007                           
  6008                           ; BSR set to: 1
  6009                           ;konsola.c: 147: if(!RdPrt(22)&&!RdPrt(24)&&!RdPrt(25)&&!PFN._off&&!PFN._fnserw&&!PFN._a
      +                          leg)
  6010  001B48  0E16               	movlw	22
  6011  001B4A  EC84  F058         	call	_RdPrt
  6012  001B4E  E301 D089          	bc	l37560
  6013                           
  6014                           ; BSR set to: 0
  6015  001B52  0E18               	movlw	24
  6016  001B54  EC84  F058         	call	_RdPrt
  6017  001B58  E301 D084          	bc	l37560
  6018                           
  6019                           ; BSR set to: 0
  6020  001B5C  0E19               	movlw	25
  6021  001B5E  EC84  F058         	call	_RdPrt
  6022  001B62  E301 D07F          	bc	l37560
  6023                           
  6024                           ; BSR set to: 0
  6025  001B66  0101               	movlb	1	; () banked
  6026  001B68  A1BA               	btfss	_PFN& (0+255),0,b
  6027                           
  6028                           ; BSR set to: 1
  6029  001B6A  BDBB               	btfsc	(_PFN+1)& (0+255),6,b
  6030  001B6C  D07B               	goto	l37560
  6031                           
  6032                           ; BSR set to: 1
  6033  001B6E  B1BC               	btfsc	(_PFN+2)& (0+255),0,b
  6034  001B70  D079               	goto	l37560
  6035                           
  6036                           ; BSR set to: 1
  6037                           ;konsola.c: 148: {
  6038                           ;konsola.c: 149: key=PresKeyEX(RdPrt(23),&ky[1]);
  6039  001B72  0102               	movlb	2	; () banked
  6040  001B74  0E02               	movlw	high (_ky+5)
  6041  001B76  6E21               	movwf	?_PresKeyEX+1,c
  6042  001B78  0E7A               	movlw	low (_ky+5)
  6043  001B7A  6E20               	movwf	?_PresKeyEX,c
  6044  001B7C  0E17               	movlw	23
  6045  001B7E  EC84  F058         	call	_RdPrt
  6046  001B82  0E01               	movlw	1
  6047  001B84  A0D8               	btfss	status,0,c
  6048  001B86  0E00               	movlw	0
  6049  001B88  EC43  F02F         	call	_PresKeyEX
  6050  001B8C  6FF8               	movwf	TrybPracy@key& (0+255),b
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;konsola.c: 150: if(key==100)
  6054  001B8E  51F8               	movf	TrybPracy@key& (0+255),w,b
  6055  001B90  0A64               	xorlw	100
  6056  001B92  E168               	bnz	l37560
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;konsola.c: 151: {
  6060                           ;konsola.c: 152: ResBufKeyEx(&ky[1]);
  6061  001B94  0102               	movlb	2	; () banked
  6062  001B96  0E02               	movlw	high (_ky+5)
  6063  001B98  6E1F               	movwf	?_ResBufKeyEx+1,c
  6064  001B9A  0E7A               	movlw	low (_ky+5)
  6065  001B9C  6E1E               	movwf	?_ResBufKeyEx,c
  6066  001B9E  EC86  F056         	call	_ResBufKeyEx	;wreg free
  6067                           
  6068                           ; BSR set to: 2
  6069                           ;konsola.c: 153: PFN.b_set_nco=0;
  6070  001BA2  0101               	movlb	1	; () banked
  6071  001BA4  93BB               	bcf	(_PFN+1)& (0+255),1,b
  6072                           
  6073                           ; BSR set to: 1
  6074                           ;konsola.c: 154: PFN.b_set_ncw=0;
  6075  001BA6  95BB               	bcf	(_PFN+1)& (0+255),2,b
  6076                           
  6077                           ; BSR set to: 1
  6078                           ;konsola.c: 155: PFN._set_ncw=0;
  6079  001BA8  91BB               	bcf	(_PFN+1)& (0+255),0,b
  6080                           
  6081                           ; BSR set to: 1
  6082                           ;konsola.c: 156: PFN._prn_res=0;
  6083  001BAA  91BD               	bcf	(_PFN+3)& (0+255),0,b
  6084                           
  6085                           ; BSR set to: 1
  6086                           ;konsola.c: 157: if(PFN._set_nco)
  6087  001BAC  AFBA               	btfss	_PFN& (0+255),7,b
  6088  001BAE  D03B               	goto	l4804
  6089                           
  6090                           ; BSR set to: 1
  6091                           ;konsola.c: 158: {
  6092                           ;konsola.c: 159: if(PFN._newPCO)
  6093  001BB0  A3BC               	btfss	(_PFN+2)& (0+255),1,b
  6094  001BB2  D01C               	goto	l4805
  6095                           
  6096                           ; BSR set to: 1
  6097                           ;konsola.c: 160: {
  6098                           ;konsola.c: 161: PFN._newPCO=0;
  6099  001BB4  93BC               	bcf	(_PFN+2)& (0+255),1,b
  6100                           
  6101                           ;konsola.c: 162: PFN._set_nco=0;
  6102                           
  6103                           ;konsola.c: 163: PFN.b_set_nco=0;
  6104                           
  6105                           ;konsola.c: 164: PFN._set_ncw=0;
  6106                           
  6107                           ;konsola.c: 165: PFN.b_set_ncw=0;
  6108                           
  6109                           ;konsola.c: 166: PFN._set_fnserw=0;
  6110                           
  6111                           ;konsola.c: 167: PFN._set_aleg=0;
  6112  001BB6  DA01               	call	PL130	;call to abstracted procedure
  6113                           
  6114                           ; BSR set to: 1
  6115                           ;konsola.c: 168: SetPrt(25,0);
  6116  001BB8  6A1E               	clrf	?_SetPrt,c
  6117  001BBA  0E19               	movlw	25
  6118  001BBC  EC0E  F053         	call	_SetPrt
  6119                           
  6120                           ;konsola.c: 169: SetPrt(24,0);
  6121  001BC0  6A1E               	clrf	?_SetPrt,c
  6122  001BC2  0E18               	movlw	24
  6123  001BC4  EC0E  F053         	call	_SetPrt
  6124                           
  6125                           ;konsola.c: 170: SetPrt(23,0);
  6126  001BC8  6A1E               	clrf	?_SetPrt,c
  6127  001BCA  0E17               	movlw	23
  6128  001BCC  EC0E  F053         	call	_SetPrt
  6129  001BD0                     l37516:
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;konsola.c: 171: ResBufKeyEx(&ky[3]);
  6133  001BD0  0102               	movlb	2	; () banked
  6134  001BD2  0E02               	movlw	high (_ky+15)
  6135  001BD4  6E1F               	movwf	?_ResBufKeyEx+1,c
  6136  001BD6  0E84               	movlw	low (_ky+15)
  6137  001BD8  6E1E               	movwf	?_ResBufKeyEx,c
  6138  001BDA  EC86  F056         	call	_ResBufKeyEx	;wreg free
  6139                           
  6140                           ; BSR set to: 2
  6141                           ;konsola.c: 172: ResBufKeyEx(&ky[2]);
  6142  001BDE  0E02               	movlw	high (_ky+10)
  6143  001BE0  6E1F               	movwf	?_ResBufKeyEx+1,c
  6144  001BE2  0E7F               	movlw	low (_ky+10)
  6145  001BE4  6E1E               	movwf	?_ResBufKeyEx,c
  6146  001BE6  EC86  F056         	call	_ResBufKeyEx	;wreg free
  6147                           
  6148                           ;konsola.c: 173: }
  6149  001BEA  D033               	goto	l37552
  6150  001BEC                     l4805:
  6151                           
  6152                           ; BSR set to: 1
  6153                           ;konsola.c: 174: else
  6154                           ;konsola.c: 175: if(PFN._zima&&!PFN._obgCW&&!PFN._set_fnserw) {PFN._set_nco=0;PFN._set_f
      +                          nserw=1;PFN._fns_max=1;}
  6155  001BEC  B5BA               	btfsc	_PFN& (0+255),2,b
  6156                           
  6157                           ; BSR set to: 1
  6158  001BEE  B5BE               	btfsc	(_PFN+4)& (0+255),2,b
  6159  001BF0  D006               	goto	l4807
  6160                           
  6161                           ; BSR set to: 1
  6162  001BF2  B9BB               	btfsc	(_PFN+1)& (0+255),4,b
  6163  001BF4  D004               	goto	l4807
  6164                           
  6165                           ; BSR set to: 1
  6166  001BF6  9FBA               	bcf	_PFN& (0+255),7,b
  6167  001BF8  89BB               	bsf	(_PFN+1)& (0+255),4,b
  6168  001BFA  8FBB               	bsf	(_PFN+1)& (0+255),7,b
  6169  001BFC  D02A               	goto	l37552
  6170  001BFE                     l4807:
  6171                           
  6172                           ; BSR set to: 1
  6173                           ;konsola.c: 176: else
  6174                           ;konsola.c: 177: if(PFN._EnAleg&&!PFN._set_aleg) {PFN._set_nco=0;PFN._set_aleg=1;}
  6175  001BFE  BFBC               	btfsc	(_PFN+2)& (0+255),7,b
  6176                           
  6177                           ; BSR set to: 1
  6178  001C00  BBBB               	btfsc	(_PFN+1)& (0+255),5,b
  6179  001C02  D002               	goto	l4809
  6180                           
  6181                           ; BSR set to: 1
  6182  001C04  9FBA               	bcf	_PFN& (0+255),7,b
  6183  001C06  D018               	goto	L1
  6184  001C08                     l4809:
  6185                           
  6186                           ; BSR set to: 1
  6187                           ;konsola.c: 178: else
  6188                           ;konsola.c: 179: {
  6189                           ;konsola.c: 180: PFN._newPCO=0;
  6190  001C08  93BC               	bcf	(_PFN+2)& (0+255),1,b
  6191                           
  6192                           ;konsola.c: 181: PFN._set_nco=0;
  6193                           
  6194                           ;konsola.c: 182: PFN.b_set_nco=0;
  6195                           
  6196                           ;konsola.c: 183: PFN._set_ncw=0;
  6197                           
  6198                           ;konsola.c: 184: PFN.b_set_ncw=0;
  6199                           
  6200                           ;konsola.c: 185: PFN._set_fnserw=0;
  6201                           
  6202                           ;konsola.c: 186: PFN._set_aleg=0;
  6203  001C0A  D9D7               	call	PL130	;call to abstracted procedure
  6204                           
  6205                           ; BSR set to: 1
  6206                           ;konsola.c: 187: SetPrt(25,0);
  6207  001C0C  6A1E               	clrf	?_SetPrt,c
  6208  001C0E  0E19               	movlw	25
  6209  001C10  EC0E  F053         	call	_SetPrt
  6210                           
  6211                           ;konsola.c: 188: SetPrt(24,0);
  6212  001C14  6A1E               	clrf	?_SetPrt,c
  6213  001C16  0E18               	movlw	24
  6214  001C18  EC0E  F053         	call	_SetPrt
  6215                           
  6216                           ;konsola.c: 189: SetPrt(23,0);
  6217  001C1C  6A1E               	clrf	?_SetPrt,c
  6218  001C1E  0E17               	movlw	23
  6219  001C20  EC0E  F053         	call	_SetPrt
  6220  001C24  D7D5               	goto	l37516
  6221  001C26                     l4804:
  6222                           
  6223                           ; BSR set to: 1
  6224                           ;konsola.c: 194: else
  6225                           ;konsola.c: 195: if(PFN._set_fnserw&&!PFN._ferr&&!PFN._fmsg)
  6226  001C26  B9BB               	btfsc	(_PFN+1)& (0+255),4,b
  6227                           
  6228                           ; BSR set to: 1
  6229  001C28  B1BF               	btfsc	(_PFN+5)& (0+255),0,b
  6230  001C2A  D00B               	goto	l4812
  6231                           
  6232                           ; BSR set to: 1
  6233  001C2C  BFBE               	btfsc	(_PFN+4)& (0+255),7,b
  6234  001C2E  D009               	goto	l4812
  6235                           
  6236                           ; BSR set to: 1
  6237                           ;konsola.c: 196: {
  6238                           ;konsola.c: 197: if(PFN._EnAleg&&!PFN._set_aleg) {PFN._set_fnserw=0;PFN._set_aleg=1;}
  6239  001C30  BFBC               	btfsc	(_PFN+2)& (0+255),7,b
  6240                           
  6241                           ; BSR set to: 1
  6242  001C32  BBBB               	btfsc	(_PFN+1)& (0+255),5,b
  6243  001C34  D003               	goto	l4813
  6244                           
  6245                           ; BSR set to: 1
  6246  001C36  99BB               	bcf	(_PFN+1)& (0+255),4,b
  6247  001C38                     L1:
  6248  001C38  8BBB               	bsf	(_PFN+1)& (0+255),5,b
  6249  001C3A  D00B               	goto	l37552
  6250  001C3C                     l4813:
  6251                           
  6252                           ; BSR set to: 1
  6253                           ;konsola.c: 198: else
  6254                           ;konsola.c: 199: {
  6255                           ;konsola.c: 200: PFN._newPCO=0;
  6256  001C3C  93BC               	bcf	(_PFN+2)& (0+255),1,b
  6257                           
  6258                           ;konsola.c: 201: PFN._set_nco=0;
  6259                           
  6260                           ;konsola.c: 202: PFN.b_set_nco=0;
  6261                           
  6262                           ;konsola.c: 203: PFN._set_ncw=0;
  6263                           
  6264                           ;konsola.c: 204: PFN.b_set_ncw=0;
  6265                           
  6266                           ;konsola.c: 205: PFN._set_fnserw=0;
  6267                           
  6268                           ;konsola.c: 206: PFN._set_aleg=0;
  6269  001C3E  D9BD               	call	PL130	;call to abstracted procedure
  6270  001C40  D008               	goto	l37552
  6271  001C42                     l4812:
  6272                           
  6273                           ; BSR set to: 1
  6274                           ;konsola.c: 209: else
  6275                           ;konsola.c: 210: if(PFN._set_aleg&&!PFN._ferr&&!PFN._fmsg)
  6276  001C42  BBBB               	btfsc	(_PFN+1)& (0+255),5,b
  6277                           
  6278                           ; BSR set to: 1
  6279  001C44  B1BF               	btfsc	(_PFN+5)& (0+255),0,b
  6280  001C46  D002               	goto	l4816
  6281                           
  6282                           ; BSR set to: 1
  6283  001C48  AFBE               	btfss	(_PFN+4)& (0+255),7,b
  6284  001C4A  D7F8               	goto	l4813
  6285  001C4C                     l4816:
  6286                           
  6287                           ; BSR set to: 1
  6288                           ;konsola.c: 220: else
  6289                           ;konsola.c: 221: {
  6290                           ;konsola.c: 222: PFN._set_fnserw=0;
  6291  001C4C  99BB               	bcf	(_PFN+1)& (0+255),4,b
  6292                           
  6293                           ;konsola.c: 223: PFN._set_aleg=0;
  6294  001C4E  9BBB               	bcf	(_PFN+1)& (0+255),5,b
  6295                           
  6296                           ;konsola.c: 224: PFN._set_nco=1;
  6297  001C50  8FBA               	bsf	_PFN& (0+255),7,b
  6298  001C52                     l37552:
  6299                           
  6300                           ;konsola.c: 225: }
  6301                           ;konsola.c: 226: StartRTdS(9);
  6302  001C52  0E09               	movlw	9
  6303  001C54  ECC2  F057         	call	_StartRTdS
  6304                           
  6305                           ; BSR set to: 1
  6306                           ;konsola.c: 227: if(PFN._set_nco)
  6307  001C58  AFBA               	btfss	_PFN& (0+255),7,b
  6308  001C5A  D004               	goto	l37560
  6309                           
  6310                           ; BSR set to: 1
  6311                           ;konsola.c: 228: {
  6312                           ;konsola.c: 229: PFN.b_set_nco=0;
  6313  001C5C  93BB               	bcf	(_PFN+1)& (0+255),1,b
  6314                           
  6315                           ; BSR set to: 1
  6316                           ;konsola.c: 230: RestartKol(2);
  6317  001C5E  0E02               	movlw	2
  6318  001C60  ECB4  F058         	call	_RestartKol
  6319  001C64                     l37560:
  6320                           
  6321                           ;konsola.c: 233: }
  6322                           ;konsola.c: 234: }
  6323                           ;konsola.c: 235: }
  6324                           ;konsola.c: 236: if(RTdS(9)>30)
  6325  001C64  0E09               	movlw	9
  6326  001C66  ECD5  F057         	call	_RTdS
  6327  001C6A  6E26               	movwf	??_TrybPracy& (0+255),c
  6328  001C6C  0E1F               	movlw	31
  6329  001C6E  5C26               	subwf	??_TrybPracy,w,c
  6330  001C70  E301               	bnc	l37564
  6331                           
  6332                           ; BSR set to: 1
  6333                           ;konsola.c: 237: {
  6334                           ;konsola.c: 238: PFN._set_nco=0;
  6335                           
  6336                           ;konsola.c: 239: PFN.b_set_nco=0;
  6337                           
  6338                           ;konsola.c: 240: PFN._set_ncw=0;
  6339                           
  6340                           ;konsola.c: 241: PFN.b_set_ncw=0;
  6341                           
  6342                           ;konsola.c: 242: PFN._set_fnserw=0;
  6343                           
  6344                           ;konsola.c: 243: PFN._set_aleg=0;
  6345  001C72  D9A3               	call	PL130	;call to abstracted procedure
  6346  001C74                     l37564:
  6347                           
  6348                           ; BSR set to: 1
  6349                           ;konsola.c: 244: }
  6350                           ;konsola.c: 246: if(!RdPrt(22)&&!RdPrt(25)&&!PFN._off&&!PFN._fnserw&&!PFN._aleg)
  6351  001C74  0E16               	movlw	22
  6352  001C76  EC84  F058         	call	_RdPrt
  6353  001C7A  E250               	bc	l4820
  6354                           
  6355                           ; BSR set to: 0
  6356  001C7C  0E19               	movlw	25
  6357  001C7E  EC84  F058         	call	_RdPrt
  6358  001C82  E24C               	bc	l4820
  6359                           
  6360                           ; BSR set to: 0
  6361  001C84  0101               	movlb	1	; () banked
  6362  001C86  A1BA               	btfss	_PFN& (0+255),0,b
  6363                           
  6364                           ; BSR set to: 1
  6365  001C88  BDBB               	btfsc	(_PFN+1)& (0+255),6,b
  6366  001C8A  D048               	goto	l4820
  6367                           
  6368                           ; BSR set to: 1
  6369  001C8C  B1BC               	btfsc	(_PFN+2)& (0+255),0,b
  6370  001C8E  D046               	goto	l4820
  6371                           
  6372                           ; BSR set to: 1
  6373                           ;konsola.c: 247: {
  6374                           ;konsola.c: 248: if(PFN._set_fnserw)
  6375  001C90  A9BB               	btfss	(_PFN+1)& (0+255),4,b
  6376  001C92  D021               	goto	l37594
  6377                           
  6378                           ; BSR set to: 1
  6379                           ;konsola.c: 249: {
  6380                           ;konsola.c: 250: key=PresKeyEX(RdPrt(24),&ky[2]);
  6381  001C94  0102               	movlb	2	; () banked
  6382  001C96  0E02               	movlw	high (_ky+10)
  6383  001C98  6E21               	movwf	?_PresKeyEX+1,c
  6384  001C9A  0E7F               	movlw	low (_ky+10)
  6385  001C9C  6E20               	movwf	?_PresKeyEX,c
  6386  001C9E  0E18               	movlw	24
  6387  001CA0  EC84  F058         	call	_RdPrt
  6388  001CA4  0E01               	movlw	1
  6389  001CA6  A0D8               	btfss	status,0,c
  6390  001CA8  0E00               	movlw	0
  6391  001CAA  EC43  F02F         	call	_PresKeyEX
  6392  001CAE  6FF8               	movwf	TrybPracy@key& (0+255),b
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;konsola.c: 251: if(key!=100&&key>=10)
  6396  001CB0  51F8               	movf	TrybPracy@key& (0+255),w,b
  6397  001CB2  0A64               	xorlw	100
  6398  001CB4  E010               	bz	l37594
  6399                           
  6400                           ; BSR set to: 0
  6401  001CB6  0E09               	movlw	9
  6402  001CB8  65F8               	cpfsgt	TrybPracy@key& (0+255),b
  6403  001CBA  D00D               	goto	l37594
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;konsola.c: 252: {
  6407                           ;konsola.c: 253: WaitToLowEx(&ky[2]);
  6408  001CBC  0102               	movlb	2	; () banked
  6409  001CBE  0E02               	movlw	high (_ky+10)
  6410  001CC0  6E1F               	movwf	?_WaitToLowEx+1,c
  6411  001CC2  0E7F               	movlw	low (_ky+10)
  6412  001CC4  6E1E               	movwf	?_WaitToLowEx,c
  6413  001CC6  EC53  F058         	call	_WaitToLowEx	;wreg free
  6414                           
  6415                           ; BSR set to: 2
  6416                           ;konsola.c: 254: PFN._fnserw=1;
  6417  001CCA  0101               	movlb	1	; () banked
  6418  001CCC  8DBB               	bsf	(_PFN+1)& (0+255),6,b
  6419                           
  6420                           ; BSR set to: 1
  6421                           ;konsola.c: 255: PFN._prn_res=0;
  6422  001CCE  91BD               	bcf	(_PFN+3)& (0+255),0,b
  6423                           
  6424                           ; BSR set to: 1
  6425                           ;konsola.c: 256: PFN._set_nco=0;
  6426  001CD0  9FBA               	bcf	_PFN& (0+255),7,b
  6427                           
  6428                           ; BSR set to: 1
  6429                           ;konsola.c: 257: PFN._set_ncw=0;
  6430  001CD2  91BB               	bcf	(_PFN+1)& (0+255),0,b
  6431                           
  6432                           ; BSR set to: 1
  6433                           ;konsola.c: 258: PFN.b_ofnserw=0;
  6434  001CD4  91D3               	bcf	(_PFN+25)& (0+255),0,b
  6435  001CD6                     l37594:
  6436                           
  6437                           ;konsola.c: 259: }
  6438                           ;konsola.c: 260: }
  6439                           ;konsola.c: 261: if(PFN._set_aleg)
  6440  001CD6  0101               	movlb	1	; () banked
  6441  001CD8  ABBB               	btfss	(_PFN+1)& (0+255),5,b
  6442  001CDA  D020               	goto	l4820
  6443                           
  6444                           ; BSR set to: 1
  6445                           ;konsola.c: 262: {
  6446                           ;konsola.c: 263: key=PresKeyEX(RdPrt(24),&ky[2]);
  6447  001CDC  0102               	movlb	2	; () banked
  6448  001CDE  0E02               	movlw	high (_ky+10)
  6449  001CE0  6E21               	movwf	?_PresKeyEX+1,c
  6450  001CE2  0E7F               	movlw	low (_ky+10)
  6451  001CE4  6E20               	movwf	?_PresKeyEX,c
  6452  001CE6  0E18               	movlw	24
  6453  001CE8  EC84  F058         	call	_RdPrt
  6454  001CEC  0E01               	movlw	1
  6455  001CEE  A0D8               	btfss	status,0,c
  6456  001CF0  0E00               	movlw	0
  6457  001CF2  EC43  F02F         	call	_PresKeyEX
  6458  001CF6  6FF8               	movwf	TrybPracy@key& (0+255),b
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;konsola.c: 264: if(key!=100&&key>=10)
  6462  001CF8  51F8               	movf	TrybPracy@key& (0+255),w,b
  6463  001CFA  0A64               	xorlw	100
  6464  001CFC  E00F               	bz	l4820
  6465                           
  6466                           ; BSR set to: 0
  6467  001CFE  0E09               	movlw	9
  6468  001D00  65F8               	cpfsgt	TrybPracy@key& (0+255),b
  6469  001D02  D00C               	goto	l4820
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;konsola.c: 265: {
  6473                           ;konsola.c: 266: WaitToLowEx(&ky[2]);
  6474  001D04  0102               	movlb	2	; () banked
  6475  001D06  0E02               	movlw	high (_ky+10)
  6476  001D08  6E1F               	movwf	?_WaitToLowEx+1,c
  6477  001D0A  0E7F               	movlw	low (_ky+10)
  6478  001D0C  6E1E               	movwf	?_WaitToLowEx,c
  6479  001D0E  EC53  F058         	call	_WaitToLowEx	;wreg free
  6480                           
  6481                           ; BSR set to: 2
  6482                           ;konsola.c: 267: PFN._aleg=1;
  6483  001D12  0101               	movlb	1	; () banked
  6484  001D14  81BC               	bsf	(_PFN+2)& (0+255),0,b
  6485                           
  6486                           ; BSR set to: 1
  6487                           ;konsola.c: 268: PFN._set_nco=0;
  6488  001D16  9FBA               	bcf	_PFN& (0+255),7,b
  6489                           
  6490                           ; BSR set to: 1
  6491                           ;konsola.c: 269: PFN._set_ncw=0;
  6492  001D18  91BB               	bcf	(_PFN+1)& (0+255),0,b
  6493                           
  6494                           ; BSR set to: 1
  6495                           ;konsola.c: 270: PFN.b_oaleg=0;
  6496  001D1A  93D3               	bcf	(_PFN+25)& (0+255),1,b
  6497  001D1C                     l4820:
  6498                           
  6499                           ;konsola.c: 271: }
  6500                           ;konsola.c: 272: }
  6501                           ;konsola.c: 273: }
  6502                           ;konsola.c: 276: if(!RdPrt(22)&&!RdPrt(23)&&!PFN._off&&!PFN._fnserw&&!PFN._aleg&&!PFN._s
      +                          et_fnserw&&!PFN._set_aleg&&!PFN._set_nco&&!PFN._set_ncw)
  6503  001D1C  0E16               	movlw	22
  6504  001D1E  EC84  F058         	call	_RdPrt
  6505  001D22  E24F               	bc	l37650
  6506                           
  6507                           ; BSR set to: 0
  6508  001D24  0E17               	movlw	23
  6509  001D26  EC84  F058         	call	_RdPrt
  6510  001D2A  E24B               	bc	l37650
  6511                           
  6512                           ; BSR set to: 0
  6513  001D2C  0101               	movlb	1	; () banked
  6514  001D2E  A1BA               	btfss	_PFN& (0+255),0,b
  6515                           
  6516                           ; BSR set to: 1
  6517  001D30  BDBB               	btfsc	(_PFN+1)& (0+255),6,b
  6518  001D32  D047               	goto	l37650
  6519                           
  6520                           ; BSR set to: 1
  6521  001D34  A1BC               	btfss	(_PFN+2)& (0+255),0,b
  6522                           
  6523                           ; BSR set to: 1
  6524  001D36  B9BB               	btfsc	(_PFN+1)& (0+255),4,b
  6525  001D38  D044               	goto	l37650
  6526                           
  6527                           ; BSR set to: 1
  6528  001D3A  ABBB               	btfss	(_PFN+1)& (0+255),5,b
  6529                           
  6530                           ; BSR set to: 1
  6531  001D3C  BFBA               	btfsc	_PFN& (0+255),7,b
  6532  001D3E  D041               	goto	l37650
  6533                           
  6534                           ; BSR set to: 1
  6535  001D40  B1BB               	btfsc	(_PFN+1)& (0+255),0,b
  6536  001D42  D03F               	goto	l37650
  6537                           
  6538                           ; BSR set to: 1
  6539                           ;konsola.c: 277: {
  6540                           ;konsola.c: 278: key=PresKeyEX(RdPrt(25),&ky[3]);
  6541  001D44  0102               	movlb	2	; () banked
  6542  001D46  0E02               	movlw	high (_ky+15)
  6543  001D48  6E21               	movwf	?_PresKeyEX+1,c
  6544  001D4A  0E84               	movlw	low (_ky+15)
  6545  001D4C  6E20               	movwf	?_PresKeyEX,c
  6546  001D4E  0E19               	movlw	25
  6547  001D50  EC84  F058         	call	_RdPrt
  6548  001D54  0E01               	movlw	1
  6549  001D56  A0D8               	btfss	status,0,c
  6550  001D58  0E00               	movlw	0
  6551  001D5A  EC43  F02F         	call	_PresKeyEX
  6552  001D5E  6FF8               	movwf	TrybPracy@key& (0+255),b
  6553                           
  6554                           ;konsola.c: 279: key2=PresKeyEX(RdPrt(24),&ky[2]);
  6555  001D60  0102               	movlb	2	; () banked
  6556  001D62  0E02               	movlw	high (_ky+10)
  6557  001D64  6E21               	movwf	?_PresKeyEX+1,c
  6558  001D66  0E7F               	movlw	low (_ky+10)
  6559  001D68  6E20               	movwf	?_PresKeyEX,c
  6560  001D6A  0E18               	movlw	24
  6561  001D6C  EC84  F058         	call	_RdPrt
  6562  001D70  0E01               	movlw	1
  6563  001D72  A0D8               	btfss	status,0,c
  6564  001D74  0E00               	movlw	0
  6565  001D76  EC43  F02F         	call	_PresKeyEX
  6566  001D7A  6FF7               	movwf	TrybPracy@key2& (0+255),b
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;konsola.c: 280: if(key==100||key>=8||key2==100||key2>=8)
  6570  001D7C  51F8               	movf	TrybPracy@key& (0+255),w,b
  6571  001D7E  0A64               	xorlw	100
  6572  001D80  E009               	bz	l37638
  6573                           
  6574                           ; BSR set to: 0
  6575  001D82  0E08               	movlw	8
  6576  001D84  61F8               	cpfslt	TrybPracy@key& (0+255),b
  6577  001D86  D006               	goto	l37638
  6578                           
  6579                           ; BSR set to: 0
  6580  001D88  51F7               	movf	TrybPracy@key2& (0+255),w,b
  6581  001D8A  0A64               	xorlw	100
  6582  001D8C  E003               	bz	l37638
  6583                           
  6584                           ; BSR set to: 0
  6585  001D8E  0E07               	movlw	7
  6586  001D90  65F7               	cpfsgt	TrybPracy@key2& (0+255),b
  6587  001D92  D017               	goto	l37650
  6588  001D94                     l37638:
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;konsola.c: 281: {
  6592                           ;konsola.c: 282: ResBufKeyEx(&ky[3]);
  6593  001D94  0102               	movlb	2	; () banked
  6594  001D96  0E02               	movlw	high (_ky+15)
  6595  001D98  6E1F               	movwf	?_ResBufKeyEx+1,c
  6596  001D9A  0E84               	movlw	low (_ky+15)
  6597  001D9C  6E1E               	movwf	?_ResBufKeyEx,c
  6598  001D9E  EC86  F056         	call	_ResBufKeyEx	;wreg free
  6599                           
  6600                           ;konsola.c: 283: ResBufKeyEx(&ky[2]);
  6601  001DA2  0E02               	movlw	high (_ky+10)
  6602  001DA4  6E1F               	movwf	?_ResBufKeyEx+1,c
  6603  001DA6  0E7F               	movlw	low (_ky+10)
  6604  001DA8  6E1E               	movwf	?_ResBufKeyEx,c
  6605  001DAA  EC86  F056         	call	_ResBufKeyEx	;wreg free
  6606                           
  6607                           ;konsola.c: 284: RestartKol(2);
  6608  001DAE  0E02               	movlw	2
  6609  001DB0  ECB4  F058         	call	_RestartKol
  6610                           
  6611                           ; BSR set to: 1
  6612                           ;konsola.c: 287: PFN.b_set_ncw=0;
  6613  001DB4  95BB               	bcf	(_PFN+1)& (0+255),2,b
  6614                           
  6615                           ; BSR set to: 1
  6616                           ;konsola.c: 288: PFN._prn_res=0;
  6617  001DB6  91BD               	bcf	(_PFN+3)& (0+255),0,b
  6618                           
  6619                           ; BSR set to: 1
  6620                           ;konsola.c: 289: PFN._set_ncw=1;
  6621  001DB8  81BB               	bsf	(_PFN+1)& (0+255),0,b
  6622                           
  6623                           ; BSR set to: 1
  6624                           ;konsola.c: 290: PFN._mod_ncw=0;
  6625  001DBA  97BB               	bcf	(_PFN+1)& (0+255),3,b
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;konsola.c: 291: StartRTdS(9);
  6629  001DBC  0E09               	movlw	9
  6630  001DBE  ECC2  F057         	call	_StartRTdS
  6631  001DC2                     l37650:
  6632                           
  6633                           ;konsola.c: 292: }
  6634                           ;konsola.c: 293: }
  6635                           ;konsola.c: 295: ExtR=(!PFN._pmpPWM||PFN._errIN||!PFN._ofzima||PFN._obgCW||!PFN._obgCO)?
      +                          0:1;
  6636  001DC2  0100               	movlb	0	; () banked
  6637  001DC4  6BF5               	clrf	_TrybPracy$5565& (0+255),b
  6638                           
  6639                           ; BSR set to: 0
  6640  001DC6  0101               	movlb	1	; () banked
  6641  001DC8  BBC0               	btfsc	(_PFN+6)& (0+255),5,b
  6642                           
  6643                           ; BSR set to: 1
  6644  001DCA  B9C0               	btfsc	(_PFN+6)& (0+255),4,b
  6645  001DCC  D008               	goto	l37664
  6646                           
  6647                           ; BSR set to: 1
  6648  001DCE  B3C0               	btfsc	(_PFN+6)& (0+255),1,b
  6649                           
  6650                           ; BSR set to: 1
  6651  001DD0  B5BE               	btfsc	(_PFN+4)& (0+255),2,b
  6652  001DD2  D005               	goto	l37664
  6653                           
  6654                           ; BSR set to: 1
  6655  001DD4  A3BE               	btfss	(_PFN+4)& (0+255),1,b
  6656  001DD6  D003               	goto	l37664
  6657                           
  6658                           ; BSR set to: 1
  6659  001DD8  0E01               	movlw	1
  6660  001DDA  0100               	movlb	0	; () banked
  6661  001DDC  6FF5               	movwf	_TrybPracy$5565& (0+255),b
  6662  001DDE                     l37664:
  6663  001DDE  C0F5  F0F3         	movff	_TrybPracy$5565,TrybPracy@ExtR
  6664                           
  6665                           ;konsola.c: 296: ExtR2=(PFN._errIN||!PFN._obgCO)?0:1;
  6666  001DE2  0100               	movlb	0	; () banked
  6667  001DE4  6BF6               	clrf	_TrybPracy$5566& (0+255),b
  6668                           
  6669                           ; BSR set to: 0
  6670  001DE6  0101               	movlb	1	; () banked
  6671  001DE8  A9C0               	btfss	(_PFN+6)& (0+255),4,b
  6672                           
  6673                           ; BSR set to: 1
  6674  001DEA  A3BE               	btfss	(_PFN+4)& (0+255),1,b
  6675  001DEC  D003               	goto	l37674
  6676                           
  6677                           ; BSR set to: 1
  6678  001DEE  0E01               	movlw	1
  6679  001DF0  0100               	movlb	0	; () banked
  6680  001DF2  6FF6               	movwf	_TrybPracy$5566& (0+255),b
  6681  001DF4                     l37674:
  6682  001DF4  C0F6  F0F4         	movff	_TrybPracy$5566,TrybPracy@ExtR2
  6683                           
  6684                           ;konsola.c: 298: if(RTdS(10)>50)
  6685  001DF8  0E0A               	movlw	10
  6686  001DFA  ECD5  F057         	call	_RTdS
  6687  001DFE  6E26               	movwf	??_TrybPracy& (0+255),c
  6688  001E00  0E33               	movlw	51
  6689  001E02  5C26               	subwf	??_TrybPracy,w,c
  6690  001E04  B0D8               	btfsc	status,0,c
  6691                           
  6692                           ; BSR set to: 1
  6693                           ;konsola.c: 299: {
  6694                           ;konsola.c: 300: PFN._prn_res=0;
  6695  001E06  91BD               	bcf	(_PFN+3)& (0+255),0,b
  6696                           
  6697                           ; BSR set to: 1
  6698                           ;konsola.c: 301: }
  6699                           ;konsola.c: 302: if(PFN._prn_res&&(PFN._errCS||PFN._fnoCS)&&PFN._errIN)
  6700  001E08  A1BD               	btfss	(_PFN+3)& (0+255),0,b
  6701  001E0A  D006               	goto	l4834
  6702                           
  6703                           ; BSR set to: 1
  6704  001E0C  BBBF               	btfsc	(_PFN+5)& (0+255),5,b
  6705  001E0E  D002               	goto	l4836
  6706                           
  6707                           ; BSR set to: 1
  6708  001E10  A1C0               	btfss	(_PFN+6)& (0+255),0,b
  6709  001E12  D002               	goto	l4834
  6710  001E14                     l4836:
  6711                           
  6712                           ; BSR set to: 1
  6713  001E14  B9C0               	btfsc	(_PFN+6)& (0+255),4,b
  6714                           
  6715                           ; BSR set to: 1
  6716                           ;konsola.c: 303: {
  6717                           ;konsola.c: 304: PFN._prn_res=0;
  6718  001E16  91BD               	bcf	(_PFN+3)& (0+255),0,b
  6719  001E18                     l4834:
  6720                           
  6721                           ; BSR set to: 1
  6722                           ;konsola.c: 305: }
  6723                           ;konsola.c: 306: if(PFN._prn_res&&(PFN._errCS||PFN._fnoCS)&&(PFN._obgCW||PFN._oflato))
  6724  001E18  A1BD               	btfss	(_PFN+3)& (0+255),0,b
  6725  001E1A  D007               	goto	l4837
  6726                           
  6727                           ; BSR set to: 1
  6728  001E1C  BBBF               	btfsc	(_PFN+5)& (0+255),5,b
  6729  001E1E  D002               	goto	l4839
  6730                           
  6731                           ; BSR set to: 1
  6732  001E20  A1C0               	btfss	(_PFN+6)& (0+255),0,b
  6733  001E22  D003               	goto	l4837
  6734  001E24                     l4839:
  6735                           
  6736                           ; BSR set to: 1
  6737  001E24  A5BE               	btfss	(_PFN+4)& (0+255),2,b
  6738                           
  6739                           ; BSR set to: 1
  6740  001E26  B5C0               	btfsc	(_PFN+6)& (0+255),2,b
  6741                           
  6742                           ; BSR set to: 1
  6743                           ;konsola.c: 307: {
  6744                           ;konsola.c: 308: PFN._prn_res=0;
  6745  001E28  91BD               	bcf	(_PFN+3)& (0+255),0,b
  6746  001E2A                     l4837:
  6747                           
  6748                           ; BSR set to: 1
  6749                           ;konsola.c: 309: }
  6750                           ;konsola.c: 310: if(!PFN._prn_res)
  6751  001E2A  B1BD               	btfsc	(_PFN+3)& (0+255),0,b
  6752  001E2C  D002               	goto	l37694
  6753  001E2E                     l37692:
  6754                           
  6755                           ; BSR set to: 1
  6756                           ;konsola.c: 311: {
  6757                           ;konsola.c: 312: PFN._prn_cs=0;
  6758  001E2E  93BD               	bcf	(_PFN+3)& (0+255),1,b
  6759  001E30  D00B               	goto	L2
  6760  001E32                     l37694:
  6761                           
  6762                           ; BSR set to: 1
  6763                           ;konsola.c: 315: else
  6764                           ;konsola.c: 316: {
  6765                           ;konsola.c: 317: if(ExtR)
  6766  001E32  0100               	movlb	0	; () banked
  6767  001E34  51F3               	movf	TrybPracy@ExtR& (0+255),w,b
  6768  001E36  E00D               	bz	l37700
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;konsola.c: 318: {
  6772                           ;konsola.c: 319: if(RTdS(10)<(50/2))
  6773  001E38  0E0A               	movlw	10
  6774  001E3A  ECD5  F057         	call	_RTdS
  6775  001E3E  6E26               	movwf	??_TrybPracy& (0+255),c
  6776  001E40  0E19               	movlw	25
  6777  001E42  5C26               	subwf	??_TrybPracy,w,c
  6778  001E44  E203               	bc	l4845
  6779  001E46                     l37698:
  6780                           
  6781                           ; BSR set to: 1
  6782                           ;konsola.c: 320: {
  6783                           ;konsola.c: 321: PFN._prn_cs=1;
  6784  001E46  83BD               	bsf	(_PFN+3)& (0+255),1,b
  6785  001E48                     L2:
  6786                           
  6787                           ;konsola.c: 322: PFN._prn_in=0;
  6788  001E48  95BD               	bcf	(_PFN+3)& (0+255),2,b
  6789                           
  6790                           ;konsola.c: 323: }
  6791  001E4A  D02E               	goto	l4843
  6792  001E4C                     l4845:
  6793                           
  6794                           ; BSR set to: 1
  6795                           ;konsola.c: 324: else
  6796                           ;konsola.c: 325: {
  6797                           ;konsola.c: 326: PFN._prn_cs=0;
  6798  001E4C  93BD               	bcf	(_PFN+3)& (0+255),1,b
  6799                           
  6800                           ;konsola.c: 327: PFN._prn_in=1;
  6801  001E4E  85BD               	bsf	(_PFN+3)& (0+255),2,b
  6802  001E50  D02B               	goto	l4843
  6803  001E52                     l37700:
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;konsola.c: 330: else
  6807                           ;konsola.c: 331: {
  6808                           ;konsola.c: 332: if(ExtR2)
  6809  001E52  51F4               	movf	TrybPracy@ExtR2& (0+255),w,b
  6810  001E54  E01E               	bz	l4848
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;konsola.c: 333: {
  6814                           ;konsola.c: 334: if(PFN._errCS||PFN._fnoCS)
  6815  001E56  0101               	movlb	1	; () banked
  6816  001E58  BBBF               	btfsc	(_PFN+5)& (0+255),5,b
  6817  001E5A  D002               	goto	l37706
  6818                           
  6819                           ; BSR set to: 1
  6820  001E5C  A1C0               	btfss	(_PFN+6)& (0+255),0,b
  6821  001E5E  D008               	goto	l37710
  6822  001E60                     l37706:
  6823                           
  6824                           ; BSR set to: 1
  6825                           ;konsola.c: 335: {
  6826                           ;konsola.c: 336: if(RTdS(10)<50)
  6827  001E60  0E0A               	movlw	10
  6828  001E62  ECD5  F057         	call	_RTdS
  6829  001E66  6E26               	movwf	??_TrybPracy& (0+255),c
  6830  001E68  0E32               	movlw	50
  6831  001E6A  5C26               	subwf	??_TrybPracy,w,c
  6832  001E6C  E3EF               	bnc	l4845
  6833  001E6E  D01C               	goto	l4843
  6834  001E70                     l37710:
  6835                           
  6836                           ; BSR set to: 1
  6837                           ;konsola.c: 342: else
  6838                           ;konsola.c: 343: {
  6839                           ;konsola.c: 344: if(RTdS(10)<(50/2))
  6840  001E70  0E0A               	movlw	10
  6841  001E72  ECD5  F057         	call	_RTdS
  6842  001E76  6E26               	movwf	??_TrybPracy& (0+255),c
  6843  001E78  0E19               	movlw	25
  6844  001E7A  5C26               	subwf	??_TrybPracy,w,c
  6845  001E7C  B0D8               	btfsc	status,0,c
  6846                           
  6847                           ; BSR set to: 1
  6848                           ;konsola.c: 349: else
  6849                           ;konsola.c: 350: {
  6850                           ;konsola.c: 351: if(!PFN._errIN)
  6851  001E7E  B9C0               	btfsc	(_PFN+6)& (0+255),4,b
  6852  001E80  D7E2               	goto	l37698
  6853                           
  6854                           ; BSR set to: 1
  6855                           ;konsola.c: 352: {
  6856                           ;konsola.c: 353: if(RTdS(10)>=(50/2))
  6857  001E82  0E0A               	movlw	10
  6858  001E84  ECD5  F057         	call	_RTdS
  6859  001E88  6E26               	movwf	??_TrybPracy& (0+255),c
  6860  001E8A  0E19               	movlw	25
  6861  001E8C  5C26               	subwf	??_TrybPracy,w,c
  6862  001E8E  E2DE               	bc	l4845
  6863  001E90  D00B               	goto	l4843
  6864  001E92                     l4848:
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;konsola.c: 367: else
  6868                           ;konsola.c: 368: {
  6869                           ;konsola.c: 369: if(!(PFN._errCS||PFN._fnoCS))
  6870  001E92  0101               	movlb	1	; () banked
  6871  001E94  ABBF               	btfss	(_PFN+5)& (0+255),5,b
  6872                           
  6873                           ; BSR set to: 1
  6874  001E96  B1C0               	btfsc	(_PFN+6)& (0+255),0,b
  6875  001E98  D7CA               	goto	l37692
  6876                           
  6877                           ; BSR set to: 1
  6878                           ;konsola.c: 370: {
  6879                           ;konsola.c: 371: if(RTdS(10)<50)
  6880  001E9A  0E0A               	movlw	10
  6881  001E9C  ECD5  F057         	call	_RTdS
  6882  001EA0  6E26               	movwf	??_TrybPracy& (0+255),c
  6883  001EA2  0E32               	movlw	50
  6884  001EA4  5C26               	subwf	??_TrybPracy,w,c
  6885  001EA6  E3CF               	bnc	l37698
  6886  001EA8                     l4843:
  6887                           
  6888                           ; BSR set to: 1
  6889                           ;konsola.c: 381: }
  6890                           ;konsola.c: 382: }
  6891                           ;konsola.c: 383: }
  6892                           ;konsola.c: 384: }
  6893                           ;konsola.c: 386: if(!PFN._off&&(PFN._fnserw||PFN._ofnserw))
  6894  001EA8  B1BA               	btfsc	_PFN& (0+255),0,b
  6895  001EAA  D034               	goto	l37740
  6896                           
  6897                           ; BSR set to: 1
  6898  001EAC  BDBB               	btfsc	(_PFN+1)& (0+255),6,b
  6899  001EAE  D002               	goto	l37728
  6900                           
  6901                           ; BSR set to: 1
  6902  001EB0  AFBD               	btfss	(_PFN+3)& (0+255),7,b
  6903  001EB2  D030               	goto	l37740
  6904  001EB4                     l37728:
  6905                           
  6906                           ; BSR set to: 1
  6907                           ;konsola.c: 387: {
  6908                           ;konsola.c: 388: if(PresKeyEX(RdPrt(24),&ky[2])>0)
  6909  001EB4  0102               	movlb	2	; () banked
  6910  001EB6  0E02               	movlw	high (_ky+10)
  6911  001EB8  6E21               	movwf	?_PresKeyEX+1,c
  6912  001EBA  0E7F               	movlw	low (_ky+10)
  6913  001EBC  6E20               	movwf	?_PresKeyEX,c
  6914  001EBE  0E18               	movlw	24
  6915  001EC0  EC84  F058         	call	_RdPrt
  6916  001EC4  0E01               	movlw	1
  6917  001EC6  A0D8               	btfss	status,0,c
  6918  001EC8  0E00               	movlw	0
  6919  001ECA  EC43  F02F         	call	_PresKeyEX
  6920  001ECE  0900               	iorlw	0
  6921  001ED0  E009               	bz	l37734
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;konsola.c: 389: {
  6925                           ;konsola.c: 390: ResBufKeyEx(&ky[2]);
  6926  001ED2  0102               	movlb	2	; () banked
  6927  001ED4  0E02               	movlw	high (_ky+10)
  6928  001ED6  6E1F               	movwf	?_ResBufKeyEx+1,c
  6929  001ED8  0E7F               	movlw	low (_ky+10)
  6930  001EDA  6E1E               	movwf	?_ResBufKeyEx,c
  6931  001EDC  EC86  F056         	call	_ResBufKeyEx	;wreg free
  6932                           
  6933                           ; BSR set to: 2
  6934                           ;konsola.c: 391: PFN._fns_max=1;
  6935  001EE0  0101               	movlb	1	; () banked
  6936  001EE2  8FBB               	bsf	(_PFN+1)& (0+255),7,b
  6937  001EE4                     l37734:
  6938                           
  6939                           ;konsola.c: 392: }
  6940                           ;konsola.c: 393: if(PresKeyEX(RdPrt(25),&ky[3])>0)
  6941  001EE4  0102               	movlb	2	; () banked
  6942  001EE6  0E02               	movlw	high (_ky+15)
  6943  001EE8  6E21               	movwf	?_PresKeyEX+1,c
  6944  001EEA  0E84               	movlw	low (_ky+15)
  6945  001EEC  6E20               	movwf	?_PresKeyEX,c
  6946  001EEE  0E19               	movlw	25
  6947  001EF0  EC84  F058         	call	_RdPrt
  6948  001EF4  0E01               	movlw	1
  6949  001EF6  A0D8               	btfss	status,0,c
  6950  001EF8  0E00               	movlw	0
  6951  001EFA  EC43  F02F         	call	_PresKeyEX
  6952  001EFE  0900               	iorlw	0
  6953  001F00  E009               	bz	l37740
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;konsola.c: 394: {
  6957                           ;konsola.c: 395: ResBufKeyEx(&ky[3]);
  6958  001F02  0102               	movlb	2	; () banked
  6959  001F04  0E02               	movlw	high (_ky+15)
  6960  001F06  6E1F               	movwf	?_ResBufKeyEx+1,c
  6961  001F08  0E84               	movlw	low (_ky+15)
  6962  001F0A  6E1E               	movwf	?_ResBufKeyEx,c
  6963  001F0C  EC86  F056         	call	_ResBufKeyEx	;wreg free
  6964                           
  6965                           ; BSR set to: 2
  6966                           ;konsola.c: 396: PFN._fns_max=0;
  6967  001F10  0101               	movlb	1	; () banked
  6968  001F12  9FBB               	bcf	(_PFN+1)& (0+255),7,b
  6969  001F14                     l37740:
  6970                           
  6971                           ;konsola.c: 397: }
  6972                           ;konsola.c: 398: }
  6973                           ;konsola.c: 401: key=PresKeyEX(RdPrt(22),&ky[0]);
  6974  001F14  D859               	call	PL200	;call to abstracted procedure
  6975  001F16  EC84  F058         	call	_RdPrt
  6976  001F1A  0E01               	movlw	1
  6977  001F1C  A0D8               	btfss	status,0,c
  6978  001F1E  0E00               	movlw	0
  6979  001F20  EC43  F02F         	call	_PresKeyEX
  6980  001F24  6FF8               	movwf	TrybPracy@key& (0+255),b
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;konsola.c: 402: if(key==100)
  6984  001F26  51F8               	movf	TrybPracy@key& (0+255),w,b
  6985  001F28  0A64               	xorlw	100
  6986  001F2A  E13D               	bnz	l37798
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;konsola.c: 403: {
  6990                           ;konsola.c: 404: if(PFN._set_nco||PFN._set_ncw||PFN._str_nco||PFN._str_ncw||PFN._prn_res
      +                          ||PFN._set_fnserw||PFN._fnserw||PFN._set_aleg||PFN._aleg)
  6991  001F2C  0101               	movlb	1	; () banked
  6992  001F2E  AFBA               	btfss	_PFN& (0+255),7,b
  6993                           
  6994                           ; BSR set to: 1
  6995  001F30  B1BB               	btfsc	(_PFN+1)& (0+255),0,b
  6996  001F32  D00B               	goto	l37762
  6997                           
  6998                           ; BSR set to: 1
  6999  001F34  A7BA               	btfss	_PFN& (0+255),3,b
  7000                           
  7001                           ; BSR set to: 1
  7002  001F36  B9BA               	btfsc	_PFN& (0+255),4,b
  7003  001F38  D008               	goto	l37762
  7004                           
  7005                           ; BSR set to: 1
  7006  001F3A  A1BD               	btfss	(_PFN+3)& (0+255),0,b
  7007                           
  7008                           ; BSR set to: 1
  7009  001F3C  B9BB               	btfsc	(_PFN+1)& (0+255),4,b
  7010  001F3E  D005               	goto	l37762
  7011                           
  7012                           ; BSR set to: 1
  7013  001F40  ADBB               	btfss	(_PFN+1)& (0+255),6,b
  7014                           
  7015                           ; BSR set to: 1
  7016  001F42  BBBB               	btfsc	(_PFN+1)& (0+255),5,b
  7017  001F44  D002               	goto	l37762
  7018                           
  7019                           ; BSR set to: 1
  7020  001F46  A1BC               	btfss	(_PFN+2)& (0+255),0,b
  7021  001F48  D00E               	goto	l4869
  7022  001F4A                     l37762:
  7023                           
  7024                           ; BSR set to: 1
  7025                           ;konsola.c: 405: {
  7026                           ;konsola.c: 406: WaitToLowEx(&ky[0]);
  7027  001F4A  0102               	movlb	2	; () banked
  7028  001F4C  0E02               	movlw	high _ky
  7029  001F4E  6E1F               	movwf	?_WaitToLowEx+1,c
  7030  001F50  0E75               	movlw	low _ky
  7031  001F52  6E1E               	movwf	?_WaitToLowEx,c
  7032  001F54  EC53  F058         	call	_WaitToLowEx	;wreg free
  7033                           
  7034                           ; BSR set to: 2
  7035                           ;konsola.c: 407: PFN._set_nco=0;
  7036  001F58  0101               	movlb	1	; () banked
  7037  001F5A  9FBA               	bcf	_PFN& (0+255),7,b
  7038                           
  7039                           ; BSR set to: 1
  7040                           ;konsola.c: 408: PFN._set_ncw=0;
  7041  001F5C  91BB               	bcf	(_PFN+1)& (0+255),0,b
  7042                           
  7043                           ; BSR set to: 1
  7044                           ;konsola.c: 409: PFN._str_nco=0;
  7045  001F5E  97BA               	bcf	_PFN& (0+255),3,b
  7046                           
  7047                           ; BSR set to: 1
  7048                           ;konsola.c: 410: PFN._str_ncw=0;
  7049  001F60  99BA               	bcf	_PFN& (0+255),4,b
  7050                           
  7051                           ; BSR set to: 1
  7052                           ;konsola.c: 411: PFN._mod_ncw=0;
  7053  001F62  97BB               	bcf	(_PFN+1)& (0+255),3,b
  7054  001F64  D01B               	goto	L3
  7055  001F66                     l4869:
  7056                           
  7057                           ; BSR set to: 1
  7058                           ;konsola.c: 418: else
  7059                           ;konsola.c: 419: if(!PFN._off&&!PFN._ferr&&!PFN._fmsg)
  7060  001F66  A1BA               	btfss	_PFN& (0+255),0,b
  7061                           
  7062                           ; BSR set to: 1
  7063  001F68  B1BF               	btfsc	(_PFN+5)& (0+255),0,b
  7064  001F6A  D01D               	goto	l37798
  7065                           
  7066                           ; BSR set to: 1
  7067  001F6C  BFBE               	btfsc	(_PFN+4)& (0+255),7,b
  7068  001F6E  D01B               	goto	l37798
  7069                           
  7070                           ; BSR set to: 1
  7071                           ;konsola.c: 420: {
  7072                           ;konsola.c: 421: WaitToLowEx(&ky[0]);
  7073  001F70  0102               	movlb	2	; () banked
  7074  001F72  0E02               	movlw	high _ky
  7075  001F74  6E1F               	movwf	?_WaitToLowEx+1,c
  7076  001F76  0E75               	movlw	low _ky
  7077  001F78  6E1E               	movwf	?_WaitToLowEx,c
  7078  001F7A  EC53  F058         	call	_WaitToLowEx	;wreg free
  7079                           
  7080                           ; BSR set to: 2
  7081                           ;konsola.c: 422: if(!PFN._errCS||(PFN._fnoCS&&!PFN._errIN))
  7082  001F7E  0101               	movlb	1	; () banked
  7083  001F80  ABBF               	btfss	(_PFN+5)& (0+255),5,b
  7084  001F82  D003               	goto	l4876
  7085                           
  7086                           ; BSR set to: 1
  7087  001F84  B1C0               	btfsc	(_PFN+6)& (0+255),0,b
  7088                           
  7089                           ; BSR set to: 1
  7090  001F86  B9C0               	btfsc	(_PFN+6)& (0+255),4,b
  7091  001F88  D001               	goto	l37796
  7092  001F8A                     l4876:
  7093                           
  7094                           ; BSR set to: 1
  7095                           ;konsola.c: 423: {
  7096                           ;konsola.c: 424: PFN._prn_res=1;
  7097  001F8A  81BD               	bsf	(_PFN+3)& (0+255),0,b
  7098  001F8C                     l37796:
  7099                           
  7100                           ; BSR set to: 1
  7101                           ;konsola.c: 425: }
  7102                           ;konsola.c: 426: StartRTdS(10);
  7103  001F8C  0E0A               	movlw	10
  7104  001F8E  ECC2  F057         	call	_StartRTdS
  7105  001F92  D009               	goto	l37798
  7106  001F94                     l4794:
  7107                           
  7108                           ; BSR set to: 1
  7109                           ;konsola.c: 431: else
  7110                           ;konsola.c: 432: {
  7111                           ;konsola.c: 433: PFN._set_nco=0;
  7112  001F94  9FBA               	bcf	_PFN& (0+255),7,b
  7113                           
  7114                           ;konsola.c: 434: PFN._set_ncw=0;
  7115  001F96  91BB               	bcf	(_PFN+1)& (0+255),0,b
  7116                           
  7117                           ;konsola.c: 435: PFN._str_nco=0;
  7118  001F98  97BA               	bcf	_PFN& (0+255),3,b
  7119                           
  7120                           ;konsola.c: 436: PFN._str_ncw=0;
  7121  001F9A  99BA               	bcf	_PFN& (0+255),4,b
  7122  001F9C                     L3:
  7123                           
  7124                           ;konsola.c: 437: PFN._prn_res=0;
  7125  001F9C  91BD               	bcf	(_PFN+3)& (0+255),0,b
  7126                           
  7127                           ;konsola.c: 438: PFN._set_fnserw=0;
  7128  001F9E  99BB               	bcf	(_PFN+1)& (0+255),4,b
  7129                           
  7130                           ;konsola.c: 439: PFN._fnserw=0;
  7131  001FA0  9DBB               	bcf	(_PFN+1)& (0+255),6,b
  7132                           
  7133                           ;konsola.c: 440: PFN._set_aleg=0;
  7134  001FA2  9BBB               	bcf	(_PFN+1)& (0+255),5,b
  7135                           
  7136                           ;konsola.c: 441: PFN._aleg=0;
  7137  001FA4  91BC               	bcf	(_PFN+2)& (0+255),0,b
  7138  001FA6                     l37798:
  7139                           
  7140                           ;konsola.c: 442: }
  7141                           ;konsola.c: 444: if(RdPrt(22))
  7142  001FA6  0E16               	movlw	22
  7143  001FA8  EC84  F058         	call	_RdPrt
  7144  001FAC  E303               	bnc	l4878
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;konsola.c: 445: {
  7148                           ;konsola.c: 446: PFN._res=1;
  7149  001FAE  0101               	movlb	1	; () banked
  7150  001FB0  87BC               	bsf	(_PFN+2)& (0+255),3,b
  7151                           
  7152                           ;konsola.c: 447: }
  7153  001FB2  0012               	return	
  7154  001FB4                     l4878:
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;konsola.c: 448: else PFN._res=0;
  7158  001FB4  0101               	movlb	1	; () banked
  7159  001FB6  97BC               	bcf	(_PFN+2)& (0+255),3,b
  7160                           
  7161                           ; BSR set to: 1
  7162  001FB8  0012               	return	
  7163  001FBA                     __end_of_TrybPracy:
  7164                           	opt stack 0
  7165  001FBA                     PL130:
  7166                           	opt stack 24
  7167  001FBA  9FBA               	bcf	_PFN& (0+255),7,b
  7168  001FBC  93BB               	bcf	(_PFN+1)& (0+255),1,b
  7169  001FBE  91BB               	bcf	(_PFN+1)& (0+255),0,b
  7170  001FC0  95BB               	bcf	(_PFN+1)& (0+255),2,b
  7171  001FC2  99BB               	bcf	(_PFN+1)& (0+255),4,b
  7172  001FC4  9BBB               	bcf	(_PFN+1)& (0+255),5,b
  7173  001FC6  0012               	return	
  7174  001FC8                     __end_ofPL130:
  7175                           	opt stack 0
  7176  001FC8                     PL200:
  7177                           	opt stack 24
  7178  001FC8  0102               	movlb	2	; () banked
  7179  001FCA  0E02               	movlw	high _ky
  7180  001FCC  6E21               	movwf	?_PresKeyEX+1,c
  7181  001FCE  0E75               	movlw	low _ky
  7182  001FD0  6E20               	movwf	?_PresKeyEX,c
  7183  001FD2  0C16               	retlw	22
  7184  001FD4                     __end_ofPL200:
  7185                           	opt stack 0
  7186                           tblptru	equ	0xFF8
  7187                           tblptrh	equ	0xFF7
  7188                           tblptrl	equ	0xFF6
  7189                           tablat	equ	0xFF5
  7190                           prodh	equ	0xFF4
  7191                           prodl	equ	0xFF3
  7192                           intcon	equ	0xFF2
  7193                           postinc0	equ	0xFEE
  7194                           wreg	equ	0xFE8
  7195                           indf1	equ	0xFE7
  7196                           postinc1	equ	0xFE6
  7197                           postdec1	equ	0xFE5
  7198                           fsr1h	equ	0xFE2
  7199                           fsr1l	equ	0xFE1
  7200                           indf2	equ	0xFDF
  7201                           postinc2	equ	0xFDE
  7202                           postdec2	equ	0xFDD
  7203                           fsr2h	equ	0xFDA
  7204                           fsr2l	equ	0xFD9
  7205                           status	equ	0xFD8
  7206                           
  7207 ;; *************** function _FiltrPomiarowyCOCW *****************
  7208 ;; Defined at:
  7209 ;;		line 287 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
  7210 ;; Parameters:    Size  Location     Type
  7211 ;;		None
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;		None
  7214 ;; Return value:  Size  Location     Type
  7215 ;;		None               void
  7216 ;; Registers used:
  7217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7218 ;; Tracked objects:
  7219 ;;		On entry : F/1
  7220 ;;		On exit  : F/0
  7221 ;;		Unchanged: FFFFFFF0/0
  7222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7226 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7227 ;;Total ram usage:        1 bytes
  7228 ;; Hardware stack levels used:    1
  7229 ;; Hardware stack levels required when called:    6
  7230 ;; This function calls:
  7231 ;;		_PmrTim1
  7232 ;;		_StartTim1
  7233 ;;		_GoldenEye
  7234 ;;		_PmrTim2
  7235 ;;		_StartTim2
  7236 ;;		_FltParMod
  7237 ;; This function is called by:
  7238 ;;		_main
  7239 ;; This function uses a non-reentrant model
  7240 ;;
  7241                           
  7242                           	psect	text22
  7243  0092FC                     __ptext22:
  7244                           	opt stack 0
  7245  0092FC                     _FiltrPomiarowyCOCW:
  7246                           	opt stack 24
  7247                           
  7248                           ; BSR set to: 1
  7249                           ;pomiar.c: 290: if(PmrTim1(20))
  7250                           
  7251                           ; BSR set to: 1
  7252  0092FC  0E14               	movlw	20
  7253  0092FE  ECFB  F059         	call	_PmrTim1
  7254  009302  E304               	bnc	l29640
  7255                           
  7256                           ; BSR set to: 1
  7257                           ;pomiar.c: 291: {
  7258                           ;pomiar.c: 292: StartTim1();
  7259  009304  EC31  F05B         	call	_StartTim1	;wreg free
  7260                           
  7261                           ; BSR set to: 1
  7262                           ;pomiar.c: 293: GoldenEye();
  7263  009308  EC4C  F01F         	call	_GoldenEye	;wreg free
  7264  00930C                     l29640:
  7265                           
  7266                           ;pomiar.c: 294: }
  7267                           ;pomiar.c: 297: DtCO.DCO=(DtCO.PPCO-1)-DtCO.CO;
  7268  00930C  0100               	movlb	0	; () banked
  7269  00930E  51E6               	movf	(_DtCO+2)& (0+255),w,b
  7270  009310  5DE8               	subwf	(_DtCO+4)& (0+255),w,b
  7271  009312  6E26               	movwf	??_FiltrPomiarowyCOCW& (0+255),c
  7272  009314  0426               	decf	??_FiltrPomiarowyCOCW,w,c
  7273  009316  6FEC               	movwf	(_DtCO+8)& (0+255),b
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;pomiar.c: 299: DtCW.DCW=(DtCW.PPCW-(2-1))-DtCW.CW;
  7277  009318  51D1               	movf	(_DtCW+2)& (0+255),w,b
  7278  00931A  5DD3               	subwf	(_DtCW+4)& (0+255),w,b
  7279  00931C  6E26               	movwf	??_FiltrPomiarowyCOCW& (0+255),c
  7280  00931E  0426               	decf	??_FiltrPomiarowyCOCW,w,c
  7281  009320  6FD6               	movwf	(_DtCW+7)& (0+255),b
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;pomiar.c: 301: if(!DtIN._err_IN)
  7285  009322  0101               	movlb	1	; () banked
  7286  009324  B136               	btfsc	_DtIN& (0+255),0,b
  7287  009326  D018               	goto	l29654
  7288                           
  7289                           ; BSR set to: 1
  7290                           ;pomiar.c: 302: {
  7291                           ;pomiar.c: 304: if(DtCO.CO>DtIN.IN) DtIN.DIN=DtCO.CO-DtIN.IN;
  7292  009328  0100               	movlb	0	; () banked
  7293  00932A  51E6               	movf	(_DtCO+2)& (0+255),w,b
  7294  00932C  0101               	movlb	1	; () banked
  7295  00932E  6138               	cpfslt	(_DtIN+2)& (0+255),b
  7296  009330  D006               	goto	l1994
  7297                           
  7298                           ; BSR set to: 1
  7299  009332  5138               	movf	(_DtIN+2)& (0+255),w,b
  7300  009334  0100               	movlb	0	; () banked
  7301  009336  5DE6               	subwf	(_DtCO+2)& (0+255),w,b
  7302  009338  0101               	movlb	1	; () banked
  7303  00933A  6F39               	movwf	(_DtIN+3)& (0+255),b
  7304  00933C  D001               	goto	l29650
  7305  00933E                     l1994:
  7306                           
  7307                           ; BSR set to: 1
  7308                           ;pomiar.c: 305: else DtIN.DIN=0;
  7309  00933E  6B39               	clrf	(_DtIN+3)& (0+255),b
  7310  009340                     l29650:
  7311                           
  7312                           ; BSR set to: 1
  7313                           ;pomiar.c: 307: if((DtCO.PPCO-(1-1))>DtIN.IN) DtIN.DIN2=(DtCO.PPCO-(1-1))-DtIN.IN;
  7314  009340  0100               	movlb	0	; () banked
  7315  009342  51E8               	movf	(_DtCO+4)& (0+255),w,b
  7316  009344  0101               	movlb	1	; () banked
  7317  009346  6138               	cpfslt	(_DtIN+2)& (0+255),b
  7318  009348  D006               	goto	l1996
  7319                           
  7320                           ; BSR set to: 1
  7321  00934A  5138               	movf	(_DtIN+2)& (0+255),w,b
  7322  00934C  0100               	movlb	0	; () banked
  7323  00934E  5DE8               	subwf	(_DtCO+4)& (0+255),w,b
  7324  009350  0101               	movlb	1	; () banked
  7325  009352  6F3A               	movwf	(_DtIN+4)& (0+255),b
  7326  009354  D001               	goto	l29654
  7327  009356                     l1996:
  7328                           
  7329                           ; BSR set to: 1
  7330                           ;pomiar.c: 308: else DtIN.DIN2=0;
  7331  009356  6B3A               	clrf	(_DtIN+4)& (0+255),b
  7332  009358                     l29654:
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;pomiar.c: 309: }
  7336                           ;pomiar.c: 311: if(PmrTim2(10))
  7337  009358  0E0A               	movlw	10
  7338  00935A  EC04  F05A         	call	_PmrTim2
  7339  00935E  E304               	bnc	l29660
  7340                           
  7341                           ; BSR set to: 1
  7342                           ;pomiar.c: 312: {
  7343                           ;pomiar.c: 313: StartTim2();
  7344  009360  EC33  F05B         	call	_StartTim2	;wreg free
  7345                           
  7346                           ; BSR set to: 1
  7347                           ;pomiar.c: 314: FltParMod();
  7348  009364  EC5F  F047         	call	_FltParMod	;wreg free
  7349  009368                     l29660:
  7350                           
  7351                           ;pomiar.c: 315: }
  7352                           ;pomiar.c: 316: if(DtCO.dDCO>=6) DtCO._ldDCO=1;
  7353  009368  0100               	movlb	0	; () banked
  7354  00936A  51ED               	movf	(_DtCO+9)& (0+255),w,b
  7355  00936C  0A80               	xorlw	128
  7356  00936E  0F7A               	addlw	-134
  7357  009370  E302               	bnc	l1999
  7358                           
  7359                           ; BSR set to: 0
  7360  009372  89E5               	bsf	(_DtCO+1)& (0+255),4,b
  7361  009374  0012               	return	
  7362  009376                     l1999:
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;pomiar.c: 317: else DtCO._ldDCO=0;
  7366  009376  99E5               	bcf	(_DtCO+1)& (0+255),4,b
  7367                           
  7368                           ; BSR set to: 0
  7369  009378  0012               	return	
  7370  00937A                     __end_of_FiltrPomiarowyCOCW:
  7371                           	opt stack 0
  7372                           tblptru	equ	0xFF8
  7373                           tblptrh	equ	0xFF7
  7374                           tblptrl	equ	0xFF6
  7375                           tablat	equ	0xFF5
  7376                           prodh	equ	0xFF4
  7377                           prodl	equ	0xFF3
  7378                           intcon	equ	0xFF2
  7379                           postinc0	equ	0xFEE
  7380                           wreg	equ	0xFE8
  7381                           indf1	equ	0xFE7
  7382                           postinc1	equ	0xFE6
  7383                           postdec1	equ	0xFE5
  7384                           fsr1h	equ	0xFE2
  7385                           fsr1l	equ	0xFE1
  7386                           indf2	equ	0xFDF
  7387                           postinc2	equ	0xFDE
  7388                           postdec2	equ	0xFDD
  7389                           fsr2h	equ	0xFDA
  7390                           fsr2l	equ	0xFD9
  7391                           status	equ	0xFD8
  7392                           
  7393 ;; *************** function _DecWSW *****************
  7394 ;; Defined at:
  7395 ;;		line 936 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;		None
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;		None               void
  7402 ;; Registers used:
  7403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
      +u, prodl, prodh, bsr, cstack
  7404 ;; Tracked objects:
  7405 ;;		On entry : F/1
  7406 ;;		On exit  : F/1
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;Total ram usage:        3 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; Hardware stack levels required when called:    9
  7416 ;; This function calls:
  7417 ;;		_NastawaCOCW
  7418 ;;		_PrintErr
  7419 ;;		_PrintErrTm
  7420 ;;		_PrintErrCs
  7421 ;;		_EndErr
  7422 ;;		_PrintOFF
  7423 ;;		_EndOFF
  7424 ;;		_PrintCS
  7425 ;;		_EndCS
  7426 ;;		_PrintCW
  7427 ;;		_EndCW
  7428 ;;		_PrintCO
  7429 ;;		_PrintL3
  7430 ;;		_SetDiode
  7431 ;; This function is called by:
  7432 ;;		_main
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           	psect	text23
  7437  0033E2                     __ptext23:
  7438                           	opt stack 0
  7439  0033E2                     _DecWSW:
  7440                           	opt stack 21
  7441                           
  7442                           ; BSR set to: 1
  7443                           ;main.c: 938: if(PFN._ferr||PFN._fmsg)
  7444                           
  7445                           ; BSR set to: 0
  7446  0033E2  B1BF               	btfsc	(_PFN+5)& (0+255),0,b
  7447  0033E4  D002               	goto	l37806
  7448                           
  7449                           ; BSR set to: 1
  7450  0033E6  AFBE               	btfss	(_PFN+4)& (0+255),7,b
  7451  0033E8  D038               	goto	l37834
  7452  0033EA                     l37806:
  7453                           
  7454                           ; BSR set to: 1
  7455                           ;main.c: 939: {
  7456                           ;main.c: 940: NastawaCOCW();
  7457  0033EA  EC0D  F034         	call	_NastawaCOCW	;wreg free
  7458                           
  7459                           ; BSR set to: 1
  7460                           ;main.c: 941: if(PFN._ferr)
  7461  0033EE  A1BF               	btfss	(_PFN+5)& (0+255),0,b
  7462  0033F0  D037               	goto	l779
  7463                           
  7464                           ; BSR set to: 1
  7465                           ;main.c: 942: {
  7466                           ;main.c: 943: if(!PFN._KnfDisErr||PFN._opgres)
  7467  0033F2  ABBC               	btfss	(_PFN+2)& (0+255),5,b
  7468  0033F4  D002               	goto	l782
  7469                           
  7470                           ; BSR set to: 1
  7471  0033F6  A7BF               	btfss	(_PFN+5)& (0+255),3,b
  7472  0033F8  D030               	goto	l37834
  7473  0033FA                     l782:
  7474                           
  7475                           ; BSR set to: 1
  7476                           ;main.c: 944: {
  7477                           ;main.c: 945: if(PFN._opgres) PrintErr(PFN.KERR,1);
  7478  0033FA  A7BF               	btfss	(_PFN+5)& (0+255),3,b
  7479  0033FC  D006               	goto	l37816
  7480                           
  7481                           ; BSR set to: 1
  7482  0033FE  0E01               	movlw	1
  7483  003400  6E25               	movwf	?_PrintErr,c
  7484  003402  51CA               	movf	(_PFN+16)& (0+255),w,b
  7485  003404  ECA6  F047         	call	_PrintErr
  7486  003408  D031               	goto	l37842
  7487  00340A                     l37816:
  7488                           
  7489                           ; BSR set to: 1
  7490                           ;main.c: 946: else
  7491                           ;main.c: 947: if(PFN.KERR!=7&&PFN.KERR!=9&&PFN.KERR!=0x0E) PrintErr(PFN.KERR,1);
  7492  00340A  51CA               	movf	(_PFN+16)& (0+255),w,b
  7493  00340C  0A07               	xorlw	7
  7494  00340E  E00C               	bz	l37824
  7495                           
  7496                           ; BSR set to: 1
  7497  003410  51CA               	movf	(_PFN+16)& (0+255),w,b
  7498  003412  0A09               	xorlw	9
  7499  003414  E009               	bz	l37824
  7500                           
  7501                           ; BSR set to: 1
  7502  003416  51CA               	movf	(_PFN+16)& (0+255),w,b
  7503  003418  0A0E               	xorlw	14
  7504  00341A  E006               	bz	l37824
  7505                           
  7506                           ; BSR set to: 1
  7507  00341C  0E01               	movlw	1
  7508  00341E  6E25               	movwf	?_PrintErr,c
  7509  003420  51CA               	movf	(_PFN+16)& (0+255),w,b
  7510  003422  ECA6  F047         	call	_PrintErr
  7511  003426  D022               	goto	l37842
  7512  003428                     l37824:
  7513                           
  7514                           ; BSR set to: 1
  7515                           ;main.c: 948: else
  7516                           ;main.c: 949: {
  7517                           ;main.c: 950: if(PFN.KERR==7||PFN.KERR==0x0E)
  7518  003428  51CA               	movf	(_PFN+16)& (0+255),w,b
  7519  00342A  0A07               	xorlw	7
  7520  00342C  E003               	bz	l37828
  7521                           
  7522                           ; BSR set to: 1
  7523  00342E  51CA               	movf	(_PFN+16)& (0+255),w,b
  7524  003430  0A0E               	xorlw	14
  7525  003432  E108               	bnz	l37830
  7526  003434                     l37828:
  7527                           
  7528                           ; BSR set to: 1
  7529                           ;main.c: 951: {
  7530                           ;main.c: 952: PrintErrTm(PFN.KERR,PFN.CO,1);
  7531  003434  C1C3  F025         	movff	_PFN+9,?_PrintErrTm
  7532  003438  0E01               	movlw	1
  7533  00343A  6E26               	movwf	?_PrintErrTm+1,c
  7534  00343C  51CA               	movf	(_PFN+16)& (0+255),w,b
  7535  00343E  ECB8  F048         	call	_PrintErrTm
  7536                           
  7537                           ;main.c: 953: }
  7538  003442  D014               	goto	l37842
  7539  003444                     l37830:
  7540                           
  7541                           ; BSR set to: 1
  7542                           ;main.c: 954: else
  7543                           ;main.c: 955: if(PFN.KERR==9)
  7544  003444  51CA               	movf	(_PFN+16)& (0+255),w,b
  7545  003446  0A09               	xorlw	9
  7546  003448  E111               	bnz	l37842
  7547                           
  7548                           ; BSR set to: 1
  7549                           ;main.c: 956: {
  7550                           ;main.c: 957: PrintErrCs(PFN.KERR,PFN.CS,1);
  7551  00344A  C1C5  F025         	movff	_PFN+11,?_PrintErrCs
  7552  00344E  0E01               	movlw	1
  7553  003450  6E26               	movwf	?_PrintErrCs+1,c
  7554  003452  51CA               	movf	(_PFN+16)& (0+255),w,b
  7555  003454  ECFA  F048         	call	_PrintErrCs
  7556  003458  D009               	goto	l37842
  7557  00345A                     l37834:
  7558                           
  7559                           ; BSR set to: 1
  7560                           ;main.c: 961: else
  7561                           ;main.c: 962: {
  7562                           ;main.c: 963: EndErr();
  7563  00345A  EC55  F05A         	call	_EndErr	;wreg free
  7564  00345E  D006               	goto	l37842
  7565  003460                     l779:
  7566                           
  7567                           ; BSR set to: 1
  7568                           ;main.c: 966: else
  7569                           ;main.c: 967: {
  7570                           ;main.c: 968: if(!PFN._KnfDisErr)
  7571  003460  BBBC               	btfsc	(_PFN+2)& (0+255),5,b
  7572  003462  D7FB               	goto	l37834
  7573                           
  7574                           ; BSR set to: 1
  7575                           ;main.c: 969: {
  7576                           ;main.c: 970: PrintErr(PFN.KAWR,0);
  7577  003464  6A25               	clrf	?_PrintErr,c
  7578  003466  51C9               	movf	(_PFN+15)& (0+255),w,b
  7579  003468  ECA6  F047         	call	_PrintErr
  7580  00346C                     l37842:
  7581                           
  7582                           ; BSR set to: 1
  7583                           ;main.c: 977: }
  7584                           ;main.c: 979: if(!PFN._opKNF&&!PFN._ferr&&!PFN._fmsg)
  7585  00346C  A7BE               	btfss	(_PFN+4)& (0+255),3,b
  7586                           
  7587                           ; BSR set to: 1
  7588  00346E  B1BF               	btfsc	(_PFN+5)& (0+255),0,b
  7589  003470  D0EA               	goto	l37966
  7590                           
  7591                           ; BSR set to: 1
  7592  003472  BFBE               	btfsc	(_PFN+4)& (0+255),7,b
  7593  003474  D0E8               	goto	l37966
  7594                           
  7595                           ; BSR set to: 1
  7596                           ;main.c: 980: {
  7597                           ;main.c: 981: if(PFN._ofoff)
  7598  003476  A7C0               	btfss	(_PFN+6)& (0+255),3,b
  7599  003478  D031               	goto	l798
  7600                           
  7601                           ; BSR set to: 1
  7602                           ;main.c: 982: {
  7603                           ;main.c: 984: if((PFN._errCS||PFN._fnoCS)&&!PFN._tdzCO&&!PFN._tdzCW)
  7604  00347A  BBBF               	btfsc	(_PFN+5)& (0+255),5,b
  7605  00347C  D002               	goto	l801
  7606                           
  7607                           ; BSR set to: 1
  7608  00347E  A1C0               	btfss	(_PFN+6)& (0+255),0,b
  7609  003480  D006               	goto	l799
  7610  003482                     l801:
  7611                           
  7612                           ; BSR set to: 1
  7613  003482  ABBE               	btfss	(_PFN+4)& (0+255),5,b
  7614                           
  7615                           ; BSR set to: 1
  7616  003484  BDBE               	btfsc	(_PFN+4)& (0+255),6,b
  7617  003486  D003               	goto	l799
  7618  003488                     l37856:
  7619                           
  7620                           ; BSR set to: 1
  7621                           ;main.c: 985: {
  7622                           ;main.c: 986: PrintOFF();
  7623  003488  EC2B  F056         	call	_PrintOFF	;wreg free
  7624                           
  7625                           ;main.c: 987: }
  7626  00348C  D0DC               	goto	l37966
  7627  00348E                     l799:
  7628                           
  7629                           ; BSR set to: 1
  7630                           ;main.c: 988: else
  7631                           ;main.c: 989: {
  7632                           ;main.c: 990: if(!PFN._errCS&&!PFN._fnoCS&&!PFN._tdzCO&&!PFN._tdzCW)
  7633  00348E  ABBF               	btfss	(_PFN+5)& (0+255),5,b
  7634                           
  7635                           ; BSR set to: 1
  7636  003490  B1C0               	btfsc	(_PFN+6)& (0+255),0,b
  7637  003492  D00A               	goto	l803
  7638                           
  7639                           ; BSR set to: 1
  7640  003494  ABBE               	btfss	(_PFN+4)& (0+255),5,b
  7641                           
  7642                           ; BSR set to: 1
  7643  003496  BDBE               	btfsc	(_PFN+4)& (0+255),6,b
  7644  003498  D007               	goto	l803
  7645                           
  7646                           ; BSR set to: 1
  7647                           ;main.c: 991: {
  7648                           ;main.c: 992: EndOFF();
  7649  00349A  EC47  F059         	call	_EndOFF	;wreg free
  7650                           
  7651                           ;main.c: 993: PrintCS(PFN.CS);
  7652  00349E  0101               	movlb	1	; () banked
  7653  0034A0  51C5               	movf	(_PFN+11)& (0+255),w,b
  7654  0034A2  ECCB  F055         	call	_PrintCS
  7655                           
  7656                           ;main.c: 994: }
  7657  0034A6  D0CF               	goto	l37966
  7658  0034A8                     l803:
  7659                           
  7660                           ; BSR set to: 1
  7661                           ;main.c: 995: else
  7662                           ;main.c: 996: if(PFN._tdzCW&&!PFN._errCW)
  7663  0034A8  BDBE               	btfsc	(_PFN+4)& (0+255),6,b
  7664                           
  7665                           ; BSR set to: 1
  7666  0034AA  BFBF               	btfsc	(_PFN+5)& (0+255),7,b
  7667  0034AC  D009               	goto	l805
  7668                           
  7669                           ; BSR set to: 1
  7670                           ;main.c: 997: {
  7671                           ;main.c: 998: EndOFF();
  7672  0034AE  EC47  F059         	call	_EndOFF	;wreg free
  7673                           
  7674                           ;main.c: 999: EndCS();
  7675  0034B2  EC53  F059         	call	_EndCS	;wreg free
  7676                           
  7677                           ;main.c: 1000: PrintCW(PFN.CW);
  7678  0034B6  0101               	movlb	1	; () banked
  7679  0034B8  51C4               	movf	(_PFN+10)& (0+255),w,b
  7680  0034BA  ECE3  F055         	call	_PrintCW
  7681                           
  7682                           ;main.c: 1001: }
  7683  0034BE  D0C3               	goto	l37966
  7684  0034C0                     l805:
  7685                           
  7686                           ; BSR set to: 1
  7687                           ;main.c: 1002: else
  7688                           ;main.c: 1003: {
  7689                           ;main.c: 1005: if(PFN._tdzCO&&!PFN._errCO)
  7690  0034C0  BBBE               	btfsc	(_PFN+4)& (0+255),5,b
  7691                           
  7692                           ; BSR set to: 1
  7693  0034C2  BDBF               	btfsc	(_PFN+5)& (0+255),6,b
  7694  0034C4  D7E1               	goto	l37856
  7695                           
  7696                           ; BSR set to: 1
  7697                           ;main.c: 1006: {
  7698                           ;main.c: 1007: EndOFF();
  7699  0034C6  EC47  F059         	call	_EndOFF	;wreg free
  7700                           
  7701                           ;main.c: 1008: EndCS();
  7702  0034CA  EC53  F059         	call	_EndCS	;wreg free
  7703                           
  7704                           ;main.c: 1009: EndCW();
  7705  0034CE  ECA7  F059         	call	_EndCW	;wreg free
  7706                           
  7707                           ;main.c: 1010: PrintCO(PFN.CO);
  7708  0034D2  0101               	movlb	1	; () banked
  7709  0034D4  51C3               	movf	(_PFN+9)& (0+255),w,b
  7710  0034D6  EC63  F057         	call	_PrintCO
  7711                           
  7712                           ;main.c: 1011: }
  7713  0034DA  D0B5               	goto	l37966
  7714  0034DC                     l798:
  7715                           
  7716                           ; BSR set to: 1
  7717                           ;main.c: 1019: else
  7718                           ;main.c: 1020: {
  7719                           ;main.c: 1023: if(PFN._oflato)
  7720  0034DC  A5C0               	btfss	(_PFN+6)& (0+255),2,b
  7721  0034DE  D046               	goto	l810
  7722                           
  7723                           ; BSR set to: 1
  7724                           ;main.c: 1024: {
  7725                           ;main.c: 1025: if(!PFN._oaleg||PFN._set_aleg)
  7726  0034E0  A1BE               	btfss	(_PFN+4)& (0+255),0,b
  7727  0034E2  D002               	goto	l813
  7728                           
  7729                           ; BSR set to: 1
  7730  0034E4  ABBB               	btfss	(_PFN+1)& (0+255),5,b
  7731  0034E6  D036               	goto	l811
  7732  0034E8                     l813:
  7733                           
  7734                           ; BSR set to: 1
  7735                           ;main.c: 1026: {
  7736                           ;main.c: 1027: if(PFN._obgCO||PFN._tdzCO)
  7737  0034E8  B3BE               	btfsc	(_PFN+4)& (0+255),1,b
  7738  0034EA  D002               	goto	l816
  7739                           
  7740                           ; BSR set to: 1
  7741  0034EC  ABBE               	btfss	(_PFN+4)& (0+255),5,b
  7742  0034EE  D01B               	goto	l814
  7743  0034F0                     l816:
  7744                           
  7745                           ; BSR set to: 1
  7746                           ;main.c: 1028: {
  7747                           ;main.c: 1029: if(PFN._prn_res)
  7748  0034F0  A1BD               	btfss	(_PFN+3)& (0+255),0,b
  7749  0034F2  D009               	goto	l817
  7750                           
  7751                           ; BSR set to: 1
  7752                           ;main.c: 1030: {
  7753                           ;main.c: 1031: if(PFN._prn_cs)
  7754  0034F4  A3BD               	btfss	(_PFN+3)& (0+255),1,b
  7755  0034F6  D0A5               	goto	l37964
  7756                           
  7757                           ; BSR set to: 1
  7758                           ;main.c: 1032: {
  7759                           ;main.c: 1033: EndOFF();
  7760  0034F8  EC47  F059         	call	_EndOFF	;wreg free
  7761                           
  7762                           ;main.c: 1034: PrintCS(PFN.CS);
  7763  0034FC  0101               	movlb	1	; () banked
  7764  0034FE  51C5               	movf	(_PFN+11)& (0+255),w,b
  7765  003500  ECCB  F055         	call	_PrintCS
  7766  003504  D09E               	goto	l37964
  7767  003506                     l817:
  7768                           
  7769                           ; BSR set to: 1
  7770                           ;main.c: 1037: else
  7771                           ;main.c: 1038: {
  7772                           ;main.c: 1039: if(!PFN._errCO)
  7773  003506  BDBF               	btfsc	(_PFN+5)& (0+255),6,b
  7774  003508  D00B               	goto	l37888
  7775                           
  7776                           ; BSR set to: 1
  7777                           ;main.c: 1040: {
  7778                           ;main.c: 1041: EndOFF();
  7779  00350A  EC47  F059         	call	_EndOFF	;wreg free
  7780                           
  7781                           ;main.c: 1042: EndCS();
  7782  00350E  EC53  F059         	call	_EndCS	;wreg free
  7783                           
  7784                           ;main.c: 1043: EndCW();
  7785  003512  ECA7  F059         	call	_EndCW	;wreg free
  7786                           
  7787                           ;main.c: 1044: PrintCO(PFN.CO);
  7788  003516  0101               	movlb	1	; () banked
  7789  003518  51C3               	movf	(_PFN+9)& (0+255),w,b
  7790  00351A  EC63  F057         	call	_PrintCO
  7791                           
  7792                           ;main.c: 1045: }
  7793  00351E  D091               	goto	l37964
  7794  003520                     l37888:
  7795                           
  7796                           ; BSR set to: 1
  7797                           ;main.c: 1046: else
  7798                           ;main.c: 1047: {
  7799                           ;main.c: 1048: PrintOFF();
  7800  003520  EC2B  F056         	call	_PrintOFF	;wreg free
  7801  003524  D08E               	goto	l37964
  7802  003526                     l814:
  7803                           
  7804                           ; BSR set to: 1
  7805                           ;main.c: 1052: else
  7806                           ;main.c: 1053: {
  7807                           ;main.c: 1054: if(PFN._prn_res)
  7808  003526  A1BD               	btfss	(_PFN+3)& (0+255),0,b
  7809  003528  D009               	goto	l823
  7810                           
  7811                           ; BSR set to: 1
  7812                           ;main.c: 1055: {
  7813                           ;main.c: 1056: if(PFN._prn_cs)
  7814  00352A  A3BD               	btfss	(_PFN+3)& (0+255),1,b
  7815  00352C  D08A               	goto	l37964
  7816                           
  7817                           ; BSR set to: 1
  7818                           ;main.c: 1057: {
  7819                           ;main.c: 1058: EndOFF();
  7820  00352E  EC47  F059         	call	_EndOFF	;wreg free
  7821                           
  7822                           ;main.c: 1059: PrintCS(PFN.CS);
  7823  003532  0101               	movlb	1	; () banked
  7824  003534  51C5               	movf	(_PFN+11)& (0+255),w,b
  7825  003536  ECCB  F055         	call	_PrintCS
  7826  00353A  D083               	goto	l37964
  7827  00353C                     l823:
  7828                           
  7829                           ; BSR set to: 1
  7830                           ;main.c: 1062: else
  7831                           ;main.c: 1063: {
  7832                           ;main.c: 1064: if(!PFN._errCW&&PFN._obgCW)
  7833  00353C  AFBF               	btfss	(_PFN+5)& (0+255),7,b
  7834                           
  7835                           ; BSR set to: 1
  7836  00353E  A5BE               	btfss	(_PFN+4)& (0+255),2,b
  7837  003540  D7EF               	goto	l37888
  7838                           
  7839                           ; BSR set to: 1
  7840                           ;main.c: 1065: {
  7841                           ;main.c: 1066: EndOFF();
  7842  003542  EC47  F059         	call	_EndOFF	;wreg free
  7843                           
  7844                           ;main.c: 1067: EndCS();
  7845  003546  EC53  F059         	call	_EndCS	;wreg free
  7846                           
  7847                           ;main.c: 1068: PrintCW(PFN.CW);
  7848  00354A  0101               	movlb	1	; () banked
  7849  00354C  51C4               	movf	(_PFN+10)& (0+255),w,b
  7850  00354E  ECE3  F055         	call	_PrintCW
  7851                           
  7852                           ; BSR set to: 1
  7853                           ;main.c: 1073: }
  7854                           ;main.c: 1074: }
  7855                           ;main.c: 1075: }
  7856                           ;main.c: 1076: }
  7857                           
  7858                           ;main.c: 1069: }
  7859  003552  D077               	goto	l37964
  7860  003554                     l811:
  7861                           
  7862                           ; BSR set to: 1
  7863                           ;main.c: 1077: else
  7864                           ;main.c: 1078: {
  7865                           ;main.c: 1079: if(!PFN._errCW&&PFN._obgCW)
  7866  003554  AFBF               	btfss	(_PFN+5)& (0+255),7,b
  7867                           
  7868                           ; BSR set to: 1
  7869  003556  A5BE               	btfss	(_PFN+4)& (0+255),2,b
  7870  003558  D7E3               	goto	l37888
  7871                           
  7872                           ; BSR set to: 1
  7873                           ;main.c: 1080: {
  7874                           ;main.c: 1081: EndOFF();
  7875  00355A  EC47  F059         	call	_EndOFF	;wreg free
  7876                           
  7877                           ;main.c: 1082: EndCS();
  7878  00355E  EC53  F059         	call	_EndCS	;wreg free
  7879                           
  7880                           ;main.c: 1083: PrintCW(PFN.CW);
  7881  003562  0101               	movlb	1	; () banked
  7882  003564  51C4               	movf	(_PFN+10)& (0+255),w,b
  7883  003566  ECE3  F055         	call	_PrintCW
  7884                           
  7885                           ;main.c: 1084: }
  7886  00356A  D06B               	goto	l37964
  7887  00356C                     l810:
  7888                           
  7889                           ; BSR set to: 1
  7890                           ;main.c: 1091: else
  7891                           ;main.c: 1094: if(PFN._ofzima)
  7892  00356C  A3C0               	btfss	(_PFN+6)& (0+255),1,b
  7893  00356E  D069               	goto	l37964
  7894                           
  7895                           ; BSR set to: 1
  7896                           ;main.c: 1095: {
  7897                           ;main.c: 1096: if(!PFN._ofnserw&&!PFN._oaleg&&!PFN._set_fnserw&&!PFN._set_aleg)
  7898  003570  AFBD               	btfss	(_PFN+3)& (0+255),7,b
  7899                           
  7900                           ; BSR set to: 1
  7901  003572  B1BE               	btfsc	(_PFN+4)& (0+255),0,b
  7902  003574  D049               	goto	l833
  7903                           
  7904                           ; BSR set to: 1
  7905  003576  A9BB               	btfss	(_PFN+1)& (0+255),4,b
  7906                           
  7907                           ; BSR set to: 1
  7908  003578  BBBB               	btfsc	(_PFN+1)& (0+255),5,b
  7909  00357A  D046               	goto	l833
  7910                           
  7911                           ; BSR set to: 1
  7912                           ;main.c: 1097: {
  7913                           ;main.c: 1098: if(!PFN._obgCO&&!PFN._obgCW)
  7914  00357C  A3BE               	btfss	(_PFN+4)& (0+255),1,b
  7915                           
  7916                           ; BSR set to: 1
  7917  00357E  B5BE               	btfsc	(_PFN+4)& (0+255),2,b
  7918  003580  D013               	goto	l834
  7919                           
  7920                           ; BSR set to: 1
  7921                           ;main.c: 1099: {
  7922                           ;main.c: 1100: if(PFN._prn_res)
  7923  003582  A1BD               	btfss	(_PFN+3)& (0+255),0,b
  7924  003584  D00C               	goto	l835
  7925                           
  7926                           ; BSR set to: 1
  7927                           ;main.c: 1101: {
  7928                           ;main.c: 1102: if(PFN._prn_cs)
  7929  003586  A3BD               	btfss	(_PFN+3)& (0+255),1,b
  7930  003588  D007               	goto	l37924
  7931                           
  7932                           ; BSR set to: 1
  7933                           ;main.c: 1103: {
  7934                           ;main.c: 1104: EndOFF();
  7935  00358A  EC47  F059         	call	_EndOFF	;wreg free
  7936                           
  7937                           ;main.c: 1105: PrintCS(PFN.CS);
  7938  00358E  0101               	movlb	1	; () banked
  7939  003590  51C5               	movf	(_PFN+11)& (0+255),w,b
  7940  003592  ECCB  F055         	call	_PrintCS
  7941                           
  7942                           ;main.c: 1106: }
  7943  003596  D055               	goto	l37964
  7944  003598                     l37924:
  7945                           
  7946                           ; BSR set to: 1
  7947                           ;main.c: 1107: else EndCS();
  7948  003598  EC53  F059         	call	_EndCS	;wreg free
  7949  00359C  D052               	goto	l37964
  7950  00359E                     l835:
  7951                           
  7952                           ; BSR set to: 1
  7953                           ;main.c: 1111: else
  7954                           ;main.c: 1112: {
  7955                           ;main.c: 1113: if(PFN._fL3) PrintL3();
  7956  00359E  A3BF               	btfss	(_PFN+5)& (0+255),1,b
  7957  0035A0  D7BF               	goto	l37888
  7958                           
  7959                           ; BSR set to: 1
  7960  0035A2  EC2E  F046         	call	_PrintL3	;wreg free
  7961  0035A6  D04D               	goto	l37964
  7962  0035A8                     l834:
  7963                           
  7964                           ; BSR set to: 1
  7965                           ;main.c: 1120: else
  7966                           ;main.c: 1121: {
  7967                           ;main.c: 1122: if(PFN._obgCO)
  7968  0035A8  A3BE               	btfss	(_PFN+4)& (0+255),1,b
  7969  0035AA  D018               	goto	l842
  7970                           
  7971                           ; BSR set to: 1
  7972                           ;main.c: 1123: {
  7973                           ;main.c: 1124: if(PFN._prn_res)
  7974  0035AC  A1BD               	btfss	(_PFN+3)& (0+255),0,b
  7975  0035AE  D009               	goto	l843
  7976                           
  7977                           ; BSR set to: 1
  7978                           ;main.c: 1125: {
  7979                           ;main.c: 1126: if(PFN._prn_cs)
  7980  0035B0  A3BD               	btfss	(_PFN+3)& (0+255),1,b
  7981  0035B2  D7F2               	goto	l37924
  7982                           
  7983                           ; BSR set to: 1
  7984                           ;main.c: 1127: {
  7985                           ;main.c: 1128: EndOFF();
  7986  0035B4  EC47  F059         	call	_EndOFF	;wreg free
  7987                           
  7988                           ;main.c: 1129: PrintCS(PFN.CS);
  7989  0035B8  0101               	movlb	1	; () banked
  7990  0035BA  51C5               	movf	(_PFN+11)& (0+255),w,b
  7991  0035BC  ECCB  F055         	call	_PrintCS
  7992                           
  7993                           ;main.c: 1130: }
  7994  0035C0  D040               	goto	l37964
  7995  0035C2                     l843:
  7996                           
  7997                           ; BSR set to: 1
  7998                           ;main.c: 1135: else
  7999                           ;main.c: 1136: {
  8000                           ;main.c: 1137: if(!PFN._errCO)
  8001  0035C2  BDBF               	btfsc	(_PFN+5)& (0+255),6,b
  8002  0035C4  D7AD               	goto	l37888
  8003                           
  8004                           ; BSR set to: 1
  8005                           ;main.c: 1138: {
  8006                           ;main.c: 1139: EndOFF();
  8007  0035C6  EC47  F059         	call	_EndOFF	;wreg free
  8008                           
  8009                           ;main.c: 1140: EndCS();
  8010  0035CA  EC53  F059         	call	_EndCS	;wreg free
  8011                           
  8012                           ;main.c: 1141: EndCW();
  8013  0035CE  ECA7  F059         	call	_EndCW	;wreg free
  8014                           
  8015                           ;main.c: 1142: PrintCO(PFN.CO);
  8016  0035D2  0101               	movlb	1	; () banked
  8017  0035D4  51C3               	movf	(_PFN+9)& (0+255),w,b
  8018  0035D6  EC63  F057         	call	_PrintCO
  8019                           
  8020                           ;main.c: 1143: }
  8021  0035DA  D033               	goto	l37964
  8022  0035DC                     l842:
  8023                           
  8024                           ; BSR set to: 1
  8025                           ;main.c: 1147: else
  8026                           ;main.c: 1148: {
  8027                           ;main.c: 1149: if(PFN._prn_res)
  8028  0035DC  A1BD               	btfss	(_PFN+3)& (0+255),0,b
  8029  0035DE  D009               	goto	l850
  8030                           
  8031                           ; BSR set to: 1
  8032                           ;main.c: 1150: {
  8033                           ;main.c: 1151: if(PFN._prn_cs)
  8034  0035E0  A3BD               	btfss	(_PFN+3)& (0+255),1,b
  8035  0035E2  D02F               	goto	l37964
  8036                           
  8037                           ; BSR set to: 1
  8038                           ;main.c: 1152: {
  8039                           ;main.c: 1153: EndOFF();
  8040  0035E4  EC47  F059         	call	_EndOFF	;wreg free
  8041                           
  8042                           ;main.c: 1154: PrintCS(PFN.CS);
  8043  0035E8  0101               	movlb	1	; () banked
  8044  0035EA  51C5               	movf	(_PFN+11)& (0+255),w,b
  8045  0035EC  ECCB  F055         	call	_PrintCS
  8046  0035F0  D028               	goto	l37964
  8047  0035F2                     l850:
  8048                           
  8049                           ; BSR set to: 1
  8050                           ;main.c: 1157: else
  8051                           ;main.c: 1158: {
  8052                           ;main.c: 1160: if(!PFN._errCW)
  8053  0035F2  BFBF               	btfsc	(_PFN+5)& (0+255),7,b
  8054  0035F4  D795               	goto	l37888
  8055                           
  8056                           ; BSR set to: 1
  8057                           ;main.c: 1161: {
  8058                           ;main.c: 1162: EndOFF();
  8059  0035F6  EC47  F059         	call	_EndOFF	;wreg free
  8060                           
  8061                           ;main.c: 1163: EndCS();
  8062  0035FA  EC53  F059         	call	_EndCS	;wreg free
  8063                           
  8064                           ;main.c: 1164: PrintCW(PFN.CW);
  8065  0035FE  0101               	movlb	1	; () banked
  8066  003600  51C4               	movf	(_PFN+10)& (0+255),w,b
  8067  003602  ECE3  F055         	call	_PrintCW
  8068                           
  8069                           ;main.c: 1165: }
  8070  003606  D01D               	goto	l37964
  8071  003608                     l833:
  8072                           
  8073                           ; BSR set to: 1
  8074                           ;main.c: 1171: else
  8075                           ;main.c: 1172: {
  8076                           ;main.c: 1173: if(PFN._ofnserw||PFN._set_fnserw)
  8077  003608  BFBD               	btfsc	(_PFN+3)& (0+255),7,b
  8078  00360A  D002               	goto	l858
  8079                           
  8080                           ; BSR set to: 1
  8081  00360C  A9BB               	btfss	(_PFN+1)& (0+255),4,b
  8082  00360E  D00E               	goto	l856
  8083  003610                     l858:
  8084                           
  8085                           ; BSR set to: 1
  8086                           ;main.c: 1174: {
  8087                           ;main.c: 1175: if(!PFN._errCO&&PFN._obgCO)
  8088  003610  ADBF               	btfss	(_PFN+5)& (0+255),6,b
  8089                           
  8090                           ; BSR set to: 1
  8091  003612  A3BE               	btfss	(_PFN+4)& (0+255),1,b
  8092  003614  D785               	goto	l37888
  8093                           
  8094                           ; BSR set to: 1
  8095                           ;main.c: 1176: {
  8096                           ;main.c: 1177: EndOFF();
  8097  003616  EC47  F059         	call	_EndOFF	;wreg free
  8098                           
  8099                           ;main.c: 1178: EndCS();
  8100  00361A  EC53  F059         	call	_EndCS	;wreg free
  8101                           
  8102                           ;main.c: 1179: EndCW();
  8103  00361E  ECA7  F059         	call	_EndCW	;wreg free
  8104                           
  8105                           ;main.c: 1180: PrintCO(PFN.CO);
  8106  003622  0101               	movlb	1	; () banked
  8107  003624  51C3               	movf	(_PFN+9)& (0+255),w,b
  8108  003626  EC63  F057         	call	_PrintCO
  8109                           
  8110                           ;main.c: 1181: }
  8111  00362A  D00B               	goto	l37964
  8112  00362C                     l856:
  8113                           
  8114                           ; BSR set to: 1
  8115                           ;main.c: 1184: else
  8116                           ;main.c: 1185: {
  8117                           ;main.c: 1186: if(!PFN._errCW&&PFN._obgCW)
  8118  00362C  AFBF               	btfss	(_PFN+5)& (0+255),7,b
  8119                           
  8120                           ; BSR set to: 1
  8121  00362E  A5BE               	btfss	(_PFN+4)& (0+255),2,b
  8122  003630  D777               	goto	l37888
  8123                           
  8124                           ; BSR set to: 1
  8125                           ;main.c: 1187: {
  8126                           ;main.c: 1188: EndOFF();
  8127  003632  EC47  F059         	call	_EndOFF	;wreg free
  8128                           
  8129                           ;main.c: 1189: EndCS();
  8130  003636  EC53  F059         	call	_EndCS	;wreg free
  8131                           
  8132                           ;main.c: 1190: PrintCW(PFN.CW);
  8133  00363A  0101               	movlb	1	; () banked
  8134  00363C  51C4               	movf	(_PFN+10)& (0+255),w,b
  8135  00363E  ECE3  F055         	call	_PrintCW
  8136  003642                     l37964:
  8137                           
  8138                           ;main.c: 1193: }
  8139                           ;main.c: 1194: }
  8140                           ;main.c: 1195: }
  8141                           ;main.c: 1198: NastawaCOCW();
  8142  003642  EC0D  F034         	call	_NastawaCOCW	;wreg free
  8143  003646                     l37966:
  8144                           
  8145                           ;main.c: 1200: }
  8146                           ;main.c: 1201: }
  8147                           ;main.c: 1203: SetDiode(0b00000010,PFN._plmCW||PFN._plmCO);
  8148  003646  0E01               	movlw	1
  8149  003648  0101               	movlb	1	; () banked
  8150  00364A  6FFD               	movwf	_DecWSW$2086& (0+255),b
  8151                           
  8152                           ; BSR set to: 1
  8153  00364C  ADBD               	btfss	(_PFN+3)& (0+255),6,b
  8154                           
  8155                           ; BSR set to: 1
  8156  00364E  BBBD               	btfsc	(_PFN+3)& (0+255),5,b
  8157  003650  D001               	goto	l37974
  8158                           
  8159                           ; BSR set to: 1
  8160  003652  6BFD               	clrf	_DecWSW$2086& (0+255),b
  8161  003654                     l37974:
  8162                           
  8163                           ; BSR set to: 1
  8164  003654  C1FD  F01F         	movff	_DecWSW$2086,?_SetDiode
  8165  003658  0E02               	movlw	2
  8166  00365A  ECDE  F059         	call	_SetDiode
  8167                           
  8168                           ;main.c: 1205: SetDiode(0b00000100,PFN._ofnserw);
  8169  00365E  0E00               	movlw	0
  8170  003660  BFBD               	btfsc	(_PFN+3)& (0+255),7,b
  8171  003662  0E01               	movlw	1
  8172  003664  6E1F               	movwf	?_SetDiode,c
  8173  003666  0E04               	movlw	4
  8174  003668  ECDE  F059         	call	_SetDiode
  8175                           
  8176                           ; BSR set to: 1
  8177                           ;main.c: 1207: SetDiode(0b00000001,PFN._ofzima&&!PFN._ofoff&&!PFN._opKNF);
  8178  00366C  6BFE               	clrf	_DecWSW$2087& (0+255),b
  8179                           
  8180                           ; BSR set to: 1
  8181  00366E  B3C0               	btfsc	(_PFN+6)& (0+255),1,b
  8182                           
  8183                           ; BSR set to: 1
  8184  003670  B7C0               	btfsc	(_PFN+6)& (0+255),3,b
  8185  003672  D004               	goto	l37986
  8186                           
  8187                           ; BSR set to: 1
  8188  003674  B7BE               	btfsc	(_PFN+4)& (0+255),3,b
  8189  003676  D002               	goto	l37986
  8190                           
  8191                           ; BSR set to: 1
  8192  003678  0E01               	movlw	1
  8193  00367A  6FFE               	movwf	_DecWSW$2087& (0+255),b
  8194  00367C                     l37986:
  8195                           
  8196                           ; BSR set to: 1
  8197  00367C  C1FE  F01F         	movff	_DecWSW$2087,?_SetDiode
  8198  003680  0E01               	movlw	1
  8199  003682  ECDE  F059         	call	_SetDiode
  8200                           
  8201                           ; BSR set to: 1
  8202                           ;main.c: 1208: SetDiode(0b00001000,(PFN._ofzima||PFN._oflato)&&!PFN._ofoff&&!PFN._opKNF);
  8203  003686  6BFF               	clrf	_DecWSW$2088& (0+255),b
  8204                           
  8205                           ; BSR set to: 1
  8206  003688  B3C0               	btfsc	(_PFN+6)& (0+255),1,b
  8207  00368A  D002               	goto	l36626
  8208                           
  8209                           ; BSR set to: 1
  8210  00368C  A5C0               	btfss	(_PFN+6)& (0+255),2,b
  8211  00368E  D005               	goto	l37998
  8212  003690                     l36626:
  8213                           
  8214                           ; BSR set to: 1
  8215  003690  A7C0               	btfss	(_PFN+6)& (0+255),3,b
  8216                           
  8217                           ; BSR set to: 1
  8218  003692  B7BE               	btfsc	(_PFN+4)& (0+255),3,b
  8219  003694  D002               	goto	l37998
  8220                           
  8221                           ; BSR set to: 1
  8222  003696  0E01               	movlw	1
  8223  003698  6FFF               	movwf	_DecWSW$2088& (0+255),b
  8224  00369A                     l37998:
  8225                           
  8226                           ; BSR set to: 1
  8227  00369A  C1FF  F01F         	movff	_DecWSW$2088,?_SetDiode
  8228  00369E  0E08               	movlw	8
  8229  0036A0  EFDE  F059         	goto	_SetDiode
  8230  0036A4                     __end_of_DecWSW:
  8231                           	opt stack 0
  8232                           tblptru	equ	0xFF8
  8233                           tblptrh	equ	0xFF7
  8234                           tblptrl	equ	0xFF6
  8235                           tablat	equ	0xFF5
  8236                           prodh	equ	0xFF4
  8237                           prodl	equ	0xFF3
  8238                           intcon	equ	0xFF2
  8239                           postinc0	equ	0xFEE
  8240                           wreg	equ	0xFE8
  8241                           indf1	equ	0xFE7
  8242                           postinc1	equ	0xFE6
  8243                           postdec1	equ	0xFE5
  8244                           fsr1h	equ	0xFE2
  8245                           fsr1l	equ	0xFE1
  8246                           indf2	equ	0xFDF
  8247                           postinc2	equ	0xFDE
  8248                           postdec2	equ	0xFDD
  8249                           fsr2h	equ	0xFDA
  8250                           fsr2l	equ	0xFD9
  8251                           status	equ	0xFD8
  8252                           
  8253 ;; *************** function _DecERR *****************
  8254 ;; Defined at:
  8255 ;;		line 1215 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;		None
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  w               1   10[BANK0 ] unsigned char 
  8260 ;;  KnfDisErr       1    0        unsigned char 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;		None               void
  8263 ;; Registers used:
  8264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8265 ;; Tracked objects:
  8266 ;;		On entry : F/1
  8267 ;;		On exit  : E/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;Total ram usage:        3 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    9
  8277 ;; This function calls:
  8278 ;;		_RdPrt
  8279 ;;		_SetErr
  8280 ;;		_ErrPTG
  8281 ;;		_EndErr
  8282 ;;		_SetMsg
  8283 ;;		_StartRTS
  8284 ;;		_PrintErr
  8285 ;; This function is called by:
  8286 ;;		_main
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           	psect	text24
  8291  002E10                     __ptext24:
  8292                           	opt stack 0
  8293  002E10                     _DecERR:
  8294                           	opt stack 21
  8295                           
  8296                           ; BSR set to: 1
  8297                           ;main.c: 1217: unsigned char w;
  8298                           ;main.c: 1226: if(!RdPrt(4))
  8299                           
  8300                           ; BSR set to: 1
  8301  002E10  0E04               	movlw	4
  8302  002E12  EC84  F058         	call	_RdPrt
  8303  002E16  E206               	bc	l38008
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;main.c: 1227: {
  8307                           ;main.c: 1228: M.ERR_BTY=0x02;
  8308  002E18  0E02               	movlw	2
  8309  002E1A  6F82               	movwf	(_M+34)& (0+255),b
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;main.c: 1230: SetErr(0x02);
  8313  002E1C  EC74  F05A         	call	_SetErr
  8314                           
  8315                           ; BSR set to: 1
  8316                           ;main.c: 1231: ErrPTG();
  8317  002E20  EC27  F02C         	call	_ErrPTG	;wreg free
  8318  002E24                     l38008:
  8319                           
  8320                           ;main.c: 1232: }
  8321                           ;main.c: 1234: if(M._RUSZ_PLOMIEN)
  8322  002E24  0100               	movlb	0	; () banked
  8323  002E26  A171               	btfss	(_M+17)& (0+255),0,b
  8324  002E28  D012               	goto	l874
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;main.c: 1235: {
  8328                           ;main.c: 1236: M.ERR_BTY=0;
  8329  002E2A  6B82               	clrf	(_M+34)& (0+255),b
  8330                           
  8331                           ;main.c: 1239: if(PFN._KnfDisErr) EndErr();
  8332  002E2C  0101               	movlb	1	; () banked
  8333  002E2E  ABBC               	btfss	(_PFN+2)& (0+255),5,b
  8334  002E30  D003               	goto	l38014
  8335  002E32                     l38012:
  8336                           
  8337                           ; BSR set to: 1
  8338  002E32  EC55  F05A         	call	_EndErr	;wreg free
  8339  002E36  D003               	goto	l38016
  8340  002E38                     l38014:
  8341                           
  8342                           ; BSR set to: 1
  8343                           ;main.c: 1240: else SetMsg(0x01);
  8344  002E38  0E01               	movlw	1
  8345  002E3A  EC7B  F05A         	call	_SetMsg
  8346  002E3E                     l38016:
  8347                           
  8348                           ;main.c: 1241: M._RUSZ_NTC_CO=0;
  8349  002E3E  0100               	movlb	0	; () banked
  8350  002E40  917A               	bcf	(_M+26)& (0+255),0,b
  8351  002E42                     l38018:
  8352                           
  8353                           ;main.c: 1242: M._RUSZ_CISN=0;
  8354  002E42  0100               	movlb	0	; () banked
  8355  002E44  9B7A               	bcf	(_M+26)& (0+255),5,b
  8356                           
  8357                           ; BSR set to: 0
  8358                           ;main.c: 1243: M._RUSZ_NCISN=0;
  8359  002E46  9D7A               	bcf	(_M+26)& (0+255),6,b
  8360  002E48                     l38022:
  8361                           
  8362                           ; BSR set to: 0
  8363                           ;main.c: 1244: M._RUSZ_NTC_CW=0;
  8364  002E48  937A               	bcf	(_M+26)& (0+255),1,b
  8365  002E4A                     l38024:
  8366                           
  8367                           ; BSR set to: 0
  8368                           ;main.c: 1245: M._RUSZ_MOD=0;
  8369  002E4A  997A               	bcf	(_M+26)& (0+255),4,b
  8370                           
  8371                           ;main.c: 1246: }
  8372  002E4C  D0F0               	goto	l877
  8373  002E4E                     l874:
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;main.c: 1247: else
  8377                           ;main.c: 1248: if(M._RUSZ_CIAG)
  8378  002E4E  AF70               	btfss	(_M+16)& (0+255),7,b
  8379  002E50  D00B               	goto	l38042
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;main.c: 1249: {
  8383                           ;main.c: 1250: M.ERR_BTY=0;
  8384  002E52  6B82               	clrf	(_M+34)& (0+255),b
  8385                           
  8386                           ;main.c: 1259: if(PFN._KnfDisErr) EndErr();
  8387  002E54  0101               	movlb	1	; () banked
  8388  002E56  BBBC               	btfsc	(_PFN+2)& (0+255),5,b
  8389  002E58  D7EC               	goto	l38012
  8390                           
  8391                           ; BSR set to: 1
  8392                           ;main.c: 1260: else
  8393                           ;main.c: 1261: {
  8394                           ;main.c: 1262: if(M._prb_CIG) SetMsg(0x03);
  8395  002E5A  0100               	movlb	0	; () banked
  8396  002E5C  A17C               	btfss	(_M+28)& (0+255),0,b
  8397  002E5E  D7EF               	goto	l38016
  8398                           
  8399                           ; BSR set to: 0
  8400  002E60  0E03               	movlw	3
  8401  002E62  EC7B  F05A         	call	_SetMsg
  8402  002E66  D7EB               	goto	l38016
  8403  002E68                     l38042:
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;main.c: 1270: else
  8407                           ;main.c: 1272: if((RdPrt(18)&&(DtKNF.tpkt!=1)&&(DtKNF.tpkt!=2))||(RdPrt(18)&&!M._pob_KCW
      +                          &&!M._pob_CW&&(DtKNF.tpkt==1||DtKNF.tpkt==2)))
  8408  002E68  0E12               	movlw	18
  8409  002E6A  EC84  F058         	call	_RdPrt
  8410  002E6E  E306               	bnc	l38048
  8411                           
  8412                           ; BSR set to: 0
  8413  002E70  0101               	movlb	1	; () banked
  8414  002E72  0551               	decf	(_DtKNF+7)& (0+255),w,b
  8415  002E74  E003               	bz	l38048
  8416                           
  8417                           ; BSR set to: 1
  8418  002E76  5151               	movf	(_DtKNF+7)& (0+255),w,b
  8419  002E78  0A02               	xorlw	2
  8420  002E7A  E110               	bnz	l38058
  8421  002E7C                     l38048:
  8422  002E7C  0E12               	movlw	18
  8423  002E7E  EC84  F058         	call	_RdPrt
  8424  002E82  E31B               	bnc	l883
  8425                           
  8426                           ; BSR set to: 0
  8427  002E84  5163               	movf	(_M+3)& (0+255),w,b
  8428  002E86  1162               	iorwf	(_M+2)& (0+255),w,b
  8429  002E88  E118               	bnz	l883
  8430                           
  8431                           ; BSR set to: 0
  8432  002E8A  5169               	movf	(_M+9)& (0+255),w,b
  8433  002E8C  1168               	iorwf	(_M+8)& (0+255),w,b
  8434  002E8E  E115               	bnz	l883
  8435                           
  8436                           ; BSR set to: 0
  8437  002E90  0101               	movlb	1	; () banked
  8438  002E92  0551               	decf	(_DtKNF+7)& (0+255),w,b
  8439  002E94  E003               	bz	l38058
  8440                           
  8441                           ; BSR set to: 1
  8442  002E96  5151               	movf	(_DtKNF+7)& (0+255),w,b
  8443  002E98  0A02               	xorlw	2
  8444  002E9A  E10F               	bnz	l883
  8445  002E9C                     l38058:
  8446                           
  8447                           ; BSR set to: 1
  8448                           ;main.c: 1273: {
  8449                           ;main.c: 1274: M.ERR_BTY=0x04;
  8450  002E9C  0E04               	movlw	4
  8451  002E9E  0100               	movlb	0	; () banked
  8452  002EA0  6F82               	movwf	(_M+34)& (0+255),b
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;main.c: 1277: if(PFN._KnfDisErr) EndErr();
  8456  002EA2  0101               	movlb	1	; () banked
  8457  002EA4  ABBC               	btfss	(_PFN+2)& (0+255),5,b
  8458  002EA6  D003               	goto	l38064
  8459                           
  8460                           ; BSR set to: 1
  8461  002EA8  EC55  F05A         	call	_EndErr	;wreg free
  8462  002EAC  D003               	goto	l38066
  8463  002EAE                     l38064:
  8464                           
  8465                           ; BSR set to: 1
  8466                           ;main.c: 1278: else SetErr(0x04);
  8467  002EAE  0E04               	movlw	4
  8468  002EB0  EC74  F05A         	call	_SetErr
  8469  002EB4                     l38066:
  8470                           
  8471                           ; BSR set to: 1
  8472                           ;main.c: 1279: M._RUSZ_NTC_CO=1;
  8473  002EB4  0100               	movlb	0	; () banked
  8474  002EB6  817A               	bsf	(_M+26)& (0+255),0,b
  8475  002EB8  D7C4               	goto	l38018
  8476  002EBA                     l883:
  8477                           
  8478                           ;main.c: 1285: else
  8479                           ;main.c: 1286: {
  8480                           ;main.c: 1287: M._RUSZ_NTC_CO=0;
  8481  002EBA  0100               	movlb	0	; () banked
  8482  002EBC  917A               	bcf	(_M+26)& (0+255),0,b
  8483                           
  8484                           ;main.c: 1289: if(M._RUSZ_POMPE)
  8485  002EBE  A571               	btfss	(_M+17)& (0+255),2,b
  8486  002EC0  D00E               	goto	l38090
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;main.c: 1290: {
  8490                           ;main.c: 1291: M.ERR_BTY=0;
  8491  002EC2  6B82               	clrf	(_M+34)& (0+255),b
  8492                           
  8493                           ;main.c: 1297: if(PFN._KnfDisErr) EndErr();
  8494  002EC4  0101               	movlb	1	; () banked
  8495  002EC6  ABBC               	btfss	(_PFN+2)& (0+255),5,b
  8496  002EC8  D003               	goto	l894
  8497                           
  8498                           ; BSR set to: 1
  8499  002ECA  EC55  F05A         	call	_EndErr	;wreg free
  8500  002ECE  D7B9               	goto	l38018
  8501  002ED0                     l894:
  8502                           
  8503                           ; BSR set to: 1
  8504                           ;main.c: 1298: else
  8505                           ;main.c: 1299: {
  8506                           ;main.c: 1300: if(M._prb_PRZ) SetMsg(0x05);
  8507  002ED0  0100               	movlb	0	; () banked
  8508  002ED2  A37C               	btfss	(_M+28)& (0+255),1,b
  8509  002ED4  D7B6               	goto	l38018
  8510                           
  8511                           ; BSR set to: 0
  8512  002ED6  0E05               	movlw	5
  8513  002ED8  EC7B  F05A         	call	_SetMsg
  8514  002EDC  D7B2               	goto	l38018
  8515  002EDE                     l38090:
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;main.c: 1307: else
  8519                           ;main.c: 1308: {
  8520                           ;main.c: 1310: if(RdPrt(14))
  8521  002EDE  0E0E               	movlw	14
  8522  002EE0  EC84  F058         	call	_RdPrt
  8523  002EE4  E30F               	bnc	l898
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;main.c: 1311: {
  8527                           ;main.c: 1312: M.ERR_BTY=0x08;
  8528  002EE6  0E08               	movlw	8
  8529  002EE8  6F82               	movwf	(_M+34)& (0+255),b
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;main.c: 1315: if(PFN._KnfDisErr) EndErr();
  8533  002EEA  0101               	movlb	1	; () banked
  8534  002EEC  ABBC               	btfss	(_PFN+2)& (0+255),5,b
  8535  002EEE  D003               	goto	l38098
  8536                           
  8537                           ; BSR set to: 1
  8538  002EF0  EC55  F05A         	call	_EndErr	;wreg free
  8539  002EF4  D003               	goto	l38100
  8540  002EF6                     l38098:
  8541                           
  8542                           ; BSR set to: 1
  8543                           ;main.c: 1316: else SetErr(0x08);
  8544  002EF6  0E08               	movlw	8
  8545  002EF8  EC74  F05A         	call	_SetErr
  8546  002EFC                     l38100:
  8547                           
  8548                           ; BSR set to: 1
  8549                           ;main.c: 1317: M._RUSZ_NCISN=1;
  8550  002EFC  0100               	movlb	0	; () banked
  8551  002EFE  8D7A               	bsf	(_M+26)& (0+255),6,b
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;main.c: 1318: M._RUSZ_CISN=0;
  8555  002F00  9B7A               	bcf	(_M+26)& (0+255),5,b
  8556  002F02  D7A2               	goto	l38022
  8557  002F04                     l898:
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;main.c: 1322: else
  8561                           ;main.c: 1323: {
  8562                           ;main.c: 1324: M._RUSZ_NCISN=0;
  8563  002F04  9D7A               	bcf	(_M+26)& (0+255),6,b
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;main.c: 1326: if(!RdPrt(15))
  8567  002F06  0E0F               	movlw	15
  8568  002F08  EC84  F058         	call	_RdPrt
  8569  002F0C  E20E               	bc	l902
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;main.c: 1327: {
  8573                           ;main.c: 1329: M.ERR_BTY=0x09;
  8574  002F0E  0E09               	movlw	9
  8575  002F10  6F82               	movwf	(_M+34)& (0+255),b
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;main.c: 1332: if(PFN._KnfDisErr) EndErr();
  8579  002F12  0101               	movlb	1	; () banked
  8580  002F14  ABBC               	btfss	(_PFN+2)& (0+255),5,b
  8581  002F16  D003               	goto	l38116
  8582                           
  8583                           ; BSR set to: 1
  8584  002F18  EC55  F05A         	call	_EndErr	;wreg free
  8585  002F1C  D003               	goto	l38118
  8586  002F1E                     l38116:
  8587                           
  8588                           ; BSR set to: 1
  8589                           ;main.c: 1333: else SetErr(0x09);
  8590  002F1E  0E09               	movlw	9
  8591  002F20  EC74  F05A         	call	_SetErr
  8592  002F24                     l38118:
  8593                           
  8594                           ; BSR set to: 1
  8595                           ;main.c: 1335: M._RUSZ_CISN=1;
  8596  002F24  0100               	movlb	0	; () banked
  8597  002F26  8B7A               	bsf	(_M+26)& (0+255),5,b
  8598  002F28  D78F               	goto	l38022
  8599  002F2A                     l902:
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;main.c: 1339: else
  8603                           ;main.c: 1340: {
  8604                           ;main.c: 1341: M._RUSZ_CISN=0;
  8605  002F2A  9B7A               	bcf	(_M+26)& (0+255),5,b
  8606                           
  8607                           ; BSR set to: 0
  8608                           ;main.c: 1342: if(DtKNF.tpkt!=0)
  8609  002F2C  0101               	movlb	1	; () banked
  8610  002F2E  5151               	movf	(_DtKNF+7)& (0+255),w,b
  8611  002F30  E020               	bz	l38142
  8612                           
  8613                           ; BSR set to: 1
  8614                           ;main.c: 1343: {
  8615                           ;main.c: 1344: w=(DtCW._err_CW&&(PFN.poz==2))||((PFN.poz==3)&&DtCW._err_CW&&(M._pob_CW||
      +                          M._pob_KCW||M._pob_AL));
  8616  002F32  0E01               	movlw	1
  8617  002F34  0100               	movlb	0	; () banked
  8618  002F36  6FFE               	movwf	_DecERR$2092& (0+255),b
  8619                           
  8620                           ; BSR set to: 0
  8621  002F38  A1CF               	btfss	_DtCW& (0+255),0,b
  8622  002F3A  D005               	goto	l38132
  8623                           
  8624                           ; BSR set to: 0
  8625  002F3C  0101               	movlb	1	; () banked
  8626  002F3E  51D9               	movf	(_PFN+31)& (0+255),w,b
  8627  002F40  0A02               	xorlw	2
  8628  002F42  11DA               	iorwf	(_PFN+32)& (0+255),w,b
  8629  002F44  E013               	bz	l908
  8630  002F46                     l38132:
  8631  002F46  0101               	movlb	1	; () banked
  8632  002F48  51D9               	movf	(_PFN+31)& (0+255),w,b
  8633  002F4A  0A03               	xorlw	3
  8634  002F4C  11DA               	iorwf	(_PFN+32)& (0+255),w,b
  8635  002F4E  E10C               	bnz	l36630
  8636                           
  8637                           ; BSR set to: 1
  8638  002F50  0100               	movlb	0	; () banked
  8639  002F52  A1CF               	btfss	_DtCW& (0+255),0,b
  8640  002F54  D009               	goto	l36630
  8641                           
  8642                           ; BSR set to: 0
  8643  002F56  5169               	movf	(_M+9)& (0+255),w,b
  8644  002F58  1168               	iorwf	(_M+8)& (0+255),w,b
  8645  002F5A  E108               	bnz	l908
  8646                           
  8647                           ; BSR set to: 0
  8648  002F5C  5163               	movf	(_M+3)& (0+255),w,b
  8649  002F5E  1162               	iorwf	(_M+2)& (0+255),w,b
  8650  002F60  E105               	bnz	l908
  8651                           
  8652                           ; BSR set to: 0
  8653  002F62  5167               	movf	(_M+7)& (0+255),w,b
  8654  002F64  1166               	iorwf	(_M+6)& (0+255),w,b
  8655  002F66  E102               	bnz	l908
  8656  002F68                     l36630:
  8657  002F68  0100               	movlb	0	; () banked
  8658  002F6A  6BFE               	clrf	_DecERR$2092& (0+255),b
  8659  002F6C                     l908:
  8660  002F6C  C0FE  F0FD         	movff	_DecERR$2092,DecERR@w
  8661                           
  8662                           ;main.c: 1345: }
  8663  002F70  D01A               	goto	l38154
  8664  002F72                     l38142:
  8665                           
  8666                           ; BSR set to: 1
  8667                           ;main.c: 1346: else
  8668                           ;main.c: 1347: {
  8669                           ;main.c: 1348: w=(DtCW._err_CW&&(PFN.poz==2))||((PFN.poz==3)&&DtCW._err_CW&&RdPrt(11));
  8670  002F72  0E01               	movlw	1
  8671  002F74  0100               	movlb	0	; () banked
  8672  002F76  6FFF               	movwf	_DecERR$2093& (0+255),b
  8673                           
  8674                           ; BSR set to: 0
  8675  002F78  A1CF               	btfss	_DtCW& (0+255),0,b
  8676  002F7A  D005               	goto	l38148
  8677                           
  8678                           ; BSR set to: 0
  8679  002F7C  0101               	movlb	1	; () banked
  8680  002F7E  51D9               	movf	(_PFN+31)& (0+255),w,b
  8681  002F80  0A02               	xorlw	2
  8682  002F82  11DA               	iorwf	(_PFN+32)& (0+255),w,b
  8683  002F84  E00E               	bz	l911
  8684  002F86                     l38148:
  8685  002F86  0101               	movlb	1	; () banked
  8686  002F88  51D9               	movf	(_PFN+31)& (0+255),w,b
  8687  002F8A  0A03               	xorlw	3
  8688  002F8C  11DA               	iorwf	(_PFN+32)& (0+255),w,b
  8689  002F8E  E107               	bnz	l36634
  8690                           
  8691                           ; BSR set to: 1
  8692  002F90  0100               	movlb	0	; () banked
  8693  002F92  A1CF               	btfss	_DtCW& (0+255),0,b
  8694  002F94  D004               	goto	l36634
  8695                           
  8696                           ; BSR set to: 0
  8697  002F96  0E0B               	movlw	11
  8698  002F98  EC84  F058         	call	_RdPrt
  8699  002F9C  E202               	bc	l911
  8700  002F9E                     l36634:
  8701  002F9E  0100               	movlb	0	; () banked
  8702  002FA0  6BFF               	clrf	_DecERR$2093& (0+255),b
  8703  002FA2                     l911:
  8704  002FA2  C0FF  F0FD         	movff	_DecERR$2093,DecERR@w
  8705  002FA6                     l38154:
  8706                           
  8707                           ;main.c: 1349: }
  8708                           ;main.c: 1351: if(w)
  8709  002FA6  0100               	movlb	0	; () banked
  8710  002FA8  51FD               	movf	DecERR@w& (0+255),w,b
  8711  002FAA  E00E               	bz	l912
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;main.c: 1352: {
  8715                           ;main.c: 1353: M.ERR_BTY=0x0A;
  8716  002FAC  0E0A               	movlw	10
  8717  002FAE  6F82               	movwf	(_M+34)& (0+255),b
  8718                           
  8719                           ; BSR set to: 0
  8720                           ;main.c: 1356: if(PFN._KnfDisErr) EndErr();
  8721  002FB0  0101               	movlb	1	; () banked
  8722  002FB2  ABBC               	btfss	(_PFN+2)& (0+255),5,b
  8723  002FB4  D003               	goto	l38162
  8724                           
  8725                           ; BSR set to: 1
  8726  002FB6  EC55  F05A         	call	_EndErr	;wreg free
  8727  002FBA  D003               	goto	l38164
  8728  002FBC                     l38162:
  8729                           
  8730                           ; BSR set to: 1
  8731                           ;main.c: 1357: else SetErr(0x0A);
  8732  002FBC  0E0A               	movlw	10
  8733  002FBE  EC74  F05A         	call	_SetErr
  8734  002FC2                     l38164:
  8735                           
  8736                           ; BSR set to: 1
  8737                           ;main.c: 1358: M._RUSZ_NTC_CW=1;
  8738  002FC2  0100               	movlb	0	; () banked
  8739  002FC4  837A               	bsf	(_M+26)& (0+255),1,b
  8740  002FC6  D741               	goto	l38024
  8741  002FC8                     l912:
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;main.c: 1361: else
  8745                           ;main.c: 1362: {
  8746                           ;main.c: 1363: M._RUSZ_NTC_CW=0;
  8747  002FC8  937A               	bcf	(_M+26)& (0+255),1,b
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;main.c: 1365: if(!RdPrt(8))
  8751  002FCA  0E08               	movlw	8
  8752  002FCC  EC84  F058         	call	_RdPrt
  8753  002FD0  E20E               	bc	l916
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;main.c: 1366: {
  8757                           ;main.c: 1367: M.ERR_BTY=0x07;
  8758  002FD2  0E07               	movlw	7
  8759  002FD4  6F82               	movwf	(_M+34)& (0+255),b
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;main.c: 1370: if(PFN._KnfDisErr) EndErr();
  8763  002FD6  0101               	movlb	1	; () banked
  8764  002FD8  ABBC               	btfss	(_PFN+2)& (0+255),5,b
  8765  002FDA  D003               	goto	l38176
  8766                           
  8767                           ; BSR set to: 1
  8768  002FDC  EC55  F05A         	call	_EndErr	;wreg free
  8769  002FE0  D003               	goto	l38178
  8770  002FE2                     l38176:
  8771                           
  8772                           ; BSR set to: 1
  8773                           ;main.c: 1371: else SetErr(0x07);
  8774  002FE2  0E07               	movlw	7
  8775  002FE4  EC74  F05A         	call	_SetErr
  8776  002FE8                     l38178:
  8777                           
  8778                           ; BSR set to: 1
  8779                           ;main.c: 1372: M._RUSZ_MOD=1;
  8780  002FE8  0100               	movlb	0	; () banked
  8781  002FEA  897A               	bsf	(_M+26)& (0+255),4,b
  8782                           
  8783                           ;main.c: 1373: }
  8784  002FEC  D020               	goto	l877
  8785  002FEE                     l916:
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;main.c: 1374: else
  8789                           ;main.c: 1375: {
  8790                           ;main.c: 1376: M._RUSZ_MOD=0;
  8791  002FEE  997A               	bcf	(_M+26)& (0+255),4,b
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;main.c: 1377: if(DtKNF.rdpm!=0)
  8795  002FF0  0101               	movlb	1	; () banked
  8796  002FF2  5153               	movf	(_DtKNF+9)& (0+255),w,b
  8797  002FF4  E01A               	bz	l921
  8798                           
  8799                           ; BSR set to: 1
  8800                           ;main.c: 1378: {
  8801                           ;main.c: 1379: if((PFN.poz==3)&&(M._PRACA&&!M._RPM_CW)&&DtIN._err_IN)
  8802  002FF6  51D9               	movf	(_PFN+31)& (0+255),w,b
  8803  002FF8  0A03               	xorlw	3
  8804  002FFA  11DA               	iorwf	(_PFN+32)& (0+255),w,b
  8805  002FFC  E116               	bnz	l921
  8806                           
  8807                           ; BSR set to: 1
  8808  002FFE  0100               	movlb	0	; () banked
  8809  003000  B57B               	btfsc	(_M+27)& (0+255),2,b
  8810                           
  8811                           ; BSR set to: 0
  8812  003002  BF7B               	btfsc	(_M+27)& (0+255),7,b
  8813  003004  D012               	goto	l921
  8814                           
  8815                           ; BSR set to: 0
  8816  003006  0101               	movlb	1	; () banked
  8817  003008  A136               	btfss	_DtIN& (0+255),0,b
  8818  00300A  D00F               	goto	l921
  8819                           
  8820                           ; BSR set to: 1
  8821                           ;main.c: 1380: {
  8822                           ;main.c: 1381: M.ERR_BTY=0x0E;
  8823  00300C  0E0E               	movlw	14
  8824  00300E  0100               	movlb	0	; () banked
  8825  003010  6F82               	movwf	(_M+34)& (0+255),b
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;main.c: 1384: if(PFN._KnfDisErr) EndErr();
  8829  003012  0101               	movlb	1	; () banked
  8830  003014  ABBC               	btfss	(_PFN+2)& (0+255),5,b
  8831  003016  D003               	goto	l38196
  8832                           
  8833                           ; BSR set to: 1
  8834  003018  EC55  F05A         	call	_EndErr	;wreg free
  8835  00301C  D003               	goto	l38198
  8836  00301E                     l38196:
  8837                           
  8838                           ; BSR set to: 1
  8839                           ;main.c: 1385: else SetErr(0x0E);
  8840  00301E  0E0E               	movlw	14
  8841  003020  EC74  F05A         	call	_SetErr
  8842  003024                     l38198:
  8843                           
  8844                           ; BSR set to: 1
  8845                           ;main.c: 1386: M._RUSZ_NTC_IN=1;
  8846  003024  0100               	movlb	0	; () banked
  8847  003026  857A               	bsf	(_M+26)& (0+255),2,b
  8848                           
  8849                           ;main.c: 1387: }
  8850  003028  D002               	goto	l877
  8851  00302A                     l921:
  8852                           
  8853                           ;main.c: 1388: else
  8854                           ;main.c: 1389: {
  8855                           ;main.c: 1390: M._RUSZ_NTC_IN=0;
  8856  00302A  0100               	movlb	0	; () banked
  8857  00302C  957A               	bcf	(_M+26)& (0+255),2,b
  8858  00302E                     l877:
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;main.c: 1396: }
  8862                           ;main.c: 1397: }
  8863                           ;main.c: 1398: }
  8864                           ;main.c: 1399: }
  8865                           ;main.c: 1400: }
  8866                           ;main.c: 1401: }
  8867                           ;main.c: 1402: }
  8868                           ;main.c: 1407: if(!M._RUSZ_PLOMIEN&&!RdPrt(5)&&!M._ROZRUCH&&PORTDbits.RD0)
  8869  00302E  B171               	btfsc	(_M+17)& (0+255),0,b
  8870  003030  D023               	goto	l926
  8871                           
  8872                           ; BSR set to: 0
  8873  003032  0E05               	movlw	5
  8874  003034  EC84  F058         	call	_RdPrt
  8875  003038  A0D8               	btfss	status,0,c
  8876                           
  8877                           ; BSR set to: 0
  8878  00303A  B570               	btfsc	(_M+16)& (0+255),2,b
  8879  00303C  D01D               	goto	l926
  8880                           
  8881                           ; BSR set to: 0
  8882  00303E  A083               	btfss	3971,0,c	;volatile
  8883  003040  D01B               	goto	l926
  8884                           
  8885                           ; BSR set to: 0
  8886                           ;main.c: 1408: {
  8887                           ;main.c: 1409: if(M._TURBO)
  8888  003042  A37B               	btfss	(_M+27)& (0+255),1,b
  8889  003044  D011               	goto	l38220
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;main.c: 1410: {
  8893                           ;main.c: 1411: if(PORTDbits.RD3)
  8894  003046  A683               	btfss	3971,3,c	;volatile
  8895  003048  D00B               	goto	l38216
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;main.c: 1412: {
  8899                           ;main.c: 1413: if(RdPrt(3)&&RdPrt(4))
  8900  00304A  0E03               	movlw	3
  8901  00304C  EC84  F058         	call	_RdPrt
  8902  003050  E313               	bnc	l926
  8903                           
  8904                           ; BSR set to: 0
  8905  003052  0E04               	movlw	4
  8906  003054  EC84  F058         	call	_RdPrt
  8907  003058  E30F               	bnc	l926
  8908  00305A                     l38214:
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;main.c: 1414: {
  8912                           ;main.c: 1415: M.RPL=0;
  8913  00305A  6B8A               	clrf	(_M+42)& (0+255),b
  8914                           
  8915                           ;main.c: 1416: M._RUSZ_PLOMIEN=1;
  8916  00305C  8171               	bsf	(_M+17)& (0+255),0,b
  8917  00305E  D00C               	goto	l926
  8918  003060                     l38216:
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;main.c: 1419: else
  8922                           ;main.c: 1420: {
  8923                           ;main.c: 1421: if(RdPrt(4))
  8924  003060  0E04               	movlw	4
  8925  003062  EC84  F058         	call	_RdPrt
  8926  003066  D7F8               	goto	L4
  8927  003068                     l38220:
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;main.c: 1428: else
  8931                           ;main.c: 1429: {
  8932                           ;main.c: 1430: if(RdPrt(2)&&RdPrt(4))
  8933  003068  0E02               	movlw	2
  8934  00306A  EC84  F058         	call	_RdPrt
  8935  00306E  E304               	bnc	l926
  8936                           
  8937                           ; BSR set to: 0
  8938  003070  0E04               	movlw	4
  8939  003072  EC84  F058         	call	_RdPrt
  8940  003076  E2F1               	bc	l38214
  8941  003078                     l926:
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;main.c: 1434: }
  8945                           ;main.c: 1435: }
  8946                           ;main.c: 1436: }
  8947                           ;main.c: 1439: if(!M._TURBO)
  8948  003078  B37B               	btfsc	(_M+27)& (0+255),1,b
  8949  00307A  D00F               	goto	l934
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;main.c: 1440: {
  8953                           ;main.c: 1441: if(!M._RUSZ_CIAG&&!RdPrt(2)&&RdPrt(4)&&M._PRACA)
  8954  00307C  BF70               	btfsc	(_M+16)& (0+255),7,b
  8955  00307E  D036               	goto	l38262
  8956                           
  8957                           ; BSR set to: 0
  8958  003080  0E02               	movlw	2
  8959  003082  EC84  F058         	call	_RdPrt
  8960  003086  E232               	bc	l38262
  8961                           
  8962                           ; BSR set to: 0
  8963  003088  0E04               	movlw	4
  8964  00308A  EC84  F058         	call	_RdPrt
  8965  00308E  B0D8               	btfsc	status,0,c
  8966                           
  8967                           ; BSR set to: 0
  8968  003090  A57B               	btfss	(_M+27)& (0+255),2,b
  8969  003092  D02C               	goto	l38262
  8970                           
  8971                           ; BSR set to: 0
  8972                           ;main.c: 1442: {
  8973                           ;main.c: 1443: M.RCI=0;
  8974  003094  6B8B               	clrf	(_M+43)& (0+255),b
  8975                           
  8976                           ;main.c: 1444: M._RUSZ_CIAG=1;
  8977  003096  8F70               	bsf	(_M+16)& (0+255),7,b
  8978  003098  D029               	goto	l38262
  8979  00309A                     l934:
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;main.c: 1456: else
  8983                           ;main.c: 1457: {
  8984                           ;main.c: 1458: if(!M._RUSZ_CIAG&&!M._ROZRUCH&&!M._DE_VNT&&((!RdPrt(3)&&PORTDbits.RD3)||(
      +                          RdPrt(3)&&!PORTDbits.RD3)))
  8985  00309A  AF70               	btfss	(_M+16)& (0+255),7,b
  8986                           
  8987                           ; BSR set to: 0
  8988  00309C  B570               	btfsc	(_M+16)& (0+255),2,b
  8989  00309E  D026               	goto	l38262
  8990                           
  8991                           ; BSR set to: 0
  8992  0030A0  BD7B               	btfsc	(_M+27)& (0+255),6,b
  8993  0030A2  D024               	goto	l38262
  8994                           
  8995                           ; BSR set to: 0
  8996  0030A4  0E03               	movlw	3
  8997  0030A6  EC84  F058         	call	_RdPrt
  8998  0030AA  E202               	bc	l38244
  8999                           
  9000                           ; BSR set to: 0
  9001  0030AC  B683               	btfsc	3971,3,c	;volatile
  9002  0030AE  D006               	goto	l939
  9003  0030B0                     l38244:
  9004                           
  9005                           ; BSR set to: 0
  9006  0030B0  0E03               	movlw	3
  9007  0030B2  EC84  F058         	call	_RdPrt
  9008  0030B6  B0D8               	btfsc	status,0,c
  9009                           
  9010                           ; BSR set to: 0
  9011  0030B8  B683               	btfsc	3971,3,c	;volatile
  9012  0030BA  D018               	goto	l38262
  9013  0030BC                     l939:
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;main.c: 1459: {
  9017                           ;main.c: 1460: M.RCI=0;
  9018  0030BC  6B8B               	clrf	(_M+43)& (0+255),b
  9019                           
  9020                           ;main.c: 1461: M._RUSZ_CIAG=1;
  9021  0030BE  8F70               	bsf	(_M+16)& (0+255),7,b
  9022                           
  9023                           ;main.c: 1462: if(!M.LICZNIK_CIG) StartRTS(10);
  9024  0030C0  677E               	tstfsz	(_M+30)& (0+255),b
  9025  0030C2  D003               	goto	l38250
  9026                           
  9027                           ; BSR set to: 0
  9028  0030C4  0E0A               	movlw	10
  9029  0030C6  EC9C  F057         	call	_StartRTS
  9030  0030CA                     l38250:
  9031                           
  9032                           ;main.c: 1463: M.LICZNIK_CIG++;
  9033  0030CA  0100               	movlb	0	; () banked
  9034  0030CC  2B7E               	incf	(_M+30)& (0+255),f,b
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;main.c: 1464: if(M.LICZNIK_CIG>=5)
  9038  0030CE  EE20  F07E         	lfsr	2,_M+30
  9039  0030D2  0E04               	movlw	4
  9040  0030D4  64DF               	cpfsgt	indf2,c
  9041  0030D6  D00A               	goto	l38262
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;main.c: 1465: {
  9045                           ;main.c: 1466: M.LICZNIK_CIG=0;
  9046  0030D8  6B7E               	clrf	(_M+30)& (0+255),b
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;main.c: 1467: M.ERR_BTY=0x03;
  9050  0030DA  0E03               	movlw	3
  9051  0030DC  6F82               	movwf	(_M+34)& (0+255),b
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;main.c: 1468: PrintErr(0x03,1);
  9055  0030DE  0E01               	movlw	1
  9056  0030E0  6E25               	movwf	?_PrintErr,c
  9057  0030E2  0E03               	movlw	3
  9058  0030E4  ECA6  F047         	call	_PrintErr
  9059                           
  9060                           ; BSR set to: 1
  9061                           ;main.c: 1469: ErrPTG();
  9062  0030E8  EC27  F02C         	call	_ErrPTG	;wreg free
  9063  0030EC                     l38262:
  9064                           
  9065                           ;main.c: 1470: }
  9066                           ;main.c: 1471: }
  9067                           ;main.c: 1472: }
  9068                           ;main.c: 1478: if(!M._RUSZ_PLOMIEN&&!M._RUSZ_CIAG)
  9069  0030EC  0100               	movlb	0	; () banked
  9070  0030EE  A171               	btfss	(_M+17)& (0+255),0,b
  9071                           
  9072                           ; BSR set to: 0
  9073  0030F0  BF70               	btfsc	(_M+16)& (0+255),7,b
  9074  0030F2  0012               	return	
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;main.c: 1479: if(!M._RUSZ_NTC_CO&&!M._RUSZ_NCISN&&!M._RUSZ_CISN)
  9078  0030F4  A17A               	btfss	(_M+26)& (0+255),0,b
  9079                           
  9080                           ; BSR set to: 0
  9081  0030F6  BD7A               	btfsc	(_M+26)& (0+255),6,b
  9082  0030F8  0012               	return	
  9083                           
  9084                           ; BSR set to: 0
  9085  0030FA  AB7A               	btfss	(_M+26)& (0+255),5,b
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;main.c: 1480: if(!M._RUSZ_NTC_CW&&!M._RUSZ_MOD&&!M._RUSZ_POMPE&&!M._RUSZ_NTC_IN)
  9089  0030FC  B37A               	btfsc	(_M+26)& (0+255),1,b
  9090  0030FE  0012               	return	
  9091                           
  9092                           ; BSR set to: 0
  9093  003100  A97A               	btfss	(_M+26)& (0+255),4,b
  9094                           
  9095                           ; BSR set to: 0
  9096  003102  B571               	btfsc	(_M+17)& (0+255),2,b
  9097  003104  0012               	return	
  9098                           
  9099                           ; BSR set to: 0
  9100  003106  B57A               	btfsc	(_M+26)& (0+255),2,b
  9101  003108  0012               	return	
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;main.c: 1481: {
  9105                           ;main.c: 1482: M.ERR_BTY=0x00;
  9106  00310A  6B82               	clrf	(_M+34)& (0+255),b
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;main.c: 1483: EndErr();
  9110  00310C  EF55  F05A         	goto	_EndErr	;wreg free
  9111  003110                     __end_of_DecERR:
  9112                           	opt stack 0
  9113                           tblptru	equ	0xFF8
  9114                           tblptrh	equ	0xFF7
  9115                           tblptrl	equ	0xFF6
  9116                           tablat	equ	0xFF5
  9117                           prodh	equ	0xFF4
  9118                           prodl	equ	0xFF3
  9119                           intcon	equ	0xFF2
  9120                           postinc0	equ	0xFEE
  9121                           wreg	equ	0xFE8
  9122                           indf1	equ	0xFE7
  9123                           postinc1	equ	0xFE6
  9124                           postdec1	equ	0xFE5
  9125                           fsr1h	equ	0xFE2
  9126                           fsr1l	equ	0xFE1
  9127                           indf2	equ	0xFDF
  9128                           postinc2	equ	0xFDE
  9129                           postdec2	equ	0xFDD
  9130                           fsr2h	equ	0xFDA
  9131                           fsr2l	equ	0xFD9
  9132                           status	equ	0xFD8
  9133                           
  9134 ;; *************** function _DecSTR *****************
  9135 ;; Defined at:
  9136 ;;		line 1490 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;		None
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;		None
  9141 ;; Return value:  Size  Location     Type
  9142 ;;		None               void
  9143 ;; Registers used:
  9144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9145 ;; Tracked objects:
  9146 ;;		On entry : E/1
  9147 ;;		On exit  : F/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9154 ;;Total ram usage:        1 bytes
  9155 ;; Hardware stack levels used:    1
  9156 ;; Hardware stack levels required when called:    5
  9157 ;; This function calls:
  9158 ;;		_RTS
  9159 ;;		_RdPrt
  9160 ;;		_ToObiegCW
  9161 ;;		_ToObiegCO
  9162 ;;		_RestartMod
  9163 ;;		_WritePWM
  9164 ;; This function is called by:
  9165 ;;		_main
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text25
  9170  003110                     __ptext25:
  9171                           	opt stack 0
  9172  003110                     _DecSTR:
  9173                           	opt stack 25
  9174                           
  9175                           ;main.c: 1496: if(RTS(9)>=3)
  9176  003110  0E09               	movlw	9
  9177  003112  ECAF  F057         	call	_RTS
  9178  003116  6E20               	movwf	??_DecSTR& (0+255),c
  9179  003118  0E03               	movlw	3
  9180  00311A  5C20               	subwf	??_DecSTR,w,c
  9181  00311C  E303               	bnc	l38288
  9182                           
  9183                           ; BSR set to: 1
  9184                           ;main.c: 1497: {
  9185                           ;main.c: 1498: M._PW_START=0;
  9186  00311E  0100               	movlb	0	; () banked
  9187  003120  917B               	bcf	(_M+27)& (0+255),0,b
  9188                           
  9189                           ;main.c: 1499: M._RS_START=0;
  9190  003122  9F7A               	bcf	(_M+26)& (0+255),7,b
  9191  003124                     l38288:
  9192                           
  9193                           ;main.c: 1500: }
  9194                           ;main.c: 1502: M._AKTYWNE_PGD=(RdPrt(20))?1:0;
  9195  003124  0E14               	movlw	20
  9196  003126  EC84  F058         	call	_RdPrt
  9197  00312A  0E00               	movlw	0
  9198  00312C  B0D8               	btfsc	status,0,c
  9199  00312E  0E01               	movlw	1
  9200  003130  6F76               	movwf	(_M+22)& (0+255),b
  9201  003132  6B77               	clrf	(_M+23)& (0+255),b
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;main.c: 1504: if(!M._ROZRUCH&&PORTDbits.RD0&&DtCO._ldDCO) M._RUN_MNMOD=1;
  9205  003134  A570               	btfss	(_M+16)& (0+255),2,b
  9206                           
  9207                           ; BSR set to: 0
  9208  003136  A083               	btfss	3971,0,c	;volatile
  9209  003138  D004               	goto	l951
  9210                           
  9211                           ; BSR set to: 0
  9212  00313A  A9E5               	btfss	(_DtCO+1)& (0+255),4,b
  9213  00313C  D002               	goto	l951
  9214                           
  9215                           ; BSR set to: 0
  9216  00313E  897B               	bsf	(_M+27)& (0+255),4,b
  9217  003140  D001               	goto	l952
  9218  003142                     l951:
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;main.c: 1505: else M._RUN_MNMOD=0;
  9222  003142  997B               	bcf	(_M+27)& (0+255),4,b
  9223  003144                     l952:
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;main.c: 1508: if(!M._ZMKCOCW)
  9227  003144  B370               	btfsc	(_M+16)& (0+255),1,b
  9228  003146  D08A               	goto	l953
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;main.c: 1509: {
  9232                           ;main.c: 1511: if(M._PRACA&&(M._pob_KCW||M._pob_CW||M._pob_DzCW||M._pob_AL)) ToObiegCW();
  9233  003148  A57B               	btfss	(_M+27)& (0+255),2,b
  9234  00314A  D00F               	goto	l954
  9235                           
  9236                           ; BSR set to: 0
  9237  00314C  5163               	movf	(_M+3)& (0+255),w,b
  9238  00314E  1162               	iorwf	(_M+2)& (0+255),w,b
  9239  003150  E109               	bnz	l38308
  9240                           
  9241                           ; BSR set to: 0
  9242  003152  5169               	movf	(_M+9)& (0+255),w,b
  9243  003154  1168               	iorwf	(_M+8)& (0+255),w,b
  9244  003156  E106               	bnz	l38308
  9245                           
  9246                           ; BSR set to: 0
  9247  003158  516F               	movf	(_M+15)& (0+255),w,b
  9248  00315A  116E               	iorwf	(_M+14)& (0+255),w,b
  9249  00315C  E103               	bnz	l38308
  9250                           
  9251                           ; BSR set to: 0
  9252  00315E  5167               	movf	(_M+7)& (0+255),w,b
  9253  003160  1166               	iorwf	(_M+6)& (0+255),w,b
  9254  003162  E003               	bz	l954
  9255  003164                     l38308:
  9256                           
  9257                           ; BSR set to: 0
  9258  003164  EC65  F04D         	call	_ToObiegCW	;wreg free
  9259  003168  D079               	goto	l953
  9260  00316A                     l954:
  9261                           
  9262                           ; BSR set to: 0
  9263                           ;main.c: 1512: else
  9264                           ;main.c: 1514: if(M._PRACA&&!M._BLOKUJ_15S&&(M._pob_KCO||M._pob_SRW||M._pob_CO||M._pob_D
      +                          zCO)) ToObiegCO();
  9265  00316A  B57B               	btfsc	(_M+27)& (0+255),2,b
  9266                           
  9267                           ; BSR set to: 0
  9268  00316C  B971               	btfsc	(_M+17)& (0+255),4,b
  9269  00316E  D00F               	goto	l958
  9270                           
  9271                           ; BSR set to: 0
  9272  003170  5161               	movf	(_M+1)& (0+255),w,b
  9273  003172  1160               	iorwf	_M& (0+255),w,b
  9274  003174  E109               	bnz	l38320
  9275                           
  9276                           ; BSR set to: 0
  9277  003176  5165               	movf	(_M+5)& (0+255),w,b
  9278  003178  1164               	iorwf	(_M+4)& (0+255),w,b
  9279  00317A  E106               	bnz	l38320
  9280                           
  9281                           ; BSR set to: 0
  9282  00317C  516B               	movf	(_M+11)& (0+255),w,b
  9283  00317E  116A               	iorwf	(_M+10)& (0+255),w,b
  9284  003180  E103               	bnz	l38320
  9285                           
  9286                           ; BSR set to: 0
  9287  003182  516D               	movf	(_M+13)& (0+255),w,b
  9288  003184  116C               	iorwf	(_M+12)& (0+255),w,b
  9289  003186  E003               	bz	l958
  9290  003188                     l38320:
  9291                           
  9292                           ; BSR set to: 0
  9293  003188  EC42  F056         	call	_ToObiegCO	;wreg free
  9294  00318C  D067               	goto	l953
  9295  00318E                     l958:
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;main.c: 1515: else
  9299                           ;main.c: 1517: if(!M._PRACA&&M._WYLACZ&&(DtKNF.tpkt==3)&&(!DtCO._err_CO&&!DtCO._ptwp_CO)
      +                          &&M._pob_CW) ToObiegCW();
  9300  00318E  A57B               	btfss	(_M+27)& (0+255),2,b
  9301                           
  9302                           ; BSR set to: 0
  9303  003190  A170               	btfss	(_M+16)& (0+255),0,b
  9304  003192  D00B               	goto	l962
  9305                           
  9306                           ; BSR set to: 0
  9307  003194  0101               	movlb	1	; () banked
  9308  003196  5151               	movf	(_DtKNF+7)& (0+255),w,b
  9309  003198  0A03               	xorlw	3
  9310  00319A  E107               	bnz	l962
  9311                           
  9312                           ; BSR set to: 1
  9313  00319C  0100               	movlb	0	; () banked
  9314  00319E  A1E4               	btfss	_DtCO& (0+255),0,b
  9315                           
  9316                           ; BSR set to: 0
  9317  0031A0  B1E5               	btfsc	(_DtCO+1)& (0+255),0,b
  9318  0031A2  D003               	goto	l962
  9319                           
  9320                           ; BSR set to: 0
  9321  0031A4  5169               	movf	(_M+9)& (0+255),w,b
  9322  0031A6  1168               	iorwf	(_M+8)& (0+255),w,b
  9323  0031A8  E1DD               	bnz	l38308
  9324  0031AA                     l962:
  9325                           
  9326                           ;main.c: 1518: else
  9327                           ;main.c: 1519: if(!M._PRACA&&M._WYLACZ&&(DtKNF.tpkt==0)&&(!DtCO._err_CO&&!DtCO._ptwp_CO)
      +                          &&((PFN.poz==2)||(PFN.poz==3))&&DtCW._wpz_CW) ToObiegCW();
  9328  0031AA  0100               	movlb	0	; () banked
  9329  0031AC  A57B               	btfss	(_M+27)& (0+255),2,b
  9330                           
  9331                           ; BSR set to: 0
  9332  0031AE  A170               	btfss	(_M+16)& (0+255),0,b
  9333  0031B0  D013               	goto	l964
  9334                           
  9335                           ; BSR set to: 0
  9336  0031B2  0101               	movlb	1	; () banked
  9337  0031B4  6751               	tstfsz	(_DtKNF+7)& (0+255),b
  9338  0031B6  D010               	goto	l964
  9339                           
  9340                           ; BSR set to: 1
  9341  0031B8  0100               	movlb	0	; () banked
  9342  0031BA  A1E4               	btfss	_DtCO& (0+255),0,b
  9343                           
  9344                           ; BSR set to: 0
  9345  0031BC  B1E5               	btfsc	(_DtCO+1)& (0+255),0,b
  9346  0031BE  D00C               	goto	l964
  9347                           
  9348                           ; BSR set to: 0
  9349  0031C0  0101               	movlb	1	; () banked
  9350  0031C2  51D9               	movf	(_PFN+31)& (0+255),w,b
  9351  0031C4  0A02               	xorlw	2
  9352  0031C6  11DA               	iorwf	(_PFN+32)& (0+255),w,b
  9353  0031C8  E004               	bz	l966
  9354                           
  9355                           ; BSR set to: 1
  9356  0031CA  51D9               	movf	(_PFN+31)& (0+255),w,b
  9357  0031CC  0A03               	xorlw	3
  9358  0031CE  11DA               	iorwf	(_PFN+32)& (0+255),w,b
  9359  0031D0  E103               	bnz	l964
  9360  0031D2                     l966:
  9361                           
  9362                           ; BSR set to: 1
  9363  0031D2  0100               	movlb	0	; () banked
  9364  0031D4  B7CF               	btfsc	_DtCW& (0+255),3,b
  9365  0031D6  D7C6               	goto	l38308
  9366  0031D8                     l964:
  9367                           
  9368                           ;main.c: 1520: else
  9369                           ;main.c: 1522: if(!M._PRACA&&!M._BLOKUJ_15S&&(RdPrt(13)||M._RUSZ_48)) ToObiegCO();
  9370  0031D8  0100               	movlb	0	; () banked
  9371  0031DA  A57B               	btfss	(_M+27)& (0+255),2,b
  9372                           
  9373                           ; BSR set to: 0
  9374  0031DC  B971               	btfsc	(_M+17)& (0+255),4,b
  9375  0031DE  D006               	goto	l968
  9376                           
  9377                           ; BSR set to: 0
  9378  0031E0  0E0D               	movlw	13
  9379  0031E2  EC84  F058         	call	_RdPrt
  9380  0031E6  A0D8               	btfss	status,0,c
  9381                           
  9382                           ; BSR set to: 0
  9383  0031E8  B770               	btfsc	(_M+16)& (0+255),3,b
  9384  0031EA  D7CE               	goto	l38320
  9385  0031EC                     l968:
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;main.c: 1523: else
  9389                           ;main.c: 1525: if(!M._PRACA&&!M._BLOKUJ_15S&&M._pob_CO&&!DtCO._su_CO) ToObiegCO();
  9390  0031EC  A57B               	btfss	(_M+27)& (0+255),2,b
  9391                           
  9392                           ; BSR set to: 0
  9393  0031EE  B971               	btfsc	(_M+17)& (0+255),4,b
  9394  0031F0  D02B               	goto	l38400
  9395                           
  9396                           ; BSR set to: 0
  9397  0031F2  516B               	movf	(_M+11)& (0+255),w,b
  9398  0031F4  116A               	iorwf	(_M+10)& (0+255),w,b
  9399  0031F6  E028               	bz	l38400
  9400                           
  9401                           ; BSR set to: 0
  9402  0031F8  A3E4               	btfss	_DtCO& (0+255),1,b
  9403  0031FA  D7C6               	goto	l38320
  9404  0031FC  D025               	goto	l38400
  9405  0031FE                     l976:
  9406                           
  9407                           ; BSR set to: 1
  9408                           ;main.c: 1531: case 2:
  9409                           ;main.c: 1532: {
  9410                           ;main.c: 1534: if(!M._PRACA&&!M._WYLACZ&&!M._RUSZ_48) ToObiegCW();
  9411  0031FE  0100               	movlb	0	; () banked
  9412  003200  A57B               	btfss	(_M+27)& (0+255),2,b
  9413                           
  9414                           ; BSR set to: 0
  9415  003202  B170               	btfsc	(_M+16)& (0+255),0,b
  9416  003204  D02B               	goto	l953
  9417                           
  9418                           ; BSR set to: 0
  9419  003206  A770               	btfss	(_M+16)& (0+255),3,b
  9420  003208  D7AD               	goto	l38308
  9421  00320A  D028               	goto	l953
  9422  00320C                     l979:
  9423                           
  9424                           ; BSR set to: 1
  9425                           ;main.c: 1538: {
  9426                           ;main.c: 1540: if(!M._PRACA&&!M._WYLACZ&&!M._RUSZ_48&&(!PORTDbits.RD2||M._RUSZ_48Z3)) To
      +                          ObiegCW();
  9427  00320C  0100               	movlb	0	; () banked
  9428  00320E  A57B               	btfss	(_M+27)& (0+255),2,b
  9429                           
  9430                           ; BSR set to: 0
  9431  003210  B170               	btfsc	(_M+16)& (0+255),0,b
  9432  003212  D024               	goto	l953
  9433                           
  9434                           ; BSR set to: 0
  9435  003214  B770               	btfsc	(_M+16)& (0+255),3,b
  9436  003216  D022               	goto	l953
  9437                           
  9438                           ; BSR set to: 0
  9439  003218  B483               	btfsc	3971,2,c	;volatile
  9440                           
  9441                           ; BSR set to: 0
  9442  00321A  B970               	btfsc	(_M+16)& (0+255),4,b
  9443  00321C  D7A3               	goto	l38308
  9444  00321E  D01E               	goto	l953
  9445  003220                     l983:
  9446                           
  9447                           ; BSR set to: 1
  9448                           ;main.c: 1544: {
  9449                           ;main.c: 1546: if(!M._PRACA&&(RdPrt(17)||(!M._WYLACZ&&!M._RUSZ_48&&!PORTDbits.RD2))) ToO
      +                          biegCW();
  9450  003220  0100               	movlb	0	; () banked
  9451  003222  B57B               	btfsc	(_M+27)& (0+255),2,b
  9452  003224  D01B               	goto	l953
  9453                           
  9454                           ; BSR set to: 0
  9455  003226  0E11               	movlw	17
  9456  003228  EC84  F058         	call	_RdPrt
  9457  00322C  E29B               	bc	l38308
  9458                           
  9459                           ; BSR set to: 0
  9460  00322E  A170               	btfss	(_M+16)& (0+255),0,b
  9461                           
  9462                           ; BSR set to: 0
  9463  003230  B770               	btfsc	(_M+16)& (0+255),3,b
  9464  003232  D014               	goto	l953
  9465  003234  D006               	goto	u74700
  9466  003236                     l987:
  9467                           
  9468                           ; BSR set to: 1
  9469                           ;main.c: 1550: {
  9470                           ;main.c: 1552: if(!M._PRACA&&!M._WYLACZ&&!M._RUSZ_48&&!PORTDbits.RD2) ToObiegCW();
  9471  003236  0100               	movlb	0	; () banked
  9472  003238  A57B               	btfss	(_M+27)& (0+255),2,b
  9473                           
  9474                           ; BSR set to: 0
  9475  00323A  B170               	btfsc	(_M+16)& (0+255),0,b
  9476  00323C  D00F               	goto	l953
  9477                           
  9478                           ; BSR set to: 0
  9479  00323E  B770               	btfsc	(_M+16)& (0+255),3,b
  9480  003240  D00D               	goto	l953
  9481  003242                     u74700:
  9482                           
  9483                           ; BSR set to: 0
  9484  003242  A483               	btfss	3971,2,c	;volatile
  9485  003244  D78F               	goto	l38308
  9486  003246  D00A               	goto	l953
  9487  003248                     l38400:
  9488                           
  9489                           ; BSR set to: 0
  9490  003248  0101               	movlb	1	; () banked
  9491  00324A  5151               	movf	(_DtKNF+7)& (0+255),w,b
  9492                           
  9493                           ; Switch size 1, requested type "space"
  9494                           ; Number of cases is 4, Range of values is 0 to 3
  9495                           ; switch strategies available:
  9496                           ; Name         Instructions Cycles
  9497                           ; simple_byte           13     7 (average)
  9498                           ;	Chosen strategy is simple_byte
  9499  00324C  E0E9               	bz	l983
  9500  00324E  0A01               	xorlw	1	; case 1
  9501  003250  E0D6               	bz	l976
  9502  003252  0A03               	xorlw	3	; case 2
  9503  003254  E0D4               	bz	l976
  9504  003256  0A01               	xorlw	1	; case 3
  9505  003258  E0D9               	bz	l979
  9506  00325A  D7ED               	goto	l987
  9507  00325C                     l953:
  9508                           
  9509                           ; BSR set to: 0
  9510                           ;main.c: 1556: }
  9511                           ;main.c: 1557: }
  9512                           ;main.c: 1560: if(!M._ZMKCOCW)
  9513  00325C  A370               	btfss	(_M+16)& (0+255),1,b
  9514  00325E  D053               	goto	l38478
  9515  003260  D05C               	goto	l38480
  9516  003262                     l992:
  9517                           
  9518                           ; BSR set to: 1
  9519                           ;main.c: 1565: case 2:
  9520                           ;main.c: 1566: {
  9521                           ;main.c: 1567: if(!M._WYLACZ&&!M._RUSZ_48&&!M._PRACA)
  9522  003262  0100               	movlb	0	; () banked
  9523  003264  A170               	btfss	(_M+16)& (0+255),0,b
  9524                           
  9525                           ; BSR set to: 0
  9526  003266  B770               	btfsc	(_M+16)& (0+255),3,b
  9527  003268  D058               	goto	l38480
  9528                           
  9529                           ; BSR set to: 0
  9530  00326A  B57B               	btfsc	(_M+27)& (0+255),2,b
  9531  00326C  D056               	goto	l38480
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;main.c: 1568: {
  9535                           ;main.c: 1570: if(!M._RPM_CW&&RdPrt(13))
  9536  00326E  BF7B               	btfsc	(_M+27)& (0+255),7,b
  9537  003270  D006               	goto	l994
  9538                           
  9539                           ; BSR set to: 0
  9540  003272  0E0D               	movlw	13
  9541  003274  EC84  F058         	call	_RdPrt
  9542  003278  E302               	bnc	l994
  9543  00327A                     l38412:
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;main.c: 1571: {
  9547                           ;main.c: 1572: M._WYLACZ=1;
  9548  00327A  8170               	bsf	(_M+16)& (0+255),0,b
  9549                           
  9550                           ;main.c: 1573: }
  9551  00327C  D04E               	goto	l38480
  9552  00327E                     l994:
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;main.c: 1574: else
  9556                           ;main.c: 1576: if(!M._RPM_CW&&M._pob_CO&&!DtCO._su_CO)
  9557  00327E  BF7B               	btfsc	(_M+27)& (0+255),7,b
  9558  003280  D04C               	goto	l38480
  9559                           
  9560                           ; BSR set to: 0
  9561  003282  516B               	movf	(_M+11)& (0+255),w,b
  9562  003284  116A               	iorwf	(_M+10)& (0+255),w,b
  9563  003286  E049               	bz	l38480
  9564                           
  9565                           ; BSR set to: 0
  9566  003288  A3E4               	btfss	_DtCO& (0+255),1,b
  9567  00328A  D7F7               	goto	l38412
  9568  00328C  D046               	goto	l38480
  9569  00328E                     l998:
  9570                           
  9571                           ; BSR set to: 1
  9572                           ;main.c: 1584: {
  9573                           ;main.c: 1585: if(!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48&&!M._RUSZ_48Z3&&!M._PRACA)
  9574  00328E  B483               	btfsc	3971,2,c	;volatile
  9575  003290  D044               	goto	l38480
  9576                           
  9577                           ; BSR set to: 1
  9578  003292  0100               	movlb	0	; () banked
  9579  003294  A170               	btfss	(_M+16)& (0+255),0,b
  9580                           
  9581                           ; BSR set to: 0
  9582  003296  B770               	btfsc	(_M+16)& (0+255),3,b
  9583  003298  D040               	goto	l38480
  9584                           
  9585                           ; BSR set to: 0
  9586  00329A  A970               	btfss	(_M+16)& (0+255),4,b
  9587                           
  9588                           ; BSR set to: 0
  9589  00329C  B57B               	btfsc	(_M+27)& (0+255),2,b
  9590  00329E  D03D               	goto	l38480
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;main.c: 1586: {
  9594                           ;main.c: 1588: if(!M._RPM_CW&&RdPrt(13))
  9595  0032A0  BF7B               	btfsc	(_M+27)& (0+255),7,b
  9596  0032A2  D029               	goto	l1014
  9597                           
  9598                           ; BSR set to: 0
  9599  0032A4  0E0D               	movlw	13
  9600  0032A6  EC84  F058         	call	_RdPrt
  9601  0032AA  E325               	bnc	l1014
  9602  0032AC                     l38432:
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;main.c: 1589: {
  9606                           ;main.c: 1590: M._WYLACZ=1;
  9607  0032AC  8170               	bsf	(_M+16)& (0+255),0,b
  9608                           
  9609                           ;main.c: 1591: PORTDbits.RD2=1;
  9610  0032AE  8483               	bsf	3971,2,c	;volatile
  9611                           
  9612                           ;main.c: 1592: }
  9613  0032B0  D034               	goto	l38480
  9614  0032B2                     l1003:
  9615                           
  9616                           ; BSR set to: 1
  9617                           ;main.c: 1604: {
  9618                           ;main.c: 1605: if(!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48&&!M._PRACA)
  9619  0032B2  B483               	btfsc	3971,2,c	;volatile
  9620  0032B4  D032               	goto	l38480
  9621                           
  9622                           ; BSR set to: 1
  9623  0032B6  0100               	movlb	0	; () banked
  9624  0032B8  A170               	btfss	(_M+16)& (0+255),0,b
  9625                           
  9626                           ; BSR set to: 0
  9627  0032BA  B770               	btfsc	(_M+16)& (0+255),3,b
  9628  0032BC  D02E               	goto	l38480
  9629                           
  9630                           ; BSR set to: 0
  9631  0032BE  B57B               	btfsc	(_M+27)& (0+255),2,b
  9632  0032C0  D02C               	goto	l38480
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;main.c: 1606: {
  9636                           ;main.c: 1608: if((!M._RPM_CW&&RdPrt(13))||(M._RPM_CW&&RdPrt(17)))
  9637  0032C2  BF7B               	btfsc	(_M+27)& (0+255),7,b
  9638  0032C4  D004               	goto	l1009
  9639                           
  9640                           ; BSR set to: 0
  9641  0032C6  0E0D               	movlw	13
  9642  0032C8  EC84  F058         	call	_RdPrt
  9643  0032CC  E2EF               	bc	l38432
  9644  0032CE                     l1009:
  9645                           
  9646                           ; BSR set to: 0
  9647  0032CE  AF7B               	btfss	(_M+27)& (0+255),7,b
  9648  0032D0  D012               	goto	l1014
  9649                           
  9650                           ; BSR set to: 0
  9651  0032D2  0E11               	movlw	17
  9652  0032D4  EC84  F058         	call	_RdPrt
  9653  0032D8  D00D               	goto	L5
  9654  0032DA                     l1012:
  9655                           
  9656                           ; BSR set to: 1
  9657                           ;main.c: 1624: {
  9658                           ;main.c: 1625: if(!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48&&!M._PRACA)
  9659  0032DA  B483               	btfsc	3971,2,c	;volatile
  9660  0032DC  D01E               	goto	l38480
  9661                           
  9662                           ; BSR set to: 1
  9663  0032DE  0100               	movlb	0	; () banked
  9664  0032E0  A170               	btfss	(_M+16)& (0+255),0,b
  9665                           
  9666                           ; BSR set to: 0
  9667  0032E2  B770               	btfsc	(_M+16)& (0+255),3,b
  9668  0032E4  D01A               	goto	l38480
  9669                           
  9670                           ; BSR set to: 0
  9671  0032E6  B57B               	btfsc	(_M+27)& (0+255),2,b
  9672  0032E8  D018               	goto	l38480
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;main.c: 1626: {
  9676                           ;main.c: 1628: if(!M._RPM_CW&&RdPrt(13))
  9677  0032EA  BF7B               	btfsc	(_M+27)& (0+255),7,b
  9678  0032EC  D004               	goto	l1014
  9679                           
  9680                           ; BSR set to: 0
  9681  0032EE  0E0D               	movlw	13
  9682  0032F0  EC84  F058         	call	_RdPrt
  9683  0032F4                     L5:
  9684  0032F4  E2DB               	bc	l38432
  9685  0032F6                     l1014:
  9686                           
  9687                           ; BSR set to: 0
  9688                           ;main.c: 1633: else
  9689                           ;main.c: 1635: if(!M._RPM_CW&&M._pob_CO&&!DtCO._su_CO)
  9690  0032F6  BF7B               	btfsc	(_M+27)& (0+255),7,b
  9691  0032F8  D010               	goto	l38480
  9692                           
  9693                           ; BSR set to: 0
  9694  0032FA  516B               	movf	(_M+11)& (0+255),w,b
  9695  0032FC  116A               	iorwf	(_M+10)& (0+255),w,b
  9696  0032FE  E00D               	bz	l38480
  9697                           
  9698                           ; BSR set to: 0
  9699  003300  A3E4               	btfss	_DtCO& (0+255),1,b
  9700  003302  D7D4               	goto	l38432
  9701  003304  D00A               	goto	l38480
  9702  003306                     l38478:
  9703                           
  9704                           ; BSR set to: 0
  9705  003306  0101               	movlb	1	; () banked
  9706  003308  5151               	movf	(_DtKNF+7)& (0+255),w,b
  9707                           
  9708                           ; Switch size 1, requested type "space"
  9709                           ; Number of cases is 4, Range of values is 0 to 3
  9710                           ; switch strategies available:
  9711                           ; Name         Instructions Cycles
  9712                           ; simple_byte           13     7 (average)
  9713                           ;	Chosen strategy is simple_byte
  9714  00330A  E0D3               	bz	l1003
  9715  00330C  0A01               	xorlw	1	; case 1
  9716  00330E  E0A9               	bz	l992
  9717  003310  0A03               	xorlw	3	; case 2
  9718  003312  E0A7               	bz	l992
  9719  003314  0A01               	xorlw	1	; case 3
  9720  003316  E0BB               	bz	l998
  9721  003318  D7E0               	goto	l1012
  9722  00331A                     l38480:
  9723                           
  9724                           ;main.c: 1644: }
  9725                           ;main.c: 1648: if(M._pob_CO||M._pob_CW||M._pob_AL)
  9726  00331A  0100               	movlb	0	; () banked
  9727  00331C  516B               	movf	(_M+11)& (0+255),w,b
  9728  00331E  116A               	iorwf	(_M+10)& (0+255),w,b
  9729  003320  E106               	bnz	l1019
  9730                           
  9731                           ; BSR set to: 0
  9732  003322  5169               	movf	(_M+9)& (0+255),w,b
  9733  003324  1168               	iorwf	(_M+8)& (0+255),w,b
  9734  003326  E103               	bnz	l1019
  9735                           
  9736                           ; BSR set to: 0
  9737  003328  5167               	movf	(_M+7)& (0+255),w,b
  9738  00332A  1166               	iorwf	(_M+6)& (0+255),w,b
  9739  00332C  E009               	bz	l1020
  9740  00332E                     l1019:
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;main.c: 1649: {
  9744                           ;main.c: 1650: if(!M._ROZRUCH&&PORTDbits.RD0)
  9745  00332E  A570               	btfss	(_M+16)& (0+255),2,b
  9746                           
  9747                           ; BSR set to: 0
  9748  003330  A083               	btfss	3971,0,c	;volatile
  9749  003332  D006               	goto	l1020
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;main.c: 1651: {
  9753                           ;main.c: 1652: if(!M._MODULUJ)
  9754  003334  BB71               	btfsc	(_M+17)& (0+255),5,b
  9755  003336  D005               	goto	l1023
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;main.c: 1653: {
  9759                           ;main.c: 1654: M._MODULUJ=1;
  9760  003338  8B71               	bsf	(_M+17)& (0+255),5,b
  9761                           
  9762                           ; BSR set to: 0
  9763                           ;main.c: 1655: RestartMod();
  9764  00333A  ECE8  F059         	call	_RestartMod	;wreg free
  9765  00333E  D001               	goto	l1023
  9766  003340                     l1020:
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;main.c: 1659: else M._MODULUJ=0;
  9770  003340  9B71               	bcf	(_M+17)& (0+255),5,b
  9771  003342                     l1023:
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;main.c: 1663: if(!M._PRACA||!RdPrt(8)||M._RUN_MNMOD)
  9775  003342  A57B               	btfss	(_M+27)& (0+255),2,b
  9776  003344  D006               	goto	l1026
  9777                           
  9778                           ; BSR set to: 0
  9779  003346  0E08               	movlw	8
  9780  003348  EC84  F058         	call	_RdPrt
  9781  00334C  E302               	bnc	l1026
  9782                           
  9783                           ; BSR set to: 0
  9784  00334E  A97B               	btfss	(_M+27)& (0+255),4,b
  9785  003350  D00E               	goto	l38504
  9786  003352                     l1026:
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;main.c: 1664: {
  9790                           ;main.c: 1665: M._MODULUJ=0;
  9791  003352  9B71               	bcf	(_M+17)& (0+255),5,b
  9792                           
  9793                           ;main.c: 1666: if(!M._PRACA||!RdPrt(8)) WritePWM(0);
  9794  003354  A57B               	btfss	(_M+27)& (0+255),2,b
  9795  003356  D004               	goto	l38500
  9796                           
  9797                           ; BSR set to: 0
  9798  003358  0E08               	movlw	8
  9799  00335A  EC84  F058         	call	_RdPrt
  9800  00335E  E204               	bc	l38502
  9801  003360                     l38500:
  9802                           
  9803                           ; BSR set to: 0
  9804  003360  0E00               	movlw	0
  9805  003362  ECF2  F059         	call	_WritePWM
  9806  003366  D003               	goto	l38504
  9807  003368                     l38502:
  9808                           
  9809                           ; BSR set to: 0
  9810                           ;main.c: 1667: else WritePWM(PWM.MDMOD);
  9811  003368  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
  9812  00336A  ECF2  F059         	call	_WritePWM
  9813  00336E                     l38504:
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;main.c: 1668: }
  9817                           ;main.c: 1670: if(M._pob_KCW&&!M._ROZRUCH&&PORTDbits.RD0) WritePWM(PWM.MMAXCW);
  9818  00336E  5163               	movf	(_M+3)& (0+255),w,b
  9819  003370  1162               	iorwf	(_M+2)& (0+255),w,b
  9820  003372  A4D8               	btfss	status,2,c
  9821                           
  9822                           ; BSR set to: 0
  9823  003374  B570               	btfsc	(_M+16)& (0+255),2,b
  9824  003376  D005               	goto	l38512
  9825                           
  9826                           ; BSR set to: 0
  9827  003378  A083               	btfss	3971,0,c	;volatile
  9828  00337A  D003               	goto	l38512
  9829                           
  9830                           ; BSR set to: 0
  9831  00337C  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
  9832  00337E  ECF2  F059         	call	_WritePWM
  9833  003382                     l38512:
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;main.c: 1671: if(M._pob_KCO&&!M._ROZRUCH&&PORTDbits.RD0) WritePWM(PWM.MMAXCO);
  9837  003382  5161               	movf	(_M+1)& (0+255),w,b
  9838  003384  1160               	iorwf	_M& (0+255),w,b
  9839  003386  A4D8               	btfss	status,2,c
  9840                           
  9841                           ; BSR set to: 0
  9842  003388  B570               	btfsc	(_M+16)& (0+255),2,b
  9843  00338A  D005               	goto	l38520
  9844                           
  9845                           ; BSR set to: 0
  9846  00338C  A083               	btfss	3971,0,c	;volatile
  9847  00338E  D003               	goto	l38520
  9848                           
  9849                           ; BSR set to: 0
  9850  003390  51B0               	movf	(_PWM+29)& (0+255),w,b	;volatile
  9851  003392  ECF2  F059         	call	_WritePWM
  9852  003396                     l38520:
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;main.c: 1675: if(M._pob_SRW&&!M._ROZRUCH&&PORTDbits.RD0)
  9856  003396  5165               	movf	(_M+5)& (0+255),w,b
  9857  003398  1164               	iorwf	(_M+4)& (0+255),w,b
  9858  00339A  A4D8               	btfss	status,2,c
  9859                           
  9860                           ; BSR set to: 0
  9861  00339C  B570               	btfsc	(_M+16)& (0+255),2,b
  9862  00339E  D00D               	goto	l38532
  9863                           
  9864                           ; BSR set to: 0
  9865  0033A0  A083               	btfss	3971,0,c	;volatile
  9866  0033A2  D00B               	goto	l38532
  9867                           
  9868                           ; BSR set to: 0
  9869                           ;main.c: 1676: {
  9870                           ;main.c: 1677: if(PFN._fns_max) WritePWM(0xF0);
  9871  0033A4  0101               	movlb	1	; () banked
  9872  0033A6  AFBB               	btfss	(_PFN+1)& (0+255),7,b
  9873  0033A8  D004               	goto	l38530
  9874                           
  9875                           ; BSR set to: 1
  9876  0033AA  0EF0               	movlw	240
  9877  0033AC  ECF2  F059         	call	_WritePWM
  9878  0033B0  D004               	goto	l38532
  9879  0033B2                     l38530:
  9880                           
  9881                           ; BSR set to: 1
  9882                           ;main.c: 1678: else WritePWM(PWM.MDMOD);
  9883  0033B2  0100               	movlb	0	; () banked
  9884  0033B4  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
  9885  0033B6  ECF2  F059         	call	_WritePWM
  9886  0033BA                     l38532:
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;main.c: 1679: }
  9890                           ;main.c: 1681: if(M._pob_DzCO&&!M._ROZRUCH&&PORTDbits.RD0) WritePWM(PWM.MDMOD);
  9891  0033BA  516D               	movf	(_M+13)& (0+255),w,b
  9892  0033BC  116C               	iorwf	(_M+12)& (0+255),w,b
  9893  0033BE  A4D8               	btfss	status,2,c
  9894                           
  9895                           ; BSR set to: 0
  9896  0033C0  B570               	btfsc	(_M+16)& (0+255),2,b
  9897  0033C2  D005               	goto	l38540
  9898                           
  9899                           ; BSR set to: 0
  9900  0033C4  A083               	btfss	3971,0,c	;volatile
  9901  0033C6  D003               	goto	l38540
  9902                           
  9903                           ; BSR set to: 0
  9904  0033C8  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
  9905  0033CA  ECF2  F059         	call	_WritePWM
  9906  0033CE                     l38540:
  9907                           
  9908                           ; BSR set to: 0
  9909                           ;main.c: 1682: if(M._pob_DzCW&&!M._ROZRUCH&&PORTDbits.RD0) WritePWM(PWM.MDMOD);
  9910  0033CE  516F               	movf	(_M+15)& (0+255),w,b
  9911  0033D0  116E               	iorwf	(_M+14)& (0+255),w,b
  9912  0033D2  A4D8               	btfss	status,2,c
  9913                           
  9914                           ; BSR set to: 0
  9915  0033D4  B570               	btfsc	(_M+16)& (0+255),2,b
  9916  0033D6  0012               	return	
  9917                           
  9918                           ; BSR set to: 0
  9919  0033D8  A083               	btfss	3971,0,c	;volatile
  9920  0033DA  0012               	return	
  9921                           
  9922                           ; BSR set to: 0
  9923  0033DC  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
  9924  0033DE  EFF2  F059         	goto	_WritePWM
  9925  0033E2                     __end_of_DecSTR:
  9926                           	opt stack 0
  9927                           tblptru	equ	0xFF8
  9928                           tblptrh	equ	0xFF7
  9929                           tblptrl	equ	0xFF6
  9930                           tablat	equ	0xFF5
  9931                           prodh	equ	0xFF4
  9932                           prodl	equ	0xFF3
  9933                           intcon	equ	0xFF2
  9934                           postinc0	equ	0xFEE
  9935                           wreg	equ	0xFE8
  9936                           indf1	equ	0xFE7
  9937                           postinc1	equ	0xFE6
  9938                           postdec1	equ	0xFE5
  9939                           fsr1h	equ	0xFE2
  9940                           fsr1l	equ	0xFE1
  9941                           indf2	equ	0xFDF
  9942                           postinc2	equ	0xFDE
  9943                           postdec2	equ	0xFDD
  9944                           fsr2h	equ	0xFDA
  9945                           fsr2l	equ	0xFD9
  9946                           status	equ	0xFD8
  9947                           
  9948 ;; *************** function _DecRozruch *****************
  9949 ;; Defined at:
  9950 ;;		line 1796 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;		None
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;		None
  9955 ;; Return value:  Size  Location     Type
  9956 ;;		None               void
  9957 ;; Registers used:
  9958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9959 ;; Tracked objects:
  9960 ;;		On entry : F/0
  9961 ;;		On exit  : F/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9968 ;;Total ram usage:        0 bytes
  9969 ;; Hardware stack levels used:    1
  9970 ;; Hardware stack levels required when called:    7
  9971 ;; This function calls:
  9972 ;;		_SetRozruch
  9973 ;; This function is called by:
  9974 ;;		_main
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           	psect	text26
  9979  00741E                     __ptext26:
  9980                           	opt stack 0
  9981  00741E                     _DecRozruch:
  9982                           	opt stack 23
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;main.c: 1797: switch(DtKNF.tpkt)
  9986                           
  9987                           ; BSR set to: 0
  9988  00741E  D0BD               	goto	l38814
  9989  007420                     l1084:
  9990                           
  9991                           ; BSR set to: 1
  9992                           ;main.c: 1800: case 2:
  9993                           ;main.c: 1801: {
  9994                           ;main.c: 1802: if(!M._ROZRUCH&&!PORTDbits.RD0)
  9995  007420  0100               	movlb	0	; () banked
  9996  007422  A570               	btfss	(_M+16)& (0+255),2,b
  9997                           
  9998                           ; BSR set to: 0
  9999  007424  B083               	btfsc	3971,0,c	;volatile
 10000  007426  0012               	return	
 10001                           
 10002                           ; BSR set to: 0
 10003                           ;main.c: 1803: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M._RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_S
      +                          TB&&!M._RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
 10004  007428  A370               	btfss	(_M+16)& (0+255),1,b
 10005                           
 10006                           ; BSR set to: 0
 10007  00742A  BB70               	btfsc	(_M+16)& (0+255),5,b
 10008  00742C  0012               	return	
 10009                           
 10010                           ; BSR set to: 0
 10011  00742E  A171               	btfss	(_M+17)& (0+255),0,b
 10012                           
 10013                           ; BSR set to: 0
 10014  007430  BF70               	btfsc	(_M+16)& (0+255),7,b
 10015  007432  0012               	return	
 10016                           
 10017                           ; BSR set to: 0
 10018  007434  A77A               	btfss	(_M+26)& (0+255),3,b
 10019                           
 10020                           ; BSR set to: 0
 10021  007436  B17A               	btfsc	(_M+26)& (0+255),0,b
 10022  007438  0012               	return	
 10023                           
 10024                           ; BSR set to: 0
 10025  00743A  A37A               	btfss	(_M+26)& (0+255),1,b
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;main.c: 1804: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&&!M._RUSZ_NCISN)
 10029  00743C  B571               	btfsc	(_M+17)& (0+255),2,b
 10030  00743E  0012               	return	
 10031                           
 10032                           ; BSR set to: 0
 10033  007440  AB7A               	btfss	(_M+26)& (0+255),5,b
 10034                           
 10035                           ; BSR set to: 0
 10036  007442  BD7A               	btfsc	(_M+26)& (0+255),6,b
 10037  007444  0012               	return	
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;main.c: 1805: {
 10041                           ;main.c: 1806: if(M._pob_KCW)
 10042  007446  5163               	movf	(_M+3)& (0+255),w,b
 10043  007448  1162               	iorwf	(_M+2)& (0+255),w,b
 10044  00744A  E006               	bz	l38580
 10045  00744C                     
 10046                           ; BSR set to: 0
 10047                           ;main.c: 1807: {
 10048                           ;main.c: 1808: if(DtCW._su_CW)
 10049  00744C  A3CF               	btfss	_DtCW& (0+255),1,b
 10050  00744E  0012               	return	
 10051  007450                     l38576:
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;main.c: 1809: {
 10055                           ;main.c: 1810: M._BLOKUJ_15S=1;
 10056  007450  8971               	bsf	(_M+17)& (0+255),4,b
 10057                           
 10058                           ;main.c: 1811: M.BL15=0;
 10059  007452  6B87               	clrf	(_M+39)& (0+255),b
 10060                           
 10061                           ; BSR set to: 0
 10062                           ;main.c: 1812: SetRozruch();
 10063  007454  EFDB  F056         	goto	_SetRozruch	;wreg free
 10064  007458                     l38580:
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;main.c: 1815: else
 10068                           ;main.c: 1816: if(M._pob_KCO)
 10069  007458  5161               	movf	(_M+1)& (0+255),w,b
 10070  00745A  1160               	iorwf	_M& (0+255),w,b
 10071  00745C  E004               	bz	l38586
 10072  00745E                     L6:
 10073                           
 10074                           ; BSR set to: 0
 10075                           ;main.c: 1817: {
 10076                           ;main.c: 1818: if(DtCO._su_CO) SetRozruch();
 10077  00745E  A3E4               	btfss	_DtCO& (0+255),1,b
 10078  007460  0012               	return	
 10079  007462  EFDB  F056         	goto	_SetRozruch
 10080  007466                     l38586:
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;main.c: 1820: else
 10084                           ;main.c: 1821: if(M._pob_SRW)
 10085  007466  5165               	movf	(_M+5)& (0+255),w,b
 10086  007468  1164               	iorwf	(_M+4)& (0+255),w,b
 10087  00746A  E004               	bz	l38592
 10088  00746C                     L7:
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;main.c: 1822: {
 10092                           ;main.c: 1823: if(DtCO._su_SRW_CO) SetRozruch();
 10093  00746C  A7E4               	btfss	_DtCO& (0+255),3,b
 10094  00746E  0012               	return	
 10095  007470  EFDB  F056         	goto	_SetRozruch
 10096  007474                     l38592:
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;main.c: 1825: else
 10100                           ;main.c: 1826: if(M._pob_CW)
 10101  007474  5169               	movf	(_M+9)& (0+255),w,b
 10102  007476  1168               	iorwf	(_M+8)& (0+255),w,b
 10103  007478  E1E9               	bnz	L11
 10104                           
 10105                           ; BSR set to: 0
 10106                           ;main.c: 1835: else
 10107                           ;main.c: 1836: if(M._pob_CO&&DtCO._su_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;main.c: 1827: {
 10111                           ;main.c: 1828: if(DtCW._su_CW)
 10112  00747A  516B               	movf	(_M+11)& (0+255),w,b
 10113  00747C  116A               	iorwf	(_M+10)& (0+255),w,b
 10114  00747E  A4D8               	btfss	status,2,c
 10115                           
 10116                           ; BSR set to: 0
 10117  007480  A3E4               	btfss	_DtCO& (0+255),1,b
 10118  007482  D005               	goto	l38610
 10119                           
 10120                           ; BSR set to: 0
 10121  007484  B771               	btfsc	(_M+17)& (0+255),3,b
 10122  007486  D003               	goto	l38610
 10123                           
 10124                           ; BSR set to: 0
 10125  007488  A971               	btfss	(_M+17)& (0+255),4,b
 10126  00748A  EFDB  F056         	goto	_SetRozruch
 10127  00748E                     l38610:
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;main.c: 1840: else
 10131                           ;main.c: 1841: if(M._pob_DzCO&&DtCO._su_DZ_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
 10132  00748E  516D               	movf	(_M+13)& (0+255),w,b
 10133  007490  116C               	iorwf	(_M+12)& (0+255),w,b
 10134  007492  A4D8               	btfss	status,2,c
 10135                           
 10136                           ; BSR set to: 0
 10137  007494  ADE4               	btfss	_DtCO& (0+255),6,b
 10138  007496  D005               	goto	l38620
 10139                           
 10140                           ; BSR set to: 0
 10141  007498  B771               	btfsc	(_M+17)& (0+255),3,b
 10142  00749A  D003               	goto	l38620
 10143                           
 10144                           ; BSR set to: 0
 10145  00749C  A971               	btfss	(_M+17)& (0+255),4,b
 10146  00749E  EFDB  F056         	goto	_SetRozruch
 10147  0074A2                     l38620:
 10148                           
 10149                           ; BSR set to: 0
 10150                           ;main.c: 1845: else
 10151                           ;main.c: 1846: if(M._pob_DzCW&&DtCW._su_DZ_CW)
 10152  0074A2  516F               	movf	(_M+15)& (0+255),w,b
 10153  0074A4  116E               	iorwf	(_M+14)& (0+255),w,b
 10154  0074A6  A4D8               	btfss	status,2,c
 10155                           
 10156                           ; BSR set to: 0
 10157  0074A8  ABCF               	btfss	_DtCW& (0+255),5,b
 10158  0074AA  0012               	return	
 10159  0074AC  D7D1               	goto	l38576
 10160  0074AE                     l1107:
 10161                           
 10162                           ; BSR set to: 1
 10163                           ;main.c: 1856: case 3:
 10164                           ;main.c: 1857: {
 10165                           ;main.c: 1858: if(!M._ROZRUCH&&!PORTDbits.RD0)
 10166  0074AE  0100               	movlb	0	; () banked
 10167  0074B0  A570               	btfss	(_M+16)& (0+255),2,b
 10168                           
 10169                           ; BSR set to: 0
 10170  0074B2  B083               	btfsc	3971,0,c	;volatile
 10171  0074B4  0012               	return	
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;main.c: 1859: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M._RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_S
      +                          TB&&!M._RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
 10175  0074B6  A370               	btfss	(_M+16)& (0+255),1,b
 10176                           
 10177                           ; BSR set to: 0
 10178  0074B8  BB70               	btfsc	(_M+16)& (0+255),5,b
 10179  0074BA  0012               	return	
 10180                           
 10181                           ; BSR set to: 0
 10182  0074BC  A171               	btfss	(_M+17)& (0+255),0,b
 10183                           
 10184                           ; BSR set to: 0
 10185  0074BE  BF70               	btfsc	(_M+16)& (0+255),7,b
 10186  0074C0  0012               	return	
 10187                           
 10188                           ; BSR set to: 0
 10189  0074C2  A77A               	btfss	(_M+26)& (0+255),3,b
 10190                           
 10191                           ; BSR set to: 0
 10192  0074C4  B17A               	btfsc	(_M+26)& (0+255),0,b
 10193  0074C6  0012               	return	
 10194                           
 10195                           ; BSR set to: 0
 10196  0074C8  A37A               	btfss	(_M+26)& (0+255),1,b
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;main.c: 1860: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&&!M._RUSZ_NCISN)
 10200  0074CA  B571               	btfsc	(_M+17)& (0+255),2,b
 10201  0074CC  0012               	return	
 10202                           
 10203                           ; BSR set to: 0
 10204  0074CE  AB7A               	btfss	(_M+26)& (0+255),5,b
 10205                           
 10206                           ; BSR set to: 0
 10207  0074D0  BD7A               	btfsc	(_M+26)& (0+255),6,b
 10208  0074D2  0012               	return	
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;main.c: 1861: {
 10212                           ;main.c: 1862: if(M._pob_KCW)
 10213  0074D4  5163               	movf	(_M+3)& (0+255),w,b
 10214  0074D6  1162               	iorwf	(_M+2)& (0+255),w,b
 10215  0074D8  E003               	bz	l38660
 10216  0074DA                     L9:
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;main.c: 1863: {
 10220                           ;main.c: 1864: if(DtCW._su_CW&&DtCO._pz_CO)
 10221  0074DA  A3CF               	btfss	_DtCW& (0+255),1,b
 10222  0074DC  0012               	return	
 10223  0074DE  D021               	goto	L12
 10224  0074E0                     l38660:
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;main.c: 1871: else
 10228                           ;main.c: 1872: if(M._pob_KCO)
 10229  0074E0  5161               	movf	(_M+1)& (0+255),w,b
 10230  0074E2  1160               	iorwf	_M& (0+255),w,b
 10231  0074E4  E1BC               	bnz	L6
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;main.c: 1876: else
 10235                           ;main.c: 1877: if(M._pob_SRW)
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;main.c: 1873: {
 10239                           ;main.c: 1874: if(DtCO._su_CO) SetRozruch();
 10240  0074E6  5165               	movf	(_M+5)& (0+255),w,b
 10241  0074E8  1164               	iorwf	(_M+4)& (0+255),w,b
 10242  0074EA  E1C0               	bnz	L7
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;main.c: 1881: else
 10246                           ;main.c: 1882: if(M._pob_AL)
 10247                           
 10248                           ; BSR set to: 0
 10249                           ;main.c: 1878: {
 10250                           ;main.c: 1879: if(DtCO._su_SRW_CO) SetRozruch();
 10251  0074EC  5167               	movf	(_M+7)& (0+255),w,b
 10252  0074EE  1166               	iorwf	(_M+6)& (0+255),w,b
 10253  0074F0  E118               	bnz	L12
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;main.c: 1891: else
 10257                           ;main.c: 1892: if(M._pob_CW)
 10258                           
 10259                           ; BSR set to: 0
 10260                           ;main.c: 1883: {
 10261                           ;main.c: 1884: if(DtCO._pz_CO)
 10262  0074F2  5169               	movf	(_M+9)& (0+255),w,b
 10263  0074F4  1168               	iorwf	(_M+8)& (0+255),w,b
 10264  0074F6  E1F1               	bnz	L9
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;main.c: 1901: else
 10268                           ;main.c: 1902: if(M._pob_CO&&DtCO._su_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
 10269                           
 10270                           ; BSR set to: 0
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;main.c: 1893: {
 10274                           ;main.c: 1894: if(DtCW._su_CW&&DtCO._pz_CO)
 10275  0074F8  516B               	movf	(_M+11)& (0+255),w,b
 10276  0074FA  116A               	iorwf	(_M+10)& (0+255),w,b
 10277  0074FC  A4D8               	btfss	status,2,c
 10278                           
 10279                           ; BSR set to: 0
 10280  0074FE  A3E4               	btfss	_DtCO& (0+255),1,b
 10281  007500  D005               	goto	l38700
 10282                           
 10283                           ; BSR set to: 0
 10284  007502  B771               	btfsc	(_M+17)& (0+255),3,b
 10285  007504  D003               	goto	l38700
 10286                           
 10287                           ; BSR set to: 0
 10288  007506  A971               	btfss	(_M+17)& (0+255),4,b
 10289  007508  EFDB  F056         	goto	_SetRozruch
 10290  00750C                     l38700:
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;main.c: 1906: else
 10294                           ;main.c: 1907: if(M._pob_DzCO&&DtCO._su_DZ_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
 10295  00750C  516D               	movf	(_M+13)& (0+255),w,b
 10296  00750E  116C               	iorwf	(_M+12)& (0+255),w,b
 10297  007510  A4D8               	btfss	status,2,c
 10298                           
 10299                           ; BSR set to: 0
 10300  007512  ADE4               	btfss	_DtCO& (0+255),6,b
 10301  007514  D03C               	goto	l38802
 10302                           
 10303                           ; BSR set to: 0
 10304  007516  B771               	btfsc	(_M+17)& (0+255),3,b
 10305  007518  D03A               	goto	l38802
 10306  00751A                     
 10307                           ; BSR set to: 0
 10308  00751A  A971               	btfss	(_M+17)& (0+255),4,b
 10309  00751C  EFDB  F056         	goto	_SetRozruch
 10310  007520  D036               	goto	l38802
 10311  007522                     L12:
 10312                           
 10313                           ; BSR set to: 0
 10314  007522  A3E5               	btfss	(_DtCO+1)& (0+255),1,b
 10315  007524  0012               	return	
 10316  007526  D794               	goto	l38576
 10317  007528                     l1131:
 10318                           
 10319                           ; BSR set to: 1
 10320                           ;main.c: 1922: {
 10321                           ;main.c: 1923: if(!M._ROZRUCH&&!PORTDbits.RD0)
 10322  007528  0100               	movlb	0	; () banked
 10323  00752A  A570               	btfss	(_M+16)& (0+255),2,b
 10324                           
 10325                           ; BSR set to: 0
 10326  00752C  B083               	btfsc	3971,0,c	;volatile
 10327  00752E  0012               	return	
 10328                           
 10329                           ; BSR set to: 0
 10330                           ;main.c: 1924: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M._RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_S
      +                          TB&&!M._RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
 10331  007530  A370               	btfss	(_M+16)& (0+255),1,b
 10332                           
 10333                           ; BSR set to: 0
 10334  007532  BB70               	btfsc	(_M+16)& (0+255),5,b
 10335  007534  0012               	return	
 10336                           
 10337                           ; BSR set to: 0
 10338  007536  A171               	btfss	(_M+17)& (0+255),0,b
 10339                           
 10340                           ; BSR set to: 0
 10341  007538  BF70               	btfsc	(_M+16)& (0+255),7,b
 10342  00753A  0012               	return	
 10343                           
 10344                           ; BSR set to: 0
 10345  00753C  A77A               	btfss	(_M+26)& (0+255),3,b
 10346                           
 10347                           ; BSR set to: 0
 10348  00753E  B17A               	btfsc	(_M+26)& (0+255),0,b
 10349  007540  0012               	return	
 10350                           
 10351                           ; BSR set to: 0
 10352  007542  A37A               	btfss	(_M+26)& (0+255),1,b
 10353                           
 10354                           ; BSR set to: 0
 10355                           ;main.c: 1925: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&&!M._RUSZ_NCISN)
 10356  007544  B571               	btfsc	(_M+17)& (0+255),2,b
 10357  007546  0012               	return	
 10358                           
 10359                           ; BSR set to: 0
 10360  007548  AB7A               	btfss	(_M+26)& (0+255),5,b
 10361                           
 10362                           ; BSR set to: 0
 10363  00754A  BD7A               	btfsc	(_M+26)& (0+255),6,b
 10364  00754C  0012               	return	
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;main.c: 1926: {
 10368                           ;main.c: 1927: if(M._pob_KCW)
 10369  00754E  5163               	movf	(_M+3)& (0+255),w,b
 10370  007550  1162               	iorwf	(_M+2)& (0+255),w,b
 10371  007552  E1C3               	bnz	L9
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;main.c: 1936: else
 10375                           ;main.c: 1937: if(M._pob_KCO)
 10376                           
 10377                           ; BSR set to: 0
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;main.c: 1928: {
 10381                           ;main.c: 1929: if(DtCW._su_CW&&DtCO._pz_CO)
 10382  007554  5161               	movf	(_M+1)& (0+255),w,b
 10383  007556  1160               	iorwf	_M& (0+255),w,b
 10384  007558  E182               	bnz	L6
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;main.c: 1941: else
 10388                           ;main.c: 1942: if(M._pob_SRW)
 10389                           
 10390                           ; BSR set to: 0
 10391                           ;main.c: 1938: {
 10392                           ;main.c: 1939: if(DtCO._su_CO) SetRozruch();
 10393  00755A  5165               	movf	(_M+5)& (0+255),w,b
 10394  00755C  1164               	iorwf	(_M+4)& (0+255),w,b
 10395  00755E  E186               	bnz	L7
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;main.c: 1946: else
 10399                           ;main.c: 1947: if(M._pob_AL)
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;main.c: 1943: {
 10403                           ;main.c: 1944: if(DtCO._su_SRW_CO) SetRozruch();
 10404  007560  5167               	movf	(_M+7)& (0+255),w,b
 10405  007562  1166               	iorwf	(_M+6)& (0+255),w,b
 10406  007564  E1DE               	bnz	L12
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;main.c: 1956: else
 10410                           ;main.c: 1957: if(M._pob_CW)
 10411                           
 10412                           ; BSR set to: 0
 10413                           ;main.c: 1948: {
 10414                           ;main.c: 1949: if(DtCO._pz_CO)
 10415  007566  5169               	movf	(_M+9)& (0+255),w,b
 10416  007568  1168               	iorwf	(_M+8)& (0+255),w,b
 10417  00756A  E1B7               	bnz	L9
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;main.c: 1966: else
 10421                           ;main.c: 1967: if(M._pob_CO&&DtCO._su_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
 10422                           
 10423                           ; BSR set to: 0
 10424                           
 10425                           ; BSR set to: 0
 10426                           ;main.c: 1958: {
 10427                           ;main.c: 1959: if(DtCW._su_CW&&DtCO._pz_CO)
 10428  00756C  516B               	movf	(_M+11)& (0+255),w,b
 10429  00756E  116A               	iorwf	(_M+10)& (0+255),w,b
 10430  007570  A4D8               	btfss	status,2,c
 10431                           
 10432                           ; BSR set to: 0
 10433  007572  A3E4               	btfss	_DtCO& (0+255),1,b
 10434  007574  D005               	goto	l38792
 10435                           
 10436                           ; BSR set to: 0
 10437  007576  B771               	btfsc	(_M+17)& (0+255),3,b
 10438  007578  D003               	goto	l38792
 10439                           
 10440                           ; BSR set to: 0
 10441  00757A  A971               	btfss	(_M+17)& (0+255),4,b
 10442  00757C  EFDB  F056         	goto	_SetRozruch
 10443  007580                     l38792:
 10444                           
 10445                           ; BSR set to: 0
 10446                           ;main.c: 1971: else
 10447                           ;main.c: 1972: if(M._pob_DzCO&&DtCO._su_DZ_CO&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
 10448  007580  516D               	movf	(_M+13)& (0+255),w,b
 10449  007582  116C               	iorwf	(_M+12)& (0+255),w,b
 10450  007584  A4D8               	btfss	status,2,c
 10451                           
 10452                           ; BSR set to: 0
 10453  007586  ADE4               	btfss	_DtCO& (0+255),6,b
 10454  007588  D002               	goto	l38802
 10455                           
 10456                           ; BSR set to: 0
 10457  00758A  A771               	btfss	(_M+17)& (0+255),3,b
 10458  00758C  D7C6               	goto	L10
 10459  00758E                     l38802:
 10460                           
 10461                           ; BSR set to: 0
 10462                           ;main.c: 1976: else
 10463                           ;main.c: 1977: if(M._pob_DzCW&&DtCW._su_DZ_CW&&DtCO._pz_CO)
 10464  00758E  516F               	movf	(_M+15)& (0+255),w,b
 10465  007590  116E               	iorwf	(_M+14)& (0+255),w,b
 10466  007592  A4D8               	btfss	status,2,c
 10467                           
 10468                           ; BSR set to: 0
 10469  007594  ABCF               	btfss	_DtCW& (0+255),5,b
 10470  007596  0012               	return	
 10471  007598  D7C4               	goto	L12
 10472  00759A                     l38814:
 10473                           
 10474                           ; BSR set to: 0
 10475  00759A  0101               	movlb	1	; () banked
 10476  00759C  5151               	movf	(_DtKNF+7)& (0+255),w,b
 10477                           
 10478                           ; Switch size 1, requested type "space"
 10479                           ; Number of cases is 4, Range of values is 0 to 3
 10480                           ; switch strategies available:
 10481                           ; Name         Instructions Cycles
 10482                           ; simple_byte           13     7 (average)
 10483                           ;	Chosen strategy is simple_byte
 10484  00759E  E087               	bz	l1107
 10485  0075A0  0A01               	xorlw	1	; case 1
 10486  0075A2  E101 D73D          	bz	l1084
 10487  0075A6  0A03               	xorlw	3	; case 2
 10488  0075A8  E101 D73A          	bz	l1084
 10489  0075AC  0A01               	xorlw	1	; case 3
 10490  0075AE  E101 D77E          	bz	l1107
 10491  0075B2  D7BA               	goto	l1131
 10492  0075B4                     __end_of_DecRozruch:
 10493                           	opt stack 0
 10494                           tblptru	equ	0xFF8
 10495                           tblptrh	equ	0xFF7
 10496                           tblptrl	equ	0xFF6
 10497                           tablat	equ	0xFF5
 10498                           prodh	equ	0xFF4
 10499                           prodl	equ	0xFF3
 10500                           intcon	equ	0xFF2
 10501                           postinc0	equ	0xFEE
 10502                           wreg	equ	0xFE8
 10503                           indf1	equ	0xFE7
 10504                           postinc1	equ	0xFE6
 10505                           postdec1	equ	0xFE5
 10506                           fsr1h	equ	0xFE2
 10507                           fsr1l	equ	0xFE1
 10508                           indf2	equ	0xFDF
 10509                           postinc2	equ	0xFDE
 10510                           postdec2	equ	0xFDD
 10511                           fsr2h	equ	0xFDA
 10512                           fsr2l	equ	0xFD9
 10513                           status	equ	0xFD8
 10514                           
 10515 ;; *************** function _DecWylacz *****************
 10516 ;; Defined at:
 10517 ;;		line 2015 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;		None
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;		None
 10522 ;; Return value:  Size  Location     Type
 10523 ;;		None               void
 10524 ;; Registers used:
 10525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 10526 ;; Tracked objects:
 10527 ;;		On entry : F/0
 10528 ;;		On exit  : F/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10535 ;;Total ram usage:        0 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; Hardware stack levels required when called:    6
 10538 ;; This function calls:
 10539 ;;		_SetWylacz
 10540 ;;		_RdPrt
 10541 ;;		_SetL3
 10542 ;; This function is called by:
 10543 ;;		_main
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547                           	psect	text27
 10548  0036A4                     __ptext27:
 10549                           	opt stack 0
 10550  0036A4                     _DecWylacz:
 10551                           	opt stack 24
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;main.c: 2016: switch(DtKNF.tpkt)
 10555                           
 10556                           ; BSR set to: 0
 10557  0036A4  D147               	goto	l39148
 10558  0036A6                     l1163:
 10559                           
 10560                           ; BSR set to: 1
 10561                           ;main.c: 2019: case 2:
 10562                           ;main.c: 2020: {
 10563                           ;main.c: 2021: if(!M._WYLACZ)
 10564  0036A6  0100               	movlb	0	; () banked
 10565  0036A8  B170               	btfsc	(_M+16)& (0+255),0,b
 10566  0036AA  0012               	return	
 10567                           
 10568                           ; BSR set to: 0
 10569                           ;main.c: 2022: if(M._ROZRUCH||PORTDbits.RD0)
 10570  0036AC  B570               	btfsc	(_M+16)& (0+255),2,b
 10571  0036AE  D002               	goto	l38822
 10572                           
 10573                           ; BSR set to: 0
 10574  0036B0  A083               	btfss	3971,0,c	;volatile
 10575  0036B2  0012               	return	
 10576  0036B4                     l38822:
 10577                           
 10578                           ; BSR set to: 0
 10579                           ;main.c: 2023: {
 10580                           ;main.c: 2024: if(!M._pob_KCW&&!M._pob_KCO&&!M._pob_SRW&&!M._pob_CW&&!M._pob_CO&&!M._pob
      +                          _DzCO&&!M._pob_DzCW)
 10581  0036B4  5163               	movf	(_M+3)& (0+255),w,b
 10582  0036B6  1162               	iorwf	(_M+2)& (0+255),w,b
 10583  0036B8  E114               	bnz	l1168
 10584                           
 10585                           ; BSR set to: 0
 10586  0036BA  5161               	movf	(_M+1)& (0+255),w,b
 10587  0036BC  1160               	iorwf	_M& (0+255),w,b
 10588  0036BE  E111               	bnz	l1168
 10589                           
 10590                           ; BSR set to: 0
 10591  0036C0  5165               	movf	(_M+5)& (0+255),w,b
 10592  0036C2  1164               	iorwf	(_M+4)& (0+255),w,b
 10593  0036C4  E10E               	bnz	l1168
 10594                           
 10595                           ; BSR set to: 0
 10596  0036C6  5169               	movf	(_M+9)& (0+255),w,b
 10597  0036C8  1168               	iorwf	(_M+8)& (0+255),w,b
 10598  0036CA  E10B               	bnz	l1168
 10599                           
 10600                           ; BSR set to: 0
 10601  0036CC  516B               	movf	(_M+11)& (0+255),w,b
 10602  0036CE  116A               	iorwf	(_M+10)& (0+255),w,b
 10603  0036D0  E108               	bnz	l1168
 10604                           
 10605                           ; BSR set to: 0
 10606  0036D2  516D               	movf	(_M+13)& (0+255),w,b
 10607  0036D4  116C               	iorwf	(_M+12)& (0+255),w,b
 10608  0036D6  E105               	bnz	l1168
 10609                           
 10610                           ; BSR set to: 0
 10611  0036D8  516F               	movf	(_M+15)& (0+255),w,b
 10612  0036DA  116E               	iorwf	(_M+14)& (0+255),w,b
 10613  0036DC  E102               	bnz	l1168
 10614  0036DE                     l38836:
 10615                           
 10616                           ;main.c: 2025: {
 10617                           ;main.c: 2026: SetWylacz();
 10618  0036DE  EFE9  F04A         	goto	_SetWylacz	;wreg free
 10619  0036E2                     l1168:
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;main.c: 2028: }
 10623                           ;main.c: 2029: if(M._RUSZ_PWR||M._RUSZ_PLOMIEN||M._RUSZ_CIAG||M._RUSZ_STB||M._RUSZ_NTC_C
      +                          O||M._RUSZ_NTC_CW||M._RUSZ_POMPE||M._RUSZ_CISN||M._RUSZ_NCISN)
 10624  0036E2  AB70               	btfss	(_M+16)& (0+255),5,b
 10625                           
 10626                           ; BSR set to: 0
 10627  0036E4  B171               	btfsc	(_M+17)& (0+255),0,b
 10628  0036E6  EFE9  F04A         	goto	_SetWylacz
 10629                           
 10630                           ; BSR set to: 0
 10631  0036EA  AF70               	btfss	(_M+16)& (0+255),7,b
 10632                           
 10633                           ; BSR set to: 0
 10634  0036EC  B77A               	btfsc	(_M+26)& (0+255),3,b
 10635  0036EE  EFE9  F04A         	goto	_SetWylacz
 10636                           
 10637                           ; BSR set to: 0
 10638  0036F2  A17A               	btfss	(_M+26)& (0+255),0,b
 10639                           
 10640                           ; BSR set to: 0
 10641  0036F4  B37A               	btfsc	(_M+26)& (0+255),1,b
 10642  0036F6  EFE9  F04A         	goto	_SetWylacz
 10643                           
 10644                           ; BSR set to: 0
 10645  0036FA  A571               	btfss	(_M+17)& (0+255),2,b
 10646                           
 10647                           ; BSR set to: 0
 10648  0036FC  BB7A               	btfsc	(_M+26)& (0+255),5,b
 10649  0036FE  EFE9  F04A         	goto	_SetWylacz
 10650                           
 10651                           ; BSR set to: 0
 10652  003702  BD7A               	btfsc	(_M+26)& (0+255),6,b
 10653  003704  EFE9  F04A         	goto	_SetWylacz
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;main.c: 2033: else
 10657                           ;main.c: 2034: if(M._pob_KCW)
 10658  003708  5163               	movf	(_M+3)& (0+255),w,b
 10659  00370A  1162               	iorwf	(_M+2)& (0+255),w,b
 10660  00370C  E004               	bz	l38864
 10661  00370E                     
 10662                           ; BSR set to: 0
 10663                           ;main.c: 2035: {
 10664                           ;main.c: 2036: if(DtCW._ad_CW) SetWylacz();
 10665  00370E  A5CF               	btfss	_DtCW& (0+255),2,b
 10666  003710  0012               	return	
 10667  003712  EFE9  F04A         	goto	_SetWylacz
 10668  003716                     l38864:
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;main.c: 2038: else
 10672                           ;main.c: 2039: if(M._pob_KCO)
 10673  003716  5161               	movf	(_M+1)& (0+255),w,b
 10674  003718  1160               	iorwf	_M& (0+255),w,b
 10675  00371A  E007               	bz	l38870
 10676                           
 10677                           ; BSR set to: 0
 10678                           ;main.c: 2040: {
 10679                           ;main.c: 2041: if(RdPrt(19)) SetWylacz();
 10680  00371C  0E13               	movlw	19
 10681  00371E  EC84  F058         	call	_RdPrt
 10682  003722                     L15:
 10683  003722  A0D8               	btfss	status,0,c
 10684  003724  0012               	return	
 10685  003726  EFE9  F04A         	goto	_SetWylacz
 10686  00372A                     l38870:
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;main.c: 2043: else
 10690                           ;main.c: 2044: if(M._pob_SRW)
 10691  00372A  5165               	movf	(_M+5)& (0+255),w,b
 10692  00372C  1164               	iorwf	(_M+4)& (0+255),w,b
 10693  00372E  E004               	bz	l38876
 10694  003730                     L16:
 10695                           
 10696                           ; BSR set to: 0
 10697                           ;main.c: 2045: {
 10698                           ;main.c: 2046: if(DtCO._ad_SRW_CO) SetWylacz();
 10699  003730  A9E4               	btfss	_DtCO& (0+255),4,b
 10700  003732  0012               	return	
 10701  003734  EFE9  F04A         	goto	_SetWylacz
 10702  003738                     l38876:
 10703                           
 10704                           ; BSR set to: 0
 10705                           ;main.c: 2048: else
 10706                           ;main.c: 2049: if(M._pob_CW)
 10707  003738  5169               	movf	(_M+9)& (0+255),w,b
 10708  00373A  1168               	iorwf	(_M+8)& (0+255),w,b
 10709  00373C  E1E8               	bnz	L13
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;main.c: 2053: else
 10713                           ;main.c: 2054: if(M._pob_CO&&(RdPrt(19)||M._BLOKUJ_3M||M._BLOKUJ_15S))
 10714                           
 10715                           ; BSR set to: 0
 10716                           ;main.c: 2050: {
 10717                           ;main.c: 2051: if(DtCW._ad_CW) SetWylacz();
 10718  00373E  516B               	movf	(_M+11)& (0+255),w,b
 10719  003740  116A               	iorwf	(_M+10)& (0+255),w,b
 10720  003742  E018               	bz	l38902
 10721                           
 10722                           ; BSR set to: 0
 10723  003744  0E13               	movlw	19
 10724  003746  EC84  F058         	call	_RdPrt
 10725  00374A  A0D8               	btfss	status,0,c
 10726                           
 10727                           ; BSR set to: 0
 10728  00374C  B771               	btfsc	(_M+17)& (0+255),3,b
 10729  00374E  D002               	goto	l38890
 10730                           
 10731                           ; BSR set to: 0
 10732  003750  A971               	btfss	(_M+17)& (0+255),4,b
 10733  003752  D010               	goto	l38902
 10734  003754                     l38890:
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;main.c: 2055: {
 10738                           ;main.c: 2056: if(RdPrt(19)&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
 10739  003754  0E13               	movlw	19
 10740  003756  EC84  F058         	call	_RdPrt
 10741  00375A  B0D8               	btfsc	status,0,c
 10742                           
 10743                           ; BSR set to: 0
 10744  00375C  B771               	btfsc	(_M+17)& (0+255),3,b
 10745  00375E  EFE9  F04A         	goto	_SetWylacz
 10746                           
 10747                           ; BSR set to: 0
 10748  003762  B971               	btfsc	(_M+17)& (0+255),4,b
 10749  003764  EFE9  F04A         	goto	_SetWylacz
 10750  003768                     l38896:
 10751                           
 10752                           ; BSR set to: 0
 10753                           ;main.c: 2057: {
 10754                           ;main.c: 2058: M._BLOKUJ_3M=1;
 10755  003768  8771               	bsf	(_M+17)& (0+255),3,b
 10756                           
 10757                           ;main.c: 2059: M.BL3=0;
 10758  00376A  6B86               	clrf	(_M+38)& (0+255),b
 10759                           
 10760                           ; BSR set to: 0
 10761                           ;main.c: 2060: SetL3();
 10762  00376C  EC20  F05B         	call	_SetL3	;wreg free
 10763  003770  EFE9  F04A         	goto	_SetWylacz
 10764  003774                     l38902:
 10765                           
 10766                           ; BSR set to: 0
 10767                           ;main.c: 2064: else
 10768                           ;main.c: 2065: if(M._pob_DzCO&&(DtCO._ad_DZ_CO||M._BLOKUJ_3M||M._BLOKUJ_15S))
 10769  003774  516D               	movf	(_M+13)& (0+255),w,b
 10770  003776  116C               	iorwf	(_M+12)& (0+255),w,b
 10771  003778  E007               	bz	l38912
 10772                           
 10773                           ; BSR set to: 0
 10774  00377A  AFE4               	btfss	_DtCO& (0+255),7,b
 10775                           
 10776                           ; BSR set to: 0
 10777  00377C  B771               	btfsc	(_M+17)& (0+255),3,b
 10778  00377E  EFE9  F04A         	goto	_SetWylacz
 10779                           
 10780                           ; BSR set to: 0
 10781  003782  B971               	btfsc	(_M+17)& (0+255),4,b
 10782  003784  EFE9  F04A         	goto	_SetWylacz
 10783  003788                     l38912:
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;main.c: 2069: else
 10787                           ;main.c: 2070: if(M._pob_DzCW&&DtCW._ad_DZ_CW)
 10788  003788  516F               	movf	(_M+15)& (0+255),w,b
 10789  00378A  116E               	iorwf	(_M+14)& (0+255),w,b
 10790  00378C  A4D8               	btfss	status,2,c
 10791                           
 10792                           ; BSR set to: 0
 10793  00378E  ADCF               	btfss	_DtCW& (0+255),6,b
 10794  003790  0012               	return	
 10795  003792  EFE9  F04A         	goto	_SetWylacz
 10796  003796                     l1198:
 10797                           
 10798                           ; BSR set to: 1
 10799                           ;main.c: 2078: case 3:
 10800                           ;main.c: 2079: {
 10801                           ;main.c: 2080: if(!M._WYLACZ)
 10802  003796  0100               	movlb	0	; () banked
 10803  003798  B170               	btfsc	(_M+16)& (0+255),0,b
 10804  00379A  0012               	return	
 10805                           
 10806                           ; BSR set to: 0
 10807                           ;main.c: 2081: if(M._ROZRUCH||PORTDbits.RD0)
 10808  00379C  B570               	btfsc	(_M+16)& (0+255),2,b
 10809  00379E  D002               	goto	l38922
 10810                           
 10811                           ; BSR set to: 0
 10812  0037A0  A083               	btfss	3971,0,c	;volatile
 10813  0037A2  0012               	return	
 10814  0037A4                     l38922:
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;main.c: 2082: {
 10818                           ;main.c: 2083: if(!M._pob_KCW&&!M._pob_AL&&!M._pob_KCO&&!M._pob_SRW&&!M._pob_CW&&!M._pob
      +                          _CO&&!M._pob_DzCO&&!M._pob_DzCW)
 10819  0037A4  5163               	movf	(_M+3)& (0+255),w,b
 10820  0037A6  1162               	iorwf	(_M+2)& (0+255),w,b
 10821  0037A8  E115               	bnz	l1203
 10822                           
 10823                           ; BSR set to: 0
 10824  0037AA  5167               	movf	(_M+7)& (0+255),w,b
 10825  0037AC  1166               	iorwf	(_M+6)& (0+255),w,b
 10826  0037AE  E112               	bnz	l1203
 10827                           
 10828                           ; BSR set to: 0
 10829  0037B0  5161               	movf	(_M+1)& (0+255),w,b
 10830  0037B2  1160               	iorwf	_M& (0+255),w,b
 10831  0037B4  E10F               	bnz	l1203
 10832                           
 10833                           ; BSR set to: 0
 10834  0037B6  5165               	movf	(_M+5)& (0+255),w,b
 10835  0037B8  1164               	iorwf	(_M+4)& (0+255),w,b
 10836  0037BA  E10C               	bnz	l1203
 10837                           
 10838                           ; BSR set to: 0
 10839  0037BC  5169               	movf	(_M+9)& (0+255),w,b
 10840  0037BE  1168               	iorwf	(_M+8)& (0+255),w,b
 10841  0037C0  E109               	bnz	l1203
 10842                           
 10843                           ; BSR set to: 0
 10844  0037C2  516B               	movf	(_M+11)& (0+255),w,b
 10845  0037C4  116A               	iorwf	(_M+10)& (0+255),w,b
 10846  0037C6  E106               	bnz	l1203
 10847                           
 10848                           ; BSR set to: 0
 10849  0037C8  516D               	movf	(_M+13)& (0+255),w,b
 10850  0037CA  116C               	iorwf	(_M+12)& (0+255),w,b
 10851  0037CC  E103               	bnz	l1203
 10852                           
 10853                           ; BSR set to: 0
 10854  0037CE  516F               	movf	(_M+15)& (0+255),w,b
 10855  0037D0  116E               	iorwf	(_M+14)& (0+255),w,b
 10856  0037D2  E085               	bz	l38836
 10857  0037D4                     l1203:
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;main.c: 2087: }
 10861                           ;main.c: 2088: if(M._RUSZ_PWR||M._RUSZ_PLOMIEN||M._RUSZ_CIAG||M._RUSZ_STB||M._RUSZ_NTC_C
      +                          O||M._RUSZ_NTC_CW||M._RUSZ_POMPE||M._RUSZ_CISN||M._RUSZ_NCISN)
 10862  0037D4  AB70               	btfss	(_M+16)& (0+255),5,b
 10863                           
 10864                           ; BSR set to: 0
 10865  0037D6  B171               	btfsc	(_M+17)& (0+255),0,b
 10866  0037D8  EFE9  F04A         	goto	_SetWylacz
 10867                           
 10868                           ; BSR set to: 0
 10869  0037DC  AF70               	btfss	(_M+16)& (0+255),7,b
 10870                           
 10871                           ; BSR set to: 0
 10872  0037DE  B77A               	btfsc	(_M+26)& (0+255),3,b
 10873  0037E0  EFE9  F04A         	goto	_SetWylacz
 10874                           
 10875                           ; BSR set to: 0
 10876  0037E4  A17A               	btfss	(_M+26)& (0+255),0,b
 10877                           
 10878                           ; BSR set to: 0
 10879  0037E6  B37A               	btfsc	(_M+26)& (0+255),1,b
 10880  0037E8  EFE9  F04A         	goto	_SetWylacz
 10881                           
 10882                           ; BSR set to: 0
 10883  0037EC  A571               	btfss	(_M+17)& (0+255),2,b
 10884                           
 10885                           ; BSR set to: 0
 10886  0037EE  BB7A               	btfsc	(_M+26)& (0+255),5,b
 10887  0037F0  EFE9  F04A         	goto	_SetWylacz
 10888                           
 10889                           ; BSR set to: 0
 10890  0037F4  BD7A               	btfsc	(_M+26)& (0+255),6,b
 10891  0037F6  EFE9  F04A         	goto	_SetWylacz
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;main.c: 2092: else
 10895                           ;main.c: 2093: if(M._pob_KCW)
 10896  0037FA  5163               	movf	(_M+3)& (0+255),w,b
 10897  0037FC  1162               	iorwf	(_M+2)& (0+255),w,b
 10898  0037FE  E004               	bz	l38968
 10899  003800                     L17:
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;main.c: 2094: {
 10903                           ;main.c: 2095: if(DtCW._ad_CW||!DtCO._pz_CO) SetWylacz();
 10904  003800  B5CF               	btfsc	_DtCW& (0+255),2,b
 10905  003802  EFE9  F04A         	goto	_SetWylacz
 10906  003806  D02A               	goto	L19
 10907  003808                     l38968:
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;main.c: 2097: else
 10911                           ;main.c: 2098: if(M._pob_AL)
 10912  003808  5167               	movf	(_M+7)& (0+255),w,b
 10913  00380A  1166               	iorwf	(_M+6)& (0+255),w,b
 10914  00380C  E127               	bnz	L19
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;main.c: 2102: else
 10918                           ;main.c: 2103: if(M._pob_KCO)
 10919                           
 10920                           ; BSR set to: 0
 10921                           ;main.c: 2099: {
 10922                           ;main.c: 2100: if(!DtCO._pz_CO) SetWylacz();
 10923  00380E  5161               	movf	(_M+1)& (0+255),w,b
 10924  003810  1160               	iorwf	_M& (0+255),w,b
 10925  003812  E004               	bz	l38980
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;main.c: 2104: {
 10929                           ;main.c: 2105: if(RdPrt(19)) SetWylacz();
 10930  003814  0E13               	movlw	19
 10931  003816  EC84  F058         	call	_RdPrt
 10932  00381A  D783               	goto	L15
 10933  00381C                     l38980:
 10934                           
 10935                           ; BSR set to: 0
 10936                           ;main.c: 2107: else
 10937                           ;main.c: 2108: if(M._pob_SRW)
 10938  00381C  5165               	movf	(_M+5)& (0+255),w,b
 10939  00381E  1164               	iorwf	(_M+4)& (0+255),w,b
 10940  003820  E187               	bnz	L16
 10941                           
 10942                           ; BSR set to: 0
 10943                           ;main.c: 2112: else
 10944                           ;main.c: 2113: if(M._pob_CW)
 10945                           
 10946                           ; BSR set to: 0
 10947                           ;main.c: 2109: {
 10948                           ;main.c: 2110: if(DtCO._ad_SRW_CO) SetWylacz();
 10949  003822  5169               	movf	(_M+9)& (0+255),w,b
 10950  003824  1168               	iorwf	(_M+8)& (0+255),w,b
 10951  003826  E1EC               	bnz	L17
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;main.c: 2117: else
 10955                           ;main.c: 2118: if(M._pob_CO&&(RdPrt(19)||M._BLOKUJ_3M||M._BLOKUJ_15S))
 10956                           
 10957                           ; BSR set to: 0
 10958                           
 10959                           ; BSR set to: 0
 10960                           ;main.c: 2114: {
 10961                           ;main.c: 2115: if(DtCW._ad_CW||!DtCO._pz_CO) SetWylacz();
 10962  003828  516B               	movf	(_M+11)& (0+255),w,b
 10963  00382A  116A               	iorwf	(_M+10)& (0+255),w,b
 10964  00382C  E00C               	bz	l39014
 10965                           
 10966                           ; BSR set to: 0
 10967  00382E  0E13               	movlw	19
 10968  003830  EC84  F058         	call	_RdPrt
 10969  003834  A0D8               	btfss	status,0,c
 10970                           
 10971                           ; BSR set to: 0
 10972  003836  B771               	btfsc	(_M+17)& (0+255),3,b
 10973  003838  D002               	goto	l39002
 10974                           
 10975                           ; BSR set to: 0
 10976  00383A  A971               	btfss	(_M+17)& (0+255),4,b
 10977  00383C  D004               	goto	l39014
 10978  00383E                     l39002:
 10979                           
 10980                           ; BSR set to: 0
 10981                           ;main.c: 2119: {
 10982                           ;main.c: 2120: if(RdPrt(19)&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
 10983  00383E  0E13               	movlw	19
 10984  003840  EC84  F058         	call	_RdPrt
 10985  003844  D064               	goto	L20
 10986  003846                     l39014:
 10987                           
 10988                           ; BSR set to: 0
 10989                           ;main.c: 2128: else
 10990                           ;main.c: 2129: if(M._pob_DzCO&&(DtCO._ad_DZ_CO||M._BLOKUJ_3M||M._BLOKUJ_15S))
 10991  003846  516D               	movf	(_M+13)& (0+255),w,b
 10992  003848  116C               	iorwf	(_M+12)& (0+255),w,b
 10993  00384A  E06C               	bz	l39138
 10994  00384C                     
 10995                           ; BSR set to: 0
 10996  00384C  AFE4               	btfss	_DtCO& (0+255),7,b
 10997                           
 10998                           ; BSR set to: 0
 10999  00384E  B771               	btfsc	(_M+17)& (0+255),3,b
 11000  003850  EFE9  F04A         	goto	_SetWylacz
 11001                           
 11002                           ; BSR set to: 0
 11003  003854  B971               	btfsc	(_M+17)& (0+255),4,b
 11004  003856  EFE9  F04A         	goto	_SetWylacz
 11005  00385A  D064               	goto	l39138
 11006  00385C                     L19:
 11007                           
 11008                           ; BSR set to: 0
 11009  00385C  B3E5               	btfsc	(_DtCO+1)& (0+255),1,b
 11010  00385E  0012               	return	
 11011  003860  EFE9  F04A         	goto	_SetWylacz
 11012  003864                     l1239:
 11013                           
 11014                           ; BSR set to: 1
 11015                           ;main.c: 2142: {
 11016                           ;main.c: 2143: if(!M._WYLACZ)
 11017  003864  0100               	movlb	0	; () banked
 11018  003866  B170               	btfsc	(_M+16)& (0+255),0,b
 11019  003868  0012               	return	
 11020                           
 11021                           ; BSR set to: 0
 11022                           ;main.c: 2144: if(M._ROZRUCH||PORTDbits.RD0)
 11023  00386A  B570               	btfsc	(_M+16)& (0+255),2,b
 11024  00386C  D002               	goto	l39036
 11025                           
 11026                           ; BSR set to: 0
 11027  00386E  A083               	btfss	3971,0,c	;volatile
 11028  003870  0012               	return	
 11029  003872                     l39036:
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;main.c: 2145: {
 11033                           ;main.c: 2146: if(!M._pob_KCW&&!M._pob_AL&&!M._pob_KCO&&!M._pob_SRW&&!M._pob_CW&&!M._pob
      +                          _CO&&!M._pob_DzCO&&!M._pob_DzCW)
 11034  003872  5163               	movf	(_M+3)& (0+255),w,b
 11035  003874  1162               	iorwf	(_M+2)& (0+255),w,b
 11036  003876  E116               	bnz	l1244
 11037                           
 11038                           ; BSR set to: 0
 11039  003878  5167               	movf	(_M+7)& (0+255),w,b
 11040  00387A  1166               	iorwf	(_M+6)& (0+255),w,b
 11041  00387C  E113               	bnz	l1244
 11042                           
 11043                           ; BSR set to: 0
 11044  00387E  5161               	movf	(_M+1)& (0+255),w,b
 11045  003880  1160               	iorwf	_M& (0+255),w,b
 11046  003882  E110               	bnz	l1244
 11047                           
 11048                           ; BSR set to: 0
 11049  003884  5165               	movf	(_M+5)& (0+255),w,b
 11050  003886  1164               	iorwf	(_M+4)& (0+255),w,b
 11051  003888  E10D               	bnz	l1244
 11052                           
 11053                           ; BSR set to: 0
 11054  00388A  5169               	movf	(_M+9)& (0+255),w,b
 11055  00388C  1168               	iorwf	(_M+8)& (0+255),w,b
 11056  00388E  E10A               	bnz	l1244
 11057                           
 11058                           ; BSR set to: 0
 11059  003890  516B               	movf	(_M+11)& (0+255),w,b
 11060  003892  116A               	iorwf	(_M+10)& (0+255),w,b
 11061  003894  E107               	bnz	l1244
 11062                           
 11063                           ; BSR set to: 0
 11064  003896  516D               	movf	(_M+13)& (0+255),w,b
 11065  003898  116C               	iorwf	(_M+12)& (0+255),w,b
 11066  00389A  E104               	bnz	l1244
 11067                           
 11068                           ; BSR set to: 0
 11069  00389C  516F               	movf	(_M+15)& (0+255),w,b
 11070  00389E  116E               	iorwf	(_M+14)& (0+255),w,b
 11071  0038A0  E101 D71D          	bz	l38836
 11072  0038A4                     l1244:
 11073                           
 11074                           ; BSR set to: 0
 11075                           ;main.c: 2150: }
 11076                           ;main.c: 2151: if(M._RUSZ_PWR||M._RUSZ_PLOMIEN||M._RUSZ_CIAG||M._RUSZ_STB||M._RUSZ_NTC_C
      +                          O||M._RUSZ_NTC_CW||M._RUSZ_POMPE||M._RUSZ_CISN||M._RUSZ_NCISN)
 11077  0038A4  AB70               	btfss	(_M+16)& (0+255),5,b
 11078                           
 11079                           ; BSR set to: 0
 11080  0038A6  B171               	btfsc	(_M+17)& (0+255),0,b
 11081  0038A8  EFE9  F04A         	goto	_SetWylacz
 11082                           
 11083                           ; BSR set to: 0
 11084  0038AC  AF70               	btfss	(_M+16)& (0+255),7,b
 11085                           
 11086                           ; BSR set to: 0
 11087  0038AE  B77A               	btfsc	(_M+26)& (0+255),3,b
 11088  0038B0  EFE9  F04A         	goto	_SetWylacz
 11089                           
 11090                           ; BSR set to: 0
 11091  0038B4  A17A               	btfss	(_M+26)& (0+255),0,b
 11092                           
 11093                           ; BSR set to: 0
 11094  0038B6  B37A               	btfsc	(_M+26)& (0+255),1,b
 11095  0038B8  EFE9  F04A         	goto	_SetWylacz
 11096                           
 11097                           ; BSR set to: 0
 11098  0038BC  A571               	btfss	(_M+17)& (0+255),2,b
 11099                           
 11100                           ; BSR set to: 0
 11101  0038BE  BB7A               	btfsc	(_M+26)& (0+255),5,b
 11102  0038C0  EFE9  F04A         	goto	_SetWylacz
 11103                           
 11104                           ; BSR set to: 0
 11105  0038C4  BD7A               	btfsc	(_M+26)& (0+255),6,b
 11106  0038C6  EFE9  F04A         	goto	_SetWylacz
 11107                           
 11108                           ; BSR set to: 0
 11109                           ;main.c: 2155: else
 11110                           ;main.c: 2156: if(M._pob_KCW)
 11111  0038CA  5163               	movf	(_M+3)& (0+255),w,b
 11112  0038CC  1162               	iorwf	(_M+2)& (0+255),w,b
 11113  0038CE  E198               	bnz	L17
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;main.c: 2160: else
 11117                           ;main.c: 2161: if(M._pob_AL)
 11118                           
 11119                           ; BSR set to: 0
 11120                           
 11121                           ; BSR set to: 0
 11122                           ;main.c: 2157: {
 11123                           ;main.c: 2158: if(DtCW._ad_CW||!DtCO._pz_CO) SetWylacz();
 11124  0038D0  5167               	movf	(_M+7)& (0+255),w,b
 11125  0038D2  1166               	iorwf	(_M+6)& (0+255),w,b
 11126  0038D4  E1C3               	bnz	L19
 11127                           
 11128                           ; BSR set to: 0
 11129                           ;main.c: 2165: else
 11130                           ;main.c: 2166: if(M._pob_KCO)
 11131                           
 11132                           ; BSR set to: 0
 11133                           ;main.c: 2162: {
 11134                           ;main.c: 2163: if(!DtCO._pz_CO) SetWylacz();
 11135  0038D6  5161               	movf	(_M+1)& (0+255),w,b
 11136  0038D8  1160               	iorwf	_M& (0+255),w,b
 11137  0038DA  E004               	bz	l39094
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;main.c: 2167: {
 11141                           ;main.c: 2168: if(RdPrt(19)) SetWylacz();
 11142  0038DC  0E13               	movlw	19
 11143  0038DE  EC84  F058         	call	_RdPrt
 11144  0038E2  D71F               	goto	L15
 11145  0038E4                     l39094:
 11146                           
 11147                           ; BSR set to: 0
 11148                           ;main.c: 2170: else
 11149                           ;main.c: 2171: if(M._pob_SRW)
 11150  0038E4  5165               	movf	(_M+5)& (0+255),w,b
 11151  0038E6  1164               	iorwf	(_M+4)& (0+255),w,b
 11152  0038E8  E001 D722          	bnz	L16
 11153                           
 11154                           ; BSR set to: 0
 11155                           ;main.c: 2175: else
 11156                           ;main.c: 2176: if(M._pob_CW)
 11157                           
 11158                           ; BSR set to: 0
 11159                           ;main.c: 2172: {
 11160                           ;main.c: 2173: if(DtCO._ad_SRW_CO) SetWylacz();
 11161  0038EC  5169               	movf	(_M+9)& (0+255),w,b
 11162  0038EE  1168               	iorwf	(_M+8)& (0+255),w,b
 11163  0038F0  E187               	bnz	L17
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;main.c: 2180: else
 11167                           ;main.c: 2181: if(M._pob_CO&&(RdPrt(19)||M._BLOKUJ_3M||M._BLOKUJ_15S))
 11168                           
 11169                           ; BSR set to: 0
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;main.c: 2177: {
 11173                           ;main.c: 2178: if(DtCW._ad_CW||!DtCO._pz_CO) SetWylacz();
 11174  0038F2  516B               	movf	(_M+11)& (0+255),w,b
 11175  0038F4  116A               	iorwf	(_M+10)& (0+255),w,b
 11176  0038F6  E013               	bz	l39128
 11177                           
 11178                           ; BSR set to: 0
 11179  0038F8  0E13               	movlw	19
 11180  0038FA  EC84  F058         	call	_RdPrt
 11181  0038FE  A0D8               	btfss	status,0,c
 11182                           
 11183                           ; BSR set to: 0
 11184  003900  B771               	btfsc	(_M+17)& (0+255),3,b
 11185  003902  D002               	goto	l39116
 11186                           
 11187                           ; BSR set to: 0
 11188  003904  A971               	btfss	(_M+17)& (0+255),4,b
 11189  003906  D00B               	goto	l39128
 11190  003908                     l39116:
 11191                           
 11192                           ; BSR set to: 0
 11193                           ;main.c: 2182: {
 11194                           ;main.c: 2183: if(RdPrt(19)&&!M._BLOKUJ_3M&&!M._BLOKUJ_15S)
 11195  003908  0E13               	movlw	19
 11196  00390A  EC84  F058         	call	_RdPrt
 11197  00390E                     L20:
 11198  00390E  B0D8               	btfsc	status,0,c
 11199                           
 11200                           ; BSR set to: 0
 11201  003910  B771               	btfsc	(_M+17)& (0+255),3,b
 11202  003912  EFE9  F04A         	goto	_SetWylacz
 11203                           
 11204                           ; BSR set to: 0
 11205  003916  A971               	btfss	(_M+17)& (0+255),4,b
 11206  003918  D727               	goto	l38896
 11207  00391A  EFE9  F04A         	goto	_SetWylacz
 11208  00391E                     l39128:
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;main.c: 2191: else
 11212                           ;main.c: 2192: if(M._pob_DzCO&&(DtCO._ad_DZ_CO||M._BLOKUJ_3M||M._BLOKUJ_15S))
 11213  00391E  516D               	movf	(_M+13)& (0+255),w,b
 11214  003920  116C               	iorwf	(_M+12)& (0+255),w,b
 11215  003922  E194               	bnz	L18
 11216  003924                     l39138:
 11217                           
 11218                           ; BSR set to: 0
 11219                           ;main.c: 2196: else
 11220                           ;main.c: 2197: if(M._pob_DzCW&&(DtCW._ad_DZ_CW||!DtCO._pz_CO))
 11221  003924  516F               	movf	(_M+15)& (0+255),w,b
 11222  003926  116E               	iorwf	(_M+14)& (0+255),w,b
 11223  003928  B4D8               	btfsc	status,2,c
 11224  00392A  0012               	return	
 11225                           
 11226                           ; BSR set to: 0
 11227  00392C  BDCF               	btfsc	_DtCW& (0+255),6,b
 11228  00392E  EFE9  F04A         	goto	_SetWylacz
 11229  003932  D794               	goto	L19
 11230  003934                     l39148:
 11231                           
 11232                           ; BSR set to: 0
 11233  003934  0101               	movlb	1	; () banked
 11234  003936  5151               	movf	(_DtKNF+7)& (0+255),w,b
 11235                           
 11236                           ; Switch size 1, requested type "space"
 11237                           ; Number of cases is 4, Range of values is 0 to 3
 11238                           ; switch strategies available:
 11239                           ; Name         Instructions Cycles
 11240                           ; simple_byte           13     7 (average)
 11241                           ;	Chosen strategy is simple_byte
 11242  003938  E101 D72D          	bz	l1198
 11243  00393C  0A01               	xorlw	1	; case 1
 11244  00393E  E101 D6B2          	bz	l1163
 11245  003942  0A03               	xorlw	3	; case 2
 11246  003944  E101 D6AF          	bz	l1163
 11247  003948  0A01               	xorlw	1	; case 3
 11248  00394A  E101 D724          	bz	l1198
 11249  00394E  D78A               	goto	l1239
 11250  003950                     __end_of_DecWylacz:
 11251                           	opt stack 0
 11252                           tblptru	equ	0xFF8
 11253                           tblptrh	equ	0xFF7
 11254                           tblptrl	equ	0xFF6
 11255                           tablat	equ	0xFF5
 11256                           prodh	equ	0xFF4
 11257                           prodl	equ	0xFF3
 11258                           intcon	equ	0xFF2
 11259                           postinc0	equ	0xFEE
 11260                           wreg	equ	0xFE8
 11261                           indf1	equ	0xFE7
 11262                           postinc1	equ	0xFE6
 11263                           postdec1	equ	0xFE5
 11264                           fsr1h	equ	0xFE2
 11265                           fsr1l	equ	0xFE1
 11266                           indf2	equ	0xFDF
 11267                           postinc2	equ	0xFDE
 11268                           postdec2	equ	0xFDD
 11269                           fsr2h	equ	0xFDA
 11270                           fsr2l	equ	0xFD9
 11271                           status	equ	0xFD8
 11272                           
 11273 ;; *************** function _FunkcjaSerwisowa *****************
 11274 ;; Defined at:
 11275 ;;		line 2264 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;		None
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;		None
 11280 ;; Return value:  Size  Location     Type
 11281 ;;		None               void
 11282 ;; Registers used:
 11283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11284 ;; Tracked objects:
 11285 ;;		On entry : F/0
 11286 ;;		On exit  : E/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11293 ;;Total ram usage:        1 bytes
 11294 ;; Hardware stack levels used:    1
 11295 ;; Hardware stack levels required when called:    5
 11296 ;; This function calls:
 11297 ;;		_StartRTM
 11298 ;;		_RTM
 11299 ;; This function is called by:
 11300 ;;		_main
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text28
 11305  009E9C                     __ptext28:
 11306                           	opt stack 0
 11307  009E9C                     _FunkcjaSerwisowa:
 11308                           	opt stack 25
 11309                           
 11310                           ; BSR set to: 0
 11311                           ;main.c: 2265: if(M._AKTYWNE_KNF)
 11312                           
 11313                           ; BSR set to: 0
 11314  009E9C  5179               	movf	(_M+25)& (0+255),w,b
 11315  009E9E  1178               	iorwf	(_M+24)& (0+255),w,b
 11316  009EA0  E025               	bz	l31038
 11317  009EA2                     l31014:
 11318                           
 11319                           ;main.c: 2266: {
 11320                           ;main.c: 2267: M.SRV=0;
 11321  009EA2  0100               	movlb	0	; () banked
 11322  009EA4  6B8F               	clrf	(_M+47)& (0+255),b
 11323                           
 11324                           ;main.c: 2268: M._AKTYWNE_SRW=0;
 11325  009EA6  6B72               	clrf	(_M+18)& (0+255),b
 11326  009EA8  6B73               	clrf	(_M+19)& (0+255),b
 11327                           
 11328                           ;main.c: 2269: }
 11329  009EAA  0012               	return	
 11330  009EAC                     l31016:
 11331                           
 11332                           ; BSR set to: 0
 11333                           ;main.c: 2274: {
 11334                           ;main.c: 2275: if((PFN.poz==3)&&(PFN._fnserw&&!PFN._ofnserw))
 11335  009EAC  0101               	movlb	1	; () banked
 11336  009EAE  51D9               	movf	(_PFN+31)& (0+255),w,b
 11337  009EB0  0A03               	xorlw	3
 11338  009EB2  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 11339  009EB4  B4D8               	btfsc	status,2,c
 11340                           
 11341                           ; BSR set to: 1
 11342  009EB6  ADBB               	btfss	(_PFN+1)& (0+255),6,b
 11343  009EB8  0012               	return	
 11344                           
 11345                           ; BSR set to: 1
 11346  009EBA  BFBD               	btfsc	(_PFN+3)& (0+255),7,b
 11347  009EBC  0012               	return	
 11348                           
 11349                           ; BSR set to: 1
 11350                           ;main.c: 2276: {
 11351                           ;main.c: 2277: M.SRV=1;
 11352  009EBE  0E01               	movlw	1
 11353  009EC0  0100               	movlb	0	; () banked
 11354  009EC2  6F8F               	movwf	(_M+47)& (0+255),b
 11355                           
 11356                           ;main.c: 2278: M._AKTYWNE_SRW=1;
 11357  009EC4  6B73               	clrf	(_M+19)& (0+255),b
 11358  009EC6  6F72               	movwf	(_M+18)& (0+255),b
 11359                           
 11360                           ; BSR set to: 0
 11361                           ;main.c: 2279: StartRTM(1);
 11362  009EC8  EF50  F057         	goto	_StartRTM
 11363  009ECC                     l31026:
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;main.c: 2284: {
 11367                           ;main.c: 2286: if((PFN.poz==3)&&!PFN._res&&(RTM(1)<15)) return;
 11368  009ECC  0101               	movlb	1	; () banked
 11369  009ECE  51D9               	movf	(_PFN+31)& (0+255),w,b
 11370  009ED0  0A03               	xorlw	3
 11371  009ED2  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 11372  009ED4  B4D8               	btfsc	status,2,c
 11373                           
 11374                           ; BSR set to: 1
 11375  009ED6  B7BC               	btfsc	(_PFN+2)& (0+255),3,b
 11376  009ED8  D7E4               	goto	l31014
 11377                           
 11378                           ; BSR set to: 1
 11379  009EDA  0E01               	movlw	1
 11380  009EDC  EC3D  F057         	call	_RTM
 11381  009EE0  6E1F               	movwf	??_FunkcjaSerwisowa& (0+255),c
 11382  009EE2  0E0F               	movlw	15
 11383  009EE4  5C1F               	subwf	??_FunkcjaSerwisowa,w,c
 11384  009EE6  A0D8               	btfss	status,0,c
 11385  009EE8  0012               	return	
 11386  009EEA  D7DB               	goto	l31014
 11387  009EEC                     l31038:
 11388                           
 11389                           ; BSR set to: 0
 11390  009EEC  518F               	movf	(_M+47)& (0+255),w,b
 11391                           
 11392                           ; Switch size 1, requested type "space"
 11393                           ; Number of cases is 2, Range of values is 0 to 1
 11394                           ; switch strategies available:
 11395                           ; Name         Instructions Cycles
 11396                           ; simple_byte            7     4 (average)
 11397                           ;	Chosen strategy is simple_byte
 11398  009EEE  E0DE               	bz	l31016
 11399  009EF0  0A01               	xorlw	1	; case 1
 11400  009EF2  A4D8               	btfss	status,2,c
 11401  009EF4  0012               	return	
 11402  009EF6  D7EA               	goto	l31026
 11403  009EF8                     __end_of_FunkcjaSerwisowa:
 11404                           	opt stack 0
 11405                           tblptru	equ	0xFF8
 11406                           tblptrh	equ	0xFF7
 11407                           tblptrl	equ	0xFF6
 11408                           tablat	equ	0xFF5
 11409                           prodh	equ	0xFF4
 11410                           prodl	equ	0xFF3
 11411                           intcon	equ	0xFF2
 11412                           postinc0	equ	0xFEE
 11413                           wreg	equ	0xFE8
 11414                           indf1	equ	0xFE7
 11415                           postinc1	equ	0xFE6
 11416                           postdec1	equ	0xFE5
 11417                           fsr1h	equ	0xFE2
 11418                           fsr1l	equ	0xFE1
 11419                           indf2	equ	0xFDF
 11420                           postinc2	equ	0xFDE
 11421                           postdec2	equ	0xFDD
 11422                           fsr2h	equ	0xFDA
 11423                           fsr2l	equ	0xFD9
 11424                           status	equ	0xFD8
 11425                           
 11426 ;; *************** function _DecyzjaAntyLeg *****************
 11427 ;; Defined at:
 11428 ;;		line 542 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 11429 ;; Parameters:    Size  Location     Type
 11430 ;;		None
 11431 ;; Auto vars:     Size  Location     Type
 11432 ;;		None
 11433 ;; Return value:  Size  Location     Type
 11434 ;;		None               void
 11435 ;; Registers used:
 11436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11437 ;; Tracked objects:
 11438 ;;		On entry : E/0
 11439 ;;		On exit  : 0/0
 11440 ;;		Unchanged: 0/0
 11441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11446 ;;Total ram usage:        1 bytes
 11447 ;; Hardware stack levels used:    1
 11448 ;; Hardware stack levels required when called:    5
 11449 ;; This function calls:
 11450 ;;		_StartRTG
 11451 ;;		_RTM
 11452 ;;		_RTG
 11453 ;;		_StartRTM
 11454 ;;		_Busy_eep
 11455 ;;		_Write_b_eep
 11456 ;; This function is called by:
 11457 ;;		_main
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           	psect	text29
 11462  008008                     __ptext29:
 11463                           	opt stack 0
 11464  008008                     _DecyzjaAntyLeg:
 11465                           	opt stack 25
 11466                           
 11467                           ;main.c: 638: if(DtKNF.tpkt==0)
 11468  008008  0101               	movlb	1	; () banked
 11469  00800A  6751               	tstfsz	(_DtKNF+7)& (0+255),b
 11470  00800C  D013               	goto	l712
 11471                           
 11472                           ; BSR set to: 1
 11473                           ;main.c: 639: {
 11474                           ;main.c: 642: if(M._AKTYWNE_AL)
 11475  00800E  0100               	movlb	0	; () banked
 11476  008010  5175               	movf	(_M+21)& (0+255),w,b
 11477  008012  1174               	iorwf	(_M+20)& (0+255),w,b
 11478  008014  E025               	bz	l31066
 11479                           
 11480                           ; BSR set to: 0
 11481                           ;main.c: 643: {
 11482                           ;main.c: 644: if(DtKNF.aleg)
 11483  008016  0101               	movlb	1	; () banked
 11484  008018  515B               	movf	(_DtKNF+17)& (0+255),w,b
 11485  00801A  E005               	bz	l31050
 11486                           
 11487                           ; BSR set to: 1
 11488                           ;main.c: 645: {
 11489                           ;main.c: 646: StartRTG(1);
 11490  00801C  0E01               	movlw	1
 11491  00801E  EC76  F057         	call	_StartRTG
 11492                           
 11493                           ; BSR set to: 1
 11494                           ;main.c: 647: M.LICZNIK_ANL=0;
 11495  008022  0100               	movlb	0	; () banked
 11496  008024  6B81               	clrf	(_M+33)& (0+255),b
 11497  008026                     l31050:
 11498                           
 11499                           ;main.c: 648: }
 11500                           ;main.c: 649: if(M._AKTYWNE_KNF||M._AKTYWNE_SRW)
 11501  008026  0100               	movlb	0	; () banked
 11502  008028  5179               	movf	(_M+25)& (0+255),w,b
 11503  00802A  1178               	iorwf	(_M+24)& (0+255),w,b
 11504  00802C  E103               	bnz	l712
 11505                           
 11506                           ; BSR set to: 0
 11507  00802E  5173               	movf	(_M+19)& (0+255),w,b
 11508  008030  1172               	iorwf	(_M+18)& (0+255),w,b
 11509  008032  E004               	bz	l31054
 11510  008034                     l712:
 11511                           
 11512                           ;main.c: 650: {
 11513                           ;main.c: 651: M._AKTYWNE_AL=0;
 11514  008034  0100               	movlb	0	; () banked
 11515  008036  6B74               	clrf	(_M+20)& (0+255),b
 11516  008038  6B75               	clrf	(_M+21)& (0+255),b
 11517                           
 11518                           ;main.c: 652: return;
 11519  00803A  0012               	return	
 11520  00803C                     l31054:
 11521                           
 11522                           ; BSR set to: 0
 11523                           ;main.c: 653: }
 11524                           ;main.c: 655: if(!((PFN.poz==2)||(PFN.poz==3)))
 11525  00803C  0101               	movlb	1	; () banked
 11526  00803E  51D9               	movf	(_PFN+31)& (0+255),w,b
 11527  008040  0A02               	xorlw	2
 11528  008042  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 11529  008044  E004               	bz	l31060
 11530                           
 11531                           ; BSR set to: 1
 11532  008046  51D9               	movf	(_PFN+31)& (0+255),w,b
 11533  008048  0A03               	xorlw	3
 11534  00804A  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 11535  00804C  E1F3               	bnz	l712
 11536  00804E                     l31060:
 11537                           
 11538                           ; BSR set to: 1
 11539                           ;main.c: 659: }
 11540                           ;main.c: 661: if(RTM(4)>=60)
 11541  00804E  0E04               	movlw	4
 11542  008050  EC3D  F057         	call	_RTM
 11543  008054  6E22               	movwf	??_DecyzjaAntyLeg& (0+255),c
 11544  008056  0E3C               	movlw	60
 11545  008058  5C22               	subwf	??_DecyzjaAntyLeg,w,c
 11546  00805A  A0D8               	btfss	status,0,c
 11547                           
 11548                           ; BSR set to: 1
 11549                           ;main.c: 665: }
 11550                           ;main.c: 668: if(PFN._res)
 11551  00805C  B7BC               	btfsc	(_PFN+2)& (0+255),3,b
 11552  00805E  D7EA               	goto	l712
 11553  008060                     l31066:
 11554                           
 11555                           ;main.c: 672: }
 11556                           ;main.c: 673: }
 11557                           ;main.c: 676: if(!M._AKTYWNE_AL)
 11558  008060  0100               	movlb	0	; () banked
 11559  008062  5175               	movf	(_M+21)& (0+255),w,b
 11560  008064  1174               	iorwf	(_M+20)& (0+255),w,b
 11561  008066  E152               	bnz	l31120
 11562                           
 11563                           ; BSR set to: 0
 11564                           ;main.c: 677: {
 11565                           ;main.c: 678: if(M._AKTYWNE_KNF||M._AKTYWNE_SRW)
 11566  008068  5179               	movf	(_M+25)& (0+255),w,b
 11567  00806A  1178               	iorwf	(_M+24)& (0+255),w,b
 11568  00806C  A4D8               	btfss	status,2,c
 11569  00806E  0012               	return	
 11570                           
 11571                           ; BSR set to: 0
 11572  008070  5173               	movf	(_M+19)& (0+255),w,b
 11573  008072  1172               	iorwf	(_M+18)& (0+255),w,b
 11574  008074  A4D8               	btfss	status,2,c
 11575  008076  0012               	return	
 11576                           
 11577                           ; BSR set to: 0
 11578                           ;main.c: 681: }
 11579                           ;main.c: 684: if(DtKNF.aleg)
 11580  008078  0101               	movlb	1	; () banked
 11581  00807A  515B               	movf	(_DtKNF+17)& (0+255),w,b
 11582  00807C  E031               	bz	l721
 11583                           
 11584                           ; BSR set to: 1
 11585                           ;main.c: 685: {
 11586                           ;main.c: 686: if(RTG(1)>=1)
 11587  00807E  0E01               	movlw	1
 11588  008080  EC89  F057         	call	_RTG
 11589  008084  0900               	iorlw	0
 11590  008086  E02C               	bz	l721
 11591                           
 11592                           ; BSR set to: 1
 11593                           ;main.c: 687: {
 11594                           ;main.c: 688: StartRTG(1);
 11595  008088  0E01               	movlw	1
 11596  00808A  EC76  F057         	call	_StartRTG
 11597                           
 11598                           ; BSR set to: 1
 11599                           ;main.c: 689: M.LICZNIK_ANL++;
 11600  00808E  0100               	movlb	0	; () banked
 11601  008090  2B81               	incf	(_M+33)& (0+255),f,b
 11602                           
 11603                           ; BSR set to: 0
 11604                           ;main.c: 690: if(M.LICZNIK_ANL>=168)
 11605  008092  EE20  F081         	lfsr	2,_M+33
 11606  008096  0EA7               	movlw	167
 11607  008098  64DF               	cpfsgt	indf2,c
 11608  00809A  D019               	goto	l31100
 11609                           
 11610                           ; BSR set to: 0
 11611                           ;main.c: 691: {
 11612                           ;main.c: 692: M.LICZNIK_ANL=0;
 11613  00809C  6B81               	clrf	(_M+33)& (0+255),b
 11614                           
 11615                           ; BSR set to: 0
 11616                           ;main.c: 693: if((PFN.poz==2)||(PFN.poz==3)) M._AKTYWNE_AL=1;
 11617  00809E  0101               	movlb	1	; () banked
 11618  0080A0  51D9               	movf	(_PFN+31)& (0+255),w,b
 11619  0080A2  0A02               	xorlw	2
 11620  0080A4  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 11621  0080A6  E004               	bz	l31088
 11622                           
 11623                           ; BSR set to: 1
 11624  0080A8  51D9               	movf	(_PFN+31)& (0+255),w,b
 11625  0080AA  0A03               	xorlw	3
 11626  0080AC  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 11627  0080AE  E104               	bnz	l31090
 11628  0080B0                     l31088:
 11629                           
 11630                           ; BSR set to: 1
 11631  0080B0  0100               	movlb	0	; () banked
 11632  0080B2  6B75               	clrf	(_M+21)& (0+255),b
 11633  0080B4  0E01               	movlw	1
 11634  0080B6  6F74               	movwf	(_M+20)& (0+255),b
 11635  0080B8                     l31090:
 11636                           
 11637                           ;main.c: 694: StartRTM(4);
 11638  0080B8  0E04               	movlw	4
 11639  0080BA  EC50  F057         	call	_StartRTM
 11640  0080BE                     l31092:
 11641                           
 11642                           ; BSR set to: 1
 11643                           ;main.c: 695: (Busy_eep(), Write_b_eep(0x00C7,0));
 11644  0080BE  EC29  F05B         	call	_Busy_eep	;wreg free
 11645                           
 11646                           ; BSR set to: 1
 11647  0080C2  6A1F               	clrf	?_Write_b_eep+1,c
 11648  0080C4  0EC7               	movlw	199
 11649  0080C6  6E1E               	movwf	?_Write_b_eep,c
 11650  0080C8  6A20               	clrf	?_Write_b_eep+2,c
 11651  0080CA  EF83  F053         	goto	_Write_b_eep	;wreg free
 11652  0080CE                     l31100:
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;main.c: 698: else
 11656                           ;main.c: 699: {
 11657                           ;main.c: 700: (Busy_eep(), Write_b_eep(0x00C7,M.LICZNIK_ANL));
 11658  0080CE  EC29  F05B         	call	_Busy_eep	;wreg free
 11659                           
 11660                           ; BSR set to: 0
 11661  0080D2  6A1F               	clrf	?_Write_b_eep+1,c
 11662  0080D4  0EC7               	movlw	199
 11663  0080D6  6E1E               	movwf	?_Write_b_eep,c
 11664  0080D8  C081  F020         	movff	_M+33,?_Write_b_eep+2
 11665  0080DC  EC83  F053         	call	_Write_b_eep	;wreg free
 11666  0080E0                     l721:
 11667                           
 11668                           ;main.c: 701: }
 11669                           ;main.c: 702: }
 11670                           ;main.c: 703: }
 11671                           ;main.c: 705: if(!((PFN.poz==2)||(PFN.poz==3)))
 11672  0080E0  0101               	movlb	1	; () banked
 11673  0080E2  51D9               	movf	(_PFN+31)& (0+255),w,b
 11674  0080E4  0A02               	xorlw	2
 11675  0080E6  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 11676  0080E8  E005               	bz	l728
 11677                           
 11678                           ; BSR set to: 1
 11679  0080EA  51D9               	movf	(_PFN+31)& (0+255),w,b
 11680  0080EC  0A03               	xorlw	3
 11681  0080EE  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 11682  0080F0  A4D8               	btfss	status,2,c
 11683  0080F2  0012               	return	
 11684  0080F4                     l728:
 11685                           
 11686                           ; BSR set to: 1
 11687                           ;main.c: 708: }
 11688                           ;main.c: 711: if(PFN._aleg&&!PFN._oaleg)
 11689  0080F4  B1BC               	btfsc	(_PFN+2)& (0+255),0,b
 11690                           
 11691                           ; BSR set to: 1
 11692  0080F6  B1BE               	btfsc	(_PFN+4)& (0+255),0,b
 11693  0080F8  0012               	return	
 11694                           
 11695                           ; BSR set to: 1
 11696                           ;main.c: 712: {
 11697                           ;main.c: 713: M.LICZNIK_ANL=0;
 11698  0080FA  0100               	movlb	0	; () banked
 11699  0080FC  6B81               	clrf	(_M+33)& (0+255),b
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;main.c: 714: M._AKTYWNE_AL=1;
 11703  0080FE  6B75               	clrf	(_M+21)& (0+255),b
 11704  008100  0E01               	movlw	1
 11705  008102  6F74               	movwf	(_M+20)& (0+255),b
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;main.c: 715: StartRTM(4);
 11709  008104  0E04               	movlw	4
 11710  008106  EC50  F057         	call	_StartRTM
 11711  00810A  D7D9               	goto	l31092
 11712  00810C                     l31120:
 11713                           
 11714                           ; BSR set to: 0
 11715                           ;main.c: 719: else
 11716                           ;main.c: 720: {
 11717                           ;main.c: 721: StartRTG(1);
 11718  00810C  0E01               	movlw	1
 11719  00810E  EC76  F057         	call	_StartRTG
 11720                           
 11721                           ; BSR set to: 1
 11722                           ;main.c: 722: M.LICZNIK_ANL=0;
 11723  008112  0100               	movlb	0	; () banked
 11724  008114  6B81               	clrf	(_M+33)& (0+255),b
 11725  008116  0012               	return	
 11726  008118                     __end_of_DecyzjaAntyLeg:
 11727                           	opt stack 0
 11728                           tblptru	equ	0xFF8
 11729                           tblptrh	equ	0xFF7
 11730                           tblptrl	equ	0xFF6
 11731                           tablat	equ	0xFF5
 11732                           prodh	equ	0xFF4
 11733                           prodl	equ	0xFF3
 11734                           intcon	equ	0xFF2
 11735                           postinc0	equ	0xFEE
 11736                           wreg	equ	0xFE8
 11737                           indf1	equ	0xFE7
 11738                           postinc1	equ	0xFE6
 11739                           postdec1	equ	0xFE5
 11740                           fsr1h	equ	0xFE2
 11741                           fsr1l	equ	0xFE1
 11742                           indf2	equ	0xFDF
 11743                           postinc2	equ	0xFDE
 11744                           postdec2	equ	0xFDD
 11745                           fsr2h	equ	0xFDA
 11746                           fsr2l	equ	0xFD9
 11747                           status	equ	0xFD8
 11748                           
 11749 ;; *************** function _KolejkaPobudzen *****************
 11750 ;; Defined at:
 11751 ;;		line 433 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 11752 ;; Parameters:    Size  Location     Type
 11753 ;;		None
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;  wr              1   33[COMRAM] unsigned char 
 11756 ;; Return value:  Size  Location     Type
 11757 ;;		None               void
 11758 ;; Registers used:
 11759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : F/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11766 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11768 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11769 ;;Total ram usage:        3 bytes
 11770 ;; Hardware stack levels used:    1
 11771 ;; Hardware stack levels required when called:    5
 11772 ;; This function calls:
 11773 ;;		_RdPrt
 11774 ;; This function is called by:
 11775 ;;		_main
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           	psect	text30
 11780  0075B4                     __ptext30:
 11781                           	opt stack 0
 11782  0075B4                     _KolejkaPobudzen:
 11783                           	opt stack 25
 11784                           
 11785                           ;main.c: 437: if(M._AKTYWNE_KNF)
 11786  0075B4  0100               	movlb	0	; () banked
 11787  0075B6  5179               	movf	(_M+25)& (0+255),w,b
 11788  0075B8  1178               	iorwf	(_M+24)& (0+255),w,b
 11789  0075BA  E033               	bz	l672
 11790                           
 11791                           ; BSR set to: 0
 11792                           ;main.c: 438: {
 11793                           ;main.c: 439: M._pob_SRW=0;
 11794  0075BC  6B64               	clrf	(_M+4)& (0+255),b
 11795  0075BE  6B65               	clrf	(_M+5)& (0+255),b
 11796                           
 11797                           ;main.c: 440: M._pob_AL=0;
 11798  0075C0  6B66               	clrf	(_M+6)& (0+255),b
 11799  0075C2  6B67               	clrf	(_M+7)& (0+255),b
 11800                           
 11801                           ;main.c: 441: M._pob_CO=0;
 11802  0075C4  6B6A               	clrf	(_M+10)& (0+255),b
 11803  0075C6  6B6B               	clrf	(_M+11)& (0+255),b
 11804                           
 11805                           ;main.c: 442: M._pob_CW=0;
 11806  0075C8  6B68               	clrf	(_M+8)& (0+255),b
 11807  0075CA  6B69               	clrf	(_M+9)& (0+255),b
 11808                           
 11809                           ;main.c: 443: M._pob_DzCO=0;
 11810  0075CC  6B6C               	clrf	(_M+12)& (0+255),b
 11811  0075CE  6B6D               	clrf	(_M+13)& (0+255),b
 11812                           
 11813                           ;main.c: 444: M._pob_DzCW=0;
 11814  0075D0  6B6E               	clrf	(_M+14)& (0+255),b
 11815  0075D2  6B6F               	clrf	(_M+15)& (0+255),b
 11816                           
 11817                           ; BSR set to: 0
 11818                           ;main.c: 445: if((PFN.poz==2)||(PFN.poz==3))
 11819  0075D4  0101               	movlb	1	; () banked
 11820  0075D6  51D9               	movf	(_PFN+31)& (0+255),w,b
 11821  0075D8  0A02               	xorlw	2
 11822  0075DA  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 11823  0075DC  E004               	bz	l675
 11824                           
 11825                           ; BSR set to: 1
 11826  0075DE  51D9               	movf	(_PFN+31)& (0+255),w,b
 11827  0075E0  0A03               	xorlw	3
 11828  0075E2  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 11829  0075E4  E118               	bnz	l673
 11830  0075E6                     l675:
 11831                           
 11832                           ; BSR set to: 1
 11833                           ;main.c: 446: {
 11834                           ;main.c: 447: if(DtKNF.wymCW) M._pob_KCW=1;
 11835  0075E6  A54A               	btfss	_DtKNF& (0+255),2,b
 11836  0075E8  D006               	goto	l676
 11837                           
 11838                           ; BSR set to: 1
 11839  0075EA  0E00               	movlw	0
 11840  0075EC  0100               	movlb	0	; () banked
 11841  0075EE  6F63               	movwf	(_M+3)& (0+255),b
 11842  0075F0  0E01               	movlw	1
 11843  0075F2  6F62               	movwf	(_M+2)& (0+255),b
 11844  0075F4  D003               	goto	l677
 11845  0075F6                     l676:
 11846                           
 11847                           ; BSR set to: 1
 11848                           ;main.c: 448: else M._pob_KCW=0;
 11849  0075F6  0100               	movlb	0	; () banked
 11850  0075F8  6B62               	clrf	(_M+2)& (0+255),b
 11851  0075FA  6B63               	clrf	(_M+3)& (0+255),b
 11852  0075FC                     l677:
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;main.c: 449: if(DtKNF.wymCO) M._pob_KCO=1;
 11856  0075FC  0101               	movlb	1	; () banked
 11857  0075FE  A34A               	btfss	_DtKNF& (0+255),1,b
 11858  007600  D006               	goto	l678
 11859                           
 11860                           ; BSR set to: 1
 11861  007602  0E00               	movlw	0
 11862  007604  0100               	movlb	0	; () banked
 11863  007606  6F61               	movwf	(_M+1)& (0+255),b
 11864  007608  0E01               	movlw	1
 11865  00760A  6F60               	movwf	_M& (0+255),b
 11866  00760C  0C01               	retlw	1
 11867  00760E                     l678:
 11868                           
 11869                           ; BSR set to: 1
 11870                           ;main.c: 450: else M._pob_KCO=0;
 11871  00760E  0100               	movlb	0	; () banked
 11872  007610  6B60               	clrf	_M& (0+255),b
 11873  007612  6B61               	clrf	(_M+1)& (0+255),b
 11874  007614  0012               	return	
 11875  007616                     l673:
 11876                           
 11877                           ; BSR set to: 1
 11878                           ;main.c: 452: else
 11879                           ;main.c: 453: {
 11880                           ;main.c: 454: M._pob_KCW=0;
 11881  007616  0100               	movlb	0	; () banked
 11882  007618  6B62               	clrf	(_M+2)& (0+255),b
 11883  00761A  6B63               	clrf	(_M+3)& (0+255),b
 11884                           
 11885                           ;main.c: 455: M._pob_KCO=0;
 11886  00761C  6B60               	clrf	_M& (0+255),b
 11887  00761E  6B61               	clrf	(_M+1)& (0+255),b
 11888  007620  0012               	return	
 11889  007622                     l672:
 11890                           
 11891                           ; BSR set to: 0
 11892                           ;main.c: 458: else
 11893                           ;main.c: 459: {
 11894                           ;main.c: 461: M._pob_KCW=0;
 11895  007622  6B62               	clrf	(_M+2)& (0+255),b
 11896  007624  6B63               	clrf	(_M+3)& (0+255),b
 11897                           
 11898                           ;main.c: 462: M._pob_KCO=0;
 11899  007626  6B60               	clrf	_M& (0+255),b
 11900  007628  6B61               	clrf	(_M+1)& (0+255),b
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;main.c: 463: if(M._AKTYWNE_SRW&&(PFN.poz==3))
 11904  00762A  5173               	movf	(_M+19)& (0+255),w,b
 11905  00762C  1172               	iorwf	(_M+18)& (0+255),w,b
 11906  00762E  E015               	bz	l682
 11907                           
 11908                           ; BSR set to: 0
 11909  007630  0101               	movlb	1	; () banked
 11910  007632  51D9               	movf	(_PFN+31)& (0+255),w,b
 11911  007634  0A03               	xorlw	3
 11912  007636  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 11913  007638  E110               	bnz	l682
 11914                           
 11915                           ; BSR set to: 1
 11916                           ;main.c: 464: {
 11917                           ;main.c: 465: M._pob_SRW=1;
 11918  00763A  0100               	movlb	0	; () banked
 11919  00763C  6B65               	clrf	(_M+5)& (0+255),b
 11920  00763E  0E01               	movlw	1
 11921  007640  6F64               	movwf	(_M+4)& (0+255),b
 11922                           
 11923                           ; BSR set to: 0
 11924                           ;main.c: 466: M._pob_AL=0;
 11925  007642  6B66               	clrf	(_M+6)& (0+255),b
 11926  007644  6B67               	clrf	(_M+7)& (0+255),b
 11927                           
 11928                           ; BSR set to: 0
 11929                           ;main.c: 467: M._pob_CW=0;
 11930  007646  6B68               	clrf	(_M+8)& (0+255),b
 11931  007648  6B69               	clrf	(_M+9)& (0+255),b
 11932  00764A                     l39174:
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;main.c: 468: M._pob_CO=0;
 11936  00764A  6B6A               	clrf	(_M+10)& (0+255),b
 11937  00764C  6B6B               	clrf	(_M+11)& (0+255),b
 11938  00764E                     l39176:
 11939                           
 11940                           ; BSR set to: 0
 11941                           ;main.c: 469: M._pob_DzCO=0;
 11942  00764E  6B6C               	clrf	(_M+12)& (0+255),b
 11943  007650  6B6D               	clrf	(_M+13)& (0+255),b
 11944  007652                     l39178:
 11945                           
 11946                           ;main.c: 470: M._pob_DzCW=0;
 11947  007652  0100               	movlb	0	; () banked
 11948  007654  6B6E               	clrf	(_M+14)& (0+255),b
 11949  007656  6B6F               	clrf	(_M+15)& (0+255),b
 11950                           
 11951                           ;main.c: 471: }
 11952  007658  0012               	return	
 11953  00765A                     l682:
 11954                           
 11955                           ;main.c: 472: else
 11956                           ;main.c: 473: {
 11957                           ;main.c: 475: M._pob_SRW=0;
 11958  00765A  0100               	movlb	0	; () banked
 11959  00765C  6B64               	clrf	(_M+4)& (0+255),b
 11960  00765E  6B65               	clrf	(_M+5)& (0+255),b
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;main.c: 476: if(M._AKTYWNE_AL)
 11964  007660  5175               	movf	(_M+21)& (0+255),w,b
 11965  007662  1174               	iorwf	(_M+20)& (0+255),w,b
 11966  007664  E014               	bz	l684
 11967                           
 11968                           ; BSR set to: 0
 11969                           ;main.c: 477: {
 11970                           ;main.c: 478: if(70>DtCW.CW) M._pob_AL=1;
 11971  007666  0E46               	movlw	70
 11972  007668  61D1               	cpfslt	(_DtCW+2)& (0+255),b
 11973  00766A  D004               	goto	l685
 11974                           
 11975                           ; BSR set to: 0
 11976  00766C  6B67               	clrf	(_M+7)& (0+255),b
 11977  00766E  0E01               	movlw	1
 11978  007670  6F66               	movwf	(_M+6)& (0+255),b
 11979  007672  D004               	goto	l686
 11980  007674                     l685:
 11981                           
 11982                           ; BSR set to: 0
 11983                           ;main.c: 479: else
 11984                           ;main.c: 480: {
 11985                           ;main.c: 481: M._pob_AL=0;
 11986  007674  6B66               	clrf	(_M+6)& (0+255),b
 11987  007676  6B67               	clrf	(_M+7)& (0+255),b
 11988                           
 11989                           ;main.c: 482: M._AKTYWNE_AL=0;
 11990  007678  6B74               	clrf	(_M+20)& (0+255),b
 11991  00767A  6B75               	clrf	(_M+21)& (0+255),b
 11992  00767C                     l686:
 11993                           
 11994                           ; BSR set to: 0
 11995                           ;main.c: 483: }
 11996                           ;main.c: 484: M._pob_CW=0;
 11997  00767C  6B68               	clrf	(_M+8)& (0+255),b
 11998  00767E  6B69               	clrf	(_M+9)& (0+255),b
 11999                           
 12000                           ;main.c: 485: M._pob_CO=0;
 12001  007680  6B6A               	clrf	(_M+10)& (0+255),b
 12002  007682  6B6B               	clrf	(_M+11)& (0+255),b
 12003                           
 12004                           ;main.c: 486: M._pob_DzCO=0;
 12005  007684  6B6C               	clrf	(_M+12)& (0+255),b
 12006  007686  6B6D               	clrf	(_M+13)& (0+255),b
 12007                           
 12008                           ;main.c: 487: M._pob_DzCW=0;
 12009  007688  6B6E               	clrf	(_M+14)& (0+255),b
 12010  00768A  6B6F               	clrf	(_M+15)& (0+255),b
 12011                           
 12012                           ;main.c: 488: }
 12013  00768C  0012               	return	
 12014  00768E                     l684:
 12015                           
 12016                           ; BSR set to: 0
 12017                           ;main.c: 489: else
 12018                           ;main.c: 490: {
 12019                           ;main.c: 492: M._pob_AL=0;
 12020  00768E  6B66               	clrf	(_M+6)& (0+255),b
 12021  007690  6B67               	clrf	(_M+7)& (0+255),b
 12022                           
 12023                           ; BSR set to: 0
 12024                           ;main.c: 493: if(DtKNF.tpkt!=0) wr=RdPrt(11)&&((PFN.poz==2)||(PFN.poz==3));
 12025  007692  0101               	movlb	1	; () banked
 12026  007694  5151               	movf	(_DtKNF+7)& (0+255),w,b
 12027  007696  E013               	bz	l688
 12028                           
 12029                           ; BSR set to: 1
 12030  007698  6A20               	clrf	_KolejkaPobudzen$2076,c
 12031                           
 12032                           ; BSR set to: 1
 12033  00769A  0E0B               	movlw	11
 12034  00769C  EC84  F058         	call	_RdPrt
 12035  0076A0  E30B               	bnc	l39198
 12036                           
 12037                           ; BSR set to: 0
 12038  0076A2  0101               	movlb	1	; () banked
 12039  0076A4  51D9               	movf	(_PFN+31)& (0+255),w,b
 12040  0076A6  0A02               	xorlw	2
 12041  0076A8  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 12042  0076AA  E004               	bz	l39196
 12043                           
 12044                           ; BSR set to: 1
 12045  0076AC  51D9               	movf	(_PFN+31)& (0+255),w,b
 12046  0076AE  0A03               	xorlw	3
 12047  0076B0  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 12048  0076B2  E102               	bnz	l39198
 12049  0076B4                     l39196:
 12050                           
 12051                           ; BSR set to: 1
 12052  0076B4  0E01               	movlw	1
 12053  0076B6  6E20               	movwf	_KolejkaPobudzen$2076,c
 12054  0076B8                     l39198:
 12055  0076B8  C020  F022         	movff	_KolejkaPobudzen$2076,KolejkaPobudzen@wr
 12056  0076BC  D012               	goto	l691
 12057  0076BE                     l688:
 12058                           
 12059                           ; BSR set to: 1
 12060                           ;main.c: 494: else wr=DtCW._wpz_CW&&DtCO._pz_CO&&((PFN.poz==2)||(PFN.poz==3));
 12061  0076BE  6A21               	clrf	_KolejkaPobudzen$2077,c
 12062  0076C0  0100               	movlb	0	; () banked
 12063  0076C2  B7CF               	btfsc	_DtCW& (0+255),3,b
 12064                           
 12065                           ; BSR set to: 0
 12066  0076C4  A3E5               	btfss	(_DtCO+1)& (0+255),1,b
 12067  0076C6  D00B               	goto	l39208
 12068                           
 12069                           ; BSR set to: 0
 12070  0076C8  0101               	movlb	1	; () banked
 12071  0076CA  51D9               	movf	(_PFN+31)& (0+255),w,b
 12072  0076CC  0A02               	xorlw	2
 12073  0076CE  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 12074  0076D0  E004               	bz	l39206
 12075                           
 12076                           ; BSR set to: 1
 12077  0076D2  51D9               	movf	(_PFN+31)& (0+255),w,b
 12078  0076D4  0A03               	xorlw	3
 12079  0076D6  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 12080  0076D8  E102               	bnz	l39208
 12081  0076DA                     l39206:
 12082                           
 12083                           ; BSR set to: 1
 12084  0076DA  0E01               	movlw	1
 12085  0076DC  6E21               	movwf	_KolejkaPobudzen$2077,c
 12086  0076DE                     l39208:
 12087  0076DE  C021  F022         	movff	_KolejkaPobudzen$2077,KolejkaPobudzen@wr
 12088  0076E2                     l691:
 12089                           
 12090                           ;main.c: 495: if(wr!=0)
 12091  0076E2  5022               	movf	KolejkaPobudzen@wr,w,c
 12092  0076E4  E005               	bz	l694
 12093                           
 12094                           ;main.c: 496: {
 12095                           ;main.c: 497: M._pob_CW=1;
 12096  0076E6  0100               	movlb	0	; () banked
 12097  0076E8  6B69               	clrf	(_M+9)& (0+255),b
 12098  0076EA  0E01               	movlw	1
 12099  0076EC  6F68               	movwf	(_M+8)& (0+255),b
 12100  0076EE  D7AD               	goto	l39174
 12101  0076F0                     l694:
 12102                           
 12103                           ;main.c: 502: else
 12104                           ;main.c: 503: {
 12105                           ;main.c: 505: M._pob_CW=0;
 12106  0076F0  0100               	movlb	0	; () banked
 12107  0076F2  6B68               	clrf	(_M+8)& (0+255),b
 12108  0076F4  6B69               	clrf	(_M+9)& (0+255),b
 12109                           
 12110                           ; BSR set to: 0
 12111                           ;main.c: 506: if(RdPrt(12)&&(PFN.poz==3))
 12112  0076F6  0E0C               	movlw	12
 12113  0076F8  EC84  F058         	call	_RdPrt
 12114  0076FC  E30A               	bnc	l696
 12115                           
 12116                           ; BSR set to: 0
 12117  0076FE  0101               	movlb	1	; () banked
 12118  007700  51D9               	movf	(_PFN+31)& (0+255),w,b
 12119  007702  0A03               	xorlw	3
 12120  007704  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 12121  007706  E105               	bnz	l696
 12122                           
 12123                           ; BSR set to: 1
 12124                           ;main.c: 507: {
 12125                           ;main.c: 508: M._pob_CO=1;
 12126  007708  0100               	movlb	0	; () banked
 12127  00770A  6B6B               	clrf	(_M+11)& (0+255),b
 12128  00770C  0E01               	movlw	1
 12129  00770E  6F6A               	movwf	(_M+10)& (0+255),b
 12130  007710  D79E               	goto	l39176
 12131  007712                     l696:
 12132                           
 12133                           ;main.c: 512: else
 12134                           ;main.c: 513: {
 12135                           ;main.c: 515: M._pob_CO=0;
 12136  007712  0100               	movlb	0	; () banked
 12137  007714  6B6A               	clrf	(_M+10)& (0+255),b
 12138  007716  6B6B               	clrf	(_M+11)& (0+255),b
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;main.c: 516: if(RdPrt(9))
 12142  007718  0E09               	movlw	9
 12143  00771A  EC84  F058         	call	_RdPrt
 12144  00771E  E304               	bnc	l698
 12145                           
 12146                           ; BSR set to: 0
 12147                           ;main.c: 517: {
 12148                           ;main.c: 518: M._pob_DzCO=1;
 12149  007720  6B6D               	clrf	(_M+13)& (0+255),b
 12150  007722  0E01               	movlw	1
 12151  007724  6F6C               	movwf	(_M+12)& (0+255),b
 12152  007726  D795               	goto	l39178
 12153  007728                     l698:
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;main.c: 521: else
 12157                           ;main.c: 522: {
 12158                           ;main.c: 523: M._pob_DzCO=0;
 12159  007728  6B6C               	clrf	(_M+12)& (0+255),b
 12160  00772A  6B6D               	clrf	(_M+13)& (0+255),b
 12161                           
 12162                           ;main.c: 524: if(DtKNF.tpkt==0)
 12163  00772C  0101               	movlb	1	; () banked
 12164  00772E  6751               	tstfsz	(_DtKNF+7)& (0+255),b
 12165  007730  D790               	goto	l39178
 12166                           
 12167                           ; BSR set to: 1
 12168                           ;main.c: 525: {
 12169                           ;main.c: 527: if(RdPrt(10)) M._pob_DzCW=1;
 12170  007732  0E0A               	movlw	10
 12171  007734  EC84  F058         	call	_RdPrt
 12172  007738  E38C               	bnc	l39178
 12173                           
 12174                           ; BSR set to: 0
 12175  00773A  0E00               	movlw	0
 12176  00773C  6F6F               	movwf	(_M+15)& (0+255),b
 12177  00773E  0E01               	movlw	1
 12178  007740  6F6E               	movwf	(_M+14)& (0+255),b
 12179                           
 12180                           ; BSR set to: 0
 12181  007742  0C01               	retlw	1
 12182  007744                     __end_of_KolejkaPobudzen:
 12183                           	opt stack 0
 12184                           tblptru	equ	0xFF8
 12185                           tblptrh	equ	0xFF7
 12186                           tblptrl	equ	0xFF6
 12187                           tablat	equ	0xFF5
 12188                           prodh	equ	0xFF4
 12189                           prodl	equ	0xFF3
 12190                           intcon	equ	0xFF2
 12191                           postinc0	equ	0xFEE
 12192                           wreg	equ	0xFE8
 12193                           indf1	equ	0xFE7
 12194                           postinc1	equ	0xFE6
 12195                           postdec1	equ	0xFE5
 12196                           fsr1h	equ	0xFE2
 12197                           fsr1l	equ	0xFE1
 12198                           indf2	equ	0xFDF
 12199                           postinc2	equ	0xFDE
 12200                           postdec2	equ	0xFDD
 12201                           fsr2h	equ	0xFDA
 12202                           fsr2l	equ	0xFD9
 12203                           status	equ	0xFD8
 12204                           
 12205 ;; *************** function _RglPmp *****************
 12206 ;; Defined at:
 12207 ;;		line 528 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 12208 ;; Parameters:    Size  Location     Type
 12209 ;;		None
 12210 ;; Auto vars:     Size  Location     Type
 12211 ;;		None
 12212 ;; Return value:  Size  Location     Type
 12213 ;;		None               void
 12214 ;; Registers used:
 12215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12216 ;; Tracked objects:
 12217 ;;		On entry : F/0
 12218 ;;		On exit  : F/0
 12219 ;;		Unchanged: 0/0
 12220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12225 ;;Total ram usage:        0 bytes
 12226 ;; Hardware stack levels used:    1
 12227 ;; Hardware stack levels required when called:   10
 12228 ;; This function calls:
 12229 ;;		_RglPmp1
 12230 ;;		_RglPmp2
 12231 ;;		_StartRTS
 12232 ;;		_ProcToPmpPwm
 12233 ;;		_WritePWM2
 12234 ;; This function is called by:
 12235 ;;		_main
 12236 ;; This function uses a non-reentrant model
 12237 ;;
 12238                           
 12239                           	psect	text31
 12240  00AACE                     __ptext31:
 12241                           	opt stack 0
 12242  00AACE                     _RglPmp:
 12243                           	opt stack 20
 12244                           
 12245                           ; BSR set to: 0
 12246                           ;pompa.c: 529: if(DtKNF.rdpm)
 12247                           
 12248                           ; BSR set to: 0
 12249  00AACE  0101               	movlb	1	; () banked
 12250  00AAD0  5153               	movf	(_DtKNF+9)& (0+255),w,b
 12251  00AAD2  E005               	bz	l4349
 12252                           
 12253                           ; BSR set to: 1
 12254                           ;pompa.c: 530: {
 12255                           ;pompa.c: 531: if(!DtKNF.teco)
 12256  00AAD4  6756               	tstfsz	(_DtKNF+12)& (0+255),b
 12257  00AAD6  EF60  F04C         	goto	_RglPmp2
 12258                           
 12259                           ; BSR set to: 1
 12260                           ;pompa.c: 532: {
 12261                           ;pompa.c: 533: RglPmp1();
 12262  00AADA  EF2B  F04C         	goto	_RglPmp1	;wreg free
 12263  00AADE                     l4349:
 12264                           
 12265                           ; BSR set to: 1
 12266                           ;pompa.c: 540: else
 12267                           ;pompa.c: 541: {
 12268                           ;pompa.c: 542: if(!M._PRACA)
 12269  00AADE  0100               	movlb	0	; () banked
 12270  00AAE0  B57B               	btfsc	(_M+27)& (0+255),2,b
 12271  00AAE2  D005               	goto	l39250
 12272                           
 12273                           ; BSR set to: 0
 12274                           ;pompa.c: 543: {
 12275                           ;pompa.c: 544: StartRTS(15);
 12276  00AAE4  0E0F               	movlw	15
 12277  00AAE6  EC9C  F057         	call	_StartRTS
 12278                           
 12279                           ; BSR set to: 1
 12280                           ;pompa.c: 545: if(PORTDbits.RD2)
 12281  00AAEA  A483               	btfss	3971,2,c	;volatile
 12282  00AAEC  D003               	goto	l4354
 12283  00AAEE                     l39250:
 12284                           
 12285                           ;pompa.c: 546: {
 12286                           ;pompa.c: 547: PMP.APROC=15;
 12287  00AAEE  0E0F               	movlw	15
 12288  00AAF0  6E3A               	movwf	_PMP+2,c
 12289                           
 12290                           ;pompa.c: 548: }
 12291  00AAF2  D001               	goto	l39254
 12292  00AAF4                     l4354:
 12293                           
 12294                           ; BSR set to: 1
 12295                           ;pompa.c: 549: else
 12296                           ;pompa.c: 550: {
 12297                           ;pompa.c: 551: PMP.APROC=0;
 12298  00AAF4  6A3A               	clrf	_PMP+2,c
 12299  00AAF6                     l39254:
 12300                           
 12301                           ;pompa.c: 557: }
 12302                           ;pompa.c: 558: WritePWM2(ProcToPmpPwm(PMP.APROC));
 12303  00AAF6  503A               	movf	_PMP+2,w,c
 12304  00AAF8  EC8C  F052         	call	_ProcToPmpPwm
 12305  00AAFC  EFAC  F05A         	goto	_WritePWM2
 12306  00AB00                     __end_of_RglPmp:
 12307                           	opt stack 0
 12308                           tblptru	equ	0xFF8
 12309                           tblptrh	equ	0xFF7
 12310                           tblptrl	equ	0xFF6
 12311                           tablat	equ	0xFF5
 12312                           prodh	equ	0xFF4
 12313                           prodl	equ	0xFF3
 12314                           intcon	equ	0xFF2
 12315                           postinc0	equ	0xFEE
 12316                           wreg	equ	0xFE8
 12317                           indf1	equ	0xFE7
 12318                           postinc1	equ	0xFE6
 12319                           postdec1	equ	0xFE5
 12320                           fsr1h	equ	0xFE2
 12321                           fsr1l	equ	0xFE1
 12322                           indf2	equ	0xFDF
 12323                           postinc2	equ	0xFDE
 12324                           postdec2	equ	0xFDD
 12325                           fsr2h	equ	0xFDA
 12326                           fsr2l	equ	0xFD9
 12327                           status	equ	0xFD8
 12328                           
 12329 ;; *************** function _Rozruch *****************
 12330 ;; Defined at:
 12331 ;;		line 2437 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;		None
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;		None
 12336 ;; Return value:  Size  Location     Type
 12337 ;;		None               void
 12338 ;; Registers used:
 12339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
      +u, prodl, prodh, bsr, cstack
 12340 ;; Tracked objects:
 12341 ;;		On entry : F/0
 12342 ;;		On exit  : E/0
 12343 ;;		Unchanged: 0/0
 12344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;Total ram usage:        1 bytes
 12350 ;; Hardware stack levels used:    1
 12351 ;; Hardware stack levels required when called:   10
 12352 ;; This function calls:
 12353 ;;		_StartRTS
 12354 ;;		_RTS
 12355 ;;		_RdPrt
 12356 ;;		_PrintErr
 12357 ;;		_ErrPTG
 12358 ;;		_WritePWM
 12359 ;;		_GrzejON
 12360 ;;		_DecyzjaPLM
 12361 ;;		_DecyzjaPLM2
 12362 ;; This function is called by:
 12363 ;;		_main
 12364 ;; This function uses a non-reentrant model
 12365 ;;
 12366                           
 12367                           	psect	text32
 12368  005624                     __ptext32:
 12369                           	opt stack 0
 12370  005624                     _Rozruch:
 12371                           	opt stack 20
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;main.c: 2438: switch(M.ROZ)
 12375                           
 12376                           ; BSR set to: 0
 12377  005624  D0F2               	goto	l39708
 12378  005626                     l1340:
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;main.c: 2442: {
 12382                           ;main.c: 2443: if(DtKNF.robg==0)
 12383  005626  0101               	movlb	1	; () banked
 12384  005628  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 12385  00562A  D003               	goto	l39550
 12386                           
 12387                           ; BSR set to: 1
 12388                           ;main.c: 2444: {
 12389                           ;main.c: 2445: if(M._ZMKCOCW) return;
 12390  00562C  0100               	movlb	0	; () banked
 12391  00562E  B370               	btfsc	(_M+16)& (0+255),1,b
 12392  005630  0012               	return	
 12393  005632                     l39550:
 12394                           
 12395                           ;main.c: 2446: }
 12396                           ;main.c: 2447: M.ROZ=1;
 12397  005632  0E01               	movlw	1
 12398  005634  0100               	movlb	0	; () banked
 12399  005636  6F83               	movwf	(_M+35)& (0+255),b
 12400                           
 12401                           ; BSR set to: 0
 12402                           ;main.c: 2448: StartRTS(2);
 12403  005638  0E02               	movlw	2
 12404  00563A  EC9C  F057         	call	_StartRTS
 12405  00563E                     l39554:
 12406                           
 12407                           ;main.c: 2452: {
 12408                           ;main.c: 2453: if(DtKNF.robg==0)
 12409  00563E  0101               	movlb	1	; () banked
 12410  005640  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 12411  005642  D01E               	goto	l39580
 12412                           
 12413                           ; BSR set to: 1
 12414                           ;main.c: 2454: {
 12415                           ;main.c: 2455: if(RTS(2)<1) return;
 12416  005644  0E02               	movlw	2
 12417  005646  ECAF  F057         	call	_RTS
 12418  00564A  0900               	iorlw	0
 12419  00564C  B4D8               	btfsc	status,2,c
 12420  00564E  0012               	return	
 12421                           
 12422                           ; BSR set to: 1
 12423                           ;main.c: 2456: PORTDbits.RD2=0;
 12424  005650  9483               	bcf	3971,2,c	;volatile
 12425                           
 12426                           ; BSR set to: 1
 12427                           ;main.c: 2457: if(!RdPrt(1))
 12428  005652  0E01               	movlw	1
 12429  005654  EC84  F058         	call	_RdPrt
 12430  005658  E204               	bc	l39568
 12431                           
 12432                           ; BSR set to: 0
 12433                           ;main.c: 2458: {
 12434                           ;main.c: 2459: M.ROZ=2;
 12435  00565A  0E02               	movlw	2
 12436  00565C  6F83               	movwf	(_M+35)& (0+255),b
 12437                           
 12438                           ; BSR set to: 0
 12439                           ;main.c: 2460: StartRTS(2);
 12440  00565E  EF9C  F057         	goto	_StartRTS
 12441  005662                     l39568:
 12442                           
 12443                           ; BSR set to: 0
 12444                           ;main.c: 2462: }
 12445                           ;main.c: 2463: if(RTS(2)<5) return;
 12446  005662  0E02               	movlw	2
 12447  005664  ECAF  F057         	call	_RTS
 12448  005668  D8E8               	call	PL216	;call to abstracted procedure
 12449  00566A  A0D8               	btfss	status,0,c
 12450  00566C  0012               	return	
 12451                           
 12452                           ; BSR set to: 0
 12453                           ;main.c: 2464: M.ERR_BTY=0x05;
 12454  00566E  0E05               	movlw	5
 12455  005670  6F82               	movwf	(_M+34)& (0+255),b
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;main.c: 2465: PrintErr(0x05,1);
 12459  005672  0E01               	movlw	1
 12460  005674  6E25               	movwf	?_PrintErr,c
 12461  005676  0E05               	movlw	5
 12462  005678  ECA6  F047         	call	_PrintErr
 12463                           
 12464                           ; BSR set to: 1
 12465                           ;main.c: 2466: ErrPTG();
 12466  00567C  EF27  F02C         	goto	_ErrPTG	;wreg free
 12467  005680                     l39580:
 12468                           
 12469                           ; BSR set to: 1
 12470                           ;main.c: 2468: }
 12471                           ;main.c: 2469: M.ROZ=2;
 12472  005680  0E02               	movlw	2
 12473  005682  0100               	movlb	0	; () banked
 12474  005684  6F83               	movwf	(_M+35)& (0+255),b
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;main.c: 2470: StartRTS(2);
 12478  005686  EC9C  F057         	call	_StartRTS
 12479  00568A  D00C               	goto	l39594
 12480  00568C                     l1352:
 12481                           
 12482                           ; BSR set to: 1
 12483                           ;main.c: 2478: case 2:
 12484                           ;main.c: 2479: {
 12485                           ;main.c: 2480: if(!M._RPM_CW&&(DtKNF.robg==0)) PORTDbits.RD2=1;
 12486  00568C  0100               	movlb	0	; () banked
 12487  00568E  BF7B               	btfsc	(_M+27)& (0+255),7,b
 12488  005690  D012               	goto	l39596
 12489                           
 12490                           ; BSR set to: 0
 12491  005692  0101               	movlb	1	; () banked
 12492  005694  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 12493  005696  D00F               	goto	l39596
 12494  005698                     l39586:
 12495  005698  8483               	bsf	3971,2,c	;volatile
 12496  00569A  D00D               	goto	l39596
 12497  00569C                     l1358:
 12498                           
 12499                           ; BSR set to: 1
 12500                           ;main.c: 2490: {
 12501                           ;main.c: 2491: if(!M._ZMKCOCW) PORTDbits.RD2=1;
 12502  00569C  0100               	movlb	0	; () banked
 12503  00569E  A370               	btfss	(_M+16)& (0+255),1,b
 12504  0056A0  D7FB               	goto	l39586
 12505  0056A2  D009               	goto	l39596
 12506  0056A4                     l39594:
 12507  0056A4  0101               	movlb	1	; () banked
 12508  0056A6  5151               	movf	(_DtKNF+7)& (0+255),w,b
 12509                           
 12510                           ; Switch size 1, requested type "space"
 12511                           ; Number of cases is 4, Range of values is 0 to 3
 12512                           ; switch strategies available:
 12513                           ; Name         Instructions Cycles
 12514                           ; simple_byte           13     7 (average)
 12515                           ;	Chosen strategy is simple_byte
 12516  0056A8  E0F9               	bz	l1358
 12517  0056AA  0A01               	xorlw	1	; case 1
 12518  0056AC  E0EF               	bz	l1352
 12519  0056AE  0A03               	xorlw	3	; case 2
 12520  0056B0  E0ED               	bz	l1352
 12521  0056B2  0A01               	xorlw	1	; case 3
 12522  0056B4  D7F3               	goto	l1358
 12523  0056B6                     l39596:
 12524                           
 12525                           ;main.c: 2495: WritePWM(PWM.MDMOD);
 12526  0056B6  0100               	movlb	0	; () banked
 12527  0056B8  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 12528  0056BA  ECF2  F059         	call	_WritePWM
 12529                           
 12530                           ; BSR set to: 0
 12531                           ;main.c: 2496: M.ROZ=3;
 12532  0056BE  0E03               	movlw	3
 12533  0056C0  6F83               	movwf	(_M+35)& (0+255),b
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;main.c: 2497: StartRTS(2);
 12537  0056C2  0E02               	movlw	2
 12538  0056C4  EC9C  F057         	call	_StartRTS
 12539  0056C8                     l39602:
 12540                           
 12541                           ;main.c: 2501: {
 12542                           ;main.c: 2502: if(M._TURBO)
 12543  0056C8  0100               	movlb	0	; () banked
 12544  0056CA  A37B               	btfss	(_M+27)& (0+255),1,b
 12545  0056CC  D010               	goto	l39612
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;main.c: 2503: {
 12549                           ;main.c: 2504: if(RdPrt(3)&&!PORTDbits.RD3)
 12550  0056CE  0E03               	movlw	3
 12551  0056D0  EC84  F058         	call	_RdPrt
 12552  0056D4  B0D8               	btfsc	status,0,c
 12553                           
 12554                           ; BSR set to: 0
 12555  0056D6  B683               	btfsc	3971,3,c	;volatile
 12556  0056D8  D009               	goto	l1362
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;main.c: 2505: {
 12560                           ;main.c: 2506: if(RTS(2)<5) return;
 12561  0056DA  0E02               	movlw	2
 12562  0056DC  ECAF  F057         	call	_RTS
 12563  0056E0  D8AC               	call	PL216	;call to abstracted procedure
 12564  0056E2  A0D8               	btfss	status,0,c
 12565  0056E4  0012               	return	
 12566  0056E6                     l1363:
 12567                           
 12568                           ; BSR set to: 0
 12569                           ;main.c: 2507: M.RCI=0;
 12570  0056E6  6B8B               	clrf	(_M+43)& (0+255),b
 12571                           
 12572                           ;main.c: 2508: M._RUSZ_CIAG=1;
 12573  0056E8  8F70               	bsf	(_M+16)& (0+255),7,b
 12574                           
 12575                           ;main.c: 2509: return;
 12576  0056EA  0012               	return	
 12577  0056EC                     l1362:
 12578                           
 12579                           ; BSR set to: 0
 12580                           ;main.c: 2510: }
 12581                           ;main.c: 2511: PORTDbits.RD3=1;
 12582  0056EC  8683               	bsf	3971,3,c	;volatile
 12583  0056EE                     l39612:
 12584                           
 12585                           ; BSR set to: 0
 12586                           ;main.c: 2512: }
 12587                           ;main.c: 2513: M.ROZ=4;
 12588  0056EE  0E04               	movlw	4
 12589  0056F0  6F83               	movwf	(_M+35)& (0+255),b
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;main.c: 2514: StartRTS(2);
 12593  0056F2  0E02               	movlw	2
 12594  0056F4  EC9C  F057         	call	_StartRTS
 12595  0056F8                     l39616:
 12596                           
 12597                           ;main.c: 2518: {
 12598                           ;main.c: 2519: if(M._TURBO)
 12599  0056F8  0100               	movlb	0	; () banked
 12600  0056FA  A37B               	btfss	(_M+27)& (0+255),1,b
 12601  0056FC  D00A               	goto	l39626
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;main.c: 2520: {
 12605                           ;main.c: 2521: if(!RdPrt(21)&&PORTDbits.RD3)
 12606  0056FE  0E15               	movlw	21
 12607  005700  EC84  F058         	call	_RdPrt
 12608  005704  A0D8               	btfss	status,0,c
 12609                           
 12610                           ; BSR set to: 0
 12611  005706  A683               	btfss	3971,3,c	;volatile
 12612  005708  D004               	goto	l39626
 12613                           
 12614                           ; BSR set to: 0
 12615                           ;main.c: 2522: {
 12616                           ;main.c: 2523: if(RTS(2)<5) return;
 12617  00570A  0E02               	movlw	2
 12618  00570C  ECAF  F057         	call	_RTS
 12619  005710  D7E7               	goto	L21
 12620  005712                     l39626:
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;main.c: 2527: }
 12624                           ;main.c: 2528: }
 12625                           ;main.c: 2529: M.ROZ=5;
 12626  005712  0E05               	movlw	5
 12627  005714  6F83               	movwf	(_M+35)& (0+255),b
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;main.c: 2530: StartRTS(2);
 12631  005716  0E02               	movlw	2
 12632  005718  EC9C  F057         	call	_StartRTS
 12633  00571C                     l39630:
 12634                           
 12635                           ;main.c: 2534: {
 12636                           ;main.c: 2535: if(M._TURBO&&!RdPrt(21))
 12637  00571C  0100               	movlb	0	; () banked
 12638  00571E  A37B               	btfss	(_M+27)& (0+255),1,b
 12639  005720  D004               	goto	l39636
 12640                           
 12641                           ; BSR set to: 0
 12642  005722  0E15               	movlw	21
 12643  005724  EC84  F058         	call	_RdPrt
 12644  005728  E3DE               	bnc	l1363
 12645  00572A                     l39636:
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;main.c: 2540: }
 12649                           ;main.c: 2541: if(RdPrt(5)&&!PORTDbits.RD0)
 12650  00572A  0E05               	movlw	5
 12651  00572C  EC84  F058         	call	_RdPrt
 12652  005730  B0D8               	btfsc	status,0,c
 12653                           
 12654                           ; BSR set to: 0
 12655  005732  B083               	btfsc	3971,0,c	;volatile
 12656  005734  D00F               	goto	l39650
 12657                           
 12658                           ; BSR set to: 0
 12659                           ;main.c: 2542: {
 12660                           ;main.c: 2543: if(RTS(2)<5) return;
 12661  005736  0E02               	movlw	2
 12662  005738  ECAF  F057         	call	_RTS
 12663  00573C  D87E               	call	PL216	;call to abstracted procedure
 12664  00573E  A0D8               	btfss	status,0,c
 12665  005740  0012               	return	
 12666                           
 12667                           ; BSR set to: 0
 12668                           ;main.c: 2544: M.ERR_BTY=0x06;
 12669  005742  0E06               	movlw	6
 12670  005744  6F82               	movwf	(_M+34)& (0+255),b
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;main.c: 2545: PrintErr(0x06,1);
 12674  005746  0E01               	movlw	1
 12675  005748  6E25               	movwf	?_PrintErr,c
 12676  00574A  0E06               	movlw	6
 12677  00574C  ECA6  F047         	call	_PrintErr
 12678                           
 12679                           ; BSR set to: 1
 12680                           ;main.c: 2546: ErrPTG();
 12681  005750  EC27  F02C         	call	_ErrPTG	;wreg free
 12682  005754                     l39650:
 12683                           
 12684                           ;main.c: 2547: }
 12685                           ;main.c: 2548: GrzejON();
 12686  005754  ECB2  F059         	call	_GrzejON	;wreg free
 12687                           
 12688                           ;main.c: 2549: M.ROZ=6;
 12689  005758  0E06               	movlw	6
 12690  00575A  0100               	movlb	0	; () banked
 12691  00575C  6F83               	movwf	(_M+35)& (0+255),b
 12692                           
 12693                           ; BSR set to: 0
 12694                           ;main.c: 2550: StartRTS(2);
 12695  00575E  0E02               	movlw	2
 12696  005760  EC9C  F057         	call	_StartRTS
 12697  005764  D004               	goto	l39662
 12698  005766                     l1378:
 12699                           
 12700                           ; BSR set to: 1
 12701                           ;main.c: 2563: case 3:
 12702                           ;main.c: 2564: {
 12703                           ;main.c: 2565: if(!M._ZMKCOCW) PORTDbits.RD2=1;
 12704  005766  0100               	movlb	0	; () banked
 12705  005768  A370               	btfss	(_M+16)& (0+255),1,b
 12706                           
 12707                           ; BSR set to: 0
 12708  00576A  8483               	bsf	3971,2,c	;volatile
 12709  00576C  D009               	goto	l1376
 12710  00576E                     l39662:
 12711  00576E  0101               	movlb	1	; () banked
 12712  005770  5151               	movf	(_DtKNF+7)& (0+255),w,b
 12713                           
 12714                           ; Switch size 1, requested type "space"
 12715                           ; Number of cases is 4, Range of values is 0 to 3
 12716                           ; switch strategies available:
 12717                           ; Name         Instructions Cycles
 12718                           ; simple_byte           13     7 (average)
 12719                           ;	Chosen strategy is simple_byte
 12720  005772  E0F9               	bz	l1378
 12721  005774  0A01               	xorlw	1	; case 1
 12722  005776  E004               	bz	l1376
 12723  005778  0A03               	xorlw	3	; case 2
 12724  00577A  E002               	bz	l1376
 12725  00577C  0A01               	xorlw	1	; case 3
 12726  00577E  D7F3               	goto	l1378
 12727  005780                     l1376:
 12728                           
 12729                           ;main.c: 2574: if(M._TURBO&&!RdPrt(21))
 12730  005780  0100               	movlb	0	; () banked
 12731  005782  A37B               	btfss	(_M+27)& (0+255),1,b
 12732  005784  D004               	goto	l39668
 12733                           
 12734                           ; BSR set to: 0
 12735  005786  0E15               	movlw	21
 12736  005788  EC84  F058         	call	_RdPrt
 12737  00578C  E3AC               	bnc	l1363
 12738  00578E                     l39668:
 12739                           
 12740                           ; BSR set to: 0
 12741                           ;main.c: 2579: }
 12742                           ;main.c: 2580: if(RdPrt(8)) WritePWM(PWM.MSTART);
 12743  00578E  0E08               	movlw	8
 12744  005790  EC84  F058         	call	_RdPrt
 12745  005794  E304               	bnc	l39672
 12746                           
 12747                           ; BSR set to: 0
 12748  005796  51AF               	movf	(_PWM+28)& (0+255),w,b	;volatile
 12749  005798  ECF2  F059         	call	_WritePWM
 12750  00579C  D003               	goto	l39674
 12751  00579E                     l39672:
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;main.c: 2581: else WritePWM(PWM.MDMOD);
 12755  00579E  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 12756  0057A0  ECF2  F059         	call	_WritePWM
 12757  0057A4                     l39674:
 12758                           
 12759                           ; BSR set to: 0
 12760                           ;main.c: 2583: if(RTS(2)<2) return;
 12761  0057A4  0E02               	movlw	2
 12762  0057A6  ECAF  F057         	call	_RTS
 12763  0057AA  D84C               	call	PL222	;call to abstracted procedure
 12764  0057AC  A0D8               	btfss	status,0,c
 12765  0057AE  0012               	return	
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;main.c: 2585: if(RTS(2)<7)
 12769  0057B0  0E02               	movlw	2
 12770  0057B2  ECAF  F057         	call	_RTS
 12771  0057B6  0100               	movlb	0	; () banked
 12772  0057B8  6FFD               	movwf	??_Rozruch& (0+255),b
 12773  0057BA  0E07               	movlw	7
 12774  0057BC  5DFD               	subwf	??_Rozruch& (0+255),w,b
 12775  0057BE  E20A               	bc	l39690
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;main.c: 2586: {
 12779                           ;main.c: 2587: if(RdPrt(5))
 12780  0057C0  0E05               	movlw	5
 12781  0057C2  EC84  F058         	call	_RdPrt
 12782  0057C6  A0D8               	btfss	status,0,c
 12783  0057C8  0012               	return	
 12784                           
 12785                           ; BSR set to: 0
 12786                           ;main.c: 2588: {
 12787                           ;main.c: 2589: M.ROZ=7;
 12788  0057CA  0E07               	movlw	7
 12789  0057CC  6F83               	movwf	(_M+35)& (0+255),b
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;main.c: 2590: StartRTS(2);
 12793  0057CE  0E02               	movlw	2
 12794  0057D0  EF9C  F057         	goto	_StartRTS
 12795  0057D4                     l39690:
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;main.c: 2594: else
 12799                           ;main.c: 2595: {
 12800                           ;main.c: 2596: DecyzjaPLM();
 12801  0057D4  EF64  F058         	goto	_DecyzjaPLM	;wreg free
 12802  0057D8                     l1389:
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;main.c: 2602: {
 12806                           ;main.c: 2603: if(M._RPM_CW)
 12807  0057D8  AF7B               	btfss	(_M+27)& (0+255),7,b
 12808  0057DA  D003               	goto	l1390
 12809  0057DC                     l39694:
 12810                           
 12811                           ; BSR set to: 0
 12812                           ;main.c: 2604: {
 12813                           ;main.c: 2605: M._ROZRUCH=0;
 12814  0057DC  9570               	bcf	(_M+16)& (0+255),2,b
 12815                           
 12816                           ;main.c: 2606: M.ROZ=0;
 12817  0057DE  6B83               	clrf	(_M+35)& (0+255),b
 12818                           
 12819                           ;main.c: 2607: return;
 12820  0057E0  0012               	return	
 12821  0057E2                     l1390:
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;main.c: 2608: }
 12825                           ;main.c: 2609: if(M._TURBO&&!RdPrt(21))
 12826  0057E2  A37B               	btfss	(_M+27)& (0+255),1,b
 12827  0057E4  D005               	goto	l39700
 12828                           
 12829                           ; BSR set to: 0
 12830  0057E6  0E15               	movlw	21
 12831  0057E8  EC84  F058         	call	_RdPrt
 12832  0057EC  E201 D77B          	bnc	l1363
 12833  0057F0                     l39700:
 12834                           
 12835                           ; BSR set to: 0
 12836                           ;main.c: 2614: }
 12837                           ;main.c: 2615: if(!RdPrt(5))
 12838  0057F0  0E05               	movlw	5
 12839  0057F2  EC84  F058         	call	_RdPrt
 12840  0057F6  A0D8               	btfss	status,0,c
 12841                           
 12842                           ; BSR set to: 0
 12843                           ;main.c: 2616: {
 12844                           ;main.c: 2617: DecyzjaPLM2();
 12845  0057F8  ECCA  F04D         	call	_DecyzjaPLM2	;wreg free
 12846                           
 12847                           ;main.c: 2619: }
 12848                           ;main.c: 2620: if(RTS(2)<2) return;
 12849  0057FC  0E02               	movlw	2
 12850  0057FE  ECAF  F057         	call	_RTS
 12851  005802  D820               	call	PL222	;call to abstracted procedure
 12852  005804  A0D8               	btfss	status,0,c
 12853  005806  0012               	return	
 12854  005808  D7E9               	goto	l39694
 12855  00580A                     l39708:
 12856                           
 12857                           ; BSR set to: 0
 12858  00580A  5183               	movf	(_M+35)& (0+255),w,b
 12859                           
 12860                           ; Switch size 1, requested type "space"
 12861                           ; Number of cases is 8, Range of values is 0 to 7
 12862                           ; switch strategies available:
 12863                           ; Name         Instructions Cycles
 12864                           ; simple_byte           25    13 (average)
 12865                           ;	Chosen strategy is simple_byte
 12866  00580C  E101 D70B          	bz	l1340
 12867  005810  0A01               	xorlw	1	; case 1
 12868  005812  E101 D714          	bz	l39554
 12869  005816  0A03               	xorlw	3	; case 2
 12870  005818  E101 D744          	bz	l39594
 12871  00581C  0A01               	xorlw	1	; case 3
 12872  00581E  E101 D753          	bz	l39602
 12873  005822  0A07               	xorlw	7	; case 4
 12874  005824  E101 D768          	bz	l39616
 12875  005828  0A01               	xorlw	1	; case 5
 12876  00582A  E101 D777          	bz	l39630
 12877  00582E  0A03               	xorlw	3	; case 6
 12878  005830  E09E               	bz	l39662
 12879  005832  0A01               	xorlw	1	; case 7
 12880  005834  A4D8               	btfss	status,2,c
 12881  005836  0012               	return	
 12882  005838  D7CF               	goto	l1389
 12883  00583A                     __end_of_Rozruch:
 12884                           	opt stack 0
 12885  00583A                     PL216:
 12886                           	opt stack 20
 12887  00583A  0100               	movlb	0	; () banked
 12888  00583C  6FFD               	movwf	??_Rozruch& (0+255),b
 12889  00583E  0E05               	movlw	5
 12890  005840  5DFD               	subwf	??_Rozruch& (0+255),w,b
 12891  005842  0012               	return	
 12892  005844                     __end_ofPL216:
 12893                           	opt stack 0
 12894  005844                     PL222:
 12895                           	opt stack 20
 12896  005844  0100               	movlb	0	; () banked
 12897  005846  6FFD               	movwf	??_Rozruch& (0+255),b
 12898  005848  0E02               	movlw	2
 12899  00584A  5DFD               	subwf	??_Rozruch& (0+255),w,b
 12900  00584C  0012               	return	
 12901  00584E                     __end_ofPL222:
 12902                           	opt stack 0
 12903                           tblptru	equ	0xFF8
 12904                           tblptrh	equ	0xFF7
 12905                           tblptrl	equ	0xFF6
 12906                           tablat	equ	0xFF5
 12907                           prodh	equ	0xFF4
 12908                           prodl	equ	0xFF3
 12909                           intcon	equ	0xFF2
 12910                           postinc0	equ	0xFEE
 12911                           wreg	equ	0xFE8
 12912                           indf1	equ	0xFE7
 12913                           postinc1	equ	0xFE6
 12914                           postdec1	equ	0xFE5
 12915                           fsr1h	equ	0xFE2
 12916                           fsr1l	equ	0xFE1
 12917                           indf2	equ	0xFDF
 12918                           postinc2	equ	0xFDE
 12919                           postdec2	equ	0xFDD
 12920                           fsr2h	equ	0xFDA
 12921                           fsr2l	equ	0xFD9
 12922                           status	equ	0xFD8
 12923                           
 12924 ;; *************** function _ReloadPlomien *****************
 12925 ;; Defined at:
 12926 ;;		line 3207 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;		None
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;		None
 12931 ;; Return value:  Size  Location     Type
 12932 ;;		None               void
 12933 ;; Registers used:
 12934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12935 ;; Tracked objects:
 12936 ;;		On entry : E/0
 12937 ;;		On exit  : E/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12943 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12944 ;;Total ram usage:        1 bytes
 12945 ;; Hardware stack levels used:    1
 12946 ;; Hardware stack levels required when called:    5
 12947 ;; This function calls:
 12948 ;;		_RTdS
 12949 ;; This function is called by:
 12950 ;;		_main
 12951 ;; This function uses a non-reentrant model
 12952 ;;
 12953                           
 12954                           	psect	text33
 12955  00AE54                     __ptext33:
 12956                           	opt stack 0
 12957  00AE54                     _ReloadPlomien:
 12958                           	opt stack 25
 12959                           
 12960                           ;main.c: 3208: if(!M._RUSZ_PLOMIEN&&!M._ZMKCOCW&&!M._ROZRUCH&&(RTdS(4)>9))
 12961  00AE54  0100               	movlb	0	; () banked
 12962  00AE56  A171               	btfss	(_M+17)& (0+255),0,b
 12963                           
 12964                           ; BSR set to: 0
 12965  00AE58  B370               	btfsc	(_M+16)& (0+255),1,b
 12966  00AE5A  0012               	return	
 12967                           
 12968                           ; BSR set to: 0
 12969  00AE5C  B570               	btfsc	(_M+16)& (0+255),2,b
 12970  00AE5E  0012               	return	
 12971                           
 12972                           ; BSR set to: 0
 12973  00AE60  0E04               	movlw	4
 12974  00AE62  ECD5  F057         	call	_RTdS
 12975  00AE66  6E1F               	movwf	??_ReloadPlomien& (0+255),c
 12976  00AE68  0E0A               	movlw	10
 12977  00AE6A  5C1F               	subwf	??_ReloadPlomien,w,c
 12978  00AE6C  A0D8               	btfss	status,0,c
 12979  00AE6E  0012               	return	
 12980                           
 12981                           ; BSR set to: 1
 12982                           ;main.c: 3209: {
 12983                           ;main.c: 3210: M._RUSZ_RPLM=0;
 12984  00AE70  0100               	movlb	0	; () banked
 12985  00AE72  9371               	bcf	(_M+17)& (0+255),1,b
 12986                           
 12987                           ;main.c: 3211: M._OST_PL=0;
 12988  00AE74  977B               	bcf	(_M+27)& (0+255),3,b
 12989                           
 12990                           ;main.c: 3212: M.LICZNIK_PL=0;
 12991  00AE76  6B7D               	clrf	(_M+29)& (0+255),b
 12992  00AE78  0012               	return	
 12993  00AE7A                     __end_of_ReloadPlomien:
 12994                           	opt stack 0
 12995                           tblptru	equ	0xFF8
 12996                           tblptrh	equ	0xFF7
 12997                           tblptrl	equ	0xFF6
 12998                           tablat	equ	0xFF5
 12999                           prodh	equ	0xFF4
 13000                           prodl	equ	0xFF3
 13001                           intcon	equ	0xFF2
 13002                           postinc0	equ	0xFEE
 13003                           wreg	equ	0xFE8
 13004                           indf1	equ	0xFE7
 13005                           postinc1	equ	0xFE6
 13006                           postdec1	equ	0xFE5
 13007                           fsr1h	equ	0xFE2
 13008                           fsr1l	equ	0xFE1
 13009                           indf2	equ	0xFDF
 13010                           postinc2	equ	0xFDE
 13011                           postdec2	equ	0xFDD
 13012                           fsr2h	equ	0xFDA
 13013                           fsr2l	equ	0xFD9
 13014                           status	equ	0xFD8
 13015                           
 13016 ;; *************** function _RuszPlomien *****************
 13017 ;; Defined at:
 13018 ;;		line 3149 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;		None
 13021 ;; Auto vars:     Size  Location     Type
 13022 ;;		None
 13023 ;; Return value:  Size  Location     Type
 13024 ;;		None               void
 13025 ;; Registers used:
 13026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13027 ;; Tracked objects:
 13028 ;;		On entry : F/0
 13029 ;;		On exit  : E/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13036 ;;Total ram usage:        1 bytes
 13037 ;; Hardware stack levels used:    1
 13038 ;; Hardware stack levels required when called:    5
 13039 ;; This function calls:
 13040 ;;		_StartRTS
 13041 ;;		_RTS
 13042 ;;		_StartRTdS
 13043 ;; This function is called by:
 13044 ;;		_main
 13045 ;; This function uses a non-reentrant model
 13046 ;;
 13047                           
 13048                           	psect	text34
 13049  009B30                     __ptext34:
 13050                           	opt stack 0
 13051  009B30                     _RuszPlomien:
 13052                           	opt stack 25
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;main.c: 3150: switch(M.RPL)
 13056  009B30  D02B               	goto	l39758
 13057  009B32                     l39722:
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;main.c: 3153: {
 13061                           ;main.c: 3154: M.RPL=1;
 13062  009B32  0E01               	movlw	1
 13063  009B34  6F8A               	movwf	(_M+42)& (0+255),b
 13064                           
 13065                           ; BSR set to: 0
 13066                           ;main.c: 3155: StartRTS(3);
 13067  009B36  0E03               	movlw	3
 13068  009B38  EC9C  F057         	call	_StartRTS
 13069  009B3C                     l39726:
 13070                           
 13071                           ;main.c: 3158: {
 13072                           ;main.c: 3159: if(RTS(3)<30) return;
 13073  009B3C  0E03               	movlw	3
 13074  009B3E  ECAF  F057         	call	_RTS
 13075  009B42  6E1F               	movwf	??_RuszPlomien& (0+255),c
 13076  009B44  0E1E               	movlw	30
 13077  009B46  5C1F               	subwf	??_RuszPlomien,w,c
 13078  009B48  A0D8               	btfss	status,0,c
 13079  009B4A  0012               	return	
 13080                           
 13081                           ; BSR set to: 1
 13082                           ;main.c: 3160: M.LICZNIK_PL++;
 13083  009B4C  0100               	movlb	0	; () banked
 13084  009B4E  2B7D               	incf	(_M+29)& (0+255),f,b
 13085                           
 13086                           ; BSR set to: 0
 13087                           ;main.c: 3161: if(M._RUSZ_RPLM)
 13088  009B50  A371               	btfss	(_M+17)& (0+255),1,b
 13089  009B52  D00D               	goto	l1584
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;main.c: 3162: {
 13093                           ;main.c: 3163: if(!PWM.tpGZ)
 13094  009B54  B593               	btfsc	_PWM& (0+255),2,b	;volatile
 13095  009B56  D008               	goto	l39740
 13096  009B58                     
 13097                           ; BSR set to: 0
 13098                           ;main.c: 3164: {
 13099                           ;main.c: 3165: if(M.LICZNIK_PL>=3-1)
 13100  009B58  EE20  F07D         	lfsr	2,_M+29
 13101  009B5C  0E01               	movlw	1
 13102  009B5E                     L22:
 13103  009B5E  64DF               	cpfsgt	indf2,c
 13104  009B60  D00C               	goto	l39752
 13105  009B62                     l39738:
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;main.c: 3166: {
 13109                           ;main.c: 3167: M._OST_PL=1;
 13110  009B62  877B               	bsf	(_M+27)& (0+255),3,b
 13111                           
 13112                           ;main.c: 3168: M._RUSZ_RPLM=0;
 13113  009B64  9371               	bcf	(_M+17)& (0+255),1,b
 13114  009B66  D009               	goto	l39752
 13115  009B68                     l39740:
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;main.c: 3171: else
 13119                           ;main.c: 3172: {
 13120                           ;main.c: 3173: if(M.LICZNIK_PL>=2-1)
 13121  009B68  517D               	movf	(_M+29)& (0+255),w,b
 13122  009B6A  E1FB               	bnz	l39738
 13123  009B6C  D006               	goto	l39752
 13124  009B6E                     l1584:
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;main.c: 3180: else
 13128                           ;main.c: 3181: {
 13129                           ;main.c: 3182: if(!PWM.tpGZ)
 13130  009B6E  B593               	btfsc	_PWM& (0+255),2,b	;volatile
 13131  009B70  D7F3               	goto	L23
 13132                           
 13133                           ; BSR set to: 0
 13134                           ;main.c: 3183: {
 13135                           ;main.c: 3184: if(M.LICZNIK_PL>=3)
 13136  009B72  EE20  F07D         	lfsr	2,_M+29
 13137  009B76  0E02               	movlw	2
 13138  009B78  D7F2               	goto	L22
 13139  009B7A                     l39752:
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;main.c: 3196: }
 13143                           ;main.c: 3197: }
 13144                           ;main.c: 3198: }
 13145                           ;main.c: 3199: StartRTdS(4);
 13146  009B7A  0E04               	movlw	4
 13147  009B7C  ECC2  F057         	call	_StartRTdS
 13148                           
 13149                           ; BSR set to: 1
 13150                           ;main.c: 3200: M._RUSZ_PLOMIEN=0;
 13151  009B80  0100               	movlb	0	; () banked
 13152  009B82  9171               	bcf	(_M+17)& (0+255),0,b
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;main.c: 3201: M.RPL=0;
 13156  009B84  6B8A               	clrf	(_M+42)& (0+255),b
 13157                           
 13158                           ;main.c: 3202: }
 13159                           ;main.c: 3203: }
 13160  009B86  0012               	return	
 13161  009B88                     l39758:
 13162                           
 13163                           ; BSR set to: 0
 13164  009B88  518A               	movf	(_M+42)& (0+255),w,b
 13165                           
 13166                           ; Switch size 1, requested type "space"
 13167                           ; Number of cases is 2, Range of values is 0 to 1
 13168                           ; switch strategies available:
 13169                           ; Name         Instructions Cycles
 13170                           ; simple_byte            7     4 (average)
 13171                           ;	Chosen strategy is simple_byte
 13172  009B8A  E0D3               	bz	l39722
 13173  009B8C  0A01               	xorlw	1	; case 1
 13174  009B8E  A4D8               	btfss	status,2,c
 13175  009B90  0012               	return	
 13176  009B92  D7D4               	goto	l39726
 13177  009B94                     __end_of_RuszPlomien:
 13178                           	opt stack 0
 13179                           tblptru	equ	0xFF8
 13180                           tblptrh	equ	0xFF7
 13181                           tblptrl	equ	0xFF6
 13182                           tablat	equ	0xFF5
 13183                           prodh	equ	0xFF4
 13184                           prodl	equ	0xFF3
 13185                           intcon	equ	0xFF2
 13186                           postinc0	equ	0xFEE
 13187                           wreg	equ	0xFE8
 13188                           indf1	equ	0xFE7
 13189                           postinc1	equ	0xFE6
 13190                           postdec1	equ	0xFE5
 13191                           fsr1h	equ	0xFE2
 13192                           fsr1l	equ	0xFE1
 13193                           indf2	equ	0xFDF
 13194                           postinc2	equ	0xFDE
 13195                           postdec2	equ	0xFDD
 13196                           fsr2h	equ	0xFDA
 13197                           fsr2l	equ	0xFD9
 13198                           status	equ	0xFD8
 13199                           
 13200 ;; *************** function _ReloadCiag *****************
 13201 ;; Defined at:
 13202 ;;		line 3333 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 13203 ;; Parameters:    Size  Location     Type
 13204 ;;		None
 13205 ;; Auto vars:     Size  Location     Type
 13206 ;;		None
 13207 ;; Return value:  Size  Location     Type
 13208 ;;		None               void
 13209 ;; Registers used:
 13210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13211 ;; Tracked objects:
 13212 ;;		On entry : E/0
 13213 ;;		On exit  : E/0
 13214 ;;		Unchanged: 0/0
 13215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13220 ;;Total ram usage:        1 bytes
 13221 ;; Hardware stack levels used:    1
 13222 ;; Hardware stack levels required when called:    5
 13223 ;; This function calls:
 13224 ;;		_RTM
 13225 ;;		_RTS
 13226 ;; This function is called by:
 13227 ;;		_main
 13228 ;; This function uses a non-reentrant model
 13229 ;;
 13230                           
 13231                           	psect	text35
 13232  00A1F4                     __ptext35:
 13233                           	opt stack 0
 13234  00A1F4                     _ReloadCiag:
 13235                           	opt stack 25
 13236                           
 13237                           ;main.c: 3334: if(!M._TURBO)
 13238  00A1F4  0100               	movlb	0	; () banked
 13239  00A1F6  B37B               	btfsc	(_M+27)& (0+255),1,b
 13240  00A1F8  D00D               	goto	l31766
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;main.c: 3335: {
 13244                           ;main.c: 3336: if(!M._RUSZ_CIAG&&RTM(6)>60) M.LICZNIK_CIG2=0;
 13245  00A1FA  BF70               	btfsc	(_M+16)& (0+255),7,b
 13246  00A1FC  0012               	return	
 13247                           
 13248                           ; BSR set to: 0
 13249  00A1FE  0E06               	movlw	6
 13250  00A200  EC3D  F057         	call	_RTM
 13251  00A204  6E1F               	movwf	??_ReloadCiag& (0+255),c
 13252  00A206  0E3D               	movlw	61
 13253  00A208  5C1F               	subwf	??_ReloadCiag,w,c
 13254  00A20A  A0D8               	btfss	status,0,c
 13255  00A20C  0012               	return	
 13256                           
 13257                           ; BSR set to: 1
 13258  00A20E  0100               	movlb	0	; () banked
 13259  00A210  6B7F               	clrf	(_M+31)& (0+255),b
 13260  00A212  0012               	return	
 13261  00A214                     l31766:
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;main.c: 3338: else
 13265                           ;main.c: 3339: {
 13266                           ;main.c: 3340: if(RTS(10)>60)
 13267  00A214  0E0A               	movlw	10
 13268  00A216  ECAF  F057         	call	_RTS
 13269  00A21A  6E1F               	movwf	??_ReloadCiag& (0+255),c
 13270  00A21C  0E3D               	movlw	61
 13271  00A21E  5C1F               	subwf	??_ReloadCiag,w,c
 13272  00A220  E302               	bnc	l1634
 13273                           
 13274                           ; BSR set to: 1
 13275                           ;main.c: 3341: {
 13276                           ;main.c: 3342: M.LICZNIK_CIG=0;
 13277  00A222  0100               	movlb	0	; () banked
 13278  00A224  6B7E               	clrf	(_M+30)& (0+255),b
 13279  00A226                     l1634:
 13280                           
 13281                           ;main.c: 3343: }
 13282                           ;main.c: 3344: if(!M._RUSZ_CIAG&&(RTS(14)>60))
 13283  00A226  0100               	movlb	0	; () banked
 13284  00A228  BF70               	btfsc	(_M+16)& (0+255),7,b
 13285  00A22A  0012               	return	
 13286                           
 13287                           ; BSR set to: 0
 13288  00A22C  0E0E               	movlw	14
 13289  00A22E  ECAF  F057         	call	_RTS
 13290  00A232  6E1F               	movwf	??_ReloadCiag& (0+255),c
 13291  00A234  0E3D               	movlw	61
 13292  00A236  5C1F               	subwf	??_ReloadCiag,w,c
 13293  00A238  A0D8               	btfss	status,0,c
 13294  00A23A  0012               	return	
 13295                           
 13296                           ; BSR set to: 1
 13297                           ;main.c: 3345: {
 13298                           ;main.c: 3346: M.LICZNIK_CIG3=0;
 13299  00A23C  0100               	movlb	0	; () banked
 13300  00A23E  6B80               	clrf	(_M+32)& (0+255),b
 13301  00A240  0012               	return	
 13302  00A242                     __end_of_ReloadCiag:
 13303                           	opt stack 0
 13304                           tblptru	equ	0xFF8
 13305                           tblptrh	equ	0xFF7
 13306                           tblptrl	equ	0xFF6
 13307                           tablat	equ	0xFF5
 13308                           prodh	equ	0xFF4
 13309                           prodl	equ	0xFF3
 13310                           intcon	equ	0xFF2
 13311                           postinc0	equ	0xFEE
 13312                           wreg	equ	0xFE8
 13313                           indf1	equ	0xFE7
 13314                           postinc1	equ	0xFE6
 13315                           postdec1	equ	0xFE5
 13316                           fsr1h	equ	0xFE2
 13317                           fsr1l	equ	0xFE1
 13318                           indf2	equ	0xFDF
 13319                           postinc2	equ	0xFDE
 13320                           postdec2	equ	0xFDD
 13321                           fsr2h	equ	0xFDA
 13322                           fsr2l	equ	0xFD9
 13323                           status	equ	0xFD8
 13324                           
 13325 ;; *************** function _RuszCiag *****************
 13326 ;; Defined at:
 13327 ;;		line 3219 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 13328 ;; Parameters:    Size  Location     Type
 13329 ;;		None
 13330 ;; Auto vars:     Size  Location     Type
 13331 ;;		None
 13332 ;; Return value:  Size  Location     Type
 13333 ;;		None               void
 13334 ;; Registers used:
 13335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13336 ;; Tracked objects:
 13337 ;;		On entry : F/0
 13338 ;;		On exit  : E/0
 13339 ;;		Unchanged: 0/0
 13340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13343 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13344 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13345 ;;Total ram usage:        1 bytes
 13346 ;; Hardware stack levels used:    1
 13347 ;; Hardware stack levels required when called:    9
 13348 ;; This function calls:
 13349 ;;		_StartRTS
 13350 ;;		_StartRTM
 13351 ;;		_RTS
 13352 ;;		_RTM
 13353 ;;		_PrintErr
 13354 ;;		_ErrPTG
 13355 ;;		_RdPrt
 13356 ;; This function is called by:
 13357 ;;		_main
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text36
 13362  0078BC                     __ptext36:
 13363                           	opt stack 0
 13364  0078BC                     _RuszCiag:
 13365                           	opt stack 21
 13366                           
 13367                           ; BSR set to: 0
 13368                           ;main.c: 3220: if(!M._TURBO)
 13369  0078BC  A37B               	btfss	(_M+27)& (0+255),1,b
 13370  0078BE  D02D               	goto	l39804
 13371  0078C0  D09D               	goto	l39894
 13372  0078C2                     l39764:
 13373                           
 13374                           ; BSR set to: 0
 13375                           ;main.c: 3225: {
 13376                           ;main.c: 3226: M.RCI=1;
 13377  0078C2  0E01               	movlw	1
 13378  0078C4  6F8B               	movwf	(_M+43)& (0+255),b
 13379                           
 13380                           ; BSR set to: 0
 13381                           ;main.c: 3227: M._prb_CIG=0;
 13382  0078C6  917C               	bcf	(_M+28)& (0+255),0,b
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;main.c: 3228: StartRTS(4);
 13386  0078C8  0E04               	movlw	4
 13387  0078CA  EC9C  F057         	call	_StartRTS
 13388                           
 13389                           ; BSR set to: 1
 13390                           ;main.c: 3229: StartRTM(3);
 13391  0078CE  0E03               	movlw	3
 13392  0078D0  EC50  F057         	call	_StartRTM
 13393  0078D4                     l39772:
 13394                           
 13395                           ;main.c: 3232: {
 13396                           ;main.c: 3233: if(RTS(4)>1) M._prb_CIG=1;
 13397  0078D4  0E04               	movlw	4
 13398  0078D6  ECAF  F057         	call	_RTS
 13399                           
 13400                           ; BSR set to: 0
 13401                           
 13402                           ; BSR set to: 0
 13403                           ;main.c: 3234: if(RTM(3)<15) return;
 13404  0078DA  D89C               	call	PL140	;call to abstracted procedure
 13405  0078DC  EC3D  F057         	call	_RTM
 13406  0078E0  0100               	movlb	0	; () banked
 13407  0078E2  6FFD               	movwf	??_RuszCiag& (0+255),b
 13408  0078E4  0E0F               	movlw	15
 13409  0078E6  5DFD               	subwf	??_RuszCiag& (0+255),w,b
 13410  0078E8  A0D8               	btfss	status,0,c
 13411  0078EA  0012               	return	
 13412                           
 13413                           ; BSR set to: 0
 13414                           ;main.c: 3235: M.LICZNIK_CIG2++;
 13415  0078EC  2B7F               	incf	(_M+31)& (0+255),f,b
 13416                           
 13417                           ; BSR set to: 0
 13418                           ;main.c: 3236: if(M.LICZNIK_CIG2>=4)
 13419  0078EE  EE20  F07F         	lfsr	2,_M+31
 13420  0078F2  0E03               	movlw	3
 13421  0078F4  64DF               	cpfsgt	indf2,c
 13422  0078F6  D00A               	goto	l39792
 13423                           
 13424                           ; BSR set to: 0
 13425                           ;main.c: 3237: {
 13426                           ;main.c: 3238: M.LICZNIK_CIG2=0;
 13427  0078F8  6B7F               	clrf	(_M+31)& (0+255),b
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;main.c: 3239: M.ERR_BTY=0x03;
 13431  0078FA  0E03               	movlw	3
 13432  0078FC  6F82               	movwf	(_M+34)& (0+255),b
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;main.c: 3240: PrintErr(0x03,1);
 13436  0078FE  0E01               	movlw	1
 13437  007900  6E25               	movwf	?_PrintErr,c
 13438  007902  0E03               	movlw	3
 13439  007904  ECA6  F047         	call	_PrintErr
 13440                           
 13441                           ; BSR set to: 1
 13442                           ;main.c: 3241: ErrPTG();
 13443  007908  EC27  F02C         	call	_ErrPTG	;wreg free
 13444  00790C                     l39792:
 13445                           
 13446                           ;main.c: 3242: }
 13447                           ;main.c: 3243: M.RCI=0;
 13448  00790C  0100               	movlb	0	; () banked
 13449  00790E  6B8B               	clrf	(_M+43)& (0+255),b
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;main.c: 3244: M._RUSZ_CIAG=0;
 13453  007910  9F70               	bcf	(_M+16)& (0+255),7,b
 13454                           
 13455                           ; BSR set to: 0
 13456                           ;main.c: 3245: M._prb_CIG=0;
 13457  007912  917C               	bcf	(_M+28)& (0+255),0,b
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;main.c: 3246: StartRTM(6);
 13461  007914  0E06               	movlw	6
 13462  007916  EF50  F057         	goto	_StartRTM
 13463  00791A                     l39804:
 13464                           
 13465                           ; BSR set to: 0
 13466  00791A  518B               	movf	(_M+43)& (0+255),w,b
 13467                           
 13468                           ; Switch size 1, requested type "space"
 13469                           ; Number of cases is 2, Range of values is 0 to 1
 13470                           ; switch strategies available:
 13471                           ; Name         Instructions Cycles
 13472                           ; simple_byte            7     4 (average)
 13473                           ;	Chosen strategy is simple_byte
 13474  00791C  E0D2               	bz	l39764
 13475  00791E  0A01               	xorlw	1	; case 1
 13476  007920  A4D8               	btfss	status,2,c
 13477  007922  0012               	return	
 13478  007924  D7D7               	goto	l39772
 13479  007926                     l1612:
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;main.c: 3256: {
 13483                           ;main.c: 3257: M._prb_CIG=0;
 13484  007926  917C               	bcf	(_M+28)& (0+255),0,b
 13485                           
 13486                           ; BSR set to: 0
 13487                           ;main.c: 3258: StartRTS(4);
 13488  007928  0E04               	movlw	4
 13489  00792A  EC9C  F057         	call	_StartRTS
 13490                           
 13491                           ; BSR set to: 1
 13492                           ;main.c: 3259: if(PORTDbits.RD3)
 13493  00792E  A683               	btfss	3971,3,c	;volatile
 13494  007930  D006               	goto	l39814
 13495                           
 13496                           ; BSR set to: 1
 13497                           ;main.c: 3260: {
 13498                           ;main.c: 3261: M._VWYBIEG=1;
 13499  007932  0100               	movlb	0	; () banked
 13500  007934  8D70               	bsf	(_M+16)& (0+255),6,b
 13501                           
 13502                           ;main.c: 3262: M.VWB=0;
 13503  007936  6B8E               	clrf	(_M+46)& (0+255),b
 13504                           
 13505                           ; BSR set to: 0
 13506                           ;main.c: 3263: M.RCI=1;
 13507  007938  0E01               	movlw	1
 13508  00793A  6F8B               	movwf	(_M+43)& (0+255),b
 13509                           
 13510                           ;main.c: 3264: }
 13511  00793C  0C01               	retlw	1
 13512  00793E                     l39814:
 13513                           
 13514                           ; BSR set to: 1
 13515                           ;main.c: 3265: else M.RCI=2;
 13516  00793E  0E02               	movlw	2
 13517  007940  0100               	movlb	0	; () banked
 13518  007942  6F8B               	movwf	(_M+43)& (0+255),b
 13519  007944  0C02               	retlw	2
 13520  007946                     l39816:
 13521                           
 13522                           ; BSR set to: 0
 13523                           ;main.c: 3269: {
 13524                           ;main.c: 3270: if(RTS(4)>1) M._prb_CIG=1;
 13525  007946  0E04               	movlw	4
 13526  007948  ECAF  F057         	call	_RTS
 13527                           
 13528                           ; BSR set to: 0
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;main.c: 3272: if(RdPrt(3))
 13532  00794C  D863               	call	PL140	;call to abstracted procedure
 13533  00794E  EC84  F058         	call	_RdPrt
 13534  007952  E304               	bnc	l39828
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;main.c: 3273: {
 13538                           ;main.c: 3274: M.RCI=4;
 13539  007954  0E04               	movlw	4
 13540  007956  6F8B               	movwf	(_M+43)& (0+255),b
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;main.c: 3275: M.LICZNIK_CIG3=0;
 13544  007958  6B80               	clrf	(_M+32)& (0+255),b
 13545  00795A  D008               	goto	L24
 13546  00795C                     l39828:
 13547                           
 13548                           ; BSR set to: 0
 13549                           ;main.c: 3278: }
 13550                           ;main.c: 3279: if(RTS(4)<15-1) return;
 13551  00795C  0E04               	movlw	4
 13552  00795E  ECAF  F057         	call	_RTS
 13553  007962  D85F               	call	PL224	;call to abstracted procedure
 13554  007964  A0D8               	btfss	status,0,c
 13555  007966  0012               	return	
 13556                           
 13557                           ; BSR set to: 0
 13558                           ;main.c: 3280: M.RCI=3;
 13559  007968  0E03               	movlw	3
 13560  00796A  6F8B               	movwf	(_M+43)& (0+255),b
 13561  00796C                     L24:
 13562                           
 13563                           ; BSR set to: 0
 13564                           ;main.c: 3281: StartRTS(4);
 13565  00796C  0E04               	movlw	4
 13566  00796E  EF9C  F057         	goto	_StartRTS
 13567  007972                     l39836:
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;main.c: 3286: {
 13571                           ;main.c: 3287: if(RTS(4)>1) M._prb_CIG=1;
 13572  007972  0E04               	movlw	4
 13573  007974  ECAF  F057         	call	_RTS
 13574                           
 13575                           ; BSR set to: 0
 13576                           
 13577                           ; BSR set to: 0
 13578                           ;main.c: 3289: if(!RdPrt(3))
 13579  007978  D84D               	call	PL140	;call to abstracted procedure
 13580  00797A  EC84  F058         	call	_RdPrt
 13581  00797E  E202               	bc	l39846
 13582                           
 13583                           ; BSR set to: 0
 13584                           ;main.c: 3290: {
 13585                           ;main.c: 3291: M.RCI=4;
 13586  007980  0E04               	movlw	4
 13587  007982  D02B               	goto	L25
 13588  007984                     l39846:
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;main.c: 3294: }
 13592                           ;main.c: 3295: if(RTS(4)<15-1) return;
 13593  007984  0E04               	movlw	4
 13594  007986  ECAF  F057         	call	_RTS
 13595  00798A  D84B               	call	PL224	;call to abstracted procedure
 13596  00798C  A0D8               	btfss	status,0,c
 13597  00798E  0012               	return	
 13598                           
 13599                           ; BSR set to: 0
 13600                           ;main.c: 3296: M.ERR_BTY=0x03;
 13601  007990  0E03               	movlw	3
 13602  007992  6F82               	movwf	(_M+34)& (0+255),b
 13603                           
 13604                           ; BSR set to: 0
 13605                           ;main.c: 3297: PrintErr(0x03,1);
 13606  007994  0E01               	movlw	1
 13607  007996  6E25               	movwf	?_PrintErr,c
 13608  007998  0E03               	movlw	3
 13609  00799A  ECA6  F047         	call	_PrintErr
 13610                           
 13611                           ; BSR set to: 1
 13612                           ;main.c: 3298: ErrPTG();
 13613  00799E  EC27  F02C         	call	_ErrPTG	;wreg free
 13614  0079A2                     l39856:
 13615                           
 13616                           ;main.c: 3302: {
 13617                           ;main.c: 3303: PORTDbits.RD3=0;
 13618  0079A2  9683               	bcf	3971,3,c	;volatile
 13619                           
 13620                           ;main.c: 3304: if(RTS(4)<5-1) return;
 13621  0079A4  0E04               	movlw	4
 13622  0079A6  ECAF  F057         	call	_RTS
 13623  0079AA  0100               	movlb	0	; () banked
 13624  0079AC  6FFD               	movwf	??_RuszCiag& (0+255),b
 13625  0079AE  0E04               	movlw	4
 13626  0079B0  5DFD               	subwf	??_RuszCiag& (0+255),w,b
 13627  0079B2  A0D8               	btfss	status,0,c
 13628  0079B4  0012               	return	
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;main.c: 3305: M.LICZNIK_CIG3++;
 13632  0079B6  2B80               	incf	(_M+32)& (0+255),f,b
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;main.c: 3306: if(M.LICZNIK_CIG3>=10)
 13636  0079B8  EE20  F080         	lfsr	2,_M+32
 13637  0079BC  0E09               	movlw	9
 13638  0079BE  64DF               	cpfsgt	indf2,c
 13639  0079C0  D00A               	goto	l39874
 13640                           
 13641                           ; BSR set to: 0
 13642                           ;main.c: 3307: {
 13643                           ;main.c: 3308: M.LICZNIK_CIG3=0;
 13644  0079C2  6B80               	clrf	(_M+32)& (0+255),b
 13645                           
 13646                           ; BSR set to: 0
 13647                           ;main.c: 3309: M.ERR_BTY=0x03;
 13648  0079C4  0E03               	movlw	3
 13649  0079C6  6F82               	movwf	(_M+34)& (0+255),b
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;main.c: 3310: PrintErr(0x03,1);
 13653  0079C8  0E01               	movlw	1
 13654  0079CA  6E25               	movwf	?_PrintErr,c
 13655  0079CC  0E03               	movlw	3
 13656  0079CE  ECA6  F047         	call	_PrintErr
 13657                           
 13658                           ; BSR set to: 1
 13659                           ;main.c: 3311: ErrPTG();
 13660  0079D2  EC27  F02C         	call	_ErrPTG	;wreg free
 13661  0079D6                     l39874:
 13662                           
 13663                           ;main.c: 3312: }
 13664                           ;main.c: 3313: M.RCI=4;
 13665  0079D6  0E04               	movlw	4
 13666  0079D8  0100               	movlb	0	; () banked
 13667  0079DA                     L25:
 13668  0079DA  6F8B               	movwf	(_M+43)& (0+255),b
 13669                           
 13670                           ; BSR set to: 0
 13671                           ;main.c: 3314: StartRTS(4);
 13672  0079DC  EF9C  F057         	goto	_StartRTS
 13673  0079E0                     l39878:
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;main.c: 3318: {
 13677                           ;main.c: 3319: if(RTS(4)<1) return;
 13678  0079E0  0E04               	movlw	4
 13679  0079E2  ECAF  F057         	call	_RTS
 13680  0079E6  0900               	iorlw	0
 13681  0079E8  B4D8               	btfsc	status,2,c
 13682  0079EA  0012               	return	
 13683                           
 13684                           ; BSR set to: 1
 13685                           ;main.c: 3320: StartRTS(14);
 13686  0079EC  0E0E               	movlw	14
 13687  0079EE  EC9C  F057         	call	_StartRTS
 13688                           
 13689                           ; BSR set to: 1
 13690                           ;main.c: 3321: M._prb_CIG=0;
 13691  0079F2  0100               	movlb	0	; () banked
 13692  0079F4  917C               	bcf	(_M+28)& (0+255),0,b
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;main.c: 3322: M._RUSZ_CIAG=0;
 13696  0079F6  9F70               	bcf	(_M+16)& (0+255),7,b
 13697                           
 13698                           ; BSR set to: 0
 13699                           ;main.c: 3323: M.RCI=0;
 13700  0079F8  6B8B               	clrf	(_M+43)& (0+255),b
 13701  0079FA  0012               	return	
 13702  0079FC                     l39894:
 13703                           
 13704                           ; BSR set to: 0
 13705  0079FC  518B               	movf	(_M+43)& (0+255),w,b
 13706                           
 13707                           ; Switch size 1, requested type "space"
 13708                           ; Number of cases is 5, Range of values is 0 to 4
 13709                           ; switch strategies available:
 13710                           ; Name         Instructions Cycles
 13711                           ; simple_byte           16     9 (average)
 13712                           ;	Chosen strategy is simple_byte
 13713  0079FE  E093               	bz	l1612
 13714  007A00  0A01               	xorlw	1	; case 1
 13715  007A02  E0A1               	bz	l39816
 13716  007A04  0A03               	xorlw	3	; case 2
 13717  007A06  E0B5               	bz	l39836
 13718  007A08  0A01               	xorlw	1	; case 3
 13719  007A0A  E0CB               	bz	l39856
 13720  007A0C  0A07               	xorlw	7	; case 4
 13721  007A0E  A4D8               	btfss	status,2,c
 13722  007A10  0012               	return	
 13723  007A12  D7E6               	goto	l39878
 13724  007A14                     __end_of_RuszCiag:
 13725                           	opt stack 0
 13726  007A14                     PL140:
 13727                           	opt stack 21
 13728  007A14  0100               	movlb	0	; () banked
 13729  007A16  6FFD               	movwf	??_RuszCiag& (0+255),b
 13730  007A18  0E02               	movlw	2
 13731  007A1A  5DFD               	subwf	??_RuszCiag& (0+255),w,b
 13732  007A1C  B0D8               	btfsc	status,0,c
 13733  007A1E  817C               	bsf	(_M+28)& (0+255),0,b
 13734  007A20  0C03               	retlw	3
 13735  007A22                     __end_ofPL140:
 13736                           	opt stack 0
 13737  007A22                     PL224:
 13738                           	opt stack 21
 13739  007A22  0100               	movlb	0	; () banked
 13740  007A24  6FFD               	movwf	??_RuszCiag& (0+255),b
 13741  007A26  0E0E               	movlw	14
 13742  007A28  5DFD               	subwf	??_RuszCiag& (0+255),w,b
 13743  007A2A  0012               	return	
 13744  007A2C                     __end_ofPL224:
 13745                           	opt stack 0
 13746                           tblptru	equ	0xFF8
 13747                           tblptrh	equ	0xFF7
 13748                           tblptrl	equ	0xFF6
 13749                           tablat	equ	0xFF5
 13750                           prodh	equ	0xFF4
 13751                           prodl	equ	0xFF3
 13752                           intcon	equ	0xFF2
 13753                           postinc0	equ	0xFEE
 13754                           wreg	equ	0xFE8
 13755                           indf1	equ	0xFE7
 13756                           postinc1	equ	0xFE6
 13757                           postdec1	equ	0xFE5
 13758                           fsr1h	equ	0xFE2
 13759                           fsr1l	equ	0xFE1
 13760                           indf2	equ	0xFDF
 13761                           postinc2	equ	0xFDE
 13762                           postdec2	equ	0xFDD
 13763                           fsr2h	equ	0xFDA
 13764                           fsr2l	equ	0xFD9
 13765                           status	equ	0xFD8
 13766                           
 13767 ;; *************** function _BlokadaL3 *****************
 13768 ;; Defined at:
 13769 ;;		line 2345 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 13770 ;; Parameters:    Size  Location     Type
 13771 ;;		None
 13772 ;; Auto vars:     Size  Location     Type
 13773 ;;		None
 13774 ;; Return value:  Size  Location     Type
 13775 ;;		None               void
 13776 ;; Registers used:
 13777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13778 ;; Tracked objects:
 13779 ;;		On entry : F/0
 13780 ;;		On exit  : E/0
 13781 ;;		Unchanged: 0/0
 13782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13787 ;;Total ram usage:        1 bytes
 13788 ;; Hardware stack levels used:    1
 13789 ;; Hardware stack levels required when called:    6
 13790 ;; This function calls:
 13791 ;;		_StartRTM
 13792 ;;		_SetL3
 13793 ;;		_EndL3
 13794 ;;		_RTM
 13795 ;; This function is called by:
 13796 ;;		_main
 13797 ;; This function uses a non-reentrant model
 13798 ;;
 13799                           
 13800                           	psect	text37
 13801  009CC0                     __ptext37:
 13802                           	opt stack 0
 13803  009CC0                     _BlokadaL3:
 13804                           	opt stack 24
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;main.c: 2346: switch(M.BL3)
 13808  009CC0  D029               	goto	l39922
 13809  009CC2                     l39898:
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;main.c: 2349: {
 13813                           ;main.c: 2350: M.BL3=1;
 13814  009CC2  0E01               	movlw	1
 13815  009CC4  6F86               	movwf	(_M+38)& (0+255),b
 13816                           
 13817                           ; BSR set to: 0
 13818                           ;main.c: 2351: StartRTM(2);
 13819  009CC6  0E02               	movlw	2
 13820  009CC8  EC50  F057         	call	_StartRTM
 13821  009CCC                     l39902:
 13822                           
 13823                           ;main.c: 2354: {
 13824                           ;main.c: 2355: SetL3();
 13825  009CCC  EC20  F05B         	call	_SetL3	;wreg free
 13826                           
 13827                           ; BSR set to: 1
 13828                           ;main.c: 2356: if((PFN.poz!=3&&!M._ZMKCOCW)||M._pob_CW||(DtKNF.tpkt==0&&DtCW._wpz_CW))
 13829  009CD0  51D9               	movf	(_PFN+31)& (0+255),w,b
 13830  009CD2  0A03               	xorlw	3
 13831  009CD4  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 13832  009CD6  E003               	bz	l39908
 13833                           
 13834                           ; BSR set to: 1
 13835  009CD8  0100               	movlb	0	; () banked
 13836  009CDA  A370               	btfss	(_M+16)& (0+255),1,b
 13837  009CDC  D00A               	goto	l1314
 13838  009CDE                     l39908:
 13839  009CDE  0100               	movlb	0	; () banked
 13840  009CE0  5169               	movf	(_M+9)& (0+255),w,b
 13841  009CE2  1168               	iorwf	(_M+8)& (0+255),w,b
 13842  009CE4  E106               	bnz	l1314
 13843                           
 13844                           ; BSR set to: 0
 13845  009CE6  0101               	movlb	1	; () banked
 13846  009CE8  6751               	tstfsz	(_DtKNF+7)& (0+255),b
 13847  009CEA  D007               	goto	l39916
 13848                           
 13849                           ; BSR set to: 1
 13850  009CEC  0100               	movlb	0	; () banked
 13851  009CEE  A7CF               	btfss	_DtCW& (0+255),3,b
 13852  009CF0  D004               	goto	l39916
 13853  009CF2                     l1314:
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;main.c: 2357: {
 13857                           ;main.c: 2358: M._BLOKUJ_3M=0;
 13858  009CF2  9771               	bcf	(_M+17)& (0+255),3,b
 13859                           
 13860                           ;main.c: 2359: M.BL3=0;
 13861  009CF4  6B86               	clrf	(_M+38)& (0+255),b
 13862                           
 13863                           ; BSR set to: 0
 13864                           ;main.c: 2360: EndL3();
 13865  009CF6  ECE9  F05A         	call	_EndL3	;wreg free
 13866  009CFA                     l39916:
 13867                           
 13868                           ;main.c: 2361: }
 13869                           ;main.c: 2362: if(RTM(2)<3) return;
 13870  009CFA  0E02               	movlw	2
 13871  009CFC  EC3D  F057         	call	_RTM
 13872  009D00  6E1F               	movwf	??_BlokadaL3& (0+255),c
 13873  009D02  0E03               	movlw	3
 13874  009D04  5C1F               	subwf	??_BlokadaL3,w,c
 13875  009D06  A0D8               	btfss	status,0,c
 13876  009D08  0012               	return	
 13877                           
 13878                           ; BSR set to: 1
 13879                           ;main.c: 2363: M._BLOKUJ_3M=0;
 13880  009D0A  0100               	movlb	0	; () banked
 13881  009D0C  9771               	bcf	(_M+17)& (0+255),3,b
 13882                           
 13883                           ;main.c: 2364: M.BL3=0;
 13884  009D0E  6B86               	clrf	(_M+38)& (0+255),b
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;main.c: 2365: EndL3();
 13888  009D10  EFE9  F05A         	goto	_EndL3	;wreg free
 13889  009D14                     l39922:
 13890                           
 13891                           ; BSR set to: 0
 13892  009D14  5186               	movf	(_M+38)& (0+255),w,b
 13893                           
 13894                           ; Switch size 1, requested type "space"
 13895                           ; Number of cases is 2, Range of values is 0 to 1
 13896                           ; switch strategies available:
 13897                           ; Name         Instructions Cycles
 13898                           ; simple_byte            7     4 (average)
 13899                           ;	Chosen strategy is simple_byte
 13900  009D16  E0D5               	bz	l39898
 13901  009D18  0A01               	xorlw	1	; case 1
 13902  009D1A  A4D8               	btfss	status,2,c
 13903  009D1C  0012               	return	
 13904  009D1E  D7D6               	goto	l39902
 13905  009D20                     __end_of_BlokadaL3:
 13906                           	opt stack 0
 13907                           tblptru	equ	0xFF8
 13908                           tblptrh	equ	0xFF7
 13909                           tblptrl	equ	0xFF6
 13910                           tablat	equ	0xFF5
 13911                           prodh	equ	0xFF4
 13912                           prodl	equ	0xFF3
 13913                           intcon	equ	0xFF2
 13914                           postinc0	equ	0xFEE
 13915                           wreg	equ	0xFE8
 13916                           indf1	equ	0xFE7
 13917                           postinc1	equ	0xFE6
 13918                           postdec1	equ	0xFE5
 13919                           fsr1h	equ	0xFE2
 13920                           fsr1l	equ	0xFE1
 13921                           indf2	equ	0xFDF
 13922                           postinc2	equ	0xFDE
 13923                           postdec2	equ	0xFDD
 13924                           fsr2h	equ	0xFDA
 13925                           fsr2l	equ	0xFD9
 13926                           status	equ	0xFD8
 13927                           
 13928 ;; *************** function _Blokada15S *****************
 13929 ;; Defined at:
 13930 ;;		line 2373 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 13931 ;; Parameters:    Size  Location     Type
 13932 ;;		None
 13933 ;; Auto vars:     Size  Location     Type
 13934 ;;		None
 13935 ;; Return value:  Size  Location     Type
 13936 ;;		None               void
 13937 ;; Registers used:
 13938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13939 ;; Tracked objects:
 13940 ;;		On entry : F/0
 13941 ;;		On exit  : E/0
 13942 ;;		Unchanged: 0/0
 13943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13947 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13948 ;;Total ram usage:        1 bytes
 13949 ;; Hardware stack levels used:    1
 13950 ;; Hardware stack levels required when called:    5
 13951 ;; This function calls:
 13952 ;;		_StartRTdS
 13953 ;;		_RTdS
 13954 ;; This function is called by:
 13955 ;;		_main
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           
 13959                           	psect	text38
 13960  00A290                     __ptext38:
 13961                           	opt stack 0
 13962  00A290                     _Blokada15S:
 13963                           	opt stack 25
 13964                           
 13965                           ; BSR set to: 0
 13966                           ;main.c: 2374: switch(M.BL15)
 13967  00A290  D01F               	goto	l39940
 13968  00A292                     l39926:
 13969                           
 13970                           ; BSR set to: 0
 13971                           ;main.c: 2377: {
 13972                           ;main.c: 2378: M.BL15=1;
 13973  00A292  0E01               	movlw	1
 13974  00A294  6F87               	movwf	(_M+39)& (0+255),b
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;main.c: 2379: StartRTdS(3);
 13978  00A296  0E03               	movlw	3
 13979  00A298  ECC2  F057         	call	_StartRTdS
 13980  00A29C                     l39930:
 13981                           
 13982                           ;main.c: 2382: {
 13983                           ;main.c: 2383: if((RTdS(3)>1)&&(PFN.poz!=3))
 13984  00A29C  0E03               	movlw	3
 13985  00A29E  ECD5  F057         	call	_RTdS
 13986  00A2A2  6E1F               	movwf	??_Blokada15S& (0+255),c
 13987  00A2A4  0E02               	movlw	2
 13988  00A2A6  5C1F               	subwf	??_Blokada15S,w,c
 13989  00A2A8  E307               	bnc	l39936
 13990                           
 13991                           ; BSR set to: 1
 13992  00A2AA  51D9               	movf	(_PFN+31)& (0+255),w,b
 13993  00A2AC  0A03               	xorlw	3
 13994  00A2AE  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 13995  00A2B0  E003               	bz	l39936
 13996                           
 13997                           ; BSR set to: 1
 13998                           ;main.c: 2384: {
 13999                           ;main.c: 2385: M._BLOKUJ_15S=0;
 14000  00A2B2  0100               	movlb	0	; () banked
 14001  00A2B4  9971               	bcf	(_M+17)& (0+255),4,b
 14002                           
 14003                           ;main.c: 2386: M.BL15=0;
 14004  00A2B6  6B87               	clrf	(_M+39)& (0+255),b
 14005  00A2B8                     l39936:
 14006                           
 14007                           ;main.c: 2387: }
 14008                           ;main.c: 2388: if(RTdS(3)<150) return;
 14009  00A2B8  0E03               	movlw	3
 14010  00A2BA  ECD5  F057         	call	_RTdS
 14011  00A2BE  6E1F               	movwf	??_Blokada15S& (0+255),c
 14012  00A2C0  0E96               	movlw	150
 14013  00A2C2  5C1F               	subwf	??_Blokada15S,w,c
 14014  00A2C4  A0D8               	btfss	status,0,c
 14015  00A2C6  0012               	return	
 14016                           
 14017                           ; BSR set to: 1
 14018                           ;main.c: 2389: M._BLOKUJ_15S=0;
 14019  00A2C8  0100               	movlb	0	; () banked
 14020  00A2CA  9971               	bcf	(_M+17)& (0+255),4,b
 14021                           
 14022                           ;main.c: 2390: M.BL15=0;
 14023  00A2CC  6B87               	clrf	(_M+39)& (0+255),b
 14024                           
 14025                           ;main.c: 2391: }
 14026                           ;main.c: 2392: }
 14027  00A2CE  0012               	return	
 14028  00A2D0                     l39940:
 14029                           
 14030                           ; BSR set to: 0
 14031  00A2D0  5187               	movf	(_M+39)& (0+255),w,b
 14032                           
 14033                           ; Switch size 1, requested type "space"
 14034                           ; Number of cases is 2, Range of values is 0 to 1
 14035                           ; switch strategies available:
 14036                           ; Name         Instructions Cycles
 14037                           ; simple_byte            7     4 (average)
 14038                           ;	Chosen strategy is simple_byte
 14039  00A2D2  E0DF               	bz	l39926
 14040  00A2D4  0A01               	xorlw	1	; case 1
 14041  00A2D6  A4D8               	btfss	status,2,c
 14042  00A2D8  0012               	return	
 14043  00A2DA  D7E0               	goto	l39930
 14044  00A2DC                     __end_of_Blokada15S:
 14045                           	opt stack 0
 14046                           tblptru	equ	0xFF8
 14047                           tblptrh	equ	0xFF7
 14048                           tblptrl	equ	0xFF6
 14049                           tablat	equ	0xFF5
 14050                           prodh	equ	0xFF4
 14051                           prodl	equ	0xFF3
 14052                           intcon	equ	0xFF2
 14053                           postinc0	equ	0xFEE
 14054                           wreg	equ	0xFE8
 14055                           indf1	equ	0xFE7
 14056                           postinc1	equ	0xFE6
 14057                           postdec1	equ	0xFE5
 14058                           fsr1h	equ	0xFE2
 14059                           fsr1l	equ	0xFE1
 14060                           indf2	equ	0xFDF
 14061                           postinc2	equ	0xFDE
 14062                           postdec2	equ	0xFDD
 14063                           fsr2h	equ	0xFDA
 14064                           fsr2l	equ	0xFD9
 14065                           status	equ	0xFD8
 14066                           
 14067 ;; *************** function _Moduluj *****************
 14068 ;; Defined at:
 14069 ;;		line 26 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 14070 ;; Parameters:    Size  Location     Type
 14071 ;;		None
 14072 ;; Auto vars:     Size  Location     Type
 14073 ;;		None
 14074 ;; Return value:  Size  Location     Type
 14075 ;;		None               void
 14076 ;; Registers used:
 14077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14078 ;; Tracked objects:
 14079 ;;		On entry : F/0
 14080 ;;		On exit  : F/0
 14081 ;;		Unchanged: 0/0
 14082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14085 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14086 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14087 ;;Total ram usage:        1 bytes
 14088 ;; Hardware stack levels used:    1
 14089 ;; Hardware stack levels required when called:    7
 14090 ;; This function calls:
 14091 ;;		_StartCO
 14092 ;;		_ReadDataCO
 14093 ;;		_ModToCO
 14094 ;;		_ModZgCO
 14095 ;;		_ModDkCO
 14096 ;;		_RTdS
 14097 ;;		_StartRTdS
 14098 ;;		_IncConstCOCW
 14099 ;;		_IncMaxCO
 14100 ;;		_ModPruCO
 14101 ;;		_ModPrzCO
 14102 ;;		_PropOPT
 14103 ;;		_StartMCW
 14104 ;;		_ReadDataCW
 14105 ;;		_ModToCW
 14106 ;;		_ModZgCW
 14107 ;;		_ModDkCW
 14108 ;;		_IncMaxCW
 14109 ;;		_ModPruCW
 14110 ;;		_ModPrzCW
 14111 ;;		_PropCO
 14112 ;;		_StartCO2
 14113 ;;		_ReadDataCO2
 14114 ;;		_ModToCO2
 14115 ;;		_IncConstCO2
 14116 ;;		_StartMCW2
 14117 ;;		_ReadDataCW2
 14118 ;;		_ModToCW2
 14119 ;;		_ModZgCW2
 14120 ;;		_ModDkCW2
 14121 ;;		_IncConstCW2
 14122 ;;		_IncMaxCW2
 14123 ;;		_ModPruCW2
 14124 ;;		_ModPrzCW2
 14125 ;;		_PropCO2
 14126 ;;		_StartMCO3
 14127 ;;		_ModToCO3
 14128 ;;		_ModToCW3
 14129 ;;		_StartCO4
 14130 ;;		_ReadDataCO4
 14131 ;;		_ModToCO4
 14132 ;;		_IncConstCOCW4
 14133 ;;		_StartMCW4
 14134 ;;		_ReadDataCW4
 14135 ;;		_ModToCW4
 14136 ;;		_ModZgCW4
 14137 ;;		_ModDkCW4
 14138 ;;		_IncMaxCW4
 14139 ;;		_ModPruCW4
 14140 ;;		_ModPrzCW4
 14141 ;;		_PropCO4
 14142 ;; This function is called by:
 14143 ;;		_main
 14144 ;; This function uses a non-reentrant model
 14145 ;;
 14146                           
 14147                           	psect	text39
 14148  003950                     __ptext39:
 14149                           	opt stack 0
 14150  003950                     _Moduluj:
 14151                           	opt stack 23
 14152                           
 14153                           ; BSR set to: 0
 14154                           ;rgl.c: 30: switch(DtKNF.tpkt)
 14155  003950  D146               	goto	l40198
 14156  003952                     l39944:
 14157                           
 14158                           ; BSR set to: 1
 14159                           ;rgl.c: 33: {
 14160                           ;rgl.c: 34: if(M._pob_CO)
 14161  003952  0100               	movlb	0	; () banked
 14162  003954  516B               	movf	(_M+11)& (0+255),w,b
 14163  003956  116A               	iorwf	(_M+10)& (0+255),w,b
 14164  003958  E022               	bz	l39968
 14165                           
 14166                           ; BSR set to: 0
 14167                           ;rgl.c: 35: {
 14168                           ;rgl.c: 36: PWM.MAXPWM=PWM.MMAXCO;
 14169  00395A  C0B0  F0B4         	movff	_PWM+29,_PWM+33	;volatile
 14170                           
 14171                           ;rgl.c: 37: PWM.MINPWM=PWM.MDMOD;
 14172  00395E  C09C  F0B3         	movff	_PWM+9,_PWM+32	;volatile
 14173                           
 14174                           ; BSR set to: 0
 14175                           ;rgl.c: 38: StartCO();
 14176  003962  ECBC  F053         	call	_StartCO	;wreg free
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;rgl.c: 39: ReadDataCO();
 14180  003966  ECF3  F05A         	call	_ReadDataCO	;wreg free
 14181                           
 14182                           ; BSR set to: 0
 14183                           ;rgl.c: 40: ModToCO();
 14184  00396A  ECB3  F05A         	call	_ModToCO	;wreg free
 14185                           
 14186                           ; BSR set to: 0
 14187                           ;rgl.c: 41: ModZgCO();
 14188  00396E  EC35  F02D         	call	_ModZgCO	;wreg free
 14189                           
 14190                           ;rgl.c: 42: ModDkCO();
 14191  003972  EC9C  F043         	call	_ModDkCO	;wreg free
 14192                           
 14193                           ;rgl.c: 43: if(RTdS(2)>10)
 14194  003976  0E02               	movlw	2
 14195  003978  ECD5  F057         	call	_RTdS
 14196  00397C  6FFD               	movwf	??_Moduluj& (0+255),b
 14197  00397E  0E0B               	movlw	11
 14198  003980  5DFD               	subwf	??_Moduluj& (0+255),w,b
 14199  003982  E309               	bnc	l39964
 14200                           
 14201                           ; BSR set to: 1
 14202                           ;rgl.c: 44: {
 14203                           ;rgl.c: 45: StartRTdS(2);
 14204  003984  0E02               	movlw	2
 14205  003986  ECC2  F057         	call	_StartRTdS
 14206                           
 14207                           ; BSR set to: 1
 14208                           ;rgl.c: 46: IncConstCOCW();
 14209  00398A  EC90  F05A         	call	_IncConstCOCW	;wreg free
 14210  00398E                     l39962:
 14211                           
 14212                           ; BSR set to: 1
 14213                           ;rgl.c: 47: IncMaxCO();
 14214  00398E  EC32  F048         	call	_IncMaxCO	;wreg free
 14215                           
 14216                           ;rgl.c: 48: ModPruCO();
 14217  003992  ECBF  F03D         	call	_ModPruCO	;wreg free
 14218  003996                     l39964:
 14219                           
 14220                           ;rgl.c: 49: }
 14221                           ;rgl.c: 50: ModPrzCO();
 14222  003996  EC21  F051         	call	_ModPrzCO	;wreg free
 14223                           
 14224                           ;rgl.c: 51: PropOPT();
 14225  00399A  EF28  F05A         	goto	_PropOPT	;wreg free
 14226  00399E                     l39968:
 14227                           
 14228                           ; BSR set to: 0
 14229                           ;rgl.c: 53: else
 14230                           ;rgl.c: 54: if(M._pob_CW)
 14231  00399E  5169               	movf	(_M+9)& (0+255),w,b
 14232  0039A0  1168               	iorwf	(_M+8)& (0+255),w,b
 14233  0039A2  B4D8               	btfsc	status,2,c
 14234  0039A4  0012               	return	
 14235                           
 14236                           ; BSR set to: 0
 14237                           ;rgl.c: 55: {
 14238                           ;rgl.c: 56: StartMCW();
 14239  0039A6  ECF6  F04B         	call	_StartMCW	;wreg free
 14240                           
 14241                           ; BSR set to: 0
 14242                           ;rgl.c: 57: ReadDataCW();
 14243  0039AA  EC31  F05A         	call	_ReadDataCW	;wreg free
 14244                           
 14245                           ; BSR set to: 0
 14246                           ;rgl.c: 58: ModToCW();
 14247  0039AE  ECB9  F05A         	call	_ModToCW	;wreg free
 14248                           
 14249                           ; BSR set to: 0
 14250                           ;rgl.c: 59: ModZgCW();
 14251  0039B2  EC3E  F02E         	call	_ModZgCW	;wreg free
 14252                           
 14253                           ;rgl.c: 60: ModDkCW();
 14254  0039B6  EC42  F043         	call	_ModDkCW	;wreg free
 14255                           
 14256                           ;rgl.c: 61: if(RTdS(2)>10)
 14257  0039BA  0E02               	movlw	2
 14258  0039BC  ECD5  F057         	call	_RTdS
 14259  0039C0  6FFD               	movwf	??_Moduluj& (0+255),b
 14260  0039C2  0E0B               	movlw	11
 14261  0039C4  5DFD               	subwf	??_Moduluj& (0+255),w,b
 14262  0039C6  E30F               	bnc	l39998
 14263                           
 14264                           ; BSR set to: 1
 14265                           ;rgl.c: 62: {
 14266                           ;rgl.c: 63: StartRTdS(2);
 14267  0039C8  0E02               	movlw	2
 14268  0039CA  ECC2  F057         	call	_StartRTdS
 14269                           
 14270                           ; BSR set to: 1
 14271                           ;rgl.c: 64: if(tmr<0xff) tmr++;
 14272  0039CE  283F               	incf	_tmr,w,c
 14273  0039D0  A4D8               	btfss	status,2,c
 14274                           
 14275                           ; BSR set to: 1
 14276  0039D2  2A3F               	incf	_tmr,f,c
 14277                           
 14278                           ; BSR set to: 1
 14279                           ;rgl.c: 65: if(tmr2<0xff) tmr2++;
 14280  0039D4  29B9               	incf	_tmr2& (0+255),w,b
 14281  0039D6  A4D8               	btfss	status,2,c
 14282                           
 14283                           ; BSR set to: 1
 14284  0039D8  2BB9               	incf	_tmr2& (0+255),f,b
 14285                           
 14286                           ; BSR set to: 1
 14287                           ;rgl.c: 66: IncConstCOCW();
 14288  0039DA  EC90  F05A         	call	_IncConstCOCW	;wreg free
 14289                           
 14290                           ; BSR set to: 1
 14291                           ;rgl.c: 67: IncMaxCW();
 14292  0039DE  EC0E  F041         	call	_IncMaxCW	;wreg free
 14293                           
 14294                           ; BSR set to: 0
 14295                           ;rgl.c: 68: ModPruCW();
 14296  0039E2  EC87  F015         	call	_ModPruCW	;wreg free
 14297  0039E6                     l39998:
 14298                           
 14299                           ;rgl.c: 69: }
 14300                           ;rgl.c: 70: ModPrzCW();
 14301  0039E6  EC91  F020         	call	_ModPrzCW	;wreg free
 14302                           
 14303                           ;rgl.c: 71: PropCO();
 14304  0039EA  EFF0  F04E         	goto	_PropCO	;wreg free
 14305  0039EE                     l40002:
 14306                           
 14307                           ; BSR set to: 1
 14308                           ;rgl.c: 76: {
 14309                           ;rgl.c: 77: if(M._pob_CO)
 14310  0039EE  0100               	movlb	0	; () banked
 14311  0039F0  516B               	movf	(_M+11)& (0+255),w,b
 14312  0039F2  116A               	iorwf	(_M+10)& (0+255),w,b
 14313  0039F4  E01B               	bz	l40026
 14314                           
 14315                           ; BSR set to: 0
 14316                           ;rgl.c: 78: {
 14317                           ;rgl.c: 79: PWM.MAXPWM=PWM.MMAXCO;
 14318  0039F6  C0B0  F0B4         	movff	_PWM+29,_PWM+33	;volatile
 14319                           
 14320                           ;rgl.c: 80: PWM.MINPWM=PWM.MDMOD;
 14321  0039FA  C09C  F0B3         	movff	_PWM+9,_PWM+32	;volatile
 14322                           
 14323                           ; BSR set to: 0
 14324                           ;rgl.c: 81: StartCO2();
 14325  0039FE  EC49  F053         	call	_StartCO2	;wreg free
 14326                           
 14327                           ; BSR set to: 0
 14328                           ;rgl.c: 82: ReadDataCO2();
 14329  003A02  ECF8  F05A         	call	_ReadDataCO2	;wreg free
 14330                           
 14331                           ; BSR set to: 0
 14332                           ;rgl.c: 83: ModToCO2();
 14333  003A06  ECBF  F05A         	call	_ModToCO2	;wreg free
 14334                           
 14335                           ; BSR set to: 0
 14336                           ;rgl.c: 84: ModZgCO();
 14337  003A0A  EC35  F02D         	call	_ModZgCO	;wreg free
 14338                           
 14339                           ;rgl.c: 85: ModDkCO();
 14340  003A0E  EC9C  F043         	call	_ModDkCO	;wreg free
 14341                           
 14342                           ;rgl.c: 86: if(RTdS(2)>10)
 14343  003A12  0E02               	movlw	2
 14344  003A14  ECD5  F057         	call	_RTdS
 14345  003A18  6FFD               	movwf	??_Moduluj& (0+255),b
 14346  003A1A  0E0B               	movlw	11
 14347  003A1C  5DFD               	subwf	??_Moduluj& (0+255),w,b
 14348  003A1E  E3BB               	bnc	l39964
 14349                           
 14350                           ; BSR set to: 1
 14351                           ;rgl.c: 87: {
 14352                           ;rgl.c: 88: StartRTdS(2);
 14353  003A20  0E02               	movlw	2
 14354  003A22  ECC2  F057         	call	_StartRTdS
 14355  003A26                     l40018:
 14356                           
 14357                           ; BSR set to: 1
 14358                           ;rgl.c: 89: IncConstCO2();
 14359  003A26  EC97  F05A         	call	_IncConstCO2	;wreg free
 14360  003A2A  D7B1               	goto	l39962
 14361  003A2C                     l40026:
 14362                           
 14363                           ; BSR set to: 0
 14364                           ;rgl.c: 97: else
 14365                           ;rgl.c: 98: if(M._pob_CW)
 14366  003A2C  5169               	movf	(_M+9)& (0+255),w,b
 14367  003A2E  1168               	iorwf	(_M+8)& (0+255),w,b
 14368  003A30  B4D8               	btfsc	status,2,c
 14369  003A32  0012               	return	
 14370                           
 14371                           ; BSR set to: 0
 14372                           ;rgl.c: 99: {
 14373                           ;rgl.c: 100: StartMCW2();
 14374  003A34  EC1F  F058         	call	_StartMCW2	;wreg free
 14375                           
 14376                           ; BSR set to: 0
 14377                           ;rgl.c: 101: ReadDataCW2();
 14378  003A38  EC3A  F05A         	call	_ReadDataCW2	;wreg free
 14379                           
 14380                           ; BSR set to: 0
 14381                           ;rgl.c: 102: ModToCW2();
 14382  003A3C  ECC5  F05A         	call	_ModToCW2	;wreg free
 14383                           
 14384                           ; BSR set to: 0
 14385                           ;rgl.c: 103: ModZgCW2();
 14386  003A40  ECBD  F027         	call	_ModZgCW2	;wreg free
 14387                           
 14388                           ;rgl.c: 104: ModDkCW2();
 14389  003A44  EC46  F044         	call	_ModDkCW2	;wreg free
 14390                           
 14391                           ;rgl.c: 105: if(RTdS(2)>10)
 14392  003A48  0E02               	movlw	2
 14393  003A4A  ECD5  F057         	call	_RTdS
 14394  003A4E  6FFD               	movwf	??_Moduluj& (0+255),b
 14395  003A50  0E0B               	movlw	11
 14396  003A52  5DFD               	subwf	??_Moduluj& (0+255),w,b
 14397  003A54  E309               	bnc	l40046
 14398                           
 14399                           ; BSR set to: 1
 14400                           ;rgl.c: 106: {
 14401                           ;rgl.c: 107: StartRTdS(2);
 14402  003A56  0E02               	movlw	2
 14403  003A58  ECC2  F057         	call	_StartRTdS
 14404  003A5C                     l40040:
 14405                           
 14406                           ; BSR set to: 1
 14407                           ;rgl.c: 108: IncConstCW2();
 14408  003A5C  ECBD  F059         	call	_IncConstCW2	;wreg free
 14409                           
 14410                           ; BSR set to: 1
 14411                           ;rgl.c: 109: IncMaxCW2();
 14412  003A60  EC2E  F04E         	call	_IncMaxCW2	;wreg free
 14413                           
 14414                           ;rgl.c: 110: ModPruCW2();
 14415  003A64  EC78  F012         	call	_ModPruCW2	;wreg free
 14416  003A68                     l40046:
 14417                           
 14418                           ;rgl.c: 111: }
 14419                           ;rgl.c: 112: ModPrzCW2();
 14420  003A68  EC6E  F051         	call	_ModPrzCW2	;wreg free
 14421                           
 14422                           ;rgl.c: 113: PropCO2();
 14423  003A6C  EF90  F04E         	goto	_PropCO2	;wreg free
 14424  003A70                     l40050:
 14425                           
 14426                           ; BSR set to: 1
 14427                           ;rgl.c: 118: {
 14428                           ;rgl.c: 119: if(M._pob_CO)
 14429  003A70  0100               	movlb	0	; () banked
 14430  003A72  516B               	movf	(_M+11)& (0+255),w,b
 14431  003A74  116A               	iorwf	(_M+10)& (0+255),w,b
 14432  003A76  E01A               	bz	l40074
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;rgl.c: 120: {
 14436                           ;rgl.c: 121: PWM.MAXPWM=PWM.MMAXCO;
 14437  003A78  C0B0  F0B4         	movff	_PWM+29,_PWM+33	;volatile
 14438                           
 14439                           ;rgl.c: 122: PWM.MINPWM=PWM.MDMOD;
 14440  003A7C  C09C  F0B3         	movff	_PWM+9,_PWM+32	;volatile
 14441                           
 14442                           ; BSR set to: 0
 14443                           ;rgl.c: 123: StartMCO3();
 14444  003A80  EC66  F053         	call	_StartMCO3	;wreg free
 14445                           
 14446                           ; BSR set to: 0
 14447                           ;rgl.c: 124: ReadDataCO2();
 14448  003A84  ECF8  F05A         	call	_ReadDataCO2	;wreg free
 14449                           
 14450                           ; BSR set to: 0
 14451                           ;rgl.c: 125: ModToCO3();
 14452  003A88  EC26  F05B         	call	_ModToCO3	;wreg free
 14453                           
 14454                           ; BSR set to: 0
 14455                           ;rgl.c: 126: ModZgCO();
 14456  003A8C  EC35  F02D         	call	_ModZgCO	;wreg free
 14457                           
 14458                           ;rgl.c: 127: ModDkCO();
 14459  003A90  EC9C  F043         	call	_ModDkCO	;wreg free
 14460                           
 14461                           ;rgl.c: 128: if(RTdS(2)>10)
 14462  003A94  0E02               	movlw	2
 14463  003A96  ECD5  F057         	call	_RTdS
 14464  003A9A  6FFD               	movwf	??_Moduluj& (0+255),b
 14465  003A9C  0E0B               	movlw	11
 14466  003A9E  5DFD               	subwf	??_Moduluj& (0+255),w,b
 14467  003AA0  E201 D779          	bnc	l39964
 14468                           
 14469                           ; BSR set to: 1
 14470                           ;rgl.c: 129: {
 14471                           ;rgl.c: 130: StartRTdS(2);
 14472  003AA4  0E02               	movlw	2
 14473  003AA6  ECC2  F057         	call	_StartRTdS
 14474  003AAA  D7BD               	goto	l40018
 14475  003AAC                     l40074:
 14476                           
 14477                           ; BSR set to: 0
 14478                           ;rgl.c: 139: else
 14479                           ;rgl.c: 140: if(M._pob_CW||M._pob_AL)
 14480  003AAC  5169               	movf	(_M+9)& (0+255),w,b
 14481  003AAE  1168               	iorwf	(_M+8)& (0+255),w,b
 14482  003AB0  E104               	bnz	l2807
 14483                           
 14484                           ; BSR set to: 0
 14485  003AB2  5167               	movf	(_M+7)& (0+255),w,b
 14486  003AB4  1166               	iorwf	(_M+6)& (0+255),w,b
 14487  003AB6  B4D8               	btfsc	status,2,c
 14488  003AB8  0012               	return	
 14489  003ABA                     l2807:
 14490                           
 14491                           ; BSR set to: 0
 14492                           ;rgl.c: 141: {
 14493                           ;rgl.c: 142: PWM.MAXPWM=PWM.MMAXCW;
 14494  003ABA  C0B1  F0B4         	movff	_PWM+30,_PWM+33	;volatile
 14495                           
 14496                           ; BSR set to: 0
 14497                           ;rgl.c: 143: StartMCO3();
 14498  003ABE  EC66  F053         	call	_StartMCO3	;wreg free
 14499                           
 14500                           ; BSR set to: 0
 14501                           ;rgl.c: 144: ReadDataCO2();
 14502  003AC2  ECF8  F05A         	call	_ReadDataCO2	;wreg free
 14503                           
 14504                           ; BSR set to: 0
 14505                           ;rgl.c: 145: ModToCW3();
 14506  003AC6  ECAE  F052         	call	_ModToCW3	;wreg free
 14507                           
 14508                           ; BSR set to: 0
 14509                           ;rgl.c: 146: ModZgCO();
 14510  003ACA  EC35  F02D         	call	_ModZgCO	;wreg free
 14511                           
 14512                           ;rgl.c: 147: ModDkCO();
 14513  003ACE  EC9C  F043         	call	_ModDkCO	;wreg free
 14514                           
 14515                           ;rgl.c: 148: if(RTdS(2)>10)
 14516  003AD2  0E02               	movlw	2
 14517  003AD4  ECD5  F057         	call	_RTdS
 14518  003AD8  6FFD               	movwf	??_Moduluj& (0+255),b
 14519  003ADA  0E0B               	movlw	11
 14520  003ADC  5DFD               	subwf	??_Moduluj& (0+255),w,b
 14521  003ADE  E201 D75A          	bnc	l39964
 14522                           
 14523                           ; BSR set to: 1
 14524                           ;rgl.c: 149: {
 14525                           ;rgl.c: 150: StartRTdS(2);
 14526  003AE2  0E02               	movlw	2
 14527  003AE4  ECC2  F057         	call	_StartRTdS
 14528  003AE8  D79E               	goto	l40018
 14529  003AEA                     l40100:
 14530                           
 14531                           ; BSR set to: 1
 14532                           ;rgl.c: 162: {
 14533                           ;rgl.c: 163: if(M._pob_CO)
 14534  003AEA  0100               	movlb	0	; () banked
 14535  003AEC  516B               	movf	(_M+11)& (0+255),w,b
 14536  003AEE  116A               	iorwf	(_M+10)& (0+255),w,b
 14537  003AF0  E01C               	bz	l40124
 14538                           
 14539                           ; BSR set to: 0
 14540                           ;rgl.c: 164: {
 14541                           ;rgl.c: 165: PWM.MAXPWM=PWM.MMAXCO;
 14542  003AF2  C0B0  F0B4         	movff	_PWM+29,_PWM+33	;volatile
 14543                           
 14544                           ;rgl.c: 166: PWM.MINPWM=PWM.MDMOD;
 14545  003AF6  C09C  F0B3         	movff	_PWM+9,_PWM+32	;volatile
 14546                           
 14547                           ; BSR set to: 0
 14548                           ;rgl.c: 167: StartCO4();
 14549  003AFA  ECD8  F053         	call	_StartCO4	;wreg free
 14550                           
 14551                           ; BSR set to: 0
 14552                           ;rgl.c: 168: ReadDataCO4();
 14553  003AFE  ECFD  F05A         	call	_ReadDataCO4	;wreg free
 14554                           
 14555                           ; BSR set to: 0
 14556                           ;rgl.c: 169: ModToCO4();
 14557  003B02  ECCB  F05A         	call	_ModToCO4	;wreg free
 14558                           
 14559                           ; BSR set to: 0
 14560                           ;rgl.c: 170: ModZgCO();
 14561  003B06  EC35  F02D         	call	_ModZgCO	;wreg free
 14562                           
 14563                           ;rgl.c: 171: ModDkCO();
 14564  003B0A  EC9C  F043         	call	_ModDkCO	;wreg free
 14565                           
 14566                           ;rgl.c: 172: if(RTdS(2)>10)
 14567  003B0E  0E02               	movlw	2
 14568  003B10  ECD5  F057         	call	_RTdS
 14569  003B14  6FFD               	movwf	??_Moduluj& (0+255),b
 14570  003B16  0E0B               	movlw	11
 14571  003B18  5DFD               	subwf	??_Moduluj& (0+255),w,b
 14572  003B1A  E201 D73C          	bnc	l39964
 14573                           
 14574                           ; BSR set to: 1
 14575                           ;rgl.c: 173: {
 14576                           ;rgl.c: 174: StartRTdS(2);
 14577  003B1E  0E02               	movlw	2
 14578  003B20  ECC2  F057         	call	_StartRTdS
 14579                           
 14580                           ; BSR set to: 1
 14581                           ;rgl.c: 175: IncConstCOCW4();
 14582  003B24  EC9E  F05A         	call	_IncConstCOCW4	;wreg free
 14583  003B28  D732               	goto	l39962
 14584  003B2A                     l40124:
 14585                           
 14586                           ; BSR set to: 0
 14587                           ;rgl.c: 182: else
 14588                           ;rgl.c: 183: if(M._pob_CW)
 14589  003B2A  5169               	movf	(_M+9)& (0+255),w,b
 14590  003B2C  1168               	iorwf	(_M+8)& (0+255),w,b
 14591  003B2E  B4D8               	btfsc	status,2,c
 14592  003B30  0012               	return	
 14593                           
 14594                           ; BSR set to: 0
 14595                           ;rgl.c: 184: {
 14596                           ;rgl.c: 185: StartMCW4();
 14597  003B32  EC70  F056         	call	_StartMCW4	;wreg free
 14598                           
 14599                           ; BSR set to: 0
 14600                           ;rgl.c: 186: ReadDataCW4();
 14601  003B36  EC43  F05A         	call	_ReadDataCW4	;wreg free
 14602                           
 14603                           ; BSR set to: 0
 14604                           ;rgl.c: 187: ModToCW4();
 14605  003B3A  ECD1  F05A         	call	_ModToCW4	;wreg free
 14606                           
 14607                           ; BSR set to: 0
 14608                           ;rgl.c: 188: ModZgCW4();
 14609  003B3E  ECDD  F028         	call	_ModZgCW4	;wreg free
 14610                           
 14611                           ;rgl.c: 189: ModDkCW4();
 14612  003B42  EC9A  F044         	call	_ModDkCW4	;wreg free
 14613                           
 14614                           ;rgl.c: 190: if(RTdS(2)>10)
 14615  003B46  0E02               	movlw	2
 14616  003B48  ECD5  F057         	call	_RTdS
 14617  003B4C  6FFD               	movwf	??_Moduluj& (0+255),b
 14618  003B4E  0E0B               	movlw	11
 14619  003B50  5DFD               	subwf	??_Moduluj& (0+255),w,b
 14620  003B52  E309               	bnc	l40144
 14621                           
 14622                           ; BSR set to: 1
 14623                           ;rgl.c: 191: {
 14624                           ;rgl.c: 192: StartRTdS(2);
 14625  003B54  0E02               	movlw	2
 14626  003B56  ECC2  F057         	call	_StartRTdS
 14627                           
 14628                           ; BSR set to: 1
 14629                           ;rgl.c: 193: IncConstCOCW4();
 14630  003B5A  EC9E  F05A         	call	_IncConstCOCW4	;wreg free
 14631                           
 14632                           ; BSR set to: 1
 14633                           ;rgl.c: 194: IncMaxCW4();
 14634  003B5E  ECAA  F04F         	call	_IncMaxCW4	;wreg free
 14635                           
 14636                           ;rgl.c: 195: ModPruCW4();
 14637  003B62  ECFA  F029         	call	_ModPruCW4	;wreg free
 14638  003B66                     l40144:
 14639                           
 14640                           ;rgl.c: 196: }
 14641                           ;rgl.c: 197: ModPrzCW4();
 14642  003B66  EC8C  F040         	call	_ModPrzCW4	;wreg free
 14643                           
 14644                           ;rgl.c: 198: PropCO4();
 14645  003B6A  EF1F  F04F         	goto	_PropCO4	;wreg free
 14646  003B6E                     l40148:
 14647                           
 14648                           ; BSR set to: 1
 14649                           ;rgl.c: 203: {
 14650                           ;rgl.c: 204: if(M._pob_CO)
 14651  003B6E  0100               	movlb	0	; () banked
 14652  003B70  516B               	movf	(_M+11)& (0+255),w,b
 14653  003B72  116A               	iorwf	(_M+10)& (0+255),w,b
 14654  003B74  E01A               	bz	l40172
 14655                           
 14656                           ; BSR set to: 0
 14657                           ;rgl.c: 205: {
 14658                           ;rgl.c: 206: PWM.MAXPWM=PWM.MMAXCO;
 14659  003B76  C0B0  F0B4         	movff	_PWM+29,_PWM+33	;volatile
 14660                           
 14661                           ;rgl.c: 207: PWM.MINPWM=PWM.MDMOD;
 14662  003B7A  C09C  F0B3         	movff	_PWM+9,_PWM+32	;volatile
 14663                           
 14664                           ; BSR set to: 0
 14665                           ;rgl.c: 208: StartCO2();
 14666  003B7E  EC49  F053         	call	_StartCO2	;wreg free
 14667                           
 14668                           ; BSR set to: 0
 14669                           ;rgl.c: 209: ReadDataCO2();
 14670  003B82  ECF8  F05A         	call	_ReadDataCO2	;wreg free
 14671                           
 14672                           ; BSR set to: 0
 14673                           ;rgl.c: 210: ModToCO2();
 14674  003B86  ECBF  F05A         	call	_ModToCO2	;wreg free
 14675                           
 14676                           ; BSR set to: 0
 14677                           ;rgl.c: 211: ModZgCO();
 14678  003B8A  EC35  F02D         	call	_ModZgCO	;wreg free
 14679                           
 14680                           ;rgl.c: 212: ModDkCO();
 14681  003B8E  EC9C  F043         	call	_ModDkCO	;wreg free
 14682                           
 14683                           ;rgl.c: 213: if(RTdS(2)>10)
 14684  003B92  0E02               	movlw	2
 14685  003B94  ECD5  F057         	call	_RTdS
 14686  003B98  6FFD               	movwf	??_Moduluj& (0+255),b
 14687  003B9A  0E0B               	movlw	11
 14688  003B9C  5DFD               	subwf	??_Moduluj& (0+255),w,b
 14689  003B9E  E201 D6FA          	bnc	l39964
 14690                           
 14691                           ; BSR set to: 1
 14692                           ;rgl.c: 214: {
 14693                           ;rgl.c: 215: StartRTdS(2);
 14694  003BA2  0E02               	movlw	2
 14695  003BA4  ECC2  F057         	call	_StartRTdS
 14696  003BA8  D73E               	goto	l40018
 14697  003BAA                     l40172:
 14698                           
 14699                           ; BSR set to: 0
 14700                           ;rgl.c: 224: else
 14701                           ;rgl.c: 225: if(M._pob_CW)
 14702  003BAA  5169               	movf	(_M+9)& (0+255),w,b
 14703  003BAC  1168               	iorwf	(_M+8)& (0+255),w,b
 14704  003BAE  B4D8               	btfsc	status,2,c
 14705  003BB0  0012               	return	
 14706                           
 14707                           ; BSR set to: 0
 14708                           ;rgl.c: 226: {
 14709                           ;rgl.c: 227: StartMCW2();
 14710  003BB2  EC1F  F058         	call	_StartMCW2	;wreg free
 14711                           
 14712                           ; BSR set to: 0
 14713                           ;rgl.c: 228: ReadDataCW2();
 14714  003BB6  EC3A  F05A         	call	_ReadDataCW2	;wreg free
 14715                           
 14716                           ; BSR set to: 0
 14717                           ;rgl.c: 229: ModToCW2();
 14718  003BBA  ECC5  F05A         	call	_ModToCW2	;wreg free
 14719                           
 14720                           ; BSR set to: 0
 14721                           ;rgl.c: 230: ModZgCW2();
 14722  003BBE  ECBD  F027         	call	_ModZgCW2	;wreg free
 14723                           
 14724                           ;rgl.c: 231: ModDkCW2();
 14725  003BC2  EC46  F044         	call	_ModDkCW2	;wreg free
 14726                           
 14727                           ;rgl.c: 232: if(RTdS(2)>10)
 14728  003BC6  0E02               	movlw	2
 14729  003BC8  ECD5  F057         	call	_RTdS
 14730  003BCC  6FFD               	movwf	??_Moduluj& (0+255),b
 14731  003BCE  0E0B               	movlw	11
 14732  003BD0  5DFD               	subwf	??_Moduluj& (0+255),w,b
 14733  003BD2  E201 D749          	bnc	l40046
 14734                           
 14735                           ; BSR set to: 1
 14736                           ;rgl.c: 233: {
 14737                           ;rgl.c: 234: StartRTdS(2);
 14738  003BD6  0E02               	movlw	2
 14739  003BD8  ECC2  F057         	call	_StartRTdS
 14740  003BDC  D73F               	goto	l40040
 14741  003BDE                     l40198:
 14742                           
 14743                           ; BSR set to: 0
 14744  003BDE  0101               	movlb	1	; () banked
 14745  003BE0  5151               	movf	(_DtKNF+7)& (0+255),w,b
 14746                           
 14747                           ; Switch size 1, requested type "space"
 14748                           ; Number of cases is 4, Range of values is 0 to 3
 14749                           ; switch strategies available:
 14750                           ; Name         Instructions Cycles
 14751                           ; simple_byte           13     7 (average)
 14752                           ;	Chosen strategy is simple_byte
 14753  003BE2  E101 D745          	bz	l40050
 14754  003BE6  0A01               	xorlw	1	; case 1
 14755  003BE8  E101 D6B3          	bz	l39944
 14756  003BEC  0A03               	xorlw	3	; case 2
 14757  003BEE  E101 D77C          	bz	l40100
 14758  003BF2  0A01               	xorlw	1	; case 3
 14759  003BF4  E101 D6FB          	bz	l40002
 14760  003BF8  D7BA               	goto	l40148
 14761  003BFA                     __end_of_Moduluj:
 14762                           	opt stack 0
 14763                           tblptru	equ	0xFF8
 14764                           tblptrh	equ	0xFF7
 14765                           tblptrl	equ	0xFF6
 14766                           tablat	equ	0xFF5
 14767                           prodh	equ	0xFF4
 14768                           prodl	equ	0xFF3
 14769                           intcon	equ	0xFF2
 14770                           postinc0	equ	0xFEE
 14771                           wreg	equ	0xFE8
 14772                           indf1	equ	0xFE7
 14773                           postinc1	equ	0xFE6
 14774                           postdec1	equ	0xFE5
 14775                           fsr1h	equ	0xFE2
 14776                           fsr1l	equ	0xFE1
 14777                           indf2	equ	0xFDF
 14778                           postinc2	equ	0xFDE
 14779                           postdec2	equ	0xFDD
 14780                           fsr2h	equ	0xFDA
 14781                           fsr2l	equ	0xFD9
 14782                           status	equ	0xFD8
 14783                           
 14784 ;; *************** function _DetekcjaPrzeplywuWG *****************
 14785 ;; Defined at:
 14786 ;;		line 2968 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;		None
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;  prz             1   33[COMRAM] unsigned char 
 14791 ;;  pmp             1   32[COMRAM] unsigned char 
 14792 ;; Return value:  Size  Location     Type
 14793 ;;		None               void
 14794 ;; Registers used:
 14795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14796 ;; Tracked objects:
 14797 ;;		On entry : F/1
 14798 ;;		On exit  : E/0
 14799 ;;		Unchanged: 0/0
 14800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14804 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14805 ;;Total ram usage:        3 bytes
 14806 ;; Hardware stack levels used:    1
 14807 ;; Hardware stack levels required when called:    5
 14808 ;; This function calls:
 14809 ;;		_RdPrt
 14810 ;;		_StartRTS
 14811 ;;		_RTS
 14812 ;; This function is called by:
 14813 ;;		_main
 14814 ;; This function uses a non-reentrant model
 14815 ;;
 14816                           
 14817                           	psect	text40
 14818  009782                     __ptext40:
 14819                           	opt stack 0
 14820  009782                     _DetekcjaPrzeplywuWG:
 14821                           	opt stack 25
 14822  009782  0E01               	movlw	1
 14823                           
 14824                           ; BSR set to: 1
 14825                           ;main.c: 2969: unsigned char pmp,prz;
 14826                           ;main.c: 2971: pmp=(PORTDbits.RD2)?1:0;
 14827                           
 14828                           ; BSR set to: 0
 14829  009784  A483               	btfss	3971,2,c	;volatile
 14830  009786  0E00               	movlw	0
 14831  009788  6E21               	movwf	DetekcjaPrzeplywuWG@pmp,c
 14832                           
 14833                           ; BSR set to: 1
 14834                           ;main.c: 2972: prz=(RdPrt(1))?1:0;
 14835  00978A  0E01               	movlw	1
 14836  00978C  EC84  F058         	call	_RdPrt
 14837  009790  0E01               	movlw	1
 14838  009792  A0D8               	btfss	status,0,c
 14839  009794  0E00               	movlw	0
 14840  009796  6E22               	movwf	DetekcjaPrzeplywuWG@prz,c
 14841                           
 14842                           ; BSR set to: 0
 14843                           ;main.c: 2974: if(pmp)
 14844  009798  5021               	movf	DetekcjaPrzeplywuWG@pmp,w,c
 14845  00979A  E011               	bz	l40220
 14846                           
 14847                           ; BSR set to: 0
 14848                           ;main.c: 2975: {
 14849                           ;main.c: 2976: if(!prz&&!M._DE_PMP)
 14850  00979C  6622               	tstfsz	DetekcjaPrzeplywuWG@prz,c
 14851  00979E  D004               	goto	l1518
 14852                           
 14853                           ; BSR set to: 0
 14854  0097A0  B57C               	btfsc	(_M+28)& (0+255),2,b
 14855  0097A2  D002               	goto	l1518
 14856                           
 14857                           ; BSR set to: 0
 14858                           ;main.c: 2977: {
 14859                           ;main.c: 2978: M._DE_PMP=1;
 14860  0097A4  857C               	bsf	(_M+28)& (0+255),2,b
 14861                           
 14862                           ;main.c: 2979: M.DPR=0;
 14863  0097A6  6B92               	clrf	(_M+50)& (0+255),b
 14864  0097A8                     l1518:
 14865                           
 14866                           ; BSR set to: 0
 14867                           ;main.c: 2980: }
 14868                           ;main.c: 2981: if(M._DE_PMP)
 14869  0097A8  A57C               	btfss	(_M+28)& (0+255),2,b
 14870  0097AA  0012               	return	
 14871  0097AC  D019               	goto	l40228
 14872  0097AE                     l40214:
 14873                           
 14874                           ; BSR set to: 0
 14875                           ;main.c: 2986: {
 14876                           ;main.c: 2987: StartRTS(12);
 14877  0097AE  0E0C               	movlw	12
 14878  0097B0  EC9C  F057         	call	_StartRTS
 14879                           
 14880                           ; BSR set to: 1
 14881                           ;main.c: 2988: M.DPR=1;
 14882  0097B4  0E01               	movlw	1
 14883  0097B6  0100               	movlb	0	; () banked
 14884  0097B8  6F92               	movwf	(_M+50)& (0+255),b
 14885  0097BA                     l40218:
 14886                           
 14887                           ; BSR set to: 0
 14888                           ;main.c: 2991: {
 14889                           ;main.c: 2992: if(prz)
 14890  0097BA  5022               	movf	DetekcjaPrzeplywuWG@prz,w,c
 14891  0097BC  E003               	bz	l40222
 14892  0097BE                     l40220:
 14893                           
 14894                           ; BSR set to: 0
 14895                           ;main.c: 2993: {
 14896                           ;main.c: 2994: M._DE_PMP=0;
 14897  0097BE  957C               	bcf	(_M+28)& (0+255),2,b
 14898                           
 14899                           ;main.c: 2995: M.DPR=0;
 14900  0097C0  6B92               	clrf	(_M+50)& (0+255),b
 14901                           
 14902                           ;main.c: 2996: return;
 14903  0097C2  0012               	return	
 14904  0097C4                     l40222:
 14905                           
 14906                           ; BSR set to: 0
 14907                           ;main.c: 2997: }
 14908                           ;main.c: 2998: if(RTS(12)<3) return;
 14909  0097C4  0E0C               	movlw	12
 14910  0097C6  ECAF  F057         	call	_RTS
 14911  0097CA  6E20               	movwf	??_DetekcjaPrzeplywuWG& (0+255),c
 14912  0097CC  0E03               	movlw	3
 14913  0097CE  5C20               	subwf	??_DetekcjaPrzeplywuWG,w,c
 14914  0097D0  A0D8               	btfss	status,0,c
 14915  0097D2  0012               	return	
 14916                           
 14917                           ; BSR set to: 1
 14918                           ;main.c: 2999: if(!M._RUSZ_POMPE)
 14919  0097D4  0100               	movlb	0	; () banked
 14920  0097D6  B571               	btfsc	(_M+17)& (0+255),2,b
 14921  0097D8  D7F2               	goto	l40220
 14922                           
 14923                           ; BSR set to: 0
 14924                           ;main.c: 3000: {
 14925                           ;main.c: 3001: M.RPR=0;
 14926  0097DA  6B89               	clrf	(_M+41)& (0+255),b
 14927                           
 14928                           ;main.c: 3002: M._RUSZ_POMPE=1;
 14929  0097DC  8571               	bsf	(_M+17)& (0+255),2,b
 14930  0097DE  D7EF               	goto	l40220
 14931  0097E0                     l40228:
 14932                           
 14933                           ; BSR set to: 0
 14934  0097E0  5192               	movf	(_M+50)& (0+255),w,b
 14935                           
 14936                           ; Switch size 1, requested type "space"
 14937                           ; Number of cases is 2, Range of values is 0 to 1
 14938                           ; switch strategies available:
 14939                           ; Name         Instructions Cycles
 14940                           ; simple_byte            7     4 (average)
 14941                           ;	Chosen strategy is simple_byte
 14942  0097E2  E0E5               	bz	l40214
 14943  0097E4  0A01               	xorlw	1	; case 1
 14944  0097E6  A4D8               	btfss	status,2,c
 14945  0097E8  0012               	return	
 14946  0097EA  D7E7               	goto	l40218
 14947  0097EC                     __end_of_DetekcjaPrzeplywuWG:
 14948                           	opt stack 0
 14949                           tblptru	equ	0xFF8
 14950                           tblptrh	equ	0xFF7
 14951                           tblptrl	equ	0xFF6
 14952                           tablat	equ	0xFF5
 14953                           prodh	equ	0xFF4
 14954                           prodl	equ	0xFF3
 14955                           intcon	equ	0xFF2
 14956                           postinc0	equ	0xFEE
 14957                           wreg	equ	0xFE8
 14958                           indf1	equ	0xFE7
 14959                           postinc1	equ	0xFE6
 14960                           postdec1	equ	0xFE5
 14961                           fsr1h	equ	0xFE2
 14962                           fsr1l	equ	0xFE1
 14963                           indf2	equ	0xFDF
 14964                           postinc2	equ	0xFDE
 14965                           postdec2	equ	0xFDD
 14966                           fsr2h	equ	0xFDA
 14967                           fsr2l	equ	0xFD9
 14968                           status	equ	0xFD8
 14969                           
 14970 ;; *************** function _OczekujNaPrzeplywWG *****************
 14971 ;; Defined at:
 14972 ;;		line 3020 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 14973 ;; Parameters:    Size  Location     Type
 14974 ;;		None
 14975 ;; Auto vars:     Size  Location     Type
 14976 ;;  prz             1   12[BANK0 ] unsigned char 
 14977 ;;  pmp             1   11[BANK0 ] unsigned char 
 14978 ;; Return value:  Size  Location     Type
 14979 ;;		None               void
 14980 ;; Registers used:
 14981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14982 ;; Tracked objects:
 14983 ;;		On entry : F/0
 14984 ;;		On exit  : E/0
 14985 ;;		Unchanged: 0/0
 14986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14988 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14989 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14990 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14991 ;;Total ram usage:        3 bytes
 14992 ;; Hardware stack levels used:    1
 14993 ;; Hardware stack levels required when called:    9
 14994 ;; This function calls:
 14995 ;;		_RdPrt
 14996 ;;		_StartRTS
 14997 ;;		_RTS
 14998 ;;		_PrintErr
 14999 ;;		_ErrPTG
 15000 ;; This function is called by:
 15001 ;;		_main
 15002 ;; This function uses a non-reentrant model
 15003 ;;
 15004                           
 15005                           	psect	text41
 15006  00992A                     __ptext41:
 15007                           	opt stack 0
 15008  00992A                     _OczekujNaPrzeplywWG:
 15009                           	opt stack 21
 15010  00992A  0E01               	movlw	1
 15011                           
 15012                           ; BSR set to: 0
 15013                           ;main.c: 3021: unsigned char pmp,prz;
 15014                           ;main.c: 3023: pmp=(PORTDbits.RD2)?1:0;
 15015  00992C  A483               	btfss	3971,2,c	;volatile
 15016  00992E  0E00               	movlw	0
 15017  009930  6FFE               	movwf	OczekujNaPrzeplywWG@pmp& (0+255),b
 15018                           
 15019                           ; BSR set to: 0
 15020                           ;main.c: 3024: prz=(RdPrt(1))?1:0;
 15021  009932  0E01               	movlw	1
 15022  009934  EC84  F058         	call	_RdPrt
 15023  009938  0E01               	movlw	1
 15024  00993A  A0D8               	btfss	status,0,c
 15025  00993C  0E00               	movlw	0
 15026  00993E  6FFF               	movwf	OczekujNaPrzeplywWG@prz& (0+255),b
 15027                           
 15028                           ;main.c: 3026: switch(M.RPR)
 15029  009940  D022               	goto	l40256
 15030  009942                     l40234:
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;main.c: 3029: {
 15034                           ;main.c: 3030: M.RPR=1;
 15035  009942  0E01               	movlw	1
 15036  009944  6F89               	movwf	(_M+41)& (0+255),b
 15037                           
 15038                           ; BSR set to: 0
 15039                           ;main.c: 3031: M._prb_PRZ=1;
 15040  009946  837C               	bsf	(_M+28)& (0+255),1,b
 15041                           
 15042                           ; BSR set to: 0
 15043                           ;main.c: 3032: StartRTS(13);
 15044  009948  0E0D               	movlw	13
 15045  00994A  EC9C  F057         	call	_StartRTS
 15046  00994E                     l40240:
 15047                           
 15048                           ;main.c: 3035: {
 15049                           ;main.c: 3036: if(prz&&pmp)
 15050  00994E  0100               	movlb	0	; () banked
 15051  009950  51FF               	movf	OczekujNaPrzeplywWG@prz& (0+255),w,b
 15052  009952  E006               	bz	l40246
 15053                           
 15054                           ; BSR set to: 0
 15055  009954  51FE               	movf	OczekujNaPrzeplywWG@pmp& (0+255),w,b
 15056  009956  E004               	bz	l40246
 15057                           
 15058                           ; BSR set to: 0
 15059                           ;main.c: 3037: {
 15060                           ;main.c: 3038: M.RPR=0;
 15061  009958  6B89               	clrf	(_M+41)& (0+255),b
 15062                           
 15063                           ;main.c: 3039: M._RUSZ_POMPE=0;
 15064  00995A  9571               	bcf	(_M+17)& (0+255),2,b
 15065                           
 15066                           ;main.c: 3040: M._prb_PRZ=0;
 15067  00995C  937C               	bcf	(_M+28)& (0+255),1,b
 15068                           
 15069                           ;main.c: 3041: return;
 15070  00995E  0012               	return	
 15071  009960                     l40246:
 15072                           
 15073                           ; BSR set to: 0
 15074                           ;main.c: 3042: }
 15075                           ;main.c: 3043: if(RTS(13)<240) return;
 15076  009960  0E0D               	movlw	13
 15077  009962  ECAF  F057         	call	_RTS
 15078  009966  0100               	movlb	0	; () banked
 15079  009968  6FFD               	movwf	??_OczekujNaPrzeplywWG& (0+255),b
 15080  00996A  0EF0               	movlw	240
 15081  00996C  5DFD               	subwf	??_OczekujNaPrzeplywWG& (0+255),w,b
 15082  00996E  A0D8               	btfss	status,0,c
 15083  009970  0012               	return	
 15084                           
 15085                           ; BSR set to: 0
 15086                           ;main.c: 3044: M._RUSZ_POMPE=0;
 15087  009972  9571               	bcf	(_M+17)& (0+255),2,b
 15088                           
 15089                           ; BSR set to: 0
 15090                           ;main.c: 3045: M.ERR_BTY=0x05;
 15091  009974  0E05               	movlw	5
 15092  009976  6F82               	movwf	(_M+34)& (0+255),b
 15093                           
 15094                           ; BSR set to: 0
 15095                           ;main.c: 3046: PrintErr(0x05,1);
 15096  009978  0E01               	movlw	1
 15097  00997A  6E25               	movwf	?_PrintErr,c
 15098  00997C  0E05               	movlw	5
 15099  00997E  ECA6  F047         	call	_PrintErr
 15100                           
 15101                           ; BSR set to: 1
 15102                           ;main.c: 3047: ErrPTG();
 15103  009982  EF27  F02C         	goto	_ErrPTG	;wreg free
 15104  009986                     l40256:
 15105                           
 15106                           ; BSR set to: 0
 15107  009986  5189               	movf	(_M+41)& (0+255),w,b
 15108                           
 15109                           ; Switch size 1, requested type "space"
 15110                           ; Number of cases is 2, Range of values is 0 to 1
 15111                           ; switch strategies available:
 15112                           ; Name         Instructions Cycles
 15113                           ; simple_byte            7     4 (average)
 15114                           ;	Chosen strategy is simple_byte
 15115  009988  E0DC               	bz	l40234
 15116  00998A  0A01               	xorlw	1	; case 1
 15117  00998C  A4D8               	btfss	status,2,c
 15118  00998E  0012               	return	
 15119  009990  D7DE               	goto	l40240
 15120  009992                     __end_of_OczekujNaPrzeplywWG:
 15121                           	opt stack 0
 15122                           tblptru	equ	0xFF8
 15123                           tblptrh	equ	0xFF7
 15124                           tblptrl	equ	0xFF6
 15125                           tablat	equ	0xFF5
 15126                           prodh	equ	0xFF4
 15127                           prodl	equ	0xFF3
 15128                           intcon	equ	0xFF2
 15129                           postinc0	equ	0xFEE
 15130                           wreg	equ	0xFE8
 15131                           indf1	equ	0xFE7
 15132                           postinc1	equ	0xFE6
 15133                           postdec1	equ	0xFE5
 15134                           fsr1h	equ	0xFE2
 15135                           fsr1l	equ	0xFE1
 15136                           indf2	equ	0xFDF
 15137                           postinc2	equ	0xFDE
 15138                           postdec2	equ	0xFDD
 15139                           fsr2h	equ	0xFDA
 15140                           fsr2l	equ	0xFD9
 15141                           status	equ	0xFD8
 15142                           
 15143 ;; *************** function _RTM *****************
 15144 ;; Defined at:
 15145 ;;		line 91 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
 15146 ;; Parameters:    Size  Location     Type
 15147 ;;  Index           1    wreg     const unsigned char 
 15148 ;; Auto vars:     Size  Location     Type
 15149 ;;  Index           1   29[COMRAM] const unsigned char 
 15150 ;; Return value:  Size  Location     Type
 15151 ;;                  1    wreg      unsigned char 
 15152 ;; Registers used:
 15153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15154 ;; Tracked objects:
 15155 ;;		On entry : E/1
 15156 ;;		On exit  : F/1
 15157 ;;		Unchanged: 0/0
 15158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15163 ;;Total ram usage:        1 bytes
 15164 ;; Hardware stack levels used:    1
 15165 ;; Hardware stack levels required when called:    4
 15166 ;; This function calls:
 15167 ;;		Nothing
 15168 ;; This function is called by:
 15169 ;;		_DecyzjaAntyLeg
 15170 ;;		_FunkcjaSerwisowa
 15171 ;;		_BlokadaL3
 15172 ;;		_RuszCiag
 15173 ;;		_ReloadCiag
 15174 ;; This function uses a non-reentrant model
 15175 ;;
 15176                           
 15177                           	psect	text42
 15178  00AE7A                     __ptext42:
 15179                           	opt stack 0
 15180  00AE7A                     _RTM:
 15181                           	opt stack 25
 15182                           
 15183                           ;RTM@Index stored from wreg
 15184  00AE7A  CFE8 F01E          	movff	wreg,RTM@Index
 15185                           
 15186                           ;rtimer.c: 92: if (Index>7-1) asm("RESET");
 15187  00AE7E  0E06               	movlw	6
 15188  00AE80  641E               	cpfsgt	RTM@Index,c
 15189  00AE82  D001               	goto	l32416
 15190  00AE84  00FF               	reset		;# 
 15191  00AE86                     l32416:
 15192                           
 15193                           ;rtimer.c: 93: return Mn[Index].M;
 15194  00AE86  501E               	movf	RTM@Index,w,c
 15195  00AE88  0D02               	mullw	2
 15196  00AE8A  0101               	movlb	1	; () banked
 15197  00AE8C  D802               	call	PL132	;call to abstracted procedure
 15198  00AE8E  50DF               	movf	indf2,w,c
 15199                           
 15200                           ; BSR set to: 1
 15201  00AE90  0012               	return	
 15202  00AE92                     __end_of_RTM:
 15203                           	opt stack 0
 15204  00AE92                     PL132:
 15205                           	opt stack 22
 15206  00AE92  0E5D               	movlw	low (_Mn+1)	;volatile
 15207  00AE94  24F3               	addwf	prodl,w,c
 15208  00AE96  6ED9               	movwf	fsr2l,c
 15209  00AE98  0E01               	movlw	high (_Mn+1)	;volatile
 15210  00AE9A  20F4               	addwfc	prodh,w,c
 15211  00AE9C  6EDA               	movwf	fsr2h,c
 15212  00AE9E  0012               	return	
 15213  00AEA0                     __end_ofPL132:
 15214                           	opt stack 0
 15215                           tblptru	equ	0xFF8
 15216                           tblptrh	equ	0xFF7
 15217                           tblptrl	equ	0xFF6
 15218                           tablat	equ	0xFF5
 15219                           prodh	equ	0xFF4
 15220                           prodl	equ	0xFF3
 15221                           intcon	equ	0xFF2
 15222                           postinc0	equ	0xFEE
 15223                           wreg	equ	0xFE8
 15224                           indf1	equ	0xFE7
 15225                           postinc1	equ	0xFE6
 15226                           postdec1	equ	0xFE5
 15227                           fsr1h	equ	0xFE2
 15228                           fsr1l	equ	0xFE1
 15229                           indf2	equ	0xFDF
 15230                           postinc2	equ	0xFDE
 15231                           postdec2	equ	0xFDD
 15232                           fsr2h	equ	0xFDA
 15233                           fsr2l	equ	0xFD9
 15234                           status	equ	0xFD8
 15235                           
 15236 ;; *************** function _StartRTM *****************
 15237 ;; Defined at:
 15238 ;;		line 85 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
 15239 ;; Parameters:    Size  Location     Type
 15240 ;;  Index           1    wreg     const unsigned char 
 15241 ;; Auto vars:     Size  Location     Type
 15242 ;;  Index           1   29[COMRAM] const unsigned char 
 15243 ;; Return value:  Size  Location     Type
 15244 ;;		None               void
 15245 ;; Registers used:
 15246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15247 ;; Tracked objects:
 15248 ;;		On entry : E/0
 15249 ;;		On exit  : F/1
 15250 ;;		Unchanged: 0/0
 15251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15255 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15256 ;;Total ram usage:        1 bytes
 15257 ;; Hardware stack levels used:    1
 15258 ;; Hardware stack levels required when called:    4
 15259 ;; This function calls:
 15260 ;;		Nothing
 15261 ;; This function is called by:
 15262 ;;		_DecyzjaAntyLeg
 15263 ;;		_FunkcjaSerwisowa
 15264 ;;		_BlokadaL3
 15265 ;;		_RuszCiag
 15266 ;; This function uses a non-reentrant model
 15267 ;;
 15268                           
 15269                           	psect	text43
 15270  00AEA0                     __ptext43:
 15271                           	opt stack 0
 15272  00AEA0                     _StartRTM:
 15273                           	opt stack 25
 15274                           
 15275                           ; BSR set to: 1
 15276                           ;StartRTM@Index stored from wreg
 15277  00AEA0  CFE8 F01E          	movff	wreg,StartRTM@Index
 15278                           
 15279                           ;rtimer.c: 86: if (Index>7-1) asm("RESET");
 15280  00AEA4  0E06               	movlw	6
 15281  00AEA6  641E               	cpfsgt	StartRTM@Index,c
 15282  00AEA8  D001               	goto	l32432
 15283  00AEAA  00FF               	reset		;# 
 15284  00AEAC                     l32432:
 15285                           
 15286                           ;rtimer.c: 87: Mn[Index].S=0;
 15287  00AEAC  501E               	movf	StartRTM@Index,w,c
 15288  00AEAE  0D02               	mullw	2
 15289  00AEB0  0101               	movlb	1	; () banked
 15290  00AEB2  ECB8  F03D         	call	PL122	;call to abstracted procedure
 15291  00AEB6  6ADF               	clrf	indf2,c
 15292                           
 15293                           ;rtimer.c: 88: Mn[Index].M=0;
 15294  00AEB8  501E               	movf	StartRTM@Index,w,c
 15295  00AEBA  0D02               	mullw	2
 15296  00AEBC  EC49  F057         	call	PL132	;call to abstracted procedure
 15297  00AEC0  0E00               	movlw	0
 15298  00AEC2  6EDF               	movwf	indf2,c
 15299                           
 15300                           ; BSR set to: 1
 15301  00AEC4  0C00               	retlw	0
 15302  00AEC6                     __end_of_StartRTM:
 15303                           	opt stack 0
 15304                           tblptru	equ	0xFF8
 15305                           tblptrh	equ	0xFF7
 15306                           tblptrl	equ	0xFF6
 15307                           tablat	equ	0xFF5
 15308                           prodh	equ	0xFF4
 15309                           prodl	equ	0xFF3
 15310                           intcon	equ	0xFF2
 15311                           postinc0	equ	0xFEE
 15312                           wreg	equ	0xFE8
 15313                           indf1	equ	0xFE7
 15314                           postinc1	equ	0xFE6
 15315                           postdec1	equ	0xFE5
 15316                           fsr1h	equ	0xFE2
 15317                           fsr1l	equ	0xFE1
 15318                           indf2	equ	0xFDF
 15319                           postinc2	equ	0xFDE
 15320                           postdec2	equ	0xFDD
 15321                           fsr2h	equ	0xFDA
 15322                           fsr2l	equ	0xFD9
 15323                           status	equ	0xFD8
 15324                           
 15325 ;; *************** function _NastawaCOCW *****************
 15326 ;; Defined at:
 15327 ;;		line 828 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 15328 ;; Parameters:    Size  Location     Type
 15329 ;;		None
 15330 ;; Auto vars:     Size  Location     Type
 15331 ;;		None
 15332 ;; Return value:  Size  Location     Type
 15333 ;;		None               void
 15334 ;; Registers used:
 15335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15336 ;; Tracked objects:
 15337 ;;		On entry : C/1
 15338 ;;		On exit  : F/1
 15339 ;;		Unchanged: 0/0
 15340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15343 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15344 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15345 ;;Total ram usage:        1 bytes
 15346 ;; Hardware stack levels used:    1
 15347 ;; Hardware stack levels required when called:    8
 15348 ;; This function calls:
 15349 ;;		_StartRTdS
 15350 ;;		_EndNst
 15351 ;;		_PrintNstCW
 15352 ;;		_PrintNstCO
 15353 ;;		_RTdS
 15354 ;;		_RdPrt
 15355 ;;		_ReadParam
 15356 ;; This function is called by:
 15357 ;;		_DecWSW
 15358 ;; This function uses a non-reentrant model
 15359 ;;
 15360                           
 15361                           	psect	text44
 15362  00681A                     __ptext44:
 15363                           	opt stack 0
 15364  00681A                     _NastawaCOCW:
 15365                           	opt stack 21
 15366                           
 15367                           ;main.c: 829: static unsigned char obg_cw=0,obg_co=0,zmn2=0,zmn3=0,pcw;
 15368                           ;main.c: 832: if(PFN._ofnserw||PFN._set_fnserw||PFN._oaleg||PFN._set_aleg)
 15369                           
 15370                           ; BSR set to: 1
 15371  00681A  0101               	movlb	1	; () banked
 15372  00681C  AFBD               	btfss	(_PFN+3)& (0+255),7,b
 15373                           
 15374                           ; BSR set to: 1
 15375  00681E  B9BB               	btfsc	(_PFN+1)& (0+255),4,b
 15376  006820  D004               	goto	l746
 15377                           
 15378                           ; BSR set to: 1
 15379  006822  B1BE               	btfsc	(_PFN+4)& (0+255),0,b
 15380  006824  D002               	goto	l746
 15381                           
 15382                           ; BSR set to: 1
 15383  006826  ABBB               	btfss	(_PFN+1)& (0+255),5,b
 15384  006828  D003               	goto	l744
 15385  00682A                     l746:
 15386                           
 15387                           ; BSR set to: 1
 15388                           ;main.c: 833: {
 15389                           ;main.c: 834: PFN._set_ncw=0;
 15390  00682A  91BB               	bcf	(_PFN+1)& (0+255),0,b
 15391                           
 15392                           ;main.c: 835: PFN._set_nco=0;
 15393  00682C  9FBA               	bcf	_PFN& (0+255),7,b
 15394                           
 15395                           ;main.c: 836: PFN._str_nco=0;
 15396  00682E  97BA               	bcf	_PFN& (0+255),3,b
 15397  006830                     l744:
 15398                           
 15399                           ; BSR set to: 1
 15400                           ;main.c: 837: }
 15401                           ;main.c: 839: if(!PFN._set_ncw&&!obg_cw&&PFN._obgCW)
 15402  006830  A1BB               	btfss	(_PFN+1)& (0+255),0,b
 15403                           
 15404                           ; BSR set to: 1
 15405  006832  67AC               	tstfsz	NastawaCOCW@obg_cw& (0+255),b
 15406  006834  D007               	goto	l40274
 15407                           
 15408                           ; BSR set to: 1
 15409  006836  A5BE               	btfss	(_PFN+4)& (0+255),2,b
 15410  006838  D005               	goto	l40274
 15411                           
 15412                           ; BSR set to: 1
 15413                           ;main.c: 840: {
 15414                           ;main.c: 841: PFN._str_ncw=1;
 15415  00683A  89BA               	bsf	_PFN& (0+255),4,b
 15416                           
 15417                           ;main.c: 842: PFN.b_str_ncw=1;
 15418  00683C  8DBA               	bsf	_PFN& (0+255),6,b
 15419                           
 15420                           ; BSR set to: 1
 15421                           ;main.c: 843: StartRTdS(9);
 15422  00683E  0E09               	movlw	9
 15423  006840  ECC2  F057         	call	_StartRTdS
 15424  006844                     l40274:
 15425                           
 15426                           ; BSR set to: 1
 15427                           ;main.c: 844: }
 15428                           ;main.c: 845: obg_cw=PFN._obgCW;
 15429  006844  0E00               	movlw	0
 15430  006846  B5BE               	btfsc	(_PFN+4)& (0+255),2,b
 15431  006848  0E01               	movlw	1
 15432  00684A  6FAC               	movwf	NastawaCOCW@obg_cw& (0+255),b
 15433                           
 15434                           ; BSR set to: 1
 15435                           ;main.c: 846: if(PFN.b_str_ncw)
 15436  00684C  ADBA               	btfss	_PFN& (0+255),6,b
 15437  00684E  D006               	goto	l40282
 15438                           
 15439                           ; BSR set to: 1
 15440                           ;main.c: 847: {
 15441                           ;main.c: 848: PFN.b_str_ncw=0;
 15442  006850  9DBA               	bcf	_PFN& (0+255),6,b
 15443                           
 15444                           ; BSR set to: 1
 15445                           ;main.c: 849: EndNst();
 15446  006852  EC1D  F05B         	call	_EndNst	;wreg free
 15447                           
 15448                           ;main.c: 850: PrintNstCW(PFN.PPCW);
 15449  006856  51C8               	movf	(_PFN+14)& (0+255),w,b
 15450  006858  ECC9  F04C         	call	_PrintNstCW
 15451  00685C                     l40282:
 15452                           
 15453                           ; BSR set to: 1
 15454                           ;main.c: 851: }
 15455                           ;main.c: 853: if(!PFN._set_nco&&!obg_co&&PFN._obgCO)
 15456  00685C  AFBA               	btfss	_PFN& (0+255),7,b
 15457                           
 15458                           ; BSR set to: 1
 15459  00685E  67AB               	tstfsz	NastawaCOCW@obg_co& (0+255),b
 15460  006860  D007               	goto	l40292
 15461                           
 15462                           ; BSR set to: 1
 15463  006862  A3BE               	btfss	(_PFN+4)& (0+255),1,b
 15464  006864  D005               	goto	l40292
 15465                           
 15466                           ; BSR set to: 1
 15467                           ;main.c: 854: {
 15468                           ;main.c: 855: PFN._str_nco=1;
 15469  006866  87BA               	bsf	_PFN& (0+255),3,b
 15470                           
 15471                           ;main.c: 856: PFN.b_str_nco=1;
 15472  006868  8BBA               	bsf	_PFN& (0+255),5,b
 15473                           
 15474                           ; BSR set to: 1
 15475                           ;main.c: 857: StartRTdS(9);
 15476  00686A  0E09               	movlw	9
 15477  00686C  ECC2  F057         	call	_StartRTdS
 15478  006870                     l40292:
 15479                           
 15480                           ; BSR set to: 1
 15481                           ;main.c: 858: }
 15482                           ;main.c: 859: obg_co=PFN._obgCO;
 15483  006870  0E00               	movlw	0
 15484  006872  B3BE               	btfsc	(_PFN+4)& (0+255),1,b
 15485  006874  0E01               	movlw	1
 15486  006876  6FAB               	movwf	NastawaCOCW@obg_co& (0+255),b
 15487                           
 15488                           ; BSR set to: 1
 15489                           ;main.c: 860: if(PFN.b_str_nco)
 15490  006878  ABBA               	btfss	_PFN& (0+255),5,b
 15491  00687A  D00F               	goto	l40308
 15492                           
 15493                           ; BSR set to: 1
 15494                           ;main.c: 861: {
 15495                           ;main.c: 862: PFN.b_str_nco=0;
 15496  00687C  9BBA               	bcf	_PFN& (0+255),5,b
 15497                           
 15498                           ; BSR set to: 1
 15499                           ;main.c: 863: EndNst();
 15500  00687E  EC1D  F05B         	call	_EndNst	;wreg free
 15501                           
 15502                           ; BSR set to: 1
 15503                           ;main.c: 864: if(PFN._ofnserw||PFN._set_fnserw)
 15504  006882  BFBD               	btfsc	(_PFN+3)& (0+255),7,b
 15505  006884  D002               	goto	l753
 15506                           
 15507                           ; BSR set to: 1
 15508  006886  A9BB               	btfss	(_PFN+1)& (0+255),4,b
 15509  006888  D005               	goto	l40306
 15510  00688A                     l753:
 15511                           
 15512                           ; BSR set to: 1
 15513                           ;main.c: 865: {
 15514                           ;main.c: 866: PFN._set_nco=0;
 15515  00688A  9FBA               	bcf	_PFN& (0+255),7,b
 15516                           
 15517                           ;main.c: 867: PFN._str_nco=0;
 15518  00688C  97BA               	bcf	_PFN& (0+255),3,b
 15519                           
 15520                           ; BSR set to: 1
 15521                           ;main.c: 868: EndNst();
 15522  00688E  EC1D  F05B         	call	_EndNst	;wreg free
 15523                           
 15524                           ;main.c: 869: }
 15525  006892  D003               	goto	l40308
 15526  006894                     l40306:
 15527                           
 15528                           ; BSR set to: 1
 15529                           ;main.c: 870: else PrintNstCO(PFN.PPCO);
 15530  006894  51C7               	movf	(_PFN+13)& (0+255),w,b
 15531  006896  ECFD  F04C         	call	_PrintNstCO
 15532  00689A                     l40308:
 15533                           
 15534                           ; BSR set to: 1
 15535                           ;main.c: 871: }
 15536                           ;main.c: 873: if(PFN._set_nco||PFN._set_ncw||RTdS(9)>30)
 15537  00689A  AFBA               	btfss	_PFN& (0+255),7,b
 15538                           
 15539                           ; BSR set to: 1
 15540  00689C  B1BB               	btfsc	(_PFN+1)& (0+255),0,b
 15541  00689E  D008               	goto	l757
 15542                           
 15543                           ; BSR set to: 1
 15544  0068A0  0E09               	movlw	9
 15545  0068A2  ECD5  F057         	call	_RTdS
 15546  0068A6  0100               	movlb	0	; () banked
 15547  0068A8  6FFD               	movwf	??_NastawaCOCW& (0+255),b
 15548  0068AA  0E1F               	movlw	31
 15549  0068AC  5DFD               	subwf	??_NastawaCOCW& (0+255),w,b
 15550  0068AE  E303               	bnc	l755
 15551  0068B0                     l757:
 15552                           
 15553                           ;main.c: 874: {
 15554                           ;main.c: 875: PFN._str_nco=0;
 15555  0068B0  0101               	movlb	1	; () banked
 15556  0068B2  97BA               	bcf	_PFN& (0+255),3,b
 15557                           
 15558                           ;main.c: 876: PFN._str_ncw=0;
 15559  0068B4  99BA               	bcf	_PFN& (0+255),4,b
 15560  0068B6                     l755:
 15561                           
 15562                           ;main.c: 877: }
 15563                           ;main.c: 879: if(PFN._set_ncw)
 15564  0068B6  0101               	movlb	1	; () banked
 15565  0068B8  A1BB               	btfss	(_PFN+1)& (0+255),0,b
 15566  0068BA  D043               	goto	l40346
 15567                           
 15568                           ; BSR set to: 1
 15569                           ;main.c: 880: {
 15570                           ;main.c: 881: pcw=PFN.PCW;
 15571  0068BC  C1D6  F1AD         	movff	_PFN+28,NastawaCOCW@pcw
 15572                           
 15573                           ;main.c: 882: if(!PFN._mod_ncw&&!RdPrt(24)&&!RdPrt(25))
 15574  0068C0  B7BB               	btfsc	(_PFN+1)& (0+255),3,b
 15575  0068C2  D00A               	goto	l759
 15576                           
 15577                           ; BSR set to: 1
 15578  0068C4  0E18               	movlw	24
 15579  0068C6  EC84  F058         	call	_RdPrt
 15580  0068CA  E206               	bc	l759
 15581                           
 15582                           ; BSR set to: 0
 15583  0068CC  0E19               	movlw	25
 15584  0068CE  EC84  F058         	call	_RdPrt
 15585  0068D2  E202               	bc	l759
 15586                           
 15587                           ; BSR set to: 0
 15588                           ;main.c: 883: {
 15589                           ;main.c: 884: PFN._mod_ncw=1;
 15590  0068D4  0101               	movlb	1	; () banked
 15591  0068D6  87BB               	bsf	(_PFN+1)& (0+255),3,b
 15592  0068D8                     l759:
 15593                           
 15594                           ;main.c: 885: }
 15595                           ;main.c: 886: if(PFN._mod_ncw) ReadParam(&PFN.PCW,&zmn,&zps,DtCW.minPCW,DtCW.maxPCW,0,1);
 15596  0068D8  0101               	movlb	1	; () banked
 15597  0068DA  A7BB               	btfss	(_PFN+1)& (0+255),3,b
 15598  0068DC  D010               	goto	l40324
 15599                           
 15600                           ; BSR set to: 1
 15601  0068DE  0E01               	movlw	high (_PFN+28)
 15602  0068E0  0103               	movlb	3	; () banked
 15603  0068E2  6F47               	movwf	(?_ReadParam+1)& (0+255),b
 15604  0068E4  0ED6               	movlw	low (_PFN+28)
 15605  0068E6  D870               	call	PL186	;call to abstracted procedure
 15606  0068E8  C0D4  F34B         	movff	_DtCW+5,?_ReadParam+5
 15607  0068EC  6B4C               	clrf	(?_ReadParam+6)& (0+255),b
 15608  0068EE  C0D5  F34D         	movff	_DtCW+6,?_ReadParam+7
 15609  0068F2  6B4E               	clrf	(?_ReadParam+8)& (0+255),b
 15610  0068F4  6B4F               	clrf	(?_ReadParam+9)& (0+255),b
 15611  0068F6  0E01               	movlw	1
 15612  0068F8  6F50               	movwf	(?_ReadParam+10)& (0+255),b
 15613  0068FA  ECFD  F01D         	call	_ReadParam	;wreg free
 15614  0068FE                     l40324:
 15615                           
 15616                           ;main.c: 887: if(!PFN.b_set_ncw)
 15617  0068FE  0101               	movlb	1	; () banked
 15618  006900  B5BB               	btfsc	(_PFN+1)& (0+255),2,b
 15619  006902  D007               	goto	l40334
 15620                           
 15621                           ; BSR set to: 1
 15622                           ;main.c: 888: {
 15623                           ;main.c: 889: PFN.b_set_ncw=1;
 15624  006904  85BB               	bsf	(_PFN+1)& (0+255),2,b
 15625                           
 15626                           ; BSR set to: 1
 15627                           ;main.c: 890: EndNst();
 15628  006906  EC1D  F05B         	call	_EndNst	;wreg free
 15629                           
 15630                           ; BSR set to: 1
 15631                           ;main.c: 891: zmn2=1;
 15632  00690A  0E01               	movlw	1
 15633  00690C  6FAE               	movwf	NastawaCOCW@zmn2& (0+255),b
 15634                           
 15635                           ; BSR set to: 1
 15636                           ;main.c: 892: pcw=PFN.PCW;
 15637  00690E  C1D6  F1AD         	movff	_PFN+28,NastawaCOCW@pcw
 15638  006912                     l40334:
 15639                           
 15640                           ; BSR set to: 1
 15641                           ;main.c: 893: }
 15642                           ;main.c: 894: if(zmn2||zmn)
 15643  006912  67AE               	tstfsz	NastawaCOCW@zmn2& (0+255),b
 15644  006914  D002               	goto	l40338
 15645                           
 15646                           ; BSR set to: 1
 15647  006916  5041               	movf	_zmn,w,c
 15648  006918  E014               	bz	l40346
 15649  00691A                     l40338:
 15650                           
 15651                           ; BSR set to: 1
 15652                           ;main.c: 895: {
 15653                           ;main.c: 896: PFN._newPCW=(pcw!=PFN.PCW);
 15654  00691A  51AD               	movf	NastawaCOCW@pcw& (0+255),w,b
 15655  00691C  19D6               	xorwf	(_PFN+28)& (0+255),w,b
 15656  00691E  11D7               	iorwf	(_PFN+29)& (0+255),w,b
 15657  006920  D85B               	call	PL198	;call to abstracted procedure
 15658  006922  47FD               	rlncf	??_NastawaCOCW& (0+255),f,b
 15659  006924  0101               	movlb	1	; () banked
 15660  006926  51BC               	movf	(_PFN+2)& (0+255),w,b
 15661  006928  0100               	movlb	0	; () banked
 15662  00692A  19FD               	xorwf	??_NastawaCOCW& (0+255),w,b
 15663  00692C  0BFB               	andlw	-5
 15664  00692E  19FD               	xorwf	??_NastawaCOCW& (0+255),w,b
 15665  006930  0101               	movlb	1	; () banked
 15666  006932  6FBC               	movwf	(_PFN+2)& (0+255),b
 15667                           
 15668                           ; BSR set to: 1
 15669                           ;main.c: 897: zmn2=0;
 15670  006934  6BAE               	clrf	NastawaCOCW@zmn2& (0+255),b
 15671                           
 15672                           ; BSR set to: 1
 15673                           ;main.c: 898: StartRTdS(9);
 15674  006936  0E09               	movlw	9
 15675  006938  ECC2  F057         	call	_StartRTdS
 15676                           
 15677                           ; BSR set to: 1
 15678                           ;main.c: 899: PrintNstCW(PFN.PCW);
 15679  00693C  51D6               	movf	(_PFN+28)& (0+255),w,b
 15680  00693E  ECC9  F04C         	call	_PrintNstCW
 15681  006942                     l40346:
 15682                           
 15683                           ; BSR set to: 1
 15684                           ;main.c: 900: }
 15685                           ;main.c: 901: }
 15686                           ;main.c: 903: if(PFN._set_nco)
 15687  006942  AFBA               	btfss	_PFN& (0+255),7,b
 15688  006944  D036               	goto	l40376
 15689                           
 15690                           ; BSR set to: 1
 15691                           ;main.c: 904: {
 15692                           ;main.c: 905: pcw=PFN.PCO;
 15693  006946  C1D4  F1AD         	movff	_PFN+26,NastawaCOCW@pcw
 15694                           
 15695                           ; BSR set to: 1
 15696                           ;main.c: 906: ReadParam(&PFN.PCO,&zmn,&zps,DtCO.minPCO,DtCO.maxPCO,0,1);
 15697  00694A  0E01               	movlw	high (_PFN+26)
 15698  00694C  0103               	movlb	3	; () banked
 15699  00694E  6F47               	movwf	(?_ReadParam+1)& (0+255),b
 15700  006950  0ED4               	movlw	low (_PFN+26)
 15701  006952  D83A               	call	PL186	;call to abstracted procedure
 15702  006954  C0E9  F34B         	movff	_DtCO+5,?_ReadParam+5
 15703  006958  6B4C               	clrf	(?_ReadParam+6)& (0+255),b
 15704  00695A  C0EA  F34D         	movff	_DtCO+6,?_ReadParam+7
 15705  00695E  6B4E               	clrf	(?_ReadParam+8)& (0+255),b
 15706  006960  6B4F               	clrf	(?_ReadParam+9)& (0+255),b
 15707  006962  0E01               	movlw	1
 15708  006964  6F50               	movwf	(?_ReadParam+10)& (0+255),b
 15709  006966  ECFD  F01D         	call	_ReadParam	;wreg free
 15710                           
 15711                           ;main.c: 907: if(!PFN.b_set_nco)
 15712  00696A  0101               	movlb	1	; () banked
 15713  00696C  B3BB               	btfsc	(_PFN+1)& (0+255),1,b
 15714  00696E  D008               	goto	l40364
 15715                           
 15716                           ; BSR set to: 1
 15717                           ;main.c: 908: {
 15718                           ;main.c: 909: PFN.b_set_nco=1;
 15719  006970  83BB               	bsf	(_PFN+1)& (0+255),1,b
 15720                           
 15721                           ; BSR set to: 1
 15722                           ;main.c: 910: EndNst();
 15723  006972  EC1D  F05B         	call	_EndNst	;wreg free
 15724                           
 15725                           ; BSR set to: 1
 15726                           ;main.c: 911: zmn2=1;
 15727  006976  0E01               	movlw	1
 15728  006978  6FAE               	movwf	NastawaCOCW@zmn2& (0+255),b
 15729                           
 15730                           ; BSR set to: 1
 15731                           ;main.c: 912: pcw=PFN.PCO;
 15732  00697A  C1D4  F1AD         	movff	_PFN+26,NastawaCOCW@pcw
 15733                           
 15734                           ; BSR set to: 1
 15735                           ;main.c: 913: PFN._newPCO=0;
 15736  00697E  93BC               	bcf	(_PFN+2)& (0+255),1,b
 15737  006980                     l40364:
 15738                           
 15739                           ; BSR set to: 1
 15740                           ;main.c: 914: }
 15741                           ;main.c: 915: if(zmn2||zmn)
 15742  006980  67AE               	tstfsz	NastawaCOCW@zmn2& (0+255),b
 15743  006982  D002               	goto	l769
 15744                           
 15745                           ; BSR set to: 1
 15746  006984  5041               	movf	_zmn,w,c
 15747  006986  E015               	bz	l40376
 15748  006988                     l769:
 15749                           
 15750                           ; BSR set to: 1
 15751                           ;main.c: 916: {
 15752                           ;main.c: 917: if(!PFN._newPCO) PFN._newPCO=(pcw!=PFN.PCO);
 15753  006988  B3BC               	btfsc	(_PFN+2)& (0+255),1,b
 15754  00698A  D00C               	goto	l40370
 15755                           
 15756                           ; BSR set to: 1
 15757  00698C  51AD               	movf	NastawaCOCW@pcw& (0+255),w,b
 15758  00698E  19D4               	xorwf	(_PFN+26)& (0+255),w,b
 15759  006990  11D5               	iorwf	(_PFN+27)& (0+255),w,b
 15760  006992  D822               	call	PL198	;call to abstracted procedure
 15761  006994  0101               	movlb	1	; () banked
 15762  006996  51BC               	movf	(_PFN+2)& (0+255),w,b
 15763  006998  0100               	movlb	0	; () banked
 15764  00699A  19FD               	xorwf	??_NastawaCOCW& (0+255),w,b
 15765  00699C  0BFD               	andlw	-3
 15766  00699E  19FD               	xorwf	??_NastawaCOCW& (0+255),w,b
 15767  0069A0  0101               	movlb	1	; () banked
 15768  0069A2  6FBC               	movwf	(_PFN+2)& (0+255),b
 15769  0069A4                     l40370:
 15770                           
 15771                           ; BSR set to: 1
 15772                           ;main.c: 918: zmn2=0;
 15773  0069A4  6BAE               	clrf	NastawaCOCW@zmn2& (0+255),b
 15774                           
 15775                           ; BSR set to: 1
 15776                           ;main.c: 919: StartRTdS(9);
 15777  0069A6  0E09               	movlw	9
 15778  0069A8  ECC2  F057         	call	_StartRTdS
 15779                           
 15780                           ; BSR set to: 1
 15781                           ;main.c: 920: PrintNstCO(PFN.PCO);
 15782  0069AC  51D4               	movf	(_PFN+26)& (0+255),w,b
 15783  0069AE  ECFD  F04C         	call	_PrintNstCO
 15784  0069B2                     l40376:
 15785                           
 15786                           ; BSR set to: 1
 15787                           ;main.c: 921: }
 15788                           ;main.c: 922: }
 15789                           ;main.c: 924: if(!PFN._set_ncw&&!PFN._set_nco)
 15790  0069B2  A1BB               	btfss	(_PFN+1)& (0+255),0,b
 15791                           
 15792                           ; BSR set to: 1
 15793  0069B4  BFBA               	btfsc	_PFN& (0+255),7,b
 15794  0069B6  0012               	return	
 15795                           
 15796                           ; BSR set to: 1
 15797                           ;main.c: 925: {
 15798                           ;main.c: 926: if(!PFN._str_ncw&&!PFN._str_nco) EndNst();
 15799  0069B8  A9BA               	btfss	_PFN& (0+255),4,b
 15800                           
 15801                           ; BSR set to: 1
 15802  0069BA  B7BA               	btfsc	_PFN& (0+255),3,b
 15803  0069BC  D002               	goto	l40386
 15804                           
 15805                           ; BSR set to: 1
 15806  0069BE  EC1D  F05B         	call	_EndNst	;wreg free
 15807  0069C2                     l40386:
 15808                           
 15809                           ; BSR set to: 1
 15810                           ;main.c: 927: PFN.b_set_ncw=0;
 15811  0069C2  95BB               	bcf	(_PFN+1)& (0+255),2,b
 15812                           
 15813                           ; BSR set to: 1
 15814                           ;main.c: 928: PFN.b_set_nco=0;
 15815  0069C4  93BB               	bcf	(_PFN+1)& (0+255),1,b
 15816                           
 15817                           ; BSR set to: 1
 15818  0069C6  0012               	return	
 15819  0069C8                     __end_of_NastawaCOCW:
 15820                           	opt stack 0
 15821  0069C8                     PL186:
 15822                           	opt stack 21
 15823  0069C8  6F46               	movwf	?_ReadParam& (0+255),b
 15824  0069CA  0E41               	movlw	low _zmn
 15825  0069CC  6F48               	movwf	(?_ReadParam+2)& (0+255),b
 15826  0069CE  0E01               	movlw	high _zps
 15827  0069D0  6F4A               	movwf	(?_ReadParam+4)& (0+255),b
 15828  0069D2  0EFC               	movlw	low _zps
 15829  0069D4  6F49               	movwf	(?_ReadParam+3)& (0+255),b
 15830  0069D6  0012               	return	
 15831  0069D8                     __end_ofPL186:
 15832                           	opt stack 0
 15833  0069D8                     PL198:
 15834                           	opt stack 21
 15835  0069D8  0E01               	movlw	1
 15836  0069DA  B4D8               	btfsc	status,2,c
 15837  0069DC  0E00               	movlw	0
 15838  0069DE  0100               	movlb	0	; () banked
 15839  0069E0  6FFD               	movwf	??_NastawaCOCW& (0+255),b
 15840  0069E2  47FD               	rlncf	??_NastawaCOCW& (0+255),f,b
 15841  0069E4  0012               	return	
 15842  0069E6                     __end_ofPL198:
 15843                           	opt stack 0
 15844                           tblptru	equ	0xFF8
 15845                           tblptrh	equ	0xFF7
 15846                           tblptrl	equ	0xFF6
 15847                           tablat	equ	0xFF5
 15848                           prodh	equ	0xFF4
 15849                           prodl	equ	0xFF3
 15850                           intcon	equ	0xFF2
 15851                           postinc0	equ	0xFEE
 15852                           wreg	equ	0xFE8
 15853                           indf1	equ	0xFE7
 15854                           postinc1	equ	0xFE6
 15855                           postdec1	equ	0xFE5
 15856                           fsr1h	equ	0xFE2
 15857                           fsr1l	equ	0xFE1
 15858                           indf2	equ	0xFDF
 15859                           postinc2	equ	0xFDE
 15860                           postdec2	equ	0xFDD
 15861                           fsr2h	equ	0xFDA
 15862                           fsr2l	equ	0xFD9
 15863                           status	equ	0xFD8
 15864                           
 15865 ;; *************** function _EndNst *****************
 15866 ;; Defined at:
 15867 ;;		line 176 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 15868 ;; Parameters:    Size  Location     Type
 15869 ;;		None
 15870 ;; Auto vars:     Size  Location     Type
 15871 ;;		None
 15872 ;; Return value:  Size  Location     Type
 15873 ;;		None               void
 15874 ;; Registers used:
 15875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15876 ;; Tracked objects:
 15877 ;;		On entry : F/1
 15878 ;;		On exit  : F/1
 15879 ;;		Unchanged: 0/0
 15880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15885 ;;Total ram usage:        0 bytes
 15886 ;; Hardware stack levels used:    1
 15887 ;; Hardware stack levels required when called:    5
 15888 ;; This function calls:
 15889 ;;		_ResetKol
 15890 ;; This function is called by:
 15891 ;;		_NastawaCOCW
 15892 ;; This function uses a non-reentrant model
 15893 ;;
 15894                           
 15895                           	psect	text45
 15896  00B63A                     __ptext45:
 15897                           	opt stack 0
 15898  00B63A                     _EndNst:
 15899                           	opt stack 23
 15900                           
 15901                           ; BSR set to: 1
 15902                           ;print.c: 177: ResetKol(2);
 15903                           
 15904                           ; BSR set to: 1
 15905  00B63A  0E02               	movlw	2
 15906  00B63C  EFA4  F058         	goto	_ResetKol
 15907  00B640                     __end_of_EndNst:
 15908                           	opt stack 0
 15909                           tblptru	equ	0xFF8
 15910                           tblptrh	equ	0xFF7
 15911                           tblptrl	equ	0xFF6
 15912                           tablat	equ	0xFF5
 15913                           prodh	equ	0xFF4
 15914                           prodl	equ	0xFF3
 15915                           intcon	equ	0xFF2
 15916                           postinc0	equ	0xFEE
 15917                           wreg	equ	0xFE8
 15918                           indf1	equ	0xFE7
 15919                           postinc1	equ	0xFE6
 15920                           postdec1	equ	0xFE5
 15921                           fsr1h	equ	0xFE2
 15922                           fsr1l	equ	0xFE1
 15923                           indf2	equ	0xFDF
 15924                           postinc2	equ	0xFDE
 15925                           postdec2	equ	0xFDD
 15926                           fsr2h	equ	0xFDA
 15927                           fsr2l	equ	0xFD9
 15928                           status	equ	0xFD8
 15929                           
 15930 ;; *************** function _PrintNstCW *****************
 15931 ;; Defined at:
 15932 ;;		line 149 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 15933 ;; Parameters:    Size  Location     Type
 15934 ;;  nst             1    wreg     const unsigned char 
 15935 ;; Auto vars:     Size  Location     Type
 15936 ;;  nst             1   36[COMRAM] const unsigned char 
 15937 ;; Return value:  Size  Location     Type
 15938 ;;		None               void
 15939 ;; Registers used:
 15940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15941 ;; Tracked objects:
 15942 ;;		On entry : F/1
 15943 ;;		On exit  : F/1
 15944 ;;		Unchanged: 0/0
 15945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15950 ;;Total ram usage:        1 bytes
 15951 ;; Hardware stack levels used:    1
 15952 ;; Hardware stack levels required when called:    5
 15953 ;; This function calls:
 15954 ;;		_SetData
 15955 ;;		_SetStatus
 15956 ;;		_RestartKol
 15957 ;; This function is called by:
 15958 ;;		_NastawaCOCW
 15959 ;; This function uses a non-reentrant model
 15960 ;;
 15961                           
 15962                           	psect	text46
 15963  009992                     __ptext46:
 15964                           	opt stack 0
 15965  009992                     _PrintNstCW:
 15966                           	opt stack 23
 15967                           
 15968                           ; BSR set to: 1
 15969                           ;PrintNstCW@nst stored from wreg
 15970  009992  CFE8 F025          	movff	wreg,PrintNstCW@nst
 15971                           
 15972                           ; BSR set to: 1
 15973                           ;print.c: 150: SetData(&DWD[3],0,nst);
 15974  009996  0102               	movlb	2	; () banked
 15975  009998  0E02               	movlw	high (_DWD+12)
 15976  00999A  6E1F               	movwf	?_SetData+1,c
 15977  00999C  0EC7               	movlw	low (_DWD+12)
 15978  00999E  6E1E               	movwf	?_SetData,c
 15979  0099A0  0E00               	movlw	0
 15980  0099A2  6A20               	clrf	?_SetData+2,c
 15981  0099A4  C025  F021         	movff	PrintNstCW@nst,?_SetData+3
 15982  0099A8  EC42  F058         	call	_SetData	;wreg free
 15983                           
 15984                           ;print.c: 151: SetData(&DWD[4],0,nst);
 15985  0099AC  0E02               	movlw	high (_DWD+16)
 15986  0099AE  6E1F               	movwf	?_SetData+1,c
 15987  0099B0  0ECB               	movlw	low (_DWD+16)
 15988  0099B2  6E1E               	movwf	?_SetData,c
 15989  0099B4  0E00               	movlw	0
 15990  0099B6  6A20               	clrf	?_SetData+2,c
 15991  0099B8  C025  F021         	movff	PrintNstCW@nst,?_SetData+3
 15992  0099BC  EC42  F058         	call	_SetData	;wreg free
 15993                           
 15994                           ;print.c: 152: SetStatus(&DWD[3],0b0100000000000000|0b0000100000000000|0b000000000010000
      +                          0|0b00001000,0b1111111111111111);
 15995  0099C0  0E02               	movlw	high (_DWD+12)
 15996  0099C2  6E1F               	movwf	?_SetStatus+1,c
 15997  0099C4  0EC7               	movlw	low (_DWD+12)
 15998  0099C6  6E1E               	movwf	?_SetStatus,c
 15999  0099C8  0E48               	movlw	72
 16000  0099CA  6E21               	movwf	?_SetStatus+3,c
 16001  0099CC  0E28               	movlw	40
 16002  0099CE  6E20               	movwf	?_SetStatus+2,c
 16003  0099D0  0EFF               	movlw	255
 16004  0099D2  6823               	setf	?_SetStatus+5,c
 16005  0099D4  6822               	setf	?_SetStatus+4,c
 16006  0099D6  ECF3  F034         	call	_SetStatus	;wreg free
 16007                           
 16008                           ;print.c: 153: SetStatus(&DWD[4],0b0100000000000000|0b0000100000000000|0b000000000001000
      +                          0|0b00001000,0b1111111111111111);
 16009  0099DA  0E02               	movlw	high (_DWD+16)
 16010  0099DC  6E1F               	movwf	?_SetStatus+1,c
 16011  0099DE  0ECB               	movlw	low (_DWD+16)
 16012  0099E0  6E1E               	movwf	?_SetStatus,c
 16013  0099E2  0E48               	movlw	72
 16014  0099E4  6E21               	movwf	?_SetStatus+3,c
 16015  0099E6  0E18               	movlw	24
 16016  0099E8  6E20               	movwf	?_SetStatus+2,c
 16017  0099EA  0EFF               	movlw	255
 16018  0099EC  6823               	setf	?_SetStatus+5,c
 16019  0099EE  6822               	setf	?_SetStatus+4,c
 16020  0099F0  ECF3  F034         	call	_SetStatus	;wreg free
 16021                           
 16022                           ;print.c: 154: RestartKol(2);
 16023  0099F4  0E02               	movlw	2
 16024  0099F6  EFB4  F058         	goto	_RestartKol
 16025  0099FA                     __end_of_PrintNstCW:
 16026                           	opt stack 0
 16027                           tblptru	equ	0xFF8
 16028                           tblptrh	equ	0xFF7
 16029                           tblptrl	equ	0xFF6
 16030                           tablat	equ	0xFF5
 16031                           prodh	equ	0xFF4
 16032                           prodl	equ	0xFF3
 16033                           intcon	equ	0xFF2
 16034                           postinc0	equ	0xFEE
 16035                           wreg	equ	0xFE8
 16036                           indf1	equ	0xFE7
 16037                           postinc1	equ	0xFE6
 16038                           postdec1	equ	0xFE5
 16039                           fsr1h	equ	0xFE2
 16040                           fsr1l	equ	0xFE1
 16041                           indf2	equ	0xFDF
 16042                           postinc2	equ	0xFDE
 16043                           postdec2	equ	0xFDD
 16044                           fsr2h	equ	0xFDA
 16045                           fsr2l	equ	0xFD9
 16046                           status	equ	0xFD8
 16047                           
 16048 ;; *************** function _PrintNstCO *****************
 16049 ;; Defined at:
 16050 ;;		line 158 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 16051 ;; Parameters:    Size  Location     Type
 16052 ;;  nst             1    wreg     const unsigned char 
 16053 ;; Auto vars:     Size  Location     Type
 16054 ;;  nst             1   36[COMRAM] const unsigned char 
 16055 ;; Return value:  Size  Location     Type
 16056 ;;		None               void
 16057 ;; Registers used:
 16058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16059 ;; Tracked objects:
 16060 ;;		On entry : F/1
 16061 ;;		On exit  : F/1
 16062 ;;		Unchanged: 0/0
 16063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16068 ;;Total ram usage:        1 bytes
 16069 ;; Hardware stack levels used:    1
 16070 ;; Hardware stack levels required when called:    5
 16071 ;; This function calls:
 16072 ;;		_SetData
 16073 ;;		_SetStatus
 16074 ;;		_RestartKol
 16075 ;; This function is called by:
 16076 ;;		_NastawaCOCW
 16077 ;; This function uses a non-reentrant model
 16078 ;;
 16079                           
 16080                           	psect	text47
 16081  0099FA                     __ptext47:
 16082                           	opt stack 0
 16083  0099FA                     _PrintNstCO:
 16084                           	opt stack 23
 16085                           
 16086                           ; BSR set to: 1
 16087                           ;PrintNstCO@nst stored from wreg
 16088  0099FA  CFE8 F025          	movff	wreg,PrintNstCO@nst
 16089                           
 16090                           ; BSR set to: 1
 16091                           ;print.c: 159: SetData(&DWD[3],0,nst);
 16092  0099FE  0102               	movlb	2	; () banked
 16093  009A00  0E02               	movlw	high (_DWD+12)
 16094  009A02  6E1F               	movwf	?_SetData+1,c
 16095  009A04  0EC7               	movlw	low (_DWD+12)
 16096  009A06  6E1E               	movwf	?_SetData,c
 16097  009A08  0E00               	movlw	0
 16098  009A0A  6A20               	clrf	?_SetData+2,c
 16099  009A0C  C025  F021         	movff	PrintNstCO@nst,?_SetData+3
 16100  009A10  EC42  F058         	call	_SetData	;wreg free
 16101                           
 16102                           ;print.c: 160: SetData(&DWD[4],0,nst);
 16103  009A14  0E02               	movlw	high (_DWD+16)
 16104  009A16  6E1F               	movwf	?_SetData+1,c
 16105  009A18  0ECB               	movlw	low (_DWD+16)
 16106  009A1A  6E1E               	movwf	?_SetData,c
 16107  009A1C  0E00               	movlw	0
 16108  009A1E  6A20               	clrf	?_SetData+2,c
 16109  009A20  C025  F021         	movff	PrintNstCO@nst,?_SetData+3
 16110  009A24  EC42  F058         	call	_SetData	;wreg free
 16111                           
 16112                           ;print.c: 161: SetStatus(&DWD[3],0b0100000000000000|0b0000000000100000|0b00000001,0b1111
      +                          111111111111);
 16113  009A28  0E02               	movlw	high (_DWD+12)
 16114  009A2A  6E1F               	movwf	?_SetStatus+1,c
 16115  009A2C  0EC7               	movlw	low (_DWD+12)
 16116  009A2E  6E1E               	movwf	?_SetStatus,c
 16117  009A30  0E40               	movlw	64
 16118  009A32  6E21               	movwf	?_SetStatus+3,c
 16119  009A34  0E21               	movlw	33
 16120  009A36  6E20               	movwf	?_SetStatus+2,c
 16121  009A38  0EFF               	movlw	255
 16122  009A3A  6823               	setf	?_SetStatus+5,c
 16123  009A3C  6822               	setf	?_SetStatus+4,c
 16124  009A3E  ECF3  F034         	call	_SetStatus	;wreg free
 16125                           
 16126                           ;print.c: 162: SetStatus(&DWD[4],0b0100000000000000|0b0000000000010000|0b00000001,0b1111
      +                          111111111111);
 16127  009A42  0E02               	movlw	high (_DWD+16)
 16128  009A44  6E1F               	movwf	?_SetStatus+1,c
 16129  009A46  0ECB               	movlw	low (_DWD+16)
 16130  009A48  6E1E               	movwf	?_SetStatus,c
 16131  009A4A  0E40               	movlw	64
 16132  009A4C  6E21               	movwf	?_SetStatus+3,c
 16133  009A4E  0E11               	movlw	17
 16134  009A50  6E20               	movwf	?_SetStatus+2,c
 16135  009A52  0EFF               	movlw	255
 16136  009A54  6823               	setf	?_SetStatus+5,c
 16137  009A56  6822               	setf	?_SetStatus+4,c
 16138  009A58  ECF3  F034         	call	_SetStatus	;wreg free
 16139                           
 16140                           ;print.c: 163: RestartKol(2);
 16141  009A5C  0E02               	movlw	2
 16142  009A5E  EFB4  F058         	goto	_RestartKol
 16143  009A62                     __end_of_PrintNstCO:
 16144                           	opt stack 0
 16145                           tblptru	equ	0xFF8
 16146                           tblptrh	equ	0xFF7
 16147                           tblptrl	equ	0xFF6
 16148                           tablat	equ	0xFF5
 16149                           prodh	equ	0xFF4
 16150                           prodl	equ	0xFF3
 16151                           intcon	equ	0xFF2
 16152                           postinc0	equ	0xFEE
 16153                           wreg	equ	0xFE8
 16154                           indf1	equ	0xFE7
 16155                           postinc1	equ	0xFE6
 16156                           postdec1	equ	0xFE5
 16157                           fsr1h	equ	0xFE2
 16158                           fsr1l	equ	0xFE1
 16159                           indf2	equ	0xFDF
 16160                           postinc2	equ	0xFDE
 16161                           postdec2	equ	0xFDD
 16162                           fsr2h	equ	0xFDA
 16163                           fsr2l	equ	0xFD9
 16164                           status	equ	0xFD8
 16165                           
 16166 ;; *************** function _ReadParam *****************
 16167 ;; Defined at:
 16168 ;;		line 45 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konsola.c"
 16169 ;; Parameters:    Size  Location     Type
 16170 ;;  param           2    0[BANK3 ] PTR unsigned int 
 16171 ;;		 -> PFN(35), 
 16172 ;;  zmiana          1    2[BANK3 ] PTR unsigned char 
 16173 ;;		 -> zmn(1), 
 16174 ;;  zapis           2    3[BANK3 ] PTR unsigned char 
 16175 ;;		 -> zps(1), 
 16176 ;;  min             2    5[BANK3 ] unsigned int 
 16177 ;;  max             2    7[BANK3 ] unsigned int 
 16178 ;;  rckl            1    9[BANK3 ] unsigned char 
 16179 ;;  fst             1   10[BANK3 ] unsigned char 
 16180 ;; Auto vars:     Size  Location     Type
 16181 ;;  ovd             1   15[BANK3 ] unsigned char 
 16182 ;;  ovi             1   14[BANK3 ] unsigned char 
 16183 ;;  stp             1   13[BANK3 ] unsigned char 
 16184 ;; Return value:  Size  Location     Type
 16185 ;;		None               void
 16186 ;; Registers used:
 16187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16188 ;; Tracked objects:
 16189 ;;		On entry : F/3
 16190 ;;		On exit  : C/0
 16191 ;;		Unchanged: 0/0
 16192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16193 ;;      Params:         0       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16194 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16195 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16196 ;;      Totals:         0       4       0       0      16       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16197 ;;Total ram usage:       20 bytes
 16198 ;; Hardware stack levels used:    1
 16199 ;; Hardware stack levels required when called:    7
 16200 ;; This function calls:
 16201 ;;		_RdPrt
 16202 ;;		_ReadDataXONLID
 16203 ;;		_RTdS
 16204 ;;		_StartRTdS
 16205 ;; This function is called by:
 16206 ;;		_NastawaCOCW
 16207 ;; This function uses a non-reentrant model
 16208 ;;
 16209                           
 16210                           	psect	text48
 16211  003BFA                     __ptext48:
 16212                           	opt stack 0
 16213  003BFA                     _ReadParam:
 16214                           	opt stack 21
 16215                           
 16216                           ; BSR set to: 3
 16217                           ;konsola.c: 46: static unsigned char pnst;
 16218                           ;konsola.c: 47: unsigned char stp,ovi,ovd;
 16219                           ;konsola.c: 49: ovi=0;
 16220                           
 16221                           ; BSR set to: 1
 16222  003BFA  6B54               	clrf	ReadParam@ovi& (0+255),b
 16223                           
 16224                           ;konsola.c: 50: ovd=0;
 16225  003BFC  6B55               	clrf	ReadParam@ovd& (0+255),b
 16226                           
 16227                           ; BSR set to: 3
 16228                           ;konsola.c: 51: if(*param<min) *param=min;
 16229  003BFE  C346  FFD9         	movff	ReadParam@param,fsr2l
 16230  003C02  C347  FFDA         	movff	ReadParam@param+1,fsr2h
 16231  003C06  CFDE F0F9          	movff	postinc2,??_ReadParam
 16232  003C0A  CFDD F0FA          	movff	postdec2,??_ReadParam+1
 16233  003C0E  514B               	movf	ReadParam@min& (0+255),w,b
 16234  003C10  0100               	movlb	0	; () banked
 16235  003C12  5DF9               	subwf	??_ReadParam& (0+255),w,b
 16236  003C14  0103               	movlb	3	; () banked
 16237  003C16  514C               	movf	(ReadParam@min+1)& (0+255),w,b
 16238  003C18  0100               	movlb	0	; () banked
 16239  003C1A  59FA               	subwfb	(??_ReadParam+1)& (0+255),w,b
 16240  003C1C  E208               	bc	l40416
 16241                           
 16242                           ; BSR set to: 0
 16243  003C1E  C346  FFD9         	movff	ReadParam@param,fsr2l
 16244  003C22  C347  FFDA         	movff	ReadParam@param+1,fsr2h
 16245  003C26  C34B  FFDE         	movff	ReadParam@min,postinc2
 16246  003C2A  C34C  FFDD         	movff	ReadParam@min+1,postdec2
 16247  003C2E                     l40416:
 16248                           
 16249                           ;konsola.c: 52: if(*param>max) *param=max;
 16250  003C2E  C346  FFD9         	movff	ReadParam@param,fsr2l
 16251  003C32  C347  FFDA         	movff	ReadParam@param+1,fsr2h
 16252  003C36  CFDE F0F9          	movff	postinc2,??_ReadParam
 16253  003C3A  CFDD F0FA          	movff	postdec2,??_ReadParam+1
 16254  003C3E  0100               	movlb	0	; () banked
 16255  003C40  51F9               	movf	??_ReadParam& (0+255),w,b
 16256  003C42  0103               	movlb	3	; () banked
 16257  003C44  5D4D               	subwf	ReadParam@max& (0+255),w,b
 16258  003C46  0100               	movlb	0	; () banked
 16259  003C48  51FA               	movf	(??_ReadParam+1)& (0+255),w,b
 16260  003C4A  0103               	movlb	3	; () banked
 16261  003C4C  594E               	subwfb	(ReadParam@max+1)& (0+255),w,b
 16262  003C4E  E208               	bc	l40420
 16263                           
 16264                           ; BSR set to: 3
 16265  003C50  C346  FFD9         	movff	ReadParam@param,fsr2l
 16266  003C54  C347  FFDA         	movff	ReadParam@param+1,fsr2h
 16267  003C58  C34D  FFDE         	movff	ReadParam@max,postinc2
 16268  003C5C  C34E  FFDD         	movff	ReadParam@max+1,postdec2
 16269  003C60                     l40420:
 16270                           
 16271                           ; BSR set to: 3
 16272                           ;konsola.c: 53: if((max-min)>99) stp=5;
 16273  003C60  C34D  F0F9         	movff	ReadParam@max,??_ReadParam
 16274  003C64  C34E  F0FA         	movff	ReadParam@max+1,??_ReadParam+1
 16275  003C68  514B               	movf	ReadParam@min& (0+255),w,b
 16276  003C6A  0100               	movlb	0	; () banked
 16277  003C6C  5FF9               	subwf	??_ReadParam& (0+255),f,b
 16278  003C6E  0103               	movlb	3	; () banked
 16279  003C70  514C               	movf	(ReadParam@min+1)& (0+255),w,b
 16280  003C72  0100               	movlb	0	; () banked
 16281  003C74  5BFA               	subwfb	(??_ReadParam+1)& (0+255),f,b
 16282  003C76  0E64               	movlw	100
 16283  003C78  5DF9               	subwf	??_ReadParam& (0+255),w,b
 16284  003C7A  0E00               	movlw	0
 16285  003C7C  59FA               	subwfb	(??_ReadParam+1)& (0+255),w,b
 16286                           
 16287                           ; BSR set to: 0
 16288  003C7E  0E05               	movlw	5
 16289  003C80  A0D8               	btfss	status,0,c
 16290                           
 16291                           ; BSR set to: 0
 16292                           ;konsola.c: 54: else stp=1;
 16293  003C82  0E01               	movlw	1
 16294  003C84  0103               	movlb	3	; () banked
 16295  003C86  6F53               	movwf	ReadParam@stp& (0+255),b
 16296                           
 16297                           ; BSR set to: 3
 16298                           ;konsola.c: 55: if(!(RdPrt(25)&&RdPrt(24)))
 16299  003C88  0E19               	movlw	25
 16300  003C8A  EC84  F058         	call	_RdPrt
 16301  003C8E  E305               	bnc	l40430
 16302                           
 16303                           ; BSR set to: 0
 16304  003C90  0E18               	movlw	24
 16305  003C92  EC84  F058         	call	_RdPrt
 16306  003C96  E301 D0EC          	bc	l40502
 16307  003C9A                     l40430:
 16308                           
 16309                           ; BSR set to: 0
 16310                           ;konsola.c: 56: {
 16311                           ;konsola.c: 57: if(!RdPrt(25))
 16312  003C9A  0E19               	movlw	25
 16313  003C9C  EC84  F058         	call	_RdPrt
 16314  003CA0  E24B               	bc	l40448
 16315                           
 16316                           ; BSR set to: 0
 16317                           ;konsola.c: 58: {
 16318                           ;konsola.c: 59: ReadDataXONLID(RdPrt(24),&xxky[2],param,&ovi,1,min,max,1,stp,fst);
 16319  003CA2  0102               	movlb	2	; () banked
 16320  003CA4  0E02               	movlw	high (_xxky+10)
 16321  003CA6  6FF1               	movwf	(?_ReadDataXONLID+1)& (0+255),b
 16322  003CA8  0EA2               	movlw	low (_xxky+10)
 16323  003CAA  6FF0               	movwf	?_ReadDataXONLID& (0+255),b
 16324  003CAC  C346  F2F2         	movff	ReadParam@param,?_ReadDataXONLID+2
 16325  003CB0  C347  F2F3         	movff	ReadParam@param+1,?_ReadDataXONLID+3
 16326  003CB4  0E03               	movlw	high ReadParam@ovi
 16327  003CB6  6FF5               	movwf	(?_ReadDataXONLID+5)& (0+255),b
 16328  003CB8  0E54               	movlw	low ReadParam@ovi
 16329  003CBA  6FF4               	movwf	(?_ReadDataXONLID+4)& (0+255),b
 16330  003CBC  0E01               	movlw	1
 16331  003CBE  6FF6               	movwf	(?_ReadDataXONLID+6)& (0+255),b
 16332  003CC0  C34B  F2F7         	movff	ReadParam@min,?_ReadDataXONLID+7
 16333  003CC4  C34C  F2F8         	movff	ReadParam@min+1,?_ReadDataXONLID+8
 16334  003CC8  C34D  F2F9         	movff	ReadParam@max,?_ReadDataXONLID+9
 16335  003CCC  C34E  F2FA         	movff	ReadParam@max+1,?_ReadDataXONLID+10
 16336  003CD0  6FFB               	movwf	(?_ReadDataXONLID+11)& (0+255),b
 16337  003CD2  C353  F2FC         	movff	ReadParam@stp,?_ReadDataXONLID+12
 16338  003CD6  C350  F2FD         	movff	ReadParam@fst,?_ReadDataXONLID+13
 16339  003CDA  0E18               	movlw	24
 16340  003CDC  EC84  F058         	call	_RdPrt
 16341  003CE0  0E01               	movlw	1
 16342  003CE2  A0D8               	btfss	status,0,c
 16343  003CE4  0E00               	movlw	0
 16344  003CE6  0102               	movlb	2	; () banked
 16345  003CE8  EC02  F014         	call	_ReadDataXONLID
 16346                           
 16347                           ;konsola.c: 60: if(rckl&&ovi) *param=min;
 16348  003CEC  0103               	movlb	3	; () banked
 16349  003CEE  514F               	movf	ReadParam@rckl& (0+255),w,b
 16350  003CF0  E00A               	bz	l40440
 16351                           
 16352                           ; BSR set to: 3
 16353  003CF2  5154               	movf	ReadParam@ovi& (0+255),w,b
 16354  003CF4  E008               	bz	l40440
 16355                           
 16356                           ; BSR set to: 3
 16357  003CF6  C346  FFD9         	movff	ReadParam@param,fsr2l
 16358  003CFA  C347  FFDA         	movff	ReadParam@param+1,fsr2h
 16359  003CFE  C34B  FFDE         	movff	ReadParam@min,postinc2
 16360  003D02  C34C  FFDD         	movff	ReadParam@min+1,postdec2
 16361  003D06                     l40440:
 16362                           
 16363                           ; BSR set to: 3
 16364                           ;konsola.c: 61: if(!rckl&&RdPrt(24)&&(*param==max)) *zmiana=1;
 16365  003D06  674F               	tstfsz	ReadParam@rckl& (0+255),b
 16366  003D08  D060               	goto	l40466
 16367                           
 16368                           ; BSR set to: 3
 16369  003D0A  0E18               	movlw	24
 16370  003D0C  EC84  F058         	call	_RdPrt
 16371  003D10  E35C               	bnc	l40466
 16372                           
 16373                           ; BSR set to: 0
 16374  003D12  C346  FFD9         	movff	ReadParam@param,fsr2l
 16375  003D16  C347  FFDA         	movff	ReadParam@param+1,fsr2h
 16376  003D1A  0103               	movlb	3	; () banked
 16377  003D1C  52DE               	movf	postinc2,f,c
 16378  003D1E  514E               	movf	(ReadParam@max+1)& (0+255),w,b
 16379  003D20  18DD               	xorwf	postdec2,w,c
 16380  003D22  C34D  FFE8         	movff	ReadParam@max,wreg
 16381  003D26  B4D8               	btfsc	status,2,c
 16382  003D28  18DF               	xorwf	indf2,w,c
 16383  003D2A  E14F               	bnz	l40466
 16384  003D2C                     l40446:
 16385                           
 16386                           ; BSR set to: 3
 16387  003D2C  5148               	movf	ReadParam@zmiana& (0+255),w,b
 16388  003D2E  6ED9               	movwf	fsr2l,c
 16389  003D30  6ADA               	clrf	fsr2h,c
 16390  003D32  0E01               	movlw	1
 16391  003D34  6EDF               	movwf	indf2,c
 16392  003D36  D049               	goto	l40466
 16393  003D38                     l40448:
 16394                           
 16395                           ; BSR set to: 0
 16396                           ;konsola.c: 63: else
 16397                           ;konsola.c: 64: if(!RdPrt(24))
 16398  003D38  0E18               	movlw	24
 16399  003D3A  EC84  F058         	call	_RdPrt
 16400  003D3E  E245               	bc	l40466
 16401                           
 16402                           ; BSR set to: 0
 16403                           ;konsola.c: 65: {
 16404                           ;konsola.c: 66: ReadDataXONLID(RdPrt(25),&xxky[3],param,&ovd,0,min,max,1,stp,fst);
 16405  003D40  0102               	movlb	2	; () banked
 16406  003D42  0E02               	movlw	high (_xxky+15)
 16407  003D44  6FF1               	movwf	(?_ReadDataXONLID+1)& (0+255),b
 16408  003D46  0EA7               	movlw	low (_xxky+15)
 16409  003D48  6FF0               	movwf	?_ReadDataXONLID& (0+255),b
 16410  003D4A  C346  F2F2         	movff	ReadParam@param,?_ReadDataXONLID+2
 16411  003D4E  C347  F2F3         	movff	ReadParam@param+1,?_ReadDataXONLID+3
 16412  003D52  0E03               	movlw	high ReadParam@ovd
 16413  003D54  6FF5               	movwf	(?_ReadDataXONLID+5)& (0+255),b
 16414  003D56  0E55               	movlw	low ReadParam@ovd
 16415  003D58  6FF4               	movwf	(?_ReadDataXONLID+4)& (0+255),b
 16416  003D5A  6BF6               	clrf	(?_ReadDataXONLID+6)& (0+255),b
 16417  003D5C  C34B  F2F7         	movff	ReadParam@min,?_ReadDataXONLID+7
 16418  003D60  C34C  F2F8         	movff	ReadParam@min+1,?_ReadDataXONLID+8
 16419  003D64  C34D  F2F9         	movff	ReadParam@max,?_ReadDataXONLID+9
 16420  003D68  C34E  F2FA         	movff	ReadParam@max+1,?_ReadDataXONLID+10
 16421  003D6C  0E01               	movlw	1
 16422  003D6E  6FFB               	movwf	(?_ReadDataXONLID+11)& (0+255),b
 16423  003D70  C353  F2FC         	movff	ReadParam@stp,?_ReadDataXONLID+12
 16424  003D74  C350  F2FD         	movff	ReadParam@fst,?_ReadDataXONLID+13
 16425  003D78  0E19               	movlw	25
 16426  003D7A  EC84  F058         	call	_RdPrt
 16427  003D7E  0E01               	movlw	1
 16428  003D80  A0D8               	btfss	status,0,c
 16429  003D82  0E00               	movlw	0
 16430  003D84  0102               	movlb	2	; () banked
 16431  003D86  EC02  F014         	call	_ReadDataXONLID
 16432                           
 16433                           ;konsola.c: 67: if(rckl&&ovd) *param=max;
 16434  003D8A  0103               	movlb	3	; () banked
 16435  003D8C  514F               	movf	ReadParam@rckl& (0+255),w,b
 16436  003D8E  E00A               	bz	l40458
 16437                           
 16438                           ; BSR set to: 3
 16439  003D90  5155               	movf	ReadParam@ovd& (0+255),w,b
 16440  003D92  E008               	bz	l40458
 16441                           
 16442                           ; BSR set to: 3
 16443  003D94  C346  FFD9         	movff	ReadParam@param,fsr2l
 16444  003D98  C347  FFDA         	movff	ReadParam@param+1,fsr2h
 16445  003D9C  C34D  FFDE         	movff	ReadParam@max,postinc2
 16446  003DA0  C34E  FFDD         	movff	ReadParam@max+1,postdec2
 16447  003DA4                     l40458:
 16448                           
 16449                           ; BSR set to: 3
 16450                           ;konsola.c: 68: if(!rckl&&RdPrt(25)&&(*param==min)) *zmiana=1;
 16451  003DA4  674F               	tstfsz	ReadParam@rckl& (0+255),b
 16452  003DA6  D011               	goto	l40466
 16453                           
 16454                           ; BSR set to: 3
 16455  003DA8  0E19               	movlw	25
 16456  003DAA  EC84  F058         	call	_RdPrt
 16457  003DAE  E30D               	bnc	l40466
 16458                           
 16459                           ; BSR set to: 0
 16460  003DB0  C346  FFD9         	movff	ReadParam@param,fsr2l
 16461  003DB4  C347  FFDA         	movff	ReadParam@param+1,fsr2h
 16462  003DB8  0103               	movlb	3	; () banked
 16463  003DBA  52DE               	movf	postinc2,f,c
 16464  003DBC  514C               	movf	(ReadParam@min+1)& (0+255),w,b
 16465  003DBE  18DD               	xorwf	postdec2,w,c
 16466  003DC0  C34B  FFE8         	movff	ReadParam@min,wreg
 16467  003DC4  B4D8               	btfsc	status,2,c
 16468  003DC6  18DF               	xorwf	indf2,w,c
 16469  003DC8  E0B1               	bz	l40446
 16470  003DCA                     l40466:
 16471                           
 16472                           ;konsola.c: 69: }
 16473                           ;konsola.c: 70: if(!RdPrt(25)&&!RdPrt(24))
 16474  003DCA  0E19               	movlw	25
 16475  003DCC  EC84  F058         	call	_RdPrt
 16476  003DD0  E211               	bc	l40474
 16477                           
 16478                           ; BSR set to: 0
 16479  003DD2  0E18               	movlw	24
 16480  003DD4  EC84  F058         	call	_RdPrt
 16481  003DD8  E20D               	bc	l40474
 16482                           
 16483                           ; BSR set to: 0
 16484                           ;konsola.c: 71: {
 16485                           ;konsola.c: 72: if(RTdS(6)>5) *zmiana=0;
 16486  003DDA  0E06               	movlw	6
 16487  003DDC  ECD5  F057         	call	_RTdS
 16488  003DE0  0100               	movlb	0	; () banked
 16489  003DE2  6FF9               	movwf	??_ReadParam& (0+255),b
 16490  003DE4  0E06               	movlw	6
 16491  003DE6  5DF9               	subwf	??_ReadParam& (0+255),w,b
 16492  003DE8  E305               	bnc	l40474
 16493                           
 16494                           ; BSR set to: 0
 16495  003DEA  0103               	movlb	3	; () banked
 16496  003DEC  5148               	movf	ReadParam@zmiana& (0+255),w,b
 16497  003DEE  6ED9               	movwf	fsr2l,c
 16498  003DF0  6ADA               	clrf	fsr2h,c
 16499  003DF2  6ADF               	clrf	indf2,c
 16500  003DF4                     l40474:
 16501                           
 16502                           ;konsola.c: 73: }
 16503                           ;konsola.c: 75: if(*param!=pnst)
 16504  003DF4  D845               	call	PL146	;call to abstracted procedure
 16505  003DF6  19F9               	xorwf	??_ReadParam& (0+255),w,b
 16506  003DF8  11FA               	iorwf	(??_ReadParam+1)& (0+255),w,b
 16507  003DFA  B4D8               	btfsc	status,2,c
 16508  003DFC  0012               	return	
 16509                           
 16510                           ; BSR set to: 0
 16511                           ;konsola.c: 76: {
 16512                           ;konsola.c: 77: if(rckl&&ovi) *zmiana=3;
 16513  003DFE  0103               	movlb	3	; () banked
 16514  003E00  514F               	movf	ReadParam@rckl& (0+255),w,b
 16515  003E02  E007               	bz	l40482
 16516                           
 16517                           ; BSR set to: 3
 16518  003E04  5154               	movf	ReadParam@ovi& (0+255),w,b
 16519  003E06  E005               	bz	l40482
 16520                           
 16521                           ; BSR set to: 3
 16522  003E08  5148               	movf	ReadParam@zmiana& (0+255),w,b
 16523  003E0A  6ED9               	movwf	fsr2l,c
 16524  003E0C  6ADA               	clrf	fsr2h,c
 16525  003E0E  0E03               	movlw	3
 16526  003E10  D008               	goto	L27
 16527  003E12                     l40482:
 16528                           
 16529                           ; BSR set to: 3
 16530                           ;konsola.c: 78: else
 16531                           ;konsola.c: 79: if(rckl&&ovd) *zmiana=2;
 16532  003E12  514F               	movf	ReadParam@rckl& (0+255),w,b
 16533  003E14  E008               	bz	l40488
 16534                           
 16535                           ; BSR set to: 3
 16536  003E16  5155               	movf	ReadParam@ovd& (0+255),w,b
 16537  003E18  E006               	bz	l40488
 16538                           
 16539                           ; BSR set to: 3
 16540  003E1A  5148               	movf	ReadParam@zmiana& (0+255),w,b
 16541  003E1C  6ED9               	movwf	fsr2l,c
 16542  003E1E  6ADA               	clrf	fsr2h,c
 16543  003E20  0E02               	movlw	2
 16544  003E22                     L27:
 16545  003E22  6EDF               	movwf	indf2,c
 16546  003E24  D015               	goto	l40496
 16547  003E26                     l40488:
 16548                           
 16549                           ; BSR set to: 3
 16550                           ;konsola.c: 80: else *zmiana=(pnst<*param)?3:2;
 16551  003E26  D82C               	call	PL146	;call to abstracted procedure
 16552  003E28  6FFB               	movwf	(??_ReadParam+2)& (0+255),b
 16553  003E2A  6BFC               	clrf	(??_ReadParam+3)& (0+255),b
 16554  003E2C  51F9               	movf	??_ReadParam& (0+255),w,b
 16555  003E2E  5DFB               	subwf	(??_ReadParam+2)& (0+255),w,b
 16556  003E30  51FA               	movf	(??_ReadParam+1)& (0+255),w,b
 16557  003E32  59FC               	subwfb	(??_ReadParam+3)& (0+255),w,b
 16558  003E34  E304               	bnc	l40492
 16559                           
 16560                           ; BSR set to: 0
 16561  003E36  0103               	movlb	3	; () banked
 16562  003E38  6B52               	clrf	(_ReadParam$5559+1)& (0+255),b
 16563  003E3A  0E02               	movlw	2
 16564  003E3C  D003               	goto	L28
 16565  003E3E                     l40492:
 16566                           
 16567                           ; BSR set to: 0
 16568  003E3E  0103               	movlb	3	; () banked
 16569  003E40  6B52               	clrf	(_ReadParam$5559+1)& (0+255),b
 16570  003E42  0E03               	movlw	3
 16571  003E44                     L28:
 16572  003E44  6F51               	movwf	_ReadParam$5559& (0+255),b
 16573                           
 16574                           ; BSR set to: 3
 16575  003E46  5148               	movf	ReadParam@zmiana& (0+255),w,b
 16576  003E48  6ED9               	movwf	fsr2l,c
 16577  003E4A  6ADA               	clrf	fsr2h,c
 16578  003E4C  C351  FFDF         	movff	_ReadParam$5559,indf2
 16579  003E50                     l40496:
 16580                           
 16581                           ; BSR set to: 3
 16582                           ;konsola.c: 81: pnst=*param;
 16583  003E50  C346  FFD9         	movff	ReadParam@param,fsr2l
 16584  003E54  C347  FFDA         	movff	ReadParam@param+1,fsr2h
 16585  003E58  50DF               	movf	indf2,w,c
 16586  003E5A  0101               	movlb	1	; () banked
 16587  003E5C  6FB4               	movwf	ReadParam@pnst& (0+255),b
 16588                           
 16589                           ; BSR set to: 1
 16590                           ;konsola.c: 82: StartRTdS(6);
 16591  003E5E  0E06               	movlw	6
 16592  003E60  ECC2  F057         	call	_StartRTdS
 16593                           
 16594                           ; BSR set to: 1
 16595                           ;konsola.c: 83: *zapis=1;
 16596  003E64  C349  FFD9         	movff	ReadParam@zapis,fsr2l
 16597  003E68  C34A  FFDA         	movff	ReadParam@zapis+1,fsr2h
 16598  003E6C  0E01               	movlw	1
 16599  003E6E  6EDF               	movwf	indf2,c
 16600  003E70  0C01               	retlw	1
 16601  003E72                     l40502:
 16602                           
 16603                           ; BSR set to: 0
 16604  003E72  0103               	movlb	3	; () banked
 16605  003E74  5148               	movf	ReadParam@zmiana& (0+255),w,b
 16606  003E76  6ED9               	movwf	fsr2l,c
 16607  003E78  6ADA               	clrf	fsr2h,c
 16608  003E7A  0E00               	movlw	0
 16609  003E7C  6EDF               	movwf	indf2,c
 16610  003E7E  0C00               	retlw	0
 16611  003E80                     __end_of_ReadParam:
 16612                           	opt stack 0
 16613  003E80                     PL146:
 16614                           	opt stack 21
 16615  003E80  C346  FFD9         	movff	ReadParam@param,fsr2l
 16616  003E84  C347  FFDA         	movff	ReadParam@param+1,fsr2h
 16617  003E88  CFDE F0F9          	movff	postinc2,??_ReadParam
 16618  003E8C  CFDD F0FA          	movff	postdec2,??_ReadParam+1
 16619  003E90  0101               	movlb	1	; () banked
 16620  003E92  51B4               	movf	ReadParam@pnst& (0+255),w,b
 16621  003E94  0100               	movlb	0	; () banked
 16622  003E96  0012               	return	
 16623  003E98                     __end_ofPL146:
 16624                           	opt stack 0
 16625                           tblptru	equ	0xFF8
 16626                           tblptrh	equ	0xFF7
 16627                           tblptrl	equ	0xFF6
 16628                           tablat	equ	0xFF5
 16629                           prodh	equ	0xFF4
 16630                           prodl	equ	0xFF3
 16631                           intcon	equ	0xFF2
 16632                           postinc0	equ	0xFEE
 16633                           wreg	equ	0xFE8
 16634                           indf1	equ	0xFE7
 16635                           postinc1	equ	0xFE6
 16636                           postdec1	equ	0xFE5
 16637                           fsr1h	equ	0xFE2
 16638                           fsr1l	equ	0xFE1
 16639                           indf2	equ	0xFDF
 16640                           postinc2	equ	0xFDE
 16641                           postdec2	equ	0xFDD
 16642                           fsr2h	equ	0xFDA
 16643                           fsr2l	equ	0xFD9
 16644                           status	equ	0xFD8
 16645                           
 16646 ;; *************** function _PrintErrTm *****************
 16647 ;; Defined at:
 16648 ;;		line 90 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 16649 ;; Parameters:    Size  Location     Type
 16650 ;;  kod             1    wreg     const unsigned char 
 16651 ;;  tm              1   36[COMRAM] const unsigned char 
 16652 ;;  pls             1   37[COMRAM] const unsigned char 
 16653 ;; Auto vars:     Size  Location     Type
 16654 ;;  kod             1    0[BANK0 ] const unsigned char 
 16655 ;; Return value:  Size  Location     Type
 16656 ;;		None               void
 16657 ;; Registers used:
 16658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16659 ;; Tracked objects:
 16660 ;;		On entry : F/1
 16661 ;;		On exit  : F/1
 16662 ;;		Unchanged: 0/0
 16663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16665 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16667 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16668 ;;Total ram usage:        3 bytes
 16669 ;; Hardware stack levels used:    1
 16670 ;; Hardware stack levels required when called:    5
 16671 ;; This function calls:
 16672 ;;		_SetData
 16673 ;;		_SetStatus
 16674 ;;		_SetPoz
 16675 ;; This function is called by:
 16676 ;;		_DecWSW
 16677 ;; This function uses a non-reentrant model
 16678 ;;
 16679                           
 16680                           	psect	text49
 16681  009170                     __ptext49:
 16682                           	opt stack 0
 16683  009170                     _PrintErrTm:
 16684                           	opt stack 24
 16685                           
 16686                           ;PrintErrTm@kod stored from wreg
 16687  009170  CFE8 F0F3          	movff	wreg,PrintErrTm@kod
 16688                           
 16689                           ; BSR set to: 1
 16690                           ;print.c: 91: SetData(&DWD[0],0,kod);
 16691  009174  0102               	movlb	2	; () banked
 16692  009176  0E02               	movlw	high _DWD
 16693  009178  6E1F               	movwf	?_SetData+1,c
 16694  00917A  0EBB               	movlw	low _DWD
 16695  00917C  6E1E               	movwf	?_SetData,c
 16696  00917E  0E00               	movlw	0
 16697  009180  6A20               	clrf	?_SetData+2,c
 16698  009182  C0F3  F021         	movff	PrintErrTm@kod,?_SetData+3
 16699  009186  EC42  F058         	call	_SetData	;wreg free
 16700                           
 16701                           ;print.c: 92: SetData(&DWD[1],0,tm);
 16702  00918A  0E02               	movlw	high (_DWD+4)
 16703  00918C  6E1F               	movwf	?_SetData+1,c
 16704  00918E  0EBF               	movlw	low (_DWD+4)
 16705  009190  6E1E               	movwf	?_SetData,c
 16706  009192  0E00               	movlw	0
 16707  009194  6A20               	clrf	?_SetData+2,c
 16708  009196  C025  F021         	movff	PrintErrTm@tm,?_SetData+3
 16709  00919A  EC42  F058         	call	_SetData	;wreg free
 16710                           
 16711                           ;print.c: 93: SetStatus(&DWD[0],0b0010000000000000|0b0000000000100000|0b00000100,0b11111
      +                          11111111111);
 16712  00919E  0E02               	movlw	high _DWD
 16713  0091A0  6E1F               	movwf	?_SetStatus+1,c
 16714  0091A2  0EBB               	movlw	low _DWD
 16715  0091A4  6E1E               	movwf	?_SetStatus,c
 16716  0091A6  0E20               	movlw	32
 16717  0091A8  ECE6  F047         	call	PL80	;call to abstracted procedure
 16718  0091AC  ECF3  F034         	call	_SetStatus	;wreg free
 16719                           
 16720                           ; BSR set to: 2
 16721                           ;print.c: 94: if(pls) SetStatus(&DWD[1],0b0100000000000000|0b0000000000010000|0b00000100
      +                          ,0b1111111111111111);
 16722  0091B0  5026               	movf	PrintErrTm@pls,w,c
 16723  0091B2  E00E               	bz	l40510
 16724                           
 16725                           ; BSR set to: 2
 16726  0091B4  0E02               	movlw	high (_DWD+4)
 16727  0091B6  6E1F               	movwf	?_SetStatus+1,c
 16728  0091B8  0EBF               	movlw	low (_DWD+4)
 16729  0091BA  6E1E               	movwf	?_SetStatus,c
 16730  0091BC  0E40               	movlw	64
 16731  0091BE  6E21               	movwf	?_SetStatus+3,c
 16732  0091C0  0E14               	movlw	20
 16733  0091C2  6E20               	movwf	?_SetStatus+2,c
 16734  0091C4  0EFF               	movlw	255
 16735  0091C6  6823               	setf	?_SetStatus+5,c
 16736  0091C8  6822               	setf	?_SetStatus+4,c
 16737  0091CA  ECF3  F034         	call	_SetStatus	;wreg free
 16738  0091CE  D009               	goto	l40512
 16739  0091D0                     l40510:
 16740                           
 16741                           ; BSR set to: 2
 16742                           ;print.c: 95: else SetStatus(&DWD[1],0b0100000000000000|0b0000000000100000|0b00000100,0b
      +                          1111111111111111);
 16743  0091D0  0E02               	movlw	high (_DWD+4)
 16744  0091D2  6E1F               	movwf	?_SetStatus+1,c
 16745  0091D4  0EBF               	movlw	low (_DWD+4)
 16746  0091D6  6E1E               	movwf	?_SetStatus,c
 16747  0091D8  0E40               	movlw	64
 16748  0091DA  ECE6  F047         	call	PL80	;call to abstracted procedure
 16749  0091DE  ECF3  F034         	call	_SetStatus	;wreg free
 16750  0091E2                     l40512:
 16751                           
 16752                           ; BSR set to: 2
 16753                           ;print.c: 96: SetPoz(0,0);
 16754  0091E2  0E00               	movlw	0
 16755  0091E4  6A1E               	clrf	?_SetPoz,c
 16756  0091E6  ECEC  F047         	call	_SetPoz
 16757                           
 16758                           ; BSR set to: 1
 16759                           ;print.c: 97: SetPoz(0,1);
 16760  0091EA  0E01               	movlw	1
 16761  0091EC  6E1E               	movwf	?_SetPoz,c
 16762  0091EE  0E00               	movlw	0
 16763  0091F0  EFEC  F047         	goto	_SetPoz
 16764  0091F4                     __end_of_PrintErrTm:
 16765                           	opt stack 0
 16766                           tblptru	equ	0xFF8
 16767                           tblptrh	equ	0xFF7
 16768                           tblptrl	equ	0xFF6
 16769                           tablat	equ	0xFF5
 16770                           prodh	equ	0xFF4
 16771                           prodl	equ	0xFF3
 16772                           intcon	equ	0xFF2
 16773                           postinc0	equ	0xFEE
 16774                           wreg	equ	0xFE8
 16775                           indf1	equ	0xFE7
 16776                           postinc1	equ	0xFE6
 16777                           postdec1	equ	0xFE5
 16778                           fsr1h	equ	0xFE2
 16779                           fsr1l	equ	0xFE1
 16780                           indf2	equ	0xFDF
 16781                           postinc2	equ	0xFDE
 16782                           postdec2	equ	0xFDD
 16783                           fsr2h	equ	0xFDA
 16784                           fsr2l	equ	0xFD9
 16785                           status	equ	0xFD8
 16786                           
 16787 ;; *************** function _PrintErrCs *****************
 16788 ;; Defined at:
 16789 ;;		line 79 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 16790 ;; Parameters:    Size  Location     Type
 16791 ;;  kod             1    wreg     const unsigned char 
 16792 ;;  cs              1   36[COMRAM] const unsigned char 
 16793 ;;  pls             1   37[COMRAM] const unsigned char 
 16794 ;; Auto vars:     Size  Location     Type
 16795 ;;  kod             1    0[BANK0 ] const unsigned char 
 16796 ;; Return value:  Size  Location     Type
 16797 ;;		None               void
 16798 ;; Registers used:
 16799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16800 ;; Tracked objects:
 16801 ;;		On entry : F/1
 16802 ;;		On exit  : F/1
 16803 ;;		Unchanged: 0/0
 16804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16808 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16809 ;;Total ram usage:        3 bytes
 16810 ;; Hardware stack levels used:    1
 16811 ;; Hardware stack levels required when called:    5
 16812 ;; This function calls:
 16813 ;;		_SetData
 16814 ;;		_SetStatus
 16815 ;;		_SetPoz
 16816 ;; This function is called by:
 16817 ;;		_DecWSW
 16818 ;; This function uses a non-reentrant model
 16819 ;;
 16820                           
 16821                           	psect	text50
 16822  0091F4                     __ptext50:
 16823                           	opt stack 0
 16824  0091F4                     _PrintErrCs:
 16825                           	opt stack 24
 16826                           
 16827                           ; BSR set to: 1
 16828                           ;PrintErrCs@kod stored from wreg
 16829  0091F4  CFE8 F0F3          	movff	wreg,PrintErrCs@kod
 16830                           
 16831                           ; BSR set to: 1
 16832                           ;print.c: 80: SetData(&DWD[0],0,kod);
 16833  0091F8  0102               	movlb	2	; () banked
 16834  0091FA  0E02               	movlw	high _DWD
 16835  0091FC  6E1F               	movwf	?_SetData+1,c
 16836  0091FE  0EBB               	movlw	low _DWD
 16837  009200  6E1E               	movwf	?_SetData,c
 16838  009202  0E00               	movlw	0
 16839  009204  6A20               	clrf	?_SetData+2,c
 16840  009206  C0F3  F021         	movff	PrintErrCs@kod,?_SetData+3
 16841  00920A  EC42  F058         	call	_SetData	;wreg free
 16842                           
 16843                           ;print.c: 81: SetData(&DWD[1],0,cs);
 16844  00920E  0E02               	movlw	high (_DWD+4)
 16845  009210  6E1F               	movwf	?_SetData+1,c
 16846  009212  0EBF               	movlw	low (_DWD+4)
 16847  009214  6E1E               	movwf	?_SetData,c
 16848  009216  0E00               	movlw	0
 16849  009218  6A20               	clrf	?_SetData+2,c
 16850  00921A  C025  F021         	movff	PrintErrCs@cs,?_SetData+3
 16851  00921E  EC42  F058         	call	_SetData	;wreg free
 16852                           
 16853                           ;print.c: 82: SetStatus(&DWD[0],0b0010000000000000|0b0000000000100000|0b00000100,0b11111
      +                          11111111111);
 16854  009222  0E02               	movlw	high _DWD
 16855  009224  6E1F               	movwf	?_SetStatus+1,c
 16856  009226  0EBB               	movlw	low _DWD
 16857  009228  6E1E               	movwf	?_SetStatus,c
 16858  00922A  0E20               	movlw	32
 16859  00922C  ECE6  F047         	call	PL80	;call to abstracted procedure
 16860  009230  ECF3  F034         	call	_SetStatus	;wreg free
 16861                           
 16862                           ; BSR set to: 2
 16863                           ;print.c: 84: if(pls) SetStatus(&DWD[1],0b0100000000000000|0b0000010000000000|0b00000000
      +                          00010000|0b00000100,0b1111111111111111);
 16864  009234  5026               	movf	PrintErrCs@pls,w,c
 16865  009236  E00E               	bz	l40522
 16866                           
 16867                           ; BSR set to: 2
 16868  009238  0E02               	movlw	high (_DWD+4)
 16869  00923A  6E1F               	movwf	?_SetStatus+1,c
 16870  00923C  0EBF               	movlw	low (_DWD+4)
 16871  00923E  6E1E               	movwf	?_SetStatus,c
 16872  009240  0E44               	movlw	68
 16873  009242  6E21               	movwf	?_SetStatus+3,c
 16874  009244  0E14               	movlw	20
 16875  009246  6E20               	movwf	?_SetStatus+2,c
 16876  009248  0EFF               	movlw	255
 16877  00924A  6823               	setf	?_SetStatus+5,c
 16878  00924C  6822               	setf	?_SetStatus+4,c
 16879  00924E  ECF3  F034         	call	_SetStatus	;wreg free
 16880  009252  D009               	goto	l40524
 16881  009254                     l40522:
 16882                           
 16883                           ; BSR set to: 2
 16884                           ;print.c: 85: else SetStatus(&DWD[1],0b0100000000000000|0b0000010000000000|0b00000000001
      +                          00000|0b00000100,0b1111111111111111);
 16885  009254  0E02               	movlw	high (_DWD+4)
 16886  009256  6E1F               	movwf	?_SetStatus+1,c
 16887  009258  0EBF               	movlw	low (_DWD+4)
 16888  00925A  6E1E               	movwf	?_SetStatus,c
 16889  00925C  0E44               	movlw	68
 16890  00925E  ECE6  F047         	call	PL80	;call to abstracted procedure
 16891  009262  ECF3  F034         	call	_SetStatus	;wreg free
 16892  009266                     l40524:
 16893                           
 16894                           ; BSR set to: 2
 16895                           ;print.c: 86: SetPoz(0,0);
 16896  009266  0E00               	movlw	0
 16897  009268  6A1E               	clrf	?_SetPoz,c
 16898  00926A  ECEC  F047         	call	_SetPoz
 16899                           
 16900                           ; BSR set to: 1
 16901                           ;print.c: 87: SetPoz(0,1);
 16902  00926E  0E01               	movlw	1
 16903  009270  6E1E               	movwf	?_SetPoz,c
 16904  009272  0E00               	movlw	0
 16905  009274  EFEC  F047         	goto	_SetPoz
 16906  009278                     __end_of_PrintErrCs:
 16907                           	opt stack 0
 16908                           tblptru	equ	0xFF8
 16909                           tblptrh	equ	0xFF7
 16910                           tblptrl	equ	0xFF6
 16911                           tablat	equ	0xFF5
 16912                           prodh	equ	0xFF4
 16913                           prodl	equ	0xFF3
 16914                           intcon	equ	0xFF2
 16915                           postinc0	equ	0xFEE
 16916                           wreg	equ	0xFE8
 16917                           indf1	equ	0xFE7
 16918                           postinc1	equ	0xFE6
 16919                           postdec1	equ	0xFE5
 16920                           fsr1h	equ	0xFE2
 16921                           fsr1l	equ	0xFE1
 16922                           indf2	equ	0xFDF
 16923                           postinc2	equ	0xFDE
 16924                           postdec2	equ	0xFDD
 16925                           fsr2h	equ	0xFDA
 16926                           fsr2l	equ	0xFD9
 16927                           status	equ	0xFD8
 16928                           
 16929 ;; *************** function _PrintOFF *****************
 16930 ;; Defined at:
 16931 ;;		line 242 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 16932 ;; Parameters:    Size  Location     Type
 16933 ;;		None
 16934 ;; Auto vars:     Size  Location     Type
 16935 ;;		None
 16936 ;; Return value:  Size  Location     Type
 16937 ;;		None               void
 16938 ;; Registers used:
 16939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16940 ;; Tracked objects:
 16941 ;;		On entry : F/1
 16942 ;;		On exit  : F/2
 16943 ;;		Unchanged: FFFFFFF0/0
 16944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16949 ;;Total ram usage:        0 bytes
 16950 ;; Hardware stack levels used:    1
 16951 ;; Hardware stack levels required when called:    5
 16952 ;; This function calls:
 16953 ;;		_SetStatus
 16954 ;;		_SetData
 16955 ;; This function is called by:
 16956 ;;		_DecWSW
 16957 ;; This function uses a non-reentrant model
 16958 ;;
 16959                           
 16960                           	psect	text51
 16961  00AC56                     __ptext51:
 16962                           	opt stack 0
 16963  00AC56                     _PrintOFF:
 16964                           	opt stack 24
 16965                           
 16966                           ; BSR set to: 1
 16967                           ;print.c: 243: SetStatus(&PWD[6],0b0000000001000000|0b0000000010000000|0b100000000000000
      +                          0,0b1111111111111111);
 16968                           
 16969                           ; BSR set to: 1
 16970  00AC56  0102               	movlb	2	; () banked
 16971  00AC58  0E02               	movlw	high (_PWD+24)
 16972  00AC5A  6E1F               	movwf	?_SetStatus+1,c
 16973  00AC5C  0E65               	movlw	low (_PWD+24)
 16974  00AC5E  6E1E               	movwf	?_SetStatus,c
 16975  00AC60  0E80               	movlw	128
 16976  00AC62  6E21               	movwf	?_SetStatus+3,c
 16977  00AC64  0EC0               	movlw	192
 16978  00AC66  6E20               	movwf	?_SetStatus+2,c
 16979  00AC68  0EFF               	movlw	255
 16980  00AC6A  6823               	setf	?_SetStatus+5,c
 16981  00AC6C  6822               	setf	?_SetStatus+4,c
 16982  00AC6E  ECF3  F034         	call	_SetStatus	;wreg free
 16983                           
 16984                           ;print.c: 244: SetData(&PWD[6],0b10111111,0b10111111);
 16985  00AC72  0E02               	movlw	high (_PWD+24)
 16986  00AC74  6E1F               	movwf	?_SetData+1,c
 16987  00AC76  0E65               	movlw	low (_PWD+24)
 16988  00AC78  6E1E               	movwf	?_SetData,c
 16989  00AC7A  0EBF               	movlw	191
 16990  00AC7C  6E20               	movwf	?_SetData+2,c
 16991  00AC7E  6E21               	movwf	?_SetData+3,c
 16992  00AC80  EF42  F058         	goto	_SetData	;wreg free
 16993  00AC84                     __end_of_PrintOFF:
 16994                           	opt stack 0
 16995                           tblptru	equ	0xFF8
 16996                           tblptrh	equ	0xFF7
 16997                           tblptrl	equ	0xFF6
 16998                           tablat	equ	0xFF5
 16999                           prodh	equ	0xFF4
 17000                           prodl	equ	0xFF3
 17001                           intcon	equ	0xFF2
 17002                           postinc0	equ	0xFEE
 17003                           wreg	equ	0xFE8
 17004                           indf1	equ	0xFE7
 17005                           postinc1	equ	0xFE6
 17006                           postdec1	equ	0xFE5
 17007                           fsr1h	equ	0xFE2
 17008                           fsr1l	equ	0xFE1
 17009                           indf2	equ	0xFDF
 17010                           postinc2	equ	0xFDE
 17011                           postdec2	equ	0xFDD
 17012                           fsr2h	equ	0xFDA
 17013                           fsr2l	equ	0xFD9
 17014                           status	equ	0xFD8
 17015                           
 17016 ;; *************** function _EndOFF *****************
 17017 ;; Defined at:
 17018 ;;		line 248 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 17019 ;; Parameters:    Size  Location     Type
 17020 ;;		None
 17021 ;; Auto vars:     Size  Location     Type
 17022 ;;		None
 17023 ;; Return value:  Size  Location     Type
 17024 ;;		None               void
 17025 ;; Registers used:
 17026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17027 ;; Tracked objects:
 17028 ;;		On entry : F/1
 17029 ;;		On exit  : F/2
 17030 ;;		Unchanged: FFFFFFF0/0
 17031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17036 ;;Total ram usage:        0 bytes
 17037 ;; Hardware stack levels used:    1
 17038 ;; Hardware stack levels required when called:    5
 17039 ;; This function calls:
 17040 ;;		_SetStatus
 17041 ;; This function is called by:
 17042 ;;		_DecWSW
 17043 ;; This function uses a non-reentrant model
 17044 ;;
 17045                           
 17046                           	psect	text52
 17047  00B28E                     __ptext52:
 17048                           	opt stack 0
 17049  00B28E                     _EndOFF:
 17050                           	opt stack 24
 17051                           
 17052                           ; BSR set to: 1
 17053                           ;print.c: 249: SetStatus(&PWD[6],0b0000000001000000|0b0000000010000000,0b111111111111111
      +                          1);
 17054                           
 17055                           ; BSR set to: 2
 17056  00B28E  0102               	movlb	2	; () banked
 17057  00B290  0E02               	movlw	high (_PWD+24)
 17058  00B292  6E1F               	movwf	?_SetStatus+1,c
 17059  00B294  0E65               	movlw	low (_PWD+24)
 17060  00B296  6E1E               	movwf	?_SetStatus,c
 17061  00B298  6A21               	clrf	?_SetStatus+3,c
 17062  00B29A  0EC0               	movlw	192
 17063  00B29C  6E20               	movwf	?_SetStatus+2,c
 17064  00B29E  6823               	setf	?_SetStatus+5,c
 17065  00B2A0  6822               	setf	?_SetStatus+4,c
 17066  00B2A2  EFF3  F034         	goto	_SetStatus	;wreg free
 17067  00B2A6                     __end_of_EndOFF:
 17068                           	opt stack 0
 17069                           tblptru	equ	0xFF8
 17070                           tblptrh	equ	0xFF7
 17071                           tblptrl	equ	0xFF6
 17072                           tablat	equ	0xFF5
 17073                           prodh	equ	0xFF4
 17074                           prodl	equ	0xFF3
 17075                           intcon	equ	0xFF2
 17076                           postinc0	equ	0xFEE
 17077                           wreg	equ	0xFE8
 17078                           indf1	equ	0xFE7
 17079                           postinc1	equ	0xFE6
 17080                           postdec1	equ	0xFE5
 17081                           fsr1h	equ	0xFE2
 17082                           fsr1l	equ	0xFE1
 17083                           indf2	equ	0xFDF
 17084                           postinc2	equ	0xFDE
 17085                           postdec2	equ	0xFDD
 17086                           fsr2h	equ	0xFDA
 17087                           fsr2l	equ	0xFD9
 17088                           status	equ	0xFD8
 17089                           
 17090 ;; *************** function _PrintCS *****************
 17091 ;; Defined at:
 17092 ;;		line 255 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 17093 ;; Parameters:    Size  Location     Type
 17094 ;;  cs              1    wreg     const unsigned char 
 17095 ;; Auto vars:     Size  Location     Type
 17096 ;;  cs              1   36[COMRAM] const unsigned char 
 17097 ;; Return value:  Size  Location     Type
 17098 ;;		None               void
 17099 ;; Registers used:
 17100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17101 ;; Tracked objects:
 17102 ;;		On entry : F/1
 17103 ;;		On exit  : F/2
 17104 ;;		Unchanged: FFFFFFF0/0
 17105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17110 ;;Total ram usage:        1 bytes
 17111 ;; Hardware stack levels used:    1
 17112 ;; Hardware stack levels required when called:    5
 17113 ;; This function calls:
 17114 ;;		_SetStatus
 17115 ;;		_SetData
 17116 ;; This function is called by:
 17117 ;;		_DecWSW
 17118 ;; This function uses a non-reentrant model
 17119 ;;
 17120                           
 17121                           	psect	text53
 17122  00AB96                     __ptext53:
 17123                           	opt stack 0
 17124  00AB96                     _PrintCS:
 17125                           	opt stack 24
 17126                           
 17127                           ; BSR set to: 2
 17128                           ;PrintCS@cs stored from wreg
 17129  00AB96  CFE8 F025          	movff	wreg,PrintCS@cs
 17130                           
 17131                           ; BSR set to: 1
 17132                           ;print.c: 256: SetStatus(&PWD[7],0b0100000000000000|0b0000010000000000|0b100000000000000
      +                          0,0b1111111111111111);
 17133  00AB9A  0102               	movlb	2	; () banked
 17134  00AB9C  0E02               	movlw	high (_PWD+28)
 17135  00AB9E  6E1F               	movwf	?_SetStatus+1,c
 17136  00ABA0  0E69               	movlw	low (_PWD+28)
 17137  00ABA2  6E1E               	movwf	?_SetStatus,c
 17138  00ABA4  0EC4               	movlw	196
 17139  00ABA6  6E21               	movwf	?_SetStatus+3,c
 17140  00ABA8  6A20               	clrf	?_SetStatus+2,c
 17141  00ABAA  0EFF               	movlw	255
 17142  00ABAC  6823               	setf	?_SetStatus+5,c
 17143  00ABAE  6822               	setf	?_SetStatus+4,c
 17144  00ABB0  ECF3  F034         	call	_SetStatus	;wreg free
 17145                           
 17146                           ;print.c: 257: SetData(&PWD[7],0,cs);
 17147  00ABB4  0E02               	movlw	high (_PWD+28)
 17148  00ABB6  6E1F               	movwf	?_SetData+1,c
 17149  00ABB8  0E69               	movlw	low (_PWD+28)
 17150  00ABBA  6E1E               	movwf	?_SetData,c
 17151  00ABBC  6A20               	clrf	?_SetData+2,c
 17152  00ABBE  C025  F021         	movff	PrintCS@cs,?_SetData+3
 17153  00ABC2  EF42  F058         	goto	_SetData	;wreg free
 17154  00ABC6                     __end_of_PrintCS:
 17155                           	opt stack 0
 17156                           tblptru	equ	0xFF8
 17157                           tblptrh	equ	0xFF7
 17158                           tblptrl	equ	0xFF6
 17159                           tablat	equ	0xFF5
 17160                           prodh	equ	0xFF4
 17161                           prodl	equ	0xFF3
 17162                           intcon	equ	0xFF2
 17163                           postinc0	equ	0xFEE
 17164                           wreg	equ	0xFE8
 17165                           indf1	equ	0xFE7
 17166                           postinc1	equ	0xFE6
 17167                           postdec1	equ	0xFE5
 17168                           fsr1h	equ	0xFE2
 17169                           fsr1l	equ	0xFE1
 17170                           indf2	equ	0xFDF
 17171                           postinc2	equ	0xFDE
 17172                           postdec2	equ	0xFDD
 17173                           fsr2h	equ	0xFDA
 17174                           fsr2l	equ	0xFD9
 17175                           status	equ	0xFD8
 17176                           
 17177 ;; *************** function _EndCS *****************
 17178 ;; Defined at:
 17179 ;;		line 261 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 17180 ;; Parameters:    Size  Location     Type
 17181 ;;		None
 17182 ;; Auto vars:     Size  Location     Type
 17183 ;;		None
 17184 ;; Return value:  Size  Location     Type
 17185 ;;		None               void
 17186 ;; Registers used:
 17187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17188 ;; Tracked objects:
 17189 ;;		On entry : C/2
 17190 ;;		On exit  : F/2
 17191 ;;		Unchanged: FFFFFFF0/0
 17192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17197 ;;Total ram usage:        0 bytes
 17198 ;; Hardware stack levels used:    1
 17199 ;; Hardware stack levels required when called:    5
 17200 ;; This function calls:
 17201 ;;		_SetStatus
 17202 ;; This function is called by:
 17203 ;;		_DecWSW
 17204 ;; This function uses a non-reentrant model
 17205 ;;
 17206                           
 17207                           	psect	text54
 17208  00B2A6                     __ptext54:
 17209                           	opt stack 0
 17210  00B2A6                     _EndCS:
 17211                           	opt stack 24
 17212                           
 17213                           ;print.c: 262: SetStatus(&PWD[7],0b0100000000000000|0b0000010000000000,0b111111111111111
      +                          1);
 17214                           
 17215                           ; BSR set to: 2
 17216  00B2A6  0102               	movlb	2	; () banked
 17217  00B2A8  0E02               	movlw	high (_PWD+28)
 17218  00B2AA  6E1F               	movwf	?_SetStatus+1,c
 17219  00B2AC  0E69               	movlw	low (_PWD+28)
 17220  00B2AE  6E1E               	movwf	?_SetStatus,c
 17221  00B2B0  0E44               	movlw	68
 17222  00B2B2  6E21               	movwf	?_SetStatus+3,c
 17223  00B2B4  6A20               	clrf	?_SetStatus+2,c
 17224  00B2B6  6823               	setf	?_SetStatus+5,c
 17225  00B2B8  6822               	setf	?_SetStatus+4,c
 17226  00B2BA  EFF3  F034         	goto	_SetStatus	;wreg free
 17227  00B2BE                     __end_of_EndCS:
 17228                           	opt stack 0
 17229                           tblptru	equ	0xFF8
 17230                           tblptrh	equ	0xFF7
 17231                           tblptrl	equ	0xFF6
 17232                           tablat	equ	0xFF5
 17233                           prodh	equ	0xFF4
 17234                           prodl	equ	0xFF3
 17235                           intcon	equ	0xFF2
 17236                           postinc0	equ	0xFEE
 17237                           wreg	equ	0xFE8
 17238                           indf1	equ	0xFE7
 17239                           postinc1	equ	0xFE6
 17240                           postdec1	equ	0xFE5
 17241                           fsr1h	equ	0xFE2
 17242                           fsr1l	equ	0xFE1
 17243                           indf2	equ	0xFDF
 17244                           postinc2	equ	0xFDE
 17245                           postdec2	equ	0xFDD
 17246                           fsr2h	equ	0xFDA
 17247                           fsr2l	equ	0xFD9
 17248                           status	equ	0xFD8
 17249                           
 17250 ;; *************** function _PrintCW *****************
 17251 ;; Defined at:
 17252 ;;		line 269 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 17253 ;; Parameters:    Size  Location     Type
 17254 ;;  tm              1    wreg     const unsigned char 
 17255 ;; Auto vars:     Size  Location     Type
 17256 ;;  tm              1   36[COMRAM] const unsigned char 
 17257 ;; Return value:  Size  Location     Type
 17258 ;;		None               void
 17259 ;; Registers used:
 17260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17261 ;; Tracked objects:
 17262 ;;		On entry : F/1
 17263 ;;		On exit  : F/2
 17264 ;;		Unchanged: FFFFFFF0/0
 17265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17270 ;;Total ram usage:        1 bytes
 17271 ;; Hardware stack levels used:    1
 17272 ;; Hardware stack levels required when called:    5
 17273 ;; This function calls:
 17274 ;;		_SetStatus
 17275 ;;		_SetData
 17276 ;; This function is called by:
 17277 ;;		_DecWSW
 17278 ;; This function uses a non-reentrant model
 17279 ;;
 17280                           
 17281                           	psect	text55
 17282  00ABC6                     __ptext55:
 17283                           	opt stack 0
 17284  00ABC6                     _PrintCW:
 17285                           	opt stack 24
 17286                           
 17287                           ; BSR set to: 2
 17288                           ;PrintCW@tm stored from wreg
 17289  00ABC6  CFE8 F025          	movff	wreg,PrintCW@tm
 17290                           
 17291                           ; BSR set to: 1
 17292                           ;print.c: 270: SetStatus(&PWD[8],0b0100000000000000|0b0000100000000000|0b100000000000000
      +                          0,0b1111111111111111);
 17293  00ABCA  0102               	movlb	2	; () banked
 17294  00ABCC  0E02               	movlw	high (_PWD+32)
 17295  00ABCE  6E1F               	movwf	?_SetStatus+1,c
 17296  00ABD0  0E6D               	movlw	low (_PWD+32)
 17297  00ABD2  6E1E               	movwf	?_SetStatus,c
 17298  00ABD4  0EC8               	movlw	200
 17299  00ABD6  6E21               	movwf	?_SetStatus+3,c
 17300  00ABD8  6A20               	clrf	?_SetStatus+2,c
 17301  00ABDA  0EFF               	movlw	255
 17302  00ABDC  6823               	setf	?_SetStatus+5,c
 17303  00ABDE  6822               	setf	?_SetStatus+4,c
 17304  00ABE0  ECF3  F034         	call	_SetStatus	;wreg free
 17305                           
 17306                           ;print.c: 271: SetData(&PWD[8],0,tm);
 17307  00ABE4  0E02               	movlw	high (_PWD+32)
 17308  00ABE6  6E1F               	movwf	?_SetData+1,c
 17309  00ABE8  0E6D               	movlw	low (_PWD+32)
 17310  00ABEA  6E1E               	movwf	?_SetData,c
 17311  00ABEC  6A20               	clrf	?_SetData+2,c
 17312  00ABEE  C025  F021         	movff	PrintCW@tm,?_SetData+3
 17313  00ABF2  EF42  F058         	goto	_SetData	;wreg free
 17314  00ABF6                     __end_of_PrintCW:
 17315                           	opt stack 0
 17316                           tblptru	equ	0xFF8
 17317                           tblptrh	equ	0xFF7
 17318                           tblptrl	equ	0xFF6
 17319                           tablat	equ	0xFF5
 17320                           prodh	equ	0xFF4
 17321                           prodl	equ	0xFF3
 17322                           intcon	equ	0xFF2
 17323                           postinc0	equ	0xFEE
 17324                           wreg	equ	0xFE8
 17325                           indf1	equ	0xFE7
 17326                           postinc1	equ	0xFE6
 17327                           postdec1	equ	0xFE5
 17328                           fsr1h	equ	0xFE2
 17329                           fsr1l	equ	0xFE1
 17330                           indf2	equ	0xFDF
 17331                           postinc2	equ	0xFDE
 17332                           postdec2	equ	0xFDD
 17333                           fsr2h	equ	0xFDA
 17334                           fsr2l	equ	0xFD9
 17335                           status	equ	0xFD8
 17336                           
 17337 ;; *************** function _EndCW *****************
 17338 ;; Defined at:
 17339 ;;		line 275 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 17340 ;; Parameters:    Size  Location     Type
 17341 ;;		None
 17342 ;; Auto vars:     Size  Location     Type
 17343 ;;		None
 17344 ;; Return value:  Size  Location     Type
 17345 ;;		None               void
 17346 ;; Registers used:
 17347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17348 ;; Tracked objects:
 17349 ;;		On entry : F/2
 17350 ;;		On exit  : F/2
 17351 ;;		Unchanged: FFFFFFF0/0
 17352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17357 ;;Total ram usage:        0 bytes
 17358 ;; Hardware stack levels used:    1
 17359 ;; Hardware stack levels required when called:    5
 17360 ;; This function calls:
 17361 ;;		_SetStatus
 17362 ;; This function is called by:
 17363 ;;		_DecWSW
 17364 ;; This function uses a non-reentrant model
 17365 ;;
 17366                           
 17367                           	psect	text56
 17368  00B34E                     __ptext56:
 17369                           	opt stack 0
 17370  00B34E                     _EndCW:
 17371                           	opt stack 24
 17372                           
 17373                           ; BSR set to: 2
 17374                           ;print.c: 276: SetStatus(&PWD[8],0b0100000000000000,0b1111111111111111);
 17375                           
 17376                           ; BSR set to: 2
 17377  00B34E  0E02               	movlw	high (_PWD+32)
 17378  00B350  6E1F               	movwf	?_SetStatus+1,c
 17379  00B352  0E6D               	movlw	low (_PWD+32)
 17380  00B354  6E1E               	movwf	?_SetStatus,c
 17381  00B356  0E40               	movlw	64
 17382  00B358  6E21               	movwf	?_SetStatus+3,c
 17383  00B35A  6A20               	clrf	?_SetStatus+2,c
 17384  00B35C  6823               	setf	?_SetStatus+5,c
 17385  00B35E  6822               	setf	?_SetStatus+4,c
 17386  00B360  EFF3  F034         	goto	_SetStatus	;wreg free
 17387  00B364                     __end_of_EndCW:
 17388                           	opt stack 0
 17389                           tblptru	equ	0xFF8
 17390                           tblptrh	equ	0xFF7
 17391                           tblptrl	equ	0xFF6
 17392                           tablat	equ	0xFF5
 17393                           prodh	equ	0xFF4
 17394                           prodl	equ	0xFF3
 17395                           intcon	equ	0xFF2
 17396                           postinc0	equ	0xFEE
 17397                           wreg	equ	0xFE8
 17398                           indf1	equ	0xFE7
 17399                           postinc1	equ	0xFE6
 17400                           postdec1	equ	0xFE5
 17401                           fsr1h	equ	0xFE2
 17402                           fsr1l	equ	0xFE1
 17403                           indf2	equ	0xFDF
 17404                           postinc2	equ	0xFDE
 17405                           postdec2	equ	0xFDD
 17406                           fsr2h	equ	0xFDA
 17407                           fsr2l	equ	0xFD9
 17408                           status	equ	0xFD8
 17409                           
 17410 ;; *************** function _PrintCO *****************
 17411 ;; Defined at:
 17412 ;;		line 283 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 17413 ;; Parameters:    Size  Location     Type
 17414 ;;  tm              1    wreg     const unsigned char 
 17415 ;; Auto vars:     Size  Location     Type
 17416 ;;  tm              1   36[COMRAM] const unsigned char 
 17417 ;; Return value:  Size  Location     Type
 17418 ;;		None               void
 17419 ;; Registers used:
 17420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17421 ;; Tracked objects:
 17422 ;;		On entry : F/1
 17423 ;;		On exit  : F/2
 17424 ;;		Unchanged: FFFFFFF0/0
 17425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17429 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17430 ;;Total ram usage:        1 bytes
 17431 ;; Hardware stack levels used:    1
 17432 ;; Hardware stack levels required when called:    5
 17433 ;; This function calls:
 17434 ;;		_SetStatus
 17435 ;;		_SetData
 17436 ;; This function is called by:
 17437 ;;		_DecWSW
 17438 ;; This function uses a non-reentrant model
 17439 ;;
 17440                           
 17441                           	psect	text57
 17442  00AEC6                     __ptext57:
 17443                           	opt stack 0
 17444  00AEC6                     _PrintCO:
 17445                           	opt stack 24
 17446                           
 17447                           ; BSR set to: 2
 17448                           ;PrintCO@tm stored from wreg
 17449  00AEC6  CFE8 F025          	movff	wreg,PrintCO@tm
 17450                           
 17451                           ; BSR set to: 1
 17452                           ;print.c: 284: SetStatus(&PWD[9],0b0100000000000000,0b1111111111111111);
 17453  00AECA  0102               	movlb	2	; () banked
 17454  00AECC  0E02               	movlw	high (_PWD+36)
 17455  00AECE  6E1F               	movwf	?_SetStatus+1,c
 17456  00AED0  0E71               	movlw	low (_PWD+36)
 17457  00AED2  ECD9  F045         	call	PL78	;call to abstracted procedure
 17458  00AED6  ECF3  F034         	call	_SetStatus	;wreg free
 17459                           
 17460                           ;print.c: 285: SetData(&PWD[9],0,tm);
 17461  00AEDA  0E02               	movlw	high (_PWD+36)
 17462  00AEDC  6E1F               	movwf	?_SetData+1,c
 17463  00AEDE  0E71               	movlw	low (_PWD+36)
 17464  00AEE0  6E1E               	movwf	?_SetData,c
 17465  00AEE2  6A20               	clrf	?_SetData+2,c
 17466  00AEE4  C025  F021         	movff	PrintCO@tm,?_SetData+3
 17467  00AEE8  EF42  F058         	goto	_SetData	;wreg free
 17468  00AEEC                     __end_of_PrintCO:
 17469                           	opt stack 0
 17470                           tblptru	equ	0xFF8
 17471                           tblptrh	equ	0xFF7
 17472                           tblptrl	equ	0xFF6
 17473                           tablat	equ	0xFF5
 17474                           prodh	equ	0xFF4
 17475                           prodl	equ	0xFF3
 17476                           intcon	equ	0xFF2
 17477                           postinc0	equ	0xFEE
 17478                           wreg	equ	0xFE8
 17479                           indf1	equ	0xFE7
 17480                           postinc1	equ	0xFE6
 17481                           postdec1	equ	0xFE5
 17482                           fsr1h	equ	0xFE2
 17483                           fsr1l	equ	0xFE1
 17484                           indf2	equ	0xFDF
 17485                           postinc2	equ	0xFDE
 17486                           postdec2	equ	0xFDD
 17487                           fsr2h	equ	0xFDA
 17488                           fsr2l	equ	0xFD9
 17489                           status	equ	0xFD8
 17490                           
 17491 ;; *************** function _PrintL3 *****************
 17492 ;; Defined at:
 17493 ;;		line 189 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 17494 ;; Parameters:    Size  Location     Type
 17495 ;;		None
 17496 ;; Auto vars:     Size  Location     Type
 17497 ;;		None
 17498 ;; Return value:  Size  Location     Type
 17499 ;;		None               void
 17500 ;; Registers used:
 17501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17502 ;; Tracked objects:
 17503 ;;		On entry : F/1
 17504 ;;		On exit  : F/1
 17505 ;;		Unchanged: 0/0
 17506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17511 ;;Total ram usage:        0 bytes
 17512 ;; Hardware stack levels used:    1
 17513 ;; Hardware stack levels required when called:    5
 17514 ;; This function calls:
 17515 ;;		_SetData
 17516 ;;		_SetStatus
 17517 ;;		_SetPoz
 17518 ;; This function is called by:
 17519 ;;		_DecWSW
 17520 ;; This function uses a non-reentrant model
 17521 ;;
 17522                           
 17523                           	psect	text58
 17524  008C5C                     __ptext58:
 17525                           	opt stack 0
 17526  008C5C                     _PrintL3:
 17527                           	opt stack 24
 17528                           
 17529                           ; BSR set to: 1
 17530                           ;print.c: 190: SetData(&DWD[5],0b11010110,0b00110001);
 17531                           
 17532                           ; BSR set to: 2
 17533  008C5C  0102               	movlb	2	; () banked
 17534  008C5E  0E02               	movlw	high (_DWD+20)
 17535  008C60  6E1F               	movwf	?_SetData+1,c
 17536  008C62  0ECF               	movlw	low (_DWD+20)
 17537  008C64  6E1E               	movwf	?_SetData,c
 17538  008C66  0ED6               	movlw	214
 17539  008C68  6E20               	movwf	?_SetData+2,c
 17540  008C6A  0E31               	movlw	49
 17541  008C6C  6E21               	movwf	?_SetData+3,c
 17542  008C6E  EC42  F058         	call	_SetData	;wreg free
 17543                           
 17544                           ;print.c: 191: SetStatus(&DWD[5],0b0000000000000000|0b1000000000000000,0b111111111111111
      +                          1);
 17545  008C72  0E02               	movlw	high (_DWD+20)
 17546  008C74  6E1F               	movwf	?_SetStatus+1,c
 17547  008C76  0ECF               	movlw	low (_DWD+20)
 17548  008C78  D837               	call	PL178	;call to abstracted procedure
 17549  008C7A  ECF3  F034         	call	_SetStatus	;wreg free
 17550                           
 17551                           ; BSR set to: 2
 17552                           ;print.c: 192: if(DtCO._err_CO)
 17553  008C7E  0100               	movlb	0	; () banked
 17554  008C80  A1E4               	btfss	_DtCO& (0+255),0,b
 17555  008C82  D012               	goto	l40552
 17556                           
 17557                           ; BSR set to: 0
 17558                           ;print.c: 193: {
 17559                           ;print.c: 194: SetData(&DWD[6],0b11010110,0b00110001);
 17560  008C84  0102               	movlb	2	; () banked
 17561  008C86  0E02               	movlw	high (_DWD+24)
 17562  008C88  6E1F               	movwf	?_SetData+1,c
 17563  008C8A  0ED3               	movlw	low (_DWD+24)
 17564  008C8C  6E1E               	movwf	?_SetData,c
 17565  008C8E  0ED6               	movlw	214
 17566  008C90  6E20               	movwf	?_SetData+2,c
 17567  008C92  0E31               	movlw	49
 17568  008C94  6E21               	movwf	?_SetData+3,c
 17569  008C96  EC42  F058         	call	_SetData	;wreg free
 17570                           
 17571                           ;print.c: 195: SetStatus(&DWD[6],0b0000000000000000|0b1000000000000000,0b111111111111111
      +                          1);
 17572  008C9A  0E02               	movlw	high (_DWD+24)
 17573  008C9C  6E1F               	movwf	?_SetStatus+1,c
 17574  008C9E  0ED3               	movlw	low (_DWD+24)
 17575  008CA0  D823               	call	PL178	;call to abstracted procedure
 17576  008CA2  ECF3  F034         	call	_SetStatus	;wreg free
 17577                           
 17578                           ;print.c: 196: }
 17579  008CA6  D017               	goto	l40554
 17580  008CA8                     l40552:
 17581                           
 17582                           ; BSR set to: 0
 17583                           ;print.c: 197: else
 17584                           ;print.c: 198: {
 17585                           ;print.c: 199: SetData(&DWD[6],0,DtCO.SCO);
 17586  008CA8  0102               	movlb	2	; () banked
 17587  008CAA  0E02               	movlw	high (_DWD+24)
 17588  008CAC  6E1F               	movwf	?_SetData+1,c
 17589  008CAE  0ED3               	movlw	low (_DWD+24)
 17590  008CB0  6E1E               	movwf	?_SetData,c
 17591  008CB2  0E00               	movlw	0
 17592  008CB4  6A20               	clrf	?_SetData+2,c
 17593  008CB6  C0EF  F021         	movff	_DtCO+11,?_SetData+3
 17594  008CBA  EC42  F058         	call	_SetData	;wreg free
 17595                           
 17596                           ;print.c: 200: SetStatus(&DWD[6],0b0100000000000000|0b1000000000000000,0b111111111111111
      +                          1);
 17597  008CBE  0E02               	movlw	high (_DWD+24)
 17598  008CC0  6E1F               	movwf	?_SetStatus+1,c
 17599  008CC2  0ED3               	movlw	low (_DWD+24)
 17600  008CC4  6E1E               	movwf	?_SetStatus,c
 17601  008CC6  0EC0               	movlw	192
 17602  008CC8  6E21               	movwf	?_SetStatus+3,c
 17603  008CCA  6A20               	clrf	?_SetStatus+2,c
 17604  008CCC  0EFF               	movlw	255
 17605  008CCE  6823               	setf	?_SetStatus+5,c
 17606  008CD0  6822               	setf	?_SetStatus+4,c
 17607  008CD2  ECF3  F034         	call	_SetStatus	;wreg free
 17608  008CD6                     l40554:
 17609                           
 17610                           ; BSR set to: 2
 17611                           ;print.c: 201: }
 17612                           ;print.c: 202: SetPoz(3,0);
 17613  008CD6  6A1E               	clrf	?_SetPoz,c
 17614  008CD8  0E03               	movlw	3
 17615  008CDA  ECEC  F047         	call	_SetPoz
 17616                           
 17617                           ; BSR set to: 1
 17618                           ;print.c: 203: SetPoz(3,1);
 17619  008CDE  0E01               	movlw	1
 17620  008CE0  6E1E               	movwf	?_SetPoz,c
 17621  008CE2  0E03               	movlw	3
 17622  008CE4  EFEC  F047         	goto	_SetPoz
 17623  008CE8                     __end_of_PrintL3:
 17624                           	opt stack 0
 17625  008CE8                     PL178:
 17626                           	opt stack 24
 17627  008CE8  6E1E               	movwf	?_SetStatus,c
 17628  008CEA  0E80               	movlw	128
 17629  008CEC  6E21               	movwf	?_SetStatus+3,c
 17630  008CEE  6A20               	clrf	?_SetStatus+2,c
 17631  008CF0  6823               	setf	?_SetStatus+5,c
 17632  008CF2  6822               	setf	?_SetStatus+4,c
 17633  008CF4  0CFF               	retlw	255
 17634  008CF6                     __end_ofPL178:
 17635                           	opt stack 0
 17636                           tblptru	equ	0xFF8
 17637                           tblptrh	equ	0xFF7
 17638                           tblptrl	equ	0xFF6
 17639                           tablat	equ	0xFF5
 17640                           prodh	equ	0xFF4
 17641                           prodl	equ	0xFF3
 17642                           intcon	equ	0xFF2
 17643                           postinc0	equ	0xFEE
 17644                           wreg	equ	0xFE8
 17645                           indf1	equ	0xFE7
 17646                           postinc1	equ	0xFE6
 17647                           postdec1	equ	0xFE5
 17648                           fsr1h	equ	0xFE2
 17649                           fsr1l	equ	0xFE1
 17650                           indf2	equ	0xFDF
 17651                           postinc2	equ	0xFDE
 17652                           postdec2	equ	0xFDD
 17653                           fsr2h	equ	0xFDA
 17654                           fsr2l	equ	0xFD9
 17655                           status	equ	0xFD8
 17656                           
 17657 ;; *************** function _SetDiode *****************
 17658 ;; Defined at:
 17659 ;;		line 322 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 17660 ;; Parameters:    Size  Location     Type
 17661 ;;  wd              1    wreg     unsigned char 
 17662 ;;  stn             1   30[COMRAM] unsigned char 
 17663 ;; Auto vars:     Size  Location     Type
 17664 ;;  wd              1   31[COMRAM] unsigned char 
 17665 ;; Return value:  Size  Location     Type
 17666 ;;		None               void
 17667 ;; Registers used:
 17668 ;;		wreg, status,2, status,0, cstack
 17669 ;; Tracked objects:
 17670 ;;		On entry : C/2
 17671 ;;		On exit  : C/2
 17672 ;;		Unchanged: FFFFFFF3/0
 17673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17674 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17678 ;;Total ram usage:        2 bytes
 17679 ;; Hardware stack levels used:    1
 17680 ;; Hardware stack levels required when called:    5
 17681 ;; This function calls:
 17682 ;;		_Swsdid
 17683 ;;		_Rwsdid
 17684 ;; This function is called by:
 17685 ;;		_DecWSW
 17686 ;;		_TestScr
 17687 ;;		_EndTestScr
 17688 ;; This function uses a non-reentrant model
 17689 ;;
 17690                           
 17691                           	psect	text59
 17692  00B3BC                     __ptext59:
 17693                           	opt stack 0
 17694  00B3BC                     _SetDiode:
 17695                           	opt stack 24
 17696                           
 17697                           ; BSR set to: 1
 17698                           ;SetDiode@wd stored from wreg
 17699  00B3BC  CFE8 F020          	movff	wreg,SetDiode@wd
 17700                           
 17701                           ;print.c: 323: if(stn) Swsdid(wd);
 17702  00B3C0  501F               	movf	SetDiode@stn,w,c
 17703  00B3C2  E003               	bz	l40562
 17704  00B3C4  5020               	movf	SetDiode@wd,w,c
 17705  00B3C6  EF82  F05A         	goto	_Swsdid
 17706  00B3CA                     l40562:
 17707                           
 17708                           ;print.c: 324: else Rwsdid(wd);
 17709  00B3CA  5020               	movf	SetDiode@wd,w,c
 17710  00B3CC  EF89  F05A         	goto	_Rwsdid
 17711  00B3D0                     __end_of_SetDiode:
 17712                           	opt stack 0
 17713                           tblptru	equ	0xFF8
 17714                           tblptrh	equ	0xFF7
 17715                           tblptrl	equ	0xFF6
 17716                           tablat	equ	0xFF5
 17717                           prodh	equ	0xFF4
 17718                           prodl	equ	0xFF3
 17719                           intcon	equ	0xFF2
 17720                           postinc0	equ	0xFEE
 17721                           wreg	equ	0xFE8
 17722                           indf1	equ	0xFE7
 17723                           postinc1	equ	0xFE6
 17724                           postdec1	equ	0xFE5
 17725                           fsr1h	equ	0xFE2
 17726                           fsr1l	equ	0xFE1
 17727                           indf2	equ	0xFDF
 17728                           postinc2	equ	0xFDE
 17729                           postdec2	equ	0xFDD
 17730                           fsr2h	equ	0xFDA
 17731                           fsr2l	equ	0xFD9
 17732                           status	equ	0xFD8
 17733                           
 17734 ;; *************** function _SetErr *****************
 17735 ;; Defined at:
 17736 ;;		line 51 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 17737 ;; Parameters:    Size  Location     Type
 17738 ;;  kod             1    wreg     const unsigned char 
 17739 ;; Auto vars:     Size  Location     Type
 17740 ;;  kod             1   29[COMRAM] const unsigned char 
 17741 ;; Return value:  Size  Location     Type
 17742 ;;		None               void
 17743 ;; Registers used:
 17744 ;;		wreg
 17745 ;; Tracked objects:
 17746 ;;		On entry : E/0
 17747 ;;		On exit  : F/1
 17748 ;;		Unchanged: FFFFFFF0/0
 17749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17754 ;;Total ram usage:        1 bytes
 17755 ;; Hardware stack levels used:    1
 17756 ;; Hardware stack levels required when called:    4
 17757 ;; This function calls:
 17758 ;;		Nothing
 17759 ;; This function is called by:
 17760 ;;		_DecERR
 17761 ;; This function uses a non-reentrant model
 17762 ;;
 17763                           
 17764                           	psect	text60
 17765  00B4E8                     __ptext60:
 17766                           	opt stack 0
 17767  00B4E8                     _SetErr:
 17768                           	opt stack 25
 17769                           
 17770                           ;SetErr@kod stored from wreg
 17771  00B4E8  CFE8 F01E          	movff	wreg,SetErr@kod
 17772                           
 17773                           ;print.c: 52: PFN._ferr=1;
 17774  00B4EC  0101               	movlb	1	; () banked
 17775  00B4EE  81BF               	bsf	(_PFN+5)& (0+255),0,b
 17776                           
 17777                           ; BSR set to: 1
 17778                           ;print.c: 53: PFN.KERR=kod;
 17779  00B4F0  C01E  F1CA         	movff	SetErr@kod,_PFN+16
 17780                           
 17781                           ; BSR set to: 1
 17782  00B4F4  0012               	return	
 17783  00B4F6                     __end_of_SetErr:
 17784                           	opt stack 0
 17785                           tblptru	equ	0xFF8
 17786                           tblptrh	equ	0xFF7
 17787                           tblptrl	equ	0xFF6
 17788                           tablat	equ	0xFF5
 17789                           prodh	equ	0xFF4
 17790                           prodl	equ	0xFF3
 17791                           intcon	equ	0xFF2
 17792                           postinc0	equ	0xFEE
 17793                           wreg	equ	0xFE8
 17794                           indf1	equ	0xFE7
 17795                           postinc1	equ	0xFE6
 17796                           postdec1	equ	0xFE5
 17797                           fsr1h	equ	0xFE2
 17798                           fsr1l	equ	0xFE1
 17799                           indf2	equ	0xFDF
 17800                           postinc2	equ	0xFDE
 17801                           postdec2	equ	0xFDD
 17802                           fsr2h	equ	0xFDA
 17803                           fsr2l	equ	0xFD9
 17804                           status	equ	0xFD8
 17805                           
 17806 ;; *************** function _SetMsg *****************
 17807 ;; Defined at:
 17808 ;;		line 59 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 17809 ;; Parameters:    Size  Location     Type
 17810 ;;  kod             1    wreg     const unsigned char 
 17811 ;; Auto vars:     Size  Location     Type
 17812 ;;  kod             1   29[COMRAM] const unsigned char 
 17813 ;; Return value:  Size  Location     Type
 17814 ;;		None               void
 17815 ;; Registers used:
 17816 ;;		wreg
 17817 ;; Tracked objects:
 17818 ;;		On entry : E/1
 17819 ;;		On exit  : F/1
 17820 ;;		Unchanged: FFFFFFF0/0
 17821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17826 ;;Total ram usage:        1 bytes
 17827 ;; Hardware stack levels used:    1
 17828 ;; Hardware stack levels required when called:    4
 17829 ;; This function calls:
 17830 ;;		Nothing
 17831 ;; This function is called by:
 17832 ;;		_DecERR
 17833 ;; This function uses a non-reentrant model
 17834 ;;
 17835                           
 17836                           	psect	text61
 17837  00B4F6                     __ptext61:
 17838                           	opt stack 0
 17839  00B4F6                     _SetMsg:
 17840                           	opt stack 25
 17841                           
 17842                           ; BSR set to: 1
 17843                           ;SetMsg@kod stored from wreg
 17844  00B4F6  CFE8 F01E          	movff	wreg,SetMsg@kod
 17845                           
 17846                           ;print.c: 60: PFN._fmsg=1;
 17847  00B4FA  0101               	movlb	1	; () banked
 17848  00B4FC  8FBE               	bsf	(_PFN+4)& (0+255),7,b
 17849                           
 17850                           ; BSR set to: 1
 17851                           ;print.c: 61: PFN.KAWR=kod;
 17852  00B4FE  C01E  F1C9         	movff	SetMsg@kod,_PFN+15
 17853                           
 17854                           ; BSR set to: 1
 17855  00B502  0012               	return	
 17856  00B504                     __end_of_SetMsg:
 17857                           	opt stack 0
 17858                           tblptru	equ	0xFF8
 17859                           tblptrh	equ	0xFF7
 17860                           tblptrl	equ	0xFF6
 17861                           tablat	equ	0xFF5
 17862                           prodh	equ	0xFF4
 17863                           prodl	equ	0xFF3
 17864                           intcon	equ	0xFF2
 17865                           postinc0	equ	0xFEE
 17866                           wreg	equ	0xFE8
 17867                           indf1	equ	0xFE7
 17868                           postinc1	equ	0xFE6
 17869                           postdec1	equ	0xFE5
 17870                           fsr1h	equ	0xFE2
 17871                           fsr1l	equ	0xFE1
 17872                           indf2	equ	0xFDF
 17873                           postinc2	equ	0xFDE
 17874                           postdec2	equ	0xFDD
 17875                           fsr2h	equ	0xFDA
 17876                           fsr2l	equ	0xFD9
 17877                           status	equ	0xFD8
 17878                           
 17879 ;; *************** function _RestartMod *****************
 17880 ;; Defined at:
 17881 ;;		line 2533 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 17882 ;; Parameters:    Size  Location     Type
 17883 ;;		None
 17884 ;; Auto vars:     Size  Location     Type
 17885 ;;		None
 17886 ;; Return value:  Size  Location     Type
 17887 ;;		None               void
 17888 ;; Registers used:
 17889 ;;		None
 17890 ;; Tracked objects:
 17891 ;;		On entry : F/0
 17892 ;;		On exit  : F/0
 17893 ;;		Unchanged: FFFFFFF0/0
 17894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17899 ;;Total ram usage:        0 bytes
 17900 ;; Hardware stack levels used:    1
 17901 ;; Hardware stack levels required when called:    4
 17902 ;; This function calls:
 17903 ;;		Nothing
 17904 ;; This function is called by:
 17905 ;;		_DecSTR
 17906 ;; This function uses a non-reentrant model
 17907 ;;
 17908                           
 17909                           	psect	text62
 17910  00B3D0                     __ptext62:
 17911                           	opt stack 0
 17912  00B3D0                     _RestartMod:
 17913                           	opt stack 25
 17914                           
 17915                           ; BSR set to: 0
 17916                           ;rgl.c: 2534: rgl.btco=0;
 17917                           
 17918                           ; BSR set to: 1
 17919  00B3D0  9027               	bcf	_rgl,0,c
 17920                           
 17921                           ;rgl.c: 2535: rgl.btcw=0;
 17922  00B3D2  9227               	bcf	_rgl,1,c
 17923                           
 17924                           ;rgl.c: 2536: rgl.fz=0;
 17925  00B3D4  9427               	bcf	_rgl,2,c
 17926                           
 17927                           ;rgl.c: 2537: rgl.med_up=0;
 17928  00B3D6  9627               	bcf	_rgl,3,c
 17929                           
 17930                           ;rgl.c: 2538: rgl.fast_up=0;
 17931  00B3D8  9827               	bcf	_rgl,4,c
 17932                           
 17933                           ;rgl.c: 2539: rgl.nmod=0;
 17934  00B3DA  9A27               	bcf	_rgl,5,c
 17935                           
 17936                           ;rgl.c: 2540: rgl.del1s=0;
 17937  00B3DC  9C27               	bcf	_rgl,6,c
 17938                           
 17939                           ;rgl.c: 2541: rgl.deln1=0;
 17940  00B3DE  9E27               	bcf	_rgl,7,c
 17941                           
 17942                           ;rgl.c: 2542: rgl.inv_mod=0;
 17943  00B3E0  9028               	bcf	_rgl+1,0,c
 17944                           
 17945                           ; BSR set to: 0
 17946  00B3E2  0012               	return	
 17947  00B3E4                     __end_of_RestartMod:
 17948                           	opt stack 0
 17949                           tblptru	equ	0xFF8
 17950                           tblptrh	equ	0xFF7
 17951                           tblptrl	equ	0xFF6
 17952                           tablat	equ	0xFF5
 17953                           prodh	equ	0xFF4
 17954                           prodl	equ	0xFF3
 17955                           intcon	equ	0xFF2
 17956                           postinc0	equ	0xFEE
 17957                           wreg	equ	0xFE8
 17958                           indf1	equ	0xFE7
 17959                           postinc1	equ	0xFE6
 17960                           postdec1	equ	0xFE5
 17961                           fsr1h	equ	0xFE2
 17962                           fsr1l	equ	0xFE1
 17963                           indf2	equ	0xFDF
 17964                           postinc2	equ	0xFDE
 17965                           postdec2	equ	0xFDD
 17966                           fsr2h	equ	0xFDA
 17967                           fsr2l	equ	0xFD9
 17968                           status	equ	0xFD8
 17969                           
 17970 ;; *************** function _SetRozruch *****************
 17971 ;; Defined at:
 17972 ;;		line 1990 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 17973 ;; Parameters:    Size  Location     Type
 17974 ;;		None
 17975 ;; Auto vars:     Size  Location     Type
 17976 ;;		None
 17977 ;; Return value:  Size  Location     Type
 17978 ;;		None               void
 17979 ;; Registers used:
 17980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17981 ;; Tracked objects:
 17982 ;;		On entry : F/0
 17983 ;;		On exit  : F/0
 17984 ;;		Unchanged: 0/0
 17985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17990 ;;Total ram usage:        0 bytes
 17991 ;; Hardware stack levels used:    1
 17992 ;; Hardware stack levels required when called:    6
 17993 ;; This function calls:
 17994 ;;		_EndL3
 17995 ;; This function is called by:
 17996 ;;		_DecRozruch
 17997 ;; This function uses a non-reentrant model
 17998 ;;
 17999                           
 18000                           	psect	text63
 18001  00ADB6                     __ptext63:
 18002                           	opt stack 0
 18003  00ADB6                     _SetRozruch:
 18004                           	opt stack 23
 18005                           
 18006                           ; BSR set to: 0
 18007                           ;main.c: 1991: M._BLOKUJ_3M=0;
 18008                           
 18009                           ; BSR set to: 0
 18010  00ADB6  9771               	bcf	(_M+17)& (0+255),3,b
 18011                           
 18012                           ;main.c: 1992: M.BL3=0;
 18013  00ADB8  6B86               	clrf	(_M+38)& (0+255),b
 18014                           
 18015                           ; BSR set to: 0
 18016                           ;main.c: 1993: EndL3();
 18017  00ADBA  ECE9  F05A         	call	_EndL3	;wreg free
 18018                           
 18019                           ; BSR set to: 1
 18020                           ;main.c: 1994: M._RUSZ_48=0;
 18021  00ADBE  0100               	movlb	0	; () banked
 18022  00ADC0  9770               	bcf	(_M+16)& (0+255),3,b
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;main.c: 1995: M.R48=0;
 18026  00ADC2  6B84               	clrf	(_M+36)& (0+255),b
 18027                           
 18028                           ; BSR set to: 0
 18029                           ;main.c: 1996: M._RUSZ_48Z3=0;
 18030  00ADC4  9970               	bcf	(_M+16)& (0+255),4,b
 18031                           
 18032                           ; BSR set to: 0
 18033                           ;main.c: 1997: M.R48Z3=0;
 18034  00ADC6  6B85               	clrf	(_M+37)& (0+255),b
 18035                           
 18036                           ; BSR set to: 0
 18037                           ;main.c: 1998: M._VWYBIEG=0;
 18038  00ADC8  9D70               	bcf	(_M+16)& (0+255),6,b
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;main.c: 1999: M._DE_VNT=0;
 18042  00ADCA  9D7B               	bcf	(_M+27)& (0+255),6,b
 18043                           
 18044                           ; BSR set to: 0
 18045                           ;main.c: 2000: M.VWB=0;
 18046  00ADCC  6B8E               	clrf	(_M+46)& (0+255),b
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;main.c: 2002: M._KCW_PMP=0;
 18050  00ADCE  9B7B               	bcf	(_M+27)& (0+255),5,b
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;main.c: 2003: M.WYL=0;
 18054  00ADD0  6B88               	clrf	(_M+40)& (0+255),b
 18055                           
 18056                           ; BSR set to: 0
 18057                           ;main.c: 2004: M.RPR=0;
 18058  00ADD2  6B89               	clrf	(_M+41)& (0+255),b
 18059                           
 18060                           ; BSR set to: 0
 18061                           ;main.c: 2005: M._WYLACZ=0;
 18062  00ADD4  9170               	bcf	(_M+16)& (0+255),0,b
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;main.c: 2006: M._RUSZ_POMPE=0;
 18066  00ADD6  9571               	bcf	(_M+17)& (0+255),2,b
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;main.c: 2007: M._ROZRUCH=1;
 18070  00ADD8  8570               	bsf	(_M+16)& (0+255),2,b
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;main.c: 2008: M.ROZ=0;
 18074  00ADDA  6B83               	clrf	(_M+35)& (0+255),b
 18075                           
 18076                           ; BSR set to: 0
 18077  00ADDC  0012               	return	
 18078  00ADDE                     __end_of_SetRozruch:
 18079                           	opt stack 0
 18080                           tblptru	equ	0xFF8
 18081                           tblptrh	equ	0xFF7
 18082                           tblptrl	equ	0xFF6
 18083                           tablat	equ	0xFF5
 18084                           prodh	equ	0xFF4
 18085                           prodl	equ	0xFF3
 18086                           intcon	equ	0xFF2
 18087                           postinc0	equ	0xFEE
 18088                           wreg	equ	0xFE8
 18089                           indf1	equ	0xFE7
 18090                           postinc1	equ	0xFE6
 18091                           postdec1	equ	0xFE5
 18092                           fsr1h	equ	0xFE2
 18093                           fsr1l	equ	0xFE1
 18094                           indf2	equ	0xFDF
 18095                           postinc2	equ	0xFDE
 18096                           postdec2	equ	0xFDD
 18097                           fsr2h	equ	0xFDA
 18098                           fsr2l	equ	0xFD9
 18099                           status	equ	0xFD8
 18100                           
 18101 ;; *************** function _EndL3 *****************
 18102 ;; Defined at:
 18103 ;;		line 208 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 18104 ;; Parameters:    Size  Location     Type
 18105 ;;		None
 18106 ;; Auto vars:     Size  Location     Type
 18107 ;;		None
 18108 ;; Return value:  Size  Location     Type
 18109 ;;		None               void
 18110 ;; Registers used:
 18111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18112 ;; Tracked objects:
 18113 ;;		On entry : F/0
 18114 ;;		On exit  : F/1
 18115 ;;		Unchanged: 0/0
 18116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18121 ;;Total ram usage:        0 bytes
 18122 ;; Hardware stack levels used:    1
 18123 ;; Hardware stack levels required when called:    5
 18124 ;; This function calls:
 18125 ;;		_ResetKol
 18126 ;; This function is called by:
 18127 ;;		_SetRozruch
 18128 ;;		_BlokadaL3
 18129 ;; This function uses a non-reentrant model
 18130 ;;
 18131                           
 18132                           	psect	text64
 18133  00B5D2                     __ptext64:
 18134                           	opt stack 0
 18135  00B5D2                     _EndL3:
 18136                           	opt stack 24
 18137                           
 18138                           ; BSR set to: 0
 18139                           ;print.c: 209: PFN._fL3=0;
 18140                           
 18141                           ; BSR set to: 0
 18142  00B5D2  0101               	movlb	1	; () banked
 18143  00B5D4  93BF               	bcf	(_PFN+5)& (0+255),1,b
 18144                           
 18145                           ; BSR set to: 1
 18146                           ;print.c: 210: ResetKol(3);
 18147  00B5D6  0E03               	movlw	3
 18148  00B5D8  EFA4  F058         	goto	_ResetKol
 18149  00B5DC                     __end_of_EndL3:
 18150                           	opt stack 0
 18151                           tblptru	equ	0xFF8
 18152                           tblptrh	equ	0xFF7
 18153                           tblptrl	equ	0xFF6
 18154                           tablat	equ	0xFF5
 18155                           prodh	equ	0xFF4
 18156                           prodl	equ	0xFF3
 18157                           intcon	equ	0xFF2
 18158                           postinc0	equ	0xFEE
 18159                           wreg	equ	0xFE8
 18160                           indf1	equ	0xFE7
 18161                           postinc1	equ	0xFE6
 18162                           postdec1	equ	0xFE5
 18163                           fsr1h	equ	0xFE2
 18164                           fsr1l	equ	0xFE1
 18165                           indf2	equ	0xFDF
 18166                           postinc2	equ	0xFDE
 18167                           postdec2	equ	0xFDD
 18168                           fsr2h	equ	0xFDA
 18169                           fsr2l	equ	0xFD9
 18170                           status	equ	0xFD8
 18171                           
 18172 ;; *************** function _SetWylacz *****************
 18173 ;; Defined at:
 18174 ;;		line 2208 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 18175 ;; Parameters:    Size  Location     Type
 18176 ;;		None
 18177 ;; Auto vars:     Size  Location     Type
 18178 ;;		None
 18179 ;; Return value:  Size  Location     Type
 18180 ;;		None               void
 18181 ;; Registers used:
 18182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 18183 ;; Tracked objects:
 18184 ;;		On entry : E/0
 18185 ;;		On exit  : F/0
 18186 ;;		Unchanged: 0/0
 18187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18192 ;;Total ram usage:        0 bytes
 18193 ;; Hardware stack levels used:    1
 18194 ;; Hardware stack levels required when called:    5
 18195 ;; This function calls:
 18196 ;;		_GrzejOFF
 18197 ;;		_ToObiegCO
 18198 ;;		_SetPrt
 18199 ;; This function is called by:
 18200 ;;		_DecWylacz
 18201 ;; This function uses a non-reentrant model
 18202 ;;
 18203                           
 18204                           	psect	text65
 18205  0095D2                     __ptext65:
 18206                           	opt stack 0
 18207  0095D2                     _SetWylacz:
 18208                           	opt stack 24
 18209                           
 18210                           ;main.c: 2209: GrzejOFF();
 18211                           
 18212                           ; BSR set to: 1
 18213  0095D2  EC74  F058         	call	_GrzejOFF	;wreg free
 18214                           
 18215                           ;main.c: 2212: switch(DtKNF.tpkt)
 18216  0095D6  D015               	goto	l32904
 18217  0095D8                     l1284:
 18218                           
 18219                           ; BSR set to: 1
 18220                           ;main.c: 2215: case 2:
 18221                           ;main.c: 2216: {
 18222                           ;main.c: 2217: if(!PORTDbits.RD2)
 18223  0095D8  B483               	btfsc	3971,2,c	;volatile
 18224  0095DA  D005               	goto	l1285
 18225                           
 18226                           ; BSR set to: 1
 18227                           ;main.c: 2218: {
 18228                           ;main.c: 2219: M._KCW_PMP=1;
 18229  0095DC  0100               	movlb	0	; () banked
 18230  0095DE  8B7B               	bsf	(_M+27)& (0+255),5,b
 18231                           
 18232                           ;main.c: 2220: M._BLOKUJ_15S=1;
 18233  0095E0  8971               	bsf	(_M+17)& (0+255),4,b
 18234                           
 18235                           ;main.c: 2221: M.BL15=0;
 18236  0095E2  6B87               	clrf	(_M+39)& (0+255),b
 18237                           
 18238                           ;main.c: 2222: }
 18239  0095E4  D002               	goto	l32896
 18240  0095E6                     l1285:
 18241                           
 18242                           ; BSR set to: 1
 18243                           ;main.c: 2223: else M._KCW_PMP=0;
 18244  0095E6  0100               	movlb	0	; () banked
 18245  0095E8  9B7B               	bcf	(_M+27)& (0+255),5,b
 18246  0095EA                     l32896:
 18247                           
 18248                           ; BSR set to: 0
 18249                           ;main.c: 2224: ToObiegCO();
 18250  0095EA  EC42  F056         	call	_ToObiegCO	;wreg free
 18251                           
 18252                           ;main.c: 2225: break;
 18253  0095EE  D013               	goto	l1287
 18254  0095F0                     l1289:
 18255                           
 18256                           ; BSR set to: 1
 18257                           ;main.c: 2228: case 3:
 18258                           ;main.c: 2229: {
 18259                           ;main.c: 2230: if(!PORTDbits.RD1)
 18260  0095F0  B283               	btfsc	3971,1,c	;volatile
 18261  0095F2  D011               	goto	l1287
 18262  0095F4                     l32898:
 18263                           
 18264                           ; BSR set to: 1
 18265                           ;main.c: 2231: {
 18266                           ;main.c: 2232: M._BLOKUJ_15S=1;
 18267  0095F4  0100               	movlb	0	; () banked
 18268  0095F6  8971               	bsf	(_M+17)& (0+255),4,b
 18269                           
 18270                           ;main.c: 2233: M.BL15=0;
 18271  0095F8  6B87               	clrf	(_M+39)& (0+255),b
 18272  0095FA  D00D               	goto	l1287
 18273  0095FC                     l1291:
 18274                           
 18275                           ; BSR set to: 1
 18276                           ;main.c: 2238: {
 18277                           ;main.c: 2239: if(!PORTDbits.RD1)
 18278  0095FC  A283               	btfss	3971,1,c	;volatile
 18279  0095FE  D7FA               	goto	l32898
 18280  009600  D00A               	goto	l1287
 18281  009602                     l32904:
 18282  009602  0101               	movlb	1	; () banked
 18283  009604  5151               	movf	(_DtKNF+7)& (0+255),w,b
 18284                           
 18285                           ; Switch size 1, requested type "space"
 18286                           ; Number of cases is 4, Range of values is 0 to 3
 18287                           ; switch strategies available:
 18288                           ; Name         Instructions Cycles
 18289                           ; simple_byte           13     7 (average)
 18290                           ;	Chosen strategy is simple_byte
 18291  009606  E0F4               	bz	l1289
 18292  009608  0A01               	xorlw	1	; case 1
 18293  00960A  E0E6               	bz	l1284
 18294  00960C  0A03               	xorlw	3	; case 2
 18295  00960E  E0E4               	bz	l1284
 18296  009610  0A01               	xorlw	1	; case 3
 18297  009612  E0EE               	bz	l1289
 18298  009614  D7F3               	goto	l1291
 18299  009616                     l1287:
 18300                           
 18301                           ;main.c: 2248: M._WYLACZ=1;
 18302  009616  0100               	movlb	0	; () banked
 18303  009618  8170               	bsf	(_M+16)& (0+255),0,b
 18304                           
 18305                           ;main.c: 2249: if(M._TURBO&&PORTDbits.RD3) M._VWYBIEG=1;
 18306  00961A  B37B               	btfsc	(_M+27)& (0+255),1,b
 18307                           
 18308                           ; BSR set to: 0
 18309  00961C  A683               	btfss	3971,3,c	;volatile
 18310  00961E  D001               	goto	l1293
 18311                           
 18312                           ; BSR set to: 0
 18313  009620  8D70               	bsf	(_M+16)& (0+255),6,b
 18314  009622                     l1293:
 18315                           
 18316                           ; BSR set to: 0
 18317                           ;main.c: 2250: M.ROZ=0;
 18318  009622  6B83               	clrf	(_M+35)& (0+255),b
 18319                           
 18320                           ;main.c: 2251: M.MNM=0;
 18321  009624  6B8C               	clrf	(_M+44)& (0+255),b
 18322                           
 18323                           ;main.c: 2252: M._ROZRUCH=0;
 18324  009626  9570               	bcf	(_M+16)& (0+255),2,b
 18325                           
 18326                           ;main.c: 2253: M._RUN_MNMOD=0;
 18327  009628  997B               	bcf	(_M+27)& (0+255),4,b
 18328                           
 18329                           ;main.c: 2256: DtCO._on_DZ_CO=0;
 18330  00962A  9BE4               	bcf	_DtCO& (0+255),5,b
 18331                           
 18332                           ; BSR set to: 0
 18333                           ;main.c: 2257: SetPrt(9,0);
 18334  00962C  6A1E               	clrf	?_SetPrt,c
 18335  00962E  0E09               	movlw	9
 18336  009630  EC0E  F053         	call	_SetPrt
 18337                           
 18338                           ; BSR set to: 0
 18339                           ;main.c: 2258: DtCW._on_DZ_CW=0;
 18340  009634  99CF               	bcf	_DtCW& (0+255),4,b
 18341                           
 18342                           ;main.c: 2259: SetPrt(10,0);
 18343  009636  6A1E               	clrf	?_SetPrt,c
 18344  009638  0E0A               	movlw	10
 18345  00963A  EF0E  F053         	goto	_SetPrt
 18346  00963E                     __end_of_SetWylacz:
 18347                           	opt stack 0
 18348                           tblptru	equ	0xFF8
 18349                           tblptrh	equ	0xFF7
 18350                           tblptrl	equ	0xFF6
 18351                           tablat	equ	0xFF5
 18352                           prodh	equ	0xFF4
 18353                           prodl	equ	0xFF3
 18354                           intcon	equ	0xFF2
 18355                           postinc0	equ	0xFEE
 18356                           wreg	equ	0xFE8
 18357                           indf1	equ	0xFE7
 18358                           postinc1	equ	0xFE6
 18359                           postdec1	equ	0xFE5
 18360                           fsr1h	equ	0xFE2
 18361                           fsr1l	equ	0xFE1
 18362                           indf2	equ	0xFDF
 18363                           postinc2	equ	0xFDE
 18364                           postdec2	equ	0xFDD
 18365                           fsr2h	equ	0xFDA
 18366                           fsr2l	equ	0xFD9
 18367                           status	equ	0xFD8
 18368                           
 18369 ;; *************** function _SetL3 *****************
 18370 ;; Defined at:
 18371 ;;		line 182 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 18372 ;; Parameters:    Size  Location     Type
 18373 ;;		None
 18374 ;; Auto vars:     Size  Location     Type
 18375 ;;		None
 18376 ;; Return value:  Size  Location     Type
 18377 ;;		None               void
 18378 ;; Registers used:
 18379 ;;		None
 18380 ;; Tracked objects:
 18381 ;;		On entry : E/0
 18382 ;;		On exit  : F/1
 18383 ;;		Unchanged: FFFFFFF0/0
 18384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18389 ;;Total ram usage:        0 bytes
 18390 ;; Hardware stack levels used:    1
 18391 ;; Hardware stack levels required when called:    4
 18392 ;; This function calls:
 18393 ;;		Nothing
 18394 ;; This function is called by:
 18395 ;;		_DecWylacz
 18396 ;;		_BlokadaL3
 18397 ;; This function uses a non-reentrant model
 18398 ;;
 18399                           
 18400                           	psect	text66
 18401  00B640                     __ptext66:
 18402                           	opt stack 0
 18403  00B640                     _SetL3:
 18404                           	opt stack 25
 18405                           
 18406                           ;print.c: 183: PFN._fL3=1;
 18407                           
 18408                           ; BSR set to: 0
 18409  00B640  0101               	movlb	1	; () banked
 18410  00B642  83BF               	bsf	(_PFN+5)& (0+255),1,b
 18411                           
 18412                           ; BSR set to: 1
 18413  00B644  0012               	return	
 18414  00B646                     __end_of_SetL3:
 18415                           	opt stack 0
 18416                           tblptru	equ	0xFF8
 18417                           tblptrh	equ	0xFF7
 18418                           tblptrl	equ	0xFF6
 18419                           tablat	equ	0xFF5
 18420                           prodh	equ	0xFF4
 18421                           prodl	equ	0xFF3
 18422                           intcon	equ	0xFF2
 18423                           postinc0	equ	0xFEE
 18424                           wreg	equ	0xFE8
 18425                           indf1	equ	0xFE7
 18426                           postinc1	equ	0xFE6
 18427                           postdec1	equ	0xFE5
 18428                           fsr1h	equ	0xFE2
 18429                           fsr1l	equ	0xFE1
 18430                           indf2	equ	0xFDF
 18431                           postinc2	equ	0xFDE
 18432                           postdec2	equ	0xFDD
 18433                           fsr2h	equ	0xFDA
 18434                           fsr2l	equ	0xFD9
 18435                           status	equ	0xFD8
 18436                           
 18437 ;; *************** function _GrzejON *****************
 18438 ;; Defined at:
 18439 ;;		line 2398 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 18440 ;; Parameters:    Size  Location     Type
 18441 ;;		None
 18442 ;; Auto vars:     Size  Location     Type
 18443 ;;		None
 18444 ;; Return value:  Size  Location     Type
 18445 ;;		None               void
 18446 ;; Registers used:
 18447 ;;		None
 18448 ;; Tracked objects:
 18449 ;;		On entry : E/0
 18450 ;;		On exit  : 0/0
 18451 ;;		Unchanged: 0/0
 18452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18457 ;;Total ram usage:        0 bytes
 18458 ;; Hardware stack levels used:    1
 18459 ;; Hardware stack levels required when called:    4
 18460 ;; This function calls:
 18461 ;;		Nothing
 18462 ;; This function is called by:
 18463 ;;		_Rozruch
 18464 ;; This function uses a non-reentrant model
 18465 ;;
 18466                           
 18467                           	psect	text67
 18468  00B364                     __ptext67:
 18469                           	opt stack 0
 18470  00B364                     _GrzejON:
 18471                           	opt stack 25
 18472                           
 18473                           ;main.c: 2399: PORTDbits.RD0=1;
 18474                           
 18475                           ; BSR set to: 1
 18476  00B364  8083               	bsf	3971,0,c	;volatile
 18477  00B366  F000               	nop		;# 
 18478  00B368  F000               	nop		;# 
 18479  00B36A  F000               	nop		;# 
 18480  00B36C  F000               	nop		;# 
 18481  00B36E  F000               	nop		;# 
 18482  00B370  F000               	nop		;# 
 18483  00B372  F000               	nop		;# 
 18484  00B374  F000               	nop		;# 
 18485                           
 18486                           ;main.c: 2408: PORTDbits.RD3=1;
 18487  00B376  8683               	bsf	3971,3,c	;volatile
 18488  00B378  0012               	return	
 18489  00B37A                     __end_of_GrzejON:
 18490                           	opt stack 0
 18491                           tblptru	equ	0xFF8
 18492                           tblptrh	equ	0xFF7
 18493                           tblptrl	equ	0xFF6
 18494                           tablat	equ	0xFF5
 18495                           prodh	equ	0xFF4
 18496                           prodl	equ	0xFF3
 18497                           intcon	equ	0xFF2
 18498                           postinc0	equ	0xFEE
 18499                           wreg	equ	0xFE8
 18500                           indf1	equ	0xFE7
 18501                           postinc1	equ	0xFE6
 18502                           postdec1	equ	0xFE5
 18503                           fsr1h	equ	0xFE2
 18504                           fsr1l	equ	0xFE1
 18505                           indf2	equ	0xFDF
 18506                           postinc2	equ	0xFDE
 18507                           postdec2	equ	0xFDD
 18508                           fsr2h	equ	0xFDA
 18509                           fsr2l	equ	0xFD9
 18510                           status	equ	0xFD8
 18511                           
 18512 ;; *************** function _DecyzjaPLM *****************
 18513 ;; Defined at:
 18514 ;;		line 2627 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 18515 ;; Parameters:    Size  Location     Type
 18516 ;;		None
 18517 ;; Auto vars:     Size  Location     Type
 18518 ;;		None
 18519 ;; Return value:  Size  Location     Type
 18520 ;;		None               void
 18521 ;; Registers used:
 18522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18523 ;; Tracked objects:
 18524 ;;		On entry : F/0
 18525 ;;		On exit  : E/0
 18526 ;;		Unchanged: 0/0
 18527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18532 ;;Total ram usage:        0 bytes
 18533 ;; Hardware stack levels used:    1
 18534 ;; Hardware stack levels required when called:    9
 18535 ;; This function calls:
 18536 ;;		_PrintErr
 18537 ;;		_ErrPTG
 18538 ;; This function is called by:
 18539 ;;		_Rozruch
 18540 ;; This function uses a non-reentrant model
 18541 ;;
 18542                           
 18543                           	psect	text68
 18544  00B0C8                     __ptext68:
 18545                           	opt stack 0
 18546  00B0C8                     _DecyzjaPLM:
 18547                           	opt stack 20
 18548                           
 18549                           ; BSR set to: 0
 18550                           ;main.c: 2628: if(M._OST_PL)
 18551  00B0C8  A77B               	btfss	(_M+27)& (0+255),3,b
 18552  00B0CA  D007               	goto	l1397
 18553                           
 18554                           ; BSR set to: 0
 18555                           ;main.c: 2629: {
 18556                           ;main.c: 2630: M.ERR_BTY=0x01;
 18557  00B0CC  0E01               	movlw	1
 18558  00B0CE  6F82               	movwf	(_M+34)& (0+255),b
 18559                           
 18560                           ; BSR set to: 0
 18561                           ;main.c: 2631: PrintErr(0x01,1);
 18562  00B0D0  6E25               	movwf	?_PrintErr,c
 18563  00B0D2  ECA6  F047         	call	_PrintErr
 18564                           
 18565                           ; BSR set to: 1
 18566                           ;main.c: 2632: ErrPTG();
 18567  00B0D6  EF27  F02C         	goto	_ErrPTG	;wreg free
 18568  00B0DA                     l1397:
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;main.c: 2634: else
 18572                           ;main.c: 2635: {
 18573                           ;main.c: 2636: M._RUSZ_PLOMIEN=1;
 18574  00B0DA  8171               	bsf	(_M+17)& (0+255),0,b
 18575                           
 18576                           ;main.c: 2637: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
 18577  00B0DC  677D               	tstfsz	(_M+29)& (0+255),b
 18578  00B0DE  D001               	goto	l1399
 18579                           
 18580                           ; BSR set to: 0
 18581  00B0E0  8371               	bsf	(_M+17)& (0+255),1,b
 18582  00B0E2                     l1399:
 18583                           
 18584                           ; BSR set to: 0
 18585                           ;main.c: 2638: M._ROZRUCH=0;
 18586  00B0E2  9570               	bcf	(_M+16)& (0+255),2,b
 18587                           
 18588                           ;main.c: 2639: M.ROZ=0;
 18589  00B0E4  6B83               	clrf	(_M+35)& (0+255),b
 18590  00B0E6  0012               	return	
 18591  00B0E8                     __end_of_DecyzjaPLM:
 18592                           	opt stack 0
 18593                           tblptru	equ	0xFF8
 18594                           tblptrh	equ	0xFF7
 18595                           tblptrl	equ	0xFF6
 18596                           tablat	equ	0xFF5
 18597                           prodh	equ	0xFF4
 18598                           prodl	equ	0xFF3
 18599                           intcon	equ	0xFF2
 18600                           postinc0	equ	0xFEE
 18601                           wreg	equ	0xFE8
 18602                           indf1	equ	0xFE7
 18603                           postinc1	equ	0xFE6
 18604                           postdec1	equ	0xFE5
 18605                           fsr1h	equ	0xFE2
 18606                           fsr1l	equ	0xFE1
 18607                           indf2	equ	0xFDF
 18608                           postinc2	equ	0xFDE
 18609                           postdec2	equ	0xFDD
 18610                           fsr2h	equ	0xFDA
 18611                           fsr2l	equ	0xFD9
 18612                           status	equ	0xFD8
 18613                           
 18614 ;; *************** function _DecyzjaPLM2 *****************
 18615 ;; Defined at:
 18616 ;;		line 2643 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 18617 ;; Parameters:    Size  Location     Type
 18618 ;;		None
 18619 ;; Auto vars:     Size  Location     Type
 18620 ;;		None
 18621 ;; Return value:  Size  Location     Type
 18622 ;;		None               void
 18623 ;; Registers used:
 18624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18625 ;; Tracked objects:
 18626 ;;		On entry : F/0
 18627 ;;		On exit  : E/0
 18628 ;;		Unchanged: 0/0
 18629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18634 ;;Total ram usage:        0 bytes
 18635 ;; Hardware stack levels used:    1
 18636 ;; Hardware stack levels required when called:    9
 18637 ;; This function calls:
 18638 ;;		_PrintErr
 18639 ;;		_ErrPTG
 18640 ;;		_RdPrt
 18641 ;; This function is called by:
 18642 ;;		_Rozruch
 18643 ;; This function uses a non-reentrant model
 18644 ;;
 18645                           
 18646                           	psect	text69
 18647  009B94                     __ptext69:
 18648                           	opt stack 0
 18649  009B94                     _DecyzjaPLM2:
 18650                           	opt stack 20
 18651                           
 18652                           ; BSR set to: 0
 18653                           ;main.c: 2644: if(M._TURBO)
 18654  009B94  A37B               	btfss	(_M+27)& (0+255),1,b
 18655  009B96  D024               	goto	l1403
 18656                           
 18657                           ; BSR set to: 0
 18658                           ;main.c: 2645: {
 18659                           ;main.c: 2646: if(PORTDbits.RD3)
 18660  009B98  A683               	btfss	3971,3,c	;volatile
 18661  009B9A  D014               	goto	l40628
 18662                           
 18663                           ; BSR set to: 0
 18664                           ;main.c: 2647: {
 18665                           ;main.c: 2649: if(PORTAbits.RA6&&PORTAbits.RA7)
 18666  009B9C  BC80               	btfsc	3968,6,c	;volatile
 18667                           
 18668                           ; BSR set to: 0
 18669  009B9E  AE80               	btfss	3968,7,c	;volatile
 18670  009BA0  0012               	return	
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;main.c: 2650: {
 18674                           ;main.c: 2651: if(M._OST_PL)
 18675  009BA2  A77B               	btfss	(_M+27)& (0+255),3,b
 18676  009BA4  D007               	goto	l1406
 18677                           
 18678                           ; BSR set to: 0
 18679                           ;main.c: 2652: {
 18680                           ;main.c: 2653: M.ERR_BTY=0x01;
 18681  009BA6  0E01               	movlw	1
 18682  009BA8  6F82               	movwf	(_M+34)& (0+255),b
 18683                           
 18684                           ; BSR set to: 0
 18685                           ;main.c: 2654: PrintErr(0x01,1);
 18686  009BAA  6E25               	movwf	?_PrintErr,c
 18687  009BAC  ECA6  F047         	call	_PrintErr
 18688                           
 18689                           ; BSR set to: 1
 18690                           ;main.c: 2655: ErrPTG();
 18691  009BB0  EF27  F02C         	goto	_ErrPTG	;wreg free
 18692  009BB4                     l1406:
 18693                           
 18694                           ; BSR set to: 0
 18695                           ;main.c: 2657: else
 18696                           ;main.c: 2658: {
 18697                           ;main.c: 2659: M.RPL=0;
 18698  009BB4  6B8A               	clrf	(_M+42)& (0+255),b
 18699                           
 18700                           ;main.c: 2660: M._RUSZ_PLOMIEN=1;
 18701  009BB6  8171               	bsf	(_M+17)& (0+255),0,b
 18702                           
 18703                           ;main.c: 2661: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
 18704  009BB8  677D               	tstfsz	(_M+29)& (0+255),b
 18705  009BBA  D001               	goto	l1408
 18706                           
 18707                           ; BSR set to: 0
 18708  009BBC  8371               	bsf	(_M+17)& (0+255),1,b
 18709  009BBE                     l1408:
 18710                           
 18711                           ; BSR set to: 0
 18712                           ;main.c: 2662: M._ROZRUCH=0;
 18713  009BBE  9570               	bcf	(_M+16)& (0+255),2,b
 18714                           
 18715                           ;main.c: 2663: M.ROZ=0;
 18716  009BC0  6B83               	clrf	(_M+35)& (0+255),b
 18717  009BC2  0012               	return	
 18718  009BC4                     l40628:
 18719                           
 18720                           ; BSR set to: 0
 18721                           ;main.c: 2667: else
 18722                           ;main.c: 2668: {
 18723                           ;main.c: 2669: if(RdPrt(4))
 18724  009BC4  0E04               	movlw	4
 18725  009BC6  EC84  F058         	call	_RdPrt
 18726  009BCA  A0D8               	btfss	status,0,c
 18727  009BCC  0012               	return	
 18728                           
 18729                           ; BSR set to: 0
 18730                           ;main.c: 2670: {
 18731                           ;main.c: 2671: if(M._OST_PL)
 18732  009BCE  A77B               	btfss	(_M+27)& (0+255),3,b
 18733  009BD0  D7F1               	goto	l1406
 18734                           
 18735                           ; BSR set to: 0
 18736                           ;main.c: 2672: {
 18737                           ;main.c: 2673: M.ERR_BTY=0x01;
 18738  009BD2  0E01               	movlw	1
 18739  009BD4  6F82               	movwf	(_M+34)& (0+255),b
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;main.c: 2674: PrintErr(0x01,1);
 18743  009BD6  6E25               	movwf	?_PrintErr,c
 18744  009BD8  ECA6  F047         	call	_PrintErr
 18745  009BDC  EF27  F02C         	goto	_ErrPTG
 18746  009BE0                     l1403:
 18747                           
 18748                           ; BSR set to: 0
 18749                           ;main.c: 2688: else
 18750                           ;main.c: 2689: {
 18751                           ;main.c: 2691: if(PORTCbits.RC0&&PORTAbits.RA7)
 18752  009BE0  B082               	btfsc	3970,0,c	;volatile
 18753                           
 18754                           ; BSR set to: 0
 18755  009BE2  AE80               	btfss	3968,7,c	;volatile
 18756  009BE4  0012               	return	
 18757                           
 18758                           ; BSR set to: 0
 18759                           ;main.c: 2692: {
 18760                           ;main.c: 2693: if(M._OST_PL)
 18761  009BE6  A77B               	btfss	(_M+27)& (0+255),3,b
 18762  009BE8  D7E5               	goto	l1406
 18763                           
 18764                           ; BSR set to: 0
 18765                           ;main.c: 2694: {
 18766                           ;main.c: 2695: M.ERR_BTY=0x01;
 18767  009BEA  0E01               	movlw	1
 18768  009BEC  6F82               	movwf	(_M+34)& (0+255),b
 18769                           
 18770                           ; BSR set to: 0
 18771                           ;main.c: 2696: PrintErr(0x01,1);
 18772  009BEE  6E25               	movwf	?_PrintErr,c
 18773  009BF0  ECA6  F047         	call	_PrintErr
 18774  009BF4  EF27  F02C         	goto	_ErrPTG
 18775  009BF8                     __end_of_DecyzjaPLM2:
 18776                           	opt stack 0
 18777                           tblptru	equ	0xFF8
 18778                           tblptrh	equ	0xFF7
 18779                           tblptrl	equ	0xFF6
 18780                           tablat	equ	0xFF5
 18781                           prodh	equ	0xFF4
 18782                           prodl	equ	0xFF3
 18783                           intcon	equ	0xFF2
 18784                           postinc0	equ	0xFEE
 18785                           wreg	equ	0xFE8
 18786                           indf1	equ	0xFE7
 18787                           postinc1	equ	0xFE6
 18788                           postdec1	equ	0xFE5
 18789                           fsr1h	equ	0xFE2
 18790                           fsr1l	equ	0xFE1
 18791                           indf2	equ	0xFDF
 18792                           postinc2	equ	0xFDE
 18793                           postdec2	equ	0xFDD
 18794                           fsr2h	equ	0xFDA
 18795                           fsr2l	equ	0xFD9
 18796                           status	equ	0xFD8
 18797                           
 18798 ;; *************** function _PrintErr *****************
 18799 ;; Defined at:
 18800 ;;		line 69 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 18801 ;; Parameters:    Size  Location     Type
 18802 ;;  kod             1    wreg     const unsigned char 
 18803 ;;  pls             1   36[COMRAM] const unsigned char 
 18804 ;; Auto vars:     Size  Location     Type
 18805 ;;  kod             1   37[COMRAM] const unsigned char 
 18806 ;; Return value:  Size  Location     Type
 18807 ;;		None               void
 18808 ;; Registers used:
 18809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18810 ;; Tracked objects:
 18811 ;;		On entry : E/0
 18812 ;;		On exit  : F/1
 18813 ;;		Unchanged: 0/0
 18814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18815 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18819 ;;Total ram usage:        2 bytes
 18820 ;; Hardware stack levels used:    1
 18821 ;; Hardware stack levels required when called:    5
 18822 ;; This function calls:
 18823 ;;		_SetData
 18824 ;;		_SetStatus
 18825 ;;		_SetPoz
 18826 ;; This function is called by:
 18827 ;;		_main
 18828 ;;		_DecWSW
 18829 ;;		_DecERR
 18830 ;;		_Rozruch
 18831 ;;		_DecyzjaPLM
 18832 ;;		_DecyzjaPLM2
 18833 ;;		_OczekujNaPrzeplywWG
 18834 ;;		_RuszCiag
 18835 ;; This function uses a non-reentrant model
 18836 ;;
 18837                           
 18838                           	psect	text70
 18839  008F4C                     __ptext70:
 18840                           	opt stack 0
 18841  008F4C                     _PrintErr:
 18842                           	opt stack 24
 18843                           
 18844                           ;PrintErr@kod stored from wreg
 18845  008F4C  CFE8 F026          	movff	wreg,PrintErr@kod
 18846                           
 18847                           ;print.c: 70: SetData(&DWD[0],0,kod);
 18848  008F50  0102               	movlb	2	; () banked
 18849  008F52  0E02               	movlw	high _DWD
 18850  008F54  6E1F               	movwf	?_SetData+1,c
 18851  008F56  0EBB               	movlw	low _DWD
 18852  008F58  6E1E               	movwf	?_SetData,c
 18853  008F5A  0E00               	movlw	0
 18854  008F5C  6A20               	clrf	?_SetData+2,c
 18855  008F5E  C026  F021         	movff	PrintErr@kod,?_SetData+3
 18856  008F62  EC42  F058         	call	_SetData	;wreg free
 18857                           
 18858                           ;print.c: 71: SetData(&DWD[1],0,kod);
 18859  008F66  0E02               	movlw	high (_DWD+4)
 18860  008F68  6E1F               	movwf	?_SetData+1,c
 18861  008F6A  0EBF               	movlw	low (_DWD+4)
 18862  008F6C  6E1E               	movwf	?_SetData,c
 18863  008F6E  0E00               	movlw	0
 18864  008F70  6A20               	clrf	?_SetData+2,c
 18865  008F72  C026  F021         	movff	PrintErr@kod,?_SetData+3
 18866  008F76  EC42  F058         	call	_SetData	;wreg free
 18867                           
 18868                           ;print.c: 72: SetStatus(&DWD[0],0b0010000000000000|0b0000000000100000|0b00000100,0b11111
      +                          11111111111);
 18869  008F7A  0E02               	movlw	high _DWD
 18870  008F7C  6E1F               	movwf	?_SetStatus+1,c
 18871  008F7E  0EBB               	movlw	low _DWD
 18872  008F80  6E1E               	movwf	?_SetStatus,c
 18873  008F82  0E20               	movlw	32
 18874  008F84  D823               	call	PL80	;call to abstracted procedure
 18875  008F86  ECF3  F034         	call	_SetStatus	;wreg free
 18876                           
 18877                           ; BSR set to: 2
 18878                           ;print.c: 73: if(pls) SetStatus(&DWD[1],0b0010000000000000|0b0000000000010000|0b00000100
      +                          ,0b1111111111111111);
 18879  008F8A  5025               	movf	PrintErr@pls,w,c
 18880  008F8C  E00E               	bz	l36904
 18881                           
 18882                           ; BSR set to: 2
 18883  008F8E  0E02               	movlw	high (_DWD+4)
 18884  008F90  6E1F               	movwf	?_SetStatus+1,c
 18885  008F92  0EBF               	movlw	low (_DWD+4)
 18886  008F94  6E1E               	movwf	?_SetStatus,c
 18887  008F96  0E20               	movlw	32
 18888  008F98  6E21               	movwf	?_SetStatus+3,c
 18889  008F9A  0E14               	movlw	20
 18890  008F9C  6E20               	movwf	?_SetStatus+2,c
 18891  008F9E  0EFF               	movlw	255
 18892  008FA0  6823               	setf	?_SetStatus+5,c
 18893  008FA2  6822               	setf	?_SetStatus+4,c
 18894  008FA4  ECF3  F034         	call	_SetStatus	;wreg free
 18895  008FA8  D008               	goto	l36906
 18896  008FAA                     l36904:
 18897                           
 18898                           ; BSR set to: 2
 18899                           ;print.c: 74: else SetStatus(&DWD[1],0b0010000000000000|0b0000000000100000|0b00000100,0b
      +                          1111111111111111);
 18900  008FAA  0E02               	movlw	high (_DWD+4)
 18901  008FAC  6E1F               	movwf	?_SetStatus+1,c
 18902  008FAE  0EBF               	movlw	low (_DWD+4)
 18903  008FB0  6E1E               	movwf	?_SetStatus,c
 18904  008FB2  0E20               	movlw	32
 18905  008FB4  D80B               	call	PL80	;call to abstracted procedure
 18906  008FB6  ECF3  F034         	call	_SetStatus	;wreg free
 18907  008FBA                     l36906:
 18908                           
 18909                           ; BSR set to: 2
 18910                           ;print.c: 75: SetPoz(0,0);
 18911  008FBA  0E00               	movlw	0
 18912  008FBC  6A1E               	clrf	?_SetPoz,c
 18913  008FBE  ECEC  F047         	call	_SetPoz
 18914                           
 18915                           ; BSR set to: 1
 18916                           ;print.c: 76: SetPoz(0,1);
 18917  008FC2  0E01               	movlw	1
 18918  008FC4  6E1E               	movwf	?_SetPoz,c
 18919  008FC6  0E00               	movlw	0
 18920  008FC8  EFEC  F047         	goto	_SetPoz
 18921  008FCC                     __end_of_PrintErr:
 18922                           	opt stack 0
 18923  008FCC                     PL80:
 18924                           	opt stack 24
 18925  008FCC  6E21               	movwf	?_SetStatus+3,c
 18926  008FCE  0E24               	movlw	36
 18927  008FD0  6E20               	movwf	?_SetStatus+2,c
 18928  008FD2  6823               	setf	?_SetStatus+5,c
 18929  008FD4  6822               	setf	?_SetStatus+4,c
 18930  008FD6  0CFF               	retlw	255
 18931  008FD8                     __end_ofPL80:
 18932                           	opt stack 0
 18933                           tblptru	equ	0xFF8
 18934                           tblptrh	equ	0xFF7
 18935                           tblptrl	equ	0xFF6
 18936                           tablat	equ	0xFF5
 18937                           prodh	equ	0xFF4
 18938                           prodl	equ	0xFF3
 18939                           intcon	equ	0xFF2
 18940                           postinc0	equ	0xFEE
 18941                           wreg	equ	0xFE8
 18942                           indf1	equ	0xFE7
 18943                           postinc1	equ	0xFE6
 18944                           postdec1	equ	0xFE5
 18945                           fsr1h	equ	0xFE2
 18946                           fsr1l	equ	0xFE1
 18947                           indf2	equ	0xFDF
 18948                           postinc2	equ	0xFDE
 18949                           postdec2	equ	0xFDD
 18950                           fsr2h	equ	0xFDA
 18951                           fsr2l	equ	0xFD9
 18952                           status	equ	0xFD8
 18953                           
 18954 ;; *************** function _ErrPTG *****************
 18955 ;; Defined at:
 18956 ;;		line 3630 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 18957 ;; Parameters:    Size  Location     Type
 18958 ;;		None
 18959 ;; Auto vars:     Size  Location     Type
 18960 ;;		None
 18961 ;; Return value:  Size  Location     Type
 18962 ;;		None               void
 18963 ;; Registers used:
 18964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18965 ;; Tracked objects:
 18966 ;;		On entry : E/1
 18967 ;;		On exit  : E/0
 18968 ;;		Unchanged: 0/0
 18969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18974 ;;Total ram usage:        0 bytes
 18975 ;; Hardware stack levels used:    1
 18976 ;; Hardware stack levels required when called:    8
 18977 ;; This function calls:
 18978 ;;		_GrzejOFF
 18979 ;;		_VZPauza
 18980 ;;		_Busy_eep
 18981 ;;		_Write_b_eep
 18982 ;;		_WritePWM
 18983 ;;		_PomiarPCO
 18984 ;;		_PomiarPCW
 18985 ;;		_PomiarPFN
 18986 ;;		_PomiarCO
 18987 ;;		_PomiarCW
 18988 ;;		_PomiarCS
 18989 ;;		_Proba48
 18990 ;;		_Proba48Z3
 18991 ;;		_RefInterfaceData
 18992 ;;		_RdPrt
 18993 ;;		_ToObiegCO
 18994 ;;		_ToObiegCW
 18995 ;;		_ZmienKCOKCW
 18996 ;;		_Wylacz
 18997 ;;		_VWybieg
 18998 ;;		_Rusz48
 18999 ;;		_Rusz48Z3
 19000 ;;		_KeyRes
 19001 ;;		_ToReset
 19002 ;; This function is called by:
 19003 ;;		_main
 19004 ;;		_DecERR
 19005 ;;		_Rozruch
 19006 ;;		_DecyzjaPLM
 19007 ;;		_DecyzjaPLM2
 19008 ;;		_OczekujNaPrzeplywWG
 19009 ;;		_RuszCiag
 19010 ;; This function uses a non-reentrant model
 19011 ;;
 19012                           
 19013                           	psect	text71
 19014  00584E                     __ptext71:
 19015                           	opt stack 0
 19016  00584E                     _ErrPTG:
 19017                           	opt stack 21
 19018                           
 19019                           ;main.c: 3634: GrzejOFF();
 19020                           
 19021                           ; BSR set to: 1
 19022  00584E  EC74  F058         	call	_GrzejOFF	;wreg free
 19023                           
 19024                           ;main.c: 3635: VZPauza();
 19025  005852  EC59  F056         	call	_VZPauza	;wreg free
 19026                           
 19027                           ; BSR set to: 1
 19028                           ;main.c: 3636: if(DtKNF.robg==0)
 19029  005856  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 19030  005858  D00D               	goto	l36922
 19031                           
 19032                           ; BSR set to: 1
 19033                           ;main.c: 3637: {
 19034                           ;main.c: 3638: if(M.ERR_BTY==5)
 19035  00585A  0100               	movlb	0	; () banked
 19036  00585C  5182               	movf	(_M+34)& (0+255),w,b
 19037  00585E  0A05               	xorlw	5
 19038  005860  E109               	bnz	l36922
 19039                           
 19040                           ; BSR set to: 0
 19041                           ;main.c: 3639: {
 19042                           ;main.c: 3640: (Busy_eep(), Write_b_eep(0x00C0,M.ERR_BTY));
 19043  005862  EC29  F05B         	call	_Busy_eep	;wreg free
 19044                           
 19045                           ; BSR set to: 0
 19046  005866  6A1F               	clrf	?_Write_b_eep+1,c
 19047  005868  0EC0               	movlw	192
 19048  00586A  6E1E               	movwf	?_Write_b_eep,c
 19049  00586C  C082  F020         	movff	_M+34,?_Write_b_eep+2
 19050  005870  EC83  F053         	call	_Write_b_eep	;wreg free
 19051  005874                     l36922:
 19052                           
 19053                           ;main.c: 3641: }
 19054                           ;main.c: 3642: }
 19055                           ;main.c: 3643: if((M.ERR_BTY>=1)&&(M.ERR_BTY<=3)) (Busy_eep(), Write_b_eep(0x00C0,M.ERR_
      +                          BTY));
 19056  005874  0100               	movlb	0	; () banked
 19057  005876  5182               	movf	(_M+34)& (0+255),w,b
 19058  005878  E00C               	bz	l36930
 19059                           
 19060                           ; BSR set to: 0
 19061  00587A  0E04               	movlw	4
 19062  00587C  6182               	cpfslt	(_M+34)& (0+255),b
 19063  00587E  D009               	goto	l36930
 19064                           
 19065                           ; BSR set to: 0
 19066  005880  EC29  F05B         	call	_Busy_eep	;wreg free
 19067                           
 19068                           ; BSR set to: 0
 19069  005884  6A1F               	clrf	?_Write_b_eep+1,c
 19070  005886  0EC0               	movlw	192
 19071  005888  6E1E               	movwf	?_Write_b_eep,c
 19072  00588A  C082  F020         	movff	_M+34,?_Write_b_eep+2
 19073  00588E  EC83  F053         	call	_Write_b_eep	;wreg free
 19074  005892                     l36930:
 19075                           
 19076                           ;main.c: 3644: M._RUSZ_POMPE=0;
 19077  005892  0100               	movlb	0	; () banked
 19078  005894  9571               	bcf	(_M+17)& (0+255),2,b
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;main.c: 3645: M._ROZRUCH=0;
 19082  005896  9570               	bcf	(_M+16)& (0+255),2,b
 19083                           
 19084                           ; BSR set to: 0
 19085                           ;main.c: 3646: M._MODULUJ=0;
 19086  005898  9B71               	bcf	(_M+17)& (0+255),5,b
 19087                           
 19088                           ; BSR set to: 0
 19089                           ;main.c: 3647: WritePWM(0);
 19090  00589A  0E00               	movlw	0
 19091  00589C  ECF2  F059         	call	_WritePWM
 19092                           
 19093                           ; BSR set to: 0
 19094                           ;main.c: 3648: if(!M._WYLACZ)
 19095  0058A0  B170               	btfsc	(_M+16)& (0+255),0,b
 19096  0058A2  D014               	goto	l1733
 19097                           
 19098                           ; BSR set to: 0
 19099                           ;main.c: 3649: {
 19100                           ;main.c: 3650: M.WYL=0;
 19101  0058A4  6B88               	clrf	(_M+40)& (0+255),b
 19102                           
 19103                           ;main.c: 3651: switch(DtKNF.tpkt)
 19104  0058A6  D009               	goto	l36954
 19105  0058A8                     l1736:
 19106                           
 19107                           ; BSR set to: 1
 19108                           ;main.c: 3654: case 2:
 19109                           ;main.c: 3655: {
 19110                           ;main.c: 3656: if(PORTDbits.RD2) M._WYLACZ=1;
 19111  0058A8  A483               	btfss	3971,2,c	;volatile
 19112  0058AA  D010               	goto	l1733
 19113  0058AC                     l36942:
 19114  0058AC  0100               	movlb	0	; () banked
 19115  0058AE  8170               	bsf	(_M+16)& (0+255),0,b
 19116  0058B0  D00D               	goto	l1733
 19117  0058B2                     l1744:
 19118                           
 19119                           ; BSR set to: 1
 19120                           ;main.c: 3668: {
 19121                           ;main.c: 3669: if(M._ZMKCOCW) M._WYLACZ=1;
 19122  0058B2  0100               	movlb	0	; () banked
 19123  0058B4  B370               	btfsc	(_M+16)& (0+255),1,b
 19124  0058B6  D7FA               	goto	l36942
 19125  0058B8  D7F7               	goto	l1736
 19126  0058BA                     l36954:
 19127                           
 19128                           ; BSR set to: 0
 19129  0058BA  0101               	movlb	1	; () banked
 19130  0058BC  5151               	movf	(_DtKNF+7)& (0+255),w,b
 19131                           
 19132                           ; Switch size 1, requested type "space"
 19133                           ; Number of cases is 4, Range of values is 0 to 3
 19134                           ; switch strategies available:
 19135                           ; Name         Instructions Cycles
 19136                           ; simple_byte           13     7 (average)
 19137                           ;	Chosen strategy is simple_byte
 19138  0058BE  E0F9               	bz	l1744
 19139  0058C0  0A01               	xorlw	1	; case 1
 19140  0058C2  E0F2               	bz	l1736
 19141  0058C4  0A03               	xorlw	3	; case 2
 19142  0058C6  E0F0               	bz	l1736
 19143  0058C8  0A01               	xorlw	1	; case 3
 19144  0058CA  D7F3               	goto	l1744
 19145  0058CC                     l1733:
 19146                           
 19147                           ;main.c: 3675: }
 19148                           ;main.c: 3676: if(M._TURBO&&PORTDbits.RD3) M._VWYBIEG=1;
 19149  0058CC  0100               	movlb	0	; () banked
 19150  0058CE  B37B               	btfsc	(_M+27)& (0+255),1,b
 19151                           
 19152                           ; BSR set to: 0
 19153  0058D0  A683               	btfss	3971,3,c	;volatile
 19154  0058D2  D001               	goto	l1748
 19155                           
 19156                           ; BSR set to: 0
 19157  0058D4  8D70               	bsf	(_M+16)& (0+255),6,b
 19158  0058D6                     l1748:
 19159                           
 19160                           ; BSR set to: 0
 19161                           ;main.c: 3677: M._RUSZ_PWR=0;
 19162  0058D6  9B70               	bcf	(_M+16)& (0+255),5,b
 19163                           
 19164                           ;main.c: 3678: M.HVZ=0;
 19165  0058D8  6B91               	clrf	(_M+49)& (0+255),b
 19166                           
 19167                           ;main.c: 3679: M.KRS=0;
 19168  0058DA  6B90               	clrf	(_M+48)& (0+255),b
 19169  0058DC                     l1749:
 19170  0058DC  0004               	clrwdt		;# 
 19171                           
 19172                           ;main.c: 3685: PFN._opgprg=0;
 19173  0058DE  0101               	movlb	1	; () banked
 19174  0058E0  99BF               	bcf	(_PFN+5)& (0+255),4,b
 19175                           
 19176                           ;main.c: 3686: PFN._opgres=1;
 19177  0058E2  87BF               	bsf	(_PFN+5)& (0+255),3,b
 19178                           
 19179                           ;main.c: 3687: PFN._ferr=1;
 19180  0058E4  81BF               	bsf	(_PFN+5)& (0+255),0,b
 19181                           
 19182                           ; BSR set to: 1
 19183                           ;main.c: 3695: PomiarPCO();
 19184  0058E6  EC3C  F049         	call	_PomiarPCO	;wreg free
 19185                           
 19186                           ;main.c: 3696: PomiarPCW();
 19187  0058EA  EC73  F04A         	call	_PomiarPCW	;wreg free
 19188                           
 19189                           ;main.c: 3697: PomiarPFN();
 19190  0058EE  EC6A  F052         	call	_PomiarPFN	;wreg free
 19191                           
 19192                           ;main.c: 3698: PomiarCO();
 19193  0058F2  EC97  F037         	call	_PomiarCO	;wreg free
 19194                           
 19195                           ; BSR set to: 0
 19196                           ;main.c: 3699: PomiarCW();
 19197  0058F6  ECED  F03E         	call	_PomiarCW	;wreg free
 19198                           
 19199                           ; BSR set to: 0
 19200                           ;main.c: 3700: PomiarCS();
 19201  0058FA  EC41  F039         	call	_PomiarCS	;wreg free
 19202                           
 19203                           ; BSR set to: 1
 19204                           ;main.c: 3702: Proba48();
 19205  0058FE  ECEF  F056         	call	_Proba48	;wreg free
 19206                           
 19207                           ;main.c: 3703: Proba48Z3();
 19208  005902  ECCF  F052         	call	_Proba48Z3	;wreg free
 19209                           
 19210                           ;main.c: 3705: RefInterfaceData();
 19211  005906  EC37  F031         	call	_RefInterfaceData	;wreg free
 19212                           
 19213                           ;main.c: 3707: switch(DtKNF.tpkt)
 19214  00590A  D088               	goto	l37086
 19215  00590C                     l1752:
 19216                           
 19217                           ; BSR set to: 1
 19218                           ;main.c: 3710: case 2:
 19219                           ;main.c: 3711: {
 19220                           ;main.c: 3713: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&RdPrt(13)) ToObiegCO();
 19221  00590C  0100               	movlb	0	; () banked
 19222  00590E  AB70               	btfss	(_M+16)& (0+255),5,b
 19223                           
 19224                           ; BSR set to: 0
 19225  005910  B370               	btfsc	(_M+16)& (0+255),1,b
 19226  005912  D007               	goto	l1753
 19227                           
 19228                           ; BSR set to: 0
 19229  005914  0E0D               	movlw	13
 19230  005916  EC84  F058         	call	_RdPrt
 19231  00591A  E303               	bnc	l1753
 19232                           
 19233                           ; BSR set to: 0
 19234  00591C  EC42  F056         	call	_ToObiegCO	;wreg free
 19235  005920  D006               	goto	l36986
 19236  005922                     l1753:
 19237                           
 19238                           ; BSR set to: 0
 19239                           ;main.c: 3714: else
 19240                           ;main.c: 3715: if(!M._ZMKCOCW&&!M._WYLACZ&&!M._RUSZ_48) ToObiegCW();
 19241  005922  A370               	btfss	(_M+16)& (0+255),1,b
 19242                           
 19243                           ; BSR set to: 0
 19244  005924  B170               	btfsc	(_M+16)& (0+255),0,b
 19245  005926  D003               	goto	l36986
 19246                           
 19247                           ; BSR set to: 0
 19248  005928  A770               	btfss	(_M+16)& (0+255),3,b
 19249                           
 19250                           ; BSR set to: 0
 19251  00592A  EC65  F04D         	call	_ToObiegCW	;wreg free
 19252  00592E                     l36986:
 19253                           
 19254                           ; BSR set to: 0
 19255                           ;main.c: 3717: if(!M._WYLACZ&&PORTDbits.RD2)
 19256  00592E  A170               	btfss	(_M+16)& (0+255),0,b
 19257                           
 19258                           ; BSR set to: 0
 19259  005930  A483               	btfss	3971,2,c	;volatile
 19260  005932  D07F               	goto	l1757
 19261                           
 19262                           ; BSR set to: 0
 19263                           ;main.c: 3718: {
 19264                           ;main.c: 3719: M._WYLACZ=1;
 19265  005934  8170               	bsf	(_M+16)& (0+255),0,b
 19266  005936  D07D               	goto	l1757
 19267  005938                     l1758:
 19268                           
 19269                           ; BSR set to: 1
 19270                           ;main.c: 3724: {
 19271                           ;main.c: 3726: if(!M._ZMKCOCW&&RdPrt(13)) ToObiegCO();
 19272  005938  0100               	movlb	0	; () banked
 19273  00593A  B370               	btfsc	(_M+16)& (0+255),1,b
 19274  00593C  D007               	goto	l1759
 19275                           
 19276                           ; BSR set to: 0
 19277  00593E  0E0D               	movlw	13
 19278  005940  EC84  F058         	call	_RdPrt
 19279  005944  E303               	bnc	l1759
 19280                           
 19281                           ; BSR set to: 0
 19282  005946  EC42  F056         	call	_ToObiegCO	;wreg free
 19283  00594A  D009               	goto	l37006
 19284  00594C                     l1759:
 19285                           
 19286                           ; BSR set to: 0
 19287                           ;main.c: 3727: else
 19288                           ;main.c: 3728: if(!M._ZMKCOCW&&!M._WYLACZ&&!M._RUSZ_48&&(!PORTDbits.RD2||M._RUSZ_48Z3)) 
      +                          ToObiegCW();
 19289  00594C  A370               	btfss	(_M+16)& (0+255),1,b
 19290                           
 19291                           ; BSR set to: 0
 19292  00594E  B170               	btfsc	(_M+16)& (0+255),0,b
 19293  005950  D006               	goto	l37006
 19294                           
 19295                           ; BSR set to: 0
 19296  005952  B770               	btfsc	(_M+16)& (0+255),3,b
 19297  005954  D004               	goto	l37006
 19298                           
 19299                           ; BSR set to: 0
 19300  005956  B483               	btfsc	3971,2,c	;volatile
 19301                           
 19302                           ; BSR set to: 0
 19303  005958  B970               	btfsc	(_M+16)& (0+255),4,b
 19304                           
 19305                           ; BSR set to: 0
 19306  00595A  EC65  F04D         	call	_ToObiegCW	;wreg free
 19307  00595E                     l37006:
 19308                           
 19309                           ; BSR set to: 0
 19310                           ;main.c: 3730: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48&&!M
      +                          ._RUSZ_48Z3)
 19311  00595E  AB70               	btfss	(_M+16)& (0+255),5,b
 19312                           
 19313                           ; BSR set to: 0
 19314  005960  B370               	btfsc	(_M+16)& (0+255),1,b
 19315  005962  D067               	goto	l1757
 19316                           
 19317                           ; BSR set to: 0
 19318  005964  A483               	btfss	3971,2,c	;volatile
 19319                           
 19320                           ; BSR set to: 0
 19321  005966  B170               	btfsc	(_M+16)& (0+255),0,b
 19322  005968  D064               	goto	l1757
 19323                           
 19324                           ; BSR set to: 0
 19325  00596A  A770               	btfss	(_M+16)& (0+255),3,b
 19326                           
 19327                           ; BSR set to: 0
 19328  00596C  B970               	btfsc	(_M+16)& (0+255),4,b
 19329  00596E  D061               	goto	l1757
 19330                           
 19331                           ; BSR set to: 0
 19332                           ;main.c: 3731: {
 19333                           ;main.c: 3732: if(!M._RPM_CW&&RdPrt(13))
 19334  005970  BF7B               	btfsc	(_M+27)& (0+255),7,b
 19335  005972  D05F               	goto	l1757
 19336                           
 19337                           ; BSR set to: 0
 19338  005974  0E0D               	movlw	13
 19339  005976  EC84  F058         	call	_RdPrt
 19340  00597A                     L29:
 19341  00597A  E35B               	bnc	l1757
 19342  00597C                     l37022:
 19343                           
 19344                           ; BSR set to: 0
 19345                           ;main.c: 3733: {
 19346                           ;main.c: 3734: M._WYLACZ=1;
 19347  00597C  8170               	bsf	(_M+16)& (0+255),0,b
 19348                           
 19349                           ;main.c: 3735: PORTDbits.RD2=1;
 19350  00597E  8483               	bsf	3971,2,c	;volatile
 19351  005980  D058               	goto	l1757
 19352  005982                     l1766:
 19353                           
 19354                           ; BSR set to: 1
 19355                           ;main.c: 3741: {
 19356                           ;main.c: 3743: if(!M._ZMKCOCW&&RdPrt(13)) ToObiegCO();
 19357  005982  0100               	movlb	0	; () banked
 19358  005984  B370               	btfsc	(_M+16)& (0+255),1,b
 19359  005986  D007               	goto	l1767
 19360                           
 19361                           ; BSR set to: 0
 19362  005988  0E0D               	movlw	13
 19363  00598A  EC84  F058         	call	_RdPrt
 19364  00598E  E303               	bnc	l1767
 19365                           
 19366                           ; BSR set to: 0
 19367  005990  EC42  F056         	call	_ToObiegCO	;wreg free
 19368  005994  D010               	goto	l37040
 19369  005996                     l1767:
 19370                           
 19371                           ; BSR set to: 0
 19372                           ;main.c: 3744: else
 19373                           ;main.c: 3745: if(!M._ZMKCOCW&&RdPrt(10)) ToObiegCW();
 19374  005996  B370               	btfsc	(_M+16)& (0+255),1,b
 19375  005998  D007               	goto	l1769
 19376                           
 19377                           ; BSR set to: 0
 19378  00599A  0E0A               	movlw	10
 19379  00599C  EC84  F058         	call	_RdPrt
 19380  0059A0  E303               	bnc	l1769
 19381  0059A2                     l37030:
 19382                           
 19383                           ; BSR set to: 0
 19384  0059A2  EC65  F04D         	call	_ToObiegCW	;wreg free
 19385  0059A6  D007               	goto	l37040
 19386  0059A8                     l1769:
 19387                           
 19388                           ; BSR set to: 0
 19389                           ;main.c: 3746: else
 19390                           ;main.c: 3747: if(!M._ZMKCOCW&&!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48) ToObiegCW();
 19391  0059A8  A370               	btfss	(_M+16)& (0+255),1,b
 19392                           
 19393                           ; BSR set to: 0
 19394  0059AA  B483               	btfsc	3971,2,c	;volatile
 19395  0059AC  D004               	goto	l37040
 19396                           
 19397                           ; BSR set to: 0
 19398  0059AE  B170               	btfsc	(_M+16)& (0+255),0,b
 19399  0059B0  D002               	goto	l37040
 19400                           
 19401                           ; BSR set to: 0
 19402  0059B2  A770               	btfss	(_M+16)& (0+255),3,b
 19403  0059B4  D7F6               	goto	l37030
 19404  0059B6                     l37040:
 19405                           
 19406                           ; BSR set to: 0
 19407                           ;main.c: 3749: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48)
 19408  0059B6  AB70               	btfss	(_M+16)& (0+255),5,b
 19409                           
 19410                           ; BSR set to: 0
 19411  0059B8  B370               	btfsc	(_M+16)& (0+255),1,b
 19412  0059BA  D03B               	goto	l1757
 19413                           
 19414                           ; BSR set to: 0
 19415  0059BC  A483               	btfss	3971,2,c	;volatile
 19416                           
 19417                           ; BSR set to: 0
 19418  0059BE  B170               	btfsc	(_M+16)& (0+255),0,b
 19419  0059C0  D038               	goto	l1757
 19420                           
 19421                           ; BSR set to: 0
 19422  0059C2  B770               	btfsc	(_M+16)& (0+255),3,b
 19423  0059C4  D036               	goto	l1757
 19424                           
 19425                           ; BSR set to: 0
 19426                           ;main.c: 3750: {
 19427                           ;main.c: 3751: if((!M._RPM_CW&&RdPrt(13))||(M._RPM_CW&&RdPrt(10)))
 19428  0059C6  BF7B               	btfsc	(_M+27)& (0+255),7,b
 19429  0059C8  D004               	goto	l1777
 19430                           
 19431                           ; BSR set to: 0
 19432  0059CA  0E0D               	movlw	13
 19433  0059CC  EC84  F058         	call	_RdPrt
 19434  0059D0  E2D5               	bc	l37022
 19435  0059D2                     l1777:
 19436                           
 19437                           ; BSR set to: 0
 19438  0059D2  AF7B               	btfss	(_M+27)& (0+255),7,b
 19439  0059D4  D02E               	goto	l1757
 19440                           
 19441                           ; BSR set to: 0
 19442  0059D6  0E0A               	movlw	10
 19443  0059D8  EC84  F058         	call	_RdPrt
 19444  0059DC  D7CE               	goto	L29
 19445  0059DE                     l1778:
 19446                           
 19447                           ; BSR set to: 1
 19448                           ;main.c: 3760: {
 19449                           ;main.c: 3762: if(!M._ZMKCOCW&&RdPrt(13)) ToObiegCO();
 19450  0059DE  0100               	movlb	0	; () banked
 19451  0059E0  B370               	btfsc	(_M+16)& (0+255),1,b
 19452  0059E2  D007               	goto	l1779
 19453                           
 19454                           ; BSR set to: 0
 19455  0059E4  0E0D               	movlw	13
 19456  0059E6  EC84  F058         	call	_RdPrt
 19457  0059EA  E303               	bnc	l1779
 19458                           
 19459                           ; BSR set to: 0
 19460  0059EC  EC42  F056         	call	_ToObiegCO	;wreg free
 19461  0059F0  D008               	goto	l37068
 19462  0059F2                     l1779:
 19463                           
 19464                           ; BSR set to: 0
 19465                           ;main.c: 3763: else
 19466                           ;main.c: 3764: if(!M._ZMKCOCW&&!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48) ToObiegCW();
 19467  0059F2  A370               	btfss	(_M+16)& (0+255),1,b
 19468                           
 19469                           ; BSR set to: 0
 19470  0059F4  B483               	btfsc	3971,2,c	;volatile
 19471  0059F6  D005               	goto	l37068
 19472                           
 19473                           ; BSR set to: 0
 19474  0059F8  A170               	btfss	(_M+16)& (0+255),0,b
 19475                           
 19476                           ; BSR set to: 0
 19477  0059FA  B770               	btfsc	(_M+16)& (0+255),3,b
 19478  0059FC  D002               	goto	l37068
 19479                           
 19480                           ; BSR set to: 0
 19481  0059FE  EC65  F04D         	call	_ToObiegCW	;wreg free
 19482  005A02                     l37068:
 19483                           
 19484                           ; BSR set to: 0
 19485                           ;main.c: 3766: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!PORTDbits.RD2&&!M._WYLACZ&&!M._RUSZ_48)
 19486  005A02  AB70               	btfss	(_M+16)& (0+255),5,b
 19487                           
 19488                           ; BSR set to: 0
 19489  005A04  B370               	btfsc	(_M+16)& (0+255),1,b
 19490  005A06  D015               	goto	l1757
 19491                           
 19492                           ; BSR set to: 0
 19493  005A08  A483               	btfss	3971,2,c	;volatile
 19494                           
 19495                           ; BSR set to: 0
 19496  005A0A  B170               	btfsc	(_M+16)& (0+255),0,b
 19497  005A0C  D012               	goto	l1757
 19498                           
 19499                           ; BSR set to: 0
 19500  005A0E  A770               	btfss	(_M+16)& (0+255),3,b
 19501                           
 19502                           ; BSR set to: 0
 19503                           ;main.c: 3767: {
 19504                           ;main.c: 3768: if(!M._RPM_CW&&RdPrt(13))
 19505  005A10  BF7B               	btfsc	(_M+27)& (0+255),7,b
 19506  005A12  D00F               	goto	l1757
 19507                           
 19508                           ; BSR set to: 0
 19509  005A14  0E0D               	movlw	13
 19510  005A16  EC84  F058         	call	_RdPrt
 19511  005A1A  D7AF               	goto	L29
 19512  005A1C                     l37086:
 19513                           
 19514                           ; BSR set to: 1
 19515  005A1C  5151               	movf	(_DtKNF+7)& (0+255),w,b
 19516                           
 19517                           ; Switch size 1, requested type "space"
 19518                           ; Number of cases is 4, Range of values is 0 to 3
 19519                           ; switch strategies available:
 19520                           ; Name         Instructions Cycles
 19521                           ; simple_byte           13     7 (average)
 19522                           ;	Chosen strategy is simple_byte
 19523  005A1E  E0B1               	bz	l1766
 19524  005A20  0A01               	xorlw	1	; case 1
 19525  005A22  E101 D773          	bz	l1752
 19526  005A26  0A03               	xorlw	3	; case 2
 19527  005A28  E101 D770          	bz	l1752
 19528  005A2C  0A01               	xorlw	1	; case 3
 19529  005A2E  E084               	bz	l1758
 19530  005A30  D7D6               	goto	l1778
 19531  005A32                     l1757:
 19532                           
 19533                           ; BSR set to: 0
 19534                           ;main.c: 3778: if(M._ZMKCOCW) ZmienKCOKCW();
 19535  005A32  B370               	btfsc	(_M+16)& (0+255),1,b
 19536                           
 19537                           ; BSR set to: 0
 19538  005A34  EC5B  F03E         	call	_ZmienKCOKCW	;wreg free
 19539                           
 19540                           ;main.c: 3779: if(M._WYLACZ) Wylacz();
 19541  005A38  0100               	movlb	0	; () banked
 19542  005A3A  B170               	btfsc	(_M+16)& (0+255),0,b
 19543                           
 19544                           ; BSR set to: 0
 19545  005A3C  EC72  F025         	call	_Wylacz	;wreg free
 19546                           
 19547                           ;main.c: 3780: if(M._VWYBIEG) VWybieg();
 19548  005A40  0100               	movlb	0	; () banked
 19549  005A42  BD70               	btfsc	(_M+16)& (0+255),6,b
 19550                           
 19551                           ; BSR set to: 0
 19552  005A44  ECFC  F04D         	call	_VWybieg	;wreg free
 19553                           
 19554                           ;main.c: 3781: if(M._RUSZ_48) Rusz48();
 19555  005A48  0100               	movlb	0	; () banked
 19556  005A4A  B770               	btfsc	(_M+16)& (0+255),3,b
 19557                           
 19558                           ; BSR set to: 0
 19559  005A4C  EC82  F042         	call	_Rusz48	;wreg free
 19560                           
 19561                           ;main.c: 3782: if(M._RUSZ_48Z3) Rusz48Z3();
 19562  005A50  0100               	movlb	0	; () banked
 19563  005A52  B970               	btfsc	(_M+16)& (0+255),4,b
 19564                           
 19565                           ; BSR set to: 0
 19566  005A54  ECAA  F050         	call	_Rusz48Z3	;wreg free
 19567                           
 19568                           ;main.c: 3785: if(KeyRes())
 19569  005A58  EC58  F050         	call	_KeyRes	;wreg free
 19570  005A5C  E201 D73E          	bnc	l1749
 19571                           
 19572                           ;main.c: 3786: {
 19573                           ;main.c: 3787: PORTDbits.RD3=0;
 19574  005A60  9683               	bcf	3971,3,c	;volatile
 19575                           
 19576                           ;main.c: 3788: PORTDbits.RD2=0;
 19577  005A62  9483               	bcf	3971,2,c	;volatile
 19578                           
 19579                           ;main.c: 3789: ToReset();
 19580  005A64  ECE6  F054         	call	_ToReset	;wreg free
 19581  005A68  D739               	goto	l1749
 19582                           tblptru	equ	0xFF8
 19583                           tblptrh	equ	0xFF7
 19584                           tblptrl	equ	0xFF6
 19585                           tablat	equ	0xFF5
 19586                           prodh	equ	0xFF4
 19587                           prodl	equ	0xFF3
 19588                           intcon	equ	0xFF2
 19589                           postinc0	equ	0xFEE
 19590                           wreg	equ	0xFE8
 19591                           indf1	equ	0xFE7
 19592                           postinc1	equ	0xFE6
 19593                           postdec1	equ	0xFE5
 19594                           fsr1h	equ	0xFE2
 19595                           fsr1l	equ	0xFE1
 19596                           indf2	equ	0xFDF
 19597                           postinc2	equ	0xFDE
 19598                           postdec2	equ	0xFDD
 19599                           fsr2h	equ	0xFDA
 19600                           fsr2l	equ	0xFD9
 19601                           status	equ	0xFD8
 19602                           
 19603 ;; *************** function _PomiarCO *****************
 19604 ;; Defined at:
 19605 ;;		line 322 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 19606 ;; Parameters:    Size  Location     Type
 19607 ;;		None
 19608 ;; Auto vars:     Size  Location     Type
 19609 ;;		None
 19610 ;; Return value:  Size  Location     Type
 19611 ;;		None               void
 19612 ;; Registers used:
 19613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19614 ;; Tracked objects:
 19615 ;;		On entry : 0/0
 19616 ;;		On exit  : F/0
 19617 ;;		Unchanged: 0/0
 19618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19623 ;;Total ram usage:        2 bytes
 19624 ;; Hardware stack levels used:    1
 19625 ;; Hardware stack levels required when called:    6
 19626 ;; This function calls:
 19627 ;;		_ReadAC
 19628 ;;		_ReadTabNTC
 19629 ;; This function is called by:
 19630 ;;		_main
 19631 ;;		_ErrPTG
 19632 ;; This function uses a non-reentrant model
 19633 ;;
 19634                           
 19635                           	psect	text72
 19636  006F2E                     __ptext72:
 19637                           	opt stack 0
 19638  006F2E                     __end_of_ErrPTG:
 19639                           	opt stack 0
 19640  006F2E                     _PomiarCO:
 19641                           	opt stack 22
 19642                           
 19643                           ;pomiar.c: 323: DtCO.AC_CO=ReadAC(0);
 19644  006F2E  0E00               	movlw	0
 19645  006F30  EC31  F04D         	call	_ReadAC
 19646  006F34  0100               	movlb	0	; () banked
 19647  006F36  6FF0               	movwf	(_DtCO+12)& (0+255),b
 19648                           
 19649                           ;pomiar.c: 324: DtCO.CO=ReadTabNTC(DtCO.AC_CO);
 19650  006F38  51F0               	movf	(_DtCO+12)& (0+255),w,b
 19651  006F3A  EC04  F050         	call	_ReadTabNTC
 19652  006F3E  0100               	movlb	0	; () banked
 19653  006F40  6FE6               	movwf	(_DtCO+2)& (0+255),b
 19654                           
 19655                           ; BSR set to: 0
 19656                           ;pomiar.c: 326: if(DtCO.AC_CO<=0X28||DtCO.AC_CO>=0XF5)
 19657  006F42  EE20  F0F0         	lfsr	2,_DtCO+12
 19658  006F46  0E28               	movlw	40
 19659  006F48  64DF               	cpfsgt	indf2,c
 19660  006F4A  D005               	goto	l2006
 19661                           
 19662                           ; BSR set to: 0
 19663  006F4C  EE20  F0F0         	lfsr	2,_DtCO+12
 19664  006F50  0EF4               	movlw	244
 19665  006F52  64DF               	cpfsgt	indf2,c
 19666  006F54  D00D               	goto	l2004
 19667  006F56                     l2006:
 19668                           
 19669                           ; BSR set to: 0
 19670                           ;pomiar.c: 327: {
 19671                           ;pomiar.c: 328: DtCO._err_CO=1;
 19672  006F56  81E4               	bsf	_DtCO& (0+255),0,b
 19673                           
 19674                           ;pomiar.c: 329: DtCO._su_CO=0;
 19675  006F58  93E4               	bcf	_DtCO& (0+255),1,b
 19676                           
 19677                           ;pomiar.c: 330: DtCO._ad_CO=0;
 19678  006F5A  95E4               	bcf	_DtCO& (0+255),2,b
 19679                           
 19680                           ;pomiar.c: 331: DtCO._cold_CO=0;
 19681  006F5C  95E5               	bcf	(_DtCO+1)& (0+255),2,b
 19682                           
 19683                           ;pomiar.c: 332: DtCO._hot_CO=0;
 19684  006F5E  97E5               	bcf	(_DtCO+1)& (0+255),3,b
 19685                           
 19686                           ;pomiar.c: 333: DtCO._on_DZ_CO=0;
 19687  006F60  9BE4               	bcf	_DtCO& (0+255),5,b
 19688                           
 19689                           ;pomiar.c: 334: DtCO._su_DZ_CO=0;
 19690  006F62  9DE4               	bcf	_DtCO& (0+255),6,b
 19691                           
 19692                           ;pomiar.c: 335: DtCO._ad_DZ_CO=0;
 19693  006F64  9FE4               	bcf	_DtCO& (0+255),7,b
 19694                           
 19695                           ;pomiar.c: 336: DtCO._ptwp_CO=0;
 19696  006F66  91E5               	bcf	(_DtCO+1)& (0+255),0,b
 19697                           
 19698                           ;pomiar.c: 337: DtCO._pz_CO=0;
 19699  006F68  93E5               	bcf	(_DtCO+1)& (0+255),1,b
 19700                           
 19701                           ;pomiar.c: 338: DtCO._su_SRW_CO=0;
 19702  006F6A  97E4               	bcf	_DtCO& (0+255),3,b
 19703                           
 19704                           ;pomiar.c: 339: DtCO._ad_SRW_CO=0;
 19705  006F6C  99E4               	bcf	_DtCO& (0+255),4,b
 19706                           
 19707                           ;pomiar.c: 340: return;
 19708  006F6E  0012               	return	
 19709  006F70                     l2004:
 19710                           
 19711                           ; BSR set to: 0
 19712                           ;pomiar.c: 342: else DtCO._err_CO=0;
 19713  006F70  91E4               	bcf	_DtCO& (0+255),0,b
 19714  006F72  D076               	goto	l28782
 19715  006F74                     l28620:
 19716                           
 19717                           ; BSR set to: 1
 19718                           ;pomiar.c: 346: case 2:
 19719                           ;pomiar.c: 347: {
 19720                           ;pomiar.c: 348: if((DtCO.CO-DtCO.PPCO)>=5) DtCO._ad_CO=1;
 19721  006F74  0100               	movlb	0	; () banked
 19722  006F76  51E8               	movf	(_DtCO+4)& (0+255),w,b
 19723  006F78  C0E6  F024         	movff	_DtCO+2,??_PomiarCO
 19724  006F7C  D8A9               	call	PL42	;call to abstracted procedure
 19725  006F7E  B4D8               	btfsc	status,2,c
 19726  006F80  5C24               	subwf	??_PomiarCO,w,c
 19727  006F82  E302               	bnc	l2012
 19728                           
 19729                           ; BSR set to: 0
 19730  006F84  85E4               	bsf	_DtCO& (0+255),2,b
 19731  006F86  D001               	goto	l28624
 19732  006F88                     l2012:
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;pomiar.c: 349: else DtCO._ad_CO=0;
 19736  006F88  95E4               	bcf	_DtCO& (0+255),2,b
 19737  006F8A                     l28624:
 19738                           
 19739                           ; BSR set to: 0
 19740                           ;pomiar.c: 350: if((DtCO.PPCO-DtCO.CO)>=5) DtCO._su_CO=1;
 19741  006F8A  51E6               	movf	(_DtCO+2)& (0+255),w,b
 19742  006F8C  C0E8  F024         	movff	_DtCO+4,??_PomiarCO
 19743  006F90  D89F               	call	PL42	;call to abstracted procedure
 19744  006F92  B4D8               	btfsc	status,2,c
 19745  006F94  5C24               	subwf	??_PomiarCO,w,c
 19746  006F96  E302               	bnc	l2014
 19747                           
 19748                           ; BSR set to: 0
 19749  006F98  83E4               	bsf	_DtCO& (0+255),1,b
 19750  006F9A  D001               	goto	l28628
 19751  006F9C                     l2014:
 19752                           
 19753                           ; BSR set to: 0
 19754                           ;pomiar.c: 351: else DtCO._su_CO=0;
 19755  006F9C  93E4               	bcf	_DtCO& (0+255),1,b
 19756  006F9E                     l28628:
 19757                           
 19758                           ; BSR set to: 0
 19759                           ;pomiar.c: 352: if(DtCO.CO<=50) DtCO._ptwp_CO=1;
 19760  006F9E  0E33               	movlw	51
 19761  006FA0  61E6               	cpfslt	(_DtCO+2)& (0+255),b
 19762  006FA2  D001               	goto	l28632
 19763                           
 19764                           ; BSR set to: 0
 19765  006FA4  81E5               	bsf	(_DtCO+1)& (0+255),0,b
 19766  006FA6                     l28632:
 19767                           
 19768                           ; BSR set to: 0
 19769                           ;pomiar.c: 353: if(DtCO.CO>50+1) DtCO._ptwp_CO=0;
 19770  006FA6  EE20  F0E6         	lfsr	2,_DtCO+2
 19771  006FAA  0E33               	movlw	51
 19772  006FAC                     L31:
 19773  006FAC  64DF               	cpfsgt	indf2,c
 19774  006FAE  D001               	goto	l28636
 19775                           
 19776                           ; BSR set to: 0
 19777  006FB0  91E5               	bcf	(_DtCO+1)& (0+255),0,b
 19778  006FB2                     l28636:
 19779                           
 19780                           ; BSR set to: 0
 19781                           ;pomiar.c: 354: if(DtCO.CO<=82) DtCO._pz_CO=1;
 19782  006FB2  0E53               	movlw	83
 19783  006FB4  61E6               	cpfslt	(_DtCO+2)& (0+255),b
 19784  006FB6  D001               	goto	l28640
 19785                           
 19786                           ; BSR set to: 0
 19787  006FB8  83E5               	bsf	(_DtCO+1)& (0+255),1,b
 19788  006FBA                     l28640:
 19789                           
 19790                           ; BSR set to: 0
 19791                           ;pomiar.c: 355: if(DtCO.CO>88) DtCO._pz_CO=0;
 19792  006FBA  EE20  F0E6         	lfsr	2,_DtCO+2
 19793  006FBE  0E58               	movlw	88
 19794  006FC0  64DF               	cpfsgt	indf2,c
 19795  006FC2  D001               	goto	l28644
 19796                           
 19797                           ; BSR set to: 0
 19798  006FC4  93E5               	bcf	(_DtCO+1)& (0+255),1,b
 19799  006FC6                     l28644:
 19800                           
 19801                           ; BSR set to: 0
 19802                           ;pomiar.c: 356: if(DtCO.CO<=7) DtCO._cold_CO=1;
 19803  006FC6  0E08               	movlw	8
 19804  006FC8  61E6               	cpfslt	(_DtCO+2)& (0+255),b
 19805  006FCA  D001               	goto	l28648
 19806                           
 19807                           ; BSR set to: 0
 19808  006FCC  85E5               	bsf	(_DtCO+1)& (0+255),2,b
 19809  006FCE                     l28648:
 19810                           
 19811                           ; BSR set to: 0
 19812                           ;pomiar.c: 357: if(DtCO.CO>7+1) DtCO._cold_CO=0;
 19813  006FCE  EE20  F0E6         	lfsr	2,_DtCO+2
 19814  006FD2  0E08               	movlw	8
 19815  006FD4  64DF               	cpfsgt	indf2,c
 19816  006FD6  D001               	goto	l28652
 19817                           
 19818                           ; BSR set to: 0
 19819  006FD8  95E5               	bcf	(_DtCO+1)& (0+255),2,b
 19820  006FDA                     l28652:
 19821                           
 19822                           ; BSR set to: 0
 19823                           ;pomiar.c: 358: if(DtCO.CO>=88) DtCO._hot_CO=1;
 19824  006FDA  EE20  F0E6         	lfsr	2,_DtCO+2
 19825  006FDE  0E57               	movlw	87
 19826  006FE0  64DF               	cpfsgt	indf2,c
 19827  006FE2  D001               	goto	l28656
 19828                           
 19829                           ; BSR set to: 0
 19830  006FE4  87E5               	bsf	(_DtCO+1)& (0+255),3,b
 19831  006FE6                     l28656:
 19832                           
 19833                           ; BSR set to: 0
 19834                           ;pomiar.c: 359: if(DtCO.CO<88-1) DtCO._hot_CO=0;
 19835  006FE6  0E57               	movlw	87
 19836  006FE8  61E6               	cpfslt	(_DtCO+2)& (0+255),b
 19837  006FEA  D044               	goto	l28784
 19838                           
 19839                           ; BSR set to: 0
 19840  006FEC  97E5               	bcf	(_DtCO+1)& (0+255),3,b
 19841  006FEE  D042               	goto	l28784
 19842  006FF0                     l28660:
 19843                           
 19844                           ; BSR set to: 1
 19845                           ;pomiar.c: 363: {
 19846                           ;pomiar.c: 364: if((DtCO.CO-DtCO.PPCO)>=5) DtCO._ad_CO=1;
 19847  006FF0  0100               	movlb	0	; () banked
 19848  006FF2  51E8               	movf	(_DtCO+4)& (0+255),w,b
 19849  006FF4  C0E6  F024         	movff	_DtCO+2,??_PomiarCO
 19850  006FF8  D86B               	call	PL42	;call to abstracted procedure
 19851  006FFA  B4D8               	btfsc	status,2,c
 19852  006FFC  5C24               	subwf	??_PomiarCO,w,c
 19853  006FFE  E216               	bc	L36
 19854  007000                     l2026:
 19855                           
 19856                           ; BSR set to: 0
 19857                           ;pomiar.c: 365: else DtCO._ad_CO=0;
 19858  007000  95E4               	bcf	_DtCO& (0+255),2,b
 19859  007002                     l28664:
 19860                           
 19861                           ; BSR set to: 0
 19862                           ;pomiar.c: 366: if((DtCO.PPCO-DtCO.CO)>=5) DtCO._su_CO=1;
 19863  007002  51E6               	movf	(_DtCO+2)& (0+255),w,b
 19864  007004  C0E8  F024         	movff	_DtCO+4,??_PomiarCO
 19865  007008  D863               	call	PL42	;call to abstracted procedure
 19866  00700A  B4D8               	btfsc	status,2,c
 19867  00700C  5C24               	subwf	??_PomiarCO,w,c
 19868  00700E  E322               	bnc	l2054
 19869  007010                     
 19870                           ; BSR set to: 0
 19871  007010  83E4               	bsf	_DtCO& (0+255),1,b
 19872  007012  D021               	goto	l28748
 19873  007014                     l28672:
 19874                           
 19875                           ; BSR set to: 0
 19876                           ;pomiar.c: 369: if(DtCO.CO>82+1) DtCO._ptwp_CO=0;
 19877  007014  EE20  F0E6         	lfsr	2,_DtCO+2
 19878  007018  0E53               	movlw	83
 19879  00701A  D7C8               	goto	L31
 19880  00701C                     l28700:
 19881                           
 19882                           ; BSR set to: 1
 19883                           ;pomiar.c: 379: {
 19884                           ;pomiar.c: 380: if((DtCO.CO-DtCO.PPCO)>=5) DtCO._ad_CO=1;
 19885  00701C  0100               	movlb	0	; () banked
 19886  00701E  51E8               	movf	(_DtCO+4)& (0+255),w,b
 19887  007020  C0E6  F024         	movff	_DtCO+2,??_PomiarCO
 19888  007024  D855               	call	PL42	;call to abstracted procedure
 19889  007026  B4D8               	btfsc	status,2,c
 19890  007028  5C24               	subwf	??_PomiarCO,w,c
 19891  00702A  E3EA               	bnc	l2026
 19892  00702C                     L36:
 19893                           
 19894                           ; BSR set to: 0
 19895  00702C  85E4               	bsf	_DtCO& (0+255),2,b
 19896  00702E  D7E9               	goto	l28664
 19897  007030                     l28740:
 19898                           
 19899                           ; BSR set to: 1
 19900                           ;pomiar.c: 395: {
 19901                           ;pomiar.c: 396: if((DtCO.CO-DtCO.PPCO)>=5) DtCO._ad_CO=1;
 19902  007030  0100               	movlb	0	; () banked
 19903  007032  51E8               	movf	(_DtCO+4)& (0+255),w,b
 19904  007034  C0E6  F024         	movff	_DtCO+2,??_PomiarCO
 19905  007038  D84B               	call	PL42	;call to abstracted procedure
 19906  00703A  B4D8               	btfsc	status,2,c
 19907  00703C  5C24               	subwf	??_PomiarCO,w,c
 19908  00703E  E302               	bnc	l2052
 19909                           
 19910                           ; BSR set to: 0
 19911  007040  85E4               	bsf	_DtCO& (0+255),2,b
 19912  007042  D001               	goto	l28744
 19913  007044                     l2052:
 19914                           
 19915                           ; BSR set to: 0
 19916                           ;pomiar.c: 397: else DtCO._ad_CO=0;
 19917  007044  95E4               	bcf	_DtCO& (0+255),2,b
 19918  007046                     l28744:
 19919                           
 19920                           ; BSR set to: 0
 19921                           ;pomiar.c: 398: if((DtCO.PPCO-DtCO.CO)>=5) DtCO._su_CO=1;
 19922  007046  51E6               	movf	(_DtCO+2)& (0+255),w,b
 19923  007048  C0E8  F024         	movff	_DtCO+4,??_PomiarCO
 19924  00704C  D841               	call	PL42	;call to abstracted procedure
 19925  00704E  B4D8               	btfsc	status,2,c
 19926  007050  5C24               	subwf	??_PomiarCO,w,c
 19927  007052  E2DE               	bc	L35
 19928  007054                     l2054:
 19929                           
 19930                           ; BSR set to: 0
 19931                           ;pomiar.c: 399: else DtCO._su_CO=0;
 19932  007054  93E4               	bcf	_DtCO& (0+255),1,b
 19933  007056                     l28748:
 19934                           
 19935                           ; BSR set to: 0
 19936                           ;pomiar.c: 400: if(DtCO.CO<=82) DtCO._ptwp_CO=1;
 19937  007056  0E53               	movlw	83
 19938  007058  61E6               	cpfslt	(_DtCO+2)& (0+255),b
 19939  00705A  D7DC               	goto	l28672
 19940                           
 19941                           ; BSR set to: 0
 19942  00705C  81E5               	bsf	(_DtCO+1)& (0+255),0,b
 19943  00705E  D7DA               	goto	l28672
 19944  007060                     l28782:
 19945                           
 19946                           ; BSR set to: 0
 19947  007060  0101               	movlb	1	; () banked
 19948  007062  5151               	movf	(_DtKNF+7)& (0+255),w,b
 19949                           
 19950                           ; Switch size 1, requested type "space"
 19951                           ; Number of cases is 4, Range of values is 0 to 3
 19952                           ; switch strategies available:
 19953                           ; Name         Instructions Cycles
 19954                           ; simple_byte           13     7 (average)
 19955                           ;	Chosen strategy is simple_byte
 19956  007064  E0DB               	bz	l28700
 19957  007066  0A01               	xorlw	1	; case 1
 19958  007068  E085               	bz	l28620
 19959  00706A  0A03               	xorlw	3	; case 2
 19960  00706C  E083               	bz	l28620
 19961  00706E  0A01               	xorlw	1	; case 3
 19962  007070  E0BF               	bz	l28660
 19963  007072  D7DE               	goto	l28740
 19964  007074                     l28784:
 19965                           
 19966                           ; BSR set to: 0
 19967                           ;pomiar.c: 412: if(DtCO.CO<=8)
 19968  007074  0E09               	movlw	9
 19969  007076  61E6               	cpfslt	(_DtCO+2)& (0+255),b
 19970  007078  D003               	goto	l2064
 19971                           
 19972                           ; BSR set to: 0
 19973                           ;pomiar.c: 413: {
 19974                           ;pomiar.c: 414: DtCO._su_DZ_CO=1;
 19975  00707A  8DE4               	bsf	_DtCO& (0+255),6,b
 19976                           
 19977                           ;pomiar.c: 415: DtCO._on_DZ_CO=1;
 19978  00707C  8BE4               	bsf	_DtCO& (0+255),5,b
 19979                           
 19980                           ;pomiar.c: 416: }
 19981  00707E  D001               	goto	l28788
 19982  007080                     l2064:
 19983                           
 19984                           ; BSR set to: 0
 19985                           ;pomiar.c: 417: else DtCO._su_DZ_CO=0;
 19986  007080  9DE4               	bcf	_DtCO& (0+255),6,b
 19987  007082                     l28788:
 19988                           
 19989                           ; BSR set to: 0
 19990                           ;pomiar.c: 418: if(DtCO.CO>20)
 19991  007082  EE20  F0E6         	lfsr	2,_DtCO+2
 19992  007086  0E14               	movlw	20
 19993  007088  64DF               	cpfsgt	indf2,c
 19994  00708A  D003               	goto	l2066
 19995                           
 19996                           ; BSR set to: 0
 19997                           ;pomiar.c: 419: {
 19998                           ;pomiar.c: 420: DtCO._ad_DZ_CO=1;
 19999  00708C  8FE4               	bsf	_DtCO& (0+255),7,b
 20000                           
 20001                           ;pomiar.c: 421: DtCO._on_DZ_CO=0;
 20002  00708E  9BE4               	bcf	_DtCO& (0+255),5,b
 20003                           
 20004                           ;pomiar.c: 422: }
 20005  007090  D001               	goto	l2067
 20006  007092                     l2066:
 20007                           
 20008                           ; BSR set to: 0
 20009                           ;pomiar.c: 423: else DtCO._ad_DZ_CO=0;
 20010  007092  9FE4               	bcf	_DtCO& (0+255),7,b
 20011  007094                     l2067:
 20012                           
 20013                           ; BSR set to: 0
 20014                           ;pomiar.c: 425: if(!DtKNF.opdg)
 20015  007094  0101               	movlb	1	; () banked
 20016  007096  6759               	tstfsz	(_DtKNF+15)& (0+255),b
 20017  007098  D010               	goto	l28800
 20018                           
 20019                           ; BSR set to: 1
 20020                           ;pomiar.c: 426: {
 20021                           ;pomiar.c: 427: if(DtCO.CO<=78) DtCO._su_SRW_CO=1;
 20022  00709A  0E4F               	movlw	79
 20023  00709C  0100               	movlb	0	; () banked
 20024  00709E  61E6               	cpfslt	(_DtCO+2)& (0+255),b
 20025  0070A0  D002               	goto	l2069
 20026                           
 20027                           ; BSR set to: 0
 20028  0070A2  87E4               	bsf	_DtCO& (0+255),3,b
 20029  0070A4  D001               	goto	l28796
 20030  0070A6                     l2069:
 20031                           
 20032                           ; BSR set to: 0
 20033                           ;pomiar.c: 428: else DtCO._su_SRW_CO=0;
 20034  0070A6  97E4               	bcf	_DtCO& (0+255),3,b
 20035  0070A8                     l28796:
 20036                           
 20037                           ; BSR set to: 0
 20038                           ;pomiar.c: 429: if(DtCO.CO>88) DtCO._ad_SRW_CO=1;
 20039  0070A8  EE20  F0E6         	lfsr	2,_DtCO+2
 20040  0070AC  0E58               	movlw	88
 20041  0070AE  64DF               	cpfsgt	indf2,c
 20042  0070B0  D002               	goto	l2071
 20043                           
 20044                           ; BSR set to: 0
 20045  0070B2  89E4               	bsf	_DtCO& (0+255),4,b
 20046  0070B4  0012               	return	
 20047  0070B6                     l2071:
 20048                           
 20049                           ; BSR set to: 0
 20050                           ;pomiar.c: 430: else DtCO._ad_SRW_CO=0;
 20051  0070B6  99E4               	bcf	_DtCO& (0+255),4,b
 20052  0070B8  0012               	return	
 20053  0070BA                     l28800:
 20054                           
 20055                           ; BSR set to: 1
 20056                           ;pomiar.c: 432: else
 20057                           ;pomiar.c: 433: {
 20058                           ;pomiar.c: 434: if(DtCO.CO<=48) DtCO._su_SRW_CO=1;
 20059  0070BA  0E31               	movlw	49
 20060  0070BC  0100               	movlb	0	; () banked
 20061  0070BE  61E6               	cpfslt	(_DtCO+2)& (0+255),b
 20062  0070C0  D002               	goto	l2074
 20063                           
 20064                           ; BSR set to: 0
 20065  0070C2  87E4               	bsf	_DtCO& (0+255),3,b
 20066  0070C4  D001               	goto	l28804
 20067  0070C6                     l2074:
 20068                           
 20069                           ; BSR set to: 0
 20070                           ;pomiar.c: 435: else DtCO._su_SRW_CO=0;
 20071  0070C6  97E4               	bcf	_DtCO& (0+255),3,b
 20072  0070C8                     l28804:
 20073                           
 20074                           ; BSR set to: 0
 20075                           ;pomiar.c: 436: if(DtCO.CO>58) DtCO._ad_SRW_CO=1;
 20076  0070C8  EE20  F0E6         	lfsr	2,_DtCO+2
 20077  0070CC  0E3A               	movlw	58
 20078  0070CE  D7EF               	goto	L30
 20079  0070D0                     __end_of_PomiarCO:
 20080                           	opt stack 0
 20081  0070D0                     PL42:
 20082                           	opt stack 22
 20083  0070D0  6A25               	clrf	(??_PomiarCO+1)& (0+255),c
 20084  0070D2  5E24               	subwf	??_PomiarCO,f,c
 20085  0070D4  0E00               	movlw	0
 20086  0070D6  5A25               	subwfb	??_PomiarCO+1,f,c
 20087  0070D8  5025               	movf	??_PomiarCO+1,w,c
 20088  0070DA  0A80               	xorlw	128
 20089  0070DC  0F80               	addlw	-128
 20090  0070DE  0C05               	retlw	5
 20091  0070E0                     __end_ofPL42:
 20092                           	opt stack 0
 20093                           tblptru	equ	0xFF8
 20094                           tblptrh	equ	0xFF7
 20095                           tblptrl	equ	0xFF6
 20096                           tablat	equ	0xFF5
 20097                           prodh	equ	0xFF4
 20098                           prodl	equ	0xFF3
 20099                           intcon	equ	0xFF2
 20100                           postinc0	equ	0xFEE
 20101                           wreg	equ	0xFE8
 20102                           indf1	equ	0xFE7
 20103                           postinc1	equ	0xFE6
 20104                           postdec1	equ	0xFE5
 20105                           fsr1h	equ	0xFE2
 20106                           fsr1l	equ	0xFE1
 20107                           indf2	equ	0xFDF
 20108                           postinc2	equ	0xFDE
 20109                           postdec2	equ	0xFDD
 20110                           fsr2h	equ	0xFDA
 20111                           fsr2l	equ	0xFD9
 20112                           status	equ	0xFD8
 20113                           
 20114 ;; *************** function _PomiarCW *****************
 20115 ;; Defined at:
 20116 ;;		line 460 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 20117 ;; Parameters:    Size  Location     Type
 20118 ;;		None
 20119 ;; Auto vars:     Size  Location     Type
 20120 ;;		None
 20121 ;; Return value:  Size  Location     Type
 20122 ;;		None               void
 20123 ;; Registers used:
 20124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20125 ;; Tracked objects:
 20126 ;;		On entry : F/0
 20127 ;;		On exit  : F/0
 20128 ;;		Unchanged: 0/0
 20129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20134 ;;Total ram usage:        2 bytes
 20135 ;; Hardware stack levels used:    1
 20136 ;; Hardware stack levels required when called:    6
 20137 ;; This function calls:
 20138 ;;		_ReadAC
 20139 ;;		_ReadTabNTC
 20140 ;;		_RdPrt
 20141 ;; This function is called by:
 20142 ;;		_main
 20143 ;;		_ErrPTG
 20144 ;; This function uses a non-reentrant model
 20145 ;;
 20146                           
 20147                           	psect	text73
 20148  007DDA                     __ptext73:
 20149                           	opt stack 0
 20150  007DDA                     _PomiarCW:
 20151                           	opt stack 22
 20152                           
 20153                           ; BSR set to: 0
 20154                           ;pomiar.c: 461: DtCW.AC_CW=ReadAC(1);
 20155                           
 20156                           ; BSR set to: 0
 20157  007DDA  0E01               	movlw	1
 20158  007DDC  EC31  F04D         	call	_ReadAC
 20159  007DE0  6FDB               	movwf	(_DtCW+12)& (0+255),b
 20160                           
 20161                           ;pomiar.c: 462: DtCW.CW=ReadTabNTC(DtCW.AC_CW);
 20162  007DE2  51DB               	movf	(_DtCW+12)& (0+255),w,b
 20163  007DE4  EC04  F050         	call	_ReadTabNTC
 20164  007DE8  0100               	movlb	0	; () banked
 20165  007DEA  6FD1               	movwf	(_DtCW+2)& (0+255),b
 20166                           
 20167                           ; BSR set to: 0
 20168                           ;pomiar.c: 464: if(DtCW.AC_CW<=0X28||DtCW.AC_CW>=0XF5)
 20169  007DEC  EE20  F0DB         	lfsr	2,_DtCW+12
 20170  007DF0  0E28               	movlw	40
 20171  007DF2  64DF               	cpfsgt	indf2,c
 20172  007DF4  D005               	goto	l2089
 20173                           
 20174                           ; BSR set to: 0
 20175  007DF6  EE20  F0DB         	lfsr	2,_DtCW+12
 20176  007DFA  0EF4               	movlw	244
 20177  007DFC  64DF               	cpfsgt	indf2,c
 20178  007DFE  D009               	goto	l2087
 20179  007E00                     l2089:
 20180                           
 20181                           ; BSR set to: 0
 20182                           ;pomiar.c: 465: {
 20183                           ;pomiar.c: 466: DtCW._err_CW=1;
 20184  007E00  81CF               	bsf	_DtCW& (0+255),0,b
 20185                           
 20186                           ;pomiar.c: 467: DtCW._su_CW=0;
 20187  007E02  93CF               	bcf	_DtCW& (0+255),1,b
 20188                           
 20189                           ;pomiar.c: 468: DtCW._ad_CW=0;
 20190  007E04  95CF               	bcf	_DtCW& (0+255),2,b
 20191                           
 20192                           ;pomiar.c: 469: DtCW._cold_CW=0;
 20193  007E06  9FCF               	bcf	_DtCW& (0+255),7,b
 20194                           
 20195                           ;pomiar.c: 470: DtCW._on_DZ_CW=0;
 20196  007E08  99CF               	bcf	_DtCW& (0+255),4,b
 20197                           
 20198                           ;pomiar.c: 471: DtCW._su_DZ_CW=0;
 20199  007E0A  9BCF               	bcf	_DtCW& (0+255),5,b
 20200                           
 20201                           ;pomiar.c: 472: DtCW._ad_DZ_CW=0;
 20202  007E0C  9DCF               	bcf	_DtCW& (0+255),6,b
 20203                           
 20204                           ;pomiar.c: 473: DtCW._wpz_CW=0;
 20205  007E0E  97CF               	bcf	_DtCW& (0+255),3,b
 20206                           
 20207                           ;pomiar.c: 474: return;
 20208  007E10  0012               	return	
 20209  007E12                     l2087:
 20210                           
 20211                           ; BSR set to: 0
 20212                           ;pomiar.c: 476: else DtCW._err_CW=0;
 20213  007E12  91CF               	bcf	_DtCW& (0+255),0,b
 20214  007E14  D044               	goto	l37172
 20215  007E16                     l37118:
 20216                           
 20217                           ; BSR set to: 1
 20218                           ;pomiar.c: 480: case 2:
 20219                           ;pomiar.c: 481: {
 20220                           ;pomiar.c: 486: if(DtCW.PCW<55)
 20221  007E16  0E37               	movlw	55
 20222  007E18  0100               	movlb	0	; () banked
 20223  007E1A  61D2               	cpfslt	(_DtCW+3)& (0+255),b
 20224  007E1C  D009               	goto	l37128
 20225  007E1E  D038               	goto	L40
 20226  007E20                     l2096:
 20227                           
 20228                           ; BSR set to: 0
 20229                           ;pomiar.c: 489: else DtCW._ad_CW=0;
 20230  007E20  95CF               	bcf	_DtCW& (0+255),2,b
 20231  007E22                     l37124:
 20232                           
 20233                           ; BSR set to: 0
 20234                           ;pomiar.c: 490: if(DtCW.CW<=65-2) DtCW._su_CW=1;
 20235  007E22  0E40               	movlw	64
 20236  007E24                     L37:
 20237  007E24  61D1               	cpfslt	(_DtCW+2)& (0+255),b
 20238  007E26  D002               	goto	l2098
 20239                           
 20240                           ; BSR set to: 0
 20241  007E28  83CF               	bsf	_DtCW& (0+255),1,b
 20242  007E2A  D042               	goto	l37174
 20243  007E2C                     l2098:
 20244                           
 20245                           ; BSR set to: 0
 20246                           ;pomiar.c: 491: else DtCW._su_CW=0;
 20247  007E2C  93CF               	bcf	_DtCW& (0+255),1,b
 20248  007E2E  D040               	goto	l37174
 20249  007E30                     l37128:
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;pomiar.c: 493: else
 20253                           ;pomiar.c: 494: {
 20254                           ;pomiar.c: 495: if(DtCW.CW>70) DtCW._ad_CW=1;
 20255  007E30  EE20  F0D1         	lfsr	2,_DtCW+2
 20256  007E34  0E46               	movlw	70
 20257  007E36  64DF               	cpfsgt	indf2,c
 20258  007E38  D002               	goto	l2101
 20259                           
 20260                           ; BSR set to: 0
 20261  007E3A  85CF               	bsf	_DtCW& (0+255),2,b
 20262  007E3C  D001               	goto	l37132
 20263  007E3E                     l2101:
 20264                           
 20265                           ; BSR set to: 0
 20266                           ;pomiar.c: 496: else DtCW._ad_CW=0;
 20267  007E3E  95CF               	bcf	_DtCW& (0+255),2,b
 20268  007E40                     l37132:
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;pomiar.c: 497: if(DtCW.CW<=70-2) DtCW._su_CW=1;
 20272  007E40  0E45               	movlw	69
 20273  007E42  D7F0               	goto	L37
 20274  007E44                     l37144:
 20275                           
 20276                           ; BSR set to: 1
 20277                           ;pomiar.c: 512: {
 20278                           ;pomiar.c: 513: if((DtCW.CW-DtCW.PPCW)>=1) DtCW._ad_CW=1;
 20279  007E44  0100               	movlb	0	; () banked
 20280  007E46  51D3               	movf	(_DtCW+4)& (0+255),w,b
 20281  007E48  C0D1  F024         	movff	_DtCW+2,??_PomiarCW
 20282  007E4C  D84C               	call	PL194	;call to abstracted procedure
 20283  007E4E  0E01               	movlw	1
 20284  007E50  B4D8               	btfsc	status,2,c
 20285  007E52  5C24               	subwf	??_PomiarCW,w,c
 20286  007E54  E302               	bnc	l2112
 20287                           
 20288                           ; BSR set to: 0
 20289  007E56  85CF               	bsf	_DtCW& (0+255),2,b
 20290  007E58  D001               	goto	l37148
 20291  007E5A                     l2112:
 20292                           
 20293                           ; BSR set to: 0
 20294                           ;pomiar.c: 514: else DtCW._ad_CW=0;
 20295  007E5A  95CF               	bcf	_DtCW& (0+255),2,b
 20296  007E5C                     l37148:
 20297                           
 20298                           ; BSR set to: 0
 20299                           ;pomiar.c: 515: if((DtCW.PPCW-DtCW.CW)>=5) DtCW._su_CW=1;
 20300  007E5C  51D1               	movf	(_DtCW+2)& (0+255),w,b
 20301  007E5E  C0D3  F024         	movff	_DtCW+4,??_PomiarCW
 20302  007E62  D841               	call	PL194	;call to abstracted procedure
 20303  007E64  0E05               	movlw	5
 20304  007E66  B4D8               	btfsc	status,2,c
 20305  007E68  5C24               	subwf	??_PomiarCW,w,c
 20306  007E6A  E302               	bnc	l2114
 20307                           
 20308                           ; BSR set to: 0
 20309  007E6C  83CF               	bsf	_DtCW& (0+255),1,b
 20310  007E6E  D001               	goto	l37152
 20311  007E70                     l2114:
 20312                           
 20313                           ; BSR set to: 0
 20314                           ;pomiar.c: 516: else DtCW._su_CW=0;
 20315  007E70  93CF               	bcf	_DtCW& (0+255),1,b
 20316  007E72                     l37152:
 20317                           
 20318                           ; BSR set to: 0
 20319                           ;pomiar.c: 517: if(RdPrt(11))
 20320  007E72  0E0B               	movlw	11
 20321  007E74  EC84  F058         	call	_RdPrt
 20322  007E78  E308               	bnc	l37160
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;pomiar.c: 518: {
 20326                           ;pomiar.c: 519: if (DtCW._su_CW) DtCW._wpz_CW=1;
 20327  007E7A  A3CF               	btfss	_DtCW& (0+255),1,b
 20328  007E7C  D002               	goto	l2117
 20329                           
 20330                           ; BSR set to: 0
 20331  007E7E  87CF               	bsf	_DtCW& (0+255),3,b
 20332  007E80  D002               	goto	l2118
 20333  007E82                     l2117:
 20334                           
 20335                           ; BSR set to: 0
 20336                           ;pomiar.c: 520: else if(!M._PRACA) DtCW._wpz_CW=0;
 20337  007E82  A57B               	btfss	(_M+27)& (0+255),2,b
 20338                           
 20339                           ; BSR set to: 0
 20340  007E84  97CF               	bcf	_DtCW& (0+255),3,b
 20341  007E86                     l2118:
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;pomiar.c: 521: if (DtCW._ad_CW) DtCW._wpz_CW=0;
 20345  007E86  A5CF               	btfss	_DtCW& (0+255),2,b
 20346  007E88  D013               	goto	l37174
 20347  007E8A                     l37160:
 20348                           
 20349                           ; BSR set to: 0
 20350  007E8A  97CF               	bcf	_DtCW& (0+255),3,b
 20351  007E8C  D011               	goto	l37174
 20352  007E8E                     l37162:
 20353                           
 20354                           ; BSR set to: 1
 20355                           ;pomiar.c: 527: {
 20356                           ;pomiar.c: 528: if(DtCW.CW>65) DtCW._ad_CW=1;
 20357  007E8E  0100               	movlb	0	; () banked
 20358  007E90                     L40:
 20359  007E90  EE20  F0D1         	lfsr	2,_DtCW+2
 20360  007E94  0E41               	movlw	65
 20361  007E96  64DF               	cpfsgt	indf2,c
 20362  007E98  D7C3               	goto	l2096
 20363                           
 20364                           ; BSR set to: 0
 20365  007E9A  85CF               	bsf	_DtCW& (0+255),2,b
 20366  007E9C  D7C2               	goto	l37124
 20367  007E9E                     l37172:
 20368                           
 20369                           ; BSR set to: 0
 20370  007E9E  0101               	movlb	1	; () banked
 20371  007EA0  5151               	movf	(_DtKNF+7)& (0+255),w,b
 20372                           
 20373                           ; Switch size 1, requested type "space"
 20374                           ; Number of cases is 4, Range of values is 0 to 3
 20375                           ; switch strategies available:
 20376                           ; Name         Instructions Cycles
 20377                           ; simple_byte           13     7 (average)
 20378                           ;	Chosen strategy is simple_byte
 20379  007EA2  E0D0               	bz	l37144
 20380  007EA4  0A01               	xorlw	1	; case 1
 20381  007EA6  E0B7               	bz	l37118
 20382  007EA8  0A03               	xorlw	3	; case 2
 20383  007EAA  E0B5               	bz	l37118
 20384  007EAC  0A01               	xorlw	1	; case 3
 20385  007EAE  D7EF               	goto	l37162
 20386  007EB0                     l37174:
 20387                           
 20388                           ; BSR set to: 0
 20389                           ;pomiar.c: 535: if(DtCW.CW<=5)
 20390  007EB0  0E06               	movlw	6
 20391  007EB2  61D1               	cpfslt	(_DtCW+2)& (0+255),b
 20392  007EB4  D003               	goto	l2127
 20393                           
 20394                           ; BSR set to: 0
 20395                           ;pomiar.c: 536: {
 20396                           ;pomiar.c: 537: DtCW._su_DZ_CW=1;
 20397  007EB6  8BCF               	bsf	_DtCW& (0+255),5,b
 20398                           
 20399                           ;pomiar.c: 538: DtCW._on_DZ_CW=1;
 20400  007EB8  89CF               	bsf	_DtCW& (0+255),4,b
 20401                           
 20402                           ;pomiar.c: 539: }
 20403  007EBA  D001               	goto	l37178
 20404  007EBC                     l2127:
 20405                           
 20406                           ; BSR set to: 0
 20407                           ;pomiar.c: 540: else DtCW._su_DZ_CW=0;
 20408  007EBC  9BCF               	bcf	_DtCW& (0+255),5,b
 20409  007EBE                     l37178:
 20410                           
 20411                           ; BSR set to: 0
 20412                           ;pomiar.c: 541: if(DtCW.CW>10)
 20413  007EBE  EE20  F0D1         	lfsr	2,_DtCW+2
 20414  007EC2  0E0A               	movlw	10
 20415  007EC4  64DF               	cpfsgt	indf2,c
 20416  007EC6  D003               	goto	l2129
 20417                           
 20418                           ; BSR set to: 0
 20419                           ;pomiar.c: 542: {
 20420                           ;pomiar.c: 543: DtCW._ad_DZ_CW=1;
 20421  007EC8  8DCF               	bsf	_DtCW& (0+255),6,b
 20422                           
 20423                           ;pomiar.c: 544: DtCW._on_DZ_CW=0;
 20424  007ECA  99CF               	bcf	_DtCW& (0+255),4,b
 20425                           
 20426                           ;pomiar.c: 545: }
 20427  007ECC  D001               	goto	l37182
 20428  007ECE                     l2129:
 20429                           
 20430                           ; BSR set to: 0
 20431                           ;pomiar.c: 546: else DtCW._ad_DZ_CW=0;
 20432  007ECE  9DCF               	bcf	_DtCW& (0+255),6,b
 20433  007ED0                     l37182:
 20434                           
 20435                           ; BSR set to: 0
 20436                           ;pomiar.c: 547: if(DtCW.CW<=5) DtCW._cold_CW=1;
 20437  007ED0  0E06               	movlw	6
 20438  007ED2  61D1               	cpfslt	(_DtCW+2)& (0+255),b
 20439  007ED4  D001               	goto	l37186
 20440                           
 20441                           ; BSR set to: 0
 20442  007ED6  8FCF               	bsf	_DtCW& (0+255),7,b
 20443  007ED8                     l37186:
 20444                           
 20445                           ; BSR set to: 0
 20446                           ;pomiar.c: 548: if(DtCW.CW>5+1) DtCW._cold_CW=0;
 20447  007ED8  EE20  F0D1         	lfsr	2,_DtCW+2
 20448  007EDC  0E06               	movlw	6
 20449  007EDE  64DF               	cpfsgt	indf2,c
 20450  007EE0  0C06               	retlw	6
 20451                           
 20452                           ; BSR set to: 0
 20453  007EE2  9FCF               	bcf	_DtCW& (0+255),7,b
 20454                           
 20455                           ; BSR set to: 0
 20456  007EE4  0C06               	retlw	6
 20457  007EE6                     __end_of_PomiarCW:
 20458                           	opt stack 0
 20459  007EE6                     PL194:
 20460                           	opt stack 22
 20461  007EE6  6A25               	clrf	(??_PomiarCW+1)& (0+255),c
 20462  007EE8  5E24               	subwf	??_PomiarCW,f,c
 20463  007EEA  0E00               	movlw	0
 20464  007EEC  5A25               	subwfb	??_PomiarCW+1,f,c
 20465  007EEE  5025               	movf	??_PomiarCW+1,w,c
 20466  007EF0  0A80               	xorlw	128
 20467  007EF2  0F80               	addlw	-128
 20468  007EF4  0012               	return	
 20469  007EF6                     __end_ofPL194:
 20470                           	opt stack 0
 20471                           tblptru	equ	0xFF8
 20472                           tblptrh	equ	0xFF7
 20473                           tblptrl	equ	0xFF6
 20474                           tablat	equ	0xFF5
 20475                           prodh	equ	0xFF4
 20476                           prodl	equ	0xFF3
 20477                           intcon	equ	0xFF2
 20478                           postinc0	equ	0xFEE
 20479                           wreg	equ	0xFE8
 20480                           indf1	equ	0xFE7
 20481                           postinc1	equ	0xFE6
 20482                           postdec1	equ	0xFE5
 20483                           fsr1h	equ	0xFE2
 20484                           fsr1l	equ	0xFE1
 20485                           indf2	equ	0xFDF
 20486                           postinc2	equ	0xFDE
 20487                           postdec2	equ	0xFDD
 20488                           fsr2h	equ	0xFDA
 20489                           fsr2l	equ	0xFD9
 20490                           status	equ	0xFD8
 20491                           
 20492 ;; *************** function _ReadTabNTC *****************
 20493 ;; Defined at:
 20494 ;;		line 112 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
 20495 ;; Parameters:    Size  Location     Type
 20496 ;;  zrAC            1    wreg     unsigned char 
 20497 ;; Auto vars:     Size  Location     Type
 20498 ;;  zrAC            1   31[COMRAM] unsigned char 
 20499 ;;  i               2   33[COMRAM] unsigned int 
 20500 ;;  data            1   32[COMRAM] unsigned char 
 20501 ;; Return value:  Size  Location     Type
 20502 ;;                  1    wreg      unsigned char 
 20503 ;; Registers used:
 20504 ;;		wreg, status,2, status,0, cstack
 20505 ;; Tracked objects:
 20506 ;;		On entry : E/1
 20507 ;;		On exit  : 0/0
 20508 ;;		Unchanged: 0/0
 20509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20511 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20513 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20514 ;;Total ram usage:        4 bytes
 20515 ;; Hardware stack levels used:    1
 20516 ;; Hardware stack levels required when called:    5
 20517 ;; This function calls:
 20518 ;;		_Read_b_eep
 20519 ;; This function is called by:
 20520 ;;		_PomiarCO
 20521 ;;		_PomiarIN
 20522 ;;		_PomiarCW
 20523 ;; This function uses a non-reentrant model
 20524 ;;
 20525                           
 20526                           	psect	text74
 20527  00A008                     __ptext74:
 20528                           	opt stack 0
 20529  00A008                     _ReadTabNTC:
 20530                           	opt stack 22
 20531                           
 20532                           ; BSR set to: 0
 20533                           ;ReadTabNTC@zrAC stored from wreg
 20534  00A008  CFE8 F020          	movff	wreg,ReadTabNTC@zrAC
 20535                           
 20536                           ;ac.c: 113: unsigned int i;
 20537                           ;ac.c: 114: unsigned char data;
 20538                           ;ac.c: 115: i=zrAC;
 20539  00A00C  C020  F022         	movff	ReadTabNTC@zrAC,ReadTabNTC@i
 20540  00A010  6A23               	clrf	ReadTabNTC@i+1,c
 20541                           
 20542                           ;ac.c: 117: if(i<0x34) i=0x34;
 20543  00A012  0E34               	movlw	52
 20544  00A014  5C22               	subwf	ReadTabNTC@i,w,c
 20545  00A016  0E00               	movlw	0
 20546  00A018  5823               	subwfb	ReadTabNTC@i+1,w,c
 20547  00A01A  E203               	bc	l27836
 20548  00A01C  6A23               	clrf	ReadTabNTC@i+1,c
 20549  00A01E  0E34               	movlw	52
 20550  00A020  6E22               	movwf	ReadTabNTC@i,c
 20551  00A022                     l27836:
 20552                           
 20553                           ;ac.c: 118: if(i>0xED) i=0xED;
 20554  00A022  0EEE               	movlw	238
 20555  00A024  5C22               	subwf	ReadTabNTC@i,w,c
 20556  00A026  0E00               	movlw	0
 20557  00A028  5823               	subwfb	ReadTabNTC@i+1,w,c
 20558  00A02A  E303               	bnc	l27840
 20559  00A02C  6A23               	clrf	ReadTabNTC@i+1,c
 20560  00A02E  0EED               	movlw	237
 20561  00A030  6E22               	movwf	ReadTabNTC@i,c
 20562  00A032                     l27840:
 20563                           
 20564                           ;ac.c: 119: i-=0x34;
 20565  00A032  0E34               	movlw	52
 20566  00A034  5E22               	subwf	ReadTabNTC@i,f,c
 20567  00A036  0E00               	movlw	0
 20568  00A038  5A23               	subwfb	ReadTabNTC@i+1,f,c
 20569                           
 20570                           ;ac.c: 120: if(i>192) i=192;
 20571  00A03A  0EC1               	movlw	193
 20572  00A03C  5C22               	subwf	ReadTabNTC@i,w,c
 20573  00A03E  0E00               	movlw	0
 20574  00A040  5823               	subwfb	ReadTabNTC@i+1,w,c
 20575  00A042  E303               	bnc	l27846
 20576  00A044  6A23               	clrf	ReadTabNTC@i+1,c
 20577  00A046  0EC0               	movlw	192
 20578  00A048  6E22               	movwf	ReadTabNTC@i,c
 20579  00A04A                     l27846:
 20580                           
 20581                           ;ac.c: 123: data=Read_b_eep(i);
 20582  00A04A  C022  F01E         	movff	ReadTabNTC@i,?_Read_b_eep
 20583  00A04E  C023  F01F         	movff	ReadTabNTC@i+1,?_Read_b_eep+1
 20584  00A052  EC83  F059         	call	_Read_b_eep	;wreg free
 20585  00A056  6E21               	movwf	ReadTabNTC@data,c
 20586                           
 20587                           ;ac.c: 124: return data;
 20588  00A058  5021               	movf	ReadTabNTC@data,w,c
 20589  00A05A  0012               	return	
 20590  00A05C                     __end_of_ReadTabNTC:
 20591                           	opt stack 0
 20592                           tblptru	equ	0xFF8
 20593                           tblptrh	equ	0xFF7
 20594                           tblptrl	equ	0xFF6
 20595                           tablat	equ	0xFF5
 20596                           prodh	equ	0xFF4
 20597                           prodl	equ	0xFF3
 20598                           intcon	equ	0xFF2
 20599                           postinc0	equ	0xFEE
 20600                           wreg	equ	0xFE8
 20601                           indf1	equ	0xFE7
 20602                           postinc1	equ	0xFE6
 20603                           postdec1	equ	0xFE5
 20604                           fsr1h	equ	0xFE2
 20605                           fsr1l	equ	0xFE1
 20606                           indf2	equ	0xFDF
 20607                           postinc2	equ	0xFDE
 20608                           postdec2	equ	0xFDD
 20609                           fsr2h	equ	0xFDA
 20610                           fsr2l	equ	0xFD9
 20611                           status	equ	0xFD8
 20612                           
 20613 ;; *************** function _PomiarCS *****************
 20614 ;; Defined at:
 20615 ;;		line 909 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 20616 ;; Parameters:    Size  Location     Type
 20617 ;;		None
 20618 ;; Auto vars:     Size  Location     Type
 20619 ;;  cs              1    9[BANK0 ] unsigned char 
 20620 ;;  dac             1    8[BANK0 ] unsigned char 
 20621 ;; Return value:  Size  Location     Type
 20622 ;;		None               void
 20623 ;; Registers used:
 20624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20625 ;; Tracked objects:
 20626 ;;		On entry : E/1
 20627 ;;		On exit  : F/1
 20628 ;;		Unchanged: FFFFFFF0/0
 20629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20631 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20633 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20634 ;;Total ram usage:        4 bytes
 20635 ;; Hardware stack levels used:    1
 20636 ;; Hardware stack levels required when called:    5
 20637 ;; This function calls:
 20638 ;;		_ReadAC
 20639 ;;		___wmul
 20640 ;;		___awdiv
 20641 ;; This function is called by:
 20642 ;;		_main
 20643 ;;		_ErrPTG
 20644 ;; This function uses a non-reentrant model
 20645 ;;
 20646                           
 20647                           	psect	text75
 20648  007282                     __ptext75:
 20649                           	opt stack 0
 20650  007282                     _PomiarCS:
 20651                           	opt stack 23
 20652                           
 20653                           ;pomiar.c: 910: static unsigned char pcs;
 20654                           ;pomiar.c: 911: unsigned char dac,cs;
 20655                           ;pomiar.c: 912: dac=ReadAC(3);
 20656  007282  0E03               	movlw	3
 20657  007284  EC31  F04D         	call	_ReadAC
 20658  007288  0100               	movlb	0	; () banked
 20659  00728A  6FFB               	movwf	PomiarCS@dac& (0+255),b
 20660                           
 20661                           ; BSR set to: 0
 20662                           ;pomiar.c: 914: if((!DtKNF.tpcs&&(dac<16||dac>235))||(DtKNF.tpcs&&(dac<16||dac>235)))
 20663  00728C  0101               	movlb	1	; () banked
 20664  00728E  675A               	tstfsz	(_DtKNF+16)& (0+255),b
 20665  007290  D007               	goto	l28902
 20666                           
 20667                           ; BSR set to: 1
 20668  007292  0E0F               	movlw	15
 20669  007294  0100               	movlb	0	; () banked
 20670  007296  65FB               	cpfsgt	PomiarCS@dac& (0+255),b
 20671  007298  D00D               	goto	l2251
 20672                           
 20673                           ; BSR set to: 0
 20674  00729A  0EEC               	movlw	236
 20675  00729C  61FB               	cpfslt	PomiarCS@dac& (0+255),b
 20676  00729E  D00A               	goto	l2251
 20677  0072A0                     l28902:
 20678  0072A0  0101               	movlb	1	; () banked
 20679  0072A2  515A               	movf	(_DtKNF+16)& (0+255),w,b
 20680  0072A4  E01C               	bz	l2249
 20681                           
 20682                           ; BSR set to: 1
 20683  0072A6  0E0F               	movlw	15
 20684  0072A8  0100               	movlb	0	; () banked
 20685  0072AA  65FB               	cpfsgt	PomiarCS@dac& (0+255),b
 20686  0072AC  D003               	goto	l2251
 20687                           
 20688                           ; BSR set to: 0
 20689  0072AE  0EEB               	movlw	235
 20690  0072B0  65FB               	cpfsgt	PomiarCS@dac& (0+255),b
 20691  0072B2  D015               	goto	l2249
 20692  0072B4                     l2251:
 20693                           
 20694                           ; BSR set to: 0
 20695                           ;pomiar.c: 915: {
 20696                           ;pomiar.c: 916: if(DtKNF.robg==0)
 20697  0072B4  0101               	movlb	1	; () banked
 20698  0072B6  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 20699  0072B8  D00A               	goto	l2256
 20700                           
 20701                           ; BSR set to: 1
 20702                           ;pomiar.c: 917: {
 20703                           ;pomiar.c: 918: DtCS._error=0;
 20704  0072BA  9631               	bcf	_DtCS,3,c
 20705                           
 20706                           ;pomiar.c: 919: DtCS._no=0;
 20707  0072BC  9431               	bcf	_DtCS,2,c
 20708                           
 20709                           ;pomiar.c: 920: DtCS._lo=0;
 20710  0072BE  9231               	bcf	_DtCS,1,c
 20711                           
 20712                           ;pomiar.c: 921: DtCS._hi=0;
 20713  0072C0  9031               	bcf	_DtCS,0,c
 20714                           
 20715                           ;pomiar.c: 922: DtCS._work=1;
 20716  0072C2  8831               	bsf	_DtCS,4,c
 20717                           
 20718                           ; BSR set to: 1
 20719                           ;pomiar.c: 923: DtCS._no_mont=1;
 20720  0072C4  6A33               	clrf	_DtCS+2,c
 20721  0072C6  0E01               	movlw	1
 20722  0072C8  6E32               	movwf	_DtCS+1,c
 20723                           
 20724                           ; BSR set to: 1
 20725                           ;pomiar.c: 924: DtCS.CS=0;
 20726  0072CA  6A34               	clrf	_DtCS+3,c
 20727                           
 20728                           ;pomiar.c: 925: }
 20729  0072CC  0012               	return	
 20730  0072CE                     l2256:
 20731                           
 20732                           ; BSR set to: 1
 20733                           ;pomiar.c: 926: else
 20734                           ;pomiar.c: 927: {
 20735                           ;pomiar.c: 928: DtCS._error=1;
 20736  0072CE  8631               	bsf	_DtCS,3,c
 20737                           
 20738                           ;pomiar.c: 929: DtCS._no=0;
 20739  0072D0  9431               	bcf	_DtCS,2,c
 20740                           
 20741                           ;pomiar.c: 930: DtCS._lo=0;
 20742  0072D2  9231               	bcf	_DtCS,1,c
 20743                           
 20744                           ;pomiar.c: 931: DtCS._hi=0;
 20745  0072D4  9031               	bcf	_DtCS,0,c
 20746                           
 20747                           ;pomiar.c: 932: DtCS._work=0;
 20748  0072D6  9831               	bcf	_DtCS,4,c
 20749                           
 20750                           ;pomiar.c: 933: DtCS._no_mont=0;
 20751  0072D8  6A32               	clrf	_DtCS+1,c
 20752  0072DA  6A33               	clrf	_DtCS+2,c
 20753  0072DC  0012               	return	
 20754  0072DE                     l2249:
 20755                           
 20756                           ;pomiar.c: 936: else
 20757                           ;pomiar.c: 937: {
 20758                           ;pomiar.c: 938: DtCS._error=0;
 20759  0072DE  9631               	bcf	_DtCS,3,c
 20760                           
 20761                           ;pomiar.c: 939: DtCS._no_mont=0;
 20762  0072E0  6A32               	clrf	_DtCS+1,c
 20763  0072E2  6A33               	clrf	_DtCS+2,c
 20764                           
 20765                           ;pomiar.c: 940: if(!DtKNF.tpcs)
 20766  0072E4  0101               	movlb	1	; () banked
 20767  0072E6  675A               	tstfsz	(_DtKNF+16)& (0+255),b
 20768  0072E8  D035               	goto	l28936
 20769                           
 20770                           ; BSR set to: 1
 20771                           ;pomiar.c: 941: {
 20772                           ;pomiar.c: 942: if(dac<30) dac=30;
 20773  0072EA  0E1E               	movlw	30
 20774  0072EC  0100               	movlb	0	; () banked
 20775  0072EE  61FB               	cpfslt	PomiarCS@dac& (0+255),b
 20776  0072F0  D001               	goto	l28918
 20777                           
 20778                           ; BSR set to: 0
 20779  0072F2  6FFB               	movwf	PomiarCS@dac& (0+255),b
 20780  0072F4                     l28918:
 20781                           
 20782                           ; BSR set to: 0
 20783                           ;pomiar.c: 943: if(dac>210) dac=210;
 20784  0072F4  0ED2               	movlw	210
 20785  0072F6  65FB               	cpfsgt	PomiarCS@dac& (0+255),b
 20786  0072F8  D001               	goto	l28922
 20787                           
 20788                           ; BSR set to: 0
 20789  0072FA  6FFB               	movwf	PomiarCS@dac& (0+255),b
 20790  0072FC                     l28922:
 20791                           
 20792                           ; BSR set to: 0
 20793                           ;pomiar.c: 944: cs=((dac-30)*10)/(((210-30)*10)/40);
 20794  0072FC  6A21               	clrf	?___wmul+3,c
 20795  0072FE  0E0A               	movlw	10
 20796  007300  6E20               	movwf	?___wmul+2,c
 20797  007302  0EE2               	movlw	226
 20798  007304  25FB               	addwf	PomiarCS@dac& (0+255),w,b
 20799  007306  6E1E               	movwf	?___wmul,c
 20800  007308  6A1F               	clrf	?___wmul+1,c
 20801  00730A  0EFF               	movlw	255
 20802  00730C  221F               	addwfc	?___wmul+1,f,c
 20803  00730E  EC9C  F056         	call	___wmul	;wreg free
 20804  007312  C01E  F0F3         	movff	?___wmul,?___awdiv
 20805  007316  C01F  F0F4         	movff	?___wmul+1,?___awdiv+1
 20806  00731A  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 20807  00731C  0E2D               	movlw	45
 20808  00731E  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 20809  007320  EC37  F04A         	call	___awdiv	;wreg free
 20810  007324  51F3               	movf	?___awdiv& (0+255),w,b
 20811  007326  6FFC               	movwf	PomiarCS@cs& (0+255),b
 20812                           
 20813                           ; BSR set to: 0
 20814                           ;pomiar.c: 945: if(cs<40)
 20815  007328  0E28               	movlw	40
 20816  00732A  61FC               	cpfslt	PomiarCS@cs& (0+255),b
 20817  00732C  D00E               	goto	l28932
 20818                           
 20819                           ; BSR set to: 0
 20820                           ;pomiar.c: 946: if((cs-pcs>0)&&(cs-pcs)<2) cs=pcs;
 20821  00732E  503C               	movf	PomiarCS@pcs,w,c
 20822  007330  D86C               	call	PL166	;call to abstracted procedure
 20823  007332  0E01               	movlw	1
 20824  007334  B4D8               	btfsc	status,2,c
 20825  007336  5C24               	subwf	??_PomiarCS,w,c
 20826  007338  E308               	bnc	l28932
 20827                           
 20828                           ; BSR set to: 0
 20829  00733A  503C               	movf	PomiarCS@pcs,w,c
 20830  00733C  D866               	call	PL166	;call to abstracted procedure
 20831  00733E  0E02               	movlw	2
 20832  007340  B4D8               	btfsc	status,2,c
 20833  007342  5C24               	subwf	??_PomiarCS,w,c
 20834  007344  A0D8               	btfss	status,0,c
 20835                           
 20836                           ; BSR set to: 0
 20837  007346  C03C  F0FC         	movff	PomiarCS@pcs,PomiarCS@cs
 20838  00734A                     l28932:
 20839                           
 20840                           ; BSR set to: 0
 20841                           ;pomiar.c: 947: if(cs>40) cs=40;
 20842  00734A  0E28               	movlw	40
 20843  00734C  65FC               	cpfsgt	PomiarCS@cs& (0+255),b
 20844  00734E  D020               	goto	l28958
 20845                           
 20846                           ; BSR set to: 0
 20847  007350  6FFC               	movwf	PomiarCS@cs& (0+255),b
 20848  007352  D01E               	goto	l28958
 20849  007354                     l28936:
 20850                           
 20851                           ; BSR set to: 1
 20852                           ;pomiar.c: 949: else
 20853                           ;pomiar.c: 950: {
 20854                           ;pomiar.c: 951: if(dac<35) dac=35;
 20855  007354  0E23               	movlw	35
 20856  007356  0100               	movlb	0	; () banked
 20857  007358  61FB               	cpfslt	PomiarCS@dac& (0+255),b
 20858  00735A  D001               	goto	l28940
 20859                           
 20860                           ; BSR set to: 0
 20861  00735C  6FFB               	movwf	PomiarCS@dac& (0+255),b
 20862  00735E                     l28940:
 20863                           
 20864                           ; BSR set to: 0
 20865                           ;pomiar.c: 952: if(dac>190) dac=190;
 20866  00735E  0EBE               	movlw	190
 20867  007360  65FB               	cpfsgt	PomiarCS@dac& (0+255),b
 20868  007362  D001               	goto	l28944
 20869                           
 20870                           ; BSR set to: 0
 20871  007364  6FFB               	movwf	PomiarCS@dac& (0+255),b
 20872  007366                     l28944:
 20873                           
 20874                           ; BSR set to: 0
 20875                           ;pomiar.c: 953: cs=((dac-35)*10)/(((190-35)*10)/40);
 20876  007366  6A21               	clrf	?___wmul+3,c
 20877  007368  0E0A               	movlw	10
 20878  00736A  6E20               	movwf	?___wmul+2,c
 20879  00736C  0EDD               	movlw	221
 20880  00736E  25FB               	addwf	PomiarCS@dac& (0+255),w,b
 20881  007370  6E1E               	movwf	?___wmul,c
 20882  007372  6A1F               	clrf	?___wmul+1,c
 20883  007374  0EFF               	movlw	255
 20884  007376  221F               	addwfc	?___wmul+1,f,c
 20885  007378  EC9C  F056         	call	___wmul	;wreg free
 20886  00737C  C01E  F0F3         	movff	?___wmul,?___awdiv
 20887  007380  C01F  F0F4         	movff	?___wmul+1,?___awdiv+1
 20888  007384  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 20889  007386  0E26               	movlw	38
 20890  007388  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 20891  00738A  EC37  F04A         	call	___awdiv	;wreg free
 20892  00738E  D7CA               	goto	L42
 20893  007390                     l28958:
 20894                           
 20895                           ; BSR set to: 0
 20896                           ;pomiar.c: 957: }
 20897                           ;pomiar.c: 958: pcs=cs;
 20898  007390  C0FC  F03C         	movff	PomiarCS@cs,PomiarCS@pcs
 20899                           
 20900                           ; BSR set to: 0
 20901                           ;pomiar.c: 959: DtCS.CS=cs;
 20902  007394  C0FC  F034         	movff	PomiarCS@cs,_DtCS+3
 20903                           
 20904                           ; BSR set to: 0
 20905                           ;pomiar.c: 960: PFN.CS=DtCS.CS;
 20906  007398  C034  F1C5         	movff	_DtCS+3,_PFN+11
 20907                           
 20908                           ; BSR set to: 0
 20909                           ;pomiar.c: 961: if(DtKNF.robg==0)
 20910  00739C  0101               	movlb	1	; () banked
 20911  00739E  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 20912  0073A0  D00E               	goto	l28976
 20913                           
 20914                           ; BSR set to: 1
 20915                           ;pomiar.c: 962: {
 20916                           ;pomiar.c: 964: DtCS._no=0;
 20917  0073A2  9431               	bcf	_DtCS,2,c
 20918                           
 20919                           ;pomiar.c: 965: DtCS._lo=0;
 20920  0073A4  9231               	bcf	_DtCS,1,c
 20921                           
 20922                           ; BSR set to: 1
 20923                           ;pomiar.c: 966: if(DtCS.CS<=27) DtCS._work=1;
 20924  0073A6  0E1C               	movlw	28
 20925  0073A8  6034               	cpfslt	_DtCS+3,c
 20926  0073AA  D002               	goto	l28972
 20927  0073AC                     
 20928                           ; BSR set to: 1
 20929  0073AC  8831               	bsf	_DtCS,4,c
 20930  0073AE  D024               	goto	l28994
 20931  0073B0                     l28972:
 20932                           
 20933                           ; BSR set to: 1
 20934                           ;pomiar.c: 967: else
 20935                           ;pomiar.c: 968: if(DtCS.CS>=29) DtCS._work=0;
 20936  0073B0  EE20  F034         	lfsr	2,_DtCS+3
 20937  0073B4  0E1C               	movlw	28
 20938  0073B6  64DF               	cpfsgt	indf2,c
 20939  0073B8  D01F               	goto	l28994
 20940  0073BA                     l28974:
 20941                           
 20942                           ; BSR set to: 1
 20943  0073BA  9831               	bcf	_DtCS,4,c
 20944  0073BC  D01D               	goto	l28994
 20945  0073BE                     l28976:
 20946                           
 20947                           ; BSR set to: 1
 20948                           ;pomiar.c: 970: else
 20949                           ;pomiar.c: 971: {
 20950                           ;pomiar.c: 973: if(DtCS.CS<3) DtCS._no=1;
 20951  0073BE  0E03               	movlw	3
 20952  0073C0  6034               	cpfslt	_DtCS+3,c
 20953  0073C2  D002               	goto	l2276
 20954                           
 20955                           ; BSR set to: 1
 20956  0073C4  8431               	bsf	_DtCS,2,c
 20957  0073C6  D001               	goto	l2277
 20958  0073C8                     l2276:
 20959                           
 20960                           ; BSR set to: 1
 20961                           ;pomiar.c: 974: else DtCS._no=0;
 20962  0073C8  9431               	bcf	_DtCS,2,c
 20963  0073CA                     l2277:
 20964                           
 20965                           ; BSR set to: 1
 20966                           ;pomiar.c: 975: if(!DtCS._no&&DtCS.CS<5) DtCS._lo=1;
 20967  0073CA  B431               	btfsc	_DtCS,2,c
 20968  0073CC  D005               	goto	l2278
 20969                           
 20970                           ; BSR set to: 1
 20971  0073CE  0E05               	movlw	5
 20972  0073D0  6034               	cpfslt	_DtCS+3,c
 20973  0073D2  D002               	goto	l2278
 20974                           
 20975                           ; BSR set to: 1
 20976  0073D4  8231               	bsf	_DtCS,1,c
 20977  0073D6  D001               	goto	l28984
 20978  0073D8                     l2278:
 20979                           
 20980                           ; BSR set to: 1
 20981                           ;pomiar.c: 976: else DtCS._lo=0;
 20982  0073D8  9231               	bcf	_DtCS,1,c
 20983  0073DA                     l28984:
 20984                           
 20985                           ; BSR set to: 1
 20986                           ;pomiar.c: 977: if((DtCS.CS>=6)&&(DtCS.CS<=27)) DtCS._work=1;
 20987  0073DA  EE20  F034         	lfsr	2,_DtCS+3
 20988  0073DE  0E05               	movlw	5
 20989  0073E0  64DF               	cpfsgt	indf2,c
 20990  0073E2  D004               	goto	l28990
 20991                           
 20992                           ; BSR set to: 1
 20993  0073E4  0E1C               	movlw	28
 20994  0073E6  6034               	cpfslt	_DtCS+3,c
 20995  0073E8  D001               	goto	l28990
 20996  0073EA  D7E0               	goto	L41
 20997  0073EC                     l28990:
 20998                           
 20999                           ; BSR set to: 1
 21000                           ;pomiar.c: 978: else
 21001                           ;pomiar.c: 979: if((DtCS.CS<=4)||(DtCS.CS>=29)) DtCS._work=0;
 21002  0073EC  EE20  F034         	lfsr	2,_DtCS+3
 21003  0073F0  0E04               	movlw	4
 21004  0073F2  64DF               	cpfsgt	indf2,c
 21005  0073F4  D7E2               	goto	l28974
 21006  0073F6  D7DC               	goto	l28972
 21007  0073F8                     l28994:
 21008                           
 21009                           ; BSR set to: 1
 21010                           ;pomiar.c: 980: }
 21011                           ;pomiar.c: 981: if(DtCS.CS>=29) DtCS._hi=1;
 21012  0073F8  EE20  F034         	lfsr	2,_DtCS+3
 21013  0073FC  0E1C               	movlw	28
 21014  0073FE  64DF               	cpfsgt	indf2,c
 21015  007400  D002               	goto	l2285
 21016                           
 21017                           ; BSR set to: 1
 21018  007402  8031               	bsf	_DtCS,0,c
 21019  007404  0C1C               	retlw	28
 21020  007406                     l2285:
 21021                           
 21022                           ; BSR set to: 1
 21023                           ;pomiar.c: 982: else DtCS._hi=0;
 21024  007406  9031               	bcf	_DtCS,0,c
 21025                           
 21026                           ; BSR set to: 1
 21027  007408  0012               	return	
 21028  00740A                     __end_of_PomiarCS:
 21029                           	opt stack 0
 21030  00740A                     PL166:
 21031                           	opt stack 23
 21032  00740A  C0FC  F024         	movff	PomiarCS@cs,??_PomiarCS
 21033  00740E  6A25               	clrf	(??_PomiarCS+1)& (0+255),c
 21034  007410  5E24               	subwf	??_PomiarCS,f,c
 21035  007412  0E00               	movlw	0
 21036  007414  5A25               	subwfb	??_PomiarCS+1,f,c
 21037  007416  5025               	movf	??_PomiarCS+1,w,c
 21038  007418  0A80               	xorlw	128
 21039  00741A  0F80               	addlw	-128
 21040  00741C  0012               	return	
 21041  00741E                     __end_ofPL166:
 21042                           	opt stack 0
 21043                           tblptru	equ	0xFF8
 21044                           tblptrh	equ	0xFF7
 21045                           tblptrl	equ	0xFF6
 21046                           tablat	equ	0xFF5
 21047                           prodh	equ	0xFF4
 21048                           prodl	equ	0xFF3
 21049                           intcon	equ	0xFF2
 21050                           postinc0	equ	0xFEE
 21051                           wreg	equ	0xFE8
 21052                           indf1	equ	0xFE7
 21053                           postinc1	equ	0xFE6
 21054                           postdec1	equ	0xFE5
 21055                           fsr1h	equ	0xFE2
 21056                           fsr1l	equ	0xFE1
 21057                           indf2	equ	0xFDF
 21058                           postinc2	equ	0xFDE
 21059                           postdec2	equ	0xFDD
 21060                           fsr2h	equ	0xFDA
 21061                           fsr2l	equ	0xFD9
 21062                           status	equ	0xFD8
 21063                           
 21064 ;; *************** function _PomiarPCO *****************
 21065 ;; Defined at:
 21066 ;;		line 707 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 21067 ;; Parameters:    Size  Location     Type
 21068 ;;		None
 21069 ;; Auto vars:     Size  Location     Type
 21070 ;;		None
 21071 ;; Return value:  Size  Location     Type
 21072 ;;		None               void
 21073 ;; Registers used:
 21074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21075 ;; Tracked objects:
 21076 ;;		On entry : F/1
 21077 ;;		On exit  : F/0
 21078 ;;		Unchanged: 0/0
 21079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21084 ;;Total ram usage:        0 bytes
 21085 ;; Hardware stack levels used:    1
 21086 ;; Hardware stack levels required when called:    7
 21087 ;; This function calls:
 21088 ;;		_StartRTdS
 21089 ;;		_WritePCO
 21090 ;;		_GetPGD_PCO
 21091 ;;		_SetModPCO
 21092 ;;		_ReturnACfromNTC
 21093 ;; This function is called by:
 21094 ;;		_main
 21095 ;;		_ErrPTG
 21096 ;; This function uses a non-reentrant model
 21097 ;;
 21098                           
 21099                           	psect	text76
 21100  009278                     __ptext76:
 21101                           	opt stack 0
 21102  009278                     _PomiarPCO:
 21103                           	opt stack 21
 21104                           
 21105                           ; BSR set to: 1
 21106                           ;pomiar.c: 708: static unsigned char pnst;
 21107                           ;pomiar.c: 711: if(!M._AKTYWNE_PGD)
 21108                           
 21109                           ; BSR set to: 1
 21110  009278  0100               	movlb	0	; () banked
 21111  00927A  5177               	movf	(_M+23)& (0+255),w,b
 21112  00927C  1176               	iorwf	(_M+22)& (0+255),w,b
 21113  00927E  E10D               	bnz	l2192
 21114                           
 21115                           ; BSR set to: 0
 21116                           ;pomiar.c: 712: {
 21117                           ;pomiar.c: 713: if(!DtKNF.opdg)
 21118  009280  0101               	movlb	1	; () banked
 21119  009282  6759               	tstfsz	(_DtKNF+15)& (0+255),b
 21120  009284  D005               	goto	l37196
 21121                           
 21122                           ; BSR set to: 1
 21123                           ;pomiar.c: 714: {
 21124                           ;pomiar.c: 715: DtCO.minPCO=40;
 21125  009286  0E28               	movlw	40
 21126  009288  0100               	movlb	0	; () banked
 21127  00928A  6FE9               	movwf	(_DtCO+5)& (0+255),b
 21128                           
 21129                           ;pomiar.c: 716: DtCO.maxPCO=85;
 21130  00928C  0E55               	movlw	85
 21131  00928E  D007               	goto	L43
 21132  009290                     l37196:
 21133                           
 21134                           ; BSR set to: 1
 21135                           ;pomiar.c: 718: else
 21136                           ;pomiar.c: 719: {
 21137                           ;pomiar.c: 720: DtCO.minPCO=35;
 21138  009290  0E23               	movlw	35
 21139  009292  0100               	movlb	0	; () banked
 21140  009294  6FE9               	movwf	(_DtCO+5)& (0+255),b
 21141                           
 21142                           ;pomiar.c: 721: DtCO.maxPCO=55;
 21143  009296  0E37               	movlw	55
 21144  009298  D002               	goto	L43
 21145  00929A                     l2192:
 21146                           
 21147                           ; BSR set to: 0
 21148                           ;pomiar.c: 724: else
 21149                           ;pomiar.c: 725: {
 21150                           ;pomiar.c: 726: DtCO.minPCO=0;
 21151  00929A  6BE9               	clrf	(_DtCO+5)& (0+255),b
 21152                           
 21153                           ; BSR set to: 0
 21154                           ;pomiar.c: 727: DtCO.maxPCO=99;
 21155  00929C  0E63               	movlw	99
 21156  00929E                     L43:
 21157  00929E  6FEA               	movwf	(_DtCO+6)& (0+255),b
 21158                           
 21159                           ; BSR set to: 0
 21160                           ;pomiar.c: 728: }
 21161                           ;pomiar.c: 729: pnst=PFN.PCO;
 21162  0092A0  C1D4  F0E0         	movff	_PFN+26,PomiarPCO@pnst
 21163                           
 21164                           ;pomiar.c: 730: if(pnst<DtCO.minPCO) pnst=DtCO.minPCO;
 21165  0092A4  51E9               	movf	(_DtCO+5)& (0+255),w,b
 21166  0092A6  61E0               	cpfslt	PomiarPCO@pnst& (0+255),b
 21167  0092A8  D002               	goto	l37204
 21168                           
 21169                           ; BSR set to: 0
 21170  0092AA  C0E9  F0E0         	movff	_DtCO+5,PomiarPCO@pnst
 21171  0092AE                     l37204:
 21172                           
 21173                           ; BSR set to: 0
 21174                           ;pomiar.c: 731: if(pnst>DtCO.maxPCO) pnst=DtCO.maxPCO;
 21175  0092AE  51E0               	movf	PomiarPCO@pnst& (0+255),w,b
 21176  0092B0  61EA               	cpfslt	(_DtCO+6)& (0+255),b
 21177  0092B2  D002               	goto	l37208
 21178                           
 21179                           ; BSR set to: 0
 21180  0092B4  C0EA  F0E0         	movff	_DtCO+6,PomiarPCO@pnst
 21181  0092B8                     l37208:
 21182                           
 21183                           ; BSR set to: 0
 21184                           ;pomiar.c: 732: if(DtCO.PCO!=pnst)
 21185  0092B8  51E7               	movf	(_DtCO+3)& (0+255),w,b
 21186  0092BA  19E0               	xorwf	PomiarPCO@pnst& (0+255),w,b
 21187  0092BC  E006               	bz	l2198
 21188                           
 21189                           ; BSR set to: 0
 21190                           ;pomiar.c: 733: {
 21191                           ;pomiar.c: 734: DtCO.PCO=pnst;
 21192  0092BE  C0E0  F0E7         	movff	PomiarPCO@pnst,_DtCO+3
 21193                           
 21194                           ;pomiar.c: 735: DtCO._newPCO=1;
 21195  0092C2  8FE5               	bsf	(_DtCO+1)& (0+255),7,b
 21196                           
 21197                           ; BSR set to: 0
 21198                           ;pomiar.c: 736: StartRTdS(5);
 21199  0092C4  0E05               	movlw	5
 21200  0092C6  ECC2  F057         	call	_StartRTdS
 21201  0092CA                     l2198:
 21202                           
 21203                           ;pomiar.c: 737: }
 21204                           ;pomiar.c: 738: WritePCO();
 21205  0092CA  ECFB  F057         	call	_WritePCO	;wreg free
 21206                           
 21207                           ;pomiar.c: 739: if(M._AKTYWNE_PGD) DtCO.PGDPCO=GetPGD_PCO();
 21208  0092CE  0100               	movlb	0	; () banked
 21209  0092D0  5177               	movf	(_M+23)& (0+255),w,b
 21210  0092D2  1176               	iorwf	(_M+22)& (0+255),w,b
 21211  0092D4  E004               	bz	l2199
 21212                           
 21213                           ; BSR set to: 0
 21214  0092D6  EC3F  F030         	call	_GetPGD_PCO	;wreg free
 21215  0092DA  0100               	movlb	0	; () banked
 21216  0092DC  6FEB               	movwf	(_DtCO+7)& (0+255),b
 21217  0092DE                     l2199:
 21218                           
 21219                           ; BSR set to: 0
 21220                           ;pomiar.c: 740: SetModPCO();
 21221  0092DE  ECFB  F049         	call	_SetModPCO	;wreg free
 21222                           
 21223                           ;pomiar.c: 741: DtCO.DAD_CO=ReturnACfromNTC(DtCO.PPCO-1);
 21224  0092E2  0100               	movlb	0	; () banked
 21225  0092E4  05E8               	decf	(_DtCO+4)& (0+255),w,b
 21226  0092E6  EC45  F054         	call	_ReturnACfromNTC
 21227  0092EA  0100               	movlb	0	; () banked
 21228  0092EC  6FF2               	movwf	(_DtCO+14)& (0+255),b
 21229                           
 21230                           ;pomiar.c: 742: DtCO.MAD_CO=ReturnACfromNTC(DtCO.PPCO-1-6);
 21231  0092EE  51E8               	movf	(_DtCO+4)& (0+255),w,b
 21232  0092F0  0FF9               	addlw	249
 21233  0092F2  EC45  F054         	call	_ReturnACfromNTC
 21234  0092F6  0100               	movlb	0	; () banked
 21235  0092F8  6FF1               	movwf	(_DtCO+13)& (0+255),b
 21236                           
 21237                           ; BSR set to: 0
 21238  0092FA  0012               	return	
 21239  0092FC                     __end_of_PomiarPCO:
 21240                           	opt stack 0
 21241                           tblptru	equ	0xFF8
 21242                           tblptrh	equ	0xFF7
 21243                           tblptrl	equ	0xFF6
 21244                           tablat	equ	0xFF5
 21245                           prodh	equ	0xFF4
 21246                           prodl	equ	0xFF3
 21247                           intcon	equ	0xFF2
 21248                           postinc0	equ	0xFEE
 21249                           wreg	equ	0xFE8
 21250                           indf1	equ	0xFE7
 21251                           postinc1	equ	0xFE6
 21252                           postdec1	equ	0xFE5
 21253                           fsr1h	equ	0xFE2
 21254                           fsr1l	equ	0xFE1
 21255                           indf2	equ	0xFDF
 21256                           postinc2	equ	0xFDE
 21257                           postdec2	equ	0xFDD
 21258                           fsr2h	equ	0xFDA
 21259                           fsr2l	equ	0xFD9
 21260                           status	equ	0xFD8
 21261                           
 21262 ;; *************** function _PomiarPCW *****************
 21263 ;; Defined at:
 21264 ;;		line 770 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 21265 ;; Parameters:    Size  Location     Type
 21266 ;;		None
 21267 ;; Auto vars:     Size  Location     Type
 21268 ;;		None
 21269 ;; Return value:  Size  Location     Type
 21270 ;;		None               void
 21271 ;; Registers used:
 21272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21273 ;; Tracked objects:
 21274 ;;		On entry : F/0
 21275 ;;		On exit  : F/0
 21276 ;;		Unchanged: 0/0
 21277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21282 ;;Total ram usage:        0 bytes
 21283 ;; Hardware stack levels used:    1
 21284 ;; Hardware stack levels required when called:    7
 21285 ;; This function calls:
 21286 ;;		_StartRTdS
 21287 ;;		_WritePCW
 21288 ;;		_SetModPCW
 21289 ;;		_ReturnACfromNTC
 21290 ;; This function is called by:
 21291 ;;		_main
 21292 ;;		_ErrPTG
 21293 ;; This function uses a non-reentrant model
 21294 ;;
 21295                           
 21296                           	psect	text77
 21297  0094E6                     __ptext77:
 21298                           	opt stack 0
 21299  0094E6                     _PomiarPCW:
 21300                           	opt stack 21
 21301                           
 21302                           ; BSR set to: 0
 21303                           ;pomiar.c: 771: static unsigned char pnst;
 21304                           ;pomiar.c: 775: switch(DtKNF.tpkt)
 21305                           
 21306                           ; BSR set to: 0
 21307  0094E6  D00B               	goto	l37230
 21308  0094E8                     l37220:
 21309                           
 21310                           ; BSR set to: 1
 21311                           ;pomiar.c: 778: case 2:
 21312                           ;pomiar.c: 779: {
 21313                           ;pomiar.c: 780: DtCW.minPCW=30;
 21314  0094E8  0E1E               	movlw	30
 21315  0094EA  0100               	movlb	0	; () banked
 21316  0094EC  6FD4               	movwf	(_DtCW+5)& (0+255),b
 21317                           
 21318                           ;pomiar.c: 781: DtCW.maxPCW=60;
 21319  0094EE  0E3C               	movlw	60
 21320  0094F0  D004               	goto	L44
 21321  0094F2                     l37224:
 21322                           
 21323                           ; BSR set to: 1
 21324                           ;pomiar.c: 791: {
 21325                           ;pomiar.c: 792: DtCW.minPCW=35;
 21326  0094F2  0E23               	movlw	35
 21327  0094F4  0100               	movlb	0	; () banked
 21328  0094F6  6FD4               	movwf	(_DtCW+5)& (0+255),b
 21329                           
 21330                           ;pomiar.c: 793: DtCW.maxPCW=65;
 21331  0094F8  0E41               	movlw	65
 21332  0094FA                     L44:
 21333  0094FA  6FD5               	movwf	(_DtCW+6)& (0+255),b
 21334                           
 21335                           ;pomiar.c: 794: break;
 21336  0094FC  D009               	goto	l2220
 21337  0094FE                     l37230:
 21338                           
 21339                           ; BSR set to: 0
 21340  0094FE  0101               	movlb	1	; () banked
 21341  009500  5151               	movf	(_DtKNF+7)& (0+255),w,b
 21342                           
 21343                           ; Switch size 1, requested type "space"
 21344                           ; Number of cases is 4, Range of values is 0 to 3
 21345                           ; switch strategies available:
 21346                           ; Name         Instructions Cycles
 21347                           ; simple_byte           13     7 (average)
 21348                           ;	Chosen strategy is simple_byte
 21349  009502  E0F7               	bz	l37224
 21350  009504  0A01               	xorlw	1	; case 1
 21351  009506  E0F0               	bz	l37220
 21352  009508  0A03               	xorlw	3	; case 2
 21353  00950A  E0EE               	bz	l37220
 21354  00950C  0A01               	xorlw	1	; case 3
 21355  00950E  D7EC               	goto	l37220
 21356  009510                     l2220:
 21357                           
 21358                           ; BSR set to: 0
 21359                           ;pomiar.c: 803: pnst=PFN.PCW;
 21360  009510  C1D6  F0E1         	movff	_PFN+28,PomiarPCW@pnst
 21361                           
 21362                           ; BSR set to: 0
 21363                           ;pomiar.c: 804: if(pnst<DtCW.minPCW) pnst=DtCW.minPCW;
 21364  009514  51D4               	movf	(_DtCW+5)& (0+255),w,b
 21365  009516  61E1               	cpfslt	PomiarPCW@pnst& (0+255),b
 21366  009518  D002               	goto	l37236
 21367                           
 21368                           ; BSR set to: 0
 21369  00951A  C0D4  F0E1         	movff	_DtCW+5,PomiarPCW@pnst
 21370  00951E                     l37236:
 21371                           
 21372                           ; BSR set to: 0
 21373                           ;pomiar.c: 805: if(pnst>DtCW.maxPCW) pnst=DtCW.maxPCW;
 21374  00951E  51E1               	movf	PomiarPCW@pnst& (0+255),w,b
 21375  009520  61D5               	cpfslt	(_DtCW+6)& (0+255),b
 21376  009522  D002               	goto	l37240
 21377                           
 21378                           ; BSR set to: 0
 21379  009524  C0D5  F0E1         	movff	_DtCW+6,PomiarPCW@pnst
 21380  009528                     l37240:
 21381                           
 21382                           ; BSR set to: 0
 21383                           ;pomiar.c: 806: if(DtCW.PCW!=pnst)
 21384  009528  51D2               	movf	(_DtCW+3)& (0+255),w,b
 21385  00952A  19E1               	xorwf	PomiarPCW@pnst& (0+255),w,b
 21386  00952C  E006               	bz	l2226
 21387                           
 21388                           ; BSR set to: 0
 21389                           ;pomiar.c: 807: {
 21390                           ;pomiar.c: 808: DtCW.PCW=pnst;
 21391  00952E  C0E1  F0D2         	movff	PomiarPCW@pnst,_DtCW+3
 21392                           
 21393                           ;pomiar.c: 809: DtCW._newPCW=1;
 21394  009532  81D0               	bsf	(_DtCW+1)& (0+255),0,b
 21395                           
 21396                           ; BSR set to: 0
 21397                           ;pomiar.c: 810: StartRTdS(6);
 21398  009534  0E06               	movlw	6
 21399  009536  ECC2  F057         	call	_StartRTdS
 21400  00953A                     l2226:
 21401                           
 21402                           ;pomiar.c: 811: }
 21403                           ;pomiar.c: 812: WritePCW();
 21404  00953A  EC0D  F058         	call	_WritePCW	;wreg free
 21405                           
 21406                           ;pomiar.c: 813: SetModPCW();
 21407  00953E  EC2C  F053         	call	_SetModPCW	;wreg free
 21408                           
 21409                           ;pomiar.c: 814: DtCW.DAD_CW=ReturnACfromNTC(DtCW.PPCW-(2-1));
 21410  009542  0100               	movlb	0	; () banked
 21411  009544  05D3               	decf	(_DtCW+4)& (0+255),w,b
 21412  009546  EC45  F054         	call	_ReturnACfromNTC
 21413  00954A  0100               	movlb	0	; () banked
 21414  00954C  6FDD               	movwf	(_DtCW+14)& (0+255),b
 21415                           
 21416                           ; BSR set to: 0
 21417                           ;pomiar.c: 815: DtCW.MAD_CW=ReturnACfromNTC(DtCW.PPCW-(2-1)-9);
 21418  00954E  51D3               	movf	(_DtCW+4)& (0+255),w,b
 21419  009550  0FF6               	addlw	246
 21420  009552  EC45  F054         	call	_ReturnACfromNTC
 21421  009556  0100               	movlb	0	; () banked
 21422  009558  6FDC               	movwf	(_DtCW+13)& (0+255),b
 21423                           
 21424                           ; BSR set to: 0
 21425  00955A  0012               	return	
 21426  00955C                     __end_of_PomiarPCW:
 21427                           	opt stack 0
 21428                           tblptru	equ	0xFF8
 21429                           tblptrh	equ	0xFF7
 21430                           tblptrl	equ	0xFF6
 21431                           tablat	equ	0xFF5
 21432                           prodh	equ	0xFF4
 21433                           prodl	equ	0xFF3
 21434                           intcon	equ	0xFF2
 21435                           postinc0	equ	0xFEE
 21436                           wreg	equ	0xFE8
 21437                           indf1	equ	0xFE7
 21438                           postinc1	equ	0xFE6
 21439                           postdec1	equ	0xFE5
 21440                           fsr1h	equ	0xFE2
 21441                           fsr1l	equ	0xFE1
 21442                           indf2	equ	0xFDF
 21443                           postinc2	equ	0xFDE
 21444                           postdec2	equ	0xFDD
 21445                           fsr2h	equ	0xFDA
 21446                           fsr2l	equ	0xFD9
 21447                           status	equ	0xFD8
 21448                           
 21449 ;; *************** function _ReturnACfromNTC *****************
 21450 ;; Defined at:
 21451 ;;		line 129 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
 21452 ;; Parameters:    Size  Location     Type
 21453 ;;  data            1    wreg     unsigned char 
 21454 ;; Auto vars:     Size  Location     Type
 21455 ;;  data            1   31[COMRAM] unsigned char 
 21456 ;;  i               2   33[COMRAM] unsigned int 
 21457 ;;  bdta            1   32[COMRAM] unsigned char 
 21458 ;; Return value:  Size  Location     Type
 21459 ;;                  1    wreg      unsigned char 
 21460 ;; Registers used:
 21461 ;;		wreg, status,2, status,0, cstack
 21462 ;; Tracked objects:
 21463 ;;		On entry : F/0
 21464 ;;		On exit  : 0/0
 21465 ;;		Unchanged: 0/0
 21466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21468 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21470 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21471 ;;Total ram usage:        4 bytes
 21472 ;; Hardware stack levels used:    1
 21473 ;; Hardware stack levels required when called:    5
 21474 ;; This function calls:
 21475 ;;		_Read_b_eep
 21476 ;; This function is called by:
 21477 ;;		_PomiarPCO
 21478 ;;		_PomiarPCW
 21479 ;; This function uses a non-reentrant model
 21480 ;;
 21481                           
 21482                           	psect	text78
 21483  00A88A                     __ptext78:
 21484                           	opt stack 0
 21485  00A88A                     _ReturnACfromNTC:
 21486                           	opt stack 22
 21487                           
 21488                           ; BSR set to: 0
 21489                           ;ReturnACfromNTC@data stored from wreg
 21490  00A88A  CFE8 F020          	movff	wreg,ReturnACfromNTC@data
 21491                           
 21492                           ; BSR set to: 0
 21493                           ;ac.c: 130: unsigned int i;
 21494                           ;ac.c: 131: unsigned char bdta;
 21495                           ;ac.c: 132: for(i=0x0000;i<0x0000+192;i++)
 21496  00A88E  6A22               	clrf	ReturnACfromNTC@i,c
 21497  00A890  6A23               	clrf	ReturnACfromNTC@i+1,c
 21498  00A892                     l27872:
 21499                           
 21500                           ;ac.c: 133: {
 21501                           ;ac.c: 134: bdta=Read_b_eep(i);
 21502  00A892  C022  F01E         	movff	ReturnACfromNTC@i,?_Read_b_eep
 21503  00A896  C023  F01F         	movff	ReturnACfromNTC@i+1,?_Read_b_eep+1
 21504  00A89A  EC83  F059         	call	_Read_b_eep	;wreg free
 21505  00A89E  6E21               	movwf	ReturnACfromNTC@bdta,c
 21506                           
 21507                           ;ac.c: 135: if(bdta<data) return ((i-0x0000)+0x34)-1;
 21508  00A8A0  5020               	movf	ReturnACfromNTC@data,w,c
 21509  00A8A2  6021               	cpfslt	ReturnACfromNTC@bdta,c
 21510  00A8A4  D003               	goto	l27880
 21511  00A8A6  5022               	movf	ReturnACfromNTC@i,w,c
 21512  00A8A8  0F33               	addlw	51
 21513  00A8AA  0012               	return	
 21514  00A8AC                     l27880:
 21515  00A8AC  4A22               	infsnz	ReturnACfromNTC@i,f,c
 21516  00A8AE  2A23               	incf	ReturnACfromNTC@i+1,f,c
 21517  00A8B0  0EC0               	movlw	192
 21518  00A8B2  5C22               	subwf	ReturnACfromNTC@i,w,c
 21519  00A8B4  0E00               	movlw	0
 21520  00A8B6  5823               	subwfb	ReturnACfromNTC@i+1,w,c
 21521  00A8B8  E3EC               	bnc	l27872
 21522                           
 21523                           ;ac.c: 136: }
 21524                           ;ac.c: 137: return (i-0x0000)+0x34;
 21525  00A8BA  5022               	movf	ReturnACfromNTC@i,w,c
 21526  00A8BC  0F34               	addlw	52
 21527  00A8BE  0012               	return	
 21528  00A8C0                     __end_of_ReturnACfromNTC:
 21529                           	opt stack 0
 21530                           tblptru	equ	0xFF8
 21531                           tblptrh	equ	0xFF7
 21532                           tblptrl	equ	0xFF6
 21533                           tablat	equ	0xFF5
 21534                           prodh	equ	0xFF4
 21535                           prodl	equ	0xFF3
 21536                           intcon	equ	0xFF2
 21537                           postinc0	equ	0xFEE
 21538                           wreg	equ	0xFE8
 21539                           indf1	equ	0xFE7
 21540                           postinc1	equ	0xFE6
 21541                           postdec1	equ	0xFE5
 21542                           fsr1h	equ	0xFE2
 21543                           fsr1l	equ	0xFE1
 21544                           indf2	equ	0xFDF
 21545                           postinc2	equ	0xFDE
 21546                           postdec2	equ	0xFDD
 21547                           fsr2h	equ	0xFDA
 21548                           fsr2l	equ	0xFD9
 21549                           status	equ	0xFD8
 21550                           
 21551 ;; *************** function _PomiarPFN *****************
 21552 ;; Defined at:
 21553 ;;		line 877 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 21554 ;; Parameters:    Size  Location     Type
 21555 ;;		None
 21556 ;; Auto vars:     Size  Location     Type
 21557 ;;		None
 21558 ;; Return value:  Size  Location     Type
 21559 ;;		None               void
 21560 ;; Registers used:
 21561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21562 ;; Tracked objects:
 21563 ;;		On entry : F/0
 21564 ;;		On exit  : 0/0
 21565 ;;		Unchanged: 0/0
 21566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21571 ;;Total ram usage:        0 bytes
 21572 ;; Hardware stack levels used:    1
 21573 ;; Hardware stack levels required when called:    7
 21574 ;; This function calls:
 21575 ;;		_ReadEEPFN
 21576 ;;		_StartRTdS
 21577 ;;		_WritePFN
 21578 ;; This function is called by:
 21579 ;;		_main
 21580 ;;		_ErrPTG
 21581 ;; This function uses a non-reentrant model
 21582 ;;
 21583                           
 21584                           	psect	text79
 21585  00A4D4                     __ptext79:
 21586                           	opt stack 0
 21587  00A4D4                     _PomiarPFN:
 21588                           	opt stack 21
 21589                           
 21590                           ; BSR set to: 0
 21591                           ;pomiar.c: 878: static unsigned char pnst;
 21592                           ;pomiar.c: 880: if(PFN._off)
 21593  00A4D4  0101               	movlb	1	; () banked
 21594  00A4D6  A1BA               	btfss	_PFN& (0+255),0,b
 21595  00A4D8  D003               	goto	l2236
 21596                           
 21597                           ; BSR set to: 1
 21598                           ;pomiar.c: 881: {
 21599                           ;pomiar.c: 882: PFN.poz=1;
 21600  00A4DA  6BDA               	clrf	(_PFN+32)& (0+255),b
 21601  00A4DC  0E01               	movlw	1
 21602  00A4DE  D00B               	goto	L45
 21603  00A4E0                     l2236:
 21604                           
 21605                           ; BSR set to: 1
 21606                           ;pomiar.c: 884: else
 21607                           ;pomiar.c: 885: if(PFN._zima&&!PFN._off)
 21608  00A4E0  B5BA               	btfsc	_PFN& (0+255),2,b
 21609                           
 21610                           ; BSR set to: 1
 21611  00A4E2  B1BA               	btfsc	_PFN& (0+255),0,b
 21612  00A4E4  D003               	goto	l2238
 21613  00A4E6                     l37258:
 21614                           
 21615                           ; BSR set to: 1
 21616                           ;pomiar.c: 886: {
 21617                           ;pomiar.c: 887: PFN.poz=3;
 21618  00A4E6  6BDA               	clrf	(_PFN+32)& (0+255),b
 21619  00A4E8  0E03               	movlw	3
 21620  00A4EA  D005               	goto	L45
 21621  00A4EC                     l2238:
 21622                           
 21623                           ; BSR set to: 1
 21624                           ;pomiar.c: 889: else
 21625                           ;pomiar.c: 890: if(PFN._lato&&!PFN._off)
 21626  00A4EC  B3BA               	btfsc	_PFN& (0+255),1,b
 21627                           
 21628                           ; BSR set to: 1
 21629  00A4EE  B1BA               	btfsc	_PFN& (0+255),0,b
 21630  00A4F0  D7FA               	goto	l37258
 21631                           
 21632                           ; BSR set to: 1
 21633                           ;pomiar.c: 891: {
 21634                           ;pomiar.c: 892: PFN.poz=2;
 21635  00A4F2  6BDA               	clrf	(_PFN+32)& (0+255),b
 21636  00A4F4  0E02               	movlw	2
 21637  00A4F6                     L45:
 21638  00A4F6  6FD9               	movwf	(_PFN+31)& (0+255),b
 21639                           
 21640                           ; BSR set to: 1
 21641                           ;pomiar.c: 897: }
 21642                           ;pomiar.c: 898: pnst=ReadEEPFN();
 21643                           
 21644                           ;pomiar.c: 893: }
 21645  00A4F8  ECEE  F05A         	call	_ReadEEPFN	;wreg free
 21646  00A4FC  0101               	movlb	1	; () banked
 21647  00A4FE  6FAF               	movwf	PomiarPFN@pnst& (0+255),b
 21648                           
 21649                           ; BSR set to: 1
 21650                           ;pomiar.c: 899: if(PFN.poz!=pnst)
 21651  00A500  51AF               	movf	PomiarPFN@pnst& (0+255),w,b
 21652  00A502  19D9               	xorwf	(_PFN+31)& (0+255),w,b
 21653  00A504  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 21654  00A506  E006               	bz	l2242
 21655                           
 21656                           ; BSR set to: 1
 21657                           ;pomiar.c: 900: {
 21658                           ;pomiar.c: 901: if(!PFN._newPFN) StartRTdS(7);
 21659  00A508  B7BD               	btfsc	(_PFN+3)& (0+255),3,b
 21660  00A50A  D003               	goto	l37274
 21661                           
 21662                           ; BSR set to: 1
 21663  00A50C  0E07               	movlw	7
 21664  00A50E  ECC2  F057         	call	_StartRTdS
 21665  00A512                     l37274:
 21666                           
 21667                           ; BSR set to: 1
 21668                           ;pomiar.c: 902: PFN._newPFN=1;
 21669  00A512  87BD               	bsf	(_PFN+3)& (0+255),3,b
 21670  00A514                     l2242:
 21671                           
 21672                           ; BSR set to: 1
 21673                           ;pomiar.c: 903: }
 21674                           ;pomiar.c: 904: WritePFN();
 21675  00A514  EF94  F058         	goto	_WritePFN	;wreg free
 21676  00A518                     __end_of_PomiarPFN:
 21677                           	opt stack 0
 21678                           tblptru	equ	0xFF8
 21679                           tblptrh	equ	0xFF7
 21680                           tblptrl	equ	0xFF6
 21681                           tablat	equ	0xFF5
 21682                           prodh	equ	0xFF4
 21683                           prodl	equ	0xFF3
 21684                           intcon	equ	0xFF2
 21685                           postinc0	equ	0xFEE
 21686                           wreg	equ	0xFE8
 21687                           indf1	equ	0xFE7
 21688                           postinc1	equ	0xFE6
 21689                           postdec1	equ	0xFE5
 21690                           fsr1h	equ	0xFE2
 21691                           fsr1l	equ	0xFE1
 21692                           indf2	equ	0xFDF
 21693                           postinc2	equ	0xFDE
 21694                           postdec2	equ	0xFDD
 21695                           fsr2h	equ	0xFDA
 21696                           fsr2l	equ	0xFD9
 21697                           status	equ	0xFD8
 21698                           
 21699 ;; *************** function _RefInterfaceData *****************
 21700 ;; Defined at:
 21701 ;;		line 346 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 21702 ;; Parameters:    Size  Location     Type
 21703 ;;		None
 21704 ;; Auto vars:     Size  Location     Type
 21705 ;;		None
 21706 ;; Return value:  Size  Location     Type
 21707 ;;		None               void
 21708 ;; Registers used:
 21709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 21710 ;; Tracked objects:
 21711 ;;		On entry : E/0
 21712 ;;		On exit  : F/1
 21713 ;;		Unchanged: 0/0
 21714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21716 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21718 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21719 ;;Total ram usage:        7 bytes
 21720 ;; Hardware stack levels used:    1
 21721 ;; Hardware stack levels required when called:    5
 21722 ;; This function calls:
 21723 ;;		_RdPrt
 21724 ;; This function is called by:
 21725 ;;		_main
 21726 ;;		_ErrPTG
 21727 ;; This function uses a non-reentrant model
 21728 ;;
 21729                           
 21730                           	psect	text80
 21731  00626E                     __ptext80:
 21732                           	opt stack 0
 21733  00626E                     _RefInterfaceData:
 21734                           	opt stack 23
 21735                           
 21736                           ;main.c: 381: PFN._EnAleg=(DtKNF.tpkt==0);
 21737  00626E  0101               	movlb	1	; () banked
 21738  006270  5151               	movf	(_DtKNF+7)& (0+255),w,b
 21739  006272  0E01               	movlw	1
 21740  006274  A4D8               	btfss	status,2,c
 21741  006276  0E00               	movlw	0
 21742  006278  6E20               	movwf	??_RefInterfaceData& (0+255),c
 21743  00627A  3220               	rrcf	??_RefInterfaceData,f,c
 21744  00627C  3220               	rrcf	??_RefInterfaceData,f,c
 21745  00627E  51BC               	movf	(_PFN+2)& (0+255),w,b
 21746  006280  1820               	xorwf	??_RefInterfaceData,w,c
 21747  006282  0B7F               	andlw	-129
 21748  006284  1820               	xorwf	??_RefInterfaceData,w,c
 21749  006286  6FBC               	movwf	(_PFN+2)& (0+255),b
 21750                           
 21751                           ; BSR set to: 1
 21752                           ;main.c: 382: PFN._plmCO=M._PRACA&&!M._RPM_CW&&RdPrt(5);
 21753  006288  6A21               	clrf	_RefInterfaceData$2068,c
 21754                           
 21755                           ; BSR set to: 1
 21756  00628A  0100               	movlb	0	; () banked
 21757  00628C  B57B               	btfsc	(_M+27)& (0+255),2,b
 21758                           
 21759                           ; BSR set to: 0
 21760  00628E  BF7B               	btfsc	(_M+27)& (0+255),7,b
 21761  006290  D006               	goto	l37288
 21762                           
 21763                           ; BSR set to: 0
 21764  006292  0E05               	movlw	5
 21765  006294  EC84  F058         	call	_RdPrt
 21766  006298  E302               	bnc	l37288
 21767                           
 21768                           ; BSR set to: 0
 21769  00629A  0E01               	movlw	1
 21770  00629C  6E21               	movwf	_RefInterfaceData$2068,c
 21771  00629E                     l37288:
 21772                           
 21773                           ; BSR set to: 0
 21774  00629E  B021               	btfsc	_RefInterfaceData$2068,0,c
 21775  0062A0  D003               	bra	u70925
 21776  0062A2  0101               	movlb	1	; () banked
 21777  0062A4  9BBD               	bcf	(_PFN+3)& (0+255),5,b
 21778  0062A6  D002               	bra	u70926
 21779  0062A8                     u70925:
 21780  0062A8  0101               	movlb	1	; () banked
 21781  0062AA  8BBD               	bsf	(_PFN+3)& (0+255),5,b
 21782  0062AC                     u70926:
 21783                           
 21784                           ; BSR set to: 1
 21785                           ;main.c: 383: PFN._plmCW=M._PRACA&&M._RPM_CW&&RdPrt(5);
 21786  0062AC  6A22               	clrf	_RefInterfaceData$2069,c
 21787                           
 21788                           ; BSR set to: 1
 21789  0062AE  0100               	movlb	0	; () banked
 21790  0062B0  B57B               	btfsc	(_M+27)& (0+255),2,b
 21791                           
 21792                           ; BSR set to: 0
 21793  0062B2  AF7B               	btfss	(_M+27)& (0+255),7,b
 21794  0062B4  D006               	goto	l37300
 21795                           
 21796                           ; BSR set to: 0
 21797  0062B6  0E05               	movlw	5
 21798  0062B8  EC84  F058         	call	_RdPrt
 21799  0062BC  E302               	bnc	l37300
 21800                           
 21801                           ; BSR set to: 0
 21802  0062BE  0E01               	movlw	1
 21803  0062C0  6E22               	movwf	_RefInterfaceData$2069,c
 21804  0062C2                     l37300:
 21805                           
 21806                           ; BSR set to: 0
 21807  0062C2  B022               	btfsc	_RefInterfaceData$2069,0,c
 21808  0062C4  D003               	bra	u70965
 21809  0062C6  0101               	movlb	1	; () banked
 21810  0062C8  9DBD               	bcf	(_PFN+3)& (0+255),6,b
 21811  0062CA  D002               	bra	u70966
 21812  0062CC                     u70965:
 21813  0062CC  0101               	movlb	1	; () banked
 21814  0062CE  8DBD               	bsf	(_PFN+3)& (0+255),6,b
 21815  0062D0                     u70966:
 21816                           
 21817                           ; BSR set to: 1
 21818                           ;main.c: 384: PFN._ofnserw=M._AKTYWNE_SRW;
 21819  0062D0  0100               	movlb	0	; () banked
 21820  0062D2  B172               	btfsc	(_M+18)& (0+255),0,b
 21821  0062D4  D003               	bra	u70975
 21822  0062D6  0101               	movlb	1	; () banked
 21823  0062D8  9FBD               	bcf	(_PFN+3)& (0+255),7,b
 21824  0062DA  D002               	bra	u70976
 21825  0062DC                     u70975:
 21826  0062DC  0101               	movlb	1	; () banked
 21827  0062DE  8FBD               	bsf	(_PFN+3)& (0+255),7,b
 21828  0062E0                     u70976:
 21829                           
 21830                           ; BSR set to: 1
 21831                           ;main.c: 385: PFN._oaleg=M._AKTYWNE_AL;
 21832  0062E0  0100               	movlb	0	; () banked
 21833  0062E2  B174               	btfsc	(_M+20)& (0+255),0,b
 21834  0062E4  D003               	bra	u70985
 21835  0062E6  0101               	movlb	1	; () banked
 21836  0062E8  91BE               	bcf	(_PFN+4)& (0+255),0,b
 21837  0062EA  D002               	bra	u70986
 21838  0062EC                     u70985:
 21839  0062EC  0101               	movlb	1	; () banked
 21840  0062EE  81BE               	bsf	(_PFN+4)& (0+255),0,b
 21841  0062F0                     u70986:
 21842                           
 21843                           ; BSR set to: 1
 21844                           ;main.c: 386: PFN._opKNF=M._AKTYWNE_KNF;
 21845  0062F0  0100               	movlb	0	; () banked
 21846  0062F2  B178               	btfsc	(_M+24)& (0+255),0,b
 21847  0062F4  D003               	bra	u70995
 21848  0062F6  0101               	movlb	1	; () banked
 21849  0062F8  97BE               	bcf	(_PFN+4)& (0+255),3,b
 21850  0062FA  D002               	bra	u70996
 21851  0062FC                     u70995:
 21852  0062FC  0101               	movlb	1	; () banked
 21853  0062FE  87BE               	bsf	(_PFN+4)& (0+255),3,b
 21854  006300                     u70996:
 21855                           
 21856                           ; BSR set to: 1
 21857                           ;main.c: 387: PFN._enKNF=DtKNF.enknf;
 21858  006300  A14A               	btfss	_DtKNF& (0+255),0,b
 21859  006302  D002               	bra	u71005
 21860  006304  89BE               	bsf	(_PFN+4)& (0+255),4,b
 21861  006306  D002               	bra	u71007
 21862  006308                     u71005:
 21863  006308  0101               	movlb	1	; () banked
 21864  00630A  99BE               	bcf	(_PFN+4)& (0+255),4,b
 21865  00630C                     u71007:
 21866                           
 21867                           ; BSR set to: 1
 21868                           ;main.c: 389: PFN._tdzCO=PFN._plmCO&&M._pob_DzCO;
 21869  00630C  6A23               	clrf	_RefInterfaceData$2070,c
 21870                           
 21871                           ; BSR set to: 1
 21872  00630E  ABBD               	btfss	(_PFN+3)& (0+255),5,b
 21873  006310  D006               	goto	l37318
 21874                           
 21875                           ; BSR set to: 1
 21876  006312  0100               	movlb	0	; () banked
 21877  006314  516D               	movf	(_M+13)& (0+255),w,b
 21878  006316  116C               	iorwf	(_M+12)& (0+255),w,b
 21879  006318  E002               	bz	l37318
 21880                           
 21881                           ; BSR set to: 0
 21882  00631A  0E01               	movlw	1
 21883  00631C  6E23               	movwf	_RefInterfaceData$2070,c
 21884  00631E                     l37318:
 21885  00631E  B023               	btfsc	_RefInterfaceData$2070,0,c
 21886  006320  D003               	bra	u71035
 21887  006322  0101               	movlb	1	; () banked
 21888  006324  9BBE               	bcf	(_PFN+4)& (0+255),5,b
 21889  006326  D002               	bra	u71036
 21890  006328                     u71035:
 21891  006328  0101               	movlb	1	; () banked
 21892  00632A  8BBE               	bsf	(_PFN+4)& (0+255),5,b
 21893  00632C                     u71036:
 21894                           
 21895                           ; BSR set to: 1
 21896                           ;main.c: 390: PFN._tdzCW=PFN._plmCW&&M._pob_DzCW;
 21897  00632C  6A24               	clrf	_RefInterfaceData$2071,c
 21898                           
 21899                           ; BSR set to: 1
 21900  00632E  ADBD               	btfss	(_PFN+3)& (0+255),6,b
 21901  006330  D006               	goto	l37328
 21902                           
 21903                           ; BSR set to: 1
 21904  006332  0100               	movlb	0	; () banked
 21905  006334  516F               	movf	(_M+15)& (0+255),w,b
 21906  006336  116E               	iorwf	(_M+14)& (0+255),w,b
 21907  006338  E002               	bz	l37328
 21908                           
 21909                           ; BSR set to: 0
 21910  00633A  0E01               	movlw	1
 21911  00633C  6E24               	movwf	_RefInterfaceData$2071,c
 21912  00633E                     l37328:
 21913  00633E  B024               	btfsc	_RefInterfaceData$2071,0,c
 21914  006340  D003               	bra	u71065
 21915  006342  0101               	movlb	1	; () banked
 21916  006344  9DBE               	bcf	(_PFN+4)& (0+255),6,b
 21917  006346  D002               	bra	u71066
 21918  006348                     u71065:
 21919  006348  0101               	movlb	1	; () banked
 21920  00634A  8DBE               	bsf	(_PFN+4)& (0+255),6,b
 21921  00634C                     u71066:
 21922                           
 21923                           ; BSR set to: 1
 21924                           ;main.c: 393: PFN._pgd=M._AKTYWNE_PGD;
 21925  00634C  0100               	movlb	0	; () banked
 21926  00634E  B176               	btfsc	(_M+22)& (0+255),0,b
 21927  006350  D003               	bra	u71075
 21928  006352  0101               	movlb	1	; () banked
 21929  006354  95BF               	bcf	(_PFN+5)& (0+255),2,b
 21930  006356  D002               	bra	u71076
 21931  006358                     u71075:
 21932  006358  0101               	movlb	1	; () banked
 21933  00635A  85BF               	bsf	(_PFN+5)& (0+255),2,b
 21934  00635C                     u71076:
 21935                           
 21936                           ; BSR set to: 1
 21937                           ;main.c: 394: PFN._obgCO=M._PRACA&&!M._RPM_CW;
 21938  00635C  6A25               	clrf	_RefInterfaceData$2072,c
 21939                           
 21940                           ; BSR set to: 1
 21941  00635E  0100               	movlb	0	; () banked
 21942  006360  B57B               	btfsc	(_M+27)& (0+255),2,b
 21943                           
 21944                           ; BSR set to: 0
 21945  006362  BF7B               	btfsc	(_M+27)& (0+255),7,b
 21946  006364  D002               	goto	l37340
 21947                           
 21948                           ; BSR set to: 0
 21949  006366  0E01               	movlw	1
 21950  006368  6E25               	movwf	_RefInterfaceData$2072,c
 21951  00636A                     l37340:
 21952                           
 21953                           ; BSR set to: 0
 21954  00636A  B025               	btfsc	_RefInterfaceData$2072,0,c
 21955  00636C  D003               	bra	u71105
 21956  00636E  0101               	movlb	1	; () banked
 21957  006370  93BE               	bcf	(_PFN+4)& (0+255),1,b
 21958  006372  D002               	bra	u71106
 21959  006374                     u71105:
 21960  006374  0101               	movlb	1	; () banked
 21961  006376  83BE               	bsf	(_PFN+4)& (0+255),1,b
 21962  006378                     u71106:
 21963                           
 21964                           ; BSR set to: 1
 21965                           ;main.c: 395: PFN._obgCW=M._PRACA&&M._RPM_CW;
 21966  006378  6A26               	clrf	_RefInterfaceData$2073,c
 21967                           
 21968                           ; BSR set to: 1
 21969  00637A  0100               	movlb	0	; () banked
 21970  00637C  B57B               	btfsc	(_M+27)& (0+255),2,b
 21971                           
 21972                           ; BSR set to: 0
 21973  00637E  AF7B               	btfss	(_M+27)& (0+255),7,b
 21974  006380  D002               	goto	l37350
 21975                           
 21976                           ; BSR set to: 0
 21977  006382  0E01               	movlw	1
 21978  006384  6E26               	movwf	_RefInterfaceData$2073,c
 21979  006386                     l37350:
 21980                           
 21981                           ; BSR set to: 0
 21982  006386  B026               	btfsc	_RefInterfaceData$2073,0,c
 21983  006388  D003               	bra	u71135
 21984  00638A  0101               	movlb	1	; () banked
 21985  00638C  95BE               	bcf	(_PFN+4)& (0+255),2,b
 21986  00638E  D002               	bra	u71136
 21987  006390                     u71135:
 21988  006390  0101               	movlb	1	; () banked
 21989  006392  85BE               	bsf	(_PFN+4)& (0+255),2,b
 21990  006394                     u71136:
 21991                           
 21992                           ; BSR set to: 1
 21993                           ;main.c: 397: PFN._errCS=DtCS._error;
 21994  006394  A631               	btfss	_DtCS,3,c
 21995  006396  D002               	bra	u71145
 21996  006398  8BBF               	bsf	(_PFN+5)& (0+255),5,b
 21997  00639A  D002               	bra	u71147
 21998  00639C                     u71145:
 21999  00639C  0101               	movlb	1	; () banked
 22000  00639E  9BBF               	bcf	(_PFN+5)& (0+255),5,b
 22001  0063A0                     u71147:
 22002                           
 22003                           ; BSR set to: 1
 22004                           ;main.c: 398: PFN._errCO=DtCO._err_CO;
 22005  0063A0  0100               	movlb	0	; () banked
 22006  0063A2  A1E4               	btfss	_DtCO& (0+255),0,b
 22007  0063A4  D003               	bra	u71155
 22008  0063A6  0101               	movlb	1	; () banked
 22009  0063A8  8DBF               	bsf	(_PFN+5)& (0+255),6,b
 22010  0063AA  D002               	bra	u71157
 22011  0063AC                     u71155:
 22012  0063AC  0101               	movlb	1	; () banked
 22013  0063AE  9DBF               	bcf	(_PFN+5)& (0+255),6,b
 22014  0063B0                     u71157:
 22015                           
 22016                           ; BSR set to: 1
 22017                           ;main.c: 399: PFN._errCW=DtCW._err_CW;
 22018  0063B0  0100               	movlb	0	; () banked
 22019  0063B2  A1CF               	btfss	_DtCW& (0+255),0,b
 22020  0063B4  D003               	bra	u71165
 22021  0063B6  0101               	movlb	1	; () banked
 22022  0063B8  8FBF               	bsf	(_PFN+5)& (0+255),7,b
 22023  0063BA  D002               	bra	u71167
 22024  0063BC                     u71165:
 22025  0063BC  0101               	movlb	1	; () banked
 22026  0063BE  9FBF               	bcf	(_PFN+5)& (0+255),7,b
 22027  0063C0                     u71167:
 22028                           
 22029                           ; BSR set to: 1
 22030                           ;main.c: 400: PFN._fnoCS=DtCS._no_mont;
 22031  0063C0  B032               	btfsc	_DtCS+1,0,c
 22032  0063C2  D002               	bra	u71175
 22033  0063C4  91C0               	bcf	(_PFN+6)& (0+255),0,b
 22034  0063C6  D002               	bra	u71176
 22035  0063C8                     u71175:
 22036  0063C8  0101               	movlb	1	; () banked
 22037  0063CA  81C0               	bsf	(_PFN+6)& (0+255),0,b
 22038  0063CC                     u71176:
 22039                           
 22040                           ; BSR set to: 1
 22041                           ;main.c: 402: PFN._ofzima=PFN._zima;
 22042  0063CC  A5BA               	btfss	_PFN& (0+255),2,b
 22043  0063CE  D002               	bra	u71185
 22044  0063D0  83C0               	bsf	(_PFN+6)& (0+255),1,b
 22045  0063D2  D002               	bra	u71187
 22046  0063D4                     u71185:
 22047  0063D4  0101               	movlb	1	; () banked
 22048  0063D6  93C0               	bcf	(_PFN+6)& (0+255),1,b
 22049  0063D8                     u71187:
 22050                           
 22051                           ; BSR set to: 1
 22052                           ;main.c: 403: PFN._oflato=PFN._lato;
 22053  0063D8  A3BA               	btfss	_PFN& (0+255),1,b
 22054  0063DA  D002               	bra	u71195
 22055  0063DC  85C0               	bsf	(_PFN+6)& (0+255),2,b
 22056  0063DE  D002               	bra	u71197
 22057  0063E0                     u71195:
 22058  0063E0  0101               	movlb	1	; () banked
 22059  0063E2  95C0               	bcf	(_PFN+6)& (0+255),2,b
 22060  0063E4                     u71197:
 22061                           
 22062                           ; BSR set to: 1
 22063                           ;main.c: 404: PFN._ofoff=PFN._off;
 22064  0063E4  A1BA               	btfss	_PFN& (0+255),0,b
 22065  0063E6  D002               	bra	u71205
 22066  0063E8  87C0               	bsf	(_PFN+6)& (0+255),3,b
 22067  0063EA  D002               	bra	u71207
 22068  0063EC                     u71205:
 22069  0063EC  0101               	movlb	1	; () banked
 22070  0063EE  97C0               	bcf	(_PFN+6)& (0+255),3,b
 22071  0063F0                     u71207:
 22072                           
 22073                           ; BSR set to: 1
 22074                           ;main.c: 406: PFN._errIN=DtIN._err_IN;
 22075  0063F0  A136               	btfss	_DtIN& (0+255),0,b
 22076  0063F2  D002               	bra	u71215
 22077  0063F4  89C0               	bsf	(_PFN+6)& (0+255),4,b
 22078  0063F6  D002               	bra	u71217
 22079  0063F8                     u71215:
 22080  0063F8  0101               	movlb	1	; () banked
 22081  0063FA  99C0               	bcf	(_PFN+6)& (0+255),4,b
 22082  0063FC                     u71217:
 22083                           
 22084                           ; BSR set to: 1
 22085                           ;main.c: 407: PFN._pmpPWM=(DtKNF.rdpm!=0)?1:0;
 22086  0063FC  0E00               	movlw	0
 22087  0063FE  EE21  F053         	lfsr	2,_DtKNF+9
 22088  006402  D824               	call	PL192	;call to abstracted procedure
 22089  006404  51C0               	movf	(_PFN+6)& (0+255),w,b
 22090  006406  1820               	xorwf	??_RefInterfaceData,w,c
 22091  006408  0BDF               	andlw	-33
 22092  00640A  1820               	xorwf	??_RefInterfaceData,w,c
 22093  00640C  6FC0               	movwf	(_PFN+6)& (0+255),b
 22094                           
 22095                           ; BSR set to: 1
 22096                           ;main.c: 408: PFN._trbECO=(DtKNF.teco!=0)?1:0;
 22097  00640E  0E00               	movlw	0
 22098  006410  EE21  F056         	lfsr	2,_DtKNF+12
 22099  006414  D81B               	call	PL192	;call to abstracted procedure
 22100  006416  4620               	rlncf	??_RefInterfaceData,f,c
 22101  006418  51C0               	movf	(_PFN+6)& (0+255),w,b
 22102  00641A  1820               	xorwf	??_RefInterfaceData,w,c
 22103  00641C  0BBF               	andlw	-65
 22104  00641E  1820               	xorwf	??_RefInterfaceData,w,c
 22105  006420  6FC0               	movwf	(_PFN+6)& (0+255),b
 22106                           
 22107                           ; BSR set to: 1
 22108                           ;main.c: 410: if(PFN._ofnserw) PFN.b_ofnserw=1;
 22109  006422  BFBD               	btfsc	(_PFN+3)& (0+255),7,b
 22110                           
 22111                           ; BSR set to: 1
 22112  006424  81D3               	bsf	(_PFN+25)& (0+255),0,b
 22113                           
 22114                           ; BSR set to: 1
 22115                           ;main.c: 411: if(PFN._ofnserw&&!PFN._fnserw) PFN._fnserw=1;
 22116  006426  BFBD               	btfsc	(_PFN+3)& (0+255),7,b
 22117                           
 22118                           ; BSR set to: 1
 22119  006428  BDBB               	btfsc	(_PFN+1)& (0+255),6,b
 22120  00642A  D001               	goto	l664
 22121                           
 22122                           ; BSR set to: 1
 22123  00642C  8DBB               	bsf	(_PFN+1)& (0+255),6,b
 22124  00642E                     l664:
 22125                           
 22126                           ; BSR set to: 1
 22127                           ;main.c: 412: if(PFN.b_ofnserw&&!PFN._ofnserw) PFN._fnserw=0;
 22128  00642E  B1D3               	btfsc	(_PFN+25)& (0+255),0,b
 22129                           
 22130                           ; BSR set to: 1
 22131  006430  BFBD               	btfsc	(_PFN+3)& (0+255),7,b
 22132  006432  D001               	goto	l665
 22133                           
 22134                           ; BSR set to: 1
 22135  006434  9DBB               	bcf	(_PFN+1)& (0+255),6,b
 22136  006436                     l665:
 22137                           
 22138                           ; BSR set to: 1
 22139                           ;main.c: 413: if(PFN._oaleg) PFN.b_oaleg=1;
 22140  006436  B1BE               	btfsc	(_PFN+4)& (0+255),0,b
 22141                           
 22142                           ; BSR set to: 1
 22143  006438  83D3               	bsf	(_PFN+25)& (0+255),1,b
 22144                           
 22145                           ; BSR set to: 1
 22146                           ;main.c: 414: if(PFN._oaleg&&!PFN._aleg) PFN._aleg=1;
 22147  00643A  B1BE               	btfsc	(_PFN+4)& (0+255),0,b
 22148                           
 22149                           ; BSR set to: 1
 22150  00643C  B1BC               	btfsc	(_PFN+2)& (0+255),0,b
 22151  00643E  D001               	goto	l667
 22152                           
 22153                           ; BSR set to: 1
 22154  006440  81BC               	bsf	(_PFN+2)& (0+255),0,b
 22155  006442                     l667:
 22156                           
 22157                           ; BSR set to: 1
 22158                           ;main.c: 415: if(PFN.b_oaleg&&!PFN._oaleg) PFN._aleg=0;
 22159  006442  B3D3               	btfsc	(_PFN+25)& (0+255),1,b
 22160                           
 22161                           ; BSR set to: 1
 22162  006444  B1BE               	btfsc	(_PFN+4)& (0+255),0,b
 22163  006446  0012               	return	
 22164                           
 22165                           ; BSR set to: 1
 22166  006448  91BC               	bcf	(_PFN+2)& (0+255),0,b
 22167                           
 22168                           ; BSR set to: 1
 22169  00644A  0012               	return	
 22170  00644C                     __end_of_RefInterfaceData:
 22171                           	opt stack 0
 22172  00644C                     PL192:
 22173                           	opt stack 23
 22174  00644C  6AF3               	clrf	prodl,c
 22175  00644E  62DF               	cpfseq	indf2,c
 22176  006450  2AF3               	incf	prodl,f,c
 22177  006452  CFF3 F020          	movff	prodl,??_RefInterfaceData
 22178  006456  3A20               	swapf	??_RefInterfaceData,f,c
 22179  006458  4620               	rlncf	??_RefInterfaceData,f,c
 22180  00645A  0012               	return	
 22181  00645C                     __end_ofPL192:
 22182                           	opt stack 0
 22183                           tblptru	equ	0xFF8
 22184                           tblptrh	equ	0xFF7
 22185                           tblptrl	equ	0xFF6
 22186                           tablat	equ	0xFF5
 22187                           prodh	equ	0xFF4
 22188                           prodl	equ	0xFF3
 22189                           intcon	equ	0xFF2
 22190                           postinc0	equ	0xFEE
 22191                           wreg	equ	0xFE8
 22192                           indf1	equ	0xFE7
 22193                           postinc1	equ	0xFE6
 22194                           postdec1	equ	0xFE5
 22195                           fsr1h	equ	0xFE2
 22196                           fsr1l	equ	0xFE1
 22197                           indf2	equ	0xFDF
 22198                           postinc2	equ	0xFDE
 22199                           postdec2	equ	0xFDD
 22200                           fsr2h	equ	0xFDA
 22201                           fsr2l	equ	0xFD9
 22202                           status	equ	0xFD8
 22203                           
 22204 ;; *************** function _ZmienKCOKCW *****************
 22205 ;; Defined at:
 22206 ;;		line 3055 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 22207 ;; Parameters:    Size  Location     Type
 22208 ;;		None
 22209 ;; Auto vars:     Size  Location     Type
 22210 ;;		None
 22211 ;; Return value:  Size  Location     Type
 22212 ;;		None               void
 22213 ;; Registers used:
 22214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22215 ;; Tracked objects:
 22216 ;;		On entry : F/0
 22217 ;;		On exit  : E/0
 22218 ;;		Unchanged: 0/0
 22219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22224 ;;Total ram usage:        1 bytes
 22225 ;; Hardware stack levels used:    1
 22226 ;; Hardware stack levels required when called:    5
 22227 ;; This function calls:
 22228 ;;		_StartRTdS
 22229 ;;		_RTdS
 22230 ;; This function is called by:
 22231 ;;		_main
 22232 ;;		_ErrPTG
 22233 ;; This function uses a non-reentrant model
 22234 ;;
 22235                           
 22236                           	psect	text81
 22237  007CB6                     __ptext81:
 22238                           	opt stack 0
 22239  007CB6                     _ZmienKCOKCW:
 22240                           	opt stack 23
 22241                           
 22242                           ; BSR set to: 0
 22243                           ;main.c: 3056: switch(DtKNF.tpkt)
 22244                           
 22245                           ; BSR set to: 1
 22246  007CB6  D07A               	goto	l39328
 22247  007CB8                     l39258:
 22248  007CB8  0E01               	movlw	1
 22249                           
 22250                           ; BSR set to: 0
 22251                           ;main.c: 3064: {
 22252                           ;main.c: 3065: PORTDbits.RD2=!PORTDbits.RD2;
 22253  007CBA  B483               	btfsc	3971,2,c	;volatile
 22254  007CBC  0E00               	movlw	0
 22255  007CBE  6E1F               	movwf	??_ZmienKCOKCW& (0+255),c
 22256  007CC0  461F               	rlncf	??_ZmienKCOKCW,f,c
 22257  007CC2  461F               	rlncf	??_ZmienKCOKCW,f,c
 22258  007CC4  5083               	movf	3971,w,c	;volatile
 22259  007CC6  181F               	xorwf	??_ZmienKCOKCW,w,c
 22260  007CC8  0BFB               	andlw	-5
 22261  007CCA  181F               	xorwf	??_ZmienKCOKCW,w,c
 22262  007CCC  6E83               	movwf	3971,c	;volatile
 22263                           
 22264                           ; BSR set to: 0
 22265                           ;main.c: 3066: M.ZKP=1;
 22266  007CCE  0E01               	movlw	1
 22267  007CD0  6F8D               	movwf	(_M+45)& (0+255),b
 22268                           
 22269                           ; BSR set to: 0
 22270                           ;main.c: 3067: StartRTdS(1);
 22271  007CD2  ECC2  F057         	call	_StartRTdS
 22272  007CD6                     l39264:
 22273                           
 22274                           ;main.c: 3070: {
 22275                           ;main.c: 3071: if(RTdS(1)<10/2) return;
 22276  007CD6  0E01               	movlw	1
 22277  007CD8  ECD5  F057         	call	_RTdS
 22278  007CDC  6E1F               	movwf	??_ZmienKCOKCW& (0+255),c
 22279  007CDE  0E05               	movlw	5
 22280  007CE0  5C1F               	subwf	??_ZmienKCOKCW,w,c
 22281  007CE2  A0D8               	btfss	status,0,c
 22282  007CE4  0012               	return	
 22283                           
 22284                           ; BSR set to: 1
 22285                           ;main.c: 3072: M._ZMKCOCW=0;
 22286  007CE6  0100               	movlb	0	; () banked
 22287  007CE8  9370               	bcf	(_M+16)& (0+255),1,b
 22288                           
 22289                           ;main.c: 3073: M.ZKP=0;
 22290  007CEA  6B8D               	clrf	(_M+45)& (0+255),b
 22291                           
 22292                           ;main.c: 3074: }
 22293                           ;main.c: 3075: }
 22294  007CEC  0012               	return	
 22295  007CEE                     l39268:
 22296                           
 22297                           ; BSR set to: 1
 22298  007CEE  0100               	movlb	0	; () banked
 22299  007CF0  518D               	movf	(_M+45)& (0+255),w,b
 22300                           
 22301                           ; Switch size 1, requested type "space"
 22302                           ; Number of cases is 2, Range of values is 0 to 1
 22303                           ; switch strategies available:
 22304                           ; Name         Instructions Cycles
 22305                           ; simple_byte            7     4 (average)
 22306                           ;	Chosen strategy is simple_byte
 22307  007CF2  E0E2               	bz	l39258
 22308  007CF4  0A01               	xorlw	1	; case 1
 22309  007CF6  A4D8               	btfss	status,2,c
 22310  007CF8  0012               	return	
 22311  007CFA  D7ED               	goto	l39264
 22312  007CFC                     l39270:
 22313                           
 22314                           ; BSR set to: 0
 22315                           ;main.c: 3084: {
 22316                           ;main.c: 3085: M.ZKP=1;
 22317  007CFC  0E01               	movlw	1
 22318  007CFE  6F8D               	movwf	(_M+45)& (0+255),b
 22319                           
 22320                           ; BSR set to: 0
 22321                           ;main.c: 3086: PORTDbits.RD2=0;
 22322  007D00  9483               	bcf	3971,2,c	;volatile
 22323                           
 22324                           ; BSR set to: 0
 22325                           ;main.c: 3087: StartRTdS(1);
 22326  007D02  ECC2  F057         	call	_StartRTdS
 22327  007D06                     l39276:
 22328                           
 22329                           ;main.c: 3090: {
 22330                           ;main.c: 3091: if(RTdS(1)<10/2) return;
 22331  007D06  0E01               	movlw	1
 22332  007D08  ECD5  F057         	call	_RTdS
 22333  007D0C  6E1F               	movwf	??_ZmienKCOKCW& (0+255),c
 22334  007D0E  0E05               	movlw	5
 22335  007D10  5C1F               	subwf	??_ZmienKCOKCW,w,c
 22336  007D12  A0D8               	btfss	status,0,c
 22337  007D14  0012               	return	
 22338  007D16  0E01               	movlw	1
 22339                           
 22340                           ; BSR set to: 1
 22341                           ;main.c: 3092: PORTDbits.RD1=!PORTDbits.RD1;
 22342                           
 22343                           ; BSR set to: 1
 22344                           ;main.c: 3093: M.ZKP=2;
 22345  007D18  D853               	call	PL134	;call to abstracted procedure
 22346  007D1A                     l39284:
 22347                           
 22348                           ; BSR set to: 0
 22349                           ;main.c: 3096: {
 22350                           ;main.c: 3097: if(RTdS(1)<10) return;
 22351  007D1A  0E01               	movlw	1
 22352  007D1C  ECD5  F057         	call	_RTdS
 22353  007D20  6E1F               	movwf	??_ZmienKCOKCW& (0+255),c
 22354  007D22  0E0A               	movlw	10
 22355  007D24  5C1F               	subwf	??_ZmienKCOKCW,w,c
 22356  007D26  A0D8               	btfss	status,0,c
 22357  007D28  0012               	return	
 22358                           
 22359                           ; BSR set to: 1
 22360                           ;main.c: 3098: M._ZMKCOCW=0;
 22361  007D2A  0100               	movlb	0	; () banked
 22362  007D2C  9370               	bcf	(_M+16)& (0+255),1,b
 22363                           
 22364                           ;main.c: 3099: M.ZKP=0;
 22365  007D2E  6B8D               	clrf	(_M+45)& (0+255),b
 22366                           
 22367                           ;main.c: 3102: if(M._ROZRUCH||PORTDbits.RD0||M._WYLACZ) PORTDbits.RD2=1;
 22368  007D30  A570               	btfss	(_M+16)& (0+255),2,b
 22369                           
 22370                           ; BSR set to: 0
 22371  007D32  B083               	btfsc	3971,0,c	;volatile
 22372  007D34  D001               	goto	l1559
 22373                           
 22374                           ; BSR set to: 0
 22375  007D36  B170               	btfsc	(_M+16)& (0+255),0,b
 22376  007D38                     l1559:
 22377                           
 22378                           ; BSR set to: 0
 22379  007D38  8483               	bsf	3971,2,c	;volatile
 22380  007D3A                     l1557:
 22381                           
 22382                           ; BSR set to: 0
 22383                           ;main.c: 3103: if(DtKNF.robg==0)
 22384  007D3A  0101               	movlb	1	; () banked
 22385  007D3C  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 22386  007D3E  0012               	return	
 22387                           
 22388                           ; BSR set to: 1
 22389                           ;main.c: 3104: {
 22390                           ;main.c: 3105: if(M._RUSZ_POMPE) PORTDbits.RD2=1;
 22391  007D40  0100               	movlb	0	; () banked
 22392  007D42  B571               	btfsc	(_M+17)& (0+255),2,b
 22393                           
 22394                           ; BSR set to: 0
 22395  007D44  8483               	bsf	3971,2,c	;volatile
 22396  007D46  0012               	return	
 22397  007D48                     l39296:
 22398                           
 22399                           ; BSR set to: 1
 22400  007D48  0100               	movlb	0	; () banked
 22401  007D4A  518D               	movf	(_M+45)& (0+255),w,b
 22402                           
 22403                           ; Switch size 1, requested type "space"
 22404                           ; Number of cases is 3, Range of values is 0 to 2
 22405                           ; switch strategies available:
 22406                           ; Name         Instructions Cycles
 22407                           ; simple_byte           10     6 (average)
 22408                           ;	Chosen strategy is simple_byte
 22409  007D4C  E0D7               	bz	l39270
 22410  007D4E  0A01               	xorlw	1	; case 1
 22411  007D50  E0DA               	bz	l39276
 22412  007D52  0A03               	xorlw	3	; case 2
 22413  007D54  A4D8               	btfss	status,2,c
 22414  007D56  0012               	return	
 22415  007D58  D7E0               	goto	l39284
 22416  007D5A                     l39298:
 22417                           
 22418                           ; BSR set to: 0
 22419                           ;main.c: 3116: {
 22420                           ;main.c: 3117: M.ZKP=1;
 22421  007D5A  0E01               	movlw	1
 22422  007D5C  6F8D               	movwf	(_M+45)& (0+255),b
 22423                           
 22424                           ; BSR set to: 0
 22425                           ;main.c: 3118: PORTDbits.RD2=0;
 22426  007D5E  9483               	bcf	3971,2,c	;volatile
 22427                           
 22428                           ; BSR set to: 0
 22429                           ;main.c: 3119: StartRTdS(1);
 22430  007D60  ECC2  F057         	call	_StartRTdS
 22431  007D64                     l39304:
 22432                           
 22433                           ;main.c: 3122: {
 22434                           ;main.c: 3123: if(RTdS(1)<10/2) return;
 22435  007D64  0E01               	movlw	1
 22436  007D66  ECD5  F057         	call	_RTdS
 22437  007D6A  6E1F               	movwf	??_ZmienKCOKCW& (0+255),c
 22438  007D6C  0E05               	movlw	5
 22439  007D6E  5C1F               	subwf	??_ZmienKCOKCW,w,c
 22440  007D70  A0D8               	btfss	status,0,c
 22441  007D72  0012               	return	
 22442  007D74  0E01               	movlw	1
 22443                           
 22444                           ; BSR set to: 1
 22445                           ;main.c: 3124: PORTDbits.RD1=!PORTDbits.RD1;
 22446                           
 22447                           ; BSR set to: 1
 22448                           ;main.c: 3125: M.ZKP=2;
 22449  007D76  D824               	call	PL134	;call to abstracted procedure
 22450  007D78                     l39312:
 22451                           
 22452                           ; BSR set to: 0
 22453                           ;main.c: 3128: {
 22454                           ;main.c: 3129: if(RTdS(1)<10) return;
 22455  007D78  0E01               	movlw	1
 22456  007D7A  ECD5  F057         	call	_RTdS
 22457  007D7E  6E1F               	movwf	??_ZmienKCOKCW& (0+255),c
 22458  007D80  0E0A               	movlw	10
 22459  007D82  5C1F               	subwf	??_ZmienKCOKCW,w,c
 22460  007D84  A0D8               	btfss	status,0,c
 22461  007D86  0012               	return	
 22462                           
 22463                           ; BSR set to: 1
 22464                           ;main.c: 3130: M._ZMKCOCW=0;
 22465  007D88  0100               	movlb	0	; () banked
 22466  007D8A  9370               	bcf	(_M+16)& (0+255),1,b
 22467                           
 22468                           ;main.c: 3131: M.ZKP=0;
 22469  007D8C  6B8D               	clrf	(_M+45)& (0+255),b
 22470                           
 22471                           ;main.c: 3134: if(M._ROZRUCH||PORTDbits.RD0||M._WYLACZ) PORTDbits.RD2=1;
 22472  007D8E  A570               	btfss	(_M+16)& (0+255),2,b
 22473                           
 22474                           ; BSR set to: 0
 22475  007D90  B083               	btfsc	3971,0,c	;volatile
 22476  007D92  D001               	goto	l1572
 22477                           
 22478                           ; BSR set to: 0
 22479  007D94  B170               	btfsc	(_M+16)& (0+255),0,b
 22480  007D96                     l1572:
 22481                           
 22482                           ; BSR set to: 0
 22483  007D96  8483               	bsf	3971,2,c	;volatile
 22484  007D98  D7D0               	goto	l1557
 22485  007D9A                     l39324:
 22486                           
 22487                           ; BSR set to: 1
 22488  007D9A  0100               	movlb	0	; () banked
 22489  007D9C  518D               	movf	(_M+45)& (0+255),w,b
 22490                           
 22491                           ; Switch size 1, requested type "space"
 22492                           ; Number of cases is 3, Range of values is 0 to 2
 22493                           ; switch strategies available:
 22494                           ; Name         Instructions Cycles
 22495                           ; simple_byte           10     6 (average)
 22496                           ;	Chosen strategy is simple_byte
 22497  007D9E  E0DD               	bz	l39298
 22498  007DA0  0A01               	xorlw	1	; case 1
 22499  007DA2  E0E0               	bz	l39304
 22500  007DA4  0A03               	xorlw	3	; case 2
 22501  007DA6  A4D8               	btfss	status,2,c
 22502  007DA8  0012               	return	
 22503  007DAA  D7E6               	goto	l39312
 22504  007DAC                     l39328:
 22505                           
 22506                           ; BSR set to: 0
 22507  007DAC  0101               	movlb	1	; () banked
 22508  007DAE  5151               	movf	(_DtKNF+7)& (0+255),w,b
 22509                           
 22510                           ; Switch size 1, requested type "space"
 22511                           ; Number of cases is 4, Range of values is 0 to 3
 22512                           ; switch strategies available:
 22513                           ; Name         Instructions Cycles
 22514                           ; simple_byte           13     7 (average)
 22515                           ;	Chosen strategy is simple_byte
 22516  007DB0  E0CB               	bz	l39296
 22517  007DB2  0A01               	xorlw	1	; case 1
 22518  007DB4  E09C               	bz	l39268
 22519  007DB6  0A03               	xorlw	3	; case 2
 22520  007DB8  E09A               	bz	l39268
 22521  007DBA  0A01               	xorlw	1	; case 3
 22522  007DBC  E0C5               	bz	l39296
 22523  007DBE  D7ED               	goto	l39324
 22524  007DC0                     __end_of_ZmienKCOKCW:
 22525                           	opt stack 0
 22526  007DC0                     PL134:
 22527                           	opt stack 23
 22528  007DC0  B283               	btfsc	3971,1,c	;volatile
 22529  007DC2  0E00               	movlw	0
 22530  007DC4  6E1F               	movwf	??_ZmienKCOKCW& (0+255),c
 22531  007DC6  461F               	rlncf	??_ZmienKCOKCW,f,c
 22532  007DC8  5083               	movf	3971,w,c	;volatile
 22533  007DCA  181F               	xorwf	??_ZmienKCOKCW,w,c
 22534  007DCC  0BFD               	andlw	-3
 22535  007DCE  181F               	xorwf	??_ZmienKCOKCW,w,c
 22536  007DD0  6E83               	movwf	3971,c	;volatile
 22537  007DD2  0E02               	movlw	2
 22538  007DD4  0100               	movlb	0	; () banked
 22539  007DD6  6F8D               	movwf	(_M+45)& (0+255),b
 22540  007DD8  0C02               	retlw	2
 22541  007DDA                     __end_ofPL134:
 22542                           	opt stack 0
 22543                           tblptru	equ	0xFF8
 22544                           tblptrh	equ	0xFF7
 22545                           tblptrl	equ	0xFF6
 22546                           tablat	equ	0xFF5
 22547                           prodh	equ	0xFF4
 22548                           prodl	equ	0xFF3
 22549                           intcon	equ	0xFF2
 22550                           postinc0	equ	0xFEE
 22551                           wreg	equ	0xFE8
 22552                           indf1	equ	0xFE7
 22553                           postinc1	equ	0xFE6
 22554                           postdec1	equ	0xFE5
 22555                           fsr1h	equ	0xFE2
 22556                           fsr1l	equ	0xFE1
 22557                           indf2	equ	0xFDF
 22558                           postinc2	equ	0xFDE
 22559                           postdec2	equ	0xFDD
 22560                           fsr2h	equ	0xFDA
 22561                           fsr2l	equ	0xFD9
 22562                           status	equ	0xFD8
 22563                           
 22564 ;; *************** function _Wylacz *****************
 22565 ;; Defined at:
 22566 ;;		line 2714 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 22567 ;; Parameters:    Size  Location     Type
 22568 ;;		None
 22569 ;; Auto vars:     Size  Location     Type
 22570 ;;		None
 22571 ;; Return value:  Size  Location     Type
 22572 ;;		None               void
 22573 ;; Registers used:
 22574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22575 ;; Tracked objects:
 22576 ;;		On entry : F/0
 22577 ;;		On exit  : E/0
 22578 ;;		Unchanged: 0/0
 22579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22583 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22584 ;;Total ram usage:        1 bytes
 22585 ;; Hardware stack levels used:    1
 22586 ;; Hardware stack levels required when called:    5
 22587 ;; This function calls:
 22588 ;;		_StartRTS
 22589 ;;		_RTS
 22590 ;;		_RdPrt
 22591 ;; This function is called by:
 22592 ;;		_main
 22593 ;;		_ErrPTG
 22594 ;; This function uses a non-reentrant model
 22595 ;;
 22596                           
 22597                           	psect	text82
 22598  004AE4                     __ptext82:
 22599                           	opt stack 0
 22600  004AE4                     _Wylacz:
 22601                           	opt stack 23
 22602                           
 22603                           ; BSR set to: 0
 22604                           ;main.c: 2715: switch(DtKNF.tpkt)
 22605  004AE4  D119               	goto	l39542
 22606  004AE6                     l39332:
 22607                           
 22608                           ; BSR set to: 0
 22609                           ;main.c: 2723: {
 22610                           ;main.c: 2724: M.WYL=1;
 22611  004AE6  0E01               	movlw	1
 22612  004AE8  6F88               	movwf	(_M+40)& (0+255),b
 22613                           
 22614                           ; BSR set to: 0
 22615                           ;main.c: 2725: StartRTS(7);
 22616  004AEA  0E07               	movlw	7
 22617  004AEC  EC9C  F057         	call	_StartRTS
 22618  004AF0                     l39336:
 22619                           
 22620                           ;main.c: 2728: {
 22621                           ;main.c: 2729: if(M._KCW_PMP)
 22622  004AF0  0100               	movlb	0	; () banked
 22623  004AF2  AB7B               	btfss	(_M+27)& (0+255),5,b
 22624  004AF4  D018               	goto	l39358
 22625                           
 22626                           ; BSR set to: 0
 22627                           ;main.c: 2730: {
 22628                           ;main.c: 2731: if(RTS(7)>=20)
 22629  004AF6  0E07               	movlw	7
 22630  004AF8  ECAF  F057         	call	_RTS
 22631  004AFC  6E20               	movwf	??_Wylacz& (0+255),c
 22632  004AFE  0E14               	movlw	20
 22633  004B00  5C20               	subwf	??_Wylacz,w,c
 22634  004B02  E308               	bnc	l39348
 22635                           
 22636                           ; BSR set to: 1
 22637                           ;main.c: 2732: {
 22638                           ;main.c: 2733: if(!DtCO._err_CO&&DtCO._ptwp_CO)
 22639  004B04  0100               	movlb	0	; () banked
 22640  004B06  A1E4               	btfss	_DtCO& (0+255),0,b
 22641                           
 22642                           ; BSR set to: 0
 22643  004B08  A1E5               	btfss	(_DtCO+1)& (0+255),0,b
 22644  004B0A  D004               	goto	l39348
 22645  004B0C                     l39344:
 22646                           
 22647                           ;main.c: 2734: {
 22648                           ;main.c: 2735: M.WYL=2;
 22649  004B0C  0E02               	movlw	2
 22650  004B0E  0100               	movlb	0	; () banked
 22651  004B10  6F88               	movwf	(_M+40)& (0+255),b
 22652  004B12  0C02               	retlw	2
 22653  004B14                     l39348:
 22654                           
 22655                           ;main.c: 2737: }
 22656                           ;main.c: 2738: }
 22657                           ;main.c: 2739: if(RTS(7)<180) return;
 22658  004B14  0E07               	movlw	7
 22659  004B16  ECAF  F057         	call	_RTS
 22660  004B1A                     L46:
 22661  004B1A  6E20               	movwf	??_Wylacz& (0+255),c
 22662  004B1C  0EB4               	movlw	180
 22663  004B1E  5C20               	subwf	??_Wylacz,w,c
 22664  004B20  A0D8               	btfss	status,0,c
 22665  004B22  0012               	return	
 22666  004B24  D7F3               	goto	l39344
 22667  004B26                     l39358:
 22668                           
 22669                           ; BSR set to: 0
 22670                           ;main.c: 2743: else
 22671                           ;main.c: 2744: {
 22672                           ;main.c: 2745: if(RTS(7)<180) return;
 22673  004B26  0E07               	movlw	7
 22674  004B28  ECAF  F057         	call	_RTS
 22675  004B2C  6E20               	movwf	??_Wylacz& (0+255),c
 22676  004B2E  0EB4               	movlw	180
 22677  004B30  5C20               	subwf	??_Wylacz,w,c
 22678  004B32  A0D8               	btfss	status,0,c
 22679  004B34  0012               	return	
 22680                           
 22681                           ; BSR set to: 1
 22682                           ;main.c: 2746: M.WYL=2;
 22683  004B36  0E02               	movlw	2
 22684  004B38  0100               	movlb	0	; () banked
 22685  004B3A  6F88               	movwf	(_M+40)& (0+255),b
 22686  004B3C                     l39364:
 22687                           
 22688                           ; BSR set to: 0
 22689                           ;main.c: 2750: {
 22690                           ;main.c: 2751: if(RdPrt(13)) return;
 22691  004B3C  0E0D               	movlw	13
 22692  004B3E  EC84  F058         	call	_RdPrt
 22693  004B42  B0D8               	btfsc	status,0,c
 22694  004B44  0012               	return	
 22695                           
 22696                           ; BSR set to: 0
 22697                           ;main.c: 2752: if(!M._KCW_PMP)
 22698  004B46  AB7B               	btfss	(_M+27)& (0+255),5,b
 22699                           
 22700                           ; BSR set to: 0
 22701                           ;main.c: 2753: {
 22702                           ;main.c: 2754: if(!DtCO._err_CO&&!DtCO._su_CO) return;
 22703  004B48  B1E4               	btfsc	_DtCO& (0+255),0,b
 22704  004B4A  D002               	goto	l1437
 22705                           
 22706                           ; BSR set to: 0
 22707  004B4C  A3E4               	btfss	_DtCO& (0+255),1,b
 22708  004B4E  0012               	return	
 22709  004B50                     l1437:
 22710                           
 22711                           ; BSR set to: 0
 22712                           ;main.c: 2755: }
 22713                           ;main.c: 2756: if(DtKNF.robg==0)
 22714  004B50  0101               	movlb	1	; () banked
 22715  004B52  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 22716  004B54  D003               	goto	l1439
 22717                           
 22718                           ; BSR set to: 1
 22719                           ;main.c: 2757: {
 22720                           ;main.c: 2758: if(M._RUSZ_POMPE) return;
 22721  004B56  0100               	movlb	0	; () banked
 22722  004B58  B571               	btfsc	(_M+17)& (0+255),2,b
 22723  004B5A  0012               	return	
 22724  004B5C                     l1439:
 22725                           
 22726                           ;main.c: 2759: }
 22727                           ;main.c: 2760: M._KCW_PMP=0;
 22728  004B5C  0100               	movlb	0	; () banked
 22729  004B5E  9B7B               	bcf	(_M+27)& (0+255),5,b
 22730                           
 22731                           ;main.c: 2761: M._WYLACZ=0;
 22732  004B60  9170               	bcf	(_M+16)& (0+255),0,b
 22733                           
 22734                           ;main.c: 2762: M.WYL=0;
 22735  004B62  6B88               	clrf	(_M+40)& (0+255),b
 22736                           
 22737                           ;main.c: 2763: }
 22738                           ;main.c: 2764: }
 22739  004B64  0012               	return	
 22740  004B66                     l39378:
 22741                           
 22742                           ; BSR set to: 1
 22743  004B66  0100               	movlb	0	; () banked
 22744  004B68  5188               	movf	(_M+40)& (0+255),w,b
 22745                           
 22746                           ; Switch size 1, requested type "space"
 22747                           ; Number of cases is 3, Range of values is 0 to 2
 22748                           ; switch strategies available:
 22749                           ; Name         Instructions Cycles
 22750                           ; simple_byte           10     6 (average)
 22751                           ;	Chosen strategy is simple_byte
 22752  004B6A  E0BD               	bz	l39332
 22753  004B6C  0A01               	xorlw	1	; case 1
 22754  004B6E  E0C0               	bz	l39336
 22755  004B70  0A03               	xorlw	3	; case 2
 22756  004B72  A4D8               	btfss	status,2,c
 22757  004B74  0012               	return	
 22758  004B76  D7E2               	goto	l39364
 22759  004B78                     l39380:
 22760                           
 22761                           ; BSR set to: 0
 22762                           ;main.c: 2772: {
 22763                           ;main.c: 2773: M.WYL=1;
 22764  004B78  0E01               	movlw	1
 22765  004B7A  6F88               	movwf	(_M+40)& (0+255),b
 22766                           
 22767                           ; BSR set to: 0
 22768                           ;main.c: 2774: StartRTS(7);
 22769  004B7C  0E07               	movlw	7
 22770  004B7E  EC9C  F057         	call	_StartRTS
 22771  004B82                     l39384:
 22772                           
 22773                           ;main.c: 2777: {
 22774                           ;main.c: 2778: if(M._RPM_CW)
 22775  004B82  0100               	movlb	0	; () banked
 22776  004B84  AF7B               	btfss	(_M+27)& (0+255),7,b
 22777  004B86  D010               	goto	l39406
 22778                           
 22779                           ; BSR set to: 0
 22780                           ;main.c: 2779: {
 22781                           ;main.c: 2780: if(RTS(7)>=20)
 22782  004B88  0E07               	movlw	7
 22783  004B8A  ECAF  F057         	call	_RTS
 22784  004B8E  6E20               	movwf	??_Wylacz& (0+255),c
 22785  004B90  0E14               	movlw	20
 22786  004B92  5C20               	subwf	??_Wylacz,w,c
 22787  004B94  E305               	bnc	l39396
 22788                           
 22789                           ; BSR set to: 1
 22790                           ;main.c: 2781: {
 22791                           ;main.c: 2782: if(!DtCO._err_CO&&DtCO._ptwp_CO)
 22792  004B96  0100               	movlb	0	; () banked
 22793  004B98  B1E4               	btfsc	_DtCO& (0+255),0,b
 22794  004B9A  D002               	goto	l39396
 22795                           
 22796                           ; BSR set to: 0
 22797  004B9C  B1E5               	btfsc	(_DtCO+1)& (0+255),0,b
 22798  004B9E  D7B6               	goto	l39344
 22799  004BA0                     l39396:
 22800                           
 22801                           ;main.c: 2786: }
 22802                           ;main.c: 2787: }
 22803                           ;main.c: 2788: if(RTS(7)<180) return;
 22804  004BA0  0E07               	movlw	7
 22805  004BA2  ECAF  F057         	call	_RTS
 22806  004BA6  D7B9               	goto	L46
 22807  004BA8                     l39406:
 22808                           
 22809                           ; BSR set to: 0
 22810                           ;main.c: 2792: else
 22811                           ;main.c: 2793: {
 22812                           ;main.c: 2794: if(RTS(7)<180) return;
 22813  004BA8  0E07               	movlw	7
 22814  004BAA  ECAF  F057         	call	_RTS
 22815  004BAE  6E20               	movwf	??_Wylacz& (0+255),c
 22816  004BB0  0EB4               	movlw	180
 22817  004BB2  5C20               	subwf	??_Wylacz,w,c
 22818  004BB4  A0D8               	btfss	status,0,c
 22819  004BB6  0012               	return	
 22820                           
 22821                           ; BSR set to: 1
 22822                           ;main.c: 2795: M.WYL=2;
 22823  004BB8  0E02               	movlw	2
 22824  004BBA  0100               	movlb	0	; () banked
 22825  004BBC  6F88               	movwf	(_M+40)& (0+255),b
 22826  004BBE                     l39412:
 22827                           
 22828                           ; BSR set to: 0
 22829                           ;main.c: 2799: {
 22830                           ;main.c: 2800: if(!M._RPM_CW)
 22831  004BBE  BF7B               	btfsc	(_M+27)& (0+255),7,b
 22832  004BC0  D00A               	goto	l1453
 22833                           
 22834                           ; BSR set to: 0
 22835                           ;main.c: 2801: {
 22836                           ;main.c: 2802: if(RdPrt(13)) return;
 22837  004BC2  0E0D               	movlw	13
 22838  004BC4  EC84  F058         	call	_RdPrt
 22839  004BC8  B0D8               	btfsc	status,0,c
 22840  004BCA  0012               	return	
 22841                           
 22842                           ; BSR set to: 0
 22843                           ;main.c: 2803: if(!DtCO._err_CO&&!DtCO._su_CO) return;
 22844  004BCC  B1E4               	btfsc	_DtCO& (0+255),0,b
 22845  004BCE  D00A               	goto	l1456
 22846                           
 22847                           ; BSR set to: 0
 22848  004BD0  A3E4               	btfss	_DtCO& (0+255),1,b
 22849  004BD2  0012               	return	
 22850  004BD4  D007               	goto	l1456
 22851  004BD6                     l1453:
 22852                           
 22853                           ; BSR set to: 0
 22854                           ;main.c: 2805: else
 22855                           ;main.c: 2806: {
 22856                           ;main.c: 2807: if(!DtCO._err_CO&&!DtCO._ptwp_CO&&M._pob_CW) return;
 22857  004BD6  A1E4               	btfss	_DtCO& (0+255),0,b
 22858                           
 22859                           ; BSR set to: 0
 22860  004BD8  B1E5               	btfsc	(_DtCO+1)& (0+255),0,b
 22861  004BDA  D004               	goto	l1456
 22862                           
 22863                           ; BSR set to: 0
 22864  004BDC  5169               	movf	(_M+9)& (0+255),w,b
 22865  004BDE  1168               	iorwf	(_M+8)& (0+255),w,b
 22866  004BE0  A4D8               	btfss	status,2,c
 22867  004BE2  0012               	return	
 22868  004BE4                     l1456:
 22869                           
 22870                           ; BSR set to: 0
 22871                           ;main.c: 2808: }
 22872                           ;main.c: 2809: if(DtKNF.robg==0)
 22873  004BE4  0101               	movlb	1	; () banked
 22874  004BE6  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 22875  004BE8  D003               	goto	l1458
 22876  004BEA                     L47:
 22877                           
 22878                           ; BSR set to: 1
 22879                           ;main.c: 2810: {
 22880                           ;main.c: 2811: if(M._RUSZ_POMPE) return;
 22881  004BEA  0100               	movlb	0	; () banked
 22882  004BEC  B571               	btfsc	(_M+17)& (0+255),2,b
 22883  004BEE  0012               	return	
 22884  004BF0                     l1458:
 22885                           
 22886                           ;main.c: 2812: }
 22887                           ;main.c: 2813: if(!M._ZMKCOCW) PORTDbits.RD2=0;
 22888  004BF0  0100               	movlb	0	; () banked
 22889  004BF2  A370               	btfss	(_M+16)& (0+255),1,b
 22890  004BF4                     l39432:
 22891                           
 22892                           ; BSR set to: 0
 22893  004BF4  9483               	bcf	3971,2,c	;volatile
 22894  004BF6                     l1460:
 22895                           
 22896                           ; BSR set to: 0
 22897                           ;main.c: 2814: M._WYLACZ=0;
 22898  004BF6  9170               	bcf	(_M+16)& (0+255),0,b
 22899                           
 22900                           ;main.c: 2815: M.WYL=0;
 22901  004BF8  6B88               	clrf	(_M+40)& (0+255),b
 22902                           
 22903                           ;main.c: 2816: }
 22904                           ;main.c: 2817: }
 22905  004BFA  0012               	return	
 22906  004BFC                     l39434:
 22907                           
 22908                           ; BSR set to: 1
 22909  004BFC  0100               	movlb	0	; () banked
 22910  004BFE  5188               	movf	(_M+40)& (0+255),w,b
 22911                           
 22912                           ; Switch size 1, requested type "space"
 22913                           ; Number of cases is 3, Range of values is 0 to 2
 22914                           ; switch strategies available:
 22915                           ; Name         Instructions Cycles
 22916                           ; simple_byte           10     6 (average)
 22917                           ;	Chosen strategy is simple_byte
 22918  004C00  E0BB               	bz	l39380
 22919  004C02  0A01               	xorlw	1	; case 1
 22920  004C04  E0BE               	bz	l39384
 22921  004C06  0A03               	xorlw	3	; case 2
 22922  004C08  A4D8               	btfss	status,2,c
 22923  004C0A  0012               	return	
 22924  004C0C  D7D8               	goto	l39412
 22925  004C0E                     l39436:
 22926                           
 22927                           ; BSR set to: 0
 22928                           ;main.c: 2825: {
 22929                           ;main.c: 2826: M.WYL=1;
 22930  004C0E  0E01               	movlw	1
 22931  004C10  6F88               	movwf	(_M+40)& (0+255),b
 22932                           
 22933                           ; BSR set to: 0
 22934                           ;main.c: 2827: StartRTS(7);
 22935  004C12  0E07               	movlw	7
 22936  004C14  EC9C  F057         	call	_StartRTS
 22937  004C18                     l39440:
 22938                           
 22939                           ;main.c: 2830: {
 22940                           ;main.c: 2831: if(M._RPM_CW)
 22941  004C18  0100               	movlb	0	; () banked
 22942  004C1A  AF7B               	btfss	(_M+27)& (0+255),7,b
 22943  004C1C  D012               	goto	l39456
 22944                           
 22945                           ; BSR set to: 0
 22946                           ;main.c: 2832: {
 22947                           ;main.c: 2833: if(RTS(7)<60) return;
 22948  004C1E  0E07               	movlw	7
 22949  004C20  ECAF  F057         	call	_RTS
 22950  004C24  6E20               	movwf	??_Wylacz& (0+255),c
 22951  004C26  0E3C               	movlw	60
 22952  004C28  5C20               	subwf	??_Wylacz,w,c
 22953  004C2A  A0D8               	btfss	status,0,c
 22954  004C2C  0012               	return	
 22955                           
 22956                           ; BSR set to: 1
 22957                           ;main.c: 2834: if(!DtCO._err_CO)
 22958  004C2E  0100               	movlb	0	; () banked
 22959  004C30  B1E4               	btfsc	_DtCO& (0+255),0,b
 22960  004C32  D003               	goto	l39454
 22961                           
 22962                           ; BSR set to: 0
 22963                           ;main.c: 2835: {
 22964                           ;main.c: 2836: if(DtCO._ptwp_CO)
 22965  004C34  A1E5               	btfss	(_DtCO+1)& (0+255),0,b
 22966  004C36  0012               	return	
 22967  004C38  D769               	goto	l39344
 22968  004C3A                     l39454:
 22969                           
 22970                           ;main.c: 2842: else
 22971                           ;main.c: 2843: {
 22972                           ;main.c: 2844: M.WYL=2;
 22973  004C3A  0E02               	movlw	2
 22974  004C3C  0100               	movlb	0	; () banked
 22975  004C3E  6F88               	movwf	(_M+40)& (0+255),b
 22976  004C40  D009               	goto	l39462
 22977  004C42                     l39456:
 22978                           
 22979                           ; BSR set to: 0
 22980                           ;main.c: 2847: else
 22981                           ;main.c: 2848: {
 22982                           ;main.c: 2849: if(RTS(7)<180) return;
 22983  004C42  0E07               	movlw	7
 22984  004C44  ECAF  F057         	call	_RTS
 22985  004C48  6E20               	movwf	??_Wylacz& (0+255),c
 22986  004C4A  0EB4               	movlw	180
 22987  004C4C  5C20               	subwf	??_Wylacz,w,c
 22988  004C4E  A0D8               	btfss	status,0,c
 22989  004C50  0012               	return	
 22990  004C52  D7F3               	goto	l39454
 22991  004C54                     l39462:
 22992                           
 22993                           ; BSR set to: 0
 22994                           ;main.c: 2854: {
 22995                           ;main.c: 2855: if(M._RPM_CW)
 22996  004C54  AF7B               	btfss	(_M+27)& (0+255),7,b
 22997  004C56  D006               	goto	l39468
 22998                           
 22999                           ; BSR set to: 0
 23000                           ;main.c: 2856: {
 23001                           ;main.c: 2857: if(RdPrt(17)) return;
 23002  004C58  0E11               	movlw	17
 23003  004C5A  EC84  F058         	call	_RdPrt
 23004  004C5E  B0D8               	btfsc	status,0,c
 23005  004C60  0012               	return	
 23006  004C62  D049               	goto	l1497
 23007  004C64                     l39468:
 23008                           
 23009                           ; BSR set to: 0
 23010                           ;main.c: 2859: else
 23011                           ;main.c: 2860: {
 23012                           ;main.c: 2861: if(RdPrt(13)) return;
 23013  004C64  0E0D               	movlw	13
 23014  004C66  EC84  F058         	call	_RdPrt
 23015  004C6A  B0D8               	btfsc	status,0,c
 23016  004C6C  0012               	return	
 23017                           
 23018                           ; BSR set to: 0
 23019                           ;main.c: 2862: if(!DtCO._err_CO&&!DtCO._su_CO) return;
 23020  004C6E  B1E4               	btfsc	_DtCO& (0+255),0,b
 23021  004C70  D042               	goto	l1497
 23022                           
 23023                           ; BSR set to: 0
 23024  004C72  A3E4               	btfss	_DtCO& (0+255),1,b
 23025  004C74  0012               	return	
 23026  004C76  D03F               	goto	l1497
 23027  004C78                     l39482:
 23028                           
 23029                           ; BSR set to: 1
 23030  004C78  0100               	movlb	0	; () banked
 23031  004C7A  5188               	movf	(_M+40)& (0+255),w,b
 23032                           
 23033                           ; Switch size 1, requested type "space"
 23034                           ; Number of cases is 3, Range of values is 0 to 2
 23035                           ; switch strategies available:
 23036                           ; Name         Instructions Cycles
 23037                           ; simple_byte           10     6 (average)
 23038                           ;	Chosen strategy is simple_byte
 23039  004C7C  E0C8               	bz	l39436
 23040  004C7E  0A01               	xorlw	1	; case 1
 23041  004C80  E0CB               	bz	l39440
 23042  004C82  0A03               	xorlw	3	; case 2
 23043  004C84  A4D8               	btfss	status,2,c
 23044  004C86  0012               	return	
 23045  004C88  D7E5               	goto	l39462
 23046  004C8A                     l39484:
 23047                           
 23048                           ; BSR set to: 0
 23049                           ;main.c: 2883: {
 23050                           ;main.c: 2884: M.WYL=1;
 23051  004C8A  0E01               	movlw	1
 23052  004C8C  6F88               	movwf	(_M+40)& (0+255),b
 23053                           
 23054                           ; BSR set to: 0
 23055                           ;main.c: 2885: StartRTS(7);
 23056  004C8E  0E07               	movlw	7
 23057  004C90  EC9C  F057         	call	_StartRTS
 23058  004C94                     l39488:
 23059                           
 23060                           ;main.c: 2888: {
 23061                           ;main.c: 2889: if(M._RPM_CW)
 23062  004C94  0100               	movlb	0	; () banked
 23063  004C96  AF7B               	btfss	(_M+27)& (0+255),7,b
 23064  004C98  D010               	goto	l39510
 23065                           
 23066                           ; BSR set to: 0
 23067                           ;main.c: 2890: {
 23068                           ;main.c: 2891: if(RTS(7)>=20)
 23069  004C9A  0E07               	movlw	7
 23070  004C9C  ECAF  F057         	call	_RTS
 23071  004CA0  6E20               	movwf	??_Wylacz& (0+255),c
 23072  004CA2  0E14               	movlw	20
 23073  004CA4  5C20               	subwf	??_Wylacz,w,c
 23074  004CA6  E305               	bnc	l39500
 23075                           
 23076                           ; BSR set to: 1
 23077                           ;main.c: 2892: {
 23078                           ;main.c: 2893: if(!DtCO._err_CO&&DtCO._ptwp_CO)
 23079  004CA8  0100               	movlb	0	; () banked
 23080  004CAA  B1E4               	btfsc	_DtCO& (0+255),0,b
 23081  004CAC  D002               	goto	l39500
 23082                           
 23083                           ; BSR set to: 0
 23084  004CAE  B1E5               	btfsc	(_DtCO+1)& (0+255),0,b
 23085  004CB0  D72D               	goto	l39344
 23086  004CB2                     l39500:
 23087                           
 23088                           ;main.c: 2897: }
 23089                           ;main.c: 2898: }
 23090                           ;main.c: 2899: if(RTS(7)<180) return;
 23091  004CB2  0E07               	movlw	7
 23092  004CB4  ECAF  F057         	call	_RTS
 23093  004CB8  D730               	goto	L46
 23094  004CBA                     l39510:
 23095                           
 23096                           ; BSR set to: 0
 23097                           ;main.c: 2903: else
 23098                           ;main.c: 2904: {
 23099                           ;main.c: 2905: if(RTS(7)<180) return;
 23100  004CBA  0E07               	movlw	7
 23101  004CBC  ECAF  F057         	call	_RTS
 23102  004CC0  6E20               	movwf	??_Wylacz& (0+255),c
 23103  004CC2  0EB4               	movlw	180
 23104  004CC4  5C20               	subwf	??_Wylacz,w,c
 23105  004CC6  A0D8               	btfss	status,0,c
 23106  004CC8  0012               	return	
 23107                           
 23108                           ; BSR set to: 1
 23109                           ;main.c: 2906: M.WYL=2;
 23110  004CCA  0E02               	movlw	2
 23111  004CCC  0100               	movlb	0	; () banked
 23112  004CCE  6F88               	movwf	(_M+40)& (0+255),b
 23113  004CD0                     l39516:
 23114                           
 23115                           ; BSR set to: 0
 23116                           ;main.c: 2910: {
 23117                           ;main.c: 2911: if(!M._RPM_CW)
 23118  004CD0  BF7B               	btfsc	(_M+27)& (0+255),7,b
 23119  004CD2  D00A               	goto	l1494
 23120                           
 23121                           ; BSR set to: 0
 23122                           ;main.c: 2912: {
 23123                           ;main.c: 2913: if(RdPrt(13)) return;
 23124  004CD4  0E0D               	movlw	13
 23125  004CD6  EC84  F058         	call	_RdPrt
 23126  004CDA  B0D8               	btfsc	status,0,c
 23127  004CDC  0012               	return	
 23128                           
 23129                           ; BSR set to: 0
 23130                           ;main.c: 2914: if(!DtCO._err_CO&&!DtCO._su_CO) return;
 23131  004CDE  B1E4               	btfsc	_DtCO& (0+255),0,b
 23132  004CE0  D00A               	goto	l1497
 23133                           
 23134                           ; BSR set to: 0
 23135  004CE2  A3E4               	btfss	_DtCO& (0+255),1,b
 23136  004CE4  0012               	return	
 23137  004CE6  D007               	goto	l1497
 23138  004CE8                     l1494:
 23139                           
 23140                           ; BSR set to: 0
 23141                           ;main.c: 2916: else
 23142                           ;main.c: 2917: {
 23143                           ;main.c: 2918: if(!DtCO._err_CO&&!DtCO._ptwp_CO&&M._pob_CW) return;
 23144  004CE8  A1E4               	btfss	_DtCO& (0+255),0,b
 23145                           
 23146                           ; BSR set to: 0
 23147  004CEA  B1E5               	btfsc	(_DtCO+1)& (0+255),0,b
 23148  004CEC  D004               	goto	l1497
 23149                           
 23150                           ; BSR set to: 0
 23151  004CEE  5169               	movf	(_M+9)& (0+255),w,b
 23152  004CF0  1168               	iorwf	(_M+8)& (0+255),w,b
 23153  004CF2  A4D8               	btfss	status,2,c
 23154  004CF4  0012               	return	
 23155  004CF6                     l1497:
 23156                           
 23157                           ; BSR set to: 0
 23158                           ;main.c: 2919: }
 23159                           ;main.c: 2920: if(DtKNF.robg==0)
 23160  004CF6  0101               	movlb	1	; () banked
 23161  004CF8  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 23162  004CFA  D001               	goto	l1499
 23163  004CFC  D776               	goto	L47
 23164  004CFE                     l1499:
 23165                           
 23166                           ;main.c: 2923: }
 23167                           ;main.c: 2924: if(!M._ZMKCOCW) PORTDbits.RD2=0;
 23168  004CFE  0100               	movlb	0	; () banked
 23169  004D00  A370               	btfss	(_M+16)& (0+255),1,b
 23170  004D02  D778               	goto	l39432
 23171  004D04  D778               	goto	l1460
 23172  004D06                     l39538:
 23173                           
 23174                           ; BSR set to: 1
 23175  004D06  0100               	movlb	0	; () banked
 23176  004D08  5188               	movf	(_M+40)& (0+255),w,b
 23177                           
 23178                           ; Switch size 1, requested type "space"
 23179                           ; Number of cases is 3, Range of values is 0 to 2
 23180                           ; switch strategies available:
 23181                           ; Name         Instructions Cycles
 23182                           ; simple_byte           10     6 (average)
 23183                           ;	Chosen strategy is simple_byte
 23184  004D0A  E0BF               	bz	l39484
 23185  004D0C  0A01               	xorlw	1	; case 1
 23186  004D0E  E0C2               	bz	l39488
 23187  004D10  0A03               	xorlw	3	; case 2
 23188  004D12  A4D8               	btfss	status,2,c
 23189  004D14  0012               	return	
 23190  004D16  D7DC               	goto	l39516
 23191  004D18                     l39542:
 23192                           
 23193                           ; BSR set to: 0
 23194  004D18  0101               	movlb	1	; () banked
 23195  004D1A  5151               	movf	(_DtKNF+7)& (0+255),w,b
 23196                           
 23197                           ; Switch size 1, requested type "space"
 23198                           ; Number of cases is 4, Range of values is 0 to 3
 23199                           ; switch strategies available:
 23200                           ; Name         Instructions Cycles
 23201                           ; simple_byte           13     7 (average)
 23202                           ;	Chosen strategy is simple_byte
 23203  004D1C  E0AD               	bz	l39482
 23204  004D1E  0A01               	xorlw	1	; case 1
 23205  004D20  E101 D721          	bz	l39378
 23206  004D24  0A03               	xorlw	3	; case 2
 23207  004D26  E101 D71E          	bz	l39378
 23208  004D2A  0A01               	xorlw	1	; case 3
 23209  004D2C  E101 D766          	bz	l39434
 23210  004D30  D7EA               	goto	l39538
 23211  004D32                     __end_of_Wylacz:
 23212                           	opt stack 0
 23213                           tblptru	equ	0xFF8
 23214                           tblptrh	equ	0xFF7
 23215                           tblptrl	equ	0xFF6
 23216                           tablat	equ	0xFF5
 23217                           prodh	equ	0xFF4
 23218                           prodl	equ	0xFF3
 23219                           intcon	equ	0xFF2
 23220                           postinc0	equ	0xFEE
 23221                           wreg	equ	0xFE8
 23222                           indf1	equ	0xFE7
 23223                           postinc1	equ	0xFE6
 23224                           postdec1	equ	0xFE5
 23225                           fsr1h	equ	0xFE2
 23226                           fsr1l	equ	0xFE1
 23227                           indf2	equ	0xFDF
 23228                           postinc2	equ	0xFDE
 23229                           postdec2	equ	0xFDD
 23230                           fsr2h	equ	0xFDA
 23231                           fsr2l	equ	0xFD9
 23232                           status	equ	0xFD8
 23233                           
 23234 ;; *************** function _VWybieg *****************
 23235 ;; Defined at:
 23236 ;;		line 2937 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 23237 ;; Parameters:    Size  Location     Type
 23238 ;;		None
 23239 ;; Auto vars:     Size  Location     Type
 23240 ;;		None
 23241 ;; Return value:  Size  Location     Type
 23242 ;;		None               void
 23243 ;; Registers used:
 23244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23245 ;; Tracked objects:
 23246 ;;		On entry : F/0
 23247 ;;		On exit  : E/0
 23248 ;;		Unchanged: 0/0
 23249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23254 ;;Total ram usage:        1 bytes
 23255 ;; Hardware stack levels used:    1
 23256 ;; Hardware stack levels required when called:    5
 23257 ;; This function calls:
 23258 ;;		_StartRTS
 23259 ;;		_RTS
 23260 ;; This function is called by:
 23261 ;;		_main
 23262 ;;		_ErrPTG
 23263 ;; This function uses a non-reentrant model
 23264 ;;
 23265                           
 23266                           	psect	text83
 23267  009BF8                     __ptext83:
 23268                           	opt stack 0
 23269  009BF8                     _VWybieg:
 23270                           	opt stack 23
 23271                           
 23272                           ; BSR set to: 0
 23273                           ;main.c: 2938: switch(M.VWB)
 23274  009BF8  D029               	goto	l31706
 23275  009BFA                     l31686:
 23276                           
 23277                           ; BSR set to: 0
 23278                           ;main.c: 2941: {
 23279                           ;main.c: 2942: M.VWB=1;
 23280  009BFA  0E01               	movlw	1
 23281  009BFC  6F8E               	movwf	(_M+46)& (0+255),b
 23282                           
 23283                           ; BSR set to: 0
 23284                           ;main.c: 2943: M._DE_VNT=1;
 23285  009BFE  8D7B               	bsf	(_M+27)& (0+255),6,b
 23286                           
 23287                           ; BSR set to: 0
 23288                           ;main.c: 2944: StartRTS(6);
 23289  009C00  0E06               	movlw	6
 23290  009C02  EC9C  F057         	call	_StartRTS
 23291  009C06                     l31692:
 23292                           
 23293                           ;main.c: 2947: {
 23294                           ;main.c: 2948: if(RTS(6)>=2) M._DE_VNT=0;
 23295  009C06  0E06               	movlw	6
 23296  009C08  ECAF  F057         	call	_RTS
 23297  009C0C  6E1F               	movwf	??_VWybieg& (0+255),c
 23298  009C0E  0E02               	movlw	2
 23299  009C10  5C1F               	subwf	??_VWybieg,w,c
 23300  009C12  E302               	bnc	l31696
 23301                           
 23302                           ; BSR set to: 1
 23303  009C14  0100               	movlb	0	; () banked
 23304  009C16  9D7B               	bcf	(_M+27)& (0+255),6,b
 23305  009C18                     l31696:
 23306                           
 23307                           ;main.c: 2949: if(RTS(6)<15) return;
 23308  009C18  0E06               	movlw	6
 23309  009C1A  ECAF  F057         	call	_RTS
 23310  009C1E  6E1F               	movwf	??_VWybieg& (0+255),c
 23311  009C20  0E0F               	movlw	15
 23312  009C22  5C1F               	subwf	??_VWybieg,w,c
 23313  009C24  A0D8               	btfss	status,0,c
 23314  009C26  0012               	return	
 23315                           
 23316                           ; BSR set to: 1
 23317                           ;main.c: 2951: PORTDbits.RD3=0;
 23318  009C28  9683               	bcf	3971,3,c	;volatile
 23319                           
 23320                           ;main.c: 2952: M._DE_VNT=1;
 23321  009C2A  0100               	movlb	0	; () banked
 23322  009C2C  8D7B               	bsf	(_M+27)& (0+255),6,b
 23323                           
 23324                           ; BSR set to: 0
 23325                           ;main.c: 2953: M.VWB=2;
 23326  009C2E  0E02               	movlw	2
 23327  009C30  6F8E               	movwf	(_M+46)& (0+255),b
 23328  009C32                     l31702:
 23329                           
 23330                           ; BSR set to: 0
 23331                           ;main.c: 2956: {
 23332                           ;main.c: 2957: if(RTS(6)<15+2) return;
 23333  009C32  0E06               	movlw	6
 23334  009C34  ECAF  F057         	call	_RTS
 23335  009C38  6E1F               	movwf	??_VWybieg& (0+255),c
 23336  009C3A  0E11               	movlw	17
 23337  009C3C  5C1F               	subwf	??_VWybieg,w,c
 23338  009C3E  A0D8               	btfss	status,0,c
 23339  009C40  0012               	return	
 23340                           
 23341                           ; BSR set to: 1
 23342                           ;main.c: 2958: M._DE_VNT=0;
 23343  009C42  0100               	movlb	0	; () banked
 23344  009C44  9D7B               	bcf	(_M+27)& (0+255),6,b
 23345                           
 23346                           ;main.c: 2959: M._VWYBIEG=0;
 23347  009C46  9D70               	bcf	(_M+16)& (0+255),6,b
 23348                           
 23349                           ;main.c: 2960: M.VWB=0;
 23350  009C48  6B8E               	clrf	(_M+46)& (0+255),b
 23351                           
 23352                           ;main.c: 2961: }
 23353                           ;main.c: 2962: }
 23354  009C4A  0012               	return	
 23355  009C4C                     l31706:
 23356                           
 23357                           ; BSR set to: 0
 23358  009C4C  518E               	movf	(_M+46)& (0+255),w,b
 23359                           
 23360                           ; Switch size 1, requested type "space"
 23361                           ; Number of cases is 3, Range of values is 0 to 2
 23362                           ; switch strategies available:
 23363                           ; Name         Instructions Cycles
 23364                           ; simple_byte           10     6 (average)
 23365                           ;	Chosen strategy is simple_byte
 23366  009C4E  E0D5               	bz	l31686
 23367  009C50  0A01               	xorlw	1	; case 1
 23368  009C52  E0D9               	bz	l31692
 23369  009C54  0A03               	xorlw	3	; case 2
 23370  009C56  A4D8               	btfss	status,2,c
 23371  009C58  0012               	return	
 23372  009C5A  D7EB               	goto	l31702
 23373  009C5C                     __end_of_VWybieg:
 23374                           	opt stack 0
 23375                           tblptru	equ	0xFF8
 23376                           tblptrh	equ	0xFF7
 23377                           tblptrl	equ	0xFF6
 23378                           tablat	equ	0xFF5
 23379                           prodh	equ	0xFF4
 23380                           prodl	equ	0xFF3
 23381                           intcon	equ	0xFF2
 23382                           postinc0	equ	0xFEE
 23383                           wreg	equ	0xFE8
 23384                           indf1	equ	0xFE7
 23385                           postinc1	equ	0xFE6
 23386                           postdec1	equ	0xFE5
 23387                           fsr1h	equ	0xFE2
 23388                           fsr1l	equ	0xFE1
 23389                           indf2	equ	0xFDF
 23390                           postinc2	equ	0xFDE
 23391                           postdec2	equ	0xFDD
 23392                           fsr2h	equ	0xFDA
 23393                           fsr2l	equ	0xFD9
 23394                           status	equ	0xFD8
 23395                           
 23396 ;; *************** function _Proba48 *****************
 23397 ;; Defined at:
 23398 ;;		line 3354 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 23399 ;; Parameters:    Size  Location     Type
 23400 ;;		None
 23401 ;; Auto vars:     Size  Location     Type
 23402 ;;		None
 23403 ;; Return value:  Size  Location     Type
 23404 ;;		None               void
 23405 ;; Registers used:
 23406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23407 ;; Tracked objects:
 23408 ;;		On entry : E/0
 23409 ;;		On exit  : E/0
 23410 ;;		Unchanged: 0/0
 23411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23416 ;;Total ram usage:        1 bytes
 23417 ;; Hardware stack levels used:    1
 23418 ;; Hardware stack levels required when called:    5
 23419 ;; This function calls:
 23420 ;;		_StartRTG
 23421 ;;		_RTG
 23422 ;; This function is called by:
 23423 ;;		_main
 23424 ;;		_ErrPTG
 23425 ;; This function uses a non-reentrant model
 23426 ;;
 23427                           
 23428                           	psect	text84
 23429  00ADDE                     __ptext84:
 23430                           	opt stack 0
 23431  00ADDE                     _Proba48:
 23432                           	opt stack 23
 23433                           
 23434                           ;main.c: 3356: if(M._RUSZ_48||M._RUSZ_48Z3) return;
 23435  00ADDE  0100               	movlb	0	; () banked
 23436  00ADE0  A770               	btfss	(_M+16)& (0+255),3,b
 23437                           
 23438                           ; BSR set to: 0
 23439  00ADE2  B970               	btfsc	(_M+16)& (0+255),4,b
 23440  00ADE4  0012               	return	
 23441                           
 23442                           ; BSR set to: 0
 23443                           ;main.c: 3357: if(PORTDbits.RD2) StartRTG(0);
 23444  00ADE6  B483               	btfsc	3971,2,c	;volatile
 23445  00ADE8  D00B               	goto	L48
 23446                           
 23447                           ; BSR set to: 0
 23448                           ;main.c: 3358: else
 23449                           ;main.c: 3359: {
 23450                           ;main.c: 3360: if(RTG(0)>=24)
 23451                           
 23452                           ; BSR set to: 0
 23453  00ADEA  0E00               	movlw	0
 23454  00ADEC  EC89  F057         	call	_RTG
 23455  00ADF0  6E1F               	movwf	??_Proba48& (0+255),c
 23456  00ADF2  0E18               	movlw	24
 23457  00ADF4  5C1F               	subwf	??_Proba48,w,c
 23458  00ADF6  A0D8               	btfss	status,0,c
 23459  00ADF8  0012               	return	
 23460                           
 23461                           ; BSR set to: 1
 23462                           ;main.c: 3361: {
 23463                           ;main.c: 3362: M.R48=0;
 23464  00ADFA  0100               	movlb	0	; () banked
 23465  00ADFC  6B84               	clrf	(_M+36)& (0+255),b
 23466                           
 23467                           ;main.c: 3363: M._RUSZ_48=1;
 23468  00ADFE  8770               	bsf	(_M+16)& (0+255),3,b
 23469  00AE00                     L48:
 23470                           
 23471                           ; BSR set to: 0
 23472                           ;main.c: 3364: StartRTG(0);
 23473  00AE00  0E00               	movlw	0
 23474  00AE02  EF76  F057         	goto	_StartRTG
 23475  00AE06                     __end_of_Proba48:
 23476                           	opt stack 0
 23477                           tblptru	equ	0xFF8
 23478                           tblptrh	equ	0xFF7
 23479                           tblptrl	equ	0xFF6
 23480                           tablat	equ	0xFF5
 23481                           prodh	equ	0xFF4
 23482                           prodl	equ	0xFF3
 23483                           intcon	equ	0xFF2
 23484                           postinc0	equ	0xFEE
 23485                           wreg	equ	0xFE8
 23486                           indf1	equ	0xFE7
 23487                           postinc1	equ	0xFE6
 23488                           postdec1	equ	0xFE5
 23489                           fsr1h	equ	0xFE2
 23490                           fsr1l	equ	0xFE1
 23491                           indf2	equ	0xFDF
 23492                           postinc2	equ	0xFDE
 23493                           postdec2	equ	0xFDD
 23494                           fsr2h	equ	0xFDA
 23495                           fsr2l	equ	0xFD9
 23496                           status	equ	0xFD8
 23497                           
 23498 ;; *************** function _Rusz48 *****************
 23499 ;; Defined at:
 23500 ;;		line 3386 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 23501 ;; Parameters:    Size  Location     Type
 23502 ;;		None
 23503 ;; Auto vars:     Size  Location     Type
 23504 ;;		None
 23505 ;; Return value:  Size  Location     Type
 23506 ;;		None               void
 23507 ;; Registers used:
 23508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23509 ;; Tracked objects:
 23510 ;;		On entry : F/0
 23511 ;;		On exit  : E/0
 23512 ;;		Unchanged: 0/0
 23513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23518 ;;Total ram usage:        1 bytes
 23519 ;; Hardware stack levels used:    1
 23520 ;; Hardware stack levels required when called:    5
 23521 ;; This function calls:
 23522 ;;		_StartRTS
 23523 ;;		_ToObiegCO
 23524 ;;		_RTS
 23525 ;;		_ToObiegCW
 23526 ;; This function is called by:
 23527 ;;		_main
 23528 ;;		_ErrPTG
 23529 ;; This function uses a non-reentrant model
 23530 ;;
 23531                           
 23532                           	psect	text85
 23533  008504                     __ptext85:
 23534                           	opt stack 0
 23535  008504                     _Rusz48:
 23536                           	opt stack 23
 23537                           
 23538                           ; BSR set to: 0
 23539                           ;main.c: 3387: switch(DtKNF.tpkt)
 23540  008504  D051               	goto	l31988
 23541  008506                     l1652:
 23542                           
 23543                           ; BSR set to: 0
 23544                           ;main.c: 3395: {
 23545                           ;main.c: 3396: if(M._ZMKCOCW) return;
 23546  008506  B370               	btfsc	(_M+16)& (0+255),1,b
 23547  008508  0012               	return	
 23548                           
 23549                           ; BSR set to: 0
 23550                           ;main.c: 3397: StartRTS(5);
 23551  00850A  0E05               	movlw	5
 23552  00850C  EC9C  F057         	call	_StartRTS
 23553                           
 23554                           ; BSR set to: 1
 23555                           ;main.c: 3398: ToObiegCO();
 23556  008510  EC42  F056         	call	_ToObiegCO	;wreg free
 23557                           
 23558                           ; BSR set to: 0
 23559                           ;main.c: 3399: M.R48=1;
 23560  008514  0E01               	movlw	1
 23561  008516  6F84               	movwf	(_M+36)& (0+255),b
 23562  008518                     l31932:
 23563                           
 23564                           ; BSR set to: 0
 23565                           ;main.c: 3402: {
 23566                           ;main.c: 3403: if(RTS(5)<180) return;
 23567  008518  0E05               	movlw	5
 23568  00851A  ECAF  F057         	call	_RTS
 23569  00851E  6E1F               	movwf	??_Rusz48& (0+255),c
 23570  008520  0EB4               	movlw	180
 23571  008522  5C1F               	subwf	??_Rusz48,w,c
 23572  008524  A0D8               	btfss	status,0,c
 23573  008526  0012               	return	
 23574                           
 23575                           ; BSR set to: 1
 23576                           ;main.c: 3404: if(M._ZMKCOCW) return;
 23577  008528  0100               	movlb	0	; () banked
 23578  00852A  B370               	btfsc	(_M+16)& (0+255),1,b
 23579  00852C  0012               	return	
 23580                           
 23581                           ; BSR set to: 0
 23582                           ;main.c: 3405: ToObiegCW();
 23583  00852E  EC65  F04D         	call	_ToObiegCW	;wreg free
 23584                           
 23585                           ; BSR set to: 0
 23586                           ;main.c: 3406: M._RUSZ_48=0;
 23587  008532  9770               	bcf	(_M+16)& (0+255),3,b
 23588                           
 23589                           ; BSR set to: 0
 23590                           ;main.c: 3407: M.R48=0;
 23591  008534  6B84               	clrf	(_M+36)& (0+255),b
 23592                           
 23593                           ;main.c: 3408: }
 23594                           ;main.c: 3409: }
 23595  008536  0012               	return	
 23596  008538                     l31944:
 23597                           
 23598                           ; BSR set to: 1
 23599  008538  0100               	movlb	0	; () banked
 23600  00853A  5184               	movf	(_M+36)& (0+255),w,b
 23601                           
 23602                           ; Switch size 1, requested type "space"
 23603                           ; Number of cases is 2, Range of values is 0 to 1
 23604                           ; switch strategies available:
 23605                           ; Name         Instructions Cycles
 23606                           ; simple_byte            7     4 (average)
 23607                           ;	Chosen strategy is simple_byte
 23608  00853C  E0E4               	bz	l1652
 23609  00853E  0A01               	xorlw	1	; case 1
 23610  008540  A4D8               	btfss	status,2,c
 23611  008542  0012               	return	
 23612  008544  D7E9               	goto	l31932
 23613  008546                     l31946:
 23614                           
 23615                           ; BSR set to: 0
 23616                           ;main.c: 3418: {
 23617                           ;main.c: 3419: ToObiegCO();
 23618  008546  EC42  F056         	call	_ToObiegCO	;wreg free
 23619                           
 23620                           ; BSR set to: 0
 23621                           ;main.c: 3420: if(M._ZMKCOCW) return;
 23622  00854A  B370               	btfsc	(_M+16)& (0+255),1,b
 23623  00854C  0012               	return	
 23624                           
 23625                           ; BSR set to: 0
 23626                           ;main.c: 3421: StartRTS(5);
 23627  00854E  0E05               	movlw	5
 23628  008550  EC9C  F057         	call	_StartRTS
 23629                           
 23630                           ; BSR set to: 1
 23631                           ;main.c: 3422: PORTDbits.RD2=1;
 23632                           
 23633                           ; BSR set to: 1
 23634                           ;main.c: 3423: M.R48=1;
 23635  008554  D833               	call	PL232	;call to abstracted procedure
 23636  008556                     l31958:
 23637                           
 23638                           ; BSR set to: 0
 23639                           ;main.c: 3426: {
 23640                           ;main.c: 3427: if(RTS(5)<180) return;
 23641  008556  0E05               	movlw	5
 23642  008558  ECAF  F057         	call	_RTS
 23643  00855C  6E1F               	movwf	??_Rusz48& (0+255),c
 23644  00855E  0EB4               	movlw	180
 23645  008560  5C1F               	subwf	??_Rusz48,w,c
 23646  008562  A0D8               	btfss	status,0,c
 23647  008564  0012               	return	
 23648                           
 23649                           ; BSR set to: 1
 23650                           ;main.c: 3428: if(M._ZMKCOCW) return;
 23651  008566  0100               	movlb	0	; () banked
 23652  008568  B370               	btfsc	(_M+16)& (0+255),1,b
 23653  00856A  0012               	return	
 23654                           
 23655                           ; BSR set to: 0
 23656                           ;main.c: 3429: PORTDbits.RD2=0;
 23657  00856C  9483               	bcf	3971,2,c	;volatile
 23658                           
 23659                           ;main.c: 3430: M._RUSZ_48=0;
 23660  00856E  9770               	bcf	(_M+16)& (0+255),3,b
 23661                           
 23662                           ;main.c: 3431: M.R48=0;
 23663  008570  6B84               	clrf	(_M+36)& (0+255),b
 23664                           
 23665                           ;main.c: 3432: }
 23666                           ;main.c: 3433: }
 23667  008572  0012               	return	
 23668  008574                     l31964:
 23669                           
 23670                           ; BSR set to: 1
 23671  008574  0100               	movlb	0	; () banked
 23672  008576  5184               	movf	(_M+36)& (0+255),w,b
 23673                           
 23674                           ; Switch size 1, requested type "space"
 23675                           ; Number of cases is 2, Range of values is 0 to 1
 23676                           ; switch strategies available:
 23677                           ; Name         Instructions Cycles
 23678                           ; simple_byte            7     4 (average)
 23679                           ;	Chosen strategy is simple_byte
 23680  008578  E0E6               	bz	l31946
 23681  00857A  0A01               	xorlw	1	; case 1
 23682  00857C  A4D8               	btfss	status,2,c
 23683  00857E  0012               	return	
 23684  008580  D7EA               	goto	l31958
 23685  008582                     l31966:
 23686                           
 23687                           ; BSR set to: 0
 23688                           ;main.c: 3441: {
 23689                           ;main.c: 3442: ToObiegCO();
 23690  008582  EC42  F056         	call	_ToObiegCO	;wreg free
 23691                           
 23692                           ; BSR set to: 0
 23693                           ;main.c: 3443: if(M._ZMKCOCW) return;
 23694  008586  B370               	btfsc	(_M+16)& (0+255),1,b
 23695  008588  0012               	return	
 23696                           
 23697                           ; BSR set to: 0
 23698                           ;main.c: 3444: StartRTS(5);
 23699  00858A  0E05               	movlw	5
 23700  00858C  EC9C  F057         	call	_StartRTS
 23701                           
 23702                           ; BSR set to: 1
 23703                           ;main.c: 3445: PORTDbits.RD2=1;
 23704                           
 23705                           ; BSR set to: 1
 23706                           ;main.c: 3446: M.R48=1;
 23707  008590  D815               	call	PL232	;call to abstracted procedure
 23708  008592                     l31978:
 23709                           
 23710                           ; BSR set to: 0
 23711                           ;main.c: 3449: {
 23712                           ;main.c: 3450: if(RTS(5)<180) return;
 23713  008592  0E05               	movlw	5
 23714  008594  ECAF  F057         	call	_RTS
 23715  008598  D7E1               	goto	L49
 23716  00859A                     l31984:
 23717                           
 23718                           ; BSR set to: 1
 23719  00859A  0100               	movlb	0	; () banked
 23720  00859C  5184               	movf	(_M+36)& (0+255),w,b
 23721                           
 23722                           ; Switch size 1, requested type "space"
 23723                           ; Number of cases is 2, Range of values is 0 to 1
 23724                           ; switch strategies available:
 23725                           ; Name         Instructions Cycles
 23726                           ; simple_byte            7     4 (average)
 23727                           ;	Chosen strategy is simple_byte
 23728  00859E  E0F1               	bz	l31966
 23729  0085A0  0A01               	xorlw	1	; case 1
 23730  0085A2  A4D8               	btfss	status,2,c
 23731  0085A4  0012               	return	
 23732  0085A6  D7F5               	goto	l31978
 23733  0085A8                     l31988:
 23734                           
 23735                           ; BSR set to: 0
 23736  0085A8  0101               	movlb	1	; () banked
 23737  0085AA  5151               	movf	(_DtKNF+7)& (0+255),w,b
 23738                           
 23739                           ; Switch size 1, requested type "space"
 23740                           ; Number of cases is 4, Range of values is 0 to 3
 23741                           ; switch strategies available:
 23742                           ; Name         Instructions Cycles
 23743                           ; simple_byte           13     7 (average)
 23744                           ;	Chosen strategy is simple_byte
 23745  0085AC  E0E3               	bz	l31964
 23746  0085AE  0A01               	xorlw	1	; case 1
 23747  0085B0  E0C3               	bz	l31944
 23748  0085B2  0A03               	xorlw	3	; case 2
 23749  0085B4  E0C1               	bz	l31944
 23750  0085B6  0A01               	xorlw	1	; case 3
 23751  0085B8  E0DD               	bz	l31964
 23752  0085BA  D7EF               	goto	l31984
 23753  0085BC                     __end_of_Rusz48:
 23754                           	opt stack 0
 23755  0085BC                     PL232:
 23756                           	opt stack 23
 23757  0085BC  8483               	bsf	3971,2,c	;volatile
 23758  0085BE  0E01               	movlw	1
 23759  0085C0  0100               	movlb	0	; () banked
 23760  0085C2  6F84               	movwf	(_M+36)& (0+255),b
 23761  0085C4  0C01               	retlw	1
 23762  0085C6                     __end_ofPL232:
 23763                           	opt stack 0
 23764                           tblptru	equ	0xFF8
 23765                           tblptrh	equ	0xFF7
 23766                           tblptrl	equ	0xFF6
 23767                           tablat	equ	0xFF5
 23768                           prodh	equ	0xFF4
 23769                           prodl	equ	0xFF3
 23770                           intcon	equ	0xFF2
 23771                           postinc0	equ	0xFEE
 23772                           wreg	equ	0xFE8
 23773                           indf1	equ	0xFE7
 23774                           postinc1	equ	0xFE6
 23775                           postdec1	equ	0xFE5
 23776                           fsr1h	equ	0xFE2
 23777                           fsr1l	equ	0xFE1
 23778                           indf2	equ	0xFDF
 23779                           postinc2	equ	0xFDE
 23780                           postdec2	equ	0xFDD
 23781                           fsr2h	equ	0xFDA
 23782                           fsr2l	equ	0xFD9
 23783                           status	equ	0xFD8
 23784                           
 23785 ;; *************** function _Proba48Z3 *****************
 23786 ;; Defined at:
 23787 ;;		line 3464 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 23788 ;; Parameters:    Size  Location     Type
 23789 ;;		None
 23790 ;; Auto vars:     Size  Location     Type
 23791 ;;		None
 23792 ;; Return value:  Size  Location     Type
 23793 ;;		None               void
 23794 ;; Registers used:
 23795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23796 ;; Tracked objects:
 23797 ;;		On entry : E/0
 23798 ;;		On exit  : E/0
 23799 ;;		Unchanged: 0/0
 23800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23805 ;;Total ram usage:        1 bytes
 23806 ;; Hardware stack levels used:    1
 23807 ;; Hardware stack levels required when called:    5
 23808 ;; This function calls:
 23809 ;;		_StartRTG
 23810 ;;		_RTG
 23811 ;; This function is called by:
 23812 ;;		_main
 23813 ;;		_ErrPTG
 23814 ;; This function uses a non-reentrant model
 23815 ;;
 23816                           
 23817                           	psect	text86
 23818  00A59E                     __ptext86:
 23819                           	opt stack 0
 23820  00A59E                     _Proba48Z3:
 23821                           	opt stack 23
 23822                           
 23823                           ;main.c: 3466: switch(DtKNF.tpkt)
 23824  00A59E  D019               	goto	l32008
 23825  00A5A0                     l1680:
 23826                           
 23827                           ; BSR set to: 1
 23828                           ;main.c: 3469: {
 23829                           ;main.c: 3470: if(M._RUSZ_48Z3||M._RUSZ_48) return;
 23830  00A5A0  0100               	movlb	0	; () banked
 23831  00A5A2  A970               	btfss	(_M+16)& (0+255),4,b
 23832                           
 23833                           ; BSR set to: 0
 23834  00A5A4  B770               	btfsc	(_M+16)& (0+255),3,b
 23835  00A5A6  0012               	return	
 23836                           
 23837                           ; BSR set to: 0
 23838                           ;main.c: 3471: if(PORTDbits.RD2&&!PORTDbits.RD1) StartRTG(2);
 23839  00A5A8  B483               	btfsc	3971,2,c	;volatile
 23840                           
 23841                           ; BSR set to: 0
 23842  00A5AA  B283               	btfsc	3971,1,c	;volatile
 23843  00A5AC  D001               	goto	l1685
 23844  00A5AE  D00E               	goto	L50
 23845  00A5B0                     l1685:
 23846                           
 23847                           ; BSR set to: 0
 23848                           ;main.c: 3472: else
 23849                           ;main.c: 3473: {
 23850                           ;main.c: 3474: if(PORTDbits.RD2||M._ZMKCOCW) return;
 23851  00A5B0  A483               	btfss	3971,2,c	;volatile
 23852                           
 23853                           ; BSR set to: 0
 23854  00A5B2  B370               	btfsc	(_M+16)& (0+255),1,b
 23855  00A5B4  0012               	return	
 23856                           
 23857                           ; BSR set to: 0
 23858                           ;main.c: 3475: if(RTG(2)>=47)
 23859  00A5B6  0E02               	movlw	2
 23860  00A5B8  EC89  F057         	call	_RTG
 23861  00A5BC  6E1F               	movwf	??_Proba48Z3& (0+255),c
 23862  00A5BE  0E2F               	movlw	47
 23863  00A5C0  5C1F               	subwf	??_Proba48Z3,w,c
 23864  00A5C2  A0D8               	btfss	status,0,c
 23865  00A5C4  0012               	return	
 23866                           
 23867                           ; BSR set to: 1
 23868                           ;main.c: 3476: {
 23869                           ;main.c: 3477: M.R48Z3=0;
 23870  00A5C6  0100               	movlb	0	; () banked
 23871  00A5C8  6B85               	clrf	(_M+37)& (0+255),b
 23872                           
 23873                           ;main.c: 3478: M._RUSZ_48Z3=1;
 23874  00A5CA  8970               	bsf	(_M+16)& (0+255),4,b
 23875  00A5CC                     L50:
 23876                           
 23877                           ; BSR set to: 0
 23878                           ;main.c: 3479: StartRTG(2);
 23879  00A5CC  0E02               	movlw	2
 23880  00A5CE  EF76  F057         	goto	_StartRTG
 23881  00A5D2                     l32008:
 23882  00A5D2  0101               	movlb	1	; () banked
 23883  00A5D4  5151               	movf	(_DtKNF+7)& (0+255),w,b
 23884                           
 23885                           ; Switch size 1, requested type "space"
 23886                           ; Number of cases is 1, Range of values is 3 to 3
 23887                           ; switch strategies available:
 23888                           ; Name         Instructions Cycles
 23889                           ; simple_byte            4     3 (average)
 23890                           ;	Chosen strategy is simple_byte
 23891  00A5D6  0A03               	xorlw	3	; case 3
 23892  00A5D8  A4D8               	btfss	status,2,c
 23893  00A5DA  0012               	return	
 23894  00A5DC  D7E1               	goto	l1680
 23895  00A5DE                     __end_of_Proba48Z3:
 23896                           	opt stack 0
 23897                           tblptru	equ	0xFF8
 23898                           tblptrh	equ	0xFF7
 23899                           tblptrl	equ	0xFF6
 23900                           tablat	equ	0xFF5
 23901                           prodh	equ	0xFF4
 23902                           prodl	equ	0xFF3
 23903                           intcon	equ	0xFF2
 23904                           postinc0	equ	0xFEE
 23905                           wreg	equ	0xFE8
 23906                           indf1	equ	0xFE7
 23907                           postinc1	equ	0xFE6
 23908                           postdec1	equ	0xFE5
 23909                           fsr1h	equ	0xFE2
 23910                           fsr1l	equ	0xFE1
 23911                           indf2	equ	0xFDF
 23912                           postinc2	equ	0xFDE
 23913                           postdec2	equ	0xFDD
 23914                           fsr2h	equ	0xFDA
 23915                           fsr2l	equ	0xFD9
 23916                           status	equ	0xFD8
 23917                           
 23918 ;; *************** function _Rusz48Z3 *****************
 23919 ;; Defined at:
 23920 ;;		line 3511 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 23921 ;; Parameters:    Size  Location     Type
 23922 ;;		None
 23923 ;; Auto vars:     Size  Location     Type
 23924 ;;		None
 23925 ;; Return value:  Size  Location     Type
 23926 ;;		None               void
 23927 ;; Registers used:
 23928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23929 ;; Tracked objects:
 23930 ;;		On entry : F/0
 23931 ;;		On exit  : E/0
 23932 ;;		Unchanged: 0/0
 23933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23938 ;;Total ram usage:        1 bytes
 23939 ;; Hardware stack levels used:    1
 23940 ;; Hardware stack levels required when called:    5
 23941 ;; This function calls:
 23942 ;;		_ToObiegCW
 23943 ;;		_StartRTS
 23944 ;;		_RTS
 23945 ;; This function is called by:
 23946 ;;		_main
 23947 ;;		_ErrPTG
 23948 ;; This function uses a non-reentrant model
 23949 ;;
 23950                           
 23951                           	psect	text87
 23952  00A154                     __ptext87:
 23953                           	opt stack 0
 23954  00A154                     _Rusz48Z3:
 23955                           	opt stack 23
 23956                           
 23957                           ; BSR set to: 0
 23958                           ;main.c: 3512: switch(DtKNF.tpkt)
 23959  00A154  D021               	goto	l32034
 23960  00A156                     l32012:
 23961                           
 23962                           ; BSR set to: 0
 23963                           ;main.c: 3519: {
 23964                           ;main.c: 3520: ToObiegCW();
 23965  00A156  EC65  F04D         	call	_ToObiegCW	;wreg free
 23966                           
 23967                           ; BSR set to: 0
 23968                           ;main.c: 3521: if(M._ZMKCOCW) return;
 23969  00A15A  B370               	btfsc	(_M+16)& (0+255),1,b
 23970  00A15C  0012               	return	
 23971                           
 23972                           ; BSR set to: 0
 23973                           ;main.c: 3522: StartRTS(5);
 23974  00A15E  0E05               	movlw	5
 23975  00A160  EC9C  F057         	call	_StartRTS
 23976                           
 23977                           ; BSR set to: 1
 23978                           ;main.c: 3523: PORTDbits.RD2=1;
 23979  00A164  8483               	bsf	3971,2,c	;volatile
 23980                           
 23981                           ; BSR set to: 1
 23982                           ;main.c: 3524: M.R48Z3=1;
 23983  00A166  0E01               	movlw	1
 23984  00A168  0100               	movlb	0	; () banked
 23985  00A16A  6F85               	movwf	(_M+37)& (0+255),b
 23986  00A16C                     l32024:
 23987                           
 23988                           ; BSR set to: 0
 23989                           ;main.c: 3527: {
 23990                           ;main.c: 3528: if(RTS(5)<15) return;
 23991  00A16C  0E05               	movlw	5
 23992  00A16E  ECAF  F057         	call	_RTS
 23993  00A172  6E1F               	movwf	??_Rusz48Z3& (0+255),c
 23994  00A174  0E0F               	movlw	15
 23995  00A176  5C1F               	subwf	??_Rusz48Z3,w,c
 23996  00A178  A0D8               	btfss	status,0,c
 23997  00A17A  0012               	return	
 23998                           
 23999                           ; BSR set to: 1
 24000                           ;main.c: 3529: if(M._ZMKCOCW) return;
 24001  00A17C  0100               	movlb	0	; () banked
 24002  00A17E  B370               	btfsc	(_M+16)& (0+255),1,b
 24003  00A180  0012               	return	
 24004                           
 24005                           ; BSR set to: 0
 24006                           ;main.c: 3530: PORTDbits.RD2=0;
 24007  00A182  9483               	bcf	3971,2,c	;volatile
 24008                           
 24009                           ;main.c: 3531: M._RUSZ_48Z3=0;
 24010  00A184  9970               	bcf	(_M+16)& (0+255),4,b
 24011                           
 24012                           ;main.c: 3532: M.R48Z3=0;
 24013  00A186  6B85               	clrf	(_M+37)& (0+255),b
 24014                           
 24015                           ;main.c: 3533: }
 24016                           ;main.c: 3534: }
 24017  00A188  0012               	return	
 24018  00A18A                     l32030:
 24019                           
 24020                           ; BSR set to: 1
 24021  00A18A  0100               	movlb	0	; () banked
 24022  00A18C  5185               	movf	(_M+37)& (0+255),w,b
 24023                           
 24024                           ; Switch size 1, requested type "space"
 24025                           ; Number of cases is 2, Range of values is 0 to 1
 24026                           ; switch strategies available:
 24027                           ; Name         Instructions Cycles
 24028                           ; simple_byte            7     4 (average)
 24029                           ;	Chosen strategy is simple_byte
 24030  00A18E  E0E3               	bz	l32012
 24031  00A190  0A01               	xorlw	1	; case 1
 24032  00A192  A4D8               	btfss	status,2,c
 24033  00A194  0012               	return	
 24034  00A196  D7EA               	goto	l32024
 24035  00A198                     l32034:
 24036                           
 24037                           ; BSR set to: 0
 24038  00A198  0101               	movlb	1	; () banked
 24039  00A19A  5151               	movf	(_DtKNF+7)& (0+255),w,b
 24040                           
 24041                           ; Switch size 1, requested type "space"
 24042                           ; Number of cases is 1, Range of values is 3 to 3
 24043                           ; switch strategies available:
 24044                           ; Name         Instructions Cycles
 24045                           ; simple_byte            4     3 (average)
 24046                           ;	Chosen strategy is simple_byte
 24047  00A19C  0A03               	xorlw	3	; case 3
 24048  00A19E  A4D8               	btfss	status,2,c
 24049  00A1A0  0012               	return	
 24050  00A1A2  D7F3               	goto	l32030
 24051  00A1A4                     __end_of_Rusz48Z3:
 24052                           	opt stack 0
 24053                           tblptru	equ	0xFF8
 24054                           tblptrh	equ	0xFF7
 24055                           tblptrl	equ	0xFF6
 24056                           tablat	equ	0xFF5
 24057                           prodh	equ	0xFF4
 24058                           prodl	equ	0xFF3
 24059                           intcon	equ	0xFF2
 24060                           postinc0	equ	0xFEE
 24061                           wreg	equ	0xFE8
 24062                           indf1	equ	0xFE7
 24063                           postinc1	equ	0xFE6
 24064                           postdec1	equ	0xFE5
 24065                           fsr1h	equ	0xFE2
 24066                           fsr1l	equ	0xFE1
 24067                           indf2	equ	0xFDF
 24068                           postinc2	equ	0xFDE
 24069                           postdec2	equ	0xFDD
 24070                           fsr2h	equ	0xFDA
 24071                           fsr2l	equ	0xFD9
 24072                           status	equ	0xFD8
 24073                           
 24074 ;; *************** function _StartRTG *****************
 24075 ;; Defined at:
 24076 ;;		line 105 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
 24077 ;; Parameters:    Size  Location     Type
 24078 ;;  Index           1    wreg     const unsigned char 
 24079 ;; Auto vars:     Size  Location     Type
 24080 ;;  Index           1   29[COMRAM] const unsigned char 
 24081 ;; Return value:  Size  Location     Type
 24082 ;;		None               void
 24083 ;; Registers used:
 24084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24085 ;; Tracked objects:
 24086 ;;		On entry : E/1
 24087 ;;		On exit  : F/1
 24088 ;;		Unchanged: 0/0
 24089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24094 ;;Total ram usage:        1 bytes
 24095 ;; Hardware stack levels used:    1
 24096 ;; Hardware stack levels required when called:    4
 24097 ;; This function calls:
 24098 ;;		Nothing
 24099 ;; This function is called by:
 24100 ;;		_DecyzjaAntyLeg
 24101 ;;		_Proba48
 24102 ;;		_Proba48Z3
 24103 ;; This function uses a non-reentrant model
 24104 ;;
 24105                           
 24106                           	psect	text88
 24107  00AEEC                     __ptext88:
 24108                           	opt stack 0
 24109  00AEEC                     _StartRTG:
 24110                           	opt stack 23
 24111                           
 24112                           ;StartRTG@Index stored from wreg
 24113  00AEEC  CFE8 F01E          	movff	wreg,StartRTG@Index
 24114                           
 24115                           ;rtimer.c: 106: if (Index>3-1) asm("RESET");
 24116  00AEF0  0E02               	movlw	2
 24117  00AEF2  641E               	cpfsgt	StartRTG@Index,c
 24118  00AEF4  D001               	goto	l32410
 24119  00AEF6  00FF               	reset		;# 
 24120  00AEF8                     l32410:
 24121                           
 24122                           ;rtimer.c: 107: Gd[Index].M=0;
 24123  00AEF8  501E               	movf	StartRTG@Index,w,c
 24124  00AEFA  0D02               	mullw	2
 24125  00AEFC  0101               	movlb	1	; () banked
 24126  00AEFE  ECA3  F03D         	call	PL116	;call to abstracted procedure
 24127  00AF02  6ADF               	clrf	indf2,c
 24128                           
 24129                           ;rtimer.c: 108: Gd[Index].G=0;
 24130  00AF04  501E               	movf	StartRTG@Index,w,c
 24131  00AF06  0D02               	mullw	2
 24132  00AF08  EC95  F057         	call	PL126	;call to abstracted procedure
 24133  00AF0C  0E00               	movlw	0
 24134  00AF0E  6EDF               	movwf	indf2,c
 24135                           
 24136                           ; BSR set to: 1
 24137  00AF10  0C00               	retlw	0
 24138  00AF12                     __end_of_StartRTG:
 24139                           	opt stack 0
 24140                           tblptru	equ	0xFF8
 24141                           tblptrh	equ	0xFF7
 24142                           tblptrl	equ	0xFF6
 24143                           tablat	equ	0xFF5
 24144                           prodh	equ	0xFF4
 24145                           prodl	equ	0xFF3
 24146                           intcon	equ	0xFF2
 24147                           postinc0	equ	0xFEE
 24148                           wreg	equ	0xFE8
 24149                           indf1	equ	0xFE7
 24150                           postinc1	equ	0xFE6
 24151                           postdec1	equ	0xFE5
 24152                           fsr1h	equ	0xFE2
 24153                           fsr1l	equ	0xFE1
 24154                           indf2	equ	0xFDF
 24155                           postinc2	equ	0xFDE
 24156                           postdec2	equ	0xFDD
 24157                           fsr2h	equ	0xFDA
 24158                           fsr2l	equ	0xFD9
 24159                           status	equ	0xFD8
 24160                           
 24161 ;; *************** function _RTG *****************
 24162 ;; Defined at:
 24163 ;;		line 111 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
 24164 ;; Parameters:    Size  Location     Type
 24165 ;;  Index           1    wreg     const unsigned char 
 24166 ;; Auto vars:     Size  Location     Type
 24167 ;;  Index           1   29[COMRAM] const unsigned char 
 24168 ;; Return value:  Size  Location     Type
 24169 ;;                  1    wreg      unsigned char 
 24170 ;; Registers used:
 24171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24172 ;; Tracked objects:
 24173 ;;		On entry : E/1
 24174 ;;		On exit  : F/1
 24175 ;;		Unchanged: 0/0
 24176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24181 ;;Total ram usage:        1 bytes
 24182 ;; Hardware stack levels used:    1
 24183 ;; Hardware stack levels required when called:    4
 24184 ;; This function calls:
 24185 ;;		Nothing
 24186 ;; This function is called by:
 24187 ;;		_DecyzjaAntyLeg
 24188 ;;		_Proba48
 24189 ;;		_Proba48Z3
 24190 ;; This function uses a non-reentrant model
 24191 ;;
 24192                           
 24193                           	psect	text89
 24194  00AF12                     __ptext89:
 24195                           	opt stack 0
 24196  00AF12                     _RTG:
 24197                           	opt stack 23
 24198                           
 24199                           ; BSR set to: 1
 24200                           ;RTG@Index stored from wreg
 24201  00AF12  CFE8 F01E          	movff	wreg,RTG@Index
 24202                           
 24203                           ;rtimer.c: 112: if (Index>3-1) asm("RESET");
 24204  00AF16  0E02               	movlw	2
 24205  00AF18  641E               	cpfsgt	RTG@Index,c
 24206  00AF1A  D001               	goto	l32424
 24207  00AF1C  00FF               	reset		;# 
 24208  00AF1E                     l32424:
 24209                           
 24210                           ;rtimer.c: 113: return Gd[Index].G;
 24211  00AF1E  501E               	movf	RTG@Index,w,c
 24212  00AF20  0D02               	mullw	2
 24213  00AF22  0101               	movlb	1	; () banked
 24214  00AF24  D802               	call	PL126	;call to abstracted procedure
 24215  00AF26  50DF               	movf	indf2,w,c
 24216                           
 24217                           ; BSR set to: 1
 24218  00AF28  0012               	return	
 24219  00AF2A                     __end_of_RTG:
 24220                           	opt stack 0
 24221  00AF2A                     PL126:
 24222                           	opt stack 22
 24223  00AF2A  0E77               	movlw	low (_Gd+1)	;volatile
 24224  00AF2C  24F3               	addwf	prodl,w,c
 24225  00AF2E  6ED9               	movwf	fsr2l,c
 24226  00AF30  0E01               	movlw	high (_Gd+1)	;volatile
 24227  00AF32  20F4               	addwfc	prodh,w,c
 24228  00AF34  6EDA               	movwf	fsr2h,c
 24229  00AF36  0012               	return	
 24230  00AF38                     __end_ofPL126:
 24231                           	opt stack 0
 24232                           tblptru	equ	0xFF8
 24233                           tblptrh	equ	0xFF7
 24234                           tblptrl	equ	0xFF6
 24235                           tablat	equ	0xFF5
 24236                           prodh	equ	0xFF4
 24237                           prodl	equ	0xFF3
 24238                           intcon	equ	0xFF2
 24239                           postinc0	equ	0xFEE
 24240                           wreg	equ	0xFE8
 24241                           indf1	equ	0xFE7
 24242                           postinc1	equ	0xFE6
 24243                           postdec1	equ	0xFE5
 24244                           fsr1h	equ	0xFE2
 24245                           fsr1l	equ	0xFE1
 24246                           indf2	equ	0xFDF
 24247                           postinc2	equ	0xFDE
 24248                           postdec2	equ	0xFDD
 24249                           fsr2h	equ	0xFDA
 24250                           fsr2l	equ	0xFD9
 24251                           status	equ	0xFD8
 24252                           
 24253 ;; *************** function _ToObiegCW *****************
 24254 ;; Defined at:
 24255 ;;		line 1725 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 24256 ;; Parameters:    Size  Location     Type
 24257 ;;		None
 24258 ;; Auto vars:     Size  Location     Type
 24259 ;;		None
 24260 ;; Return value:  Size  Location     Type
 24261 ;;		None               void
 24262 ;; Registers used:
 24263 ;;		wreg, status,2, status,0
 24264 ;; Tracked objects:
 24265 ;;		On entry : E/0
 24266 ;;		On exit  : F/0
 24267 ;;		Unchanged: FFFFFFF0/0
 24268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24273 ;;Total ram usage:        0 bytes
 24274 ;; Hardware stack levels used:    1
 24275 ;; Hardware stack levels required when called:    4
 24276 ;; This function calls:
 24277 ;;		Nothing
 24278 ;; This function is called by:
 24279 ;;		_DecSTR
 24280 ;;		_Rusz48
 24281 ;;		_Rusz48Z3
 24282 ;;		_ErrPTG
 24283 ;; This function uses a non-reentrant model
 24284 ;;
 24285                           
 24286                           	psect	text90
 24287  009ACA                     __ptext90:
 24288                           	opt stack 0
 24289  009ACA                     _ToObiegCW:
 24290                           	opt stack 23
 24291                           
 24292                           ;main.c: 1726: switch(DtKNF.tpkt)
 24293                           
 24294                           ; BSR set to: 1
 24295  009ACA  D029               	goto	l32826
 24296  009ACC                     l1056:
 24297                           
 24298                           ; BSR set to: 1
 24299                           ;main.c: 1729: case 2:
 24300                           ;main.c: 1730: {
 24301                           ;main.c: 1731: if(!M._ZMKCOCW&&PORTDbits.RD2)
 24302  009ACC  0100               	movlb	0	; () banked
 24303  009ACE  A370               	btfss	(_M+16)& (0+255),1,b
 24304                           
 24305                           ; BSR set to: 0
 24306  009AD0  A483               	btfss	3971,2,c	;volatile
 24307  009AD2  0012               	return	
 24308                           
 24309                           ; BSR set to: 0
 24310                           ;main.c: 1732: {
 24311                           ;main.c: 1733: M._RPM_CW=1;
 24312  009AD4  8F7B               	bsf	(_M+27)& (0+255),7,b
 24313                           
 24314                           ;main.c: 1734: M._ZMKCOCW=1;
 24315  009AD6  8370               	bsf	(_M+16)& (0+255),1,b
 24316                           
 24317                           ;main.c: 1735: M.ZKP=0;
 24318  009AD8  6B8D               	clrf	(_M+45)& (0+255),b
 24319                           
 24320                           ; BSR set to: 0
 24321                           ;main.c: 1736: if(M._pob_KCW||M._pob_CW||M._pob_DzCW)
 24322  009ADA  5163               	movf	(_M+3)& (0+255),w,b
 24323  009ADC  1162               	iorwf	(_M+2)& (0+255),w,b
 24324  009ADE  E107               	bnz	l1060
 24325                           
 24326                           ; BSR set to: 0
 24327  009AE0  5169               	movf	(_M+9)& (0+255),w,b
 24328  009AE2  1168               	iorwf	(_M+8)& (0+255),w,b
 24329  009AE4  E104               	bnz	l1060
 24330                           
 24331                           ; BSR set to: 0
 24332  009AE6  516F               	movf	(_M+15)& (0+255),w,b
 24333  009AE8  116E               	iorwf	(_M+14)& (0+255),w,b
 24334  009AEA                     L51:
 24335  009AEA  B4D8               	btfsc	status,2,c
 24336  009AEC  0012               	return	
 24337  009AEE                     l1060:
 24338                           
 24339                           ; BSR set to: 0
 24340                           ;main.c: 1737: {
 24341                           ;main.c: 1738: if(M._PRACA)
 24342  009AEE  A57B               	btfss	(_M+27)& (0+255),2,b
 24343  009AF0  0012               	return	
 24344                           
 24345                           ; BSR set to: 0
 24346                           ;main.c: 1739: {
 24347                           ;main.c: 1740: M._BLOKUJ_15S=1;
 24348  009AF2  8971               	bsf	(_M+17)& (0+255),4,b
 24349                           
 24350                           ;main.c: 1741: M.BL15=0;
 24351  009AF4  6B87               	clrf	(_M+39)& (0+255),b
 24352  009AF6  0012               	return	
 24353  009AF8                     l1070:
 24354                           
 24355                           ; BSR set to: 1
 24356                           ;main.c: 1767: {
 24357                           ;main.c: 1768: if(!M._ZMKCOCW&&PORTDbits.RD1)
 24358  009AF8  0100               	movlb	0	; () banked
 24359  009AFA  A370               	btfss	(_M+16)& (0+255),1,b
 24360                           
 24361                           ; BSR set to: 0
 24362  009AFC  A283               	btfss	3971,1,c	;volatile
 24363  009AFE  0012               	return	
 24364                           
 24365                           ; BSR set to: 0
 24366                           ;main.c: 1769: {
 24367                           ;main.c: 1770: M._RPM_CW=1;
 24368  009B00  8F7B               	bsf	(_M+27)& (0+255),7,b
 24369                           
 24370                           ;main.c: 1771: M._ZMKCOCW=1;
 24371  009B02  8370               	bsf	(_M+16)& (0+255),1,b
 24372                           
 24373                           ;main.c: 1772: M.ZKP=0;
 24374  009B04  6B8D               	clrf	(_M+45)& (0+255),b
 24375                           
 24376                           ; BSR set to: 0
 24377                           ;main.c: 1773: if(M._pob_KCW||M._pob_CW||M._pob_DzCW||M._pob_AL)
 24378  009B06  5163               	movf	(_M+3)& (0+255),w,b
 24379  009B08  1162               	iorwf	(_M+2)& (0+255),w,b
 24380  009B0A  E1F1               	bnz	l1060
 24381                           
 24382                           ; BSR set to: 0
 24383  009B0C  5169               	movf	(_M+9)& (0+255),w,b
 24384  009B0E  1168               	iorwf	(_M+8)& (0+255),w,b
 24385  009B10  E1EE               	bnz	l1060
 24386                           
 24387                           ; BSR set to: 0
 24388  009B12  516F               	movf	(_M+15)& (0+255),w,b
 24389  009B14  116E               	iorwf	(_M+14)& (0+255),w,b
 24390  009B16  E1EB               	bnz	l1060
 24391                           
 24392                           ; BSR set to: 0
 24393  009B18  5167               	movf	(_M+7)& (0+255),w,b
 24394  009B1A  1166               	iorwf	(_M+6)& (0+255),w,b
 24395  009B1C  D7E6               	goto	L51
 24396  009B1E                     l32826:
 24397  009B1E  0101               	movlb	1	; () banked
 24398  009B20  5151               	movf	(_DtKNF+7)& (0+255),w,b
 24399                           
 24400                           ; Switch size 1, requested type "space"
 24401                           ; Number of cases is 4, Range of values is 0 to 3
 24402                           ; switch strategies available:
 24403                           ; Name         Instructions Cycles
 24404                           ; simple_byte           13     7 (average)
 24405                           ;	Chosen strategy is simple_byte
 24406  009B22  E0EA               	bz	l1070
 24407  009B24  0A01               	xorlw	1	; case 1
 24408  009B26  E0D2               	bz	l1056
 24409  009B28  0A03               	xorlw	3	; case 2
 24410  009B2A  E0D0               	bz	l1056
 24411  009B2C  0A01               	xorlw	1	; case 3
 24412  009B2E  D7E4               	goto	l1070
 24413  009B30                     __end_of_ToObiegCW:
 24414                           	opt stack 0
 24415                           tblptru	equ	0xFF8
 24416                           tblptrh	equ	0xFF7
 24417                           tblptrl	equ	0xFF6
 24418                           tablat	equ	0xFF5
 24419                           prodh	equ	0xFF4
 24420                           prodl	equ	0xFF3
 24421                           intcon	equ	0xFF2
 24422                           postinc0	equ	0xFEE
 24423                           wreg	equ	0xFE8
 24424                           indf1	equ	0xFE7
 24425                           postinc1	equ	0xFE6
 24426                           postdec1	equ	0xFE5
 24427                           fsr1h	equ	0xFE2
 24428                           fsr1l	equ	0xFE1
 24429                           indf2	equ	0xFDF
 24430                           postinc2	equ	0xFDE
 24431                           postdec2	equ	0xFDD
 24432                           fsr2h	equ	0xFDA
 24433                           fsr2l	equ	0xFD9
 24434                           status	equ	0xFD8
 24435                           
 24436 ;; *************** function _ToObiegCO *****************
 24437 ;; Defined at:
 24438 ;;		line 1686 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 24439 ;; Parameters:    Size  Location     Type
 24440 ;;		None
 24441 ;; Auto vars:     Size  Location     Type
 24442 ;;		None
 24443 ;; Return value:  Size  Location     Type
 24444 ;;		None               void
 24445 ;; Registers used:
 24446 ;;		wreg, status,2, status,0
 24447 ;; Tracked objects:
 24448 ;;		On entry : E/0
 24449 ;;		On exit  : F/0
 24450 ;;		Unchanged: FFFFFFF0/0
 24451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24456 ;;Total ram usage:        0 bytes
 24457 ;; Hardware stack levels used:    1
 24458 ;; Hardware stack levels required when called:    4
 24459 ;; This function calls:
 24460 ;;		Nothing
 24461 ;; This function is called by:
 24462 ;;		_DecSTR
 24463 ;;		_SetWylacz
 24464 ;;		_Rusz48
 24465 ;;		_ErrPTG
 24466 ;; This function uses a non-reentrant model
 24467 ;;
 24468                           
 24469                           	psect	text91
 24470  00AC84                     __ptext91:
 24471                           	opt stack 0
 24472  00AC84                     _ToObiegCO:
 24473                           	opt stack 23
 24474                           
 24475                           ;main.c: 1687: switch(DtKNF.tpkt)
 24476                           
 24477                           ; BSR set to: 0
 24478  00AC84  D00D               	goto	l32844
 24479  00AC86                     l1043:
 24480                           
 24481                           ; BSR set to: 1
 24482                           ;main.c: 1690: case 2:
 24483                           ;main.c: 1691: {
 24484                           ;main.c: 1692: if(!M._ZMKCOCW&&!PORTDbits.RD2)
 24485  00AC86  0100               	movlb	0	; () banked
 24486  00AC88  A370               	btfss	(_M+16)& (0+255),1,b
 24487                           
 24488                           ; BSR set to: 0
 24489  00AC8A  B483               	btfsc	3971,2,c	;volatile
 24490  00AC8C  0012               	return	
 24491  00AC8E                     l32832:
 24492                           
 24493                           ; BSR set to: 0
 24494                           ;main.c: 1693: {
 24495                           ;main.c: 1694: M._RPM_CW=0;
 24496  00AC8E  9F7B               	bcf	(_M+27)& (0+255),7,b
 24497                           
 24498                           ;main.c: 1695: M._ZMKCOCW=1;
 24499  00AC90  8370               	bsf	(_M+16)& (0+255),1,b
 24500                           
 24501                           ;main.c: 1696: M.ZKP=0;
 24502  00AC92  6B8D               	clrf	(_M+45)& (0+255),b
 24503  00AC94  0012               	return	
 24504  00AC96                     l1047:
 24505                           
 24506                           ; BSR set to: 1
 24507                           ;main.c: 1701: case 3:
 24508                           ;main.c: 1702: {
 24509                           ;main.c: 1703: if(!M._ZMKCOCW&&!PORTDbits.RD1)
 24510  00AC96  0100               	movlb	0	; () banked
 24511  00AC98  A370               	btfss	(_M+16)& (0+255),1,b
 24512                           
 24513                           ; BSR set to: 0
 24514  00AC9A  B283               	btfsc	3971,1,c	;volatile
 24515  00AC9C  0012               	return	
 24516  00AC9E  D7F7               	goto	l32832
 24517  00ACA0                     l32844:
 24518  00ACA0  0101               	movlb	1	; () banked
 24519  00ACA2  5151               	movf	(_DtKNF+7)& (0+255),w,b
 24520                           
 24521                           ; Switch size 1, requested type "space"
 24522                           ; Number of cases is 4, Range of values is 0 to 3
 24523                           ; switch strategies available:
 24524                           ; Name         Instructions Cycles
 24525                           ; simple_byte           13     7 (average)
 24526                           ;	Chosen strategy is simple_byte
 24527  00ACA4  E0F8               	bz	l1047
 24528  00ACA6  0A01               	xorlw	1	; case 1
 24529  00ACA8  E0EE               	bz	l1043
 24530  00ACAA  0A03               	xorlw	3	; case 2
 24531  00ACAC  E0EC               	bz	l1043
 24532  00ACAE  0A01               	xorlw	1	; case 3
 24533  00ACB0  D7F2               	goto	l1047
 24534  00ACB2                     __end_of_ToObiegCO:
 24535                           	opt stack 0
 24536                           tblptru	equ	0xFF8
 24537                           tblptrh	equ	0xFF7
 24538                           tblptrl	equ	0xFF6
 24539                           tablat	equ	0xFF5
 24540                           prodh	equ	0xFF4
 24541                           prodl	equ	0xFF3
 24542                           intcon	equ	0xFF2
 24543                           postinc0	equ	0xFEE
 24544                           wreg	equ	0xFE8
 24545                           indf1	equ	0xFE7
 24546                           postinc1	equ	0xFE6
 24547                           postdec1	equ	0xFE5
 24548                           fsr1h	equ	0xFE2
 24549                           fsr1l	equ	0xFE1
 24550                           indf2	equ	0xFDF
 24551                           postinc2	equ	0xFDE
 24552                           postdec2	equ	0xFDD
 24553                           fsr2h	equ	0xFDA
 24554                           fsr2l	equ	0xFD9
 24555                           status	equ	0xFD8
 24556                           
 24557 ;; *************** function _WritePWM *****************
 24558 ;; Defined at:
 24559 ;;		line 381 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
 24560 ;; Parameters:    Size  Location     Type
 24561 ;;  tpwm            1    wreg     const unsigned char 
 24562 ;; Auto vars:     Size  Location     Type
 24563 ;;  tpwm            1   29[COMRAM] const unsigned char 
 24564 ;; Return value:  Size  Location     Type
 24565 ;;		None               void
 24566 ;; Registers used:
 24567 ;;		wreg
 24568 ;; Tracked objects:
 24569 ;;		On entry : E/0
 24570 ;;		On exit  : F/0
 24571 ;;		Unchanged: FFFFFFF0/0
 24572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24576 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24577 ;;Total ram usage:        1 bytes
 24578 ;; Hardware stack levels used:    1
 24579 ;; Hardware stack levels required when called:    4
 24580 ;; This function calls:
 24581 ;;		Nothing
 24582 ;; This function is called by:
 24583 ;;		_DecSTR
 24584 ;;		_Rozruch
 24585 ;;		_ErrPTG
 24586 ;; This function uses a non-reentrant model
 24587 ;;
 24588                           
 24589                           	psect	text92
 24590  00B3E4                     __ptext92:
 24591                           	opt stack 0
 24592  00B3E4                     _WritePWM:
 24593                           	opt stack 24
 24594                           
 24595                           ; BSR set to: 0
 24596                           ;WritePWM@tpwm stored from wreg
 24597  00B3E4  CFE8 F01E          	movff	wreg,WritePWM@tpwm
 24598                           
 24599                           ;pwm.c: 382: PWM._ENPWM=0;
 24600  00B3E8  0100               	movlb	0	; () banked
 24601  00B3EA  9193               	bcf	_PWM& (0+255),0,b	;volatile
 24602                           
 24603                           ; BSR set to: 0
 24604                           ;pwm.c: 383: PWM.BufPWM=tpwm;
 24605  00B3EC  C01E  F094         	movff	WritePWM@tpwm,_PWM+1	;volatile
 24606                           
 24607                           ; BSR set to: 0
 24608                           ;pwm.c: 384: PWM.BufOSC=0;
 24609  00B3F0  6B95               	clrf	(_PWM+2)& (0+255),b	;volatile
 24610                           
 24611                           ; BSR set to: 0
 24612                           ;pwm.c: 385: PWM._ENPWM=1;
 24613  00B3F2  8193               	bsf	_PWM& (0+255),0,b	;volatile
 24614                           
 24615                           ; BSR set to: 0
 24616  00B3F4  0012               	return	
 24617  00B3F6                     __end_of_WritePWM:
 24618                           	opt stack 0
 24619                           tblptru	equ	0xFF8
 24620                           tblptrh	equ	0xFF7
 24621                           tblptrl	equ	0xFF6
 24622                           tablat	equ	0xFF5
 24623                           prodh	equ	0xFF4
 24624                           prodl	equ	0xFF3
 24625                           intcon	equ	0xFF2
 24626                           postinc0	equ	0xFEE
 24627                           wreg	equ	0xFE8
 24628                           indf1	equ	0xFE7
 24629                           postinc1	equ	0xFE6
 24630                           postdec1	equ	0xFE5
 24631                           fsr1h	equ	0xFE2
 24632                           fsr1l	equ	0xFE1
 24633                           indf2	equ	0xFDF
 24634                           postinc2	equ	0xFDE
 24635                           postdec2	equ	0xFDD
 24636                           fsr2h	equ	0xFDA
 24637                           fsr2l	equ	0xFD9
 24638                           status	equ	0xFD8
 24639                           
 24640 ;; *************** function _GrzejOFF *****************
 24641 ;; Defined at:
 24642 ;;		line 2414 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 24643 ;; Parameters:    Size  Location     Type
 24644 ;;		None
 24645 ;; Auto vars:     Size  Location     Type
 24646 ;;		None
 24647 ;; Return value:  Size  Location     Type
 24648 ;;		None               void
 24649 ;; Registers used:
 24650 ;;		None
 24651 ;; Tracked objects:
 24652 ;;		On entry : E/0
 24653 ;;		On exit  : 0/0
 24654 ;;		Unchanged: 0/0
 24655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24660 ;;Total ram usage:        0 bytes
 24661 ;; Hardware stack levels used:    1
 24662 ;; Hardware stack levels required when called:    4
 24663 ;; This function calls:
 24664 ;;		Nothing
 24665 ;; This function is called by:
 24666 ;;		_SetWylacz
 24667 ;;		_ErrPTG
 24668 ;; This function uses a non-reentrant model
 24669 ;;
 24670                           
 24671                           	psect	text93
 24672  00B0E8                     __ptext93:
 24673                           	opt stack 0
 24674  00B0E8                     _GrzejOFF:
 24675                           	opt stack 24
 24676                           
 24677                           ;main.c: 2415: if(!M._TURBO)
 24678                           
 24679                           ; BSR set to: 0
 24680  00B0E8  0100               	movlb	0	; () banked
 24681  00B0EA  B37B               	btfsc	(_M+27)& (0+255),1,b
 24682  00B0EC  D00B               	goto	l1334
 24683                           
 24684                           ; BSR set to: 0
 24685                           ;main.c: 2416: {
 24686                           ;main.c: 2417: PORTDbits.RD3=0;
 24687  00B0EE  9683               	bcf	3971,3,c	;volatile
 24688  00B0F0  F000               	nop		;# 
 24689  00B0F2  F000               	nop		;# 
 24690  00B0F4  F000               	nop		;# 
 24691  00B0F6  F000               	nop		;# 
 24692  00B0F8  F000               	nop		;# 
 24693  00B0FA  F000               	nop		;# 
 24694  00B0FC  F000               	nop		;# 
 24695  00B0FE  F000               	nop		;# 
 24696                           
 24697                           ;main.c: 2426: PORTDbits.RD0=0;
 24698  00B100  9083               	bcf	3971,0,c	;volatile
 24699                           
 24700                           ;main.c: 2427: }
 24701  00B102  0012               	return	
 24702  00B104                     l1334:
 24703                           
 24704                           ; BSR set to: 0
 24705                           ;main.c: 2428: else
 24706                           ;main.c: 2429: {
 24707                           ;main.c: 2430: PORTDbits.RD0=0;
 24708  00B104  9083               	bcf	3971,0,c	;volatile
 24709  00B106  0012               	return	
 24710  00B108                     __end_of_GrzejOFF:
 24711                           	opt stack 0
 24712                           tblptru	equ	0xFF8
 24713                           tblptrh	equ	0xFF7
 24714                           tblptrl	equ	0xFF6
 24715                           tablat	equ	0xFF5
 24716                           prodh	equ	0xFF4
 24717                           prodl	equ	0xFF3
 24718                           intcon	equ	0xFF2
 24719                           postinc0	equ	0xFEE
 24720                           wreg	equ	0xFE8
 24721                           indf1	equ	0xFE7
 24722                           postinc1	equ	0xFE6
 24723                           postdec1	equ	0xFE5
 24724                           fsr1h	equ	0xFE2
 24725                           fsr1l	equ	0xFE1
 24726                           indf2	equ	0xFDF
 24727                           postinc2	equ	0xFDE
 24728                           postdec2	equ	0xFDD
 24729                           fsr2h	equ	0xFDA
 24730                           fsr2l	equ	0xFD9
 24731                           status	equ	0xFD8
 24732                           
 24733 ;; *************** function _KeyRes *****************
 24734 ;; Defined at:
 24735 ;;		line 3573 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 24736 ;; Parameters:    Size  Location     Type
 24737 ;;		None
 24738 ;; Auto vars:     Size  Location     Type
 24739 ;;		None
 24740 ;; Return value:  Size  Location     Type
 24741 ;;		None               void
 24742 ;; Registers used:
 24743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24744 ;; Tracked objects:
 24745 ;;		On entry : E/0
 24746 ;;		On exit  : E/0
 24747 ;;		Unchanged: 0/0
 24748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24753 ;;Total ram usage:        0 bytes
 24754 ;; Hardware stack levels used:    1
 24755 ;; Hardware stack levels required when called:    5
 24756 ;; This function calls:
 24757 ;;		_RdPrt
 24758 ;;		_StartRTS
 24759 ;;		_RTS
 24760 ;; This function is called by:
 24761 ;;		_ErrPTG
 24762 ;; This function uses a non-reentrant model
 24763 ;;
 24764                           
 24765                           	psect	text94
 24766  00A0B0                     __ptext94:
 24767                           	opt stack 0
 24768  00A0B0                     _KeyRes:
 24769                           	opt stack 23
 24770                           
 24771                           ;main.c: 3574: if(RdPrt(22))
 24772  00A0B0  0E16               	movlw	22
 24773  00A0B2  EC84  F058         	call	_RdPrt
 24774  00A0B6  E303               	bnc	l1707
 24775                           
 24776                           ; BSR set to: 0
 24777                           ;main.c: 3575: {
 24778                           ;main.c: 3576: PFN._res=1;
 24779  00A0B8  0101               	movlb	1	; () banked
 24780  00A0BA  87BC               	bsf	(_PFN+2)& (0+255),3,b
 24781                           
 24782                           ;main.c: 3577: }
 24783  00A0BC  D01C               	goto	l40672
 24784  00A0BE                     l1707:
 24785                           
 24786                           ; BSR set to: 0
 24787                           ;main.c: 3578: else PFN._res=0;
 24788  00A0BE  0101               	movlb	1	; () banked
 24789  00A0C0  97BC               	bcf	(_PFN+2)& (0+255),3,b
 24790  00A0C2  D019               	goto	l40672
 24791  00A0C4                     l1710:
 24792                           
 24793                           ; BSR set to: 0
 24794                           ;main.c: 3582: {
 24795                           ;main.c: 3583: if(PFN._res)
 24796  00A0C4  0101               	movlb	1	; () banked
 24797  00A0C6  A7BC               	btfss	(_PFN+2)& (0+255),3,b
 24798  00A0C8  D00F               	goto	l40662
 24799                           
 24800                           ; BSR set to: 1
 24801                           ;main.c: 3584: {
 24802                           ;main.c: 3585: M.KRS=1;
 24803  00A0CA  0E01               	movlw	1
 24804  00A0CC  0100               	movlb	0	; () banked
 24805  00A0CE  6F90               	movwf	(_M+48)& (0+255),b
 24806                           
 24807                           ; BSR set to: 0
 24808                           ;main.c: 3586: StartRTS(8);
 24809  00A0D0  0E08               	movlw	8
 24810  00A0D2  EC9C  F057         	call	_StartRTS
 24811  00A0D6  D008               	goto	l40662
 24812  00A0D8                     l1713:
 24813                           
 24814                           ; BSR set to: 0
 24815                           ;main.c: 3591: {
 24816                           ;main.c: 3592: if(PFN._res)
 24817  00A0D8  0101               	movlb	1	; () banked
 24818  00A0DA  A7BC               	btfss	(_PFN+2)& (0+255),3,b
 24819  00A0DC  D009               	goto	l1714
 24820                           
 24821                           ; BSR set to: 1
 24822                           ;main.c: 3593: {
 24823                           ;main.c: 3594: if(RTS(8)<1) return 0;
 24824  00A0DE  0E08               	movlw	8
 24825  00A0E0  ECAF  F057         	call	_RTS
 24826  00A0E4  0900               	iorlw	0
 24827  00A0E6  E102               	bnz	l40666
 24828  00A0E8                     l40662:
 24829  00A0E8  90D8               	bcf	status,0,c
 24830  00A0EA  0012               	return	
 24831  00A0EC                     l40666:
 24832                           
 24833                           ; BSR set to: 1
 24834                           ;main.c: 3595: return 1;
 24835  00A0EC  80D8               	bsf	status,0,c
 24836  00A0EE  0012               	return	
 24837  00A0F0                     l1714:
 24838                           
 24839                           ; BSR set to: 1
 24840                           ;main.c: 3598: else
 24841                           ;main.c: 3599: {
 24842                           ;main.c: 3600: M.KRS=0;
 24843  00A0F0  0100               	movlb	0	; () banked
 24844  00A0F2  6B90               	clrf	(_M+48)& (0+255),b
 24845  00A0F4  D7F9               	goto	l40662
 24846  00A0F6                     l40672:
 24847                           
 24848                           ; BSR set to: 1
 24849  00A0F6  0100               	movlb	0	; () banked
 24850  00A0F8  5190               	movf	(_M+48)& (0+255),w,b
 24851                           
 24852                           ; Switch size 1, requested type "space"
 24853                           ; Number of cases is 2, Range of values is 0 to 1
 24854                           ; switch strategies available:
 24855                           ; Name         Instructions Cycles
 24856                           ; simple_byte            7     4 (average)
 24857                           ;	Chosen strategy is simple_byte
 24858  00A0FA  E0E4               	bz	l1710
 24859  00A0FC  0A01               	xorlw	1	; case 1
 24860  00A0FE  E0EC               	bz	l1713
 24861  00A100  D7F3               	goto	l40662
 24862  00A102                     __end_of_KeyRes:
 24863                           	opt stack 0
 24864                           tblptru	equ	0xFF8
 24865                           tblptrh	equ	0xFF7
 24866                           tblptrl	equ	0xFF6
 24867                           tablat	equ	0xFF5
 24868                           prodh	equ	0xFF4
 24869                           prodl	equ	0xFF3
 24870                           intcon	equ	0xFF2
 24871                           postinc0	equ	0xFEE
 24872                           wreg	equ	0xFE8
 24873                           indf1	equ	0xFE7
 24874                           postinc1	equ	0xFE6
 24875                           postdec1	equ	0xFE5
 24876                           fsr1h	equ	0xFE2
 24877                           fsr1l	equ	0xFE1
 24878                           indf2	equ	0xFDF
 24879                           postinc2	equ	0xFDE
 24880                           postdec2	equ	0xFDD
 24881                           fsr2h	equ	0xFDA
 24882                           fsr2l	equ	0xFD9
 24883                           status	equ	0xFD8
 24884                           
 24885 ;; *************** function _RdPrt *****************
 24886 ;; Defined at:
 24887 ;;		line 305 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
 24888 ;; Parameters:    Size  Location     Type
 24889 ;;  Index           1    wreg     const unsigned char 
 24890 ;; Auto vars:     Size  Location     Type
 24891 ;;  Index           1   30[COMRAM] const unsigned char 
 24892 ;; Return value:  Size  Location     Type
 24893 ;;		None               void
 24894 ;; Registers used:
 24895 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24896 ;; Tracked objects:
 24897 ;;		On entry : C/3
 24898 ;;		On exit  : F/0
 24899 ;;		Unchanged: 0/0
 24900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24905 ;;Total ram usage:        2 bytes
 24906 ;; Hardware stack levels used:    1
 24907 ;; Hardware stack levels required when called:    4
 24908 ;; This function calls:
 24909 ;;		Nothing
 24910 ;; This function is called by:
 24911 ;;		_main
 24912 ;;		_RefInterfaceData
 24913 ;;		_KolejkaPobudzen
 24914 ;;		_NastawaCOCW
 24915 ;;		_DecERR
 24916 ;;		_DecSTR
 24917 ;;		_DecWylacz
 24918 ;;		_Rozruch
 24919 ;;		_DecyzjaPLM2
 24920 ;;		_Wylacz
 24921 ;;		_DetekcjaPrzeplywuWG
 24922 ;;		_OczekujNaPrzeplywWG
 24923 ;;		_RuszCiag
 24924 ;;		_KeyRes
 24925 ;;		_ErrPTG
 24926 ;;		_PomiarCW
 24927 ;;		_ReadParam
 24928 ;;		_TrybPracy
 24929 ;; This function uses a non-reentrant model
 24930 ;;
 24931                           
 24932                           	psect	text95
 24933  00B108                     __ptext95:
 24934                           	opt stack 0
 24935  00B108                     _RdPrt:
 24936                           	opt stack 23
 24937                           
 24938                           ;RdPrt@Index stored from wreg
 24939  00B108  CFE8 F01F          	movff	wreg,RdPrt@Index
 24940                           
 24941                           ;port.c: 306: if (Index>26-1) asm("RESET");
 24942  00B10C  0E19               	movlw	25
 24943  00B10E  641F               	cpfsgt	RdPrt@Index,c
 24944  00B110  D001               	goto	l36648
 24945  00B112  00FF               	reset		;# 
 24946  00B114                     l36648:
 24947                           
 24948                           ;port.c: 307: return SPort[Index].Output;
 24949  00B114  501F               	movf	RdPrt@Index,w,c
 24950  00B116  0100               	movlb	0	; () banked
 24951  00B118  0FB5               	addlw	low _SPort	;volatile
 24952  00B11A  6ED9               	movwf	fsr2l,c
 24953  00B11C  6ADA               	clrf	fsr2h,c
 24954  00B11E  30DF               	rrcf	223,w,c
 24955  00B120  0B01               	andlw	1
 24956  00B122  6E1E               	movwf	??_RdPrt& (0+255),c
 24957  00B124  301E               	rrcf	??_RdPrt,w,c
 24958                           
 24959                           ; BSR set to: 0
 24960  00B126  0012               	return	
 24961  00B128                     __end_of_RdPrt:
 24962                           	opt stack 0
 24963                           tblptru	equ	0xFF8
 24964                           tblptrh	equ	0xFF7
 24965                           tblptrl	equ	0xFF6
 24966                           tablat	equ	0xFF5
 24967                           prodh	equ	0xFF4
 24968                           prodl	equ	0xFF3
 24969                           intcon	equ	0xFF2
 24970                           postinc0	equ	0xFEE
 24971                           wreg	equ	0xFE8
 24972                           indf1	equ	0xFE7
 24973                           postinc1	equ	0xFE6
 24974                           postdec1	equ	0xFE5
 24975                           fsr1h	equ	0xFE2
 24976                           fsr1l	equ	0xFE1
 24977                           indf2	equ	0xFDF
 24978                           postinc2	equ	0xFDE
 24979                           postdec2	equ	0xFDD
 24980                           fsr2h	equ	0xFDA
 24981                           fsr2l	equ	0xFD9
 24982                           status	equ	0xFD8
 24983                           
 24984 ;; *************** function _VZPauza *****************
 24985 ;; Defined at:
 24986 ;;		line 3610 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 24987 ;; Parameters:    Size  Location     Type
 24988 ;;		None
 24989 ;; Auto vars:     Size  Location     Type
 24990 ;;		None
 24991 ;; Return value:  Size  Location     Type
 24992 ;;		None               void
 24993 ;; Registers used:
 24994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24995 ;; Tracked objects:
 24996 ;;		On entry : 0/1
 24997 ;;		On exit  : F/1
 24998 ;;		Unchanged: 0/0
 24999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25004 ;;Total ram usage:        1 bytes
 25005 ;; Hardware stack levels used:    1
 25006 ;; Hardware stack levels required when called:    5
 25007 ;; This function calls:
 25008 ;;		_StartRTS
 25009 ;;		_RTS
 25010 ;; This function is called by:
 25011 ;;		_ErrPTG
 25012 ;; This function uses a non-reentrant model
 25013 ;;
 25014                           
 25015                           	psect	text96
 25016  00ACB2                     __ptext96:
 25017                           	opt stack 0
 25018  00ACB2                     _VZPauza:
 25019                           	opt stack 23
 25020                           
 25021                           ;main.c: 3612: StartRTS(2);
 25022                           
 25023                           ; BSR set to: 0
 25024  00ACB2  0E02               	movlw	2
 25025  00ACB4  EC9C  F057         	call	_StartRTS
 25026  00ACB8                     l1720:
 25027                           
 25028                           ; BSR set to: 1
 25029  00ACB8  0004               	clrwdt		;# 
 25030                           
 25031                           ;main.c: 3616: if(M.ERR_BTY==2)
 25032  00ACBA  0100               	movlb	0	; () banked
 25033  00ACBC  5182               	movf	(_M+34)& (0+255),w,b
 25034  00ACBE  0A02               	xorlw	2
 25035  00ACC0  E109               	bnz	l33008
 25036                           
 25037                           ; BSR set to: 0
 25038                           ;main.c: 3617: {
 25039                           ;main.c: 3618: if(RTS(2)>=3) return;
 25040  00ACC2  0E02               	movlw	2
 25041  00ACC4  ECAF  F057         	call	_RTS
 25042  00ACC8  6E1F               	movwf	??_VZPauza& (0+255),c
 25043  00ACCA  0E03               	movlw	3
 25044  00ACCC  5C1F               	subwf	??_VZPauza,w,c
 25045  00ACCE  B0D8               	btfsc	status,0,c
 25046  00ACD0  0012               	return	
 25047  00ACD2  D7F2               	goto	l1720
 25048  00ACD4                     l33008:
 25049                           
 25050                           ; BSR set to: 0
 25051                           ;main.c: 3620: else
 25052                           ;main.c: 3621: {
 25053                           ;main.c: 3622: if(RTS(2)>=2) return;
 25054  00ACD4  0E02               	movlw	2
 25055  00ACD6  ECAF  F057         	call	_RTS
 25056  00ACDA  6E1F               	movwf	??_VZPauza& (0+255),c
 25057  00ACDC  0E02               	movlw	2
 25058  00ACDE  D7F6               	goto	L52
 25059  00ACE0                     __end_of_VZPauza:
 25060                           	opt stack 0
 25061                           tblptru	equ	0xFF8
 25062                           tblptrh	equ	0xFF7
 25063                           tblptrl	equ	0xFF6
 25064                           tablat	equ	0xFF5
 25065                           prodh	equ	0xFF4
 25066                           prodl	equ	0xFF3
 25067                           intcon	equ	0xFF2
 25068                           postinc0	equ	0xFEE
 25069                           wreg	equ	0xFE8
 25070                           indf1	equ	0xFE7
 25071                           postinc1	equ	0xFE6
 25072                           postdec1	equ	0xFE5
 25073                           fsr1h	equ	0xFE2
 25074                           fsr1l	equ	0xFE1
 25075                           indf2	equ	0xFDF
 25076                           postinc2	equ	0xFDE
 25077                           postdec2	equ	0xFDD
 25078                           fsr2h	equ	0xFDA
 25079                           fsr2l	equ	0xFD9
 25080                           status	equ	0xFD8
 25081                           
 25082 ;; *************** function _ToReset *****************
 25083 ;; Defined at:
 25084 ;;		line 3795 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\main.c"
 25085 ;; Parameters:    Size  Location     Type
 25086 ;;		None
 25087 ;; Auto vars:     Size  Location     Type
 25088 ;;		None
 25089 ;; Return value:  Size  Location     Type
 25090 ;;		None               void
 25091 ;; Registers used:
 25092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25093 ;; Tracked objects:
 25094 ;;		On entry : E/0
 25095 ;;		On exit  : E/0
 25096 ;;		Unchanged: 0/0
 25097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25102 ;;Total ram usage:        0 bytes
 25103 ;; Hardware stack levels used:    1
 25104 ;; Hardware stack levels required when called:    6
 25105 ;; This function calls:
 25106 ;;		_EndErr
 25107 ;;		_Busy_eep
 25108 ;;		_Write_b_eep
 25109 ;;		_StartRTS
 25110 ;;		_RTS
 25111 ;; This function is called by:
 25112 ;;		_ErrPTG
 25113 ;; This function uses a non-reentrant model
 25114 ;;
 25115                           
 25116                           	psect	text97
 25117  00A9CC                     __ptext97:
 25118                           	opt stack 0
 25119  00A9CC                     _ToReset:
 25120                           	opt stack 22
 25121                           
 25122                           ;main.c: 3796: PORTDbits.RD3=0;
 25123                           
 25124                           ; BSR set to: 1
 25125  00A9CC  9683               	bcf	3971,3,c	;volatile
 25126                           
 25127                           ;main.c: 3797: PORTDbits.RD2=0;
 25128  00A9CE  9483               	bcf	3971,2,c	;volatile
 25129                           
 25130                           ;main.c: 3798: EndErr();
 25131  00A9D0  EC55  F05A         	call	_EndErr	;wreg free
 25132                           
 25133                           ; BSR set to: 1
 25134                           ;main.c: 3799: PFN._opgprg=0;
 25135  00A9D4  99BF               	bcf	(_PFN+5)& (0+255),4,b
 25136                           
 25137                           ; BSR set to: 1
 25138                           ;main.c: 3800: PFN._opgres=0;
 25139  00A9D6  97BF               	bcf	(_PFN+5)& (0+255),3,b
 25140                           
 25141                           ; BSR set to: 1
 25142                           ;main.c: 3803: (Busy_eep(), Write_b_eep(0x00C0,0x00));
 25143  00A9D8  EC29  F05B         	call	_Busy_eep	;wreg free
 25144                           
 25145                           ; BSR set to: 1
 25146  00A9DC  6A1F               	clrf	?_Write_b_eep+1,c
 25147  00A9DE  0EC0               	movlw	192
 25148  00A9E0  6E1E               	movwf	?_Write_b_eep,c
 25149  00A9E2  0E00               	movlw	0
 25150  00A9E4  6A20               	clrf	?_Write_b_eep+2,c
 25151  00A9E6  EC83  F053         	call	_Write_b_eep	;wreg free
 25152                           
 25153                           ;main.c: 3804: StartRTS(2);
 25154  00A9EA  0E02               	movlw	2
 25155  00A9EC  EC9C  F057         	call	_StartRTS
 25156                           
 25157                           ;main.c: 3805: while(RTS(2)<1)
 25158  00A9F0  D001               	goto	l40692
 25159  00A9F2                     l1796:
 25160                           
 25161                           ; BSR set to: 1
 25162  00A9F2  0004               	clrwdt		;# 
 25163  00A9F4                     l40692:
 25164  00A9F4  0E02               	movlw	2
 25165  00A9F6  ECAF  F057         	call	_RTS
 25166  00A9FA  0900               	iorlw	0
 25167  00A9FC  E0FA               	bz	l1796
 25168  00A9FE                     l1798:
 25169  00A9FE  D7FF               	goto	l1798
 25170                           tblptru	equ	0xFF8
 25171                           tblptrh	equ	0xFF7
 25172                           tblptrl	equ	0xFF6
 25173                           tablat	equ	0xFF5
 25174                           prodh	equ	0xFF4
 25175                           prodl	equ	0xFF3
 25176                           intcon	equ	0xFF2
 25177                           postinc0	equ	0xFEE
 25178                           wreg	equ	0xFE8
 25179                           indf1	equ	0xFE7
 25180                           postinc1	equ	0xFE6
 25181                           postdec1	equ	0xFE5
 25182                           fsr1h	equ	0xFE2
 25183                           fsr1l	equ	0xFE1
 25184                           indf2	equ	0xFDF
 25185                           postinc2	equ	0xFDE
 25186                           postdec2	equ	0xFDD
 25187                           fsr2h	equ	0xFDA
 25188                           fsr2l	equ	0xFD9
 25189                           status	equ	0xFD8
 25190                           
 25191 ;; *************** function _EndErr *****************
 25192 ;; Defined at:
 25193 ;;		line 101 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\print.c"
 25194 ;; Parameters:    Size  Location     Type
 25195 ;;		None
 25196 ;; Auto vars:     Size  Location     Type
 25197 ;;		None
 25198 ;; Return value:  Size  Location     Type
 25199 ;;		None               void
 25200 ;; Registers used:
 25201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25202 ;; Tracked objects:
 25203 ;;		On entry : E/1
 25204 ;;		On exit  : F/1
 25205 ;;		Unchanged: 0/0
 25206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25211 ;;Total ram usage:        0 bytes
 25212 ;; Hardware stack levels used:    1
 25213 ;; Hardware stack levels required when called:    5
 25214 ;; This function calls:
 25215 ;;		_ResetKol
 25216 ;; This function is called by:
 25217 ;;		_DecWSW
 25218 ;;		_DecERR
 25219 ;;		_ToReset
 25220 ;; This function uses a non-reentrant model
 25221 ;;
 25222                           
 25223                           	psect	text98
 25224  00B4AA                     __ptext98:
 25225                           	opt stack 0
 25226  00B4AA                     __end_of_ToReset:
 25227                           	opt stack 0
 25228  00B4AA                     _EndErr:
 25229                           	opt stack 22
 25230                           
 25231                           ;print.c: 102: PFN._fmsg=0;
 25232  00B4AA  0101               	movlb	1	; () banked
 25233  00B4AC  9FBE               	bcf	(_PFN+4)& (0+255),7,b
 25234                           
 25235                           ;print.c: 103: PFN._ferr=0;
 25236  00B4AE  91BF               	bcf	(_PFN+5)& (0+255),0,b
 25237                           
 25238                           ;print.c: 104: PFN.KERR=0;
 25239  00B4B0  6BCA               	clrf	(_PFN+16)& (0+255),b
 25240                           
 25241                           ;print.c: 105: PFN.KAWR=0;
 25242  00B4B2  6BC9               	clrf	(_PFN+15)& (0+255),b
 25243                           
 25244                           ; BSR set to: 1
 25245                           ;print.c: 106: ResetKol(0);
 25246  00B4B4  0E00               	movlw	0
 25247  00B4B6  EFA4  F058         	goto	_ResetKol
 25248  00B4BA                     __end_of_EndErr:
 25249                           	opt stack 0
 25250                           tblptru	equ	0xFF8
 25251                           tblptrh	equ	0xFF7
 25252                           tblptrl	equ	0xFF6
 25253                           tablat	equ	0xFF5
 25254                           prodh	equ	0xFF4
 25255                           prodl	equ	0xFF3
 25256                           intcon	equ	0xFF2
 25257                           postinc0	equ	0xFEE
 25258                           wreg	equ	0xFE8
 25259                           indf1	equ	0xFE7
 25260                           postinc1	equ	0xFE6
 25261                           postdec1	equ	0xFE5
 25262                           fsr1h	equ	0xFE2
 25263                           fsr1l	equ	0xFE1
 25264                           indf2	equ	0xFDF
 25265                           postinc2	equ	0xFDE
 25266                           postdec2	equ	0xFDD
 25267                           fsr2h	equ	0xFDA
 25268                           fsr2l	equ	0xFD9
 25269                           status	equ	0xFD8
 25270                           
 25271 ;; *************** function _StartTim1 *****************
 25272 ;; Defined at:
 25273 ;;		line 78 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 25274 ;; Parameters:    Size  Location     Type
 25275 ;;		None
 25276 ;; Auto vars:     Size  Location     Type
 25277 ;;		None
 25278 ;; Return value:  Size  Location     Type
 25279 ;;		None               void
 25280 ;; Registers used:
 25281 ;;		None
 25282 ;; Tracked objects:
 25283 ;;		On entry : F/1
 25284 ;;		On exit  : F/1
 25285 ;;		Unchanged: FFFFFFF0/0
 25286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25291 ;;Total ram usage:        0 bytes
 25292 ;; Hardware stack levels used:    1
 25293 ;; Hardware stack levels required when called:    4
 25294 ;; This function calls:
 25295 ;;		Nothing
 25296 ;; This function is called by:
 25297 ;;		_FiltrPomiarowyCOCW
 25298 ;; This function uses a non-reentrant model
 25299 ;;
 25300                           
 25301                           	psect	text99
 25302  00B662                     __ptext99:
 25303                           	opt stack 0
 25304  00B662                     _StartTim1:
 25305                           	opt stack 25
 25306                           
 25307                           ; BSR set to: 1
 25308                           ;pomiar.c: 79: PmrtimFlt1=0;
 25309                           
 25310                           ; BSR set to: 1
 25311  00B662  6BB6               	clrf	_PmrtimFlt1& (0+255),b
 25312                           
 25313                           ; BSR set to: 1
 25314  00B664  0012               	return	
 25315  00B666                     __end_of_StartTim1:
 25316                           	opt stack 0
 25317                           tblptru	equ	0xFF8
 25318                           tblptrh	equ	0xFF7
 25319                           tblptrl	equ	0xFF6
 25320                           tablat	equ	0xFF5
 25321                           prodh	equ	0xFF4
 25322                           prodl	equ	0xFF3
 25323                           intcon	equ	0xFF2
 25324                           postinc0	equ	0xFEE
 25325                           wreg	equ	0xFE8
 25326                           indf1	equ	0xFE7
 25327                           postinc1	equ	0xFE6
 25328                           postdec1	equ	0xFE5
 25329                           fsr1h	equ	0xFE2
 25330                           fsr1l	equ	0xFE1
 25331                           indf2	equ	0xFDF
 25332                           postinc2	equ	0xFDE
 25333                           postdec2	equ	0xFDD
 25334                           fsr2h	equ	0xFDA
 25335                           fsr2l	equ	0xFD9
 25336                           status	equ	0xFD8
 25337                           
 25338 ;; *************** function _PmrTim1 *****************
 25339 ;; Defined at:
 25340 ;;		line 82 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 25341 ;; Parameters:    Size  Location     Type
 25342 ;;  tm              1    wreg     unsigned char 
 25343 ;; Auto vars:     Size  Location     Type
 25344 ;;  tm              1   29[COMRAM] unsigned char 
 25345 ;; Return value:  Size  Location     Type
 25346 ;;		None               void
 25347 ;; Registers used:
 25348 ;;		wreg, status,2, status,0
 25349 ;; Tracked objects:
 25350 ;;		On entry : F/1
 25351 ;;		On exit  : F/1
 25352 ;;		Unchanged: FFFFFFF0/0
 25353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25358 ;;Total ram usage:        1 bytes
 25359 ;; Hardware stack levels used:    1
 25360 ;; Hardware stack levels required when called:    4
 25361 ;; This function calls:
 25362 ;;		Nothing
 25363 ;; This function is called by:
 25364 ;;		_FiltrPomiarowyCOCW
 25365 ;; This function uses a non-reentrant model
 25366 ;;
 25367                           
 25368                           	psect	text100
 25369  00B3F6                     __ptext100:
 25370                           	opt stack 0
 25371  00B3F6                     _PmrTim1:
 25372                           	opt stack 25
 25373                           
 25374                           ; BSR set to: 1
 25375                           ;PmrTim1@tm stored from wreg
 25376  00B3F6  CFE8 F01E          	movff	wreg,PmrTim1@tm
 25377                           
 25378                           ; BSR set to: 1
 25379                           ;pomiar.c: 83: if(PmrtimFlt1<tm) return 0;
 25380  00B3FA  501E               	movf	PmrTim1@tm,w,c
 25381  00B3FC  61B6               	cpfslt	_PmrtimFlt1& (0+255),b
 25382  00B3FE  D002               	goto	l33036
 25383                           
 25384                           ; BSR set to: 1
 25385  00B400  90D8               	bcf	status,0,c
 25386  00B402  0012               	return	
 25387  00B404                     l33036:
 25388                           
 25389                           ; BSR set to: 1
 25390                           ;pomiar.c: 84: return 1;
 25391  00B404  80D8               	bsf	status,0,c
 25392                           
 25393                           ; BSR set to: 1
 25394  00B406  0012               	return	
 25395  00B408                     __end_of_PmrTim1:
 25396                           	opt stack 0
 25397                           tblptru	equ	0xFF8
 25398                           tblptrh	equ	0xFF7
 25399                           tblptrl	equ	0xFF6
 25400                           tablat	equ	0xFF5
 25401                           prodh	equ	0xFF4
 25402                           prodl	equ	0xFF3
 25403                           intcon	equ	0xFF2
 25404                           postinc0	equ	0xFEE
 25405                           wreg	equ	0xFE8
 25406                           indf1	equ	0xFE7
 25407                           postinc1	equ	0xFE6
 25408                           postdec1	equ	0xFE5
 25409                           fsr1h	equ	0xFE2
 25410                           fsr1l	equ	0xFE1
 25411                           indf2	equ	0xFDF
 25412                           postinc2	equ	0xFDE
 25413                           postdec2	equ	0xFDD
 25414                           fsr2h	equ	0xFDA
 25415                           fsr2l	equ	0xFD9
 25416                           status	equ	0xFD8
 25417                           
 25418 ;; *************** function _StartTim2 *****************
 25419 ;; Defined at:
 25420 ;;		line 89 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 25421 ;; Parameters:    Size  Location     Type
 25422 ;;		None
 25423 ;; Auto vars:     Size  Location     Type
 25424 ;;		None
 25425 ;; Return value:  Size  Location     Type
 25426 ;;		None               void
 25427 ;; Registers used:
 25428 ;;		None
 25429 ;; Tracked objects:
 25430 ;;		On entry : F/1
 25431 ;;		On exit  : F/1
 25432 ;;		Unchanged: FFFFFFF0/0
 25433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25438 ;;Total ram usage:        0 bytes
 25439 ;; Hardware stack levels used:    1
 25440 ;; Hardware stack levels required when called:    4
 25441 ;; This function calls:
 25442 ;;		Nothing
 25443 ;; This function is called by:
 25444 ;;		_FiltrPomiarowyCOCW
 25445 ;; This function uses a non-reentrant model
 25446 ;;
 25447                           
 25448                           	psect	text101
 25449  00B666                     __ptext101:
 25450                           	opt stack 0
 25451  00B666                     _StartTim2:
 25452                           	opt stack 25
 25453                           
 25454                           ; BSR set to: 1
 25455                           ;pomiar.c: 90: PmrtimFlt2=0;
 25456                           
 25457                           ; BSR set to: 1
 25458  00B666  6BB7               	clrf	_PmrtimFlt2& (0+255),b
 25459                           
 25460                           ; BSR set to: 1
 25461  00B668  0012               	return	
 25462  00B66A                     __end_of_StartTim2:
 25463                           	opt stack 0
 25464                           tblptru	equ	0xFF8
 25465                           tblptrh	equ	0xFF7
 25466                           tblptrl	equ	0xFF6
 25467                           tablat	equ	0xFF5
 25468                           prodh	equ	0xFF4
 25469                           prodl	equ	0xFF3
 25470                           intcon	equ	0xFF2
 25471                           postinc0	equ	0xFEE
 25472                           wreg	equ	0xFE8
 25473                           indf1	equ	0xFE7
 25474                           postinc1	equ	0xFE6
 25475                           postdec1	equ	0xFE5
 25476                           fsr1h	equ	0xFE2
 25477                           fsr1l	equ	0xFE1
 25478                           indf2	equ	0xFDF
 25479                           postinc2	equ	0xFDE
 25480                           postdec2	equ	0xFDD
 25481                           fsr2h	equ	0xFDA
 25482                           fsr2l	equ	0xFD9
 25483                           status	equ	0xFD8
 25484                           
 25485 ;; *************** function _PmrTim2 *****************
 25486 ;; Defined at:
 25487 ;;		line 93 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 25488 ;; Parameters:    Size  Location     Type
 25489 ;;  tm              1    wreg     unsigned char 
 25490 ;; Auto vars:     Size  Location     Type
 25491 ;;  tm              1   29[COMRAM] unsigned char 
 25492 ;; Return value:  Size  Location     Type
 25493 ;;		None               void
 25494 ;; Registers used:
 25495 ;;		wreg, status,2, status,0
 25496 ;; Tracked objects:
 25497 ;;		On entry : F/1
 25498 ;;		On exit  : F/1
 25499 ;;		Unchanged: FFFFFFF0/0
 25500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25505 ;;Total ram usage:        1 bytes
 25506 ;; Hardware stack levels used:    1
 25507 ;; Hardware stack levels required when called:    4
 25508 ;; This function calls:
 25509 ;;		Nothing
 25510 ;; This function is called by:
 25511 ;;		_FiltrPomiarowyCOCW
 25512 ;; This function uses a non-reentrant model
 25513 ;;
 25514                           
 25515                           	psect	text102
 25516  00B408                     __ptext102:
 25517                           	opt stack 0
 25518  00B408                     _PmrTim2:
 25519                           	opt stack 25
 25520                           
 25521                           ; BSR set to: 1
 25522                           ;PmrTim2@tm stored from wreg
 25523  00B408  CFE8 F01E          	movff	wreg,PmrTim2@tm
 25524                           
 25525                           ; BSR set to: 1
 25526                           ;pomiar.c: 94: if(PmrtimFlt2<tm) return 0;
 25527  00B40C  501E               	movf	PmrTim2@tm,w,c
 25528  00B40E  61B7               	cpfslt	_PmrtimFlt2& (0+255),b
 25529  00B410  D002               	goto	l33048
 25530                           
 25531                           ; BSR set to: 1
 25532  00B412  90D8               	bcf	status,0,c
 25533  00B414  0012               	return	
 25534  00B416                     l33048:
 25535                           
 25536                           ; BSR set to: 1
 25537                           ;pomiar.c: 95: return 1;
 25538  00B416  80D8               	bsf	status,0,c
 25539                           
 25540                           ; BSR set to: 1
 25541  00B418  0012               	return	
 25542  00B41A                     __end_of_PmrTim2:
 25543                           	opt stack 0
 25544                           tblptru	equ	0xFF8
 25545                           tblptrh	equ	0xFF7
 25546                           tblptrl	equ	0xFF6
 25547                           tablat	equ	0xFF5
 25548                           prodh	equ	0xFF4
 25549                           prodl	equ	0xFF3
 25550                           intcon	equ	0xFF2
 25551                           postinc0	equ	0xFEE
 25552                           wreg	equ	0xFE8
 25553                           indf1	equ	0xFE7
 25554                           postinc1	equ	0xFE6
 25555                           postdec1	equ	0xFE5
 25556                           fsr1h	equ	0xFE2
 25557                           fsr1l	equ	0xFE1
 25558                           indf2	equ	0xFDF
 25559                           postinc2	equ	0xFDE
 25560                           postdec2	equ	0xFDD
 25561                           fsr2h	equ	0xFDA
 25562                           fsr2l	equ	0xFD9
 25563                           status	equ	0xFD8
 25564                           
 25565 ;; *************** function _GoldenEye *****************
 25566 ;; Defined at:
 25567 ;;		line 111 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 25568 ;; Parameters:    Size  Location     Type
 25569 ;;		None
 25570 ;; Auto vars:     Size  Location     Type
 25571 ;;  dt              1   36[COMRAM] char 
 25572 ;;  pop             1   35[COMRAM] char 
 25573 ;; Return value:  Size  Location     Type
 25574 ;;		None               void
 25575 ;; Registers used:
 25576 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 25577 ;; Tracked objects:
 25578 ;;		On entry : F/1
 25579 ;;		On exit  : E/0
 25580 ;;		Unchanged: FFFFFFF0/0
 25581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25584 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25585 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25586 ;;Total ram usage:        7 bytes
 25587 ;; Hardware stack levels used:    1
 25588 ;; Hardware stack levels required when called:    5
 25589 ;; This function calls:
 25590 ;;		___wmul
 25591 ;; This function is called by:
 25592 ;;		_FiltrPomiarowyCOCW
 25593 ;; This function uses a non-reentrant model
 25594 ;;
 25595                           
 25596                           	psect	text103
 25597  003E98                     __ptext103:
 25598                           	opt stack 0
 25599  003E98                     _GoldenEye:
 25600                           	opt stack 24
 25601                           
 25602                           ; BSR set to: 1
 25603                           ;pomiar.c: 112: signed char dt;
 25604                           ;pomiar.c: 113: signed char pop;
 25605                           ;pomiar.c: 116: dt=DtCO.PPCO-DtCO.CO;
 25606                           
 25607                           ; BSR set to: 1
 25608  003E98  0100               	movlb	0	; () banked
 25609  003E9A  51E6               	movf	(_DtCO+2)& (0+255),w,b
 25610  003E9C  5DE8               	subwf	(_DtCO+4)& (0+255),w,b
 25611  003E9E  6E25               	movwf	GoldenEye@dt,c
 25612                           
 25613                           ;pomiar.c: 117: if((DtCO.CO>=(DtCO.PPCO+8))||(DtCO.CO<=(DtCO.PPCO-8))) DtCO.SCO=DtCO.CO;
 25614  003EA0  51E8               	movf	(_DtCO+4)& (0+255),w,b
 25615  003EA2  6FF3               	movwf	??_GoldenEye& (0+255),b
 25616  003EA4  6BF4               	clrf	(??_GoldenEye+1)& (0+255),b
 25617  003EA6  0E08               	movlw	8
 25618  003EA8  27F3               	addwf	??_GoldenEye& (0+255),f,b
 25619  003EAA  0E00               	movlw	0
 25620  003EAC  23F4               	addwfc	(??_GoldenEye+1)& (0+255),f,b
 25621  003EAE  51E6               	movf	(_DtCO+2)& (0+255),w,b
 25622  003EB0  6FF5               	movwf	(??_GoldenEye+2)& (0+255),b
 25623  003EB2  6BF6               	clrf	(??_GoldenEye+3)& (0+255),b
 25624  003EB4  D91E               	call	PL52	;call to abstracted procedure
 25625  003EB6  E20B               	bc	l1900
 25626                           
 25627                           ; BSR set to: 0
 25628  003EB8  51E6               	movf	(_DtCO+2)& (0+255),w,b
 25629  003EBA  6FF3               	movwf	??_GoldenEye& (0+255),b
 25630  003EBC  6BF4               	clrf	(??_GoldenEye+1)& (0+255),b
 25631  003EBE  0EF8               	movlw	248
 25632  003EC0  25E8               	addwf	(_DtCO+4)& (0+255),w,b
 25633  003EC2  6FF5               	movwf	(??_GoldenEye+2)& (0+255),b
 25634  003EC4  6BF6               	clrf	(??_GoldenEye+3)& (0+255),b
 25635  003EC6  0EFF               	movlw	255
 25636  003EC8  23F6               	addwfc	(??_GoldenEye+3)& (0+255),f,b
 25637  003ECA  D913               	call	PL52	;call to abstracted procedure
 25638  003ECC  E303               	bnc	l1898
 25639  003ECE                     l1900:
 25640                           
 25641                           ; BSR set to: 0
 25642  003ECE  C0E6  F0EF         	movff	_DtCO+2,_DtCO+11
 25643  003ED2  D047               	goto	l33084
 25644  003ED4                     l1898:
 25645                           
 25646                           ; BSR set to: 0
 25647                           ;pomiar.c: 118: else
 25648                           ;pomiar.c: 119: {
 25649                           ;pomiar.c: 120: if(dt>=0)
 25650  003ED4  BE25               	btfsc	GoldenEye@dt,7,c
 25651  003ED6  D01B               	goto	l33070
 25652                           
 25653                           ; BSR set to: 0
 25654                           ;pomiar.c: 121: {
 25655                           ;pomiar.c: 122: if(dt<1) pop=dt;
 25656  003ED8  5025               	movf	GoldenEye@dt,w,c
 25657  003EDA  0A80               	xorlw	128
 25658  003EDC  0F7F               	addlw	-129
 25659  003EDE  E203               	bc	l33060
 25660                           
 25661                           ; BSR set to: 0
 25662  003EE0  C025  F024         	movff	GoldenEye@dt,GoldenEye@pop
 25663  003EE4  D011               	goto	l1904
 25664  003EE6                     l33060:
 25665                           
 25666                           ; BSR set to: 0
 25667                           ;pomiar.c: 123: else
 25668                           ;pomiar.c: 124: if((dt>=1)&&(dt<=(8-1))) pop=1;
 25669  003EE6  5025               	movf	GoldenEye@dt,w,c
 25670  003EE8  0A80               	xorlw	128
 25671  003EEA  0F7F               	addlw	-129
 25672  003EEC  E306               	bnc	l33066
 25673                           
 25674                           ; BSR set to: 0
 25675  003EEE  5025               	movf	GoldenEye@dt,w,c
 25676  003EF0  0A80               	xorlw	128
 25677  003EF2  0F78               	addlw	-136
 25678  003EF4  E202               	bc	l33066
 25679                           
 25680                           ; BSR set to: 0
 25681  003EF6  0E01               	movlw	1
 25682  003EF8  D006               	goto	L53
 25683  003EFA                     l33066:
 25684                           
 25685                           ; BSR set to: 0
 25686                           ;pomiar.c: 125: else
 25687                           ;pomiar.c: 126: if(dt>(8-1)) pop=8-dt;
 25688  003EFA  5025               	movf	GoldenEye@dt,w,c
 25689  003EFC  0A80               	xorlw	128
 25690  003EFE  0F78               	addlw	-136
 25691  003F00  E303               	bnc	l1904
 25692                           
 25693                           ; BSR set to: 0
 25694  003F02  5025               	movf	GoldenEye@dt,w,c
 25695  003F04  0808               	sublw	8
 25696  003F06                     L53:
 25697  003F06  6E24               	movwf	GoldenEye@pop,c
 25698  003F08                     l1904:
 25699                           
 25700                           ; BSR set to: 0
 25701                           ;pomiar.c: 127: DtCO.SCO=DtCO.CO+pop;
 25702  003F08  51E6               	movf	(_DtCO+2)& (0+255),w,b
 25703  003F0A  2424               	addwf	GoldenEye@pop,w,c
 25704  003F0C  D029               	goto	L54
 25705  003F0E                     l33070:
 25706                           
 25707                           ; BSR set to: 0
 25708                           ;pomiar.c: 129: else
 25709                           ;pomiar.c: 130: {
 25710                           ;pomiar.c: 131: if(-1*dt<1) pop=1+dt;
 25711  003F0E  D8E0               	call	PL10	;call to abstracted procedure
 25712  003F10  EC9C  F056         	call	___wmul	;wreg free
 25713  003F14  D8E6               	call	PL28	;call to abstracted procedure
 25714  003F16  0E01               	movlw	1
 25715  003F18  B4D8               	btfsc	status,2,c
 25716  003F1A  5C1E               	subwf	?___wmul,w,c
 25717  003F1C  E202               	bc	l33074
 25718                           
 25719                           ; BSR set to: 0
 25720  003F1E  2825               	incf	GoldenEye@dt,w,c
 25721  003F20  D01C               	goto	L55
 25722  003F22                     l33074:
 25723                           
 25724                           ; BSR set to: 0
 25725                           ;pomiar.c: 132: else
 25726                           ;pomiar.c: 133: if((-1*dt>=1)&&(-1*dt<=(8-1))) pop=1;
 25727  003F22  D8D6               	call	PL10	;call to abstracted procedure
 25728  003F24  EC9C  F056         	call	___wmul	;wreg free
 25729  003F28  D8DC               	call	PL28	;call to abstracted procedure
 25730  003F2A  0E01               	movlw	1
 25731  003F2C  B4D8               	btfsc	status,2,c
 25732  003F2E  5C1E               	subwf	?___wmul,w,c
 25733  003F30  E30A               	bnc	l33080
 25734                           
 25735                           ; BSR set to: 0
 25736  003F32  D8CE               	call	PL10	;call to abstracted procedure
 25737  003F34  EC9C  F056         	call	___wmul	;wreg free
 25738  003F38  D8D4               	call	PL28	;call to abstracted procedure
 25739  003F3A  0E08               	movlw	8
 25740  003F3C  B4D8               	btfsc	status,2,c
 25741  003F3E  5C1E               	subwf	?___wmul,w,c
 25742  003F40  E202               	bc	l33080
 25743                           
 25744                           ; BSR set to: 0
 25745  003F42  0E01               	movlw	1
 25746  003F44  D00A               	goto	L55
 25747  003F46                     l33080:
 25748                           
 25749                           ; BSR set to: 0
 25750                           ;pomiar.c: 134: else
 25751                           ;pomiar.c: 135: if(-1*dt>(8-1)) pop=8+dt;
 25752  003F46  D8C4               	call	PL10	;call to abstracted procedure
 25753  003F48  EC9C  F056         	call	___wmul	;wreg free
 25754  003F4C  D8CA               	call	PL28	;call to abstracted procedure
 25755  003F4E  0E08               	movlw	8
 25756  003F50  B4D8               	btfsc	status,2,c
 25757  003F52  5C1E               	subwf	?___wmul,w,c
 25758  003F54  E303               	bnc	l1910
 25759                           
 25760                           ; BSR set to: 0
 25761  003F56  5025               	movf	GoldenEye@dt,w,c
 25762  003F58  0F08               	addlw	8
 25763  003F5A                     L55:
 25764  003F5A  6E24               	movwf	GoldenEye@pop,c
 25765  003F5C                     l1910:
 25766                           
 25767                           ; BSR set to: 0
 25768                           ;pomiar.c: 136: DtCO.SCO=DtCO.CO-pop;
 25769  003F5C  5024               	movf	GoldenEye@pop,w,c
 25770  003F5E  5DE6               	subwf	(_DtCO+2)& (0+255),w,b
 25771  003F60                     L54:
 25772  003F60  6FEF               	movwf	(_DtCO+11)& (0+255),b
 25773  003F62                     l33084:
 25774                           
 25775                           ; BSR set to: 0
 25776                           ;pomiar.c: 137: }
 25777                           ;pomiar.c: 138: }
 25778                           ;pomiar.c: 139: PFN.CO=DtCO.SCO;
 25779  003F62  C0EF  F1C3         	movff	_DtCO+11,_PFN+9
 25780                           
 25781                           ; BSR set to: 0
 25782                           ;pomiar.c: 142: if(DtKNF.tpkt!=0)
 25783  003F66  0101               	movlb	1	; () banked
 25784  003F68  5151               	movf	(_DtKNF+7)& (0+255),w,b
 25785  003F6A  E012               	bz	l1918
 25786                           
 25787                           ; BSR set to: 1
 25788                           ;pomiar.c: 143: {
 25789                           ;pomiar.c: 144: if(DtKNF.tpkt==1)
 25790  003F6C  0551               	decf	(_DtKNF+7)& (0+255),w,b
 25791  003F6E  E15E               	bnz	l33122
 25792                           
 25793                           ; BSR set to: 1
 25794                           ;pomiar.c: 145: {
 25795                           ;pomiar.c: 146: dt=DtCW.PPCW-DtCW.CW;
 25796                           
 25797                           ;pomiar.c: 147: if((DtCW.CW>=(DtCW.PPCW+11))||(DtCW.CW<=(DtCW.PPCW-11))) DtCW.SCW=DtCW.C
      +                          W;
 25798  003F70  D8C9               	call	PL188	;call to abstracted procedure
 25799  003F72  0E0B               	movlw	11
 25800  003F74  D8CF               	call	PL246	;call to abstracted procedure
 25801  003F76  D8BD               	call	PL52	;call to abstracted procedure
 25802  003F78  E20B               	bc	l1918
 25803                           
 25804                           ; BSR set to: 0
 25805  003F7A  51D1               	movf	(_DtCW+2)& (0+255),w,b
 25806  003F7C  6FF3               	movwf	??_GoldenEye& (0+255),b
 25807  003F7E  6BF4               	clrf	(??_GoldenEye+1)& (0+255),b
 25808  003F80  0EF5               	movlw	245
 25809  003F82  25D3               	addwf	(_DtCW+4)& (0+255),w,b
 25810  003F84  6FF5               	movwf	(??_GoldenEye+2)& (0+255),b
 25811  003F86  6BF6               	clrf	(??_GoldenEye+3)& (0+255),b
 25812  003F88  0EFF               	movlw	255
 25813  003F8A  23F6               	addwfc	(??_GoldenEye+3)& (0+255),f,b
 25814  003F8C  D8B2               	call	PL52	;call to abstracted procedure
 25815  003F8E  E303               	bnc	l1916
 25816  003F90                     l1918:
 25817  003F90  C0D1  F0DA         	movff	_DtCW+2,_DtCW+11
 25818  003F94  D09A               	goto	l1949
 25819  003F96                     l1916:
 25820                           
 25821                           ; BSR set to: 0
 25822                           ;pomiar.c: 148: else
 25823                           ;pomiar.c: 149: {
 25824                           ;pomiar.c: 150: if(dt>=0)
 25825  003F96  BE25               	btfsc	GoldenEye@dt,7,c
 25826  003F98  D01B               	goto	l33108
 25827                           
 25828                           ; BSR set to: 0
 25829                           ;pomiar.c: 151: {
 25830                           ;pomiar.c: 152: if(dt<3) pop=dt;
 25831  003F9A  5025               	movf	GoldenEye@dt,w,c
 25832  003F9C  0A80               	xorlw	128
 25833  003F9E  0F7D               	addlw	-131
 25834  003FA0  E203               	bc	l33098
 25835  003FA2                     l33096:
 25836                           
 25837                           ; BSR set to: 0
 25838  003FA2  C025  F024         	movff	GoldenEye@dt,GoldenEye@pop
 25839  003FA6  D011               	goto	l1922
 25840  003FA8                     l33098:
 25841                           
 25842                           ; BSR set to: 0
 25843                           ;pomiar.c: 153: else
 25844                           ;pomiar.c: 154: if((dt>=3)&&(dt<=(11-3))) pop=3;
 25845  003FA8  5025               	movf	GoldenEye@dt,w,c
 25846  003FAA  0A80               	xorlw	128
 25847  003FAC  0F7D               	addlw	-131
 25848  003FAE  E306               	bnc	l33104
 25849                           
 25850                           ; BSR set to: 0
 25851  003FB0  5025               	movf	GoldenEye@dt,w,c
 25852  003FB2  0A80               	xorlw	128
 25853  003FB4  0F77               	addlw	-137
 25854  003FB6  E202               	bc	l33104
 25855                           
 25856                           ; BSR set to: 0
 25857  003FB8  0E03               	movlw	3
 25858  003FBA  D006               	goto	L56
 25859  003FBC                     l33104:
 25860                           
 25861                           ; BSR set to: 0
 25862                           ;pomiar.c: 155: else
 25863                           ;pomiar.c: 156: if(dt>(11-3)) pop=11-dt;
 25864  003FBC  5025               	movf	GoldenEye@dt,w,c
 25865  003FBE  0A80               	xorlw	128
 25866  003FC0  0F77               	addlw	-137
 25867  003FC2  E303               	bnc	l1922
 25868                           
 25869                           ; BSR set to: 0
 25870  003FC4  5025               	movf	GoldenEye@dt,w,c
 25871  003FC6  080B               	sublw	11
 25872  003FC8                     L56:
 25873  003FC8  6E24               	movwf	GoldenEye@pop,c
 25874  003FCA                     l1922:
 25875                           
 25876                           ; BSR set to: 0
 25877                           ;pomiar.c: 157: DtCW.SCW=DtCW.CW+pop;
 25878  003FCA  51D1               	movf	(_DtCW+2)& (0+255),w,b
 25879  003FCC  2424               	addwf	GoldenEye@pop,w,c
 25880  003FCE  D02C               	goto	L57
 25881  003FD0                     l33108:
 25882                           
 25883                           ; BSR set to: 0
 25884                           ;pomiar.c: 159: else
 25885                           ;pomiar.c: 160: {
 25886                           ;pomiar.c: 161: if((-1*dt)<3) pop=(-1*dt);
 25887  003FD0  D87F               	call	PL10	;call to abstracted procedure
 25888  003FD2  EC9C  F056         	call	___wmul	;wreg free
 25889  003FD6  D885               	call	PL28	;call to abstracted procedure
 25890  003FD8  0E03               	movlw	3
 25891  003FDA  B4D8               	btfsc	status,2,c
 25892  003FDC  5C1E               	subwf	?___wmul,w,c
 25893  003FDE  E205               	bc	l33112
 25894                           
 25895                           ; BSR set to: 0
 25896  003FE0  5025               	movf	GoldenEye@dt,w,c
 25897  003FE2  0D01               	mullw	1
 25898  003FE4  50F3               	movf	prodl,w,c
 25899  003FE6  0800               	sublw	0
 25900  003FE8  D01C               	goto	L58
 25901  003FEA                     l33112:
 25902                           
 25903                           ; BSR set to: 0
 25904                           ;pomiar.c: 162: else
 25905                           ;pomiar.c: 163: if(((-1*dt)>=3)&&((-1*dt)<=(11-3))) pop=3;
 25906  003FEA  D872               	call	PL10	;call to abstracted procedure
 25907  003FEC  EC9C  F056         	call	___wmul	;wreg free
 25908  003FF0  D878               	call	PL28	;call to abstracted procedure
 25909  003FF2  0E03               	movlw	3
 25910  003FF4  B4D8               	btfsc	status,2,c
 25911  003FF6  5C1E               	subwf	?___wmul,w,c
 25912  003FF8  E30A               	bnc	l33118
 25913                           
 25914                           ; BSR set to: 0
 25915  003FFA  D86A               	call	PL10	;call to abstracted procedure
 25916  003FFC  EC9C  F056         	call	___wmul	;wreg free
 25917  004000  D870               	call	PL28	;call to abstracted procedure
 25918  004002  0E09               	movlw	9
 25919  004004  B4D8               	btfsc	status,2,c
 25920  004006  5C1E               	subwf	?___wmul,w,c
 25921  004008  E202               	bc	l33118
 25922                           
 25923                           ; BSR set to: 0
 25924  00400A  0E03               	movlw	3
 25925  00400C  D00A               	goto	L58
 25926  00400E                     l33118:
 25927                           
 25928                           ; BSR set to: 0
 25929                           ;pomiar.c: 164: else
 25930                           ;pomiar.c: 165: if((-1*dt)>(11-3)) pop=11+dt;
 25931  00400E  D860               	call	PL10	;call to abstracted procedure
 25932  004010  EC9C  F056         	call	___wmul	;wreg free
 25933  004014  D866               	call	PL28	;call to abstracted procedure
 25934  004016  0E09               	movlw	9
 25935  004018  B4D8               	btfsc	status,2,c
 25936  00401A  5C1E               	subwf	?___wmul,w,c
 25937  00401C  E303               	bnc	l1928
 25938                           
 25939                           ; BSR set to: 0
 25940  00401E  5025               	movf	GoldenEye@dt,w,c
 25941  004020  0F0B               	addlw	11
 25942  004022                     L58:
 25943  004022  6E24               	movwf	GoldenEye@pop,c
 25944  004024                     l1928:
 25945                           
 25946                           ; BSR set to: 0
 25947                           ;pomiar.c: 166: DtCW.SCW=DtCW.CW-pop;
 25948  004024  5024               	movf	GoldenEye@pop,w,c
 25949  004026  5DD1               	subwf	(_DtCW+2)& (0+255),w,b
 25950  004028                     L57:
 25951  004028  6FDA               	movwf	(_DtCW+11)& (0+255),b
 25952  00402A  D04F               	goto	l1949
 25953  00402C                     l33122:
 25954                           
 25955                           ; BSR set to: 1
 25956                           ;pomiar.c: 170: else
 25957                           ;pomiar.c: 171: {
 25958                           ;pomiar.c: 172: dt=DtCW.PPCW-DtCW.CW;
 25959                           
 25960                           ;pomiar.c: 173: if((DtCW.CW>=(DtCW.PPCW+8))||(DtCW.CW<=(DtCW.PPCW-8))) DtCW.SCW=DtCW.CW;
 25961  00402C  D86B               	call	PL188	;call to abstracted procedure
 25962  00402E  0E08               	movlw	8
 25963  004030  D871               	call	PL246	;call to abstracted procedure
 25964  004032  D85F               	call	PL52	;call to abstracted procedure
 25965  004034  E2AD               	bc	l1918
 25966                           
 25967                           ; BSR set to: 0
 25968  004036  51D1               	movf	(_DtCW+2)& (0+255),w,b
 25969  004038  6FF3               	movwf	??_GoldenEye& (0+255),b
 25970  00403A  6BF4               	clrf	(??_GoldenEye+1)& (0+255),b
 25971  00403C  0EF8               	movlw	248
 25972  00403E  25D3               	addwf	(_DtCW+4)& (0+255),w,b
 25973  004040  6FF5               	movwf	(??_GoldenEye+2)& (0+255),b
 25974  004042  6BF6               	clrf	(??_GoldenEye+3)& (0+255),b
 25975  004044  0EFF               	movlw	255
 25976  004046  23F6               	addwfc	(??_GoldenEye+3)& (0+255),f,b
 25977  004048  D854               	call	PL52	;call to abstracted procedure
 25978  00404A  E2A2               	bc	l1918
 25979                           
 25980                           ; BSR set to: 0
 25981                           ;pomiar.c: 174: else
 25982                           ;pomiar.c: 175: {
 25983                           ;pomiar.c: 176: if(dt>=0)
 25984  00404C  BE25               	btfsc	GoldenEye@dt,7,c
 25985  00404E  D015               	goto	l33140
 25986                           
 25987                           ; BSR set to: 0
 25988                           ;pomiar.c: 177: {
 25989                           ;pomiar.c: 178: if(dt<2) pop=dt;
 25990  004050  5025               	movf	GoldenEye@dt,w,c
 25991  004052  0A80               	xorlw	128
 25992  004054  0F7E               	addlw	-130
 25993  004056  E3A5               	bnc	l33096
 25994                           
 25995                           ; BSR set to: 0
 25996                           ;pomiar.c: 179: else
 25997                           ;pomiar.c: 180: if((dt>=2)&&(dt<=(8-2))) pop=2;
 25998  004058  5025               	movf	GoldenEye@dt,w,c
 25999  00405A  0A80               	xorlw	128
 26000  00405C  0F7E               	addlw	-130
 26001  00405E  E306               	bnc	l33136
 26002                           
 26003                           ; BSR set to: 0
 26004  004060  5025               	movf	GoldenEye@dt,w,c
 26005  004062  0A80               	xorlw	128
 26006  004064  0F79               	addlw	-135
 26007  004066  E202               	bc	l33136
 26008                           
 26009                           ; BSR set to: 0
 26010  004068  0E02               	movlw	2
 26011  00406A  D7AE               	goto	L56
 26012  00406C                     l33136:
 26013                           
 26014                           ; BSR set to: 0
 26015                           ;pomiar.c: 181: else
 26016                           ;pomiar.c: 182: if(dt>(8-2)) pop=8-dt;
 26017  00406C  5025               	movf	GoldenEye@dt,w,c
 26018  00406E  0A80               	xorlw	128
 26019  004070  0F79               	addlw	-135
 26020  004072  E3AB               	bnc	l1922
 26021                           
 26022                           ; BSR set to: 0
 26023  004074  5025               	movf	GoldenEye@dt,w,c
 26024  004076  0808               	sublw	8
 26025  004078  D7A7               	goto	L56
 26026  00407A                     l33140:
 26027                           
 26028                           ; BSR set to: 0
 26029                           ;pomiar.c: 185: else
 26030                           ;pomiar.c: 186: {
 26031                           ;pomiar.c: 187: if(-1*dt<2) pop=2+dt;
 26032  00407A  D82A               	call	PL10	;call to abstracted procedure
 26033  00407C  EC9C  F056         	call	___wmul	;wreg free
 26034  004080  D830               	call	PL28	;call to abstracted procedure
 26035  004082  0E02               	movlw	2
 26036  004084  B4D8               	btfsc	status,2,c
 26037  004086  5C1E               	subwf	?___wmul,w,c
 26038  004088  E203               	bc	l33144
 26039                           
 26040                           ; BSR set to: 0
 26041  00408A  5025               	movf	GoldenEye@dt,w,c
 26042  00408C  0F02               	addlw	2
 26043  00408E  D7C9               	goto	L58
 26044  004090                     l33144:
 26045                           
 26046                           ; BSR set to: 0
 26047                           ;pomiar.c: 188: else
 26048                           ;pomiar.c: 189: if((-1*dt>=2)&&(-1*dt<=(8-2))) pop=2;
 26049  004090  D81F               	call	PL10	;call to abstracted procedure
 26050  004092  EC9C  F056         	call	___wmul	;wreg free
 26051  004096  D825               	call	PL28	;call to abstracted procedure
 26052  004098  0E02               	movlw	2
 26053  00409A  B4D8               	btfsc	status,2,c
 26054  00409C  5C1E               	subwf	?___wmul,w,c
 26055  00409E  E30A               	bnc	l33150
 26056                           
 26057                           ; BSR set to: 0
 26058  0040A0  D817               	call	PL10	;call to abstracted procedure
 26059  0040A2  EC9C  F056         	call	___wmul	;wreg free
 26060  0040A6  D81D               	call	PL28	;call to abstracted procedure
 26061  0040A8  0E07               	movlw	7
 26062  0040AA  B4D8               	btfsc	status,2,c
 26063  0040AC  5C1E               	subwf	?___wmul,w,c
 26064  0040AE  E202               	bc	l33150
 26065                           
 26066                           ; BSR set to: 0
 26067  0040B0  0E02               	movlw	2
 26068  0040B2  D7B7               	goto	L58
 26069  0040B4                     l33150:
 26070                           
 26071                           ; BSR set to: 0
 26072                           ;pomiar.c: 190: else
 26073                           ;pomiar.c: 191: if(-1*dt>(8-2)) pop=8+dt;
 26074  0040B4  D80D               	call	PL10	;call to abstracted procedure
 26075  0040B6  EC9C  F056         	call	___wmul	;wreg free
 26076  0040BA  D813               	call	PL28	;call to abstracted procedure
 26077  0040BC  0E07               	movlw	7
 26078  0040BE  B4D8               	btfsc	status,2,c
 26079  0040C0  5C1E               	subwf	?___wmul,w,c
 26080  0040C2  E3B0               	bnc	l1928
 26081                           
 26082                           ; BSR set to: 0
 26083  0040C4  5025               	movf	GoldenEye@dt,w,c
 26084  0040C6  0F08               	addlw	8
 26085  0040C8  D7AC               	goto	L58
 26086  0040CA                     l1949:
 26087                           
 26088                           ;pomiar.c: 198: PFN.CW=DtCW.SCW;
 26089  0040CA  C0DA  F1C4         	movff	_DtCW+11,_PFN+10
 26090  0040CE  0012               	return	
 26091  0040D0                     __end_of_GoldenEye:
 26092                           	opt stack 0
 26093  0040D0                     PL10:
 26094                           	opt stack 24
 26095  0040D0  5025               	movf	GoldenEye@dt,w,c
 26096  0040D2  6E1E               	movwf	?___wmul,c
 26097  0040D4  6A1F               	clrf	?___wmul+1,c
 26098  0040D6  BE1E               	btfsc	?___wmul,7,c
 26099  0040D8  061F               	decf	?___wmul+1,f,c
 26100  0040DA  6A21               	clrf	?___wmul+3,c
 26101  0040DC  0E01               	movlw	1
 26102  0040DE  6E20               	movwf	?___wmul+2,c
 26103  0040E0  0C01               	retlw	1
 26104  0040E2                     __end_ofPL10:
 26105                           	opt stack 0
 26106  0040E2                     PL28:
 26107                           	opt stack 24
 26108  0040E2  1E1E               	comf	?___wmul,f,c
 26109  0040E4  1E1F               	comf	?___wmul+1,f,c
 26110  0040E6  4A1E               	infsnz	?___wmul,f,c
 26111  0040E8  2A1F               	incf	?___wmul+1,f,c
 26112  0040EA  501F               	movf	?___wmul+1,w,c
 26113  0040EC  0A80               	xorlw	128
 26114  0040EE  0F80               	addlw	-128
 26115  0040F0  0012               	return	
 26116  0040F2                     __end_ofPL28:
 26117                           	opt stack 0
 26118  0040F2                     PL52:
 26119                           	opt stack 24
 26120  0040F2  51F6               	movf	(??_GoldenEye+3)& (0+255),w,b
 26121  0040F4  0A80               	xorlw	128
 26122  0040F6  6FF7               	movwf	(??_GoldenEye+4)& (0+255),b
 26123  0040F8  51F3               	movf	??_GoldenEye& (0+255),w,b
 26124  0040FA  5DF5               	subwf	(??_GoldenEye+2)& (0+255),w,b
 26125  0040FC  51F4               	movf	(??_GoldenEye+1)& (0+255),w,b
 26126  0040FE  0A80               	xorlw	128
 26127  004100  59F7               	subwfb	(??_GoldenEye+4)& (0+255),w,b
 26128  004102  0012               	return	
 26129  004104                     __end_ofPL52:
 26130                           	opt stack 0
 26131  004104                     PL188:
 26132                           	opt stack 24
 26133  004104  0100               	movlb	0	; () banked
 26134  004106  51D1               	movf	(_DtCW+2)& (0+255),w,b
 26135  004108  5DD3               	subwf	(_DtCW+4)& (0+255),w,b
 26136  00410A  6E25               	movwf	GoldenEye@dt,c
 26137  00410C  51D3               	movf	(_DtCW+4)& (0+255),w,b
 26138  00410E  6FF3               	movwf	??_GoldenEye& (0+255),b
 26139  004110  6BF4               	clrf	(??_GoldenEye+1)& (0+255),b
 26140  004112  0012               	return	
 26141  004114                     __end_ofPL188:
 26142                           	opt stack 0
 26143  004114                     PL246:
 26144                           	opt stack 24
 26145  004114  27F3               	addwf	??_GoldenEye& (0+255),f,b
 26146  004116  0E00               	movlw	0
 26147  004118  23F4               	addwfc	(??_GoldenEye+1)& (0+255),f,b
 26148  00411A  51D1               	movf	(_DtCW+2)& (0+255),w,b
 26149  00411C  6FF5               	movwf	(??_GoldenEye+2)& (0+255),b
 26150  00411E  6BF6               	clrf	(??_GoldenEye+3)& (0+255),b
 26151  004120  0012               	return	
 26152  004122                     __end_ofPL246:
 26153                           	opt stack 0
 26154                           tblptru	equ	0xFF8
 26155                           tblptrh	equ	0xFF7
 26156                           tblptrl	equ	0xFF6
 26157                           tablat	equ	0xFF5
 26158                           prodh	equ	0xFF4
 26159                           prodl	equ	0xFF3
 26160                           intcon	equ	0xFF2
 26161                           postinc0	equ	0xFEE
 26162                           wreg	equ	0xFE8
 26163                           indf1	equ	0xFE7
 26164                           postinc1	equ	0xFE6
 26165                           postdec1	equ	0xFE5
 26166                           fsr1h	equ	0xFE2
 26167                           fsr1l	equ	0xFE1
 26168                           indf2	equ	0xFDF
 26169                           postinc2	equ	0xFDE
 26170                           postdec2	equ	0xFDD
 26171                           fsr2h	equ	0xFDA
 26172                           fsr2l	equ	0xFD9
 26173                           status	equ	0xFD8
 26174                           
 26175 ;; *************** function _FltParMod *****************
 26176 ;; Defined at:
 26177 ;;		line 234 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 26178 ;; Parameters:    Size  Location     Type
 26179 ;;		None
 26180 ;; Auto vars:     Size  Location     Type
 26181 ;;  wr              1   31[COMRAM] unsigned char 
 26182 ;; Return value:  Size  Location     Type
 26183 ;;		None               void
 26184 ;; Registers used:
 26185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 26186 ;; Tracked objects:
 26187 ;;		On entry : F/1
 26188 ;;		On exit  : E/0
 26189 ;;		Unchanged: FFFFFFF0/0
 26190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26194 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26195 ;;Total ram usage:        1 bytes
 26196 ;; Hardware stack levels used:    1
 26197 ;; Hardware stack levels required when called:    5
 26198 ;; This function calls:
 26199 ;;		_PredkoscZmianCW
 26200 ;; This function is called by:
 26201 ;;		_FiltrPomiarowyCOCW
 26202 ;; This function uses a non-reentrant model
 26203 ;;
 26204                           
 26205                           	psect	text104
 26206  008EBE                     __ptext104:
 26207                           	opt stack 0
 26208  008EBE                     _FltParMod:
 26209                           	opt stack 24
 26210                           
 26211                           ; BSR set to: 1
 26212                           ;pomiar.c: 235: static unsigned char indtm,fco,fcw;
 26213                           ;pomiar.c: 236: unsigned char wr;
 26214                           ;pomiar.c: 241: if(DtCO.CO>fco) wr=DtCO.CO-fco;
 26215  008EBE  0100               	movlb	0	; () banked
 26216  008EC0  51E6               	movf	(_DtCO+2)& (0+255),w,b
 26217  008EC2  61DE               	cpfslt	FltParMod@fco& (0+255),b
 26218  008EC4  D003               	goto	l33210
 26219                           
 26220                           ; BSR set to: 0
 26221  008EC6  51DE               	movf	FltParMod@fco& (0+255),w,b
 26222  008EC8  5DE6               	subwf	(_DtCO+2)& (0+255),w,b
 26223  008ECA  D002               	goto	L59
 26224  008ECC                     l33210:
 26225                           
 26226                           ; BSR set to: 0
 26227                           ;pomiar.c: 242: else wr=fco-DtCO.CO;
 26228  008ECC  51E6               	movf	(_DtCO+2)& (0+255),w,b
 26229  008ECE  5DDE               	subwf	FltParMod@fco& (0+255),w,b
 26230  008ED0                     L59:
 26231  008ED0  6E20               	movwf	FltParMod@wr,c
 26232                           
 26233                           ; BSR set to: 0
 26234                           ;pomiar.c: 243: if(wr) DtCO.indCO++;
 26235  008ED2  5020               	movf	FltParMod@wr,w,c
 26236  008ED4  A4D8               	btfss	status,2,c
 26237                           
 26238                           ; BSR set to: 0
 26239  008ED6  2BEE               	incf	(_DtCO+10)& (0+255),f,b
 26240                           
 26241                           ; BSR set to: 0
 26242                           ;pomiar.c: 244: if(wr>=2) DtCO.indCO=10;
 26243  008ED8  0E01               	movlw	1
 26244  008EDA  6420               	cpfsgt	FltParMod@wr,c
 26245  008EDC  D002               	goto	l1979
 26246                           
 26247                           ; BSR set to: 0
 26248  008EDE  0E0A               	movlw	10
 26249  008EE0  6FEE               	movwf	(_DtCO+10)& (0+255),b
 26250  008EE2                     l1979:
 26251                           
 26252                           ; BSR set to: 0
 26253                           ;pomiar.c: 246: if(DtCW.CW>fcw) wr=DtCW.CW-fcw;
 26254  008EE2  51D1               	movf	(_DtCW+2)& (0+255),w,b
 26255  008EE4  61DF               	cpfslt	FltParMod@fcw& (0+255),b
 26256  008EE6  D003               	goto	l33222
 26257                           
 26258                           ; BSR set to: 0
 26259  008EE8  51DF               	movf	FltParMod@fcw& (0+255),w,b
 26260  008EEA  5DD1               	subwf	(_DtCW+2)& (0+255),w,b
 26261  008EEC  D002               	goto	L60
 26262  008EEE                     l33222:
 26263                           
 26264                           ; BSR set to: 0
 26265                           ;pomiar.c: 247: else wr=fcw-DtCW.CW;
 26266  008EEE  51D1               	movf	(_DtCW+2)& (0+255),w,b
 26267  008EF0  5DDF               	subwf	FltParMod@fcw& (0+255),w,b
 26268  008EF2                     L60:
 26269  008EF2  6E20               	movwf	FltParMod@wr,c
 26270                           
 26271                           ; BSR set to: 0
 26272                           ;pomiar.c: 248: if(wr) DtCW.indCW++;
 26273  008EF4  5020               	movf	FltParMod@wr,w,c
 26274  008EF6  A4D8               	btfss	status,2,c
 26275                           
 26276                           ; BSR set to: 0
 26277  008EF8  2BD9               	incf	(_DtCW+10)& (0+255),f,b
 26278                           
 26279                           ; BSR set to: 0
 26280                           ;pomiar.c: 249: if(wr>=2) DtCW.indCW=10;
 26281  008EFA  0E01               	movlw	1
 26282  008EFC  6420               	cpfsgt	FltParMod@wr,c
 26283  008EFE  D002               	goto	l33232
 26284                           
 26285                           ; BSR set to: 0
 26286  008F00  0E0A               	movlw	10
 26287  008F02  6FD9               	movwf	(_DtCW+10)& (0+255),b
 26288  008F04                     l33232:
 26289                           
 26290                           ; BSR set to: 0
 26291                           ;pomiar.c: 250: PredkoscZmianCW();
 26292  008F04  ECC8  F046         	call	_PredkoscZmianCW	;wreg free
 26293                           
 26294                           ; BSR set to: 2
 26295                           ;pomiar.c: 253: indtm++;
 26296  008F08  0101               	movlb	1	; () banked
 26297  008F0A  2B94               	incf	FltParMod@indtm& (0+255),f,b
 26298                           
 26299                           ; BSR set to: 1
 26300                           ;pomiar.c: 254: if(indtm>9)
 26301  008F0C  0E09               	movlw	9
 26302  008F0E  6594               	cpfsgt	FltParMod@indtm& (0+255),b
 26303  008F10  0C09               	retlw	9
 26304                           
 26305                           ; BSR set to: 1
 26306                           ;pomiar.c: 255: {
 26307                           ;pomiar.c: 256: indtm=0;
 26308  008F12  6B94               	clrf	FltParMod@indtm& (0+255),b
 26309                           
 26310                           ;pomiar.c: 258: DtZW.SZW=DtZW.ZW;
 26311  008F14  C183  F184         	movff	_DtZW+2,_DtZW+3
 26312                           
 26313                           ; BSR set to: 1
 26314                           ;pomiar.c: 261: if(DtCO.indCO<=7) DtCO.dDCO=0;
 26315  008F18  0E08               	movlw	8
 26316  008F1A  0100               	movlb	0	; () banked
 26317  008F1C  61EE               	cpfslt	(_DtCO+10)& (0+255),b
 26318  008F1E  D002               	goto	l33244
 26319                           
 26320                           ; BSR set to: 0
 26321  008F20  6BED               	clrf	(_DtCO+9)& (0+255),b
 26322  008F22  D005               	goto	l33248
 26323  008F24                     l33244:
 26324                           
 26325                           ; BSR set to: 0
 26326                           ;pomiar.c: 262: else
 26327                           ;pomiar.c: 263: {
 26328                           ;pomiar.c: 264: DtCO.dDCO=DtCO.CO-fco;
 26329  008F24  51DE               	movf	FltParMod@fco& (0+255),w,b
 26330  008F26  5DE6               	subwf	(_DtCO+2)& (0+255),w,b
 26331  008F28  6FED               	movwf	(_DtCO+9)& (0+255),b
 26332                           
 26333                           ; BSR set to: 0
 26334                           ;pomiar.c: 265: fco=DtCO.CO;
 26335  008F2A  C0E6  F0DE         	movff	_DtCO+2,FltParMod@fco
 26336  008F2E                     l33248:
 26337                           
 26338                           ; BSR set to: 0
 26339                           ;pomiar.c: 266: }
 26340                           ;pomiar.c: 267: DtCO.indCO=0;
 26341  008F2E  6BEE               	clrf	(_DtCO+10)& (0+255),b
 26342                           
 26343                           ; BSR set to: 0
 26344                           ;pomiar.c: 269: if(DtCW.indCW<=7)
 26345  008F30  0E08               	movlw	8
 26346  008F32  61D9               	cpfslt	(_DtCW+10)& (0+255),b
 26347  008F34  D003               	goto	l33254
 26348                           
 26349                           ; BSR set to: 0
 26350                           ;pomiar.c: 270: {
 26351                           ;pomiar.c: 271: DtCW.dDCW=0;
 26352  008F36  6BD7               	clrf	(_DtCW+8)& (0+255),b
 26353                           
 26354                           ;pomiar.c: 272: DtCW._fpCW=1;
 26355  008F38  85D0               	bsf	(_DtCW+1)& (0+255),2,b
 26356                           
 26357                           ;pomiar.c: 273: }
 26358  008F3A  D006               	goto	l33260
 26359  008F3C                     l33254:
 26360                           
 26361                           ; BSR set to: 0
 26362                           ;pomiar.c: 274: else
 26363                           ;pomiar.c: 275: {
 26364                           ;pomiar.c: 276: DtCW.dDCW=DtCW.CW-fcw;
 26365  008F3C  51DF               	movf	FltParMod@fcw& (0+255),w,b
 26366  008F3E  5DD1               	subwf	(_DtCW+2)& (0+255),w,b
 26367  008F40  6FD7               	movwf	(_DtCW+8)& (0+255),b
 26368                           
 26369                           ; BSR set to: 0
 26370                           ;pomiar.c: 277: DtCW._fpCW=1;
 26371  008F42  85D0               	bsf	(_DtCW+1)& (0+255),2,b
 26372                           
 26373                           ; BSR set to: 0
 26374                           ;pomiar.c: 278: fcw=DtCW.CW;
 26375  008F44  C0D1  F0DF         	movff	_DtCW+2,FltParMod@fcw
 26376  008F48                     l33260:
 26377                           
 26378                           ; BSR set to: 0
 26379                           ;pomiar.c: 279: }
 26380                           ;pomiar.c: 280: DtCW.indCW=0;
 26381  008F48  6BD9               	clrf	(_DtCW+10)& (0+255),b
 26382  008F4A  0012               	return	
 26383  008F4C                     __end_of_FltParMod:
 26384                           	opt stack 0
 26385                           tblptru	equ	0xFF8
 26386                           tblptrh	equ	0xFF7
 26387                           tblptrl	equ	0xFF6
 26388                           tablat	equ	0xFF5
 26389                           prodh	equ	0xFF4
 26390                           prodl	equ	0xFF3
 26391                           intcon	equ	0xFF2
 26392                           postinc0	equ	0xFEE
 26393                           wreg	equ	0xFE8
 26394                           indf1	equ	0xFE7
 26395                           postinc1	equ	0xFE6
 26396                           postdec1	equ	0xFE5
 26397                           fsr1h	equ	0xFE2
 26398                           fsr1l	equ	0xFE1
 26399                           indf2	equ	0xFDF
 26400                           postinc2	equ	0xFDE
 26401                           postdec2	equ	0xFDD
 26402                           fsr2h	equ	0xFDA
 26403                           fsr2l	equ	0xFD9
 26404                           status	equ	0xFD8
 26405                           
 26406 ;; *************** function _PredkoscZmianCW *****************
 26407 ;; Defined at:
 26408 ;;		line 203 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 26409 ;; Parameters:    Size  Location     Type
 26410 ;;		None
 26411 ;; Auto vars:     Size  Location     Type
 26412 ;;  i               1   30[COMRAM] unsigned char 
 26413 ;;  w               1   29[COMRAM] unsigned char 
 26414 ;; Return value:  Size  Location     Type
 26415 ;;		None               void
 26416 ;; Registers used:
 26417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26418 ;; Tracked objects:
 26419 ;;		On entry : F/0
 26420 ;;		On exit  : F/2
 26421 ;;		Unchanged: FFFFFFF0/0
 26422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26427 ;;Total ram usage:        2 bytes
 26428 ;; Hardware stack levels used:    1
 26429 ;; Hardware stack levels required when called:    4
 26430 ;; This function calls:
 26431 ;;		Nothing
 26432 ;; This function is called by:
 26433 ;;		_FltParMod
 26434 ;; This function uses a non-reentrant model
 26435 ;;
 26436                           
 26437                           	psect	text105
 26438  008D90                     __ptext105:
 26439                           	opt stack 0
 26440  008D90                     _PredkoscZmianCW:
 26441                           	opt stack 24
 26442                           
 26443                           ; BSR set to: 0
 26444                           ;pomiar.c: 204: static unsigned char ffcw,indff;
 26445                           ;pomiar.c: 205: unsigned char i,w;
 26446                           ;pomiar.c: 207: if(!M._PRACA)
 26447  008D90  B57B               	btfsc	(_M+27)& (0+255),2,b
 26448  008D92  D005               	goto	l1957
 26449                           
 26450                           ; BSR set to: 0
 26451                           ;pomiar.c: 208: {
 26452                           ;pomiar.c: 209: ffcw=0;
 26453  008D94  0101               	movlb	1	; () banked
 26454  008D96  6BB0               	clrf	PredkoscZmianCW@ffcw& (0+255),b
 26455                           
 26456                           ;pomiar.c: 210: indff=0;
 26457  008D98  0100               	movlb	0	; () banked
 26458  008D9A  6BE2               	clrf	PredkoscZmianCW@indff& (0+255),b
 26459                           
 26460                           ;pomiar.c: 211: }
 26461  008D9C  D02F               	goto	l33190
 26462  008D9E                     l1957:
 26463                           
 26464                           ; BSR set to: 0
 26465                           ;pomiar.c: 212: else
 26466                           ;pomiar.c: 213: {
 26467                           ;pomiar.c: 214: if(!indff)
 26468  008D9E  67E2               	tstfsz	PredkoscZmianCW@indff& (0+255),b
 26469  008DA0  D007               	goto	l33170
 26470                           
 26471                           ; BSR set to: 0
 26472                           ;pomiar.c: 215: {
 26473                           ;pomiar.c: 216: for(i=0;i<10;i++) wff[i]=0;
 26474  008DA2  6A1F               	clrf	PredkoscZmianCW@i,c
 26475  008DA4                     l33164:
 26476  008DA4  D83A               	call	PL212	;call to abstracted procedure
 26477  008DA6  6ADF               	clrf	indf2,c
 26478                           
 26479                           ; BSR set to: 2
 26480  008DA8  2A1F               	incf	PredkoscZmianCW@i,f,c
 26481                           
 26482                           ; BSR set to: 2
 26483  008DAA  0E09               	movlw	9
 26484  008DAC  641F               	cpfsgt	PredkoscZmianCW@i,c
 26485  008DAE  D7FA               	goto	l33164
 26486  008DB0                     l33170:
 26487                           
 26488                           ;pomiar.c: 217: }
 26489                           ;pomiar.c: 218: indff++;
 26490  008DB0  0100               	movlb	0	; () banked
 26491  008DB2  2BE2               	incf	PredkoscZmianCW@indff& (0+255),f,b
 26492                           
 26493                           ; BSR set to: 0
 26494                           ;pomiar.c: 219: if(indff>=9)
 26495  008DB4  0E08               	movlw	8
 26496  008DB6  65E2               	cpfsgt	PredkoscZmianCW@indff& (0+255),b
 26497  008DB8  D015               	goto	l33188
 26498                           
 26499                           ; BSR set to: 0
 26500                           ;pomiar.c: 220: {
 26501                           ;pomiar.c: 221: indff=9;
 26502  008DBA  0E09               	movlw	9
 26503  008DBC  6FE2               	movwf	PredkoscZmianCW@indff& (0+255),b
 26504                           
 26505                           ; BSR set to: 0
 26506                           ;pomiar.c: 222: for(i=0;i<9;i++) wff[i]=wff[i+1];
 26507  008DBE  6A1F               	clrf	PredkoscZmianCW@i,c
 26508  008DC0                     l33182:
 26509  008DC0  0E42               	movlw	low (_wff+1)
 26510  008DC2  241F               	addwf	PredkoscZmianCW@i,w,c
 26511  008DC4  6ED9               	movwf	fsr2l,c
 26512  008DC6  6ADA               	clrf	fsr2h,c
 26513  008DC8  0E02               	movlw	high (_wff+1)
 26514  008DCA  22DA               	addwfc	fsr2h,f,c
 26515  008DCC  0E41               	movlw	low _wff
 26516  008DCE  241F               	addwf	PredkoscZmianCW@i,w,c
 26517  008DD0  6EE1               	movwf	fsr1l,c
 26518  008DD2  6AE2               	clrf	fsr1h,c
 26519  008DD4  0E02               	movlw	high _wff
 26520  008DD6  22E2               	addwfc	fsr1h,f,c
 26521  008DD8  CFDF FFE7          	movff	indf2,indf1
 26522                           
 26523                           ; BSR set to: 2
 26524  008DDC  2A1F               	incf	PredkoscZmianCW@i,f,c
 26525                           
 26526                           ; BSR set to: 2
 26527  008DDE  0E08               	movlw	8
 26528  008DE0  641F               	cpfsgt	PredkoscZmianCW@i,c
 26529  008DE2  D7EE               	goto	l33182
 26530  008DE4                     l33188:
 26531                           
 26532                           ;pomiar.c: 223: }
 26533                           ;pomiar.c: 224: wff[indff]=DtCW.CW-ffcw;
 26534  008DE4  0E41               	movlw	low _wff
 26535  008DE6  0100               	movlb	0	; () banked
 26536  008DE8  25E2               	addwf	PredkoscZmianCW@indff& (0+255),w,b
 26537  008DEA  6ED9               	movwf	fsr2l,c
 26538  008DEC  6ADA               	clrf	fsr2h,c
 26539  008DEE  0E02               	movlw	high _wff
 26540  008DF0  22DA               	addwfc	fsr2h,f,c
 26541  008DF2  0101               	movlb	1	; () banked
 26542  008DF4  51B0               	movf	PredkoscZmianCW@ffcw& (0+255),w,b
 26543  008DF6  0100               	movlb	0	; () banked
 26544  008DF8  5DD1               	subwf	(_DtCW+2)& (0+255),w,b
 26545  008DFA  6EDF               	movwf	indf2,c
 26546  008DFC                     l33190:
 26547                           
 26548                           ; BSR set to: 0
 26549                           ;pomiar.c: 225: }
 26550                           ;pomiar.c: 226: ffcw=DtCW.CW;
 26551  008DFC  C0D1  F1B0         	movff	_DtCW+2,PredkoscZmianCW@ffcw
 26552                           
 26553                           ; BSR set to: 0
 26554                           ;pomiar.c: 227: w=0;
 26555  008E00  6A1E               	clrf	PredkoscZmianCW@w,c
 26556                           
 26557                           ; BSR set to: 0
 26558                           ;pomiar.c: 228: for(i=0;i<10;i++) w+=wff[i];
 26559  008E02  6A1F               	clrf	PredkoscZmianCW@i,c
 26560  008E04                     l33200:
 26561  008E04  0102               	movlb	2	; () banked
 26562  008E06  D809               	call	PL212	;call to abstracted procedure
 26563  008E08  50DF               	movf	indf2,w,c
 26564  008E0A  261E               	addwf	PredkoscZmianCW@w,f,c
 26565                           
 26566                           ; BSR set to: 2
 26567  008E0C  2A1F               	incf	PredkoscZmianCW@i,f,c
 26568                           
 26569                           ; BSR set to: 2
 26570  008E0E  0E09               	movlw	9
 26571  008E10  641F               	cpfsgt	PredkoscZmianCW@i,c
 26572  008E12  D7F8               	goto	l33200
 26573                           
 26574                           ; BSR set to: 2
 26575                           ;pomiar.c: 229: DtCW.ddDCW=w;
 26576  008E14  C01E  F0D8         	movff	PredkoscZmianCW@w,_DtCW+9
 26577                           
 26578                           ; BSR set to: 2
 26579  008E18  0C09               	retlw	9
 26580  008E1A                     __end_of_PredkoscZmianCW:
 26581                           	opt stack 0
 26582  008E1A                     PL212:
 26583                           	opt stack 24
 26584  008E1A  0E41               	movlw	low _wff
 26585  008E1C  241F               	addwf	PredkoscZmianCW@i,w,c
 26586  008E1E  6ED9               	movwf	fsr2l,c
 26587  008E20  6ADA               	clrf	fsr2h,c
 26588  008E22  0E02               	movlw	high _wff
 26589  008E24  22DA               	addwfc	fsr2h,f,c
 26590  008E26  0012               	return	
 26591  008E28                     __end_ofPL212:
 26592                           	opt stack 0
 26593                           tblptru	equ	0xFF8
 26594                           tblptrh	equ	0xFF7
 26595                           tblptrl	equ	0xFF6
 26596                           tablat	equ	0xFF5
 26597                           prodh	equ	0xFF4
 26598                           prodl	equ	0xFF3
 26599                           intcon	equ	0xFF2
 26600                           postinc0	equ	0xFEE
 26601                           wreg	equ	0xFE8
 26602                           indf1	equ	0xFE7
 26603                           postinc1	equ	0xFE6
 26604                           postdec1	equ	0xFE5
 26605                           fsr1h	equ	0xFE2
 26606                           fsr1l	equ	0xFE1
 26607                           indf2	equ	0xFDF
 26608                           postinc2	equ	0xFDE
 26609                           postdec2	equ	0xFDD
 26610                           fsr2h	equ	0xFDA
 26611                           fsr2l	equ	0xFD9
 26612                           status	equ	0xFD8
 26613                           
 26614 ;; *************** function _SetModPCO *****************
 26615 ;; Defined at:
 26616 ;;		line 562 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 26617 ;; Parameters:    Size  Location     Type
 26618 ;;		None
 26619 ;; Auto vars:     Size  Location     Type
 26620 ;;		None
 26621 ;; Return value:  Size  Location     Type
 26622 ;;		None               void
 26623 ;; Registers used:
 26624 ;;		wreg, status,2, status,0
 26625 ;; Tracked objects:
 26626 ;;		On entry : F/0
 26627 ;;		On exit  : E/0
 26628 ;;		Unchanged: FFFFFFF0/0
 26629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26634 ;;Total ram usage:        0 bytes
 26635 ;; Hardware stack levels used:    1
 26636 ;; Hardware stack levels required when called:    4
 26637 ;; This function calls:
 26638 ;;		Nothing
 26639 ;; This function is called by:
 26640 ;;		_PomiarPCO
 26641 ;; This function uses a non-reentrant model
 26642 ;;
 26643                           
 26644                           	psect	text106
 26645  0093F6                     __ptext106:
 26646                           	opt stack 0
 26647  0093F6                     _SetModPCO:
 26648                           	opt stack 23
 26649                           
 26650                           ; BSR set to: 0
 26651                           ;pomiar.c: 563: if(M._AKTYWNE_KNF)
 26652                           
 26653                           ; BSR set to: 2
 26654  0093F6  5179               	movf	(_M+25)& (0+255),w,b
 26655  0093F8  1178               	iorwf	(_M+24)& (0+255),w,b
 26656  0093FA  E009               	bz	l33270
 26657                           
 26658                           ; BSR set to: 0
 26659                           ;pomiar.c: 564: {
 26660                           ;pomiar.c: 565: if(!DtKNF.opdg) DtCO.PPCO=85;
 26661  0093FC  0101               	movlb	1	; () banked
 26662  0093FE  6759               	tstfsz	(_DtKNF+15)& (0+255),b
 26663  009400  D002               	goto	l33268
 26664  009402                     l33266:
 26665                           
 26666                           ; BSR set to: 1
 26667  009402  0E55               	movlw	85
 26668  009404  D001               	goto	L61
 26669  009406                     l33268:
 26670                           
 26671                           ; BSR set to: 1
 26672                           ;pomiar.c: 566: else DtCO.PPCO=55;
 26673  009406  0E37               	movlw	55
 26674  009408                     L61:
 26675  009408  0100               	movlb	0	; () banked
 26676  00940A  6FE8               	movwf	(_DtCO+4)& (0+255),b
 26677  00940C  D014               	goto	l2145
 26678  00940E                     l33270:
 26679                           
 26680                           ; BSR set to: 0
 26681                           ;pomiar.c: 568: else
 26682                           ;pomiar.c: 569: if(M._pob_CW)
 26683  00940E  5169               	movf	(_M+9)& (0+255),w,b
 26684  009410  1168               	iorwf	(_M+8)& (0+255),w,b
 26685  009412  E009               	bz	l33286
 26686                           
 26687                           ; BSR set to: 0
 26688  009414  0101               	movlb	1	; () banked
 26689  009416  5151               	movf	(_DtKNF+7)& (0+255),w,b
 26690                           
 26691                           ; Switch size 1, requested type "space"
 26692                           ; Number of cases is 4, Range of values is 0 to 3
 26693                           ; switch strategies available:
 26694                           ; Name         Instructions Cycles
 26695                           ; simple_byte           13     7 (average)
 26696                           ;	Chosen strategy is simple_byte
 26697  009418  E0F4               	bz	l33266
 26698  00941A  0A01               	xorlw	1	; case 1
 26699  00941C  E0F2               	bz	l33266
 26700  00941E  0A03               	xorlw	3	; case 2
 26701  009420  E0F0               	bz	l33266
 26702  009422  0A01               	xorlw	1	; case 3
 26703  009424  D7EE               	goto	l33266
 26704  009426                     l33286:
 26705                           
 26706                           ; BSR set to: 0
 26707                           ;pomiar.c: 596: else
 26708                           ;pomiar.c: 597: if(M._AKTYWNE_PGD) DtCO.PPCO=DtCO.PGDPCO;
 26709  009426  5177               	movf	(_M+23)& (0+255),w,b
 26710  009428  1176               	iorwf	(_M+22)& (0+255),w,b
 26711  00942A  E003               	bz	l2155
 26712                           
 26713                           ; BSR set to: 0
 26714  00942C  C0EB  F0E8         	movff	_DtCO+7,_DtCO+4
 26715  009430  D002               	goto	l2145
 26716  009432                     l2155:
 26717                           
 26718                           ; BSR set to: 0
 26719                           ;pomiar.c: 598: else
 26720                           ;pomiar.c: 599: {
 26721                           ;pomiar.c: 600: DtCO.PPCO=DtCO.PCO;
 26722  009432  C0E7  F0E8         	movff	_DtCO+3,_DtCO+4
 26723  009436                     l2145:
 26724                           
 26725                           ; BSR set to: 0
 26726                           ;pomiar.c: 601: }
 26727                           ;pomiar.c: 602: if(!DtKNF.opdg)
 26728  009436  0101               	movlb	1	; () banked
 26729  009438  6759               	tstfsz	(_DtKNF+15)& (0+255),b
 26730  00943A  D009               	goto	l33296
 26731                           
 26732                           ; BSR set to: 1
 26733                           ;pomiar.c: 603: {
 26734                           ;pomiar.c: 604: if(!M._pob_SRW) PFN.PPCO=DtCO.PPCO;
 26735  00943C  0100               	movlb	0	; () banked
 26736  00943E  5165               	movf	(_M+5)& (0+255),w,b
 26737  009440  1164               	iorwf	(_M+4)& (0+255),w,b
 26738  009442  E103               	bnz	l33294
 26739  009444                     l33292:
 26740                           
 26741                           ; BSR set to: 0
 26742  009444  C0E8  F1C7         	movff	_DtCO+4,_PFN+13
 26743  009448  D009               	goto	l33302
 26744  00944A                     l33294:
 26745                           
 26746                           ; BSR set to: 0
 26747                           ;pomiar.c: 605: else PFN.PPCO=88;
 26748  00944A  0E58               	movlw	88
 26749  00944C  D005               	goto	L62
 26750  00944E                     l33296:
 26751                           
 26752                           ; BSR set to: 1
 26753                           ;pomiar.c: 607: else
 26754                           ;pomiar.c: 608: {
 26755                           ;pomiar.c: 609: if(!M._pob_SRW) PFN.PPCO=DtCO.PPCO;
 26756  00944E  0100               	movlb	0	; () banked
 26757  009450  5165               	movf	(_M+5)& (0+255),w,b
 26758  009452  1164               	iorwf	(_M+4)& (0+255),w,b
 26759  009454  E0F7               	bz	l33292
 26760                           
 26761                           ; BSR set to: 0
 26762                           ;pomiar.c: 610: else PFN.PPCO=58;
 26763  009456  0E3A               	movlw	58
 26764  009458                     L62:
 26765  009458  0101               	movlb	1	; () banked
 26766  00945A  6FC7               	movwf	(_PFN+13)& (0+255),b
 26767  00945C                     l33302:
 26768                           
 26769                           ;pomiar.c: 611: }
 26770                           ;pomiar.c: 612: if(M._pob_DzCO) PFN.PPCO=21;
 26771  00945C  0100               	movlb	0	; () banked
 26772  00945E  516D               	movf	(_M+13)& (0+255),w,b
 26773  009460  116C               	iorwf	(_M+12)& (0+255),w,b
 26774  009462  B4D8               	btfsc	status,2,c
 26775  009464  0012               	return	
 26776                           
 26777                           ; BSR set to: 0
 26778  009466  0E15               	movlw	21
 26779  009468  0101               	movlb	1	; () banked
 26780  00946A  6FC7               	movwf	(_PFN+13)& (0+255),b
 26781  00946C  0C15               	retlw	21
 26782  00946E                     __end_of_SetModPCO:
 26783                           	opt stack 0
 26784                           tblptru	equ	0xFF8
 26785                           tblptrh	equ	0xFF7
 26786                           tblptrl	equ	0xFF6
 26787                           tablat	equ	0xFF5
 26788                           prodh	equ	0xFF4
 26789                           prodl	equ	0xFF3
 26790                           intcon	equ	0xFF2
 26791                           postinc0	equ	0xFEE
 26792                           wreg	equ	0xFE8
 26793                           indf1	equ	0xFE7
 26794                           postinc1	equ	0xFE6
 26795                           postdec1	equ	0xFE5
 26796                           fsr1h	equ	0xFE2
 26797                           fsr1l	equ	0xFE1
 26798                           indf2	equ	0xFDF
 26799                           postinc2	equ	0xFDE
 26800                           postdec2	equ	0xFDD
 26801                           fsr2h	equ	0xFDA
 26802                           fsr2l	equ	0xFD9
 26803                           status	equ	0xFD8
 26804                           
 26805 ;; *************** function _GetPGD_PCO *****************
 26806 ;; Defined at:
 26807 ;;		line 650 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 26808 ;; Parameters:    Size  Location     Type
 26809 ;;		None
 26810 ;; Auto vars:     Size  Location     Type
 26811 ;;  m               4    1[BANK2 ] long 
 26812 ;;  p               1    0[BANK2 ] unsigned char 
 26813 ;; Return value:  Size  Location     Type
 26814 ;;                  1    wreg      unsigned char 
 26815 ;; Registers used:
 26816 ;;		wreg, status,2, status,0, cstack
 26817 ;; Tracked objects:
 26818 ;;		On entry : F/0
 26819 ;;		On exit  : C/0
 26820 ;;		Unchanged: FFFFFFF0/0
 26821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26823 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26824 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26825 ;;      Totals:         0       4       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26826 ;;Total ram usage:        9 bytes
 26827 ;; Hardware stack levels used:    1
 26828 ;; Hardware stack levels required when called:    5
 26829 ;; This function calls:
 26830 ;;		___wmul
 26831 ;;		___lmul
 26832 ;;		___aldiv
 26833 ;; This function is called by:
 26834 ;;		_PomiarPCO
 26835 ;; This function uses a non-reentrant model
 26836 ;;
 26837                           
 26838                           	psect	text107
 26839  00607E                     __ptext107:
 26840                           	opt stack 0
 26841  00607E                     _GetPGD_PCO:
 26842                           	opt stack 22
 26843                           
 26844                           ; BSR set to: 0
 26845                           ;pomiar.c: 651: unsigned char p;
 26846                           ;pomiar.c: 652: signed long m;
 26847                           ;pomiar.c: 654: if(!DtKNF.opdg)
 26848  00607E  0101               	movlb	1	; () banked
 26849  006080  6759               	tstfsz	(_DtKNF+15)& (0+255),b
 26850  006082  D049               	goto	l33342
 26851                           
 26852                           ; BSR set to: 1
 26853                           ;pomiar.c: 655: {
 26854                           ;pomiar.c: 656: if(DtCO.PCO)
 26855  006084  0100               	movlb	0	; () banked
 26856  006086  51E7               	movf	(_DtCO+3)& (0+255),w,b
 26857  006088  E043               	bz	l33324
 26858                           
 26859                           ; BSR set to: 0
 26860                           ;pomiar.c: 657: {
 26861                           ;pomiar.c: 658: if(DtZW.SZW<25)
 26862  00608A  0101               	movlb	1	; () banked
 26863  00608C  5184               	movf	(_DtZW+3)& (0+255),w,b
 26864  00608E  0A80               	xorlw	128
 26865  006090  0F67               	addlw	-153
 26866  006092  E23E               	bc	l33324
 26867                           
 26868                           ; BSR set to: 1
 26869                           ;pomiar.c: 659: {
 26870                           ;pomiar.c: 660: m=(25-DtZW.SZW)*DtCO.PCO;
 26871  006094  D8CB               	call	PL104	;call to abstracted procedure
 26872  006096  EC9C  F056         	call	___wmul	;wreg free
 26873                           
 26874                           ;pomiar.c: 661: m*=(85-40);
 26875  00609A  D8B5               	call	PL102	;call to abstracted procedure
 26876  00609C  0E2D               	movlw	45
 26877  00609E  6E22               	movwf	?___lmul+4,c
 26878  0060A0  0E00               	movlw	0
 26879  0060A2  6A23               	clrf	?___lmul+5,c
 26880  0060A4  6A24               	clrf	?___lmul+6,c
 26881  0060A6  6A25               	clrf	?___lmul+7,c
 26882  0060A8  ECD2  F050         	call	___lmul	;wreg free
 26883                           
 26884                           ;pomiar.c: 662: m*=100;
 26885  0060AC  D896               	call	PL76	;call to abstracted procedure
 26886  0060AE  ECD2  F050         	call	___lmul	;wreg free
 26887  0060B2  C01E  F2F1         	movff	?___lmul,GetPGD_PCO@m
 26888  0060B6  C01F  F2F2         	movff	?___lmul+1,GetPGD_PCO@m+1
 26889  0060BA  C020  F2F3         	movff	?___lmul+2,GetPGD_PCO@m+2
 26890  0060BE  C021  F2F4         	movff	?___lmul+3,GetPGD_PCO@m+3
 26891                           
 26892                           ;pomiar.c: 663: m/=1485;
 26893  0060C2  C2F1  F01E         	movff	GetPGD_PCO@m,?___aldiv
 26894  0060C6  D87C               	call	PL48	;call to abstracted procedure
 26895  0060C8  ECE3  F042         	call	___aldiv	;wreg free
 26896  0060CC  C01E  F2F1         	movff	?___aldiv,GetPGD_PCO@m
 26897  0060D0  C01F  F2F2         	movff	?___aldiv+1,GetPGD_PCO@m+1
 26898  0060D4  C020  F2F3         	movff	?___aldiv+2,GetPGD_PCO@m+2
 26899  0060D8  C021  F2F4         	movff	?___aldiv+3,GetPGD_PCO@m+3
 26900                           
 26901                           ;pomiar.c: 664: if((40+m/100)>85) return 85;
 26902  0060DC  D863               	call	PL40	;call to abstracted procedure
 26903  0060DE  ECE3  F042         	call	___aldiv	;wreg free
 26904  0060E2  0E28               	movlw	40
 26905  0060E4  D8B5               	call	PL114	;call to abstracted procedure
 26906  0060E6  E108               	bnz	u61955
 26907  0060E8  0E00               	movlw	0
 26908  0060EA  5DFB               	subwf	(??_GetPGD_PCO+2)& (0+255),w,b
 26909  0060EC  E105               	bnz	u61955
 26910  0060EE  0E00               	movlw	0
 26911  0060F0  5DFA               	subwf	(??_GetPGD_PCO+1)& (0+255),w,b
 26912  0060F2  E102               	bnz	u61955
 26913  0060F4  0E56               	movlw	86
 26914  0060F6  5DF9               	subwf	??_GetPGD_PCO& (0+255),w,b
 26915  0060F8                     u61955:
 26916  0060F8  E301               	bnc	l33320
 26917                           
 26918                           ; BSR set to: 0
 26919  0060FA  0C55               	retlw	85
 26920  0060FC                     l33320:
 26921                           
 26922                           ; BSR set to: 0
 26923                           ;pomiar.c: 665: else p=40+m/100;
 26924  0060FC  D853               	call	PL40	;call to abstracted procedure
 26925  0060FE  ECE3  F042         	call	___aldiv	;wreg free
 26926  006102  501E               	movf	?___aldiv,w,c
 26927  006104  0F28               	addlw	40
 26928  006106  0102               	movlb	2	; () banked
 26929  006108  6FF0               	movwf	GetPGD_PCO@p& (0+255),b
 26930                           
 26931                           ; BSR set to: 2
 26932                           ;pomiar.c: 666: if(p<40) return 40;
 26933  00610A  0E28               	movlw	40
 26934  00610C  61F0               	cpfslt	GetPGD_PCO@p& (0+255),b
 26935  00610E  D001               	goto	l33328
 26936  006110                     l33324:
 26937  006110  0C28               	retlw	40
 26938  006112                     l33328:
 26939                           
 26940                           ; BSR set to: 2
 26941                           ;pomiar.c: 667: return p;
 26942  006112  51F0               	movf	GetPGD_PCO@p& (0+255),w,b
 26943  006114  0012               	return	
 26944  006116                     l33342:
 26945                           
 26946                           ; BSR set to: 1
 26947                           ;pomiar.c: 673: else
 26948                           ;pomiar.c: 674: {
 26949                           ;pomiar.c: 675: if(DtCO.PCO)
 26950  006116  0100               	movlb	0	; () banked
 26951  006118  51E7               	movf	(_DtCO+3)& (0+255),w,b
 26952  00611A  E043               	bz	l33358
 26953                           
 26954                           ; BSR set to: 0
 26955                           ;pomiar.c: 676: {
 26956                           ;pomiar.c: 677: if(DtZW.SZW<25)
 26957  00611C  0101               	movlb	1	; () banked
 26958  00611E  5184               	movf	(_DtZW+3)& (0+255),w,b
 26959  006120  0A80               	xorlw	128
 26960  006122  0F67               	addlw	-153
 26961  006124  E23E               	bc	l33358
 26962                           
 26963                           ; BSR set to: 1
 26964                           ;pomiar.c: 678: {
 26965                           ;pomiar.c: 679: m=(25-DtZW.SZW)*DtCO.PCO;
 26966  006126  D882               	call	PL104	;call to abstracted procedure
 26967  006128  EC9C  F056         	call	___wmul	;wreg free
 26968                           
 26969                           ;pomiar.c: 680: m*=(55-35);
 26970  00612C  D86C               	call	PL102	;call to abstracted procedure
 26971  00612E  0E14               	movlw	20
 26972  006130  6E22               	movwf	?___lmul+4,c
 26973  006132  0E00               	movlw	0
 26974  006134  6A23               	clrf	?___lmul+5,c
 26975  006136  6A24               	clrf	?___lmul+6,c
 26976  006138  6A25               	clrf	?___lmul+7,c
 26977  00613A  ECD2  F050         	call	___lmul	;wreg free
 26978                           
 26979                           ;pomiar.c: 681: m*=100;
 26980  00613E  D84D               	call	PL76	;call to abstracted procedure
 26981  006140  ECD2  F050         	call	___lmul	;wreg free
 26982  006144  C01E  F2F1         	movff	?___lmul,GetPGD_PCO@m
 26983  006148  C01F  F2F2         	movff	?___lmul+1,GetPGD_PCO@m+1
 26984  00614C  C020  F2F3         	movff	?___lmul+2,GetPGD_PCO@m+2
 26985  006150  C021  F2F4         	movff	?___lmul+3,GetPGD_PCO@m+3
 26986                           
 26987                           ;pomiar.c: 682: m/=1485;
 26988  006154  C2F1  F01E         	movff	GetPGD_PCO@m,?___aldiv
 26989  006158  D833               	call	PL48	;call to abstracted procedure
 26990  00615A  ECE3  F042         	call	___aldiv	;wreg free
 26991  00615E  C01E  F2F1         	movff	?___aldiv,GetPGD_PCO@m
 26992  006162  C01F  F2F2         	movff	?___aldiv+1,GetPGD_PCO@m+1
 26993  006166  C020  F2F3         	movff	?___aldiv+2,GetPGD_PCO@m+2
 26994  00616A  C021  F2F4         	movff	?___aldiv+3,GetPGD_PCO@m+3
 26995                           
 26996                           ;pomiar.c: 683: if((35+m/100)>55) return 55;
 26997  00616E  D81A               	call	PL40	;call to abstracted procedure
 26998  006170  ECE3  F042         	call	___aldiv	;wreg free
 26999  006174  0E23               	movlw	35
 27000  006176  D86C               	call	PL114	;call to abstracted procedure
 27001  006178  E108               	bnz	u61995
 27002  00617A  0E00               	movlw	0
 27003  00617C  5DFB               	subwf	(??_GetPGD_PCO+2)& (0+255),w,b
 27004  00617E  E105               	bnz	u61995
 27005  006180  0E00               	movlw	0
 27006  006182  5DFA               	subwf	(??_GetPGD_PCO+1)& (0+255),w,b
 27007  006184  E102               	bnz	u61995
 27008  006186  0E38               	movlw	56
 27009  006188  5DF9               	subwf	??_GetPGD_PCO& (0+255),w,b
 27010  00618A                     u61995:
 27011  00618A  E301               	bnc	l33354
 27012                           
 27013                           ; BSR set to: 0
 27014  00618C  0C37               	retlw	55
 27015  00618E                     l33354:
 27016                           
 27017                           ; BSR set to: 0
 27018                           ;pomiar.c: 684: else p=35+m/100;
 27019  00618E  D80A               	call	PL40	;call to abstracted procedure
 27020  006190  ECE3  F042         	call	___aldiv	;wreg free
 27021  006194  501E               	movf	?___aldiv,w,c
 27022  006196  0F23               	addlw	35
 27023  006198  0102               	movlb	2	; () banked
 27024  00619A  6FF0               	movwf	GetPGD_PCO@p& (0+255),b
 27025                           
 27026                           ; BSR set to: 2
 27027                           ;pomiar.c: 685: if(p<35) return 35;
 27028  00619C  0E23               	movlw	35
 27029  00619E  61F0               	cpfslt	GetPGD_PCO@p& (0+255),b
 27030  0061A0  D7B8               	goto	l33328
 27031  0061A2                     l33358:
 27032  0061A2  0C23               	retlw	35
 27033  0061A4                     __end_of_GetPGD_PCO:
 27034                           	opt stack 0
 27035  0061A4                     PL40:
 27036                           	opt stack 22
 27037  0061A4  C2F1  F01E         	movff	GetPGD_PCO@m,?___aldiv
 27038  0061A8  C2F2  F01F         	movff	GetPGD_PCO@m+1,?___aldiv+1
 27039  0061AC  C2F3  F020         	movff	GetPGD_PCO@m+2,?___aldiv+2
 27040  0061B0  C2F4  F021         	movff	GetPGD_PCO@m+3,?___aldiv+3
 27041  0061B4  0E64               	movlw	100
 27042  0061B6  6E22               	movwf	?___aldiv+4,c
 27043  0061B8  6A23               	clrf	?___aldiv+5,c
 27044  0061BA  6A24               	clrf	?___aldiv+6,c
 27045  0061BC  6A25               	clrf	?___aldiv+7,c
 27046  0061BE  0C00               	retlw	0
 27047  0061C0                     __end_ofPL40:
 27048                           	opt stack 0
 27049  0061C0                     PL48:
 27050                           	opt stack 22
 27051  0061C0  C2F2  F01F         	movff	GetPGD_PCO@m+1,?___aldiv+1
 27052  0061C4  C2F3  F020         	movff	GetPGD_PCO@m+2,?___aldiv+2
 27053  0061C8  C2F4  F021         	movff	GetPGD_PCO@m+3,?___aldiv+3
 27054  0061CC  0ECD               	movlw	205
 27055  0061CE  6E22               	movwf	?___aldiv+4,c
 27056  0061D0  0E05               	movlw	5
 27057  0061D2  6E23               	movwf	?___aldiv+5,c
 27058  0061D4  6A24               	clrf	?___aldiv+6,c
 27059  0061D6  6A25               	clrf	?___aldiv+7,c
 27060  0061D8  0C00               	retlw	0
 27061  0061DA                     __end_ofPL48:
 27062                           	opt stack 0
 27063  0061DA                     PL76:
 27064                           	opt stack 22
 27065  0061DA  C01E  F2F1         	movff	?___lmul,GetPGD_PCO@m
 27066  0061DE  C01F  F2F2         	movff	?___lmul+1,GetPGD_PCO@m+1
 27067  0061E2  C020  F2F3         	movff	?___lmul+2,GetPGD_PCO@m+2
 27068  0061E6  C021  F2F4         	movff	?___lmul+3,GetPGD_PCO@m+3
 27069  0061EA  C2F1  F01E         	movff	GetPGD_PCO@m,?___lmul
 27070  0061EE  C2F2  F01F         	movff	GetPGD_PCO@m+1,?___lmul+1
 27071  0061F2  C2F3  F020         	movff	GetPGD_PCO@m+2,?___lmul+2
 27072  0061F6  C2F4  F021         	movff	GetPGD_PCO@m+3,?___lmul+3
 27073  0061FA  0E64               	movlw	100
 27074  0061FC  6E22               	movwf	?___lmul+4,c
 27075  0061FE  6A23               	clrf	?___lmul+5,c
 27076  006200  6A24               	clrf	?___lmul+6,c
 27077  006202  6A25               	clrf	?___lmul+7,c
 27078  006204  0C00               	retlw	0
 27079  006206                     __end_ofPL76:
 27080                           	opt stack 0
 27081  006206                     PL102:
 27082                           	opt stack 22
 27083  006206  0102               	movlb	2	; () banked
 27084  006208  C01E  F2F1         	movff	?___wmul,GetPGD_PCO@m
 27085  00620C  C01F  F2F2         	movff	?___wmul+1,GetPGD_PCO@m+1
 27086  006210  0E00               	movlw	0
 27087  006212  BFF2               	btfsc	(GetPGD_PCO@m+1)& (0+255),7,b
 27088  006214  0EFF               	movlw	-1
 27089  006216  6FF3               	movwf	(GetPGD_PCO@m+2)& (0+255),b
 27090  006218  6FF4               	movwf	(GetPGD_PCO@m+3)& (0+255),b
 27091  00621A  C2F1  F01E         	movff	GetPGD_PCO@m,?___lmul
 27092  00621E  C2F2  F01F         	movff	GetPGD_PCO@m+1,?___lmul+1
 27093  006222  C2F3  F020         	movff	GetPGD_PCO@m+2,?___lmul+2
 27094  006226  C2F4  F021         	movff	GetPGD_PCO@m+3,?___lmul+3
 27095  00622A  0012               	return	
 27096  00622C                     __end_ofPL102:
 27097                           	opt stack 0
 27098  00622C                     PL104:
 27099                           	opt stack 22
 27100  00622C  C184  F0F9         	movff	_DtZW+3,??_GetPGD_PCO
 27101  006230  0100               	movlb	0	; () banked
 27102  006232  6BFA               	clrf	(??_GetPGD_PCO+1)& (0+255),b
 27103  006234  BFF9               	btfsc	??_GetPGD_PCO& (0+255),7,b
 27104  006236  07FA               	decf	(??_GetPGD_PCO+1)& (0+255),f,b
 27105  006238  51F9               	movf	??_GetPGD_PCO& (0+255),w,b
 27106  00623A  0819               	sublw	25
 27107  00623C  6E1E               	movwf	?___wmul,c
 27108  00623E  51FA               	movf	(??_GetPGD_PCO+1)& (0+255),w,b
 27109  006240  A0D8               	btfss	status,0,c
 27110  006242  2AE8               	incf	wreg,f,c
 27111  006244  0800               	sublw	0
 27112  006246  6E1F               	movwf	?___wmul+1,c
 27113  006248  C0E7  F020         	movff	_DtCO+3,?___wmul+2
 27114  00624C  6A21               	clrf	?___wmul+3,c
 27115  00624E  0012               	return	
 27116  006250                     __end_ofPL104:
 27117                           	opt stack 0
 27118  006250                     PL114:
 27119                           	opt stack 22
 27120  006250  241E               	addwf	?___aldiv,w,c
 27121  006252  6FF9               	movwf	??_GetPGD_PCO& (0+255),b
 27122  006254  0E00               	movlw	0
 27123  006256  201F               	addwfc	?___aldiv+1,w,c
 27124  006258  6FFA               	movwf	(??_GetPGD_PCO+1)& (0+255),b
 27125  00625A  0E00               	movlw	0
 27126  00625C  2020               	addwfc	?___aldiv+2,w,c
 27127  00625E  6FFB               	movwf	(??_GetPGD_PCO+2)& (0+255),b
 27128  006260  0E00               	movlw	0
 27129  006262  2021               	addwfc	?___aldiv+3,w,c
 27130  006264  6FFC               	movwf	(??_GetPGD_PCO+3)& (0+255),b
 27131  006266  51FC               	movf	(??_GetPGD_PCO+3)& (0+255),w,b
 27132  006268  0A80               	xorlw	128
 27133  00626A  0F80               	addlw	128
 27134  00626C  0012               	return	
 27135  00626E                     __end_ofPL114:
 27136                           	opt stack 0
 27137                           tblptru	equ	0xFF8
 27138                           tblptrh	equ	0xFF7
 27139                           tblptrl	equ	0xFF6
 27140                           tablat	equ	0xFF5
 27141                           prodh	equ	0xFF4
 27142                           prodl	equ	0xFF3
 27143                           intcon	equ	0xFF2
 27144                           postinc0	equ	0xFEE
 27145                           wreg	equ	0xFE8
 27146                           indf1	equ	0xFE7
 27147                           postinc1	equ	0xFE6
 27148                           postdec1	equ	0xFE5
 27149                           fsr1h	equ	0xFE2
 27150                           fsr1l	equ	0xFE1
 27151                           indf2	equ	0xFDF
 27152                           postinc2	equ	0xFDE
 27153                           postdec2	equ	0xFDD
 27154                           fsr2h	equ	0xFDA
 27155                           fsr2l	equ	0xFD9
 27156                           status	equ	0xFD8
 27157                           
 27158 ;; *************** function _WritePCO *****************
 27159 ;; Defined at:
 27160 ;;		line 696 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 27161 ;; Parameters:    Size  Location     Type
 27162 ;;		None
 27163 ;; Auto vars:     Size  Location     Type
 27164 ;;		None
 27165 ;; Return value:  Size  Location     Type
 27166 ;;		None               void
 27167 ;; Registers used:
 27168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27169 ;; Tracked objects:
 27170 ;;		On entry : E/0
 27171 ;;		On exit  : 0/0
 27172 ;;		Unchanged: 0/0
 27173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27178 ;;Total ram usage:        1 bytes
 27179 ;; Hardware stack levels used:    1
 27180 ;; Hardware stack levels required when called:    6
 27181 ;; This function calls:
 27182 ;;		_RTdS
 27183 ;;		_StartRTdS
 27184 ;;		_WriteEEPCO
 27185 ;; This function is called by:
 27186 ;;		_PomiarPCO
 27187 ;; This function uses a non-reentrant model
 27188 ;;
 27189                           
 27190                           	psect	text108
 27191  00AFF6                     __ptext108:
 27192                           	opt stack 0
 27193  00AFF6                     _WritePCO:
 27194                           	opt stack 21
 27195                           
 27196                           ;pomiar.c: 697: if(DtCO._newPCO&&RTdS(5)>=10)
 27197  00AFF6  0100               	movlb	0	; () banked
 27198  00AFF8  AFE5               	btfss	(_DtCO+1)& (0+255),7,b
 27199  00AFFA  0012               	return	
 27200                           
 27201                           ; BSR set to: 0
 27202  00AFFC  0E05               	movlw	5
 27203  00AFFE  ECD5  F057         	call	_RTdS
 27204  00B002  6E22               	movwf	??_WritePCO& (0+255),c
 27205  00B004  0E0A               	movlw	10
 27206  00B006  5C22               	subwf	??_WritePCO,w,c
 27207  00B008  A0D8               	btfss	status,0,c
 27208  00B00A  0012               	return	
 27209                           
 27210                           ; BSR set to: 1
 27211                           ;pomiar.c: 698: {
 27212                           ;pomiar.c: 699: DtCO._newPCO=0;
 27213  00B00C  0100               	movlb	0	; () banked
 27214  00B00E  9FE5               	bcf	(_DtCO+1)& (0+255),7,b
 27215                           
 27216                           ; BSR set to: 0
 27217                           ;pomiar.c: 700: StartRTdS(5);
 27218  00B010  0E05               	movlw	5
 27219  00B012  ECC2  F057         	call	_StartRTdS
 27220                           
 27221                           ; BSR set to: 1
 27222                           ;pomiar.c: 701: WriteEEPCO();
 27223  00B016  EF0D  F05A         	goto	_WriteEEPCO	;wreg free
 27224  00B01A                     __end_of_WritePCO:
 27225                           	opt stack 0
 27226                           tblptru	equ	0xFF8
 27227                           tblptrh	equ	0xFF7
 27228                           tblptrl	equ	0xFF6
 27229                           tablat	equ	0xFF5
 27230                           prodh	equ	0xFF4
 27231                           prodl	equ	0xFF3
 27232                           intcon	equ	0xFF2
 27233                           postinc0	equ	0xFEE
 27234                           wreg	equ	0xFE8
 27235                           indf1	equ	0xFE7
 27236                           postinc1	equ	0xFE6
 27237                           postdec1	equ	0xFE5
 27238                           fsr1h	equ	0xFE2
 27239                           fsr1l	equ	0xFE1
 27240                           indf2	equ	0xFDF
 27241                           postinc2	equ	0xFDE
 27242                           postdec2	equ	0xFDD
 27243                           fsr2h	equ	0xFDA
 27244                           fsr2l	equ	0xFD9
 27245                           status	equ	0xFD8
 27246                           
 27247 ;; *************** function _WriteEEPCO *****************
 27248 ;; Defined at:
 27249 ;;		line 412 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
 27250 ;; Parameters:    Size  Location     Type
 27251 ;;		None
 27252 ;; Auto vars:     Size  Location     Type
 27253 ;;		None
 27254 ;; Return value:  Size  Location     Type
 27255 ;;		None               void
 27256 ;; Registers used:
 27257 ;;		wreg, status,2, status,0, cstack
 27258 ;; Tracked objects:
 27259 ;;		On entry : F/1
 27260 ;;		On exit  : 0/0
 27261 ;;		Unchanged: FFFFFFF0/0
 27262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27267 ;;Total ram usage:        0 bytes
 27268 ;; Hardware stack levels used:    1
 27269 ;; Hardware stack levels required when called:    5
 27270 ;; This function calls:
 27271 ;;		_Busy_eep
 27272 ;;		_Write_b_eep
 27273 ;; This function is called by:
 27274 ;;		_WritePCO
 27275 ;; This function uses a non-reentrant model
 27276 ;;
 27277                           
 27278                           	psect	text109
 27279  00B41A                     __ptext109:
 27280                           	opt stack 0
 27281  00B41A                     _WriteEEPCO:
 27282                           	opt stack 21
 27283                           
 27284                           ; BSR set to: 1
 27285                           ;konfig.c: 413: (Busy_eep(), Write_b_eep(0x00C9,DtCO.PCO));
 27286  00B41A  EC29  F05B         	call	_Busy_eep	;wreg free
 27287                           
 27288                           ; BSR set to: 1
 27289  00B41E  6A1F               	clrf	?_Write_b_eep+1,c
 27290  00B420  0EC9               	movlw	201
 27291  00B422  6E1E               	movwf	?_Write_b_eep,c
 27292  00B424  C0E7  F020         	movff	_DtCO+3,?_Write_b_eep+2
 27293  00B428  EF83  F053         	goto	_Write_b_eep	;wreg free
 27294  00B42C                     __end_of_WriteEEPCO:
 27295                           	opt stack 0
 27296                           tblptru	equ	0xFF8
 27297                           tblptrh	equ	0xFF7
 27298                           tblptrl	equ	0xFF6
 27299                           tablat	equ	0xFF5
 27300                           prodh	equ	0xFF4
 27301                           prodl	equ	0xFF3
 27302                           intcon	equ	0xFF2
 27303                           postinc0	equ	0xFEE
 27304                           wreg	equ	0xFE8
 27305                           indf1	equ	0xFE7
 27306                           postinc1	equ	0xFE6
 27307                           postdec1	equ	0xFE5
 27308                           fsr1h	equ	0xFE2
 27309                           fsr1l	equ	0xFE1
 27310                           indf2	equ	0xFDF
 27311                           postinc2	equ	0xFDE
 27312                           postdec2	equ	0xFDD
 27313                           fsr2h	equ	0xFDA
 27314                           fsr2l	equ	0xFD9
 27315                           status	equ	0xFD8
 27316                           
 27317 ;; *************** function _WritePCW *****************
 27318 ;; Defined at:
 27319 ;;		line 748 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 27320 ;; Parameters:    Size  Location     Type
 27321 ;;		None
 27322 ;; Auto vars:     Size  Location     Type
 27323 ;;		None
 27324 ;; Return value:  Size  Location     Type
 27325 ;;		None               void
 27326 ;; Registers used:
 27327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27328 ;; Tracked objects:
 27329 ;;		On entry : E/0
 27330 ;;		On exit  : 0/0
 27331 ;;		Unchanged: 0/0
 27332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27337 ;;Total ram usage:        1 bytes
 27338 ;; Hardware stack levels used:    1
 27339 ;; Hardware stack levels required when called:    6
 27340 ;; This function calls:
 27341 ;;		_RTdS
 27342 ;;		_StartRTdS
 27343 ;;		_WriteEEPCW
 27344 ;; This function is called by:
 27345 ;;		_PomiarPCW
 27346 ;; This function uses a non-reentrant model
 27347 ;;
 27348                           
 27349                           	psect	text110
 27350  00B01A                     __ptext110:
 27351                           	opt stack 0
 27352  00B01A                     _WritePCW:
 27353                           	opt stack 21
 27354                           
 27355                           ;pomiar.c: 749: if(DtCW._newPCW&&RTdS(6)>=10)
 27356  00B01A  0100               	movlb	0	; () banked
 27357  00B01C  A1D0               	btfss	(_DtCW+1)& (0+255),0,b
 27358  00B01E  0012               	return	
 27359                           
 27360                           ; BSR set to: 0
 27361  00B020  0E06               	movlw	6
 27362  00B022  ECD5  F057         	call	_RTdS
 27363  00B026  6E22               	movwf	??_WritePCW& (0+255),c
 27364  00B028  0E0A               	movlw	10
 27365  00B02A  5C22               	subwf	??_WritePCW,w,c
 27366  00B02C  A0D8               	btfss	status,0,c
 27367  00B02E  0012               	return	
 27368                           
 27369                           ; BSR set to: 1
 27370                           ;pomiar.c: 750: {
 27371                           ;pomiar.c: 751: DtCW._newPCW=0;
 27372  00B030  0100               	movlb	0	; () banked
 27373  00B032  91D0               	bcf	(_DtCW+1)& (0+255),0,b
 27374                           
 27375                           ; BSR set to: 0
 27376                           ;pomiar.c: 752: StartRTdS(6);
 27377  00B034  0E06               	movlw	6
 27378  00B036  ECC2  F057         	call	_StartRTdS
 27379                           
 27380                           ; BSR set to: 1
 27381                           ;pomiar.c: 753: WriteEEPCW();
 27382  00B03A  EF16  F05A         	goto	_WriteEEPCW	;wreg free
 27383  00B03E                     __end_of_WritePCW:
 27384                           	opt stack 0
 27385                           tblptru	equ	0xFF8
 27386                           tblptrh	equ	0xFF7
 27387                           tblptrl	equ	0xFF6
 27388                           tablat	equ	0xFF5
 27389                           prodh	equ	0xFF4
 27390                           prodl	equ	0xFF3
 27391                           intcon	equ	0xFF2
 27392                           postinc0	equ	0xFEE
 27393                           wreg	equ	0xFE8
 27394                           indf1	equ	0xFE7
 27395                           postinc1	equ	0xFE6
 27396                           postdec1	equ	0xFE5
 27397                           fsr1h	equ	0xFE2
 27398                           fsr1l	equ	0xFE1
 27399                           indf2	equ	0xFDF
 27400                           postinc2	equ	0xFDE
 27401                           postdec2	equ	0xFDD
 27402                           fsr2h	equ	0xFDA
 27403                           fsr2l	equ	0xFD9
 27404                           status	equ	0xFD8
 27405                           
 27406 ;; *************** function _WriteEEPCW *****************
 27407 ;; Defined at:
 27408 ;;		line 402 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
 27409 ;; Parameters:    Size  Location     Type
 27410 ;;		None
 27411 ;; Auto vars:     Size  Location     Type
 27412 ;;		None
 27413 ;; Return value:  Size  Location     Type
 27414 ;;		None               void
 27415 ;; Registers used:
 27416 ;;		wreg, status,2, status,0, cstack
 27417 ;; Tracked objects:
 27418 ;;		On entry : F/1
 27419 ;;		On exit  : 0/0
 27420 ;;		Unchanged: FFFFFFF0/0
 27421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27426 ;;Total ram usage:        0 bytes
 27427 ;; Hardware stack levels used:    1
 27428 ;; Hardware stack levels required when called:    5
 27429 ;; This function calls:
 27430 ;;		_Busy_eep
 27431 ;;		_Write_b_eep
 27432 ;; This function is called by:
 27433 ;;		_WritePCW
 27434 ;; This function uses a non-reentrant model
 27435 ;;
 27436                           
 27437                           	psect	text111
 27438  00B42C                     __ptext111:
 27439                           	opt stack 0
 27440  00B42C                     _WriteEEPCW:
 27441                           	opt stack 21
 27442                           
 27443                           ; BSR set to: 1
 27444                           ;konfig.c: 403: (Busy_eep(), Write_b_eep(0x00CA,DtCW.PCW));
 27445  00B42C  EC29  F05B         	call	_Busy_eep	;wreg free
 27446                           
 27447                           ; BSR set to: 1
 27448  00B430  6A1F               	clrf	?_Write_b_eep+1,c
 27449  00B432  0ECA               	movlw	202
 27450  00B434  6E1E               	movwf	?_Write_b_eep,c
 27451  00B436  C0D2  F020         	movff	_DtCW+3,?_Write_b_eep+2
 27452  00B43A  EF83  F053         	goto	_Write_b_eep	;wreg free
 27453  00B43E                     __end_of_WriteEEPCW:
 27454                           	opt stack 0
 27455                           tblptru	equ	0xFF8
 27456                           tblptrh	equ	0xFF7
 27457                           tblptrl	equ	0xFF6
 27458                           tablat	equ	0xFF5
 27459                           prodh	equ	0xFF4
 27460                           prodl	equ	0xFF3
 27461                           intcon	equ	0xFF2
 27462                           postinc0	equ	0xFEE
 27463                           wreg	equ	0xFE8
 27464                           indf1	equ	0xFE7
 27465                           postinc1	equ	0xFE6
 27466                           postdec1	equ	0xFE5
 27467                           fsr1h	equ	0xFE2
 27468                           fsr1l	equ	0xFE1
 27469                           indf2	equ	0xFDF
 27470                           postinc2	equ	0xFDE
 27471                           postdec2	equ	0xFDD
 27472                           fsr2h	equ	0xFDA
 27473                           fsr2l	equ	0xFD9
 27474                           status	equ	0xFD8
 27475                           
 27476 ;; *************** function _SetModPCW *****************
 27477 ;; Defined at:
 27478 ;;		line 759 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 27479 ;; Parameters:    Size  Location     Type
 27480 ;;		None
 27481 ;; Auto vars:     Size  Location     Type
 27482 ;;		None
 27483 ;; Return value:  Size  Location     Type
 27484 ;;		None               void
 27485 ;; Registers used:
 27486 ;;		wreg, status,2, status,0
 27487 ;; Tracked objects:
 27488 ;;		On entry : 0/0
 27489 ;;		On exit  : E/0
 27490 ;;		Unchanged: FFFFFFF0/0
 27491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27496 ;;Total ram usage:        0 bytes
 27497 ;; Hardware stack levels used:    1
 27498 ;; Hardware stack levels required when called:    4
 27499 ;; This function calls:
 27500 ;;		Nothing
 27501 ;; This function is called by:
 27502 ;;		_PomiarPCW
 27503 ;; This function uses a non-reentrant model
 27504 ;;
 27505                           
 27506                           	psect	text112
 27507  00A658                     __ptext112:
 27508                           	opt stack 0
 27509  00A658                     _SetModPCW:
 27510                           	opt stack 23
 27511                           
 27512                           ;pomiar.c: 760: if(M._AKTYWNE_KNF) DtCW.PPCW=60;
 27513  00A658  0100               	movlb	0	; () banked
 27514  00A65A  5179               	movf	(_M+25)& (0+255),w,b
 27515  00A65C  1178               	iorwf	(_M+24)& (0+255),w,b
 27516  00A65E  E002               	bz	l2207
 27517                           
 27518                           ; BSR set to: 0
 27519  00A660  0E3C               	movlw	60
 27520  00A662  D008               	goto	L63
 27521  00A664                     l2207:
 27522                           
 27523                           ; BSR set to: 0
 27524                           ;pomiar.c: 761: else
 27525                           ;pomiar.c: 762: if((DtKNF.tpkt==0)&&M._pob_AL) DtCW.PPCW=70;
 27526  00A664  0101               	movlb	1	; () banked
 27527  00A666  6751               	tstfsz	(_DtKNF+7)& (0+255),b
 27528  00A668  D007               	goto	l2209
 27529                           
 27530                           ; BSR set to: 1
 27531  00A66A  0100               	movlb	0	; () banked
 27532  00A66C  5167               	movf	(_M+7)& (0+255),w,b
 27533  00A66E  1166               	iorwf	(_M+6)& (0+255),w,b
 27534  00A670  E003               	bz	l2209
 27535                           
 27536                           ; BSR set to: 0
 27537  00A672  0E46               	movlw	70
 27538  00A674                     L63:
 27539  00A674  6FD3               	movwf	(_DtCW+4)& (0+255),b
 27540  00A676  D002               	goto	l2208
 27541  00A678                     l2209:
 27542                           
 27543                           ;pomiar.c: 763: else DtCW.PPCW=DtCW.PCW;
 27544  00A678  C0D2  F0D3         	movff	_DtCW+3,_DtCW+4
 27545  00A67C                     l2208:
 27546                           
 27547                           ;pomiar.c: 764: PFN.PPCW=DtCW.PPCW;
 27548  00A67C  C0D3  F1C8         	movff	_DtCW+4,_PFN+14
 27549                           
 27550                           ;pomiar.c: 765: if(M._pob_DzCW) PFN.PPCW=21;
 27551  00A680  0100               	movlb	0	; () banked
 27552  00A682  516F               	movf	(_M+15)& (0+255),w,b
 27553  00A684  116E               	iorwf	(_M+14)& (0+255),w,b
 27554  00A686  B4D8               	btfsc	status,2,c
 27555  00A688  0012               	return	
 27556                           
 27557                           ; BSR set to: 0
 27558  00A68A  0E15               	movlw	21
 27559  00A68C  0101               	movlb	1	; () banked
 27560  00A68E  6FC8               	movwf	(_PFN+14)& (0+255),b
 27561  00A690  0C15               	retlw	21
 27562  00A692                     __end_of_SetModPCW:
 27563                           	opt stack 0
 27564                           tblptru	equ	0xFF8
 27565                           tblptrh	equ	0xFF7
 27566                           tblptrl	equ	0xFF6
 27567                           tablat	equ	0xFF5
 27568                           prodh	equ	0xFF4
 27569                           prodl	equ	0xFF3
 27570                           intcon	equ	0xFF2
 27571                           postinc0	equ	0xFEE
 27572                           wreg	equ	0xFE8
 27573                           indf1	equ	0xFE7
 27574                           postinc1	equ	0xFE6
 27575                           postdec1	equ	0xFE5
 27576                           fsr1h	equ	0xFE2
 27577                           fsr1l	equ	0xFE1
 27578                           indf2	equ	0xFDF
 27579                           postinc2	equ	0xFDE
 27580                           postdec2	equ	0xFDD
 27581                           fsr2h	equ	0xFDA
 27582                           fsr2l	equ	0xFD9
 27583                           status	equ	0xFD8
 27584                           
 27585 ;; *************** function _WritePFN *****************
 27586 ;; Defined at:
 27587 ;;		line 866 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 27588 ;; Parameters:    Size  Location     Type
 27589 ;;		None
 27590 ;; Auto vars:     Size  Location     Type
 27591 ;;		None
 27592 ;; Return value:  Size  Location     Type
 27593 ;;		None               void
 27594 ;; Registers used:
 27595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27596 ;; Tracked objects:
 27597 ;;		On entry : F/1
 27598 ;;		On exit  : 0/0
 27599 ;;		Unchanged: 0/0
 27600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27605 ;;Total ram usage:        1 bytes
 27606 ;; Hardware stack levels used:    1
 27607 ;; Hardware stack levels required when called:    6
 27608 ;; This function calls:
 27609 ;;		_RTdS
 27610 ;;		_StartRTdS
 27611 ;;		_WriteEEPFN
 27612 ;; This function is called by:
 27613 ;;		_PomiarPFN
 27614 ;; This function uses a non-reentrant model
 27615 ;;
 27616                           
 27617                           	psect	text113
 27618  00B128                     __ptext113:
 27619                           	opt stack 0
 27620  00B128                     _WritePFN:
 27621                           	opt stack 21
 27622                           
 27623                           ; BSR set to: 1
 27624                           ;pomiar.c: 867: if(PFN._newPFN&&RTdS(7)>=10)
 27625  00B128  A7BD               	btfss	(_PFN+3)& (0+255),3,b
 27626  00B12A  0012               	return	
 27627                           
 27628                           ; BSR set to: 1
 27629  00B12C  0E07               	movlw	7
 27630  00B12E  ECD5  F057         	call	_RTdS
 27631  00B132  6E22               	movwf	??_WritePFN& (0+255),c
 27632  00B134  0E0A               	movlw	10
 27633  00B136  5C22               	subwf	??_WritePFN,w,c
 27634  00B138  A0D8               	btfss	status,0,c
 27635  00B13A  0012               	return	
 27636                           
 27637                           ; BSR set to: 1
 27638                           ;pomiar.c: 868: {
 27639                           ;pomiar.c: 869: PFN._newPFN=0;
 27640  00B13C  97BD               	bcf	(_PFN+3)& (0+255),3,b
 27641                           
 27642                           ; BSR set to: 1
 27643                           ;pomiar.c: 870: StartRTdS(7);
 27644  00B13E  0E07               	movlw	7
 27645  00B140  ECC2  F057         	call	_StartRTdS
 27646                           
 27647                           ; BSR set to: 1
 27648                           ;pomiar.c: 871: WriteEEPFN();
 27649  00B144  EF1F  F05A         	goto	_WriteEEPFN	;wreg free
 27650  00B148                     __end_of_WritePFN:
 27651                           	opt stack 0
 27652                           tblptru	equ	0xFF8
 27653                           tblptrh	equ	0xFF7
 27654                           tblptrl	equ	0xFF6
 27655                           tablat	equ	0xFF5
 27656                           prodh	equ	0xFF4
 27657                           prodl	equ	0xFF3
 27658                           intcon	equ	0xFF2
 27659                           postinc0	equ	0xFEE
 27660                           wreg	equ	0xFE8
 27661                           indf1	equ	0xFE7
 27662                           postinc1	equ	0xFE6
 27663                           postdec1	equ	0xFE5
 27664                           fsr1h	equ	0xFE2
 27665                           fsr1l	equ	0xFE1
 27666                           indf2	equ	0xFDF
 27667                           postinc2	equ	0xFDE
 27668                           postdec2	equ	0xFDD
 27669                           fsr2h	equ	0xFDA
 27670                           fsr2l	equ	0xFD9
 27671                           status	equ	0xFD8
 27672                           
 27673 ;; *************** function _WriteEEPFN *****************
 27674 ;; Defined at:
 27675 ;;		line 422 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
 27676 ;; Parameters:    Size  Location     Type
 27677 ;;		None
 27678 ;; Auto vars:     Size  Location     Type
 27679 ;;		None
 27680 ;; Return value:  Size  Location     Type
 27681 ;;		None               void
 27682 ;; Registers used:
 27683 ;;		wreg, status,2, status,0, cstack
 27684 ;; Tracked objects:
 27685 ;;		On entry : F/1
 27686 ;;		On exit  : 0/0
 27687 ;;		Unchanged: FFFFFFF0/0
 27688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27693 ;;Total ram usage:        0 bytes
 27694 ;; Hardware stack levels used:    1
 27695 ;; Hardware stack levels required when called:    5
 27696 ;; This function calls:
 27697 ;;		_Busy_eep
 27698 ;;		_Write_b_eep
 27699 ;; This function is called by:
 27700 ;;		_WritePFN
 27701 ;; This function uses a non-reentrant model
 27702 ;;
 27703                           
 27704                           	psect	text114
 27705  00B43E                     __ptext114:
 27706                           	opt stack 0
 27707  00B43E                     _WriteEEPFN:
 27708                           	opt stack 21
 27709                           
 27710                           ; BSR set to: 1
 27711                           ;konfig.c: 423: (Busy_eep(), Write_b_eep(0x00CB,PFN.poz));
 27712  00B43E  EC29  F05B         	call	_Busy_eep	;wreg free
 27713                           
 27714                           ; BSR set to: 1
 27715  00B442  6A1F               	clrf	?_Write_b_eep+1,c
 27716  00B444  0ECB               	movlw	203
 27717  00B446  6E1E               	movwf	?_Write_b_eep,c
 27718  00B448  C1D9  F020         	movff	_PFN+31,?_Write_b_eep+2
 27719  00B44C  EF83  F053         	goto	_Write_b_eep	;wreg free
 27720  00B450                     __end_of_WriteEEPFN:
 27721                           	opt stack 0
 27722                           tblptru	equ	0xFF8
 27723                           tblptrh	equ	0xFF7
 27724                           tblptrl	equ	0xFF6
 27725                           tablat	equ	0xFF5
 27726                           prodh	equ	0xFF4
 27727                           prodl	equ	0xFF3
 27728                           intcon	equ	0xFF2
 27729                           postinc0	equ	0xFEE
 27730                           wreg	equ	0xFE8
 27731                           indf1	equ	0xFE7
 27732                           postinc1	equ	0xFE6
 27733                           postdec1	equ	0xFE5
 27734                           fsr1h	equ	0xFE2
 27735                           fsr1l	equ	0xFE1
 27736                           indf2	equ	0xFDF
 27737                           postinc2	equ	0xFDE
 27738                           postdec2	equ	0xFDD
 27739                           fsr2h	equ	0xFDA
 27740                           fsr2l	equ	0xFD9
 27741                           status	equ	0xFD8
 27742                           
 27743 ;; *************** function _ReadEEPFN *****************
 27744 ;; Defined at:
 27745 ;;		line 426 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
 27746 ;; Parameters:    Size  Location     Type
 27747 ;;		None
 27748 ;; Auto vars:     Size  Location     Type
 27749 ;;		None
 27750 ;; Return value:  Size  Location     Type
 27751 ;;                  1    wreg      unsigned char 
 27752 ;; Registers used:
 27753 ;;		wreg, status,2, status,0, cstack
 27754 ;; Tracked objects:
 27755 ;;		On entry : F/1
 27756 ;;		On exit  : 0/0
 27757 ;;		Unchanged: 0/0
 27758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27763 ;;Total ram usage:        0 bytes
 27764 ;; Hardware stack levels used:    1
 27765 ;; Hardware stack levels required when called:    5
 27766 ;; This function calls:
 27767 ;;		_Read_b_eep
 27768 ;; This function is called by:
 27769 ;;		_PomiarPFN
 27770 ;; This function uses a non-reentrant model
 27771 ;;
 27772                           
 27773                           	psect	text115
 27774  00B5DC                     __ptext115:
 27775                           	opt stack 0
 27776  00B5DC                     _ReadEEPFN:
 27777                           	opt stack 22
 27778                           
 27779                           ; BSR set to: 1
 27780                           ;konfig.c: 427: return Read_b_eep(0x00CB);
 27781  00B5DC  6A1F               	clrf	?_Read_b_eep+1,c
 27782  00B5DE  0ECB               	movlw	203
 27783  00B5E0  6E1E               	movwf	?_Read_b_eep,c
 27784  00B5E2  EF83  F059         	goto	_Read_b_eep	;wreg free
 27785  00B5E6                     __end_of_ReadEEPFN:
 27786                           	opt stack 0
 27787                           tblptru	equ	0xFF8
 27788                           tblptrh	equ	0xFF7
 27789                           tblptrl	equ	0xFF6
 27790                           tablat	equ	0xFF5
 27791                           prodh	equ	0xFF4
 27792                           prodl	equ	0xFF3
 27793                           intcon	equ	0xFF2
 27794                           postinc0	equ	0xFEE
 27795                           wreg	equ	0xFE8
 27796                           indf1	equ	0xFE7
 27797                           postinc1	equ	0xFE6
 27798                           postdec1	equ	0xFE5
 27799                           fsr1h	equ	0xFE2
 27800                           fsr1l	equ	0xFE1
 27801                           indf2	equ	0xFDF
 27802                           postinc2	equ	0xFDE
 27803                           postdec2	equ	0xFDD
 27804                           fsr2h	equ	0xFDA
 27805                           fsr2l	equ	0xFD9
 27806                           status	equ	0xFD8
 27807                           
 27808 ;; *************** function _RefStan *****************
 27809 ;; Defined at:
 27810 ;;		line 61 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
 27811 ;; Parameters:    Size  Location     Type
 27812 ;;		None
 27813 ;; Auto vars:     Size  Location     Type
 27814 ;;		None
 27815 ;; Return value:  Size  Location     Type
 27816 ;;		None               void
 27817 ;; Registers used:
 27818 ;;		wreg, status,2, status,0
 27819 ;; Tracked objects:
 27820 ;;		On entry : 0/0
 27821 ;;		On exit  : F/0
 27822 ;;		Unchanged: FFFFFFF0/0
 27823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27825 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27828 ;;Total ram usage:        4 bytes
 27829 ;; Hardware stack levels used:    1
 27830 ;; Hardware stack levels required when called:    4
 27831 ;; This function calls:
 27832 ;;		Nothing
 27833 ;; This function is called by:
 27834 ;;		_InitPort
 27835 ;; This function uses a non-reentrant model
 27836 ;;
 27837                           
 27838                           	psect	text116
 27839  006BB2                     __ptext116:
 27840                           	opt stack 0
 27841  006BB2                     _RefStan:
 27842                           	opt stack 25
 27843                           
 27844                           ;port.c: 63: SPort[0].Input=0;
 27845  006BB2  0100               	movlb	0	; () banked
 27846  006BB4  91B5               	bcf	_SPort& (0+255),0,b	;volatile
 27847  006BB6  0E01               	movlw	1
 27848                           
 27849                           ; BSR set to: 0
 27850                           ;port.c: 65: SPort[1].Input=(PORTBbits.RB5)?1:0;
 27851  006BB8  AA81               	btfss	3969,5,c	;volatile
 27852  006BBA  0E00               	movlw	0
 27853  006BBC  6E1E               	movwf	??_RefStan& (0+255),c
 27854  006BBE  51B6               	movf	(_SPort+1)& (0+255),w,b	;volatile
 27855  006BC0  181E               	xorwf	??_RefStan,w,c
 27856  006BC2  0BFE               	andlw	-2
 27857  006BC4  181E               	xorwf	??_RefStan,w,c
 27858  006BC6  6FB6               	movwf	(_SPort+1)& (0+255),b	;volatile
 27859                           
 27860                           ; BSR set to: 0
 27861                           ;port.c: 67: SPort[2].Input=(PORTCbits.RC0&&PORTAbits.RA7)?1:0;
 27862  006BC8  6A1F               	clrf	_RefStan$2767,c
 27863                           
 27864                           ; BSR set to: 0
 27865  006BCA  B082               	btfsc	3970,0,c	;volatile
 27866                           
 27867                           ; BSR set to: 0
 27868  006BCC  AE80               	btfss	3968,7,c	;volatile
 27869  006BCE  D002               	goto	l33446
 27870                           
 27871                           ; BSR set to: 0
 27872  006BD0  0E01               	movlw	1
 27873  006BD2  6E1F               	movwf	_RefStan$2767,c
 27874  006BD4                     l33446:
 27875                           
 27876                           ; BSR set to: 0
 27877  006BD4  B01F               	btfsc	_RefStan$2767,0,c
 27878  006BD6  D002               	bra	u62145
 27879  006BD8  91B7               	bcf	(_SPort+2)& (0+255),0,b	;volatile
 27880  006BDA  D002               	bra	u62146
 27881  006BDC                     u62145:
 27882  006BDC  0100               	movlb	0	; () banked
 27883  006BDE  81B7               	bsf	(_SPort+2)& (0+255),0,b	;volatile
 27884  006BE0                     u62146:
 27885                           
 27886                           ; BSR set to: 0
 27887                           ;port.c: 69: SPort[3].Input=(PORTAbits.RA6&&PORTAbits.RA7)?1:0;
 27888  006BE0  6A20               	clrf	_RefStan$2768,c
 27889                           
 27890                           ; BSR set to: 0
 27891  006BE2  BC80               	btfsc	3968,6,c	;volatile
 27892                           
 27893                           ; BSR set to: 0
 27894  006BE4  AE80               	btfss	3968,7,c	;volatile
 27895  006BE6  D002               	goto	l33456
 27896                           
 27897                           ; BSR set to: 0
 27898  006BE8  0E01               	movlw	1
 27899  006BEA  6E20               	movwf	_RefStan$2768,c
 27900  006BEC                     l33456:
 27901                           
 27902                           ; BSR set to: 0
 27903  006BEC  B020               	btfsc	_RefStan$2768,0,c
 27904  006BEE  D002               	bra	u62175
 27905  006BF0  91B8               	bcf	(_SPort+3)& (0+255),0,b	;volatile
 27906  006BF2  D002               	bra	u62176
 27907  006BF4                     u62175:
 27908  006BF4  0100               	movlb	0	; () banked
 27909  006BF6  81B8               	bsf	(_SPort+3)& (0+255),0,b	;volatile
 27910  006BF8                     u62176:
 27911  006BF8  0E01               	movlw	1
 27912                           
 27913                           ; BSR set to: 0
 27914                           ;port.c: 71: SPort[4].Input=(PORTAbits.RA7)?1:0;
 27915  006BFA  AE80               	btfss	3968,7,c	;volatile
 27916  006BFC  0E00               	movlw	0
 27917  006BFE  6E1E               	movwf	??_RefStan& (0+255),c
 27918  006C00  51B9               	movf	(_SPort+4)& (0+255),w,b	;volatile
 27919  006C02  181E               	xorwf	??_RefStan,w,c
 27920  006C04  0BFE               	andlw	-2
 27921  006C06  181E               	xorwf	??_RefStan,w,c
 27922  006C08  6FB9               	movwf	(_SPort+4)& (0+255),b	;volatile
 27923  006C0A  0E01               	movlw	1
 27924                           
 27925                           ; BSR set to: 0
 27926                           ;port.c: 73: SPort[5].Input=(PORTDbits.RD4)?0:1;
 27927  006C0C  B883               	btfsc	3971,4,c	;volatile
 27928  006C0E  0E00               	movlw	0
 27929  006C10  6E1E               	movwf	??_RefStan& (0+255),c
 27930  006C12  51BA               	movf	(_SPort+5)& (0+255),w,b	;volatile
 27931  006C14  181E               	xorwf	??_RefStan,w,c
 27932  006C16  0BFE               	andlw	-2
 27933  006C18  181E               	xorwf	??_RefStan,w,c
 27934  006C1A  6FBA               	movwf	(_SPort+5)& (0+255),b	;volatile
 27935                           
 27936                           ; BSR set to: 0
 27937                           ;port.c: 75: SPort[6].Input=0;
 27938  006C1C  91BB               	bcf	(_SPort+6)& (0+255),0,b	;volatile
 27939                           
 27940                           ; BSR set to: 0
 27941                           ;port.c: 77: SPort[7].Input=0;
 27942  006C1E  91BC               	bcf	(_SPort+7)& (0+255),0,b	;volatile
 27943  006C20  0E01               	movlw	1
 27944                           
 27945                           ; BSR set to: 0
 27946                           ;port.c: 79: SPort[8].Input=(PORTCbits.RC5)?0:1;
 27947  006C22  BA82               	btfsc	3970,5,c	;volatile
 27948  006C24  0E00               	movlw	0
 27949  006C26  6E1E               	movwf	??_RefStan& (0+255),c
 27950  006C28  51BD               	movf	(_SPort+8)& (0+255),w,b	;volatile
 27951  006C2A  181E               	xorwf	??_RefStan,w,c
 27952  006C2C  0BFE               	andlw	-2
 27953  006C2E  181E               	xorwf	??_RefStan,w,c
 27954  006C30  6FBD               	movwf	(_SPort+8)& (0+255),b	;volatile
 27955  006C32  0E01               	movlw	1
 27956                           
 27957                           ; BSR set to: 0
 27958                           ;port.c: 81: SPort[9].Input=(DtCO._on_DZ_CO)?1:0;
 27959  006C34  ABE4               	btfss	_DtCO& (0+255),5,b
 27960  006C36  0E00               	movlw	0
 27961  006C38  6E1E               	movwf	??_RefStan& (0+255),c
 27962  006C3A  51BE               	movf	(_SPort+9)& (0+255),w,b	;volatile
 27963  006C3C  181E               	xorwf	??_RefStan,w,c
 27964  006C3E  0BFE               	andlw	-2
 27965  006C40  181E               	xorwf	??_RefStan,w,c
 27966  006C42  6FBE               	movwf	(_SPort+9)& (0+255),b	;volatile
 27967  006C44  0E01               	movlw	1
 27968                           
 27969                           ; BSR set to: 0
 27970                           ;port.c: 83: SPort[10].Input=(DtCW._on_DZ_CW)?1:0;
 27971  006C46  A9CF               	btfss	_DtCW& (0+255),4,b
 27972  006C48  0E00               	movlw	0
 27973  006C4A  6E1E               	movwf	??_RefStan& (0+255),c
 27974  006C4C  51BF               	movf	(_SPort+10)& (0+255),w,b	;volatile
 27975  006C4E  181E               	xorwf	??_RefStan,w,c
 27976  006C50  0BFE               	andlw	-2
 27977  006C52  181E               	xorwf	??_RefStan,w,c
 27978  006C54  6FBF               	movwf	(_SPort+10)& (0+255),b	;volatile
 27979  006C56  0E01               	movlw	1
 27980                           
 27981                           ; BSR set to: 0
 27982                           ;port.c: 85: SPort[11].Input=(PORTAbits.RA4)?0:1;
 27983  006C58  B880               	btfsc	3968,4,c	;volatile
 27984  006C5A  0E00               	movlw	0
 27985  006C5C  6E1E               	movwf	??_RefStan& (0+255),c
 27986  006C5E  51C0               	movf	(_SPort+11)& (0+255),w,b	;volatile
 27987  006C60  181E               	xorwf	??_RefStan,w,c
 27988  006C62  0BFE               	andlw	-2
 27989  006C64  181E               	xorwf	??_RefStan,w,c
 27990  006C66  6FC0               	movwf	(_SPort+11)& (0+255),b	;volatile
 27991  006C68  0E01               	movlw	1
 27992                           
 27993                           ; BSR set to: 0
 27994                           ;port.c: 87: SPort[12].Input=(PORTDbits.RD5)?1:0;
 27995  006C6A  AA83               	btfss	3971,5,c	;volatile
 27996  006C6C  0E00               	movlw	0
 27997  006C6E  6E1E               	movwf	??_RefStan& (0+255),c
 27998  006C70  51C1               	movf	(_SPort+12)& (0+255),w,b	;volatile
 27999  006C72  181E               	xorwf	??_RefStan,w,c
 28000  006C74  0BFE               	andlw	-2
 28001  006C76  181E               	xorwf	??_RefStan,w,c
 28002  006C78  6FC1               	movwf	(_SPort+12)& (0+255),b	;volatile
 28003                           
 28004                           ; BSR set to: 0
 28005                           ;port.c: 89: SPort[13].Input=(DtCO._cold_CO||DtCO._hot_CO)?1:0;
 28006  006C7A  0E01               	movlw	1
 28007  006C7C  6E21               	movwf	_RefStan$2769,c
 28008                           
 28009                           ; BSR set to: 0
 28010  006C7E  A5E5               	btfss	(_DtCO+1)& (0+255),2,b
 28011                           
 28012                           ; BSR set to: 0
 28013  006C80  B7E5               	btfsc	(_DtCO+1)& (0+255),3,b
 28014  006C82  D001               	goto	l2335
 28015                           
 28016                           ; BSR set to: 0
 28017  006C84  6A21               	clrf	_RefStan$2769,c
 28018  006C86                     l2335:
 28019                           
 28020                           ; BSR set to: 0
 28021  006C86  B021               	btfsc	_RefStan$2769,0,c
 28022  006C88  D002               	bra	u62275
 28023  006C8A  91C2               	bcf	(_SPort+13)& (0+255),0,b	;volatile
 28024  006C8C  D002               	bra	u62276
 28025  006C8E                     u62275:
 28026  006C8E  0100               	movlb	0	; () banked
 28027  006C90  81C2               	bsf	(_SPort+13)& (0+255),0,b	;volatile
 28028  006C92                     u62276:
 28029  006C92  0E01               	movlw	1
 28030                           
 28031                           ; BSR set to: 0
 28032                           ;port.c: 91: SPort[14].Input=(DtCS._error)?1:0;
 28033  006C94  A631               	btfss	_DtCS,3,c
 28034  006C96  0E00               	movlw	0
 28035  006C98  6E1E               	movwf	??_RefStan& (0+255),c
 28036  006C9A  51C3               	movf	(_SPort+14)& (0+255),w,b	;volatile
 28037  006C9C  181E               	xorwf	??_RefStan,w,c
 28038  006C9E  0BFE               	andlw	-2
 28039  006CA0  181E               	xorwf	??_RefStan,w,c
 28040  006CA2  6FC3               	movwf	(_SPort+14)& (0+255),b	;volatile
 28041  006CA4  0E01               	movlw	1
 28042                           
 28043                           ;port.c: 93: SPort[15].Input=(DtCS._work)?1:0;
 28044  006CA6  A831               	btfss	_DtCS,4,c
 28045  006CA8  0E00               	movlw	0
 28046  006CAA  6E1E               	movwf	??_RefStan& (0+255),c
 28047  006CAC  51C4               	movf	(_SPort+15)& (0+255),w,b	;volatile
 28048  006CAE  181E               	xorwf	??_RefStan,w,c
 28049  006CB0  0BFE               	andlw	-2
 28050  006CB2  181E               	xorwf	??_RefStan,w,c
 28051  006CB4  6FC4               	movwf	(_SPort+15)& (0+255),b	;volatile
 28052  006CB6  0E01               	movlw	1
 28053                           
 28054                           ;port.c: 95: SPort[16].Input=(DtCS._lo)?1:0;
 28055  006CB8  A231               	btfss	_DtCS,1,c
 28056  006CBA  0E00               	movlw	0
 28057  006CBC  6E1E               	movwf	??_RefStan& (0+255),c
 28058  006CBE  51C5               	movf	(_SPort+16)& (0+255),w,b	;volatile
 28059  006CC0  181E               	xorwf	??_RefStan,w,c
 28060  006CC2  0BFE               	andlw	-2
 28061  006CC4  181E               	xorwf	??_RefStan,w,c
 28062  006CC6  6FC5               	movwf	(_SPort+16)& (0+255),b	;volatile
 28063  006CC8  0E01               	movlw	1
 28064                           
 28065                           ;port.c: 97: SPort[17].Input=(DtCW._cold_CW)?1:0;
 28066  006CCA  AFCF               	btfss	_DtCW& (0+255),7,b
 28067  006CCC  0E00               	movlw	0
 28068  006CCE  6E1E               	movwf	??_RefStan& (0+255),c
 28069  006CD0  51C6               	movf	(_SPort+17)& (0+255),w,b	;volatile
 28070  006CD2  181E               	xorwf	??_RefStan,w,c
 28071  006CD4  0BFE               	andlw	-2
 28072  006CD6  181E               	xorwf	??_RefStan,w,c
 28073  006CD8  6FC6               	movwf	(_SPort+17)& (0+255),b	;volatile
 28074  006CDA  0E01               	movlw	1
 28075                           
 28076                           ;port.c: 99: SPort[18].Input=(DtCO._err_CO)?1:0;
 28077  006CDC  A1E4               	btfss	_DtCO& (0+255),0,b
 28078  006CDE  0E00               	movlw	0
 28079  006CE0  6E1E               	movwf	??_RefStan& (0+255),c
 28080  006CE2  51C7               	movf	(_SPort+18)& (0+255),w,b	;volatile
 28081  006CE4  181E               	xorwf	??_RefStan,w,c
 28082  006CE6  0BFE               	andlw	-2
 28083  006CE8  181E               	xorwf	??_RefStan,w,c
 28084  006CEA  6FC7               	movwf	(_SPort+18)& (0+255),b	;volatile
 28085  006CEC  0E01               	movlw	1
 28086                           
 28087                           ;port.c: 101: SPort[19].Input=(DtCO._ad_CO)?1:0;
 28088  006CEE  A5E4               	btfss	_DtCO& (0+255),2,b
 28089  006CF0  0E00               	movlw	0
 28090  006CF2  6E1E               	movwf	??_RefStan& (0+255),c
 28091  006CF4  51C8               	movf	(_SPort+19)& (0+255),w,b	;volatile
 28092  006CF6  181E               	xorwf	??_RefStan,w,c
 28093  006CF8  0BFE               	andlw	-2
 28094  006CFA  181E               	xorwf	??_RefStan,w,c
 28095  006CFC  6FC8               	movwf	(_SPort+19)& (0+255),b	;volatile
 28096                           
 28097                           ;port.c: 103: SPort[20].Input=(DtZW._on_ZW)?1:0;
 28098  006CFE  0101               	movlb	1	; () banked
 28099  006D00  0E01               	movlw	1
 28100  006D02  A181               	btfss	_DtZW& (0+255),0,b
 28101  006D04  0E00               	movlw	0
 28102  006D06  6E1E               	movwf	??_RefStan& (0+255),c
 28103  006D08  0100               	movlb	0	; () banked
 28104  006D0A  51C9               	movf	(_SPort+20)& (0+255),w,b	;volatile
 28105  006D0C  181E               	xorwf	??_RefStan,w,c
 28106  006D0E  0BFE               	andlw	-2
 28107  006D10  181E               	xorwf	??_RefStan,w,c
 28108  006D12  6FC9               	movwf	(_SPort+20)& (0+255),b	;volatile
 28109  006D14  0E01               	movlw	1
 28110                           
 28111                           ;port.c: 105: SPort[21].Input=(PORTAbits.RA6)?1:0;
 28112  006D16  AC80               	btfss	3968,6,c	;volatile
 28113  006D18  0E00               	movlw	0
 28114  006D1A  6E1E               	movwf	??_RefStan& (0+255),c
 28115  006D1C  51CA               	movf	(_SPort+21)& (0+255),w,b	;volatile
 28116  006D1E  181E               	xorwf	??_RefStan,w,c
 28117  006D20  0BFE               	andlw	-2
 28118  006D22  181E               	xorwf	??_RefStan,w,c
 28119  006D24  6FCA               	movwf	(_SPort+21)& (0+255),b	;volatile
 28120  006D26  0E01               	movlw	1
 28121                           
 28122                           ;port.c: 107: SPort[22].Input=(PORTBbits.RB1)?0:1;
 28123  006D28  B281               	btfsc	3969,1,c	;volatile
 28124  006D2A  0E00               	movlw	0
 28125  006D2C  6E1E               	movwf	??_RefStan& (0+255),c
 28126  006D2E  51CB               	movf	(_SPort+22)& (0+255),w,b	;volatile
 28127  006D30  181E               	xorwf	??_RefStan,w,c
 28128  006D32  0BFE               	andlw	-2
 28129  006D34  181E               	xorwf	??_RefStan,w,c
 28130  006D36  6FCB               	movwf	(_SPort+22)& (0+255),b	;volatile
 28131  006D38  0E01               	movlw	1
 28132                           
 28133                           ;port.c: 109: SPort[23].Input=(PORTBbits.RB2)?0:1;
 28134  006D3A  B481               	btfsc	3969,2,c	;volatile
 28135  006D3C  0E00               	movlw	0
 28136  006D3E  6E1E               	movwf	??_RefStan& (0+255),c
 28137  006D40  51CC               	movf	(_SPort+23)& (0+255),w,b	;volatile
 28138  006D42  181E               	xorwf	??_RefStan,w,c
 28139  006D44  0BFE               	andlw	-2
 28140  006D46  181E               	xorwf	??_RefStan,w,c
 28141  006D48  6FCC               	movwf	(_SPort+23)& (0+255),b	;volatile
 28142  006D4A  0E01               	movlw	1
 28143                           
 28144                           ;port.c: 111: SPort[24].Input=(PORTBbits.RB4)?0:1;
 28145  006D4C  B881               	btfsc	3969,4,c	;volatile
 28146  006D4E  0E00               	movlw	0
 28147  006D50  6E1E               	movwf	??_RefStan& (0+255),c
 28148  006D52  51CD               	movf	(_SPort+24)& (0+255),w,b	;volatile
 28149  006D54  181E               	xorwf	??_RefStan,w,c
 28150  006D56  0BFE               	andlw	-2
 28151  006D58  181E               	xorwf	??_RefStan,w,c
 28152  006D5A  6FCD               	movwf	(_SPort+24)& (0+255),b	;volatile
 28153  006D5C  0E01               	movlw	1
 28154                           
 28155                           ;port.c: 113: SPort[25].Input=(PORTBbits.RB3)?0:1;
 28156  006D5E  B681               	btfsc	3969,3,c	;volatile
 28157  006D60  0E00               	movlw	0
 28158  006D62  6E1E               	movwf	??_RefStan& (0+255),c
 28159  006D64  51CE               	movf	(_SPort+25)& (0+255),w,b	;volatile
 28160  006D66  181E               	xorwf	??_RefStan,w,c
 28161  006D68  0BFE               	andlw	-2
 28162  006D6A  181E               	xorwf	??_RefStan,w,c
 28163  006D6C  6FCE               	movwf	(_SPort+25)& (0+255),b	;volatile
 28164                           
 28165                           ; BSR set to: 0
 28166  006D6E  0012               	return	
 28167  006D70                     __end_of_RefStan:
 28168                           	opt stack 0
 28169                           tblptru	equ	0xFF8
 28170                           tblptrh	equ	0xFF7
 28171                           tblptrl	equ	0xFF6
 28172                           tablat	equ	0xFF5
 28173                           prodh	equ	0xFF4
 28174                           prodl	equ	0xFF3
 28175                           intcon	equ	0xFF2
 28176                           postinc0	equ	0xFEE
 28177                           wreg	equ	0xFE8
 28178                           indf1	equ	0xFE7
 28179                           postinc1	equ	0xFE6
 28180                           postdec1	equ	0xFE5
 28181                           fsr1h	equ	0xFE2
 28182                           fsr1l	equ	0xFE1
 28183                           indf2	equ	0xFDF
 28184                           postinc2	equ	0xFDE
 28185                           postdec2	equ	0xFDD
 28186                           fsr2h	equ	0xFDA
 28187                           fsr2l	equ	0xFD9
 28188                           status	equ	0xFD8
 28189                           
 28190 ;; *************** function _FrsStan *****************
 28191 ;; Defined at:
 28192 ;;		line 120 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
 28193 ;; Parameters:    Size  Location     Type
 28194 ;;		None
 28195 ;; Auto vars:     Size  Location     Type
 28196 ;;		None
 28197 ;; Return value:  Size  Location     Type
 28198 ;;		None               void
 28199 ;; Registers used:
 28200 ;;		wreg, status,2
 28201 ;; Tracked objects:
 28202 ;;		On entry : F/0
 28203 ;;		On exit  : F/0
 28204 ;;		Unchanged: FFFFFFF0/0
 28205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28210 ;;Total ram usage:        0 bytes
 28211 ;; Hardware stack levels used:    1
 28212 ;; Hardware stack levels required when called:    4
 28213 ;; This function calls:
 28214 ;;		Nothing
 28215 ;; This function is called by:
 28216 ;;		_InitPort
 28217 ;; This function uses a non-reentrant model
 28218 ;;
 28219                           
 28220                           	psect	text117
 28221  0070E0                     __ptext117:
 28222                           	opt stack 0
 28223  0070E0                     _FrsStan:
 28224                           	opt stack 25
 28225                           
 28226                           ; BSR set to: 0
 28227                           ;port.c: 122: SPort[0].Output=SPort[0].Input;
 28228                           
 28229                           ; BSR set to: 0
 28230  0070E0  A1B5               	btfss	_SPort& (0+255),0,b	;volatile
 28231  0070E2  D002               	bra	u62405
 28232  0070E4  83B5               	bsf	_SPort& (0+255),1,b	;volatile
 28233  0070E6  D002               	bra	u62407
 28234  0070E8                     u62405:
 28235  0070E8  0100               	movlb	0	; () banked
 28236  0070EA  93B5               	bcf	_SPort& (0+255),1,b	;volatile
 28237  0070EC                     u62407:
 28238                           
 28239                           ; BSR set to: 0
 28240                           ;port.c: 123: SPort[0].Timer=0;
 28241  0070EC  0E03               	movlw	-253
 28242  0070EE  17B5               	andwf	_SPort& (0+255),f,b	;volatile
 28243                           
 28244                           ; BSR set to: 0
 28245                           ;port.c: 126: SPort[1].Output=SPort[1].Input;
 28246  0070F0  A1B6               	btfss	(_SPort+1)& (0+255),0,b	;volatile
 28247  0070F2  D002               	bra	u62415
 28248  0070F4  83B6               	bsf	(_SPort+1)& (0+255),1,b	;volatile
 28249  0070F6  D002               	bra	u62417
 28250  0070F8                     u62415:
 28251  0070F8  0100               	movlb	0	; () banked
 28252  0070FA  93B6               	bcf	(_SPort+1)& (0+255),1,b	;volatile
 28253  0070FC                     u62417:
 28254                           
 28255                           ;port.c: 127: SPort[1].Timer=0;
 28256  0070FC  0E03               	movlw	-253
 28257  0070FE  17B6               	andwf	(_SPort+1)& (0+255),f,b	;volatile
 28258                           
 28259                           ; BSR set to: 0
 28260                           ;port.c: 130: SPort[2].Output=SPort[2].Input;
 28261  007100  A1B7               	btfss	(_SPort+2)& (0+255),0,b	;volatile
 28262  007102  D002               	bra	u62425
 28263  007104  83B7               	bsf	(_SPort+2)& (0+255),1,b	;volatile
 28264  007106  D002               	bra	u62427
 28265  007108                     u62425:
 28266  007108  0100               	movlb	0	; () banked
 28267  00710A  93B7               	bcf	(_SPort+2)& (0+255),1,b	;volatile
 28268  00710C                     u62427:
 28269                           
 28270                           ;port.c: 131: SPort[2].Timer=0;
 28271  00710C  0E03               	movlw	-253
 28272  00710E  17B7               	andwf	(_SPort+2)& (0+255),f,b	;volatile
 28273                           
 28274                           ; BSR set to: 0
 28275                           ;port.c: 134: SPort[3].Output=SPort[3].Input;
 28276  007110  A1B8               	btfss	(_SPort+3)& (0+255),0,b	;volatile
 28277  007112  D002               	bra	u62435
 28278  007114  83B8               	bsf	(_SPort+3)& (0+255),1,b	;volatile
 28279  007116  D002               	bra	u62437
 28280  007118                     u62435:
 28281  007118  0100               	movlb	0	; () banked
 28282  00711A  93B8               	bcf	(_SPort+3)& (0+255),1,b	;volatile
 28283  00711C                     u62437:
 28284                           
 28285                           ;port.c: 135: SPort[3].Timer=0;
 28286  00711C  0E03               	movlw	-253
 28287  00711E  17B8               	andwf	(_SPort+3)& (0+255),f,b	;volatile
 28288                           
 28289                           ; BSR set to: 0
 28290                           ;port.c: 138: SPort[4].Output=SPort[4].Input;
 28291  007120  A1B9               	btfss	(_SPort+4)& (0+255),0,b	;volatile
 28292  007122  D002               	bra	u62445
 28293  007124  83B9               	bsf	(_SPort+4)& (0+255),1,b	;volatile
 28294  007126  D002               	bra	u62447
 28295  007128                     u62445:
 28296  007128  0100               	movlb	0	; () banked
 28297  00712A  93B9               	bcf	(_SPort+4)& (0+255),1,b	;volatile
 28298  00712C                     u62447:
 28299                           
 28300                           ;port.c: 139: SPort[4].Timer=0;
 28301  00712C  0E03               	movlw	-253
 28302  00712E  17B9               	andwf	(_SPort+4)& (0+255),f,b	;volatile
 28303                           
 28304                           ; BSR set to: 0
 28305                           ;port.c: 142: SPort[5].Output=SPort[5].Input;
 28306  007130  A1BA               	btfss	(_SPort+5)& (0+255),0,b	;volatile
 28307  007132  D002               	bra	u62455
 28308  007134  83BA               	bsf	(_SPort+5)& (0+255),1,b	;volatile
 28309  007136  D002               	bra	u62457
 28310  007138                     u62455:
 28311  007138  0100               	movlb	0	; () banked
 28312  00713A  93BA               	bcf	(_SPort+5)& (0+255),1,b	;volatile
 28313  00713C                     u62457:
 28314                           
 28315                           ;port.c: 143: SPort[5].Timer=0;
 28316  00713C  0E03               	movlw	-253
 28317  00713E  17BA               	andwf	(_SPort+5)& (0+255),f,b	;volatile
 28318                           
 28319                           ; BSR set to: 0
 28320                           ;port.c: 146: SPort[6].Output=SPort[6].Input;
 28321  007140  A1BB               	btfss	(_SPort+6)& (0+255),0,b	;volatile
 28322  007142  D002               	bra	u62465
 28323  007144  83BB               	bsf	(_SPort+6)& (0+255),1,b	;volatile
 28324  007146  D002               	bra	u62467
 28325  007148                     u62465:
 28326  007148  0100               	movlb	0	; () banked
 28327  00714A  93BB               	bcf	(_SPort+6)& (0+255),1,b	;volatile
 28328  00714C                     u62467:
 28329                           
 28330                           ;port.c: 147: SPort[6].Timer=0;
 28331  00714C  0E03               	movlw	-253
 28332  00714E  17BB               	andwf	(_SPort+6)& (0+255),f,b	;volatile
 28333                           
 28334                           ; BSR set to: 0
 28335                           ;port.c: 150: SPort[7].Output=SPort[7].Input;
 28336  007150  A1BC               	btfss	(_SPort+7)& (0+255),0,b	;volatile
 28337  007152  D002               	bra	u62475
 28338  007154  83BC               	bsf	(_SPort+7)& (0+255),1,b	;volatile
 28339  007156  D002               	bra	u62477
 28340  007158                     u62475:
 28341  007158  0100               	movlb	0	; () banked
 28342  00715A  93BC               	bcf	(_SPort+7)& (0+255),1,b	;volatile
 28343  00715C                     u62477:
 28344                           
 28345                           ;port.c: 151: SPort[7].Timer=0;
 28346  00715C  0E03               	movlw	-253
 28347  00715E  17BC               	andwf	(_SPort+7)& (0+255),f,b	;volatile
 28348                           
 28349                           ; BSR set to: 0
 28350                           ;port.c: 154: SPort[8].Output=SPort[8].Input;
 28351  007160  A1BD               	btfss	(_SPort+8)& (0+255),0,b	;volatile
 28352  007162  D002               	bra	u62485
 28353  007164  83BD               	bsf	(_SPort+8)& (0+255),1,b	;volatile
 28354  007166  D002               	bra	u62487
 28355  007168                     u62485:
 28356  007168  0100               	movlb	0	; () banked
 28357  00716A  93BD               	bcf	(_SPort+8)& (0+255),1,b	;volatile
 28358  00716C                     u62487:
 28359                           
 28360                           ;port.c: 155: SPort[8].Timer=0;
 28361  00716C  0E03               	movlw	-253
 28362  00716E  17BD               	andwf	(_SPort+8)& (0+255),f,b	;volatile
 28363                           
 28364                           ; BSR set to: 0
 28365                           ;port.c: 158: SPort[9].Output=SPort[9].Input;
 28366  007170  A1BE               	btfss	(_SPort+9)& (0+255),0,b	;volatile
 28367  007172  D002               	bra	u62495
 28368  007174  83BE               	bsf	(_SPort+9)& (0+255),1,b	;volatile
 28369  007176  D002               	bra	u62497
 28370  007178                     u62495:
 28371  007178  0100               	movlb	0	; () banked
 28372  00717A  93BE               	bcf	(_SPort+9)& (0+255),1,b	;volatile
 28373  00717C                     u62497:
 28374                           
 28375                           ;port.c: 159: SPort[9].Timer=0;
 28376  00717C  0E03               	movlw	-253
 28377  00717E  17BE               	andwf	(_SPort+9)& (0+255),f,b	;volatile
 28378                           
 28379                           ; BSR set to: 0
 28380                           ;port.c: 162: SPort[10].Output=SPort[10].Input;
 28381  007180  A1BF               	btfss	(_SPort+10)& (0+255),0,b	;volatile
 28382  007182  D002               	bra	u62505
 28383  007184  83BF               	bsf	(_SPort+10)& (0+255),1,b	;volatile
 28384  007186  D002               	bra	u62507
 28385  007188                     u62505:
 28386  007188  0100               	movlb	0	; () banked
 28387  00718A  93BF               	bcf	(_SPort+10)& (0+255),1,b	;volatile
 28388  00718C                     u62507:
 28389                           
 28390                           ;port.c: 163: SPort[10].Timer=0;
 28391  00718C  0E03               	movlw	-253
 28392  00718E  17BF               	andwf	(_SPort+10)& (0+255),f,b	;volatile
 28393                           
 28394                           ; BSR set to: 0
 28395                           ;port.c: 166: SPort[11].Output=SPort[11].Input;
 28396  007190  A1C0               	btfss	(_SPort+11)& (0+255),0,b	;volatile
 28397  007192  D002               	bra	u62515
 28398  007194  83C0               	bsf	(_SPort+11)& (0+255),1,b	;volatile
 28399  007196  D002               	bra	u62517
 28400  007198                     u62515:
 28401  007198  0100               	movlb	0	; () banked
 28402  00719A  93C0               	bcf	(_SPort+11)& (0+255),1,b	;volatile
 28403  00719C                     u62517:
 28404                           
 28405                           ;port.c: 167: SPort[11].Timer=0;
 28406  00719C  0E03               	movlw	-253
 28407  00719E  17C0               	andwf	(_SPort+11)& (0+255),f,b	;volatile
 28408                           
 28409                           ; BSR set to: 0
 28410                           ;port.c: 170: SPort[12].Output=SPort[12].Input;
 28411  0071A0  A1C1               	btfss	(_SPort+12)& (0+255),0,b	;volatile
 28412  0071A2  D002               	bra	u62525
 28413  0071A4  83C1               	bsf	(_SPort+12)& (0+255),1,b	;volatile
 28414  0071A6  D002               	bra	u62527
 28415  0071A8                     u62525:
 28416  0071A8  0100               	movlb	0	; () banked
 28417  0071AA  93C1               	bcf	(_SPort+12)& (0+255),1,b	;volatile
 28418  0071AC                     u62527:
 28419                           
 28420                           ;port.c: 171: SPort[12].Timer=0;
 28421  0071AC  0E03               	movlw	-253
 28422  0071AE  17C1               	andwf	(_SPort+12)& (0+255),f,b	;volatile
 28423                           
 28424                           ; BSR set to: 0
 28425                           ;port.c: 174: SPort[13].Output=SPort[13].Input;
 28426  0071B0  A1C2               	btfss	(_SPort+13)& (0+255),0,b	;volatile
 28427  0071B2  D002               	bra	u62535
 28428  0071B4  83C2               	bsf	(_SPort+13)& (0+255),1,b	;volatile
 28429  0071B6  D002               	bra	u62537
 28430  0071B8                     u62535:
 28431  0071B8  0100               	movlb	0	; () banked
 28432  0071BA  93C2               	bcf	(_SPort+13)& (0+255),1,b	;volatile
 28433  0071BC                     u62537:
 28434                           
 28435                           ;port.c: 175: SPort[13].Timer=0;
 28436  0071BC  0E03               	movlw	-253
 28437  0071BE  17C2               	andwf	(_SPort+13)& (0+255),f,b	;volatile
 28438                           
 28439                           ; BSR set to: 0
 28440                           ;port.c: 178: SPort[14].Output=SPort[14].Input;
 28441  0071C0  A1C3               	btfss	(_SPort+14)& (0+255),0,b	;volatile
 28442  0071C2  D002               	bra	u62545
 28443  0071C4  83C3               	bsf	(_SPort+14)& (0+255),1,b	;volatile
 28444  0071C6  D002               	bra	u62547
 28445  0071C8                     u62545:
 28446  0071C8  0100               	movlb	0	; () banked
 28447  0071CA  93C3               	bcf	(_SPort+14)& (0+255),1,b	;volatile
 28448  0071CC                     u62547:
 28449                           
 28450                           ;port.c: 179: SPort[14].Timer=0;
 28451  0071CC  0E03               	movlw	-253
 28452  0071CE  17C3               	andwf	(_SPort+14)& (0+255),f,b	;volatile
 28453                           
 28454                           ; BSR set to: 0
 28455                           ;port.c: 182: SPort[15].Output=SPort[15].Input;
 28456  0071D0  A1C4               	btfss	(_SPort+15)& (0+255),0,b	;volatile
 28457  0071D2  D002               	bra	u62555
 28458  0071D4  83C4               	bsf	(_SPort+15)& (0+255),1,b	;volatile
 28459  0071D6  D002               	bra	u62557
 28460  0071D8                     u62555:
 28461  0071D8  0100               	movlb	0	; () banked
 28462  0071DA  93C4               	bcf	(_SPort+15)& (0+255),1,b	;volatile
 28463  0071DC                     u62557:
 28464                           
 28465                           ;port.c: 183: SPort[15].Timer=0;
 28466  0071DC  0E03               	movlw	-253
 28467  0071DE  17C4               	andwf	(_SPort+15)& (0+255),f,b	;volatile
 28468                           
 28469                           ; BSR set to: 0
 28470                           ;port.c: 186: SPort[16].Output=SPort[16].Input;
 28471  0071E0  A1C5               	btfss	(_SPort+16)& (0+255),0,b	;volatile
 28472  0071E2  D002               	bra	u62565
 28473  0071E4  83C5               	bsf	(_SPort+16)& (0+255),1,b	;volatile
 28474  0071E6  D002               	bra	u62567
 28475  0071E8                     u62565:
 28476  0071E8  0100               	movlb	0	; () banked
 28477  0071EA  93C5               	bcf	(_SPort+16)& (0+255),1,b	;volatile
 28478  0071EC                     u62567:
 28479                           
 28480                           ;port.c: 187: SPort[16].Timer=0;
 28481  0071EC  0E03               	movlw	-253
 28482  0071EE  17C5               	andwf	(_SPort+16)& (0+255),f,b	;volatile
 28483                           
 28484                           ; BSR set to: 0
 28485                           ;port.c: 190: SPort[17].Output=SPort[17].Input;
 28486  0071F0  A1C6               	btfss	(_SPort+17)& (0+255),0,b	;volatile
 28487  0071F2  D002               	bra	u62575
 28488  0071F4  83C6               	bsf	(_SPort+17)& (0+255),1,b	;volatile
 28489  0071F6  D002               	bra	u62577
 28490  0071F8                     u62575:
 28491  0071F8  0100               	movlb	0	; () banked
 28492  0071FA  93C6               	bcf	(_SPort+17)& (0+255),1,b	;volatile
 28493  0071FC                     u62577:
 28494                           
 28495                           ;port.c: 191: SPort[17].Timer=0;
 28496  0071FC  0E03               	movlw	-253
 28497  0071FE  17C6               	andwf	(_SPort+17)& (0+255),f,b	;volatile
 28498                           
 28499                           ; BSR set to: 0
 28500                           ;port.c: 194: SPort[18].Output=SPort[18].Input;
 28501  007200  A1C7               	btfss	(_SPort+18)& (0+255),0,b	;volatile
 28502  007202  D002               	bra	u62585
 28503  007204  83C7               	bsf	(_SPort+18)& (0+255),1,b	;volatile
 28504  007206  D002               	bra	u62587
 28505  007208                     u62585:
 28506  007208  0100               	movlb	0	; () banked
 28507  00720A  93C7               	bcf	(_SPort+18)& (0+255),1,b	;volatile
 28508  00720C                     u62587:
 28509                           
 28510                           ;port.c: 195: SPort[18].Timer=0;
 28511  00720C  0E03               	movlw	-253
 28512  00720E  17C7               	andwf	(_SPort+18)& (0+255),f,b	;volatile
 28513                           
 28514                           ; BSR set to: 0
 28515                           ;port.c: 198: SPort[19].Output=SPort[19].Input;
 28516  007210  A1C8               	btfss	(_SPort+19)& (0+255),0,b	;volatile
 28517  007212  D002               	bra	u62595
 28518  007214  83C8               	bsf	(_SPort+19)& (0+255),1,b	;volatile
 28519  007216  D002               	bra	u62597
 28520  007218                     u62595:
 28521  007218  0100               	movlb	0	; () banked
 28522  00721A  93C8               	bcf	(_SPort+19)& (0+255),1,b	;volatile
 28523  00721C                     u62597:
 28524                           
 28525                           ;port.c: 199: SPort[19].Timer=0;
 28526  00721C  0E03               	movlw	-253
 28527  00721E  17C8               	andwf	(_SPort+19)& (0+255),f,b	;volatile
 28528                           
 28529                           ; BSR set to: 0
 28530                           ;port.c: 202: SPort[20].Output=SPort[20].Input;
 28531  007220  A1C9               	btfss	(_SPort+20)& (0+255),0,b	;volatile
 28532  007222  D002               	bra	u62605
 28533  007224  83C9               	bsf	(_SPort+20)& (0+255),1,b	;volatile
 28534  007226  D002               	bra	u62607
 28535  007228                     u62605:
 28536  007228  0100               	movlb	0	; () banked
 28537  00722A  93C9               	bcf	(_SPort+20)& (0+255),1,b	;volatile
 28538  00722C                     u62607:
 28539                           
 28540                           ;port.c: 203: SPort[20].Timer=0;
 28541  00722C  0E03               	movlw	-253
 28542  00722E  17C9               	andwf	(_SPort+20)& (0+255),f,b	;volatile
 28543                           
 28544                           ; BSR set to: 0
 28545                           ;port.c: 206: SPort[21].Output=SPort[21].Input;
 28546  007230  A1CA               	btfss	(_SPort+21)& (0+255),0,b	;volatile
 28547  007232  D002               	bra	u62615
 28548  007234  83CA               	bsf	(_SPort+21)& (0+255),1,b	;volatile
 28549  007236  D002               	bra	u62617
 28550  007238                     u62615:
 28551  007238  0100               	movlb	0	; () banked
 28552  00723A  93CA               	bcf	(_SPort+21)& (0+255),1,b	;volatile
 28553  00723C                     u62617:
 28554                           
 28555                           ;port.c: 207: SPort[21].Timer=0;
 28556  00723C  0E03               	movlw	-253
 28557  00723E  17CA               	andwf	(_SPort+21)& (0+255),f,b	;volatile
 28558                           
 28559                           ; BSR set to: 0
 28560                           ;port.c: 210: SPort[22].Output=SPort[22].Input;
 28561  007240  A1CB               	btfss	(_SPort+22)& (0+255),0,b	;volatile
 28562  007242  D002               	bra	u62625
 28563  007244  83CB               	bsf	(_SPort+22)& (0+255),1,b	;volatile
 28564  007246  D002               	bra	u62627
 28565  007248                     u62625:
 28566  007248  0100               	movlb	0	; () banked
 28567  00724A  93CB               	bcf	(_SPort+22)& (0+255),1,b	;volatile
 28568  00724C                     u62627:
 28569                           
 28570                           ;port.c: 211: SPort[22].Timer=0;
 28571  00724C  0E03               	movlw	-253
 28572  00724E  17CB               	andwf	(_SPort+22)& (0+255),f,b	;volatile
 28573                           
 28574                           ; BSR set to: 0
 28575                           ;port.c: 214: SPort[23].Output=SPort[23].Input;
 28576  007250  A1CC               	btfss	(_SPort+23)& (0+255),0,b	;volatile
 28577  007252  D002               	bra	u62635
 28578  007254  83CC               	bsf	(_SPort+23)& (0+255),1,b	;volatile
 28579  007256  D002               	bra	u62637
 28580  007258                     u62635:
 28581  007258  0100               	movlb	0	; () banked
 28582  00725A  93CC               	bcf	(_SPort+23)& (0+255),1,b	;volatile
 28583  00725C                     u62637:
 28584                           
 28585                           ;port.c: 215: SPort[23].Timer=0;
 28586  00725C  0E03               	movlw	-253
 28587  00725E  17CC               	andwf	(_SPort+23)& (0+255),f,b	;volatile
 28588                           
 28589                           ; BSR set to: 0
 28590                           ;port.c: 218: SPort[24].Output=SPort[24].Input;
 28591  007260  A1CD               	btfss	(_SPort+24)& (0+255),0,b	;volatile
 28592  007262  D002               	bra	u62645
 28593  007264  83CD               	bsf	(_SPort+24)& (0+255),1,b	;volatile
 28594  007266  D002               	bra	u62647
 28595  007268                     u62645:
 28596  007268  0100               	movlb	0	; () banked
 28597  00726A  93CD               	bcf	(_SPort+24)& (0+255),1,b	;volatile
 28598  00726C                     u62647:
 28599                           
 28600                           ;port.c: 219: SPort[24].Timer=0;
 28601  00726C  0E03               	movlw	-253
 28602  00726E  17CD               	andwf	(_SPort+24)& (0+255),f,b	;volatile
 28603                           
 28604                           ; BSR set to: 0
 28605                           ;port.c: 222: SPort[25].Output=SPort[25].Input;
 28606  007270  A1CE               	btfss	(_SPort+25)& (0+255),0,b	;volatile
 28607  007272  D002               	bra	u62655
 28608  007274  83CE               	bsf	(_SPort+25)& (0+255),1,b	;volatile
 28609  007276  D002               	bra	u62657
 28610  007278                     u62655:
 28611  007278  0100               	movlb	0	; () banked
 28612  00727A  93CE               	bcf	(_SPort+25)& (0+255),1,b	;volatile
 28613  00727C                     u62657:
 28614                           
 28615                           ;port.c: 223: SPort[25].Timer=0;
 28616  00727C  0E03               	movlw	-253
 28617  00727E  17CE               	andwf	(_SPort+25)& (0+255),f,b	;volatile
 28618                           
 28619                           ; BSR set to: 0
 28620  007280  0C03               	retlw	3
 28621  007282                     __end_of_FrsStan:
 28622                           	opt stack 0
 28623                           tblptru	equ	0xFF8
 28624                           tblptrh	equ	0xFF7
 28625                           tblptrl	equ	0xFF6
 28626                           tablat	equ	0xFF5
 28627                           prodh	equ	0xFF4
 28628                           prodl	equ	0xFF3
 28629                           intcon	equ	0xFF2
 28630                           postinc0	equ	0xFEE
 28631                           wreg	equ	0xFE8
 28632                           indf1	equ	0xFE7
 28633                           postinc1	equ	0xFE6
 28634                           postdec1	equ	0xFE5
 28635                           fsr1h	equ	0xFE2
 28636                           fsr1l	equ	0xFE1
 28637                           indf2	equ	0xFDF
 28638                           postinc2	equ	0xFDE
 28639                           postdec2	equ	0xFDD
 28640                           fsr2h	equ	0xFDA
 28641                           fsr2l	equ	0xFD9
 28642                           status	equ	0xFD8
 28643                           
 28644 ;; *************** function _WswOff *****************
 28645 ;; Defined at:
 28646 ;;		line 630 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 28647 ;; Parameters:    Size  Location     Type
 28648 ;;		None
 28649 ;; Auto vars:     Size  Location     Type
 28650 ;;		None
 28651 ;; Return value:  Size  Location     Type
 28652 ;;		None               void
 28653 ;; Registers used:
 28654 ;;		None
 28655 ;; Tracked objects:
 28656 ;;		On entry : F/0
 28657 ;;		On exit  : F/1
 28658 ;;		Unchanged: FFFFFFF0/0
 28659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28664 ;;Total ram usage:        0 bytes
 28665 ;; Hardware stack levels used:    1
 28666 ;; Hardware stack levels required when called:    4
 28667 ;; This function calls:
 28668 ;;		Nothing
 28669 ;; This function is called by:
 28670 ;;		_ClsScr
 28671 ;; This function uses a non-reentrant model
 28672 ;;
 28673                           
 28674                           	psect	text118
 28675  00B646                     __ptext118:
 28676                           	opt stack 0
 28677  00B646                     _WswOff:
 28678                           	opt stack 25
 28679                           
 28680                           ; BSR set to: 0
 28681                           ;wsw.c: 631: LedData.setOff=1;
 28682                           
 28683                           ; BSR set to: 0
 28684  00B646  0101               	movlb	1	; () banked
 28685  00B648  818D               	bsf	_LedData& (0+255),0,b
 28686                           
 28687                           ; BSR set to: 1
 28688  00B64A  0012               	return	
 28689  00B64C                     __end_of_WswOff:
 28690                           	opt stack 0
 28691                           tblptru	equ	0xFF8
 28692                           tblptrh	equ	0xFF7
 28693                           tblptrl	equ	0xFF6
 28694                           tablat	equ	0xFF5
 28695                           prodh	equ	0xFF4
 28696                           prodl	equ	0xFF3
 28697                           intcon	equ	0xFF2
 28698                           postinc0	equ	0xFEE
 28699                           wreg	equ	0xFE8
 28700                           indf1	equ	0xFE7
 28701                           postinc1	equ	0xFE6
 28702                           postdec1	equ	0xFE5
 28703                           fsr1h	equ	0xFE2
 28704                           fsr1l	equ	0xFE1
 28705                           indf2	equ	0xFDF
 28706                           postinc2	equ	0xFDE
 28707                           postdec2	equ	0xFDD
 28708                           fsr2h	equ	0xFDA
 28709                           fsr2l	equ	0xFD9
 28710                           status	equ	0xFD8
 28711                           
 28712 ;; *************** function _AllKolToFirstPoz *****************
 28713 ;; Defined at:
 28714 ;;		line 709 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 28715 ;; Parameters:    Size  Location     Type
 28716 ;;		None
 28717 ;; Auto vars:     Size  Location     Type
 28718 ;;  j               1   29[COMRAM] unsigned char 
 28719 ;; Return value:  Size  Location     Type
 28720 ;;		None               void
 28721 ;; Registers used:
 28722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28723 ;; Tracked objects:
 28724 ;;		On entry : F/1
 28725 ;;		On exit  : F/1
 28726 ;;		Unchanged: FFFFFFF0/0
 28727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28732 ;;Total ram usage:        1 bytes
 28733 ;; Hardware stack levels used:    1
 28734 ;; Hardware stack levels required when called:    4
 28735 ;; This function calls:
 28736 ;;		Nothing
 28737 ;; This function is called by:
 28738 ;;		_EndClsScr
 28739 ;; This function uses a non-reentrant model
 28740 ;;
 28741                           
 28742                           	psect	text119
 28743  00AB00                     __ptext119:
 28744                           	opt stack 0
 28745  00AB00                     _AllKolToFirstPoz:
 28746                           	opt stack 25
 28747                           
 28748                           ; BSR set to: 1
 28749                           ;wsw.c: 710: unsigned char j;
 28750                           ;wsw.c: 711: for(j=0;j<4;j++)
 28751                           
 28752                           ; BSR set to: 1
 28753  00AB00  6A1E               	clrf	AllKolToFirstPoz@j,c
 28754  00AB02                     l33548:
 28755                           
 28756                           ; BSR set to: 1
 28757                           ;wsw.c: 712: {
 28758                           ;wsw.c: 713: KInd[j].indeks=0;
 28759  00AB02  0E85               	movlw	low _KInd
 28760  00AB04  241E               	addwf	AllKolToFirstPoz@j,w,c
 28761  00AB06  D80E               	call	PL154	;call to abstracted procedure
 28762                           
 28763                           ; BSR set to: 1
 28764                           ;wsw.c: 714: KTim[j].ncS=0;
 28765  00AB08  501E               	movf	AllKolToFirstPoz@j,w,c
 28766  00AB0A  EC56  F012         	call	PL56	;call to abstracted procedure
 28767  00AB0E  6ADF               	clrf	indf2,c
 28768                           
 28769                           ; BSR set to: 1
 28770                           ;wsw.c: 715: KTim[j].ndS=0;
 28771  00AB10  501E               	movf	AllKolToFirstPoz@j,w,c
 28772  00AB12  0D03               	mullw	3
 28773  00AB14  EC5E  F012         	call	PL86	;call to abstracted procedure
 28774  00AB18  6ADF               	clrf	indf2,c
 28775                           
 28776                           ; BSR set to: 1
 28777  00AB1A  2A1E               	incf	AllKolToFirstPoz@j,f,c
 28778                           
 28779                           ; BSR set to: 1
 28780  00AB1C  0E03               	movlw	3
 28781  00AB1E  641E               	cpfsgt	AllKolToFirstPoz@j,c
 28782  00AB20  D7F0               	goto	l33548
 28783  00AB22  0C03               	retlw	3
 28784  00AB24                     __end_of_AllKolToFirstPoz:
 28785                           	opt stack 0
 28786  00AB24                     PL154:
 28787                           	opt stack 21
 28788  00AB24  6ED9               	movwf	fsr2l,c
 28789  00AB26  6ADA               	clrf	fsr2h,c
 28790  00AB28  0E01               	movlw	high _KInd
 28791  00AB2A  22DA               	addwfc	fsr2h,f,c
 28792  00AB2C  0E03               	movlw	-253
 28793  00AB2E  16DF               	andwf	223,f,c
 28794  00AB30  0C03               	retlw	3
 28795  00AB32                     __end_ofPL154:
 28796                           	opt stack 0
 28797                           tblptru	equ	0xFF8
 28798                           tblptrh	equ	0xFF7
 28799                           tblptrl	equ	0xFF6
 28800                           tablat	equ	0xFF5
 28801                           prodh	equ	0xFF4
 28802                           prodl	equ	0xFF3
 28803                           intcon	equ	0xFF2
 28804                           postinc0	equ	0xFEE
 28805                           wreg	equ	0xFE8
 28806                           indf1	equ	0xFE7
 28807                           postinc1	equ	0xFE6
 28808                           postdec1	equ	0xFE5
 28809                           fsr1h	equ	0xFE2
 28810                           fsr1l	equ	0xFE1
 28811                           indf2	equ	0xFDF
 28812                           postinc2	equ	0xFDE
 28813                           postdec2	equ	0xFDD
 28814                           fsr2h	equ	0xFDA
 28815                           fsr2l	equ	0xFD9
 28816                           status	equ	0xFD8
 28817                           
 28818 ;; *************** function _WswOn *****************
 28819 ;; Defined at:
 28820 ;;		line 635 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 28821 ;; Parameters:    Size  Location     Type
 28822 ;;		None
 28823 ;; Auto vars:     Size  Location     Type
 28824 ;;		None
 28825 ;; Return value:  Size  Location     Type
 28826 ;;		None               void
 28827 ;; Registers used:
 28828 ;;		None
 28829 ;; Tracked objects:
 28830 ;;		On entry : F/1
 28831 ;;		On exit  : F/1
 28832 ;;		Unchanged: FFFFFFF0/0
 28833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28838 ;;Total ram usage:        0 bytes
 28839 ;; Hardware stack levels used:    1
 28840 ;; Hardware stack levels required when called:    4
 28841 ;; This function calls:
 28842 ;;		Nothing
 28843 ;; This function is called by:
 28844 ;;		_EndClsScr
 28845 ;; This function uses a non-reentrant model
 28846 ;;
 28847                           
 28848                           	psect	text120
 28849  00B66A                     __ptext120:
 28850                           	opt stack 0
 28851  00B66A                     _WswOn:
 28852                           	opt stack 25
 28853                           
 28854                           ; BSR set to: 1
 28855                           ;wsw.c: 636: LedData.setOff=0;
 28856                           
 28857                           ; BSR set to: 1
 28858  00B66A  918D               	bcf	_LedData& (0+255),0,b
 28859                           
 28860                           ; BSR set to: 1
 28861  00B66C  0012               	return	
 28862  00B66E                     __end_of_WswOn:
 28863                           	opt stack 0
 28864                           tblptru	equ	0xFF8
 28865                           tblptrh	equ	0xFF7
 28866                           tblptrl	equ	0xFF6
 28867                           tablat	equ	0xFF5
 28868                           prodh	equ	0xFF4
 28869                           prodl	equ	0xFF3
 28870                           intcon	equ	0xFF2
 28871                           postinc0	equ	0xFEE
 28872                           wreg	equ	0xFE8
 28873                           indf1	equ	0xFE7
 28874                           postinc1	equ	0xFE6
 28875                           postdec1	equ	0xFE5
 28876                           fsr1h	equ	0xFE2
 28877                           fsr1l	equ	0xFE1
 28878                           indf2	equ	0xFDF
 28879                           postinc2	equ	0xFDE
 28880                           postdec2	equ	0xFDD
 28881                           fsr2h	equ	0xFDA
 28882                           fsr2l	equ	0xFD9
 28883                           status	equ	0xFD8
 28884                           
 28885 ;; *************** function _SetData *****************
 28886 ;; Defined at:
 28887 ;;		line 643 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 28888 ;; Parameters:    Size  Location     Type
 28889 ;;  wData           2   29[COMRAM] PTR struct .
 28890 ;;		 -> PWD(40), DWD(28), 
 28891 ;;  wdt1            1   31[COMRAM] const unsigned char 
 28892 ;;  wdt0            1   32[COMRAM] const unsigned char 
 28893 ;; Auto vars:     Size  Location     Type
 28894 ;;		None
 28895 ;; Return value:  Size  Location     Type
 28896 ;;		None               void
 28897 ;; Registers used:
 28898 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28899 ;; Tracked objects:
 28900 ;;		On entry : F/2
 28901 ;;		On exit  : F/2
 28902 ;;		Unchanged: FFFFFFF0/0
 28903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28907 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28908 ;;Total ram usage:        4 bytes
 28909 ;; Hardware stack levels used:    1
 28910 ;; Hardware stack levels required when called:    4
 28911 ;; This function calls:
 28912 ;;		Nothing
 28913 ;; This function is called by:
 28914 ;;		_PrintErr
 28915 ;;		_PrintErrCs
 28916 ;;		_PrintErrTm
 28917 ;;		_PrintNstCW
 28918 ;;		_PrintNstCO
 28919 ;;		_PrintL3
 28920 ;;		_PrintOFF
 28921 ;;		_PrintCS
 28922 ;;		_PrintCW
 28923 ;;		_PrintCO
 28924 ;;		_TestScr
 28925 ;;		_EndTestScr
 28926 ;; This function uses a non-reentrant model
 28927 ;;
 28928                           
 28929                           	psect	text121
 28930  00B084                     __ptext121:
 28931                           	opt stack 0
 28932  00B084                     _SetData:
 28933                           	opt stack 24
 28934                           
 28935                           ; BSR set to: 2
 28936                           ;wsw.c: 644: (*wData).Dt.Data1=wdt1;
 28937                           
 28938                           ; BSR set to: 1
 28939  00B084  EE20 F002          	lfsr	2,2
 28940  00B088  501E               	movf	SetData@wData,w,c
 28941  00B08A  26D9               	addwf	fsr2l,f,c
 28942  00B08C  501F               	movf	SetData@wData+1,w,c
 28943  00B08E  22DA               	addwfc	fsr2h,f,c
 28944  00B090  C020  FFDF         	movff	SetData@wdt1,indf2
 28945                           
 28946                           ;wsw.c: 645: (*wData).Dt.Data0=wdt0;
 28947  00B094  EE20 F003          	lfsr	2,3
 28948  00B098  501E               	movf	SetData@wData,w,c
 28949  00B09A  26D9               	addwf	fsr2l,f,c
 28950  00B09C  501F               	movf	SetData@wData+1,w,c
 28951  00B09E  22DA               	addwfc	fsr2h,f,c
 28952  00B0A0  C021  FFDF         	movff	SetData@wdt0,indf2
 28953                           
 28954                           ; BSR set to: 2
 28955  00B0A4  0012               	return	
 28956  00B0A6                     __end_of_SetData:
 28957                           	opt stack 0
 28958                           tblptru	equ	0xFF8
 28959                           tblptrh	equ	0xFF7
 28960                           tblptrl	equ	0xFF6
 28961                           tablat	equ	0xFF5
 28962                           prodh	equ	0xFF4
 28963                           prodl	equ	0xFF3
 28964                           intcon	equ	0xFF2
 28965                           postinc0	equ	0xFEE
 28966                           wreg	equ	0xFE8
 28967                           indf1	equ	0xFE7
 28968                           postinc1	equ	0xFE6
 28969                           postdec1	equ	0xFE5
 28970                           fsr1h	equ	0xFE2
 28971                           fsr1l	equ	0xFE1
 28972                           indf2	equ	0xFDF
 28973                           postinc2	equ	0xFDE
 28974                           postdec2	equ	0xFDD
 28975                           fsr2h	equ	0xFDA
 28976                           fsr2l	equ	0xFD9
 28977                           status	equ	0xFD8
 28978                           
 28979 ;; *************** function _SetStatus *****************
 28980 ;; Defined at:
 28981 ;;		line 652 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 28982 ;; Parameters:    Size  Location     Type
 28983 ;;  wData           2   29[COMRAM] PTR struct .
 28984 ;;		 -> PWD(40), DWD(28), 
 28985 ;;  wst             2   31[COMRAM] const unsigned int 
 28986 ;;  mask            2   33[COMRAM] const unsigned int 
 28987 ;; Auto vars:     Size  Location     Type
 28988 ;;		None
 28989 ;; Return value:  Size  Location     Type
 28990 ;;		None               void
 28991 ;; Registers used:
 28992 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28993 ;; Tracked objects:
 28994 ;;		On entry : F/2
 28995 ;;		On exit  : F/2
 28996 ;;		Unchanged: FFFFFFF0/0
 28997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28998 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29001 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29002 ;;Total ram usage:        7 bytes
 29003 ;; Hardware stack levels used:    1
 29004 ;; Hardware stack levels required when called:    4
 29005 ;; This function calls:
 29006 ;;		Nothing
 29007 ;; This function is called by:
 29008 ;;		_PrintErr
 29009 ;;		_PrintErrCs
 29010 ;;		_PrintErrTm
 29011 ;;		_PrintNstCW
 29012 ;;		_PrintNstCO
 29013 ;;		_PrintL3
 29014 ;;		_PrintOFF
 29015 ;;		_EndOFF
 29016 ;;		_PrintCS
 29017 ;;		_EndCS
 29018 ;;		_PrintCW
 29019 ;;		_EndCW
 29020 ;;		_PrintCO
 29021 ;;		_TestScr
 29022 ;;		_EndTestScr
 29023 ;;		_InitWsw
 29024 ;; This function uses a non-reentrant model
 29025 ;;
 29026                           
 29027                           	psect	text122
 29028  0069E6                     __ptext122:
 29029                           	opt stack 0
 29030  0069E6                     _SetStatus:
 29031                           	opt stack 24
 29032                           
 29033                           ; BSR set to: 2
 29034                           ;wsw.c: 653: if (mask&0b1000000000000000)(*wData).St.focus=(wst&0b1000000000000000)?1:0;
 29035                           
 29036                           ; BSR set to: 2
 29037  0069E6  AE23               	btfss	SetStatus@mask+1,7,c
 29038  0069E8  D00C               	goto	l40730
 29039  0069EA  0E01               	movlw	1
 29040                           
 29041                           ; BSR set to: 2
 29042  0069EC  AE21               	btfss	SetStatus@wst+1,7,c
 29043  0069EE  0E00               	movlw	0
 29044  0069F0  6E24               	movwf	??_SetStatus& (0+255),c
 29045  0069F2  C01E  FFD9         	movff	SetStatus@wData,fsr2l
 29046  0069F6  C01F  FFDA         	movff	SetStatus@wData+1,fsr2h
 29047  0069FA  18DF               	xorwf	indf2,w,c
 29048  0069FC  0BFE               	andlw	-2
 29049  0069FE  1824               	xorwf	??_SetStatus,w,c
 29050  006A00  6EDF               	movwf	indf2,c
 29051  006A02                     l40730:
 29052                           
 29053                           ; BSR set to: 2
 29054                           ;wsw.c: 654: if (mask&0b0100000000000000)(*wData).St.dec=(wst&0b0100000000000000)?1:0;
 29055  006A02  AC23               	btfss	SetStatus@mask+1,6,c
 29056  006A04  D00A               	goto	l40734
 29057  006A06  0E01               	movlw	1
 29058                           
 29059                           ; BSR set to: 2
 29060  006A08  AC21               	btfss	SetStatus@wst+1,6,c
 29061  006A0A  0E00               	movlw	0
 29062  006A0C  6E24               	movwf	??_SetStatus& (0+255),c
 29063  006A0E  C01E  FFD9         	movff	SetStatus@wData,fsr2l
 29064  006A12  C01F  FFDA         	movff	SetStatus@wData+1,fsr2h
 29065  006A16  4624               	rlncf	??_SetStatus,f,c
 29066  006A18  D8C6               	call	PL218	;call to abstracted procedure
 29067  006A1A                     l40734:
 29068                           
 29069                           ; BSR set to: 2
 29070                           ;wsw.c: 655: if (mask&0b0010000000000000)(*wData).St.hex=(wst&0b0010000000000000)?1:0;
 29071  006A1A  AA23               	btfss	SetStatus@mask+1,5,c
 29072  006A1C  D00A               	goto	l40738
 29073  006A1E  0E01               	movlw	1
 29074                           
 29075                           ; BSR set to: 2
 29076  006A20  AA21               	btfss	SetStatus@wst+1,5,c
 29077  006A22  0E00               	movlw	0
 29078  006A24  6E24               	movwf	??_SetStatus& (0+255),c
 29079  006A26  C01E  FFD9         	movff	SetStatus@wData,fsr2l
 29080  006A2A  C01F  FFDA         	movff	SetStatus@wData+1,fsr2h
 29081  006A2E  4624               	rlncf	??_SetStatus,f,c
 29082  006A30  D8B3               	call	PL214	;call to abstracted procedure
 29083  006A32                     l40738:
 29084                           
 29085                           ; BSR set to: 2
 29086                           ;wsw.c: 656: if (mask&0b0001000000000000)(*wData).St.autoOFF=(wst&0b0001000000000000)?1:
      +                          0;
 29087  006A32  A823               	btfss	SetStatus@mask+1,4,c
 29088  006A34  D00A               	goto	l40742
 29089  006A36  0E01               	movlw	1
 29090                           
 29091                           ; BSR set to: 2
 29092  006A38  A821               	btfss	SetStatus@wst+1,4,c
 29093  006A3A  0E00               	movlw	0
 29094  006A3C  6E24               	movwf	??_SetStatus& (0+255),c
 29095  006A3E  C01E  FFD9         	movff	SetStatus@wData,fsr2l
 29096  006A42  C01F  FFDA         	movff	SetStatus@wData+1,fsr2h
 29097  006A46  4624               	rlncf	??_SetStatus,f,c
 29098  006A48  D898               	call	PL184	;call to abstracted procedure
 29099  006A4A                     l40742:
 29100                           
 29101                           ; BSR set to: 2
 29102                           ;wsw.c: 657: if (mask&0b0000100000000000)(*wData).St.kropka0=(wst&0b0000100000000000)?1:
      +                          0;
 29103  006A4A  A623               	btfss	SetStatus@mask+1,3,c
 29104  006A4C  D00E               	goto	l40746
 29105  006A4E  0E01               	movlw	1
 29106                           
 29107                           ; BSR set to: 2
 29108  006A50  A621               	btfss	SetStatus@wst+1,3,c
 29109  006A52  0E00               	movlw	0
 29110  006A54  6E24               	movwf	??_SetStatus& (0+255),c
 29111  006A56  C01E  FFD9         	movff	SetStatus@wData,fsr2l
 29112  006A5A  C01F  FFDA         	movff	SetStatus@wData+1,fsr2h
 29113  006A5E  3A24               	swapf	??_SetStatus,f,c
 29114  006A60  50DF               	movf	indf2,w,c
 29115  006A62  1824               	xorwf	??_SetStatus,w,c
 29116  006A64  0BEF               	andlw	-17
 29117  006A66  1824               	xorwf	??_SetStatus,w,c
 29118  006A68  6EDF               	movwf	indf2,c
 29119  006A6A                     l40746:
 29120                           
 29121                           ; BSR set to: 2
 29122                           ;wsw.c: 658: if (mask&0b0000010000000000)(*wData).St.kropka1=(wst&0b0000010000000000)?1:
      +                          0;
 29123  006A6A  A423               	btfss	SetStatus@mask+1,2,c
 29124  006A6C  D00F               	goto	l40750
 29125  006A6E  0E01               	movlw	1
 29126                           
 29127                           ; BSR set to: 2
 29128  006A70  A421               	btfss	SetStatus@wst+1,2,c
 29129  006A72  0E00               	movlw	0
 29130  006A74  6E24               	movwf	??_SetStatus& (0+255),c
 29131  006A76  C01E  FFD9         	movff	SetStatus@wData,fsr2l
 29132  006A7A  C01F  FFDA         	movff	SetStatus@wData+1,fsr2h
 29133  006A7E  3A24               	swapf	??_SetStatus,f,c
 29134  006A80  4624               	rlncf	??_SetStatus,f,c
 29135  006A82  50DF               	movf	indf2,w,c
 29136  006A84  1824               	xorwf	??_SetStatus,w,c
 29137  006A86  0BDF               	andlw	-33
 29138  006A88  1824               	xorwf	??_SetStatus,w,c
 29139  006A8A  6EDF               	movwf	indf2,c
 29140  006A8C                     l40750:
 29141                           
 29142                           ; BSR set to: 2
 29143                           ;wsw.c: 659: if (mask&0b0000001000000000)(*wData).St.wygas0=(wst&0b0000001000000000)?1:0;
 29144  006A8C  A223               	btfss	SetStatus@mask+1,1,c
 29145  006A8E  D010               	goto	l40754
 29146  006A90  0E01               	movlw	1
 29147                           
 29148                           ; BSR set to: 2
 29149  006A92  A221               	btfss	SetStatus@wst+1,1,c
 29150  006A94  0E00               	movlw	0
 29151  006A96  6E24               	movwf	??_SetStatus& (0+255),c
 29152  006A98  C01E  FFD9         	movff	SetStatus@wData,fsr2l
 29153  006A9C  C01F  FFDA         	movff	SetStatus@wData+1,fsr2h
 29154  006AA0  3A24               	swapf	??_SetStatus,f,c
 29155  006AA2  4624               	rlncf	??_SetStatus,f,c
 29156  006AA4  4624               	rlncf	??_SetStatus,f,c
 29157  006AA6  50DF               	movf	indf2,w,c
 29158  006AA8  1824               	xorwf	??_SetStatus,w,c
 29159  006AAA  0BBF               	andlw	-65
 29160  006AAC  1824               	xorwf	??_SetStatus,w,c
 29161  006AAE  6EDF               	movwf	indf2,c
 29162  006AB0                     l40754:
 29163                           
 29164                           ; BSR set to: 2
 29165                           ;wsw.c: 660: if (mask&0b0000000100000000)(*wData).St.wygas1=(wst&0b0000000100000000)?1:0;
 29166  006AB0  A023               	btfss	SetStatus@mask+1,0,c
 29167  006AB2  D00F               	goto	l40758
 29168  006AB4  0E01               	movlw	1
 29169                           
 29170                           ; BSR set to: 2
 29171  006AB6  A021               	btfss	SetStatus@wst+1,0,c
 29172  006AB8  0E00               	movlw	0
 29173  006ABA  6E24               	movwf	??_SetStatus& (0+255),c
 29174  006ABC  C01E  FFD9         	movff	SetStatus@wData,fsr2l
 29175  006AC0  C01F  FFDA         	movff	SetStatus@wData+1,fsr2h
 29176  006AC4  3224               	rrcf	??_SetStatus,f,c
 29177  006AC6  3224               	rrcf	??_SetStatus,f,c
 29178  006AC8  50DF               	movf	indf2,w,c
 29179  006ACA  1824               	xorwf	??_SetStatus,w,c
 29180  006ACC  0B7F               	andlw	-129
 29181  006ACE  1824               	xorwf	??_SetStatus,w,c
 29182  006AD0  6EDF               	movwf	indf2,c
 29183  006AD2                     l40758:
 29184                           
 29185                           ; BSR set to: 2
 29186                           ;wsw.c: 661: if (mask&0b0000000010000000)(*wData).St.led0=(wst&0b0000000010000000)?1:0;
 29187  006AD2  AE22               	btfss	SetStatus@mask,7,c
 29188  006AD4  D00F               	goto	l40762
 29189  006AD6  0E01               	movlw	1
 29190                           
 29191                           ; BSR set to: 2
 29192  006AD8  AE20               	btfss	SetStatus@wst,7,c
 29193  006ADA  0E00               	movlw	0
 29194  006ADC  6E24               	movwf	??_SetStatus& (0+255),c
 29195  006ADE  EE20 F001          	lfsr	2,1
 29196  006AE2  501E               	movf	SetStatus@wData,w,c
 29197  006AE4  26D9               	addwf	fsr2l,f,c
 29198  006AE6  501F               	movf	SetStatus@wData+1,w,c
 29199  006AE8  22DA               	addwfc	fsr2h,f,c
 29200  006AEA  50DF               	movf	indf2,w,c
 29201  006AEC  1824               	xorwf	??_SetStatus,w,c
 29202  006AEE  0BFE               	andlw	-2
 29203  006AF0  1824               	xorwf	??_SetStatus,w,c
 29204  006AF2  6EDF               	movwf	indf2,c
 29205  006AF4                     l40762:
 29206                           
 29207                           ; BSR set to: 2
 29208                           ;wsw.c: 662: if (mask&0b0000000001000000)(*wData).St.led1=(wst&0b0000000001000000)?1:0;
 29209  006AF4  AC22               	btfss	SetStatus@mask,6,c
 29210  006AF6  D006               	goto	l40766
 29211  006AF8  0E01               	movlw	1
 29212                           
 29213                           ; BSR set to: 2
 29214  006AFA  AC20               	btfss	SetStatus@wst,6,c
 29215  006AFC  0E00               	movlw	0
 29216  006AFE  6E24               	movwf	??_SetStatus& (0+255),c
 29217  006B00  D834               	call	PL142	;call to abstracted procedure
 29218  006B02  D851               	call	PL218	;call to abstracted procedure
 29219  006B04                     l40766:
 29220                           
 29221                           ; BSR set to: 2
 29222                           ;wsw.c: 663: if (mask&0b0000000000100000)(*wData).St.sdiode=(wst&0b0000000000100000)?1:0;
 29223  006B04  AA22               	btfss	SetStatus@mask,5,c
 29224  006B06  D006               	goto	l40770
 29225  006B08  0E01               	movlw	1
 29226                           
 29227                           ; BSR set to: 2
 29228  006B0A  AA20               	btfss	SetStatus@wst,5,c
 29229  006B0C  0E00               	movlw	0
 29230  006B0E  6E24               	movwf	??_SetStatus& (0+255),c
 29231  006B10  D82C               	call	PL142	;call to abstracted procedure
 29232  006B12  D842               	call	PL214	;call to abstracted procedure
 29233  006B14                     l40770:
 29234                           
 29235                           ; BSR set to: 2
 29236                           ;wsw.c: 664: if (mask&0b0000000000010000)(*wData).St.rdiode=(wst&0b0000000000010000)?1:0;
 29237  006B14  A822               	btfss	SetStatus@mask,4,c
 29238  006B16  D006               	goto	l40774
 29239  006B18  0E01               	movlw	1
 29240                           
 29241                           ; BSR set to: 2
 29242  006B1A  A820               	btfss	SetStatus@wst,4,c
 29243  006B1C  0E00               	movlw	0
 29244  006B1E  6E24               	movwf	??_SetStatus& (0+255),c
 29245  006B20  D824               	call	PL142	;call to abstracted procedure
 29246  006B22  D82B               	call	PL184	;call to abstracted procedure
 29247  006B24                     l40774:
 29248                           
 29249                           ; BSR set to: 2
 29250                           ;wsw.c: 666: if (mask&0b0000000000001111)
 29251  006B24  5022               	movf	SetStatus@mask,w,c
 29252  006B26  0B0F               	andlw	15
 29253  006B28  B4D8               	btfsc	status,2,c
 29254  006B2A  0012               	return	
 29255                           
 29256                           ; BSR set to: 2
 29257                           ;wsw.c: 667: if(((*wData).St.sdiode||(*wData).St.rdiode)&&(wst&0b0000000000001111))
 29258  006B2C  EE20 F001          	lfsr	2,1
 29259  006B30  D82C               	call	PL202	;call to abstracted procedure
 29260  006B32  B424               	btfsc	??_SetStatus,2,c
 29261  006B34  D005               	goto	l40780
 29262                           
 29263                           ; BSR set to: 2
 29264  006B36  EE20 F001          	lfsr	2,1
 29265  006B3A  D827               	call	PL202	;call to abstracted procedure
 29266  006B3C  A624               	btfss	??_SetStatus,3,c
 29267  006B3E  0012               	return	
 29268  006B40                     l40780:
 29269                           
 29270                           ; BSR set to: 2
 29271  006B40  5020               	movf	SetStatus@wst,w,c
 29272  006B42  0B0F               	andlw	15
 29273  006B44  B4D8               	btfsc	status,2,c
 29274  006B46  0012               	return	
 29275                           
 29276                           ; BSR set to: 2
 29277                           ;wsw.c: 668: {
 29278                           ;wsw.c: 669: (*wData).St.wbdid=(wst&0b0000000000001111);
 29279  006B48  C020  F024         	movff	SetStatus@wst,??_SetStatus
 29280  006B4C  0E0F               	movlw	15
 29281  006B4E  1624               	andwf	??_SetStatus,f,c
 29282  006B50  EE20 F001          	lfsr	2,1
 29283  006B54  501E               	movf	SetStatus@wData,w,c
 29284  006B56  26D9               	addwf	fsr2l,f,c
 29285  006B58  501F               	movf	SetStatus@wData+1,w,c
 29286  006B5A  22DA               	addwfc	fsr2h,f,c
 29287  006B5C  3A24               	swapf	??_SetStatus,f,c
 29288  006B5E  50DF               	movf	indf2,w,c
 29289  006B60  1824               	xorwf	??_SetStatus,w,c
 29290  006B62  0B0F               	andlw	-241
 29291  006B64  1824               	xorwf	??_SetStatus,w,c
 29292  006B66  6EDF               	movwf	indf2,c
 29293                           
 29294                           ; BSR set to: 2
 29295  006B68  0012               	return	
 29296  006B6A                     __end_of_SetStatus:
 29297                           	opt stack 0
 29298  006B6A                     PL142:
 29299                           	opt stack 24
 29300  006B6A  EE20 F001          	lfsr	2,1
 29301  006B6E  501E               	movf	SetStatus@wData,w,c
 29302  006B70  26D9               	addwf	fsr2l,f,c
 29303  006B72  501F               	movf	SetStatus@wData+1,w,c
 29304  006B74  22DA               	addwfc	fsr2h,f,c
 29305  006B76  4624               	rlncf	??_SetStatus,f,c
 29306  006B78  0012               	return	
 29307  006B7A                     __end_ofPL142:
 29308                           	opt stack 0
 29309  006B7A                     PL184:
 29310                           	opt stack 24
 29311  006B7A  4624               	rlncf	??_SetStatus,f,c
 29312  006B7C  4624               	rlncf	??_SetStatus,f,c
 29313  006B7E  50DF               	movf	indf2,w,c
 29314  006B80  1824               	xorwf	??_SetStatus,w,c
 29315  006B82  0BF7               	andlw	-9
 29316  006B84  1824               	xorwf	??_SetStatus,w,c
 29317  006B86  6EDF               	movwf	indf2,c
 29318  006B88  0012               	return	
 29319  006B8A                     __end_ofPL184:
 29320                           	opt stack 0
 29321  006B8A                     PL202:
 29322                           	opt stack 24
 29323  006B8A  501E               	movf	SetStatus@wData,w,c
 29324  006B8C  26D9               	addwf	fsr2l,f,c
 29325  006B8E  501F               	movf	SetStatus@wData+1,w,c
 29326  006B90  22DA               	addwfc	fsr2h,f,c
 29327  006B92  50DF               	movf	indf2,w,c
 29328  006B94  6E24               	movwf	??_SetStatus& (0+255),c
 29329  006B96  0012               	return	
 29330  006B98                     __end_ofPL202:
 29331                           	opt stack 0
 29332  006B98                     PL214:
 29333                           	opt stack 24
 29334  006B98  4624               	rlncf	??_SetStatus,f,c
 29335  006B9A  50DF               	movf	indf2,w,c
 29336  006B9C  1824               	xorwf	??_SetStatus,w,c
 29337  006B9E  0BFB               	andlw	-5
 29338  006BA0  1824               	xorwf	??_SetStatus,w,c
 29339  006BA2  6EDF               	movwf	indf2,c
 29340  006BA4  0012               	return	
 29341  006BA6                     __end_ofPL214:
 29342                           	opt stack 0
 29343  006BA6                     PL218:
 29344                           	opt stack 24
 29345  006BA6  50DF               	movf	indf2,w,c
 29346  006BA8  1824               	xorwf	??_SetStatus,w,c
 29347  006BAA  0BFD               	andlw	-3
 29348  006BAC  1824               	xorwf	??_SetStatus,w,c
 29349  006BAE  6EDF               	movwf	indf2,c
 29350  006BB0  0012               	return	
 29351  006BB2                     __end_ofPL218:
 29352                           	opt stack 0
 29353                           tblptru	equ	0xFF8
 29354                           tblptrh	equ	0xFF7
 29355                           tblptrl	equ	0xFF6
 29356                           tablat	equ	0xFF5
 29357                           prodh	equ	0xFF4
 29358                           prodl	equ	0xFF3
 29359                           intcon	equ	0xFF2
 29360                           postinc0	equ	0xFEE
 29361                           wreg	equ	0xFE8
 29362                           indf1	equ	0xFE7
 29363                           postinc1	equ	0xFE6
 29364                           postdec1	equ	0xFE5
 29365                           fsr1h	equ	0xFE2
 29366                           fsr1l	equ	0xFE1
 29367                           indf2	equ	0xFDF
 29368                           postinc2	equ	0xFDE
 29369                           postdec2	equ	0xFDD
 29370                           fsr2h	equ	0xFDA
 29371                           fsr2l	equ	0xFD9
 29372                           status	equ	0xFD8
 29373                           
 29374 ;; *************** function _SetPoz *****************
 29375 ;; Defined at:
 29376 ;;		line 683 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 29377 ;; Parameters:    Size  Location     Type
 29378 ;;  nrkol           1    wreg     const unsigned char 
 29379 ;;  nrpoz           1   29[COMRAM] const unsigned char 
 29380 ;; Auto vars:     Size  Location     Type
 29381 ;;  nrkol           1   34[COMRAM] const unsigned char 
 29382 ;; Return value:  Size  Location     Type
 29383 ;;		None               void
 29384 ;; Registers used:
 29385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 29386 ;; Tracked objects:
 29387 ;;		On entry : C/2
 29388 ;;		On exit  : F/1
 29389 ;;		Unchanged: 0/0
 29390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29391 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29393 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29394 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29395 ;;Total ram usage:        6 bytes
 29396 ;; Hardware stack levels used:    1
 29397 ;; Hardware stack levels required when called:    4
 29398 ;; This function calls:
 29399 ;;		Nothing
 29400 ;; This function is called by:
 29401 ;;		_PrintErr
 29402 ;;		_PrintErrCs
 29403 ;;		_PrintErrTm
 29404 ;;		_PrintL3
 29405 ;; This function uses a non-reentrant model
 29406 ;;
 29407                           
 29408                           	psect	text123
 29409  008FD8                     __ptext123:
 29410                           	opt stack 0
 29411  008FD8                     _SetPoz:
 29412                           	opt stack 24
 29413                           
 29414                           ; BSR set to: 2
 29415                           ;SetPoz@nrkol stored from wreg
 29416  008FD8  CFE8 F023          	movff	wreg,SetPoz@nrkol
 29417                           
 29418                           ;wsw.c: 684: if ((nrkol>=4)||(nrpoz>=Klj[nrkol].nPzc)) asm("RESET");
 29419  008FDC  0E04               	movlw	4
 29420  008FDE  6023               	cpfslt	SetPoz@nrkol,c
 29421  008FE0  D012               	goto	l4600
 29422  008FE2  5023               	movf	SetPoz@nrkol,w,c
 29423  008FE4  0D02               	mullw	2
 29424  008FE6  CFF3 F01F          	movff	prodl,??_SetPoz
 29425  008FEA  2A1F               	incf	??_SetPoz,f,c
 29426  008FEC  501F               	movf	??_SetPoz,w,c
 29427  008FEE  0F44               	addlw	low _Klj
 29428  008FF0  6E20               	movwf	(??_SetPoz+1)& (0+255),c
 29429  008FF2  C020  FFF6         	movff	??_SetPoz+1,tblptrl
 29430  008FF6  0E10               	movlw	high __smallconst
 29431  008FF8  6EF7               	movwf	tblptrh,c
 29432  008FFA  0E00               	movlw	low (__smallconst shr (0+16))
 29433  008FFC  6EF8               	movwf	tblptru,c
 29434  008FFE  0008               	tblrd		*
 29435  009000  50F5               	movf	tablat,w,c
 29436  009002  5C1E               	subwf	SetPoz@nrpoz,w,c
 29437  009004  B0D8               	btfsc	status,0,c
 29438  009006                     l4600:
 29439  009006  00FF               	reset		;# 
 29440                           
 29441                           ;wsw.c: 685: (*Klj[nrkol].KL).KFc[nrpoz].focus=1;
 29442  009008  5023               	movf	SetPoz@nrkol,w,c
 29443  00900A  0D02               	mullw	2
 29444  00900C  50F3               	movf	prodl,w,c
 29445  00900E  0F44               	addlw	low _Klj
 29446  009010  6E1F               	movwf	??_SetPoz& (0+255),c
 29447  009012  C01F  FFF6         	movff	??_SetPoz,tblptrl
 29448  009016  0E10               	movlw	high __smallconst
 29449  009018  6EF7               	movwf	tblptrh,c
 29450  00901A  0E00               	movlw	low (__smallconst shr (0+16))
 29451  00901C  6EF8               	movwf	tblptru,c
 29452  00901E  0008               	tblrd		*
 29453  009020  CFF5 F020          	movff	tablat,??_SetPoz+1
 29454  009024  0E03               	movlw	3
 29455  009026  2620               	addwf	??_SetPoz+1,f,c
 29456  009028  C020  FFF6         	movff	??_SetPoz+1,tblptrl
 29457  00902C  0E10               	movlw	high __smallconst
 29458  00902E  6EF7               	movwf	tblptrh,c
 29459  009030  0E00               	movlw	low (__smallconst shr (0+16))
 29460  009032  6EF8               	movwf	tblptru,c
 29461  009034  0009               	tblrd		*+
 29462  009036  CFF5 F021          	movff	tablat,??_SetPoz+2
 29463  00903A  0009               	tblrd		*+
 29464  00903C  CFF5 F022          	movff	tablat,??_SetPoz+3
 29465  009040  501E               	movf	SetPoz@nrpoz,w,c
 29466  009042  2421               	addwf	??_SetPoz+2,w,c
 29467  009044  6ED9               	movwf	fsr2l,c
 29468  009046  0E00               	movlw	0
 29469  009048  2022               	addwfc	??_SetPoz+3,w,c
 29470  00904A  6EDA               	movwf	fsr2h,c
 29471  00904C  0E01               	movlw	1
 29472  00904E  12DF               	iorwf	223,f,c
 29473                           
 29474                           ;wsw.c: 686: KInd[nrkol].reset=0;
 29475  009050  0101               	movlb	1	; () banked
 29476  009052  0E85               	movlw	low _KInd
 29477  009054  2423               	addwf	SetPoz@nrkol,w,c
 29478  009056  6ED9               	movwf	fsr2l,c
 29479  009058  6ADA               	clrf	fsr2h,c
 29480  00905A  0E01               	movlw	high _KInd
 29481  00905C  22DA               	addwfc	fsr2h,f,c
 29482  00905E  0EFD               	movlw	-3
 29483  009060  16DF               	andwf	223,f,c
 29484                           
 29485                           ; BSR set to: 1
 29486  009062  0CFD               	retlw	253
 29487  009064                     __end_of_SetPoz:
 29488                           	opt stack 0
 29489                           tblptru	equ	0xFF8
 29490                           tblptrh	equ	0xFF7
 29491                           tblptrl	equ	0xFF6
 29492                           tablat	equ	0xFF5
 29493                           prodh	equ	0xFF4
 29494                           prodl	equ	0xFF3
 29495                           intcon	equ	0xFF2
 29496                           postinc0	equ	0xFEE
 29497                           wreg	equ	0xFE8
 29498                           indf1	equ	0xFE7
 29499                           postinc1	equ	0xFE6
 29500                           postdec1	equ	0xFE5
 29501                           fsr1h	equ	0xFE2
 29502                           fsr1l	equ	0xFE1
 29503                           indf2	equ	0xFDF
 29504                           postinc2	equ	0xFDE
 29505                           postdec2	equ	0xFDD
 29506                           fsr2h	equ	0xFDA
 29507                           fsr2l	equ	0xFD9
 29508                           status	equ	0xFD8
 29509                           
 29510 ;; *************** function _ResetKol *****************
 29511 ;; Defined at:
 29512 ;;		line 696 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 29513 ;; Parameters:    Size  Location     Type
 29514 ;;  nrkol           1    wreg     const unsigned char 
 29515 ;; Auto vars:     Size  Location     Type
 29516 ;;  nrkol           1   29[COMRAM] const unsigned char 
 29517 ;; Return value:  Size  Location     Type
 29518 ;;		None               void
 29519 ;; Registers used:
 29520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29521 ;; Tracked objects:
 29522 ;;		On entry : F/1
 29523 ;;		On exit  : F/1
 29524 ;;		Unchanged: 0/0
 29525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29530 ;;Total ram usage:        1 bytes
 29531 ;; Hardware stack levels used:    1
 29532 ;; Hardware stack levels required when called:    4
 29533 ;; This function calls:
 29534 ;;		Nothing
 29535 ;; This function is called by:
 29536 ;;		_EndErr
 29537 ;;		_EndNst
 29538 ;;		_EndL3
 29539 ;; This function uses a non-reentrant model
 29540 ;;
 29541                           
 29542                           	psect	text124
 29543  00B148                     __ptext124:
 29544                           	opt stack 0
 29545  00B148                     _ResetKol:
 29546                           	opt stack 22
 29547                           
 29548                           ; BSR set to: 1
 29549                           ;ResetKol@nrkol stored from wreg
 29550  00B148  CFE8 F01E          	movff	wreg,ResetKol@nrkol
 29551                           
 29552                           ; BSR set to: 1
 29553                           ;wsw.c: 697: if (nrkol>=4) asm("RESET");
 29554  00B14C  0E03               	movlw	3
 29555  00B14E  641E               	cpfsgt	ResetKol@nrkol,c
 29556  00B150  D001               	goto	l40796
 29557                           
 29558                           ; BSR set to: 1
 29559  00B152  00FF               	reset		;# 
 29560  00B154                     l40796:
 29561                           
 29562                           ;wsw.c: 698: KInd[nrkol].reset=1;
 29563  00B154  0101               	movlb	1	; () banked
 29564  00B156  0E85               	movlw	low _KInd
 29565  00B158  241E               	addwf	ResetKol@nrkol,w,c
 29566  00B15A  6ED9               	movwf	fsr2l,c
 29567  00B15C  6ADA               	clrf	fsr2h,c
 29568  00B15E  0E01               	movlw	high _KInd
 29569  00B160  22DA               	addwfc	fsr2h,f,c
 29570  00B162  0E02               	movlw	2
 29571  00B164  12DF               	iorwf	223,f,c
 29572                           
 29573                           ; BSR set to: 1
 29574  00B166  0C02               	retlw	2
 29575  00B168                     __end_of_ResetKol:
 29576                           	opt stack 0
 29577                           tblptru	equ	0xFF8
 29578                           tblptrh	equ	0xFF7
 29579                           tblptrl	equ	0xFF6
 29580                           tablat	equ	0xFF5
 29581                           prodh	equ	0xFF4
 29582                           prodl	equ	0xFF3
 29583                           intcon	equ	0xFF2
 29584                           postinc0	equ	0xFEE
 29585                           wreg	equ	0xFE8
 29586                           indf1	equ	0xFE7
 29587                           postinc1	equ	0xFE6
 29588                           postdec1	equ	0xFE5
 29589                           fsr1h	equ	0xFE2
 29590                           fsr1l	equ	0xFE1
 29591                           indf2	equ	0xFDF
 29592                           postinc2	equ	0xFDE
 29593                           postdec2	equ	0xFDD
 29594                           fsr2h	equ	0xFDA
 29595                           fsr2l	equ	0xFD9
 29596                           status	equ	0xFD8
 29597                           
 29598 ;; *************** function _RestartKol *****************
 29599 ;; Defined at:
 29600 ;;		line 703 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 29601 ;; Parameters:    Size  Location     Type
 29602 ;;  nrkol           1    wreg     const unsigned char 
 29603 ;; Auto vars:     Size  Location     Type
 29604 ;;  nrkol           1   29[COMRAM] const unsigned char 
 29605 ;; Return value:  Size  Location     Type
 29606 ;;		None               void
 29607 ;; Registers used:
 29608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29609 ;; Tracked objects:
 29610 ;;		On entry : C/1
 29611 ;;		On exit  : F/1
 29612 ;;		Unchanged: 0/0
 29613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29618 ;;Total ram usage:        1 bytes
 29619 ;; Hardware stack levels used:    1
 29620 ;; Hardware stack levels required when called:    4
 29621 ;; This function calls:
 29622 ;;		Nothing
 29623 ;; This function is called by:
 29624 ;;		_PrintNstCW
 29625 ;;		_PrintNstCO
 29626 ;;		_TrybPracy
 29627 ;; This function uses a non-reentrant model
 29628 ;;
 29629                           
 29630                           	psect	text125
 29631  00B168                     __ptext125:
 29632                           	opt stack 0
 29633  00B168                     _RestartKol:
 29634                           	opt stack 23
 29635                           
 29636                           ; BSR set to: 1
 29637                           ;RestartKol@nrkol stored from wreg
 29638  00B168  CFE8 F01E          	movff	wreg,RestartKol@nrkol
 29639                           
 29640                           ;wsw.c: 704: if (nrkol>=4) asm("RESET");
 29641  00B16C  0E03               	movlw	3
 29642  00B16E  641E               	cpfsgt	RestartKol@nrkol,c
 29643  00B170  D001               	goto	l40802
 29644  00B172  00FF               	reset		;# 
 29645  00B174                     l40802:
 29646                           
 29647                           ;wsw.c: 705: KInd[nrkol].restart=1;
 29648  00B174  0101               	movlb	1	; () banked
 29649  00B176  0E85               	movlw	low _KInd
 29650  00B178  241E               	addwf	RestartKol@nrkol,w,c
 29651  00B17A  6ED9               	movwf	fsr2l,c
 29652  00B17C  6ADA               	clrf	fsr2h,c
 29653  00B17E  0E01               	movlw	high _KInd
 29654  00B180  22DA               	addwfc	fsr2h,f,c
 29655  00B182  0E01               	movlw	1
 29656  00B184  12DF               	iorwf	223,f,c
 29657                           
 29658                           ; BSR set to: 1
 29659  00B186  0C01               	retlw	1
 29660  00B188                     __end_of_RestartKol:
 29661                           	opt stack 0
 29662                           tblptru	equ	0xFF8
 29663                           tblptrh	equ	0xFF7
 29664                           tblptrl	equ	0xFF6
 29665                           tablat	equ	0xFF5
 29666                           prodh	equ	0xFF4
 29667                           prodl	equ	0xFF3
 29668                           intcon	equ	0xFF2
 29669                           postinc0	equ	0xFEE
 29670                           wreg	equ	0xFE8
 29671                           indf1	equ	0xFE7
 29672                           postinc1	equ	0xFE6
 29673                           postdec1	equ	0xFE5
 29674                           fsr1h	equ	0xFE2
 29675                           fsr1l	equ	0xFE1
 29676                           indf2	equ	0xFDF
 29677                           postinc2	equ	0xFDE
 29678                           postdec2	equ	0xFDD
 29679                           fsr2h	equ	0xFDA
 29680                           fsr2l	equ	0xFD9
 29681                           status	equ	0xFD8
 29682                           
 29683 ;; *************** function _Swsdid *****************
 29684 ;; Defined at:
 29685 ;;		line 615 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 29686 ;; Parameters:    Size  Location     Type
 29687 ;;  dtd             1    wreg     unsigned char 
 29688 ;; Auto vars:     Size  Location     Type
 29689 ;;  dtd             1   29[COMRAM] unsigned char 
 29690 ;; Return value:  Size  Location     Type
 29691 ;;		None               void
 29692 ;; Registers used:
 29693 ;;		wreg, status,2, status,0
 29694 ;; Tracked objects:
 29695 ;;		On entry : C/2
 29696 ;;		On exit  : C/2
 29697 ;;		Unchanged: FFFFFFF3/0
 29698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29703 ;;Total ram usage:        1 bytes
 29704 ;; Hardware stack levels used:    1
 29705 ;; Hardware stack levels required when called:    4
 29706 ;; This function calls:
 29707 ;;		Nothing
 29708 ;; This function is called by:
 29709 ;;		_SetDiode
 29710 ;; This function uses a non-reentrant model
 29711 ;;
 29712                           
 29713                           	psect	text126
 29714  00B504                     __ptext126:
 29715                           	opt stack 0
 29716  00B504                     _Swsdid:
 29717                           	opt stack 24
 29718                           
 29719                           ; BSR set to: 1
 29720                           ;Swsdid@dtd stored from wreg
 29721  00B504  CFE8 F01E          	movff	wreg,Swsdid@dtd
 29722                           
 29723                           ;wsw.c: 616: dtd=dtd&0x0f;
 29724  00B508  0E0F               	movlw	15
 29725  00B50A  161E               	andwf	Swsdid@dtd,f,c
 29726                           
 29727                           ;wsw.c: 617: wsdid|=dtd;
 29728  00B50C  501E               	movf	Swsdid@dtd,w,c
 29729  00B50E  1240               	iorwf	_wsdid,f,c
 29730  00B510  0012               	return	
 29731  00B512                     __end_of_Swsdid:
 29732                           	opt stack 0
 29733                           tblptru	equ	0xFF8
 29734                           tblptrh	equ	0xFF7
 29735                           tblptrl	equ	0xFF6
 29736                           tablat	equ	0xFF5
 29737                           prodh	equ	0xFF4
 29738                           prodl	equ	0xFF3
 29739                           intcon	equ	0xFF2
 29740                           postinc0	equ	0xFEE
 29741                           wreg	equ	0xFE8
 29742                           indf1	equ	0xFE7
 29743                           postinc1	equ	0xFE6
 29744                           postdec1	equ	0xFE5
 29745                           fsr1h	equ	0xFE2
 29746                           fsr1l	equ	0xFE1
 29747                           indf2	equ	0xFDF
 29748                           postinc2	equ	0xFDE
 29749                           postdec2	equ	0xFDD
 29750                           fsr2h	equ	0xFDA
 29751                           fsr2l	equ	0xFD9
 29752                           status	equ	0xFD8
 29753                           
 29754 ;; *************** function _Rwsdid *****************
 29755 ;; Defined at:
 29756 ;;		line 621 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 29757 ;; Parameters:    Size  Location     Type
 29758 ;;  dtd             1    wreg     unsigned char 
 29759 ;; Auto vars:     Size  Location     Type
 29760 ;;  dtd             1   29[COMRAM] unsigned char 
 29761 ;; Return value:  Size  Location     Type
 29762 ;;		None               void
 29763 ;; Registers used:
 29764 ;;		wreg, status,2, status,0
 29765 ;; Tracked objects:
 29766 ;;		On entry : C/2
 29767 ;;		On exit  : C/2
 29768 ;;		Unchanged: FFFFFFF3/0
 29769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29774 ;;Total ram usage:        1 bytes
 29775 ;; Hardware stack levels used:    1
 29776 ;; Hardware stack levels required when called:    4
 29777 ;; This function calls:
 29778 ;;		Nothing
 29779 ;; This function is called by:
 29780 ;;		_SetDiode
 29781 ;; This function uses a non-reentrant model
 29782 ;;
 29783                           
 29784                           	psect	text127
 29785  00B512                     __ptext127:
 29786                           	opt stack 0
 29787  00B512                     _Rwsdid:
 29788                           	opt stack 24
 29789                           
 29790                           ;Rwsdid@dtd stored from wreg
 29791  00B512  CFE8 F01E          	movff	wreg,Rwsdid@dtd
 29792                           
 29793                           ;wsw.c: 622: dtd=dtd&0x0f;
 29794  00B516  0E0F               	movlw	15
 29795  00B518  161E               	andwf	Rwsdid@dtd,f,c
 29796                           
 29797                           ;wsw.c: 623: wsdid&=~(dtd);
 29798  00B51A  1C1E               	comf	Rwsdid@dtd,w,c
 29799  00B51C  1640               	andwf	_wsdid,f,c
 29800  00B51E  0012               	return	
 29801  00B520                     __end_of_Rwsdid:
 29802                           	opt stack 0
 29803                           tblptru	equ	0xFF8
 29804                           tblptrh	equ	0xFF7
 29805                           tblptrl	equ	0xFF6
 29806                           tablat	equ	0xFF5
 29807                           prodh	equ	0xFF4
 29808                           prodl	equ	0xFF3
 29809                           intcon	equ	0xFF2
 29810                           postinc0	equ	0xFEE
 29811                           wreg	equ	0xFE8
 29812                           indf1	equ	0xFE7
 29813                           postinc1	equ	0xFE6
 29814                           postdec1	equ	0xFE5
 29815                           fsr1h	equ	0xFE2
 29816                           fsr1l	equ	0xFE1
 29817                           indf2	equ	0xFDF
 29818                           postinc2	equ	0xFDE
 29819                           postdec2	equ	0xFDD
 29820                           fsr2h	equ	0xFDA
 29821                           fsr2l	equ	0xFD9
 29822                           status	equ	0xFD8
 29823                           
 29824 ;; *************** function _ModParam *****************
 29825 ;; Defined at:
 29826 ;;		line 66 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
 29827 ;; Parameters:    Size  Location     Type
 29828 ;;  tpk             1    wreg     const unsigned char 
 29829 ;;  tpg             1   31[COMRAM] const unsigned char 
 29830 ;; Auto vars:     Size  Location     Type
 29831 ;;  tpk             1   33[COMRAM] const unsigned char 
 29832 ;; Return value:  Size  Location     Type
 29833 ;;		None               void
 29834 ;; Registers used:
 29835 ;;		wreg, status,2, status,0, prodl
 29836 ;; Tracked objects:
 29837 ;;		On entry : F/1
 29838 ;;		On exit  : F/0
 29839 ;;		Unchanged: FFFFFFF0/0
 29840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29841 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29844 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29845 ;;Total ram usage:        3 bytes
 29846 ;; Hardware stack levels used:    1
 29847 ;; Hardware stack levels required when called:    4
 29848 ;; This function calls:
 29849 ;;		Nothing
 29850 ;; This function is called by:
 29851 ;;		_RdEEParam
 29852 ;; This function uses a non-reentrant model
 29853 ;;
 29854                           
 29855                           	psect	text128
 29856  00461C                     __ptext128:
 29857                           	opt stack 0
 29858  00461C                     _ModParam:
 29859                           	opt stack 25
 29860                           
 29861                           ;ModParam@tpk stored from wreg
 29862  00461C  CFE8 F022          	movff	wreg,ModParam@tpk
 29863                           
 29864                           ; BSR set to: 1
 29865                           ;pwm.c: 67: PWM.tpGZ=(tpg!=0);
 29866  004620  0E00               	movlw	0
 29867  004622  6AF3               	clrf	prodl,c
 29868  004624  6220               	cpfseq	ModParam@tpg,c
 29869  004626  2AF3               	incf	prodl,f,c
 29870  004628  CFF3 F021          	movff	prodl,??_ModParam
 29871  00462C  4621               	rlncf	??_ModParam,f,c
 29872  00462E  4621               	rlncf	??_ModParam,f,c
 29873  004630  0100               	movlb	0	; () banked
 29874  004632  5193               	movf	_PWM& (0+255),w,b	;volatile
 29875  004634  1821               	xorwf	??_ModParam,w,c
 29876  004636  0BFB               	andlw	-5
 29877  004638  1821               	xorwf	??_ModParam,w,c
 29878  00463A  6F93               	movwf	_PWM& (0+255),b	;volatile
 29879                           
 29880                           ; BSR set to: 0
 29881                           ;pwm.c: 70: if(!PWM.tpGZ)
 29882  00463C  A593               	btfss	_PWM& (0+255),2,b	;volatile
 29883  00463E  D085               	goto	l33662
 29884  004640  D111               	goto	l33676
 29885  004642                     l2562:
 29886                           
 29887                           ; BSR set to: 0
 29888                           ;pwm.c: 75: {
 29889                           ;pwm.c: 76: PWM._ENOSC=(1!=0);
 29890  004642  8393               	bsf	_PWM& (0+255),1,b	;volatile
 29891                           
 29892                           ; BSR set to: 0
 29893                           ;pwm.c: 77: PWM.MDMOD=0x30;
 29894  004644  0E30               	movlw	48
 29895  004646  6F9C               	movwf	(_PWM+9)& (0+255),b	;volatile
 29896                           
 29897                           ;pwm.c: 78: PWM.MGMOD=0x9F;
 29898  004648  0E9F               	movlw	159
 29899  00464A  6F9D               	movwf	(_PWM+10)& (0+255),b	;volatile
 29900                           
 29901                           ;pwm.c: 79: PWM.MAXOSC=20;
 29902  00464C  0E14               	movlw	20
 29903  00464E  6F9E               	movwf	(_PWM+11)& (0+255),b	;volatile
 29904                           
 29905                           ;pwm.c: 80: PWM.MINOSC=5;
 29906                           
 29907                           ;pwm.c: 81: PWM.MAD_MOD=0x14;
 29908                           
 29909                           ;pwm.c: 82: PWM.MAG_MOD=0xF7;
 29910                           
 29911                           ;pwm.c: 83: PWM.GWMSTART=99;
 29912  004650  D912               	call	PL38	;call to abstracted procedure
 29913                           
 29914                           ;pwm.c: 84: PWM.MDSTART=0x30;
 29915  004652  0E30               	movlw	48
 29916  004654  6FA3               	movwf	(_PWM+16)& (0+255),b	;volatile
 29917                           
 29918                           ;pwm.c: 85: PWM.MGSTART=0x9F+10;
 29919  004656  0EA9               	movlw	169
 29920  004658  6FA4               	movwf	(_PWM+17)& (0+255),b	;volatile
 29921                           
 29922                           ;pwm.c: 86: PWM.GWMMAXCO=99;
 29923  00465A  0E63               	movlw	99
 29924  00465C  6FA5               	movwf	(_PWM+18)& (0+255),b	;volatile
 29925                           
 29926                           ;pwm.c: 87: PWM.MDMAXCO=0x30;
 29927  00465E  0E30               	movlw	48
 29928  004660  6FA6               	movwf	(_PWM+19)& (0+255),b	;volatile
 29929                           
 29930                           ;pwm.c: 88: PWM.MGMAXCO=0x9F+10;
 29931  004662  0EA9               	movlw	169
 29932  004664  6FA7               	movwf	(_PWM+20)& (0+255),b	;volatile
 29933                           
 29934                           ;pwm.c: 89: PWM.GWMMAXCW=99;
 29935  004666  0E63               	movlw	99
 29936  004668  6FA8               	movwf	(_PWM+21)& (0+255),b	;volatile
 29937                           
 29938                           ;pwm.c: 90: PWM.MDMAXCW=0x30;
 29939  00466A  0E30               	movlw	48
 29940  00466C  6FA9               	movwf	(_PWM+22)& (0+255),b	;volatile
 29941                           
 29942                           ;pwm.c: 91: PWM.MGMAXCW=0x9F+10;
 29943  00466E  0EA9               	movlw	169
 29944  004670  6FAA               	movwf	(_PWM+23)& (0+255),b	;volatile
 29945                           
 29946                           ;pwm.c: 92: PWM.FIRSTPB=0x75;
 29947  004672  0E75               	movlw	117
 29948  004674  6FAB               	movwf	(_PWM+24)& (0+255),b	;volatile
 29949                           
 29950                           ;pwm.c: 93: PWM.PROP1=0x9F-1*((0x9F-0x30)/7);
 29951  004676  0E90               	movlw	144
 29952  004678  6FAC               	movwf	(_PWM+25)& (0+255),b	;volatile
 29953                           
 29954                           ;pwm.c: 94: PWM.PROP2=0x9F-2*((0x9F-0x30)/7);
 29955  00467A  0E81               	movlw	129
 29956  00467C  6FAD               	movwf	(_PWM+26)& (0+255),b	;volatile
 29957                           
 29958                           ;pwm.c: 95: PWM.PROP3=0x9F-3*((0x9F-0x30)/7);
 29959  00467E  0E72               	movlw	114
 29960  004680  6FAE               	movwf	(_PWM+27)& (0+255),b	;volatile
 29961                           
 29962                           ;pwm.c: 96: break;
 29963  004682  0C72               	retlw	114
 29964  004684                     l2564:
 29965                           
 29966                           ; BSR set to: 0
 29967                           ;pwm.c: 99: {
 29968                           ;pwm.c: 100: PWM._ENOSC=(1!=0);
 29969  004684  8393               	bsf	_PWM& (0+255),1,b	;volatile
 29970                           
 29971                           ; BSR set to: 0
 29972                           ;pwm.c: 101: PWM.MDMOD=0x20;
 29973  004686  0E20               	movlw	32
 29974  004688  6F9C               	movwf	(_PWM+9)& (0+255),b	;volatile
 29975                           
 29976                           ;pwm.c: 102: PWM.MGMOD=0x9F;
 29977  00468A  0E9F               	movlw	159
 29978  00468C  6F9D               	movwf	(_PWM+10)& (0+255),b	;volatile
 29979                           
 29980                           ;pwm.c: 103: PWM.MAXOSC=30;
 29981  00468E  0E1E               	movlw	30
 29982  004690  6F9E               	movwf	(_PWM+11)& (0+255),b	;volatile
 29983                           
 29984                           ;pwm.c: 104: PWM.MINOSC=5;
 29985                           
 29986                           ;pwm.c: 105: PWM.MAD_MOD=0x14;
 29987                           
 29988                           ;pwm.c: 106: PWM.MAG_MOD=0xF7;
 29989                           
 29990                           ;pwm.c: 107: PWM.GWMSTART=99;
 29991  004692  D8F1               	call	PL38	;call to abstracted procedure
 29992                           
 29993                           ;pwm.c: 108: PWM.MDSTART=0x20;
 29994  004694  0E20               	movlw	32
 29995  004696  6FA3               	movwf	(_PWM+16)& (0+255),b	;volatile
 29996                           
 29997                           ;pwm.c: 109: PWM.MGSTART=0x9F+10;
 29998  004698  0EA9               	movlw	169
 29999  00469A  6FA4               	movwf	(_PWM+17)& (0+255),b	;volatile
 30000                           
 30001                           ;pwm.c: 110: PWM.GWMMAXCO=99;
 30002  00469C  0E63               	movlw	99
 30003  00469E  6FA5               	movwf	(_PWM+18)& (0+255),b	;volatile
 30004                           
 30005                           ;pwm.c: 111: PWM.MDMAXCO=0x20;
 30006  0046A0  0E20               	movlw	32
 30007  0046A2  6FA6               	movwf	(_PWM+19)& (0+255),b	;volatile
 30008                           
 30009                           ;pwm.c: 112: PWM.MGMAXCO=0x9F+10;
 30010  0046A4  0EA9               	movlw	169
 30011  0046A6  6FA7               	movwf	(_PWM+20)& (0+255),b	;volatile
 30012                           
 30013                           ;pwm.c: 113: PWM.GWMMAXCW=99;
 30014  0046A8  0E63               	movlw	99
 30015  0046AA  6FA8               	movwf	(_PWM+21)& (0+255),b	;volatile
 30016                           
 30017                           ;pwm.c: 114: PWM.MDMAXCW=0x20;
 30018  0046AC  0E20               	movlw	32
 30019  0046AE  6FA9               	movwf	(_PWM+22)& (0+255),b	;volatile
 30020                           
 30021                           ;pwm.c: 115: PWM.MGMAXCW=0x9F+10;
 30022  0046B0  0EA9               	movlw	169
 30023  0046B2  6FAA               	movwf	(_PWM+23)& (0+255),b	;volatile
 30024                           
 30025                           ;pwm.c: 116: PWM.FIRSTPB=0x75;
 30026  0046B4  0E75               	movlw	117
 30027  0046B6  6FAB               	movwf	(_PWM+24)& (0+255),b	;volatile
 30028                           
 30029                           ;pwm.c: 117: PWM.PROP1=0x9F-1*((0x9F-0x20)/7);
 30030  0046B8  0E8D               	movlw	141
 30031  0046BA  6FAC               	movwf	(_PWM+25)& (0+255),b	;volatile
 30032                           
 30033                           ;pwm.c: 118: PWM.PROP2=0x9F-2*((0x9F-0x20)/7);
 30034  0046BC  0E7B               	movlw	123
 30035  0046BE  6FAD               	movwf	(_PWM+26)& (0+255),b	;volatile
 30036                           
 30037                           ;pwm.c: 119: PWM.PROP3=0x9F-3*((0x9F-0x20)/7);
 30038  0046C0  0E69               	movlw	105
 30039  0046C2  6FAE               	movwf	(_PWM+27)& (0+255),b	;volatile
 30040                           
 30041                           ;pwm.c: 120: break;
 30042  0046C4  0C69               	retlw	105
 30043  0046C6                     l2565:
 30044                           
 30045                           ; BSR set to: 0
 30046                           ;pwm.c: 150: {
 30047                           ;pwm.c: 151: PWM._ENOSC=(1!=0);
 30048  0046C6  8393               	bsf	_PWM& (0+255),1,b	;volatile
 30049                           
 30050                           ; BSR set to: 0
 30051                           ;pwm.c: 152: PWM.MDMOD=0x30;
 30052  0046C8  0E30               	movlw	48
 30053  0046CA  6F9C               	movwf	(_PWM+9)& (0+255),b	;volatile
 30054                           
 30055                           ;pwm.c: 153: PWM.MGMOD=0xA0;
 30056  0046CC  0EA0               	movlw	160
 30057  0046CE  6F9D               	movwf	(_PWM+10)& (0+255),b	;volatile
 30058                           
 30059                           ;pwm.c: 154: PWM.MAXOSC=25;
 30060  0046D0  0E19               	movlw	25
 30061  0046D2  6F9E               	movwf	(_PWM+11)& (0+255),b	;volatile
 30062                           
 30063                           ;pwm.c: 155: PWM.MINOSC=5;
 30064                           
 30065                           ;pwm.c: 156: PWM.MAD_MOD=0x14;
 30066                           
 30067                           ;pwm.c: 157: PWM.MAG_MOD=0xF7;
 30068                           
 30069                           ;pwm.c: 158: PWM.GWMSTART=99;
 30070  0046D4  D8D0               	call	PL38	;call to abstracted procedure
 30071                           
 30072                           ;pwm.c: 159: PWM.MDSTART=0x30;
 30073  0046D6  0E30               	movlw	48
 30074  0046D8  6FA3               	movwf	(_PWM+16)& (0+255),b	;volatile
 30075                           
 30076                           ;pwm.c: 160: PWM.MGSTART=0xA0+10;
 30077  0046DA  0EAA               	movlw	170
 30078  0046DC  6FA4               	movwf	(_PWM+17)& (0+255),b	;volatile
 30079                           
 30080                           ;pwm.c: 161: PWM.GWMMAXCO=99;
 30081  0046DE  0E63               	movlw	99
 30082  0046E0  6FA5               	movwf	(_PWM+18)& (0+255),b	;volatile
 30083                           
 30084                           ;pwm.c: 162: PWM.MDMAXCO=0x30;
 30085  0046E2  0E30               	movlw	48
 30086  0046E4  6FA6               	movwf	(_PWM+19)& (0+255),b	;volatile
 30087                           
 30088                           ;pwm.c: 163: PWM.MGMAXCO=0xA0+10;
 30089  0046E6  0EAA               	movlw	170
 30090  0046E8  6FA7               	movwf	(_PWM+20)& (0+255),b	;volatile
 30091                           
 30092                           ;pwm.c: 164: PWM.GWMMAXCW=99;
 30093  0046EA  0E63               	movlw	99
 30094  0046EC  6FA8               	movwf	(_PWM+21)& (0+255),b	;volatile
 30095                           
 30096                           ;pwm.c: 165: PWM.MDMAXCW=0x30;
 30097  0046EE  0E30               	movlw	48
 30098  0046F0  6FA9               	movwf	(_PWM+22)& (0+255),b	;volatile
 30099                           
 30100                           ;pwm.c: 166: PWM.MGMAXCW=0xA0+10;
 30101  0046F2  0EAA               	movlw	170
 30102  0046F4  6FAA               	movwf	(_PWM+23)& (0+255),b	;volatile
 30103                           
 30104                           ;pwm.c: 167: PWM.FIRSTPB=0x6E;
 30105  0046F6  0E6E               	movlw	110
 30106  0046F8  6FAB               	movwf	(_PWM+24)& (0+255),b	;volatile
 30107                           
 30108                           ;pwm.c: 168: PWM.PROP1=0xA0-1*((0xA0-0x30)/7);
 30109  0046FA  0E90               	movlw	144
 30110  0046FC  6FAC               	movwf	(_PWM+25)& (0+255),b	;volatile
 30111                           
 30112                           ;pwm.c: 169: PWM.PROP2=0xA0-2*((0xA0-0x30)/7);
 30113  0046FE  0E80               	movlw	128
 30114  004700  6FAD               	movwf	(_PWM+26)& (0+255),b	;volatile
 30115                           
 30116                           ;pwm.c: 170: PWM.PROP3=0xA0-3*((0xA0-0x30)/7);
 30117  004702  0E70               	movlw	112
 30118  004704  6FAE               	movwf	(_PWM+27)& (0+255),b	;volatile
 30119                           
 30120                           ;pwm.c: 171: break;
 30121  004706  0C70               	retlw	112
 30122  004708                     l2566:
 30123                           
 30124                           ; BSR set to: 0
 30125                           ;pwm.c: 174: {
 30126                           ;pwm.c: 175: PWM._ENOSC=(1!=0);
 30127  004708  8393               	bsf	_PWM& (0+255),1,b	;volatile
 30128                           
 30129                           ; BSR set to: 0
 30130                           ;pwm.c: 176: PWM.MDMOD=0x2D;
 30131  00470A  0E2D               	movlw	45
 30132  00470C  6F9C               	movwf	(_PWM+9)& (0+255),b	;volatile
 30133                           
 30134                           ;pwm.c: 177: PWM.MGMOD=0x9F;
 30135  00470E  0E9F               	movlw	159
 30136  004710  6F9D               	movwf	(_PWM+10)& (0+255),b	;volatile
 30137                           
 30138                           ;pwm.c: 178: PWM.MAXOSC=15;
 30139  004712  0E0F               	movlw	15
 30140  004714  6F9E               	movwf	(_PWM+11)& (0+255),b	;volatile
 30141                           
 30142                           ;pwm.c: 179: PWM.MINOSC=5;
 30143                           
 30144                           ;pwm.c: 180: PWM.MAD_MOD=0x14;
 30145                           
 30146                           ;pwm.c: 181: PWM.MAG_MOD=0xF7;
 30147                           
 30148                           ;pwm.c: 182: PWM.GWMSTART=99;
 30149  004716  D8AF               	call	PL38	;call to abstracted procedure
 30150                           
 30151                           ;pwm.c: 183: PWM.MDSTART=0x2D;
 30152  004718  0E2D               	movlw	45
 30153  00471A  6FA3               	movwf	(_PWM+16)& (0+255),b	;volatile
 30154                           
 30155                           ;pwm.c: 184: PWM.MGSTART=0x9F+10;
 30156  00471C  0EA9               	movlw	169
 30157  00471E  6FA4               	movwf	(_PWM+17)& (0+255),b	;volatile
 30158                           
 30159                           ;pwm.c: 185: PWM.GWMMAXCO=99;
 30160  004720  0E63               	movlw	99
 30161  004722  6FA5               	movwf	(_PWM+18)& (0+255),b	;volatile
 30162                           
 30163                           ;pwm.c: 186: PWM.MDMAXCO=0x2D;
 30164  004724  0E2D               	movlw	45
 30165  004726  6FA6               	movwf	(_PWM+19)& (0+255),b	;volatile
 30166                           
 30167                           ;pwm.c: 187: PWM.MGMAXCO=0x9F+10;
 30168  004728  0EA9               	movlw	169
 30169  00472A  6FA7               	movwf	(_PWM+20)& (0+255),b	;volatile
 30170                           
 30171                           ;pwm.c: 188: PWM.GWMMAXCW=99;
 30172  00472C  0E63               	movlw	99
 30173  00472E  6FA8               	movwf	(_PWM+21)& (0+255),b	;volatile
 30174                           
 30175                           ;pwm.c: 189: PWM.MDMAXCW=0x2D;
 30176  004730  0E2D               	movlw	45
 30177  004732  6FA9               	movwf	(_PWM+22)& (0+255),b	;volatile
 30178                           
 30179                           ;pwm.c: 190: PWM.MGMAXCW=0x9F+10;
 30180  004734  0EA9               	movlw	169
 30181  004736  6FAA               	movwf	(_PWM+23)& (0+255),b	;volatile
 30182                           
 30183                           ;pwm.c: 191: PWM.FIRSTPB=0x6E;
 30184  004738  0E6E               	movlw	110
 30185  00473A  6FAB               	movwf	(_PWM+24)& (0+255),b	;volatile
 30186                           
 30187                           ;pwm.c: 192: PWM.PROP1=0x9F-1*((0x9F-0x2D)/7);
 30188  00473C  0E8F               	movlw	143
 30189  00473E  6FAC               	movwf	(_PWM+25)& (0+255),b	;volatile
 30190                           
 30191                           ;pwm.c: 193: PWM.PROP2=0x9F-2*((0x9F-0x2D)/7);
 30192  004740  0E7F               	movlw	127
 30193  004742  6FAD               	movwf	(_PWM+26)& (0+255),b	;volatile
 30194                           
 30195                           ;pwm.c: 194: PWM.PROP3=0x9F-3*((0x9F-0x2D)/7);
 30196  004744  0E6F               	movlw	111
 30197  004746  6FAE               	movwf	(_PWM+27)& (0+255),b	;volatile
 30198                           
 30199                           ;pwm.c: 195: break;
 30200  004748  0C6F               	retlw	111
 30201  00474A                     l33662:
 30202                           
 30203                           ; BSR set to: 0
 30204  00474A  5022               	movf	ModParam@tpk,w,c
 30205                           
 30206                           ; Switch size 1, requested type "space"
 30207                           ; Number of cases is 4, Range of values is 0 to 3
 30208                           ; switch strategies available:
 30209                           ; Name         Instructions Cycles
 30210                           ; simple_byte           13     7 (average)
 30211                           ;	Chosen strategy is simple_byte
 30212  00474C  E101 D779          	bz	l2562
 30213  004750  0A01               	xorlw	1	; case 1
 30214  004752  E098               	bz	l2564
 30215  004754  0A03               	xorlw	3	; case 2
 30216  004756  E0B7               	bz	l2565
 30217  004758  0A01               	xorlw	1	; case 3
 30218  00475A  D7D6               	goto	l2566
 30219  00475C                     l2570:
 30220                           
 30221                           ; BSR set to: 0
 30222                           ;pwm.c: 228: {
 30223                           ;pwm.c: 229: PWM._ENOSC=(1!=0);
 30224  00475C  8393               	bsf	_PWM& (0+255),1,b	;volatile
 30225                           
 30226                           ; BSR set to: 0
 30227                           ;pwm.c: 230: PWM.MDMOD=0x48;
 30228  00475E  0E48               	movlw	72
 30229  004760  6F9C               	movwf	(_PWM+9)& (0+255),b	;volatile
 30230                           
 30231                           ;pwm.c: 231: PWM.MGMOD=0xEB;
 30232  004762  0EEB               	movlw	235
 30233  004764  6F9D               	movwf	(_PWM+10)& (0+255),b	;volatile
 30234                           
 30235                           ;pwm.c: 232: PWM.MAXOSC=20;
 30236  004766  0E14               	movlw	20
 30237  004768  6F9E               	movwf	(_PWM+11)& (0+255),b	;volatile
 30238                           
 30239                           ;pwm.c: 233: PWM.MINOSC=5;
 30240                           
 30241                           ;pwm.c: 234: PWM.MAD_MOD=0x14;
 30242                           
 30243                           ;pwm.c: 235: PWM.MAG_MOD=0xF7;
 30244                           
 30245                           ;pwm.c: 236: PWM.GWMSTART=99;
 30246  00476A  D885               	call	PL38	;call to abstracted procedure
 30247                           
 30248                           ;pwm.c: 237: PWM.MDSTART=0x48;
 30249  00476C  0E48               	movlw	72
 30250  00476E  6FA3               	movwf	(_PWM+16)& (0+255),b	;volatile
 30251                           
 30252                           ;pwm.c: 238: PWM.MGSTART=0xEB+10;
 30253  004770  0EF5               	movlw	245
 30254  004772  6FA4               	movwf	(_PWM+17)& (0+255),b	;volatile
 30255                           
 30256                           ;pwm.c: 239: PWM.GWMMAXCO=99;
 30257  004774  0E63               	movlw	99
 30258  004776  6FA5               	movwf	(_PWM+18)& (0+255),b	;volatile
 30259                           
 30260                           ;pwm.c: 240: PWM.MDMAXCO=0x48;
 30261  004778  0E48               	movlw	72
 30262  00477A  6FA6               	movwf	(_PWM+19)& (0+255),b	;volatile
 30263                           
 30264                           ;pwm.c: 241: PWM.MGMAXCO=0xEB+10;
 30265  00477C  0EF5               	movlw	245
 30266  00477E  6FA7               	movwf	(_PWM+20)& (0+255),b	;volatile
 30267                           
 30268                           ;pwm.c: 242: PWM.GWMMAXCW=99;
 30269  004780  0E63               	movlw	99
 30270  004782  6FA8               	movwf	(_PWM+21)& (0+255),b	;volatile
 30271                           
 30272                           ;pwm.c: 243: PWM.MDMAXCW=0x48;
 30273  004784  0E48               	movlw	72
 30274  004786  6FA9               	movwf	(_PWM+22)& (0+255),b	;volatile
 30275                           
 30276                           ;pwm.c: 244: PWM.MGMAXCW=0xEB+10;
 30277  004788  0EF5               	movlw	245
 30278  00478A  6FAA               	movwf	(_PWM+23)& (0+255),b	;volatile
 30279                           
 30280                           ;pwm.c: 245: PWM.FIRSTPB=0xAA;
 30281  00478C  0EAA               	movlw	170
 30282  00478E  6FAB               	movwf	(_PWM+24)& (0+255),b	;volatile
 30283                           
 30284                           ;pwm.c: 246: PWM.PROP1=0xEB-1*((0xEB-0x48)/7);
 30285  004790  0ED4               	movlw	212
 30286  004792  6FAC               	movwf	(_PWM+25)& (0+255),b	;volatile
 30287                           
 30288                           ;pwm.c: 247: PWM.PROP2=0xEB-2*((0xEB-0x48)/7);
 30289  004794  0EBD               	movlw	189
 30290  004796  6FAD               	movwf	(_PWM+26)& (0+255),b	;volatile
 30291                           
 30292                           ;pwm.c: 248: PWM.PROP3=0xEB-3*((0xEB-0x48)/7);
 30293  004798  0EA6               	movlw	166
 30294  00479A  6FAE               	movwf	(_PWM+27)& (0+255),b	;volatile
 30295                           
 30296                           ;pwm.c: 249: break;
 30297  00479C  0CA6               	retlw	166
 30298  00479E                     l2572:
 30299                           
 30300                           ; BSR set to: 0
 30301                           ;pwm.c: 252: {
 30302                           ;pwm.c: 253: PWM._ENOSC=(1!=0);
 30303  00479E  8393               	bsf	_PWM& (0+255),1,b	;volatile
 30304                           
 30305                           ; BSR set to: 0
 30306                           ;pwm.c: 254: PWM.MDMOD=0x40;
 30307  0047A0  0E40               	movlw	64
 30308  0047A2  6F9C               	movwf	(_PWM+9)& (0+255),b	;volatile
 30309                           
 30310                           ;pwm.c: 255: PWM.MGMOD=0xE0;
 30311  0047A4  0EE0               	movlw	224
 30312  0047A6  6F9D               	movwf	(_PWM+10)& (0+255),b	;volatile
 30313                           
 30314                           ;pwm.c: 256: PWM.MAXOSC=30;
 30315  0047A8  0E1E               	movlw	30
 30316  0047AA  6F9E               	movwf	(_PWM+11)& (0+255),b	;volatile
 30317                           
 30318                           ;pwm.c: 257: PWM.MINOSC=5;
 30319                           
 30320                           ;pwm.c: 258: PWM.MAD_MOD=0x14;
 30321                           
 30322                           ;pwm.c: 259: PWM.MAG_MOD=0xF7;
 30323                           
 30324                           ;pwm.c: 260: PWM.GWMSTART=99;
 30325  0047AC  D864               	call	PL38	;call to abstracted procedure
 30326                           
 30327                           ;pwm.c: 261: PWM.MDSTART=0x40;
 30328  0047AE  0E40               	movlw	64
 30329  0047B0  6FA3               	movwf	(_PWM+16)& (0+255),b	;volatile
 30330                           
 30331                           ;pwm.c: 262: PWM.MGSTART=0xE0+10;
 30332  0047B2  0EEA               	movlw	234
 30333  0047B4  6FA4               	movwf	(_PWM+17)& (0+255),b	;volatile
 30334                           
 30335                           ;pwm.c: 263: PWM.GWMMAXCO=99;
 30336  0047B6  0E63               	movlw	99
 30337  0047B8  6FA5               	movwf	(_PWM+18)& (0+255),b	;volatile
 30338                           
 30339                           ;pwm.c: 264: PWM.MDMAXCO=0x40;
 30340  0047BA  0E40               	movlw	64
 30341  0047BC  6FA6               	movwf	(_PWM+19)& (0+255),b	;volatile
 30342                           
 30343                           ;pwm.c: 265: PWM.MGMAXCO=0xE0+10;
 30344  0047BE  0EEA               	movlw	234
 30345  0047C0  6FA7               	movwf	(_PWM+20)& (0+255),b	;volatile
 30346                           
 30347                           ;pwm.c: 266: PWM.GWMMAXCW=99;
 30348  0047C2  0E63               	movlw	99
 30349  0047C4  6FA8               	movwf	(_PWM+21)& (0+255),b	;volatile
 30350                           
 30351                           ;pwm.c: 267: PWM.MDMAXCW=0x40;
 30352  0047C6  0E40               	movlw	64
 30353  0047C8  6FA9               	movwf	(_PWM+22)& (0+255),b	;volatile
 30354                           
 30355                           ;pwm.c: 268: PWM.MGMAXCW=0xE0+10;
 30356  0047CA  0EEA               	movlw	234
 30357  0047CC  6FAA               	movwf	(_PWM+23)& (0+255),b	;volatile
 30358                           
 30359                           ;pwm.c: 269: PWM.FIRSTPB=0xA3;
 30360  0047CE  0EA3               	movlw	163
 30361  0047D0  6FAB               	movwf	(_PWM+24)& (0+255),b	;volatile
 30362                           
 30363                           ;pwm.c: 270: PWM.PROP1=0xE0-1*((0xE0-0x40)/7);
 30364  0047D2  0ECA               	movlw	202
 30365  0047D4  6FAC               	movwf	(_PWM+25)& (0+255),b	;volatile
 30366                           
 30367                           ;pwm.c: 271: PWM.PROP2=0xE0-2*((0xE0-0x40)/7);
 30368  0047D6  0EB4               	movlw	180
 30369  0047D8  6FAD               	movwf	(_PWM+26)& (0+255),b	;volatile
 30370                           
 30371                           ;pwm.c: 272: PWM.PROP3=0xE0-3*((0xE0-0x40)/7);
 30372  0047DA  0E9E               	movlw	158
 30373  0047DC  6FAE               	movwf	(_PWM+27)& (0+255),b	;volatile
 30374                           
 30375                           ;pwm.c: 273: break;
 30376  0047DE  0C9E               	retlw	158
 30377  0047E0                     l2573:
 30378                           
 30379                           ; BSR set to: 0
 30380                           ;pwm.c: 303: {
 30381                           ;pwm.c: 304: PWM._ENOSC=(1!=0);
 30382  0047E0  8393               	bsf	_PWM& (0+255),1,b	;volatile
 30383                           
 30384                           ; BSR set to: 0
 30385                           ;pwm.c: 305: PWM.MDMOD=0x5A;
 30386  0047E2  0E5A               	movlw	90
 30387  0047E4  6F9C               	movwf	(_PWM+9)& (0+255),b	;volatile
 30388                           
 30389                           ;pwm.c: 306: PWM.MGMOD=0xCD;
 30390  0047E6  0ECD               	movlw	205
 30391  0047E8  6F9D               	movwf	(_PWM+10)& (0+255),b	;volatile
 30392                           
 30393                           ;pwm.c: 307: PWM.MAXOSC=25;
 30394  0047EA  0E19               	movlw	25
 30395  0047EC  6F9E               	movwf	(_PWM+11)& (0+255),b	;volatile
 30396                           
 30397                           ;pwm.c: 308: PWM.MINOSC=5;
 30398                           
 30399                           ;pwm.c: 309: PWM.MAD_MOD=0x14;
 30400                           
 30401                           ;pwm.c: 310: PWM.MAG_MOD=0xF7;
 30402                           
 30403                           ;pwm.c: 311: PWM.GWMSTART=99;
 30404  0047EE  D843               	call	PL38	;call to abstracted procedure
 30405                           
 30406                           ;pwm.c: 312: PWM.MDSTART=0x5A;
 30407  0047F0  0E5A               	movlw	90
 30408  0047F2  6FA3               	movwf	(_PWM+16)& (0+255),b	;volatile
 30409                           
 30410                           ;pwm.c: 313: PWM.MGSTART=0xCD+10;
 30411  0047F4  0ED7               	movlw	215
 30412  0047F6  6FA4               	movwf	(_PWM+17)& (0+255),b	;volatile
 30413                           
 30414                           ;pwm.c: 314: PWM.GWMMAXCO=99;
 30415  0047F8  0E63               	movlw	99
 30416  0047FA  6FA5               	movwf	(_PWM+18)& (0+255),b	;volatile
 30417                           
 30418                           ;pwm.c: 315: PWM.MDMAXCO=0x5A;
 30419  0047FC  0E5A               	movlw	90
 30420  0047FE  6FA6               	movwf	(_PWM+19)& (0+255),b	;volatile
 30421                           
 30422                           ;pwm.c: 316: PWM.MGMAXCO=0xCD+10;
 30423  004800  0ED7               	movlw	215
 30424  004802  6FA7               	movwf	(_PWM+20)& (0+255),b	;volatile
 30425                           
 30426                           ;pwm.c: 317: PWM.GWMMAXCW=99;
 30427  004804  0E63               	movlw	99
 30428  004806  6FA8               	movwf	(_PWM+21)& (0+255),b	;volatile
 30429                           
 30430                           ;pwm.c: 318: PWM.MDMAXCW=0x5A;
 30431  004808  0E5A               	movlw	90
 30432  00480A  6FA9               	movwf	(_PWM+22)& (0+255),b	;volatile
 30433                           
 30434                           ;pwm.c: 319: PWM.MGMAXCW=0xCD+10;
 30435  00480C  0ED7               	movlw	215
 30436  00480E  6FAA               	movwf	(_PWM+23)& (0+255),b	;volatile
 30437                           
 30438                           ;pwm.c: 320: PWM.FIRSTPB=0x9B;
 30439  004810  0E9B               	movlw	155
 30440  004812  6FAB               	movwf	(_PWM+24)& (0+255),b	;volatile
 30441                           
 30442                           ;pwm.c: 321: PWM.PROP1=0xCD-1*((0xCD-0x5A)/7);
 30443  004814  0EBD               	movlw	189
 30444  004816  6FAC               	movwf	(_PWM+25)& (0+255),b	;volatile
 30445                           
 30446                           ;pwm.c: 322: PWM.PROP2=0xCD-2*((0xCD-0x5A)/7);
 30447  004818  0EAD               	movlw	173
 30448  00481A  6FAD               	movwf	(_PWM+26)& (0+255),b	;volatile
 30449                           
 30450                           ;pwm.c: 323: PWM.PROP3=0xCD-3*((0xCD-0x5A)/7);
 30451  00481C  0E9D               	movlw	157
 30452  00481E  6FAE               	movwf	(_PWM+27)& (0+255),b	;volatile
 30453                           
 30454                           ;pwm.c: 324: break;
 30455  004820  0C9D               	retlw	157
 30456  004822                     l2574:
 30457                           
 30458                           ; BSR set to: 0
 30459                           ;pwm.c: 327: {
 30460                           ;pwm.c: 328: PWM._ENOSC=(1!=0);
 30461  004822  8393               	bsf	_PWM& (0+255),1,b	;volatile
 30462                           
 30463                           ; BSR set to: 0
 30464                           ;pwm.c: 329: PWM.MDMOD=0x35;
 30465  004824  0E35               	movlw	53
 30466  004826  6F9C               	movwf	(_PWM+9)& (0+255),b	;volatile
 30467                           
 30468                           ;pwm.c: 330: PWM.MGMOD=0xF0;
 30469  004828  0EF0               	movlw	240
 30470  00482A  6F9D               	movwf	(_PWM+10)& (0+255),b	;volatile
 30471                           
 30472                           ;pwm.c: 331: PWM.MAXOSC=15;
 30473  00482C  0E0F               	movlw	15
 30474  00482E  6F9E               	movwf	(_PWM+11)& (0+255),b	;volatile
 30475                           
 30476                           ;pwm.c: 332: PWM.MINOSC=5;
 30477                           
 30478                           ;pwm.c: 333: PWM.MAD_MOD=0x14;
 30479                           
 30480                           ;pwm.c: 334: PWM.MAG_MOD=0xF7;
 30481                           
 30482                           ;pwm.c: 335: PWM.GWMSTART=99;
 30483  004830  D822               	call	PL38	;call to abstracted procedure
 30484                           
 30485                           ;pwm.c: 336: PWM.MDSTART=0x35;
 30486  004832  0E35               	movlw	53
 30487  004834  6FA3               	movwf	(_PWM+16)& (0+255),b	;volatile
 30488                           
 30489                           ;pwm.c: 337: PWM.MGSTART=0xF0+10;
 30490  004836  0EFA               	movlw	250
 30491  004838  6FA4               	movwf	(_PWM+17)& (0+255),b	;volatile
 30492                           
 30493                           ;pwm.c: 338: PWM.GWMMAXCO=99;
 30494  00483A  0E63               	movlw	99
 30495  00483C  6FA5               	movwf	(_PWM+18)& (0+255),b	;volatile
 30496                           
 30497                           ;pwm.c: 339: PWM.MDMAXCO=0x35;
 30498  00483E  0E35               	movlw	53
 30499  004840  6FA6               	movwf	(_PWM+19)& (0+255),b	;volatile
 30500                           
 30501                           ;pwm.c: 340: PWM.MGMAXCO=0xF0+10;
 30502  004842  0EFA               	movlw	250
 30503  004844  6FA7               	movwf	(_PWM+20)& (0+255),b	;volatile
 30504                           
 30505                           ;pwm.c: 341: PWM.GWMMAXCW=99;
 30506  004846  0E63               	movlw	99
 30507  004848  6FA8               	movwf	(_PWM+21)& (0+255),b	;volatile
 30508                           
 30509                           ;pwm.c: 342: PWM.MDMAXCW=0x35;
 30510  00484A  0E35               	movlw	53
 30511  00484C  6FA9               	movwf	(_PWM+22)& (0+255),b	;volatile
 30512                           
 30513                           ;pwm.c: 343: PWM.MGMAXCW=0xF0+10;
 30514  00484E  0EFA               	movlw	250
 30515  004850  6FAA               	movwf	(_PWM+23)& (0+255),b	;volatile
 30516                           
 30517                           ;pwm.c: 344: PWM.FIRSTPB=0xA5;
 30518  004852  0EA5               	movlw	165
 30519  004854  6FAB               	movwf	(_PWM+24)& (0+255),b	;volatile
 30520                           
 30521                           ;pwm.c: 345: PWM.PROP1=0xF0-1*((0xF0-0x35)/7);
 30522  004856  0ED6               	movlw	214
 30523  004858  6FAC               	movwf	(_PWM+25)& (0+255),b	;volatile
 30524                           
 30525                           ;pwm.c: 346: PWM.PROP2=0xF0-2*((0xF0-0x35)/7);
 30526  00485A  0EBC               	movlw	188
 30527  00485C  6FAD               	movwf	(_PWM+26)& (0+255),b	;volatile
 30528                           
 30529                           ;pwm.c: 347: PWM.PROP3=0xF0-3*((0xF0-0x35)/7);
 30530  00485E  0EA2               	movlw	162
 30531  004860  6FAE               	movwf	(_PWM+27)& (0+255),b	;volatile
 30532                           
 30533                           ;pwm.c: 348: break;
 30534  004862  0CA2               	retlw	162
 30535  004864                     l33676:
 30536                           
 30537                           ; BSR set to: 0
 30538  004864  5022               	movf	ModParam@tpk,w,c
 30539                           
 30540                           ; Switch size 1, requested type "space"
 30541                           ; Number of cases is 4, Range of values is 0 to 3
 30542                           ; switch strategies available:
 30543                           ; Name         Instructions Cycles
 30544                           ; simple_byte           13     7 (average)
 30545                           ;	Chosen strategy is simple_byte
 30546  004866  E101 D779          	bz	l2570
 30547  00486A  0A01               	xorlw	1	; case 1
 30548  00486C  E098               	bz	l2572
 30549  00486E  0A03               	xorlw	3	; case 2
 30550  004870  E0B7               	bz	l2573
 30551  004872  0A01               	xorlw	1	; case 3
 30552  004874  D7D6               	goto	l2574
 30553  004876                     __end_of_ModParam:
 30554                           	opt stack 0
 30555  004876                     PL38:
 30556                           	opt stack 25
 30557  004876  0E05               	movlw	5
 30558  004878  6F9F               	movwf	(_PWM+12)& (0+255),b	;volatile
 30559  00487A  0E14               	movlw	20
 30560  00487C  6FA0               	movwf	(_PWM+13)& (0+255),b	;volatile
 30561  00487E  0EF7               	movlw	247
 30562  004880  6FA1               	movwf	(_PWM+14)& (0+255),b	;volatile
 30563  004882  0E63               	movlw	99
 30564  004884  6FA2               	movwf	(_PWM+15)& (0+255),b	;volatile
 30565  004886  0C63               	retlw	99
 30566  004888                     __end_ofPL38:
 30567                           	opt stack 0
 30568                           tblptru	equ	0xFF8
 30569                           tblptrh	equ	0xFF7
 30570                           tblptrl	equ	0xFF6
 30571                           tablat	equ	0xFF5
 30572                           prodh	equ	0xFF4
 30573                           prodl	equ	0xFF3
 30574                           intcon	equ	0xFF2
 30575                           postinc0	equ	0xFEE
 30576                           wreg	equ	0xFE8
 30577                           indf1	equ	0xFE7
 30578                           postinc1	equ	0xFE6
 30579                           postdec1	equ	0xFE5
 30580                           fsr1h	equ	0xFE2
 30581                           fsr1l	equ	0xFE1
 30582                           indf2	equ	0xFDF
 30583                           postinc2	equ	0xFDE
 30584                           postdec2	equ	0xFDD
 30585                           fsr2h	equ	0xFDA
 30586                           fsr2l	equ	0xFD9
 30587                           status	equ	0xFD8
 30588                           
 30589 ;; *************** function _MocStart *****************
 30590 ;; Defined at:
 30591 ;;		line 446 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
 30592 ;; Parameters:    Size  Location     Type
 30593 ;;  nst             1    wreg     unsigned char 
 30594 ;; Auto vars:     Size  Location     Type
 30595 ;;  nst             1   10[BANK0 ] unsigned char 
 30596 ;;  tmp             2    8[BANK0 ] unsigned int 
 30597 ;; Return value:  Size  Location     Type
 30598 ;;		None               void
 30599 ;; Registers used:
 30600 ;;		wreg, status,2, status,0, cstack
 30601 ;; Tracked objects:
 30602 ;;		On entry : F/1
 30603 ;;		On exit  : F/0
 30604 ;;		Unchanged: FFFFFFF0/0
 30605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30607 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30609 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30610 ;;Total ram usage:        3 bytes
 30611 ;; Hardware stack levels used:    1
 30612 ;; Hardware stack levels required when called:    5
 30613 ;; This function calls:
 30614 ;;		___wmul
 30615 ;;		___awdiv
 30616 ;;		___lwdiv
 30617 ;; This function is called by:
 30618 ;;		_RdEEParam
 30619 ;; This function uses a non-reentrant model
 30620 ;;
 30621                           
 30622                           	psect	text129
 30623  00963E                     __ptext129:
 30624                           	opt stack 0
 30625  00963E                     _MocStart:
 30626                           	opt stack 24
 30627                           
 30628                           ; BSR set to: 0
 30629                           ;MocStart@nst stored from wreg
 30630  00963E  CFE8 F0FD          	movff	wreg,MocStart@nst
 30631                           
 30632                           ; BSR set to: 1
 30633                           ;pwm.c: 447: unsigned int tmp;
 30634                           ;pwm.c: 449: if(nst>PWM.GWMSTART) nst=PWM.GWMSTART;
 30635  009642  0100               	movlb	0	; () banked
 30636  009644  51FD               	movf	MocStart@nst& (0+255),w,b
 30637  009646  61A2               	cpfslt	(_PWM+15)& (0+255),b	;volatile
 30638  009648  D002               	goto	l33718
 30639                           
 30640                           ; BSR set to: 0
 30641  00964A  C0A2  F0FD         	movff	_PWM+15,MocStart@nst	;volatile
 30642  00964E                     l33718:
 30643                           
 30644                           ; BSR set to: 0
 30645                           ;pwm.c: 450: tmp=((PWM.MGSTART-PWM.MDSTART)*10)/PWM.GWMSTART;
 30646  00964E  6A21               	clrf	?___wmul+3,c
 30647  009650  0E0A               	movlw	10
 30648  009652  6E20               	movwf	?___wmul+2,c
 30649  009654  51A3               	movf	(_PWM+16)& (0+255),w,b	;volatile
 30650  009656  5DA4               	subwf	(_PWM+17)& (0+255),w,b	;volatile
 30651  009658  6E1E               	movwf	?___wmul,c
 30652  00965A  6A1F               	clrf	?___wmul+1,c
 30653  00965C  A0D8               	btfss	status,0,c
 30654  00965E  061F               	decf	?___wmul+1,f,c
 30655  009660  EC9C  F056         	call	___wmul	;wreg free
 30656  009664  C01E  F0F3         	movff	?___wmul,?___awdiv
 30657  009668  C01F  F0F4         	movff	?___wmul+1,?___awdiv+1
 30658  00966C  C0A2  F0F5         	movff	_PWM+15,?___awdiv+2	;volatile
 30659  009670  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 30660  009672  EC37  F04A         	call	___awdiv	;wreg free
 30661  009676  C0F3  F0FB         	movff	?___awdiv,MocStart@tmp
 30662  00967A  C0F4  F0FC         	movff	?___awdiv+1,MocStart@tmp+1
 30663                           
 30664                           ; BSR set to: 0
 30665                           ;pwm.c: 451: PWM.MSTART=PWM.MDSTART+(unsigned char)((nst*tmp)/10);
 30666  00967E  C0FB  F020         	movff	MocStart@tmp,?___wmul+2
 30667  009682  C0FC  F021         	movff	MocStart@tmp+1,?___wmul+3
 30668  009686  C0FD  F01E         	movff	MocStart@nst,?___wmul
 30669  00968A  6A1F               	clrf	?___wmul+1,c
 30670  00968C  EC9C  F056         	call	___wmul	;wreg free
 30671  009690  C01E  F0F3         	movff	?___wmul,?___lwdiv
 30672  009694  C01F  F0F4         	movff	?___wmul+1,?___lwdiv+1
 30673  009698  6BF6               	clrf	(?___lwdiv+3)& (0+255),b
 30674  00969A  0E0A               	movlw	10
 30675  00969C  6FF5               	movwf	(?___lwdiv+2)& (0+255),b
 30676  00969E  EC93  F051         	call	___lwdiv	;wreg free
 30677  0096A2  51F3               	movf	?___lwdiv& (0+255),w,b
 30678  0096A4  25A3               	addwf	(_PWM+16)& (0+255),w,b	;volatile
 30679  0096A6  6FAF               	movwf	(_PWM+28)& (0+255),b	;volatile
 30680                           
 30681                           ; BSR set to: 0
 30682  0096A8  0012               	return	
 30683  0096AA                     __end_of_MocStart:
 30684                           	opt stack 0
 30685                           tblptru	equ	0xFF8
 30686                           tblptrh	equ	0xFF7
 30687                           tblptrl	equ	0xFF6
 30688                           tablat	equ	0xFF5
 30689                           prodh	equ	0xFF4
 30690                           prodl	equ	0xFF3
 30691                           intcon	equ	0xFF2
 30692                           postinc0	equ	0xFEE
 30693                           wreg	equ	0xFE8
 30694                           indf1	equ	0xFE7
 30695                           postinc1	equ	0xFE6
 30696                           postdec1	equ	0xFE5
 30697                           fsr1h	equ	0xFE2
 30698                           fsr1l	equ	0xFE1
 30699                           indf2	equ	0xFDF
 30700                           postinc2	equ	0xFDE
 30701                           postdec2	equ	0xFDD
 30702                           fsr2h	equ	0xFDA
 30703                           fsr2l	equ	0xFD9
 30704                           status	equ	0xFD8
 30705                           
 30706 ;; *************** function _MocMaksCO *****************
 30707 ;; Defined at:
 30708 ;;		line 458 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
 30709 ;; Parameters:    Size  Location     Type
 30710 ;;  nst             1    wreg     unsigned char 
 30711 ;; Auto vars:     Size  Location     Type
 30712 ;;  nst             1   10[BANK0 ] unsigned char 
 30713 ;;  tmp             2    8[BANK0 ] unsigned int 
 30714 ;; Return value:  Size  Location     Type
 30715 ;;		None               void
 30716 ;; Registers used:
 30717 ;;		wreg, status,2, status,0, cstack
 30718 ;; Tracked objects:
 30719 ;;		On entry : F/1
 30720 ;;		On exit  : F/0
 30721 ;;		Unchanged: FFFFFFF0/0
 30722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30724 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30726 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30727 ;;Total ram usage:        3 bytes
 30728 ;; Hardware stack levels used:    1
 30729 ;; Hardware stack levels required when called:    5
 30730 ;; This function calls:
 30731 ;;		___wmul
 30732 ;;		___awdiv
 30733 ;;		___lwdiv
 30734 ;; This function is called by:
 30735 ;;		_RdEEParam
 30736 ;; This function uses a non-reentrant model
 30737 ;;
 30738                           
 30739                           	psect	text130
 30740  0096AA                     __ptext130:
 30741                           	opt stack 0
 30742  0096AA                     _MocMaksCO:
 30743                           	opt stack 24
 30744                           
 30745                           ; BSR set to: 0
 30746                           ;MocMaksCO@nst stored from wreg
 30747  0096AA  CFE8 F0FD          	movff	wreg,MocMaksCO@nst
 30748                           
 30749                           ; BSR set to: 1
 30750                           ;pwm.c: 459: unsigned int tmp;
 30751                           ;pwm.c: 461: if(nst>PWM.GWMMAXCO) nst=PWM.GWMMAXCO;
 30752  0096AE  0100               	movlb	0	; () banked
 30753  0096B0  51FD               	movf	MocMaksCO@nst& (0+255),w,b
 30754  0096B2  61A5               	cpfslt	(_PWM+18)& (0+255),b	;volatile
 30755  0096B4  D002               	goto	l33726
 30756                           
 30757                           ; BSR set to: 0
 30758  0096B6  C0A5  F0FD         	movff	_PWM+18,MocMaksCO@nst	;volatile
 30759  0096BA                     l33726:
 30760                           
 30761                           ; BSR set to: 0
 30762                           ;pwm.c: 462: tmp=((PWM.MGMAXCO-PWM.MDMAXCO)*10)/PWM.GWMMAXCO;
 30763  0096BA  6A21               	clrf	?___wmul+3,c
 30764  0096BC  0E0A               	movlw	10
 30765  0096BE  6E20               	movwf	?___wmul+2,c
 30766  0096C0  51A6               	movf	(_PWM+19)& (0+255),w,b	;volatile
 30767  0096C2  5DA7               	subwf	(_PWM+20)& (0+255),w,b	;volatile
 30768  0096C4  6E1E               	movwf	?___wmul,c
 30769  0096C6  6A1F               	clrf	?___wmul+1,c
 30770  0096C8  A0D8               	btfss	status,0,c
 30771  0096CA  061F               	decf	?___wmul+1,f,c
 30772  0096CC  EC9C  F056         	call	___wmul	;wreg free
 30773  0096D0  C01E  F0F3         	movff	?___wmul,?___awdiv
 30774  0096D4  C01F  F0F4         	movff	?___wmul+1,?___awdiv+1
 30775  0096D8  C0A5  F0F5         	movff	_PWM+18,?___awdiv+2	;volatile
 30776  0096DC  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 30777  0096DE  EC37  F04A         	call	___awdiv	;wreg free
 30778  0096E2  C0F3  F0FB         	movff	?___awdiv,MocMaksCO@tmp
 30779  0096E6  C0F4  F0FC         	movff	?___awdiv+1,MocMaksCO@tmp+1
 30780                           
 30781                           ; BSR set to: 0
 30782                           ;pwm.c: 463: PWM.MMAXCO=PWM.MDMAXCO+(unsigned char)((nst*tmp)/10);
 30783  0096EA  C0FB  F020         	movff	MocMaksCO@tmp,?___wmul+2
 30784  0096EE  C0FC  F021         	movff	MocMaksCO@tmp+1,?___wmul+3
 30785  0096F2  C0FD  F01E         	movff	MocMaksCO@nst,?___wmul
 30786  0096F6  6A1F               	clrf	?___wmul+1,c
 30787  0096F8  EC9C  F056         	call	___wmul	;wreg free
 30788  0096FC  C01E  F0F3         	movff	?___wmul,?___lwdiv
 30789  009700  C01F  F0F4         	movff	?___wmul+1,?___lwdiv+1
 30790  009704  6BF6               	clrf	(?___lwdiv+3)& (0+255),b
 30791  009706  0E0A               	movlw	10
 30792  009708  6FF5               	movwf	(?___lwdiv+2)& (0+255),b
 30793  00970A  EC93  F051         	call	___lwdiv	;wreg free
 30794  00970E  51F3               	movf	?___lwdiv& (0+255),w,b
 30795  009710  25A6               	addwf	(_PWM+19)& (0+255),w,b	;volatile
 30796  009712  6FB0               	movwf	(_PWM+29)& (0+255),b	;volatile
 30797                           
 30798                           ; BSR set to: 0
 30799  009714  0012               	return	
 30800  009716                     __end_of_MocMaksCO:
 30801                           	opt stack 0
 30802                           tblptru	equ	0xFF8
 30803                           tblptrh	equ	0xFF7
 30804                           tblptrl	equ	0xFF6
 30805                           tablat	equ	0xFF5
 30806                           prodh	equ	0xFF4
 30807                           prodl	equ	0xFF3
 30808                           intcon	equ	0xFF2
 30809                           postinc0	equ	0xFEE
 30810                           wreg	equ	0xFE8
 30811                           indf1	equ	0xFE7
 30812                           postinc1	equ	0xFE6
 30813                           postdec1	equ	0xFE5
 30814                           fsr1h	equ	0xFE2
 30815                           fsr1l	equ	0xFE1
 30816                           indf2	equ	0xFDF
 30817                           postinc2	equ	0xFDE
 30818                           postdec2	equ	0xFDD
 30819                           fsr2h	equ	0xFDA
 30820                           fsr2l	equ	0xFD9
 30821                           status	equ	0xFD8
 30822                           
 30823 ;; *************** function _MocMaksCW *****************
 30824 ;; Defined at:
 30825 ;;		line 470 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
 30826 ;; Parameters:    Size  Location     Type
 30827 ;;  nst             1    wreg     unsigned char 
 30828 ;; Auto vars:     Size  Location     Type
 30829 ;;  nst             1   10[BANK0 ] unsigned char 
 30830 ;;  tmp             2    8[BANK0 ] unsigned int 
 30831 ;; Return value:  Size  Location     Type
 30832 ;;		None               void
 30833 ;; Registers used:
 30834 ;;		wreg, status,2, status,0, cstack
 30835 ;; Tracked objects:
 30836 ;;		On entry : F/1
 30837 ;;		On exit  : F/0
 30838 ;;		Unchanged: FFFFFFF0/0
 30839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30841 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30843 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30844 ;;Total ram usage:        3 bytes
 30845 ;; Hardware stack levels used:    1
 30846 ;; Hardware stack levels required when called:    5
 30847 ;; This function calls:
 30848 ;;		___wmul
 30849 ;;		___awdiv
 30850 ;;		___lwdiv
 30851 ;; This function is called by:
 30852 ;;		_RdEEParam
 30853 ;; This function uses a non-reentrant model
 30854 ;;
 30855                           
 30856                           	psect	text131
 30857  009716                     __ptext131:
 30858                           	opt stack 0
 30859  009716                     _MocMaksCW:
 30860                           	opt stack 24
 30861                           
 30862                           ; BSR set to: 0
 30863                           ;MocMaksCW@nst stored from wreg
 30864  009716  CFE8 F0FD          	movff	wreg,MocMaksCW@nst
 30865                           
 30866                           ; BSR set to: 1
 30867                           ;pwm.c: 471: unsigned int tmp;
 30868                           ;pwm.c: 473: if(nst>PWM.GWMMAXCW) nst=PWM.GWMMAXCW;
 30869  00971A  0100               	movlb	0	; () banked
 30870  00971C  51FD               	movf	MocMaksCW@nst& (0+255),w,b
 30871  00971E  61A8               	cpfslt	(_PWM+21)& (0+255),b	;volatile
 30872  009720  D002               	goto	l33734
 30873                           
 30874                           ; BSR set to: 0
 30875  009722  C0A8  F0FD         	movff	_PWM+21,MocMaksCW@nst	;volatile
 30876  009726                     l33734:
 30877                           
 30878                           ; BSR set to: 0
 30879                           ;pwm.c: 474: tmp=((PWM.MGMAXCW-PWM.MDMAXCW)*10)/PWM.GWMMAXCW;
 30880  009726  6A21               	clrf	?___wmul+3,c
 30881  009728  0E0A               	movlw	10
 30882  00972A  6E20               	movwf	?___wmul+2,c
 30883  00972C  51A9               	movf	(_PWM+22)& (0+255),w,b	;volatile
 30884  00972E  5DAA               	subwf	(_PWM+23)& (0+255),w,b	;volatile
 30885  009730  6E1E               	movwf	?___wmul,c
 30886  009732  6A1F               	clrf	?___wmul+1,c
 30887  009734  A0D8               	btfss	status,0,c
 30888  009736  061F               	decf	?___wmul+1,f,c
 30889  009738  EC9C  F056         	call	___wmul	;wreg free
 30890  00973C  C01E  F0F3         	movff	?___wmul,?___awdiv
 30891  009740  C01F  F0F4         	movff	?___wmul+1,?___awdiv+1
 30892  009744  C0A8  F0F5         	movff	_PWM+21,?___awdiv+2	;volatile
 30893  009748  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 30894  00974A  EC37  F04A         	call	___awdiv	;wreg free
 30895  00974E  C0F3  F0FB         	movff	?___awdiv,MocMaksCW@tmp
 30896  009752  C0F4  F0FC         	movff	?___awdiv+1,MocMaksCW@tmp+1
 30897                           
 30898                           ; BSR set to: 0
 30899                           ;pwm.c: 475: PWM.MMAXCW=PWM.MDMAXCW+(unsigned char)((nst*tmp)/10);
 30900  009756  C0FB  F020         	movff	MocMaksCW@tmp,?___wmul+2
 30901  00975A  C0FC  F021         	movff	MocMaksCW@tmp+1,?___wmul+3
 30902  00975E  C0FD  F01E         	movff	MocMaksCW@nst,?___wmul
 30903  009762  6A1F               	clrf	?___wmul+1,c
 30904  009764  EC9C  F056         	call	___wmul	;wreg free
 30905  009768  C01E  F0F3         	movff	?___wmul,?___lwdiv
 30906  00976C  C01F  F0F4         	movff	?___wmul+1,?___lwdiv+1
 30907  009770  6BF6               	clrf	(?___lwdiv+3)& (0+255),b
 30908  009772  0E0A               	movlw	10
 30909  009774  6FF5               	movwf	(?___lwdiv+2)& (0+255),b
 30910  009776  EC93  F051         	call	___lwdiv	;wreg free
 30911  00977A  51F3               	movf	?___lwdiv& (0+255),w,b
 30912  00977C  25A9               	addwf	(_PWM+22)& (0+255),w,b	;volatile
 30913  00977E  6FB1               	movwf	(_PWM+30)& (0+255),b	;volatile
 30914                           
 30915                           ; BSR set to: 0
 30916  009780  0012               	return	
 30917  009782                     __end_of_MocMaksCW:
 30918                           	opt stack 0
 30919                           tblptru	equ	0xFF8
 30920                           tblptrh	equ	0xFF7
 30921                           tblptrl	equ	0xFF6
 30922                           tablat	equ	0xFF5
 30923                           prodh	equ	0xFF4
 30924                           prodl	equ	0xFF3
 30925                           intcon	equ	0xFF2
 30926                           postinc0	equ	0xFEE
 30927                           wreg	equ	0xFE8
 30928                           indf1	equ	0xFE7
 30929                           postinc1	equ	0xFE6
 30930                           postdec1	equ	0xFE5
 30931                           fsr1h	equ	0xFE2
 30932                           fsr1l	equ	0xFE1
 30933                           indf2	equ	0xFDF
 30934                           postinc2	equ	0xFDE
 30935                           postdec2	equ	0xFDD
 30936                           fsr2h	equ	0xFDA
 30937                           fsr2l	equ	0xFD9
 30938                           status	equ	0xFD8
 30939                           
 30940 ;; *************** function _StartCO *****************
 30941 ;; Defined at:
 30942 ;;		line 518 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 30943 ;; Parameters:    Size  Location     Type
 30944 ;;		None
 30945 ;; Auto vars:     Size  Location     Type
 30946 ;;		None
 30947 ;; Return value:  Size  Location     Type
 30948 ;;		None               void
 30949 ;; Registers used:
 30950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30951 ;; Tracked objects:
 30952 ;;		On entry : F/0
 30953 ;;		On exit  : F/0
 30954 ;;		Unchanged: 0/0
 30955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30960 ;;Total ram usage:        0 bytes
 30961 ;; Hardware stack levels used:    1
 30962 ;; Hardware stack levels required when called:    5
 30963 ;; This function calls:
 30964 ;;		_StartRTdS
 30965 ;; This function is called by:
 30966 ;;		_Moduluj
 30967 ;; This function uses a non-reentrant model
 30968 ;;
 30969                           
 30970                           	psect	text132
 30971  00A778                     __ptext132:
 30972                           	opt stack 0
 30973  00A778                     _StartCO:
 30974                           	opt stack 24
 30975                           
 30976                           ; BSR set to: 0
 30977                           ;rgl.c: 521: if(rgl.btco||rgl.btcw) return;
 30978                           
 30979                           ; BSR set to: 0
 30980  00A778  A027               	btfss	_rgl,0,c
 30981                           
 30982                           ; BSR set to: 0
 30983  00A77A  B227               	btfsc	_rgl,1,c
 30984  00A77C  0012               	return	
 30985                           
 30986                           ; BSR set to: 0
 30987                           ;rgl.c: 522: StartRTdS(2);
 30988  00A77E  0E02               	movlw	2
 30989  00A780  ECC2  F057         	call	_StartRTdS
 30990                           
 30991                           ; BSR set to: 1
 30992                           ;rgl.c: 523: DtCO.dDCO=0;
 30993  00A784  0100               	movlb	0	; () banked
 30994  00A786  6BED               	clrf	(_DtCO+9)& (0+255),b
 30995                           
 30996                           ; BSR set to: 0
 30997                           ;rgl.c: 524: DtCO.indCO=0;
 30998  00A788  6BEE               	clrf	(_DtCO+10)& (0+255),b
 30999                           
 31000                           ; BSR set to: 0
 31001                           ;rgl.c: 525: DtCW.dDCW=0;
 31002  00A78A  6BD7               	clrf	(_DtCW+8)& (0+255),b
 31003                           
 31004                           ; BSR set to: 0
 31005                           ;rgl.c: 526: DtCW.indCW=0;
 31006  00A78C  6BD9               	clrf	(_DtCW+10)& (0+255),b
 31007                           
 31008                           ; BSR set to: 0
 31009                           ;rgl.c: 527: rgl.fz=0;
 31010  00A78E  9427               	bcf	_rgl,2,c
 31011                           
 31012                           ; BSR set to: 0
 31013                           ;rgl.c: 528: rgl.med_up=0;
 31014  00A790  9627               	bcf	_rgl,3,c
 31015                           
 31016                           ; BSR set to: 0
 31017                           ;rgl.c: 529: rgl.fast_up=0;
 31018  00A792  9827               	bcf	_rgl,4,c
 31019                           
 31020                           ; BSR set to: 0
 31021                           ;rgl.c: 531: if(PWM.MMAXCO>PWM.FIRSTPB)
 31022  00A794  51B0               	movf	(_PWM+29)& (0+255),w,b	;volatile
 31023  00A796  61AB               	cpfslt	(_PWM+24)& (0+255),b	;volatile
 31024  00A798  D003               	goto	l2931
 31025                           
 31026                           ; BSR set to: 0
 31027                           ;rgl.c: 532: {
 31028                           ;rgl.c: 533: rgl.xmod=PWM.FIRSTPB;
 31029  00A79A  C0AB  F02F         	movff	_PWM+24,_rgl+8	;volatile
 31030                           
 31031                           ;rgl.c: 534: }
 31032  00A79E  D002               	goto	l2932
 31033  00A7A0                     l2931:
 31034                           
 31035                           ; BSR set to: 0
 31036                           ;rgl.c: 535: else
 31037                           ;rgl.c: 536: {
 31038                           ;rgl.c: 537: rgl.xmod=PWM.MMAXCO;
 31039  00A7A0  C0B0  F02F         	movff	_PWM+29,_rgl+8	;volatile
 31040  00A7A4                     l2932:
 31041                           
 31042                           ; BSR set to: 0
 31043                           ;rgl.c: 538: }
 31044                           ;rgl.c: 539: rgl.srp=0;
 31045  00A7A4  6A2E               	clrf	_rgl+7,c
 31046                           
 31047                           ;rgl.c: 540: rgl.ytmp=0;
 31048  00A7A6  6A2D               	clrf	_rgl+6,c
 31049                           
 31050                           ;rgl.c: 541: rgl.nmod=0;
 31051  00A7A8  9A27               	bcf	_rgl,5,c
 31052                           
 31053                           ;rgl.c: 542: rgl.del1s=0;
 31054  00A7AA  9C27               	bcf	_rgl,6,c
 31055                           
 31056                           ;rgl.c: 543: rgl.inv_mod=0;
 31057  00A7AC  9028               	bcf	_rgl+1,0,c
 31058                           
 31059                           ; BSR set to: 0
 31060  00A7AE  0012               	return	
 31061  00A7B0                     __end_of_StartCO:
 31062                           	opt stack 0
 31063                           tblptru	equ	0xFF8
 31064                           tblptrh	equ	0xFF7
 31065                           tblptrl	equ	0xFF6
 31066                           tablat	equ	0xFF5
 31067                           prodh	equ	0xFF4
 31068                           prodl	equ	0xFF3
 31069                           intcon	equ	0xFF2
 31070                           postinc0	equ	0xFEE
 31071                           wreg	equ	0xFE8
 31072                           indf1	equ	0xFE7
 31073                           postinc1	equ	0xFE6
 31074                           postdec1	equ	0xFE5
 31075                           fsr1h	equ	0xFE2
 31076                           fsr1l	equ	0xFE1
 31077                           indf2	equ	0xFDF
 31078                           postinc2	equ	0xFDE
 31079                           postdec2	equ	0xFDD
 31080                           fsr2h	equ	0xFDA
 31081                           fsr2l	equ	0xFD9
 31082                           status	equ	0xFD8
 31083                           
 31084 ;; *************** function _ReadDataCO *****************
 31085 ;; Defined at:
 31086 ;;		line 749 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 31087 ;; Parameters:    Size  Location     Type
 31088 ;;		None
 31089 ;; Auto vars:     Size  Location     Type
 31090 ;;		None
 31091 ;; Return value:  Size  Location     Type
 31092 ;;		None               void
 31093 ;; Registers used:
 31094 ;;		None
 31095 ;; Tracked objects:
 31096 ;;		On entry : F/0
 31097 ;;		On exit  : F/0
 31098 ;;		Unchanged: FFFFFFF0/0
 31099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31104 ;;Total ram usage:        0 bytes
 31105 ;; Hardware stack levels used:    1
 31106 ;; Hardware stack levels required when called:    4
 31107 ;; This function calls:
 31108 ;;		Nothing
 31109 ;; This function is called by:
 31110 ;;		_Moduluj
 31111 ;; This function uses a non-reentrant model
 31112 ;;
 31113                           
 31114                           	psect	text133
 31115  00B5E6                     __ptext133:
 31116                           	opt stack 0
 31117  00B5E6                     _ReadDataCO:
 31118                           	opt stack 25
 31119                           
 31120                           ; BSR set to: 0
 31121                           ;rgl.c: 750: rgl.x_t=DtCO.DCO;
 31122                           
 31123                           ; BSR set to: 0
 31124  00B5E6  C0EC  F029         	movff	_DtCO+8,_rgl+2
 31125                           
 31126                           ;rgl.c: 751: rgl.x_dt=DtCO.dDCO;
 31127  00B5EA  C0ED  F02B         	movff	_DtCO+9,_rgl+4
 31128                           
 31129                           ; BSR set to: 0
 31130  00B5EE  0012               	return	
 31131  00B5F0                     __end_of_ReadDataCO:
 31132                           	opt stack 0
 31133                           tblptru	equ	0xFF8
 31134                           tblptrh	equ	0xFF7
 31135                           tblptrl	equ	0xFF6
 31136                           tablat	equ	0xFF5
 31137                           prodh	equ	0xFF4
 31138                           prodl	equ	0xFF3
 31139                           intcon	equ	0xFF2
 31140                           postinc0	equ	0xFEE
 31141                           wreg	equ	0xFE8
 31142                           indf1	equ	0xFE7
 31143                           postinc1	equ	0xFE6
 31144                           postdec1	equ	0xFE5
 31145                           fsr1h	equ	0xFE2
 31146                           fsr1l	equ	0xFE1
 31147                           indf2	equ	0xFDF
 31148                           postinc2	equ	0xFDE
 31149                           postdec2	equ	0xFDD
 31150                           fsr2h	equ	0xFDA
 31151                           fsr2l	equ	0xFD9
 31152                           status	equ	0xFD8
 31153                           
 31154 ;; *************** function _ModToCO *****************
 31155 ;; Defined at:
 31156 ;;		line 731 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 31157 ;; Parameters:    Size  Location     Type
 31158 ;;		None
 31159 ;; Auto vars:     Size  Location     Type
 31160 ;;		None
 31161 ;; Return value:  Size  Location     Type
 31162 ;;		None               void
 31163 ;; Registers used:
 31164 ;;		cstack
 31165 ;; Tracked objects:
 31166 ;;		On entry : F/0
 31167 ;;		On exit  : F/0
 31168 ;;		Unchanged: FFFFFFF0/0
 31169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31174 ;;Total ram usage:        0 bytes
 31175 ;; Hardware stack levels used:    1
 31176 ;; Hardware stack levels required when called:    5
 31177 ;; This function calls:
 31178 ;;		_ClrMod
 31179 ;; This function is called by:
 31180 ;;		_Moduluj
 31181 ;; This function uses a non-reentrant model
 31182 ;;
 31183                           
 31184                           	psect	text134
 31185  00B566                     __ptext134:
 31186                           	opt stack 0
 31187  00B566                     _ModToCO:
 31188                           	opt stack 24
 31189                           
 31190                           ; BSR set to: 0
 31191                           ;rgl.c: 732: rgl.btco=1;
 31192                           
 31193                           ; BSR set to: 0
 31194  00B566  8027               	bsf	_rgl,0,c
 31195                           
 31196                           ;rgl.c: 733: if(rgl.btcw)
 31197  00B568  A227               	btfss	_rgl,1,c
 31198  00B56A  0012               	return	
 31199                           
 31200                           ; BSR set to: 0
 31201                           ;rgl.c: 734: {
 31202                           ;rgl.c: 735: rgl.btcw=0;
 31203  00B56C  9227               	bcf	_rgl,1,c
 31204                           
 31205                           ; BSR set to: 0
 31206                           ;rgl.c: 736: ClrMod();
 31207  00B56E  EFC8  F059         	goto	_ClrMod	;wreg free
 31208  00B572                     __end_of_ModToCO:
 31209                           	opt stack 0
 31210                           tblptru	equ	0xFF8
 31211                           tblptrh	equ	0xFF7
 31212                           tblptrl	equ	0xFF6
 31213                           tablat	equ	0xFF5
 31214                           prodh	equ	0xFF4
 31215                           prodl	equ	0xFF3
 31216                           intcon	equ	0xFF2
 31217                           postinc0	equ	0xFEE
 31218                           wreg	equ	0xFE8
 31219                           indf1	equ	0xFE7
 31220                           postinc1	equ	0xFE6
 31221                           postdec1	equ	0xFE5
 31222                           fsr1h	equ	0xFE2
 31223                           fsr1l	equ	0xFE1
 31224                           indf2	equ	0xFDF
 31225                           postinc2	equ	0xFDE
 31226                           postdec2	equ	0xFDD
 31227                           fsr2h	equ	0xFDA
 31228                           fsr2l	equ	0xFD9
 31229                           status	equ	0xFD8
 31230                           
 31231 ;; *************** function _ModZgCO *****************
 31232 ;; Defined at:
 31233 ;;		line 301 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 31234 ;; Parameters:    Size  Location     Type
 31235 ;;		None
 31236 ;; Auto vars:     Size  Location     Type
 31237 ;;  m               4    1[BANK2 ] long 
 31238 ;;  p               1    0[BANK2 ] unsigned char 
 31239 ;; Return value:  Size  Location     Type
 31240 ;;		None               void
 31241 ;; Registers used:
 31242 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31243 ;; Tracked objects:
 31244 ;;		On entry : F/0
 31245 ;;		On exit  : D/0
 31246 ;;		Unchanged: FFFFFFF0/0
 31247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31249 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31250 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31251 ;;      Totals:         0       5       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31252 ;;Total ram usage:       10 bytes
 31253 ;; Hardware stack levels used:    1
 31254 ;; Hardware stack levels required when called:    5
 31255 ;; This function calls:
 31256 ;;		_Tnizsza
 31257 ;;		_Tmaleje
 31258 ;;		_Tstoi
 31259 ;;		___wmul
 31260 ;;		___aldiv
 31261 ;;		___lmul
 31262 ;; This function is called by:
 31263 ;;		_Moduluj
 31264 ;; This function uses a non-reentrant model
 31265 ;;
 31266                           
 31267                           	psect	text135
 31268  005A6A                     __ptext135:
 31269                           	opt stack 0
 31270  005A6A                     _ModZgCO:
 31271                           	opt stack 24
 31272                           
 31273                           ; BSR set to: 0
 31274                           ;rgl.c: 302: signed long m;
 31275                           ;rgl.c: 303: unsigned char p;
 31276                           ;rgl.c: 306: if(rgl.fz)
 31277                           
 31278                           ; BSR set to: 0
 31279  005A6A  A427               	btfss	_rgl,2,c
 31280  005A6C  D009               	goto	l33776
 31281                           
 31282                           ; BSR set to: 0
 31283                           ;rgl.c: 307: {
 31284                           ;rgl.c: 308: if(Tnizsza(10))
 31285  005A6E  0E0A               	movlw	10
 31286  005A70  EC8F  F059         	call	_Tnizsza
 31287  005A74  A0D8               	btfss	status,0,c
 31288  005A76  0012               	return	
 31289                           
 31290                           ; BSR set to: 0
 31291                           ;rgl.c: 309: {
 31292                           ;rgl.c: 310: rgl.xmod=PWM.BufPWM;
 31293  005A78  C094  F02F         	movff	_PWM+1,_rgl+8	;volatile
 31294                           
 31295                           ;rgl.c: 311: rgl.srp=0;
 31296  005A7C  6A2E               	clrf	_rgl+7,c
 31297                           
 31298                           ;rgl.c: 312: rgl.ytmp=0;
 31299  005A7E  6A2D               	clrf	_rgl+6,c
 31300  005A80                     l33776:
 31301                           
 31302                           ; BSR set to: 0
 31303                           ;rgl.c: 315: }
 31304                           ;rgl.c: 317: if((!Tnizsza(5)&&Tmaleje(0))||(!Tnizsza(2)&&Tstoi()))
 31305  005A80  0E05               	movlw	5
 31306  005A82  EC8F  F059         	call	_Tnizsza
 31307  005A86  E204               	bc	l33780
 31308                           
 31309                           ; BSR set to: 0
 31310  005A88  0E00               	movlw	0
 31311  005A8A  EC00  F055         	call	_Tmaleje
 31312  005A8E  E207               	bc	l2841
 31313  005A90                     l33780:
 31314                           
 31315                           ; BSR set to: 0
 31316  005A90  0E02               	movlw	2
 31317  005A92  EC8F  F059         	call	_Tnizsza
 31318  005A96  E210               	bc	l33788
 31319                           
 31320                           ; BSR set to: 0
 31321  005A98  ECD7  F05A         	call	_Tstoi	;wreg free
 31322  005A9C  E30D               	bnc	l33788
 31323  005A9E                     l2841:
 31324                           
 31325                           ; BSR set to: 0
 31326                           ;rgl.c: 318: {
 31327                           ;rgl.c: 319: rgl.fz=1;
 31328  005A9E  8427               	bsf	_rgl,2,c
 31329                           
 31330                           ;rgl.c: 320: rgl.srp=PWM.BufPWM;
 31331  005AA0  C094  F02E         	movff	_PWM+1,_rgl+7	;volatile
 31332                           
 31333                           ;rgl.c: 321: rgl.xmod=PWM.BufPWM;
 31334  005AA4  C094  F02F         	movff	_PWM+1,_rgl+8	;volatile
 31335                           
 31336                           ; BSR set to: 0
 31337                           ;rgl.c: 322: if(rgl.xmod>PWM.MGMOD)
 31338  005AA8  502F               	movf	_rgl+8,w,c
 31339  005AAA  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 31340  005AAC  0012               	return	
 31341                           
 31342                           ; BSR set to: 0
 31343                           ;rgl.c: 323: {
 31344                           ;rgl.c: 324: rgl.srp=PWM.MGMOD;
 31345  005AAE  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 31346                           
 31347                           ;rgl.c: 325: rgl.xmod=PWM.MGMOD;
 31348  005AB2  C09D  F02F         	movff	_PWM+10,_rgl+8	;volatile
 31349  005AB6  0012               	return	
 31350  005AB8                     l33788:
 31351                           
 31352                           ; BSR set to: 0
 31353                           ;rgl.c: 328: }
 31354                           ;rgl.c: 329: if(rgl.xmod>=PWM.MDMOD) m=(rgl.xmod-PWM.MDMOD)*10;
 31355  005AB8  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 31356  005ABA  5C2F               	subwf	_rgl+8,w,c
 31357  005ABC  E316               	bnc	l2845
 31358                           
 31359                           ; BSR set to: 0
 31360  005ABE  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 31361  005AC0  5C2F               	subwf	_rgl+8,w,c
 31362  005AC2  6E1E               	movwf	?___wmul,c
 31363  005AC4  6A1F               	clrf	?___wmul+1,c
 31364  005AC6  A0D8               	btfss	status,0,c
 31365  005AC8  061F               	decf	?___wmul+1,f,c
 31366  005ACA  6A21               	clrf	?___wmul+3,c
 31367  005ACC  0E0A               	movlw	10
 31368  005ACE  6E20               	movwf	?___wmul+2,c
 31369  005AD0  EC9C  F056         	call	___wmul	;wreg free
 31370  005AD4  0102               	movlb	2	; () banked
 31371  005AD6  C01E  F2F1         	movff	?___wmul,ModZgCO@m
 31372  005ADA  C01F  F2F2         	movff	?___wmul+1,ModZgCO@m+1
 31373  005ADE  0E00               	movlw	0
 31374  005AE0  BFF2               	btfsc	(ModZgCO@m+1)& (0+255),7,b
 31375  005AE2  0EFF               	movlw	-1
 31376  005AE4  6FF3               	movwf	(ModZgCO@m+2)& (0+255),b
 31377  005AE6  6FF4               	movwf	(ModZgCO@m+3)& (0+255),b
 31378  005AE8  D003               	goto	l33792
 31379  005AEA                     l2845:
 31380                           
 31381                           ; BSR set to: 0
 31382                           ;rgl.c: 330: else m=0;
 31383  005AEA  0102               	movlb	2	; () banked
 31384  005AEC  6BF1               	clrf	ModZgCO@m& (0+255),b
 31385  005AEE  D8C2               	call	PL234	;call to abstracted procedure
 31386  005AF0                     l33792:
 31387                           
 31388                           ; BSR set to: 2
 31389                           ;rgl.c: 331: m=m/(DtCO.MAD_CO-DtCO.DAD_CO);
 31390  005AF0  C2F1  F01E         	movff	ModZgCO@m,?___aldiv
 31391  005AF4  C2F2  F01F         	movff	ModZgCO@m+1,?___aldiv+1
 31392  005AF8  C2F3  F020         	movff	ModZgCO@m+2,?___aldiv+2
 31393  005AFC  C2F4  F021         	movff	ModZgCO@m+3,?___aldiv+3
 31394  005B00  0100               	movlb	0	; () banked
 31395  005B02  51F2               	movf	(_DtCO+14)& (0+255),w,b
 31396  005B04  C0F1  F0F9         	movff	_DtCO+13,??_ModZgCO
 31397  005B08  6BFA               	clrf	(??_ModZgCO+1)& (0+255),b
 31398  005B0A  5FF9               	subwf	??_ModZgCO& (0+255),f,b
 31399  005B0C  0E00               	movlw	0
 31400  005B0E  5BFA               	subwfb	(??_ModZgCO+1)& (0+255),f,b
 31401  005B10  C0F9  F022         	movff	??_ModZgCO,?___aldiv+4
 31402  005B14  C0FA  F023         	movff	??_ModZgCO+1,?___aldiv+5
 31403  005B18  BE23               	btfsc	?___aldiv+5,7,c
 31404  005B1A  0EFF               	movlw	-1
 31405  005B1C  6E24               	movwf	?___aldiv+6,c
 31406  005B1E  6E25               	movwf	?___aldiv+7,c
 31407  005B20  ECE3  F042         	call	___aldiv	;wreg free
 31408  005B24  C01E  F2F1         	movff	?___aldiv,ModZgCO@m
 31409  005B28  C01F  F2F2         	movff	?___aldiv+1,ModZgCO@m+1
 31410  005B2C  C020  F2F3         	movff	?___aldiv+2,ModZgCO@m+2
 31411  005B30  C021  F2F4         	movff	?___aldiv+3,ModZgCO@m+3
 31412                           
 31413                           ;rgl.c: 332: m=m*(DtCO.AC_CO-DtCO.DAD_CO);
 31414  005B34  C2F1  F01E         	movff	ModZgCO@m,?___lmul
 31415  005B38  C2F2  F01F         	movff	ModZgCO@m+1,?___lmul+1
 31416  005B3C  C2F3  F020         	movff	ModZgCO@m+2,?___lmul+2
 31417  005B40  C2F4  F021         	movff	ModZgCO@m+3,?___lmul+3
 31418  005B44  51F2               	movf	(_DtCO+14)& (0+255),w,b
 31419  005B46  C0F0  F0F9         	movff	_DtCO+12,??_ModZgCO
 31420  005B4A  6BFA               	clrf	(??_ModZgCO+1)& (0+255),b
 31421  005B4C  5FF9               	subwf	??_ModZgCO& (0+255),f,b
 31422  005B4E  0E00               	movlw	0
 31423  005B50  5BFA               	subwfb	(??_ModZgCO+1)& (0+255),f,b
 31424  005B52  C0F9  F022         	movff	??_ModZgCO,?___lmul+4
 31425  005B56  C0FA  F023         	movff	??_ModZgCO+1,?___lmul+5
 31426  005B5A  BE23               	btfsc	?___lmul+5,7,c
 31427  005B5C  0EFF               	movlw	-1
 31428  005B5E  6E24               	movwf	?___lmul+6,c
 31429  005B60  6E25               	movwf	?___lmul+7,c
 31430  005B62  ECD2  F050         	call	___lmul	;wreg free
 31431  005B66  C01E  F2F1         	movff	?___lmul,ModZgCO@m
 31432  005B6A  C01F  F2F2         	movff	?___lmul+1,ModZgCO@m+1
 31433  005B6E  C020  F2F3         	movff	?___lmul+2,ModZgCO@m+2
 31434  005B72  C021  F2F4         	movff	?___lmul+3,ModZgCO@m+3
 31435                           
 31436                           ;rgl.c: 333: if(m<0) m=0;
 31437  005B76  0102               	movlb	2	; () banked
 31438  005B78  AFF4               	btfss	(ModZgCO@m+3)& (0+255),7,b
 31439  005B7A  D002               	goto	l33798
 31440                           
 31441                           ; BSR set to: 2
 31442  005B7C  6BF1               	clrf	ModZgCO@m& (0+255),b
 31443  005B7E  D87A               	call	PL234	;call to abstracted procedure
 31444  005B80                     l33798:
 31445                           
 31446                           ; BSR set to: 2
 31447                           ;rgl.c: 334: m=m/10+PWM.MDMOD;
 31448  005B80  C2F1  F01E         	movff	ModZgCO@m,?___aldiv
 31449  005B84  C2F2  F01F         	movff	ModZgCO@m+1,?___aldiv+1
 31450  005B88  C2F3  F020         	movff	ModZgCO@m+2,?___aldiv+2
 31451  005B8C  C2F4  F021         	movff	ModZgCO@m+3,?___aldiv+3
 31452  005B90  0E0A               	movlw	10
 31453  005B92  6E22               	movwf	?___aldiv+4,c
 31454  005B94  0E00               	movlw	0
 31455  005B96  6A23               	clrf	?___aldiv+5,c
 31456  005B98  6A24               	clrf	?___aldiv+6,c
 31457  005B9A  6A25               	clrf	?___aldiv+7,c
 31458  005B9C  ECE3  F042         	call	___aldiv	;wreg free
 31459  005BA0  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 31460  005BA2  241E               	addwf	?___aldiv,w,c
 31461  005BA4  0102               	movlb	2	; () banked
 31462  005BA6  6FF1               	movwf	ModZgCO@m& (0+255),b
 31463  005BA8  0E00               	movlw	0
 31464  005BAA  201F               	addwfc	?___aldiv+1,w,c
 31465  005BAC  6FF2               	movwf	(ModZgCO@m+1)& (0+255),b
 31466  005BAE  0E00               	movlw	0
 31467  005BB0  2020               	addwfc	?___aldiv+2,w,c
 31468  005BB2  6FF3               	movwf	(ModZgCO@m+2)& (0+255),b
 31469  005BB4  0E00               	movlw	0
 31470  005BB6  2021               	addwfc	?___aldiv+3,w,c
 31471  005BB8  6FF4               	movwf	(ModZgCO@m+3)& (0+255),b
 31472                           
 31473                           ; BSR set to: 2
 31474                           ;rgl.c: 335: if(m>0xff)
 31475  005BBA  51F4               	movf	(ModZgCO@m+3)& (0+255),w,b
 31476  005BBC  0A80               	xorlw	128
 31477  005BBE  0F80               	addlw	128
 31478  005BC0  E108               	bnz	u63245
 31479  005BC2  0E00               	movlw	0
 31480  005BC4  5DF3               	subwf	(ModZgCO@m+2)& (0+255),w,b
 31481  005BC6  E105               	bnz	u63245
 31482  005BC8  0E01               	movlw	1
 31483  005BCA  5DF2               	subwf	(ModZgCO@m+1)& (0+255),w,b
 31484  005BCC  E102               	bnz	u63245
 31485  005BCE  0E00               	movlw	0
 31486  005BD0  5DF1               	subwf	ModZgCO@m& (0+255),w,b
 31487  005BD2                     u63245:
 31488  005BD2  E304               	bnc	l2848
 31489                           
 31490                           ; BSR set to: 2
 31491                           ;rgl.c: 336: {
 31492                           ;rgl.c: 337: rgl.fz=0;
 31493  005BD4  9427               	bcf	_rgl,2,c
 31494                           
 31495                           ;rgl.c: 338: rgl.tmp_pwm=rgl.xmod;
 31496  005BD6  C02F  F030         	movff	_rgl+8,_rgl+9
 31497                           
 31498                           ;rgl.c: 339: return;
 31499  005BDA  0012               	return	
 31500  005BDC                     l2848:
 31501                           
 31502                           ; BSR set to: 2
 31503                           ;rgl.c: 340: }
 31504                           ;rgl.c: 341: if(rgl.fz&&(rgl.xmod>m))
 31505  005BDC  A427               	btfss	_rgl,2,c
 31506  005BDE  D01F               	goto	l2849
 31507                           
 31508                           ; BSR set to: 2
 31509  005BE0  C02F  F0F9         	movff	_rgl+8,??_ModZgCO
 31510  005BE4  0100               	movlb	0	; () banked
 31511  005BE6  6BFA               	clrf	(??_ModZgCO+1)& (0+255),b
 31512  005BE8  6BFB               	clrf	(??_ModZgCO+2)& (0+255),b
 31513  005BEA  6BFC               	clrf	(??_ModZgCO+3)& (0+255),b
 31514  005BEC  0102               	movlb	2	; () banked
 31515  005BEE  51F4               	movf	(ModZgCO@m+3)& (0+255),w,b
 31516  005BF0  0A80               	xorlw	128
 31517  005BF2  0100               	movlb	0	; () banked
 31518  005BF4  6FFD               	movwf	(??_ModZgCO+4)& (0+255),b
 31519  005BF6  51F9               	movf	??_ModZgCO& (0+255),w,b
 31520  005BF8  0102               	movlb	2	; () banked
 31521  005BFA  5DF1               	subwf	ModZgCO@m& (0+255),w,b
 31522  005BFC  0100               	movlb	0	; () banked
 31523  005BFE  51FA               	movf	(??_ModZgCO+1)& (0+255),w,b
 31524  005C00  0102               	movlb	2	; () banked
 31525  005C02  59F2               	subwfb	(ModZgCO@m+1)& (0+255),w,b
 31526  005C04  0100               	movlb	0	; () banked
 31527  005C06  51FB               	movf	(??_ModZgCO+2)& (0+255),w,b
 31528  005C08  0102               	movlb	2	; () banked
 31529  005C0A  59F3               	subwfb	(ModZgCO@m+2)& (0+255),w,b
 31530  005C0C  0100               	movlb	0	; () banked
 31531  005C0E  51FC               	movf	(??_ModZgCO+3)& (0+255),w,b
 31532  005C10  0A80               	xorlw	128
 31533  005C12  59FD               	subwfb	(??_ModZgCO+4)& (0+255),w,b
 31534  005C14  E204               	bc	l2849
 31535                           
 31536                           ; BSR set to: 0
 31537                           ;rgl.c: 342: rgl.srp=(rgl.xmod-m);
 31538  005C16  0102               	movlb	2	; () banked
 31539  005C18  51F1               	movf	ModZgCO@m& (0+255),w,b
 31540  005C1A  5C2F               	subwf	_rgl+8,w,c
 31541  005C1C  6E2E               	movwf	_rgl+7,c
 31542  005C1E                     l2849:
 31543                           
 31544                           ;rgl.c: 343: m+=rgl.srp;
 31545  005C1E  502E               	movf	_rgl+7,w,c
 31546  005C20  0102               	movlb	2	; () banked
 31547  005C22  27F1               	addwf	ModZgCO@m& (0+255),f,b
 31548  005C24  0E00               	movlw	0
 31549  005C26  23F2               	addwfc	(ModZgCO@m+1)& (0+255),f,b
 31550  005C28  23F3               	addwfc	(ModZgCO@m+2)& (0+255),f,b
 31551  005C2A  23F4               	addwfc	(ModZgCO@m+3)& (0+255),f,b
 31552                           
 31553                           ;rgl.c: 344: if(m>rgl.xmod) p=rgl.xmod;
 31554  005C2C  C02F  F0F9         	movff	_rgl+8,??_ModZgCO
 31555  005C30  0100               	movlb	0	; () banked
 31556  005C32  6BFA               	clrf	(??_ModZgCO+1)& (0+255),b
 31557  005C34  6BFB               	clrf	(??_ModZgCO+2)& (0+255),b
 31558  005C36  6BFC               	clrf	(??_ModZgCO+3)& (0+255),b
 31559  005C38  51FC               	movf	(??_ModZgCO+3)& (0+255),w,b
 31560  005C3A  0A80               	xorlw	128
 31561  005C3C  6FFD               	movwf	(??_ModZgCO+4)& (0+255),b
 31562  005C3E  0102               	movlb	2	; () banked
 31563  005C40  51F1               	movf	ModZgCO@m& (0+255),w,b
 31564  005C42  0100               	movlb	0	; () banked
 31565  005C44  5DF9               	subwf	??_ModZgCO& (0+255),w,b
 31566  005C46  0102               	movlb	2	; () banked
 31567  005C48  51F2               	movf	(ModZgCO@m+1)& (0+255),w,b
 31568  005C4A  0100               	movlb	0	; () banked
 31569  005C4C  59FA               	subwfb	(??_ModZgCO+1)& (0+255),w,b
 31570  005C4E  0102               	movlb	2	; () banked
 31571  005C50  51F3               	movf	(ModZgCO@m+2)& (0+255),w,b
 31572  005C52  0100               	movlb	0	; () banked
 31573  005C54  59FB               	subwfb	(??_ModZgCO+2)& (0+255),w,b
 31574  005C56  0102               	movlb	2	; () banked
 31575  005C58  51F4               	movf	(ModZgCO@m+3)& (0+255),w,b
 31576  005C5A  0A80               	xorlw	128
 31577  005C5C  0100               	movlb	0	; () banked
 31578  005C5E  59FD               	subwfb	(??_ModZgCO+4)& (0+255),w,b
 31579  005C60  E203               	bc	l2850
 31580                           
 31581                           ; BSR set to: 0
 31582  005C62  C02F  F2F0         	movff	_rgl+8,ModZgCO@p
 31583  005C66  D002               	goto	l2851
 31584  005C68                     l2850:
 31585                           
 31586                           ; BSR set to: 0
 31587                           ;rgl.c: 345: else p=m;
 31588  005C68  C2F1  F2F0         	movff	ModZgCO@m,ModZgCO@p
 31589  005C6C                     l2851:
 31590                           
 31591                           ; BSR set to: 0
 31592                           ;rgl.c: 346: rgl.fz=0;
 31593  005C6C  9427               	bcf	_rgl,2,c
 31594                           
 31595                           ;rgl.c: 347: rgl.tmp_pwm=p;
 31596  005C6E  C2F0  F030         	movff	ModZgCO@p,_rgl+9
 31597  005C72  0012               	return	
 31598  005C74                     __end_of_ModZgCO:
 31599                           	opt stack 0
 31600  005C74                     PL234:
 31601                           	opt stack 24
 31602  005C74  6BF2               	clrf	(ModZgCO@m+1)& (0+255),b
 31603  005C76  6BF3               	clrf	(ModZgCO@m+2)& (0+255),b
 31604  005C78  6BF4               	clrf	(ModZgCO@m+3)& (0+255),b
 31605  005C7A  0012               	return	
 31606  005C7C                     __end_ofPL234:
 31607                           	opt stack 0
 31608                           tblptru	equ	0xFF8
 31609                           tblptrh	equ	0xFF7
 31610                           tblptrl	equ	0xFF6
 31611                           tablat	equ	0xFF5
 31612                           prodh	equ	0xFF4
 31613                           prodl	equ	0xFF3
 31614                           intcon	equ	0xFF2
 31615                           postinc0	equ	0xFEE
 31616                           wreg	equ	0xFE8
 31617                           indf1	equ	0xFE7
 31618                           postinc1	equ	0xFE6
 31619                           postdec1	equ	0xFE5
 31620                           fsr1h	equ	0xFE2
 31621                           fsr1l	equ	0xFE1
 31622                           indf2	equ	0xFDF
 31623                           postinc2	equ	0xFDE
 31624                           postdec2	equ	0xFDD
 31625                           fsr2h	equ	0xFDA
 31626                           fsr2l	equ	0xFD9
 31627                           status	equ	0xFD8
 31628                           
 31629 ;; *************** function _ModDkCO *****************
 31630 ;; Defined at:
 31631 ;;		line 352 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 31632 ;; Parameters:    Size  Location     Type
 31633 ;;		None
 31634 ;; Auto vars:     Size  Location     Type
 31635 ;;  m               4    8[BANK0 ] long 
 31636 ;;  p               1    7[BANK0 ] unsigned char 
 31637 ;;  k               1    6[BANK0 ] unsigned char 
 31638 ;;  ada             1    5[BANK0 ] char 
 31639 ;; Return value:  Size  Location     Type
 31640 ;;		None               void
 31641 ;; Registers used:
 31642 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 31643 ;; Tracked objects:
 31644 ;;		On entry : D/0
 31645 ;;		On exit  : D/0
 31646 ;;		Unchanged: FFFFFFF0/0
 31647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31649 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31650 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31651 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31652 ;;Total ram usage:       12 bytes
 31653 ;; Hardware stack levels used:    1
 31654 ;; Hardware stack levels required when called:    5
 31655 ;; This function calls:
 31656 ;;		_Twyzsza
 31657 ;;		___wmul
 31658 ;; This function is called by:
 31659 ;;		_Moduluj
 31660 ;; This function uses a non-reentrant model
 31661 ;;
 31662                           
 31663                           	psect	text136
 31664  008738                     __ptext136:
 31665                           	opt stack 0
 31666  008738                     _ModDkCO:
 31667                           	opt stack 24
 31668                           
 31669                           ;rgl.c: 353: signed long m;
 31670                           ;rgl.c: 354: signed char ada;
 31671                           ;rgl.c: 355: unsigned char k,p;
 31672                           ;rgl.c: 357: if(!rgl.fz) return;
 31673  008738  A427               	btfss	_rgl,2,c
 31674  00873A  0012               	return	
 31675                           
 31676                           ;rgl.c: 358: ada=DtCO.AC_CO-DtCO.DAD_CO;
 31677  00873C  0100               	movlb	0	; () banked
 31678  00873E  51F2               	movf	(_DtCO+14)& (0+255),w,b
 31679  008740  5DF0               	subwf	(_DtCO+12)& (0+255),w,b
 31680  008742  6FF8               	movwf	ModDkCO@ada& (0+255),b
 31681                           
 31682                           ; BSR set to: 0
 31683                           ;rgl.c: 359: k=5;
 31684  008744  0E05               	movlw	5
 31685  008746  6FF9               	movwf	ModDkCO@k& (0+255),b
 31686                           
 31687                           ; BSR set to: 0
 31688                           ;rgl.c: 360: if(Twyzsza(0)) k=6;
 31689  008748  0E00               	movlw	0
 31690  00874A  EC34  F055         	call	_Twyzsza
 31691  00874E  E302               	bnc	l33822
 31692                           
 31693                           ; BSR set to: 0
 31694  008750  0E06               	movlw	6
 31695  008752  6FF9               	movwf	ModDkCO@k& (0+255),b
 31696  008754                     l33822:
 31697                           
 31698                           ; BSR set to: 0
 31699                           ;rgl.c: 361: m=rgl.srp+k*ada;
 31700  008754  C0F9  F01E         	movff	ModDkCO@k,?___wmul
 31701  008758  6A1F               	clrf	?___wmul+1,c
 31702  00875A  51F8               	movf	ModDkCO@ada& (0+255),w,b
 31703  00875C  6E20               	movwf	?___wmul+2,c
 31704  00875E  6A21               	clrf	?___wmul+3,c
 31705  008760  BE20               	btfsc	?___wmul+2,7,c
 31706  008762  0621               	decf	?___wmul+3,f,c
 31707  008764  EC9C  F056         	call	___wmul	;wreg free
 31708  008768  502E               	movf	_rgl+7,w,c
 31709  00876A  241E               	addwf	?___wmul,w,c
 31710  00876C  6FF3               	movwf	??_ModDkCO& (0+255),b
 31711  00876E  0E00               	movlw	0
 31712  008770  201F               	addwfc	?___wmul+1,w,c
 31713  008772  6FF4               	movwf	(??_ModDkCO+1)& (0+255),b
 31714  008774  C0F3  F0FB         	movff	??_ModDkCO,ModDkCO@m
 31715  008778  C0F4  F0FC         	movff	??_ModDkCO+1,ModDkCO@m+1
 31716  00877C  0E00               	movlw	0
 31717  00877E  BFFC               	btfsc	(ModDkCO@m+1)& (0+255),7,b
 31718  008780  0EFF               	movlw	-1
 31719  008782  6FFD               	movwf	(ModDkCO@m+2)& (0+255),b
 31720  008784  6FFE               	movwf	(ModDkCO@m+3)& (0+255),b
 31721                           
 31722                           ; BSR set to: 0
 31723                           ;rgl.c: 362: if(m>rgl.xmod) p=rgl.xmod;
 31724  008786  C02F  F0F3         	movff	_rgl+8,??_ModDkCO
 31725  00878A  6BF4               	clrf	(??_ModDkCO+1)& (0+255),b
 31726  00878C  6BF5               	clrf	(??_ModDkCO+2)& (0+255),b
 31727  00878E  6BF6               	clrf	(??_ModDkCO+3)& (0+255),b
 31728  008790  51F6               	movf	(??_ModDkCO+3)& (0+255),w,b
 31729  008792  0A80               	xorlw	128
 31730  008794  6FF7               	movwf	(??_ModDkCO+4)& (0+255),b
 31731  008796  51FB               	movf	ModDkCO@m& (0+255),w,b
 31732  008798  5DF3               	subwf	??_ModDkCO& (0+255),w,b
 31733  00879A  51FC               	movf	(ModDkCO@m+1)& (0+255),w,b
 31734  00879C  59F4               	subwfb	(??_ModDkCO+1)& (0+255),w,b
 31735  00879E  51FD               	movf	(ModDkCO@m+2)& (0+255),w,b
 31736  0087A0  59F5               	subwfb	(??_ModDkCO+2)& (0+255),w,b
 31737  0087A2  51FE               	movf	(ModDkCO@m+3)& (0+255),w,b
 31738  0087A4  0A80               	xorlw	128
 31739  0087A6  59F7               	subwfb	(??_ModDkCO+4)& (0+255),w,b
 31740  0087A8  E203               	bc	l33828
 31741                           
 31742                           ; BSR set to: 0
 31743  0087AA  C02F  F0FA         	movff	_rgl+8,ModDkCO@p
 31744  0087AE  D017               	goto	l2858
 31745  0087B0                     l33828:
 31746                           
 31747                           ; BSR set to: 0
 31748                           ;rgl.c: 363: else
 31749                           ;rgl.c: 364: if(m<PWM.MDMOD) p=PWM.MDMOD;
 31750  0087B0  C09C  F0F3         	movff	_PWM+9,??_ModDkCO	;volatile
 31751  0087B4  6BF4               	clrf	(??_ModDkCO+1)& (0+255),b
 31752  0087B6  6BF5               	clrf	(??_ModDkCO+2)& (0+255),b
 31753  0087B8  6BF6               	clrf	(??_ModDkCO+3)& (0+255),b
 31754  0087BA  51FE               	movf	(ModDkCO@m+3)& (0+255),w,b
 31755  0087BC  0A80               	xorlw	128
 31756  0087BE  6FF7               	movwf	(??_ModDkCO+4)& (0+255),b
 31757  0087C0  51F3               	movf	??_ModDkCO& (0+255),w,b
 31758  0087C2  5DFB               	subwf	ModDkCO@m& (0+255),w,b
 31759  0087C4  51F4               	movf	(??_ModDkCO+1)& (0+255),w,b
 31760  0087C6  59FC               	subwfb	(ModDkCO@m+1)& (0+255),w,b
 31761  0087C8  51F5               	movf	(??_ModDkCO+2)& (0+255),w,b
 31762  0087CA  59FD               	subwfb	(ModDkCO@m+2)& (0+255),w,b
 31763  0087CC  51F6               	movf	(??_ModDkCO+3)& (0+255),w,b
 31764  0087CE  0A80               	xorlw	128
 31765  0087D0  59F7               	subwfb	(??_ModDkCO+4)& (0+255),w,b
 31766  0087D2  E203               	bc	l2859
 31767                           
 31768                           ; BSR set to: 0
 31769  0087D4  C09C  F0FA         	movff	_PWM+9,ModDkCO@p	;volatile
 31770  0087D8  D002               	goto	l2858
 31771  0087DA                     l2859:
 31772                           
 31773                           ; BSR set to: 0
 31774                           ;rgl.c: 365: else p=m;
 31775  0087DA  C0FB  F0FA         	movff	ModDkCO@m,ModDkCO@p
 31776  0087DE                     l2858:
 31777                           
 31778                           ; BSR set to: 0
 31779                           ;rgl.c: 366: rgl.tmp_pwm=p;
 31780  0087DE  C0FA  F030         	movff	ModDkCO@p,_rgl+9
 31781  0087E2  0012               	return	
 31782  0087E4                     __end_of_ModDkCO:
 31783                           	opt stack 0
 31784                           tblptru	equ	0xFF8
 31785                           tblptrh	equ	0xFF7
 31786                           tblptrl	equ	0xFF6
 31787                           tablat	equ	0xFF5
 31788                           prodh	equ	0xFF4
 31789                           prodl	equ	0xFF3
 31790                           intcon	equ	0xFF2
 31791                           postinc0	equ	0xFEE
 31792                           wreg	equ	0xFE8
 31793                           indf1	equ	0xFE7
 31794                           postinc1	equ	0xFE6
 31795                           postdec1	equ	0xFE5
 31796                           fsr1h	equ	0xFE2
 31797                           fsr1l	equ	0xFE1
 31798                           indf2	equ	0xFDF
 31799                           postinc2	equ	0xFDE
 31800                           postdec2	equ	0xFDD
 31801                           fsr2h	equ	0xFDA
 31802                           fsr2l	equ	0xFD9
 31803                           status	equ	0xFD8
 31804                           
 31805 ;; *************** function _IncConstCOCW *****************
 31806 ;; Defined at:
 31807 ;;		line 742 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 31808 ;; Parameters:    Size  Location     Type
 31809 ;;		None
 31810 ;; Auto vars:     Size  Location     Type
 31811 ;;		None
 31812 ;; Return value:  Size  Location     Type
 31813 ;;		None               void
 31814 ;; Registers used:
 31815 ;;		wreg, status,2, status,0, cstack
 31816 ;; Tracked objects:
 31817 ;;		On entry : F/1
 31818 ;;		On exit  : F/1
 31819 ;;		Unchanged: FFFFFFF0/0
 31820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31825 ;;Total ram usage:        0 bytes
 31826 ;; Hardware stack levels used:    1
 31827 ;; Hardware stack levels required when called:    5
 31828 ;; This function calls:
 31829 ;;		_Tstoi
 31830 ;; This function is called by:
 31831 ;;		_Moduluj
 31832 ;; This function uses a non-reentrant model
 31833 ;;
 31834                           
 31835                           	psect	text137
 31836  00B520                     __ptext137:
 31837                           	opt stack 0
 31838  00B520                     _IncConstCOCW:
 31839                           	opt stack 24
 31840                           
 31841                           ; BSR set to: 1
 31842                           ;rgl.c: 743: if(Tstoi()) rgl.ytmp++;
 31843  00B520  ECD7  F05A         	call	_Tstoi	;wreg free
 31844  00B524  E302               	bnc	l2976
 31845                           
 31846                           ; BSR set to: 1
 31847  00B526  2A2D               	incf	_rgl+6,f,c
 31848  00B528  0012               	return	
 31849  00B52A                     l2976:
 31850                           
 31851                           ; BSR set to: 1
 31852                           ;rgl.c: 744: else rgl.ytmp=0;
 31853  00B52A  6A2D               	clrf	_rgl+6,c
 31854                           
 31855                           ; BSR set to: 1
 31856  00B52C  0012               	return	
 31857  00B52E                     __end_of_IncConstCOCW:
 31858                           	opt stack 0
 31859                           tblptru	equ	0xFF8
 31860                           tblptrh	equ	0xFF7
 31861                           tblptrl	equ	0xFF6
 31862                           tablat	equ	0xFF5
 31863                           prodh	equ	0xFF4
 31864                           prodl	equ	0xFF3
 31865                           intcon	equ	0xFF2
 31866                           postinc0	equ	0xFEE
 31867                           wreg	equ	0xFE8
 31868                           indf1	equ	0xFE7
 31869                           postinc1	equ	0xFE6
 31870                           postdec1	equ	0xFE5
 31871                           fsr1h	equ	0xFE2
 31872                           fsr1l	equ	0xFE1
 31873                           indf2	equ	0xFDF
 31874                           postinc2	equ	0xFDE
 31875                           postdec2	equ	0xFDD
 31876                           fsr2h	equ	0xFDA
 31877                           fsr2l	equ	0xFD9
 31878                           status	equ	0xFD8
 31879                           
 31880 ;; *************** function _IncMaxCO *****************
 31881 ;; Defined at:
 31882 ;;		line 446 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 31883 ;; Parameters:    Size  Location     Type
 31884 ;;		None
 31885 ;; Auto vars:     Size  Location     Type
 31886 ;;  k               1    0        unsigned char 
 31887 ;; Return value:  Size  Location     Type
 31888 ;;		None               void
 31889 ;; Registers used:
 31890 ;;		wreg, status,2, status,0, cstack
 31891 ;; Tracked objects:
 31892 ;;		On entry : E/1
 31893 ;;		On exit  : E/0
 31894 ;;		Unchanged: FFFFFFF0/0
 31895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31898 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31899 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31900 ;;Total ram usage:        6 bytes
 31901 ;; Hardware stack levels used:    1
 31902 ;; Hardware stack levels required when called:    5
 31903 ;; This function calls:
 31904 ;;		_Trosnie
 31905 ;; This function is called by:
 31906 ;;		_Moduluj
 31907 ;; This function uses a non-reentrant model
 31908 ;;
 31909                           
 31910                           	psect	text138
 31911  009064                     __ptext138:
 31912                           	opt stack 0
 31913  009064                     _IncMaxCO:
 31914                           	opt stack 24
 31915                           
 31916                           ;rgl.c: 447: unsigned char k;
 31917                           ;rgl.c: 449: if(Trosnie(1)) return;
 31918                           
 31919                           ; BSR set to: 1
 31920  009064  0E01               	movlw	1
 31921  009066  EC5F  F059         	call	_Trosnie
 31922  00906A  B0D8               	btfsc	status,0,c
 31923  00906C  0012               	return	
 31924                           
 31925                           ;rgl.c: 452: if(!rgl.fz)
 31926  00906E  B427               	btfsc	_rgl,2,c
 31927  009070  D015               	goto	l33854
 31928                           
 31929                           ;rgl.c: 453: {
 31930                           ;rgl.c: 454: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
 31931  009072  502F               	movf	_rgl+8,w,c
 31932  009074  D833               	call	PL158	;call to abstracted procedure
 31933  009076  5020               	movf	??_IncMaxCO+1,w,c
 31934  009078  0A80               	xorlw	128
 31935  00907A  0F80               	addlw	-128
 31936  00907C  0EF1               	movlw	241
 31937  00907E  B4D8               	btfsc	status,2,c
 31938  009080  5C1F               	subwf	??_IncMaxCO,w,c
 31939  009082  E303               	bnc	l33848
 31940  009084  0EF0               	movlw	240
 31941  009086  6E2F               	movwf	_rgl+8,c
 31942  009088  D002               	goto	l33850
 31943  00908A                     l33848:
 31944                           
 31945                           ;rgl.c: 455: else rgl.xmod+=k;
 31946  00908A  0E06               	movlw	6
 31947  00908C  262F               	addwf	_rgl+8,f,c
 31948  00908E                     l33850:
 31949                           
 31950                           ;rgl.c: 456: if(rgl.xmod>PWM.MAXPWM) rgl.xmod=PWM.MAXPWM;
 31951  00908E  502F               	movf	_rgl+8,w,c
 31952  009090  0100               	movlb	0	; () banked
 31953  009092  61B4               	cpfslt	(_PWM+33)& (0+255),b	;volatile
 31954  009094  0012               	return	
 31955  009096                     l33852:
 31956                           
 31957                           ; BSR set to: 0
 31958  009096  C0B4  F02F         	movff	_PWM+33,_rgl+8	;volatile
 31959  00909A  0012               	return	
 31960  00909C                     l33854:
 31961                           
 31962                           ;rgl.c: 458: else
 31963                           ;rgl.c: 459: {
 31964                           ;rgl.c: 460: if(PWM.MAXPWM>PWM.MGMOD)
 31965  00909C  0100               	movlb	0	; () banked
 31966  00909E  51B4               	movf	(_PWM+33)& (0+255),w,b	;volatile
 31967  0090A0  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 31968  0090A2  D00B               	goto	l33862
 31969                           
 31970                           ; BSR set to: 0
 31971                           ;rgl.c: 461: {
 31972                           ;rgl.c: 462: if(rgl.xmod+k>PWM.MGMOD) rgl.xmod=PWM.MGMOD;
 31973  0090A4  502F               	movf	_rgl+8,w,c
 31974  0090A6  D81A               	call	PL158	;call to abstracted procedure
 31975  0090A8  519D               	movf	(_PWM+10)& (0+255),w,b	;volatile
 31976  0090AA  D80D               	call	PL148	;call to abstracted procedure
 31977  0090AC  E203               	bc	l33860
 31978                           
 31979                           ; BSR set to: 0
 31980  0090AE  C09D  F02F         	movff	_PWM+10,_rgl+8	;volatile
 31981  0090B2  0012               	return	
 31982  0090B4                     l33860:
 31983                           
 31984                           ; BSR set to: 0
 31985                           ;rgl.c: 463: else rgl.xmod+=k;
 31986  0090B4  0E06               	movlw	6
 31987  0090B6  262F               	addwf	_rgl+8,f,c
 31988  0090B8  0C06               	retlw	6
 31989  0090BA                     l33862:
 31990                           
 31991                           ; BSR set to: 0
 31992                           ;rgl.c: 465: else
 31993                           ;rgl.c: 466: {
 31994                           ;rgl.c: 467: if(rgl.xmod+k>PWM.MAXPWM) rgl.xmod=PWM.MAXPWM;
 31995  0090BA  502F               	movf	_rgl+8,w,c
 31996  0090BC  D80F               	call	PL158	;call to abstracted procedure
 31997  0090BE  51B4               	movf	(_PWM+33)& (0+255),w,b	;volatile
 31998  0090C0  D802               	call	PL148	;call to abstracted procedure
 31999  0090C2  E3E9               	bnc	l33852
 32000  0090C4  D7F7               	goto	l33860
 32001  0090C6                     __end_of_IncMaxCO:
 32002                           	opt stack 0
 32003  0090C6                     PL148:
 32004                           	opt stack 24
 32005  0090C6  6E21               	movwf	(??_IncMaxCO+2)& (0+255),c
 32006  0090C8  6A22               	clrf	(??_IncMaxCO+3)& (0+255),c
 32007  0090CA  5022               	movf	??_IncMaxCO+3,w,c
 32008  0090CC  0A80               	xorlw	128
 32009  0090CE  6E23               	movwf	(??_IncMaxCO+4)& (0+255),c
 32010  0090D0  501F               	movf	??_IncMaxCO,w,c
 32011  0090D2  5C21               	subwf	??_IncMaxCO+2,w,c
 32012  0090D4  5020               	movf	??_IncMaxCO+1,w,c
 32013  0090D6  0A80               	xorlw	128
 32014  0090D8  5823               	subwfb	(??_IncMaxCO+4)& (0+255),w,c
 32015  0090DA  0012               	return	
 32016  0090DC                     __end_ofPL148:
 32017                           	opt stack 0
 32018  0090DC                     PL158:
 32019                           	opt stack 24
 32020  0090DC  6E1F               	movwf	??_IncMaxCO& (0+255),c
 32021  0090DE  6A20               	clrf	(??_IncMaxCO+1)& (0+255),c
 32022  0090E0  0E06               	movlw	6
 32023  0090E2  261F               	addwf	??_IncMaxCO,f,c
 32024  0090E4  0E00               	movlw	0
 32025  0090E6  2220               	addwfc	??_IncMaxCO+1,f,c
 32026  0090E8  0C00               	retlw	0
 32027  0090EA                     __end_ofPL158:
 32028                           	opt stack 0
 32029                           tblptru	equ	0xFF8
 32030                           tblptrh	equ	0xFF7
 32031                           tblptrl	equ	0xFF6
 32032                           tablat	equ	0xFF5
 32033                           prodh	equ	0xFF4
 32034                           prodl	equ	0xFF3
 32035                           intcon	equ	0xFF2
 32036                           postinc0	equ	0xFEE
 32037                           wreg	equ	0xFE8
 32038                           indf1	equ	0xFE7
 32039                           postinc1	equ	0xFE6
 32040                           postdec1	equ	0xFE5
 32041                           fsr1h	equ	0xFE2
 32042                           fsr1l	equ	0xFE1
 32043                           indf2	equ	0xFDF
 32044                           postinc2	equ	0xFDE
 32045                           postdec2	equ	0xFDD
 32046                           fsr2h	equ	0xFDA
 32047                           fsr2l	equ	0xFD9
 32048                           status	equ	0xFD8
 32049                           
 32050 ;; *************** function _ModPruCO *****************
 32051 ;; Defined at:
 32052 ;;		line 373 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 32053 ;; Parameters:    Size  Location     Type
 32054 ;;		None
 32055 ;; Auto vars:     Size  Location     Type
 32056 ;;  k               1    1[BANK0 ] unsigned char 
 32057 ;;  tmp             1    0[BANK0 ] unsigned char 
 32058 ;; Return value:  Size  Location     Type
 32059 ;;		None               void
 32060 ;; Registers used:
 32061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32062 ;; Tracked objects:
 32063 ;;		On entry : E/1
 32064 ;;		On exit  : E/0
 32065 ;;		Unchanged: FFFFFFF0/0
 32066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32068 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32069 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32070 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32071 ;;Total ram usage:        7 bytes
 32072 ;; Hardware stack levels used:    1
 32073 ;; Hardware stack levels required when called:    5
 32074 ;; This function calls:
 32075 ;;		_Tmaleje
 32076 ;;		_Trowna
 32077 ;;		_Trosnie
 32078 ;; This function is called by:
 32079 ;;		_Moduluj
 32080 ;; This function uses a non-reentrant model
 32081 ;;
 32082                           
 32083                           	psect	text139
 32084  007B7E                     __ptext139:
 32085                           	opt stack 0
 32086  007B7E                     _ModPruCO:
 32087                           	opt stack 24
 32088                           
 32089                           ;rgl.c: 374: static unsigned char l;
 32090                           ;rgl.c: 375: unsigned char tmp,k;
 32091                           ;rgl.c: 377: if(!rgl.fz)
 32092  007B7E  B427               	btfsc	_rgl,2,c
 32093  007B80  D022               	goto	l33896
 32094                           
 32095                           ;rgl.c: 378: {
 32096                           ;rgl.c: 379: if(Tmaleje(0)||rgl.ytmp>2)
 32097  007B82  0E00               	movlw	0
 32098  007B84  EC00  F055         	call	_Tmaleje
 32099  007B88  E205               	bc	l2868
 32100  007B8A  EE20  F02D         	lfsr	2,_rgl+6
 32101  007B8E  0E02               	movlw	2
 32102  007B90  64DF               	cpfsgt	indf2,c
 32103  007B92  0C02               	retlw	2
 32104  007B94                     l2868:
 32105                           
 32106                           ;rgl.c: 380: {
 32107                           ;rgl.c: 381: rgl.ytmp=0;
 32108  007B94  6A2D               	clrf	_rgl+6,c
 32109                           
 32110                           ;rgl.c: 382: if(PWM.BufPWM>rgl.xmod) return;
 32111  007B96  0100               	movlb	0	; () banked
 32112  007B98  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 32113  007B9A  602F               	cpfslt	_rgl+8,c
 32114  007B9C  D001               	goto	l33878
 32115  007B9E  0012               	return	
 32116  007BA0                     l33878:
 32117                           
 32118                           ; BSR set to: 0
 32119                           ;rgl.c: 383: tmp=rgl.xmod-PWM.BufPWM;
 32120  007BA0  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 32121  007BA2  5C2F               	subwf	_rgl+8,w,c
 32122  007BA4  6FF3               	movwf	ModPruCO@tmp& (0+255),b
 32123                           
 32124                           ; BSR set to: 0
 32125                           ;rgl.c: 384: k=6;
 32126  007BA6  0E06               	movlw	6
 32127  007BA8  6FF4               	movwf	ModPruCO@k& (0+255),b
 32128                           
 32129                           ; BSR set to: 0
 32130                           ;rgl.c: 385: if(k>tmp) k=tmp;
 32131  007BAA  61F3               	cpfslt	ModPruCO@tmp& (0+255),b
 32132  007BAC  D002               	goto	l33886
 32133                           
 32134                           ; BSR set to: 0
 32135  007BAE  C0F3  F0F4         	movff	ModPruCO@tmp,ModPruCO@k
 32136  007BB2                     l33886:
 32137                           
 32138                           ; BSR set to: 0
 32139                           ;rgl.c: 386: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
 32140  007BB2  51F4               	movf	ModPruCO@k& (0+255),w,b
 32141  007BB4  D871               	call	PL106	;call to abstracted procedure
 32142  007BB6  D867               	call	PL100	;call to abstracted procedure
 32143  007BB8  E203               	bc	l33890
 32144                           
 32145                           ; BSR set to: 0
 32146  007BBA  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 32147  007BBE  0012               	return	
 32148  007BC0                     l33890:
 32149                           
 32150                           ; BSR set to: 0
 32151                           ;rgl.c: 387: else rgl.srp+=k;
 32152  007BC0  51F4               	movf	ModPruCO@k& (0+255),w,b
 32153  007BC2  262E               	addwf	_rgl+7,f,c
 32154  007BC4  0012               	return	
 32155  007BC6                     l33896:
 32156                           
 32157                           ;rgl.c: 391: else
 32158                           ;rgl.c: 392: {
 32159                           ;rgl.c: 393: if(!Trowna())
 32160  007BC6  ECDD  F05A         	call	_Trowna	;wreg free
 32161  007BCA  E25A               	bc	l2875
 32162                           
 32163                           ;rgl.c: 394: {
 32164                           ;rgl.c: 395: if(DtCO.DAD_CO>DtCO.AC_CO)
 32165  007BCC  0100               	movlb	0	; () banked
 32166  007BCE  51F2               	movf	(_DtCO+14)& (0+255),w,b
 32167  007BD0  61F0               	cpfslt	(_DtCO+12)& (0+255),b
 32168  007BD2  D02C               	goto	l33928
 32169                           
 32170                           ; BSR set to: 0
 32171                           ;rgl.c: 396: {
 32172                           ;rgl.c: 397: if(Tmaleje(0)) return;
 32173  007BD4  0E00               	movlw	0
 32174  007BD6  EC00  F055         	call	_Tmaleje
 32175  007BDA  B0D8               	btfsc	status,0,c
 32176  007BDC  0012               	return	
 32177                           
 32178                           ; BSR set to: 0
 32179                           ;rgl.c: 398: if(l>=2)
 32180  007BDE  0E01               	movlw	1
 32181  007BE0  0101               	movlb	1	; () banked
 32182  007BE2  6595               	cpfsgt	ModPruCO@l& (0+255),b
 32183  007BE4  D005               	goto	l2878
 32184                           
 32185                           ; BSR set to: 1
 32186                           ;rgl.c: 399: {
 32187                           ;rgl.c: 400: k=1;
 32188  007BE6  0100               	movlb	0	; () banked
 32189  007BE8  6FF4               	movwf	ModPruCO@k& (0+255),b
 32190                           
 32191                           ; BSR set to: 0
 32192                           ;rgl.c: 401: l=0;
 32193  007BEA  0101               	movlb	1	; () banked
 32194  007BEC  6B95               	clrf	ModPruCO@l& (0+255),b
 32195                           
 32196                           ;rgl.c: 402: }
 32197  007BEE  D001               	goto	l33912
 32198  007BF0                     l2878:
 32199                           
 32200                           ; BSR set to: 1
 32201                           ;rgl.c: 403: else
 32202                           ;rgl.c: 404: {
 32203                           ;rgl.c: 405: k=0;
 32204                           
 32205                           ; BSR set to: 0
 32206                           ;rgl.c: 406: l++;
 32207  007BF0  D85D               	call	PL226	;call to abstracted procedure
 32208  007BF2                     l33912:
 32209                           
 32210                           ; BSR set to: 1
 32211                           ;rgl.c: 407: }
 32212                           ;rgl.c: 408: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM.MDMOD;
 32213  007BF2  0100               	movlb	0	; () banked
 32214  007BF4  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 32215  007BF6  6E22               	movwf	??_ModPruCO& (0+255),c
 32216  007BF8  6A23               	clrf	(??_ModPruCO+1)& (0+255),c
 32217  007BFA  51F4               	movf	ModPruCO@k& (0+255),w,b
 32218  007BFC  C02E  F024         	movff	_rgl+7,??_ModPruCO+2
 32219  007C00  6A25               	clrf	(??_ModPruCO+3)& (0+255),c
 32220  007C02  5E24               	subwf	??_ModPruCO+2,f,c
 32221  007C04  0E00               	movlw	0
 32222  007C06  5A25               	subwfb	??_ModPruCO+3,f,c
 32223  007C08  D83E               	call	PL100	;call to abstracted procedure
 32224  007C0A  E203               	bc	l33916
 32225                           
 32226                           ; BSR set to: 0
 32227  007C0C  C09C  F02E         	movff	_PWM+9,_rgl+7	;volatile
 32228  007C10  D002               	goto	l33918
 32229  007C12                     l33916:
 32230                           
 32231                           ; BSR set to: 0
 32232                           ;rgl.c: 409: else rgl.srp-=k;
 32233  007C12  51F4               	movf	ModPruCO@k& (0+255),w,b
 32234  007C14  5E2E               	subwf	_rgl+7,f,c
 32235  007C16                     l33918:
 32236                           
 32237                           ; BSR set to: 0
 32238                           ;rgl.c: 410: if(rgl.srp>PWM.MAXPWM) rgl.srp=PWM.MAXPWM;
 32239  007C16  502E               	movf	_rgl+7,w,c
 32240  007C18  61B4               	cpfslt	(_PWM+33)& (0+255),b	;volatile
 32241  007C1A  D002               	goto	l33922
 32242  007C1C                     
 32243                           ; BSR set to: 0
 32244  007C1C  C0B4  F02E         	movff	_PWM+33,_rgl+7	;volatile
 32245  007C20                     l33922:
 32246                           
 32247                           ; BSR set to: 0
 32248                           ;rgl.c: 411: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
 32249  007C20  502E               	movf	_rgl+7,w,c
 32250  007C22  602F               	cpfslt	_rgl+8,c
 32251  007C24  0012               	return	
 32252                           
 32253                           ; BSR set to: 0
 32254  007C26  C02E  F02F         	movff	_rgl+7,_rgl+8
 32255  007C2A  0012               	return	
 32256  007C2C                     l33928:
 32257                           
 32258                           ; BSR set to: 0
 32259                           ;rgl.c: 414: else
 32260                           ;rgl.c: 415: {
 32261                           ;rgl.c: 416: if(Trosnie(0)) return;
 32262  007C2C  0E00               	movlw	0
 32263  007C2E  EC5F  F059         	call	_Trosnie
 32264  007C32  B0D8               	btfsc	status,0,c
 32265  007C34  0012               	return	
 32266                           
 32267                           ; BSR set to: 0
 32268                           ;rgl.c: 417: if(l>=1)
 32269  007C36  0101               	movlb	1	; () banked
 32270  007C38  5195               	movf	ModPruCO@l& (0+255),w,b
 32271  007C3A  E006               	bz	l2886
 32272                           
 32273                           ; BSR set to: 1
 32274                           ;rgl.c: 418: {
 32275                           ;rgl.c: 419: k=1;
 32276  007C3C  0E01               	movlw	1
 32277  007C3E  0100               	movlb	0	; () banked
 32278  007C40  6FF4               	movwf	ModPruCO@k& (0+255),b
 32279                           
 32280                           ; BSR set to: 0
 32281                           ;rgl.c: 420: l=0;
 32282  007C42  0101               	movlb	1	; () banked
 32283  007C44  6B95               	clrf	ModPruCO@l& (0+255),b
 32284                           
 32285                           ;rgl.c: 421: }
 32286  007C46  D001               	goto	l33940
 32287  007C48                     l2886:
 32288                           
 32289                           ; BSR set to: 1
 32290                           ;rgl.c: 422: else
 32291                           ;rgl.c: 423: {
 32292                           ;rgl.c: 424: k=0;
 32293                           
 32294                           ; BSR set to: 0
 32295                           ;rgl.c: 425: l++;
 32296  007C48  D831               	call	PL226	;call to abstracted procedure
 32297  007C4A                     l33940:
 32298                           
 32299                           ; BSR set to: 1
 32300                           ;rgl.c: 426: }
 32301                           ;rgl.c: 427: if(PWM.MAXPWM>PWM.MGMOD)
 32302  007C4A  0100               	movlb	0	; () banked
 32303  007C4C  51B4               	movf	(_PWM+33)& (0+255),w,b	;volatile
 32304  007C4E  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 32305  007C50  D00A               	goto	l33948
 32306                           
 32307                           ; BSR set to: 0
 32308                           ;rgl.c: 428: {
 32309                           ;rgl.c: 429: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
 32310  007C52  51F4               	movf	ModPruCO@k& (0+255),w,b
 32311  007C54  D821               	call	PL106	;call to abstracted procedure
 32312  007C56  D817               	call	PL100	;call to abstracted procedure
 32313  007C58  E203               	bc	l33946
 32314                           
 32315                           ; BSR set to: 0
 32316  007C5A  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 32317  007C5E  D7E0               	goto	l33922
 32318  007C60                     l33946:
 32319                           
 32320                           ; BSR set to: 0
 32321                           ;rgl.c: 430: else rgl.srp+=k;
 32322  007C60  51F4               	movf	ModPruCO@k& (0+255),w,b
 32323  007C62  262E               	addwf	_rgl+7,f,c
 32324  007C64  D7DD               	goto	l33922
 32325  007C66                     l33948:
 32326                           
 32327                           ; BSR set to: 0
 32328                           ;rgl.c: 432: else
 32329                           ;rgl.c: 433: {
 32330                           ;rgl.c: 434: if(rgl.srp+k>PWM.MAXPWM) rgl.srp=PWM.MAXPWM;
 32331  007C66  51F4               	movf	ModPruCO@k& (0+255),w,b
 32332  007C68  C02E  F022         	movff	_rgl+7,??_ModPruCO
 32333  007C6C  6A23               	clrf	(??_ModPruCO+1)& (0+255),c
 32334  007C6E  2622               	addwf	??_ModPruCO,f,c
 32335  007C70  0E00               	movlw	0
 32336  007C72  2223               	addwfc	??_ModPruCO+1,f,c
 32337  007C74  51B4               	movf	(_PWM+33)& (0+255),w,b	;volatile
 32338  007C76  6E24               	movwf	(??_ModPruCO+2)& (0+255),c
 32339  007C78  6A25               	clrf	(??_ModPruCO+3)& (0+255),c
 32340  007C7A  D805               	call	PL100	;call to abstracted procedure
 32341  007C7C  E2F1               	bc	l33946
 32342  007C7E  D7CE               	goto	L65
 32343  007C80                     l2875:
 32344  007C80  0101               	movlb	1	; () banked
 32345  007C82  6B95               	clrf	ModPruCO@l& (0+255),b
 32346  007C84  0012               	return	
 32347  007C86                     __end_of_ModPruCO:
 32348                           	opt stack 0
 32349  007C86                     PL100:
 32350                           	opt stack 24
 32351  007C86  5025               	movf	??_ModPruCO+3,w,c
 32352  007C88  0A80               	xorlw	128
 32353  007C8A  6E26               	movwf	(??_ModPruCO+4)& (0+255),c
 32354  007C8C  5022               	movf	??_ModPruCO,w,c
 32355  007C8E  5C24               	subwf	??_ModPruCO+2,w,c
 32356  007C90  5023               	movf	??_ModPruCO+1,w,c
 32357  007C92  0A80               	xorlw	128
 32358  007C94  5826               	subwfb	(??_ModPruCO+4)& (0+255),w,c
 32359  007C96  0012               	return	
 32360  007C98                     __end_ofPL100:
 32361                           	opt stack 0
 32362  007C98                     PL106:
 32363                           	opt stack 24
 32364  007C98  C02E  F022         	movff	_rgl+7,??_ModPruCO
 32365  007C9C  6A23               	clrf	(??_ModPruCO+1)& (0+255),c
 32366  007C9E  2622               	addwf	??_ModPruCO,f,c
 32367  007CA0  0E00               	movlw	0
 32368  007CA2  2223               	addwfc	??_ModPruCO+1,f,c
 32369  007CA4  519D               	movf	(_PWM+10)& (0+255),w,b	;volatile
 32370  007CA6  6E24               	movwf	(??_ModPruCO+2)& (0+255),c
 32371  007CA8  6A25               	clrf	(??_ModPruCO+3)& (0+255),c
 32372  007CAA  0012               	return	
 32373  007CAC                     __end_ofPL106:
 32374                           	opt stack 0
 32375  007CAC                     PL226:
 32376                           	opt stack 24
 32377  007CAC  0100               	movlb	0	; () banked
 32378  007CAE  6BF4               	clrf	ModPruCO@k& (0+255),b
 32379  007CB0  0101               	movlb	1	; () banked
 32380  007CB2  2B95               	incf	ModPruCO@l& (0+255),f,b
 32381  007CB4  0012               	return	
 32382  007CB6                     __end_ofPL226:
 32383                           	opt stack 0
 32384                           tblptru	equ	0xFF8
 32385                           tblptrh	equ	0xFF7
 32386                           tblptrl	equ	0xFF6
 32387                           tablat	equ	0xFF5
 32388                           prodh	equ	0xFF4
 32389                           prodl	equ	0xFF3
 32390                           intcon	equ	0xFF2
 32391                           postinc0	equ	0xFEE
 32392                           wreg	equ	0xFE8
 32393                           indf1	equ	0xFE7
 32394                           postinc1	equ	0xFE6
 32395                           postdec1	equ	0xFE5
 32396                           fsr1h	equ	0xFE2
 32397                           fsr1l	equ	0xFE1
 32398                           indf2	equ	0xFDF
 32399                           postinc2	equ	0xFDE
 32400                           postdec2	equ	0xFDD
 32401                           fsr2h	equ	0xFDA
 32402                           fsr2l	equ	0xFD9
 32403                           status	equ	0xFD8
 32404                           
 32405 ;; *************** function _ModPrzCO *****************
 32406 ;; Defined at:
 32407 ;;		line 475 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 32408 ;; Parameters:    Size  Location     Type
 32409 ;;		None
 32410 ;; Auto vars:     Size  Location     Type
 32411 ;;  k               1    0        unsigned char 
 32412 ;; Return value:  Size  Location     Type
 32413 ;;		None               void
 32414 ;; Registers used:
 32415 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 32416 ;; Tracked objects:
 32417 ;;		On entry : E/1
 32418 ;;		On exit  : E/0
 32419 ;;		Unchanged: FFFFFFF0/0
 32420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32422 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32423 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32424 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32425 ;;Total ram usage:        6 bytes
 32426 ;; Hardware stack levels used:    1
 32427 ;; Hardware stack levels required when called:    5
 32428 ;; This function calls:
 32429 ;;		_Twyzsza
 32430 ;; This function is called by:
 32431 ;;		_Moduluj
 32432 ;; This function uses a non-reentrant model
 32433 ;;
 32434                           
 32435                           	psect	text140
 32436  00A242                     __ptext140:
 32437                           	opt stack 0
 32438  00A242                     _ModPrzCO:
 32439                           	opt stack 24
 32440                           
 32441                           ;rgl.c: 476: unsigned char k;
 32442                           ;rgl.c: 478: if(!rgl.nmod)
 32443  00A242  BA27               	btfsc	_rgl,5,c
 32444  00A244  D01F               	goto	l33972
 32445                           
 32446                           ;rgl.c: 479: {
 32447                           ;rgl.c: 480: if(Twyzsza(3))
 32448  00A246  0E03               	movlw	3
 32449  00A248  EC34  F055         	call	_Twyzsza
 32450  00A24C  A0D8               	btfss	status,0,c
 32451  00A24E  0012               	return	
 32452                           
 32453                           ;rgl.c: 481: {
 32454                           ;rgl.c: 482: rgl.nmod=1;
 32455  00A250  8A27               	bsf	_rgl,5,c
 32456                           
 32457                           ;rgl.c: 484: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM.MDMOD;
 32458  00A252  0100               	movlb	0	; () banked
 32459  00A254  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 32460  00A256  6E22               	movwf	??_ModPrzCO& (0+255),c
 32461  00A258  6A23               	clrf	(??_ModPrzCO+1)& (0+255),c
 32462  00A25A  0EEC               	movlw	236
 32463  00A25C  242E               	addwf	_rgl+7,w,c
 32464  00A25E  6E24               	movwf	(??_ModPrzCO+2)& (0+255),c
 32465  00A260  6A25               	clrf	(??_ModPrzCO+3)& (0+255),c
 32466  00A262  0EFF               	movlw	255
 32467  00A264  2225               	addwfc	(??_ModPrzCO+3)& (0+255),f,c
 32468  00A266  5025               	movf	??_ModPrzCO+3,w,c
 32469  00A268  0A80               	xorlw	128
 32470  00A26A  6E26               	movwf	(??_ModPrzCO+4)& (0+255),c
 32471  00A26C  5022               	movf	??_ModPrzCO,w,c
 32472  00A26E  5C24               	subwf	??_ModPrzCO+2,w,c
 32473  00A270  5023               	movf	??_ModPrzCO+1,w,c
 32474  00A272  0A80               	xorlw	128
 32475  00A274  5826               	subwfb	(??_ModPrzCO+4)& (0+255),w,c
 32476  00A276  E203               	bc	l33970
 32477                           
 32478                           ; BSR set to: 0
 32479  00A278  C09C  F02E         	movff	_PWM+9,_rgl+7	;volatile
 32480  00A27C  0012               	return	
 32481  00A27E                     l33970:
 32482                           
 32483                           ; BSR set to: 0
 32484                           ;rgl.c: 485: else rgl.srp-=k;
 32485  00A27E  0E14               	movlw	20
 32486  00A280  5E2E               	subwf	_rgl+7,f,c
 32487  00A282  0C14               	retlw	20
 32488  00A284                     l33972:
 32489                           
 32490                           ;rgl.c: 488: else
 32491                           ;rgl.c: 489: {
 32492                           ;rgl.c: 490: if(!Twyzsza(2))
 32493  00A284  0E02               	movlw	2
 32494  00A286  EC34  F055         	call	_Twyzsza
 32495  00A28A  A0D8               	btfss	status,0,c
 32496                           
 32497                           ;rgl.c: 491: rgl.nmod=0;
 32498  00A28C  9A27               	bcf	_rgl,5,c
 32499  00A28E  0012               	return	
 32500  00A290                     __end_of_ModPrzCO:
 32501                           	opt stack 0
 32502                           tblptru	equ	0xFF8
 32503                           tblptrh	equ	0xFF7
 32504                           tblptrl	equ	0xFF6
 32505                           tablat	equ	0xFF5
 32506                           prodh	equ	0xFF4
 32507                           prodl	equ	0xFF3
 32508                           intcon	equ	0xFF2
 32509                           postinc0	equ	0xFEE
 32510                           wreg	equ	0xFE8
 32511                           indf1	equ	0xFE7
 32512                           postinc1	equ	0xFE6
 32513                           postdec1	equ	0xFE5
 32514                           fsr1h	equ	0xFE2
 32515                           fsr1l	equ	0xFE1
 32516                           indf2	equ	0xFDF
 32517                           postinc2	equ	0xFDE
 32518                           postdec2	equ	0xFDD
 32519                           fsr2h	equ	0xFDA
 32520                           fsr2l	equ	0xFD9
 32521                           status	equ	0xFD8
 32522                           
 32523 ;; *************** function _PropOPT *****************
 32524 ;; Defined at:
 32525 ;;		line 497 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 32526 ;; Parameters:    Size  Location     Type
 32527 ;;		None
 32528 ;; Auto vars:     Size  Location     Type
 32529 ;;		None
 32530 ;; Return value:  Size  Location     Type
 32531 ;;		None               void
 32532 ;; Registers used:
 32533 ;;		wreg, status,2, status,0, cstack
 32534 ;; Tracked objects:
 32535 ;;		On entry : E/1
 32536 ;;		On exit  : F/0
 32537 ;;		Unchanged: FFFFFFF0/0
 32538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32543 ;;Total ram usage:        0 bytes
 32544 ;; Hardware stack levels used:    1
 32545 ;; Hardware stack levels required when called:    6
 32546 ;; This function calls:
 32547 ;;		_WriteOPWM
 32548 ;; This function is called by:
 32549 ;;		_Moduluj
 32550 ;; This function uses a non-reentrant model
 32551 ;;
 32552                           
 32553                           	psect	text141
 32554  00B450                     __ptext141:
 32555                           	opt stack 0
 32556  00B450                     _PropOPT:
 32557                           	opt stack 23
 32558                           
 32559                           ;rgl.c: 498: if(rgl.nmod)
 32560  00B450  AA27               	btfss	_rgl,5,c
 32561  00B452  D004               	goto	l33980
 32562                           
 32563                           ;rgl.c: 499: {
 32564                           ;rgl.c: 500: WriteOPWM(PWM.MDMOD);
 32565  00B454  0100               	movlb	0	; () banked
 32566  00B456  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 32567  00B458  EF7B  F03F         	goto	_WriteOPWM
 32568  00B45C                     l33980:
 32569                           
 32570                           ;rgl.c: 503: else
 32571                           ;rgl.c: 504: {
 32572                           ;rgl.c: 505: WriteOPWM(rgl.tmp_pwm);
 32573  00B45C  5030               	movf	_rgl+9,w,c
 32574  00B45E  EF7B  F03F         	goto	_WriteOPWM
 32575  00B462                     __end_of_PropOPT:
 32576                           	opt stack 0
 32577                           tblptru	equ	0xFF8
 32578                           tblptrh	equ	0xFF7
 32579                           tblptrl	equ	0xFF6
 32580                           tablat	equ	0xFF5
 32581                           prodh	equ	0xFF4
 32582                           prodl	equ	0xFF3
 32583                           intcon	equ	0xFF2
 32584                           postinc0	equ	0xFEE
 32585                           wreg	equ	0xFE8
 32586                           indf1	equ	0xFE7
 32587                           postinc1	equ	0xFE6
 32588                           postdec1	equ	0xFE5
 32589                           fsr1h	equ	0xFE2
 32590                           fsr1l	equ	0xFE1
 32591                           indf2	equ	0xFDF
 32592                           postinc2	equ	0xFDE
 32593                           postdec2	equ	0xFDD
 32594                           fsr2h	equ	0xFDA
 32595                           fsr2l	equ	0xFD9
 32596                           status	equ	0xFD8
 32597                           
 32598 ;; *************** function _StartMCW *****************
 32599 ;; Defined at:
 32600 ;;		line 548 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 32601 ;; Parameters:    Size  Location     Type
 32602 ;;		None
 32603 ;; Auto vars:     Size  Location     Type
 32604 ;;		None
 32605 ;; Return value:  Size  Location     Type
 32606 ;;		None               void
 32607 ;; Registers used:
 32608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32609 ;; Tracked objects:
 32610 ;;		On entry : F/0
 32611 ;;		On exit  : F/0
 32612 ;;		Unchanged: 0/0
 32613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32618 ;;Total ram usage:        0 bytes
 32619 ;; Hardware stack levels used:    1
 32620 ;; Hardware stack levels required when called:    6
 32621 ;; This function calls:
 32622 ;;		_StartRTdS
 32623 ;;		_FirstPCW
 32624 ;;		___awdiv
 32625 ;; This function is called by:
 32626 ;;		_Moduluj
 32627 ;; This function uses a non-reentrant model
 32628 ;;
 32629                           
 32630                           	psect	text142
 32631  0097EC                     __ptext142:
 32632                           	opt stack 0
 32633  0097EC                     _StartMCW:
 32634                           	opt stack 23
 32635                           
 32636                           ; BSR set to: 0
 32637                           ;rgl.c: 549: if(rgl.btco||rgl.btcw) return;
 32638                           
 32639                           ; BSR set to: 0
 32640  0097EC  A027               	btfss	_rgl,0,c
 32641                           
 32642                           ; BSR set to: 0
 32643  0097EE  B227               	btfsc	_rgl,1,c
 32644  0097F0  0012               	return	
 32645                           
 32646                           ; BSR set to: 0
 32647                           ;rgl.c: 550: StartRTdS(2);
 32648  0097F2  0E02               	movlw	2
 32649  0097F4  ECC2  F057         	call	_StartRTdS
 32650                           
 32651                           ; BSR set to: 1
 32652                           ;rgl.c: 551: DtCO.dDCO=0;
 32653  0097F8  0100               	movlb	0	; () banked
 32654  0097FA  6BED               	clrf	(_DtCO+9)& (0+255),b
 32655                           
 32656                           ; BSR set to: 0
 32657                           ;rgl.c: 552: DtCW.dDCW=0;
 32658  0097FC  6BD7               	clrf	(_DtCW+8)& (0+255),b
 32659                           
 32660                           ; BSR set to: 0
 32661                           ;rgl.c: 553: DtCO.indCO=0;
 32662  0097FE  6BEE               	clrf	(_DtCO+10)& (0+255),b
 32663                           
 32664                           ; BSR set to: 0
 32665                           ;rgl.c: 554: DtCW.indCW=0;
 32666  009800  6BD9               	clrf	(_DtCW+10)& (0+255),b
 32667                           
 32668                           ; BSR set to: 0
 32669                           ;rgl.c: 555: rgl.fz=0;
 32670  009802  9427               	bcf	_rgl,2,c
 32671                           
 32672                           ; BSR set to: 0
 32673                           ;rgl.c: 556: rgl.med_up=0;
 32674  009804  9627               	bcf	_rgl,3,c
 32675                           
 32676                           ; BSR set to: 0
 32677                           ;rgl.c: 557: rgl.fast_up=0;
 32678  009806  9827               	bcf	_rgl,4,c
 32679                           
 32680                           ; BSR set to: 0
 32681                           ;rgl.c: 559: rgl.srp=0;
 32682  009808  6A2E               	clrf	_rgl+7,c
 32683                           
 32684                           ; BSR set to: 0
 32685                           ;rgl.c: 560: rgl.ytmp=0;
 32686  00980A  6A2D               	clrf	_rgl+6,c
 32687                           
 32688                           ; BSR set to: 0
 32689                           ;rgl.c: 561: rgl.nmod=0;
 32690  00980C  9A27               	bcf	_rgl,5,c
 32691                           
 32692                           ; BSR set to: 0
 32693                           ;rgl.c: 562: rgl.del1s=0;
 32694  00980E  9C27               	bcf	_rgl,6,c
 32695                           
 32696                           ; BSR set to: 0
 32697                           ;rgl.c: 563: rgl.inv_mod=0;
 32698  009810  9028               	bcf	_rgl+1,0,c
 32699                           
 32700                           ; BSR set to: 0
 32701                           ;rgl.c: 564: rgl.xmod=FirstPCW();
 32702  009812  ECD1  F021         	call	_FirstPCW	;wreg free
 32703  009816  6E2F               	movwf	_rgl+8,c
 32704                           
 32705                           ; BSR set to: 2
 32706                           ;rgl.c: 565: tmr=1;
 32707  009818  0E01               	movlw	1
 32708  00981A  6E3F               	movwf	_tmr,c
 32709                           
 32710                           ; BSR set to: 2
 32711                           ;rgl.c: 566: tmr2=1;
 32712  00981C  0101               	movlb	1	; () banked
 32713  00981E  6FB9               	movwf	_tmr2& (0+255),b
 32714                           
 32715                           ; BSR set to: 1
 32716                           ;rgl.c: 567: pwm_center=PWM.MDMOD+(PWM.MGMOD-PWM.MDMOD)/2;
 32717  009820  D811               	call	PL174	;call to abstracted procedure
 32718  009822  0E02               	movlw	2
 32719  009824  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 32720  009826  EC37  F04A         	call	___awdiv	;wreg free
 32721  00982A  51F3               	movf	?___awdiv& (0+255),w,b
 32722  00982C  259C               	addwf	(_PWM+9)& (0+255),w,b	;volatile
 32723  00982E  0101               	movlb	1	; () banked
 32724  009830  6FB8               	movwf	_pwm_center& (0+255),b
 32725                           
 32726                           ; BSR set to: 1
 32727                           ;rgl.c: 568: pwm_kwr=PWM.MDMOD+(PWM.MGMOD-PWM.MDMOD)/4;
 32728  009832  D808               	call	PL174	;call to abstracted procedure
 32729  009834  0E04               	movlw	4
 32730  009836  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 32731  009838  EC37  F04A         	call	___awdiv	;wreg free
 32732  00983C  51F3               	movf	?___awdiv& (0+255),w,b
 32733  00983E  259C               	addwf	(_PWM+9)& (0+255),w,b	;volatile
 32734  009840  6FE3               	movwf	_pwm_kwr& (0+255),b
 32735                           
 32736                           ; BSR set to: 0
 32737  009842  0012               	return	
 32738  009844                     __end_of_StartMCW:
 32739                           	opt stack 0
 32740  009844                     PL174:
 32741                           	opt stack 23
 32742  009844  0100               	movlb	0	; () banked
 32743  009846  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 32744  009848  5D9D               	subwf	(_PWM+10)& (0+255),w,b	;volatile
 32745  00984A  6FF3               	movwf	?___awdiv& (0+255),b
 32746  00984C  6BF4               	clrf	(?___awdiv+1)& (0+255),b
 32747  00984E  A0D8               	btfss	status,0,c
 32748  009850  07F4               	decf	(?___awdiv+1)& (0+255),f,b
 32749  009852  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 32750  009854  0012               	return	
 32751  009856                     __end_ofPL174:
 32752                           	opt stack 0
 32753                           tblptru	equ	0xFF8
 32754                           tblptrh	equ	0xFF7
 32755                           tblptrl	equ	0xFF6
 32756                           tablat	equ	0xFF5
 32757                           prodh	equ	0xFF4
 32758                           prodl	equ	0xFF3
 32759                           intcon	equ	0xFF2
 32760                           postinc0	equ	0xFEE
 32761                           wreg	equ	0xFE8
 32762                           indf1	equ	0xFE7
 32763                           postinc1	equ	0xFE6
 32764                           postdec1	equ	0xFE5
 32765                           fsr1h	equ	0xFE2
 32766                           fsr1l	equ	0xFE1
 32767                           indf2	equ	0xFDF
 32768                           postinc2	equ	0xFDE
 32769                           postdec2	equ	0xFDD
 32770                           fsr2h	equ	0xFDA
 32771                           fsr2l	equ	0xFD9
 32772                           status	equ	0xFD8
 32773                           
 32774 ;; *************** function _ReadDataCW *****************
 32775 ;; Defined at:
 32776 ;;		line 756 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 32777 ;; Parameters:    Size  Location     Type
 32778 ;;		None
 32779 ;; Auto vars:     Size  Location     Type
 32780 ;;		None
 32781 ;; Return value:  Size  Location     Type
 32782 ;;		None               void
 32783 ;; Registers used:
 32784 ;;		None
 32785 ;; Tracked objects:
 32786 ;;		On entry : F/0
 32787 ;;		On exit  : F/0
 32788 ;;		Unchanged: FFFFFFF0/0
 32789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32794 ;;Total ram usage:        0 bytes
 32795 ;; Hardware stack levels used:    1
 32796 ;; Hardware stack levels required when called:    4
 32797 ;; This function calls:
 32798 ;;		Nothing
 32799 ;; This function is called by:
 32800 ;;		_Moduluj
 32801 ;; This function uses a non-reentrant model
 32802 ;;
 32803                           
 32804                           	psect	text143
 32805  00B462                     __ptext143:
 32806                           	opt stack 0
 32807  00B462                     _ReadDataCW:
 32808                           	opt stack 25
 32809                           
 32810                           ; BSR set to: 0
 32811                           ;rgl.c: 757: rgl.x_t=DtCW.DCW;
 32812                           
 32813                           ; BSR set to: 0
 32814  00B462  C0D6  F029         	movff	_DtCW+7,_rgl+2
 32815                           
 32816                           ;rgl.c: 758: rgl.x_f=DtCO.DCO;
 32817  00B466  C0EC  F02A         	movff	_DtCO+8,_rgl+3
 32818                           
 32819                           ;rgl.c: 759: rgl.x_dt=DtCW.dDCW;
 32820  00B46A  C0D7  F02B         	movff	_DtCW+8,_rgl+4
 32821                           
 32822                           ;rgl.c: 760: rgl.x_df=DtCO.dDCO;
 32823  00B46E  C0ED  F02C         	movff	_DtCO+9,_rgl+5
 32824                           
 32825                           ; BSR set to: 0
 32826  00B472  0012               	return	
 32827  00B474                     __end_of_ReadDataCW:
 32828                           	opt stack 0
 32829                           tblptru	equ	0xFF8
 32830                           tblptrh	equ	0xFF7
 32831                           tblptrl	equ	0xFF6
 32832                           tablat	equ	0xFF5
 32833                           prodh	equ	0xFF4
 32834                           prodl	equ	0xFF3
 32835                           intcon	equ	0xFF2
 32836                           postinc0	equ	0xFEE
 32837                           wreg	equ	0xFE8
 32838                           indf1	equ	0xFE7
 32839                           postinc1	equ	0xFE6
 32840                           postdec1	equ	0xFE5
 32841                           fsr1h	equ	0xFE2
 32842                           fsr1l	equ	0xFE1
 32843                           indf2	equ	0xFDF
 32844                           postinc2	equ	0xFDE
 32845                           postdec2	equ	0xFDD
 32846                           fsr2h	equ	0xFDA
 32847                           fsr2l	equ	0xFD9
 32848                           status	equ	0xFD8
 32849                           
 32850 ;; *************** function _ModToCW *****************
 32851 ;; Defined at:
 32852 ;;		line 720 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 32853 ;; Parameters:    Size  Location     Type
 32854 ;;		None
 32855 ;; Auto vars:     Size  Location     Type
 32856 ;;		None
 32857 ;; Return value:  Size  Location     Type
 32858 ;;		None               void
 32859 ;; Registers used:
 32860 ;;		cstack
 32861 ;; Tracked objects:
 32862 ;;		On entry : F/0
 32863 ;;		On exit  : F/0
 32864 ;;		Unchanged: FFFFFFF0/0
 32865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32870 ;;Total ram usage:        0 bytes
 32871 ;; Hardware stack levels used:    1
 32872 ;; Hardware stack levels required when called:    5
 32873 ;; This function calls:
 32874 ;;		_ClrMod
 32875 ;; This function is called by:
 32876 ;;		_Moduluj
 32877 ;; This function uses a non-reentrant model
 32878 ;;
 32879                           
 32880                           	psect	text144
 32881  00B572                     __ptext144:
 32882                           	opt stack 0
 32883  00B572                     _ModToCW:
 32884                           	opt stack 24
 32885                           
 32886                           ; BSR set to: 0
 32887                           ;rgl.c: 721: rgl.btcw=1;
 32888                           
 32889                           ; BSR set to: 0
 32890  00B572  8227               	bsf	_rgl,1,c
 32891                           
 32892                           ;rgl.c: 722: if(rgl.btco)
 32893  00B574  A027               	btfss	_rgl,0,c
 32894  00B576  0012               	return	
 32895                           
 32896                           ; BSR set to: 0
 32897                           ;rgl.c: 723: {
 32898                           ;rgl.c: 724: rgl.btco=0;
 32899  00B578  9027               	bcf	_rgl,0,c
 32900                           
 32901                           ; BSR set to: 0
 32902                           ;rgl.c: 725: ClrMod();
 32903  00B57A  EFC8  F059         	goto	_ClrMod	;wreg free
 32904  00B57E                     __end_of_ModToCW:
 32905                           	opt stack 0
 32906                           tblptru	equ	0xFF8
 32907                           tblptrh	equ	0xFF7
 32908                           tblptrl	equ	0xFF6
 32909                           tablat	equ	0xFF5
 32910                           prodh	equ	0xFF4
 32911                           prodl	equ	0xFF3
 32912                           intcon	equ	0xFF2
 32913                           postinc0	equ	0xFEE
 32914                           wreg	equ	0xFE8
 32915                           indf1	equ	0xFE7
 32916                           postinc1	equ	0xFE6
 32917                           postdec1	equ	0xFE5
 32918                           fsr1h	equ	0xFE2
 32919                           fsr1l	equ	0xFE1
 32920                           indf2	equ	0xFDF
 32921                           postinc2	equ	0xFDE
 32922                           postdec2	equ	0xFDD
 32923                           fsr2h	equ	0xFDA
 32924                           fsr2l	equ	0xFD9
 32925                           status	equ	0xFD8
 32926                           
 32927 ;; *************** function _ModZgCW *****************
 32928 ;; Defined at:
 32929 ;;		line 765 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 32930 ;; Parameters:    Size  Location     Type
 32931 ;;		None
 32932 ;; Auto vars:     Size  Location     Type
 32933 ;;  m               4    1[BANK2 ] long 
 32934 ;;  p               1    0[BANK2 ] unsigned char 
 32935 ;; Return value:  Size  Location     Type
 32936 ;;		None               void
 32937 ;; Registers used:
 32938 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 32939 ;; Tracked objects:
 32940 ;;		On entry : F/0
 32941 ;;		On exit  : D/0
 32942 ;;		Unchanged: FFFFFFF0/0
 32943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32945 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32946 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32947 ;;      Totals:         0       5       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32948 ;;Total ram usage:       10 bytes
 32949 ;; Hardware stack levels used:    1
 32950 ;; Hardware stack levels required when called:    5
 32951 ;; This function calls:
 32952 ;;		_Tnizsza
 32953 ;;		_Twyzsza
 32954 ;;		_Tstoi
 32955 ;;		___wmul
 32956 ;;		___aldiv
 32957 ;;		___lmul
 32958 ;; This function is called by:
 32959 ;;		_Moduluj
 32960 ;; This function uses a non-reentrant model
 32961 ;;
 32962                           
 32963                           	psect	text145
 32964  005C7C                     __ptext145:
 32965                           	opt stack 0
 32966  005C7C                     _ModZgCW:
 32967                           	opt stack 24
 32968                           
 32969                           ; BSR set to: 0
 32970                           ;rgl.c: 766: signed long m;
 32971                           ;rgl.c: 767: unsigned char p;
 32972                           ;rgl.c: 768: if(rgl.fz)
 32973                           
 32974                           ; BSR set to: 0
 32975  005C7C  A427               	btfss	_rgl,2,c
 32976  005C7E  D00B               	goto	l34036
 32977                           
 32978                           ; BSR set to: 0
 32979                           ;rgl.c: 769: {
 32980                           ;rgl.c: 770: if(Tnizsza(3))
 32981  005C80  0E03               	movlw	3
 32982  005C82  EC8F  F059         	call	_Tnizsza
 32983  005C86  A0D8               	btfss	status,0,c
 32984  005C88  0012               	return	
 32985                           
 32986                           ; BSR set to: 0
 32987                           ;rgl.c: 771: {
 32988                           ;rgl.c: 772: rgl.xmod=PWM.BufPWM;
 32989  005C8A  C094  F02F         	movff	_PWM+1,_rgl+8	;volatile
 32990                           
 32991                           ;rgl.c: 773: rgl.srp=0;
 32992  005C8E  6A2E               	clrf	_rgl+7,c
 32993                           
 32994                           ;rgl.c: 774: rgl.ytmp=0;
 32995  005C90  6A2D               	clrf	_rgl+6,c
 32996                           
 32997                           ;rgl.c: 775: rgl.nmod=0;
 32998  005C92  9A27               	bcf	_rgl,5,c
 32999                           
 33000                           ;rgl.c: 776: rgl.del1s=0;
 33001  005C94  9C27               	bcf	_rgl,6,c
 33002  005C96                     l34036:
 33003                           
 33004                           ; BSR set to: 0
 33005                           ;rgl.c: 779: }
 33006                           ;rgl.c: 780: if(Twyzsza(0)&&Tstoi())
 33007  005C96  0E00               	movlw	0
 33008  005C98  EC34  F055         	call	_Twyzsza
 33009  005C9C  E312               	bnc	l34046
 33010                           
 33011                           ; BSR set to: 0
 33012  005C9E  ECD7  F05A         	call	_Tstoi	;wreg free
 33013  005CA2  E30F               	bnc	l34046
 33014                           
 33015                           ; BSR set to: 0
 33016                           ;rgl.c: 781: {
 33017                           ;rgl.c: 782: rgl.fz=1;
 33018  005CA4  8427               	bsf	_rgl,2,c
 33019                           
 33020                           ;rgl.c: 783: rgl.fast_up=0;
 33021  005CA6  9827               	bcf	_rgl,4,c
 33022                           
 33023                           ;rgl.c: 784: rgl.med_up=0;
 33024  005CA8  9627               	bcf	_rgl,3,c
 33025                           
 33026                           ;rgl.c: 785: rgl.srp=PWM.BufPWM;
 33027  005CAA  C094  F02E         	movff	_PWM+1,_rgl+7	;volatile
 33028                           
 33029                           ;rgl.c: 786: rgl.xmod=PWM.BufPWM;
 33030  005CAE  C094  F02F         	movff	_PWM+1,_rgl+8	;volatile
 33031                           
 33032                           ; BSR set to: 0
 33033                           ;rgl.c: 787: if(rgl.xmod>PWM.MGMOD)
 33034  005CB2  502F               	movf	_rgl+8,w,c
 33035  005CB4  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 33036  005CB6  0012               	return	
 33037                           
 33038                           ; BSR set to: 0
 33039                           ;rgl.c: 788: {
 33040                           ;rgl.c: 789: rgl.srp=PWM.MGMOD;
 33041  005CB8  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 33042                           
 33043                           ;rgl.c: 790: rgl.xmod=PWM.MGMOD;
 33044  005CBC  C09D  F02F         	movff	_PWM+10,_rgl+8	;volatile
 33045  005CC0  0012               	return	
 33046  005CC2                     l34046:
 33047                           
 33048                           ; BSR set to: 0
 33049                           ;rgl.c: 793: }
 33050                           ;rgl.c: 794: if(rgl.xmod>=PWM.MDMOD) m=(rgl.xmod-PWM.MDMOD)*10;
 33051  005CC2  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 33052  005CC4  5C2F               	subwf	_rgl+8,w,c
 33053  005CC6  E316               	bnc	l2993
 33054                           
 33055                           ; BSR set to: 0
 33056  005CC8  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 33057  005CCA  5C2F               	subwf	_rgl+8,w,c
 33058  005CCC  6E1E               	movwf	?___wmul,c
 33059  005CCE  6A1F               	clrf	?___wmul+1,c
 33060  005CD0  A0D8               	btfss	status,0,c
 33061  005CD2  061F               	decf	?___wmul+1,f,c
 33062  005CD4  6A21               	clrf	?___wmul+3,c
 33063  005CD6  0E0A               	movlw	10
 33064  005CD8  6E20               	movwf	?___wmul+2,c
 33065  005CDA  EC9C  F056         	call	___wmul	;wreg free
 33066  005CDE  0102               	movlb	2	; () banked
 33067  005CE0  C01E  F2F1         	movff	?___wmul,ModZgCW@m
 33068  005CE4  C01F  F2F2         	movff	?___wmul+1,ModZgCW@m+1
 33069  005CE8  0E00               	movlw	0
 33070  005CEA  BFF2               	btfsc	(ModZgCW@m+1)& (0+255),7,b
 33071  005CEC  0EFF               	movlw	-1
 33072  005CEE  6FF3               	movwf	(ModZgCW@m+2)& (0+255),b
 33073  005CF0  6FF4               	movwf	(ModZgCW@m+3)& (0+255),b
 33074  005CF2  D003               	goto	l34050
 33075  005CF4                     l2993:
 33076                           
 33077                           ; BSR set to: 0
 33078                           ;rgl.c: 795: else m=0;
 33079  005CF4  0102               	movlb	2	; () banked
 33080  005CF6  6BF1               	clrf	ModZgCW@m& (0+255),b
 33081  005CF8  D8C2               	call	PL244	;call to abstracted procedure
 33082  005CFA                     l34050:
 33083                           
 33084                           ; BSR set to: 2
 33085                           ;rgl.c: 796: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
 33086  005CFA  C2F1  F01E         	movff	ModZgCW@m,?___aldiv
 33087  005CFE  C2F2  F01F         	movff	ModZgCW@m+1,?___aldiv+1
 33088  005D02  C2F3  F020         	movff	ModZgCW@m+2,?___aldiv+2
 33089  005D06  C2F4  F021         	movff	ModZgCW@m+3,?___aldiv+3
 33090  005D0A  0100               	movlb	0	; () banked
 33091  005D0C  51DD               	movf	(_DtCW+14)& (0+255),w,b
 33092  005D0E  C0DC  F0F9         	movff	_DtCW+13,??_ModZgCW
 33093  005D12  6BFA               	clrf	(??_ModZgCW+1)& (0+255),b
 33094  005D14  5FF9               	subwf	??_ModZgCW& (0+255),f,b
 33095  005D16  0E00               	movlw	0
 33096  005D18  5BFA               	subwfb	(??_ModZgCW+1)& (0+255),f,b
 33097  005D1A  C0F9  F022         	movff	??_ModZgCW,?___aldiv+4
 33098  005D1E  C0FA  F023         	movff	??_ModZgCW+1,?___aldiv+5
 33099  005D22  BE23               	btfsc	?___aldiv+5,7,c
 33100  005D24  0EFF               	movlw	-1
 33101  005D26  6E24               	movwf	?___aldiv+6,c
 33102  005D28  6E25               	movwf	?___aldiv+7,c
 33103  005D2A  ECE3  F042         	call	___aldiv	;wreg free
 33104  005D2E  C01E  F2F1         	movff	?___aldiv,ModZgCW@m
 33105  005D32  C01F  F2F2         	movff	?___aldiv+1,ModZgCW@m+1
 33106  005D36  C020  F2F3         	movff	?___aldiv+2,ModZgCW@m+2
 33107  005D3A  C021  F2F4         	movff	?___aldiv+3,ModZgCW@m+3
 33108                           
 33109                           ;rgl.c: 797: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
 33110  005D3E  C2F1  F01E         	movff	ModZgCW@m,?___lmul
 33111  005D42  C2F2  F01F         	movff	ModZgCW@m+1,?___lmul+1
 33112  005D46  C2F3  F020         	movff	ModZgCW@m+2,?___lmul+2
 33113  005D4A  C2F4  F021         	movff	ModZgCW@m+3,?___lmul+3
 33114  005D4E  51DD               	movf	(_DtCW+14)& (0+255),w,b
 33115  005D50  C0DB  F0F9         	movff	_DtCW+12,??_ModZgCW
 33116  005D54  6BFA               	clrf	(??_ModZgCW+1)& (0+255),b
 33117  005D56  5FF9               	subwf	??_ModZgCW& (0+255),f,b
 33118  005D58  0E00               	movlw	0
 33119  005D5A  5BFA               	subwfb	(??_ModZgCW+1)& (0+255),f,b
 33120  005D5C  C0F9  F022         	movff	??_ModZgCW,?___lmul+4
 33121  005D60  C0FA  F023         	movff	??_ModZgCW+1,?___lmul+5
 33122  005D64  BE23               	btfsc	?___lmul+5,7,c
 33123  005D66  0EFF               	movlw	-1
 33124  005D68  6E24               	movwf	?___lmul+6,c
 33125  005D6A  6E25               	movwf	?___lmul+7,c
 33126  005D6C  ECD2  F050         	call	___lmul	;wreg free
 33127  005D70  C01E  F2F1         	movff	?___lmul,ModZgCW@m
 33128  005D74  C01F  F2F2         	movff	?___lmul+1,ModZgCW@m+1
 33129  005D78  C020  F2F3         	movff	?___lmul+2,ModZgCW@m+2
 33130  005D7C  C021  F2F4         	movff	?___lmul+3,ModZgCW@m+3
 33131                           
 33132                           ;rgl.c: 798: if(m<0) m=0;
 33133  005D80  0102               	movlb	2	; () banked
 33134  005D82  AFF4               	btfss	(ModZgCW@m+3)& (0+255),7,b
 33135  005D84  D002               	goto	l34056
 33136                           
 33137                           ; BSR set to: 2
 33138  005D86  6BF1               	clrf	ModZgCW@m& (0+255),b
 33139  005D88  D87A               	call	PL244	;call to abstracted procedure
 33140  005D8A                     l34056:
 33141                           
 33142                           ; BSR set to: 2
 33143                           ;rgl.c: 799: m=m/10+PWM.MDMOD;
 33144  005D8A  C2F1  F01E         	movff	ModZgCW@m,?___aldiv
 33145  005D8E  C2F2  F01F         	movff	ModZgCW@m+1,?___aldiv+1
 33146  005D92  C2F3  F020         	movff	ModZgCW@m+2,?___aldiv+2
 33147  005D96  C2F4  F021         	movff	ModZgCW@m+3,?___aldiv+3
 33148  005D9A  0E0A               	movlw	10
 33149  005D9C  6E22               	movwf	?___aldiv+4,c
 33150  005D9E  0E00               	movlw	0
 33151  005DA0  6A23               	clrf	?___aldiv+5,c
 33152  005DA2  6A24               	clrf	?___aldiv+6,c
 33153  005DA4  6A25               	clrf	?___aldiv+7,c
 33154  005DA6  ECE3  F042         	call	___aldiv	;wreg free
 33155  005DAA  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 33156  005DAC  241E               	addwf	?___aldiv,w,c
 33157  005DAE  0102               	movlb	2	; () banked
 33158  005DB0  6FF1               	movwf	ModZgCW@m& (0+255),b
 33159  005DB2  0E00               	movlw	0
 33160  005DB4  201F               	addwfc	?___aldiv+1,w,c
 33161  005DB6  6FF2               	movwf	(ModZgCW@m+1)& (0+255),b
 33162  005DB8  0E00               	movlw	0
 33163  005DBA  2020               	addwfc	?___aldiv+2,w,c
 33164  005DBC  6FF3               	movwf	(ModZgCW@m+2)& (0+255),b
 33165  005DBE  0E00               	movlw	0
 33166  005DC0  2021               	addwfc	?___aldiv+3,w,c
 33167  005DC2  6FF4               	movwf	(ModZgCW@m+3)& (0+255),b
 33168                           
 33169                           ; BSR set to: 2
 33170                           ;rgl.c: 800: if(m>0xff)
 33171  005DC4  51F4               	movf	(ModZgCW@m+3)& (0+255),w,b
 33172  005DC6  0A80               	xorlw	128
 33173  005DC8  0F80               	addlw	128
 33174  005DCA  E108               	bnz	u63745
 33175  005DCC  0E00               	movlw	0
 33176  005DCE  5DF3               	subwf	(ModZgCW@m+2)& (0+255),w,b
 33177  005DD0  E105               	bnz	u63745
 33178  005DD2  0E01               	movlw	1
 33179  005DD4  5DF2               	subwf	(ModZgCW@m+1)& (0+255),w,b
 33180  005DD6  E102               	bnz	u63745
 33181  005DD8  0E00               	movlw	0
 33182  005DDA  5DF1               	subwf	ModZgCW@m& (0+255),w,b
 33183  005DDC                     u63745:
 33184  005DDC  E304               	bnc	l2996
 33185                           
 33186                           ; BSR set to: 2
 33187                           ;rgl.c: 801: {
 33188                           ;rgl.c: 802: rgl.fz=0;
 33189  005DDE  9427               	bcf	_rgl,2,c
 33190                           
 33191                           ;rgl.c: 803: rgl.tmp_pwm=rgl.xmod;
 33192  005DE0  C02F  F030         	movff	_rgl+8,_rgl+9
 33193                           
 33194                           ;rgl.c: 804: return;
 33195  005DE4  0012               	return	
 33196  005DE6                     l2996:
 33197                           
 33198                           ; BSR set to: 2
 33199                           ;rgl.c: 805: }
 33200                           ;rgl.c: 806: if(rgl.fz&&(rgl.xmod>m))
 33201  005DE6  A427               	btfss	_rgl,2,c
 33202  005DE8  D01F               	goto	l2997
 33203                           
 33204                           ; BSR set to: 2
 33205  005DEA  C02F  F0F9         	movff	_rgl+8,??_ModZgCW
 33206  005DEE  0100               	movlb	0	; () banked
 33207  005DF0  6BFA               	clrf	(??_ModZgCW+1)& (0+255),b
 33208  005DF2  6BFB               	clrf	(??_ModZgCW+2)& (0+255),b
 33209  005DF4  6BFC               	clrf	(??_ModZgCW+3)& (0+255),b
 33210  005DF6  0102               	movlb	2	; () banked
 33211  005DF8  51F4               	movf	(ModZgCW@m+3)& (0+255),w,b
 33212  005DFA  0A80               	xorlw	128
 33213  005DFC  0100               	movlb	0	; () banked
 33214  005DFE  6FFD               	movwf	(??_ModZgCW+4)& (0+255),b
 33215  005E00  51F9               	movf	??_ModZgCW& (0+255),w,b
 33216  005E02  0102               	movlb	2	; () banked
 33217  005E04  5DF1               	subwf	ModZgCW@m& (0+255),w,b
 33218  005E06  0100               	movlb	0	; () banked
 33219  005E08  51FA               	movf	(??_ModZgCW+1)& (0+255),w,b
 33220  005E0A  0102               	movlb	2	; () banked
 33221  005E0C  59F2               	subwfb	(ModZgCW@m+1)& (0+255),w,b
 33222  005E0E  0100               	movlb	0	; () banked
 33223  005E10  51FB               	movf	(??_ModZgCW+2)& (0+255),w,b
 33224  005E12  0102               	movlb	2	; () banked
 33225  005E14  59F3               	subwfb	(ModZgCW@m+2)& (0+255),w,b
 33226  005E16  0100               	movlb	0	; () banked
 33227  005E18  51FC               	movf	(??_ModZgCW+3)& (0+255),w,b
 33228  005E1A  0A80               	xorlw	128
 33229  005E1C  59FD               	subwfb	(??_ModZgCW+4)& (0+255),w,b
 33230  005E1E  E204               	bc	l2997
 33231                           
 33232                           ; BSR set to: 0
 33233                           ;rgl.c: 807: rgl.srp=(rgl.xmod-m);
 33234  005E20  0102               	movlb	2	; () banked
 33235  005E22  51F1               	movf	ModZgCW@m& (0+255),w,b
 33236  005E24  5C2F               	subwf	_rgl+8,w,c
 33237  005E26  6E2E               	movwf	_rgl+7,c
 33238  005E28                     l2997:
 33239                           
 33240                           ;rgl.c: 808: m+=rgl.srp;
 33241  005E28  502E               	movf	_rgl+7,w,c
 33242  005E2A  0102               	movlb	2	; () banked
 33243  005E2C  27F1               	addwf	ModZgCW@m& (0+255),f,b
 33244  005E2E  0E00               	movlw	0
 33245  005E30  23F2               	addwfc	(ModZgCW@m+1)& (0+255),f,b
 33246  005E32  23F3               	addwfc	(ModZgCW@m+2)& (0+255),f,b
 33247  005E34  23F4               	addwfc	(ModZgCW@m+3)& (0+255),f,b
 33248                           
 33249                           ;rgl.c: 809: if(m>rgl.xmod) p=rgl.xmod;
 33250  005E36  C02F  F0F9         	movff	_rgl+8,??_ModZgCW
 33251  005E3A  0100               	movlb	0	; () banked
 33252  005E3C  6BFA               	clrf	(??_ModZgCW+1)& (0+255),b
 33253  005E3E  6BFB               	clrf	(??_ModZgCW+2)& (0+255),b
 33254  005E40  6BFC               	clrf	(??_ModZgCW+3)& (0+255),b
 33255  005E42  51FC               	movf	(??_ModZgCW+3)& (0+255),w,b
 33256  005E44  0A80               	xorlw	128
 33257  005E46  6FFD               	movwf	(??_ModZgCW+4)& (0+255),b
 33258  005E48  0102               	movlb	2	; () banked
 33259  005E4A  51F1               	movf	ModZgCW@m& (0+255),w,b
 33260  005E4C  0100               	movlb	0	; () banked
 33261  005E4E  5DF9               	subwf	??_ModZgCW& (0+255),w,b
 33262  005E50  0102               	movlb	2	; () banked
 33263  005E52  51F2               	movf	(ModZgCW@m+1)& (0+255),w,b
 33264  005E54  0100               	movlb	0	; () banked
 33265  005E56  59FA               	subwfb	(??_ModZgCW+1)& (0+255),w,b
 33266  005E58  0102               	movlb	2	; () banked
 33267  005E5A  51F3               	movf	(ModZgCW@m+2)& (0+255),w,b
 33268  005E5C  0100               	movlb	0	; () banked
 33269  005E5E  59FB               	subwfb	(??_ModZgCW+2)& (0+255),w,b
 33270  005E60  0102               	movlb	2	; () banked
 33271  005E62  51F4               	movf	(ModZgCW@m+3)& (0+255),w,b
 33272  005E64  0A80               	xorlw	128
 33273  005E66  0100               	movlb	0	; () banked
 33274  005E68  59FD               	subwfb	(??_ModZgCW+4)& (0+255),w,b
 33275  005E6A  E203               	bc	l2998
 33276                           
 33277                           ; BSR set to: 0
 33278  005E6C  C02F  F2F0         	movff	_rgl+8,ModZgCW@p
 33279  005E70  D002               	goto	l2999
 33280  005E72                     l2998:
 33281                           
 33282                           ; BSR set to: 0
 33283                           ;rgl.c: 810: else p=m;
 33284  005E72  C2F1  F2F0         	movff	ModZgCW@m,ModZgCW@p
 33285  005E76                     l2999:
 33286                           
 33287                           ; BSR set to: 0
 33288                           ;rgl.c: 811: rgl.fz=0;
 33289  005E76  9427               	bcf	_rgl,2,c
 33290                           
 33291                           ;rgl.c: 812: rgl.tmp_pwm=p;
 33292  005E78  C2F0  F030         	movff	ModZgCW@p,_rgl+9
 33293  005E7C  0012               	return	
 33294  005E7E                     __end_of_ModZgCW:
 33295                           	opt stack 0
 33296  005E7E                     PL244:
 33297                           	opt stack 24
 33298  005E7E  6BF2               	clrf	(ModZgCW@m+1)& (0+255),b
 33299  005E80  6BF3               	clrf	(ModZgCW@m+2)& (0+255),b
 33300  005E82  6BF4               	clrf	(ModZgCW@m+3)& (0+255),b
 33301  005E84  0012               	return	
 33302  005E86                     __end_ofPL244:
 33303                           	opt stack 0
 33304                           tblptru	equ	0xFF8
 33305                           tblptrh	equ	0xFF7
 33306                           tblptrl	equ	0xFF6
 33307                           tablat	equ	0xFF5
 33308                           prodh	equ	0xFF4
 33309                           prodl	equ	0xFF3
 33310                           intcon	equ	0xFF2
 33311                           postinc0	equ	0xFEE
 33312                           wreg	equ	0xFE8
 33313                           indf1	equ	0xFE7
 33314                           postinc1	equ	0xFE6
 33315                           postdec1	equ	0xFE5
 33316                           fsr1h	equ	0xFE2
 33317                           fsr1l	equ	0xFE1
 33318                           indf2	equ	0xFDF
 33319                           postinc2	equ	0xFDE
 33320                           postdec2	equ	0xFDD
 33321                           fsr2h	equ	0xFDA
 33322                           fsr2l	equ	0xFD9
 33323                           status	equ	0xFD8
 33324                           
 33325 ;; *************** function _ModDkCW *****************
 33326 ;; Defined at:
 33327 ;;		line 817 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 33328 ;; Parameters:    Size  Location     Type
 33329 ;;		None
 33330 ;; Auto vars:     Size  Location     Type
 33331 ;;  m               4    8[BANK0 ] long 
 33332 ;;  p               1    7[BANK0 ] unsigned char 
 33333 ;;  k               1    6[BANK0 ] unsigned char 
 33334 ;;  ada             1    5[BANK0 ] char 
 33335 ;; Return value:  Size  Location     Type
 33336 ;;		None               void
 33337 ;; Registers used:
 33338 ;;		wreg, status,2, status,0, cstack
 33339 ;; Tracked objects:
 33340 ;;		On entry : D/0
 33341 ;;		On exit  : D/0
 33342 ;;		Unchanged: FFFFFFF0/0
 33343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33345 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33346 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33347 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33348 ;;Total ram usage:       12 bytes
 33349 ;; Hardware stack levels used:    1
 33350 ;; Hardware stack levels required when called:    5
 33351 ;; This function calls:
 33352 ;;		_Trowna
 33353 ;;		_Tnizsza
 33354 ;;		___wmul
 33355 ;; This function is called by:
 33356 ;;		_Moduluj
 33357 ;; This function uses a non-reentrant model
 33358 ;;
 33359                           
 33360                           	psect	text146
 33361  008684                     __ptext146:
 33362                           	opt stack 0
 33363  008684                     _ModDkCW:
 33364                           	opt stack 24
 33365                           
 33366                           ;rgl.c: 818: signed long m;
 33367                           ;rgl.c: 819: signed char ada;
 33368                           ;rgl.c: 820: unsigned char k,p;
 33369                           ;rgl.c: 822: if(!rgl.fz) return;
 33370  008684  A427               	btfss	_rgl,2,c
 33371  008686  0012               	return	
 33372                           
 33373                           ;rgl.c: 823: ada=DtCW.AC_CW-DtCW.DAD_CW;
 33374  008688  0100               	movlb	0	; () banked
 33375  00868A  51DD               	movf	(_DtCW+14)& (0+255),w,b
 33376  00868C  5DDB               	subwf	(_DtCW+12)& (0+255),w,b
 33377  00868E  6FF8               	movwf	ModDkCW@ada& (0+255),b
 33378                           
 33379                           ; BSR set to: 0
 33380                           ;rgl.c: 824: k=1;
 33381  008690  0E01               	movlw	1
 33382  008692  6FF9               	movwf	ModDkCW@k& (0+255),b
 33383                           
 33384                           ; BSR set to: 0
 33385                           ;rgl.c: 825: if(Trowna()) return;
 33386  008694  ECDD  F05A         	call	_Trowna	;wreg free
 33387  008698  B0D8               	btfsc	status,0,c
 33388  00869A  0012               	return	
 33389                           
 33390                           ; BSR set to: 0
 33391                           ;rgl.c: 826: if(Tnizsza(0))
 33392  00869C  0E00               	movlw	0
 33393  00869E  EC8F  F059         	call	_Tnizsza
 33394  0086A2  E302               	bnc	l34084
 33395                           
 33396                           ; BSR set to: 0
 33397                           ;rgl.c: 827: {
 33398                           ;rgl.c: 828: k=2;
 33399  0086A4  0E02               	movlw	2
 33400  0086A6  6FF9               	movwf	ModDkCW@k& (0+255),b
 33401  0086A8                     l34084:
 33402                           
 33403                           ; BSR set to: 0
 33404                           ;rgl.c: 834: }
 33405                           ;rgl.c: 843: m=rgl.srp+k*ada;
 33406  0086A8  C0F9  F01E         	movff	ModDkCW@k,?___wmul
 33407  0086AC  6A1F               	clrf	?___wmul+1,c
 33408  0086AE  51F8               	movf	ModDkCW@ada& (0+255),w,b
 33409  0086B0  6E20               	movwf	?___wmul+2,c
 33410  0086B2  6A21               	clrf	?___wmul+3,c
 33411  0086B4  BE20               	btfsc	?___wmul+2,7,c
 33412  0086B6  0621               	decf	?___wmul+3,f,c
 33413  0086B8  EC9C  F056         	call	___wmul	;wreg free
 33414  0086BC  502E               	movf	_rgl+7,w,c
 33415  0086BE  241E               	addwf	?___wmul,w,c
 33416  0086C0  6FF3               	movwf	??_ModDkCW& (0+255),b
 33417  0086C2  0E00               	movlw	0
 33418  0086C4  201F               	addwfc	?___wmul+1,w,c
 33419  0086C6  6FF4               	movwf	(??_ModDkCW+1)& (0+255),b
 33420  0086C8  C0F3  F0FB         	movff	??_ModDkCW,ModDkCW@m
 33421  0086CC  C0F4  F0FC         	movff	??_ModDkCW+1,ModDkCW@m+1
 33422  0086D0  0E00               	movlw	0
 33423  0086D2  BFFC               	btfsc	(ModDkCW@m+1)& (0+255),7,b
 33424  0086D4  0EFF               	movlw	-1
 33425  0086D6  6FFD               	movwf	(ModDkCW@m+2)& (0+255),b
 33426  0086D8  6FFE               	movwf	(ModDkCW@m+3)& (0+255),b
 33427                           
 33428                           ; BSR set to: 0
 33429                           ;rgl.c: 844: if(m>rgl.xmod) p=rgl.xmod;
 33430  0086DA  C02F  F0F3         	movff	_rgl+8,??_ModDkCW
 33431  0086DE  6BF4               	clrf	(??_ModDkCW+1)& (0+255),b
 33432  0086E0  6BF5               	clrf	(??_ModDkCW+2)& (0+255),b
 33433  0086E2  6BF6               	clrf	(??_ModDkCW+3)& (0+255),b
 33434  0086E4  51F6               	movf	(??_ModDkCW+3)& (0+255),w,b
 33435  0086E6  0A80               	xorlw	128
 33436  0086E8  6FF7               	movwf	(??_ModDkCW+4)& (0+255),b
 33437  0086EA  51FB               	movf	ModDkCW@m& (0+255),w,b
 33438  0086EC  5DF3               	subwf	??_ModDkCW& (0+255),w,b
 33439  0086EE  51FC               	movf	(ModDkCW@m+1)& (0+255),w,b
 33440  0086F0  59F4               	subwfb	(??_ModDkCW+1)& (0+255),w,b
 33441  0086F2  51FD               	movf	(ModDkCW@m+2)& (0+255),w,b
 33442  0086F4  59F5               	subwfb	(??_ModDkCW+2)& (0+255),w,b
 33443  0086F6  51FE               	movf	(ModDkCW@m+3)& (0+255),w,b
 33444  0086F8  0A80               	xorlw	128
 33445  0086FA  59F7               	subwfb	(??_ModDkCW+4)& (0+255),w,b
 33446  0086FC  E203               	bc	l34090
 33447                           
 33448                           ; BSR set to: 0
 33449  0086FE  C02F  F0FA         	movff	_rgl+8,ModDkCW@p
 33450  008702  D017               	goto	l3007
 33451  008704                     l34090:
 33452                           
 33453                           ; BSR set to: 0
 33454                           ;rgl.c: 845: else
 33455                           ;rgl.c: 846: if(m<PWM.MDMOD) p=PWM.MDMOD;
 33456  008704  C09C  F0F3         	movff	_PWM+9,??_ModDkCW	;volatile
 33457  008708  6BF4               	clrf	(??_ModDkCW+1)& (0+255),b
 33458  00870A  6BF5               	clrf	(??_ModDkCW+2)& (0+255),b
 33459  00870C  6BF6               	clrf	(??_ModDkCW+3)& (0+255),b
 33460  00870E  51FE               	movf	(ModDkCW@m+3)& (0+255),w,b
 33461  008710  0A80               	xorlw	128
 33462  008712  6FF7               	movwf	(??_ModDkCW+4)& (0+255),b
 33463  008714  51F3               	movf	??_ModDkCW& (0+255),w,b
 33464  008716  5DFB               	subwf	ModDkCW@m& (0+255),w,b
 33465  008718  51F4               	movf	(??_ModDkCW+1)& (0+255),w,b
 33466  00871A  59FC               	subwfb	(ModDkCW@m+1)& (0+255),w,b
 33467  00871C  51F5               	movf	(??_ModDkCW+2)& (0+255),w,b
 33468  00871E  59FD               	subwfb	(ModDkCW@m+2)& (0+255),w,b
 33469  008720  51F6               	movf	(??_ModDkCW+3)& (0+255),w,b
 33470  008722  0A80               	xorlw	128
 33471  008724  59F7               	subwfb	(??_ModDkCW+4)& (0+255),w,b
 33472  008726  E203               	bc	l3008
 33473                           
 33474                           ; BSR set to: 0
 33475  008728  C09C  F0FA         	movff	_PWM+9,ModDkCW@p	;volatile
 33476  00872C  D002               	goto	l3007
 33477  00872E                     l3008:
 33478                           
 33479                           ; BSR set to: 0
 33480                           ;rgl.c: 847: else p=m;
 33481  00872E  C0FB  F0FA         	movff	ModDkCW@m,ModDkCW@p
 33482  008732                     l3007:
 33483                           
 33484                           ; BSR set to: 0
 33485                           ;rgl.c: 848: rgl.tmp_pwm=p;
 33486  008732  C0FA  F030         	movff	ModDkCW@p,_rgl+9
 33487  008736  0012               	return	
 33488  008738                     __end_of_ModDkCW:
 33489                           	opt stack 0
 33490                           tblptru	equ	0xFF8
 33491                           tblptrh	equ	0xFF7
 33492                           tblptrl	equ	0xFF6
 33493                           tablat	equ	0xFF5
 33494                           prodh	equ	0xFF4
 33495                           prodl	equ	0xFF3
 33496                           intcon	equ	0xFF2
 33497                           postinc0	equ	0xFEE
 33498                           wreg	equ	0xFE8
 33499                           indf1	equ	0xFE7
 33500                           postinc1	equ	0xFE6
 33501                           postdec1	equ	0xFE5
 33502                           fsr1h	equ	0xFE2
 33503                           fsr1l	equ	0xFE1
 33504                           indf2	equ	0xFDF
 33505                           postinc2	equ	0xFDE
 33506                           postdec2	equ	0xFDD
 33507                           fsr2h	equ	0xFDA
 33508                           fsr2l	equ	0xFD9
 33509                           status	equ	0xFD8
 33510                           
 33511 ;; *************** function _IncMaxCW *****************
 33512 ;; Defined at:
 33513 ;;		line 1074 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 33514 ;; Parameters:    Size  Location     Type
 33515 ;;		None
 33516 ;; Auto vars:     Size  Location     Type
 33517 ;;  k               1    0        unsigned char 
 33518 ;; Return value:  Size  Location     Type
 33519 ;;		None               void
 33520 ;; Registers used:
 33521 ;;		wreg, status,2, status,0, cstack
 33522 ;; Tracked objects:
 33523 ;;		On entry : F/1
 33524 ;;		On exit  : F/0
 33525 ;;		Unchanged: FFFFFFF0/0
 33526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33529 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33530 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33531 ;;Total ram usage:        6 bytes
 33532 ;; Hardware stack levels used:    1
 33533 ;; Hardware stack levels required when called:    5
 33534 ;; This function calls:
 33535 ;;		_Trosnie
 33536 ;; This function is called by:
 33537 ;;		_Moduluj
 33538 ;; This function uses a non-reentrant model
 33539 ;;
 33540                           
 33541                           	psect	text147
 33542  00821C                     __ptext147:
 33543                           	opt stack 0
 33544  00821C                     _IncMaxCW:
 33545                           	opt stack 24
 33546                           
 33547                           ; BSR set to: 1
 33548                           ;rgl.c: 1075: unsigned char k;
 33549                           ;rgl.c: 1079: if(rgl.fz)
 33550  00821C  A427               	btfss	_rgl,2,c
 33551  00821E  D010               	goto	l34106
 33552                           
 33553                           ; BSR set to: 1
 33554                           ;rgl.c: 1080: {
 33555                           ;rgl.c: 1081: if(PWM.MMAXCW>PWM.MGMOD)
 33556  008220  0100               	movlb	0	; () banked
 33557  008222  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 33558  008224  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 33559  008226  D006               	goto	l34102
 33560                           
 33561                           ; BSR set to: 0
 33562                           ;rgl.c: 1082: {
 33563                           ;rgl.c: 1083: if(rgl.xmod>PWM.MGMOD) rgl.xmod=PWM.MGMOD;
 33564  008228  502F               	movf	_rgl+8,w,c
 33565  00822A  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 33566  00822C  0012               	return	
 33567                           
 33568                           ; BSR set to: 0
 33569  00822E  C09D  F02F         	movff	_PWM+10,_rgl+8	;volatile
 33570  008232  0012               	return	
 33571  008234                     l34102:
 33572                           
 33573                           ; BSR set to: 0
 33574                           ;rgl.c: 1085: else
 33575                           ;rgl.c: 1086: {
 33576                           ;rgl.c: 1087: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
 33577  008234  502F               	movf	_rgl+8,w,c
 33578  008236  61B1               	cpfslt	(_PWM+30)& (0+255),b	;volatile
 33579  008238  0012               	return	
 33580                           
 33581                           ; BSR set to: 0
 33582  00823A  C0B1  F02F         	movff	_PWM+30,_rgl+8	;volatile
 33583  00823E  0012               	return	
 33584  008240                     l34106:
 33585                           
 33586                           ; BSR set to: 1
 33587                           ;rgl.c: 1090: }
 33588                           ;rgl.c: 1093: if(Trosnie(2)&&!rgl.med_up)
 33589  008240  0E02               	movlw	2
 33590  008242  EC5F  F059         	call	_Trosnie
 33591  008246  B0D8               	btfsc	status,0,c
 33592                           
 33593                           ; BSR set to: 1
 33594  008248  B627               	btfsc	_rgl,3,c
 33595  00824A  D017               	goto	l34126
 33596                           
 33597                           ; BSR set to: 1
 33598                           ;rgl.c: 1094: {
 33599                           ;rgl.c: 1095: rgl.med_up=1;
 33600  00824C  8627               	bsf	_rgl,3,c
 33601                           
 33602                           ; BSR set to: 1
 33603                           ;rgl.c: 1097: if(PWM.MMAXCW>PWM.MGMOD)
 33604  00824E  0100               	movlb	0	; () banked
 33605  008250  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 33606  008252  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 33607  008254  D00B               	goto	l34120
 33608                           
 33609                           ; BSR set to: 0
 33610                           ;rgl.c: 1098: {
 33611                           ;rgl.c: 1099: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
 33612  008256  502E               	movf	_rgl+7,w,c
 33613  008258  D854               	call	PL162	;call to abstracted procedure
 33614  00825A  519D               	movf	(_PWM+10)& (0+255),w,b	;volatile
 33615  00825C  D847               	call	PL66	;call to abstracted procedure
 33616  00825E  E203               	bc	l34118
 33617                           
 33618                           ; BSR set to: 0
 33619  008260  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 33620  008264  D00A               	goto	l34126
 33621  008266                     l34118:
 33622                           
 33623                           ; BSR set to: 0
 33624                           ;rgl.c: 1100: else rgl.srp+=k;
 33625  008266  0E05               	movlw	5
 33626  008268  262E               	addwf	_rgl+7,f,c
 33627  00826A  D007               	goto	l34126
 33628  00826C                     l34120:
 33629                           
 33630                           ; BSR set to: 0
 33631                           ;rgl.c: 1102: else
 33632                           ;rgl.c: 1103: {
 33633                           ;rgl.c: 1104: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
 33634  00826C  502E               	movf	_rgl+7,w,c
 33635  00826E  D849               	call	PL162	;call to abstracted procedure
 33636  008270  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 33637  008272  D83C               	call	PL66	;call to abstracted procedure
 33638  008274  E2F8               	bc	l34118
 33639                           
 33640                           ; BSR set to: 0
 33641  008276  C0B1  F02E         	movff	_PWM+30,_rgl+7	;volatile
 33642  00827A                     l34126:
 33643                           
 33644                           ;rgl.c: 1106: }
 33645                           ;rgl.c: 1107: }
 33646                           ;rgl.c: 1108: if(Trosnie(3)&&!rgl.fast_up)
 33647  00827A  0E03               	movlw	3
 33648  00827C  EC5F  F059         	call	_Trosnie
 33649  008280  B0D8               	btfsc	status,0,c
 33650  008282  B827               	btfsc	_rgl,4,c
 33651  008284  D017               	goto	l3118
 33652                           
 33653                           ;rgl.c: 1109: {
 33654                           ;rgl.c: 1110: rgl.fast_up=1;
 33655  008286  8827               	bsf	_rgl,4,c
 33656                           
 33657                           ;rgl.c: 1112: if(PWM.MMAXCW>PWM.MGMOD)
 33658  008288  0100               	movlb	0	; () banked
 33659  00828A  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 33660  00828C  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 33661  00828E  D00B               	goto	l34140
 33662                           
 33663                           ; BSR set to: 0
 33664                           ;rgl.c: 1113: {
 33665                           ;rgl.c: 1114: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
 33666  008290  502E               	movf	_rgl+7,w,c
 33667  008292  D83E               	call	PL210	;call to abstracted procedure
 33668  008294  519D               	movf	(_PWM+10)& (0+255),w,b	;volatile
 33669  008296  D82A               	call	PL66	;call to abstracted procedure
 33670  008298  E203               	bc	l34138
 33671                           
 33672                           ; BSR set to: 0
 33673  00829A  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 33674  00829E  D00A               	goto	l3118
 33675  0082A0                     l34138:
 33676                           
 33677                           ; BSR set to: 0
 33678                           ;rgl.c: 1115: else rgl.srp+=k;
 33679  0082A0  0E08               	movlw	8
 33680  0082A2  262E               	addwf	_rgl+7,f,c
 33681  0082A4  D007               	goto	l3118
 33682  0082A6                     l34140:
 33683                           
 33684                           ; BSR set to: 0
 33685                           ;rgl.c: 1117: else
 33686                           ;rgl.c: 1118: {
 33687                           ;rgl.c: 1119: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
 33688  0082A6  502E               	movf	_rgl+7,w,c
 33689  0082A8  D833               	call	PL210	;call to abstracted procedure
 33690  0082AA  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 33691  0082AC  D81F               	call	PL66	;call to abstracted procedure
 33692  0082AE  E2F8               	bc	l34138
 33693                           
 33694                           ; BSR set to: 0
 33695  0082B0  C0B1  F02E         	movff	_PWM+30,_rgl+7	;volatile
 33696  0082B4                     l3118:
 33697                           
 33698                           ;rgl.c: 1121: }
 33699                           ;rgl.c: 1122: }
 33700                           ;rgl.c: 1125: if(rgl.tmp_pwm>=pwm_kwr)
 33701  0082B4  0100               	movlb	0	; () banked
 33702  0082B6  51E3               	movf	_pwm_kwr& (0+255),w,b
 33703  0082B8  5C30               	subwf	_rgl+9,w,c
 33704  0082BA  E304               	bnc	l34150
 33705                           
 33706                           ; BSR set to: 0
 33707                           ;rgl.c: 1126: {
 33708                           ;rgl.c: 1127: if(Trosnie(2)) return;
 33709  0082BC  0E02               	movlw	2
 33710  0082BE  EC5F  F059         	call	_Trosnie
 33711  0082C2  D003               	goto	L66
 33712  0082C4                     l34150:
 33713                           
 33714                           ; BSR set to: 0
 33715                           ;rgl.c: 1129: else
 33716                           ;rgl.c: 1130: {
 33717                           ;rgl.c: 1131: if(Trosnie(1)) return;
 33718  0082C4  0E01               	movlw	1
 33719  0082C6  EC5F  F059         	call	_Trosnie
 33720  0082CA                     L66:
 33721  0082CA  B0D8               	btfsc	status,0,c
 33722  0082CC  0012               	return	
 33723                           
 33724                           ; BSR set to: 0
 33725                           ;rgl.c: 1134: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
 33726                           
 33727                           ; BSR set to: 0
 33728  0082CE  502F               	movf	_rgl+8,w,c
 33729  0082D0  D818               	call	PL162	;call to abstracted procedure
 33730  0082D2  5020               	movf	??_IncMaxCW+1,w,c
 33731  0082D4  0A80               	xorlw	128
 33732  0082D6  0F80               	addlw	-128
 33733  0082D8  0EF1               	movlw	241
 33734  0082DA  B4D8               	btfsc	status,2,c
 33735  0082DC  5C1F               	subwf	??_IncMaxCW,w,c
 33736  0082DE  E303               	bnc	l34160
 33737                           
 33738                           ; BSR set to: 0
 33739  0082E0  0EF0               	movlw	240
 33740  0082E2  6E2F               	movwf	_rgl+8,c
 33741  0082E4  D7A7               	goto	l34102
 33742  0082E6                     l34160:
 33743                           
 33744                           ; BSR set to: 0
 33745                           ;rgl.c: 1135: else rgl.xmod+=k;
 33746  0082E6  0E05               	movlw	5
 33747  0082E8  262F               	addwf	_rgl+8,f,c
 33748  0082EA  D7A4               	goto	l34102
 33749  0082EC                     __end_of_IncMaxCW:
 33750                           	opt stack 0
 33751  0082EC                     PL66:
 33752                           	opt stack 24
 33753  0082EC  6E21               	movwf	(??_IncMaxCW+2)& (0+255),c
 33754  0082EE  6A22               	clrf	(??_IncMaxCW+3)& (0+255),c
 33755  0082F0  5022               	movf	??_IncMaxCW+3,w,c
 33756  0082F2  0A80               	xorlw	128
 33757  0082F4  6E23               	movwf	(??_IncMaxCW+4)& (0+255),c
 33758  0082F6  501F               	movf	??_IncMaxCW,w,c
 33759  0082F8  5C21               	subwf	??_IncMaxCW+2,w,c
 33760  0082FA  5020               	movf	??_IncMaxCW+1,w,c
 33761  0082FC  0A80               	xorlw	128
 33762  0082FE  5823               	subwfb	(??_IncMaxCW+4)& (0+255),w,c
 33763  008300  0012               	return	
 33764  008302                     __end_ofPL66:
 33765                           	opt stack 0
 33766  008302                     PL162:
 33767                           	opt stack 24
 33768  008302  6E1F               	movwf	??_IncMaxCW& (0+255),c
 33769  008304  6A20               	clrf	(??_IncMaxCW+1)& (0+255),c
 33770  008306  0E05               	movlw	5
 33771  008308  261F               	addwf	??_IncMaxCW,f,c
 33772  00830A  0E00               	movlw	0
 33773  00830C  2220               	addwfc	??_IncMaxCW+1,f,c
 33774  00830E  0C00               	retlw	0
 33775  008310                     __end_ofPL162:
 33776                           	opt stack 0
 33777  008310                     PL210:
 33778                           	opt stack 24
 33779  008310  6E1F               	movwf	??_IncMaxCW& (0+255),c
 33780  008312  6A20               	clrf	(??_IncMaxCW+1)& (0+255),c
 33781  008314  0E08               	movlw	8
 33782  008316  261F               	addwf	??_IncMaxCW,f,c
 33783  008318  0E00               	movlw	0
 33784  00831A  2220               	addwfc	??_IncMaxCW+1,f,c
 33785  00831C  0C00               	retlw	0
 33786  00831E                     __end_ofPL210:
 33787                           	opt stack 0
 33788                           tblptru	equ	0xFF8
 33789                           tblptrh	equ	0xFF7
 33790                           tblptrl	equ	0xFF6
 33791                           tablat	equ	0xFF5
 33792                           prodh	equ	0xFF4
 33793                           prodl	equ	0xFF3
 33794                           intcon	equ	0xFF2
 33795                           postinc0	equ	0xFEE
 33796                           wreg	equ	0xFE8
 33797                           indf1	equ	0xFE7
 33798                           postinc1	equ	0xFE6
 33799                           postdec1	equ	0xFE5
 33800                           fsr1h	equ	0xFE2
 33801                           fsr1l	equ	0xFE1
 33802                           indf2	equ	0xFDF
 33803                           postinc2	equ	0xFDE
 33804                           postdec2	equ	0xFDD
 33805                           fsr2h	equ	0xFDA
 33806                           fsr2l	equ	0xFD9
 33807                           status	equ	0xFD8
 33808                           
 33809 ;; *************** function _ModPruCW *****************
 33810 ;; Defined at:
 33811 ;;		line 855 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 33812 ;; Parameters:    Size  Location     Type
 33813 ;;		None
 33814 ;; Auto vars:     Size  Location     Type
 33815 ;;  k               1    1[BANK0 ] char 
 33816 ;;  tmp             1    0[BANK0 ] unsigned char 
 33817 ;; Return value:  Size  Location     Type
 33818 ;;		None               void
 33819 ;; Registers used:
 33820 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 33821 ;; Tracked objects:
 33822 ;;		On entry : F/0
 33823 ;;		On exit  : F/0
 33824 ;;		Unchanged: FFFFFFF0/0
 33825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33828 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33829 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33830 ;;Total ram usage:        7 bytes
 33831 ;; Hardware stack levels used:    1
 33832 ;; Hardware stack levels required when called:    5
 33833 ;; This function calls:
 33834 ;;		_Tnizsza
 33835 ;;		_Tstoi
 33836 ;;		_Trosnie
 33837 ;;		_Twyzsza
 33838 ;;		_Tmaleje
 33839 ;; This function is called by:
 33840 ;;		_Moduluj
 33841 ;; This function uses a non-reentrant model
 33842 ;;
 33843                           
 33844                           	psect	text148
 33845  002B0E                     __ptext148:
 33846                           	opt stack 0
 33847  002B0E                     _ModPruCW:
 33848                           	opt stack 24
 33849                           
 33850                           ; BSR set to: 0
 33851                           ;rgl.c: 856: static unsigned char l,m,o,p,q,r,s;
 33852                           ;rgl.c: 857: unsigned char tmp;
 33853                           ;rgl.c: 858: signed char k;
 33854                           ;rgl.c: 860: if(!rgl.fz)
 33855                           
 33856                           ; BSR set to: 0
 33857  002B0E  B427               	btfsc	_rgl,2,c
 33858  002B10  D0BC               	goto	l3026
 33859                           
 33860                           ; BSR set to: 0
 33861                           ;rgl.c: 861: {
 33862                           ;rgl.c: 862: l=0;
 33863  002B12  0101               	movlb	1	; () banked
 33864  002B14  6BA3               	clrf	ModPruCW@l& (0+255),b
 33865                           
 33866                           ;rgl.c: 863: m=0;
 33867  002B16  6BA4               	clrf	ModPruCW@m& (0+255),b
 33868                           
 33869                           ;rgl.c: 864: o=0;
 33870  002B18  6BA5               	clrf	ModPruCW@o& (0+255),b
 33871                           
 33872                           ;rgl.c: 865: p=0;
 33873  002B1A  6BA6               	clrf	ModPruCW@p& (0+255),b
 33874                           
 33875                           ; BSR set to: 1
 33876                           ;rgl.c: 866: if(q<255) q++;
 33877  002B1C  29A7               	incf	ModPruCW@q& (0+255),w,b
 33878  002B1E  A4D8               	btfss	status,2,c
 33879                           
 33880                           ; BSR set to: 1
 33881  002B20  2BA7               	incf	ModPruCW@q& (0+255),f,b
 33882                           
 33883                           ; BSR set to: 1
 33884                           ;rgl.c: 867: if(s<255) s++;
 33885  002B22  283B               	incf	ModPruCW@s,w,c
 33886  002B24  A4D8               	btfss	status,2,c
 33887                           
 33888                           ; BSR set to: 1
 33889  002B26  2A3B               	incf	ModPruCW@s,f,c
 33890                           
 33891                           ; BSR set to: 1
 33892                           ;rgl.c: 868: if(DtCW._newPCW) s=0;
 33893  002B28  0100               	movlb	0	; () banked
 33894  002B2A  B1D0               	btfsc	(_DtCW+1)& (0+255),0,b
 33895                           
 33896                           ; BSR set to: 0
 33897  002B2C  6A3B               	clrf	ModPruCW@s,c
 33898                           
 33899                           ; BSR set to: 0
 33900                           ;rgl.c: 869: if(Tnizsza(0))
 33901  002B2E  0E00               	movlw	0
 33902  002B30  EC8F  F059         	call	_Tnizsza
 33903  002B34  A0D8               	btfss	status,0,c
 33904  002B36  0012               	return	
 33905                           
 33906                           ; BSR set to: 0
 33907                           ;rgl.c: 870: {
 33908                           ;rgl.c: 871: if(!Tnizsza(10))
 33909  002B38  0E0A               	movlw	10
 33910  002B3A  EC8F  F059         	call	_Tnizsza
 33911  002B3E  B0D8               	btfsc	status,0,c
 33912  002B40  0012               	return	
 33913                           
 33914                           ; BSR set to: 0
 33915                           ;rgl.c: 872: {
 33916                           ;rgl.c: 873: k=0;
 33917  002B42  6BF4               	clrf	ModPruCW@k& (0+255),b
 33918                           
 33919                           ; BSR set to: 0
 33920                           ;rgl.c: 874: if(rgl.tmp_pwm>=pwm_center)
 33921  002B44  0101               	movlb	1	; () banked
 33922  002B46  51B8               	movf	_pwm_center& (0+255),w,b
 33923  002B48  5C30               	subwf	_rgl+9,w,c
 33924  002B4A  E32D               	bnc	l34228
 33925                           
 33926                           ; BSR set to: 1
 33927                           ;rgl.c: 875: {
 33928                           ;rgl.c: 876: if(Tnizsza(5)&&Tstoi()&&s>=1)
 33929  002B4C  0E05               	movlw	5
 33930  002B4E  EC8F  F059         	call	_Tnizsza
 33931  002B52  E308               	bnc	l34200
 33932                           
 33933                           ; BSR set to: 1
 33934  002B54  ECD7  F05A         	call	_Tstoi	;wreg free
 33935  002B58  E305               	bnc	l34200
 33936                           
 33937                           ; BSR set to: 1
 33938  002B5A  503B               	movf	ModPruCW@s,w,c
 33939  002B5C  E003               	bz	l34200
 33940                           
 33941                           ; BSR set to: 1
 33942                           ;rgl.c: 877: {
 33943                           ;rgl.c: 878: s=0;
 33944  002B5E  6A3B               	clrf	ModPruCW@s,c
 33945                           
 33946                           ; BSR set to: 1
 33947                           ;rgl.c: 879: k=20;
 33948  002B60  0E14               	movlw	20
 33949  002B62  D01F               	goto	L69
 33950  002B64                     l34200:
 33951                           
 33952                           ; BSR set to: 1
 33953                           ;rgl.c: 881: else
 33954                           ;rgl.c: 882: if(Tnizsza(4)&&Tstoi()&&s>=1)
 33955  002B64  0E04               	movlw	4
 33956  002B66  EC8F  F059         	call	_Tnizsza
 33957  002B6A  E308               	bnc	l34210
 33958                           
 33959                           ; BSR set to: 1
 33960  002B6C  ECD7  F05A         	call	_Tstoi	;wreg free
 33961  002B70  E305               	bnc	l34210
 33962                           
 33963                           ; BSR set to: 1
 33964  002B72  503B               	movf	ModPruCW@s,w,c
 33965  002B74  E003               	bz	l34210
 33966                           
 33967                           ; BSR set to: 1
 33968                           ;rgl.c: 883: {
 33969                           ;rgl.c: 884: s=0;
 33970  002B76  6A3B               	clrf	ModPruCW@s,c
 33971                           
 33972                           ; BSR set to: 1
 33973                           ;rgl.c: 885: k=15;
 33974  002B78  0E0F               	movlw	15
 33975  002B7A  D013               	goto	L69
 33976  002B7C                     l34210:
 33977                           
 33978                           ; BSR set to: 1
 33979                           ;rgl.c: 887: else
 33980                           ;rgl.c: 888: if(Tnizsza(2)&&Tstoi()&&s>=1)
 33981  002B7C  0E02               	movlw	2
 33982  002B7E  EC8F  F059         	call	_Tnizsza
 33983  002B82  E308               	bnc	l34220
 33984                           
 33985                           ; BSR set to: 1
 33986  002B84  ECD7  F05A         	call	_Tstoi	;wreg free
 33987  002B88  E305               	bnc	l34220
 33988                           
 33989                           ; BSR set to: 1
 33990  002B8A  503B               	movf	ModPruCW@s,w,c
 33991  002B8C  E003               	bz	l34220
 33992  002B8E                     l34216:
 33993                           
 33994                           ;rgl.c: 889: {
 33995                           ;rgl.c: 890: s=0;
 33996  002B8E  6A3B               	clrf	ModPruCW@s,c
 33997                           
 33998                           ;rgl.c: 891: k=10;
 33999  002B90  0E0A               	movlw	10
 34000  002B92  D007               	goto	L69
 34001  002B94                     l34220:
 34002                           
 34003                           ; BSR set to: 1
 34004                           ;rgl.c: 893: else
 34005                           ;rgl.c: 894: if(Tstoi()&&s>=1)
 34006  002B94  ECD7  F05A         	call	_Tstoi	;wreg free
 34007  002B98  E33F               	bnc	l34286
 34008                           
 34009                           ; BSR set to: 1
 34010  002B9A  503B               	movf	ModPruCW@s,w,c
 34011  002B9C  E03D               	bz	l34286
 34012  002B9E                     l34224:
 34013                           
 34014                           ;rgl.c: 895: {
 34015                           ;rgl.c: 896: s=0;
 34016  002B9E  6A3B               	clrf	ModPruCW@s,c
 34017                           
 34018                           ;rgl.c: 897: k=5;
 34019  002BA0  0E05               	movlw	5
 34020  002BA2                     L69:
 34021  002BA2  0100               	movlb	0	; () banked
 34022  002BA4  D029               	goto	L71
 34023  002BA6                     l34228:
 34024                           
 34025                           ; BSR set to: 1
 34026                           ;rgl.c: 900: else
 34027                           ;rgl.c: 901: {
 34028                           ;rgl.c: 902: if(rgl.tmp_pwm>=pwm_kwr)
 34029  002BA6  0100               	movlb	0	; () banked
 34030  002BA8  51E3               	movf	_pwm_kwr& (0+255),w,b
 34031  002BAA  5C30               	subwf	_rgl+9,w,c
 34032  002BAC  E327               	bnc	l34268
 34033                           
 34034                           ; BSR set to: 0
 34035                           ;rgl.c: 903: {
 34036                           ;rgl.c: 904: if(Tnizsza(5)&&Tstoi()&&s>=1)
 34037  002BAE  0E05               	movlw	5
 34038  002BB0  EC8F  F059         	call	_Tnizsza
 34039  002BB4  E305               	bnc	l34240
 34040                           
 34041                           ; BSR set to: 0
 34042  002BB6  ECD7  F05A         	call	_Tstoi	;wreg free
 34043  002BBA  E302               	bnc	l34240
 34044                           
 34045                           ; BSR set to: 0
 34046  002BBC  503B               	movf	ModPruCW@s,w,c
 34047  002BBE  E1E7               	bnz	l34216
 34048  002BC0                     l34240:
 34049                           
 34050                           ; BSR set to: 0
 34051                           ;rgl.c: 909: else
 34052                           ;rgl.c: 910: if(Tnizsza(4)&&Tstoi()&&s>=1)
 34053  002BC0  0E04               	movlw	4
 34054  002BC2  EC8F  F059         	call	_Tnizsza
 34055  002BC6  E308               	bnc	l34250
 34056                           
 34057                           ; BSR set to: 0
 34058  002BC8  ECD7  F05A         	call	_Tstoi	;wreg free
 34059  002BCC  E305               	bnc	l34250
 34060                           
 34061                           ; BSR set to: 0
 34062  002BCE  503B               	movf	ModPruCW@s,w,c
 34063  002BD0  E003               	bz	l34250
 34064                           
 34065                           ; BSR set to: 0
 34066                           ;rgl.c: 911: {
 34067                           ;rgl.c: 912: s=0;
 34068  002BD2  6A3B               	clrf	ModPruCW@s,c
 34069                           
 34070                           ; BSR set to: 0
 34071                           ;rgl.c: 913: k=8;
 34072  002BD4  0E08               	movlw	8
 34073  002BD6  D010               	goto	L71
 34074  002BD8                     l34250:
 34075                           
 34076                           ; BSR set to: 0
 34077                           ;rgl.c: 915: else
 34078                           ;rgl.c: 916: if(Tnizsza(2)&&Tstoi()&&s>=1)
 34079  002BD8  0E02               	movlw	2
 34080  002BDA  EC8F  F059         	call	_Tnizsza
 34081  002BDE  E305               	bnc	l34260
 34082                           
 34083                           ; BSR set to: 0
 34084  002BE0  ECD7  F05A         	call	_Tstoi	;wreg free
 34085  002BE4  E302               	bnc	l34260
 34086                           
 34087                           ; BSR set to: 0
 34088  002BE6  503B               	movf	ModPruCW@s,w,c
 34089  002BE8  E1DA               	bnz	l34224
 34090  002BEA                     l34260:
 34091                           
 34092                           ; BSR set to: 0
 34093                           ;rgl.c: 921: else
 34094                           ;rgl.c: 922: if(Tstoi()&&s>=1)
 34095  002BEA  ECD7  F05A         	call	_Tstoi	;wreg free
 34096  002BEE  E314               	bnc	l34286
 34097                           
 34098                           ; BSR set to: 0
 34099  002BF0  503B               	movf	ModPruCW@s,w,c
 34100  002BF2  E012               	bz	l34286
 34101  002BF4                     l34264:
 34102                           
 34103                           ; BSR set to: 0
 34104                           ;rgl.c: 923: {
 34105                           ;rgl.c: 924: s=0;
 34106  002BF4  6A3B               	clrf	ModPruCW@s,c
 34107                           
 34108                           ; BSR set to: 0
 34109                           ;rgl.c: 925: k=2;
 34110  002BF6  0E02               	movlw	2
 34111  002BF8                     L71:
 34112  002BF8  6FF4               	movwf	ModPruCW@k& (0+255),b
 34113  002BFA  D00E               	goto	l34286
 34114  002BFC                     l34268:
 34115                           
 34116                           ; BSR set to: 0
 34117                           ;rgl.c: 928: else
 34118                           ;rgl.c: 929: {
 34119                           ;rgl.c: 930: if(Tnizsza(2)&&Tstoi()&&s>=1)
 34120  002BFC  0E02               	movlw	2
 34121  002BFE  EC8F  F059         	call	_Tnizsza
 34122  002C02  E305               	bnc	l34278
 34123                           
 34124                           ; BSR set to: 0
 34125  002C04  ECD7  F05A         	call	_Tstoi	;wreg free
 34126  002C08  E302               	bnc	l34278
 34127                           
 34128                           ; BSR set to: 0
 34129  002C0A  503B               	movf	ModPruCW@s,w,c
 34130  002C0C  E1C8               	bnz	l34224
 34131  002C0E                     l34278:
 34132                           
 34133                           ; BSR set to: 0
 34134                           ;rgl.c: 935: else
 34135                           ;rgl.c: 936: if(Tstoi()&&s>=1)
 34136  002C0E  ECD7  F05A         	call	_Tstoi	;wreg free
 34137  002C12  E302               	bnc	l34286
 34138                           
 34139                           ; BSR set to: 0
 34140  002C14  503B               	movf	ModPruCW@s,w,c
 34141  002C16  E1EE               	bnz	l34264
 34142  002C18                     l34286:
 34143                           
 34144                           ;rgl.c: 940: }
 34145                           ;rgl.c: 941: }
 34146                           ;rgl.c: 942: }
 34147                           ;rgl.c: 943: if(rgl.tmp_pwm>=pwm_kwr)
 34148  002C18  0100               	movlb	0	; () banked
 34149  002C1A  51E3               	movf	_pwm_kwr& (0+255),w,b
 34150  002C1C  5C30               	subwf	_rgl+9,w,c
 34151  002C1E  E311               	bnc	l34300
 34152                           
 34153                           ; BSR set to: 0
 34154                           ;rgl.c: 944: {
 34155                           ;rgl.c: 945: if(Trosnie(1)&&s>=1)
 34156  002C20  0E01               	movlw	1
 34157  002C22  EC5F  F059         	call	_Trosnie
 34158  002C26  E30C               	bnc	l3054
 34159                           
 34160                           ; BSR set to: 0
 34161  002C28  503B               	movf	ModPruCW@s,w,c
 34162  002C2A  E00A               	bz	l3054
 34163                           
 34164                           ; BSR set to: 0
 34165                           ;rgl.c: 946: {
 34166                           ;rgl.c: 947: s=0;
 34167  002C2C  6A3B               	clrf	ModPruCW@s,c
 34168                           
 34169                           ; BSR set to: 0
 34170                           ;rgl.c: 948: k=10;
 34171  002C2E  0E0A               	movlw	10
 34172  002C30  6FF4               	movwf	ModPruCW@k& (0+255),b
 34173                           
 34174                           ; BSR set to: 0
 34175                           ;rgl.c: 949: if(Trosnie(2)) k=8;
 34176  002C32  0E02               	movlw	2
 34177  002C34  EC5F  F059         	call	_Trosnie
 34178  002C38  E304               	bnc	l34300
 34179                           
 34180                           ; BSR set to: 0
 34181  002C3A  0E08               	movlw	8
 34182  002C3C  6FF4               	movwf	ModPruCW@k& (0+255),b
 34183  002C3E  D001               	goto	l34300
 34184  002C40                     l3054:
 34185                           
 34186                           ; BSR set to: 0
 34187                           ;rgl.c: 951: else
 34188                           ;rgl.c: 952: rgl.ytmp=0;
 34189  002C40  6A2D               	clrf	_rgl+6,c
 34190  002C42                     l34300:
 34191                           
 34192                           ; BSR set to: 0
 34193                           ;rgl.c: 953: }
 34194                           ;rgl.c: 954: if(PWM.BufPWM>rgl.xmod) return;
 34195  002C42  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 34196  002C44  602F               	cpfslt	_rgl+8,c
 34197  002C46  D001               	goto	l34304
 34198  002C48  0012               	return	
 34199  002C4A                     l34304:
 34200                           
 34201                           ; BSR set to: 0
 34202                           ;rgl.c: 955: tmp=rgl.xmod-PWM.BufPWM;
 34203  002C4A  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 34204  002C4C  5C2F               	subwf	_rgl+8,w,c
 34205  002C4E  6FF3               	movwf	ModPruCW@tmp& (0+255),b
 34206                           
 34207                           ;rgl.c: 956: if(k>tmp) k=tmp;
 34208  002C50  51F3               	movf	ModPruCW@tmp& (0+255),w,b
 34209  002C52  80D8               	bsf	status,0,c
 34210  002C54  84D8               	bsf	status,2,c
 34211  002C56  AFF4               	btfss	ModPruCW@k& (0+255),7,b
 34212  002C58  5DF4               	subwf	ModPruCW@k& (0+255),w,b
 34213  002C5A  A0D8               	btfss	status,0,c
 34214  002C5C  84D8               	bsf	status,2,c
 34215  002C5E  A4D8               	btfss	status,2,c
 34216                           
 34217                           ; BSR set to: 0
 34218  002C60  C0F3  F0F4         	movff	ModPruCW@tmp,ModPruCW@k
 34219                           
 34220                           ; BSR set to: 0
 34221                           ;rgl.c: 957: if(PWM.MMAXCW>PWM.MGMOD)
 34222  002C64  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 34223  002C66  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 34224  002C68  D00A               	goto	l34316
 34225                           
 34226                           ; BSR set to: 0
 34227                           ;rgl.c: 958: {
 34228                           ;rgl.c: 959: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
 34229  002C6A  502E               	movf	_rgl+7,w,c
 34230  002C6C  D8C7               	call	PL94	;call to abstracted procedure
 34231  002C6E  D8B0               	call	PL68	;call to abstracted procedure
 34232  002C70  E203               	bc	l34314
 34233                           
 34234                           ; BSR set to: 0
 34235  002C72  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 34236  002C76  0012               	return	
 34237  002C78                     l34314:
 34238                           
 34239                           ; BSR set to: 0
 34240                           ;rgl.c: 960: else rgl.srp+=k;
 34241  002C78  51F4               	movf	ModPruCW@k& (0+255),w,b
 34242  002C7A  262E               	addwf	_rgl+7,f,c
 34243  002C7C  0012               	return	
 34244  002C7E                     l34316:
 34245                           
 34246                           ; BSR set to: 0
 34247                           ;rgl.c: 962: else
 34248                           ;rgl.c: 963: {
 34249                           ;rgl.c: 964: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
 34250  002C7E  D8B3               	call	PL84	;call to abstracted procedure
 34251  002C80  D8A7               	call	PL68	;call to abstracted procedure
 34252  002C82  E2FA               	bc	l34314
 34253                           
 34254                           ; BSR set to: 0
 34255  002C84  C0B1  F02E         	movff	_PWM+30,_rgl+7	;volatile
 34256  002C88  0012               	return	
 34257  002C8A                     l3026:
 34258                           
 34259                           ; BSR set to: 0
 34260                           ;rgl.c: 976: r=0;
 34261  002C8A  0101               	movlb	1	; () banked
 34262  002C8C  6BA7               	clrf	ModPruCW@q& (0+255),b
 34263                           
 34264                           ;rgl.c: 977: s=0;
 34265  002C8E  6A3B               	clrf	ModPruCW@s,c
 34266                           
 34267                           ; BSR set to: 1
 34268                           ;rgl.c: 978: if(m<255) m++;
 34269  002C90  29A4               	incf	ModPruCW@m& (0+255),w,b
 34270  002C92  A4D8               	btfss	status,2,c
 34271                           
 34272                           ; BSR set to: 1
 34273  002C94  2BA4               	incf	ModPruCW@m& (0+255),f,b
 34274                           
 34275                           ; BSR set to: 1
 34276                           ;rgl.c: 979: if(p<255) p++;
 34277  002C96  29A6               	incf	ModPruCW@p& (0+255),w,b
 34278  002C98  A4D8               	btfss	status,2,c
 34279                           
 34280                           ; BSR set to: 1
 34281  002C9A  2BA6               	incf	ModPruCW@p& (0+255),f,b
 34282                           
 34283                           ; BSR set to: 1
 34284                           ;rgl.c: 980: if(o<255) o++;
 34285  002C9C  29A5               	incf	ModPruCW@o& (0+255),w,b
 34286  002C9E  A4D8               	btfss	status,2,c
 34287                           
 34288                           ; BSR set to: 1
 34289  002CA0  2BA5               	incf	ModPruCW@o& (0+255),f,b
 34290                           
 34291                           ; BSR set to: 1
 34292                           ;rgl.c: 981: if(DtCW.DAD_CW>DtCW.AC_CW)
 34293  002CA2  0100               	movlb	0	; () banked
 34294  002CA4  51DD               	movf	(_DtCW+14)& (0+255),w,b
 34295  002CA6  61DB               	cpfslt	(_DtCW+12)& (0+255),b
 34296  002CA8  D05A               	goto	l3072
 34297                           
 34298                           ; BSR set to: 0
 34299                           ;rgl.c: 982: {
 34300                           ;rgl.c: 983: k=0;
 34301  002CAA  6BF4               	clrf	ModPruCW@k& (0+255),b
 34302                           
 34303                           ; BSR set to: 0
 34304                           ;rgl.c: 984: if(Trosnie(0)&&m>=2)
 34305  002CAC  0E00               	movlw	0
 34306  002CAE  EC5F  F059         	call	_Trosnie
 34307  002CB2  E30C               	bnc	l34350
 34308                           
 34309                           ; BSR set to: 0
 34310  002CB4  0E01               	movlw	1
 34311  002CB6  0101               	movlb	1	; () banked
 34312  002CB8  65A4               	cpfsgt	ModPruCW@m& (0+255),b
 34313  002CBA  D008               	goto	l34350
 34314                           
 34315                           ; BSR set to: 1
 34316                           ;rgl.c: 985: {
 34317                           ;rgl.c: 986: p=0;
 34318  002CBC  6BA6               	clrf	ModPruCW@p& (0+255),b
 34319                           
 34320                           ;rgl.c: 987: o=0;
 34321  002CBE  6BA5               	clrf	ModPruCW@o& (0+255),b
 34322                           
 34323                           ;rgl.c: 988: l=0;
 34324  002CC0  6BA3               	clrf	ModPruCW@l& (0+255),b
 34325                           
 34326                           ;rgl.c: 989: m=0;
 34327  002CC2  6BA4               	clrf	ModPruCW@m& (0+255),b
 34328                           
 34329                           ; BSR set to: 1
 34330                           ;rgl.c: 990: k=2;
 34331  002CC4  0E02               	movlw	2
 34332  002CC6  0100               	movlb	0	; () banked
 34333  002CC8  6FF4               	movwf	ModPruCW@k& (0+255),b
 34334                           
 34335                           ;rgl.c: 991: }
 34336  002CCA  D01A               	goto	l34366
 34337  002CCC                     l34350:
 34338                           
 34339                           ;rgl.c: 992: else
 34340                           ;rgl.c: 993: if(Twyzsza(1))
 34341  002CCC  0E01               	movlw	1
 34342  002CCE  EC34  F055         	call	_Twyzsza
 34343  002CD2  E30F               	bnc	l34362
 34344                           
 34345                           ;rgl.c: 994: {
 34346                           ;rgl.c: 995: if(Tstoi())
 34347  002CD4  ECD7  F05A         	call	_Tstoi	;wreg free
 34348  002CD8  E313               	bnc	l34366
 34349                           
 34350                           ;rgl.c: 996: {
 34351                           ;rgl.c: 997: if(l>=2)
 34352  002CDA  0E01               	movlw	1
 34353  002CDC  0101               	movlb	1	; () banked
 34354  002CDE  65A3               	cpfsgt	ModPruCW@l& (0+255),b
 34355  002CE0  D00B               	goto	l3077
 34356                           
 34357                           ; BSR set to: 1
 34358                           ;rgl.c: 998: {
 34359                           ;rgl.c: 999: k=1;
 34360  002CE2  0100               	movlb	0	; () banked
 34361  002CE4  6FF4               	movwf	ModPruCW@k& (0+255),b
 34362                           
 34363                           ; BSR set to: 0
 34364                           ;rgl.c: 1000: if(Twyzsza(3)) k=2;
 34365  002CE6  0E03               	movlw	3
 34366  002CE8  EC34  F055         	call	_Twyzsza
 34367  002CEC  E302               	bnc	l34362
 34368                           
 34369                           ; BSR set to: 0
 34370  002CEE  0E02               	movlw	2
 34371  002CF0  6FF4               	movwf	ModPruCW@k& (0+255),b
 34372  002CF2                     l34362:
 34373                           
 34374                           ;rgl.c: 1001: l=0;
 34375  002CF2  0101               	movlb	1	; () banked
 34376  002CF4  6BA3               	clrf	ModPruCW@l& (0+255),b
 34377                           
 34378                           ;rgl.c: 1002: }
 34379  002CF6  D004               	goto	l34366
 34380  002CF8                     l3077:
 34381                           
 34382                           ; BSR set to: 1
 34383                           ;rgl.c: 1003: else
 34384                           ;rgl.c: 1004: {
 34385                           ;rgl.c: 1005: k=0;
 34386  002CF8  0100               	movlb	0	; () banked
 34387  002CFA  6BF4               	clrf	ModPruCW@k& (0+255),b
 34388                           
 34389                           ; BSR set to: 0
 34390                           ;rgl.c: 1006: l++;
 34391  002CFC  0101               	movlb	1	; () banked
 34392  002CFE  2BA3               	incf	ModPruCW@l& (0+255),f,b
 34393  002D00                     l34366:
 34394                           
 34395                           ;rgl.c: 1010: if(PWM.MMAXCW>PWM.MGMOD)
 34396  002D00  0100               	movlb	0	; () banked
 34397  002D02  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 34398  002D04  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 34399  002D06  D006               	goto	l34372
 34400                           
 34401                           ; BSR set to: 0
 34402                           ;rgl.c: 1011: {
 34403                           ;rgl.c: 1012: if(rgl.srp>PWM.MGMOD) rgl.srp=PWM.MGMOD;
 34404  002D08  502E               	movf	_rgl+7,w,c
 34405  002D0A  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 34406  002D0C  D008               	goto	l34376
 34407                           
 34408                           ; BSR set to: 0
 34409  002D0E  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 34410  002D12  D005               	goto	l34376
 34411  002D14                     l34372:
 34412                           
 34413                           ; BSR set to: 0
 34414                           ;rgl.c: 1014: else
 34415                           ;rgl.c: 1015: {
 34416                           ;rgl.c: 1016: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
 34417  002D14  502E               	movf	_rgl+7,w,c
 34418  002D16  61B1               	cpfslt	(_PWM+30)& (0+255),b	;volatile
 34419  002D18  D002               	goto	l34376
 34420                           
 34421                           ; BSR set to: 0
 34422  002D1A  C0B1  F02E         	movff	_PWM+30,_rgl+7	;volatile
 34423  002D1E                     l34376:
 34424                           
 34425                           ; BSR set to: 0
 34426                           ;rgl.c: 1017: }
 34427                           ;rgl.c: 1018: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM.MDMOD;
 34428  002D1E  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 34429  002D20  6E22               	movwf	??_ModPruCW& (0+255),c
 34430  002D22  6A23               	clrf	(??_ModPruCW+1)& (0+255),c
 34431  002D24  51F4               	movf	ModPruCW@k& (0+255),w,b
 34432  002D26  5C2E               	subwf	_rgl+7,w,c
 34433  002D28  6E24               	movwf	(??_ModPruCW+2)& (0+255),c
 34434  002D2A  6AE8               	clrf	wreg,c
 34435  002D2C  B0D8               	btfsc	status,0,c
 34436  002D2E  2AE8               	incf	wreg,f,c
 34437  002D30  AFF4               	btfss	ModPruCW@k& (0+255),7,b
 34438  002D32  06E8               	decf	wreg,f,c
 34439  002D34  6E25               	movwf	(??_ModPruCW+3)& (0+255),c
 34440  002D36  5025               	movf	??_ModPruCW+3,w,c
 34441  002D38  0A80               	xorlw	128
 34442  002D3A  6E26               	movwf	(??_ModPruCW+4)& (0+255),c
 34443  002D3C  5022               	movf	??_ModPruCW,w,c
 34444  002D3E  5C24               	subwf	??_ModPruCW+2,w,c
 34445  002D40  5023               	movf	??_ModPruCW+1,w,c
 34446  002D42  0A80               	xorlw	128
 34447  002D44  5826               	subwfb	(??_ModPruCW+4)& (0+255),w,c
 34448  002D46  E203               	bc	l34380
 34449                           
 34450                           ; BSR set to: 0
 34451  002D48  C09C  F02E         	movff	_PWM+9,_rgl+7	;volatile
 34452  002D4C  D002               	goto	l34382
 34453  002D4E                     l34380:
 34454                           
 34455                           ; BSR set to: 0
 34456                           ;rgl.c: 1019: else rgl.srp-=k;
 34457  002D4E  51F4               	movf	ModPruCW@k& (0+255),w,b
 34458  002D50  5E2E               	subwf	_rgl+7,f,c
 34459  002D52                     l34382:
 34460                           
 34461                           ; BSR set to: 0
 34462                           ;rgl.c: 1022: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
 34463  002D52  502E               	movf	_rgl+7,w,c
 34464  002D54  602F               	cpfslt	_rgl+8,c
 34465  002D56  0012               	return	
 34466                           
 34467                           ; BSR set to: 0
 34468  002D58  C02E  F02F         	movff	_rgl+7,_rgl+8
 34469  002D5C  0012               	return	
 34470  002D5E                     l3072:
 34471                           
 34472                           ; BSR set to: 0
 34473                           ;rgl.c: 1025: else
 34474                           ;rgl.c: 1026: {
 34475                           ;rgl.c: 1027: k=0;
 34476  002D5E  6BF4               	clrf	ModPruCW@k& (0+255),b
 34477                           
 34478                           ; BSR set to: 0
 34479                           ;rgl.c: 1028: if(Tmaleje(0)&&m>=2)
 34480  002D60  0E00               	movlw	0
 34481  002D62  EC00  F055         	call	_Tmaleje
 34482  002D66  E30C               	bnc	l34396
 34483                           
 34484                           ; BSR set to: 0
 34485  002D68  0E01               	movlw	1
 34486  002D6A  0101               	movlb	1	; () banked
 34487  002D6C  65A4               	cpfsgt	ModPruCW@m& (0+255),b
 34488  002D6E  D008               	goto	l34396
 34489                           
 34490                           ; BSR set to: 1
 34491                           ;rgl.c: 1029: {
 34492                           ;rgl.c: 1030: p=0;
 34493  002D70  6BA6               	clrf	ModPruCW@p& (0+255),b
 34494                           
 34495                           ;rgl.c: 1031: o=0;
 34496  002D72  6BA5               	clrf	ModPruCW@o& (0+255),b
 34497                           
 34498                           ;rgl.c: 1032: l=0;
 34499  002D74  6BA3               	clrf	ModPruCW@l& (0+255),b
 34500                           
 34501                           ;rgl.c: 1033: m=0;
 34502  002D76  6BA4               	clrf	ModPruCW@m& (0+255),b
 34503                           
 34504                           ; BSR set to: 1
 34505                           ;rgl.c: 1034: k=5;
 34506  002D78  0E05               	movlw	5
 34507  002D7A  0100               	movlb	0	; () banked
 34508  002D7C  6FF4               	movwf	ModPruCW@k& (0+255),b
 34509                           
 34510                           ;rgl.c: 1036: }
 34511  002D7E  D014               	goto	l34408
 34512  002D80                     l34396:
 34513                           
 34514                           ;rgl.c: 1037: else
 34515                           ;rgl.c: 1038: if(Tnizsza(1))
 34516  002D80  0E01               	movlw	1
 34517  002D82  EC8F  F059         	call	_Tnizsza
 34518  002D86  E309               	bnc	l34404
 34519                           
 34520                           ;rgl.c: 1039: {
 34521                           ;rgl.c: 1040: if(Tstoi())
 34522  002D88  ECD7  F05A         	call	_Tstoi	;wreg free
 34523  002D8C  E30D               	bnc	l34408
 34524                           
 34525                           ;rgl.c: 1041: {
 34526                           ;rgl.c: 1042: if(l>=3)
 34527  002D8E  0E02               	movlw	2
 34528  002D90  0101               	movlb	1	; () banked
 34529  002D92  65A3               	cpfsgt	ModPruCW@l& (0+255),b
 34530  002D94  D005               	goto	l3093
 34531                           
 34532                           ; BSR set to: 1
 34533                           ;rgl.c: 1043: {
 34534                           ;rgl.c: 1044: k=2;
 34535  002D96  0100               	movlb	0	; () banked
 34536  002D98  6FF4               	movwf	ModPruCW@k& (0+255),b
 34537  002D9A                     l34404:
 34538                           
 34539                           ;rgl.c: 1045: l=0;
 34540  002D9A  0101               	movlb	1	; () banked
 34541  002D9C  6BA3               	clrf	ModPruCW@l& (0+255),b
 34542                           
 34543                           ;rgl.c: 1046: }
 34544  002D9E  D004               	goto	l34408
 34545  002DA0                     l3093:
 34546                           
 34547                           ; BSR set to: 1
 34548                           ;rgl.c: 1047: else
 34549                           ;rgl.c: 1048: {
 34550                           ;rgl.c: 1049: k=0;
 34551  002DA0  0100               	movlb	0	; () banked
 34552  002DA2  6BF4               	clrf	ModPruCW@k& (0+255),b
 34553                           
 34554                           ; BSR set to: 0
 34555                           ;rgl.c: 1050: l++;
 34556  002DA4  0101               	movlb	1	; () banked
 34557  002DA6  2BA3               	incf	ModPruCW@l& (0+255),f,b
 34558  002DA8                     l34408:
 34559                           
 34560                           ;rgl.c: 1054: if(PWM.MMAXCW>PWM.MGMOD)
 34561  002DA8  0100               	movlb	0	; () banked
 34562  002DAA  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 34563  002DAC  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 34564  002DAE  D00A               	goto	l34416
 34565                           
 34566                           ; BSR set to: 0
 34567                           ;rgl.c: 1055: {
 34568                           ;rgl.c: 1056: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
 34569  002DB0  502E               	movf	_rgl+7,w,c
 34570  002DB2  D824               	call	PL94	;call to abstracted procedure
 34571  002DB4  D80D               	call	PL68	;call to abstracted procedure
 34572  002DB6  E203               	bc	l34414
 34573                           
 34574                           ; BSR set to: 0
 34575  002DB8  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 34576  002DBC  D7CA               	goto	l34382
 34577  002DBE                     l34414:
 34578                           
 34579                           ; BSR set to: 0
 34580                           ;rgl.c: 1057: else rgl.srp+=k;
 34581  002DBE  51F4               	movf	ModPruCW@k& (0+255),w,b
 34582  002DC0  262E               	addwf	_rgl+7,f,c
 34583  002DC2  D7C7               	goto	l34382
 34584  002DC4                     l34416:
 34585                           
 34586                           ; BSR set to: 0
 34587                           ;rgl.c: 1059: else
 34588                           ;rgl.c: 1060: {
 34589                           ;rgl.c: 1061: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
 34590  002DC4  D810               	call	PL84	;call to abstracted procedure
 34591  002DC6  D804               	call	PL68	;call to abstracted procedure
 34592  002DC8  E2FA               	bc	l34414
 34593                           
 34594                           ; BSR set to: 0
 34595  002DCA  C0B1  F02E         	movff	_PWM+30,_rgl+7	;volatile
 34596  002DCE  D7C1               	goto	l34382
 34597  002DD0                     __end_of_ModPruCW:
 34598                           	opt stack 0
 34599  002DD0                     PL68:
 34600                           	opt stack 24
 34601  002DD0  6E24               	movwf	(??_ModPruCW+2)& (0+255),c
 34602  002DD2  6A25               	clrf	(??_ModPruCW+3)& (0+255),c
 34603  002DD4  5025               	movf	??_ModPruCW+3,w,c
 34604  002DD6  0A80               	xorlw	128
 34605  002DD8  6E26               	movwf	(??_ModPruCW+4)& (0+255),c
 34606  002DDA  5022               	movf	??_ModPruCW,w,c
 34607  002DDC  5C24               	subwf	??_ModPruCW+2,w,c
 34608  002DDE  5023               	movf	??_ModPruCW+1,w,c
 34609  002DE0  0A80               	xorlw	128
 34610  002DE2  5826               	subwfb	(??_ModPruCW+4)& (0+255),w,c
 34611  002DE4  0012               	return	
 34612  002DE6                     __end_ofPL68:
 34613                           	opt stack 0
 34614  002DE6                     PL84:
 34615                           	opt stack 24
 34616  002DE6  502E               	movf	_rgl+7,w,c
 34617  002DE8  25F4               	addwf	ModPruCW@k& (0+255),w,b
 34618  002DEA  6E22               	movwf	??_ModPruCW& (0+255),c
 34619  002DEC  6AE8               	clrf	wreg,c
 34620  002DEE  B0D8               	btfsc	status,0,c
 34621  002DF0  2AE8               	incf	wreg,f,c
 34622  002DF2  BFF4               	btfsc	ModPruCW@k& (0+255),7,b
 34623  002DF4  06E8               	decf	wreg,f,c
 34624  002DF6  6E23               	movwf	(??_ModPruCW+1)& (0+255),c
 34625  002DF8  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 34626  002DFA  0012               	return	
 34627  002DFC                     __end_ofPL84:
 34628                           	opt stack 0
 34629  002DFC                     PL94:
 34630                           	opt stack 24
 34631  002DFC  25F4               	addwf	ModPruCW@k& (0+255),w,b
 34632  002DFE  6E22               	movwf	??_ModPruCW& (0+255),c
 34633  002E00  6AE8               	clrf	wreg,c
 34634  002E02  B0D8               	btfsc	status,0,c
 34635  002E04  2AE8               	incf	wreg,f,c
 34636  002E06  BFF4               	btfsc	ModPruCW@k& (0+255),7,b
 34637  002E08  06E8               	decf	wreg,f,c
 34638  002E0A  6E23               	movwf	(??_ModPruCW+1)& (0+255),c
 34639  002E0C  519D               	movf	(_PWM+10)& (0+255),w,b	;volatile
 34640  002E0E  0012               	return	
 34641  002E10                     __end_ofPL94:
 34642                           	opt stack 0
 34643                           tblptru	equ	0xFF8
 34644                           tblptrh	equ	0xFF7
 34645                           tblptrl	equ	0xFF6
 34646                           tablat	equ	0xFF5
 34647                           prodh	equ	0xFF4
 34648                           prodl	equ	0xFF3
 34649                           intcon	equ	0xFF2
 34650                           postinc0	equ	0xFEE
 34651                           wreg	equ	0xFE8
 34652                           indf1	equ	0xFE7
 34653                           postinc1	equ	0xFE6
 34654                           postdec1	equ	0xFE5
 34655                           fsr1h	equ	0xFE2
 34656                           fsr1l	equ	0xFE1
 34657                           indf2	equ	0xFDF
 34658                           postinc2	equ	0xFDE
 34659                           postdec2	equ	0xFDD
 34660                           fsr2h	equ	0xFDA
 34661                           fsr2l	equ	0xFD9
 34662                           status	equ	0xFD8
 34663                           
 34664 ;; *************** function _ModPrzCW *****************
 34665 ;; Defined at:
 34666 ;;		line 1168 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 34667 ;; Parameters:    Size  Location     Type
 34668 ;;		None
 34669 ;; Auto vars:     Size  Location     Type
 34670 ;;  r               2    1[BANK2 ] int 
 34671 ;;  p               1    3[BANK2 ] unsigned char 
 34672 ;;  maxmod          1    0[BANK2 ] unsigned char 
 34673 ;; Return value:  Size  Location     Type
 34674 ;;		None               void
 34675 ;; Registers used:
 34676 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 34677 ;; Tracked objects:
 34678 ;;		On entry : E/1
 34679 ;;		On exit  : C/0
 34680 ;;		Unchanged: FFFFFFF0/0
 34681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34683 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34684 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34685 ;;      Totals:         0       5       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34686 ;;Total ram usage:        9 bytes
 34687 ;; Hardware stack levels used:    1
 34688 ;; Hardware stack levels required when called:    5
 34689 ;; This function calls:
 34690 ;;		_Tnizsza
 34691 ;;		___awdiv
 34692 ;;		_Tmaleje
 34693 ;;		_Twyzsza
 34694 ;; This function is called by:
 34695 ;;		_Moduluj
 34696 ;; This function uses a non-reentrant model
 34697 ;;
 34698                           
 34699                           	psect	text149
 34700  004122                     __ptext149:
 34701                           	opt stack 0
 34702  004122                     _ModPrzCW:
 34703                           	opt stack 24
 34704                           
 34705                           ;rgl.c: 1169: unsigned char p,maxmod;
 34706                           ;rgl.c: 1170: signed int r;
 34707                           ;rgl.c: 1171: static unsigned char timer1;
 34708                           ;rgl.c: 1174: if(Tnizsza(0))
 34709                           
 34710                           ; BSR set to: 0
 34711  004122  0E00               	movlw	0
 34712  004124  EC8F  F059         	call	_Tnizsza
 34713  004128  E201 D0F7          	bnc	l3136
 34714                           
 34715                           ;rgl.c: 1175: {
 34716                           ;rgl.c: 1176: if(PWM.MMAXCW<PWM.MGMOD) maxmod=PWM.MMAXCW;
 34717  00412C  0100               	movlb	0	; () banked
 34718  00412E  519D               	movf	(_PWM+10)& (0+255),w,b	;volatile
 34719  004130  61B1               	cpfslt	(_PWM+30)& (0+255),b	;volatile
 34720  004132  D003               	goto	l3137
 34721                           
 34722                           ; BSR set to: 0
 34723  004134  C0B1  F2F0         	movff	_PWM+30,ModPrzCW@maxmod	;volatile
 34724  004138  D002               	goto	l34432
 34725  00413A                     l3137:
 34726                           
 34727                           ; BSR set to: 0
 34728                           ;rgl.c: 1177: else maxmod=PWM.MGMOD;
 34729  00413A  C09D  F2F0         	movff	_PWM+10,ModPrzCW@maxmod	;volatile
 34730  00413E                     l34432:
 34731                           
 34732                           ; BSR set to: 0
 34733                           ;rgl.c: 1180: if(rgl.tmp_pwm>=pwm_center)
 34734  00413E  0101               	movlb	1	; () banked
 34735  004140  51B8               	movf	_pwm_center& (0+255),w,b
 34736  004142  5C30               	subwf	_rgl+9,w,c
 34737  004144  E201 D094          	bnc	l34474
 34738                           
 34739                           ; BSR set to: 1
 34740                           ;rgl.c: 1181: {
 34741                           ;rgl.c: 1182: if(rgl.xmod<=maxmod) p=rgl.xmod;
 34742  004148  502F               	movf	_rgl+8,w,c
 34743  00414A  0102               	movlb	2	; () banked
 34744  00414C  5DF0               	subwf	ModPrzCW@maxmod& (0+255),w,b
 34745  00414E  E303               	bnc	l3140
 34746                           
 34747                           ; BSR set to: 2
 34748  004150  C02F  F2F3         	movff	_rgl+8,ModPrzCW@p
 34749  004154  D001               	goto	l34438
 34750  004156                     l3140:
 34751                           
 34752                           ; BSR set to: 2
 34753                           ;rgl.c: 1183: else
 34754                           ;rgl.c: 1184: {
 34755                           ;rgl.c: 1185: p=maxmod;
 34756                           
 34757                           ;rgl.c: 1186: rgl.xmod=maxmod;
 34758  004156  D920               	call	PL228	;call to abstracted procedure
 34759  004158                     l34438:
 34760                           
 34761                           ; BSR set to: 2
 34762                           ;rgl.c: 1187: }
 34763                           ;rgl.c: 1188: if((DtCW.ddDCW>6)&&(tmr>1))
 34764  004158  0100               	movlb	0	; () banked
 34765  00415A  51D8               	movf	(_DtCW+9)& (0+255),w,b
 34766  00415C  0A80               	xorlw	128
 34767  00415E  0F79               	addlw	-135
 34768  004160  E32E               	bnc	l34450
 34769                           
 34770                           ; BSR set to: 0
 34771  004162  0E01               	movlw	1
 34772  004164  643F               	cpfsgt	_tmr,c
 34773  004166  D02B               	goto	l34450
 34774                           
 34775                           ; BSR set to: 0
 34776                           ;rgl.c: 1189: {
 34777                           ;rgl.c: 1190: tmr=0;
 34778  004168  6A3F               	clrf	_tmr,c
 34779                           
 34780                           ; BSR set to: 0
 34781                           ;rgl.c: 1191: r=p-PWM.MDMOD;
 34782                           
 34783                           ; BSR set to: 2
 34784                           ;rgl.c: 1192: if((p-(r/3))>PWM.MDMOD) p-=r/3;
 34785  00416A  D908               	call	PL22	;call to abstracted procedure
 34786  00416C  0E03               	movlw	3
 34787  00416E  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 34788  004170  EC37  F04A         	call	___awdiv	;wreg free
 34789  004174  51F3               	movf	?___awdiv& (0+255),w,b
 34790  004176  0102               	movlb	2	; () banked
 34791  004178  5DF3               	subwf	ModPrzCW@p& (0+255),w,b
 34792  00417A  0100               	movlb	0	; () banked
 34793  00417C  6FFB               	movwf	??_ModPrzCW& (0+255),b
 34794  00417E  51F4               	movf	(?___awdiv+1)& (0+255),w,b
 34795  004180  A0D8               	btfss	status,0,c
 34796  004182  29F4               	incf	(?___awdiv+1)& (0+255),w,b
 34797  004184  6BFC               	clrf	(??_ModPrzCW+1)& (0+255),b
 34798  004186  5FFC               	subwf	(??_ModPrzCW+1)& (0+255),f,b
 34799  004188  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 34800  00418A  6FFD               	movwf	(??_ModPrzCW+2)& (0+255),b
 34801  00418C  6BFE               	clrf	(??_ModPrzCW+3)& (0+255),b
 34802  00418E  51FE               	movf	(??_ModPrzCW+3)& (0+255),w,b
 34803  004190  0A80               	xorlw	128
 34804  004192  6FFF               	movwf	(??_ModPrzCW+4)& (0+255),b
 34805  004194  51FB               	movf	??_ModPrzCW& (0+255),w,b
 34806  004196  5DFD               	subwf	(??_ModPrzCW+2)& (0+255),w,b
 34807  004198  51FC               	movf	(??_ModPrzCW+1)& (0+255),w,b
 34808  00419A  0A80               	xorlw	128
 34809  00419C  59FF               	subwfb	(??_ModPrzCW+4)& (0+255),w,b
 34810  00419E  E20A               	bc	l3143
 34811                           
 34812                           ; BSR set to: 0
 34813  0041A0  C2F1  F0F3         	movff	ModPrzCW@r,?___awdiv
 34814  0041A4  C2F2  F0F4         	movff	ModPrzCW@r+1,?___awdiv+1
 34815  0041A8  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 34816  0041AA  0E03               	movlw	3
 34817  0041AC  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 34818  0041AE  EC37  F04A         	call	___awdiv	;wreg free
 34819  0041B2  D094               	goto	L74
 34820  0041B4                     l3143:
 34821                           
 34822                           ; BSR set to: 0
 34823                           ;rgl.c: 1193: else p=PWM.MDMOD;
 34824  0041B4  C09C  F2F3         	movff	_PWM+9,ModPrzCW@p	;volatile
 34825  0041B8                     l3144:
 34826                           
 34827                           ;rgl.c: 1194: rgl.xmod=p;
 34828  0041B8  C2F3  F02F         	movff	ModPrzCW@p,_rgl+8
 34829                           
 34830                           ;rgl.c: 1195: }
 34831  0041BC  D0AE               	goto	l3136
 34832  0041BE                     l34450:
 34833                           
 34834                           ; BSR set to: 0
 34835                           ;rgl.c: 1196: else
 34836                           ;rgl.c: 1197: if((DtCW.ddDCW>4)&&(tmr>1))
 34837  0041BE  51D8               	movf	(_DtCW+9)& (0+255),w,b
 34838  0041C0  0A80               	xorlw	128
 34839  0041C2  0F7B               	addlw	-133
 34840  0041C4  E329               	bnc	l34462
 34841                           
 34842                           ; BSR set to: 0
 34843  0041C6  0E01               	movlw	1
 34844  0041C8  643F               	cpfsgt	_tmr,c
 34845  0041CA  D026               	goto	l34462
 34846                           
 34847                           ; BSR set to: 0
 34848                           ;rgl.c: 1198: {
 34849                           ;rgl.c: 1199: tmr=0;
 34850  0041CC  6A3F               	clrf	_tmr,c
 34851                           
 34852                           ; BSR set to: 0
 34853                           ;rgl.c: 1200: r=p-PWM.MDMOD;
 34854                           
 34855                           ; BSR set to: 2
 34856                           ;rgl.c: 1201: if((p-(r/4))>PWM.MDMOD) p-=r/4;
 34857  0041CE  D8D6               	call	PL22	;call to abstracted procedure
 34858  0041D0  0E04               	movlw	4
 34859  0041D2  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 34860  0041D4  EC37  F04A         	call	___awdiv	;wreg free
 34861  0041D8  51F3               	movf	?___awdiv& (0+255),w,b
 34862  0041DA  0102               	movlb	2	; () banked
 34863  0041DC  5DF3               	subwf	ModPrzCW@p& (0+255),w,b
 34864  0041DE  0100               	movlb	0	; () banked
 34865  0041E0  6FFB               	movwf	??_ModPrzCW& (0+255),b
 34866  0041E2  51F4               	movf	(?___awdiv+1)& (0+255),w,b
 34867  0041E4  A0D8               	btfss	status,0,c
 34868  0041E6  29F4               	incf	(?___awdiv+1)& (0+255),w,b
 34869  0041E8  6BFC               	clrf	(??_ModPrzCW+1)& (0+255),b
 34870  0041EA  5FFC               	subwf	(??_ModPrzCW+1)& (0+255),f,b
 34871  0041EC  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 34872  0041EE  6FFD               	movwf	(??_ModPrzCW+2)& (0+255),b
 34873  0041F0  6BFE               	clrf	(??_ModPrzCW+3)& (0+255),b
 34874  0041F2  51FE               	movf	(??_ModPrzCW+3)& (0+255),w,b
 34875  0041F4  0A80               	xorlw	128
 34876  0041F6  6FFF               	movwf	(??_ModPrzCW+4)& (0+255),b
 34877  0041F8  51FB               	movf	??_ModPrzCW& (0+255),w,b
 34878  0041FA  5DFD               	subwf	(??_ModPrzCW+2)& (0+255),w,b
 34879  0041FC  51FC               	movf	(??_ModPrzCW+1)& (0+255),w,b
 34880  0041FE  0A80               	xorlw	128
 34881  004200  59FF               	subwfb	(??_ModPrzCW+4)& (0+255),w,b
 34882  004202  E2D8               	bc	l3143
 34883                           
 34884                           ; BSR set to: 0
 34885  004204  C2F1  F0F3         	movff	ModPrzCW@r,?___awdiv
 34886  004208  C2F2  F0F4         	movff	ModPrzCW@r+1,?___awdiv+1
 34887  00420C  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 34888  00420E  0E04               	movlw	4
 34889  004210  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 34890  004212  EC37  F04A         	call	___awdiv	;wreg free
 34891  004216  D062               	goto	L74
 34892  004218                     l34462:
 34893                           
 34894                           ; BSR set to: 0
 34895                           ;rgl.c: 1205: else
 34896                           ;rgl.c: 1206: if((DtCW.ddDCW>3)&&(tmr>0))
 34897  004218  51D8               	movf	(_DtCW+9)& (0+255),w,b
 34898  00421A  0A80               	xorlw	128
 34899  00421C  0F7C               	addlw	-132
 34900  00421E  E37D               	bnc	l3136
 34901                           
 34902                           ; BSR set to: 0
 34903  004220  503F               	movf	_tmr,w,c
 34904  004222  E07B               	bz	l3136
 34905                           
 34906                           ; BSR set to: 0
 34907                           ;rgl.c: 1207: {
 34908                           ;rgl.c: 1208: tmr=0;
 34909  004224  6A3F               	clrf	_tmr,c
 34910                           
 34911                           ; BSR set to: 0
 34912                           ;rgl.c: 1209: r=p-PWM.MDMOD;
 34913                           
 34914                           ; BSR set to: 2
 34915                           ;rgl.c: 1210: if((p-(r/14))>PWM.MDMOD) p-=r/14;
 34916  004226  D8AA               	call	PL22	;call to abstracted procedure
 34917  004228  0E0E               	movlw	14
 34918  00422A  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 34919  00422C  EC37  F04A         	call	___awdiv	;wreg free
 34920  004230  51F3               	movf	?___awdiv& (0+255),w,b
 34921  004232  0102               	movlb	2	; () banked
 34922  004234  5DF3               	subwf	ModPrzCW@p& (0+255),w,b
 34923  004236  0100               	movlb	0	; () banked
 34924  004238  6FFB               	movwf	??_ModPrzCW& (0+255),b
 34925  00423A  51F4               	movf	(?___awdiv+1)& (0+255),w,b
 34926  00423C  A0D8               	btfss	status,0,c
 34927  00423E  29F4               	incf	(?___awdiv+1)& (0+255),w,b
 34928  004240  6BFC               	clrf	(??_ModPrzCW+1)& (0+255),b
 34929  004242  5FFC               	subwf	(??_ModPrzCW+1)& (0+255),f,b
 34930  004244  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 34931  004246  6FFD               	movwf	(??_ModPrzCW+2)& (0+255),b
 34932  004248  6BFE               	clrf	(??_ModPrzCW+3)& (0+255),b
 34933  00424A  51FE               	movf	(??_ModPrzCW+3)& (0+255),w,b
 34934  00424C  0A80               	xorlw	128
 34935  00424E  6FFF               	movwf	(??_ModPrzCW+4)& (0+255),b
 34936  004250  51FB               	movf	??_ModPrzCW& (0+255),w,b
 34937  004252  5DFD               	subwf	(??_ModPrzCW+2)& (0+255),w,b
 34938  004254  51FC               	movf	(??_ModPrzCW+1)& (0+255),w,b
 34939  004256  0A80               	xorlw	128
 34940  004258  59FF               	subwfb	(??_ModPrzCW+4)& (0+255),w,b
 34941  00425A  E2AC               	bc	l3143
 34942                           
 34943                           ; BSR set to: 0
 34944  00425C  C2F1  F0F3         	movff	ModPrzCW@r,?___awdiv
 34945  004260  C2F2  F0F4         	movff	ModPrzCW@r+1,?___awdiv+1
 34946  004264  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 34947  004266  0E0E               	movlw	14
 34948  004268  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 34949  00426A  EC37  F04A         	call	___awdiv	;wreg free
 34950  00426E  D036               	goto	L74
 34951  004270                     l34474:
 34952                           
 34953                           ; BSR set to: 1
 34954                           ;rgl.c: 1215: else
 34955                           ;rgl.c: 1216: {
 34956                           ;rgl.c: 1217: if(rgl.xmod<=maxmod) p=rgl.xmod;
 34957  004270  502F               	movf	_rgl+8,w,c
 34958  004272  0102               	movlb	2	; () banked
 34959  004274  5DF0               	subwf	ModPrzCW@maxmod& (0+255),w,b
 34960  004276  E303               	bnc	l3154
 34961                           
 34962                           ; BSR set to: 2
 34963  004278  C02F  F2F3         	movff	_rgl+8,ModPrzCW@p
 34964  00427C  D001               	goto	l34478
 34965  00427E                     l3154:
 34966                           
 34967                           ; BSR set to: 2
 34968                           ;rgl.c: 1218: else
 34969                           ;rgl.c: 1219: {
 34970                           ;rgl.c: 1220: p=maxmod;
 34971                           
 34972                           ;rgl.c: 1221: rgl.xmod=maxmod;
 34973  00427E  D88C               	call	PL228	;call to abstracted procedure
 34974  004280                     l34478:
 34975                           
 34976                           ; BSR set to: 2
 34977                           ;rgl.c: 1222: }
 34978                           ;rgl.c: 1223: if((DtCW.ddDCW>6)&&(tmr>1))
 34979  004280  0100               	movlb	0	; () banked
 34980  004282  51D8               	movf	(_DtCW+9)& (0+255),w,b
 34981  004284  0A80               	xorlw	128
 34982  004286  0F79               	addlw	-135
 34983  004288  E32D               	bnc	l34490
 34984                           
 34985                           ; BSR set to: 0
 34986  00428A  0E01               	movlw	1
 34987  00428C  643F               	cpfsgt	_tmr,c
 34988  00428E  D02A               	goto	l34490
 34989                           
 34990                           ; BSR set to: 0
 34991                           ;rgl.c: 1224: {
 34992                           ;rgl.c: 1225: tmr=0;
 34993  004290  6A3F               	clrf	_tmr,c
 34994                           
 34995                           ; BSR set to: 0
 34996                           ;rgl.c: 1226: r=p-PWM.MDMOD;
 34997                           
 34998                           ; BSR set to: 2
 34999                           ;rgl.c: 1227: if((p-(r/2))>PWM.MDMOD) p-=r/2;
 35000  004292  D874               	call	PL22	;call to abstracted procedure
 35001  004294  0E02               	movlw	2
 35002  004296  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 35003  004298  EC37  F04A         	call	___awdiv	;wreg free
 35004  00429C  51F3               	movf	?___awdiv& (0+255),w,b
 35005  00429E  0102               	movlb	2	; () banked
 35006  0042A0  5DF3               	subwf	ModPrzCW@p& (0+255),w,b
 35007  0042A2  0100               	movlb	0	; () banked
 35008  0042A4  6FFB               	movwf	??_ModPrzCW& (0+255),b
 35009  0042A6  51F4               	movf	(?___awdiv+1)& (0+255),w,b
 35010  0042A8  A0D8               	btfss	status,0,c
 35011  0042AA  29F4               	incf	(?___awdiv+1)& (0+255),w,b
 35012  0042AC  6BFC               	clrf	(??_ModPrzCW+1)& (0+255),b
 35013  0042AE  5FFC               	subwf	(??_ModPrzCW+1)& (0+255),f,b
 35014  0042B0  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 35015  0042B2  6FFD               	movwf	(??_ModPrzCW+2)& (0+255),b
 35016  0042B4  6BFE               	clrf	(??_ModPrzCW+3)& (0+255),b
 35017  0042B6  51FE               	movf	(??_ModPrzCW+3)& (0+255),w,b
 35018  0042B8  0A80               	xorlw	128
 35019  0042BA  6FFF               	movwf	(??_ModPrzCW+4)& (0+255),b
 35020  0042BC  51FB               	movf	??_ModPrzCW& (0+255),w,b
 35021  0042BE  5DFD               	subwf	(??_ModPrzCW+2)& (0+255),w,b
 35022  0042C0  51FC               	movf	(??_ModPrzCW+1)& (0+255),w,b
 35023  0042C2  0A80               	xorlw	128
 35024  0042C4  59FF               	subwfb	(??_ModPrzCW+4)& (0+255),w,b
 35025  0042C6  E301 D775          	bc	l3143
 35026                           
 35027                           ; BSR set to: 0
 35028  0042CA  C2F1  F0F3         	movff	ModPrzCW@r,?___awdiv
 35029  0042CE  C2F2  F0F4         	movff	ModPrzCW@r+1,?___awdiv+1
 35030  0042D2  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 35031  0042D4  0E02               	movlw	2
 35032  0042D6  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 35033  0042D8  EC37  F04A         	call	___awdiv	;wreg free
 35034  0042DC                     L74:
 35035  0042DC  51F3               	movf	?___awdiv& (0+255),w,b
 35036  0042DE  0102               	movlb	2	; () banked
 35037  0042E0  5FF3               	subwf	ModPrzCW@p& (0+255),f,b
 35038  0042E2  D76A               	goto	l3144
 35039  0042E4                     l34490:
 35040                           
 35041                           ; BSR set to: 0
 35042                           ;rgl.c: 1231: else
 35043                           ;rgl.c: 1232: if((DtCW.ddDCW>4)&&(tmr>1))
 35044  0042E4  51D8               	movf	(_DtCW+9)& (0+255),w,b
 35045  0042E6  0A80               	xorlw	128
 35046  0042E8  0F7B               	addlw	-133
 35047  0042EA  E30A               	bnc	l34502
 35048                           
 35049                           ; BSR set to: 0
 35050  0042EC  0E01               	movlw	1
 35051  0042EE  643F               	cpfsgt	_tmr,c
 35052  0042F0  D007               	goto	l34502
 35053                           
 35054                           ; BSR set to: 0
 35055                           ;rgl.c: 1233: {
 35056                           ;rgl.c: 1234: tmr=0;
 35057  0042F2  6A3F               	clrf	_tmr,c
 35058                           
 35059                           ; BSR set to: 0
 35060                           ;rgl.c: 1235: r=p-PWM.MDMOD;
 35061                           
 35062                           ; BSR set to: 2
 35063                           ;rgl.c: 1236: if((p-(r/3))>PWM.MDMOD) p-=r/3;
 35064  0042F4  D843               	call	PL22	;call to abstracted procedure
 35065  0042F6  0E03               	movlw	3
 35066  0042F8  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 35067  0042FA  EC37  F04A         	call	___awdiv	;wreg free
 35068  0042FE  D73A               	goto	L75
 35069  004300                     l34502:
 35070                           
 35071                           ; BSR set to: 0
 35072                           ;rgl.c: 1240: else
 35073                           ;rgl.c: 1241: if((DtCW.ddDCW>3)&&(tmr>0))
 35074  004300  51D8               	movf	(_DtCW+9)& (0+255),w,b
 35075  004302  0A80               	xorlw	128
 35076  004304  0F7C               	addlw	-132
 35077  004306  E309               	bnc	l3136
 35078                           
 35079                           ; BSR set to: 0
 35080  004308  503F               	movf	_tmr,w,c
 35081  00430A  E007               	bz	l3136
 35082                           
 35083                           ; BSR set to: 0
 35084                           ;rgl.c: 1242: {
 35085                           ;rgl.c: 1243: tmr=0;
 35086  00430C  6A3F               	clrf	_tmr,c
 35087                           
 35088                           ; BSR set to: 0
 35089                           ;rgl.c: 1244: r=p-PWM.MDMOD;
 35090                           
 35091                           ; BSR set to: 2
 35092                           ;rgl.c: 1245: if((p-(r/4))>PWM.MDMOD) p-=r/4;
 35093  00430E  D836               	call	PL22	;call to abstracted procedure
 35094  004310  0E04               	movlw	4
 35095  004312  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 35096  004314  EC37  F04A         	call	___awdiv	;wreg free
 35097  004318  D75F               	goto	L76
 35098  00431A                     l3136:
 35099                           
 35100                           ;rgl.c: 1248: }
 35101                           ;rgl.c: 1249: }
 35102                           ;rgl.c: 1259: }
 35103                           ;rgl.c: 1260: if(!rgl.nmod)
 35104  00431A  BA27               	btfsc	_rgl,5,c
 35105  00431C  D029               	goto	l34534
 35106                           
 35107                           ;rgl.c: 1261: {
 35108                           ;rgl.c: 1262: if(rgl.fz)
 35109  00431E  A427               	btfss	_rgl,2,c
 35110  004320  0012               	return	
 35111                           
 35112                           ;rgl.c: 1263: {
 35113                           ;rgl.c: 1264: if(!Tmaleje(0))
 35114  004322  0E00               	movlw	0
 35115  004324  EC00  F055         	call	_Tmaleje
 35116  004328  B0D8               	btfsc	status,0,c
 35117  00432A  0012               	return	
 35118                           
 35119                           ;rgl.c: 1265: {
 35120                           ;rgl.c: 1266: if(Twyzsza(4))
 35121  00432C  0E04               	movlw	4
 35122  00432E  EC34  F055         	call	_Twyzsza
 35123  004332  A0D8               	btfss	status,0,c
 35124  004334  0012               	return	
 35125                           
 35126                           ;rgl.c: 1267: {
 35127                           ;rgl.c: 1268: if(rgl.tmp_pwm>=pwm_kwr)
 35128  004336  0100               	movlb	0	; () banked
 35129  004338  51E3               	movf	_pwm_kwr& (0+255),w,b
 35130  00433A  5C30               	subwf	_rgl+9,w,c
 35131  00433C  E317               	bnc	l34528
 35132                           
 35133                           ; BSR set to: 0
 35134                           ;rgl.c: 1269: {
 35135                           ;rgl.c: 1270: if(rgl.srp-5<PWM.MDMOD) rgl.srp=PWM.MDMOD;
 35136  00433E  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 35137  004340  6FFB               	movwf	??_ModPrzCW& (0+255),b
 35138  004342  6BFC               	clrf	(??_ModPrzCW+1)& (0+255),b
 35139  004344  0EFB               	movlw	251
 35140  004346  242E               	addwf	_rgl+7,w,c
 35141  004348  6FFD               	movwf	(??_ModPrzCW+2)& (0+255),b
 35142  00434A  6BFE               	clrf	(??_ModPrzCW+3)& (0+255),b
 35143  00434C  0EFF               	movlw	255
 35144  00434E  23FE               	addwfc	(??_ModPrzCW+3)& (0+255),f,b
 35145  004350  51FE               	movf	(??_ModPrzCW+3)& (0+255),w,b
 35146  004352  0A80               	xorlw	128
 35147  004354  6FFF               	movwf	(??_ModPrzCW+4)& (0+255),b
 35148  004356  51FB               	movf	??_ModPrzCW& (0+255),w,b
 35149  004358  5DFD               	subwf	(??_ModPrzCW+2)& (0+255),w,b
 35150  00435A  51FC               	movf	(??_ModPrzCW+1)& (0+255),w,b
 35151  00435C  0A80               	xorlw	128
 35152  00435E  59FF               	subwfb	(??_ModPrzCW+4)& (0+255),w,b
 35153  004360  E203               	bc	l34526
 35154                           
 35155                           ; BSR set to: 0
 35156  004362  C09C  F02E         	movff	_PWM+9,_rgl+7	;volatile
 35157  004366  D002               	goto	l34528
 35158  004368                     l34526:
 35159                           
 35160                           ; BSR set to: 0
 35161                           ;rgl.c: 1271: else rgl.srp-=5;
 35162  004368  0E05               	movlw	5
 35163  00436A  5E2E               	subwf	_rgl+7,f,c
 35164  00436C                     l34528:
 35165                           
 35166                           ; BSR set to: 0
 35167                           ;rgl.c: 1272: }
 35168                           ;rgl.c: 1273: rgl.nmod=1;
 35169  00436C  8A27               	bsf	_rgl,5,c
 35170  00436E  0012               	return	
 35171  004370                     l34534:
 35172                           
 35173                           ;rgl.c: 1282: else
 35174                           ;rgl.c: 1283: {
 35175                           ;rgl.c: 1284: if(Tmaleje(0))
 35176  004370  0E00               	movlw	0
 35177  004372  EC00  F055         	call	_Tmaleje
 35178  004376  B0D8               	btfsc	status,0,c
 35179                           
 35180                           ;rgl.c: 1285: rgl.nmod=0;
 35181  004378  9A27               	bcf	_rgl,5,c
 35182  00437A  0012               	return	
 35183  00437C                     __end_of_ModPrzCW:
 35184                           	opt stack 0
 35185  00437C                     PL22:
 35186                           	opt stack 24
 35187  00437C  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 35188  00437E  0102               	movlb	2	; () banked
 35189  004380  5DF3               	subwf	ModPrzCW@p& (0+255),w,b
 35190  004382  6FF1               	movwf	ModPrzCW@r& (0+255),b
 35191  004384  6BF2               	clrf	(ModPrzCW@r+1)& (0+255),b
 35192  004386  A0D8               	btfss	status,0,c
 35193  004388  07F2               	decf	(ModPrzCW@r+1)& (0+255),f,b
 35194  00438A  C2F1  F0F3         	movff	ModPrzCW@r,?___awdiv
 35195  00438E  C2F2  F0F4         	movff	ModPrzCW@r+1,?___awdiv+1
 35196  004392  0100               	movlb	0	; () banked
 35197  004394  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 35198  004396  0012               	return	
 35199  004398                     __end_ofPL22:
 35200                           	opt stack 0
 35201  004398                     PL228:
 35202                           	opt stack 24
 35203  004398  C2F0  F2F3         	movff	ModPrzCW@maxmod,ModPrzCW@p
 35204  00439C  C2F0  F02F         	movff	ModPrzCW@maxmod,_rgl+8
 35205  0043A0  0012               	return	
 35206  0043A2                     __end_ofPL228:
 35207                           	opt stack 0
 35208                           tblptru	equ	0xFF8
 35209                           tblptrh	equ	0xFF7
 35210                           tblptrl	equ	0xFF6
 35211                           tablat	equ	0xFF5
 35212                           prodh	equ	0xFF4
 35213                           prodl	equ	0xFF3
 35214                           intcon	equ	0xFF2
 35215                           postinc0	equ	0xFEE
 35216                           wreg	equ	0xFE8
 35217                           indf1	equ	0xFE7
 35218                           postinc1	equ	0xFE6
 35219                           postdec1	equ	0xFE5
 35220                           fsr1h	equ	0xFE2
 35221                           fsr1l	equ	0xFE1
 35222                           indf2	equ	0xFDF
 35223                           postinc2	equ	0xFDE
 35224                           postdec2	equ	0xFDD
 35225                           fsr2h	equ	0xFDA
 35226                           fsr2l	equ	0xFD9
 35227                           status	equ	0xFD8
 35228                           
 35229 ;; *************** function _PropCO *****************
 35230 ;; Defined at:
 35231 ;;		line 1295 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 35232 ;; Parameters:    Size  Location     Type
 35233 ;;		None
 35234 ;; Auto vars:     Size  Location     Type
 35235 ;;		None
 35236 ;; Return value:  Size  Location     Type
 35237 ;;		None               void
 35238 ;; Registers used:
 35239 ;;		wreg, status,2, status,0, cstack
 35240 ;; Tracked objects:
 35241 ;;		On entry : C/1
 35242 ;;		On exit  : F/0
 35243 ;;		Unchanged: FFFFFFF0/0
 35244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35249 ;;Total ram usage:        0 bytes
 35250 ;; Hardware stack levels used:    1
 35251 ;; Hardware stack levels required when called:    6
 35252 ;; This function calls:
 35253 ;;		_WriteOPWM
 35254 ;; This function is called by:
 35255 ;;		_Moduluj
 35256 ;; This function uses a non-reentrant model
 35257 ;;
 35258                           
 35259                           	psect	text150
 35260  009DE0                     __ptext150:
 35261                           	opt stack 0
 35262  009DE0                     _PropCO:
 35263                           	opt stack 23
 35264                           
 35265                           ;rgl.c: 1296: if(!rgl.nmod)
 35266  009DE0  BA27               	btfsc	_rgl,5,c
 35267  009DE2  D029               	goto	l34568
 35268                           
 35269                           ;rgl.c: 1297: {
 35270                           ;rgl.c: 1298: if(!DtCO._err_CO)
 35271  009DE4  0100               	movlb	0	; () banked
 35272  009DE6  B1E4               	btfsc	_DtCO& (0+255),0,b
 35273  009DE8  D023               	goto	l34566
 35274                           
 35275                           ; BSR set to: 0
 35276                           ;rgl.c: 1299: {
 35277                           ;rgl.c: 1300: if(rgl.x_f==3)
 35278  009DEA  502A               	movf	_rgl+3,w,c
 35279  009DEC  0A03               	xorlw	3
 35280  009DEE  E106               	bnz	l34548
 35281                           
 35282                           ; BSR set to: 0
 35283                           ;rgl.c: 1301: {
 35284                           ;rgl.c: 1302: if(rgl.tmp_pwm>PWM.MGMOD)
 35285  009DF0  5030               	movf	_rgl+9,w,c
 35286  009DF2  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 35287  009DF4  D01D               	goto	l34566
 35288                           
 35289                           ; BSR set to: 0
 35290                           ;rgl.c: 1303: rgl.tmp_pwm=PWM.MGMOD;
 35291  009DF6  C09D  F030         	movff	_PWM+10,_rgl+9	;volatile
 35292  009DFA  D01A               	goto	l34566
 35293  009DFC                     l34548:
 35294                           
 35295                           ; BSR set to: 0
 35296                           ;rgl.c: 1305: else
 35297                           ;rgl.c: 1306: if(rgl.x_f==2)
 35298  009DFC  502A               	movf	_rgl+3,w,c
 35299  009DFE  0A02               	xorlw	2
 35300  009E00  E106               	bnz	l34554
 35301                           
 35302                           ; BSR set to: 0
 35303                           ;rgl.c: 1307: {
 35304                           ;rgl.c: 1308: if(rgl.tmp_pwm>PWM.PROP1)
 35305  009E02  5030               	movf	_rgl+9,w,c
 35306  009E04  61AC               	cpfslt	(_PWM+25)& (0+255),b	;volatile
 35307  009E06  D014               	goto	l34566
 35308                           
 35309                           ; BSR set to: 0
 35310                           ;rgl.c: 1309: rgl.tmp_pwm=PWM.PROP1;
 35311  009E08  C0AC  F030         	movff	_PWM+25,_rgl+9	;volatile
 35312  009E0C  D011               	goto	l34566
 35313  009E0E                     l34554:
 35314                           
 35315                           ; BSR set to: 0
 35316                           ;rgl.c: 1311: else
 35317                           ;rgl.c: 1312: if(rgl.x_f==1)
 35318  009E0E  042A               	decf	_rgl+3,w,c
 35319  009E10  E106               	bnz	l34560
 35320                           
 35321                           ; BSR set to: 0
 35322                           ;rgl.c: 1313: {
 35323                           ;rgl.c: 1314: if(rgl.tmp_pwm>PWM.PROP2)
 35324  009E12  5030               	movf	_rgl+9,w,c
 35325  009E14  61AD               	cpfslt	(_PWM+26)& (0+255),b	;volatile
 35326  009E16  D00C               	goto	l34566
 35327                           
 35328                           ; BSR set to: 0
 35329                           ;rgl.c: 1315: rgl.tmp_pwm=PWM.PROP2;
 35330  009E18  C0AD  F030         	movff	_PWM+26,_rgl+9	;volatile
 35331  009E1C  D009               	goto	l34566
 35332  009E1E                     l34560:
 35333                           
 35334                           ; BSR set to: 0
 35335                           ;rgl.c: 1317: else
 35336                           ;rgl.c: 1318: if(rgl.x_f<=0)
 35337  009E1E  502A               	movf	_rgl+3,w,c
 35338  009E20  0A80               	xorlw	128
 35339  009E22  0F7F               	addlw	-129
 35340  009E24  E205               	bc	l34566
 35341                           
 35342                           ; BSR set to: 0
 35343                           ;rgl.c: 1319: {
 35344                           ;rgl.c: 1320: if(rgl.tmp_pwm>PWM.PROP3)
 35345  009E26  5030               	movf	_rgl+9,w,c
 35346  009E28  61AE               	cpfslt	(_PWM+27)& (0+255),b	;volatile
 35347  009E2A  D002               	goto	l34566
 35348                           
 35349                           ; BSR set to: 0
 35350                           ;rgl.c: 1321: rgl.tmp_pwm=PWM.PROP3;
 35351  009E2C  C0AE  F030         	movff	_PWM+27,_rgl+9	;volatile
 35352  009E30                     l34566:
 35353                           
 35354                           ; BSR set to: 0
 35355                           ;rgl.c: 1322: }
 35356                           ;rgl.c: 1323: }
 35357                           ;rgl.c: 1324: WriteOPWM(rgl.tmp_pwm);
 35358  009E30  5030               	movf	_rgl+9,w,c
 35359  009E32  EF7B  F03F         	goto	_WriteOPWM
 35360  009E36                     l34568:
 35361                           
 35362                           ;rgl.c: 1326: else WriteOPWM(PWM.MDMOD);
 35363  009E36  0100               	movlb	0	; () banked
 35364  009E38  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 35365  009E3A  EF7B  F03F         	goto	_WriteOPWM
 35366  009E3E                     __end_of_PropCO:
 35367                           	opt stack 0
 35368                           tblptru	equ	0xFF8
 35369                           tblptrh	equ	0xFF7
 35370                           tblptrl	equ	0xFF6
 35371                           tablat	equ	0xFF5
 35372                           prodh	equ	0xFF4
 35373                           prodl	equ	0xFF3
 35374                           intcon	equ	0xFF2
 35375                           postinc0	equ	0xFEE
 35376                           wreg	equ	0xFE8
 35377                           indf1	equ	0xFE7
 35378                           postinc1	equ	0xFE6
 35379                           postdec1	equ	0xFE5
 35380                           fsr1h	equ	0xFE2
 35381                           fsr1l	equ	0xFE1
 35382                           indf2	equ	0xFDF
 35383                           postinc2	equ	0xFDE
 35384                           postdec2	equ	0xFDD
 35385                           fsr2h	equ	0xFDA
 35386                           fsr2l	equ	0xFD9
 35387                           status	equ	0xFD8
 35388                           
 35389 ;; *************** function _StartCO2 *****************
 35390 ;; Defined at:
 35391 ;;		line 1834 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 35392 ;; Parameters:    Size  Location     Type
 35393 ;;		None
 35394 ;; Auto vars:     Size  Location     Type
 35395 ;;		None
 35396 ;; Return value:  Size  Location     Type
 35397 ;;		None               void
 35398 ;; Registers used:
 35399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35400 ;; Tracked objects:
 35401 ;;		On entry : F/0
 35402 ;;		On exit  : F/0
 35403 ;;		Unchanged: 0/0
 35404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35409 ;;Total ram usage:        0 bytes
 35410 ;; Hardware stack levels used:    1
 35411 ;; Hardware stack levels required when called:    5
 35412 ;; This function calls:
 35413 ;;		_StartRTdS
 35414 ;; This function is called by:
 35415 ;;		_Moduluj
 35416 ;; This function uses a non-reentrant model
 35417 ;;
 35418                           
 35419                           	psect	text151
 35420  00A692                     __ptext151:
 35421                           	opt stack 0
 35422  00A692                     _StartCO2:
 35423                           	opt stack 24
 35424                           
 35425                           ; BSR set to: 0
 35426                           ;rgl.c: 1837: if(rgl.btco||rgl.btcw) return;
 35427                           
 35428                           ; BSR set to: 0
 35429  00A692  A027               	btfss	_rgl,0,c
 35430                           
 35431                           ; BSR set to: 0
 35432  00A694  B227               	btfsc	_rgl,1,c
 35433  00A696  0012               	return	
 35434                           
 35435                           ; BSR set to: 0
 35436                           ;rgl.c: 1838: StartRTdS(2);
 35437  00A698  0E02               	movlw	2
 35438  00A69A  ECC2  F057         	call	_StartRTdS
 35439                           
 35440                           ; BSR set to: 1
 35441                           ;rgl.c: 1839: DtCO.dDCO=0;
 35442  00A69E  0100               	movlb	0	; () banked
 35443  00A6A0  6BED               	clrf	(_DtCO+9)& (0+255),b
 35444                           
 35445                           ; BSR set to: 0
 35446                           ;rgl.c: 1840: DtCO.indCO=0;
 35447  00A6A2  6BEE               	clrf	(_DtCO+10)& (0+255),b
 35448                           
 35449                           ; BSR set to: 0
 35450                           ;rgl.c: 1841: DtCW.dDCW=0;
 35451  00A6A4  6BD7               	clrf	(_DtCW+8)& (0+255),b
 35452                           
 35453                           ; BSR set to: 0
 35454                           ;rgl.c: 1842: DtCW.indCW=0;
 35455  00A6A6  6BD9               	clrf	(_DtCW+10)& (0+255),b
 35456                           
 35457                           ; BSR set to: 0
 35458                           ;rgl.c: 1843: rgl.fz=0;
 35459  00A6A8  9427               	bcf	_rgl,2,c
 35460                           
 35461                           ; BSR set to: 0
 35462                           ;rgl.c: 1844: rgl.med_up=0;
 35463  00A6AA  9627               	bcf	_rgl,3,c
 35464                           
 35465                           ; BSR set to: 0
 35466                           ;rgl.c: 1845: rgl.fast_up=0;
 35467  00A6AC  9827               	bcf	_rgl,4,c
 35468                           
 35469                           ; BSR set to: 0
 35470                           ;rgl.c: 1849: if(PWM.MMAXCO>PWM.FIRSTPB)
 35471  00A6AE  51B0               	movf	(_PWM+29)& (0+255),w,b	;volatile
 35472  00A6B0  61AB               	cpfslt	(_PWM+24)& (0+255),b	;volatile
 35473  00A6B2  D003               	goto	l3404
 35474                           
 35475                           ; BSR set to: 0
 35476                           ;rgl.c: 1850: {
 35477                           ;rgl.c: 1851: rgl.xmod=PWM.FIRSTPB;
 35478  00A6B4  C0AB  F02F         	movff	_PWM+24,_rgl+8	;volatile
 35479                           
 35480                           ;rgl.c: 1852: }
 35481  00A6B8  D002               	goto	l3405
 35482  00A6BA                     l3404:
 35483                           
 35484                           ; BSR set to: 0
 35485                           ;rgl.c: 1853: else
 35486                           ;rgl.c: 1854: {
 35487                           ;rgl.c: 1855: rgl.xmod=PWM.MMAXCO;
 35488  00A6BA  C0B0  F02F         	movff	_PWM+29,_rgl+8	;volatile
 35489  00A6BE                     l3405:
 35490                           
 35491                           ; BSR set to: 0
 35492                           ;rgl.c: 1856: }
 35493                           ;rgl.c: 1881: rgl.srp=0;
 35494  00A6BE  6A2E               	clrf	_rgl+7,c
 35495                           
 35496                           ;rgl.c: 1882: rgl.ytmp=0;
 35497  00A6C0  6A2D               	clrf	_rgl+6,c
 35498                           
 35499                           ;rgl.c: 1883: rgl.nmod=0;
 35500  00A6C2  9A27               	bcf	_rgl,5,c
 35501                           
 35502                           ;rgl.c: 1884: rgl.del1s=0;
 35503  00A6C4  9C27               	bcf	_rgl,6,c
 35504                           
 35505                           ;rgl.c: 1885: rgl.deln1=0;
 35506  00A6C6  9E27               	bcf	_rgl,7,c
 35507                           
 35508                           ;rgl.c: 1886: rgl.inv_mod=0;
 35509  00A6C8  9028               	bcf	_rgl+1,0,c
 35510                           
 35511                           ; BSR set to: 0
 35512  00A6CA  0012               	return	
 35513  00A6CC                     __end_of_StartCO2:
 35514                           	opt stack 0
 35515                           tblptru	equ	0xFF8
 35516                           tblptrh	equ	0xFF7
 35517                           tblptrl	equ	0xFF6
 35518                           tablat	equ	0xFF5
 35519                           prodh	equ	0xFF4
 35520                           prodl	equ	0xFF3
 35521                           intcon	equ	0xFF2
 35522                           postinc0	equ	0xFEE
 35523                           wreg	equ	0xFE8
 35524                           indf1	equ	0xFE7
 35525                           postinc1	equ	0xFE6
 35526                           postdec1	equ	0xFE5
 35527                           fsr1h	equ	0xFE2
 35528                           fsr1l	equ	0xFE1
 35529                           indf2	equ	0xFDF
 35530                           postinc2	equ	0xFDE
 35531                           postdec2	equ	0xFDD
 35532                           fsr2h	equ	0xFDA
 35533                           fsr2l	equ	0xFD9
 35534                           status	equ	0xFD8
 35535                           
 35536 ;; *************** function _ReadDataCO2 *****************
 35537 ;; Defined at:
 35538 ;;		line 2010 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 35539 ;; Parameters:    Size  Location     Type
 35540 ;;		None
 35541 ;; Auto vars:     Size  Location     Type
 35542 ;;		None
 35543 ;; Return value:  Size  Location     Type
 35544 ;;		None               void
 35545 ;; Registers used:
 35546 ;;		None
 35547 ;; Tracked objects:
 35548 ;;		On entry : F/0
 35549 ;;		On exit  : F/0
 35550 ;;		Unchanged: FFFFFFF0/0
 35551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35556 ;;Total ram usage:        0 bytes
 35557 ;; Hardware stack levels used:    1
 35558 ;; Hardware stack levels required when called:    4
 35559 ;; This function calls:
 35560 ;;		Nothing
 35561 ;; This function is called by:
 35562 ;;		_Moduluj
 35563 ;; This function uses a non-reentrant model
 35564 ;;
 35565                           
 35566                           	psect	text152
 35567  00B5F0                     __ptext152:
 35568                           	opt stack 0
 35569  00B5F0                     _ReadDataCO2:
 35570                           	opt stack 25
 35571                           
 35572                           ; BSR set to: 0
 35573                           ;rgl.c: 2011: rgl.x_t=DtCO.DCO;
 35574                           
 35575                           ; BSR set to: 0
 35576  00B5F0  C0EC  F029         	movff	_DtCO+8,_rgl+2
 35577                           
 35578                           ;rgl.c: 2012: rgl.x_dt=DtCO.dDCO;
 35579  00B5F4  C0ED  F02B         	movff	_DtCO+9,_rgl+4
 35580                           
 35581                           ; BSR set to: 0
 35582  00B5F8  0012               	return	
 35583  00B5FA                     __end_of_ReadDataCO2:
 35584                           	opt stack 0
 35585                           tblptru	equ	0xFF8
 35586                           tblptrh	equ	0xFF7
 35587                           tblptrl	equ	0xFF6
 35588                           tablat	equ	0xFF5
 35589                           prodh	equ	0xFF4
 35590                           prodl	equ	0xFF3
 35591                           intcon	equ	0xFF2
 35592                           postinc0	equ	0xFEE
 35593                           wreg	equ	0xFE8
 35594                           indf1	equ	0xFE7
 35595                           postinc1	equ	0xFE6
 35596                           postdec1	equ	0xFE5
 35597                           fsr1h	equ	0xFE2
 35598                           fsr1l	equ	0xFE1
 35599                           indf2	equ	0xFDF
 35600                           postinc2	equ	0xFDE
 35601                           postdec2	equ	0xFDD
 35602                           fsr2h	equ	0xFDA
 35603                           fsr2l	equ	0xFD9
 35604                           status	equ	0xFD8
 35605                           
 35606 ;; *************** function _ModToCO2 *****************
 35607 ;; Defined at:
 35608 ;;		line 1982 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 35609 ;; Parameters:    Size  Location     Type
 35610 ;;		None
 35611 ;; Auto vars:     Size  Location     Type
 35612 ;;		None
 35613 ;; Return value:  Size  Location     Type
 35614 ;;		None               void
 35615 ;; Registers used:
 35616 ;;		cstack
 35617 ;; Tracked objects:
 35618 ;;		On entry : F/0
 35619 ;;		On exit  : F/0
 35620 ;;		Unchanged: FFFFFFF0/0
 35621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35626 ;;Total ram usage:        0 bytes
 35627 ;; Hardware stack levels used:    1
 35628 ;; Hardware stack levels required when called:    5
 35629 ;; This function calls:
 35630 ;;		_ClrMod2
 35631 ;; This function is called by:
 35632 ;;		_Moduluj
 35633 ;; This function uses a non-reentrant model
 35634 ;;
 35635                           
 35636                           	psect	text153
 35637  00B57E                     __ptext153:
 35638                           	opt stack 0
 35639  00B57E                     _ModToCO2:
 35640                           	opt stack 24
 35641                           
 35642                           ; BSR set to: 0
 35643                           ;rgl.c: 1983: rgl.btco=1;
 35644                           
 35645                           ; BSR set to: 0
 35646  00B57E  8027               	bsf	_rgl,0,c
 35647                           
 35648                           ;rgl.c: 1984: if(rgl.btcw)
 35649  00B580  A227               	btfss	_rgl,1,c
 35650  00B582  0012               	return	
 35651                           
 35652                           ; BSR set to: 0
 35653                           ;rgl.c: 1985: {
 35654                           ;rgl.c: 1986: rgl.btcw=0;
 35655  00B584  9227               	bcf	_rgl,1,c
 35656                           
 35657                           ; BSR set to: 0
 35658                           ;rgl.c: 1987: ClrMod2();
 35659  00B586  EFA5  F05A         	goto	_ClrMod2	;wreg free
 35660  00B58A                     __end_of_ModToCO2:
 35661                           	opt stack 0
 35662                           tblptru	equ	0xFF8
 35663                           tblptrh	equ	0xFF7
 35664                           tblptrl	equ	0xFF6
 35665                           tablat	equ	0xFF5
 35666                           prodh	equ	0xFF4
 35667                           prodl	equ	0xFF3
 35668                           intcon	equ	0xFF2
 35669                           postinc0	equ	0xFEE
 35670                           wreg	equ	0xFE8
 35671                           indf1	equ	0xFE7
 35672                           postinc1	equ	0xFE6
 35673                           postdec1	equ	0xFE5
 35674                           fsr1h	equ	0xFE2
 35675                           fsr1l	equ	0xFE1
 35676                           indf2	equ	0xFDF
 35677                           postinc2	equ	0xFDE
 35678                           postdec2	equ	0xFDD
 35679                           fsr2h	equ	0xFDA
 35680                           fsr2l	equ	0xFD9
 35681                           status	equ	0xFD8
 35682                           
 35683 ;; *************** function _IncConstCO2 *****************
 35684 ;; Defined at:
 35685 ;;		line 2003 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 35686 ;; Parameters:    Size  Location     Type
 35687 ;;		None
 35688 ;; Auto vars:     Size  Location     Type
 35689 ;;		None
 35690 ;; Return value:  Size  Location     Type
 35691 ;;		None               void
 35692 ;; Registers used:
 35693 ;;		wreg, status,2, status,0, cstack
 35694 ;; Tracked objects:
 35695 ;;		On entry : E/1
 35696 ;;		On exit  : F/1
 35697 ;;		Unchanged: FFFFFFF0/0
 35698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35703 ;;Total ram usage:        0 bytes
 35704 ;; Hardware stack levels used:    1
 35705 ;; Hardware stack levels required when called:    5
 35706 ;; This function calls:
 35707 ;;		_Tstoi
 35708 ;; This function is called by:
 35709 ;;		_Moduluj
 35710 ;; This function uses a non-reentrant model
 35711 ;;
 35712                           
 35713                           	psect	text154
 35714  00B52E                     __ptext154:
 35715                           	opt stack 0
 35716  00B52E                     _IncConstCO2:
 35717                           	opt stack 24
 35718                           
 35719                           ;rgl.c: 2004: if(Tstoi()) rgl.ytmp++;
 35720                           
 35721                           ; BSR set to: 0
 35722  00B52E  ECD7  F05A         	call	_Tstoi	;wreg free
 35723  00B532  E302               	bnc	l3443
 35724                           
 35725                           ; BSR set to: 1
 35726  00B534  2A2D               	incf	_rgl+6,f,c
 35727  00B536  0012               	return	
 35728  00B538                     l3443:
 35729                           
 35730                           ; BSR set to: 1
 35731                           ;rgl.c: 2005: else rgl.ytmp=0;
 35732  00B538  6A2D               	clrf	_rgl+6,c
 35733                           
 35734                           ; BSR set to: 1
 35735  00B53A  0012               	return	
 35736  00B53C                     __end_of_IncConstCO2:
 35737                           	opt stack 0
 35738                           tblptru	equ	0xFF8
 35739                           tblptrh	equ	0xFF7
 35740                           tblptrl	equ	0xFF6
 35741                           tablat	equ	0xFF5
 35742                           prodh	equ	0xFF4
 35743                           prodl	equ	0xFF3
 35744                           intcon	equ	0xFF2
 35745                           postinc0	equ	0xFEE
 35746                           wreg	equ	0xFE8
 35747                           indf1	equ	0xFE7
 35748                           postinc1	equ	0xFE6
 35749                           postdec1	equ	0xFE5
 35750                           fsr1h	equ	0xFE2
 35751                           fsr1l	equ	0xFE1
 35752                           indf2	equ	0xFDF
 35753                           postinc2	equ	0xFDE
 35754                           postdec2	equ	0xFDD
 35755                           fsr2h	equ	0xFDA
 35756                           fsr2l	equ	0xFD9
 35757                           status	equ	0xFD8
 35758                           
 35759 ;; *************** function _StartMCW2 *****************
 35760 ;; Defined at:
 35761 ;;		line 1891 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 35762 ;; Parameters:    Size  Location     Type
 35763 ;;		None
 35764 ;; Auto vars:     Size  Location     Type
 35765 ;;		None
 35766 ;; Return value:  Size  Location     Type
 35767 ;;		None               void
 35768 ;; Registers used:
 35769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35770 ;; Tracked objects:
 35771 ;;		On entry : F/0
 35772 ;;		On exit  : F/0
 35773 ;;		Unchanged: 0/0
 35774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35779 ;;Total ram usage:        0 bytes
 35780 ;; Hardware stack levels used:    1
 35781 ;; Hardware stack levels required when called:    5
 35782 ;; This function calls:
 35783 ;;		_StartRTdS
 35784 ;;		_FirstPCW2
 35785 ;; This function is called by:
 35786 ;;		_Moduluj
 35787 ;; This function uses a non-reentrant model
 35788 ;;
 35789                           
 35790                           	psect	text155
 35791  00B03E                     __ptext155:
 35792                           	opt stack 0
 35793  00B03E                     _StartMCW2:
 35794                           	opt stack 24
 35795                           
 35796                           ; BSR set to: 0
 35797                           ;rgl.c: 1892: if(rgl.btco||rgl.btcw) return;
 35798                           
 35799                           ; BSR set to: 1
 35800  00B03E  A027               	btfss	_rgl,0,c
 35801                           
 35802                           ; BSR set to: 0
 35803  00B040  B227               	btfsc	_rgl,1,c
 35804  00B042  0012               	return	
 35805                           
 35806                           ; BSR set to: 0
 35807                           ;rgl.c: 1893: StartRTdS(2);
 35808  00B044  0E02               	movlw	2
 35809  00B046  ECC2  F057         	call	_StartRTdS
 35810                           
 35811                           ; BSR set to: 1
 35812                           ;rgl.c: 1894: DtCO.dDCO=0;
 35813  00B04A  0100               	movlb	0	; () banked
 35814  00B04C  6BED               	clrf	(_DtCO+9)& (0+255),b
 35815                           
 35816                           ; BSR set to: 0
 35817                           ;rgl.c: 1895: DtCW.dDCW=0;
 35818  00B04E  6BD7               	clrf	(_DtCW+8)& (0+255),b
 35819                           
 35820                           ; BSR set to: 0
 35821                           ;rgl.c: 1896: DtCO.indCO=0;
 35822  00B050  6BEE               	clrf	(_DtCO+10)& (0+255),b
 35823                           
 35824                           ; BSR set to: 0
 35825                           ;rgl.c: 1897: DtCW.indCW=0;
 35826  00B052  6BD9               	clrf	(_DtCW+10)& (0+255),b
 35827                           
 35828                           ; BSR set to: 0
 35829                           ;rgl.c: 1898: rgl.fz=0;
 35830  00B054  9427               	bcf	_rgl,2,c
 35831                           
 35832                           ; BSR set to: 0
 35833                           ;rgl.c: 1899: FirstPCW2();
 35834  00B056  EC99  F055         	call	_FirstPCW2	;wreg free
 35835                           
 35836                           ; BSR set to: 0
 35837                           ;rgl.c: 1900: rgl.srp=0;
 35838  00B05A  6A2E               	clrf	_rgl+7,c
 35839                           
 35840                           ; BSR set to: 0
 35841                           ;rgl.c: 1901: rgl.ytmp=0;
 35842  00B05C  6A2D               	clrf	_rgl+6,c
 35843                           
 35844                           ; BSR set to: 0
 35845                           ;rgl.c: 1902: rgl.del1s=0;
 35846  00B05E  9C27               	bcf	_rgl,6,c
 35847                           
 35848                           ; BSR set to: 0
 35849  00B060  0012               	return	
 35850  00B062                     __end_of_StartMCW2:
 35851                           	opt stack 0
 35852                           tblptru	equ	0xFF8
 35853                           tblptrh	equ	0xFF7
 35854                           tblptrl	equ	0xFF6
 35855                           tablat	equ	0xFF5
 35856                           prodh	equ	0xFF4
 35857                           prodl	equ	0xFF3
 35858                           intcon	equ	0xFF2
 35859                           postinc0	equ	0xFEE
 35860                           wreg	equ	0xFE8
 35861                           indf1	equ	0xFE7
 35862                           postinc1	equ	0xFE6
 35863                           postdec1	equ	0xFE5
 35864                           fsr1h	equ	0xFE2
 35865                           fsr1l	equ	0xFE1
 35866                           indf2	equ	0xFDF
 35867                           postinc2	equ	0xFDE
 35868                           postdec2	equ	0xFDD
 35869                           fsr2h	equ	0xFDA
 35870                           fsr2l	equ	0xFD9
 35871                           status	equ	0xFD8
 35872                           
 35873 ;; *************** function _ReadDataCW2 *****************
 35874 ;; Defined at:
 35875 ;;		line 2017 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 35876 ;; Parameters:    Size  Location     Type
 35877 ;;		None
 35878 ;; Auto vars:     Size  Location     Type
 35879 ;;		None
 35880 ;; Return value:  Size  Location     Type
 35881 ;;		None               void
 35882 ;; Registers used:
 35883 ;;		None
 35884 ;; Tracked objects:
 35885 ;;		On entry : F/0
 35886 ;;		On exit  : F/0
 35887 ;;		Unchanged: FFFFFFF0/0
 35888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35893 ;;Total ram usage:        0 bytes
 35894 ;; Hardware stack levels used:    1
 35895 ;; Hardware stack levels required when called:    4
 35896 ;; This function calls:
 35897 ;;		Nothing
 35898 ;; This function is called by:
 35899 ;;		_Moduluj
 35900 ;; This function uses a non-reentrant model
 35901 ;;
 35902                           
 35903                           	psect	text156
 35904  00B474                     __ptext156:
 35905                           	opt stack 0
 35906  00B474                     _ReadDataCW2:
 35907                           	opt stack 25
 35908                           
 35909                           ; BSR set to: 0
 35910                           ;rgl.c: 2018: rgl.x_t=DtCW.DCW;
 35911                           
 35912                           ; BSR set to: 0
 35913  00B474  C0D6  F029         	movff	_DtCW+7,_rgl+2
 35914                           
 35915                           ;rgl.c: 2019: rgl.x_f=DtCO.DCO;
 35916  00B478  C0EC  F02A         	movff	_DtCO+8,_rgl+3
 35917                           
 35918                           ;rgl.c: 2020: rgl.x_dt=DtCW.dDCW;
 35919  00B47C  C0D7  F02B         	movff	_DtCW+8,_rgl+4
 35920                           
 35921                           ;rgl.c: 2021: rgl.x_df=DtCO.dDCO;
 35922  00B480  C0ED  F02C         	movff	_DtCO+9,_rgl+5
 35923                           
 35924                           ; BSR set to: 0
 35925  00B484  0012               	return	
 35926  00B486                     __end_of_ReadDataCW2:
 35927                           	opt stack 0
 35928                           tblptru	equ	0xFF8
 35929                           tblptrh	equ	0xFF7
 35930                           tblptrl	equ	0xFF6
 35931                           tablat	equ	0xFF5
 35932                           prodh	equ	0xFF4
 35933                           prodl	equ	0xFF3
 35934                           intcon	equ	0xFF2
 35935                           postinc0	equ	0xFEE
 35936                           wreg	equ	0xFE8
 35937                           indf1	equ	0xFE7
 35938                           postinc1	equ	0xFE6
 35939                           postdec1	equ	0xFE5
 35940                           fsr1h	equ	0xFE2
 35941                           fsr1l	equ	0xFE1
 35942                           indf2	equ	0xFDF
 35943                           postinc2	equ	0xFDE
 35944                           postdec2	equ	0xFDD
 35945                           fsr2h	equ	0xFDA
 35946                           fsr2l	equ	0xFD9
 35947                           status	equ	0xFD8
 35948                           
 35949 ;; *************** function _ModToCW2 *****************
 35950 ;; Defined at:
 35951 ;;		line 1971 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 35952 ;; Parameters:    Size  Location     Type
 35953 ;;		None
 35954 ;; Auto vars:     Size  Location     Type
 35955 ;;		None
 35956 ;; Return value:  Size  Location     Type
 35957 ;;		None               void
 35958 ;; Registers used:
 35959 ;;		cstack
 35960 ;; Tracked objects:
 35961 ;;		On entry : F/0
 35962 ;;		On exit  : F/0
 35963 ;;		Unchanged: FFFFFFF0/0
 35964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35969 ;;Total ram usage:        0 bytes
 35970 ;; Hardware stack levels used:    1
 35971 ;; Hardware stack levels required when called:    5
 35972 ;; This function calls:
 35973 ;;		_ClrMod2
 35974 ;; This function is called by:
 35975 ;;		_Moduluj
 35976 ;; This function uses a non-reentrant model
 35977 ;;
 35978                           
 35979                           	psect	text157
 35980  00B58A                     __ptext157:
 35981                           	opt stack 0
 35982  00B58A                     _ModToCW2:
 35983                           	opt stack 24
 35984                           
 35985                           ; BSR set to: 0
 35986                           ;rgl.c: 1972: rgl.btcw=1;
 35987                           
 35988                           ; BSR set to: 0
 35989  00B58A  8227               	bsf	_rgl,1,c
 35990                           
 35991                           ;rgl.c: 1973: if(rgl.btco)
 35992  00B58C  A027               	btfss	_rgl,0,c
 35993  00B58E  0012               	return	
 35994                           
 35995                           ; BSR set to: 0
 35996                           ;rgl.c: 1974: {
 35997                           ;rgl.c: 1975: rgl.btco=0;
 35998  00B590  9027               	bcf	_rgl,0,c
 35999                           
 36000                           ; BSR set to: 0
 36001                           ;rgl.c: 1976: ClrMod2();
 36002  00B592  EFA5  F05A         	goto	_ClrMod2	;wreg free
 36003  00B596                     __end_of_ModToCW2:
 36004                           	opt stack 0
 36005                           tblptru	equ	0xFF8
 36006                           tblptrh	equ	0xFF7
 36007                           tblptrl	equ	0xFF6
 36008                           tablat	equ	0xFF5
 36009                           prodh	equ	0xFF4
 36010                           prodl	equ	0xFF3
 36011                           intcon	equ	0xFF2
 36012                           postinc0	equ	0xFEE
 36013                           wreg	equ	0xFE8
 36014                           indf1	equ	0xFE7
 36015                           postinc1	equ	0xFE6
 36016                           postdec1	equ	0xFE5
 36017                           fsr1h	equ	0xFE2
 36018                           fsr1l	equ	0xFE1
 36019                           indf2	equ	0xFDF
 36020                           postinc2	equ	0xFDE
 36021                           postdec2	equ	0xFDD
 36022                           fsr2h	equ	0xFDA
 36023                           fsr2l	equ	0xFD9
 36024                           status	equ	0xFD8
 36025                           
 36026 ;; *************** function _ModZgCW2 *****************
 36027 ;; Defined at:
 36028 ;;		line 2026 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 36029 ;; Parameters:    Size  Location     Type
 36030 ;;		None
 36031 ;; Auto vars:     Size  Location     Type
 36032 ;;  m               4    1[BANK2 ] long 
 36033 ;;  p               1    0[BANK2 ] unsigned char 
 36034 ;; Return value:  Size  Location     Type
 36035 ;;		None               void
 36036 ;; Registers used:
 36037 ;;		wreg, status,2, status,0, cstack
 36038 ;; Tracked objects:
 36039 ;;		On entry : F/0
 36040 ;;		On exit  : D/0
 36041 ;;		Unchanged: FFFFFFF0/0
 36042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36044 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36045 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36046 ;;      Totals:         0       5       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36047 ;;Total ram usage:       10 bytes
 36048 ;; Hardware stack levels used:    1
 36049 ;; Hardware stack levels required when called:    5
 36050 ;; This function calls:
 36051 ;;		_Tnizsza
 36052 ;;		_FirstPCW2
 36053 ;;		___wmul
 36054 ;;		___aldiv
 36055 ;;		___lmul
 36056 ;; This function is called by:
 36057 ;;		_Moduluj
 36058 ;; This function uses a non-reentrant model
 36059 ;;
 36060                           
 36061                           	psect	text158
 36062  004F7A                     __ptext158:
 36063                           	opt stack 0
 36064  004F7A                     _ModZgCW2:
 36065                           	opt stack 24
 36066                           
 36067                           ; BSR set to: 0
 36068                           ;rgl.c: 2027: signed long m;
 36069                           ;rgl.c: 2028: unsigned char p;
 36070                           ;rgl.c: 2029: static unsigned char pop;
 36071                           ;rgl.c: 2031: if(Tnizsza(10))
 36072                           
 36073                           ; BSR set to: 0
 36074  004F7A  0E0A               	movlw	10
 36075  004F7C  EC8F  F059         	call	_Tnizsza
 36076  004F80  E305               	bnc	l34644
 36077                           
 36078                           ; BSR set to: 0
 36079                           ;rgl.c: 2032: {
 36080                           ;rgl.c: 2033: pop=20;
 36081  004F82  0E14               	movlw	20
 36082  004F84  0101               	movlb	1	; () banked
 36083  004F86  6FA9               	movwf	ModZgCW2@pop& (0+255),b
 36084                           
 36085                           ; BSR set to: 1
 36086                           ;rgl.c: 2034: FirstPCW2();
 36087  004F88  EC99  F055         	call	_FirstPCW2	;wreg free
 36088  004F8C                     l34644:
 36089                           
 36090                           ; BSR set to: 0
 36091                           ;rgl.c: 2035: }
 36092                           ;rgl.c: 2036: if(rgl.fz)
 36093  004F8C  A427               	btfss	_rgl,2,c
 36094  004F8E  D00C               	goto	l34650
 36095                           
 36096                           ; BSR set to: 0
 36097                           ;rgl.c: 2037: {
 36098                           ;rgl.c: 2038: if(Tnizsza(2))
 36099  004F90  0E02               	movlw	2
 36100  004F92  EC8F  F059         	call	_Tnizsza
 36101  004F96  A0D8               	btfss	status,0,c
 36102  004F98  0012               	return	
 36103                           
 36104                           ; BSR set to: 0
 36105                           ;rgl.c: 2039: {
 36106                           ;rgl.c: 2040: rgl.xmod=PWM.BufPWM;
 36107  004F9A  C094  F02F         	movff	_PWM+1,_rgl+8	;volatile
 36108                           
 36109                           ;rgl.c: 2041: rgl.srp=0;
 36110  004F9E  6A2E               	clrf	_rgl+7,c
 36111                           
 36112                           ;rgl.c: 2042: rgl.ytmp=0;
 36113  004FA0  6A2D               	clrf	_rgl+6,c
 36114                           
 36115                           ;rgl.c: 2043: rgl.del1s=0;
 36116  004FA2  9C27               	bcf	_rgl,6,c
 36117                           
 36118                           ;rgl.c: 2044: pop=0;
 36119  004FA4  0101               	movlb	1	; () banked
 36120  004FA6  6BA9               	clrf	ModZgCW2@pop& (0+255),b
 36121  004FA8                     l34650:
 36122                           
 36123                           ;rgl.c: 2047: }
 36124                           ;rgl.c: 2048: if(!Tnizsza(1))
 36125  004FA8  0E01               	movlw	1
 36126  004FAA  EC8F  F059         	call	_Tnizsza
 36127  004FAE  E222               	bc	l34668
 36128                           
 36129                           ;rgl.c: 2049: {
 36130                           ;rgl.c: 2050: rgl.fz=1;
 36131  004FB0  8427               	bsf	_rgl,2,c
 36132                           
 36133                           ;rgl.c: 2051: rgl.fast_up=0;
 36134  004FB2  9827               	bcf	_rgl,4,c
 36135                           
 36136                           ;rgl.c: 2052: rgl.med_up=0;
 36137  004FB4  9627               	bcf	_rgl,3,c
 36138                           
 36139                           ;rgl.c: 2053: rgl.srp=PWM.BufPWM+pop;
 36140  004FB6  0100               	movlb	0	; () banked
 36141  004FB8  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 36142  004FBA  0101               	movlb	1	; () banked
 36143  004FBC  25A9               	addwf	ModZgCW2@pop& (0+255),w,b
 36144  004FBE  6E2E               	movwf	_rgl+7,c
 36145                           
 36146                           ;rgl.c: 2054: rgl.xmod=PWM.BufPWM+pop;
 36147  004FC0  0100               	movlb	0	; () banked
 36148  004FC2  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 36149  004FC4  0101               	movlb	1	; () banked
 36150  004FC6  25A9               	addwf	ModZgCW2@pop& (0+255),w,b
 36151  004FC8  6E2F               	movwf	_rgl+8,c
 36152                           
 36153                           ; BSR set to: 1
 36154                           ;rgl.c: 2055: pop=0;
 36155  004FCA  6BA9               	clrf	ModZgCW2@pop& (0+255),b
 36156                           
 36157                           ; BSR set to: 1
 36158                           ;rgl.c: 2056: if(PWM.MMAXCW>PWM.MGMOD)
 36159  004FCC  0100               	movlb	0	; () banked
 36160  004FCE  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 36161  004FD0  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 36162  004FD2  D008               	goto	l34664
 36163                           
 36164                           ; BSR set to: 0
 36165                           ;rgl.c: 2057: {
 36166                           ;rgl.c: 2058: if(rgl.xmod>PWM.MGMOD)
 36167  004FD4  502F               	movf	_rgl+8,w,c
 36168  004FD6  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 36169  004FD8  0012               	return	
 36170                           
 36171                           ; BSR set to: 0
 36172                           ;rgl.c: 2059: {
 36173                           ;rgl.c: 2060: rgl.srp=PWM.MGMOD;
 36174  004FDA  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 36175                           
 36176                           ;rgl.c: 2061: rgl.xmod=PWM.MGMOD;
 36177  004FDE  C09D  F02F         	movff	_PWM+10,_rgl+8	;volatile
 36178  004FE2  0012               	return	
 36179  004FE4                     l34664:
 36180                           
 36181                           ; BSR set to: 0
 36182                           ;rgl.c: 2064: else
 36183                           ;rgl.c: 2065: {
 36184                           ;rgl.c: 2066: if(rgl.xmod>PWM.MMAXCW)
 36185  004FE4  502F               	movf	_rgl+8,w,c
 36186  004FE6  61B1               	cpfslt	(_PWM+30)& (0+255),b	;volatile
 36187  004FE8  0012               	return	
 36188                           
 36189                           ; BSR set to: 0
 36190                           ;rgl.c: 2067: {
 36191                           ;rgl.c: 2068: rgl.srp=PWM.MMAXCW;
 36192  004FEA  C0B1  F02E         	movff	_PWM+30,_rgl+7	;volatile
 36193                           
 36194                           ;rgl.c: 2069: rgl.xmod=PWM.MMAXCW;
 36195  004FEE  C0B1  F02F         	movff	_PWM+30,_rgl+8	;volatile
 36196  004FF2  0012               	return	
 36197  004FF4                     l34668:
 36198                           
 36199                           ;rgl.c: 2073: }
 36200                           ;rgl.c: 2074: if(rgl.xmod>=PWM.MDMOD) m=(rgl.xmod-PWM.MDMOD)*10;
 36201  004FF4  0100               	movlb	0	; () banked
 36202  004FF6  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 36203  004FF8  5C2F               	subwf	_rgl+8,w,c
 36204  004FFA  E316               	bnc	l3466
 36205                           
 36206                           ; BSR set to: 0
 36207  004FFC  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 36208  004FFE  5C2F               	subwf	_rgl+8,w,c
 36209  005000  6E1E               	movwf	?___wmul,c
 36210  005002  6A1F               	clrf	?___wmul+1,c
 36211  005004  A0D8               	btfss	status,0,c
 36212  005006  061F               	decf	?___wmul+1,f,c
 36213  005008  6A21               	clrf	?___wmul+3,c
 36214  00500A  0E0A               	movlw	10
 36215  00500C  6E20               	movwf	?___wmul+2,c
 36216  00500E  EC9C  F056         	call	___wmul	;wreg free
 36217  005012  0102               	movlb	2	; () banked
 36218  005014  C01E  F2F1         	movff	?___wmul,ModZgCW2@m
 36219  005018  C01F  F2F2         	movff	?___wmul+1,ModZgCW2@m+1
 36220  00501C  0E00               	movlw	0
 36221  00501E  BFF2               	btfsc	(ModZgCW2@m+1)& (0+255),7,b
 36222  005020  0EFF               	movlw	-1
 36223  005022  6FF3               	movwf	(ModZgCW2@m+2)& (0+255),b
 36224  005024  6FF4               	movwf	(ModZgCW2@m+3)& (0+255),b
 36225  005026  D003               	goto	l34672
 36226  005028                     l3466:
 36227                           
 36228                           ; BSR set to: 0
 36229                           ;rgl.c: 2075: else m=0;
 36230  005028  0102               	movlb	2	; () banked
 36231  00502A  6BF1               	clrf	ModZgCW2@m& (0+255),b
 36232  00502C  D8C2               	call	PL242	;call to abstracted procedure
 36233  00502E                     l34672:
 36234                           
 36235                           ; BSR set to: 2
 36236                           ;rgl.c: 2076: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
 36237  00502E  C2F1  F01E         	movff	ModZgCW2@m,?___aldiv
 36238  005032  C2F2  F01F         	movff	ModZgCW2@m+1,?___aldiv+1
 36239  005036  C2F3  F020         	movff	ModZgCW2@m+2,?___aldiv+2
 36240  00503A  C2F4  F021         	movff	ModZgCW2@m+3,?___aldiv+3
 36241  00503E  0100               	movlb	0	; () banked
 36242  005040  51DD               	movf	(_DtCW+14)& (0+255),w,b
 36243  005042  C0DC  F0F9         	movff	_DtCW+13,??_ModZgCW2
 36244  005046  6BFA               	clrf	(??_ModZgCW2+1)& (0+255),b
 36245  005048  5FF9               	subwf	??_ModZgCW2& (0+255),f,b
 36246  00504A  0E00               	movlw	0
 36247  00504C  5BFA               	subwfb	(??_ModZgCW2+1)& (0+255),f,b
 36248  00504E  C0F9  F022         	movff	??_ModZgCW2,?___aldiv+4
 36249  005052  C0FA  F023         	movff	??_ModZgCW2+1,?___aldiv+5
 36250  005056  BE23               	btfsc	?___aldiv+5,7,c
 36251  005058  0EFF               	movlw	-1
 36252  00505A  6E24               	movwf	?___aldiv+6,c
 36253  00505C  6E25               	movwf	?___aldiv+7,c
 36254  00505E  ECE3  F042         	call	___aldiv	;wreg free
 36255  005062  C01E  F2F1         	movff	?___aldiv,ModZgCW2@m
 36256  005066  C01F  F2F2         	movff	?___aldiv+1,ModZgCW2@m+1
 36257  00506A  C020  F2F3         	movff	?___aldiv+2,ModZgCW2@m+2
 36258  00506E  C021  F2F4         	movff	?___aldiv+3,ModZgCW2@m+3
 36259                           
 36260                           ;rgl.c: 2077: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
 36261  005072  C2F1  F01E         	movff	ModZgCW2@m,?___lmul
 36262  005076  C2F2  F01F         	movff	ModZgCW2@m+1,?___lmul+1
 36263  00507A  C2F3  F020         	movff	ModZgCW2@m+2,?___lmul+2
 36264  00507E  C2F4  F021         	movff	ModZgCW2@m+3,?___lmul+3
 36265  005082  51DD               	movf	(_DtCW+14)& (0+255),w,b
 36266  005084  C0DB  F0F9         	movff	_DtCW+12,??_ModZgCW2
 36267  005088  6BFA               	clrf	(??_ModZgCW2+1)& (0+255),b
 36268  00508A  5FF9               	subwf	??_ModZgCW2& (0+255),f,b
 36269  00508C  0E00               	movlw	0
 36270  00508E  5BFA               	subwfb	(??_ModZgCW2+1)& (0+255),f,b
 36271  005090  C0F9  F022         	movff	??_ModZgCW2,?___lmul+4
 36272  005094  C0FA  F023         	movff	??_ModZgCW2+1,?___lmul+5
 36273  005098  BE23               	btfsc	?___lmul+5,7,c
 36274  00509A  0EFF               	movlw	-1
 36275  00509C  6E24               	movwf	?___lmul+6,c
 36276  00509E  6E25               	movwf	?___lmul+7,c
 36277  0050A0  ECD2  F050         	call	___lmul	;wreg free
 36278  0050A4  C01E  F2F1         	movff	?___lmul,ModZgCW2@m
 36279  0050A8  C01F  F2F2         	movff	?___lmul+1,ModZgCW2@m+1
 36280  0050AC  C020  F2F3         	movff	?___lmul+2,ModZgCW2@m+2
 36281  0050B0  C021  F2F4         	movff	?___lmul+3,ModZgCW2@m+3
 36282                           
 36283                           ;rgl.c: 2078: if(m<0) m=0;
 36284  0050B4  0102               	movlb	2	; () banked
 36285  0050B6  AFF4               	btfss	(ModZgCW2@m+3)& (0+255),7,b
 36286  0050B8  D002               	goto	l34678
 36287                           
 36288                           ; BSR set to: 2
 36289  0050BA  6BF1               	clrf	ModZgCW2@m& (0+255),b
 36290  0050BC  D87A               	call	PL242	;call to abstracted procedure
 36291  0050BE                     l34678:
 36292                           
 36293                           ; BSR set to: 2
 36294                           ;rgl.c: 2079: m=m/10+PWM.MDMOD;
 36295  0050BE  C2F1  F01E         	movff	ModZgCW2@m,?___aldiv
 36296  0050C2  C2F2  F01F         	movff	ModZgCW2@m+1,?___aldiv+1
 36297  0050C6  C2F3  F020         	movff	ModZgCW2@m+2,?___aldiv+2
 36298  0050CA  C2F4  F021         	movff	ModZgCW2@m+3,?___aldiv+3
 36299  0050CE  0E0A               	movlw	10
 36300  0050D0  6E22               	movwf	?___aldiv+4,c
 36301  0050D2  0E00               	movlw	0
 36302  0050D4  6A23               	clrf	?___aldiv+5,c
 36303  0050D6  6A24               	clrf	?___aldiv+6,c
 36304  0050D8  6A25               	clrf	?___aldiv+7,c
 36305  0050DA  ECE3  F042         	call	___aldiv	;wreg free
 36306  0050DE  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 36307  0050E0  241E               	addwf	?___aldiv,w,c
 36308  0050E2  0102               	movlb	2	; () banked
 36309  0050E4  6FF1               	movwf	ModZgCW2@m& (0+255),b
 36310  0050E6  0E00               	movlw	0
 36311  0050E8  201F               	addwfc	?___aldiv+1,w,c
 36312  0050EA  6FF2               	movwf	(ModZgCW2@m+1)& (0+255),b
 36313  0050EC  0E00               	movlw	0
 36314  0050EE  2020               	addwfc	?___aldiv+2,w,c
 36315  0050F0  6FF3               	movwf	(ModZgCW2@m+2)& (0+255),b
 36316  0050F2  0E00               	movlw	0
 36317  0050F4  2021               	addwfc	?___aldiv+3,w,c
 36318  0050F6  6FF4               	movwf	(ModZgCW2@m+3)& (0+255),b
 36319                           
 36320                           ; BSR set to: 2
 36321                           ;rgl.c: 2080: if(m>0xff)
 36322  0050F8  51F4               	movf	(ModZgCW2@m+3)& (0+255),w,b
 36323  0050FA  0A80               	xorlw	128
 36324  0050FC  0F80               	addlw	128
 36325  0050FE  E108               	bnz	u65275
 36326  005100  0E00               	movlw	0
 36327  005102  5DF3               	subwf	(ModZgCW2@m+2)& (0+255),w,b
 36328  005104  E105               	bnz	u65275
 36329  005106  0E01               	movlw	1
 36330  005108  5DF2               	subwf	(ModZgCW2@m+1)& (0+255),w,b
 36331  00510A  E102               	bnz	u65275
 36332  00510C  0E00               	movlw	0
 36333  00510E  5DF1               	subwf	ModZgCW2@m& (0+255),w,b
 36334  005110                     u65275:
 36335  005110  E304               	bnc	l3469
 36336                           
 36337                           ; BSR set to: 2
 36338                           ;rgl.c: 2081: {
 36339                           ;rgl.c: 2082: rgl.fz=0;
 36340  005112  9427               	bcf	_rgl,2,c
 36341                           
 36342                           ;rgl.c: 2083: rgl.tmp_pwm=rgl.xmod;
 36343  005114  C02F  F030         	movff	_rgl+8,_rgl+9
 36344                           
 36345                           ;rgl.c: 2084: return;
 36346  005118  0012               	return	
 36347  00511A                     l3469:
 36348                           
 36349                           ; BSR set to: 2
 36350                           ;rgl.c: 2085: }
 36351                           ;rgl.c: 2086: if(rgl.fz&&(rgl.xmod>m))
 36352  00511A  A427               	btfss	_rgl,2,c
 36353  00511C  D01F               	goto	l3470
 36354                           
 36355                           ; BSR set to: 2
 36356  00511E  C02F  F0F9         	movff	_rgl+8,??_ModZgCW2
 36357  005122  0100               	movlb	0	; () banked
 36358  005124  6BFA               	clrf	(??_ModZgCW2+1)& (0+255),b
 36359  005126  6BFB               	clrf	(??_ModZgCW2+2)& (0+255),b
 36360  005128  6BFC               	clrf	(??_ModZgCW2+3)& (0+255),b
 36361  00512A  0102               	movlb	2	; () banked
 36362  00512C  51F4               	movf	(ModZgCW2@m+3)& (0+255),w,b
 36363  00512E  0A80               	xorlw	128
 36364  005130  0100               	movlb	0	; () banked
 36365  005132  6FFD               	movwf	(??_ModZgCW2+4)& (0+255),b
 36366  005134  51F9               	movf	??_ModZgCW2& (0+255),w,b
 36367  005136  0102               	movlb	2	; () banked
 36368  005138  5DF1               	subwf	ModZgCW2@m& (0+255),w,b
 36369  00513A  0100               	movlb	0	; () banked
 36370  00513C  51FA               	movf	(??_ModZgCW2+1)& (0+255),w,b
 36371  00513E  0102               	movlb	2	; () banked
 36372  005140  59F2               	subwfb	(ModZgCW2@m+1)& (0+255),w,b
 36373  005142  0100               	movlb	0	; () banked
 36374  005144  51FB               	movf	(??_ModZgCW2+2)& (0+255),w,b
 36375  005146  0102               	movlb	2	; () banked
 36376  005148  59F3               	subwfb	(ModZgCW2@m+2)& (0+255),w,b
 36377  00514A  0100               	movlb	0	; () banked
 36378  00514C  51FC               	movf	(??_ModZgCW2+3)& (0+255),w,b
 36379  00514E  0A80               	xorlw	128
 36380  005150  59FD               	subwfb	(??_ModZgCW2+4)& (0+255),w,b
 36381  005152  E204               	bc	l3470
 36382                           
 36383                           ; BSR set to: 0
 36384                           ;rgl.c: 2087: rgl.srp=(rgl.xmod-m);
 36385  005154  0102               	movlb	2	; () banked
 36386  005156  51F1               	movf	ModZgCW2@m& (0+255),w,b
 36387  005158  5C2F               	subwf	_rgl+8,w,c
 36388  00515A  6E2E               	movwf	_rgl+7,c
 36389  00515C                     l3470:
 36390                           
 36391                           ;rgl.c: 2088: m+=rgl.srp;
 36392  00515C  502E               	movf	_rgl+7,w,c
 36393  00515E  0102               	movlb	2	; () banked
 36394  005160  27F1               	addwf	ModZgCW2@m& (0+255),f,b
 36395  005162  0E00               	movlw	0
 36396  005164  23F2               	addwfc	(ModZgCW2@m+1)& (0+255),f,b
 36397  005166  23F3               	addwfc	(ModZgCW2@m+2)& (0+255),f,b
 36398  005168  23F4               	addwfc	(ModZgCW2@m+3)& (0+255),f,b
 36399                           
 36400                           ;rgl.c: 2089: if(m>rgl.xmod) p=rgl.xmod;
 36401  00516A  C02F  F0F9         	movff	_rgl+8,??_ModZgCW2
 36402  00516E  0100               	movlb	0	; () banked
 36403  005170  6BFA               	clrf	(??_ModZgCW2+1)& (0+255),b
 36404  005172  6BFB               	clrf	(??_ModZgCW2+2)& (0+255),b
 36405  005174  6BFC               	clrf	(??_ModZgCW2+3)& (0+255),b
 36406  005176  51FC               	movf	(??_ModZgCW2+3)& (0+255),w,b
 36407  005178  0A80               	xorlw	128
 36408  00517A  6FFD               	movwf	(??_ModZgCW2+4)& (0+255),b
 36409  00517C  0102               	movlb	2	; () banked
 36410  00517E  51F1               	movf	ModZgCW2@m& (0+255),w,b
 36411  005180  0100               	movlb	0	; () banked
 36412  005182  5DF9               	subwf	??_ModZgCW2& (0+255),w,b
 36413  005184  0102               	movlb	2	; () banked
 36414  005186  51F2               	movf	(ModZgCW2@m+1)& (0+255),w,b
 36415  005188  0100               	movlb	0	; () banked
 36416  00518A  59FA               	subwfb	(??_ModZgCW2+1)& (0+255),w,b
 36417  00518C  0102               	movlb	2	; () banked
 36418  00518E  51F3               	movf	(ModZgCW2@m+2)& (0+255),w,b
 36419  005190  0100               	movlb	0	; () banked
 36420  005192  59FB               	subwfb	(??_ModZgCW2+2)& (0+255),w,b
 36421  005194  0102               	movlb	2	; () banked
 36422  005196  51F4               	movf	(ModZgCW2@m+3)& (0+255),w,b
 36423  005198  0A80               	xorlw	128
 36424  00519A  0100               	movlb	0	; () banked
 36425  00519C  59FD               	subwfb	(??_ModZgCW2+4)& (0+255),w,b
 36426  00519E  E203               	bc	l3471
 36427                           
 36428                           ; BSR set to: 0
 36429  0051A0  C02F  F2F0         	movff	_rgl+8,ModZgCW2@p
 36430  0051A4  D002               	goto	l3472
 36431  0051A6                     l3471:
 36432                           
 36433                           ; BSR set to: 0
 36434                           ;rgl.c: 2090: else p=m;
 36435  0051A6  C2F1  F2F0         	movff	ModZgCW2@m,ModZgCW2@p
 36436  0051AA                     l3472:
 36437                           
 36438                           ; BSR set to: 0
 36439                           ;rgl.c: 2091: rgl.fz=0;
 36440  0051AA  9427               	bcf	_rgl,2,c
 36441                           
 36442                           ;rgl.c: 2092: rgl.tmp_pwm=p;
 36443  0051AC  C2F0  F030         	movff	ModZgCW2@p,_rgl+9
 36444  0051B0  0012               	return	
 36445  0051B2                     __end_of_ModZgCW2:
 36446                           	opt stack 0
 36447  0051B2                     PL242:
 36448                           	opt stack 24
 36449  0051B2  6BF2               	clrf	(ModZgCW2@m+1)& (0+255),b
 36450  0051B4  6BF3               	clrf	(ModZgCW2@m+2)& (0+255),b
 36451  0051B6  6BF4               	clrf	(ModZgCW2@m+3)& (0+255),b
 36452  0051B8  0012               	return	
 36453  0051BA                     __end_ofPL242:
 36454                           	opt stack 0
 36455                           tblptru	equ	0xFF8
 36456                           tblptrh	equ	0xFF7
 36457                           tblptrl	equ	0xFF6
 36458                           tablat	equ	0xFF5
 36459                           prodh	equ	0xFF4
 36460                           prodl	equ	0xFF3
 36461                           intcon	equ	0xFF2
 36462                           postinc0	equ	0xFEE
 36463                           wreg	equ	0xFE8
 36464                           indf1	equ	0xFE7
 36465                           postinc1	equ	0xFE6
 36466                           postdec1	equ	0xFE5
 36467                           fsr1h	equ	0xFE2
 36468                           fsr1l	equ	0xFE1
 36469                           indf2	equ	0xFDF
 36470                           postinc2	equ	0xFDE
 36471                           postdec2	equ	0xFDD
 36472                           fsr2h	equ	0xFDA
 36473                           fsr2l	equ	0xFD9
 36474                           status	equ	0xFD8
 36475                           
 36476 ;; *************** function _ModDkCW2 *****************
 36477 ;; Defined at:
 36478 ;;		line 2097 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 36479 ;; Parameters:    Size  Location     Type
 36480 ;;		None
 36481 ;; Auto vars:     Size  Location     Type
 36482 ;;  m               4    8[BANK0 ] long 
 36483 ;;  ada             1    7[BANK0 ] char 
 36484 ;;  p               1    6[BANK0 ] unsigned char 
 36485 ;;  k               1    5[BANK0 ] unsigned char 
 36486 ;; Return value:  Size  Location     Type
 36487 ;;		None               void
 36488 ;; Registers used:
 36489 ;;		wreg, status,2, status,0, cstack
 36490 ;; Tracked objects:
 36491 ;;		On entry : D/0
 36492 ;;		On exit  : D/0
 36493 ;;		Unchanged: FFFFFFF0/0
 36494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36496 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36497 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36498 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36499 ;;Total ram usage:       12 bytes
 36500 ;; Hardware stack levels used:    1
 36501 ;; Hardware stack levels required when called:    5
 36502 ;; This function calls:
 36503 ;;		___wmul
 36504 ;; This function is called by:
 36505 ;;		_Moduluj
 36506 ;; This function uses a non-reentrant model
 36507 ;;
 36508                           
 36509                           	psect	text159
 36510  00888C                     __ptext159:
 36511                           	opt stack 0
 36512  00888C                     _ModDkCW2:
 36513                           	opt stack 24
 36514                           
 36515                           ;rgl.c: 2098: signed long m;
 36516                           ;rgl.c: 2099: signed char ada;
 36517                           ;rgl.c: 2100: unsigned char k,p;
 36518                           ;rgl.c: 2102: if(!rgl.fz) return;
 36519  00888C  A427               	btfss	_rgl,2,c
 36520  00888E  0012               	return	
 36521                           
 36522                           ;rgl.c: 2103: ada=DtCW.AC_CW-DtCW.DAD_CW;
 36523  008890  0100               	movlb	0	; () banked
 36524  008892  51DD               	movf	(_DtCW+14)& (0+255),w,b
 36525  008894  5DDB               	subwf	(_DtCW+12)& (0+255),w,b
 36526  008896  6FFA               	movwf	ModDkCW2@ada& (0+255),b
 36527                           
 36528                           ; BSR set to: 0
 36529                           ;rgl.c: 2104: k=9;
 36530  008898  0E09               	movlw	9
 36531  00889A  6FF8               	movwf	ModDkCW2@k& (0+255),b
 36532                           
 36533                           ; BSR set to: 0
 36534                           ;rgl.c: 2105: if(ada<0) k=8;
 36535  00889C  AFFA               	btfss	ModDkCW2@ada& (0+255),7,b
 36536  00889E  D002               	goto	l34702
 36537                           
 36538                           ; BSR set to: 0
 36539  0088A0  0E08               	movlw	8
 36540  0088A2  6FF8               	movwf	ModDkCW2@k& (0+255),b
 36541  0088A4                     l34702:
 36542                           
 36543                           ; BSR set to: 0
 36544                           ;rgl.c: 2106: m=rgl.srp+k*ada;
 36545  0088A4  C0F8  F01E         	movff	ModDkCW2@k,?___wmul
 36546  0088A8  6A1F               	clrf	?___wmul+1,c
 36547  0088AA  51FA               	movf	ModDkCW2@ada& (0+255),w,b
 36548  0088AC  6E20               	movwf	?___wmul+2,c
 36549  0088AE  6A21               	clrf	?___wmul+3,c
 36550  0088B0  BE20               	btfsc	?___wmul+2,7,c
 36551  0088B2  0621               	decf	?___wmul+3,f,c
 36552  0088B4  EC9C  F056         	call	___wmul	;wreg free
 36553  0088B8  502E               	movf	_rgl+7,w,c
 36554  0088BA  241E               	addwf	?___wmul,w,c
 36555  0088BC  6FF3               	movwf	??_ModDkCW2& (0+255),b
 36556  0088BE  0E00               	movlw	0
 36557  0088C0  201F               	addwfc	?___wmul+1,w,c
 36558  0088C2  6FF4               	movwf	(??_ModDkCW2+1)& (0+255),b
 36559  0088C4  C0F3  F0FB         	movff	??_ModDkCW2,ModDkCW2@m
 36560  0088C8  C0F4  F0FC         	movff	??_ModDkCW2+1,ModDkCW2@m+1
 36561  0088CC  0E00               	movlw	0
 36562  0088CE  BFFC               	btfsc	(ModDkCW2@m+1)& (0+255),7,b
 36563  0088D0  0EFF               	movlw	-1
 36564  0088D2  6FFD               	movwf	(ModDkCW2@m+2)& (0+255),b
 36565  0088D4  6FFE               	movwf	(ModDkCW2@m+3)& (0+255),b
 36566                           
 36567                           ; BSR set to: 0
 36568                           ;rgl.c: 2107: if(m>rgl.xmod) p=rgl.xmod;
 36569  0088D6  C02F  F0F3         	movff	_rgl+8,??_ModDkCW2
 36570  0088DA  6BF4               	clrf	(??_ModDkCW2+1)& (0+255),b
 36571  0088DC  6BF5               	clrf	(??_ModDkCW2+2)& (0+255),b
 36572  0088DE  6BF6               	clrf	(??_ModDkCW2+3)& (0+255),b
 36573  0088E0  51F6               	movf	(??_ModDkCW2+3)& (0+255),w,b
 36574  0088E2  0A80               	xorlw	128
 36575  0088E4  6FF7               	movwf	(??_ModDkCW2+4)& (0+255),b
 36576  0088E6  51FB               	movf	ModDkCW2@m& (0+255),w,b
 36577  0088E8  5DF3               	subwf	??_ModDkCW2& (0+255),w,b
 36578  0088EA  51FC               	movf	(ModDkCW2@m+1)& (0+255),w,b
 36579  0088EC  59F4               	subwfb	(??_ModDkCW2+1)& (0+255),w,b
 36580  0088EE  51FD               	movf	(ModDkCW2@m+2)& (0+255),w,b
 36581  0088F0  59F5               	subwfb	(??_ModDkCW2+2)& (0+255),w,b
 36582  0088F2  51FE               	movf	(ModDkCW2@m+3)& (0+255),w,b
 36583  0088F4  0A80               	xorlw	128
 36584  0088F6  59F7               	subwfb	(??_ModDkCW2+4)& (0+255),w,b
 36585  0088F8  E203               	bc	l34708
 36586                           
 36587                           ; BSR set to: 0
 36588  0088FA  C02F  F0F9         	movff	_rgl+8,ModDkCW2@p
 36589  0088FE  D017               	goto	l3479
 36590  008900                     l34708:
 36591                           
 36592                           ; BSR set to: 0
 36593                           ;rgl.c: 2108: else
 36594                           ;rgl.c: 2109: if(m<PWM.MDMOD) p=PWM.MDMOD;
 36595  008900  C09C  F0F3         	movff	_PWM+9,??_ModDkCW2	;volatile
 36596  008904  6BF4               	clrf	(??_ModDkCW2+1)& (0+255),b
 36597  008906  6BF5               	clrf	(??_ModDkCW2+2)& (0+255),b
 36598  008908  6BF6               	clrf	(??_ModDkCW2+3)& (0+255),b
 36599  00890A  51FE               	movf	(ModDkCW2@m+3)& (0+255),w,b
 36600  00890C  0A80               	xorlw	128
 36601  00890E  6FF7               	movwf	(??_ModDkCW2+4)& (0+255),b
 36602  008910  51F3               	movf	??_ModDkCW2& (0+255),w,b
 36603  008912  5DFB               	subwf	ModDkCW2@m& (0+255),w,b
 36604  008914  51F4               	movf	(??_ModDkCW2+1)& (0+255),w,b
 36605  008916  59FC               	subwfb	(ModDkCW2@m+1)& (0+255),w,b
 36606  008918  51F5               	movf	(??_ModDkCW2+2)& (0+255),w,b
 36607  00891A  59FD               	subwfb	(ModDkCW2@m+2)& (0+255),w,b
 36608  00891C  51F6               	movf	(??_ModDkCW2+3)& (0+255),w,b
 36609  00891E  0A80               	xorlw	128
 36610  008920  59F7               	subwfb	(??_ModDkCW2+4)& (0+255),w,b
 36611  008922  E203               	bc	l3480
 36612                           
 36613                           ; BSR set to: 0
 36614  008924  C09C  F0F9         	movff	_PWM+9,ModDkCW2@p	;volatile
 36615  008928  D002               	goto	l3479
 36616  00892A                     l3480:
 36617                           
 36618                           ; BSR set to: 0
 36619                           ;rgl.c: 2110: else p=m;
 36620  00892A  C0FB  F0F9         	movff	ModDkCW2@m,ModDkCW2@p
 36621  00892E                     l3479:
 36622                           
 36623                           ; BSR set to: 0
 36624                           ;rgl.c: 2111: rgl.tmp_pwm=p;
 36625  00892E  C0F9  F030         	movff	ModDkCW2@p,_rgl+9
 36626  008932  0012               	return	
 36627  008934                     __end_of_ModDkCW2:
 36628                           	opt stack 0
 36629                           tblptru	equ	0xFF8
 36630                           tblptrh	equ	0xFF7
 36631                           tblptrl	equ	0xFF6
 36632                           tablat	equ	0xFF5
 36633                           prodh	equ	0xFF4
 36634                           prodl	equ	0xFF3
 36635                           intcon	equ	0xFF2
 36636                           postinc0	equ	0xFEE
 36637                           wreg	equ	0xFE8
 36638                           indf1	equ	0xFE7
 36639                           postinc1	equ	0xFE6
 36640                           postdec1	equ	0xFE5
 36641                           fsr1h	equ	0xFE2
 36642                           fsr1l	equ	0xFE1
 36643                           indf2	equ	0xFDF
 36644                           postinc2	equ	0xFDE
 36645                           postdec2	equ	0xFDD
 36646                           fsr2h	equ	0xFDA
 36647                           fsr2l	equ	0xFD9
 36648                           status	equ	0xFD8
 36649                           
 36650 ;; *************** function _IncConstCW2 *****************
 36651 ;; Defined at:
 36652 ;;		line 1993 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 36653 ;; Parameters:    Size  Location     Type
 36654 ;;		None
 36655 ;; Auto vars:     Size  Location     Type
 36656 ;;		None
 36657 ;; Return value:  Size  Location     Type
 36658 ;;		None               void
 36659 ;; Registers used:
 36660 ;;		wreg, status,2, status,0, cstack
 36661 ;; Tracked objects:
 36662 ;;		On entry : E/1
 36663 ;;		On exit  : F/1
 36664 ;;		Unchanged: FFFFFFF0/0
 36665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36670 ;;Total ram usage:        0 bytes
 36671 ;; Hardware stack levels used:    1
 36672 ;; Hardware stack levels required when called:    5
 36673 ;; This function calls:
 36674 ;;		_TFrosnie
 36675 ;;		_Tstoi
 36676 ;; This function is called by:
 36677 ;;		_Moduluj
 36678 ;; This function uses a non-reentrant model
 36679 ;;
 36680                           
 36681                           	psect	text160
 36682  00B37A                     __ptext160:
 36683                           	opt stack 0
 36684  00B37A                     _IncConstCW2:
 36685                           	opt stack 24
 36686                           
 36687                           ;rgl.c: 1994: if(!TFrosnie(0))
 36688  00B37A  0E00               	movlw	0
 36689  00B37C  EC6B  F059         	call	_TFrosnie
 36690  00B380  E205               	bc	l3437
 36691                           
 36692                           ; BSR set to: 1
 36693                           ;rgl.c: 1995: {
 36694                           ;rgl.c: 1996: if(Tstoi()) rgl.ytmp++;
 36695  00B382  ECD7  F05A         	call	_Tstoi	;wreg free
 36696  00B386  E302               	bnc	l3437
 36697                           
 36698                           ; BSR set to: 1
 36699  00B388  2A2D               	incf	_rgl+6,f,c
 36700  00B38A  0012               	return	
 36701  00B38C                     l3437:
 36702                           
 36703                           ; BSR set to: 1
 36704                           ;rgl.c: 1997: else rgl.ytmp=0;
 36705  00B38C  6A2D               	clrf	_rgl+6,c
 36706                           
 36707                           ; BSR set to: 1
 36708  00B38E  0012               	return	
 36709  00B390                     __end_of_IncConstCW2:
 36710                           	opt stack 0
 36711                           tblptru	equ	0xFF8
 36712                           tblptrh	equ	0xFF7
 36713                           tblptrl	equ	0xFF6
 36714                           tablat	equ	0xFF5
 36715                           prodh	equ	0xFF4
 36716                           prodl	equ	0xFF3
 36717                           intcon	equ	0xFF2
 36718                           postinc0	equ	0xFEE
 36719                           wreg	equ	0xFE8
 36720                           indf1	equ	0xFE7
 36721                           postinc1	equ	0xFE6
 36722                           postdec1	equ	0xFE5
 36723                           fsr1h	equ	0xFE2
 36724                           fsr1l	equ	0xFE1
 36725                           indf2	equ	0xFDF
 36726                           postinc2	equ	0xFDE
 36727                           postdec2	equ	0xFDD
 36728                           fsr2h	equ	0xFDA
 36729                           fsr2l	equ	0xFD9
 36730                           status	equ	0xFD8
 36731                           
 36732 ;; *************** function _IncMaxCW2 *****************
 36733 ;; Defined at:
 36734 ;;		line 2313 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 36735 ;; Parameters:    Size  Location     Type
 36736 ;;		None
 36737 ;; Auto vars:     Size  Location     Type
 36738 ;;  k               1    0        unsigned char 
 36739 ;; Return value:  Size  Location     Type
 36740 ;;		None               void
 36741 ;; Registers used:
 36742 ;;		wreg, status,2, status,0, cstack
 36743 ;; Tracked objects:
 36744 ;;		On entry : F/1
 36745 ;;		On exit  : E/0
 36746 ;;		Unchanged: FFFFFFF0/0
 36747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36751 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36752 ;;Total ram usage:        3 bytes
 36753 ;; Hardware stack levels used:    1
 36754 ;; Hardware stack levels required when called:    5
 36755 ;; This function calls:
 36756 ;;		_Trosnie
 36757 ;;		_TFrosnie
 36758 ;; This function is called by:
 36759 ;;		_Moduluj
 36760 ;; This function uses a non-reentrant model
 36761 ;;
 36762                           
 36763                           	psect	text161
 36764  009C5C                     __ptext161:
 36765                           	opt stack 0
 36766  009C5C                     _IncMaxCW2:
 36767                           	opt stack 24
 36768                           
 36769                           ; BSR set to: 1
 36770                           ;rgl.c: 2314: unsigned char k;
 36771                           ;rgl.c: 2317: if(rgl.fz)
 36772                           
 36773                           ; BSR set to: 1
 36774  009C5C  A427               	btfss	_rgl,2,c
 36775  009C5E  D010               	goto	l34730
 36776                           
 36777                           ; BSR set to: 1
 36778                           ;rgl.c: 2318: {
 36779                           ;rgl.c: 2319: if(PWM.MMAXCW>PWM.MGMOD)
 36780  009C60  0100               	movlb	0	; () banked
 36781  009C62  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 36782  009C64  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 36783  009C66  D006               	goto	l34726
 36784                           
 36785                           ; BSR set to: 0
 36786                           ;rgl.c: 2320: {
 36787                           ;rgl.c: 2321: if(rgl.xmod>PWM.MGMOD) rgl.xmod=PWM.MGMOD;
 36788  009C68  502F               	movf	_rgl+8,w,c
 36789  009C6A  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 36790  009C6C  0012               	return	
 36791                           
 36792                           ; BSR set to: 0
 36793  009C6E  C09D  F02F         	movff	_PWM+10,_rgl+8	;volatile
 36794  009C72  0012               	return	
 36795  009C74                     l34726:
 36796                           
 36797                           ; BSR set to: 0
 36798                           ;rgl.c: 2323: else
 36799                           ;rgl.c: 2324: {
 36800                           ;rgl.c: 2325: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
 36801  009C74  502F               	movf	_rgl+8,w,c
 36802  009C76  61B1               	cpfslt	(_PWM+30)& (0+255),b	;volatile
 36803  009C78  0012               	return	
 36804                           
 36805                           ; BSR set to: 0
 36806  009C7A  C0B1  F02F         	movff	_PWM+30,_rgl+8	;volatile
 36807  009C7E  0012               	return	
 36808  009C80                     l34730:
 36809                           
 36810                           ; BSR set to: 1
 36811                           ;rgl.c: 2328: }
 36812                           ;rgl.c: 2330: if(Trosnie(1)||TFrosnie(1)) return;
 36813  009C80  0E01               	movlw	1
 36814  009C82  EC5F  F059         	call	_Trosnie
 36815  009C86  B0D8               	btfsc	status,0,c
 36816  009C88  0012               	return	
 36817                           
 36818                           ; BSR set to: 1
 36819  009C8A  0E01               	movlw	1
 36820  009C8C  EC6B  F059         	call	_TFrosnie
 36821  009C90  B0D8               	btfsc	status,0,c
 36822  009C92  0012               	return	
 36823                           
 36824                           ; BSR set to: 1
 36825                           ;rgl.c: 2332: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
 36826                           
 36827                           ; BSR set to: 1
 36828  009C94  502F               	movf	_rgl+8,w,c
 36829  009C96  6E1F               	movwf	??_IncMaxCW2& (0+255),c
 36830  009C98  6A20               	clrf	(??_IncMaxCW2+1)& (0+255),c
 36831  009C9A  0E05               	movlw	5
 36832  009C9C  261F               	addwf	??_IncMaxCW2,f,c
 36833  009C9E  0E00               	movlw	0
 36834  009CA0  2220               	addwfc	??_IncMaxCW2+1,f,c
 36835  009CA2  5020               	movf	??_IncMaxCW2+1,w,c
 36836  009CA4  0A80               	xorlw	128
 36837  009CA6  0F80               	addlw	-128
 36838  009CA8  0EF1               	movlw	241
 36839  009CAA  B4D8               	btfsc	status,2,c
 36840  009CAC  5C1F               	subwf	??_IncMaxCW2,w,c
 36841  009CAE  E303               	bnc	l34740
 36842                           
 36843                           ; BSR set to: 1
 36844  009CB0  0EF0               	movlw	240
 36845  009CB2  6E2F               	movwf	_rgl+8,c
 36846  009CB4  D002               	goto	l34742
 36847  009CB6                     l34740:
 36848                           
 36849                           ; BSR set to: 1
 36850                           ;rgl.c: 2333: else rgl.xmod+=k;
 36851  009CB6  0E05               	movlw	5
 36852  009CB8  262F               	addwf	_rgl+8,f,c
 36853  009CBA                     l34742:
 36854                           
 36855                           ; BSR set to: 1
 36856                           ;rgl.c: 2334: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
 36857  009CBA  502F               	movf	_rgl+8,w,c
 36858  009CBC  0100               	movlb	0	; () banked
 36859  009CBE  D7DB               	goto	L77
 36860  009CC0                     __end_of_IncMaxCW2:
 36861                           	opt stack 0
 36862                           tblptru	equ	0xFF8
 36863                           tblptrh	equ	0xFF7
 36864                           tblptrl	equ	0xFF6
 36865                           tablat	equ	0xFF5
 36866                           prodh	equ	0xFF4
 36867                           prodl	equ	0xFF3
 36868                           intcon	equ	0xFF2
 36869                           postinc0	equ	0xFEE
 36870                           wreg	equ	0xFE8
 36871                           indf1	equ	0xFE7
 36872                           postinc1	equ	0xFE6
 36873                           postdec1	equ	0xFE5
 36874                           fsr1h	equ	0xFE2
 36875                           fsr1l	equ	0xFE1
 36876                           indf2	equ	0xFDF
 36877                           postinc2	equ	0xFDE
 36878                           postdec2	equ	0xFDD
 36879                           fsr2h	equ	0xFDA
 36880                           fsr2l	equ	0xFD9
 36881                           status	equ	0xFD8
 36882                           
 36883 ;; *************** function _ModPruCW2 *****************
 36884 ;; Defined at:
 36885 ;;		line 2118 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 36886 ;; Parameters:    Size  Location     Type
 36887 ;;		None
 36888 ;; Auto vars:     Size  Location     Type
 36889 ;;  k               1    1[BANK0 ] char 
 36890 ;;  tmp             1    0[BANK0 ] unsigned char 
 36891 ;; Return value:  Size  Location     Type
 36892 ;;		None               void
 36893 ;; Registers used:
 36894 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 36895 ;; Tracked objects:
 36896 ;;		On entry : E/1
 36897 ;;		On exit  : E/0
 36898 ;;		Unchanged: FFFFFFF0/0
 36899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36901 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36902 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36903 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36904 ;;Total ram usage:        7 bytes
 36905 ;; Hardware stack levels used:    1
 36906 ;; Hardware stack levels required when called:    5
 36907 ;; This function calls:
 36908 ;;		_Tnizsza
 36909 ;;		_Trosnie
 36910 ;;		_TFrosnie
 36911 ;;		_TFmaleje
 36912 ;;		_TFstoi
 36913 ;;		_Twyzsza
 36914 ;;		_Trowna
 36915 ;;		_Tstoi
 36916 ;;		_Tmaleje
 36917 ;; This function is called by:
 36918 ;;		_Moduluj
 36919 ;; This function uses a non-reentrant model
 36920 ;;
 36921                           
 36922                           	psect	text162
 36923  0024F0                     __ptext162:
 36924                           	opt stack 0
 36925  0024F0                     _ModPruCW2:
 36926                           	opt stack 24
 36927                           
 36928                           ;rgl.c: 2119: static unsigned char l,m,o,p,q,r,s;
 36929                           ;rgl.c: 2120: unsigned char tmp;
 36930                           ;rgl.c: 2121: signed char k;
 36931                           ;rgl.c: 2122: if(!rgl.fz)
 36932  0024F0  B427               	btfsc	_rgl,2,c
 36933  0024F2  D077               	goto	l3498
 36934                           
 36935                           ;rgl.c: 2123: {
 36936                           ;rgl.c: 2124: l=0;
 36937  0024F4  0101               	movlb	1	; () banked
 36938  0024F6  6B96               	clrf	ModPruCW2@l& (0+255),b
 36939                           
 36940                           ;rgl.c: 2125: m=0;
 36941  0024F8  6B97               	clrf	ModPruCW2@m& (0+255),b
 36942                           
 36943                           ;rgl.c: 2126: o=0;
 36944  0024FA  6B98               	clrf	ModPruCW2@o& (0+255),b
 36945                           
 36946                           ;rgl.c: 2127: p=0;
 36947  0024FC  6B99               	clrf	ModPruCW2@p& (0+255),b
 36948                           
 36949                           ; BSR set to: 1
 36950                           ;rgl.c: 2128: if(q<255) q++;
 36951  0024FE  299A               	incf	ModPruCW2@q& (0+255),w,b
 36952  002500  A4D8               	btfss	status,2,c
 36953                           
 36954                           ; BSR set to: 1
 36955  002502  2B9A               	incf	ModPruCW2@q& (0+255),f,b
 36956                           
 36957                           ; BSR set to: 1
 36958                           ;rgl.c: 2129: if(s<255) s++;
 36959  002504  299C               	incf	ModPruCW2@s& (0+255),w,b
 36960  002506  A4D8               	btfss	status,2,c
 36961                           
 36962                           ; BSR set to: 1
 36963  002508  2B9C               	incf	ModPruCW2@s& (0+255),f,b
 36964                           
 36965                           ; BSR set to: 1
 36966                           ;rgl.c: 2130: if(DtCW._newPCW) s=0;
 36967  00250A  0100               	movlb	0	; () banked
 36968  00250C  A1D0               	btfss	(_DtCW+1)& (0+255),0,b
 36969  00250E  D002               	goto	l34762
 36970                           
 36971                           ; BSR set to: 0
 36972  002510  0101               	movlb	1	; () banked
 36973  002512  6B9C               	clrf	ModPruCW2@s& (0+255),b
 36974  002514                     l34762:
 36975                           
 36976                           ;rgl.c: 2131: if(Tnizsza(0))
 36977  002514  0E00               	movlw	0
 36978  002516  EC8F  F059         	call	_Tnizsza
 36979  00251A  A0D8               	btfss	status,0,c
 36980  00251C  0012               	return	
 36981                           
 36982                           ;rgl.c: 2132: {
 36983                           ;rgl.c: 2133: if(!Tnizsza(10))
 36984  00251E  0E0A               	movlw	10
 36985  002520  EC8F  F059         	call	_Tnizsza
 36986  002524  B0D8               	btfsc	status,0,c
 36987  002526  0012               	return	
 36988                           
 36989                           ;rgl.c: 2134: {
 36990                           ;rgl.c: 2135: k=0;
 36991  002528  0100               	movlb	0	; () banked
 36992  00252A  6BF4               	clrf	ModPruCW2@k& (0+255),b
 36993                           
 36994                           ; BSR set to: 0
 36995                           ;rgl.c: 2136: if((Trosnie(1)||TFrosnie(1))&&s>=1)
 36996  00252C  0E01               	movlw	1
 36997  00252E  EC5F  F059         	call	_Trosnie
 36998  002532  E204               	bc	l34772
 36999                           
 37000                           ; BSR set to: 0
 37001  002534  0E01               	movlw	1
 37002  002536  EC6B  F059         	call	_TFrosnie
 37003  00253A  E311               	bnc	l34784
 37004  00253C                     l34772:
 37005                           
 37006                           ; BSR set to: 0
 37007  00253C  0101               	movlb	1	; () banked
 37008  00253E  519C               	movf	ModPruCW2@s& (0+255),w,b
 37009  002540  E00E               	bz	l34784
 37010                           
 37011                           ; BSR set to: 1
 37012                           ;rgl.c: 2137: {
 37013                           ;rgl.c: 2138: s=0;
 37014  002542  6B9C               	clrf	ModPruCW2@s& (0+255),b
 37015                           
 37016                           ; BSR set to: 1
 37017                           ;rgl.c: 2139: k=10;
 37018  002544  0E0A               	movlw	10
 37019  002546  0100               	movlb	0	; () banked
 37020  002548  6FF4               	movwf	ModPruCW2@k& (0+255),b
 37021                           
 37022                           ; BSR set to: 0
 37023                           ;rgl.c: 2140: if(Trosnie(2)||TFrosnie(2)) k=8;
 37024  00254A  0E02               	movlw	2
 37025  00254C  EC5F  F059         	call	_Trosnie
 37026  002550  E204               	bc	l34782
 37027                           
 37028                           ; BSR set to: 0
 37029  002552  0E02               	movlw	2
 37030  002554  EC6B  F059         	call	_TFrosnie
 37031  002558  E31E               	bnc	l34802
 37032  00255A                     l34782:
 37033                           
 37034                           ; BSR set to: 0
 37035  00255A  0E08               	movlw	8
 37036  00255C  D00A               	goto	L78
 37037  00255E                     l34784:
 37038                           
 37039                           ;rgl.c: 2142: else
 37040                           ;rgl.c: 2143: if(TFmaleje(0)&&q>=1)
 37041  00255E  0E00               	movlw	0
 37042  002560  EC1A  F055         	call	_TFmaleje
 37043  002564  E308               	bnc	l34792
 37044  002566  0101               	movlb	1	; () banked
 37045  002568  519A               	movf	ModPruCW2@q& (0+255),w,b
 37046  00256A  E005               	bz	l34792
 37047                           
 37048                           ; BSR set to: 1
 37049                           ;rgl.c: 2144: {
 37050                           ;rgl.c: 2145: q=0;
 37051  00256C  6B9A               	clrf	ModPruCW2@q& (0+255),b
 37052                           
 37053                           ; BSR set to: 1
 37054                           ;rgl.c: 2146: k=6;
 37055  00256E  0E06               	movlw	6
 37056  002570  0100               	movlb	0	; () banked
 37057  002572                     L78:
 37058  002572  6FF4               	movwf	ModPruCW2@k& (0+255),b
 37059                           
 37060                           ;rgl.c: 2147: }else
 37061  002574  D010               	goto	l34802
 37062  002576                     l34792:
 37063                           
 37064                           ;rgl.c: 2148: if(TFstoi())
 37065  002576  ECE3  F05A         	call	_TFstoi	;wreg free
 37066  00257A  E30D               	bnc	l34802
 37067                           
 37068                           ;rgl.c: 2149: {
 37069                           ;rgl.c: 2150: if(r>=1)
 37070  00257C  0101               	movlb	1	; () banked
 37071  00257E  519B               	movf	ModPruCW2@r& (0+255),w,b
 37072  002580  E006               	bz	l3514
 37073                           
 37074                           ; BSR set to: 1
 37075                           ;rgl.c: 2151: {
 37076                           ;rgl.c: 2152: k=6;
 37077  002582  0E06               	movlw	6
 37078  002584  0100               	movlb	0	; () banked
 37079  002586  6FF4               	movwf	ModPruCW2@k& (0+255),b
 37080                           
 37081                           ; BSR set to: 0
 37082                           ;rgl.c: 2153: r=0;
 37083  002588  0101               	movlb	1	; () banked
 37084  00258A  6B9B               	clrf	ModPruCW2@r& (0+255),b
 37085                           
 37086                           ;rgl.c: 2154: }
 37087  00258C  D004               	goto	l34802
 37088  00258E                     l3514:
 37089                           
 37090                           ; BSR set to: 1
 37091                           ;rgl.c: 2155: else
 37092                           ;rgl.c: 2156: {
 37093                           ;rgl.c: 2157: k=0;
 37094  00258E  0100               	movlb	0	; () banked
 37095  002590  6BF4               	clrf	ModPruCW2@k& (0+255),b
 37096                           
 37097                           ; BSR set to: 0
 37098                           ;rgl.c: 2158: r++;
 37099  002592  0101               	movlb	1	; () banked
 37100  002594  2B9B               	incf	ModPruCW2@r& (0+255),f,b
 37101  002596                     l34802:
 37102                           
 37103                           ;rgl.c: 2159: }
 37104                           ;rgl.c: 2160: }
 37105                           ;rgl.c: 2161: rgl.ytmp=0;
 37106  002596  6A2D               	clrf	_rgl+6,c
 37107                           
 37108                           ;rgl.c: 2162: if(PWM.BufPWM>rgl.xmod) return;
 37109  002598  0100               	movlb	0	; () banked
 37110  00259A  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 37111  00259C  602F               	cpfslt	_rgl+8,c
 37112  00259E  D001               	goto	l34808
 37113  0025A0  0012               	return	
 37114  0025A2                     l34808:
 37115                           
 37116                           ; BSR set to: 0
 37117                           ;rgl.c: 2163: tmp=rgl.xmod-PWM.BufPWM;
 37118  0025A2  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 37119  0025A4  5C2F               	subwf	_rgl+8,w,c
 37120  0025A6  6FF3               	movwf	ModPruCW2@tmp& (0+255),b
 37121                           
 37122                           ;rgl.c: 2164: if(k>tmp) k=tmp;
 37123  0025A8  51F3               	movf	ModPruCW2@tmp& (0+255),w,b
 37124  0025AA  80D8               	bsf	status,0,c
 37125  0025AC  84D8               	bsf	status,2,c
 37126  0025AE  AFF4               	btfss	ModPruCW2@k& (0+255),7,b
 37127  0025B0  5DF4               	subwf	ModPruCW2@k& (0+255),w,b
 37128  0025B2  A0D8               	btfss	status,0,c
 37129  0025B4  84D8               	bsf	status,2,c
 37130  0025B6  A4D8               	btfss	status,2,c
 37131                           
 37132                           ; BSR set to: 0
 37133  0025B8  C0F3  F0F4         	movff	ModPruCW2@tmp,ModPruCW2@k
 37134                           
 37135                           ; BSR set to: 0
 37136                           ;rgl.c: 2167: if(PWM.MMAXCW>PWM.MGMOD)
 37137  0025BC  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 37138  0025BE  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 37139  0025C0  D00A               	goto	l34820
 37140                           
 37141                           ; BSR set to: 0
 37142                           ;rgl.c: 2168: {
 37143                           ;rgl.c: 2169: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
 37144  0025C2  502E               	movf	_rgl+7,w,c
 37145  0025C4  D90E               	call	PL98	;call to abstracted procedure
 37146  0025C6  D8F7               	call	PL64	;call to abstracted procedure
 37147  0025C8  E203               	bc	l34818
 37148                           
 37149                           ; BSR set to: 0
 37150  0025CA  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 37151  0025CE  0012               	return	
 37152  0025D0                     l34818:
 37153                           
 37154                           ; BSR set to: 0
 37155                           ;rgl.c: 2170: else rgl.srp+=k;
 37156  0025D0  51F4               	movf	ModPruCW2@k& (0+255),w,b
 37157  0025D2  262E               	addwf	_rgl+7,f,c
 37158  0025D4  0012               	return	
 37159  0025D6                     l34820:
 37160                           
 37161                           ; BSR set to: 0
 37162                           ;rgl.c: 2172: else
 37163                           ;rgl.c: 2173: {
 37164                           ;rgl.c: 2174: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
 37165  0025D6  D8FA               	call	PL82	;call to abstracted procedure
 37166  0025D8  D8EE               	call	PL64	;call to abstracted procedure
 37167  0025DA  E2FA               	bc	l34818
 37168                           
 37169                           ; BSR set to: 0
 37170  0025DC  C0B1  F02E         	movff	_PWM+30,_rgl+7	;volatile
 37171  0025E0  0012               	return	
 37172  0025E2                     l3498:
 37173                           
 37174                           ;rgl.c: 2183: else
 37175                           ;rgl.c: 2184: {
 37176                           ;rgl.c: 2185: q=0;
 37177  0025E2  0101               	movlb	1	; () banked
 37178  0025E4  6B9A               	clrf	ModPruCW2@q& (0+255),b
 37179                           
 37180                           ;rgl.c: 2186: r=0;
 37181  0025E6  6B9B               	clrf	ModPruCW2@r& (0+255),b
 37182                           
 37183                           ;rgl.c: 2187: s=0;
 37184  0025E8  6B9C               	clrf	ModPruCW2@s& (0+255),b
 37185                           
 37186                           ; BSR set to: 1
 37187                           ;rgl.c: 2188: if(m<255) m++;
 37188  0025EA  2997               	incf	ModPruCW2@m& (0+255),w,b
 37189  0025EC  A4D8               	btfss	status,2,c
 37190                           
 37191                           ; BSR set to: 1
 37192  0025EE  2B97               	incf	ModPruCW2@m& (0+255),f,b
 37193                           
 37194                           ; BSR set to: 1
 37195                           ;rgl.c: 2189: if(p<255) p++;
 37196  0025F0  2999               	incf	ModPruCW2@p& (0+255),w,b
 37197  0025F2  A4D8               	btfss	status,2,c
 37198                           
 37199                           ; BSR set to: 1
 37200  0025F4  2B99               	incf	ModPruCW2@p& (0+255),f,b
 37201                           
 37202                           ; BSR set to: 1
 37203                           ;rgl.c: 2190: if(o<255) o++;
 37204  0025F6  2998               	incf	ModPruCW2@o& (0+255),w,b
 37205  0025F8  A4D8               	btfss	status,2,c
 37206                           
 37207                           ; BSR set to: 1
 37208  0025FA  2B98               	incf	ModPruCW2@o& (0+255),f,b
 37209                           
 37210                           ; BSR set to: 1
 37211                           ;rgl.c: 2191: if(DtCW.DAD_CW>DtCW.AC_CW)
 37212  0025FC  0100               	movlb	0	; () banked
 37213  0025FE  51DD               	movf	(_DtCW+14)& (0+255),w,b
 37214  002600  61DB               	cpfslt	(_DtCW+12)& (0+255),b
 37215  002602  D07B               	goto	l3531
 37216                           
 37217                           ; BSR set to: 0
 37218                           ;rgl.c: 2192: {
 37219                           ;rgl.c: 2193: k=0;
 37220  002604  6BF4               	clrf	ModPruCW2@k& (0+255),b
 37221                           
 37222                           ; BSR set to: 0
 37223                           ;rgl.c: 2194: if(TFmaleje(0)&&!Twyzsza(0)&&p>=2)
 37224  002606  0E00               	movlw	0
 37225  002608  EC1A  F055         	call	_TFmaleje
 37226  00260C  E30F               	bnc	l34854
 37227                           
 37228                           ; BSR set to: 0
 37229  00260E  0E00               	movlw	0
 37230  002610  EC34  F055         	call	_Twyzsza
 37231  002614  E20B               	bc	l34854
 37232                           
 37233                           ; BSR set to: 0
 37234  002616  0E01               	movlw	1
 37235  002618  0101               	movlb	1	; () banked
 37236  00261A  6599               	cpfsgt	ModPruCW2@p& (0+255),b
 37237  00261C  D007               	goto	l34854
 37238                           
 37239                           ; BSR set to: 1
 37240                           ;rgl.c: 2195: {
 37241                           ;rgl.c: 2196: p=0;
 37242  00261E  6B99               	clrf	ModPruCW2@p& (0+255),b
 37243                           
 37244                           ;rgl.c: 2197: o=0;
 37245  002620  6B98               	clrf	ModPruCW2@o& (0+255),b
 37246                           
 37247                           ;rgl.c: 2198: l=0;
 37248  002622  6B96               	clrf	ModPruCW2@l& (0+255),b
 37249                           
 37250                           ;rgl.c: 2199: m=0;
 37251  002624  6B97               	clrf	ModPruCW2@m& (0+255),b
 37252                           
 37253                           ;rgl.c: 2200: k=-1;
 37254  002626  0100               	movlb	0	; () banked
 37255  002628  69F4               	setf	ModPruCW2@k& (0+255),b
 37256                           
 37257                           ;rgl.c: 2201: }
 37258  00262A  D041               	goto	l34892
 37259  00262C                     l34854:
 37260                           
 37261                           ;rgl.c: 2202: else
 37262                           ;rgl.c: 2203: if(TFrosnie(0)&&o>=2)
 37263  00262C  0E00               	movlw	0
 37264  00262E  EC6B  F059         	call	_TFrosnie
 37265  002632  E310               	bnc	l34866
 37266  002634  0E01               	movlw	1
 37267  002636  0101               	movlb	1	; () banked
 37268  002638  6598               	cpfsgt	ModPruCW2@o& (0+255),b
 37269  00263A  D00C               	goto	l34866
 37270                           
 37271                           ; BSR set to: 1
 37272                           ;rgl.c: 2204: {
 37273                           ;rgl.c: 2205: o=0;
 37274  00263C  6B98               	clrf	ModPruCW2@o& (0+255),b
 37275                           
 37276                           ;rgl.c: 2206: p=0;
 37277  00263E  6B99               	clrf	ModPruCW2@p& (0+255),b
 37278                           
 37279                           ;rgl.c: 2207: l=0;
 37280  002640  6B96               	clrf	ModPruCW2@l& (0+255),b
 37281                           
 37282                           ;rgl.c: 2208: m=0;
 37283  002642  6B97               	clrf	ModPruCW2@m& (0+255),b
 37284                           
 37285                           ; BSR set to: 1
 37286                           ;rgl.c: 2209: k=2;
 37287  002644  0E02               	movlw	2
 37288  002646  0100               	movlb	0	; () banked
 37289  002648  6FF4               	movwf	ModPruCW2@k& (0+255),b
 37290                           
 37291                           ; BSR set to: 0
 37292                           ;rgl.c: 2210: if(Trowna()) k=1;
 37293  00264A  ECDD  F05A         	call	_Trowna	;wreg free
 37294  00264E  E32F               	bnc	l34892
 37295                           
 37296                           ; BSR set to: 0
 37297  002650  0E01               	movlw	1
 37298  002652  D00E               	goto	L79
 37299  002654                     l34866:
 37300                           
 37301                           ;rgl.c: 2212: else
 37302                           ;rgl.c: 2213: if(Trosnie(0)&&m>=2)
 37303  002654  0E00               	movlw	0
 37304  002656  EC5F  F059         	call	_Trosnie
 37305  00265A  E30C               	bnc	l34874
 37306  00265C  0E01               	movlw	1
 37307  00265E  0101               	movlb	1	; () banked
 37308  002660  6597               	cpfsgt	ModPruCW2@m& (0+255),b
 37309  002662  D008               	goto	l34874
 37310                           
 37311                           ; BSR set to: 1
 37312                           ;rgl.c: 2214: {
 37313                           ;rgl.c: 2215: p=0;
 37314  002664  6B99               	clrf	ModPruCW2@p& (0+255),b
 37315                           
 37316                           ;rgl.c: 2216: o=0;
 37317  002666  6B98               	clrf	ModPruCW2@o& (0+255),b
 37318                           
 37319                           ;rgl.c: 2217: l=0;
 37320  002668  6B96               	clrf	ModPruCW2@l& (0+255),b
 37321                           
 37322                           ;rgl.c: 2218: m=0;
 37323  00266A  6B97               	clrf	ModPruCW2@m& (0+255),b
 37324                           
 37325                           ; BSR set to: 1
 37326                           ;rgl.c: 2219: k=3;
 37327  00266C  0E03               	movlw	3
 37328  00266E  0100               	movlb	0	; () banked
 37329  002670                     L79:
 37330  002670  6FF4               	movwf	ModPruCW2@k& (0+255),b
 37331                           
 37332                           ;rgl.c: 2220: }
 37333  002672  D01D               	goto	l34892
 37334  002674                     l34874:
 37335                           
 37336                           ;rgl.c: 2221: else
 37337                           ;rgl.c: 2222: if(Twyzsza(1))
 37338  002674  0E01               	movlw	1
 37339  002676  EC34  F055         	call	_Twyzsza
 37340  00267A  E312               	bnc	l34888
 37341                           
 37342                           ;rgl.c: 2223: {
 37343                           ;rgl.c: 2224: if(Tstoi()&&TFstoi())
 37344  00267C  ECD7  F05A         	call	_Tstoi	;wreg free
 37345  002680  E316               	bnc	l34892
 37346  002682  ECE3  F05A         	call	_TFstoi	;wreg free
 37347  002686  E313               	bnc	l34892
 37348                           
 37349                           ;rgl.c: 2225: {
 37350                           ;rgl.c: 2226: if(l>=2)
 37351  002688  0E01               	movlw	1
 37352  00268A  0101               	movlb	1	; () banked
 37353  00268C  6596               	cpfsgt	ModPruCW2@l& (0+255),b
 37354  00268E  D00B               	goto	l3541
 37355                           
 37356                           ; BSR set to: 1
 37357                           ;rgl.c: 2227: {
 37358                           ;rgl.c: 2228: k=1;
 37359  002690  0100               	movlb	0	; () banked
 37360  002692  6FF4               	movwf	ModPruCW2@k& (0+255),b
 37361                           
 37362                           ; BSR set to: 0
 37363                           ;rgl.c: 2229: if(Twyzsza(3)) k=2;
 37364  002694  0E03               	movlw	3
 37365  002696  EC34  F055         	call	_Twyzsza
 37366  00269A  E302               	bnc	l34888
 37367                           
 37368                           ; BSR set to: 0
 37369  00269C  0E02               	movlw	2
 37370  00269E  6FF4               	movwf	ModPruCW2@k& (0+255),b
 37371  0026A0                     l34888:
 37372                           
 37373                           ;rgl.c: 2230: l=0;
 37374  0026A0  0101               	movlb	1	; () banked
 37375  0026A2  6B96               	clrf	ModPruCW2@l& (0+255),b
 37376                           
 37377                           ;rgl.c: 2231: }
 37378  0026A4  D004               	goto	l34892
 37379  0026A6                     l3541:
 37380                           
 37381                           ; BSR set to: 1
 37382                           ;rgl.c: 2232: else
 37383                           ;rgl.c: 2233: {
 37384                           ;rgl.c: 2234: k=0;
 37385  0026A6  0100               	movlb	0	; () banked
 37386  0026A8  6BF4               	clrf	ModPruCW2@k& (0+255),b
 37387                           
 37388                           ; BSR set to: 0
 37389                           ;rgl.c: 2235: l++;
 37390  0026AA  0101               	movlb	1	; () banked
 37391  0026AC  2B96               	incf	ModPruCW2@l& (0+255),f,b
 37392  0026AE                     l34892:
 37393                           
 37394                           ;rgl.c: 2239: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM.MDMOD;
 37395  0026AE  0100               	movlb	0	; () banked
 37396  0026B0  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 37397  0026B2  6E22               	movwf	??_ModPruCW2& (0+255),c
 37398  0026B4  6A23               	clrf	(??_ModPruCW2+1)& (0+255),c
 37399  0026B6  51F4               	movf	ModPruCW2@k& (0+255),w,b
 37400  0026B8  5C2E               	subwf	_rgl+7,w,c
 37401  0026BA  6E24               	movwf	(??_ModPruCW2+2)& (0+255),c
 37402  0026BC  6AE8               	clrf	wreg,c
 37403  0026BE  B0D8               	btfsc	status,0,c
 37404  0026C0  2AE8               	incf	wreg,f,c
 37405  0026C2  AFF4               	btfss	ModPruCW2@k& (0+255),7,b
 37406  0026C4  06E8               	decf	wreg,f,c
 37407  0026C6  6E25               	movwf	(??_ModPruCW2+3)& (0+255),c
 37408  0026C8  5025               	movf	??_ModPruCW2+3,w,c
 37409  0026CA  0A80               	xorlw	128
 37410  0026CC  6E26               	movwf	(??_ModPruCW2+4)& (0+255),c
 37411  0026CE  5022               	movf	??_ModPruCW2,w,c
 37412  0026D0  5C24               	subwf	??_ModPruCW2+2,w,c
 37413  0026D2  5023               	movf	??_ModPruCW2+1,w,c
 37414  0026D4  0A80               	xorlw	128
 37415  0026D6  5826               	subwfb	(??_ModPruCW2+4)& (0+255),w,c
 37416  0026D8  E203               	bc	l34896
 37417                           
 37418                           ; BSR set to: 0
 37419  0026DA  C09C  F02E         	movff	_PWM+9,_rgl+7	;volatile
 37420  0026DE  D002               	goto	l34898
 37421  0026E0                     l34896:
 37422                           
 37423                           ; BSR set to: 0
 37424                           ;rgl.c: 2240: else rgl.srp-=k;
 37425  0026E0  51F4               	movf	ModPruCW2@k& (0+255),w,b
 37426  0026E2  5E2E               	subwf	_rgl+7,f,c
 37427  0026E4                     l34898:
 37428                           
 37429                           ; BSR set to: 0
 37430                           ;rgl.c: 2241: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
 37431  0026E4  502E               	movf	_rgl+7,w,c
 37432  0026E6  61B1               	cpfslt	(_PWM+30)& (0+255),b	;volatile
 37433  0026E8  D002               	goto	l34902
 37434  0026EA                     
 37435                           ; BSR set to: 0
 37436  0026EA  C0B1  F02E         	movff	_PWM+30,_rgl+7	;volatile
 37437  0026EE                     l34902:
 37438                           
 37439                           ; BSR set to: 0
 37440                           ;rgl.c: 2242: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
 37441  0026EE  502E               	movf	_rgl+7,w,c
 37442  0026F0  602F               	cpfslt	_rgl+8,c
 37443  0026F2  0012               	return	
 37444                           
 37445                           ; BSR set to: 0
 37446  0026F4  C02E  F02F         	movff	_rgl+7,_rgl+8
 37447  0026F8  0012               	return	
 37448  0026FA                     l3531:
 37449                           
 37450                           ; BSR set to: 0
 37451                           ;rgl.c: 2245: else
 37452                           ;rgl.c: 2246: {
 37453                           ;rgl.c: 2247: k=0;
 37454  0026FA  6BF4               	clrf	ModPruCW2@k& (0+255),b
 37455                           
 37456                           ; BSR set to: 0
 37457                           ;rgl.c: 2248: if(TFrosnie(0)&&o>=2)
 37458  0026FC  0E00               	movlw	0
 37459  0026FE  EC6B  F059         	call	_TFrosnie
 37460  002702  E310               	bnc	l34920
 37461                           
 37462                           ; BSR set to: 0
 37463  002704  0E01               	movlw	1
 37464  002706  0101               	movlb	1	; () banked
 37465  002708  6598               	cpfsgt	ModPruCW2@o& (0+255),b
 37466  00270A  D00C               	goto	l34920
 37467                           
 37468                           ; BSR set to: 1
 37469                           ;rgl.c: 2249: {
 37470                           ;rgl.c: 2250: o=0;
 37471  00270C  6B98               	clrf	ModPruCW2@o& (0+255),b
 37472                           
 37473                           ;rgl.c: 2251: p=0;
 37474  00270E  6B99               	clrf	ModPruCW2@p& (0+255),b
 37475                           
 37476                           ;rgl.c: 2252: l=0;
 37477  002710  6B96               	clrf	ModPruCW2@l& (0+255),b
 37478                           
 37479                           ;rgl.c: 2253: m=0;
 37480  002712  6B97               	clrf	ModPruCW2@m& (0+255),b
 37481                           
 37482                           ; BSR set to: 1
 37483                           ;rgl.c: 2254: k=-3;
 37484  002714  0EFD               	movlw	253
 37485  002716  0100               	movlb	0	; () banked
 37486  002718  6FF4               	movwf	ModPruCW2@k& (0+255),b
 37487                           
 37488                           ; BSR set to: 0
 37489                           ;rgl.c: 2255: if(Trowna()) k=-2;
 37490  00271A  ECDD  F05A         	call	_Trowna	;wreg free
 37491  00271E  E339               	bnc	l34958
 37492                           
 37493                           ; BSR set to: 0
 37494  002720  0EFE               	movlw	254
 37495  002722  D01E               	goto	L81
 37496  002724                     l34920:
 37497                           
 37498                           ;rgl.c: 2257: else
 37499                           ;rgl.c: 2258: if(TFmaleje(0)&&p>=2)
 37500  002724  0E00               	movlw	0
 37501  002726  EC1A  F055         	call	_TFmaleje
 37502  00272A  E30B               	bnc	l34932
 37503  00272C  0E01               	movlw	1
 37504  00272E  0101               	movlb	1	; () banked
 37505  002730  6599               	cpfsgt	ModPruCW2@p& (0+255),b
 37506  002732  D007               	goto	l34932
 37507                           
 37508                           ; BSR set to: 1
 37509                           ;rgl.c: 2259: {
 37510                           ;rgl.c: 2260: p=0;
 37511  002734  6B99               	clrf	ModPruCW2@p& (0+255),b
 37512                           
 37513                           ;rgl.c: 2261: o=0;
 37514                           
 37515                           ;rgl.c: 2262: l=0;
 37516                           
 37517                           ;rgl.c: 2263: m=0;
 37518                           
 37519                           ; BSR set to: 1
 37520                           ;rgl.c: 2264: k=2;
 37521  002736  D85F               	call	PL208	;call to abstracted procedure
 37522                           
 37523                           ; BSR set to: 0
 37524                           ;rgl.c: 2265: if(Trowna()) k=1;
 37525  002738  ECDD  F05A         	call	_Trowna	;wreg free
 37526  00273C  E32A               	bnc	l34958
 37527                           
 37528                           ; BSR set to: 0
 37529  00273E  0E01               	movlw	1
 37530  002740  D00F               	goto	L81
 37531  002742                     l34932:
 37532                           
 37533                           ;rgl.c: 2267: else
 37534                           ;rgl.c: 2268: if(Tmaleje(0)&&m>=2)
 37535  002742  0E00               	movlw	0
 37536  002744  EC00  F055         	call	_Tmaleje
 37537  002748  E30D               	bnc	l34944
 37538  00274A  0E01               	movlw	1
 37539  00274C  0101               	movlb	1	; () banked
 37540  00274E  6597               	cpfsgt	ModPruCW2@m& (0+255),b
 37541  002750  D009               	goto	l34944
 37542                           
 37543                           ; BSR set to: 1
 37544                           ;rgl.c: 2269: {
 37545                           ;rgl.c: 2270: p=0;
 37546  002752  6B99               	clrf	ModPruCW2@p& (0+255),b
 37547                           
 37548                           ;rgl.c: 2271: o=0;
 37549                           
 37550                           ;rgl.c: 2272: l=0;
 37551                           
 37552                           ;rgl.c: 2273: m=0;
 37553                           
 37554                           ; BSR set to: 1
 37555                           ;rgl.c: 2274: k=2;
 37556  002754  D850               	call	PL208	;call to abstracted procedure
 37557                           
 37558                           ; BSR set to: 0
 37559                           ;rgl.c: 2275: if(Tnizsza(0)) k=3;
 37560  002756  0E00               	movlw	0
 37561  002758  EC8F  F059         	call	_Tnizsza
 37562  00275C  E31A               	bnc	l34958
 37563                           
 37564                           ; BSR set to: 0
 37565  00275E  0E03               	movlw	3
 37566  002760                     L81:
 37567  002760  6FF4               	movwf	ModPruCW2@k& (0+255),b
 37568  002762  D017               	goto	l34958
 37569  002764                     l34944:
 37570                           
 37571                           ;rgl.c: 2277: else
 37572                           ;rgl.c: 2278: if(Tnizsza(1))
 37573  002764  0E01               	movlw	1
 37574  002766  EC8F  F059         	call	_Tnizsza
 37575  00276A  E30C               	bnc	l34954
 37576                           
 37577                           ;rgl.c: 2279: {
 37578                           ;rgl.c: 2280: if(Tstoi()&&TFstoi())
 37579  00276C  ECD7  F05A         	call	_Tstoi	;wreg free
 37580  002770  E310               	bnc	l34958
 37581  002772  ECE3  F05A         	call	_TFstoi	;wreg free
 37582  002776  E30D               	bnc	l34958
 37583                           
 37584                           ;rgl.c: 2281: {
 37585                           ;rgl.c: 2282: if(l>=3)
 37586  002778  0E02               	movlw	2
 37587  00277A  0101               	movlb	1	; () banked
 37588  00277C  6596               	cpfsgt	ModPruCW2@l& (0+255),b
 37589  00277E  D005               	goto	l3561
 37590                           
 37591                           ; BSR set to: 1
 37592                           ;rgl.c: 2283: {
 37593                           ;rgl.c: 2284: k=2;
 37594  002780  0100               	movlb	0	; () banked
 37595  002782  6FF4               	movwf	ModPruCW2@k& (0+255),b
 37596  002784                     l34954:
 37597                           
 37598                           ;rgl.c: 2285: l=0;
 37599  002784  0101               	movlb	1	; () banked
 37600  002786  6B96               	clrf	ModPruCW2@l& (0+255),b
 37601                           
 37602                           ;rgl.c: 2286: }
 37603  002788  D004               	goto	l34958
 37604  00278A                     l3561:
 37605                           
 37606                           ; BSR set to: 1
 37607                           ;rgl.c: 2287: else
 37608                           ;rgl.c: 2288: {
 37609                           ;rgl.c: 2289: k=0;
 37610  00278A  0100               	movlb	0	; () banked
 37611  00278C  6BF4               	clrf	ModPruCW2@k& (0+255),b
 37612                           
 37613                           ; BSR set to: 0
 37614                           ;rgl.c: 2290: l++;
 37615  00278E  0101               	movlb	1	; () banked
 37616  002790  2B96               	incf	ModPruCW2@l& (0+255),f,b
 37617  002792                     l34958:
 37618                           
 37619                           ;rgl.c: 2294: if(PWM.MMAXCW>PWM.MGMOD)
 37620  002792  0100               	movlb	0	; () banked
 37621  002794  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 37622  002796  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 37623  002798  D00A               	goto	l34966
 37624                           
 37625                           ; BSR set to: 0
 37626                           ;rgl.c: 2295: {
 37627                           ;rgl.c: 2296: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
 37628  00279A  502E               	movf	_rgl+7,w,c
 37629  00279C  D822               	call	PL98	;call to abstracted procedure
 37630  00279E  D80B               	call	PL64	;call to abstracted procedure
 37631  0027A0  E203               	bc	l34964
 37632                           
 37633                           ; BSR set to: 0
 37634  0027A2  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 37635  0027A6  D7A3               	goto	l34902
 37636  0027A8                     l34964:
 37637                           
 37638                           ; BSR set to: 0
 37639                           ;rgl.c: 2297: else rgl.srp+=k;
 37640  0027A8  51F4               	movf	ModPruCW2@k& (0+255),w,b
 37641  0027AA  262E               	addwf	_rgl+7,f,c
 37642  0027AC  D7A0               	goto	l34902
 37643  0027AE                     l34966:
 37644                           
 37645                           ; BSR set to: 0
 37646                           ;rgl.c: 2299: else
 37647                           ;rgl.c: 2300: {
 37648                           ;rgl.c: 2301: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
 37649  0027AE  D80E               	call	PL82	;call to abstracted procedure
 37650  0027B0  D802               	call	PL64	;call to abstracted procedure
 37651  0027B2  E2FA               	bc	l34964
 37652  0027B4  D79A               	goto	L82
 37653  0027B6                     __end_of_ModPruCW2:
 37654                           	opt stack 0
 37655  0027B6                     PL64:
 37656                           	opt stack 24
 37657  0027B6  6E24               	movwf	(??_ModPruCW2+2)& (0+255),c
 37658  0027B8  6A25               	clrf	(??_ModPruCW2+3)& (0+255),c
 37659  0027BA  5025               	movf	??_ModPruCW2+3,w,c
 37660  0027BC  0A80               	xorlw	128
 37661  0027BE  6E26               	movwf	(??_ModPruCW2+4)& (0+255),c
 37662  0027C0  5022               	movf	??_ModPruCW2,w,c
 37663  0027C2  5C24               	subwf	??_ModPruCW2+2,w,c
 37664  0027C4  5023               	movf	??_ModPruCW2+1,w,c
 37665  0027C6  0A80               	xorlw	128
 37666  0027C8  5826               	subwfb	(??_ModPruCW2+4)& (0+255),w,c
 37667  0027CA  0012               	return	
 37668  0027CC                     __end_ofPL64:
 37669                           	opt stack 0
 37670  0027CC                     PL82:
 37671                           	opt stack 24
 37672  0027CC  502E               	movf	_rgl+7,w,c
 37673  0027CE  25F4               	addwf	ModPruCW2@k& (0+255),w,b
 37674  0027D0  6E22               	movwf	??_ModPruCW2& (0+255),c
 37675  0027D2  6AE8               	clrf	wreg,c
 37676  0027D4  B0D8               	btfsc	status,0,c
 37677  0027D6  2AE8               	incf	wreg,f,c
 37678  0027D8  BFF4               	btfsc	ModPruCW2@k& (0+255),7,b
 37679  0027DA  06E8               	decf	wreg,f,c
 37680  0027DC  6E23               	movwf	(??_ModPruCW2+1)& (0+255),c
 37681  0027DE  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 37682  0027E0  0012               	return	
 37683  0027E2                     __end_ofPL82:
 37684                           	opt stack 0
 37685  0027E2                     PL98:
 37686                           	opt stack 24
 37687  0027E2  25F4               	addwf	ModPruCW2@k& (0+255),w,b
 37688  0027E4  6E22               	movwf	??_ModPruCW2& (0+255),c
 37689  0027E6  6AE8               	clrf	wreg,c
 37690  0027E8  B0D8               	btfsc	status,0,c
 37691  0027EA  2AE8               	incf	wreg,f,c
 37692  0027EC  BFF4               	btfsc	ModPruCW2@k& (0+255),7,b
 37693  0027EE  06E8               	decf	wreg,f,c
 37694  0027F0  6E23               	movwf	(??_ModPruCW2+1)& (0+255),c
 37695  0027F2  519D               	movf	(_PWM+10)& (0+255),w,b	;volatile
 37696  0027F4  0012               	return	
 37697  0027F6                     __end_ofPL98:
 37698                           	opt stack 0
 37699  0027F6                     PL208:
 37700                           	opt stack 24
 37701  0027F6  6B98               	clrf	ModPruCW2@o& (0+255),b
 37702  0027F8  6B96               	clrf	ModPruCW2@l& (0+255),b
 37703  0027FA  6B97               	clrf	ModPruCW2@m& (0+255),b
 37704  0027FC  0E02               	movlw	2
 37705  0027FE  0100               	movlb	0	; () banked
 37706  002800  6FF4               	movwf	ModPruCW2@k& (0+255),b
 37707  002802  0C02               	retlw	2
 37708  002804                     __end_ofPL208:
 37709                           	opt stack 0
 37710                           tblptru	equ	0xFF8
 37711                           tblptrh	equ	0xFF7
 37712                           tblptrl	equ	0xFF6
 37713                           tablat	equ	0xFF5
 37714                           prodh	equ	0xFF4
 37715                           prodl	equ	0xFF3
 37716                           intcon	equ	0xFF2
 37717                           postinc0	equ	0xFEE
 37718                           wreg	equ	0xFE8
 37719                           indf1	equ	0xFE7
 37720                           postinc1	equ	0xFE6
 37721                           postdec1	equ	0xFE5
 37722                           fsr1h	equ	0xFE2
 37723                           fsr1l	equ	0xFE1
 37724                           indf2	equ	0xFDF
 37725                           postinc2	equ	0xFDE
 37726                           postdec2	equ	0xFDD
 37727                           fsr2h	equ	0xFDA
 37728                           fsr2l	equ	0xFD9
 37729                           status	equ	0xFD8
 37730                           
 37731 ;; *************** function _ModPrzCW2 *****************
 37732 ;; Defined at:
 37733 ;;		line 2339 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 37734 ;; Parameters:    Size  Location     Type
 37735 ;;		None
 37736 ;; Auto vars:     Size  Location     Type
 37737 ;;		None
 37738 ;; Return value:  Size  Location     Type
 37739 ;;		None               void
 37740 ;; Registers used:
 37741 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 37742 ;; Tracked objects:
 37743 ;;		On entry : E/1
 37744 ;;		On exit  : E/1
 37745 ;;		Unchanged: FFFFFFF1/0
 37746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37751 ;;Total ram usage:        0 bytes
 37752 ;; Hardware stack levels used:    1
 37753 ;; Hardware stack levels required when called:    5
 37754 ;; This function calls:
 37755 ;;		_Tmaleje
 37756 ;;		_Twyzsza
 37757 ;;		_Tstoi
 37758 ;;		_TFmaleje
 37759 ;;		_Tnizsza
 37760 ;; This function is called by:
 37761 ;;		_Moduluj
 37762 ;; This function uses a non-reentrant model
 37763 ;;
 37764                           
 37765                           	psect	text163
 37766  00A2DC                     __ptext163:
 37767                           	opt stack 0
 37768  00A2DC                     _ModPrzCW2:
 37769                           	opt stack 24
 37770                           
 37771                           ;rgl.c: 2340: if(!rgl.nmod)
 37772  00A2DC  BA27               	btfsc	_rgl,5,c
 37773  00A2DE  D00B               	goto	l34984
 37774                           
 37775                           ;rgl.c: 2341: {
 37776                           ;rgl.c: 2342: if(!Tmaleje(0)&&Twyzsza(3))
 37777  00A2E0  0E00               	movlw	0
 37778  00A2E2  EC00  F055         	call	_Tmaleje
 37779  00A2E6  B0D8               	btfsc	status,0,c
 37780  00A2E8  0012               	return	
 37781  00A2EA  0E03               	movlw	3
 37782  00A2EC  EC34  F055         	call	_Twyzsza
 37783  00A2F0  B0D8               	btfsc	status,0,c
 37784                           
 37785                           ;rgl.c: 2343: {
 37786                           ;rgl.c: 2344: rgl.nmod=1;
 37787  00A2F2  8A27               	bsf	_rgl,5,c
 37788  00A2F4  0012               	return	
 37789  00A2F6                     l34984:
 37790                           
 37791                           ;rgl.c: 2347: else
 37792                           ;rgl.c: 2348: {
 37793                           ;rgl.c: 2349: if(!Twyzsza(3))
 37794  00A2F6  0E03               	movlw	3
 37795  00A2F8  EC34  F055         	call	_Twyzsza
 37796  00A2FC  B0D8               	btfsc	status,0,c
 37797  00A2FE  0012               	return	
 37798                           
 37799                           ;rgl.c: 2350: {
 37800                           ;rgl.c: 2351: if(Tmaleje(0)) rgl.nmod=0;
 37801  00A300  0E00               	movlw	0
 37802  00A302  EC00  F055         	call	_Tmaleje
 37803  00A306  B0D8               	btfsc	status,0,c
 37804  00A308  9A27               	bcf	_rgl,5,c
 37805                           
 37806                           ;rgl.c: 2352: if(Tstoi()&&TFmaleje(0)) rgl.nmod=0;
 37807  00A30A  ECD7  F05A         	call	_Tstoi	;wreg free
 37808  00A30E  E305               	bnc	l34996
 37809  00A310  0E00               	movlw	0
 37810  00A312  EC1A  F055         	call	_TFmaleje
 37811  00A316  B0D8               	btfsc	status,0,c
 37812  00A318  9A27               	bcf	_rgl,5,c
 37813  00A31A                     l34996:
 37814                           
 37815                           ;rgl.c: 2353: if(Tnizsza(3)) rgl.nmod=0;
 37816  00A31A  0E03               	movlw	3
 37817  00A31C  EC8F  F059         	call	_Tnizsza
 37818  00A320  B0D8               	btfsc	status,0,c
 37819  00A322  9A27               	bcf	_rgl,5,c
 37820  00A324  0012               	return	
 37821  00A326                     __end_of_ModPrzCW2:
 37822                           	opt stack 0
 37823                           tblptru	equ	0xFF8
 37824                           tblptrh	equ	0xFF7
 37825                           tblptrl	equ	0xFF6
 37826                           tablat	equ	0xFF5
 37827                           prodh	equ	0xFF4
 37828                           prodl	equ	0xFF3
 37829                           intcon	equ	0xFF2
 37830                           postinc0	equ	0xFEE
 37831                           wreg	equ	0xFE8
 37832                           indf1	equ	0xFE7
 37833                           postinc1	equ	0xFE6
 37834                           postdec1	equ	0xFE5
 37835                           fsr1h	equ	0xFE2
 37836                           fsr1l	equ	0xFE1
 37837                           indf2	equ	0xFDF
 37838                           postinc2	equ	0xFDE
 37839                           postdec2	equ	0xFDD
 37840                           fsr2h	equ	0xFDA
 37841                           fsr2l	equ	0xFD9
 37842                           status	equ	0xFD8
 37843                           
 37844 ;; *************** function _PropCO2 *****************
 37845 ;; Defined at:
 37846 ;;		line 2360 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 37847 ;; Parameters:    Size  Location     Type
 37848 ;;		None
 37849 ;; Auto vars:     Size  Location     Type
 37850 ;;		None
 37851 ;; Return value:  Size  Location     Type
 37852 ;;		None               void
 37853 ;; Registers used:
 37854 ;;		wreg, status,2, status,0, cstack
 37855 ;; Tracked objects:
 37856 ;;		On entry : E/1
 37857 ;;		On exit  : F/0
 37858 ;;		Unchanged: FFFFFFF0/0
 37859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37864 ;;Total ram usage:        0 bytes
 37865 ;; Hardware stack levels used:    1
 37866 ;; Hardware stack levels required when called:    6
 37867 ;; This function calls:
 37868 ;;		_WriteOPWM
 37869 ;; This function is called by:
 37870 ;;		_Moduluj
 37871 ;; This function uses a non-reentrant model
 37872 ;;
 37873                           
 37874                           	psect	text164
 37875  009D20                     __ptext164:
 37876                           	opt stack 0
 37877  009D20                     _PropCO2:
 37878                           	opt stack 23
 37879                           
 37880                           ;rgl.c: 2361: if(!rgl.nmod)
 37881  009D20  BA27               	btfsc	_rgl,5,c
 37882  009D22  D02A               	goto	l35028
 37883                           
 37884                           ;rgl.c: 2362: {
 37885                           ;rgl.c: 2363: if(rgl.x_f==3)
 37886  009D24  502A               	movf	_rgl+3,w,c
 37887  009D26  0A03               	xorlw	3
 37888  009D28  E107               	bnz	l35008
 37889                           
 37890                           ;rgl.c: 2364: {
 37891                           ;rgl.c: 2365: if(rgl.tmp_pwm>PWM.MGMOD)
 37892  009D2A  5030               	movf	_rgl+9,w,c
 37893  009D2C  0100               	movlb	0	; () banked
 37894  009D2E  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 37895  009D30  D020               	goto	l35026
 37896                           
 37897                           ; BSR set to: 0
 37898                           ;rgl.c: 2366: rgl.tmp_pwm=PWM.MGMOD;
 37899  009D32  C09D  F030         	movff	_PWM+10,_rgl+9	;volatile
 37900  009D36  D01D               	goto	l35026
 37901  009D38                     l35008:
 37902                           
 37903                           ;rgl.c: 2368: else
 37904                           ;rgl.c: 2369: if(rgl.x_f==2)
 37905  009D38  502A               	movf	_rgl+3,w,c
 37906  009D3A  0A02               	xorlw	2
 37907  009D3C  E107               	bnz	l35014
 37908                           
 37909                           ;rgl.c: 2370: {
 37910                           ;rgl.c: 2371: if(rgl.tmp_pwm>PWM.PROP1)
 37911  009D3E  5030               	movf	_rgl+9,w,c
 37912  009D40  0100               	movlb	0	; () banked
 37913  009D42  61AC               	cpfslt	(_PWM+25)& (0+255),b	;volatile
 37914  009D44  D016               	goto	l35026
 37915                           
 37916                           ; BSR set to: 0
 37917                           ;rgl.c: 2372: rgl.tmp_pwm=PWM.PROP1;
 37918  009D46  C0AC  F030         	movff	_PWM+25,_rgl+9	;volatile
 37919  009D4A  D013               	goto	l35026
 37920  009D4C                     l35014:
 37921                           
 37922                           ;rgl.c: 2374: else
 37923                           ;rgl.c: 2375: if(rgl.x_f==1)
 37924  009D4C  042A               	decf	_rgl+3,w,c
 37925  009D4E  E107               	bnz	l35020
 37926                           
 37927                           ;rgl.c: 2376: {
 37928                           ;rgl.c: 2377: if(rgl.tmp_pwm>PWM.PROP2)
 37929  009D50  5030               	movf	_rgl+9,w,c
 37930  009D52  0100               	movlb	0	; () banked
 37931  009D54  61AD               	cpfslt	(_PWM+26)& (0+255),b	;volatile
 37932  009D56  D00D               	goto	l35026
 37933                           
 37934                           ; BSR set to: 0
 37935                           ;rgl.c: 2378: rgl.tmp_pwm=PWM.PROP2;
 37936  009D58  C0AD  F030         	movff	_PWM+26,_rgl+9	;volatile
 37937  009D5C  D00A               	goto	l35026
 37938  009D5E                     l35020:
 37939                           
 37940                           ;rgl.c: 2380: else
 37941                           ;rgl.c: 2381: if(rgl.x_f<=0)
 37942  009D5E  502A               	movf	_rgl+3,w,c
 37943  009D60  0A80               	xorlw	128
 37944  009D62  0F7F               	addlw	-129
 37945  009D64  E206               	bc	l35026
 37946                           
 37947                           ;rgl.c: 2382: {
 37948                           ;rgl.c: 2383: if(rgl.tmp_pwm>PWM.PROP3)
 37949  009D66  5030               	movf	_rgl+9,w,c
 37950  009D68  0100               	movlb	0	; () banked
 37951  009D6A  61AE               	cpfslt	(_PWM+27)& (0+255),b	;volatile
 37952  009D6C  D002               	goto	l35026
 37953                           
 37954                           ; BSR set to: 0
 37955                           ;rgl.c: 2384: rgl.tmp_pwm=PWM.PROP3;
 37956  009D6E  C0AE  F030         	movff	_PWM+27,_rgl+9	;volatile
 37957  009D72                     l35026:
 37958                           
 37959                           ;rgl.c: 2385: }
 37960                           ;rgl.c: 2386: WriteOPWM(rgl.tmp_pwm);
 37961  009D72  5030               	movf	_rgl+9,w,c
 37962  009D74  EF7B  F03F         	goto	_WriteOPWM
 37963  009D78                     l35028:
 37964                           
 37965                           ;rgl.c: 2389: else WriteOPWM(PWM.MDMOD);
 37966  009D78  0100               	movlb	0	; () banked
 37967  009D7A  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 37968  009D7C  EF7B  F03F         	goto	_WriteOPWM
 37969  009D80                     __end_of_PropCO2:
 37970                           	opt stack 0
 37971                           tblptru	equ	0xFF8
 37972                           tblptrh	equ	0xFF7
 37973                           tblptrl	equ	0xFF6
 37974                           tablat	equ	0xFF5
 37975                           prodh	equ	0xFF4
 37976                           prodl	equ	0xFF3
 37977                           intcon	equ	0xFF2
 37978                           postinc0	equ	0xFEE
 37979                           wreg	equ	0xFE8
 37980                           indf1	equ	0xFE7
 37981                           postinc1	equ	0xFE6
 37982                           postdec1	equ	0xFE5
 37983                           fsr1h	equ	0xFE2
 37984                           fsr1l	equ	0xFE1
 37985                           indf2	equ	0xFDF
 37986                           postinc2	equ	0xFDE
 37987                           postdec2	equ	0xFDD
 37988                           fsr2h	equ	0xFDA
 37989                           fsr2l	equ	0xFD9
 37990                           status	equ	0xFD8
 37991                           
 37992 ;; *************** function _StartMCO3 *****************
 37993 ;; Defined at:
 37994 ;;		line 2424 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 37995 ;; Parameters:    Size  Location     Type
 37996 ;;		None
 37997 ;; Auto vars:     Size  Location     Type
 37998 ;;		None
 37999 ;; Return value:  Size  Location     Type
 38000 ;;		None               void
 38001 ;; Registers used:
 38002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38003 ;; Tracked objects:
 38004 ;;		On entry : F/0
 38005 ;;		On exit  : F/0
 38006 ;;		Unchanged: 0/0
 38007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38012 ;;Total ram usage:        0 bytes
 38013 ;; Hardware stack levels used:    1
 38014 ;; Hardware stack levels required when called:    5
 38015 ;; This function calls:
 38016 ;;		_StartRTdS
 38017 ;; This function is called by:
 38018 ;;		_Moduluj
 38019 ;; This function uses a non-reentrant model
 38020 ;;
 38021                           
 38022                           	psect	text165
 38023  00A6CC                     __ptext165:
 38024                           	opt stack 0
 38025  00A6CC                     _StartMCO3:
 38026                           	opt stack 24
 38027                           
 38028                           ; BSR set to: 0
 38029                           ;rgl.c: 2425: if(rgl.btco||rgl.btcw) return;
 38030                           
 38031                           ; BSR set to: 0
 38032  00A6CC  A027               	btfss	_rgl,0,c
 38033                           
 38034                           ; BSR set to: 0
 38035  00A6CE  B227               	btfsc	_rgl,1,c
 38036  00A6D0  0012               	return	
 38037                           
 38038                           ; BSR set to: 0
 38039                           ;rgl.c: 2426: StartRTdS(2);
 38040  00A6D2  0E02               	movlw	2
 38041  00A6D4  ECC2  F057         	call	_StartRTdS
 38042                           
 38043                           ; BSR set to: 1
 38044                           ;rgl.c: 2427: DtCO.dDCO=0;
 38045  00A6D8  0100               	movlb	0	; () banked
 38046  00A6DA  6BED               	clrf	(_DtCO+9)& (0+255),b
 38047                           
 38048                           ; BSR set to: 0
 38049                           ;rgl.c: 2428: DtCO.indCO=0;
 38050  00A6DC  6BEE               	clrf	(_DtCO+10)& (0+255),b
 38051                           
 38052                           ; BSR set to: 0
 38053                           ;rgl.c: 2429: rgl.fz=0;
 38054  00A6DE  9427               	bcf	_rgl,2,c
 38055                           
 38056                           ; BSR set to: 0
 38057                           ;rgl.c: 2430: rgl.med_up=0;
 38058  00A6E0  9627               	bcf	_rgl,3,c
 38059                           
 38060                           ; BSR set to: 0
 38061                           ;rgl.c: 2431: rgl.fast_up=0;
 38062  00A6E2  9827               	bcf	_rgl,4,c
 38063                           
 38064                           ; BSR set to: 0
 38065                           ;rgl.c: 2433: if(PWM.MAXPWM>PWM.FIRSTPB)
 38066  00A6E4  51B4               	movf	(_PWM+33)& (0+255),w,b	;volatile
 38067  00A6E6  61AB               	cpfslt	(_PWM+24)& (0+255),b	;volatile
 38068  00A6E8  D003               	goto	l3627
 38069                           
 38070                           ; BSR set to: 0
 38071                           ;rgl.c: 2434: {
 38072                           ;rgl.c: 2435: rgl.xmod=PWM.FIRSTPB;
 38073  00A6EA  C0AB  F02F         	movff	_PWM+24,_rgl+8	;volatile
 38074                           
 38075                           ;rgl.c: 2436: }
 38076  00A6EE  D002               	goto	l3628
 38077  00A6F0                     l3627:
 38078                           
 38079                           ; BSR set to: 0
 38080                           ;rgl.c: 2437: else
 38081                           ;rgl.c: 2438: {
 38082                           ;rgl.c: 2439: rgl.xmod=PWM.MAXPWM;
 38083  00A6F0  C0B4  F02F         	movff	_PWM+33,_rgl+8	;volatile
 38084  00A6F4                     l3628:
 38085                           
 38086                           ; BSR set to: 0
 38087                           ;rgl.c: 2440: }
 38088                           ;rgl.c: 2441: rgl.srp=0;
 38089  00A6F4  6A2E               	clrf	_rgl+7,c
 38090                           
 38091                           ;rgl.c: 2442: rgl.ytmp=0;
 38092  00A6F6  6A2D               	clrf	_rgl+6,c
 38093                           
 38094                           ;rgl.c: 2443: rgl.nmod=0;
 38095  00A6F8  9A27               	bcf	_rgl,5,c
 38096                           
 38097                           ;rgl.c: 2444: rgl.btcw=0;
 38098  00A6FA  9227               	bcf	_rgl,1,c
 38099                           
 38100                           ;rgl.c: 2445: rgl.btco=1;
 38101  00A6FC  8027               	bsf	_rgl,0,c
 38102                           
 38103                           ;rgl.c: 2446: rgl.del1s=0;
 38104  00A6FE  9C27               	bcf	_rgl,6,c
 38105                           
 38106                           ;rgl.c: 2447: rgl.deln1=0;
 38107  00A700  9E27               	bcf	_rgl,7,c
 38108                           
 38109                           ;rgl.c: 2448: rgl.inv_mod=0;
 38110  00A702  9028               	bcf	_rgl+1,0,c
 38111                           
 38112                           ; BSR set to: 0
 38113  00A704  0012               	return	
 38114  00A706                     __end_of_StartMCO3:
 38115                           	opt stack 0
 38116                           tblptru	equ	0xFF8
 38117                           tblptrh	equ	0xFF7
 38118                           tblptrl	equ	0xFF6
 38119                           tablat	equ	0xFF5
 38120                           prodh	equ	0xFF4
 38121                           prodl	equ	0xFF3
 38122                           intcon	equ	0xFF2
 38123                           postinc0	equ	0xFEE
 38124                           wreg	equ	0xFE8
 38125                           indf1	equ	0xFE7
 38126                           postinc1	equ	0xFE6
 38127                           postdec1	equ	0xFE5
 38128                           fsr1h	equ	0xFE2
 38129                           fsr1l	equ	0xFE1
 38130                           indf2	equ	0xFDF
 38131                           postinc2	equ	0xFDE
 38132                           postdec2	equ	0xFDD
 38133                           fsr2h	equ	0xFDA
 38134                           fsr2l	equ	0xFD9
 38135                           status	equ	0xFD8
 38136                           
 38137 ;; *************** function _ModToCO3 *****************
 38138 ;; Defined at:
 38139 ;;		line 2417 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 38140 ;; Parameters:    Size  Location     Type
 38141 ;;		None
 38142 ;; Auto vars:     Size  Location     Type
 38143 ;;		None
 38144 ;; Return value:  Size  Location     Type
 38145 ;;		None               void
 38146 ;; Registers used:
 38147 ;;		None
 38148 ;; Tracked objects:
 38149 ;;		On entry : F/0
 38150 ;;		On exit  : F/0
 38151 ;;		Unchanged: FFFFFFF0/0
 38152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38157 ;;Total ram usage:        0 bytes
 38158 ;; Hardware stack levels used:    1
 38159 ;; Hardware stack levels required when called:    4
 38160 ;; This function calls:
 38161 ;;		Nothing
 38162 ;; This function is called by:
 38163 ;;		_Moduluj
 38164 ;; This function uses a non-reentrant model
 38165 ;;
 38166                           
 38167                           	psect	text166
 38168  00B64C                     __ptext166:
 38169                           	opt stack 0
 38170  00B64C                     _ModToCO3:
 38171                           	opt stack 25
 38172                           
 38173                           ; BSR set to: 0
 38174                           ;rgl.c: 2418: rgl.btco=1;
 38175                           
 38176                           ; BSR set to: 0
 38177  00B64C  8027               	bsf	_rgl,0,c
 38178                           
 38179                           ;rgl.c: 2419: rgl.btcw=0;
 38180  00B64E  9227               	bcf	_rgl,1,c
 38181                           
 38182                           ; BSR set to: 0
 38183  00B650  0012               	return	
 38184  00B652                     __end_of_ModToCO3:
 38185                           	opt stack 0
 38186                           tblptru	equ	0xFF8
 38187                           tblptrh	equ	0xFF7
 38188                           tblptrl	equ	0xFF6
 38189                           tablat	equ	0xFF5
 38190                           prodh	equ	0xFF4
 38191                           prodl	equ	0xFF3
 38192                           intcon	equ	0xFF2
 38193                           postinc0	equ	0xFEE
 38194                           wreg	equ	0xFE8
 38195                           indf1	equ	0xFE7
 38196                           postinc1	equ	0xFE6
 38197                           postdec1	equ	0xFE5
 38198                           fsr1h	equ	0xFE2
 38199                           fsr1l	equ	0xFE1
 38200                           indf2	equ	0xFDF
 38201                           postinc2	equ	0xFDE
 38202                           postdec2	equ	0xFDD
 38203                           fsr2h	equ	0xFDA
 38204                           fsr2l	equ	0xFD9
 38205                           status	equ	0xFD8
 38206                           
 38207 ;; *************** function _ModToCW3 *****************
 38208 ;; Defined at:
 38209 ;;		line 2401 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 38210 ;; Parameters:    Size  Location     Type
 38211 ;;		None
 38212 ;; Auto vars:     Size  Location     Type
 38213 ;;		None
 38214 ;; Return value:  Size  Location     Type
 38215 ;;		None               void
 38216 ;; Registers used:
 38217 ;;		wreg, status,2, status,0, cstack
 38218 ;; Tracked objects:
 38219 ;;		On entry : F/0
 38220 ;;		On exit  : F/0
 38221 ;;		Unchanged: FFFFFFF0/0
 38222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38225 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38226 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38227 ;;Total ram usage:        5 bytes
 38228 ;; Hardware stack levels used:    1
 38229 ;; Hardware stack levels required when called:    5
 38230 ;; This function calls:
 38231 ;;		_Tnizsza
 38232 ;; This function is called by:
 38233 ;;		_Moduluj
 38234 ;; This function uses a non-reentrant model
 38235 ;;
 38236                           
 38237                           	psect	text167
 38238  00A55C                     __ptext167:
 38239                           	opt stack 0
 38240  00A55C                     _ModToCW3:
 38241                           	opt stack 24
 38242                           
 38243                           ; BSR set to: 0
 38244                           ;rgl.c: 2402: rgl.btcw=1;
 38245                           
 38246                           ; BSR set to: 0
 38247  00A55C  8227               	bsf	_rgl,1,c
 38248                           
 38249                           ;rgl.c: 2403: if(rgl.btco)
 38250  00A55E  A027               	btfss	_rgl,0,c
 38251  00A560  0012               	return	
 38252                           
 38253                           ; BSR set to: 0
 38254                           ;rgl.c: 2404: {
 38255                           ;rgl.c: 2405: rgl.btco=0;
 38256  00A562  9027               	bcf	_rgl,0,c
 38257                           
 38258                           ; BSR set to: 0
 38259                           ;rgl.c: 2407: if(!Tnizsza(0))
 38260  00A564  0E00               	movlw	0
 38261  00A566  EC8F  F059         	call	_Tnizsza
 38262  00A56A  B0D8               	btfsc	status,0,c
 38263  00A56C  0012               	return	
 38264                           
 38265                           ; BSR set to: 0
 38266                           ;rgl.c: 2408: {
 38267                           ;rgl.c: 2409: if(rgl.srp-10<PWM.MDMOD) rgl.srp=PWM.MDMOD;
 38268  00A56E  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 38269  00A570  6E1F               	movwf	??_ModToCW3& (0+255),c
 38270  00A572  6A20               	clrf	(??_ModToCW3+1)& (0+255),c
 38271  00A574  0EF6               	movlw	246
 38272  00A576  242E               	addwf	_rgl+7,w,c
 38273  00A578  6E21               	movwf	(??_ModToCW3+2)& (0+255),c
 38274  00A57A  6A22               	clrf	(??_ModToCW3+3)& (0+255),c
 38275  00A57C  0EFF               	movlw	255
 38276  00A57E  2222               	addwfc	(??_ModToCW3+3)& (0+255),f,c
 38277  00A580  5022               	movf	??_ModToCW3+3,w,c
 38278  00A582  0A80               	xorlw	128
 38279  00A584  6E23               	movwf	(??_ModToCW3+4)& (0+255),c
 38280  00A586  501F               	movf	??_ModToCW3,w,c
 38281  00A588  5C21               	subwf	??_ModToCW3+2,w,c
 38282  00A58A  5020               	movf	??_ModToCW3+1,w,c
 38283  00A58C  0A80               	xorlw	128
 38284  00A58E  5823               	subwfb	(??_ModToCW3+4)& (0+255),w,c
 38285  00A590  E203               	bc	l35062
 38286                           
 38287                           ; BSR set to: 0
 38288  00A592  C09C  F02E         	movff	_PWM+9,_rgl+7	;volatile
 38289  00A596  0012               	return	
 38290  00A598                     l35062:
 38291                           
 38292                           ; BSR set to: 0
 38293                           ;rgl.c: 2410: else rgl.srp-=10;
 38294  00A598  0E0A               	movlw	10
 38295  00A59A  5E2E               	subwf	_rgl+7,f,c
 38296                           
 38297                           ; BSR set to: 0
 38298  00A59C  0C0A               	retlw	10
 38299  00A59E                     __end_of_ModToCW3:
 38300                           	opt stack 0
 38301                           tblptru	equ	0xFF8
 38302                           tblptrh	equ	0xFF7
 38303                           tblptrl	equ	0xFF6
 38304                           tablat	equ	0xFF5
 38305                           prodh	equ	0xFF4
 38306                           prodl	equ	0xFF3
 38307                           intcon	equ	0xFF2
 38308                           postinc0	equ	0xFEE
 38309                           wreg	equ	0xFE8
 38310                           indf1	equ	0xFE7
 38311                           postinc1	equ	0xFE6
 38312                           postdec1	equ	0xFE5
 38313                           fsr1h	equ	0xFE2
 38314                           fsr1l	equ	0xFE1
 38315                           indf2	equ	0xFDF
 38316                           postinc2	equ	0xFDE
 38317                           postdec2	equ	0xFDD
 38318                           fsr2h	equ	0xFDA
 38319                           fsr2l	equ	0xFD9
 38320                           status	equ	0xFD8
 38321                           
 38322 ;; *************** function _StartCO4 *****************
 38323 ;; Defined at:
 38324 ;;		line 1337 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 38325 ;; Parameters:    Size  Location     Type
 38326 ;;		None
 38327 ;; Auto vars:     Size  Location     Type
 38328 ;;		None
 38329 ;; Return value:  Size  Location     Type
 38330 ;;		None               void
 38331 ;; Registers used:
 38332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38333 ;; Tracked objects:
 38334 ;;		On entry : F/0
 38335 ;;		On exit  : F/0
 38336 ;;		Unchanged: 0/0
 38337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38342 ;;Total ram usage:        0 bytes
 38343 ;; Hardware stack levels used:    1
 38344 ;; Hardware stack levels required when called:    5
 38345 ;; This function calls:
 38346 ;;		_StartRTdS
 38347 ;; This function is called by:
 38348 ;;		_Moduluj
 38349 ;; This function uses a non-reentrant model
 38350 ;;
 38351                           
 38352                           	psect	text168
 38353  00A7B0                     __ptext168:
 38354                           	opt stack 0
 38355  00A7B0                     _StartCO4:
 38356                           	opt stack 24
 38357                           
 38358                           ; BSR set to: 0
 38359                           ;rgl.c: 1340: if(rgl.btco||rgl.btcw) return;
 38360                           
 38361                           ; BSR set to: 0
 38362  00A7B0  A027               	btfss	_rgl,0,c
 38363                           
 38364                           ; BSR set to: 0
 38365  00A7B2  B227               	btfsc	_rgl,1,c
 38366  00A7B4  0012               	return	
 38367                           
 38368                           ; BSR set to: 0
 38369                           ;rgl.c: 1341: StartRTdS(2);
 38370  00A7B6  0E02               	movlw	2
 38371  00A7B8  ECC2  F057         	call	_StartRTdS
 38372                           
 38373                           ; BSR set to: 1
 38374                           ;rgl.c: 1342: DtCO.dDCO=0;
 38375  00A7BC  0100               	movlb	0	; () banked
 38376  00A7BE  6BED               	clrf	(_DtCO+9)& (0+255),b
 38377                           
 38378                           ; BSR set to: 0
 38379                           ;rgl.c: 1343: DtCO.indCO=0;
 38380  00A7C0  6BEE               	clrf	(_DtCO+10)& (0+255),b
 38381                           
 38382                           ; BSR set to: 0
 38383                           ;rgl.c: 1344: DtCW.dDCW=0;
 38384  00A7C2  6BD7               	clrf	(_DtCW+8)& (0+255),b
 38385                           
 38386                           ; BSR set to: 0
 38387                           ;rgl.c: 1345: DtCW.indCW=0;
 38388  00A7C4  6BD9               	clrf	(_DtCW+10)& (0+255),b
 38389                           
 38390                           ; BSR set to: 0
 38391                           ;rgl.c: 1346: rgl.fz=0;
 38392  00A7C6  9427               	bcf	_rgl,2,c
 38393                           
 38394                           ; BSR set to: 0
 38395                           ;rgl.c: 1347: rgl.med_up=0;
 38396  00A7C8  9627               	bcf	_rgl,3,c
 38397                           
 38398                           ; BSR set to: 0
 38399                           ;rgl.c: 1348: rgl.fast_up=0;
 38400  00A7CA  9827               	bcf	_rgl,4,c
 38401                           
 38402                           ; BSR set to: 0
 38403                           ;rgl.c: 1350: if(PWM.MMAXCO>PWM.FIRSTPB)
 38404  00A7CC  51B0               	movf	(_PWM+29)& (0+255),w,b	;volatile
 38405  00A7CE  61AB               	cpfslt	(_PWM+24)& (0+255),b	;volatile
 38406  00A7D0  D003               	goto	l3203
 38407                           
 38408                           ; BSR set to: 0
 38409                           ;rgl.c: 1351: {
 38410                           ;rgl.c: 1352: rgl.xmod=PWM.FIRSTPB;
 38411  00A7D2  C0AB  F02F         	movff	_PWM+24,_rgl+8	;volatile
 38412                           
 38413                           ;rgl.c: 1353: }
 38414  00A7D6  D002               	goto	l3204
 38415  00A7D8                     l3203:
 38416                           
 38417                           ; BSR set to: 0
 38418                           ;rgl.c: 1354: else
 38419                           ;rgl.c: 1355: {
 38420                           ;rgl.c: 1356: rgl.xmod=PWM.MMAXCO;
 38421  00A7D8  C0B0  F02F         	movff	_PWM+29,_rgl+8	;volatile
 38422  00A7DC                     l3204:
 38423                           
 38424                           ; BSR set to: 0
 38425                           ;rgl.c: 1357: }
 38426                           ;rgl.c: 1358: rgl.srp=0;
 38427  00A7DC  6A2E               	clrf	_rgl+7,c
 38428                           
 38429                           ;rgl.c: 1359: rgl.ytmp=0;
 38430  00A7DE  6A2D               	clrf	_rgl+6,c
 38431                           
 38432                           ;rgl.c: 1360: rgl.nmod=0;
 38433  00A7E0  9A27               	bcf	_rgl,5,c
 38434                           
 38435                           ;rgl.c: 1361: rgl.del1s=0;
 38436  00A7E2  9C27               	bcf	_rgl,6,c
 38437                           
 38438                           ;rgl.c: 1362: rgl.inv_mod=0;
 38439  00A7E4  9028               	bcf	_rgl+1,0,c
 38440                           
 38441                           ; BSR set to: 0
 38442  00A7E6  0012               	return	
 38443  00A7E8                     __end_of_StartCO4:
 38444                           	opt stack 0
 38445                           tblptru	equ	0xFF8
 38446                           tblptrh	equ	0xFF7
 38447                           tblptrl	equ	0xFF6
 38448                           tablat	equ	0xFF5
 38449                           prodh	equ	0xFF4
 38450                           prodl	equ	0xFF3
 38451                           intcon	equ	0xFF2
 38452                           postinc0	equ	0xFEE
 38453                           wreg	equ	0xFE8
 38454                           indf1	equ	0xFE7
 38455                           postinc1	equ	0xFE6
 38456                           postdec1	equ	0xFE5
 38457                           fsr1h	equ	0xFE2
 38458                           fsr1l	equ	0xFE1
 38459                           indf2	equ	0xFDF
 38460                           postinc2	equ	0xFDE
 38461                           postdec2	equ	0xFDD
 38462                           fsr2h	equ	0xFDA
 38463                           fsr2l	equ	0xFD9
 38464                           status	equ	0xFD8
 38465                           
 38466 ;; *************** function _ReadDataCO4 *****************
 38467 ;; Defined at:
 38468 ;;		line 1450 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 38469 ;; Parameters:    Size  Location     Type
 38470 ;;		None
 38471 ;; Auto vars:     Size  Location     Type
 38472 ;;		None
 38473 ;; Return value:  Size  Location     Type
 38474 ;;		None               void
 38475 ;; Registers used:
 38476 ;;		None
 38477 ;; Tracked objects:
 38478 ;;		On entry : F/0
 38479 ;;		On exit  : F/0
 38480 ;;		Unchanged: FFFFFFF0/0
 38481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38486 ;;Total ram usage:        0 bytes
 38487 ;; Hardware stack levels used:    1
 38488 ;; Hardware stack levels required when called:    4
 38489 ;; This function calls:
 38490 ;;		Nothing
 38491 ;; This function is called by:
 38492 ;;		_Moduluj
 38493 ;; This function uses a non-reentrant model
 38494 ;;
 38495                           
 38496                           	psect	text169
 38497  00B5FA                     __ptext169:
 38498                           	opt stack 0
 38499  00B5FA                     _ReadDataCO4:
 38500                           	opt stack 25
 38501                           
 38502                           ; BSR set to: 0
 38503                           ;rgl.c: 1451: rgl.x_t=DtCO.DCO;
 38504                           
 38505                           ; BSR set to: 0
 38506  00B5FA  C0EC  F029         	movff	_DtCO+8,_rgl+2
 38507                           
 38508                           ;rgl.c: 1452: rgl.x_dt=DtCO.dDCO;
 38509  00B5FE  C0ED  F02B         	movff	_DtCO+9,_rgl+4
 38510                           
 38511                           ; BSR set to: 0
 38512  00B602  0012               	return	
 38513  00B604                     __end_of_ReadDataCO4:
 38514                           	opt stack 0
 38515                           tblptru	equ	0xFF8
 38516                           tblptrh	equ	0xFF7
 38517                           tblptrl	equ	0xFF6
 38518                           tablat	equ	0xFF5
 38519                           prodh	equ	0xFF4
 38520                           prodl	equ	0xFF3
 38521                           intcon	equ	0xFF2
 38522                           postinc0	equ	0xFEE
 38523                           wreg	equ	0xFE8
 38524                           indf1	equ	0xFE7
 38525                           postinc1	equ	0xFE6
 38526                           postdec1	equ	0xFE5
 38527                           fsr1h	equ	0xFE2
 38528                           fsr1l	equ	0xFE1
 38529                           indf2	equ	0xFDF
 38530                           postinc2	equ	0xFDE
 38531                           postdec2	equ	0xFDD
 38532                           fsr2h	equ	0xFDA
 38533                           fsr2l	equ	0xFD9
 38534                           status	equ	0xFD8
 38535                           
 38536 ;; *************** function _ModToCO4 *****************
 38537 ;; Defined at:
 38538 ;;		line 1432 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 38539 ;; Parameters:    Size  Location     Type
 38540 ;;		None
 38541 ;; Auto vars:     Size  Location     Type
 38542 ;;		None
 38543 ;; Return value:  Size  Location     Type
 38544 ;;		None               void
 38545 ;; Registers used:
 38546 ;;		cstack
 38547 ;; Tracked objects:
 38548 ;;		On entry : F/0
 38549 ;;		On exit  : F/0
 38550 ;;		Unchanged: FFFFFFF0/0
 38551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38556 ;;Total ram usage:        0 bytes
 38557 ;; Hardware stack levels used:    1
 38558 ;; Hardware stack levels required when called:    5
 38559 ;; This function calls:
 38560 ;;		_ClrMod4
 38561 ;; This function is called by:
 38562 ;;		_Moduluj
 38563 ;; This function uses a non-reentrant model
 38564 ;;
 38565                           
 38566                           	psect	text170
 38567  00B596                     __ptext170:
 38568                           	opt stack 0
 38569  00B596                     _ModToCO4:
 38570                           	opt stack 24
 38571                           
 38572                           ; BSR set to: 0
 38573                           ;rgl.c: 1433: rgl.btco=1;
 38574                           
 38575                           ; BSR set to: 0
 38576  00B596  8027               	bsf	_rgl,0,c
 38577                           
 38578                           ;rgl.c: 1434: if(rgl.btcw)
 38579  00B598  A227               	btfss	_rgl,1,c
 38580  00B59A  0012               	return	
 38581                           
 38582                           ; BSR set to: 0
 38583                           ;rgl.c: 1435: {
 38584                           ;rgl.c: 1436: rgl.btcw=0;
 38585  00B59C  9227               	bcf	_rgl,1,c
 38586                           
 38587                           ; BSR set to: 0
 38588                           ;rgl.c: 1437: ClrMod4();
 38589  00B59E  EFD3  F059         	goto	_ClrMod4	;wreg free
 38590  00B5A2                     __end_of_ModToCO4:
 38591                           	opt stack 0
 38592                           tblptru	equ	0xFF8
 38593                           tblptrh	equ	0xFF7
 38594                           tblptrl	equ	0xFF6
 38595                           tablat	equ	0xFF5
 38596                           prodh	equ	0xFF4
 38597                           prodl	equ	0xFF3
 38598                           intcon	equ	0xFF2
 38599                           postinc0	equ	0xFEE
 38600                           wreg	equ	0xFE8
 38601                           indf1	equ	0xFE7
 38602                           postinc1	equ	0xFE6
 38603                           postdec1	equ	0xFE5
 38604                           fsr1h	equ	0xFE2
 38605                           fsr1l	equ	0xFE1
 38606                           indf2	equ	0xFDF
 38607                           postinc2	equ	0xFDE
 38608                           postdec2	equ	0xFDD
 38609                           fsr2h	equ	0xFDA
 38610                           fsr2l	equ	0xFD9
 38611                           status	equ	0xFD8
 38612                           
 38613 ;; *************** function _IncConstCOCW4 *****************
 38614 ;; Defined at:
 38615 ;;		line 1443 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 38616 ;; Parameters:    Size  Location     Type
 38617 ;;		None
 38618 ;; Auto vars:     Size  Location     Type
 38619 ;;		None
 38620 ;; Return value:  Size  Location     Type
 38621 ;;		None               void
 38622 ;; Registers used:
 38623 ;;		wreg, status,2, status,0, cstack
 38624 ;; Tracked objects:
 38625 ;;		On entry : F/1
 38626 ;;		On exit  : F/1
 38627 ;;		Unchanged: FFFFFFF0/0
 38628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38633 ;;Total ram usage:        0 bytes
 38634 ;; Hardware stack levels used:    1
 38635 ;; Hardware stack levels required when called:    5
 38636 ;; This function calls:
 38637 ;;		_Tstoi
 38638 ;; This function is called by:
 38639 ;;		_Moduluj
 38640 ;; This function uses a non-reentrant model
 38641 ;;
 38642                           
 38643                           	psect	text171
 38644  00B53C                     __ptext171:
 38645                           	opt stack 0
 38646  00B53C                     _IncConstCOCW4:
 38647                           	opt stack 24
 38648                           
 38649                           ; BSR set to: 1
 38650                           ;rgl.c: 1444: if(Tstoi()) rgl.ytmp++;
 38651                           
 38652                           ; BSR set to: 0
 38653  00B53C  ECD7  F05A         	call	_Tstoi	;wreg free
 38654  00B540  E302               	bnc	l3235
 38655                           
 38656                           ; BSR set to: 1
 38657  00B542  2A2D               	incf	_rgl+6,f,c
 38658  00B544  0012               	return	
 38659  00B546                     l3235:
 38660                           
 38661                           ; BSR set to: 1
 38662                           ;rgl.c: 1445: else rgl.ytmp=0;
 38663  00B546  6A2D               	clrf	_rgl+6,c
 38664                           
 38665                           ; BSR set to: 1
 38666  00B548  0012               	return	
 38667  00B54A                     __end_of_IncConstCOCW4:
 38668                           	opt stack 0
 38669                           tblptru	equ	0xFF8
 38670                           tblptrh	equ	0xFF7
 38671                           tblptrl	equ	0xFF6
 38672                           tablat	equ	0xFF5
 38673                           prodh	equ	0xFF4
 38674                           prodl	equ	0xFF3
 38675                           intcon	equ	0xFF2
 38676                           postinc0	equ	0xFEE
 38677                           wreg	equ	0xFE8
 38678                           indf1	equ	0xFE7
 38679                           postinc1	equ	0xFE6
 38680                           postdec1	equ	0xFE5
 38681                           fsr1h	equ	0xFE2
 38682                           fsr1l	equ	0xFE1
 38683                           indf2	equ	0xFDF
 38684                           postinc2	equ	0xFDE
 38685                           postdec2	equ	0xFDD
 38686                           fsr2h	equ	0xFDA
 38687                           fsr2l	equ	0xFD9
 38688                           status	equ	0xFD8
 38689                           
 38690 ;; *************** function _StartMCW4 *****************
 38691 ;; Defined at:
 38692 ;;		line 1367 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 38693 ;; Parameters:    Size  Location     Type
 38694 ;;		None
 38695 ;; Auto vars:     Size  Location     Type
 38696 ;;		None
 38697 ;; Return value:  Size  Location     Type
 38698 ;;		None               void
 38699 ;; Registers used:
 38700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38701 ;; Tracked objects:
 38702 ;;		On entry : F/0
 38703 ;;		On exit  : F/0
 38704 ;;		Unchanged: 0/0
 38705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38710 ;;Total ram usage:        0 bytes
 38711 ;; Hardware stack levels used:    1
 38712 ;; Hardware stack levels required when called:    5
 38713 ;; This function calls:
 38714 ;;		_StartRTdS
 38715 ;; This function is called by:
 38716 ;;		_Moduluj
 38717 ;; This function uses a non-reentrant model
 38718 ;;
 38719                           
 38720                           	psect	text172
 38721  00ACE0                     __ptext172:
 38722                           	opt stack 0
 38723  00ACE0                     _StartMCW4:
 38724                           	opt stack 24
 38725                           
 38726                           ; BSR set to: 0
 38727                           ;rgl.c: 1368: if(rgl.btco||rgl.btcw) return;
 38728                           
 38729                           ; BSR set to: 1
 38730  00ACE0  A027               	btfss	_rgl,0,c
 38731                           
 38732                           ; BSR set to: 0
 38733  00ACE2  B227               	btfsc	_rgl,1,c
 38734  00ACE4  0012               	return	
 38735                           
 38736                           ; BSR set to: 0
 38737                           ;rgl.c: 1369: StartRTdS(2);
 38738  00ACE6  0E02               	movlw	2
 38739  00ACE8  ECC2  F057         	call	_StartRTdS
 38740                           
 38741                           ; BSR set to: 1
 38742                           ;rgl.c: 1370: DtCO.dDCO=0;
 38743  00ACEC  0100               	movlb	0	; () banked
 38744  00ACEE  6BED               	clrf	(_DtCO+9)& (0+255),b
 38745                           
 38746                           ; BSR set to: 0
 38747                           ;rgl.c: 1371: DtCW.dDCW=0;
 38748  00ACF0  6BD7               	clrf	(_DtCW+8)& (0+255),b
 38749                           
 38750                           ; BSR set to: 0
 38751                           ;rgl.c: 1372: DtCO.indCO=0;
 38752  00ACF2  6BEE               	clrf	(_DtCO+10)& (0+255),b
 38753                           
 38754                           ; BSR set to: 0
 38755                           ;rgl.c: 1373: DtCW.indCW=0;
 38756  00ACF4  6BD9               	clrf	(_DtCW+10)& (0+255),b
 38757                           
 38758                           ; BSR set to: 0
 38759                           ;rgl.c: 1374: rgl.fz=0;
 38760  00ACF6  9427               	bcf	_rgl,2,c
 38761                           
 38762                           ; BSR set to: 0
 38763                           ;rgl.c: 1375: rgl.med_up=0;
 38764  00ACF8  9627               	bcf	_rgl,3,c
 38765                           
 38766                           ; BSR set to: 0
 38767                           ;rgl.c: 1376: rgl.fast_up=0;
 38768  00ACFA  9827               	bcf	_rgl,4,c
 38769                           
 38770                           ; BSR set to: 0
 38771                           ;rgl.c: 1378: rgl.srp=0;
 38772  00ACFC  6A2E               	clrf	_rgl+7,c
 38773                           
 38774                           ; BSR set to: 0
 38775                           ;rgl.c: 1379: rgl.ytmp=0;
 38776  00ACFE  6A2D               	clrf	_rgl+6,c
 38777                           
 38778                           ; BSR set to: 0
 38779                           ;rgl.c: 1380: rgl.nmod=0;
 38780  00AD00  9A27               	bcf	_rgl,5,c
 38781                           
 38782                           ; BSR set to: 0
 38783                           ;rgl.c: 1381: rgl.del1s=0;
 38784  00AD02  9C27               	bcf	_rgl,6,c
 38785                           
 38786                           ; BSR set to: 0
 38787                           ;rgl.c: 1382: rgl.inv_mod=0;
 38788  00AD04  9028               	bcf	_rgl+1,0,c
 38789                           
 38790                           ; BSR set to: 0
 38791                           ;rgl.c: 1383: rgl.xmod=PWM.MDMOD;
 38792  00AD06  C09C  F02F         	movff	_PWM+9,_rgl+8	;volatile
 38793                           
 38794                           ; BSR set to: 0
 38795  00AD0A  0012               	return	
 38796  00AD0C                     __end_of_StartMCW4:
 38797                           	opt stack 0
 38798                           tblptru	equ	0xFF8
 38799                           tblptrh	equ	0xFF7
 38800                           tblptrl	equ	0xFF6
 38801                           tablat	equ	0xFF5
 38802                           prodh	equ	0xFF4
 38803                           prodl	equ	0xFF3
 38804                           intcon	equ	0xFF2
 38805                           postinc0	equ	0xFEE
 38806                           wreg	equ	0xFE8
 38807                           indf1	equ	0xFE7
 38808                           postinc1	equ	0xFE6
 38809                           postdec1	equ	0xFE5
 38810                           fsr1h	equ	0xFE2
 38811                           fsr1l	equ	0xFE1
 38812                           indf2	equ	0xFDF
 38813                           postinc2	equ	0xFDE
 38814                           postdec2	equ	0xFDD
 38815                           fsr2h	equ	0xFDA
 38816                           fsr2l	equ	0xFD9
 38817                           status	equ	0xFD8
 38818                           
 38819 ;; *************** function _ReadDataCW4 *****************
 38820 ;; Defined at:
 38821 ;;		line 1457 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 38822 ;; Parameters:    Size  Location     Type
 38823 ;;		None
 38824 ;; Auto vars:     Size  Location     Type
 38825 ;;		None
 38826 ;; Return value:  Size  Location     Type
 38827 ;;		None               void
 38828 ;; Registers used:
 38829 ;;		None
 38830 ;; Tracked objects:
 38831 ;;		On entry : F/0
 38832 ;;		On exit  : F/0
 38833 ;;		Unchanged: FFFFFFF0/0
 38834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38839 ;;Total ram usage:        0 bytes
 38840 ;; Hardware stack levels used:    1
 38841 ;; Hardware stack levels required when called:    4
 38842 ;; This function calls:
 38843 ;;		Nothing
 38844 ;; This function is called by:
 38845 ;;		_Moduluj
 38846 ;; This function uses a non-reentrant model
 38847 ;;
 38848                           
 38849                           	psect	text173
 38850  00B486                     __ptext173:
 38851                           	opt stack 0
 38852  00B486                     _ReadDataCW4:
 38853                           	opt stack 25
 38854                           
 38855                           ; BSR set to: 0
 38856                           ;rgl.c: 1458: rgl.x_t=DtCW.DCW;
 38857                           
 38858                           ; BSR set to: 0
 38859  00B486  C0D6  F029         	movff	_DtCW+7,_rgl+2
 38860                           
 38861                           ;rgl.c: 1459: rgl.x_f=DtCO.DCO;
 38862  00B48A  C0EC  F02A         	movff	_DtCO+8,_rgl+3
 38863                           
 38864                           ;rgl.c: 1460: rgl.x_dt=DtCW.dDCW;
 38865  00B48E  C0D7  F02B         	movff	_DtCW+8,_rgl+4
 38866                           
 38867                           ;rgl.c: 1461: rgl.x_df=DtCO.dDCO;
 38868  00B492  C0ED  F02C         	movff	_DtCO+9,_rgl+5
 38869                           
 38870                           ; BSR set to: 0
 38871  00B496  0012               	return	
 38872  00B498                     __end_of_ReadDataCW4:
 38873                           	opt stack 0
 38874                           tblptru	equ	0xFF8
 38875                           tblptrh	equ	0xFF7
 38876                           tblptrl	equ	0xFF6
 38877                           tablat	equ	0xFF5
 38878                           prodh	equ	0xFF4
 38879                           prodl	equ	0xFF3
 38880                           intcon	equ	0xFF2
 38881                           postinc0	equ	0xFEE
 38882                           wreg	equ	0xFE8
 38883                           indf1	equ	0xFE7
 38884                           postinc1	equ	0xFE6
 38885                           postdec1	equ	0xFE5
 38886                           fsr1h	equ	0xFE2
 38887                           fsr1l	equ	0xFE1
 38888                           indf2	equ	0xFDF
 38889                           postinc2	equ	0xFDE
 38890                           postdec2	equ	0xFDD
 38891                           fsr2h	equ	0xFDA
 38892                           fsr2l	equ	0xFD9
 38893                           status	equ	0xFD8
 38894                           
 38895 ;; *************** function _ModToCW4 *****************
 38896 ;; Defined at:
 38897 ;;		line 1421 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 38898 ;; Parameters:    Size  Location     Type
 38899 ;;		None
 38900 ;; Auto vars:     Size  Location     Type
 38901 ;;		None
 38902 ;; Return value:  Size  Location     Type
 38903 ;;		None               void
 38904 ;; Registers used:
 38905 ;;		cstack
 38906 ;; Tracked objects:
 38907 ;;		On entry : F/0
 38908 ;;		On exit  : F/0
 38909 ;;		Unchanged: FFFFFFF0/0
 38910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38915 ;;Total ram usage:        0 bytes
 38916 ;; Hardware stack levels used:    1
 38917 ;; Hardware stack levels required when called:    5
 38918 ;; This function calls:
 38919 ;;		_ClrMod4
 38920 ;; This function is called by:
 38921 ;;		_Moduluj
 38922 ;; This function uses a non-reentrant model
 38923 ;;
 38924                           
 38925                           	psect	text174
 38926  00B5A2                     __ptext174:
 38927                           	opt stack 0
 38928  00B5A2                     _ModToCW4:
 38929                           	opt stack 24
 38930                           
 38931                           ; BSR set to: 0
 38932                           ;rgl.c: 1422: rgl.btcw=1;
 38933                           
 38934                           ; BSR set to: 0
 38935  00B5A2  8227               	bsf	_rgl,1,c
 38936                           
 38937                           ;rgl.c: 1423: if(rgl.btco)
 38938  00B5A4  A027               	btfss	_rgl,0,c
 38939  00B5A6  0012               	return	
 38940                           
 38941                           ; BSR set to: 0
 38942                           ;rgl.c: 1424: {
 38943                           ;rgl.c: 1425: rgl.btco=0;
 38944  00B5A8  9027               	bcf	_rgl,0,c
 38945                           
 38946                           ; BSR set to: 0
 38947                           ;rgl.c: 1426: ClrMod4();
 38948  00B5AA  EFD3  F059         	goto	_ClrMod4	;wreg free
 38949  00B5AE                     __end_of_ModToCW4:
 38950                           	opt stack 0
 38951                           tblptru	equ	0xFF8
 38952                           tblptrh	equ	0xFF7
 38953                           tblptrl	equ	0xFF6
 38954                           tablat	equ	0xFF5
 38955                           prodh	equ	0xFF4
 38956                           prodl	equ	0xFF3
 38957                           intcon	equ	0xFF2
 38958                           postinc0	equ	0xFEE
 38959                           wreg	equ	0xFE8
 38960                           indf1	equ	0xFE7
 38961                           postinc1	equ	0xFE6
 38962                           postdec1	equ	0xFE5
 38963                           fsr1h	equ	0xFE2
 38964                           fsr1l	equ	0xFE1
 38965                           indf2	equ	0xFDF
 38966                           postinc2	equ	0xFDE
 38967                           postdec2	equ	0xFDD
 38968                           fsr2h	equ	0xFDA
 38969                           fsr2l	equ	0xFD9
 38970                           status	equ	0xFD8
 38971                           
 38972 ;; *************** function _ModZgCW4 *****************
 38973 ;; Defined at:
 38974 ;;		line 1466 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 38975 ;; Parameters:    Size  Location     Type
 38976 ;;		None
 38977 ;; Auto vars:     Size  Location     Type
 38978 ;;  m               4    1[BANK2 ] long 
 38979 ;;  p               1    0[BANK2 ] unsigned char 
 38980 ;; Return value:  Size  Location     Type
 38981 ;;		None               void
 38982 ;; Registers used:
 38983 ;;		wreg, status,2, status,0, cstack
 38984 ;; Tracked objects:
 38985 ;;		On entry : F/0
 38986 ;;		On exit  : C/0
 38987 ;;		Unchanged: FFFFFFF0/0
 38988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38990 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38991 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38992 ;;      Totals:         0       5       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38993 ;;Total ram usage:       10 bytes
 38994 ;; Hardware stack levels used:    1
 38995 ;; Hardware stack levels required when called:    5
 38996 ;; This function calls:
 38997 ;;		_Tnizsza
 38998 ;;		___wmul
 38999 ;;		___aldiv
 39000 ;;		___lmul
 39001 ;; This function is called by:
 39002 ;;		_Moduluj
 39003 ;; This function uses a non-reentrant model
 39004 ;;
 39005                           
 39006                           	psect	text175
 39007  0051BA                     __ptext175:
 39008                           	opt stack 0
 39009  0051BA                     _ModZgCW4:
 39010                           	opt stack 24
 39011                           
 39012                           ; BSR set to: 0
 39013                           ;rgl.c: 1467: signed long m;
 39014                           ;rgl.c: 1468: unsigned char p;
 39015                           ;rgl.c: 1469: static unsigned char pop;
 39016                           ;rgl.c: 1471: if(Tnizsza(10))
 39017                           
 39018                           ; BSR set to: 0
 39019  0051BA  0E0A               	movlw	10
 39020  0051BC  EC8F  F059         	call	_Tnizsza
 39021  0051C0  E302               	bnc	l3248
 39022                           
 39023                           ; BSR set to: 0
 39024                           ;rgl.c: 1472: {
 39025                           ;rgl.c: 1473: pop=0;
 39026  0051C2  0101               	movlb	1	; () banked
 39027  0051C4  6BAA               	clrf	ModZgCW4@pop& (0+255),b
 39028  0051C6                     l3248:
 39029                           
 39030                           ;rgl.c: 1475: }
 39031                           ;rgl.c: 1476: if(rgl.fz)
 39032  0051C6  A427               	btfss	_rgl,2,c
 39033  0051C8  D00C               	goto	l35148
 39034                           
 39035                           ;rgl.c: 1477: {
 39036                           ;rgl.c: 1478: if(Tnizsza(2))
 39037  0051CA  0E02               	movlw	2
 39038  0051CC  EC8F  F059         	call	_Tnizsza
 39039  0051D0  A0D8               	btfss	status,0,c
 39040  0051D2  0012               	return	
 39041                           
 39042                           ;rgl.c: 1479: {
 39043                           ;rgl.c: 1480: rgl.xmod=PWM.BufPWM;
 39044  0051D4  C094  F02F         	movff	_PWM+1,_rgl+8	;volatile
 39045                           
 39046                           ;rgl.c: 1481: rgl.srp=0;
 39047  0051D8  6A2E               	clrf	_rgl+7,c
 39048                           
 39049                           ;rgl.c: 1482: rgl.ytmp=0;
 39050  0051DA  6A2D               	clrf	_rgl+6,c
 39051                           
 39052                           ;rgl.c: 1483: rgl.del1s=0;
 39053  0051DC  9C27               	bcf	_rgl,6,c
 39054                           
 39055                           ;rgl.c: 1484: pop=0;
 39056  0051DE  0101               	movlb	1	; () banked
 39057  0051E0  6BAA               	clrf	ModZgCW4@pop& (0+255),b
 39058  0051E2                     l35148:
 39059                           
 39060                           ;rgl.c: 1487: }
 39061                           ;rgl.c: 1488: if(!Tnizsza(1))
 39062  0051E2  0E01               	movlw	1
 39063  0051E4  EC8F  F059         	call	_Tnizsza
 39064  0051E8  E222               	bc	l35166
 39065                           
 39066                           ;rgl.c: 1489: {
 39067                           ;rgl.c: 1490: rgl.fz=1;
 39068  0051EA  8427               	bsf	_rgl,2,c
 39069                           
 39070                           ;rgl.c: 1491: rgl.fast_up=0;
 39071  0051EC  9827               	bcf	_rgl,4,c
 39072                           
 39073                           ;rgl.c: 1492: rgl.med_up=0;
 39074  0051EE  9627               	bcf	_rgl,3,c
 39075                           
 39076                           ;rgl.c: 1493: rgl.srp=PWM.BufPWM+pop;
 39077  0051F0  0100               	movlb	0	; () banked
 39078  0051F2  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 39079  0051F4  0101               	movlb	1	; () banked
 39080  0051F6  25AA               	addwf	ModZgCW4@pop& (0+255),w,b
 39081  0051F8  6E2E               	movwf	_rgl+7,c
 39082                           
 39083                           ;rgl.c: 1494: rgl.xmod=PWM.BufPWM+pop;
 39084  0051FA  0100               	movlb	0	; () banked
 39085  0051FC  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 39086  0051FE  0101               	movlb	1	; () banked
 39087  005200  25AA               	addwf	ModZgCW4@pop& (0+255),w,b
 39088  005202  6E2F               	movwf	_rgl+8,c
 39089                           
 39090                           ; BSR set to: 1
 39091                           ;rgl.c: 1495: pop=0;
 39092  005204  6BAA               	clrf	ModZgCW4@pop& (0+255),b
 39093                           
 39094                           ; BSR set to: 1
 39095                           ;rgl.c: 1496: if(PWM.MMAXCW>PWM.MGMOD)
 39096  005206  0100               	movlb	0	; () banked
 39097  005208  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 39098  00520A  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 39099  00520C  D008               	goto	l35162
 39100                           
 39101                           ; BSR set to: 0
 39102                           ;rgl.c: 1497: {
 39103                           ;rgl.c: 1498: if(rgl.xmod>PWM.MGMOD)
 39104  00520E  502F               	movf	_rgl+8,w,c
 39105  005210  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 39106  005212  0012               	return	
 39107                           
 39108                           ; BSR set to: 0
 39109                           ;rgl.c: 1499: {
 39110                           ;rgl.c: 1500: rgl.srp=PWM.MGMOD;
 39111  005214  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 39112                           
 39113                           ;rgl.c: 1501: rgl.xmod=PWM.MGMOD;
 39114  005218  C09D  F02F         	movff	_PWM+10,_rgl+8	;volatile
 39115  00521C  0012               	return	
 39116  00521E                     l35162:
 39117                           
 39118                           ; BSR set to: 0
 39119                           ;rgl.c: 1504: else
 39120                           ;rgl.c: 1505: {
 39121                           ;rgl.c: 1506: if(rgl.xmod>PWM.MMAXCW)
 39122  00521E  502F               	movf	_rgl+8,w,c
 39123  005220  61B1               	cpfslt	(_PWM+30)& (0+255),b	;volatile
 39124  005222  0012               	return	
 39125                           
 39126                           ; BSR set to: 0
 39127                           ;rgl.c: 1507: {
 39128                           ;rgl.c: 1508: rgl.srp=PWM.MMAXCW;
 39129  005224  C0B1  F02E         	movff	_PWM+30,_rgl+7	;volatile
 39130                           
 39131                           ;rgl.c: 1509: rgl.xmod=PWM.MMAXCW;
 39132  005228  C0B1  F02F         	movff	_PWM+30,_rgl+8	;volatile
 39133  00522C  0012               	return	
 39134  00522E                     l35166:
 39135                           
 39136                           ;rgl.c: 1513: }
 39137                           ;rgl.c: 1514: if(rgl.xmod>=PWM.MDMOD) m=(rgl.xmod-PWM.MDMOD)*10;
 39138  00522E  0100               	movlb	0	; () banked
 39139  005230  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 39140  005232  5C2F               	subwf	_rgl+8,w,c
 39141  005234  E316               	bnc	l3258
 39142                           
 39143                           ; BSR set to: 0
 39144  005236  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 39145  005238  5C2F               	subwf	_rgl+8,w,c
 39146  00523A  6E1E               	movwf	?___wmul,c
 39147  00523C  6A1F               	clrf	?___wmul+1,c
 39148  00523E  A0D8               	btfss	status,0,c
 39149  005240  061F               	decf	?___wmul+1,f,c
 39150  005242  6A21               	clrf	?___wmul+3,c
 39151  005244  0E0A               	movlw	10
 39152  005246  6E20               	movwf	?___wmul+2,c
 39153  005248  EC9C  F056         	call	___wmul	;wreg free
 39154  00524C  0102               	movlb	2	; () banked
 39155  00524E  C01E  F2F1         	movff	?___wmul,ModZgCW4@m
 39156  005252  C01F  F2F2         	movff	?___wmul+1,ModZgCW4@m+1
 39157  005256  0E00               	movlw	0
 39158  005258  BFF2               	btfsc	(ModZgCW4@m+1)& (0+255),7,b
 39159  00525A  0EFF               	movlw	-1
 39160  00525C  6FF3               	movwf	(ModZgCW4@m+2)& (0+255),b
 39161  00525E  6FF4               	movwf	(ModZgCW4@m+3)& (0+255),b
 39162  005260  D003               	goto	l35170
 39163  005262                     l3258:
 39164                           
 39165                           ; BSR set to: 0
 39166                           ;rgl.c: 1515: else m=0;
 39167  005262  0102               	movlb	2	; () banked
 39168  005264  6BF1               	clrf	ModZgCW4@m& (0+255),b
 39169  005266  D8C2               	call	PL240	;call to abstracted procedure
 39170  005268                     l35170:
 39171                           
 39172                           ; BSR set to: 2
 39173                           ;rgl.c: 1516: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
 39174  005268  C2F1  F01E         	movff	ModZgCW4@m,?___aldiv
 39175  00526C  C2F2  F01F         	movff	ModZgCW4@m+1,?___aldiv+1
 39176  005270  C2F3  F020         	movff	ModZgCW4@m+2,?___aldiv+2
 39177  005274  C2F4  F021         	movff	ModZgCW4@m+3,?___aldiv+3
 39178  005278  0100               	movlb	0	; () banked
 39179  00527A  51DD               	movf	(_DtCW+14)& (0+255),w,b
 39180  00527C  C0DC  F0F9         	movff	_DtCW+13,??_ModZgCW4
 39181  005280  6BFA               	clrf	(??_ModZgCW4+1)& (0+255),b
 39182  005282  5FF9               	subwf	??_ModZgCW4& (0+255),f,b
 39183  005284  0E00               	movlw	0
 39184  005286  5BFA               	subwfb	(??_ModZgCW4+1)& (0+255),f,b
 39185  005288  C0F9  F022         	movff	??_ModZgCW4,?___aldiv+4
 39186  00528C  C0FA  F023         	movff	??_ModZgCW4+1,?___aldiv+5
 39187  005290  BE23               	btfsc	?___aldiv+5,7,c
 39188  005292  0EFF               	movlw	-1
 39189  005294  6E24               	movwf	?___aldiv+6,c
 39190  005296  6E25               	movwf	?___aldiv+7,c
 39191  005298  ECE3  F042         	call	___aldiv	;wreg free
 39192  00529C  C01E  F2F1         	movff	?___aldiv,ModZgCW4@m
 39193  0052A0  C01F  F2F2         	movff	?___aldiv+1,ModZgCW4@m+1
 39194  0052A4  C020  F2F3         	movff	?___aldiv+2,ModZgCW4@m+2
 39195  0052A8  C021  F2F4         	movff	?___aldiv+3,ModZgCW4@m+3
 39196                           
 39197                           ;rgl.c: 1517: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
 39198  0052AC  C2F1  F01E         	movff	ModZgCW4@m,?___lmul
 39199  0052B0  C2F2  F01F         	movff	ModZgCW4@m+1,?___lmul+1
 39200  0052B4  C2F3  F020         	movff	ModZgCW4@m+2,?___lmul+2
 39201  0052B8  C2F4  F021         	movff	ModZgCW4@m+3,?___lmul+3
 39202  0052BC  51DD               	movf	(_DtCW+14)& (0+255),w,b
 39203  0052BE  C0DB  F0F9         	movff	_DtCW+12,??_ModZgCW4
 39204  0052C2  6BFA               	clrf	(??_ModZgCW4+1)& (0+255),b
 39205  0052C4  5FF9               	subwf	??_ModZgCW4& (0+255),f,b
 39206  0052C6  0E00               	movlw	0
 39207  0052C8  5BFA               	subwfb	(??_ModZgCW4+1)& (0+255),f,b
 39208  0052CA  C0F9  F022         	movff	??_ModZgCW4,?___lmul+4
 39209  0052CE  C0FA  F023         	movff	??_ModZgCW4+1,?___lmul+5
 39210  0052D2  BE23               	btfsc	?___lmul+5,7,c
 39211  0052D4  0EFF               	movlw	-1
 39212  0052D6  6E24               	movwf	?___lmul+6,c
 39213  0052D8  6E25               	movwf	?___lmul+7,c
 39214  0052DA  ECD2  F050         	call	___lmul	;wreg free
 39215  0052DE  C01E  F2F1         	movff	?___lmul,ModZgCW4@m
 39216  0052E2  C01F  F2F2         	movff	?___lmul+1,ModZgCW4@m+1
 39217  0052E6  C020  F2F3         	movff	?___lmul+2,ModZgCW4@m+2
 39218  0052EA  C021  F2F4         	movff	?___lmul+3,ModZgCW4@m+3
 39219                           
 39220                           ;rgl.c: 1518: if(m<0) m=0;
 39221  0052EE  0102               	movlb	2	; () banked
 39222  0052F0  AFF4               	btfss	(ModZgCW4@m+3)& (0+255),7,b
 39223  0052F2  D002               	goto	l35176
 39224                           
 39225                           ; BSR set to: 2
 39226  0052F4  6BF1               	clrf	ModZgCW4@m& (0+255),b
 39227  0052F6  D87A               	call	PL240	;call to abstracted procedure
 39228  0052F8                     l35176:
 39229                           
 39230                           ; BSR set to: 2
 39231                           ;rgl.c: 1519: m=m/10+PWM.MDMOD;
 39232  0052F8  C2F1  F01E         	movff	ModZgCW4@m,?___aldiv
 39233  0052FC  C2F2  F01F         	movff	ModZgCW4@m+1,?___aldiv+1
 39234  005300  C2F3  F020         	movff	ModZgCW4@m+2,?___aldiv+2
 39235  005304  C2F4  F021         	movff	ModZgCW4@m+3,?___aldiv+3
 39236  005308  0E0A               	movlw	10
 39237  00530A  6E22               	movwf	?___aldiv+4,c
 39238  00530C  0E00               	movlw	0
 39239  00530E  6A23               	clrf	?___aldiv+5,c
 39240  005310  6A24               	clrf	?___aldiv+6,c
 39241  005312  6A25               	clrf	?___aldiv+7,c
 39242  005314  ECE3  F042         	call	___aldiv	;wreg free
 39243  005318  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 39244  00531A  241E               	addwf	?___aldiv,w,c
 39245  00531C  0102               	movlb	2	; () banked
 39246  00531E  6FF1               	movwf	ModZgCW4@m& (0+255),b
 39247  005320  0E00               	movlw	0
 39248  005322  201F               	addwfc	?___aldiv+1,w,c
 39249  005324  6FF2               	movwf	(ModZgCW4@m+1)& (0+255),b
 39250  005326  0E00               	movlw	0
 39251  005328  2020               	addwfc	?___aldiv+2,w,c
 39252  00532A  6FF3               	movwf	(ModZgCW4@m+2)& (0+255),b
 39253  00532C  0E00               	movlw	0
 39254  00532E  2021               	addwfc	?___aldiv+3,w,c
 39255  005330  6FF4               	movwf	(ModZgCW4@m+3)& (0+255),b
 39256                           
 39257                           ; BSR set to: 2
 39258                           ;rgl.c: 1520: if(m>0xff)
 39259  005332  51F4               	movf	(ModZgCW4@m+3)& (0+255),w,b
 39260  005334  0A80               	xorlw	128
 39261  005336  0F80               	addlw	128
 39262  005338  E108               	bnz	u66425
 39263  00533A  0E00               	movlw	0
 39264  00533C  5DF3               	subwf	(ModZgCW4@m+2)& (0+255),w,b
 39265  00533E  E105               	bnz	u66425
 39266  005340  0E01               	movlw	1
 39267  005342  5DF2               	subwf	(ModZgCW4@m+1)& (0+255),w,b
 39268  005344  E102               	bnz	u66425
 39269  005346  0E00               	movlw	0
 39270  005348  5DF1               	subwf	ModZgCW4@m& (0+255),w,b
 39271  00534A                     u66425:
 39272  00534A  E304               	bnc	l3261
 39273                           
 39274                           ; BSR set to: 2
 39275                           ;rgl.c: 1521: {
 39276                           ;rgl.c: 1522: rgl.fz=0;
 39277  00534C  9427               	bcf	_rgl,2,c
 39278                           
 39279                           ;rgl.c: 1523: rgl.tmp_pwm=rgl.xmod;
 39280  00534E  C02F  F030         	movff	_rgl+8,_rgl+9
 39281                           
 39282                           ;rgl.c: 1524: return;
 39283  005352  0012               	return	
 39284  005354                     l3261:
 39285                           
 39286                           ; BSR set to: 2
 39287                           ;rgl.c: 1525: }
 39288                           ;rgl.c: 1526: if(rgl.fz&&(rgl.xmod>m))
 39289  005354  A427               	btfss	_rgl,2,c
 39290  005356  D01F               	goto	l3262
 39291                           
 39292                           ; BSR set to: 2
 39293  005358  C02F  F0F9         	movff	_rgl+8,??_ModZgCW4
 39294  00535C  0100               	movlb	0	; () banked
 39295  00535E  6BFA               	clrf	(??_ModZgCW4+1)& (0+255),b
 39296  005360  6BFB               	clrf	(??_ModZgCW4+2)& (0+255),b
 39297  005362  6BFC               	clrf	(??_ModZgCW4+3)& (0+255),b
 39298  005364  0102               	movlb	2	; () banked
 39299  005366  51F4               	movf	(ModZgCW4@m+3)& (0+255),w,b
 39300  005368  0A80               	xorlw	128
 39301  00536A  0100               	movlb	0	; () banked
 39302  00536C  6FFD               	movwf	(??_ModZgCW4+4)& (0+255),b
 39303  00536E  51F9               	movf	??_ModZgCW4& (0+255),w,b
 39304  005370  0102               	movlb	2	; () banked
 39305  005372  5DF1               	subwf	ModZgCW4@m& (0+255),w,b
 39306  005374  0100               	movlb	0	; () banked
 39307  005376  51FA               	movf	(??_ModZgCW4+1)& (0+255),w,b
 39308  005378  0102               	movlb	2	; () banked
 39309  00537A  59F2               	subwfb	(ModZgCW4@m+1)& (0+255),w,b
 39310  00537C  0100               	movlb	0	; () banked
 39311  00537E  51FB               	movf	(??_ModZgCW4+2)& (0+255),w,b
 39312  005380  0102               	movlb	2	; () banked
 39313  005382  59F3               	subwfb	(ModZgCW4@m+2)& (0+255),w,b
 39314  005384  0100               	movlb	0	; () banked
 39315  005386  51FC               	movf	(??_ModZgCW4+3)& (0+255),w,b
 39316  005388  0A80               	xorlw	128
 39317  00538A  59FD               	subwfb	(??_ModZgCW4+4)& (0+255),w,b
 39318  00538C  E204               	bc	l3262
 39319                           
 39320                           ; BSR set to: 0
 39321                           ;rgl.c: 1527: rgl.srp=(rgl.xmod-m);
 39322  00538E  0102               	movlb	2	; () banked
 39323  005390  51F1               	movf	ModZgCW4@m& (0+255),w,b
 39324  005392  5C2F               	subwf	_rgl+8,w,c
 39325  005394  6E2E               	movwf	_rgl+7,c
 39326  005396                     l3262:
 39327                           
 39328                           ;rgl.c: 1528: m+=rgl.srp;
 39329  005396  502E               	movf	_rgl+7,w,c
 39330  005398  0102               	movlb	2	; () banked
 39331  00539A  27F1               	addwf	ModZgCW4@m& (0+255),f,b
 39332  00539C  0E00               	movlw	0
 39333  00539E  23F2               	addwfc	(ModZgCW4@m+1)& (0+255),f,b
 39334  0053A0  23F3               	addwfc	(ModZgCW4@m+2)& (0+255),f,b
 39335  0053A2  23F4               	addwfc	(ModZgCW4@m+3)& (0+255),f,b
 39336                           
 39337                           ;rgl.c: 1529: if(m>rgl.xmod) p=rgl.xmod;
 39338  0053A4  C02F  F0F9         	movff	_rgl+8,??_ModZgCW4
 39339  0053A8  0100               	movlb	0	; () banked
 39340  0053AA  6BFA               	clrf	(??_ModZgCW4+1)& (0+255),b
 39341  0053AC  6BFB               	clrf	(??_ModZgCW4+2)& (0+255),b
 39342  0053AE  6BFC               	clrf	(??_ModZgCW4+3)& (0+255),b
 39343  0053B0  51FC               	movf	(??_ModZgCW4+3)& (0+255),w,b
 39344  0053B2  0A80               	xorlw	128
 39345  0053B4  6FFD               	movwf	(??_ModZgCW4+4)& (0+255),b
 39346  0053B6  0102               	movlb	2	; () banked
 39347  0053B8  51F1               	movf	ModZgCW4@m& (0+255),w,b
 39348  0053BA  0100               	movlb	0	; () banked
 39349  0053BC  5DF9               	subwf	??_ModZgCW4& (0+255),w,b
 39350  0053BE  0102               	movlb	2	; () banked
 39351  0053C0  51F2               	movf	(ModZgCW4@m+1)& (0+255),w,b
 39352  0053C2  0100               	movlb	0	; () banked
 39353  0053C4  59FA               	subwfb	(??_ModZgCW4+1)& (0+255),w,b
 39354  0053C6  0102               	movlb	2	; () banked
 39355  0053C8  51F3               	movf	(ModZgCW4@m+2)& (0+255),w,b
 39356  0053CA  0100               	movlb	0	; () banked
 39357  0053CC  59FB               	subwfb	(??_ModZgCW4+2)& (0+255),w,b
 39358  0053CE  0102               	movlb	2	; () banked
 39359  0053D0  51F4               	movf	(ModZgCW4@m+3)& (0+255),w,b
 39360  0053D2  0A80               	xorlw	128
 39361  0053D4  0100               	movlb	0	; () banked
 39362  0053D6  59FD               	subwfb	(??_ModZgCW4+4)& (0+255),w,b
 39363  0053D8  E203               	bc	l3263
 39364                           
 39365                           ; BSR set to: 0
 39366  0053DA  C02F  F2F0         	movff	_rgl+8,ModZgCW4@p
 39367  0053DE  D002               	goto	l3264
 39368  0053E0                     l3263:
 39369                           
 39370                           ; BSR set to: 0
 39371                           ;rgl.c: 1530: else p=m;
 39372  0053E0  C2F1  F2F0         	movff	ModZgCW4@m,ModZgCW4@p
 39373  0053E4                     l3264:
 39374                           
 39375                           ; BSR set to: 0
 39376                           ;rgl.c: 1531: rgl.fz=0;
 39377  0053E4  9427               	bcf	_rgl,2,c
 39378                           
 39379                           ;rgl.c: 1532: rgl.tmp_pwm=p;
 39380  0053E6  C2F0  F030         	movff	ModZgCW4@p,_rgl+9
 39381  0053EA  0012               	return	
 39382  0053EC                     __end_of_ModZgCW4:
 39383                           	opt stack 0
 39384  0053EC                     PL240:
 39385                           	opt stack 24
 39386  0053EC  6BF2               	clrf	(ModZgCW4@m+1)& (0+255),b
 39387  0053EE  6BF3               	clrf	(ModZgCW4@m+2)& (0+255),b
 39388  0053F0  6BF4               	clrf	(ModZgCW4@m+3)& (0+255),b
 39389  0053F2  0012               	return	
 39390  0053F4                     __end_ofPL240:
 39391                           	opt stack 0
 39392                           tblptru	equ	0xFF8
 39393                           tblptrh	equ	0xFF7
 39394                           tblptrl	equ	0xFF6
 39395                           tablat	equ	0xFF5
 39396                           prodh	equ	0xFF4
 39397                           prodl	equ	0xFF3
 39398                           intcon	equ	0xFF2
 39399                           postinc0	equ	0xFEE
 39400                           wreg	equ	0xFE8
 39401                           indf1	equ	0xFE7
 39402                           postinc1	equ	0xFE6
 39403                           postdec1	equ	0xFE5
 39404                           fsr1h	equ	0xFE2
 39405                           fsr1l	equ	0xFE1
 39406                           indf2	equ	0xFDF
 39407                           postinc2	equ	0xFDE
 39408                           postdec2	equ	0xFDD
 39409                           fsr2h	equ	0xFDA
 39410                           fsr2l	equ	0xFD9
 39411                           status	equ	0xFD8
 39412                           
 39413 ;; *************** function _ModDkCW4 *****************
 39414 ;; Defined at:
 39415 ;;		line 1537 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 39416 ;; Parameters:    Size  Location     Type
 39417 ;;		None
 39418 ;; Auto vars:     Size  Location     Type
 39419 ;;  m               4    8[BANK0 ] long 
 39420 ;;  ada             1    7[BANK0 ] char 
 39421 ;;  p               1    6[BANK0 ] unsigned char 
 39422 ;;  k               1    5[BANK0 ] unsigned char 
 39423 ;; Return value:  Size  Location     Type
 39424 ;;		None               void
 39425 ;; Registers used:
 39426 ;;		wreg, status,2, status,0, cstack
 39427 ;; Tracked objects:
 39428 ;;		On entry : C/0
 39429 ;;		On exit  : C/0
 39430 ;;		Unchanged: FFFFFFF0/0
 39431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39433 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39434 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39435 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39436 ;;Total ram usage:       12 bytes
 39437 ;; Hardware stack levels used:    1
 39438 ;; Hardware stack levels required when called:    5
 39439 ;; This function calls:
 39440 ;;		___wmul
 39441 ;; This function is called by:
 39442 ;;		_Moduluj
 39443 ;; This function uses a non-reentrant model
 39444 ;;
 39445                           
 39446                           	psect	text176
 39447  008934                     __ptext176:
 39448                           	opt stack 0
 39449  008934                     _ModDkCW4:
 39450                           	opt stack 24
 39451                           
 39452                           ;rgl.c: 1538: signed long m;
 39453                           ;rgl.c: 1539: signed char ada;
 39454                           ;rgl.c: 1540: unsigned char k,p;
 39455                           ;rgl.c: 1542: if(!rgl.fz) return;
 39456  008934  A427               	btfss	_rgl,2,c
 39457  008936  0012               	return	
 39458                           
 39459                           ;rgl.c: 1543: ada=DtCW.AC_CW-DtCW.DAD_CW;
 39460  008938  0100               	movlb	0	; () banked
 39461  00893A  51DD               	movf	(_DtCW+14)& (0+255),w,b
 39462  00893C  5DDB               	subwf	(_DtCW+12)& (0+255),w,b
 39463  00893E  6FFA               	movwf	ModDkCW4@ada& (0+255),b
 39464                           
 39465                           ; BSR set to: 0
 39466                           ;rgl.c: 1544: k=2;
 39467  008940  0E02               	movlw	2
 39468  008942  6FF8               	movwf	ModDkCW4@k& (0+255),b
 39469                           
 39470                           ; BSR set to: 0
 39471                           ;rgl.c: 1545: if(ada<0) k=1;
 39472  008944  AFFA               	btfss	ModDkCW4@ada& (0+255),7,b
 39473  008946  D002               	goto	l35200
 39474                           
 39475                           ; BSR set to: 0
 39476  008948  0E01               	movlw	1
 39477  00894A  6FF8               	movwf	ModDkCW4@k& (0+255),b
 39478  00894C                     l35200:
 39479                           
 39480                           ; BSR set to: 0
 39481                           ;rgl.c: 1546: m=rgl.srp+k*ada;
 39482  00894C  C0F8  F01E         	movff	ModDkCW4@k,?___wmul
 39483  008950  6A1F               	clrf	?___wmul+1,c
 39484  008952  51FA               	movf	ModDkCW4@ada& (0+255),w,b
 39485  008954  6E20               	movwf	?___wmul+2,c
 39486  008956  6A21               	clrf	?___wmul+3,c
 39487  008958  BE20               	btfsc	?___wmul+2,7,c
 39488  00895A  0621               	decf	?___wmul+3,f,c
 39489  00895C  EC9C  F056         	call	___wmul	;wreg free
 39490  008960  502E               	movf	_rgl+7,w,c
 39491  008962  241E               	addwf	?___wmul,w,c
 39492  008964  6FF3               	movwf	??_ModDkCW4& (0+255),b
 39493  008966  0E00               	movlw	0
 39494  008968  201F               	addwfc	?___wmul+1,w,c
 39495  00896A  6FF4               	movwf	(??_ModDkCW4+1)& (0+255),b
 39496  00896C  C0F3  F0FB         	movff	??_ModDkCW4,ModDkCW4@m
 39497  008970  C0F4  F0FC         	movff	??_ModDkCW4+1,ModDkCW4@m+1
 39498  008974  0E00               	movlw	0
 39499  008976  BFFC               	btfsc	(ModDkCW4@m+1)& (0+255),7,b
 39500  008978  0EFF               	movlw	-1
 39501  00897A  6FFD               	movwf	(ModDkCW4@m+2)& (0+255),b
 39502  00897C  6FFE               	movwf	(ModDkCW4@m+3)& (0+255),b
 39503                           
 39504                           ; BSR set to: 0
 39505                           ;rgl.c: 1547: if(m>rgl.xmod) p=rgl.xmod;
 39506  00897E  C02F  F0F3         	movff	_rgl+8,??_ModDkCW4
 39507  008982  6BF4               	clrf	(??_ModDkCW4+1)& (0+255),b
 39508  008984  6BF5               	clrf	(??_ModDkCW4+2)& (0+255),b
 39509  008986  6BF6               	clrf	(??_ModDkCW4+3)& (0+255),b
 39510  008988  51F6               	movf	(??_ModDkCW4+3)& (0+255),w,b
 39511  00898A  0A80               	xorlw	128
 39512  00898C  6FF7               	movwf	(??_ModDkCW4+4)& (0+255),b
 39513  00898E  51FB               	movf	ModDkCW4@m& (0+255),w,b
 39514  008990  5DF3               	subwf	??_ModDkCW4& (0+255),w,b
 39515  008992  51FC               	movf	(ModDkCW4@m+1)& (0+255),w,b
 39516  008994  59F4               	subwfb	(??_ModDkCW4+1)& (0+255),w,b
 39517  008996  51FD               	movf	(ModDkCW4@m+2)& (0+255),w,b
 39518  008998  59F5               	subwfb	(??_ModDkCW4+2)& (0+255),w,b
 39519  00899A  51FE               	movf	(ModDkCW4@m+3)& (0+255),w,b
 39520  00899C  0A80               	xorlw	128
 39521  00899E  59F7               	subwfb	(??_ModDkCW4+4)& (0+255),w,b
 39522  0089A0  E203               	bc	l35206
 39523                           
 39524                           ; BSR set to: 0
 39525  0089A2  C02F  F0F9         	movff	_rgl+8,ModDkCW4@p
 39526  0089A6  D017               	goto	l3271
 39527  0089A8                     l35206:
 39528                           
 39529                           ; BSR set to: 0
 39530                           ;rgl.c: 1548: else
 39531                           ;rgl.c: 1549: if(m<PWM.MDMOD) p=PWM.MDMOD;
 39532  0089A8  C09C  F0F3         	movff	_PWM+9,??_ModDkCW4	;volatile
 39533  0089AC  6BF4               	clrf	(??_ModDkCW4+1)& (0+255),b
 39534  0089AE  6BF5               	clrf	(??_ModDkCW4+2)& (0+255),b
 39535  0089B0  6BF6               	clrf	(??_ModDkCW4+3)& (0+255),b
 39536  0089B2  51FE               	movf	(ModDkCW4@m+3)& (0+255),w,b
 39537  0089B4  0A80               	xorlw	128
 39538  0089B6  6FF7               	movwf	(??_ModDkCW4+4)& (0+255),b
 39539  0089B8  51F3               	movf	??_ModDkCW4& (0+255),w,b
 39540  0089BA  5DFB               	subwf	ModDkCW4@m& (0+255),w,b
 39541  0089BC  51F4               	movf	(??_ModDkCW4+1)& (0+255),w,b
 39542  0089BE  59FC               	subwfb	(ModDkCW4@m+1)& (0+255),w,b
 39543  0089C0  51F5               	movf	(??_ModDkCW4+2)& (0+255),w,b
 39544  0089C2  59FD               	subwfb	(ModDkCW4@m+2)& (0+255),w,b
 39545  0089C4  51F6               	movf	(??_ModDkCW4+3)& (0+255),w,b
 39546  0089C6  0A80               	xorlw	128
 39547  0089C8  59F7               	subwfb	(??_ModDkCW4+4)& (0+255),w,b
 39548  0089CA  E203               	bc	l3272
 39549                           
 39550                           ; BSR set to: 0
 39551  0089CC  C09C  F0F9         	movff	_PWM+9,ModDkCW4@p	;volatile
 39552  0089D0  D002               	goto	l3271
 39553  0089D2                     l3272:
 39554                           
 39555                           ; BSR set to: 0
 39556                           ;rgl.c: 1550: else p=m;
 39557  0089D2  C0FB  F0F9         	movff	ModDkCW4@m,ModDkCW4@p
 39558  0089D6                     l3271:
 39559                           
 39560                           ; BSR set to: 0
 39561                           ;rgl.c: 1551: rgl.tmp_pwm=p;
 39562  0089D6  C0F9  F030         	movff	ModDkCW4@p,_rgl+9
 39563  0089DA  0012               	return	
 39564  0089DC                     __end_of_ModDkCW4:
 39565                           	opt stack 0
 39566                           tblptru	equ	0xFF8
 39567                           tblptrh	equ	0xFF7
 39568                           tblptrl	equ	0xFF6
 39569                           tablat	equ	0xFF5
 39570                           prodh	equ	0xFF4
 39571                           prodl	equ	0xFF3
 39572                           intcon	equ	0xFF2
 39573                           postinc0	equ	0xFEE
 39574                           wreg	equ	0xFE8
 39575                           indf1	equ	0xFE7
 39576                           postinc1	equ	0xFE6
 39577                           postdec1	equ	0xFE5
 39578                           fsr1h	equ	0xFE2
 39579                           fsr1l	equ	0xFE1
 39580                           indf2	equ	0xFDF
 39581                           postinc2	equ	0xFDE
 39582                           postdec2	equ	0xFDD
 39583                           fsr2h	equ	0xFDA
 39584                           fsr2l	equ	0xFD9
 39585                           status	equ	0xFD8
 39586                           
 39587 ;; *************** function _IncMaxCW4 *****************
 39588 ;; Defined at:
 39589 ;;		line 1699 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 39590 ;; Parameters:    Size  Location     Type
 39591 ;;		None
 39592 ;; Auto vars:     Size  Location     Type
 39593 ;;  k               1    0        unsigned char 
 39594 ;; Return value:  Size  Location     Type
 39595 ;;		None               void
 39596 ;; Registers used:
 39597 ;;		wreg, status,2, status,0, cstack
 39598 ;; Tracked objects:
 39599 ;;		On entry : F/1
 39600 ;;		On exit  : E/0
 39601 ;;		Unchanged: FFFFFFF0/0
 39602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39606 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39607 ;;Total ram usage:        3 bytes
 39608 ;; Hardware stack levels used:    1
 39609 ;; Hardware stack levels required when called:    5
 39610 ;; This function calls:
 39611 ;;		_Trosnie
 39612 ;; This function is called by:
 39613 ;;		_Moduluj
 39614 ;; This function uses a non-reentrant model
 39615 ;;
 39616                           
 39617                           	psect	text177
 39618  009F54                     __ptext177:
 39619                           	opt stack 0
 39620  009F54                     _IncMaxCW4:
 39621                           	opt stack 24
 39622                           
 39623                           ; BSR set to: 1
 39624                           ;rgl.c: 1700: unsigned char k;
 39625                           ;rgl.c: 1703: if(rgl.fz)
 39626  009F54  A427               	btfss	_rgl,2,c
 39627  009F56  D010               	goto	l35222
 39628                           
 39629                           ; BSR set to: 1
 39630                           ;rgl.c: 1704: {
 39631                           ;rgl.c: 1705: if(PWM.MMAXCW>PWM.MGMOD)
 39632  009F58  0100               	movlb	0	; () banked
 39633  009F5A  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 39634  009F5C  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 39635  009F5E  D006               	goto	l35218
 39636                           
 39637                           ; BSR set to: 0
 39638                           ;rgl.c: 1706: {
 39639                           ;rgl.c: 1707: if(rgl.xmod>PWM.MGMOD) rgl.xmod=PWM.MGMOD;
 39640  009F60  502F               	movf	_rgl+8,w,c
 39641  009F62  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 39642  009F64  0012               	return	
 39643                           
 39644                           ; BSR set to: 0
 39645  009F66  C09D  F02F         	movff	_PWM+10,_rgl+8	;volatile
 39646  009F6A  0012               	return	
 39647  009F6C                     l35218:
 39648                           
 39649                           ; BSR set to: 0
 39650                           ;rgl.c: 1709: else
 39651                           ;rgl.c: 1710: {
 39652                           ;rgl.c: 1711: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
 39653  009F6C  502F               	movf	_rgl+8,w,c
 39654  009F6E  61B1               	cpfslt	(_PWM+30)& (0+255),b	;volatile
 39655  009F70  0012               	return	
 39656                           
 39657                           ; BSR set to: 0
 39658  009F72  C0B1  F02F         	movff	_PWM+30,_rgl+8	;volatile
 39659  009F76  0012               	return	
 39660  009F78                     l35222:
 39661                           
 39662                           ; BSR set to: 1
 39663                           ;rgl.c: 1714: }
 39664                           ;rgl.c: 1717: if(Trosnie(1)) return;
 39665  009F78  0E01               	movlw	1
 39666  009F7A  EC5F  F059         	call	_Trosnie
 39667  009F7E  B0D8               	btfsc	status,0,c
 39668  009F80  0012               	return	
 39669                           
 39670                           ; BSR set to: 1
 39671                           ;rgl.c: 1719: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
 39672                           
 39673                           ; BSR set to: 1
 39674  009F82  502F               	movf	_rgl+8,w,c
 39675  009F84  6E1F               	movwf	??_IncMaxCW4& (0+255),c
 39676  009F86  6A20               	clrf	(??_IncMaxCW4+1)& (0+255),c
 39677  009F88  0E05               	movlw	5
 39678  009F8A  261F               	addwf	??_IncMaxCW4,f,c
 39679  009F8C  0E00               	movlw	0
 39680  009F8E  2220               	addwfc	??_IncMaxCW4+1,f,c
 39681  009F90  5020               	movf	??_IncMaxCW4+1,w,c
 39682  009F92  0A80               	xorlw	128
 39683  009F94  0F80               	addlw	-128
 39684  009F96  0EF1               	movlw	241
 39685  009F98  B4D8               	btfsc	status,2,c
 39686  009F9A  5C1F               	subwf	??_IncMaxCW4,w,c
 39687  009F9C  E303               	bnc	l35232
 39688                           
 39689                           ; BSR set to: 1
 39690  009F9E  0EF0               	movlw	240
 39691  009FA0  6E2F               	movwf	_rgl+8,c
 39692  009FA2  D002               	goto	l35234
 39693  009FA4                     l35232:
 39694                           
 39695                           ; BSR set to: 1
 39696                           ;rgl.c: 1720: else rgl.xmod+=k;
 39697  009FA4  0E05               	movlw	5
 39698  009FA6  262F               	addwf	_rgl+8,f,c
 39699  009FA8                     l35234:
 39700                           
 39701                           ; BSR set to: 1
 39702                           ;rgl.c: 1721: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=PWM.MMAXCW;
 39703  009FA8  502F               	movf	_rgl+8,w,c
 39704  009FAA  0100               	movlb	0	; () banked
 39705  009FAC  D7E0               	goto	L83
 39706  009FAE                     __end_of_IncMaxCW4:
 39707                           	opt stack 0
 39708                           tblptru	equ	0xFF8
 39709                           tblptrh	equ	0xFF7
 39710                           tblptrl	equ	0xFF6
 39711                           tablat	equ	0xFF5
 39712                           prodh	equ	0xFF4
 39713                           prodl	equ	0xFF3
 39714                           intcon	equ	0xFF2
 39715                           postinc0	equ	0xFEE
 39716                           wreg	equ	0xFE8
 39717                           indf1	equ	0xFE7
 39718                           postinc1	equ	0xFE6
 39719                           postdec1	equ	0xFE5
 39720                           fsr1h	equ	0xFE2
 39721                           fsr1l	equ	0xFE1
 39722                           indf2	equ	0xFDF
 39723                           postinc2	equ	0xFDE
 39724                           postdec2	equ	0xFDD
 39725                           fsr2h	equ	0xFDA
 39726                           fsr2l	equ	0xFD9
 39727                           status	equ	0xFD8
 39728                           
 39729 ;; *************** function _ModPruCW4 *****************
 39730 ;; Defined at:
 39731 ;;		line 1558 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 39732 ;; Parameters:    Size  Location     Type
 39733 ;;		None
 39734 ;; Auto vars:     Size  Location     Type
 39735 ;;  k               1    1[BANK0 ] char 
 39736 ;;  tmp             1    0[BANK0 ] unsigned char 
 39737 ;; Return value:  Size  Location     Type
 39738 ;;		None               void
 39739 ;; Registers used:
 39740 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 39741 ;; Tracked objects:
 39742 ;;		On entry : E/1
 39743 ;;		On exit  : E/0
 39744 ;;		Unchanged: FFFFFFF0/0
 39745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39747 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39748 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39749 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39750 ;;Total ram usage:        7 bytes
 39751 ;; Hardware stack levels used:    1
 39752 ;; Hardware stack levels required when called:    5
 39753 ;; This function calls:
 39754 ;;		_Tnizsza
 39755 ;;		_Tstoi
 39756 ;;		_Trosnie
 39757 ;;		_Twyzsza
 39758 ;;		_Tmaleje
 39759 ;; This function is called by:
 39760 ;;		_Moduluj
 39761 ;; This function uses a non-reentrant model
 39762 ;;
 39763                           
 39764                           	psect	text178
 39765  0053F4                     __ptext178:
 39766                           	opt stack 0
 39767  0053F4                     _ModPruCW4:
 39768                           	opt stack 24
 39769                           
 39770                           ;rgl.c: 1559: static unsigned char l,m,o,p,q,r,s;
 39771                           ;rgl.c: 1560: unsigned char tmp;
 39772                           ;rgl.c: 1561: signed char k;
 39773                           ;rgl.c: 1562: if(!rgl.fz)
 39774  0053F4  B427               	btfsc	_rgl,2,c
 39775  0053F6  D05E               	goto	l3290
 39776                           
 39777                           ;rgl.c: 1563: {
 39778                           ;rgl.c: 1564: l=0;
 39779  0053F8  0101               	movlb	1	; () banked
 39780  0053FA  6B9D               	clrf	ModPruCW4@l& (0+255),b
 39781                           
 39782                           ;rgl.c: 1565: m=0;
 39783  0053FC  6B9E               	clrf	ModPruCW4@m& (0+255),b
 39784                           
 39785                           ;rgl.c: 1566: o=0;
 39786  0053FE  6B9F               	clrf	ModPruCW4@o& (0+255),b
 39787                           
 39788                           ;rgl.c: 1567: p=0;
 39789  005400  6BA0               	clrf	ModPruCW4@p& (0+255),b
 39790                           
 39791                           ; BSR set to: 1
 39792                           ;rgl.c: 1568: if(q<255) q++;
 39793  005402  29A1               	incf	ModPruCW4@q& (0+255),w,b
 39794  005404  A4D8               	btfss	status,2,c
 39795                           
 39796                           ; BSR set to: 1
 39797  005406  2BA1               	incf	ModPruCW4@q& (0+255),f,b
 39798                           
 39799                           ; BSR set to: 1
 39800                           ;rgl.c: 1569: if(s<255) s++;
 39801  005408  29A2               	incf	ModPruCW4@s& (0+255),w,b
 39802  00540A  A4D8               	btfss	status,2,c
 39803                           
 39804                           ; BSR set to: 1
 39805  00540C  2BA2               	incf	ModPruCW4@s& (0+255),f,b
 39806                           
 39807                           ; BSR set to: 1
 39808                           ;rgl.c: 1570: if(DtCW._newPCW) s=0;
 39809  00540E  0100               	movlb	0	; () banked
 39810  005410  A1D0               	btfss	(_DtCW+1)& (0+255),0,b
 39811  005412  D002               	goto	l35254
 39812                           
 39813                           ; BSR set to: 0
 39814  005414  0101               	movlb	1	; () banked
 39815  005416  6BA2               	clrf	ModPruCW4@s& (0+255),b
 39816  005418                     l35254:
 39817                           
 39818                           ;rgl.c: 1571: if(Tnizsza(0))
 39819  005418  0E00               	movlw	0
 39820  00541A  EC8F  F059         	call	_Tnizsza
 39821  00541E  A0D8               	btfss	status,0,c
 39822  005420  0012               	return	
 39823                           
 39824                           ;rgl.c: 1572: {
 39825                           ;rgl.c: 1573: if(!Tnizsza(10))
 39826  005422  0E0A               	movlw	10
 39827  005424  EC8F  F059         	call	_Tnizsza
 39828  005428  B0D8               	btfsc	status,0,c
 39829  00542A  0012               	return	
 39830                           
 39831                           ;rgl.c: 1574: {
 39832                           ;rgl.c: 1575: k=0;
 39833  00542C  0100               	movlb	0	; () banked
 39834  00542E  6BF4               	clrf	ModPruCW4@k& (0+255),b
 39835                           
 39836                           ; BSR set to: 0
 39837                           ;rgl.c: 1576: if(Tstoi()&&s>=1)
 39838  005430  ECD7  F05A         	call	_Tstoi	;wreg free
 39839  005434  E307               	bnc	l35268
 39840                           
 39841                           ; BSR set to: 0
 39842  005436  0101               	movlb	1	; () banked
 39843  005438  51A2               	movf	ModPruCW4@s& (0+255),w,b
 39844  00543A  E004               	bz	l35268
 39845                           
 39846                           ; BSR set to: 1
 39847                           ;rgl.c: 1577: {
 39848                           ;rgl.c: 1578: s=0;
 39849  00543C  6BA2               	clrf	ModPruCW4@s& (0+255),b
 39850                           
 39851                           ; BSR set to: 1
 39852                           ;rgl.c: 1579: k=2;
 39853  00543E  0E02               	movlw	2
 39854  005440  0100               	movlb	0	; () banked
 39855  005442  6FF4               	movwf	ModPruCW4@k& (0+255),b
 39856  005444                     l35268:
 39857                           
 39858                           ;rgl.c: 1580: }
 39859                           ;rgl.c: 1581: if(Trosnie(1)&&s>=1)
 39860  005444  0E01               	movlw	1
 39861  005446  EC5F  F059         	call	_Trosnie
 39862  00544A  E30E               	bnc	l3297
 39863  00544C  0101               	movlb	1	; () banked
 39864  00544E  51A2               	movf	ModPruCW4@s& (0+255),w,b
 39865  005450  E00B               	bz	l3297
 39866                           
 39867                           ; BSR set to: 1
 39868                           ;rgl.c: 1582: {
 39869                           ;rgl.c: 1583: s=0;
 39870  005452  6BA2               	clrf	ModPruCW4@s& (0+255),b
 39871                           
 39872                           ; BSR set to: 1
 39873                           ;rgl.c: 1584: k=10;
 39874  005454  0E0A               	movlw	10
 39875  005456  0100               	movlb	0	; () banked
 39876  005458  6FF4               	movwf	ModPruCW4@k& (0+255),b
 39877                           
 39878                           ; BSR set to: 0
 39879                           ;rgl.c: 1585: if(Trosnie(2)) k=8;
 39880  00545A  0E02               	movlw	2
 39881  00545C  EC5F  F059         	call	_Trosnie
 39882  005460  E304               	bnc	l35280
 39883                           
 39884                           ; BSR set to: 0
 39885  005462  0E08               	movlw	8
 39886  005464  6FF4               	movwf	ModPruCW4@k& (0+255),b
 39887  005466  D001               	goto	l35280
 39888  005468                     l3297:
 39889                           
 39890                           ;rgl.c: 1587: else
 39891                           ;rgl.c: 1588: rgl.ytmp=0;
 39892  005468  6A2D               	clrf	_rgl+6,c
 39893  00546A                     l35280:
 39894                           
 39895                           ;rgl.c: 1589: if(PWM.BufPWM>rgl.xmod) return;
 39896  00546A  0100               	movlb	0	; () banked
 39897  00546C  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 39898  00546E  602F               	cpfslt	_rgl+8,c
 39899  005470  D001               	goto	l35284
 39900  005472  0012               	return	
 39901  005474                     l35284:
 39902                           
 39903                           ; BSR set to: 0
 39904                           ;rgl.c: 1590: tmp=rgl.xmod-PWM.BufPWM;
 39905  005474  5194               	movf	(_PWM+1)& (0+255),w,b	;volatile
 39906  005476  5C2F               	subwf	_rgl+8,w,c
 39907  005478  6FF3               	movwf	ModPruCW4@tmp& (0+255),b
 39908                           
 39909                           ;rgl.c: 1591: if(k>tmp) k=tmp;
 39910  00547A  51F3               	movf	ModPruCW4@tmp& (0+255),w,b
 39911  00547C  80D8               	bsf	status,0,c
 39912  00547E  84D8               	bsf	status,2,c
 39913  005480  AFF4               	btfss	ModPruCW4@k& (0+255),7,b
 39914  005482  5DF4               	subwf	ModPruCW4@k& (0+255),w,b
 39915  005484  A0D8               	btfss	status,0,c
 39916  005486  84D8               	bsf	status,2,c
 39917  005488  A4D8               	btfss	status,2,c
 39918                           
 39919                           ; BSR set to: 0
 39920  00548A  C0F3  F0F4         	movff	ModPruCW4@tmp,ModPruCW4@k
 39921                           
 39922                           ; BSR set to: 0
 39923                           ;rgl.c: 1592: if(PWM.MMAXCW>PWM.MGMOD)
 39924  00548E  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 39925  005490  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 39926  005492  D00A               	goto	l35296
 39927                           
 39928                           ; BSR set to: 0
 39929                           ;rgl.c: 1593: {
 39930                           ;rgl.c: 1594: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
 39931  005494  502E               	movf	_rgl+7,w,c
 39932  005496  D8BC               	call	PL96	;call to abstracted procedure
 39933  005498  D8A5               	call	PL62	;call to abstracted procedure
 39934  00549A  E203               	bc	l35294
 39935                           
 39936                           ; BSR set to: 0
 39937  00549C  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 39938  0054A0  0012               	return	
 39939  0054A2                     l35294:
 39940                           
 39941                           ; BSR set to: 0
 39942                           ;rgl.c: 1595: else rgl.srp+=k;
 39943  0054A2  51F4               	movf	ModPruCW4@k& (0+255),w,b
 39944  0054A4  262E               	addwf	_rgl+7,f,c
 39945  0054A6  0012               	return	
 39946  0054A8                     l35296:
 39947                           
 39948                           ; BSR set to: 0
 39949                           ;rgl.c: 1597: else
 39950                           ;rgl.c: 1598: {
 39951                           ;rgl.c: 1599: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
 39952  0054A8  D8A8               	call	PL88	;call to abstracted procedure
 39953  0054AA  D89C               	call	PL62	;call to abstracted procedure
 39954  0054AC  E2FA               	bc	l35294
 39955                           
 39956                           ; BSR set to: 0
 39957  0054AE  C0B1  F02E         	movff	_PWM+30,_rgl+7	;volatile
 39958  0054B2  0012               	return	
 39959  0054B4                     l3290:
 39960                           
 39961                           ;rgl.c: 1611: r=0;
 39962  0054B4  0101               	movlb	1	; () banked
 39963  0054B6  6BA1               	clrf	ModPruCW4@q& (0+255),b
 39964                           
 39965                           ;rgl.c: 1612: s=0;
 39966  0054B8  6BA2               	clrf	ModPruCW4@s& (0+255),b
 39967                           
 39968                           ; BSR set to: 1
 39969                           ;rgl.c: 1613: if(m<255) m++;
 39970  0054BA  299E               	incf	ModPruCW4@m& (0+255),w,b
 39971  0054BC  A4D8               	btfss	status,2,c
 39972                           
 39973                           ; BSR set to: 1
 39974  0054BE  2B9E               	incf	ModPruCW4@m& (0+255),f,b
 39975                           
 39976                           ; BSR set to: 1
 39977                           ;rgl.c: 1614: if(p<255) p++;
 39978  0054C0  29A0               	incf	ModPruCW4@p& (0+255),w,b
 39979  0054C2  A4D8               	btfss	status,2,c
 39980                           
 39981                           ; BSR set to: 1
 39982  0054C4  2BA0               	incf	ModPruCW4@p& (0+255),f,b
 39983                           
 39984                           ; BSR set to: 1
 39985                           ;rgl.c: 1615: if(o<255) o++;
 39986  0054C6  299F               	incf	ModPruCW4@o& (0+255),w,b
 39987  0054C8  A4D8               	btfss	status,2,c
 39988                           
 39989                           ; BSR set to: 1
 39990  0054CA  2B9F               	incf	ModPruCW4@o& (0+255),f,b
 39991                           
 39992                           ; BSR set to: 1
 39993                           ;rgl.c: 1616: if(DtCW.DAD_CW>DtCW.AC_CW)
 39994  0054CC  0100               	movlb	0	; () banked
 39995  0054CE  51DD               	movf	(_DtCW+14)& (0+255),w,b
 39996  0054D0  61DB               	cpfslt	(_DtCW+12)& (0+255),b
 39997  0054D2  D051               	goto	l3315
 39998                           
 39999                           ; BSR set to: 0
 40000                           ;rgl.c: 1617: {
 40001                           ;rgl.c: 1618: k=0;
 40002  0054D4  6BF4               	clrf	ModPruCW4@k& (0+255),b
 40003                           
 40004                           ; BSR set to: 0
 40005                           ;rgl.c: 1619: if(Trosnie(0)&&m>=2)
 40006  0054D6  0E00               	movlw	0
 40007  0054D8  EC5F  F059         	call	_Trosnie
 40008  0054DC  E30C               	bnc	l35330
 40009                           
 40010                           ; BSR set to: 0
 40011  0054DE  0E01               	movlw	1
 40012  0054E0  0101               	movlb	1	; () banked
 40013  0054E2  659E               	cpfsgt	ModPruCW4@m& (0+255),b
 40014  0054E4  D008               	goto	l35330
 40015                           
 40016                           ; BSR set to: 1
 40017                           ;rgl.c: 1620: {
 40018                           ;rgl.c: 1621: p=0;
 40019  0054E6  6BA0               	clrf	ModPruCW4@p& (0+255),b
 40020                           
 40021                           ;rgl.c: 1622: o=0;
 40022  0054E8  6B9F               	clrf	ModPruCW4@o& (0+255),b
 40023                           
 40024                           ;rgl.c: 1623: l=0;
 40025  0054EA  6B9D               	clrf	ModPruCW4@l& (0+255),b
 40026                           
 40027                           ;rgl.c: 1624: m=0;
 40028  0054EC  6B9E               	clrf	ModPruCW4@m& (0+255),b
 40029                           
 40030                           ; BSR set to: 1
 40031                           ;rgl.c: 1625: k=2;
 40032  0054EE  0E02               	movlw	2
 40033  0054F0  0100               	movlb	0	; () banked
 40034  0054F2  6FF4               	movwf	ModPruCW4@k& (0+255),b
 40035                           
 40036                           ;rgl.c: 1626: }
 40037  0054F4  D01A               	goto	l35346
 40038  0054F6                     l35330:
 40039                           
 40040                           ;rgl.c: 1627: else
 40041                           ;rgl.c: 1628: if(Twyzsza(1))
 40042  0054F6  0E01               	movlw	1
 40043  0054F8  EC34  F055         	call	_Twyzsza
 40044  0054FC  E30F               	bnc	l35342
 40045                           
 40046                           ;rgl.c: 1629: {
 40047                           ;rgl.c: 1630: if(Tstoi())
 40048  0054FE  ECD7  F05A         	call	_Tstoi	;wreg free
 40049  005502  E313               	bnc	l35346
 40050                           
 40051                           ;rgl.c: 1631: {
 40052                           ;rgl.c: 1632: if(l>=2)
 40053  005504  0E01               	movlw	1
 40054  005506  0101               	movlb	1	; () banked
 40055  005508  659D               	cpfsgt	ModPruCW4@l& (0+255),b
 40056  00550A  D00B               	goto	l3320
 40057                           
 40058                           ; BSR set to: 1
 40059                           ;rgl.c: 1633: {
 40060                           ;rgl.c: 1634: k=1;
 40061  00550C  0100               	movlb	0	; () banked
 40062  00550E  6FF4               	movwf	ModPruCW4@k& (0+255),b
 40063                           
 40064                           ; BSR set to: 0
 40065                           ;rgl.c: 1635: if(Twyzsza(3)) k=2;
 40066  005510  0E03               	movlw	3
 40067  005512  EC34  F055         	call	_Twyzsza
 40068  005516  E302               	bnc	l35342
 40069                           
 40070                           ; BSR set to: 0
 40071  005518  0E02               	movlw	2
 40072  00551A  6FF4               	movwf	ModPruCW4@k& (0+255),b
 40073  00551C                     l35342:
 40074                           
 40075                           ;rgl.c: 1636: l=0;
 40076  00551C  0101               	movlb	1	; () banked
 40077  00551E  6B9D               	clrf	ModPruCW4@l& (0+255),b
 40078                           
 40079                           ;rgl.c: 1637: }
 40080  005520  D004               	goto	l35346
 40081  005522                     l3320:
 40082                           
 40083                           ; BSR set to: 1
 40084                           ;rgl.c: 1638: else
 40085                           ;rgl.c: 1639: {
 40086                           ;rgl.c: 1640: k=0;
 40087  005522  0100               	movlb	0	; () banked
 40088  005524  6BF4               	clrf	ModPruCW4@k& (0+255),b
 40089                           
 40090                           ; BSR set to: 0
 40091                           ;rgl.c: 1641: l++;
 40092  005526  0101               	movlb	1	; () banked
 40093  005528  2B9D               	incf	ModPruCW4@l& (0+255),f,b
 40094  00552A                     l35346:
 40095                           
 40096                           ;rgl.c: 1645: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM.MDMOD;
 40097  00552A  0100               	movlb	0	; () banked
 40098  00552C  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 40099  00552E  6E22               	movwf	??_ModPruCW4& (0+255),c
 40100  005530  6A23               	clrf	(??_ModPruCW4+1)& (0+255),c
 40101  005532  51F4               	movf	ModPruCW4@k& (0+255),w,b
 40102  005534  5C2E               	subwf	_rgl+7,w,c
 40103  005536  6E24               	movwf	(??_ModPruCW4+2)& (0+255),c
 40104  005538  6AE8               	clrf	wreg,c
 40105  00553A  B0D8               	btfsc	status,0,c
 40106  00553C  2AE8               	incf	wreg,f,c
 40107  00553E  AFF4               	btfss	ModPruCW4@k& (0+255),7,b
 40108  005540  06E8               	decf	wreg,f,c
 40109  005542  6E25               	movwf	(??_ModPruCW4+3)& (0+255),c
 40110  005544  5025               	movf	??_ModPruCW4+3,w,c
 40111  005546  0A80               	xorlw	128
 40112  005548  6E26               	movwf	(??_ModPruCW4+4)& (0+255),c
 40113  00554A  5022               	movf	??_ModPruCW4,w,c
 40114  00554C  5C24               	subwf	??_ModPruCW4+2,w,c
 40115  00554E  5023               	movf	??_ModPruCW4+1,w,c
 40116  005550  0A80               	xorlw	128
 40117  005552  5826               	subwfb	(??_ModPruCW4+4)& (0+255),w,c
 40118  005554  E203               	bc	l35350
 40119                           
 40120                           ; BSR set to: 0
 40121  005556  C09C  F02E         	movff	_PWM+9,_rgl+7	;volatile
 40122  00555A  D002               	goto	l35352
 40123  00555C                     l35350:
 40124                           
 40125                           ; BSR set to: 0
 40126                           ;rgl.c: 1646: else rgl.srp-=k;
 40127  00555C  51F4               	movf	ModPruCW4@k& (0+255),w,b
 40128  00555E  5E2E               	subwf	_rgl+7,f,c
 40129  005560                     l35352:
 40130                           
 40131                           ; BSR set to: 0
 40132                           ;rgl.c: 1647: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
 40133  005560  502E               	movf	_rgl+7,w,c
 40134  005562  61B1               	cpfslt	(_PWM+30)& (0+255),b	;volatile
 40135  005564  D002               	goto	l35356
 40136  005566                     
 40137                           ; BSR set to: 0
 40138  005566  C0B1  F02E         	movff	_PWM+30,_rgl+7	;volatile
 40139  00556A                     l35356:
 40140                           
 40141                           ; BSR set to: 0
 40142                           ;rgl.c: 1648: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.srp;
 40143  00556A  502E               	movf	_rgl+7,w,c
 40144  00556C  602F               	cpfslt	_rgl+8,c
 40145  00556E  0012               	return	
 40146                           
 40147                           ; BSR set to: 0
 40148  005570  C02E  F02F         	movff	_rgl+7,_rgl+8
 40149  005574  0012               	return	
 40150  005576                     l3315:
 40151                           
 40152                           ; BSR set to: 0
 40153                           ;rgl.c: 1651: else
 40154                           ;rgl.c: 1652: {
 40155                           ;rgl.c: 1653: k=0;
 40156  005576  6BF4               	clrf	ModPruCW4@k& (0+255),b
 40157                           
 40158                           ; BSR set to: 0
 40159                           ;rgl.c: 1654: if(Tmaleje(0)&&m>=2)
 40160  005578  0E00               	movlw	0
 40161  00557A  EC00  F055         	call	_Tmaleje
 40162  00557E  E30C               	bnc	l35370
 40163                           
 40164                           ; BSR set to: 0
 40165  005580  0E01               	movlw	1
 40166  005582  0101               	movlb	1	; () banked
 40167  005584  659E               	cpfsgt	ModPruCW4@m& (0+255),b
 40168  005586  D008               	goto	l35370
 40169                           
 40170                           ; BSR set to: 1
 40171                           ;rgl.c: 1655: {
 40172                           ;rgl.c: 1656: p=0;
 40173  005588  6BA0               	clrf	ModPruCW4@p& (0+255),b
 40174                           
 40175                           ;rgl.c: 1657: o=0;
 40176  00558A  6B9F               	clrf	ModPruCW4@o& (0+255),b
 40177                           
 40178                           ;rgl.c: 1658: l=0;
 40179  00558C  6B9D               	clrf	ModPruCW4@l& (0+255),b
 40180                           
 40181                           ;rgl.c: 1659: m=0;
 40182  00558E  6B9E               	clrf	ModPruCW4@m& (0+255),b
 40183                           
 40184                           ; BSR set to: 1
 40185                           ;rgl.c: 1660: k=1;
 40186  005590  0E01               	movlw	1
 40187  005592  0100               	movlb	0	; () banked
 40188  005594  6FF4               	movwf	ModPruCW4@k& (0+255),b
 40189                           
 40190                           ;rgl.c: 1662: }
 40191  005596  D014               	goto	l35382
 40192  005598                     l35370:
 40193                           
 40194                           ;rgl.c: 1663: else
 40195                           ;rgl.c: 1664: if(Tnizsza(1))
 40196  005598  0E01               	movlw	1
 40197  00559A  EC8F  F059         	call	_Tnizsza
 40198  00559E  E309               	bnc	l35378
 40199                           
 40200                           ;rgl.c: 1665: {
 40201                           ;rgl.c: 1666: if(Tstoi())
 40202  0055A0  ECD7  F05A         	call	_Tstoi	;wreg free
 40203  0055A4  E30D               	bnc	l35382
 40204                           
 40205                           ;rgl.c: 1667: {
 40206                           ;rgl.c: 1668: if(l>=3)
 40207  0055A6  0E02               	movlw	2
 40208  0055A8  0101               	movlb	1	; () banked
 40209  0055AA  659D               	cpfsgt	ModPruCW4@l& (0+255),b
 40210  0055AC  D005               	goto	l3333
 40211                           
 40212                           ; BSR set to: 1
 40213                           ;rgl.c: 1669: {
 40214                           ;rgl.c: 1670: k=2;
 40215  0055AE  0100               	movlb	0	; () banked
 40216  0055B0  6FF4               	movwf	ModPruCW4@k& (0+255),b
 40217  0055B2                     l35378:
 40218                           
 40219                           ;rgl.c: 1671: l=0;
 40220  0055B2  0101               	movlb	1	; () banked
 40221  0055B4  6B9D               	clrf	ModPruCW4@l& (0+255),b
 40222                           
 40223                           ;rgl.c: 1672: }
 40224  0055B6  D004               	goto	l35382
 40225  0055B8                     l3333:
 40226                           
 40227                           ; BSR set to: 1
 40228                           ;rgl.c: 1673: else
 40229                           ;rgl.c: 1674: {
 40230                           ;rgl.c: 1675: k=0;
 40231  0055B8  0100               	movlb	0	; () banked
 40232  0055BA  6BF4               	clrf	ModPruCW4@k& (0+255),b
 40233                           
 40234                           ; BSR set to: 0
 40235                           ;rgl.c: 1676: l++;
 40236  0055BC  0101               	movlb	1	; () banked
 40237  0055BE  2B9D               	incf	ModPruCW4@l& (0+255),f,b
 40238  0055C0                     l35382:
 40239                           
 40240                           ;rgl.c: 1680: if(PWM.MMAXCW>PWM.MGMOD)
 40241  0055C0  0100               	movlb	0	; () banked
 40242  0055C2  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 40243  0055C4  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 40244  0055C6  D00A               	goto	l35390
 40245                           
 40246                           ; BSR set to: 0
 40247                           ;rgl.c: 1681: {
 40248                           ;rgl.c: 1682: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM.MGMOD;
 40249  0055C8  502E               	movf	_rgl+7,w,c
 40250  0055CA  D822               	call	PL96	;call to abstracted procedure
 40251  0055CC  D80B               	call	PL62	;call to abstracted procedure
 40252  0055CE  E203               	bc	l35388
 40253                           
 40254                           ; BSR set to: 0
 40255  0055D0  C09D  F02E         	movff	_PWM+10,_rgl+7	;volatile
 40256  0055D4  D7CA               	goto	l35356
 40257  0055D6                     l35388:
 40258                           
 40259                           ; BSR set to: 0
 40260                           ;rgl.c: 1683: else rgl.srp+=k;
 40261  0055D6  51F4               	movf	ModPruCW4@k& (0+255),w,b
 40262  0055D8  262E               	addwf	_rgl+7,f,c
 40263  0055DA  D7C7               	goto	l35356
 40264  0055DC                     l35390:
 40265                           
 40266                           ; BSR set to: 0
 40267                           ;rgl.c: 1685: else
 40268                           ;rgl.c: 1686: {
 40269                           ;rgl.c: 1687: if(rgl.srp+k>PWM.MMAXCW) rgl.srp=PWM.MMAXCW;
 40270  0055DC  D80E               	call	PL88	;call to abstracted procedure
 40271  0055DE  D802               	call	PL62	;call to abstracted procedure
 40272  0055E0  E2FA               	bc	l35388
 40273  0055E2  D7C1               	goto	L84
 40274  0055E4                     __end_of_ModPruCW4:
 40275                           	opt stack 0
 40276  0055E4                     PL62:
 40277                           	opt stack 24
 40278  0055E4  6E24               	movwf	(??_ModPruCW4+2)& (0+255),c
 40279  0055E6  6A25               	clrf	(??_ModPruCW4+3)& (0+255),c
 40280  0055E8  5025               	movf	??_ModPruCW4+3,w,c
 40281  0055EA  0A80               	xorlw	128
 40282  0055EC  6E26               	movwf	(??_ModPruCW4+4)& (0+255),c
 40283  0055EE  5022               	movf	??_ModPruCW4,w,c
 40284  0055F0  5C24               	subwf	??_ModPruCW4+2,w,c
 40285  0055F2  5023               	movf	??_ModPruCW4+1,w,c
 40286  0055F4  0A80               	xorlw	128
 40287  0055F6  5826               	subwfb	(??_ModPruCW4+4)& (0+255),w,c
 40288  0055F8  0012               	return	
 40289  0055FA                     __end_ofPL62:
 40290                           	opt stack 0
 40291  0055FA                     PL88:
 40292                           	opt stack 24
 40293  0055FA  502E               	movf	_rgl+7,w,c
 40294  0055FC  25F4               	addwf	ModPruCW4@k& (0+255),w,b
 40295  0055FE  6E22               	movwf	??_ModPruCW4& (0+255),c
 40296  005600  6AE8               	clrf	wreg,c
 40297  005602  B0D8               	btfsc	status,0,c
 40298  005604  2AE8               	incf	wreg,f,c
 40299  005606  BFF4               	btfsc	ModPruCW4@k& (0+255),7,b
 40300  005608  06E8               	decf	wreg,f,c
 40301  00560A  6E23               	movwf	(??_ModPruCW4+1)& (0+255),c
 40302  00560C  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 40303  00560E  0012               	return	
 40304  005610                     __end_ofPL88:
 40305                           	opt stack 0
 40306  005610                     PL96:
 40307                           	opt stack 24
 40308  005610  25F4               	addwf	ModPruCW4@k& (0+255),w,b
 40309  005612  6E22               	movwf	??_ModPruCW4& (0+255),c
 40310  005614  6AE8               	clrf	wreg,c
 40311  005616  B0D8               	btfsc	status,0,c
 40312  005618  2AE8               	incf	wreg,f,c
 40313  00561A  BFF4               	btfsc	ModPruCW4@k& (0+255),7,b
 40314  00561C  06E8               	decf	wreg,f,c
 40315  00561E  6E23               	movwf	(??_ModPruCW4+1)& (0+255),c
 40316  005620  519D               	movf	(_PWM+10)& (0+255),w,b	;volatile
 40317  005622  0012               	return	
 40318  005624                     __end_ofPL96:
 40319                           	opt stack 0
 40320                           tblptru	equ	0xFF8
 40321                           tblptrh	equ	0xFF7
 40322                           tblptrl	equ	0xFF6
 40323                           tablat	equ	0xFF5
 40324                           prodh	equ	0xFF4
 40325                           prodl	equ	0xFF3
 40326                           intcon	equ	0xFF2
 40327                           postinc0	equ	0xFEE
 40328                           wreg	equ	0xFE8
 40329                           indf1	equ	0xFE7
 40330                           postinc1	equ	0xFE6
 40331                           postdec1	equ	0xFE5
 40332                           fsr1h	equ	0xFE2
 40333                           fsr1l	equ	0xFE1
 40334                           indf2	equ	0xFDF
 40335                           postinc2	equ	0xFDE
 40336                           postdec2	equ	0xFDD
 40337                           fsr2h	equ	0xFDA
 40338                           fsr2l	equ	0xFD9
 40339                           status	equ	0xFD8
 40340                           
 40341 ;; *************** function _ModPrzCW4 *****************
 40342 ;; Defined at:
 40343 ;;		line 1726 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 40344 ;; Parameters:    Size  Location     Type
 40345 ;;		None
 40346 ;; Auto vars:     Size  Location     Type
 40347 ;;  p               2    9[BANK0 ] unsigned int 
 40348 ;; Return value:  Size  Location     Type
 40349 ;;		None               void
 40350 ;; Registers used:
 40351 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 40352 ;; Tracked objects:
 40353 ;;		On entry : E/1
 40354 ;;		On exit  : E/0
 40355 ;;		Unchanged: FFFFFFF0/0
 40356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40358 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40359 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40360 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40361 ;;Total ram usage:        7 bytes
 40362 ;; Hardware stack levels used:    1
 40363 ;; Hardware stack levels required when called:    5
 40364 ;; This function calls:
 40365 ;;		___wmul
 40366 ;;		___lwdiv
 40367 ;;		_Tmaleje
 40368 ;;		_Twyzsza
 40369 ;;		_Tnizsza
 40370 ;;		_Tstoi
 40371 ;; This function is called by:
 40372 ;;		_Moduluj
 40373 ;; This function uses a non-reentrant model
 40374 ;;
 40375                           
 40376                           	psect	text179
 40377  008118                     __ptext179:
 40378                           	opt stack 0
 40379  008118                     _ModPrzCW4:
 40380                           	opt stack 24
 40381                           
 40382                           ;rgl.c: 1727: static unsigned char trb=0;
 40383                           ;rgl.c: 1728: unsigned int p;
 40384                           ;rgl.c: 1730: p=(rgl.tmp_pwm-PWM.MDMOD)*100;
 40385  008118  0100               	movlb	0	; () banked
 40386  00811A  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 40387  00811C  5C30               	subwf	_rgl+9,w,c
 40388  00811E  6E1E               	movwf	?___wmul,c
 40389  008120  6A1F               	clrf	?___wmul+1,c
 40390  008122  A0D8               	btfss	status,0,c
 40391  008124  061F               	decf	?___wmul+1,f,c
 40392  008126  6A21               	clrf	?___wmul+3,c
 40393  008128  0E64               	movlw	100
 40394  00812A  6E20               	movwf	?___wmul+2,c
 40395  00812C  EC9C  F056         	call	___wmul	;wreg free
 40396  008130  C01E  F0FC         	movff	?___wmul,ModPrzCW4@p
 40397  008134  C01F  F0FD         	movff	?___wmul+1,ModPrzCW4@p+1
 40398                           
 40399                           ;rgl.c: 1731: p=p/(PWM.MGMOD-PWM.MDMOD);
 40400  008138  C0FC  F0F3         	movff	ModPrzCW4@p,?___lwdiv
 40401  00813C  C0FD  F0F4         	movff	ModPrzCW4@p+1,?___lwdiv+1
 40402  008140  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 40403  008142  5D9D               	subwf	(_PWM+10)& (0+255),w,b	;volatile
 40404  008144  6FF5               	movwf	(?___lwdiv+2)& (0+255),b
 40405  008146  6BF6               	clrf	(?___lwdiv+3)& (0+255),b
 40406  008148  A0D8               	btfss	status,0,c
 40407  00814A  07F6               	decf	(?___lwdiv+3)& (0+255),f,b
 40408  00814C  EC93  F051         	call	___lwdiv	;wreg free
 40409  008150  C0F3  F0FC         	movff	?___lwdiv,ModPrzCW4@p
 40410  008154  C0F4  F0FD         	movff	?___lwdiv+1,ModPrzCW4@p+1
 40411                           
 40412                           ; BSR set to: 0
 40413                           ;rgl.c: 1733: if(!rgl.nmod)
 40414  008158  BA27               	btfsc	_rgl,5,c
 40415  00815A  D058               	goto	l35446
 40416                           
 40417                           ; BSR set to: 0
 40418                           ;rgl.c: 1734: {
 40419                           ;rgl.c: 1735: trb=0;
 40420  00815C  0101               	movlb	1	; () banked
 40421  00815E  6BA8               	clrf	ModPrzCW4@trb& (0+255),b
 40422                           
 40423                           ; BSR set to: 1
 40424                           ;rgl.c: 1736: if(p<=35)
 40425  008160  0E24               	movlw	36
 40426  008162  0100               	movlb	0	; () banked
 40427  008164  5DFC               	subwf	ModPrzCW4@p& (0+255),w,b
 40428  008166  0E00               	movlw	0
 40429  008168  59FD               	subwfb	(ModPrzCW4@p+1)& (0+255),w,b
 40430  00816A  E20F               	bc	l35416
 40431                           
 40432                           ; BSR set to: 0
 40433                           ;rgl.c: 1737: {
 40434                           ;rgl.c: 1738: if(!Tmaleje(0)&&Twyzsza(3))
 40435  00816C  0E00               	movlw	0
 40436  00816E  EC00  F055         	call	_Tmaleje
 40437  008172  B0D8               	btfsc	status,0,c
 40438  008174  0012               	return	
 40439                           
 40440                           ; BSR set to: 0
 40441  008176  0E03               	movlw	3
 40442  008178  EC34  F055         	call	_Twyzsza
 40443  00817C  A0D8               	btfss	status,0,c
 40444  00817E  0012               	return	
 40445                           
 40446                           ; BSR set to: 0
 40447                           ;rgl.c: 1739: {
 40448                           ;rgl.c: 1740: trb=1;
 40449  008180  0E01               	movlw	1
 40450  008182  0101               	movlb	1	; () banked
 40451  008184  6FA8               	movwf	ModPrzCW4@trb& (0+255),b
 40452                           
 40453                           ; BSR set to: 1
 40454                           ;rgl.c: 1741: rgl.nmod=1;
 40455  008186  8A27               	bsf	_rgl,5,c
 40456  008188  0012               	return	
 40457  00818A                     l35416:
 40458                           
 40459                           ; BSR set to: 0
 40460                           ;rgl.c: 1744: else
 40461                           ;rgl.c: 1745: {
 40462                           ;rgl.c: 1746: if(!Tmaleje(0))
 40463  00818A  0E00               	movlw	0
 40464  00818C  EC00  F055         	call	_Tmaleje
 40465  008190  B0D8               	btfsc	status,0,c
 40466  008192  0012               	return	
 40467                           
 40468                           ; BSR set to: 0
 40469                           ;rgl.c: 1747: {
 40470                           ;rgl.c: 1748: if(Twyzsza(5))
 40471  008194  0E05               	movlw	5
 40472  008196  EC34  F055         	call	_Twyzsza
 40473  00819A  A0D8               	btfss	status,0,c
 40474  00819C  0012               	return	
 40475                           
 40476                           ; BSR set to: 0
 40477                           ;rgl.c: 1749: {
 40478                           ;rgl.c: 1750: if(rgl.srp-3<PWM.MDMOD) rgl.srp=PWM.MDMOD;
 40479  00819E  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 40480  0081A0  6FF7               	movwf	??_ModPrzCW4& (0+255),b
 40481  0081A2  6BF8               	clrf	(??_ModPrzCW4+1)& (0+255),b
 40482  0081A4  0EFD               	movlw	253
 40483  0081A6  242E               	addwf	_rgl+7,w,c
 40484  0081A8  6FF9               	movwf	(??_ModPrzCW4+2)& (0+255),b
 40485  0081AA  6BFA               	clrf	(??_ModPrzCW4+3)& (0+255),b
 40486  0081AC  0EFF               	movlw	255
 40487  0081AE  23FA               	addwfc	(??_ModPrzCW4+3)& (0+255),f,b
 40488  0081B0  51FA               	movf	(??_ModPrzCW4+3)& (0+255),w,b
 40489  0081B2  0A80               	xorlw	128
 40490  0081B4  6FFB               	movwf	(??_ModPrzCW4+4)& (0+255),b
 40491  0081B6  51F7               	movf	??_ModPrzCW4& (0+255),w,b
 40492  0081B8  5DF9               	subwf	(??_ModPrzCW4+2)& (0+255),w,b
 40493  0081BA  51F8               	movf	(??_ModPrzCW4+1)& (0+255),w,b
 40494  0081BC  0A80               	xorlw	128
 40495  0081BE  59FB               	subwfb	(??_ModPrzCW4+4)& (0+255),w,b
 40496  0081C0  E203               	bc	l35424
 40497                           
 40498                           ; BSR set to: 0
 40499  0081C2  C09C  F02E         	movff	_PWM+9,_rgl+7	;volatile
 40500  0081C6  D002               	goto	l35426
 40501  0081C8                     l35424:
 40502                           
 40503                           ; BSR set to: 0
 40504                           ;rgl.c: 1751: else rgl.srp-=3;
 40505  0081C8  0E03               	movlw	3
 40506  0081CA  5E2E               	subwf	_rgl+7,f,c
 40507  0081CC                     l35426:
 40508                           
 40509                           ; BSR set to: 0
 40510                           ;rgl.c: 1752: trb=2;
 40511  0081CC  0E02               	movlw	2
 40512  0081CE  D7D9               	goto	L85
 40513  0081D0                     l35432:
 40514                           
 40515                           ; BSR set to: 1
 40516                           ;rgl.c: 1765: {
 40517                           ;rgl.c: 1766: if(!Twyzsza(3))
 40518  0081D0  0E03               	movlw	3
 40519  0081D2  EC34  F055         	call	_Twyzsza
 40520  0081D6  B0D8               	btfsc	status,0,c
 40521  0081D8  0012               	return	
 40522                           
 40523                           ; BSR set to: 1
 40524                           ;rgl.c: 1767: {
 40525                           ;rgl.c: 1768: if(Tnizsza(3)||Tstoi()||Tmaleje(0))
 40526  0081DA  0E03               	movlw	3
 40527  0081DC  EC8F  F059         	call	_Tnizsza
 40528  0081E0  E208               	bc	l3375
 40529                           
 40530                           ; BSR set to: 1
 40531  0081E2  ECD7  F05A         	call	_Tstoi	;wreg free
 40532  0081E6  E205               	bc	l3375
 40533                           
 40534                           ; BSR set to: 1
 40535  0081E8  0E00               	movlw	0
 40536  0081EA  EC00  F055         	call	_Tmaleje
 40537  0081EE  A0D8               	btfss	status,0,c
 40538  0081F0  0012               	return	
 40539  0081F2                     l3375:
 40540                           
 40541                           ; BSR set to: 1
 40542                           ;rgl.c: 1769: {
 40543                           ;rgl.c: 1770: trb=0;
 40544  0081F2  6BA8               	clrf	ModPrzCW4@trb& (0+255),b
 40545                           
 40546                           ;rgl.c: 1771: rgl.nmod=0;
 40547  0081F4  9A27               	bcf	_rgl,5,c
 40548  0081F6  0012               	return	
 40549  0081F8                     l35440:
 40550                           
 40551                           ; BSR set to: 1
 40552                           ;rgl.c: 1777: {
 40553                           ;rgl.c: 1778: if(Tmaleje(0)||!Twyzsza(4))
 40554  0081F8  0E00               	movlw	0
 40555  0081FA  EC00  F055         	call	_Tmaleje
 40556  0081FE  E2F9               	bc	l3375
 40557                           
 40558                           ; BSR set to: 1
 40559  008200  0E04               	movlw	4
 40560  008202  EC34  F055         	call	_Twyzsza
 40561  008206  B0D8               	btfsc	status,0,c
 40562  008208  0012               	return	
 40563  00820A  D7F3               	goto	l3375
 40564  00820C                     l35446:
 40565                           
 40566                           ; BSR set to: 0
 40567  00820C  0101               	movlb	1	; () banked
 40568  00820E  51A8               	movf	ModPrzCW4@trb& (0+255),w,b
 40569                           
 40570                           ; Switch size 1, requested type "space"
 40571                           ; Number of cases is 2, Range of values is 1 to 2
 40572                           ; switch strategies available:
 40573                           ; Name         Instructions Cycles
 40574                           ; simple_byte            7     4 (average)
 40575                           ;	Chosen strategy is simple_byte
 40576  008210  0A01               	xorlw	1	; case 1
 40577  008212  E0DE               	bz	l35432
 40578  008214  0A03               	xorlw	3	; case 2
 40579  008216  A4D8               	btfss	status,2,c
 40580  008218  0012               	return	
 40581  00821A  D7EE               	goto	l35440
 40582  00821C                     __end_of_ModPrzCW4:
 40583                           	opt stack 0
 40584                           tblptru	equ	0xFF8
 40585                           tblptrh	equ	0xFF7
 40586                           tblptrl	equ	0xFF6
 40587                           tablat	equ	0xFF5
 40588                           prodh	equ	0xFF4
 40589                           prodl	equ	0xFF3
 40590                           intcon	equ	0xFF2
 40591                           postinc0	equ	0xFEE
 40592                           wreg	equ	0xFE8
 40593                           indf1	equ	0xFE7
 40594                           postinc1	equ	0xFE6
 40595                           postdec1	equ	0xFE5
 40596                           fsr1h	equ	0xFE2
 40597                           fsr1l	equ	0xFE1
 40598                           indf2	equ	0xFDF
 40599                           postinc2	equ	0xFDE
 40600                           postdec2	equ	0xFDD
 40601                           fsr2h	equ	0xFDA
 40602                           fsr2l	equ	0xFD9
 40603                           status	equ	0xFD8
 40604                           
 40605 ;; *************** function _PropCO4 *****************
 40606 ;; Defined at:
 40607 ;;		line 1792 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 40608 ;; Parameters:    Size  Location     Type
 40609 ;;		None
 40610 ;; Auto vars:     Size  Location     Type
 40611 ;;		None
 40612 ;; Return value:  Size  Location     Type
 40613 ;;		None               void
 40614 ;; Registers used:
 40615 ;;		wreg, status,2, status,0, cstack
 40616 ;; Tracked objects:
 40617 ;;		On entry : E/1
 40618 ;;		On exit  : F/0
 40619 ;;		Unchanged: FFFFFFF0/0
 40620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40625 ;;Total ram usage:        0 bytes
 40626 ;; Hardware stack levels used:    1
 40627 ;; Hardware stack levels required when called:    6
 40628 ;; This function calls:
 40629 ;;		_WriteOPWM
 40630 ;; This function is called by:
 40631 ;;		_Moduluj
 40632 ;; This function uses a non-reentrant model
 40633 ;;
 40634                           
 40635                           	psect	text180
 40636  009E3E                     __ptext180:
 40637                           	opt stack 0
 40638  009E3E                     _PropCO4:
 40639                           	opt stack 23
 40640                           
 40641                           ;rgl.c: 1793: if(!rgl.nmod)
 40642  009E3E  BA27               	btfsc	_rgl,5,c
 40643  009E40  D029               	goto	l35478
 40644                           
 40645                           ;rgl.c: 1794: {
 40646                           ;rgl.c: 1795: if(!DtCO._err_CO)
 40647  009E42  0100               	movlb	0	; () banked
 40648  009E44  B1E4               	btfsc	_DtCO& (0+255),0,b
 40649  009E46  D023               	goto	l35476
 40650                           
 40651                           ; BSR set to: 0
 40652                           ;rgl.c: 1796: {
 40653                           ;rgl.c: 1797: if(rgl.x_f==3)
 40654  009E48  502A               	movf	_rgl+3,w,c
 40655  009E4A  0A03               	xorlw	3
 40656  009E4C  E106               	bnz	l35458
 40657                           
 40658                           ; BSR set to: 0
 40659                           ;rgl.c: 1798: {
 40660                           ;rgl.c: 1799: if(rgl.tmp_pwm>PWM.MGMOD)
 40661  009E4E  5030               	movf	_rgl+9,w,c
 40662  009E50  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 40663  009E52  D01D               	goto	l35476
 40664                           
 40665                           ; BSR set to: 0
 40666                           ;rgl.c: 1800: rgl.tmp_pwm=PWM.MGMOD;
 40667  009E54  C09D  F030         	movff	_PWM+10,_rgl+9	;volatile
 40668  009E58  D01A               	goto	l35476
 40669  009E5A                     l35458:
 40670                           
 40671                           ; BSR set to: 0
 40672                           ;rgl.c: 1802: else
 40673                           ;rgl.c: 1803: if(rgl.x_f==2)
 40674  009E5A  502A               	movf	_rgl+3,w,c
 40675  009E5C  0A02               	xorlw	2
 40676  009E5E  E106               	bnz	l35464
 40677                           
 40678                           ; BSR set to: 0
 40679                           ;rgl.c: 1804: {
 40680                           ;rgl.c: 1805: if(rgl.tmp_pwm>PWM.PROP1)
 40681  009E60  5030               	movf	_rgl+9,w,c
 40682  009E62  61AC               	cpfslt	(_PWM+25)& (0+255),b	;volatile
 40683  009E64  D014               	goto	l35476
 40684                           
 40685                           ; BSR set to: 0
 40686                           ;rgl.c: 1806: rgl.tmp_pwm=PWM.PROP1;
 40687  009E66  C0AC  F030         	movff	_PWM+25,_rgl+9	;volatile
 40688  009E6A  D011               	goto	l35476
 40689  009E6C                     l35464:
 40690                           
 40691                           ; BSR set to: 0
 40692                           ;rgl.c: 1808: else
 40693                           ;rgl.c: 1809: if(rgl.x_f==1)
 40694  009E6C  042A               	decf	_rgl+3,w,c
 40695  009E6E  E106               	bnz	l35470
 40696                           
 40697                           ; BSR set to: 0
 40698                           ;rgl.c: 1810: {
 40699                           ;rgl.c: 1811: if(rgl.tmp_pwm>PWM.PROP2)
 40700  009E70  5030               	movf	_rgl+9,w,c
 40701  009E72  61AD               	cpfslt	(_PWM+26)& (0+255),b	;volatile
 40702  009E74  D00C               	goto	l35476
 40703                           
 40704                           ; BSR set to: 0
 40705                           ;rgl.c: 1812: rgl.tmp_pwm=PWM.PROP2;
 40706  009E76  C0AD  F030         	movff	_PWM+26,_rgl+9	;volatile
 40707  009E7A  D009               	goto	l35476
 40708  009E7C                     l35470:
 40709                           
 40710                           ; BSR set to: 0
 40711                           ;rgl.c: 1814: else
 40712                           ;rgl.c: 1815: if(rgl.x_f<=0)
 40713  009E7C  502A               	movf	_rgl+3,w,c
 40714  009E7E  0A80               	xorlw	128
 40715  009E80  0F7F               	addlw	-129
 40716  009E82  E205               	bc	l35476
 40717                           
 40718                           ; BSR set to: 0
 40719                           ;rgl.c: 1816: {
 40720                           ;rgl.c: 1817: if(rgl.tmp_pwm>PWM.PROP3)
 40721  009E84  5030               	movf	_rgl+9,w,c
 40722  009E86  61AE               	cpfslt	(_PWM+27)& (0+255),b	;volatile
 40723  009E88  D002               	goto	l35476
 40724                           
 40725                           ; BSR set to: 0
 40726                           ;rgl.c: 1818: rgl.tmp_pwm=PWM.PROP3;
 40727  009E8A  C0AE  F030         	movff	_PWM+27,_rgl+9	;volatile
 40728  009E8E                     l35476:
 40729                           
 40730                           ; BSR set to: 0
 40731                           ;rgl.c: 1819: }
 40732                           ;rgl.c: 1820: }
 40733                           ;rgl.c: 1821: WriteOPWM(rgl.tmp_pwm);
 40734  009E8E  5030               	movf	_rgl+9,w,c
 40735  009E90  EF7B  F03F         	goto	_WriteOPWM
 40736  009E94                     l35478:
 40737                           
 40738                           ;rgl.c: 1823: else WriteOPWM(PWM.MDMOD);
 40739  009E94  0100               	movlb	0	; () banked
 40740  009E96  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 40741  009E98  EF7B  F03F         	goto	_WriteOPWM
 40742  009E9C                     __end_of_PropCO4:
 40743                           	opt stack 0
 40744                           tblptru	equ	0xFF8
 40745                           tblptrh	equ	0xFF7
 40746                           tblptrl	equ	0xFF6
 40747                           tablat	equ	0xFF5
 40748                           prodh	equ	0xFF4
 40749                           prodl	equ	0xFF3
 40750                           intcon	equ	0xFF2
 40751                           postinc0	equ	0xFEE
 40752                           wreg	equ	0xFE8
 40753                           indf1	equ	0xFE7
 40754                           postinc1	equ	0xFE6
 40755                           postdec1	equ	0xFE5
 40756                           fsr1h	equ	0xFE2
 40757                           fsr1l	equ	0xFE1
 40758                           indf2	equ	0xFDF
 40759                           postinc2	equ	0xFDE
 40760                           postdec2	equ	0xFDD
 40761                           fsr2h	equ	0xFDA
 40762                           fsr2l	equ	0xFD9
 40763                           status	equ	0xFD8
 40764                           
 40765 ;; *************** function _WriteOPWM *****************
 40766 ;; Defined at:
 40767 ;;		line 400 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
 40768 ;; Parameters:    Size  Location     Type
 40769 ;;  tpwm            1    wreg     unsigned char 
 40770 ;; Auto vars:     Size  Location     Type
 40771 ;;  tpwm            1   12[BANK0 ] unsigned char 
 40772 ;;  tmp             2   10[BANK0 ] unsigned int 
 40773 ;;  aosc            1    9[BANK0 ] unsigned char 
 40774 ;; Return value:  Size  Location     Type
 40775 ;;		None               void
 40776 ;; Registers used:
 40777 ;;		wreg, status,2, status,0, cstack
 40778 ;; Tracked objects:
 40779 ;;		On entry : E/0
 40780 ;;		On exit  : F/0
 40781 ;;		Unchanged: FFFFFFF0/0
 40782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40784 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40785 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40786 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40787 ;;Total ram usage:        9 bytes
 40788 ;; Hardware stack levels used:    1
 40789 ;; Hardware stack levels required when called:    5
 40790 ;; This function calls:
 40791 ;;		___wmul
 40792 ;;		___lwdiv
 40793 ;; This function is called by:
 40794 ;;		_PropOPT
 40795 ;;		_PropCO
 40796 ;;		_PropCO4
 40797 ;;		_PropCO2
 40798 ;; This function uses a non-reentrant model
 40799 ;;
 40800                           
 40801                           	psect	text181
 40802  007EF6                     __ptext181:
 40803                           	opt stack 0
 40804  007EF6                     _WriteOPWM:
 40805                           	opt stack 23
 40806                           
 40807                           ; BSR set to: 0
 40808                           ;WriteOPWM@tpwm stored from wreg
 40809  007EF6  CFE8 F0FF          	movff	wreg,WriteOPWM@tpwm
 40810                           
 40811                           ;pwm.c: 401: unsigned char aosc;
 40812                           ;pwm.c: 402: unsigned int tmp;
 40813                           ;pwm.c: 411: if(tpwm<PWM.MDMOD) tpwm=PWM.MDMOD;
 40814  007EFA  0100               	movlb	0	; () banked
 40815  007EFC  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 40816  007EFE  61FF               	cpfslt	WriteOPWM@tpwm& (0+255),b
 40817  007F00  D002               	goto	l33682
 40818                           
 40819                           ; BSR set to: 0
 40820  007F02  C09C  F0FF         	movff	_PWM+9,WriteOPWM@tpwm	;volatile
 40821  007F06                     l33682:
 40822                           
 40823                           ; BSR set to: 0
 40824                           ;pwm.c: 413: if(tpwm>0xF0) tpwm=0xF0;
 40825  007F06  0EF0               	movlw	240
 40826  007F08  65FF               	cpfsgt	WriteOPWM@tpwm& (0+255),b
 40827  007F0A  D001               	goto	l33686
 40828                           
 40829                           ; BSR set to: 0
 40830  007F0C  6FFF               	movwf	WriteOPWM@tpwm& (0+255),b
 40831  007F0E                     l33686:
 40832                           
 40833                           ; BSR set to: 0
 40834                           ;pwm.c: 414: if(PWM._ENOSC)
 40835  007F0E  A393               	btfss	_PWM& (0+255),1,b	;volatile
 40836  007F10  D063               	goto	l33706
 40837                           
 40838                           ; BSR set to: 0
 40839                           ;pwm.c: 415: {
 40840                           ;pwm.c: 417: if(tpwm>=PWM.MGMOD) aosc=PWM.MINOSC;
 40841  007F12  519D               	movf	(_PWM+10)& (0+255),w,b	;volatile
 40842  007F14  5DFF               	subwf	WriteOPWM@tpwm& (0+255),w,b
 40843  007F16  E303               	bnc	l33692
 40844  007F18                     l33690:
 40845                           
 40846                           ; BSR set to: 0
 40847  007F18  C09F  F0FC         	movff	_PWM+12,WriteOPWM@aosc	;volatile
 40848  007F1C  D047               	goto	l2589
 40849  007F1E                     l33692:
 40850                           
 40851                           ; BSR set to: 0
 40852                           ;pwm.c: 418: else
 40853                           ;pwm.c: 419: {
 40854                           ;pwm.c: 420: tmp=(tpwm-PWM.MDMOD)*100;
 40855  007F1E  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 40856  007F20  5DFF               	subwf	WriteOPWM@tpwm& (0+255),w,b
 40857  007F22  6E1E               	movwf	?___wmul,c
 40858  007F24  6A1F               	clrf	?___wmul+1,c
 40859  007F26  A0D8               	btfss	status,0,c
 40860  007F28  061F               	decf	?___wmul+1,f,c
 40861  007F2A  6A21               	clrf	?___wmul+3,c
 40862  007F2C  0E64               	movlw	100
 40863  007F2E  6E20               	movwf	?___wmul+2,c
 40864  007F30  EC9C  F056         	call	___wmul	;wreg free
 40865  007F34  C01E  F0FD         	movff	?___wmul,WriteOPWM@tmp
 40866  007F38  C01F  F0FE         	movff	?___wmul+1,WriteOPWM@tmp+1
 40867                           
 40868                           ;pwm.c: 421: tmp/=(PWM.MGMOD-PWM.MDMOD);
 40869  007F3C  C0FD  F0F3         	movff	WriteOPWM@tmp,?___lwdiv
 40870  007F40  C0FE  F0F4         	movff	WriteOPWM@tmp+1,?___lwdiv+1
 40871  007F44  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 40872  007F46  5D9D               	subwf	(_PWM+10)& (0+255),w,b	;volatile
 40873  007F48  6FF5               	movwf	(?___lwdiv+2)& (0+255),b
 40874  007F4A  6BF6               	clrf	(?___lwdiv+3)& (0+255),b
 40875  007F4C  A0D8               	btfss	status,0,c
 40876  007F4E  07F6               	decf	(?___lwdiv+3)& (0+255),f,b
 40877  007F50  EC93  F051         	call	___lwdiv	;wreg free
 40878  007F54  C0F3  F0FD         	movff	?___lwdiv,WriteOPWM@tmp
 40879  007F58  C0F4  F0FE         	movff	?___lwdiv+1,WriteOPWM@tmp+1
 40880                           
 40881                           ;pwm.c: 422: tmp*=(PWM.MAXOSC-PWM.MINOSC);
 40882  007F5C  C0FD  F01E         	movff	WriteOPWM@tmp,?___wmul
 40883  007F60  C0FE  F01F         	movff	WriteOPWM@tmp+1,?___wmul+1
 40884  007F64  519F               	movf	(_PWM+12)& (0+255),w,b	;volatile
 40885  007F66  5D9E               	subwf	(_PWM+11)& (0+255),w,b	;volatile
 40886  007F68  6E20               	movwf	?___wmul+2,c
 40887  007F6A  6A21               	clrf	?___wmul+3,c
 40888  007F6C  A0D8               	btfss	status,0,c
 40889  007F6E  0621               	decf	?___wmul+3,f,c
 40890  007F70  EC9C  F056         	call	___wmul	;wreg free
 40891  007F74  C01E  F0FD         	movff	?___wmul,WriteOPWM@tmp
 40892  007F78  C01F  F0FE         	movff	?___wmul+1,WriteOPWM@tmp+1
 40893                           
 40894                           ;pwm.c: 423: tmp/=100;
 40895  007F7C  C0FD  F0F3         	movff	WriteOPWM@tmp,?___lwdiv
 40896  007F80  C0FE  F0F4         	movff	WriteOPWM@tmp+1,?___lwdiv+1
 40897  007F84  6BF6               	clrf	(?___lwdiv+3)& (0+255),b
 40898  007F86  0E64               	movlw	100
 40899  007F88  6FF5               	movwf	(?___lwdiv+2)& (0+255),b
 40900  007F8A  EC93  F051         	call	___lwdiv	;wreg free
 40901  007F8E  C0F3  F0FD         	movff	?___lwdiv,WriteOPWM@tmp
 40902  007F92  C0F4  F0FE         	movff	?___lwdiv+1,WriteOPWM@tmp+1
 40903                           
 40904                           ; BSR set to: 0
 40905                           ;pwm.c: 424: if(tmp>PWM.MAXOSC) aosc=PWM.MINOSC;
 40906  007F96  519E               	movf	(_PWM+11)& (0+255),w,b	;volatile
 40907  007F98  6FF7               	movwf	??_WriteOPWM& (0+255),b
 40908  007F9A  6BF8               	clrf	(??_WriteOPWM+1)& (0+255),b
 40909  007F9C  51FD               	movf	WriteOPWM@tmp& (0+255),w,b
 40910  007F9E  5DF7               	subwf	??_WriteOPWM& (0+255),w,b
 40911  007FA0  51FE               	movf	(WriteOPWM@tmp+1)& (0+255),w,b
 40912  007FA2  59F8               	subwfb	(??_WriteOPWM+1)& (0+255),w,b
 40913  007FA4  E3B9               	bnc	l33690
 40914                           
 40915                           ; BSR set to: 0
 40916                           ;pwm.c: 425: else aosc=PWM.MAXOSC-(unsigned char)tmp;
 40917  007FA6  51FD               	movf	WriteOPWM@tmp& (0+255),w,b
 40918  007FA8  5D9E               	subwf	(_PWM+11)& (0+255),w,b	;volatile
 40919  007FAA  6FFC               	movwf	WriteOPWM@aosc& (0+255),b
 40920  007FAC                     l2589:
 40921                           
 40922                           ; BSR set to: 0
 40923                           ;pwm.c: 426: }
 40924                           ;pwm.c: 428: if(aosc>(PWM.MAG_MOD-tpwm)) aosc=PWM.MAG_MOD-tpwm;
 40925  007FAC  51FC               	movf	WriteOPWM@aosc& (0+255),w,b
 40926  007FAE  6FF7               	movwf	??_WriteOPWM& (0+255),b
 40927  007FB0  6BF8               	clrf	(??_WriteOPWM+1)& (0+255),b
 40928  007FB2  51FF               	movf	WriteOPWM@tpwm& (0+255),w,b
 40929  007FB4  C0A1  F0F9         	movff	_PWM+14,??_WriteOPWM+2	;volatile
 40930  007FB8  D81A               	call	PL136	;call to abstracted procedure
 40931  007FBA  E203               	bc	l33702
 40932                           
 40933                           ; BSR set to: 0
 40934  007FBC  51FF               	movf	WriteOPWM@tpwm& (0+255),w,b
 40935  007FBE  5DA1               	subwf	(_PWM+14)& (0+255),w,b	;volatile
 40936  007FC0  D00A               	goto	L86
 40937  007FC2                     l33702:
 40938                           
 40939                           ; BSR set to: 0
 40940                           ;pwm.c: 429: else
 40941                           ;pwm.c: 430: if(aosc>(tpwm-PWM.MAD_MOD)) aosc=tpwm-PWM.MAD_MOD;
 40942  007FC2  51FC               	movf	WriteOPWM@aosc& (0+255),w,b
 40943  007FC4  6FF7               	movwf	??_WriteOPWM& (0+255),b
 40944  007FC6  6BF8               	clrf	(??_WriteOPWM+1)& (0+255),b
 40945  007FC8  51A0               	movf	(_PWM+13)& (0+255),w,b	;volatile
 40946  007FCA  C0FF  F0F9         	movff	WriteOPWM@tpwm,??_WriteOPWM+2
 40947  007FCE  D80F               	call	PL136	;call to abstracted procedure
 40948  007FD0  E203               	bc	l33706
 40949                           
 40950                           ; BSR set to: 0
 40951  007FD2  51A0               	movf	(_PWM+13)& (0+255),w,b	;volatile
 40952  007FD4  5DFF               	subwf	WriteOPWM@tpwm& (0+255),w,b
 40953  007FD6                     L86:
 40954  007FD6  6FFC               	movwf	WriteOPWM@aosc& (0+255),b
 40955  007FD8                     l33706:
 40956                           
 40957                           ; BSR set to: 0
 40958                           ;pwm.c: 431: }
 40959                           ;pwm.c: 434: PWM._ENPWM=0;
 40960  007FD8  9193               	bcf	_PWM& (0+255),0,b	;volatile
 40961                           
 40962                           ; BSR set to: 0
 40963                           ;pwm.c: 435: PWM.BufPWM=tpwm;
 40964  007FDA  C0FF  F094         	movff	WriteOPWM@tpwm,_PWM+1	;volatile
 40965                           
 40966                           ; BSR set to: 0
 40967                           ;pwm.c: 436: if(PWM._ENOSC) PWM.BufOSC=aosc;
 40968  007FDE  A393               	btfss	_PWM& (0+255),1,b	;volatile
 40969  007FE0  D003               	goto	l2595
 40970                           
 40971                           ; BSR set to: 0
 40972  007FE2  C0FC  F095         	movff	WriteOPWM@aosc,_PWM+2	;volatile
 40973  007FE6  D001               	goto	l2596
 40974  007FE8                     l2595:
 40975                           
 40976                           ; BSR set to: 0
 40977                           ;pwm.c: 437: else PWM.BufOSC=0;
 40978  007FE8  6B95               	clrf	(_PWM+2)& (0+255),b	;volatile
 40979  007FEA                     l2596:
 40980                           
 40981                           ; BSR set to: 0
 40982                           ;pwm.c: 438: PWM._ENPWM=1;
 40983  007FEA  8193               	bsf	_PWM& (0+255),0,b	;volatile
 40984                           
 40985                           ; BSR set to: 0
 40986  007FEC  0012               	return	
 40987  007FEE                     __end_of_WriteOPWM:
 40988                           	opt stack 0
 40989  007FEE                     PL136:
 40990                           	opt stack 23
 40991  007FEE  6BFA               	clrf	(??_WriteOPWM+3)& (0+255),b
 40992  007FF0  5FF9               	subwf	(??_WriteOPWM+2)& (0+255),f,b
 40993  007FF2  0E00               	movlw	0
 40994  007FF4  5BFA               	subwfb	(??_WriteOPWM+3)& (0+255),f,b
 40995  007FF6  51FA               	movf	(??_WriteOPWM+3)& (0+255),w,b
 40996  007FF8  0A80               	xorlw	128
 40997  007FFA  6FFB               	movwf	(??_WriteOPWM+4)& (0+255),b
 40998  007FFC  51F7               	movf	??_WriteOPWM& (0+255),w,b
 40999  007FFE  5DF9               	subwf	(??_WriteOPWM+2)& (0+255),w,b
 41000  008000  51F8               	movf	(??_WriteOPWM+1)& (0+255),w,b
 41001  008002  0A80               	xorlw	128
 41002  008004  59FB               	subwfb	(??_WriteOPWM+4)& (0+255),w,b
 41003  008006  0012               	return	
 41004  008008                     __end_ofPL136:
 41005                           	opt stack 0
 41006                           tblptru	equ	0xFF8
 41007                           tblptrh	equ	0xFF7
 41008                           tblptrl	equ	0xFF6
 41009                           tablat	equ	0xFF5
 41010                           prodh	equ	0xFF4
 41011                           prodl	equ	0xFF3
 41012                           intcon	equ	0xFF2
 41013                           postinc0	equ	0xFEE
 41014                           wreg	equ	0xFE8
 41015                           indf1	equ	0xFE7
 41016                           postinc1	equ	0xFE6
 41017                           postdec1	equ	0xFE5
 41018                           fsr1h	equ	0xFE2
 41019                           fsr1l	equ	0xFE1
 41020                           indf2	equ	0xFDF
 41021                           postinc2	equ	0xFDE
 41022                           postdec2	equ	0xFDD
 41023                           fsr2h	equ	0xFDA
 41024                           fsr2l	equ	0xFD9
 41025                           status	equ	0xFD8
 41026                           
 41027 ;; *************** function _Tmaleje *****************
 41028 ;; Defined at:
 41029 ;;		line 2469 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 41030 ;; Parameters:    Size  Location     Type
 41031 ;;  t               1    wreg     const unsigned char 
 41032 ;; Auto vars:     Size  Location     Type
 41033 ;;  t               1   32[COMRAM] const unsigned char 
 41034 ;; Return value:  Size  Location     Type
 41035 ;;		None               void
 41036 ;; Registers used:
 41037 ;;		wreg, status,2, status,0, prodl, prodh
 41038 ;; Tracked objects:
 41039 ;;		On entry : C/0
 41040 ;;		On exit  : C/0
 41041 ;;		Unchanged: FFFFFFF3/0
 41042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41045 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41046 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41047 ;;Total ram usage:        4 bytes
 41048 ;; Hardware stack levels used:    1
 41049 ;; Hardware stack levels required when called:    4
 41050 ;; This function calls:
 41051 ;;		Nothing
 41052 ;; This function is called by:
 41053 ;;		_ModZgCO
 41054 ;;		_ModPruCO
 41055 ;;		_ModPruCW
 41056 ;;		_ModPrzCW
 41057 ;;		_ModPruCW4
 41058 ;;		_ModPrzCW4
 41059 ;;		_ModPruCW2
 41060 ;;		_ModPrzCW2
 41061 ;; This function uses a non-reentrant model
 41062 ;;
 41063                           
 41064                           	psect	text182
 41065  00AA00                     __ptext182:
 41066                           	opt stack 0
 41067  00AA00                     _Tmaleje:
 41068                           	opt stack 24
 41069                           
 41070                           ; BSR set to: 0
 41071                           ;Tmaleje@t stored from wreg
 41072  00AA00  CFE8 F021          	movff	wreg,Tmaleje@t
 41073                           
 41074                           ;rgl.c: 2470: return (rgl.x_dt<(-1*t));
 41075  00AA04  5021               	movf	Tmaleje@t,w,c
 41076  00AA06  0D01               	mullw	1
 41077  00AA08  1EF3               	comf	prodl,f,c
 41078  00AA0A  1EF4               	comf	prodh,f,c
 41079  00AA0C  4AF3               	infsnz	prodl,f,c
 41080  00AA0E  2AF4               	incf	prodh,f,c
 41081  00AA10  C02B  F01E         	movff	_rgl+4,??_Tmaleje
 41082  00AA14  6A1F               	clrf	(??_Tmaleje+1)& (0+255),c
 41083  00AA16  BE1E               	btfsc	??_Tmaleje& (0+255),7,c
 41084  00AA18  061F               	decf	(??_Tmaleje+1)& (0+255),f,c
 41085  00AA1A  501F               	movf	??_Tmaleje+1,w,c
 41086  00AA1C  0A80               	xorlw	128
 41087  00AA1E  6E20               	movwf	(??_Tmaleje+2)& (0+255),c
 41088  00AA20  50F3               	movf	prodl,w,c
 41089  00AA22  5C1E               	subwf	??_Tmaleje,w,c
 41090  00AA24  50F4               	movf	prodh,w,c
 41091  00AA26  0A80               	xorlw	128
 41092  00AA28  5820               	subwfb	(??_Tmaleje+2)& (0+255),w,c
 41093  00AA2A  E302               	bnc	l35492
 41094  00AA2C  90D8               	bcf	status,0,c
 41095  00AA2E  0012               	return	
 41096  00AA30                     l35492:
 41097  00AA30  80D8               	bsf	status,0,c
 41098  00AA32  0012               	return	
 41099  00AA34                     __end_of_Tmaleje:
 41100                           	opt stack 0
 41101                           tblptru	equ	0xFF8
 41102                           tblptrh	equ	0xFF7
 41103                           tblptrl	equ	0xFF6
 41104                           tablat	equ	0xFF5
 41105                           prodh	equ	0xFF4
 41106                           prodl	equ	0xFF3
 41107                           intcon	equ	0xFF2
 41108                           postinc0	equ	0xFEE
 41109                           wreg	equ	0xFE8
 41110                           indf1	equ	0xFE7
 41111                           postinc1	equ	0xFE6
 41112                           postdec1	equ	0xFE5
 41113                           fsr1h	equ	0xFE2
 41114                           fsr1l	equ	0xFE1
 41115                           indf2	equ	0xFDF
 41116                           postinc2	equ	0xFDE
 41117                           postdec2	equ	0xFDD
 41118                           fsr2h	equ	0xFDA
 41119                           fsr2l	equ	0xFD9
 41120                           status	equ	0xFD8
 41121                           
 41122 ;; *************** function _Tstoi *****************
 41123 ;; Defined at:
 41124 ;;		line 2476 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 41125 ;; Parameters:    Size  Location     Type
 41126 ;;		None
 41127 ;; Auto vars:     Size  Location     Type
 41128 ;;		None
 41129 ;; Return value:  Size  Location     Type
 41130 ;;		None               void
 41131 ;; Registers used:
 41132 ;;		wreg, status,2, status,0
 41133 ;; Tracked objects:
 41134 ;;		On entry : E/0
 41135 ;;		On exit  : E/0
 41136 ;;		Unchanged: FFFFFFF1/0
 41137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41142 ;;Total ram usage:        0 bytes
 41143 ;; Hardware stack levels used:    1
 41144 ;; Hardware stack levels required when called:    4
 41145 ;; This function calls:
 41146 ;;		Nothing
 41147 ;; This function is called by:
 41148 ;;		_ModZgCO
 41149 ;;		_IncConstCOCW
 41150 ;;		_ModZgCW
 41151 ;;		_ModPruCW
 41152 ;;		_IncConstCOCW4
 41153 ;;		_ModPruCW4
 41154 ;;		_ModPrzCW4
 41155 ;;		_IncConstCW2
 41156 ;;		_IncConstCO2
 41157 ;;		_ModPruCW2
 41158 ;;		_ModPrzCW2
 41159 ;; This function uses a non-reentrant model
 41160 ;;
 41161                           
 41162                           	psect	text183
 41163  00B5AE                     __ptext183:
 41164                           	opt stack 0
 41165  00B5AE                     _Tstoi:
 41166                           	opt stack 24
 41167                           
 41168                           ;rgl.c: 2477: return !rgl.x_dt;
 41169  00B5AE  502B               	movf	_rgl+4,w,c
 41170  00B5B0  E002               	bz	l35500
 41171  00B5B2  90D8               	bcf	status,0,c
 41172  00B5B4  0012               	return	
 41173  00B5B6                     l35500:
 41174  00B5B6  80D8               	bsf	status,0,c
 41175  00B5B8  0012               	return	
 41176  00B5BA                     __end_of_Tstoi:
 41177                           	opt stack 0
 41178                           tblptru	equ	0xFF8
 41179                           tblptrh	equ	0xFF7
 41180                           tblptrl	equ	0xFF6
 41181                           tablat	equ	0xFF5
 41182                           prodh	equ	0xFF4
 41183                           prodl	equ	0xFF3
 41184                           intcon	equ	0xFF2
 41185                           postinc0	equ	0xFEE
 41186                           wreg	equ	0xFE8
 41187                           indf1	equ	0xFE7
 41188                           postinc1	equ	0xFE6
 41189                           postdec1	equ	0xFE5
 41190                           fsr1h	equ	0xFE2
 41191                           fsr1l	equ	0xFE1
 41192                           indf2	equ	0xFDF
 41193                           postinc2	equ	0xFDE
 41194                           postdec2	equ	0xFDD
 41195                           fsr2h	equ	0xFDA
 41196                           fsr2l	equ	0xFD9
 41197                           status	equ	0xFD8
 41198                           
 41199 ;; *************** function _Trowna *****************
 41200 ;; Defined at:
 41201 ;;		line 2502 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 41202 ;; Parameters:    Size  Location     Type
 41203 ;;		None
 41204 ;; Auto vars:     Size  Location     Type
 41205 ;;		None
 41206 ;; Return value:  Size  Location     Type
 41207 ;;		None               void
 41208 ;; Registers used:
 41209 ;;		wreg, status,2, status,0
 41210 ;; Tracked objects:
 41211 ;;		On entry : E/1
 41212 ;;		On exit  : E/1
 41213 ;;		Unchanged: FFFFFFF1/0
 41214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41219 ;;Total ram usage:        0 bytes
 41220 ;; Hardware stack levels used:    1
 41221 ;; Hardware stack levels required when called:    4
 41222 ;; This function calls:
 41223 ;;		Nothing
 41224 ;; This function is called by:
 41225 ;;		_ModPruCO
 41226 ;;		_ModDkCW
 41227 ;;		_ModPruCW2
 41228 ;; This function uses a non-reentrant model
 41229 ;;
 41230                           
 41231                           	psect	text184
 41232  00B5BA                     __ptext184:
 41233                           	opt stack 0
 41234  00B5BA                     _Trowna:
 41235                           	opt stack 24
 41236                           
 41237                           ;rgl.c: 2503: return !rgl.x_t;
 41238  00B5BA  5029               	movf	_rgl+2,w,c
 41239  00B5BC  E002               	bz	l35516
 41240  00B5BE  90D8               	bcf	status,0,c
 41241  00B5C0  0012               	return	
 41242  00B5C2                     l35516:
 41243  00B5C2  80D8               	bsf	status,0,c
 41244  00B5C4  0012               	return	
 41245  00B5C6                     __end_of_Trowna:
 41246                           	opt stack 0
 41247                           tblptru	equ	0xFF8
 41248                           tblptrh	equ	0xFF7
 41249                           tblptrl	equ	0xFF6
 41250                           tablat	equ	0xFF5
 41251                           prodh	equ	0xFF4
 41252                           prodl	equ	0xFF3
 41253                           intcon	equ	0xFF2
 41254                           postinc0	equ	0xFEE
 41255                           wreg	equ	0xFE8
 41256                           indf1	equ	0xFE7
 41257                           postinc1	equ	0xFE6
 41258                           postdec1	equ	0xFE5
 41259                           fsr1h	equ	0xFE2
 41260                           fsr1l	equ	0xFE1
 41261                           indf2	equ	0xFDF
 41262                           postinc2	equ	0xFDE
 41263                           postdec2	equ	0xFDD
 41264                           fsr2h	equ	0xFDA
 41265                           fsr2l	equ	0xFD9
 41266                           status	equ	0xFD8
 41267                           
 41268 ;; *************** function _Trosnie *****************
 41269 ;; Defined at:
 41270 ;;		line 2460 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 41271 ;; Parameters:    Size  Location     Type
 41272 ;;  t               1    wreg     const unsigned char 
 41273 ;; Auto vars:     Size  Location     Type
 41274 ;;  t               1   29[COMRAM] const unsigned char 
 41275 ;; Return value:  Size  Location     Type
 41276 ;;		None               void
 41277 ;; Registers used:
 41278 ;;		wreg, status,2, status,0
 41279 ;; Tracked objects:
 41280 ;;		On entry : E/1
 41281 ;;		On exit  : E/1
 41282 ;;		Unchanged: FFFFFFF1/0
 41283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41288 ;;Total ram usage:        1 bytes
 41289 ;; Hardware stack levels used:    1
 41290 ;; Hardware stack levels required when called:    4
 41291 ;; This function calls:
 41292 ;;		Nothing
 41293 ;; This function is called by:
 41294 ;;		_ModPruCO
 41295 ;;		_IncMaxCO
 41296 ;;		_ModPruCW
 41297 ;;		_IncMaxCW
 41298 ;;		_ModPruCW4
 41299 ;;		_IncMaxCW4
 41300 ;;		_ModPruCW2
 41301 ;;		_IncMaxCW2
 41302 ;; This function uses a non-reentrant model
 41303 ;;
 41304                           
 41305                           	psect	text185
 41306  00B2BE                     __ptext185:
 41307                           	opt stack 0
 41308  00B2BE                     _Trosnie:
 41309                           	opt stack 24
 41310                           
 41311                           ;Trosnie@t stored from wreg
 41312  00B2BE  CFE8 F01E          	movff	wreg,Trosnie@t
 41313                           
 41314                           ;rgl.c: 2461: return (rgl.x_dt>t);
 41315  00B2C2  501E               	movf	Trosnie@t,w,c
 41316  00B2C4  BE2B               	btfsc	_rgl+4,7,c
 41317  00B2C6  D003               	goto	u67230
 41318  00B2C8  0AFF               	xorlw	255
 41319  00B2CA  242B               	addwf	_rgl+4,w,c
 41320  00B2CC  E202               	bc	l35524
 41321  00B2CE                     u67230:
 41322  00B2CE  90D8               	bcf	status,0,c
 41323  00B2D0  0012               	return	
 41324  00B2D2                     l35524:
 41325  00B2D2  80D8               	bsf	status,0,c
 41326  00B2D4  0012               	return	
 41327  00B2D6                     __end_of_Trosnie:
 41328                           	opt stack 0
 41329                           tblptru	equ	0xFF8
 41330                           tblptrh	equ	0xFF7
 41331                           tblptrl	equ	0xFF6
 41332                           tablat	equ	0xFF5
 41333                           prodh	equ	0xFF4
 41334                           prodl	equ	0xFF3
 41335                           intcon	equ	0xFF2
 41336                           postinc0	equ	0xFEE
 41337                           wreg	equ	0xFE8
 41338                           indf1	equ	0xFE7
 41339                           postinc1	equ	0xFE6
 41340                           postdec1	equ	0xFE5
 41341                           fsr1h	equ	0xFE2
 41342                           fsr1l	equ	0xFE1
 41343                           indf2	equ	0xFDF
 41344                           postinc2	equ	0xFDE
 41345                           postdec2	equ	0xFDD
 41346                           fsr2h	equ	0xFDA
 41347                           fsr2l	equ	0xFD9
 41348                           status	equ	0xFD8
 41349                           
 41350 ;; *************** function _FirstPCW *****************
 41351 ;; Defined at:
 41352 ;;		line 632 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 41353 ;; Parameters:    Size  Location     Type
 41354 ;;		None
 41355 ;; Auto vars:     Size  Location     Type
 41356 ;;  m               4    4[BANK2 ] long 
 41357 ;;  maxmod          1    3[BANK2 ] unsigned char 
 41358 ;;  p2              1    2[BANK2 ] unsigned char 
 41359 ;;  p               1    1[BANK2 ] unsigned char 
 41360 ;;  tmp             1    0[BANK2 ] unsigned char 
 41361 ;; Return value:  Size  Location     Type
 41362 ;;                  1    wreg      unsigned char 
 41363 ;; Registers used:
 41364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41365 ;; Tracked objects:
 41366 ;;		On entry : F/0
 41367 ;;		On exit  : F/2
 41368 ;;		Unchanged: FFFFFFF0/0
 41369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41371 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41372 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41373 ;;      Totals:         0       5       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41374 ;;Total ram usage:       13 bytes
 41375 ;; Hardware stack levels used:    1
 41376 ;; Hardware stack levels required when called:    5
 41377 ;; This function calls:
 41378 ;;		___awdiv
 41379 ;;		___wmul
 41380 ;;		___aldiv
 41381 ;;		___lmul
 41382 ;; This function is called by:
 41383 ;;		_StartMCW
 41384 ;; This function uses a non-reentrant model
 41385 ;;
 41386                           
 41387                           	psect	text186
 41388  0043A2                     __ptext186:
 41389                           	opt stack 0
 41390  0043A2                     _FirstPCW:
 41391                           	opt stack 23
 41392                           
 41393                           ; BSR set to: 0
 41394                           ;rgl.c: 633: signed long m;
 41395                           ;rgl.c: 634: unsigned char maxmod,p,p2,tmp;
 41396                           ;rgl.c: 640: tmp=(PWM.FIRSTPB-PWM.MDMOD)/4;
 41397  0043A2  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 41398  0043A4  5DAB               	subwf	(_PWM+24)& (0+255),w,b	;volatile
 41399  0043A6  6FF3               	movwf	?___awdiv& (0+255),b
 41400  0043A8  6BF4               	clrf	(?___awdiv+1)& (0+255),b
 41401  0043AA  A0D8               	btfss	status,0,c
 41402  0043AC  07F4               	decf	(?___awdiv+1)& (0+255),f,b
 41403  0043AE  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 41404  0043B0  0E04               	movlw	4
 41405  0043B2  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 41406  0043B4  EC37  F04A         	call	___awdiv	;wreg free
 41407  0043B8  51F3               	movf	?___awdiv& (0+255),w,b
 41408  0043BA  0102               	movlb	2	; () banked
 41409  0043BC  6FF0               	movwf	FirstPCW@tmp& (0+255),b
 41410                           
 41411                           ; BSR set to: 2
 41412                           ;rgl.c: 641: if(PWM.MMAXCW>(PWM.FIRSTPB+tmp))
 41413  0043BE  0100               	movlb	0	; () banked
 41414  0043C0  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 41415  0043C2  6FFB               	movwf	??_FirstPCW& (0+255),b
 41416  0043C4  6BFC               	clrf	(??_FirstPCW+1)& (0+255),b
 41417  0043C6  0102               	movlb	2	; () banked
 41418  0043C8  51F0               	movf	FirstPCW@tmp& (0+255),w,b
 41419  0043CA  0100               	movlb	0	; () banked
 41420  0043CC  C0AB  F0FD         	movff	_PWM+24,??_FirstPCW+2	;volatile
 41421  0043D0  6BFE               	clrf	(??_FirstPCW+3)& (0+255),b
 41422  0043D2  27FD               	addwf	(??_FirstPCW+2)& (0+255),f,b
 41423  0043D4  0E00               	movlw	0
 41424  0043D6  23FE               	addwfc	(??_FirstPCW+3)& (0+255),f,b
 41425  0043D8  51FE               	movf	(??_FirstPCW+3)& (0+255),w,b
 41426  0043DA  0A80               	xorlw	128
 41427  0043DC  6FFF               	movwf	(??_FirstPCW+4)& (0+255),b
 41428  0043DE  51FB               	movf	??_FirstPCW& (0+255),w,b
 41429  0043E0  5DFD               	subwf	(??_FirstPCW+2)& (0+255),w,b
 41430  0043E2  51FC               	movf	(??_FirstPCW+1)& (0+255),w,b
 41431  0043E4  0A80               	xorlw	128
 41432  0043E6  59FF               	subwfb	(??_FirstPCW+4)& (0+255),w,b
 41433  0043E8  E205               	bc	l2941
 41434                           
 41435                           ; BSR set to: 0
 41436                           ;rgl.c: 642: {
 41437                           ;rgl.c: 643: maxmod=PWM.FIRSTPB+tmp;
 41438  0043EA  51AB               	movf	(_PWM+24)& (0+255),w,b	;volatile
 41439  0043EC  0102               	movlb	2	; () banked
 41440  0043EE  25F0               	addwf	FirstPCW@tmp& (0+255),w,b
 41441  0043F0  6FF3               	movwf	FirstPCW@maxmod& (0+255),b
 41442                           
 41443                           ;rgl.c: 644: }
 41444  0043F2  D002               	goto	l35534
 41445  0043F4                     l2941:
 41446                           
 41447                           ; BSR set to: 0
 41448                           ;rgl.c: 645: else
 41449                           ;rgl.c: 646: {
 41450                           ;rgl.c: 647: maxmod=PWM.MMAXCW;
 41451  0043F4  C0B1  F2F3         	movff	_PWM+30,FirstPCW@maxmod	;volatile
 41452  0043F8                     l35534:
 41453                           
 41454                           ;rgl.c: 648: }
 41455                           ;rgl.c: 653: if(DtCW.CW>=20&&DtCW.CW<=60)
 41456  0043F8  0100               	movlb	0	; () banked
 41457  0043FA  EE20  F0D1         	lfsr	2,_DtCW+2
 41458  0043FE  0E13               	movlw	19
 41459  004400  64DF               	cpfsgt	indf2,c
 41460  004402  D02B               	goto	l35550
 41461                           
 41462                           ; BSR set to: 0
 41463  004404  0E3D               	movlw	61
 41464  004406  61D1               	cpfslt	(_DtCW+2)& (0+255),b
 41465  004408  D028               	goto	l35550
 41466                           
 41467                           ; BSR set to: 0
 41468                           ;rgl.c: 654: {
 41469                           ;rgl.c: 655: m=(60-DtCW.CW)*10;
 41470  00440A  51D1               	movf	(_DtCW+2)& (0+255),w,b
 41471  00440C  083C               	sublw	60
 41472  00440E  6E1E               	movwf	?___wmul,c
 41473  004410  0E00               	movlw	0
 41474  004412  A0D8               	btfss	status,0,c
 41475  004414  2AE8               	incf	wreg,f,c
 41476  004416  0800               	sublw	0
 41477  004418  6E1F               	movwf	?___wmul+1,c
 41478  00441A  6A21               	clrf	?___wmul+3,c
 41479  00441C  0E0A               	movlw	10
 41480  00441E  6E20               	movwf	?___wmul+2,c
 41481  004420  EC9C  F056         	call	___wmul	;wreg free
 41482                           
 41483                           ;rgl.c: 656: m=m/(60-20);
 41484  004424  D8D1               	call	PL44	;call to abstracted procedure
 41485  004426  D8F4               	call	PL204	;call to abstracted procedure
 41486  004428  ECE3  F042         	call	___aldiv	;wreg free
 41487                           
 41488                           ;rgl.c: 657: m=m*(maxmod-PWM.MDMOD);
 41489  00442C  D88F               	call	PL12	;call to abstracted procedure
 41490  00442E  ECD2  F050         	call	___lmul	;wreg free
 41491                           
 41492                           ;rgl.c: 658: if(m<0) m=0;
 41493                           
 41494                           ; BSR set to: 2
 41495                           
 41496                           ; BSR set to: 2
 41497                           ;rgl.c: 659: m=m/10+PWM.MDMOD;
 41498  004432  D8AD               	call	PL20	;call to abstracted procedure
 41499  004434  ECE3  F042         	call	___aldiv	;wreg free
 41500                           
 41501                           ; BSR set to: 2
 41502                           ;rgl.c: 660: if(m>0xff) p=maxmod;
 41503  004438  D8DA               	call	PL60	;call to abstracted procedure
 41504  00443A  E108               	bnz	u67285
 41505  00443C  0E00               	movlw	0
 41506  00443E  5DF6               	subwf	(FirstPCW@m+2)& (0+255),w,b
 41507  004440  E105               	bnz	u67285
 41508  004442  0E01               	movlw	1
 41509  004444  5DF5               	subwf	(FirstPCW@m+1)& (0+255),w,b
 41510  004446  E102               	bnz	u67285
 41511  004448  0E00               	movlw	0
 41512  00444A  5DF4               	subwf	FirstPCW@m& (0+255),w,b
 41513  00444C                     u67285:
 41514  00444C  E303               	bnc	l2945
 41515                           
 41516                           ; BSR set to: 2
 41517  00444E  C2F3  F2F1         	movff	FirstPCW@maxmod,FirstPCW@p
 41518  004452  D00F               	goto	l35558
 41519  004454                     l2945:
 41520                           
 41521                           ; BSR set to: 2
 41522                           ;rgl.c: 661: else p=m;
 41523  004454  C2F4  F2F1         	movff	FirstPCW@m,FirstPCW@p
 41524  004458  D00C               	goto	l35558
 41525  00445A                     l35550:
 41526                           
 41527                           ; BSR set to: 0
 41528                           ;rgl.c: 663: else
 41529                           ;rgl.c: 664: {
 41530                           ;rgl.c: 665: if(DtCW.CW<20) p=maxmod;
 41531  00445A  0E14               	movlw	20
 41532  00445C  61D1               	cpfslt	(_DtCW+2)& (0+255),b
 41533  00445E  D002               	goto	l35554
 41534                           
 41535                           ; BSR set to: 0
 41536  004460  C2F3  F2F1         	movff	FirstPCW@maxmod,FirstPCW@p
 41537  004464                     l35554:
 41538                           
 41539                           ; BSR set to: 0
 41540                           ;rgl.c: 666: if(DtCW.CW>60) p=PWM.MDMOD;
 41541  004464  EE20  F0D1         	lfsr	2,_DtCW+2
 41542  004468  0E3C               	movlw	60
 41543  00446A  64DF               	cpfsgt	indf2,c
 41544  00446C  D002               	goto	l35558
 41545                           
 41546                           ; BSR set to: 0
 41547  00446E  C09C  F2F1         	movff	_PWM+9,FirstPCW@p	;volatile
 41548  004472                     l35558:
 41549                           
 41550                           ;rgl.c: 667: }
 41551                           ;rgl.c: 670: m=(DtCW.PCW-30)*10;
 41552  004472  0EE2               	movlw	226
 41553  004474  0100               	movlb	0	; () banked
 41554  004476  25D2               	addwf	(_DtCW+3)& (0+255),w,b
 41555  004478  6E1E               	movwf	?___wmul,c
 41556  00447A  6A1F               	clrf	?___wmul+1,c
 41557  00447C  0EFF               	movlw	255
 41558  00447E  221F               	addwfc	?___wmul+1,f,c
 41559  004480  6A21               	clrf	?___wmul+3,c
 41560  004482  0E0A               	movlw	10
 41561  004484  6E20               	movwf	?___wmul+2,c
 41562  004486  EC9C  F056         	call	___wmul	;wreg free
 41563                           
 41564                           ;rgl.c: 671: m=m/(60-30);
 41565  00448A  D89E               	call	PL44	;call to abstracted procedure
 41566  00448C  0E1E               	movlw	30
 41567  00448E  6E22               	movwf	?___aldiv+4,c
 41568  004490  0E00               	movlw	0
 41569  004492  6A23               	clrf	?___aldiv+5,c
 41570  004494  6A24               	clrf	?___aldiv+6,c
 41571  004496  6A25               	clrf	?___aldiv+7,c
 41572  004498  ECE3  F042         	call	___aldiv	;wreg free
 41573                           
 41574                           ;rgl.c: 672: m=m*(maxmod-PWM.MDMOD);
 41575  00449C  D857               	call	PL12	;call to abstracted procedure
 41576  00449E  ECD2  F050         	call	___lmul	;wreg free
 41577                           
 41578                           ;rgl.c: 673: if(m<0) m=0;
 41579                           
 41580                           ; BSR set to: 2
 41581                           
 41582                           ; BSR set to: 2
 41583                           ;rgl.c: 674: m=m/10+PWM.MDMOD;
 41584  0044A2  D875               	call	PL20	;call to abstracted procedure
 41585  0044A4  ECE3  F042         	call	___aldiv	;wreg free
 41586                           
 41587                           ; BSR set to: 2
 41588                           ;rgl.c: 675: if(m>0xff) p2=maxmod;
 41589  0044A8  D8A2               	call	PL60	;call to abstracted procedure
 41590  0044AA  E108               	bnz	u67325
 41591  0044AC  0E00               	movlw	0
 41592  0044AE  5DF6               	subwf	(FirstPCW@m+2)& (0+255),w,b
 41593  0044B0  E105               	bnz	u67325
 41594  0044B2  0E01               	movlw	1
 41595  0044B4  5DF5               	subwf	(FirstPCW@m+1)& (0+255),w,b
 41596  0044B6  E102               	bnz	u67325
 41597  0044B8  0E00               	movlw	0
 41598  0044BA  5DF4               	subwf	FirstPCW@m& (0+255),w,b
 41599  0044BC                     u67325:
 41600  0044BC  E303               	bnc	l2951
 41601                           
 41602                           ; BSR set to: 2
 41603  0044BE  C2F3  F2F2         	movff	FirstPCW@maxmod,FirstPCW@p2
 41604  0044C2  D002               	goto	l35570
 41605  0044C4                     l2951:
 41606                           
 41607                           ; BSR set to: 2
 41608                           ;rgl.c: 676: else p2=m;
 41609  0044C4  C2F4  F2F2         	movff	FirstPCW@m,FirstPCW@p2
 41610  0044C8                     l35570:
 41611                           
 41612                           ; BSR set to: 2
 41613                           ;rgl.c: 679: if(p>p2) p=p2;
 41614  0044C8  51F1               	movf	FirstPCW@p& (0+255),w,b
 41615  0044CA  61F2               	cpfslt	FirstPCW@p2& (0+255),b
 41616  0044CC  D002               	goto	l2953
 41617                           
 41618                           ; BSR set to: 2
 41619  0044CE  C2F2  F2F1         	movff	FirstPCW@p2,FirstPCW@p
 41620  0044D2                     l2953:
 41621                           
 41622                           ; BSR set to: 2
 41623                           ;rgl.c: 682: if(DtCW.DCW>=0&&DtCW.DCW<=40)
 41624  0044D2  0100               	movlb	0	; () banked
 41625  0044D4  BFD6               	btfsc	(_DtCW+7)& (0+255),7,b
 41626  0044D6  D029               	goto	l35588
 41627                           
 41628                           ; BSR set to: 0
 41629  0044D8  51D6               	movf	(_DtCW+7)& (0+255),w,b
 41630  0044DA  0A80               	xorlw	128
 41631  0044DC  0F57               	addlw	-169
 41632  0044DE  E225               	bc	l35588
 41633                           
 41634                           ; BSR set to: 0
 41635                           ;rgl.c: 683: {
 41636                           ;rgl.c: 684: m=DtCW.DCW*10;
 41637  0044E0  51D6               	movf	(_DtCW+7)& (0+255),w,b
 41638  0044E2  6E1E               	movwf	?___wmul,c
 41639  0044E4  6A1F               	clrf	?___wmul+1,c
 41640  0044E6  BE1E               	btfsc	?___wmul,7,c
 41641  0044E8  061F               	decf	?___wmul+1,f,c
 41642  0044EA  6A21               	clrf	?___wmul+3,c
 41643  0044EC  0E0A               	movlw	10
 41644  0044EE  6E20               	movwf	?___wmul+2,c
 41645  0044F0  EC9C  F056         	call	___wmul	;wreg free
 41646                           
 41647                           ;rgl.c: 685: m=m/(40-0);
 41648  0044F4  D869               	call	PL44	;call to abstracted procedure
 41649  0044F6  D88C               	call	PL204	;call to abstracted procedure
 41650  0044F8  ECE3  F042         	call	___aldiv	;wreg free
 41651                           
 41652                           ;rgl.c: 686: m=m*(maxmod-PWM.MDMOD);
 41653  0044FC  D827               	call	PL12	;call to abstracted procedure
 41654  0044FE  ECD2  F050         	call	___lmul	;wreg free
 41655                           
 41656                           ;rgl.c: 687: if(m<0) m=0;
 41657                           
 41658                           ; BSR set to: 2
 41659                           
 41660                           ; BSR set to: 2
 41661                           ;rgl.c: 688: m=m/10+PWM.MDMOD;
 41662  004502  D845               	call	PL20	;call to abstracted procedure
 41663  004504  ECE3  F042         	call	___aldiv	;wreg free
 41664                           
 41665                           ; BSR set to: 2
 41666                           ;rgl.c: 689: if(m>0xff) p2=maxmod;
 41667  004508  D872               	call	PL60	;call to abstracted procedure
 41668  00450A  E108               	bnz	u67375
 41669  00450C  0E00               	movlw	0
 41670  00450E  5DF6               	subwf	(FirstPCW@m+2)& (0+255),w,b
 41671  004510  E105               	bnz	u67375
 41672  004512  0E01               	movlw	1
 41673  004514  5DF5               	subwf	(FirstPCW@m+1)& (0+255),w,b
 41674  004516  E102               	bnz	u67375
 41675  004518  0E00               	movlw	0
 41676  00451A  5DF4               	subwf	FirstPCW@m& (0+255),w,b
 41677  00451C                     u67375:
 41678  00451C  E303               	bnc	l2956
 41679                           
 41680                           ; BSR set to: 2
 41681  00451E  C2F3  F2F2         	movff	FirstPCW@maxmod,FirstPCW@p2
 41682  004522  D00C               	goto	l35594
 41683  004524                     l2956:
 41684                           
 41685                           ; BSR set to: 2
 41686                           ;rgl.c: 690: else p2=m;
 41687  004524  C2F4  F2F2         	movff	FirstPCW@m,FirstPCW@p2
 41688  004528  D009               	goto	l35594
 41689  00452A                     l35588:
 41690                           
 41691                           ; BSR set to: 0
 41692                           ;rgl.c: 692: else
 41693                           ;rgl.c: 693: {
 41694                           ;rgl.c: 694: if(DtCW.DCW>40) p2=maxmod;
 41695  00452A  51D6               	movf	(_DtCW+7)& (0+255),w,b
 41696  00452C  0A80               	xorlw	128
 41697  00452E  0F57               	addlw	-169
 41698  004530  B0D8               	btfsc	status,0,c
 41699                           
 41700                           ; BSR set to: 0
 41701  004532  C2F3  F2F2         	movff	FirstPCW@maxmod,FirstPCW@p2
 41702                           
 41703                           ; BSR set to: 0
 41704                           ;rgl.c: 695: if(DtCW.DCW<0) p2=PWM.MDMOD;
 41705  004536  BFD6               	btfsc	(_DtCW+7)& (0+255),7,b
 41706                           
 41707                           ; BSR set to: 0
 41708  004538  C09C  F2F2         	movff	_PWM+9,FirstPCW@p2	;volatile
 41709  00453C                     l35594:
 41710                           
 41711                           ;rgl.c: 696: }
 41712                           ;rgl.c: 699: if(p>p2) p=p2;
 41713  00453C  0102               	movlb	2	; () banked
 41714  00453E  51F1               	movf	FirstPCW@p& (0+255),w,b
 41715  004540  61F2               	cpfslt	FirstPCW@p2& (0+255),b
 41716  004542  D002               	goto	l35598
 41717                           
 41718                           ; BSR set to: 2
 41719  004544  C2F2  F2F1         	movff	FirstPCW@p2,FirstPCW@p
 41720  004548                     l35598:
 41721                           
 41722                           ; BSR set to: 2
 41723                           ;rgl.c: 701: return p;
 41724  004548  51F1               	movf	FirstPCW@p& (0+255),w,b
 41725                           
 41726                           ; BSR set to: 2
 41727  00454A  0012               	return	
 41728  00454C                     __end_of_FirstPCW:
 41729                           	opt stack 0
 41730  00454C                     PL12:
 41731                           	opt stack 23
 41732  00454C  C01E  F2F4         	movff	?___aldiv,FirstPCW@m
 41733  004550  C01F  F2F5         	movff	?___aldiv+1,FirstPCW@m+1
 41734  004554  C020  F2F6         	movff	?___aldiv+2,FirstPCW@m+2
 41735  004558  C021  F2F7         	movff	?___aldiv+3,FirstPCW@m+3
 41736  00455C  C2F4  F01E         	movff	FirstPCW@m,?___lmul
 41737  004560  C2F5  F01F         	movff	FirstPCW@m+1,?___lmul+1
 41738  004564  C2F6  F020         	movff	FirstPCW@m+2,?___lmul+2
 41739  004568  C2F7  F021         	movff	FirstPCW@m+3,?___lmul+3
 41740  00456C  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 41741  00456E  C2F3  F0FB         	movff	FirstPCW@maxmod,??_FirstPCW
 41742  004572  0100               	movlb	0	; () banked
 41743  004574  6BFC               	clrf	(??_FirstPCW+1)& (0+255),b
 41744  004576  5FFB               	subwf	??_FirstPCW& (0+255),f,b
 41745  004578  0E00               	movlw	0
 41746  00457A  5BFC               	subwfb	(??_FirstPCW+1)& (0+255),f,b
 41747  00457C  C0FB  F022         	movff	??_FirstPCW,?___lmul+4
 41748  004580  C0FC  F023         	movff	??_FirstPCW+1,?___lmul+5
 41749  004584  BE23               	btfsc	?___lmul+5,7,c
 41750  004586  0EFF               	movlw	-1
 41751  004588  6E24               	movwf	?___lmul+6,c
 41752  00458A  6E25               	movwf	?___lmul+7,c
 41753  00458C  0012               	return	
 41754  00458E                     __end_ofPL12:
 41755                           	opt stack 0
 41756  00458E                     PL20:
 41757                           	opt stack 23
 41758  00458E  C01E  F2F4         	movff	?___lmul,FirstPCW@m
 41759  004592  C01F  F2F5         	movff	?___lmul+1,FirstPCW@m+1
 41760  004596  C020  F2F6         	movff	?___lmul+2,FirstPCW@m+2
 41761  00459A  C021  F2F7         	movff	?___lmul+3,FirstPCW@m+3
 41762  00459E  0102               	movlb	2	; () banked
 41763  0045A0  AFF7               	btfss	(FirstPCW@m+3)& (0+255),7,b
 41764  0045A2  D004               	goto	l35544
 41765  0045A4  6BF4               	clrf	FirstPCW@m& (0+255),b
 41766  0045A6  6BF5               	clrf	(FirstPCW@m+1)& (0+255),b
 41767  0045A8  6BF6               	clrf	(FirstPCW@m+2)& (0+255),b
 41768  0045AA  6BF7               	clrf	(FirstPCW@m+3)& (0+255),b
 41769  0045AC                     l35544:
 41770  0045AC  C2F4  F01E         	movff	FirstPCW@m,?___aldiv
 41771  0045B0  C2F5  F01F         	movff	FirstPCW@m+1,?___aldiv+1
 41772  0045B4  C2F6  F020         	movff	FirstPCW@m+2,?___aldiv+2
 41773  0045B8  C2F7  F021         	movff	FirstPCW@m+3,?___aldiv+3
 41774  0045BC  0E0A               	movlw	10
 41775  0045BE  6E22               	movwf	?___aldiv+4,c
 41776  0045C0  6A23               	clrf	?___aldiv+5,c
 41777  0045C2  6A24               	clrf	?___aldiv+6,c
 41778  0045C4  6A25               	clrf	?___aldiv+7,c
 41779  0045C6  0C00               	retlw	0
 41780  0045C8                     __end_ofPL20:
 41781                           	opt stack 0
 41782  0045C8                     PL44:
 41783                           	opt stack 23
 41784  0045C8  0102               	movlb	2	; () banked
 41785  0045CA  C01E  F2F4         	movff	?___wmul,FirstPCW@m
 41786  0045CE  C01F  F2F5         	movff	?___wmul+1,FirstPCW@m+1
 41787  0045D2  0E00               	movlw	0
 41788  0045D4  BFF5               	btfsc	(FirstPCW@m+1)& (0+255),7,b
 41789  0045D6  0EFF               	movlw	-1
 41790  0045D8  6FF6               	movwf	(FirstPCW@m+2)& (0+255),b
 41791  0045DA  6FF7               	movwf	(FirstPCW@m+3)& (0+255),b
 41792  0045DC  C2F4  F01E         	movff	FirstPCW@m,?___aldiv
 41793  0045E0  C2F5  F01F         	movff	FirstPCW@m+1,?___aldiv+1
 41794  0045E4  C2F6  F020         	movff	FirstPCW@m+2,?___aldiv+2
 41795  0045E8  C2F7  F021         	movff	FirstPCW@m+3,?___aldiv+3
 41796  0045EC  0012               	return	
 41797  0045EE                     __end_ofPL44:
 41798                           	opt stack 0
 41799  0045EE                     PL60:
 41800                           	opt stack 23
 41801  0045EE  519C               	movf	(_PWM+9)& (0+255),w,b	;volatile
 41802  0045F0  241E               	addwf	?___aldiv,w,c
 41803  0045F2  0102               	movlb	2	; () banked
 41804  0045F4  6FF4               	movwf	FirstPCW@m& (0+255),b
 41805  0045F6  0E00               	movlw	0
 41806  0045F8  201F               	addwfc	?___aldiv+1,w,c
 41807  0045FA  6FF5               	movwf	(FirstPCW@m+1)& (0+255),b
 41808  0045FC  0E00               	movlw	0
 41809  0045FE  2020               	addwfc	?___aldiv+2,w,c
 41810  004600  6FF6               	movwf	(FirstPCW@m+2)& (0+255),b
 41811  004602  0E00               	movlw	0
 41812  004604  2021               	addwfc	?___aldiv+3,w,c
 41813  004606  6FF7               	movwf	(FirstPCW@m+3)& (0+255),b
 41814  004608  51F7               	movf	(FirstPCW@m+3)& (0+255),w,b
 41815  00460A  0A80               	xorlw	128
 41816  00460C  0F80               	addlw	128
 41817  00460E  0012               	return	
 41818  004610                     __end_ofPL60:
 41819                           	opt stack 0
 41820  004610                     PL204:
 41821                           	opt stack 23
 41822  004610  0E28               	movlw	40
 41823  004612  6E22               	movwf	?___aldiv+4,c
 41824  004614  6A23               	clrf	?___aldiv+5,c
 41825  004616  6A24               	clrf	?___aldiv+6,c
 41826  004618  6A25               	clrf	?___aldiv+7,c
 41827  00461A  0C00               	retlw	0
 41828  00461C                     __end_ofPL204:
 41829                           	opt stack 0
 41830                           tblptru	equ	0xFF8
 41831                           tblptrh	equ	0xFF7
 41832                           tblptrl	equ	0xFF6
 41833                           tablat	equ	0xFF5
 41834                           prodh	equ	0xFF4
 41835                           prodl	equ	0xFF3
 41836                           intcon	equ	0xFF2
 41837                           postinc0	equ	0xFEE
 41838                           wreg	equ	0xFE8
 41839                           indf1	equ	0xFE7
 41840                           postinc1	equ	0xFE6
 41841                           postdec1	equ	0xFE5
 41842                           fsr1h	equ	0xFE2
 41843                           fsr1l	equ	0xFE1
 41844                           indf2	equ	0xFDF
 41845                           postinc2	equ	0xFDE
 41846                           postdec2	equ	0xFDD
 41847                           fsr2h	equ	0xFDA
 41848                           fsr2l	equ	0xFD9
 41849                           status	equ	0xFD8
 41850                           
 41851 ;; *************** function _ClrMod *****************
 41852 ;; Defined at:
 41853 ;;		line 706 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 41854 ;; Parameters:    Size  Location     Type
 41855 ;;		None
 41856 ;; Auto vars:     Size  Location     Type
 41857 ;;		None
 41858 ;; Return value:  Size  Location     Type
 41859 ;;		None               void
 41860 ;; Registers used:
 41861 ;;		None
 41862 ;; Tracked objects:
 41863 ;;		On entry : F/0
 41864 ;;		On exit  : F/0
 41865 ;;		Unchanged: FFFFFFF0/0
 41866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41871 ;;Total ram usage:        0 bytes
 41872 ;; Hardware stack levels used:    1
 41873 ;; Hardware stack levels required when called:    4
 41874 ;; This function calls:
 41875 ;;		Nothing
 41876 ;; This function is called by:
 41877 ;;		_ModToCW
 41878 ;;		_ModToCO
 41879 ;; This function uses a non-reentrant model
 41880 ;;
 41881                           
 41882                           	psect	text187
 41883  00B390                     __ptext187:
 41884                           	opt stack 0
 41885  00B390                     _ClrMod:
 41886                           	opt stack 24
 41887                           
 41888                           ; BSR set to: 0
 41889                           ;rgl.c: 707: rgl.fz=0;
 41890                           
 41891                           ; BSR set to: 2
 41892  00B390  9427               	bcf	_rgl,2,c
 41893                           
 41894                           ;rgl.c: 708: rgl.med_up=0;
 41895  00B392  9627               	bcf	_rgl,3,c
 41896                           
 41897                           ;rgl.c: 709: rgl.fast_up=0;
 41898  00B394  9827               	bcf	_rgl,4,c
 41899                           
 41900                           ;rgl.c: 710: rgl.xmod=PWM.BufPWM;
 41901  00B396  C094  F02F         	movff	_PWM+1,_rgl+8	;volatile
 41902                           
 41903                           ;rgl.c: 711: rgl.srp=0;
 41904  00B39A  6A2E               	clrf	_rgl+7,c
 41905                           
 41906                           ;rgl.c: 712: rgl.ytmp=0;
 41907  00B39C  6A2D               	clrf	_rgl+6,c
 41908                           
 41909                           ;rgl.c: 713: rgl.nmod=0;
 41910  00B39E  9A27               	bcf	_rgl,5,c
 41911                           
 41912                           ;rgl.c: 714: rgl.del1s=0;
 41913  00B3A0  9C27               	bcf	_rgl,6,c
 41914                           
 41915                           ;rgl.c: 715: rgl.inv_mod=0;
 41916  00B3A2  9028               	bcf	_rgl+1,0,c
 41917                           
 41918                           ; BSR set to: 0
 41919  00B3A4  0012               	return	
 41920  00B3A6                     __end_of_ClrMod:
 41921                           	opt stack 0
 41922                           tblptru	equ	0xFF8
 41923                           tblptrh	equ	0xFF7
 41924                           tblptrl	equ	0xFF6
 41925                           tablat	equ	0xFF5
 41926                           prodh	equ	0xFF4
 41927                           prodl	equ	0xFF3
 41928                           intcon	equ	0xFF2
 41929                           postinc0	equ	0xFEE
 41930                           wreg	equ	0xFE8
 41931                           indf1	equ	0xFE7
 41932                           postinc1	equ	0xFE6
 41933                           postdec1	equ	0xFE5
 41934                           fsr1h	equ	0xFE2
 41935                           fsr1l	equ	0xFE1
 41936                           indf2	equ	0xFDF
 41937                           postinc2	equ	0xFDE
 41938                           postdec2	equ	0xFDD
 41939                           fsr2h	equ	0xFDA
 41940                           fsr2l	equ	0xFD9
 41941                           status	equ	0xFD8
 41942                           
 41943 ;; *************** function _ClrMod4 *****************
 41944 ;; Defined at:
 41945 ;;		line 1407 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 41946 ;; Parameters:    Size  Location     Type
 41947 ;;		None
 41948 ;; Auto vars:     Size  Location     Type
 41949 ;;		None
 41950 ;; Return value:  Size  Location     Type
 41951 ;;		None               void
 41952 ;; Registers used:
 41953 ;;		None
 41954 ;; Tracked objects:
 41955 ;;		On entry : F/0
 41956 ;;		On exit  : F/0
 41957 ;;		Unchanged: FFFFFFF0/0
 41958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41963 ;;Total ram usage:        0 bytes
 41964 ;; Hardware stack levels used:    1
 41965 ;; Hardware stack levels required when called:    4
 41966 ;; This function calls:
 41967 ;;		Nothing
 41968 ;; This function is called by:
 41969 ;;		_ModToCW4
 41970 ;;		_ModToCO4
 41971 ;; This function uses a non-reentrant model
 41972 ;;
 41973                           
 41974                           	psect	text188
 41975  00B3A6                     __ptext188:
 41976                           	opt stack 0
 41977  00B3A6                     _ClrMod4:
 41978                           	opt stack 24
 41979                           
 41980                           ; BSR set to: 0
 41981                           ;rgl.c: 1408: rgl.fz=0;
 41982                           
 41983                           ; BSR set to: 0
 41984  00B3A6  9427               	bcf	_rgl,2,c
 41985                           
 41986                           ;rgl.c: 1409: rgl.med_up=0;
 41987  00B3A8  9627               	bcf	_rgl,3,c
 41988                           
 41989                           ;rgl.c: 1410: rgl.fast_up=0;
 41990  00B3AA  9827               	bcf	_rgl,4,c
 41991                           
 41992                           ;rgl.c: 1411: rgl.xmod=PWM.BufPWM;
 41993  00B3AC  C094  F02F         	movff	_PWM+1,_rgl+8	;volatile
 41994                           
 41995                           ;rgl.c: 1412: rgl.srp=0;
 41996  00B3B0  6A2E               	clrf	_rgl+7,c
 41997                           
 41998                           ;rgl.c: 1413: rgl.ytmp=0;
 41999  00B3B2  6A2D               	clrf	_rgl+6,c
 42000                           
 42001                           ;rgl.c: 1414: rgl.nmod=0;
 42002  00B3B4  9A27               	bcf	_rgl,5,c
 42003                           
 42004                           ;rgl.c: 1415: rgl.del1s=0;
 42005  00B3B6  9C27               	bcf	_rgl,6,c
 42006                           
 42007                           ;rgl.c: 1416: rgl.inv_mod=0;
 42008  00B3B8  9028               	bcf	_rgl+1,0,c
 42009                           
 42010                           ; BSR set to: 0
 42011  00B3BA  0012               	return	
 42012  00B3BC                     __end_of_ClrMod4:
 42013                           	opt stack 0
 42014                           tblptru	equ	0xFF8
 42015                           tblptrh	equ	0xFF7
 42016                           tblptrl	equ	0xFF6
 42017                           tablat	equ	0xFF5
 42018                           prodh	equ	0xFF4
 42019                           prodl	equ	0xFF3
 42020                           intcon	equ	0xFF2
 42021                           postinc0	equ	0xFEE
 42022                           wreg	equ	0xFE8
 42023                           indf1	equ	0xFE7
 42024                           postinc1	equ	0xFE6
 42025                           postdec1	equ	0xFE5
 42026                           fsr1h	equ	0xFE2
 42027                           fsr1l	equ	0xFE1
 42028                           indf2	equ	0xFDF
 42029                           postinc2	equ	0xFDE
 42030                           postdec2	equ	0xFDD
 42031                           fsr2h	equ	0xFDA
 42032                           fsr2l	equ	0xFD9
 42033                           status	equ	0xFD8
 42034                           
 42035 ;; *************** function _FirstPCW2 *****************
 42036 ;; Defined at:
 42037 ;;		line 1907 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 42038 ;; Parameters:    Size  Location     Type
 42039 ;;		None
 42040 ;; Auto vars:     Size  Location     Type
 42041 ;;		None
 42042 ;; Return value:  Size  Location     Type
 42043 ;;		None               void
 42044 ;; Registers used:
 42045 ;;		wreg, status,2, status,0
 42046 ;; Tracked objects:
 42047 ;;		On entry : E/0
 42048 ;;		On exit  : F/0
 42049 ;;		Unchanged: FFFFFFF0/0
 42050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42055 ;;Total ram usage:        0 bytes
 42056 ;; Hardware stack levels used:    1
 42057 ;; Hardware stack levels required when called:    4
 42058 ;; This function calls:
 42059 ;;		Nothing
 42060 ;; This function is called by:
 42061 ;;		_StartMCW2
 42062 ;;		_ModZgCW2
 42063 ;; This function uses a non-reentrant model
 42064 ;;
 42065                           
 42066                           	psect	text189
 42067  00AB32                     __ptext189:
 42068                           	opt stack 0
 42069  00AB32                     _FirstPCW2:
 42070                           	opt stack 24
 42071                           
 42072                           ;rgl.c: 1908: if(PWM.MMAXCW>PWM.MGMOD)
 42073                           
 42074                           ; BSR set to: 0
 42075  00AB32  0100               	movlb	0	; () banked
 42076  00AB34  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 42077  00AB36  619D               	cpfslt	(_PWM+10)& (0+255),b	;volatile
 42078  00AB38  D00A               	goto	l35612
 42079                           
 42080                           ; BSR set to: 0
 42081                           ;rgl.c: 1909: {
 42082                           ;rgl.c: 1910: if(DtCW.DCW>0) rgl.xmod=PWM.MGMOD;
 42083  00AB3A  51D6               	movf	(_DtCW+7)& (0+255),w,b
 42084  00AB3C  0A80               	xorlw	128
 42085  00AB3E  0F7F               	addlw	-129
 42086  00AB40  E303               	bnc	l3415
 42087                           
 42088                           ; BSR set to: 0
 42089  00AB42  C09D  F02F         	movff	_PWM+10,_rgl+8	;volatile
 42090  00AB46  0012               	return	
 42091  00AB48                     l3415:
 42092                           
 42093                           ; BSR set to: 0
 42094                           ;rgl.c: 1911: else rgl.xmod=PWM.FIRSTPB;
 42095  00AB48  C0AB  F02F         	movff	_PWM+24,_rgl+8	;volatile
 42096  00AB4C  0012               	return	
 42097  00AB4E                     l35612:
 42098                           
 42099                           ; BSR set to: 0
 42100                           ;rgl.c: 1913: else
 42101                           ;rgl.c: 1914: {
 42102                           ;rgl.c: 1915: if(DtCW.DCW>0) rgl.xmod=PWM.MMAXCW;
 42103  00AB4E  51D6               	movf	(_DtCW+7)& (0+255),w,b
 42104  00AB50  0A80               	xorlw	128
 42105  00AB52  0F7F               	addlw	-129
 42106  00AB54  E303               	bnc	l35616
 42107  00AB56                     l35614:
 42108                           
 42109                           ; BSR set to: 0
 42110  00AB56  C0B1  F02F         	movff	_PWM+30,_rgl+8	;volatile
 42111  00AB5A  0012               	return	
 42112  00AB5C                     l35616:
 42113                           
 42114                           ; BSR set to: 0
 42115                           ;rgl.c: 1916: else
 42116                           ;rgl.c: 1917: {
 42117                           ;rgl.c: 1918: if(PWM.MMAXCW>PWM.FIRSTPB) rgl.xmod=PWM.FIRSTPB;
 42118  00AB5C  51B1               	movf	(_PWM+30)& (0+255),w,b	;volatile
 42119  00AB5E  61AB               	cpfslt	(_PWM+24)& (0+255),b	;volatile
 42120  00AB60  D7FA               	goto	l35614
 42121  00AB62  D7F2               	goto	l3415
 42122  00AB64                     __end_of_FirstPCW2:
 42123                           	opt stack 0
 42124                           tblptru	equ	0xFF8
 42125                           tblptrh	equ	0xFF7
 42126                           tblptrl	equ	0xFF6
 42127                           tablat	equ	0xFF5
 42128                           prodh	equ	0xFF4
 42129                           prodl	equ	0xFF3
 42130                           intcon	equ	0xFF2
 42131                           postinc0	equ	0xFEE
 42132                           wreg	equ	0xFE8
 42133                           indf1	equ	0xFE7
 42134                           postinc1	equ	0xFE6
 42135                           postdec1	equ	0xFE5
 42136                           fsr1h	equ	0xFE2
 42137                           fsr1l	equ	0xFE1
 42138                           indf2	equ	0xFDF
 42139                           postinc2	equ	0xFDE
 42140                           postdec2	equ	0xFDD
 42141                           fsr2h	equ	0xFDA
 42142                           fsr2l	equ	0xFD9
 42143                           status	equ	0xFD8
 42144                           
 42145 ;; *************** function _ClrMod2 *****************
 42146 ;; Defined at:
 42147 ;;		line 1961 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 42148 ;; Parameters:    Size  Location     Type
 42149 ;;		None
 42150 ;; Auto vars:     Size  Location     Type
 42151 ;;		None
 42152 ;; Return value:  Size  Location     Type
 42153 ;;		None               void
 42154 ;; Registers used:
 42155 ;;		None
 42156 ;; Tracked objects:
 42157 ;;		On entry : F/0
 42158 ;;		On exit  : F/0
 42159 ;;		Unchanged: FFFFFFF0/0
 42160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42165 ;;Total ram usage:        0 bytes
 42166 ;; Hardware stack levels used:    1
 42167 ;; Hardware stack levels required when called:    4
 42168 ;; This function calls:
 42169 ;;		Nothing
 42170 ;; This function is called by:
 42171 ;;		_ModToCW2
 42172 ;;		_ModToCO2
 42173 ;; This function uses a non-reentrant model
 42174 ;;
 42175                           
 42176                           	psect	text190
 42177  00B54A                     __ptext190:
 42178                           	opt stack 0
 42179  00B54A                     _ClrMod2:
 42180                           	opt stack 24
 42181                           
 42182                           ; BSR set to: 0
 42183                           ;rgl.c: 1962: rgl.fz=0;
 42184                           
 42185                           ; BSR set to: 0
 42186  00B54A  9427               	bcf	_rgl,2,c
 42187                           
 42188                           ;rgl.c: 1963: rgl.xmod=PWM.BufPWM;
 42189  00B54C  C094  F02F         	movff	_PWM+1,_rgl+8	;volatile
 42190                           
 42191                           ;rgl.c: 1964: rgl.srp=0;
 42192  00B550  6A2E               	clrf	_rgl+7,c
 42193                           
 42194                           ;rgl.c: 1965: rgl.ytmp=0;
 42195  00B552  6A2D               	clrf	_rgl+6,c
 42196                           
 42197                           ;rgl.c: 1966: rgl.del1s=0;
 42198  00B554  9C27               	bcf	_rgl,6,c
 42199                           
 42200                           ; BSR set to: 0
 42201  00B556  0012               	return	
 42202  00B558                     __end_of_ClrMod2:
 42203                           	opt stack 0
 42204                           tblptru	equ	0xFF8
 42205                           tblptrh	equ	0xFF7
 42206                           tblptrl	equ	0xFF6
 42207                           tablat	equ	0xFF5
 42208                           prodh	equ	0xFF4
 42209                           prodl	equ	0xFF3
 42210                           intcon	equ	0xFF2
 42211                           postinc0	equ	0xFEE
 42212                           wreg	equ	0xFE8
 42213                           indf1	equ	0xFE7
 42214                           postinc1	equ	0xFE6
 42215                           postdec1	equ	0xFE5
 42216                           fsr1h	equ	0xFE2
 42217                           fsr1l	equ	0xFE1
 42218                           indf2	equ	0xFDF
 42219                           postinc2	equ	0xFDE
 42220                           postdec2	equ	0xFDD
 42221                           fsr2h	equ	0xFDA
 42222                           fsr2l	equ	0xFD9
 42223                           status	equ	0xFD8
 42224                           
 42225 ;; *************** function _TFrosnie *****************
 42226 ;; Defined at:
 42227 ;;		line 2511 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 42228 ;; Parameters:    Size  Location     Type
 42229 ;;  t               1    wreg     const unsigned char 
 42230 ;; Auto vars:     Size  Location     Type
 42231 ;;  t               1   29[COMRAM] const unsigned char 
 42232 ;; Return value:  Size  Location     Type
 42233 ;;		None               void
 42234 ;; Registers used:
 42235 ;;		wreg, status,2, status,0
 42236 ;; Tracked objects:
 42237 ;;		On entry : E/1
 42238 ;;		On exit  : E/1
 42239 ;;		Unchanged: FFFFFFF1/0
 42240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42245 ;;Total ram usage:        1 bytes
 42246 ;; Hardware stack levels used:    1
 42247 ;; Hardware stack levels required when called:    4
 42248 ;; This function calls:
 42249 ;;		Nothing
 42250 ;; This function is called by:
 42251 ;;		_IncConstCW2
 42252 ;;		_ModPruCW2
 42253 ;;		_IncMaxCW2
 42254 ;; This function uses a non-reentrant model
 42255 ;;
 42256                           
 42257                           	psect	text191
 42258  00B2D6                     __ptext191:
 42259                           	opt stack 0
 42260  00B2D6                     _TFrosnie:
 42261                           	opt stack 24
 42262                           
 42263                           ; BSR set to: 0
 42264                           ;TFrosnie@t stored from wreg
 42265  00B2D6  CFE8 F01E          	movff	wreg,TFrosnie@t
 42266                           
 42267                           ;rgl.c: 2512: return (rgl.x_df>t);
 42268  00B2DA  501E               	movf	TFrosnie@t,w,c
 42269  00B2DC  BE2C               	btfsc	_rgl+5,7,c
 42270  00B2DE  D003               	goto	u67450
 42271  00B2E0  0AFF               	xorlw	255
 42272  00B2E2  242C               	addwf	_rgl+5,w,c
 42273  00B2E4  E202               	bc	l35626
 42274  00B2E6                     u67450:
 42275  00B2E6  90D8               	bcf	status,0,c
 42276  00B2E8  0012               	return	
 42277  00B2EA                     l35626:
 42278  00B2EA  80D8               	bsf	status,0,c
 42279  00B2EC  0012               	return	
 42280  00B2EE                     __end_of_TFrosnie:
 42281                           	opt stack 0
 42282                           tblptru	equ	0xFF8
 42283                           tblptrh	equ	0xFF7
 42284                           tblptrl	equ	0xFF6
 42285                           tablat	equ	0xFF5
 42286                           prodh	equ	0xFF4
 42287                           prodl	equ	0xFF3
 42288                           intcon	equ	0xFF2
 42289                           postinc0	equ	0xFEE
 42290                           wreg	equ	0xFE8
 42291                           indf1	equ	0xFE7
 42292                           postinc1	equ	0xFE6
 42293                           postdec1	equ	0xFE5
 42294                           fsr1h	equ	0xFE2
 42295                           fsr1l	equ	0xFE1
 42296                           indf2	equ	0xFDF
 42297                           postinc2	equ	0xFDE
 42298                           postdec2	equ	0xFDD
 42299                           fsr2h	equ	0xFDA
 42300                           fsr2l	equ	0xFD9
 42301                           status	equ	0xFD8
 42302                           
 42303 ;; *************** function _TFmaleje *****************
 42304 ;; Defined at:
 42305 ;;		line 2520 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 42306 ;; Parameters:    Size  Location     Type
 42307 ;;  t               1    wreg     const unsigned char 
 42308 ;; Auto vars:     Size  Location     Type
 42309 ;;  t               1   32[COMRAM] const unsigned char 
 42310 ;; Return value:  Size  Location     Type
 42311 ;;		None               void
 42312 ;; Registers used:
 42313 ;;		wreg, status,2, status,0, prodl, prodh
 42314 ;; Tracked objects:
 42315 ;;		On entry : E/0
 42316 ;;		On exit  : E/0
 42317 ;;		Unchanged: FFFFFFF1/0
 42318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42321 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42322 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42323 ;;Total ram usage:        4 bytes
 42324 ;; Hardware stack levels used:    1
 42325 ;; Hardware stack levels required when called:    4
 42326 ;; This function calls:
 42327 ;;		Nothing
 42328 ;; This function is called by:
 42329 ;;		_ModPruCW2
 42330 ;;		_ModPrzCW2
 42331 ;; This function uses a non-reentrant model
 42332 ;;
 42333                           
 42334                           	psect	text192
 42335  00AA34                     __ptext192:
 42336                           	opt stack 0
 42337  00AA34                     _TFmaleje:
 42338                           	opt stack 24
 42339                           
 42340                           ;TFmaleje@t stored from wreg
 42341  00AA34  CFE8 F021          	movff	wreg,TFmaleje@t
 42342                           
 42343                           ;rgl.c: 2521: return (rgl.x_df<(-1*t));
 42344  00AA38  5021               	movf	TFmaleje@t,w,c
 42345  00AA3A  0D01               	mullw	1
 42346  00AA3C  1EF3               	comf	prodl,f,c
 42347  00AA3E  1EF4               	comf	prodh,f,c
 42348  00AA40  4AF3               	infsnz	prodl,f,c
 42349  00AA42  2AF4               	incf	prodh,f,c
 42350  00AA44  C02C  F01E         	movff	_rgl+5,??_TFmaleje
 42351  00AA48  6A1F               	clrf	(??_TFmaleje+1)& (0+255),c
 42352  00AA4A  BE1E               	btfsc	??_TFmaleje& (0+255),7,c
 42353  00AA4C  061F               	decf	(??_TFmaleje+1)& (0+255),f,c
 42354  00AA4E  501F               	movf	??_TFmaleje+1,w,c
 42355  00AA50  0A80               	xorlw	128
 42356  00AA52  6E20               	movwf	(??_TFmaleje+2)& (0+255),c
 42357  00AA54  50F3               	movf	prodl,w,c
 42358  00AA56  5C1E               	subwf	??_TFmaleje,w,c
 42359  00AA58  50F4               	movf	prodh,w,c
 42360  00AA5A  0A80               	xorlw	128
 42361  00AA5C  5820               	subwfb	(??_TFmaleje+2)& (0+255),w,c
 42362  00AA5E  E302               	bnc	l35634
 42363  00AA60  90D8               	bcf	status,0,c
 42364  00AA62  0012               	return	
 42365  00AA64                     l35634:
 42366  00AA64  80D8               	bsf	status,0,c
 42367  00AA66  0012               	return	
 42368  00AA68                     __end_of_TFmaleje:
 42369                           	opt stack 0
 42370                           tblptru	equ	0xFF8
 42371                           tblptrh	equ	0xFF7
 42372                           tblptrl	equ	0xFF6
 42373                           tablat	equ	0xFF5
 42374                           prodh	equ	0xFF4
 42375                           prodl	equ	0xFF3
 42376                           intcon	equ	0xFF2
 42377                           postinc0	equ	0xFEE
 42378                           wreg	equ	0xFE8
 42379                           indf1	equ	0xFE7
 42380                           postinc1	equ	0xFE6
 42381                           postdec1	equ	0xFE5
 42382                           fsr1h	equ	0xFE2
 42383                           fsr1l	equ	0xFE1
 42384                           indf2	equ	0xFDF
 42385                           postinc2	equ	0xFDE
 42386                           postdec2	equ	0xFDD
 42387                           fsr2h	equ	0xFDA
 42388                           fsr2l	equ	0xFD9
 42389                           status	equ	0xFD8
 42390                           
 42391 ;; *************** function _TFstoi *****************
 42392 ;; Defined at:
 42393 ;;		line 2527 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 42394 ;; Parameters:    Size  Location     Type
 42395 ;;		None
 42396 ;; Auto vars:     Size  Location     Type
 42397 ;;		None
 42398 ;; Return value:  Size  Location     Type
 42399 ;;		None               void
 42400 ;; Registers used:
 42401 ;;		wreg, status,2, status,0
 42402 ;; Tracked objects:
 42403 ;;		On entry : E/0
 42404 ;;		On exit  : E/0
 42405 ;;		Unchanged: FFFFFFF1/0
 42406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42411 ;;Total ram usage:        0 bytes
 42412 ;; Hardware stack levels used:    1
 42413 ;; Hardware stack levels required when called:    4
 42414 ;; This function calls:
 42415 ;;		Nothing
 42416 ;; This function is called by:
 42417 ;;		_ModPruCW2
 42418 ;; This function uses a non-reentrant model
 42419 ;;
 42420                           
 42421                           	psect	text193
 42422  00B5C6                     __ptext193:
 42423                           	opt stack 0
 42424  00B5C6                     _TFstoi:
 42425                           	opt stack 24
 42426                           
 42427                           ;rgl.c: 2528: return !rgl.x_df;
 42428  00B5C6  502C               	movf	_rgl+5,w,c
 42429  00B5C8  E002               	bz	l35642
 42430  00B5CA  90D8               	bcf	status,0,c
 42431  00B5CC  0012               	return	
 42432  00B5CE                     l35642:
 42433  00B5CE  80D8               	bsf	status,0,c
 42434  00B5D0  0012               	return	
 42435  00B5D2                     __end_of_TFstoi:
 42436                           	opt stack 0
 42437                           tblptru	equ	0xFF8
 42438                           tblptrh	equ	0xFF7
 42439                           tblptrl	equ	0xFF6
 42440                           tablat	equ	0xFF5
 42441                           prodh	equ	0xFF4
 42442                           prodl	equ	0xFF3
 42443                           intcon	equ	0xFF2
 42444                           postinc0	equ	0xFEE
 42445                           wreg	equ	0xFE8
 42446                           indf1	equ	0xFE7
 42447                           postinc1	equ	0xFE6
 42448                           postdec1	equ	0xFE5
 42449                           fsr1h	equ	0xFE2
 42450                           fsr1l	equ	0xFE1
 42451                           indf2	equ	0xFDF
 42452                           postinc2	equ	0xFDE
 42453                           postdec2	equ	0xFDD
 42454                           fsr2h	equ	0xFDA
 42455                           fsr2l	equ	0xFD9
 42456                           status	equ	0xFD8
 42457                           
 42458 ;; *************** function _SetTpKtParam *****************
 42459 ;; Defined at:
 42460 ;;		line 303 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
 42461 ;; Parameters:    Size  Location     Type
 42462 ;;		None
 42463 ;; Auto vars:     Size  Location     Type
 42464 ;;		None
 42465 ;; Return value:  Size  Location     Type
 42466 ;;		None               void
 42467 ;; Registers used:
 42468 ;;		wreg, status,2, status,0
 42469 ;; Tracked objects:
 42470 ;;		On entry : F/1
 42471 ;;		On exit  : F/1
 42472 ;;		Unchanged: FFFFFFF0/0
 42473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42478 ;;Total ram usage:        0 bytes
 42479 ;; Hardware stack levels used:    1
 42480 ;; Hardware stack levels required when called:    4
 42481 ;; This function calls:
 42482 ;;		Nothing
 42483 ;; This function is called by:
 42484 ;;		_RdEEParam
 42485 ;; This function uses a non-reentrant model
 42486 ;;
 42487                           
 42488                           	psect	text194
 42489  00B2EE                     __ptext194:
 42490                           	opt stack 0
 42491  00B2EE                     _SetTpKtParam:
 42492                           	opt stack 25
 42493                           
 42494                           ; BSR set to: 1
 42495                           ;konfig.c: 304: switch(DtKNF.tpkt)
 42496  00B2EE  D003               	goto	l35650
 42497  00B2F0                     l3946:
 42498                           
 42499                           ; BSR set to: 1
 42500                           ;konfig.c: 307: {
 42501                           ;konfig.c: 308: DtKNF.czpr=0;
 42502  00B2F0  6B50               	clrf	(_DtKNF+6)& (0+255),b
 42503                           
 42504                           ;konfig.c: 310: DtKNF.tpwm=0;
 42505  00B2F2  6B57               	clrf	(_DtKNF+13)& (0+255),b
 42506                           
 42507                           ;konfig.c: 311: break;
 42508  00B2F4  0012               	return	
 42509  00B2F6                     l35650:
 42510                           
 42511                           ; BSR set to: 1
 42512  00B2F6  5151               	movf	(_DtKNF+7)& (0+255),w,b
 42513                           
 42514                           ; Switch size 1, requested type "space"
 42515                           ; Number of cases is 4, Range of values is 0 to 3
 42516                           ; switch strategies available:
 42517                           ; Name         Instructions Cycles
 42518                           ; simple_byte           13     7 (average)
 42519                           ;	Chosen strategy is simple_byte
 42520  00B2F8  E0FB               	bz	l3946
 42521  00B2FA  0A01               	xorlw	1	; case 1
 42522  00B2FC  E0F9               	bz	l3946
 42523  00B2FE  0A03               	xorlw	3	; case 2
 42524  00B300  E0F7               	bz	l3946
 42525  00B302  0A01               	xorlw	1	; case 3
 42526  00B304  D7F5               	goto	l3946
 42527  00B306                     __end_of_SetTpKtParam:
 42528                           	opt stack 0
 42529                           tblptru	equ	0xFF8
 42530                           tblptrh	equ	0xFF7
 42531                           tblptrl	equ	0xFF6
 42532                           tablat	equ	0xFF5
 42533                           prodh	equ	0xFF4
 42534                           prodl	equ	0xFF3
 42535                           intcon	equ	0xFF2
 42536                           postinc0	equ	0xFEE
 42537                           wreg	equ	0xFE8
 42538                           indf1	equ	0xFE7
 42539                           postinc1	equ	0xFE6
 42540                           postdec1	equ	0xFE5
 42541                           fsr1h	equ	0xFE2
 42542                           fsr1l	equ	0xFE1
 42543                           indf2	equ	0xFDF
 42544                           postinc2	equ	0xFDE
 42545                           postdec2	equ	0xFDD
 42546                           fsr2h	equ	0xFDA
 42547                           fsr2l	equ	0xFD9
 42548                           status	equ	0xFD8
 42549                           
 42550 ;; *************** function _SetNST *****************
 42551 ;; Defined at:
 42552 ;;		line 213 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
 42553 ;; Parameters:    Size  Location     Type
 42554 ;;		None
 42555 ;; Auto vars:     Size  Location     Type
 42556 ;;		None
 42557 ;; Return value:  Size  Location     Type
 42558 ;;		None               void
 42559 ;; Registers used:
 42560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 42561 ;; Tracked objects:
 42562 ;;		On entry : F/0
 42563 ;;		On exit  : 0/0
 42564 ;;		Unchanged: 0/0
 42565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42570 ;;Total ram usage:        0 bytes
 42571 ;; Hardware stack levels used:    1
 42572 ;; Hardware stack levels required when called:    7
 42573 ;; This function calls:
 42574 ;;		_PomiarZW
 42575 ;;		_SetPrt
 42576 ;;		_Read_b_eep
 42577 ;;		_Busy_eep
 42578 ;;		_Write_b_eep
 42579 ;; This function is called by:
 42580 ;;		_RdEEParam
 42581 ;; This function uses a non-reentrant model
 42582 ;;
 42583                           
 42584                           	psect	text195
 42585  00955C                     __ptext195:
 42586                           	opt stack 0
 42587  00955C                     _SetNST:
 42588                           	opt stack 22
 42589                           
 42590                           ; BSR set to: 0
 42591                           ;konfig.c: 214: PomiarZW();
 42592                           
 42593                           ; BSR set to: 1
 42594  00955C  ECFB  F055         	call	_PomiarZW	;wreg free
 42595                           
 42596                           ; BSR set to: 1
 42597                           ;konfig.c: 215: if(!DtZW._on_ZW)
 42598  009560  B181               	btfsc	_DtZW& (0+255),0,b
 42599  009562  D00C               	goto	l35662
 42600                           
 42601                           ; BSR set to: 1
 42602                           ;konfig.c: 216: {
 42603                           ;konfig.c: 217: if(!DtKNF.opdg)
 42604  009564  6759               	tstfsz	(_DtKNF+15)& (0+255),b
 42605  009566  D005               	goto	l35660
 42606                           
 42607                           ; BSR set to: 1
 42608                           ;konfig.c: 218: {
 42609                           ;konfig.c: 219: DtCO.minPCO=40;
 42610  009568  0E28               	movlw	40
 42611  00956A  0100               	movlb	0	; () banked
 42612  00956C  6FE9               	movwf	(_DtCO+5)& (0+255),b
 42613                           
 42614                           ;konfig.c: 220: DtCO.maxPCO=85;
 42615  00956E  0E55               	movlw	85
 42616  009570  D00F               	goto	L87
 42617  009572                     l35660:
 42618                           
 42619                           ; BSR set to: 1
 42620                           ;konfig.c: 222: else
 42621                           ;konfig.c: 223: {
 42622                           ;konfig.c: 224: DtCO.minPCO=35;
 42623  009572  0E23               	movlw	35
 42624  009574  0100               	movlb	0	; () banked
 42625  009576  6FE9               	movwf	(_DtCO+5)& (0+255),b
 42626                           
 42627                           ;konfig.c: 225: DtCO.maxPCO=55;
 42628  009578  0E37               	movlw	55
 42629  00957A  D00A               	goto	L87
 42630  00957C                     l35662:
 42631                           
 42632                           ; BSR set to: 1
 42633                           ;konfig.c: 228: else
 42634                           ;konfig.c: 229: {
 42635                           ;konfig.c: 230: M._AKTYWNE_PGD=1;
 42636  00957C  0100               	movlb	0	; () banked
 42637  00957E  6B77               	clrf	(_M+23)& (0+255),b
 42638  009580  0E01               	movlw	1
 42639  009582  6F76               	movwf	(_M+22)& (0+255),b
 42640                           
 42641                           ; BSR set to: 0
 42642                           ;konfig.c: 231: SetPrt(20,1);
 42643  009584  6E1E               	movwf	?_SetPrt,c
 42644  009586  0E14               	movlw	20
 42645  009588  EC0E  F053         	call	_SetPrt
 42646                           
 42647                           ; BSR set to: 0
 42648                           ;konfig.c: 232: DtCO.minPCO=0;
 42649  00958C  6BE9               	clrf	(_DtCO+5)& (0+255),b
 42650                           
 42651                           ; BSR set to: 0
 42652                           ;konfig.c: 233: DtCO.maxPCO=99;
 42653  00958E  0E63               	movlw	99
 42654  009590                     L87:
 42655  009590  6FEA               	movwf	(_DtCO+6)& (0+255),b
 42656                           
 42657                           ; BSR set to: 0
 42658                           ;konfig.c: 234: }
 42659                           ;konfig.c: 235: RSDT1.outPCOmn=DtCO.minPCO;
 42660  009592  C0E9  F20A         	movff	_DtCO+5,_RSDT1+10
 42661                           
 42662                           ; BSR set to: 0
 42663                           ;konfig.c: 236: RSDT1.outPCOmx=DtCO.maxPCO;
 42664  009596  C0EA  F20B         	movff	_DtCO+6,_RSDT1+11
 42665                           
 42666                           ; BSR set to: 0
 42667                           ;konfig.c: 237: if(DtCO.PCO<DtCO.minPCO) DtCO.PCO=DtCO.minPCO;
 42668  00959A  51E9               	movf	(_DtCO+5)& (0+255),w,b
 42669  00959C  61E7               	cpfslt	(_DtCO+3)& (0+255),b
 42670  00959E  D002               	goto	l35678
 42671                           
 42672                           ; BSR set to: 0
 42673  0095A0  C0E9  F0E7         	movff	_DtCO+5,_DtCO+3
 42674  0095A4                     l35678:
 42675                           
 42676                           ; BSR set to: 0
 42677                           ;konfig.c: 238: if(DtCO.PCO>DtCO.maxPCO) DtCO.PCO=DtCO.maxPCO;
 42678  0095A4  51E7               	movf	(_DtCO+3)& (0+255),w,b
 42679  0095A6  61EA               	cpfslt	(_DtCO+6)& (0+255),b
 42680  0095A8  D002               	goto	l35682
 42681                           
 42682                           ; BSR set to: 0
 42683  0095AA  C0EA  F0E7         	movff	_DtCO+6,_DtCO+3
 42684  0095AE                     l35682:
 42685                           
 42686                           ; BSR set to: 0
 42687                           ;konfig.c: 239: if(DtCO.PCO!=Read_b_eep(0x00C9)) (Busy_eep(), Write_b_eep(0x00C9,DtCO.PC
      +                          O));
 42688  0095AE  6A1F               	clrf	?_Read_b_eep+1,c
 42689  0095B0  0EC9               	movlw	201
 42690  0095B2  6E1E               	movwf	?_Read_b_eep,c
 42691  0095B4  EC83  F059         	call	_Read_b_eep	;wreg free
 42692  0095B8  0100               	movlb	0	; () banked
 42693  0095BA  19E7               	xorwf	(_DtCO+3)& (0+255),w,b
 42694  0095BC  B4D8               	btfsc	status,2,c
 42695  0095BE  0012               	return	
 42696                           
 42697                           ; BSR set to: 0
 42698  0095C0  EC29  F05B         	call	_Busy_eep	;wreg free
 42699                           
 42700                           ; BSR set to: 0
 42701  0095C4  6A1F               	clrf	?_Write_b_eep+1,c
 42702  0095C6  0EC9               	movlw	201
 42703  0095C8  6E1E               	movwf	?_Write_b_eep,c
 42704  0095CA  C0E7  F020         	movff	_DtCO+3,?_Write_b_eep+2
 42705  0095CE  EF83  F053         	goto	_Write_b_eep	;wreg free
 42706  0095D2                     __end_of_SetNST:
 42707                           	opt stack 0
 42708                           tblptru	equ	0xFF8
 42709                           tblptrh	equ	0xFF7
 42710                           tblptrl	equ	0xFF6
 42711                           tablat	equ	0xFF5
 42712                           prodh	equ	0xFF4
 42713                           prodl	equ	0xFF3
 42714                           intcon	equ	0xFF2
 42715                           postinc0	equ	0xFEE
 42716                           wreg	equ	0xFE8
 42717                           indf1	equ	0xFE7
 42718                           postinc1	equ	0xFE6
 42719                           postdec1	equ	0xFE5
 42720                           fsr1h	equ	0xFE2
 42721                           fsr1l	equ	0xFE1
 42722                           indf2	equ	0xFDF
 42723                           postinc2	equ	0xFDE
 42724                           postdec2	equ	0xFDD
 42725                           fsr2h	equ	0xFDA
 42726                           fsr2l	equ	0xFD9
 42727                           status	equ	0xFD8
 42728                           
 42729 ;; *************** function _Read_b_eep *****************
 42730 ;; Defined at:
 42731 ;;		line 36 in file "plib/EEP/read_B.c"
 42732 ;; Parameters:    Size  Location     Type
 42733 ;;  badd            2   29[COMRAM] unsigned int 
 42734 ;; Auto vars:     Size  Location     Type
 42735 ;;		None
 42736 ;; Return value:  Size  Location     Type
 42737 ;;                  1    wreg      unsigned char 
 42738 ;; Registers used:
 42739 ;;		wreg, status,2, status,0
 42740 ;; Tracked objects:
 42741 ;;		On entry : 0/0
 42742 ;;		On exit  : 0/0
 42743 ;;		Unchanged: 0/0
 42744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42749 ;;Total ram usage:        2 bytes
 42750 ;; Hardware stack levels used:    1
 42751 ;; Hardware stack levels required when called:    4
 42752 ;; This function calls:
 42753 ;;		Nothing
 42754 ;; This function is called by:
 42755 ;;		_ReadTabNTC
 42756 ;;		_ReturnACfromNTC
 42757 ;;		_ReadTabZNTC
 42758 ;;		_main
 42759 ;;		_SetNST
 42760 ;;		_RdEEParam
 42761 ;;		_ReadEEPFN
 42762 ;; This function uses a non-reentrant model
 42763 ;;
 42764                           
 42765                           	psect	text196
 42766  00B306                     __ptext196:
 42767                           	opt stack 0
 42768  00B306                     _Read_b_eep:
 42769                           	opt stack 22
 42770  00B306  501F               	movf	Read_b_eep@badd+1,w,c
 42771  00B308  0B03               	andlw	3
 42772  00B30A  6EAA               	movwf	4010,c	;volatile
 42773  00B30C  C01E  FFA9         	movff	Read_b_eep@badd,4009	;volatile
 42774  00B310  9CA6               	bcf	4006,6,c	;volatile
 42775  00B312  9EA6               	bcf	4006,7,c	;volatile
 42776  00B314  80A6               	bsf	4006,0,c	;volatile
 42777  00B316  F000               	nop		;# 
 42778  00B318  F000               	nop		;# 
 42779  00B31A  50A8               	movf	4008,w,c	;volatile
 42780  00B31C  0012               	return	
 42781  00B31E                     __end_of_Read_b_eep:
 42782                           	opt stack 0
 42783                           tblptru	equ	0xFF8
 42784                           tblptrh	equ	0xFF7
 42785                           tblptrl	equ	0xFF6
 42786                           tablat	equ	0xFF5
 42787                           prodh	equ	0xFF4
 42788                           prodl	equ	0xFF3
 42789                           intcon	equ	0xFF2
 42790                           postinc0	equ	0xFEE
 42791                           wreg	equ	0xFE8
 42792                           indf1	equ	0xFE7
 42793                           postinc1	equ	0xFE6
 42794                           postdec1	equ	0xFE5
 42795                           fsr1h	equ	0xFE2
 42796                           fsr1l	equ	0xFE1
 42797                           indf2	equ	0xFDF
 42798                           postinc2	equ	0xFDE
 42799                           postdec2	equ	0xFDD
 42800                           fsr2h	equ	0xFDA
 42801                           fsr2l	equ	0xFD9
 42802                           status	equ	0xFD8
 42803                           
 42804 ;; *************** function _PomiarZW *****************
 42805 ;; Defined at:
 42806 ;;		line 553 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 42807 ;; Parameters:    Size  Location     Type
 42808 ;;		None
 42809 ;; Auto vars:     Size  Location     Type
 42810 ;;		None
 42811 ;; Return value:  Size  Location     Type
 42812 ;;		None               void
 42813 ;; Registers used:
 42814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42815 ;; Tracked objects:
 42816 ;;		On entry : F/0
 42817 ;;		On exit  : F/1
 42818 ;;		Unchanged: 0/0
 42819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42824 ;;Total ram usage:        0 bytes
 42825 ;; Hardware stack levels used:    1
 42826 ;; Hardware stack levels required when called:    6
 42827 ;; This function calls:
 42828 ;;		_ReadAC
 42829 ;;		_ReadTabZNTC
 42830 ;; This function is called by:
 42831 ;;		_main
 42832 ;;		_SetNST
 42833 ;; This function uses a non-reentrant model
 42834 ;;
 42835                           
 42836                           	psect	text197
 42837  00ABF6                     __ptext197:
 42838                           	opt stack 0
 42839  00ABF6                     _PomiarZW:
 42840                           	opt stack 24
 42841                           
 42842                           ; BSR set to: 0
 42843                           ;pomiar.c: 554: DtZW.AC_ZW=ReadAC(2);
 42844  00ABF6  0E02               	movlw	2
 42845  00ABF8  EC31  F04D         	call	_ReadAC
 42846  00ABFC  0101               	movlb	1	; () banked
 42847  00ABFE  6F82               	movwf	(_DtZW+1)& (0+255),b
 42848                           
 42849                           ;pomiar.c: 555: DtZW.ZW=ReadTabZNTC(DtZW.AC_ZW);
 42850  00AC00  5182               	movf	(_DtZW+1)& (0+255),w,b
 42851  00AC02  EC7C  F04F         	call	_ReadTabZNTC
 42852  00AC06  0101               	movlb	1	; () banked
 42853  00AC08  6F83               	movwf	(_DtZW+2)& (0+255),b
 42854                           
 42855                           ; BSR set to: 1
 42856                           ;pomiar.c: 556: if(DtZW.AC_ZW<=0x0F||DtZW.AC_ZW>=0xF0) DtZW._on_ZW=0;
 42857  00AC0A  EE21  F082         	lfsr	2,_DtZW+1
 42858  00AC0E  0E0F               	movlw	15
 42859  00AC10  64DF               	cpfsgt	indf2,c
 42860  00AC12  D005               	goto	l2137
 42861                           
 42862                           ; BSR set to: 1
 42863  00AC14  EE21  F082         	lfsr	2,_DtZW+1
 42864  00AC18  0EEF               	movlw	239
 42865  00AC1A  64DF               	cpfsgt	indf2,c
 42866  00AC1C  D002               	goto	l2135
 42867  00AC1E                     l2137:
 42868                           
 42869                           ; BSR set to: 1
 42870  00AC1E  9181               	bcf	_DtZW& (0+255),0,b
 42871  00AC20  0012               	return	
 42872  00AC22                     l2135:
 42873                           
 42874                           ; BSR set to: 1
 42875                           ;pomiar.c: 557: else DtZW._on_ZW=1;
 42876  00AC22  8181               	bsf	_DtZW& (0+255),0,b
 42877                           
 42878                           ; BSR set to: 1
 42879  00AC24  0012               	return	
 42880  00AC26                     __end_of_PomiarZW:
 42881                           	opt stack 0
 42882                           tblptru	equ	0xFF8
 42883                           tblptrh	equ	0xFF7
 42884                           tblptrl	equ	0xFF6
 42885                           tablat	equ	0xFF5
 42886                           prodh	equ	0xFF4
 42887                           prodl	equ	0xFF3
 42888                           intcon	equ	0xFF2
 42889                           postinc0	equ	0xFEE
 42890                           wreg	equ	0xFE8
 42891                           indf1	equ	0xFE7
 42892                           postinc1	equ	0xFE6
 42893                           postdec1	equ	0xFE5
 42894                           fsr1h	equ	0xFE2
 42895                           fsr1l	equ	0xFE1
 42896                           indf2	equ	0xFDF
 42897                           postinc2	equ	0xFDE
 42898                           postdec2	equ	0xFDD
 42899                           fsr2h	equ	0xFDA
 42900                           fsr2l	equ	0xFD9
 42901                           status	equ	0xFD8
 42902                           
 42903 ;; *************** function _ReadAC *****************
 42904 ;; Defined at:
 42905 ;;		line 97 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
 42906 ;; Parameters:    Size  Location     Type
 42907 ;;  chanel          1    wreg     unsigned char 
 42908 ;; Auto vars:     Size  Location     Type
 42909 ;;  chanel          1   30[COMRAM] unsigned char 
 42910 ;; Return value:  Size  Location     Type
 42911 ;;                  1    wreg      unsigned char 
 42912 ;; Registers used:
 42913 ;;		wreg, status,2, status,0
 42914 ;; Tracked objects:
 42915 ;;		On entry : 0/0
 42916 ;;		On exit  : 0/0
 42917 ;;		Unchanged: FFFFFFFF/0
 42918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42923 ;;Total ram usage:        2 bytes
 42924 ;; Hardware stack levels used:    1
 42925 ;; Hardware stack levels required when called:    4
 42926 ;; This function calls:
 42927 ;;		Nothing
 42928 ;; This function is called by:
 42929 ;;		_PomiarCO
 42930 ;;		_PomiarIN
 42931 ;;		_PomiarCW
 42932 ;;		_PomiarZW
 42933 ;;		_PomiarCS
 42934 ;; This function uses a non-reentrant model
 42935 ;;
 42936                           
 42937                           	psect	text198
 42938  009A62                     __ptext198:
 42939                           	opt stack 0
 42940  009A62                     _ReadAC:
 42941                           	opt stack 23
 42942                           
 42943                           ; BSR set to: 1
 42944                           ;ReadAC@chanel stored from wreg
 42945  009A62  CFE8 F01F          	movff	wreg,ReadAC@chanel
 42946                           
 42947                           ;ac.c: 101: CHS0=(chanel&0b00000001);
 42948  009A66  A01F               	btfss	ReadAC@chanel,0,c
 42949  009A68  D001               	bra	u47965
 42950  009A6A  84C2               	bsf	4034,2,c	;volatile
 42951  009A6C                     u47965:
 42952  009A6C  B01F               	btfsc	ReadAC@chanel,0,c
 42953  009A6E  D001               	bra	u47966
 42954  009A70  94C2               	bcf	4034,2,c	;volatile
 42955  009A72                     u47966:
 42956                           
 42957                           ;ac.c: 102: CHS1=((chanel&0b00000010)>>1);
 42958  009A72  C01F  F01E         	movff	ReadAC@chanel,??_ReadAC
 42959  009A76  90D8               	bcf	status,0,c
 42960  009A78  321E               	rrcf	??_ReadAC,f,c
 42961  009A7A  301E               	rrcf	??_ReadAC,w,c
 42962  009A7C  A0D8               	btfss	status,0,c
 42963  009A7E  D001               	bra	u47975
 42964  009A80  86C2               	bsf	4034,3,c	;volatile
 42965  009A82                     u47975:
 42966  009A82  B0D8               	btfsc	status,0,c
 42967  009A84  D001               	bra	u47976
 42968  009A86  96C2               	bcf	4034,3,c	;volatile
 42969  009A88                     u47976:
 42970                           
 42971                           ;ac.c: 103: CHS2=((chanel&0b00000100)>>2);
 42972  009A88  C01F  F01E         	movff	ReadAC@chanel,??_ReadAC
 42973  009A8C  90D8               	bcf	status,0,c
 42974  009A8E  321E               	rrcf	??_ReadAC,f,c
 42975  009A90  90D8               	bcf	status,0,c
 42976  009A92  321E               	rrcf	??_ReadAC,f,c
 42977  009A94  301E               	rrcf	??_ReadAC,w,c
 42978  009A96  A0D8               	btfss	status,0,c
 42979  009A98  D001               	bra	u47985
 42980  009A9A  88C2               	bsf	4034,4,c	;volatile
 42981  009A9C                     u47985:
 42982  009A9C  B0D8               	btfsc	status,0,c
 42983  009A9E  D001               	bra	u47986
 42984  009AA0  98C2               	bcf	4034,4,c	;volatile
 42985  009AA2                     u47986:
 42986                           
 42987                           ;ac.c: 104: CHS3=((chanel&0b00001000)>>3);
 42988  009AA2  C01F  F01E         	movff	ReadAC@chanel,??_ReadAC
 42989  009AA6  90D8               	bcf	status,0,c
 42990  009AA8  321E               	rrcf	??_ReadAC,f,c
 42991  009AAA  90D8               	bcf	status,0,c
 42992  009AAC  321E               	rrcf	??_ReadAC,f,c
 42993  009AAE  90D8               	bcf	status,0,c
 42994  009AB0  321E               	rrcf	??_ReadAC,f,c
 42995  009AB2  301E               	rrcf	??_ReadAC,w,c
 42996  009AB4  A0D8               	btfss	status,0,c
 42997  009AB6  D001               	bra	u47995
 42998  009AB8  8AC2               	bsf	4034,5,c	;volatile
 42999  009ABA                     u47995:
 43000  009ABA  B0D8               	btfsc	status,0,c
 43001  009ABC  D001               	bra	u47996
 43002  009ABE  9AC2               	bcf	4034,5,c	;volatile
 43003  009AC0                     u47996:
 43004                           
 43005                           ;ac.c: 105: GODONE=1;
 43006  009AC0  82C2               	bsf	4034,1,c	;volatile
 43007  009AC2                     l46:
 43008  009AC2  B2C2               	btfsc	4034,1,c	;volatile
 43009  009AC4  D7FE               	goto	l46
 43010                           
 43011                           ;ac.c: 107: return ADRESH;
 43012  009AC6  50C4               	movf	4036,w,c	;volatile
 43013  009AC8  0012               	return	
 43014  009ACA                     __end_of_ReadAC:
 43015                           	opt stack 0
 43016                           tblptru	equ	0xFF8
 43017                           tblptrh	equ	0xFF7
 43018                           tblptrl	equ	0xFF6
 43019                           tablat	equ	0xFF5
 43020                           prodh	equ	0xFF4
 43021                           prodl	equ	0xFF3
 43022                           intcon	equ	0xFF2
 43023                           postinc0	equ	0xFEE
 43024                           wreg	equ	0xFE8
 43025                           indf1	equ	0xFE7
 43026                           postinc1	equ	0xFE6
 43027                           postdec1	equ	0xFE5
 43028                           fsr1h	equ	0xFE2
 43029                           fsr1l	equ	0xFE1
 43030                           indf2	equ	0xFDF
 43031                           postinc2	equ	0xFDE
 43032                           postdec2	equ	0xFDD
 43033                           fsr2h	equ	0xFDA
 43034                           fsr2l	equ	0xFD9
 43035                           status	equ	0xFD8
 43036                           
 43037 ;; *************** function _ReadTabZNTC *****************
 43038 ;; Defined at:
 43039 ;;		line 142 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\ac.c"
 43040 ;; Parameters:    Size  Location     Type
 43041 ;;  zrAC            1    wreg     unsigned char 
 43042 ;; Auto vars:     Size  Location     Type
 43043 ;;  zrAC            1   31[COMRAM] unsigned char 
 43044 ;;  i               2   33[COMRAM] unsigned int 
 43045 ;;  data            1   32[COMRAM] char 
 43046 ;; Return value:  Size  Location     Type
 43047 ;;                  1    wreg      char 
 43048 ;; Registers used:
 43049 ;;		wreg, status,2, status,0, cstack
 43050 ;; Tracked objects:
 43051 ;;		On entry : F/1
 43052 ;;		On exit  : 0/0
 43053 ;;		Unchanged: 0/0
 43054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43056 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43058 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43059 ;;Total ram usage:        4 bytes
 43060 ;; Hardware stack levels used:    1
 43061 ;; Hardware stack levels required when called:    5
 43062 ;; This function calls:
 43063 ;;		_Read_b_eep
 43064 ;; This function is called by:
 43065 ;;		_PomiarZW
 43066 ;; This function uses a non-reentrant model
 43067 ;;
 43068                           
 43069                           	psect	text199
 43070  009EF8                     __ptext199:
 43071                           	opt stack 0
 43072  009EF8                     _ReadTabZNTC:
 43073                           	opt stack 24
 43074                           
 43075                           ;ReadTabZNTC@zrAC stored from wreg
 43076  009EF8  CFE8 F020          	movff	wreg,ReadTabZNTC@zrAC
 43077                           
 43078                           ; BSR set to: 1
 43079                           ;ac.c: 143: unsigned int i;
 43080                           ;ac.c: 144: signed char data;
 43081                           ;ac.c: 145: i=zrAC;
 43082  009EFC  C020  F022         	movff	ReadTabZNTC@zrAC,ReadTabZNTC@i
 43083  009F00  6A23               	clrf	ReadTabZNTC@i+1,c
 43084                           
 43085                           ; BSR set to: 1
 43086                           ;ac.c: 147: if(i<0x29) i=0x29;
 43087  009F02  0E29               	movlw	41
 43088  009F04  5C22               	subwf	ReadTabZNTC@i,w,c
 43089  009F06  0E00               	movlw	0
 43090  009F08  5823               	subwfb	ReadTabZNTC@i+1,w,c
 43091  009F0A  E203               	bc	l27894
 43092                           
 43093                           ; BSR set to: 1
 43094  009F0C  6A23               	clrf	ReadTabZNTC@i+1,c
 43095  009F0E  0E29               	movlw	41
 43096  009F10  6E22               	movwf	ReadTabZNTC@i,c
 43097  009F12                     l27894:
 43098                           
 43099                           ; BSR set to: 1
 43100                           ;ac.c: 148: if(i>0xEC) i=0xEC;
 43101  009F12  0EED               	movlw	237
 43102  009F14  5C22               	subwf	ReadTabZNTC@i,w,c
 43103  009F16  0E00               	movlw	0
 43104  009F18  5823               	subwfb	ReadTabZNTC@i+1,w,c
 43105  009F1A  E303               	bnc	l27898
 43106                           
 43107                           ; BSR set to: 1
 43108  009F1C  6A23               	clrf	ReadTabZNTC@i+1,c
 43109  009F1E  0EEC               	movlw	236
 43110  009F20  6E22               	movwf	ReadTabZNTC@i,c
 43111  009F22                     l27898:
 43112                           
 43113                           ; BSR set to: 1
 43114                           ;ac.c: 149: i-=0x29;
 43115  009F22  0E29               	movlw	41
 43116  009F24  5E22               	subwf	ReadTabZNTC@i,f,c
 43117  009F26  0E00               	movlw	0
 43118  009F28  5A23               	subwfb	ReadTabZNTC@i+1,f,c
 43119                           
 43120                           ; BSR set to: 1
 43121                           ;ac.c: 150: if(i>200) i=200;
 43122  009F2A  0EC9               	movlw	201
 43123  009F2C  5C22               	subwf	ReadTabZNTC@i,w,c
 43124  009F2E  0E00               	movlw	0
 43125  009F30  5823               	subwfb	ReadTabZNTC@i+1,w,c
 43126  009F32  E303               	bnc	l27904
 43127                           
 43128                           ; BSR set to: 1
 43129  009F34  6A23               	clrf	ReadTabZNTC@i+1,c
 43130  009F36  0EC8               	movlw	200
 43131  009F38  6E22               	movwf	ReadTabZNTC@i,c
 43132  009F3A                     l27904:
 43133                           
 43134                           ; BSR set to: 1
 43135                           ;ac.c: 151: i+=0x00E0;
 43136  009F3A  0EE0               	movlw	224
 43137  009F3C  2622               	addwf	ReadTabZNTC@i,f,c
 43138  009F3E  0E00               	movlw	0
 43139  009F40  2223               	addwfc	ReadTabZNTC@i+1,f,c
 43140                           
 43141                           ; BSR set to: 1
 43142                           ;ac.c: 153: data=Read_b_eep(i);
 43143  009F42  C022  F01E         	movff	ReadTabZNTC@i,?_Read_b_eep
 43144  009F46  C023  F01F         	movff	ReadTabZNTC@i+1,?_Read_b_eep+1
 43145  009F4A  EC83  F059         	call	_Read_b_eep	;wreg free
 43146  009F4E  6E21               	movwf	ReadTabZNTC@data,c
 43147                           
 43148                           ;ac.c: 154: return data;
 43149  009F50  5021               	movf	ReadTabZNTC@data,w,c
 43150  009F52  0012               	return	
 43151  009F54                     __end_of_ReadTabZNTC:
 43152                           	opt stack 0
 43153                           tblptru	equ	0xFF8
 43154                           tblptrh	equ	0xFF7
 43155                           tblptrl	equ	0xFF6
 43156                           tablat	equ	0xFF5
 43157                           prodh	equ	0xFF4
 43158                           prodl	equ	0xFF3
 43159                           intcon	equ	0xFF2
 43160                           postinc0	equ	0xFEE
 43161                           wreg	equ	0xFE8
 43162                           indf1	equ	0xFE7
 43163                           postinc1	equ	0xFE6
 43164                           postdec1	equ	0xFE5
 43165                           fsr1h	equ	0xFE2
 43166                           fsr1l	equ	0xFE1
 43167                           indf2	equ	0xFDF
 43168                           postinc2	equ	0xFDE
 43169                           postdec2	equ	0xFDD
 43170                           fsr2h	equ	0xFDA
 43171                           fsr2l	equ	0xFD9
 43172                           status	equ	0xFD8
 43173                           
 43174 ;; *************** function _SetPrt *****************
 43175 ;; Defined at:
 43176 ;;		line 312 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
 43177 ;; Parameters:    Size  Location     Type
 43178 ;;  Index           1    wreg     const unsigned char 
 43179 ;;  nw              1   29[COMRAM] const unsigned char 
 43180 ;; Auto vars:     Size  Location     Type
 43181 ;;  Index           1   31[COMRAM] const unsigned char 
 43182 ;; Return value:  Size  Location     Type
 43183 ;;		None               void
 43184 ;; Registers used:
 43185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl
 43186 ;; Tracked objects:
 43187 ;;		On entry : E/0
 43188 ;;		On exit  : F/0
 43189 ;;		Unchanged: 0/0
 43190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43191 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43195 ;;Total ram usage:        3 bytes
 43196 ;; Hardware stack levels used:    1
 43197 ;; Hardware stack levels required when called:    4
 43198 ;; This function calls:
 43199 ;;		Nothing
 43200 ;; This function is called by:
 43201 ;;		_RestartFltPrt
 43202 ;;		_SetWylacz
 43203 ;;		_SetNST
 43204 ;;		_TrybPracy
 43205 ;; This function uses a non-reentrant model
 43206 ;;
 43207                           
 43208                           	psect	text200
 43209  00A61C                     __ptext200:
 43210                           	opt stack 0
 43211  00A61C                     _SetPrt:
 43212                           	opt stack 24
 43213                           
 43214                           ;SetPrt@Index stored from wreg
 43215  00A61C  CFE8 F020          	movff	wreg,SetPrt@Index
 43216                           
 43217                           ;port.c: 313: if (Index>26-1) asm("RESET");
 43218  00A620  0E19               	movlw	25
 43219  00A622  6420               	cpfsgt	SetPrt@Index,c
 43220  00A624  D001               	goto	l32402
 43221  00A626  00FF               	reset		;# 
 43222  00A628                     l32402:
 43223                           
 43224                           ;port.c: 314: SPort[Index].Output=((!nw)?0:1);
 43225  00A628  0E00               	movlw	0
 43226  00A62A  6AF3               	clrf	prodl,c
 43227  00A62C  621E               	cpfseq	SetPrt@nw,c
 43228  00A62E  2AF3               	incf	prodl,f,c
 43229  00A630  CFF3 F01F          	movff	prodl,??_SetPrt
 43230  00A634  5020               	movf	SetPrt@Index,w,c
 43231  00A636  0100               	movlb	0	; () banked
 43232  00A638  0FB5               	addlw	low _SPort	;volatile
 43233  00A63A  6ED9               	movwf	fsr2l,c
 43234  00A63C  6ADA               	clrf	fsr2h,c
 43235  00A63E  461F               	rlncf	??_SetPrt,f,c
 43236  00A640  50DF               	movf	223,w,c
 43237  00A642  181F               	xorwf	??_SetPrt,w,c
 43238  00A644  0BFD               	andlw	-3
 43239  00A646  181F               	xorwf	??_SetPrt,w,c
 43240  00A648  6EDF               	movwf	223,c
 43241                           
 43242                           ; BSR set to: 0
 43243                           ;port.c: 315: SPort[Index].Timer=0;
 43244  00A64A  5020               	movf	SetPrt@Index,w,c
 43245  00A64C  0FB5               	addlw	low _SPort	;volatile
 43246  00A64E  6ED9               	movwf	fsr2l,c
 43247  00A650  6ADA               	clrf	fsr2h,c
 43248  00A652  0E03               	movlw	-253
 43249  00A654  16DF               	andwf	223,f,c
 43250                           
 43251                           ; BSR set to: 0
 43252  00A656  0C03               	retlw	3
 43253  00A658                     __end_of_SetPrt:
 43254                           	opt stack 0
 43255                           tblptru	equ	0xFF8
 43256                           tblptrh	equ	0xFF7
 43257                           tblptrl	equ	0xFF6
 43258                           tablat	equ	0xFF5
 43259                           prodh	equ	0xFF4
 43260                           prodl	equ	0xFF3
 43261                           intcon	equ	0xFF2
 43262                           postinc0	equ	0xFEE
 43263                           wreg	equ	0xFE8
 43264                           indf1	equ	0xFE7
 43265                           postinc1	equ	0xFE6
 43266                           postdec1	equ	0xFE5
 43267                           fsr1h	equ	0xFE2
 43268                           fsr1l	equ	0xFE1
 43269                           indf2	equ	0xFDF
 43270                           postinc2	equ	0xFDE
 43271                           postdec2	equ	0xFDD
 43272                           fsr2h	equ	0xFDA
 43273                           fsr2l	equ	0xFD9
 43274                           status	equ	0xFD8
 43275                           
 43276 ;; *************** function _Busy_eep *****************
 43277 ;; Defined at:
 43278 ;;		line 13 in file "plib/EEP/busy_eep.c"
 43279 ;; Parameters:    Size  Location     Type
 43280 ;;		None
 43281 ;; Auto vars:     Size  Location     Type
 43282 ;;		None
 43283 ;; Return value:  Size  Location     Type
 43284 ;;		None               void
 43285 ;; Registers used:
 43286 ;;		None
 43287 ;; Tracked objects:
 43288 ;;		On entry : E/1
 43289 ;;		On exit  : E/1
 43290 ;;		Unchanged: FFFFFFF1/0
 43291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43296 ;;Total ram usage:        0 bytes
 43297 ;; Hardware stack levels used:    1
 43298 ;; Hardware stack levels required when called:    4
 43299 ;; This function calls:
 43300 ;;		Nothing
 43301 ;; This function is called by:
 43302 ;;		_DecyzjaAntyLeg
 43303 ;;		_ErrPTG
 43304 ;;		_ToReset
 43305 ;;		_SetNST
 43306 ;;		_RdEEParam
 43307 ;;		_WriteEEPCW
 43308 ;;		_WriteEEPCO
 43309 ;;		_WriteEEPFN
 43310 ;; This function uses a non-reentrant model
 43311 ;;
 43312                           
 43313                           	psect	text201
 43314  00B652                     __ptext201:
 43315                           	opt stack 0
 43316  00B652                     _Busy_eep:
 43317                           	opt stack 23
 43318  00B652                     l4885:
 43319  00B652  A2A6               	btfss	4006,1,c	;volatile
 43320  00B654  0012               	return	
 43321  00B656  D7FD               	goto	l4885
 43322  00B658                     __end_of_Busy_eep:
 43323                           	opt stack 0
 43324                           tblptru	equ	0xFF8
 43325                           tblptrh	equ	0xFF7
 43326                           tblptrl	equ	0xFF6
 43327                           tablat	equ	0xFF5
 43328                           prodh	equ	0xFF4
 43329                           prodl	equ	0xFF3
 43330                           intcon	equ	0xFF2
 43331                           postinc0	equ	0xFEE
 43332                           wreg	equ	0xFE8
 43333                           indf1	equ	0xFE7
 43334                           postinc1	equ	0xFE6
 43335                           postdec1	equ	0xFE5
 43336                           fsr1h	equ	0xFE2
 43337                           fsr1l	equ	0xFE1
 43338                           indf2	equ	0xFDF
 43339                           postinc2	equ	0xFDE
 43340                           postdec2	equ	0xFDD
 43341                           fsr2h	equ	0xFDA
 43342                           fsr2l	equ	0xFD9
 43343                           status	equ	0xFD8
 43344                           
 43345 ;; *************** function _Write_b_eep *****************
 43346 ;; Defined at:
 43347 ;;		line 50 in file "plib/EEP/write_B.c"
 43348 ;; Parameters:    Size  Location     Type
 43349 ;;  badd            2   29[COMRAM] unsigned int 
 43350 ;;  bdat            1   31[COMRAM] unsigned char 
 43351 ;; Auto vars:     Size  Location     Type
 43352 ;;  GIE_BIT_VAL     1   32[COMRAM] unsigned char 
 43353 ;; Return value:  Size  Location     Type
 43354 ;;		None               void
 43355 ;; Registers used:
 43356 ;;		wreg, status,2, status,0
 43357 ;; Tracked objects:
 43358 ;;		On entry : E/1
 43359 ;;		On exit  : 0/0
 43360 ;;		Unchanged: FFFFFFF0/0
 43361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43362 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43365 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43366 ;;Total ram usage:        4 bytes
 43367 ;; Hardware stack levels used:    1
 43368 ;; Hardware stack levels required when called:    4
 43369 ;; This function calls:
 43370 ;;		Nothing
 43371 ;; This function is called by:
 43372 ;;		_DecyzjaAntyLeg
 43373 ;;		_ErrPTG
 43374 ;;		_ToReset
 43375 ;;		_SetNST
 43376 ;;		_RdEEParam
 43377 ;;		_WriteEEPCW
 43378 ;;		_WriteEEPCO
 43379 ;;		_WriteEEPFN
 43380 ;; This function uses a non-reentrant model
 43381 ;;
 43382                           
 43383                           	psect	text202
 43384  00A706                     __ptext202:
 43385                           	opt stack 0
 43386  00A706                     _Write_b_eep:
 43387                           	opt stack 23
 43388  00A706  501F               	movf	Write_b_eep@badd+1,w,c
 43389  00A708  0B03               	andlw	3
 43390  00A70A  6EAA               	movwf	4010,c	;volatile
 43391  00A70C  C01E  FFA9         	movff	Write_b_eep@badd,4009	;volatile
 43392  00A710  C020  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
 43393  00A714  9EA6               	bcf	4006,7,c	;volatile
 43394  00A716  9CA6               	bcf	4006,6,c	;volatile
 43395  00A718  84A6               	bsf	4006,2,c	;volatile
 43396  00A71A  0E00               	movlw	0
 43397  00A71C  BEF2               	btfsc	intcon,7,c	;volatile
 43398  00A71E  0E01               	movlw	1
 43399  00A720  6E21               	movwf	Write_b_eep@GIE_BIT_VAL,c
 43400  00A722  9EF2               	bcf	intcon,7,c	;volatile
 43401  00A724  0E55               	movlw	85
 43402  00A726  6EA7               	movwf	4007,c	;volatile
 43403  00A728  0EAA               	movlw	170
 43404  00A72A  6EA7               	movwf	4007,c	;volatile
 43405  00A72C  82A6               	bsf	4006,1,c	;volatile
 43406  00A72E                     l4914:
 43407  00A72E  B2A6               	btfsc	4006,1,c	;volatile
 43408  00A730  D7FE               	goto	l4914
 43409  00A732  B021               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
 43410  00A734  D002               	bra	u60055
 43411  00A736  9EF2               	bcf	intcon,7,c	;volatile
 43412  00A738  D001               	bra	u60056
 43413  00A73A                     u60055:
 43414  00A73A  8EF2               	bsf	intcon,7,c	;volatile
 43415  00A73C                     u60056:
 43416  00A73C  94A6               	bcf	4006,2,c	;volatile
 43417  00A73E  0012               	return	
 43418  00A740                     __end_of_Write_b_eep:
 43419                           	opt stack 0
 43420                           tblptru	equ	0xFF8
 43421                           tblptrh	equ	0xFF7
 43422                           tblptrl	equ	0xFF6
 43423                           tablat	equ	0xFF5
 43424                           prodh	equ	0xFF4
 43425                           prodl	equ	0xFF3
 43426                           intcon	equ	0xFF2
 43427                           postinc0	equ	0xFEE
 43428                           wreg	equ	0xFE8
 43429                           indf1	equ	0xFE7
 43430                           postinc1	equ	0xFE6
 43431                           postdec1	equ	0xFE5
 43432                           fsr1h	equ	0xFE2
 43433                           fsr1l	equ	0xFE1
 43434                           indf2	equ	0xFDF
 43435                           postinc2	equ	0xFDE
 43436                           postdec2	equ	0xFDD
 43437                           fsr2h	equ	0xFDA
 43438                           fsr2l	equ	0xFD9
 43439                           status	equ	0xFD8
 43440                           
 43441 ;; *************** function _SetPFN *****************
 43442 ;; Defined at:
 43443 ;;		line 366 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\konfig.c"
 43444 ;; Parameters:    Size  Location     Type
 43445 ;;		None
 43446 ;; Auto vars:     Size  Location     Type
 43447 ;;		None
 43448 ;; Return value:  Size  Location     Type
 43449 ;;		None               void
 43450 ;; Registers used:
 43451 ;;		wreg, status,2, status,0
 43452 ;; Tracked objects:
 43453 ;;		On entry : F/1
 43454 ;;		On exit  : F/1
 43455 ;;		Unchanged: FFFFFFF0/0
 43456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43461 ;;Total ram usage:        0 bytes
 43462 ;; Hardware stack levels used:    1
 43463 ;; Hardware stack levels required when called:    4
 43464 ;; This function calls:
 43465 ;;		Nothing
 43466 ;; This function is called by:
 43467 ;;		_RdEEParam
 43468 ;; This function uses a non-reentrant model
 43469 ;;
 43470                           
 43471                           	psect	text203
 43472  00A44A                     __ptext203:
 43473                           	opt stack 0
 43474  00A44A                     _SetPFN:
 43475                           	opt stack 25
 43476                           
 43477                           ; BSR set to: 1
 43478                           ;konfig.c: 367: if(PFN.poz==1)
 43479  00A44A  05D9               	decf	(_PFN+31)& (0+255),w,b
 43480  00A44C  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 43481  00A44E  E105               	bnz	l35692
 43482                           
 43483                           ; BSR set to: 1
 43484                           ;konfig.c: 368: {
 43485                           ;konfig.c: 369: PFN._zima=0;
 43486  00A450  95BA               	bcf	_PFN& (0+255),2,b
 43487                           
 43488                           ;konfig.c: 370: PFN._lato=0;
 43489  00A452  93BA               	bcf	_PFN& (0+255),1,b
 43490                           
 43491                           ;konfig.c: 371: PFN._off=1;
 43492  00A454  81BA               	bsf	_PFN& (0+255),0,b
 43493                           
 43494                           ;konfig.c: 372: PFN._csn=0;
 43495  00A456  99BD               	bcf	(_PFN+3)& (0+255),4,b
 43496                           
 43497                           ;konfig.c: 373: }
 43498  00A458  0012               	return	
 43499  00A45A                     l35692:
 43500                           
 43501                           ; BSR set to: 1
 43502                           ;konfig.c: 374: else
 43503                           ;konfig.c: 375: if(PFN.poz==3)
 43504  00A45A  51D9               	movf	(_PFN+31)& (0+255),w,b
 43505  00A45C  0A03               	xorlw	3
 43506  00A45E  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 43507  00A460  E105               	bnz	l35696
 43508                           
 43509                           ; BSR set to: 1
 43510                           ;konfig.c: 376: {
 43511                           ;konfig.c: 377: PFN._zima=1;
 43512  00A462  85BA               	bsf	_PFN& (0+255),2,b
 43513                           
 43514                           ;konfig.c: 378: PFN._lato=0;
 43515  00A464  93BA               	bcf	_PFN& (0+255),1,b
 43516                           
 43517                           ;konfig.c: 379: PFN._off=0;
 43518  00A466  91BA               	bcf	_PFN& (0+255),0,b
 43519                           
 43520                           ;konfig.c: 380: PFN._csn=0;
 43521  00A468  99BD               	bcf	(_PFN+3)& (0+255),4,b
 43522                           
 43523                           ;konfig.c: 381: }
 43524  00A46A  0012               	return	
 43525  00A46C                     l35696:
 43526                           
 43527                           ; BSR set to: 1
 43528                           ;konfig.c: 382: else
 43529                           ;konfig.c: 383: if(PFN.poz==2)
 43530  00A46C  51D9               	movf	(_PFN+31)& (0+255),w,b
 43531  00A46E  0A02               	xorlw	2
 43532  00A470  11DA               	iorwf	(_PFN+32)& (0+255),w,b
 43533  00A472  E105               	bnz	l3966
 43534                           
 43535                           ; BSR set to: 1
 43536                           ;konfig.c: 384: {
 43537                           ;konfig.c: 385: PFN._zima=0;
 43538  00A474  95BA               	bcf	_PFN& (0+255),2,b
 43539                           
 43540                           ;konfig.c: 386: PFN._lato=1;
 43541  00A476  83BA               	bsf	_PFN& (0+255),1,b
 43542                           
 43543                           ;konfig.c: 387: PFN._off=0;
 43544  00A478  91BA               	bcf	_PFN& (0+255),0,b
 43545                           
 43546                           ;konfig.c: 388: PFN._csn=0;
 43547  00A47A  99BD               	bcf	(_PFN+3)& (0+255),4,b
 43548                           
 43549                           ;konfig.c: 389: }
 43550  00A47C  0012               	return	
 43551  00A47E                     l3966:
 43552                           
 43553                           ; BSR set to: 1
 43554                           ;konfig.c: 390: else
 43555                           ;konfig.c: 391: {
 43556                           ;konfig.c: 392: PFN._zima=1;
 43557  00A47E  85BA               	bsf	_PFN& (0+255),2,b
 43558                           
 43559                           ;konfig.c: 393: PFN._lato=0;
 43560  00A480  93BA               	bcf	_PFN& (0+255),1,b
 43561                           
 43562                           ;konfig.c: 394: PFN._off=0;
 43563  00A482  91BA               	bcf	_PFN& (0+255),0,b
 43564                           
 43565                           ;konfig.c: 395: PFN._csn=0;
 43566  00A484  99BD               	bcf	(_PFN+3)& (0+255),4,b
 43567                           
 43568                           ; BSR set to: 1
 43569                           ;konfig.c: 396: PFN.poz=3;
 43570  00A486  0E00               	movlw	0
 43571  00A488  6FDA               	movwf	(_PFN+32)& (0+255),b
 43572  00A48A  0E03               	movlw	3
 43573  00A48C  6FD9               	movwf	(_PFN+31)& (0+255),b
 43574                           
 43575                           ; BSR set to: 1
 43576  00A48E  0C03               	retlw	3
 43577  00A490                     __end_of_SetPFN:
 43578                           	opt stack 0
 43579                           tblptru	equ	0xFF8
 43580                           tblptrh	equ	0xFF7
 43581                           tblptrl	equ	0xFF6
 43582                           tablat	equ	0xFF5
 43583                           prodh	equ	0xFF4
 43584                           prodl	equ	0xFF3
 43585                           intcon	equ	0xFF2
 43586                           postinc0	equ	0xFEE
 43587                           wreg	equ	0xFE8
 43588                           indf1	equ	0xFE7
 43589                           postinc1	equ	0xFE6
 43590                           postdec1	equ	0xFE5
 43591                           fsr1h	equ	0xFE2
 43592                           fsr1l	equ	0xFE1
 43593                           indf2	equ	0xFDF
 43594                           postinc2	equ	0xFDE
 43595                           postdec2	equ	0xFDD
 43596                           fsr2h	equ	0xFDA
 43597                           fsr2l	equ	0xFD9
 43598                           status	equ	0xFD8
 43599                           
 43600 ;; *************** function _RglPmp1 *****************
 43601 ;; Defined at:
 43602 ;;		line 159 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 43603 ;; Parameters:    Size  Location     Type
 43604 ;;		None
 43605 ;; Auto vars:     Size  Location     Type
 43606 ;;		None
 43607 ;; Return value:  Size  Location     Type
 43608 ;;		None               void
 43609 ;; Registers used:
 43610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43611 ;; Tracked objects:
 43612 ;;		On entry : F/1
 43613 ;;		On exit  : F/0
 43614 ;;		Unchanged: 0/0
 43615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43618 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43619 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43620 ;;Total ram usage:        1 bytes
 43621 ;; Hardware stack levels used:    1
 43622 ;; Hardware stack levels required when called:    6
 43623 ;; This function calls:
 43624 ;;		_StartRTS
 43625 ;;		_ProcToPmpPwm
 43626 ;;		_WritePWM2
 43627 ;;		_RTS
 43628 ;;		_ModPmp1
 43629 ;; This function is called by:
 43630 ;;		_RglPmp
 43631 ;; This function uses a non-reentrant model
 43632 ;;
 43633                           
 43634                           	psect	text204
 43635  009856                     __ptext204:
 43636                           	opt stack 0
 43637  009856                     _RglPmp1:
 43638                           	opt stack 23
 43639                           
 43640                           ; BSR set to: 1
 43641                           ;pompa.c: 160: PMP.MGPROC=100;
 43642                           
 43643                           ; BSR set to: 1
 43644  009856  0E64               	movlw	100
 43645  009858  6E38               	movwf	_PMP,c
 43646                           
 43647                           ; BSR set to: 1
 43648                           ;pompa.c: 161: PMP.MDPROC=DtKNF.mdpm;
 43649  00985A  C155  F039         	movff	_DtKNF+11,_PMP+1
 43650                           
 43651                           ; BSR set to: 1
 43652                           ;pompa.c: 162: DtIN.DDLT=DtKNF.dtpm;
 43653  00985E  C154  F13B         	movff	_DtKNF+10,_DtIN+5
 43654                           
 43655                           ; BSR set to: 1
 43656                           ;pompa.c: 163: if(!M._PRACA)
 43657  009862  0100               	movlb	0	; () banked
 43658  009864  B57B               	btfsc	(_M+27)& (0+255),2,b
 43659  009866  D010               	goto	l4205
 43660                           
 43661                           ; BSR set to: 0
 43662                           ;pompa.c: 164: {
 43663                           ;pompa.c: 165: DtIN.pop=0;
 43664  009868  0101               	movlb	1	; () banked
 43665  00986A  6B49               	clrf	(_DtIN+19)& (0+255),b
 43666                           
 43667                           ; BSR set to: 1
 43668                           ;pompa.c: 166: StartRTS(15);
 43669  00986C  0E0F               	movlw	15
 43670  00986E  EC9C  F057         	call	_StartRTS
 43671                           
 43672                           ; BSR set to: 1
 43673                           ;pompa.c: 167: if(PORTDbits.RD2)
 43674  009872  A483               	btfss	3971,2,c	;volatile
 43675  009874  D003               	goto	l4206
 43676                           
 43677                           ; BSR set to: 1
 43678                           ;pompa.c: 168: {
 43679                           ;pompa.c: 169: PMP.APROC=PMP.MGPROC;
 43680  009876  C038  F03A         	movff	_PMP,_PMP+2
 43681                           
 43682                           ;pompa.c: 170: }
 43683  00987A  D001               	goto	l41132
 43684  00987C                     l4206:
 43685                           
 43686                           ; BSR set to: 1
 43687                           ;pompa.c: 171: else
 43688                           ;pompa.c: 172: {
 43689                           ;pompa.c: 173: PMP.APROC=0;
 43690  00987C  6A3A               	clrf	_PMP+2,c
 43691  00987E                     l41132:
 43692                           
 43693                           ; BSR set to: 1
 43694                           ;pompa.c: 174: }
 43695                           ;pompa.c: 175: WritePWM2(ProcToPmpPwm(PMP.APROC));
 43696  00987E  503A               	movf	_PMP+2,w,c
 43697  009880  EC8C  F052         	call	_ProcToPmpPwm
 43698  009884  EFAC  F05A         	goto	_WritePWM2
 43699  009888                     l4205:
 43700                           
 43701                           ; BSR set to: 0
 43702                           ;pompa.c: 177: else
 43703                           ;pompa.c: 178: {
 43704                           ;pompa.c: 179: if(M._MODULUJ&&!DtIN._err_IN&&!M._RPM_CW&&RTS(15)>10)
 43705  009888  AB71               	btfss	(_M+17)& (0+255),5,b
 43706  00988A  D013               	goto	l4209
 43707                           
 43708                           ; BSR set to: 0
 43709  00988C  0101               	movlb	1	; () banked
 43710  00988E  B136               	btfsc	_DtIN& (0+255),0,b
 43711  009890  D010               	goto	l4209
 43712                           
 43713                           ; BSR set to: 1
 43714  009892  0100               	movlb	0	; () banked
 43715  009894  BF7B               	btfsc	(_M+27)& (0+255),7,b
 43716  009896  D00D               	goto	l4209
 43717                           
 43718                           ; BSR set to: 0
 43719  009898  0E0F               	movlw	15
 43720  00989A  ECAF  F057         	call	_RTS
 43721  00989E  0100               	movlb	0	; () banked
 43722  0098A0  6FFA               	movwf	??_RglPmp1& (0+255),b
 43723  0098A2  0E0B               	movlw	11
 43724  0098A4  5DFA               	subwf	??_RglPmp1& (0+255),w,b
 43725  0098A6  E305               	bnc	l4209
 43726                           
 43727                           ; BSR set to: 0
 43728                           ;pompa.c: 180: {
 43729                           ;pompa.c: 181: PMP.APROC=ModPmp1(PMP.APROC);
 43730  0098A8  503A               	movf	_PMP+2,w,c
 43731  0098AA  EC2E  F032         	call	_ModPmp1
 43732  0098AE  6E3A               	movwf	_PMP+2,c
 43733                           
 43734                           ;pompa.c: 182: }
 43735  0098B0  D002               	goto	l41142
 43736  0098B2                     l4209:
 43737                           
 43738                           ;pompa.c: 183: else
 43739                           ;pompa.c: 184: {
 43740                           ;pompa.c: 185: PMP.APROC=PMP.MGPROC;
 43741  0098B2  C038  F03A         	movff	_PMP,_PMP+2
 43742  0098B6                     l41142:
 43743                           
 43744                           ;pompa.c: 186: }
 43745                           ;pompa.c: 187: WritePWM2(ProcToPmpPwm(PMP.APROC));
 43746  0098B6  503A               	movf	_PMP+2,w,c
 43747  0098B8  EC8C  F052         	call	_ProcToPmpPwm
 43748  0098BC  EFAC  F05A         	goto	_WritePWM2
 43749  0098C0                     __end_of_RglPmp1:
 43750                           	opt stack 0
 43751                           tblptru	equ	0xFF8
 43752                           tblptrh	equ	0xFF7
 43753                           tblptrl	equ	0xFF6
 43754                           tablat	equ	0xFF5
 43755                           prodh	equ	0xFF4
 43756                           prodl	equ	0xFF3
 43757                           intcon	equ	0xFF2
 43758                           postinc0	equ	0xFEE
 43759                           wreg	equ	0xFE8
 43760                           indf1	equ	0xFE7
 43761                           postinc1	equ	0xFE6
 43762                           postdec1	equ	0xFE5
 43763                           fsr1h	equ	0xFE2
 43764                           fsr1l	equ	0xFE1
 43765                           indf2	equ	0xFDF
 43766                           postinc2	equ	0xFDE
 43767                           postdec2	equ	0xFDD
 43768                           fsr2h	equ	0xFDA
 43769                           fsr2l	equ	0xFD9
 43770                           status	equ	0xFD8
 43771                           
 43772 ;; *************** function _ModPmp1 *****************
 43773 ;; Defined at:
 43774 ;;		line 39 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 43775 ;; Parameters:    Size  Location     Type
 43776 ;;  p               1    wreg     unsigned char 
 43777 ;; Auto vars:     Size  Location     Type
 43778 ;;  p               1    0[BANK0 ] unsigned char 
 43779 ;;  ppwm            1    4[BANK0 ] unsigned char 
 43780 ;;  pup             1    3[BANK0 ] unsigned char 
 43781 ;;  pdw             1    2[BANK0 ] unsigned char 
 43782 ;;  tim             1    1[BANK0 ] unsigned char 
 43783 ;; Return value:  Size  Location     Type
 43784 ;;                  1    wreg      unsigned char 
 43785 ;; Registers used:
 43786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43787 ;; Tracked objects:
 43788 ;;		On entry : F/0
 43789 ;;		On exit  : F/0
 43790 ;;		Unchanged: 0/0
 43791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43793 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43794 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43795 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43796 ;;Total ram usage:       10 bytes
 43797 ;; Hardware stack levels used:    1
 43798 ;; Hardware stack levels required when called:    5
 43799 ;; This function calls:
 43800 ;;		_RTdS
 43801 ;;		_StartRTdS
 43802 ;;		_Twyzsza
 43803 ;;		_Tnizsza
 43804 ;; This function is called by:
 43805 ;;		_RglPmp1
 43806 ;; This function uses a non-reentrant model
 43807 ;;
 43808                           
 43809                           	psect	text205
 43810  00645C                     __ptext205:
 43811                           	opt stack 0
 43812  00645C                     _ModPmp1:
 43813                           	opt stack 23
 43814                           
 43815                           ; BSR set to: 0
 43816                           ;ModPmp1@p stored from wreg
 43817  00645C  CFE8 F0F3          	movff	wreg,ModPmp1@p
 43818                           
 43819                           ; BSR set to: 0
 43820                           ;pompa.c: 40: unsigned char ppwm, tim, pup, pdw;
 43821                           ;pompa.c: 42: ppwm=p;
 43822  006460  C0F3  F0F7         	movff	ModPmp1@p,ModPmp1@ppwm
 43823                           
 43824                           ; BSR set to: 0
 43825                           ;pompa.c: 44: if(rgl.fz||ppwm!=PMP.MGPROC)
 43826  006464  B427               	btfsc	_rgl,2,c
 43827  006466  D004               	goto	l41002
 43828                           
 43829                           ; BSR set to: 0
 43830  006468  5038               	movf	_PMP,w,c
 43831  00646A  19F7               	xorwf	ModPmp1@ppwm& (0+255),w,b
 43832  00646C  E101 D0B7          	bz	l41108
 43833  006470                     l41002:
 43834                           
 43835                           ; BSR set to: 0
 43836                           ;pompa.c: 45: {
 43837                           ;pompa.c: 47: if(DtIN.DIN2>DtIN.DDLT)
 43838  006470  0101               	movlb	1	; () banked
 43839  006472  513A               	movf	(_DtIN+4)& (0+255),w,b
 43840  006474  613B               	cpfslt	(_DtIN+5)& (0+255),b
 43841  006476  D017               	goto	l41014
 43842                           
 43843                           ; BSR set to: 1
 43844                           ;pompa.c: 48: {
 43845                           ;pompa.c: 50: tim=100;
 43846  006478  0E64               	movlw	100
 43847  00647A  0100               	movlb	0	; () banked
 43848  00647C  6FF4               	movwf	ModPmp1@tim& (0+255),b
 43849                           
 43850                           ; BSR set to: 0
 43851                           ;pompa.c: 51: if(DtIN.DIN2-DtIN.DDLT==2) tim=120;
 43852  00647E  0101               	movlb	1	; () banked
 43853  006480  513B               	movf	(_DtIN+5)& (0+255),w,b
 43854  006482  C13A  F022         	movff	_DtIN+4,??_ModPmp1
 43855  006486  D8D5               	call	PL180	;call to abstracted procedure
 43856  006488  E102               	bnz	l41010
 43857                           
 43858                           ; BSR set to: 1
 43859  00648A  0E78               	movlw	120
 43860  00648C  D020               	goto	L88
 43861  00648E                     l41010:
 43862                           
 43863                           ; BSR set to: 1
 43864                           ;pompa.c: 52: else
 43865                           ;pompa.c: 53: if(DtIN.DIN2-DtIN.DDLT==1) tim=150;
 43866  00648E  513B               	movf	(_DtIN+5)& (0+255),w,b
 43867  006490  C13A  F022         	movff	_DtIN+4,??_ModPmp1
 43868  006494  6A23               	clrf	(??_ModPmp1+1)& (0+255),c
 43869  006496  5E22               	subwf	??_ModPmp1,f,c
 43870  006498  0E00               	movlw	0
 43871  00649A  5A23               	subwfb	??_ModPmp1+1,f,c
 43872  00649C  0422               	decf	??_ModPmp1,w,c
 43873  00649E  1023               	iorwf	??_ModPmp1+1,w,c
 43874  0064A0  E118               	bnz	l41024
 43875  0064A2                     l41012:
 43876                           
 43877                           ; BSR set to: 1
 43878  0064A2  0E96               	movlw	150
 43879  0064A4  D014               	goto	L88
 43880  0064A6                     l41014:
 43881                           
 43882                           ; BSR set to: 1
 43883                           ;pompa.c: 55: else
 43884                           ;pompa.c: 56: {
 43885                           ;pompa.c: 58: tim=120;
 43886  0064A6  0E78               	movlw	120
 43887  0064A8  0100               	movlb	0	; () banked
 43888  0064AA  6FF4               	movwf	ModPmp1@tim& (0+255),b
 43889                           
 43890                           ; BSR set to: 0
 43891                           ;pompa.c: 59: if(DtIN.DDLT-DtIN.DIN2==2) tim=150;
 43892  0064AC  0101               	movlb	1	; () banked
 43893  0064AE  513A               	movf	(_DtIN+4)& (0+255),w,b
 43894  0064B0  C13B  F022         	movff	_DtIN+5,??_ModPmp1
 43895  0064B4  D8BE               	call	PL180	;call to abstracted procedure
 43896  0064B6  E0F5               	bz	l41012
 43897                           
 43898                           ; BSR set to: 1
 43899                           ;pompa.c: 60: else
 43900                           ;pompa.c: 61: if(DtIN.DDLT-DtIN.DIN2==1) tim=180;
 43901  0064B8  513A               	movf	(_DtIN+4)& (0+255),w,b
 43902  0064BA  C13B  F022         	movff	_DtIN+5,??_ModPmp1
 43903  0064BE  6A23               	clrf	(??_ModPmp1+1)& (0+255),c
 43904  0064C0  5E22               	subwf	??_ModPmp1,f,c
 43905  0064C2  0E00               	movlw	0
 43906  0064C4  5A23               	subwfb	??_ModPmp1+1,f,c
 43907  0064C6  0422               	decf	??_ModPmp1,w,c
 43908  0064C8  1023               	iorwf	??_ModPmp1+1,w,c
 43909  0064CA  E103               	bnz	l41024
 43910                           
 43911                           ; BSR set to: 1
 43912  0064CC  0EB4               	movlw	180
 43913  0064CE                     L88:
 43914  0064CE  0100               	movlb	0	; () banked
 43915  0064D0  6FF4               	movwf	ModPmp1@tim& (0+255),b
 43916  0064D2                     l41024:
 43917                           
 43918                           ;pompa.c: 62: }
 43919                           ;pompa.c: 63: pup=0;
 43920  0064D2  0100               	movlb	0	; () banked
 43921  0064D4  6BF6               	clrf	ModPmp1@pup& (0+255),b
 43922                           
 43923                           ; BSR set to: 0
 43924                           ;pompa.c: 64: pdw=0;
 43925  0064D6  6BF5               	clrf	ModPmp1@pdw& (0+255),b
 43926                           
 43927                           ; BSR set to: 0
 43928                           ;pompa.c: 65: if((RTdS(8)>tim)||(ppwm<=PMP.MDPROC)||(ppwm>=PMP.MGPROC))
 43929  0064D8  0E08               	movlw	8
 43930  0064DA  ECD5  F057         	call	_RTdS
 43931  0064DE  0100               	movlb	0	; () banked
 43932  0064E0  5DF4               	subwf	ModPmp1@tim& (0+255),w,b
 43933  0064E2  E306               	bnc	l41034
 43934                           
 43935                           ; BSR set to: 0
 43936  0064E4  51F7               	movf	ModPmp1@ppwm& (0+255),w,b
 43937  0064E6  6039               	cpfslt	_PMP+1,c
 43938  0064E8  D003               	goto	l41034
 43939                           
 43940                           ; BSR set to: 0
 43941  0064EA  5038               	movf	_PMP,w,c
 43942  0064EC  5DF7               	subwf	ModPmp1@ppwm& (0+255),w,b
 43943  0064EE  E37B               	bnc	l41112
 43944  0064F0                     l41034:
 43945                           
 43946                           ; BSR set to: 0
 43947                           ;pompa.c: 66: {
 43948                           ;pompa.c: 67: StartRTdS(8);
 43949  0064F0  0E08               	movlw	8
 43950  0064F2  ECC2  F057         	call	_StartRTdS
 43951                           
 43952                           ; BSR set to: 1
 43953                           ;pompa.c: 70: if(rgl.tmp_pwm<=PWM.MINPWM)
 43954                           
 43955                           ; BSR set to: 1
 43956                           ;pompa.c: 69: if(!pup)
 43957  0064F6  5030               	movf	_rgl+9,w,c
 43958  0064F8  0100               	movlb	0	; () banked
 43959  0064FA  5DB3               	subwf	(_PWM+32)& (0+255),w,b	;volatile
 43960  0064FC  E312               	bnc	l41052
 43961                           
 43962                           ; BSR set to: 0
 43963                           ;pompa.c: 71: {
 43964                           ;pompa.c: 72: if(Twyzsza(2)||Tnizsza(2))
 43965  0064FE  0E02               	movlw	2
 43966  006500  EC34  F055         	call	_Twyzsza
 43967  006504  E204               	bc	l41044
 43968                           
 43969                           ; BSR set to: 0
 43970  006506  0E02               	movlw	2
 43971  006508  EC8F  F059         	call	_Tnizsza
 43972  00650C  E30A               	bnc	l41052
 43973  00650E                     l41044:
 43974                           
 43975                           ; BSR set to: 0
 43976                           ;pompa.c: 73: {
 43977                           ;pompa.c: 74: if(ppwm<PMP.MGPROC)
 43978  00650E  5038               	movf	_PMP,w,c
 43979  006510  61F7               	cpfslt	ModPmp1@ppwm& (0+255),b
 43980  006512  D007               	goto	l41052
 43981                           
 43982                           ; BSR set to: 0
 43983                           ;pompa.c: 75: {
 43984                           ;pompa.c: 76: if(((ppwm+1)<PMP.MGPROC))
 43985  006514  5038               	movf	_PMP,w,c
 43986  006516  D86A               	call	PL58	;call to abstracted procedure
 43987  006518  E202               	bc	l4173
 43988                           
 43989                           ; BSR set to: 0
 43990                           ;pompa.c: 77: {
 43991                           ;pompa.c: 78: ppwm+=1;
 43992                           
 43993                           ; BSR set to: 0
 43994                           ;pompa.c: 79: pup=1;
 43995  00651A  D893               	call	PL238	;call to abstracted procedure
 43996                           
 43997                           ;pompa.c: 80: }
 43998  00651C  D002               	goto	l41052
 43999  00651E                     l4173:
 44000                           
 44001                           ; BSR set to: 0
 44002                           ;pompa.c: 81: else ppwm=PMP.MGPROC;
 44003  00651E  C038  F0F7         	movff	_PMP,ModPmp1@ppwm
 44004  006522                     l41052:
 44005                           
 44006                           ; BSR set to: 0
 44007                           ;pompa.c: 82: }
 44008                           ;pompa.c: 83: }
 44009                           ;pompa.c: 84: }
 44010                           ;pompa.c: 86: if(rgl.tmp_pwm>PWM.MINPWM||((rgl.tmp_pwm<=PWM.MINPWM)&&!Twyzsza(1)))
 44011  006522  5030               	movf	_rgl+9,w,c
 44012  006524  5DB3               	subwf	(_PWM+32)& (0+255),w,b	;volatile
 44013  006526  E307               	bnc	l41058
 44014                           
 44015                           ; BSR set to: 0
 44016  006528  5030               	movf	_rgl+9,w,c
 44017  00652A  5DB3               	subwf	(_PWM+32)& (0+255),w,b	;volatile
 44018  00652C  E32A               	bnc	l41080
 44019                           
 44020                           ; BSR set to: 0
 44021  00652E  0E01               	movlw	1
 44022  006530  EC34  F055         	call	_Twyzsza
 44023  006534  E226               	bc	l41080
 44024  006536                     l41058:
 44025                           
 44026                           ; BSR set to: 0
 44027                           ;pompa.c: 87: {
 44028                           ;pompa.c: 88: if(DtIN.DIN<DtIN.DDLT)
 44029  006536  0101               	movlb	1	; () banked
 44030  006538  513B               	movf	(_DtIN+5)& (0+255),w,b
 44031  00653A  6139               	cpfslt	(_DtIN+3)& (0+255),b
 44032  00653C  D022               	goto	l41080
 44033                           
 44034                           ; BSR set to: 1
 44035                           ;pompa.c: 91: if(ppwm>PMP.MDPROC)
 44036                           
 44037                           ; BSR set to: 1
 44038                           ;pompa.c: 89: {
 44039                           ;pompa.c: 90: if(!pdw)
 44040  00653E  0100               	movlb	0	; () banked
 44041  006540  51F7               	movf	ModPmp1@ppwm& (0+255),w,b
 44042  006542  6039               	cpfslt	_PMP+1,c
 44043  006544  D00B               	goto	l4179
 44044                           
 44045                           ; BSR set to: 0
 44046                           ;pompa.c: 92: {
 44047                           ;pompa.c: 93: if(((ppwm-2)>PMP.MDPROC))
 44048  006546  0EFE               	movlw	254
 44049  006548  D86B               	call	PL108	;call to abstracted procedure
 44050  00654A  D861               	call	PL72	;call to abstracted procedure
 44051  00654C  E205               	bc	l4181
 44052                           
 44053                           ; BSR set to: 0
 44054                           ;pompa.c: 94: {
 44055                           ;pompa.c: 95: ppwm-=2;
 44056  00654E  0E02               	movlw	2
 44057  006550  5FF7               	subwf	ModPmp1@ppwm& (0+255),f,b
 44058                           
 44059                           ; BSR set to: 0
 44060                           ;pompa.c: 96: pdw=1;
 44061  006552  0E01               	movlw	1
 44062  006554  6FF5               	movwf	ModPmp1@pdw& (0+255),b
 44063                           
 44064                           ;pompa.c: 97: }
 44065  006556  D002               	goto	l4179
 44066  006558                     l4181:
 44067                           
 44068                           ; BSR set to: 0
 44069                           ;pompa.c: 98: else ppwm=PMP.MDPROC;
 44070  006558  C039  F0F7         	movff	_PMP+1,ModPmp1@ppwm
 44071  00655C                     l4179:
 44072                           
 44073                           ; BSR set to: 0
 44074                           ;pompa.c: 99: }
 44075                           ;pompa.c: 100: if(!pdw)
 44076  00655C  67F5               	tstfsz	ModPmp1@pdw& (0+255),b
 44077  00655E  D011               	goto	l41080
 44078                           
 44079                           ; BSR set to: 0
 44080                           ;pompa.c: 101: if(DtIN.DIN<DtIN.DIN2)
 44081  006560  0101               	movlb	1	; () banked
 44082  006562  513A               	movf	(_DtIN+4)& (0+255),w,b
 44083  006564  6139               	cpfslt	(_DtIN+3)& (0+255),b
 44084  006566  D00D               	goto	l41080
 44085                           
 44086                           ; BSR set to: 1
 44087                           ;pompa.c: 102: {
 44088                           ;pompa.c: 103: if(ppwm>PMP.MDPROC)
 44089  006568  0100               	movlb	0	; () banked
 44090  00656A  51F7               	movf	ModPmp1@ppwm& (0+255),w,b
 44091  00656C  6039               	cpfslt	_PMP+1,c
 44092  00656E  D009               	goto	l41080
 44093                           
 44094                           ; BSR set to: 0
 44095                           ;pompa.c: 104: {
 44096                           ;pompa.c: 105: if(((ppwm-2)>PMP.MDPROC))
 44097  006570  0EFE               	movlw	254
 44098  006572  D856               	call	PL108	;call to abstracted procedure
 44099  006574  D84C               	call	PL72	;call to abstracted procedure
 44100  006576  E203               	bc	l4186
 44101                           
 44102                           ; BSR set to: 0
 44103                           ;pompa.c: 106: {
 44104                           ;pompa.c: 107: ppwm-=2;
 44105  006578  0E02               	movlw	2
 44106  00657A  5FF7               	subwf	ModPmp1@ppwm& (0+255),f,b
 44107                           
 44108                           ; BSR set to: 0
 44109                           ;pompa.c: 109: }
 44110  00657C  D002               	goto	l41080
 44111  00657E                     l4186:
 44112                           
 44113                           ; BSR set to: 0
 44114                           ;pompa.c: 110: else ppwm=PMP.MDPROC;
 44115  00657E  C039  F0F7         	movff	_PMP+1,ModPmp1@ppwm
 44116  006582                     l41080:
 44117                           
 44118                           ;pompa.c: 111: }
 44119                           ;pompa.c: 112: }
 44120                           ;pompa.c: 113: }
 44121                           ;pompa.c: 114: }
 44122                           ;pompa.c: 116: if(rgl.tmp_pwm<PWM.MAXPWM||((rgl.tmp_pwm>=PWM.MAXPWM)&&!Tnizsza(1)))
 44123  006582  0100               	movlb	0	; () banked
 44124  006584  51B4               	movf	(_PWM+33)& (0+255),w,b	;volatile
 44125  006586  5C30               	subwf	_rgl+9,w,c
 44126  006588  E307               	bnc	l41086
 44127                           
 44128                           ; BSR set to: 0
 44129  00658A  51B4               	movf	(_PWM+33)& (0+255),w,b	;volatile
 44130  00658C  5C30               	subwf	_rgl+9,w,c
 44131  00658E  E32B               	bnc	l41112
 44132                           
 44133                           ; BSR set to: 0
 44134  006590  0E01               	movlw	1
 44135  006592  EC8F  F059         	call	_Tnizsza
 44136  006596  E227               	bc	l41112
 44137  006598                     l41086:
 44138                           
 44139                           ; BSR set to: 0
 44140                           ;pompa.c: 117: {
 44141                           ;pompa.c: 118: if(DtIN.DIN>DtIN.DDLT)
 44142  006598  0101               	movlb	1	; () banked
 44143  00659A  5139               	movf	(_DtIN+3)& (0+255),w,b
 44144  00659C  613B               	cpfslt	(_DtIN+5)& (0+255),b
 44145  00659E  D023               	goto	l41112
 44146                           
 44147                           ; BSR set to: 1
 44148                           ;pompa.c: 119: {
 44149                           ;pompa.c: 120: if(!pup)
 44150  0065A0  0100               	movlb	0	; () banked
 44151  0065A2  67F6               	tstfsz	ModPmp1@pup& (0+255),b
 44152  0065A4  D00A               	goto	l4192
 44153                           
 44154                           ; BSR set to: 0
 44155                           ;pompa.c: 121: if(ppwm<PMP.MGPROC)
 44156  0065A6  5038               	movf	_PMP,w,c
 44157  0065A8  61F7               	cpfslt	ModPmp1@ppwm& (0+255),b
 44158  0065AA  D007               	goto	l4192
 44159                           
 44160                           ; BSR set to: 0
 44161                           ;pompa.c: 122: {
 44162                           ;pompa.c: 123: if(((ppwm+1)<PMP.MGPROC))
 44163  0065AC  5038               	movf	_PMP,w,c
 44164  0065AE  D81E               	call	PL58	;call to abstracted procedure
 44165  0065B0  E202               	bc	l4194
 44166                           
 44167                           ; BSR set to: 0
 44168                           ;pompa.c: 124: {
 44169                           ;pompa.c: 125: ppwm+=1;
 44170                           
 44171                           ; BSR set to: 0
 44172                           ;pompa.c: 126: pup=1;
 44173  0065B2  D847               	call	PL238	;call to abstracted procedure
 44174                           
 44175                           ;pompa.c: 127: }
 44176  0065B4  D002               	goto	l4192
 44177  0065B6                     l4194:
 44178                           
 44179                           ; BSR set to: 0
 44180                           ;pompa.c: 128: else ppwm=PMP.MGPROC;
 44181  0065B6  C038  F0F7         	movff	_PMP,ModPmp1@ppwm
 44182  0065BA                     l4192:
 44183                           
 44184                           ; BSR set to: 0
 44185                           ;pompa.c: 129: }
 44186                           ;pompa.c: 130: if(!pup)
 44187  0065BA  67F6               	tstfsz	ModPmp1@pup& (0+255),b
 44188  0065BC  D014               	goto	l41112
 44189                           
 44190                           ; BSR set to: 0
 44191                           ;pompa.c: 131: if(DtIN.DIN>DtIN.DIN2)
 44192  0065BE  0101               	movlb	1	; () banked
 44193  0065C0  5139               	movf	(_DtIN+3)& (0+255),w,b
 44194  0065C2  613A               	cpfslt	(_DtIN+4)& (0+255),b
 44195  0065C4  D010               	goto	l41112
 44196                           
 44197                           ; BSR set to: 1
 44198                           ;pompa.c: 132: {
 44199                           ;pompa.c: 133: if(ppwm<PMP.MGPROC)
 44200  0065C6  5038               	movf	_PMP,w,c
 44201  0065C8  0100               	movlb	0	; () banked
 44202  0065CA  61F7               	cpfslt	ModPmp1@ppwm& (0+255),b
 44203  0065CC  D00C               	goto	l41112
 44204                           
 44205                           ; BSR set to: 0
 44206                           ;pompa.c: 134: {
 44207                           ;pompa.c: 135: if(((ppwm+1)<PMP.MGPROC))
 44208  0065CE  5038               	movf	_PMP,w,c
 44209  0065D0  D80D               	call	PL58	;call to abstracted procedure
 44210  0065D2  E202               	bc	l4199
 44211                           
 44212                           ; BSR set to: 0
 44213                           ;pompa.c: 136: {
 44214                           ;pompa.c: 137: ppwm+=1;
 44215  0065D4  2BF7               	incf	ModPmp1@ppwm& (0+255),f,b
 44216                           
 44217                           ; BSR set to: 0
 44218                           ;pompa.c: 139: }
 44219  0065D6  D007               	goto	l41112
 44220  0065D8                     l4199:
 44221                           
 44222                           ;pompa.c: 140: else ppwm=PMP.MGPROC;
 44223  0065D8  C038  F0F7         	movff	_PMP,ModPmp1@ppwm
 44224  0065DC  D004               	goto	l41112
 44225  0065DE                     l41108:
 44226                           
 44227                           ; BSR set to: 0
 44228                           ;pompa.c: 148: else
 44229                           ;pompa.c: 149: {
 44230                           ;pompa.c: 150: StartRTdS(8);
 44231  0065DE  0E08               	movlw	8
 44232  0065E0  ECC2  F057         	call	_StartRTdS
 44233  0065E4  D7F9               	goto	l4199
 44234  0065E6                     l41112:
 44235                           
 44236                           ;pompa.c: 152: }
 44237                           ;pompa.c: 153: return ppwm;
 44238  0065E6  0100               	movlb	0	; () banked
 44239  0065E8  51F7               	movf	ModPmp1@ppwm& (0+255),w,b
 44240                           
 44241                           ; BSR set to: 0
 44242  0065EA  0012               	return	
 44243  0065EC                     __end_of_ModPmp1:
 44244                           	opt stack 0
 44245  0065EC                     PL58:
 44246                           	opt stack 23
 44247  0065EC  6E22               	movwf	??_ModPmp1& (0+255),c
 44248  0065EE  6A23               	clrf	(??_ModPmp1+1)& (0+255),c
 44249  0065F0  51F7               	movf	ModPmp1@ppwm& (0+255),w,b
 44250  0065F2  6E24               	movwf	(??_ModPmp1+2)& (0+255),c
 44251  0065F4  6A25               	clrf	(??_ModPmp1+3)& (0+255),c
 44252  0065F6  2A24               	incf	??_ModPmp1+2,f,c
 44253  0065F8  0E00               	movlw	0
 44254  0065FA  2225               	addwfc	??_ModPmp1+3,f,c
 44255  0065FC  5025               	movf	??_ModPmp1+3,w,c
 44256  0065FE  0A80               	xorlw	128
 44257  006600  6E26               	movwf	(??_ModPmp1+4)& (0+255),c
 44258  006602  5022               	movf	??_ModPmp1,w,c
 44259  006604  5C24               	subwf	??_ModPmp1+2,w,c
 44260  006606  5023               	movf	??_ModPmp1+1,w,c
 44261  006608  0A80               	xorlw	128
 44262  00660A  5826               	subwfb	(??_ModPmp1+4)& (0+255),w,c
 44263  00660C  0012               	return	
 44264  00660E                     __end_ofPL58:
 44265                           	opt stack 0
 44266  00660E                     PL72:
 44267                           	opt stack 23
 44268  00660E  5025               	movf	??_ModPmp1+3,w,c
 44269  006610  0A80               	xorlw	128
 44270  006612  6E26               	movwf	(??_ModPmp1+4)& (0+255),c
 44271  006614  5022               	movf	??_ModPmp1,w,c
 44272  006616  5C24               	subwf	??_ModPmp1+2,w,c
 44273  006618  5023               	movf	??_ModPmp1+1,w,c
 44274  00661A  0A80               	xorlw	128
 44275  00661C  5826               	subwfb	(??_ModPmp1+4)& (0+255),w,c
 44276  00661E  0012               	return	
 44277  006620                     __end_ofPL72:
 44278                           	opt stack 0
 44279  006620                     PL108:
 44280                           	opt stack 23
 44281  006620  25F7               	addwf	ModPmp1@ppwm& (0+255),w,b
 44282  006622  6E22               	movwf	??_ModPmp1& (0+255),c
 44283  006624  6A23               	clrf	(??_ModPmp1+1)& (0+255),c
 44284  006626  0EFF               	movlw	255
 44285  006628  2223               	addwfc	(??_ModPmp1+1)& (0+255),f,c
 44286  00662A  5039               	movf	_PMP+1,w,c
 44287  00662C  6E24               	movwf	(??_ModPmp1+2)& (0+255),c
 44288  00662E  6A25               	clrf	(??_ModPmp1+3)& (0+255),c
 44289  006630  0012               	return	
 44290  006632                     __end_ofPL108:
 44291                           	opt stack 0
 44292  006632                     PL180:
 44293                           	opt stack 23
 44294  006632  6A23               	clrf	(??_ModPmp1+1)& (0+255),c
 44295  006634  5E22               	subwf	??_ModPmp1,f,c
 44296  006636  0E00               	movlw	0
 44297  006638  5A23               	subwfb	??_ModPmp1+1,f,c
 44298  00663A  5022               	movf	??_ModPmp1,w,c
 44299  00663C  0A02               	xorlw	2
 44300  00663E  1023               	iorwf	??_ModPmp1+1,w,c
 44301  006640  0012               	return	
 44302  006642                     __end_ofPL180:
 44303                           	opt stack 0
 44304  006642                     PL238:
 44305                           	opt stack 23
 44306  006642  2BF7               	incf	ModPmp1@ppwm& (0+255),f,b
 44307  006644  0E01               	movlw	1
 44308  006646  6FF6               	movwf	ModPmp1@pup& (0+255),b
 44309  006648  0C01               	retlw	1
 44310  00664A                     __end_ofPL238:
 44311                           	opt stack 0
 44312                           tblptru	equ	0xFF8
 44313                           tblptrh	equ	0xFF7
 44314                           tblptrl	equ	0xFF6
 44315                           tablat	equ	0xFF5
 44316                           prodh	equ	0xFF4
 44317                           prodl	equ	0xFF3
 44318                           intcon	equ	0xFF2
 44319                           postinc0	equ	0xFEE
 44320                           wreg	equ	0xFE8
 44321                           indf1	equ	0xFE7
 44322                           postinc1	equ	0xFE6
 44323                           postdec1	equ	0xFE5
 44324                           fsr1h	equ	0xFE2
 44325                           fsr1l	equ	0xFE1
 44326                           indf2	equ	0xFDF
 44327                           postinc2	equ	0xFDE
 44328                           postdec2	equ	0xFDD
 44329                           fsr2h	equ	0xFDA
 44330                           fsr2l	equ	0xFD9
 44331                           status	equ	0xFD8
 44332                           
 44333 ;; *************** function _RglPmp2 *****************
 44334 ;; Defined at:
 44335 ;;		line 456 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 44336 ;; Parameters:    Size  Location     Type
 44337 ;;		None
 44338 ;; Auto vars:     Size  Location     Type
 44339 ;;		None
 44340 ;; Return value:  Size  Location     Type
 44341 ;;		None               void
 44342 ;; Registers used:
 44343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44344 ;; Tracked objects:
 44345 ;;		On entry : F/1
 44346 ;;		On exit  : F/0
 44347 ;;		Unchanged: 0/0
 44348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44351 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44352 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44353 ;;Total ram usage:        1 bytes
 44354 ;; Hardware stack levels used:    1
 44355 ;; Hardware stack levels required when called:    9
 44356 ;; This function calls:
 44357 ;;		_StartRTS
 44358 ;;		_ProcToPmpPwm
 44359 ;;		_WritePWM2
 44360 ;;		_RTS
 44361 ;;		_ModPmp2
 44362 ;; This function is called by:
 44363 ;;		_RglPmp
 44364 ;; This function uses a non-reentrant model
 44365 ;;
 44366                           
 44367                           	psect	text206
 44368  0098C0                     __ptext206:
 44369                           	opt stack 0
 44370  0098C0                     _RglPmp2:
 44371                           	opt stack 20
 44372                           
 44373                           ; BSR set to: 1
 44374                           ;pompa.c: 457: PMP.MGPROC=100;
 44375                           
 44376                           ; BSR set to: 0
 44377  0098C0  0E64               	movlw	100
 44378  0098C2  6E38               	movwf	_PMP,c
 44379                           
 44380                           ; BSR set to: 1
 44381                           ;pompa.c: 458: PMP.MDPROC=DtKNF.mdpm;
 44382  0098C4  C155  F039         	movff	_DtKNF+11,_PMP+1
 44383                           
 44384                           ; BSR set to: 1
 44385                           ;pompa.c: 461: if(!M._PRACA)
 44386  0098C8  0100               	movlb	0	; () banked
 44387  0098CA  B57B               	btfsc	(_M+27)& (0+255),2,b
 44388  0098CC  D010               	goto	l4321
 44389                           
 44390                           ; BSR set to: 0
 44391                           ;pompa.c: 462: {
 44392                           ;pompa.c: 463: DtIN.pop=0;
 44393  0098CE  0101               	movlb	1	; () banked
 44394  0098D0  6B49               	clrf	(_DtIN+19)& (0+255),b
 44395                           
 44396                           ; BSR set to: 1
 44397                           ;pompa.c: 464: StartRTS(15);
 44398  0098D2  0E0F               	movlw	15
 44399  0098D4  EC9C  F057         	call	_StartRTS
 44400                           
 44401                           ; BSR set to: 1
 44402                           ;pompa.c: 465: if(PORTDbits.RD2)
 44403  0098D8  A483               	btfss	3971,2,c	;volatile
 44404  0098DA  D003               	goto	l4322
 44405                           
 44406                           ; BSR set to: 1
 44407                           ;pompa.c: 466: {
 44408                           ;pompa.c: 467: PMP.APROC=PMP.MGPROC;
 44409  0098DC  C038  F03A         	movff	_PMP,_PMP+2
 44410                           
 44411                           ;pompa.c: 468: }
 44412  0098E0  D001               	goto	l41284
 44413  0098E2                     l4322:
 44414                           
 44415                           ; BSR set to: 1
 44416                           ;pompa.c: 469: else
 44417                           ;pompa.c: 470: {
 44418                           ;pompa.c: 471: PMP.APROC=0;
 44419  0098E2  6A3A               	clrf	_PMP+2,c
 44420  0098E4                     l41284:
 44421                           
 44422                           ; BSR set to: 1
 44423                           ;pompa.c: 472: }
 44424                           ;pompa.c: 473: WritePWM2(ProcToPmpPwm(PMP.APROC));
 44425  0098E4  503A               	movf	_PMP+2,w,c
 44426  0098E6  EC8C  F052         	call	_ProcToPmpPwm
 44427  0098EA  EFAC  F05A         	goto	_WritePWM2
 44428  0098EE                     l4321:
 44429                           
 44430                           ; BSR set to: 0
 44431                           ;pompa.c: 475: else
 44432                           ;pompa.c: 476: {
 44433                           ;pompa.c: 477: if(M._MODULUJ&&!DtIN._err_IN&&!M._RPM_CW&&RTS(15)>10)
 44434  0098EE  AB71               	btfss	(_M+17)& (0+255),5,b
 44435  0098F0  D015               	goto	l4325
 44436                           
 44437                           ; BSR set to: 0
 44438  0098F2  0101               	movlb	1	; () banked
 44439  0098F4  B136               	btfsc	_DtIN& (0+255),0,b
 44440  0098F6  D012               	goto	l4325
 44441                           
 44442                           ; BSR set to: 1
 44443  0098F8  0100               	movlb	0	; () banked
 44444  0098FA  BF7B               	btfsc	(_M+27)& (0+255),7,b
 44445  0098FC  D00F               	goto	l4325
 44446                           
 44447                           ; BSR set to: 0
 44448  0098FE  0E0F               	movlw	15
 44449  009900  ECAF  F057         	call	_RTS
 44450  009904  0102               	movlb	2	; () banked
 44451  009906  6FFD               	movwf	??_RglPmp2& (0+255),b
 44452  009908  0E0B               	movlw	11
 44453  00990A  5DFD               	subwf	??_RglPmp2& (0+255),w,b
 44454  00990C  E307               	bnc	l4325
 44455                           
 44456                           ; BSR set to: 2
 44457                           ;pompa.c: 478: {
 44458                           ;pompa.c: 479: if(rgl.fz)
 44459  00990E  A427               	btfss	_rgl,2,c
 44460  009910  D007               	goto	l41296
 44461                           
 44462                           ; BSR set to: 2
 44463                           ;pompa.c: 480: {
 44464                           ;pompa.c: 481: PMP.APROC=ModPmp2(PMP.APROC);
 44465  009912  503A               	movf	_PMP+2,w,c
 44466  009914  EC99  F026         	call	_ModPmp2
 44467  009918  6E3A               	movwf	_PMP+2,c
 44468  00991A  D002               	goto	l41296
 44469  00991C                     l4325:
 44470                           
 44471                           ;pompa.c: 484: else
 44472                           ;pompa.c: 485: {
 44473                           ;pompa.c: 486: PMP.APROC=PMP.MGPROC;
 44474  00991C  C038  F03A         	movff	_PMP,_PMP+2
 44475  009920                     l41296:
 44476                           
 44477                           ;pompa.c: 487: }
 44478                           ;pompa.c: 488: WritePWM2(ProcToPmpPwm(PMP.APROC));
 44479  009920  503A               	movf	_PMP+2,w,c
 44480  009922  EC8C  F052         	call	_ProcToPmpPwm
 44481  009926  EFAC  F05A         	goto	_WritePWM2
 44482  00992A                     __end_of_RglPmp2:
 44483                           	opt stack 0
 44484                           tblptru	equ	0xFF8
 44485                           tblptrh	equ	0xFF7
 44486                           tblptrl	equ	0xFF6
 44487                           tablat	equ	0xFF5
 44488                           prodh	equ	0xFF4
 44489                           prodl	equ	0xFF3
 44490                           intcon	equ	0xFF2
 44491                           postinc0	equ	0xFEE
 44492                           wreg	equ	0xFE8
 44493                           indf1	equ	0xFE7
 44494                           postinc1	equ	0xFE6
 44495                           postdec1	equ	0xFE5
 44496                           fsr1h	equ	0xFE2
 44497                           fsr1l	equ	0xFE1
 44498                           indf2	equ	0xFDF
 44499                           postinc2	equ	0xFDE
 44500                           postdec2	equ	0xFDD
 44501                           fsr2h	equ	0xFDA
 44502                           fsr2l	equ	0xFD9
 44503                           status	equ	0xFD8
 44504                           
 44505 ;; *************** function _StartRTS *****************
 44506 ;; Defined at:
 44507 ;;		line 70 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
 44508 ;; Parameters:    Size  Location     Type
 44509 ;;  Index           1    wreg     const unsigned char 
 44510 ;; Auto vars:     Size  Location     Type
 44511 ;;  Index           1   29[COMRAM] const unsigned char 
 44512 ;; Return value:  Size  Location     Type
 44513 ;;		None               void
 44514 ;; Registers used:
 44515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44516 ;; Tracked objects:
 44517 ;;		On entry : 0/0
 44518 ;;		On exit  : F/1
 44519 ;;		Unchanged: 0/0
 44520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44525 ;;Total ram usage:        1 bytes
 44526 ;; Hardware stack levels used:    1
 44527 ;; Hardware stack levels required when called:    4
 44528 ;; This function calls:
 44529 ;;		Nothing
 44530 ;; This function is called by:
 44531 ;;		_main
 44532 ;;		_DecERR
 44533 ;;		_Rozruch
 44534 ;;		_Wylacz
 44535 ;;		_VWybieg
 44536 ;;		_DetekcjaPrzeplywuWG
 44537 ;;		_OczekujNaPrzeplywWG
 44538 ;;		_RuszPlomien
 44539 ;;		_RuszCiag
 44540 ;;		_Rusz48
 44541 ;;		_Rusz48Z3
 44542 ;;		_KeyRes
 44543 ;;		_VZPauza
 44544 ;;		_ToReset
 44545 ;;		_EnKonf
 44546 ;;		_RglPmp1
 44547 ;;		_RglPmp2
 44548 ;;		_RglPmp
 44549 ;; This function uses a non-reentrant model
 44550 ;;
 44551                           
 44552                           	psect	text207
 44553  00AF38                     __ptext207:
 44554                           	opt stack 0
 44555  00AF38                     _StartRTS:
 44556                           	opt stack 23
 44557                           
 44558                           ; BSR set to: 0
 44559                           ;StartRTS@Index stored from wreg
 44560  00AF38  CFE8 F01E          	movff	wreg,StartRTS@Index
 44561                           
 44562                           ;rtimer.c: 71: if (Index>16-1) asm("RESET");
 44563  00AF3C  0E0F               	movlw	15
 44564  00AF3E  641E               	cpfsgt	StartRTS@Index,c
 44565  00AF40  D001               	goto	l29218
 44566  00AF42  00FF               	reset		;# 
 44567  00AF44                     l29218:
 44568                           
 44569                           ;rtimer.c: 72: Sk[Index].dS=0;
 44570  00AF44  501E               	movf	StartRTS@Index,w,c
 44571  00AF46  0D02               	mullw	2
 44572  00AF48  0101               	movlb	1	; () banked
 44573  00AF4A  ECB1  F03D         	call	PL120	;call to abstracted procedure
 44574  00AF4E  6ADF               	clrf	indf2,c
 44575                           
 44576                           ;rtimer.c: 73: Sk[Index].S=0;
 44577  00AF50  501E               	movf	StartRTS@Index,w,c
 44578  00AF52  0D02               	mullw	2
 44579  00AF54  ECBB  F057         	call	PL124	;call to abstracted procedure
 44580  00AF58  0E00               	movlw	0
 44581  00AF5A  6EDF               	movwf	indf2,c
 44582                           
 44583                           ; BSR set to: 1
 44584  00AF5C  0C00               	retlw	0
 44585  00AF5E                     __end_of_StartRTS:
 44586                           	opt stack 0
 44587                           tblptru	equ	0xFF8
 44588                           tblptrh	equ	0xFF7
 44589                           tblptrl	equ	0xFF6
 44590                           tablat	equ	0xFF5
 44591                           prodh	equ	0xFF4
 44592                           prodl	equ	0xFF3
 44593                           intcon	equ	0xFF2
 44594                           postinc0	equ	0xFEE
 44595                           wreg	equ	0xFE8
 44596                           indf1	equ	0xFE7
 44597                           postinc1	equ	0xFE6
 44598                           postdec1	equ	0xFE5
 44599                           fsr1h	equ	0xFE2
 44600                           fsr1l	equ	0xFE1
 44601                           indf2	equ	0xFDF
 44602                           postinc2	equ	0xFDE
 44603                           postdec2	equ	0xFDD
 44604                           fsr2h	equ	0xFDA
 44605                           fsr2l	equ	0xFD9
 44606                           status	equ	0xFD8
 44607                           
 44608 ;; *************** function _WritePWM2 *****************
 44609 ;; Defined at:
 44610 ;;		line 391 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
 44611 ;; Parameters:    Size  Location     Type
 44612 ;;  tpwm            1    wreg     const unsigned char 
 44613 ;; Auto vars:     Size  Location     Type
 44614 ;;  tpwm            1   29[COMRAM] const unsigned char 
 44615 ;; Return value:  Size  Location     Type
 44616 ;;		None               void
 44617 ;; Registers used:
 44618 ;;		wreg
 44619 ;; Tracked objects:
 44620 ;;		On entry : F/0
 44621 ;;		On exit  : F/0
 44622 ;;		Unchanged: FFFFFFF0/0
 44623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44628 ;;Total ram usage:        1 bytes
 44629 ;; Hardware stack levels used:    1
 44630 ;; Hardware stack levels required when called:    4
 44631 ;; This function calls:
 44632 ;;		Nothing
 44633 ;; This function is called by:
 44634 ;;		_main
 44635 ;;		_RglPmp1
 44636 ;;		_RglPmp2
 44637 ;;		_RglPmp
 44638 ;; This function uses a non-reentrant model
 44639 ;;
 44640                           
 44641                           	psect	text208
 44642  00B558                     __ptext208:
 44643                           	opt stack 0
 44644  00B558                     _WritePWM2:
 44645                           	opt stack 25
 44646                           
 44647                           ; BSR set to: 1
 44648                           ;WritePWM2@tpwm stored from wreg
 44649  00B558  CFE8 F01E          	movff	wreg,WritePWM2@tpwm
 44650                           
 44651                           ; BSR set to: 0
 44652                           ;pwm.c: 392: PWM._ENPWM2=0;
 44653  00B55C  9198               	bcf	(_PWM+5)& (0+255),0,b	;volatile
 44654                           
 44655                           ; BSR set to: 0
 44656                           ;pwm.c: 393: PWM.BufPWM2=tpwm;
 44657  00B55E  C01E  F099         	movff	WritePWM2@tpwm,_PWM+6	;volatile
 44658                           
 44659                           ; BSR set to: 0
 44660                           ;pwm.c: 394: PWM._ENPWM2=1;
 44661  00B562  8198               	bsf	(_PWM+5)& (0+255),0,b	;volatile
 44662                           
 44663                           ; BSR set to: 0
 44664  00B564  0012               	return	
 44665  00B566                     __end_of_WritePWM2:
 44666                           	opt stack 0
 44667                           tblptru	equ	0xFF8
 44668                           tblptrh	equ	0xFF7
 44669                           tblptrl	equ	0xFF6
 44670                           tablat	equ	0xFF5
 44671                           prodh	equ	0xFF4
 44672                           prodl	equ	0xFF3
 44673                           intcon	equ	0xFF2
 44674                           postinc0	equ	0xFEE
 44675                           wreg	equ	0xFE8
 44676                           indf1	equ	0xFE7
 44677                           postinc1	equ	0xFE6
 44678                           postdec1	equ	0xFE5
 44679                           fsr1h	equ	0xFE2
 44680                           fsr1l	equ	0xFE1
 44681                           indf2	equ	0xFDF
 44682                           postinc2	equ	0xFDE
 44683                           postdec2	equ	0xFDD
 44684                           fsr2h	equ	0xFDA
 44685                           fsr2l	equ	0xFD9
 44686                           status	equ	0xFD8
 44687                           
 44688 ;; *************** function _RTS *****************
 44689 ;; Defined at:
 44690 ;;		line 76 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
 44691 ;; Parameters:    Size  Location     Type
 44692 ;;  Index           1    wreg     const unsigned char 
 44693 ;; Auto vars:     Size  Location     Type
 44694 ;;  Index           1   29[COMRAM] const unsigned char 
 44695 ;; Return value:  Size  Location     Type
 44696 ;;                  1    wreg      unsigned char 
 44697 ;; Registers used:
 44698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44699 ;; Tracked objects:
 44700 ;;		On entry : 0/1
 44701 ;;		On exit  : F/1
 44702 ;;		Unchanged: 0/0
 44703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44708 ;;Total ram usage:        1 bytes
 44709 ;; Hardware stack levels used:    1
 44710 ;; Hardware stack levels required when called:    4
 44711 ;; This function calls:
 44712 ;;		Nothing
 44713 ;; This function is called by:
 44714 ;;		_DecSTR
 44715 ;;		_Rozruch
 44716 ;;		_Wylacz
 44717 ;;		_VWybieg
 44718 ;;		_DetekcjaPrzeplywuWG
 44719 ;;		_OczekujNaPrzeplywWG
 44720 ;;		_RuszPlomien
 44721 ;;		_RuszCiag
 44722 ;;		_ReloadCiag
 44723 ;;		_Rusz48
 44724 ;;		_Rusz48Z3
 44725 ;;		_KeyRes
 44726 ;;		_VZPauza
 44727 ;;		_ToReset
 44728 ;;		_RglPmp1
 44729 ;;		_RglPmp2
 44730 ;; This function uses a non-reentrant model
 44731 ;;
 44732                           
 44733                           	psect	text209
 44734  00AF5E                     __ptext209:
 44735                           	opt stack 0
 44736  00AF5E                     _RTS:
 44737                           	opt stack 23
 44738                           
 44739                           ; BSR set to: 0
 44740                           ;RTS@Index stored from wreg
 44741  00AF5E  CFE8 F01E          	movff	wreg,RTS@Index
 44742                           
 44743                           ;rtimer.c: 77: if (Index>16-1) asm("RESET");
 44744  00AF62  0E0F               	movlw	15
 44745  00AF64  641E               	cpfsgt	RTS@Index,c
 44746  00AF66  D001               	goto	l32778
 44747  00AF68  00FF               	reset		;# 
 44748  00AF6A                     l32778:
 44749                           
 44750                           ;rtimer.c: 78: return Sk[Index].S;
 44751  00AF6A  501E               	movf	RTS@Index,w,c
 44752  00AF6C  0D02               	mullw	2
 44753  00AF6E  0101               	movlb	1	; () banked
 44754  00AF70  D802               	call	PL124	;call to abstracted procedure
 44755  00AF72  50DF               	movf	indf2,w,c
 44756                           
 44757                           ; BSR set to: 1
 44758  00AF74  0012               	return	
 44759  00AF76                     __end_of_RTS:
 44760                           	opt stack 0
 44761  00AF76                     PL124:
 44762                           	opt stack 22
 44763  00AF76  0E01               	movlw	low (_Sk+1)	;volatile
 44764  00AF78  24F3               	addwf	prodl,w,c
 44765  00AF7A  6ED9               	movwf	fsr2l,c
 44766  00AF7C  0E01               	movlw	high (_Sk+1)	;volatile
 44767  00AF7E  20F4               	addwfc	prodh,w,c
 44768  00AF80  6EDA               	movwf	fsr2h,c
 44769  00AF82  0012               	return	
 44770  00AF84                     __end_ofPL124:
 44771                           	opt stack 0
 44772                           tblptru	equ	0xFF8
 44773                           tblptrh	equ	0xFF7
 44774                           tblptrl	equ	0xFF6
 44775                           tablat	equ	0xFF5
 44776                           prodh	equ	0xFF4
 44777                           prodl	equ	0xFF3
 44778                           intcon	equ	0xFF2
 44779                           postinc0	equ	0xFEE
 44780                           wreg	equ	0xFE8
 44781                           indf1	equ	0xFE7
 44782                           postinc1	equ	0xFE6
 44783                           postdec1	equ	0xFE5
 44784                           fsr1h	equ	0xFE2
 44785                           fsr1l	equ	0xFE1
 44786                           indf2	equ	0xFDF
 44787                           postinc2	equ	0xFDE
 44788                           postdec2	equ	0xFDD
 44789                           fsr2h	equ	0xFDA
 44790                           fsr2l	equ	0xFD9
 44791                           status	equ	0xFD8
 44792                           
 44793 ;; *************** function _ProcToPmpPwm *****************
 44794 ;; Defined at:
 44795 ;;		line 26 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 44796 ;; Parameters:    Size  Location     Type
 44797 ;;  prc             1    wreg     unsigned char 
 44798 ;; Auto vars:     Size  Location     Type
 44799 ;;  prc             1    4[BANK0 ] unsigned char 
 44800 ;;  p               2    5[BANK0 ] unsigned int 
 44801 ;; Return value:  Size  Location     Type
 44802 ;;                  1    wreg      unsigned char 
 44803 ;; Registers used:
 44804 ;;		wreg, status,2, status,0, cstack
 44805 ;; Tracked objects:
 44806 ;;		On entry : C/0
 44807 ;;		On exit  : F/0
 44808 ;;		Unchanged: FFFFFFF0/0
 44809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44811 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44813 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44814 ;;Total ram usage:        3 bytes
 44815 ;; Hardware stack levels used:    1
 44816 ;; Hardware stack levels required when called:    5
 44817 ;; This function calls:
 44818 ;;		___wmul
 44819 ;;		___lwdiv
 44820 ;; This function is called by:
 44821 ;;		_RglPmp1
 44822 ;;		_RglPmp2
 44823 ;;		_RglPmp
 44824 ;; This function uses a non-reentrant model
 44825 ;;
 44826                           
 44827                           	psect	text210
 44828  00A518                     __ptext210:
 44829                           	opt stack 0
 44830  00A518                     _ProcToPmpPwm:
 44831                           	opt stack 24
 44832                           
 44833                           ; BSR set to: 1
 44834                           ;ProcToPmpPwm@prc stored from wreg
 44835  00A518  CFE8 F0F7          	movff	wreg,ProcToPmpPwm@prc
 44836                           
 44837                           ;pompa.c: 27: unsigned int p;
 44838                           ;pompa.c: 29: if(prc>100) prc=100;
 44839  00A51C  0E64               	movlw	100
 44840  00A51E  0100               	movlb	0	; () banked
 44841  00A520  65F7               	cpfsgt	ProcToPmpPwm@prc& (0+255),b
 44842  00A522  D001               	goto	l35706
 44843                           
 44844                           ; BSR set to: 0
 44845  00A524  6FF7               	movwf	ProcToPmpPwm@prc& (0+255),b
 44846  00A526                     l35706:
 44847                           
 44848                           ; BSR set to: 0
 44849                           ;pompa.c: 30: p=PWM.HIPWM;
 44850  00A526  C09B  F0F8         	movff	_PWM+8,ProcToPmpPwm@p	;volatile
 44851  00A52A  6BF9               	clrf	(ProcToPmpPwm@p+1)& (0+255),b
 44852                           
 44853                           ; BSR set to: 0
 44854                           ;pompa.c: 31: p=(prc*p)/100;
 44855  00A52C  C0F8  F020         	movff	ProcToPmpPwm@p,?___wmul+2
 44856  00A530  C0F9  F021         	movff	ProcToPmpPwm@p+1,?___wmul+3
 44857  00A534  C0F7  F01E         	movff	ProcToPmpPwm@prc,?___wmul
 44858  00A538  6A1F               	clrf	?___wmul+1,c
 44859  00A53A  EC9C  F056         	call	___wmul	;wreg free
 44860  00A53E  C01E  F0F3         	movff	?___wmul,?___lwdiv
 44861  00A542  C01F  F0F4         	movff	?___wmul+1,?___lwdiv+1
 44862  00A546  6BF6               	clrf	(?___lwdiv+3)& (0+255),b
 44863  00A548  0E64               	movlw	100
 44864  00A54A  6FF5               	movwf	(?___lwdiv+2)& (0+255),b
 44865  00A54C  EC93  F051         	call	___lwdiv	;wreg free
 44866  00A550  C0F3  F0F8         	movff	?___lwdiv,ProcToPmpPwm@p
 44867  00A554  C0F4  F0F9         	movff	?___lwdiv+1,ProcToPmpPwm@p+1
 44868                           
 44869                           ; BSR set to: 0
 44870                           ;pompa.c: 32: return (unsigned char)p;
 44871  00A558  51F8               	movf	ProcToPmpPwm@p& (0+255),w,b
 44872                           
 44873                           ; BSR set to: 0
 44874  00A55A  0012               	return	
 44875  00A55C                     __end_of_ProcToPmpPwm:
 44876                           	opt stack 0
 44877                           tblptru	equ	0xFF8
 44878                           tblptrh	equ	0xFF7
 44879                           tblptrl	equ	0xFF6
 44880                           tablat	equ	0xFF5
 44881                           prodh	equ	0xFF4
 44882                           prodl	equ	0xFF3
 44883                           intcon	equ	0xFF2
 44884                           postinc0	equ	0xFEE
 44885                           wreg	equ	0xFE8
 44886                           indf1	equ	0xFE7
 44887                           postinc1	equ	0xFE6
 44888                           postdec1	equ	0xFE5
 44889                           fsr1h	equ	0xFE2
 44890                           fsr1l	equ	0xFE1
 44891                           indf2	equ	0xFDF
 44892                           postinc2	equ	0xFDE
 44893                           postdec2	equ	0xFDD
 44894                           fsr2h	equ	0xFDA
 44895                           fsr2l	equ	0xFD9
 44896                           status	equ	0xFD8
 44897                           
 44898 ;; *************** function _ModPmp2 *****************
 44899 ;; Defined at:
 44900 ;;		line 311 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 44901 ;; Parameters:    Size  Location     Type
 44902 ;;  p               1    wreg     unsigned char 
 44903 ;; Auto vars:     Size  Location     Type
 44904 ;;  p               1    5[BANK3 ] unsigned char 
 44905 ;;  ppwm            1    9[BANK3 ] unsigned char 
 44906 ;;  pup             1    8[BANK3 ] unsigned char 
 44907 ;;  pdw             1    7[BANK3 ] unsigned char 
 44908 ;;  tim             1    6[BANK3 ] unsigned char 
 44909 ;; Return value:  Size  Location     Type
 44910 ;;                  1    wreg      unsigned char 
 44911 ;; Registers used:
 44912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44913 ;; Tracked objects:
 44914 ;;		On entry : F/2
 44915 ;;		On exit  : D/1
 44916 ;;		Unchanged: 0/0
 44917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44919 ;;      Locals:         0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44920 ;;      Temps:          0       0       0       0       5       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44921 ;;      Totals:         0       0       0       0      10       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44922 ;;Total ram usage:       10 bytes
 44923 ;; Hardware stack levels used:    1
 44924 ;; Hardware stack levels required when called:    8
 44925 ;; This function calls:
 44926 ;;		_RetHI
 44927 ;;		_RetLO
 44928 ;;		_RetDelta
 44929 ;;		_StartRTdS
 44930 ;;		_RTdS
 44931 ;;		_Twyzsza
 44932 ;;		_Tnizsza
 44933 ;; This function is called by:
 44934 ;;		_RglPmp2
 44935 ;; This function uses a non-reentrant model
 44936 ;;
 44937                           
 44938                           	psect	text211
 44939  004D32                     __ptext211:
 44940                           	opt stack 0
 44941  004D32                     _ModPmp2:
 44942                           	opt stack 20
 44943                           
 44944                           ; BSR set to: 0
 44945                           ;ModPmp2@p stored from wreg
 44946  004D32  CFE8 F34B          	movff	wreg,ModPmp2@p
 44947                           
 44948                           ; BSR set to: 2
 44949                           ;pompa.c: 312: unsigned char ppwm, tim, pup, pdw;
 44950                           ;pompa.c: 315: DtIN.Eco5LO=25;
 44951  004D36  0E19               	movlw	25
 44952  004D38  0101               	movlb	1	; () banked
 44953  004D3A  6F42               	movwf	(_DtIN+12)& (0+255),b
 44954                           
 44955                           ;pompa.c: 316: DtIN.Eco5HI=55;
 44956  004D3C  0E37               	movlw	55
 44957  004D3E  6F41               	movwf	(_DtIN+11)& (0+255),b
 44958                           
 44959                           ;pompa.c: 317: if(DtIN.PPEco)
 44960  004D40  5140               	movf	(_DtIN+10)& (0+255),w,b
 44961  004D42  E01D               	bz	l4266
 44962                           
 44963                           ; BSR set to: 1
 44964                           ;pompa.c: 318: {
 44965                           ;pompa.c: 319: DtIN.HI=RetHI(DtCO.PPCO,DtIN.PPEco-1,80);
 44966  004D44  0540               	decf	(_DtIN+10)& (0+255),w,b
 44967  004D46  6E24               	movwf	?_RetHI,c
 44968  004D48  0E50               	movlw	80
 44969  004D4A  6E25               	movwf	?_RetHI+1,c
 44970  004D4C  0100               	movlb	0	; () banked
 44971  004D4E  51E8               	movf	(_DtCO+4)& (0+255),w,b
 44972  004D50  ECE0  F045         	call	_RetHI
 44973  004D54  0101               	movlb	1	; () banked
 44974  004D56  6F43               	movwf	(_DtIN+13)& (0+255),b
 44975                           
 44976                           ;pompa.c: 320: DtIN.LO=RetLO(DtCO.PPCO,DtIN.PPEco-1,10);
 44977  004D58  0540               	decf	(_DtIN+10)& (0+255),w,b
 44978  004D5A  6E24               	movwf	?_RetLO,c
 44979  004D5C  0E0A               	movlw	10
 44980  004D5E  6E25               	movwf	?_RetLO+1,c
 44981  004D60  0100               	movlb	0	; () banked
 44982  004D62  51E8               	movf	(_DtCO+4)& (0+255),w,b
 44983  004D64  EC7B  F046         	call	_RetLO
 44984  004D68  0101               	movlb	1	; () banked
 44985  004D6A  6F44               	movwf	(_DtIN+14)& (0+255),b
 44986                           
 44987                           ;pompa.c: 321: DtIN.delta=RetDelta(DtCO.PPCO,DtIN.PPEco-1);
 44988  004D6C  0540               	decf	(_DtIN+10)& (0+255),w,b
 44989  004D6E  6E26               	movwf	?_RetDelta,c
 44990  004D70  0100               	movlb	0	; () banked
 44991  004D72  51E8               	movf	(_DtCO+4)& (0+255),w,b
 44992  004D74  EC60  F054         	call	_RetDelta
 44993  004D78  0101               	movlb	1	; () banked
 44994  004D7A  6F48               	movwf	(_DtIN+18)& (0+255),b
 44995                           
 44996                           ;pompa.c: 322: }
 44997  004D7C  D002               	goto	l4267
 44998  004D7E                     l4266:
 44999                           
 45000                           ; BSR set to: 1
 45001                           ;pompa.c: 323: else
 45002                           ;pompa.c: 324: {
 45003                           ;pompa.c: 325: DtIN.HI=0;
 45004  004D7E  6B43               	clrf	(_DtIN+13)& (0+255),b
 45005                           
 45006                           ;pompa.c: 327: DtIN.delta=0;
 45007  004D80  6B48               	clrf	(_DtIN+18)& (0+255),b
 45008  004D82                     l4267:
 45009                           
 45010                           ; BSR set to: 1
 45011                           ;pompa.c: 328: }
 45012                           ;pompa.c: 329: if(!DtIN.delta)
 45013  004D82  6748               	tstfsz	(_DtIN+18)& (0+255),b
 45014  004D84  D005               	goto	l4268
 45015                           
 45016                           ; BSR set to: 1
 45017                           ;pompa.c: 330: {
 45018                           ;pompa.c: 331: StartRTdS(8);
 45019  004D86  0E08               	movlw	8
 45020  004D88  ECC2  F057         	call	_StartRTdS
 45021                           
 45022                           ; BSR set to: 1
 45023                           ;pompa.c: 332: return PMP.MGPROC;
 45024  004D8C  5038               	movf	_PMP,w,c
 45025  004D8E  0012               	return	
 45026  004D90                     l4268:
 45027                           
 45028                           ; BSR set to: 1
 45029                           ;pompa.c: 333: }
 45030                           ;pompa.c: 336: ppwm=p;
 45031  004D90  C34B  F34F         	movff	ModPmp2@p,ModPmp2@ppwm
 45032                           
 45033                           ;pompa.c: 338: if(rgl.fz||ppwm!=PMP.MGPROC)
 45034  004D94  B427               	btfsc	_rgl,2,c
 45035  004D96  D005               	goto	l4272
 45036                           
 45037                           ; BSR set to: 1
 45038  004D98  5038               	movf	_PMP,w,c
 45039  004D9A  0103               	movlb	3	; () banked
 45040  004D9C  194F               	xorwf	ModPmp2@ppwm& (0+255),w,b
 45041  004D9E  E101 D0AA          	bz	l41262
 45042  004DA2                     l4272:
 45043                           
 45044                           ;pompa.c: 339: {
 45045                           ;pompa.c: 341: DtIN.cDLT=DtIN.delta;
 45046  004DA2  C148  F13C         	movff	_DtIN+18,_DtIN+6
 45047                           
 45048                           ;pompa.c: 344: if(DtIN.DIN2>DtIN.cDLT)
 45049  004DA6  0101               	movlb	1	; () banked
 45050  004DA8  513A               	movf	(_DtIN+4)& (0+255),w,b
 45051  004DAA  613C               	cpfslt	(_DtIN+6)& (0+255),b
 45052  004DAC  D011               	goto	l41168
 45053                           
 45054                           ; BSR set to: 1
 45055                           ;pompa.c: 345: {
 45056                           ;pompa.c: 346: tim=50;
 45057  004DAE  0E32               	movlw	50
 45058  004DB0  0103               	movlb	3	; () banked
 45059  004DB2  6F4C               	movwf	ModPmp2@tim& (0+255),b
 45060                           
 45061                           ; BSR set to: 3
 45062                           ;pompa.c: 347: if(DtIN.DIN2-DtIN.cDLT==2) tim=100;
 45063  004DB4  D8D4               	call	PL168	;call to abstracted procedure
 45064  004DB6  5146               	movf	??_ModPmp2& (0+255),w,b
 45065  004DB8  0A02               	xorlw	2
 45066  004DBA  1147               	iorwf	(??_ModPmp2+1)& (0+255),w,b
 45067  004DBC  E102               	bnz	l41164
 45068  004DBE                     l41162:
 45069                           
 45070                           ; BSR set to: 3
 45071  004DBE  0E64               	movlw	100
 45072  004DC0  D005               	goto	L89
 45073  004DC2                     l41164:
 45074                           
 45075                           ; BSR set to: 3
 45076                           ;pompa.c: 348: else
 45077                           ;pompa.c: 349: if(DtIN.DIN2-DtIN.cDLT==1) tim=150;
 45078  004DC2  D8CD               	call	PL168	;call to abstracted procedure
 45079  004DC4  0546               	decf	??_ModPmp2& (0+255),w,b
 45080  004DC6  1147               	iorwf	(??_ModPmp2+1)& (0+255),w,b
 45081  004DC8  E10F               	bnz	l41178
 45082  004DCA                     l41166:
 45083                           
 45084                           ; BSR set to: 3
 45085  004DCA  0E96               	movlw	150
 45086  004DCC                     L89:
 45087  004DCC  6F4C               	movwf	ModPmp2@tim& (0+255),b
 45088  004DCE  D00C               	goto	l41178
 45089  004DD0                     l41168:
 45090                           
 45091                           ; BSR set to: 1
 45092                           ;pompa.c: 351: else
 45093                           ;pompa.c: 352: {
 45094                           ;pompa.c: 353: tim=80;
 45095  004DD0  0E50               	movlw	80
 45096  004DD2  0103               	movlb	3	; () banked
 45097  004DD4  6F4C               	movwf	ModPmp2@tim& (0+255),b
 45098                           
 45099                           ; BSR set to: 3
 45100                           ;pompa.c: 354: if(DtIN.cDLT-DtIN.DIN2==2) tim=100;
 45101  004DD6  D8B9               	call	PL164	;call to abstracted procedure
 45102  004DD8  5146               	movf	??_ModPmp2& (0+255),w,b
 45103  004DDA  0A02               	xorlw	2
 45104  004DDC  1147               	iorwf	(??_ModPmp2+1)& (0+255),w,b
 45105  004DDE  E0EF               	bz	l41162
 45106                           
 45107                           ; BSR set to: 3
 45108                           ;pompa.c: 355: else
 45109                           ;pompa.c: 356: if(DtIN.cDLT-DtIN.DIN2==1) tim=150;
 45110  004DE0  D8B4               	call	PL164	;call to abstracted procedure
 45111  004DE2  0546               	decf	??_ModPmp2& (0+255),w,b
 45112  004DE4  1147               	iorwf	(??_ModPmp2+1)& (0+255),w,b
 45113  004DE6  E0F1               	bz	l41166
 45114  004DE8                     l41178:
 45115                           
 45116                           ; BSR set to: 3
 45117                           ;pompa.c: 357: }
 45118                           ;pompa.c: 360: pup=0;
 45119  004DE8  6B4E               	clrf	ModPmp2@pup& (0+255),b
 45120                           
 45121                           ; BSR set to: 3
 45122                           ;pompa.c: 361: pdw=0;
 45123  004DEA  6B4D               	clrf	ModPmp2@pdw& (0+255),b
 45124                           
 45125                           ; BSR set to: 3
 45126                           ;pompa.c: 362: if((RTdS(8)>tim)||(ppwm<=PMP.MDPROC)||(ppwm>=PMP.MGPROC))
 45127  004DEC  0E08               	movlw	8
 45128  004DEE  ECD5  F057         	call	_RTdS
 45129  004DF2  0103               	movlb	3	; () banked
 45130  004DF4  5D4C               	subwf	ModPmp2@tim& (0+255),w,b
 45131  004DF6  E306               	bnc	l41188
 45132                           
 45133                           ; BSR set to: 3
 45134  004DF8  514F               	movf	ModPmp2@ppwm& (0+255),w,b
 45135  004DFA  6039               	cpfslt	_PMP+1,c
 45136  004DFC  D003               	goto	l41188
 45137                           
 45138                           ; BSR set to: 3
 45139  004DFE  5038               	movf	_PMP,w,c
 45140  004E00  5D4F               	subwf	ModPmp2@ppwm& (0+255),w,b
 45141  004E02  E37D               	bnc	l41266
 45142  004E04                     l41188:
 45143                           
 45144                           ; BSR set to: 3
 45145                           ;pompa.c: 363: {
 45146                           ;pompa.c: 364: StartRTdS(8);
 45147  004E04  0E08               	movlw	8
 45148  004E06  ECC2  F057         	call	_StartRTdS
 45149                           
 45150                           ; BSR set to: 1
 45151                           ;pompa.c: 367: if(rgl.tmp_pwm<=PWM.MINPWM)
 45152                           
 45153                           ; BSR set to: 1
 45154                           ;pompa.c: 366: if(!pup)
 45155  004E0A  5030               	movf	_rgl+9,w,c
 45156  004E0C  0100               	movlb	0	; () banked
 45157  004E0E  5DB3               	subwf	(_PWM+32)& (0+255),w,b	;volatile
 45158  004E10  E313               	bnc	l41206
 45159                           
 45160                           ; BSR set to: 0
 45161                           ;pompa.c: 368: {
 45162                           ;pompa.c: 369: if(Twyzsza(2)||Tnizsza(2))
 45163  004E12  0E02               	movlw	2
 45164  004E14  EC34  F055         	call	_Twyzsza
 45165  004E18  E204               	bc	l41198
 45166                           
 45167                           ; BSR set to: 0
 45168  004E1A  0E02               	movlw	2
 45169  004E1C  EC8F  F059         	call	_Tnizsza
 45170  004E20  E30B               	bnc	l41206
 45171  004E22                     l41198:
 45172                           
 45173                           ; BSR set to: 0
 45174                           ;pompa.c: 370: {
 45175                           ;pompa.c: 371: if(ppwm<PMP.MGPROC)
 45176  004E22  5038               	movf	_PMP,w,c
 45177  004E24  0103               	movlb	3	; () banked
 45178  004E26  614F               	cpfslt	ModPmp2@ppwm& (0+255),b
 45179  004E28  D007               	goto	l41206
 45180                           
 45181                           ; BSR set to: 3
 45182                           ;pompa.c: 372: {
 45183                           ;pompa.c: 373: if(((ppwm+1)<PMP.MGPROC))
 45184  004E2A  5038               	movf	_PMP,w,c
 45185  004E2C  D86B               	call	PL54	;call to abstracted procedure
 45186  004E2E  E202               	bc	l4290
 45187                           
 45188                           ; BSR set to: 3
 45189                           ;pompa.c: 374: {
 45190                           ;pompa.c: 375: ppwm+=1;
 45191                           
 45192                           ; BSR set to: 3
 45193                           ;pompa.c: 376: pup=1;
 45194  004E30  D8A0               	call	PL236	;call to abstracted procedure
 45195                           
 45196                           ;pompa.c: 377: }
 45197  004E32  D002               	goto	l41206
 45198  004E34                     l4290:
 45199                           
 45200                           ; BSR set to: 3
 45201                           ;pompa.c: 378: else ppwm=PMP.MGPROC;
 45202  004E34  C038  F34F         	movff	_PMP,ModPmp2@ppwm
 45203  004E38                     l41206:
 45204                           
 45205                           ;pompa.c: 379: }
 45206                           ;pompa.c: 380: }
 45207                           ;pompa.c: 381: }
 45208                           ;pompa.c: 383: if(rgl.tmp_pwm>PWM.MINPWM||((rgl.tmp_pwm<=PWM.MINPWM)&&!Twyzsza(1)))
 45209  004E38  5030               	movf	_rgl+9,w,c
 45210  004E3A  0100               	movlb	0	; () banked
 45211  004E3C  5DB3               	subwf	(_PWM+32)& (0+255),w,b	;volatile
 45212  004E3E  E307               	bnc	l41212
 45213                           
 45214                           ; BSR set to: 0
 45215  004E40  5030               	movf	_rgl+9,w,c
 45216  004E42  5DB3               	subwf	(_PWM+32)& (0+255),w,b	;volatile
 45217  004E44  E32A               	bnc	l41234
 45218                           
 45219                           ; BSR set to: 0
 45220  004E46  0E01               	movlw	1
 45221  004E48  EC34  F055         	call	_Twyzsza
 45222  004E4C  E226               	bc	l41234
 45223  004E4E                     l41212:
 45224                           
 45225                           ; BSR set to: 0
 45226                           ;pompa.c: 384: {
 45227                           ;pompa.c: 385: if(DtIN.DIN<DtIN.cDLT)
 45228  004E4E  0101               	movlb	1	; () banked
 45229  004E50  513C               	movf	(_DtIN+6)& (0+255),w,b
 45230  004E52  6139               	cpfslt	(_DtIN+3)& (0+255),b
 45231  004E54  D022               	goto	l41234
 45232                           
 45233                           ; BSR set to: 1
 45234                           ;pompa.c: 388: if(ppwm>PMP.MDPROC)
 45235                           
 45236                           ; BSR set to: 1
 45237                           ;pompa.c: 386: {
 45238                           ;pompa.c: 387: if(!pdw)
 45239  004E56  0103               	movlb	3	; () banked
 45240  004E58  514F               	movf	ModPmp2@ppwm& (0+255),w,b
 45241  004E5A  6039               	cpfslt	_PMP+1,c
 45242  004E5C  D00B               	goto	l4296
 45243                           
 45244                           ; BSR set to: 3
 45245                           ;pompa.c: 389: {
 45246                           ;pompa.c: 390: if(((ppwm-2)>PMP.MDPROC))
 45247  004E5E  0EFE               	movlw	254
 45248  004E60  D86B               	call	PL110	;call to abstracted procedure
 45249  004E62  D861               	call	PL74	;call to abstracted procedure
 45250  004E64  E205               	bc	l4298
 45251                           
 45252                           ; BSR set to: 3
 45253                           ;pompa.c: 391: {
 45254                           ;pompa.c: 392: ppwm-=2;
 45255  004E66  0E02               	movlw	2
 45256  004E68  5F4F               	subwf	ModPmp2@ppwm& (0+255),f,b
 45257                           
 45258                           ; BSR set to: 3
 45259                           ;pompa.c: 393: pdw=1;
 45260  004E6A  0E01               	movlw	1
 45261  004E6C  6F4D               	movwf	ModPmp2@pdw& (0+255),b
 45262                           
 45263                           ;pompa.c: 394: }
 45264  004E6E  D002               	goto	l4296
 45265  004E70                     l4298:
 45266                           
 45267                           ; BSR set to: 3
 45268                           ;pompa.c: 395: else ppwm=PMP.MDPROC;
 45269  004E70  C039  F34F         	movff	_PMP+1,ModPmp2@ppwm
 45270  004E74                     l4296:
 45271                           
 45272                           ; BSR set to: 3
 45273                           ;pompa.c: 396: }
 45274                           ;pompa.c: 397: if(!pdw)
 45275  004E74  674D               	tstfsz	ModPmp2@pdw& (0+255),b
 45276  004E76  D011               	goto	l41234
 45277                           
 45278                           ; BSR set to: 3
 45279                           ;pompa.c: 398: if(DtIN.DIN<DtIN.DIN2)
 45280  004E78  0101               	movlb	1	; () banked
 45281  004E7A  513A               	movf	(_DtIN+4)& (0+255),w,b
 45282  004E7C  6139               	cpfslt	(_DtIN+3)& (0+255),b
 45283  004E7E  D00D               	goto	l41234
 45284                           
 45285                           ; BSR set to: 1
 45286                           ;pompa.c: 399: {
 45287                           ;pompa.c: 400: if(ppwm>PMP.MDPROC)
 45288  004E80  0103               	movlb	3	; () banked
 45289  004E82  514F               	movf	ModPmp2@ppwm& (0+255),w,b
 45290  004E84  6039               	cpfslt	_PMP+1,c
 45291  004E86  D009               	goto	l41234
 45292                           
 45293                           ; BSR set to: 3
 45294                           ;pompa.c: 401: {
 45295                           ;pompa.c: 402: if(((ppwm-2)>PMP.MDPROC))
 45296  004E88  0EFE               	movlw	254
 45297  004E8A  D856               	call	PL110	;call to abstracted procedure
 45298  004E8C  D84C               	call	PL74	;call to abstracted procedure
 45299  004E8E  E203               	bc	l4303
 45300                           
 45301                           ; BSR set to: 3
 45302                           ;pompa.c: 403: {
 45303                           ;pompa.c: 404: ppwm-=2;
 45304  004E90  0E02               	movlw	2
 45305  004E92  5F4F               	subwf	ModPmp2@ppwm& (0+255),f,b
 45306                           
 45307                           ; BSR set to: 3
 45308                           ;pompa.c: 406: }
 45309  004E94  D002               	goto	l41234
 45310  004E96                     l4303:
 45311                           
 45312                           ; BSR set to: 3
 45313                           ;pompa.c: 407: else ppwm=PMP.MDPROC;
 45314  004E96  C039  F34F         	movff	_PMP+1,ModPmp2@ppwm
 45315  004E9A                     l41234:
 45316                           
 45317                           ;pompa.c: 408: }
 45318                           ;pompa.c: 409: }
 45319                           ;pompa.c: 410: }
 45320                           ;pompa.c: 411: }
 45321                           ;pompa.c: 413: if(rgl.tmp_pwm<PWM.MAXPWM||((rgl.tmp_pwm>=PWM.MAXPWM)&&!Tnizsza(1)))
 45322  004E9A  0100               	movlb	0	; () banked
 45323  004E9C  51B4               	movf	(_PWM+33)& (0+255),w,b	;volatile
 45324  004E9E  5C30               	subwf	_rgl+9,w,c
 45325  004EA0  E307               	bnc	l41240
 45326                           
 45327                           ; BSR set to: 0
 45328  004EA2  51B4               	movf	(_PWM+33)& (0+255),w,b	;volatile
 45329  004EA4  5C30               	subwf	_rgl+9,w,c
 45330  004EA6  E32B               	bnc	l41266
 45331                           
 45332                           ; BSR set to: 0
 45333  004EA8  0E01               	movlw	1
 45334  004EAA  EC8F  F059         	call	_Tnizsza
 45335  004EAE  E227               	bc	l41266
 45336  004EB0                     l41240:
 45337                           
 45338                           ; BSR set to: 0
 45339                           ;pompa.c: 414: {
 45340                           ;pompa.c: 415: if(DtIN.DIN>DtIN.cDLT)
 45341  004EB0  0101               	movlb	1	; () banked
 45342  004EB2  5139               	movf	(_DtIN+3)& (0+255),w,b
 45343  004EB4  613C               	cpfslt	(_DtIN+6)& (0+255),b
 45344  004EB6  D023               	goto	l41266
 45345                           
 45346                           ; BSR set to: 1
 45347                           ;pompa.c: 416: {
 45348                           ;pompa.c: 417: if(!pup)
 45349  004EB8  0103               	movlb	3	; () banked
 45350  004EBA  674E               	tstfsz	ModPmp2@pup& (0+255),b
 45351  004EBC  D00A               	goto	l4309
 45352                           
 45353                           ; BSR set to: 3
 45354                           ;pompa.c: 418: if(ppwm<PMP.MGPROC)
 45355  004EBE  5038               	movf	_PMP,w,c
 45356  004EC0  614F               	cpfslt	ModPmp2@ppwm& (0+255),b
 45357  004EC2  D007               	goto	l4309
 45358                           
 45359                           ; BSR set to: 3
 45360                           ;pompa.c: 419: {
 45361                           ;pompa.c: 420: if(((ppwm+1)<PMP.MGPROC))
 45362  004EC4  5038               	movf	_PMP,w,c
 45363  004EC6  D81E               	call	PL54	;call to abstracted procedure
 45364  004EC8  E202               	bc	l4311
 45365                           
 45366                           ; BSR set to: 3
 45367                           ;pompa.c: 421: {
 45368                           ;pompa.c: 422: ppwm+=1;
 45369                           
 45370                           ; BSR set to: 3
 45371                           ;pompa.c: 423: pup=1;
 45372  004ECA  D853               	call	PL236	;call to abstracted procedure
 45373                           
 45374                           ;pompa.c: 424: }
 45375  004ECC  D002               	goto	l4309
 45376  004ECE                     l4311:
 45377                           
 45378                           ; BSR set to: 3
 45379                           ;pompa.c: 425: else ppwm=PMP.MGPROC;
 45380  004ECE  C038  F34F         	movff	_PMP,ModPmp2@ppwm
 45381  004ED2                     l4309:
 45382                           
 45383                           ; BSR set to: 3
 45384                           ;pompa.c: 426: }
 45385                           ;pompa.c: 427: if(!pup)
 45386  004ED2  674E               	tstfsz	ModPmp2@pup& (0+255),b
 45387  004ED4  D014               	goto	l41266
 45388                           
 45389                           ; BSR set to: 3
 45390                           ;pompa.c: 428: if(DtIN.DIN>DtIN.DIN2)
 45391  004ED6  0101               	movlb	1	; () banked
 45392  004ED8  5139               	movf	(_DtIN+3)& (0+255),w,b
 45393  004EDA  613A               	cpfslt	(_DtIN+4)& (0+255),b
 45394  004EDC  D010               	goto	l41266
 45395                           
 45396                           ; BSR set to: 1
 45397                           ;pompa.c: 429: {
 45398                           ;pompa.c: 430: if(ppwm<PMP.MGPROC)
 45399  004EDE  5038               	movf	_PMP,w,c
 45400  004EE0  0103               	movlb	3	; () banked
 45401  004EE2  614F               	cpfslt	ModPmp2@ppwm& (0+255),b
 45402  004EE4  D00C               	goto	l41266
 45403                           
 45404                           ; BSR set to: 3
 45405                           ;pompa.c: 431: {
 45406                           ;pompa.c: 432: if(((ppwm+1)<PMP.MGPROC))
 45407  004EE6  5038               	movf	_PMP,w,c
 45408  004EE8  D80D               	call	PL54	;call to abstracted procedure
 45409  004EEA  E202               	bc	l4316
 45410                           
 45411                           ; BSR set to: 3
 45412                           ;pompa.c: 433: {
 45413                           ;pompa.c: 434: ppwm+=1;
 45414  004EEC  2B4F               	incf	ModPmp2@ppwm& (0+255),f,b
 45415                           
 45416                           ; BSR set to: 3
 45417                           ;pompa.c: 436: }
 45418  004EEE  D007               	goto	l41266
 45419  004EF0                     l4316:
 45420                           
 45421                           ;pompa.c: 437: else ppwm=PMP.MGPROC;
 45422  004EF0  C038  F34F         	movff	_PMP,ModPmp2@ppwm
 45423  004EF4  D004               	goto	l41266
 45424  004EF6                     l41262:
 45425                           
 45426                           ; BSR set to: 3
 45427                           ;pompa.c: 445: else
 45428                           ;pompa.c: 446: {
 45429                           ;pompa.c: 447: StartRTdS(8);
 45430  004EF6  0E08               	movlw	8
 45431  004EF8  ECC2  F057         	call	_StartRTdS
 45432  004EFC  D7F9               	goto	l4316
 45433  004EFE                     l41266:
 45434                           
 45435                           ;pompa.c: 449: }
 45436                           ;pompa.c: 450: return ppwm;
 45437  004EFE  0103               	movlb	3	; () banked
 45438  004F00  514F               	movf	ModPmp2@ppwm& (0+255),w,b
 45439  004F02  0012               	return	
 45440  004F04                     __end_of_ModPmp2:
 45441                           	opt stack 0
 45442  004F04                     PL54:
 45443                           	opt stack 20
 45444  004F04  6F46               	movwf	??_ModPmp2& (0+255),b
 45445  004F06  6B47               	clrf	(??_ModPmp2+1)& (0+255),b
 45446  004F08  514F               	movf	ModPmp2@ppwm& (0+255),w,b
 45447  004F0A  6F48               	movwf	(??_ModPmp2+2)& (0+255),b
 45448  004F0C  6B49               	clrf	(??_ModPmp2+3)& (0+255),b
 45449  004F0E  2B48               	incf	(??_ModPmp2+2)& (0+255),f,b
 45450  004F10  0E00               	movlw	0
 45451  004F12  2349               	addwfc	(??_ModPmp2+3)& (0+255),f,b
 45452  004F14  5149               	movf	(??_ModPmp2+3)& (0+255),w,b
 45453  004F16  0A80               	xorlw	128
 45454  004F18  6F4A               	movwf	(??_ModPmp2+4)& (0+255),b
 45455  004F1A  5146               	movf	??_ModPmp2& (0+255),w,b
 45456  004F1C  5D48               	subwf	(??_ModPmp2+2)& (0+255),w,b
 45457  004F1E  5147               	movf	(??_ModPmp2+1)& (0+255),w,b
 45458  004F20  0A80               	xorlw	128
 45459  004F22  594A               	subwfb	(??_ModPmp2+4)& (0+255),w,b
 45460  004F24  0012               	return	
 45461  004F26                     __end_ofPL54:
 45462                           	opt stack 0
 45463  004F26                     PL74:
 45464                           	opt stack 20
 45465  004F26  5149               	movf	(??_ModPmp2+3)& (0+255),w,b
 45466  004F28  0A80               	xorlw	128
 45467  004F2A  6F4A               	movwf	(??_ModPmp2+4)& (0+255),b
 45468  004F2C  5146               	movf	??_ModPmp2& (0+255),w,b
 45469  004F2E  5D48               	subwf	(??_ModPmp2+2)& (0+255),w,b
 45470  004F30  5147               	movf	(??_ModPmp2+1)& (0+255),w,b
 45471  004F32  0A80               	xorlw	128
 45472  004F34  594A               	subwfb	(??_ModPmp2+4)& (0+255),w,b
 45473  004F36  0012               	return	
 45474  004F38                     __end_ofPL74:
 45475                           	opt stack 0
 45476  004F38                     PL110:
 45477                           	opt stack 20
 45478  004F38  254F               	addwf	ModPmp2@ppwm& (0+255),w,b
 45479  004F3A  6F46               	movwf	??_ModPmp2& (0+255),b
 45480  004F3C  6B47               	clrf	(??_ModPmp2+1)& (0+255),b
 45481  004F3E  0EFF               	movlw	255
 45482  004F40  2347               	addwfc	(??_ModPmp2+1)& (0+255),f,b
 45483  004F42  5039               	movf	_PMP+1,w,c
 45484  004F44  6F48               	movwf	(??_ModPmp2+2)& (0+255),b
 45485  004F46  6B49               	clrf	(??_ModPmp2+3)& (0+255),b
 45486  004F48  0012               	return	
 45487  004F4A                     __end_ofPL110:
 45488                           	opt stack 0
 45489  004F4A                     PL164:
 45490                           	opt stack 20
 45491  004F4A  0101               	movlb	1	; () banked
 45492  004F4C  513A               	movf	(_DtIN+4)& (0+255),w,b
 45493  004F4E  C13C  F346         	movff	_DtIN+6,??_ModPmp2
 45494  004F52  0103               	movlb	3	; () banked
 45495  004F54  6B47               	clrf	(??_ModPmp2+1)& (0+255),b
 45496  004F56  5F46               	subwf	??_ModPmp2& (0+255),f,b
 45497  004F58  0E00               	movlw	0
 45498  004F5A  5B47               	subwfb	(??_ModPmp2+1)& (0+255),f,b
 45499  004F5C  0C00               	retlw	0
 45500  004F5E                     __end_ofPL164:
 45501                           	opt stack 0
 45502  004F5E                     PL168:
 45503                           	opt stack 20
 45504  004F5E  0101               	movlb	1	; () banked
 45505  004F60  513C               	movf	(_DtIN+6)& (0+255),w,b
 45506  004F62  C13A  F346         	movff	_DtIN+4,??_ModPmp2
 45507  004F66  0103               	movlb	3	; () banked
 45508  004F68  6B47               	clrf	(??_ModPmp2+1)& (0+255),b
 45509  004F6A  5F46               	subwf	??_ModPmp2& (0+255),f,b
 45510  004F6C  0E00               	movlw	0
 45511  004F6E  5B47               	subwfb	(??_ModPmp2+1)& (0+255),f,b
 45512  004F70  0C00               	retlw	0
 45513  004F72                     __end_ofPL168:
 45514                           	opt stack 0
 45515  004F72                     PL236:
 45516                           	opt stack 20
 45517  004F72  2B4F               	incf	ModPmp2@ppwm& (0+255),f,b
 45518  004F74  0E01               	movlw	1
 45519  004F76  6F4E               	movwf	ModPmp2@pup& (0+255),b
 45520  004F78  0C01               	retlw	1
 45521  004F7A                     __end_ofPL236:
 45522                           	opt stack 0
 45523                           tblptru	equ	0xFF8
 45524                           tblptrh	equ	0xFF7
 45525                           tblptrl	equ	0xFF6
 45526                           tablat	equ	0xFF5
 45527                           prodh	equ	0xFF4
 45528                           prodl	equ	0xFF3
 45529                           intcon	equ	0xFF2
 45530                           postinc0	equ	0xFEE
 45531                           wreg	equ	0xFE8
 45532                           indf1	equ	0xFE7
 45533                           postinc1	equ	0xFE6
 45534                           postdec1	equ	0xFE5
 45535                           fsr1h	equ	0xFE2
 45536                           fsr1l	equ	0xFE1
 45537                           indf2	equ	0xFDF
 45538                           postinc2	equ	0xFDE
 45539                           postdec2	equ	0xFDD
 45540                           fsr2h	equ	0xFDA
 45541                           fsr2l	equ	0xFD9
 45542                           status	equ	0xFD8
 45543                           
 45544 ;; *************** function _StartRTdS *****************
 45545 ;; Defined at:
 45546 ;;		line 55 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
 45547 ;; Parameters:    Size  Location     Type
 45548 ;;  Index           1    wreg     const unsigned char 
 45549 ;; Auto vars:     Size  Location     Type
 45550 ;;  Index           1   29[COMRAM] const unsigned char 
 45551 ;; Return value:  Size  Location     Type
 45552 ;;		None               void
 45553 ;; Registers used:
 45554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45555 ;; Tracked objects:
 45556 ;;		On entry : C/2
 45557 ;;		On exit  : F/1
 45558 ;;		Unchanged: 0/0
 45559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45564 ;;Total ram usage:        1 bytes
 45565 ;; Hardware stack levels used:    1
 45566 ;; Hardware stack levels required when called:    4
 45567 ;; This function calls:
 45568 ;;		Nothing
 45569 ;; This function is called by:
 45570 ;;		_NastawaCOCW
 45571 ;;		_Blokada15S
 45572 ;;		_ZmienKCOKCW
 45573 ;;		_RuszPlomien
 45574 ;;		_WritePCO
 45575 ;;		_PomiarPCO
 45576 ;;		_WritePCW
 45577 ;;		_PomiarPCW
 45578 ;;		_WritePFN
 45579 ;;		_PomiarPFN
 45580 ;;		_PwrOnDelay
 45581 ;;		_Moduluj
 45582 ;;		_StartCO
 45583 ;;		_StartMCW
 45584 ;;		_StartCO4
 45585 ;;		_StartMCW4
 45586 ;;		_StartCO2
 45587 ;;		_StartMCW2
 45588 ;;		_StartMCO3
 45589 ;;		_ModPmp1
 45590 ;;		_ModPmp2
 45591 ;;		_ReadParam
 45592 ;;		_TrybPracy
 45593 ;; This function uses a non-reentrant model
 45594 ;;
 45595                           
 45596                           	psect	text212
 45597  00AF84                     __ptext212:
 45598                           	opt stack 0
 45599  00AF84                     _StartRTdS:
 45600                           	opt stack 23
 45601                           
 45602                           ;StartRTdS@Index stored from wreg
 45603  00AF84  CFE8 F01E          	movff	wreg,StartRTdS@Index
 45604                           
 45605                           ;rtimer.c: 56: if (Index>11-1) asm("RESET");
 45606  00AF88  0E0A               	movlw	10
 45607  00AF8A  641E               	cpfsgt	StartRTdS@Index,c
 45608  00AF8C  D001               	goto	l40394
 45609  00AF8E  00FF               	reset		;# 
 45610  00AF90                     l40394:
 45611                           
 45612                           ;rtimer.c: 57: dSk[Index].cS=0;
 45613  00AF90  501E               	movf	StartRTdS@Index,w,c
 45614  00AF92  0D02               	mullw	2
 45615  00AF94  0101               	movlb	1	; () banked
 45616  00AF96  ECAA  F03D         	call	PL118	;call to abstracted procedure
 45617  00AF9A  6ADF               	clrf	indf2,c
 45618                           
 45619                           ;rtimer.c: 58: dSk[Index].dS=0;
 45620  00AF9C  501E               	movf	StartRTdS@Index,w,c
 45621  00AF9E  0D02               	mullw	2
 45622  00AFA0  ECE1  F057         	call	PL128	;call to abstracted procedure
 45623  00AFA4  0E00               	movlw	0
 45624  00AFA6  6EDF               	movwf	indf2,c
 45625                           
 45626                           ; BSR set to: 1
 45627  00AFA8  0C00               	retlw	0
 45628  00AFAA                     __end_of_StartRTdS:
 45629                           	opt stack 0
 45630                           tblptru	equ	0xFF8
 45631                           tblptrh	equ	0xFF7
 45632                           tblptrl	equ	0xFF6
 45633                           tablat	equ	0xFF5
 45634                           prodh	equ	0xFF4
 45635                           prodl	equ	0xFF3
 45636                           intcon	equ	0xFF2
 45637                           postinc0	equ	0xFEE
 45638                           wreg	equ	0xFE8
 45639                           indf1	equ	0xFE7
 45640                           postinc1	equ	0xFE6
 45641                           postdec1	equ	0xFE5
 45642                           fsr1h	equ	0xFE2
 45643                           fsr1l	equ	0xFE1
 45644                           indf2	equ	0xFDF
 45645                           postinc2	equ	0xFDE
 45646                           postdec2	equ	0xFDD
 45647                           fsr2h	equ	0xFDA
 45648                           fsr2l	equ	0xFD9
 45649                           status	equ	0xFD8
 45650                           
 45651 ;; *************** function _RTdS *****************
 45652 ;; Defined at:
 45653 ;;		line 61 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
 45654 ;; Parameters:    Size  Location     Type
 45655 ;;  Index           1    wreg     const unsigned char 
 45656 ;; Auto vars:     Size  Location     Type
 45657 ;;  Index           1   29[COMRAM] const unsigned char 
 45658 ;; Return value:  Size  Location     Type
 45659 ;;                  1    wreg      unsigned char 
 45660 ;; Registers used:
 45661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45662 ;; Tracked objects:
 45663 ;;		On entry : 0/1
 45664 ;;		On exit  : F/1
 45665 ;;		Unchanged: 0/0
 45666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45670 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45671 ;;Total ram usage:        1 bytes
 45672 ;; Hardware stack levels used:    1
 45673 ;; Hardware stack levels required when called:    4
 45674 ;; This function calls:
 45675 ;;		Nothing
 45676 ;; This function is called by:
 45677 ;;		_NastawaCOCW
 45678 ;;		_Blokada15S
 45679 ;;		_ZmienKCOKCW
 45680 ;;		_ReloadPlomien
 45681 ;;		_WritePCO
 45682 ;;		_WritePCW
 45683 ;;		_WritePFN
 45684 ;;		_PwrOnDelay
 45685 ;;		_Moduluj
 45686 ;;		_ModPmp1
 45687 ;;		_ModPmp2
 45688 ;;		_ReadParam
 45689 ;;		_TrybPracy
 45690 ;; This function uses a non-reentrant model
 45691 ;;
 45692                           
 45693                           	psect	text213
 45694  00AFAA                     __ptext213:
 45695                           	opt stack 0
 45696  00AFAA                     _RTdS:
 45697                           	opt stack 23
 45698                           
 45699                           ; BSR set to: 1
 45700                           ;RTdS@Index stored from wreg
 45701  00AFAA  CFE8 F01E          	movff	wreg,RTdS@Index
 45702                           
 45703                           ;rtimer.c: 62: if (Index>11-1) asm("RESET");
 45704  00AFAE  0E0A               	movlw	10
 45705  00AFB0  641E               	cpfsgt	RTdS@Index,c
 45706  00AFB2  D001               	goto	l40406
 45707  00AFB4  00FF               	reset		;# 
 45708  00AFB6                     l40406:
 45709                           
 45710                           ;rtimer.c: 63: return dSk[Index].dS;
 45711  00AFB6  501E               	movf	RTdS@Index,w,c
 45712  00AFB8  0D02               	mullw	2
 45713  00AFBA  0101               	movlb	1	; () banked
 45714  00AFBC  D802               	call	PL128	;call to abstracted procedure
 45715  00AFBE  50DF               	movf	indf2,w,c
 45716                           
 45717                           ; BSR set to: 1
 45718  00AFC0  0012               	return	
 45719  00AFC2                     __end_of_RTdS:
 45720                           	opt stack 0
 45721  00AFC2                     PL128:
 45722                           	opt stack 22
 45723  00AFC2  0E21               	movlw	low (_dSk+1)	;volatile
 45724  00AFC4  24F3               	addwf	prodl,w,c
 45725  00AFC6  6ED9               	movwf	fsr2l,c
 45726  00AFC8  0E01               	movlw	high (_dSk+1)	;volatile
 45727  00AFCA  20F4               	addwfc	prodh,w,c
 45728  00AFCC  6EDA               	movwf	fsr2h,c
 45729  00AFCE  0012               	return	
 45730  00AFD0                     __end_ofPL128:
 45731                           	opt stack 0
 45732                           tblptru	equ	0xFF8
 45733                           tblptrh	equ	0xFF7
 45734                           tblptrl	equ	0xFF6
 45735                           tablat	equ	0xFF5
 45736                           prodh	equ	0xFF4
 45737                           prodl	equ	0xFF3
 45738                           intcon	equ	0xFF2
 45739                           postinc0	equ	0xFEE
 45740                           wreg	equ	0xFE8
 45741                           indf1	equ	0xFE7
 45742                           postinc1	equ	0xFE6
 45743                           postdec1	equ	0xFE5
 45744                           fsr1h	equ	0xFE2
 45745                           fsr1l	equ	0xFE1
 45746                           indf2	equ	0xFDF
 45747                           postinc2	equ	0xFDE
 45748                           postdec2	equ	0xFDD
 45749                           fsr2h	equ	0xFDA
 45750                           fsr2l	equ	0xFD9
 45751                           status	equ	0xFD8
 45752                           
 45753 ;; *************** function _Tnizsza *****************
 45754 ;; Defined at:
 45755 ;;		line 2486 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 45756 ;; Parameters:    Size  Location     Type
 45757 ;;  t               1    wreg     const unsigned char 
 45758 ;; Auto vars:     Size  Location     Type
 45759 ;;  t               1   29[COMRAM] const unsigned char 
 45760 ;; Return value:  Size  Location     Type
 45761 ;;		None               void
 45762 ;; Registers used:
 45763 ;;		wreg, status,2, status,0
 45764 ;; Tracked objects:
 45765 ;;		On entry : E/0
 45766 ;;		On exit  : E/0
 45767 ;;		Unchanged: FFFFFFF1/0
 45768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45773 ;;Total ram usage:        1 bytes
 45774 ;; Hardware stack levels used:    1
 45775 ;; Hardware stack levels required when called:    4
 45776 ;; This function calls:
 45777 ;;		Nothing
 45778 ;; This function is called by:
 45779 ;;		_ModZgCO
 45780 ;;		_ModZgCW
 45781 ;;		_ModDkCW
 45782 ;;		_ModPruCW
 45783 ;;		_ModPrzCW
 45784 ;;		_ModZgCW4
 45785 ;;		_ModPruCW4
 45786 ;;		_ModPrzCW4
 45787 ;;		_ModZgCW2
 45788 ;;		_ModPruCW2
 45789 ;;		_ModPrzCW2
 45790 ;;		_ModToCW3
 45791 ;;		_ModPmp1
 45792 ;;		_ModPmp2
 45793 ;; This function uses a non-reentrant model
 45794 ;;
 45795                           
 45796                           	psect	text214
 45797  00B31E                     __ptext214:
 45798                           	opt stack 0
 45799  00B31E                     _Tnizsza:
 45800                           	opt stack 24
 45801                           
 45802                           ; BSR set to: 1
 45803                           ;Tnizsza@t stored from wreg
 45804  00B31E  CFE8 F01E          	movff	wreg,Tnizsza@t
 45805                           
 45806                           ;rgl.c: 2487: return (rgl.x_t>t);
 45807  00B322  501E               	movf	Tnizsza@t,w,c
 45808  00B324  BE29               	btfsc	_rgl+2,7,c
 45809  00B326  D003               	goto	u67180
 45810  00B328  0AFF               	xorlw	255
 45811  00B32A  2429               	addwf	_rgl+2,w,c
 45812  00B32C  E202               	bc	l35484
 45813  00B32E                     u67180:
 45814  00B32E  90D8               	bcf	status,0,c
 45815  00B330  0012               	return	
 45816  00B332                     l35484:
 45817  00B332  80D8               	bsf	status,0,c
 45818  00B334  0012               	return	
 45819  00B336                     __end_of_Tnizsza:
 45820                           	opt stack 0
 45821                           tblptru	equ	0xFF8
 45822                           tblptrh	equ	0xFF7
 45823                           tblptrl	equ	0xFF6
 45824                           tablat	equ	0xFF5
 45825                           prodh	equ	0xFF4
 45826                           prodl	equ	0xFF3
 45827                           intcon	equ	0xFF2
 45828                           postinc0	equ	0xFEE
 45829                           wreg	equ	0xFE8
 45830                           indf1	equ	0xFE7
 45831                           postinc1	equ	0xFE6
 45832                           postdec1	equ	0xFE5
 45833                           fsr1h	equ	0xFE2
 45834                           fsr1l	equ	0xFE1
 45835                           indf2	equ	0xFDF
 45836                           postinc2	equ	0xFDE
 45837                           postdec2	equ	0xFDD
 45838                           fsr2h	equ	0xFDA
 45839                           fsr2l	equ	0xFD9
 45840                           status	equ	0xFD8
 45841                           
 45842 ;; *************** function _Twyzsza *****************
 45843 ;; Defined at:
 45844 ;;		line 2495 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rgl.c"
 45845 ;; Parameters:    Size  Location     Type
 45846 ;;  t               1    wreg     const unsigned char 
 45847 ;; Auto vars:     Size  Location     Type
 45848 ;;  t               1   32[COMRAM] const unsigned char 
 45849 ;; Return value:  Size  Location     Type
 45850 ;;		None               void
 45851 ;; Registers used:
 45852 ;;		wreg, status,2, status,0, prodl, prodh
 45853 ;; Tracked objects:
 45854 ;;		On entry : C/0
 45855 ;;		On exit  : C/0
 45856 ;;		Unchanged: FFFFFFF3/0
 45857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45860 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45861 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45862 ;;Total ram usage:        4 bytes
 45863 ;; Hardware stack levels used:    1
 45864 ;; Hardware stack levels required when called:    4
 45865 ;; This function calls:
 45866 ;;		Nothing
 45867 ;; This function is called by:
 45868 ;;		_ModDkCO
 45869 ;;		_ModPrzCO
 45870 ;;		_ModZgCW
 45871 ;;		_ModPruCW
 45872 ;;		_ModPrzCW
 45873 ;;		_ModPruCW4
 45874 ;;		_ModPrzCW4
 45875 ;;		_ModPruCW2
 45876 ;;		_ModPrzCW2
 45877 ;;		_ModPmp1
 45878 ;;		_ModPmp2
 45879 ;; This function uses a non-reentrant model
 45880 ;;
 45881                           
 45882                           	psect	text215
 45883  00AA68                     __ptext215:
 45884                           	opt stack 0
 45885  00AA68                     _Twyzsza:
 45886                           	opt stack 24
 45887                           
 45888                           ;Twyzsza@t stored from wreg
 45889  00AA68  CFE8 F021          	movff	wreg,Twyzsza@t
 45890                           
 45891                           ;rgl.c: 2496: return (rgl.x_t<(-1*t));
 45892  00AA6C  5021               	movf	Twyzsza@t,w,c
 45893  00AA6E  0D01               	mullw	1
 45894  00AA70  1EF3               	comf	prodl,f,c
 45895  00AA72  1EF4               	comf	prodh,f,c
 45896  00AA74  4AF3               	infsnz	prodl,f,c
 45897  00AA76  2AF4               	incf	prodh,f,c
 45898  00AA78  C029  F01E         	movff	_rgl+2,??_Twyzsza
 45899  00AA7C  6A1F               	clrf	(??_Twyzsza+1)& (0+255),c
 45900  00AA7E  BE1E               	btfsc	??_Twyzsza& (0+255),7,c
 45901  00AA80  061F               	decf	(??_Twyzsza+1)& (0+255),f,c
 45902  00AA82  501F               	movf	??_Twyzsza+1,w,c
 45903  00AA84  0A80               	xorlw	128
 45904  00AA86  6E20               	movwf	(??_Twyzsza+2)& (0+255),c
 45905  00AA88  50F3               	movf	prodl,w,c
 45906  00AA8A  5C1E               	subwf	??_Twyzsza,w,c
 45907  00AA8C  50F4               	movf	prodh,w,c
 45908  00AA8E  0A80               	xorlw	128
 45909  00AA90  5820               	subwfb	(??_Twyzsza+2)& (0+255),w,c
 45910  00AA92  E302               	bnc	l35508
 45911  00AA94  90D8               	bcf	status,0,c
 45912  00AA96  0012               	return	
 45913  00AA98                     l35508:
 45914  00AA98  80D8               	bsf	status,0,c
 45915  00AA9A  0012               	return	
 45916  00AA9C                     __end_of_Twyzsza:
 45917                           	opt stack 0
 45918                           tblptru	equ	0xFF8
 45919                           tblptrh	equ	0xFF7
 45920                           tblptrl	equ	0xFF6
 45921                           tablat	equ	0xFF5
 45922                           prodh	equ	0xFF4
 45923                           prodl	equ	0xFF3
 45924                           intcon	equ	0xFF2
 45925                           postinc0	equ	0xFEE
 45926                           wreg	equ	0xFE8
 45927                           indf1	equ	0xFE7
 45928                           postinc1	equ	0xFE6
 45929                           postdec1	equ	0xFE5
 45930                           fsr1h	equ	0xFE2
 45931                           fsr1l	equ	0xFE1
 45932                           indf2	equ	0xFDF
 45933                           postinc2	equ	0xFDE
 45934                           postdec2	equ	0xFDD
 45935                           fsr2h	equ	0xFDA
 45936                           fsr2l	equ	0xFD9
 45937                           status	equ	0xFD8
 45938                           
 45939 ;; *************** function _RetDelta *****************
 45940 ;; Defined at:
 45941 ;;		line 300 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 45942 ;; Parameters:    Size  Location     Type
 45943 ;;  pco             1    wreg     unsigned char 
 45944 ;;  eco             1   37[COMRAM] unsigned char 
 45945 ;; Auto vars:     Size  Location     Type
 45946 ;;  pco             1   11[BANK2 ] unsigned char 
 45947 ;;  k               1   12[BANK2 ] unsigned char 
 45948 ;; Return value:  Size  Location     Type
 45949 ;;                  1    wreg      unsigned char 
 45950 ;; Registers used:
 45951 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 45952 ;; Tracked objects:
 45953 ;;		On entry : F/0
 45954 ;;		On exit  : D/0
 45955 ;;		Unchanged: FFFFFFF0/0
 45956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45957 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45958 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45960 ;;      Totals:         1       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45961 ;;Total ram usage:        3 bytes
 45962 ;; Hardware stack levels used:    1
 45963 ;; Hardware stack levels required when called:    7
 45964 ;; This function calls:
 45965 ;;		_RetKrkDelta
 45966 ;;		___awdiv
 45967 ;; This function is called by:
 45968 ;;		_ModPmp2
 45969 ;; This function uses a non-reentrant model
 45970 ;;
 45971                           
 45972                           	psect	text216
 45973  00A8C0                     __ptext216:
 45974                           	opt stack 0
 45975  00A8C0                     _RetDelta:
 45976                           	opt stack 20
 45977                           
 45978                           ;RetDelta@pco stored from wreg
 45979  00A8C0  CFE8 F2FB          	movff	wreg,RetDelta@pco
 45980                           
 45981                           ; BSR set to: 0
 45982                           ;pompa.c: 301: unsigned char k;
 45983                           ;pompa.c: 303: k=RetKrkDelta(pco);
 45984  00A8C4  0102               	movlb	2	; () banked
 45985  00A8C6  51FB               	movf	RetDelta@pco& (0+255),w,b
 45986  00A8C8  EC14  F047         	call	_RetKrkDelta
 45987  00A8CC  0102               	movlb	2	; () banked
 45988  00A8CE  6FFC               	movwf	RetDelta@k& (0+255),b
 45989                           
 45990                           ; BSR set to: 2
 45991                           ;pompa.c: 304: if(eco&&k) return (k*(eco))/10;
 45992  00A8D0  5026               	movf	RetDelta@eco,w,c
 45993  00A8D2  E010               	bz	l36018
 45994                           
 45995                           ; BSR set to: 2
 45996  00A8D4  51FC               	movf	RetDelta@k& (0+255),w,b
 45997  00A8D6  E00E               	bz	l36018
 45998                           
 45999                           ; BSR set to: 2
 46000  00A8D8  51FC               	movf	RetDelta@k& (0+255),w,b
 46001  00A8DA  0226               	mulwf	RetDelta@eco,c
 46002  00A8DC  CFF3 F0F3          	movff	prodl,?___awdiv
 46003  00A8E0  CFF4 F0F4          	movff	prodh,?___awdiv+1
 46004  00A8E4  0100               	movlb	0	; () banked
 46005  00A8E6  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 46006  00A8E8  0E0A               	movlw	10
 46007  00A8EA  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 46008  00A8EC  EC37  F04A         	call	___awdiv	;wreg free
 46009  00A8F0  51F3               	movf	?___awdiv& (0+255),w,b
 46010  00A8F2  0012               	return	
 46011  00A8F4                     l36018:
 46012                           
 46013                           ; BSR set to: 2
 46014                           ;pompa.c: 305: else return 0;
 46015  00A8F4  0C00               	retlw	0
 46016  00A8F6                     __end_of_RetDelta:
 46017                           	opt stack 0
 46018                           tblptru	equ	0xFF8
 46019                           tblptrh	equ	0xFF7
 46020                           tblptrl	equ	0xFF6
 46021                           tablat	equ	0xFF5
 46022                           prodh	equ	0xFF4
 46023                           prodl	equ	0xFF3
 46024                           intcon	equ	0xFF2
 46025                           postinc0	equ	0xFEE
 46026                           wreg	equ	0xFE8
 46027                           indf1	equ	0xFE7
 46028                           postinc1	equ	0xFE6
 46029                           postdec1	equ	0xFE5
 46030                           fsr1h	equ	0xFE2
 46031                           fsr1l	equ	0xFE1
 46032                           indf2	equ	0xFDF
 46033                           postinc2	equ	0xFDE
 46034                           postdec2	equ	0xFDD
 46035                           fsr2h	equ	0xFDA
 46036                           fsr2l	equ	0xFD9
 46037                           status	equ	0xFD8
 46038                           
 46039 ;; *************** function _RetKrkDelta *****************
 46040 ;; Defined at:
 46041 ;;		line 283 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 46042 ;; Parameters:    Size  Location     Type
 46043 ;;  pco             1    wreg     unsigned char 
 46044 ;; Auto vars:     Size  Location     Type
 46045 ;;  pco             1    6[BANK2 ] unsigned char 
 46046 ;;  i               1   10[BANK2 ] unsigned char 
 46047 ;;  d               1    9[BANK2 ] unsigned char 
 46048 ;;  max             1    8[BANK2 ] unsigned char 
 46049 ;;  min             1    7[BANK2 ] unsigned char 
 46050 ;; Return value:  Size  Location     Type
 46051 ;;                  1    wreg      unsigned char 
 46052 ;; Registers used:
 46053 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 46054 ;; Tracked objects:
 46055 ;;		On entry : F/2
 46056 ;;		On exit  : D/0
 46057 ;;		Unchanged: FFFFFFF0/0
 46058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46060 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46062 ;;      Totals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46063 ;;Total ram usage:        5 bytes
 46064 ;; Hardware stack levels used:    1
 46065 ;; Hardware stack levels required when called:    6
 46066 ;; This function calls:
 46067 ;;		_RetHI
 46068 ;;		_RetLO
 46069 ;;		_RetDelta4
 46070 ;;		___wmul
 46071 ;;		___awdiv
 46072 ;; This function is called by:
 46073 ;;		_RetDelta
 46074 ;; This function uses a non-reentrant model
 46075 ;;
 46076                           
 46077                           	psect	text217
 46078  008E28                     __ptext217:
 46079                           	opt stack 0
 46080  008E28                     _RetKrkDelta:
 46081                           	opt stack 20
 46082                           
 46083                           ;RetKrkDelta@pco stored from wreg
 46084  008E28  CFE8 F2F6          	movff	wreg,RetKrkDelta@pco
 46085                           
 46086                           ; BSR set to: 2
 46087                           ;pompa.c: 284: unsigned char i,d,min,max;
 46088                           ;pompa.c: 286: max=0;
 46089  008E2C  6BF8               	clrf	RetKrkDelta@max& (0+255),b
 46090                           
 46091                           ; BSR set to: 2
 46092                           ;pompa.c: 287: min=100;
 46093  008E2E  0E64               	movlw	100
 46094  008E30  6FF7               	movwf	RetKrkDelta@min& (0+255),b
 46095                           
 46096                           ;pompa.c: 288: for(i=1;i<10;i++)
 46097  008E32  0E01               	movlw	1
 46098  008E34  6FFA               	movwf	RetKrkDelta@i& (0+255),b
 46099  008E36                     l35982:
 46100                           
 46101                           ; BSR set to: 2
 46102                           ;pompa.c: 289: {
 46103                           ;pompa.c: 290: d=RetDelta4(pco,i,RetHI(pco,i,80),RetLO(pco,i,10));
 46104  008E36  C2FA  F1FD         	movff	RetKrkDelta@i,?_RetDelta4
 46105  008E3A  C2FA  F024         	movff	RetKrkDelta@i,?_RetHI
 46106  008E3E  0E50               	movlw	80
 46107  008E40  6E25               	movwf	?_RetHI+1,c
 46108  008E42  51F6               	movf	RetKrkDelta@pco& (0+255),w,b
 46109  008E44  ECE0  F045         	call	_RetHI
 46110  008E48  0101               	movlb	1	; () banked
 46111  008E4A  6FFE               	movwf	(?_RetDelta4+1)& (0+255),b
 46112  008E4C  C2FA  F024         	movff	RetKrkDelta@i,?_RetLO
 46113  008E50  0E0A               	movlw	10
 46114  008E52  6E25               	movwf	?_RetLO+1,c
 46115  008E54  0102               	movlb	2	; () banked
 46116  008E56  51F6               	movf	RetKrkDelta@pco& (0+255),w,b
 46117  008E58  EC7B  F046         	call	_RetLO
 46118  008E5C  0101               	movlb	1	; () banked
 46119  008E5E  6FFF               	movwf	(?_RetDelta4+2)& (0+255),b
 46120  008E60  0102               	movlb	2	; () banked
 46121  008E62  51F6               	movf	RetKrkDelta@pco& (0+255),w,b
 46122  008E64  0101               	movlb	1	; () banked
 46123  008E66  EC81  F050         	call	_RetDelta4
 46124  008E6A  6FF9               	movwf	RetKrkDelta@d& (0+255),b
 46125                           
 46126                           ; BSR set to: 2
 46127                           ;pompa.c: 291: if(d>max) max=d;
 46128  008E6C  51F9               	movf	RetKrkDelta@d& (0+255),w,b
 46129  008E6E  61F8               	cpfslt	RetKrkDelta@max& (0+255),b
 46130  008E70  D002               	goto	l35988
 46131                           
 46132                           ; BSR set to: 2
 46133  008E72  C2F9  F2F8         	movff	RetKrkDelta@d,RetKrkDelta@max
 46134  008E76                     l35988:
 46135                           
 46136                           ; BSR set to: 2
 46137                           ;pompa.c: 292: if(d<min) min=d;
 46138  008E76  51F7               	movf	RetKrkDelta@min& (0+255),w,b
 46139  008E78  61F9               	cpfslt	RetKrkDelta@d& (0+255),b
 46140  008E7A  D002               	goto	l35992
 46141                           
 46142                           ; BSR set to: 2
 46143  008E7C  C2F9  F2F7         	movff	RetKrkDelta@d,RetKrkDelta@min
 46144  008E80                     l35992:
 46145                           
 46146                           ; BSR set to: 2
 46147  008E80  2BFA               	incf	RetKrkDelta@i& (0+255),f,b
 46148                           
 46149                           ; BSR set to: 2
 46150  008E82  0E09               	movlw	9
 46151  008E84  65FA               	cpfsgt	RetKrkDelta@i& (0+255),b
 46152  008E86  D7D7               	goto	l35982
 46153                           
 46154                           ; BSR set to: 2
 46155                           ;pompa.c: 293: }
 46156                           ;pompa.c: 294: if(max<=min) return 0;
 46157  008E88  51F8               	movf	RetKrkDelta@max& (0+255),w,b
 46158  008E8A  5DF7               	subwf	RetKrkDelta@min& (0+255),w,b
 46159  008E8C  E301               	bnc	l36002
 46160                           
 46161                           ; BSR set to: 2
 46162  008E8E  0C00               	retlw	0
 46163  008E90                     l36002:
 46164                           
 46165                           ; BSR set to: 2
 46166                           ;pompa.c: 295: return ((max-min)*10)/9;
 46167  008E90  6A21               	clrf	?___wmul+3,c
 46168  008E92  0E0A               	movlw	10
 46169  008E94  6E20               	movwf	?___wmul+2,c
 46170  008E96  51F7               	movf	RetKrkDelta@min& (0+255),w,b
 46171  008E98  5DF8               	subwf	RetKrkDelta@max& (0+255),w,b
 46172  008E9A  6E1E               	movwf	?___wmul,c
 46173  008E9C  6A1F               	clrf	?___wmul+1,c
 46174  008E9E  A0D8               	btfss	status,0,c
 46175  008EA0  061F               	decf	?___wmul+1,f,c
 46176  008EA2  EC9C  F056         	call	___wmul	;wreg free
 46177  008EA6  C01E  F0F3         	movff	?___wmul,?___awdiv
 46178  008EAA  C01F  F0F4         	movff	?___wmul+1,?___awdiv+1
 46179  008EAE  0100               	movlb	0	; () banked
 46180  008EB0  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 46181  008EB2  0E09               	movlw	9
 46182  008EB4  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 46183  008EB6  EC37  F04A         	call	___awdiv	;wreg free
 46184  008EBA  51F3               	movf	?___awdiv& (0+255),w,b
 46185  008EBC  0012               	return	
 46186  008EBE                     __end_of_RetKrkDelta:
 46187                           	opt stack 0
 46188                           tblptru	equ	0xFF8
 46189                           tblptrh	equ	0xFF7
 46190                           tblptrl	equ	0xFF6
 46191                           tablat	equ	0xFF5
 46192                           prodh	equ	0xFF4
 46193                           prodl	equ	0xFF3
 46194                           intcon	equ	0xFF2
 46195                           postinc0	equ	0xFEE
 46196                           wreg	equ	0xFE8
 46197                           indf1	equ	0xFE7
 46198                           postinc1	equ	0xFE6
 46199                           postdec1	equ	0xFE5
 46200                           fsr1h	equ	0xFE2
 46201                           fsr1l	equ	0xFE1
 46202                           indf2	equ	0xFDF
 46203                           postinc2	equ	0xFDE
 46204                           postdec2	equ	0xFDD
 46205                           fsr2h	equ	0xFDA
 46206                           fsr2l	equ	0xFD9
 46207                           status	equ	0xFD8
 46208                           
 46209 ;; *************** function _RetHI *****************
 46210 ;; Defined at:
 46211 ;;		line 212 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 46212 ;; Parameters:    Size  Location     Type
 46213 ;;  pco             1    wreg     unsigned char 
 46214 ;;  eco             1   35[COMRAM] unsigned char 
 46215 ;;  max             1   36[COMRAM] unsigned char 
 46216 ;; Auto vars:     Size  Location     Type
 46217 ;;  pco             1    1[BANK2 ] unsigned char 
 46218 ;;  emax            1    3[BANK2 ] unsigned char 
 46219 ;;  w               1    2[BANK2 ] char 
 46220 ;;  k               1    0[BANK2 ] unsigned char 
 46221 ;; Return value:  Size  Location     Type
 46222 ;;                  1    wreg      unsigned char 
 46223 ;; Registers used:
 46224 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 46225 ;; Tracked objects:
 46226 ;;		On entry : D/0
 46227 ;;		On exit  : C/0
 46228 ;;		Unchanged: FFFFFFF0/0
 46229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46231 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46232 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46233 ;;      Totals:         2       5       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46234 ;;Total ram usage:       11 bytes
 46235 ;; Hardware stack levels used:    1
 46236 ;; Hardware stack levels required when called:    5
 46237 ;; This function calls:
 46238 ;;		___awdiv
 46239 ;; This function is called by:
 46240 ;;		_RetKrkDelta
 46241 ;;		_ModPmp2
 46242 ;; This function uses a non-reentrant model
 46243 ;;
 46244                           
 46245                           	psect	text218
 46246  008BC0                     __ptext218:
 46247                           	opt stack 0
 46248  008BC0                     _RetHI:
 46249                           	opt stack 20
 46250                           
 46251                           ;RetHI@pco stored from wreg
 46252  008BC0  CFE8 F2F1          	movff	wreg,RetHI@pco
 46253                           
 46254                           ;pompa.c: 213: signed char w;
 46255                           ;pompa.c: 214: unsigned char k,emax;
 46256                           ;pompa.c: 216: if(pco>max) emax=pco;
 46257  008BC4  0102               	movlb	2	; () banked
 46258  008BC6  51F1               	movf	RetHI@pco& (0+255),w,b
 46259  008BC8  6025               	cpfslt	RetHI@max,c
 46260  008BCA  D003               	goto	l4222
 46261                           
 46262                           ; BSR set to: 2
 46263  008BCC  C2F1  F2F3         	movff	RetHI@pco,RetHI@emax
 46264  008BD0  D002               	goto	l35886
 46265  008BD2                     l4222:
 46266                           
 46267                           ; BSR set to: 2
 46268                           ;pompa.c: 217: else emax=max;
 46269  008BD2  C025  F2F3         	movff	RetHI@max,RetHI@emax
 46270  008BD6                     l35886:
 46271                           
 46272                           ; BSR set to: 2
 46273                           ;pompa.c: 219: k=(emax-DtIN.Eco5HI)/4;
 46274  008BD6  0101               	movlb	1	; () banked
 46275  008BD8  5141               	movf	(_DtIN+11)& (0+255),w,b
 46276  008BDA  0102               	movlb	2	; () banked
 46277  008BDC  5DF3               	subwf	RetHI@emax& (0+255),w,b
 46278  008BDE  0100               	movlb	0	; () banked
 46279  008BE0  6FF3               	movwf	?___awdiv& (0+255),b
 46280  008BE2  6BF4               	clrf	(?___awdiv+1)& (0+255),b
 46281  008BE4  A0D8               	btfss	status,0,c
 46282  008BE6  07F4               	decf	(?___awdiv+1)& (0+255),f,b
 46283  008BE8  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 46284  008BEA  0E04               	movlw	4
 46285  008BEC  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 46286  008BEE  EC37  F04A         	call	___awdiv	;wreg free
 46287  008BF2  51F3               	movf	?___awdiv& (0+255),w,b
 46288  008BF4  0102               	movlb	2	; () banked
 46289  008BF6  6FF0               	movwf	RetHI@k& (0+255),b
 46290                           
 46291                           ; BSR set to: 2
 46292                           ;pompa.c: 220: w=(DtIN.Eco5HI+((5-eco)*k));
 46293  008BF8  5024               	movf	RetHI@eco,w,c
 46294  008BFA  0805               	sublw	5
 46295  008BFC  03F0               	mulwf	RetHI@k& (0+255),b
 46296  008BFE  50F3               	movf	prodl,w,c
 46297  008C00  0101               	movlb	1	; () banked
 46298  008C02  2541               	addwf	(_DtIN+11)& (0+255),w,b
 46299  008C04  0102               	movlb	2	; () banked
 46300  008C06  6FF2               	movwf	RetHI@w& (0+255),b
 46301                           
 46302                           ; BSR set to: 2
 46303                           ;pompa.c: 221: if(w<=emax&&w>=DtIN.Eco5LO) return w;
 46304  008C08  51F3               	movf	RetHI@emax& (0+255),w,b
 46305  008C0A  BFF2               	btfsc	RetHI@w& (0+255),7,b
 46306  008C0C  D003               	goto	u68020
 46307  008C0E  0AFF               	xorlw	255
 46308  008C10  25F2               	addwf	RetHI@w& (0+255),w,b
 46309  008C12  E216               	bc	l35900
 46310  008C14                     u68020:
 46311                           
 46312                           ; BSR set to: 2
 46313  008C14  0101               	movlb	1	; () banked
 46314  008C16  5142               	movf	(_DtIN+12)& (0+255),w,b
 46315  008C18  0100               	movlb	0	; () banked
 46316  008C1A  6FFB               	movwf	??_RetHI& (0+255),b
 46317  008C1C  6BFC               	clrf	(??_RetHI+1)& (0+255),b
 46318  008C1E  C2F2  F0FD         	movff	RetHI@w,??_RetHI+2
 46319  008C22  6BFE               	clrf	(??_RetHI+3)& (0+255),b
 46320  008C24  BFFD               	btfsc	(??_RetHI+2)& (0+255),7,b
 46321  008C26  07FE               	decf	(??_RetHI+3)& (0+255),f,b
 46322  008C28  51FE               	movf	(??_RetHI+3)& (0+255),w,b
 46323  008C2A  0A80               	xorlw	128
 46324  008C2C  6FFF               	movwf	(??_RetHI+4)& (0+255),b
 46325  008C2E  51FB               	movf	??_RetHI& (0+255),w,b
 46326  008C30  5DFD               	subwf	(??_RetHI+2)& (0+255),w,b
 46327  008C32  51FC               	movf	(??_RetHI+1)& (0+255),w,b
 46328  008C34  0A80               	xorlw	128
 46329  008C36  59FF               	subwfb	(??_RetHI+4)& (0+255),w,b
 46330  008C38  E303               	bnc	l35900
 46331                           
 46332                           ; BSR set to: 0
 46333  008C3A  0102               	movlb	2	; () banked
 46334  008C3C  51F2               	movf	RetHI@w& (0+255),w,b
 46335  008C3E  0012               	return	
 46336  008C40                     l35900:
 46337                           
 46338                           ;pompa.c: 222: else
 46339                           ;pompa.c: 223: if(w>emax) return emax;
 46340  008C40  0102               	movlb	2	; () banked
 46341  008C42  51F3               	movf	RetHI@emax& (0+255),w,b
 46342  008C44  80D8               	bsf	status,0,c
 46343  008C46  84D8               	bsf	status,2,c
 46344  008C48  AFF2               	btfss	RetHI@w& (0+255),7,b
 46345  008C4A  5DF2               	subwf	RetHI@w& (0+255),w,b
 46346  008C4C  A0D8               	btfss	status,0,c
 46347  008C4E  84D8               	bsf	status,2,c
 46348  008C50  E002               	bz	l35908
 46349                           
 46350                           ; BSR set to: 2
 46351  008C52  51F3               	movf	RetHI@emax& (0+255),w,b
 46352  008C54  0012               	return	
 46353  008C56                     l35908:
 46354                           
 46355                           ; BSR set to: 2
 46356                           ;pompa.c: 224: else return DtIN.Eco5LO;
 46357  008C56  0101               	movlb	1	; () banked
 46358  008C58  5142               	movf	(_DtIN+12)& (0+255),w,b
 46359  008C5A  0012               	return	
 46360  008C5C                     __end_of_RetHI:
 46361                           	opt stack 0
 46362                           tblptru	equ	0xFF8
 46363                           tblptrh	equ	0xFF7
 46364                           tblptrl	equ	0xFF6
 46365                           tablat	equ	0xFF5
 46366                           prodh	equ	0xFF4
 46367                           prodl	equ	0xFF3
 46368                           intcon	equ	0xFF2
 46369                           postinc0	equ	0xFEE
 46370                           wreg	equ	0xFE8
 46371                           indf1	equ	0xFE7
 46372                           postinc1	equ	0xFE6
 46373                           postdec1	equ	0xFE5
 46374                           fsr1h	equ	0xFE2
 46375                           fsr1l	equ	0xFE1
 46376                           indf2	equ	0xFDF
 46377                           postinc2	equ	0xFDE
 46378                           postdec2	equ	0xFDD
 46379                           fsr2h	equ	0xFDA
 46380                           fsr2l	equ	0xFD9
 46381                           status	equ	0xFD8
 46382                           
 46383 ;; *************** function _RetLO *****************
 46384 ;; Defined at:
 46385 ;;		line 230 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 46386 ;; Parameters:    Size  Location     Type
 46387 ;;  pco             1    wreg     unsigned char 
 46388 ;;  eco             1   35[COMRAM] unsigned char 
 46389 ;;  min             1   36[COMRAM] unsigned char 
 46390 ;; Auto vars:     Size  Location     Type
 46391 ;;  pco             1    1[BANK2 ] unsigned char 
 46392 ;;  ehi             1    3[BANK2 ] unsigned char 
 46393 ;;  w               1    2[BANK2 ] char 
 46394 ;;  k               1    0[BANK2 ] unsigned char 
 46395 ;; Return value:  Size  Location     Type
 46396 ;;                  1    wreg      unsigned char 
 46397 ;; Registers used:
 46398 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 46399 ;; Tracked objects:
 46400 ;;		On entry : D/0
 46401 ;;		On exit  : F/2
 46402 ;;		Unchanged: FFFFFFF0/0
 46403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46405 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46406 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46407 ;;      Totals:         2       5       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46408 ;;Total ram usage:       11 bytes
 46409 ;; Hardware stack levels used:    1
 46410 ;; Hardware stack levels required when called:    5
 46411 ;; This function calls:
 46412 ;;		___awdiv
 46413 ;; This function is called by:
 46414 ;;		_RetKrkDelta
 46415 ;;		_ModPmp2
 46416 ;; This function uses a non-reentrant model
 46417 ;;
 46418                           
 46419                           	psect	text219
 46420  008CF6                     __ptext219:
 46421                           	opt stack 0
 46422  008CF6                     _RetLO:
 46423                           	opt stack 20
 46424                           
 46425                           ;RetLO@pco stored from wreg
 46426  008CF6  CFE8 F2F1          	movff	wreg,RetLO@pco
 46427                           
 46428                           ;pompa.c: 231: signed char w;
 46429                           ;pompa.c: 232: unsigned char k,ehi;
 46430                           ;pompa.c: 234: if(pco<DtIN.Eco5HI) ehi=pco;
 46431  008CFA  0101               	movlb	1	; () banked
 46432  008CFC  5141               	movf	(_DtIN+11)& (0+255),w,b
 46433  008CFE  0102               	movlb	2	; () banked
 46434  008D00  61F1               	cpfslt	RetLO@pco& (0+255),b
 46435  008D02  D003               	goto	l4231
 46436                           
 46437                           ; BSR set to: 2
 46438  008D04  C2F1  F2F3         	movff	RetLO@pco,RetLO@ehi
 46439  008D08  D002               	goto	l35916
 46440  008D0A                     l4231:
 46441                           
 46442                           ; BSR set to: 2
 46443                           ;pompa.c: 235: else ehi=DtIN.Eco5HI;
 46444  008D0A  C141  F2F3         	movff	_DtIN+11,RetLO@ehi
 46445  008D0E                     l35916:
 46446                           
 46447                           ; BSR set to: 2
 46448                           ;pompa.c: 237: k=(ehi-DtIN.Eco5LO)/4;
 46449  008D0E  0101               	movlb	1	; () banked
 46450  008D10  5142               	movf	(_DtIN+12)& (0+255),w,b
 46451  008D12  0102               	movlb	2	; () banked
 46452  008D14  5DF3               	subwf	RetLO@ehi& (0+255),w,b
 46453  008D16  0100               	movlb	0	; () banked
 46454  008D18  6FF3               	movwf	?___awdiv& (0+255),b
 46455  008D1A  6BF4               	clrf	(?___awdiv+1)& (0+255),b
 46456  008D1C  A0D8               	btfss	status,0,c
 46457  008D1E  07F4               	decf	(?___awdiv+1)& (0+255),f,b
 46458  008D20  6BF6               	clrf	(?___awdiv+3)& (0+255),b
 46459  008D22  0E04               	movlw	4
 46460  008D24  6FF5               	movwf	(?___awdiv+2)& (0+255),b
 46461  008D26  EC37  F04A         	call	___awdiv	;wreg free
 46462  008D2A  51F3               	movf	?___awdiv& (0+255),w,b
 46463  008D2C  0102               	movlb	2	; () banked
 46464  008D2E  6FF0               	movwf	RetLO@k& (0+255),b
 46465                           
 46466                           ; BSR set to: 2
 46467                           ;pompa.c: 238: w=(DtIN.Eco5LO+((5-eco)*k));
 46468  008D30  5024               	movf	RetLO@eco,w,c
 46469  008D32  0805               	sublw	5
 46470  008D34  03F0               	mulwf	RetLO@k& (0+255),b
 46471  008D36  50F3               	movf	prodl,w,c
 46472  008D38  0101               	movlb	1	; () banked
 46473  008D3A  2542               	addwf	(_DtIN+12)& (0+255),w,b
 46474  008D3C  0102               	movlb	2	; () banked
 46475  008D3E  6FF2               	movwf	RetLO@w& (0+255),b
 46476                           
 46477                           ; BSR set to: 2
 46478                           ;pompa.c: 240: if(w<=ehi&&w>=min) return w;
 46479  008D40  51F3               	movf	RetLO@ehi& (0+255),w,b
 46480  008D42  BFF2               	btfsc	RetLO@w& (0+255),7,b
 46481  008D44  D003               	goto	u68060
 46482  008D46  0AFF               	xorlw	255
 46483  008D48  25F2               	addwf	RetLO@w& (0+255),w,b
 46484  008D4A  E215               	bc	l35930
 46485  008D4C                     u68060:
 46486                           
 46487                           ; BSR set to: 2
 46488  008D4C  5025               	movf	RetLO@min,w,c
 46489  008D4E  0100               	movlb	0	; () banked
 46490  008D50  6FFB               	movwf	??_RetLO& (0+255),b
 46491  008D52  6BFC               	clrf	(??_RetLO+1)& (0+255),b
 46492  008D54  C2F2  F0FD         	movff	RetLO@w,??_RetLO+2
 46493  008D58  6BFE               	clrf	(??_RetLO+3)& (0+255),b
 46494  008D5A  BFFD               	btfsc	(??_RetLO+2)& (0+255),7,b
 46495  008D5C  07FE               	decf	(??_RetLO+3)& (0+255),f,b
 46496  008D5E  51FE               	movf	(??_RetLO+3)& (0+255),w,b
 46497  008D60  0A80               	xorlw	128
 46498  008D62  6FFF               	movwf	(??_RetLO+4)& (0+255),b
 46499  008D64  51FB               	movf	??_RetLO& (0+255),w,b
 46500  008D66  5DFD               	subwf	(??_RetLO+2)& (0+255),w,b
 46501  008D68  51FC               	movf	(??_RetLO+1)& (0+255),w,b
 46502  008D6A  0A80               	xorlw	128
 46503  008D6C  59FF               	subwfb	(??_RetLO+4)& (0+255),w,b
 46504  008D6E  E303               	bnc	l35930
 46505                           
 46506                           ; BSR set to: 0
 46507  008D70  0102               	movlb	2	; () banked
 46508  008D72  51F2               	movf	RetLO@w& (0+255),w,b
 46509  008D74  0012               	return	
 46510  008D76                     l35930:
 46511                           
 46512                           ;pompa.c: 241: else
 46513                           ;pompa.c: 242: if(w>ehi) return ehi;
 46514  008D76  0102               	movlb	2	; () banked
 46515  008D78  51F3               	movf	RetLO@ehi& (0+255),w,b
 46516  008D7A  80D8               	bsf	status,0,c
 46517  008D7C  84D8               	bsf	status,2,c
 46518  008D7E  AFF2               	btfss	RetLO@w& (0+255),7,b
 46519  008D80  5DF2               	subwf	RetLO@w& (0+255),w,b
 46520  008D82  A0D8               	btfss	status,0,c
 46521  008D84  84D8               	bsf	status,2,c
 46522  008D86  E002               	bz	l35938
 46523                           
 46524                           ; BSR set to: 2
 46525  008D88  51F3               	movf	RetLO@ehi& (0+255),w,b
 46526  008D8A  0012               	return	
 46527  008D8C                     l35938:
 46528                           
 46529                           ; BSR set to: 2
 46530                           ;pompa.c: 243: else return min;
 46531  008D8C  5025               	movf	RetLO@min,w,c
 46532                           
 46533                           ; BSR set to: 2
 46534  008D8E  0012               	return	
 46535  008D90                     __end_of_RetLO:
 46536                           	opt stack 0
 46537                           tblptru	equ	0xFF8
 46538                           tblptrh	equ	0xFF7
 46539                           tblptrl	equ	0xFF6
 46540                           tablat	equ	0xFF5
 46541                           prodh	equ	0xFF4
 46542                           prodl	equ	0xFF3
 46543                           intcon	equ	0xFF2
 46544                           postinc0	equ	0xFEE
 46545                           wreg	equ	0xFE8
 46546                           indf1	equ	0xFE7
 46547                           postinc1	equ	0xFE6
 46548                           postdec1	equ	0xFE5
 46549                           fsr1h	equ	0xFE2
 46550                           fsr1l	equ	0xFE1
 46551                           indf2	equ	0xFDF
 46552                           postinc2	equ	0xFDE
 46553                           postdec2	equ	0xFDD
 46554                           fsr2h	equ	0xFDA
 46555                           fsr2l	equ	0xFD9
 46556                           status	equ	0xFD8
 46557                           
 46558 ;; *************** function _RetDelta4 *****************
 46559 ;; Defined at:
 46560 ;;		line 270 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 46561 ;; Parameters:    Size  Location     Type
 46562 ;;  pco             1    wreg     unsigned char 
 46563 ;;  eco             1    0[BANK1 ] unsigned char 
 46564 ;;  hi              1    1[BANK1 ] unsigned char 
 46565 ;;  lo              1    2[BANK1 ] unsigned char 
 46566 ;; Auto vars:     Size  Location     Type
 46567 ;;  pco             1    4[BANK2 ] unsigned char 
 46568 ;;  d               1    5[BANK2 ] char 
 46569 ;; Return value:  Size  Location     Type
 46570 ;;                  1    wreg      unsigned char 
 46571 ;; Registers used:
 46572 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 46573 ;; Tracked objects:
 46574 ;;		On entry : F/2
 46575 ;;		On exit  : F/2
 46576 ;;		Unchanged: FFFFFFF0/0
 46577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46578 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46579 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46581 ;;      Totals:         0       0       3       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46582 ;;Total ram usage:        5 bytes
 46583 ;; Hardware stack levels used:    1
 46584 ;; Hardware stack levels required when called:    5
 46585 ;; This function calls:
 46586 ;;		_RetDelta1
 46587 ;;		_RetDelta2
 46588 ;;		_RetDelta3
 46589 ;;		_RetMax
 46590 ;;		_RetMin
 46591 ;; This function is called by:
 46592 ;;		_RetKrkDelta
 46593 ;; This function uses a non-reentrant model
 46594 ;;
 46595                           
 46596                           	psect	text220
 46597  00A102                     __ptext220:
 46598                           	opt stack 0
 46599  00A102                     _RetDelta4:
 46600                           	opt stack 20
 46601                           
 46602                           ; BSR set to: 2
 46603                           ;RetDelta4@pco stored from wreg
 46604  00A102  CFE8 F2F4          	movff	wreg,RetDelta4@pco
 46605                           
 46606                           ; BSR set to: 2
 46607                           ;pompa.c: 271: signed char d;
 46608                           ;pompa.c: 273: DtIN.delta1=RetDelta1(pco,hi);
 46609  00A106  C1FE  F01E         	movff	RetDelta4@hi,?_RetDelta1
 46610  00A10A  51F4               	movf	RetDelta4@pco& (0+255),w,b
 46611  00A10C  EC02  F05B         	call	_RetDelta1
 46612  00A110  0101               	movlb	1	; () banked
 46613  00A112  6F45               	movwf	(_DtIN+15)& (0+255),b
 46614                           
 46615                           ; BSR set to: 1
 46616                           ;pompa.c: 274: DtIN.delta2=RetDelta2(eco,20);
 46617  00A114  0E14               	movlw	20
 46618  00A116  6E1E               	movwf	?_RetDelta2,c
 46619  00A118  51FD               	movf	RetDelta4@eco& (0+255),w,b
 46620  00A11A  EC9B  F059         	call	_RetDelta2
 46621  00A11E  6F46               	movwf	(_DtIN+16)& (0+255),b
 46622                           
 46623                           ; BSR set to: 1
 46624                           ;pompa.c: 275: DtIN.delta3=RetDelta3(pco,lo);
 46625  00A120  C1FF  F01E         	movff	RetDelta4@lo,?_RetDelta3
 46626  00A124  0102               	movlb	2	; () banked
 46627  00A126  51F4               	movf	RetDelta4@pco& (0+255),w,b
 46628  00A128  EC07  F05B         	call	_RetDelta3
 46629  00A12C  0101               	movlb	1	; () banked
 46630  00A12E  6F47               	movwf	(_DtIN+17)& (0+255),b
 46631                           
 46632                           ; BSR set to: 1
 46633                           ;pompa.c: 276: d=RetMin(DtIN.delta3,RetMax(DtIN.delta1,DtIN.delta2));
 46634  00A130  C146  F01E         	movff	_DtIN+16,?_RetMax
 46635  00A134  5145               	movf	(_DtIN+15)& (0+255),w,b
 46636  00A136  EC3A  F059         	call	_RetMax
 46637  00A13A  6E21               	movwf	?_RetMin,c
 46638  00A13C  5147               	movf	(_DtIN+17)& (0+255),w,b
 46639  00A13E  EC2D  F059         	call	_RetMin
 46640  00A142  0102               	movlb	2	; () banked
 46641  00A144  6FF5               	movwf	RetDelta4@d& (0+255),b
 46642                           
 46643                           ; BSR set to: 2
 46644                           ;pompa.c: 277: if(d>0) return d;
 46645  00A146  51F5               	movf	RetDelta4@d& (0+255),w,b
 46646  00A148  0A80               	xorlw	128
 46647  00A14A  0F7F               	addlw	-129
 46648  00A14C  E302               	bnc	l35970
 46649                           
 46650                           ; BSR set to: 2
 46651  00A14E  51F5               	movf	RetDelta4@d& (0+255),w,b
 46652  00A150  0012               	return	
 46653  00A152                     l35970:
 46654                           
 46655                           ; BSR set to: 2
 46656                           
 46657                           ; BSR set to: 2
 46658                           ;pompa.c: 278: return 0;
 46659  00A152  0C00               	retlw	0
 46660  00A154                     __end_of_RetDelta4:
 46661                           	opt stack 0
 46662                           tblptru	equ	0xFF8
 46663                           tblptrh	equ	0xFF7
 46664                           tblptrl	equ	0xFF6
 46665                           tablat	equ	0xFF5
 46666                           prodh	equ	0xFF4
 46667                           prodl	equ	0xFF3
 46668                           intcon	equ	0xFF2
 46669                           postinc0	equ	0xFEE
 46670                           wreg	equ	0xFE8
 46671                           indf1	equ	0xFE7
 46672                           postinc1	equ	0xFE6
 46673                           postdec1	equ	0xFE5
 46674                           fsr1h	equ	0xFE2
 46675                           fsr1l	equ	0xFE1
 46676                           indf2	equ	0xFDF
 46677                           postinc2	equ	0xFDE
 46678                           postdec2	equ	0xFDD
 46679                           fsr2h	equ	0xFDA
 46680                           fsr2l	equ	0xFD9
 46681                           status	equ	0xFD8
 46682                           
 46683 ;; *************** function _RetMin *****************
 46684 ;; Defined at:
 46685 ;;		line 197 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 46686 ;; Parameters:    Size  Location     Type
 46687 ;;  a               1    wreg     char 
 46688 ;;  b               1   32[COMRAM] char 
 46689 ;; Auto vars:     Size  Location     Type
 46690 ;;  a               1   34[COMRAM] char 
 46691 ;; Return value:  Size  Location     Type
 46692 ;;                  1    wreg      char 
 46693 ;; Registers used:
 46694 ;;		wreg, status,2, status,0
 46695 ;; Tracked objects:
 46696 ;;		On entry : F/1
 46697 ;;		On exit  : F/1
 46698 ;;		Unchanged: FFFFFFF0/0
 46699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46700 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46703 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46704 ;;Total ram usage:        3 bytes
 46705 ;; Hardware stack levels used:    1
 46706 ;; Hardware stack levels required when called:    4
 46707 ;; This function calls:
 46708 ;;		Nothing
 46709 ;; This function is called by:
 46710 ;;		_RetDelta4
 46711 ;; This function uses a non-reentrant model
 46712 ;;
 46713                           
 46714                           	psect	text221
 46715  00B25A                     __ptext221:
 46716                           	opt stack 0
 46717  00B25A                     _RetMin:
 46718                           	opt stack 20
 46719                           
 46720                           ; BSR set to: 2
 46721                           ;RetMin@a stored from wreg
 46722  00B25A  CFE8 F023          	movff	wreg,RetMin@a
 46723                           
 46724                           ; BSR set to: 1
 46725                           ;pompa.c: 198: if(a<=b) return a;
 46726  00B25E  5021               	movf	RetMin@b,w,c
 46727  00B260  0A80               	xorlw	128
 46728  00B262  6E22               	movwf	??_RetMin& (0+255),c
 46729  00B264  5023               	movf	RetMin@a,w,c
 46730  00B266  0A80               	xorlw	128
 46731  00B268  5C22               	subwf	??_RetMin,w,c
 46732  00B26A  E302               	bnc	l35868
 46733                           
 46734                           ; BSR set to: 1
 46735  00B26C  5023               	movf	RetMin@a,w,c
 46736  00B26E  0012               	return	
 46737  00B270                     l35868:
 46738                           
 46739                           ; BSR set to: 1
 46740                           ;pompa.c: 199: return b;
 46741  00B270  5021               	movf	RetMin@b,w,c
 46742                           
 46743                           ; BSR set to: 1
 46744  00B272  0012               	return	
 46745  00B274                     __end_of_RetMin:
 46746                           	opt stack 0
 46747                           tblptru	equ	0xFF8
 46748                           tblptrh	equ	0xFF7
 46749                           tblptrl	equ	0xFF6
 46750                           tablat	equ	0xFF5
 46751                           prodh	equ	0xFF4
 46752                           prodl	equ	0xFF3
 46753                           intcon	equ	0xFF2
 46754                           postinc0	equ	0xFEE
 46755                           wreg	equ	0xFE8
 46756                           indf1	equ	0xFE7
 46757                           postinc1	equ	0xFE6
 46758                           postdec1	equ	0xFE5
 46759                           fsr1h	equ	0xFE2
 46760                           fsr1l	equ	0xFE1
 46761                           indf2	equ	0xFDF
 46762                           postinc2	equ	0xFDE
 46763                           postdec2	equ	0xFDD
 46764                           fsr2h	equ	0xFDA
 46765                           fsr2l	equ	0xFD9
 46766                           status	equ	0xFD8
 46767                           
 46768 ;; *************** function _RetMax *****************
 46769 ;; Defined at:
 46770 ;;		line 204 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 46771 ;; Parameters:    Size  Location     Type
 46772 ;;  a               1    wreg     char 
 46773 ;;  b               1   29[COMRAM] char 
 46774 ;; Auto vars:     Size  Location     Type
 46775 ;;  a               1   31[COMRAM] char 
 46776 ;; Return value:  Size  Location     Type
 46777 ;;                  1    wreg      char 
 46778 ;; Registers used:
 46779 ;;		wreg, status,2, status,0
 46780 ;; Tracked objects:
 46781 ;;		On entry : F/1
 46782 ;;		On exit  : F/1
 46783 ;;		Unchanged: FFFFFFF0/0
 46784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46785 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46786 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46788 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46789 ;;Total ram usage:        3 bytes
 46790 ;; Hardware stack levels used:    1
 46791 ;; Hardware stack levels required when called:    4
 46792 ;; This function calls:
 46793 ;;		Nothing
 46794 ;; This function is called by:
 46795 ;;		_RetDelta4
 46796 ;; This function uses a non-reentrant model
 46797 ;;
 46798                           
 46799                           	psect	text222
 46800  00B274                     __ptext222:
 46801                           	opt stack 0
 46802  00B274                     _RetMax:
 46803                           	opt stack 20
 46804                           
 46805                           ; BSR set to: 1
 46806                           ;RetMax@a stored from wreg
 46807  00B274  CFE8 F020          	movff	wreg,RetMax@a
 46808                           
 46809                           ; BSR set to: 1
 46810                           ;pompa.c: 205: if(a>=b) return a;
 46811  00B278  5020               	movf	RetMax@a,w,c
 46812  00B27A  0A80               	xorlw	128
 46813  00B27C  6E1F               	movwf	??_RetMax& (0+255),c
 46814  00B27E  501E               	movf	RetMax@b,w,c
 46815  00B280  0A80               	xorlw	128
 46816  00B282  5C1F               	subwf	??_RetMax,w,c
 46817  00B284  E302               	bnc	l35878
 46818                           
 46819                           ; BSR set to: 1
 46820  00B286  5020               	movf	RetMax@a,w,c
 46821  00B288  0012               	return	
 46822  00B28A                     l35878:
 46823                           
 46824                           ; BSR set to: 1
 46825                           ;pompa.c: 206: return b;
 46826  00B28A  501E               	movf	RetMax@b,w,c
 46827                           
 46828                           ; BSR set to: 1
 46829  00B28C  0012               	return	
 46830  00B28E                     __end_of_RetMax:
 46831                           	opt stack 0
 46832                           tblptru	equ	0xFF8
 46833                           tblptrh	equ	0xFF7
 46834                           tblptrl	equ	0xFF6
 46835                           tablat	equ	0xFF5
 46836                           prodh	equ	0xFF4
 46837                           prodl	equ	0xFF3
 46838                           intcon	equ	0xFF2
 46839                           postinc0	equ	0xFEE
 46840                           wreg	equ	0xFE8
 46841                           indf1	equ	0xFE7
 46842                           postinc1	equ	0xFE6
 46843                           postdec1	equ	0xFE5
 46844                           fsr1h	equ	0xFE2
 46845                           fsr1l	equ	0xFE1
 46846                           indf2	equ	0xFDF
 46847                           postinc2	equ	0xFDE
 46848                           postdec2	equ	0xFDD
 46849                           fsr2h	equ	0xFDA
 46850                           fsr2l	equ	0xFD9
 46851                           status	equ	0xFD8
 46852                           
 46853 ;; *************** function _RetDelta1 *****************
 46854 ;; Defined at:
 46855 ;;		line 248 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 46856 ;; Parameters:    Size  Location     Type
 46857 ;;  pco             1    wreg     unsigned char 
 46858 ;;  hi              1   29[COMRAM] unsigned char 
 46859 ;; Auto vars:     Size  Location     Type
 46860 ;;  pco             1   30[COMRAM] unsigned char 
 46861 ;; Return value:  Size  Location     Type
 46862 ;;                  1    wreg      char 
 46863 ;; Registers used:
 46864 ;;		wreg, status,2, status,0
 46865 ;; Tracked objects:
 46866 ;;		On entry : F/2
 46867 ;;		On exit  : F/2
 46868 ;;		Unchanged: FFFFFFF0/0
 46869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46870 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46873 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46874 ;;Total ram usage:        2 bytes
 46875 ;; Hardware stack levels used:    1
 46876 ;; Hardware stack levels required when called:    4
 46877 ;; This function calls:
 46878 ;;		Nothing
 46879 ;; This function is called by:
 46880 ;;		_RetDelta4
 46881 ;; This function uses a non-reentrant model
 46882 ;;
 46883                           
 46884                           	psect	text223
 46885  00B604                     __ptext223:
 46886                           	opt stack 0
 46887  00B604                     _RetDelta1:
 46888                           	opt stack 20
 46889                           
 46890                           ; BSR set to: 1
 46891                           ;RetDelta1@pco stored from wreg
 46892  00B604  CFE8 F01F          	movff	wreg,RetDelta1@pco
 46893                           
 46894                           ; BSR set to: 2
 46895                           ;pompa.c: 249: return (pco-hi);
 46896  00B608  501E               	movf	RetDelta1@hi,w,c
 46897  00B60A  5C1F               	subwf	RetDelta1@pco,w,c
 46898                           
 46899                           ; BSR set to: 2
 46900  00B60C  0012               	return	
 46901  00B60E                     __end_of_RetDelta1:
 46902                           	opt stack 0
 46903                           tblptru	equ	0xFF8
 46904                           tblptrh	equ	0xFF7
 46905                           tblptrl	equ	0xFF6
 46906                           tablat	equ	0xFF5
 46907                           prodh	equ	0xFF4
 46908                           prodl	equ	0xFF3
 46909                           intcon	equ	0xFF2
 46910                           postinc0	equ	0xFEE
 46911                           wreg	equ	0xFE8
 46912                           indf1	equ	0xFE7
 46913                           postinc1	equ	0xFE6
 46914                           postdec1	equ	0xFE5
 46915                           fsr1h	equ	0xFE2
 46916                           fsr1l	equ	0xFE1
 46917                           indf2	equ	0xFDF
 46918                           postinc2	equ	0xFDE
 46919                           postdec2	equ	0xFDD
 46920                           fsr2h	equ	0xFDA
 46921                           fsr2l	equ	0xFD9
 46922                           status	equ	0xFD8
 46923                           
 46924 ;; *************** function _RetDelta2 *****************
 46925 ;; Defined at:
 46926 ;;		line 255 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 46927 ;; Parameters:    Size  Location     Type
 46928 ;;  eco             1    wreg     unsigned char 
 46929 ;;  ddlt            1   29[COMRAM] unsigned char 
 46930 ;; Auto vars:     Size  Location     Type
 46931 ;;  eco             1   30[COMRAM] unsigned char 
 46932 ;;  kD              1   31[COMRAM] unsigned char 
 46933 ;; Return value:  Size  Location     Type
 46934 ;;                  1    wreg      char 
 46935 ;; Registers used:
 46936 ;;		wreg, status,2, status,0, prodl, prodh
 46937 ;; Tracked objects:
 46938 ;;		On entry : F/1
 46939 ;;		On exit  : F/1
 46940 ;;		Unchanged: FFFFFFF0/0
 46941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 46942 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46945 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46946 ;;Total ram usage:        3 bytes
 46947 ;; Hardware stack levels used:    1
 46948 ;; Hardware stack levels required when called:    4
 46949 ;; This function calls:
 46950 ;;		Nothing
 46951 ;; This function is called by:
 46952 ;;		_RetDelta4
 46953 ;; This function uses a non-reentrant model
 46954 ;;
 46955                           
 46956                           	psect	text224
 46957  00B336                     __ptext224:
 46958                           	opt stack 0
 46959  00B336                     _RetDelta2:
 46960                           	opt stack 20
 46961                           
 46962                           ; BSR set to: 2
 46963                           ;RetDelta2@eco stored from wreg
 46964  00B336  CFE8 F01F          	movff	wreg,RetDelta2@eco
 46965                           
 46966                           ; BSR set to: 1
 46967                           ;pompa.c: 256: unsigned char kD;
 46968                           ;pompa.c: 258: kD=ddlt/4;
 46969  00B33A  401E               	rrncf	RetDelta2@ddlt,w,c
 46970  00B33C  42E8               	rrncf	wreg,f,c
 46971  00B33E  0B3F               	andlw	63
 46972  00B340  6E20               	movwf	RetDelta2@kD,c
 46973                           
 46974                           ; BSR set to: 1
 46975                           ;pompa.c: 259: return (ddlt+(kD*(eco-5)));
 46976  00B342  501F               	movf	RetDelta2@eco,w,c
 46977  00B344  0FFB               	addlw	251
 46978  00B346  0220               	mulwf	RetDelta2@kD,c
 46979  00B348  50F3               	movf	prodl,w,c
 46980  00B34A  241E               	addwf	RetDelta2@ddlt,w,c
 46981                           
 46982                           ; BSR set to: 1
 46983  00B34C  0012               	return	
 46984  00B34E                     __end_of_RetDelta2:
 46985                           	opt stack 0
 46986                           tblptru	equ	0xFF8
 46987                           tblptrh	equ	0xFF7
 46988                           tblptrl	equ	0xFF6
 46989                           tablat	equ	0xFF5
 46990                           prodh	equ	0xFF4
 46991                           prodl	equ	0xFF3
 46992                           intcon	equ	0xFF2
 46993                           postinc0	equ	0xFEE
 46994                           wreg	equ	0xFE8
 46995                           indf1	equ	0xFE7
 46996                           postinc1	equ	0xFE6
 46997                           postdec1	equ	0xFE5
 46998                           fsr1h	equ	0xFE2
 46999                           fsr1l	equ	0xFE1
 47000                           indf2	equ	0xFDF
 47001                           postinc2	equ	0xFDE
 47002                           postdec2	equ	0xFDD
 47003                           fsr2h	equ	0xFDA
 47004                           fsr2l	equ	0xFD9
 47005                           status	equ	0xFD8
 47006                           
 47007 ;; *************** function _RetDelta3 *****************
 47008 ;; Defined at:
 47009 ;;		line 264 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pompa.c"
 47010 ;; Parameters:    Size  Location     Type
 47011 ;;  pco             1    wreg     unsigned char 
 47012 ;;  lo              1   29[COMRAM] unsigned char 
 47013 ;; Auto vars:     Size  Location     Type
 47014 ;;  pco             1   30[COMRAM] unsigned char 
 47015 ;; Return value:  Size  Location     Type
 47016 ;;                  1    wreg      char 
 47017 ;; Registers used:
 47018 ;;		wreg, status,2, status,0
 47019 ;; Tracked objects:
 47020 ;;		On entry : F/2
 47021 ;;		On exit  : F/2
 47022 ;;		Unchanged: FFFFFFF0/0
 47023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47024 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47028 ;;Total ram usage:        2 bytes
 47029 ;; Hardware stack levels used:    1
 47030 ;; Hardware stack levels required when called:    4
 47031 ;; This function calls:
 47032 ;;		Nothing
 47033 ;; This function is called by:
 47034 ;;		_RetDelta4
 47035 ;; This function uses a non-reentrant model
 47036 ;;
 47037                           
 47038                           	psect	text225
 47039  00B60E                     __ptext225:
 47040                           	opt stack 0
 47041  00B60E                     _RetDelta3:
 47042                           	opt stack 20
 47043                           
 47044                           ; BSR set to: 1
 47045                           ;RetDelta3@pco stored from wreg
 47046  00B60E  CFE8 F01F          	movff	wreg,RetDelta3@pco
 47047                           
 47048                           ; BSR set to: 2
 47049                           ;pompa.c: 265: return (pco-lo);
 47050  00B612  501E               	movf	RetDelta3@lo,w,c
 47051  00B614  5C1F               	subwf	RetDelta3@pco,w,c
 47052                           
 47053                           ; BSR set to: 2
 47054  00B616  0012               	return	
 47055  00B618                     __end_of_RetDelta3:
 47056                           	opt stack 0
 47057                           tblptru	equ	0xFF8
 47058                           tblptrh	equ	0xFF7
 47059                           tblptrl	equ	0xFF6
 47060                           tablat	equ	0xFF5
 47061                           prodh	equ	0xFF4
 47062                           prodl	equ	0xFF3
 47063                           intcon	equ	0xFF2
 47064                           postinc0	equ	0xFEE
 47065                           wreg	equ	0xFE8
 47066                           indf1	equ	0xFE7
 47067                           postinc1	equ	0xFE6
 47068                           postdec1	equ	0xFE5
 47069                           fsr1h	equ	0xFE2
 47070                           fsr1l	equ	0xFE1
 47071                           indf2	equ	0xFDF
 47072                           postinc2	equ	0xFDE
 47073                           postdec2	equ	0xFDD
 47074                           fsr2h	equ	0xFDA
 47075                           fsr2l	equ	0xFD9
 47076                           status	equ	0xFD8
 47077                           
 47078 ;; *************** function _PresKeyEX *****************
 47079 ;; Defined at:
 47080 ;;		line 130 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
 47081 ;; Parameters:    Size  Location     Type
 47082 ;;  k               1    wreg     unsigned char 
 47083 ;;  ky              2   31[COMRAM] PTR struct .
 47084 ;;		 -> ky(35), 
 47085 ;; Auto vars:     Size  Location     Type
 47086 ;;  k               1   36[COMRAM] unsigned char 
 47087 ;; Return value:  Size  Location     Type
 47088 ;;                  1    wreg      unsigned char 
 47089 ;; Registers used:
 47090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 47091 ;; Tracked objects:
 47092 ;;		On entry : F/0
 47093 ;;		On exit  : F/0
 47094 ;;		Unchanged: FFFFFFF0/0
 47095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47098 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47099 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47100 ;;Total ram usage:        6 bytes
 47101 ;; Hardware stack levels used:    1
 47102 ;; Hardware stack levels required when called:    5
 47103 ;; This function calls:
 47104 ;;		_StartKeyTim
 47105 ;;		_KeyTim
 47106 ;; This function is called by:
 47107 ;;		_TrybPracy
 47108 ;; This function uses a non-reentrant model
 47109 ;;
 47110                           
 47111                           	psect	text226
 47112  005E86                     __ptext226:
 47113                           	opt stack 0
 47114  005E86                     _PresKeyEX:
 47115                           	opt stack 24
 47116                           
 47117                           ; BSR set to: 2
 47118                           ;PresKeyEX@k stored from wreg
 47119  005E86  CFE8 F025          	movff	wreg,PresKeyEX@k
 47120                           
 47121                           ; BSR set to: 0
 47122                           ;keypad.c: 132: (*ky).bk=(k)?1:0;
 47123  005E8A  0E00               	movlw	0
 47124  005E8C  6AF3               	clrf	prodl,c
 47125  005E8E  6225               	cpfseq	PresKeyEX@k,c
 47126  005E90  2AF3               	incf	prodl,f,c
 47127  005E92  CFF3 F022          	movff	prodl,??_PresKeyEX
 47128  005E96  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47129  005E9A  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47130  005E9E  50DF               	movf	indf2,w,c
 47131  005EA0  1822               	xorwf	??_PresKeyEX,w,c
 47132  005EA2  0BFE               	andlw	-2
 47133  005EA4  1822               	xorwf	??_PresKeyEX,w,c
 47134  005EA6  6EDF               	movwf	indf2,c
 47135                           
 47136                           ;keypad.c: 133: switch ((*ky).krk)
 47137  005EA8  D0D1               	goto	l41378
 47138  005EAA                     l41306:
 47139                           
 47140                           ; BSR set to: 0
 47141                           ;keypad.c: 137: {
 47142                           ;keypad.c: 138: if(!(*ky).sbk&&(*ky).bk)
 47143  005EAA  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47144  005EAE  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47145  005EB2  50DF               	movf	indf2,w,c
 47146  005EB4  6E22               	movwf	??_PresKeyEX& (0+255),c
 47147  005EB6  B222               	btfsc	??_PresKeyEX,1,c
 47148  005EB8  D01C               	goto	l41316
 47149                           
 47150                           ; BSR set to: 0
 47151  005EBA  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47152  005EBE  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47153  005EC2  50DF               	movf	indf2,w,c
 47154  005EC4  6E22               	movwf	??_PresKeyEX& (0+255),c
 47155  005EC6  A022               	btfss	??_PresKeyEX,0,c
 47156  005EC8  D014               	goto	l41316
 47157                           
 47158                           ; BSR set to: 0
 47159                           ;keypad.c: 139: {
 47160                           ;keypad.c: 140: (*ky).sbk=1;
 47161  005ECA  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47162  005ECE  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47163  005ED2  0E02               	movlw	2
 47164  005ED4  12DF               	iorwf	indf2,f,c
 47165                           
 47166                           ; BSR set to: 0
 47167                           ;keypad.c: 141: StartKeyTim(ky);
 47168  005ED6  C020  F01E         	movff	PresKeyEX@ky,?_StartKeyTim
 47169  005EDA  C021  F01F         	movff	PresKeyEX@ky+1,?_StartKeyTim+1
 47170  005EDE  ECC4  F058         	call	_StartKeyTim	;wreg free
 47171                           
 47172                           ; BSR set to: 0
 47173                           ;keypad.c: 142: (*ky).krk=1;
 47174  005EE2  EE20 F003          	lfsr	2,3
 47175  005EE6  5020               	movf	PresKeyEX@ky,w,c
 47176  005EE8  26D9               	addwf	fsr2l,f,c
 47177  005EEA  5021               	movf	PresKeyEX@ky+1,w,c
 47178  005EEC  22DA               	addwfc	fsr2h,f,c
 47179  005EEE  0E01               	movlw	1
 47180  005EF0  D013               	goto	L90
 47181  005EF2                     l41316:
 47182                           
 47183                           ; BSR set to: 0
 47184                           ;keypad.c: 144: else (*ky).sbk=((*ky).bk)?1:0;
 47185  005EF2  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47186  005EF6  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47187  005EFA  50DF               	movf	indf2,w,c
 47188  005EFC  6E22               	movwf	??_PresKeyEX& (0+255),c
 47189  005EFE  0E01               	movlw	1
 47190  005F00  A022               	btfss	??_PresKeyEX,0,c
 47191  005F02  0E00               	movlw	0
 47192  005F04  6E23               	movwf	(??_PresKeyEX+1)& (0+255),c
 47193  005F06  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47194  005F0A  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47195  005F0E  4623               	rlncf	??_PresKeyEX+1,f,c
 47196  005F10  50DF               	movf	indf2,w,c
 47197  005F12  1823               	xorwf	??_PresKeyEX+1,w,c
 47198  005F14  0BFD               	andlw	-3
 47199  005F16  1823               	xorwf	??_PresKeyEX+1,w,c
 47200  005F18                     L90:
 47201  005F18  6EDF               	movwf	indf2,c
 47202                           
 47203                           ; BSR set to: 0
 47204                           ;keypad.c: 145: return 0;
 47205  005F1A  0C00               	retlw	0
 47206  005F1C                     l41322:
 47207                           
 47208                           ; BSR set to: 0
 47209                           ;keypad.c: 149: {
 47210                           ;keypad.c: 150: (*ky).val=KeyTim(ky)+1;
 47211  005F1C  C020  F01E         	movff	PresKeyEX@ky,?_KeyTim
 47212  005F20  C021  F01F         	movff	PresKeyEX@ky+1,?_KeyTim+1
 47213  005F24  EC5D  F05A         	call	_KeyTim	;wreg free
 47214  005F28  6E22               	movwf	??_PresKeyEX& (0+255),c
 47215  005F2A  2A22               	incf	??_PresKeyEX,f,c
 47216  005F2C  EE20 F004          	lfsr	2,4
 47217  005F30  5020               	movf	PresKeyEX@ky,w,c
 47218  005F32  26D9               	addwf	fsr2l,f,c
 47219  005F34  5021               	movf	PresKeyEX@ky+1,w,c
 47220  005F36  22DA               	addwfc	fsr2h,f,c
 47221  005F38  C022  FFDF         	movff	??_PresKeyEX,indf2
 47222                           
 47223                           ; BSR set to: 0
 47224                           ;keypad.c: 151: if((*ky).val>99) (*ky).val=99;
 47225  005F3C  EE20 F004          	lfsr	2,4
 47226  005F40  5020               	movf	PresKeyEX@ky,w,c
 47227  005F42  26D9               	addwf	fsr2l,f,c
 47228  005F44  5021               	movf	PresKeyEX@ky+1,w,c
 47229  005F46  22DA               	addwfc	fsr2h,f,c
 47230  005F48  0E63               	movlw	99
 47231  005F4A  64DF               	cpfsgt	indf2,c
 47232  005F4C  D008               	goto	l4650
 47233                           
 47234                           ; BSR set to: 0
 47235  005F4E  EE20 F004          	lfsr	2,4
 47236  005F52  5020               	movf	PresKeyEX@ky,w,c
 47237  005F54  26D9               	addwf	fsr2l,f,c
 47238  005F56  5021               	movf	PresKeyEX@ky+1,w,c
 47239  005F58  22DA               	addwfc	fsr2h,f,c
 47240  005F5A  0E63               	movlw	99
 47241  005F5C  6EDF               	movwf	indf2,c
 47242  005F5E                     l4650:
 47243                           
 47244                           ; BSR set to: 0
 47245                           ;keypad.c: 152: if((*ky).sbk&&!(*ky).bk)
 47246  005F5E  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47247  005F62  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47248  005F66  50DF               	movf	indf2,w,c
 47249  005F68  6E22               	movwf	??_PresKeyEX& (0+255),c
 47250  005F6A  A222               	btfss	??_PresKeyEX,1,c
 47251  005F6C  D080               	goto	PL182
 47252                           
 47253                           ; BSR set to: 0
 47254  005F6E  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47255  005F72  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47256  005F76  50DF               	movf	indf2,w,c
 47257  005F78  6E22               	movwf	??_PresKeyEX& (0+255),c
 47258  005F7A  B022               	btfsc	??_PresKeyEX,0,c
 47259  005F7C  D078               	goto	PL182
 47260                           
 47261                           ; BSR set to: 0
 47262                           ;keypad.c: 153: {
 47263                           ;keypad.c: 154: (*ky).sbk=0;
 47264  005F7E  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47265  005F82  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47266  005F86  0EFD               	movlw	-3
 47267  005F88  16DF               	andwf	indf2,f,c
 47268                           
 47269                           ; BSR set to: 0
 47270                           ;keypad.c: 155: if(((*ky).val-1)<8)
 47271  005F8A  D871               	call	PL182	;call to abstracted procedure
 47272  005F8C  6E22               	movwf	??_PresKeyEX& (0+255),c
 47273  005F8E  0EFF               	movlw	255
 47274  005F90  2422               	addwf	??_PresKeyEX,w,c
 47275  005F92  6E23               	movwf	(??_PresKeyEX+1)& (0+255),c
 47276  005F94  6A24               	clrf	(??_PresKeyEX+2)& (0+255),c
 47277  005F96  0EFF               	movlw	255
 47278  005F98  2224               	addwfc	(??_PresKeyEX+2)& (0+255),f,c
 47279  005F9A  5024               	movf	??_PresKeyEX+2,w,c
 47280  005F9C  0A80               	xorlw	128
 47281  005F9E  0F80               	addlw	-128
 47282  005FA0  0E08               	movlw	8
 47283  005FA2  B4D8               	btfsc	status,2,c
 47284  005FA4  5C23               	subwf	??_PresKeyEX+1,w,c
 47285  005FA6  E208               	bc	l41336
 47286                           
 47287                           ; BSR set to: 0
 47288                           ;keypad.c: 156: {
 47289                           ;keypad.c: 157: (*ky).val=100;
 47290  005FA8  EE20 F004          	lfsr	2,4
 47291  005FAC  5020               	movf	PresKeyEX@ky,w,c
 47292  005FAE  26D9               	addwf	fsr2l,f,c
 47293  005FB0  5021               	movf	PresKeyEX@ky+1,w,c
 47294  005FB2  22DA               	addwfc	fsr2h,f,c
 47295  005FB4  0E64               	movlw	100
 47296  005FB6  6EDF               	movwf	indf2,c
 47297  005FB8                     l41336:
 47298                           
 47299                           ; BSR set to: 0
 47300                           ;keypad.c: 158: }
 47301                           ;keypad.c: 159: StartKeyTim(ky);
 47302  005FB8  C020  F01E         	movff	PresKeyEX@ky,?_StartKeyTim
 47303  005FBC  C021  F01F         	movff	PresKeyEX@ky+1,?_StartKeyTim+1
 47304  005FC0  ECC4  F058         	call	_StartKeyTim	;wreg free
 47305                           
 47306                           ; BSR set to: 0
 47307                           ;keypad.c: 160: (*ky).krk=2;
 47308  005FC4  EE20 F003          	lfsr	2,3
 47309  005FC8  5020               	movf	PresKeyEX@ky,w,c
 47310  005FCA  26D9               	addwf	fsr2l,f,c
 47311  005FCC  5021               	movf	PresKeyEX@ky+1,w,c
 47312  005FCE  22DA               	addwfc	fsr2h,f,c
 47313  005FD0  0E02               	movlw	2
 47314  005FD2  6EDF               	movwf	indf2,c
 47315  005FD4                     l41340:
 47316                           
 47317                           ; BSR set to: 0
 47318                           ;keypad.c: 161: return (*ky).val;
 47319  005FD4  D04C               	goto	PL182	;call to abstracted procedure
 47320  005FD6                     l41348:
 47321                           
 47322                           ; BSR set to: 0
 47323                           ;keypad.c: 167: {
 47324                           ;keypad.c: 168: if((KeyTim(ky)>1&&!(*ky).sbk&&(*ky).bk)||KeyTim(ky)>=10)
 47325  005FD6  C020  F01E         	movff	PresKeyEX@ky,?_KeyTim
 47326  005FDA  C021  F01F         	movff	PresKeyEX@ky+1,?_KeyTim+1
 47327  005FDE  EC5D  F05A         	call	_KeyTim	;wreg free
 47328  005FE2  6E22               	movwf	??_PresKeyEX& (0+255),c
 47329  005FE4  0E02               	movlw	2
 47330  005FE6  5C22               	subwf	??_PresKeyEX,w,c
 47331  005FE8  E310               	bnc	l41354
 47332                           
 47333                           ; BSR set to: 0
 47334  005FEA  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47335  005FEE  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47336  005FF2  50DF               	movf	indf2,w,c
 47337  005FF4  6E22               	movwf	??_PresKeyEX& (0+255),c
 47338  005FF6  B222               	btfsc	??_PresKeyEX,1,c
 47339  005FF8  D008               	goto	l41354
 47340                           
 47341                           ; BSR set to: 0
 47342  005FFA  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47343  005FFE  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47344  006002  50DF               	movf	indf2,w,c
 47345  006004  6E22               	movwf	??_PresKeyEX& (0+255),c
 47346  006006  B022               	btfsc	??_PresKeyEX,0,c
 47347  006008  D00A               	goto	l41356
 47348  00600A                     l41354:
 47349                           
 47350                           ; BSR set to: 0
 47351  00600A  C020  F01E         	movff	PresKeyEX@ky,?_KeyTim
 47352  00600E  C021  F01F         	movff	PresKeyEX@ky+1,?_KeyTim+1
 47353  006012  EC5D  F05A         	call	_KeyTim	;wreg free
 47354  006016  6E22               	movwf	??_PresKeyEX& (0+255),c
 47355  006018  0E0A               	movlw	10
 47356  00601A  5C22               	subwf	??_PresKeyEX,w,c
 47357  00601C  E3DB               	bnc	l41340
 47358  00601E                     l41356:
 47359                           
 47360                           ; BSR set to: 0
 47361                           ;keypad.c: 169: {
 47362                           ;keypad.c: 170: (*ky).krk=0;
 47363  00601E  EE20 F003          	lfsr	2,3
 47364  006022  5020               	movf	PresKeyEX@ky,w,c
 47365  006024  26D9               	addwf	fsr2l,f,c
 47366  006026  5021               	movf	PresKeyEX@ky+1,w,c
 47367  006028  22DA               	addwfc	fsr2h,f,c
 47368  00602A  0E00               	movlw	0
 47369  00602C  D775               	goto	L90
 47370  00602E                     l41366:
 47371                           
 47372                           ; BSR set to: 0
 47373                           ;keypad.c: 176: {
 47374                           ;keypad.c: 177: if(!(*ky).bk)
 47375  00602E  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47376  006032  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47377  006036  50DF               	movf	indf2,w,c
 47378  006038  6E22               	movwf	??_PresKeyEX& (0+255),c
 47379  00603A  B022               	btfsc	??_PresKeyEX,0,c
 47380  00603C  0C00               	retlw	0
 47381                           
 47382                           ; BSR set to: 0
 47383                           ;keypad.c: 178: {
 47384                           ;keypad.c: 179: (*ky).sbk=0;
 47385  00603E  C020  FFD9         	movff	PresKeyEX@ky,fsr2l
 47386  006042  C021  FFDA         	movff	PresKeyEX@ky+1,fsr2h
 47387  006046  0EFD               	movlw	-3
 47388  006048  16DF               	andwf	indf2,f,c
 47389  00604A  D7E9               	goto	l41356
 47390  00604C                     l41378:
 47391                           
 47392                           ; BSR set to: 0
 47393  00604C  EE20 F003          	lfsr	2,3
 47394  006050  5020               	movf	PresKeyEX@ky,w,c
 47395  006052  26D9               	addwf	fsr2l,f,c
 47396  006054  5021               	movf	PresKeyEX@ky+1,w,c
 47397  006056  22DA               	addwfc	fsr2h,f,c
 47398  006058  50DF               	movf	indf2,w,c
 47399                           
 47400                           ; Switch size 1, requested type "space"
 47401                           ; Number of cases is 4, Range of values is 0 to 3
 47402                           ; switch strategies available:
 47403                           ; Name         Instructions Cycles
 47404                           ; simple_byte           13     7 (average)
 47405                           ;	Chosen strategy is simple_byte
 47406  00605A  E101 D726          	bz	l41306
 47407  00605E  0A01               	xorlw	1	; case 1
 47408  006060  E101 D75C          	bz	l41322
 47409  006064  0A03               	xorlw	3	; case 2
 47410  006066  E0B7               	bz	l41348
 47411  006068  0A01               	xorlw	1	; case 3
 47412  00606A  E0E1               	bz	l41366
 47413  00606C  0C00               	retlw	0
 47414  00606E                     __end_of_PresKeyEX:
 47415                           	opt stack 0
 47416  00606E                     PL182:
 47417                           	opt stack 24
 47418  00606E  EE20 F004          	lfsr	2,4
 47419  006072  5020               	movf	PresKeyEX@ky,w,c
 47420  006074  26D9               	addwf	fsr2l,f,c
 47421  006076  5021               	movf	PresKeyEX@ky+1,w,c
 47422  006078  22DA               	addwfc	fsr2h,f,c
 47423  00607A  50DF               	movf	indf2,w,c
 47424  00607C  0012               	return	
 47425  00607E                     __end_ofPL182:
 47426                           	opt stack 0
 47427                           tblptru	equ	0xFF8
 47428                           tblptrh	equ	0xFF7
 47429                           tblptrl	equ	0xFF6
 47430                           tablat	equ	0xFF5
 47431                           prodh	equ	0xFF4
 47432                           prodl	equ	0xFF3
 47433                           intcon	equ	0xFF2
 47434                           postinc0	equ	0xFEE
 47435                           wreg	equ	0xFE8
 47436                           indf1	equ	0xFE7
 47437                           postinc1	equ	0xFE6
 47438                           postdec1	equ	0xFE5
 47439                           fsr1h	equ	0xFE2
 47440                           fsr1l	equ	0xFE1
 47441                           indf2	equ	0xFDF
 47442                           postinc2	equ	0xFDE
 47443                           postdec2	equ	0xFDD
 47444                           fsr2h	equ	0xFDA
 47445                           fsr2l	equ	0xFD9
 47446                           status	equ	0xFD8
 47447                           
 47448 ;; *************** function _ResBufKeyEx *****************
 47449 ;; Defined at:
 47450 ;;		line 189 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
 47451 ;; Parameters:    Size  Location     Type
 47452 ;;  ky              2   29[COMRAM] PTR struct .
 47453 ;;		 -> ky(35), 
 47454 ;; Auto vars:     Size  Location     Type
 47455 ;;		None
 47456 ;; Return value:  Size  Location     Type
 47457 ;;		None               void
 47458 ;; Registers used:
 47459 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 47460 ;; Tracked objects:
 47461 ;;		On entry : F/2
 47462 ;;		On exit  : F/2
 47463 ;;		Unchanged: FFFFFFF0/0
 47464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47469 ;;Total ram usage:        2 bytes
 47470 ;; Hardware stack levels used:    1
 47471 ;; Hardware stack levels required when called:    4
 47472 ;; This function calls:
 47473 ;;		Nothing
 47474 ;; This function is called by:
 47475 ;;		_TrybPracy
 47476 ;; This function uses a non-reentrant model
 47477 ;;
 47478                           
 47479                           	psect	text227
 47480  00AD0C                     __ptext227:
 47481                           	opt stack 0
 47482  00AD0C                     _ResBufKeyEx:
 47483                           	opt stack 25
 47484                           
 47485                           ; BSR set to: 2
 47486                           ;keypad.c: 190: (*ky).sbk=0;
 47487                           
 47488                           ; BSR set to: 0
 47489  00AD0C  C01E  FFD9         	movff	ResBufKeyEx@ky,fsr2l
 47490  00AD10  C01F  FFDA         	movff	ResBufKeyEx@ky+1,fsr2h
 47491  00AD14  0EFD               	movlw	-3
 47492  00AD16  16DF               	andwf	indf2,f,c
 47493                           
 47494                           ; BSR set to: 2
 47495                           ;keypad.c: 191: (*ky).krk=0;
 47496  00AD18  EE20 F003          	lfsr	2,3
 47497  00AD1C  501E               	movf	ResBufKeyEx@ky,w,c
 47498  00AD1E  26D9               	addwf	fsr2l,f,c
 47499  00AD20  501F               	movf	ResBufKeyEx@ky+1,w,c
 47500  00AD22  22DA               	addwfc	fsr2h,f,c
 47501  00AD24  6ADF               	clrf	indf2,c
 47502                           
 47503                           ; BSR set to: 2
 47504                           ;keypad.c: 192: (*ky).val=0;
 47505  00AD26  EE20 F004          	lfsr	2,4
 47506  00AD2A  501E               	movf	ResBufKeyEx@ky,w,c
 47507  00AD2C  26D9               	addwf	fsr2l,f,c
 47508  00AD2E  501F               	movf	ResBufKeyEx@ky+1,w,c
 47509  00AD30  22DA               	addwfc	fsr2h,f,c
 47510  00AD32  0E00               	movlw	0
 47511  00AD34  6EDF               	movwf	indf2,c
 47512                           
 47513                           ; BSR set to: 2
 47514  00AD36  0C00               	retlw	0
 47515  00AD38                     __end_of_ResBufKeyEx:
 47516                           	opt stack 0
 47517                           tblptru	equ	0xFF8
 47518                           tblptrh	equ	0xFF7
 47519                           tblptrl	equ	0xFF6
 47520                           tablat	equ	0xFF5
 47521                           prodh	equ	0xFF4
 47522                           prodl	equ	0xFF3
 47523                           intcon	equ	0xFF2
 47524                           postinc0	equ	0xFEE
 47525                           wreg	equ	0xFE8
 47526                           indf1	equ	0xFE7
 47527                           postinc1	equ	0xFE6
 47528                           postdec1	equ	0xFE5
 47529                           fsr1h	equ	0xFE2
 47530                           fsr1l	equ	0xFE1
 47531                           indf2	equ	0xFDF
 47532                           postinc2	equ	0xFDE
 47533                           postdec2	equ	0xFDD
 47534                           fsr2h	equ	0xFDA
 47535                           fsr2l	equ	0xFD9
 47536                           status	equ	0xFD8
 47537                           
 47538 ;; *************** function _WaitToLowEx *****************
 47539 ;; Defined at:
 47540 ;;		line 196 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
 47541 ;; Parameters:    Size  Location     Type
 47542 ;;  ky              2   29[COMRAM] PTR struct .
 47543 ;;		 -> ky(35), 
 47544 ;; Auto vars:     Size  Location     Type
 47545 ;;		None
 47546 ;; Return value:  Size  Location     Type
 47547 ;;		None               void
 47548 ;; Registers used:
 47549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 47550 ;; Tracked objects:
 47551 ;;		On entry : F/2
 47552 ;;		On exit  : F/2
 47553 ;;		Unchanged: FFFFFFF0/0
 47554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47559 ;;Total ram usage:        2 bytes
 47560 ;; Hardware stack levels used:    1
 47561 ;; Hardware stack levels required when called:    4
 47562 ;; This function calls:
 47563 ;;		Nothing
 47564 ;; This function is called by:
 47565 ;;		_TrybPracy
 47566 ;; This function uses a non-reentrant model
 47567 ;;
 47568                           
 47569                           	psect	text228
 47570  00B0A6                     __ptext228:
 47571                           	opt stack 0
 47572  00B0A6                     _WaitToLowEx:
 47573                           	opt stack 25
 47574                           
 47575                           ; BSR set to: 2
 47576                           ;keypad.c: 197: (*ky).krk=3;
 47577                           
 47578                           ; BSR set to: 2
 47579  00B0A6  EE20 F003          	lfsr	2,3
 47580  00B0AA  501E               	movf	WaitToLowEx@ky,w,c
 47581  00B0AC  26D9               	addwf	fsr2l,f,c
 47582  00B0AE  501F               	movf	WaitToLowEx@ky+1,w,c
 47583  00B0B0  22DA               	addwfc	fsr2h,f,c
 47584  00B0B2  0E03               	movlw	3
 47585  00B0B4  6EDF               	movwf	indf2,c
 47586                           
 47587                           ;keypad.c: 198: (*ky).val=0;
 47588  00B0B6  EE20 F004          	lfsr	2,4
 47589  00B0BA  501E               	movf	WaitToLowEx@ky,w,c
 47590  00B0BC  26D9               	addwf	fsr2l,f,c
 47591  00B0BE  501F               	movf	WaitToLowEx@ky+1,w,c
 47592  00B0C0  22DA               	addwfc	fsr2h,f,c
 47593  00B0C2  0E00               	movlw	0
 47594  00B0C4  6EDF               	movwf	indf2,c
 47595                           
 47596                           ; BSR set to: 2
 47597  00B0C6  0C00               	retlw	0
 47598  00B0C8                     __end_of_WaitToLowEx:
 47599                           	opt stack 0
 47600                           tblptru	equ	0xFF8
 47601                           tblptrh	equ	0xFF7
 47602                           tblptrl	equ	0xFF6
 47603                           tablat	equ	0xFF5
 47604                           prodh	equ	0xFF4
 47605                           prodl	equ	0xFF3
 47606                           intcon	equ	0xFF2
 47607                           postinc0	equ	0xFEE
 47608                           wreg	equ	0xFE8
 47609                           indf1	equ	0xFE7
 47610                           postinc1	equ	0xFE6
 47611                           postdec1	equ	0xFE5
 47612                           fsr1h	equ	0xFE2
 47613                           fsr1l	equ	0xFE1
 47614                           indf2	equ	0xFDF
 47615                           postinc2	equ	0xFDE
 47616                           postdec2	equ	0xFDD
 47617                           fsr2h	equ	0xFDA
 47618                           fsr2l	equ	0xFD9
 47619                           status	equ	0xFD8
 47620                           
 47621 ;; *************** function _ReadDataXONLID *****************
 47622 ;; Defined at:
 47623 ;;		line 349 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\readdtal.c"
 47624 ;; Parameters:    Size  Location     Type
 47625 ;;  k               1    wreg     unsigned char 
 47626 ;;  ky              2    0[BANK2 ] PTR struct .
 47627 ;;		 -> xxky(35), 
 47628 ;;  dt              2    2[BANK2 ] PTR unsigned int 
 47629 ;;		 -> PFN(35), 
 47630 ;;  ovf             2    4[BANK2 ] PTR unsigned char 
 47631 ;;		 -> ReadParam@ovd(1), ReadParam@ovi(1), 
 47632 ;;  tid             1    6[BANK2 ] unsigned char 
 47633 ;;  min             2    7[BANK2 ] unsigned int 
 47634 ;;  max             2    9[BANK2 ] unsigned int 
 47635 ;;  step            1   11[BANK2 ] const unsigned char 
 47636 ;;  step2           1   12[BANK2 ] const unsigned char 
 47637 ;;  fst             1   13[BANK2 ] const unsigned char 
 47638 ;; Auto vars:     Size  Location     Type
 47639 ;;  k               1    4[BANK0 ] unsigned char 
 47640 ;;  key             1    5[BANK0 ] unsigned char 
 47641 ;; Return value:  Size  Location     Type
 47642 ;;                  1    wreg      unsigned char 
 47643 ;; Registers used:
 47644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 47645 ;; Tracked objects:
 47646 ;;		On entry : F/0
 47647 ;;		On exit  : C/0
 47648 ;;		Unchanged: FFFFFFF0/0
 47649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 47650 ;;      Params:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47651 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47652 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47653 ;;      Totals:         0       6       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47654 ;;Total ram usage:       20 bytes
 47655 ;; Hardware stack levels used:    1
 47656 ;; Hardware stack levels required when called:    6
 47657 ;; This function calls:
 47658 ;;		_ExxPresKey
 47659 ;;		___lbdiv
 47660 ;;		___lwmod
 47661 ;; This function is called by:
 47662 ;;		_ReadParam
 47663 ;; This function uses a non-reentrant model
 47664 ;;
 47665                           
 47666                           	psect	text229
 47667  002804                     __ptext229:
 47668                           	opt stack 0
 47669  002804                     _ReadDataXONLID:
 47670                           	opt stack 21
 47671                           
 47672                           ; BSR set to: 2
 47673                           ;ReadDataXONLID@k stored from wreg
 47674  002804  CFE8 F0F7          	movff	wreg,ReadDataXONLID@k
 47675                           
 47676                           ; BSR set to: 0
 47677                           ;readdtal.c: 354: if(!dtmo)
 47678  002808  B242               	btfsc	ReadDataXONLID@dtmo/(0+8),ReadDataXONLID@dtmo& (0+7),c
 47679  00280A  D007               	goto	l41458
 47680                           
 47681                           ;readdtal.c: 355: {
 47682                           ;readdtal.c: 356: dtmo=1;
 47683  00280C  8242               	bsf	ReadDataXONLID@dtmo/(0+8),ReadDataXONLID@dtmo& (0+7),c
 47684                           
 47685                           ;readdtal.c: 357: ktu=0;
 47686  00280E  0101               	movlb	1	; () banked
 47687  002810  6BB3               	clrf	ReadDataXONLID@ktu& (0+255),b
 47688                           
 47689                           ;readdtal.c: 358: iu=0;
 47690  002812  6BB2               	clrf	ReadDataXONLID@iu& (0+255),b
 47691                           
 47692                           ;readdtal.c: 359: es2=0;
 47693  002814  6BB1               	clrf	ReadDataXONLID@es2& (0+255),b
 47694                           
 47695                           ;readdtal.c: 360: pp=step;
 47696  002816  C2FB  F03D         	movff	ReadDataXONLID@step,ReadDataXONLID@pp
 47697  00281A                     l41458:
 47698                           
 47699                           ;readdtal.c: 361: }
 47700                           ;readdtal.c: 363: if(key=ExxPresKey(k,ky,5,ktu))
 47701  00281A  C2F0  F020         	movff	ReadDataXONLID@ky,?_ExxPresKey
 47702  00281E  C2F1  F021         	movff	ReadDataXONLID@ky+1,?_ExxPresKey+1
 47703  002822  0E05               	movlw	5
 47704  002824  6E22               	movwf	?_ExxPresKey+2,c
 47705  002826  C1B3  F023         	movff	ReadDataXONLID@ktu,?_ExxPresKey+3
 47706  00282A  0100               	movlb	0	; () banked
 47707  00282C  51F7               	movf	ReadDataXONLID@k& (0+255),w,b
 47708  00282E  EC25  F033         	call	_ExxPresKey
 47709  002832  6FF8               	movwf	ReadDataXONLID@key& (0+255),b
 47710  002834  0100               	movlb	0	; () banked
 47711  002836  51F8               	movf	ReadDataXONLID@key& (0+255),w,b
 47712  002838  E101 D111          	bz	l4697
 47713                           
 47714                           ; BSR set to: 0
 47715                           ;readdtal.c: 364: {
 47716                           ;readdtal.c: 365: if(key==1||((key==2)&&!fst))
 47717  00283C  05F8               	decf	ReadDataXONLID@key& (0+255),w,b
 47718  00283E  E006               	bz	l4700
 47719                           
 47720                           ; BSR set to: 0
 47721  002840  51F8               	movf	ReadDataXONLID@key& (0+255),w,b
 47722  002842  0A02               	xorlw	2
 47723  002844  E156               	bnz	l41502
 47724                           
 47725                           ; BSR set to: 0
 47726  002846  0102               	movlb	2	; () banked
 47727  002848  67FD               	tstfsz	ReadDataXONLID@fst& (0+255),b
 47728  00284A  D053               	goto	l41502
 47729  00284C                     l4700:
 47730                           
 47731                           ;readdtal.c: 366: {
 47732                           ;readdtal.c: 367: iu=0;
 47733  00284C  0101               	movlb	1	; () banked
 47734  00284E  6BB2               	clrf	ReadDataXONLID@iu& (0+255),b
 47735                           
 47736                           ; BSR set to: 1
 47737                           ;readdtal.c: 368: ktu=5;
 47738  002850  0E05               	movlw	5
 47739  002852  6FB3               	movwf	ReadDataXONLID@ktu& (0+255),b
 47740                           
 47741                           ; BSR set to: 1
 47742                           ;readdtal.c: 369: es2=0;
 47743  002854  6BB1               	clrf	ReadDataXONLID@es2& (0+255),b
 47744                           
 47745                           ; BSR set to: 1
 47746                           ;readdtal.c: 370: pp=step;
 47747  002856  C2FB  F03D         	movff	ReadDataXONLID@step,ReadDataXONLID@pp
 47748                           
 47749                           ; BSR set to: 1
 47750                           ;readdtal.c: 371: if(!tid)
 47751  00285A  0102               	movlb	2	; () banked
 47752  00285C  67F6               	tstfsz	ReadDataXONLID@tid& (0+255),b
 47753  00285E  D02D               	goto	l41490
 47754                           
 47755                           ; BSR set to: 2
 47756                           ;readdtal.c: 372: {
 47757                           ;readdtal.c: 373: if(!*dt||((*dt-pp)<min)) *ovf=1;
 47758  002860  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 47759  002864  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 47760  002868  50DE               	movf	postinc2,w,c
 47761  00286A  10DD               	iorwf	postdec2,w,c
 47762  00286C  E00A               	bz	l41478
 47763                           
 47764                           ; BSR set to: 2
 47765  00286E  D914               	call	PL26	;call to abstracted procedure
 47766  002870  0102               	movlb	2	; () banked
 47767  002872  51F7               	movf	ReadDataXONLID@min& (0+255),w,b
 47768  002874  0100               	movlb	0	; () banked
 47769  002876  5DF3               	subwf	??_ReadDataXONLID& (0+255),w,b
 47770  002878  0102               	movlb	2	; () banked
 47771  00287A  51F8               	movf	(ReadDataXONLID@min+1)& (0+255),w,b
 47772  00287C  0100               	movlb	0	; () banked
 47773  00287E  59F4               	subwfb	(??_ReadDataXONLID+1)& (0+255),w,b
 47774  002880  E202               	bc	l41480
 47775  002882                     l41478:
 47776  002882  D935               	call	PL150	;call to abstracted procedure
 47777  002884  D003               	goto	L91
 47778  002886                     l41480:
 47779                           
 47780                           ; BSR set to: 0
 47781                           ;readdtal.c: 374: else *ovf=0;
 47782  002886  C2F4  FFD9         	movff	ReadDataXONLID@ovf,fsr2l
 47783  00288A  D93E               	call	PL230	;call to abstracted procedure
 47784  00288C                     L91:
 47785  00288C  6EDF               	movwf	indf2,c
 47786                           
 47787                           ;readdtal.c: 375: if(*dt&&((*dt-pp)>min)) *dt=*dt-pp;
 47788  00288E  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 47789  002892  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 47790  002896  50DE               	movf	postinc2,w,c
 47791  002898  10DD               	iorwf	postdec2,w,c
 47792  00289A  E00D               	bz	l41488
 47793  00289C  D8FD               	call	PL26	;call to abstracted procedure
 47794  00289E  D92C               	call	PL190	;call to abstracted procedure
 47795  0028A0  E20A               	bc	l41488
 47796                           
 47797                           ; BSR set to: 2
 47798  0028A2  D8FA               	call	PL26	;call to abstracted procedure
 47799  0028A4  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 47800  0028A8  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 47801  0028AC  C0F3  FFDE         	movff	??_ReadDataXONLID,postinc2
 47802  0028B0  C0F4  FFDD         	movff	??_ReadDataXONLID+1,postdec2
 47803  0028B4  D01E               	goto	l41502
 47804  0028B6                     l41488:
 47805                           
 47806                           ;readdtal.c: 376: else *dt=min;
 47807  0028B6  D8FE               	call	PL30	;call to abstracted procedure
 47808  0028B8  D01C               	goto	l41502
 47809  0028BA                     l41490:
 47810                           
 47811                           ; BSR set to: 2
 47812                           ;readdtal.c: 378: else
 47813                           ;readdtal.c: 379: {
 47814                           ;readdtal.c: 380: if((*dt+pp)>max) *ovf=1;
 47815  0028BA  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 47816  0028BE  D8D7               	call	PL24	;call to abstracted procedure
 47817  0028C0  E202               	bc	l41494
 47818                           
 47819                           ; BSR set to: 2
 47820  0028C2  D915               	call	PL150	;call to abstracted procedure
 47821  0028C4  D003               	goto	L92
 47822  0028C6                     l41494:
 47823                           
 47824                           ; BSR set to: 2
 47825                           ;readdtal.c: 381: else *ovf=0;
 47826  0028C6  C2F4  FFD9         	movff	ReadDataXONLID@ovf,fsr2l
 47827  0028CA  D91E               	call	PL230	;call to abstracted procedure
 47828  0028CC                     L92:
 47829  0028CC  6EDF               	movwf	indf2,c
 47830                           
 47831                           ; BSR set to: 2
 47832                           ;readdtal.c: 382: if(*dt+pp<=max) *dt=*dt+pp;
 47833  0028CE  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 47834  0028D2  D8CD               	call	PL24	;call to abstracted procedure
 47835  0028D4  E306               	bnc	l41500
 47836                           
 47837                           ; BSR set to: 2
 47838  0028D6  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 47839  0028DA  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 47840  0028DE  D8F3               	call	PL32	;call to abstracted procedure
 47841  0028E0  D008               	goto	l41502
 47842  0028E2                     l41500:
 47843                           
 47844                           ; BSR set to: 2
 47845                           ;readdtal.c: 383: else *dt=max;
 47846  0028E2  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 47847  0028E6  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 47848  0028EA  C2F9  FFDE         	movff	ReadDataXONLID@max,postinc2
 47849  0028EE  C2FA  FFDD         	movff	ReadDataXONLID@max+1,postdec2
 47850  0028F2                     l41502:
 47851                           
 47852                           ;readdtal.c: 384: }
 47853                           ;readdtal.c: 385: }
 47854                           ;readdtal.c: 386: if(key==2&&fst)
 47855  0028F2  0100               	movlb	0	; () banked
 47856  0028F4  51F8               	movf	ReadDataXONLID@key& (0+255),w,b
 47857  0028F6  0A02               	xorlw	2
 47858  0028F8  E001 D084          	bnz	l41552
 47859                           
 47860                           ; BSR set to: 0
 47861  0028FC  0102               	movlb	2	; () banked
 47862  0028FE  51FD               	movf	ReadDataXONLID@fst& (0+255),w,b
 47863  002900  E101 D080          	bz	l41552
 47864                           
 47865                           ; BSR set to: 2
 47866                           ;readdtal.c: 387: {
 47867                           ;readdtal.c: 388: if (iu<=(5-1)*3) iu++;
 47868  002904  0E0D               	movlw	13
 47869  002906  0101               	movlb	1	; () banked
 47870  002908  61B2               	cpfslt	ReadDataXONLID@iu& (0+255),b
 47871  00290A  D001               	goto	l41510
 47872                           
 47873                           ; BSR set to: 1
 47874  00290C  2BB2               	incf	ReadDataXONLID@iu& (0+255),f,b
 47875  00290E                     l41510:
 47876                           
 47877                           ; BSR set to: 1
 47878                           ;readdtal.c: 389: ktu=5-iu/3;
 47879  00290E  0E03               	movlw	3
 47880  002910  6E1E               	movwf	?___lbdiv,c
 47881  002912  51B2               	movf	ReadDataXONLID@iu& (0+255),w,b
 47882  002914  EC7B  F054         	call	___lbdiv
 47883  002918  0100               	movlb	0	; () banked
 47884  00291A  6FF3               	movwf	??_ReadDataXONLID& (0+255),b
 47885  00291C  51F3               	movf	??_ReadDataXONLID& (0+255),w,b
 47886  00291E  0805               	sublw	5
 47887  002920  0101               	movlb	1	; () banked
 47888  002922  6FB3               	movwf	ReadDataXONLID@ktu& (0+255),b
 47889                           
 47890                           ; BSR set to: 1
 47891                           ;readdtal.c: 390: if (iu>(5-1)*3)
 47892  002924  0E0C               	movlw	12
 47893  002926  65B2               	cpfsgt	ReadDataXONLID@iu& (0+255),b
 47894  002928  D01E               	goto	l4715
 47895                           
 47896                           ; BSR set to: 1
 47897                           ;readdtal.c: 391: {
 47898                           ;readdtal.c: 392: if(es2)
 47899  00292A  51B1               	movf	ReadDataXONLID@es2& (0+255),w,b
 47900  00292C  E006               	bz	l4716
 47901                           
 47902                           ; BSR set to: 1
 47903                           ;readdtal.c: 393: {
 47904                           ;readdtal.c: 394: if(pp<step2) pp++;
 47905  00292E  0102               	movlb	2	; () banked
 47906  002930  51FC               	movf	ReadDataXONLID@step2& (0+255),w,b
 47907  002932  603D               	cpfslt	ReadDataXONLID@pp,c
 47908  002934  D004               	goto	l41520
 47909                           
 47910                           ; BSR set to: 2
 47911  002936  2A3D               	incf	ReadDataXONLID@pp,f,c
 47912  002938  D002               	goto	l41520
 47913  00293A                     l4716:
 47914                           
 47915                           ; BSR set to: 1
 47916                           ;readdtal.c: 396: else pp=step;
 47917  00293A  C2FB  F03D         	movff	ReadDataXONLID@step,ReadDataXONLID@pp
 47918  00293E                     l41520:
 47919                           
 47920                           ;readdtal.c: 397: if((*dt%10)==0) es2=1;
 47921  00293E  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 47922  002942  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 47923  002946  CFDE F01E          	movff	postinc2,?___lwmod
 47924  00294A  CFDD F01F          	movff	postdec2,?___lwmod+1
 47925  00294E  6A21               	clrf	?___lwmod+3,c
 47926  002950  0E0A               	movlw	10
 47927  002952  6E20               	movwf	?___lwmod+2,c
 47928  002954  ECEF  F052         	call	___lwmod	;wreg free
 47929  002958  501F               	movf	?___lwmod+1,w,c
 47930  00295A  101E               	iorwf	?___lwmod,w,c
 47931  00295C  E107               	bnz	l4720
 47932  00295E  0E01               	movlw	1
 47933  002960  0101               	movlb	1	; () banked
 47934  002962  6FB1               	movwf	ReadDataXONLID@es2& (0+255),b
 47935  002964  D003               	goto	l4720
 47936  002966                     l4715:
 47937                           
 47938                           ; BSR set to: 1
 47939                           ;readdtal.c: 399: else
 47940                           ;readdtal.c: 400: {
 47941                           ;readdtal.c: 401: es2=0;
 47942  002966  6BB1               	clrf	ReadDataXONLID@es2& (0+255),b
 47943                           
 47944                           ;readdtal.c: 402: pp=step;
 47945  002968  C2FB  F03D         	movff	ReadDataXONLID@step,ReadDataXONLID@pp
 47946  00296C                     l4720:
 47947                           
 47948                           ;readdtal.c: 403: }
 47949                           ;readdtal.c: 404: if(!tid)
 47950  00296C  0102               	movlb	2	; () banked
 47951  00296E  67F6               	tstfsz	ReadDataXONLID@tid& (0+255),b
 47952  002970  D02D               	goto	l41540
 47953                           
 47954                           ; BSR set to: 2
 47955                           ;readdtal.c: 405: {
 47956                           ;readdtal.c: 406: if(!*dt||((*dt-pp)<min)) *ovf=1;
 47957  002972  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 47958  002976  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 47959  00297A  50DE               	movf	postinc2,w,c
 47960  00297C  10DD               	iorwf	postdec2,w,c
 47961  00297E  E00A               	bz	l41528
 47962                           
 47963                           ; BSR set to: 2
 47964  002980  D88B               	call	PL26	;call to abstracted procedure
 47965  002982  0102               	movlb	2	; () banked
 47966  002984  51F7               	movf	ReadDataXONLID@min& (0+255),w,b
 47967  002986  0100               	movlb	0	; () banked
 47968  002988  5DF3               	subwf	??_ReadDataXONLID& (0+255),w,b
 47969  00298A  0102               	movlb	2	; () banked
 47970  00298C  51F8               	movf	(ReadDataXONLID@min+1)& (0+255),w,b
 47971  00298E  0100               	movlb	0	; () banked
 47972  002990  59F4               	subwfb	(??_ReadDataXONLID+1)& (0+255),w,b
 47973  002992  E202               	bc	l41530
 47974  002994                     l41528:
 47975  002994  D8AC               	call	PL150	;call to abstracted procedure
 47976  002996  D003               	goto	L93
 47977  002998                     l41530:
 47978                           
 47979                           ; BSR set to: 0
 47980                           ;readdtal.c: 407: else *ovf=0;
 47981  002998  C2F4  FFD9         	movff	ReadDataXONLID@ovf,fsr2l
 47982  00299C  D8B5               	call	PL230	;call to abstracted procedure
 47983  00299E                     L93:
 47984  00299E  6EDF               	movwf	indf2,c
 47985                           
 47986                           ;readdtal.c: 408: if(*dt&&((*dt-pp)>min)) *dt=*dt-pp;
 47987  0029A0  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 47988  0029A4  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 47989  0029A8  50DE               	movf	postinc2,w,c
 47990  0029AA  10DD               	iorwf	postdec2,w,c
 47991  0029AC  E00D               	bz	l41538
 47992  0029AE  D874               	call	PL26	;call to abstracted procedure
 47993  0029B0  D8A3               	call	PL190	;call to abstracted procedure
 47994  0029B2  E20A               	bc	l41538
 47995                           
 47996                           ; BSR set to: 2
 47997  0029B4  D871               	call	PL26	;call to abstracted procedure
 47998  0029B6  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 47999  0029BA  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 48000  0029BE  C0F3  FFDE         	movff	??_ReadDataXONLID,postinc2
 48001  0029C2  C0F4  FFDD         	movff	??_ReadDataXONLID+1,postdec2
 48002  0029C6  D01E               	goto	l41552
 48003  0029C8                     l41538:
 48004                           
 48005                           ;readdtal.c: 409: else *dt=min;
 48006  0029C8  D875               	call	PL30	;call to abstracted procedure
 48007  0029CA  D01C               	goto	l41552
 48008  0029CC                     l41540:
 48009                           
 48010                           ; BSR set to: 2
 48011                           ;readdtal.c: 411: else
 48012                           ;readdtal.c: 412: {
 48013                           ;readdtal.c: 413: if((*dt+pp)>max) *ovf=1;
 48014  0029CC  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 48015  0029D0  D84E               	call	PL24	;call to abstracted procedure
 48016  0029D2  E202               	bc	l41544
 48017                           
 48018                           ; BSR set to: 2
 48019  0029D4  D88C               	call	PL150	;call to abstracted procedure
 48020  0029D6  D003               	goto	L94
 48021  0029D8                     l41544:
 48022                           
 48023                           ; BSR set to: 2
 48024                           ;readdtal.c: 414: else *ovf=0;
 48025  0029D8  C2F4  FFD9         	movff	ReadDataXONLID@ovf,fsr2l
 48026  0029DC  D895               	call	PL230	;call to abstracted procedure
 48027  0029DE                     L94:
 48028  0029DE  6EDF               	movwf	indf2,c
 48029                           
 48030                           ; BSR set to: 2
 48031                           ;readdtal.c: 415: if(*dt+pp<=max) *dt=*dt+pp;
 48032  0029E0  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 48033  0029E4  D844               	call	PL24	;call to abstracted procedure
 48034  0029E6  E306               	bnc	l41550
 48035                           
 48036                           ; BSR set to: 2
 48037  0029E8  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 48038  0029EC  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 48039  0029F0  D86A               	call	PL32	;call to abstracted procedure
 48040  0029F2  D008               	goto	l41552
 48041  0029F4                     l41550:
 48042                           
 48043                           ; BSR set to: 2
 48044                           ;readdtal.c: 416: else *dt=max;
 48045  0029F4  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 48046  0029F8  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 48047  0029FC  C2F9  FFDE         	movff	ReadDataXONLID@max,postinc2
 48048  002A00  C2FA  FFDD         	movff	ReadDataXONLID@max+1,postdec2
 48049  002A04                     l41552:
 48050                           
 48051                           ;readdtal.c: 417: }
 48052                           ;readdtal.c: 419: }
 48053                           ;readdtal.c: 420: if(*dt<min) *dt=min;
 48054  002A04  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 48055  002A08  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 48056  002A0C  CFDE F0F3          	movff	postinc2,??_ReadDataXONLID
 48057  002A10  CFDD F0F4          	movff	postdec2,??_ReadDataXONLID+1
 48058  002A14  0102               	movlb	2	; () banked
 48059  002A16  51F7               	movf	ReadDataXONLID@min& (0+255),w,b
 48060  002A18  0100               	movlb	0	; () banked
 48061  002A1A  5DF3               	subwf	??_ReadDataXONLID& (0+255),w,b
 48062  002A1C  0102               	movlb	2	; () banked
 48063  002A1E  51F8               	movf	(ReadDataXONLID@min+1)& (0+255),w,b
 48064  002A20  0100               	movlb	0	; () banked
 48065  002A22  59F4               	subwfb	(??_ReadDataXONLID+1)& (0+255),w,b
 48066  002A24  E201               	bc	l41556
 48067                           
 48068                           ; BSR set to: 0
 48069  002A26  D846               	call	PL30	;call to abstracted procedure
 48070  002A28                     l41556:
 48071                           
 48072                           ;readdtal.c: 421: if(*dt>max) *dt=max;
 48073  002A28  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 48074  002A2C  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 48075  002A30  CFDE F0F3          	movff	postinc2,??_ReadDataXONLID
 48076  002A34  CFDD F0F4          	movff	postdec2,??_ReadDataXONLID+1
 48077  002A38  0100               	movlb	0	; () banked
 48078  002A3A  51F3               	movf	??_ReadDataXONLID& (0+255),w,b
 48079  002A3C  0102               	movlb	2	; () banked
 48080  002A3E  5DF9               	subwf	ReadDataXONLID@max& (0+255),w,b
 48081  002A40  0100               	movlb	0	; () banked
 48082  002A42  51F4               	movf	(??_ReadDataXONLID+1)& (0+255),w,b
 48083  002A44  0102               	movlb	2	; () banked
 48084  002A46  59FA               	subwfb	(ReadDataXONLID@max+1)& (0+255),w,b
 48085  002A48  B0D8               	btfsc	status,0,c
 48086  002A4A  0012               	return	
 48087                           
 48088                           ; BSR set to: 2
 48089  002A4C  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 48090  002A50  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 48091  002A54  C2F9  FFDE         	movff	ReadDataXONLID@max,postinc2
 48092  002A58  C2FA  FFDD         	movff	ReadDataXONLID@max+1,postdec2
 48093  002A5C  0012               	return	
 48094  002A5E                     l4697:
 48095                           
 48096                           ; BSR set to: 0
 48097                           ;readdtal.c: 424: else
 48098                           ;readdtal.c: 425: {
 48099                           ;readdtal.c: 426: iu=0;
 48100  002A5E  0101               	movlb	1	; () banked
 48101  002A60  6BB2               	clrf	ReadDataXONLID@iu& (0+255),b
 48102                           
 48103                           ; BSR set to: 1
 48104                           ;readdtal.c: 427: ktu=5;
 48105  002A62  0E05               	movlw	5
 48106  002A64  6FB3               	movwf	ReadDataXONLID@ktu& (0+255),b
 48107                           
 48108                           ; BSR set to: 1
 48109                           ;readdtal.c: 428: es2=0;
 48110  002A66  6BB1               	clrf	ReadDataXONLID@es2& (0+255),b
 48111                           
 48112                           ; BSR set to: 1
 48113                           ;readdtal.c: 429: pp=step;
 48114  002A68  C2FB  F03D         	movff	ReadDataXONLID@step,ReadDataXONLID@pp
 48115  002A6C  0012               	return	
 48116  002A6E                     __end_of_ReadDataXONLID:
 48117                           	opt stack 0
 48118  002A6E                     PL24:
 48119                           	opt stack 21
 48120  002A6E  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 48121  002A72  CFDE F0F3          	movff	postinc2,??_ReadDataXONLID
 48122  002A76  CFDD F0F4          	movff	postdec2,??_ReadDataXONLID+1
 48123  002A7A  503D               	movf	ReadDataXONLID@pp,w,c
 48124  002A7C  0100               	movlb	0	; () banked
 48125  002A7E  25F3               	addwf	??_ReadDataXONLID& (0+255),w,b
 48126  002A80  6FF5               	movwf	(??_ReadDataXONLID+2)& (0+255),b
 48127  002A82  0E00               	movlw	0
 48128  002A84  21F4               	addwfc	(??_ReadDataXONLID+1)& (0+255),w,b
 48129  002A86  6FF6               	movwf	(??_ReadDataXONLID+3)& (0+255),b
 48130  002A88  51F5               	movf	(??_ReadDataXONLID+2)& (0+255),w,b
 48131  002A8A  0102               	movlb	2	; () banked
 48132  002A8C  5DF9               	subwf	ReadDataXONLID@max& (0+255),w,b
 48133  002A8E  0100               	movlb	0	; () banked
 48134  002A90  51F6               	movf	(??_ReadDataXONLID+3)& (0+255),w,b
 48135  002A92  0102               	movlb	2	; () banked
 48136  002A94  59FA               	subwfb	(ReadDataXONLID@max+1)& (0+255),w,b
 48137  002A96  0012               	return	
 48138  002A98                     __end_ofPL24:
 48139                           	opt stack 0
 48140  002A98                     PL26:
 48141                           	opt stack 21
 48142  002A98  503D               	movf	ReadDataXONLID@pp,w,c
 48143  002A9A  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 48144  002A9E  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 48145  002AA2  CFDE F0F3          	movff	postinc2,??_ReadDataXONLID
 48146  002AA6  CFDD F0F4          	movff	postdec2,??_ReadDataXONLID+1
 48147  002AAA  0100               	movlb	0	; () banked
 48148  002AAC  5FF3               	subwf	??_ReadDataXONLID& (0+255),f,b
 48149  002AAE  0E00               	movlw	0
 48150  002AB0  5BF4               	subwfb	(??_ReadDataXONLID+1)& (0+255),f,b
 48151  002AB2  0C00               	retlw	0
 48152  002AB4                     __end_ofPL26:
 48153                           	opt stack 0
 48154  002AB4                     PL30:
 48155                           	opt stack 21
 48156  002AB4  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 48157  002AB8  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 48158  002ABC  C2F7  FFDE         	movff	ReadDataXONLID@min,postinc2
 48159  002AC0  C2F8  FFDD         	movff	ReadDataXONLID@min+1,postdec2
 48160  002AC4  0012               	return	
 48161  002AC6                     __end_ofPL30:
 48162                           	opt stack 0
 48163  002AC6                     PL32:
 48164                           	opt stack 21
 48165  002AC6  CFDE F0F3          	movff	postinc2,??_ReadDataXONLID
 48166  002ACA  CFDD F0F4          	movff	postdec2,??_ReadDataXONLID+1
 48167  002ACE  503D               	movf	ReadDataXONLID@pp,w,c
 48168  002AD0  0100               	movlb	0	; () banked
 48169  002AD2  25F3               	addwf	??_ReadDataXONLID& (0+255),w,b
 48170  002AD4  6FF5               	movwf	(??_ReadDataXONLID+2)& (0+255),b
 48171  002AD6  0E00               	movlw	0
 48172  002AD8  21F4               	addwfc	(??_ReadDataXONLID+1)& (0+255),w,b
 48173  002ADA  6FF6               	movwf	(??_ReadDataXONLID+3)& (0+255),b
 48174  002ADC  C2F2  FFD9         	movff	ReadDataXONLID@dt,fsr2l
 48175  002AE0  C2F3  FFDA         	movff	ReadDataXONLID@dt+1,fsr2h
 48176  002AE4  C0F5  FFDE         	movff	??_ReadDataXONLID+2,postinc2
 48177  002AE8  C0F6  FFDD         	movff	??_ReadDataXONLID+3,postdec2
 48178  002AEC  0012               	return	
 48179  002AEE                     __end_ofPL32:
 48180                           	opt stack 0
 48181  002AEE                     PL150:
 48182                           	opt stack 21
 48183  002AEE  C2F4  FFD9         	movff	ReadDataXONLID@ovf,fsr2l
 48184  002AF2  C2F5  FFDA         	movff	ReadDataXONLID@ovf+1,fsr2h
 48185  002AF6  0C01               	retlw	1
 48186  002AF8                     __end_ofPL150:
 48187                           	opt stack 0
 48188  002AF8                     PL190:
 48189                           	opt stack 21
 48190  002AF8  51F3               	movf	??_ReadDataXONLID& (0+255),w,b
 48191  002AFA  0102               	movlb	2	; () banked
 48192  002AFC  5DF7               	subwf	ReadDataXONLID@min& (0+255),w,b
 48193  002AFE  0100               	movlb	0	; () banked
 48194  002B00  51F4               	movf	(??_ReadDataXONLID+1)& (0+255),w,b
 48195  002B02  0102               	movlb	2	; () banked
 48196  002B04  59F8               	subwfb	(ReadDataXONLID@min+1)& (0+255),w,b
 48197  002B06  0012               	return	
 48198  002B08                     __end_ofPL190:
 48199                           	opt stack 0
 48200  002B08                     PL230:
 48201                           	opt stack 21
 48202  002B08  C2F5  FFDA         	movff	ReadDataXONLID@ovf+1,fsr2h
 48203  002B0C  0C00               	retlw	0
 48204  002B0E                     __end_ofPL230:
 48205                           	opt stack 0
 48206                           tblptru	equ	0xFF8
 48207                           tblptrh	equ	0xFF7
 48208                           tblptrl	equ	0xFF6
 48209                           tablat	equ	0xFF5
 48210                           prodh	equ	0xFF4
 48211                           prodl	equ	0xFF3
 48212                           intcon	equ	0xFF2
 48213                           postinc0	equ	0xFEE
 48214                           wreg	equ	0xFE8
 48215                           indf1	equ	0xFE7
 48216                           postinc1	equ	0xFE6
 48217                           postdec1	equ	0xFE5
 48218                           fsr1h	equ	0xFE2
 48219                           fsr1l	equ	0xFE1
 48220                           indf2	equ	0xFDF
 48221                           postinc2	equ	0xFDE
 48222                           postdec2	equ	0xFDD
 48223                           fsr2h	equ	0xFDA
 48224                           fsr2l	equ	0xFD9
 48225                           status	equ	0xFD8
 48226                           
 48227 ;; *************** function _ExxPresKey *****************
 48228 ;; Defined at:
 48229 ;;		line 287 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
 48230 ;; Parameters:    Size  Location     Type
 48231 ;;  k               1    wreg     unsigned char 
 48232 ;;  ky              2   31[COMRAM] PTR struct .
 48233 ;;		 -> xxky(35), 
 48234 ;;  dTim            1   33[COMRAM] unsigned char 
 48235 ;;  pTim            1   34[COMRAM] unsigned char 
 48236 ;; Auto vars:     Size  Location     Type
 48237 ;;  k               1   37[COMRAM] unsigned char 
 48238 ;; Return value:  Size  Location     Type
 48239 ;;                  1    wreg      unsigned char 
 48240 ;; Registers used:
 48241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 48242 ;; Tracked objects:
 48243 ;;		On entry : F/0
 48244 ;;		On exit  : F/0
 48245 ;;		Unchanged: FFFFFFF0/0
 48246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48250 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48251 ;;Total ram usage:        7 bytes
 48252 ;; Hardware stack levels used:    1
 48253 ;; Hardware stack levels required when called:    5
 48254 ;; This function calls:
 48255 ;;		_StartKeyTim
 48256 ;;		_KeyTim
 48257 ;; This function is called by:
 48258 ;;		_ReadDataXONLID
 48259 ;; This function uses a non-reentrant model
 48260 ;;
 48261                           
 48262                           	psect	text230
 48263  00664A                     __ptext230:
 48264                           	opt stack 0
 48265  00664A                     _ExxPresKey:
 48266                           	opt stack 21
 48267                           
 48268                           ;ExxPresKey@k stored from wreg
 48269  00664A  CFE8 F026          	movff	wreg,ExxPresKey@k
 48270                           
 48271                           ; BSR set to: 0
 48272                           ;keypad.c: 288: (*ky).bk=(k)?1:0;
 48273  00664E  0E00               	movlw	0
 48274  006650  6AF3               	clrf	prodl,c
 48275  006652  6226               	cpfseq	ExxPresKey@k,c
 48276  006654  2AF3               	incf	prodl,f,c
 48277  006656  CFF3 F024          	movff	prodl,??_ExxPresKey
 48278  00665A  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48279  00665E  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48280  006662  50DF               	movf	indf2,w,c
 48281  006664  1824               	xorwf	??_ExxPresKey,w,c
 48282  006666  0BFE               	andlw	-2
 48283  006668  1824               	xorwf	??_ExxPresKey,w,c
 48284  00666A  6EDF               	movwf	indf2,c
 48285                           
 48286                           ; BSR set to: 0
 48287                           ;keypad.c: 290: if((*ky).fl&&(*ky).sbk&&!(*ky).bk)
 48288  00666C  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48289  006670  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48290  006674  50DF               	movf	indf2,w,c
 48291  006676  6E24               	movwf	??_ExxPresKey& (0+255),c
 48292  006678  A824               	btfss	??_ExxPresKey,4,c
 48293  00667A  D01B               	goto	l41398
 48294                           
 48295                           ; BSR set to: 0
 48296  00667C  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48297  006680  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48298  006684  50DF               	movf	indf2,w,c
 48299  006686  6E24               	movwf	??_ExxPresKey& (0+255),c
 48300  006688  A224               	btfss	??_ExxPresKey,1,c
 48301  00668A  D013               	goto	l41398
 48302                           
 48303                           ; BSR set to: 0
 48304  00668C  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48305  006690  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48306  006694  50DF               	movf	indf2,w,c
 48307  006696  6E24               	movwf	??_ExxPresKey& (0+255),c
 48308  006698  B024               	btfsc	??_ExxPresKey,0,c
 48309  00669A  D00B               	goto	l41398
 48310                           
 48311                           ; BSR set to: 0
 48312                           ;keypad.c: 291: {
 48313                           ;keypad.c: 292: (*ky).fl=0;
 48314  00669C  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48315  0066A0  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48316  0066A4  0EEF               	movlw	-17
 48317  0066A6  16DF               	andwf	indf2,f,c
 48318                           
 48319                           ; BSR set to: 0
 48320                           ;keypad.c: 293: (*ky).sbk=((*ky).bk)?1:0;
 48321  0066A8  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48322                           
 48323                           ; BSR set to: 0
 48324                           ;keypad.c: 294: StartKeyTim(ky);
 48325  0066AC  D89F               	call	PL36	;call to abstracted procedure
 48326  0066AE  ECC4  F058         	call	_StartKeyTim	;wreg free
 48327  0066B2                     l41398:
 48328                           
 48329                           ; BSR set to: 0
 48330                           ;keypad.c: 295: }
 48331                           ;keypad.c: 296: if (!(*ky).sbk&&(*ky).bk)
 48332  0066B2  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48333  0066B6  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48334  0066BA  50DF               	movf	indf2,w,c
 48335  0066BC  6E24               	movwf	??_ExxPresKey& (0+255),c
 48336  0066BE  B224               	btfsc	??_ExxPresKey,1,c
 48337  0066C0  D00E               	goto	l41410
 48338                           
 48339                           ; BSR set to: 0
 48340  0066C2  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48341  0066C6  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48342  0066CA  50DF               	movf	indf2,w,c
 48343  0066CC  6E24               	movwf	??_ExxPresKey& (0+255),c
 48344  0066CE  A024               	btfss	??_ExxPresKey,0,c
 48345  0066D0  D006               	goto	l41410
 48346                           
 48347                           ; BSR set to: 0
 48348                           ;keypad.c: 297: {
 48349                           ;keypad.c: 298: (*ky).sbk=((*ky).bk)?1:0;
 48350  0066D2  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48351                           
 48352                           ; BSR set to: 0
 48353                           ;keypad.c: 299: StartKeyTim(ky);
 48354  0066D6  D88A               	call	PL36	;call to abstracted procedure
 48355  0066D8  ECC4  F058         	call	_StartKeyTim	;wreg free
 48356                           
 48357                           ; BSR set to: 0
 48358                           ;keypad.c: 300: return 1;
 48359  0066DC  0C01               	retlw	1
 48360  0066DE                     l41410:
 48361                           
 48362                           ; BSR set to: 0
 48363                           ;keypad.c: 301: }
 48364                           ;keypad.c: 302: if (!(*ky).fl&&(*ky).sbk&&!(*ky).bk)
 48365  0066DE  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48366  0066E2  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48367  0066E6  50DF               	movf	indf2,w,c
 48368  0066E8  6E24               	movwf	??_ExxPresKey& (0+255),c
 48369  0066EA  B824               	btfsc	??_ExxPresKey,4,c
 48370  0066EC  D015               	goto	l41420
 48371                           
 48372                           ; BSR set to: 0
 48373  0066EE  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48374  0066F2  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48375  0066F6  50DF               	movf	indf2,w,c
 48376  0066F8  6E24               	movwf	??_ExxPresKey& (0+255),c
 48377  0066FA  A224               	btfss	??_ExxPresKey,1,c
 48378  0066FC  D00D               	goto	l41420
 48379                           
 48380                           ; BSR set to: 0
 48381  0066FE  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48382  006702  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48383  006706  50DF               	movf	indf2,w,c
 48384  006708  6E24               	movwf	??_ExxPresKey& (0+255),c
 48385  00670A  B024               	btfsc	??_ExxPresKey,0,c
 48386  00670C  D005               	goto	l41420
 48387                           
 48388                           ; BSR set to: 0
 48389                           ;keypad.c: 303: {
 48390                           ;keypad.c: 304: (*ky).sbk=((*ky).bk)?1:0;
 48391  00670E  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48392                           
 48393                           ; BSR set to: 0
 48394                           ;keypad.c: 305: StartKeyTim(ky);
 48395  006712  D86C               	call	PL36	;call to abstracted procedure
 48396  006714  ECC4  F058         	call	_StartKeyTim	;wreg free
 48397  006718                     l41420:
 48398                           
 48399                           ; BSR set to: 0
 48400                           ;keypad.c: 306: }
 48401                           ;keypad.c: 307: if((*ky).sbk&&(*ky).bk)
 48402  006718  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48403  00671C  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48404  006720  50DF               	movf	indf2,w,c
 48405  006722  6E24               	movwf	??_ExxPresKey& (0+255),c
 48406  006724  A224               	btfss	??_ExxPresKey,1,c
 48407  006726  D03F               	goto	l41440
 48408                           
 48409                           ; BSR set to: 0
 48410  006728  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48411  00672C  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48412  006730  50DF               	movf	indf2,w,c
 48413  006732  6E24               	movwf	??_ExxPresKey& (0+255),c
 48414  006734  A024               	btfss	??_ExxPresKey,0,c
 48415  006736  D037               	goto	l41440
 48416                           
 48417                           ; BSR set to: 0
 48418                           ;keypad.c: 308: {
 48419                           ;keypad.c: 310: if(!(*ky).ap&&KeyTim(ky)>=dTim)
 48420  006738  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48421  00673C  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48422  006740  50DF               	movf	indf2,w,c
 48423  006742  6E24               	movwf	??_ExxPresKey& (0+255),c
 48424  006744  B424               	btfsc	??_ExxPresKey,2,c
 48425  006746  D016               	goto	l41430
 48426                           
 48427                           ; BSR set to: 0
 48428  006748  C020  F01E         	movff	ExxPresKey@ky,?_KeyTim
 48429  00674C  C021  F01F         	movff	ExxPresKey@ky+1,?_KeyTim+1
 48430  006750  EC5D  F05A         	call	_KeyTim	;wreg free
 48431  006754  6E24               	movwf	??_ExxPresKey& (0+255),c
 48432  006756  5022               	movf	ExxPresKey@dTim,w,c
 48433  006758  5C24               	subwf	??_ExxPresKey,w,c
 48434  00675A  E30C               	bnc	l41430
 48435                           
 48436                           ; BSR set to: 0
 48437                           ;keypad.c: 311: {
 48438                           ;keypad.c: 312: (*ky).fl=1;
 48439  00675C  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48440  006760  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48441  006764  0E10               	movlw	16
 48442  006766  12DF               	iorwf	indf2,f,c
 48443                           
 48444                           ;keypad.c: 313: (*ky).ap=1;
 48445  006768  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48446  00676C  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48447  006770  0E04               	movlw	4
 48448  006772  12DF               	iorwf	indf2,f,c
 48449  006774                     l41430:
 48450                           
 48451                           ; BSR set to: 0
 48452                           ;keypad.c: 314: }
 48453                           ;keypad.c: 315: if((*ky).ap&&KeyTim(ky)>=pTim)
 48454  006774  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48455  006778  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48456  00677C  50DF               	movf	indf2,w,c
 48457  00677E  6E24               	movwf	??_ExxPresKey& (0+255),c
 48458  006780  A424               	btfss	??_ExxPresKey,2,c
 48459  006782  D017               	goto	l41442
 48460                           
 48461                           ; BSR set to: 0
 48462  006784  C020  F01E         	movff	ExxPresKey@ky,?_KeyTim
 48463  006788  C021  F01F         	movff	ExxPresKey@ky+1,?_KeyTim+1
 48464  00678C  EC5D  F05A         	call	_KeyTim	;wreg free
 48465  006790  6E24               	movwf	??_ExxPresKey& (0+255),c
 48466  006792  5023               	movf	ExxPresKey@pTim,w,c
 48467  006794  5C24               	subwf	??_ExxPresKey,w,c
 48468  006796  E30D               	bnc	l41442
 48469                           
 48470                           ; BSR set to: 0
 48471                           ;keypad.c: 316: {
 48472                           ;keypad.c: 317: StartKeyTim(ky);
 48473  006798  C020  F01E         	movff	ExxPresKey@ky,?_StartKeyTim
 48474  00679C  C021  F01F         	movff	ExxPresKey@ky+1,?_StartKeyTim+1
 48475  0067A0  ECC4  F058         	call	_StartKeyTim	;wreg free
 48476                           
 48477                           ; BSR set to: 0
 48478                           ;keypad.c: 318: return 2;
 48479  0067A4  0C02               	retlw	2
 48480  0067A6                     l41440:
 48481                           
 48482                           ; BSR set to: 0
 48483  0067A6  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48484  0067AA  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48485  0067AE  0EFB               	movlw	-5
 48486  0067B0  16DF               	andwf	indf2,f,c
 48487  0067B2                     l41442:
 48488                           
 48489                           ; BSR set to: 0
 48490                           ;keypad.c: 321: (*ky).sbk=((*ky).bk)?1:0;
 48491  0067B2  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48492  0067B6  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48493  0067BA  50DF               	movf	indf2,w,c
 48494  0067BC  6E24               	movwf	??_ExxPresKey& (0+255),c
 48495  0067BE  0E01               	movlw	1
 48496  0067C0  A024               	btfss	??_ExxPresKey,0,c
 48497  0067C2  0E00               	movlw	0
 48498  0067C4  6E25               	movwf	(??_ExxPresKey+1)& (0+255),c
 48499  0067C6  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48500  0067CA  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48501  0067CE  4625               	rlncf	??_ExxPresKey+1,f,c
 48502  0067D0  50DF               	movf	indf2,w,c
 48503  0067D2  1825               	xorwf	??_ExxPresKey+1,w,c
 48504  0067D4  0BFD               	andlw	-3
 48505  0067D6  1825               	xorwf	??_ExxPresKey+1,w,c
 48506  0067D8  6EDF               	movwf	indf2,c
 48507                           
 48508                           ; BSR set to: 0
 48509                           ;keypad.c: 322: if ((*ky).ap) return 3;
 48510  0067DA  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48511  0067DE  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48512  0067E2  50DF               	movf	indf2,w,c
 48513  0067E4  6E24               	movwf	??_ExxPresKey& (0+255),c
 48514  0067E6  B424               	btfsc	??_ExxPresKey,2,c
 48515                           
 48516                           ; BSR set to: 0
 48517  0067E8  0C03               	retlw	3
 48518                           
 48519                           ; BSR set to: 0
 48520                           
 48521                           ; BSR set to: 0
 48522                           ;keypad.c: 323: return 0;
 48523  0067EA  0C00               	retlw	0
 48524  0067EC                     __end_of_ExxPresKey:
 48525                           	opt stack 0
 48526  0067EC                     PL36:
 48527                           	opt stack 21
 48528  0067EC  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48529  0067F0  50DF               	movf	indf2,w,c
 48530  0067F2  6E24               	movwf	??_ExxPresKey& (0+255),c
 48531  0067F4  0E01               	movlw	1
 48532  0067F6  A024               	btfss	??_ExxPresKey,0,c
 48533  0067F8  0E00               	movlw	0
 48534  0067FA  6E25               	movwf	(??_ExxPresKey+1)& (0+255),c
 48535  0067FC  C020  FFD9         	movff	ExxPresKey@ky,fsr2l
 48536  006800  C021  FFDA         	movff	ExxPresKey@ky+1,fsr2h
 48537  006804  4625               	rlncf	??_ExxPresKey+1,f,c
 48538  006806  50DF               	movf	indf2,w,c
 48539  006808  1825               	xorwf	??_ExxPresKey+1,w,c
 48540  00680A  0BFD               	andlw	-3
 48541  00680C  1825               	xorwf	??_ExxPresKey+1,w,c
 48542  00680E  6EDF               	movwf	indf2,c
 48543  006810  C020  F01E         	movff	ExxPresKey@ky,?_StartKeyTim
 48544  006814  C021  F01F         	movff	ExxPresKey@ky+1,?_StartKeyTim+1
 48545  006818  0012               	return	
 48546  00681A                     __end_ofPL36:
 48547                           	opt stack 0
 48548                           tblptru	equ	0xFF8
 48549                           tblptrh	equ	0xFF7
 48550                           tblptrl	equ	0xFF6
 48551                           tablat	equ	0xFF5
 48552                           prodh	equ	0xFF4
 48553                           prodl	equ	0xFF3
 48554                           intcon	equ	0xFF2
 48555                           postinc0	equ	0xFEE
 48556                           wreg	equ	0xFE8
 48557                           indf1	equ	0xFE7
 48558                           postinc1	equ	0xFE6
 48559                           postdec1	equ	0xFE5
 48560                           fsr1h	equ	0xFE2
 48561                           fsr1l	equ	0xFE1
 48562                           indf2	equ	0xFDF
 48563                           postinc2	equ	0xFDE
 48564                           postdec2	equ	0xFDD
 48565                           fsr2h	equ	0xFDA
 48566                           fsr2l	equ	0xFD9
 48567                           status	equ	0xFD8
 48568                           
 48569 ;; *************** function _StartKeyTim *****************
 48570 ;; Defined at:
 48571 ;;		line 77 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
 48572 ;; Parameters:    Size  Location     Type
 48573 ;;  ky              2   29[COMRAM] PTR struct .
 48574 ;;		 -> xxky(35), ky(35), 
 48575 ;; Auto vars:     Size  Location     Type
 48576 ;;		None
 48577 ;; Return value:  Size  Location     Type
 48578 ;;		None               void
 48579 ;; Registers used:
 48580 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48581 ;; Tracked objects:
 48582 ;;		On entry : F/0
 48583 ;;		On exit  : F/0
 48584 ;;		Unchanged: FFFFFFF0/0
 48585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48590 ;;Total ram usage:        2 bytes
 48591 ;; Hardware stack levels used:    1
 48592 ;; Hardware stack levels required when called:    4
 48593 ;; This function calls:
 48594 ;;		Nothing
 48595 ;; This function is called by:
 48596 ;;		_PresKeyEX
 48597 ;;		_ExxPresKey
 48598 ;; This function uses a non-reentrant model
 48599 ;;
 48600                           
 48601                           	psect	text231
 48602  00B188                     __ptext231:
 48603                           	opt stack 0
 48604  00B188                     _StartKeyTim:
 48605                           	opt stack 21
 48606                           
 48607                           ; BSR set to: 0
 48608                           ;keypad.c: 78: (*ky).cS=0;
 48609                           
 48610                           ; BSR set to: 0
 48611  00B188  EE20 F001          	lfsr	2,1
 48612  00B18C  501E               	movf	StartKeyTim@ky,w,c
 48613  00B18E  26D9               	addwf	fsr2l,f,c
 48614  00B190  501F               	movf	StartKeyTim@ky+1,w,c
 48615  00B192  22DA               	addwfc	fsr2h,f,c
 48616  00B194  6ADF               	clrf	indf2,c
 48617                           
 48618                           ;keypad.c: 79: (*ky).dS=0;
 48619  00B196  EE20 F002          	lfsr	2,2
 48620  00B19A  501E               	movf	StartKeyTim@ky,w,c
 48621  00B19C  26D9               	addwf	fsr2l,f,c
 48622  00B19E  501F               	movf	StartKeyTim@ky+1,w,c
 48623  00B1A0  22DA               	addwfc	fsr2h,f,c
 48624  00B1A2  0E00               	movlw	0
 48625  00B1A4  6EDF               	movwf	indf2,c
 48626                           
 48627                           ; BSR set to: 0
 48628  00B1A6  0C00               	retlw	0
 48629  00B1A8                     __end_of_StartKeyTim:
 48630                           	opt stack 0
 48631                           tblptru	equ	0xFF8
 48632                           tblptrh	equ	0xFF7
 48633                           tblptrl	equ	0xFF6
 48634                           tablat	equ	0xFF5
 48635                           prodh	equ	0xFF4
 48636                           prodl	equ	0xFF3
 48637                           intcon	equ	0xFF2
 48638                           postinc0	equ	0xFEE
 48639                           wreg	equ	0xFE8
 48640                           indf1	equ	0xFE7
 48641                           postinc1	equ	0xFE6
 48642                           postdec1	equ	0xFE5
 48643                           fsr1h	equ	0xFE2
 48644                           fsr1l	equ	0xFE1
 48645                           indf2	equ	0xFDF
 48646                           postinc2	equ	0xFDE
 48647                           postdec2	equ	0xFDD
 48648                           fsr2h	equ	0xFDA
 48649                           fsr2l	equ	0xFD9
 48650                           status	equ	0xFD8
 48651                           
 48652 ;; *************** function _KeyTim *****************
 48653 ;; Defined at:
 48654 ;;		line 84 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
 48655 ;; Parameters:    Size  Location     Type
 48656 ;;  ky              2   29[COMRAM] PTR struct .
 48657 ;;		 -> xxky(35), ky(35), 
 48658 ;; Auto vars:     Size  Location     Type
 48659 ;;		None
 48660 ;; Return value:  Size  Location     Type
 48661 ;;                  1    wreg      unsigned char 
 48662 ;; Registers used:
 48663 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48664 ;; Tracked objects:
 48665 ;;		On entry : F/0
 48666 ;;		On exit  : F/0
 48667 ;;		Unchanged: FFFFFFF0/0
 48668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48673 ;;Total ram usage:        2 bytes
 48674 ;; Hardware stack levels used:    1
 48675 ;; Hardware stack levels required when called:    4
 48676 ;; This function calls:
 48677 ;;		Nothing
 48678 ;; This function is called by:
 48679 ;;		_PresKeyEX
 48680 ;;		_ExxPresKey
 48681 ;; This function uses a non-reentrant model
 48682 ;;
 48683                           
 48684                           	psect	text232
 48685  00B4BA                     __ptext232:
 48686                           	opt stack 0
 48687  00B4BA                     _KeyTim:
 48688                           	opt stack 21
 48689                           
 48690                           ; BSR set to: 0
 48691                           ;keypad.c: 85: return (*ky).dS;
 48692                           
 48693                           ; BSR set to: 0
 48694  00B4BA  EE20 F002          	lfsr	2,2
 48695  00B4BE  501E               	movf	KeyTim@ky,w,c
 48696  00B4C0  26D9               	addwf	fsr2l,f,c
 48697  00B4C2  501F               	movf	KeyTim@ky+1,w,c
 48698  00B4C4  22DA               	addwfc	fsr2h,f,c
 48699  00B4C6  50DF               	movf	indf2,w,c
 48700                           
 48701                           ; BSR set to: 0
 48702  00B4C8  0012               	return	
 48703  00B4CA                     __end_of_KeyTim:
 48704                           	opt stack 0
 48705                           tblptru	equ	0xFF8
 48706                           tblptrh	equ	0xFF7
 48707                           tblptrl	equ	0xFF6
 48708                           tablat	equ	0xFF5
 48709                           prodh	equ	0xFF4
 48710                           prodl	equ	0xFF3
 48711                           intcon	equ	0xFF2
 48712                           postinc0	equ	0xFEE
 48713                           wreg	equ	0xFE8
 48714                           indf1	equ	0xFE7
 48715                           postinc1	equ	0xFE6
 48716                           postdec1	equ	0xFE5
 48717                           fsr1h	equ	0xFE2
 48718                           fsr1l	equ	0xFE1
 48719                           indf2	equ	0xFDF
 48720                           postinc2	equ	0xFDE
 48721                           postdec2	equ	0xFDD
 48722                           fsr2h	equ	0xFDA
 48723                           fsr2l	equ	0xFD9
 48724                           status	equ	0xFD8
 48725                           
 48726 ;; *************** function ___aldiv *****************
 48727 ;; Defined at:
 48728 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.12\sources\aldiv.c"
 48729 ;; Parameters:    Size  Location     Type
 48730 ;;  dividend        4   29[COMRAM] long 
 48731 ;;  divisor         4   33[COMRAM] long 
 48732 ;; Auto vars:     Size  Location     Type
 48733 ;;  quotient        4    2[BANK0 ] long 
 48734 ;;  sign            1    1[BANK0 ] unsigned char 
 48735 ;;  counter         1    0[BANK0 ] unsigned char 
 48736 ;; Return value:  Size  Location     Type
 48737 ;;                  4   29[COMRAM] long 
 48738 ;; Registers used:
 48739 ;;		wreg, status,2, status,0
 48740 ;; Tracked objects:
 48741 ;;		On entry : D/2
 48742 ;;		On exit  : F/0
 48743 ;;		Unchanged: FFFFFFF0/0
 48744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48745 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48746 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48748 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48749 ;;Total ram usage:       14 bytes
 48750 ;; Hardware stack levels used:    1
 48751 ;; Hardware stack levels required when called:    4
 48752 ;; This function calls:
 48753 ;;		Nothing
 48754 ;; This function is called by:
 48755 ;;		_GetPGD_PCO
 48756 ;;		_ModZgCO
 48757 ;;		_FirstPCW
 48758 ;;		_ModZgCW
 48759 ;;		_ModZgCW4
 48760 ;;		_ModZgCW2
 48761 ;; This function uses a non-reentrant model
 48762 ;;
 48763                           
 48764                           	psect	text233
 48765  0085C6                     __ptext233:
 48766                           	opt stack 0
 48767  0085C6                     ___aldiv:
 48768                           	opt stack 22
 48769                           
 48770                           ; BSR set to: 0
 48771  0085C6  0100               	movlb	0	; () banked
 48772  0085C8  6BF4               	clrf	___aldiv@sign& (0+255),b
 48773  0085CA  AE25               	btfss	___aldiv@divisor+3,7,c
 48774  0085CC  D00A               	goto	l36464
 48775                           
 48776                           ; BSR set to: 0
 48777  0085CE  1E25               	comf	___aldiv@divisor+3,f,c
 48778  0085D0  1E24               	comf	___aldiv@divisor+2,f,c
 48779  0085D2  1E23               	comf	___aldiv@divisor+1,f,c
 48780  0085D4  6C22               	negf	___aldiv@divisor,c
 48781  0085D6  0E00               	movlw	0
 48782  0085D8  2223               	addwfc	___aldiv@divisor+1,f,c
 48783  0085DA  2224               	addwfc	___aldiv@divisor+2,f,c
 48784  0085DC  2225               	addwfc	___aldiv@divisor+3,f,c
 48785                           
 48786                           ; BSR set to: 0
 48787  0085DE  0E01               	movlw	1
 48788  0085E0  6FF4               	movwf	___aldiv@sign& (0+255),b
 48789  0085E2                     l36464:
 48790                           
 48791                           ; BSR set to: 0
 48792  0085E2  AE21               	btfss	___aldiv@dividend+3,7,c
 48793  0085E4  D00A               	goto	l36470
 48794                           
 48795                           ; BSR set to: 0
 48796  0085E6  1E21               	comf	___aldiv@dividend+3,f,c
 48797  0085E8  1E20               	comf	___aldiv@dividend+2,f,c
 48798  0085EA  1E1F               	comf	___aldiv@dividend+1,f,c
 48799  0085EC  6C1E               	negf	___aldiv@dividend,c
 48800  0085EE  0E00               	movlw	0
 48801  0085F0  221F               	addwfc	___aldiv@dividend+1,f,c
 48802  0085F2  2220               	addwfc	___aldiv@dividend+2,f,c
 48803  0085F4  2221               	addwfc	___aldiv@dividend+3,f,c
 48804                           
 48805                           ; BSR set to: 0
 48806  0085F6  0E01               	movlw	1
 48807  0085F8  1BF4               	xorwf	___aldiv@sign& (0+255),f,b
 48808  0085FA                     l36470:
 48809                           
 48810                           ; BSR set to: 0
 48811  0085FA  6BF5               	clrf	___aldiv@quotient& (0+255),b
 48812  0085FC  6BF6               	clrf	(___aldiv@quotient+1)& (0+255),b
 48813  0085FE  6BF7               	clrf	(___aldiv@quotient+2)& (0+255),b
 48814  008600  6BF8               	clrf	(___aldiv@quotient+3)& (0+255),b
 48815                           
 48816                           ; BSR set to: 0
 48817  008602  5025               	movf	___aldiv@divisor+3,w,c
 48818  008604  1022               	iorwf	___aldiv@divisor,w,c
 48819  008606  1023               	iorwf	___aldiv@divisor+1,w,c
 48820  008608  1024               	iorwf	___aldiv@divisor+2,w,c
 48821  00860A  E029               	bz	l36492
 48822                           
 48823                           ; BSR set to: 0
 48824  00860C  0E01               	movlw	1
 48825  00860E  6FF3               	movwf	___aldiv@counter& (0+255),b
 48826  008610  D006               	goto	l36478
 48827  008612                     l36476:
 48828                           
 48829                           ; BSR set to: 0
 48830  008612  90D8               	bcf	status,0,c
 48831  008614  3622               	rlcf	___aldiv@divisor,f,c
 48832  008616  3623               	rlcf	___aldiv@divisor+1,f,c
 48833  008618  3624               	rlcf	___aldiv@divisor+2,f,c
 48834  00861A  3625               	rlcf	___aldiv@divisor+3,f,c
 48835  00861C  2BF3               	incf	___aldiv@counter& (0+255),f,b
 48836  00861E                     l36478:
 48837                           
 48838                           ; BSR set to: 0
 48839  00861E  AE25               	btfss	___aldiv@divisor+3,7,c
 48840  008620  D7F8               	goto	l36476
 48841  008622                     l36480:
 48842                           
 48843                           ; BSR set to: 0
 48844  008622  90D8               	bcf	status,0,c
 48845  008624  37F5               	rlcf	___aldiv@quotient& (0+255),f,b
 48846  008626  37F6               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 48847  008628  37F7               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 48848  00862A  37F8               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 48849                           
 48850                           ; BSR set to: 0
 48851  00862C  5022               	movf	___aldiv@divisor,w,c
 48852  00862E  5C1E               	subwf	___aldiv@dividend,w,c
 48853  008630  5023               	movf	___aldiv@divisor+1,w,c
 48854  008632  581F               	subwfb	___aldiv@dividend+1,w,c
 48855  008634  5024               	movf	___aldiv@divisor+2,w,c
 48856  008636  5820               	subwfb	___aldiv@dividend+2,w,c
 48857  008638  5025               	movf	___aldiv@divisor+3,w,c
 48858  00863A  5821               	subwfb	___aldiv@dividend+3,w,c
 48859  00863C  E309               	bnc	l36488
 48860                           
 48861                           ; BSR set to: 0
 48862  00863E  5022               	movf	___aldiv@divisor,w,c
 48863  008640  5E1E               	subwf	___aldiv@dividend,f,c
 48864  008642  5023               	movf	___aldiv@divisor+1,w,c
 48865  008644  5A1F               	subwfb	___aldiv@dividend+1,f,c
 48866  008646  5024               	movf	___aldiv@divisor+2,w,c
 48867  008648  5A20               	subwfb	___aldiv@dividend+2,f,c
 48868  00864A  5025               	movf	___aldiv@divisor+3,w,c
 48869  00864C  5A21               	subwfb	___aldiv@dividend+3,f,c
 48870                           
 48871                           ; BSR set to: 0
 48872  00864E  81F5               	bsf	___aldiv@quotient& (0+255),0,b
 48873  008650                     l36488:
 48874                           
 48875                           ; BSR set to: 0
 48876  008650  90D8               	bcf	status,0,c
 48877  008652  3225               	rrcf	___aldiv@divisor+3,f,c
 48878  008654  3224               	rrcf	___aldiv@divisor+2,f,c
 48879  008656  3223               	rrcf	___aldiv@divisor+1,f,c
 48880  008658  3222               	rrcf	___aldiv@divisor,f,c
 48881                           
 48882                           ; BSR set to: 0
 48883  00865A  2FF3               	decfsz	___aldiv@counter& (0+255),f,b
 48884  00865C  D7E2               	goto	l36480
 48885  00865E                     l36492:
 48886                           
 48887                           ; BSR set to: 0
 48888  00865E  51F4               	movf	___aldiv@sign& (0+255),w,b
 48889  008660  E008               	bz	l36496
 48890                           
 48891                           ; BSR set to: 0
 48892  008662  1FF8               	comf	(___aldiv@quotient+3)& (0+255),f,b
 48893  008664  1FF7               	comf	(___aldiv@quotient+2)& (0+255),f,b
 48894  008666  1FF6               	comf	(___aldiv@quotient+1)& (0+255),f,b
 48895  008668  6DF5               	negf	___aldiv@quotient& (0+255),b
 48896  00866A  0E00               	movlw	0
 48897  00866C  23F6               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 48898  00866E  23F7               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 48899  008670  23F8               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 48900  008672                     l36496:
 48901                           
 48902                           ; BSR set to: 0
 48903  008672  C0F5  F01E         	movff	___aldiv@quotient,?___aldiv
 48904  008676  C0F6  F01F         	movff	___aldiv@quotient+1,?___aldiv+1
 48905  00867A  C0F7  F020         	movff	___aldiv@quotient+2,?___aldiv+2
 48906  00867E  C0F8  F021         	movff	___aldiv@quotient+3,?___aldiv+3
 48907                           
 48908                           ; BSR set to: 0
 48909  008682  0012               	return	
 48910  008684                     __end_of___aldiv:
 48911                           	opt stack 0
 48912                           tblptru	equ	0xFF8
 48913                           tblptrh	equ	0xFF7
 48914                           tblptrl	equ	0xFF6
 48915                           tablat	equ	0xFF5
 48916                           prodh	equ	0xFF4
 48917                           prodl	equ	0xFF3
 48918                           intcon	equ	0xFF2
 48919                           postinc0	equ	0xFEE
 48920                           wreg	equ	0xFE8
 48921                           indf1	equ	0xFE7
 48922                           postinc1	equ	0xFE6
 48923                           postdec1	equ	0xFE5
 48924                           fsr1h	equ	0xFE2
 48925                           fsr1l	equ	0xFE1
 48926                           indf2	equ	0xFDF
 48927                           postinc2	equ	0xFDE
 48928                           postdec2	equ	0xFDD
 48929                           fsr2h	equ	0xFDA
 48930                           fsr2l	equ	0xFD9
 48931                           status	equ	0xFD8
 48932                           
 48933 ;; *************** function ___awdiv *****************
 48934 ;; Defined at:
 48935 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.12\sources\awdiv.c"
 48936 ;; Parameters:    Size  Location     Type
 48937 ;;  dividend        2    0[BANK0 ] int 
 48938 ;;  divisor         2    2[BANK0 ] int 
 48939 ;; Auto vars:     Size  Location     Type
 48940 ;;  quotient        2    6[BANK0 ] int 
 48941 ;;  sign            1    5[BANK0 ] unsigned char 
 48942 ;;  counter         1    4[BANK0 ] unsigned char 
 48943 ;; Return value:  Size  Location     Type
 48944 ;;                  2    0[BANK0 ] int 
 48945 ;; Registers used:
 48946 ;;		wreg, status,2, status,0
 48947 ;; Tracked objects:
 48948 ;;		On entry : F/0
 48949 ;;		On exit  : F/0
 48950 ;;		Unchanged: FFFFFFF0/0
 48951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 48952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48953 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48955 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48956 ;;Total ram usage:        8 bytes
 48957 ;; Hardware stack levels used:    1
 48958 ;; Hardware stack levels required when called:    4
 48959 ;; This function calls:
 48960 ;;		Nothing
 48961 ;; This function is called by:
 48962 ;;		_PomiarCS
 48963 ;;		_MocStart
 48964 ;;		_MocMaksCO
 48965 ;;		_MocMaksCW
 48966 ;;		_StartMCW
 48967 ;;		_FirstPCW
 48968 ;;		_ModPrzCW
 48969 ;;		_RetHI
 48970 ;;		_RetLO
 48971 ;;		_RetKrkDelta
 48972 ;;		_RetDelta
 48973 ;; This function uses a non-reentrant model
 48974 ;;
 48975                           
 48976                           	psect	text234
 48977  00946E                     __ptext234:
 48978                           	opt stack 0
 48979  00946E                     ___awdiv:
 48980                           	opt stack 23
 48981                           
 48982                           ; BSR set to: 0
 48983                           
 48984                           ; BSR set to: 0
 48985  00946E  6BF8               	clrf	___awdiv@sign& (0+255),b
 48986  009470  AFF6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 48987  009472  D006               	goto	l36506
 48988                           
 48989                           ; BSR set to: 0
 48990  009474  6DF5               	negf	___awdiv@divisor& (0+255),b
 48991  009476  1FF6               	comf	(___awdiv@divisor+1)& (0+255),f,b
 48992  009478  B0D8               	btfsc	status,0,c
 48993  00947A  2BF6               	incf	(___awdiv@divisor+1)& (0+255),f,b
 48994                           
 48995                           ; BSR set to: 0
 48996  00947C  0E01               	movlw	1
 48997  00947E  6FF8               	movwf	___awdiv@sign& (0+255),b
 48998  009480                     l36506:
 48999                           
 49000                           ; BSR set to: 0
 49001  009480  AFF4               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 49002  009482  D006               	goto	l36512
 49003                           
 49004                           ; BSR set to: 0
 49005  009484  6DF3               	negf	___awdiv@dividend& (0+255),b
 49006  009486  1FF4               	comf	(___awdiv@dividend+1)& (0+255),f,b
 49007  009488  B0D8               	btfsc	status,0,c
 49008  00948A  2BF4               	incf	(___awdiv@dividend+1)& (0+255),f,b
 49009                           
 49010                           ; BSR set to: 0
 49011  00948C  0E01               	movlw	1
 49012  00948E  1BF8               	xorwf	___awdiv@sign& (0+255),f,b
 49013  009490                     l36512:
 49014                           
 49015                           ; BSR set to: 0
 49016  009490  6BF9               	clrf	___awdiv@quotient& (0+255),b
 49017  009492  6BFA               	clrf	(___awdiv@quotient+1)& (0+255),b
 49018                           
 49019                           ; BSR set to: 0
 49020  009494  51F6               	movf	(___awdiv@divisor+1)& (0+255),w,b
 49021  009496  11F5               	iorwf	___awdiv@divisor& (0+255),w,b
 49022  009498  E01B               	bz	l36534
 49023                           
 49024                           ; BSR set to: 0
 49025  00949A  0E01               	movlw	1
 49026  00949C  6FF7               	movwf	___awdiv@counter& (0+255),b
 49027  00949E  D004               	goto	l36520
 49028  0094A0                     l36518:
 49029                           
 49030                           ; BSR set to: 0
 49031  0094A0  90D8               	bcf	status,0,c
 49032  0094A2  37F5               	rlcf	___awdiv@divisor& (0+255),f,b
 49033  0094A4  37F6               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 49034  0094A6  2BF7               	incf	___awdiv@counter& (0+255),f,b
 49035  0094A8                     l36520:
 49036                           
 49037                           ; BSR set to: 0
 49038  0094A8  AFF6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 49039  0094AA  D7FA               	goto	l36518
 49040  0094AC                     l36522:
 49041                           
 49042                           ; BSR set to: 0
 49043  0094AC  90D8               	bcf	status,0,c
 49044  0094AE  37F9               	rlcf	___awdiv@quotient& (0+255),f,b
 49045  0094B0  37FA               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 49046                           
 49047                           ; BSR set to: 0
 49048  0094B2  51F5               	movf	___awdiv@divisor& (0+255),w,b
 49049  0094B4  5DF3               	subwf	___awdiv@dividend& (0+255),w,b
 49050  0094B6  51F6               	movf	(___awdiv@divisor+1)& (0+255),w,b
 49051  0094B8  59F4               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 49052  0094BA  E305               	bnc	l36530
 49053                           
 49054                           ; BSR set to: 0
 49055  0094BC  51F5               	movf	___awdiv@divisor& (0+255),w,b
 49056  0094BE  5FF3               	subwf	___awdiv@dividend& (0+255),f,b
 49057  0094C0  51F6               	movf	(___awdiv@divisor+1)& (0+255),w,b
 49058  0094C2  5BF4               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 49059                           
 49060                           ; BSR set to: 0
 49061  0094C4  81F9               	bsf	___awdiv@quotient& (0+255),0,b
 49062  0094C6                     l36530:
 49063                           
 49064                           ; BSR set to: 0
 49065  0094C6  90D8               	bcf	status,0,c
 49066  0094C8  33F6               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 49067  0094CA  33F5               	rrcf	___awdiv@divisor& (0+255),f,b
 49068                           
 49069                           ; BSR set to: 0
 49070  0094CC  2FF7               	decfsz	___awdiv@counter& (0+255),f,b
 49071  0094CE  D7EE               	goto	l36522
 49072  0094D0                     l36534:
 49073                           
 49074                           ; BSR set to: 0
 49075  0094D0  51F8               	movf	___awdiv@sign& (0+255),w,b
 49076  0094D2  E004               	bz	l36538
 49077                           
 49078                           ; BSR set to: 0
 49079  0094D4  6DF9               	negf	___awdiv@quotient& (0+255),b
 49080  0094D6  1FFA               	comf	(___awdiv@quotient+1)& (0+255),f,b
 49081  0094D8  B0D8               	btfsc	status,0,c
 49082  0094DA  2BFA               	incf	(___awdiv@quotient+1)& (0+255),f,b
 49083  0094DC                     l36538:
 49084                           
 49085                           ; BSR set to: 0
 49086  0094DC  C0F9  F0F3         	movff	___awdiv@quotient,?___awdiv
 49087  0094E0  C0FA  F0F4         	movff	___awdiv@quotient+1,?___awdiv+1
 49088                           
 49089                           ; BSR set to: 0
 49090  0094E4  0012               	return	
 49091  0094E6                     __end_of___awdiv:
 49092                           	opt stack 0
 49093                           tblptru	equ	0xFF8
 49094                           tblptrh	equ	0xFF7
 49095                           tblptrl	equ	0xFF6
 49096                           tablat	equ	0xFF5
 49097                           prodh	equ	0xFF4
 49098                           prodl	equ	0xFF3
 49099                           intcon	equ	0xFF2
 49100                           postinc0	equ	0xFEE
 49101                           wreg	equ	0xFE8
 49102                           indf1	equ	0xFE7
 49103                           postinc1	equ	0xFE6
 49104                           postdec1	equ	0xFE5
 49105                           fsr1h	equ	0xFE2
 49106                           fsr1l	equ	0xFE1
 49107                           indf2	equ	0xFDF
 49108                           postinc2	equ	0xFDE
 49109                           postdec2	equ	0xFDD
 49110                           fsr2h	equ	0xFDA
 49111                           fsr2l	equ	0xFD9
 49112                           status	equ	0xFD8
 49113                           
 49114 ;; *************** function ___lbdiv *****************
 49115 ;; Defined at:
 49116 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lbdiv.c"
 49117 ;; Parameters:    Size  Location     Type
 49118 ;;  dividend        1    wreg     unsigned char 
 49119 ;;  divisor         1   29[COMRAM] unsigned char 
 49120 ;; Auto vars:     Size  Location     Type
 49121 ;;  dividend        1   30[COMRAM] unsigned char 
 49122 ;;  quotient        1   32[COMRAM] unsigned char 
 49123 ;;  counter         1   31[COMRAM] unsigned char 
 49124 ;; Return value:  Size  Location     Type
 49125 ;;                  1    wreg      unsigned char 
 49126 ;; Registers used:
 49127 ;;		wreg, status,2, status,0
 49128 ;; Tracked objects:
 49129 ;;		On entry : F/1
 49130 ;;		On exit  : F/1
 49131 ;;		Unchanged: FFFFFFF0/0
 49132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 49133 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49134 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49136 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49137 ;;Total ram usage:        4 bytes
 49138 ;; Hardware stack levels used:    1
 49139 ;; Hardware stack levels required when called:    4
 49140 ;; This function calls:
 49141 ;;		Nothing
 49142 ;; This function is called by:
 49143 ;;		_ReadDataXONLID
 49144 ;; This function uses a non-reentrant model
 49145 ;;
 49146                           
 49147                           	psect	text235
 49148  00A8F6                     __ptext235:
 49149                           	opt stack 0
 49150  00A8F6                     ___lbdiv:
 49151                           	opt stack 22
 49152                           
 49153                           ; BSR set to: 0
 49154                           ;___lbdiv@dividend stored from wreg
 49155  00A8F6  CFE8 F01F          	movff	wreg,___lbdiv@dividend
 49156                           
 49157                           ; BSR set to: 1
 49158  00A8FA  6A21               	clrf	___lbdiv@quotient,c
 49159                           
 49160                           ; BSR set to: 1
 49161  00A8FC  501E               	movf	___lbdiv@divisor,w,c
 49162  00A8FE  E014               	bz	l41594
 49163                           
 49164                           ; BSR set to: 1
 49165  00A900  0E01               	movlw	1
 49166  00A902  6E20               	movwf	___lbdiv@counter,c
 49167  00A904  D003               	goto	l41582
 49168  00A906                     l41578:
 49169                           
 49170                           ; BSR set to: 1
 49171  00A906  90D8               	bcf	status,0,c
 49172  00A908  361E               	rlcf	___lbdiv@divisor,f,c
 49173                           
 49174                           ; BSR set to: 1
 49175  00A90A  2A20               	incf	___lbdiv@counter,f,c
 49176  00A90C                     l41582:
 49177                           
 49178                           ; BSR set to: 1
 49179  00A90C  AE1E               	btfss	___lbdiv@divisor,7,c
 49180  00A90E  D7FB               	goto	l41578
 49181  00A910                     l41584:
 49182                           
 49183                           ; BSR set to: 1
 49184  00A910  90D8               	bcf	status,0,c
 49185  00A912  3621               	rlcf	___lbdiv@quotient,f,c
 49186  00A914  501E               	movf	___lbdiv@divisor,w,c
 49187  00A916  5C1F               	subwf	___lbdiv@dividend,w,c
 49188  00A918  E303               	bnc	l41590
 49189                           
 49190                           ; BSR set to: 1
 49191  00A91A  501E               	movf	___lbdiv@divisor,w,c
 49192  00A91C  5E1F               	subwf	___lbdiv@dividend,f,c
 49193                           
 49194                           ; BSR set to: 1
 49195  00A91E  8021               	bsf	___lbdiv@quotient,0,c
 49196  00A920                     l41590:
 49197                           
 49198                           ; BSR set to: 1
 49199  00A920  90D8               	bcf	status,0,c
 49200  00A922  321E               	rrcf	___lbdiv@divisor,f,c
 49201                           
 49202                           ; BSR set to: 1
 49203  00A924  2E20               	decfsz	___lbdiv@counter,f,c
 49204  00A926  D7F4               	goto	l41584
 49205  00A928                     l41594:
 49206                           
 49207                           ; BSR set to: 1
 49208  00A928  5021               	movf	___lbdiv@quotient,w,c
 49209                           
 49210                           ; BSR set to: 1
 49211  00A92A  0012               	return	
 49212  00A92C                     __end_of___lbdiv:
 49213                           	opt stack 0
 49214                           tblptru	equ	0xFF8
 49215                           tblptrh	equ	0xFF7
 49216                           tblptrl	equ	0xFF6
 49217                           tablat	equ	0xFF5
 49218                           prodh	equ	0xFF4
 49219                           prodl	equ	0xFF3
 49220                           intcon	equ	0xFF2
 49221                           postinc0	equ	0xFEE
 49222                           wreg	equ	0xFE8
 49223                           indf1	equ	0xFE7
 49224                           postinc1	equ	0xFE6
 49225                           postdec1	equ	0xFE5
 49226                           fsr1h	equ	0xFE2
 49227                           fsr1l	equ	0xFE1
 49228                           indf2	equ	0xFDF
 49229                           postinc2	equ	0xFDE
 49230                           postdec2	equ	0xFDD
 49231                           fsr2h	equ	0xFDA
 49232                           fsr2l	equ	0xFD9
 49233                           status	equ	0xFD8
 49234                           
 49235 ;; *************** function ___lmul *****************
 49236 ;; Defined at:
 49237 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lmul.c"
 49238 ;; Parameters:    Size  Location     Type
 49239 ;;  multiplier      4   29[COMRAM] unsigned long 
 49240 ;;  multiplicand    4   33[COMRAM] unsigned long 
 49241 ;; Auto vars:     Size  Location     Type
 49242 ;;  product         4    0[BANK0 ] unsigned long 
 49243 ;; Return value:  Size  Location     Type
 49244 ;;                  4   29[COMRAM] unsigned long 
 49245 ;; Registers used:
 49246 ;;		wreg, status,2, status,0
 49247 ;; Tracked objects:
 49248 ;;		On entry : D/2
 49249 ;;		On exit  : D/0
 49250 ;;		Unchanged: FFFFFFF0/0
 49251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 49252 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49253 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49255 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49256 ;;Total ram usage:       12 bytes
 49257 ;; Hardware stack levels used:    1
 49258 ;; Hardware stack levels required when called:    4
 49259 ;; This function calls:
 49260 ;;		Nothing
 49261 ;; This function is called by:
 49262 ;;		_GetPGD_PCO
 49263 ;;		_ModZgCO
 49264 ;;		_FirstPCW
 49265 ;;		_ModZgCW
 49266 ;;		_ModZgCW4
 49267 ;;		_ModZgCW2
 49268 ;; This function uses a non-reentrant model
 49269 ;;
 49270                           
 49271                           	psect	text236
 49272  00A1A4                     __ptext236:
 49273                           	opt stack 0
 49274  00A1A4                     ___lmul:
 49275                           	opt stack 22
 49276                           
 49277                           ; BSR set to: 1
 49278  00A1A4  0100               	movlb	0	; () banked
 49279  00A1A6  6BF3               	clrf	___lmul@product& (0+255),b
 49280  00A1A8  6BF4               	clrf	(___lmul@product+1)& (0+255),b
 49281  00A1AA  6BF5               	clrf	(___lmul@product+2)& (0+255),b
 49282  00A1AC  6BF6               	clrf	(___lmul@product+3)& (0+255),b
 49283  00A1AE                     l5342:
 49284  00A1AE  A01E               	btfss	___lmul@multiplier,0,c
 49285  00A1B0  D009               	goto	l36572
 49286  00A1B2  5022               	movf	___lmul@multiplicand,w,c
 49287  00A1B4  0100               	movlb	0	; () banked
 49288  00A1B6  27F3               	addwf	___lmul@product& (0+255),f,b
 49289  00A1B8  5023               	movf	___lmul@multiplicand+1,w,c
 49290  00A1BA  23F4               	addwfc	(___lmul@product+1)& (0+255),f,b
 49291  00A1BC  5024               	movf	___lmul@multiplicand+2,w,c
 49292  00A1BE  23F5               	addwfc	(___lmul@product+2)& (0+255),f,b
 49293  00A1C0  5025               	movf	___lmul@multiplicand+3,w,c
 49294  00A1C2  23F6               	addwfc	(___lmul@product+3)& (0+255),f,b
 49295  00A1C4                     l36572:
 49296  00A1C4  90D8               	bcf	status,0,c
 49297  00A1C6  3622               	rlcf	___lmul@multiplicand,f,c
 49298  00A1C8  3623               	rlcf	___lmul@multiplicand+1,f,c
 49299  00A1CA  3624               	rlcf	___lmul@multiplicand+2,f,c
 49300  00A1CC  3625               	rlcf	___lmul@multiplicand+3,f,c
 49301  00A1CE  90D8               	bcf	status,0,c
 49302  00A1D0  3221               	rrcf	___lmul@multiplier+3,f,c
 49303  00A1D2  3220               	rrcf	___lmul@multiplier+2,f,c
 49304  00A1D4  321F               	rrcf	___lmul@multiplier+1,f,c
 49305  00A1D6  321E               	rrcf	___lmul@multiplier,f,c
 49306  00A1D8  5021               	movf	___lmul@multiplier+3,w,c
 49307  00A1DA  101E               	iorwf	___lmul@multiplier,w,c
 49308  00A1DC  101F               	iorwf	___lmul@multiplier+1,w,c
 49309  00A1DE  1020               	iorwf	___lmul@multiplier+2,w,c
 49310  00A1E0  E1E6               	bnz	l5342
 49311  00A1E2  C0F3  F01E         	movff	___lmul@product,?___lmul
 49312  00A1E6  C0F4  F01F         	movff	___lmul@product+1,?___lmul+1
 49313  00A1EA  C0F5  F020         	movff	___lmul@product+2,?___lmul+2
 49314  00A1EE  C0F6  F021         	movff	___lmul@product+3,?___lmul+3
 49315  00A1F2  0012               	return	
 49316  00A1F4                     __end_of___lmul:
 49317                           	opt stack 0
 49318                           tblptru	equ	0xFF8
 49319                           tblptrh	equ	0xFF7
 49320                           tblptrl	equ	0xFF6
 49321                           tablat	equ	0xFF5
 49322                           prodh	equ	0xFF4
 49323                           prodl	equ	0xFF3
 49324                           intcon	equ	0xFF2
 49325                           postinc0	equ	0xFEE
 49326                           wreg	equ	0xFE8
 49327                           indf1	equ	0xFE7
 49328                           postinc1	equ	0xFE6
 49329                           postdec1	equ	0xFE5
 49330                           fsr1h	equ	0xFE2
 49331                           fsr1l	equ	0xFE1
 49332                           indf2	equ	0xFDF
 49333                           postinc2	equ	0xFDE
 49334                           postdec2	equ	0xFDD
 49335                           fsr2h	equ	0xFDA
 49336                           fsr2l	equ	0xFD9
 49337                           status	equ	0xFD8
 49338                           
 49339 ;; *************** function ___lwdiv *****************
 49340 ;; Defined at:
 49341 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lwdiv.c"
 49342 ;; Parameters:    Size  Location     Type
 49343 ;;  dividend        2    0[BANK0 ] unsigned int 
 49344 ;;  divisor         2    2[BANK0 ] unsigned int 
 49345 ;; Auto vars:     Size  Location     Type
 49346 ;;  quotient        2   36[COMRAM] unsigned int 
 49347 ;;  counter         1   35[COMRAM] unsigned char 
 49348 ;; Return value:  Size  Location     Type
 49349 ;;                  2    0[BANK0 ] unsigned int 
 49350 ;; Registers used:
 49351 ;;		wreg, status,2, status,0
 49352 ;; Tracked objects:
 49353 ;;		On entry : F/0
 49354 ;;		On exit  : F/0
 49355 ;;		Unchanged: FFFFFFF0/0
 49356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 49357 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49358 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49360 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49361 ;;Total ram usage:        7 bytes
 49362 ;; Hardware stack levels used:    1
 49363 ;; Hardware stack levels required when called:    4
 49364 ;; This function calls:
 49365 ;;		Nothing
 49366 ;; This function is called by:
 49367 ;;		_WriteOPWM
 49368 ;;		_MocStart
 49369 ;;		_MocMaksCO
 49370 ;;		_MocMaksCW
 49371 ;;		_ModPrzCW4
 49372 ;;		_ProcToPmpPwm
 49373 ;; This function uses a non-reentrant model
 49374 ;;
 49375                           
 49376                           	psect	text237
 49377  00A326                     __ptext237:
 49378                           	opt stack 0
 49379  00A326                     ___lwdiv:
 49380                           	opt stack 23
 49381                           
 49382                           ; BSR set to: 0
 49383  00A326  6A25               	clrf	___lwdiv@quotient,c
 49384  00A328  6A26               	clrf	___lwdiv@quotient+1,c
 49385                           
 49386                           ; BSR set to: 0
 49387  00A32A  51F6               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 49388  00A32C  11F5               	iorwf	___lwdiv@divisor& (0+255),w,b
 49389  00A32E  E01B               	bz	l5378
 49390                           
 49391                           ; BSR set to: 0
 49392  00A330  0E01               	movlw	1
 49393  00A332  6E24               	movwf	___lwdiv@counter,c
 49394  00A334  D004               	goto	l36584
 49395  00A336                     l36582:
 49396                           
 49397                           ; BSR set to: 0
 49398  00A336  90D8               	bcf	status,0,c
 49399  00A338  37F5               	rlcf	___lwdiv@divisor& (0+255),f,b
 49400  00A33A  37F6               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 49401  00A33C  2A24               	incf	___lwdiv@counter,f,c
 49402  00A33E                     l36584:
 49403                           
 49404                           ; BSR set to: 0
 49405  00A33E  AFF6               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 49406  00A340  D7FA               	goto	l36582
 49407  00A342                     l36586:
 49408                           
 49409                           ; BSR set to: 0
 49410  00A342  90D8               	bcf	status,0,c
 49411  00A344  3625               	rlcf	___lwdiv@quotient,f,c
 49412  00A346  3626               	rlcf	___lwdiv@quotient+1,f,c
 49413                           
 49414                           ; BSR set to: 0
 49415  00A348  51F5               	movf	___lwdiv@divisor& (0+255),w,b
 49416  00A34A  5DF3               	subwf	___lwdiv@dividend& (0+255),w,b
 49417  00A34C  51F6               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 49418  00A34E  59F4               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 49419  00A350  E305               	bnc	l36594
 49420                           
 49421                           ; BSR set to: 0
 49422  00A352  51F5               	movf	___lwdiv@divisor& (0+255),w,b
 49423  00A354  5FF3               	subwf	___lwdiv@dividend& (0+255),f,b
 49424  00A356  51F6               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 49425  00A358  5BF4               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 49426                           
 49427                           ; BSR set to: 0
 49428  00A35A  8025               	bsf	___lwdiv@quotient,0,c
 49429  00A35C                     l36594:
 49430                           
 49431                           ; BSR set to: 0
 49432  00A35C  90D8               	bcf	status,0,c
 49433  00A35E  33F6               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 49434  00A360  33F5               	rrcf	___lwdiv@divisor& (0+255),f,b
 49435                           
 49436                           ; BSR set to: 0
 49437  00A362  2E24               	decfsz	___lwdiv@counter,f,c
 49438  00A364  D7EE               	goto	l36586
 49439  00A366                     l5378:
 49440                           
 49441                           ; BSR set to: 0
 49442  00A366  C025  F0F3         	movff	___lwdiv@quotient,?___lwdiv
 49443  00A36A  C026  F0F4         	movff	___lwdiv@quotient+1,?___lwdiv+1
 49444                           
 49445                           ; BSR set to: 0
 49446  00A36E  0012               	return	
 49447  00A370                     __end_of___lwdiv:
 49448                           	opt stack 0
 49449                           tblptru	equ	0xFF8
 49450                           tblptrh	equ	0xFF7
 49451                           tblptrl	equ	0xFF6
 49452                           tablat	equ	0xFF5
 49453                           prodh	equ	0xFF4
 49454                           prodl	equ	0xFF3
 49455                           intcon	equ	0xFF2
 49456                           postinc0	equ	0xFEE
 49457                           wreg	equ	0xFE8
 49458                           indf1	equ	0xFE7
 49459                           postinc1	equ	0xFE6
 49460                           postdec1	equ	0xFE5
 49461                           fsr1h	equ	0xFE2
 49462                           fsr1l	equ	0xFE1
 49463                           indf2	equ	0xFDF
 49464                           postinc2	equ	0xFDE
 49465                           postdec2	equ	0xFDD
 49466                           fsr2h	equ	0xFDA
 49467                           fsr2l	equ	0xFD9
 49468                           status	equ	0xFD8
 49469                           
 49470 ;; *************** function ___lwmod *****************
 49471 ;; Defined at:
 49472 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lwmod.c"
 49473 ;; Parameters:    Size  Location     Type
 49474 ;;  dividend        2   29[COMRAM] unsigned int 
 49475 ;;  divisor         2   31[COMRAM] unsigned int 
 49476 ;; Auto vars:     Size  Location     Type
 49477 ;;  counter         1   33[COMRAM] unsigned char 
 49478 ;; Return value:  Size  Location     Type
 49479 ;;                  2   29[COMRAM] unsigned int 
 49480 ;; Registers used:
 49481 ;;		wreg, status,2, status,0
 49482 ;; Tracked objects:
 49483 ;;		On entry : C/2
 49484 ;;		On exit  : C/2
 49485 ;;		Unchanged: FFFFFFF3/0
 49486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 49487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49490 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49491 ;;Total ram usage:        5 bytes
 49492 ;; Hardware stack levels used:    1
 49493 ;; Hardware stack levels required when called:    4
 49494 ;; This function calls:
 49495 ;;		Nothing
 49496 ;; This function is called by:
 49497 ;;		_ReadDataXONLID
 49498 ;; This function uses a non-reentrant model
 49499 ;;
 49500                           
 49501                           	psect	text238
 49502  00A5DE                     __ptext238:
 49503                           	opt stack 0
 49504  00A5DE                     ___lwmod:
 49505                           	opt stack 22
 49506                           
 49507                           ; BSR set to: 0
 49508  00A5DE  5021               	movf	___lwmod@divisor+1,w,c
 49509  00A5E0  1020               	iorwf	___lwmod@divisor,w,c
 49510  00A5E2  E017               	bz	l5388
 49511  00A5E4  0E01               	movlw	1
 49512  00A5E6  6E22               	movwf	___lwmod@counter,c
 49513  00A5E8  D004               	goto	l41604
 49514  00A5EA                     l41602:
 49515  00A5EA  90D8               	bcf	status,0,c
 49516  00A5EC  3620               	rlcf	___lwmod@divisor,f,c
 49517  00A5EE  3621               	rlcf	___lwmod@divisor+1,f,c
 49518  00A5F0  2A22               	incf	___lwmod@counter,f,c
 49519  00A5F2                     l41604:
 49520  00A5F2  AE21               	btfss	___lwmod@divisor+1,7,c
 49521  00A5F4  D7FA               	goto	l41602
 49522  00A5F6                     l41606:
 49523  00A5F6  5020               	movf	___lwmod@divisor,w,c
 49524  00A5F8  5C1E               	subwf	___lwmod@dividend,w,c
 49525  00A5FA  5021               	movf	___lwmod@divisor+1,w,c
 49526  00A5FC  581F               	subwfb	___lwmod@dividend+1,w,c
 49527  00A5FE  E304               	bnc	l41610
 49528  00A600  5020               	movf	___lwmod@divisor,w,c
 49529  00A602  5E1E               	subwf	___lwmod@dividend,f,c
 49530  00A604  5021               	movf	___lwmod@divisor+1,w,c
 49531  00A606  5A1F               	subwfb	___lwmod@dividend+1,f,c
 49532  00A608                     l41610:
 49533  00A608  90D8               	bcf	status,0,c
 49534  00A60A  3221               	rrcf	___lwmod@divisor+1,f,c
 49535  00A60C  3220               	rrcf	___lwmod@divisor,f,c
 49536  00A60E  2E22               	decfsz	___lwmod@counter,f,c
 49537  00A610  D7F2               	goto	l41606
 49538  00A612                     l5388:
 49539  00A612  C01E  F01E         	movff	___lwmod@dividend,?___lwmod
 49540  00A616  C01F  F01F         	movff	___lwmod@dividend+1,?___lwmod+1
 49541  00A61A  0012               	return	
 49542  00A61C                     __end_of___lwmod:
 49543                           	opt stack 0
 49544                           tblptru	equ	0xFF8
 49545                           tblptrh	equ	0xFF7
 49546                           tblptrl	equ	0xFF6
 49547                           tablat	equ	0xFF5
 49548                           prodh	equ	0xFF4
 49549                           prodl	equ	0xFF3
 49550                           intcon	equ	0xFF2
 49551                           postinc0	equ	0xFEE
 49552                           wreg	equ	0xFE8
 49553                           indf1	equ	0xFE7
 49554                           postinc1	equ	0xFE6
 49555                           postdec1	equ	0xFE5
 49556                           fsr1h	equ	0xFE2
 49557                           fsr1l	equ	0xFE1
 49558                           indf2	equ	0xFDF
 49559                           postinc2	equ	0xFDE
 49560                           postdec2	equ	0xFDD
 49561                           fsr2h	equ	0xFDA
 49562                           fsr2l	equ	0xFD9
 49563                           status	equ	0xFD8
 49564                           
 49565 ;; *************** function ___wmul *****************
 49566 ;; Defined at:
 49567 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v1.12\sources\wmul.c"
 49568 ;; Parameters:    Size  Location     Type
 49569 ;;  multiplier      2   29[COMRAM] unsigned int 
 49570 ;;  multiplicand    2   31[COMRAM] unsigned int 
 49571 ;; Auto vars:     Size  Location     Type
 49572 ;;  product         2   33[COMRAM] unsigned int 
 49573 ;; Return value:  Size  Location     Type
 49574 ;;                  2   29[COMRAM] unsigned int 
 49575 ;; Registers used:
 49576 ;;		wreg, status,2, status,0
 49577 ;; Tracked objects:
 49578 ;;		On entry : D/0
 49579 ;;		On exit  : D/0
 49580 ;;		Unchanged: FFFFFFF2/0
 49581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 49582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49585 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49586 ;;Total ram usage:        6 bytes
 49587 ;; Hardware stack levels used:    1
 49588 ;; Hardware stack levels required when called:    4
 49589 ;; This function calls:
 49590 ;;		Nothing
 49591 ;; This function is called by:
 49592 ;;		_GoldenEye
 49593 ;;		_GetPGD_PCO
 49594 ;;		_PomiarCS
 49595 ;;		_WriteOPWM
 49596 ;;		_MocStart
 49597 ;;		_MocMaksCO
 49598 ;;		_MocMaksCW
 49599 ;;		_ModZgCO
 49600 ;;		_ModDkCO
 49601 ;;		_FirstPCW
 49602 ;;		_ModZgCW
 49603 ;;		_ModDkCW
 49604 ;;		_ModZgCW4
 49605 ;;		_ModDkCW4
 49606 ;;		_ModPrzCW4
 49607 ;;		_ModZgCW2
 49608 ;;		_ModDkCW2
 49609 ;;		_ProcToPmpPwm
 49610 ;;		_RetKrkDelta
 49611 ;; This function uses a non-reentrant model
 49612 ;;
 49613                           
 49614                           	psect	text239
 49615  00AD38                     __ptext239:
 49616                           	opt stack 0
 49617  00AD38                     ___wmul:
 49618                           	opt stack 23
 49619  00AD38  6A22               	clrf	___wmul@product,c
 49620  00AD3A  6A23               	clrf	___wmul@product+1,c
 49621  00AD3C                     l5414:
 49622  00AD3C  A01E               	btfss	___wmul@multiplier,0,c
 49623  00AD3E  D004               	goto	l36618
 49624  00AD40  5020               	movf	___wmul@multiplicand,w,c
 49625  00AD42  2622               	addwf	___wmul@product,f,c
 49626  00AD44  5021               	movf	___wmul@multiplicand+1,w,c
 49627  00AD46  2223               	addwfc	___wmul@product+1,f,c
 49628  00AD48                     l36618:
 49629  00AD48  90D8               	bcf	status,0,c
 49630  00AD4A  3620               	rlcf	___wmul@multiplicand,f,c
 49631  00AD4C  3621               	rlcf	___wmul@multiplicand+1,f,c
 49632  00AD4E  90D8               	bcf	status,0,c
 49633  00AD50  321F               	rrcf	___wmul@multiplier+1,f,c
 49634  00AD52  321E               	rrcf	___wmul@multiplier,f,c
 49635  00AD54  501F               	movf	___wmul@multiplier+1,w,c
 49636  00AD56  101E               	iorwf	___wmul@multiplier,w,c
 49637  00AD58  E1F1               	bnz	l5414
 49638  00AD5A  C022  F01E         	movff	___wmul@product,?___wmul
 49639  00AD5E  C023  F01F         	movff	___wmul@product+1,?___wmul+1
 49640  00AD62  0012               	return	
 49641  00AD64                     __end_of___wmul:
 49642                           	opt stack 0
 49643                           tblptru	equ	0xFF8
 49644                           tblptrh	equ	0xFF7
 49645                           tblptrl	equ	0xFF6
 49646                           tablat	equ	0xFF5
 49647                           prodh	equ	0xFF4
 49648                           prodl	equ	0xFF3
 49649                           intcon	equ	0xFF2
 49650                           postinc0	equ	0xFEE
 49651                           wreg	equ	0xFE8
 49652                           indf1	equ	0xFE7
 49653                           postinc1	equ	0xFE6
 49654                           postdec1	equ	0xFE5
 49655                           fsr1h	equ	0xFE2
 49656                           fsr1l	equ	0xFE1
 49657                           indf2	equ	0xFDF
 49658                           postinc2	equ	0xFDE
 49659                           postdec2	equ	0xFDD
 49660                           fsr2h	equ	0xFDA
 49661                           fsr2l	equ	0xFD9
 49662                           status	equ	0xFD8
 49663                           
 49664 ;; *************** function _ISR *****************
 49665 ;; Defined at:
 49666 ;;		line 10 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\isr.c"
 49667 ;; Parameters:    Size  Location     Type
 49668 ;;		None
 49669 ;; Auto vars:     Size  Location     Type
 49670 ;;		None
 49671 ;; Return value:  Size  Location     Type
 49672 ;;		None               void
 49673 ;; Registers used:
 49674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49675 ;; Tracked objects:
 49676 ;;		On entry : 0/0
 49677 ;;		On exit  : 0/0
 49678 ;;		Unchanged: 0/0
 49679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 49680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49682 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49683 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49684 ;;Total ram usage:       10 bytes
 49685 ;; Hardware stack levels used:    1
 49686 ;; Hardware stack levels required when called:    3
 49687 ;; This function calls:
 49688 ;;		_IntUSARTRC
 49689 ;;		_IntUSARTTR
 49690 ;;		_ReloadTimer1
 49691 ;;		_IncRTimer
 49692 ;;		_IncPmrTimer
 49693 ;;		_IncKeyTimer
 49694 ;;		_RefreshWSW
 49695 ;;		_StabPort
 49696 ;;		_FormatDataIMY
 49697 ;;		_IntPWM
 49698 ;;		_IntPWM2
 49699 ;;		_I2CSlaveTR
 49700 ;; This function is called by:
 49701 ;;		Interrupt level 2
 49702 ;; This function uses a non-reentrant model
 49703 ;;
 49704                           
 49705                           	psect	intcode
 49706  000008                     __pintcode:
 49707                           	opt stack 0
 49708  000008                     _ISR:
 49709                           	opt stack 20
 49710  000008  CFE1 F014          	movff	fsr1l,??_ISR
 49711  00000C  CFE2 F015          	movff	fsr1h,??_ISR+1
 49712  000010  CFD9 F016          	movff	fsr2l,??_ISR+2
 49713  000014  CFDA F017          	movff	fsr2h,??_ISR+3
 49714  000018  CFF3 F018          	movff	prodl,??_ISR+4
 49715  00001C  CFF4 F019          	movff	prodh,??_ISR+5
 49716  000020  CFF6 F01A          	movff	tblptrl,??_ISR+6
 49717  000024  CFF7 F01B          	movff	tblptrh,??_ISR+7
 49718  000028  CFF8 F01C          	movff	tblptru,??_ISR+8
 49719  00002C  CFF5 F01D          	movff	tablat,??_ISR+9
 49720  000030                     
 49721                           ;isr.c: 11: if((RCIF)&&(RCIE))
 49722  000030  AA9E               	btfss	3998,5,c	;volatile
 49723  000032  D001               	goto	i2u4784_41
 49724  000034  D001               	goto	i2u4784_40
 49725  000036                     i2u4784_41:
 49726  000036  D006               	goto	i2l27498
 49727  000038                     i2u4784_40:
 49728  000038  AA9D               	btfss	3997,5,c	;volatile
 49729  00003A  D001               	goto	i2u4785_41
 49730  00003C  D001               	goto	i2u4785_40
 49731  00003E                     i2u4785_41:
 49732  00003E  D002               	goto	i2l27498
 49733  000040                     i2u4785_40:
 49734  000040                     
 49735                           ;isr.c: 12: {
 49736                           ;isr.c: 13: IntUSARTRC();
 49737  000040  ECBD  F049         	call	_IntUSARTRC	;wreg free
 49738  000044                     i2l27498:
 49739                           
 49740                           ;isr.c: 14: }
 49741                           ;isr.c: 15: if((TXIF)&&(TXIE))
 49742  000044  A89E               	btfss	3998,4,c	;volatile
 49743  000046  D001               	goto	i2u4786_41
 49744  000048  D001               	goto	i2u4786_40
 49745  00004A                     i2u4786_41:
 49746  00004A  D006               	goto	i2l27504
 49747  00004C                     i2u4786_40:
 49748  00004C  A89D               	btfss	3997,4,c	;volatile
 49749  00004E  D001               	goto	i2u4787_41
 49750  000050  D001               	goto	i2u4787_40
 49751  000052                     i2u4787_41:
 49752  000052  D002               	goto	i2l27504
 49753  000054                     i2u4787_40:
 49754  000054                     
 49755                           ;isr.c: 16: {
 49756                           ;isr.c: 17: IntUSARTTR();
 49757  000054  ECB8  F051         	call	_IntUSARTTR	;wreg free
 49758  000058                     i2l27504:
 49759                           
 49760                           ;isr.c: 18: }
 49761                           ;isr.c: 19: if((TMR1IF)&&(TMR1IE))
 49762  000058  A09E               	btfss	3998,0,c	;volatile
 49763  00005A  D001               	goto	i2u4788_41
 49764  00005C  D001               	goto	i2u4788_40
 49765  00005E                     i2u4788_41:
 49766  00005E  D013               	goto	i2l27524
 49767  000060                     i2u4788_40:
 49768  000060  A09D               	btfss	3997,0,c	;volatile
 49769  000062  D001               	goto	i2u4789_41
 49770  000064  D001               	goto	i2u4789_40
 49771  000066                     i2u4789_41:
 49772  000066  D00F               	goto	i2l27524
 49773  000068                     i2u4789_40:
 49774  000068                     
 49775                           ;isr.c: 20: {
 49776                           ;isr.c: 21: TMR1IF=0;
 49777  000068  909E               	bcf	3998,0,c	;volatile
 49778  00006A                     
 49779                           ;isr.c: 22: ReloadTimer1();
 49780  00006A  EC0C  F05B         	call	_ReloadTimer1	;wreg free
 49781  00006E                     
 49782                           ;isr.c: 23: IncRTimer();
 49783  00006E  EC16  F03D         	call	_IncRTimer	;wreg free
 49784  000072                     
 49785                           ; BSR set to: 1
 49786                           ;isr.c: 24: IncPmrTimer();
 49787  000072  EC12  F059         	call	_IncPmrTimer	;wreg free
 49788  000076                     
 49789                           ; BSR set to: 1
 49790                           ;isr.c: 25: IncKeyTimer();
 49791  000076  EC41  F045         	call	_IncKeyTimer	;wreg free
 49792  00007A                     
 49793                           ; BSR set to: 2
 49794                           ;isr.c: 27: RefreshWSW();
 49795  00007A  EC65  F05A         	call	_RefreshWSW	;wreg free
 49796  00007E                     
 49797                           ; BSR set to: 1
 49798                           ;isr.c: 30: StabPort();
 49799  00007E  EC8F  F041         	call	_StabPort	;wreg free
 49800  000082                     
 49801                           ;isr.c: 31: FormatDataIMY();
 49802  000082  EC58  F008         	call	_FormatDataIMY	;wreg free
 49803  000086                     i2l27524:
 49804                           
 49805                           ;isr.c: 32: }
 49806                           ;isr.c: 33: if((TMR0IF)&&(TMR0IE))
 49807  000086  A4F2               	btfss	intcon,2,c	;volatile
 49808  000088  D001               	goto	i2u4790_41
 49809  00008A  D001               	goto	i2u4790_40
 49810  00008C                     i2u4790_41:
 49811  00008C  D005               	goto	i2l336
 49812  00008E                     i2u4790_40:
 49813  00008E  AAF2               	btfss	intcon,5,c	;volatile
 49814  000090  D001               	goto	i2u4791_41
 49815  000092  D001               	goto	i2u4791_40
 49816  000094                     i2u4791_41:
 49817  000094  D001               	goto	i2l336
 49818  000096                     i2u4791_40:
 49819  000096                     
 49820                           ;isr.c: 34: {
 49821                           ;isr.c: 35: TMR0IF=0;
 49822  000096  94F2               	bcf	intcon,2,c	;volatile
 49823  000098                     i2l336:
 49824                           
 49825                           ;isr.c: 36: }
 49826                           ;isr.c: 37: if((TMR2IF)&&(TMR2IE))
 49827  000098  A29E               	btfss	3998,1,c	;volatile
 49828  00009A  D001               	goto	i2u4792_41
 49829  00009C  D001               	goto	i2u4792_40
 49830  00009E                     i2u4792_41:
 49831  00009E  D009               	goto	i2l27536
 49832  0000A0                     i2u4792_40:
 49833  0000A0  A29D               	btfss	3997,1,c	;volatile
 49834  0000A2  D001               	goto	i2u4793_41
 49835  0000A4  D001               	goto	i2u4793_40
 49836  0000A6                     i2u4793_41:
 49837  0000A6  D005               	goto	i2l27536
 49838  0000A8                     i2u4793_40:
 49839  0000A8                     
 49840                           ;isr.c: 38: {
 49841                           ;isr.c: 39: TMR2IF=0;
 49842  0000A8  929E               	bcf	3998,1,c	;volatile
 49843  0000AA                     
 49844                           ;isr.c: 40: IntPWM();
 49845  0000AA  EC01  F052         	call	_IntPWM	;wreg free
 49846                           
 49847                           ;isr.c: 41: IntPWM2();
 49848  0000AE  ECE8  F057         	call	_IntPWM2	;wreg free
 49849  0000B2                     i2l27536:
 49850                           
 49851                           ;isr.c: 42: }
 49852                           ;isr.c: 43: if((SSPIF)&&(SSPIE))
 49853  0000B2  A69E               	btfss	3998,3,c	;volatile
 49854  0000B4  D001               	goto	i2u4794_41
 49855  0000B6  D001               	goto	i2u4794_40
 49856  0000B8                     i2u4794_41:
 49857  0000B8  D007               	goto	i2l339
 49858  0000BA                     i2u4794_40:
 49859  0000BA  A69D               	btfss	3997,3,c	;volatile
 49860  0000BC  D001               	goto	i2u4795_41
 49861  0000BE  D001               	goto	i2u4795_40
 49862  0000C0                     i2u4795_41:
 49863  0000C0  D003               	goto	i2l339
 49864  0000C2                     i2u4795_40:
 49865  0000C2                     
 49866                           ;isr.c: 44: {
 49867                           ;isr.c: 45: SSPIF=0;
 49868  0000C2  969E               	bcf	3998,3,c	;volatile
 49869  0000C4                     
 49870                           ;isr.c: 46: I2CSlaveTR();
 49871  0000C4  ECD7  F04F         	call	_I2CSlaveTR	;wreg free
 49872  0000C8                     i2l339:
 49873  0000C8  C01D  FFF5         	movff	??_ISR+9,tablat
 49874  0000CC  C01C  FFF8         	movff	??_ISR+8,tblptru
 49875  0000D0  C01B  FFF7         	movff	??_ISR+7,tblptrh
 49876  0000D4  C01A  FFF6         	movff	??_ISR+6,tblptrl
 49877  0000D8  C019  FFF4         	movff	??_ISR+5,prodh
 49878  0000DC  C018  FFF3         	movff	??_ISR+4,prodl
 49879  0000E0  C017  FFDA         	movff	??_ISR+3,fsr2h
 49880  0000E4  C016  FFD9         	movff	??_ISR+2,fsr2l
 49881  0000E8  C015  FFE2         	movff	??_ISR+1,fsr1h
 49882  0000EC  C014  FFE1         	movff	??_ISR,fsr1l
 49883  0000F0  0011               	retfie		f
 49884  0000F2                     __end_of_ISR:
 49885                           	opt stack 0
 49886                           tblptru	equ	0xFF8
 49887                           tblptrh	equ	0xFF7
 49888                           tblptrl	equ	0xFF6
 49889                           tablat	equ	0xFF5
 49890                           prodh	equ	0xFF4
 49891                           prodl	equ	0xFF3
 49892                           intcon	equ	0xFF2
 49893                           postinc0	equ	0xFEE
 49894                           wreg	equ	0xFE8
 49895                           indf1	equ	0xFE7
 49896                           postinc1	equ	0xFE6
 49897                           postdec1	equ	0xFE5
 49898                           fsr1h	equ	0xFE2
 49899                           fsr1l	equ	0xFE1
 49900                           indf2	equ	0xFDF
 49901                           postinc2	equ	0xFDE
 49902                           postdec2	equ	0xFDD
 49903                           fsr2h	equ	0xFDA
 49904                           fsr2l	equ	0xFD9
 49905                           status	equ	0xFD8
 49906                           
 49907 ;; *************** function _I2CSlaveTR *****************
 49908 ;; Defined at:
 49909 ;;		line 75 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
 49910 ;; Parameters:    Size  Location     Type
 49911 ;;		None
 49912 ;; Auto vars:     Size  Location     Type
 49913 ;;  dt              1    0        unsigned char 
 49914 ;; Return value:  Size  Location     Type
 49915 ;;		None               void
 49916 ;; Registers used:
 49917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 49918 ;; Tracked objects:
 49919 ;;		On entry : 0/0
 49920 ;;		On exit  : F/2
 49921 ;;		Unchanged: 0/0
 49922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 49923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49927 ;;Total ram usage:        0 bytes
 49928 ;; Hardware stack levels used:    1
 49929 ;; Hardware stack levels required when called:    2
 49930 ;; This function calls:
 49931 ;;		_SetTData
 49932 ;;		_LiczCHK
 49933 ;;		_SetRData
 49934 ;;		_ReceptDataI2C
 49935 ;;		_TransmitDataI2C
 49936 ;; This function is called by:
 49937 ;;		_ISR
 49938 ;; This function uses a non-reentrant model
 49939 ;;
 49940                           
 49941                           	psect	text241
 49942  009FAE                     __ptext241:
 49943                           	opt stack 0
 49944  009FAE                     _I2CSlaveTR:
 49945                           	opt stack 20
 49946                           
 49947                           ;i2c_s.c: 76: unsigned char dt;
 49948                           ;i2c_s.c: 78: if(WCOL)
 49949  009FAE  AEC6               	btfss	4038,7,c	;volatile
 49950  009FB0  D003               	goto	i2l169
 49951                           
 49952                           ;i2c_s.c: 79: {
 49953                           ;i2c_s.c: 80: WCOL=0;
 49954  009FB2  9EC6               	bcf	4038,7,c	;volatile
 49955                           
 49956                           ;i2c_s.c: 81: DtI2C.error=7;
 49957  009FB4  0E07               	movlw	7
 49958  009FB6  D004               	goto	L95
 49959  009FB8                     i2l169:
 49960                           
 49961                           ;i2c_s.c: 84: else
 49962                           ;i2c_s.c: 85: if(SSPOV)
 49963  009FB8  ACC6               	btfss	4038,6,c	;volatile
 49964  009FBA  D005               	goto	i2l171
 49965                           
 49966                           ;i2c_s.c: 86: {
 49967                           ;i2c_s.c: 87: SSPOV=0;
 49968  009FBC  9CC6               	bcf	4038,6,c	;volatile
 49969                           
 49970                           ;i2c_s.c: 88: DtI2C.error=8;
 49971  009FBE  0E08               	movlw	8
 49972  009FC0                     L95:
 49973  009FC0  0101               	movlb	1	; () banked
 49974  009FC2  6FDE               	movwf	(_DtI2C+1)& (0+255),b
 49975                           
 49976                           ;i2c_s.c: 89: }
 49977  009FC4  D01C               	goto	i2l170
 49978  009FC6                     i2l171:
 49979                           
 49980                           ;i2c_s.c: 90: else
 49981                           ;i2c_s.c: 91: {
 49982                           ;i2c_s.c: 92: if(!DA)
 49983  009FC6  BAC7               	btfsc	4039,5,c	;volatile
 49984  009FC8  D013               	goto	i2l173
 49985                           
 49986                           ;i2c_s.c: 93: {
 49987                           ;i2c_s.c: 95: if(RW)
 49988  009FCA  A4C7               	btfss	4039,2,c	;volatile
 49989  009FCC  D00B               	goto	i2l174
 49990                           
 49991                           ;i2c_s.c: 96: {
 49992                           ;i2c_s.c: 98: DtI2C.krok=1;
 49993  009FCE  0101               	movlb	1	; () banked
 49994  009FD0  81DD               	bsf	_DtI2C& (0+255),0,b
 49995                           
 49996                           ; BSR set to: 1
 49997                           ;i2c_s.c: 99: SetTData();
 49998  009FD2  EC75  F048         	call	_SetTData	;wreg free
 49999                           
 50000                           ;i2c_s.c: 100: BufI2C.Bf[22-1]=LiczCHK(22);
 50001  009FD6  0E16               	movlw	22
 50002  009FD8  ECC0  F04E         	call	_LiczCHK
 50003  009FDC  6FED               	movwf	(_BufI2C+22)& (0+255),b
 50004                           
 50005                           ; BSR set to: 2
 50006                           ;i2c_s.c: 101: BufI2C.indeks=0;
 50007  009FDE  6BD7               	clrf	_BufI2C& (0+255),b
 50008                           
 50009                           ; BSR set to: 2
 50010                           ;i2c_s.c: 102: dt=SSPBUF;
 50011  009FE0  50C9               	movf	4041,w,c	;volatile
 50012                           
 50013                           ;i2c_s.c: 103: }
 50014  009FE2  D006               	goto	i2l173
 50015  009FE4                     i2l174:
 50016                           
 50017                           ;i2c_s.c: 104: else
 50018                           ;i2c_s.c: 105: {
 50019                           ;i2c_s.c: 107: DtI2C.krok=0;
 50020  009FE4  0101               	movlb	1	; () banked
 50021  009FE6  91DD               	bcf	_DtI2C& (0+255),0,b
 50022                           
 50023                           ; BSR set to: 1
 50024                           ;i2c_s.c: 108: SetRData();
 50025  009FE8  EC2C  F05B         	call	_SetRData	;wreg free
 50026                           
 50027                           ; BSR set to: 2
 50028                           ;i2c_s.c: 109: dt=SSPBUF;
 50029  009FEC  50C9               	movf	4041,w,c	;volatile
 50030  009FEE  0012               	return	
 50031  009FF0                     i2l173:
 50032                           
 50033                           ;i2c_s.c: 111: }
 50034                           ;i2c_s.c: 112: }
 50035                           ;i2c_s.c: 115: if(DtI2C.krok==0)
 50036  009FF0  0101               	movlb	1	; () banked
 50037  009FF2  A1DD               	btfss	_DtI2C& (0+255),0,b
 50038                           
 50039                           ; BSR set to: 1
 50040                           ;i2c_s.c: 116: {
 50041                           ;i2c_s.c: 117: ReceptDataI2C();
 50042  009FF4  EFB2  F055         	goto	_ReceptDataI2C	;wreg free
 50043                           
 50044                           ; BSR set to: 1
 50045                           ;i2c_s.c: 119: }
 50046                           ;i2c_s.c: 121: if(DtI2C.krok==1)
 50047  009FF8  B1DD               	btfsc	_DtI2C& (0+255),0,b
 50048                           
 50049                           ; BSR set to: 1
 50050                           ;i2c_s.c: 122: {
 50051                           ;i2c_s.c: 123: TransmitDataI2C();
 50052  009FFA  EF96  F054         	goto	_TransmitDataI2C	;wreg free
 50053  009FFE                     i2l170:
 50054                           
 50055                           ; BSR set to: 1
 50056                           ;i2c_s.c: 125: }
 50057                           ;i2c_s.c: 126: }
 50058                           ;i2c_s.c: 128: CKP=1;
 50059  009FFE  88C6               	bsf	4038,4,c	;volatile
 50060                           
 50061                           ;i2c_s.c: 129: DtI2C.krok=0;
 50062  00A000  91DD               	bcf	_DtI2C& (0+255),0,b
 50063                           
 50064                           ;i2c_s.c: 130: BufI2C.indeks=0;
 50065  00A002  0102               	movlb	2	; () banked
 50066  00A004  6BD7               	clrf	_BufI2C& (0+255),b
 50067                           
 50068                           ; BSR set to: 2
 50069  00A006  0012               	return	
 50070  00A008                     __end_of_I2CSlaveTR:
 50071                           	opt stack 0
 50072                           tblptru	equ	0xFF8
 50073                           tblptrh	equ	0xFF7
 50074                           tblptrl	equ	0xFF6
 50075                           tablat	equ	0xFF5
 50076                           prodh	equ	0xFF4
 50077                           prodl	equ	0xFF3
 50078                           intcon	equ	0xFF2
 50079                           postinc0	equ	0xFEE
 50080                           wreg	equ	0xFE8
 50081                           indf1	equ	0xFE7
 50082                           postinc1	equ	0xFE6
 50083                           postdec1	equ	0xFE5
 50084                           fsr1h	equ	0xFE2
 50085                           fsr1l	equ	0xFE1
 50086                           indf2	equ	0xFDF
 50087                           postinc2	equ	0xFDE
 50088                           postdec2	equ	0xFDD
 50089                           fsr2h	equ	0xFDA
 50090                           fsr2l	equ	0xFD9
 50091                           status	equ	0xFD8
 50092                           
 50093 ;; *************** function _SetTData *****************
 50094 ;; Defined at:
 50095 ;;		line 182 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
 50096 ;; Parameters:    Size  Location     Type
 50097 ;;		None
 50098 ;; Auto vars:     Size  Location     Type
 50099 ;;		None
 50100 ;; Return value:  Size  Location     Type
 50101 ;;		None               void
 50102 ;; Registers used:
 50103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 50104 ;; Tracked objects:
 50105 ;;		On entry : F/1
 50106 ;;		On exit  : F/2
 50107 ;;		Unchanged: 0/0
 50108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50113 ;;Total ram usage:        0 bytes
 50114 ;; Hardware stack levels used:    1
 50115 ;; Hardware stack levels required when called:    1
 50116 ;; This function calls:
 50117 ;;		i2_RdPrt
 50118 ;; This function is called by:
 50119 ;;		_I2CSlaveTR
 50120 ;; This function uses a non-reentrant model
 50121 ;;
 50122                           
 50123                           	psect	text242
 50124  0090EA                     __ptext242:
 50125                           	opt stack 0
 50126  0090EA                     _SetTData:
 50127                           	opt stack 20
 50128                           
 50129                           ; BSR set to: 1
 50130                           ;i2c_s.c: 186: BufI2C.Bf[0]=DtI2C.kod;
 50131                           
 50132                           ; BSR set to: 2
 50133  0090EA  C1DF  F2D8         	movff	_DtI2C+2,_BufI2C+1
 50134                           
 50135                           ; BSR set to: 1
 50136                           ;i2c_s.c: 187: BufI2C.Bf[1]=RdPrt(22);
 50137  0090EE  0E16               	movlw	22
 50138  0090F0  ECF4  F058         	call	i2_RdPrt
 50139  0090F4  0E01               	movlw	1
 50140  0090F6  A0D8               	btfss	status,0,c
 50141  0090F8  0E00               	movlw	0
 50142  0090FA  0102               	movlb	2	; () banked
 50143  0090FC  6FD9               	movwf	(_BufI2C+2)& (0+255),b
 50144                           
 50145                           ;i2c_s.c: 188: BufI2C.Bf[2]=RdPrt(23);
 50146  0090FE  0E17               	movlw	23
 50147  009100  ECF4  F058         	call	i2_RdPrt
 50148  009104  0E01               	movlw	1
 50149  009106  A0D8               	btfss	status,0,c
 50150  009108  0E00               	movlw	0
 50151  00910A  0102               	movlb	2	; () banked
 50152  00910C  6FDA               	movwf	(_BufI2C+3)& (0+255),b
 50153                           
 50154                           ;i2c_s.c: 189: BufI2C.Bf[3]=RdPrt(24);
 50155  00910E  0E18               	movlw	24
 50156  009110  ECF4  F058         	call	i2_RdPrt
 50157  009114  0E01               	movlw	1
 50158  009116  A0D8               	btfss	status,0,c
 50159  009118  0E00               	movlw	0
 50160  00911A  0102               	movlb	2	; () banked
 50161  00911C  6FDB               	movwf	(_BufI2C+4)& (0+255),b
 50162                           
 50163                           ;i2c_s.c: 190: BufI2C.Bf[4]=RdPrt(25);
 50164  00911E  0E19               	movlw	25
 50165  009120  ECF4  F058         	call	i2_RdPrt
 50166  009124  0E01               	movlw	1
 50167  009126  A0D8               	btfss	status,0,c
 50168  009128  0E00               	movlw	0
 50169  00912A  0102               	movlb	2	; () banked
 50170  00912C  6FDC               	movwf	(_BufI2C+5)& (0+255),b
 50171                           
 50172                           ; BSR set to: 2
 50173                           ;i2c_s.c: 191: BufI2C.Bf[5]=DtI2C.CS;
 50174  00912E  C1E4  F2DD         	movff	_DtI2C+7,_BufI2C+6
 50175                           
 50176                           ; BSR set to: 2
 50177                           ;i2c_s.c: 192: BufI2C.Bf[6]=DtI2C.STR_PWM;
 50178  009132  C1E5  F2DE         	movff	_DtI2C+8,_BufI2C+7
 50179                           
 50180                           ; BSR set to: 2
 50181                           ;i2c_s.c: 193: BufI2C.Bf[7]=DtI2C.MAX_PWM;
 50182  009136  C1E6  F2DF         	movff	_DtI2C+9,_BufI2C+8
 50183                           
 50184                           ; BSR set to: 2
 50185                           ;i2c_s.c: 194: BufI2C.Bf[8]=DtI2C.BUF_PWM;
 50186  00913A  C1E7  F2E0         	movff	_DtI2C+10,_BufI2C+9
 50187                           
 50188                           ; BSR set to: 2
 50189                           ;i2c_s.c: 195: BufI2C.Bf[9]=DtI2C.ST_AD1;
 50190  00913E  C1E8  F2E1         	movff	_DtI2C+11,_BufI2C+10
 50191                           
 50192                           ; BSR set to: 2
 50193                           ;i2c_s.c: 196: BufI2C.Bf[10]=DtI2C.ST_AD2;
 50194  009142  C1E9  F2E2         	movff	_DtI2C+12,_BufI2C+11
 50195                           
 50196                           ; BSR set to: 2
 50197                           ;i2c_s.c: 197: BufI2C.Bf[11]=DtI2C.ST_AD3;
 50198  009146  C1EA  F2E3         	movff	_DtI2C+13,_BufI2C+12
 50199                           
 50200                           ; BSR set to: 2
 50201                           ;i2c_s.c: 198: BufI2C.Bf[12]=DtI2C.PORTC;
 50202  00914A  C1EB  F2E4         	movff	_DtI2C+14,_BufI2C+13
 50203                           
 50204                           ; BSR set to: 2
 50205                           ;i2c_s.c: 199: BufI2C.Bf[13]=DtI2C.PORTD;
 50206  00914E  C1EC  F2E5         	movff	_DtI2C+15,_BufI2C+14
 50207                           
 50208                           ; BSR set to: 2
 50209                           ;i2c_s.c: 200: BufI2C.Bf[14]=DtI2C.ST_GLOBAL0;
 50210  009152  C1ED  F2E6         	movff	_DtI2C+16,_BufI2C+15
 50211                           
 50212                           ; BSR set to: 2
 50213                           ;i2c_s.c: 201: BufI2C.Bf[15]=DtI2C.ST_GLOBAL2;
 50214  009156  C1EE  F2E7         	movff	_DtI2C+17,_BufI2C+16
 50215                           
 50216                           ; BSR set to: 2
 50217                           ;i2c_s.c: 202: BufI2C.Bf[16]=DtI2C.ST_GLOBAL3;
 50218  00915A  C1EF  F2E8         	movff	_DtI2C+18,_BufI2C+17
 50219                           
 50220                           ; BSR set to: 2
 50221                           ;i2c_s.c: 203: BufI2C.Bf[17]=DtI2C.ST_GLOBAL4;
 50222  00915E  C1F0  F2E9         	movff	_DtI2C+19,_BufI2C+18
 50223                           
 50224                           ; BSR set to: 2
 50225                           ;i2c_s.c: 204: BufI2C.Bf[18]=DtI2C.TPRZ_CW;
 50226  009162  C1F1  F2EA         	movff	_DtI2C+20,_BufI2C+19
 50227                           
 50228                           ; BSR set to: 2
 50229                           ;i2c_s.c: 205: BufI2C.Bf[19]=DtI2C.ST0_WSW;
 50230  009166  C1F2  F2EB         	movff	_DtI2C+21,_BufI2C+20
 50231                           
 50232                           ; BSR set to: 2
 50233                           ;i2c_s.c: 206: BufI2C.Bf[20]=DtI2C.ERR_BTY;
 50234  00916A  C1F3  F2EC         	movff	_DtI2C+22,_BufI2C+21
 50235                           
 50236                           ; BSR set to: 2
 50237  00916E  0012               	return	
 50238  009170                     __end_of_SetTData:
 50239                           	opt stack 0
 50240                           tblptru	equ	0xFF8
 50241                           tblptrh	equ	0xFF7
 50242                           tblptrl	equ	0xFF6
 50243                           tablat	equ	0xFF5
 50244                           prodh	equ	0xFF4
 50245                           prodl	equ	0xFF3
 50246                           intcon	equ	0xFF2
 50247                           postinc0	equ	0xFEE
 50248                           wreg	equ	0xFE8
 50249                           indf1	equ	0xFE7
 50250                           postinc1	equ	0xFE6
 50251                           postdec1	equ	0xFE5
 50252                           fsr1h	equ	0xFE2
 50253                           fsr1l	equ	0xFE1
 50254                           indf2	equ	0xFDF
 50255                           postinc2	equ	0xFDE
 50256                           postdec2	equ	0xFDD
 50257                           fsr2h	equ	0xFDA
 50258                           fsr2l	equ	0xFD9
 50259                           status	equ	0xFD8
 50260                           
 50261 ;; *************** function _SetRData *****************
 50262 ;; Defined at:
 50263 ;;		line 211 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
 50264 ;; Parameters:    Size  Location     Type
 50265 ;;		None
 50266 ;; Auto vars:     Size  Location     Type
 50267 ;;		None
 50268 ;; Return value:  Size  Location     Type
 50269 ;;		None               void
 50270 ;; Registers used:
 50271 ;;		None
 50272 ;; Tracked objects:
 50273 ;;		On entry : F/1
 50274 ;;		On exit  : F/2
 50275 ;;		Unchanged: FFFFFFF0/0
 50276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50281 ;;Total ram usage:        0 bytes
 50282 ;; Hardware stack levels used:    1
 50283 ;; This function calls:
 50284 ;;		Nothing
 50285 ;; This function is called by:
 50286 ;;		_I2CSlaveTR
 50287 ;; This function uses a non-reentrant model
 50288 ;;
 50289                           
 50290                           	psect	text243
 50291  00B658                     __ptext243:
 50292                           	opt stack 0
 50293  00B658                     _SetRData:
 50294                           	opt stack 21
 50295                           
 50296                           ; BSR set to: 1
 50297                           ;i2c_s.c: 212: BufI2C.indeks=0;
 50298                           
 50299                           ; BSR set to: 2
 50300  00B658  0102               	movlb	2	; () banked
 50301  00B65A  6BD7               	clrf	_BufI2C& (0+255),b
 50302                           
 50303                           ; BSR set to: 2
 50304  00B65C  0012               	return	
 50305  00B65E                     __end_of_SetRData:
 50306                           	opt stack 0
 50307                           tblptru	equ	0xFF8
 50308                           tblptrh	equ	0xFF7
 50309                           tblptrl	equ	0xFF6
 50310                           tablat	equ	0xFF5
 50311                           prodh	equ	0xFF4
 50312                           prodl	equ	0xFF3
 50313                           intcon	equ	0xFF2
 50314                           postinc0	equ	0xFEE
 50315                           wreg	equ	0xFE8
 50316                           indf1	equ	0xFE7
 50317                           postinc1	equ	0xFE6
 50318                           postdec1	equ	0xFE5
 50319                           fsr1h	equ	0xFE2
 50320                           fsr1l	equ	0xFE1
 50321                           indf2	equ	0xFDF
 50322                           postinc2	equ	0xFDE
 50323                           postdec2	equ	0xFDD
 50324                           fsr2h	equ	0xFDA
 50325                           fsr2l	equ	0xFD9
 50326                           status	equ	0xFD8
 50327                           
 50328 ;; *************** function _ReceptDataI2C *****************
 50329 ;; Defined at:
 50330 ;;		line 163 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
 50331 ;; Parameters:    Size  Location     Type
 50332 ;;		None
 50333 ;; Auto vars:     Size  Location     Type
 50334 ;;		None
 50335 ;; Return value:  Size  Location     Type
 50336 ;;		None               void
 50337 ;; Registers used:
 50338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 50339 ;; Tracked objects:
 50340 ;;		On entry : F/1
 50341 ;;		On exit  : F/2
 50342 ;;		Unchanged: FFFFFFF0/0
 50343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50348 ;;Total ram usage:        0 bytes
 50349 ;; Hardware stack levels used:    1
 50350 ;; Hardware stack levels required when called:    1
 50351 ;; This function calls:
 50352 ;;		_LiczCHK
 50353 ;;		_ToWork
 50354 ;; This function is called by:
 50355 ;;		_I2CSlaveTR
 50356 ;; This function uses a non-reentrant model
 50357 ;;
 50358                           
 50359                           	psect	text244
 50360  00AB64                     __ptext244:
 50361                           	opt stack 0
 50362  00AB64                     _ReceptDataI2C:
 50363                           	opt stack 20
 50364                           
 50365                           ; BSR set to: 1
 50366                           ;i2c_s.c: 164: if(BufI2C.indeks<3)
 50367                           
 50368                           ; BSR set to: 2
 50369  00AB64  0E03               	movlw	3
 50370  00AB66  0102               	movlb	2	; () banked
 50371  00AB68  61D7               	cpfslt	_BufI2C& (0+255),b
 50372  00AB6A  0C03               	retlw	3
 50373                           
 50374                           ; BSR set to: 2
 50375                           ;i2c_s.c: 165: {
 50376                           ;i2c_s.c: 166: BufI2C.Bf[BufI2C.indeks]=SSPBUF;
 50377  00AB6C  0ED8               	movlw	low (_BufI2C+1)
 50378  00AB6E  25D7               	addwf	_BufI2C& (0+255),w,b
 50379  00AB70  6ED9               	movwf	fsr2l,c
 50380  00AB72  6ADA               	clrf	fsr2h,c
 50381  00AB74  0E02               	movlw	high (_BufI2C+1)
 50382  00AB76  22DA               	addwfc	fsr2h,f,c
 50383  00AB78  CFC9 FFDF          	movff	4041,indf2	;volatile
 50384                           
 50385                           ; BSR set to: 2
 50386                           ;i2c_s.c: 167: BufI2C.indeks++;
 50387  00AB7C  2BD7               	incf	_BufI2C& (0+255),f,b
 50388                           
 50389                           ; BSR set to: 2
 50390                           ;i2c_s.c: 168: if(BufI2C.indeks==3-1)
 50391  00AB7E  51D7               	movf	_BufI2C& (0+255),w,b
 50392  00AB80  0A02               	xorlw	2
 50393  00AB82  A4D8               	btfss	status,2,c
 50394  00AB84  0012               	return	
 50395                           
 50396                           ; BSR set to: 2
 50397                           ;i2c_s.c: 169: if(LiczCHK(3)==BufI2C.Bf[3-1]) ToWork();
 50398  00AB86  0E03               	movlw	3
 50399  00AB88  ECC0  F04E         	call	_LiczCHK
 50400  00AB8C  19DA               	xorwf	(_BufI2C+3)& (0+255),w,b
 50401  00AB8E  B4D8               	btfsc	status,2,c
 50402                           
 50403                           ; BSR set to: 2
 50404  00AB90  EC37  F05B         	call	_ToWork	;wreg free
 50405                           
 50406                           ; BSR set to: 2
 50407  00AB94  0012               	return	
 50408  00AB96                     __end_of_ReceptDataI2C:
 50409                           	opt stack 0
 50410                           tblptru	equ	0xFF8
 50411                           tblptrh	equ	0xFF7
 50412                           tblptrl	equ	0xFF6
 50413                           tablat	equ	0xFF5
 50414                           prodh	equ	0xFF4
 50415                           prodl	equ	0xFF3
 50416                           intcon	equ	0xFF2
 50417                           postinc0	equ	0xFEE
 50418                           wreg	equ	0xFE8
 50419                           indf1	equ	0xFE7
 50420                           postinc1	equ	0xFE6
 50421                           postdec1	equ	0xFE5
 50422                           fsr1h	equ	0xFE2
 50423                           fsr1l	equ	0xFE1
 50424                           indf2	equ	0xFDF
 50425                           postinc2	equ	0xFDE
 50426                           postdec2	equ	0xFDD
 50427                           fsr2h	equ	0xFDA
 50428                           fsr2l	equ	0xFD9
 50429                           status	equ	0xFD8
 50430                           
 50431 ;; *************** function _LiczCHK *****************
 50432 ;; Defined at:
 50433 ;;		line 136 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
 50434 ;; Parameters:    Size  Location     Type
 50435 ;;  NBTI2C          1    wreg     const unsigned char 
 50436 ;; Auto vars:     Size  Location     Type
 50437 ;;  NBTI2C          1    6[COMRAM] const unsigned char 
 50438 ;;  i               1    7[COMRAM] unsigned char 
 50439 ;;  chk             1    5[COMRAM] unsigned char 
 50440 ;; Return value:  Size  Location     Type
 50441 ;;                  1    wreg      unsigned char 
 50442 ;; Registers used:
 50443 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50444 ;; Tracked objects:
 50445 ;;		On entry : F/2
 50446 ;;		On exit  : F/2
 50447 ;;		Unchanged: FFFFFFF0/0
 50448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50450 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50451 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50452 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50453 ;;Total ram usage:        8 bytes
 50454 ;; Hardware stack levels used:    1
 50455 ;; This function calls:
 50456 ;;		Nothing
 50457 ;; This function is called by:
 50458 ;;		_I2CSlaveTR
 50459 ;;		_ReceptDataI2C
 50460 ;; This function uses a non-reentrant model
 50461 ;;
 50462                           
 50463                           	psect	text245
 50464  009D80                     __ptext245:
 50465                           	opt stack 0
 50466  009D80                     _LiczCHK:
 50467                           	opt stack 20
 50468                           
 50469                           ; BSR set to: 2
 50470                           ;LiczCHK@NBTI2C stored from wreg
 50471  009D80  CFE8 F007          	movff	wreg,LiczCHK@NBTI2C
 50472                           
 50473                           ; BSR set to: 2
 50474                           ;i2c_s.c: 137: unsigned char i;
 50475                           ;i2c_s.c: 138: unsigned char chk=0;
 50476  009D84  6A06               	clrf	LiczCHK@chk,c
 50477                           
 50478                           ;i2c_s.c: 140: for(i=0;i<NBTI2C-1;i++) chk+=(BufI2C.Bf[i]+i)^0xAA;
 50479  009D86  6A08               	clrf	LiczCHK@i,c
 50480                           
 50481                           ; BSR set to: 2
 50482  009D88  0EFF               	movlw	255
 50483  009D8A  2407               	addwf	LiczCHK@NBTI2C,w,c
 50484  009D8C  6E01               	movwf	??_LiczCHK& (0+255),c
 50485  009D8E  6A02               	clrf	(??_LiczCHK+1)& (0+255),c
 50486  009D90  0EFF               	movlw	255
 50487  009D92  2202               	addwfc	(??_LiczCHK+1)& (0+255),f,c
 50488  009D94  5002               	movf	??_LiczCHK+1,w,c
 50489  009D96  0A80               	xorlw	128
 50490  009D98  0F80               	addlw	-128
 50491  009D9A  0E01               	movlw	1
 50492  009D9C  B4D8               	btfsc	status,2,c
 50493  009D9E  5C01               	subwf	??_LiczCHK,w,c
 50494  009DA0  E31D               	bnc	i2l17846
 50495  009DA2                     i2l17840:
 50496                           
 50497                           ; BSR set to: 2
 50498  009DA2  0ED8               	movlw	low (_BufI2C+1)
 50499  009DA4  2408               	addwf	LiczCHK@i,w,c
 50500  009DA6  6ED9               	movwf	fsr2l,c
 50501  009DA8  6ADA               	clrf	fsr2h,c
 50502  009DAA  0E02               	movlw	high (_BufI2C+1)
 50503  009DAC  22DA               	addwfc	fsr2h,f,c
 50504  009DAE  50DF               	movf	indf2,w,c
 50505  009DB0  2408               	addwf	LiczCHK@i,w,c
 50506  009DB2  0AAA               	xorlw	170
 50507  009DB4  2606               	addwf	LiczCHK@chk,f,c
 50508                           
 50509                           ; BSR set to: 2
 50510  009DB6  2A08               	incf	LiczCHK@i,f,c
 50511                           
 50512                           ; BSR set to: 2
 50513  009DB8  0EFF               	movlw	255
 50514  009DBA  2407               	addwf	LiczCHK@NBTI2C,w,c
 50515  009DBC  6E01               	movwf	??_LiczCHK& (0+255),c
 50516  009DBE  6A02               	clrf	(??_LiczCHK+1)& (0+255),c
 50517  009DC0  0EFF               	movlw	255
 50518  009DC2  2202               	addwfc	(??_LiczCHK+1)& (0+255),f,c
 50519  009DC4  5008               	movf	LiczCHK@i,w,c
 50520  009DC6  6E03               	movwf	(??_LiczCHK+2)& (0+255),c
 50521  009DC8  6A04               	clrf	(??_LiczCHK+3)& (0+255),c
 50522  009DCA  5004               	movf	??_LiczCHK+3,w,c
 50523  009DCC  0A80               	xorlw	128
 50524  009DCE  6E05               	movwf	(??_LiczCHK+4)& (0+255),c
 50525  009DD0  5001               	movf	??_LiczCHK,w,c
 50526  009DD2  5C03               	subwf	??_LiczCHK+2,w,c
 50527  009DD4  5002               	movf	??_LiczCHK+1,w,c
 50528  009DD6  0A80               	xorlw	128
 50529  009DD8  5805               	subwfb	(??_LiczCHK+4)& (0+255),w,c
 50530  009DDA  E3E3               	bnc	i2l17840
 50531  009DDC                     i2l17846:
 50532                           
 50533                           ; BSR set to: 2
 50534                           ;i2c_s.c: 141: return chk;
 50535  009DDC  5006               	movf	LiczCHK@chk,w,c
 50536                           
 50537                           ; BSR set to: 2
 50538  009DDE  0012               	return	
 50539  009DE0                     __end_of_LiczCHK:
 50540                           	opt stack 0
 50541                           tblptru	equ	0xFF8
 50542                           tblptrh	equ	0xFF7
 50543                           tblptrl	equ	0xFF6
 50544                           tablat	equ	0xFF5
 50545                           prodh	equ	0xFF4
 50546                           prodl	equ	0xFF3
 50547                           intcon	equ	0xFF2
 50548                           postinc0	equ	0xFEE
 50549                           wreg	equ	0xFE8
 50550                           indf1	equ	0xFE7
 50551                           postinc1	equ	0xFE6
 50552                           postdec1	equ	0xFE5
 50553                           fsr1h	equ	0xFE2
 50554                           fsr1l	equ	0xFE1
 50555                           indf2	equ	0xFDF
 50556                           postinc2	equ	0xFDE
 50557                           postdec2	equ	0xFDD
 50558                           fsr2h	equ	0xFDA
 50559                           fsr2l	equ	0xFD9
 50560                           status	equ	0xFD8
 50561                           
 50562 ;; *************** function _TransmitDataI2C *****************
 50563 ;; Defined at:
 50564 ;;		line 146 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
 50565 ;; Parameters:    Size  Location     Type
 50566 ;;		None
 50567 ;; Auto vars:     Size  Location     Type
 50568 ;;		None
 50569 ;; Return value:  Size  Location     Type
 50570 ;;		None               void
 50571 ;; Registers used:
 50572 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50573 ;; Tracked objects:
 50574 ;;		On entry : F/1
 50575 ;;		On exit  : F/2
 50576 ;;		Unchanged: FFFFFFF0/0
 50577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50582 ;;Total ram usage:        0 bytes
 50583 ;; Hardware stack levels used:    1
 50584 ;; This function calls:
 50585 ;;		Nothing
 50586 ;; This function is called by:
 50587 ;;		_I2CSlaveTR
 50588 ;; This function uses a non-reentrant model
 50589 ;;
 50590                           
 50591                           	psect	text246
 50592  00A92C                     __ptext246:
 50593                           	opt stack 0
 50594  00A92C                     _TransmitDataI2C:
 50595                           	opt stack 21
 50596                           
 50597                           ; BSR set to: 1
 50598                           ;i2c_s.c: 147: if(RW)
 50599                           
 50600                           ; BSR set to: 2
 50601  00A92C  A4C7               	btfss	4039,2,c	;volatile
 50602  00A92E  D015               	goto	i2l186
 50603                           
 50604                           ; BSR set to: 1
 50605                           ;i2c_s.c: 148: {
 50606                           ;i2c_s.c: 149: if(BufI2C.indeks<24) SSPBUF=BufI2C.Bf[BufI2C.indeks];
 50607  00A930  0E18               	movlw	24
 50608  00A932  0102               	movlb	2	; () banked
 50609  00A934  61D7               	cpfslt	_BufI2C& (0+255),b
 50610  00A936  D009               	goto	i2l187
 50611                           
 50612                           ; BSR set to: 2
 50613  00A938  0ED8               	movlw	low (_BufI2C+1)
 50614  00A93A  25D7               	addwf	_BufI2C& (0+255),w,b
 50615  00A93C  6ED9               	movwf	fsr2l,c
 50616  00A93E  6ADA               	clrf	fsr2h,c
 50617  00A940  0E02               	movlw	high (_BufI2C+1)
 50618  00A942  22DA               	addwfc	fsr2h,f,c
 50619  00A944  50DF               	movf	indf2,w,c
 50620  00A946  6EC9               	movwf	4041,c	;volatile
 50621  00A948  D002               	goto	i2l188
 50622  00A94A                     i2l187:
 50623                           
 50624                           ; BSR set to: 2
 50625                           ;i2c_s.c: 150: else SSPBUF=BufI2C.Bf[24-1];
 50626  00A94A  C2EF  FFC9         	movff	_BufI2C+24,4041	;volatile
 50627  00A94E                     i2l188:
 50628                           
 50629                           ; BSR set to: 2
 50630                           ;i2c_s.c: 151: CKP=1;
 50631  00A94E  88C6               	bsf	4038,4,c	;volatile
 50632                           
 50633                           ; BSR set to: 2
 50634                           ;i2c_s.c: 152: if(BufI2C.indeks<22-1) BufI2C.indeks++;
 50635  00A950  0E15               	movlw	21
 50636  00A952  61D7               	cpfslt	_BufI2C& (0+255),b
 50637  00A954  0C15               	retlw	21
 50638                           
 50639                           ; BSR set to: 2
 50640  00A956  2BD7               	incf	_BufI2C& (0+255),f,b
 50641  00A958  0C15               	retlw	21
 50642  00A95A                     i2l186:
 50643                           
 50644                           ; BSR set to: 1
 50645                           ;i2c_s.c: 154: else
 50646                           ;i2c_s.c: 155: {
 50647                           ;i2c_s.c: 156: CKP=1;
 50648  00A95A  88C6               	bsf	4038,4,c	;volatile
 50649                           
 50650                           ;i2c_s.c: 157: BufI2C.indeks=0;
 50651  00A95C  0102               	movlb	2	; () banked
 50652  00A95E  6BD7               	clrf	_BufI2C& (0+255),b
 50653                           
 50654                           ; BSR set to: 2
 50655  00A960  0012               	return	
 50656  00A962                     __end_of_TransmitDataI2C:
 50657                           	opt stack 0
 50658                           tblptru	equ	0xFF8
 50659                           tblptrh	equ	0xFF7
 50660                           tblptrl	equ	0xFF6
 50661                           tablat	equ	0xFF5
 50662                           prodh	equ	0xFF4
 50663                           prodl	equ	0xFF3
 50664                           intcon	equ	0xFF2
 50665                           postinc0	equ	0xFEE
 50666                           wreg	equ	0xFE8
 50667                           indf1	equ	0xFE7
 50668                           postinc1	equ	0xFE6
 50669                           postdec1	equ	0xFE5
 50670                           fsr1h	equ	0xFE2
 50671                           fsr1l	equ	0xFE1
 50672                           indf2	equ	0xFDF
 50673                           postinc2	equ	0xFDE
 50674                           postdec2	equ	0xFDD
 50675                           fsr2h	equ	0xFDA
 50676                           fsr2l	equ	0xFD9
 50677                           status	equ	0xFD8
 50678                           
 50679 ;; *************** function _ToWork *****************
 50680 ;; Defined at:
 50681 ;;		line 175 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
 50682 ;; Parameters:    Size  Location     Type
 50683 ;;		None
 50684 ;; Auto vars:     Size  Location     Type
 50685 ;;		None
 50686 ;; Return value:  Size  Location     Type
 50687 ;;		None               void
 50688 ;; Registers used:
 50689 ;;		None
 50690 ;; Tracked objects:
 50691 ;;		On entry : F/2
 50692 ;;		On exit  : F/2
 50693 ;;		Unchanged: FFFFFFF0/0
 50694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50699 ;;Total ram usage:        0 bytes
 50700 ;; Hardware stack levels used:    1
 50701 ;; This function calls:
 50702 ;;		Nothing
 50703 ;; This function is called by:
 50704 ;;		_ReceptDataI2C
 50705 ;; This function uses a non-reentrant model
 50706 ;;
 50707                           
 50708                           	psect	text247
 50709  00B66E                     __ptext247:
 50710                           	opt stack 0
 50711  00B66E                     _ToWork:
 50712                           	opt stack 20
 50713                           
 50714                           ; BSR set to: 2
 50715                           
 50716                           ; BSR set to: 2
 50717  00B66E  0012               	return	
 50718  00B670                     __end_of_ToWork:
 50719                           	opt stack 0
 50720                           tblptru	equ	0xFF8
 50721                           tblptrh	equ	0xFF7
 50722                           tblptrl	equ	0xFF6
 50723                           tablat	equ	0xFF5
 50724                           prodh	equ	0xFF4
 50725                           prodl	equ	0xFF3
 50726                           intcon	equ	0xFF2
 50727                           postinc0	equ	0xFEE
 50728                           wreg	equ	0xFE8
 50729                           indf1	equ	0xFE7
 50730                           postinc1	equ	0xFE6
 50731                           postdec1	equ	0xFE5
 50732                           fsr1h	equ	0xFE2
 50733                           fsr1l	equ	0xFE1
 50734                           indf2	equ	0xFDF
 50735                           postinc2	equ	0xFDE
 50736                           postdec2	equ	0xFDD
 50737                           fsr2h	equ	0xFDA
 50738                           fsr2l	equ	0xFD9
 50739                           status	equ	0xFD8
 50740                           
 50741 ;; *************** function _FormatDataIMY *****************
 50742 ;; Defined at:
 50743 ;;		line 217 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\i2c_s.c"
 50744 ;; Parameters:    Size  Location     Type
 50745 ;;		None
 50746 ;; Auto vars:     Size  Location     Type
 50747 ;;		None
 50748 ;; Return value:  Size  Location     Type
 50749 ;;		None               void
 50750 ;; Registers used:
 50751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 50752 ;; Tracked objects:
 50753 ;;		On entry : E/1
 50754 ;;		On exit  : E/0
 50755 ;;		Unchanged: 0/0
 50756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 50757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50758 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50760 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50761 ;;Total ram usage:       10 bytes
 50762 ;; Hardware stack levels used:    1
 50763 ;; Hardware stack levels required when called:    1
 50764 ;; This function calls:
 50765 ;;		i2_RdPrt
 50766 ;;		_BitSet
 50767 ;; This function is called by:
 50768 ;;		_ISR
 50769 ;; This function uses a non-reentrant model
 50770 ;;
 50771                           
 50772                           	psect	text248
 50773  0010B0                     __ptext248:
 50774                           	opt stack 0
 50775  0010B0                     _FormatDataIMY:
 50776                           	opt stack 21
 50777                           
 50778                           ;i2c_s.c: 220: switch(DtKNF.tpkt)
 50779                           
 50780                           ; BSR set to: 2
 50781  0010B0  D01C               	goto	i2l27280
 50782  0010B2                     i2l210:
 50783                           
 50784                           ; BSR set to: 1
 50785                           ;i2c_s.c: 223: if(!M._TURBO) DtI2C.kod=0xA0;
 50786  0010B2  0100               	movlb	0	; () banked
 50787  0010B4  B37B               	btfsc	(_M+27)& (0+255),1,b
 50788  0010B6  D002               	goto	i2l27262
 50789                           
 50790                           ; BSR set to: 0
 50791  0010B8  0EA0               	movlw	160
 50792  0010BA  D014               	goto	L102
 50793  0010BC                     i2l27262:
 50794                           
 50795                           ; BSR set to: 0
 50796                           ;i2c_s.c: 224: else DtI2C.kod=0xA5;
 50797  0010BC  0EA5               	movlw	165
 50798  0010BE  D012               	goto	L102
 50799  0010C0                     i2l214:
 50800                           
 50801                           ; BSR set to: 1
 50802                           ;i2c_s.c: 227: if(!M._TURBO) DtI2C.kod=0xA2;
 50803  0010C0  0100               	movlb	0	; () banked
 50804  0010C2  B37B               	btfsc	(_M+27)& (0+255),1,b
 50805  0010C4  D002               	goto	i2l27266
 50806                           
 50807                           ; BSR set to: 0
 50808  0010C6  0EA2               	movlw	162
 50809  0010C8  D00D               	goto	L102
 50810  0010CA                     i2l27266:
 50811                           
 50812                           ; BSR set to: 0
 50813                           ;i2c_s.c: 228: else DtI2C.kod=0xA7;
 50814  0010CA  0EA7               	movlw	167
 50815  0010CC  D00B               	goto	L102
 50816  0010CE                     i2l217:
 50817                           
 50818                           ; BSR set to: 1
 50819                           ;i2c_s.c: 231: if(!M._TURBO) DtI2C.kod=0xA4;
 50820  0010CE  0100               	movlb	0	; () banked
 50821  0010D0  B37B               	btfsc	(_M+27)& (0+255),1,b
 50822  0010D2  D002               	goto	i2l27270
 50823                           
 50824                           ; BSR set to: 0
 50825  0010D4  0EA4               	movlw	164
 50826  0010D6  D006               	goto	L102
 50827  0010D8                     i2l27270:
 50828                           
 50829                           ; BSR set to: 0
 50830                           ;i2c_s.c: 232: else DtI2C.kod=0xA9;
 50831  0010D8  0EA9               	movlw	169
 50832  0010DA  D004               	goto	L102
 50833  0010DC                     i2l220:
 50834                           
 50835                           ; BSR set to: 1
 50836                           ;i2c_s.c: 235: if(!M._TURBO) DtI2C.kod=0xAA;
 50837  0010DC  0100               	movlb	0	; () banked
 50838                           
 50839                           ; BSR set to: 0
 50840  0010DE  0EAA               	movlw	170
 50841  0010E0  B37B               	btfsc	(_M+27)& (0+255),1,b
 50842                           
 50843                           ; BSR set to: 0
 50844                           ;i2c_s.c: 236: else DtI2C.kod=0xAB;
 50845  0010E2  0EAB               	movlw	171
 50846  0010E4                     L102:
 50847  0010E4  0101               	movlb	1	; () banked
 50848  0010E6  6FDF               	movwf	(_DtI2C+2)& (0+255),b
 50849  0010E8  D009               	goto	i2l27282
 50850  0010EA                     i2l27280:
 50851  0010EA  0101               	movlb	1	; () banked
 50852  0010EC  5151               	movf	(_DtKNF+7)& (0+255),w,b
 50853                           
 50854                           ; Switch size 1, requested type "space"
 50855                           ; Number of cases is 4, Range of values is 0 to 3
 50856                           ; switch strategies available:
 50857                           ; Name         Instructions Cycles
 50858                           ; simple_byte           13     7 (average)
 50859                           ;	Chosen strategy is simple_byte
 50860  0010EE  E0E1               	bz	i2l210
 50861  0010F0  0A01               	xorlw	1	; case 1
 50862  0010F2  E0E6               	bz	i2l214
 50863  0010F4  0A03               	xorlw	3	; case 2
 50864  0010F6  E0EB               	bz	i2l217
 50865  0010F8  0A01               	xorlw	1	; case 3
 50866  0010FA  D7F0               	goto	i2l220
 50867  0010FC                     i2l27282:
 50868                           
 50869                           ; BSR set to: 1
 50870                           ;i2c_s.c: 243: if(M._AKTYWNE_KNF) DtI2C.PCO=DtCO.PPCO;
 50871  0010FC  0100               	movlb	0	; () banked
 50872  0010FE  5179               	movf	(_M+25)& (0+255),w,b
 50873  001100  1178               	iorwf	(_M+24)& (0+255),w,b
 50874  001102  E003               	bz	i2l27286
 50875  001104                     i2l27284:
 50876                           
 50877                           ; BSR set to: 0
 50878  001104  C0E8  F1E0         	movff	_DtCO+4,_DtI2C+3
 50879  001108  D005               	goto	i2l227
 50880  00110A                     i2l27286:
 50881                           
 50882                           ; BSR set to: 0
 50883                           ;i2c_s.c: 244: else
 50884                           ;i2c_s.c: 245: if(M._AKTYWNE_PGD) DtI2C.PCO=DtCO.PPCO;
 50885  00110A  5177               	movf	(_M+23)& (0+255),w,b
 50886  00110C  1176               	iorwf	(_M+22)& (0+255),w,b
 50887  00110E  E1FA               	bnz	i2l27284
 50888                           
 50889                           ; BSR set to: 0
 50890                           ;i2c_s.c: 246: else DtI2C.PCO=DtCO.PCO;
 50891  001110  C0E7  F1E0         	movff	_DtCO+3,_DtI2C+3
 50892  001114                     i2l227:
 50893                           
 50894                           ; BSR set to: 0
 50895                           ;i2c_s.c: 248: DtI2C.CO=DtCO.CO;
 50896  001114  C0E6  F1E1         	movff	_DtCO+2,_DtI2C+4
 50897                           
 50898                           ; BSR set to: 0
 50899                           ;i2c_s.c: 250: if(M._AKTYWNE_KNF) DtI2C.PCW=DtCW.PPCW;
 50900  001118  5179               	movf	(_M+25)& (0+255),w,b
 50901  00111A  1178               	iorwf	(_M+24)& (0+255),w,b
 50902  00111C  E003               	bz	i2l27294
 50903  00111E                     i2l27292:
 50904                           
 50905                           ; BSR set to: 0
 50906  00111E  C0D3  F1E2         	movff	_DtCW+4,_DtI2C+5
 50907  001122  D005               	goto	i2l231
 50908  001124                     i2l27294:
 50909                           
 50910                           ; BSR set to: 0
 50911                           ;i2c_s.c: 251: else
 50912                           ;i2c_s.c: 252: if(M._pob_AL) DtI2C.PCW=DtCW.PPCW;
 50913  001124  5167               	movf	(_M+7)& (0+255),w,b
 50914  001126  1166               	iorwf	(_M+6)& (0+255),w,b
 50915  001128  E1FA               	bnz	i2l27292
 50916                           
 50917                           ; BSR set to: 0
 50918                           ;i2c_s.c: 253: else DtI2C.PCW=DtCW.PCW;
 50919  00112A  C0D2  F1E2         	movff	_DtCW+3,_DtI2C+5
 50920  00112E                     i2l231:
 50921                           
 50922                           ; BSR set to: 0
 50923                           ;i2c_s.c: 255: DtI2C.CW=DtCW.CW;
 50924  00112E  C0D1  F1E3         	movff	_DtCW+2,_DtI2C+6
 50925                           
 50926                           ;i2c_s.c: 257: DtI2C.CS=DtCS.CS;
 50927  001132  C034  F1E4         	movff	_DtCS+3,_DtI2C+7
 50928                           
 50929                           ;i2c_s.c: 259: DtI2C.STR_PWM=PWM.MSTART;
 50930  001136  C0AF  F1E5         	movff	_PWM+28,_DtI2C+8	;volatile
 50931                           
 50932                           ;i2c_s.c: 261: DtI2C.MAX_PWM=PWM.MMAXCO;
 50933  00113A  C0B0  F1E6         	movff	_PWM+29,_DtI2C+9	;volatile
 50934                           
 50935                           ;i2c_s.c: 263: DtI2C.BUF_PWM=PWM.BufPWM;
 50936  00113E  C094  F1E7         	movff	_PWM+1,_DtI2C+10	;volatile
 50937                           
 50938                           ; BSR set to: 0
 50939                           ;i2c_s.c: 265: BitSet(&DtI2C.ST_AD1,0,RdPrt(18));
 50940  001142  0101               	movlb	1	; () banked
 50941  001144  0E01               	movlw	high (_DtI2C+11)
 50942  001146  6E04               	movwf	?_BitSet+1,c
 50943  001148  0EE8               	movlw	low (_DtI2C+11)
 50944  00114A  6E03               	movwf	?_BitSet,c
 50945  00114C  6A05               	clrf	?_BitSet+2,c
 50946  00114E  0E12               	movlw	18
 50947  001150  ECF4  F058         	call	i2_RdPrt
 50948  001154  0E01               	movlw	1
 50949  001156  A0D8               	btfss	status,0,c
 50950  001158  0E00               	movlw	0
 50951  00115A  6E06               	movwf	?_BitSet+3,c
 50952  00115C  ECDD  F051         	call	_BitSet	;wreg free
 50953                           
 50954                           ;i2c_s.c: 266: BitSet(&DtI2C.ST_AD1,1,DtCW._err_CW);
 50955  001160  0E01               	movlw	high (_DtI2C+11)
 50956  001162  6E04               	movwf	?_BitSet+1,c
 50957  001164  0EE8               	movlw	low (_DtI2C+11)
 50958  001166  6E03               	movwf	?_BitSet,c
 50959  001168  0E01               	movlw	1
 50960  00116A  6E05               	movwf	?_BitSet+2,c
 50961  00116C  0E00               	movlw	0
 50962  00116E  0100               	movlb	0	; () banked
 50963  001170  B1CF               	btfsc	_DtCW& (0+255),0,b
 50964  001172  0E01               	movlw	1
 50965  001174  6E06               	movwf	?_BitSet+3,c
 50966  001176  ECDD  F051         	call	_BitSet	;wreg free
 50967                           
 50968                           ;i2c_s.c: 267: BitSet(&DtI2C.ST_AD1,2,DtCO._newPCO);
 50969  00117A  0E01               	movlw	high (_DtI2C+11)
 50970  00117C  6E04               	movwf	?_BitSet+1,c
 50971  00117E  0EE8               	movlw	low (_DtI2C+11)
 50972  001180  6E03               	movwf	?_BitSet,c
 50973  001182  0E02               	movlw	2
 50974  001184  6E05               	movwf	?_BitSet+2,c
 50975  001186  0E00               	movlw	0
 50976  001188  0100               	movlb	0	; () banked
 50977  00118A  BFE5               	btfsc	(_DtCO+1)& (0+255),7,b
 50978  00118C  0E01               	movlw	1
 50979  00118E  6E06               	movwf	?_BitSet+3,c
 50980  001190  ECDD  F051         	call	_BitSet	;wreg free
 50981                           
 50982                           ;i2c_s.c: 268: BitSet(&DtI2C.ST_AD1,3,DtCW._newPCW);
 50983  001194  0E01               	movlw	high (_DtI2C+11)
 50984  001196  6E04               	movwf	?_BitSet+1,c
 50985  001198  0EE8               	movlw	low (_DtI2C+11)
 50986  00119A  6E03               	movwf	?_BitSet,c
 50987  00119C  0E03               	movlw	3
 50988  00119E  6E05               	movwf	?_BitSet+2,c
 50989  0011A0  0E00               	movlw	0
 50990  0011A2  0100               	movlb	0	; () banked
 50991  0011A4  B1D0               	btfsc	(_DtCW+1)& (0+255),0,b
 50992  0011A6  0E01               	movlw	1
 50993  0011A8  6E06               	movwf	?_BitSet+3,c
 50994  0011AA  ECDD  F051         	call	_BitSet	;wreg free
 50995                           
 50996                           ;i2c_s.c: 269: BitSet(&DtI2C.ST_AD1,4,RdPrt(14));
 50997  0011AE  0101               	movlb	1	; () banked
 50998  0011B0  0E01               	movlw	high (_DtI2C+11)
 50999  0011B2  6E04               	movwf	?_BitSet+1,c
 51000  0011B4  0EE8               	movlw	low (_DtI2C+11)
 51001  0011B6  6E03               	movwf	?_BitSet,c
 51002  0011B8  0E04               	movlw	4
 51003  0011BA  6E05               	movwf	?_BitSet+2,c
 51004  0011BC  0E0E               	movlw	14
 51005  0011BE  ECF4  F058         	call	i2_RdPrt
 51006  0011C2  0E01               	movlw	1
 51007  0011C4  A0D8               	btfss	status,0,c
 51008  0011C6  0E00               	movlw	0
 51009  0011C8  6E06               	movwf	?_BitSet+3,c
 51010  0011CA  ECDD  F051         	call	_BitSet	;wreg free
 51011                           
 51012                           ;i2c_s.c: 270: BitSet(&DtI2C.ST_AD1,5,DtCS._lo);
 51013  0011CE  0101               	movlb	1	; () banked
 51014  0011D0  0E01               	movlw	high (_DtI2C+11)
 51015  0011D2  6E04               	movwf	?_BitSet+1,c
 51016  0011D4  0EE8               	movlw	low (_DtI2C+11)
 51017  0011D6  6E03               	movwf	?_BitSet,c
 51018  0011D8  0E05               	movlw	5
 51019  0011DA  6E05               	movwf	?_BitSet+2,c
 51020  0011DC  0E00               	movlw	0
 51021  0011DE  B231               	btfsc	_DtCS,1,c
 51022  0011E0  0E01               	movlw	1
 51023  0011E2  6E06               	movwf	?_BitSet+3,c
 51024  0011E4  ECDD  F051         	call	_BitSet	;wreg free
 51025                           
 51026                           ;i2c_s.c: 271: BitSet(&DtI2C.ST_AD1,6,DtCS._hi);
 51027  0011E8  0E01               	movlw	high (_DtI2C+11)
 51028  0011EA  6E04               	movwf	?_BitSet+1,c
 51029  0011EC  0EE8               	movlw	low (_DtI2C+11)
 51030  0011EE  6E03               	movwf	?_BitSet,c
 51031  0011F0  0E06               	movlw	6
 51032  0011F2  6E05               	movwf	?_BitSet+2,c
 51033  0011F4  0E00               	movlw	0
 51034  0011F6  B031               	btfsc	_DtCS,0,c
 51035  0011F8  0E01               	movlw	1
 51036  0011FA  6E06               	movwf	?_BitSet+3,c
 51037  0011FC  ECDD  F051         	call	_BitSet	;wreg free
 51038                           
 51039                           ;i2c_s.c: 272: BitSet(&DtI2C.ST_AD1,7,RdPrt(15));
 51040  001200  0E01               	movlw	high (_DtI2C+11)
 51041  001202  6E04               	movwf	?_BitSet+1,c
 51042  001204  0EE8               	movlw	low (_DtI2C+11)
 51043  001206  6E03               	movwf	?_BitSet,c
 51044  001208  0E07               	movlw	7
 51045  00120A  6E05               	movwf	?_BitSet+2,c
 51046  00120C  0E0F               	movlw	15
 51047  00120E  ECF4  F058         	call	i2_RdPrt
 51048  001212  0E01               	movlw	1
 51049  001214  A0D8               	btfss	status,0,c
 51050  001216  0E00               	movlw	0
 51051  001218  6E06               	movwf	?_BitSet+3,c
 51052  00121A  ECDD  F051         	call	_BitSet	;wreg free
 51053                           
 51054                           ;i2c_s.c: 274: BitSet(&DtI2C.ST_AD2,0,DtCO._su_CO);
 51055  00121E  0E01               	movlw	high (_DtI2C+12)
 51056  001220  6E04               	movwf	?_BitSet+1,c
 51057  001222  0EE9               	movlw	low (_DtI2C+12)
 51058  001224  6E03               	movwf	?_BitSet,c
 51059  001226  0E00               	movlw	0
 51060  001228  6A05               	clrf	?_BitSet+2,c
 51061  00122A  0100               	movlb	0	; () banked
 51062  00122C  B3E4               	btfsc	_DtCO& (0+255),1,b
 51063  00122E  0E01               	movlw	1
 51064  001230  6E06               	movwf	?_BitSet+3,c
 51065  001232  ECDD  F051         	call	_BitSet	;wreg free
 51066                           
 51067                           ;i2c_s.c: 275: BitSet(&DtI2C.ST_AD2,1,RdPrt(19));
 51068  001236  0101               	movlb	1	; () banked
 51069  001238  0E01               	movlw	high (_DtI2C+12)
 51070  00123A  6E04               	movwf	?_BitSet+1,c
 51071  00123C  0EE9               	movlw	low (_DtI2C+12)
 51072  00123E  6E03               	movwf	?_BitSet,c
 51073  001240  0E01               	movlw	1
 51074  001242  6E05               	movwf	?_BitSet+2,c
 51075  001244  0E13               	movlw	19
 51076  001246  ECF4  F058         	call	i2_RdPrt
 51077  00124A  0E01               	movlw	1
 51078  00124C  A0D8               	btfss	status,0,c
 51079  00124E  0E00               	movlw	0
 51080  001250  6E06               	movwf	?_BitSet+3,c
 51081  001252  ECDD  F051         	call	_BitSet	;wreg free
 51082                           
 51083                           ;i2c_s.c: 276: BitSet(&DtI2C.ST_AD2,2,DtCO._on_DZ_CO);
 51084  001256  0E01               	movlw	high (_DtI2C+12)
 51085  001258  6E04               	movwf	?_BitSet+1,c
 51086  00125A  0EE9               	movlw	low (_DtI2C+12)
 51087  00125C  6E03               	movwf	?_BitSet,c
 51088  00125E  0E02               	movlw	2
 51089  001260  6E05               	movwf	?_BitSet+2,c
 51090  001262  0E00               	movlw	0
 51091  001264  0100               	movlb	0	; () banked
 51092  001266  BBE4               	btfsc	_DtCO& (0+255),5,b
 51093  001268  0E01               	movlw	1
 51094  00126A  6E06               	movwf	?_BitSet+3,c
 51095  00126C  ECDD  F051         	call	_BitSet	;wreg free
 51096                           
 51097                           ; BSR set to: 0
 51098                           ;i2c_s.c: 277: BitSet(&DtI2C.ST_AD2,3,DtCO._cold_CO||DtCO._hot_CO);
 51099  001270  0E01               	movlw	1
 51100  001272  6E0C               	movwf	_FormatDataIMY$1065,c
 51101                           
 51102                           ; BSR set to: 0
 51103  001274  A5E5               	btfss	(_DtCO+1)& (0+255),2,b
 51104                           
 51105                           ; BSR set to: 0
 51106  001276  B7E5               	btfsc	(_DtCO+1)& (0+255),3,b
 51107  001278  D001               	goto	i2l27308
 51108                           
 51109                           ; BSR set to: 0
 51110  00127A  6A0C               	clrf	_FormatDataIMY$1065,c
 51111  00127C                     i2l27308:
 51112                           
 51113                           ; BSR set to: 0
 51114  00127C  0101               	movlb	1	; () banked
 51115  00127E  0E01               	movlw	high (_DtI2C+12)
 51116  001280  6E04               	movwf	?_BitSet+1,c
 51117  001282  0EE9               	movlw	low (_DtI2C+12)
 51118  001284  6E03               	movwf	?_BitSet,c
 51119  001286  0E03               	movlw	3
 51120  001288  6E05               	movwf	?_BitSet+2,c
 51121  00128A  C00C  F006         	movff	_FormatDataIMY$1065,?_BitSet+3
 51122  00128E  ECDD  F051         	call	_BitSet	;wreg free
 51123                           
 51124                           ;i2c_s.c: 278: BitSet(&DtI2C.ST_AD2,4,DtCW._su_CW);
 51125  001292  0E01               	movlw	high (_DtI2C+12)
 51126  001294  6E04               	movwf	?_BitSet+1,c
 51127  001296  0EE9               	movlw	low (_DtI2C+12)
 51128  001298  6E03               	movwf	?_BitSet,c
 51129  00129A  0E04               	movlw	4
 51130  00129C  6E05               	movwf	?_BitSet+2,c
 51131  00129E  0E00               	movlw	0
 51132  0012A0  0100               	movlb	0	; () banked
 51133  0012A2  B3CF               	btfsc	_DtCW& (0+255),1,b
 51134  0012A4  0E01               	movlw	1
 51135  0012A6  6E06               	movwf	?_BitSet+3,c
 51136  0012A8  ECDD  F051         	call	_BitSet	;wreg free
 51137                           
 51138                           ;i2c_s.c: 279: BitSet(&DtI2C.ST_AD2,5,DtCW._ad_CW);
 51139  0012AC  0E01               	movlw	high (_DtI2C+12)
 51140  0012AE  6E04               	movwf	?_BitSet+1,c
 51141  0012B0  0EE9               	movlw	low (_DtI2C+12)
 51142  0012B2  6E03               	movwf	?_BitSet,c
 51143  0012B4  0E05               	movlw	5
 51144  0012B6  6E05               	movwf	?_BitSet+2,c
 51145  0012B8  0E00               	movlw	0
 51146  0012BA  0100               	movlb	0	; () banked
 51147  0012BC  B5CF               	btfsc	_DtCW& (0+255),2,b
 51148  0012BE  0E01               	movlw	1
 51149  0012C0  6E06               	movwf	?_BitSet+3,c
 51150  0012C2  ECDD  F051         	call	_BitSet	;wreg free
 51151                           
 51152                           ;i2c_s.c: 280: BitSet(&DtI2C.ST_AD2,6,RdPrt(6));
 51153  0012C6  0101               	movlb	1	; () banked
 51154  0012C8  0E01               	movlw	high (_DtI2C+12)
 51155  0012CA  6E04               	movwf	?_BitSet+1,c
 51156  0012CC  0EE9               	movlw	low (_DtI2C+12)
 51157  0012CE  6E03               	movwf	?_BitSet,c
 51158  0012D0  0E06               	movlw	6
 51159  0012D2  6E05               	movwf	?_BitSet+2,c
 51160  0012D4  ECF4  F058         	call	i2_RdPrt
 51161  0012D8  0E01               	movlw	1
 51162  0012DA  A0D8               	btfss	status,0,c
 51163  0012DC  0E00               	movlw	0
 51164  0012DE  6E06               	movwf	?_BitSet+3,c
 51165  0012E0  ECDD  F051         	call	_BitSet	;wreg free
 51166                           
 51167                           ;i2c_s.c: 281: BitSet(&DtI2C.ST_AD2,7,RdPrt(6));
 51168  0012E4  0101               	movlb	1	; () banked
 51169  0012E6  0E01               	movlw	high (_DtI2C+12)
 51170  0012E8  6E04               	movwf	?_BitSet+1,c
 51171  0012EA  0EE9               	movlw	low (_DtI2C+12)
 51172  0012EC  6E03               	movwf	?_BitSet,c
 51173  0012EE  0E07               	movlw	7
 51174  0012F0  6E05               	movwf	?_BitSet+2,c
 51175  0012F2  0E06               	movlw	6
 51176  0012F4  ECF4  F058         	call	i2_RdPrt
 51177  0012F8  0E01               	movlw	1
 51178  0012FA  A0D8               	btfss	status,0,c
 51179  0012FC  0E00               	movlw	0
 51180  0012FE  6E06               	movwf	?_BitSet+3,c
 51181  001300  ECDD  F051         	call	_BitSet	;wreg free
 51182                           
 51183                           ;i2c_s.c: 283: BitSet(&DtI2C.ST_AD3,0,DtCO._hot_CO);
 51184  001304  0E01               	movlw	high (_DtI2C+13)
 51185  001306  6E04               	movwf	?_BitSet+1,c
 51186  001308  0EEA               	movlw	low (_DtI2C+13)
 51187  00130A  6E03               	movwf	?_BitSet,c
 51188  00130C  0E00               	movlw	0
 51189  00130E  6A05               	clrf	?_BitSet+2,c
 51190  001310  0100               	movlb	0	; () banked
 51191  001312  B7E5               	btfsc	(_DtCO+1)& (0+255),3,b
 51192  001314  0E01               	movlw	1
 51193  001316  6E06               	movwf	?_BitSet+3,c
 51194  001318  ECDD  F051         	call	_BitSet	;wreg free
 51195                           
 51196                           ;i2c_s.c: 284: BitSet(&DtI2C.ST_AD3,1,DtCS._no);
 51197  00131C  0101               	movlb	1	; () banked
 51198  00131E  0E01               	movlw	high (_DtI2C+13)
 51199  001320  6E04               	movwf	?_BitSet+1,c
 51200  001322  0EEA               	movlw	low (_DtI2C+13)
 51201  001324  6E03               	movwf	?_BitSet,c
 51202  001326  0E01               	movlw	1
 51203  001328  6E05               	movwf	?_BitSet+2,c
 51204  00132A  0E00               	movlw	0
 51205  00132C  B431               	btfsc	_DtCS,2,c
 51206  00132E  0E01               	movlw	1
 51207  001330  6E06               	movwf	?_BitSet+3,c
 51208  001332  ECDD  F051         	call	_BitSet	;wreg free
 51209                           
 51210                           ;i2c_s.c: 285: BitSet(&DtI2C.ST_AD3,2,RdPrt(16));
 51211  001336  0E01               	movlw	high (_DtI2C+13)
 51212  001338  6E04               	movwf	?_BitSet+1,c
 51213  00133A  0EEA               	movlw	low (_DtI2C+13)
 51214  00133C  6E03               	movwf	?_BitSet,c
 51215  00133E  0E02               	movlw	2
 51216  001340  6E05               	movwf	?_BitSet+2,c
 51217  001342  0E10               	movlw	16
 51218  001344  ECF4  F058         	call	i2_RdPrt
 51219  001348  0E01               	movlw	1
 51220  00134A  A0D8               	btfss	status,0,c
 51221  00134C  0E00               	movlw	0
 51222  00134E  6E06               	movwf	?_BitSet+3,c
 51223  001350  ECDD  F051         	call	_BitSet	;wreg free
 51224                           
 51225                           ;i2c_s.c: 286: BitSet(&DtI2C.ST_AD3,3,RdPrt(16));
 51226  001354  0101               	movlb	1	; () banked
 51227  001356  0E01               	movlw	high (_DtI2C+13)
 51228  001358  6E04               	movwf	?_BitSet+1,c
 51229  00135A  0EEA               	movlw	low (_DtI2C+13)
 51230  00135C  6E03               	movwf	?_BitSet,c
 51231  00135E  0E03               	movlw	3
 51232  001360  6E05               	movwf	?_BitSet+2,c
 51233  001362  0E10               	movlw	16
 51234  001364  ECF4  F058         	call	i2_RdPrt
 51235  001368  0E01               	movlw	1
 51236  00136A  A0D8               	btfss	status,0,c
 51237  00136C  0E00               	movlw	0
 51238  00136E  6E06               	movwf	?_BitSet+3,c
 51239  001370  ECDD  F051         	call	_BitSet	;wreg free
 51240                           
 51241                           ;i2c_s.c: 287: BitSet(&DtI2C.ST_AD3,5,M._BLOKUJ_15S);
 51242  001374  0E01               	movlw	high (_DtI2C+13)
 51243  001376  6E04               	movwf	?_BitSet+1,c
 51244  001378  0EEA               	movlw	low (_DtI2C+13)
 51245  00137A  6E03               	movwf	?_BitSet,c
 51246  00137C  0E05               	movlw	5
 51247  00137E  6E05               	movwf	?_BitSet+2,c
 51248  001380  0E00               	movlw	0
 51249  001382  0100               	movlb	0	; () banked
 51250  001384  B971               	btfsc	(_M+17)& (0+255),4,b
 51251  001386  0E01               	movlw	1
 51252  001388  6E06               	movwf	?_BitSet+3,c
 51253  00138A  ECDD  F051         	call	_BitSet	;wreg free
 51254                           
 51255                           ;i2c_s.c: 289: BitSet(&DtI2C.PORTC,0,PORTDbits.RD4);
 51256  00138E  0101               	movlb	1	; () banked
 51257  001390  0E01               	movlw	high (_DtI2C+14)
 51258  001392  6E04               	movwf	?_BitSet+1,c
 51259  001394  0EEB               	movlw	low (_DtI2C+14)
 51260  001396  6E03               	movwf	?_BitSet,c
 51261  001398  0E00               	movlw	0
 51262  00139A  6A05               	clrf	?_BitSet+2,c
 51263  00139C  B883               	btfsc	3971,4,c	;volatile
 51264  00139E  0E01               	movlw	1
 51265  0013A0  6E06               	movwf	?_BitSet+3,c
 51266  0013A2  ECDD  F051         	call	_BitSet	;wreg free
 51267                           
 51268                           ;i2c_s.c: 290: BitSet(&DtI2C.PORTC,1,1);
 51269  0013A6  0E01               	movlw	high (_DtI2C+14)
 51270  0013A8  6E04               	movwf	?_BitSet+1,c
 51271  0013AA  0EEB               	movlw	low (_DtI2C+14)
 51272  0013AC  6E03               	movwf	?_BitSet,c
 51273  0013AE  0E01               	movlw	1
 51274  0013B0  6E05               	movwf	?_BitSet+2,c
 51275  0013B2  6E06               	movwf	?_BitSet+3,c
 51276  0013B4  ECDD  F051         	call	_BitSet	;wreg free
 51277                           
 51278                           ;i2c_s.c: 291: BitSet(&DtI2C.PORTC,3,PORTDbits.RD3);
 51279  0013B8  0E01               	movlw	high (_DtI2C+14)
 51280  0013BA  6E04               	movwf	?_BitSet+1,c
 51281  0013BC  0EEB               	movlw	low (_DtI2C+14)
 51282  0013BE  6E03               	movwf	?_BitSet,c
 51283  0013C0  0E03               	movlw	3
 51284  0013C2  6E05               	movwf	?_BitSet+2,c
 51285  0013C4  0E00               	movlw	0
 51286  0013C6  B683               	btfsc	3971,3,c	;volatile
 51287  0013C8  0E01               	movlw	1
 51288  0013CA  6E06               	movwf	?_BitSet+3,c
 51289  0013CC  ECDD  F051         	call	_BitSet	;wreg free
 51290                           
 51291                           ;i2c_s.c: 292: BitSet(&DtI2C.PORTC,5,PORTBbits.RB5);
 51292  0013D0  0E01               	movlw	high (_DtI2C+14)
 51293  0013D2  6E04               	movwf	?_BitSet+1,c
 51294  0013D4  0EEB               	movlw	low (_DtI2C+14)
 51295  0013D6  6E03               	movwf	?_BitSet,c
 51296  0013D8  0E05               	movlw	5
 51297  0013DA  6E05               	movwf	?_BitSet+2,c
 51298  0013DC  0E00               	movlw	0
 51299  0013DE  BA81               	btfsc	3969,5,c	;volatile
 51300  0013E0  0E01               	movlw	1
 51301  0013E2  6E06               	movwf	?_BitSet+3,c
 51302  0013E4  ECDD  F051         	call	_BitSet	;wreg free
 51303                           
 51304                           ; BSR set to: 1
 51305                           ;i2c_s.c: 293: if(!M._TURBO)
 51306  0013E8  0100               	movlb	0	; () banked
 51307  0013EA  B37B               	btfsc	(_M+27)& (0+255),1,b
 51308  0013EC  D008               	goto	i2l27314
 51309                           
 51310                           ; BSR set to: 0
 51311                           ;i2c_s.c: 294: BitSet(&DtI2C.PORTC,6,PORTCbits.RC0);
 51312  0013EE  0101               	movlb	1	; () banked
 51313  0013F0  DB0B               	call	PL196	;call to abstracted procedure
 51314  0013F2  B082               	btfsc	3970,0,c	;volatile
 51315  0013F4  0E01               	movlw	1
 51316  0013F6  6E06               	movwf	?_BitSet+3,c
 51317  0013F8  ECDD  F051         	call	_BitSet	;wreg free
 51318  0013FC  D007               	goto	i2l237
 51319  0013FE                     i2l27314:
 51320                           
 51321                           ; BSR set to: 0
 51322                           ;i2c_s.c: 295: else
 51323                           ;i2c_s.c: 296: BitSet(&DtI2C.PORTC,6,PORTAbits.RA6);
 51324  0013FE  0101               	movlb	1	; () banked
 51325  001400  DB03               	call	PL196	;call to abstracted procedure
 51326  001402  BC80               	btfsc	3968,6,c	;volatile
 51327  001404  0E01               	movlw	1
 51328  001406  6E06               	movwf	?_BitSet+3,c
 51329  001408  ECDD  F051         	call	_BitSet	;wreg free
 51330  00140C                     i2l237:
 51331                           
 51332                           ; BSR set to: 1
 51333                           ;i2c_s.c: 297: BitSet(&DtI2C.PORTC,7,PORTCbits.RC5);
 51334  00140C  0E01               	movlw	high (_DtI2C+14)
 51335  00140E  6E04               	movwf	?_BitSet+1,c
 51336  001410  0EEB               	movlw	low (_DtI2C+14)
 51337  001412  6E03               	movwf	?_BitSet,c
 51338  001414  0E07               	movlw	7
 51339  001416  6E05               	movwf	?_BitSet+2,c
 51340  001418  0E00               	movlw	0
 51341  00141A  BA82               	btfsc	3970,5,c	;volatile
 51342  00141C  0E01               	movlw	1
 51343  00141E  6E06               	movwf	?_BitSet+3,c
 51344  001420  ECDD  F051         	call	_BitSet	;wreg free
 51345                           
 51346                           ;i2c_s.c: 299: BitSet(&DtI2C.PORTD,0,0);
 51347  001424  0E01               	movlw	high (_DtI2C+15)
 51348  001426  6E04               	movwf	?_BitSet+1,c
 51349  001428  0EEC               	movlw	low (_DtI2C+15)
 51350  00142A  6E03               	movwf	?_BitSet,c
 51351  00142C  0E00               	movlw	0
 51352  00142E  6A05               	clrf	?_BitSet+2,c
 51353  001430  6A06               	clrf	?_BitSet+3,c
 51354  001432  ECDD  F051         	call	_BitSet	;wreg free
 51355                           
 51356                           ;i2c_s.c: 300: BitSet(&DtI2C.PORTD,1,PORTDbits.RD0);
 51357  001436  0E01               	movlw	high (_DtI2C+15)
 51358  001438  6E04               	movwf	?_BitSet+1,c
 51359  00143A  0EEC               	movlw	low (_DtI2C+15)
 51360  00143C  6E03               	movwf	?_BitSet,c
 51361  00143E  0E01               	movlw	1
 51362  001440  6E05               	movwf	?_BitSet+2,c
 51363  001442  0E00               	movlw	0
 51364  001444  B083               	btfsc	3971,0,c	;volatile
 51365  001446  0E01               	movlw	1
 51366  001448  6E06               	movwf	?_BitSet+3,c
 51367  00144A  ECDD  F051         	call	_BitSet	;wreg free
 51368                           
 51369                           ;i2c_s.c: 301: BitSet(&DtI2C.PORTD,2,PORTDbits.RD1);
 51370  00144E  0E01               	movlw	high (_DtI2C+15)
 51371  001450  6E04               	movwf	?_BitSet+1,c
 51372  001452  0EEC               	movlw	low (_DtI2C+15)
 51373  001454  6E03               	movwf	?_BitSet,c
 51374  001456  0E02               	movlw	2
 51375  001458  6E05               	movwf	?_BitSet+2,c
 51376  00145A  0E00               	movlw	0
 51377  00145C  B283               	btfsc	3971,1,c	;volatile
 51378  00145E  0E01               	movlw	1
 51379  001460  6E06               	movwf	?_BitSet+3,c
 51380  001462  ECDD  F051         	call	_BitSet	;wreg free
 51381                           
 51382                           ;i2c_s.c: 302: BitSet(&DtI2C.PORTD,3,PORTDbits.RD2);
 51383  001466  0E01               	movlw	high (_DtI2C+15)
 51384  001468  6E04               	movwf	?_BitSet+1,c
 51385  00146A  0EEC               	movlw	low (_DtI2C+15)
 51386  00146C  6E03               	movwf	?_BitSet,c
 51387  00146E  0E03               	movlw	3
 51388  001470  6E05               	movwf	?_BitSet+2,c
 51389  001472  0E00               	movlw	0
 51390  001474  B483               	btfsc	3971,2,c	;volatile
 51391  001476  0E01               	movlw	1
 51392  001478  6E06               	movwf	?_BitSet+3,c
 51393  00147A  ECDD  F051         	call	_BitSet	;wreg free
 51394                           
 51395                           ;i2c_s.c: 303: BitSet(&DtI2C.PORTD,4,PFN._res);
 51396  00147E  0E01               	movlw	high (_DtI2C+15)
 51397  001480  6E04               	movwf	?_BitSet+1,c
 51398  001482  0EEC               	movlw	low (_DtI2C+15)
 51399  001484  6E03               	movwf	?_BitSet,c
 51400  001486  0E04               	movlw	4
 51401  001488  6E05               	movwf	?_BitSet+2,c
 51402  00148A  0E00               	movlw	0
 51403  00148C  B7BC               	btfsc	(_PFN+2)& (0+255),3,b
 51404  00148E  0E01               	movlw	1
 51405  001490  6E06               	movwf	?_BitSet+3,c
 51406  001492  ECDD  F051         	call	_BitSet	;wreg free
 51407                           
 51408                           ;i2c_s.c: 304: BitSet(&DtI2C.PORTD,5,PFN._off);
 51409  001496  0E01               	movlw	high (_DtI2C+15)
 51410  001498  6E04               	movwf	?_BitSet+1,c
 51411  00149A  0EEC               	movlw	low (_DtI2C+15)
 51412  00149C  6E03               	movwf	?_BitSet,c
 51413  00149E  0E05               	movlw	5
 51414  0014A0  6E05               	movwf	?_BitSet+2,c
 51415  0014A2  0E00               	movlw	0
 51416  0014A4  B1BA               	btfsc	_PFN& (0+255),0,b
 51417  0014A6  0E01               	movlw	1
 51418  0014A8  6E06               	movwf	?_BitSet+3,c
 51419  0014AA  ECDD  F051         	call	_BitSet	;wreg free
 51420                           
 51421                           ;i2c_s.c: 305: BitSet(&DtI2C.PORTD,6,PFN._zima);
 51422  0014AE  0E01               	movlw	high (_DtI2C+15)
 51423  0014B0  6E04               	movwf	?_BitSet+1,c
 51424  0014B2  0EEC               	movlw	low (_DtI2C+15)
 51425  0014B4  6E03               	movwf	?_BitSet,c
 51426  0014B6  0E06               	movlw	6
 51427  0014B8  6E05               	movwf	?_BitSet+2,c
 51428  0014BA  0E00               	movlw	0
 51429  0014BC  B5BA               	btfsc	_PFN& (0+255),2,b
 51430  0014BE  0E01               	movlw	1
 51431  0014C0  6E06               	movwf	?_BitSet+3,c
 51432  0014C2  ECDD  F051         	call	_BitSet	;wreg free
 51433                           
 51434                           ; BSR set to: 1
 51435                           ;i2c_s.c: 307: if(DtKNF.tpkt!=0)
 51436  0014C6  5151               	movf	(_DtKNF+7)& (0+255),w,b
 51437  0014C8  E017               	bz	i2l27324
 51438                           
 51439                           ; BSR set to: 1
 51440                           ;i2c_s.c: 308: {
 51441                           ;i2c_s.c: 309: BitSet(&DtI2C.ST_GLOBAL0,0,(!M._AKTYWNE_SRW&&!M._pob_KCO)?RdPrt(11):0);
 51442  0014CA  0100               	movlb	0	; () banked
 51443  0014CC  5173               	movf	(_M+19)& (0+255),w,b
 51444  0014CE  1172               	iorwf	(_M+18)& (0+255),w,b
 51445  0014D0  E103               	bnz	i2l244
 51446                           
 51447                           ; BSR set to: 0
 51448  0014D2  5161               	movf	(_M+1)& (0+255),w,b
 51449  0014D4  1160               	iorwf	_M& (0+255),w,b
 51450  0014D6  E002               	bz	i2l27322
 51451  0014D8                     i2l244:
 51452                           
 51453                           ; BSR set to: 0
 51454  0014D8  6A0A               	clrf	_FormatDataIMY$1098,c
 51455  0014DA  D007               	goto	L103
 51456  0014DC                     i2l27322:
 51457                           
 51458                           ; BSR set to: 0
 51459  0014DC  0E0B               	movlw	11
 51460  0014DE  ECF4  F058         	call	i2_RdPrt
 51461  0014E2  0E00               	movlw	0
 51462  0014E4  B0D8               	btfsc	status,0,c
 51463  0014E6  0E01               	movlw	1
 51464  0014E8  6E0A               	movwf	_FormatDataIMY$1098,c
 51465  0014EA                     L103:
 51466  0014EA  6A0B               	clrf	_FormatDataIMY$1098+1,c
 51467                           
 51468                           ; BSR set to: 0
 51469  0014EC  DA7F               	call	PL144	;call to abstracted procedure
 51470  0014EE  C00A  F006         	movff	_FormatDataIMY$1098,?_BitSet+3
 51471  0014F2  ECDD  F051         	call	_BitSet	;wreg free
 51472                           
 51473                           ;i2c_s.c: 310: }
 51474  0014F6  D030               	goto	i2l245
 51475  0014F8                     i2l27324:
 51476                           
 51477                           ; BSR set to: 1
 51478                           ;i2c_s.c: 311: else
 51479                           ;i2c_s.c: 312: {
 51480                           ;i2c_s.c: 313: if((M._pob_AL||M._pob_KCW||M._pob_DzCW)&&M._PRACA) BitSet(&DtI2C.ST_GLOBA
      +                          L0,0,1);
 51481  0014F8  0100               	movlb	0	; () banked
 51482  0014FA  5167               	movf	(_M+7)& (0+255),w,b
 51483  0014FC  1166               	iorwf	(_M+6)& (0+255),w,b
 51484  0014FE  E106               	bnz	i2l248
 51485                           
 51486                           ; BSR set to: 0
 51487  001500  5163               	movf	(_M+3)& (0+255),w,b
 51488  001502  1162               	iorwf	(_M+2)& (0+255),w,b
 51489  001504  E103               	bnz	i2l248
 51490                           
 51491                           ; BSR set to: 0
 51492  001506  516F               	movf	(_M+15)& (0+255),w,b
 51493  001508  116E               	iorwf	(_M+14)& (0+255),w,b
 51494  00150A  E00D               	bz	i2l27332
 51495  00150C                     i2l248:
 51496                           
 51497                           ; BSR set to: 0
 51498  00150C  A57B               	btfss	(_M+27)& (0+255),2,b
 51499  00150E  D00B               	goto	i2l27332
 51500                           
 51501                           ; BSR set to: 0
 51502  001510  0101               	movlb	1	; () banked
 51503  001512  0E01               	movlw	high (_DtI2C+16)
 51504  001514  6E04               	movwf	?_BitSet+1,c
 51505  001516  0EED               	movlw	low (_DtI2C+16)
 51506  001518  6E03               	movwf	?_BitSet,c
 51507  00151A  6A05               	clrf	?_BitSet+2,c
 51508  00151C  0E01               	movlw	1
 51509  00151E  6E06               	movwf	?_BitSet+3,c
 51510  001520  ECDD  F051         	call	_BitSet	;wreg free
 51511  001524  D019               	goto	i2l245
 51512  001526                     i2l27332:
 51513                           
 51514                           ; BSR set to: 0
 51515                           ;i2c_s.c: 314: else
 51516                           ;i2c_s.c: 315: {
 51517                           ;i2c_s.c: 316: if(!M._AKTYWNE_SRW&&!M._pob_KCO)
 51518  001526  5173               	movf	(_M+19)& (0+255),w,b
 51519  001528  1172               	iorwf	(_M+18)& (0+255),w,b
 51520  00152A  E112               	bnz	i2l27346
 51521                           
 51522                           ; BSR set to: 0
 51523  00152C  5161               	movf	(_M+1)& (0+255),w,b
 51524  00152E  1160               	iorwf	_M& (0+255),w,b
 51525  001530  E10F               	bnz	i2l27346
 51526                           
 51527                           ; BSR set to: 0
 51528                           ;i2c_s.c: 317: BitSet(&DtI2C.ST_GLOBAL0,0,(RdPrt(11)&&DtCW._wpz_CW)?1:0);
 51529  001532  6A0D               	clrf	_FormatDataIMY$1099,c
 51530                           
 51531                           ; BSR set to: 0
 51532  001534  0E0B               	movlw	11
 51533  001536  ECF4  F058         	call	i2_RdPrt
 51534  00153A  B0D8               	btfsc	status,0,c
 51535                           
 51536                           ; BSR set to: 0
 51537  00153C  A7CF               	btfss	_DtCW& (0+255),3,b
 51538  00153E  D002               	goto	i2l27344
 51539                           
 51540                           ; BSR set to: 0
 51541  001540  0E01               	movlw	1
 51542  001542  6E0D               	movwf	_FormatDataIMY$1099,c
 51543  001544                     i2l27344:
 51544                           
 51545                           ; BSR set to: 0
 51546  001544  DA53               	call	PL144	;call to abstracted procedure
 51547  001546  C00D  F006         	movff	_FormatDataIMY$1099,?_BitSet+3
 51548  00154A  ECDD  F051         	call	_BitSet	;wreg free
 51549  00154E  D004               	goto	i2l245
 51550  001550                     i2l27346:
 51551                           
 51552                           ; BSR set to: 0
 51553                           ;i2c_s.c: 318: else
 51554                           ;i2c_s.c: 319: BitSet(&DtI2C.ST_GLOBAL0,0,0);
 51555  001550  DA4D               	call	PL144	;call to abstracted procedure
 51556  001552  6A06               	clrf	?_BitSet+3,c
 51557  001554  ECDD  F051         	call	_BitSet	;wreg free
 51558  001558                     i2l245:
 51559                           
 51560                           ; BSR set to: 1
 51561                           ;i2c_s.c: 320: }
 51562                           ;i2c_s.c: 321: }
 51563                           ;i2c_s.c: 322: BitSet(&DtI2C.ST_GLOBAL0,1,RdPrt(12));
 51564  001558  0E01               	movlw	high (_DtI2C+16)
 51565  00155A  6E04               	movwf	?_BitSet+1,c
 51566  00155C  0EED               	movlw	low (_DtI2C+16)
 51567  00155E  6E03               	movwf	?_BitSet,c
 51568  001560  0E01               	movlw	1
 51569  001562  6E05               	movwf	?_BitSet+2,c
 51570  001564  0E0C               	movlw	12
 51571  001566  ECF4  F058         	call	i2_RdPrt
 51572  00156A  0E01               	movlw	1
 51573  00156C  A0D8               	btfss	status,0,c
 51574  00156E  0E00               	movlw	0
 51575  001570  6E06               	movwf	?_BitSet+3,c
 51576  001572  ECDD  F051         	call	_BitSet	;wreg free
 51577                           
 51578                           ;i2c_s.c: 323: BitSet(&DtI2C.ST_GLOBAL0,2,1);
 51579  001576  0101               	movlb	1	; () banked
 51580  001578  0E01               	movlw	high (_DtI2C+16)
 51581  00157A  6E04               	movwf	?_BitSet+1,c
 51582  00157C  0EED               	movlw	low (_DtI2C+16)
 51583  00157E  6E03               	movwf	?_BitSet,c
 51584  001580  0E02               	movlw	2
 51585  001582  6E05               	movwf	?_BitSet+2,c
 51586  001584  0E01               	movlw	1
 51587  001586  6E06               	movwf	?_BitSet+3,c
 51588  001588  ECDD  F051         	call	_BitSet	;wreg free
 51589                           
 51590                           ;i2c_s.c: 324: BitSet(&DtI2C.ST_GLOBAL0,3,RdPrt(1));
 51591  00158C  0E01               	movlw	high (_DtI2C+16)
 51592  00158E  6E04               	movwf	?_BitSet+1,c
 51593  001590  0EED               	movlw	low (_DtI2C+16)
 51594  001592  6E03               	movwf	?_BitSet,c
 51595  001594  0E03               	movlw	3
 51596  001596  6E05               	movwf	?_BitSet+2,c
 51597  001598  0E01               	movlw	1
 51598  00159A  ECF4  F058         	call	i2_RdPrt
 51599  00159E  0E01               	movlw	1
 51600  0015A0  A0D8               	btfss	status,0,c
 51601  0015A2  0E00               	movlw	0
 51602  0015A4  6E06               	movwf	?_BitSet+3,c
 51603  0015A6  ECDD  F051         	call	_BitSet	;wreg free
 51604                           
 51605                           ; BSR set to: 0
 51606                           ;i2c_s.c: 325: if(!M._TURBO)
 51607  0015AA  B37B               	btfsc	(_M+27)& (0+255),1,b
 51608  0015AC  D00C               	goto	i2l27352
 51609                           
 51610                           ; BSR set to: 0
 51611                           ;i2c_s.c: 326: BitSet(&DtI2C.ST_GLOBAL0,4,!RdPrt(2));
 51612  0015AE  0101               	movlb	1	; () banked
 51613  0015B0  DA24               	call	PL160	;call to abstracted procedure
 51614  0015B2  0E02               	movlw	2
 51615  0015B4  ECF4  F058         	call	i2_RdPrt
 51616  0015B8  0E01               	movlw	1
 51617  0015BA  B0D8               	btfsc	status,0,c
 51618  0015BC  0E00               	movlw	0
 51619  0015BE  6E06               	movwf	?_BitSet+3,c
 51620  0015C0  ECDD  F051         	call	_BitSet	;wreg free
 51621  0015C4  D00B               	goto	i2l255
 51622  0015C6                     i2l27352:
 51623                           
 51624                           ; BSR set to: 0
 51625                           ;i2c_s.c: 327: else
 51626                           ;i2c_s.c: 328: BitSet(&DtI2C.ST_GLOBAL0,4,!RdPrt(3));
 51627  0015C6  0101               	movlb	1	; () banked
 51628  0015C8  DA18               	call	PL160	;call to abstracted procedure
 51629  0015CA  0E03               	movlw	3
 51630  0015CC  ECF4  F058         	call	i2_RdPrt
 51631  0015D0  0E01               	movlw	1
 51632  0015D2  B0D8               	btfsc	status,0,c
 51633  0015D4  0E00               	movlw	0
 51634  0015D6  6E06               	movwf	?_BitSet+3,c
 51635  0015D8  ECDD  F051         	call	_BitSet	;wreg free
 51636  0015DC                     i2l255:
 51637                           
 51638                           ; BSR set to: 0
 51639                           ;i2c_s.c: 329: BitSet(&DtI2C.ST_GLOBAL0,5,!RdPrt(8));
 51640  0015DC  0101               	movlb	1	; () banked
 51641  0015DE  0E01               	movlw	high (_DtI2C+16)
 51642  0015E0  6E04               	movwf	?_BitSet+1,c
 51643  0015E2  0EED               	movlw	low (_DtI2C+16)
 51644  0015E4  6E03               	movwf	?_BitSet,c
 51645  0015E6  0E05               	movlw	5
 51646  0015E8  6E05               	movwf	?_BitSet+2,c
 51647  0015EA  0E08               	movlw	8
 51648  0015EC  ECF4  F058         	call	i2_RdPrt
 51649  0015F0  0E01               	movlw	1
 51650  0015F2  B0D8               	btfsc	status,0,c
 51651  0015F4  0E00               	movlw	0
 51652  0015F6  6E06               	movwf	?_BitSet+3,c
 51653  0015F8  ECDD  F051         	call	_BitSet	;wreg free
 51654                           
 51655                           ;i2c_s.c: 330: BitSet(&DtI2C.ST_GLOBAL0,6,PFN._res);
 51656  0015FC  0101               	movlb	1	; () banked
 51657  0015FE  0E01               	movlw	high (_DtI2C+16)
 51658  001600  6E04               	movwf	?_BitSet+1,c
 51659  001602  0EED               	movlw	low (_DtI2C+16)
 51660  001604  6E03               	movwf	?_BitSet,c
 51661  001606  0E06               	movlw	6
 51662  001608  6E05               	movwf	?_BitSet+2,c
 51663  00160A  0E00               	movlw	0
 51664  00160C  B7BC               	btfsc	(_PFN+2)& (0+255),3,b
 51665  00160E  0E01               	movlw	1
 51666  001610  6E06               	movwf	?_BitSet+3,c
 51667  001612  ECDD  F051         	call	_BitSet	;wreg free
 51668                           
 51669                           ;i2c_s.c: 331: BitSet(&DtI2C.ST_GLOBAL0,7,!RdPrt(5));
 51670  001616  0E01               	movlw	high (_DtI2C+16)
 51671  001618  6E04               	movwf	?_BitSet+1,c
 51672  00161A  0EED               	movlw	low (_DtI2C+16)
 51673  00161C  6E03               	movwf	?_BitSet,c
 51674  00161E  0E07               	movlw	7
 51675  001620  6E05               	movwf	?_BitSet+2,c
 51676  001622  0E05               	movlw	5
 51677  001624  ECF4  F058         	call	i2_RdPrt
 51678  001628  0E01               	movlw	1
 51679  00162A  B0D8               	btfsc	status,0,c
 51680  00162C  0E00               	movlw	0
 51681  00162E  6E06               	movwf	?_BitSet+3,c
 51682  001630  ECDD  F051         	call	_BitSet	;wreg free
 51683                           
 51684                           ;i2c_s.c: 333: BitSet(&DtI2C.ST_GLOBAL2,0,DtKNF.opdg);
 51685  001634  0101               	movlb	1	; () banked
 51686  001636  0E01               	movlw	high (_DtI2C+17)
 51687  001638  6E04               	movwf	?_BitSet+1,c
 51688  00163A  0EEE               	movlw	low (_DtI2C+17)
 51689  00163C  6E03               	movwf	?_BitSet,c
 51690  00163E  0E00               	movlw	0
 51691  001640  6A05               	clrf	?_BitSet+2,c
 51692  001642  C159  F006         	movff	_DtKNF+15,?_BitSet+3
 51693  001646  ECDD  F051         	call	_BitSet	;wreg free
 51694                           
 51695                           ;i2c_s.c: 334: BitSet(&DtI2C.ST_GLOBAL2,1,DtKNF.rdgz);
 51696  00164A  0E01               	movlw	high (_DtI2C+17)
 51697  00164C  6E04               	movwf	?_BitSet+1,c
 51698  00164E  0EEE               	movlw	low (_DtI2C+17)
 51699  001650  6E03               	movwf	?_BitSet,c
 51700  001652  0E01               	movlw	1
 51701  001654  6E05               	movwf	?_BitSet+2,c
 51702  001656  C152  F006         	movff	_DtKNF+8,?_BitSet+3
 51703  00165A  ECDD  F051         	call	_BitSet	;wreg free
 51704                           
 51705                           ;i2c_s.c: 335: BitSet(&DtI2C.ST_GLOBAL2,2,0);
 51706  00165E  0E01               	movlw	high (_DtI2C+17)
 51707  001660  6E04               	movwf	?_BitSet+1,c
 51708  001662  0EEE               	movlw	low (_DtI2C+17)
 51709  001664  6E03               	movwf	?_BitSet,c
 51710  001666  0E02               	movlw	2
 51711  001668  6E05               	movwf	?_BitSet+2,c
 51712  00166A  0E00               	movlw	0
 51713  00166C  6A06               	clrf	?_BitSet+3,c
 51714  00166E  ECDD  F051         	call	_BitSet	;wreg free
 51715                           
 51716                           ;i2c_s.c: 336: BitSet(&DtI2C.ST_GLOBAL2,3,RdPrt(9));
 51717  001672  0E01               	movlw	high (_DtI2C+17)
 51718  001674  6E04               	movwf	?_BitSet+1,c
 51719  001676  0EEE               	movlw	low (_DtI2C+17)
 51720  001678  6E03               	movwf	?_BitSet,c
 51721  00167A  0E03               	movlw	3
 51722  00167C  6E05               	movwf	?_BitSet+2,c
 51723  00167E  0E09               	movlw	9
 51724  001680  ECF4  F058         	call	i2_RdPrt
 51725  001684  0E01               	movlw	1
 51726  001686  A0D8               	btfss	status,0,c
 51727  001688  0E00               	movlw	0
 51728  00168A  6E06               	movwf	?_BitSet+3,c
 51729  00168C  ECDD  F051         	call	_BitSet	;wreg free
 51730                           
 51731                           ;i2c_s.c: 337: BitSet(&DtI2C.ST_GLOBAL2,4,RdPrt(9));
 51732  001690  0101               	movlb	1	; () banked
 51733  001692  0E01               	movlw	high (_DtI2C+17)
 51734  001694  6E04               	movwf	?_BitSet+1,c
 51735  001696  0EEE               	movlw	low (_DtI2C+17)
 51736  001698  6E03               	movwf	?_BitSet,c
 51737  00169A  0E04               	movlw	4
 51738  00169C  6E05               	movwf	?_BitSet+2,c
 51739  00169E  0E09               	movlw	9
 51740  0016A0  ECF4  F058         	call	i2_RdPrt
 51741  0016A4  0E01               	movlw	1
 51742  0016A6  A0D8               	btfss	status,0,c
 51743  0016A8  0E00               	movlw	0
 51744  0016AA  6E06               	movwf	?_BitSet+3,c
 51745  0016AC  ECDD  F051         	call	_BitSet	;wreg free
 51746                           
 51747                           ; BSR set to: 0
 51748                           ;i2c_s.c: 338: BitSet(&DtI2C.ST_GLOBAL2,5,PFN._lato||PFN._zima);
 51749  0016B0  0E01               	movlw	1
 51750  0016B2  6E0E               	movwf	_FormatDataIMY$1100,c
 51751                           
 51752                           ; BSR set to: 0
 51753  0016B4  0101               	movlb	1	; () banked
 51754  0016B6  A3BA               	btfss	_PFN& (0+255),1,b
 51755                           
 51756                           ; BSR set to: 1
 51757  0016B8  B5BA               	btfsc	_PFN& (0+255),2,b
 51758  0016BA  D001               	goto	i2l27362
 51759                           
 51760                           ; BSR set to: 1
 51761  0016BC  6A0E               	clrf	_FormatDataIMY$1100,c
 51762  0016BE                     i2l27362:
 51763                           
 51764                           ; BSR set to: 1
 51765  0016BE  0E01               	movlw	high (_DtI2C+17)
 51766  0016C0  6E04               	movwf	?_BitSet+1,c
 51767  0016C2  0EEE               	movlw	low (_DtI2C+17)
 51768  0016C4  6E03               	movwf	?_BitSet,c
 51769  0016C6  0E05               	movlw	5
 51770  0016C8  6E05               	movwf	?_BitSet+2,c
 51771  0016CA  C00E  F006         	movff	_FormatDataIMY$1100,?_BitSet+3
 51772  0016CE  ECDD  F051         	call	_BitSet	;wreg free
 51773                           
 51774                           ; BSR set to: 1
 51775                           ;i2c_s.c: 339: BitSet(&DtI2C.ST_GLOBAL2,6,PFN._lato||PFN._zima);
 51776  0016D2  0E01               	movlw	1
 51777  0016D4  6E0F               	movwf	_FormatDataIMY$1101,c
 51778                           
 51779                           ; BSR set to: 1
 51780  0016D6  A3BA               	btfss	_PFN& (0+255),1,b
 51781                           
 51782                           ; BSR set to: 1
 51783  0016D8  B5BA               	btfsc	_PFN& (0+255),2,b
 51784  0016DA  D001               	goto	i2l27372
 51785                           
 51786                           ; BSR set to: 1
 51787  0016DC  6A0F               	clrf	_FormatDataIMY$1101,c
 51788  0016DE                     i2l27372:
 51789                           
 51790                           ; BSR set to: 1
 51791  0016DE  0E01               	movlw	high (_DtI2C+17)
 51792  0016E0  6E04               	movwf	?_BitSet+1,c
 51793  0016E2  0EEE               	movlw	low (_DtI2C+17)
 51794  0016E4  6E03               	movwf	?_BitSet,c
 51795  0016E6  0E06               	movlw	6
 51796  0016E8  6E05               	movwf	?_BitSet+2,c
 51797  0016EA  C00F  F006         	movff	_FormatDataIMY$1101,?_BitSet+3
 51798  0016EE  ECDD  F051         	call	_BitSet	;wreg free
 51799                           
 51800                           ;i2c_s.c: 340: BitSet(&DtI2C.ST_GLOBAL2,7,!RdPrt(4));
 51801  0016F2  0E01               	movlw	high (_DtI2C+17)
 51802  0016F4  6E04               	movwf	?_BitSet+1,c
 51803  0016F6  0EEE               	movlw	low (_DtI2C+17)
 51804  0016F8  6E03               	movwf	?_BitSet,c
 51805  0016FA  0E07               	movlw	7
 51806  0016FC  6E05               	movwf	?_BitSet+2,c
 51807  0016FE  0E04               	movlw	4
 51808  001700  ECF4  F058         	call	i2_RdPrt
 51809  001704  0E01               	movlw	1
 51810  001706  B0D8               	btfsc	status,0,c
 51811  001708  0E00               	movlw	0
 51812  00170A  6E06               	movwf	?_BitSet+3,c
 51813  00170C  ECDD  F051         	call	_BitSet	;wreg free
 51814                           
 51815                           ;i2c_s.c: 342: BitSet(&DtI2C.ST_GLOBAL3,0,M._ROZRUCH);
 51816  001710  0E01               	movlw	high (_DtI2C+18)
 51817  001712  6E04               	movwf	?_BitSet+1,c
 51818  001714  0EEF               	movlw	low (_DtI2C+18)
 51819  001716  6E03               	movwf	?_BitSet,c
 51820  001718  0E00               	movlw	0
 51821  00171A  6A05               	clrf	?_BitSet+2,c
 51822  00171C  0100               	movlb	0	; () banked
 51823  00171E  B570               	btfsc	(_M+16)& (0+255),2,b
 51824  001720  0E01               	movlw	1
 51825  001722  6E06               	movwf	?_BitSet+3,c
 51826  001724  ECDD  F051         	call	_BitSet	;wreg free
 51827                           
 51828                           ;i2c_s.c: 343: BitSet(&DtI2C.ST_GLOBAL3,1,M._WYLACZ);
 51829  001728  0E01               	movlw	high (_DtI2C+18)
 51830  00172A  6E04               	movwf	?_BitSet+1,c
 51831  00172C  0EEF               	movlw	low (_DtI2C+18)
 51832  00172E  6E03               	movwf	?_BitSet,c
 51833  001730  0E01               	movlw	1
 51834  001732  6E05               	movwf	?_BitSet+2,c
 51835  001734  0E00               	movlw	0
 51836  001736  0100               	movlb	0	; () banked
 51837  001738  B170               	btfsc	(_M+16)& (0+255),0,b
 51838  00173A  0E01               	movlw	1
 51839  00173C  6E06               	movwf	?_BitSet+3,c
 51840  00173E  ECDD  F051         	call	_BitSet	;wreg free
 51841                           
 51842                           ;i2c_s.c: 344: BitSet(&DtI2C.ST_GLOBAL3,2,M._RUSZ_CIAG);
 51843  001742  0E01               	movlw	high (_DtI2C+18)
 51844  001744  6E04               	movwf	?_BitSet+1,c
 51845  001746  0EEF               	movlw	low (_DtI2C+18)
 51846  001748  6E03               	movwf	?_BitSet,c
 51847  00174A  0E02               	movlw	2
 51848  00174C  6E05               	movwf	?_BitSet+2,c
 51849  00174E  0E00               	movlw	0
 51850  001750  0100               	movlb	0	; () banked
 51851  001752  BF70               	btfsc	(_M+16)& (0+255),7,b
 51852  001754  0E01               	movlw	1
 51853  001756  6E06               	movwf	?_BitSet+3,c
 51854  001758  ECDD  F051         	call	_BitSet	;wreg free
 51855                           
 51856                           ;i2c_s.c: 345: BitSet(&DtI2C.ST_GLOBAL3,3,M._RUSZ_POMPE);
 51857  00175C  0E01               	movlw	high (_DtI2C+18)
 51858  00175E  6E04               	movwf	?_BitSet+1,c
 51859  001760  0EEF               	movlw	low (_DtI2C+18)
 51860  001762  6E03               	movwf	?_BitSet,c
 51861  001764  0E03               	movlw	3
 51862  001766  6E05               	movwf	?_BitSet+2,c
 51863  001768  0E00               	movlw	0
 51864  00176A  0100               	movlb	0	; () banked
 51865  00176C  B571               	btfsc	(_M+17)& (0+255),2,b
 51866  00176E  0E01               	movlw	1
 51867  001770  6E06               	movwf	?_BitSet+3,c
 51868  001772  ECDD  F051         	call	_BitSet	;wreg free
 51869                           
 51870                           ;i2c_s.c: 346: BitSet(&DtI2C.ST_GLOBAL3,4,M._RUSZ_NTC_CO);
 51871  001776  0E01               	movlw	high (_DtI2C+18)
 51872  001778  6E04               	movwf	?_BitSet+1,c
 51873  00177A  0EEF               	movlw	low (_DtI2C+18)
 51874  00177C  6E03               	movwf	?_BitSet,c
 51875  00177E  0E04               	movlw	4
 51876  001780  6E05               	movwf	?_BitSet+2,c
 51877  001782  0E00               	movlw	0
 51878  001784  0100               	movlb	0	; () banked
 51879  001786  B17A               	btfsc	(_M+26)& (0+255),0,b
 51880  001788  0E01               	movlw	1
 51881  00178A  6E06               	movwf	?_BitSet+3,c
 51882  00178C  ECDD  F051         	call	_BitSet	;wreg free
 51883                           
 51884                           ;i2c_s.c: 347: BitSet(&DtI2C.ST_GLOBAL3,5,M._RUSZ_PLOMIEN);
 51885  001790  0E01               	movlw	high (_DtI2C+18)
 51886  001792  6E04               	movwf	?_BitSet+1,c
 51887  001794  0EEF               	movlw	low (_DtI2C+18)
 51888  001796  6E03               	movwf	?_BitSet,c
 51889  001798  0E05               	movlw	5
 51890  00179A  6E05               	movwf	?_BitSet+2,c
 51891  00179C  0E00               	movlw	0
 51892  00179E  0100               	movlb	0	; () banked
 51893  0017A0  B171               	btfsc	(_M+17)& (0+255),0,b
 51894  0017A2  0E01               	movlw	1
 51895  0017A4  6E06               	movwf	?_BitSet+3,c
 51896  0017A6  ECDD  F051         	call	_BitSet	;wreg free
 51897                           
 51898                           ;i2c_s.c: 348: BitSet(&DtI2C.ST_GLOBAL3,6,M._RUSZ_STB);
 51899  0017AA  0E01               	movlw	high (_DtI2C+18)
 51900  0017AC  6E04               	movwf	?_BitSet+1,c
 51901  0017AE  0EEF               	movlw	low (_DtI2C+18)
 51902  0017B0  6E03               	movwf	?_BitSet,c
 51903  0017B2  0E06               	movlw	6
 51904  0017B4  6E05               	movwf	?_BitSet+2,c
 51905  0017B6  0E00               	movlw	0
 51906  0017B8  0100               	movlb	0	; () banked
 51907  0017BA  B77A               	btfsc	(_M+26)& (0+255),3,b
 51908  0017BC  0E01               	movlw	1
 51909  0017BE  6E06               	movwf	?_BitSet+3,c
 51910  0017C0  ECDD  F051         	call	_BitSet	;wreg free
 51911                           
 51912                           ;i2c_s.c: 349: BitSet(&DtI2C.ST_GLOBAL3,7,M._BLOKUJ_3M);
 51913  0017C4  0E01               	movlw	high (_DtI2C+18)
 51914  0017C6  6E04               	movwf	?_BitSet+1,c
 51915  0017C8  0EEF               	movlw	low (_DtI2C+18)
 51916  0017CA  6E03               	movwf	?_BitSet,c
 51917  0017CC  0E07               	movlw	7
 51918  0017CE  6E05               	movwf	?_BitSet+2,c
 51919  0017D0  0E00               	movlw	0
 51920  0017D2  0100               	movlb	0	; () banked
 51921  0017D4  B771               	btfsc	(_M+17)& (0+255),3,b
 51922  0017D6  0E01               	movlw	1
 51923  0017D8  6E06               	movwf	?_BitSet+3,c
 51924  0017DA  ECDD  F051         	call	_BitSet	;wreg free
 51925                           
 51926                           ;i2c_s.c: 351: BitSet(&DtI2C.ST_GLOBAL4,0,M._RUSZ_48);
 51927  0017DE  0E01               	movlw	high (_DtI2C+19)
 51928  0017E0  6E04               	movwf	?_BitSet+1,c
 51929  0017E2  0EF0               	movlw	low (_DtI2C+19)
 51930  0017E4  6E03               	movwf	?_BitSet,c
 51931  0017E6  0E00               	movlw	0
 51932  0017E8  6A05               	clrf	?_BitSet+2,c
 51933  0017EA  0100               	movlb	0	; () banked
 51934  0017EC  B770               	btfsc	(_M+16)& (0+255),3,b
 51935  0017EE  0E01               	movlw	1
 51936  0017F0  6E06               	movwf	?_BitSet+3,c
 51937  0017F2  ECDD  F051         	call	_BitSet	;wreg free
 51938                           
 51939                           ;i2c_s.c: 352: BitSet(&DtI2C.ST_GLOBAL4,1,0);
 51940  0017F6  0101               	movlb	1	; () banked
 51941  0017F8  0E01               	movlw	high (_DtI2C+19)
 51942  0017FA  6E04               	movwf	?_BitSet+1,c
 51943  0017FC  0EF0               	movlw	low (_DtI2C+19)
 51944  0017FE  6E03               	movwf	?_BitSet,c
 51945  001800  0E01               	movlw	1
 51946  001802  6E05               	movwf	?_BitSet+2,c
 51947  001804  0E00               	movlw	0
 51948  001806  6A06               	clrf	?_BitSet+3,c
 51949  001808  ECDD  F051         	call	_BitSet	;wreg free
 51950                           
 51951                           ;i2c_s.c: 353: BitSet(&DtI2C.ST_GLOBAL4,2,M._MODULUJ);
 51952  00180C  0E01               	movlw	high (_DtI2C+19)
 51953  00180E  6E04               	movwf	?_BitSet+1,c
 51954  001810  0EF0               	movlw	low (_DtI2C+19)
 51955  001812  6E03               	movwf	?_BitSet,c
 51956  001814  0E02               	movlw	2
 51957  001816  6E05               	movwf	?_BitSet+2,c
 51958  001818  0E00               	movlw	0
 51959  00181A  0100               	movlb	0	; () banked
 51960  00181C  BB71               	btfsc	(_M+17)& (0+255),5,b
 51961  00181E  0E01               	movlw	1
 51962  001820  6E06               	movwf	?_BitSet+3,c
 51963  001822  ECDD  F051         	call	_BitSet	;wreg free
 51964                           
 51965                           ;i2c_s.c: 354: BitSet(&DtI2C.ST_GLOBAL4,3,0);
 51966  001826  0101               	movlb	1	; () banked
 51967  001828  0E01               	movlw	high (_DtI2C+19)
 51968  00182A  6E04               	movwf	?_BitSet+1,c
 51969  00182C  0EF0               	movlw	low (_DtI2C+19)
 51970  00182E  6E03               	movwf	?_BitSet,c
 51971  001830  0E03               	movlw	3
 51972  001832  6E05               	movwf	?_BitSet+2,c
 51973  001834  0E00               	movlw	0
 51974  001836  6A06               	clrf	?_BitSet+3,c
 51975  001838  ECDD  F051         	call	_BitSet	;wreg free
 51976                           
 51977                           ;i2c_s.c: 355: BitSet(&DtI2C.ST_GLOBAL4,4,M._OST_PL);
 51978  00183C  0E01               	movlw	high (_DtI2C+19)
 51979  00183E  6E04               	movwf	?_BitSet+1,c
 51980  001840  0EF0               	movlw	low (_DtI2C+19)
 51981  001842  6E03               	movwf	?_BitSet,c
 51982  001844  0E04               	movlw	4
 51983  001846  6E05               	movwf	?_BitSet+2,c
 51984  001848  0E00               	movlw	0
 51985  00184A  0100               	movlb	0	; () banked
 51986  00184C  B77B               	btfsc	(_M+27)& (0+255),3,b
 51987  00184E  0E01               	movlw	1
 51988  001850  6E06               	movwf	?_BitSet+3,c
 51989  001852  ECDD  F051         	call	_BitSet	;wreg free
 51990                           
 51991                           ;i2c_s.c: 356: BitSet(&DtI2C.ST_GLOBAL4,5,M._VWYBIEG);
 51992  001856  0E01               	movlw	high (_DtI2C+19)
 51993  001858  6E04               	movwf	?_BitSet+1,c
 51994  00185A  0EF0               	movlw	low (_DtI2C+19)
 51995  00185C  6E03               	movwf	?_BitSet,c
 51996  00185E  0E05               	movlw	5
 51997  001860  6E05               	movwf	?_BitSet+2,c
 51998  001862  0E00               	movlw	0
 51999  001864  0100               	movlb	0	; () banked
 52000  001866  BD70               	btfsc	(_M+16)& (0+255),6,b
 52001  001868  0E01               	movlw	1
 52002  00186A  6E06               	movwf	?_BitSet+3,c
 52003  00186C  ECDD  F051         	call	_BitSet	;wreg free
 52004                           
 52005                           ;i2c_s.c: 357: BitSet(&DtI2C.ST_GLOBAL4,6,0);
 52006  001870  0101               	movlb	1	; () banked
 52007  001872  0E01               	movlw	high (_DtI2C+19)
 52008  001874  6E04               	movwf	?_BitSet+1,c
 52009  001876  0EF0               	movlw	low (_DtI2C+19)
 52010  001878  6E03               	movwf	?_BitSet,c
 52011  00187A  0E06               	movlw	6
 52012  00187C  6E05               	movwf	?_BitSet+2,c
 52013  00187E  0E00               	movlw	0
 52014  001880  6A06               	clrf	?_BitSet+3,c
 52015  001882  ECDD  F051         	call	_BitSet	;wreg free
 52016                           
 52017                           ;i2c_s.c: 358: BitSet(&DtI2C.ST_GLOBAL4,7,M._ZMKCOCW);
 52018  001886  0E01               	movlw	high (_DtI2C+19)
 52019  001888  6E04               	movwf	?_BitSet+1,c
 52020  00188A  0EF0               	movlw	low (_DtI2C+19)
 52021  00188C  6E03               	movwf	?_BitSet,c
 52022  00188E  0E07               	movlw	7
 52023  001890  6E05               	movwf	?_BitSet+2,c
 52024  001892  0E00               	movlw	0
 52025  001894  0100               	movlb	0	; () banked
 52026  001896  B370               	btfsc	(_M+16)& (0+255),1,b
 52027  001898  0E01               	movlw	1
 52028  00189A  6E06               	movwf	?_BitSet+3,c
 52029  00189C  ECDD  F051         	call	_BitSet	;wreg free
 52030                           
 52031                           ; BSR set to: 0
 52032                           ;i2c_s.c: 360: DtI2C.TPRZ_CW=0;
 52033  0018A0  0101               	movlb	1	; () banked
 52034  0018A2  6BF1               	clrf	(_DtI2C+20)& (0+255),b
 52035                           
 52036                           ; BSR set to: 1
 52037                           ;i2c_s.c: 362: DtI2C.ST0_WSW=0;
 52038  0018A4  6BF2               	clrf	(_DtI2C+21)& (0+255),b
 52039                           
 52040                           ; BSR set to: 1
 52041                           ;i2c_s.c: 363: BitSet(&DtI2C.ST0_WSW,0,!M.ERR_BTY&&M._RUSZ_PLOMIEN);
 52042  0018A6  6A10               	clrf	_FormatDataIMY$1102,c
 52043                           
 52044                           ; BSR set to: 1
 52045  0018A8  0100               	movlb	0	; () banked
 52046  0018AA  6782               	tstfsz	(_M+34)& (0+255),b
 52047  0018AC  D004               	goto	i2l27386
 52048                           
 52049                           ; BSR set to: 0
 52050  0018AE  A171               	btfss	(_M+17)& (0+255),0,b
 52051  0018B0  D002               	goto	i2l27386
 52052                           
 52053                           ; BSR set to: 0
 52054  0018B2  0E01               	movlw	1
 52055  0018B4  6E10               	movwf	_FormatDataIMY$1102,c
 52056  0018B6                     i2l27386:
 52057                           
 52058                           ; BSR set to: 0
 52059  0018B6  0101               	movlb	1	; () banked
 52060  0018B8  0E01               	movlw	high (_DtI2C+21)
 52061  0018BA  6E04               	movwf	?_BitSet+1,c
 52062  0018BC  0EF2               	movlw	low (_DtI2C+21)
 52063  0018BE  6E03               	movwf	?_BitSet,c
 52064  0018C0  0E00               	movlw	0
 52065  0018C2  6A05               	clrf	?_BitSet+2,c
 52066  0018C4  C010  F006         	movff	_FormatDataIMY$1102,?_BitSet+3
 52067  0018C8  ECDD  F051         	call	_BitSet	;wreg free
 52068                           
 52069                           ; BSR set to: 1
 52070                           ;i2c_s.c: 364: BitSet(&DtI2C.ST0_WSW,1,!M.ERR_BTY&&M._RUSZ_STB);
 52071  0018CC  6A11               	clrf	_FormatDataIMY$1103,c
 52072                           
 52073                           ; BSR set to: 1
 52074  0018CE  0100               	movlb	0	; () banked
 52075  0018D0  6782               	tstfsz	(_M+34)& (0+255),b
 52076  0018D2  D004               	goto	i2l27396
 52077                           
 52078                           ; BSR set to: 0
 52079  0018D4  A77A               	btfss	(_M+26)& (0+255),3,b
 52080  0018D6  D002               	goto	i2l27396
 52081                           
 52082                           ; BSR set to: 0
 52083  0018D8  0E01               	movlw	1
 52084  0018DA  6E11               	movwf	_FormatDataIMY$1103,c
 52085  0018DC                     i2l27396:
 52086                           
 52087                           ; BSR set to: 0
 52088  0018DC  0101               	movlb	1	; () banked
 52089  0018DE  0E01               	movlw	high (_DtI2C+21)
 52090  0018E0  6E04               	movwf	?_BitSet+1,c
 52091  0018E2  0EF2               	movlw	low (_DtI2C+21)
 52092  0018E4  6E03               	movwf	?_BitSet,c
 52093  0018E6  0E01               	movlw	1
 52094  0018E8  6E05               	movwf	?_BitSet+2,c
 52095  0018EA  C011  F006         	movff	_FormatDataIMY$1103,?_BitSet+3
 52096  0018EE  ECDD  F051         	call	_BitSet	;wreg free
 52097                           
 52098                           ; BSR set to: 1
 52099                           ;i2c_s.c: 365: BitSet(&DtI2C.ST0_WSW,2,!M.ERR_BTY&&M._RUSZ_CIAG&&M._prb_CIG);
 52100  0018F2  6A12               	clrf	_FormatDataIMY$1104,c
 52101                           
 52102                           ; BSR set to: 1
 52103  0018F4  0100               	movlb	0	; () banked
 52104  0018F6  6782               	tstfsz	(_M+34)& (0+255),b
 52105  0018F8  D005               	goto	i2l27408
 52106                           
 52107                           ; BSR set to: 0
 52108  0018FA  BF70               	btfsc	(_M+16)& (0+255),7,b
 52109                           
 52110                           ; BSR set to: 0
 52111  0018FC  A17C               	btfss	(_M+28)& (0+255),0,b
 52112  0018FE  D002               	goto	i2l27408
 52113                           
 52114                           ; BSR set to: 0
 52115  001900  0E01               	movlw	1
 52116  001902  6E12               	movwf	_FormatDataIMY$1104,c
 52117  001904                     i2l27408:
 52118                           
 52119                           ; BSR set to: 0
 52120  001904  0101               	movlb	1	; () banked
 52121  001906  0E01               	movlw	high (_DtI2C+21)
 52122  001908  6E04               	movwf	?_BitSet+1,c
 52123  00190A  0EF2               	movlw	low (_DtI2C+21)
 52124  00190C  6E03               	movwf	?_BitSet,c
 52125  00190E  0E02               	movlw	2
 52126  001910  6E05               	movwf	?_BitSet+2,c
 52127  001912  C012  F006         	movff	_FormatDataIMY$1104,?_BitSet+3
 52128  001916  ECDD  F051         	call	_BitSet	;wreg free
 52129                           
 52130                           ; BSR set to: 1
 52131                           ;i2c_s.c: 366: if(DtKNF.robg==0) BitSet(&DtI2C.ST0_WSW,4,!M.ERR_BTY&&M._RUSZ_POMPE&&M._p
      +                          rb_PRZ);
 52132  00191A  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 52133  00191C  D051               	goto	i2l27444
 52134                           
 52135                           ; BSR set to: 1
 52136  00191E  6A13               	clrf	_FormatDataIMY$1105,c
 52137  001920  0100               	movlb	0	; () banked
 52138  001922  6782               	tstfsz	(_M+34)& (0+255),b
 52139  001924  D005               	goto	i2l27420
 52140                           
 52141                           ; BSR set to: 0
 52142  001926  B571               	btfsc	(_M+17)& (0+255),2,b
 52143                           
 52144                           ; BSR set to: 0
 52145  001928  A37C               	btfss	(_M+28)& (0+255),1,b
 52146  00192A  D002               	goto	i2l27420
 52147                           
 52148                           ; BSR set to: 0
 52149  00192C  0E01               	movlw	1
 52150  00192E  6E13               	movwf	_FormatDataIMY$1105,c
 52151  001930                     i2l27420:
 52152                           
 52153                           ; BSR set to: 0
 52154  001930  0101               	movlb	1	; () banked
 52155  001932  0E01               	movlw	high (_DtI2C+21)
 52156  001934  6E04               	movwf	?_BitSet+1,c
 52157  001936  0EF2               	movlw	low (_DtI2C+21)
 52158  001938  6E03               	movwf	?_BitSet,c
 52159  00193A  0E04               	movlw	4
 52160  00193C  6E05               	movwf	?_BitSet+2,c
 52161  00193E  C013  F006         	movff	_FormatDataIMY$1105,?_BitSet+3
 52162  001942  ECDD  F051         	call	_BitSet	;wreg free
 52163  001946  D03C               	goto	i2l27444
 52164  001948                     i2l27422:
 52165                           
 52166                           ; BSR set to: 0
 52167                           ;i2c_s.c: 371: DtI2C.ERR_BTY=1;
 52168  001948  0E01               	movlw	1
 52169  00194A  0101               	movlb	1	; () banked
 52170  00194C  6FF3               	movwf	(_DtI2C+22)& (0+255),b
 52171                           
 52172                           ;i2c_s.c: 372: break;
 52173  00194E  0C01               	retlw	1
 52174  001950                     i2l27424:
 52175                           
 52176                           ; BSR set to: 0
 52177                           ;i2c_s.c: 374: DtI2C.ERR_BTY=2;
 52178  001950  0E02               	movlw	2
 52179  001952  0101               	movlb	1	; () banked
 52180  001954  6FF3               	movwf	(_DtI2C+22)& (0+255),b
 52181                           
 52182                           ;i2c_s.c: 375: break;
 52183  001956  0C02               	retlw	2
 52184  001958                     i2l27426:
 52185                           
 52186                           ; BSR set to: 0
 52187                           ;i2c_s.c: 377: DtI2C.ERR_BTY=3;
 52188  001958  0E03               	movlw	3
 52189  00195A  0101               	movlb	1	; () banked
 52190  00195C  6FF3               	movwf	(_DtI2C+22)& (0+255),b
 52191                           
 52192                           ;i2c_s.c: 378: break;
 52193  00195E  0C03               	retlw	3
 52194  001960                     i2l27428:
 52195                           
 52196                           ; BSR set to: 0
 52197                           ;i2c_s.c: 380: BitSet(&DtI2C.ST0_WSW,3,1);
 52198  001960  0101               	movlb	1	; () banked
 52199  001962  0E01               	movlw	high (_DtI2C+21)
 52200  001964  6E04               	movwf	?_BitSet+1,c
 52201  001966  0EF2               	movlw	low (_DtI2C+21)
 52202  001968  6E03               	movwf	?_BitSet,c
 52203  00196A  0E03               	movlw	3
 52204  00196C  D024               	goto	L107
 52205  00196E                     i2l275:
 52206                           
 52207                           ; BSR set to: 0
 52208                           ;i2c_s.c: 383: if(DtKNF.robg==0) DtI2C.ERR_BTY=5;
 52209  00196E  0101               	movlb	1	; () banked
 52210  001970  6758               	tstfsz	(_DtKNF+14)& (0+255),b
 52211  001972  D003               	goto	i2l27432
 52212                           
 52213                           ; BSR set to: 1
 52214  001974  0E05               	movlw	5
 52215  001976  6FF3               	movwf	(_DtI2C+22)& (0+255),b
 52216  001978  0C05               	retlw	5
 52217  00197A                     i2l27432:
 52218                           
 52219                           ; BSR set to: 1
 52220                           ;i2c_s.c: 384: else BitSet(&DtI2C.ST0_WSW,4,1);
 52221  00197A  0E01               	movlw	high (_DtI2C+21)
 52222  00197C  6E04               	movwf	?_BitSet+1,c
 52223  00197E  0EF2               	movlw	low (_DtI2C+21)
 52224  001980  6E03               	movwf	?_BitSet,c
 52225  001982  0E04               	movlw	4
 52226  001984  D018               	goto	L107
 52227  001986                     i2l27434:
 52228                           
 52229                           ; BSR set to: 0
 52230                           ;i2c_s.c: 387: DtI2C.ERR_BTY=6;
 52231  001986  0E06               	movlw	6
 52232  001988  0101               	movlb	1	; () banked
 52233  00198A  6FF3               	movwf	(_DtI2C+22)& (0+255),b
 52234                           
 52235                           ;i2c_s.c: 388: break;
 52236  00198C  0C06               	retlw	6
 52237  00198E                     i2l27436:
 52238                           
 52239                           ; BSR set to: 0
 52240                           ;i2c_s.c: 390: BitSet(&DtI2C.ST0_WSW,5,1);
 52241  00198E  0101               	movlb	1	; () banked
 52242  001990  0E01               	movlw	high (_DtI2C+21)
 52243  001992  6E04               	movwf	?_BitSet+1,c
 52244  001994  0EF2               	movlw	low (_DtI2C+21)
 52245  001996  6E03               	movwf	?_BitSet,c
 52246  001998  0E05               	movlw	5
 52247  00199A  D00D               	goto	L107
 52248  00199C                     i2l27438:
 52249                           
 52250                           ; BSR set to: 0
 52251                           ;i2c_s.c: 393: BitSet(&DtI2C.ST0_WSW,6,1);
 52252  00199C  0101               	movlb	1	; () banked
 52253  00199E  0E01               	movlw	high (_DtI2C+21)
 52254  0019A0  6E04               	movwf	?_BitSet+1,c
 52255  0019A2  0EF2               	movlw	low (_DtI2C+21)
 52256  0019A4  6E03               	movwf	?_BitSet,c
 52257  0019A6  0E06               	movlw	6
 52258  0019A8  D006               	goto	L107
 52259  0019AA                     i2l27440:
 52260                           
 52261                           ; BSR set to: 0
 52262                           ;i2c_s.c: 396: BitSet(&DtI2C.ST0_WSW,7,1);
 52263  0019AA  0101               	movlb	1	; () banked
 52264  0019AC  0E01               	movlw	high (_DtI2C+21)
 52265  0019AE  6E04               	movwf	?_BitSet+1,c
 52266  0019B0  0EF2               	movlw	low (_DtI2C+21)
 52267  0019B2  6E03               	movwf	?_BitSet,c
 52268  0019B4  0E07               	movlw	7
 52269  0019B6                     L107:
 52270  0019B6  6E05               	movwf	?_BitSet+2,c
 52271  0019B8  0E01               	movlw	1
 52272  0019BA  6E06               	movwf	?_BitSet+3,c
 52273  0019BC  EFDD  F051         	goto	_BitSet	;wreg free
 52274  0019C0                     i2l27444:
 52275                           
 52276                           ; BSR set to: 1
 52277  0019C0  0100               	movlb	0	; () banked
 52278  0019C2  5182               	movf	(_M+34)& (0+255),w,b
 52279                           
 52280                           ; Switch size 1, requested type "space"
 52281                           ; Number of cases is 9, Range of values is 1 to 9
 52282                           ; switch strategies available:
 52283                           ; Name         Instructions Cycles
 52284                           ; simple_byte           28    15 (average)
 52285                           ;	Chosen strategy is simple_byte
 52286  0019C4  0A01               	xorlw	1	; case 1
 52287  0019C6  E0C0               	bz	i2l27422
 52288  0019C8  0A03               	xorlw	3	; case 2
 52289  0019CA  E0C2               	bz	i2l27424
 52290  0019CC  0A01               	xorlw	1	; case 3
 52291  0019CE  E0C4               	bz	i2l27426
 52292  0019D0  0A07               	xorlw	7	; case 4
 52293  0019D2  E0C6               	bz	i2l27428
 52294  0019D4  0A01               	xorlw	1	; case 5
 52295  0019D6  E0CB               	bz	i2l275
 52296  0019D8  0A03               	xorlw	3	; case 6
 52297  0019DA  E0D5               	bz	i2l27434
 52298  0019DC  0A01               	xorlw	1	; case 7
 52299  0019DE  E0D7               	bz	i2l27436
 52300  0019E0  0A0F               	xorlw	15	; case 8
 52301  0019E2  E0DC               	bz	i2l27438
 52302  0019E4  0A01               	xorlw	1	; case 9
 52303  0019E6  A4D8               	btfss	status,2,c
 52304  0019E8  0012               	return	
 52305  0019EA  D7DF               	goto	i2l27440
 52306  0019EC                     __end_of_FormatDataIMY:
 52307                           	opt stack 0
 52308  0019EC                     PL144:
 52309                           	opt stack 21
 52310  0019EC  0101               	movlb	1	; () banked
 52311  0019EE  0E01               	movlw	high (_DtI2C+16)
 52312  0019F0  6E04               	movwf	?_BitSet+1,c
 52313  0019F2  0EED               	movlw	low (_DtI2C+16)
 52314  0019F4  6E03               	movwf	?_BitSet,c
 52315  0019F6  6A05               	clrf	?_BitSet+2,c
 52316  0019F8  0C00               	retlw	0
 52317  0019FA                     __end_ofPL144:
 52318                           	opt stack 0
 52319  0019FA                     PL160:
 52320                           	opt stack 21
 52321  0019FA  0E01               	movlw	high (_DtI2C+16)
 52322  0019FC  6E04               	movwf	?_BitSet+1,c
 52323  0019FE  0EED               	movlw	low (_DtI2C+16)
 52324  001A00  6E03               	movwf	?_BitSet,c
 52325  001A02  0E04               	movlw	4
 52326  001A04  6E05               	movwf	?_BitSet+2,c
 52327  001A06  0C04               	retlw	4
 52328  001A08                     __end_ofPL160:
 52329                           	opt stack 0
 52330  001A08                     PL196:
 52331                           	opt stack 21
 52332  001A08  0E01               	movlw	high (_DtI2C+14)
 52333  001A0A  6E04               	movwf	?_BitSet+1,c
 52334  001A0C  0EEB               	movlw	low (_DtI2C+14)
 52335  001A0E  6E03               	movwf	?_BitSet,c
 52336  001A10  0E06               	movlw	6
 52337  001A12  6E05               	movwf	?_BitSet+2,c
 52338  001A14  0C00               	retlw	0
 52339  001A16                     __end_ofPL196:
 52340                           	opt stack 0
 52341                           tblptru	equ	0xFF8
 52342                           tblptrh	equ	0xFF7
 52343                           tblptrl	equ	0xFF6
 52344                           tablat	equ	0xFF5
 52345                           prodh	equ	0xFF4
 52346                           prodl	equ	0xFF3
 52347                           intcon	equ	0xFF2
 52348                           postinc0	equ	0xFEE
 52349                           wreg	equ	0xFE8
 52350                           indf1	equ	0xFE7
 52351                           postinc1	equ	0xFE6
 52352                           postdec1	equ	0xFE5
 52353                           fsr1h	equ	0xFE2
 52354                           fsr1l	equ	0xFE1
 52355                           indf2	equ	0xFDF
 52356                           postinc2	equ	0xFDE
 52357                           postdec2	equ	0xFDD
 52358                           fsr2h	equ	0xFDA
 52359                           fsr2l	equ	0xFD9
 52360                           status	equ	0xFD8
 52361                           
 52362 ;; *************** function _BitSet *****************
 52363 ;; Defined at:
 52364 ;;		line 22 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\bit.c"
 52365 ;; Parameters:    Size  Location     Type
 52366 ;;  data            2    2[COMRAM] PTR unsigned char 
 52367 ;;		 -> DtI2C(23), 
 52368 ;;  nbit            1    4[COMRAM] const unsigned char 
 52369 ;;  bt              1    5[COMRAM] const unsigned char 
 52370 ;; Auto vars:     Size  Location     Type
 52371 ;;		None
 52372 ;; Return value:  Size  Location     Type
 52373 ;;		None               void
 52374 ;; Registers used:
 52375 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52376 ;; Tracked objects:
 52377 ;;		On entry : E/0
 52378 ;;		On exit  : E/0
 52379 ;;		Unchanged: FFFFFFF1/0
 52380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52383 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52384 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52385 ;;Total ram usage:        7 bytes
 52386 ;; Hardware stack levels used:    1
 52387 ;; This function calls:
 52388 ;;		Nothing
 52389 ;; This function is called by:
 52390 ;;		_FormatDataIMY
 52391 ;; This function uses a non-reentrant model
 52392 ;;
 52393                           
 52394                           	psect	text249
 52395  00A3BA                     __ptext249:
 52396                           	opt stack 0
 52397  00A3BA                     _BitSet:
 52398                           	opt stack 21
 52399                           
 52400                           ;bit.c: 23: if(bt) *data|=1<<nbit;
 52401  00A3BA  5006               	movf	BitSet@bt,w,c
 52402  00A3BC  E00D               	bz	i2l27080
 52403  00A3BE  D81B               	call	PL220	;call to abstracted procedure
 52404  00A3C0  D002               	goto	i2u4680_44
 52405  00A3C2                     i2u4680_45:
 52406  00A3C2  90D8               	bcf	status,0,c
 52407  00A3C4  3608               	rlcf	??_BitSet+1,f,c
 52408  00A3C6                     i2u4680_44:
 52409  00A3C6  2E07               	decfsz	??_BitSet,f,c
 52410  00A3C8  D7FC               	goto	i2u4680_45
 52411  00A3CA  C003  FFD9         	movff	BitSet@data,fsr2l
 52412  00A3CE  C004  FFDA         	movff	BitSet@data+1,fsr2h
 52413  00A3D2  5008               	movf	??_BitSet+1,w,c
 52414  00A3D4  12DF               	iorwf	indf2,f,c
 52415  00A3D6  0012               	return	
 52416  00A3D8                     i2l27080:
 52417                           
 52418                           ;bit.c: 24: else *data&=~(1<<nbit);
 52419  00A3D8  D80E               	call	PL220	;call to abstracted procedure
 52420  00A3DA  D002               	goto	i2u4681_44
 52421  00A3DC                     i2u4681_45:
 52422  00A3DC  90D8               	bcf	status,0,c
 52423  00A3DE  3608               	rlcf	??_BitSet+1,f,c
 52424  00A3E0                     i2u4681_44:
 52425  00A3E0  2E07               	decfsz	??_BitSet,f,c
 52426  00A3E2  D7FC               	goto	i2u4681_45
 52427  00A3E4  1C08               	comf	??_BitSet+1,w,c
 52428  00A3E6  6E09               	movwf	(??_BitSet+2)& (0+255),c
 52429  00A3E8  C003  FFD9         	movff	BitSet@data,fsr2l
 52430  00A3EC  C004  FFDA         	movff	BitSet@data+1,fsr2h
 52431  00A3F0  5009               	movf	??_BitSet+2,w,c
 52432  00A3F2  16DF               	andwf	indf2,f,c
 52433  00A3F4  0012               	return	
 52434  00A3F6                     __end_of_BitSet:
 52435                           	opt stack 0
 52436  00A3F6                     PL220:
 52437                           	opt stack 21
 52438  00A3F6  C005  F007         	movff	BitSet@nbit,??_BitSet
 52439  00A3FA  0E01               	movlw	1
 52440  00A3FC  6E08               	movwf	(??_BitSet+1)& (0+255),c
 52441  00A3FE  2A07               	incf	??_BitSet,f,c
 52442  00A400  0C01               	retlw	1
 52443  00A402                     __end_ofPL220:
 52444                           	opt stack 0
 52445                           tblptru	equ	0xFF8
 52446                           tblptrh	equ	0xFF7
 52447                           tblptrl	equ	0xFF6
 52448                           tablat	equ	0xFF5
 52449                           prodh	equ	0xFF4
 52450                           prodl	equ	0xFF3
 52451                           intcon	equ	0xFF2
 52452                           postinc0	equ	0xFEE
 52453                           wreg	equ	0xFE8
 52454                           indf1	equ	0xFE7
 52455                           postinc1	equ	0xFE6
 52456                           postdec1	equ	0xFE5
 52457                           fsr1h	equ	0xFE2
 52458                           fsr1l	equ	0xFE1
 52459                           indf2	equ	0xFDF
 52460                           postinc2	equ	0xFDE
 52461                           postdec2	equ	0xFDD
 52462                           fsr2h	equ	0xFDA
 52463                           fsr2l	equ	0xFD9
 52464                           status	equ	0xFD8
 52465                           
 52466 ;; *************** function _IntUSARTRC *****************
 52467 ;; Defined at:
 52468 ;;		line 59 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
 52469 ;; Parameters:    Size  Location     Type
 52470 ;;		None
 52471 ;; Auto vars:     Size  Location     Type
 52472 ;;		None
 52473 ;; Return value:  Size  Location     Type
 52474 ;;		None               void
 52475 ;; Registers used:
 52476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 52477 ;; Tracked objects:
 52478 ;;		On entry : 0/0
 52479 ;;		On exit  : 0/0
 52480 ;;		Unchanged: FFFFFFF0/0
 52481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52486 ;;Total ram usage:        0 bytes
 52487 ;; Hardware stack levels used:    1
 52488 ;; Hardware stack levels required when called:    2
 52489 ;; This function calls:
 52490 ;;		_VerifyNDatCHK
 52491 ;; This function is called by:
 52492 ;;		_ISR
 52493 ;; This function uses a non-reentrant model
 52494 ;;
 52495                           
 52496                           	psect	text250
 52497  00937A                     __ptext250:
 52498                           	opt stack 0
 52499  00937A                     _IntUSARTRC:
 52500                           	opt stack 20
 52501                           
 52502                           ;uart9b.c: 60: if(ADDEN&&RX9D)
 52503  00937A  B6AB               	btfsc	4011,3,c	;volatile
 52504  00937C  A0AB               	btfss	4011,0,c	;volatile
 52505  00937E  D00D               	goto	i2l4038
 52506                           
 52507                           ;uart9b.c: 61: {
 52508                           ;uart9b.c: 62: RSerial=RCREG;
 52509  009380  CFAE F03E          	movff	4014,_RSerial	;volatile
 52510                           
 52511                           ;uart9b.c: 63: if(RSerial==0x02)
 52512  009384  503E               	movf	_RSerial,w,c	;volatile
 52513  009386  0A02               	xorlw	2
 52514  009388  A4D8               	btfss	status,2,c
 52515  00938A  0012               	return	
 52516                           
 52517                           ;uart9b.c: 64: {
 52518                           ;uart9b.c: 65: ADDEN=0;
 52519  00938C  96AB               	bcf	4011,3,c	;volatile
 52520                           
 52521                           ;uart9b.c: 66: UADt.indeks=0;
 52522  00938E  0101               	movlb	1	; () banked
 52523  009390  6B7D               	clrf	(_UADt+1)& (0+255),b
 52524                           
 52525                           ; BSR set to: 1
 52526                           ;uart9b.c: 67: bufRUART[UADt.indeks++]=RSerial;
 52527  009392  0E00               	movlw	low _bufRUART
 52528                           
 52529                           ; BSR set to: 3
 52530  009394  D827               	call	PL170	;call to abstracted procedure
 52531                           
 52532                           ; BSR set to: 1
 52533                           ;uart9b.c: 68: UADt.RData=1;
 52534  009396  817C               	bsf	_UADt& (0+255),0,b
 52535  009398  0012               	return	
 52536  00939A                     i2l4038:
 52537                           
 52538                           ;uart9b.c: 71: }
 52539                           ;uart9b.c: 72: RSerial=RCREG;
 52540  00939A  CFAE F03E          	movff	4014,_RSerial	;volatile
 52541                           
 52542                           ;uart9b.c: 73: if (UADt.indeks<35)
 52543  00939E  0E23               	movlw	35
 52544  0093A0  0101               	movlb	1	; () banked
 52545  0093A2  617D               	cpfslt	(_UADt+1)& (0+255),b
 52546  0093A4  D01A               	goto	i2l4042
 52547                           
 52548                           ; BSR set to: 1
 52549                           ;uart9b.c: 74: {
 52550                           ;uart9b.c: 75: bufRUART[UADt.indeks++]=RSerial;
 52551  0093A6  0E00               	movlw	low _bufRUART
 52552                           
 52553                           ; BSR set to: 3
 52554  0093A8  D81D               	call	PL170	;call to abstracted procedure
 52555                           
 52556                           ; BSR set to: 1
 52557                           ;uart9b.c: 76: UADt.RNData=bufRUART[1];
 52558  0093AA  C301  F17E         	movff	_bufRUART+1,_UADt+2
 52559                           
 52560                           ; BSR set to: 1
 52561                           ;uart9b.c: 77: if(VerifyNDatCHK(UADt.RNData))
 52562  0093AE  517E               	movf	(_UADt+2)& (0+255),w,b
 52563  0093B0  EC4C  F05A         	call	_VerifyNDatCHK
 52564  0093B4  0900               	iorlw	0
 52565  0093B6  E011               	bz	i2l4042
 52566                           
 52567                           ; BSR set to: 1
 52568                           ;uart9b.c: 78: {
 52569                           ;uart9b.c: 80: UADt.RNData=UADt.RNData&0b00011111;
 52570  0093B8  517E               	movf	(_UADt+2)& (0+255),w,b
 52571  0093BA  0B1F               	andlw	31
 52572  0093BC  6F7E               	movwf	(_UADt+2)& (0+255),b
 52573                           
 52574                           ; BSR set to: 1
 52575                           ;uart9b.c: 81: if(UADt.RNData>35) UADt.RNData=35;
 52576  0093BE  EE21  F07E         	lfsr	2,_UADt+2
 52577  0093C2  0E23               	movlw	35
 52578  0093C4  64DF               	cpfsgt	indf2,c
 52579  0093C6  D001               	goto	i2l27480
 52580                           
 52581                           ; BSR set to: 1
 52582  0093C8  6F7E               	movwf	(_UADt+2)& (0+255),b
 52583  0093CA                     i2l27480:
 52584                           
 52585                           ; BSR set to: 1
 52586                           ;uart9b.c: 82: if (UADt.indeks>=UADt.RNData)
 52587  0093CA  517E               	movf	(_UADt+2)& (0+255),w,b
 52588  0093CC  5D7D               	subwf	(_UADt+1)& (0+255),w,b
 52589  0093CE  A0D8               	btfss	status,0,c
 52590  0093D0  0012               	return	
 52591                           
 52592                           ; BSR set to: 1
 52593                           ;uart9b.c: 83: {
 52594                           ;uart9b.c: 84: ADDEN=1;
 52595  0093D2  86AB               	bsf	4011,3,c	;volatile
 52596                           
 52597                           ;uart9b.c: 85: UADt.RData=0;
 52598  0093D4  917C               	bcf	_UADt& (0+255),0,b
 52599                           
 52600                           ;uart9b.c: 86: UADt.REnd=1;
 52601  0093D6  837C               	bsf	_UADt& (0+255),1,b
 52602  0093D8  0012               	return	
 52603  0093DA                     i2l4042:
 52604                           
 52605                           ; BSR set to: 1
 52606                           ;uart9b.c: 89: else
 52607                           ;uart9b.c: 90: {
 52608                           ;uart9b.c: 91: ADDEN=1;
 52609  0093DA  86AB               	bsf	4011,3,c	;volatile
 52610                           
 52611                           ;uart9b.c: 92: UADt.RData=0;
 52612  0093DC  917C               	bcf	_UADt& (0+255),0,b
 52613                           
 52614                           ;uart9b.c: 93: UADt.REnd=0;
 52615  0093DE  937C               	bcf	_UADt& (0+255),1,b
 52616                           
 52617                           ;uart9b.c: 94: UADt.RErrBUF=1;
 52618  0093E0  877C               	bsf	_UADt& (0+255),3,b
 52619  0093E2  0012               	return	
 52620  0093E4                     __end_of_IntUSARTRC:
 52621                           	opt stack 0
 52622  0093E4                     PL170:
 52623                           	opt stack 20
 52624  0093E4  257D               	addwf	(_UADt+1)& (0+255),w,b
 52625  0093E6  6ED9               	movwf	fsr2l,c
 52626  0093E8  6ADA               	clrf	fsr2h,c
 52627  0093EA  0E03               	movlw	high _bufRUART
 52628  0093EC  22DA               	addwfc	fsr2h,f,c
 52629  0093EE  C03E  FFDF         	movff	_RSerial,indf2	;volatile
 52630  0093F2  2B7D               	incf	(_UADt+1)& (0+255),f,b
 52631  0093F4  0012               	return	
 52632  0093F6                     __end_ofPL170:
 52633                           	opt stack 0
 52634                           tblptru	equ	0xFF8
 52635                           tblptrh	equ	0xFF7
 52636                           tblptrl	equ	0xFF6
 52637                           tablat	equ	0xFF5
 52638                           prodh	equ	0xFF4
 52639                           prodl	equ	0xFF3
 52640                           intcon	equ	0xFF2
 52641                           postinc0	equ	0xFEE
 52642                           wreg	equ	0xFE8
 52643                           indf1	equ	0xFE7
 52644                           postinc1	equ	0xFE6
 52645                           postdec1	equ	0xFE5
 52646                           fsr1h	equ	0xFE2
 52647                           fsr1l	equ	0xFE1
 52648                           indf2	equ	0xFDF
 52649                           postinc2	equ	0xFDE
 52650                           postdec2	equ	0xFDD
 52651                           fsr2h	equ	0xFDA
 52652                           fsr2l	equ	0xFD9
 52653                           status	equ	0xFD8
 52654                           
 52655 ;; *************** function _IntUSARTTR *****************
 52656 ;; Defined at:
 52657 ;;		line 128 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
 52658 ;; Parameters:    Size  Location     Type
 52659 ;;		None
 52660 ;; Auto vars:     Size  Location     Type
 52661 ;;		None
 52662 ;; Return value:  Size  Location     Type
 52663 ;;		None               void
 52664 ;; Registers used:
 52665 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52666 ;; Tracked objects:
 52667 ;;		On entry : 0/0
 52668 ;;		On exit  : F/1
 52669 ;;		Unchanged: FFFFFFF0/0
 52670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52675 ;;Total ram usage:        0 bytes
 52676 ;; Hardware stack levels used:    1
 52677 ;; This function calls:
 52678 ;;		Nothing
 52679 ;; This function is called by:
 52680 ;;		_ISR
 52681 ;; This function uses a non-reentrant model
 52682 ;;
 52683                           
 52684                           	psect	text251
 52685  00A370                     __ptext251:
 52686                           	opt stack 0
 52687  00A370                     _IntUSARTTR:
 52688                           	opt stack 22
 52689                           
 52690                           ;uart9b.c: 129: if(!UADt.indeks) TX9D=1;
 52691  00A370  0101               	movlb	1	; () banked
 52692  00A372  677D               	tstfsz	(_UADt+1)& (0+255),b
 52693  00A374  D002               	goto	i2l4052
 52694                           
 52695                           ; BSR set to: 1
 52696  00A376  80AC               	bsf	4012,0,c	;volatile
 52697  00A378  D001               	goto	i2l17874
 52698  00A37A                     i2l4052:
 52699                           
 52700                           ; BSR set to: 1
 52701                           ;uart9b.c: 130: else TX9D=0;
 52702  00A37A  90AC               	bcf	4012,0,c	;volatile
 52703  00A37C                     i2l17874:
 52704                           
 52705                           ; BSR set to: 1
 52706                           ;uart9b.c: 131: if(UADt.TNData>35) UADt.TNData=35;
 52707  00A37C  EE21  F07F         	lfsr	2,_UADt+3
 52708  00A380  0E23               	movlw	35
 52709  00A382  64DF               	cpfsgt	indf2,c
 52710  00A384  D001               	goto	i2l17878
 52711                           
 52712                           ; BSR set to: 1
 52713  00A386  6F7F               	movwf	(_UADt+3)& (0+255),b
 52714  00A388                     i2l17878:
 52715                           
 52716                           ; BSR set to: 1
 52717                           ;uart9b.c: 132: if(UADt.indeks>35-1) UADt.indeks=35-1;
 52718  00A388  EE21  F07D         	lfsr	2,_UADt+1
 52719  00A38C  0E22               	movlw	34
 52720  00A38E  64DF               	cpfsgt	indf2,c
 52721  00A390  D001               	goto	i2l17882
 52722                           
 52723                           ; BSR set to: 1
 52724  00A392  6F7D               	movwf	(_UADt+1)& (0+255),b
 52725  00A394                     i2l17882:
 52726                           
 52727                           ; BSR set to: 1
 52728                           ;uart9b.c: 133: TXREG=bufTUART[UADt.indeks++];
 52729  00A394  0E23               	movlw	low _bufTUART
 52730  00A396  0101               	movlb	1	; () banked
 52731  00A398  257D               	addwf	(_UADt+1)& (0+255),w,b
 52732  00A39A  6ED9               	movwf	fsr2l,c
 52733  00A39C  6ADA               	clrf	fsr2h,c
 52734  00A39E  0E03               	movlw	high _bufTUART
 52735  00A3A0  22DA               	addwfc	fsr2h,f,c
 52736  00A3A2  50DF               	movf	indf2,w,c
 52737  00A3A4  6EAD               	movwf	4013,c	;volatile
 52738                           
 52739                           ; BSR set to: 3
 52740  00A3A6  2B7D               	incf	(_UADt+1)& (0+255),f,b
 52741                           
 52742                           ; BSR set to: 1
 52743                           ;uart9b.c: 134: if(UADt.indeks<UADt.TNData) UADt.TData=1;
 52744  00A3A8  517F               	movf	(_UADt+3)& (0+255),w,b
 52745  00A3AA  617D               	cpfslt	(_UADt+1)& (0+255),b
 52746  00A3AC  D002               	goto	i2l4056
 52747                           
 52748                           ; BSR set to: 1
 52749  00A3AE  897C               	bsf	_UADt& (0+255),4,b
 52750  00A3B0  0012               	return	
 52751  00A3B2                     i2l4056:
 52752                           
 52753                           ; BSR set to: 1
 52754                           ;uart9b.c: 135: else
 52755                           ;uart9b.c: 136: {
 52756                           ;uart9b.c: 137: UADt.TData=0;
 52757  00A3B2  997C               	bcf	_UADt& (0+255),4,b
 52758                           
 52759                           ;uart9b.c: 138: UADt.TEnd=1;
 52760  00A3B4  8B7C               	bsf	_UADt& (0+255),5,b
 52761                           
 52762                           ;uart9b.c: 139: TXIE=0;
 52763  00A3B6  989D               	bcf	3997,4,c	;volatile
 52764                           
 52765                           ; BSR set to: 1
 52766  00A3B8  0012               	return	
 52767  00A3BA                     __end_of_IntUSARTTR:
 52768                           	opt stack 0
 52769                           tblptru	equ	0xFF8
 52770                           tblptrh	equ	0xFF7
 52771                           tblptrl	equ	0xFF6
 52772                           tablat	equ	0xFF5
 52773                           prodh	equ	0xFF4
 52774                           prodl	equ	0xFF3
 52775                           intcon	equ	0xFF2
 52776                           postinc0	equ	0xFEE
 52777                           wreg	equ	0xFE8
 52778                           indf1	equ	0xFE7
 52779                           postinc1	equ	0xFE6
 52780                           postdec1	equ	0xFE5
 52781                           fsr1h	equ	0xFE2
 52782                           fsr1l	equ	0xFE1
 52783                           indf2	equ	0xFDF
 52784                           postinc2	equ	0xFDE
 52785                           postdec2	equ	0xFDD
 52786                           fsr2h	equ	0xFDA
 52787                           fsr2l	equ	0xFD9
 52788                           status	equ	0xFD8
 52789                           
 52790 ;; *************** function _ReloadTimer1 *****************
 52791 ;; Defined at:
 52792 ;;		line 55 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\timer1.c"
 52793 ;; Parameters:    Size  Location     Type
 52794 ;;		None
 52795 ;; Auto vars:     Size  Location     Type
 52796 ;;		None
 52797 ;; Return value:  Size  Location     Type
 52798 ;;		None               void
 52799 ;; Registers used:
 52800 ;;		wreg, status,2
 52801 ;; Tracked objects:
 52802 ;;		On entry : 0/0
 52803 ;;		On exit  : 0/0
 52804 ;;		Unchanged: FFFFFFFF/0
 52805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52810 ;;Total ram usage:        0 bytes
 52811 ;; Hardware stack levels used:    1
 52812 ;; This function calls:
 52813 ;;		Nothing
 52814 ;; This function is called by:
 52815 ;;		_ISR
 52816 ;; This function uses a non-reentrant model
 52817 ;;
 52818                           
 52819                           	psect	text252
 52820  00B618                     __ptext252:
 52821                           	opt stack 0
 52822  00B618                     _ReloadTimer1:
 52823                           	opt stack 22
 52824                           
 52825                           ;timer1.c: 56: TMR1H=(unsigned char)(RldT1>>8);
 52826                           
 52827                           ; BSR set to: 1
 52828  00B618  0E63               	movlw	99
 52829  00B61A  6ECF               	movwf	4047,c	;volatile
 52830                           
 52831                           ;timer1.c: 57: TMR1L=(unsigned char)(RldT1&0xFF);
 52832  00B61C  0EBF               	movlw	191
 52833  00B61E  6ECE               	movwf	4046,c	;volatile
 52834  00B620  0CBF               	retlw	191
 52835  00B622                     __end_of_ReloadTimer1:
 52836                           	opt stack 0
 52837                           tblptru	equ	0xFF8
 52838                           tblptrh	equ	0xFF7
 52839                           tblptrl	equ	0xFF6
 52840                           tablat	equ	0xFF5
 52841                           prodh	equ	0xFF4
 52842                           prodl	equ	0xFF3
 52843                           intcon	equ	0xFF2
 52844                           postinc0	equ	0xFEE
 52845                           wreg	equ	0xFE8
 52846                           indf1	equ	0xFE7
 52847                           postinc1	equ	0xFE6
 52848                           postdec1	equ	0xFE5
 52849                           fsr1h	equ	0xFE2
 52850                           fsr1l	equ	0xFE1
 52851                           indf2	equ	0xFDF
 52852                           postinc2	equ	0xFDE
 52853                           postdec2	equ	0xFDD
 52854                           fsr2h	equ	0xFDA
 52855                           fsr2l	equ	0xFD9
 52856                           status	equ	0xFD8
 52857                           
 52858 ;; *************** function _IncRTimer *****************
 52859 ;; Defined at:
 52860 ;;		line 120 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\rtimer.c"
 52861 ;; Parameters:    Size  Location     Type
 52862 ;;		None
 52863 ;; Auto vars:     Size  Location     Type
 52864 ;;  i               1    0[COMRAM] unsigned char 
 52865 ;; Return value:  Size  Location     Type
 52866 ;;		None               void
 52867 ;; Registers used:
 52868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 52869 ;; Tracked objects:
 52870 ;;		On entry : 0/0
 52871 ;;		On exit  : F/1
 52872 ;;		Unchanged: FFFFFFF0/0
 52873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 52874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52877 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52878 ;;Total ram usage:        1 bytes
 52879 ;; Hardware stack levels used:    1
 52880 ;; This function calls:
 52881 ;;		Nothing
 52882 ;; This function is called by:
 52883 ;;		_ISR
 52884 ;; This function uses a non-reentrant model
 52885 ;;
 52886                           
 52887                           	psect	text253
 52888  007A2C                     __ptext253:
 52889                           	opt stack 0
 52890  007A2C                     _IncRTimer:
 52891                           	opt stack 22
 52892                           
 52893                           ;rtimer.c: 122: unsigned char i;
 52894                           ;rtimer.c: 135: for(i=0;i<11;i++)
 52895  007A2C  6A01               	clrf	IncRTimer@i,c
 52896  007A2E                     i2l17896:
 52897                           
 52898                           ;rtimer.c: 136: {
 52899                           ;rtimer.c: 137: dSk[i].cS++;
 52900  007A2E  5001               	movf	IncRTimer@i,w,c
 52901  007A30  0D02               	mullw	2
 52902  007A32  0101               	movlb	1	; () banked
 52903  007A34  D88F               	call	PL118	;call to abstracted procedure
 52904  007A36  2ADF               	incf	indf2,f,c
 52905                           
 52906                           ;rtimer.c: 138: if(dSk[i].cS>9)
 52907  007A38  5001               	movf	IncRTimer@i,w,c
 52908  007A3A  0D02               	mullw	2
 52909  007A3C  D88B               	call	PL118	;call to abstracted procedure
 52910  007A3E  0E09               	movlw	9
 52911  007A40  64DF               	cpfsgt	indf2,c
 52912  007A42  D00F               	goto	i2l17902
 52913                           
 52914                           ; BSR set to: 1
 52915                           ;rtimer.c: 139: {
 52916                           ;rtimer.c: 140: dSk[i].cS=0;
 52917  007A44  5001               	movf	IncRTimer@i,w,c
 52918  007A46  0D02               	mullw	2
 52919  007A48  D885               	call	PL118	;call to abstracted procedure
 52920  007A4A  6ADF               	clrf	indf2,c
 52921                           
 52922                           ;rtimer.c: 141: if(dSk[i].dS<255) dSk[i].dS++;
 52923  007A4C  5001               	movf	IncRTimer@i,w,c
 52924  007A4E  0D02               	mullw	2
 52925  007A50  ECE1  F057         	call	PL128	;call to abstracted procedure
 52926  007A54  1CDF               	comf	indf2,w,c
 52927  007A56  E005               	bz	i2l17902
 52928                           
 52929                           ; BSR set to: 1
 52930  007A58  5001               	movf	IncRTimer@i,w,c
 52931  007A5A  0D02               	mullw	2
 52932  007A5C  ECE1  F057         	call	PL128	;call to abstracted procedure
 52933  007A60  2ADF               	incf	indf2,f,c
 52934  007A62                     i2l17902:
 52935                           
 52936                           ; BSR set to: 1
 52937  007A62  2A01               	incf	IncRTimer@i,f,c
 52938                           
 52939                           ; BSR set to: 1
 52940  007A64  0E0A               	movlw	10
 52941  007A66  6401               	cpfsgt	IncRTimer@i,c
 52942  007A68  D7E2               	goto	i2l17896
 52943                           
 52944                           ; BSR set to: 1
 52945                           ;rtimer.c: 142: }
 52946                           ;rtimer.c: 143: }
 52947                           ;rtimer.c: 148: CommRT.cS++;
 52948  007A6A  2A35               	incf	_CommRT,f,c	;volatile
 52949                           
 52950                           ; BSR set to: 1
 52951                           ;rtimer.c: 149: if(CommRT.cS>9)
 52952  007A6C  0E09               	movlw	9
 52953  007A6E  6435               	cpfsgt	_CommRT,c	;volatile
 52954  007A70  0C09               	retlw	9
 52955                           
 52956                           ; BSR set to: 1
 52957                           ;rtimer.c: 150: {
 52958                           ;rtimer.c: 151: CommRT.cS=0;
 52959  007A72  6A35               	clrf	_CommRT,c	;volatile
 52960                           
 52961                           ; BSR set to: 1
 52962                           ;rtimer.c: 152: CommRT.dS++;
 52963  007A74  2A36               	incf	_CommRT+1,f,c	;volatile
 52964                           
 52965                           ; BSR set to: 1
 52966                           ;rtimer.c: 157: for(i=0;i<16;i++)
 52967  007A76  6A01               	clrf	IncRTimer@i,c
 52968  007A78                     i2l17920:
 52969                           
 52970                           ; BSR set to: 1
 52971                           ;rtimer.c: 158: {
 52972                           ;rtimer.c: 159: Sk[i].dS++;
 52973  007A78  5001               	movf	IncRTimer@i,w,c
 52974  007A7A  0D02               	mullw	2
 52975  007A7C  D872               	call	PL120	;call to abstracted procedure
 52976  007A7E  2ADF               	incf	indf2,f,c
 52977                           
 52978                           ;rtimer.c: 160: if(Sk[i].dS>9)
 52979  007A80  5001               	movf	IncRTimer@i,w,c
 52980  007A82  0D02               	mullw	2
 52981  007A84  D86E               	call	PL120	;call to abstracted procedure
 52982  007A86  0E09               	movlw	9
 52983  007A88  64DF               	cpfsgt	indf2,c
 52984  007A8A  D00F               	goto	i2l17926
 52985                           
 52986                           ; BSR set to: 1
 52987                           ;rtimer.c: 161: {
 52988                           ;rtimer.c: 162: Sk[i].dS=0;
 52989  007A8C  5001               	movf	IncRTimer@i,w,c
 52990  007A8E  0D02               	mullw	2
 52991  007A90  D868               	call	PL120	;call to abstracted procedure
 52992  007A92  6ADF               	clrf	indf2,c
 52993                           
 52994                           ;rtimer.c: 163: if(Sk[i].S<255) Sk[i].S++;
 52995  007A94  5001               	movf	IncRTimer@i,w,c
 52996  007A96  0D02               	mullw	2
 52997  007A98  ECBB  F057         	call	PL124	;call to abstracted procedure
 52998  007A9C  1CDF               	comf	indf2,w,c
 52999  007A9E  E005               	bz	i2l17926
 53000                           
 53001                           ; BSR set to: 1
 53002  007AA0  5001               	movf	IncRTimer@i,w,c
 53003  007AA2  0D02               	mullw	2
 53004  007AA4  ECBB  F057         	call	PL124	;call to abstracted procedure
 53005  007AA8  2ADF               	incf	indf2,f,c
 53006  007AAA                     i2l17926:
 53007                           
 53008                           ; BSR set to: 1
 53009  007AAA  2A01               	incf	IncRTimer@i,f,c
 53010                           
 53011                           ; BSR set to: 1
 53012  007AAC  0E0F               	movlw	15
 53013  007AAE  6401               	cpfsgt	IncRTimer@i,c
 53014  007AB0  D7E3               	goto	i2l17920
 53015                           
 53016                           ; BSR set to: 1
 53017                           ;rtimer.c: 164: }
 53018                           ;rtimer.c: 165: }
 53019                           ;rtimer.c: 168: if(CommRT.dS>9)
 53020  007AB2  EE20  F036         	lfsr	2,_CommRT+1	;volatile
 53021  007AB6  0E09               	movlw	9
 53022  007AB8  64DF               	cpfsgt	indf2,c
 53023  007ABA  0C09               	retlw	9
 53024                           
 53025                           ; BSR set to: 1
 53026                           ;rtimer.c: 169: {
 53027                           ;rtimer.c: 170: CommRT.dS=0;
 53028  007ABC  6A36               	clrf	_CommRT+1,c	;volatile
 53029                           
 53030                           ; BSR set to: 1
 53031                           ;rtimer.c: 171: CommRT.S++;
 53032  007ABE  2A37               	incf	_CommRT+2,f,c	;volatile
 53033                           
 53034                           ; BSR set to: 1
 53035                           ;rtimer.c: 176: for(i=0;i<7;i++)
 53036  007AC0  6A01               	clrf	IncRTimer@i,c
 53037  007AC2                     i2l17942:
 53038                           
 53039                           ; BSR set to: 1
 53040                           ;rtimer.c: 177: {
 53041                           ;rtimer.c: 178: Mn[i].S++;
 53042  007AC2  5001               	movf	IncRTimer@i,w,c
 53043  007AC4  0D02               	mullw	2
 53044  007AC6  D854               	call	PL122	;call to abstracted procedure
 53045  007AC8  2ADF               	incf	indf2,f,c
 53046                           
 53047                           ;rtimer.c: 179: if(Mn[i].S>59)
 53048  007ACA  5001               	movf	IncRTimer@i,w,c
 53049  007ACC  0D02               	mullw	2
 53050  007ACE  D850               	call	PL122	;call to abstracted procedure
 53051  007AD0  0E3B               	movlw	59
 53052  007AD2  64DF               	cpfsgt	indf2,c
 53053  007AD4  D00F               	goto	i2l17948
 53054                           
 53055                           ; BSR set to: 1
 53056                           ;rtimer.c: 180: {
 53057                           ;rtimer.c: 181: Mn[i].S=0;
 53058  007AD6  5001               	movf	IncRTimer@i,w,c
 53059  007AD8  0D02               	mullw	2
 53060  007ADA  D84A               	call	PL122	;call to abstracted procedure
 53061  007ADC  6ADF               	clrf	indf2,c
 53062                           
 53063                           ;rtimer.c: 182: if(Mn[i].M<255) Mn[i].M++;
 53064  007ADE  5001               	movf	IncRTimer@i,w,c
 53065  007AE0  0D02               	mullw	2
 53066  007AE2  EC49  F057         	call	PL132	;call to abstracted procedure
 53067  007AE6  1CDF               	comf	indf2,w,c
 53068  007AE8  E005               	bz	i2l17948
 53069                           
 53070                           ; BSR set to: 1
 53071  007AEA  5001               	movf	IncRTimer@i,w,c
 53072  007AEC  0D02               	mullw	2
 53073  007AEE  EC49  F057         	call	PL132	;call to abstracted procedure
 53074  007AF2  2ADF               	incf	indf2,f,c
 53075  007AF4                     i2l17948:
 53076                           
 53077                           ; BSR set to: 1
 53078  007AF4  2A01               	incf	IncRTimer@i,f,c
 53079                           
 53080                           ; BSR set to: 1
 53081  007AF6  0E06               	movlw	6
 53082  007AF8  6401               	cpfsgt	IncRTimer@i,c
 53083  007AFA  D7E3               	goto	i2l17942
 53084                           
 53085                           ; BSR set to: 1
 53086                           ;rtimer.c: 183: }
 53087                           ;rtimer.c: 184: }
 53088                           ;rtimer.c: 187: if (CommRT.S>59)
 53089  007AFC  EE20  F037         	lfsr	2,_CommRT+2	;volatile
 53090  007B00  0E3B               	movlw	59
 53091  007B02  64DF               	cpfsgt	indf2,c
 53092  007B04  0C3B               	retlw	59
 53093                           
 53094                           ; BSR set to: 1
 53095                           ;rtimer.c: 188: {
 53096                           ;rtimer.c: 189: CommRT.S=0;
 53097  007B06  6A37               	clrf	_CommRT+2,c	;volatile
 53098                           
 53099                           ;rtimer.c: 194: for(i=0;i<3;i++)
 53100  007B08  6A01               	clrf	IncRTimer@i,c
 53101  007B0A                     i2l17960:
 53102                           
 53103                           ; BSR set to: 1
 53104                           ;rtimer.c: 195: {
 53105                           ;rtimer.c: 196: Gd[i].M++;
 53106  007B0A  5001               	movf	IncRTimer@i,w,c
 53107  007B0C  0D02               	mullw	2
 53108  007B0E  D81B               	call	PL116	;call to abstracted procedure
 53109  007B10  2ADF               	incf	indf2,f,c
 53110                           
 53111                           ;rtimer.c: 197: if(Gd[i].M>59)
 53112  007B12  5001               	movf	IncRTimer@i,w,c
 53113  007B14  0D02               	mullw	2
 53114  007B16  D817               	call	PL116	;call to abstracted procedure
 53115  007B18  0E3B               	movlw	59
 53116  007B1A  64DF               	cpfsgt	indf2,c
 53117  007B1C  D00F               	goto	i2l17966
 53118                           
 53119                           ; BSR set to: 1
 53120                           ;rtimer.c: 198: {
 53121                           ;rtimer.c: 199: Gd[i].M=0;
 53122  007B1E  5001               	movf	IncRTimer@i,w,c
 53123  007B20  0D02               	mullw	2
 53124  007B22  D811               	call	PL116	;call to abstracted procedure
 53125  007B24  6ADF               	clrf	indf2,c
 53126                           
 53127                           ;rtimer.c: 200: if(Gd[i].G<255) Gd[i].G++;
 53128  007B26  5001               	movf	IncRTimer@i,w,c
 53129  007B28  0D02               	mullw	2
 53130  007B2A  EC95  F057         	call	PL126	;call to abstracted procedure
 53131  007B2E  1CDF               	comf	indf2,w,c
 53132  007B30  E005               	bz	i2l17966
 53133                           
 53134                           ; BSR set to: 1
 53135  007B32  5001               	movf	IncRTimer@i,w,c
 53136  007B34  0D02               	mullw	2
 53137  007B36  EC95  F057         	call	PL126	;call to abstracted procedure
 53138  007B3A  2ADF               	incf	indf2,f,c
 53139  007B3C                     i2l17966:
 53140                           
 53141                           ; BSR set to: 1
 53142  007B3C  2A01               	incf	IncRTimer@i,f,c
 53143                           
 53144                           ; BSR set to: 1
 53145  007B3E  0E02               	movlw	2
 53146  007B40  6401               	cpfsgt	IncRTimer@i,c
 53147  007B42  D7E3               	goto	i2l17960
 53148  007B44  0C02               	retlw	2
 53149  007B46                     __end_of_IncRTimer:
 53150                           	opt stack 0
 53151  007B46                     PL116:
 53152                           	opt stack 22
 53153  007B46  0E76               	movlw	low _Gd	;volatile
 53154  007B48  24F3               	addwf	prodl,w,c
 53155  007B4A  6ED9               	movwf	fsr2l,c
 53156  007B4C  0E01               	movlw	high _Gd	;volatile
 53157  007B4E  20F4               	addwfc	prodh,w,c
 53158  007B50  6EDA               	movwf	fsr2h,c
 53159  007B52  0012               	return	
 53160  007B54                     __end_ofPL116:
 53161                           	opt stack 0
 53162  007B54                     PL118:
 53163                           	opt stack 22
 53164  007B54  0E20               	movlw	low _dSk	;volatile
 53165  007B56  24F3               	addwf	prodl,w,c
 53166  007B58  6ED9               	movwf	fsr2l,c
 53167  007B5A  0E01               	movlw	high _dSk	;volatile
 53168  007B5C  20F4               	addwfc	prodh,w,c
 53169  007B5E  6EDA               	movwf	fsr2h,c
 53170  007B60  0012               	return	
 53171  007B62                     __end_ofPL118:
 53172                           	opt stack 0
 53173  007B62                     PL120:
 53174                           	opt stack 22
 53175  007B62  0E00               	movlw	low _Sk	;volatile
 53176  007B64  24F3               	addwf	prodl,w,c
 53177  007B66  6ED9               	movwf	fsr2l,c
 53178  007B68  0E01               	movlw	high _Sk	;volatile
 53179  007B6A  20F4               	addwfc	prodh,w,c
 53180  007B6C  6EDA               	movwf	fsr2h,c
 53181  007B6E  0012               	return	
 53182  007B70                     __end_ofPL120:
 53183                           	opt stack 0
 53184  007B70                     PL122:
 53185                           	opt stack 22
 53186  007B70  0E5C               	movlw	low _Mn	;volatile
 53187  007B72  24F3               	addwf	prodl,w,c
 53188  007B74  6ED9               	movwf	fsr2l,c
 53189  007B76  0E01               	movlw	high _Mn	;volatile
 53190  007B78  20F4               	addwfc	prodh,w,c
 53191  007B7A  6EDA               	movwf	fsr2h,c
 53192  007B7C  0012               	return	
 53193  007B7E                     __end_ofPL122:
 53194                           	opt stack 0
 53195                           tblptru	equ	0xFF8
 53196                           tblptrh	equ	0xFF7
 53197                           tblptrl	equ	0xFF6
 53198                           tablat	equ	0xFF5
 53199                           prodh	equ	0xFF4
 53200                           prodl	equ	0xFF3
 53201                           intcon	equ	0xFF2
 53202                           postinc0	equ	0xFEE
 53203                           wreg	equ	0xFE8
 53204                           indf1	equ	0xFE7
 53205                           postinc1	equ	0xFE6
 53206                           postdec1	equ	0xFE5
 53207                           fsr1h	equ	0xFE2
 53208                           fsr1l	equ	0xFE1
 53209                           indf2	equ	0xFDF
 53210                           postinc2	equ	0xFDE
 53211                           postdec2	equ	0xFDD
 53212                           fsr2h	equ	0xFDA
 53213                           fsr2l	equ	0xFD9
 53214                           status	equ	0xFD8
 53215                           
 53216 ;; *************** function _IncPmrTimer *****************
 53217 ;; Defined at:
 53218 ;;		line 70 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pomiar.c"
 53219 ;; Parameters:    Size  Location     Type
 53220 ;;		None
 53221 ;; Auto vars:     Size  Location     Type
 53222 ;;		None
 53223 ;; Return value:  Size  Location     Type
 53224 ;;		None               void
 53225 ;; Registers used:
 53226 ;;		wreg, status,2, status,0
 53227 ;; Tracked objects:
 53228 ;;		On entry : F/1
 53229 ;;		On exit  : F/1
 53230 ;;		Unchanged: FFFFFFF0/0
 53231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53236 ;;Total ram usage:        0 bytes
 53237 ;; Hardware stack levels used:    1
 53238 ;; This function calls:
 53239 ;;		Nothing
 53240 ;; This function is called by:
 53241 ;;		_ISR
 53242 ;; This function uses a non-reentrant model
 53243 ;;
 53244                           
 53245                           	psect	text254
 53246  00B224                     __ptext254:
 53247                           	opt stack 0
 53248  00B224                     _IncPmrTimer:
 53249                           	opt stack 22
 53250                           
 53251                           ; BSR set to: 1
 53252                           ;pomiar.c: 71: if(PmrtimFlt1<0xff) PmrtimFlt1++;
 53253                           
 53254                           ; BSR set to: 1
 53255  00B224  29B6               	incf	_PmrtimFlt1& (0+255),w,b
 53256  00B226  A4D8               	btfss	status,2,c
 53257                           
 53258                           ; BSR set to: 1
 53259  00B228  2BB6               	incf	_PmrtimFlt1& (0+255),f,b
 53260                           
 53261                           ; BSR set to: 1
 53262                           ;pomiar.c: 72: if(PmrtimFlt2<0xff) PmrtimFlt2++;
 53263  00B22A  29B7               	incf	_PmrtimFlt2& (0+255),w,b
 53264  00B22C  A4D8               	btfss	status,2,c
 53265                           
 53266                           ; BSR set to: 1
 53267  00B22E  2BB7               	incf	_PmrtimFlt2& (0+255),f,b
 53268                           
 53269                           ; BSR set to: 1
 53270                           ;pomiar.c: 73: if(PmrtimFlt3<0xffff) PmrtimFlt3++;
 53271  00B230  2990               	incf	_PmrtimFlt3& (0+255),w,b
 53272  00B232  B4D8               	btfsc	status,2,c
 53273  00B234  2991               	incf	(_PmrtimFlt3+1)& (0+255),w,b
 53274  00B236  B4D8               	btfsc	status,2,c
 53275  00B238  0012               	return	
 53276                           
 53277                           ; BSR set to: 1
 53278  00B23A  4B90               	infsnz	_PmrtimFlt3& (0+255),f,b
 53279  00B23C  2B91               	incf	(_PmrtimFlt3+1)& (0+255),f,b
 53280                           
 53281                           ; BSR set to: 1
 53282  00B23E  0012               	return	
 53283  00B240                     __end_of_IncPmrTimer:
 53284                           	opt stack 0
 53285                           tblptru	equ	0xFF8
 53286                           tblptrh	equ	0xFF7
 53287                           tblptrl	equ	0xFF6
 53288                           tablat	equ	0xFF5
 53289                           prodh	equ	0xFF4
 53290                           prodl	equ	0xFF3
 53291                           intcon	equ	0xFF2
 53292                           postinc0	equ	0xFEE
 53293                           wreg	equ	0xFE8
 53294                           indf1	equ	0xFE7
 53295                           postinc1	equ	0xFE6
 53296                           postdec1	equ	0xFE5
 53297                           fsr1h	equ	0xFE2
 53298                           fsr1l	equ	0xFE1
 53299                           indf2	equ	0xFDF
 53300                           postinc2	equ	0xFDE
 53301                           postdec2	equ	0xFDD
 53302                           fsr2h	equ	0xFDA
 53303                           fsr2l	equ	0xFD9
 53304                           status	equ	0xFD8
 53305                           
 53306 ;; *************** function _IncKeyTimer *****************
 53307 ;; Defined at:
 53308 ;;		line 27 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\keypad.c"
 53309 ;; Parameters:    Size  Location     Type
 53310 ;;		None
 53311 ;; Auto vars:     Size  Location     Type
 53312 ;;  i               1    0[COMRAM] unsigned char 
 53313 ;; Return value:  Size  Location     Type
 53314 ;;		None               void
 53315 ;; Registers used:
 53316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53317 ;; Tracked objects:
 53318 ;;		On entry : F/1
 53319 ;;		On exit  : F/2
 53320 ;;		Unchanged: FFFFFFF0/0
 53321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53326 ;;Total ram usage:        1 bytes
 53327 ;; Hardware stack levels used:    1
 53328 ;; This function calls:
 53329 ;;		Nothing
 53330 ;; This function is called by:
 53331 ;;		_ISR
 53332 ;; This function uses a non-reentrant model
 53333 ;;
 53334                           
 53335                           	psect	text255
 53336  008A82                     __ptext255:
 53337                           	opt stack 0
 53338  008A82                     _IncKeyTimer:
 53339                           	opt stack 22
 53340                           
 53341                           ; BSR set to: 1
 53342                           ;keypad.c: 28: unsigned char i;
 53343                           ;keypad.c: 30: for(i=0;i<7;i++)
 53344                           
 53345                           ; BSR set to: 1
 53346  008A82  6A01               	clrf	IncKeyTimer@i,c
 53347  008A84                     i2l17988:
 53348                           
 53349                           ;keypad.c: 31: {
 53350                           ;keypad.c: 32: ky[i].cS++;
 53351  008A84  5001               	movf	IncKeyTimer@i,w,c
 53352  008A86  0D05               	mullw	5
 53353  008A88  0102               	movlb	2	; () banked
 53354  008A8A  D832               	call	PL152	;call to abstracted procedure
 53355  008A8C  2ADF               	incf	indf2,f,c
 53356                           
 53357                           ;keypad.c: 33: if(ky[i].cS>9)
 53358  008A8E  5001               	movf	IncKeyTimer@i,w,c
 53359  008A90  0D05               	mullw	5
 53360  008A92  D82E               	call	PL152	;call to abstracted procedure
 53361  008A94  0E09               	movlw	9
 53362  008A96  64DF               	cpfsgt	indf2,c
 53363  008A98  D009               	goto	i2l17994
 53364                           
 53365                           ; BSR set to: 2
 53366                           ;keypad.c: 34: {
 53367                           ;keypad.c: 35: ky[i].cS=0;
 53368  008A9A  5001               	movf	IncKeyTimer@i,w,c
 53369  008A9C  0D05               	mullw	5
 53370  008A9E  D828               	call	PL152	;call to abstracted procedure
 53371  008AA0  6ADF               	clrf	indf2,c
 53372                           
 53373                           ;keypad.c: 36: if(ky[i].dS<255) ky[i].dS++;
 53374  008AA2  D82D               	call	PL172	;call to abstracted procedure
 53375  008AA4  1CDF               	comf	indf2,w,c
 53376  008AA6  E002               	bz	i2l17994
 53377                           
 53378                           ; BSR set to: 2
 53379  008AA8  D82A               	call	PL172	;call to abstracted procedure
 53380  008AAA  2ADF               	incf	indf2,f,c
 53381  008AAC                     i2l17994:
 53382                           
 53383                           ; BSR set to: 2
 53384  008AAC  2A01               	incf	IncKeyTimer@i,f,c
 53385                           
 53386                           ; BSR set to: 2
 53387  008AAE  0E06               	movlw	6
 53388  008AB0  6401               	cpfsgt	IncKeyTimer@i,c
 53389  008AB2  D7E8               	goto	i2l17988
 53390                           
 53391                           ; BSR set to: 2
 53392                           ;keypad.c: 37: }
 53393                           ;keypad.c: 38: }
 53394                           ;keypad.c: 63: for(i=0;i<7;i++)
 53395  008AB4  6A01               	clrf	IncKeyTimer@i,c
 53396  008AB6                     i2l18002:
 53397                           
 53398                           ; BSR set to: 2
 53399                           ;keypad.c: 64: {
 53400                           ;keypad.c: 65: xxky[i].cS++;
 53401  008AB6  5001               	movf	IncKeyTimer@i,w,c
 53402  008AB8  D813               	call	PL138	;call to abstracted procedure
 53403  008ABA  2ADF               	incf	indf2,f,c
 53404                           
 53405                           ;keypad.c: 66: if(xxky[i].cS>9)
 53406  008ABC  5001               	movf	IncKeyTimer@i,w,c
 53407  008ABE  D810               	call	PL138	;call to abstracted procedure
 53408  008AC0  0E09               	movlw	9
 53409  008AC2  64DF               	cpfsgt	indf2,c
 53410  008AC4  D008               	goto	i2l18008
 53411                           
 53412                           ; BSR set to: 2
 53413                           ;keypad.c: 67: {
 53414                           ;keypad.c: 68: xxky[i].cS=0;
 53415  008AC6  5001               	movf	IncKeyTimer@i,w,c
 53416  008AC8  D80B               	call	PL138	;call to abstracted procedure
 53417  008ACA  6ADF               	clrf	indf2,c
 53418                           
 53419                           ;keypad.c: 69: if(xxky[i].dS<255) xxky[i].dS++;
 53420  008ACC  D821               	call	PL176	;call to abstracted procedure
 53421  008ACE  1CDF               	comf	indf2,w,c
 53422  008AD0  E002               	bz	i2l18008
 53423                           
 53424                           ; BSR set to: 2
 53425  008AD2  D81E               	call	PL176	;call to abstracted procedure
 53426  008AD4  2ADF               	incf	indf2,f,c
 53427  008AD6                     i2l18008:
 53428                           
 53429                           ; BSR set to: 2
 53430  008AD6  2A01               	incf	IncKeyTimer@i,f,c
 53431                           
 53432                           ; BSR set to: 2
 53433  008AD8  0E06               	movlw	6
 53434  008ADA  6401               	cpfsgt	IncKeyTimer@i,c
 53435  008ADC  D7EC               	goto	i2l18002
 53436  008ADE  0C06               	retlw	6
 53437  008AE0                     __end_of_IncKeyTimer:
 53438                           	opt stack 0
 53439  008AE0                     PL138:
 53440                           	opt stack 22
 53441  008AE0  0D05               	mullw	5
 53442  008AE2  0E99               	movlw	low (_xxky+1)
 53443  008AE4  24F3               	addwf	prodl,w,c
 53444  008AE6  6ED9               	movwf	fsr2l,c
 53445  008AE8  0E02               	movlw	high (_xxky+1)
 53446  008AEA  20F4               	addwfc	prodh,w,c
 53447  008AEC  6EDA               	movwf	fsr2h,c
 53448  008AEE  0012               	return	
 53449  008AF0                     __end_ofPL138:
 53450                           	opt stack 0
 53451  008AF0                     PL152:
 53452                           	opt stack 22
 53453  008AF0  0E76               	movlw	low (_ky+1)
 53454  008AF2  24F3               	addwf	prodl,w,c
 53455  008AF4  6ED9               	movwf	fsr2l,c
 53456  008AF6  0E02               	movlw	high (_ky+1)
 53457  008AF8  20F4               	addwfc	prodh,w,c
 53458  008AFA  6EDA               	movwf	fsr2h,c
 53459  008AFC  0012               	return	
 53460  008AFE                     __end_ofPL152:
 53461                           	opt stack 0
 53462  008AFE                     PL172:
 53463                           	opt stack 22
 53464  008AFE  5001               	movf	IncKeyTimer@i,w,c
 53465  008B00  0D05               	mullw	5
 53466  008B02  0E77               	movlw	low (_ky+2)
 53467  008B04  24F3               	addwf	prodl,w,c
 53468  008B06  6ED9               	movwf	fsr2l,c
 53469  008B08  0E02               	movlw	high (_ky+2)
 53470  008B0A  20F4               	addwfc	prodh,w,c
 53471  008B0C  6EDA               	movwf	fsr2h,c
 53472  008B0E  0012               	return	
 53473  008B10                     __end_ofPL172:
 53474                           	opt stack 0
 53475  008B10                     PL176:
 53476                           	opt stack 22
 53477  008B10  5001               	movf	IncKeyTimer@i,w,c
 53478  008B12  0D05               	mullw	5
 53479  008B14  0E9A               	movlw	low (_xxky+2)
 53480  008B16  24F3               	addwf	prodl,w,c
 53481  008B18  6ED9               	movwf	fsr2l,c
 53482  008B1A  0E02               	movlw	high (_xxky+2)
 53483  008B1C  20F4               	addwfc	prodh,w,c
 53484  008B1E  6EDA               	movwf	fsr2h,c
 53485  008B20  0012               	return	
 53486  008B22                     __end_ofPL176:
 53487                           	opt stack 0
 53488                           tblptru	equ	0xFF8
 53489                           tblptrh	equ	0xFF7
 53490                           tblptrl	equ	0xFF6
 53491                           tablat	equ	0xFF5
 53492                           prodh	equ	0xFF4
 53493                           prodl	equ	0xFF3
 53494                           intcon	equ	0xFF2
 53495                           postinc0	equ	0xFEE
 53496                           wreg	equ	0xFE8
 53497                           indf1	equ	0xFE7
 53498                           postinc1	equ	0xFE6
 53499                           postdec1	equ	0xFE5
 53500                           fsr1h	equ	0xFE2
 53501                           fsr1l	equ	0xFE1
 53502                           indf2	equ	0xFDF
 53503                           postinc2	equ	0xFDE
 53504                           postdec2	equ	0xFDD
 53505                           fsr2h	equ	0xFDA
 53506                           fsr2l	equ	0xFD9
 53507                           status	equ	0xFD8
 53508                           
 53509 ;; *************** function _RefreshWSW *****************
 53510 ;; Defined at:
 53511 ;;		line 307 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 53512 ;; Parameters:    Size  Location     Type
 53513 ;;		None
 53514 ;; Auto vars:     Size  Location     Type
 53515 ;;		None
 53516 ;; Return value:  Size  Location     Type
 53517 ;;		None               void
 53518 ;; Registers used:
 53519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 53520 ;; Tracked objects:
 53521 ;;		On entry : F/2
 53522 ;;		On exit  : F/1
 53523 ;;		Unchanged: FFFFFFF0/0
 53524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53529 ;;Total ram usage:        0 bytes
 53530 ;; Hardware stack levels used:    1
 53531 ;; Hardware stack levels required when called:    2
 53532 ;; This function calls:
 53533 ;;		_KolProc
 53534 ;;		_SetPrWswData
 53535 ;;		_FormatWswData
 53536 ;;		_PrintWswData
 53537 ;; This function is called by:
 53538 ;;		_ISR
 53539 ;; This function uses a non-reentrant model
 53540 ;;
 53541                           
 53542                           	psect	text256
 53543  00B4CA                     __ptext256:
 53544                           	opt stack 0
 53545  00B4CA                     _RefreshWSW:
 53546                           	opt stack 20
 53547                           
 53548                           ; BSR set to: 2
 53549                           ;wsw.c: 309: KolProc();
 53550                           
 53551                           ; BSR set to: 2
 53552  00B4CA  ECEA  F00F         	call	_KolProc	;wreg free
 53553                           
 53554                           ;wsw.c: 311: SetPrWswData();
 53555  00B4CE  EC2E  F050         	call	_SetPrWswData	;wreg free
 53556                           
 53557                           ;wsw.c: 312: FormatWswData();
 53558  00B4D2  EC09  F042         	call	_FormatWswData	;wreg free
 53559                           
 53560                           ; BSR set to: 1
 53561                           ;wsw.c: 313: PrintWswData();
 53562  00B4D6  EFEE  F044         	goto	_PrintWswData	;wreg free
 53563  00B4DA                     __end_of_RefreshWSW:
 53564                           	opt stack 0
 53565                           tblptru	equ	0xFF8
 53566                           tblptrh	equ	0xFF7
 53567                           tblptrl	equ	0xFF6
 53568                           tablat	equ	0xFF5
 53569                           prodh	equ	0xFF4
 53570                           prodl	equ	0xFF3
 53571                           intcon	equ	0xFF2
 53572                           postinc0	equ	0xFEE
 53573                           wreg	equ	0xFE8
 53574                           indf1	equ	0xFE7
 53575                           postinc1	equ	0xFE6
 53576                           postdec1	equ	0xFE5
 53577                           fsr1h	equ	0xFE2
 53578                           fsr1l	equ	0xFE1
 53579                           indf2	equ	0xFDF
 53580                           postinc2	equ	0xFDE
 53581                           postdec2	equ	0xFDD
 53582                           fsr2h	equ	0xFDA
 53583                           fsr2l	equ	0xFD9
 53584                           status	equ	0xFD8
 53585                           
 53586 ;; *************** function _StabPort *****************
 53587 ;; Defined at:
 53588 ;;		line 263 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
 53589 ;; Parameters:    Size  Location     Type
 53590 ;;		None
 53591 ;; Auto vars:     Size  Location     Type
 53592 ;;  i               1    7[COMRAM] unsigned char 
 53593 ;;  delay           1    6[COMRAM] unsigned char 
 53594 ;; Return value:  Size  Location     Type
 53595 ;;		None               void
 53596 ;; Registers used:
 53597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 53598 ;; Tracked objects:
 53599 ;;		On entry : F/1
 53600 ;;		On exit  : E/0
 53601 ;;		Unchanged: FFFFFFF0/0
 53602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53606 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53607 ;;Total ram usage:        4 bytes
 53608 ;; Hardware stack levels used:    1
 53609 ;; Hardware stack levels required when called:    1
 53610 ;; This function calls:
 53611 ;;		i2_RefStan
 53612 ;; This function is called by:
 53613 ;;		_ISR
 53614 ;; This function uses a non-reentrant model
 53615 ;;
 53616                           
 53617                           	psect	text257
 53618  00831E                     __ptext257:
 53619                           	opt stack 0
 53620  00831E                     _StabPort:
 53621                           	opt stack 21
 53622                           
 53623                           ; BSR set to: 1
 53624                           ;port.c: 264: static unsigned char tim=0;
 53625                           ;port.c: 265: unsigned char i,delay;
 53626                           ;port.c: 268: if(tim++<5) return;
 53627                           
 53628                           ; BSR set to: 1
 53629  00831E  0E06               	movlw	6
 53630  008320  2BB5               	incf	StabPort@tim& (0+255),f,b
 53631  008322  0101               	movlb	1	; () banked
 53632  008324  61B5               	cpfslt	StabPort@tim& (0+255),b
 53633  008326  D001               	goto	i2l2347
 53634  008328  0C06               	retlw	6
 53635  00832A                     i2l2347:
 53636                           
 53637                           ; BSR set to: 1
 53638                           ;port.c: 269: tim=0;
 53639  00832A  6BB5               	clrf	StabPort@tim& (0+255),b
 53640                           
 53641                           ; BSR set to: 1
 53642                           ;port.c: 272: RefStan();
 53643  00832C  ECB8  F036         	call	i2_RefStan	;wreg free
 53644                           
 53645                           ; BSR set to: 0
 53646                           ;port.c: 275: for(i=0;i<26;i++)
 53647  008330  6A08               	clrf	StabPort@i,c
 53648  008332                     i2l27142:
 53649                           
 53650                           ; BSR set to: 0
 53651                           ;port.c: 276: {
 53652                           ;port.c: 277: if(!SPort[i].Timer)
 53653  008332  5008               	movf	StabPort@i,w,c
 53654  008334  D867               	call	PL206	;call to abstracted procedure
 53655  008336  E115               	bnz	i2l27152
 53656                           
 53657                           ; BSR set to: 0
 53658                           ;port.c: 278: {
 53659                           ;port.c: 279: if(SPort[i].Output==SPort[i].Input)
 53660  008338  D859               	call	PL90	;call to abstracted procedure
 53661  00833A  30DF               	rrcf	223,w,c
 53662  00833C  0B01               	andlw	1
 53663  00833E  1805               	xorwf	??_StabPort,w,c
 53664  008340  E050               	bz	i2l27168
 53665  008342                     i2l27150:
 53666                           
 53667                           ; BSR set to: 0
 53668                           ;port.c: 281: else SPort[i].Timer++;
 53669  008342  5008               	movf	StabPort@i,w,c
 53670  008344  0FB5               	addlw	low _SPort	;volatile
 53671  008346  6ED9               	movwf	fsr2l,c
 53672  008348  6ADA               	clrf	fsr2h,c
 53673  00834A  30DF               	rrcf	223,w,c
 53674  00834C  6E05               	movwf	??_StabPort& (0+255),c
 53675  00834E  3005               	rrcf	??_StabPort& (0+255),w,c
 53676  008350  0B3F               	andlw	63
 53677  008352  6E05               	movwf	??_StabPort& (0+255),c
 53678  008354  2A05               	incf	??_StabPort,f,c
 53679  008356  3605               	rlcf	??_StabPort& (0+255),f,c
 53680  008358  3605               	rlcf	??_StabPort& (0+255),f,c
 53681  00835A  50DF               	movf	223,w,c
 53682  00835C  1805               	xorwf	??_StabPort& (0+255),w,c
 53683  00835E  0B03               	andlw	-253
 53684  008360  D032               	goto	L108
 53685  008362                     i2l27152:
 53686                           
 53687                           ; BSR set to: 0
 53688                           ;port.c: 283: else
 53689                           ;port.c: 284: {
 53690                           ;port.c: 285: if(!SPort[i].Output) delay=Nastawa[i].Delay1;
 53691  008362  5008               	movf	StabPort@i,w,c
 53692  008364  0FB5               	addlw	low _SPort	;volatile
 53693  008366  6ED9               	movwf	fsr2l,c
 53694  008368  6ADA               	clrf	fsr2h,c
 53695  00836A  50DF               	movf	indf2,w,c
 53696  00836C  6E05               	movwf	??_StabPort& (0+255),c
 53697  00836E  B205               	btfsc	??_StabPort,1,c
 53698  008370  D008               	goto	i2l27156
 53699                           
 53700                           ; BSR set to: 0
 53701  008372  5008               	movf	StabPort@i,w,c
 53702  008374  0D02               	mullw	2
 53703  008376  50F3               	movf	prodl,w,c
 53704  008378  0F00               	addlw	low _Nastawa
 53705  00837A  6E05               	movwf	??_StabPort& (0+255),c
 53706  00837C  C005  FFF6         	movff	??_StabPort,tblptrl
 53707  008380  D00A               	goto	L109
 53708  008382                     i2l27156:
 53709                           
 53710                           ; BSR set to: 0
 53711                           ;port.c: 286: else delay=Nastawa[i].Delay2;
 53712  008382  5008               	movf	StabPort@i,w,c
 53713  008384  0D02               	mullw	2
 53714  008386  CFF3 F005          	movff	prodl,??_StabPort
 53715  00838A  2A05               	incf	??_StabPort,f,c
 53716  00838C  5005               	movf	??_StabPort,w,c
 53717  00838E  0F00               	addlw	low _Nastawa
 53718  008390  6E06               	movwf	(??_StabPort+1)& (0+255),c
 53719  008392  C006  FFF6         	movff	??_StabPort+1,tblptrl
 53720  008396                     L109:
 53721  008396  0E10               	movlw	high __smallconst
 53722  008398  6EF7               	movwf	tblptrh,c
 53723  00839A  0E00               	movlw	low (__smallconst shr (0+16))
 53724  00839C  6EF8               	movwf	tblptru,c
 53725  00839E  0008               	tblrd		*
 53726  0083A0  CFF5 F007          	movff	tablat,StabPort@delay
 53727                           
 53728                           ; BSR set to: 0
 53729                           ;port.c: 288: if(SPort[i].Timer>=delay)
 53730  0083A4  5008               	movf	StabPort@i,w,c
 53731  0083A6  D82E               	call	PL206	;call to abstracted procedure
 53732  0083A8  6E05               	movwf	??_StabPort& (0+255),c
 53733  0083AA  5007               	movf	StabPort@delay,w,c
 53734  0083AC  5C05               	subwf	??_StabPort,w,c
 53735  0083AE  E30E               	bnc	i2l27162
 53736                           
 53737                           ; BSR set to: 0
 53738                           ;port.c: 289: {
 53739                           ;port.c: 290: SPort[i].Timer=0;
 53740  0083B0  5008               	movf	StabPort@i,w,c
 53741  0083B2  0FB5               	addlw	low _SPort	;volatile
 53742  0083B4  6ED9               	movwf	fsr2l,c
 53743  0083B6  6ADA               	clrf	fsr2h,c
 53744  0083B8  0E03               	movlw	-253
 53745  0083BA  16DF               	andwf	223,f,c
 53746                           
 53747                           ;port.c: 291: SPort[i].Output=SPort[i].Input;
 53748  0083BC  D817               	call	PL90	;call to abstracted procedure
 53749  0083BE  4605               	rlncf	??_StabPort,f,c
 53750  0083C0  50DF               	movf	223,w,c
 53751  0083C2  1805               	xorwf	??_StabPort,w,c
 53752  0083C4  0BFD               	andlw	-3
 53753  0083C6                     L108:
 53754  0083C6  1805               	xorwf	??_StabPort,w,c
 53755  0083C8  6EDF               	movwf	223,c
 53756                           
 53757                           ;port.c: 292: }
 53758  0083CA  D00B               	goto	i2l27168
 53759  0083CC                     i2l27162:
 53760                           
 53761                           ; BSR set to: 0
 53762                           ;port.c: 293: else
 53763                           ;port.c: 294: {
 53764                           ;port.c: 295: if (SPort[i].Output==SPort[i].Input)
 53765  0083CC  D80F               	call	PL90	;call to abstracted procedure
 53766  0083CE  30DF               	rrcf	223,w,c
 53767  0083D0  0B01               	andlw	1
 53768  0083D2  1805               	xorwf	??_StabPort,w,c
 53769  0083D4  E1B6               	bnz	i2l27150
 53770                           
 53771                           ; BSR set to: 0
 53772                           ;port.c: 296: SPort[i].Timer=0;
 53773  0083D6  5008               	movf	StabPort@i,w,c
 53774  0083D8  0FB5               	addlw	low _SPort	;volatile
 53775  0083DA  6ED9               	movwf	fsr2l,c
 53776  0083DC  6ADA               	clrf	fsr2h,c
 53777  0083DE  0E03               	movlw	-253
 53778  0083E0  16DF               	andwf	223,f,c
 53779  0083E2                     i2l27168:
 53780                           
 53781                           ; BSR set to: 0
 53782  0083E2  2A08               	incf	StabPort@i,f,c
 53783                           
 53784                           ; BSR set to: 0
 53785  0083E4  0E19               	movlw	25
 53786  0083E6  6408               	cpfsgt	StabPort@i,c
 53787  0083E8  D7A4               	goto	i2l27142
 53788  0083EA  0C19               	retlw	25
 53789  0083EC                     __end_of_StabPort:
 53790                           	opt stack 0
 53791  0083EC                     PL90:
 53792                           	opt stack 21
 53793  0083EC  5008               	movf	StabPort@i,w,c
 53794  0083EE  0FB5               	addlw	low _SPort	;volatile
 53795  0083F0  6ED9               	movwf	fsr2l,c
 53796  0083F2  6ADA               	clrf	fsr2h,c
 53797  0083F4  50DF               	movf	223,w,c
 53798  0083F6  0B01               	andlw	1
 53799  0083F8  6E05               	movwf	??_StabPort& (0+255),c
 53800  0083FA  5008               	movf	StabPort@i,w,c
 53801  0083FC  0FB5               	addlw	low _SPort	;volatile
 53802  0083FE  6ED9               	movwf	fsr2l,c
 53803  008400  6ADA               	clrf	fsr2h,c
 53804  008402  0012               	return	
 53805  008404                     __end_ofPL90:
 53806                           	opt stack 0
 53807  008404                     PL206:
 53808                           	opt stack 21
 53809  008404  0FB5               	addlw	low _SPort	;volatile
 53810  008406  6ED9               	movwf	fsr2l,c
 53811  008408  6ADA               	clrf	fsr2h,c
 53812  00840A  30DF               	rrcf	223,w,c
 53813  00840C  32E8               	rrcf	wreg,f,c
 53814  00840E  0B3F               	andlw	63
 53815  008410  0012               	return	
 53816  008412                     __end_ofPL206:
 53817                           	opt stack 0
 53818                           tblptru	equ	0xFF8
 53819                           tblptrh	equ	0xFF7
 53820                           tblptrl	equ	0xFF6
 53821                           tablat	equ	0xFF5
 53822                           prodh	equ	0xFF4
 53823                           prodl	equ	0xFF3
 53824                           intcon	equ	0xFF2
 53825                           postinc0	equ	0xFEE
 53826                           wreg	equ	0xFE8
 53827                           indf1	equ	0xFE7
 53828                           postinc1	equ	0xFE6
 53829                           postdec1	equ	0xFE5
 53830                           fsr1h	equ	0xFE2
 53831                           fsr1l	equ	0xFE1
 53832                           indf2	equ	0xFDF
 53833                           postinc2	equ	0xFDE
 53834                           postdec2	equ	0xFDD
 53835                           fsr2h	equ	0xFDA
 53836                           fsr2l	equ	0xFD9
 53837                           status	equ	0xFD8
 53838                           
 53839 ;; *************** function _IntPWM *****************
 53840 ;; Defined at:
 53841 ;;		line 488 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
 53842 ;; Parameters:    Size  Location     Type
 53843 ;;		None
 53844 ;; Auto vars:     Size  Location     Type
 53845 ;;		None
 53846 ;; Return value:  Size  Location     Type
 53847 ;;		None               void
 53848 ;; Registers used:
 53849 ;;		wreg, status,2, status,0
 53850 ;; Tracked objects:
 53851 ;;		On entry : 0/0
 53852 ;;		On exit  : F/0
 53853 ;;		Unchanged: FFFFFFF0/0
 53854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53859 ;;Total ram usage:        0 bytes
 53860 ;; Hardware stack levels used:    1
 53861 ;; This function calls:
 53862 ;;		Nothing
 53863 ;; This function is called by:
 53864 ;;		_ISR
 53865 ;; This function uses a non-reentrant model
 53866 ;;
 53867                           
 53868                           	psect	text258
 53869  00A402                     __ptext258:
 53870                           	opt stack 0
 53871  00A402                     _IntPWM:
 53872                           	opt stack 22
 53873                           
 53874                           ;pwm.c: 489: static bit btOsc=0;
 53875                           ;pwm.c: 491: if(PWM._ENPWM)
 53876  00A402  0100               	movlb	0	; () banked
 53877  00A404  A193               	btfss	_PWM& (0+255),0,b	;volatile
 53878  00A406  D004               	goto	i2l2614
 53879                           
 53880                           ; BSR set to: 0
 53881                           ;pwm.c: 492: {
 53882                           ;pwm.c: 493: PWM.NewPWM=PWM.BufPWM;
 53883  00A408  C094  F097         	movff	_PWM+1,_PWM+4	;volatile
 53884                           
 53885                           ;pwm.c: 494: PWM.NewOSC=PWM.BufOSC;
 53886  00A40C  C095  F096         	movff	_PWM+2,_PWM+3	;volatile
 53887  00A410                     i2l2614:
 53888                           
 53889                           ; BSR set to: 0
 53890                           ;pwm.c: 495: }
 53891                           ;pwm.c: 496: if(PWM._ENOSC)
 53892  00A410  A393               	btfss	_PWM& (0+255),1,b	;volatile
 53893  00A412  D00B               	goto	i2l18024
 53894                           
 53895                           ; BSR set to: 0
 53896                           ;pwm.c: 497: {
 53897                           ;pwm.c: 499: if(!btOsc)
 53898  00A414  B042               	btfsc	IntPWM@btOsc/(0+8),IntPWM@btOsc& (0+7),c
 53899  00A416  D005               	goto	i2l2616
 53900                           
 53901                           ;pwm.c: 500: {
 53902                           ;pwm.c: 501: btOsc=1;
 53903  00A418  8042               	bsf	IntPWM@btOsc/(0+8),IntPWM@btOsc& (0+7),c
 53904                           
 53905                           ;pwm.c: 502: PWM.NewPWM-=PWM.NewOSC;
 53906  00A41A  0100               	movlb	0	; () banked
 53907  00A41C  5196               	movf	(_PWM+3)& (0+255),w,b	;volatile
 53908  00A41E  5F97               	subwf	(_PWM+4)& (0+255),f,b	;volatile
 53909                           
 53910                           ;pwm.c: 503: }
 53911  00A420  D004               	goto	i2l18024
 53912  00A422                     i2l2616:
 53913                           
 53914                           ;pwm.c: 504: else
 53915                           ;pwm.c: 505: {
 53916                           ;pwm.c: 506: btOsc=0;
 53917  00A422  9042               	bcf	IntPWM@btOsc/(0+8),IntPWM@btOsc& (0+7),c
 53918                           
 53919                           ;pwm.c: 507: PWM.NewPWM+=PWM.NewOSC;
 53920  00A424  0100               	movlb	0	; () banked
 53921  00A426  5196               	movf	(_PWM+3)& (0+255),w,b	;volatile
 53922  00A428  2797               	addwf	(_PWM+4)& (0+255),f,b	;volatile
 53923  00A42A                     i2l18024:
 53924                           
 53925                           ; BSR set to: 0
 53926                           ;pwm.c: 508: }
 53927                           ;pwm.c: 509: }
 53928                           ;pwm.c: 511: if(PWM.NewPWM>PWM.HIPWM) PWM.NewPWM=PWM.HIPWM;
 53929  00A42A  5197               	movf	(_PWM+4)& (0+255),w,b	;volatile
 53930  00A42C  619B               	cpfslt	(_PWM+8)& (0+255),b	;volatile
 53931  00A42E  D002               	goto	i2l2618
 53932                           
 53933                           ; BSR set to: 0
 53934  00A430  C09B  F097         	movff	_PWM+8,_PWM+4	;volatile
 53935  00A434                     i2l2618:
 53936                           
 53937                           ; BSR set to: 0
 53938                           ;pwm.c: 519: DC1B1=((PWM.NewPWM&0b00000001)>0)?1:0;
 53939  00A434  A197               	btfss	(_PWM+4)& (0+255),0,b	;volatile
 53940  00A436  D002               	goto	i2u2465_40
 53941  00A438  8ABD               	bsf	4029,5,c	;volatile
 53942  00A43A  D001               	goto	i2u2466_45
 53943  00A43C                     i2u2465_40:
 53944  00A43C  9ABD               	bcf	4029,5,c	;volatile
 53945  00A43E                     i2u2466_45:
 53946                           
 53947                           ;pwm.c: 520: DC1B0=0;
 53948  00A43E  98BD               	bcf	4029,4,c	;volatile
 53949                           
 53950                           ;pwm.c: 521: CCPR1L=PWM.NewPWM>>1;
 53951  00A440  0100               	movlb	0	; () banked
 53952  00A442  90D8               	bcf	status,0,c
 53953  00A444  3197               	rrcf	(_PWM+4)& (0+255),w,b	;volatile
 53954  00A446  6EBE               	movwf	4030,c	;volatile
 53955                           
 53956                           ; BSR set to: 0
 53957  00A448  0012               	return	
 53958  00A44A                     __end_of_IntPWM:
 53959                           	opt stack 0
 53960                           tblptru	equ	0xFF8
 53961                           tblptrh	equ	0xFF7
 53962                           tblptrl	equ	0xFF6
 53963                           tablat	equ	0xFF5
 53964                           prodh	equ	0xFF4
 53965                           prodl	equ	0xFF3
 53966                           intcon	equ	0xFF2
 53967                           postinc0	equ	0xFEE
 53968                           wreg	equ	0xFE8
 53969                           indf1	equ	0xFE7
 53970                           postinc1	equ	0xFE6
 53971                           postdec1	equ	0xFE5
 53972                           fsr1h	equ	0xFE2
 53973                           fsr1l	equ	0xFE1
 53974                           indf2	equ	0xFDF
 53975                           postinc2	equ	0xFDE
 53976                           postdec2	equ	0xFDD
 53977                           fsr2h	equ	0xFDA
 53978                           fsr2l	equ	0xFD9
 53979                           status	equ	0xFD8
 53980                           
 53981 ;; *************** function _IntPWM2 *****************
 53982 ;; Defined at:
 53983 ;;		line 532 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\pwm.c"
 53984 ;; Parameters:    Size  Location     Type
 53985 ;;		None
 53986 ;; Auto vars:     Size  Location     Type
 53987 ;;		None
 53988 ;; Return value:  Size  Location     Type
 53989 ;;		None               void
 53990 ;; Registers used:
 53991 ;;		wreg, status,2, status,0
 53992 ;; Tracked objects:
 53993 ;;		On entry : F/0
 53994 ;;		On exit  : F/0
 53995 ;;		Unchanged: FFFFFFF0/0
 53996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 53997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54001 ;;Total ram usage:        0 bytes
 54002 ;; Hardware stack levels used:    1
 54003 ;; This function calls:
 54004 ;;		Nothing
 54005 ;; This function is called by:
 54006 ;;		_ISR
 54007 ;; This function uses a non-reentrant model
 54008 ;;
 54009                           
 54010                           	psect	text259
 54011  00AFD0                     __ptext259:
 54012                           	opt stack 0
 54013  00AFD0                     _IntPWM2:
 54014                           	opt stack 22
 54015                           
 54016                           ; BSR set to: 0
 54017                           ;pwm.c: 533: static bit btOsc=0;
 54018                           ;pwm.c: 535: if(PWM._ENPWM2)
 54019                           
 54020                           ; BSR set to: 0
 54021  00AFD0  B198               	btfsc	(_PWM+5)& (0+255),0,b	;volatile
 54022                           
 54023                           ; BSR set to: 0
 54024                           ;pwm.c: 536: {
 54025                           ;pwm.c: 537: PWM.NewPWM2=PWM.BufPWM2;
 54026  00AFD2  C099  F09A         	movff	_PWM+6,_PWM+7	;volatile
 54027                           
 54028                           ; BSR set to: 0
 54029                           ;pwm.c: 538: }
 54030                           ;pwm.c: 539: if(PWM.NewPWM2>PWM.HIPWM) PWM.NewPWM2=PWM.HIPWM;
 54031  00AFD6  519A               	movf	(_PWM+7)& (0+255),w,b	;volatile
 54032  00AFD8  619B               	cpfslt	(_PWM+8)& (0+255),b	;volatile
 54033  00AFDA  D002               	goto	i2l2625
 54034                           
 54035                           ; BSR set to: 0
 54036  00AFDC  C09B  F09A         	movff	_PWM+8,_PWM+7	;volatile
 54037  00AFE0                     i2l2625:
 54038                           
 54039                           ; BSR set to: 0
 54040                           ;pwm.c: 549: DC2B1=((PWM.NewPWM2&0b00000001)>0)?1:0;
 54041  00AFE0  A19A               	btfss	(_PWM+7)& (0+255),0,b	;volatile
 54042  00AFE2  D002               	goto	i2u2469_40
 54043  00AFE4  8ABA               	bsf	4026,5,c	;volatile
 54044  00AFE6  D001               	goto	i2u2470_45
 54045  00AFE8                     i2u2469_40:
 54046  00AFE8  9ABA               	bcf	4026,5,c	;volatile
 54047  00AFEA                     i2u2470_45:
 54048                           
 54049                           ;pwm.c: 550: DC2B0=0;
 54050  00AFEA  98BA               	bcf	4026,4,c	;volatile
 54051                           
 54052                           ;pwm.c: 551: CCPR2L=PWM.NewPWM2>>1;
 54053  00AFEC  0100               	movlb	0	; () banked
 54054  00AFEE  90D8               	bcf	status,0,c
 54055  00AFF0  319A               	rrcf	(_PWM+7)& (0+255),w,b	;volatile
 54056  00AFF2  6EBB               	movwf	4027,c	;volatile
 54057                           
 54058                           ; BSR set to: 0
 54059  00AFF4  0012               	return	
 54060  00AFF6                     __end_of_IntPWM2:
 54061                           	opt stack 0
 54062                           tblptru	equ	0xFF8
 54063                           tblptrh	equ	0xFF7
 54064                           tblptrl	equ	0xFF6
 54065                           tablat	equ	0xFF5
 54066                           prodh	equ	0xFF4
 54067                           prodl	equ	0xFF3
 54068                           intcon	equ	0xFF2
 54069                           postinc0	equ	0xFEE
 54070                           wreg	equ	0xFE8
 54071                           indf1	equ	0xFE7
 54072                           postinc1	equ	0xFE6
 54073                           postdec1	equ	0xFE5
 54074                           fsr1h	equ	0xFE2
 54075                           fsr1l	equ	0xFE1
 54076                           indf2	equ	0xFDF
 54077                           postinc2	equ	0xFDE
 54078                           postdec2	equ	0xFDD
 54079                           fsr2h	equ	0xFDA
 54080                           fsr2l	equ	0xFD9
 54081                           status	equ	0xFD8
 54082                           
 54083 ;; *************** function _VerifyNDatCHK *****************
 54084 ;; Defined at:
 54085 ;;		line 250 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
 54086 ;; Parameters:    Size  Location     Type
 54087 ;;  Data            1    wreg     const unsigned char 
 54088 ;; Auto vars:     Size  Location     Type
 54089 ;;  Data            1    6[COMRAM] const unsigned char 
 54090 ;; Return value:  Size  Location     Type
 54091 ;;                  1    wreg      unsigned char 
 54092 ;; Registers used:
 54093 ;;		wreg, status,2, status,0, cstack
 54094 ;; Tracked objects:
 54095 ;;		On entry : F/1
 54096 ;;		On exit  : F/1
 54097 ;;		Unchanged: FFFFFFF0/0
 54098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54102 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54103 ;;Total ram usage:        1 bytes
 54104 ;; Hardware stack levels used:    1
 54105 ;; Hardware stack levels required when called:    1
 54106 ;; This function calls:
 54107 ;;		_SetNDatCHK
 54108 ;; This function is called by:
 54109 ;;		_IntUSARTRC
 54110 ;; This function uses a non-reentrant model
 54111 ;;
 54112                           
 54113                           	psect	text260
 54114  00B498                     __ptext260:
 54115                           	opt stack 0
 54116  00B498                     _VerifyNDatCHK:
 54117                           	opt stack 20
 54118                           
 54119                           ; BSR set to: 0
 54120                           ;VerifyNDatCHK@Data stored from wreg
 54121  00B498  CFE8 F007          	movff	wreg,VerifyNDatCHK@Data
 54122                           
 54123                           ; BSR set to: 1
 54124                           ;uart9b.c: 251: if(SetNDatCHK(Data)==Data) return 1;
 54125  00B49C  5007               	movf	VerifyNDatCHK@Data,w,c
 54126  00B49E  EC13  F056         	call	_SetNDatCHK
 54127  00B4A2  1807               	xorwf	VerifyNDatCHK@Data,w,c
 54128  00B4A4  E101               	bnz	i2l27178
 54129                           
 54130                           ; BSR set to: 1
 54131  00B4A6  0C01               	retlw	1
 54132  00B4A8                     i2l27178:
 54133                           
 54134                           ; BSR set to: 1
 54135                           
 54136                           ; BSR set to: 1
 54137                           ;uart9b.c: 252: return 0;
 54138  00B4A8  0C00               	retlw	0
 54139  00B4AA                     __end_of_VerifyNDatCHK:
 54140                           	opt stack 0
 54141                           tblptru	equ	0xFF8
 54142                           tblptrh	equ	0xFF7
 54143                           tblptrl	equ	0xFF6
 54144                           tablat	equ	0xFF5
 54145                           prodh	equ	0xFF4
 54146                           prodl	equ	0xFF3
 54147                           intcon	equ	0xFF2
 54148                           postinc0	equ	0xFEE
 54149                           wreg	equ	0xFE8
 54150                           indf1	equ	0xFE7
 54151                           postinc1	equ	0xFE6
 54152                           postdec1	equ	0xFE5
 54153                           fsr1h	equ	0xFE2
 54154                           fsr1l	equ	0xFE1
 54155                           indf2	equ	0xFDF
 54156                           postinc2	equ	0xFDE
 54157                           postdec2	equ	0xFDD
 54158                           fsr2h	equ	0xFDA
 54159                           fsr2l	equ	0xFD9
 54160                           status	equ	0xFD8
 54161                           
 54162 ;; *************** function _SetNDatCHK *****************
 54163 ;; Defined at:
 54164 ;;		line 241 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\uart9b.c"
 54165 ;; Parameters:    Size  Location     Type
 54166 ;;  Data            1    wreg     const unsigned char 
 54167 ;; Auto vars:     Size  Location     Type
 54168 ;;  Data            1    2[COMRAM] const unsigned char 
 54169 ;;  d               1    5[COMRAM] unsigned char 
 54170 ;;  b               1    4[COMRAM] unsigned char 
 54171 ;;  a               1    3[COMRAM] unsigned char 
 54172 ;; Return value:  Size  Location     Type
 54173 ;;                  1    wreg      unsigned char 
 54174 ;; Registers used:
 54175 ;;		wreg, status,2, status,0
 54176 ;; Tracked objects:
 54177 ;;		On entry : F/1
 54178 ;;		On exit  : F/1
 54179 ;;		Unchanged: FFFFFFF0/0
 54180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54182 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54183 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54184 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54185 ;;Total ram usage:        6 bytes
 54186 ;; Hardware stack levels used:    1
 54187 ;; This function calls:
 54188 ;;		Nothing
 54189 ;; This function is called by:
 54190 ;;		_VerifyNDatCHK
 54191 ;; This function uses a non-reentrant model
 54192 ;;
 54193                           
 54194                           	psect	text261
 54195  00AC26                     __ptext261:
 54196                           	opt stack 0
 54197  00AC26                     _SetNDatCHK:
 54198                           	opt stack 20
 54199                           
 54200                           ; BSR set to: 1
 54201                           ;SetNDatCHK@Data stored from wreg
 54202  00AC26  CFE8 F003          	movff	wreg,SetNDatCHK@Data
 54203                           
 54204                           ; BSR set to: 1
 54205                           ;uart9b.c: 242: unsigned char a,b,d;
 54206                           ;uart9b.c: 243: d=Data&0b00011111;
 54207  00AC2A  5003               	movf	SetNDatCHK@Data,w,c
 54208  00AC2C  0B1F               	andlw	31
 54209  00AC2E  6E06               	movwf	SetNDatCHK@d,c
 54210                           
 54211                           ;uart9b.c: 244: a=d&0b00000111;
 54212  00AC30  5006               	movf	SetNDatCHK@d,w,c
 54213  00AC32  0B07               	andlw	7
 54214  00AC34  6E04               	movwf	SetNDatCHK@a,c
 54215                           
 54216                           ;uart9b.c: 245: b=0b00000100|(d>>3);
 54217  00AC36  3806               	swapf	SetNDatCHK@d,w,c
 54218  00AC38  46E8               	rlncf	wreg,f,c
 54219  00AC3A  0B1F               	andlw	31
 54220  00AC3C  0904               	iorlw	4
 54221  00AC3E  6E05               	movwf	SetNDatCHK@b,c
 54222                           
 54223                           ;uart9b.c: 246: return d|((a^b)<<5);
 54224  00AC40  1804               	xorwf	SetNDatCHK@a,w,c
 54225  00AC42  6E01               	movwf	??_SetNDatCHK& (0+255),c
 54226  00AC44  0E05               	movlw	5
 54227  00AC46  6E02               	movwf	(??_SetNDatCHK+1)& (0+255),c
 54228  00AC48                     i2u4419_45:
 54229  00AC48  90D8               	bcf	status,0,c
 54230  00AC4A  3601               	rlcf	??_SetNDatCHK,f,c
 54231  00AC4C  2E02               	decfsz	(??_SetNDatCHK+1)& (0+255),f,c
 54232  00AC4E  D7FC               	goto	i2u4419_45
 54233  00AC50  5001               	movf	??_SetNDatCHK,w,c
 54234  00AC52  1006               	iorwf	SetNDatCHK@d,w,c
 54235                           
 54236                           ; BSR set to: 1
 54237  00AC54  0012               	return	
 54238  00AC56                     __end_of_SetNDatCHK:
 54239                           	opt stack 0
 54240                           tblptru	equ	0xFF8
 54241                           tblptrh	equ	0xFF7
 54242                           tblptrl	equ	0xFF6
 54243                           tablat	equ	0xFF5
 54244                           prodh	equ	0xFF4
 54245                           prodl	equ	0xFF3
 54246                           intcon	equ	0xFF2
 54247                           postinc0	equ	0xFEE
 54248                           wreg	equ	0xFE8
 54249                           indf1	equ	0xFE7
 54250                           postinc1	equ	0xFE6
 54251                           postdec1	equ	0xFE5
 54252                           fsr1h	equ	0xFE2
 54253                           fsr1l	equ	0xFE1
 54254                           indf2	equ	0xFDF
 54255                           postinc2	equ	0xFDE
 54256                           postdec2	equ	0xFDD
 54257                           fsr2h	equ	0xFDA
 54258                           fsr2l	equ	0xFD9
 54259                           status	equ	0xFD8
 54260                           
 54261 ;; *************** function _KolProc *****************
 54262 ;; Defined at:
 54263 ;;		line 320 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 54264 ;; Parameters:    Size  Location     Type
 54265 ;;		None
 54266 ;; Auto vars:     Size  Location     Type
 54267 ;;  j               1   15[COMRAM] unsigned char 
 54268 ;;  i               1   14[COMRAM] unsigned char 
 54269 ;;  k               1   13[COMRAM] unsigned char 
 54270 ;;  nC              1   12[COMRAM] unsigned char 
 54271 ;;  l               1   11[COMRAM] unsigned char 
 54272 ;; Return value:  Size  Location     Type
 54273 ;;		None               void
 54274 ;; Registers used:
 54275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 54276 ;; Tracked objects:
 54277 ;;		On entry : F/2
 54278 ;;		On exit  : 0/0
 54279 ;;		Unchanged: FFFFFFF0/0
 54280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 54281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54282 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54283 ;;      Temps:         11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54284 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54285 ;;Total ram usage:       16 bytes
 54286 ;; Hardware stack levels used:    1
 54287 ;; This function calls:
 54288 ;;		Nothing
 54289 ;; This function is called by:
 54290 ;;		_RefreshWSW
 54291 ;; This function uses a non-reentrant model
 54292 ;;
 54293                           
 54294                           	psect	text262
 54295  001FD4                     __ptext262:
 54296                           	opt stack 0
 54297  001FD4                     _KolProc:
 54298                           	opt stack 21
 54299                           
 54300                           ; BSR set to: 2
 54301                           ;wsw.c: 321: unsigned char i,j,k,l,nC;
 54302                           ;wsw.c: 323: for(j=0;j<4;j++)
 54303                           
 54304                           ; BSR set to: 1
 54305  001FD4  6A10               	clrf	KolProc@j,c
 54306  001FD6                     i2l26308:
 54307                           
 54308                           ;wsw.c: 324: {
 54309                           ;wsw.c: 325: nC=(*(*Klj[j].KL).KOut).nCykli;
 54310  001FD6  5010               	movf	KolProc@j,w,c
 54311  001FD8  D9C2               	call	PL2	;call to abstracted procedure
 54312  001FDA  0E05               	movlw	5
 54313  001FDC  2602               	addwf	??_KolProc+1,f,c
 54314  001FDE  D9E9               	call	PL6	;call to abstracted procedure
 54315  001FE0  DA7D               	call	PL112	;call to abstracted procedure
 54316  001FE2  CFF5 F00D          	movff	tablat,KolProc@nC
 54317                           
 54318                           ;wsw.c: 326: if((KInd[j].reset)||(nC&&KTim[j].cykl>=nC))
 54319  001FE6  0101               	movlb	1	; () banked
 54320  001FE8  DA5A               	call	PL50	;call to abstracted procedure
 54321  001FEA  50DF               	movf	indf2,w,c
 54322  001FEC  6E01               	movwf	??_KolProc& (0+255),c
 54323  001FEE  B201               	btfsc	??_KolProc,1,c
 54324  001FF0  D008               	goto	i2l26316
 54325                           
 54326                           ; BSR set to: 1
 54327  001FF2  500D               	movf	KolProc@nC,w,c
 54328  001FF4  E01F               	bz	i2l26328
 54329                           
 54330                           ; BSR set to: 1
 54331  001FF6  DA69               	call	PL92	;call to abstracted procedure
 54332  001FF8  50DF               	movf	indf2,w,c
 54333  001FFA  6E01               	movwf	??_KolProc& (0+255),c
 54334  001FFC  500D               	movf	KolProc@nC,w,c
 54335  001FFE  5C01               	subwf	??_KolProc,w,c
 54336  002000  E319               	bnc	i2l26328
 54337  002002                     i2l26316:
 54338                           
 54339                           ; BSR set to: 1
 54340                           ;wsw.c: 327: {
 54341                           ;wsw.c: 328: KTim[j].cykl=0;
 54342  002002  DA63               	call	PL92	;call to abstracted procedure
 54343  002004  6ADF               	clrf	indf2,c
 54344                           
 54345                           ; BSR set to: 1
 54346                           ;wsw.c: 329: KInd[j].reset=0;
 54347  002006  DA4B               	call	PL50	;call to abstracted procedure
 54348  002008  0EFD               	movlw	-3
 54349  00200A  16DF               	andwf	223,f,c
 54350                           
 54351                           ; BSR set to: 1
 54352                           ;wsw.c: 330: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j].KL).KFc[i].focus=0;
 54353  00200C  6A0F               	clrf	KolProc@i,c
 54354  00200E  D00A               	goto	i2l26326
 54355  002010                     i2l26322:
 54356  002010  5010               	movf	KolProc@j,w,c
 54357  002012  D9A5               	call	PL2	;call to abstracted procedure
 54358  002014  0E03               	movlw	3
 54359  002016  2602               	addwf	??_KolProc+1,f,c
 54360  002018  C002  FFF6         	movff	??_KolProc+1,tblptrl
 54361  00201C  DA25               	call	PL34	;call to abstracted procedure
 54362  00201E  0EFE               	movlw	-2
 54363  002020  16DF               	andwf	223,f,c
 54364  002022  2A0F               	incf	KolProc@i,f,c
 54365  002024                     i2l26326:
 54366  002024  5010               	movf	KolProc@j,w,c
 54367  002026  0D02               	mullw	2
 54368  002028  CFF3 F001          	movff	prodl,??_KolProc
 54369  00202C  2A01               	incf	??_KolProc,f,c
 54370  00202E  5001               	movf	??_KolProc,w,c
 54371  002030  DA07               	call	PL16	;call to abstracted procedure
 54372  002032  E3EE               	bnc	i2l26322
 54373  002034                     i2l26328:
 54374                           
 54375                           ;wsw.c: 331: }
 54376                           ;wsw.c: 332: if(KInd[j].restart&&nC)
 54377  002034  0101               	movlb	1	; () banked
 54378  002036  DA33               	call	PL50	;call to abstracted procedure
 54379  002038  50DF               	movf	indf2,w,c
 54380  00203A  6E01               	movwf	??_KolProc& (0+255),c
 54381  00203C  A001               	btfss	??_KolProc,0,c
 54382  00203E  D018               	goto	i2l26342
 54383                           
 54384                           ; BSR set to: 1
 54385  002040  500D               	movf	KolProc@nC,w,c
 54386  002042  E016               	bz	i2l26342
 54387                           
 54388                           ; BSR set to: 1
 54389                           ;wsw.c: 333: {
 54390                           ;wsw.c: 334: KTim[j].cykl=0;
 54391  002044  DA42               	call	PL92	;call to abstracted procedure
 54392  002046  6ADF               	clrf	indf2,c
 54393                           
 54394                           ; BSR set to: 1
 54395                           ;wsw.c: 335: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j].KL).KFc[i].focus=1;
 54396  002048  6A0F               	clrf	KolProc@i,c
 54397  00204A  D00A               	goto	i2l26340
 54398  00204C                     i2l26336:
 54399  00204C  5010               	movf	KolProc@j,w,c
 54400  00204E  D987               	call	PL2	;call to abstracted procedure
 54401  002050  0E03               	movlw	3
 54402  002052  2602               	addwf	??_KolProc+1,f,c
 54403  002054  C002  FFF6         	movff	??_KolProc+1,tblptrl
 54404  002058  DA07               	call	PL34	;call to abstracted procedure
 54405  00205A  0E01               	movlw	1
 54406  00205C  12DF               	iorwf	223,f,c
 54407  00205E  2A0F               	incf	KolProc@i,f,c
 54408  002060                     i2l26340:
 54409  002060  5010               	movf	KolProc@j,w,c
 54410  002062  0D02               	mullw	2
 54411  002064  CFF3 F001          	movff	prodl,??_KolProc
 54412  002068  2A01               	incf	??_KolProc,f,c
 54413  00206A  5001               	movf	??_KolProc,w,c
 54414  00206C  D9E9               	call	PL16	;call to abstracted procedure
 54415  00206E  E3EE               	bnc	i2l26336
 54416  002070                     i2l26342:
 54417                           
 54418                           ;wsw.c: 336: }
 54419                           ;wsw.c: 337: if(KInd[j].restart||!((*(*(*Klj[j].KL).KOut).CAdr).St.focus))
 54420  002070  0101               	movlb	1	; () banked
 54421  002072  DA15               	call	PL50	;call to abstracted procedure
 54422  002074  50DF               	movf	indf2,w,c
 54423  002076  6E01               	movwf	??_KolProc& (0+255),c
 54424  002078  B001               	btfsc	??_KolProc,0,c
 54425  00207A  D007               	goto	i2l26346
 54426                           
 54427                           ; BSR set to: 1
 54428  00207C  5010               	movf	KolProc@j,w,c
 54429  00207E  D96F               	call	PL2	;call to abstracted procedure
 54430  002080  D97C               	call	PL4	;call to abstracted procedure
 54431  002082  50DF               	movf	indf2,w,c
 54432  002084  6E06               	movwf	(??_KolProc+5)& (0+255),c
 54433  002086  B006               	btfsc	??_KolProc+5,0,c
 54434  002088  D015               	goto	i2l26356
 54435  00208A                     i2l26346:
 54436                           
 54437                           ; BSR set to: 1
 54438                           ;wsw.c: 338: {
 54439                           ;wsw.c: 339: KInd[j].restart=0;
 54440  00208A  0E85               	movlw	low _KInd
 54441  00208C  2410               	addwf	KolProc@j,w,c
 54442  00208E  6ED9               	movwf	fsr2l,c
 54443  002090  6ADA               	clrf	fsr2h,c
 54444  002092  0E01               	movlw	high _KInd
 54445  002094  22DA               	addwfc	fsr2h,f,c
 54446  002096  0EFE               	movlw	-2
 54447  002098  16DF               	andwf	223,f,c
 54448                           
 54449                           ; BSR set to: 1
 54450                           ;wsw.c: 341: if(!nC)
 54451  00209A  660D               	tstfsz	KolProc@nC,c
 54452  00209C  D00B               	goto	i2l26356
 54453                           
 54454                           ; BSR set to: 1
 54455                           ;wsw.c: 342: {
 54456                           ;wsw.c: 343: KInd[j].indeks=0;
 54457  00209E  0E85               	movlw	low _KInd
 54458  0020A0  2410               	addwf	KolProc@j,w,c
 54459  0020A2  EC92  F055         	call	PL154	;call to abstracted procedure
 54460                           
 54461                           ; BSR set to: 1
 54462                           ;wsw.c: 344: KTim[j].ncS=0;
 54463  0020A6  5010               	movf	KolProc@j,w,c
 54464  0020A8  DA01               	call	PL56	;call to abstracted procedure
 54465  0020AA  6ADF               	clrf	indf2,c
 54466                           
 54467                           ; BSR set to: 1
 54468                           ;wsw.c: 345: KTim[j].ndS=0;
 54469  0020AC  5010               	movf	KolProc@j,w,c
 54470  0020AE  0D03               	mullw	3
 54471  0020B0  DA05               	call	PL86	;call to abstracted procedure
 54472  0020B2  6ADF               	clrf	indf2,c
 54473  0020B4                     i2l26356:
 54474                           
 54475                           ; BSR set to: 1
 54476                           ;wsw.c: 346: }
 54477                           ;wsw.c: 352: }
 54478                           ;wsw.c: 353: (*(*(*Klj[j].KL).KOut).CAdr).St.focus=0;
 54479  0020B4  5010               	movf	KolProc@j,w,c
 54480  0020B6  D953               	call	PL2	;call to abstracted procedure
 54481  0020B8  D960               	call	PL4	;call to abstracted procedure
 54482  0020BA  0EFE               	movlw	-2
 54483  0020BC  16DF               	andwf	223,f,c
 54484                           
 54485                           ;wsw.c: 354: for(i=KInd[j].indeks;i<Klj[j].nPzc;i++)
 54486  0020BE  0101               	movlb	1	; () banked
 54487  0020C0  D9EE               	call	PL50	;call to abstracted procedure
 54488  0020C2  30DF               	rrcf	223,w,c
 54489  0020C4  32E8               	rrcf	wreg,f,c
 54490  0020C6  0B3F               	andlw	63
 54491  0020C8  6E0F               	movwf	KolProc@i,c
 54492  0020CA  D13B               	goto	i2l26438
 54493  0020CC                     i2l26360:
 54494                           
 54495                           ;wsw.c: 355: {
 54496                           ;wsw.c: 357: if (!(*Klj[j].KL).KFc[i].focus)
 54497  0020CC  5010               	movf	KolProc@j,w,c
 54498  0020CE  D947               	call	PL2	;call to abstracted procedure
 54499  0020D0  0E03               	movlw	3
 54500  0020D2  2602               	addwf	??_KolProc+1,f,c
 54501  0020D4  C002  FFF6         	movff	??_KolProc+1,tblptrl
 54502  0020D8  D9C7               	call	PL34	;call to abstracted procedure
 54503  0020DA  50DF               	movf	indf2,w,c
 54504  0020DC  6E05               	movwf	(??_KolProc+4)& (0+255),c
 54505  0020DE  B005               	btfsc	??_KolProc+4,0,c
 54506  0020E0  D020               	goto	i2l26370
 54507                           
 54508                           ;wsw.c: 358: {
 54509                           ;wsw.c: 359: if(i>=Klj[j].nPzc-1)
 54510  0020E2  5010               	movf	KolProc@j,w,c
 54511  0020E4  D9B9               	call	PL18	;call to abstracted procedure
 54512  0020E6  D965               	call	PL6	;call to abstracted procedure
 54513  0020E8  0EFF               	movlw	255
 54514  0020EA  2403               	addwf	??_KolProc+2,w,c
 54515  0020EC  6E04               	movwf	(??_KolProc+3)& (0+255),c
 54516  0020EE  6A05               	clrf	(??_KolProc+4)& (0+255),c
 54517  0020F0  0EFF               	movlw	255
 54518  0020F2  2205               	addwfc	(??_KolProc+4)& (0+255),f,c
 54519  0020F4  500F               	movf	KolProc@i,w,c
 54520  0020F6  6E06               	movwf	(??_KolProc+5)& (0+255),c
 54521  0020F8  6A07               	clrf	(??_KolProc+6)& (0+255),c
 54522  0020FA  5007               	movf	??_KolProc+6,w,c
 54523  0020FC  0A80               	xorlw	128
 54524  0020FE  6E08               	movwf	(??_KolProc+7)& (0+255),c
 54525  002100  5004               	movf	??_KolProc+3,w,c
 54526  002102  5C06               	subwf	??_KolProc+5,w,c
 54527  002104  5005               	movf	??_KolProc+4,w,c
 54528  002106  0A80               	xorlw	128
 54529  002108  5808               	subwfb	(??_KolProc+7)& (0+255),w,c
 54530  00210A  E201 D119          	bnc	i2l26436
 54531                           
 54532                           ;wsw.c: 360: {
 54533                           ;wsw.c: 361: KInd[j].indeks=0;
 54534  00210E  0101               	movlb	1	; () banked
 54535  002110  D9C6               	call	PL50	;call to abstracted procedure
 54536  002112  0E03               	movlw	-253
 54537  002114  16DF               	andwf	223,f,c
 54538                           
 54539                           ; BSR set to: 1
 54540                           ;wsw.c: 362: if(nC) KTim[j].cykl++;
 54541  002116  500D               	movf	KolProc@nC,w,c
 54542  002118  E101 D112          	bz	i2l26436
 54543  00211C                     i2l26368:
 54544                           
 54545                           ; BSR set to: 1
 54546  00211C  D9D6               	call	PL92	;call to abstracted procedure
 54547  00211E  2ADF               	incf	indf2,f,c
 54548  002120  D10F               	goto	i2l26436
 54549  002122                     i2l26370:
 54550                           
 54551                           ;wsw.c: 365: }
 54552                           ;wsw.c: 367: KInd[j].indeks=i;
 54553  002122  C00F  F001         	movff	KolProc@i,??_KolProc
 54554  002126  0101               	movlb	1	; () banked
 54555  002128  D9BA               	call	PL50	;call to abstracted procedure
 54556  00212A  4601               	rlncf	??_KolProc,f,c
 54557  00212C  4601               	rlncf	??_KolProc,f,c
 54558  00212E  50DF               	movf	223,w,c
 54559  002130  1801               	xorwf	??_KolProc,w,c
 54560  002132  0B03               	andlw	-253
 54561  002134  1801               	xorwf	??_KolProc,w,c
 54562  002136  6EDF               	movwf	223,c
 54563                           
 54564                           ; BSR set to: 1
 54565                           ;wsw.c: 370: for(k=j+1;k<4;k++)
 54566  002138  2810               	incf	KolProc@j,w,c
 54567  00213A  6E0E               	movwf	KolProc@k,c
 54568  00213C                     i2l26374:
 54569  00213C  0E03               	movlw	3
 54570  00213E  640E               	cpfsgt	KolProc@k,c
 54571  002140  D001               	goto	i2l26378
 54572  002142  D03B               	goto	i2l26394
 54573  002144                     i2l26378:
 54574                           
 54575                           ;wsw.c: 371: if((*(*Klj[k].KL).KOut).nCykli)
 54576  002144  500E               	movf	KolProc@k,w,c
 54577  002146  D90B               	call	PL2	;call to abstracted procedure
 54578  002148  0E05               	movlw	5
 54579  00214A  2602               	addwf	??_KolProc+1,f,c
 54580  00214C  D932               	call	PL6	;call to abstracted procedure
 54581  00214E  D9C6               	call	PL112	;call to abstracted procedure
 54582  002150  50F5               	movf	tablat,w,c
 54583  002152  E031               	bz	i2l26390
 54584                           
 54585                           ;wsw.c: 372: {
 54586                           ;wsw.c: 373: for(l=0;l<Klj[k].nPzc;l++) (*Klj[k].KL).KFc[l].focus=0;
 54587  002154  6A0C               	clrf	KolProc@l,c
 54588  002156  D019               	goto	i2l26386
 54589  002158                     i2l26382:
 54590  002158  500E               	movf	KolProc@k,w,c
 54591  00215A  D901               	call	PL2	;call to abstracted procedure
 54592  00215C  0E03               	movlw	3
 54593  00215E  2602               	addwf	??_KolProc+1,f,c
 54594  002160  C002  FFF6         	movff	??_KolProc+1,tblptrl
 54595  002164  0E10               	movlw	high __smallconst
 54596  002166  6EF7               	movwf	tblptrh,c
 54597  002168  0E00               	movlw	low (__smallconst shr (0+16))
 54598  00216A  6EF8               	movwf	tblptru,c
 54599  00216C  0009               	tblrd		*+
 54600  00216E  CFF5 F003          	movff	tablat,??_KolProc+2
 54601  002172  0009               	tblrd		*+
 54602  002174  CFF5 F004          	movff	tablat,??_KolProc+3
 54603  002178  500C               	movf	KolProc@l,w,c
 54604  00217A  2403               	addwf	??_KolProc+2,w,c
 54605  00217C  6ED9               	movwf	fsr2l,c
 54606  00217E  0E00               	movlw	0
 54607  002180  2004               	addwfc	??_KolProc+3,w,c
 54608  002182  6EDA               	movwf	fsr2h,c
 54609  002184  0EFE               	movlw	-2
 54610  002186  16DF               	andwf	223,f,c
 54611  002188  2A0C               	incf	KolProc@l,f,c
 54612  00218A                     i2l26386:
 54613  00218A  500E               	movf	KolProc@k,w,c
 54614  00218C  D965               	call	PL18	;call to abstracted procedure
 54615  00218E  C002  FFF6         	movff	??_KolProc+1,tblptrl
 54616  002192  0E10               	movlw	high __smallconst
 54617  002194  6EF7               	movwf	tblptrh,c
 54618  002196  0E00               	movlw	low (__smallconst shr (0+16))
 54619  002198  6EF8               	movwf	tblptru,c
 54620  00219A  0008               	tblrd		*
 54621  00219C  50F5               	movf	tablat,w,c
 54622  00219E  5C0C               	subwf	KolProc@l,w,c
 54623  0021A0  E3DB               	bnc	i2l26382
 54624                           
 54625                           ;wsw.c: 374: KTim[k].cykl=0;
 54626  0021A2  500E               	movf	KolProc@k,w,c
 54627  0021A4  0D03               	mullw	3
 54628  0021A6  0101               	movlb	1	; () banked
 54629  0021A8  0E6C               	movlw	low (_KTim+2)
 54630  0021AA  24F3               	addwf	prodl,w,c
 54631  0021AC  6ED9               	movwf	fsr2l,c
 54632  0021AE  0E01               	movlw	high (_KTim+2)
 54633  0021B0  20F4               	addwfc	prodh,w,c
 54634  0021B2  6EDA               	movwf	fsr2h,c
 54635  0021B4  6ADF               	clrf	indf2,c
 54636  0021B6                     i2l26390:
 54637  0021B6  2A0E               	incf	KolProc@k,f,c
 54638  0021B8  D7C1               	goto	i2l26374
 54639  0021BA                     i2l26394:
 54640                           
 54641                           ;wsw.c: 375: }
 54642                           ;wsw.c: 379: for(k=j+1;k<4;k++)
 54643  0021BA  2810               	incf	KolProc@j,w,c
 54644  0021BC  6E0E               	movwf	KolProc@k,c
 54645  0021BE                     i2l26396:
 54646  0021BE  0E03               	movlw	3
 54647  0021C0  640E               	cpfsgt	KolProc@k,c
 54648  0021C2  D001               	goto	i2l26400
 54649  0021C4  D00D               	goto	i2l26410
 54650  0021C6                     i2l26400:
 54651                           
 54652                           ;wsw.c: 380: {
 54653                           ;wsw.c: 381: KInd[k].indeks=0;
 54654  0021C6  0E85               	movlw	low _KInd
 54655  0021C8  240E               	addwf	KolProc@k,w,c
 54656  0021CA  EC92  F055         	call	PL154	;call to abstracted procedure
 54657                           
 54658                           ; BSR set to: 1
 54659                           ;wsw.c: 382: KTim[k].ncS=0;
 54660  0021CE  500E               	movf	KolProc@k,w,c
 54661  0021D0  D96D               	call	PL56	;call to abstracted procedure
 54662  0021D2  6ADF               	clrf	indf2,c
 54663                           
 54664                           ; BSR set to: 1
 54665                           ;wsw.c: 383: KTim[k].ndS=0;
 54666  0021D4  500E               	movf	KolProc@k,w,c
 54667  0021D6  0D03               	mullw	3
 54668  0021D8  D971               	call	PL86	;call to abstracted procedure
 54669  0021DA  6ADF               	clrf	indf2,c
 54670                           
 54671                           ; BSR set to: 1
 54672  0021DC  2A0E               	incf	KolProc@k,f,c
 54673  0021DE  D7EF               	goto	i2l26396
 54674  0021E0                     i2l26410:
 54675                           
 54676                           ;wsw.c: 384: }
 54677                           ;wsw.c: 387: (*(*(*Klj[j].KL).KOut).CAdr).St.focus=1;
 54678  0021E0  5010               	movf	KolProc@j,w,c
 54679  0021E2  D8BD               	call	PL2	;call to abstracted procedure
 54680  0021E4  D8CA               	call	PL4	;call to abstracted procedure
 54681  0021E6  0E01               	movlw	1
 54682  0021E8  12DF               	iorwf	223,f,c
 54683                           
 54684                           ;wsw.c: 391: if (KTim[j].ndS<(*Klj[j].KL).KWP[i].delay)
 54685  0021EA  5010               	movf	KolProc@j,w,c
 54686  0021EC  0D03               	mullw	3
 54687  0021EE  0101               	movlb	1	; () banked
 54688  0021F0  D965               	call	PL86	;call to abstracted procedure
 54689  0021F2  50DF               	movf	indf2,w,c
 54690  0021F4  6E01               	movwf	??_KolProc& (0+255),c
 54691  0021F6  500F               	movf	KolProc@i,w,c
 54692  0021F8  0D03               	mullw	3
 54693  0021FA  CFF3 F002          	movff	prodl,??_KolProc+1
 54694  0021FE  5010               	movf	KolProc@j,w,c
 54695  002200  0D02               	mullw	2
 54696  002202  50F3               	movf	prodl,w,c
 54697  002204  0F44               	addlw	low _Klj
 54698  002206  6E03               	movwf	(??_KolProc+2)& (0+255),c
 54699  002208  C003  FFF6         	movff	??_KolProc+2,tblptrl
 54700  00220C  0E10               	movlw	high __smallconst
 54701  00220E  6EF7               	movwf	tblptrh,c
 54702  002210  0E00               	movlw	low (__smallconst shr (0+16))
 54703  002212  6EF8               	movwf	tblptru,c
 54704  002214  0008               	tblrd		*
 54705  002216  CFF5 F004          	movff	tablat,??_KolProc+3
 54706  00221A  2A04               	incf	??_KolProc+3,f,c
 54707  00221C  C004  FFF6         	movff	??_KolProc+3,tblptrl
 54708  002220  0E10               	movlw	high __smallconst
 54709  002222  6EF7               	movwf	tblptrh,c
 54710  002224  0E00               	movlw	low (__smallconst shr (0+16))
 54711  002226  6EF8               	movwf	tblptru,c
 54712  002228  0008               	tblrd		*
 54713  00222A  50F5               	movf	tablat,w,c
 54714  00222C  2402               	addwf	??_KolProc+1,w,c
 54715  00222E  6E05               	movwf	(??_KolProc+4)& (0+255),c
 54716  002230  0E02               	movlw	2
 54717  002232  2605               	addwf	??_KolProc+4,f,c
 54718  002234  C005  FFF6         	movff	??_KolProc+4,tblptrl
 54719  002238  0E10               	movlw	high __smallconst
 54720  00223A  6EF7               	movwf	tblptrh,c
 54721  00223C  0E00               	movlw	low (__smallconst shr (0+16))
 54722  00223E  6EF8               	movwf	tblptru,c
 54723  002240  0008               	tblrd		*
 54724  002242  50F5               	movf	tablat,w,c
 54725  002244  5C01               	subwf	??_KolProc,w,c
 54726  002246  E257               	bc	i2l26426
 54727                           
 54728                           ; BSR set to: 1
 54729                           ;wsw.c: 392: {
 54730                           ;wsw.c: 393: KTim[j].ncS++;
 54731  002248  5010               	movf	KolProc@j,w,c
 54732  00224A  D930               	call	PL56	;call to abstracted procedure
 54733  00224C  2ADF               	incf	indf2,f,c
 54734                           
 54735                           ;wsw.c: 394: if (KTim[j].ncS>=10)
 54736  00224E  5010               	movf	KolProc@j,w,c
 54737  002250  D92D               	call	PL56	;call to abstracted procedure
 54738  002252  0E09               	movlw	9
 54739  002254  64DF               	cpfsgt	indf2,c
 54740  002256  D007               	goto	i2l26416
 54741                           
 54742                           ; BSR set to: 1
 54743                           ;wsw.c: 395: {
 54744                           ;wsw.c: 396: KTim[j].ncS=0;
 54745  002258  5010               	movf	KolProc@j,w,c
 54746  00225A  D928               	call	PL56	;call to abstracted procedure
 54747  00225C  6ADF               	clrf	indf2,c
 54748                           
 54749                           ;wsw.c: 397: KTim[j].ndS++;
 54750  00225E  5010               	movf	KolProc@j,w,c
 54751  002260  0D03               	mullw	3
 54752  002262  D92C               	call	PL86	;call to abstracted procedure
 54753  002264  2ADF               	incf	indf2,f,c
 54754  002266                     i2l26416:
 54755                           
 54756                           ; BSR set to: 1
 54757                           ;wsw.c: 398: }
 54758                           ;wsw.c: 399: if((*Klj[j].KL).KAP[i].PAdr==0)
 54759  002266  D911               	call	PL46	;call to abstracted procedure
 54760  002268  D8A4               	call	PL6	;call to abstracted procedure
 54761  00226A  D8D3               	call	PL14	;call to abstracted procedure
 54762  00226C  5006               	movf	??_KolProc+5,w,c
 54763  00226E  1005               	iorwf	??_KolProc+4,w,c
 54764  002270  E126               	bnz	i2l26420
 54765                           
 54766                           ; BSR set to: 1
 54767                           ;wsw.c: 400: {
 54768                           ;wsw.c: 401: (*(*(*Klj[j].KL).KOut).CAdr).St=(*Klj[j].KL).KFP[i].PFrm;
 54769  002272  D90B               	call	PL46	;call to abstracted procedure
 54770  002274  D89E               	call	PL6	;call to abstracted procedure
 54771  002276  0E02               	movlw	2
 54772  002278  2603               	addwf	??_KolProc+2,f,c
 54773  00227A  D8CB               	call	PL14	;call to abstracted procedure
 54774  00227C  D8A4               	call	PL8	;call to abstracted procedure
 54775  00227E  C00A  FFD9         	movff	??_KolProc+9,fsr2l
 54776  002282  C00B  FFDA         	movff	??_KolProc+10,fsr2h
 54777  002286  C005  FFDE         	movff	??_KolProc+4,postinc2
 54778  00228A  C006  FFDD         	movff	??_KolProc+5,postdec2
 54779                           
 54780                           ;wsw.c: 402: (*(*(*Klj[j].KL).KOut).CAdr).Dt=(*Klj[j].KL).KWP[i].PWrt;
 54781  00228E  500F               	movf	KolProc@i,w,c
 54782  002290  0D03               	mullw	3
 54783  002292  CFF3 F001          	movff	prodl,??_KolProc
 54784  002296  5010               	movf	KolProc@j,w,c
 54785  002298  0D02               	mullw	2
 54786  00229A  50F3               	movf	prodl,w,c
 54787  00229C  0F44               	addlw	low _Klj
 54788  00229E  6E02               	movwf	(??_KolProc+1)& (0+255),c
 54789  0022A0  D888               	call	PL6	;call to abstracted procedure
 54790  0022A2  2A03               	incf	??_KolProc+2,f,c
 54791  0022A4  D8B6               	call	PL14	;call to abstracted procedure
 54792  0022A6  D88F               	call	PL8	;call to abstracted procedure
 54793  0022A8  0E02               	movlw	2
 54794  0022AA  240A               	addwf	??_KolProc+9,w,c
 54795  0022AC  6ED9               	movwf	fsr2l,c
 54796  0022AE  0E00               	movlw	0
 54797  0022B0  200B               	addwfc	??_KolProc+10,w,c
 54798  0022B2  6EDA               	movwf	fsr2h,c
 54799  0022B4  C005  FFDE         	movff	??_KolProc+4,postinc2
 54800  0022B8  C006  FFDD         	movff	??_KolProc+5,postdec2
 54801                           
 54802                           ;wsw.c: 403: }else (*(*(*Klj[j].KL).KOut).CAdr)=*((*Klj[j].KL).KAP[i].PAdr);
 54803  0022BC  D016               	goto	i2l26422
 54804  0022BE                     i2l26420:
 54805                           
 54806                           ; BSR set to: 1
 54807  0022BE  D8E5               	call	PL46	;call to abstracted procedure
 54808  0022C0  D878               	call	PL6	;call to abstracted procedure
 54809  0022C2  D8A7               	call	PL14	;call to abstracted procedure
 54810  0022C4  C005  FFD9         	movff	??_KolProc+4,fsr2l
 54811  0022C8  C006  FFDA         	movff	??_KolProc+5,fsr2h
 54812  0022CC  D87C               	call	PL8	;call to abstracted procedure
 54813  0022CE  C00A  FFE1         	movff	??_KolProc+9,fsr1l
 54814  0022D2  C00B  FFE2         	movff	??_KolProc+10,fsr1h
 54815  0022D6  CFDE FFE6          	movff	postinc2,postinc1
 54816  0022DA  CFDE FFE6          	movff	postinc2,postinc1
 54817  0022DE  CFDE FFE6          	movff	postinc2,postinc1
 54818  0022E2  CFDD FFE5          	movff	postdec2,postdec1
 54819  0022E6  52E5               	movf	postdec1,f,c
 54820  0022E8  52E5               	movf	postdec1,f,c
 54821  0022EA                     i2l26422:
 54822                           
 54823                           ; BSR set to: 1
 54824                           ;wsw.c: 404: (*(*(*Klj[j].KL).KOut).CAdr).St.focus=1;
 54825  0022EA  5010               	movf	KolProc@j,w,c
 54826  0022EC  D838               	call	PL2	;call to abstracted procedure
 54827  0022EE  D845               	call	PL4	;call to abstracted procedure
 54828  0022F0  0E01               	movlw	1
 54829  0022F2  12DF               	iorwf	223,f,c
 54830                           
 54831                           ;wsw.c: 405: break;
 54832  0022F4  D02F               	goto	i2l26440
 54833  0022F6                     i2l26426:
 54834                           
 54835                           ; BSR set to: 1
 54836                           ;wsw.c: 407: {
 54837                           ;wsw.c: 408: KTim[j].ncS=0;
 54838  0022F6  5010               	movf	KolProc@j,w,c
 54839  0022F8  D8D9               	call	PL56	;call to abstracted procedure
 54840  0022FA  6ADF               	clrf	indf2,c
 54841                           
 54842                           ;wsw.c: 409: KTim[j].ndS=0;
 54843  0022FC  5010               	movf	KolProc@j,w,c
 54844  0022FE  0D03               	mullw	3
 54845  002300  D8DD               	call	PL86	;call to abstracted procedure
 54846  002302  6ADF               	clrf	indf2,c
 54847                           
 54848                           ; BSR set to: 1
 54849                           ;wsw.c: 410: if (KInd[j].indeks>=Klj[j].nPzc-1)
 54850  002304  5010               	movf	KolProc@j,w,c
 54851  002306  D8A8               	call	PL18	;call to abstracted procedure
 54852  002308  D854               	call	PL6	;call to abstracted procedure
 54853  00230A  0EFF               	movlw	255
 54854  00230C  2403               	addwf	??_KolProc+2,w,c
 54855  00230E  6E04               	movwf	(??_KolProc+3)& (0+255),c
 54856  002310  6A05               	clrf	(??_KolProc+4)& (0+255),c
 54857  002312  0EFF               	movlw	255
 54858  002314  2205               	addwfc	(??_KolProc+4)& (0+255),f,c
 54859  002316  D8C3               	call	PL50	;call to abstracted procedure
 54860  002318  30DF               	rrcf	223,w,c
 54861  00231A  32E8               	rrcf	wreg,f,c
 54862  00231C  0B3F               	andlw	63
 54863  00231E  6E06               	movwf	(??_KolProc+5)& (0+255),c
 54864  002320  6A07               	clrf	(??_KolProc+6)& (0+255),c
 54865  002322  5007               	movf	??_KolProc+6,w,c
 54866  002324  0A80               	xorlw	128
 54867  002326  6E08               	movwf	(??_KolProc+7)& (0+255),c
 54868  002328  5004               	movf	??_KolProc+3,w,c
 54869  00232A  5C06               	subwf	??_KolProc+5,w,c
 54870  00232C  5005               	movf	??_KolProc+4,w,c
 54871  00232E  0A80               	xorlw	128
 54872  002330  5808               	subwfb	(??_KolProc+7)& (0+255),w,c
 54873  002332  E306               	bnc	i2l26436
 54874                           
 54875                           ; BSR set to: 1
 54876                           ;wsw.c: 411: {
 54877                           ;wsw.c: 412: KInd[j].indeks=0;
 54878  002334  D8B4               	call	PL50	;call to abstracted procedure
 54879  002336  0E03               	movlw	-253
 54880  002338  16DF               	andwf	223,f,c
 54881                           
 54882                           ; BSR set to: 1
 54883                           ;wsw.c: 413: if(nC) KTim[j].cykl++;
 54884  00233A  500D               	movf	KolProc@nC,w,c
 54885  00233C  E001 D6EE          	bnz	i2l26368
 54886  002340                     i2l26436:
 54887  002340  2A0F               	incf	KolProc@i,f,c
 54888  002342                     i2l26438:
 54889  002342  5010               	movf	KolProc@j,w,c
 54890  002344  0D02               	mullw	2
 54891  002346  CFF3 F001          	movff	prodl,??_KolProc
 54892  00234A  2A01               	incf	??_KolProc,f,c
 54893  00234C  5001               	movf	??_KolProc,w,c
 54894  00234E  D878               	call	PL16	;call to abstracted procedure
 54895  002350  E201 D6BC          	bnc	i2l26360
 54896  002354                     i2l26440:
 54897  002354  2A10               	incf	KolProc@j,f,c
 54898  002356  0E03               	movlw	3
 54899  002358  6410               	cpfsgt	KolProc@j,c
 54900  00235A  D63D               	goto	i2l26308
 54901  00235C  0C03               	retlw	3
 54902  00235E                     __end_of_KolProc:
 54903                           	opt stack 0
 54904  00235E                     PL2:
 54905                           	opt stack 21
 54906  00235E  0D02               	mullw	2
 54907  002360  50F3               	movf	prodl,w,c
 54908  002362  0F44               	addlw	low _Klj
 54909  002364  6E01               	movwf	??_KolProc& (0+255),c
 54910  002366  C001  FFF6         	movff	??_KolProc,tblptrl
 54911  00236A  0E10               	movlw	high __smallconst
 54912  00236C  6EF7               	movwf	tblptrh,c
 54913  00236E  0E00               	movlw	low (__smallconst shr (0+16))
 54914  002370  6EF8               	movwf	tblptru,c
 54915  002372  0008               	tblrd		*
 54916  002374  CFF5 F002          	movff	tablat,??_KolProc+1
 54917  002378  0012               	return	
 54918  00237A                     __end_ofPL2:
 54919                           	opt stack 0
 54920  00237A                     PL4:
 54921                           	opt stack 21
 54922  00237A  0E05               	movlw	5
 54923  00237C  2602               	addwf	??_KolProc+1,f,c
 54924  00237E  C002  FFF6         	movff	??_KolProc+1,tblptrl
 54925  002382  0E10               	movlw	high __smallconst
 54926  002384  6EF7               	movwf	tblptrh,c
 54927  002386  0E00               	movlw	low (__smallconst shr (0+16))
 54928  002388  6EF8               	movwf	tblptru,c
 54929  00238A  0008               	tblrd		*
 54930  00238C  CFF5 F003          	movff	tablat,??_KolProc+2
 54931  002390  C003  FFF6         	movff	??_KolProc+2,tblptrl
 54932  002394  0E10               	movlw	high __smallconst
 54933  002396  6EF7               	movwf	tblptrh,c
 54934  002398  0E00               	movlw	low (__smallconst shr (0+16))
 54935  00239A  6EF8               	movwf	tblptru,c
 54936  00239C  0009               	tblrd		*+
 54937  00239E  CFF5 F004          	movff	tablat,??_KolProc+3
 54938  0023A2  0009               	tblrd		*+
 54939  0023A4  CFF5 F005          	movff	tablat,??_KolProc+4
 54940  0023A8  C004  FFD9         	movff	??_KolProc+3,fsr2l
 54941  0023AC  C005  FFDA         	movff	??_KolProc+4,fsr2h
 54942  0023B0  0012               	return	
 54943  0023B2                     __end_ofPL4:
 54944                           	opt stack 0
 54945  0023B2                     PL6:
 54946                           	opt stack 21
 54947  0023B2  C002  FFF6         	movff	??_KolProc+1,tblptrl
 54948  0023B6  0E10               	movlw	high __smallconst
 54949  0023B8  6EF7               	movwf	tblptrh,c
 54950  0023BA  0E00               	movlw	low (__smallconst shr (0+16))
 54951  0023BC  6EF8               	movwf	tblptru,c
 54952  0023BE  0008               	tblrd		*
 54953  0023C0  CFF5 F003          	movff	tablat,??_KolProc+2
 54954  0023C4  0012               	return	
 54955  0023C6                     __end_ofPL6:
 54956                           	opt stack 0
 54957  0023C6                     PL8:
 54958                           	opt stack 21
 54959  0023C6  5010               	movf	KolProc@j,w,c
 54960  0023C8  0D02               	mullw	2
 54961  0023CA  50F3               	movf	prodl,w,c
 54962  0023CC  0F44               	addlw	low _Klj
 54963  0023CE  6E07               	movwf	(??_KolProc+6)& (0+255),c
 54964  0023D0  C007  FFF6         	movff	??_KolProc+6,tblptrl
 54965  0023D4  0E10               	movlw	high __smallconst
 54966  0023D6  6EF7               	movwf	tblptrh,c
 54967  0023D8  0E00               	movlw	low (__smallconst shr (0+16))
 54968  0023DA  6EF8               	movwf	tblptru,c
 54969  0023DC  0008               	tblrd		*
 54970  0023DE  CFF5 F008          	movff	tablat,??_KolProc+7
 54971  0023E2  0E05               	movlw	5
 54972  0023E4  2608               	addwf	??_KolProc+7,f,c
 54973  0023E6  C008  FFF6         	movff	??_KolProc+7,tblptrl
 54974  0023EA  0E10               	movlw	high __smallconst
 54975  0023EC  6EF7               	movwf	tblptrh,c
 54976  0023EE  0E00               	movlw	low (__smallconst shr (0+16))
 54977  0023F0  6EF8               	movwf	tblptru,c
 54978  0023F2  0008               	tblrd		*
 54979  0023F4  CFF5 F009          	movff	tablat,??_KolProc+8
 54980  0023F8  C009  FFF6         	movff	??_KolProc+8,tblptrl
 54981  0023FC  0E10               	movlw	high __smallconst
 54982  0023FE  6EF7               	movwf	tblptrh,c
 54983  002400  0E00               	movlw	low (__smallconst shr (0+16))
 54984  002402  6EF8               	movwf	tblptru,c
 54985  002404  0009               	tblrd		*+
 54986  002406  CFF5 F00A          	movff	tablat,??_KolProc+9
 54987  00240A  0009               	tblrd		*+
 54988  00240C  CFF5 F00B          	movff	tablat,??_KolProc+10
 54989  002410  0012               	return	
 54990  002412                     __end_ofPL8:
 54991                           	opt stack 0
 54992  002412                     PL14:
 54993                           	opt stack 21
 54994  002412  C003  FFF6         	movff	??_KolProc+2,tblptrl
 54995  002416  0E10               	movlw	high __smallconst
 54996  002418  6EF7               	movwf	tblptrh,c
 54997  00241A  0E00               	movlw	low (__smallconst shr (0+16))
 54998  00241C  6EF8               	movwf	tblptru,c
 54999  00241E  0008               	tblrd		*
 55000  002420  50F5               	movf	tablat,w,c
 55001  002422  2401               	addwf	??_KolProc,w,c
 55002  002424  6E04               	movwf	(??_KolProc+3)& (0+255),c
 55003  002426  C004  FFF6         	movff	??_KolProc+3,tblptrl
 55004  00242A  0E10               	movlw	high __smallconst
 55005  00242C  6EF7               	movwf	tblptrh,c
 55006  00242E  0E00               	movlw	low (__smallconst shr (0+16))
 55007  002430  6EF8               	movwf	tblptru,c
 55008  002432  0009               	tblrd		*+
 55009  002434  CFF5 F005          	movff	tablat,??_KolProc+4
 55010  002438  0009               	tblrd		*+
 55011  00243A  CFF5 F006          	movff	tablat,??_KolProc+5
 55012  00243E  0012               	return	
 55013  002440                     __end_ofPL14:
 55014                           	opt stack 0
 55015  002440                     PL16:
 55016                           	opt stack 21
 55017  002440  0F44               	addlw	low _Klj
 55018  002442  6E02               	movwf	(??_KolProc+1)& (0+255),c
 55019  002444  C002  FFF6         	movff	??_KolProc+1,tblptrl
 55020  002448  0E10               	movlw	high __smallconst
 55021  00244A  6EF7               	movwf	tblptrh,c
 55022  00244C  0E00               	movlw	low (__smallconst shr (0+16))
 55023  00244E  6EF8               	movwf	tblptru,c
 55024  002450  0008               	tblrd		*
 55025  002452  50F5               	movf	tablat,w,c
 55026  002454  5C0F               	subwf	KolProc@i,w,c
 55027  002456  0012               	return	
 55028  002458                     __end_ofPL16:
 55029                           	opt stack 0
 55030  002458                     PL18:
 55031                           	opt stack 21
 55032  002458  0D02               	mullw	2
 55033  00245A  CFF3 F001          	movff	prodl,??_KolProc
 55034  00245E  2A01               	incf	??_KolProc,f,c
 55035  002460  5001               	movf	??_KolProc,w,c
 55036  002462  0F44               	addlw	low _Klj
 55037  002464  6E02               	movwf	(??_KolProc+1)& (0+255),c
 55038  002466  0012               	return	
 55039  002468                     __end_ofPL18:
 55040                           	opt stack 0
 55041  002468                     PL34:
 55042                           	opt stack 21
 55043  002468  0E10               	movlw	high __smallconst
 55044  00246A  6EF7               	movwf	tblptrh,c
 55045  00246C  0E00               	movlw	low (__smallconst shr (0+16))
 55046  00246E  6EF8               	movwf	tblptru,c
 55047  002470  0009               	tblrd		*+
 55048  002472  CFF5 F003          	movff	tablat,??_KolProc+2
 55049  002476  0009               	tblrd		*+
 55050  002478  CFF5 F004          	movff	tablat,??_KolProc+3
 55051  00247C  500F               	movf	KolProc@i,w,c
 55052  00247E  2403               	addwf	??_KolProc+2,w,c
 55053  002480  6ED9               	movwf	fsr2l,c
 55054  002482  0E00               	movlw	0
 55055  002484  2004               	addwfc	??_KolProc+3,w,c
 55056  002486  6EDA               	movwf	fsr2h,c
 55057  002488  0012               	return	
 55058  00248A                     __end_ofPL34:
 55059                           	opt stack 0
 55060  00248A                     PL46:
 55061                           	opt stack 21
 55062  00248A  500F               	movf	KolProc@i,w,c
 55063  00248C  0D02               	mullw	2
 55064  00248E  CFF3 F001          	movff	prodl,??_KolProc
 55065  002492  5010               	movf	KolProc@j,w,c
 55066  002494  0D02               	mullw	2
 55067  002496  50F3               	movf	prodl,w,c
 55068  002498  0F44               	addlw	low _Klj
 55069  00249A  6E02               	movwf	(??_KolProc+1)& (0+255),c
 55070  00249C  0012               	return	
 55071  00249E                     __end_ofPL46:
 55072                           	opt stack 0
 55073  00249E                     PL50:
 55074                           	opt stack 21
 55075  00249E  0E85               	movlw	low _KInd
 55076  0024A0  2410               	addwf	KolProc@j,w,c
 55077  0024A2  6ED9               	movwf	fsr2l,c
 55078  0024A4  6ADA               	clrf	fsr2h,c
 55079  0024A6  0E01               	movlw	high _KInd
 55080  0024A8  22DA               	addwfc	fsr2h,f,c
 55081  0024AA  0012               	return	
 55082  0024AC                     __end_ofPL50:
 55083                           	opt stack 0
 55084  0024AC                     PL56:
 55085                           	opt stack 21
 55086  0024AC  0D03               	mullw	3
 55087  0024AE  0E6A               	movlw	low _KTim
 55088  0024B0  24F3               	addwf	prodl,w,c
 55089  0024B2  6ED9               	movwf	fsr2l,c
 55090  0024B4  0E01               	movlw	high _KTim
 55091  0024B6  20F4               	addwfc	prodh,w,c
 55092  0024B8  6EDA               	movwf	fsr2h,c
 55093  0024BA  0012               	return	
 55094  0024BC                     __end_ofPL56:
 55095                           	opt stack 0
 55096  0024BC                     PL86:
 55097                           	opt stack 21
 55098  0024BC  0E6B               	movlw	low (_KTim+1)
 55099  0024BE  24F3               	addwf	prodl,w,c
 55100  0024C0  6ED9               	movwf	fsr2l,c
 55101  0024C2  0E01               	movlw	high (_KTim+1)
 55102  0024C4  20F4               	addwfc	prodh,w,c
 55103  0024C6  6EDA               	movwf	fsr2h,c
 55104  0024C8  0012               	return	
 55105  0024CA                     __end_ofPL86:
 55106                           	opt stack 0
 55107  0024CA                     PL92:
 55108                           	opt stack 21
 55109  0024CA  5010               	movf	KolProc@j,w,c
 55110  0024CC  0D03               	mullw	3
 55111  0024CE  0E6C               	movlw	low (_KTim+2)
 55112  0024D0  24F3               	addwf	prodl,w,c
 55113  0024D2  6ED9               	movwf	fsr2l,c
 55114  0024D4  0E01               	movlw	high (_KTim+2)
 55115  0024D6  20F4               	addwfc	prodh,w,c
 55116  0024D8  6EDA               	movwf	fsr2h,c
 55117  0024DA  0012               	return	
 55118  0024DC                     __end_ofPL92:
 55119                           	opt stack 0
 55120  0024DC                     PL112:
 55121                           	opt stack 21
 55122  0024DC  0E02               	movlw	2
 55123  0024DE  2603               	addwf	??_KolProc+2,f,c
 55124  0024E0  C003  FFF6         	movff	??_KolProc+2,tblptrl
 55125  0024E4  0E10               	movlw	high __smallconst
 55126  0024E6  6EF7               	movwf	tblptrh,c
 55127  0024E8  0E00               	movlw	low (__smallconst shr (0+16))
 55128  0024EA  6EF8               	movwf	tblptru,c
 55129  0024EC  0008               	tblrd		*
 55130  0024EE  0012               	return	
 55131  0024F0                     __end_ofPL112:
 55132                           	opt stack 0
 55133                           tblptru	equ	0xFF8
 55134                           tblptrh	equ	0xFF7
 55135                           tblptrl	equ	0xFF6
 55136                           tablat	equ	0xFF5
 55137                           prodh	equ	0xFF4
 55138                           prodl	equ	0xFF3
 55139                           intcon	equ	0xFF2
 55140                           postinc0	equ	0xFEE
 55141                           wreg	equ	0xFE8
 55142                           indf1	equ	0xFE7
 55143                           postinc1	equ	0xFE6
 55144                           postdec1	equ	0xFE5
 55145                           fsr1h	equ	0xFE2
 55146                           fsr1l	equ	0xFE1
 55147                           indf2	equ	0xFDF
 55148                           postinc2	equ	0xFDE
 55149                           postdec2	equ	0xFDD
 55150                           fsr2h	equ	0xFDA
 55151                           fsr2l	equ	0xFD9
 55152                           status	equ	0xFD8
 55153                           
 55154 ;; *************** function _SetPrWswData *****************
 55155 ;; Defined at:
 55156 ;;		line 425 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 55157 ;; Parameters:    Size  Location     Type
 55158 ;;		None
 55159 ;; Auto vars:     Size  Location     Type
 55160 ;;  i               1    1[COMRAM] unsigned char 
 55161 ;; Return value:  Size  Location     Type
 55162 ;;		None               void
 55163 ;; Registers used:
 55164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55165 ;; Tracked objects:
 55166 ;;		On entry : 0/2
 55167 ;;		On exit  : C/0
 55168 ;;		Unchanged: FFFFFFF0/0
 55169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55174 ;;Total ram usage:        2 bytes
 55175 ;; Hardware stack levels used:    1
 55176 ;; This function calls:
 55177 ;;		Nothing
 55178 ;; This function is called by:
 55179 ;;		_RefreshWSW
 55180 ;; This function uses a non-reentrant model
 55181 ;;
 55182                           
 55183                           	psect	text263
 55184  00A05C                     __ptext263:
 55185                           	opt stack 0
 55186  00A05C                     _SetPrWswData:
 55187                           	opt stack 21
 55188                           
 55189                           ;wsw.c: 426: unsigned char i;
 55190                           ;wsw.c: 427: for(i=0;i<10-1;i++)
 55191  00A05C  6A02               	clrf	SetPrWswData@i,c
 55192  00A05E                     i2l26450:
 55193                           
 55194                           ;wsw.c: 428: {
 55195                           ;wsw.c: 429: if(PWD[i].St.focus)
 55196  00A05E  5002               	movf	SetPrWswData@i,w,c
 55197  00A060  0D04               	mullw	4
 55198  00A062  0102               	movlb	2	; () banked
 55199  00A064  D81E               	call	PL156	;call to abstracted procedure
 55200  00A066  50DF               	movf	indf2,w,c
 55201  00A068  6E01               	movwf	??_SetPrWswData& (0+255),c
 55202  00A06A  A001               	btfss	??_SetPrWswData,0,c
 55203  00A06C  D00D               	goto	i2l26456
 55204                           
 55205                           ; BSR set to: 2
 55206                           ;wsw.c: 430: {
 55207                           ;wsw.c: 431: WswData=PWD[i];
 55208  00A06E  5002               	movf	SetPrWswData@i,w,c
 55209  00A070  0D04               	mullw	4
 55210  00A072  D817               	call	PL156	;call to abstracted procedure
 55211  00A074  0101               	movlb	1	; () banked
 55212  00A076  CFDE F189          	movff	postinc2,_WswData
 55213  00A07A  CFDE F18A          	movff	postinc2,_WswData+1
 55214  00A07E  CFDE F18B          	movff	postinc2,_WswData+2
 55215  00A082  CFDE F18C          	movff	postinc2,_WswData+3
 55216  00A086  0012               	return	
 55217  00A088                     i2l26456:
 55218                           
 55219                           ; BSR set to: 2
 55220                           ;wsw.c: 433: };
 55221  00A088  2A02               	incf	SetPrWswData@i,f,c
 55222                           
 55223                           ; BSR set to: 2
 55224  00A08A  0E08               	movlw	8
 55225  00A08C  6402               	cpfsgt	SetPrWswData@i,c
 55226  00A08E  D7E7               	goto	i2l26450
 55227                           
 55228                           ; BSR set to: 2
 55229                           ;wsw.c: 434: }
 55230                           ;wsw.c: 435: WswData=PWD[10-1];
 55231  00A090  C271  F189         	movff	_PWD+36,_WswData
 55232  00A094  C272  F18A         	movff	_PWD+37,_WswData+1
 55233  00A098  C273  F18B         	movff	_PWD+38,_WswData+2
 55234  00A09C  C274  F18C         	movff	_PWD+39,_WswData+3
 55235  00A0A0  0C08               	retlw	8
 55236  00A0A2                     __end_of_SetPrWswData:
 55237                           	opt stack 0
 55238  00A0A2                     PL156:
 55239                           	opt stack 21
 55240  00A0A2  0E4D               	movlw	low _PWD
 55241  00A0A4  24F3               	addwf	prodl,w,c
 55242  00A0A6  6ED9               	movwf	fsr2l,c
 55243  00A0A8  0E02               	movlw	high _PWD
 55244  00A0AA  20F4               	addwfc	prodh,w,c
 55245  00A0AC  6EDA               	movwf	fsr2h,c
 55246  00A0AE  0012               	return	
 55247  00A0B0                     __end_ofPL156:
 55248                           	opt stack 0
 55249                           tblptru	equ	0xFF8
 55250                           tblptrh	equ	0xFF7
 55251                           tblptrl	equ	0xFF6
 55252                           tablat	equ	0xFF5
 55253                           prodh	equ	0xFF4
 55254                           prodl	equ	0xFF3
 55255                           intcon	equ	0xFF2
 55256                           postinc0	equ	0xFEE
 55257                           wreg	equ	0xFE8
 55258                           indf1	equ	0xFE7
 55259                           postinc1	equ	0xFE6
 55260                           postdec1	equ	0xFE5
 55261                           fsr1h	equ	0xFE2
 55262                           fsr1l	equ	0xFE1
 55263                           indf2	equ	0xFDF
 55264                           postinc2	equ	0xFDE
 55265                           postdec2	equ	0xFDD
 55266                           fsr2h	equ	0xFDA
 55267                           fsr2l	equ	0xFD9
 55268                           status	equ	0xFD8
 55269                           
 55270 ;; *************** function _FormatWswData *****************
 55271 ;; Defined at:
 55272 ;;		line 442 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 55273 ;; Parameters:    Size  Location     Type
 55274 ;;		None
 55275 ;; Auto vars:     Size  Location     Type
 55276 ;;		None
 55277 ;; Return value:  Size  Location     Type
 55278 ;;		None               void
 55279 ;; Registers used:
 55280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 55281 ;; Tracked objects:
 55282 ;;		On entry : C/2
 55283 ;;		On exit  : F/1
 55284 ;;		Unchanged: FFFFFFF0/0
 55285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55290 ;;Total ram usage:        2 bytes
 55291 ;; Hardware stack levels used:    1
 55292 ;; Hardware stack levels required when called:    1
 55293 ;; This function calls:
 55294 ;;		i2___lbdiv
 55295 ;;		___lbmod
 55296 ;;		_Swbty
 55297 ;;		_Rwbty
 55298 ;; This function is called by:
 55299 ;;		_RefreshWSW
 55300 ;; This function uses a non-reentrant model
 55301 ;;
 55302                           
 55303                           	psect	text264
 55304  008412                     __ptext264:
 55305                           	opt stack 0
 55306  008412                     _FormatWswData:
 55307                           	opt stack 20
 55308                           
 55309                           ;wsw.c: 445: if(WswData.St.hex)
 55310  008412  0101               	movlb	1	; () banked
 55311  008414  A589               	btfss	_WswData& (0+255),2,b
 55312  008416  D00F               	goto	i2l4501
 55313                           
 55314                           ; BSR set to: 1
 55315                           ;wsw.c: 446: {
 55316                           ;wsw.c: 447: LedData.dLed1=Znak[(WswData.Dt.Data0&0xF0)>>4];
 55317  008418  C18C  F005         	movff	_WswData+3,??_FormatWswData
 55318  00841C  3A05               	swapf	??_FormatWswData,f,c
 55319  00841E  0E0F               	movlw	15
 55320  008420  1605               	andwf	??_FormatWswData,f,c
 55321  008422  1605               	andwf	??_FormatWswData,f,c
 55322  008424  D864               	call	PL70	;call to abstracted procedure
 55323  008426  CFF5 F18E          	movff	tablat,_LedData+1
 55324                           
 55325                           ;wsw.c: 448: LedData.dLed0=Znak[WswData.Dt.Data0&0x0F];
 55326  00842A  C18C  F005         	movff	_WswData+3,??_FormatWswData
 55327  00842E  0E0F               	movlw	15
 55328  008430  1605               	andwf	??_FormatWswData,f,c
 55329  008432  D85D               	call	PL70	;call to abstracted procedure
 55330  008434  D019               	goto	L110
 55331  008436                     i2l4501:
 55332                           
 55333                           ; BSR set to: 1
 55334                           ;wsw.c: 450: if(WswData.St.dec)
 55335  008436  A389               	btfss	_WswData& (0+255),1,b
 55336  008438  D01A               	goto	i2l4503
 55337                           
 55338                           ; BSR set to: 1
 55339                           ;wsw.c: 451: {
 55340                           ;wsw.c: 452: if(WswData.Dt.Data0>99) WswData.Dt.Data0=99;
 55341  00843A  EE21  F08C         	lfsr	2,_WswData+3
 55342  00843E  0E63               	movlw	99
 55343  008440  64DF               	cpfsgt	indf2,c
 55344  008442  D001               	goto	i2l27190
 55345                           
 55346                           ; BSR set to: 1
 55347  008444  6F8C               	movwf	(_WswData+3)& (0+255),b
 55348  008446                     i2l27190:
 55349                           
 55350                           ; BSR set to: 1
 55351                           ;wsw.c: 453: LedData.dLed1=Znak[WswData.Dt.Data0/10];
 55352  008446  0E0A               	movlw	10
 55353  008448  6E01               	movwf	?i2___lbdiv,c
 55354  00844A  518C               	movf	(_WswData+3)& (0+255),w,b
 55355  00844C  ECB1  F054         	call	i2___lbdiv
 55356  008450  6E05               	movwf	??_FormatWswData& (0+255),c
 55357  008452  D84D               	call	PL70	;call to abstracted procedure
 55358  008454  CFF5 F18E          	movff	tablat,_LedData+1
 55359                           
 55360                           ; BSR set to: 1
 55361                           ;wsw.c: 454: LedData.dLed0=Znak[WswData.Dt.Data0%10];
 55362  008458  0E0A               	movlw	10
 55363  00845A  6E01               	movwf	?___lbmod,c
 55364  00845C  518C               	movf	(_WswData+3)& (0+255),w,b
 55365  00845E  EC03  F057         	call	___lbmod
 55366  008462  6E05               	movwf	??_FormatWswData& (0+255),c
 55367  008464  D844               	call	PL70	;call to abstracted procedure
 55368  008466  0101               	movlb	1	; () banked
 55369  008468                     L110:
 55370  008468  CFF5 F18F          	movff	tablat,_LedData+2
 55371                           
 55372                           ;wsw.c: 455: }else
 55373  00846C  D004               	goto	i2l4502
 55374  00846E                     i2l4503:
 55375                           
 55376                           ; BSR set to: 1
 55377                           ;wsw.c: 456: {
 55378                           ;wsw.c: 457: LedData.dLed1=WswData.Dt.Data1;
 55379  00846E  C18B  F18E         	movff	_WswData+2,_LedData+1
 55380                           
 55381                           ;wsw.c: 458: LedData.dLed0=WswData.Dt.Data0;
 55382  008472  C18C  F18F         	movff	_WswData+3,_LedData+2
 55383  008476                     i2l4502:
 55384                           
 55385                           ; BSR set to: 1
 55386                           ;wsw.c: 459: }
 55387                           ;wsw.c: 460: if (WswData.St.autoOFF&&(LedData.dLed1==Znak[0]))
 55388  008476  A789               	btfss	_WswData& (0+255),3,b
 55389  008478  D00D               	goto	i2l4506
 55390                           
 55391                           ; BSR set to: 1
 55392  00847A  0E34               	movlw	low _Znak
 55393  00847C  6EF6               	movwf	tblptrl,c
 55394  00847E  0E10               	movlw	high _Znak
 55395  008480  6EF7               	movwf	tblptrh,c
 55396  008482  0E00               	movlw	low (_Znak shr (0+16))
 55397  008484  6EF8               	movwf	tblptru,c
 55398  008486  0008               	tblrd		*
 55399  008488  50F5               	movf	tablat,w,c
 55400  00848A  EE21  F08E         	lfsr	2,_LedData+1
 55401  00848E  62DF               	cpfseq	indf2,c
 55402  008490  D001               	goto	i2l4506
 55403                           
 55404                           ; BSR set to: 1
 55405                           ;wsw.c: 461: LedData.dLed1=0b11111111;
 55406  008492  698E               	setf	(_LedData+1)& (0+255),b
 55407  008494                     i2l4506:
 55408                           
 55409                           ; BSR set to: 1
 55410                           ;wsw.c: 462: if (WswData.St.kropka0)
 55411  008494  A989               	btfss	_WswData& (0+255),4,b
 55412  008496  D003               	goto	i2l27200
 55413                           
 55414                           ; BSR set to: 1
 55415                           ;wsw.c: 463: LedData.dLed0=LedData.dLed0&0b11101111;
 55416  008498  518F               	movf	(_LedData+2)& (0+255),w,b
 55417  00849A  0BEF               	andlw	239
 55418  00849C  6F8F               	movwf	(_LedData+2)& (0+255),b
 55419  00849E                     i2l27200:
 55420                           
 55421                           ; BSR set to: 1
 55422                           ;wsw.c: 464: if (WswData.St.kropka1)
 55423  00849E  AB89               	btfss	_WswData& (0+255),5,b
 55424  0084A0  D003               	goto	i2l27204
 55425                           
 55426                           ; BSR set to: 1
 55427                           ;wsw.c: 465: LedData.dLed1=LedData.dLed1&0b11101111;
 55428  0084A2  518E               	movf	(_LedData+1)& (0+255),w,b
 55429  0084A4  0BEF               	andlw	239
 55430  0084A6  6F8E               	movwf	(_LedData+1)& (0+255),b
 55431  0084A8                     i2l27204:
 55432                           
 55433                           ; BSR set to: 1
 55434                           ;wsw.c: 466: if (WswData.St.wygas0||LedData.setOff)
 55435  0084A8  AD89               	btfss	_WswData& (0+255),6,b
 55436                           
 55437                           ; BSR set to: 1
 55438  0084AA  B18D               	btfsc	_LedData& (0+255),0,b
 55439                           
 55440                           ; BSR set to: 1
 55441                           ;wsw.c: 467: LedData.dLed0=0b11111111;
 55442  0084AC  698F               	setf	(_LedData+2)& (0+255),b
 55443                           
 55444                           ; BSR set to: 1
 55445                           ;wsw.c: 468: if (WswData.St.wygas1||LedData.setOff)
 55446  0084AE  AF89               	btfss	_WswData& (0+255),7,b
 55447                           
 55448                           ; BSR set to: 1
 55449  0084B0  B18D               	btfsc	_LedData& (0+255),0,b
 55450                           
 55451                           ; BSR set to: 1
 55452                           ;wsw.c: 469: LedData.dLed1=0b11111111;
 55453  0084B2  698E               	setf	(_LedData+1)& (0+255),b
 55454                           
 55455                           ; BSR set to: 1
 55456                           ;wsw.c: 471: if (LedData.setOff)
 55457  0084B4  A18D               	btfss	_LedData& (0+255),0,b
 55458  0084B6  D003               	goto	i2l27212
 55459                           
 55460                           ; BSR set to: 1
 55461                           ;wsw.c: 472: {
 55462                           ;wsw.c: 475: wbty[1]|=0x0f;
 55463  0084B8  0E0F               	movlw	15
 55464  0084BA  1393               	iorwf	(_wbty+1)& (0+255),f,b
 55465                           
 55466                           ;wsw.c: 480: }
 55467  0084BC  0C0F               	retlw	15
 55468  0084BE                     i2l27212:
 55469                           
 55470                           ; BSR set to: 1
 55471                           ;wsw.c: 481: else
 55472                           ;wsw.c: 482: if (WswData.St.wbdid&&(WswData.St.sdiode||WswData.St.rdiode))
 55473  0084BE  398A               	swapf	(_WswData+1)& (0+255),w,b
 55474  0084C0  0B0F               	andlw	15
 55475  0084C2  E010               	bz	i2l27222
 55476                           
 55477                           ; BSR set to: 1
 55478  0084C4  B58A               	btfsc	(_WswData+1)& (0+255),2,b
 55479  0084C6  D002               	goto	i2l4519
 55480                           
 55481                           ; BSR set to: 1
 55482  0084C8  A78A               	btfss	(_WswData+1)& (0+255),3,b
 55483  0084CA  D00C               	goto	i2l27222
 55484  0084CC                     i2l4519:
 55485                           
 55486                           ; BSR set to: 1
 55487                           ;wsw.c: 483: {
 55488                           ;wsw.c: 486: if (WswData.St.sdiode) Swbty(WswData.St.wbdid);
 55489  0084CC  A58A               	btfss	(_WswData+1)& (0+255),2,b
 55490  0084CE  D004               	goto	i2l4520
 55491                           
 55492                           ; BSR set to: 1
 55493  0084D0  398A               	swapf	(_WswData+1)& (0+255),w,b
 55494  0084D2  0B0F               	andlw	15
 55495  0084D4  EFD4  F058         	goto	_Swbty
 55496  0084D8                     i2l4520:
 55497                           
 55498                           ; BSR set to: 1
 55499                           ;wsw.c: 487: else
 55500                           ;wsw.c: 488: if (WswData.St.rdiode) Rwbty(WswData.St.wbdid);
 55501  0084D8  A78A               	btfss	(_WswData+1)& (0+255),3,b
 55502  0084DA  0012               	return	
 55503                           
 55504                           ; BSR set to: 1
 55505  0084DC  398A               	swapf	(_WswData+1)& (0+255),w,b
 55506  0084DE  0B0F               	andlw	15
 55507  0084E0  EFE4  F058         	goto	_Rwbty
 55508  0084E4                     i2l27222:
 55509                           
 55510                           ; BSR set to: 1
 55511                           ;wsw.c: 490: else
 55512                           ;wsw.c: 491: {
 55513                           ;wsw.c: 495: wbty[1]|=0x0f;
 55514  0084E4  0E0F               	movlw	15
 55515  0084E6  1393               	iorwf	(_wbty+1)& (0+255),f,b
 55516                           
 55517                           ;wsw.c: 496: wbty[1]&=~(wsdid);
 55518  0084E8  1C40               	comf	_wsdid,w,c
 55519  0084EA  1793               	andwf	(_wbty+1)& (0+255),f,b
 55520  0084EC  0012               	return	
 55521  0084EE                     __end_of_FormatWswData:
 55522                           	opt stack 0
 55523  0084EE                     PL70:
 55524                           	opt stack 20
 55525  0084EE  5005               	movf	??_FormatWswData,w,c
 55526  0084F0  0F34               	addlw	low _Znak
 55527  0084F2  6E06               	movwf	(??_FormatWswData+1)& (0+255),c
 55528  0084F4  C006  FFF6         	movff	??_FormatWswData+1,tblptrl
 55529  0084F8  0E10               	movlw	high __smallconst
 55530  0084FA  6EF7               	movwf	tblptrh,c
 55531  0084FC  0E00               	movlw	low (__smallconst shr (0+16))
 55532  0084FE  6EF8               	movwf	tblptru,c
 55533  008500  0008               	tblrd		*
 55534  008502  0012               	return	
 55535  008504                     __end_ofPL70:
 55536                           	opt stack 0
 55537                           tblptru	equ	0xFF8
 55538                           tblptrh	equ	0xFF7
 55539                           tblptrl	equ	0xFF6
 55540                           tablat	equ	0xFF5
 55541                           prodh	equ	0xFF4
 55542                           prodl	equ	0xFF3
 55543                           intcon	equ	0xFF2
 55544                           postinc0	equ	0xFEE
 55545                           wreg	equ	0xFE8
 55546                           indf1	equ	0xFE7
 55547                           postinc1	equ	0xFE6
 55548                           postdec1	equ	0xFE5
 55549                           fsr1h	equ	0xFE2
 55550                           fsr1l	equ	0xFE1
 55551                           indf2	equ	0xFDF
 55552                           postinc2	equ	0xFDE
 55553                           postdec2	equ	0xFDD
 55554                           fsr2h	equ	0xFDA
 55555                           fsr2l	equ	0xFD9
 55556                           status	equ	0xFD8
 55557                           
 55558 ;; *************** function _PrintWswData *****************
 55559 ;; Defined at:
 55560 ;;		line 509 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 55561 ;; Parameters:    Size  Location     Type
 55562 ;;		None
 55563 ;; Auto vars:     Size  Location     Type
 55564 ;;  i               1    6[COMRAM] unsigned char 
 55565 ;;  k               1    5[COMRAM] unsigned char 
 55566 ;;  j               1    4[COMRAM] unsigned char 
 55567 ;; Return value:  Size  Location     Type
 55568 ;;		None               void
 55569 ;; Registers used:
 55570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 55571 ;; Tracked objects:
 55572 ;;		On entry : F/1
 55573 ;;		On exit  : F/1
 55574 ;;		Unchanged: FFFFFFF0/0
 55575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55577 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55579 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55580 ;;Total ram usage:        7 bytes
 55581 ;; Hardware stack levels used:    1
 55582 ;; This function calls:
 55583 ;;		Nothing
 55584 ;; This function is called by:
 55585 ;;		_RefreshWSW
 55586 ;; This function uses a non-reentrant model
 55587 ;;
 55588                           
 55589                           	psect	text265
 55590  0089DC                     __ptext265:
 55591                           	opt stack 0
 55592  0089DC                     _PrintWswData:
 55593                           	opt stack 21
 55594                           
 55595                           ; BSR set to: 1
 55596                           ;wsw.c: 511: unsigned char i,j,k;
 55597                           ;wsw.c: 532: mux=!mux;
 55598                           
 55599                           ; BSR set to: 1
 55600  0089DC  7442               	btg	_mux/(0+8),_mux& (0+7),c
 55601                           
 55602                           ;wsw.c: 534: if (mux)
 55603  0089DE  A442               	btfss	_mux/(0+8),_mux& (0+7),c
 55604  0089E0  D003               	goto	i2l4527
 55605                           
 55606                           ;wsw.c: 535: wbty[0]=LedData.dLed0;
 55607  0089E2  C18F  F192         	movff	_LedData+2,_wbty
 55608  0089E6  D002               	goto	i2l4528
 55609  0089E8                     i2l4527:
 55610                           
 55611                           ;wsw.c: 536: else
 55612                           ;wsw.c: 537: wbty[0]=LedData.dLed1;
 55613  0089E8  C18E  F192         	movff	_LedData+1,_wbty
 55614  0089EC                     i2l4528:
 55615                           
 55616                           ;wsw.c: 544: if(mux) wbty[2-1]|=(1<<4);
 55617  0089EC  A442               	btfss	_mux/(0+8),_mux& (0+7),c
 55618  0089EE  D003               	goto	i2l26466
 55619  0089F0  0101               	movlb	1	; () banked
 55620  0089F2  8993               	bsf	(_wbty+1)& (0+255),4,b
 55621  0089F4  D002               	goto	i2l26468
 55622  0089F6                     i2l26466:
 55623                           
 55624                           ;wsw.c: 545: else wbty[2-1]&=~(1<<4);
 55625  0089F6  0101               	movlb	1	; () banked
 55626  0089F8  9993               	bcf	(_wbty+1)& (0+255),4,b
 55627  0089FA                     i2l26468:
 55628                           
 55629                           ; BSR set to: 1
 55630                           ;wsw.c: 546: for(k=0;k<2;k++)
 55631  0089FA  6A06               	clrf	PrintWswData@k,c
 55632  0089FC                     i2l4531:
 55633                           
 55634                           ; BSR set to: 1
 55635                           ;wsw.c: 547: {
 55636                           ;wsw.c: 548: for(j=0;j<8;j++)
 55637  0089FC  6A05               	clrf	PrintWswData@j,c
 55638  0089FE                     i2l26478:
 55639                           
 55640                           ; BSR set to: 1
 55641                           ;wsw.c: 549: {
 55642                           ;wsw.c: 550: PORTEbits.RE1=(wbty[2-1-k]&(1<<(8-1-j)))?1:0;
 55643  0089FE  5006               	movf	PrintWswData@k,w,c
 55644  008A00  0893               	sublw	low (_wbty+1)
 55645  008A02  6ED9               	movwf	fsr2l,c
 55646  008A04  0E00               	movlw	0
 55647  008A06  A0D8               	btfss	status,0,c
 55648  008A08  2AE8               	incf	wreg,f,c
 55649  008A0A  0801               	sublw	high (_wbty+1)
 55650  008A0C  6EDA               	movwf	fsr2h,c
 55651  008A0E  50DF               	movf	indf2,w,c
 55652  008A10  6E01               	movwf	??_PrintWswData& (0+255),c
 55653  008A12  5005               	movf	PrintWswData@j,w,c
 55654  008A14  0807               	sublw	7
 55655  008A16  6E02               	movwf	(??_PrintWswData+1)& (0+255),c
 55656  008A18  0E01               	movlw	1
 55657  008A1A  6E03               	movwf	(??_PrintWswData+2)& (0+255),c
 55658  008A1C  2A02               	incf	??_PrintWswData+1,f,c
 55659  008A1E  D002               	goto	i2u4553_44
 55660  008A20                     i2u4553_45:
 55661  008A20  90D8               	bcf	status,0,c
 55662  008A22  3603               	rlcf	??_PrintWswData+2,f,c
 55663  008A24                     i2u4553_44:
 55664  008A24  2E02               	decfsz	??_PrintWswData+1,f,c
 55665  008A26  D7FC               	goto	i2u4553_45
 55666  008A28  5003               	movf	??_PrintWswData+2,w,c
 55667  008A2A  1401               	andwf	??_PrintWswData,w,c
 55668  008A2C  0E01               	movlw	1
 55669  008A2E  B4D8               	btfsc	status,2,c
 55670  008A30  0E00               	movlw	0
 55671  008A32  6E04               	movwf	(??_PrintWswData+3)& (0+255),c
 55672  008A34  4604               	rlncf	??_PrintWswData+3,f,c
 55673  008A36  5084               	movf	3972,w,c	;volatile
 55674  008A38  1804               	xorwf	??_PrintWswData+3,w,c
 55675  008A3A  0BFD               	andlw	-3
 55676  008A3C  1804               	xorwf	??_PrintWswData+3,w,c
 55677  008A3E  6E84               	movwf	3972,c	;volatile
 55678                           
 55679                           ; BSR set to: 1
 55680                           ;wsw.c: 552: for(i=0;i<10;i++);
 55681  008A40  6A07               	clrf	PrintWswData@i,c
 55682  008A42                     i2l26486:
 55683                           
 55684                           ; BSR set to: 1
 55685  008A42  2A07               	incf	PrintWswData@i,f,c
 55686                           
 55687                           ; BSR set to: 1
 55688  008A44  0E09               	movlw	9
 55689  008A46  6407               	cpfsgt	PrintWswData@i,c
 55690  008A48  D7FC               	goto	i2l26486
 55691                           
 55692                           ; BSR set to: 1
 55693                           ;wsw.c: 553: PORTEbits.RE2=1;
 55694  008A4A  8484               	bsf	3972,2,c	;volatile
 55695                           
 55696                           ;wsw.c: 554: for(i=0;i<10;i++);
 55697  008A4C  6A07               	clrf	PrintWswData@i,c
 55698  008A4E                     i2l26494:
 55699                           
 55700                           ; BSR set to: 1
 55701  008A4E  2A07               	incf	PrintWswData@i,f,c
 55702                           
 55703                           ; BSR set to: 1
 55704  008A50  0E09               	movlw	9
 55705  008A52  6407               	cpfsgt	PrintWswData@i,c
 55706  008A54  D7FC               	goto	i2l26494
 55707                           
 55708                           ; BSR set to: 1
 55709                           ;wsw.c: 555: PORTEbits.RE2=0;
 55710  008A56  9484               	bcf	3972,2,c	;volatile
 55711                           
 55712                           ; BSR set to: 1
 55713  008A58  2A05               	incf	PrintWswData@j,f,c
 55714                           
 55715                           ; BSR set to: 1
 55716  008A5A  0E07               	movlw	7
 55717  008A5C  6405               	cpfsgt	PrintWswData@j,c
 55718  008A5E  D7CF               	goto	i2l26478
 55719                           
 55720                           ; BSR set to: 1
 55721  008A60  2A06               	incf	PrintWswData@k,f,c
 55722                           
 55723                           ; BSR set to: 1
 55724  008A62  0E01               	movlw	1
 55725  008A64  6406               	cpfsgt	PrintWswData@k,c
 55726  008A66  D7CA               	goto	i2l4531
 55727                           
 55728                           ; BSR set to: 1
 55729                           ;wsw.c: 556: }
 55730                           ;wsw.c: 557: }
 55731                           ;wsw.c: 559: for(i=0;i<10;i++);
 55732  008A68  6A07               	clrf	PrintWswData@i,c
 55733  008A6A                     i2l26510:
 55734                           
 55735                           ; BSR set to: 1
 55736  008A6A  2A07               	incf	PrintWswData@i,f,c
 55737                           
 55738                           ; BSR set to: 1
 55739  008A6C  0E09               	movlw	9
 55740  008A6E  6407               	cpfsgt	PrintWswData@i,c
 55741  008A70  D7FC               	goto	i2l26510
 55742                           
 55743                           ; BSR set to: 1
 55744                           ;wsw.c: 560: PORTEbits.RE0=1;
 55745  008A72  8084               	bsf	3972,0,c	;volatile
 55746                           
 55747                           ;wsw.c: 561: for(i=0;i<10;i++);
 55748  008A74  6A07               	clrf	PrintWswData@i,c
 55749  008A76                     i2l26518:
 55750                           
 55751                           ; BSR set to: 1
 55752  008A76  2A07               	incf	PrintWswData@i,f,c
 55753                           
 55754                           ; BSR set to: 1
 55755  008A78  0E09               	movlw	9
 55756  008A7A  6407               	cpfsgt	PrintWswData@i,c
 55757  008A7C  D7FC               	goto	i2l26518
 55758                           
 55759                           ; BSR set to: 1
 55760                           ;wsw.c: 562: PORTEbits.RE0=0;
 55761  008A7E  9084               	bcf	3972,0,c	;volatile
 55762                           
 55763                           ; BSR set to: 1
 55764  008A80  0C09               	retlw	9
 55765  008A82                     __end_of_PrintWswData:
 55766                           	opt stack 0
 55767                           tblptru	equ	0xFF8
 55768                           tblptrh	equ	0xFF7
 55769                           tblptrl	equ	0xFF6
 55770                           tablat	equ	0xFF5
 55771                           prodh	equ	0xFF4
 55772                           prodl	equ	0xFF3
 55773                           intcon	equ	0xFF2
 55774                           postinc0	equ	0xFEE
 55775                           wreg	equ	0xFE8
 55776                           indf1	equ	0xFE7
 55777                           postinc1	equ	0xFE6
 55778                           postdec1	equ	0xFE5
 55779                           fsr1h	equ	0xFE2
 55780                           fsr1l	equ	0xFE1
 55781                           indf2	equ	0xFDF
 55782                           postinc2	equ	0xFDE
 55783                           postdec2	equ	0xFDD
 55784                           fsr2h	equ	0xFDA
 55785                           fsr2l	equ	0xFD9
 55786                           status	equ	0xFD8
 55787                           
 55788 ;; *************** function _Swbty *****************
 55789 ;; Defined at:
 55790 ;;		line 581 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 55791 ;; Parameters:    Size  Location     Type
 55792 ;;  dtd             1    wreg     unsigned char 
 55793 ;; Auto vars:     Size  Location     Type
 55794 ;;  dtd             1    1[COMRAM] unsigned char 
 55795 ;;  mask            1    0[COMRAM] unsigned char 
 55796 ;; Return value:  Size  Location     Type
 55797 ;;		None               void
 55798 ;; Registers used:
 55799 ;;		wreg, status,2, status,0
 55800 ;; Tracked objects:
 55801 ;;		On entry : F/1
 55802 ;;		On exit  : F/1
 55803 ;;		Unchanged: FFFFFFF0/0
 55804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55808 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55809 ;;Total ram usage:        2 bytes
 55810 ;; Hardware stack levels used:    1
 55811 ;; This function calls:
 55812 ;;		Nothing
 55813 ;; This function is called by:
 55814 ;;		_FormatWswData
 55815 ;; This function uses a non-reentrant model
 55816 ;;
 55817                           
 55818                           	psect	text266
 55819  00B1A8                     __ptext266:
 55820                           	opt stack 0
 55821  00B1A8                     _Swbty:
 55822                           	opt stack 20
 55823                           
 55824                           ; BSR set to: 1
 55825                           ;Swbty@dtd stored from wreg
 55826  00B1A8  CFE8 F002          	movff	wreg,Swbty@dtd
 55827                           
 55828                           ; BSR set to: 1
 55829                           ;wsw.c: 582: unsigned char mask;
 55830                           ;wsw.c: 583: dtd=dtd&0x0f;
 55831  00B1AC  0E0F               	movlw	15
 55832  00B1AE  1602               	andwf	Swbty@dtd,f,c
 55833                           
 55834                           ;wsw.c: 584: mask=~(wsdid&dtd);
 55835  00B1B0  5040               	movf	_wsdid,w,c
 55836  00B1B2  1402               	andwf	Swbty@dtd,w,c
 55837  00B1B4  0AFF               	xorlw	255
 55838  00B1B6  6E01               	movwf	Swbty@mask,c
 55839                           
 55840                           ;wsw.c: 588: wbty[1]|=0x0f;
 55841  00B1B8  0E0F               	movlw	15
 55842  00B1BA  1393               	iorwf	(_wbty+1)& (0+255),f,b
 55843                           
 55844                           ;wsw.c: 589: wbty[1]&=~(dtd|(wsdid&mask));
 55845  00B1BC  5040               	movf	_wsdid,w,c
 55846  00B1BE  1401               	andwf	Swbty@mask,w,c
 55847  00B1C0  1002               	iorwf	Swbty@dtd,w,c
 55848  00B1C2  0AFF               	xorlw	255
 55849  00B1C4  1793               	andwf	(_wbty+1)& (0+255),f,b
 55850                           
 55851                           ; BSR set to: 1
 55852  00B1C6  0012               	return	
 55853  00B1C8                     __end_of_Swbty:
 55854                           	opt stack 0
 55855                           tblptru	equ	0xFF8
 55856                           tblptrh	equ	0xFF7
 55857                           tblptrl	equ	0xFF6
 55858                           tablat	equ	0xFF5
 55859                           prodh	equ	0xFF4
 55860                           prodl	equ	0xFF3
 55861                           intcon	equ	0xFF2
 55862                           postinc0	equ	0xFEE
 55863                           wreg	equ	0xFE8
 55864                           indf1	equ	0xFE7
 55865                           postinc1	equ	0xFE6
 55866                           postdec1	equ	0xFE5
 55867                           fsr1h	equ	0xFE2
 55868                           fsr1l	equ	0xFE1
 55869                           indf2	equ	0xFDF
 55870                           postinc2	equ	0xFDE
 55871                           postdec2	equ	0xFDD
 55872                           fsr2h	equ	0xFDA
 55873                           fsr2l	equ	0xFD9
 55874                           status	equ	0xFD8
 55875                           
 55876 ;; *************** function _Rwbty *****************
 55877 ;; Defined at:
 55878 ;;		line 598 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\wsw.c"
 55879 ;; Parameters:    Size  Location     Type
 55880 ;;  dtd             1    wreg     unsigned char 
 55881 ;; Auto vars:     Size  Location     Type
 55882 ;;  dtd             1    1[COMRAM] unsigned char 
 55883 ;;  mask            1    0[COMRAM] unsigned char 
 55884 ;; Return value:  Size  Location     Type
 55885 ;;		None               void
 55886 ;; Registers used:
 55887 ;;		wreg, status,2, status,0
 55888 ;; Tracked objects:
 55889 ;;		On entry : F/1
 55890 ;;		On exit  : F/1
 55891 ;;		Unchanged: FFFFFFF0/0
 55892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55897 ;;Total ram usage:        2 bytes
 55898 ;; Hardware stack levels used:    1
 55899 ;; This function calls:
 55900 ;;		Nothing
 55901 ;; This function is called by:
 55902 ;;		_FormatWswData
 55903 ;; This function uses a non-reentrant model
 55904 ;;
 55905                           
 55906                           	psect	text267
 55907  00B1C8                     __ptext267:
 55908                           	opt stack 0
 55909  00B1C8                     _Rwbty:
 55910                           	opt stack 20
 55911                           
 55912                           ; BSR set to: 1
 55913                           ;Rwbty@dtd stored from wreg
 55914  00B1C8  CFE8 F002          	movff	wreg,Rwbty@dtd
 55915                           
 55916                           ; BSR set to: 1
 55917                           ;wsw.c: 599: unsigned char mask;
 55918                           ;wsw.c: 601: dtd=dtd&0x0f;
 55919  00B1CC  0E0F               	movlw	15
 55920  00B1CE  1602               	andwf	Rwbty@dtd,f,c
 55921                           
 55922                           ;wsw.c: 602: mask=~(wsdid&dtd);
 55923  00B1D0  5040               	movf	_wsdid,w,c
 55924  00B1D2  1402               	andwf	Rwbty@dtd,w,c
 55925  00B1D4  0AFF               	xorlw	255
 55926  00B1D6  6E01               	movwf	Rwbty@mask,c
 55927                           
 55928                           ;wsw.c: 605: wbty[1]|=0x0f;
 55929  00B1D8  0E0F               	movlw	15
 55930  00B1DA  1393               	iorwf	(_wbty+1)& (0+255),f,b
 55931                           
 55932                           ;wsw.c: 606: wbty[1]&=~((~dtd)&(wsdid&mask));
 55933  00B1DC  1C02               	comf	Rwbty@dtd,w,c
 55934  00B1DE  1440               	andwf	_wsdid,w,c
 55935  00B1E0  1401               	andwf	Rwbty@mask,w,c
 55936  00B1E2  0AFF               	xorlw	255
 55937  00B1E4  1793               	andwf	(_wbty+1)& (0+255),f,b
 55938                           
 55939                           ; BSR set to: 1
 55940  00B1E6  0012               	return	
 55941  00B1E8                     __end_of_Rwbty:
 55942                           	opt stack 0
 55943                           tblptru	equ	0xFF8
 55944                           tblptrh	equ	0xFF7
 55945                           tblptrl	equ	0xFF6
 55946                           tablat	equ	0xFF5
 55947                           prodh	equ	0xFF4
 55948                           prodl	equ	0xFF3
 55949                           intcon	equ	0xFF2
 55950                           postinc0	equ	0xFEE
 55951                           wreg	equ	0xFE8
 55952                           indf1	equ	0xFE7
 55953                           postinc1	equ	0xFE6
 55954                           postdec1	equ	0xFE5
 55955                           fsr1h	equ	0xFE2
 55956                           fsr1l	equ	0xFE1
 55957                           indf2	equ	0xFDF
 55958                           postinc2	equ	0xFDE
 55959                           postdec2	equ	0xFDD
 55960                           fsr2h	equ	0xFDA
 55961                           fsr2l	equ	0xFD9
 55962                           status	equ	0xFD8
 55963                           
 55964 ;; *************** function ___lbmod *****************
 55965 ;; Defined at:
 55966 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lbmod.c"
 55967 ;; Parameters:    Size  Location     Type
 55968 ;;  dividend        1    wreg     unsigned char 
 55969 ;;  divisor         1    0[COMRAM] unsigned char 
 55970 ;; Auto vars:     Size  Location     Type
 55971 ;;  dividend        1    1[COMRAM] unsigned char 
 55972 ;;  rem             1    3[COMRAM] unsigned char 
 55973 ;;  counter         1    2[COMRAM] unsigned char 
 55974 ;; Return value:  Size  Location     Type
 55975 ;;                  1    wreg      unsigned char 
 55976 ;; Registers used:
 55977 ;;		wreg, status,2, status,0
 55978 ;; Tracked objects:
 55979 ;;		On entry : F/1
 55980 ;;		On exit  : 0/0
 55981 ;;		Unchanged: FFFFFFF0/0
 55982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 55983 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55984 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 55987 ;;Total ram usage:        4 bytes
 55988 ;; Hardware stack levels used:    1
 55989 ;; This function calls:
 55990 ;;		Nothing
 55991 ;; This function is called by:
 55992 ;;		_FormatWswData
 55993 ;; This function uses a non-reentrant model
 55994 ;;
 55995                           
 55996                           	psect	text268
 55997  00AE06                     __ptext268:
 55998                           	opt stack 0
 55999  00AE06                     ___lbmod:
 56000                           	opt stack 20
 56001                           
 56002                           ; BSR set to: 1
 56003                           ;___lbmod@dividend stored from wreg
 56004  00AE06  CFE8 F002          	movff	wreg,___lbmod@dividend
 56005                           
 56006                           ; BSR set to: 1
 56007  00AE0A  0E08               	movlw	8
 56008  00AE0C  6E03               	movwf	___lbmod@counter,c
 56009                           
 56010                           ; BSR set to: 1
 56011  00AE0E  6A04               	clrf	___lbmod@rem,c
 56012  00AE10                     i2l26922:
 56013  00AE10  90D8               	bcf	status,0,c
 56014  00AE12  3402               	rlcf	___lbmod@dividend& (0+255),w,c
 56015  00AE14  3404               	rlcf	___lbmod@rem& (0+255),w,c
 56016  00AE16  6E04               	movwf	___lbmod@rem,c
 56017  00AE18  90D8               	bcf	status,0,c
 56018  00AE1A  3602               	rlcf	___lbmod@dividend,f,c
 56019  00AE1C  5001               	movf	___lbmod@divisor,w,c
 56020  00AE1E  5C04               	subwf	___lbmod@rem,w,c
 56021  00AE20  E302               	bnc	i2l26930
 56022  00AE22  5001               	movf	___lbmod@divisor,w,c
 56023  00AE24  5E04               	subwf	___lbmod@rem,f,c
 56024  00AE26                     i2l26930:
 56025  00AE26  2E03               	decfsz	___lbmod@counter,f,c
 56026  00AE28  D7F3               	goto	i2l26922
 56027  00AE2A  5004               	movf	___lbmod@rem,w,c
 56028  00AE2C  0012               	return	
 56029  00AE2E                     __end_of___lbmod:
 56030                           	opt stack 0
 56031                           tblptru	equ	0xFF8
 56032                           tblptrh	equ	0xFF7
 56033                           tblptrl	equ	0xFF6
 56034                           tablat	equ	0xFF5
 56035                           prodh	equ	0xFF4
 56036                           prodl	equ	0xFF3
 56037                           intcon	equ	0xFF2
 56038                           postinc0	equ	0xFEE
 56039                           wreg	equ	0xFE8
 56040                           indf1	equ	0xFE7
 56041                           postinc1	equ	0xFE6
 56042                           postdec1	equ	0xFE5
 56043                           fsr1h	equ	0xFE2
 56044                           fsr1l	equ	0xFE1
 56045                           indf2	equ	0xFDF
 56046                           postinc2	equ	0xFDE
 56047                           postdec2	equ	0xFDD
 56048                           fsr2h	equ	0xFDA
 56049                           fsr2l	equ	0xFD9
 56050                           status	equ	0xFD8
 56051                           
 56052 ;; *************** function i2_RdPrt *****************
 56053 ;; Defined at:
 56054 ;;		line 305 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
 56055 ;; Parameters:    Size  Location     Type
 56056 ;;  RdPrt           1    wreg     const unsigned char 
 56057 ;; Auto vars:     Size  Location     Type
 56058 ;;  RdPrt           1    1[COMRAM] const unsigned char 
 56059 ;; Return value:  Size  Location     Type
 56060 ;;		None               void
 56061 ;; Registers used:
 56062 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 56063 ;; Tracked objects:
 56064 ;;		On entry : C/1
 56065 ;;		On exit  : F/0
 56066 ;;		Unchanged: 0/0
 56067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56072 ;;Total ram usage:        2 bytes
 56073 ;; Hardware stack levels used:    1
 56074 ;; This function calls:
 56075 ;;		Nothing
 56076 ;; This function is called by:
 56077 ;;		_SetTData
 56078 ;;		_FormatDataIMY
 56079 ;; This function uses a non-reentrant model
 56080 ;;
 56081                           
 56082                           	psect	text269
 56083  00B1E8                     __ptext269:
 56084                           	opt stack 0
 56085  00B1E8                     i2_RdPrt:
 56086                           	opt stack 20
 56087                           
 56088                           ;i2RdPrt@Index stored from wreg
 56089  00B1E8  CFE8 F002          	movff	wreg,i2RdPrt@Index
 56090                           
 56091                           ;port.c: 306: if (Index>26-1) asm("RESET");
 56092  00B1EC  0E19               	movlw	25
 56093  00B1EE  6402               	cpfsgt	i2RdPrt@Index,c
 56094  00B1F0  D001               	goto	i2l27046
 56095  00B1F2  00FF               	reset		;# 
 56096  00B1F4                     i2l27046:
 56097                           
 56098                           ;port.c: 307: return SPort[Index].Output;
 56099  00B1F4  5002               	movf	i2RdPrt@Index,w,c
 56100  00B1F6  0100               	movlb	0	; () banked
 56101  00B1F8  0FB5               	addlw	low _SPort	;volatile
 56102  00B1FA  6ED9               	movwf	fsr2l,c
 56103  00B1FC  6ADA               	clrf	fsr2h,c
 56104  00B1FE  30DF               	rrcf	223,w,c
 56105  00B200  0B01               	andlw	1
 56106  00B202  6E01               	movwf	??i2_RdPrt& (0+255),c
 56107  00B204  3001               	rrcf	??i2_RdPrt,w,c
 56108                           
 56109                           ; BSR set to: 0
 56110  00B206  0012               	return	
 56111  00B208                     __end_ofi2_RdPrt:
 56112                           	opt stack 0
 56113                           tblptru	equ	0xFF8
 56114                           tblptrh	equ	0xFF7
 56115                           tblptrl	equ	0xFF6
 56116                           tablat	equ	0xFF5
 56117                           prodh	equ	0xFF4
 56118                           prodl	equ	0xFF3
 56119                           intcon	equ	0xFF2
 56120                           postinc0	equ	0xFEE
 56121                           wreg	equ	0xFE8
 56122                           indf1	equ	0xFE7
 56123                           postinc1	equ	0xFE6
 56124                           postdec1	equ	0xFE5
 56125                           fsr1h	equ	0xFE2
 56126                           fsr1l	equ	0xFE1
 56127                           indf2	equ	0xFDF
 56128                           postinc2	equ	0xFDE
 56129                           postdec2	equ	0xFDD
 56130                           fsr2h	equ	0xFDA
 56131                           fsr2l	equ	0xFD9
 56132                           status	equ	0xFD8
 56133                           
 56134 ;; *************** function i2___lbdiv *****************
 56135 ;; Defined at:
 56136 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v1.12\sources\lbdiv.c"
 56137 ;; Parameters:    Size  Location     Type
 56138 ;;  __lbdiv         1    wreg     unsigned char 
 56139 ;;  __lbdiv         1    0[COMRAM] unsigned char 
 56140 ;; Auto vars:     Size  Location     Type
 56141 ;;  __lbdiv         1    1[COMRAM] unsigned char 
 56142 ;;  __lbdiv         1    3[COMRAM] unsigned char 
 56143 ;;  __lbdiv         1    2[COMRAM] unsigned char 
 56144 ;; Return value:  Size  Location     Type
 56145 ;;                  1    wreg      unsigned char 
 56146 ;; Registers used:
 56147 ;;		wreg, status,2, status,0
 56148 ;; Tracked objects:
 56149 ;;		On entry : F/1
 56150 ;;		On exit  : F/1
 56151 ;;		Unchanged: FFFFFFF0/0
 56152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56153 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56154 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56156 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56157 ;;Total ram usage:        4 bytes
 56158 ;; Hardware stack levels used:    1
 56159 ;; This function calls:
 56160 ;;		Nothing
 56161 ;; This function is called by:
 56162 ;;		_FormatWswData
 56163 ;; This function uses a non-reentrant model
 56164 ;;
 56165                           
 56166                           	psect	text270
 56167  00A962                     __ptext270:
 56168                           	opt stack 0
 56169  00A962                     i2___lbdiv:
 56170                           	opt stack 20
 56171                           
 56172                           ; BSR set to: 0
 56173                           ;i2___lbdiv@dividend stored from wreg
 56174  00A962  CFE8 F002          	movff	wreg,i2___lbdiv@dividend
 56175                           
 56176                           ; BSR set to: 1
 56177  00A966  6A04               	clrf	i2___lbdiv@quotient,c
 56178                           
 56179                           ; BSR set to: 1
 56180  00A968  5001               	movf	i2___lbdiv@divisor,w,c
 56181  00A96A  E014               	bz	i2l27072
 56182                           
 56183                           ; BSR set to: 1
 56184  00A96C  0E01               	movlw	1
 56185  00A96E  6E03               	movwf	i2___lbdiv@counter,c
 56186  00A970  D003               	goto	i2l27060
 56187  00A972                     i2l27056:
 56188                           
 56189                           ; BSR set to: 1
 56190  00A972  90D8               	bcf	status,0,c
 56191  00A974  3601               	rlcf	i2___lbdiv@divisor,f,c
 56192                           
 56193                           ; BSR set to: 1
 56194  00A976  2A03               	incf	i2___lbdiv@counter,f,c
 56195  00A978                     i2l27060:
 56196                           
 56197                           ; BSR set to: 1
 56198  00A978  AE01               	btfss	i2___lbdiv@divisor,7,c
 56199  00A97A  D7FB               	goto	i2l27056
 56200  00A97C                     i2l27062:
 56201                           
 56202                           ; BSR set to: 1
 56203  00A97C  90D8               	bcf	status,0,c
 56204  00A97E  3604               	rlcf	i2___lbdiv@quotient,f,c
 56205  00A980  5001               	movf	i2___lbdiv@divisor,w,c
 56206  00A982  5C02               	subwf	i2___lbdiv@dividend,w,c
 56207  00A984  E303               	bnc	i2l27068
 56208                           
 56209                           ; BSR set to: 1
 56210  00A986  5001               	movf	i2___lbdiv@divisor,w,c
 56211  00A988  5E02               	subwf	i2___lbdiv@dividend,f,c
 56212                           
 56213                           ; BSR set to: 1
 56214  00A98A  8004               	bsf	i2___lbdiv@quotient,0,c
 56215  00A98C                     i2l27068:
 56216                           
 56217                           ; BSR set to: 1
 56218  00A98C  90D8               	bcf	status,0,c
 56219  00A98E  3201               	rrcf	i2___lbdiv@divisor,f,c
 56220                           
 56221                           ; BSR set to: 1
 56222  00A990  2E03               	decfsz	i2___lbdiv@counter,f,c
 56223  00A992  D7F4               	goto	i2l27062
 56224  00A994                     i2l27072:
 56225                           
 56226                           ; BSR set to: 1
 56227  00A994  5004               	movf	i2___lbdiv@quotient,w,c
 56228                           
 56229                           ; BSR set to: 1
 56230  00A996  0012               	return	
 56231  00A998                     __end_ofi2___lbdiv:
 56232                           	opt stack 0
 56233                           tblptru	equ	0xFF8
 56234                           tblptrh	equ	0xFF7
 56235                           tblptrl	equ	0xFF6
 56236                           tablat	equ	0xFF5
 56237                           prodh	equ	0xFF4
 56238                           prodl	equ	0xFF3
 56239                           intcon	equ	0xFF2
 56240                           postinc0	equ	0xFEE
 56241                           wreg	equ	0xFE8
 56242                           indf1	equ	0xFE7
 56243                           postinc1	equ	0xFE6
 56244                           postdec1	equ	0xFE5
 56245                           fsr1h	equ	0xFE2
 56246                           fsr1l	equ	0xFE1
 56247                           indf2	equ	0xFDF
 56248                           postinc2	equ	0xFDE
 56249                           postdec2	equ	0xFDD
 56250                           fsr2h	equ	0xFDA
 56251                           fsr2l	equ	0xFD9
 56252                           status	equ	0xFD8
 56253                           
 56254 ;; *************** function i2_RefStan *****************
 56255 ;; Defined at:
 56256 ;;		line 61 in file "C:\praca\PICC\T02_T03\UNI-02\PLCD_T02\xc8\T02_v6ppwmLED\port.c"
 56257 ;; Parameters:    Size  Location     Type
 56258 ;;		None
 56259 ;; Auto vars:     Size  Location     Type
 56260 ;;  RefStan         1    3[COMRAM] unsigned char 
 56261 ;;  RefStan         1    2[COMRAM] unsigned char 
 56262 ;;  RefStan         1    1[COMRAM] unsigned char 
 56263 ;; Return value:  Size  Location     Type
 56264 ;;		None               void
 56265 ;; Registers used:
 56266 ;;		wreg, status,2, status,0
 56267 ;; Tracked objects:
 56268 ;;		On entry : F/1
 56269 ;;		On exit  : F/0
 56270 ;;		Unchanged: FFFFFFF0/0
 56271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 56272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56273 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56274 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56275 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 56276 ;;Total ram usage:        4 bytes
 56277 ;; Hardware stack levels used:    1
 56278 ;; This function calls:
 56279 ;;		Nothing
 56280 ;; This function is called by:
 56281 ;;		_StabPort
 56282 ;; This function uses a non-reentrant model
 56283 ;;
 56284                           
 56285                           	psect	text271
 56286  006D70                     __ptext271:
 56287                           	opt stack 0
 56288  006D70                     i2_RefStan:
 56289                           	opt stack 21
 56290                           
 56291                           ; BSR set to: 1
 56292                           ;port.c: 63: SPort[0].Input=0;
 56293                           
 56294                           ; BSR set to: 1
 56295  006D70  0100               	movlb	0	; () banked
 56296  006D72  91B5               	bcf	_SPort& (0+255),0,b	;volatile
 56297  006D74  0E01               	movlw	1
 56298                           
 56299                           ; BSR set to: 0
 56300                           ;port.c: 65: SPort[1].Input=(PORTBbits.RB5)?1:0;
 56301  006D76  AA81               	btfss	3969,5,c	;volatile
 56302  006D78  0E00               	movlw	0
 56303  006D7A  6E01               	movwf	??i2_RefStan& (0+255),c
 56304  006D7C  51B6               	movf	(_SPort+1)& (0+255),w,b	;volatile
 56305  006D7E  1801               	xorwf	??i2_RefStan,w,c
 56306  006D80  0BFE               	andlw	-2
 56307  006D82  1801               	xorwf	??i2_RefStan,w,c
 56308  006D84  6FB6               	movwf	(_SPort+1)& (0+255),b	;volatile
 56309                           
 56310                           ; BSR set to: 0
 56311                           ;port.c: 67: SPort[2].Input=(PORTCbits.RC0&&PORTAbits.RA7)?1:0;
 56312  006D86  6A02               	clrf	i2_RefStan$2767,c
 56313                           
 56314                           ; BSR set to: 0
 56315  006D88  B082               	btfsc	3970,0,c	;volatile
 56316                           
 56317                           ; BSR set to: 0
 56318  006D8A  AE80               	btfss	3968,7,c	;volatile
 56319  006D8C  D002               	goto	i2l27002
 56320                           
 56321                           ; BSR set to: 0
 56322  006D8E  0E01               	movlw	1
 56323  006D90  6E02               	movwf	i2_RefStan$2767,c
 56324  006D92                     i2l27002:
 56325                           
 56326                           ; BSR set to: 0
 56327  006D92  B002               	btfsc	i2_RefStan$2767,0,c
 56328  006D94  D002               	bra	i2u4649_45
 56329  006D96  91B7               	bcf	(_SPort+2)& (0+255),0,b	;volatile
 56330  006D98  D002               	bra	i2u4649_46
 56331  006D9A                     i2u4649_45:
 56332  006D9A  0100               	movlb	0	; () banked
 56333  006D9C  81B7               	bsf	(_SPort+2)& (0+255),0,b	;volatile
 56334  006D9E                     i2u4649_46:
 56335                           
 56336                           ; BSR set to: 0
 56337                           ;port.c: 69: SPort[3].Input=(PORTAbits.RA6&&PORTAbits.RA7)?1:0;
 56338  006D9E  6A03               	clrf	i2_RefStan$2768,c
 56339                           
 56340                           ; BSR set to: 0
 56341  006DA0  BC80               	btfsc	3968,6,c	;volatile
 56342                           
 56343                           ; BSR set to: 0
 56344  006DA2  AE80               	btfss	3968,7,c	;volatile
 56345  006DA4  D002               	goto	i2l27012
 56346                           
 56347                           ; BSR set to: 0
 56348  006DA6  0E01               	movlw	1
 56349  006DA8  6E03               	movwf	i2_RefStan$2768,c
 56350  006DAA                     i2l27012:
 56351                           
 56352                           ; BSR set to: 0
 56353  006DAA  B003               	btfsc	i2_RefStan$2768,0,c
 56354  006DAC  D002               	bra	i2u4652_45
 56355  006DAE  91B8               	bcf	(_SPort+3)& (0+255),0,b	;volatile
 56356  006DB0  D002               	bra	i2u4652_46
 56357  006DB2                     i2u4652_45:
 56358  006DB2  0100               	movlb	0	; () banked
 56359  006DB4  81B8               	bsf	(_SPort+3)& (0+255),0,b	;volatile
 56360  006DB6                     i2u4652_46:
 56361  006DB6  0E01               	movlw	1
 56362                           
 56363                           ; BSR set to: 0
 56364                           ;port.c: 71: SPort[4].Input=(PORTAbits.RA7)?1:0;
 56365  006DB8  AE80               	btfss	3968,7,c	;volatile
 56366  006DBA  0E00               	movlw	0
 56367  006DBC  6E01               	movwf	??i2_RefStan& (0+255),c
 56368  006DBE  51B9               	movf	(_SPort+4)& (0+255),w,b	;volatile
 56369  006DC0  1801               	xorwf	??i2_RefStan,w,c
 56370  006DC2  0BFE               	andlw	-2
 56371  006DC4  1801               	xorwf	??i2_RefStan,w,c
 56372  006DC6  6FB9               	movwf	(_SPort+4)& (0+255),b	;volatile
 56373  006DC8  0E01               	movlw	1
 56374                           
 56375                           ; BSR set to: 0
 56376                           ;port.c: 73: SPort[5].Input=(PORTDbits.RD4)?0:1;
 56377  006DCA  B883               	btfsc	3971,4,c	;volatile
 56378  006DCC  0E00               	movlw	0
 56379  006DCE  6E01               	movwf	??i2_RefStan& (0+255),c
 56380  006DD0  51BA               	movf	(_SPort+5)& (0+255),w,b	;volatile
 56381  006DD2  1801               	xorwf	??i2_RefStan,w,c
 56382  006DD4  0BFE               	andlw	-2
 56383  006DD6  1801               	xorwf	??i2_RefStan,w,c
 56384  006DD8  6FBA               	movwf	(_SPort+5)& (0+255),b	;volatile
 56385                           
 56386                           ; BSR set to: 0
 56387                           ;port.c: 75: SPort[6].Input=0;
 56388  006DDA  91BB               	bcf	(_SPort+6)& (0+255),0,b	;volatile
 56389                           
 56390                           ; BSR set to: 0
 56391                           ;port.c: 77: SPort[7].Input=0;
 56392  006DDC  91BC               	bcf	(_SPort+7)& (0+255),0,b	;volatile
 56393  006DDE  0E01               	movlw	1
 56394                           
 56395                           ; BSR set to: 0
 56396                           ;port.c: 79: SPort[8].Input=(PORTCbits.RC5)?0:1;
 56397  006DE0  BA82               	btfsc	3970,5,c	;volatile
 56398  006DE2  0E00               	movlw	0
 56399  006DE4  6E01               	movwf	??i2_RefStan& (0+255),c
 56400  006DE6  51BD               	movf	(_SPort+8)& (0+255),w,b	;volatile
 56401  006DE8  1801               	xorwf	??i2_RefStan,w,c
 56402  006DEA  0BFE               	andlw	-2
 56403  006DEC  1801               	xorwf	??i2_RefStan,w,c
 56404  006DEE  6FBD               	movwf	(_SPort+8)& (0+255),b	;volatile
 56405  006DF0  0E01               	movlw	1
 56406                           
 56407                           ; BSR set to: 0
 56408                           ;port.c: 81: SPort[9].Input=(DtCO._on_DZ_CO)?1:0;
 56409  006DF2  ABE4               	btfss	_DtCO& (0+255),5,b
 56410  006DF4  0E00               	movlw	0
 56411  006DF6  6E01               	movwf	??i2_RefStan& (0+255),c
 56412  006DF8  51BE               	movf	(_SPort+9)& (0+255),w,b	;volatile
 56413  006DFA  1801               	xorwf	??i2_RefStan,w,c
 56414  006DFC  0BFE               	andlw	-2
 56415  006DFE  1801               	xorwf	??i2_RefStan,w,c
 56416  006E00  6FBE               	movwf	(_SPort+9)& (0+255),b	;volatile
 56417  006E02  0E01               	movlw	1
 56418                           
 56419                           ; BSR set to: 0
 56420                           ;port.c: 83: SPort[10].Input=(DtCW._on_DZ_CW)?1:0;
 56421  006E04  A9CF               	btfss	_DtCW& (0+255),4,b
 56422  006E06  0E00               	movlw	0
 56423  006E08  6E01               	movwf	??i2_RefStan& (0+255),c
 56424  006E0A  51BF               	movf	(_SPort+10)& (0+255),w,b	;volatile
 56425  006E0C  1801               	xorwf	??i2_RefStan,w,c
 56426  006E0E  0BFE               	andlw	-2
 56427  006E10  1801               	xorwf	??i2_RefStan,w,c
 56428  006E12  6FBF               	movwf	(_SPort+10)& (0+255),b	;volatile
 56429  006E14  0E01               	movlw	1
 56430                           
 56431                           ; BSR set to: 0
 56432                           ;port.c: 85: SPort[11].Input=(PORTAbits.RA4)?0:1;
 56433  006E16  B880               	btfsc	3968,4,c	;volatile
 56434  006E18  0E00               	movlw	0
 56435  006E1A  6E01               	movwf	??i2_RefStan& (0+255),c
 56436  006E1C  51C0               	movf	(_SPort+11)& (0+255),w,b	;volatile
 56437  006E1E  1801               	xorwf	??i2_RefStan,w,c
 56438  006E20  0BFE               	andlw	-2
 56439  006E22  1801               	xorwf	??i2_RefStan,w,c
 56440  006E24  6FC0               	movwf	(_SPort+11)& (0+255),b	;volatile
 56441  006E26  0E01               	movlw	1
 56442                           
 56443                           ; BSR set to: 0
 56444                           ;port.c: 87: SPort[12].Input=(PORTDbits.RD5)?1:0;
 56445  006E28  AA83               	btfss	3971,5,c	;volatile
 56446  006E2A  0E00               	movlw	0
 56447  006E2C  6E01               	movwf	??i2_RefStan& (0+255),c
 56448  006E2E  51C1               	movf	(_SPort+12)& (0+255),w,b	;volatile
 56449  006E30  1801               	xorwf	??i2_RefStan,w,c
 56450  006E32  0BFE               	andlw	-2
 56451  006E34  1801               	xorwf	??i2_RefStan,w,c
 56452  006E36  6FC1               	movwf	(_SPort+12)& (0+255),b	;volatile
 56453                           
 56454                           ; BSR set to: 0
 56455                           ;port.c: 89: SPort[13].Input=(DtCO._cold_CO||DtCO._hot_CO)?1:0;
 56456  006E38  0E01               	movlw	1
 56457  006E3A  6E04               	movwf	i2_RefStan$2769,c
 56458                           
 56459                           ; BSR set to: 0
 56460  006E3C  A5E5               	btfss	(_DtCO+1)& (0+255),2,b
 56461                           
 56462                           ; BSR set to: 0
 56463  006E3E  B7E5               	btfsc	(_DtCO+1)& (0+255),3,b
 56464  006E40  D001               	goto	i2l2335
 56465                           
 56466                           ; BSR set to: 0
 56467  006E42  6A04               	clrf	i2_RefStan$2769,c
 56468  006E44                     i2l2335:
 56469                           
 56470                           ; BSR set to: 0
 56471  006E44  B004               	btfsc	i2_RefStan$2769,0,c
 56472  006E46  D002               	bra	i2u4662_45
 56473  006E48  91C2               	bcf	(_SPort+13)& (0+255),0,b	;volatile
 56474  006E4A  D002               	bra	i2u4662_46
 56475  006E4C                     i2u4662_45:
 56476  006E4C  0100               	movlb	0	; () banked
 56477  006E4E  81C2               	bsf	(_SPort+13)& (0+255),0,b	;volatile
 56478  006E50                     i2u4662_46:
 56479  006E50  0E01               	movlw	1
 56480                           
 56481                           ; BSR set to: 0
 56482                           ;port.c: 91: SPort[14].Input=(DtCS._error)?1:0;
 56483  006E52  A631               	btfss	_DtCS,3,c
 56484  006E54  0E00               	movlw	0
 56485  006E56  6E01               	movwf	??i2_RefStan& (0+255),c
 56486  006E58  51C3               	movf	(_SPort+14)& (0+255),w,b	;volatile
 56487  006E5A  1801               	xorwf	??i2_RefStan,w,c
 56488  006E5C  0BFE               	andlw	-2
 56489  006E5E  1801               	xorwf	??i2_RefStan,w,c
 56490  006E60  6FC3               	movwf	(_SPort+14)& (0+255),b	;volatile
 56491  006E62  0E01               	movlw	1
 56492                           
 56493                           ;port.c: 93: SPort[15].Input=(DtCS._work)?1:0;
 56494  006E64  A831               	btfss	_DtCS,4,c
 56495  006E66  0E00               	movlw	0
 56496  006E68  6E01               	movwf	??i2_RefStan& (0+255),c
 56497  006E6A  51C4               	movf	(_SPort+15)& (0+255),w,b	;volatile
 56498  006E6C  1801               	xorwf	??i2_RefStan,w,c
 56499  006E6E  0BFE               	andlw	-2
 56500  006E70  1801               	xorwf	??i2_RefStan,w,c
 56501  006E72  6FC4               	movwf	(_SPort+15)& (0+255),b	;volatile
 56502  006E74  0E01               	movlw	1
 56503                           
 56504                           ;port.c: 95: SPort[16].Input=(DtCS._lo)?1:0;
 56505  006E76  A231               	btfss	_DtCS,1,c
 56506  006E78  0E00               	movlw	0
 56507  006E7A  6E01               	movwf	??i2_RefStan& (0+255),c
 56508  006E7C  51C5               	movf	(_SPort+16)& (0+255),w,b	;volatile
 56509  006E7E  1801               	xorwf	??i2_RefStan,w,c
 56510  006E80  0BFE               	andlw	-2
 56511  006E82  1801               	xorwf	??i2_RefStan,w,c
 56512  006E84  6FC5               	movwf	(_SPort+16)& (0+255),b	;volatile
 56513  006E86  0E01               	movlw	1
 56514                           
 56515                           ;port.c: 97: SPort[17].Input=(DtCW._cold_CW)?1:0;
 56516  006E88  AFCF               	btfss	_DtCW& (0+255),7,b
 56517  006E8A  0E00               	movlw	0
 56518  006E8C  6E01               	movwf	??i2_RefStan& (0+255),c
 56519  006E8E  51C6               	movf	(_SPort+17)& (0+255),w,b	;volatile
 56520  006E90  1801               	xorwf	??i2_RefStan,w,c
 56521  006E92  0BFE               	andlw	-2
 56522  006E94  1801               	xorwf	??i2_RefStan,w,c
 56523  006E96  6FC6               	movwf	(_SPort+17)& (0+255),b	;volatile
 56524  006E98  0E01               	movlw	1
 56525                           
 56526                           ;port.c: 99: SPort[18].Input=(DtCO._err_CO)?1:0;
 56527  006E9A  A1E4               	btfss	_DtCO& (0+255),0,b
 56528  006E9C  0E00               	movlw	0
 56529  006E9E  6E01               	movwf	??i2_RefStan& (0+255),c
 56530  006EA0  51C7               	movf	(_SPort+18)& (0+255),w,b	;volatile
 56531  006EA2  1801               	xorwf	??i2_RefStan,w,c
 56532  006EA4  0BFE               	andlw	-2
 56533  006EA6  1801               	xorwf	??i2_RefStan,w,c
 56534  006EA8  6FC7               	movwf	(_SPort+18)& (0+255),b	;volatile
 56535  006EAA  0E01               	movlw	1
 56536                           
 56537                           ;port.c: 101: SPort[19].Input=(DtCO._ad_CO)?1:0;
 56538  006EAC  A5E4               	btfss	_DtCO& (0+255),2,b
 56539  006EAE  0E00               	movlw	0
 56540  006EB0  6E01               	movwf	??i2_RefStan& (0+255),c
 56541  006EB2  51C8               	movf	(_SPort+19)& (0+255),w,b	;volatile
 56542  006EB4  1801               	xorwf	??i2_RefStan,w,c
 56543  006EB6  0BFE               	andlw	-2
 56544  006EB8  1801               	xorwf	??i2_RefStan,w,c
 56545  006EBA  6FC8               	movwf	(_SPort+19)& (0+255),b	;volatile
 56546                           
 56547                           ;port.c: 103: SPort[20].Input=(DtZW._on_ZW)?1:0;
 56548  006EBC  0101               	movlb	1	; () banked
 56549  006EBE  0E01               	movlw	1
 56550  006EC0  A181               	btfss	_DtZW& (0+255),0,b
 56551  006EC2  0E00               	movlw	0
 56552  006EC4  6E01               	movwf	??i2_RefStan& (0+255),c
 56553  006EC6  0100               	movlb	0	; () banked
 56554  006EC8  51C9               	movf	(_SPort+20)& (0+255),w,b	;volatile
 56555  006ECA  1801               	xorwf	??i2_RefStan,w,c
 56556  006ECC  0BFE               	andlw	-2
 56557  006ECE  1801               	xorwf	??i2_RefStan,w,c
 56558  006ED0  6FC9               	movwf	(_SPort+20)& (0+255),b	;volatile
 56559  006ED2  0E01               	movlw	1
 56560                           
 56561                           ;port.c: 105: SPort[21].Input=(PORTAbits.RA6)?1:0;
 56562  006ED4  AC80               	btfss	3968,6,c	;volatile
 56563  006ED6  0E00               	movlw	0
 56564  006ED8  6E01               	movwf	??i2_RefStan& (0+255),c
 56565  006EDA  51CA               	movf	(_SPort+21)& (0+255),w,b	;volatile
 56566  006EDC  1801               	xorwf	??i2_RefStan,w,c
 56567  006EDE  0BFE               	andlw	-2
 56568  006EE0  1801               	xorwf	??i2_RefStan,w,c
 56569  006EE2  6FCA               	movwf	(_SPort+21)& (0+255),b	;volatile
 56570  006EE4  0E01               	movlw	1
 56571                           
 56572                           ;port.c: 107: SPort[22].Input=(PORTBbits.RB1)?0:1;
 56573  006EE6  B281               	btfsc	3969,1,c	;volatile
 56574  006EE8  0E00               	movlw	0
 56575  006EEA  6E01               	movwf	??i2_RefStan& (0+255),c
 56576  006EEC  51CB               	movf	(_SPort+22)& (0+255),w,b	;volatile
 56577  006EEE  1801               	xorwf	??i2_RefStan,w,c
 56578  006EF0  0BFE               	andlw	-2
 56579  006EF2  1801               	xorwf	??i2_RefStan,w,c
 56580  006EF4  6FCB               	movwf	(_SPort+22)& (0+255),b	;volatile
 56581  006EF6  0E01               	movlw	1
 56582                           
 56583                           ;port.c: 109: SPort[23].Input=(PORTBbits.RB2)?0:1;
 56584  006EF8  B481               	btfsc	3969,2,c	;volatile
 56585  006EFA  0E00               	movlw	0
 56586  006EFC  6E01               	movwf	??i2_RefStan& (0+255),c
 56587  006EFE  51CC               	movf	(_SPort+23)& (0+255),w,b	;volatile
 56588  006F00  1801               	xorwf	??i2_RefStan,w,c
 56589  006F02  0BFE               	andlw	-2
 56590  006F04  1801               	xorwf	??i2_RefStan,w,c
 56591  006F06  6FCC               	movwf	(_SPort+23)& (0+255),b	;volatile
 56592  006F08  0E01               	movlw	1
 56593                           
 56594                           ;port.c: 111: SPort[24].Input=(PORTBbits.RB4)?0:1;
 56595  006F0A  B881               	btfsc	3969,4,c	;volatile
 56596  006F0C  0E00               	movlw	0
 56597  006F0E  6E01               	movwf	??i2_RefStan& (0+255),c
 56598  006F10  51CD               	movf	(_SPort+24)& (0+255),w,b	;volatile
 56599  006F12  1801               	xorwf	??i2_RefStan,w,c
 56600  006F14  0BFE               	andlw	-2
 56601  006F16  1801               	xorwf	??i2_RefStan,w,c
 56602  006F18  6FCD               	movwf	(_SPort+24)& (0+255),b	;volatile
 56603  006F1A  0E01               	movlw	1
 56604                           
 56605                           ;port.c: 113: SPort[25].Input=(PORTBbits.RB3)?0:1;
 56606  006F1C  B681               	btfsc	3969,3,c	;volatile
 56607  006F1E  0E00               	movlw	0
 56608  006F20  6E01               	movwf	??i2_RefStan& (0+255),c
 56609  006F22  51CE               	movf	(_SPort+25)& (0+255),w,b	;volatile
 56610  006F24  1801               	xorwf	??i2_RefStan,w,c
 56611  006F26  0BFE               	andlw	-2
 56612  006F28  1801               	xorwf	??i2_RefStan,w,c
 56613  006F2A  6FCE               	movwf	(_SPort+25)& (0+255),b	;volatile
 56614                           
 56615                           ; BSR set to: 0
 56616  006F2C  0012               	return	
 56617  006F2E                     __end_ofi2_RefStan:
 56618                           	opt stack 0
 56619                           tblptru	equ	0xFF8
 56620                           tblptrh	equ	0xFF7
 56621                           tblptrl	equ	0xFF6
 56622                           tablat	equ	0xFF5
 56623                           prodh	equ	0xFF4
 56624                           prodl	equ	0xFF3
 56625                           intcon	equ	0xFF2
 56626                           postinc0	equ	0xFEE
 56627                           wreg	equ	0xFE8
 56628                           indf1	equ	0xFE7
 56629                           postinc1	equ	0xFE6
 56630                           postdec1	equ	0xFE5
 56631                           fsr1h	equ	0xFE2
 56632                           fsr1l	equ	0xFE1
 56633                           indf2	equ	0xFDF
 56634                           postinc2	equ	0xFDE
 56635                           postdec2	equ	0xFDD
 56636                           fsr2h	equ	0xFDA
 56637                           fsr2l	equ	0xFD9
 56638                           status	equ	0xFD8
 56639                           tblptru	equ	0xFF8
 56640                           tblptrh	equ	0xFF7
 56641                           tblptrl	equ	0xFF6
 56642                           tablat	equ	0xFF5
 56643                           prodh	equ	0xFF4
 56644                           prodl	equ	0xFF3
 56645                           intcon	equ	0xFF2
 56646                           postinc0	equ	0xFEE
 56647                           wreg	equ	0xFE8
 56648                           indf1	equ	0xFE7
 56649                           postinc1	equ	0xFE6
 56650                           postdec1	equ	0xFE5
 56651                           fsr1h	equ	0xFE2
 56652                           fsr1l	equ	0xFE1
 56653                           indf2	equ	0xFDF
 56654                           postinc2	equ	0xFDE
 56655                           postdec2	equ	0xFDD
 56656                           fsr2h	equ	0xFDA
 56657                           fsr2l	equ	0xFD9
 56658                           status	equ	0xFD8
 56659                           
 56660                           	psect	rparam
 56661  0000                     tblptru	equ	0xFF8
 56662                           tblptrh	equ	0xFF7
 56663                           tblptrl	equ	0xFF6
 56664                           tablat	equ	0xFF5
 56665                           prodh	equ	0xFF4
 56666                           prodl	equ	0xFF3
 56667                           intcon	equ	0xFF2
 56668                           postinc0	equ	0xFEE
 56669                           wreg	equ	0xFE8
 56670                           indf1	equ	0xFE7
 56671                           postinc1	equ	0xFE6
 56672                           postdec1	equ	0xFE5
 56673                           fsr1h	equ	0xFE2
 56674                           fsr1l	equ	0xFE1
 56675                           indf2	equ	0xFDF
 56676                           postinc2	equ	0xFDE
 56677                           postdec2	equ	0xFDD
 56678                           fsr2h	equ	0xFDA
 56679                           fsr2l	equ	0xFD9
 56680                           status	equ	0xFD8
 56681                           tblptru	equ	0xFF8
 56682                           tblptrh	equ	0xFF7
 56683                           tblptrl	equ	0xFF6
 56684                           tablat	equ	0xFF5
 56685                           prodh	equ	0xFF4
 56686                           prodl	equ	0xFF3
 56687                           intcon	equ	0xFF2
 56688                           postinc0	equ	0xFEE
 56689                           wreg	equ	0xFE8
 56690                           indf1	equ	0xFE7
 56691                           postinc1	equ	0xFE6
 56692                           postdec1	equ	0xFE5
 56693                           fsr1h	equ	0xFE2
 56694                           fsr1l	equ	0xFE1
 56695                           indf2	equ	0xFDF
 56696                           postinc2	equ	0xFDE
 56697                           postdec2	equ	0xFDD
 56698                           fsr2h	equ	0xFDA
 56699                           fsr2l	equ	0xFD9
 56700                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    174
    Data        0
    BSS         737
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      66
    BANK0           160     13     160
    BANK1           256      3     256
    BANK2           256     15     255
    BANK3           256     18      88
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ?___lwmod	unsigned int  size(2) Largest target is 35
		 -> PFN(BANK1[35]), 

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___awdiv	int  size(1) Largest target is 0

    ?___aldiv	long  size(1) Largest target is 0

    ?___lmul	unsigned long  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    ReadParam@zapis	PTR unsigned char  size(2) Largest target is 1
		 -> zps(BANK1[1]), 

    ReadParam@zmiana	PTR unsigned char  size(1) Largest target is 1
		 -> zmn(COMRAM[1]), 

    ReadParam@param	PTR unsigned int  size(2) Largest target is 35
		 -> PFN(BANK1[35]), 

    ReadDataXONLID@ovf	PTR unsigned char  size(2) Largest target is 1
		 -> ReadParam@ovd(BANK3[1]), ReadParam@ovi(BANK3[1]), 

    ReadDataXONLID@dt	PTR unsigned int  size(2) Largest target is 35
		 -> PFN(BANK1[35]), 

    ReadDataXONLID@ky	PTR struct . size(2) Largest target is 35
		 -> xxky(BANK2[35]), 

    ExxPresKey@ky	PTR struct . size(2) Largest target is 35
		 -> xxky(BANK2[35]), 

    WaitToLowEx@ky	PTR struct . size(2) Largest target is 35
		 -> ky(BANK2[35]), 

    ResBufKeyEx@ky	PTR struct . size(2) Largest target is 35
		 -> ky(BANK2[35]), 

    PresKeyEX@ky	PTR struct . size(2) Largest target is 35
		 -> ky(BANK2[35]), 

    KeyTim@ky	PTR struct . size(2) Largest target is 35
		 -> xxky(BANK2[35]), ky(BANK2[35]), 

    StartKeyTim@ky	PTR struct . size(2) Largest target is 35
		 -> xxky(BANK2[35]), ky(BANK2[35]), 

    SetStatus@wData	PTR struct . size(2) Largest target is 40
		 -> PWD(BANK2[40]), DWD(BANK2[28]), 

    SetData@wData	PTR struct . size(2) Largest target is 40
		 -> PWD(BANK2[40]), DWD(BANK2[28]), 

    Klj.KL.KAP.PAdr	PTR struct . size(2) Largest target is 28
		 -> DWD(BANK2[28]), 

    Klj.KL.KOut.CAdr	PTR struct . size(2) Largest target is 40
		 -> PWD(BANK2[40]), 

    Klj.KL.KOut	PTR const struct . size(1) Largest target is 5
		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 

    Klj.KL.KFc	PTR struct . size(2) Largest target is 2
		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 

    Klj.KL.KFP	PTR const struct . size(1) Largest target is 4
		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 

    Klj.KL.KWP	PTR const struct . size(1) Largest target is 6
		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 

    Klj.KL.KAP	PTR const struct . size(1) Largest target is 6
		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 

    S4918$KL	PTR const struct . size(1) Largest target is 15
		 -> KL3(CODE[6]), KL2(CODE[6]), KL1(CODE[6]), KL0(CODE[6]), 

    Klj.KL	PTR const struct . size(1) Largest target is 15
		 -> KL3(CODE[6]), KL2(CODE[6]), KL1(CODE[6]), KL0(CODE[6]), 

    KL3.KOut	PTR const struct . size(1) Largest target is 5
		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 

    KL3.KFc	PTR struct . size(2) Largest target is 2
		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 

    KL3.KFP	PTR const struct . size(1) Largest target is 4
		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 

    KL3.KWP	PTR const struct . size(1) Largest target is 6
		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 

    KL3.KAP	PTR const struct . size(1) Largest target is 6
		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 

    KL2.KOut	PTR const struct . size(1) Largest target is 5
		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 

    KL2.KFc	PTR struct . size(2) Largest target is 2
		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 

    KL2.KFP	PTR const struct . size(1) Largest target is 4
		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 

    KL2.KWP	PTR const struct . size(1) Largest target is 6
		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 

    KL2.KAP	PTR const struct . size(1) Largest target is 6
		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 

    KL1.KOut	PTR const struct . size(1) Largest target is 5
		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 

    KL1.KFc	PTR struct . size(2) Largest target is 2
		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 

    KL1.KFP	PTR const struct . size(1) Largest target is 4
		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 

    KL1.KWP	PTR const struct . size(1) Largest target is 6
		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 

    KL1.KAP	PTR const struct . size(1) Largest target is 6
		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 

    S4912$KOut	PTR const struct . size(1) Largest target is 5
		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 

    KL0.KOut	PTR const struct . size(1) Largest target is 5
		 -> KL3_OUT(CODE[4]), KL2_OUT(CODE[4]), KL1_OUT(CODE[4]), KL0_OUT(CODE[4]), 

    S4912$KFc	PTR struct . size(2) Largest target is 2
		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 

    KL0.KFc	PTR struct . size(2) Largest target is 2
		 -> KL3_FC(BANK1[2]), KL2_FC(BANK1[2]), KL1_FC(BANK1[2]), KL0_FC(BANK1[2]), 

    S4912$KFP	PTR const struct . size(1) Largest target is 4
		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 

    KL0.KFP	PTR const struct . size(1) Largest target is 4
		 -> KL3_FP(CODE[4]), KL2_FP(CODE[4]), KL1_FP(CODE[4]), KL0_FP(CODE[4]), 

    S4912$KWP	PTR const struct . size(1) Largest target is 6
		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 

    KL0.KWP	PTR const struct . size(1) Largest target is 6
		 -> KL3_WP(CODE[6]), KL2_WP(CODE[6]), KL1_WP(CODE[6]), KL0_WP(CODE[6]), 

    S4912$KAP	PTR const struct . size(1) Largest target is 6
		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 

    KL0.KAP	PTR const struct . size(1) Largest target is 6
		 -> KL3_AP(CODE[4]), KL2_AP(CODE[4]), KL1_AP(CODE[4]), KL0_AP(CODE[4]), 

    KL3_OUT.CAdr	PTR struct . size(2) Largest target is 40
		 -> PWD(BANK2[40]), 

    KL2_OUT.CAdr	PTR struct . size(2) Largest target is 40
		 -> PWD(BANK2[40]), 

    KL1_OUT.CAdr	PTR struct . size(2) Largest target is 40
		 -> PWD(BANK2[40]), 

    S4908$CAdr	PTR struct . size(2) Largest target is 40
		 -> PWD(BANK2[40]), 

    KL0_OUT.CAdr	PTR struct . size(2) Largest target is 40
		 -> PWD(BANK2[40]), 

    KL3_AP.PAdr	PTR struct . size(2) Largest target is 28
		 -> DWD(BANK2[28]), 

    KL2_AP.PAdr	PTR struct . size(2) Largest target is 28
		 -> DWD(BANK2[28]), 

    KL1_AP.PAdr	PTR struct . size(2) Largest target is 28
		 -> DWD(BANK2[28]), 

    S4899$PAdr	PTR struct . size(2) Largest target is 28
		 -> DWD(BANK2[28]), 

    KL0_AP.PAdr	PTR struct . size(2) Largest target is 28
		 -> DWD(BANK2[28]), 

    BitSet@data	PTR unsigned char  size(2) Largest target is 23
		 -> DtI2C(BANK1[23]), 


Critical Paths under _main in COMRAM

    _main->_PrintErr
    _main->_RefInterfaceData
    _main->_TrybPracy
    _main->_FiltrPomiarowyCOCW
    _InitPort->_RefStan
    _InitWsw->_SetStatus
    _TestScr->_SetStatus
    _PwrOnDelay->_StartRTdS
    _PwrOnDelay->_RTdS
    _EndTestScr->_SetStatus
    _EndClsScr->_AllKolToFirstPoz
    _EnKonf->_StartRTS
    _PomiarIN->_ReadTabNTC
    _RestartFltPrt->_SetPrt
    _TrybPracy->_PresKeyEX
    _FiltrPomiarowyCOCW->_GoldenEye
    _DecWSW->_PrintErr
    _DecWSW->_PrintErrTm
    _DecWSW->_PrintErrCs
    _DecERR->_PrintErr
    _DecSTR->_RdPrt
    _FunkcjaSerwisowa->_StartRTM
    _FunkcjaSerwisowa->_RTM
    _DecyzjaAntyLeg->_Write_b_eep
    _KolejkaPobudzen->_RdPrt
    _Rozruch->_PrintErr
    _ReloadPlomien->_RTdS
    _RuszPlomien->_StartRTS
    _RuszPlomien->_RTS
    _RuszPlomien->_StartRTdS
    _ReloadCiag->_RTM
    _ReloadCiag->_RTS
    _RuszCiag->_PrintErr
    _BlokadaL3->_StartRTM
    _BlokadaL3->_RTM
    _Blokada15S->_StartRTdS
    _Blokada15S->_RTdS
    _Moduluj->_ModPruCO
    _Moduluj->_ModPrzCO
    _Moduluj->_ModPruCW
    _Moduluj->_ModPruCW2
    _Moduluj->_ModPruCW4
    _DetekcjaPrzeplywuWG->_RdPrt
    _OczekujNaPrzeplywWG->_PrintErr
    _EndNst->_ResetKol
    _PrintNstCW->_SetStatus
    _PrintNstCO->_SetStatus
    _PrintErrTm->_SetStatus
    _PrintErrCs->_SetStatus
    _PrintOFF->_SetStatus
    _EndOFF->_SetStatus
    _PrintCS->_SetStatus
    _EndCS->_SetStatus
    _PrintCW->_SetStatus
    _EndCW->_SetStatus
    _PrintCO->_SetStatus
    _PrintL3->_SetStatus
    _SetDiode->_Swsdid
    _SetDiode->_Rwsdid
    _EndL3->_ResetKol
    _SetWylacz->_SetPrt
    _DecyzjaPLM->_PrintErr
    _DecyzjaPLM2->_PrintErr
    _PrintErr->_SetStatus
    _ErrPTG->_RefInterfaceData
    _PomiarCO->_ReadTabNTC
    _PomiarCW->_ReadTabNTC
    _ReadTabNTC->_Read_b_eep
    _PomiarCS->___wmul
    _PomiarPCW->_ReturnACfromNTC
    _ReturnACfromNTC->_Read_b_eep
    _PomiarPFN->_WritePFN
    _RefInterfaceData->_RdPrt
    _ZmienKCOKCW->_StartRTdS
    _ZmienKCOKCW->_RTdS
    _Wylacz->_RdPrt
    _VWybieg->_StartRTS
    _VWybieg->_RTS
    _Proba48->_StartRTG
    _Proba48->_RTG
    _Rusz48->_StartRTS
    _Rusz48->_RTS
    _Proba48Z3->_StartRTG
    _Proba48Z3->_RTG
    _Rusz48Z3->_StartRTS
    _Rusz48Z3->_RTS
    _KeyRes->_RdPrt
    _VZPauza->_StartRTS
    _VZPauza->_RTS
    _ToReset->_Write_b_eep
    _EndErr->_ResetKol
    _GoldenEye->___wmul
    _FltParMod->_PredkoscZmianCW
    _GetPGD_PCO->___lmul
    _GetPGD_PCO->___aldiv
    _WriteEEPCO->_Write_b_eep
    _WriteEEPCW->_Write_b_eep
    _WriteEEPFN->_Write_b_eep
    _ReadEEPFN->_Read_b_eep
    _ModParam->_Read_b_eep
    _MocStart->___lwdiv
    _MocMaksCO->___lwdiv
    _MocMaksCW->___lwdiv
    _StartCO->_StartRTdS
    _ModZgCO->___aldiv
    _ModZgCO->___lmul
    _ModDkCO->___wmul
    _IncMaxCO->_Trosnie
    _ModPruCO->_Tmaleje
    _ModPrzCO->_Twyzsza
    _ModZgCW->___aldiv
    _ModZgCW->___lmul
    _ModDkCW->___wmul
    _IncMaxCW->_Trosnie
    _ModPruCW->_Twyzsza
    _ModPruCW->_Tmaleje
    _StartCO2->_StartRTdS
    _StartMCW2->_StartRTdS
    _ModZgCW2->___aldiv
    _ModZgCW2->___lmul
    _ModDkCW2->___wmul
    _IncConstCW2->_TFrosnie
    _IncMaxCW2->_Trosnie
    _IncMaxCW2->_TFrosnie
    _ModPruCW2->_TFmaleje
    _ModPruCW2->_Twyzsza
    _ModPruCW2->_Tmaleje
    _ModPrzCW2->_Tmaleje
    _ModPrzCW2->_Twyzsza
    _ModPrzCW2->_TFmaleje
    _StartMCO3->_StartRTdS
    _ModToCW3->_Tnizsza
    _StartCO4->_StartRTdS
    _StartMCW4->_StartRTdS
    _ModZgCW4->___aldiv
    _ModZgCW4->___lmul
    _ModDkCW4->___wmul
    _IncMaxCW4->_Trosnie
    _ModPruCW4->_Twyzsza
    _ModPruCW4->_Tmaleje
    _ModPrzCW4->___lwdiv
    _WriteOPWM->___lwdiv
    _FirstPCW->___aldiv
    _FirstPCW->___lmul
    _PomiarZW->_ReadTabZNTC
    _ReadTabZNTC->_Read_b_eep
    _RglPmp1->_ModPmp1
    _ModPmp1->_Twyzsza
    _ProcToPmpPwm->___lwdiv
    _ModPmp2->_RetDelta
    _RetKrkDelta->_RetHI
    _RetKrkDelta->_RetLO
    _RetDelta4->_RetHI
    _RetDelta4->_RetLO
    _RetMin->_RetMax
    _PresKeyEX->_StartKeyTim
    _PresKeyEX->_KeyTim
    _PresKeyEX->_RdPrt
    _ReadDataXONLID->_ExxPresKey
    _ExxPresKey->_StartKeyTim
    _ExxPresKey->_KeyTim
    ___awdiv->___wmul
    ___lwdiv->___wmul

Critical Paths under _ISR in COMRAM

    _ISR->_FormatDataIMY
    _I2CSlaveTR->_LiczCHK
    _SetTData->i2_RdPrt
    _ReceptDataI2C->_LiczCHK
    _FormatDataIMY->_BitSet
    _BitSet->i2_RdPrt
    _IntUSARTRC->_VerifyNDatCHK
    _RefreshWSW->_KolProc
    _StabPort->i2_RefStan
    _VerifyNDatCHK->_SetNDatCHK
    _FormatWswData->i2___lbdiv
    _FormatWswData->___lbmod

Critical Paths under _main in BANK0

    _main->_DecERR
    _main->_OczekujNaPrzeplywWG
    _RdEEParam->_MocStart
    _RdEEParam->_MocMaksCW
    _RdEEParam->_MocMaksCO
    _FiltrPomiarowyCOCW->_GoldenEye
    _DecWSW->_NastawaCOCW
    _Moduluj->_ModPrzCW
    _NastawaCOCW->_ReadParam
    _ReadParam->_ReadDataXONLID
    _ErrPTG->_PomiarCS
    _PomiarCS->___awdiv
    _PomiarPCO->_GetPGD_PCO
    _GetPGD_PCO->___aldiv
    _MocStart->___awdiv
    _MocMaksCO->___awdiv
    _MocMaksCW->___awdiv
    _ModZgCO->___aldiv
    _PropOPT->_WriteOPWM
    _StartMCW->_FirstPCW
    _ModZgCW->___aldiv
    _ModPrzCW->___awdiv
    _PropCO->_WriteOPWM
    _ModZgCW2->___aldiv
    _PropCO2->_WriteOPWM
    _ModZgCW4->___aldiv
    _ModPrzCW4->___lwdiv
    _PropCO4->_WriteOPWM
    _WriteOPWM->___lwdiv
    _FirstPCW->___awdiv
    _RglPmp1->_ProcToPmpPwm
    _ProcToPmpPwm->___lwdiv
    _ModPmp2->_RetHI
    _ModPmp2->_RetLO
    _RetKrkDelta->_RetHI
    _RetKrkDelta->_RetLO
    _RetHI->___awdiv
    _RetLO->___awdiv
    _RetDelta4->_RetHI
    _RetDelta4->_RetLO

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_DecWSW
    _RetKrkDelta->_RetDelta4

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _RglPmp->_RglPmp2
    _ReadParam->_ReadDataXONLID
    _PomiarPCO->_GetPGD_PCO
    _StartMCW->_FirstPCW
    _ModPmp2->_RetDelta
    _RetDelta->_RetKrkDelta
    _RetKrkDelta->_RetDelta4
    _RetDelta4->_RetHI
    _RetDelta4->_RetLO

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _NastawaCOCW->_ReadParam
    _RglPmp2->_ModPmp2

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  165884
                                             14 BANK2      1     1      0
                                             16 BANK3      2     2      0
                            _InitOsc
                         _InitGlobal
                         _InitTimer1
                           _InitPort
                             _InitAC
                            _InitWsw
                            _InitPWM
                            _InitI2C
                           _InitUart
                        _InitDataPmr
                          _ClearData
                            _TestScr
                         _PwrOnDelay
                         _EndTestScr
                             _ClsScr
                          _EndClsScr
                          _RdEEParam
                             _EnKonf
                         _Read_b_eep
                           _PrintErr
                             _ErrPTG
                           _PomiarCO
                           _PomiarCW
                           _PomiarZW
                           _PomiarCS
                          _PomiarPCO
                          _PomiarPCW
                          _PomiarPFN
                           _PomiarIN
                   _RefInterfaceData
                              _RdPrt
                      _RestartFltPrt
                           _StartRTS
                          _WritePWM2
                          _TrybPracy
                 _FiltrPomiarowyCOCW
                             _DecWSW
                             _DecERR
                             _DecSTR
                         _DecRozruch
                          _DecWylacz
                   _FunkcjaSerwisowa
                     _DecyzjaAntyLeg
                    _KolejkaPobudzen
                             _RglPmp
                        _ZmienKCOKCW
                             _Wylacz
                            _Rozruch
                            _VWybieg
                      _ReloadPlomien
                        _RuszPlomien
                         _ReloadCiag
                           _RuszCiag
                            _Proba48
                             _Rusz48
                          _Proba48Z3
                           _Rusz48Z3
                          _BlokadaL3
                         _Blokada15S
                            _Moduluj
                _DetekcjaPrzeplywuWG
                _OczekujNaPrzeplywWG
 ---------------------------------------------------------------------------------
 (1) _InitAC                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitOsc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGlobal                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitPort                                             0     0      0     111
                            _RefStan
                            _FrsStan
 ---------------------------------------------------------------------------------
 (1) _InitWsw                                              1     1      0    1902
                                             36 COMRAM     1     1      0
                          _SetStatus
 ---------------------------------------------------------------------------------
 (1) _InitPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitDataPmr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearData                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TestScr                                              0     0      0    2154
                          _SetStatus
                            _SetData
                           _SetDiode
 ---------------------------------------------------------------------------------
 (1) _PwrOnDelay                                           1     1      0     210
                                             30 COMRAM     1     1      0
                          _StartRTdS
                               _RTdS
 ---------------------------------------------------------------------------------
 (1) _EndTestScr                                           0     0      0    2154
                          _SetStatus
                            _SetData
                           _SetDiode
 ---------------------------------------------------------------------------------
 (1) _ClsScr                                               0     0      0       0
                             _WswOff
 ---------------------------------------------------------------------------------
 (1) _EndClsScr                                            0     0      0     161
                   _AllKolToFirstPoz
                              _WswOn
 ---------------------------------------------------------------------------------
 (1) _RdEEParam                                            0     0      0    3757
                         _Read_b_eep
                       _SetTpKtParam
                           _ModParam
                           _MocStart
                          _MocMaksCW
                          _MocMaksCO
                             _SetPFN
                             _SetNST
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (1) _EnKonf                                               0     0      0      93
                           _StartRTS
 ---------------------------------------------------------------------------------
 (1) _PomiarIN                                             0     0      0     390
                             _ReadAC
                         _ReadTabNTC
 ---------------------------------------------------------------------------------
 (1) _RestartFltPrt                                        0     0      0     124
                             _SetPrt
 ---------------------------------------------------------------------------------
 (1) _TrybPracy                                            7     7      0    2967
                                             37 COMRAM     1     1      0
                                              0 BANK0      6     6      0
                              _RdPrt
                          _PresKeyEX
                        _WaitToLowEx
                        _ResBufKeyEx
                             _SetPrt
                          _StartRTdS
                         _RestartKol
                               _RTdS
 ---------------------------------------------------------------------------------
 (1) _FiltrPomiarowyCOCW                                   1     1      0    2157
                                             37 COMRAM     1     1      0
                            _PmrTim1
                          _StartTim1
                          _GoldenEye
                            _PmrTim2
                          _StartTim2
                          _FltParMod
 ---------------------------------------------------------------------------------
 (1) _DecWSW                                               3     3      0   35142
                                              0 BANK1      3     3      0
                        _NastawaCOCW
                           _PrintErr
                         _PrintErrTm
                         _PrintErrCs
                             _EndErr
                           _PrintOFF
                             _EndOFF
                            _PrintCS
                              _EndCS
                            _PrintCW
                              _EndCW
                            _PrintCO
                            _PrintL3
                           _SetDiode
 ---------------------------------------------------------------------------------
 (1) _DecERR                                               4     4      0   10874
                                             10 BANK0      3     3      0
                              _RdPrt
                             _SetErr
                             _ErrPTG
                             _EndErr
                             _SetMsg
                           _StartRTS
                           _PrintErr
 ---------------------------------------------------------------------------------
 (1) _DecSTR                                               1     1      0     177
                                             31 COMRAM     1     1      0
                                _RTS
                              _RdPrt
                          _ToObiegCW
                          _ToObiegCO
                         _RestartMod
                           _WritePWM
 ---------------------------------------------------------------------------------
 (1) _DecRozruch                                           0     0      0      84
                         _SetRozruch
 ---------------------------------------------------------------------------------
 (1) _DecWylacz                                            0     0      0     208
                          _SetWylacz
                              _RdPrt
                              _SetL3
 ---------------------------------------------------------------------------------
 (1) _FunkcjaSerwisowa                                     1     1      0     155
                                             30 COMRAM     1     1      0
                           _StartRTM
                                _RTM
 ---------------------------------------------------------------------------------
 (1) _DecyzjaAntyLeg                                       1     1      0     440
                                             33 COMRAM     1     1      0
                           _StartRTG
                                _RTM
                                _RTG
                           _StartRTM
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (1) _KolejkaPobudzen                                      3     3      0     252
                                             31 COMRAM     3     3      0
                              _RdPrt
 ---------------------------------------------------------------------------------
 (1) _RglPmp                                               0     0      0   10680
                            _RglPmp1
                            _RglPmp2
                           _StartRTS
                       _ProcToPmpPwm
                          _WritePWM2
 ---------------------------------------------------------------------------------
 (1) _Rozruch                                              1     1      0   31521
                                             10 BANK0      1     1      0
                           _StartRTS
                                _RTS
                              _RdPrt
                           _PrintErr
                             _ErrPTG
                           _WritePWM
                            _GrzejON
                         _DecyzjaPLM
                        _DecyzjaPLM2
 ---------------------------------------------------------------------------------
 (1) _ReloadPlomien                                        1     1      0      84
                                             30 COMRAM     1     1      0
                               _RTdS
 ---------------------------------------------------------------------------------
 (1) _RuszPlomien                                          1     1      0     281
                                             30 COMRAM     1     1      0
                           _StartRTS
                                _RTS
                          _StartRTdS
 ---------------------------------------------------------------------------------
 (1) _ReloadCiag                                           1     1      0     124
                                             30 COMRAM     1     1      0
                                _RTM
                                _RTS
 ---------------------------------------------------------------------------------
 (1) _RuszCiag                                             1     1      0   10783
                                             10 BANK0      1     1      0
                           _StartRTS
                           _StartRTM
                                _RTS
                                _RTM
                           _PrintErr
                             _ErrPTG
                              _RdPrt
 ---------------------------------------------------------------------------------
 (1) _BlokadaL3                                            1     1      0     239
                                             30 COMRAM     1     1      0
                           _StartRTM
                              _SetL3
                              _EndL3
                                _RTM
 ---------------------------------------------------------------------------------
 (1) _Blokada15S                                           1     1      0     210
                                             30 COMRAM     1     1      0
                          _StartRTdS
                               _RTdS
 ---------------------------------------------------------------------------------
 (1) _Moduluj                                              1     1      0   19118
                                              0 BANK1      1     1      0
                            _StartCO
                         _ReadDataCO
                            _ModToCO
                            _ModZgCO
                            _ModDkCO
                               _RTdS
                          _StartRTdS
                       _IncConstCOCW
                           _IncMaxCO
                           _ModPruCO
                           _ModPrzCO
                            _PropOPT
                           _StartMCW
                         _ReadDataCW
                            _ModToCW
                            _ModZgCW
                            _ModDkCW
                           _IncMaxCW
                           _ModPruCW
                           _ModPrzCW
                             _PropCO
                           _StartCO2
                        _ReadDataCO2
                           _ModToCO2
                        _IncConstCO2
                          _StartMCW2
                        _ReadDataCW2
                           _ModToCW2
                           _ModZgCW2
                           _ModDkCW2
                        _IncConstCW2
                          _IncMaxCW2
                          _ModPruCW2
                          _ModPrzCW2
                            _PropCO2
                          _StartMCO3
                           _ModToCO3
                           _ModToCW3
                           _StartCO4
                        _ReadDataCO4
                           _ModToCO4
                      _IncConstCOCW4
                          _StartMCW4
                        _ReadDataCW4
                           _ModToCW4
                           _ModZgCW4
                           _ModDkCW4
                          _IncMaxCW4
                          _ModPruCW4
                          _ModPrzCW4
                            _PropCO4
 ---------------------------------------------------------------------------------
 (1) _DetekcjaPrzeplywuWG                                  3     3      0     377
                                             31 COMRAM     3     3      0
                              _RdPrt
                           _StartRTS
                                _RTS
 ---------------------------------------------------------------------------------
 (1) _OczekujNaPrzeplywWG                                  3     3      0   10724
                                             10 BANK0      3     3      0
                              _RdPrt
                           _StartRTS
                                _RTS
                           _PrintErr
                             _ErrPTG
 ---------------------------------------------------------------------------------
 (2) _RTM                                                  1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _StartRTM                                             1     1      0      93
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _NastawaCOCW                                          1     1      0   12414
                                             10 BANK0      1     1      0
                          _StartRTdS
                             _EndNst
                         _PrintNstCW
                         _PrintNstCO
                               _RTdS
                              _RdPrt
                          _ReadParam
 ---------------------------------------------------------------------------------
 (3) _EndNst                                               0     0      0      84
                           _ResetKol
 ---------------------------------------------------------------------------------
 (3) _PrintNstCW                                           1     1      0    2100
                                             36 COMRAM     1     1      0
                            _SetData
                          _SetStatus
                         _RestartKol
 ---------------------------------------------------------------------------------
 (3) _PrintNstCO                                           1     1      0    2100
                                             36 COMRAM     1     1      0
                            _SetData
                          _SetStatus
                         _RestartKol
 ---------------------------------------------------------------------------------
 (3) _ReadParam                                           20     9     11    7836
                                              6 BANK0      4     4      0
                                              0 BANK3     16     5     11
                              _RdPrt
                     _ReadDataXONLID
                               _RTdS
                          _StartRTdS
 ---------------------------------------------------------------------------------
 (2) _PrintErrTm                                           3     1      2    2310
                                             36 COMRAM     2     0      2
                                              0 BANK0      1     1      0
                            _SetData
                          _SetStatus
                             _SetPoz
 ---------------------------------------------------------------------------------
 (2) _PrintErrCs                                           3     1      2    2310
                                             36 COMRAM     2     0      2
                                              0 BANK0      1     1      0
                            _SetData
                          _SetStatus
                             _SetPoz
 ---------------------------------------------------------------------------------
 (2) _PrintOFF                                             0     0      0    1932
                          _SetStatus
                            _SetData
 ---------------------------------------------------------------------------------
 (2) _EndOFF                                               0     0      0    1764
                          _SetStatus
 ---------------------------------------------------------------------------------
 (2) _PrintCS                                              1     1      0    1974
                                             36 COMRAM     1     1      0
                          _SetStatus
                            _SetData
 ---------------------------------------------------------------------------------
 (2) _EndCS                                                0     0      0    1764
                          _SetStatus
 ---------------------------------------------------------------------------------
 (2) _PrintCW                                              1     1      0    1974
                                             36 COMRAM     1     1      0
                          _SetStatus
                            _SetData
 ---------------------------------------------------------------------------------
 (2) _EndCW                                                0     0      0    1764
                          _SetStatus
 ---------------------------------------------------------------------------------
 (2) _PrintCO                                              1     1      0    1974
                                             36 COMRAM     1     1      0
                          _SetStatus
                            _SetData
 ---------------------------------------------------------------------------------
 (2) _PrintL3                                              0     0      0    2184
                            _SetData
                          _SetStatus
                             _SetPoz
 ---------------------------------------------------------------------------------
 (2) _SetDiode                                             2     1      1     222
                                             30 COMRAM     2     1      1
                             _Swsdid
                             _Rwsdid
 ---------------------------------------------------------------------------------
 (2) _SetErr                                               1     1      0      31
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetMsg                                               1     1      0      31
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RestartMod                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetRozruch                                           0     0      0      84
                              _EndL3
 ---------------------------------------------------------------------------------
 (2) _EndL3                                                0     0      0      84
                           _ResetKol
 ---------------------------------------------------------------------------------
 (2) _SetWylacz                                            0     0      0     124
                           _GrzejOFF
                          _ToObiegCO
                             _SetPrt
 ---------------------------------------------------------------------------------
 (2) _SetL3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GrzejON                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DecyzjaPLM                                           0     0      0   10389
                           _PrintErr
                             _ErrPTG
 ---------------------------------------------------------------------------------
 (2) _DecyzjaPLM2                                          0     0      0   10473
                           _PrintErr
                             _ErrPTG
                              _RdPrt
 ---------------------------------------------------------------------------------
 (2) _PrintErr                                             2     1      1    2310
                                             36 COMRAM     2     1      1
                            _SetData
                          _SetStatus
                             _SetPoz
 ---------------------------------------------------------------------------------
 (2) _ErrPTG                                               0     0      0    8079
                           _GrzejOFF
                            _VZPauza
                           _Busy_eep
                        _Write_b_eep
                           _WritePWM
                          _PomiarPCO
                          _PomiarPCW
                          _PomiarPFN
                           _PomiarCO
                           _PomiarCW
                           _PomiarCS
                            _Proba48
                          _Proba48Z3
                   _RefInterfaceData
                              _RdPrt
                          _ToObiegCO
                          _ToObiegCW
                        _ZmienKCOKCW
                             _Wylacz
                            _VWybieg
                             _Rusz48
                           _Rusz48Z3
                             _KeyRes
                            _ToReset
 ---------------------------------------------------------------------------------
 (3) _PomiarCO                                             2     2      0     390
                                             35 COMRAM     2     2      0
                             _ReadAC
                         _ReadTabNTC
 ---------------------------------------------------------------------------------
 (3) _PomiarCW                                             2     2      0     474
                                             35 COMRAM     2     2      0
                             _ReadAC
                         _ReadTabNTC
                              _RdPrt
 ---------------------------------------------------------------------------------
 (4) _ReadTabNTC                                           4     4      0     266
                                             31 COMRAM     4     4      0
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _PomiarCS                                             4     4      0    1358
                                             35 COMRAM     2     2      0
                                              8 BANK0      2     2      0
                             _ReadAC
                             ___wmul
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _PomiarPCO                                            0     0      0    1935
                          _StartRTdS
                           _WritePCO
                         _GetPGD_PCO
                          _SetModPCO
                    _ReturnACfromNTC
 ---------------------------------------------------------------------------------
 (3) _PomiarPCW                                            0     0      0     754
                          _StartRTdS
                           _WritePCW
                          _SetModPCW
                    _ReturnACfromNTC
 ---------------------------------------------------------------------------------
 (4) _ReturnACfromNTC                                      4     4      0     288
                                             31 COMRAM     4     4      0
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _PomiarPFN                                            0     0      0     528
                          _ReadEEPFN
                          _StartRTdS
                           _WritePFN
 ---------------------------------------------------------------------------------
 (3) _RefInterfaceData                                     7     7      0     408
                                             31 COMRAM     7     7      0
                              _RdPrt
 ---------------------------------------------------------------------------------
 (3) _ZmienKCOKCW                                          1     1      0     210
                                             30 COMRAM     1     1      0
                          _StartRTdS
                               _RTdS
 ---------------------------------------------------------------------------------
 (3) _Wylacz                                               1     1      0     239
                                             31 COMRAM     1     1      0
                           _StartRTS
                                _RTS
                              _RdPrt
 ---------------------------------------------------------------------------------
 (3) _VWybieg                                              1     1      0     155
                                             30 COMRAM     1     1      0
                           _StartRTS
                                _RTS
 ---------------------------------------------------------------------------------
 (3) _Proba48                                              1     1      0     155
                                             30 COMRAM     1     1      0
                           _StartRTG
                                _RTG
 ---------------------------------------------------------------------------------
 (3) _Rusz48                                               1     1      0     155
                                             30 COMRAM     1     1      0
                           _StartRTS
                          _ToObiegCO
                                _RTS
                          _ToObiegCW
 ---------------------------------------------------------------------------------
 (3) _Proba48Z3                                            1     1      0     155
                                             30 COMRAM     1     1      0
                           _StartRTG
                                _RTG
 ---------------------------------------------------------------------------------
 (3) _Rusz48Z3                                             1     1      0     155
                                             30 COMRAM     1     1      0
                          _ToObiegCW
                           _StartRTS
                                _RTS
 ---------------------------------------------------------------------------------
 (4) _StartRTG                                             1     1      0      93
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RTG                                                  1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ToObiegCW                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ToObiegCO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WritePWM                                             1     1      0      31
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _GrzejOFF                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _KeyRes                                               0     0      0     239
                              _RdPrt
                           _StartRTS
                                _RTS
 ---------------------------------------------------------------------------------
 (4) _RdPrt                                                2     2      0      84
                                             29 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _VZPauza                                              1     1      0     155
                                             30 COMRAM     1     1      0
                           _StartRTS
                                _RTS
 ---------------------------------------------------------------------------------
 (3) _ToReset                                              0     0      0     369
                             _EndErr
                           _Busy_eep
                        _Write_b_eep
                           _StartRTS
                                _RTS
 ---------------------------------------------------------------------------------
 (4) _EndErr                                               0     0      0      84
                           _ResetKol
 ---------------------------------------------------------------------------------
 (2) _StartTim1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PmrTim1                                              1     1      0      31
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _StartTim2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PmrTim2                                              1     1      0      31
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GoldenEye                                            7     7      0    1594
                                             35 COMRAM     2     2      0
                                              0 BANK0      5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _FltParMod                                            1     1      0     501
                                             31 COMRAM     1     1      0
                    _PredkoscZmianCW
 ---------------------------------------------------------------------------------
 (3) _PredkoscZmianCW                                      2     2      0     365
                                             29 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _SetModPCO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GetPGD_PCO                                           9     9      0    1181
                                              6 BANK0      4     4      0
                                              0 BANK2      5     5      0
                             ___wmul
                             ___lmul
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) _WritePCO                                             1     1      0     340
                                             33 COMRAM     1     1      0
                               _RTdS
                          _StartRTdS
                         _WriteEEPCO
 ---------------------------------------------------------------------------------
 (5) _WriteEEPCO                                           0     0      0     130
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (4) _WritePCW                                             1     1      0     340
                                             33 COMRAM     1     1      0
                               _RTdS
                          _StartRTdS
                         _WriteEEPCW
 ---------------------------------------------------------------------------------
 (5) _WriteEEPCW                                           0     0      0     130
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (4) _SetModPCW                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _WritePFN                                             1     1      0     340
                                             33 COMRAM     1     1      0
                               _RTdS
                          _StartRTdS
                         _WriteEEPFN
 ---------------------------------------------------------------------------------
 (5) _WriteEEPFN                                           0     0      0     130
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (4) _ReadEEPFN                                            0     0      0      62
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _RefStan                                              4     4      0     111
                                             29 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _FrsStan                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _WswOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AllKolToFirstPoz                                     1     1      0     161
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WswOn                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetData                                              4     0      4     168
                                             29 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _SetStatus                                            7     1      6    1764
                                             29 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (3) _SetPoz                                               6     5      1     252
                                             29 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (5) _ResetKol                                             1     1      0      84
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RestartKol                                           1     1      0      84
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Swsdid                                               1     1      0      48
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Rwsdid                                               1     1      0      48
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ModParam                                             3     2      1      93
                                             31 COMRAM     3     2      1
                         _Read_b_eep (ARG)
 ---------------------------------------------------------------------------------
 (2) _MocStart                                             3     3      0     921
                                              8 BANK0      3     3      0
                             ___wmul
                            ___awdiv
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _MocMaksCO                                            3     3      0     921
                                              8 BANK0      3     3      0
                             ___wmul
                            ___awdiv
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _MocMaksCW                                            3     3      0     921
                                              8 BANK0      3     3      0
                             ___wmul
                            ___awdiv
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _StartCO                                              0     0      0     126
                          _StartRTdS
 ---------------------------------------------------------------------------------
 (2) _ReadDataCO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ModToCO                                              0     0      0       0
                             _ClrMod
 ---------------------------------------------------------------------------------
 (2) _ModZgCO                                             10    10      0    1116
                                              6 BANK0      5     5      0
                                              0 BANK2      5     5      0
                            _Tnizsza
                            _Tmaleje
                              _Tstoi
                             ___wmul
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _ModDkCO                                             12    12      0     374
                                              0 BANK0     12    12      0
                            _Twyzsza
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _IncConstCOCW                                         0     0      0       0
                              _Tstoi
 ---------------------------------------------------------------------------------
 (2) _IncMaxCO                                             6     6      0     220
                                             30 COMRAM     6     6      0
                            _Trosnie
 ---------------------------------------------------------------------------------
 (2) _ModPruCO                                             7     7      0     424
                                             33 COMRAM     5     5      0
                                              0 BANK0      2     2      0
                            _Tmaleje
                             _Trowna
                            _Trosnie
 ---------------------------------------------------------------------------------
 (2) _ModPrzCO                                             6     6      0      96
                                             33 COMRAM     5     5      0
                                              0 BANK0      1     1      0
                            _Twyzsza
 ---------------------------------------------------------------------------------
 (2) _PropOPT                                              0     0      0     937
                          _WriteOPWM
 ---------------------------------------------------------------------------------
 (2) _StartMCW                                             0     0      0    2908
                          _StartRTdS
                           _FirstPCW
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) _ReadDataCW                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ModToCW                                              0     0      0       0
                             _ClrMod
 ---------------------------------------------------------------------------------
 (2) _ModZgCW                                             10    10      0    1116
                                              6 BANK0      5     5      0
                                              0 BANK2      5     5      0
                            _Tnizsza
                            _Twyzsza
                              _Tstoi
                             ___wmul
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _ModDkCW                                             12    12      0     374
                                              0 BANK0     12    12      0
                             _Trowna
                            _Tnizsza
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _IncMaxCW                                             6     6      0     350
                                             30 COMRAM     6     6      0
                            _Trosnie
 ---------------------------------------------------------------------------------
 (2) _ModPruCW                                             7     7      0     599
                                             33 COMRAM     5     5      0
                                              0 BANK0      2     2      0
                            _Tnizsza
                              _Tstoi
                            _Trosnie
                            _Twyzsza
                            _Tmaleje
 ---------------------------------------------------------------------------------
 (2) _ModPrzCW                                             9     9      0    1726
                                              8 BANK0      5     5      0
                                              0 BANK2      4     4      0
                            _Tnizsza
                            ___awdiv
                            _Tmaleje
                            _Twyzsza
 ---------------------------------------------------------------------------------
 (2) _PropCO                                               0     0      0     937
                          _WriteOPWM
 ---------------------------------------------------------------------------------
 (2) _StartCO2                                             0     0      0     126
                          _StartRTdS
 ---------------------------------------------------------------------------------
 (2) _ReadDataCO2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ModToCO2                                             0     0      0       0
                            _ClrMod2
 ---------------------------------------------------------------------------------
 (2) _IncConstCO2                                          0     0      0       0
                              _Tstoi
 ---------------------------------------------------------------------------------
 (2) _StartMCW2                                            0     0      0     126
                          _StartRTdS
                          _FirstPCW2
 ---------------------------------------------------------------------------------
 (2) _ReadDataCW2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ModToCW2                                             0     0      0       0
                            _ClrMod2
 ---------------------------------------------------------------------------------
 (2) _ModZgCW2                                            10    10      0    1085
                                              6 BANK0      5     5      0
                                              0 BANK2      5     5      0
                            _Tnizsza
                          _FirstPCW2
                             ___wmul
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _ModDkCW2                                            12    12      0     374
                                              0 BANK0     12    12      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _IncConstCW2                                          0     0      0      31
                           _TFrosnie
                              _Tstoi
 ---------------------------------------------------------------------------------
 (2) _IncMaxCW2                                            3     3      0     127
                                             30 COMRAM     3     3      0
                            _Trosnie
                           _TFrosnie
 ---------------------------------------------------------------------------------
 (2) _ModPruCW2                                            7     7      0     664
                                             33 COMRAM     5     5      0
                                              0 BANK0      2     2      0
                            _Tnizsza
                            _Trosnie
                           _TFrosnie
                           _TFmaleje
                             _TFstoi
                            _Twyzsza
                             _Trowna
                              _Tstoi
                            _Tmaleje
 ---------------------------------------------------------------------------------
 (2) _ModPrzCW2                                            0     0      0     124
                            _Tmaleje
                            _Twyzsza
                              _Tstoi
                           _TFmaleje
                            _Tnizsza
 ---------------------------------------------------------------------------------
 (2) _PropCO2                                              0     0      0     937
                          _WriteOPWM
 ---------------------------------------------------------------------------------
 (2) _StartMCO3                                            0     0      0     126
                          _StartRTdS
 ---------------------------------------------------------------------------------
 (2) _ModToCO3                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ModToCW3                                             5     5      0      31
                                             30 COMRAM     5     5      0
                            _Tnizsza
 ---------------------------------------------------------------------------------
 (2) _StartCO4                                             0     0      0     126
                          _StartRTdS
 ---------------------------------------------------------------------------------
 (2) _ReadDataCO4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ModToCO4                                             0     0      0       0
                            _ClrMod4
 ---------------------------------------------------------------------------------
 (2) _IncConstCOCW4                                        0     0      0       0
                              _Tstoi
 ---------------------------------------------------------------------------------
 (2) _StartMCW4                                            0     0      0     126
                          _StartRTdS
 ---------------------------------------------------------------------------------
 (2) _ReadDataCW4                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ModToCW4                                             0     0      0       0
                            _ClrMod4
 ---------------------------------------------------------------------------------
 (2) _ModZgCW4                                            10    10      0    1085
                                              6 BANK0      5     5      0
                                              0 BANK2      5     5      0
                            _Tnizsza
                             ___wmul
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _ModDkCW4                                            12    12      0     374
                                              0 BANK0     12    12      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _IncMaxCW4                                            3     3      0      96
                                             30 COMRAM     3     3      0
                            _Trosnie
 ---------------------------------------------------------------------------------
 (2) _ModPruCW4                                            7     7      0     572
                                             33 COMRAM     5     5      0
                                              0 BANK0      2     2      0
                            _Tnizsza
                              _Tstoi
                            _Trosnie
                            _Twyzsza
                            _Tmaleje
 ---------------------------------------------------------------------------------
 (2) _ModPrzCW4                                            7     7      0     538
                                              4 BANK0      7     7      0
                             ___wmul
                            ___lwdiv
                            _Tmaleje
                            _Twyzsza
                            _Tnizsza
                              _Tstoi
 ---------------------------------------------------------------------------------
 (2) _PropCO4                                              0     0      0     937
                          _WriteOPWM
 ---------------------------------------------------------------------------------
 (3) _WriteOPWM                                            9     9      0     937
                                              4 BANK0      9     9      0
                             ___wmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _Tmaleje                                              4     4      0      31
                                             29 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _Tstoi                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Trowna                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Trosnie                                              1     1      0      31
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _FirstPCW                                            13    13      0    2337
                                              8 BANK0      5     5      0
                                              0 BANK2      8     8      0
                            ___awdiv
                             ___wmul
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _ClrMod                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClrMod4                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _FirstPCW2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClrMod2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TFrosnie                                             1     1      0      31
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _TFmaleje                                             4     4      0      31
                                             29 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (3) _TFstoi                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetTpKtParam                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetNST                                               0     0      0     709
                           _PomiarZW
                             _SetPrt
                         _Read_b_eep
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (5) _Read_b_eep                                           2     0      2      62
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PomiarZW                                             0     0      0     393
                             _ReadAC
                        _ReadTabZNTC
 ---------------------------------------------------------------------------------
 (4) _ReadAC                                               2     2      0     124
                                             29 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadTabZNTC                                          4     4      0     269
                                             31 COMRAM     4     4      0
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _SetPrt                                               3     2      1     124
                                             29 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (4) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Write_b_eep                                          4     1      3     130
                                             29 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _SetPFN                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RglPmp1                                              1     1      0    2000
                                              7 BANK0      1     1      0
                           _StartRTS
                       _ProcToPmpPwm
                          _WritePWM2
                                _RTS
                            _ModPmp1
 ---------------------------------------------------------------------------------
 (3) _ModPmp1                                             10    10      0    1304
                                             33 COMRAM     5     5      0
                                              0 BANK0      5     5      0
                               _RTdS
                          _StartRTdS
                            _Twyzsza
                            _Tnizsza
 ---------------------------------------------------------------------------------
 (2) _RglPmp2                                              1     1      0    8046
                                             13 BANK2      1     1      0
                           _StartRTS
                       _ProcToPmpPwm
                          _WritePWM2
                                _RTS
                            _ModPmp2
 ---------------------------------------------------------------------------------
 (4) _StartRTS                                             1     1      0      93
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WritePWM2                                            1     1      0      31
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RTS                                                  1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ProcToPmpPwm                                         3     3      0     510
                                              4 BANK0      3     3      0
                             ___wmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) _ModPmp2                                             10    10      0    7350
                                              0 BANK3     10    10      0
                              _RetHI
                              _RetLO
                           _RetDelta
                          _StartRTdS
                               _RTdS
                            _Twyzsza
                            _Tnizsza
 ---------------------------------------------------------------------------------
 (4) _StartRTdS                                            1     1      0     126
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RTdS                                                 1     1      0      84
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Tnizsza                                              1     1      0      31
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Twyzsza                                              4     4      0      31
                                             29 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (4) _RetDelta                                             3     2      1    4264
                                             37 COMRAM     1     0      1
                                             11 BANK2      2     2      0
                        _RetKrkDelta
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) _RetKrkDelta                                          5     5      0    3661
                                              6 BANK2      5     5      0
                              _RetHI
                              _RetLO
                          _RetDelta4
                             ___wmul
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) _RetHI                                               11     9      2     891
                                             35 COMRAM     2     0      2
                                              8 BANK0      5     5      0
                                              0 BANK2      4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) _RetLO                                               11     9      2     891
                                             35 COMRAM     2     0      2
                                              8 BANK0      5     5      0
                                              0 BANK2      4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) _RetDelta4                                            5     2      3     719
                                              0 BANK1      3     0      3
                                              4 BANK2      2     2      0
                          _RetDelta1
                          _RetDelta2
                          _RetDelta3
                             _RetMax
                             _RetMin
                              _RetHI (ARG)
                              _RetLO (ARG)
 ---------------------------------------------------------------------------------
 (7) _RetMin                                               3     2      1     124
                                             32 COMRAM     3     2      1
                             _RetMax (ARG)
 ---------------------------------------------------------------------------------
 (7) _RetMax                                               3     2      1     124
                                             29 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (7) _RetDelta1                                            2     1      1      62
                                             29 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) _RetDelta2                                            3     2      1     127
                                             29 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (7) _RetDelta3                                            2     1      1      62
                                             29 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _PresKeyEX                                            6     4      2    1470
                                             31 COMRAM     6     4      2
                        _StartKeyTim
                             _KeyTim
                              _RdPrt (ARG)
 ---------------------------------------------------------------------------------
 (2) _ResBufKeyEx                                          2     0      2      93
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _WaitToLowEx                                          2     0      2      62
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ReadDataXONLID                                      20     6     14    5130
                                              0 BANK0      6     6      0
                                              0 BANK2     14     0     14
                         _ExxPresKey
                            ___lbdiv
                            ___lwmod
                              _RdPrt (ARG)
 ---------------------------------------------------------------------------------
 (5) _ExxPresKey                                           7     3      4    1596
                                             31 COMRAM     7     3      4
                        _StartKeyTim
                             _KeyTim
 ---------------------------------------------------------------------------------
 (6) _StartKeyTim                                          2     0      2      84
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _KeyTim                                               2     0      2      42
                                             29 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) ___aldiv                                             14     6      8     445
                                             29 COMRAM     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     445
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lbdiv                                              4     3      1     342
                                             29 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     136
                                             29 COMRAM     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     241
                                             35 COMRAM     3     3      0
                                              0 BANK0      4     0      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     324
                                             29 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     136
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                 10    10      0    5731
                                             19 COMRAM    10    10      0
                         _IntUSARTRC
                         _IntUSARTTR
                       _ReloadTimer1
                          _IncRTimer
                        _IncPmrTimer
                        _IncKeyTimer
                         _RefreshWSW
                           _StabPort
                      _FormatDataIMY
                             _IntPWM
                            _IntPWM2
                         _I2CSlaveTR
 ---------------------------------------------------------------------------------
 (9) _I2CSlaveTR                                           1     1      0     462
                           _SetTData
                            _LiczCHK
                           _SetRData
                      _ReceptDataI2C
                    _TransmitDataI2C
 ---------------------------------------------------------------------------------
 (10) _SetTData                                            0     0      0     146
                            i2_RdPrt
 ---------------------------------------------------------------------------------
 (10) _SetRData                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ReceptDataI2C                                       0     0      0     158
                            _LiczCHK
                             _ToWork
 ---------------------------------------------------------------------------------
 (11) _LiczCHK                                             8     8      0     158
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (10) _TransmitDataI2C                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ToWork                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _FormatDataIMY                                       10    10      0     472
                                              9 COMRAM    10    10      0
                            i2_RdPrt
                             _BitSet
 ---------------------------------------------------------------------------------
 (10) _BitSet                                              7     3      4     110
                                              2 COMRAM     7     3      4
                            i2_RdPrt (ARG)
 ---------------------------------------------------------------------------------
 (9) _IntUSARTRC                                           0     0      0     179
                      _VerifyNDatCHK
 ---------------------------------------------------------------------------------
 (9) _IntUSARTTR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ReloadTimer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IncRTimer                                            1     1      0     624
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _IncPmrTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IncKeyTimer                                          1     1      0     312
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _RefreshWSW                                           0     0      0    3051
                            _KolProc
                       _SetPrWswData
                      _FormatWswData
                       _PrintWswData
 ---------------------------------------------------------------------------------
 (9) _StabPort                                             4     4      0     631
                                              4 COMRAM     4     4      0
                          i2_RefStan
 ---------------------------------------------------------------------------------
 (9) _IntPWM                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _IntPWM2                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _VerifyNDatCHK                                       1     1      0     179
                                              6 COMRAM     1     1      0
                         _SetNDatCHK
 ---------------------------------------------------------------------------------
 (11) _SetNDatCHK                                          6     6      0     135
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (10) _KolProc                                            16    16      0    1819
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 (10) _SetPrWswData                                        2     2      0      90
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _FormatWswData                                       2     2      0     822
                                              4 COMRAM     2     2      0
                          i2___lbdiv
                            ___lbmod
                              _Swbty
                              _Rwbty
 ---------------------------------------------------------------------------------
 (10) _PrintWswData                                        7     7      0     320
                                              0 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (11) _Swbty                                               2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _Rwbty                                               2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) ___lbmod                                             4     3      1     159
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (11) i2_RdPrt                                             2     2      0     146
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) i2___lbdiv                                           4     3      1     527
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (10) i2_RefStan                                           4     4      0     231
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitOsc
   _InitGlobal
   _InitTimer1
   _InitPort
     _RefStan
     _FrsStan
   _InitAC
   _InitWsw
     _SetStatus
   _InitPWM
   _InitI2C
   _InitUart
   _InitDataPmr
   _ClearData
   _TestScr
     _SetStatus
     _SetData
     _SetDiode
       _Swsdid
       _Rwsdid
   _PwrOnDelay
     _StartRTdS
     _RTdS
   _EndTestScr
     _SetStatus
     _SetData
     _SetDiode
       _Swsdid
       _Rwsdid
   _ClsScr
     _WswOff
   _EndClsScr
     _AllKolToFirstPoz
     _WswOn
   _RdEEParam
     _Read_b_eep
     _SetTpKtParam
     _ModParam
       _Read_b_eep (ARG)
     _MocStart
       ___wmul
       ___awdiv
         ___wmul (ARG)
       ___lwdiv
         ___wmul (ARG)
     _MocMaksCW
       ___wmul
       ___awdiv
         ___wmul (ARG)
       ___lwdiv
         ___wmul (ARG)
     _MocMaksCO
       ___wmul
       ___awdiv
         ___wmul (ARG)
       ___lwdiv
         ___wmul (ARG)
     _SetPFN
     _SetNST
       _PomiarZW
         _ReadAC
         _ReadTabZNTC
           _Read_b_eep
       _SetPrt
       _Read_b_eep
       _Busy_eep
       _Write_b_eep
     _Busy_eep
     _Write_b_eep
   _EnKonf
     _StartRTS
   _Read_b_eep
   _PrintErr
     _SetData
     _SetStatus
     _SetPoz
   _ErrPTG
     _GrzejOFF
     _VZPauza
       _StartRTS
       _RTS
     _Busy_eep
     _Write_b_eep
     _WritePWM
     _PomiarPCO
       _StartRTdS
       _WritePCO
         _RTdS
         _StartRTdS
         _WriteEEPCO
           _Busy_eep
           _Write_b_eep
       _GetPGD_PCO
         ___wmul
         ___lmul
         ___aldiv
       _SetModPCO
       _ReturnACfromNTC
         _Read_b_eep
     _PomiarPCW
       _StartRTdS
       _WritePCW
         _RTdS
         _StartRTdS
         _WriteEEPCW
           _Busy_eep
           _Write_b_eep
       _SetModPCW
       _ReturnACfromNTC
         _Read_b_eep
     _PomiarPFN
       _ReadEEPFN
         _Read_b_eep
       _StartRTdS
       _WritePFN
         _RTdS
         _StartRTdS
         _WriteEEPFN
           _Busy_eep
           _Write_b_eep
     _PomiarCO
       _ReadAC
       _ReadTabNTC
         _Read_b_eep
     _PomiarCW
       _ReadAC
       _ReadTabNTC
         _Read_b_eep
       _RdPrt
     _PomiarCS
       _ReadAC
       ___wmul
       ___awdiv
         ___wmul (ARG)
     _Proba48
       _StartRTG
       _RTG
     _Proba48Z3
       _StartRTG
       _RTG
     _RefInterfaceData
       _RdPrt
     _RdPrt
     _ToObiegCO
     _ToObiegCW
     _ZmienKCOKCW
       _StartRTdS
       _RTdS
     _Wylacz
       _StartRTS
       _RTS
       _RdPrt
     _VWybieg
       _StartRTS
       _RTS
     _Rusz48
       _StartRTS
       _ToObiegCO
       _RTS
       _ToObiegCW
     _Rusz48Z3
       _ToObiegCW
       _StartRTS
       _RTS
     _KeyRes
       _RdPrt
       _StartRTS
       _RTS
     _ToReset
       _EndErr
         _ResetKol
       _Busy_eep
       _Write_b_eep
       _StartRTS
       _RTS
   _PomiarCO
     _ReadAC
     _ReadTabNTC
       _Read_b_eep
   _PomiarCW
     _ReadAC
     _ReadTabNTC
       _Read_b_eep
     _RdPrt
   _PomiarZW
     _ReadAC
     _ReadTabZNTC
       _Read_b_eep
   _PomiarCS
     _ReadAC
     ___wmul
     ___awdiv
       ___wmul (ARG)
   _PomiarPCO
     _StartRTdS
     _WritePCO
       _RTdS
       _StartRTdS
       _WriteEEPCO
         _Busy_eep
         _Write_b_eep
     _GetPGD_PCO
       ___wmul
       ___lmul
       ___aldiv
     _SetModPCO
     _ReturnACfromNTC
       _Read_b_eep
   _PomiarPCW
     _StartRTdS
     _WritePCW
       _RTdS
       _StartRTdS
       _WriteEEPCW
         _Busy_eep
         _Write_b_eep
     _SetModPCW
     _ReturnACfromNTC
       _Read_b_eep
   _PomiarPFN
     _ReadEEPFN
       _Read_b_eep
     _StartRTdS
     _WritePFN
       _RTdS
       _StartRTdS
       _WriteEEPFN
         _Busy_eep
         _Write_b_eep
   _PomiarIN
     _ReadAC
     _ReadTabNTC
       _Read_b_eep
   _RefInterfaceData
     _RdPrt
   _RdPrt
   _RestartFltPrt
     _SetPrt
   _StartRTS
   _WritePWM2
   _TrybPracy
     _RdPrt
     _PresKeyEX
       _StartKeyTim
       _KeyTim
       _RdPrt (ARG)
     _WaitToLowEx
     _ResBufKeyEx
     _SetPrt
     _StartRTdS
     _RestartKol
     _RTdS
   _FiltrPomiarowyCOCW
     _PmrTim1
     _StartTim1
     _GoldenEye
       ___wmul
     _PmrTim2
     _StartTim2
     _FltParMod
       _PredkoscZmianCW
   _DecWSW
     _NastawaCOCW
       _StartRTdS
       _EndNst
         _ResetKol
       _PrintNstCW
         _SetData
         _SetStatus
         _RestartKol
       _PrintNstCO
         _SetData
         _SetStatus
         _RestartKol
       _RTdS
       _RdPrt
       _ReadParam
         _RdPrt
         _ReadDataXONLID
           _ExxPresKey
             _StartKeyTim
             _KeyTim
           ___lbdiv
           ___lwmod
           _RdPrt (ARG)
         _RTdS
         _StartRTdS
     _PrintErr
       _SetData
       _SetStatus
       _SetPoz
     _PrintErrTm
       _SetData
       _SetStatus
       _SetPoz
     _PrintErrCs
       _SetData
       _SetStatus
       _SetPoz
     _EndErr
       _ResetKol
     _PrintOFF
       _SetStatus
       _SetData
     _EndOFF
       _SetStatus
     _PrintCS
       _SetStatus
       _SetData
     _EndCS
       _SetStatus
     _PrintCW
       _SetStatus
       _SetData
     _EndCW
       _SetStatus
     _PrintCO
       _SetStatus
       _SetData
     _PrintL3
       _SetData
       _SetStatus
       _SetPoz
     _SetDiode
       _Swsdid
       _Rwsdid
   _DecERR
     _RdPrt
     _SetErr
     _ErrPTG
       _GrzejOFF
       _VZPauza
         _StartRTS
         _RTS
       _Busy_eep
       _Write_b_eep
       _WritePWM
       _PomiarPCO
         _StartRTdS
         _WritePCO
           _RTdS
           _StartRTdS
           _WriteEEPCO
             _Busy_eep
             _Write_b_eep
         _GetPGD_PCO
           ___wmul
           ___lmul
           ___aldiv
         _SetModPCO
         _ReturnACfromNTC
           _Read_b_eep
       _PomiarPCW
         _StartRTdS
         _WritePCW
           _RTdS
           _StartRTdS
           _WriteEEPCW
             _Busy_eep
             _Write_b_eep
         _SetModPCW
         _ReturnACfromNTC
           _Read_b_eep
       _PomiarPFN
         _ReadEEPFN
           _Read_b_eep
         _StartRTdS
         _WritePFN
           _RTdS
           _StartRTdS
           _WriteEEPFN
             _Busy_eep
             _Write_b_eep
       _PomiarCO
         _ReadAC
         _ReadTabNTC
           _Read_b_eep
       _PomiarCW
         _ReadAC
         _ReadTabNTC
           _Read_b_eep
         _RdPrt
       _PomiarCS
         _ReadAC
         ___wmul
         ___awdiv
           ___wmul (ARG)
       _Proba48
         _StartRTG
         _RTG
       _Proba48Z3
         _StartRTG
         _RTG
       _RefInterfaceData
         _RdPrt
       _RdPrt
       _ToObiegCO
       _ToObiegCW
       _ZmienKCOKCW
         _StartRTdS
         _RTdS
       _Wylacz
         _StartRTS
         _RTS
         _RdPrt
       _VWybieg
         _StartRTS
         _RTS
       _Rusz48
         _StartRTS
         _ToObiegCO
         _RTS
         _ToObiegCW
       _Rusz48Z3
         _ToObiegCW
         _StartRTS
         _RTS
       _KeyRes
         _RdPrt
         _StartRTS
         _RTS
       _ToReset
         _EndErr
           _ResetKol
         _Busy_eep
         _Write_b_eep
         _StartRTS
         _RTS
     _EndErr
       _ResetKol
     _SetMsg
     _StartRTS
     _PrintErr
       _SetData
       _SetStatus
       _SetPoz
   _DecSTR
     _RTS
     _RdPrt
     _ToObiegCW
     _ToObiegCO
     _RestartMod
     _WritePWM
   _DecRozruch
     _SetRozruch
       _EndL3
         _ResetKol
   _DecWylacz
     _SetWylacz
       _GrzejOFF
       _ToObiegCO
       _SetPrt
     _RdPrt
     _SetL3
   _FunkcjaSerwisowa
     _StartRTM
     _RTM
   _DecyzjaAntyLeg
     _StartRTG
     _RTM
     _RTG
     _StartRTM
     _Busy_eep
     _Write_b_eep
   _KolejkaPobudzen
     _RdPrt
   _RglPmp
     _RglPmp1
       _StartRTS
       _ProcToPmpPwm
         ___wmul
         ___lwdiv
           ___wmul (ARG)
       _WritePWM2
       _RTS
       _ModPmp1
         _RTdS
         _StartRTdS
         _Twyzsza
         _Tnizsza
     _RglPmp2
       _StartRTS
       _ProcToPmpPwm
         ___wmul
         ___lwdiv
           ___wmul (ARG)
       _WritePWM2
       _RTS
       _ModPmp2
         _RetHI
           ___awdiv
             ___wmul (ARG)
         _RetLO
           ___awdiv
             ___wmul (ARG)
         _RetDelta
           _RetKrkDelta
             _RetHI
               ___awdiv
                 ___wmul (ARG)
             _RetLO
               ___awdiv
                 ___wmul (ARG)
             _RetDelta4
               _RetDelta1
               _RetDelta2
               _RetDelta3
               _RetMax
               _RetMin
                 _RetMax (ARG)
               _RetHI (ARG)
                 ___awdiv
                   ___wmul (ARG)
               _RetLO (ARG)
                 ___awdiv
                   ___wmul (ARG)
             ___wmul
             ___awdiv
               ___wmul (ARG)
           ___awdiv
             ___wmul (ARG)
         _StartRTdS
         _RTdS
         _Twyzsza
         _Tnizsza
     _StartRTS
     _ProcToPmpPwm
       ___wmul
       ___lwdiv
         ___wmul (ARG)
     _WritePWM2
   _ZmienKCOKCW
     _StartRTdS
     _RTdS
   _Wylacz
     _StartRTS
     _RTS
     _RdPrt
   _Rozruch
     _StartRTS
     _RTS
     _RdPrt
     _PrintErr
       _SetData
       _SetStatus
       _SetPoz
     _ErrPTG
       _GrzejOFF
       _VZPauza
         _StartRTS
         _RTS
       _Busy_eep
       _Write_b_eep
       _WritePWM
       _PomiarPCO
         _StartRTdS
         _WritePCO
           _RTdS
           _StartRTdS
           _WriteEEPCO
             _Busy_eep
             _Write_b_eep
         _GetPGD_PCO
           ___wmul
           ___lmul
           ___aldiv
         _SetModPCO
         _ReturnACfromNTC
           _Read_b_eep
       _PomiarPCW
         _StartRTdS
         _WritePCW
           _RTdS
           _StartRTdS
           _WriteEEPCW
             _Busy_eep
             _Write_b_eep
         _SetModPCW
         _ReturnACfromNTC
           _Read_b_eep
       _PomiarPFN
         _ReadEEPFN
           _Read_b_eep
         _StartRTdS
         _WritePFN
           _RTdS
           _StartRTdS
           _WriteEEPFN
             _Busy_eep
             _Write_b_eep
       _PomiarCO
         _ReadAC
         _ReadTabNTC
           _Read_b_eep
       _PomiarCW
         _ReadAC
         _ReadTabNTC
           _Read_b_eep
         _RdPrt
       _PomiarCS
         _ReadAC
         ___wmul
         ___awdiv
           ___wmul (ARG)
       _Proba48
         _StartRTG
         _RTG
       _Proba48Z3
         _StartRTG
         _RTG
       _RefInterfaceData
         _RdPrt
       _RdPrt
       _ToObiegCO
       _ToObiegCW
       _ZmienKCOKCW
         _StartRTdS
         _RTdS
       _Wylacz
         _StartRTS
         _RTS
         _RdPrt
       _VWybieg
         _StartRTS
         _RTS
       _Rusz48
         _StartRTS
         _ToObiegCO
         _RTS
         _ToObiegCW
       _Rusz48Z3
         _ToObiegCW
         _StartRTS
         _RTS
       _KeyRes
         _RdPrt
         _StartRTS
         _RTS
       _ToReset
         _EndErr
           _ResetKol
         _Busy_eep
         _Write_b_eep
         _StartRTS
         _RTS
     _WritePWM
     _GrzejON
     _DecyzjaPLM
       _PrintErr
         _SetData
         _SetStatus
         _SetPoz
       _ErrPTG
         _GrzejOFF
         _VZPauza
           _StartRTS
           _RTS
         _Busy_eep
         _Write_b_eep
         _WritePWM
         _PomiarPCO
           _StartRTdS
           _WritePCO
             _RTdS
             _StartRTdS
             _WriteEEPCO
               _Busy_eep
               _Write_b_eep
           _GetPGD_PCO
             ___wmul
             ___lmul
             ___aldiv
           _SetModPCO
           _ReturnACfromNTC
             _Read_b_eep
         _PomiarPCW
           _StartRTdS
           _WritePCW
             _RTdS
             _StartRTdS
             _WriteEEPCW
               _Busy_eep
               _Write_b_eep
           _SetModPCW
           _ReturnACfromNTC
             _Read_b_eep
         _PomiarPFN
           _ReadEEPFN
             _Read_b_eep
           _StartRTdS
           _WritePFN
             _RTdS
             _StartRTdS
             _WriteEEPFN
               _Busy_eep
               _Write_b_eep
         _PomiarCO
           _ReadAC
           _ReadTabNTC
             _Read_b_eep
         _PomiarCW
           _ReadAC
           _ReadTabNTC
             _Read_b_eep
           _RdPrt
         _PomiarCS
           _ReadAC
           ___wmul
           ___awdiv
             ___wmul (ARG)
         _Proba48
           _StartRTG
           _RTG
         _Proba48Z3
           _StartRTG
           _RTG
         _RefInterfaceData
           _RdPrt
         _RdPrt
         _ToObiegCO
         _ToObiegCW
         _ZmienKCOKCW
           _StartRTdS
           _RTdS
         _Wylacz
           _StartRTS
           _RTS
           _RdPrt
         _VWybieg
           _StartRTS
           _RTS
         _Rusz48
           _StartRTS
           _ToObiegCO
           _RTS
           _ToObiegCW
         _Rusz48Z3
           _ToObiegCW
           _StartRTS
           _RTS
         _KeyRes
           _RdPrt
           _StartRTS
           _RTS
         _ToReset
           _EndErr
             _ResetKol
           _Busy_eep
           _Write_b_eep
           _StartRTS
           _RTS
     _DecyzjaPLM2
       _PrintErr
         _SetData
         _SetStatus
         _SetPoz
       _ErrPTG
         _GrzejOFF
         _VZPauza
           _StartRTS
           _RTS
         _Busy_eep
         _Write_b_eep
         _WritePWM
         _PomiarPCO
           _StartRTdS
           _WritePCO
             _RTdS
             _StartRTdS
             _WriteEEPCO
               _Busy_eep
               _Write_b_eep
           _GetPGD_PCO
             ___wmul
             ___lmul
             ___aldiv
           _SetModPCO
           _ReturnACfromNTC
             _Read_b_eep
         _PomiarPCW
           _StartRTdS
           _WritePCW
             _RTdS
             _StartRTdS
             _WriteEEPCW
               _Busy_eep
               _Write_b_eep
           _SetModPCW
           _ReturnACfromNTC
             _Read_b_eep
         _PomiarPFN
           _ReadEEPFN
             _Read_b_eep
           _StartRTdS
           _WritePFN
             _RTdS
             _StartRTdS
             _WriteEEPFN
               _Busy_eep
               _Write_b_eep
         _PomiarCO
           _ReadAC
           _ReadTabNTC
             _Read_b_eep
         _PomiarCW
           _ReadAC
           _ReadTabNTC
             _Read_b_eep
           _RdPrt
         _PomiarCS
           _ReadAC
           ___wmul
           ___awdiv
             ___wmul (ARG)
         _Proba48
           _StartRTG
           _RTG
         _Proba48Z3
           _StartRTG
           _RTG
         _RefInterfaceData
           _RdPrt
         _RdPrt
         _ToObiegCO
         _ToObiegCW
         _ZmienKCOKCW
           _StartRTdS
           _RTdS
         _Wylacz
           _StartRTS
           _RTS
           _RdPrt
         _VWybieg
           _StartRTS
           _RTS
         _Rusz48
           _StartRTS
           _ToObiegCO
           _RTS
           _ToObiegCW
         _Rusz48Z3
           _ToObiegCW
           _StartRTS
           _RTS
         _KeyRes
           _RdPrt
           _StartRTS
           _RTS
         _ToReset
           _EndErr
             _ResetKol
           _Busy_eep
           _Write_b_eep
           _StartRTS
           _RTS
       _RdPrt
   _VWybieg
     _StartRTS
     _RTS
   _ReloadPlomien
     _RTdS
   _RuszPlomien
     _StartRTS
     _RTS
     _StartRTdS
   _ReloadCiag
     _RTM
     _RTS
   _RuszCiag
     _StartRTS
     _StartRTM
     _RTS
     _RTM
     _PrintErr
       _SetData
       _SetStatus
       _SetPoz
     _ErrPTG
       _GrzejOFF
       _VZPauza
         _StartRTS
         _RTS
       _Busy_eep
       _Write_b_eep
       _WritePWM
       _PomiarPCO
         _StartRTdS
         _WritePCO
           _RTdS
           _StartRTdS
           _WriteEEPCO
             _Busy_eep
             _Write_b_eep
         _GetPGD_PCO
           ___wmul
           ___lmul
           ___aldiv
         _SetModPCO
         _ReturnACfromNTC
           _Read_b_eep
       _PomiarPCW
         _StartRTdS
         _WritePCW
           _RTdS
           _StartRTdS
           _WriteEEPCW
             _Busy_eep
             _Write_b_eep
         _SetModPCW
         _ReturnACfromNTC
           _Read_b_eep
       _PomiarPFN
         _ReadEEPFN
           _Read_b_eep
         _StartRTdS
         _WritePFN
           _RTdS
           _StartRTdS
           _WriteEEPFN
             _Busy_eep
             _Write_b_eep
       _PomiarCO
         _ReadAC
         _ReadTabNTC
           _Read_b_eep
       _PomiarCW
         _ReadAC
         _ReadTabNTC
           _Read_b_eep
         _RdPrt
       _PomiarCS
         _ReadAC
         ___wmul
         ___awdiv
           ___wmul (ARG)
       _Proba48
         _StartRTG
         _RTG
       _Proba48Z3
         _StartRTG
         _RTG
       _RefInterfaceData
         _RdPrt
       _RdPrt
       _ToObiegCO
       _ToObiegCW
       _ZmienKCOKCW
         _StartRTdS
         _RTdS
       _Wylacz
         _StartRTS
         _RTS
         _RdPrt
       _VWybieg
         _StartRTS
         _RTS
       _Rusz48
         _StartRTS
         _ToObiegCO
         _RTS
         _ToObiegCW
       _Rusz48Z3
         _ToObiegCW
         _StartRTS
         _RTS
       _KeyRes
         _RdPrt
         _StartRTS
         _RTS
       _ToReset
         _EndErr
           _ResetKol
         _Busy_eep
         _Write_b_eep
         _StartRTS
         _RTS
     _RdPrt
   _Proba48
     _StartRTG
     _RTG
   _Rusz48
     _StartRTS
     _ToObiegCO
     _RTS
     _ToObiegCW
   _Proba48Z3
     _StartRTG
     _RTG
   _Rusz48Z3
     _ToObiegCW
     _StartRTS
     _RTS
   _BlokadaL3
     _StartRTM
     _SetL3
     _EndL3
       _ResetKol
     _RTM
   _Blokada15S
     _StartRTdS
     _RTdS
   _Moduluj
     _StartCO
       _StartRTdS
     _ReadDataCO
     _ModToCO
       _ClrMod
     _ModZgCO
       _Tnizsza
       _Tmaleje
       _Tstoi
       ___wmul
       ___aldiv
       ___lmul
     _ModDkCO
       _Twyzsza
       ___wmul
     _RTdS
     _StartRTdS
     _IncConstCOCW
       _Tstoi
     _IncMaxCO
       _Trosnie
     _ModPruCO
       _Tmaleje
       _Trowna
       _Trosnie
     _ModPrzCO
       _Twyzsza
     _PropOPT
       _WriteOPWM
         ___wmul
         ___lwdiv
           ___wmul (ARG)
     _StartMCW
       _StartRTdS
       _FirstPCW
         ___awdiv
           ___wmul (ARG)
         ___wmul
         ___aldiv
         ___lmul
       ___awdiv
         ___wmul (ARG)
     _ReadDataCW
     _ModToCW
       _ClrMod
     _ModZgCW
       _Tnizsza
       _Twyzsza
       _Tstoi
       ___wmul
       ___aldiv
       ___lmul
     _ModDkCW
       _Trowna
       _Tnizsza
       ___wmul
     _IncMaxCW
       _Trosnie
     _ModPruCW
       _Tnizsza
       _Tstoi
       _Trosnie
       _Twyzsza
       _Tmaleje
     _ModPrzCW
       _Tnizsza
       ___awdiv
         ___wmul (ARG)
       _Tmaleje
       _Twyzsza
     _PropCO
       _WriteOPWM
         ___wmul
         ___lwdiv
           ___wmul (ARG)
     _StartCO2
       _StartRTdS
     _ReadDataCO2
     _ModToCO2
       _ClrMod2
     _IncConstCO2
       _Tstoi
     _StartMCW2
       _StartRTdS
       _FirstPCW2
     _ReadDataCW2
     _ModToCW2
       _ClrMod2
     _ModZgCW2
       _Tnizsza
       _FirstPCW2
       ___wmul
       ___aldiv
       ___lmul
     _ModDkCW2
       ___wmul
     _IncConstCW2
       _TFrosnie
       _Tstoi
     _IncMaxCW2
       _Trosnie
       _TFrosnie
     _ModPruCW2
       _Tnizsza
       _Trosnie
       _TFrosnie
       _TFmaleje
       _TFstoi
       _Twyzsza
       _Trowna
       _Tstoi
       _Tmaleje
     _ModPrzCW2
       _Tmaleje
       _Twyzsza
       _Tstoi
       _TFmaleje
       _Tnizsza
     _PropCO2
       _WriteOPWM
         ___wmul
         ___lwdiv
           ___wmul (ARG)
     _StartMCO3
       _StartRTdS
     _ModToCO3
     _ModToCW3
       _Tnizsza
     _StartCO4
       _StartRTdS
     _ReadDataCO4
     _ModToCO4
       _ClrMod4
     _IncConstCOCW4
       _Tstoi
     _StartMCW4
       _StartRTdS
     _ReadDataCW4
     _ModToCW4
       _ClrMod4
     _ModZgCW4
       _Tnizsza
       ___wmul
       ___aldiv
       ___lmul
     _ModDkCW4
       ___wmul
     _IncMaxCW4
       _Trosnie
     _ModPruCW4
       _Tnizsza
       _Tstoi
       _Trosnie
       _Twyzsza
       _Tmaleje
     _ModPrzCW4
       ___wmul
       ___lwdiv
         ___wmul (ARG)
       _Tmaleje
       _Twyzsza
       _Tnizsza
       _Tstoi
     _PropCO4
       _WriteOPWM
         ___wmul
         ___lwdiv
           ___wmul (ARG)
   _DetekcjaPrzeplywuWG
     _RdPrt
     _StartRTS
     _RTS
   _OczekujNaPrzeplywWG
     _RdPrt
     _StartRTS
     _RTS
     _PrintErr
       _SetData
       _SetStatus
       _SetPoz
     _ErrPTG
       _GrzejOFF
       _VZPauza
         _StartRTS
         _RTS
       _Busy_eep
       _Write_b_eep
       _WritePWM
       _PomiarPCO
         _StartRTdS
         _WritePCO
           _RTdS
           _StartRTdS
           _WriteEEPCO
             _Busy_eep
             _Write_b_eep
         _GetPGD_PCO
           ___wmul
           ___lmul
           ___aldiv
         _SetModPCO
         _ReturnACfromNTC
           _Read_b_eep
       _PomiarPCW
         _StartRTdS
         _WritePCW
           _RTdS
           _StartRTdS
           _WriteEEPCW
             _Busy_eep
             _Write_b_eep
         _SetModPCW
         _ReturnACfromNTC
           _Read_b_eep
       _PomiarPFN
         _ReadEEPFN
           _Read_b_eep
         _StartRTdS
         _WritePFN
           _RTdS
           _StartRTdS
           _WriteEEPFN
             _Busy_eep
             _Write_b_eep
       _PomiarCO
         _ReadAC
         _ReadTabNTC
           _Read_b_eep
       _PomiarCW
         _ReadAC
         _ReadTabNTC
           _Read_b_eep
         _RdPrt
       _PomiarCS
         _ReadAC
         ___wmul
         ___awdiv
           ___wmul (ARG)
       _Proba48
         _StartRTG
         _RTG
       _Proba48Z3
         _StartRTG
         _RTG
       _RefInterfaceData
         _RdPrt
       _RdPrt
       _ToObiegCO
       _ToObiegCW
       _ZmienKCOKCW
         _StartRTdS
         _RTdS
       _Wylacz
         _StartRTS
         _RTS
         _RdPrt
       _VWybieg
         _StartRTS
         _RTS
       _Rusz48
         _StartRTS
         _ToObiegCO
         _RTS
         _ToObiegCW
       _Rusz48Z3
         _ToObiegCW
         _StartRTS
         _RTS
       _KeyRes
         _RdPrt
         _StartRTS
         _RTS
       _ToReset
         _EndErr
           _ResetKol
         _Busy_eep
         _Write_b_eep
         _StartRTS
         _RTS

 _ISR (ROOT)
   _IntUSARTRC
     _VerifyNDatCHK
       _SetNDatCHK
   _IntUSARTTR
   _ReloadTimer1
   _IncRTimer
   _IncPmrTimer
   _IncKeyTimer
   _RefreshWSW
     _KolProc
     _SetPrWswData
     _FormatWswData
       i2___lbdiv
       ___lbmod
       _Swbty
       _Rwbty
     _PrintWswData
   _StabPort
     i2_RefStan
   _FormatDataIMY
     i2_RdPrt
     _BitSet
       i2_RdPrt (ARG)
   _IntPWM
   _IntPWM2
   _I2CSlaveTR
     _SetTData
       i2_RdPrt
     _LiczCHK
     _SetRData
     _ReceptDataI2C
       _LiczCHK
       _ToWork
     _TransmitDataI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     12      58      11       34.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100      F      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      3     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      D      A0       5      100.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     26      42       1       69.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       F       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     339      32        0.0%
DATA                 0      0     348       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.12 build 49521 
Symbol Table                                                                                   Wed Mar 20 14:05:15 2013

                  LiczCHK@chk 0006                    ModDkCW@ada 00F8                    FirstPCW@p2 02F2  
                           _M 0060                   IntPWM@btOsc 0210                   __CFG_CP0$ON 000000  
                 __CFG_CP1$ON 000000                   __CFG_CP2$ON 000000                   __CFG_CP3$ON 000000  
              StartRTdS@Index 001E                            PL2 235E                            PL4 237A  
                          PL6 23B2                            PL8 23C6                   FirstPCW@tmp 02F0  
         __end_of_DecyzjaPLM2 9BF8                            _DA 007E3D                            l46 9AC2  
                          _Gd 0176                            _RW 007E3A                            _Mn 015C  
                          _Sk 0100                  ___awdiv@sign 00F8                            _ky 0275  
         _OczekujNaPrzeplywWG 992A          __size_of_RuszPlomien 0064           ___wmul@multiplicand 0020  
         __size_of_I2CSlaveTR 005A                    RdPrt@Index 001F                           PL10 40D0  
                         PL20 458E                           PL12 454C                           PL30 2AB4  
                         PL22 437C                           PL14 2412                           PL40 61A4  
                         PL32 2AC6                           PL24 2A6E                           PL16 2440  
                         PL50 249E                           PL42 70D0                           PL34 2468  
                         PL26 2A98                           PL18 2458                           PL60 45EE  
                         PL52 40F2                           PL44 45C8                           PL36 67EC  
                         PL28 40E2                           PL70 84EE                           PL62 55E4  
                         PL54 4F04                           PL46 248A                           PL38 4876  
                         PL80 8FCC                           PL72 660E                           PL64 27B6  
                         PL56 24AC                           PL48 61C0                           PL90 83EC  
                         PL82 27CC                           PL74 4F26                           PL66 82EC  
                         PL58 65EC                           PL92 24CA                           PL84 2DE6  
                         PL76 61DA                           PL68 2DD0                           PL94 2DFC  
                         PL86 24BC                           PL78 8BB2                           PL96 5610  
                         PL88 55FA                           PL98 27E2                           l602 49C2  
                         l603 49EC                           l605 4A06                           l712 8034  
                         l721 80E0                           l801 3482                           l810 356C  
                         l811 3554                           l803 34A8                           l813 34E8  
                         l805 34C0                           l902 2F2A                           l814 3526  
                         l582 48CC                           l911 2FA2                           l823 353C  
                         l664 642E                           l744 6830                           l672 7622  
                         l728 80F4                           l912 2FC8                           l816 34F0  
                         l584 48BC                           l665 6436                           l753 688A  
                         l673 7616                           l921 302A                           l833 3608  
                         l817 3506                           l746 682A                           l682 765A  
                         l850 35F2                           l842 35DC                           l834 35A8  
                         l667 6442                           l755 68B6                           l691 76E2  
                         l675 75E6                           l843 35C2                           l835 359E  
                         l684 768E                           l676 75F6                           l916 2FEE  
                         l908 2F6C                           l588 48E6                           l757 68B0  
                         l685 7674                           l677 75FC                           l694 76F0  
                         l686 767C                           l678 760E                           l934 309A  
                         l926 3078                           l782 33FA                           l759 68D8  
                         l951 3142                           l599 4978                           _CKE 007E3E  
                         l696 7712                           l688 76BE                           l952 3144  
                         l856 362C                           l769 6988                           l953 325C  
                         l698 7728                           l962 31AA                           l954 316A  
                         l874 2E4E                           l858 3610                           l939 30BC  
                         l883 2EBA                           l779 3460                           l964 31D8  
                         l877 302E                           l966 31D2                           l958 318E  
                         l894 2ED0                           l798 34DC                           l983 3220  
                         l799 348E                           l992 3262                           l976 31FE  
                         l968 31EC                           l994 327E                           l898 2F04  
                         _CKP 007E34                           l987 3236                           l979 320C  
                         _KL0 104C                           _KL1 1058                           l998 328E  
                         _KL2 1064                           _KL3 1070                           _BOR 007E80  
                         _DWD 02BB                           _PR2 000FCB                           _PFN 01BA  
                         _ISR 0008                           _PMP 0038                           _POR 007E81  
                         _RX9 007D5E                           _PWD 024D                           _SMP 007E3F  
                         _RTG AF12                           _TX9 007D66                           _PWM 0093  
                         _RTM AE7A                           _RTS AF5E                           _Klj 1044  
                         _dSk 0120                           _rgl 0027                           _wff 0241  
                         _mux 0212                           _tmr 003F                           _zmn 0041  
                  _DecRozruch 741E                           _zps 01FC          __size_of_Write_b_eep 003A  
                __CFG_BORV$27 000000     __size_of_AllKolToFirstPoz 0024                           prod 000FF3  
                         wreg 000FE8                  __CFG_IESO$ON 000000               __end_of_KL0_OUT 1088  
             __end_of_KL1_OUT 1094               __end_of_KL2_OUT 10A0               __end_of_KL3_OUT 10AC  
                        PL100 7C86                          PL110 4F38                          PL102 6206  
                        PL200 1FC8                          PL120 7B62                          PL112 24DC  
                        PL104 622C                          PL210 8310                          PL202 6B8A  
                        PL130 1FBA                          PL122 7B70                          PL114 6250  
                        PL106 7C98                          PL220 A3F6                          PL212 8E1A  
                        PL204 4610                          PL140 7A14                          PL132 AE92  
                        PL124 AF76                          PL116 7B46                          PL108 6620  
                        PL230 2B08                          PL222 5844                          PL214 6B98  
                        PL206 8404                          PL150 2AEE                          PL142 6B6A  
                        PL134 7DC0                          PL126 AF2A                          PL118 7B54  
                        PL240 53EC                          PL232 85BC                          PL224 7A22  
                        PL216 583A                          PL208 27F6                          PL160 19FA  
                        PL152 8AF0                          PL144 19EC                          PL136 7FEE  
                        PL128 AFC2                          PL242 51B2                          PL234 5C74  
                        PL226 7CAC                          PL218 6BA6                          PL170 93E4  
                        PL162 8302                          PL154 AB24                          PL146 3E80  
                        PL138 8AE0                          PL244 5E7E                          PL236 4F72  
                        PL228 4398                          PL180 6632                          PL172 8AFE  
                        PL164 4F4A                          PL156 A0A2                          PL148 90C6  
                        PL246 4114                          PL238 6642                          PL190 2AF8  
                        PL182 606E                          PL174 9844                          PL166 740A  
                        PL158 90DC                          PL192 644C                          PL184 6B7A  
                        PL176 8B10                          PL168 4F5E                          PL194 7EE6  
                        PL186 69C8                          PL178 8CE8                          PL196 1A08  
                        PL188 4104                          PL198 69D8                  __CFG_LVP$OFF 000000  
                        ?_ISR 0001                          ?_RTG 0001                          ?_RTM 0001  
                        ?_RTS 0001                          l1003 32B2                          l1020 3340  
                        l1012 32DA                          l1014 32F6                          l1023 3342  
                        l1009 32CE                          l1026 3352                          l1043 AC86  
                        l1203 37D4                          l1131 7528                          l1107 74AE  
                        l1019 332E                          l1060 9AEE                          l2012 6F88  
                        l2004 6F70                          l2101 7E3E                          l1070 9AF8  
                        l2014 6F9C                          l2006 6F56                          l1047 AC96  
                        l1056 9ACC                          l2112 7E5A                          l2114 7E70  
                        l2026 7000                          l1314 9CF2                          l1403 9BE0  
                        l1163 36A6                          l2220 9510                          l2052 7044  
                        l1340 5626                          l1244 38A4                          l1084 7420  
                        l2117 7E82                          l1334 B104                          l2118 7E86  
                        l2054 7054                          l1406 9BB4                          l2135 AC22  
                        l3007 8732                          l2207 A664                          l2127 7EBC  
                        l2071 70B6                          l1239 3864                          l3008 872E  
                        l2208 A67C                          l2064 7080                          l1408 9BBE  
                        l1352 568C                          l1168 36E2                          l2080 A9C8  
                        l2137 AC1E                          l2209 A678                          l2145 9436  
                        l2129 7ECE                          l3026 2C8A                          l2242 A514  
                        l2226 953A                          l2074 70C6                          l2066 7092  
                        l1362 56EC                          l2082 A9C4                          l3203 A7D8  
                        l2155 9432                          l2251 72B4                          l2067 7094  
                        l1291 95FC                          l1363 56E6                          l3204 A7DC  
                        l3140 4156                          l1460 4BF6                          l2236 A4E0  
                        l1284 95D8                          l1612 7926                          l1453 4BD6  
                        l1437 4B50                          l2069 70A6                          l1293 9622  
                        l1285 95E6                          l3054 2C40                          l3118 82B4  
                        l1710 A0C4                          l2238 A4EC                          l1518 97A8  
                        l1390 57E2                          l1358 569C                          l1198 3796  
                        l3143 41B4                          l2335 6C86                          l1439 4B5C  
                        l2087 7E12                          l1287 9616                          l3320 5522  
                        l3144 41B8                          l3136 431A                          l3072 2D5E  
                        l1720 ACB8                          l1456 4BE4                          l2192 929A  
                        l2256 72CE                          l2096 7E20                          l1376 5780  
                        l3137 413A                          l1713 A0D8                          l2249 72DE  
                        l2089 7E00                          l1289 95F0                          l3154 427E  
                        l1714 A0F0                          l1458 4BF0                          l2098 7E2C  
                        l1634 A226                          l1378 5766                          l3315 5576  
                        l3235 B546                          l1707 A0BE                          l3404 A6BA  
                        l1900 3ECE                          l1652 8506                          l1572 7D96  
                        l2276 73C8                          l4205 9888                          l3333 55B8  
                        l3261 5354                          l3405 A6BE                          l3093 2DA0  
                        l3077 2CF8                          l1557 7D3A                          l2285 7406  
                        l2277 73CA                          l1733 58CC                          l1397 B0DA  
                        l1389 57D8                          l4222 8BD2                          l4206 987C  
                        l3262 5396                          l1910 3F5C                          l1494 4CE8  
                        l2198 92CA                          l2278 73D8                          l4231 8D0A  
                        l4311 4ECE                          l4303 4E96                          l3415 AB48  
                        l3271 89D6                          l3263 53E0                          l1559 7D38  
                        l2199 92DE                          l1399 B0E2                          l3272 89D2  
                        l3264 53E4                          l3248 51C6                          l1904 3F08  
                        l1680 A5A0                          l1752 590C                          l1744 58B2  
                        l1736 58A8                          l1584 9B6E                          l4321 98EE  
                        l4209 98B2                          l1497 4CF6                          l1753 5922  
                        l4322 98E2                          l3290 54B4                          l3258 5262  
                        l3514 258E                          l2570 475C                          l2562 4642  
                        l1922 3FCA                          l2634 B210                          l3531 26FA  
                        l3443 B538                          l1499 4CFE                          l4316 4EF0  
                        l2572 479E                          l2564 4684                          l1916 3F96  
                        l1748 58D6                          l4309 4ED2                          l4325 991C  
                        l4181 6558                          l4173 651E                          l3541 26A6  
                        l3437 B38C                          l2573 47E0                          l2565 46C6  
                        l1685 A5B0                          l1757 5A32                          l1749 58DC  
                        l3470 515C                          l2574 4822                          l2566 4708  
                        l1918 3F90                          l1766 5982                          l1758 5938  
                 GoldenEye@dt 0025                          l3375 81F2                          l3471 51A6  
                        l1767 5996                          l1759 594C                          l2807 3ABA  
                        l4272 4DA2                          l4192 65BA                          l3480 892A  
                        l3472 51AA                          l4600 9006                          l1928 4024  
                        l3297 5468                          l3561 278A                          l2841 5A9E  
                        l1777 59D2                          l1769 59A8                          l4290 4E34  
                        l4266 4D7E                          l4194 65B6                          l4186 657E  
                        l3466 5028                          l2850 5C68                          l1778 59DE  
                        l4354 AAF4                          l4267 4D82                          l4179 655C  
                        l2595 7FE8                          l3627 A6F0                          l2851 5C6C  
                        l2931 A7A0                          l1779 59F2                          l4700 284C  
                        l4268 4D90                          l2596 7FEA                          l3628 A6F4  
                        l2932 A7A4                          l1796 A9F2                          l2941 43F4  
                        l2589 7FAC                          l3469 511A                          l2845 5AEA  
                        l1957 8D9E                          l1949 40CA                          l4349 AADE  
                        l5414 AD3C                          l5342 A1AE                          l1798 A9FE  
                        l4199 65D8                          l2951 44C4                          l3479 892E  
                        l4720 296C                          l4296 4E74                          l2848 5BDC  
                        l2953 44D2                          l2945 4454                          l2849 5C1E  
                        l4650 5F5E                          l4298 4E70                          l3498 25E2  
                        l2858 87DE                          l1898 3ED4                          l1994 933E  
                        l4715 2966                          l2875 7C80                          l2859 87DA  
                        l1979 8EE2                          l4716 293A                          l2956 4524  
                        l2868 7B94                          l1996 9356                          l4820 1D1C  
                        l4812 1C42                          l4804 1C26                          l4813 1C3C  
                        l4805 1BEC                          l2886 7C48                          l2878 7BF0  
                        l1999 9376                          l4807 1BFE                          l2976 B52A  
                        l4816 1C4C                          l2993 5CF4                          l4809 1C08  
                        l5378 A366                          l4914 A72E                          l3946 B2F0  
                        l4834 1E18                          l4843 1EA8                          l5388 A612  
                        l2996 5DE6                          l4836 1E14                          l2997 5E28  
                        l4845 1E4C                          l4837 1E2A                          l3966 A47E  
                        l2998 5E72                          l2999 5E76                          l4839 1E24  
                        _ADIE 007CEE                          l4848 1E92                          l4697 2A5E  
                        _ADFM 007E07                          l4794 1F94                          l4876 1F8A  
                        l4885 B652                          l4869 1F66                          l4878 1FB4  
                        _ADON 007E10                          _CHS0 007E12                          _CHS1 007E13  
                        _CHS2 007E14                          _CHS3 007E15                          _GIEH 007F97  
                        _BRGH 007D62                          _GIEL 007F96                          _CREN 007D5C  
             _KolejkaPobudzen 75B4                          _CSRC 007D67                    _GetPGD_PCO 607E  
                        _IPEN 007E87          ?_OczekujNaPrzeplywWG 0001                          _RCIE 007CED  
                        _RCIF 007CF5                    ModPmp1@pdw 00F5                          _SCS0 007E98  
                        _SCS1 007E99                          _RCIP 007CFD                    ModPmp1@tim 00F4  
                  ModPmp2@pdw 034D                    ModPmp1@pup 00F6                    ModPmp2@tim 034C  
                  ModPmp2@pup 034E                          _RX9D 007D58                          _UADt 017C  
                        _TMR2 000FCC                          _WCOL 007E37                          _SPEN 007D5F  
                        _TX9D 007D60                          _KInd 0185                 StartKeyTim@ky 001E  
                        _DtCO 00E4                          _DtCS 0031                          _DtCW 00CF  
                        _DtIN 0136                          _TXIE 007CEC                          _TXIF 007CF4  
                        _TXEN 007D65                          _SYNC 007D64                          _TXIP 007CFC  
    __size_of_PredkoscZmianCW 008A                          _KTim 016A                          _DtZW 0181  
                        _RTdS AFAA                 _FormatDataIMY 10B0                  __CFG_WRT0$ON 000000  
                __CFG_WRT1$ON 000000                _DecyzjaAntyLeg 8008                  __CFG_WRT2$ON 000000  
                __CFG_WRT3$ON 000000                 ??_InitDataPmr 001E                 __CFG_FCMEN$ON 000000  
                        _Znak 1034                  __CFG_WRTC$ON 000000                  ReadAC@chanel 001F  
                        _main 4888               __end_ofi2_RdPrt B208                          _tmr2 01B9  
                        fsr1h 000FE2                          fsr2h 000FDA                 ??_ReadDataCO2 001E  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
               ??_ReadDataCO4 001E                          fsr2l 000FD9                          _wbty 0192  
               ??_ReadDataCW2 001E                 ??_ReadDataCW4 001E                    ModPruCW2@k 00F4  
                  ModPruCW2@l 0196                    ModPruCW2@m 0197                    ModPruCW2@o 0198  
                  ModPruCW2@p 0199                    ModPruCW2@q 019A                    ModPruCW2@r 019B  
                  ModPruCW4@k 00F4                    ModPruCW2@s 019C                    ModPruCW4@l 019D  
                  ModPruCW4@m 019E                          _xxky 0298                    ModPruCW4@o 019F  
                  ModPruCW4@p 01A0                    ModPruCW4@q 01A1                    ModPruCW4@s 01A2  
         __end_of_IncConstCO2 B53C           __end_of_IncConstCW2 B390                          prodh 000FF4  
                        prodl 000FF3                    ModPrzCW4@p 00FC                          start 00F2  
             __end_of_ClrMod2 B558               __end_of_ClrMod4 B3BC           __end_of_IncKeyTimer 8AE0  
                  _DecyzjaPLM B0C8                 ??_ReadTabZNTC 0020               __end_of_IntPWM2 AFF6  
             __end_of_VZPauza ACE0               __end_of_InitI2C ADB6               __end_of_ModDkCO 87E4  
             __end_of_LiczCHK 9DE0               __end_of_ModDkCW 8738                    _EndTestScr AD64  
                  _Blokada15S A290               __end_of_InitPWM A81E               __end_of_FrsStan 7282  
             __end_of_ModToCO B572               __end_of_ModToCW B57E               __end_of_ModZgCO 5C74  
             __end_of_ModPmp1 65EC               __end_of_ModPmp2 4F04               __end_of_ModZgCW 5E7E  
              _ReadDataXONLID 2804               __end_of_InitOsc B4E8               __end_of_KolProc 235E  
             __end_of_InitWsw 8BB2                         ??_ISR 0014                         ??_RTG 001E  
             __end_of_RefStan 6D70                         ??_RTM 001E                         ??_RTS 001E  
             __end_of_Nastawa 1034               __end_of_GrzejON B37A               __end_of_RglPmp1 98C0  
             __end_of_RglPmp2 992A               __end_of_SetData B0A6               __end_of_VWybieg 9C5C  
             __end_of_Moduluj 3BFA                 _FormatWswData 8412               __end_of_PmrTim1 B408  
             __end_of_PmrTim2 B41A               __end_of_ToReset B4AA               __end_of_Proba48 AE06  
         __end_of_IncPmrTimer B240                FirstPCW@maxmod 02F3               __end_of_PropCO2 9D80  
             __end_of_PropCO4 9E9C               __end_of_PrintL3 8CE8               __end_of_Tmaleje AA34  
             __end_of_PropOPT B462                         ?_RTdS 0001               __end_of_PrintCO AEEC  
             __end_of_PrintCS ABC6               __end_of_PrintCW ABF6               __end_of_TestScr A88A  
             __end_of_StartCO A7B0                   ModZgCW2@pop 01A9                         l31100 80CE  
                       l31014 9EA2                         l31120 810C                         l31016 9EAC  
                       l40002 39EE                         l31050 8026                         l31026 9ECC  
                       l32012 A156                         l40100 3AEA                         l31060 804E  
                       l32030 A18A                         l31054 803C                         l31038 9EEC  
                       l32024 A16C                         l32008 A5D2                         l40040 3A5C  
                       l41010 648E                         l41002 6470                         l32034 A198  
                       l40050 3A70                         l40018 3A26                         l40026 3A2C  
                       l31090 80B8                         l31066 8060                         l41012 64A2  
                       l40220 97BE                         l40124 3B2A                         l31092 80BE  
                       l41014 64A6                         l40222 97C4                         l40214 97AE  
                       l40046 3A68                         l41112 65E6                         l41024 64D2  
                       l33200 8E04                         l33112 3FEA                         l33104 3FBC  
                       l33008 ACD4                         l40240 994E                         l40144 3B66  
                       l31088 80B0                   ModZgCW4@pop 01AA                         l41034 64F0  
                       l32402 A628                         l33210 8ECC                         l33122 402C  
                       l32410 AEF8                         l40306 6894                         l40234 9942  
                       l40218 97BA                         l40074 3AAC                         l41212 4E4E  
                       l41044 650E                         l41052 6522                         l41108 65DE  
                       l41132 987E                         l33140 407A                         l33108 3FD0  
                       l33060 3EE6                         l33036 B404                         l40420 3C60  
                       l40324 68FE                         l40308 689A                         l40228 97E0  
                       l40172 3BAA                         l40148 3B6E                         l40406 AFB6  
                       l41206 4E38                         l41142 98B6                         l34102 8234  
                       l33302 945C                         l33222 8EEE                         l33150 40B4  
                       l33118 400E                         l33070 3F0E                         l31702 9C32  
                       l40510 91D0                         l40502 3E72                         l40430 3C9A  
                       l40334 6912                         l40246 9960                         l41240 4EB0  
                       l41080 6582                         l34200 2B64                         l34120 826C  
                       l33320 60FC                         l33232 8F04                         l33144 4090  
                       l33136 406C                         l33080 3F46                         l33048 B416  
                       l32424 AF1E                         l40512 91E2                         l40440 3D06  
                       l40416 3C2E                         l32432 AEAC                         l32416 AE86  
                       l40256 9986                         l41410 66DE                         l41322 5F1C  
                       l41306 5EAA                         l41234 4E9A                         l41162 4DBE  
                       l41058 6536                         l34210 2B7C                         l34106 8240  
                       l34050 5CFA                         l33170 8DB0                         l33074 3F22  
                       l33066 3EFA                         l31706 9C4C                         l40522 9254  
                       l40370 69A4                         l40338 691A                         l40346 6942  
                       l40282 685C                         l40274 6844                         l41420 6718  
                       l41500 28E2                         l41340 5FD4                         l41316 5EF2  
                       l41164 4DC2                         l35020 9D5E                         l34300 2C42  
                       l34220 2B94                         l34140 82A6                         l34036 5C96  
                       l33324 6110                         l33164 8DA4                         l33260 8F48  
                       l33244 8F24                         l33084 3F62                         l40524 9266  
                       l40364 6980                         l40292 6870                         l41430 6774  
                       l41510 290E                         l41502 28F2                         l41166 4DCA  
                       l41262 4EF6                         l41086 6598                         l35014 9D4C  
                       l34150 82C4                         l34118 8266                         l34126 827A  
                       l34046 5CC2                         l33342 6116                         l33270 940E  
                       l33182 8DC0                         l33190 8DFC                         l33254 8F3C  
                       l40446 3D2C                         l40198 3BDE                         l41440 67A6  
                       l41520 293E                         l41336 5FB8                         l41168 4DD0  
                       l35200 894C                         l35008 9D38                         l34304 2C4A  
                       l34240 2BC0                         l34224 2B9E                         l34216 2B8E  
                       l34160 82E6                         l34056 5D8A                         l33328 6112  
                       l33248 8F2E                         l33096 3FA2                         l40552 8CA8  
                       l40448 3D38                         l40376 69B2                         _DC1B0 007DEC  
                       _DC1B1 007DED                         l41610 A608                         l41602 A5EA  
                       l41442 67B2                         l41530 2998                         l41354 600A  
                       l36002 8E90                         l40394 AF90                         l41266 4EFE  
                       l41178 4DE8                         l35026 9D72                         l34314 2C78  
                       l34250 2BD8                         l34138 82A0                         l34090 8704  
                       l40802 B174                         l40730 6A02                         l33354 618E  
                       l33266 9402                         l33098 3FA8                         l40562 B3CA  
                       l40554 8CD6                         l40482 3E12                         l40474 3DF4  
                       l40458 3DA4                         l40466 3DCA                         l40386 69C2  
                       l41604 A5F2                         l41540 29CC                         l41356 601E  
                       l41348 5FD6                         l41188 4E04                         l41284 98E4  
                       l35028 9D78                         l34404 2D9A                         l34316 2C7E  
                       l34260 2BEA                         l34228 2BA6                         l34084 86A8  
                       l33292 9444                         l33268 9406                         l33188 8DE4  
                       l31932 8518                         l31692 9C06                         l40628 9BC4  
                       l40492 3E3E                         _DC2B0 007DD4                         _DC2B1 007DD5  
                       l41606 A5F6                         l41550 29F4                         l41366 602E  
                       l41198 4E22                         l33702 7FC2                         l35222 9F78  
                       l35206 89A8                         l35062 A598                         l34502 4300  
                       l34414 2DBE                         l34350 2CCC                         l40750 6A8C  
                       l40742 6A4A                         l40734 6A1A                         l33446 6BD4  
                       l33358 61A2                         l33294 944A                         l33286 9426  
                       l40662 A0E8                         l31686 9BFA                         l31766 A214  
                       l41544 29D8                         l41528 2994                         l41552 2A04  
                       l41480 2886                         l41296 9920                         l35232 9FA4  
                       l34432 413E                         l34416 2DC4                         l34408 2DA8  
                       l34264 2BF4                         l33456 6BEC                         l33296 944E  
                       l40672 A0F6                         l32832 AC8E                         l31944 8538  
                       l31696 9C18                         l32904 9602                         l40488 3E26  
                       l40496 3E50                         l41538 29C8                         l41490 28BA  
                       l41458 281A                         l41378 604C                         l36018 A8F4  
                       l33706 7FD8                         l35330 54F6                         l35234 9FA8  
                       l35218 9F6C                         l35170 5268                         l35162 521E  
                       l34450 41BE                         l34362 2CF2                         l40770 6B14  
                       l40762 6AF4                         l40754 6AB0                         l40746 6A6A  
                       l40738 6A32                         l40666 A0EC                         l32826 9B1E  
                       l31946 8546                         l41556 2A28                         l35500 B5B6  
                       l35148 51E2                         l34380 2D4E                         l34372 2D14  
                       l34268 2BFC                         l40780 6B40                         l33548 AB02  
                       l40692 A9F4                         l32844 ACA0                         l31964 8574  
                       l41590 A920                         l41582 A90C                         l41398 66B2  
                       l41494 28C6                         l41478 2882                         l35350 555C  
                       l35342 551C                         l35254 5418                         l35166 522E  
                       l34702 88A4                         l34526 4368                         l34534 4370  
                       l34462 4218                         l34438 4158                         l34382 2D52  
                       l34366 2D00                         l34278 2C0E                         l34286 2C18  
                       l33822 8754                         l33734 9726                         l33726 96BA  
                       l33718 964E                         l33662 474A                         l40774 6B24  
                       l40766 6B04                         l40758 6AD2                         l31966 8582  
                       l31958 8556                         l37030 59A2                         l37022 597C  
                       l37006 595E                         l41584 A910                         l41488 28B6  
                       l35440 81F8                         l35432 81D0                         l35424 81C8  
                       l35416 818A                         l35352 5560                         l35280 546A  
                       l35176 52F8                         l34560 9E1E                         l34528 436C  
                       l34376 2D1E                         l33912 7BF2                         l31984 859A  
                       l37040 59B6                         l41578 A906                         l41594 A928  
                       l32778 AF6A                         l33690 7F18                         l33682 7F06  
                       l35426 81CC                         l35370 5598                         l35346 552A  
                       l34802 2596                         l34730 9C80                         l34650 4FA8  
                       l34554 9E0E                         l34490 42E4                         l34474 4270  
                       l33922 7C20                         l33850 908E                         l31978 8592  
                       l35508 AA98                         l35612 AB4E                         l35524 B2D2  
                       l35516 B5C2                         l33692 7F1E                         l35356 556A  
                       l35284 5474                         l35268 5444                         l34820 25D6  
                       l34740 9CB6                         l34708 8900                         l34644 4F8C  
                       l34548 9DFC                         l34396 2D80                         l33940 7C4A  
                       l33916 7C12                         l33860 90B4                         l33852 9096  
                       l33828 87B0                         l33780 5A90                         l33676 4864  
                       l40796 B154                         l31988 85A8                         l37300 62C2  
                       l37220 94E8                         l37204 92AE                         l37132 7E40  
                       l37124 7E22                         l38100 2EFC                         l38012 2E32  
                       l35614 AB56                         l35550 445A                         l35534 43F8  
                       l33686 7F0E                         l35470 9E7C                         l35446 820C  
                       l35390 55DC                         l35382 55C0                         l35294 54A2  
                       l34902 26EE                         l34742 9CBA                         l34726 9C74  
                       l34566 9E30                         l34478 4280                         l33918 7C16  
                       l33862 90BA                         l33854 909C                         l37230 94FE  
                       l37118 7E16                         l38022 2E48                         l38014 2E38  
                       l36520 94A8                         l36512 9490                         l35616 AB5C  
                       l35544 45AC                         l35464 9E6C                         l35296 54A8  
                       l34920 2724                         l34808 25A2                         l34672 502E  
                       l34664 4FE4                         l34568 9E36                         l33928 7C2C  
                       l33848 908A                         l33792 5AF0                         l33776 5A80  
                       l37240 9528                         l37224 94F2                         l37208 92B8  
                       l37160 7E8A                         l37152 7E72                         l37144 7E44  
                       l37128 7E30                         l32896 95EA                         l38024 2E4A  
                       l38016 2E3E                         l38008 2E24                         l36530 94C6  
                       l36522 94AC                         l36506 9480                         l35706 A526  
                       l29218 AF44                         l35650 B2F6                         l35642 B5CE  
                       l35634 AA64                         l35626 B2EA                         l35570 44C8  
                       l35554 4464                         l35458 9E5A                         l35378 55B2  
                       l34818 25D0                         l34762 2514                         l33970 A27E  
                       l33946 7C60                         l33890 7BC0                         l37162 7E8E  
                       l32898 95F4                         l39002 383E                         l38042 2E68  
                       l38018 2E42                         l35900 8C40                         l35484 B332  
                       l35660 9572                         l35492 AA30                         l35476 9E8E  
                       l35388 55D6                         l34932 2742                         l34772 253C  
                       l34668 4FF4                         l33980 B45C                         l33972 A284  
                       l33948 7C66                         l33788 5AB8                         l37340 636A  
                       l37236 951E                         l37148 7E5C                         l37172 7E9E  
                       l28700 701C                         l28620 6F74                         l37068 5A02  
                       l38220 3068                         l38132 2F46                         l38116 2F1E  
                       l28380 787E                         l36700 4912                         l36518 94A0  
                       l36534 94D0                         l36470 85FA                         l35662 957C  
                       l35558 4472                         l35478 9E94                         l34854 262C  
                       l34782 255A                         l34678 50BE                         l33886 7BB2  
                       l33878 7BA0                         l33798 5B80                         l37350 6386  
                       l37318 631E                         l37182 7ED0                         l37174 7EB0  
                       l37086 5A1C                         l39014 3846                         l38214 305A  
                       l36630 2F68                         l38142 2F72                         l38118 2F24  
                       l28374 7868                         l36480 8622                         l36464 85E2  
                       l27904 9F3A                         l34944 2764                         l34792 2576  
                       l34784 255E                         l33896 7BC6                         l37328 633E  
                       l27840 A032                         l28800 70BA                         l28640 6FBA  
                       l28632 6FA6                         l28624 6F8A                         l38400 3248  
                       l38320 3188                         l38216 3060                         l38064 2EAE  
                       l38048 2E7C                         l36618 AD48                         l36538 94DC  
                       l35930 8D76                         l35682 95AE                         l35594 453C  
                       l34954 2784                         l34874 2674                         l34866 2654  
                       l37274 A512                         l37258 A4E6                         l37186 7ED8  
                       l37178 7EBE                         l38250 30CA                         l38162 2FBC  
                       l36634 2F9E                         l38154 2FA6                         l38090 2EDE  
                       l38066 2EB4                         l38058 2E9C                         l36626 3690  
                       l37442 1AAE                         l37434 1A9E                         l36706 491E  
             __end_of___aldiv 8684                         l36572 A1C4                         l36476 8612  
                       l36492 865E                         l35916 8D0E                         l35908 8C56  
                       l35692 A45A                         l35588 452A                         l34964 27A8  
                       l34892 26AE                         l37196 9290                         l27836 A022  
                       l28804 70C8                         l28740 7030                         l28660 6FF0  
                       l28652 6FDA                         l28644 6FC6                         l28636 6FB2  
                       l28628 6F9E                         l39116 3908                         l39036 3872  
                       l38500 3360                         l38412 327A                         l38308 3164  
                       l38244 30B0                         l38164 2FC2                         l38148 2F86  
                       l37700 1E52                         l37516 1BD0                         l36708 492E  
                       l36582 A336                         l36478 861E                         l35678 95A4  
                       l35598 4548                         l34966 27AE                         l34958 2792  
                       l28902 72A0                         l27846 A04A                         l39206 76DA  
                       l38502 3368                         l38262 30EC                         l37710 1E70  
                       l36718 495C                         l36726 497A                         l36584 A33E  
                       l36496 8672                         l36488 8650                         l35696 A46C  
                       l34984 A2F6                         l34896 26E0                         l34888 26A0  
                       l36648 B114                         l39312 7D78                         l39304 7D64  
                       l37288 629E                         l27880 A8AC                         l27872 A892  
                       l28744 7046                         l28672 7014                         l28664 7002  
                       l28656 6FE6                         l28648 6FCE                         l36904 8FAA  
                       l39208 76DE                         l39128 391E                         l38520 3396  
                       l38512 3382                         l38504 336E                         l38432 32AC  
                       l38176 2FE2                         l29640 930C                         l37552 1C52  
                       l37560 1C64                         l36594 A35C                         l36586 A342  
                       l35970 A152                         l35938 8D8C                         l34898 26E4  
                       l28922 72FC                         l36930 5892                         l36922 5874  
                       l36906 8FBA                         l39250 AAEE                         l39138 3924  
                       l38610 748E                         l38530 33B2                         l38178 2FE8  
                       l38098 2EF6                         l29650 9340                         l37706 1E60  
                       l37650 1DC2                         l35868 B270                         l34996 A31A  
                       l39500 4CB2                         l39412 4BBE                         l39332 4AE6  
                       l39324 7D9A                         l28940 735E                         l28932 734A  
                       l28748 7056                         l39148 3934                         l38700 750C  
                       l38620 74A2                         l38540 33CE                         l38532 33BA  
                       l38196 301E                         l29660 9368                         l37740 1F14  
                       l37564 1C74                         l37476 1B3E                         l36860 4AC8  
                       l35878 B28A                         l35886 8BD6                         l35982 8E36  
                       l27894 9F12                         l39510 4CBA                         l39406 4BA8  
                       l39270 7CFC                         l28918 72F4                         l28782 7060  
                       l36942 58AC                         l39254 AAF6                         l39174 764A  
                       l39094 38E4                         l38198 3024                         l37830 3444  
                       l37806 33EA                         l29654 9358                         l37734 1EE4  
                       l37638 1D94                         l35992 8E80                         l39440 4C18  
                       l39432 4BF4                         l39344 4B0C                         l39336 4AF0  
                       l39264 7CD6                         l39328 7DAC                         l28944 7366  
                       l28936 7354                         l28784 7074                         l39176 764E  
                       l38480 331A                         l38288 3124                         l37824 3428  
                       l37816 340A                         l37728 1EB4                         l37664 1DDE  
                       l36696 48EE                         l36688 48DA                         l27898 9F22  
                       l39434 4BFC                         l39258 7CB8                         l36954 58BA  
                       l39602 56C8                         l39178 7652                         l38802 758E  
                       l37842 346C                         l37834 345A                         l37762 1F4A  
                       l37674 1DF4                         l37594 1CD6                         l36698 48F2  
                       l35988 8E76                         l39516 4CD0                         l39436 4C0E  
                       l39380 4B78                         l39364 4B3C                         l39348 4B14  
                       l39284 7D1A                         l39276 7D06                         l39268 7CEE  
                       l28972 73B0                         l28796 70A8                         l28788 7082  
                       l39700 57F0                         l39612 56EE                         l39196 76B4  
                       l38660 74E0                         l38580 7458                         l37924 3598  
                       l37828 3434                         l37692 1E2E                         l36892 B212  
                       l39462 4C54                         l39454 4C3A                         l39358 4B26  
                       l39542 4D18                         l28990 73EC                         l28974 73BA  
                       l28958 7390                         l39630 571C                         l39550 5632  
                       l39198 76B8                         l38902 3774                         l38822 36B4  
                       l38814 759A                         l38478 3306                         l37694 1E32  
                       l36878 8B32                         l39456 4C42                         l39384 4B82  
                       l39296 7D48                         l28984 73DA                         l28976 73BE  
                       l39616 56F8                         l38912 3788                         l38592 7474  
                       l38576 7450                         l37856 3488                         l39538 4D06  
                       l39482 4C78                         l39378 4B66                         l39298 7D5A  
                       l28994 73F8                         l36986 592E                         l39722 9B32  
                       l39650 5754                         l39626 5712                         l39554 563E  
                       l38922 37A4                         l38586 7466                         l37698 1E46  
                       l39484 4C8A                         l39468 4C64                         l39396 4BA0  
                       l39804 791A                         l39740 9B68                         l39636 572A  
                       l39580 5680                         l39708 580A                         l38836 36DE  
                       l37964 3642                         l37796 1F8C                         l39902 9CCC  
                       l39814 793E                         l39726 9B3C                         l39662 576E  
                       l38870 372A                         l37974 3654                         l37966 3646  
                       l37798 1FA6                         l39488 4C94                         l39816 7946  
                       l39752 9B7A                         l39672 579E                         l39568 5662  
                       l38864 3716                         l38792 7580                         l37888 3520  
                       l39930 A29C                         l39922 9D14                         l39738 9B62  
                       l39690 57D4                         l39674 57A4                         l39586 5698  
                       l39594 56A4                         l38890 3754                         l37986 367C  
                       _ADCS0 007E00                         _ADCS1 007E01                         l39940 A2D0  
                       l39916 9CFA                         l39908 9CDE                         l39836 7972  
                       l39828 795C                         l39772 78D4                         l39764 78C2  
                       l39668 578E                         l39596 56B6                         l38980 381C  
                       l38876 3738                         _ADCS2 007E02                         l39926 A292  
                       l39846 7984                         l39758 9B88                         l39694 57DC  
                       l37998 369A                         l39944 3952                         l39936 A2B8  
                       l39856 79A2                         l39792 790C                         l38968 3808  
                       l38896 3768                         _ADDEN 007D5B                         l39962 398E  
                       l39874 79D6                         l39964 3996                         ?_main 0001  
                       l39878 79E0                         l39894 79FC                         l39968 399E  
                       l39898 9CC2                         l39998 39E6                  GoldenEye@pop 0024  
                       _ACQT0 007E03                         _ACQT1 007E04                         _ACQT2 007E05  
             __end_of___awdiv 94E6               __end_of_Tnizsza B336               __end_of___lbdiv A92C  
                       _EEADR 000FA9               __end_of___lbmod AE2E               __end_of_Rozruch 583A  
                       _ANSEL 000F7E               ___awdiv@divisor 00F5               __end_of_Trosnie B2D6  
                       _T2CON 000FCA                         _IRCF0 007E9C                         _IRCF1 007E9D  
                       _IRCF2 007E9E               __end_of___lwdiv A370                         u60055 A73A  
                       u60056 A73C                         u71005 6308                         u71007 630C  
                       u62145 6BDC                         u71105 6374                         u62146 6BE0  
                       u71106 6378                         u71035 6328                         u71036 632C  
                       u62405 70E8                         u71205 63EC                         u62415 70F8  
                       u62407 70EC                         u62175 6BF4                         u71215 63F8  
                       u71207 63F0                         u71135 6390                         u62176 6BF8  
                       u71136 6394               __end_of___lwmod A61C                         u62505 7188  
                       u62425 7108                         u62417 70FC                         u71217 63FC  
                       u71145 639C                         u71065 6348                         i2l210 10B2  
                       u71066 634C                         u62515 7198                         u62507 718C  
                       u62435 7118                         u62427 710C                         u62275 6C8E  
                       u71155 63AC                         u71147 63A0                         u71075 6358  
                       i2l220 10DC                         u62276 6C92                         u71076 635C  
                       u63245 5BD2                         u62605 7228                         u62525 71A8  
                       u62517 719C                         u62445 7128                         u62437 711C  
                       u71165 63BC                         u71157 63B0                         i2l214 10C0  
                       i2l231 112E                         u62615 7238                         u62607 722C  
                       u62535 71B8                         u62527 71AC                         u62455 7138  
                       u62447 712C                         u71175 63C8                         u71167 63C0  
                       u71176 63CC                         i2l217 10CE                         u62625 7248  
                       u62617 723C                         u62545 71C8                         u62537 71BC  
                       u62465 7148                         u62457 713C                         u71185 63D4  
                       i2l170 9FFE                         i2l227 1114                         i2l171 9FC6  
                       u62635 7258                         u62627 724C                         u62555 71D8  
                       u62547 71CC                         u62475 7158                         u62467 714C  
                       u71195 63E0                         u71187 63D8                         i2l244 14D8  
                       i2l245 1558                         i2l237 140C                         i2l173 9FF0  
                       u62645 7268                         u62637 725C                         u62565 71E8  
                       u62557 71DC                         u62485 7168                         u62477 715C  
                       u71197 63E4                         i2l174 9FE4                         i2l255 15DC  
                       u62655 7278                         u62647 726C                         u62575 71F8  
                       u62567 71EC                         u62495 7178                         u62487 716C  
                       i2l248 150C                         i2l336 0098                         i2l169 9FB8  
                       u62657 727C                         u62585 7208                         u62577 71FC  
                       u62497 717C                         i2l186 A95A                         i2l275 196E  
                       i2l187 A94A                         i2l339 00C8                         u62595 7218  
                       u62587 720C                         u61955 60F8                         i2l188 A94E  
                       u62597 721C                         u70925 62A8                         u70926 62AC  
                       u63745 5DDC                         u65275 5110                         u61995 618A  
                       u68020 8C14                         u70965 62CC                         u67230 B2CE  
                       u70966 62D0                         u70975 62DC                         u70976 62E0  
                       u66425 534A                         u70985 62EC                         u70986 62F0  
                       u70995 62FC                         u68060 8D4C                         u67180 B32E  
                       u70996 6300                         u74700 3242                         u47965 9A6C  
                       u67325 44BC                         u47966 9A72                         u47975 9A82  
                       u47976 9A88                         u47985 9A9C                         u47986 9AA2  
                       u67450 B2E6                         u47995 9ABA                         u47996 9AC0  
             ___awdiv@counter 00F7                         u67285 444C                         u67375 451C  
                       u69510 491A                         _VCFG0 007E0C                         _VCFG1 007E0D  
                       _RCREG 000FAE                         u69506 48F8                         u69625 4A12  
                       u69626 4A16                         u69595 49CE                         u69596 49D2  
                       _PLLEN 007CDE                   ModPmp1@ppwm 00F7                         _TMR1H 000FCF  
                       _TMR1L 000FCE                         _RSDT1 0200                         _SPBRG 000FAF  
                       _PORTA 000F80                         _PORTB 000F81                         _PORTC 000F82  
                       _DtI2C 01DD                         _PORTD 000F83                   ModPmp2@ppwm 034F  
                       _PORTE 000F84                         _SSPM0 007E30                         _SSPM1 007E31  
                       _SSPM2 007E32                         _SSPM3 007E33                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _SSPIE 007CEB                         _TRISE 000F96                         _SSPIF 007CF3  
                       _SSPEN 007E35                         _SSPIP 007CFB                         _DtKNF 014A  
                  RetDelta4@d 02F5                         _SSPOV 007E36                         _TXREG 000FAD  
                       _EndL3 B5D2                         _EndCS B2A6                         _EndCW B34E  
             __end_of_Twyzsza AA9C           ___lmul@multiplicand 0022                         _SPort 00B5  
               ??_NastawaCOCW 00FD                         _RdPrt B108                         _RldT1 10AC  
                       _RetHI 8BC0                         _SetL3 B640                         _RetLO 8CF6  
                 ModParam@tpg 0020                   ModParam@tpk 0022                         _Rwbty B1C8  
                       _Swbty B1A8                Read_b_eep@badd 001E                         _Tstoi B5AE  
                       _WswOn B66A                   ReadTabNTC@i 0022        Write_b_eep@GIE_BIT_VAL 0021  
      __end_of_DecyzjaAntyLeg 8118                 ??_ResBufKeyEx 0020         ??_OczekujNaPrzeplywWG 00FD  
                  _IntUSARTRC 937A                    _IntUSARTTR A370                         _wsdid 0040  
              ?_FormatDataIMY 0001                __pbitbssCOMRAM 0210            __size_ofi2_RefStan 01BE  
                       tablat 000FF5          __end_of_IncConstCOCW B52E                   ModPruCO@tmp 00F3  
                  SetDiode@wd 0020                   ModPruCW@tmp 00F3                         status 000FD8  
             ___lbdiv@divisor 001E                  __end_ofPL100 7C98                  __end_ofPL110 4F4A  
                __end_ofPL102 622C                  __end_ofPL200 1FD4                  __end_ofPL120 7B70  
                __end_ofPL112 24F0                  __end_ofPL104 6250                  __end_ofPL210 831E  
                __end_ofPL202 6B98                  __end_ofPL130 1FC8                  __end_ofPL122 7B7E  
                __end_ofPL114 626E                  __end_ofPL106 7CAC                  __end_ofPL220 A402  
                __end_ofPL212 8E28                  __end_ofPL204 461C                  __end_ofPL140 7A22  
                __end_ofPL132 AEA0                  __end_ofPL124 AF84                  __end_ofPL116 7B54  
                __end_ofPL108 6632                  __end_ofPL230 2B0E                  __end_ofPL222 584E  
                __end_ofPL214 6BA6                  __end_ofPL206 8412                  __end_ofPL150 2AF8  
                __end_ofPL142 6B7A                  __end_ofPL134 7DDA                  __end_ofPL126 AF38  
                __end_ofPL118 7B62                  __end_ofPL240 53F4                  __end_ofPL232 85C6  
                __end_ofPL224 7A2C                  __end_ofPL216 5844                  __end_ofPL208 2804  
                __end_ofPL160 1A08                  __end_ofPL152 8AFE                  __end_ofPL144 19FA  
                __end_ofPL136 8008                  __end_ofPL128 AFD0                  __end_ofPL242 51BA  
                __end_ofPL234 5C7C                  __end_ofPL226 7CB6                  __end_ofPL218 6BB2  
                __end_ofPL170 93F6                  __end_ofPL162 8310                  __end_ofPL154 AB32  
                __end_ofPL146 3E98                  __end_ofPL138 8AF0                  __end_ofPL244 5E86  
                __end_ofPL236 4F7A                  __end_ofPL228 43A2                  __end_ofPL180 6642  
                __end_ofPL172 8B10                  __end_ofPL164 4F5E                  __end_ofPL156 A0B0  
                __end_ofPL148 90DC                  __end_ofPL246 4122                  __end_ofPL238 664A  
                __end_ofPL190 2B08                  __end_ofPL182 607E                  __end_ofPL174 9856  
                __end_ofPL166 741E                  __end_ofPL158 90EA                  __end_ofPL192 645C  
                __end_ofPL184 6B8A                  __end_ofPL176 8B22                  __end_ofPL168 4F72  
                __end_ofPL194 7EF6                  __end_ofPL186 69D8                  __end_ofPL178 8CF6  
                __end_ofPL196 1A16                  __end_ofPL188 4114                  __end_ofPL198 69E6  
             ___lbdiv@counter 0020              __end_of_TFmaleje AA68            __size_ofi2___lbdiv 0036  
    __end_of_RefInterfaceData 644C                   _DecyzjaPLM2 9B94                 ??_RetKrkDelta 0026  
                  _ReadDataCO B5E6                    _ReadDataCW B462                    _InitGlobal B622  
      __end_of_ReadDataXONLID 2A6E              __end_of_IncMaxCO 90C6              __end_of_IncMaxCW 82EC  
              __CFG_MCLRE$OFF 000000                  __end_of_RTdS AFC2              __end_of_TFrosnie B2EE  
             __initialization A490           __end_of_InitDataPmr A854                    _ReadTabNTC A008  
          __size_of_DecWylacz 02AC                    _InitTimer1 B240                  __end_of_Znak 1044  
                 MocStart@nst 00FD                  MocMaksCO@nst 00FD                   MocStart@tmp 00FB  
                MocMaksCO@tmp 00FB                _TrybPracy$5565 00F5              __end_of_ModDkCW2 8934  
              _TrybPracy$5566 00F6              __end_of_ModDkCW4 89DC                  __end_of_main AE2E  
            __end_of_FirstPCW 454C            __size_of_RdEEParam 0178                  MocMaksCW@nst 00FD  
                MocMaksCW@tmp 00FB           __end_of_ReadDataCO2 B5FA           __end_of_ReadDataCO4 B604  
         __end_of_ReadDataCW2 B486           __end_of_ReadDataCW4 B498                ?_FormatWswData 0001  
            __end_of_ModToCO2 B58A              __end_of_ModToCO3 B652              __end_of_ModToCO4 B5A2  
            __end_of_ModToCW2 B596              __end_of_ModToCW3 A59E              __end_of_ModToCW4 B5AE  
            __end_of_ModZgCW2 51B2              __end_of_ModZgCW4 53EC                    _Read_b_eep B306  
            __end_of_ModParam 4876              __end_of_InitUart AACE              __end_of_InitPort B084  
            __end_of_Busy_eep B658              __end_of_ModPruCO 7C86              __end_of_ModPruCW 2DD0  
          __size_of_EndClsScr 0008              __end_of_ModPrzCO A290              __end_of_ModPrzCW 437C  
          __size_of_ClearData 00A8              __end_of_MocStart 96AA                        ??_RTdS 001E  
            __end_of_GrzejOFF B108              __end_of_RetDelta A8F6              __end_of_SetRData B65E  
            __end_of_SetTData 9170                 SetPrWswData@i 0002              __end_of_SetDiode B3D0  
         __end_of_ReadTabZNTC 9F54                    _SetNDatCHK AC26                    _ExxPresKey 664A  
                      ??_main 02FE  __size_of_DetekcjaPrzeplywuWG 006A               RestartKol@nrkol 001E  
          __size_of_BlokadaL3 0060                 __activetblptr 000003              __end_of_ResetKol B168  
            __end_of_PomiarCO 70D0              __end_of_PomiarCS 740A              __end_of_PomiarCW 7EE6  
            __end_of_PomiarIN A9CC                   ?_DecRozruch 0001              __end_of_PomiarZW AC26  
                      ?_EndL3 0001            __size_of_IncMaxCW2 0064            __size_of_IncMaxCW4 005A  
                      ?_EndCS 0001                        ?_EndCW 0001       __end_of_KolejkaPobudzen 7744  
       __end_of_RestartFltPrt A778              __end_of_PrintOFF AC84            __size_of_IncRTimer 011A  
            __end_of_StabPort 83EC                _ReadParam$5559 0351        __size_of_ReceptDataI2C 0032  
            __end_of_PrintErr 8FCC                        ?_RdPrt 0001                        ?_RetHI 0024  
                      ?_SetL3 0001                        ?_RetLO 0024            __size_of_FltParMod 008E  
            __end_of_StartCO2 A6CC              __end_of_StartCO4 A7E8              __end_of_StartMCW 9844  
                      ?_Rwbty 0001              __end_of_StartRTG AF12                        ?_Swbty 0001  
            __end_of_StartRTM AEC6              __end_of_StartRTS AF5E              __end_of_Rusz48Z3 A1A4  
                      ?_Tstoi 0001                        ?_WswOn 0001                     ??i2_RdPrt 0001  
          __size_of_FirstPCW2 0032                        _ADRESH 000FC4                        _EEADRH 000FAA  
                      _EEDATA 000FA8                        _CCPR1H 000FBF                        _CCPR2H 000FBC  
                      _CCPR1L 000FBE                        _CCPR2L 000FBB                        _EECON2 000FA7  
                 _IncConstCO2 B52E                   _IncConstCW2 B37A               ?_DecyzjaAntyLeg 0001  
            ___awdiv@dividend 00F3              __end_of_RuszCiag 7A14                    PresKeyEX@k 0025  
                  _RefreshWSW B4CA                    _ReloadCiag A1F4                        _ANSELH 000F7F  
                ??_I2CSlaveTR 0009                   SetNDatCHK@a 0004                   SetNDatCHK@b 0005  
                 SetNDatCHK@d 0006            __size_of_ReadEEPFN 000A              __end_of_WritePCO B01A  
            __end_of_WritePFN B148                   ExxPresKey@k 0026              __end_of_WritePCW B03E  
                      _T1RD16 007E6F              __end_of_WritePWM B3F6                        _KL0_FC 01F4  
                 ?_GetPGD_PCO 0001                        _KL0_AP 107C                        _KL1_FC 01F6  
                      _KL1_AP 1088                        _KL0_FP 1080                        _KL2_FC 01F8  
                      _KL2_AP 1094                        _KL1_FP 108C                        _KL3_FC 01FA  
                      _KL3_AP 10A0                        _KL2_FP 1098            __size_of_GoldenEye 0238  
                      _GODONE 007E11                        _KL3_FP 10A4                        _KL0_WP 1052  
                      _KL1_WP 105E                        _KL2_WP 106A                        _KL3_WP 1076  
                  PomiarCS@cs 00FC                        i2l2335 6E44                        i2l4042 93DA  
                      i2l2347 832A                        i2l4052 A37A                        i2l2614 A410  
                      i2l4038 939A                        i2l2616 A422                        i2l4056 A3B2  
                      i2l2625 AFE0                        i2l2618 A434                        i2l4501 8436  
                      i2l4502 8476                        i2l4503 846E                        i2l4520 84D8  
                      i2l4506 8494                        i2l4531 89FC                        i2l4527 89E8  
                      i2l4519 84CC                        i2l4528 89EC            __size_of_MocMaksCO 006C  
                 _IncKeyTimer 8A82            __size_of_MocMaksCW 006C                     ??_ClrMod2 001E  
                   ??_ClrMod4 001E           __end_of_NastawaCOCW 69C8                        _TMR0IE 007F95  
                      _TMR0IF 007F92                        _TMR1IE 007CE8                        _TMR1IF 007CF0  
                      _TMR1CS 007E69                        _TMR2IE 007CE9                __CFG_WDTPS$128 000000  
                      _TMR2IF 007CF1                        _TMR1IP 007CF8                        _TMR1ON 007E68  
                      _TMR2ON 007E52                        _SSPADD 000FC8                        _TRISC3 007CA3  
                      _TRISC4 007CA4                        _DecERR 2E10                        _SSPBUF 000FC9  
          __size_of_ModPruCW2 02C6            __size_of_ModPruCW4 01F0            __size_of_ReadParam 0286  
                 RetDelta2@kD 0020                        _DecSTR 3110            __size_of_ModPrzCW2 004A  
          __size_of_ModPrzCW4 0104                        _DecWSW 33E2                   RetDelta1@hi 001E  
                   ??_IntPWM2 0001                   RetDelta4@hi 01FE                   RetDelta3@lo 001E  
                   ??_VZPauza 001F                   RetDelta4@lo 01FF                     ??_InitI2C 001E  
                   ??_ModDkCO 00F3                     ??_LiczCHK 0001                     ??_ModDkCW 00F3  
                      _BufI2C 02D7                        _EndOFF B28E                        _EnKonf B632  
                   ??_InitPWM 001E                    _SetRozruch ADB6                        RetHI@k 02F0  
                      _BitSet A3BA                     ??_FrsStan 001E                        RetHI@w 02F2  
                   ??_ModToCO 001E                        _EndErr B4AA                     ??_ModToCW 001E  
                   ??_ModZgCO 00F9                     ??_ModPmp1 0022                     ??_ModPmp2 0346  
                   ??_ModZgCW 00F9                        _ClrMod B390                        RetLO@k 02F0  
                   ??_InitOsc 001E                        _EndNst B63A                        RetLO@w 02F2  
                      _ClsScr B65E                   RetDelta@eco 0026                     ??_InitWsw 0025  
                   ??_KolProc 0001           __end_of_ResBufKeyEx AD38                        _CommRT 0035  
                 RetDelta@pco 02FB                 ??_WaitToLowEx 0020                        _ErrPTG 584E  
                   ??_RefStan 001E                        _TFstoi B5C6                     ??_GrzejON 001E  
                   ??_RglPmp1 00FA                     ??_RglPmp2 02FD                        _IntPWM A402  
                      _InitAC AE2E                        _ReadAC 9A62                        _KeyRes A0B0  
                   ??_SetData 0022                        _KeyTim B4BA                     ??_VWybieg 001F  
          __size_of_RetDelta1 000A            __size_of_RetDelta2 0018            __size_of_RetDelta3 000A  
          __size_of_RetDelta4 0052                   _IncPmrTimer B224                        _SetPFN A44A  
                   ??_Moduluj 01FD                     ??_PmrTim1 001E                        _SetNST 955C  
                   ??_PmrTim2 001E                   ?_DecyzjaPLM 0001                        _RglPmp AACE  
                      _RetMax B274               ?_ReadDataXONLID 02F0                        _RetMin B25A  
                   ??_ToReset 0022             ??_PredkoscZmianCW 001E                        _SetErr B4E8  
                      _SetMsg B4F6                     ??_Proba48 001F                        _SetPoz 8FD8  
                      _SetPrt A61C                     ??_PropCO2 0027                     ??_PropCO4 0027  
                      _PropCO 9DE0                        _ToWork B66E                     ??_PrintL3 0025  
                   ??_Tmaleje 001E                     ??_PropOPT 0027                     ??_PrintCO 0025  
                   ??_PrintCS 0025                     ??_PrintCW 0025                     ??_TestScr 0025  
          __size_of_ToObiegCO 002E            __size_of_ToObiegCW 0066                        _Rusz48 8504  
                 ?_EndTestScr 0001                   ?_Blokada15S 0001                     ??_StartCO 001F  
                      _Rwsdid B512            __size_of_SetModPCO 0078            __size_of_SetModPCW 003A  
                      _Swsdid B504                    _RestartMod B3D0                    _RestartKol B168  
                      _Trowna B5BA                        _WswOff B646                        ___lmul A1A4  
                   ??___aldiv 0026                        ___wmul AD38                        _Wylacz 4AE4  
                   ??___awdiv 0024                     ??_Tnizsza 001E                     ??___lbdiv 001F  
                   ??___lbmod 0002                     ??_Rozruch 00FD                     ??_Trosnie 001E  
                   ??___lwdiv 0024                     ??___lwmod 0022            __size_of_SetStatus 0184  
          __size_of_Proba48Z3 0040                  ReadTabZNTC@i 0022           __end_of_RetKrkDelta 8EBE  
                 SetData@wdt0 0021                   SetData@wdt1 0020                  TrybPracy@key 00F8  
                  _PrintErrCs 91F4             __end_ofi2_RefStan 6F2E                        clear_0 A496  
                      clear_1 A4A2                        clear_2 A4AE                        clear_3 A4BA  
                      clear_4 A4C8                    _PrintErrTm 9170              ___awdiv@quotient 00F9  
                   ??_Twyzsza 001E            __size_of_SetWylacz 006C                    _PrintNstCO 99FA  
                  _PrintNstCW 9992            __size_of_PresKeyEX 01E8                    _PwrOnDelay B208  
                  _PmrtimFlt1 01B6                    _PmrtimFlt2 01B7                    _PmrtimFlt3 0190  
          __size_of_PomiarPCO 0084            __size_of_PomiarPFN 0044            __size_of_PomiarPCW 0076  
          __end_of_I2CSlaveTR A008                  ModPruCW2@tmp 00F3                  ModPruCW4@tmp 00F3  
                ReadParam@max 034D                  ReadParam@fst 0350                  ReadParam@min 034B  
                ReadParam@ovd 0355         __end_of_IncConstCOCW4 B54A                  ReadParam@ovi 0354  
           __end_ofi2___lbdiv A998                  ReadParam@stp 0353              _AllKolToFirstPoz AB00  
                __mediumconst 0000                   SetDiode@stn 001F                        tblptrh 000FF7  
                      tblptrl 000FF6            __size_of_StartMCO3 003A                        tblptru 000FF8  
          __size_of_StartMCW2 0024            __size_of_StartMCW4 002C             AllKolToFirstPoz@j 001E  
                ModPrzCW4@trb 01A8            __size_of_StartRTdS 0026             __end_of_DecWylacz 3950  
             ??_FormatDataIMY 000A            __size_of_StartTim1 0004            __size_of_StartTim2 0004  
   __size_of_FunkcjaSerwisowa 005C             __end_of_RdEEParam 78BC              ___lbdiv@dividend 001F  
                 ?_IntUSARTRC 0001                   ?_IntUSARTTR 0001               ProcToPmpPwm@prc 00F7  
               ?_ReloadTimer1 0001             __end_of_EndClsScr B632                 ?_SetTpKtParam 0001  
           __end_of_ClearData 888C            __size_of_TrybPracy 05A4               ___lbmod@divisor 0001  
                  __accesstop 0060       __end_of__initialization A4CE               ___lbmod@counter 0003  
                 _InitDataPmr A81E                 ?_SetPrWswData 0001            _FiltrPomiarowyCOCW 92FC  
             __CFG_PBADEN$OFF 000000            __size_of_WritePWM2 000E            __size_of_WriteOPWM 00F8  
           __end_of_BlokadaL3 9D20                   _ReadDataCO2 B5F0                   _ReadDataCO4 B5FA  
                 _ReadDataCW2 B474                   _ReadDataCW4 B486                   ?_ReadDataCO 0001  
                 ?_ReadDataCW 0001                 _ReceptDataI2C AB64                    _WriteEEPCO B41A  
           __end_of_IncMaxCW2 9CC0             __end_of_IncMaxCW4 9FAE                    _WriteEEPFN B43E  
                 ?_InitGlobal 0001                    _WriteEEPCW B42C             __end_of_IncRTimer 7B46  
               __end_of_EndL3 B5DC                 __end_of_EndCS B2BE                 __end_of_EndCW B364  
         __size_of_DecRozruch 0196               ??_FormatWswData 0005             __end_of_FltParMod 8F4C  
                 ?_ReadTabNTC 0001      __size_of_ReturnACfromNTC 0036                 __end_of_RdPrt B128  
               __end_of_RldT1 10AE                 __end_of_RetHI 8C5C                 __end_of_SetL3 B646  
         ?_FiltrPomiarowyCOCW 0001                 __end_of_RetLO 8D90                __pcstackCOMRAM 0001  
                 ?_InitTimer1 0001                 ??_StartKeyTim 0020                   _ReadTabZNTC 9EF8  
               __end_of_Rwbty B1E8                 __end_of_Swbty B1C8                 __end_of_Tstoi B5BA  
               __end_of_WswOn B66E             __end_of_FirstPCW2 AB64                   ?_Read_b_eep 001E  
               SetStatus@mask 0022           __end_of_WaitToLowEx B0C8                  WriteOPWM@tmp 00FD  
           __end_of_ReadEEPFN B5E6             __end_of_GoldenEye 40D0      __size_of_TransmitDataI2C 0036  
                  __end_ofPL2 237A                    __end_ofPL4 23B2                    __end_ofPL6 23C6  
                  __end_ofPL8 2412           __size_of_GetPGD_PCO 0126              ___lbdiv@quotient 0021  
           __end_of_MocMaksCO 9716             __end_of_MocMaksCW 9782                   SetPrt@Index 0020  
                 ?_ExxPresKey 0020                   ?_SetNDatCHK 0001                  WritePWM@tpwm 001E  
               ResetKol@nrkol 001E             __end_of_ModPruCW2 27B6             __end_of_ModPruCW4 55E4  
           __end_of_ReadParam 3E80             __end_of_ModPrzCW2 A326             __end_of_ModPrzCW4 821C  
                     ??_EndL3 001F                       ??_EndCS 0025                       ??_EndCW 0025  
                 SetPoz@nrkol 0023                   SetPoz@nrpoz 001E              ?_KolejkaPobudzen 0001  
                     ??_RdPrt 001E                     ?_TFmaleje 0001                       ??_RetHI 00FB  
                     ??_SetL3 001E             __end_of_RetDelta1 B60E                       ??_RetLO 00FB  
           __end_of_RetDelta2 B34E             __end_of_RetDelta3 B618             __end_of_RetDelta4 A154  
       __size_of_IncConstCOCW 000E                   _NastawaCOCW 681A          ??_FiltrPomiarowyCOCW 0026  
                     ??_Rwbty 0001                       ??_Swbty 0001           __size_of_DecyzjaPLM 0020  
                     ??_Tstoi 001E                       ??_WswOn 001E             __end_of_ToObiegCO ACB2  
           __end_of_ToObiegCW 9B30                     ?_IncMaxCO 0001                     ?_IncMaxCW 0001  
                   ?_TFrosnie 0001             __end_of_SetModPCO 946E             __end_of_SetModPCW A692  
              ??_ReloadTimer1 0001           __size_of_EndTestScr 002A                   ?_RefreshWSW 0001  
         __size_of_Blokada15S 004C                   ?_ReloadCiag 0001                ??_SetTpKtParam 001E  
                 _ResBufKeyEx AD0C                     ?_ModDkCW2 0001                     ?_ModDkCW4 0001  
                   ?_FirstPCW 0001         __end_of_VerifyNDatCHK B4AA                 ??_ZmienKCOKCW 001F  
                  __pbssBANK0 0060                    __pbssBANK1 0100                    __pbssBANK2 0200  
                  __pbssBANK3 0300             __end_of_SetStatus 6B6A                     ?_ModToCO2 0001  
                   ?_ModToCO3 0001                     ?_ModToCO4 0001                ??_SetPrWswData 0001  
                   ?_ModToCW2 0001                     ?_ModToCW3 0001                     ?_ModToCW4 0001  
           __end_of_Proba48Z3 A5DE                     ?_ModZgCW2 0001                     ?_ModZgCW4 0001  
                   ?_ModParam 0020                     ?_InitUart 0001                     ?_InitPort 0001  
                   ?_Busy_eep 0001                     ?_ModPruCO 0001                     ?_ModPruCW 0001  
           __end_of_SetWylacz 963E                     ?_ModPrzCO 0001                     ?_ModPrzCW 0001  
           __end_of_PresKeyEX 606E                     ?_MocStart 0001                       ?_DecERR 0001  
           __end_of_PomiarPCO 92FC             __end_of_PomiarPFN A518             __end_of_PomiarPCW 955C  
                     ?_DecSTR 0001                       ?_DecWSW 0001                     ?_GrzejOFF 0001  
                   ?_RetDelta 0026                       ?_EndOFF 0001                     ?_SetRData 0001  
                 ?_SetRozruch 0001                       ?_EnKonf 0001                     ?_SetTData 0001  
                     ?_BitSet 0003                       ?_EndErr 0001                     ?_SetDiode 001F  
                     ?_ClrMod 0001                       ?_EndNst 0001                       ?_ClsScr 0001  
              ?_ReceptDataI2C 0001                       ?_ErrPTG 0001                       ?_TFstoi 0001  
      __size_of_ReloadPlomien 0026                       ?_IntPWM 0001                       ?_InitAC 0001  
                     ?_ReadAC 0001                       ?_KeyRes 0001                       ?_KeyTim 001E  
                     ?_SetPFN 0001                     ?_ResetKol 0001                       ?_SetNST 0001  
                     ?_RglPmp 0001                       ?_RetMax 001E                       ?_RetMin 0021  
                 _RetKrkDelta 8E28                       ?_SetErr 0001                       ?_SetMsg 0001  
                     ?_SetPoz 001E                       ?_SetPrt 001E                     ?_PomiarCO 0001  
                   ?_PomiarCS 0001                     ?_PomiarCW 0001                     ?_PomiarIN 0001  
                     ?_PropCO 0001                       ?_ToWork 0001                     ?_PomiarZW 0001  
           __end_of_StartMCO3 A706             __end_of_StartMCW2 B062             __end_of_StartMCW4 AD0C  
                   ?_PrintOFF 0001                       ?_Rusz48 0001                 ??_RuszPlomien 001F  
                   ?_StabPort 0001                     ?_PrintErr 0025                       ?_Rwsdid 0001  
                 ?_RestartKol 0001                   ?_RestartMod 0001             __end_of_StartRTdS AFAA  
                     ?_Swsdid 0001                       ?_Trowna 0001                       ?_WswOff 0001  
                     ?___lmul 001E             __end_of_StartTim1 B666             __end_of_StartTim2 B66A  
                     ?___wmul 001E                       ?_Wylacz 0001                     ?_StartCO2 0001  
                   ?_StartCO4 0001                     ?_StartMCW 0001                     ?_StartRTG 0001  
                   ?_StartRTM 0001                NastawaCOCW@pcw 01AD                     ?_StartRTS 0001  
                   ?_Rusz48Z3 0001                       DecERR@w 00FD                       _CCP1CON 000FBD  
                     _CCP2CON 000FBA                   ?_PrintErrCs 0025           __size_of_IntUSARTRC 006A  
              ___lmul@product 00F3                   ?_PrintErrTm 0025           __size_of_IntUSARTTR 004A  
                   ?_RuszCiag 0001                   ?_PrintNstCO 0001                   ?_PrintNstCW 0001  
                _IncConstCOCW B520                 ??_Write_b_eep 0021                     ?_WritePCO 0001  
                 ?_PwrOnDelay 0001                     ?_WritePFN 0001                     ?_WritePCW 0001  
                 PresKeyEX@ky 0020                     ?_WritePWM 0001             __end_of_TrybPracy 1FBA  
                     _T1CKPS0 007E6C                       _T1CKPS1 007E6D                 ?_ProcToPmpPwm 0001  
           __end_of_WritePWM2 B566           __end_of_StartKeyTim B1A8                  ExxPresKey@ky 0020  
           __end_of_WriteOPWM 7FEE             VerifyNDatCHK@Data 0007                       _KL0_OUT 1084  
                     _KL1_OUT 1090                       _KL2_OUT 109C                       _KL3_OUT 10A8  
                 PomiarCS@dac 00FB                       i2l18002 8AB6                       i2l18024 A42A  
                     i2l18008 8AD6                       i2l27002 6D92                       i2l27012 6DAA  
                     i2l27200 849E                       i2l26400 21C6                       i2l26410 21E0  
                     i2l26322 2010                       i2l27060 A978                       i2l27212 84BE  
                     i2l27204 84A8                       i2l26420 22BE                       i2l26340 2060  
                     i2l26316 2002                       i2l26308 1FD6                       i2l27062 A97C  
                     i2l27046 B1F4                       i2l26510 8A6A                       i2l27222 84E4  
                     i2l26422 22EA                       i2l26342 2070                       i2l26326 2024  
                     i2l27150 8342                       i2l27142 8332                       i2l27056 A972  
                     i2l27072 A994                       i2l26440 2354                       i2l26416 2266  
                     i2l26360 20CC                       i2l26336 204C                       i2l26328 2034  
                     i2l27152 8362                       i2l27080 A3D8                       i2l26450 A05E  
                     i2l26426 22F6                       i2l26370 2122                       i2l26346 208A  
                     i2l27162 83CC                       i2l27322 14DC                       i2l27314 13FE  
                 PomiarCS@pcs 003C                       i2l27068 A98C                       i2l26436 2340  
                     i2l26356 20B4                       i2l27156 8382                       i2l27420 1930  
                     i2l27332 1526                       i2l27324 14F8                       i2l27308 127C  
                     i2l27500 004C                       i2l26518 8A76                       i2l27190 8446  
                     i2l26382 2158                       i2l26390 21B6                       i2l26374 213C  
                     i2l26438 2342                       i2l17902 7A62                       i2l27422 1948  
                     i2l27270 10D8                       i2l27262 10BC                       i2l27510 006A  
                     i2l27502 0054                       i2l26456 A088                       i2l26368 211C  
                     i2l27168 83E2                       i2l17920 7A78                       i2l27440 19AA  
                     i2l27432 197A                       i2l27424 1950                       i2l27408 1904  
                     i2l27352 15C6                       i2l27344 1544                       i2l27280 10EA  
                     i2l17840 9DA2                       i2l27520 007E                       i2l27512 006E  
                     i2l27504 0058                       i2l26466 89F6                       i2l26386 218A  
                     i2l26394 21BA                       i2l26378 2144                       i2l27178 B4A8  
                     i2l27434 1986                       i2l27426 1958                       i2l27362 16BE  
                     i2l27346 1550                       i2l27266 10CA                       i2l27282 10FC  
                     i2l27530 00A0                       i2l27522 0082                       i2l27514 0072  
                     i2l27506 0060                       i2l26468 89FA                       i2l26396 21BE  
                     i2l27436 198E                       i2l27428 1960                       i2l27444 19C0  
                     i2l27372 16DE                       i2l27292 111E                       i2l27284 1104  
                     i2l27540 00C2                       i2l27532 00A8                       i2l27516 0076  
                     i2l27508 0068                       i2l27524 0086                       i2l26494 8A4E  
                     i2l26486 8A42                       i2l26478 89FE                       i2l17942 7AC2  
                     i2l17926 7AAA                       i2l27438 199C                       i2l27294 1124  
                     i2l27286 110A                       i2l17846 9DDC                       i2l27542 00C4  
                     i2l27534 00AA                       i2l27526 008E                       i2l27518 007A  
                     i2l17960 7B0A                       i2l27480 93CA                       i2l27536 00B2  
                     i2l27528 0096                       i2l26930 AE26                       i2l26922 AE10  
                     i2l17882 A394                       i2l17874 A37C                       i2l27386 18B6  
                     i2l27538 00BA                       i2l17948 7AF4                       i2l27396 18DC  
                     i2l27492 0030                       i2l17966 7B3C                       i2l17878 A388  
                     i2l27494 0038                       i2l17896 7A2E                       i2l27496 0040  
                     i2l17994 8AAC                       i2l27498 0044                       i2l17988 8A84  
                  ??_TFmaleje 001E           __size_of_ReadDataCO 000A           __size_of_ReadDataCW 0012  
             ReadDataXONLID@k 00F7           __size_of_InitGlobal 0008                    ??_IncMaxCO 001F  
                  ??_IncMaxCW 001F           __size_of_ReadTabNTC 0054                    ??_TFrosnie 001E  
                     i2_RdPrt B1E8           __size_of_InitTimer1 001A                  RetDelta2@eco 001F  
                RetDelta1@pco 001F                  RetDelta4@eco 01FD                  RetDelta3@pco 001F  
                  ??_ModDkCW2 00F3                    ??_ModDkCW4 00F3                  RetDelta4@pco 02F4  
                  ??_FirstPCW 00FB           __size_of_Read_b_eep 0018                    ??_ModToCO2 001E  
                  ??_ModToCO3 001E                    ??_ModToCO4 001E                    ??_ModToCW2 001E  
                  ??_ModToCW3 001F                    ??_ModToCW4 001E                    ??_ModZgCW2 00F9  
                  ??_ModZgCW4 00F9                       _ClrMod2 B54A                       _ClrMod4 B3A6  
                  ??_ModParam 0021                    ??_InitUart 001E                       _LedData 018D  
                  ??_InitPort 0022                    ??_Busy_eep 001E                    ??_ModPruCO 0022  
                  ??_ModPruCW 0022                    ??_ModPrzCO 0022                    ??_ModPrzCW 00FB  
                  ??_MocStart 0027           _DetekcjaPrzeplywuWG 9782                       _RSerial 003E  
                  ??_GrzejOFF 001E                       RetMax@a 0020                       RetMax@b 001E  
                     _IntPWM2 AFD0                       RetMin@a 0023                       _VZPauza ACB2  
                     RetMin@b 0021                       _InitI2C AD8E                       _ModDkCO 8738  
             __size_of_DecERR 0300                    ??_RetDelta 0027                       _LiczCHK 9D80  
                     _ModDkCW 8684                    ??_SetRData 0001               __size_of_DecSTR 02D2  
             __size_of_DecWSW 02C2                    ??_SetTData 0003           __size_of_SetNDatCHK 0030  
         __size_of_ExxPresKey 01A2                       _InitPWM A7E8                       _FrsStan 70E0  
                     _ModToCO B566                    ??_SetDiode 0020                       _ModToCW B572  
                     _ModZgCO 5A6A                       _ModPmp1 645C                       _ModPmp2 4D32  
                     _ModZgCW 5C7C                       _InitOsc B4DA               __size_of_EndOFF 0018  
             __size_of_EnKonf 0008                       _KolProc 1FD4                       _InitWsw 8B22  
             __size_of_BitSet 003C                       _RefStan 6BB2               __size_of_EndErr 0010  
             __size_of_ClrMod 0016               __size_of_EndNst 0006                       _Nastawa 1000  
                ?_DecyzjaPLM2 0001               __size_of_ClsScr 0004                       _GrzejON B364  
                     _RglPmp1 9856                       _RglPmp2 98C0                       _SetData B084  
             __size_of_ErrPTG 16E0               __size_of_TFstoi 000C                   _WaitToLowEx B0A6  
                 ?_WriteEEPCO 0001                   ?_WriteEEPFN 0001                   ?_WriteEEPCW 0001  
                     __Hparam 0000                       _VWybieg 9BF8               __size_of_IntPWM 0048  
                  ??_ResetKol 001E               __size_of_InitAC 0026           __end_of_ZmienKCOKCW 7DC0  
             __size_of_ReadAC 0068             ?_RefInterfaceData 0001                       _Moduluj 3950  
             __size_of_KeyRes 0052                       _PmrTim1 B3F6                       _PmrTim2 B408  
             __size_of_KeyTim 0010                       _ToReset A9CC                       __Lparam 0000  
                     _Proba48 ADDE               __size_of_SetPFN 0046                    ??_PomiarCO 0024  
                  ??_PomiarCS 0024                    ??_PomiarCW 0024                    ??_PomiarIN 0024  
                     _PropCO2 9D20                       _PropCO4 9E3E               __size_of_SetNST 0076  
             __size_of_RglPmp 0032               __size_of_RetMax 001A                    ??_PomiarZW 0024  
             __size_of_RetMin 001A               __size_of_SetErr 000E                       _PrintL3 8C5C  
                     _Tmaleje AA00                       _PropOPT B450               __size_of_SetMsg 000E  
                     _PrintCO AEC6                       _PrintCS AB96                       _PrintCW ABC6  
                     _TestScr A854               __size_of_SetPrt 003C               __size_of_SetPoz 008C  
                  ??_PrintOFF 0025                    ??_StabPort 0005               __size_of_PropCO 005E  
             __size_of_ToWork 0002          _KolejkaPobudzen$2076 0020          _KolejkaPobudzen$2077 0021  
                  ??_PrintErr 0026                       _StartCO A778               __size_of_Rusz48 00B8  
          ??_RefInterfaceData 0020                       ___aldiv 85C6               __size_of_Rwsdid 000E  
                  ??_StartCO2 001F                    ??_StartCO4 001F               __size_of_Swsdid 000E  
                     ___awdiv 946E                       _Tnizsza B31E               __size_of_Trowna 000C  
             __size_of_WswOff 0006                       ___lbdiv A8F6               __size_of___lmul 0050  
                  ??_StartMCW 0026                       ___lbmod AE06                    ??_StartRTG 001E  
                     _WswData 0189                    ??_StartRTM 001E                    ??_StartRTS 001E  
                  ??_Rusz48Z3 001F                       _Rozruch 5624               __size_of___wmul 002C  
             __size_of_Wylacz 024E                 ?_PrintWswData 0001                       _Trosnie B2BE  
                     ___lwdiv A326                   StabPort@tim 01B5                       ___lwmod A5DE  
                __psmallconst 1000                SetNDatCHK@Data 0003           __size_of_RefreshWSW 0010  
         __size_of_ReloadCiag 004E                    ??_RuszCiag 00FD                       __pcinit A490  
              ExxPresKey@dTim 0022                       _Twyzsza AA68                    ??_WritePCO 0022  
                  ??_WritePFN 0022                    ??_WritePCW 0022                       __ramtop 1000  
                  ??_WritePWM 001E                ExxPresKey@pTim 0023                ??_ProcToPmpPwm 0027  
           ??_ReturnACfromNTC 0020          ?_DetekcjaPrzeplywuWG 0001                       __ptext0 4888  
                     __ptext1 AE2E                       __ptext2 AD8E                       __ptext3 B4DA  
                     __ptext4 B622                       __ptext5 B240                       __ptext6 B062  
                     __ptext7 8B22                       __ptext8 A7E8                       __ptext9 AA9C  
         __end_of_RuszPlomien 9B94                  __size_of_ISR 00EA                   PrintErr@kod 0026  
                __size_of_RTG 0018                  __size_of_RTM 0018                 TrybPracy@ExtR 00F3  
                __size_of_RTS 0018                   PrintErr@pls 0025                  SetData@wData 001E  
               _ReloadPlomien AE54                  ??_DecRozruch 001F              ??_DecyzjaAntyLeg 0022  
               TrybPracy@key2 00F7   __end_of_OczekujNaPrzeplywWG 9992           __size_of_SetRozruch 0028  
         PredkoscZmianCW@ffcw 01B0              ___aldiv@dividend 001E                     RTdS@Index 001E  
           ??_TransmitDataI2C 0001           __end_of_Write_b_eep A740                 WaitToLowEx@ky 001E  
                     _pwm_kwr 00E3              _FunkcjaSerwisowa 9E9C                  ?_IncConstCO2 0001  
                ?_IncConstCW2 0001           __size_of_RestartKol 0020           __size_of_RestartMod 0014  
             _PredkoscZmianCW 8D90          end_of_initialization A4CE                  ??_GetPGD_PCO 00F9  
                ?_IncKeyTimer 0001                 PomiarPCO@pnst 00E0              ??_ReadDataXONLID 00F3  
                   TFmaleje@t 0021                 PomiarPFN@pnst 01AF               ??_ReceptDataI2C 0009  
         __size_of_PrintErrCs 0084           __size_of_PrintErrTm 0084                 PomiarPCW@pnst 00E1  
         __size_of_PrintNstCO 0068           __size_of_PrintNstCW 0068                 ReadParam@rckl 034F  
         __size_of_PwrOnDelay 001C                 ReadParam@pnst 01B4                     i2u2470_45 AFEA  
                RetKrkDelta@d 02F9                     i2u2465_40 A43C                  RetKrkDelta@i 02FA  
                   i2u2466_45 A43E                     i2u2469_40 AFE8           ReturnACfromNTC@bdta 0021  
         ReturnACfromNTC@data 0020                     i2u4419_45 AC48        DetekcjaPrzeplywuWG@pmp 0021  
      DetekcjaPrzeplywuWG@prz 0022                     i2u4553_44 8A24                     i2u4553_45 8A20  
    __end_of_AllKolToFirstPoz AB24                     i2u4652_45 6DB2                     i2u4652_46 6DB6  
                ?_IncPmrTimer 0001                     i2u4662_45 6E4C                     i2u4662_46 6E50  
                   i2u4680_44 A3C6                     i2u4680_45 A3C2                     i2u4681_44 A3E0  
                   i2u4649_45 6D9A                     i2u4681_45 A3DC                     i2u4649_46 6D9E  
                ??_DecyzjaPLM 0027                     i2u4790_40 008E                     i2u4790_41 008C  
                   i2u4791_40 0096                     i2u4791_41 0094                     i2u4792_40 00A0  
                   i2u4784_40 0038                     i2u4792_41 009E                     i2u4784_41 0036  
                   i2u4793_40 00A8                     i2u4785_40 0040                     i2u4793_41 00A6  
                   i2u4785_41 003E                     i2u4794_40 00BA                     i2u4786_40 004C  
                   i2u4794_41 00B8                     i2u4786_41 004A                     i2u4795_40 00C2  
                   i2u4787_40 0054                     i2u4795_41 00C0                     i2u4787_41 0052  
                   i2u4788_40 0060                     i2u4788_41 005E                     i2u4789_40 0068  
                   i2u4789_41 0066             ReadDataXONLID@es2 01B1                  ??_EndTestScr 0025  
           ReadDataXONLID@max 02F9             ReadDataXONLID@key 00F8             ReadDataXONLID@fst 02FD  
           ReadDataXONLID@min 02F7             ReadDataXONLID@tid 02F6             ReadDataXONLID@ktu 01B3  
          __end_of_DecRozruch 75B4             ReadDataXONLID@ovf 02F4                  ??_Blokada15S 001F  
            ___aldiv@quotient 00F5                       postdec1 000FE5                       postdec2 000FDD  
              ??_PrintWswData 0001                   _StartKeyTim B188                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE          __end_of_ReloadTimer1 B622  
        __end_of_SetTpKtParam B306                     TFrosnie@t 001E         ??_DetekcjaPrzeplywuWG 0020  
        __end_of_SetPrWswData A0A2                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _PORTCbits 000F82                     _PORTDbits 000F83            __end_of_GetPGD_PCO 61A4  
                   _PORTEbits 000F84                ?_ReloadPlomien 0001                     i2_RefStan 6D70  
      OczekujNaPrzeplywWG@pmp 00FE        OczekujNaPrzeplywWG@prz 00FF              ___lbmod@dividend 0002  
                  _pwm_center 01B8                     ModDkCW2@k 00F8                     ModDkCW2@m 00FB  
                   ModDkCW2@p 00F9                     ModDkCW4@k 00F8                     ModDkCW4@m 00FB  
                   ModDkCW4@p 00F9           __size_of_WriteEEPCO 0012           __size_of_WriteEEPFN 0012  
         __size_of_WriteEEPCW 0012                     FirstPCW@m 02F4                     FirstPCW@p 02F1  
          __end_of_DecyzjaPLM B0E8                     i2___lbdiv A962                  ??_IntUSARTRC 0008  
                ??_IntUSARTTR 0001            _FormatDataIMY$1100 000E            _FormatDataIMY$1101 000F  
          _FormatDataIMY$1102 0010            _FormatDataIMY$1103 0011            _FormatDataIMY$1104 0012  
          _FormatDataIMY$1105 0013            _FormatDataIMY$1065 000C            _FormatDataIMY$1098 000A  
          _FormatDataIMY$1099 000D                FltParMod@indtm 0194            __end_of_EndTestScr AD8E  
          __end_of_Blokada15S A2DC                   _ZmienKCOKCW 7CB6                     _DecWylacz 36A4  
                 ___lbmod@rem 0004                  ?_InitDataPmr 0001                __end_of_KL0_AP 1080  
              __end_of_KL1_AP 108C                __end_of_KL0_FP 1084                __end_of_KL2_AP 1098  
              __end_of_KL1_FP 1090                __end_of_KL3_AP 10A4                __end_of_KL2_FP 109C  
              __end_of_KL3_FP 10A8                __end_of_KL0_WP 1058                __end_of_KL1_WP 1064  
              __end_of_KL2_WP 1070                __end_of_KL3_WP 107C                     _RdEEParam 7744  
                   ModZgCW2@m 02F1                     ModZgCW2@p 02F0                     ModZgCW4@m 02F1  
                   ModZgCW4@p 02F0                  ?_ReadDataCO2 0001                  ?_ReadDataCO4 0001  
                ?_ReadDataCW2 0001                  ?_ReadDataCW4 0001                     RetHI@emax 02F3  
                   _EndClsScr B62A                __end_of_DecERR 3110                     _ClearData 87E4  
              __end_of_DecSTR 33E2                  ??_ReadDataCO 001E                  ??_ReadDataCW 001E  
              __end_of_DecWSW 36A4                     ModPruCO@k 00F4                     ModPruCO@l 0195  
                ??_InitGlobal 001E                     ModPruCW@k 00F4                     ModPruCW@l 01A3  
                   ModPruCW@m 01A4                     ModPruCW@o 01A5                     ModPruCW@p 01A6  
                   ModPruCW@q 01A7                     ModPruCW@s 003B                __end_of_EndOFF B2A6  
              __end_of_EnKonf B63A                     ModPrzCW@p 02F3                     ModPrzCW@r 02F1  
              __end_of_BitSet A3F6                     KolProc@nC 000D                __end_of_EndErr B4BA  
              __end_of_ClrMod B3A6                __end_of_EndNst B640                __end_of_ClsScr B662  
                ??_ReadTabNTC 0020                __end_of_ErrPTG 6F2E                __end_of_TFstoi B5D2  
      __size_of_RestartFltPrt 0038                  ??_InitTimer1 001E                __end_of_IntPWM A44A  
              __end_of_InitAC AE54                __end_of_ReadAC 9ACA                __end_of_KeyRes A102  
              __end_of_KeyTim B4CA                  ?_ReadTabZNTC 0001                     _BlokadaL3 9CC0  
              __end_of_SetPFN A490                __end_of_SetNST 95D2                __end_of_RglPmp AB00  
              __end_of_RetMax B28E                __end_of_RetMin B274                __end_of_SetErr B4F6  
                 _RuszPlomien 9B30                __end_of_SetMsg B504                __end_of_SetPrt A658  
              __end_of_SetPoz 9064                __end_of_PropCO 9E3E                __end_of_ToWork B670  
                ??_Read_b_eep 0020                __end_of_Rusz48 85BC                     _IncMaxCW2 9C5C  
                   _IncMaxCW4 9F54                __end_of_Rwsdid B520                     _IncRTimer 7A2C  
              __end_of_Swsdid B512                __end_of_Trowna B5C6                __end_of_WswOff B64C  
              __end_of___lmul A1F4                __end_of___wmul AD64                __end_of_Wylacz 4D32  
                   _FltParMod 8EBE                     RetDelta@k 02FC            __end_of_IntUSARTRC 93E4  
          __end_of_IntUSARTTR A3BA                  ??_ExxPresKey 0024                  ??_SetNDatCHK 0001  
               WritePWM2@tpwm 001E                   _Write_b_eep A706                SetStatus@wData 001E  
               WriteOPWM@aosc 00FC                     _FirstPCW2 AB32                 WriteOPWM@tpwm 00FF  
       _RefInterfaceData$2070 0023         _RefInterfaceData$2071 0024         _RefInterfaceData$2072 0025  
       _RefInterfaceData$2073 0026         _RefInterfaceData$2068 0021         _RefInterfaceData$2069 0022  
                   _ReadEEPFN B5DC       __end_of_PredkoscZmianCW 8E1A                     _GoldenEye 3E98  
                  ?i2_RefStan 0001                 ProcToPmpPwm@p 00F8                     SetErr@kod 001E  
                 __end_ofPL10 40E2                   __end_ofPL20 45C8                   __end_ofPL12 458E  
                 __end_ofPL30 2AC6                   __end_ofPL22 4398                   __end_ofPL14 2440  
                 __end_ofPL40 61C0                   __end_ofPL32 2AEE                   __end_ofPL24 2A98  
                 __end_ofPL16 2458                   __end_ofPL50 24AC                   __end_ofPL42 70E0  
                 __end_ofPL34 248A                   __end_ofPL26 2AB4                   __end_ofPL18 2468  
                 __end_ofPL60 4610                   __end_ofPL52 4104                   __end_ofPL44 45EE  
                 __end_ofPL36 681A                   __end_ofPL28 40F2                   __end_ofPL70 8504  
                 __end_ofPL62 55FA                   __end_ofPL54 4F26                   __end_ofPL46 249E  
                 __end_ofPL38 4888                   __end_ofPL80 8FD8                   __end_ofPL72 6620  
                 __end_ofPL64 27CC                   __end_ofPL56 24BC                   __end_ofPL48 61DA  
                 __end_ofPL90 8404                   __end_ofPL82 27E2                   __end_ofPL74 4F38  
                 __end_ofPL66 8302                   __end_ofPL58 660E                   __end_ofPL92 24DC  
                 __end_ofPL84 2DFC                   __end_ofPL76 6206                   __end_ofPL68 2DE6  
                 __end_ofPL94 2E10                   __end_ofPL86 24CA                   __end_ofPL78 8BC0  
                 __end_ofPL96 5624                   __end_ofPL88 5610                   __end_ofPL98 27F6  
         start_initialization A490                     _MocMaksCO 96AA                     _MocMaksCW 9716  
                _RefStan$2767 001F                  _RefStan$2768 0020                  _RefStan$2769 0021  
                 __end_of_KL0 1052                   __end_of_KL1 105E                   __end_of_KL2 106A  
                 __end_of_KL3 1076                   __end_of_ISR 00F2                  ?_NastawaCOCW 0001  
                 __end_of_RTG AF2A                   __end_of_RTM AE92                   __end_of_RTS AF76  
                 __end_of_Klj 104C                     SetMsg@kod 001E                     _ModPruCW2 24F0  
                   _ModPruCW4 53F4                     _ReadParam 3BFA                     _ModPrzCW2 A2DC  
                   _ModPrzCW4 8118            __end_of_ReadDataCO B5F0            __end_of_ReadDataCW B474  
                   PmrTim1@tm 001E                     PmrTim2@tm 001E            __end_of_InitGlobal B62A  
                  ?i2___lbdiv 0001                  ??_RefreshWSW 0011                  ??_ReloadCiag 001F  
           __size_of_TFmaleje 0034            __end_of_ReadTabNTC A05C                  ?_ResBufKeyEx 001E  
          __end_of_InitTimer1 B25A         __end_of_FormatDataIMY 19EC                     _RetDelta1 B604  
                   _RetDelta2 B336                     _RetDelta3 B60E                     _RetDelta4 A102  
           __size_of_IncMaxCO 0062             __size_of_IncMaxCW 00D0             __size_of_TFrosnie 0018  
                  ?_DecWylacz 0001                     _ToObiegCO AC84                     _ToObiegCW 9ACA  
          __end_of_Read_b_eep B31E                     _SetModPCO 93F6                     _SetModPCW A658  
                    ??_DecERR 0027             __size_of_ModDkCW2 00A8             __size_of_ModDkCW4 00A8  
                  ?_RdEEParam 0001             __size_of_FirstPCW 01AA                      ??_DecSTR 0020  
        __end_of_ProcToPmpPwm A55C                      ??_DecWSW 0027                  ??_SetRozruch 001F  
                    ??_EndOFF 0025                      ??_EnKonf 001F                      ??_BitSet 0007  
                    ??_EndErr 001F             __size_of_ModToCO2 000C             __size_of_ModToCO3 0006  
           __size_of_ModToCO4 000C             __size_of_ModToCW2 000C             __size_of_ModToCW3 0042  
           __size_of_ModToCW4 000C                      ??_ClrMod 001E                      ??_EndNst 001F  
           __size_of_ModZgCW2 0238                      ??_ClsScr 001E             __size_of_ModZgCW4 0232  
          i2___lbdiv@dividend 0002                    ?_EndClsScr 0001             __size_of_ModParam 025A  
                    ??_ErrPTG 0027                      ??_TFstoi 001E                    ?_ClearData 0001  
           __size_of_InitUart 0032             __size_of_InitPort 0022             __size_of_Busy_eep 0006  
          __end_of_SetNDatCHK AC56            __end_of_ExxPresKey 67EC             __size_of_ModPruCO 0108  
           __size_of_ModPruCW 02C2             __size_of_ModPrzCO 004E                     _SetStatus 69E6  
           __size_of_ModPrzCW 025A                      ??_IntPWM 0001                      ??_InitAC 001E  
                   _Proba48Z3 A59E                      ??_ReadAC 001E                      ??_KeyRes 0020  
           __size_of_MocStart 006C                      ??_KeyTim 0020                      ??_SetPFN 001E  
                ?_RetKrkDelta 0001                      ??_SetNST 0024                     _SetWylacz 95D2  
                    ??_RglPmp 0027                      ??_RetMax 001F                      ??_RetMin 0022  
           __size_of_GrzejOFF 0020                     _PresKeyEX 5E86                      ??_SetErr 001E  
                    ??_SetMsg 001E             __size_of_RetDelta 0036                      ??_SetPoz 001F  
                    ??_SetPrt 001F                     PrintCO@tm 0025                     PrintCS@cs 0025  
           __size_of_SetRData 0006                     _PomiarPCO 9278        __size_of_IncConstCOCW4 000E  
                   _PomiarPFN A4D4                     _PomiarPCW 94E6             __size_of_SetTData 0086  
                    ??_PropCO 0027                     PrintCW@tm 0025                      ??_ToWork 0001  
           __size_of_SetDiode 0014                     StabPort@i 0008                      ??_Rusz48 001F  
                  ?_BlokadaL3 0001                  ??_RestartKol 001E                  ??_RestartMod 001E  
                    ??_Rwsdid 001E          __size_of_DecyzjaPLM2 0064                      ??_Swsdid 001E  
                    ??_Trowna 001E                      ??_WswOff 001E                      ??___lmul 0026  
                    ??___wmul 0022                      ??_Wylacz 0020             __size_of_ResetKol 0020  
       __end_of_FormatWswData 84EE                    ?_IncMaxCW2 0001                    ?_IncMaxCW4 0001  
           __size_of_PomiarCO 01A2             __size_of_PomiarCS 0188             __size_of_PomiarCW 010C  
           __size_of_PomiarIN 0034             __size_of_PomiarZW 0030                    ?_IncRTimer 0001  
           __size_of_PrintOFF 002E             __size_of_StabPort 00CE                  ??_PrintErrCs 0027  
                  ?_FltParMod 0001             __size_of_PrintErr 0080                  ??_PrintErrTm 0027  
                   _StartMCO3 A6CC                     _StartMCW2 B03E                     _StartMCW4 ACE0  
             ??_ReloadPlomien 001F                  ??_PrintNstCO 0025                  ??_PrintNstCW 0025  
                ??_PwrOnDelay 001F             __size_of_StartCO2 003A             __size_of_StartCO4 0038  
          __end_of_RefreshWSW B4DA            __end_of_ReloadCiag A242             __size_of_StartMCW 0058  
                   _StartRTdS AF84             __size_of_StartRTG 0026             __size_of_StartRTM 0026  
           __size_of_StartRTS 0026             __size_of_Rusz48Z3 0050                     _StartTim1 B662  
                   _StartTim2 B666                    ?_FirstPCW2 0001             __size_of_RuszCiag 0158  
                  ?_ReadEEPFN 0001                    ?_GoldenEye 0001             __size_of_WritePCO 0024  
           __size_of_WritePFN 0020             __size_of_WritePCW 0024             __size_of_WritePWM 0012  
                 __pbssCOMRAM 0027                    ?_MocMaksCO 0001                    ?_MocMaksCW 0001  
                   _TrybPracy 1A16            __end_of_SetRozruch ADDE                 __pcstackBANK0 00F3  
               __pcstackBANK1 01FD                 __pcstackBANK2 02F0                 __pcstackBANK3 0346  
          i2___lbdiv@quotient 0004                 _RestartFltPrt A740                     _WritePWM2 B558  
                   _WriteOPWM 7EF6                    ?_ModPruCW2 0001                    ?_ModPruCW4 0001  
                  ?_ReadParam 0346                    ?_ModPrzCW2 0001                    ?_ModPrzCW4 0001  
               StabPort@delay 0007   __size_of_FiltrPomiarowyCOCW 007E                     Rwbty@mask 0001  
                    ?i2_RdPrt 0001                  SetStatus@wst 0020          __end_of_PrintWswData 8A82  
                  ?_RetDelta1 001E                    ?_RetDelta2 001E                    ?_RetDelta3 001E  
                  ?_RetDelta4 01FD                     Swbty@mask 0001            __end_of_RestartKol B188  
          __end_of_RestartMod B3E4                      ?_ClrMod2 0001                      ?_ClrMod4 0001  
                  ?_ToObiegCO 0001                    ?_ToObiegCW 0001          __size_of_IncConstCO2 000E  
    __size_of_KolejkaPobudzen 0190          __size_of_IncConstCW2 0016                     Rwsdid@dtd 001E  
                  ?_SetModPCO 0001                    ?_SetModPCW 0001                      ?_IntPWM2 0001  
                    ?_VZPauza 0001            __end_of_PrintErrCs 9278                      ?_InitI2C 0001  
                    ?_ModDkCO 0001                      ?_LiczCHK 0001                      ?_ModDkCW 0001  
          __end_of_PrintErrTm 91F4          __size_of_IncKeyTimer 005E                      ?_InitPWM 0001  
          __end_of_PrintNstCO 9A62            __end_of_PrintNstCW 99FA                      ?_FrsStan 0001  
                    ?_ModToCO 0001                      ?_ModToCW 0001                      ?_ModZgCO 0001  
                    ?_ModPmp1 0001                      ?_ModPmp2 0001                      ?_ModZgCW 0001  
          __end_of_PwrOnDelay B224                      ?_InitOsc 0001                      ?_KolProc 0001  
                    ?_InitWsw 0001                     Swsdid@dtd 001E                      ?_RefStan 0001  
                  ?_SetStatus 001E                      ?_GrzejON 0001                    ?_Proba48Z3 0001  
                    ?_RglPmp1 0001                      ?_RglPmp2 0001                  ?_WaitToLowEx 001E  
                ??_WriteEEPCO 0022                  ??_WriteEEPFN 0022                  ??_WriteEEPCW 0022  
                    ?_SetData 001E               _ReturnACfromNTC A88A                      ?_VWybieg 0001  
       __size_of_ReloadTimer1 000A                     _main$2062 0356                     _main$2063 0357  
                  ?_SetWylacz 0001                      ?_Moduluj 0001                      ?_PmrTim1 0001  
                    ?_PmrTim2 0001                    ?_PresKeyEX 0020              ___lwdiv@dividend 00F3  
                    ?_ToReset 0001                      ?_Proba48 0001         __size_of_SetTpKtParam 0018  
                  ?_PomiarPCO 0001                    ?_PomiarPFN 0001                    ?_PomiarPCW 0001  
                    ?_PropCO2 0001                      ?_PropCO4 0001                      ?_PrintL3 0001  
                    ?_Tmaleje 0001                      ?_PropOPT 0001                      ?_PrintCO 0001  
                    ?_PrintCS 0001                      ?_PrintCW 0001                      ?_TestScr 0001  
                   __pintcode 0008                      ?_StartCO 0001         __size_of_SetPrWswData 0046  
                    ?___aldiv 001E          __size_of_IncPmrTimer 001C                      ?___awdiv 00F3  
                    ?_Tnizsza 0001                     __ptext100 B3F6                     __ptext101 B666  
                    ?___lbdiv 001E                     __ptext110 B01A                     __ptext102 B408  
                   __ptext111 B42C                     __ptext103 3E98                     __ptext200 A61C  
                   __ptext120 B66A                     __ptext112 A658                     __ptext104 8EBE  
                   __ptext201 B652                     __ptext121 B084                     __ptext113 B128  
                   __ptext105 8D90                     __ptext210 A518                     __ptext202 A706  
                   __ptext130 96AA                     __ptext122 69E6                     __ptext114 B43E  
                   __ptext106 93F6                     __ptext211 4D32                     __ptext203 A44A  
                   __ptext131 9716                     __ptext123 8FD8                     __ptext115 B5DC  
                   __ptext107 607E                     __ptext220 A102                     __ptext212 AF84  
                   __ptext204 9856                     __ptext140 A242                     __ptext132 A778  
                   __ptext124 B148                     __ptext116 6BB2                     __ptext108 AFF6  
                   __ptext221 B25A                     __ptext213 AFAA                     __ptext205 645C  
                   __ptext141 B450                     __ptext133 B5E6                     __ptext125 B168  
                   __ptext117 70E0                     __ptext109 B41A                     __ptext230 664A  
                   __ptext222 B274                     __ptext214 B31E                     __ptext206 98C0  
                   __ptext150 9DE0                     __ptext142 97EC                     __ptext134 B566  
                   __ptext126 B504                     __ptext118 B646                     __ptext231 B188  
                   __ptext223 B604                     __ptext215 AA68                     __ptext207 AF38  
                   __ptext151 A692                     __ptext143 B462                     __ptext135 5A6A  
                   __ptext127 B512                     __ptext119 AB00                     __ptext232 B4BA  
                   __ptext224 B336                     __ptext216 A8C0                     __ptext208 B558  
                   __ptext160 B37A                     __ptext152 B5F0                     __ptext144 B572  
                   __ptext136 8738                     __ptext128 461C                     __ptext241 9FAE  
                   __ptext233 85C6                     __ptext225 B60E                     __ptext217 8E28  
                   __ptext209 AF5E                     __ptext161 9C5C                     __ptext153 B57E  
                   __ptext145 5C7C                     __ptext137 B520                     __ptext129 963E  
                   __ptext250 937A                     __ptext242 90EA                     __ptext234 946E  
                   __ptext226 5E86                     __ptext218 8BC0                     __ptext170 B596  
                   __ptext162 24F0                     __ptext154 B52E                     __ptext146 8684  
                   __ptext138 9064                     __ptext251 A370                     __ptext243 B658  
                   __ptext235 A8F6                     __ptext227 AD0C                     __ptext219 8CF6  
                   __ptext171 B53C                     __ptext163 A2DC                     __ptext155 B03E  
                   __ptext147 821C                     __ptext139 7B7E                     __ptext260 B498  
                   __ptext252 B618                     __ptext244 AB64                     __ptext236 A1A4  
                   __ptext228 B0A6                     __ptext180 9E3E                     __ptext172 ACE0  
                   __ptext164 9D20                     __ptext156 B474                     __ptext148 2B0E  
                   __ptext261 AC26                     __ptext253 7A2C                     __ptext245 9D80  
                   __ptext237 A326                     __ptext229 2804                     __ptext181 7EF6  
                   __ptext173 B486                     __ptext165 A6CC                     __ptext157 B58A  
                   __ptext149 4122                     __ptext270 A962                     __ptext262 1FD4  
                   __ptext254 B224                     __ptext246 A92C                     __ptext238 A5DE  
                   __ptext190 B54A                     __ptext182 AA00                     __ptext174 B5A2  
                   __ptext166 B64C                     __ptext158 4F7A                     __ptext271 6D70  
                   __ptext263 A05C                     __ptext255 8A82                     __ptext247 B66E  
                   __ptext239 AD38                     __ptext191 B2D6                     __ptext183 B5AE  
                   __ptext175 51BA                     __ptext167 A55C                     __ptext159 888C  
                   __ptext264 8412                     __ptext256 B4CA                     __ptext248 10B0  
                   __ptext192 AA34                     __ptext184 B5BA                     __ptext176 8934  
                   __ptext168 A7B0                     __ptext265 89DC                     __ptext257 831E  
                   __ptext249 A3BA                     __ptext193 B5C6                     __ptext185 B2BE  
                   __ptext177 9F54                     __ptext169 B5FA                     __ptext266 B1A8  
                   __ptext258 A402                     __ptext194 B2EE                     __ptext186 43A2  
                   __ptext178 53F4                     __ptext267 B1C8                     __ptext259 AFD0  
                   __ptext195 955C                     __ptext187 B390                     __ptext179 8118  
                   __ptext268 AE06                     __ptext196 B306                     __ptext188 B3A6  
                   __ptext269 B1E8                     __ptext197 ABF6                     __ptext189 AB32  
                   __ptext198 9A62                     __ptext199 9EF8                      ?___lbmod 0001  
    __end_of_FunkcjaSerwisowa 9EF8                      ?_Rozruch 0001                      ?_Trosnie 0001  
             _TransmitDataI2C A92C                      ?___lwdiv 00F3                      ?___lwmod 001E  
           KolejkaPobudzen@wr 0022                    ?_StartMCO3 0001                    ?_StartMCW2 0001  
                  ?_StartMCW4 0001                      RTG@Index 001E                      ?_Twyzsza 0001  
                  ?_StartRTdS 0001               NastawaCOCW@zmn2 01AE        __size_of_VerifyNDatCHK 0012  
                  ?_StartTim1 0001                    ?_StartTim2 0001                      RTM@Index 001E  
                 __smallconst 1000                   ??i2_RefStan 0001                 PrintErrCs@kod 00F3  
                    RTS@Index 001E                 PrintErrCs@pls 0026     __size_of_RefInterfaceData 01DE  
            ?_PredkoscZmianCW 0001                __size_of_EndL3 000A                ?_RestartFltPrt 0001  
              __size_of_EndCS 0018                __size_of_EndCW 0016                    ?_TrybPracy 0001  
               _IncConstCOCW4 B53C                __size_of_RdPrt 0020                __size_of_RetHI 009C  
              __size_of_SetL3 0006                __size_of_RetLO 009A                    ?_WritePWM2 0001  
                  ?_WriteOPWM 0001                 PrintErrTm@kod 00F3                 PrintErrTm@pls 0026  
              __size_of_Rwbty 0020                __size_of_Swbty 0020                __size_of_Tstoi 000C  
              __size_of_WswOn 0004            __end_of_WriteEEPCO B42C            __end_of_WriteEEPFN B450  
          __end_of_WriteEEPCW B43E              ___lwdiv@quotient 0025                   ??i2___lbdiv 0002  
             ReadTabZNTC@data 0021               ReadTabZNTC@zrAC 0020                  _ReloadTimer1 B618  
                 ??_DecWylacz 0021                  _SetTpKtParam B2EE               ___aldiv@divisor 0022  
             ___aldiv@counter 00F3                   ??_RdEEParam 0027                ___wmul@product 0022  
                _SetPrWswData A05C                      BitSet@bt 0006                   ??_EndClsScr 001F  
                 ??_ClearData 001E                 PrintNstCO@nst 0025          __size_of_InitDataPmr 0036  
               PrintNstCW@nst 0025             NastawaCOCW@obg_co 01AB             NastawaCOCW@obg_cw 01AC  
           ?_AllKolToFirstPoz 0001          __size_of_ReadDataCO2 000A          __size_of_ReadDataCO4 000A  
        __size_of_ReadDataCW2 0012          __size_of_ReadDataCW4 0012              ReadDataXONLID@dt 02F2  
            ReadDataXONLID@iu 01B2              ReadDataXONLID@ky 02F0              ReadDataXONLID@pp 003D  
                 ??_BlokadaL3 001F                  ?_StartKeyTim 001E            ??_AllKolToFirstPoz 001E  
                 ??_IncMaxCW2 001F                   ??_IncMaxCW4 001F                   ??_IncRTimer 0001  
        __size_of_ReadTabZNTC 005C                   ??_FltParMod 0020                   GetPGD_PCO@m 02F1  
                 GetPGD_PCO@p 02F0                      ModDkCO@k 00F9                      ModDkCO@m 00FB  
                    ModDkCO@p 00FA                      LiczCHK@i 0008                 ResBufKeyEx@ky 001E  
                    ModDkCW@k 00F9                      ModDkCW@m 00FB                      ModDkCW@p 00FA  
               RetDelta2@ddlt 001E             ___wmul@multiplier 001E                   ??_FirstPCW2 001E  
                    KeyTim@ky 001E                   ??_ReadEEPFN 0020               Write_b_eep@badd 001E  
             Write_b_eep@bdat 0020                   ??_GoldenEye 00F3                      ModZgCO@m 02F1  
                    ModZgCO@p 02F0                ?_IncConstCOCW4 0001                      ModPmp1@p 00F3  
                    ModPmp2@p 034B                      ModZgCW@m 02F1                      ModZgCW@p 02F0  
                 ??_MocMaksCO 0027                   ??_MocMaksCW 0027                      RetHI@eco 0024  
                    RetHI@max 0025                      RetHI@pco 02F1                      _TFmaleje AA34  
                    InitWsw@i 0025                      KolProc@i 000F                      KolProc@j 0010  
                    KolProc@k 000E                      KolProc@l 000C                      RetLO@eco 0024  
                    RetLO@ehi 02F3                      RetLO@min 0025                      RetLO@pco 02F1  
                 ??_ModPruCW2 0022                   ??_ModPruCW4 0022                   ??_ReadParam 00F9  
                 ??_ModPrzCW2 0022                   ??_ModPrzCW4 00F7                      _IncMaxCO 9064  
                    _IncMaxCW 821C                i2_RefStan$2767 0002                i2_RefStan$2768 0003  
              i2_RefStan$2769 0004                      _TFrosnie B2D6         __size_of_ProcToPmpPwm 0044  
           ___lmul@multiplier 001E          __size_of_NastawaCOCW 01AE                   ??_RetDelta1 001F  
                 ??_RetDelta2 001F                   ??_RetDelta3 001F                   ??_RetDelta4 0026  
                    _ModDkCW2 888C                      _ModDkCW4 8934                 PrintWswData@i 0007  
               PrintWswData@j 0005              __size_ofi2_RdPrt 0020                 PrintWswData@k 0006  
                    _FirstPCW 43A2                    _I2CSlaveTR 9FAE       __end_of_ReturnACfromNTC A8C0  
__size_of_OczekujNaPrzeplywWG 0068                  ?_ZmienKCOKCW 0001                      _ModToCO2 B57E  
                    _ModToCO3 B64C                      _ModToCO4 B596                      _ModToCW2 B58A  
                    _ModToCW3 A55C                      _ModToCW4 B5A2                   ??_ToObiegCO 001E  
                 ??_ToObiegCW 001E                      _ModZgCW2 4F7A                      _ModZgCW4 51BA  
               _VerifyNDatCHK B498                      _ModParam 461C                      _InitUart AA9C  
                    _InitPort B062                      _Busy_eep B652                      _ModPruCO 7B7E  
                    _ModPruCW 2B0E                      _ModPrzCO A242                   ??_SetModPCO 001E  
                    _ModPrzCW 4122                   ??_SetModPCW 001E          __size_of_ResBufKeyEx 002C  
                    _MocStart 963E                      SetPrt@nw 001E              __size_of_ClrMod2 000E  
            __size_of_ClrMod4 0016                      _GrzejOFF B0E8                      _RetDelta A8C0  
                    _SetRData B658                      _SetTData 90EA                    _EECON1bits 000FA6  
                    _SetDiode B3BC         __end_of_ReceptDataI2C AB96       __end_of_TransmitDataI2C A962  
            __size_of_IntPWM2 0026              __size_of_VZPauza 002E              __size_of_InitI2C 0028  
                 ??_SetStatus 0024              __size_of_ModDkCO 00AC              __size_of_LiczCHK 0060  
            __size_of_ModDkCW 00B4                   ??_Proba48Z3 001F              __size_of_InitPWM 0036  
            __size_of_FrsStan 01A2              __size_of_ModToCO 000C              __size_of_ModToCW 000C  
                    __Hrparam 0000              __size_of_ModZgCO 020A              __size_of_ModPmp1 0190  
            __size_of_ModPmp2 01D2              __size_of_ModZgCW 0202              __size_of_InitOsc 000E  
                 ??_SetWylacz 0021                      _ResetKol B148                   ??_PresKeyEX 0022  
            __size_of_KolProc 038A              __size_of_InitWsw 0090             i2___lbdiv@divisor 0001  
            __size_of_RefStan 01BE                   ??_PomiarPCO 0026                   ??_PomiarPFN 0023  
                    Tmaleje@t 0021                   ??_PomiarPCW 0024              __size_of_GrzejON 0016  
            __size_of_RglPmp1 006A              __size_of_RglPmp2 006A                      _PomiarCO 6F2E  
                    _PomiarCS 7282                      _PomiarCW 7DDA             i2___lbdiv@counter 0003  
                    _PomiarIN A998              __size_of_SetData 0022                      __Lrparam 0000  
                    _PomiarZW ABF6             ??_KolejkaPobudzen 0020   __end_of_DetekcjaPrzeplywuWG 97EC  
            __size_of_VWybieg 0064              __size_of_Moduluj 02AA                      _PrintOFF AC56  
            __size_of_PmrTim1 0012              __size_of_PmrTim2 0012              __size_of_ToReset 0ADE  
                    _StabPort 831E              __size_of_Proba48 0028                      _PrintErr 8F4C  
            __size_of_PropCO2 0060              __size_of_PropCO4 005E                  ?_RuszPlomien 0001  
            __size_of_PrintL3 008C              __size_of_Tmaleje 0034              __size_of_PropOPT 0012  
            __size_of_PrintCO 0026              __size_of_PrintCS 0030              __size_of_PrintCW 0030  
            __size_of_TestScr 0036                      _StartCO2 A692                      _StartCO4 A7B0  
        __size_of_RetKrkDelta 0096                      _StartMCW 97EC              ReturnACfromNTC@i 0022  
                    _StartRTG AEEC                      _StartRTM AEA0                      _StartRTS AF38  
            __size_of_StartCO 0038                      _Rusz48Z3 A154              __size_of___aldiv 00BE  
            __size_of___awdiv 0078              __size_of_Tnizsza 0018              __size_of___lbdiv 0036  
            __size_of___lbmod 0028              __size_of_Rozruch 0216                   ??_StartMCO3 001F  
            __size_of_Trosnie 0018                   ??_StartMCW2 001F                   ??_StartMCW4 001F  
            __size_of___lwdiv 004A                      _RuszCiag 78BC              __size_of___lwmod 003E  
                 ??_StartRTdS 001E                      _WritePCO AFF6                      _WritePFN B128  
                    _WritePCW B01A                      _WritePWM B3E4                   ??_StartTim1 001E  
                 ??_StartTim2 001E                      Rwbty@dtd 0002                  ?_Write_b_eep 001E  
            __size_of_Twyzsza 0034                  i2RdPrt@Index 0002               ??_RestartFltPrt 0021  
                    Swbty@dtd 0002                      Tnizsza@t 001E                  _ProcToPmpPwm A518  
             ReadParam@zmiana 0348         __size_of_PrintWswData 00A6                   ??_TrybPracy 0026  
                    _bufRUART 0300                      Trosnie@t 001E                ReadTabNTC@data 0021  
                    _bufTUART 0323                ReadTabNTC@zrAC 0020                   ??_WritePWM2 001E  
                 ??_WriteOPWM 00F7               ___lwdiv@divisor 00F5               ___lwdiv@counter 0024  
                    __ptext10 A81E                      __ptext11 87E4                      __ptext20 A740  
                    __ptext12 A854                      __ptext21 1A16                      __ptext13 B208  
                    __ptext30 75B4                      __ptext22 92FC                      __ptext14 AD64  
                    __ptext31 AACE                      __ptext23 33E2                      __ptext15 B65E  
                    __ptext40 9782                      __ptext32 5624                      __ptext24 2E10  
                    __ptext16 B62A                      __ptext41 992A                      __ptext33 AE54  
                    __ptext25 3110                      __ptext17 7744                      __ptext50 91F4  
                    __ptext42 AE7A                      __ptext34 9B30                      __ptext26 741E  
                    __ptext18 B632                      __ptext51 AC56                      __ptext43 AEA0  
                    __ptext35 A1F4                      __ptext27 36A4                      __ptext19 A998  
                    __ptext60 B4E8                      __ptext52 B28E                      __ptext44 681A  
                    __ptext36 78BC                      __ptext28 9E9C                      __ptext61 B4F6  
                    __ptext53 AB96                      __ptext45 B63A                      __ptext37 9CC0  
                    __ptext29 8008                      __ptext70 8F4C                      __ptext62 B3D0  
                    __ptext54 B2A6                      __ptext46 9992                      __ptext38 A290  
                    __ptext71 584E                      __ptext63 ADB6                      __ptext55 ABC6  
                    __ptext47 99FA                      __ptext39 3950                      __ptext80 626E  
                    __ptext72 6F2E                      __ptext64 B5D2                      __ptext56 B34E  
                    __ptext48 3BFA                      __ptext81 7CB6                      __ptext73 7DDA  
                    __ptext65 95D2                      __ptext57 AEC6                      __ptext49 9170  
                    __ptext90 9ACA                      __ptext82 4AE4                      __ptext74 A008  
                    __ptext66 B640                      __ptext58 8C5C                      __ptext91 AC84  
                    __ptext83 9BF8                      __ptext75 7282                      __ptext67 B364  
                    __ptext59 B3BC                      __ptext92 B3E4                      __ptext84 ADDE  
                    __ptext76 9278                      __ptext68 B0C8                      __ptext93 B0E8  
                    __ptext85 8504                      __ptext77 94E6                      __ptext69 9B94  
                    __ptext94 A0B0                      __ptext86 A59E                      __ptext78 A88A  
                    __ptext95 B108                      __ptext87 A154                      __ptext79 A4D4  
                    __ptext96 ACB2                      __ptext88 AEEC                      __ptext97 A9CC  
                    __ptext89 AF12                      __ptext98 B4AA                      __ptext99 B662  
              RetKrkDelta@max 02F8                RetKrkDelta@min 02F7                RetKrkDelta@pco 02F6  
              ?_VerifyNDatCHK 0001                  PrintErrCs@cs 0025                TrybPracy@ExtR2 00F4  
               __size_of_RTdS 0018                  PrintErrTm@tm 0025       __size_of_DecyzjaAntyLeg 0110  
               __size_of_main 65A6                      Twyzsza@t 0021          PredkoscZmianCW@indff 00E2  
                IncKeyTimer@i 0001          __size_of_WaitToLowEx 0022       __size_of_ReadDataXONLID 026A  
         ReadDataXONLID@step2 02FC                  FltParMod@fco 00DE                  _PrintWswData 89DC  
                FltParMod@fcw 00DF                 ?_IncConstCOCW 0001                    BitSet@data 0003  
                  BitSet@nbit 0005               ??_IncConstCOCW4 001E              _RefInterfaceData 626E  
                  _INTCONbits 000FF2                ReadParam@param 0346                   ?_I2CSlaveTR 0001  
              ReadParam@zapis 0349                      intlevel2 0000              ?_ReturnACfromNTC 0001  
            ___lwmod@dividend 001E                 ??_DecyzjaPLM2 0027              ?_TransmitDataI2C 0001  
            PredkoscZmianCW@i 001F              PredkoscZmianCW@w 001E            ReadDataXONLID@dtmo 0211  
          ReadDataXONLID@step 02FB                   FltParMod@wr 0020                   _DecERR$2092 00FE  
                 _DecERR$2093 00FF                ??_IncConstCOCW 001E             ?_FunkcjaSerwisowa 0001  
        __size_of_StartKeyTim 0020        __size_of_FormatDataIMY 093C            ??_FunkcjaSerwisowa 001F  
       __end_of_ReloadPlomien AE7A                    IncRTimer@i 0001    __end_of_FiltrPomiarowyCOCW 937A  
             ___lwmod@divisor 0020               ___lwmod@counter 0022                  ___aldiv@sign 00F4  
               StartRTG@Index 001E               ??_VerifyNDatCHK 0007                 ??_IncConstCO2 001E  
               ??_IncConstCW2 001F                ModPrzCW@maxmod 02F0                 StartRTM@Index 001E  
               ??_IncKeyTimer 0001        __size_of_FormatWswData 00DC                   _DecWSW$2086 01FD  
                 _DecWSW$2087 01FE                   _DecWSW$2088 01FF                 StartRTS@Index 001E  
           __CFG_FOSC$INTIO67 000000          __size_of_ZmienKCOKCW 010A                 ??_IncPmrTimer 0001  
               LiczCHK@NBTI2C 0007                   ModDkCW2@ada 00FA                   ModDkCW4@ada 00FA  
                  ModDkCO@ada 00F8  
