

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Wed Mar 20 08:54:38 2013


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	eeprom_data,global,class=EEDATA,delta=1
     5                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     6                           	psect	bss,global,class=RAM,space=1,delta=1
     7                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     	;#
    98                           
    99                           	psect	text
   100                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   101                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   102                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   103                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   104                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   105                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   106                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   107                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   108                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   109                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   110                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   111                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   112                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   113                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   114                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   115                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   116                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   117                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   118                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   119                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   120                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   121                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   122                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   123                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   124                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   125                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   126                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   127                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   128                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   129                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   130                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   131                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   132                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   133                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   134                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   135                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   136                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   137                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   138                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   139                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   140                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   141                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   142                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   143                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   144                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   145                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   146                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   147                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   148                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   149                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   150                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   151                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   152                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   153                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   154                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   155                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   156                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   157                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   158                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   159                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   160                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   161                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   162                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   163                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   164                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   165                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   166                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   167                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   168                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   169                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   170                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   171                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   172                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   173                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   174                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   175                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   176                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   177                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   178                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   179                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   180                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   181                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   182                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   183                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   184                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   185                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   186                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   187                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   188                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   189                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   190                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   191                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   192                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   193                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   194                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   195                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   196                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   197                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   198                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   199                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   200  000000                     	;#
   201                           ;	_prz assigned to ?a_OczekujNaPrzeplywWG+1
   202  000000                     _OczekujNaPrzeplywWG$prz	set	?a_OczekujNaPrzeply
      +                          wWG+1
   203                           ;	_pmp assigned to ?a_OczekujNaPrzeplywWG+0
   204  000000                     _OczekujNaPrzeplywWG$pmp	set	?a_OczekujNaPrzeply
      +                          wWG
   205                           ;	_prz assigned to ?a_DetekcjaPrzeplywuWG+1
   206  000000                     _DetekcjaPrzeplywuWG$prz	set	?a_DetekcjaPrzeplyw
      +                          uWG+1
   207                           ;	_pmp assigned to ?a_DetekcjaPrzeplywuWG+0
   208  000000                     _DetekcjaPrzeplywuWG$pmp	set	?a_DetekcjaPrzeplyw
      +                          uWG
   209                           ;	_w assigned to ?a_DecERR+0
   210  000000                     _DecERR$w	set	?a_DecERR
   211                           ;	_wr assigned to ?a_KolejkaPobudzen+0
   212  000000                     _KolejkaPobudzen$wr	set	?a_KolejkaPobudzen
   213                           ;main.h: 36: asm("\tglobal __config" "2"); asm("
      +                          \t__config" "2" " equ " "0xFFFF&0xFFFF&0xFFEF&0x
      +                          FFFF&0xEFFF");
   214  000000                     	;#
   215                           ;main.h: 38: asm("\tglobal __config" "3"); asm("
      +                          \t__config" "3" " equ " "0xFFFF&0x7FFF&0xFDFF");
   216  000000                     	;#
   217                           ;main.h: 39: asm("\tglobal __config" "4"); asm("
      +                          \t__config" "4" " equ " "0xFFFF&0xFFFF&0xFFFB&0x
      +                          FFFF");
   218  000000                     	;#
   219                           ;main.h: 42: asm("\tglobal __config" "5"); asm("
      +                          \t__config" "5" " equ " "0xFFF0");
   220  000000                     	;#
   221                           ;main.h: 43: asm("\tglobal __config" "6"); asm("
      +                          \t__config" "6" " equ " "0xFFF0&0xDFFF");
   222  000000                     	;#
   223                           ;pwm.tp.h: 7: typedef struct {
   224                           ;pwm.tp.h: 9: unsigned _ENPWM:1;
   225                           ;pwm.tp.h: 10: unsigned _ENOSC:1;
   226                           ;pwm.tp.h: 11: unsigned tpGZ:1;
   227                           ;pwm.tp.h: 12: volatile near unsigned char BufPW
      +                          M;
   228                           ;pwm.tp.h: 13: volatile near unsigned char BufOS
      +                          C;
   229                           ;pwm.tp.h: 14: near unsigned char NewOSC;
   230                           ;pwm.tp.h: 15: near unsigned char NewPWM;
   231                           ;pwm.tp.h: 18: unsigned _ENPWM2:1;
   232                           ;pwm.tp.h: 19: volatile near unsigned char BufPW
      +                          M2;
   233                           ;pwm.tp.h: 20: near unsigned char NewPWM2;
   234                           ;pwm.tp.h: 23: unsigned char HIPWM;
   235                           ;pwm.tp.h: 25: unsigned char MDMOD;
   236                           ;pwm.tp.h: 26: unsigned char MGMOD;
   237                           ;pwm.tp.h: 27: unsigned char MAXOSC;
   238                           ;pwm.tp.h: 28: unsigned char MINOSC;
   239                           ;pwm.tp.h: 29: unsigned char MAD_MOD;
   240                           ;pwm.tp.h: 30: unsigned char MAG_MOD;
   241                           ;pwm.tp.h: 31: unsigned char GWMSTART;
   242                           ;pwm.tp.h: 32: unsigned char MDSTART;
   243                           ;pwm.tp.h: 33: unsigned char MGSTART;
   244                           ;pwm.tp.h: 34: unsigned char GWMMAXCO;
   245                           ;pwm.tp.h: 35: unsigned char MDMAXCO;
   246                           ;pwm.tp.h: 36: unsigned char MGMAXCO;
   247                           ;pwm.tp.h: 37: unsigned char GWMMAXCW;
   248                           ;pwm.tp.h: 38: unsigned char MDMAXCW;
   249                           ;pwm.tp.h: 39: unsigned char MGMAXCW;
   250                           ;pwm.tp.h: 40: unsigned char FIRSTPB;
   251                           ;pwm.tp.h: 41: unsigned char PROP1;
   252                           ;pwm.tp.h: 42: unsigned char PROP2;
   253                           ;pwm.tp.h: 43: unsigned char PROP3;
   254                           ;pwm.tp.h: 45: unsigned char MSTART;
   255                           ;pwm.tp.h: 46: unsigned char MMAXCO;
   256                           ;pwm.tp.h: 47: unsigned char MMAXCW;
   257                           ;pwm.tp.h: 48: unsigned char PGD;
   258                           ;pwm.tp.h: 49: unsigned char MINPWM;
   259                           ;pwm.tp.h: 50: unsigned char MAXPWM;
   260                           ;pwm.tp.h: 53: }DtPWM;
   261                           ;pwm.h: 507: void SetOsc(void);
   262                           ;czcw.tp.h: 7: typedef struct {
   263                           ;czcw.tp.h: 8: unsigned _ltrUP:1;
   264                           ;czcw.tp.h: 9: unsigned _ltrDW:1;
   265                           ;czcw.tp.h: 10: unsigned S_CW:1;
   266                           ;czcw.tp.h: 11: unsigned char przCW;
   267                           ;czcw.tp.h: 12: }DataPrCW;
   268                           ;keypad.tp.h: 7: typedef struct {
   269                           ;keypad.tp.h: 8: unsigned bk:1;
   270                           ;keypad.tp.h: 9: unsigned sbk:1;
   271                           ;keypad.tp.h: 10: unsigned ap:1;
   272                           ;keypad.tp.h: 11: unsigned dk:1;
   273                           ;keypad.tp.h: 12: unsigned fl:1;
   274                           ;keypad.tp.h: 13: unsigned c:1;
   275                           ;keypad.tp.h: 14: unsigned t:1;
   276                           ;keypad.tp.h: 15: unsigned char cS;
   277                           ;keypad.tp.h: 16: unsigned char dS;
   278                           ;keypad.tp.h: 17: unsigned char krk;
   279                           ;keypad.tp.h: 18: unsigned char val;
   280                           ;keypad.tp.h: 19: }StPin;
   281                           ;keypad.h: 19: extern void StartRTdS(const unsig
      +                          ned char Index);
   282                           ;keypad.h: 20: extern unsigned char RTdS(const u
      +                          nsigned char Index);
   283                           ;pompa.tp.h: 7: typedef struct {
   284                           ;pompa.tp.h: 8: unsigned char MGPROC;
   285                           ;pompa.tp.h: 9: unsigned char MDPROC;
   286                           ;pompa.tp.h: 10: unsigned char APROC;
   287                           ;pompa.tp.h: 11: }DtPMP;
   288                           ;rgl.tp.h: 4: typedef struct {
   289                           ;rgl.tp.h: 5: unsigned btco:1;
   290                           ;rgl.tp.h: 6: unsigned btcw:1;
   291                           ;rgl.tp.h: 7: unsigned fz:1;
   292                           ;rgl.tp.h: 8: unsigned med_up:1;
   293                           ;rgl.tp.h: 9: unsigned fast_up:1;
   294                           ;rgl.tp.h: 10: unsigned nmod:1;
   295                           ;rgl.tp.h: 11: unsigned del1s:1;
   296                           ;rgl.tp.h: 12: unsigned deln1:1;
   297                           ;rgl.tp.h: 13: unsigned inv_mod:1;
   298                           ;rgl.tp.h: 15: signed char x_t;
   299                           ;rgl.tp.h: 16: signed char x_f;
   300                           ;rgl.tp.h: 17: signed char x_dt;
   301                           ;rgl.tp.h: 18: signed char x_df;
   302                           ;rgl.tp.h: 20: unsigned char ytmp;
   303                           ;rgl.tp.h: 21: unsigned char srp;
   304                           ;rgl.tp.h: 22: unsigned char xmod;
   305                           ;rgl.tp.h: 23: unsigned char tmp_pwm;
   306                           ;rgl.tp.h: 25: }DtRgl;
   307                           ;rgl.h: 36: void StartMCO1F(void);
   308                           ;rgl.h: 37: void ModZgCO(void);
   309                           ;rgl.h: 38: void ModDkCO(void);
   310                           ;rgl.h: 39: void ModPruCO(void);
   311                           ;rgl.h: 40: void IncMaxCO(void);
   312                           ;rgl.h: 41: void ModPrzCO(void);
   313                           ;rgl.h: 42: void PropOPT(void);
   314                           ;rgl.h: 44: void StartCO(void);
   315                           ;rgl.h: 45: void StartMCW(void);
   316                           ;rgl.h: 47: unsigned char FirstPCW(void);
   317                           ;rgl.h: 48: void ClrMod(void);
   318                           ;rgl.h: 49: void ModToCW(void);
   319                           ;rgl.h: 50: void ModToCO(void);
   320                           ;rgl.h: 51: void IncConstCOCW(void);
   321                           ;rgl.h: 52: void ReadDataCO(void);
   322                           ;rgl.h: 53: void ReadDataCW(void);
   323  0010CA                     _main:
   324  000000                     
   325                           ;main.c: 55: InitOsc();
   326  0010CA  EC4A  F073         	call	_InitOsc	;wreg free
   327                           ;main.c: 56: InitGlobal();
   328  0010CE  ECF3  F01F         	call	_InitGlobal	;wreg free
   329                           ;main.c: 57: InitTimer1();
   330  0010D2  ECE1  F072         	call	_InitTimer1	;wreg free
   331                           ;main.c: 58: InitPort();
   332  0010D6  ECF6  F067         	call	_InitPort	;wreg free
   333                           ;main.c: 59: InitAC();
   334  0010DA  ECC2  F06F         	call	_InitAC	;wreg free
   335                           ;main.c: 60: InitWsw();
   336  0010DE  ECB7  F036         	call	_InitWsw	;wreg free
   337                           ;main.c: 61: InitPWM();
   338  0010E2  EC94  F05E         	call	_InitPWM	;wreg free
   339                           ;main.c: 62: InitI2C();
   340  0010E6  EC07  F04A         	call	_InitI2C	;wreg free
   341                           ;main.c: 63: InitUart();
   342  0010EA  EC0C  F06D         	call	_InitUart	;wreg free
   343                           ;main.c: 64: InitDataPmr();
   344  0010EE  EC8B  F041         	call	_InitDataPmr	;wreg free
   345                           ;main.c: 65: ClearData();
   346  0010F2  D929               	call	_ClearData	;wreg free
   347                           ;main.c: 69: if (!POR||!BOR)
   348  0010F4  A2D0               	btfss	4048,1,c	;volatile
   349  0010F6  D002               	goto	u30
   350  0010F8  B0D0               	btfsc	4048,0,c	;volatile
   351  0010FA  D009               	goto	l30
   352  0010FC                     u30:
   353                           ;main.c: 70: {
   354  0010FC  0101               	movlb	(_M+27) shr (0+8)
   355  0010FE  8195               	bsf	(_M+27)& (0+255),0,b
   356                           ;main.c: 72: TestScr();
   357  001100  ECE5  F065         	call	_TestScr	;wreg free
   358                           ;main.c: 73: PwrOnDelay();
   359  001104  EC12  F073         	call	_PwrOnDelay	;wreg free
   360                           ;main.c: 74: EndTestScr();
   361  001108  ECFE  F065         	call	_EndTestScr	;wreg free
   362                           ;main.c: 75: }
   363  00110C  D008               	goto	l31
   364  00110E                     l30:
   365                           ;main.c: 76: else
   366  00110E  0101               	movlb	(_M+26) shr (0+8)
   367  001110  8F94               	bsf	(_M+26)& (0+255),7,b
   368                           ;main.c: 79: ClsScr();
   369  001112  ECDB  F062         	call	_ClsScr	;wreg free
   370                           ;main.c: 80: PwrOnDelay();
   371  001116  EC12  F073         	call	_PwrOnDelay	;wreg free
   372                           ;main.c: 81: EndClsScr();
   373  00111A  ECDD  F062         	call	_EndClsScr	;wreg free
   374  00111E                     l31:
   375                           ;main.c: 82: }
   376  00111E  EC3A  F05D         	call	_RdEEParam	;wreg free
   377                           ;main.c: 87: if (!POR||!BOR)
   378  001122  A2D0               	btfss	4048,1,c	;volatile
   379  001124  D002               	goto	u60
   380  001126  B0D0               	btfsc	4048,0,c	;volatile
   381  001128  D004               	goto	l32
   382  00112A                     u60:
   383                           ;main.c: 88: {
   384  00112A  82D0               	bsf	4048,1,c	;volatile
   385                           ;main.c: 90: BOR=1;
   386  00112C  80D0               	bsf	4048,0,c	;volatile
   387                           ;main.c: 91: EnKonf();
   388  00112E  EC49  F05A         	call	_EnKonf	;wreg free
   389  001132                     l32:
   390                           ;main.c: 92: }
   391  001132  9483               	bcf	3971,2,c	;volatile
   392                           ;main.c: 95: switch(DtKNF.tpkt)
   393  001134  D00F               	goto	l34
   394  001136                     l36:
   395                           ;main.c: 98: case 2:
   396  001136  0E00               	movlw	0
   397  001138  A483               	btfss	3971,2,c	;volatile
   398  00113A  0E01               	movlw	1
   399  00113C  6E00               	movwf	btemp,c
   400  00113E  EE01  F095         	lfsr	0,_M+27
   401  001142  3200               	rrcf	btemp,f,c
   402  001144  3200               	rrcf	btemp,f,c
   403  001146  50EF               	movf	indf0,w,c
   404  001148  1800               	xorwf	btemp,w,c
   405  00114A  0B7F               	andlw	-129
   406  00114C  1800               	xorwf	btemp,w,c
   407  00114E  6EEF               	movwf	indf0,c
   408                           ;main.c: 101: break;
   409  001150  D018               	goto	l33
   410  001152                     l38:
   411  001152  D00A               	goto	l39
   412                           ;main.c: 112: break;
   413  001154                     l34:
   414  001154  C08B  FFE8         	movff	_DtKNF+7,wreg
   415  001158  0A00               	xorlw	0
   416  00115A  E0FB               	bz	l38
   417  00115C  0A01               	xorlw	1
   418  00115E  E0EB               	bz	l36
   419  001160  0A03               	xorlw	3
   420  001162  E0E9               	bz	l36
   421  001164  0A01               	xorlw	1
   422  001166  E0F5               	bz	l38
   423                           ;main.c: 104: case 3:
   424                           ;main.c: 107: break;
   425  001168                     l39:
   426                           ;main.c: 108: }
   427                           ;main.c: 110: {
   428  001168  0E00               	movlw	0
   429  00116A  A283               	btfss	3971,1,c	;volatile
   430  00116C  0E01               	movlw	1
   431  00116E  6E00               	movwf	btemp,c
   432  001170  EE01  F095         	lfsr	0,_M+27
   433  001174  3200               	rrcf	btemp,f,c
   434  001176  3200               	rrcf	btemp,f,c
   435  001178  50EF               	movf	indf0,w,c
   436  00117A  1800               	xorwf	btemp,w,c
   437  00117C  0B7F               	andlw	-129
   438  00117E  1800               	xorwf	btemp,w,c
   439  001180  6EEF               	movwf	indf0,c
   440  001182                     l33:
   441                           ;main.c: 117: if(M.ERR_BTY=eeprom_read(0x00C0))
   442  001182  0EC0               	movlw	192
   443  001184  0100               	movlb	__Lparam shr (0+8)
   444  001186  6FDD               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   445  001188  6BDE               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   446  00118A  EC20  F073         	call	_eeprom_read	;wreg free
   447  00118E  EE01  F09C         	lfsr	0,_M+34
   448  001192  6EEF               	movwf	indf0,c
   449  001194  50EF               	movf	indf0,w,c
   450  001196  E024               	bz	l40
   451                           ;main.c: 118: {
   452  001198  EE00  F092         	lfsr	0,_DtKNF+14
   453  00119C  50EF               	movf	indf0,w,c
   454  00119E  E10D               	bnz	l41
   455                           ;main.c: 120: {
   456  0011A0  C19C  FFE8         	movff	_M+34,wreg
   457  0011A4  0A05               	xorlw	5
   458  0011A6  E109               	bnz	l41
   459                           ;main.c: 122: {
   460  0011A8  0E01               	movlw	1
   461  0011AA  0100               	movlb	__Lparam shr (0+8)
   462  0011AC  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
   463  0011AE  C19C  FFE8         	movff	_M+34,wreg
   464  0011B2  ECEC  F062         	call	_PrintErr
   465                           ;main.c: 124: ErrPTG();
   466  0011B6  ECA7  F01E         	call	_ErrPTG	;wreg free
   467  0011BA                     l41:
   468                           ;main.c: 125: }
   469  0011BA  0E00               	movlw	0
   470  0011BC  0101               	movlb	(_M+34) shr (0+8)
   471  0011BE  659C               	cpfsgt	(_M+34)& (0+255),b
   472  0011C0  D00D               	goto	l43
   473  0011C2  0E04               	movlw	4
   474  0011C4  619C               	cpfslt	(_M+34)& (0+255),b
   475  0011C6  D00A               	goto	l43
   476                           ;main.c: 128: {
   477  0011C8  0E01               	movlw	1
   478  0011CA  0100               	movlb	__Lparam shr (0+8)
   479  0011CC  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
   480  0011CE  C19C  FFE8         	movff	_M+34,wreg
   481  0011D2  ECEC  F062         	call	_PrintErr
   482                           ;main.c: 130: ErrPTG();
   483  0011D6  ECA7  F01E         	call	_ErrPTG	;wreg free
   484                           ;main.c: 131: }
   485  0011DA  D002               	goto	l40
   486  0011DC                     l43:
   487                           ;main.c: 132: else M.ERR_BTY=0;
   488  0011DC  0101               	movlb	(_M+34) shr (0+8)
   489  0011DE  6B9C               	clrf	(_M+34)& (0+255),b
   490  0011E0                     l40:
   491                           ;main.c: 133: }
   492  0011E0  ECB0  F044         	call	_PomiarCO	;wreg free
   493                           ;main.c: 137: PomiarCW();
   494  0011E4  ECE4  F045         	call	_PomiarCW	;wreg free
   495                           ;main.c: 138: PomiarZW();
   496  0011E8  EC8C  F046         	call	_PomiarZW	;wreg free
   497                           ;main.c: 139: PomiarCS();
   498  0011EC  EC16  F049         	call	_PomiarCS	;wreg free
   499                           ;main.c: 140: PomiarPCO();
   500  0011F0  EC15  F048         	call	_PomiarPCO	;wreg free
   501                           ;main.c: 141: PomiarPCW();
   502  0011F4  EC90  F048         	call	_PomiarPCW	;wreg free
   503                           ;main.c: 142: PomiarPFN();
   504  0011F8  ECE5  F048         	call	_PomiarPFN	;wreg free
   505                           ;main.c: 143: PomiarIN();
   506  0011FC  ECC9  F045         	call	_PomiarIN	;wreg free
   507                           ;main.c: 144: DtCO._newPCO=0;
   508  001200  0102               	movlb	(_DtCO+1) shr (0+8)
   509  001202  9F0D               	bcf	(_DtCO+1)& (0+255),7,b
   510                           ;main.c: 145: DtCW._newPCW=0;
   511  001204  0102               	movlb	(_DtCW+1) shr (0+8)
   512  001206  911C               	bcf	(_DtCW+1)& (0+255),0,b
   513                           ;main.c: 146: RefInterfaceData();
   514  001208  D94D               	call	_RefInterfaceData	;wreg free
   515                           ;main.c: 148: RD3=0;
   516  00120A  9683               	bcf	3971,3,c	;volatile
   517                           ;main.c: 149: RD0=0;
   518  00120C  9083               	bcf	3971,0,c	;volatile
   519                           ;main.c: 152: M._TURBO=!RdPrt(2)||RdPrt(3);
   520  00120E  0E02               	movlw	2
   521  001210  ECA6  F068         	call	_RdPrt
   522  001214  E304               	bnc	u151
   523  001216  0E03               	movlw	3
   524  001218  ECA6  F068         	call	_RdPrt
   525  00121C  E302               	bnc	u150
   526  00121E                     u151:
   527  00121E  0E01               	movlw	1
   528  001220  D001               	goto	u160
   529  001222                     u150:
   530  001222  0E00               	movlw	0
   531  001224                     u160:
   532  001224  6E00               	movwf	btemp,c
   533  001226  EE01  F095         	lfsr	0,_M+27
   534  00122A  3600               	rlcf	btemp,f,c
   535  00122C  50EF               	movf	indf0,w,c
   536  00122E  1800               	xorwf	btemp,w,c
   537  001230  0BFD               	andlw	-3
   538  001232  1800               	xorwf	btemp,w,c
   539  001234  6EEF               	movwf	indf0,c
   540                           ;main.c: 153: RestartFltPrt();
   541  001236  D8F3               	call	_RestartFltPrt	;wreg free
   542                           ;main.c: 154: StartRTS(9);
   543  001238  0E09               	movlw	9
   544  00123A  ECA4  F06E         	call	_StartRTS
   545                           ;main.c: 158: DtCW.PCW=65;
   546  00123E  0E41               	movlw	65
   547  001240  CFE8 F21E          	movff	wreg,_DtCW+3
   548                           ;main.c: 159: DtCO.PCO=85;
   549  001244  0E55               	movlw	85
   550  001246  CFE8 F20F          	movff	wreg,_DtCO+3
   551                           ;main.c: 162: WritePWM2(0);
   552  00124A  0E00               	movlw	0
   553  00124C  EC3F  F061         	call	_WritePWM2
   554  001250                     l46:
   555                           ;main.c: 163: while(1)
   556                           ;main.c: 164: {
   557  001250  0004               	clrwdt		;#
   558                           ;main.c: 166: PFN._opgprg=1;
   559  001252  0101               	movlb	(_PFN+5) shr (0+8)
   560  001254  895C               	bsf	(_PFN+5)& (0+255),4,b
   561                           ;main.c: 167: PFN._opgres=0;
   562  001256  975C               	bcf	(_PFN+5)& (0+255),3,b
   563                           ;main.c: 171: M._PRACA=M._ROZRUCH||RD0;
   564  001258  A58A               	btfss	(_M+16)& (0+255),2,b
   565  00125A  B083               	btfsc	3971,0,c	;volatile
   566  00125C  D001               	goto	u191
   567  00125E  D002               	goto	u190
   568  001260                     u191:
   569  001260  0E01               	movlw	1
   570  001262  D001               	goto	u200
   571  001264                     u190:
   572  001264  0E00               	movlw	0
   573  001266                     u200:
   574  001266  6E00               	movwf	btemp,c
   575  001268  EE01  F095         	lfsr	0,_M+27
   576  00126C  3600               	rlcf	btemp,f,c
   577  00126E  3600               	rlcf	btemp,f,c
   578  001270  50EF               	movf	indf0,w,c
   579  001272  1800               	xorwf	btemp,w,c
   580  001274  0BFB               	andlw	-5
   581  001276  1800               	xorwf	btemp,w,c
   582  001278  6EEF               	movwf	indf0,c
   583                           ;main.c: 174: RefInterfaceData();
   584  00127A  D914               	call	_RefInterfaceData	;wreg free
   585                           ;main.c: 175: TrybPracy();
   586  00127C  EC8D  F056         	call	_TrybPracy	;wreg free
   587                           ;main.c: 178: PomiarPCO();
   588  001280  EC15  F048         	call	_PomiarPCO	;wreg free
   589                           ;main.c: 179: PomiarPCW();
   590  001284  EC90  F048         	call	_PomiarPCW	;wreg free
   591                           ;main.c: 180: PomiarPFN();
   592  001288  ECE5  F048         	call	_PomiarPFN	;wreg free
   593                           ;main.c: 181: PomiarCO();
   594  00128C  ECB0  F044         	call	_PomiarCO	;wreg free
   595                           ;main.c: 182: PomiarCW();
   596  001290  ECE4  F045         	call	_PomiarCW	;wreg free
   597                           ;main.c: 183: PomiarZW();
   598  001294  EC8C  F046         	call	_PomiarZW	;wreg free
   599                           ;main.c: 184: FiltrPomiarowyCOCW();
   600  001298  EC6C  F044         	call	_FiltrPomiarowyCOCW	;wreg free
   601                           ;main.c: 185: PomiarCS();
   602  00129C  EC16  F049         	call	_PomiarCS	;wreg free
   603                           ;main.c: 186: PomiarIN();
   604  0012A0  ECC9  F045         	call	_PomiarIN	;wreg free
   605                           ;main.c: 188: DecWSW();
   606  0012A4  EC52  F00E         	call	_DecWSW	;wreg free
   607                           ;main.c: 189: DecERR();
   608  0012A8  EC11  F010         	call	_DecERR	;wreg free
   609                           ;main.c: 190: DecSTR();
   610  0012AC  ECAD  F011         	call	_DecSTR	;wreg free
   611                           ;main.c: 191: DecRozruch();
   612  0012B0  ECF4  F013         	call	_DecRozruch	;wreg free
   613                           ;main.c: 192: DecWylacz();
   614  0012B4  EC31  F015         	call	_DecWylacz	;wreg free
   615                           ;main.c: 193: FunkcjaSerwisowa();
   616  0012B8  EC3B  F017         	call	_FunkcjaSerwisowa	;wreg free
   617                           ;main.c: 194: DecyzjaAntyLeg();
   618  0012BC  DB2F               	call	_DecyzjaAntyLeg	;wreg free
   619                           ;main.c: 195: KolejkaPobudzen();
   620  0012BE  DA0C               	call	_KolejkaPobudzen	;wreg free
   621                           ;main.c: 198: RglPmp();
   622  0012C0  EC3E  F055         	call	_RglPmp	;wreg free
   623                           ;main.c: 199: if(M._ZMKCOCW) ZmienKCOKCW();
   624  0012C4  0101               	movlb	(_M+16) shr (0+8)
   625  0012C6  B38A               	btfsc	(_M+16)& (0+255),1,b
   626  0012C8  ECC9  F01B         	call	_ZmienKCOKCW	;wreg free
   627                           ;main.c: 200: if(M._WYLACZ) Wylacz();
   628  0012CC  0101               	movlb	(_M+16) shr (0+8)
   629  0012CE  B18A               	btfsc	(_M+16)& (0+255),0,b
   630  0012D0  EC9F  F019         	call	_Wylacz	;wreg free
   631                           ;main.c: 201: if(M._ROZRUCH) Rozruch();
   632  0012D4  0101               	movlb	(_M+16) shr (0+8)
   633  0012D6  B58A               	btfsc	(_M+16)& (0+255),2,b
   634  0012D8  ECEC  F017         	call	_Rozruch	;wreg free
   635                           ;main.c: 202: if(M._VWYBIEG) VWybieg();
   636  0012DC  0101               	movlb	(_M+16) shr (0+8)
   637  0012DE  BD8A               	btfsc	(_M+16)& (0+255),6,b
   638  0012E0  EC14  F01B         	call	_VWybieg	;wreg free
   639                           ;main.c: 203: ReloadPlomien();
   640  0012E4  EC8B  F01C         	call	_ReloadPlomien	;wreg free
   641                           ;main.c: 204: if(M._RUSZ_PLOMIEN) RuszPlomien();
   642  0012E8  0101               	movlb	(_M+17) shr (0+8)
   643  0012EA  B18B               	btfsc	(_M+17)& (0+255),0,b
   644  0012EC  EC5A  F01C         	call	_RuszPlomien	;wreg free
   645                           ;main.c: 205: ReloadCiag();
   646  0012F0  EC6B  F01D         	call	_ReloadCiag	;wreg free
   647                           ;main.c: 206: if(M._RUSZ_CIAG) RuszCiag();
   648  0012F4  0101               	movlb	(_M+16) shr (0+8)
   649  0012F6  BF8A               	btfsc	(_M+16)& (0+255),7,b
   650  0012F8  EC9F  F01C         	call	_RuszCiag	;wreg free
   651                           ;main.c: 207: Proba48();
   652  0012FC  EC92  F01D         	call	_Proba48	;wreg free
   653                           ;main.c: 208: if(M._RUSZ_48) Rusz48();
   654  001300  0101               	movlb	(_M+16) shr (0+8)
   655  001302  B78A               	btfsc	(_M+16)& (0+255),3,b
   656  001304  ECA7  F01D         	call	_Rusz48	;wreg free
   657                           ;main.c: 209: Proba48Z3();
   658  001308  EC1B  F01E         	call	_Proba48Z3	;wreg free
   659                           ;main.c: 210: if(M._RUSZ_48Z3) Rusz48Z3();
   660  00130C  0101               	movlb	(_M+16) shr (0+8)
   661  00130E  B98A               	btfsc	(_M+16)& (0+255),4,b
   662  001310  EC3C  F01E         	call	_Rusz48Z3	;wreg free
   663                           ;main.c: 211: if(M._BLOKUJ_3M) BlokadaL3();
   664  001314  0101               	movlb	(_M+17) shr (0+8)
   665  001316  B78B               	btfsc	(_M+17)& (0+255),3,b
   666  001318  EC73  F017         	call	_BlokadaL3	;wreg free
   667                           ;main.c: 212: if(M._BLOKUJ_15S)
   668  00131C  0101               	movlb	(_M+17) shr (0+8)
   669  00131E  B98B               	btfsc	(_M+17)& (0+255),4,b
   670                           ;main.c: 213: {
   671  001320  B595               	btfsc	(_M+27)& (0+255),2,b
   672  001322  D002               	goto	l57
   673  001324  ECA8  F017         	call	_Blokada15S	;wreg free
   674  001328                     l57:
   675                           ;main.c: 215: }
   676  001328  0101               	movlb	(_M+17) shr (0+8)
   677  00132A  BB8B               	btfsc	(_M+17)& (0+255),5,b
   678  00132C  ECF7  F01F         	call	_Moduluj	;wreg free
   679                           ;main.c: 217: if(DtKNF.robg==0)
   680  001330  EE00  F092         	lfsr	0,_DtKNF+14
   681  001334  50EF               	movf	indf0,w,c
   682  001336  E18C               	bnz	l46
   683                           ;main.c: 218: {
   684  001338  EC4A  F01B         	call	_DetekcjaPrzeplywuWG	;wreg free
   685                           ;main.c: 220: if(M._RUSZ_POMPE) OczekujNaPrzeply
      +                          wWG();
   686  00133C  0101               	movlb	(_M+17) shr (0+8)
   687  00133E  B58B               	btfsc	(_M+17)& (0+255),2,b
   688  001340  EC8E  F01B         	call	_OczekujNaPrzeplywWG	;wreg free
   689  001344  D785               	goto	l46
   690  001346                     __end_of_main:
   691                           ;main.c: 228: void ClearData(void)
   692                           ;main.c: 229: {
   693  001346                     _ClearData:
   694  000000                     
   695                           ;main.c: 230: DtKNF.enknf=0;
   696  001346  0100               	movlb	_DtKNF shr (0+8)
   697  001348  9184               	bcf	_DtKNF& (0+255),0,b
   698                           ;main.c: 231: M._pob_KCO=0;
   699  00134A  EE01  F07A         	lfsr	0,_M
   700  00134E  6AEE               	clrf	postinc0,c
   701  001350  6AEE               	clrf	postinc0,c
   702                           ;main.c: 232: M._pob_KCW=0;
   703  001352  EE01  F07C         	lfsr	0,_M+2
   704  001356  6AEE               	clrf	postinc0,c
   705  001358  6AEE               	clrf	postinc0,c
   706                           ;main.c: 233: M._pob_AL=0;
   707  00135A  EE01  F080         	lfsr	0,_M+6
   708  00135E  6AEE               	clrf	postinc0,c
   709  001360  6AEE               	clrf	postinc0,c
   710                           ;main.c: 234: M._pob_SRW=0;
   711  001362  EE01  F07E         	lfsr	0,_M+4
   712  001366  6AEE               	clrf	postinc0,c
   713  001368  6AEE               	clrf	postinc0,c
   714                           ;main.c: 235: M._pob_CO=0;
   715  00136A  EE01  F084         	lfsr	0,_M+10
   716  00136E  6AEE               	clrf	postinc0,c
   717  001370  6AEE               	clrf	postinc0,c
   718                           ;main.c: 236: M._pob_CW=0;
   719  001372  EE01  F082         	lfsr	0,_M+8
   720  001376  6AEE               	clrf	postinc0,c
   721  001378  6AEE               	clrf	postinc0,c
   722                           ;main.c: 237: M._pob_DzCO=0;
   723  00137A  EE01  F086         	lfsr	0,_M+12
   724  00137E  6AEE               	clrf	postinc0,c
   725  001380  6AEE               	clrf	postinc0,c
   726                           ;main.c: 238: M._pob_DzCW=0;
   727  001382  EE01  F088         	lfsr	0,_M+14
   728  001386  6AEE               	clrf	postinc0,c
   729  001388  6AEE               	clrf	postinc0,c
   730                           ;main.c: 240: M._WYLACZ=0;
   731  00138A  0101               	movlb	(_M+16) shr (0+8)
   732  00138C  918A               	bcf	(_M+16)& (0+255),0,b
   733                           ;main.c: 241: M._ZMKCOCW=0;
   734  00138E  938A               	bcf	(_M+16)& (0+255),1,b
   735                           ;main.c: 242: M._ROZRUCH=0;
   736  001390  958A               	bcf	(_M+16)& (0+255),2,b
   737                           ;main.c: 243: M._RUSZ_48=0;
   738  001392  978A               	bcf	(_M+16)& (0+255),3,b
   739                           ;main.c: 244: M._RUSZ_48Z3=0;
   740  001394  998A               	bcf	(_M+16)& (0+255),4,b
   741                           ;main.c: 245: M._RUSZ_PWR=0;
   742  001396  9B8A               	bcf	(_M+16)& (0+255),5,b
   743                           ;main.c: 246: M._VWYBIEG=0;
   744  001398  9D8A               	bcf	(_M+16)& (0+255),6,b
   745                           ;main.c: 247: M._MODULUJ=0;
   746  00139A  9B8B               	bcf	(_M+17)& (0+255),5,b
   747                           ;main.c: 248: M._RUSZ_CIAG=0;
   748  00139C  9F8A               	bcf	(_M+16)& (0+255),7,b
   749                           ;main.c: 249: M._RUSZ_PLOMIEN=0;
   750  00139E  918B               	bcf	(_M+17)& (0+255),0,b
   751                           ;main.c: 250: M._RUSZ_RPLM=0;
   752  0013A0  938B               	bcf	(_M+17)& (0+255),1,b
   753                           ;main.c: 251: M._RUSZ_POMPE=0;
   754  0013A2  958B               	bcf	(_M+17)& (0+255),2,b
   755                           ;main.c: 252: M._BLOKUJ_3M=0;
   756  0013A4  978B               	bcf	(_M+17)& (0+255),3,b
   757                           ;main.c: 253: M._BLOKUJ_15S=0;
   758  0013A6  998B               	bcf	(_M+17)& (0+255),4,b
   759                           ;main.c: 254: M._MODULUJ=0;
   760  0013A8  9B8B               	bcf	(_M+17)& (0+255),5,b
   761                           ;main.c: 256: M._AKTYWNE_AL=0;
   762  0013AA  EE01  F08E         	lfsr	0,_M+20
   763  0013AE  6AEE               	clrf	postinc0,c
   764  0013B0  6AEE               	clrf	postinc0,c
   765                           ;main.c: 257: M._AKTYWNE_SRW=0;
   766  0013B2  EE01  F08C         	lfsr	0,_M+18
   767  0013B6  6AEE               	clrf	postinc0,c
   768  0013B8  6AEE               	clrf	postinc0,c
   769                           ;main.c: 258: M._AKTYWNE_PGD=0;
   770  0013BA  EE01  F090         	lfsr	0,_M+22
   771  0013BE  6AEE               	clrf	postinc0,c
   772  0013C0  6AEE               	clrf	postinc0,c
   773                           ;main.c: 259: M._AKTYWNE_KNF=0;
   774  0013C2  EE01  F092         	lfsr	0,_M+24
   775  0013C6  6AEE               	clrf	postinc0,c
   776  0013C8  6AEE               	clrf	postinc0,c
   777                           ;main.c: 260: M._RUSZ_NTC_CO=0;
   778  0013CA  9194               	bcf	(_M+26)& (0+255),0,b
   779                           ;main.c: 261: M._RUSZ_NTC_CW=0;
   780  0013CC  9394               	bcf	(_M+26)& (0+255),1,b
   781                           ;main.c: 262: M._RUSZ_STB=0;
   782  0013CE  9794               	bcf	(_M+26)& (0+255),3,b
   783                           ;main.c: 263: M._RUSZ_MOD=0;
   784  0013D0  9994               	bcf	(_M+26)& (0+255),4,b
   785                           ;main.c: 264: M._RUSZ_CISN=0;
   786  0013D2  9B94               	bcf	(_M+26)& (0+255),5,b
   787                           ;main.c: 265: M._RUSZ_NCISN=0;
   788  0013D4  9D94               	bcf	(_M+26)& (0+255),6,b
   789                           ;main.c: 267: M._PW_START=0;
   790  0013D6  9195               	bcf	(_M+27)& (0+255),0,b
   791                           ;main.c: 268: M._RS_START=0;
   792  0013D8  9F94               	bcf	(_M+26)& (0+255),7,b
   793                           ;main.c: 269: M._TURBO=0;
   794  0013DA  9395               	bcf	(_M+27)& (0+255),1,b
   795                           ;main.c: 270: M._PRACA=0;
   796  0013DC  9595               	bcf	(_M+27)& (0+255),2,b
   797                           ;main.c: 271: M._OST_PL=0;
   798  0013DE  9795               	bcf	(_M+27)& (0+255),3,b
   799                           ;main.c: 272: M._RUN_MNMOD=0;
   800  0013E0  9995               	bcf	(_M+27)& (0+255),4,b
   801                           ;main.c: 273: M._KCW_PMP=0;
   802  0013E2  9B95               	bcf	(_M+27)& (0+255),5,b
   803                           ;main.c: 274: M._DE_VNT=0;
   804  0013E4  9D95               	bcf	(_M+27)& (0+255),6,b
   805                           ;main.c: 275: M._DE_PMP=0;
   806  0013E6  9596               	bcf	(_M+28)& (0+255),2,b
   807                           ;main.c: 276: M._RPM_CW=0;
   808  0013E8  9F95               	bcf	(_M+27)& (0+255),7,b
   809                           ;main.c: 277: M._RUSZ_NTC_IN=0;
   810  0013EA  9594               	bcf	(_M+26)& (0+255),2,b
   811                           ;main.c: 279: M.ERR_BTY=0;
   812  0013EC  6B9C               	clrf	(_M+34)& (0+255),b
   813                           ;main.c: 280: M.ROZ=0;
   814  0013EE  6B9D               	clrf	(_M+35)& (0+255),b
   815                           ;main.c: 281: M.R48=0;
   816  0013F0  6B9E               	clrf	(_M+36)& (0+255),b
   817                           ;main.c: 282: M.R48Z3=0;
   818  0013F2  6B9F               	clrf	(_M+37)& (0+255),b
   819                           ;main.c: 283: M.BL3=0;
   820  0013F4  6BA0               	clrf	(_M+38)& (0+255),b
   821                           ;main.c: 284: M.BL15=0;
   822  0013F6  6BA1               	clrf	(_M+39)& (0+255),b
   823                           ;main.c: 285: M.WYL=0;
   824  0013F8  6BA2               	clrf	(_M+40)& (0+255),b
   825                           ;main.c: 286: M.RPR=0;
   826  0013FA  6BA3               	clrf	(_M+41)& (0+255),b
   827                           ;main.c: 287: M.RPL=0;
   828  0013FC  6BA4               	clrf	(_M+42)& (0+255),b
   829                           ;main.c: 288: M.RCI=0;
   830  0013FE  6BA5               	clrf	(_M+43)& (0+255),b
   831                           ;main.c: 289: M.MNM=0;
   832  001400  6BA6               	clrf	(_M+44)& (0+255),b
   833                           ;main.c: 290: M.ZKP=0;
   834  001402  6BA7               	clrf	(_M+45)& (0+255),b
   835                           ;main.c: 291: M.VWB=0;
   836  001404  6BA8               	clrf	(_M+46)& (0+255),b
   837                           ;main.c: 292: M.SRV=0;
   838  001406  6BA9               	clrf	(_M+47)& (0+255),b
   839                           ;main.c: 293: M.KRS=0;
   840  001408  6BAA               	clrf	(_M+48)& (0+255),b
   841                           ;main.c: 294: M.HVZ=0;
   842  00140A  6BAB               	clrf	(_M+49)& (0+255),b
   843                           ;main.c: 295: M.LICZNIK_PL=0;
   844  00140C  6B97               	clrf	(_M+29)& (0+255),b
   845                           ;main.c: 296: M.LICZNIK_CIG=0;
   846  00140E  6B98               	clrf	(_M+30)& (0+255),b
   847                           ;main.c: 297: M.LICZNIK_CIG2=0;
   848  001410  6B99               	clrf	(_M+31)& (0+255),b
   849                           ;main.c: 298: M.LICZNIK_CIG3=0;
   850  001412  6B9A               	clrf	(_M+32)& (0+255),b
   851                           ;main.c: 299: M.DPR=0;
   852  001414  6BAC               	clrf	(_M+50)& (0+255),b
   853                           ;main.c: 301: RD3=0;
   854  001416  9683               	bcf	3971,3,c	;volatile
   855                           ;main.c: 302: RD0=0;
   856  001418  9083               	bcf	3971,0,c	;volatile
   857                           ;main.c: 303: RD2=0;
   858  00141A  9483               	bcf	3971,2,c	;volatile
   859                           ;main.c: 304: }
   860  00141C  0012               	return	
   861  00141E                     __end_of_ClearData:
   862                           ;main.c: 306: void RestartFltPrt(void)
   863                           ;main.c: 307: {
   864  00141E                     _RestartFltPrt:
   865  000000                     
   866                           ;main.c: 308: SetPrt(13,0);
   867  00141E  0100               	movlb	__Lparam shr (0+8)
   868  001420  6BDB               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   869  001422  0E0D               	movlw	13
   870  001424  ECB7  F068         	call	_SetPrt
   871                           ;main.c: 309: SetPrt(17,0);
   872  001428  0100               	movlb	__Lparam shr (0+8)
   873  00142A  6BDB               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   874  00142C  0E11               	movlw	17
   875  00142E  ECB7  F068         	call	_SetPrt
   876                           ;main.c: 310: SetPrt(9,0);
   877  001432  0100               	movlb	__Lparam shr (0+8)
   878  001434  6BDB               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   879  001436  0E09               	movlw	9
   880  001438  ECB7  F068         	call	_SetPrt
   881                           ;main.c: 311: SetPrt(10,0);
   882  00143C  0100               	movlb	__Lparam shr (0+8)
   883  00143E  6BDB               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   884  001440  0E0A               	movlw	10
   885  001442  ECB7  F068         	call	_SetPrt
   886                           ;main.c: 312: SetPrt(12,0);
   887  001446  0100               	movlb	__Lparam shr (0+8)
   888  001448  6BDB               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   889  00144A  0E0C               	movlw	12
   890  00144C  ECB7  F068         	call	_SetPrt
   891                           ;main.c: 313: SetPrt(11,0);
   892  001450  0100               	movlb	__Lparam shr (0+8)
   893  001452  6BDB               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   894  001454  0E0B               	movlw	11
   895  001456  ECB7  F068         	call	_SetPrt
   896                           ;main.c: 314: SetPrt(7,0);
   897  00145A  0100               	movlb	__Lparam shr (0+8)
   898  00145C  6BDB               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   899  00145E  0E07               	movlw	7
   900  001460  EFB7  F068         	goto	_SetPrt
   901                           ;main.c: 315: }
   902  001464                     __end_of_RestartFltPrt:
   903                           ;main.c: 318: unsigned char KodSterownika(void)
   904                           ;main.c: 319: {
   905  001464                     _KodSterownika:
   906  000000                     
   907                           ;main.c: 321: switch(DtKNF.tpkt)
   908  001464  D014               	goto	l66
   909  001466                     l67:
   910                           ;main.c: 322: {
   911                           ;main.c: 324: if(!M._TURBO) return 0x10;
   912  001466  0101               	movlb	(_M+27) shr (0+8)
   913  001468  A395               	btfss	(_M+27)& (0+255),1,b
   914  00146A  0C10               	retlw	16
   915                           ;main.c: 325: else return 0x11;
   916  00146C  0C11               	retlw	17
   917  00146E                     l70:
   918                           ;main.c: 326: case 1:
   919                           ;main.c: 327: if(!M._TURBO) return 0x12;
   920  00146E  0101               	movlb	(_M+27) shr (0+8)
   921  001470  A395               	btfss	(_M+27)& (0+255),1,b
   922  001472  0C12               	retlw	18
   923                           ;main.c: 328: else return 0x13;
   924  001474  0C13               	retlw	19
   925  001476                     l73:
   926                           ;main.c: 329: case 2:
   927                           ;main.c: 330: if(!M._TURBO) return 0x14;
   928  001476  0101               	movlb	(_M+27) shr (0+8)
   929  001478  A395               	btfss	(_M+27)& (0+255),1,b
   930  00147A  0C14               	retlw	20
   931                           ;main.c: 331: else return 0x15;
   932  00147C  0C15               	retlw	21
   933  00147E                     l76:
   934                           ;main.c: 332: case 3:
   935                           ;main.c: 333: if(!M._TURBO) return 0x16;
   936  00147E  0101               	movlb	(_M+27) shr (0+8)
   937  001480  A395               	btfss	(_M+27)& (0+255),1,b
   938  001482  0C16               	retlw	22
   939                           ;main.c: 334: else return 0x17;
   940  001484  0C17               	retlw	23
   941  001486                     l79:
   942                           ;main.c: 335: default:
   943                           ;main.c: 336: if(!M._TURBO) return 0x18;
   944  001486  0101               	movlb	(_M+27) shr (0+8)
   945  001488  A395               	btfss	(_M+27)& (0+255),1,b
   946  00148A  0C18               	retlw	24
   947                           ;main.c: 337: else return 0x19;
   948  00148C  0C19               	retlw	25
   949  00148E                     l66:
   950  00148E  C08B  FFE8         	movff	_DtKNF+7,wreg
   951  001492  0A00               	xorlw	0
   952  001494  E0E8               	bz	l67
   953  001496  0A01               	xorlw	1
   954  001498  E0EA               	bz	l70
   955  00149A  0A03               	xorlw	3
   956  00149C  E0EC               	bz	l73
   957  00149E  0A01               	xorlw	1
   958  0014A0  E0EE               	bz	l76
   959  0014A2  D7F1               	goto	l79
   960                           ;main.c: 339: }
   961  0014A4                     __end_of_KodSterownika:
   962                           ;main.c: 345: void RefInterfaceData(void)
   963                           ;main.c: 346: {
   964  0014A4                     _RefInterfaceData:
   965  000000                     
   966                           ;main.c: 381: PFN._EnAleg=(DtKNF.tpkt==0);
   967  0014A4  EE00  F08B         	lfsr	0,_DtKNF+7
   968  0014A8  50EF               	movf	indf0,w,c
   969  0014AA  0E00               	movlw	0
   970  0014AC  B4D8               	btfsc	status,2,c
   971  0014AE  0E01               	movlw	1
   972  0014B0  6E00               	movwf	btemp,c
   973  0014B2  EE01  F059         	lfsr	0,_PFN+2
   974  0014B6  3200               	rrcf	btemp,f,c
   975  0014B8  3200               	rrcf	btemp,f,c
   976  0014BA  50EF               	movf	indf0,w,c
   977  0014BC  1800               	xorwf	btemp,w,c
   978  0014BE  0B7F               	andlw	-129
   979  0014C0  1800               	xorwf	btemp,w,c
   980  0014C2  6EEF               	movwf	indf0,c
   981                           ;main.c: 382: PFN._plmCO=M._PRACA&&!M._RPM_CW&&R
      +                          dPrt(5);
   982  0014C4  0101               	movlb	(_M+27) shr (0+8)
   983  0014C6  B595               	btfsc	(_M+27)& (0+255),2,b
   984  0014C8  BF95               	btfsc	(_M+27)& (0+255),7,b
   985  0014CA  D006               	goto	u440
   986  0014CC  0E05               	movlw	5
   987  0014CE  ECA6  F068         	call	_RdPrt
   988  0014D2  E302               	bnc	u440
   989  0014D4  0E01               	movlw	1
   990  0014D6  D001               	goto	u450
   991  0014D8                     u440:
   992  0014D8  0E00               	movlw	0
   993  0014DA                     u450:
   994  0014DA  6E00               	movwf	btemp,c
   995  0014DC  EE01  F05A         	lfsr	0,_PFN+3
   996  0014E0  3A00               	swapf	btemp,f,c
   997  0014E2  3600               	rlcf	btemp,f,c
   998  0014E4  50EF               	movf	indf0,w,c
   999  0014E6  1800               	xorwf	btemp,w,c
  1000  0014E8  0BDF               	andlw	-33
  1001  0014EA  1800               	xorwf	btemp,w,c
  1002  0014EC  6EEF               	movwf	indf0,c
  1003                           ;main.c: 383: PFN._plmCW=M._PRACA&&M._RPM_CW&&Rd
      +                          Prt(5);
  1004  0014EE  0101               	movlb	(_M+27) shr (0+8)
  1005  0014F0  B595               	btfsc	(_M+27)& (0+255),2,b
  1006  0014F2  AF95               	btfss	(_M+27)& (0+255),7,b
  1007  0014F4  D006               	goto	u500
  1008  0014F6  0E05               	movlw	5
  1009  0014F8  ECA6  F068         	call	_RdPrt
  1010  0014FC  E302               	bnc	u500
  1011  0014FE  0E01               	movlw	1
  1012  001500  D001               	goto	u510
  1013  001502                     u500:
  1014  001502  0E00               	movlw	0
  1015  001504                     u510:
  1016  001504  6E00               	movwf	btemp,c
  1017  001506  EE01  F05A         	lfsr	0,_PFN+3
  1018  00150A  3A00               	swapf	btemp,f,c
  1019  00150C  3600               	rlcf	btemp,f,c
  1020  00150E  3600               	rlcf	btemp,f,c
  1021  001510  50EF               	movf	indf0,w,c
  1022  001512  1800               	xorwf	btemp,w,c
  1023  001514  0BBF               	andlw	-65
  1024  001516  1800               	xorwf	btemp,w,c
  1025  001518  6EEF               	movwf	indf0,c
  1026                           ;main.c: 384: PFN._ofnserw=M._AKTYWNE_SRW;
  1027  00151A  C18C  F000         	movff	_M+18,btemp
  1028  00151E  EE01  F05A         	lfsr	0,_PFN+3
  1029  001522  3200               	rrcf	btemp,f,c
  1030  001524  3200               	rrcf	btemp,f,c
  1031  001526  50EF               	movf	indf0,w,c
  1032  001528  1800               	xorwf	btemp,w,c
  1033  00152A  0B7F               	andlw	-129
  1034  00152C  1800               	xorwf	btemp,w,c
  1035  00152E  6EEF               	movwf	indf0,c
  1036                           ;main.c: 385: PFN._oaleg=M._AKTYWNE_AL;
  1037  001530  C18E  F000         	movff	_M+20,btemp
  1038  001534  EE01  F05B         	lfsr	0,_PFN+4
  1039  001538  50EF               	movf	indf0,w,c
  1040  00153A  1800               	xorwf	btemp,w,c
  1041  00153C  0BFE               	andlw	-2
  1042  00153E  1800               	xorwf	btemp,w,c
  1043  001540  6EEF               	movwf	indf0,c
  1044                           ;main.c: 386: PFN._opKNF=M._AKTYWNE_KNF;
  1045  001542  C192  F000         	movff	_M+24,btemp
  1046  001546  EE01  F05B         	lfsr	0,_PFN+4
  1047  00154A  3600               	rlcf	btemp,f,c
  1048  00154C  3600               	rlcf	btemp,f,c
  1049  00154E  3600               	rlcf	btemp,f,c
  1050  001550  50EF               	movf	indf0,w,c
  1051  001552  1800               	xorwf	btemp,w,c
  1052  001554  0BF7               	andlw	-9
  1053  001556  1800               	xorwf	btemp,w,c
  1054  001558  6EEF               	movwf	indf0,c
  1055                           ;main.c: 387: PFN._enKNF=DtKNF.enknf;
  1056  00155A  C084  F000         	movff	_DtKNF,btemp
  1057  00155E  0101               	movlb	(_PFN+4) shr (0+8)
  1058  001560  995B               	bcf	(_PFN+4)& (0+255),4,b
  1059  001562  B000               	btfsc	btemp,0,c
  1060  001564  895B               	bsf	(_PFN+4)& (0+255),4,b
  1061                           ;main.c: 389: PFN._tdzCO=PFN._plmCO&&M._pob_DzCO
      +                          ;
  1062  001566  AB5A               	btfss	(_PFN+3)& (0+255),5,b
  1063  001568  D005               	goto	u550
  1064  00156A  5186               	movf	(_M+12)& (0+255),w,b
  1065  00156C  1187               	iorwf	(_M+13)& (0+255),w,b
  1066  00156E  E002               	bz	u550
  1067  001570  0E01               	movlw	1
  1068  001572  D001               	goto	u560
  1069  001574                     u550:
  1070  001574  0E00               	movlw	0
  1071  001576                     u560:
  1072  001576  6E00               	movwf	btemp,c
  1073  001578  EE01  F05B         	lfsr	0,_PFN+4
  1074  00157C  3A00               	swapf	btemp,f,c
  1075  00157E  3600               	rlcf	btemp,f,c
  1076  001580  50EF               	movf	indf0,w,c
  1077  001582  1800               	xorwf	btemp,w,c
  1078  001584  0BDF               	andlw	-33
  1079  001586  1800               	xorwf	btemp,w,c
  1080  001588  6EEF               	movwf	indf0,c
  1081                           ;main.c: 390: PFN._tdzCW=PFN._plmCW&&M._pob_DzCW
      +                          ;
  1082  00158A  0101               	movlb	(_PFN+3) shr (0+8)
  1083  00158C  AD5A               	btfss	(_PFN+3)& (0+255),6,b
  1084  00158E  D005               	goto	u590
  1085  001590  5188               	movf	(_M+14)& (0+255),w,b
  1086  001592  1189               	iorwf	(_M+15)& (0+255),w,b
  1087  001594  E002               	bz	u590
  1088  001596  0E01               	movlw	1
  1089  001598  D001               	goto	u600
  1090  00159A                     u590:
  1091  00159A  0E00               	movlw	0
  1092  00159C                     u600:
  1093  00159C  6E00               	movwf	btemp,c
  1094  00159E  EE01  F05B         	lfsr	0,_PFN+4
  1095  0015A2  3A00               	swapf	btemp,f,c
  1096  0015A4  3600               	rlcf	btemp,f,c
  1097  0015A6  3600               	rlcf	btemp,f,c
  1098  0015A8  50EF               	movf	indf0,w,c
  1099  0015AA  1800               	xorwf	btemp,w,c
  1100  0015AC  0BBF               	andlw	-65
  1101  0015AE  1800               	xorwf	btemp,w,c
  1102  0015B0  6EEF               	movwf	indf0,c
  1103                           ;main.c: 393: PFN._pgd=M._AKTYWNE_PGD;
  1104  0015B2  C190  F000         	movff	_M+22,btemp
  1105  0015B6  EE01  F05C         	lfsr	0,_PFN+5
  1106  0015BA  3600               	rlcf	btemp,f,c
  1107  0015BC  3600               	rlcf	btemp,f,c
  1108  0015BE  50EF               	movf	indf0,w,c
  1109  0015C0  1800               	xorwf	btemp,w,c
  1110  0015C2  0BFB               	andlw	-5
  1111  0015C4  1800               	xorwf	btemp,w,c
  1112  0015C6  6EEF               	movwf	indf0,c
  1113                           ;main.c: 394: PFN._obgCO=M._PRACA&&!M._RPM_CW;
  1114  0015C8  0101               	movlb	(_M+27) shr (0+8)
  1115  0015CA  B595               	btfsc	(_M+27)& (0+255),2,b
  1116  0015CC  BF95               	btfsc	(_M+27)& (0+255),7,b
  1117  0015CE  D002               	goto	u630
  1118  0015D0  0E01               	movlw	1
  1119  0015D2  D001               	goto	u640
  1120  0015D4                     u630:
  1121  0015D4  0E00               	movlw	0
  1122  0015D6                     u640:
  1123  0015D6  6E00               	movwf	btemp,c
  1124  0015D8  EE01  F05B         	lfsr	0,_PFN+4
  1125  0015DC  3600               	rlcf	btemp,f,c
  1126  0015DE  50EF               	movf	indf0,w,c
  1127  0015E0  1800               	xorwf	btemp,w,c
  1128  0015E2  0BFD               	andlw	-3
  1129  0015E4  1800               	xorwf	btemp,w,c
  1130  0015E6  6EEF               	movwf	indf0,c
  1131                           ;main.c: 395: PFN._obgCW=M._PRACA&&M._RPM_CW;
  1132  0015E8  0101               	movlb	(_M+27) shr (0+8)
  1133  0015EA  B595               	btfsc	(_M+27)& (0+255),2,b
  1134  0015EC  AF95               	btfss	(_M+27)& (0+255),7,b
  1135  0015EE  D002               	goto	u670
  1136  0015F0  0E01               	movlw	1
  1137  0015F2  D001               	goto	u680
  1138  0015F4                     u670:
  1139  0015F4  0E00               	movlw	0
  1140  0015F6                     u680:
  1141  0015F6  6E00               	movwf	btemp,c
  1142  0015F8  EE01  F05B         	lfsr	0,_PFN+4
  1143  0015FC  3600               	rlcf	btemp,f,c
  1144  0015FE  3600               	rlcf	btemp,f,c
  1145  001600  50EF               	movf	indf0,w,c
  1146  001602  1800               	xorwf	btemp,w,c
  1147  001604  0BFB               	andlw	-5
  1148  001606  1800               	xorwf	btemp,w,c
  1149  001608  6EEF               	movwf	indf0,c
  1150                           ;main.c: 397: PFN._errCS=DtCS._error;
  1151  00160A  C204  F000         	movff	_DtCS,btemp
  1152  00160E  0101               	movlb	(_PFN+5) shr (0+8)
  1153  001610  9B5C               	bcf	(_PFN+5)& (0+255),5,b
  1154  001612  B600               	btfsc	btemp,3,c
  1155  001614  8B5C               	bsf	(_PFN+5)& (0+255),5,b
  1156                           ;main.c: 398: PFN._errCO=DtCO._err_CO;
  1157  001616  C20C  F000         	movff	_DtCO,btemp
  1158  00161A  9D5C               	bcf	(_PFN+5)& (0+255),6,b
  1159  00161C  B000               	btfsc	btemp,0,c
  1160  00161E  8D5C               	bsf	(_PFN+5)& (0+255),6,b
  1161                           ;main.c: 399: PFN._errCW=DtCW._err_CW;
  1162  001620  C21B  F000         	movff	_DtCW,btemp
  1163  001624  9F5C               	bcf	(_PFN+5)& (0+255),7,b
  1164  001626  B000               	btfsc	btemp,0,c
  1165  001628  8F5C               	bsf	(_PFN+5)& (0+255),7,b
  1166                           ;main.c: 400: PFN._fnoCS=DtCS._no_mont;
  1167  00162A  C205  F000         	movff	_DtCS+1,btemp
  1168  00162E  EE01  F05D         	lfsr	0,_PFN+6
  1169  001632  50EF               	movf	indf0,w,c
  1170  001634  1800               	xorwf	btemp,w,c
  1171  001636  0BFE               	andlw	-2
  1172  001638  1800               	xorwf	btemp,w,c
  1173  00163A  6EEF               	movwf	indf0,c
  1174                           ;main.c: 402: PFN._ofzima=PFN._zima;
  1175  00163C  C157  F000         	movff	_PFN,btemp
  1176  001640  935D               	bcf	(_PFN+6)& (0+255),1,b
  1177  001642  B400               	btfsc	btemp,2,c
  1178  001644  835D               	bsf	(_PFN+6)& (0+255),1,b
  1179                           ;main.c: 403: PFN._oflato=PFN._lato;
  1180  001646  C157  F000         	movff	_PFN,btemp
  1181  00164A  955D               	bcf	(_PFN+6)& (0+255),2,b
  1182  00164C  B200               	btfsc	btemp,1,c
  1183  00164E  855D               	bsf	(_PFN+6)& (0+255),2,b
  1184                           ;main.c: 404: PFN._ofoff=PFN._off;
  1185  001650  C157  F000         	movff	_PFN,btemp
  1186  001654  975D               	bcf	(_PFN+6)& (0+255),3,b
  1187  001656  B000               	btfsc	btemp,0,c
  1188  001658  875D               	bsf	(_PFN+6)& (0+255),3,b
  1189                           ;main.c: 406: PFN._errIN=DtIN._err_IN;
  1190  00165A  C22A  F000         	movff	_DtIN,btemp
  1191  00165E  995D               	bcf	(_PFN+6)& (0+255),4,b
  1192  001660  B000               	btfsc	btemp,0,c
  1193  001662  895D               	bsf	(_PFN+6)& (0+255),4,b
  1194                           ;main.c: 407: PFN._pmpPWM=(DtKNF.rdpm!=0)?1:0;
  1195  001664  0E00               	movlw	0
  1196  001666  6A00               	clrf	btemp,c
  1197  001668  0100               	movlb	(_DtKNF+9) shr (0+8)
  1198  00166A  638D               	cpfseq	(_DtKNF+9)& (0+255),b
  1199  00166C  2A00               	incf	btemp,f,c
  1200  00166E  EE01  F05D         	lfsr	0,_PFN+6
  1201  001672  3A00               	swapf	btemp,f,c
  1202  001674  3600               	rlcf	btemp,f,c
  1203  001676  50EF               	movf	indf0,w,c
  1204  001678  1800               	xorwf	btemp,w,c
  1205  00167A  0BDF               	andlw	-33
  1206  00167C  1800               	xorwf	btemp,w,c
  1207  00167E  6EEF               	movwf	indf0,c
  1208                           ;main.c: 408: PFN._trbECO=(DtKNF.teco!=0)?1:0;
  1209  001680  0E00               	movlw	0
  1210  001682  6A00               	clrf	btemp,c
  1211  001684  0100               	movlb	(_DtKNF+12) shr (0+8)
  1212  001686  6390               	cpfseq	(_DtKNF+12)& (0+255),b
  1213  001688  2A00               	incf	btemp,f,c
  1214  00168A  EE01  F05D         	lfsr	0,_PFN+6
  1215  00168E  3A00               	swapf	btemp,f,c
  1216  001690  3600               	rlcf	btemp,f,c
  1217  001692  3600               	rlcf	btemp,f,c
  1218  001694  50EF               	movf	indf0,w,c
  1219  001696  1800               	xorwf	btemp,w,c
  1220  001698  0BBF               	andlw	-65
  1221  00169A  1800               	xorwf	btemp,w,c
  1222  00169C  6EEF               	movwf	indf0,c
  1223                           ;main.c: 410: if(PFN._ofnserw) PFN.b_ofnserw=1;
  1224  00169E  0101               	movlb	(_PFN+3) shr (0+8)
  1225  0016A0  BF5A               	btfsc	(_PFN+3)& (0+255),7,b
  1226  0016A2  8170               	bsf	(_PFN+25)& (0+255),0,b
  1227                           ;main.c: 411: if(PFN._ofnserw&&!PFN._fnserw) PFN
      +                          ._fnserw=1;
  1228  0016A4  BF5A               	btfsc	(_PFN+3)& (0+255),7,b
  1229  0016A6  BD58               	btfsc	(_PFN+1)& (0+255),6,b
  1230  0016A8  D002               	goto	l84
  1231  0016AA  0101               	movlb	(_PFN+1) shr (0+8)
  1232  0016AC  8D58               	bsf	(_PFN+1)& (0+255),6,b
  1233  0016AE                     l84:
  1234                           ;main.c: 412: if(PFN.b_ofnserw&&!PFN._ofnserw) P
      +                          FN._fnserw=0;
  1235  0016AE  0101               	movlb	(_PFN+25) shr (0+8)
  1236  0016B0  B170               	btfsc	(_PFN+25)& (0+255),0,b
  1237  0016B2  BF5A               	btfsc	(_PFN+3)& (0+255),7,b
  1238  0016B4  D002               	goto	l85
  1239  0016B6  0101               	movlb	(_PFN+1) shr (0+8)
  1240  0016B8  9D58               	bcf	(_PFN+1)& (0+255),6,b
  1241  0016BA                     l85:
  1242                           ;main.c: 413: if(PFN._oaleg) PFN.b_oaleg=1;
  1243  0016BA  0101               	movlb	(_PFN+4) shr (0+8)
  1244  0016BC  B15B               	btfsc	(_PFN+4)& (0+255),0,b
  1245  0016BE  8370               	bsf	(_PFN+25)& (0+255),1,b
  1246                           ;main.c: 414: if(PFN._oaleg&&!PFN._aleg) PFN._al
      +                          eg=1;
  1247  0016C0  B15B               	btfsc	(_PFN+4)& (0+255),0,b
  1248  0016C2  B159               	btfsc	(_PFN+2)& (0+255),0,b
  1249  0016C4  D002               	goto	l87
  1250  0016C6  0101               	movlb	(_PFN+2) shr (0+8)
  1251  0016C8  8159               	bsf	(_PFN+2)& (0+255),0,b
  1252  0016CA                     l87:
  1253                           ;main.c: 415: if(PFN.b_oaleg&&!PFN._oaleg) PFN._
      +                          aleg=0;
  1254  0016CA  0101               	movlb	(_PFN+25) shr (0+8)
  1255  0016CC  B370               	btfsc	(_PFN+25)& (0+255),1,b
  1256  0016CE  B15B               	btfsc	(_PFN+4)& (0+255),0,b
  1257  0016D0  0012               	return	
  1258  0016D2  0101               	movlb	(_PFN+2) shr (0+8)
  1259  0016D4  9159               	bcf	(_PFN+2)& (0+255),0,b
  1260                           ;main.c: 428: }
  1261  0016D6  0012               	return	
  1262  0016D8                     __end_of_RefInterfaceData:
  1263                           ;main.c: 432: void KolejkaPobudzen(void)
  1264                           ;main.c: 433: {
  1265  0016D8                     _KolejkaPobudzen:
  1266  000000                     
  1267                           ;main.c: 434: unsigned char wr=0;
  1268  0016D8  6AD9               	clrf	fsr2l,c
  1269                           ;main.c: 437: if(M._AKTYWNE_KNF)
  1270  0016DA  0101               	movlb	(_M+24) shr (0+8)
  1271  0016DC  5192               	movf	(_M+24)& (0+255),w,b
  1272  0016DE  1193               	iorwf	(_M+25)& (0+255),w,b
  1273  0016E0  E043               	bz	l90
  1274                           ;main.c: 438: {
  1275  0016E2  EE01  F07E         	lfsr	0,_M+4
  1276  0016E6  6AEE               	clrf	postinc0,c
  1277  0016E8  6AEE               	clrf	postinc0,c
  1278                           ;main.c: 440: M._pob_AL=0;
  1279  0016EA  EE01  F080         	lfsr	0,_M+6
  1280  0016EE  6AEE               	clrf	postinc0,c
  1281  0016F0  6AEE               	clrf	postinc0,c
  1282                           ;main.c: 441: M._pob_CO=0;
  1283  0016F2  EE01  F084         	lfsr	0,_M+10
  1284  0016F6  6AEE               	clrf	postinc0,c
  1285  0016F8  6AEE               	clrf	postinc0,c
  1286                           ;main.c: 442: M._pob_CW=0;
  1287  0016FA  EE01  F082         	lfsr	0,_M+8
  1288  0016FE  6AEE               	clrf	postinc0,c
  1289  001700  6AEE               	clrf	postinc0,c
  1290                           ;main.c: 443: M._pob_DzCO=0;
  1291  001702  EE01  F086         	lfsr	0,_M+12
  1292  001706  6AEE               	clrf	postinc0,c
  1293  001708  6AEE               	clrf	postinc0,c
  1294                           ;main.c: 444: M._pob_DzCW=0;
  1295  00170A  EE01  F088         	lfsr	0,_M+14
  1296  00170E  6AEE               	clrf	postinc0,c
  1297  001710  6AEE               	clrf	postinc0,c
  1298                           ;main.c: 445: if((PFN.poz==2)||(PFN.poz==3))
  1299  001712  5176               	movf	(_PFN+31)& (0+255),w,b
  1300  001714  0A02               	xorlw	2
  1301  001716  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1302  001718  E004               	bz	u930
  1303  00171A  5176               	movf	(_PFN+31)& (0+255),w,b
  1304  00171C  0A03               	xorlw	3
  1305  00171E  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1306  001720  E11A               	bnz	l91
  1307  001722                     u930:
  1308                           ;main.c: 446: {
  1309  001722  0100               	movlb	_DtKNF shr (0+8)
  1310  001724  A584               	btfss	_DtKNF& (0+255),2,b
  1311  001726  D006               	goto	l92
  1312  001728  0101               	movlb	(_M+2) shr (0+8)
  1313  00172A  0E01               	movlw	1
  1314  00172C  6F7C               	movwf	(_M+2)& (0+255),b
  1315  00172E  0E00               	movlw	0
  1316  001730  6B7D               	clrf	(_M+3)& (0+255),b
  1317  001732  D004               	goto	l93
  1318  001734                     l92:
  1319                           ;main.c: 448: else M._pob_KCW=0;
  1320  001734  EE01  F07C         	lfsr	0,_M+2
  1321  001738  6AEE               	clrf	postinc0,c
  1322  00173A  6AEE               	clrf	postinc0,c
  1323  00173C                     l93:
  1324                           ;main.c: 449: if(DtKNF.wymCO) M._pob_KCO=1;
  1325  00173C  0100               	movlb	_DtKNF shr (0+8)
  1326  00173E  A384               	btfss	_DtKNF& (0+255),1,b
  1327  001740  D005               	goto	l94
  1328  001742  0101               	movlb	_M shr (0+8)
  1329  001744  0E01               	movlw	1
  1330  001746  6F7A               	movwf	_M& (0+255),b
  1331  001748  6B7B               	clrf	(_M+1)& (0+255),b
  1332  00174A  0C00               	retlw	0
  1333  00174C                     l94:
  1334                           ;main.c: 450: else M._pob_KCO=0;
  1335  00174C  EE01  F07A         	lfsr	0,_M
  1336  001750  6AEE               	clrf	postinc0,c
  1337  001752  6AEE               	clrf	postinc0,c
  1338                           ;main.c: 451: }
  1339  001754  0012               	return	
  1340  001756                     l91:
  1341                           ;main.c: 452: else
  1342  001756  EE01  F07C         	lfsr	0,_M+2
  1343  00175A  6AEE               	clrf	postinc0,c
  1344  00175C  6AEE               	clrf	postinc0,c
  1345                           ;main.c: 455: M._pob_KCO=0;
  1346  00175E  EE01  F07A         	lfsr	0,_M
  1347  001762  6AEE               	clrf	postinc0,c
  1348  001764  6AEE               	clrf	postinc0,c
  1349                           ;main.c: 456: }
  1350  001766  0012               	return	
  1351  001768                     l90:
  1352                           ;main.c: 458: else
  1353  001768  EE01  F07C         	lfsr	0,_M+2
  1354  00176C  6AEE               	clrf	postinc0,c
  1355  00176E  6AEE               	clrf	postinc0,c
  1356                           ;main.c: 462: M._pob_KCO=0;
  1357  001770  EE01  F07A         	lfsr	0,_M
  1358  001774  6AEE               	clrf	postinc0,c
  1359  001776  6AEE               	clrf	postinc0,c
  1360                           ;main.c: 463: if(M._AKTYWNE_SRW&&(PFN.poz==3))
  1361  001778  0101               	movlb	(_M+18) shr (0+8)
  1362  00177A  518C               	movf	(_M+18)& (0+255),w,b
  1363  00177C  118D               	iorwf	(_M+19)& (0+255),w,b
  1364  00177E  E01E               	bz	l98
  1365  001780  5176               	movf	(_PFN+31)& (0+255),w,b
  1366  001782  0A03               	xorlw	3
  1367  001784  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1368  001786  E11A               	bnz	l98
  1369                           ;main.c: 464: {
  1370  001788  0101               	movlb	(_M+4) shr (0+8)
  1371  00178A  0E01               	movlw	1
  1372  00178C  6F7E               	movwf	(_M+4)& (0+255),b
  1373  00178E  0E00               	movlw	0
  1374  001790  6B7F               	clrf	(_M+5)& (0+255),b
  1375                           ;main.c: 466: M._pob_AL=0;
  1376  001792  EE01  F080         	lfsr	0,_M+6
  1377  001796  6AEE               	clrf	postinc0,c
  1378  001798  6AEE               	clrf	postinc0,c
  1379                           ;main.c: 467: M._pob_CW=0;
  1380  00179A  EE01  F082         	lfsr	0,_M+8
  1381  00179E  6AEE               	clrf	postinc0,c
  1382  0017A0  6AEE               	clrf	postinc0,c
  1383                           ;main.c: 468: M._pob_CO=0;
  1384  0017A2  EE01  F084         	lfsr	0,_M+10
  1385  0017A6  6AEE               	clrf	postinc0,c
  1386  0017A8  6AEE               	clrf	postinc0,c
  1387                           ;main.c: 469: M._pob_DzCO=0;
  1388  0017AA  EE01  F086         	lfsr	0,_M+12
  1389  0017AE  6AEE               	clrf	postinc0,c
  1390  0017B0  6AEE               	clrf	postinc0,c
  1391                           ;main.c: 470: M._pob_DzCW=0;
  1392  0017B2  EE01  F088         	lfsr	0,_M+14
  1393  0017B6  6AEE               	clrf	postinc0,c
  1394  0017B8  6AEE               	clrf	postinc0,c
  1395                           ;main.c: 471: }
  1396  0017BA  0012               	return	
  1397  0017BC                     l98:
  1398                           ;main.c: 472: else
  1399  0017BC  EE01  F07E         	lfsr	0,_M+4
  1400  0017C0  6AEE               	clrf	postinc0,c
  1401  0017C2  6AEE               	clrf	postinc0,c
  1402                           ;main.c: 476: if(M._AKTYWNE_AL)
  1403  0017C4  0101               	movlb	(_M+20) shr (0+8)
  1404  0017C6  518E               	movf	(_M+20)& (0+255),w,b
  1405  0017C8  118F               	iorwf	(_M+21)& (0+255),w,b
  1406  0017CA  E023               	bz	l100
  1407                           ;main.c: 477: {
  1408  0017CC  0E46               	movlw	70
  1409  0017CE  0102               	movlb	(_DtCW+2) shr (0+8)
  1410  0017D0  611D               	cpfslt	(_DtCW+2)& (0+255),b
  1411  0017D2  D006               	goto	l101
  1412  0017D4  0101               	movlb	(_M+6) shr (0+8)
  1413  0017D6  0E01               	movlw	1
  1414  0017D8  6F80               	movwf	(_M+6)& (0+255),b
  1415  0017DA  0E00               	movlw	0
  1416  0017DC  6B81               	clrf	(_M+7)& (0+255),b
  1417  0017DE  D008               	goto	l102
  1418  0017E0                     l101:
  1419                           ;main.c: 479: else
  1420  0017E0  EE01  F080         	lfsr	0,_M+6
  1421  0017E4  6AEE               	clrf	postinc0,c
  1422  0017E6  6AEE               	clrf	postinc0,c
  1423                           ;main.c: 482: M._AKTYWNE_AL=0;
  1424  0017E8  EE01  F08E         	lfsr	0,_M+20
  1425  0017EC  6AEE               	clrf	postinc0,c
  1426  0017EE  6AEE               	clrf	postinc0,c
  1427  0017F0                     l102:
  1428                           ;main.c: 483: }
  1429  0017F0  EE01  F082         	lfsr	0,_M+8
  1430  0017F4  6AEE               	clrf	postinc0,c
  1431  0017F6  6AEE               	clrf	postinc0,c
  1432                           ;main.c: 485: M._pob_CO=0;
  1433  0017F8  EE01  F084         	lfsr	0,_M+10
  1434  0017FC  6AEE               	clrf	postinc0,c
  1435  0017FE  6AEE               	clrf	postinc0,c
  1436                           ;main.c: 486: M._pob_DzCO=0;
  1437  001800  EE01  F086         	lfsr	0,_M+12
  1438  001804  6AEE               	clrf	postinc0,c
  1439  001806  6AEE               	clrf	postinc0,c
  1440                           ;main.c: 487: M._pob_DzCW=0;
  1441  001808  EE01  F088         	lfsr	0,_M+14
  1442  00180C  6AEE               	clrf	postinc0,c
  1443  00180E  6AEE               	clrf	postinc0,c
  1444                           ;main.c: 488: }
  1445  001810  0012               	return	
  1446  001812                     l100:
  1447                           ;main.c: 489: else
  1448  001812  EE01  F080         	lfsr	0,_M+6
  1449  001816  6AEE               	clrf	postinc0,c
  1450  001818  6AEE               	clrf	postinc0,c
  1451                           ;main.c: 493: if(DtKNF.tpkt!=0) wr=RdPrt(11)&&((
      +                          PFN.poz==2)||(PFN.poz==3));
  1452  00181A  EE00  F08B         	lfsr	0,_DtKNF+7
  1453  00181E  50EF               	movf	indf0,w,c
  1454  001820  E00F               	bz	l104
  1455  001822  0E0B               	movlw	11
  1456  001824  ECA6  F068         	call	_RdPrt
  1457  001828  E31A               	bnc	u1140
  1458  00182A  0101               	movlb	(_PFN+31) shr (0+8)
  1459  00182C  5176               	movf	(_PFN+31)& (0+255),w,b
  1460  00182E  0A02               	xorlw	2
  1461  001830  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1462  001832  E004               	bz	u1061
  1463  001834  5176               	movf	(_PFN+31)& (0+255),w,b
  1464  001836  0A03               	xorlw	3
  1465  001838  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1466  00183A  E111               	bnz	u1140
  1467  00183C                     u1061:
  1468  00183C  0E01               	movlw	1
  1469  00183E  D010               	goto	u1150
  1470  001840                     l104:
  1471                           ;main.c: 494: else wr=DtCW._wpz_CW&&DtCO._pz_CO&
      +                          &((PFN.poz==2)||(PFN.poz==3));
  1472  001840  0102               	movlb	_DtCW shr (0+8)
  1473  001842  A71B               	btfss	_DtCW& (0+255),3,b
  1474  001844  D00C               	goto	u1140
  1475  001846  0102               	movlb	(_DtCO+1) shr (0+8)
  1476  001848  A30D               	btfss	(_DtCO+1)& (0+255),1,b
  1477  00184A  D009               	goto	u1140
  1478  00184C  0101               	movlb	(_PFN+31) shr (0+8)
  1479  00184E  5176               	movf	(_PFN+31)& (0+255),w,b
  1480  001850  0A02               	xorlw	2
  1481  001852  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1482  001854  E0F3               	bz	u1061
  1483  001856  5176               	movf	(_PFN+31)& (0+255),w,b
  1484  001858  0A03               	xorlw	3
  1485  00185A  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1486  00185C  E0EF               	bz	u1061
  1487  00185E                     u1140:
  1488  00185E  0E00               	movlw	0
  1489  001860                     u1150:
  1490  001860  0100               	movlb	__Lparam shr (0+8)
  1491  001862  6FD7               	movwf	?a_KolejkaPobudzen^(__Lparam& (0+65280)),
      +                          b
  1492                           ;main.c: 495: if(wr!=0)
  1493  001864  51D7               	movf	?a_KolejkaPobudzen^(__Lparam& (0+65280)),w
  1494  001866  E012               	bz	l106
  1495                           ;main.c: 496: {
  1496  001868  0101               	movlb	(_M+8) shr (0+8)
  1497  00186A  0E01               	movlw	1
  1498  00186C  6F82               	movwf	(_M+8)& (0+255),b
  1499  00186E  0E00               	movlw	0
  1500  001870  6B83               	clrf	(_M+9)& (0+255),b
  1501                           ;main.c: 498: M._pob_CO=0;
  1502  001872  EE01  F084         	lfsr	0,_M+10
  1503  001876  6AEE               	clrf	postinc0,c
  1504  001878  6AEE               	clrf	postinc0,c
  1505                           ;main.c: 499: M._pob_DzCO=0;
  1506  00187A  EE01  F086         	lfsr	0,_M+12
  1507  00187E  6AEE               	clrf	postinc0,c
  1508  001880  6AEE               	clrf	postinc0,c
  1509                           ;main.c: 500: M._pob_DzCW=0;
  1510  001882  EE01  F088         	lfsr	0,_M+14
  1511  001886  6AEE               	clrf	postinc0,c
  1512  001888  6AEE               	clrf	postinc0,c
  1513                           ;main.c: 501: }
  1514  00188A  0012               	return	
  1515  00188C                     l106:
  1516                           ;main.c: 502: else
  1517  00188C  EE01  F082         	lfsr	0,_M+8
  1518  001890  6AEE               	clrf	postinc0,c
  1519  001892  6AEE               	clrf	postinc0,c
  1520                           ;main.c: 506: if(RdPrt(12)&&(PFN.poz==3))
  1521  001894  0E0C               	movlw	12
  1522  001896  ECA6  F068         	call	_RdPrt
  1523  00189A  E313               	bnc	l108
  1524  00189C  0101               	movlb	(_PFN+31) shr (0+8)
  1525  00189E  5176               	movf	(_PFN+31)& (0+255),w,b
  1526  0018A0  0A03               	xorlw	3
  1527  0018A2  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1528  0018A4  E10E               	bnz	l108
  1529                           ;main.c: 507: {
  1530  0018A6  0101               	movlb	(_M+10) shr (0+8)
  1531  0018A8  0E01               	movlw	1
  1532  0018AA  6F84               	movwf	(_M+10)& (0+255),b
  1533  0018AC  0E00               	movlw	0
  1534  0018AE  6B85               	clrf	(_M+11)& (0+255),b
  1535                           ;main.c: 509: M._pob_DzCO=0;
  1536  0018B0  EE01  F086         	lfsr	0,_M+12
  1537  0018B4  6AEE               	clrf	postinc0,c
  1538  0018B6  6AEE               	clrf	postinc0,c
  1539                           ;main.c: 510: M._pob_DzCW=0;
  1540  0018B8  EE01  F088         	lfsr	0,_M+14
  1541  0018BC  6AEE               	clrf	postinc0,c
  1542  0018BE  6AEE               	clrf	postinc0,c
  1543                           ;main.c: 511: }
  1544  0018C0  0012               	return	
  1545  0018C2                     l108:
  1546                           ;main.c: 512: else
  1547  0018C2  EE01  F084         	lfsr	0,_M+10
  1548  0018C6  6AEE               	clrf	postinc0,c
  1549  0018C8  6AEE               	clrf	postinc0,c
  1550                           ;main.c: 516: if(RdPrt(9))
  1551  0018CA  0E09               	movlw	9
  1552  0018CC  ECA6  F068         	call	_RdPrt
  1553  0018D0  E30A               	bnc	l110
  1554                           ;main.c: 517: {
  1555  0018D2  0101               	movlb	(_M+12) shr (0+8)
  1556  0018D4  0E01               	movlw	1
  1557  0018D6  6F86               	movwf	(_M+12)& (0+255),b
  1558  0018D8  0E00               	movlw	0
  1559  0018DA  6B87               	clrf	(_M+13)& (0+255),b
  1560                           ;main.c: 519: M._pob_DzCW=0;
  1561  0018DC  EE01  F088         	lfsr	0,_M+14
  1562  0018E0  6AEE               	clrf	postinc0,c
  1563  0018E2  6AEE               	clrf	postinc0,c
  1564                           ;main.c: 520: }
  1565  0018E4  0012               	return	
  1566  0018E6                     l110:
  1567                           ;main.c: 521: else
  1568  0018E6  EE01  F086         	lfsr	0,_M+12
  1569  0018EA  6AEE               	clrf	postinc0,c
  1570  0018EC  6AEE               	clrf	postinc0,c
  1571                           ;main.c: 524: if(DtKNF.tpkt==0)
  1572  0018EE  EE00  F08B         	lfsr	0,_DtKNF+7
  1573  0018F2  50EF               	movf	indf0,w,c
  1574  0018F4  E10E               	bnz	l112
  1575                           ;main.c: 525: {
  1576  0018F6  0E0A               	movlw	10
  1577  0018F8  ECA6  F068         	call	_RdPrt
  1578  0018FC  E305               	bnc	l113
  1579  0018FE  0101               	movlb	(_M+14) shr (0+8)
  1580  001900  0E01               	movlw	1
  1581  001902  6F88               	movwf	(_M+14)& (0+255),b
  1582  001904  6B89               	clrf	(_M+15)& (0+255),b
  1583  001906  0C00               	retlw	0
  1584  001908                     l113:
  1585                           ;main.c: 528: else M._pob_DzCW=0;
  1586  001908  EE01  F088         	lfsr	0,_M+14
  1587  00190C  6AEE               	clrf	postinc0,c
  1588  00190E  6AEE               	clrf	postinc0,c
  1589                           ;main.c: 529: }
  1590  001910  0012               	return	
  1591  001912                     l112:
  1592                           ;main.c: 530: else M._pob_DzCW=0;
  1593  001912  EE01  F088         	lfsr	0,_M+14
  1594  001916  6AEE               	clrf	postinc0,c
  1595  001918  6AEE               	clrf	postinc0,c
  1596                           ;main.c: 531: }
  1597  00191A  0012               	return	
  1598  00191C                     __end_of_KolejkaPobudzen:
  1599                           ;main.c: 541: void DecyzjaAntyLeg(void)
  1600                           ;main.c: 542: {
  1601  00191C                     _DecyzjaAntyLeg:
  1602  000000                     
  1603                           ;main.c: 638: if(DtKNF.tpkt==0)
  1604  00191C  EE00  F08B         	lfsr	0,_DtKNF+7
  1605  001920  50EF               	movf	indf0,w,c
  1606  001922  E001 D096          	bnz	l117
  1607                           ;main.c: 639: {
  1608  001926  0101               	movlb	(_M+20) shr (0+8)
  1609  001928  518E               	movf	(_M+20)& (0+255),w,b
  1610  00192A  118F               	iorwf	(_M+21)& (0+255),w,b
  1611  00192C  E037               	bz	l118
  1612                           ;main.c: 643: {
  1613  00192E  EE00  F095         	lfsr	0,_DtKNF+17
  1614  001932  50EF               	movf	indf0,w,c
  1615  001934  E005               	bz	l119
  1616                           ;main.c: 645: {
  1617  001936  0E01               	movlw	1
  1618  001938  ECEC  F06E         	call	_StartRTG
  1619                           ;main.c: 647: M.LICZNIK_ANL=0;
  1620  00193C  0101               	movlb	(_M+33) shr (0+8)
  1621  00193E  6B9B               	clrf	(_M+33)& (0+255),b
  1622  001940                     l119:
  1623                           ;main.c: 648: }
  1624  001940  0101               	movlb	(_M+24) shr (0+8)
  1625  001942  5192               	movf	(_M+24)& (0+255),w,b
  1626  001944  1193               	iorwf	(_M+25)& (0+255),w,b
  1627  001946  E103               	bnz	u1280
  1628  001948  518C               	movf	(_M+18)& (0+255),w,b
  1629  00194A  118D               	iorwf	(_M+19)& (0+255),w,b
  1630  00194C  E005               	bz	l120
  1631  00194E                     u1280:
  1632                           ;main.c: 650: {
  1633  00194E  EE01  F08E         	lfsr	0,_M+20
  1634  001952  6AEE               	clrf	postinc0,c
  1635  001954  6AEE               	clrf	postinc0,c
  1636                           ;main.c: 652: return;
  1637  001956  0012               	return	
  1638  001958                     l120:
  1639                           ;main.c: 653: }
  1640  001958  0101               	movlb	(_PFN+31) shr (0+8)
  1641  00195A  5176               	movf	(_PFN+31)& (0+255),w,b
  1642  00195C  0A02               	xorlw	2
  1643  00195E  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1644  001960  E009               	bz	l121
  1645  001962  5176               	movf	(_PFN+31)& (0+255),w,b
  1646  001964  0A03               	xorlw	3
  1647  001966  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1648  001968  E005               	bz	l121
  1649                           ;main.c: 656: {
  1650  00196A  EE01  F08E         	lfsr	0,_M+20
  1651  00196E  6AEE               	clrf	postinc0,c
  1652  001970  6AEE               	clrf	postinc0,c
  1653                           ;main.c: 658: return;
  1654  001972  0012               	return	
  1655  001974                     l121:
  1656                           ;main.c: 659: }
  1657  001974  0E04               	movlw	4
  1658  001976  ECD4  F06E         	call	_RTM
  1659  00197A  6E00               	movwf	btemp,c
  1660  00197C  0E3C               	movlw	60
  1661  00197E  5C00               	subwf	btemp,w,c
  1662  001980  E305               	bnc	l122
  1663                           ;main.c: 662: {
  1664  001982  EE01  F08E         	lfsr	0,_M+20
  1665  001986  6AEE               	clrf	postinc0,c
  1666  001988  6AEE               	clrf	postinc0,c
  1667                           ;main.c: 664: return;
  1668  00198A  0012               	return	
  1669  00198C                     l122:
  1670                           ;main.c: 665: }
  1671  00198C  0101               	movlb	(_PFN+2) shr (0+8)
  1672  00198E  A759               	btfss	(_PFN+2)& (0+255),3,b
  1673  001990  D005               	goto	l118
  1674                           ;main.c: 669: {
  1675  001992  EE01  F08E         	lfsr	0,_M+20
  1676  001996  6AEE               	clrf	postinc0,c
  1677  001998  6AEE               	clrf	postinc0,c
  1678                           ;main.c: 671: return;
  1679  00199A  0012               	return	
  1680  00199C                     l118:
  1681                           ;main.c: 672: }
  1682  00199C  0101               	movlb	(_M+20) shr (0+8)
  1683  00199E  518E               	movf	(_M+20)& (0+255),w,b
  1684  0019A0  118F               	iorwf	(_M+21)& (0+255),w,b
  1685  0019A2  E151               	bnz	l124
  1686                           ;main.c: 677: {
  1687  0019A4  5192               	movf	(_M+24)& (0+255),w,b
  1688  0019A6  1193               	iorwf	(_M+25)& (0+255),w,b
  1689  0019A8  A4D8               	btfss	status,2,c
  1690  0019AA  0012               	return	
  1691  0019AC  518C               	movf	(_M+18)& (0+255),w,b
  1692  0019AE  118D               	iorwf	(_M+19)& (0+255),w,b
  1693  0019B0  A4D8               	btfss	status,2,c
  1694  0019B2  0012               	return	
  1695                           ;main.c: 679: {
  1696                           ;main.c: 681: }
  1697  0019B4  EE00  F095         	lfsr	0,_DtKNF+17
  1698  0019B8  50EF               	movf	indf0,w,c
  1699  0019BA  E028               	bz	l126
  1700                           ;main.c: 685: {
  1701  0019BC  0E01               	movlw	1
  1702  0019BE  ECFE  F06E         	call	_RTG
  1703  0019C2  6E00               	movwf	btemp,c
  1704  0019C4  0E01               	movlw	1
  1705  0019C6  5C00               	subwf	btemp,w,c
  1706  0019C8  E321               	bnc	l126
  1707                           ;main.c: 687: {
  1708  0019CA  0E01               	movlw	1
  1709  0019CC  ECEC  F06E         	call	_StartRTG
  1710                           ;main.c: 689: M.LICZNIK_ANL++;
  1711  0019D0  0101               	movlb	(_M+33) shr (0+8)
  1712  0019D2  2B9B               	incf	(_M+33)& (0+255),f,b
  1713                           ;main.c: 690: if(M.LICZNIK_ANL>=168)
  1714  0019D4  0EA7               	movlw	-89
  1715  0019D6  659B               	cpfsgt	(_M+33)& (0+255),b
  1716  0019D8  D011               	goto	l128
  1717                           ;main.c: 691: {
  1718  0019DA  6B9B               	clrf	(_M+33)& (0+255),b
  1719                           ;main.c: 693: if((PFN.poz==2)||(PFN.poz==3)) M._
      +                          AKTYWNE_AL=1;
  1720  0019DC  5176               	movf	(_PFN+31)& (0+255),w,b
  1721  0019DE  0A02               	xorlw	2
  1722  0019E0  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1723  0019E2  E004               	bz	u1430
  1724  0019E4  5176               	movf	(_PFN+31)& (0+255),w,b
  1725  0019E6  0A03               	xorlw	3
  1726  0019E8  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1727  0019EA  E104               	bnz	l129
  1728  0019EC                     u1430:
  1729  0019EC  0101               	movlb	(_M+20) shr (0+8)
  1730  0019EE  0E01               	movlw	1
  1731  0019F0  6F8E               	movwf	(_M+20)& (0+255),b
  1732  0019F2  6B8F               	clrf	(_M+21)& (0+255),b
  1733  0019F4                     l129:
  1734                           ;main.c: 694: StartRTM(4);
  1735  0019F4  0E04               	movlw	4
  1736  0019F6  ECC2  F06E         	call	_StartRTM
  1737  0019FA  D01E               	goto	L29
  1738                           ;main.c: 695: eeprom_write(0x00C7,0);
  1739                           ;main.c: 696: return;
  1740  0019FC                     l128:
  1741                           ;main.c: 698: else
  1742  0019FC  0EC7               	movlw	199
  1743  0019FE  0100               	movlb	__Lparam shr (0+8)
  1744  001A00  6FD9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1745  001A02  6BDA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1746  001A04  C19B  F0DB         	movff	_M+33,?_eeprom_write+2
  1747  001A08  ECB2  F072         	call	_eeprom_write	;wreg free
  1748  001A0C                     l126:
  1749                           ;main.c: 701: }
  1750  001A0C  0101               	movlb	(_PFN+31) shr (0+8)
  1751  001A0E  5176               	movf	(_PFN+31)& (0+255),w,b
  1752  001A10  0A02               	xorlw	2
  1753  001A12  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1754  001A14  E005               	bz	l131
  1755  001A16  5176               	movf	(_PFN+31)& (0+255),w,b
  1756  001A18  0A03               	xorlw	3
  1757  001A1A  1177               	iorwf	(_PFN+32)& (0+255),w,b
  1758  001A1C  A4D8               	btfss	status,2,c
  1759  001A1E  0012               	return	
  1760                           ;main.c: 706: {
  1761  001A20                     l131:
  1762                           ;main.c: 708: }
  1763  001A20  0101               	movlb	(_PFN+2) shr (0+8)
  1764  001A22  B159               	btfsc	(_PFN+2)& (0+255),0,b
  1765  001A24  B15B               	btfsc	(_PFN+4)& (0+255),0,b
  1766  001A26  0012               	return	
  1767                           ;main.c: 712: {
  1768  001A28  0101               	movlb	(_M+33) shr (0+8)
  1769  001A2A  6B9B               	clrf	(_M+33)& (0+255),b
  1770                           ;main.c: 714: M._AKTYWNE_AL=1;
  1771  001A2C  0E01               	movlw	1
  1772  001A2E  6F8E               	movwf	(_M+20)& (0+255),b
  1773  001A30  6B8F               	clrf	(_M+21)& (0+255),b
  1774                           ;main.c: 715: StartRTM(4);
  1775  001A32  0E04               	movlw	4
  1776  001A34  ECC2  F06E         	call	_StartRTM
  1777  001A38                     L29:
  1778                           ;main.c: 716: eeprom_write(0x00C7,0);
  1779  001A38  0EC7               	movlw	199
  1780  001A3A  0100               	movlb	__Lparam shr (0+8)
  1781  001A3C  6FD9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1782  001A3E  6BDA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1783  001A40  6BDB               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  1784  001A42  EFB2  F072         	goto	_eeprom_write	;wreg free
  1785                           ;main.c: 717: }
  1786  001A46                     l124:
  1787                           ;main.c: 719: else
  1788  001A46  0E01               	movlw	1
  1789  001A48  ECEC  F06E         	call	_StartRTG
  1790                           ;main.c: 722: M.LICZNIK_ANL=0;
  1791  001A4C  0101               	movlb	(_M+33) shr (0+8)
  1792  001A4E  6B9B               	clrf	(_M+33)& (0+255),b
  1793                           ;main.c: 723: }
  1794  001A50  0012               	return	
  1795  001A52                     l117:
  1796                           ;main.c: 725: else M._AKTYWNE_AL=0;
  1797  001A52  EE01  F08E         	lfsr	0,_M+20
  1798  001A56  6AEE               	clrf	postinc0,c
  1799  001A58  6AEE               	clrf	postinc0,c
  1800                           ;main.c: 727: }
  1801  001A5A  0012               	return	
  1802  001A5C                     __end_of_DecyzjaAntyLeg:
  1803                           ;main.c: 827: void NastawaCOCW(unsigned char one
      +                          )
  1804                           ;main.c: 828: {
  1805  001A5C                     _NastawaCOCW:
  1806  000000                     
  1807                           ;main.c: 829: static unsigned char obg_cw=0,obg_
      +                          co=0,zmn2=0,zmn3=0,pcw;
  1808  001A5C  0101               	movlb	(_PFN+3) shr (0+8)
  1809  001A5E  AF5A               	btfss	(_PFN+3)& (0+255),7,b
  1810  001A60  B958               	btfsc	(_PFN+1)& (0+255),4,b
  1811  001A62  D006               	goto	u1560
  1812  001A64  0101               	movlb	(_PFN+4) shr (0+8)
  1813  001A66  B15B               	btfsc	(_PFN+4)& (0+255),0,b
  1814  001A68  D003               	goto	u1560
  1815  001A6A  0101               	movlb	(_PFN+1) shr (0+8)
  1816  001A6C  AB58               	btfss	(_PFN+1)& (0+255),5,b
  1817  001A6E  D004               	goto	l136
  1818  001A70                     u1560:
  1819                           ;main.c: 833: {
  1820  001A70  0101               	movlb	(_PFN+1) shr (0+8)
  1821  001A72  9158               	bcf	(_PFN+1)& (0+255),0,b
  1822                           ;main.c: 835: PFN._set_nco=0;
  1823  001A74  9F57               	bcf	_PFN& (0+255),7,b
  1824                           ;main.c: 836: PFN._str_nco=0;
  1825  001A76  9757               	bcf	_PFN& (0+255),3,b
  1826  001A78                     l136:
  1827                           ;main.c: 837: }
  1828  001A78  0101               	movlb	(_PFN+1) shr (0+8)
  1829  001A7A  B158               	btfsc	(_PFN+1)& (0+255),0,b
  1830  001A7C  D00C               	goto	l137
  1831  001A7E  010E               	movlb	F2348 shr (0+8)
  1832  001A80  5397               	movf	F2348& (0+255),f,b
  1833  001A82  E109               	bnz	l137
  1834  001A84  0101               	movlb	(_PFN+4) shr (0+8)
  1835  001A86  A55B               	btfss	(_PFN+4)& (0+255),2,b
  1836  001A88  D006               	goto	l137
  1837                           ;main.c: 840: {
  1838  001A8A  0101               	movlb	_PFN shr (0+8)
  1839  001A8C  8957               	bsf	_PFN& (0+255),4,b
  1840                           ;main.c: 842: PFN.b_str_ncw=1;
  1841  001A8E  8D57               	bsf	_PFN& (0+255),6,b
  1842                           ;main.c: 843: StartRTdS(9);
  1843  001A90  0E09               	movlw	9
  1844  001A92  EC86  F06E         	call	_StartRTdS
  1845  001A96                     l137:
  1846                           ;main.c: 844: }
  1847  001A96  EE01  F05B         	lfsr	0,_PFN+4
  1848  001A9A  30EF               	rrcf	indf0,w,c
  1849  001A9C  6E00               	movwf	btemp,c
  1850  001A9E  3000               	rrcf	btemp,w,c
  1851  001AA0  0B01               	andlw	1
  1852  001AA2  CFE8 FE97          	movff	wreg,F2348
  1853                           ;main.c: 846: if(PFN.b_str_ncw)
  1854  001AA6  0101               	movlb	_PFN shr (0+8)
  1855  001AA8  AD57               	btfss	_PFN& (0+255),6,b
  1856  001AAA  D007               	goto	l138
  1857                           ;main.c: 847: {
  1858  001AAC  9D57               	bcf	_PFN& (0+255),6,b
  1859                           ;main.c: 849: EndNst();
  1860  001AAE  ECCB  F064         	call	_EndNst	;wreg free
  1861                           ;main.c: 850: PrintNstCW(PFN.PPCW);
  1862  001AB2  C165  FFE8         	movff	_PFN+14,wreg
  1863  001AB6  EC39  F064         	call	_PrintNstCW
  1864  001ABA                     l138:
  1865                           ;main.c: 851: }
  1866  001ABA  0101               	movlb	_PFN shr (0+8)
  1867  001ABC  BF57               	btfsc	_PFN& (0+255),7,b
  1868  001ABE  D00C               	goto	l139
  1869  001AC0  010E               	movlb	F2349 shr (0+8)
  1870  001AC2  5398               	movf	F2349& (0+255),f,b
  1871  001AC4  E109               	bnz	l139
  1872  001AC6  0101               	movlb	(_PFN+4) shr (0+8)
  1873  001AC8  A35B               	btfss	(_PFN+4)& (0+255),1,b
  1874  001ACA  D006               	goto	l139
  1875                           ;main.c: 854: {
  1876  001ACC  0101               	movlb	_PFN shr (0+8)
  1877  001ACE  8757               	bsf	_PFN& (0+255),3,b
  1878                           ;main.c: 856: PFN.b_str_nco=1;
  1879  001AD0  8B57               	bsf	_PFN& (0+255),5,b
  1880                           ;main.c: 857: StartRTdS(9);
  1881  001AD2  0E09               	movlw	9
  1882  001AD4  EC86  F06E         	call	_StartRTdS
  1883  001AD8                     l139:
  1884                           ;main.c: 858: }
  1885  001AD8  EE01  F05B         	lfsr	0,_PFN+4
  1886  001ADC  30EF               	rrcf	indf0,w,c
  1887  001ADE  0B01               	andlw	1
  1888  001AE0  CFE8 FE98          	movff	wreg,F2349
  1889                           ;main.c: 860: if(PFN.b_str_nco)
  1890  001AE4  0101               	movlb	_PFN shr (0+8)
  1891  001AE6  AB57               	btfss	_PFN& (0+255),5,b
  1892  001AE8  D012               	goto	l140
  1893                           ;main.c: 861: {
  1894  001AEA  9B57               	bcf	_PFN& (0+255),5,b
  1895                           ;main.c: 863: EndNst();
  1896  001AEC  ECCB  F064         	call	_EndNst	;wreg free
  1897                           ;main.c: 864: if(PFN._ofnserw||PFN._set_fnserw)
  1898  001AF0  0101               	movlb	(_PFN+3) shr (0+8)
  1899  001AF2  BF5A               	btfsc	(_PFN+3)& (0+255),7,b
  1900  001AF4  D002               	goto	u1710
  1901  001AF6  A958               	btfss	(_PFN+1)& (0+255),4,b
  1902  001AF8  D006               	goto	l141
  1903  001AFA                     u1710:
  1904                           ;main.c: 865: {
  1905  001AFA  0101               	movlb	_PFN shr (0+8)
  1906  001AFC  9F57               	bcf	_PFN& (0+255),7,b
  1907                           ;main.c: 867: PFN._str_nco=0;
  1908  001AFE  9757               	bcf	_PFN& (0+255),3,b
  1909                           ;main.c: 868: EndNst();
  1910  001B00  ECCB  F064         	call	_EndNst	;wreg free
  1911                           ;main.c: 869: }
  1912  001B04  D004               	goto	l140
  1913  001B06                     l141:
  1914                           ;main.c: 870: else PrintNstCO(PFN.PPCO);
  1915  001B06  C164  FFE8         	movff	_PFN+13,wreg
  1916  001B0A  EC69  F064         	call	_PrintNstCO
  1917  001B0E                     l140:
  1918                           ;main.c: 871: }
  1919  001B0E  0101               	movlb	_PFN shr (0+8)
  1920  001B10  AF57               	btfss	_PFN& (0+255),7,b
  1921  001B12  B158               	btfsc	(_PFN+1)& (0+255),0,b
  1922  001B14  D007               	goto	u1750
  1923  001B16  0E09               	movlw	9
  1924  001B18  EC98  F06E         	call	_RTdS
  1925  001B1C  6E00               	movwf	btemp,c
  1926  001B1E  0E1F               	movlw	31
  1927  001B20  5C00               	subwf	btemp,w,c
  1928  001B22  E303               	bnc	l143
  1929  001B24                     u1750:
  1930                           ;main.c: 874: {
  1931  001B24  0101               	movlb	_PFN shr (0+8)
  1932  001B26  9757               	bcf	_PFN& (0+255),3,b
  1933                           ;main.c: 876: PFN._str_ncw=0;
  1934  001B28  9957               	bcf	_PFN& (0+255),4,b
  1935  001B2A                     l143:
  1936                           ;main.c: 877: }
  1937  001B2A  0101               	movlb	(_PFN+1) shr (0+8)
  1938  001B2C  A158               	btfss	(_PFN+1)& (0+255),0,b
  1939  001B2E  D05A               	goto	l144
  1940                           ;main.c: 880: {
  1941  001B30  C173  FE9A         	movff	_PFN+28,F2352
  1942                           ;main.c: 882: if(!PFN._mod_ncw&&!RdPrt(24)&&!RdP
      +                          rt(25))
  1943  001B34  B758               	btfsc	(_PFN+1)& (0+255),3,b
  1944  001B36  D00A               	goto	l145
  1945  001B38  0E18               	movlw	24
  1946  001B3A  ECA6  F068         	call	_RdPrt
  1947  001B3E  E206               	bc	l145
  1948  001B40  0E19               	movlw	25
  1949  001B42  ECA6  F068         	call	_RdPrt
  1950                           ;main.c: 883: {
  1951  001B46  0101               	movlb	(_PFN+1) shr (0+8)
  1952  001B48  E202               	bc	L16
  1953  001B4A  8758               	bsf	(_PFN+1)& (0+255),3,b
  1954  001B4C                     l145:
  1955                           ;main.c: 885: }
  1956  001B4C  0101               	movlb	(_PFN+1) shr (0+8)
  1957  001B4E                     L16:
  1958  001B4E  A758               	btfss	(_PFN+1)& (0+255),3,b
  1959  001B50  D018               	goto	l146
  1960  001B52  0100               	movlb	__Lparam shr (0+8)
  1961  001B54  0E73               	movlw	low (_PFN+28)
  1962  001B56  6FD7               	movwf	?_ReadParam^(__Lparam& (0+65280)),b
  1963  001B58  0E01               	movlw	high (_PFN+28)
  1964  001B5A  6FD8               	movwf	(?_ReadParam+1)^(__Lparam& (0+65280)),b
  1965  001B5C  0E9C               	movlw	low _zmn
  1966  001B5E  6FD9               	movwf	(?_ReadParam+2)^(__Lparam& (0+65280)),b
  1967  001B60  0E0E               	movlw	high _zmn
  1968  001B62  6FDA               	movwf	(?_ReadParam+3)^(__Lparam& (0+65280)),b
  1969  001B64  0E9D               	movlw	low _zps
  1970  001B66  6FDB               	movwf	(?_ReadParam+4)^(__Lparam& (0+65280)),b
  1971  001B68  0E0E               	movlw	high _zps
  1972  001B6A  6FDC               	movwf	(?_ReadParam+5)^(__Lparam& (0+65280)),b
  1973  001B6C  C220  F0DD         	movff	_DtCW+5,?_ReadParam+6
  1974  001B70  6BDE               	clrf	(?_ReadParam+7)^(__Lparam& (0+65280)),b
  1975  001B72  C221  F0DF         	movff	_DtCW+6,?_ReadParam+8
  1976  001B76  6BE0               	clrf	(?_ReadParam+9)^(__Lparam& (0+65280)),b
  1977  001B78  6BE1               	clrf	(?_ReadParam+10)^(__Lparam& (0+65280)),b
  1978  001B7A  0E01               	movlw	1
  1979  001B7C  6FE2               	movwf	(?_ReadParam+11)^(__Lparam& (0+65280)),b
  1980  001B7E  EC5D  F055         	call	_ReadParam	;wreg free
  1981  001B82                     l146:
  1982                           ;main.c: 887: if(!PFN.b_set_ncw)
  1983  001B82  0101               	movlb	(_PFN+1) shr (0+8)
  1984  001B84  B558               	btfsc	(_PFN+1)& (0+255),2,b
  1985  001B86  D008               	goto	l147
  1986                           ;main.c: 888: {
  1987  001B88  8558               	bsf	(_PFN+1)& (0+255),2,b
  1988                           ;main.c: 890: EndNst();
  1989  001B8A  ECCB  F064         	call	_EndNst	;wreg free
  1990                           ;main.c: 891: zmn2=1;
  1991  001B8E  0E01               	movlw	1
  1992  001B90  CFE8 FE99          	movff	wreg,F2350
  1993                           ;main.c: 892: pcw=PFN.PCW;
  1994  001B94  C173  FE9A         	movff	_PFN+28,F2352
  1995  001B98                     l147:
  1996                           ;main.c: 893: }
  1997  001B98  010E               	movlb	F2350 shr (0+8)
  1998  001B9A  5399               	movf	F2350& (0+255),f,b
  1999  001B9C  E103               	bnz	u1870
  2000  001B9E  010E               	movlb	_zmn shr (0+8)
  2001  001BA0  539C               	movf	_zmn& (0+255),f,b
  2002  001BA2  E020               	bz	l144
  2003  001BA4                     u1870:
  2004                           ;main.c: 895: {
  2005  001BA4  CE9A  F000         	movff	F2352,btemp
  2006  001BA8  6A01               	clrf	btemp+1,c
  2007  001BAA  C174  FFE8         	movff	_PFN+29,wreg
  2008  001BAE  1801               	xorwf	btemp+1,w,c
  2009  001BB0  E103               	bnz	u1885
  2010  001BB2  C173  FFE8         	movff	_PFN+28,wreg
  2011  001BB6  1800               	xorwf	btemp,w,c
  2012  001BB8                     u1885:
  2013  001BB8  0E00               	movlw	0
  2014  001BBA  A4D8               	btfss	status,2,c
  2015  001BBC  0E01               	movlw	1
  2016  001BBE  6E00               	movwf	btemp,c
  2017  001BC0  EE01  F059         	lfsr	0,_PFN+2
  2018  001BC4  3600               	rlcf	btemp,f,c
  2019  001BC6  3600               	rlcf	btemp,f,c
  2020  001BC8  50EF               	movf	indf0,w,c
  2021  001BCA  1800               	xorwf	btemp,w,c
  2022  001BCC  0BFB               	andlw	-5
  2023  001BCE  1800               	xorwf	btemp,w,c
  2024  001BD0  6EEF               	movwf	indf0,c
  2025                           ;main.c: 897: zmn2=0;
  2026  001BD2  010E               	movlb	F2350 shr (0+8)
  2027  001BD4  6B99               	clrf	F2350& (0+255),b
  2028                           ;main.c: 898: StartRTdS(9);
  2029  001BD6  0E09               	movlw	9
  2030  001BD8  EC86  F06E         	call	_StartRTdS
  2031                           ;main.c: 899: PrintNstCW(PFN.PCW);
  2032  001BDC  C173  FFE8         	movff	_PFN+28,wreg
  2033  001BE0  EC39  F064         	call	_PrintNstCW
  2034  001BE4                     l144:
  2035                           ;main.c: 900: }
  2036  001BE4  0101               	movlb	_PFN shr (0+8)
  2037  001BE6  AF57               	btfss	_PFN& (0+255),7,b
  2038  001BE8  D04F               	goto	l149
  2039                           ;main.c: 904: {
  2040  001BEA  C171  FE9A         	movff	_PFN+26,F2352
  2041                           ;main.c: 906: ReadParam(&PFN.PCO,&zmn,&zps,DtCO.
      +                          minPCO,DtCO.maxPCO,0,1);
  2042  001BEE  0100               	movlb	__Lparam shr (0+8)
  2043  001BF0  0E71               	movlw	low (_PFN+26)
  2044  001BF2  6FD7               	movwf	?_ReadParam^(__Lparam& (0+65280)),b
  2045  001BF4  0E01               	movlw	high (_PFN+26)
  2046  001BF6  6FD8               	movwf	(?_ReadParam+1)^(__Lparam& (0+65280)),b
  2047  001BF8  0E9C               	movlw	low _zmn
  2048  001BFA  6FD9               	movwf	(?_ReadParam+2)^(__Lparam& (0+65280)),b
  2049  001BFC  0E0E               	movlw	high _zmn
  2050  001BFE  6FDA               	movwf	(?_ReadParam+3)^(__Lparam& (0+65280)),b
  2051  001C00  0E9D               	movlw	low _zps
  2052  001C02  6FDB               	movwf	(?_ReadParam+4)^(__Lparam& (0+65280)),b
  2053  001C04  0E0E               	movlw	high _zps
  2054  001C06  6FDC               	movwf	(?_ReadParam+5)^(__Lparam& (0+65280)),b
  2055  001C08  C211  F0DD         	movff	_DtCO+5,?_ReadParam+6
  2056  001C0C  6BDE               	clrf	(?_ReadParam+7)^(__Lparam& (0+65280)),b
  2057  001C0E  C212  F0DF         	movff	_DtCO+6,?_ReadParam+8
  2058  001C12  6BE0               	clrf	(?_ReadParam+9)^(__Lparam& (0+65280)),b
  2059  001C14  6BE1               	clrf	(?_ReadParam+10)^(__Lparam& (0+65280)),b
  2060  001C16  0E01               	movlw	1
  2061  001C18  6FE2               	movwf	(?_ReadParam+11)^(__Lparam& (0+65280)),b
  2062  001C1A  EC5D  F055         	call	_ReadParam	;wreg free
  2063                           ;main.c: 907: if(!PFN.b_set_nco)
  2064  001C1E  0101               	movlb	(_PFN+1) shr (0+8)
  2065  001C20  B358               	btfsc	(_PFN+1)& (0+255),1,b
  2066  001C22  D00A               	goto	l150
  2067                           ;main.c: 908: {
  2068  001C24  8358               	bsf	(_PFN+1)& (0+255),1,b
  2069                           ;main.c: 910: EndNst();
  2070  001C26  ECCB  F064         	call	_EndNst	;wreg free
  2071                           ;main.c: 911: zmn2=1;
  2072  001C2A  0E01               	movlw	1
  2073  001C2C  CFE8 FE99          	movff	wreg,F2350
  2074                           ;main.c: 912: pcw=PFN.PCO;
  2075  001C30  C171  FE9A         	movff	_PFN+26,F2352
  2076                           ;main.c: 913: PFN._newPCO=0;
  2077  001C34  0101               	movlb	(_PFN+2) shr (0+8)
  2078  001C36  9359               	bcf	(_PFN+2)& (0+255),1,b
  2079  001C38                     l150:
  2080                           ;main.c: 914: }
  2081  001C38  010E               	movlb	F2350 shr (0+8)
  2082  001C3A  5399               	movf	F2350& (0+255),f,b
  2083  001C3C  E103               	bnz	u1930
  2084  001C3E  010E               	movlb	_zmn shr (0+8)
  2085  001C40  539C               	movf	_zmn& (0+255),f,b
  2086  001C42  E022               	bz	l149
  2087  001C44                     u1930:
  2088                           ;main.c: 916: {
  2089  001C44  0101               	movlb	(_PFN+2) shr (0+8)
  2090  001C46  B359               	btfsc	(_PFN+2)& (0+255),1,b
  2091  001C48  D016               	goto	l152
  2092  001C4A  CE9A  F000         	movff	F2352,btemp
  2093  001C4E  6A01               	clrf	btemp+1,c
  2094  001C50  C172  FFE8         	movff	_PFN+27,wreg
  2095  001C54  1801               	xorwf	btemp+1,w,c
  2096  001C56  E103               	bnz	u1955
  2097  001C58  C171  FFE8         	movff	_PFN+26,wreg
  2098  001C5C  1800               	xorwf	btemp,w,c
  2099  001C5E                     u1955:
  2100  001C5E  0E00               	movlw	0
  2101  001C60  A4D8               	btfss	status,2,c
  2102  001C62  0E01               	movlw	1
  2103  001C64  6E00               	movwf	btemp,c
  2104  001C66  EE01  F059         	lfsr	0,_PFN+2
  2105  001C6A  3600               	rlcf	btemp,f,c
  2106  001C6C  50EF               	movf	indf0,w,c
  2107  001C6E  1800               	xorwf	btemp,w,c
  2108  001C70  0BFD               	andlw	-3
  2109  001C72  1800               	xorwf	btemp,w,c
  2110  001C74  6EEF               	movwf	indf0,c
  2111  001C76                     l152:
  2112                           ;main.c: 918: zmn2=0;
  2113  001C76  010E               	movlb	F2350 shr (0+8)
  2114  001C78  6B99               	clrf	F2350& (0+255),b
  2115                           ;main.c: 919: StartRTdS(9);
  2116  001C7A  0E09               	movlw	9
  2117  001C7C  EC86  F06E         	call	_StartRTdS
  2118                           ;main.c: 920: PrintNstCO(PFN.PCO);
  2119  001C80  C171  FFE8         	movff	_PFN+26,wreg
  2120  001C84  EC69  F064         	call	_PrintNstCO
  2121  001C88                     l149:
  2122                           ;main.c: 921: }
  2123  001C88  0101               	movlb	(_PFN+1) shr (0+8)
  2124  001C8A  A158               	btfss	(_PFN+1)& (0+255),0,b
  2125  001C8C  BF57               	btfsc	_PFN& (0+255),7,b
  2126  001C8E  0012               	return	
  2127                           ;main.c: 925: {
  2128  001C90  0101               	movlb	_PFN shr (0+8)
  2129  001C92  A957               	btfss	_PFN& (0+255),4,b
  2130  001C94  B757               	btfsc	_PFN& (0+255),3,b
  2131  001C96  D002               	goto	l154
  2132  001C98  ECCB  F064         	call	_EndNst	;wreg free
  2133  001C9C                     l154:
  2134                           ;main.c: 927: PFN.b_set_ncw=0;
  2135  001C9C  0101               	movlb	(_PFN+1) shr (0+8)
  2136  001C9E  9558               	bcf	(_PFN+1)& (0+255),2,b
  2137                           ;main.c: 928: PFN.b_set_nco=0;
  2138  001CA0  9358               	bcf	(_PFN+1)& (0+255),1,b
  2139                           ;main.c: 929: }
  2140  001CA2  0012               	return	
  2141  001CA4                     __end_of_NastawaCOCW:
  2142                           ;main.c: 935: void DecWSW(void)
  2143                           ;main.c: 936: {
  2144  001CA4                     _DecWSW:
  2145  000000                     
  2146                           ;main.c: 938: if(PFN._ferr||PFN._fmsg)
  2147  001CA4  0101               	movlb	(_PFN+5) shr (0+8)
  2148  001CA6  B15C               	btfsc	(_PFN+5)& (0+255),0,b
  2149  001CA8  D002               	goto	u2040
  2150  001CAA  AF5B               	btfss	(_PFN+4)& (0+255),7,b
  2151  001CAC  D058               	goto	l156
  2152  001CAE                     u2040:
  2153                           ;main.c: 939: {
  2154  001CAE  0E01               	movlw	1
  2155  001CB0  DED5               	call	_NastawaCOCW
  2156                           ;main.c: 941: if(PFN._ferr)
  2157  001CB2  0101               	movlb	(_PFN+5) shr (0+8)
  2158  001CB4  A15C               	btfss	(_PFN+5)& (0+255),0,b
  2159  001CB6  D046               	goto	l157
  2160                           ;main.c: 942: {
  2161  001CB8  AB59               	btfss	(_PFN+2)& (0+255),5,b
  2162  001CBA  D002               	goto	u2080
  2163  001CBC  A75C               	btfss	(_PFN+5)& (0+255),3,b
  2164  001CBE  D03F               	goto	l158
  2165  001CC0                     u2080:
  2166                           ;main.c: 944: {
  2167  001CC0  0101               	movlb	(_PFN+5) shr (0+8)
  2168  001CC2  A75C               	btfss	(_PFN+5)& (0+255),3,b
  2169  001CC4  D008               	goto	l159
  2170  001CC6  0E01               	movlw	1
  2171  001CC8  0100               	movlb	__Lparam shr (0+8)
  2172  001CCA  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2173  001CCC  C167  FFE8         	movff	_PFN+16,wreg
  2174  001CD0  ECEC  F062         	call	_PrintErr
  2175  001CD4  D046               	goto	l170
  2176  001CD6                     l159:
  2177                           ;main.c: 946: else
  2178  001CD6  C167  FFE8         	movff	_PFN+16,wreg
  2179  001CDA  0A07               	xorlw	7
  2180  001CDC  E010               	bz	l161
  2181  001CDE  C167  FFE8         	movff	_PFN+16,wreg
  2182  001CE2  0A09               	xorlw	9
  2183  001CE4  E00C               	bz	l161
  2184  001CE6  C167  FFE8         	movff	_PFN+16,wreg
  2185  001CEA  0A0E               	xorlw	14
  2186  001CEC  E008               	bz	l161
  2187  001CEE  0E01               	movlw	1
  2188  001CF0  0100               	movlb	__Lparam shr (0+8)
  2189  001CF2  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2190  001CF4  C167  FFE8         	movff	_PFN+16,wreg
  2191  001CF8  ECEC  F062         	call	_PrintErr
  2192  001CFC  D032               	goto	l170
  2193  001CFE                     l161:
  2194                           ;main.c: 948: else
  2195  001CFE  C167  FFE8         	movff	_PFN+16,wreg
  2196  001D02  0A07               	xorlw	7
  2197  001D04  E004               	bz	u2170
  2198  001D06  C167  FFE8         	movff	_PFN+16,wreg
  2199  001D0A  0A0E               	xorlw	14
  2200  001D0C  E10A               	bnz	l163
  2201  001D0E                     u2170:
  2202                           ;main.c: 951: {
  2203  001D0E  C160  F0D7         	movff	_PFN+9,?_PrintErrTm
  2204  001D12  0E01               	movlw	1
  2205  001D14  0100               	movlb	__Lparam shr (0+8)
  2206  001D16  6FD8               	movwf	(?_PrintErrTm+1)^(__Lparam& (0+65280)),b
  2207  001D18  C167  FFE8         	movff	_PFN+16,wreg
  2208  001D1C  EC78  F063         	call	_PrintErrTm
  2209                           ;main.c: 953: }
  2210  001D20  D020               	goto	l170
  2211  001D22                     l163:
  2212                           ;main.c: 954: else
  2213  001D22  C167  FFE8         	movff	_PFN+16,wreg
  2214  001D26  0A09               	xorlw	9
  2215  001D28  E11C               	bnz	l170
  2216                           ;main.c: 956: {
  2217  001D2A  C162  F0D7         	movff	_PFN+11,?_PrintErrCs
  2218  001D2E  0E01               	movlw	1
  2219  001D30  0100               	movlb	__Lparam shr (0+8)
  2220  001D32  6FD8               	movwf	(?_PrintErrCs+1)^(__Lparam& (0+65280)),b
  2221  001D34  C167  FFE8         	movff	_PFN+16,wreg
  2222  001D38  EC32  F063         	call	_PrintErrCs
  2223                           ;main.c: 958: }
  2224  001D3C  D012               	goto	l170
  2225  001D3E                     l158:
  2226                           ;main.c: 961: else
  2227  001D3E  ECC2  F063         	call	_EndErr	;wreg free
  2228                           ;main.c: 964: }
  2229  001D42  D00F               	goto	l170
  2230  001D44                     l157:
  2231                           ;main.c: 966: else
  2232  001D44  0101               	movlb	(_PFN+2) shr (0+8)
  2233  001D46  BB59               	btfsc	(_PFN+2)& (0+255),5,b
  2234  001D48  D007               	goto	l168
  2235                           ;main.c: 969: {
  2236  001D4A  0100               	movlb	__Lparam shr (0+8)
  2237  001D4C  6BD9               	clrf	?_PrintErr^(__Lparam& (0+65280)),b
  2238  001D4E  C166  FFE8         	movff	_PFN+15,wreg
  2239  001D52  ECEC  F062         	call	_PrintErr
  2240                           ;main.c: 971: }else EndErr();
  2241  001D56  D005               	goto	l170
  2242  001D58                     l168:
  2243  001D58  ECC2  F063         	call	_EndErr	;wreg free
  2244                           ;main.c: 972: }
  2245  001D5C  D002               	goto	l170
  2246  001D5E                     l156:
  2247                           ;main.c: 974: else
  2248  001D5E  ECC2  F063         	call	_EndErr	;wreg free
  2249  001D62                     l170:
  2250                           ;main.c: 977: }
  2251  001D62  0101               	movlb	(_PFN+4) shr (0+8)
  2252  001D64  A75B               	btfss	(_PFN+4)& (0+255),3,b
  2253  001D66  B15C               	btfsc	(_PFN+5)& (0+255),0,b
  2254  001D68  D123               	goto	l171
  2255  001D6A  BF5B               	btfsc	(_PFN+4)& (0+255),7,b
  2256  001D6C  D121               	goto	l171
  2257                           ;main.c: 980: {
  2258  001D6E  0101               	movlb	(_PFN+6) shr (0+8)
  2259  001D70  A75D               	btfss	(_PFN+6)& (0+255),3,b
  2260  001D72  D03D               	goto	l172
  2261                           ;main.c: 982: {
  2262  001D74  BB5C               	btfsc	(_PFN+5)& (0+255),5,b
  2263  001D76  D002               	goto	u2280
  2264  001D78  A15D               	btfss	(_PFN+6)& (0+255),0,b
  2265  001D7A  D009               	goto	l173
  2266  001D7C                     u2280:
  2267  001D7C  0101               	movlb	(_PFN+4) shr (0+8)
  2268  001D7E  BB5B               	btfsc	(_PFN+4)& (0+255),5,b
  2269  001D80  D006               	goto	l173
  2270  001D82  0101               	movlb	(_PFN+4) shr (0+8)
  2271  001D84  BD5B               	btfsc	(_PFN+4)& (0+255),6,b
  2272  001D86  D003               	goto	l173
  2273                           ;main.c: 985: {
  2274  001D88  EC60  F065         	call	_PrintOFF	;wreg free
  2275                           ;main.c: 987: }
  2276  001D8C  D111               	goto	l171
  2277  001D8E                     l173:
  2278                           ;main.c: 988: else
  2279  001D8E  0101               	movlb	(_PFN+5) shr (0+8)
  2280  001D90  AB5C               	btfss	(_PFN+5)& (0+255),5,b
  2281  001D92  B15D               	btfsc	(_PFN+6)& (0+255),0,b
  2282  001D94  D00D               	goto	l175
  2283  001D96  0101               	movlb	(_PFN+4) shr (0+8)
  2284  001D98  BB5B               	btfsc	(_PFN+4)& (0+255),5,b
  2285  001D9A  D00A               	goto	l175
  2286  001D9C  0101               	movlb	(_PFN+4) shr (0+8)
  2287  001D9E  BD5B               	btfsc	(_PFN+4)& (0+255),6,b
  2288  001DA0  D007               	goto	l175
  2289                           ;main.c: 991: {
  2290  001DA2  EC75  F065         	call	_EndOFF	;wreg free
  2291                           ;main.c: 993: PrintCS(PFN.CS);
  2292  001DA6  C162  FFE8         	movff	_PFN+11,wreg
  2293  001DAA  EC7E  F065         	call	_PrintCS
  2294                           ;main.c: 994: }
  2295  001DAE  D100               	goto	l171
  2296  001DB0                     l175:
  2297                           ;main.c: 995: else
  2298  001DB0  0101               	movlb	(_PFN+4) shr (0+8)
  2299  001DB2  BD5B               	btfsc	(_PFN+4)& (0+255),6,b
  2300  001DB4  BF5C               	btfsc	(_PFN+5)& (0+255),7,b
  2301  001DB6  D009               	goto	l177
  2302                           ;main.c: 997: {
  2303  001DB8  EC75  F065         	call	_EndOFF	;wreg free
  2304                           ;main.c: 999: EndCS();
  2305  001DBC  EC93  F065         	call	_EndCS	;wreg free
  2306                           ;main.c: 1000: PrintCW(PFN.CW);
  2307  001DC0  C161  FFE8         	movff	_PFN+10,wreg
  2308  001DC4  EC9F  F065         	call	_PrintCW
  2309                           ;main.c: 1001: }
  2310  001DC8  D0F3               	goto	l171
  2311  001DCA                     l177:
  2312                           ;main.c: 1002: else
  2313  001DCA  0101               	movlb	(_PFN+4) shr (0+8)
  2314  001DCC  BB5B               	btfsc	(_PFN+4)& (0+255),5,b
  2315  001DCE  BD5C               	btfsc	(_PFN+5)& (0+255),6,b
  2316  001DD0  D00B               	goto	l179
  2317                           ;main.c: 1006: {
  2318  001DD2  EC75  F065         	call	_EndOFF	;wreg free
  2319                           ;main.c: 1008: EndCS();
  2320  001DD6  EC93  F065         	call	_EndCS	;wreg free
  2321                           ;main.c: 1009: EndCW();
  2322  001DDA  ECB4  F065         	call	_EndCW	;wreg free
  2323                           ;main.c: 1010: PrintCO(PFN.CO);
  2324  001DDE  C160  FFE8         	movff	_PFN+9,wreg
  2325  001DE2  ECB9  F065         	call	_PrintCO
  2326                           ;main.c: 1011: }
  2327  001DE6  D0E4               	goto	l171
  2328  001DE8                     l179:
  2329                           ;main.c: 1012: else
  2330  001DE8  EC60  F065         	call	_PrintOFF	;wreg free
  2331                           ;main.c: 1015: }
  2332  001DEC  D0E1               	goto	l171
  2333  001DEE                     l172:
  2334                           ;main.c: 1019: else
  2335  001DEE  0101               	movlb	(_PFN+6) shr (0+8)
  2336  001DF0  A55D               	btfss	(_PFN+6)& (0+255),2,b
  2337  001DF2  D051               	goto	l182
  2338                           ;main.c: 1024: {
  2339  001DF4  A15B               	btfss	(_PFN+4)& (0+255),0,b
  2340  001DF6  D002               	goto	u2490
  2341  001DF8  AB58               	btfss	(_PFN+1)& (0+255),5,b
  2342  001DFA  D03D               	goto	l183
  2343  001DFC                     u2490:
  2344                           ;main.c: 1026: {
  2345  001DFC  0101               	movlb	(_PFN+4) shr (0+8)
  2346  001DFE  B35B               	btfsc	(_PFN+4)& (0+255),1,b
  2347  001E00  D002               	goto	u2520
  2348  001E02  AB5B               	btfss	(_PFN+4)& (0+255),5,b
  2349  001E04  D01D               	goto	l184
  2350  001E06                     u2520:
  2351                           ;main.c: 1028: {
  2352  001E06  0101               	movlb	(_PFN+3) shr (0+8)
  2353  001E08  A15A               	btfss	(_PFN+3)& (0+255),0,b
  2354  001E0A  D009               	goto	l185
  2355                           ;main.c: 1030: {
  2356  001E0C  A35A               	btfss	(_PFN+3)& (0+255),1,b
  2357  001E0E  D0CE               	goto	l199
  2358                           ;main.c: 1032: {
  2359  001E10  EC75  F065         	call	_EndOFF	;wreg free
  2360                           ;main.c: 1034: PrintCS(PFN.CS);
  2361  001E14  C162  FFE8         	movff	_PFN+11,wreg
  2362  001E18  EC7E  F065         	call	_PrintCS
  2363                           ;main.c: 1035: }
  2364  001E1C  D0C7               	goto	l199
  2365  001E1E                     l185:
  2366                           ;main.c: 1037: else
  2367  001E1E  0101               	movlb	(_PFN+5) shr (0+8)
  2368  001E20  BD5C               	btfsc	(_PFN+5)& (0+255),6,b
  2369  001E22  D00B               	goto	l188
  2370                           ;main.c: 1040: {
  2371  001E24  EC75  F065         	call	_EndOFF	;wreg free
  2372                           ;main.c: 1042: EndCS();
  2373  001E28  EC93  F065         	call	_EndCS	;wreg free
  2374                           ;main.c: 1043: EndCW();
  2375  001E2C  ECB4  F065         	call	_EndCW	;wreg free
  2376                           ;main.c: 1044: PrintCO(PFN.CO);
  2377  001E30  C160  FFE8         	movff	_PFN+9,wreg
  2378  001E34  ECB9  F065         	call	_PrintCO
  2379                           ;main.c: 1045: }
  2380  001E38  D0B9               	goto	l199
  2381  001E3A                     l188:
  2382                           ;main.c: 1046: else
  2383  001E3A  EC60  F065         	call	_PrintOFF	;wreg free
  2384                           ;main.c: 1049: }
  2385  001E3E  D0B6               	goto	l199
  2386  001E40                     l184:
  2387                           ;main.c: 1052: else
  2388  001E40  0101               	movlb	(_PFN+3) shr (0+8)
  2389  001E42  A15A               	btfss	(_PFN+3)& (0+255),0,b
  2390  001E44  D009               	goto	l191
  2391                           ;main.c: 1055: {
  2392  001E46  A35A               	btfss	(_PFN+3)& (0+255),1,b
  2393  001E48  D0B1               	goto	l199
  2394                           ;main.c: 1057: {
  2395  001E4A  EC75  F065         	call	_EndOFF	;wreg free
  2396                           ;main.c: 1059: PrintCS(PFN.CS);
  2397  001E4E  C162  FFE8         	movff	_PFN+11,wreg
  2398  001E52  EC7E  F065         	call	_PrintCS
  2399                           ;main.c: 1060: }
  2400  001E56  D0AA               	goto	l199
  2401  001E58                     l191:
  2402                           ;main.c: 1062: else
  2403  001E58  0101               	movlb	(_PFN+5) shr (0+8)
  2404  001E5A  BF5C               	btfsc	(_PFN+5)& (0+255),7,b
  2405  001E5C  D009               	goto	l194
  2406                           ;main.c: 1065: {
  2407  001E5E  EC75  F065         	call	_EndOFF	;wreg free
  2408                           ;main.c: 1067: EndCS();
  2409  001E62  EC93  F065         	call	_EndCS	;wreg free
  2410                           ;main.c: 1068: PrintCW(PFN.CW);
  2411  001E66  C161  FFE8         	movff	_PFN+10,wreg
  2412  001E6A  EC9F  F065         	call	_PrintCW
  2413                           ;main.c: 1069: }
  2414  001E6E  D09E               	goto	l199
  2415  001E70                     l194:
  2416                           ;main.c: 1070: else
  2417  001E70  EC60  F065         	call	_PrintOFF	;wreg free
  2418                           ;main.c: 1073: }
  2419  001E74  D09B               	goto	l199
  2420  001E76                     l183:
  2421                           ;main.c: 1077: else
  2422  001E76  0101               	movlb	(_PFN+5) shr (0+8)
  2423  001E78  AF5C               	btfss	(_PFN+5)& (0+255),7,b
  2424  001E7A  A55B               	btfss	(_PFN+4)& (0+255),2,b
  2425  001E7C  D009               	goto	l197
  2426                           ;main.c: 1080: {
  2427  001E7E  EC75  F065         	call	_EndOFF	;wreg free
  2428                           ;main.c: 1082: EndCS();
  2429  001E82  EC93  F065         	call	_EndCS	;wreg free
  2430                           ;main.c: 1083: PrintCW(PFN.CW);
  2431  001E86  C161  FFE8         	movff	_PFN+10,wreg
  2432  001E8A  EC9F  F065         	call	_PrintCW
  2433                           ;main.c: 1084: }
  2434  001E8E  D08E               	goto	l199
  2435  001E90                     l197:
  2436                           ;main.c: 1085: else
  2437  001E90  EC60  F065         	call	_PrintOFF	;wreg free
  2438                           ;main.c: 1088: }
  2439  001E94  D08B               	goto	l199
  2440  001E96                     l182:
  2441                           ;main.c: 1091: else
  2442  001E96  0101               	movlb	(_PFN+6) shr (0+8)
  2443  001E98  A35D               	btfss	(_PFN+6)& (0+255),1,b
  2444  001E9A  D088               	goto	l199
  2445                           ;main.c: 1095: {
  2446  001E9C  AF5A               	btfss	(_PFN+3)& (0+255),7,b
  2447  001E9E  B15B               	btfsc	(_PFN+4)& (0+255),0,b
  2448  001EA0  D05F               	goto	l201
  2449  001EA2  0101               	movlb	(_PFN+1) shr (0+8)
  2450  001EA4  B958               	btfsc	(_PFN+1)& (0+255),4,b
  2451  001EA6  D05C               	goto	l201
  2452  001EA8  0101               	movlb	(_PFN+1) shr (0+8)
  2453  001EAA  BB58               	btfsc	(_PFN+1)& (0+255),5,b
  2454  001EAC  D059               	goto	l201
  2455                           ;main.c: 1097: {
  2456  001EAE  0101               	movlb	(_PFN+4) shr (0+8)
  2457  001EB0  A35B               	btfss	(_PFN+4)& (0+255),1,b
  2458  001EB2  B55B               	btfsc	(_PFN+4)& (0+255),2,b
  2459  001EB4  D018               	goto	l202
  2460                           ;main.c: 1099: {
  2461  001EB6  0101               	movlb	(_PFN+3) shr (0+8)
  2462  001EB8  A15A               	btfss	(_PFN+3)& (0+255),0,b
  2463  001EBA  D00C               	goto	l203
  2464                           ;main.c: 1101: {
  2465  001EBC  A35A               	btfss	(_PFN+3)& (0+255),1,b
  2466  001EBE  D007               	goto	l204
  2467                           ;main.c: 1103: {
  2468  001EC0  EC75  F065         	call	_EndOFF	;wreg free
  2469                           ;main.c: 1105: PrintCS(PFN.CS);
  2470  001EC4  C162  FFE8         	movff	_PFN+11,wreg
  2471  001EC8  EC7E  F065         	call	_PrintCS
  2472                           ;main.c: 1106: }
  2473  001ECC  D06F               	goto	l199
  2474  001ECE                     l204:
  2475                           ;main.c: 1107: else EndCS();
  2476  001ECE  EC93  F065         	call	_EndCS	;wreg free
  2477                           ;main.c: 1110: }
  2478  001ED2  D06C               	goto	l199
  2479  001ED4                     l203:
  2480                           ;main.c: 1111: else
  2481  001ED4  0101               	movlb	(_PFN+5) shr (0+8)
  2482  001ED6  A35C               	btfss	(_PFN+5)& (0+255),1,b
  2483  001ED8  D003               	goto	l207
  2484  001EDA  ECD1  F064         	call	_PrintL3	;wreg free
  2485  001EDE  D066               	goto	l199
  2486  001EE0                     l207:
  2487                           ;main.c: 1114: else
  2488  001EE0  EC60  F065         	call	_PrintOFF	;wreg free
  2489                           ;main.c: 1117: }
  2490  001EE4  D063               	goto	l199
  2491  001EE6                     l202:
  2492                           ;main.c: 1120: else
  2493  001EE6  0101               	movlb	(_PFN+4) shr (0+8)
  2494  001EE8  A35B               	btfss	(_PFN+4)& (0+255),1,b
  2495  001EEA  D01F               	goto	l210
  2496                           ;main.c: 1123: {
  2497  001EEC  A15A               	btfss	(_PFN+3)& (0+255),0,b
  2498  001EEE  D00C               	goto	l211
  2499                           ;main.c: 1125: {
  2500  001EF0  A35A               	btfss	(_PFN+3)& (0+255),1,b
  2501  001EF2  D007               	goto	l212
  2502                           ;main.c: 1127: {
  2503  001EF4  EC75  F065         	call	_EndOFF	;wreg free
  2504                           ;main.c: 1129: PrintCS(PFN.CS);
  2505  001EF8  C162  FFE8         	movff	_PFN+11,wreg
  2506  001EFC  EC7E  F065         	call	_PrintCS
  2507                           ;main.c: 1130: }
  2508  001F00  D055               	goto	l199
  2509  001F02                     l212:
  2510                           ;main.c: 1131: else EndCS();
  2511  001F02  EC93  F065         	call	_EndCS	;wreg free
  2512                           ;main.c: 1134: }
  2513  001F06  D052               	goto	l199
  2514  001F08                     l211:
  2515                           ;main.c: 1135: else
  2516  001F08  0101               	movlb	(_PFN+5) shr (0+8)
  2517  001F0A  BD5C               	btfsc	(_PFN+5)& (0+255),6,b
  2518  001F0C  D00B               	goto	l215
  2519                           ;main.c: 1138: {
  2520  001F0E  EC75  F065         	call	_EndOFF	;wreg free
  2521                           ;main.c: 1140: EndCS();
  2522  001F12  EC93  F065         	call	_EndCS	;wreg free
  2523                           ;main.c: 1141: EndCW();
  2524  001F16  ECB4  F065         	call	_EndCW	;wreg free
  2525                           ;main.c: 1142: PrintCO(PFN.CO);
  2526  001F1A  C160  FFE8         	movff	_PFN+9,wreg
  2527  001F1E  ECB9  F065         	call	_PrintCO
  2528                           ;main.c: 1143: }
  2529  001F22  D044               	goto	l199
  2530  001F24                     l215:
  2531                           ;main.c: 1144: else PrintOFF();
  2532  001F24  EC60  F065         	call	_PrintOFF	;wreg free
  2533                           ;main.c: 1145: }
  2534  001F28  D041               	goto	l199
  2535  001F2A                     l210:
  2536                           ;main.c: 1147: else
  2537  001F2A  0101               	movlb	(_PFN+3) shr (0+8)
  2538  001F2C  A15A               	btfss	(_PFN+3)& (0+255),0,b
  2539  001F2E  D009               	goto	l218
  2540                           ;main.c: 1150: {
  2541  001F30  A35A               	btfss	(_PFN+3)& (0+255),1,b
  2542  001F32  D03C               	goto	l199
  2543                           ;main.c: 1152: {
  2544  001F34  EC75  F065         	call	_EndOFF	;wreg free
  2545                           ;main.c: 1154: PrintCS(PFN.CS);
  2546  001F38  C162  FFE8         	movff	_PFN+11,wreg
  2547  001F3C  EC7E  F065         	call	_PrintCS
  2548                           ;main.c: 1155: }
  2549  001F40  D035               	goto	l199
  2550  001F42                     l218:
  2551                           ;main.c: 1157: else
  2552  001F42  0101               	movlb	(_PFN+5) shr (0+8)
  2553  001F44  BF5C               	btfsc	(_PFN+5)& (0+255),7,b
  2554  001F46  D009               	goto	l221
  2555                           ;main.c: 1161: {
  2556  001F48  EC75  F065         	call	_EndOFF	;wreg free
  2557                           ;main.c: 1163: EndCS();
  2558  001F4C  EC93  F065         	call	_EndCS	;wreg free
  2559                           ;main.c: 1164: PrintCW(PFN.CW);
  2560  001F50  C161  FFE8         	movff	_PFN+10,wreg
  2561  001F54  EC9F  F065         	call	_PrintCW
  2562                           ;main.c: 1165: }
  2563  001F58  D029               	goto	l199
  2564  001F5A                     l221:
  2565                           ;main.c: 1166: else PrintOFF();
  2566  001F5A  EC60  F065         	call	_PrintOFF	;wreg free
  2567                           ;main.c: 1167: }
  2568  001F5E  D026               	goto	l199
  2569  001F60                     l201:
  2570                           ;main.c: 1171: else
  2571  001F60  0101               	movlb	(_PFN+3) shr (0+8)
  2572  001F62  BF5A               	btfsc	(_PFN+3)& (0+255),7,b
  2573  001F64  D002               	goto	u2850
  2574  001F66  A958               	btfss	(_PFN+1)& (0+255),4,b
  2575  001F68  D012               	goto	l224
  2576  001F6A                     u2850:
  2577                           ;main.c: 1174: {
  2578  001F6A  0101               	movlb	(_PFN+5) shr (0+8)
  2579  001F6C  AD5C               	btfss	(_PFN+5)& (0+255),6,b
  2580  001F6E  A35B               	btfss	(_PFN+4)& (0+255),1,b
  2581  001F70  D00B               	goto	l225
  2582                           ;main.c: 1176: {
  2583  001F72  EC75  F065         	call	_EndOFF	;wreg free
  2584                           ;main.c: 1178: EndCS();
  2585  001F76  EC93  F065         	call	_EndCS	;wreg free
  2586                           ;main.c: 1179: EndCW();
  2587  001F7A  ECB4  F065         	call	_EndCW	;wreg free
  2588                           ;main.c: 1180: PrintCO(PFN.CO);
  2589  001F7E  C160  FFE8         	movff	_PFN+9,wreg
  2590  001F82  ECB9  F065         	call	_PrintCO
  2591                           ;main.c: 1181: }
  2592  001F86  D012               	goto	l199
  2593  001F88                     l225:
  2594                           ;main.c: 1182: else PrintOFF();
  2595  001F88  EC60  F065         	call	_PrintOFF	;wreg free
  2596                           ;main.c: 1183: }
  2597  001F8C  D00F               	goto	l199
  2598  001F8E                     l224:
  2599                           ;main.c: 1184: else
  2600  001F8E  0101               	movlb	(_PFN+5) shr (0+8)
  2601  001F90  AF5C               	btfss	(_PFN+5)& (0+255),7,b
  2602  001F92  A55B               	btfss	(_PFN+4)& (0+255),2,b
  2603  001F94  D009               	goto	l228
  2604                           ;main.c: 1187: {
  2605  001F96  EC75  F065         	call	_EndOFF	;wreg free
  2606                           ;main.c: 1189: EndCS();
  2607  001F9A  EC93  F065         	call	_EndCS	;wreg free
  2608                           ;main.c: 1190: PrintCW(PFN.CW);
  2609  001F9E  C161  FFE8         	movff	_PFN+10,wreg
  2610  001FA2  EC9F  F065         	call	_PrintCW
  2611                           ;main.c: 1191: }
  2612  001FA6  D002               	goto	l199
  2613  001FA8                     l228:
  2614                           ;main.c: 1192: else PrintOFF();
  2615  001FA8  EC60  F065         	call	_PrintOFF	;wreg free
  2616  001FAC                     l199:
  2617                           ;main.c: 1193: }
  2618  001FAC  0E01               	movlw	1
  2619  001FAE  DD56               	call	_NastawaCOCW
  2620  001FB0                     l171:
  2621                           ;main.c: 1200: }
  2622  001FB0  0101               	movlb	(_PFN+3) shr (0+8)
  2623  001FB2  AD5A               	btfss	(_PFN+3)& (0+255),6,b
  2624  001FB4  BB5A               	btfsc	(_PFN+3)& (0+255),5,b
  2625  001FB6  D001               	goto	u2941
  2626  001FB8  D002               	goto	u2940
  2627  001FBA                     u2941:
  2628  001FBA  0E01               	movlw	1
  2629  001FBC  D001               	goto	u2950
  2630  001FBE                     u2940:
  2631  001FBE  0E00               	movlw	0
  2632  001FC0                     u2950:
  2633  001FC0  0100               	movlb	__Lparam shr (0+8)
  2634  001FC2  6FD7               	movwf	?_SetDiode^(__Lparam& (0+65280)),b
  2635  001FC4  0E02               	movlw	2
  2636  001FC6  EC18  F066         	call	_SetDiode
  2637                           ;main.c: 1205: SetDiode(0b00000100,PFN._ofnserw)
      +                          ;
  2638  001FCA  EE01  F05A         	lfsr	0,_PFN+3
  2639  001FCE  34EF               	rlcf	indf0,w,c
  2640  001FD0  34EF               	rlcf	indf0,w,c
  2641  001FD2  0B01               	andlw	1
  2642  001FD4  0100               	movlb	__Lparam shr (0+8)
  2643  001FD6  6FD7               	movwf	?_SetDiode^(__Lparam& (0+65280)),b
  2644  001FD8  0E04               	movlw	4
  2645  001FDA  EC18  F066         	call	_SetDiode
  2646                           ;main.c: 1207: SetDiode(0b00000001,PFN._ofzima&&
      +                          !PFN._ofoff&&!PFN._opKNF);
  2647  001FDE  0101               	movlb	(_PFN+6) shr (0+8)
  2648  001FE0  B35D               	btfsc	(_PFN+6)& (0+255),1,b
  2649  001FE2  B75D               	btfsc	(_PFN+6)& (0+255),3,b
  2650  001FE4  D005               	goto	u3000
  2651  001FE6  0101               	movlb	(_PFN+4) shr (0+8)
  2652  001FE8  B75B               	btfsc	(_PFN+4)& (0+255),3,b
  2653  001FEA  D002               	goto	u3000
  2654  001FEC  0E01               	movlw	1
  2655  001FEE  D001               	goto	u3010
  2656  001FF0                     u3000:
  2657  001FF0  0E00               	movlw	0
  2658  001FF2                     u3010:
  2659  001FF2  0100               	movlb	__Lparam shr (0+8)
  2660  001FF4  6FD7               	movwf	?_SetDiode^(__Lparam& (0+65280)),b
  2661  001FF6  0E01               	movlw	1
  2662  001FF8  EC18  F066         	call	_SetDiode
  2663                           ;main.c: 1208: SetDiode(0b00001000,(PFN._ofzima|
      +                          |PFN._oflato)&&!PFN._ofoff&&!PFN._opKNF);
  2664  001FFC  0101               	movlb	(_PFN+6) shr (0+8)
  2665  001FFE  A35D               	btfss	(_PFN+6)& (0+255),1,b
  2666  002000  B55D               	btfsc	(_PFN+6)& (0+255),2,b
  2667  002002  D001               	goto	u3041
  2668  002004  D008               	goto	u3080
  2669  002006                     u3041:
  2670  002006  0101               	movlb	(_PFN+6) shr (0+8)
  2671  002008  B75D               	btfsc	(_PFN+6)& (0+255),3,b
  2672  00200A  D005               	goto	u3080
  2673  00200C  0101               	movlb	(_PFN+4) shr (0+8)
  2674  00200E  B75B               	btfsc	(_PFN+4)& (0+255),3,b
  2675  002010  D002               	goto	u3080
  2676  002012  0E01               	movlw	1
  2677  002014  D001               	goto	u3090
  2678  002016                     u3080:
  2679  002016  0E00               	movlw	0
  2680  002018                     u3090:
  2681  002018  0100               	movlb	__Lparam shr (0+8)
  2682  00201A  6FD7               	movwf	?_SetDiode^(__Lparam& (0+65280)),b
  2683  00201C  0E08               	movlw	8
  2684  00201E  EF18  F066         	goto	_SetDiode
  2685                           ;main.c: 1209: }
  2686  002022                     __end_of_DecWSW:
  2687                           ;main.c: 1214: void DecERR(void)
  2688                           ;main.c: 1215: {
  2689  002022                     _DecERR:
  2690  000000                     
  2691                           ;main.c: 1216: unsigned char KnfDisErr=0;
  2692  002022  6AD9               	clrf	fsr2l,c
  2693                           ;main.c: 1217: unsigned char w;
  2694  002024  0E04               	movlw	4
  2695  002026  ECA6  F068         	call	_RdPrt
  2696  00202A  E207               	bc	l231
  2697                           ;main.c: 1227: {
  2698  00202C  0E02               	movlw	2
  2699  00202E  CFE8 F19C          	movff	wreg,_M+34
  2700                           ;main.c: 1230: SetErr(0x02);
  2701  002032  ECE1  F062         	call	_SetErr
  2702                           ;main.c: 1231: ErrPTG();
  2703  002036  ECA7  F01E         	call	_ErrPTG	;wreg free
  2704  00203A                     l231:
  2705                           ;main.c: 1232: }
  2706  00203A  0101               	movlb	(_M+17) shr (0+8)
  2707  00203C  A18B               	btfss	(_M+17)& (0+255),0,b
  2708  00203E  D00A               	goto	l232
  2709                           ;main.c: 1235: {
  2710  002040  6B9C               	clrf	(_M+34)& (0+255),b
  2711                           ;main.c: 1239: if(PFN._KnfDisErr) EndErr();
  2712  002042  AB59               	btfss	(_PFN+2)& (0+255),5,b
  2713  002044  D003               	goto	l233
  2714  002046  ECC2  F063         	call	_EndErr	;wreg free
  2715  00204A  D013               	goto	l238
  2716  00204C                     l233:
  2717                           ;main.c: 1240: else SetMsg(0x01);
  2718  00204C  0E01               	movlw	1
  2719  00204E  ECE6  F062         	call	_SetMsg
  2720  002052  D00F               	goto	l238
  2721                           ;main.c: 1241: M._RUSZ_NTC_CO=0;
  2722                           ;main.c: 1242: M._RUSZ_CISN=0;
  2723                           ;main.c: 1243: M._RUSZ_NCISN=0;
  2724                           ;main.c: 1244: M._RUSZ_NTC_CW=0;
  2725                           ;main.c: 1245: M._RUSZ_MOD=0;
  2726                           ;main.c: 1246: }
  2727  002054                     l232:
  2728                           ;main.c: 1247: else
  2729  002054  0101               	movlb	(_M+16) shr (0+8)
  2730  002056  AF8A               	btfss	(_M+16)& (0+255),7,b
  2731  002058  D00F               	goto	l236
  2732                           ;main.c: 1249: {
  2733  00205A  6B9C               	clrf	(_M+34)& (0+255),b
  2734                           ;main.c: 1259: if(PFN._KnfDisErr) EndErr();
  2735  00205C  AB59               	btfss	(_PFN+2)& (0+255),5,b
  2736  00205E  D003               	goto	l237
  2737  002060  ECC2  F063         	call	_EndErr	;wreg free
  2738  002064  D006               	goto	l238
  2739  002066                     l237:
  2740                           ;main.c: 1260: else
  2741  002066  0101               	movlb	(_M+28) shr (0+8)
  2742  002068  A196               	btfss	(_M+28)& (0+255),0,b
  2743  00206A  D003               	goto	l238
  2744  00206C  0E03               	movlw	3
  2745  00206E  ECE6  F062         	call	_SetMsg
  2746  002072                     l238:
  2747                           ;main.c: 1263: }
  2748  002072  0101               	movlb	(_M+26) shr (0+8)
  2749  002074  9194               	bcf	(_M+26)& (0+255),0,b
  2750  002076  D040               	goto	L2
  2751                           ;main.c: 1265: M._RUSZ_CISN=0;
  2752                           ;main.c: 1266: M._RUSZ_NCISN=0;
  2753                           ;main.c: 1267: M._RUSZ_NTC_CW=0;
  2754                           ;main.c: 1268: M._RUSZ_MOD=0;
  2755                           ;main.c: 1269: }
  2756  002078                     l236:
  2757                           ;main.c: 1270: else
  2758  002078  0E12               	movlw	18
  2759  00207A  ECA6  F068         	call	_RdPrt
  2760  00207E  E308               	bnc	u3201
  2761  002080  C08B  F000         	movff	_DtKNF+7,btemp
  2762  002084  0400               	decf	btemp,w,c
  2763  002086  E004               	bz	u3201
  2764  002088  C08B  FFE8         	movff	_DtKNF+7,wreg
  2765  00208C  0A02               	xorlw	2
  2766  00208E  E114               	bnz	u3300
  2767  002090                     u3201:
  2768  002090  0E12               	movlw	18
  2769  002092  ECA6  F068         	call	_RdPrt
  2770  002096  E31F               	bnc	l241
  2771  002098  0101               	movlb	(_M+2) shr (0+8)
  2772  00209A  517C               	movf	(_M+2)& (0+255),w,b
  2773  00209C  117D               	iorwf	(_M+3)& (0+255),w,b
  2774  00209E  E11B               	bnz	l241
  2775  0020A0  0101               	movlb	(_M+8) shr (0+8)
  2776  0020A2  5182               	movf	(_M+8)& (0+255),w,b
  2777  0020A4  1183               	iorwf	(_M+9)& (0+255),w,b
  2778  0020A6  E117               	bnz	l241
  2779  0020A8  C08B  F000         	movff	_DtKNF+7,btemp
  2780  0020AC  0400               	decf	btemp,w,c
  2781  0020AE  E004               	bz	u3300
  2782  0020B0  C08B  FFE8         	movff	_DtKNF+7,wreg
  2783  0020B4  0A02               	xorlw	2
  2784  0020B6  E10F               	bnz	l241
  2785  0020B8                     u3300:
  2786                           ;main.c: 1273: {
  2787  0020B8  0E04               	movlw	4
  2788  0020BA  CFE8 F19C          	movff	wreg,_M+34
  2789                           ;main.c: 1277: if(PFN._KnfDisErr) EndErr();
  2790  0020BE  0101               	movlb	(_PFN+2) shr (0+8)
  2791  0020C0  AB59               	btfss	(_PFN+2)& (0+255),5,b
  2792  0020C2  D003               	goto	l242
  2793  0020C4  ECC2  F063         	call	_EndErr	;wreg free
  2794  0020C8  D003               	goto	l243
  2795  0020CA                     l242:
  2796                           ;main.c: 1278: else SetErr(0x04);
  2797  0020CA  0E04               	movlw	4
  2798  0020CC  ECE1  F062         	call	_SetErr
  2799  0020D0                     l243:
  2800                           ;main.c: 1279: M._RUSZ_NTC_CO=1;
  2801  0020D0  0101               	movlb	(_M+26) shr (0+8)
  2802  0020D2  8194               	bsf	(_M+26)& (0+255),0,b
  2803  0020D4  D011               	goto	L2
  2804                           ;main.c: 1280: M._RUSZ_CISN=0;
  2805                           ;main.c: 1281: M._RUSZ_NCISN=0;
  2806                           ;main.c: 1282: M._RUSZ_NTC_CW=0;
  2807                           ;main.c: 1283: M._RUSZ_MOD=0;
  2808                           ;main.c: 1284: }
  2809  0020D6                     l241:
  2810                           ;main.c: 1285: else
  2811  0020D6  0101               	movlb	(_M+26) shr (0+8)
  2812  0020D8  9194               	bcf	(_M+26)& (0+255),0,b
  2813                           ;main.c: 1289: if(M._RUSZ_POMPE)
  2814  0020DA  A58B               	btfss	(_M+17)& (0+255),2,b
  2815  0020DC  D010               	goto	l245
  2816                           ;main.c: 1290: {
  2817  0020DE  6B9C               	clrf	(_M+34)& (0+255),b
  2818                           ;main.c: 1297: if(PFN._KnfDisErr) EndErr();
  2819  0020E0  AB59               	btfss	(_PFN+2)& (0+255),5,b
  2820  0020E2  D003               	goto	l246
  2821  0020E4  ECC2  F063         	call	_EndErr	;wreg free
  2822  0020E8  D006               	goto	l247
  2823  0020EA                     l246:
  2824                           ;main.c: 1298: else
  2825  0020EA  0101               	movlb	(_M+28) shr (0+8)
  2826  0020EC  A396               	btfss	(_M+28)& (0+255),1,b
  2827  0020EE  D003               	goto	l247
  2828  0020F0  0E05               	movlw	5
  2829  0020F2  ECE6  F062         	call	_SetMsg
  2830  0020F6                     l247:
  2831                           ;main.c: 1301: }
  2832  0020F6  0101               	movlb	(_M+26) shr (0+8)
  2833  0020F8                     L2:
  2834  0020F8  9B94               	bcf	(_M+26)& (0+255),5,b
  2835                           ;main.c: 1303: M._RUSZ_NCISN=0;
  2836  0020FA  9D94               	bcf	(_M+26)& (0+255),6,b
  2837  0020FC  D028               	goto	L4
  2838                           ;main.c: 1304: M._RUSZ_NTC_CW=0;
  2839                           ;main.c: 1305: M._RUSZ_MOD=0;
  2840                           ;main.c: 1306: }
  2841  0020FE                     l245:
  2842                           ;main.c: 1307: else
  2843  0020FE  0E0E               	movlw	14
  2844  002100  ECA6  F068         	call	_RdPrt
  2845  002104  E310               	bnc	l250
  2846                           ;main.c: 1311: {
  2847  002106  0E08               	movlw	8
  2848  002108  CFE8 F19C          	movff	wreg,_M+34
  2849                           ;main.c: 1315: if(PFN._KnfDisErr) EndErr();
  2850  00210C  0101               	movlb	(_PFN+2) shr (0+8)
  2851  00210E  AB59               	btfss	(_PFN+2)& (0+255),5,b
  2852  002110  D003               	goto	l251
  2853  002112  ECC2  F063         	call	_EndErr	;wreg free
  2854  002116  D003               	goto	l252
  2855  002118                     l251:
  2856                           ;main.c: 1316: else SetErr(0x08);
  2857  002118  0E08               	movlw	8
  2858  00211A  ECE1  F062         	call	_SetErr
  2859  00211E                     l252:
  2860                           ;main.c: 1317: M._RUSZ_NCISN=1;
  2861  00211E  0101               	movlb	(_M+26) shr (0+8)
  2862  002120  8D94               	bsf	(_M+26)& (0+255),6,b
  2863                           ;main.c: 1318: M._RUSZ_CISN=0;
  2864  002122  9B94               	bcf	(_M+26)& (0+255),5,b
  2865  002124  D014               	goto	L4
  2866                           ;main.c: 1319: M._RUSZ_NTC_CW=0;
  2867                           ;main.c: 1320: M._RUSZ_MOD=0;
  2868                           ;main.c: 1321: }
  2869  002126                     l250:
  2870                           ;main.c: 1322: else
  2871  002126  0101               	movlb	(_M+26) shr (0+8)
  2872  002128  9D94               	bcf	(_M+26)& (0+255),6,b
  2873                           ;main.c: 1326: if(!RdPrt(15))
  2874  00212A  0E0F               	movlw	15
  2875  00212C  ECA6  F068         	call	_RdPrt
  2876  002130  E210               	bc	l254
  2877                           ;main.c: 1327: {
  2878  002132  0E09               	movlw	9
  2879  002134  CFE8 F19C          	movff	wreg,_M+34
  2880                           ;main.c: 1332: if(PFN._KnfDisErr) EndErr();
  2881  002138  0101               	movlb	(_PFN+2) shr (0+8)
  2882  00213A  AB59               	btfss	(_PFN+2)& (0+255),5,b
  2883  00213C  D003               	goto	l255
  2884  00213E  ECC2  F063         	call	_EndErr	;wreg free
  2885  002142  D003               	goto	l256
  2886  002144                     l255:
  2887                           ;main.c: 1333: else SetErr(0x09);
  2888  002144  0E09               	movlw	9
  2889  002146  ECE1  F062         	call	_SetErr
  2890  00214A                     l256:
  2891                           ;main.c: 1335: M._RUSZ_CISN=1;
  2892  00214A  0101               	movlb	(_M+26) shr (0+8)
  2893  00214C  8B94               	bsf	(_M+26)& (0+255),5,b
  2894  00214E                     L4:
  2895                           ;main.c: 1336: M._RUSZ_NTC_CW=0;
  2896  00214E  9394               	bcf	(_M+26)& (0+255),1,b
  2897  002150  D04A               	goto	L5
  2898                           ;main.c: 1337: M._RUSZ_MOD=0;
  2899                           ;main.c: 1338: }
  2900  002152                     l254:
  2901                           ;main.c: 1339: else
  2902  002152  0101               	movlb	(_M+26) shr (0+8)
  2903  002154  9B94               	bcf	(_M+26)& (0+255),5,b
  2904                           ;main.c: 1342: if(DtKNF.tpkt!=0)
  2905  002156  EE00  F08B         	lfsr	0,_DtKNF+7
  2906  00215A  50EF               	movf	indf0,w,c
  2907  00215C  E01D               	bz	l258
  2908                           ;main.c: 1343: {
  2909  00215E  0102               	movlb	_DtCW shr (0+8)
  2910  002160  A11B               	btfss	_DtCW& (0+255),0,b
  2911  002162  D005               	goto	u3420
  2912  002164  0101               	movlb	(_PFN+31) shr (0+8)
  2913  002166  5176               	movf	(_PFN+31)& (0+255),w,b
  2914  002168  0A02               	xorlw	2
  2915  00216A  1177               	iorwf	(_PFN+32)& (0+255),w,b
  2916  00216C  E013               	bz	u3521
  2917  00216E                     u3420:
  2918  00216E  0101               	movlb	(_PFN+31) shr (0+8)
  2919  002170  5176               	movf	(_PFN+31)& (0+255),w,b
  2920  002172  0A03               	xorlw	3
  2921  002174  1177               	iorwf	(_PFN+32)& (0+255),w,b
  2922  002176  E124               	bnz	u3620
  2923  002178  0102               	movlb	_DtCW shr (0+8)
  2924  00217A  A11B               	btfss	_DtCW& (0+255),0,b
  2925  00217C  D021               	goto	u3620
  2926  00217E  0101               	movlb	(_M+8) shr (0+8)
  2927  002180  5182               	movf	(_M+8)& (0+255),w,b
  2928  002182  1183               	iorwf	(_M+9)& (0+255),w,b
  2929  002184  E107               	bnz	u3521
  2930  002186  517C               	movf	(_M+2)& (0+255),w,b
  2931  002188  117D               	iorwf	(_M+3)& (0+255),w,b
  2932  00218A  E104               	bnz	u3521
  2933  00218C  0101               	movlb	(_M+6) shr (0+8)
  2934  00218E  5180               	movf	(_M+6)& (0+255),w,b
  2935  002190  1181               	iorwf	(_M+7)& (0+255),w,b
  2936  002192  E016               	bz	u3620
  2937  002194                     u3521:
  2938  002194  0E01               	movlw	1
  2939  002196  D015               	goto	u3630
  2940                           ;main.c: 1345: }
  2941  002198                     l258:
  2942                           ;main.c: 1346: else
  2943  002198  0102               	movlb	_DtCW shr (0+8)
  2944  00219A  A11B               	btfss	_DtCW& (0+255),0,b
  2945  00219C  D005               	goto	u3560
  2946  00219E  0101               	movlb	(_PFN+31) shr (0+8)
  2947  0021A0  5176               	movf	(_PFN+31)& (0+255),w,b
  2948  0021A2  0A02               	xorlw	2
  2949  0021A4  1177               	iorwf	(_PFN+32)& (0+255),w,b
  2950  0021A6  E0F6               	bz	u3521
  2951  0021A8                     u3560:
  2952  0021A8  0101               	movlb	(_PFN+31) shr (0+8)
  2953  0021AA  5176               	movf	(_PFN+31)& (0+255),w,b
  2954  0021AC  0A03               	xorlw	3
  2955  0021AE  1177               	iorwf	(_PFN+32)& (0+255),w,b
  2956  0021B0  E107               	bnz	u3620
  2957  0021B2  0102               	movlb	_DtCW shr (0+8)
  2958  0021B4  A11B               	btfss	_DtCW& (0+255),0,b
  2959  0021B6  D004               	goto	u3620
  2960  0021B8  0E0B               	movlw	11
  2961  0021BA  ECA6  F068         	call	_RdPrt
  2962  0021BE  E2EA               	bc	u3521
  2963  0021C0                     u3620:
  2964  0021C0  0E00               	movlw	0
  2965  0021C2                     u3630:
  2966  0021C2  0100               	movlb	__Lparam shr (0+8)
  2967  0021C4  6FD7               	movwf	?a_DecERR^(__Lparam& (0+65280)),b
  2968                           ;main.c: 1349: }
  2969  0021C6  51D7               	movf	?a_DecERR^(__Lparam& (0+65280)),w
  2970  0021C8  E010               	bz	l260
  2971                           ;main.c: 1352: {
  2972  0021CA  0E0A               	movlw	10
  2973  0021CC  CFE8 F19C          	movff	wreg,_M+34
  2974                           ;main.c: 1356: if(PFN._KnfDisErr) EndErr();
  2975  0021D0  0101               	movlb	(_PFN+2) shr (0+8)
  2976  0021D2  AB59               	btfss	(_PFN+2)& (0+255),5,b
  2977  0021D4  D003               	goto	l261
  2978  0021D6  ECC2  F063         	call	_EndErr	;wreg free
  2979  0021DA  D003               	goto	l262
  2980  0021DC                     l261:
  2981                           ;main.c: 1357: else SetErr(0x0A);
  2982  0021DC  0E0A               	movlw	10
  2983  0021DE  ECE1  F062         	call	_SetErr
  2984  0021E2                     l262:
  2985                           ;main.c: 1358: M._RUSZ_NTC_CW=1;
  2986  0021E2  0101               	movlb	(_M+26) shr (0+8)
  2987  0021E4  8394               	bsf	(_M+26)& (0+255),1,b
  2988  0021E6                     L5:
  2989                           ;main.c: 1359: M._RUSZ_MOD=0;
  2990  0021E6  9994               	bcf	(_M+26)& (0+255),4,b
  2991                           ;main.c: 1360: }
  2992  0021E8  D037               	goto	l235
  2993  0021EA                     l260:
  2994                           ;main.c: 1361: else
  2995  0021EA  0101               	movlb	(_M+26) shr (0+8)
  2996  0021EC  9394               	bcf	(_M+26)& (0+255),1,b
  2997                           ;main.c: 1365: if(!RdPrt(8))
  2998  0021EE  0E08               	movlw	8
  2999  0021F0  ECA6  F068         	call	_RdPrt
  3000  0021F4  E20F               	bc	l264
  3001                           ;main.c: 1366: {
  3002  0021F6  0E07               	movlw	7
  3003  0021F8  CFE8 F19C          	movff	wreg,_M+34
  3004                           ;main.c: 1370: if(PFN._KnfDisErr) EndErr();
  3005  0021FC  0101               	movlb	(_PFN+2) shr (0+8)
  3006  0021FE  AB59               	btfss	(_PFN+2)& (0+255),5,b
  3007  002200  D003               	goto	l265
  3008  002202  ECC2  F063         	call	_EndErr	;wreg free
  3009  002206  D003               	goto	l266
  3010  002208                     l265:
  3011                           ;main.c: 1371: else SetErr(0x07);
  3012  002208  0E07               	movlw	7
  3013  00220A  ECE1  F062         	call	_SetErr
  3014  00220E                     l266:
  3015                           ;main.c: 1372: M._RUSZ_MOD=1;
  3016  00220E  0101               	movlb	(_M+26) shr (0+8)
  3017  002210  8994               	bsf	(_M+26)& (0+255),4,b
  3018                           ;main.c: 1373: }
  3019  002212  D022               	goto	l235
  3020  002214                     l264:
  3021                           ;main.c: 1374: else
  3022  002214  0101               	movlb	(_M+26) shr (0+8)
  3023  002216  9994               	bcf	(_M+26)& (0+255),4,b
  3024                           ;main.c: 1377: if(DtKNF.rdpm!=0)
  3025  002218  EE00  F08D         	lfsr	0,_DtKNF+9
  3026  00221C  50EF               	movf	indf0,w,c
  3027  00221E  E01A               	bz	l268
  3028                           ;main.c: 1378: {
  3029  002220  5176               	movf	(_PFN+31)& (0+255),w,b
  3030  002222  0A03               	xorlw	3
  3031  002224  1177               	iorwf	(_PFN+32)& (0+255),w,b
  3032  002226  B4D8               	btfsc	status,2,c
  3033  002228  A595               	btfss	(_M+27)& (0+255),2,b
  3034  00222A  D014               	goto	l268
  3035  00222C  BF95               	btfsc	(_M+27)& (0+255),7,b
  3036  00222E  D012               	goto	l268
  3037  002230  0102               	movlb	_DtIN shr (0+8)
  3038  002232  A12A               	btfss	_DtIN& (0+255),0,b
  3039  002234  D00F               	goto	l268
  3040                           ;main.c: 1380: {
  3041  002236  0E0E               	movlw	14
  3042  002238  CFE8 F19C          	movff	wreg,_M+34
  3043                           ;main.c: 1384: if(PFN._KnfDisErr) EndErr();
  3044  00223C  0101               	movlb	(_PFN+2) shr (0+8)
  3045  00223E  AB59               	btfss	(_PFN+2)& (0+255),5,b
  3046  002240  D003               	goto	l270
  3047  002242  ECC2  F063         	call	_EndErr	;wreg free
  3048  002246  D003               	goto	l271
  3049  002248                     l270:
  3050                           ;main.c: 1385: else SetErr(0x0E);
  3051  002248  0E0E               	movlw	14
  3052  00224A  ECE1  F062         	call	_SetErr
  3053  00224E                     l271:
  3054                           ;main.c: 1386: M._RUSZ_NTC_IN=1;
  3055  00224E  0101               	movlb	(_M+26) shr (0+8)
  3056  002250  8594               	bsf	(_M+26)& (0+255),2,b
  3057                           ;main.c: 1387: }
  3058  002252  D002               	goto	l235
  3059                           ;main.c: 1388: else
  3060                           ;main.c: 1391: }
  3061  002254                     l268:
  3062                           ;main.c: 1393: else
  3063  002254  0101               	movlb	(_M+26) shr (0+8)
  3064  002256  9594               	bcf	(_M+26)& (0+255),2,b
  3065  002258                     l235:
  3066                           ;main.c: 1396: }
  3067  002258  0101               	movlb	(_M+17) shr (0+8)
  3068  00225A  B18B               	btfsc	(_M+17)& (0+255),0,b
  3069  00225C  D024               	goto	l274
  3070  00225E  0E05               	movlw	5
  3071  002260  ECA6  F068         	call	_RdPrt
  3072  002264  E220               	bc	l274
  3073  002266  0101               	movlb	(_M+16) shr (0+8)
  3074  002268  A58A               	btfss	(_M+16)& (0+255),2,b
  3075  00226A  A083               	btfss	3971,0,c	;volatile
  3076  00226C  D01C               	goto	l274
  3077                           ;main.c: 1408: {
  3078  00226E  0101               	movlb	(_M+27) shr (0+8)
  3079  002270  A395               	btfss	(_M+27)& (0+255),1,b
  3080  002272  D00E               	goto	l275
  3081                           ;main.c: 1410: {
  3082  002274  A683               	btfss	3971,3,c	;volatile
  3083  002276  D008               	goto	l276
  3084                           ;main.c: 1412: {
  3085  002278  0E03               	movlw	3
  3086  00227A  ECA6  F068         	call	_RdPrt
  3087  00227E  E313               	bnc	l274
  3088  002280  0E04               	movlw	4
  3089  002282  ECA6  F068         	call	_RdPrt
  3090  002286  D00B               	goto	L13
  3091                           ;main.c: 1414: {
  3092                           ;main.c: 1416: M._RUSZ_PLOMIEN=1;
  3093                           ;main.c: 1417: }
  3094  002288                     l276:
  3095                           ;main.c: 1419: else
  3096  002288  0E04               	movlw	4
  3097  00228A  ECA6  F068         	call	_RdPrt
  3098  00228E  D007               	goto	L13
  3099                           ;main.c: 1422: {
  3100                           ;main.c: 1424: M._RUSZ_PLOMIEN=1;
  3101                           ;main.c: 1425: }
  3102  002290                     l275:
  3103                           ;main.c: 1428: else
  3104  002290  0E02               	movlw	2
  3105  002292  ECA6  F068         	call	_RdPrt
  3106  002296  E307               	bnc	l274
  3107  002298  0E04               	movlw	4
  3108  00229A  ECA6  F068         	call	_RdPrt
  3109  00229E                     L13:
  3110  00229E  E303               	bnc	l274
  3111                           ;main.c: 1431: {
  3112  0022A0  0101               	movlb	(_M+42) shr (0+8)
  3113  0022A2  6BA4               	clrf	(_M+42)& (0+255),b
  3114                           ;main.c: 1433: M._RUSZ_PLOMIEN=1;
  3115  0022A4  818B               	bsf	(_M+17)& (0+255),0,b
  3116  0022A6                     l274:
  3117                           ;main.c: 1434: }
  3118  0022A6  0101               	movlb	(_M+27) shr (0+8)
  3119  0022A8  B395               	btfsc	(_M+27)& (0+255),1,b
  3120  0022AA  D011               	goto	l282
  3121                           ;main.c: 1440: {
  3122  0022AC  BF8A               	btfsc	(_M+16)& (0+255),7,b
  3123  0022AE  D03E               	goto	l284
  3124  0022B0  0E02               	movlw	2
  3125  0022B2  ECA6  F068         	call	_RdPrt
  3126  0022B6  E23A               	bc	l284
  3127  0022B8  0E04               	movlw	4
  3128  0022BA  ECA6  F068         	call	_RdPrt
  3129  0022BE  E336               	bnc	l284
  3130  0022C0  0101               	movlb	(_M+27) shr (0+8)
  3131  0022C2  A595               	btfss	(_M+27)& (0+255),2,b
  3132  0022C4  D033               	goto	l284
  3133                           ;main.c: 1442: {
  3134  0022C6  0101               	movlb	(_M+43) shr (0+8)
  3135  0022C8  6BA5               	clrf	(_M+43)& (0+255),b
  3136                           ;main.c: 1444: M._RUSZ_CIAG=1;
  3137  0022CA  8F8A               	bsf	(_M+16)& (0+255),7,b
  3138                           ;main.c: 1454: }
  3139  0022CC  D02F               	goto	l284
  3140  0022CE                     l282:
  3141                           ;main.c: 1456: else
  3142  0022CE  0101               	movlb	(_M+16) shr (0+8)
  3143  0022D0  AF8A               	btfss	(_M+16)& (0+255),7,b
  3144  0022D2  B58A               	btfsc	(_M+16)& (0+255),2,b
  3145  0022D4  D02B               	goto	l284
  3146  0022D6  0101               	movlb	(_M+27) shr (0+8)
  3147  0022D8  BD95               	btfsc	(_M+27)& (0+255),6,b
  3148  0022DA  D028               	goto	l284
  3149  0022DC  0E03               	movlw	3
  3150  0022DE  ECA6  F068         	call	_RdPrt
  3151  0022E2  A0D8               	btfss	status,0,c
  3152  0022E4  A683               	btfss	3971,3,c	;volatile
  3153  0022E6  D001               	goto	u4081
  3154  0022E8  D006               	goto	u4130
  3155  0022EA                     u4081:
  3156  0022EA  0E03               	movlw	3
  3157  0022EC  ECA6  F068         	call	_RdPrt
  3158  0022F0  B0D8               	btfsc	status,0,c
  3159  0022F2  B683               	btfsc	3971,3,c	;volatile
  3160  0022F4  D01B               	goto	l284
  3161  0022F6                     u4130:
  3162                           ;main.c: 1459: {
  3163  0022F6  0101               	movlb	(_M+43) shr (0+8)
  3164  0022F8  6BA5               	clrf	(_M+43)& (0+255),b
  3165                           ;main.c: 1461: M._RUSZ_CIAG=1;
  3166  0022FA  8F8A               	bsf	(_M+16)& (0+255),7,b
  3167                           ;main.c: 1462: if(!M.LICZNIK_CIG) StartRTS(10);
  3168  0022FC  EE01  F098         	lfsr	0,_M+30
  3169  002300  50EF               	movf	indf0,w,c
  3170  002302  E103               	bnz	l286
  3171  002304  0E0A               	movlw	10
  3172  002306  ECA4  F06E         	call	_StartRTS
  3173  00230A                     l286:
  3174                           ;main.c: 1463: M.LICZNIK_CIG++;
  3175  00230A  0101               	movlb	(_M+30) shr (0+8)
  3176  00230C  2B98               	incf	(_M+30)& (0+255),f,b
  3177                           ;main.c: 1464: if(M.LICZNIK_CIG>=5)
  3178  00230E  0E04               	movlw	4
  3179  002310  6598               	cpfsgt	(_M+30)& (0+255),b
  3180  002312  D00C               	goto	l284
  3181                           ;main.c: 1465: {
  3182  002314  6B98               	clrf	(_M+30)& (0+255),b
  3183                           ;main.c: 1467: M.ERR_BTY=0x03;
  3184  002316  0E03               	movlw	3
  3185  002318  CFE8 F19C          	movff	wreg,_M+34
  3186                           ;main.c: 1468: PrintErr(0x03,1);
  3187  00231C  0E01               	movlw	1
  3188  00231E  0100               	movlb	__Lparam shr (0+8)
  3189  002320  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  3190  002322  0E03               	movlw	3
  3191  002324  ECEC  F062         	call	_PrintErr
  3192                           ;main.c: 1469: ErrPTG();
  3193  002328  ECA7  F01E         	call	_ErrPTG	;wreg free
  3194  00232C                     l284:
  3195                           ;main.c: 1470: }
  3196  00232C  0101               	movlb	(_M+17) shr (0+8)
  3197  00232E  A18B               	btfss	(_M+17)& (0+255),0,b
  3198  002330  BF8A               	btfsc	(_M+16)& (0+255),7,b
  3199  002332  0012               	return	
  3200                           ;main.c: 1479: if(!M._RUSZ_NTC_CO&&!M._RUSZ_NCIS
      +                          N&&!M._RUSZ_CISN)
  3201  002334  0101               	movlb	(_M+26) shr (0+8)
  3202  002336  A194               	btfss	(_M+26)& (0+255),0,b
  3203  002338  BD94               	btfsc	(_M+26)& (0+255),6,b
  3204  00233A  0012               	return	
  3205  00233C  BB94               	btfsc	(_M+26)& (0+255),5,b
  3206  00233E  0012               	return	
  3207                           ;main.c: 1480: if(!M._RUSZ_NTC_CW&&!M._RUSZ_MOD&
      +                          &!M._RUSZ_POMPE&&!M._RUSZ_NTC_IN)
  3208  002340  A394               	btfss	(_M+26)& (0+255),1,b
  3209  002342  B994               	btfsc	(_M+26)& (0+255),4,b
  3210  002344  0012               	return	
  3211  002346  0101               	movlb	(_M+17) shr (0+8)
  3212  002348  B58B               	btfsc	(_M+17)& (0+255),2,b
  3213  00234A  0012               	return	
  3214  00234C  0101               	movlb	(_M+26) shr (0+8)
  3215  00234E  B594               	btfsc	(_M+26)& (0+255),2,b
  3216  002350  0012               	return	
  3217                           ;main.c: 1481: {
  3218  002352  0101               	movlb	(_M+34) shr (0+8)
  3219  002354  6B9C               	clrf	(_M+34)& (0+255),b
  3220                           ;main.c: 1483: EndErr();
  3221  002356  EFC2  F063         	goto	_EndErr	;wreg free
  3222                           ;main.c: 1484: }
  3223  00235A                     __end_of_DecERR:
  3224                           ;main.c: 1489: void DecSTR(void)
  3225                           ;main.c: 1490: {
  3226  00235A                     _DecSTR:
  3227  000000                     
  3228                           ;main.c: 1496: if(RTS(9)>=3)
  3229  00235A  0E09               	movlw	9
  3230  00235C  ECB6  F06E         	call	_RTS
  3231  002360  6E00               	movwf	btemp,c
  3232  002362  0E03               	movlw	3
  3233  002364  5C00               	subwf	btemp,w,c
  3234  002366  E303               	bnc	l292
  3235                           ;main.c: 1497: {
  3236  002368  0101               	movlb	(_M+27) shr (0+8)
  3237  00236A  9195               	bcf	(_M+27)& (0+255),0,b
  3238                           ;main.c: 1499: M._RS_START=0;
  3239  00236C  9F94               	bcf	(_M+26)& (0+255),7,b
  3240  00236E                     l292:
  3241                           ;main.c: 1500: }
  3242  00236E  0E14               	movlw	20
  3243  002370  ECA6  F068         	call	_RdPrt
  3244  002374  0E00               	movlw	0
  3245  002376  B0D8               	btfsc	status,0,c
  3246  002378  0E01               	movlw	1
  3247  00237A  0101               	movlb	(_M+22) shr (0+8)
  3248  00237C  6F90               	movwf	(_M+22)& (0+255),b
  3249  00237E  6B91               	clrf	(_M+23)& (0+255),b
  3250                           ;main.c: 1504: if(!M._ROZRUCH&&RD0&&DtCO._ldDCO)
      +                           M._RUN_MNMOD=1;
  3251  002380  A58A               	btfss	(_M+16)& (0+255),2,b
  3252  002382  A083               	btfss	3971,0,c	;volatile
  3253  002384  D006               	goto	l293
  3254  002386  0102               	movlb	(_DtCO+1) shr (0+8)
  3255  002388  A90D               	btfss	(_DtCO+1)& (0+255),4,b
  3256  00238A  D003               	goto	l293
  3257  00238C  0101               	movlb	(_M+27) shr (0+8)
  3258  00238E  8995               	bsf	(_M+27)& (0+255),4,b
  3259  002390  D002               	goto	l294
  3260  002392                     l293:
  3261                           ;main.c: 1505: else M._RUN_MNMOD=0;
  3262  002392  0101               	movlb	(_M+27) shr (0+8)
  3263  002394  9995               	bcf	(_M+27)& (0+255),4,b
  3264  002396                     l294:
  3265                           ;main.c: 1508: if(!M._ZMKCOCW)
  3266  002396  0101               	movlb	(_M+16) shr (0+8)
  3267  002398  B38A               	btfsc	(_M+16)& (0+255),1,b
  3268  00239A  D0A9               	goto	l295
  3269                           ;main.c: 1509: {
  3270  00239C  A595               	btfss	(_M+27)& (0+255),2,b
  3271  00239E  D010               	goto	l296
  3272  0023A0  517C               	movf	(_M+2)& (0+255),w,b
  3273  0023A2  117D               	iorwf	(_M+3)& (0+255),w,b
  3274  0023A4  E10B               	bnz	u4460
  3275  0023A6  5182               	movf	(_M+8)& (0+255),w,b
  3276  0023A8  1183               	iorwf	(_M+9)& (0+255),w,b
  3277  0023AA  E108               	bnz	u4460
  3278  0023AC  0101               	movlb	(_M+14) shr (0+8)
  3279  0023AE  5188               	movf	(_M+14)& (0+255),w,b
  3280  0023B0  1189               	iorwf	(_M+15)& (0+255),w,b
  3281  0023B2  E104               	bnz	u4460
  3282  0023B4  0101               	movlb	(_M+6) shr (0+8)
  3283  0023B6  5180               	movf	(_M+6)& (0+255),w,b
  3284  0023B8  1181               	iorwf	(_M+7)& (0+255),w,b
  3285  0023BA  E002               	bz	l296
  3286  0023BC                     u4460:
  3287  0023BC  D9B1               	call	_ToObiegCW	;wreg free
  3288  0023BE  D097               	goto	l295
  3289  0023C0                     l296:
  3290                           ;main.c: 1512: else
  3291  0023C0  0101               	movlb	(_M+27) shr (0+8)
  3292  0023C2  B595               	btfsc	(_M+27)& (0+255),2,b
  3293  0023C4  B98B               	btfsc	(_M+17)& (0+255),4,b
  3294  0023C6  D011               	goto	l298
  3295  0023C8  0101               	movlb	_M shr (0+8)
  3296  0023CA  517A               	movf	_M& (0+255),w,b
  3297  0023CC  117B               	iorwf	(_M+1)& (0+255),w,b
  3298  0023CE  E10B               	bnz	u4570
  3299  0023D0  517E               	movf	(_M+4)& (0+255),w,b
  3300  0023D2  117F               	iorwf	(_M+5)& (0+255),w,b
  3301  0023D4  E108               	bnz	u4570
  3302  0023D6  0101               	movlb	(_M+10) shr (0+8)
  3303  0023D8  5184               	movf	(_M+10)& (0+255),w,b
  3304  0023DA  1185               	iorwf	(_M+11)& (0+255),w,b
  3305  0023DC  E104               	bnz	u4570
  3306  0023DE  0101               	movlb	(_M+12) shr (0+8)
  3307  0023E0  5186               	movf	(_M+12)& (0+255),w,b
  3308  0023E2  1187               	iorwf	(_M+13)& (0+255),w,b
  3309  0023E4  E002               	bz	l298
  3310  0023E6                     u4570:
  3311  0023E6  D975               	call	_ToObiegCO	;wreg free
  3312  0023E8  D082               	goto	l295
  3313  0023EA                     l298:
  3314                           ;main.c: 1515: else
  3315  0023EA  0101               	movlb	(_M+27) shr (0+8)
  3316  0023EC  A595               	btfss	(_M+27)& (0+255),2,b
  3317  0023EE  A18A               	btfss	(_M+16)& (0+255),0,b
  3318  0023F0  D010               	goto	l300
  3319  0023F2  C08B  FFE8         	movff	_DtKNF+7,wreg
  3320  0023F6  0A03               	xorlw	3
  3321  0023F8  E10C               	bnz	l300
  3322  0023FA  0102               	movlb	_DtCO shr (0+8)
  3323  0023FC  B10C               	btfsc	_DtCO& (0+255),0,b
  3324  0023FE  D009               	goto	l300
  3325  002400  0102               	movlb	(_DtCO+1) shr (0+8)
  3326  002402  B10D               	btfsc	(_DtCO+1)& (0+255),0,b
  3327  002404  D006               	goto	l300
  3328  002406  0101               	movlb	(_M+8) shr (0+8)
  3329  002408  5182               	movf	(_M+8)& (0+255),w,b
  3330  00240A  1183               	iorwf	(_M+9)& (0+255),w,b
  3331  00240C  E002               	bz	l300
  3332  00240E  D988               	call	_ToObiegCW	;wreg free
  3333  002410  D06E               	goto	l295
  3334  002412                     l300:
  3335                           ;main.c: 1518: else
  3336  002412  0101               	movlb	(_M+27) shr (0+8)
  3337  002414  A595               	btfss	(_M+27)& (0+255),2,b
  3338  002416  A18A               	btfss	(_M+16)& (0+255),0,b
  3339  002418  D018               	goto	l302
  3340  00241A  EE00  F08B         	lfsr	0,_DtKNF+7
  3341  00241E  50EF               	movf	indf0,w,c
  3342  002420  E114               	bnz	l302
  3343  002422  0102               	movlb	_DtCO shr (0+8)
  3344  002424  B10C               	btfsc	_DtCO& (0+255),0,b
  3345  002426  D011               	goto	l302
  3346  002428  0102               	movlb	(_DtCO+1) shr (0+8)
  3347  00242A  B10D               	btfsc	(_DtCO+1)& (0+255),0,b
  3348  00242C  D00E               	goto	l302
  3349  00242E  0101               	movlb	(_PFN+31) shr (0+8)
  3350  002430  5176               	movf	(_PFN+31)& (0+255),w,b
  3351  002432  0A02               	xorlw	2
  3352  002434  1177               	iorwf	(_PFN+32)& (0+255),w,b
  3353  002436  E004               	bz	u4810
  3354  002438  5176               	movf	(_PFN+31)& (0+255),w,b
  3355  00243A  0A03               	xorlw	3
  3356  00243C  1177               	iorwf	(_PFN+32)& (0+255),w,b
  3357  00243E  E105               	bnz	l302
  3358  002440                     u4810:
  3359  002440  0102               	movlb	_DtCW shr (0+8)
  3360  002442  A71B               	btfss	_DtCW& (0+255),3,b
  3361  002444  D002               	goto	l302
  3362  002446  D96C               	call	_ToObiegCW	;wreg free
  3363  002448  D052               	goto	l295
  3364  00244A                     l302:
  3365                           ;main.c: 1520: else
  3366  00244A  0101               	movlb	(_M+27) shr (0+8)
  3367  00244C  A595               	btfss	(_M+27)& (0+255),2,b
  3368  00244E  B98B               	btfsc	(_M+17)& (0+255),4,b
  3369  002450  D009               	goto	l304
  3370  002452  0E0D               	movlw	13
  3371  002454  ECA6  F068         	call	_RdPrt
  3372  002458  E203               	bc	u4900
  3373  00245A  0101               	movlb	(_M+16) shr (0+8)
  3374  00245C  A78A               	btfss	(_M+16)& (0+255),3,b
  3375  00245E  D002               	goto	l304
  3376  002460                     u4900:
  3377  002460  D938               	call	_ToObiegCO	;wreg free
  3378  002462  D045               	goto	l295
  3379  002464                     l304:
  3380                           ;main.c: 1523: else
  3381  002464  0101               	movlb	(_M+27) shr (0+8)
  3382  002466  A595               	btfss	(_M+27)& (0+255),2,b
  3383  002468  B98B               	btfsc	(_M+17)& (0+255),4,b
  3384  00246A  D02E               	goto	l309
  3385  00246C  0101               	movlb	(_M+10) shr (0+8)
  3386  00246E  5184               	movf	(_M+10)& (0+255),w,b
  3387  002470  1185               	iorwf	(_M+11)& (0+255),w,b
  3388  002472  E02A               	bz	l309
  3389  002474  0102               	movlb	_DtCO shr (0+8)
  3390  002476  B30C               	btfsc	_DtCO& (0+255),1,b
  3391  002478  D027               	goto	l309
  3392  00247A  D92B               	call	_ToObiegCO	;wreg free
  3393  00247C  D038               	goto	l295
  3394                           ;main.c: 1526: else
  3395  00247E                     l311:
  3396                           ;main.c: 1531: case 2:
  3397  00247E  0101               	movlb	(_M+27) shr (0+8)
  3398  002480  A595               	btfss	(_M+27)& (0+255),2,b
  3399  002482  B18A               	btfsc	(_M+16)& (0+255),0,b
  3400  002484  D034               	goto	l295
  3401  002486  0101               	movlb	(_M+16) shr (0+8)
  3402  002488  A78A               	btfss	(_M+16)& (0+255),3,b
  3403  00248A  D94A               	call	_ToObiegCW	;wreg free
  3404                           ;main.c: 1535: break;
  3405  00248C  D030               	goto	l295
  3406  00248E                     l313:
  3407                           ;main.c: 1536: }
  3408                           ;main.c: 1538: {
  3409  00248E  0101               	movlb	(_M+27) shr (0+8)
  3410  002490  A595               	btfss	(_M+27)& (0+255),2,b
  3411  002492  B18A               	btfsc	(_M+16)& (0+255),0,b
  3412  002494  D02C               	goto	l295
  3413  002496  0101               	movlb	(_M+16) shr (0+8)
  3414  002498  B78A               	btfsc	(_M+16)& (0+255),3,b
  3415  00249A  D029               	goto	l295
  3416  00249C  A483               	btfss	3971,2,c	;volatile
  3417  00249E  D003               	goto	u5110
  3418  0024A0  0101               	movlb	(_M+16) shr (0+8)
  3419  0024A2  A98A               	btfss	(_M+16)& (0+255),4,b
  3420  0024A4  D024               	goto	l295
  3421  0024A6                     u5110:
  3422  0024A6  D93C               	call	_ToObiegCW	;wreg free
  3423                           ;main.c: 1541: break;
  3424  0024A8  D022               	goto	l295
  3425  0024AA                     l315:
  3426                           ;main.c: 1542: }
  3427                           ;main.c: 1544: {
  3428  0024AA  0101               	movlb	(_M+27) shr (0+8)
  3429  0024AC  B595               	btfsc	(_M+27)& (0+255),2,b
  3430  0024AE  D01F               	goto	l295
  3431  0024B0  0E11               	movlw	17
  3432  0024B2  ECA6  F068         	call	_RdPrt
  3433  0024B6  E206               	bc	u5200
  3434  0024B8  0101               	movlb	(_M+16) shr (0+8)
  3435  0024BA  A18A               	btfss	(_M+16)& (0+255),0,b
  3436  0024BC  B78A               	btfsc	(_M+16)& (0+255),3,b
  3437  0024BE  D017               	goto	l295
  3438  0024C0  B483               	btfsc	3971,2,c	;volatile
  3439  0024C2  D015               	goto	l295
  3440  0024C4                     u5200:
  3441  0024C4  D92D               	call	_ToObiegCW	;wreg free
  3442                           ;main.c: 1547: break;
  3443  0024C6  D013               	goto	l295
  3444                           ;main.c: 1553: break;
  3445  0024C8                     l309:
  3446  0024C8  C08B  FFE8         	movff	_DtKNF+7,wreg
  3447  0024CC  0A00               	xorlw	0
  3448  0024CE  E0ED               	bz	l315
  3449  0024D0  0A01               	xorlw	1
  3450  0024D2  E0D5               	bz	l311
  3451  0024D4  0A03               	xorlw	3
  3452  0024D6  E0D3               	bz	l311
  3453  0024D8  0A01               	xorlw	1
  3454  0024DA  E0D9               	bz	l313
  3455                           ;main.c: 1548: }
  3456                           ;main.c: 1550: {
  3457  0024DC  0101               	movlb	(_M+27) shr (0+8)
  3458  0024DE  A595               	btfss	(_M+27)& (0+255),2,b
  3459  0024E0  B18A               	btfsc	(_M+16)& (0+255),0,b
  3460  0024E2  D005               	goto	l295
  3461  0024E4  0101               	movlb	(_M+16) shr (0+8)
  3462  0024E6  A78A               	btfss	(_M+16)& (0+255),3,b
  3463  0024E8  B483               	btfsc	3971,2,c	;volatile
  3464  0024EA  D001               	goto	l295
  3465  0024EC  D919               	call	_ToObiegCW	;wreg free
  3466  0024EE                     l295:
  3467                           ;main.c: 1556: }
  3468  0024EE  0101               	movlb	(_M+16) shr (0+8)
  3469  0024F0  A38A               	btfss	(_M+16)& (0+255),1,b
  3470  0024F2  D05B               	goto	l321
  3471  0024F4  D079               	goto	l319
  3472                           ;main.c: 1561: {
  3473  0024F6                     l323:
  3474                           ;main.c: 1565: case 2:
  3475  0024F6  0101               	movlb	(_M+16) shr (0+8)
  3476  0024F8  A18A               	btfss	(_M+16)& (0+255),0,b
  3477  0024FA  B78A               	btfsc	(_M+16)& (0+255),3,b
  3478  0024FC  D075               	goto	l319
  3479  0024FE  0101               	movlb	(_M+27) shr (0+8)
  3480  002500  B595               	btfsc	(_M+27)& (0+255),2,b
  3481  002502  D072               	goto	l319
  3482                           ;main.c: 1568: {
  3483  002504  0101               	movlb	(_M+27) shr (0+8)
  3484  002506  BF95               	btfsc	(_M+27)& (0+255),7,b
  3485  002508  D007               	goto	l325
  3486  00250A  0E0D               	movlw	13
  3487  00250C  ECA6  F068         	call	_RdPrt
  3488  002510  E303               	bnc	l325
  3489  002512                     u5360:
  3490                           ;main.c: 1571: {
  3491  002512  0101               	movlb	(_M+16) shr (0+8)
  3492  002514  818A               	bsf	(_M+16)& (0+255),0,b
  3493                           ;main.c: 1573: }
  3494  002516  D068               	goto	l319
  3495  002518                     l325:
  3496                           ;main.c: 1574: else
  3497  002518  0101               	movlb	(_M+27) shr (0+8)
  3498  00251A  BF95               	btfsc	(_M+27)& (0+255),7,b
  3499  00251C  D065               	goto	l319
  3500  00251E  5184               	movf	(_M+10)& (0+255),w,b
  3501  002520  1185               	iorwf	(_M+11)& (0+255),w,b
  3502  002522  E062               	bz	l319
  3503  002524  0102               	movlb	_DtCO shr (0+8)
  3504  002526  B30C               	btfsc	_DtCO& (0+255),1,b
  3505  002528  D05F               	goto	l319
  3506  00252A  D7F3               	goto	u5360
  3507                           ;main.c: 1577: {
  3508                           ;main.c: 1579: }
  3509  00252C                     l328:
  3510                           ;main.c: 1582: }
  3511                           ;main.c: 1584: {
  3512  00252C  B483               	btfsc	3971,2,c	;volatile
  3513  00252E  D05C               	goto	l319
  3514  002530  0101               	movlb	(_M+16) shr (0+8)
  3515  002532  B18A               	btfsc	(_M+16)& (0+255),0,b
  3516  002534  D059               	goto	l319
  3517  002536  0101               	movlb	(_M+16) shr (0+8)
  3518  002538  B78A               	btfsc	(_M+16)& (0+255),3,b
  3519  00253A  D056               	goto	l319
  3520  00253C  0101               	movlb	(_M+16) shr (0+8)
  3521  00253E  B98A               	btfsc	(_M+16)& (0+255),4,b
  3522  002540  D053               	goto	l319
  3523  002542  0101               	movlb	(_M+27) shr (0+8)
  3524  002544  B595               	btfsc	(_M+27)& (0+255),2,b
  3525  002546  D050               	goto	l319
  3526                           ;main.c: 1586: {
  3527  002548  0101               	movlb	(_M+27) shr (0+8)
  3528  00254A  BF95               	btfsc	(_M+27)& (0+255),7,b
  3529  00254C  D004               	goto	l330
  3530  00254E  0E0D               	movlw	13
  3531  002550  ECA6  F068         	call	_RdPrt
  3532  002554  E246               	bc	u5870
  3533                           ;main.c: 1589: {
  3534                           ;main.c: 1591: RD2=1;
  3535                           ;main.c: 1592: }
  3536  002556                     l330:
  3537                           ;main.c: 1593: else
  3538  002556  0101               	movlb	(_M+27) shr (0+8)
  3539  002558  BF95               	btfsc	(_M+27)& (0+255),7,b
  3540  00255A  D046               	goto	l319
  3541  00255C  5184               	movf	(_M+10)& (0+255),w,b
  3542  00255E  1185               	iorwf	(_M+11)& (0+255),w,b
  3543  002560  E043               	bz	l319
  3544  002562                     L7:
  3545  002562  0102               	movlb	_DtCO shr (0+8)
  3546  002564  B30C               	btfsc	_DtCO& (0+255),1,b
  3547  002566  D040               	goto	l319
  3548  002568  D03C               	goto	u5870
  3549                           ;main.c: 1596: {
  3550                           ;main.c: 1598: RD2=1;
  3551                           ;main.c: 1599: }
  3552  00256A                     l333:
  3553                           ;main.c: 1602: }
  3554                           ;main.c: 1604: {
  3555  00256A  B483               	btfsc	3971,2,c	;volatile
  3556  00256C  D03D               	goto	l319
  3557  00256E  0101               	movlb	(_M+16) shr (0+8)
  3558  002570  B18A               	btfsc	(_M+16)& (0+255),0,b
  3559  002572  D03A               	goto	l319
  3560  002574  0101               	movlb	(_M+16) shr (0+8)
  3561  002576  B78A               	btfsc	(_M+16)& (0+255),3,b
  3562  002578  D037               	goto	l319
  3563  00257A  0101               	movlb	(_M+27) shr (0+8)
  3564  00257C  B595               	btfsc	(_M+27)& (0+255),2,b
  3565  00257E  D034               	goto	l319
  3566                           ;main.c: 1606: {
  3567  002580  0101               	movlb	(_M+27) shr (0+8)
  3568  002582  BF95               	btfsc	(_M+27)& (0+255),7,b
  3569  002584  D004               	goto	u5681
  3570  002586  0E0D               	movlw	13
  3571  002588  ECA6  F068         	call	_RdPrt
  3572  00258C  E22A               	bc	u5870
  3573  00258E                     u5681:
  3574  00258E  0101               	movlb	(_M+27) shr (0+8)
  3575  002590  AF95               	btfss	(_M+27)& (0+255),7,b
  3576  002592  D004               	goto	l335
  3577  002594  0E11               	movlw	17
  3578  002596  ECA6  F068         	call	_RdPrt
  3579  00259A  D022               	goto	L14
  3580                           ;main.c: 1609: {
  3581                           ;main.c: 1611: RD2=1;
  3582                           ;main.c: 1612: }
  3583  00259C                     l335:
  3584                           ;main.c: 1613: else
  3585  00259C  0101               	movlb	(_M+27) shr (0+8)
  3586  00259E  BF95               	btfsc	(_M+27)& (0+255),7,b
  3587  0025A0  D023               	goto	l319
  3588  0025A2  5184               	movf	(_M+10)& (0+255),w,b
  3589  0025A4  1185               	iorwf	(_M+11)& (0+255),w,b
  3590  0025A6  E1DD               	bnz	L7
  3591                           ;main.c: 1616: {
  3592                           ;main.c: 1618: RD2=1;
  3593                           ;main.c: 1619: }
  3594  0025A8  D01F               	goto	l319
  3595                           ;main.c: 1632: }
  3596                           ;main.c: 1633: else
  3597                           ;main.c: 1636: {
  3598                           ;main.c: 1638: RD2=1;
  3599                           ;main.c: 1639: }
  3600  0025AA                     l321:
  3601  0025AA  C08B  FFE8         	movff	_DtKNF+7,wreg
  3602  0025AE  0A00               	xorlw	0
  3603  0025B0  E0DC               	bz	l333
  3604  0025B2  0A01               	xorlw	1
  3605  0025B4  E0A0               	bz	l323
  3606  0025B6  0A03               	xorlw	3
  3607  0025B8  E09E               	bz	l323
  3608  0025BA  0A01               	xorlw	1
  3609  0025BC  E0B7               	bz	l328
  3610                           ;main.c: 1622: }
  3611                           ;main.c: 1624: {
  3612  0025BE  B483               	btfsc	3971,2,c	;volatile
  3613  0025C0  D013               	goto	l319
  3614  0025C2  0101               	movlb	(_M+16) shr (0+8)
  3615  0025C4  B18A               	btfsc	(_M+16)& (0+255),0,b
  3616  0025C6  D010               	goto	l319
  3617  0025C8  0101               	movlb	(_M+16) shr (0+8)
  3618  0025CA  B78A               	btfsc	(_M+16)& (0+255),3,b
  3619  0025CC  D00D               	goto	l319
  3620  0025CE  0101               	movlb	(_M+27) shr (0+8)
  3621  0025D0  B595               	btfsc	(_M+27)& (0+255),2,b
  3622  0025D2  D00A               	goto	l319
  3623                           ;main.c: 1626: {
  3624  0025D4  0101               	movlb	(_M+27) shr (0+8)
  3625  0025D6  BF95               	btfsc	(_M+27)& (0+255),7,b
  3626  0025D8  D7E1               	goto	l335
  3627  0025DA  0E0D               	movlw	13
  3628  0025DC  ECA6  F068         	call	_RdPrt
  3629  0025E0                     L14:
  3630  0025E0  E3DD               	bnc	l335
  3631  0025E2                     u5870:
  3632                           ;main.c: 1629: {
  3633  0025E2  0101               	movlb	(_M+16) shr (0+8)
  3634  0025E4  818A               	bsf	(_M+16)& (0+255),0,b
  3635                           ;main.c: 1631: RD2=1;
  3636  0025E6  8483               	bsf	3971,2,c	;volatile
  3637  0025E8                     l319:
  3638                           ;main.c: 1644: }
  3639  0025E8  0101               	movlb	(_M+10) shr (0+8)
  3640  0025EA  5184               	movf	(_M+10)& (0+255),w,b
  3641  0025EC  1185               	iorwf	(_M+11)& (0+255),w,b
  3642  0025EE  E107               	bnz	u5960
  3643  0025F0  5182               	movf	(_M+8)& (0+255),w,b
  3644  0025F2  1183               	iorwf	(_M+9)& (0+255),w,b
  3645  0025F4  E104               	bnz	u5960
  3646  0025F6  0101               	movlb	(_M+6) shr (0+8)
  3647  0025F8  5180               	movf	(_M+6)& (0+255),w,b
  3648  0025FA  1181               	iorwf	(_M+7)& (0+255),w,b
  3649  0025FC  E00B               	bz	l343
  3650  0025FE                     u5960:
  3651                           ;main.c: 1649: {
  3652  0025FE  0101               	movlb	(_M+16) shr (0+8)
  3653  002600  A58A               	btfss	(_M+16)& (0+255),2,b
  3654  002602  A083               	btfss	3971,0,c	;volatile
  3655  002604  D007               	goto	l343
  3656                           ;main.c: 1651: {
  3657  002606  0101               	movlb	(_M+17) shr (0+8)
  3658  002608  BB8B               	btfsc	(_M+17)& (0+255),5,b
  3659  00260A  D006               	goto	l347
  3660                           ;main.c: 1653: {
  3661  00260C  8B8B               	bsf	(_M+17)& (0+255),5,b
  3662                           ;main.c: 1655: RestartMod();
  3663  00260E  ECAC  F036         	call	_RestartMod	;wreg free
  3664                           ;main.c: 1657: }
  3665  002612  D002               	goto	l347
  3666                           ;main.c: 1659: else M._MODULUJ=0;
  3667                           ;main.c: 1660: }
  3668  002614                     l343:
  3669                           ;main.c: 1661: else M._MODULUJ=0;
  3670  002614  0101               	movlb	(_M+17) shr (0+8)
  3671  002616  9B8B               	bcf	(_M+17)& (0+255),5,b
  3672  002618                     l347:
  3673                           ;main.c: 1663: if(!M._PRACA||!RdPrt(8)||M._RUN_M
      +                          NMOD)
  3674  002618  0101               	movlb	(_M+27) shr (0+8)
  3675  00261A  A595               	btfss	(_M+27)& (0+255),2,b
  3676  00261C  D007               	goto	u6050
  3677  00261E  0E08               	movlw	8
  3678  002620  ECA6  F068         	call	_RdPrt
  3679  002624  E303               	bnc	u6050
  3680  002626  0101               	movlb	(_M+27) shr (0+8)
  3681  002628  A995               	btfss	(_M+27)& (0+255),4,b
  3682  00262A  D010               	goto	l348
  3683  00262C                     u6050:
  3684                           ;main.c: 1664: {
  3685  00262C  0101               	movlb	(_M+17) shr (0+8)
  3686  00262E  9B8B               	bcf	(_M+17)& (0+255),5,b
  3687                           ;main.c: 1666: if(!M._PRACA||!RdPrt(8)) WritePWM
      +                          (0);
  3688  002630  A595               	btfss	(_M+27)& (0+255),2,b
  3689  002632  D004               	goto	u6090
  3690  002634  0E08               	movlw	8
  3691  002636  ECA6  F068         	call	_RdPrt
  3692  00263A  E204               	bc	l349
  3693  00263C                     u6090:
  3694  00263C  0E00               	movlw	0
  3695  00263E  EC36  F061         	call	_WritePWM
  3696  002642  D004               	goto	l348
  3697  002644                     l349:
  3698                           ;main.c: 1667: else WritePWM(PWM.MDMOD);
  3699  002644  C277  FFE8         	movff	_PWM+9,wreg
  3700  002648  EC36  F061         	call	_WritePWM
  3701  00264C                     l348:
  3702                           ;main.c: 1668: }
  3703  00264C  0101               	movlb	(_M+2) shr (0+8)
  3704  00264E  517C               	movf	(_M+2)& (0+255),w,b
  3705  002650  117D               	iorwf	(_M+3)& (0+255),w,b
  3706  002652  A4D8               	btfss	status,2,c
  3707  002654  B58A               	btfsc	(_M+16)& (0+255),2,b
  3708  002656  D006               	goto	l351
  3709  002658  A083               	btfss	3971,0,c	;volatile
  3710  00265A  D004               	goto	l351
  3711  00265C  C28C  FFE8         	movff	_PWM+30,wreg
  3712  002660  EC36  F061         	call	_WritePWM
  3713  002664                     l351:
  3714                           ;main.c: 1671: if(M._pob_KCO&&!M._ROZRUCH&&RD0) 
      +                          WritePWM(PWM.MMAXCO);
  3715  002664  0101               	movlb	_M shr (0+8)
  3716  002666  517A               	movf	_M& (0+255),w,b
  3717  002668  117B               	iorwf	(_M+1)& (0+255),w,b
  3718  00266A  A4D8               	btfss	status,2,c
  3719  00266C  B58A               	btfsc	(_M+16)& (0+255),2,b
  3720  00266E  D006               	goto	l352
  3721  002670  A083               	btfss	3971,0,c	;volatile
  3722  002672  D004               	goto	l352
  3723  002674  C28B  FFE8         	movff	_PWM+29,wreg
  3724  002678  EC36  F061         	call	_WritePWM
  3725  00267C                     l352:
  3726                           ;main.c: 1675: if(M._pob_SRW&&!M._ROZRUCH&&RD0)
  3727  00267C  0101               	movlb	(_M+4) shr (0+8)
  3728  00267E  517E               	movf	(_M+4)& (0+255),w,b
  3729  002680  117F               	iorwf	(_M+5)& (0+255),w,b
  3730  002682  A4D8               	btfss	status,2,c
  3731  002684  B58A               	btfsc	(_M+16)& (0+255),2,b
  3732  002686  D00D               	goto	l353
  3733  002688  A083               	btfss	3971,0,c	;volatile
  3734  00268A  D00B               	goto	l353
  3735                           ;main.c: 1676: {
  3736  00268C  0101               	movlb	(_PFN+1) shr (0+8)
  3737  00268E  AF58               	btfss	(_PFN+1)& (0+255),7,b
  3738  002690  D004               	goto	l354
  3739  002692  0EF0               	movlw	240
  3740  002694  EC36  F061         	call	_WritePWM
  3741  002698  D004               	goto	l353
  3742  00269A                     l354:
  3743                           ;main.c: 1678: else WritePWM(PWM.MDMOD);
  3744  00269A  C277  FFE8         	movff	_PWM+9,wreg
  3745  00269E  EC36  F061         	call	_WritePWM
  3746  0026A2                     l353:
  3747                           ;main.c: 1679: }
  3748  0026A2  0101               	movlb	(_M+12) shr (0+8)
  3749  0026A4  5186               	movf	(_M+12)& (0+255),w,b
  3750  0026A6  1187               	iorwf	(_M+13)& (0+255),w,b
  3751  0026A8  A4D8               	btfss	status,2,c
  3752  0026AA  B58A               	btfsc	(_M+16)& (0+255),2,b
  3753  0026AC  D006               	goto	l356
  3754  0026AE  A083               	btfss	3971,0,c	;volatile
  3755  0026B0  D004               	goto	l356
  3756  0026B2  C277  FFE8         	movff	_PWM+9,wreg
  3757  0026B6  EC36  F061         	call	_WritePWM
  3758  0026BA                     l356:
  3759                           ;main.c: 1682: if(M._pob_DzCW&&!M._ROZRUCH&&RD0)
      +                           WritePWM(PWM.MDMOD);
  3760  0026BA  0101               	movlb	(_M+14) shr (0+8)
  3761  0026BC  5188               	movf	(_M+14)& (0+255),w,b
  3762  0026BE  1189               	iorwf	(_M+15)& (0+255),w,b
  3763  0026C0  A4D8               	btfss	status,2,c
  3764  0026C2  B58A               	btfsc	(_M+16)& (0+255),2,b
  3765  0026C4  0012               	return	
  3766  0026C6  A083               	btfss	3971,0,c	;volatile
  3767  0026C8  0012               	return	
  3768  0026CA  C277  FFE8         	movff	_PWM+9,wreg
  3769  0026CE  EF36  F061         	goto	_WritePWM
  3770                           ;main.c: 1683: }
  3771  0026D2                     __end_of_DecSTR:
  3772                           ;main.c: 1685: void ToObiegCO(void)
  3773                           ;main.c: 1686: {
  3774  0026D2                     _ToObiegCO:
  3775  000000                     
  3776                           ;main.c: 1687: switch(DtKNF.tpkt)
  3777  0026D2  D01B               	goto	l360
  3778  0026D4                     l362:
  3779                           ;main.c: 1690: case 2:
  3780  0026D4  0101               	movlb	(_M+16) shr (0+8)
  3781  0026D6  A38A               	btfss	(_M+16)& (0+255),1,b
  3782  0026D8  B483               	btfsc	3971,2,c	;volatile
  3783  0026DA  0012               	return	
  3784                           ;main.c: 1693: {
  3785  0026DC  0101               	movlb	(_M+27) shr (0+8)
  3786  0026DE  9F95               	bcf	(_M+27)& (0+255),7,b
  3787                           ;main.c: 1695: M._ZMKCOCW=1;
  3788  0026E0  838A               	bsf	(_M+16)& (0+255),1,b
  3789                           ;main.c: 1696: M.ZKP=0;
  3790  0026E2  6BA7               	clrf	(_M+45)& (0+255),b
  3791                           ;main.c: 1697: }
  3792  0026E4  0012               	return	
  3793  0026E6                     l365:
  3794                           ;main.c: 1701: case 3:
  3795  0026E6  0101               	movlb	(_M+16) shr (0+8)
  3796  0026E8  A38A               	btfss	(_M+16)& (0+255),1,b
  3797  0026EA  B283               	btfsc	3971,1,c	;volatile
  3798  0026EC  0012               	return	
  3799                           ;main.c: 1704: {
  3800  0026EE  0101               	movlb	(_M+27) shr (0+8)
  3801  0026F0  9F95               	bcf	(_M+27)& (0+255),7,b
  3802                           ;main.c: 1706: M._ZMKCOCW=1;
  3803  0026F2  838A               	bsf	(_M+16)& (0+255),1,b
  3804                           ;main.c: 1707: M.ZKP=0;
  3805  0026F4  6BA7               	clrf	(_M+45)& (0+255),b
  3806                           ;main.c: 1708: }
  3807  0026F6  0012               	return	
  3808  0026F8                     l367:
  3809                           ;main.c: 1710: }
  3810                           ;main.c: 1712: {
  3811  0026F8  0101               	movlb	(_M+16) shr (0+8)
  3812  0026FA  A38A               	btfss	(_M+16)& (0+255),1,b
  3813  0026FC  B283               	btfsc	3971,1,c	;volatile
  3814  0026FE  0012               	return	
  3815                           ;main.c: 1714: {
  3816  002700  0101               	movlb	(_M+27) shr (0+8)
  3817  002702  9F95               	bcf	(_M+27)& (0+255),7,b
  3818                           ;main.c: 1716: M._ZMKCOCW=1;
  3819  002704  838A               	bsf	(_M+16)& (0+255),1,b
  3820                           ;main.c: 1717: M.ZKP=0;
  3821  002706  6BA7               	clrf	(_M+45)& (0+255),b
  3822                           ;main.c: 1718: }
  3823  002708  0012               	return	
  3824  00270A                     l360:
  3825  00270A  C08B  FFE8         	movff	_DtKNF+7,wreg
  3826  00270E  0A00               	xorlw	0
  3827  002710  E0EA               	bz	l365
  3828  002712  0A01               	xorlw	1
  3829  002714  E0DF               	bz	l362
  3830  002716  0A03               	xorlw	3
  3831  002718  E0DD               	bz	l362
  3832  00271A  0A01               	xorlw	1
  3833  00271C  E0E4               	bz	l365
  3834  00271E  D7EC               	goto	l367
  3835                           ;main.c: 1722: }
  3836  002720                     __end_of_ToObiegCO:
  3837                           ;main.c: 1724: void ToObiegCW(void)
  3838                           ;main.c: 1725: {
  3839  002720                     _ToObiegCW:
  3840  000000                     
  3841                           ;main.c: 1726: switch(DtKNF.tpkt)
  3842  002720  D053               	goto	l371
  3843  002722                     l373:
  3844                           ;main.c: 1729: case 2:
  3845  002722  0101               	movlb	(_M+16) shr (0+8)
  3846  002724  A38A               	btfss	(_M+16)& (0+255),1,b
  3847  002726  A483               	btfss	3971,2,c	;volatile
  3848  002728  0012               	return	
  3849                           ;main.c: 1732: {
  3850  00272A  0101               	movlb	(_M+27) shr (0+8)
  3851  00272C  8F95               	bsf	(_M+27)& (0+255),7,b
  3852                           ;main.c: 1734: M._ZMKCOCW=1;
  3853  00272E  838A               	bsf	(_M+16)& (0+255),1,b
  3854                           ;main.c: 1735: M.ZKP=0;
  3855  002730  6BA7               	clrf	(_M+45)& (0+255),b
  3856                           ;main.c: 1736: if(M._pob_KCW||M._pob_CW||M._pob_
      +                          DzCW)
  3857  002732  517C               	movf	(_M+2)& (0+255),w,b
  3858  002734  117D               	iorwf	(_M+3)& (0+255),w,b
  3859  002736  E108               	bnz	u6510
  3860  002738  5182               	movf	(_M+8)& (0+255),w,b
  3861  00273A  1183               	iorwf	(_M+9)& (0+255),w,b
  3862  00273C  E105               	bnz	u6510
  3863  00273E  0101               	movlb	(_M+14) shr (0+8)
  3864  002740  5188               	movf	(_M+14)& (0+255),w,b
  3865  002742  1189               	iorwf	(_M+15)& (0+255),w,b
  3866  002744  B4D8               	btfsc	status,2,c
  3867  002746  0012               	return	
  3868  002748                     u6510:
  3869                           ;main.c: 1737: {
  3870  002748  0101               	movlb	(_M+27) shr (0+8)
  3871  00274A  A595               	btfss	(_M+27)& (0+255),2,b
  3872  00274C  0012               	return	
  3873                           ;main.c: 1739: {
  3874  00274E  898B               	bsf	(_M+17)& (0+255),4,b
  3875                           ;main.c: 1741: M.BL15=0;
  3876  002750  6BA1               	clrf	(_M+39)& (0+255),b
  3877                           ;main.c: 1742: }
  3878  002752  0012               	return	
  3879  002754                     l378:
  3880                           ;main.c: 1748: case 3:
  3881  002754  0101               	movlb	(_M+16) shr (0+8)
  3882  002756  A38A               	btfss	(_M+16)& (0+255),1,b
  3883  002758  A283               	btfss	3971,1,c	;volatile
  3884  00275A  0012               	return	
  3885                           ;main.c: 1751: {
  3886  00275C  0101               	movlb	(_M+27) shr (0+8)
  3887  00275E  8F95               	bsf	(_M+27)& (0+255),7,b
  3888                           ;main.c: 1753: M._ZMKCOCW=1;
  3889  002760  838A               	bsf	(_M+16)& (0+255),1,b
  3890                           ;main.c: 1754: M.ZKP=0;
  3891  002762  6BA7               	clrf	(_M+45)& (0+255),b
  3892                           ;main.c: 1755: if(M._pob_KCW||M._pob_CW||M._pob_
      +                          DzCW||M._pob_AL)
  3893  002764  517C               	movf	(_M+2)& (0+255),w,b
  3894  002766  117D               	iorwf	(_M+3)& (0+255),w,b
  3895  002768  E10C               	bnz	u6630
  3896  00276A  5182               	movf	(_M+8)& (0+255),w,b
  3897  00276C  1183               	iorwf	(_M+9)& (0+255),w,b
  3898  00276E  E109               	bnz	u6630
  3899  002770  0101               	movlb	(_M+14) shr (0+8)
  3900  002772  5188               	movf	(_M+14)& (0+255),w,b
  3901  002774  1189               	iorwf	(_M+15)& (0+255),w,b
  3902  002776  E105               	bnz	u6630
  3903  002778  0101               	movlb	(_M+6) shr (0+8)
  3904  00277A  5180               	movf	(_M+6)& (0+255),w,b
  3905  00277C  1181               	iorwf	(_M+7)& (0+255),w,b
  3906  00277E  B4D8               	btfsc	status,2,c
  3907  002780  0012               	return	
  3908  002782                     u6630:
  3909                           ;main.c: 1756: {
  3910  002782  0101               	movlb	(_M+27) shr (0+8)
  3911  002784  A595               	btfss	(_M+27)& (0+255),2,b
  3912  002786  0012               	return	
  3913                           ;main.c: 1758: {
  3914  002788  898B               	bsf	(_M+17)& (0+255),4,b
  3915                           ;main.c: 1760: M.BL15=0;
  3916  00278A  6BA1               	clrf	(_M+39)& (0+255),b
  3917                           ;main.c: 1761: }
  3918  00278C  0012               	return	
  3919  00278E                     l382:
  3920                           ;main.c: 1765: }
  3921                           ;main.c: 1767: {
  3922  00278E  0101               	movlb	(_M+16) shr (0+8)
  3923  002790  A38A               	btfss	(_M+16)& (0+255),1,b
  3924  002792  A283               	btfss	3971,1,c	;volatile
  3925  002794  0012               	return	
  3926                           ;main.c: 1769: {
  3927  002796  0101               	movlb	(_M+27) shr (0+8)
  3928  002798  8F95               	bsf	(_M+27)& (0+255),7,b
  3929                           ;main.c: 1771: M._ZMKCOCW=1;
  3930  00279A  838A               	bsf	(_M+16)& (0+255),1,b
  3931                           ;main.c: 1772: M.ZKP=0;
  3932  00279C  6BA7               	clrf	(_M+45)& (0+255),b
  3933                           ;main.c: 1773: if(M._pob_KCW||M._pob_CW||M._pob_
      +                          DzCW||M._pob_AL)
  3934  00279E  517C               	movf	(_M+2)& (0+255),w,b
  3935  0027A0  117D               	iorwf	(_M+3)& (0+255),w,b
  3936  0027A2  E10C               	bnz	u6740
  3937  0027A4  5182               	movf	(_M+8)& (0+255),w,b
  3938  0027A6  1183               	iorwf	(_M+9)& (0+255),w,b
  3939  0027A8  E109               	bnz	u6740
  3940  0027AA  0101               	movlb	(_M+14) shr (0+8)
  3941  0027AC  5188               	movf	(_M+14)& (0+255),w,b
  3942  0027AE  1189               	iorwf	(_M+15)& (0+255),w,b
  3943  0027B0  E105               	bnz	u6740
  3944  0027B2  0101               	movlb	(_M+6) shr (0+8)
  3945  0027B4  5180               	movf	(_M+6)& (0+255),w,b
  3946  0027B6  1181               	iorwf	(_M+7)& (0+255),w,b
  3947  0027B8  B4D8               	btfsc	status,2,c
  3948  0027BA  0012               	return	
  3949  0027BC                     u6740:
  3950                           ;main.c: 1774: {
  3951  0027BC  0101               	movlb	(_M+27) shr (0+8)
  3952  0027BE  A595               	btfss	(_M+27)& (0+255),2,b
  3953  0027C0  0012               	return	
  3954                           ;main.c: 1776: {
  3955  0027C2  898B               	bsf	(_M+17)& (0+255),4,b
  3956                           ;main.c: 1778: M.BL15=0;
  3957  0027C4  6BA1               	clrf	(_M+39)& (0+255),b
  3958                           ;main.c: 1779: }
  3959  0027C6  0012               	return	
  3960  0027C8                     l371:
  3961  0027C8  C08B  FFE8         	movff	_DtKNF+7,wreg
  3962  0027CC  0A00               	xorlw	0
  3963  0027CE  E0C2               	bz	l378
  3964  0027D0  0A01               	xorlw	1
  3965  0027D2  E0A7               	bz	l373
  3966  0027D4  0A03               	xorlw	3
  3967  0027D6  E0A5               	bz	l373
  3968  0027D8  0A01               	xorlw	1
  3969  0027DA  E0BC               	bz	l378
  3970  0027DC  D7D8               	goto	l382
  3971                           ;main.c: 1785: }
  3972  0027DE                     __end_of_ToObiegCW:
  3973                           ;main.c: 1787: void SetLoMod(void)
  3974                           ;main.c: 1788: {
  3975  0027DE                     _SetLoMod:
  3976  000000                     
  3977                           ;main.c: 1789: M._MODULUJ=0;
  3978  0027DE  0101               	movlb	(_M+17) shr (0+8)
  3979  0027E0  9B8B               	bcf	(_M+17)& (0+255),5,b
  3980                           ;main.c: 1790: WritePWM(0);
  3981  0027E2  0E00               	movlw	0
  3982  0027E4  EF36  F061         	goto	_WritePWM
  3983                           ;main.c: 1791: }
  3984  0027E8                     __end_of_SetLoMod:
  3985                           ;main.c: 1795: void DecRozruch(void)
  3986                           ;main.c: 1796: {
  3987  0027E8                     _DecRozruch:
  3988  000000                     
  3989                           ;main.c: 1797: switch(DtKNF.tpkt)
  3990  0027E8  D116               	goto	l389
  3991  0027EA                     l391:
  3992                           ;main.c: 1800: case 2:
  3993  0027EA  0101               	movlb	(_M+16) shr (0+8)
  3994  0027EC  A58A               	btfss	(_M+16)& (0+255),2,b
  3995  0027EE  B083               	btfsc	3971,0,c	;volatile
  3996  0027F0  0012               	return	
  3997                           ;main.c: 1803: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M.
      +                          _RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._
      +                          RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
  3998  0027F2  A38A               	btfss	(_M+16)& (0+255),1,b
  3999  0027F4  BB8A               	btfsc	(_M+16)& (0+255),5,b
  4000  0027F6  0012               	return	
  4001  0027F8  0101               	movlb	(_M+17) shr (0+8)
  4002  0027FA  B18B               	btfsc	(_M+17)& (0+255),0,b
  4003  0027FC  0012               	return	
  4004  0027FE  0101               	movlb	(_M+16) shr (0+8)
  4005  002800  BF8A               	btfsc	(_M+16)& (0+255),7,b
  4006  002802  0012               	return	
  4007  002804  0101               	movlb	(_M+26) shr (0+8)
  4008  002806  A794               	btfss	(_M+26)& (0+255),3,b
  4009  002808  B194               	btfsc	(_M+26)& (0+255),0,b
  4010  00280A  0012               	return	
  4011  00280C  B394               	btfsc	(_M+26)& (0+255),1,b
  4012  00280E  0012               	return	
  4013                           ;main.c: 1804: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&
      +                          &!M._RUSZ_NCISN)
  4014  002810  0101               	movlb	(_M+17) shr (0+8)
  4015  002812  A58B               	btfss	(_M+17)& (0+255),2,b
  4016  002814  BB94               	btfsc	(_M+26)& (0+255),5,b
  4017  002816  0012               	return	
  4018  002818  0101               	movlb	(_M+26) shr (0+8)
  4019  00281A  BD94               	btfsc	(_M+26)& (0+255),6,b
  4020  00281C  0012               	return	
  4021                           ;main.c: 1805: {
  4022  00281E  0101               	movlb	(_M+2) shr (0+8)
  4023  002820  517C               	movf	(_M+2)& (0+255),w,b
  4024  002822  117D               	iorwf	(_M+3)& (0+255),w,b
  4025  002824  E001               	bz	l395
  4026  002826  D014               	goto	L30
  4027                           ;main.c: 1807: {
  4028                           ;main.c: 1809: {
  4029                           ;main.c: 1811: M.BL15=0;
  4030                           ;main.c: 1812: SetRozruch();
  4031                           ;main.c: 1813: }
  4032  002828                     l395:
  4033                           ;main.c: 1815: else
  4034  002828  0101               	movlb	_M shr (0+8)
  4035  00282A  517A               	movf	_M& (0+255),w,b
  4036  00282C  117B               	iorwf	(_M+1)& (0+255),w,b
  4037  00282E  E004               	bz	l398
  4038                           ;main.c: 1817: {
  4039  002830  0102               	movlb	_DtCO shr (0+8)
  4040  002832  B30C               	btfsc	_DtCO& (0+255),1,b
  4041  002834  D8FF               	call	_SetRozruch	;wreg free
  4042                           ;main.c: 1819: }
  4043  002836  0012               	return	
  4044  002838                     l398:
  4045                           ;main.c: 1820: else
  4046  002838  0101               	movlb	(_M+4) shr (0+8)
  4047  00283A  517E               	movf	(_M+4)& (0+255),w,b
  4048  00283C  117F               	iorwf	(_M+5)& (0+255),w,b
  4049  00283E  E004               	bz	l401
  4050                           ;main.c: 1822: {
  4051  002840  0102               	movlb	_DtCO shr (0+8)
  4052  002842  B70C               	btfsc	_DtCO& (0+255),3,b
  4053  002844  D8F7               	call	_SetRozruch	;wreg free
  4054                           ;main.c: 1824: }
  4055  002846  0012               	return	
  4056  002848                     l401:
  4057                           ;main.c: 1825: else
  4058  002848  0101               	movlb	(_M+8) shr (0+8)
  4059  00284A  5182               	movf	(_M+8)& (0+255),w,b
  4060  00284C  1183               	iorwf	(_M+9)& (0+255),w,b
  4061  00284E  E007               	bz	l404
  4062  002850                     L30:
  4063                           ;main.c: 1827: {
  4064  002850  0102               	movlb	_DtCW shr (0+8)
  4065  002852  A31B               	btfss	_DtCW& (0+255),1,b
  4066  002854  0012               	return	
  4067                           ;main.c: 1829: {
  4068  002856  0101               	movlb	(_M+17) shr (0+8)
  4069  002858  898B               	bsf	(_M+17)& (0+255),4,b
  4070                           ;main.c: 1831: M.BL15=0;
  4071  00285A  6BA1               	clrf	(_M+39)& (0+255),b
  4072                           ;main.c: 1832: SetRozruch();
  4073  00285C  D0EB               	goto	_SetRozruch	;wreg free
  4074                           ;main.c: 1833: }
  4075  00285E                     l404:
  4076                           ;main.c: 1835: else
  4077  00285E  0101               	movlb	(_M+10) shr (0+8)
  4078  002860  5184               	movf	(_M+10)& (0+255),w,b
  4079  002862  1185               	iorwf	(_M+11)& (0+255),w,b
  4080  002864  E009               	bz	l407
  4081  002866  0102               	movlb	_DtCO shr (0+8)
  4082  002868  A30C               	btfss	_DtCO& (0+255),1,b
  4083  00286A  D006               	goto	l407
  4084  00286C  0101               	movlb	(_M+17) shr (0+8)
  4085  00286E  B78B               	btfsc	(_M+17)& (0+255),3,b
  4086  002870  D003               	goto	l407
  4087  002872  0101               	movlb	(_M+17) shr (0+8)
  4088  002874  A98B               	btfss	(_M+17)& (0+255),4,b
  4089                           ;main.c: 1837: {
  4090  002876  D0DE               	goto	_SetRozruch	;wreg free
  4091                           ;main.c: 1839: }
  4092  002878                     l407:
  4093                           ;main.c: 1840: else
  4094  002878  0101               	movlb	(_M+12) shr (0+8)
  4095  00287A  5186               	movf	(_M+12)& (0+255),w,b
  4096  00287C  1187               	iorwf	(_M+13)& (0+255),w,b
  4097  00287E  E009               	bz	l409
  4098  002880  0102               	movlb	_DtCO shr (0+8)
  4099  002882  AD0C               	btfss	_DtCO& (0+255),6,b
  4100  002884  D006               	goto	l409
  4101  002886  0101               	movlb	(_M+17) shr (0+8)
  4102  002888  B78B               	btfsc	(_M+17)& (0+255),3,b
  4103  00288A  D003               	goto	l409
  4104  00288C  0101               	movlb	(_M+17) shr (0+8)
  4105  00288E  A98B               	btfss	(_M+17)& (0+255),4,b
  4106                           ;main.c: 1842: {
  4107  002890  D0D1               	goto	_SetRozruch	;wreg free
  4108                           ;main.c: 1844: }
  4109  002892                     l409:
  4110                           ;main.c: 1845: else
  4111  002892  0101               	movlb	(_M+14) shr (0+8)
  4112  002894  5188               	movf	(_M+14)& (0+255),w,b
  4113  002896  1189               	iorwf	(_M+15)& (0+255),w,b
  4114  002898  B4D8               	btfsc	status,2,c
  4115  00289A  0012               	return	
  4116  00289C  0102               	movlb	_DtCW shr (0+8)
  4117  00289E  AB1B               	btfss	_DtCW& (0+255),5,b
  4118  0028A0  0012               	return	
  4119                           ;main.c: 1847: {
  4120  0028A2  0101               	movlb	(_M+17) shr (0+8)
  4121  0028A4  898B               	bsf	(_M+17)& (0+255),4,b
  4122                           ;main.c: 1849: M.BL15=0;
  4123  0028A6  6BA1               	clrf	(_M+39)& (0+255),b
  4124                           ;main.c: 1850: SetRozruch();
  4125  0028A8  D0C5               	goto	_SetRozruch	;wreg free
  4126                           ;main.c: 1851: }
  4127  0028AA                     l413:
  4128                           ;main.c: 1856: case 3:
  4129  0028AA  0101               	movlb	(_M+16) shr (0+8)
  4130  0028AC  A58A               	btfss	(_M+16)& (0+255),2,b
  4131  0028AE  B083               	btfsc	3971,0,c	;volatile
  4132  0028B0  0012               	return	
  4133                           ;main.c: 1859: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M.
      +                          _RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._
      +                          RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
  4134  0028B2  A38A               	btfss	(_M+16)& (0+255),1,b
  4135  0028B4  BB8A               	btfsc	(_M+16)& (0+255),5,b
  4136  0028B6  0012               	return	
  4137  0028B8  0101               	movlb	(_M+17) shr (0+8)
  4138  0028BA  B18B               	btfsc	(_M+17)& (0+255),0,b
  4139  0028BC  0012               	return	
  4140  0028BE  0101               	movlb	(_M+16) shr (0+8)
  4141  0028C0  BF8A               	btfsc	(_M+16)& (0+255),7,b
  4142  0028C2  0012               	return	
  4143  0028C4  0101               	movlb	(_M+26) shr (0+8)
  4144  0028C6  A794               	btfss	(_M+26)& (0+255),3,b
  4145  0028C8  B194               	btfsc	(_M+26)& (0+255),0,b
  4146  0028CA  0012               	return	
  4147  0028CC  B394               	btfsc	(_M+26)& (0+255),1,b
  4148  0028CE  0012               	return	
  4149                           ;main.c: 1860: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&
      +                          &!M._RUSZ_NCISN)
  4150  0028D0  0101               	movlb	(_M+17) shr (0+8)
  4151  0028D2  A58B               	btfss	(_M+17)& (0+255),2,b
  4152  0028D4  BB94               	btfsc	(_M+26)& (0+255),5,b
  4153  0028D6  0012               	return	
  4154  0028D8  0101               	movlb	(_M+26) shr (0+8)
  4155  0028DA  BD94               	btfsc	(_M+26)& (0+255),6,b
  4156  0028DC  0012               	return	
  4157                           ;main.c: 1861: {
  4158  0028DE  0101               	movlb	(_M+2) shr (0+8)
  4159  0028E0  517C               	movf	(_M+2)& (0+255),w,b
  4160  0028E2  117D               	iorwf	(_M+3)& (0+255),w,b
  4161  0028E4  E001               	bz	l417
  4162  0028E6  D019               	goto	L33
  4163                           ;main.c: 1863: {
  4164                           ;main.c: 1865: {
  4165                           ;main.c: 1867: M.BL15=0;
  4166                           ;main.c: 1868: SetRozruch();
  4167                           ;main.c: 1869: }
  4168  0028E8                     l417:
  4169                           ;main.c: 1871: else
  4170  0028E8  0101               	movlb	_M shr (0+8)
  4171  0028EA  517A               	movf	_M& (0+255),w,b
  4172  0028EC  117B               	iorwf	(_M+1)& (0+255),w,b
  4173  0028EE  E004               	bz	l420
  4174                           ;main.c: 1873: {
  4175  0028F0  0102               	movlb	_DtCO shr (0+8)
  4176  0028F2  B30C               	btfsc	_DtCO& (0+255),1,b
  4177  0028F4  D89F               	call	_SetRozruch	;wreg free
  4178                           ;main.c: 1875: }
  4179  0028F6  0012               	return	
  4180  0028F8                     l420:
  4181                           ;main.c: 1876: else
  4182  0028F8  0101               	movlb	(_M+4) shr (0+8)
  4183  0028FA  517E               	movf	(_M+4)& (0+255),w,b
  4184  0028FC  117F               	iorwf	(_M+5)& (0+255),w,b
  4185  0028FE  E004               	bz	l423
  4186                           ;main.c: 1878: {
  4187  002900  0102               	movlb	_DtCO shr (0+8)
  4188  002902  B70C               	btfsc	_DtCO& (0+255),3,b
  4189  002904  D897               	call	_SetRozruch	;wreg free
  4190                           ;main.c: 1880: }
  4191  002906  0012               	return	
  4192  002908                     l423:
  4193                           ;main.c: 1881: else
  4194  002908  0101               	movlb	(_M+6) shr (0+8)
  4195  00290A  5180               	movf	(_M+6)& (0+255),w,b
  4196  00290C  1181               	iorwf	(_M+7)& (0+255),w,b
  4197  00290E  E001               	bz	l426
  4198  002910  D007               	goto	L32
  4199                           ;main.c: 1883: {
  4200                           ;main.c: 1885: {
  4201                           ;main.c: 1887: M.BL15=0;
  4202                           ;main.c: 1888: SetRozruch();
  4203                           ;main.c: 1889: }
  4204  002912                     l426:
  4205                           ;main.c: 1891: else
  4206  002912  0101               	movlb	(_M+8) shr (0+8)
  4207  002914  5182               	movf	(_M+8)& (0+255),w,b
  4208  002916  1183               	iorwf	(_M+9)& (0+255),w,b
  4209  002918  E00A               	bz	l429
  4210  00291A                     L33:
  4211                           ;main.c: 1928: {
  4212  00291A  0102               	movlb	_DtCW shr (0+8)
  4213  00291C  A31B               	btfss	_DtCW& (0+255),1,b
  4214  00291E  0012               	return	
  4215                           ;main.c: 1893: {
  4216  002920                     L32:
  4217  002920  0102               	movlb	(_DtCO+1) shr (0+8)
  4218  002922  A30D               	btfss	(_DtCO+1)& (0+255),1,b
  4219  002924  0012               	return	
  4220                           ;main.c: 1895: {
  4221  002926  0101               	movlb	(_M+17) shr (0+8)
  4222  002928  898B               	bsf	(_M+17)& (0+255),4,b
  4223                           ;main.c: 1897: M.BL15=0;
  4224  00292A  6BA1               	clrf	(_M+39)& (0+255),b
  4225                           ;main.c: 1898: SetRozruch();
  4226  00292C  D083               	goto	_SetRozruch	;wreg free
  4227                           ;main.c: 1899: }
  4228  00292E                     l429:
  4229                           ;main.c: 1901: else
  4230  00292E  0101               	movlb	(_M+10) shr (0+8)
  4231  002930  5184               	movf	(_M+10)& (0+255),w,b
  4232  002932  1185               	iorwf	(_M+11)& (0+255),w,b
  4233  002934  E009               	bz	l432
  4234  002936  0102               	movlb	_DtCO shr (0+8)
  4235  002938  A30C               	btfss	_DtCO& (0+255),1,b
  4236  00293A  D006               	goto	l432
  4237  00293C  0101               	movlb	(_M+17) shr (0+8)
  4238  00293E  B78B               	btfsc	(_M+17)& (0+255),3,b
  4239  002940  D003               	goto	l432
  4240  002942  0101               	movlb	(_M+17) shr (0+8)
  4241  002944  A98B               	btfss	(_M+17)& (0+255),4,b
  4242                           ;main.c: 1903: {
  4243  002946  D076               	goto	_SetRozruch	;wreg free
  4244                           ;main.c: 1905: }
  4245  002948                     l432:
  4246                           ;main.c: 1906: else
  4247  002948  0101               	movlb	(_M+12) shr (0+8)
  4248  00294A  5186               	movf	(_M+12)& (0+255),w,b
  4249  00294C  1187               	iorwf	(_M+13)& (0+255),w,b
  4250  00294E  E006               	bz	l434
  4251  002950  0102               	movlb	_DtCO shr (0+8)
  4252  002952  AD0C               	btfss	_DtCO& (0+255),6,b
  4253  002954  D003               	goto	l434
  4254  002956  0101               	movlb	(_M+17) shr (0+8)
  4255  002958  A78B               	btfss	(_M+17)& (0+255),3,b
  4256  00295A  D059               	goto	L42
  4257                           ;main.c: 1908: {
  4258                           ;main.c: 1910: }
  4259  00295C                     l434:
  4260                           ;main.c: 1911: else
  4261  00295C  0101               	movlb	(_M+14) shr (0+8)
  4262  00295E  5188               	movf	(_M+14)& (0+255),w,b
  4263  002960  1189               	iorwf	(_M+15)& (0+255),w,b
  4264  002962  B4D8               	btfsc	status,2,c
  4265  002964  0012               	return	
  4266  002966  0102               	movlb	_DtCW shr (0+8)
  4267  002968  AB1B               	btfss	_DtCW& (0+255),5,b
  4268  00296A  0012               	return	
  4269  00296C  D7D9               	goto	L32
  4270                           ;main.c: 1913: {
  4271                           ;main.c: 1915: M.BL15=0;
  4272                           ;main.c: 1916: SetRozruch();
  4273                           ;main.c: 1917: }
  4274  00296E                     l437:
  4275                           ;main.c: 1920: }
  4276                           ;main.c: 1922: {
  4277  00296E  0101               	movlb	(_M+16) shr (0+8)
  4278  002970  A58A               	btfss	(_M+16)& (0+255),2,b
  4279  002972  B083               	btfsc	3971,0,c	;volatile
  4280  002974  0012               	return	
  4281                           ;main.c: 1924: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M.
      +                          _RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._
      +                          RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
  4282  002976  A38A               	btfss	(_M+16)& (0+255),1,b
  4283  002978  BB8A               	btfsc	(_M+16)& (0+255),5,b
  4284  00297A  0012               	return	
  4285  00297C  0101               	movlb	(_M+17) shr (0+8)
  4286  00297E  B18B               	btfsc	(_M+17)& (0+255),0,b
  4287  002980  0012               	return	
  4288  002982  0101               	movlb	(_M+16) shr (0+8)
  4289  002984  BF8A               	btfsc	(_M+16)& (0+255),7,b
  4290  002986  0012               	return	
  4291  002988  0101               	movlb	(_M+26) shr (0+8)
  4292  00298A  A794               	btfss	(_M+26)& (0+255),3,b
  4293  00298C  B194               	btfsc	(_M+26)& (0+255),0,b
  4294  00298E  0012               	return	
  4295  002990  B394               	btfsc	(_M+26)& (0+255),1,b
  4296  002992  0012               	return	
  4297                           ;main.c: 1925: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&
      +                          &!M._RUSZ_NCISN)
  4298  002994  0101               	movlb	(_M+17) shr (0+8)
  4299  002996  A58B               	btfss	(_M+17)& (0+255),2,b
  4300  002998  BB94               	btfsc	(_M+26)& (0+255),5,b
  4301  00299A  0012               	return	
  4302  00299C  0101               	movlb	(_M+26) shr (0+8)
  4303  00299E  BD94               	btfsc	(_M+26)& (0+255),6,b
  4304  0029A0  0012               	return	
  4305                           ;main.c: 1926: {
  4306  0029A2  0101               	movlb	(_M+2) shr (0+8)
  4307  0029A4  517C               	movf	(_M+2)& (0+255),w,b
  4308  0029A6  117D               	iorwf	(_M+3)& (0+255),w,b
  4309  0029A8  E001               	bz	l441
  4310  0029AA  D7B7               	goto	L33
  4311                           ;main.c: 1930: {
  4312                           ;main.c: 1932: M.BL15=0;
  4313                           ;main.c: 1933: SetRozruch();
  4314                           ;main.c: 1934: }
  4315  0029AC                     l441:
  4316                           ;main.c: 1936: else
  4317  0029AC  0101               	movlb	_M shr (0+8)
  4318  0029AE  517A               	movf	_M& (0+255),w,b
  4319  0029B0  117B               	iorwf	(_M+1)& (0+255),w,b
  4320  0029B2  E004               	bz	l444
  4321                           ;main.c: 1938: {
  4322  0029B4  0102               	movlb	_DtCO shr (0+8)
  4323  0029B6  B30C               	btfsc	_DtCO& (0+255),1,b
  4324  0029B8  D83D               	call	_SetRozruch	;wreg free
  4325                           ;main.c: 1940: }
  4326  0029BA  0012               	return	
  4327  0029BC                     l444:
  4328                           ;main.c: 1941: else
  4329  0029BC  0101               	movlb	(_M+4) shr (0+8)
  4330  0029BE  517E               	movf	(_M+4)& (0+255),w,b
  4331  0029C0  117F               	iorwf	(_M+5)& (0+255),w,b
  4332  0029C2  E004               	bz	l447
  4333                           ;main.c: 1943: {
  4334  0029C4  0102               	movlb	_DtCO shr (0+8)
  4335  0029C6  B70C               	btfsc	_DtCO& (0+255),3,b
  4336  0029C8  D835               	call	_SetRozruch	;wreg free
  4337                           ;main.c: 1945: }
  4338  0029CA  0012               	return	
  4339  0029CC                     l447:
  4340                           ;main.c: 1946: else
  4341  0029CC  0101               	movlb	(_M+6) shr (0+8)
  4342  0029CE  5180               	movf	(_M+6)& (0+255),w,b
  4343  0029D0  1181               	iorwf	(_M+7)& (0+255),w,b
  4344  0029D2  E001               	bz	l450
  4345  0029D4  D7A5               	goto	L32
  4346                           ;main.c: 1948: {
  4347                           ;main.c: 1950: {
  4348                           ;main.c: 1952: M.BL15=0;
  4349                           ;main.c: 1953: SetRozruch();
  4350                           ;main.c: 1954: }
  4351  0029D6                     l450:
  4352                           ;main.c: 1956: else
  4353  0029D6  0101               	movlb	(_M+8) shr (0+8)
  4354  0029D8  5182               	movf	(_M+8)& (0+255),w,b
  4355  0029DA  1183               	iorwf	(_M+9)& (0+255),w,b
  4356  0029DC  E001               	bz	l453
  4357  0029DE  D79D               	goto	L33
  4358                           ;main.c: 1958: {
  4359                           ;main.c: 1960: {
  4360                           ;main.c: 1962: M.BL15=0;
  4361                           ;main.c: 1963: SetRozruch();
  4362                           ;main.c: 1964: }
  4363  0029E0                     l453:
  4364                           ;main.c: 1966: else
  4365  0029E0  0101               	movlb	(_M+10) shr (0+8)
  4366  0029E2  5184               	movf	(_M+10)& (0+255),w,b
  4367  0029E4  1185               	iorwf	(_M+11)& (0+255),w,b
  4368  0029E6  E009               	bz	l456
  4369  0029E8  0102               	movlb	_DtCO shr (0+8)
  4370  0029EA  A30C               	btfss	_DtCO& (0+255),1,b
  4371  0029EC  D006               	goto	l456
  4372  0029EE  0101               	movlb	(_M+17) shr (0+8)
  4373  0029F0  B78B               	btfsc	(_M+17)& (0+255),3,b
  4374  0029F2  D003               	goto	l456
  4375  0029F4  0101               	movlb	(_M+17) shr (0+8)
  4376  0029F6  A98B               	btfss	(_M+17)& (0+255),4,b
  4377                           ;main.c: 1968: {
  4378  0029F8  D01D               	goto	_SetRozruch	;wreg free
  4379                           ;main.c: 1970: }
  4380  0029FA                     l456:
  4381                           ;main.c: 1971: else
  4382  0029FA  0101               	movlb	(_M+12) shr (0+8)
  4383  0029FC  5186               	movf	(_M+12)& (0+255),w,b
  4384  0029FE  1187               	iorwf	(_M+13)& (0+255),w,b
  4385  002A00  E009               	bz	l458
  4386  002A02  0102               	movlb	_DtCO shr (0+8)
  4387  002A04  AD0C               	btfss	_DtCO& (0+255),6,b
  4388  002A06  D7AA               	goto	l434
  4389  002A08  0101               	movlb	(_M+17) shr (0+8)
  4390  002A0A  B78B               	btfsc	(_M+17)& (0+255),3,b
  4391  002A0C  D7A7               	goto	l434
  4392  002A0E                     L42:
  4393  002A0E  0101               	movlb	(_M+17) shr (0+8)
  4394  002A10  A98B               	btfss	(_M+17)& (0+255),4,b
  4395                           ;main.c: 1973: {
  4396  002A12  D010               	goto	_SetRozruch	;wreg free
  4397                           ;main.c: 1975: }
  4398  002A14                     l458:
  4399  002A14  D7A3               	goto	l434
  4400                           ;main.c: 1976: else
  4401                           ;main.c: 1978: {
  4402                           ;main.c: 1980: M.BL15=0;
  4403                           ;main.c: 1981: SetRozruch();
  4404                           ;main.c: 1982: }
  4405  002A16                     l389:
  4406  002A16  C08B  FFE8         	movff	_DtKNF+7,wreg
  4407  002A1A  0A00               	xorlw	0
  4408  002A1C  E101 D745          	bz	l413
  4409  002A20  0A01               	xorlw	1
  4410  002A22  E101 D6E2          	bz	l391
  4411  002A26  0A03               	xorlw	3
  4412  002A28  E101 D6DF          	bz	l391
  4413  002A2C  0A01               	xorlw	1
  4414  002A2E  E101 D73C          	bz	l413
  4415  002A32  D79D               	goto	l437
  4416                           ;main.c: 1987: }
  4417  002A34                     __end_of_DecRozruch:
  4418                           ;main.c: 1989: void SetRozruch(void)
  4419                           ;main.c: 1990: {
  4420  002A34                     _SetRozruch:
  4421  000000                     
  4422                           ;main.c: 1991: M._BLOKUJ_3M=0;
  4423  002A34  0101               	movlb	(_M+17) shr (0+8)
  4424  002A36  978B               	bcf	(_M+17)& (0+255),3,b
  4425                           ;main.c: 1992: M.BL3=0;
  4426  002A38  6BA0               	clrf	(_M+38)& (0+255),b
  4427                           ;main.c: 1993: EndL3();
  4428  002A3A  EC24  F065         	call	_EndL3	;wreg free
  4429                           ;main.c: 1994: M._RUSZ_48=0;
  4430  002A3E  0101               	movlb	(_M+16) shr (0+8)
  4431  002A40  978A               	bcf	(_M+16)& (0+255),3,b
  4432                           ;main.c: 1995: M.R48=0;
  4433  002A42  6B9E               	clrf	(_M+36)& (0+255),b
  4434                           ;main.c: 1996: M._RUSZ_48Z3=0;
  4435  002A44  998A               	bcf	(_M+16)& (0+255),4,b
  4436                           ;main.c: 1997: M.R48Z3=0;
  4437  002A46  6B9F               	clrf	(_M+37)& (0+255),b
  4438                           ;main.c: 1998: M._VWYBIEG=0;
  4439  002A48  9D8A               	bcf	(_M+16)& (0+255),6,b
  4440                           ;main.c: 1999: M._DE_VNT=0;
  4441  002A4A  9D95               	bcf	(_M+27)& (0+255),6,b
  4442                           ;main.c: 2000: M.VWB=0;
  4443  002A4C  6BA8               	clrf	(_M+46)& (0+255),b
  4444                           ;main.c: 2002: M._KCW_PMP=0;
  4445  002A4E  9B95               	bcf	(_M+27)& (0+255),5,b
  4446                           ;main.c: 2003: M.WYL=0;
  4447  002A50  6BA2               	clrf	(_M+40)& (0+255),b
  4448                           ;main.c: 2004: M.RPR=0;
  4449  002A52  6BA3               	clrf	(_M+41)& (0+255),b
  4450                           ;main.c: 2005: M._WYLACZ=0;
  4451  002A54  918A               	bcf	(_M+16)& (0+255),0,b
  4452                           ;main.c: 2006: M._RUSZ_POMPE=0;
  4453  002A56  958B               	bcf	(_M+17)& (0+255),2,b
  4454                           ;main.c: 2007: M._ROZRUCH=1;
  4455  002A58  858A               	bsf	(_M+16)& (0+255),2,b
  4456                           ;main.c: 2008: M.ROZ=0;
  4457  002A5A  6B9D               	clrf	(_M+35)& (0+255),b
  4458                           ;main.c: 2009: x=0;
  4459  002A5C  010E               	movlb	_x shr (0+8)
  4460  002A5E  6B9B               	clrf	_x& (0+255),b
  4461                           ;main.c: 2010: }
  4462  002A60  0012               	return	
  4463  002A62                     __end_of_SetRozruch:
  4464                           ;main.c: 2014: void DecWylacz(void)
  4465                           ;main.c: 2015: {
  4466  002A62                     _DecWylacz:
  4467  000000                     
  4468                           ;main.c: 2016: switch(DtKNF.tpkt)
  4469  002A62  D196               	goto	l464
  4470  002A64                     l466:
  4471                           ;main.c: 2019: case 2:
  4472  002A64  0101               	movlb	(_M+16) shr (0+8)
  4473  002A66  B18A               	btfsc	(_M+16)& (0+255),0,b
  4474  002A68  0012               	return	
  4475                           ;main.c: 2022: if(M._ROZRUCH||RD0)
  4476  002A6A  B58A               	btfsc	(_M+16)& (0+255),2,b
  4477  002A6C  D002               	goto	u8330
  4478  002A6E  A083               	btfss	3971,0,c	;volatile
  4479  002A70  0012               	return	
  4480  002A72                     u8330:
  4481                           ;main.c: 2023: {
  4482  002A72  0101               	movlb	(_M+2) shr (0+8)
  4483  002A74  517C               	movf	(_M+2)& (0+255),w,b
  4484  002A76  117D               	iorwf	(_M+3)& (0+255),w,b
  4485  002A78  E118               	bnz	l469
  4486  002A7A  517A               	movf	_M& (0+255),w,b
  4487  002A7C  117B               	iorwf	(_M+1)& (0+255),w,b
  4488  002A7E  E115               	bnz	l469
  4489  002A80  0101               	movlb	(_M+4) shr (0+8)
  4490  002A82  517E               	movf	(_M+4)& (0+255),w,b
  4491  002A84  117F               	iorwf	(_M+5)& (0+255),w,b
  4492  002A86  E111               	bnz	l469
  4493  002A88  0101               	movlb	(_M+8) shr (0+8)
  4494  002A8A  5182               	movf	(_M+8)& (0+255),w,b
  4495  002A8C  1183               	iorwf	(_M+9)& (0+255),w,b
  4496  002A8E  E10D               	bnz	l469
  4497  002A90  0101               	movlb	(_M+10) shr (0+8)
  4498  002A92  5184               	movf	(_M+10)& (0+255),w,b
  4499  002A94  1185               	iorwf	(_M+11)& (0+255),w,b
  4500  002A96  E109               	bnz	l469
  4501  002A98  0101               	movlb	(_M+12) shr (0+8)
  4502  002A9A  5186               	movf	(_M+12)& (0+255),w,b
  4503  002A9C  1187               	iorwf	(_M+13)& (0+255),w,b
  4504  002A9E  E105               	bnz	l469
  4505  002AA0  0101               	movlb	(_M+14) shr (0+8)
  4506  002AA2  5188               	movf	(_M+14)& (0+255),w,b
  4507  002AA4  1189               	iorwf	(_M+15)& (0+255),w,b
  4508  002AA6  E101               	bnz	l469
  4509                           ;main.c: 2025: {
  4510  002AA8  D1AF               	goto	_SetWylacz	;wreg free
  4511                           ;main.c: 2027: return;
  4512  002AAA                     l469:
  4513                           ;main.c: 2028: }
  4514  002AAA  0101               	movlb	(_M+16) shr (0+8)
  4515  002AAC  AB8A               	btfss	(_M+16)& (0+255),5,b
  4516  002AAE  B18B               	btfsc	(_M+17)& (0+255),0,b
  4517  002AB0  D1AB               	goto	_SetWylacz
  4518  002AB2  BF8A               	btfsc	(_M+16)& (0+255),7,b
  4519  002AB4  D1A9               	goto	_SetWylacz
  4520  002AB6  0101               	movlb	(_M+26) shr (0+8)
  4521  002AB8  B794               	btfsc	(_M+26)& (0+255),3,b
  4522  002ABA  D1A6               	goto	_SetWylacz
  4523  002ABC  0101               	movlb	(_M+26) shr (0+8)
  4524  002ABE  B194               	btfsc	(_M+26)& (0+255),0,b
  4525  002AC0  D1A3               	goto	_SetWylacz
  4526  002AC2  0101               	movlb	(_M+26) shr (0+8)
  4527  002AC4  B394               	btfsc	(_M+26)& (0+255),1,b
  4528  002AC6  D1A0               	goto	_SetWylacz
  4529  002AC8  0101               	movlb	(_M+17) shr (0+8)
  4530  002ACA  B58B               	btfsc	(_M+17)& (0+255),2,b
  4531  002ACC  D19D               	goto	_SetWylacz
  4532  002ACE  0101               	movlb	(_M+26) shr (0+8)
  4533  002AD0  BB94               	btfsc	(_M+26)& (0+255),5,b
  4534  002AD2  D19A               	goto	_SetWylacz
  4535  002AD4  0101               	movlb	(_M+26) shr (0+8)
  4536  002AD6  BD94               	btfsc	(_M+26)& (0+255),6,b
  4537                           ;main.c: 2030: {
  4538  002AD8  D197               	goto	_SetWylacz	;wreg free
  4539                           ;main.c: 2032: }
  4540                           ;main.c: 2033: else
  4541  002ADA  0101               	movlb	(_M+2) shr (0+8)
  4542  002ADC  517C               	movf	(_M+2)& (0+255),w,b
  4543  002ADE  117D               	iorwf	(_M+3)& (0+255),w,b
  4544  002AE0  E004               	bz	l472
  4545                           ;main.c: 2035: {
  4546  002AE2  0102               	movlb	_DtCW shr (0+8)
  4547  002AE4  B51B               	btfsc	_DtCW& (0+255),2,b
  4548  002AE6  D990               	call	_SetWylacz	;wreg free
  4549                           ;main.c: 2037: }
  4550  002AE8  0012               	return	
  4551  002AEA                     l472:
  4552                           ;main.c: 2038: else
  4553  002AEA  0101               	movlb	_M shr (0+8)
  4554  002AEC  517A               	movf	_M& (0+255),w,b
  4555  002AEE  117B               	iorwf	(_M+1)& (0+255),w,b
  4556  002AF0  E006               	bz	l475
  4557                           ;main.c: 2040: {
  4558  002AF2  0E13               	movlw	19
  4559  002AF4  ECA6  F068         	call	_RdPrt
  4560  002AF8  B0D8               	btfsc	status,0,c
  4561  002AFA  D986               	call	_SetWylacz	;wreg free
  4562                           ;main.c: 2042: }
  4563  002AFC  0012               	return	
  4564  002AFE                     l475:
  4565                           ;main.c: 2043: else
  4566  002AFE  0101               	movlb	(_M+4) shr (0+8)
  4567  002B00  517E               	movf	(_M+4)& (0+255),w,b
  4568  002B02  117F               	iorwf	(_M+5)& (0+255),w,b
  4569  002B04  E004               	bz	l478
  4570                           ;main.c: 2045: {
  4571  002B06  0102               	movlb	_DtCO shr (0+8)
  4572  002B08  B90C               	btfsc	_DtCO& (0+255),4,b
  4573  002B0A  D97E               	call	_SetWylacz	;wreg free
  4574                           ;main.c: 2047: }
  4575  002B0C  0012               	return	
  4576  002B0E                     l478:
  4577                           ;main.c: 2048: else
  4578  002B0E  0101               	movlb	(_M+8) shr (0+8)
  4579  002B10  5182               	movf	(_M+8)& (0+255),w,b
  4580  002B12  1183               	iorwf	(_M+9)& (0+255),w,b
  4581  002B14  E004               	bz	l481
  4582                           ;main.c: 2050: {
  4583  002B16  0102               	movlb	_DtCW shr (0+8)
  4584  002B18  B51B               	btfsc	_DtCW& (0+255),2,b
  4585  002B1A  D976               	call	_SetWylacz	;wreg free
  4586                           ;main.c: 2052: }
  4587  002B1C  0012               	return	
  4588  002B1E                     l481:
  4589                           ;main.c: 2053: else
  4590  002B1E  0101               	movlb	(_M+10) shr (0+8)
  4591  002B20  5184               	movf	(_M+10)& (0+255),w,b
  4592  002B22  1185               	iorwf	(_M+11)& (0+255),w,b
  4593  002B24  E01A               	bz	l484
  4594  002B26  0E13               	movlw	19
  4595  002B28  ECA6  F068         	call	_RdPrt
  4596  002B2C  E206               	bc	u8780
  4597  002B2E  0101               	movlb	(_M+17) shr (0+8)
  4598  002B30  B78B               	btfsc	(_M+17)& (0+255),3,b
  4599  002B32  D003               	goto	u8780
  4600  002B34  0101               	movlb	(_M+17) shr (0+8)
  4601  002B36  A98B               	btfss	(_M+17)& (0+255),4,b
  4602  002B38  D010               	goto	l484
  4603  002B3A                     u8780:
  4604                           ;main.c: 2055: {
  4605  002B3A  0E13               	movlw	19
  4606  002B3C  ECA6  F068         	call	_RdPrt
  4607  002B40  E30B               	bnc	l485
  4608  002B42  0101               	movlb	(_M+17) shr (0+8)
  4609  002B44  B78B               	btfsc	(_M+17)& (0+255),3,b
  4610  002B46  D160               	goto	_SetWylacz
  4611  002B48  0101               	movlb	(_M+17) shr (0+8)
  4612  002B4A  B98B               	btfsc	(_M+17)& (0+255),4,b
  4613  002B4C  D15D               	goto	_SetWylacz
  4614                           ;main.c: 2057: {
  4615  002B4E  0101               	movlb	(_M+17) shr (0+8)
  4616  002B50  878B               	bsf	(_M+17)& (0+255),3,b
  4617                           ;main.c: 2059: M.BL3=0;
  4618  002B52  6BA0               	clrf	(_M+38)& (0+255),b
  4619                           ;main.c: 2060: SetL3();
  4620  002B54  ECCE  F064         	call	_SetL3	;wreg free
  4621  002B58                     l485:
  4622                           ;main.c: 2061: }
  4623  002B58  D157               	goto	_SetWylacz	;wreg free
  4624                           ;main.c: 2063: }
  4625  002B5A                     l484:
  4626                           ;main.c: 2064: else
  4627  002B5A  0101               	movlb	(_M+12) shr (0+8)
  4628  002B5C  5186               	movf	(_M+12)& (0+255),w,b
  4629  002B5E  1187               	iorwf	(_M+13)& (0+255),w,b
  4630  002B60  E009               	bz	l487
  4631  002B62  0102               	movlb	_DtCO shr (0+8)
  4632  002B64  BF0C               	btfsc	_DtCO& (0+255),7,b
  4633  002B66  D150               	goto	_SetWylacz
  4634  002B68  0101               	movlb	(_M+17) shr (0+8)
  4635  002B6A  B78B               	btfsc	(_M+17)& (0+255),3,b
  4636  002B6C  D14D               	goto	_SetWylacz
  4637  002B6E  0101               	movlb	(_M+17) shr (0+8)
  4638  002B70  B98B               	btfsc	(_M+17)& (0+255),4,b
  4639                           ;main.c: 2066: {
  4640  002B72  D14A               	goto	_SetWylacz	;wreg free
  4641                           ;main.c: 2068: }
  4642  002B74                     l487:
  4643                           ;main.c: 2069: else
  4644  002B74  0101               	movlb	(_M+14) shr (0+8)
  4645  002B76  5188               	movf	(_M+14)& (0+255),w,b
  4646  002B78  1189               	iorwf	(_M+15)& (0+255),w,b
  4647  002B7A  B4D8               	btfsc	status,2,c
  4648  002B7C  0012               	return	
  4649  002B7E  0102               	movlb	_DtCW shr (0+8)
  4650  002B80  BD1B               	btfsc	_DtCW& (0+255),6,b
  4651                           ;main.c: 2071: {
  4652  002B82  D942               	call	_SetWylacz	;wreg free
  4653                           ;main.c: 2073: }
  4654  002B84  0012               	return	
  4655  002B86                     l491:
  4656                           ;main.c: 2078: case 3:
  4657  002B86  0101               	movlb	(_M+16) shr (0+8)
  4658  002B88  B18A               	btfsc	(_M+16)& (0+255),0,b
  4659  002B8A  0012               	return	
  4660                           ;main.c: 2081: if(M._ROZRUCH||RD0)
  4661  002B8C  B58A               	btfsc	(_M+16)& (0+255),2,b
  4662  002B8E  D002               	goto	u8970
  4663  002B90  A083               	btfss	3971,0,c	;volatile
  4664  002B92  0012               	return	
  4665  002B94                     u8970:
  4666                           ;main.c: 2082: {
  4667  002B94  0101               	movlb	(_M+2) shr (0+8)
  4668  002B96  517C               	movf	(_M+2)& (0+255),w,b
  4669  002B98  117D               	iorwf	(_M+3)& (0+255),w,b
  4670  002B9A  E11C               	bnz	l494
  4671  002B9C  5180               	movf	(_M+6)& (0+255),w,b
  4672  002B9E  1181               	iorwf	(_M+7)& (0+255),w,b
  4673  002BA0  E119               	bnz	l494
  4674  002BA2  0101               	movlb	_M shr (0+8)
  4675  002BA4  517A               	movf	_M& (0+255),w,b
  4676  002BA6  117B               	iorwf	(_M+1)& (0+255),w,b
  4677  002BA8  E115               	bnz	l494
  4678  002BAA  0101               	movlb	(_M+4) shr (0+8)
  4679  002BAC  517E               	movf	(_M+4)& (0+255),w,b
  4680  002BAE  117F               	iorwf	(_M+5)& (0+255),w,b
  4681  002BB0  E111               	bnz	l494
  4682  002BB2  0101               	movlb	(_M+8) shr (0+8)
  4683  002BB4  5182               	movf	(_M+8)& (0+255),w,b
  4684  002BB6  1183               	iorwf	(_M+9)& (0+255),w,b
  4685  002BB8  E10D               	bnz	l494
  4686  002BBA  0101               	movlb	(_M+10) shr (0+8)
  4687  002BBC  5184               	movf	(_M+10)& (0+255),w,b
  4688  002BBE  1185               	iorwf	(_M+11)& (0+255),w,b
  4689  002BC0  E109               	bnz	l494
  4690  002BC2  0101               	movlb	(_M+12) shr (0+8)
  4691  002BC4  5186               	movf	(_M+12)& (0+255),w,b
  4692  002BC6  1187               	iorwf	(_M+13)& (0+255),w,b
  4693  002BC8  E105               	bnz	l494
  4694  002BCA  0101               	movlb	(_M+14) shr (0+8)
  4695  002BCC  5188               	movf	(_M+14)& (0+255),w,b
  4696  002BCE  1189               	iorwf	(_M+15)& (0+255),w,b
  4697  002BD0  E101               	bnz	l494
  4698                           ;main.c: 2084: {
  4699  002BD2  D11A               	goto	_SetWylacz	;wreg free
  4700                           ;main.c: 2086: return;
  4701  002BD4                     l494:
  4702                           ;main.c: 2087: }
  4703  002BD4  0101               	movlb	(_M+16) shr (0+8)
  4704  002BD6  AB8A               	btfss	(_M+16)& (0+255),5,b
  4705  002BD8  B18B               	btfsc	(_M+17)& (0+255),0,b
  4706  002BDA  D116               	goto	_SetWylacz
  4707  002BDC  BF8A               	btfsc	(_M+16)& (0+255),7,b
  4708  002BDE  D114               	goto	_SetWylacz
  4709  002BE0  0101               	movlb	(_M+26) shr (0+8)
  4710  002BE2  B794               	btfsc	(_M+26)& (0+255),3,b
  4711  002BE4  D111               	goto	_SetWylacz
  4712  002BE6  0101               	movlb	(_M+26) shr (0+8)
  4713  002BE8  B194               	btfsc	(_M+26)& (0+255),0,b
  4714  002BEA  D10E               	goto	_SetWylacz
  4715  002BEC  0101               	movlb	(_M+26) shr (0+8)
  4716  002BEE  B394               	btfsc	(_M+26)& (0+255),1,b
  4717  002BF0  D10B               	goto	_SetWylacz
  4718  002BF2  0101               	movlb	(_M+17) shr (0+8)
  4719  002BF4  B58B               	btfsc	(_M+17)& (0+255),2,b
  4720  002BF6  D108               	goto	_SetWylacz
  4721  002BF8  0101               	movlb	(_M+26) shr (0+8)
  4722  002BFA  BB94               	btfsc	(_M+26)& (0+255),5,b
  4723  002BFC  D105               	goto	_SetWylacz
  4724  002BFE  0101               	movlb	(_M+26) shr (0+8)
  4725  002C00  BD94               	btfsc	(_M+26)& (0+255),6,b
  4726                           ;main.c: 2089: {
  4727  002C02  D102               	goto	_SetWylacz	;wreg free
  4728                           ;main.c: 2091: }
  4729                           ;main.c: 2092: else
  4730  002C04  0101               	movlb	(_M+2) shr (0+8)
  4731  002C06  517C               	movf	(_M+2)& (0+255),w,b
  4732  002C08  117D               	iorwf	(_M+3)& (0+255),w,b
  4733  002C0A  E004               	bz	l497
  4734  002C0C                     L45:
  4735                           ;main.c: 2094: {
  4736  002C0C  0102               	movlb	_DtCW shr (0+8)
  4737  002C0E  B51B               	btfsc	_DtCW& (0+255),2,b
  4738  002C10  D0FB               	goto	_SetWylacz
  4739  002C12  D0BA               	goto	L38
  4740                           ;main.c: 2096: }
  4741  002C14                     l497:
  4742                           ;main.c: 2097: else
  4743  002C14  0101               	movlb	(_M+6) shr (0+8)
  4744  002C16  5180               	movf	(_M+6)& (0+255),w,b
  4745  002C18  1181               	iorwf	(_M+7)& (0+255),w,b
  4746  002C1A  E004               	bz	l500
  4747                           ;main.c: 2099: {
  4748  002C1C  0102               	movlb	(_DtCO+1) shr (0+8)
  4749  002C1E  A30D               	btfss	(_DtCO+1)& (0+255),1,b
  4750  002C20  D8F3               	call	_SetWylacz	;wreg free
  4751                           ;main.c: 2101: }
  4752  002C22  0012               	return	
  4753  002C24                     l500:
  4754                           ;main.c: 2102: else
  4755  002C24  0101               	movlb	_M shr (0+8)
  4756  002C26  517A               	movf	_M& (0+255),w,b
  4757  002C28  117B               	iorwf	(_M+1)& (0+255),w,b
  4758  002C2A  E006               	bz	l503
  4759                           ;main.c: 2104: {
  4760  002C2C  0E13               	movlw	19
  4761  002C2E  ECA6  F068         	call	_RdPrt
  4762  002C32  B0D8               	btfsc	status,0,c
  4763  002C34  D8E9               	call	_SetWylacz	;wreg free
  4764                           ;main.c: 2106: }
  4765  002C36  0012               	return	
  4766  002C38                     l503:
  4767                           ;main.c: 2107: else
  4768  002C38  0101               	movlb	(_M+4) shr (0+8)
  4769  002C3A  517E               	movf	(_M+4)& (0+255),w,b
  4770  002C3C  117F               	iorwf	(_M+5)& (0+255),w,b
  4771  002C3E  E004               	bz	l506
  4772                           ;main.c: 2109: {
  4773  002C40  0102               	movlb	_DtCO shr (0+8)
  4774  002C42  B90C               	btfsc	_DtCO& (0+255),4,b
  4775  002C44  D8E1               	call	_SetWylacz	;wreg free
  4776                           ;main.c: 2111: }
  4777  002C46  0012               	return	
  4778  002C48                     l506:
  4779                           ;main.c: 2112: else
  4780  002C48  0101               	movlb	(_M+8) shr (0+8)
  4781  002C4A  5182               	movf	(_M+8)& (0+255),w,b
  4782  002C4C  1183               	iorwf	(_M+9)& (0+255),w,b
  4783  002C4E  E001               	bz	l509
  4784  002C50  D7DD               	goto	L45
  4785                           ;main.c: 2114: {
  4786                           ;main.c: 2116: }
  4787  002C52                     l509:
  4788                           ;main.c: 2117: else
  4789  002C52  0101               	movlb	(_M+10) shr (0+8)
  4790  002C54  5184               	movf	(_M+10)& (0+255),w,b
  4791  002C56  1185               	iorwf	(_M+11)& (0+255),w,b
  4792  002C58  E01A               	bz	l512
  4793  002C5A  0E13               	movlw	19
  4794  002C5C  ECA6  F068         	call	_RdPrt
  4795  002C60  E206               	bc	u9500
  4796  002C62  0101               	movlb	(_M+17) shr (0+8)
  4797  002C64  B78B               	btfsc	(_M+17)& (0+255),3,b
  4798  002C66  D003               	goto	u9500
  4799  002C68  0101               	movlb	(_M+17) shr (0+8)
  4800  002C6A  A98B               	btfss	(_M+17)& (0+255),4,b
  4801  002C6C  D010               	goto	l512
  4802  002C6E                     u9500:
  4803                           ;main.c: 2119: {
  4804  002C6E  0E13               	movlw	19
  4805  002C70  ECA6  F068         	call	_RdPrt
  4806  002C74  E30B               	bnc	l513
  4807  002C76  0101               	movlb	(_M+17) shr (0+8)
  4808  002C78  B78B               	btfsc	(_M+17)& (0+255),3,b
  4809  002C7A  D0C6               	goto	_SetWylacz
  4810  002C7C  0101               	movlb	(_M+17) shr (0+8)
  4811  002C7E  B98B               	btfsc	(_M+17)& (0+255),4,b
  4812  002C80  D0C3               	goto	_SetWylacz
  4813                           ;main.c: 2121: {
  4814  002C82  0101               	movlb	(_M+17) shr (0+8)
  4815  002C84  878B               	bsf	(_M+17)& (0+255),3,b
  4816                           ;main.c: 2123: M.BL3=0;
  4817  002C86  6BA0               	clrf	(_M+38)& (0+255),b
  4818                           ;main.c: 2124: SetL3();
  4819  002C88  ECCE  F064         	call	_SetL3	;wreg free
  4820  002C8C                     l513:
  4821                           ;main.c: 2125: }
  4822  002C8C  D0BD               	goto	_SetWylacz	;wreg free
  4823                           ;main.c: 2127: }
  4824  002C8E                     l512:
  4825                           ;main.c: 2128: else
  4826  002C8E  0101               	movlb	(_M+12) shr (0+8)
  4827  002C90  5186               	movf	(_M+12)& (0+255),w,b
  4828  002C92  1187               	iorwf	(_M+13)& (0+255),w,b
  4829  002C94  E009               	bz	l515
  4830  002C96  0102               	movlb	_DtCO shr (0+8)
  4831  002C98  BF0C               	btfsc	_DtCO& (0+255),7,b
  4832  002C9A  D0B6               	goto	_SetWylacz
  4833  002C9C  0101               	movlb	(_M+17) shr (0+8)
  4834  002C9E  B78B               	btfsc	(_M+17)& (0+255),3,b
  4835  002CA0  D0B3               	goto	_SetWylacz
  4836  002CA2  0101               	movlb	(_M+17) shr (0+8)
  4837  002CA4  B98B               	btfsc	(_M+17)& (0+255),4,b
  4838                           ;main.c: 2130: {
  4839  002CA6  D0B0               	goto	_SetWylacz	;wreg free
  4840                           ;main.c: 2132: }
  4841  002CA8                     l515:
  4842  002CA8  D067               	goto	l542
  4843                           ;main.c: 2133: else
  4844                           ;main.c: 2147: {
  4845                           ;main.c: 2149: return;
  4846  002CAA                     l521:
  4847                           ;main.c: 2150: }
  4848  002CAA  0101               	movlb	(_M+16) shr (0+8)
  4849  002CAC  AB8A               	btfss	(_M+16)& (0+255),5,b
  4850  002CAE  B18B               	btfsc	(_M+17)& (0+255),0,b
  4851  002CB0  D0AB               	goto	_SetWylacz
  4852  002CB2  BF8A               	btfsc	(_M+16)& (0+255),7,b
  4853  002CB4  D0A9               	goto	_SetWylacz
  4854  002CB6  0101               	movlb	(_M+26) shr (0+8)
  4855  002CB8  B794               	btfsc	(_M+26)& (0+255),3,b
  4856  002CBA  D0A6               	goto	_SetWylacz
  4857  002CBC  0101               	movlb	(_M+26) shr (0+8)
  4858  002CBE  B194               	btfsc	(_M+26)& (0+255),0,b
  4859  002CC0  D0A3               	goto	_SetWylacz
  4860  002CC2  0101               	movlb	(_M+26) shr (0+8)
  4861  002CC4  B394               	btfsc	(_M+26)& (0+255),1,b
  4862  002CC6  D0A0               	goto	_SetWylacz
  4863  002CC8  0101               	movlb	(_M+17) shr (0+8)
  4864  002CCA  B58B               	btfsc	(_M+17)& (0+255),2,b
  4865  002CCC  D09D               	goto	_SetWylacz
  4866  002CCE  0101               	movlb	(_M+26) shr (0+8)
  4867  002CD0  BB94               	btfsc	(_M+26)& (0+255),5,b
  4868  002CD2  D09A               	goto	_SetWylacz
  4869  002CD4  0101               	movlb	(_M+26) shr (0+8)
  4870  002CD6  BD94               	btfsc	(_M+26)& (0+255),6,b
  4871                           ;main.c: 2152: {
  4872  002CD8  D097               	goto	_SetWylacz	;wreg free
  4873                           ;main.c: 2154: }
  4874                           ;main.c: 2155: else
  4875  002CDA  0101               	movlb	(_M+2) shr (0+8)
  4876  002CDC  517C               	movf	(_M+2)& (0+255),w,b
  4877  002CDE  117D               	iorwf	(_M+3)& (0+255),w,b
  4878  002CE0  E001               	bz	l524
  4879  002CE2  D794               	goto	L45
  4880                           ;main.c: 2157: {
  4881                           ;main.c: 2159: }
  4882  002CE4                     l524:
  4883                           ;main.c: 2160: else
  4884  002CE4  0101               	movlb	(_M+6) shr (0+8)
  4885  002CE6  5180               	movf	(_M+6)& (0+255),w,b
  4886  002CE8  1181               	iorwf	(_M+7)& (0+255),w,b
  4887  002CEA  E004               	bz	l527
  4888                           ;main.c: 2162: {
  4889  002CEC  0102               	movlb	(_DtCO+1) shr (0+8)
  4890  002CEE  A30D               	btfss	(_DtCO+1)& (0+255),1,b
  4891  002CF0  D88B               	call	_SetWylacz	;wreg free
  4892                           ;main.c: 2164: }
  4893  002CF2  0012               	return	
  4894  002CF4                     l527:
  4895                           ;main.c: 2165: else
  4896  002CF4  0101               	movlb	_M shr (0+8)
  4897  002CF6  517A               	movf	_M& (0+255),w,b
  4898  002CF8  117B               	iorwf	(_M+1)& (0+255),w,b
  4899  002CFA  E006               	bz	l530
  4900                           ;main.c: 2167: {
  4901  002CFC  0E13               	movlw	19
  4902  002CFE  ECA6  F068         	call	_RdPrt
  4903  002D02  B0D8               	btfsc	status,0,c
  4904  002D04  D881               	call	_SetWylacz	;wreg free
  4905                           ;main.c: 2169: }
  4906  002D06  0012               	return	
  4907  002D08                     l530:
  4908                           ;main.c: 2170: else
  4909  002D08  0101               	movlb	(_M+4) shr (0+8)
  4910  002D0A  517E               	movf	(_M+4)& (0+255),w,b
  4911  002D0C  117F               	iorwf	(_M+5)& (0+255),w,b
  4912  002D0E  E004               	bz	l533
  4913                           ;main.c: 2172: {
  4914  002D10  0102               	movlb	_DtCO shr (0+8)
  4915  002D12  B90C               	btfsc	_DtCO& (0+255),4,b
  4916  002D14  D879               	call	_SetWylacz	;wreg free
  4917                           ;main.c: 2174: }
  4918  002D16  0012               	return	
  4919  002D18                     l533:
  4920                           ;main.c: 2175: else
  4921  002D18  0101               	movlb	(_M+8) shr (0+8)
  4922  002D1A  5182               	movf	(_M+8)& (0+255),w,b
  4923  002D1C  1183               	iorwf	(_M+9)& (0+255),w,b
  4924  002D1E  E001               	bz	l536
  4925  002D20  D775               	goto	L45
  4926                           ;main.c: 2177: {
  4927                           ;main.c: 2179: }
  4928  002D22                     l536:
  4929                           ;main.c: 2180: else
  4930  002D22  0101               	movlb	(_M+10) shr (0+8)
  4931  002D24  5184               	movf	(_M+10)& (0+255),w,b
  4932  002D26  1185               	iorwf	(_M+11)& (0+255),w,b
  4933  002D28  E01A               	bz	l539
  4934  002D2A  0E13               	movlw	19
  4935  002D2C  ECA6  F068         	call	_RdPrt
  4936  002D30  E206               	bc	u10240
  4937  002D32  0101               	movlb	(_M+17) shr (0+8)
  4938  002D34  B78B               	btfsc	(_M+17)& (0+255),3,b
  4939  002D36  D003               	goto	u10240
  4940  002D38  0101               	movlb	(_M+17) shr (0+8)
  4941  002D3A  A98B               	btfss	(_M+17)& (0+255),4,b
  4942  002D3C  D010               	goto	l539
  4943  002D3E                     u10240:
  4944                           ;main.c: 2182: {
  4945  002D3E  0E13               	movlw	19
  4946  002D40  ECA6  F068         	call	_RdPrt
  4947  002D44  E30B               	bnc	l540
  4948  002D46  0101               	movlb	(_M+17) shr (0+8)
  4949  002D48  B78B               	btfsc	(_M+17)& (0+255),3,b
  4950  002D4A  D05E               	goto	_SetWylacz
  4951  002D4C  0101               	movlb	(_M+17) shr (0+8)
  4952  002D4E  B98B               	btfsc	(_M+17)& (0+255),4,b
  4953  002D50  D05B               	goto	_SetWylacz
  4954                           ;main.c: 2184: {
  4955  002D52  0101               	movlb	(_M+17) shr (0+8)
  4956  002D54  878B               	bsf	(_M+17)& (0+255),3,b
  4957                           ;main.c: 2186: M.BL3=0;
  4958  002D56  6BA0               	clrf	(_M+38)& (0+255),b
  4959                           ;main.c: 2187: SetL3();
  4960  002D58  ECCE  F064         	call	_SetL3	;wreg free
  4961  002D5C                     l540:
  4962                           ;main.c: 2188: }
  4963  002D5C  D055               	goto	_SetWylacz	;wreg free
  4964                           ;main.c: 2190: }
  4965  002D5E                     l539:
  4966                           ;main.c: 2191: else
  4967  002D5E  0101               	movlb	(_M+12) shr (0+8)
  4968  002D60  5186               	movf	(_M+12)& (0+255),w,b
  4969  002D62  1187               	iorwf	(_M+13)& (0+255),w,b
  4970  002D64  E009               	bz	l542
  4971  002D66  0102               	movlb	_DtCO shr (0+8)
  4972  002D68  BF0C               	btfsc	_DtCO& (0+255),7,b
  4973  002D6A  D04E               	goto	_SetWylacz
  4974  002D6C  0101               	movlb	(_M+17) shr (0+8)
  4975  002D6E  B78B               	btfsc	(_M+17)& (0+255),3,b
  4976  002D70  D04B               	goto	_SetWylacz
  4977  002D72  0101               	movlb	(_M+17) shr (0+8)
  4978  002D74  B98B               	btfsc	(_M+17)& (0+255),4,b
  4979                           ;main.c: 2193: {
  4980  002D76  D048               	goto	_SetWylacz	;wreg free
  4981                           ;main.c: 2195: }
  4982  002D78                     l542:
  4983                           ;main.c: 2196: else
  4984  002D78  0101               	movlb	(_M+14) shr (0+8)
  4985  002D7A  5188               	movf	(_M+14)& (0+255),w,b
  4986  002D7C  1189               	iorwf	(_M+15)& (0+255),w,b
  4987  002D7E  B4D8               	btfsc	status,2,c
  4988  002D80  0012               	return	
  4989  002D82  0102               	movlb	_DtCW shr (0+8)
  4990  002D84  BD1B               	btfsc	_DtCW& (0+255),6,b
  4991  002D86  D040               	goto	_SetWylacz
  4992  002D88                     L38:
  4993  002D88  0102               	movlb	(_DtCO+1) shr (0+8)
  4994  002D8A  B30D               	btfsc	(_DtCO+1)& (0+255),1,b
  4995  002D8C  0012               	return	
  4996                           ;main.c: 2198: {
  4997  002D8E  D03C               	goto	_SetWylacz	;wreg free
  4998                           ;main.c: 2200: }
  4999  002D90                     l464:
  5000  002D90  C08B  FFE8         	movff	_DtKNF+7,wreg
  5001  002D94  0A00               	xorlw	0
  5002  002D96  E101 D6F6          	bz	l491
  5003  002D9A  0A01               	xorlw	1
  5004  002D9C  E101 D662          	bz	l466
  5005  002DA0  0A03               	xorlw	3
  5006  002DA2  E101 D65F          	bz	l466
  5007  002DA6  0A01               	xorlw	1
  5008  002DA8  E101 D6ED          	bz	l491
  5009                           ;main.c: 2140: }
  5010                           ;main.c: 2142: {
  5011  002DAC  0101               	movlb	(_M+16) shr (0+8)
  5012  002DAE  B18A               	btfsc	(_M+16)& (0+255),0,b
  5013                           ;main.c: 2205: }
  5014  002DB0  0012               	return	
  5015                           ;main.c: 2135: {
  5016                           ;main.c: 2137: }
  5017                           ;main.c: 2144: if(M._ROZRUCH||RD0)
  5018  002DB2  B58A               	btfsc	(_M+16)& (0+255),2,b
  5019  002DB4  D002               	goto	u9710
  5020  002DB6  A083               	btfss	3971,0,c	;volatile
  5021  002DB8  0012               	return	
  5022  002DBA                     u9710:
  5023                           ;main.c: 2145: {
  5024  002DBA  0101               	movlb	(_M+2) shr (0+8)
  5025  002DBC  517C               	movf	(_M+2)& (0+255),w,b
  5026  002DBE  117D               	iorwf	(_M+3)& (0+255),w,b
  5027  002DC0  E001 D773          	bnz	l521
  5028  002DC4  5180               	movf	(_M+6)& (0+255),w,b
  5029  002DC6  1181               	iorwf	(_M+7)& (0+255),w,b
  5030  002DC8  E001 D76F          	bnz	l521
  5031  002DCC  0101               	movlb	_M shr (0+8)
  5032  002DCE  517A               	movf	_M& (0+255),w,b
  5033  002DD0  117B               	iorwf	(_M+1)& (0+255),w,b
  5034  002DD2  E001 D76A          	bnz	l521
  5035  002DD6  0101               	movlb	(_M+4) shr (0+8)
  5036  002DD8  517E               	movf	(_M+4)& (0+255),w,b
  5037  002DDA  117F               	iorwf	(_M+5)& (0+255),w,b
  5038  002DDC  E001 D765          	bnz	l521
  5039  002DE0  0101               	movlb	(_M+8) shr (0+8)
  5040  002DE2  5182               	movf	(_M+8)& (0+255),w,b
  5041  002DE4  1183               	iorwf	(_M+9)& (0+255),w,b
  5042  002DE6  E001 D760          	bnz	l521
  5043  002DEA  0101               	movlb	(_M+10) shr (0+8)
  5044  002DEC  5184               	movf	(_M+10)& (0+255),w,b
  5045  002DEE  1185               	iorwf	(_M+11)& (0+255),w,b
  5046  002DF0  E001 D75B          	bnz	l521
  5047  002DF4  0101               	movlb	(_M+12) shr (0+8)
  5048  002DF6  5186               	movf	(_M+12)& (0+255),w,b
  5049  002DF8  1187               	iorwf	(_M+13)& (0+255),w,b
  5050  002DFA  E001 D756          	bnz	l521
  5051  002DFE  0101               	movlb	(_M+14) shr (0+8)
  5052  002E00  5188               	movf	(_M+14)& (0+255),w,b
  5053  002E02  1189               	iorwf	(_M+15)& (0+255),w,b
  5054  002E04  E001 D751          	bnz	l521
  5055  002E08                     __end_of_DecWylacz:
  5056                           ;main.c: 2207: void SetWylacz(void)
  5057                           ;main.c: 2208: {
  5058  002E08                     _SetWylacz:
  5059  000000                     
  5060                           ;main.c: 2209: GrzejOFF();
  5061  002E08  D8D7               	call	_GrzejOFF	;wreg free
  5062                           ;main.c: 2212: switch(DtKNF.tpkt)
  5063  002E0A  D010               	goto	l547
  5064  002E0C                     l549:
  5065                           ;main.c: 2218: {
  5066  002E0C  0101               	movlb	(_M+27) shr (0+8)
  5067                           ;main.c: 2215: case 2:
  5068  002E0E  B483               	btfsc	3971,2,c	;volatile
  5069  002E10  D004               	goto	L17
  5070  002E12  8B95               	bsf	(_M+27)& (0+255),5,b
  5071                           ;main.c: 2220: M._BLOKUJ_15S=1;
  5072  002E14  898B               	bsf	(_M+17)& (0+255),4,b
  5073                           ;main.c: 2221: M.BL15=0;
  5074  002E16  6BA1               	clrf	(_M+39)& (0+255),b
  5075                           ;main.c: 2222: }
  5076  002E18  D001               	goto	l551
  5077                           ;main.c: 2223: else M._KCW_PMP=0;
  5078  002E1A                     L17:
  5079  002E1A  9B95               	bcf	(_M+27)& (0+255),5,b
  5080  002E1C                     l551:
  5081                           ;main.c: 2224: ToObiegCO();
  5082  002E1C  DC5A               	call	_ToObiegCO	;wreg free
  5083                           ;main.c: 2225: break;
  5084  002E1E  D012               	goto	l546
  5085  002E20                     l553:
  5086                           ;main.c: 2228: case 3:
  5087  002E20  B283               	btfsc	3971,1,c	;volatile
  5088  002E22  D010               	goto	l546
  5089  002E24                     u10440:
  5090                           ;main.c: 2240: {
  5091  002E24  0101               	movlb	(_M+17) shr (0+8)
  5092  002E26  898B               	bsf	(_M+17)& (0+255),4,b
  5093                           ;main.c: 2242: M.BL15=0;
  5094  002E28  6BA1               	clrf	(_M+39)& (0+255),b
  5095                           ;main.c: 2243: }
  5096  002E2A  D00C               	goto	l546
  5097  002E2C                     l547:
  5098  002E2C  C08B  FFE8         	movff	_DtKNF+7,wreg
  5099  002E30  0A00               	xorlw	0
  5100  002E32  E0F6               	bz	l553
  5101  002E34  0A01               	xorlw	1
  5102  002E36  E0EA               	bz	l549
  5103  002E38  0A03               	xorlw	3
  5104  002E3A  E0E8               	bz	l549
  5105  002E3C  0A01               	xorlw	1
  5106  002E3E  E0F0               	bz	l553
  5107                           ;main.c: 2231: {
  5108                           ;main.c: 2233: M.BL15=0;
  5109                           ;main.c: 2234: }
  5110                           ;main.c: 2236: }
  5111                           ;main.c: 2238: {
  5112  002E40  A283               	btfss	3971,1,c	;volatile
  5113  002E42  D7F0               	goto	u10440
  5114  002E44                     l546:
  5115                           ;main.c: 2248: M._WYLACZ=1;
  5116  002E44  0101               	movlb	(_M+16) shr (0+8)
  5117  002E46  818A               	bsf	(_M+16)& (0+255),0,b
  5118                           ;main.c: 2249: if(M._TURBO&&RD3) M._VWYBIEG=1;
  5119  002E48  B395               	btfsc	(_M+27)& (0+255),1,b
  5120  002E4A  A683               	btfss	3971,3,c	;volatile
  5121  002E4C  D001               	goto	l557
  5122  002E4E  8D8A               	bsf	(_M+16)& (0+255),6,b
  5123  002E50                     l557:
  5124                           ;main.c: 2250: M.ROZ=0;
  5125  002E50  0101               	movlb	(_M+35) shr (0+8)
  5126  002E52  6B9D               	clrf	(_M+35)& (0+255),b
  5127                           ;main.c: 2251: M.MNM=0;
  5128  002E54  6BA6               	clrf	(_M+44)& (0+255),b
  5129                           ;main.c: 2252: M._ROZRUCH=0;
  5130  002E56  958A               	bcf	(_M+16)& (0+255),2,b
  5131                           ;main.c: 2253: M._RUN_MNMOD=0;
  5132  002E58  9995               	bcf	(_M+27)& (0+255),4,b
  5133                           ;main.c: 2256: DtCO._on_DZ_CO=0;
  5134  002E5A  0102               	movlb	_DtCO shr (0+8)
  5135  002E5C  9B0C               	bcf	_DtCO& (0+255),5,b
  5136                           ;main.c: 2257: SetPrt(9,0);
  5137  002E5E  0100               	movlb	__Lparam shr (0+8)
  5138  002E60  6BDB               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  5139  002E62  0E09               	movlw	9
  5140  002E64  ECB7  F068         	call	_SetPrt
  5141                           ;main.c: 2258: DtCW._on_DZ_CW=0;
  5142  002E68  0102               	movlb	_DtCW shr (0+8)
  5143  002E6A  991B               	bcf	_DtCW& (0+255),4,b
  5144                           ;main.c: 2259: SetPrt(10,0);
  5145  002E6C  0100               	movlb	__Lparam shr (0+8)
  5146  002E6E  6BDB               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  5147  002E70  0E0A               	movlw	10
  5148  002E72  EFB7  F068         	goto	_SetPrt
  5149                           ;main.c: 2260: }
  5150  002E76                     __end_of_SetWylacz:
  5151                           ;main.c: 2263: void FunkcjaSerwisowa(void)
  5152                           ;main.c: 2264: {
  5153  002E76                     _FunkcjaSerwisowa:
  5154  000000                     
  5155                           ;main.c: 2265: if(M._AKTYWNE_KNF)
  5156  002E76  0101               	movlb	(_M+24) shr (0+8)
  5157  002E78  5192               	movf	(_M+24)& (0+255),w,b
  5158  002E7A  1193               	iorwf	(_M+25)& (0+255),w,b
  5159  002E7C  E02D               	bz	l562
  5160                           ;main.c: 2266: {
  5161  002E7E  6BA9               	clrf	(_M+47)& (0+255),b
  5162                           ;main.c: 2268: M._AKTYWNE_SRW=0;
  5163  002E80  EE01  F08C         	lfsr	0,_M+18
  5164  002E84  6AEE               	clrf	postinc0,c
  5165  002E86  6AEE               	clrf	postinc0,c
  5166                           ;main.c: 2269: }
  5167  002E88  0012               	return	
  5168                           ;main.c: 2270: else
  5169  002E8A                     l563:
  5170                           ;main.c: 2272: {
  5171                           ;main.c: 2274: {
  5172  002E8A  0101               	movlb	(_PFN+31) shr (0+8)
  5173  002E8C  5176               	movf	(_PFN+31)& (0+255),w,b
  5174  002E8E  0A03               	xorlw	3
  5175  002E90  1177               	iorwf	(_PFN+32)& (0+255),w,b
  5176  002E92  B4D8               	btfsc	status,2,c
  5177  002E94  AD58               	btfss	(_PFN+1)& (0+255),6,b
  5178  002E96  0012               	return	
  5179  002E98  BF5A               	btfsc	(_PFN+3)& (0+255),7,b
  5180  002E9A  0012               	return	
  5181                           ;main.c: 2276: {
  5182  002E9C  0E01               	movlw	1
  5183  002E9E  CFE8 F1A9          	movff	wreg,_M+47
  5184                           ;main.c: 2278: M._AKTYWNE_SRW=1;
  5185  002EA2  0101               	movlb	(_M+18) shr (0+8)
  5186  002EA4  6F8C               	movwf	(_M+18)& (0+255),b
  5187  002EA6  6B8D               	clrf	(_M+19)& (0+255),b
  5188                           ;main.c: 2279: StartRTM(1);
  5189  002EA8  EFC2  F06E         	goto	_StartRTM
  5190                           ;main.c: 2280: }
  5191  002EAC                     l565:
  5192                           ;main.c: 2282: }
  5193                           ;main.c: 2284: {
  5194  002EAC  0101               	movlb	(_PFN+31) shr (0+8)
  5195  002EAE  5176               	movf	(_PFN+31)& (0+255),w,b
  5196  002EB0  0A03               	xorlw	3
  5197  002EB2  1177               	iorwf	(_PFN+32)& (0+255),w,b
  5198  002EB4  B4D8               	btfsc	status,2,c
  5199  002EB6  B759               	btfsc	(_PFN+2)& (0+255),3,b
  5200  002EB8  D008               	goto	l566
  5201  002EBA  0E01               	movlw	1
  5202  002EBC  ECD4  F06E         	call	_RTM
  5203  002EC0  6E00               	movwf	btemp,c
  5204  002EC2  0E0F               	movlw	15
  5205  002EC4  5C00               	subwf	btemp,w,c
  5206  002EC6  A0D8               	btfss	status,0,c
  5207  002EC8  0012               	return	
  5208  002ECA                     l566:
  5209                           ;main.c: 2287: else
  5210  002ECA  0101               	movlb	(_M+47) shr (0+8)
  5211  002ECC  6BA9               	clrf	(_M+47)& (0+255),b
  5212                           ;main.c: 2290: M._AKTYWNE_SRW=0;
  5213  002ECE  EE01  F08C         	lfsr	0,_M+18
  5214  002ED2  6AEE               	clrf	postinc0,c
  5215  002ED4  6AEE               	clrf	postinc0,c
  5216                           ;main.c: 2291: }
  5217  002ED6  0012               	return	
  5218  002ED8                     l562:
  5219  002ED8  C1A9  FFE8         	movff	_M+47,wreg
  5220  002EDC  0A00               	xorlw	0
  5221  002EDE  E0D5               	bz	l563
  5222  002EE0  0A01               	xorlw	1
  5223  002EE2  E0E4               	bz	l565
  5224  002EE4  0012               	return	
  5225                           ;main.c: 2295: }
  5226  002EE6                     __end_of_FunkcjaSerwisowa:
  5227                           ;main.c: 2344: void BlokadaL3(void)
  5228                           ;main.c: 2345: {
  5229  002EE6                     _BlokadaL3:
  5230  000000                     
  5231                           ;main.c: 2346: switch(M.BL3)
  5232  002EE6  D02D               	goto	l570
  5233  002EE8                     l571:
  5234                           ;main.c: 2347: {
  5235                           ;main.c: 2349: {
  5236  002EE8  0E01               	movlw	1
  5237  002EEA  CFE8 F1A0          	movff	wreg,_M+38
  5238                           ;main.c: 2351: StartRTM(2);
  5239  002EEE  0E02               	movlw	2
  5240  002EF0  ECC2  F06E         	call	_StartRTM
  5241  002EF4                     l572:
  5242                           ;main.c: 2352: }
  5243                           ;main.c: 2354: {
  5244  002EF4  ECCE  F064         	call	_SetL3	;wreg free
  5245                           ;main.c: 2356: if((PFN.poz!=3&&!M._ZMKCOCW)||M._
      +                          pob_CW||(DtKNF.tpkt==0&&DtCW._wpz_CW))
  5246  002EF8  0101               	movlb	(_PFN+31) shr (0+8)
  5247  002EFA  5176               	movf	(_PFN+31)& (0+255),w,b
  5248  002EFC  0A03               	xorlw	3
  5249  002EFE  1177               	iorwf	(_PFN+32)& (0+255),w,b
  5250  002F00  A4D8               	btfss	status,2,c
  5251  002F02  B38A               	btfsc	(_M+16)& (0+255),1,b
  5252  002F04  D001               	goto	u10611
  5253  002F06  D00B               	goto	u10670
  5254  002F08                     u10611:
  5255  002F08  0101               	movlb	(_M+8) shr (0+8)
  5256  002F0A  5182               	movf	(_M+8)& (0+255),w,b
  5257  002F0C  1183               	iorwf	(_M+9)& (0+255),w,b
  5258  002F0E  E107               	bnz	u10670
  5259  002F10  EE00  F08B         	lfsr	0,_DtKNF+7
  5260  002F14  50EF               	movf	indf0,w,c
  5261  002F16  E108               	bnz	l573
  5262  002F18  0102               	movlb	_DtCW shr (0+8)
  5263  002F1A  A71B               	btfss	_DtCW& (0+255),3,b
  5264  002F1C  D005               	goto	l573
  5265  002F1E                     u10670:
  5266                           ;main.c: 2357: {
  5267  002F1E  0101               	movlb	(_M+17) shr (0+8)
  5268  002F20  978B               	bcf	(_M+17)& (0+255),3,b
  5269                           ;main.c: 2359: M.BL3=0;
  5270  002F22  6BA0               	clrf	(_M+38)& (0+255),b
  5271                           ;main.c: 2360: EndL3();
  5272  002F24  EC24  F065         	call	_EndL3	;wreg free
  5273  002F28                     l573:
  5274                           ;main.c: 2361: }
  5275  002F28  0E02               	movlw	2
  5276  002F2A  ECD4  F06E         	call	_RTM
  5277  002F2E  6E00               	movwf	btemp,c
  5278  002F30  0E03               	movlw	3
  5279  002F32  5C00               	subwf	btemp,w,c
  5280  002F34  A0D8               	btfss	status,0,c
  5281  002F36  0012               	return	
  5282                           ;main.c: 2363: M._BLOKUJ_3M=0;
  5283  002F38  0101               	movlb	(_M+17) shr (0+8)
  5284  002F3A  978B               	bcf	(_M+17)& (0+255),3,b
  5285                           ;main.c: 2364: M.BL3=0;
  5286  002F3C  6BA0               	clrf	(_M+38)& (0+255),b
  5287                           ;main.c: 2365: EndL3();
  5288  002F3E  EF24  F065         	goto	_EndL3	;wreg free
  5289                           ;main.c: 2366: }
  5290  002F42                     l570:
  5291  002F42  C1A0  FFE8         	movff	_M+38,wreg
  5292  002F46  0A00               	xorlw	0
  5293  002F48  E0CF               	bz	l571
  5294  002F4A  0A01               	xorlw	1
  5295  002F4C  E0D3               	bz	l572
  5296  002F4E  0012               	return	
  5297                           ;main.c: 2368: }
  5298  002F50                     __end_of_BlokadaL3:
  5299                           ;main.c: 2372: void Blokada15S(void)
  5300                           ;main.c: 2373: {
  5301  002F50                     _Blokada15S:
  5302  000000                     
  5303                           ;main.c: 2374: switch(M.BL15)
  5304  002F50  D021               	goto	l577
  5305  002F52                     l578:
  5306                           ;main.c: 2375: {
  5307                           ;main.c: 2377: {
  5308  002F52  0E01               	movlw	1
  5309  002F54  CFE8 F1A1          	movff	wreg,_M+39
  5310                           ;main.c: 2379: StartRTdS(3);
  5311  002F58  0E03               	movlw	3
  5312  002F5A  EC86  F06E         	call	_StartRTdS
  5313  002F5E                     l579:
  5314                           ;main.c: 2380: }
  5315                           ;main.c: 2382: {
  5316  002F5E  0E03               	movlw	3
  5317  002F60  EC98  F06E         	call	_RTdS
  5318  002F64  6E00               	movwf	btemp,c
  5319  002F66  0E02               	movlw	2
  5320  002F68  5C00               	subwf	btemp,w,c
  5321  002F6A  E308               	bnc	l580
  5322  002F6C  0101               	movlb	(_PFN+31) shr (0+8)
  5323  002F6E  5176               	movf	(_PFN+31)& (0+255),w,b
  5324  002F70  0A03               	xorlw	3
  5325  002F72  1177               	iorwf	(_PFN+32)& (0+255),w,b
  5326  002F74  E003               	bz	l580
  5327                           ;main.c: 2384: {
  5328  002F76  0101               	movlb	(_M+17) shr (0+8)
  5329  002F78  998B               	bcf	(_M+17)& (0+255),4,b
  5330                           ;main.c: 2386: M.BL15=0;
  5331  002F7A  6BA1               	clrf	(_M+39)& (0+255),b
  5332  002F7C                     l580:
  5333                           ;main.c: 2387: }
  5334  002F7C  0E03               	movlw	3
  5335  002F7E  EC98  F06E         	call	_RTdS
  5336  002F82  6E00               	movwf	btemp,c
  5337  002F84  0E96               	movlw	150
  5338  002F86  5C00               	subwf	btemp,w,c
  5339  002F88  A0D8               	btfss	status,0,c
  5340  002F8A  0012               	return	
  5341                           ;main.c: 2389: M._BLOKUJ_15S=0;
  5342  002F8C  0101               	movlb	(_M+17) shr (0+8)
  5343  002F8E  998B               	bcf	(_M+17)& (0+255),4,b
  5344                           ;main.c: 2390: M.BL15=0;
  5345  002F90  6BA1               	clrf	(_M+39)& (0+255),b
  5346                           ;main.c: 2391: }
  5347  002F92  0012               	return	
  5348  002F94                     l577:
  5349  002F94  C1A1  FFE8         	movff	_M+39,wreg
  5350  002F98  0A00               	xorlw	0
  5351  002F9A  E0DB               	bz	l578
  5352  002F9C  0A01               	xorlw	1
  5353  002F9E  E0DF               	bz	l579
  5354  002FA0  0012               	return	
  5355                           ;main.c: 2393: }
  5356  002FA2                     __end_of_Blokada15S:
  5357                           ;main.c: 2397: void GrzejON(void)
  5358                           ;main.c: 2398: {
  5359  002FA2                     _GrzejON:
  5360  000000                     
  5361                           ;main.c: 2399: RD0=1;
  5362  002FA2  8083               	bsf	3971,0,c	;volatile
  5363                           ;main.c: 2400: asm("nop");
  5364  002FA4  F000               	nop		;#
  5365                           ;main.c: 2401: asm("nop");
  5366  002FA6  F000               	nop		;#
  5367                           ;main.c: 2402: asm("nop");
  5368  002FA8  F000               	nop		;#
  5369                           ;main.c: 2403: asm("nop");
  5370  002FAA  F000               	nop		;#
  5371                           ;main.c: 2404: asm("nop");
  5372  002FAC  F000               	nop		;#
  5373                           ;main.c: 2405: asm("nop");
  5374  002FAE  F000               	nop		;#
  5375                           ;main.c: 2406: asm("nop");
  5376  002FB0  F000               	nop		;#
  5377                           ;main.c: 2407: asm("nop");
  5378  002FB2  F000               	nop		;#
  5379                           ;main.c: 2408: RD3=1;
  5380  002FB4  8683               	bsf	3971,3,c	;volatile
  5381                           ;main.c: 2409: }
  5382  002FB6  0012               	return	
  5383  002FB8                     __end_of_GrzejON:
  5384                           ;main.c: 2413: void GrzejOFF(void)
  5385                           ;main.c: 2414: {
  5386  002FB8                     _GrzejOFF:
  5387  000000                     
  5388                           ;main.c: 2415: if(!M._TURBO)
  5389  002FB8  0101               	movlb	(_M+27) shr (0+8)
  5390  002FBA  B395               	btfsc	(_M+27)& (0+255),1,b
  5391  002FBC  D00B               	goto	l584
  5392                           ;main.c: 2416: {
  5393  002FBE  9683               	bcf	3971,3,c	;volatile
  5394                           ;main.c: 2418: asm("nop");
  5395  002FC0  F000               	nop		;#
  5396                           ;main.c: 2419: asm("nop");
  5397  002FC2  F000               	nop		;#
  5398                           ;main.c: 2420: asm("nop");
  5399  002FC4  F000               	nop		;#
  5400                           ;main.c: 2421: asm("nop");
  5401  002FC6  F000               	nop		;#
  5402                           ;main.c: 2422: asm("nop");
  5403  002FC8  F000               	nop		;#
  5404                           ;main.c: 2423: asm("nop");
  5405  002FCA  F000               	nop		;#
  5406                           ;main.c: 2424: asm("nop");
  5407  002FCC  F000               	nop		;#
  5408                           ;main.c: 2425: asm("nop");
  5409  002FCE  F000               	nop		;#
  5410                           ;main.c: 2426: RD0=0;
  5411  002FD0  9083               	bcf	3971,0,c	;volatile
  5412                           ;main.c: 2427: }
  5413  002FD2  0012               	return	
  5414  002FD4                     l584:
  5415                           ;main.c: 2428: else
  5416  002FD4  9083               	bcf	3971,0,c	;volatile
  5417                           ;main.c: 2431: }
  5418  002FD6  0012               	return	
  5419  002FD8                     __end_of_GrzejOFF:
  5420                           ;main.c: 2436: void Rozruch(void)
  5421                           ;main.c: 2437: {
  5422  002FD8                     _Rozruch:
  5423  000000                     
  5424                           ;main.c: 2438: switch(M.ROZ)
  5425  002FD8  D12A               	goto	l588
  5426  002FDA                     l589:
  5427                           ;main.c: 2439: {
  5428                           ;main.c: 2442: {
  5429  002FDA  EE00  F092         	lfsr	0,_DtKNF+14
  5430  002FDE  50EF               	movf	indf0,w,c
  5431  002FE0  E103               	bnz	l590
  5432                           ;main.c: 2444: {
  5433  002FE2  0101               	movlb	(_M+16) shr (0+8)
  5434  002FE4  B38A               	btfsc	(_M+16)& (0+255),1,b
  5435  002FE6  0012               	return	
  5436  002FE8                     l590:
  5437                           ;main.c: 2446: }
  5438  002FE8  0E01               	movlw	1
  5439  002FEA  CFE8 F19D          	movff	wreg,_M+35
  5440                           ;main.c: 2448: StartRTS(2);
  5441  002FEE  0E02               	movlw	2
  5442  002FF0  ECA4  F06E         	call	_StartRTS
  5443  002FF4                     l592:
  5444                           ;main.c: 2449: }
  5445                           ;main.c: 2452: {
  5446  002FF4  EE00  F092         	lfsr	0,_DtKNF+14
  5447  002FF8  50EF               	movf	indf0,w,c
  5448                           ;main.c: 2454: {
  5449  002FFA  0E02               	movlw	2
  5450  002FFC  E123               	bnz	L18
  5451  002FFE  ECB6  F06E         	call	_RTS
  5452  003002  6E00               	movwf	btemp,c
  5453  003004  0E01               	movlw	1
  5454  003006  5C00               	subwf	btemp,w,c
  5455  003008  A0D8               	btfss	status,0,c
  5456  00300A  0012               	return	
  5457                           ;main.c: 2456: RD2=0;
  5458  00300C  9483               	bcf	3971,2,c	;volatile
  5459                           ;main.c: 2457: if(!RdPrt(1))
  5460  00300E  0E01               	movlw	1
  5461  003010  ECA6  F068         	call	_RdPrt
  5462                           ;main.c: 2458: {
  5463  003014  0E02               	movlw	2
  5464  003016  E204               	bc	L19
  5465  003018  CFE8 F19D          	movff	wreg,_M+35
  5466                           ;main.c: 2460: StartRTS(2);
  5467  00301C  EFA4  F06E         	goto	_StartRTS
  5468                           ;main.c: 2461: return;
  5469                           ;main.c: 2462: }
  5470  003020                     L19:
  5471  003020  ECB6  F06E         	call	_RTS
  5472  003024  6E00               	movwf	btemp,c
  5473  003026  0E05               	movlw	5
  5474  003028  5C00               	subwf	btemp,w,c
  5475  00302A  A0D8               	btfss	status,0,c
  5476  00302C  0012               	return	
  5477                           ;main.c: 2464: M.ERR_BTY=0x05;
  5478  00302E  0E05               	movlw	5
  5479  003030  CFE8 F19C          	movff	wreg,_M+34
  5480                           ;main.c: 2465: PrintErr(0x05,1);
  5481  003034  0E01               	movlw	1
  5482  003036  0100               	movlb	__Lparam shr (0+8)
  5483  003038  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5484  00303A  0E05               	movlw	5
  5485  00303C  ECEC  F062         	call	_PrintErr
  5486                           ;main.c: 2466: ErrPTG();
  5487  003040  EFA7  F01E         	goto	_ErrPTG	;wreg free
  5488                           ;main.c: 2467: return;
  5489                           ;main.c: 2468: }
  5490  003044                     L18:
  5491  003044  CFE8 F19D          	movff	wreg,_M+35
  5492                           ;main.c: 2470: StartRTS(2);
  5493  003048  0E02               	movlw	2
  5494  00304A  ECA4  F06E         	call	_StartRTS
  5495  00304E                     l597:
  5496                           ;main.c: 2471: }
  5497                           ;main.c: 2474: {
  5498  00304E  D00D               	goto	l599
  5499  003050                     l601:
  5500                           ;main.c: 2478: case 2:
  5501  003050  0101               	movlb	(_M+27) shr (0+8)
  5502  003052  BF95               	btfsc	(_M+27)& (0+255),7,b
  5503  003054  D017               	goto	l598
  5504  003056  EE00  F092         	lfsr	0,_DtKNF+14
  5505  00305A  50EF               	movf	indf0,w,c
  5506  00305C  E113               	bnz	l598
  5507  00305E  D003               	goto	u10840
  5508                           ;main.c: 2481: break;
  5509  003060                     l604:
  5510                           ;main.c: 2484: case 3:
  5511  003060  0101               	movlb	(_M+16) shr (0+8)
  5512  003062  B38A               	btfsc	(_M+16)& (0+255),1,b
  5513  003064  D00F               	goto	l598
  5514  003066                     u10840:
  5515  003066  8483               	bsf	3971,2,c	;volatile
  5516                           ;main.c: 2492: break;
  5517  003068  D00D               	goto	l598
  5518  00306A                     l599:
  5519  00306A  C08B  FFE8         	movff	_DtKNF+7,wreg
  5520  00306E  0A00               	xorlw	0
  5521  003070  E0F7               	bz	l604
  5522  003072  0A01               	xorlw	1
  5523  003074  E0ED               	bz	l601
  5524  003076  0A03               	xorlw	3
  5525  003078  E0EB               	bz	l601
  5526  00307A  0A01               	xorlw	1
  5527  00307C  E0F1               	bz	l604
  5528                           ;main.c: 2487: break;
  5529                           ;main.c: 2488: }
  5530                           ;main.c: 2490: {
  5531  00307E  0101               	movlb	(_M+16) shr (0+8)
  5532  003080  A38A               	btfss	(_M+16)& (0+255),1,b
  5533  003082  D7F1               	goto	u10840
  5534  003084                     l598:
  5535                           ;main.c: 2495: WritePWM(PWM.MDMOD);
  5536  003084  C277  FFE8         	movff	_PWM+9,wreg
  5537  003088  EC36  F061         	call	_WritePWM
  5538                           ;main.c: 2496: M.ROZ=3;
  5539  00308C  0E03               	movlw	3
  5540  00308E  CFE8 F19D          	movff	wreg,_M+35
  5541                           ;main.c: 2497: StartRTS(2);
  5542  003092  0E02               	movlw	2
  5543  003094  ECA4  F06E         	call	_StartRTS
  5544  003098                     l608:
  5545                           ;main.c: 2498: }
  5546                           ;main.c: 2501: {
  5547  003098  0101               	movlb	(_M+27) shr (0+8)
  5548  00309A  A395               	btfss	(_M+27)& (0+255),1,b
  5549  00309C  D013               	goto	l609
  5550                           ;main.c: 2503: {
  5551  00309E  0E03               	movlw	3
  5552  0030A0  ECA6  F068         	call	_RdPrt
  5553  0030A4  B0D8               	btfsc	status,0,c
  5554  0030A6  B683               	btfsc	3971,3,c	;volatile
  5555  0030A8  D00C               	goto	l610
  5556                           ;main.c: 2505: {
  5557  0030AA  0E02               	movlw	2
  5558  0030AC  ECB6  F06E         	call	_RTS
  5559  0030B0  6E00               	movwf	btemp,c
  5560  0030B2  0E05               	movlw	5
  5561  0030B4  5C00               	subwf	btemp,w,c
  5562  0030B6  A0D8               	btfss	status,0,c
  5563  0030B8  0012               	return	
  5564                           ;main.c: 2507: M.RCI=0;
  5565  0030BA  0101               	movlb	(_M+43) shr (0+8)
  5566  0030BC  6BA5               	clrf	(_M+43)& (0+255),b
  5567                           ;main.c: 2508: M._RUSZ_CIAG=1;
  5568  0030BE  8F8A               	bsf	(_M+16)& (0+255),7,b
  5569                           ;main.c: 2509: return;
  5570  0030C0  0012               	return	
  5571  0030C2                     l610:
  5572                           ;main.c: 2510: }
  5573  0030C2  8683               	bsf	3971,3,c	;volatile
  5574  0030C4                     l609:
  5575                           ;main.c: 2512: }
  5576  0030C4  0E04               	movlw	4
  5577  0030C6  CFE8 F19D          	movff	wreg,_M+35
  5578                           ;main.c: 2514: StartRTS(2);
  5579  0030CA  0E02               	movlw	2
  5580  0030CC  ECA4  F06E         	call	_StartRTS
  5581  0030D0                     l612:
  5582                           ;main.c: 2515: }
  5583                           ;main.c: 2518: {
  5584  0030D0  0101               	movlb	(_M+27) shr (0+8)
  5585  0030D2  A395               	btfss	(_M+27)& (0+255),1,b
  5586  0030D4  D012               	goto	l613
  5587                           ;main.c: 2520: {
  5588  0030D6  0E15               	movlw	21
  5589  0030D8  ECA6  F068         	call	_RdPrt
  5590  0030DC  A0D8               	btfss	status,0,c
  5591  0030DE  A683               	btfss	3971,3,c	;volatile
  5592  0030E0  D00C               	goto	l613
  5593                           ;main.c: 2522: {
  5594  0030E2  0E02               	movlw	2
  5595  0030E4  ECB6  F06E         	call	_RTS
  5596  0030E8  6E00               	movwf	btemp,c
  5597  0030EA  0E05               	movlw	5
  5598  0030EC  5C00               	subwf	btemp,w,c
  5599  0030EE  A0D8               	btfss	status,0,c
  5600  0030F0  0012               	return	
  5601                           ;main.c: 2524: M.RCI=0;
  5602  0030F2  0101               	movlb	(_M+43) shr (0+8)
  5603  0030F4  6BA5               	clrf	(_M+43)& (0+255),b
  5604                           ;main.c: 2525: M._RUSZ_CIAG=1;
  5605  0030F6  8F8A               	bsf	(_M+16)& (0+255),7,b
  5606                           ;main.c: 2526: return;
  5607  0030F8  0012               	return	
  5608  0030FA                     l613:
  5609                           ;main.c: 2527: }
  5610  0030FA  0E05               	movlw	5
  5611  0030FC  CFE8 F19D          	movff	wreg,_M+35
  5612                           ;main.c: 2530: StartRTS(2);
  5613  003100  0E02               	movlw	2
  5614  003102  ECA4  F06E         	call	_StartRTS
  5615  003106                     l616:
  5616                           ;main.c: 2531: }
  5617                           ;main.c: 2534: {
  5618  003106  0101               	movlb	(_M+27) shr (0+8)
  5619  003108  A395               	btfss	(_M+27)& (0+255),1,b
  5620  00310A  D008               	goto	l617
  5621  00310C  0E15               	movlw	21
  5622  00310E  ECA6  F068         	call	_RdPrt
  5623  003112  E204               	bc	l617
  5624                           ;main.c: 2536: {
  5625  003114  0101               	movlb	(_M+43) shr (0+8)
  5626  003116  6BA5               	clrf	(_M+43)& (0+255),b
  5627                           ;main.c: 2538: M._RUSZ_CIAG=1;
  5628  003118  8F8A               	bsf	(_M+16)& (0+255),7,b
  5629                           ;main.c: 2539: return;
  5630  00311A  0012               	return	
  5631  00311C                     l617:
  5632                           ;main.c: 2540: }
  5633  00311C  0E05               	movlw	5
  5634  00311E  ECA6  F068         	call	_RdPrt
  5635  003122  B0D8               	btfsc	status,0,c
  5636  003124  B083               	btfsc	3971,0,c	;volatile
  5637  003126  D013               	goto	l618
  5638                           ;main.c: 2542: {
  5639  003128  0E02               	movlw	2
  5640  00312A  ECB6  F06E         	call	_RTS
  5641  00312E  6E00               	movwf	btemp,c
  5642  003130  0E05               	movlw	5
  5643  003132  5C00               	subwf	btemp,w,c
  5644  003134  A0D8               	btfss	status,0,c
  5645  003136  0012               	return	
  5646                           ;main.c: 2544: M.ERR_BTY=0x06;
  5647  003138  0E06               	movlw	6
  5648  00313A  CFE8 F19C          	movff	wreg,_M+34
  5649                           ;main.c: 2545: PrintErr(0x06,1);
  5650  00313E  0E01               	movlw	1
  5651  003140  0100               	movlb	__Lparam shr (0+8)
  5652  003142  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5653  003144  0E06               	movlw	6
  5654  003146  ECEC  F062         	call	_PrintErr
  5655                           ;main.c: 2546: ErrPTG();
  5656  00314A  ECA7  F01E         	call	_ErrPTG	;wreg free
  5657  00314E                     l618:
  5658                           ;main.c: 2547: }
  5659  00314E  DF29               	call	_GrzejON	;wreg free
  5660                           ;main.c: 2549: M.ROZ=6;
  5661  003150  0E06               	movlw	6
  5662  003152  CFE8 F19D          	movff	wreg,_M+35
  5663                           ;main.c: 2550: StartRTS(2);
  5664  003156  0E02               	movlw	2
  5665  003158  ECA4  F06E         	call	_StartRTS
  5666  00315C                     l620:
  5667                           ;main.c: 2551: }
  5668                           ;main.c: 2554: {
  5669  00315C  D006               	goto	l622
  5670  00315E                     l624:
  5671                           ;main.c: 2558: case 2:
  5672  00315E  D012               	goto	l621
  5673  003160                     l626:
  5674                           ;main.c: 2563: case 3:
  5675  003160  0101               	movlb	(_M+16) shr (0+8)
  5676  003162  B38A               	btfsc	(_M+16)& (0+255),1,b
  5677  003164  D00F               	goto	l621
  5678  003166                     u11030:
  5679  003166  8483               	bsf	3971,2,c	;volatile
  5680                           ;main.c: 2571: break;
  5681  003168  D00D               	goto	l621
  5682  00316A                     l622:
  5683  00316A  C08B  FFE8         	movff	_DtKNF+7,wreg
  5684  00316E  0A00               	xorlw	0
  5685  003170  E0F7               	bz	l626
  5686  003172  0A01               	xorlw	1
  5687  003174  E0F4               	bz	l624
  5688  003176  0A03               	xorlw	3
  5689  003178  E0F2               	bz	l624
  5690  00317A  0A01               	xorlw	1
  5691  00317C  E0F1               	bz	l626
  5692                           ;main.c: 2566: break;
  5693                           ;main.c: 2567: }
  5694                           ;main.c: 2569: {
  5695  00317E  0101               	movlb	(_M+16) shr (0+8)
  5696  003180  A38A               	btfss	(_M+16)& (0+255),1,b
  5697  003182  D7F1               	goto	u11030
  5698  003184                     l621:
  5699                           ;main.c: 2574: if(M._TURBO&&!RdPrt(21))
  5700  003184  0101               	movlb	(_M+27) shr (0+8)
  5701  003186  A395               	btfss	(_M+27)& (0+255),1,b
  5702  003188  D008               	goto	l630
  5703  00318A  0E15               	movlw	21
  5704  00318C  ECA6  F068         	call	_RdPrt
  5705  003190  E204               	bc	l630
  5706                           ;main.c: 2575: {
  5707  003192  0101               	movlb	(_M+43) shr (0+8)
  5708  003194  6BA5               	clrf	(_M+43)& (0+255),b
  5709                           ;main.c: 2577: M._RUSZ_CIAG=1;
  5710  003196  8F8A               	bsf	(_M+16)& (0+255),7,b
  5711                           ;main.c: 2578: return;
  5712  003198  0012               	return	
  5713  00319A                     l630:
  5714                           ;main.c: 2579: }
  5715  00319A  0E08               	movlw	8
  5716  00319C  ECA6  F068         	call	_RdPrt
  5717  0031A0  E305               	bnc	l631
  5718  0031A2  C28A  FFE8         	movff	_PWM+28,wreg
  5719  0031A6  EC36  F061         	call	_WritePWM
  5720  0031AA  D004               	goto	l632
  5721  0031AC                     l631:
  5722                           ;main.c: 2581: else WritePWM(PWM.MDMOD);
  5723  0031AC  C277  FFE8         	movff	_PWM+9,wreg
  5724  0031B0  EC36  F061         	call	_WritePWM
  5725  0031B4                     l632:
  5726                           ;main.c: 2583: if(RTS(2)<2) return;
  5727  0031B4  0E02               	movlw	2
  5728  0031B6  ECB6  F06E         	call	_RTS
  5729  0031BA  6E00               	movwf	btemp,c
  5730  0031BC  0E02               	movlw	2
  5731  0031BE  5C00               	subwf	btemp,w,c
  5732  0031C0  A0D8               	btfss	status,0,c
  5733  0031C2  0012               	return	
  5734                           ;main.c: 2585: if(RTS(2)<7)
  5735  0031C4  0E02               	movlw	2
  5736  0031C6  ECB6  F06E         	call	_RTS
  5737  0031CA  6E00               	movwf	btemp,c
  5738  0031CC  0E07               	movlw	7
  5739  0031CE  5C00               	subwf	btemp,w,c
  5740  0031D0  E20B               	bc	l634
  5741                           ;main.c: 2586: {
  5742  0031D2  0E05               	movlw	5
  5743  0031D4  ECA6  F068         	call	_RdPrt
  5744  0031D8  A0D8               	btfss	status,0,c
  5745  0031DA  0012               	return	
  5746                           ;main.c: 2588: {
  5747  0031DC  0E07               	movlw	7
  5748  0031DE  CFE8 F19D          	movff	wreg,_M+35
  5749                           ;main.c: 2590: StartRTS(2);
  5750  0031E2  0E02               	movlw	2
  5751  0031E4  EFA4  F06E         	goto	_StartRTS
  5752                           ;main.c: 2591: }
  5753  0031E8                     l634:
  5754                           ;main.c: 2594: else
  5755  0031E8  D03B               	goto	_DecyzjaPLM	;wreg free
  5756                           ;main.c: 2597: return;
  5757  0031EA                     l637:
  5758                           ;main.c: 2598: }
  5759                           ;main.c: 2602: {
  5760  0031EA  0101               	movlb	(_M+27) shr (0+8)
  5761  0031EC  AF95               	btfss	(_M+27)& (0+255),7,b
  5762  0031EE  D003               	goto	l638
  5763                           ;main.c: 2604: {
  5764  0031F0  958A               	bcf	(_M+16)& (0+255),2,b
  5765                           ;main.c: 2606: M.ROZ=0;
  5766  0031F2  6B9D               	clrf	(_M+35)& (0+255),b
  5767                           ;main.c: 2607: return;
  5768  0031F4  0012               	return	
  5769  0031F6                     l638:
  5770                           ;main.c: 2608: }
  5771  0031F6  0101               	movlb	(_M+27) shr (0+8)
  5772  0031F8  A395               	btfss	(_M+27)& (0+255),1,b
  5773  0031FA  D008               	goto	l639
  5774  0031FC  0E15               	movlw	21
  5775  0031FE  ECA6  F068         	call	_RdPrt
  5776  003202  E204               	bc	l639
  5777                           ;main.c: 2610: {
  5778  003204  0101               	movlb	(_M+43) shr (0+8)
  5779  003206  6BA5               	clrf	(_M+43)& (0+255),b
  5780                           ;main.c: 2612: M._RUSZ_CIAG=1;
  5781  003208  8F8A               	bsf	(_M+16)& (0+255),7,b
  5782                           ;main.c: 2613: return;
  5783  00320A  0012               	return	
  5784  00320C                     l639:
  5785                           ;main.c: 2614: }
  5786  00320C  0E05               	movlw	5
  5787  00320E  ECA6  F068         	call	_RdPrt
  5788  003212  A0D8               	btfss	status,0,c
  5789                           ;main.c: 2616: {
  5790  003214  D83C               	call	_DecyzjaPLM2	;wreg free
  5791                           ;main.c: 2619: }
  5792  003216  0E02               	movlw	2
  5793  003218  ECB6  F06E         	call	_RTS
  5794  00321C  6E00               	movwf	btemp,c
  5795  00321E  0E02               	movlw	2
  5796  003220  5C00               	subwf	btemp,w,c
  5797  003222  A0D8               	btfss	status,0,c
  5798  003224  0012               	return	
  5799                           ;main.c: 2621: M._ROZRUCH=0;
  5800  003226  0101               	movlb	(_M+16) shr (0+8)
  5801  003228  958A               	bcf	(_M+16)& (0+255),2,b
  5802                           ;main.c: 2622: M.ROZ=0;
  5803  00322A  6B9D               	clrf	(_M+35)& (0+255),b
  5804                           ;main.c: 2623: }
  5805  00322C  0012               	return	
  5806  00322E                     l588:
  5807  00322E  C19D  FFE8         	movff	_M+35,wreg
  5808  003232  0A00               	xorlw	0
  5809  003234  E101 D6D1          	bz	l589
  5810  003238  0A01               	xorlw	1
  5811  00323A  E101 D6DB          	bz	l592
  5812  00323E  0A03               	xorlw	3
  5813  003240  E101 D705          	bz	l597
  5814  003244  0A01               	xorlw	1
  5815  003246  E101 D727          	bz	l608
  5816  00324A  0A07               	xorlw	7
  5817  00324C  E101 D740          	bz	l612
  5818  003250  0A01               	xorlw	1
  5819  003252  E101 D758          	bz	l616
  5820  003256  0A03               	xorlw	3
  5821  003258  E081               	bz	l620
  5822  00325A  0A01               	xorlw	1
  5823  00325C  E0C6               	bz	l637
  5824  00325E  0012               	return	
  5825                           ;main.c: 2625: }
  5826  003260                     __end_of_Rozruch:
  5827                           ;main.c: 2626: void DecyzjaPLM(void)
  5828                           ;main.c: 2627: {
  5829  003260                     _DecyzjaPLM:
  5830  000000                     
  5831                           ;main.c: 2628: if(M._OST_PL)
  5832  003260  0101               	movlb	(_M+27) shr (0+8)
  5833  003262  A795               	btfss	(_M+27)& (0+255),3,b
  5834  003264  D009               	goto	l643
  5835                           ;main.c: 2629: {
  5836  003266  0E01               	movlw	1
  5837  003268  CFE8 F19C          	movff	wreg,_M+34
  5838                           ;main.c: 2631: PrintErr(0x01,1);
  5839  00326C  0100               	movlb	__Lparam shr (0+8)
  5840  00326E  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5841  003270  ECEC  F062         	call	_PrintErr
  5842                           ;main.c: 2632: ErrPTG();
  5843  003274  EFA7  F01E         	goto	_ErrPTG	;wreg free
  5844                           ;main.c: 2633: }
  5845  003278                     l643:
  5846                           ;main.c: 2634: else
  5847  003278  0101               	movlb	(_M+17) shr (0+8)
  5848  00327A  818B               	bsf	(_M+17)& (0+255),0,b
  5849                           ;main.c: 2637: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5850  00327C  EE01  F097         	lfsr	0,_M+29
  5851  003280  50EF               	movf	indf0,w,c
  5852  003282  B4D8               	btfsc	status,2,c
  5853  003284  838B               	bsf	(_M+17)& (0+255),1,b
  5854                           ;main.c: 2638: M._ROZRUCH=0;
  5855  003286  0101               	movlb	(_M+16) shr (0+8)
  5856  003288  958A               	bcf	(_M+16)& (0+255),2,b
  5857                           ;main.c: 2639: M.ROZ=0;
  5858  00328A  6B9D               	clrf	(_M+35)& (0+255),b
  5859                           ;main.c: 2640: }
  5860  00328C  0012               	return	
  5861  00328E                     __end_of_DecyzjaPLM:
  5862                           ;main.c: 2642: void DecyzjaPLM2(void)
  5863                           ;main.c: 2643: {
  5864  00328E                     _DecyzjaPLM2:
  5865  000000                     
  5866                           ;main.c: 2644: if(M._TURBO)
  5867  00328E  0101               	movlb	(_M+27) shr (0+8)
  5868  003290  A395               	btfss	(_M+27)& (0+255),1,b
  5869  003292  D03A               	goto	l647
  5870                           ;main.c: 2645: {
  5871  003294  A683               	btfss	3971,3,c	;volatile
  5872  003296  D01B               	goto	l648
  5873                           ;main.c: 2647: {
  5874  003298  BC80               	btfsc	3968,6,c	;volatile
  5875  00329A  AE80               	btfss	3968,7,c	;volatile
  5876  00329C  0012               	return	
  5877                           ;main.c: 2650: {
  5878  00329E  0101               	movlb	(_M+27) shr (0+8)
  5879  0032A0  A795               	btfss	(_M+27)& (0+255),3,b
  5880  0032A2  D009               	goto	l650
  5881                           ;main.c: 2652: {
  5882  0032A4  0E01               	movlw	1
  5883  0032A6  CFE8 F19C          	movff	wreg,_M+34
  5884                           ;main.c: 2654: PrintErr(0x01,1);
  5885  0032AA  0100               	movlb	__Lparam shr (0+8)
  5886  0032AC  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5887  0032AE  ECEC  F062         	call	_PrintErr
  5888                           ;main.c: 2655: ErrPTG();
  5889  0032B2  EFA7  F01E         	goto	_ErrPTG	;wreg free
  5890                           ;main.c: 2656: }
  5891  0032B6                     l650:
  5892                           ;main.c: 2657: else
  5893  0032B6  0101               	movlb	(_M+42) shr (0+8)
  5894  0032B8  6BA4               	clrf	(_M+42)& (0+255),b
  5895                           ;main.c: 2660: M._RUSZ_PLOMIEN=1;
  5896  0032BA  818B               	bsf	(_M+17)& (0+255),0,b
  5897                           ;main.c: 2661: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5898  0032BC  EE01  F097         	lfsr	0,_M+29
  5899  0032C0  50EF               	movf	indf0,w,c
  5900  0032C2  B4D8               	btfsc	status,2,c
  5901  0032C4  838B               	bsf	(_M+17)& (0+255),1,b
  5902                           ;main.c: 2662: M._ROZRUCH=0;
  5903  0032C6  0101               	movlb	(_M+16) shr (0+8)
  5904  0032C8  958A               	bcf	(_M+16)& (0+255),2,b
  5905                           ;main.c: 2663: M.ROZ=0;
  5906  0032CA  6B9D               	clrf	(_M+35)& (0+255),b
  5907                           ;main.c: 2664: }
  5908  0032CC  0012               	return	
  5909  0032CE                     l648:
  5910                           ;main.c: 2667: else
  5911  0032CE  0E04               	movlw	4
  5912  0032D0  ECA6  F068         	call	_RdPrt
  5913  0032D4  A0D8               	btfss	status,0,c
  5914  0032D6  0012               	return	
  5915                           ;main.c: 2670: {
  5916  0032D8  0101               	movlb	(_M+27) shr (0+8)
  5917  0032DA  A795               	btfss	(_M+27)& (0+255),3,b
  5918  0032DC  D009               	goto	l655
  5919                           ;main.c: 2672: {
  5920  0032DE  0E01               	movlw	1
  5921  0032E0  CFE8 F19C          	movff	wreg,_M+34
  5922                           ;main.c: 2674: PrintErr(0x01,1);
  5923  0032E4  0100               	movlb	__Lparam shr (0+8)
  5924  0032E6  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5925  0032E8  ECEC  F062         	call	_PrintErr
  5926                           ;main.c: 2675: ErrPTG();
  5927  0032EC  EFA7  F01E         	goto	_ErrPTG	;wreg free
  5928                           ;main.c: 2676: }
  5929  0032F0                     l655:
  5930                           ;main.c: 2677: else
  5931  0032F0  0101               	movlb	(_M+42) shr (0+8)
  5932  0032F2  6BA4               	clrf	(_M+42)& (0+255),b
  5933                           ;main.c: 2680: M._RUSZ_PLOMIEN=1;
  5934  0032F4  818B               	bsf	(_M+17)& (0+255),0,b
  5935                           ;main.c: 2681: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5936  0032F6  EE01  F097         	lfsr	0,_M+29
  5937  0032FA  50EF               	movf	indf0,w,c
  5938  0032FC  B4D8               	btfsc	status,2,c
  5939  0032FE  838B               	bsf	(_M+17)& (0+255),1,b
  5940                           ;main.c: 2682: M._ROZRUCH=0;
  5941  003300  0101               	movlb	(_M+16) shr (0+8)
  5942  003302  958A               	bcf	(_M+16)& (0+255),2,b
  5943                           ;main.c: 2683: M.ROZ=0;
  5944  003304  6B9D               	clrf	(_M+35)& (0+255),b
  5945                           ;main.c: 2684: }
  5946  003306  0012               	return	
  5947  003308                     l647:
  5948                           ;main.c: 2688: else
  5949  003308  B082               	btfsc	3970,0,c	;volatile
  5950  00330A  AE80               	btfss	3968,7,c	;volatile
  5951  00330C  0012               	return	
  5952                           ;main.c: 2692: {
  5953  00330E  0101               	movlb	(_M+27) shr (0+8)
  5954  003310  A795               	btfss	(_M+27)& (0+255),3,b
  5955  003312  D009               	goto	l660
  5956                           ;main.c: 2694: {
  5957  003314  0E01               	movlw	1
  5958  003316  CFE8 F19C          	movff	wreg,_M+34
  5959                           ;main.c: 2696: PrintErr(0x01,1);
  5960  00331A  0100               	movlb	__Lparam shr (0+8)
  5961  00331C  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5962  00331E  ECEC  F062         	call	_PrintErr
  5963                           ;main.c: 2697: ErrPTG();
  5964  003322  EFA7  F01E         	goto	_ErrPTG	;wreg free
  5965                           ;main.c: 2698: }
  5966  003326                     l660:
  5967                           ;main.c: 2699: else
  5968  003326  0101               	movlb	(_M+42) shr (0+8)
  5969  003328  6BA4               	clrf	(_M+42)& (0+255),b
  5970                           ;main.c: 2702: M._RUSZ_PLOMIEN=1;
  5971  00332A  818B               	bsf	(_M+17)& (0+255),0,b
  5972                           ;main.c: 2703: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5973  00332C  EE01  F097         	lfsr	0,_M+29
  5974  003330  50EF               	movf	indf0,w,c
  5975  003332  B4D8               	btfsc	status,2,c
  5976  003334  838B               	bsf	(_M+17)& (0+255),1,b
  5977                           ;main.c: 2704: M._ROZRUCH=0;
  5978  003336  0101               	movlb	(_M+16) shr (0+8)
  5979  003338  958A               	bcf	(_M+16)& (0+255),2,b
  5980                           ;main.c: 2705: M.ROZ=0;
  5981  00333A  6B9D               	clrf	(_M+35)& (0+255),b
  5982                           ;main.c: 2706: }
  5983  00333C  0012               	return	
  5984  00333E                     __end_of_DecyzjaPLM2:
  5985                           ;main.c: 2713: void Wylacz(void)
  5986                           ;main.c: 2714: {
  5987  00333E                     _Wylacz:
  5988  000000                     
  5989                           ;main.c: 2715: switch(DtKNF.tpkt)
  5990  00333E  D165               	goto	l665
  5991  003340                     l667:
  5992                           ;main.c: 2718: case 2:
  5993  003340  D04A               	goto	l669
  5994  003342                     l670:
  5995                           ;main.c: 2721: {
  5996                           ;main.c: 2723: {
  5997  003342  0E01               	movlw	1
  5998  003344  CFE8 F1A2          	movff	wreg,_M+40
  5999                           ;main.c: 2725: StartRTS(7);
  6000  003348  0E07               	movlw	7
  6001  00334A  ECA4  F06E         	call	_StartRTS
  6002  00334E                     l671:
  6003                           ;main.c: 2726: }
  6004                           ;main.c: 2728: {
  6005  00334E  0101               	movlb	(_M+27) shr (0+8)
  6006                           ;main.c: 2730: {
  6007  003350  0E07               	movlw	7
  6008  003352  AB95               	btfss	(_M+27)& (0+255),5,b
  6009  003354  D01C               	goto	L20
  6010  003356  ECB6  F06E         	call	_RTS
  6011  00335A  6E00               	movwf	btemp,c
  6012  00335C  0E14               	movlw	20
  6013  00335E  5C00               	subwf	btemp,w,c
  6014  003360  E30A               	bnc	l673
  6015                           ;main.c: 2732: {
  6016  003362  0102               	movlb	_DtCO shr (0+8)
  6017  003364  B10C               	btfsc	_DtCO& (0+255),0,b
  6018  003366  D007               	goto	l673
  6019  003368  0102               	movlb	(_DtCO+1) shr (0+8)
  6020  00336A  A10D               	btfss	(_DtCO+1)& (0+255),0,b
  6021  00336C  D004               	goto	l673
  6022                           ;main.c: 2734: {
  6023  00336E  0E02               	movlw	2
  6024  003370  CFE8 F1A2          	movff	wreg,_M+40
  6025                           ;main.c: 2736: return;
  6026  003374  0C02               	retlw	2
  6027  003376                     l673:
  6028                           ;main.c: 2737: }
  6029  003376  0E07               	movlw	7
  6030  003378  ECB6  F06E         	call	_RTS
  6031  00337C  6E00               	movwf	btemp,c
  6032  00337E  0EB4               	movlw	180
  6033  003380  5C00               	subwf	btemp,w,c
  6034  003382  A0D8               	btfss	status,0,c
  6035  003384  0012               	return	
  6036                           ;main.c: 2740: M.WYL=2;
  6037  003386  0E02               	movlw	2
  6038  003388  CFE8 F1A2          	movff	wreg,_M+40
  6039                           ;main.c: 2741: return;
  6040  00338C  0C02               	retlw	2
  6041                           ;main.c: 2743: else
  6042  00338E                     L20:
  6043  00338E  ECB6  F06E         	call	_RTS
  6044  003392  6E00               	movwf	btemp,c
  6045  003394  0EB4               	movlw	180
  6046  003396  5C00               	subwf	btemp,w,c
  6047  003398  A0D8               	btfss	status,0,c
  6048  00339A  0012               	return	
  6049                           ;main.c: 2746: M.WYL=2;
  6050  00339C  0E02               	movlw	2
  6051  00339E  CFE8 F1A2          	movff	wreg,_M+40
  6052  0033A2                     l678:
  6053                           ;main.c: 2747: }
  6054                           ;main.c: 2750: {
  6055  0033A2  0E0D               	movlw	13
  6056  0033A4  ECA6  F068         	call	_RdPrt
  6057  0033A8  B0D8               	btfsc	status,0,c
  6058  0033AA  0012               	return	
  6059                           ;main.c: 2752: if(!M._KCW_PMP)
  6060  0033AC  0101               	movlb	(_M+27) shr (0+8)
  6061  0033AE  BB95               	btfsc	(_M+27)& (0+255),5,b
  6062  0033B0  D006               	goto	l680
  6063                           ;main.c: 2753: {
  6064  0033B2  0102               	movlb	_DtCO shr (0+8)
  6065  0033B4  B10C               	btfsc	_DtCO& (0+255),0,b
  6066  0033B6  D003               	goto	l680
  6067  0033B8  0102               	movlb	_DtCO shr (0+8)
  6068  0033BA  A30C               	btfss	_DtCO& (0+255),1,b
  6069  0033BC  0012               	return	
  6070  0033BE                     l680:
  6071                           ;main.c: 2755: }
  6072  0033BE  EE00  F092         	lfsr	0,_DtKNF+14
  6073  0033C2  50EF               	movf	indf0,w,c
  6074  0033C4  E103               	bnz	l682
  6075                           ;main.c: 2757: {
  6076  0033C6  0101               	movlb	(_M+17) shr (0+8)
  6077  0033C8  B58B               	btfsc	(_M+17)& (0+255),2,b
  6078  0033CA  0012               	return	
  6079  0033CC                     l682:
  6080                           ;main.c: 2759: }
  6081  0033CC  0101               	movlb	(_M+27) shr (0+8)
  6082  0033CE  9B95               	bcf	(_M+27)& (0+255),5,b
  6083                           ;main.c: 2761: M._WYLACZ=0;
  6084  0033D0  918A               	bcf	(_M+16)& (0+255),0,b
  6085                           ;main.c: 2762: M.WYL=0;
  6086  0033D2  6BA2               	clrf	(_M+40)& (0+255),b
  6087                           ;main.c: 2763: }
  6088  0033D4  0012               	return	
  6089  0033D6                     l669:
  6090  0033D6  C1A2  FFE8         	movff	_M+40,wreg
  6091  0033DA  0A00               	xorlw	0
  6092  0033DC  E0B2               	bz	l670
  6093  0033DE  0A01               	xorlw	1
  6094  0033E0  E0B6               	bz	l671
  6095  0033E2  0A03               	xorlw	3
  6096  0033E4  E0DE               	bz	l678
  6097  0033E6  0012               	return	
  6098                           ;main.c: 2765: return;
  6099  0033E8                     l684:
  6100                           ;main.c: 2766: }
  6101                           ;main.c: 2768: {
  6102  0033E8  D057               	goto	l686
  6103  0033EA                     l687:
  6104                           ;main.c: 2770: {
  6105                           ;main.c: 2772: {
  6106  0033EA  0E01               	movlw	1
  6107  0033EC  CFE8 F1A2          	movff	wreg,_M+40
  6108                           ;main.c: 2774: StartRTS(7);
  6109  0033F0  0E07               	movlw	7
  6110  0033F2  ECA4  F06E         	call	_StartRTS
  6111  0033F6                     l688:
  6112                           ;main.c: 2775: }
  6113                           ;main.c: 2777: {
  6114  0033F6  0101               	movlb	(_M+27) shr (0+8)
  6115                           ;main.c: 2779: {
  6116  0033F8  0E07               	movlw	7
  6117  0033FA  AF95               	btfss	(_M+27)& (0+255),7,b
  6118  0033FC  D01C               	goto	L21
  6119  0033FE  ECB6  F06E         	call	_RTS
  6120  003402  6E00               	movwf	btemp,c
  6121  003404  0E14               	movlw	20
  6122  003406  5C00               	subwf	btemp,w,c
  6123  003408  E30A               	bnc	l690
  6124                           ;main.c: 2781: {
  6125  00340A  0102               	movlb	_DtCO shr (0+8)
  6126  00340C  B10C               	btfsc	_DtCO& (0+255),0,b
  6127  00340E  D007               	goto	l690
  6128  003410  0102               	movlb	(_DtCO+1) shr (0+8)
  6129  003412  A10D               	btfss	(_DtCO+1)& (0+255),0,b
  6130  003414  D004               	goto	l690
  6131                           ;main.c: 2783: {
  6132  003416  0E02               	movlw	2
  6133  003418  CFE8 F1A2          	movff	wreg,_M+40
  6134                           ;main.c: 2785: return;
  6135  00341C  0C02               	retlw	2
  6136  00341E                     l690:
  6137                           ;main.c: 2786: }
  6138  00341E  0E07               	movlw	7
  6139  003420  ECB6  F06E         	call	_RTS
  6140  003424  6E00               	movwf	btemp,c
  6141  003426  0EB4               	movlw	180
  6142  003428  5C00               	subwf	btemp,w,c
  6143  00342A  A0D8               	btfss	status,0,c
  6144  00342C  0012               	return	
  6145                           ;main.c: 2789: M.WYL=2;
  6146  00342E  0E02               	movlw	2
  6147  003430  CFE8 F1A2          	movff	wreg,_M+40
  6148                           ;main.c: 2790: return;
  6149  003434  0C02               	retlw	2
  6150                           ;main.c: 2792: else
  6151  003436                     L21:
  6152  003436  ECB6  F06E         	call	_RTS
  6153  00343A  6E00               	movwf	btemp,c
  6154  00343C  0EB4               	movlw	180
  6155  00343E  5C00               	subwf	btemp,w,c
  6156  003440  A0D8               	btfss	status,0,c
  6157  003442  0012               	return	
  6158                           ;main.c: 2795: M.WYL=2;
  6159  003444  0E02               	movlw	2
  6160  003446  CFE8 F1A2          	movff	wreg,_M+40
  6161  00344A                     l695:
  6162                           ;main.c: 2796: }
  6163                           ;main.c: 2799: {
  6164  00344A  0101               	movlb	(_M+27) shr (0+8)
  6165  00344C  BF95               	btfsc	(_M+27)& (0+255),7,b
  6166  00344E  D00C               	goto	l696
  6167                           ;main.c: 2801: {
  6168  003450  0E0D               	movlw	13
  6169  003452  ECA6  F068         	call	_RdPrt
  6170  003456  B0D8               	btfsc	status,0,c
  6171  003458  0012               	return	
  6172                           ;main.c: 2803: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  6173  00345A  0102               	movlb	_DtCO shr (0+8)
  6174  00345C  B10C               	btfsc	_DtCO& (0+255),0,b
  6175  00345E  D00F               	goto	l699
  6176  003460  0102               	movlb	_DtCO shr (0+8)
  6177  003462  A30C               	btfss	_DtCO& (0+255),1,b
  6178  003464  0012               	return	
  6179  003466  D00B               	goto	l699
  6180                           ;main.c: 2804: }
  6181  003468                     l696:
  6182                           ;main.c: 2805: else
  6183  003468  0102               	movlb	_DtCO shr (0+8)
  6184  00346A  B10C               	btfsc	_DtCO& (0+255),0,b
  6185  00346C  D008               	goto	l699
  6186  00346E  0102               	movlb	(_DtCO+1) shr (0+8)
  6187  003470  B10D               	btfsc	(_DtCO+1)& (0+255),0,b
  6188  003472  D005               	goto	l699
  6189  003474  0101               	movlb	(_M+8) shr (0+8)
  6190  003476  5182               	movf	(_M+8)& (0+255),w,b
  6191  003478  1183               	iorwf	(_M+9)& (0+255),w,b
  6192  00347A  A4D8               	btfss	status,2,c
  6193  00347C  0012               	return	
  6194  00347E                     l699:
  6195                           ;main.c: 2808: }
  6196  00347E  EE00  F092         	lfsr	0,_DtKNF+14
  6197  003482  50EF               	movf	indf0,w,c
  6198  003484  E103               	bnz	l701
  6199                           ;main.c: 2810: {
  6200  003486  0101               	movlb	(_M+17) shr (0+8)
  6201  003488  B58B               	btfsc	(_M+17)& (0+255),2,b
  6202  00348A  0012               	return	
  6203  00348C                     l701:
  6204                           ;main.c: 2812: }
  6205  00348C  0101               	movlb	(_M+16) shr (0+8)
  6206  00348E  A38A               	btfss	(_M+16)& (0+255),1,b
  6207  003490  9483               	bcf	3971,2,c	;volatile
  6208                           ;main.c: 2814: M._WYLACZ=0;
  6209  003492  918A               	bcf	(_M+16)& (0+255),0,b
  6210                           ;main.c: 2815: M.WYL=0;
  6211  003494  6BA2               	clrf	(_M+40)& (0+255),b
  6212                           ;main.c: 2816: }
  6213  003496  0012               	return	
  6214  003498                     l686:
  6215  003498  C1A2  FFE8         	movff	_M+40,wreg
  6216  00349C  0A00               	xorlw	0
  6217  00349E  E0A5               	bz	l687
  6218  0034A0  0A01               	xorlw	1
  6219  0034A2  E0A9               	bz	l688
  6220  0034A4  0A03               	xorlw	3
  6221  0034A6  E0D1               	bz	l695
  6222  0034A8  0012               	return	
  6223                           ;main.c: 2818: return;
  6224  0034AA                     l704:
  6225                           ;main.c: 2819: }
  6226                           ;main.c: 2821: {
  6227  0034AA  D046               	goto	l706
  6228  0034AC                     l707:
  6229                           ;main.c: 2823: {
  6230                           ;main.c: 2825: {
  6231  0034AC  0E01               	movlw	1
  6232  0034AE  CFE8 F1A2          	movff	wreg,_M+40
  6233                           ;main.c: 2827: StartRTS(7);
  6234  0034B2  0E07               	movlw	7
  6235  0034B4  ECA4  F06E         	call	_StartRTS
  6236  0034B8                     l708:
  6237                           ;main.c: 2828: }
  6238                           ;main.c: 2830: {
  6239  0034B8  0101               	movlb	(_M+27) shr (0+8)
  6240                           ;main.c: 2832: {
  6241  0034BA  0E07               	movlw	7
  6242  0034BC  AF95               	btfss	(_M+27)& (0+255),7,b
  6243  0034BE  D011               	goto	L22
  6244  0034C0  ECB6  F06E         	call	_RTS
  6245  0034C4  6E00               	movwf	btemp,c
  6246  0034C6  0E3C               	movlw	60
  6247  0034C8  5C00               	subwf	btemp,w,c
  6248  0034CA  A0D8               	btfss	status,0,c
  6249  0034CC  0012               	return	
  6250                           ;main.c: 2834: if(!DtCO._err_CO)
  6251  0034CE  0102               	movlb	_DtCO shr (0+8)
  6252  0034D0  B10C               	btfsc	_DtCO& (0+255),0,b
  6253  0034D2  D00E               	goto	L8
  6254                           ;main.c: 2835: {
  6255  0034D4  0102               	movlb	(_DtCO+1) shr (0+8)
  6256  0034D6  A10D               	btfss	(_DtCO+1)& (0+255),0,b
  6257  0034D8  0012               	return	
  6258                           ;main.c: 2837: {
  6259  0034DA  0E02               	movlw	2
  6260  0034DC  CFE8 F1A2          	movff	wreg,_M+40
  6261                           ;main.c: 2839: }
  6262  0034E0  0C02               	retlw	2
  6263                           ;main.c: 2842: else
  6264                           ;main.c: 2845: }
  6265                           ;main.c: 2847: else
  6266  0034E2                     L22:
  6267  0034E2  ECB6  F06E         	call	_RTS
  6268  0034E6  6E00               	movwf	btemp,c
  6269  0034E8  0EB4               	movlw	180
  6270  0034EA  5C00               	subwf	btemp,w,c
  6271  0034EC  A0D8               	btfss	status,0,c
  6272  0034EE  0012               	return	
  6273  0034F0                     L8:
  6274                           ;main.c: 2850: M.WYL=2;
  6275  0034F0  0E02               	movlw	2
  6276  0034F2  CFE8 F1A2          	movff	wreg,_M+40
  6277  0034F6                     l716:
  6278                           ;main.c: 2851: }
  6279                           ;main.c: 2854: {
  6280  0034F6  0101               	movlb	(_M+27) shr (0+8)
  6281  0034F8  AF95               	btfss	(_M+27)& (0+255),7,b
  6282  0034FA  D006               	goto	l717
  6283                           ;main.c: 2856: {
  6284  0034FC  0E11               	movlw	17
  6285  0034FE  ECA6  F068         	call	_RdPrt
  6286  003502  B0D8               	btfsc	status,0,c
  6287  003504  0012               	return	
  6288  003506  D00B               	goto	l719
  6289                           ;main.c: 2858: }
  6290  003508                     l717:
  6291                           ;main.c: 2859: else
  6292  003508  0E0D               	movlw	13
  6293  00350A  ECA6  F068         	call	_RdPrt
  6294  00350E  B0D8               	btfsc	status,0,c
  6295  003510  0012               	return	
  6296                           ;main.c: 2862: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  6297  003512  0102               	movlb	_DtCO shr (0+8)
  6298  003514  B10C               	btfsc	_DtCO& (0+255),0,b
  6299  003516  D003               	goto	l719
  6300  003518  0102               	movlb	_DtCO shr (0+8)
  6301  00351A  A30C               	btfss	_DtCO& (0+255),1,b
  6302  00351C  0012               	return	
  6303  00351E                     l719:
  6304                           ;main.c: 2863: }
  6305  00351E  EE00  F092         	lfsr	0,_DtKNF+14
  6306  003522  50EF               	movf	indf0,w,c
  6307  003524  E103               	bnz	l722
  6308                           ;main.c: 2865: {
  6309  003526  0101               	movlb	(_M+17) shr (0+8)
  6310  003528  B58B               	btfsc	(_M+17)& (0+255),2,b
  6311  00352A  0012               	return	
  6312  00352C                     l722:
  6313                           ;main.c: 2867: }
  6314  00352C  0101               	movlb	(_M+16) shr (0+8)
  6315  00352E  A38A               	btfss	(_M+16)& (0+255),1,b
  6316                           ;main.c: 2869: {
  6317  003530  9483               	bcf	3971,2,c	;volatile
  6318                           ;main.c: 2871: }
  6319  003532  918A               	bcf	(_M+16)& (0+255),0,b
  6320                           ;main.c: 2873: M.WYL=0;
  6321  003534  6BA2               	clrf	(_M+40)& (0+255),b
  6322                           ;main.c: 2874: }
  6323  003536  0012               	return	
  6324  003538                     l706:
  6325  003538  C1A2  FFE8         	movff	_M+40,wreg
  6326  00353C  0A00               	xorlw	0
  6327  00353E  E0B6               	bz	l707
  6328  003540  0A01               	xorlw	1
  6329  003542  E0BA               	bz	l708
  6330  003544  0A03               	xorlw	3
  6331  003546  E0D7               	bz	l716
  6332  003548  0012               	return	
  6333                           ;main.c: 2876: return;
  6334                           ;main.c: 2877: }
  6335                           ;main.c: 2879: {
  6336  00354A                     l728:
  6337                           ;main.c: 2881: {
  6338                           ;main.c: 2883: {
  6339  00354A  0E01               	movlw	1
  6340  00354C  CFE8 F1A2          	movff	wreg,_M+40
  6341                           ;main.c: 2885: StartRTS(7);
  6342  003550  0E07               	movlw	7
  6343  003552  ECA4  F06E         	call	_StartRTS
  6344  003556                     l729:
  6345                           ;main.c: 2886: }
  6346                           ;main.c: 2888: {
  6347  003556  0101               	movlb	(_M+27) shr (0+8)
  6348                           ;main.c: 2890: {
  6349  003558  0E07               	movlw	7
  6350  00355A  AF95               	btfss	(_M+27)& (0+255),7,b
  6351  00355C  D01C               	goto	L23
  6352  00355E  ECB6  F06E         	call	_RTS
  6353  003562  6E00               	movwf	btemp,c
  6354  003564  0E14               	movlw	20
  6355  003566  5C00               	subwf	btemp,w,c
  6356  003568  E30A               	bnc	l731
  6357                           ;main.c: 2892: {
  6358  00356A  0102               	movlb	_DtCO shr (0+8)
  6359  00356C  B10C               	btfsc	_DtCO& (0+255),0,b
  6360  00356E  D007               	goto	l731
  6361  003570  0102               	movlb	(_DtCO+1) shr (0+8)
  6362  003572  A10D               	btfss	(_DtCO+1)& (0+255),0,b
  6363  003574  D004               	goto	l731
  6364                           ;main.c: 2894: {
  6365  003576  0E02               	movlw	2
  6366  003578  CFE8 F1A2          	movff	wreg,_M+40
  6367                           ;main.c: 2896: return;
  6368  00357C  0C02               	retlw	2
  6369  00357E                     l731:
  6370                           ;main.c: 2897: }
  6371  00357E  0E07               	movlw	7
  6372  003580  ECB6  F06E         	call	_RTS
  6373  003584  6E00               	movwf	btemp,c
  6374  003586  0EB4               	movlw	180
  6375  003588  5C00               	subwf	btemp,w,c
  6376  00358A  A0D8               	btfss	status,0,c
  6377  00358C  0012               	return	
  6378                           ;main.c: 2900: M.WYL=2;
  6379  00358E  0E02               	movlw	2
  6380  003590  CFE8 F1A2          	movff	wreg,_M+40
  6381                           ;main.c: 2901: return;
  6382  003594  0C02               	retlw	2
  6383                           ;main.c: 2903: else
  6384  003596                     L23:
  6385  003596  ECB6  F06E         	call	_RTS
  6386  00359A  6E00               	movwf	btemp,c
  6387  00359C  0EB4               	movlw	180
  6388  00359E  5C00               	subwf	btemp,w,c
  6389  0035A0  A0D8               	btfss	status,0,c
  6390  0035A2  0012               	return	
  6391                           ;main.c: 2906: M.WYL=2;
  6392  0035A4  0E02               	movlw	2
  6393  0035A6  CFE8 F1A2          	movff	wreg,_M+40
  6394  0035AA                     l736:
  6395                           ;main.c: 2907: }
  6396                           ;main.c: 2910: {
  6397  0035AA  0101               	movlb	(_M+27) shr (0+8)
  6398  0035AC  BF95               	btfsc	(_M+27)& (0+255),7,b
  6399  0035AE  D00C               	goto	l737
  6400                           ;main.c: 2912: {
  6401  0035B0  0E0D               	movlw	13
  6402  0035B2  ECA6  F068         	call	_RdPrt
  6403  0035B6  B0D8               	btfsc	status,0,c
  6404  0035B8  0012               	return	
  6405                           ;main.c: 2914: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  6406  0035BA  0102               	movlb	_DtCO shr (0+8)
  6407  0035BC  B10C               	btfsc	_DtCO& (0+255),0,b
  6408  0035BE  D00F               	goto	l740
  6409  0035C0  0102               	movlb	_DtCO shr (0+8)
  6410  0035C2  A30C               	btfss	_DtCO& (0+255),1,b
  6411  0035C4  0012               	return	
  6412  0035C6  D00B               	goto	l740
  6413                           ;main.c: 2915: }
  6414  0035C8                     l737:
  6415                           ;main.c: 2916: else
  6416  0035C8  0102               	movlb	_DtCO shr (0+8)
  6417  0035CA  B10C               	btfsc	_DtCO& (0+255),0,b
  6418  0035CC  D008               	goto	l740
  6419  0035CE  0102               	movlb	(_DtCO+1) shr (0+8)
  6420  0035D0  B10D               	btfsc	(_DtCO+1)& (0+255),0,b
  6421  0035D2  D005               	goto	l740
  6422  0035D4  0101               	movlb	(_M+8) shr (0+8)
  6423  0035D6  5182               	movf	(_M+8)& (0+255),w,b
  6424  0035D8  1183               	iorwf	(_M+9)& (0+255),w,b
  6425  0035DA  A4D8               	btfss	status,2,c
  6426  0035DC  0012               	return	
  6427  0035DE                     l740:
  6428                           ;main.c: 2919: }
  6429  0035DE  EE00  F092         	lfsr	0,_DtKNF+14
  6430  0035E2  50EF               	movf	indf0,w,c
  6431  0035E4  E103               	bnz	l742
  6432                           ;main.c: 2921: {
  6433  0035E6  0101               	movlb	(_M+17) shr (0+8)
  6434  0035E8  B58B               	btfsc	(_M+17)& (0+255),2,b
  6435  0035EA  0012               	return	
  6436  0035EC                     l742:
  6437                           ;main.c: 2923: }
  6438  0035EC  0101               	movlb	(_M+16) shr (0+8)
  6439  0035EE  A38A               	btfss	(_M+16)& (0+255),1,b
  6440  0035F0  9483               	bcf	3971,2,c	;volatile
  6441                           ;main.c: 2925: M._WYLACZ=0;
  6442  0035F2  918A               	bcf	(_M+16)& (0+255),0,b
  6443                           ;main.c: 2926: M.WYL=0;
  6444  0035F4  6BA2               	clrf	(_M+40)& (0+255),b
  6445                           ;main.c: 2927: }
  6446  0035F6  0012               	return	
  6447  0035F8                     l727:
  6448  0035F8  C1A2  FFE8         	movff	_M+40,wreg
  6449  0035FC  0A00               	xorlw	0
  6450  0035FE  E0A5               	bz	l728
  6451  003600  0A01               	xorlw	1
  6452  003602  E0A9               	bz	l729
  6453  003604  0A03               	xorlw	3
  6454  003606  E0D1               	bz	l736
  6455  003608  0012               	return	
  6456                           ;main.c: 2929: return;
  6457  00360A                     l665:
  6458  00360A  C08B  FFE8         	movff	_DtKNF+7,wreg
  6459  00360E  0A00               	xorlw	0
  6460  003610  E101 D74B          	bz	l704
  6461  003614  0A01               	xorlw	1
  6462  003616  E101 D693          	bz	l667
  6463  00361A  0A03               	xorlw	3
  6464  00361C  E101 D690          	bz	l667
  6465  003620  0A01               	xorlw	1
  6466  003622  E101 D6E1          	bz	l684
  6467  003626  D7E8               	goto	l727
  6468                           ;main.c: 2932: }
  6469  003628                     __end_of_Wylacz:
  6470                           ;main.c: 2936: void VWybieg(void)
  6471                           ;main.c: 2937: {
  6472  003628                     _VWybieg:
  6473  000000                     
  6474                           ;main.c: 2938: switch(M.VWB)
  6475  003628  D02C               	goto	l747
  6476  00362A                     l748:
  6477                           ;main.c: 2939: {
  6478                           ;main.c: 2941: {
  6479  00362A  0E01               	movlw	1
  6480  00362C  CFE8 F1A8          	movff	wreg,_M+46
  6481                           ;main.c: 2943: M._DE_VNT=1;
  6482  003630  0101               	movlb	(_M+27) shr (0+8)
  6483  003632  8D95               	bsf	(_M+27)& (0+255),6,b
  6484                           ;main.c: 2944: StartRTS(6);
  6485  003634  0E06               	movlw	6
  6486  003636  ECA4  F06E         	call	_StartRTS
  6487  00363A                     l749:
  6488                           ;main.c: 2945: }
  6489                           ;main.c: 2947: {
  6490  00363A  0E06               	movlw	6
  6491  00363C  ECB6  F06E         	call	_RTS
  6492  003640  6E00               	movwf	btemp,c
  6493  003642  0E02               	movlw	2
  6494  003644  5C00               	subwf	btemp,w,c
  6495  003646  E302               	bnc	l750
  6496  003648  0101               	movlb	(_M+27) shr (0+8)
  6497  00364A  9D95               	bcf	(_M+27)& (0+255),6,b
  6498  00364C                     l750:
  6499                           ;main.c: 2949: if(RTS(6)<15) return;
  6500  00364C  0E06               	movlw	6
  6501  00364E  ECB6  F06E         	call	_RTS
  6502  003652  6E00               	movwf	btemp,c
  6503  003654  0E0F               	movlw	15
  6504  003656  5C00               	subwf	btemp,w,c
  6505  003658  A0D8               	btfss	status,0,c
  6506  00365A  0012               	return	
  6507                           ;main.c: 2951: RD3=0;
  6508  00365C  9683               	bcf	3971,3,c	;volatile
  6509                           ;main.c: 2952: M._DE_VNT=1;
  6510  00365E  0101               	movlb	(_M+27) shr (0+8)
  6511  003660  8D95               	bsf	(_M+27)& (0+255),6,b
  6512                           ;main.c: 2953: M.VWB=2;
  6513  003662  0E02               	movlw	2
  6514  003664  CFE8 F1A8          	movff	wreg,_M+46
  6515  003668                     l752:
  6516                           ;main.c: 2954: }
  6517                           ;main.c: 2956: {
  6518  003668  0E06               	movlw	6
  6519  00366A  ECB6  F06E         	call	_RTS
  6520  00366E  6E00               	movwf	btemp,c
  6521  003670  0E11               	movlw	17
  6522  003672  5C00               	subwf	btemp,w,c
  6523  003674  A0D8               	btfss	status,0,c
  6524  003676  0012               	return	
  6525                           ;main.c: 2958: M._DE_VNT=0;
  6526  003678  0101               	movlb	(_M+27) shr (0+8)
  6527  00367A  9D95               	bcf	(_M+27)& (0+255),6,b
  6528                           ;main.c: 2959: M._VWYBIEG=0;
  6529  00367C  9D8A               	bcf	(_M+16)& (0+255),6,b
  6530                           ;main.c: 2960: M.VWB=0;
  6531  00367E  6BA8               	clrf	(_M+46)& (0+255),b
  6532                           ;main.c: 2961: }
  6533  003680  0012               	return	
  6534  003682                     l747:
  6535  003682  C1A8  FFE8         	movff	_M+46,wreg
  6536  003686  0A00               	xorlw	0
  6537  003688  E0D0               	bz	l748
  6538  00368A  0A01               	xorlw	1
  6539  00368C  E0D6               	bz	l749
  6540  00368E  0A03               	xorlw	3
  6541  003690  E0EB               	bz	l752
  6542  003692  0012               	return	
  6543                           ;main.c: 2963: }
  6544  003694                     __end_of_VWybieg:
  6545                           ;main.c: 2967: void DetekcjaPrzeplywuWG(void)
  6546                           ;main.c: 2968: {
  6547  003694                     _DetekcjaPrzeplywuWG:
  6548  000000                     
  6549                           ;main.c: 2969: unsigned char pmp,prz;
  6550  003694  0E00               	movlw	0
  6551  003696  B483               	btfsc	3971,2,c	;volatile
  6552  003698  0E01               	movlw	1
  6553  00369A  0100               	movlb	__Lparam shr (0+8)
  6554  00369C  6FD7               	movwf	?a_DetekcjaPrzeplywuWG^(__Lparam& (0+6528
      +                          0)),b
  6555                           ;main.c: 2972: prz=(RdPrt(1))?1:0;
  6556  00369E  0E01               	movlw	1
  6557  0036A0  ECA6  F068         	call	_RdPrt
  6558  0036A4  0E00               	movlw	0
  6559  0036A6  B0D8               	btfsc	status,0,c
  6560  0036A8  0E01               	movlw	1
  6561  0036AA  0100               	movlb	__Lparam shr (0+8)
  6562  0036AC  6FD8               	movwf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+
      +                          65280)),b
  6563                           ;main.c: 2974: if(pmp)
  6564  0036AE  51D7               	movf	?a_DetekcjaPrzeplywuWG^(__Lparam& (0+65280
      +                          )),w
  6565  0036B0  E031               	bz	l755
  6566                           ;main.c: 2975: {
  6567  0036B2  51D8               	movf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+6
      +                          5280)),w
  6568  0036B4  E106               	bnz	l756
  6569  0036B6  0101               	movlb	(_M+28) shr (0+8)
  6570  0036B8  B596               	btfsc	(_M+28)& (0+255),2,b
  6571  0036BA  D003               	goto	l756
  6572                           ;main.c: 2977: {
  6573  0036BC  0101               	movlb	(_M+28) shr (0+8)
  6574  0036BE  8596               	bsf	(_M+28)& (0+255),2,b
  6575                           ;main.c: 2979: M.DPR=0;
  6576  0036C0  6BAC               	clrf	(_M+50)& (0+255),b
  6577  0036C2                     l756:
  6578                           ;main.c: 2980: }
  6579  0036C2  0101               	movlb	(_M+28) shr (0+8)
  6580  0036C4  A596               	btfss	(_M+28)& (0+255),2,b
  6581  0036C6  0012               	return	
  6582  0036C8  D01E               	goto	l759
  6583                           ;main.c: 2982: {
  6584  0036CA                     l760:
  6585                           ;main.c: 2984: {
  6586                           ;main.c: 2986: {
  6587  0036CA  0E0C               	movlw	12
  6588  0036CC  ECA4  F06E         	call	_StartRTS
  6589                           ;main.c: 2988: M.DPR=1;
  6590  0036D0  0E01               	movlw	1
  6591  0036D2  CFE8 F1AC          	movff	wreg,_M+50
  6592  0036D6                     l761:
  6593                           ;main.c: 2989: }
  6594                           ;main.c: 2991: {
  6595  0036D6  0100               	movlb	__Lparam shr (0+8)
  6596  0036D8  51D8               	movf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+6
      +                          5280)),w
  6597  0036DA  E004               	bz	l762
  6598                           ;main.c: 2993: {
  6599  0036DC  0101               	movlb	(_M+28) shr (0+8)
  6600  0036DE  9596               	bcf	(_M+28)& (0+255),2,b
  6601                           ;main.c: 2995: M.DPR=0;
  6602  0036E0  6BAC               	clrf	(_M+50)& (0+255),b
  6603                           ;main.c: 2996: return;
  6604  0036E2  0012               	return	
  6605  0036E4                     l762:
  6606                           ;main.c: 2997: }
  6607  0036E4  0E0C               	movlw	12
  6608  0036E6  ECB6  F06E         	call	_RTS
  6609  0036EA  6E00               	movwf	btemp,c
  6610  0036EC  0E03               	movlw	3
  6611  0036EE  5C00               	subwf	btemp,w,c
  6612  0036F0  A0D8               	btfss	status,0,c
  6613  0036F2  0012               	return	
  6614                           ;main.c: 2999: if(!M._RUSZ_POMPE)
  6615  0036F4  0101               	movlb	(_M+17) shr (0+8)
  6616  0036F6  B58B               	btfsc	(_M+17)& (0+255),2,b
  6617  0036F8  D002               	goto	l764
  6618                           ;main.c: 3000: {
  6619  0036FA  6BA3               	clrf	(_M+41)& (0+255),b
  6620                           ;main.c: 3002: M._RUSZ_POMPE=1;
  6621  0036FC  858B               	bsf	(_M+17)& (0+255),2,b
  6622  0036FE                     l764:
  6623                           ;main.c: 3003: }
  6624  0036FE  0101               	movlb	(_M+28) shr (0+8)
  6625  003700  9596               	bcf	(_M+28)& (0+255),2,b
  6626                           ;main.c: 3005: M.DPR=0;
  6627  003702  6BAC               	clrf	(_M+50)& (0+255),b
  6628                           ;main.c: 3006: }
  6629  003704  0012               	return	
  6630  003706                     l759:
  6631  003706  C1AC  FFE8         	movff	_M+50,wreg
  6632  00370A  0A00               	xorlw	0
  6633  00370C  E0DE               	bz	l760
  6634  00370E  0A01               	xorlw	1
  6635  003710  E0E2               	bz	l761
  6636  003712  0012               	return	
  6637                           ;main.c: 3008: }
  6638  003714                     l755:
  6639                           ;main.c: 3010: else
  6640  003714  0101               	movlb	(_M+28) shr (0+8)
  6641  003716  9596               	bcf	(_M+28)& (0+255),2,b
  6642                           ;main.c: 3013: M.DPR=0;
  6643  003718  6BAC               	clrf	(_M+50)& (0+255),b
  6644                           ;main.c: 3014: }
  6645  00371A  0012               	return	
  6646  00371C                     __end_of_DetekcjaPrzeplywuWG:
  6647                           ;main.c: 3019: void OczekujNaPrzeplywWG(void)
  6648                           ;main.c: 3020: {
  6649  00371C                     _OczekujNaPrzeplywWG:
  6650  000000                     
  6651                           ;main.c: 3021: unsigned char pmp,prz;
  6652  00371C  0E00               	movlw	0
  6653  00371E  B483               	btfsc	3971,2,c	;volatile
  6654  003720  0E01               	movlw	1
  6655  003722  0100               	movlb	__Lparam shr (0+8)
  6656  003724  6FD7               	movwf	?a_OczekujNaPrzeplywWG^(__Lparam& (0+6528
      +                          0)),b
  6657                           ;main.c: 3024: prz=(RdPrt(1))?1:0;
  6658  003726  0E01               	movlw	1
  6659  003728  ECA6  F068         	call	_RdPrt
  6660  00372C  0E00               	movlw	0
  6661  00372E  B0D8               	btfsc	status,0,c
  6662  003730  0E01               	movlw	1
  6663  003732  0100               	movlb	__Lparam shr (0+8)
  6664  003734  6FD8               	movwf	(?a_OczekujNaPrzeplywWG+1)^(__Lparam& (0+
      +                          65280)),b
  6665                           ;main.c: 3026: switch(M.RPR)
  6666  003736  D026               	goto	l768
  6667  003738                     l769:
  6668                           ;main.c: 3027: {
  6669                           ;main.c: 3029: {
  6670  003738  0E01               	movlw	1
  6671  00373A  CFE8 F1A3          	movff	wreg,_M+41
  6672                           ;main.c: 3031: M._prb_PRZ=1;
  6673  00373E  0101               	movlb	(_M+28) shr (0+8)
  6674  003740  8396               	bsf	(_M+28)& (0+255),1,b
  6675                           ;main.c: 3032: StartRTS(13);
  6676  003742  0E0D               	movlw	13
  6677  003744  ECA4  F06E         	call	_StartRTS
  6678  003748                     l770:
  6679                           ;main.c: 3033: }
  6680                           ;main.c: 3035: {
  6681  003748  0100               	movlb	__Lparam shr (0+8)
  6682  00374A  51D8               	movf	(?a_OczekujNaPrzeplywWG+1)^(__Lparam& (0+6
      +                          5280)),w
  6683  00374C  E007               	bz	l771
  6684  00374E  51D7               	movf	?a_OczekujNaPrzeplywWG^(__Lparam& (0+65280
      +                          )),w
  6685  003750  E005               	bz	l771
  6686                           ;main.c: 3037: {
  6687  003752  0101               	movlb	(_M+41) shr (0+8)
  6688  003754  6BA3               	clrf	(_M+41)& (0+255),b
  6689                           ;main.c: 3039: M._RUSZ_POMPE=0;
  6690  003756  958B               	bcf	(_M+17)& (0+255),2,b
  6691                           ;main.c: 3040: M._prb_PRZ=0;
  6692  003758  9396               	bcf	(_M+28)& (0+255),1,b
  6693                           ;main.c: 3041: return;
  6694  00375A  0012               	return	
  6695  00375C                     l771:
  6696                           ;main.c: 3042: }
  6697  00375C  0E0D               	movlw	13
  6698  00375E  ECB6  F06E         	call	_RTS
  6699  003762  6E00               	movwf	btemp,c
  6700  003764  0EF0               	movlw	240
  6701  003766  5C00               	subwf	btemp,w,c
  6702  003768  A0D8               	btfss	status,0,c
  6703  00376A  0012               	return	
  6704                           ;main.c: 3044: M._RUSZ_POMPE=0;
  6705  00376C  0101               	movlb	(_M+17) shr (0+8)
  6706  00376E  958B               	bcf	(_M+17)& (0+255),2,b
  6707                           ;main.c: 3045: M.ERR_BTY=0x05;
  6708  003770  0E05               	movlw	5
  6709  003772  CFE8 F19C          	movff	wreg,_M+34
  6710                           ;main.c: 3046: PrintErr(0x05,1);
  6711  003776  0E01               	movlw	1
  6712  003778  0100               	movlb	__Lparam shr (0+8)
  6713  00377A  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  6714  00377C  0E05               	movlw	5
  6715  00377E  ECEC  F062         	call	_PrintErr
  6716                           ;main.c: 3047: ErrPTG();
  6717  003782  D2E5               	goto	_ErrPTG	;wreg free
  6718                           ;main.c: 3048: }
  6719  003784                     l768:
  6720  003784  C1A3  FFE8         	movff	_M+41,wreg
  6721  003788  0A00               	xorlw	0
  6722  00378A  E0D6               	bz	l769
  6723  00378C  0A01               	xorlw	1
  6724  00378E  E0DC               	bz	l770
  6725  003790  0012               	return	
  6726                           ;main.c: 3050: }
  6727  003792                     __end_of_OczekujNaPrzeplywWG:
  6728                           ;main.c: 3054: void ZmienKCOKCW(void)
  6729                           ;main.c: 3055: {
  6730  003792                     _ZmienKCOKCW:
  6731  000000                     
  6732                           ;main.c: 3056: switch(DtKNF.tpkt)
  6733  003792  D083               	goto	l775
  6734  003794                     l777:
  6735                           ;main.c: 3059: case 2:
  6736  003794  D012               	goto	l779
  6737  003796                     l780:
  6738                           ;main.c: 3062: {
  6739                           ;main.c: 3064: {
  6740  003796  7483               	btg	3971,2,c	;volatile
  6741                           ;main.c: 3066: M.ZKP=1;
  6742  003798  0E01               	movlw	1
  6743  00379A  CFE8 F1A7          	movff	wreg,_M+45
  6744                           ;main.c: 3067: StartRTdS(1);
  6745  00379E  EC86  F06E         	call	_StartRTdS
  6746  0037A2                     l781:
  6747                           ;main.c: 3068: }
  6748                           ;main.c: 3070: {
  6749  0037A2  0E01               	movlw	1
  6750  0037A4  EC98  F06E         	call	_RTdS
  6751  0037A8  6E00               	movwf	btemp,c
  6752  0037AA  0E05               	movlw	5
  6753  0037AC  5C00               	subwf	btemp,w,c
  6754  0037AE  A0D8               	btfss	status,0,c
  6755  0037B0  0012               	return	
  6756                           ;main.c: 3072: M._ZMKCOCW=0;
  6757  0037B2  0101               	movlb	(_M+16) shr (0+8)
  6758  0037B4  938A               	bcf	(_M+16)& (0+255),1,b
  6759                           ;main.c: 3073: M.ZKP=0;
  6760  0037B6  6BA7               	clrf	(_M+45)& (0+255),b
  6761                           ;main.c: 3074: }
  6762  0037B8  0012               	return	
  6763  0037BA                     l779:
  6764  0037BA  C1A7  FFE8         	movff	_M+45,wreg
  6765  0037BE  0A00               	xorlw	0
  6766  0037C0  E0EA               	bz	l780
  6767  0037C2  0A01               	xorlw	1
  6768  0037C4  E0EE               	bz	l781
  6769  0037C6  0012               	return	
  6770                           ;main.c: 3076: return;
  6771  0037C8                     l784:
  6772                           ;main.c: 3079: case 3:
  6773  0037C8  D02B               	goto	l786
  6774  0037CA                     l787:
  6775                           ;main.c: 3082: {
  6776                           ;main.c: 3084: {
  6777  0037CA  0E01               	movlw	1
  6778  0037CC  CFE8 F1A7          	movff	wreg,_M+45
  6779                           ;main.c: 3086: RD2=0;
  6780  0037D0  9483               	bcf	3971,2,c	;volatile
  6781                           ;main.c: 3087: StartRTdS(1);
  6782  0037D2  EC86  F06E         	call	_StartRTdS
  6783  0037D6                     l788:
  6784                           ;main.c: 3088: }
  6785                           ;main.c: 3090: {
  6786  0037D6  0E01               	movlw	1
  6787  0037D8  EC98  F06E         	call	_RTdS
  6788  0037DC  6E00               	movwf	btemp,c
  6789  0037DE  0E05               	movlw	5
  6790  0037E0  5C00               	subwf	btemp,w,c
  6791  0037E2  A0D8               	btfss	status,0,c
  6792  0037E4  0012               	return	
  6793                           ;main.c: 3092: RD1=!RD1;
  6794  0037E6  7283               	btg	3971,1,c	;volatile
  6795                           ;main.c: 3093: M.ZKP=2;
  6796  0037E8  0E02               	movlw	2
  6797  0037EA  CFE8 F1A7          	movff	wreg,_M+45
  6798  0037EE                     l790:
  6799                           ;main.c: 3094: }
  6800                           ;main.c: 3096: {
  6801  0037EE  0E01               	movlw	1
  6802  0037F0  EC98  F06E         	call	_RTdS
  6803  0037F4  6E00               	movwf	btemp,c
  6804  0037F6  0E0A               	movlw	10
  6805  0037F8  5C00               	subwf	btemp,w,c
  6806  0037FA  A0D8               	btfss	status,0,c
  6807  0037FC  0012               	return	
  6808                           ;main.c: 3098: M._ZMKCOCW=0;
  6809  0037FE  0101               	movlb	(_M+16) shr (0+8)
  6810  003800  938A               	bcf	(_M+16)& (0+255),1,b
  6811                           ;main.c: 3099: M.ZKP=0;
  6812  003802  6BA7               	clrf	(_M+45)& (0+255),b
  6813                           ;main.c: 3102: if(M._ROZRUCH||RD0||M._WYLACZ) RD
      +                          2=1;
  6814  003804  A58A               	btfss	(_M+16)& (0+255),2,b
  6815  003806  B083               	btfsc	3971,0,c	;volatile
  6816  003808  D001               	goto	u12230
  6817  00380A  B18A               	btfsc	(_M+16)& (0+255),0,b
  6818  00380C                     u12230:
  6819  00380C  8483               	bsf	3971,2,c	;volatile
  6820                           ;main.c: 3103: if(DtKNF.robg==0)
  6821  00380E  EE00  F092         	lfsr	0,_DtKNF+14
  6822  003812  50EF               	movf	indf0,w,c
  6823  003814  A4D8               	btfss	status,2,c
  6824  003816  0012               	return	
  6825                           ;main.c: 3104: {
  6826  003818  0101               	movlb	(_M+17) shr (0+8)
  6827  00381A  B58B               	btfsc	(_M+17)& (0+255),2,b
  6828  00381C  8483               	bsf	3971,2,c	;volatile
  6829                           ;main.c: 3106: }
  6830  00381E  0012               	return	
  6831  003820                     l786:
  6832  003820  C1A7  FFE8         	movff	_M+45,wreg
  6833  003824  0A00               	xorlw	0
  6834  003826  E0D1               	bz	l787
  6835  003828  0A01               	xorlw	1
  6836  00382A  E0D5               	bz	l788
  6837  00382C  0A03               	xorlw	3
  6838  00382E  E0DF               	bz	l790
  6839  003830  0012               	return	
  6840                           ;main.c: 3109: return;
  6841                           ;main.c: 3110: }
  6842                           ;main.c: 3112: {
  6843  003832                     l798:
  6844                           ;main.c: 3114: {
  6845                           ;main.c: 3116: {
  6846  003832  0E01               	movlw	1
  6847  003834  CFE8 F1A7          	movff	wreg,_M+45
  6848                           ;main.c: 3118: RD2=0;
  6849  003838  9483               	bcf	3971,2,c	;volatile
  6850                           ;main.c: 3119: StartRTdS(1);
  6851  00383A  EC86  F06E         	call	_StartRTdS
  6852  00383E                     l799:
  6853                           ;main.c: 3120: }
  6854                           ;main.c: 3122: {
  6855  00383E  0E01               	movlw	1
  6856  003840  EC98  F06E         	call	_RTdS
  6857  003844  6E00               	movwf	btemp,c
  6858  003846  0E05               	movlw	5
  6859  003848  5C00               	subwf	btemp,w,c
  6860  00384A  A0D8               	btfss	status,0,c
  6861  00384C  0012               	return	
  6862                           ;main.c: 3124: RD1=!RD1;
  6863  00384E  7283               	btg	3971,1,c	;volatile
  6864                           ;main.c: 3125: M.ZKP=2;
  6865  003850  0E02               	movlw	2
  6866  003852  CFE8 F1A7          	movff	wreg,_M+45
  6867  003856                     l801:
  6868                           ;main.c: 3126: }
  6869                           ;main.c: 3128: {
  6870  003856  0E01               	movlw	1
  6871  003858  EC98  F06E         	call	_RTdS
  6872  00385C  6E00               	movwf	btemp,c
  6873  00385E  0E0A               	movlw	10
  6874  003860  5C00               	subwf	btemp,w,c
  6875  003862  A0D8               	btfss	status,0,c
  6876  003864  0012               	return	
  6877                           ;main.c: 3130: M._ZMKCOCW=0;
  6878  003866  0101               	movlb	(_M+16) shr (0+8)
  6879  003868  938A               	bcf	(_M+16)& (0+255),1,b
  6880                           ;main.c: 3131: M.ZKP=0;
  6881  00386A  6BA7               	clrf	(_M+45)& (0+255),b
  6882                           ;main.c: 3134: if(M._ROZRUCH||RD0||M._WYLACZ) RD
      +                          2=1;
  6883  00386C  A58A               	btfss	(_M+16)& (0+255),2,b
  6884  00386E  B083               	btfsc	3971,0,c	;volatile
  6885  003870  D001               	goto	u12320
  6886  003872  B18A               	btfsc	(_M+16)& (0+255),0,b
  6887  003874                     u12320:
  6888  003874  8483               	bsf	3971,2,c	;volatile
  6889                           ;main.c: 3135: if(DtKNF.robg==0)
  6890  003876  EE00  F092         	lfsr	0,_DtKNF+14
  6891  00387A  50EF               	movf	indf0,w,c
  6892  00387C  A4D8               	btfss	status,2,c
  6893  00387E  0012               	return	
  6894                           ;main.c: 3136: {
  6895  003880  0101               	movlb	(_M+17) shr (0+8)
  6896  003882  B58B               	btfsc	(_M+17)& (0+255),2,b
  6897  003884  8483               	bsf	3971,2,c	;volatile
  6898                           ;main.c: 3138: }
  6899  003886  0012               	return	
  6900  003888                     l797:
  6901  003888  C1A7  FFE8         	movff	_M+45,wreg
  6902  00388C  0A00               	xorlw	0
  6903  00388E  E0D1               	bz	l798
  6904  003890  0A01               	xorlw	1
  6905  003892  E0D5               	bz	l799
  6906  003894  0A03               	xorlw	3
  6907  003896  E0DF               	bz	l801
  6908  003898  0012               	return	
  6909                           ;main.c: 3141: return;
  6910  00389A                     l775:
  6911  00389A  C08B  FFE8         	movff	_DtKNF+7,wreg
  6912  00389E  0A00               	xorlw	0
  6913  0038A0  E093               	bz	l784
  6914  0038A2  0A01               	xorlw	1
  6915  0038A4  E101 D776          	bz	l777
  6916  0038A8  0A03               	xorlw	3
  6917  0038AA  E101 D773          	bz	l777
  6918  0038AE  0A01               	xorlw	1
  6919  0038B0  E08B               	bz	l784
  6920  0038B2  D7EA               	goto	l797
  6921                           ;main.c: 3144: }
  6922  0038B4                     __end_of_ZmienKCOKCW:
  6923                           ;main.c: 3148: void RuszPlomien(void)
  6924                           ;main.c: 3149: {
  6925  0038B4                     _RuszPlomien:
  6926  000000                     
  6927                           ;main.c: 3150: switch(M.RPL)
  6928  0038B4  D029               	goto	l808
  6929  0038B6                     l809:
  6930                           ;main.c: 3151: {
  6931                           ;main.c: 3153: {
  6932  0038B6  0E01               	movlw	1
  6933  0038B8  CFE8 F1A4          	movff	wreg,_M+42
  6934                           ;main.c: 3155: StartRTS(3);
  6935  0038BC  0E03               	movlw	3
  6936  0038BE  ECA4  F06E         	call	_StartRTS
  6937  0038C2                     l810:
  6938                           ;main.c: 3156: }
  6939                           ;main.c: 3158: {
  6940  0038C2  0E03               	movlw	3
  6941  0038C4  ECB6  F06E         	call	_RTS
  6942  0038C8  6E00               	movwf	btemp,c
  6943  0038CA  0E1E               	movlw	30
  6944  0038CC  5C00               	subwf	btemp,w,c
  6945  0038CE  A0D8               	btfss	status,0,c
  6946  0038D0  0012               	return	
  6947                           ;main.c: 3160: M.LICZNIK_PL++;
  6948  0038D2  0101               	movlb	(_M+29) shr (0+8)
  6949  0038D4  2B97               	incf	(_M+29)& (0+255),f,b
  6950                           ;main.c: 3161: if(M._RUSZ_RPLM)
  6951  0038D6  A38B               	btfss	(_M+17)& (0+255),1,b
  6952  0038D8  D005               	goto	l812
  6953                           ;main.c: 3162: {
  6954  0038DA  0102               	movlb	_PWM shr (0+8)
  6955  0038DC  A56E               	btfss	_PWM& (0+255),2,b
  6956  0038DE  D007               	goto	l818
  6957                           ;main.c: 3164: {
  6958                           ;main.c: 3166: {
  6959                           ;main.c: 3168: M._RUSZ_RPLM=0;
  6960                           ;main.c: 3169: }
  6961                           ;main.c: 3171: else
  6962  0038E0  0E00               	movlw	0
  6963  0038E2  D006               	goto	L12
  6964                           ;main.c: 3174: {
  6965                           ;main.c: 3176: M._RUSZ_RPLM=0;
  6966                           ;main.c: 3177: }
  6967  0038E4                     l812:
  6968                           ;main.c: 3180: else
  6969  0038E4  0102               	movlb	_PWM shr (0+8)
  6970  0038E6  B56E               	btfsc	_PWM& (0+255),2,b
  6971  0038E8  D002               	goto	l818
  6972                           ;main.c: 3183: {
  6973  0038EA  0E02               	movlw	2
  6974  0038EC  D001               	goto	L12
  6975                           ;main.c: 3185: {
  6976                           ;main.c: 3187: M._RUSZ_RPLM=0;
  6977                           ;main.c: 3188: }
  6978  0038EE                     l818:
  6979                           ;main.c: 3190: else
  6980  0038EE  0E01               	movlw	1
  6981  0038F0                     L12:
  6982  0038F0  0101               	movlb	(_M+29) shr (0+8)
  6983  0038F2  6597               	cpfsgt	(_M+29)& (0+255),b
  6984  0038F4  D002               	goto	l817
  6985                           ;main.c: 3193: {
  6986  0038F6  8795               	bsf	(_M+27)& (0+255),3,b
  6987                           ;main.c: 3195: M._RUSZ_RPLM=0;
  6988  0038F8  938B               	bcf	(_M+17)& (0+255),1,b
  6989  0038FA                     l817:
  6990                           ;main.c: 3196: }
  6991  0038FA  0E04               	movlw	4
  6992  0038FC  EC86  F06E         	call	_StartRTdS
  6993                           ;main.c: 3200: M._RUSZ_PLOMIEN=0;
  6994  003900  0101               	movlb	(_M+17) shr (0+8)
  6995  003902  918B               	bcf	(_M+17)& (0+255),0,b
  6996                           ;main.c: 3201: M.RPL=0;
  6997  003904  6BA4               	clrf	(_M+42)& (0+255),b
  6998                           ;main.c: 3202: }
  6999  003906  0012               	return	
  7000  003908                     l808:
  7001  003908  C1A4  FFE8         	movff	_M+42,wreg
  7002  00390C  0A00               	xorlw	0
  7003  00390E  E0D3               	bz	l809
  7004  003910  0A01               	xorlw	1
  7005  003912  E0D7               	bz	l810
  7006  003914  0012               	return	
  7007                           ;main.c: 3204: }
  7008  003916                     __end_of_RuszPlomien:
  7009                           ;main.c: 3206: void ReloadPlomien(void)
  7010                           ;main.c: 3207: {
  7011  003916                     _ReloadPlomien:
  7012  000000                     
  7013                           ;main.c: 3208: if(!M._RUSZ_PLOMIEN&&!M._ZMKCOCW&
      +                          &!M._ROZRUCH&&(RTdS(4)>9))
  7014  003916  0101               	movlb	(_M+17) shr (0+8)
  7015  003918  A18B               	btfss	(_M+17)& (0+255),0,b
  7016  00391A  B38A               	btfsc	(_M+16)& (0+255),1,b
  7017  00391C  0012               	return	
  7018  00391E  0101               	movlb	(_M+16) shr (0+8)
  7019  003920  B58A               	btfsc	(_M+16)& (0+255),2,b
  7020  003922  0012               	return	
  7021  003924  0E04               	movlw	4
  7022  003926  EC98  F06E         	call	_RTdS
  7023  00392A  6E00               	movwf	btemp,c
  7024  00392C  0E0A               	movlw	10
  7025  00392E  5C00               	subwf	btemp,w,c
  7026  003930  A0D8               	btfss	status,0,c
  7027  003932  0012               	return	
  7028                           ;main.c: 3209: {
  7029  003934  0101               	movlb	(_M+17) shr (0+8)
  7030  003936  938B               	bcf	(_M+17)& (0+255),1,b
  7031                           ;main.c: 3211: M._OST_PL=0;
  7032  003938  9795               	bcf	(_M+27)& (0+255),3,b
  7033                           ;main.c: 3212: M.LICZNIK_PL=0;
  7034  00393A  6B97               	clrf	(_M+29)& (0+255),b
  7035                           ;main.c: 3213: }
  7036  00393C  0012               	return	
  7037  00393E                     __end_of_ReloadPlomien:
  7038                           ;main.c: 3218: void RuszCiag(void)
  7039                           ;main.c: 3219: {
  7040  00393E                     _RuszCiag:
  7041  000000                     
  7042                           ;main.c: 3220: if(!M._TURBO)
  7043  00393E  0101               	movlb	(_M+27) shr (0+8)
  7044  003940  A395               	btfss	(_M+27)& (0+255),1,b
  7045  003942  D034               	goto	l827
  7046  003944  D0BA               	goto	l835
  7047                           ;main.c: 3221: {
  7048  003946                     l828:
  7049                           ;main.c: 3223: {
  7050                           ;main.c: 3225: {
  7051  003946  0E01               	movlw	1
  7052  003948  CFE8 F1A5          	movff	wreg,_M+43
  7053                           ;main.c: 3227: M._prb_CIG=0;
  7054  00394C  0101               	movlb	(_M+28) shr (0+8)
  7055  00394E  9196               	bcf	(_M+28)& (0+255),0,b
  7056                           ;main.c: 3228: StartRTS(4);
  7057  003950  0E04               	movlw	4
  7058  003952  ECA4  F06E         	call	_StartRTS
  7059                           ;main.c: 3229: StartRTM(3);
  7060  003956  0E03               	movlw	3
  7061  003958  ECC2  F06E         	call	_StartRTM
  7062  00395C                     l829:
  7063                           ;main.c: 3230: }
  7064                           ;main.c: 3232: {
  7065  00395C  0E04               	movlw	4
  7066  00395E  ECB6  F06E         	call	_RTS
  7067  003962  6E00               	movwf	btemp,c
  7068  003964  0E02               	movlw	2
  7069  003966  5C00               	subwf	btemp,w,c
  7070  003968  E302               	bnc	l830
  7071  00396A  0101               	movlb	(_M+28) shr (0+8)
  7072  00396C  8196               	bsf	(_M+28)& (0+255),0,b
  7073  00396E                     l830:
  7074                           ;main.c: 3234: if(RTM(3)<15) return;
  7075  00396E  0E03               	movlw	3
  7076  003970  ECD4  F06E         	call	_RTM
  7077  003974  6E00               	movwf	btemp,c
  7078  003976  0E0F               	movlw	15
  7079  003978  5C00               	subwf	btemp,w,c
  7080  00397A  A0D8               	btfss	status,0,c
  7081  00397C  0012               	return	
  7082                           ;main.c: 3235: M.LICZNIK_CIG2++;
  7083  00397E  0101               	movlb	(_M+31) shr (0+8)
  7084  003980  2B99               	incf	(_M+31)& (0+255),f,b
  7085                           ;main.c: 3236: if(M.LICZNIK_CIG2>=4)
  7086  003982  0E03               	movlw	3
  7087  003984  6599               	cpfsgt	(_M+31)& (0+255),b
  7088  003986  D00B               	goto	l832
  7089                           ;main.c: 3237: {
  7090  003988  6B99               	clrf	(_M+31)& (0+255),b
  7091                           ;main.c: 3239: M.ERR_BTY=0x03;
  7092  00398A  0E03               	movlw	3
  7093  00398C  CFE8 F19C          	movff	wreg,_M+34
  7094                           ;main.c: 3240: PrintErr(0x03,1);
  7095  003990  0E01               	movlw	1
  7096  003992  0100               	movlb	__Lparam shr (0+8)
  7097  003994  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  7098  003996  0E03               	movlw	3
  7099  003998  ECEC  F062         	call	_PrintErr
  7100                           ;main.c: 3241: ErrPTG();
  7101  00399C  D9D8               	call	_ErrPTG	;wreg free
  7102  00399E                     l832:
  7103                           ;main.c: 3242: }
  7104  00399E  0101               	movlb	(_M+43) shr (0+8)
  7105  0039A0  6BA5               	clrf	(_M+43)& (0+255),b
  7106                           ;main.c: 3244: M._RUSZ_CIAG=0;
  7107  0039A2  9F8A               	bcf	(_M+16)& (0+255),7,b
  7108                           ;main.c: 3245: M._prb_CIG=0;
  7109  0039A4  9196               	bcf	(_M+28)& (0+255),0,b
  7110                           ;main.c: 3246: StartRTM(6);
  7111  0039A6  0E06               	movlw	6
  7112  0039A8  EFC2  F06E         	goto	_StartRTM
  7113                           ;main.c: 3247: return;
  7114  0039AC                     l827:
  7115  0039AC  C1A5  FFE8         	movff	_M+43,wreg
  7116  0039B0  0A00               	xorlw	0
  7117  0039B2  E0C9               	bz	l828
  7118  0039B4  0A01               	xorlw	1
  7119  0039B6  E0D2               	bz	l829
  7120  0039B8  0012               	return	
  7121                           ;main.c: 3250: }
  7122                           ;main.c: 3251: else
  7123  0039BA                     l836:
  7124                           ;main.c: 3254: {
  7125                           ;main.c: 3256: {
  7126  0039BA  0101               	movlb	(_M+28) shr (0+8)
  7127  0039BC  9196               	bcf	(_M+28)& (0+255),0,b
  7128                           ;main.c: 3258: StartRTS(4);
  7129  0039BE  0E04               	movlw	4
  7130  0039C0  ECA4  F06E         	call	_StartRTS
  7131                           ;main.c: 3259: if(RD3)
  7132  0039C4  A683               	btfss	3971,3,c	;volatile
  7133  0039C6  D007               	goto	l837
  7134                           ;main.c: 3260: {
  7135  0039C8  0101               	movlb	(_M+16) shr (0+8)
  7136  0039CA  8D8A               	bsf	(_M+16)& (0+255),6,b
  7137                           ;main.c: 3262: M.VWB=0;
  7138  0039CC  6BA8               	clrf	(_M+46)& (0+255),b
  7139                           ;main.c: 3263: M.RCI=1;
  7140  0039CE  0E01               	movlw	1
  7141  0039D0  CFE8 F1A5          	movff	wreg,_M+43
  7142                           ;main.c: 3264: }
  7143  0039D4  0C01               	retlw	1
  7144  0039D6                     l837:
  7145                           ;main.c: 3265: else M.RCI=2;
  7146  0039D6  0E02               	movlw	2
  7147  0039D8  CFE8 F1A5          	movff	wreg,_M+43
  7148                           ;main.c: 3266: break;
  7149  0039DC  0C02               	retlw	2
  7150  0039DE                     l839:
  7151                           ;main.c: 3267: }
  7152                           ;main.c: 3269: {
  7153  0039DE  0E04               	movlw	4
  7154  0039E0  ECB6  F06E         	call	_RTS
  7155  0039E4  6E00               	movwf	btemp,c
  7156  0039E6  0E02               	movlw	2
  7157  0039E8  5C00               	subwf	btemp,w,c
  7158  0039EA  E302               	bnc	l840
  7159  0039EC  0101               	movlb	(_M+28) shr (0+8)
  7160  0039EE  8196               	bsf	(_M+28)& (0+255),0,b
  7161  0039F0                     l840:
  7162                           ;main.c: 3272: if(RdPrt(3))
  7163  0039F0  0E03               	movlw	3
  7164  0039F2  ECA6  F068         	call	_RdPrt
  7165                           ;main.c: 3273: {
  7166  0039F6  0E04               	movlw	4
  7167  0039F8  E305               	bnc	L24
  7168  0039FA  CFE8 F1A5          	movff	wreg,_M+43
  7169                           ;main.c: 3275: M.LICZNIK_CIG3=0;
  7170  0039FE  0101               	movlb	(_M+32) shr (0+8)
  7171  003A00  6B9A               	clrf	(_M+32)& (0+255),b
  7172  003A02  D00A               	goto	L39
  7173                           ;main.c: 3276: StartRTS(4);
  7174                           ;main.c: 3277: break;
  7175                           ;main.c: 3278: }
  7176  003A04                     L24:
  7177  003A04  ECB6  F06E         	call	_RTS
  7178  003A08  6E00               	movwf	btemp,c
  7179  003A0A  0E0E               	movlw	14
  7180  003A0C  5C00               	subwf	btemp,w,c
  7181  003A0E  A0D8               	btfss	status,0,c
  7182  003A10  0012               	return	
  7183                           ;main.c: 3280: M.RCI=3;
  7184  003A12  0E03               	movlw	3
  7185  003A14  CFE8 F1A5          	movff	wreg,_M+43
  7186  003A18                     L39:
  7187                           ;main.c: 3281: StartRTS(4);
  7188  003A18  0E04               	movlw	4
  7189  003A1A  EFA4  F06E         	goto	_StartRTS
  7190                           ;main.c: 3282: break;
  7191  003A1E                     l843:
  7192                           ;main.c: 3283: }
  7193                           ;main.c: 3286: {
  7194  003A1E  0E04               	movlw	4
  7195  003A20  ECB6  F06E         	call	_RTS
  7196  003A24  6E00               	movwf	btemp,c
  7197  003A26  0E02               	movlw	2
  7198  003A28  5C00               	subwf	btemp,w,c
  7199  003A2A  E302               	bnc	l844
  7200  003A2C  0101               	movlb	(_M+28) shr (0+8)
  7201  003A2E  8196               	bsf	(_M+28)& (0+255),0,b
  7202  003A30                     l844:
  7203                           ;main.c: 3289: if(!RdPrt(3))
  7204  003A30  0E03               	movlw	3
  7205  003A32  ECA6  F068         	call	_RdPrt
  7206                           ;main.c: 3290: {
  7207  003A36  0E04               	movlw	4
  7208  003A38  E201               	bc	L25
  7209  003A3A  D02B               	goto	L40
  7210                           ;main.c: 3292: StartRTS(4);
  7211                           ;main.c: 3293: break;
  7212                           ;main.c: 3294: }
  7213  003A3C                     L25:
  7214  003A3C  ECB6  F06E         	call	_RTS
  7215  003A40  6E00               	movwf	btemp,c
  7216  003A42  0E0E               	movlw	14
  7217  003A44  5C00               	subwf	btemp,w,c
  7218  003A46  A0D8               	btfss	status,0,c
  7219  003A48  0012               	return	
  7220                           ;main.c: 3296: M.ERR_BTY=0x03;
  7221  003A4A  0E03               	movlw	3
  7222  003A4C  CFE8 F19C          	movff	wreg,_M+34
  7223                           ;main.c: 3297: PrintErr(0x03,1);
  7224  003A50  0E01               	movlw	1
  7225  003A52  0100               	movlb	__Lparam shr (0+8)
  7226  003A54  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  7227  003A56  0E03               	movlw	3
  7228  003A58  ECEC  F062         	call	_PrintErr
  7229                           ;main.c: 3298: ErrPTG();
  7230  003A5C  D978               	call	_ErrPTG	;wreg free
  7231  003A5E                     l847:
  7232                           ;main.c: 3299: }
  7233                           ;main.c: 3302: {
  7234  003A5E  9683               	bcf	3971,3,c	;volatile
  7235                           ;main.c: 3304: if(RTS(4)<5-1) return;
  7236  003A60  0E04               	movlw	4
  7237  003A62  ECB6  F06E         	call	_RTS
  7238  003A66  6E00               	movwf	btemp,c
  7239  003A68  0E04               	movlw	4
  7240  003A6A  5C00               	subwf	btemp,w,c
  7241  003A6C  A0D8               	btfss	status,0,c
  7242  003A6E  0012               	return	
  7243                           ;main.c: 3305: M.LICZNIK_CIG3++;
  7244  003A70  0101               	movlb	(_M+32) shr (0+8)
  7245  003A72  2B9A               	incf	(_M+32)& (0+255),f,b
  7246                           ;main.c: 3306: if(M.LICZNIK_CIG3>=10)
  7247  003A74  0E09               	movlw	9
  7248  003A76  659A               	cpfsgt	(_M+32)& (0+255),b
  7249  003A78  D00B               	goto	l849
  7250                           ;main.c: 3307: {
  7251  003A7A  6B9A               	clrf	(_M+32)& (0+255),b
  7252                           ;main.c: 3309: M.ERR_BTY=0x03;
  7253  003A7C  0E03               	movlw	3
  7254  003A7E  CFE8 F19C          	movff	wreg,_M+34
  7255                           ;main.c: 3310: PrintErr(0x03,1);
  7256  003A82  0E01               	movlw	1
  7257  003A84  0100               	movlb	__Lparam shr (0+8)
  7258  003A86  6FD9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  7259  003A88  0E03               	movlw	3
  7260  003A8A  ECEC  F062         	call	_PrintErr
  7261                           ;main.c: 3311: ErrPTG();
  7262  003A8E  D95F               	call	_ErrPTG	;wreg free
  7263  003A90                     l849:
  7264                           ;main.c: 3312: }
  7265  003A90  0E04               	movlw	4
  7266  003A92                     L40:
  7267  003A92  CFE8 F1A5          	movff	wreg,_M+43
  7268                           ;main.c: 3314: StartRTS(4);
  7269  003A96  EFA4  F06E         	goto	_StartRTS
  7270                           ;main.c: 3315: break;
  7271  003A9A                     l850:
  7272                           ;main.c: 3316: }
  7273                           ;main.c: 3318: {
  7274  003A9A  0E04               	movlw	4
  7275  003A9C  ECB6  F06E         	call	_RTS
  7276  003AA0  6E00               	movwf	btemp,c
  7277  003AA2  0E01               	movlw	1
  7278  003AA4  5C00               	subwf	btemp,w,c
  7279  003AA6  A0D8               	btfss	status,0,c
  7280  003AA8  0012               	return	
  7281                           ;main.c: 3320: StartRTS(14);
  7282  003AAA  0E0E               	movlw	14
  7283  003AAC  ECA4  F06E         	call	_StartRTS
  7284                           ;main.c: 3321: M._prb_CIG=0;
  7285  003AB0  0101               	movlb	(_M+28) shr (0+8)
  7286  003AB2  9196               	bcf	(_M+28)& (0+255),0,b
  7287                           ;main.c: 3322: M._RUSZ_CIAG=0;
  7288  003AB4  9F8A               	bcf	(_M+16)& (0+255),7,b
  7289                           ;main.c: 3323: M.RCI=0;
  7290  003AB6  6BA5               	clrf	(_M+43)& (0+255),b
  7291                           ;main.c: 3324: return;
  7292  003AB8  0012               	return	
  7293  003ABA                     l835:
  7294  003ABA  C1A5  FFE8         	movff	_M+43,wreg
  7295  003ABE  0A00               	xorlw	0
  7296  003AC0  E101 D77B          	bz	l836
  7297  003AC4  0A01               	xorlw	1
  7298  003AC6  E08B               	bz	l839
  7299  003AC8  0A03               	xorlw	3
  7300  003ACA  E0A9               	bz	l843
  7301  003ACC  0A01               	xorlw	1
  7302  003ACE  E0C7               	bz	l847
  7303  003AD0  0A07               	xorlw	7
  7304  003AD2  E0E3               	bz	l850
  7305  003AD4  0012               	return	
  7306                           ;main.c: 3327: }
  7307  003AD6                     __end_of_RuszCiag:
  7308                           ;main.c: 3332: void ReloadCiag(void)
  7309                           ;main.c: 3333: {
  7310  003AD6                     _ReloadCiag:
  7311  000000                     
  7312                           ;main.c: 3334: if(!M._TURBO)
  7313  003AD6  0101               	movlb	(_M+27) shr (0+8)
  7314  003AD8  B395               	btfsc	(_M+27)& (0+255),1,b
  7315  003ADA  D00D               	goto	l853
  7316                           ;main.c: 3335: {
  7317  003ADC  BF8A               	btfsc	(_M+16)& (0+255),7,b
  7318  003ADE  0012               	return	
  7319  003AE0  0E06               	movlw	6
  7320  003AE2  ECD4  F06E         	call	_RTM
  7321  003AE6  6E00               	movwf	btemp,c
  7322  003AE8  0E3D               	movlw	61
  7323  003AEA  5C00               	subwf	btemp,w,c
  7324  003AEC  A0D8               	btfss	status,0,c
  7325  003AEE  0012               	return	
  7326  003AF0  0101               	movlb	(_M+31) shr (0+8)
  7327  003AF2  6B99               	clrf	(_M+31)& (0+255),b
  7328                           ;main.c: 3337: }
  7329  003AF4  0012               	return	
  7330  003AF6                     l853:
  7331                           ;main.c: 3338: else
  7332  003AF6  0E0A               	movlw	10
  7333  003AF8  ECB6  F06E         	call	_RTS
  7334  003AFC  6E00               	movwf	btemp,c
  7335  003AFE  0E3D               	movlw	61
  7336  003B00  5C00               	subwf	btemp,w,c
  7337  003B02  E302               	bnc	l856
  7338                           ;main.c: 3341: {
  7339  003B04  0101               	movlb	(_M+30) shr (0+8)
  7340  003B06  6B98               	clrf	(_M+30)& (0+255),b
  7341  003B08                     l856:
  7342                           ;main.c: 3343: }
  7343  003B08  0101               	movlb	(_M+16) shr (0+8)
  7344  003B0A  BF8A               	btfsc	(_M+16)& (0+255),7,b
  7345  003B0C  0012               	return	
  7346  003B0E  0E0E               	movlw	14
  7347  003B10  ECB6  F06E         	call	_RTS
  7348  003B14  6E00               	movwf	btemp,c
  7349  003B16  0E3D               	movlw	61
  7350  003B18  5C00               	subwf	btemp,w,c
  7351  003B1A  A0D8               	btfss	status,0,c
  7352  003B1C  0012               	return	
  7353                           ;main.c: 3345: {
  7354  003B1E  0101               	movlb	(_M+32) shr (0+8)
  7355  003B20  6B9A               	clrf	(_M+32)& (0+255),b
  7356                           ;main.c: 3347: }
  7357  003B22  0012               	return	
  7358  003B24                     __end_of_ReloadCiag:
  7359                           ;main.c: 3353: void Proba48(void)
  7360                           ;main.c: 3354: {
  7361  003B24                     _Proba48:
  7362  000000                     
  7363                           ;main.c: 3356: if(M._RUSZ_48||M._RUSZ_48Z3) retu
      +                          rn;
  7364  003B24  0101               	movlb	(_M+16) shr (0+8)
  7365  003B26  A78A               	btfss	(_M+16)& (0+255),3,b
  7366  003B28  B98A               	btfsc	(_M+16)& (0+255),4,b
  7367  003B2A  0012               	return	
  7368  003B2C  0E00               	movlw	0
  7369                           ;main.c: 3357: if(RD2) StartRTG(0);
  7370  003B2E  B483               	btfsc	3971,2,c	;volatile
  7371  003B30  EFEC  F06E         	goto	_StartRTG
  7372                           ;main.c: 3358: else
  7373  003B34  ECFE  F06E         	call	_RTG
  7374  003B38  6E00               	movwf	btemp,c
  7375  003B3A  0E18               	movlw	24
  7376  003B3C  5C00               	subwf	btemp,w,c
  7377  003B3E  A0D8               	btfss	status,0,c
  7378  003B40  0012               	return	
  7379                           ;main.c: 3361: {
  7380  003B42  0101               	movlb	(_M+36) shr (0+8)
  7381  003B44  6B9E               	clrf	(_M+36)& (0+255),b
  7382                           ;main.c: 3363: M._RUSZ_48=1;
  7383  003B46  878A               	bsf	(_M+16)& (0+255),3,b
  7384                           ;main.c: 3364: StartRTG(0);
  7385  003B48  0E00               	movlw	0
  7386  003B4A  EFEC  F06E         	goto	_StartRTG
  7387                           ;main.c: 3365: }
  7388  003B4E                     __end_of_Proba48:
  7389                           ;main.c: 3385: void Rusz48(void)
  7390                           ;main.c: 3386: {
  7391  003B4E                     _Rusz48:
  7392  000000                     
  7393                           ;main.c: 3387: switch(DtKNF.tpkt)
  7394  003B4E  D062               	goto	l865
  7395  003B50                     l867:
  7396                           ;main.c: 3390: case 2:
  7397  003B50  D01C               	goto	l869
  7398  003B52                     l870:
  7399                           ;main.c: 3393: {
  7400                           ;main.c: 3395: {
  7401  003B52  0101               	movlb	(_M+16) shr (0+8)
  7402  003B54  B38A               	btfsc	(_M+16)& (0+255),1,b
  7403  003B56  0012               	return	
  7404                           ;main.c: 3397: StartRTS(5);
  7405  003B58  0E05               	movlw	5
  7406  003B5A  ECA4  F06E         	call	_StartRTS
  7407                           ;main.c: 3398: ToObiegCO();
  7408  003B5E  EC69  F013         	call	_ToObiegCO	;wreg free
  7409                           ;main.c: 3399: M.R48=1;
  7410  003B62  0E01               	movlw	1
  7411  003B64  CFE8 F19E          	movff	wreg,_M+36
  7412  003B68                     l872:
  7413                           ;main.c: 3400: }
  7414                           ;main.c: 3402: {
  7415  003B68  0E05               	movlw	5
  7416  003B6A  ECB6  F06E         	call	_RTS
  7417  003B6E  6E00               	movwf	btemp,c
  7418  003B70  0EB4               	movlw	180
  7419  003B72  5C00               	subwf	btemp,w,c
  7420  003B74  A0D8               	btfss	status,0,c
  7421  003B76  0012               	return	
  7422                           ;main.c: 3404: if(M._ZMKCOCW) return;
  7423  003B78  0101               	movlb	(_M+16) shr (0+8)
  7424  003B7A  B38A               	btfsc	(_M+16)& (0+255),1,b
  7425  003B7C  0012               	return	
  7426                           ;main.c: 3405: ToObiegCW();
  7427  003B7E  EC90  F013         	call	_ToObiegCW	;wreg free
  7428                           ;main.c: 3406: M._RUSZ_48=0;
  7429  003B82  0101               	movlb	(_M+16) shr (0+8)
  7430  003B84  978A               	bcf	(_M+16)& (0+255),3,b
  7431                           ;main.c: 3407: M.R48=0;
  7432  003B86  6B9E               	clrf	(_M+36)& (0+255),b
  7433                           ;main.c: 3408: }
  7434  003B88  0012               	return	
  7435  003B8A                     l869:
  7436  003B8A  C19E  FFE8         	movff	_M+36,wreg
  7437  003B8E  0A00               	xorlw	0
  7438  003B90  E0E0               	bz	l870
  7439  003B92  0A01               	xorlw	1
  7440  003B94  E0E9               	bz	l872
  7441  003B96  0012               	return	
  7442                           ;main.c: 3410: break;
  7443  003B98                     l876:
  7444                           ;main.c: 3413: case 3:
  7445  003B98  D01B               	goto	l878
  7446  003B9A                     l879:
  7447                           ;main.c: 3416: {
  7448                           ;main.c: 3418: {
  7449  003B9A  EC69  F013         	call	_ToObiegCO	;wreg free
  7450                           ;main.c: 3420: if(M._ZMKCOCW) return;
  7451  003B9E  0101               	movlb	(_M+16) shr (0+8)
  7452  003BA0  B38A               	btfsc	(_M+16)& (0+255),1,b
  7453  003BA2  0012               	return	
  7454                           ;main.c: 3421: StartRTS(5);
  7455  003BA4  0E05               	movlw	5
  7456  003BA6  ECA4  F06E         	call	_StartRTS
  7457                           ;main.c: 3422: RD2=1;
  7458  003BAA  8483               	bsf	3971,2,c	;volatile
  7459                           ;main.c: 3423: M.R48=1;
  7460  003BAC  0E01               	movlw	1
  7461  003BAE  CFE8 F19E          	movff	wreg,_M+36
  7462  003BB2                     l881:
  7463                           ;main.c: 3424: }
  7464                           ;main.c: 3426: {
  7465  003BB2  0E05               	movlw	5
  7466  003BB4  ECB6  F06E         	call	_RTS
  7467  003BB8  6E00               	movwf	btemp,c
  7468  003BBA  0EB4               	movlw	180
  7469  003BBC  5C00               	subwf	btemp,w,c
  7470  003BBE  A0D8               	btfss	status,0,c
  7471  003BC0  0012               	return	
  7472                           ;main.c: 3428: if(M._ZMKCOCW) return;
  7473  003BC2  0101               	movlb	(_M+16) shr (0+8)
  7474  003BC4  B38A               	btfsc	(_M+16)& (0+255),1,b
  7475  003BC6  0012               	return	
  7476                           ;main.c: 3429: RD2=0;
  7477  003BC8  9483               	bcf	3971,2,c	;volatile
  7478                           ;main.c: 3430: M._RUSZ_48=0;
  7479  003BCA  978A               	bcf	(_M+16)& (0+255),3,b
  7480                           ;main.c: 3431: M.R48=0;
  7481  003BCC  6B9E               	clrf	(_M+36)& (0+255),b
  7482                           ;main.c: 3432: }
  7483  003BCE  0012               	return	
  7484  003BD0                     l878:
  7485  003BD0  C19E  FFE8         	movff	_M+36,wreg
  7486  003BD4  0A00               	xorlw	0
  7487  003BD6  E0E1               	bz	l879
  7488  003BD8  0A01               	xorlw	1
  7489  003BDA  E0EB               	bz	l881
  7490  003BDC  0012               	return	
  7491                           ;main.c: 3434: break;
  7492                           ;main.c: 3435: }
  7493                           ;main.c: 3437: {
  7494  003BDE                     l887:
  7495                           ;main.c: 3439: {
  7496                           ;main.c: 3441: {
  7497  003BDE  EC69  F013         	call	_ToObiegCO	;wreg free
  7498                           ;main.c: 3443: if(M._ZMKCOCW) return;
  7499  003BE2  0101               	movlb	(_M+16) shr (0+8)
  7500  003BE4  B38A               	btfsc	(_M+16)& (0+255),1,b
  7501  003BE6  0012               	return	
  7502                           ;main.c: 3444: StartRTS(5);
  7503  003BE8  0E05               	movlw	5
  7504  003BEA  ECA4  F06E         	call	_StartRTS
  7505                           ;main.c: 3445: RD2=1;
  7506  003BEE  8483               	bsf	3971,2,c	;volatile
  7507                           ;main.c: 3446: M.R48=1;
  7508  003BF0  0E01               	movlw	1
  7509  003BF2  CFE8 F19E          	movff	wreg,_M+36
  7510  003BF6                     l889:
  7511                           ;main.c: 3447: }
  7512                           ;main.c: 3449: {
  7513  003BF6  0E05               	movlw	5
  7514  003BF8  ECB6  F06E         	call	_RTS
  7515  003BFC  6E00               	movwf	btemp,c
  7516  003BFE  0EB4               	movlw	180
  7517  003C00  5C00               	subwf	btemp,w,c
  7518  003C02  A0D8               	btfss	status,0,c
  7519  003C04  0012               	return	
  7520                           ;main.c: 3451: if(M._ZMKCOCW) return;
  7521  003C06  0101               	movlb	(_M+16) shr (0+8)
  7522  003C08  B38A               	btfsc	(_M+16)& (0+255),1,b
  7523  003C0A  0012               	return	
  7524                           ;main.c: 3452: RD2=0;
  7525  003C0C  9483               	bcf	3971,2,c	;volatile
  7526                           ;main.c: 3453: M._RUSZ_48=0;
  7527  003C0E  978A               	bcf	(_M+16)& (0+255),3,b
  7528                           ;main.c: 3454: M.R48=0;
  7529  003C10  6B9E               	clrf	(_M+36)& (0+255),b
  7530                           ;main.c: 3455: }
  7531  003C12  0012               	return	
  7532                           ;main.c: 3457: break;
  7533  003C14                     l865:
  7534  003C14  C08B  FFE8         	movff	_DtKNF+7,wreg
  7535  003C18  0A00               	xorlw	0
  7536  003C1A  E0BE               	bz	l876
  7537  003C1C  0A01               	xorlw	1
  7538  003C1E  E098               	bz	l867
  7539  003C20  0A03               	xorlw	3
  7540  003C22  E096               	bz	l867
  7541  003C24  0A01               	xorlw	1
  7542  003C26  E0B8               	bz	l876
  7543  003C28  C19E  FFE8         	movff	_M+36,wreg
  7544  003C2C  0A00               	xorlw	0
  7545  003C2E  E0D7               	bz	l887
  7546  003C30  0A01               	xorlw	1
  7547  003C32  E0E1               	bz	l889
  7548                           ;main.c: 3460: }
  7549  003C34  0012               	return	
  7550  003C36                     __end_of_Rusz48:
  7551                           ;main.c: 3463: void Proba48Z3(void)
  7552                           ;main.c: 3464: {
  7553  003C36                     _Proba48Z3:
  7554  000000                     
  7555                           ;main.c: 3466: switch(DtKNF.tpkt)
  7556  003C36  D01B               	goto	l894
  7557  003C38                     l895:
  7558                           ;main.c: 3467: {
  7559                           ;main.c: 3469: {
  7560  003C38  0101               	movlb	(_M+16) shr (0+8)
  7561  003C3A  A98A               	btfss	(_M+16)& (0+255),4,b
  7562  003C3C  B78A               	btfsc	(_M+16)& (0+255),3,b
  7563  003C3E  0012               	return	
  7564                           ;main.c: 3471: if(RD2&&!RD1) StartRTG(2);
  7565  003C40  B483               	btfsc	3971,2,c	;volatile
  7566  003C42  B283               	btfsc	3971,1,c	;volatile
  7567  003C44  D001               	goto	l897
  7568  003C46  D010               	goto	L41
  7569  003C48                     l897:
  7570                           ;main.c: 3472: else
  7571  003C48  B483               	btfsc	3971,2,c	;volatile
  7572  003C4A  0012               	return	
  7573  003C4C  0101               	movlb	(_M+16) shr (0+8)
  7574  003C4E  B38A               	btfsc	(_M+16)& (0+255),1,b
  7575  003C50  0012               	return	
  7576                           ;main.c: 3475: if(RTG(2)>=47)
  7577  003C52  0E02               	movlw	2
  7578  003C54  ECFE  F06E         	call	_RTG
  7579  003C58  6E00               	movwf	btemp,c
  7580  003C5A  0E2F               	movlw	47
  7581  003C5C  5C00               	subwf	btemp,w,c
  7582  003C5E  A0D8               	btfss	status,0,c
  7583  003C60  0012               	return	
  7584                           ;main.c: 3476: {
  7585  003C62  0101               	movlb	(_M+37) shr (0+8)
  7586  003C64  6B9F               	clrf	(_M+37)& (0+255),b
  7587                           ;main.c: 3478: M._RUSZ_48Z3=1;
  7588  003C66  898A               	bsf	(_M+16)& (0+255),4,b
  7589  003C68                     L41:
  7590                           ;main.c: 3479: StartRTG(2);
  7591  003C68  0E02               	movlw	2
  7592  003C6A  EFEC  F06E         	goto	_StartRTG
  7593                           ;main.c: 3480: }
  7594  003C6E                     l894:
  7595  003C6E  C08B  FFE8         	movff	_DtKNF+7,wreg
  7596  003C72  0A03               	xorlw	3
  7597  003C74  E0E1               	bz	l895
  7598  003C76  0012               	return	
  7599                           ;main.c: 3506: }
  7600  003C78                     __end_of_Proba48Z3:
  7601                           ;main.c: 3510: void Rusz48Z3(void)
  7602                           ;main.c: 3511: {
  7603  003C78                     _Rusz48Z3:
  7604  000000                     
  7605                           ;main.c: 3512: switch(DtKNF.tpkt)
  7606  003C78  D023               	goto	l903
  7607  003C7A                     l904:
  7608                           ;main.c: 3513: {
  7609                           ;main.c: 3515: {
  7610  003C7A  D01B               	goto	l906
  7611  003C7C                     l907:
  7612                           ;main.c: 3517: {
  7613                           ;main.c: 3519: {
  7614  003C7C  EC90  F013         	call	_ToObiegCW	;wreg free
  7615                           ;main.c: 3521: if(M._ZMKCOCW) return;
  7616  003C80  0101               	movlb	(_M+16) shr (0+8)
  7617  003C82  B38A               	btfsc	(_M+16)& (0+255),1,b
  7618  003C84  0012               	return	
  7619                           ;main.c: 3522: StartRTS(5);
  7620  003C86  0E05               	movlw	5
  7621  003C88  ECA4  F06E         	call	_StartRTS
  7622                           ;main.c: 3523: RD2=1;
  7623  003C8C  8483               	bsf	3971,2,c	;volatile
  7624                           ;main.c: 3524: M.R48Z3=1;
  7625  003C8E  0E01               	movlw	1
  7626  003C90  CFE8 F19F          	movff	wreg,_M+37
  7627  003C94                     l909:
  7628                           ;main.c: 3525: }
  7629                           ;main.c: 3527: {
  7630  003C94  0E05               	movlw	5
  7631  003C96  ECB6  F06E         	call	_RTS
  7632  003C9A  6E00               	movwf	btemp,c
  7633  003C9C  0E0F               	movlw	15
  7634  003C9E  5C00               	subwf	btemp,w,c
  7635  003CA0  A0D8               	btfss	status,0,c
  7636  003CA2  0012               	return	
  7637                           ;main.c: 3529: if(M._ZMKCOCW) return;
  7638  003CA4  0101               	movlb	(_M+16) shr (0+8)
  7639  003CA6  B38A               	btfsc	(_M+16)& (0+255),1,b
  7640  003CA8  0012               	return	
  7641                           ;main.c: 3530: RD2=0;
  7642  003CAA  9483               	bcf	3971,2,c	;volatile
  7643                           ;main.c: 3531: M._RUSZ_48Z3=0;
  7644  003CAC  998A               	bcf	(_M+16)& (0+255),4,b
  7645                           ;main.c: 3532: M.R48Z3=0;
  7646  003CAE  6B9F               	clrf	(_M+37)& (0+255),b
  7647                           ;main.c: 3533: }
  7648  003CB0  0012               	return	
  7649  003CB2                     l906:
  7650  003CB2  C19F  FFE8         	movff	_M+37,wreg
  7651  003CB6  0A00               	xorlw	0
  7652  003CB8  E0E1               	bz	l907
  7653  003CBA  0A01               	xorlw	1
  7654  003CBC  E0EB               	bz	l909
  7655  003CBE  0012               	return	
  7656                           ;main.c: 3535: break;
  7657  003CC0                     l903:
  7658  003CC0  C08B  FFE8         	movff	_DtKNF+7,wreg
  7659  003CC4  0A03               	xorlw	3
  7660  003CC6  E0D9               	bz	l904
  7661  003CC8  0012               	return	
  7662                           ;main.c: 3538: }
  7663  003CCA                     __end_of_Rusz48Z3:
  7664                           ;main.c: 3572: bit KeyRes(void)
  7665                           ;main.c: 3573: {
  7666  003CCA                     _KeyRes:
  7667  000000                     
  7668                           ;main.c: 3574: if(RdPrt(22))
  7669  003CCA  0E16               	movlw	22
  7670  003CCC  ECA6  F068         	call	_RdPrt
  7671                           ;main.c: 3575: {
  7672  003CD0  0101               	movlb	(_PFN+2) shr (0+8)
  7673  003CD2  E302               	bnc	L27
  7674  003CD4  8759               	bsf	(_PFN+2)& (0+255),3,b
  7675                           ;main.c: 3577: }
  7676  003CD6  D01D               	goto	l916
  7677                           ;main.c: 3578: else PFN._res=0;
  7678  003CD8                     L27:
  7679  003CD8  9759               	bcf	(_PFN+2)& (0+255),3,b
  7680                           ;main.c: 3579: switch(M.KRS)
  7681  003CDA  D01B               	goto	l916
  7682  003CDC                     l917:
  7683                           ;main.c: 3580: {
  7684                           ;main.c: 3582: {
  7685  003CDC  0101               	movlb	(_PFN+2) shr (0+8)
  7686  003CDE  A759               	btfss	(_PFN+2)& (0+255),3,b
  7687  003CE0  D01E               	goto	l915
  7688                           ;main.c: 3584: {
  7689  003CE2  0E01               	movlw	1
  7690  003CE4  CFE8 F1AA          	movff	wreg,_M+48
  7691                           ;main.c: 3586: StartRTS(8);
  7692  003CE8  0E08               	movlw	8
  7693  003CEA  ECA4  F06E         	call	_StartRTS
  7694                           ;main.c: 3587: }
  7695  003CEE  D017               	goto	l915
  7696  003CF0                     l919:
  7697                           ;main.c: 3589: }
  7698                           ;main.c: 3591: {
  7699  003CF0  0101               	movlb	(_PFN+2) shr (0+8)
  7700  003CF2  A759               	btfss	(_PFN+2)& (0+255),3,b
  7701  003CF4  D00B               	goto	l920
  7702                           ;main.c: 3593: {
  7703  003CF6  0E08               	movlw	8
  7704  003CF8  ECB6  F06E         	call	_RTS
  7705  003CFC  6E00               	movwf	btemp,c
  7706  003CFE  0E01               	movlw	1
  7707  003D00  5C00               	subwf	btemp,w,c
  7708  003D02  E202               	bc	l921
  7709  003D04  90D8               	bcf	status,0,c
  7710  003D06  0012               	return	
  7711  003D08                     l921:
  7712                           ;main.c: 3595: return 1;
  7713  003D08  80D8               	bsf	status,0,c
  7714  003D0A  0012               	return	
  7715  003D0C                     l920:
  7716                           ;main.c: 3598: else
  7717  003D0C  0101               	movlb	(_M+48) shr (0+8)
  7718  003D0E  6BAA               	clrf	(_M+48)& (0+255),b
  7719                           ;main.c: 3601: }
  7720  003D10  D006               	goto	l915
  7721  003D12                     l916:
  7722  003D12  C1AA  FFE8         	movff	_M+48,wreg
  7723  003D16  0A00               	xorlw	0
  7724  003D18  E0E1               	bz	l917
  7725  003D1A  0A01               	xorlw	1
  7726  003D1C  E0E9               	bz	l919
  7727  003D1E                     l915:
  7728                           ;main.c: 3604: return 0;
  7729  003D1E  90D8               	bcf	status,0,c
  7730  003D20  0012               	return	
  7731                           ;main.c: 3605: }
  7732  003D22                     __end_of_KeyRes:
  7733                           ;main.c: 3609: void VZPauza(void)
  7734                           ;main.c: 3610: {
  7735  003D22                     _VZPauza:
  7736  000000                     
  7737                           ;main.c: 3612: StartRTS(2);
  7738  003D22  0E02               	movlw	2
  7739  003D24  ECA4  F06E         	call	_StartRTS
  7740  003D28                     l925:
  7741                           ;main.c: 3613: while(1)
  7742                           ;main.c: 3614: {
  7743  003D28  0004               	clrwdt		;#
  7744                           ;main.c: 3616: if(M.ERR_BTY==2)
  7745  003D2A  C19C  FFE8         	movff	_M+34,wreg
  7746  003D2E  0A02               	xorlw	2
  7747                           ;main.c: 3617: {
  7748  003D30  0E02               	movlw	2
  7749  003D32  E108               	bnz	L28
  7750  003D34  ECB6  F06E         	call	_RTS
  7751  003D38  6E00               	movwf	btemp,c
  7752  003D3A  0E03               	movlw	3
  7753  003D3C                     L10:
  7754  003D3C  5C00               	subwf	btemp,w,c
  7755  003D3E  B0D8               	btfsc	status,0,c
  7756  003D40  0012               	return	
  7757  003D42  D7F2               	goto	l925
  7758                           ;main.c: 3619: }
  7759                           ;main.c: 3620: else
  7760  003D44                     L28:
  7761  003D44  ECB6  F06E         	call	_RTS
  7762  003D48  6E00               	movwf	btemp,c
  7763  003D4A  0E02               	movlw	2
  7764  003D4C  D7F7               	goto	L10
  7765                           ;main.c: 3623: }
  7766  003D4E                     __end_of_VZPauza:
  7767                           ;main.c: 3629: void ErrPTG(void)
  7768                           ;main.c: 3630: {
  7769  003D4E                     _ErrPTG:
  7770  000000                     
  7771                           ;main.c: 3634: GrzejOFF();
  7772  003D4E  ECDC  F017         	call	_GrzejOFF	;wreg free
  7773                           ;main.c: 3635: VZPauza();
  7774  003D52  DFE7               	call	_VZPauza	;wreg free
  7775                           ;main.c: 3636: if(DtKNF.robg==0)
  7776  003D54  EE00  F092         	lfsr	0,_DtKNF+14
  7777  003D58  50EF               	movf	indf0,w,c
  7778  003D5A  E10C               	bnz	l932
  7779                           ;main.c: 3637: {
  7780  003D5C  C19C  FFE8         	movff	_M+34,wreg
  7781  003D60  0A05               	xorlw	5
  7782  003D62  E108               	bnz	l932
  7783                           ;main.c: 3639: {
  7784  003D64  0EC0               	movlw	192
  7785  003D66  0100               	movlb	__Lparam shr (0+8)
  7786  003D68  6FD9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  7787  003D6A  6BDA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  7788  003D6C  C19C  F0DB         	movff	_M+34,?_eeprom_write+2
  7789  003D70  ECB2  F072         	call	_eeprom_write	;wreg free
  7790  003D74                     l932:
  7791                           ;main.c: 3641: }
  7792  003D74  0E00               	movlw	0
  7793  003D76  0101               	movlb	(_M+34) shr (0+8)
  7794  003D78  659C               	cpfsgt	(_M+34)& (0+255),b
  7795  003D7A  D00B               	goto	l934
  7796  003D7C  0E04               	movlw	4
  7797  003D7E  619C               	cpfslt	(_M+34)& (0+255),b
  7798  003D80  D008               	goto	l934
  7799  003D82  0EC0               	movlw	192
  7800  003D84  0100               	movlb	__Lparam shr (0+8)
  7801  003D86  6FD9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  7802  003D88  6BDA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  7803  003D8A  C19C  F0DB         	movff	_M+34,?_eeprom_write+2
  7804  003D8E  ECB2  F072         	call	_eeprom_write	;wreg free
  7805  003D92                     l934:
  7806                           ;main.c: 3644: M._RUSZ_POMPE=0;
  7807  003D92  0101               	movlb	(_M+17) shr (0+8)
  7808  003D94  958B               	bcf	(_M+17)& (0+255),2,b
  7809                           ;main.c: 3645: M._ROZRUCH=0;
  7810  003D96  958A               	bcf	(_M+16)& (0+255),2,b
  7811                           ;main.c: 3646: M._MODULUJ=0;
  7812  003D98  9B8B               	bcf	(_M+17)& (0+255),5,b
  7813                           ;main.c: 3647: WritePWM(0);
  7814  003D9A  0E00               	movlw	0
  7815  003D9C  EC36  F061         	call	_WritePWM
  7816                           ;main.c: 3648: if(!M._WYLACZ)
  7817  003DA0  0101               	movlb	(_M+16) shr (0+8)
  7818  003DA2  B18A               	btfsc	(_M+16)& (0+255),0,b
  7819  003DA4  D018               	goto	l935
  7820                           ;main.c: 3649: {
  7821  003DA6  6BA2               	clrf	(_M+40)& (0+255),b
  7822                           ;main.c: 3651: switch(DtKNF.tpkt)
  7823  003DA8  D008               	goto	l937
  7824  003DAA                     l939:
  7825  003DAA  D003               	goto	l947
  7826                           ;main.c: 3654: case 2:
  7827                           ;main.c: 3657: break;
  7828  003DAC                     l942:
  7829                           ;main.c: 3660: case 3:
  7830  003DAC  0101               	movlb	(_M+16) shr (0+8)
  7831  003DAE  B38A               	btfsc	(_M+16)& (0+255),1,b
  7832  003DB0  D011               	goto	u13160
  7833                           ;main.c: 3663: else
  7834  003DB2                     l947:
  7835                           ;main.c: 3670: else
  7836  003DB2  A483               	btfss	3971,2,c	;volatile
  7837  003DB4  D010               	goto	l935
  7838  003DB6  0101               	movlb	(_M+16) shr (0+8)
  7839  003DB8  D00D               	goto	u13160
  7840                           ;main.c: 3672: break;
  7841  003DBA                     l937:
  7842  003DBA  C08B  FFE8         	movff	_DtKNF+7,wreg
  7843  003DBE  0A00               	xorlw	0
  7844  003DC0  E0F5               	bz	l942
  7845  003DC2  0A01               	xorlw	1
  7846  003DC4  E0F2               	bz	l939
  7847  003DC6  0A03               	xorlw	3
  7848  003DC8  E0F0               	bz	l939
  7849  003DCA  0A01               	xorlw	1
  7850  003DCC  E0EF               	bz	l942
  7851                           ;main.c: 3665: break;
  7852                           ;main.c: 3666: }
  7853                           ;main.c: 3668: {
  7854  003DCE  0101               	movlb	(_M+16) shr (0+8)
  7855  003DD0  A38A               	btfss	(_M+16)& (0+255),1,b
  7856  003DD2  D7EF               	goto	l947
  7857  003DD4                     u13160:
  7858  003DD4  818A               	bsf	(_M+16)& (0+255),0,b
  7859  003DD6                     l935:
  7860                           ;main.c: 3675: }
  7861  003DD6  0101               	movlb	(_M+27) shr (0+8)
  7862  003DD8  B395               	btfsc	(_M+27)& (0+255),1,b
  7863  003DDA  A683               	btfss	3971,3,c	;volatile
  7864  003DDC  D002               	goto	l950
  7865  003DDE  0101               	movlb	(_M+16) shr (0+8)
  7866  003DE0  8D8A               	bsf	(_M+16)& (0+255),6,b
  7867  003DE2                     l950:
  7868                           ;main.c: 3677: M._RUSZ_PWR=0;
  7869  003DE2  0101               	movlb	(_M+16) shr (0+8)
  7870  003DE4  9B8A               	bcf	(_M+16)& (0+255),5,b
  7871                           ;main.c: 3678: M.HVZ=0;
  7872  003DE6  6BAB               	clrf	(_M+49)& (0+255),b
  7873                           ;main.c: 3679: M.KRS=0;
  7874  003DE8  6BAA               	clrf	(_M+48)& (0+255),b
  7875  003DEA                     l952:
  7876                           ;main.c: 3682: while(1)
  7877                           ;main.c: 3683: {
  7878  003DEA  0004               	clrwdt		;#
  7879                           ;main.c: 3685: PFN._opgprg=0;
  7880  003DEC  0101               	movlb	(_PFN+5) shr (0+8)
  7881  003DEE  995C               	bcf	(_PFN+5)& (0+255),4,b
  7882                           ;main.c: 3686: PFN._opgres=1;
  7883  003DF0  875C               	bsf	(_PFN+5)& (0+255),3,b
  7884                           ;main.c: 3687: PFN._ferr=1;
  7885  003DF2  815C               	bsf	(_PFN+5)& (0+255),0,b
  7886                           ;main.c: 3695: PomiarPCO();
  7887  003DF4  EC15  F048         	call	_PomiarPCO	;wreg free
  7888                           ;main.c: 3696: PomiarPCW();
  7889  003DF8  EC90  F048         	call	_PomiarPCW	;wreg free
  7890                           ;main.c: 3697: PomiarPFN();
  7891  003DFC  ECE5  F048         	call	_PomiarPFN	;wreg free
  7892                           ;main.c: 3698: PomiarCO();
  7893  003E00  ECB0  F044         	call	_PomiarCO	;wreg free
  7894                           ;main.c: 3699: PomiarCW();
  7895  003E04  ECE4  F045         	call	_PomiarCW	;wreg free
  7896                           ;main.c: 3700: PomiarCS();
  7897  003E08  EC16  F049         	call	_PomiarCS	;wreg free
  7898                           ;main.c: 3702: Proba48();
  7899  003E0C  DE8B               	call	_Proba48	;wreg free
  7900                           ;main.c: 3703: Proba48Z3();
  7901  003E0E  DF13               	call	_Proba48Z3	;wreg free
  7902                           ;main.c: 3705: RefInterfaceData();
  7903  003E10  EC52  F00A         	call	_RefInterfaceData	;wreg free
  7904                           ;main.c: 3707: switch(DtKNF.tpkt)
  7905  003E14  D0A7               	goto	l955
  7906  003E16                     l957:
  7907                           ;main.c: 3710: case 2:
  7908  003E16  0101               	movlb	(_M+16) shr (0+8)
  7909  003E18  AB8A               	btfss	(_M+16)& (0+255),5,b
  7910  003E1A  B38A               	btfsc	(_M+16)& (0+255),1,b
  7911  003E1C  D007               	goto	l958
  7912  003E1E  0E0D               	movlw	13
  7913  003E20  ECA6  F068         	call	_RdPrt
  7914  003E24  E303               	bnc	l958
  7915  003E26  EC69  F013         	call	_ToObiegCO	;wreg free
  7916  003E2A  D007               	goto	l959
  7917  003E2C                     l958:
  7918                           ;main.c: 3714: else
  7919  003E2C  0101               	movlb	(_M+16) shr (0+8)
  7920  003E2E  A38A               	btfss	(_M+16)& (0+255),1,b
  7921  003E30  B18A               	btfsc	(_M+16)& (0+255),0,b
  7922  003E32  D003               	goto	l959
  7923  003E34  A78A               	btfss	(_M+16)& (0+255),3,b
  7924  003E36  EC90  F013         	call	_ToObiegCW	;wreg free
  7925  003E3A                     l959:
  7926                           ;main.c: 3717: if(!M._WYLACZ&&RD2)
  7927  003E3A  0101               	movlb	(_M+16) shr (0+8)
  7928  003E3C  A18A               	btfss	(_M+16)& (0+255),0,b
  7929  003E3E  A483               	btfss	3971,2,c	;volatile
  7930  003E40  D09F               	goto	l954
  7931                           ;main.c: 3718: {
  7932  003E42  818A               	bsf	(_M+16)& (0+255),0,b
  7933                           ;main.c: 3720: }
  7934  003E44  D09D               	goto	l954
  7935  003E46                     l962:
  7936                           ;main.c: 3722: }
  7937                           ;main.c: 3724: {
  7938  003E46  0101               	movlb	(_M+16) shr (0+8)
  7939  003E48  B38A               	btfsc	(_M+16)& (0+255),1,b
  7940  003E4A  D007               	goto	l963
  7941  003E4C  0E0D               	movlw	13
  7942  003E4E  ECA6  F068         	call	_RdPrt
  7943  003E52  E303               	bnc	l963
  7944  003E54  EC69  F013         	call	_ToObiegCO	;wreg free
  7945  003E58  D00C               	goto	l964
  7946  003E5A                     l963:
  7947                           ;main.c: 3727: else
  7948  003E5A  0101               	movlb	(_M+16) shr (0+8)
  7949  003E5C  A38A               	btfss	(_M+16)& (0+255),1,b
  7950  003E5E  B18A               	btfsc	(_M+16)& (0+255),0,b
  7951  003E60  D008               	goto	l964
  7952  003E62  B78A               	btfsc	(_M+16)& (0+255),3,b
  7953  003E64  D006               	goto	l964
  7954  003E66  A483               	btfss	3971,2,c	;volatile
  7955  003E68  D002               	goto	u13450
  7956  003E6A  0101               	movlb	(_M+16) shr (0+8)
  7957  003E6C  B98A               	btfsc	(_M+16)& (0+255),4,b
  7958  003E6E                     u13450:
  7959  003E6E  EC90  F013         	call	_ToObiegCW	;wreg free
  7960  003E72                     l964:
  7961                           ;main.c: 3730: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!RD
      +                          2&&!M._WYLACZ&&!M._RUSZ_48&&!M._RUSZ_48Z3)
  7962  003E72  0101               	movlb	(_M+16) shr (0+8)
  7963  003E74  AB8A               	btfss	(_M+16)& (0+255),5,b
  7964  003E76  B38A               	btfsc	(_M+16)& (0+255),1,b
  7965  003E78  D083               	goto	l954
  7966  003E7A  B483               	btfsc	3971,2,c	;volatile
  7967  003E7C  D081               	goto	l954
  7968  003E7E  0101               	movlb	(_M+16) shr (0+8)
  7969  003E80  B18A               	btfsc	(_M+16)& (0+255),0,b
  7970  003E82  D07E               	goto	l954
  7971  003E84  0101               	movlb	(_M+16) shr (0+8)
  7972  003E86  B78A               	btfsc	(_M+16)& (0+255),3,b
  7973  003E88  D07B               	goto	l954
  7974  003E8A  0101               	movlb	(_M+16) shr (0+8)
  7975  003E8C  B98A               	btfsc	(_M+16)& (0+255),4,b
  7976  003E8E  D078               	goto	l954
  7977                           ;main.c: 3731: {
  7978  003E90  0101               	movlb	(_M+27) shr (0+8)
  7979  003E92  BF95               	btfsc	(_M+27)& (0+255),7,b
  7980  003E94  D075               	goto	l954
  7981  003E96  0E0D               	movlw	13
  7982  003E98  ECA6  F068         	call	_RdPrt
  7983  003E9C  D05E               	goto	L15
  7984                           ;main.c: 3733: {
  7985                           ;main.c: 3735: RD2=1;
  7986                           ;main.c: 3736: }
  7987  003E9E                     l968:
  7988                           ;main.c: 3739: }
  7989                           ;main.c: 3741: {
  7990  003E9E  0101               	movlb	(_M+16) shr (0+8)
  7991  003EA0  B38A               	btfsc	(_M+16)& (0+255),1,b
  7992  003EA2  D007               	goto	l969
  7993  003EA4  0E0D               	movlw	13
  7994  003EA6  ECA6  F068         	call	_RdPrt
  7995  003EAA  E303               	bnc	l969
  7996  003EAC  EC69  F013         	call	_ToObiegCO	;wreg free
  7997  003EB0  D014               	goto	l970
  7998  003EB2                     l969:
  7999                           ;main.c: 3744: else
  8000  003EB2  0101               	movlb	(_M+16) shr (0+8)
  8001  003EB4  B38A               	btfsc	(_M+16)& (0+255),1,b
  8002  003EB6  D007               	goto	l971
  8003  003EB8  0E0A               	movlw	10
  8004  003EBA  ECA6  F068         	call	_RdPrt
  8005  003EBE  E303               	bnc	l971
  8006  003EC0  EC90  F013         	call	_ToObiegCW	;wreg free
  8007  003EC4  D00A               	goto	l970
  8008  003EC6                     l971:
  8009                           ;main.c: 3746: else
  8010  003EC6  0101               	movlb	(_M+16) shr (0+8)
  8011  003EC8  A38A               	btfss	(_M+16)& (0+255),1,b
  8012  003ECA  B483               	btfsc	3971,2,c	;volatile
  8013  003ECC  D006               	goto	l970
  8014  003ECE  B18A               	btfsc	(_M+16)& (0+255),0,b
  8015  003ED0  D004               	goto	l970
  8016  003ED2  0101               	movlb	(_M+16) shr (0+8)
  8017  003ED4  A78A               	btfss	(_M+16)& (0+255),3,b
  8018  003ED6  EC90  F013         	call	_ToObiegCW	;wreg free
  8019  003EDA                     l970:
  8020                           ;main.c: 3749: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!RD
      +                          2&&!M._WYLACZ&&!M._RUSZ_48)
  8021  003EDA  0101               	movlb	(_M+16) shr (0+8)
  8022  003EDC  AB8A               	btfss	(_M+16)& (0+255),5,b
  8023  003EDE  B38A               	btfsc	(_M+16)& (0+255),1,b
  8024  003EE0  D04F               	goto	l954
  8025  003EE2  B483               	btfsc	3971,2,c	;volatile
  8026  003EE4  D04D               	goto	l954
  8027  003EE6  0101               	movlb	(_M+16) shr (0+8)
  8028  003EE8  B18A               	btfsc	(_M+16)& (0+255),0,b
  8029  003EEA  D04A               	goto	l954
  8030  003EEC  0101               	movlb	(_M+16) shr (0+8)
  8031  003EEE  B78A               	btfsc	(_M+16)& (0+255),3,b
  8032  003EF0  D047               	goto	l954
  8033                           ;main.c: 3750: {
  8034  003EF2  0101               	movlb	(_M+27) shr (0+8)
  8035  003EF4  BF95               	btfsc	(_M+27)& (0+255),7,b
  8036  003EF6  D004               	goto	u13841
  8037  003EF8  0E0D               	movlw	13
  8038  003EFA  ECA6  F068         	call	_RdPrt
  8039  003EFE  E22E               	bc	u14100
  8040  003F00                     u13841:
  8041  003F00  0101               	movlb	(_M+27) shr (0+8)
  8042  003F02  AF95               	btfss	(_M+27)& (0+255),7,b
  8043  003F04  D03D               	goto	l954
  8044  003F06  0E0A               	movlw	10
  8045  003F08  ECA6  F068         	call	_RdPrt
  8046  003F0C  D026               	goto	L15
  8047                           ;main.c: 3752: {
  8048                           ;main.c: 3754: RD2=1;
  8049                           ;main.c: 3755: }
  8050  003F0E                     l976:
  8051                           ;main.c: 3758: }
  8052                           ;main.c: 3760: {
  8053  003F0E  0101               	movlb	(_M+16) shr (0+8)
  8054  003F10  B38A               	btfsc	(_M+16)& (0+255),1,b
  8055  003F12  D007               	goto	l977
  8056  003F14  0E0D               	movlw	13
  8057  003F16  ECA6  F068         	call	_RdPrt
  8058  003F1A  E303               	bnc	l977
  8059  003F1C  EC69  F013         	call	_ToObiegCO	;wreg free
  8060  003F20  D00A               	goto	l978
  8061  003F22                     l977:
  8062                           ;main.c: 3763: else
  8063  003F22  0101               	movlb	(_M+16) shr (0+8)
  8064  003F24  A38A               	btfss	(_M+16)& (0+255),1,b
  8065  003F26  B483               	btfsc	3971,2,c	;volatile
  8066  003F28  D006               	goto	l978
  8067  003F2A  B18A               	btfsc	(_M+16)& (0+255),0,b
  8068  003F2C  D004               	goto	l978
  8069  003F2E  0101               	movlb	(_M+16) shr (0+8)
  8070  003F30  A78A               	btfss	(_M+16)& (0+255),3,b
  8071  003F32  EC90  F013         	call	_ToObiegCW	;wreg free
  8072  003F36                     l978:
  8073                           ;main.c: 3766: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!RD
      +                          2&&!M._WYLACZ&&!M._RUSZ_48)
  8074  003F36  0101               	movlb	(_M+16) shr (0+8)
  8075  003F38  AB8A               	btfss	(_M+16)& (0+255),5,b
  8076  003F3A  B38A               	btfsc	(_M+16)& (0+255),1,b
  8077  003F3C  D021               	goto	l954
  8078  003F3E  B483               	btfsc	3971,2,c	;volatile
  8079  003F40  D01F               	goto	l954
  8080  003F42  0101               	movlb	(_M+16) shr (0+8)
  8081  003F44  B18A               	btfsc	(_M+16)& (0+255),0,b
  8082  003F46  D01C               	goto	l954
  8083  003F48  0101               	movlb	(_M+16) shr (0+8)
  8084  003F4A  B78A               	btfsc	(_M+16)& (0+255),3,b
  8085  003F4C  D019               	goto	l954
  8086                           ;main.c: 3767: {
  8087  003F4E  0101               	movlb	(_M+27) shr (0+8)
  8088  003F50  BF95               	btfsc	(_M+27)& (0+255),7,b
  8089  003F52  D016               	goto	l954
  8090  003F54  0E0D               	movlw	13
  8091  003F56  ECA6  F068         	call	_RdPrt
  8092  003F5A                     L15:
  8093  003F5A  E312               	bnc	l954
  8094  003F5C                     u14100:
  8095                           ;main.c: 3769: {
  8096  003F5C  0101               	movlb	(_M+16) shr (0+8)
  8097  003F5E  818A               	bsf	(_M+16)& (0+255),0,b
  8098                           ;main.c: 3771: RD2=1;
  8099  003F60  8483               	bsf	3971,2,c	;volatile
  8100                           ;main.c: 3772: }
  8101  003F62  D00E               	goto	l954
  8102  003F64                     l955:
  8103  003F64  C08B  FFE8         	movff	_DtKNF+7,wreg
  8104  003F68  0A00               	xorlw	0
  8105  003F6A  E099               	bz	l968
  8106  003F6C  0A01               	xorlw	1
  8107  003F6E  E101 D752          	bz	l957
  8108  003F72  0A03               	xorlw	3
  8109  003F74  E101 D74F          	bz	l957
  8110  003F78  0A01               	xorlw	1
  8111  003F7A  E101 D764          	bz	l962
  8112  003F7E  D7C7               	goto	l976
  8113  003F80                     l954:
  8114                           ;main.c: 3778: if(M._ZMKCOCW) ZmienKCOKCW();
  8115  003F80  0101               	movlb	(_M+16) shr (0+8)
  8116  003F82  B38A               	btfsc	(_M+16)& (0+255),1,b
  8117  003F84  DC06               	call	_ZmienKCOKCW	;wreg free
  8118                           ;main.c: 3779: if(M._WYLACZ) Wylacz();
  8119  003F86  0101               	movlb	(_M+16) shr (0+8)
  8120  003F88  B18A               	btfsc	(_M+16)& (0+255),0,b
  8121  003F8A  EC9F  F019         	call	_Wylacz	;wreg free
  8122                           ;main.c: 3780: if(M._VWYBIEG) VWybieg();
  8123  003F8E  0101               	movlb	(_M+16) shr (0+8)
  8124  003F90  BD8A               	btfsc	(_M+16)& (0+255),6,b
  8125  003F92  EC14  F01B         	call	_VWybieg	;wreg free
  8126                           ;main.c: 3781: if(M._RUSZ_48) Rusz48();
  8127  003F96  0101               	movlb	(_M+16) shr (0+8)
  8128  003F98  B78A               	btfsc	(_M+16)& (0+255),3,b
  8129  003F9A  DDD9               	call	_Rusz48	;wreg free
  8130                           ;main.c: 3782: if(M._RUSZ_48Z3) Rusz48Z3();
  8131  003F9C  0101               	movlb	(_M+16) shr (0+8)
  8132  003F9E  B98A               	btfsc	(_M+16)& (0+255),4,b
  8133  003FA0  DE6B               	call	_Rusz48Z3	;wreg free
  8134                           ;main.c: 3785: if(KeyRes())
  8135  003FA2  DE93               	call	_KeyRes	;wreg free
  8136  003FA4  E201 D721          	bnc	l952
  8137                           ;main.c: 3786: {
  8138  003FA8  9683               	bcf	3971,3,c	;volatile
  8139                           ;main.c: 3788: RD2=0;
  8140  003FAA  9483               	bcf	3971,2,c	;volatile
  8141                           ;main.c: 3789: ToReset();
  8142  003FAC  D801               	call	_ToReset	;wreg free
  8143  003FAE  D71D               	goto	l952
  8144  003FB0                     __end_of_ErrPTG:
  8145                           ;main.c: 3794: void ToReset(void)
  8146                           ;main.c: 3795: {
  8147  003FB0                     _ToReset:
  8148  000000                     
  8149                           ;main.c: 3796: RD3=0;
  8150  003FB0  9683               	bcf	3971,3,c	;volatile
  8151                           ;main.c: 3797: RD2=0;
  8152  003FB2  9483               	bcf	3971,2,c	;volatile
  8153                           ;main.c: 3798: EndErr();
  8154  003FB4  ECC2  F063         	call	_EndErr	;wreg free
  8155                           ;main.c: 3799: PFN._opgprg=0;
  8156  003FB8  0101               	movlb	(_PFN+5) shr (0+8)
  8157  003FBA  995C               	bcf	(_PFN+5)& (0+255),4,b
  8158                           ;main.c: 3800: PFN._opgres=0;
  8159  003FBC  975C               	bcf	(_PFN+5)& (0+255),3,b
  8160                           ;main.c: 3803: eeprom_write(0x00C0,0x00);
  8161  003FBE  0EC0               	movlw	192
  8162  003FC0  0100               	movlb	__Lparam shr (0+8)
  8163  003FC2  6FD9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  8164  003FC4  6BDA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  8165  003FC6  6BDB               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  8166  003FC8  ECB2  F072         	call	_eeprom_write	;wreg free
  8167                           ;main.c: 3804: StartRTS(2);
  8168  003FCC  0E02               	movlw	2
  8169  003FCE  ECA4  F06E         	call	_StartRTS
  8170                           ;main.c: 3805: while(RTS(2)<1)
  8171  003FD2                     l989:
  8172  003FD2  0E02               	movlw	2
  8173  003FD4  ECB6  F06E         	call	_RTS
  8174  003FD8  6E00               	movwf	btemp,c
  8175  003FDA  0E01               	movlw	1
  8176  003FDC  5C00               	subwf	btemp,w,c
  8177  003FDE  E202               	bc	l992
  8178                           ;main.c: 3806: {
  8179  003FE0  0004               	clrwdt		;#
  8180  003FE2  D7F7               	goto	l989
  8181                           ;main.c: 3809: }
  8182  003FE4                     l992:
  8183  003FE4  D7FF               	goto	l992
  8184  003FE6                     __end_of_ToReset:
  8185                           ;main.c: 3814: void InitGlobal(void)
  8186                           ;main.c: 3815: {
  8187  003FE6                     _InitGlobal:
  8188  000000                     
  8189                           ;main.c: 3817: IPEN=1;
  8190  003FE6  8ED0               	bsf	4048,7,c
  8191                           ;main.c: 3819: GIEH=1;
  8192  003FE8  8EF2               	bsf	intcon,7,c
  8193                           ;main.c: 3820: GIEL=1;
  8194  003FEA  8CF2               	bsf	intcon,6,c
  8195                           ;main.c: 3821: }
  8196  003FEC  0012               	return	
  8197  003FEE                     __end_of_InitGlobal:
  8198  000000                     
  8199  000000                     
  8200  000000                     
  8201  000000                     
  8202  000000                     
  8203  000000                     
  8204  000000                     
  8205  000000                     
  8206  000000                     
  8207  000000                     
  8208  000000                     
  8209  000000                     
  8210  000000                     
  8211  000000                     
  8212  000000                     
  8213  000000                     
  8214  000000                     
  8215  000000                     
  8216  000000                     
  8217  000000                     
  8218  000000                     
  8219  000000                     
  8220  000000                     
  8221  000000                     
  8222  000000                     
  8223  000000                     
  8224  000000                     
  8225  000000                     
  8226  000000                     
  8227  000000                     
  8228  000000                     
  8229  000000                     
  8230  000000                     
  8231  000000                     
  8232  000000                     
  8233  000000                     
  8234  000000                     
  8235  000000                     
  8236  000000                     
  8237  000000                     
  8238  000000                     
  8239  000000                     
  8240  000000                     
  8241  000000                     
  8242  000000                     
  8243  000000                     
  8244  000000                     
  8245  000000                     
  8246  000000                     
  8247  000000                     
  8248  000000                     
  8249  000000                     
  8250  000000                     
  8251  000000                     
  8252  000000                     
  8253  000000                     
  8254  000000                     
  8255  000000                     
  8256  000000                     
  8257  000000                     
  8258  000000                     
  8259  000000                     
  8260  000000                     
  8261  000000                     
  8262  000000                     
  8263  000000                     
  8264  000000                     
  8265  000000                     
  8266  000000                     
  8267  000000                     
  8268  000000                     
  8269  000000                     
  8270  000000                     
  8271  000000                     
  8272  000000                     
  8273  000000                     
  8274  000000                     
  8275  000000                     
  8276  000000                     
  8277  000000                     
  8278  000000                     
  8279  000000                     
  8280  000000                     
  8281  000000                     
  8282  000000                     
  8283  000000                     
  8284  000000                     
  8285  000000                     
  8286  000000                     
  8287  000000                     
  8288  000000                     
  8289  000000                     
  8290  000000                     
  8291  000000                     
  8292  000000                     
  8293  000000                     
  8294  000000                     
  8295  000000                     
  8296  000000                     
  8297  000000                     
  8298  000000                     
  8299  000000                     
  8300  000000                     
  8301  000000                     
  8302  000000                     
  8303  000000                     
  8304  000000                     
  8305  000000                     
  8306  000000                     
  8307  000000                     
  8308  000000                     
  8309  000000                     
  8310  000000                     
  8311  000000                     
  8312  000000                     
  8313  000000                     
  8314  000000                     
  8315  000000                     
  8316  000000                     
  8317  000000                     
  8318  000000                     
  8319  000000                     
  8320  000000                     
  8321  000000                     
  8322  000000                     
  8323  000000                     
  8324  000000                     
  8325  000000                     
  8326  000000                     
  8327  000000                     
  8328  000000                     
  8329  000000                     
  8330  000000                     
  8331  000000                     
  8332  000000                     
  8333  000000                     
  8334  000000                     
  8335  000000                     
  8336  000000                     
  8337  000000                     
  8338  000000                     
  8339  000000                     
  8340  000000                     
  8341  000000                     
  8342  000000                     
  8343  000000                     
  8344  000000                     
  8345  000000                     
  8346  000000                     
  8347  000000                     
  8348  000000                     
  8349  000000                     
  8350  000000                     
  8351  000000                     
  8352  000000                     
  8353  000000                     
  8354  000000                     
  8355  000000                     
  8356  000000                     
  8357  000000                     
  8358  000000                     
  8359  000000                     
  8360  000000                     
  8361  000000                     
  8362  000000                     
  8363  000000                     
  8364  000000                     
  8365  000000                     
  8366  000000                     
  8367  000000                     
  8368  000000                     
  8369  000000                     
  8370  000000                     
  8371  000000                     
  8372  000000                     
  8373  000000                     
  8374  000000                     
  8375  000000                     
  8376  000000                     
  8377  000000                     
  8378  000000                     
  8379  000000                     
  8380  000000                     
  8381  000000                     
  8382  000000                     
  8383  000000                     
  8384  000000                     
  8385  000000                     
  8386  000000                     
  8387  000000                     
  8388  000000                     
  8389  000000                     
  8390  000000                     
  8391  000000                     
  8392  000000                     
  8393  000000                     
  8394  000000                     
  8395  000000                     
  8396  000000                     
  8397  000000                     
  8398  000000                     
  8399  000000                     
  8400  000000                     
  8401  000000                     
  8402  000000                     
  8403  000000                     
  8404  000000                     
  8405  000000                     
  8406  000000                     
  8407  000000                     
  8408  000000                     
  8409  000000                     
  8410  000000                     
  8411  000000                     
  8412  000000                     
  8413  000000                     
  8414  000000                     
  8415  000000                     
  8416  000000                     
  8417  000000                     
  8418  000000                     
  8419  000000                     
  8420  000000                     
  8421  000000                     
  8422  000000                     
  8423  000000                     
  8424  000000                     
  8425  000000                     
  8426  000000                     
  8427  000000                     
  8428  000000                     
  8429  000000                     
  8430  000000                     
  8431  000000                     
  8432  000000                     
  8433  000000                     
  8434  000000                     
  8435  000000                     
  8436  000000                     
  8437  000000                     
  8438  000000                     
  8439  000000                     
  8440  000000                     
  8441  000000                     
  8442  000000                     
  8443  000000                     
  8444  000000                     
  8445  000000                     
  8446  000000                     
  8447  000000                     
  8448  000000                     
  8449  000000                     
  8450  000000                     
  8451  000000                     
  8452  000000                     
  8453  000000                     
  8454  000000                     
  8455  000000                     
  8456  000000                     
  8457  000000                     
  8458  000000                     
  8459  000000                     
  8460  000000                     
  8461  000000                     
  8462  000000                     
  8463  000000                     
  8464  000000                     
  8465  000000                     
  8466  000000                     
  8467  000000                     
  8468  000000                     
  8469  000000                     
  8470  000000                     
  8471  000000                     
  8472  000000                     
  8473  000000                     
  8474  000000                     
  8475  000000                     
  8476  000000                     
  8477  000000                     
  8478  000000                     
  8479  000000                     
  8480  000000                     
  8481  000000                     
  8482  000000                     
  8483  000000                     
  8484  000000                     
  8485  000000                     
  8486  000000                     
  8487  000000                     
  8488  000000                     
  8489  000000                     
  8490  000000                     
  8491  000000                     
  8492  000000                     
  8493  000000                     
  8494  000000                     
  8495  000000                     
  8496  000000                     
  8497  000000                     
  8498  000000                     
  8499  000000                     
  8500  000000                     
  8501  000000                     
  8502  000000                     
  8503  000000                     
  8504  000000                     
  8505  000000                     
  8506  000000                     
  8507  000000                     
  8508  000000                     
  8509  000000                     
  8510  000000                     
  8511  000000                     
  8512  000000                     
  8513  000000                     
  8514  000000                     
  8515  000000                     
  8516  000000                     
  8517  000000                     
  8518  000000                     
  8519  000000                     
  8520  000000                     
  8521  000000                     
  8522  000000                     
  8523  000000                     
  8524  000000                     
  8525  000000                     
  8526  000000                     
  8527  000000                     
  8528  000000                     
  8529  000000                     
  8530  000000                     
  8531  000000                     
  8532  000000                     
  8533  000000                     
  8534  000000                     
  8535  000000                     
  8536  000000                     
  8537  000000                     
  8538  000000                     
  8539  000000                     
  8540  000000                     
  8541  000000                     
  8542  000000                     
  8543  000000                     
  8544  000000                     
  8545  000000                     
  8546  000000                     
  8547  000000                     
  8548  000000                     
  8549  000000                     
  8550  000000                     
  8551  000000                     
  8552  000000                     
  8553  000000                     
  8554  000000                     
  8555  000000                     
  8556  000000                     
  8557  000000                     
  8558  000000                     
  8559  000000                     
  8560  000000                     
  8561  000000                     
  8562  000000                     
  8563  000000                     
  8564  000000                     
  8565  000000                     
  8566  000000                     
  8567  000000                     
  8568  000000                     
  8569  000000                     
  8570  000000                     
  8571  000000                     
  8572  000000                     
  8573  000000                     
  8574  000000                     
  8575  000000                     
  8576  000000                     
  8577  000000                     
  8578  000000                     
  8579  000000                     
  8580  000000                     
  8581  000000                     
  8582  000000                     
  8583  000000                     
  8584  000000                     
  8585  000000                     
  8586  000000                     
  8587  000000                     
  8588  000000                     
  8589  000000                     
  8590  000000                     
  8591  000000                     
  8592  000000                     
  8593  000000                     
  8594  000000                     
  8595  000000                     
  8596  000000                     
  8597  000000                     
  8598  000000                     
  8599  000000                     
  8600  000000                     
  8601  000000                     
  8602  000000                     
  8603  000000                     
  8604  000000                     
  8605  000000                     
  8606  000000                     
  8607  000000                     
  8608  000000                     
  8609  000000                     
  8610  000000                     
  8611  000000                     
  8612  000000                     
  8613  000000                     
  8614  000000                     
  8615  000000                     
  8616  000000                     
  8617  000000                     
  8618  000000                     
  8619  000000                     
  8620  000000                     
  8621  000000                     
  8622  000000                     
  8623  000000                     
  8624  000000                     
  8625  000000                     
  8626  000000                     
  8627  000000                     
  8628  000000                     
  8629  000000                     
  8630  000000                     
  8631  000000                     
  8632  000000                     
  8633  000000                     
  8634                           
  8635                           	psect	eeprom_data
  8636                           ;main.h: 127: extern void GoldenEye(void);
  8637                           ;main.h: 130: void InitGlobal(void);
  8638                           ;main.h: 131: void ErrDTF(void);
  8639                           ;main.h: 132: void ErrPTG(void);
  8640                           ;main.h: 133: void ToReset(void);
  8641                           ;main.h: 134: void DecWSW(void);
  8642                           ;main.h: 135: void DecERR(void);
  8643                           ;main.h: 136: void DecSTR(void);
  8644                           ;main.h: 137: void DecRozruch(void);
  8645                           ;main.h: 138: void SetRozruch(void);
  8646                           ;main.h: 139: void DecWylacz(void);
  8647                           ;main.h: 140: void SetWylacz(void);
  8648                           ;main.h: 141: void RuszPlomien(void);
  8649                           ;main.h: 142: void ReloadPlomien(void);
  8650                           ;main.h: 143: void RuszCiag(void);
  8651                           ;main.h: 144: void ReloadCiag(void);
  8652                           ;main.h: 145: void Proba48(void);
  8653                           ;main.h: 146: void Rusz48(void);
  8654                           ;main.h: 147: void Proba48Z3(void);
  8655                           ;main.h: 148: void Rusz48Z3(void);
  8656                           ;main.h: 149: void Rozruch(void);
  8657                           ;main.h: 150: void DecyzjaPLM(void);
  8658                           ;main.h: 151: void DecyzjaPLM2(void);
  8659                           ;main.h: 152: void VWybieg(void);
  8660                           ;main.h: 153: void ZmienKCOKCW(void);
  8661                           ;main.h: 154: void FunkcjaSerwisowa(void);
  8662                           ;main.h: 155: void KolejkaPobudzen(void);
  8663                           ;main.h: 156: void BlokadaL3(void);
  8664                           ;main.h: 157: void Blokada15S(void);
  8665                           ;main.h: 158: void ToObiegCW(void);
  8666                           ;main.h: 159: void ToObiegCO(void);
  8667                           ;main.h: 160: void Wylacz(void);
  8668                           ;main.h: 161: void RuszPWR(void);
  8669                           ;main.h: 162: void ClearData(void);
  8670                           ;main.h: 163: void SetLoMod(void);
  8671                           ;main.h: 164: void RestartFltPrt(void);
  8672                           ;main.h: 165: void ClearDiode(void);
  8673                           ;main.h: 166: void DecyzjaAntyLeg(void);
  8674                           ;main.h: 167: void DetekcjaPrzeplywuWG(void);
  8675                           ;main.h: 168: void OczekujNaPrzeplywWG(void);
  8676                           ;main.h: 169: void RefInterfaceData(void);
  8677                           ;main.h: 170: void GrzejON(void);
  8678                           ;main.h: 171: void GrzejOFF(void);
  8679                           ;main.h: 174: extern void InitOsc(void);
  8680                           ;main.h: 176: extern void InitAC(void);
  8681                           ;main.h: 178: extern void InitWsw(void);
  8682                           ;main.h: 179: extern bit GetPoz(const unsigned c
      +                          har nrkol,const unsigned char nrpoz);
  8683                           ;main.h: 181: extern void InitPWM(void);
  8684                           ;main.h: 182: extern void WritePWM(const unsigne
      +                          d char tpwm);
  8685                           ;main.h: 183: extern void WritePWM2(const unsign
      +                          ed char tpwm);
  8686                           ;main.h: 184: extern void WriteOPWM(unsigned cha
      +                          r tpwm);
  8687                           ;main.h: 186: extern void ClsScr(void);
  8688                           ;main.h: 187: extern void EndClsScr(void);
  8689                           ;main.h: 188: extern void TestScr(void);
  8690                           ;main.h: 189: extern void EndTestScr(void);
  8691                           ;main.h: 190: extern void ClsScr(void);
  8692                           ;main.h: 191: extern void EndClsScr(void);
  8693                           ;main.h: 192: extern void SetErr(const unsigned 
      +                          char kod);
  8694                           ;main.h: 193: extern void SetMsg(const unsigned 
      +                          char kod);
  8695                           ;main.h: 194: extern void PrintErr(const unsigne
      +                          d char kod, const unsigned char pls);
  8696                           ;main.h: 195: extern void PrintErrCs(const unsig
      +                          ned char kod,const unsigned char cs, const unsig
      +                          ned char pls);
  8697                           ;main.h: 196: extern void PrintErrTm(const unsig
      +                          ned char kod,const unsigned char tm, const unsig
      +                          ned char pls);
  8698                           ;main.h: 197: extern void EndErr(void);
  8699                           ;main.h: 198: extern void PrintPR(const unsigned
      +                           char lkod,unsigned char nkod,unsigned char tryb
      +                          );
  8700                           ;main.h: 199: extern void EndPR(void);
  8701                           ;main.h: 200: extern void PrintNstCO(const unsig
      +                          ned char nst);
  8702                           ;main.h: 201: extern void PrintNstCW(const unsig
      +                          ned char nst);
  8703                           ;main.h: 202: extern void PrintNstKt(const unsig
      +                          ned char nst);
  8704                           ;main.h: 203: extern void EndNst(void);
  8705                           ;main.h: 204: extern void SetL3(void);
  8706                           ;main.h: 205: extern void PrintL3(void);
  8707                           ;main.h: 206: extern void EndL3(void);
  8708                           ;main.h: 207: extern void PrintTdzCO(const unsig
      +                          ned char tm);
  8709                           ;main.h: 208: extern void EndTdzCO(void);
  8710                           ;main.h: 209: extern void PrintTdzCW(const unsig
      +                          ned char tm);
  8711                           ;main.h: 210: extern void EndTdzCW(void);
  8712                           ;main.h: 211: extern void PrintOFF(void);
  8713                           ;main.h: 212: extern void EndOFF(void);
  8714                           ;main.h: 213: extern void PrintCS(const unsigned
      +                           char cs);
  8715                           ;main.h: 214: extern void EndCS(void);
  8716                           ;main.h: 215: extern void PrintCW(const unsigned
      +                           char tm);
  8717                           ;main.h: 216: extern void EndCW(void);
  8718                           ;main.h: 217: extern void PrintCO(const unsigned
      +                           char tm);
  8719                           ;main.h: 218: extern void PrintHex(const unsigne
      +                          d char tm);
  8720                           ;main.h: 219: extern void SetDiode(unsigned char
      +                           nrd, unsigned char stn);
  8721                           ;main.h: 220: extern void RefreshNst(const unsig
      +                          ned char nst);
  8722                           ;main.h: 222: extern bit GetBit(const unsigned c
      +                          har data,const unsigned char nbit);
  8723                           ;main.h: 223: extern void BitSet(unsigned char *
      +                          data, const unsigned char nbit,const unsigned ch
      +                          ar bt);
  8724                           ;main.h: 224: extern void BitSet2(unsigned char 
      +                          *data, const unsigned char nbit,const unsigned c
      +                          har bt);
  8725                           ;main.h: 226: extern void StartRTG(const unsigne
      +                          d char Index);
  8726                           ;main.h: 227: extern unsigned char RTG(const uns
      +                          igned char Index);
  8727                           ;main.h: 228: extern void StartRTS(const unsigne
      +                          d char Index);
  8728                           ;main.h: 229: extern unsigned char RTS(const uns
      +                          igned char Index);
  8729                           ;main.h: 230: extern void StartRTdS(const unsign
      +                          ed char Index);
  8730                           ;main.h: 231: extern unsigned char RTdS(const un
      +                          signed char Index);
  8731                           ;main.h: 233: extern void InitTimer1(void);
  8732                           ;main.h: 235: extern void InitPort(void);
  8733                           ;main.h: 236: extern bit RdPrt(const unsigned ch
      +                          ar Index);
  8734                           ;main.h: 237: extern void SetPrt(const unsigned 
      +                          char Index, const unsigned char nw);
  8735                           ;main.h: 238: extern void RefPrt(const unsigned 
      +                          char Index);
  8736  F00000  63 63 62 62 61 60  	db	99,99,98,98,97,96,95,95	;#
      +       5F 5F              
  8737                           ;eeprom.h: 156: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "94" "," "93" "," "92" ","
      +                           "92" "," "91" "," "90" "," "90" "," "89");
  8738  F00008  5E 5D 5C 5C 5B 5A  	db	94,93,92,92,91,90,90,89	;#
      +       5A 59              
  8739                           ;eeprom.h: 157: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "88" "," "88" "," "87" ","
      +                           "87" "," "86" "," "85" "," "85" "," "84");
  8740  F00010  58 58 57 57 56 55  	db	88,88,87,87,86,85,85,84	;#
      +       55 54              
  8741                           ;eeprom.h: 158: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "84" "," "83" "," "82" ","
      +                           "82" "," "81" "," "81" "," "80" "," "80");
  8742  F00018  54 53 52 52 51 51  	db	84,83,82,82,81,81,80,80	;#
      +       50 50              
  8743                           ;eeprom.h: 159: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "79" "," "79" "," "78" ","
      +                           "77" "," "77" "," "76" "," "76" "," "75");
  8744  F00020  4F 4F 4E 4D 4D 4C  	db	79,79,78,77,77,76,76,75	;#
      +       4C 4B              
  8745                           ;eeprom.h: 160: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "75" "," "74" "," "74" ","
      +                           "73" "," "73" "," "72" "," "72" "," "71");
  8746  F00028  4B 4A 4A 49 49 48  	db	75,74,74,73,73,72,72,71	;#
      +       48 47              
  8747                           ;eeprom.h: 161: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "71" "," "70" "," "70" ","
      +                           "70" "," "69" "," "69" "," "68" "," "68");
  8748  F00030  47 46 46 46 45 45  	db	71,70,70,70,69,69,68,68	;#
      +       44 44              
  8749                           ;eeprom.h: 162: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "67" "," "67" "," "66" ","
      +                           "66" "," "65" "," "65" "," "64" "," "64");
  8750  F00038  43 43 42 42 41 41  	db	67,67,66,66,65,65,64,64	;#
      +       40 40              
  8751                           ;eeprom.h: 163: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "64" "," "63" "," "63" ","
      +                           "62" "," "62" "," "61" "," "61" "," "61");
  8752  F00040  40 3F 3F 3E 3E 3D  	db	64,63,63,62,62,61,61,61	;#
      +       3D 3D              
  8753                           ;eeprom.h: 164: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "60" "," "60" "," "59" ","
      +                           "59" "," "58" "," "58" "," "57" "," "57");
  8754  F00048  3C 3C 3B 3B 3A 3A  	db	60,60,59,59,58,58,57,57	;#
      +       39 39              
  8755                           ;eeprom.h: 165: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "57" "," "56" "," "56" ","
      +                           "55" "," "55" "," "54" "," "54" "," "54");
  8756  F00050  39 38 38 37 37 36  	db	57,56,56,55,55,54,54,54	;#
      +       36 36              
  8757                           ;eeprom.h: 166: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "53" "," "53" "," "52" ","
      +                           "52" "," "52" "," "51" "," "51" "," "50");
  8758  F00058  35 35 34 34 34 33  	db	53,53,52,52,52,51,51,50	;#
      +       33 32              
  8759                           ;eeprom.h: 167: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "50" "," "49" "," "49" ","
      +                           "49" "," "48" "," "48" "," "47" "," "47");
  8760  F00060  32 31 31 31 30 30  	db	50,49,49,49,48,48,47,47	;#
      +       2F 2F              
  8761                           ;eeprom.h: 168: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "46" "," "46" "," "46" ","
      +                           "45" "," "45" "," "44" "," "44" "," "44");
  8762  F00068  2E 2E 2E 2D 2D 2C  	db	46,46,46,45,45,44,44,44	;#
      +       2C 2C              
  8763                           ;eeprom.h: 169: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "43" "," "43" "," "42" ","
      +                           "42" "," "41" "," "41" "," "41" "," "40");
  8764  F00070  2B 2B 2A 2A 29 29  	db	43,43,42,42,41,41,41,40	;#
      +       29 28              
  8765                           ;eeprom.h: 170: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "40" "," "39" "," "39" ","
      +                           "38" "," "38" "," "37" "," "37" "," "37");
  8766  F00078  28 27 27 26 26 25  	db	40,39,39,38,38,37,37,37	;#
      +       25 25              
  8767                           ;eeprom.h: 171: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "36" "," "36" "," "35" ","
      +                           "35" "," "34" "," "34" "," "33" "," "33");
  8768  F00080  24 24 23 23 22 22  	db	36,36,35,35,34,34,33,33	;#
      +       21 21              
  8769                           ;eeprom.h: 172: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "32" "," "32" "," "31" ","
      +                           "31" "," "30" "," "30" "," "29" "," "29");
  8770  F00088  20 20 1F 1F 1E 1E  	db	32,32,31,31,30,30,29,29	;#
      +       1D 1D              
  8771                           ;eeprom.h: 173: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "28" "," "28" "," "27" ","
      +                           "27" "," "26" "," "26" "," "25" "," "24");
  8772  F00090  1C 1C 1B 1B 1A 1A  	db	28,28,27,27,26,26,25,24	;#
      +       19 18              
  8773                           ;eeprom.h: 174: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "24" "," "23" "," "23" ","
      +                           "22" "," "22" "," "21" "," "21" "," "20");
  8774  F00098  18 17 17 16 16 15  	db	24,23,23,22,22,21,21,20	;#
      +       15 14              
  8775                           ;eeprom.h: 175: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "19" "," "19" "," "18" ","
      +                           "17" "," "17" "," "16" "," "16" "," "15");
  8776  F000A0  13 13 12 11 11 10  	db	19,19,18,17,17,16,16,15	;#
      +       10 0F              
  8777                           ;eeprom.h: 176: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "14" "," "14" "," "13" ","
      +                           "12" "," "11" "," "11" "," "10" "," "09");
  8778  F000A8  0E 0E 0D 0C 0B 0B  	db	14,14,13,12,11,11,10,9	;#
      +       0A 09              
  8779                           ;eeprom.h: 177: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "08" "," "07" "," "06" ","
      +                           "06" "," "05" "," "04" "," "03" "," "02");
  8780  F000B0  08 07 06 06 05 04  	db	8,7,6,6,5,4,3,2	;#
      +       03 02              
  8781                           ;eeprom.h: 178: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "01" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8782  F000B8  01 00 00 00 00 00  	db	1,0,0,0,0,0,0,0	;#
      +       00 00              
  8783                           ;eeprom.h: 208: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "40" "," "99" "," 
      +                          "99" "," "0" "," "3" "," "0" "," "0");
  8784  F000C0  00 28 63 63 00 03  	db	0,40,99,99,0,3,0,0	;#
      +       00 00              
  8785                           ;eeprom.h: 209: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "1" "," "85" "," "60" "," 
      +                          "3" "," "0" "," "0" "," "00" "," "00");
  8786  F000C8  01 55 3C 03 00 00  	db	1,85,60,3,0,0,0,0	;#
      +       00 00              
  8787                           ;eeprom.h: 211: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "20" "," "15" "," 
      +                          "0" "," "5" "," "0" "," "0" "," "0");
  8788  F000D0  00 14 0F 00 05 00  	db	0,20,15,0,5,0,0,0	;#
      +       00 00              
  8789                           ;eeprom.h: 212: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "0" "," "0" "," "0
      +                          " "," "0" "," "0" "," "0" "," "0");
  8790  F000D8  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8791                           ;eeprom.h: 217: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "40" "," "40" "," "39" ","
      +                           "38" "," "38" "," "37" "," "36" "," "36");
  8792  F000E0  28 28 27 26 26 25  	db	40,40,39,38,38,37,36,36	;#
      +       24 24              
  8793                           ;eeprom.h: 218: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "35" "," "34" "," "34" ","
      +                           "33" "," "33" "," "32" "," "32" "," "31");
  8794  F000E8  23 22 22 21 21 20  	db	35,34,34,33,33,32,32,31	;#
      +       20 1F              
  8795                           ;eeprom.h: 219: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "31" "," "30" "," "30" ","
      +                           "29" "," "29" "," "28" "," "28" "," "27");
  8796  F000F0  1F 1E 1E 1D 1D 1C  	db	31,30,30,29,29,28,28,27	;#
      +       1C 1B              
  8797                           ;eeprom.h: 220: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "27" "," "26" "," "26" ","
      +                           "25" "," "25" "," "24" "," "24" "," "23");
  8798  F000F8  1B 1A 1A 19 19 18  	db	27,26,26,25,25,24,24,23	;#
      +       18 17              
  8799                           ;eeprom.h: 221: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "23" "," "22" "," "22" ","
      +                           "22" "," "21" "," "21" "," "20" "," "20");
  8800  F00100  17 16 16 16 15 15  	db	23,22,22,22,21,21,20,20	;#
      +       14 14              
  8801                           ;eeprom.h: 222: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "20" "," "19" "," "19" ","
      +                           "18" "," "18" "," "18" "," "17" "," "17");
  8802  F00108  14 13 13 12 12 12  	db	20,19,19,18,18,18,17,17	;#
      +       11 11              
  8803                           ;eeprom.h: 223: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "17" "," "16" "," "16" ","
      +                           "15" "," "15" "," "15" "," "14" "," "14");
  8804  F00110  11 10 10 0F 0F 0F  	db	17,16,16,15,15,15,14,14	;#
      +       0E 0E              
  8805                           ;eeprom.h: 224: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "14" "," "13" "," "13" ","
      +                           "13" "," "12" "," "12" "," "12" "," "11");
  8806  F00118  0E 0D 0D 0D 0C 0C  	db	14,13,13,13,12,12,12,11	;#
      +       0C 0B              
  8807                           ;eeprom.h: 225: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "11" "," "11" "," "10" ","
      +                           "10" "," "10" "," "9" "," "9" "," "9");
  8808  F00120  0B 0B 0A 0A 0A 09  	db	11,11,10,10,10,9,9,9	;#
      +       09 09              
  8809                           ;eeprom.h: 226: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "8" "," "8" "," "8" "," "7
      +                          " "," "7" "," "7" "," "6" "," "6");
  8810  F00128  08 08 08 07 07 07  	db	8,8,8,7,7,7,6,6	;#
      +       06 06              
  8811                           ;eeprom.h: 227: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "6" "," "5" "," "5" "," "5
      +                          " "," "4" "," "4" "," "4" "," "3");
  8812  F00130  06 05 05 05 04 04  	db	6,5,5,5,4,4,4,3	;#
      +       04 03              
  8813                           ;eeprom.h: 228: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "3" "," "3" "," "2" "," "2
      +                          " "," "2" "," "1" "," "1" "," "1");
  8814  F00138  03 03 02 02 02 01  	db	3,3,2,2,2,1,1,1	;#
      +       01 01              
  8815                           ;eeprom.h: 229: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "1" "," "0" "," "0" "," "0
      +                          " "," "-1" "," "-1" "," "-1" "," "-2");
  8816  F00140  01 00 00 00 FF FF  	db	1,0,0,0,-1,-1,-1,-2	;#
      +       FF FE              
  8817                           ;eeprom.h: 230: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-2" "," "-2" "," "-2" ","
      +                           "-3" "," "-3" "," "-3" "," "-4" "," "-4");
  8818  F00148  FE FE FE FD FD FD  	db	-2,-2,-2,-3,-3,-3,-4,-4	;#
      +       FC FC              
  8819                           ;eeprom.h: 231: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-4" "," "-5" "," "-5" ","
      +                           "-5" "," "-6" "," "-6" "," "-6" "," "-7");
  8820  F00150  FC FB FB FB FA FA  	db	-4,-5,-5,-5,-6,-6,-6,-7	;#
      +       FA F9              
  8821                           ;eeprom.h: 232: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-7" "," "-7" "," "-8" ","
      +                           "-8" "," "-8" "," "-9" "," "-9" "," "-9");
  8822  F00158  F9 F9 F8 F8 F8 F7  	db	-7,-7,-8,-8,-8,-9,-9,-9	;#
      +       F7 F7              
  8823                           ;eeprom.h: 233: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-9" "," "-10" "," "-10" "
      +                          ," "-10" "," "-11" "," "-11" "," "-11" "," "-12"
      +                          );
  8824  F00160  F7 F6 F6 F6 F5 F5  	db	-9,-10,-10,-10,-11,-11,-11,-12	;#
      +       F5 F4              
  8825                           ;eeprom.h: 234: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-12" "," "-13" "," "-13" 
      +                          "," "-13" "," "-13" "," "-14" "," "-14" "," "-14
      +                          ");
  8826  F00168  F4 F3 F3 F3 F3 F2  	db	-12,-13,-13,-13,-13,-14,-14,-14	;#
      +       F2 F2              
  8827                           ;eeprom.h: 235: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-15" "," "-15" "," "-16" 
      +                          "," "-16" "," "-16" "," "-17" "," "-17" "," "-17
      +                          ");
  8828  F00170  F1 F1 F0 F0 F0 EF  	db	-15,-15,-16,-16,-16,-17,-17,-17	;#
      +       EF EF              
  8829                           ;eeprom.h: 236: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-18" "," "-18" "," "-18" 
      +                          "," "-19" "," "-19" "," "-20" "," "-20" "," "-20
      +                          ");
  8830  F00178  EE EE EE ED ED EC  	db	-18,-18,-18,-19,-19,-20,-20,-20	;#
      +       EC EC              
  8831                           ;eeprom.h: 237: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-21" "," "-21" "," "-22" 
      +                          "," "-22" "," "-22" "," "-23" "," "-23" "," "-24
      +                          ");
  8832  F00180  EB EB EA EA EA E9  	db	-21,-21,-22,-22,-22,-23,-23,-24	;#
      +       E9 E8              
  8833                           ;eeprom.h: 238: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-24" "," "-25" "," "-25" 
      +                          "," "-25" "," "-26" "," "-26" "," "-27" "," "-27
      +                          ");
  8834  F00188  E8 E7 E7 E7 E6 E6  	db	-24,-25,-25,-25,-26,-26,-27,-27	;#
      +       E5 E5              
  8835                           ;eeprom.h: 239: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-28" "," "-28" "," "-29" 
      +                          "," "-29" "," "-30" "," "-30" "," "-31" "," "-31
      +                          ");
  8836  F00190  E4 E4 E3 E3 E2 E2  	db	-28,-28,-29,-29,-30,-30,-31,-31	;#
      +       E1 E1              
  8837                           ;eeprom.h: 240: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-32" "," "-33" "," "-33" 
      +                          "," "-34" "," "-35" "," "-35" "," "-36" "," "-37
      +                          ");
  8838  F00198  E0 DF DF DE DD DD  	db	-32,-33,-33,-34,-35,-35,-36,-37	;#
      +       DC DB              
  8839                           ;eeprom.h: 241: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-37" "," "-38" "," "-39" 
      +                          "," "-40" "," "-40" "," "-40" "," "-40" "," "-40
      +                          ");
  8840  F001A0  DB DA D9 D8 D8 D8  	db	-37,-38,-39,-40,-40,-40,-40,-40	;#
      +       D8 D8              
  8841                           
  8842                           	psect	bigbss
  8843  000E97                     F2348:
  8844  000E97                     	ds	1
  8845  000E97                     F2349:
  8846  000E97                     	ds	1
  8847  000E97                     F2350:
  8848  000E97                     	ds	1
  8849  000E97                     F2352:
  8850  000E97                     	ds	1
  8851  000000                     
  8852  000000                     
  8853  000000                     
  8854  000000                     
  8855  000000                     
  8856  000000                     
  8857  000000                     
  8858  000000                     
  8859  000000                     
  8860  000000                     
  8861  000000                     
  8862  000000                     
  8863  000000                     
  8864  000000                     
  8865  000000                     
  8866  000000                     
  8867  000000                     
  8868  000000                     
  8869  000000                     
  8870  000000                     
  8871  000000                     
  8872  000000                     
  8873  000000                     
  8874  000000                     
  8875  000000                     
  8876  000000                     
  8877  000000                     
  8878  000000                     
  8879  000000                     
  8880  000000                     
  8881  000000                     
  8882  000000                     
  8883  000000                     
  8884  000000                     
  8885  000000                     
  8886  000000                     
  8887  000000                     
  8888  000000                     
  8889  000000                     
  8890  000000                     
  8891  000000                     
  8892  000000                     
  8893  000000                     
  8894  000000                     
  8895  000000                     
  8896  000000                     
  8897  000000                     
  8898  000000                     
  8899  000000                     
  8900  000000                     
  8901  000000                     
  8902  000000                     
  8903  000000                     
  8904  000000                     
  8905  000000                     
  8906  000000                     
  8907  000000                     
  8908  000000                     
  8909  000000                     
  8910  000000                     
  8911  000000                     
  8912  000000                     
  8913  000000                     
  8914  000000                     
  8915  000000                     
  8916  000000                     
  8917  000000                     
  8918  000000                     
  8919  000000                     
  8920  000000                     
  8921  000000                     
  8922  000000                     
  8923  000000                     
  8924  000000                     
  8925  000000                     
  8926  000000                     
  8927  000000                     
  8928  000000                     
  8929  000000                     
  8930  000000                     
  8931  000000                     
  8932  000000                     
  8933  000000                     
  8934  000000                     
  8935  000000                     
  8936  000000                     
  8937  000000                     
  8938  000000                     
  8939  000000                     
  8940  000000                     
  8941  000000                     
  8942  000000                     
  8943  000000                     
  8944  000000                     
  8945  000000                     
  8946  000000                     
  8947  000000                     
  8948  000000                     
  8949  000000                     
  8950  000000                     
  8951  000000                     
  8952  000000                     
  8953  000000                     
  8954  000000                     
  8955  000000                     
  8956  000000                     
  8957  000000                     
  8958  000000                     
  8959  000000                     
  8960  000000                     
  8961  000000                     
  8962  000000                     
  8963  000000                     
  8964  000000                     
  8965  000000                     
  8966  000000                     
  8967  000000                     
  8968  000000                     
  8969  000000                     
  8970  000000                     
  8971  000000                     
  8972  000000                     
  8973  000000                     
  8974  000000                     
  8975  000000                     
  8976  000E97                     _x:
  8977  000E97                     	ds	1
  8978  000E97                     _zmn:
  8979  000E97                     	ds	1
  8980  000E97                     _zps:
  8981  000E97                     	ds	1
  8982  000000                     
  8983  000000                     
  8984  000000                     
  8985  000000                     
  8986  000000                     
  8987  000000                     
  8988  000000                     
  8989                           
  8990                           	psect	bss
  8991  000157                     _PFN:
  8992  000157                     	ds	35
  8993  000157                     _M:
  8994  000157                     	ds	51
  8995                           
  8996                           	psect	temp
  8997  000000                     btemp:
  8998  000000                     	ds	2
  8999                           intcon	equ	0xFF2
  9000                           indf0	equ	0xFEF
  9001                           postinc0	equ	0xFEE
  9002                           wreg	equ	0xFE8
  9003                           fsr2l	equ	0xFD9
  9004                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Wed Mar 20 08:54:38 2013

            _KolejkaPobudzen 16D8                    ?_SetDiode 00D7  
         __end_of_ReloadCiag 3B24                            _M 017A  
                   _PomiarCO 8960                     _PomiarCS 922C  
                   _PomiarCW 8BC8                     _PomiarIN 8B92  
                          _x 0E9B                     _PomiarZW 8D18  
                  _Proba48Z3 3C36                     _PrintOFF CAC0  
          __end_of_Proba48Z3 3C78                     _PrintErr C5D8  
                  _SetWylacz 2E08                           l30 110E  
                         l31 111E                           l40 11E0  
                         l32 1132                           l41 11BA  
                         l33 1182                           l34 1154  
                         l43 11DC                           l36 1136  
                         l70 146E                           l46 1250  
                         l38 1152                           l39 1168  
                         l73 1476                           l57 1328  
                         l90 1768                           l66 148E  
                         l91 1756                           l67 1466  
                         l92 1734                           l84 16AE  
                         l76 147E                           l93 173C  
                         l85 16BA                           l94 174C  
                         l87 16CA                           l79 1486  
                         l98 17BC            __end_of_SetWylacz 2E76  
                         u30 10FC                           u60 112A  
                  _PomiarPCO 902A                    _PomiarPFN 91CA  
                  _PomiarPCW 9120                    ?_PrintErr 00D9  
                   _StartRTG DDD8                     _StartRTM DD84  
                   _StartRTS DD48                     _Rusz48Z3 3C78  
                 _SetRozruch 2A34           __end_of_SetRozruch 2A62  
                   _RuszCiag 393E                          l100 1812  
                        l101 17E0                          l110 18E6  
                        l102 17F0                          l120 1958  
                        l112 1912                          l104 1840  
                        l201 1F60                          l121 1974  
                        l113 1908                          l210 1F2A  
                        l202 1EE6                          l122 198C  
                        l106 188C                          l211 1F08  
                        l203 1ED4                          l131 1A20  
                        l300 2412                          l212 1F02  
                        l204 1ECE                          l140 1B0E  
                        l124 1A46                          l108 18C2  
                        l221 1F5A                          l141 1B06  
                        l117 1A52                          l302 244A  
                        l150 1C38                          l126 1A0C  
                        l118 199C                          l311 247E  
                        l231 203A                          l215 1F24  
                        l207 1EE0                          l143 1B2A  
                        l119 1940                          l304 2464  
                        l232 2054                          l224 1F8E  
                        l152 1C76                          l144 1BE4  
                        l136 1A78                          l128 19FC  
                        l401 2848                          l321 25AA  
                        l313 248E                          l241 20D6  
                        l233 204C                          l225 1F88  
                        l161 1CFE                          l145 1B4C  
                        l137 1A96                          l129 19F4  
                        l330 2556                          l250 2126  
                        l242 20CA                          l218 1F42  
                        l170 1D62                          l154 1C9C  
                        l146 1B82                          l138 1ABA  
                        l323 24F6                          l315 24AA  
                        l251 2118                          l243 20D0  
                        l235 2258                          l171 1FB0  
                        l163 1D22                          l147 1B98  
                        l139 1AD8                          l500 2C24  
                        l420 28F8                          l404 285E  
                        l260 21EA                          l252 211E  
                        l236 2078                          l228 1FA8  
                        l172 1DEE                          l156 1D5E  
                        l413 28AA                          l333 256A  
                        l325 2518                          l309 24C8  
                        l261 21DC                          l245 20FE  
                        l237 2066                          l173 1D8E  
                        l157 1D44                          l149 1C88  
                        l270 2248                          l262 21E2  
                        l254 2152                          l246 20EA  
                        l238 2072                          l182 1E96  
                        l158 1D3E                          l503 2C38  
                        l423 2908                          l407 2878  
                        l351 2664                          l343 2614  
                        l335 259C                          l319 25E8  
                        l271 224E                          l255 2144  
                        l247 20F6                          l191 1E58  
                        l183 1E76                          l175 1DB0  
                        l159 1CD6                          l512 2C8E  
                        l432 2948                          l360 270A  
                        l352 267C                          l328 252C  
                        l264 2214                          l256 214A  
                        l184 1E40                          l168 1D58  
                        l601 3050                          l521 2CAA  
                        l513 2C8C                          l441 29AC  
                        l417 28E8                          l409 2892  
                        l353 26A2                          l265 2208  
                        l185 1E1E                          l177 1DCA  
                        l610 30C2                          l530 2D08  
                        l506 2C48                          l450 29D6  
                        l434 295C                          l426 2912  
                        l362 26D4                          l354 269A  
                        l282 22CE                          l274 22A6  
                        l266 220E                          l258 2198  
                        l194 1E70                          l515 2CA8  
                        l371 27C8                          l347 2618  
                        l275 2290                          l179 1DE8  
                        l620 315C                          l612 30D0  
                        l604 3060                          l540 2D5C  
                        l524 2CE4                          l444 29BC  
                        l356 26BA                          l348 264C  
                        l292 236E                          l284 232C  
                        l276 2288                          l268 2254  
                        l188 1E3A                          l701 348C  
                        l621 3184                          l613 30FA  
                        l533 2D18                          l509 2C52  
                        l453 29E0                          l437 296E  
                        l429 292E                          l373 2722  
                        l365 26E6                          l349 2644  
                        l293 2392                          l197 1E90  
                        l630 319A                          l622 316A  
                        l542 2D78                          l382 278E  
                        l294 2396                          l286 230A  
                        l631 31AC                          l551 2E1C  
                        l527 2CF4                          l447 29CC  
                        l391 27EA                          l367 26F8  
                        l295 24EE                          l199 1FAC  
                        l704 34AA                          l632 31B4  
                        l624 315E                          l616 3106  
                        l608 3098                          l536 2D22  
                        l472 2AEA                          l464 2D90  
                        l456 29FA                          l296 23C0  
                        l801 3856                          l617 311C  
                        l609 30C4                          l553 2E20  
                        l481 2B1E                          l810 38C2  
                        l722 352C                          l706 3538  
                        l650 32B6                          l634 31E8  
                        l626 3160                          l618 314E  
                        l570 2F42                          l562 2ED8  
                        l546 2E44                          l466 2A64  
                        l458 2A14                          l378 2754  
                        l298 23EA                          l731 357E  
                        l707 34AC                          l643 3278  
                        l571 2EE8                          l563 2E8A  
                        l547 2E2C                          l539 2D5E  
                        l491 2B86                          l475 2AFE  
                        l395 2828                          l812 38E4  
                        l740 35DE                          l716 34F6  
                        l708 34B8                          l660 3326  
                        l580 2F7C                          l572 2EF4  
                        l484 2B5A                          l717 3508  
                        l637 31EA                          l573 2F28  
                        l565 2EAC                          l557 2E50  
                        l549 2E0C                          l485 2B58  
                        l469 2AAA                          l389 2A16  
                        l830 396E                          l750 364C  
                        l742 35EC                          l670 3342  
                        l638 31F6                          l590 2FE8  
                        l566 2ECA                          l494 2BD4  
                        l478 2B0E                          l398 2838  
                        l903 3CC0                          l727 35F8  
                        l719 351E                          l671 334E  
                        l655 32F0                          l647 3308  
                        l639 320C                          l487 2B74  
                        l920 3D0C                          l904 3C7A  
                        l840 39F0                          l832 399E  
                        l808 3908                          l760 36CA  
                        l752 3668                          l736 35AA  
                        l728 354A                          l680 33BE  
                        l648 32CE                          l592 2FF4  
                        l584 2FD4                          l921 3D08  
                        l817 38FA                          l809 38B6  
                        l761 36D6                          l737 35C8  
                        l729 3556                          l673 3376  
                        l665 360A                          l577 2F94  
                        l497 2C14                          l906 3CB2  
                        l850 3A9A                          l818 38EE  
                        l770 3748                          l762 36E4  
                        l690 341E                          l682 33CC  
                        l578 2F52                          l915 3D1E  
                        l907 3C7C                          l843 3A1E  
                        l835 3ABA                          l827 39AC  
                        l771 375C                          l755 3714  
                        l747 3682                          l667 3340  
                        l579 2F5E                          l932 3D74  
                        l916 3D12                          l844 3A30  
                        l836 39BA                          l828 3946  
                        l780 3796                          l764 36FE  
                        l756 36C2                          l748 362A  
                        l684 33E8                          l588 322E  
                        l925 3D28                          l917 3CDC  
                        l909 3C94                          l853 3AF6  
                        l837 39D6                          l829 395C  
                        l781 37A2                          l749 363A  
                        l669 33D6                          l597 304E  
                        l589 2FDA                          l950 3DE2  
                        l942 3DAC                          l934 3D92  
                        l870 3B52                          l790 37EE  
                        l686 3498                          l678 33A2  
                        l598 3084                          l935 3DD6  
                        l919 3CF0                          l847 3A5E  
                        l839 39DE                          l775 389A  
                        l759 3706                          l695 344A  
                        l687 33EA                          l599 306A  
                        l952 3DEA                          l872 3B68  
                        l856 3B08                          l784 37C8  
                        l768 3784                          l696 3468  
                        l688 33F6                          l937 3DBA  
                        l881 3BB2                          l865 3C14  
                        l849 3A90                          l777 3794  
                        l769 3738                          l970 3EDA  
                        l962 3E46                          l954 3F80  
                        l786 3820                          l971 3EC6  
                        l963 3E5A                          l955 3F64  
                        l947 3DB2                          l939 3DAA  
                        l867 3B50                          l787 37CA  
                        l779 37BA                          l699 347E  
                        l964 3E72                          l876 3B98  
                        l788 37D6                          l957 3E16  
                        l869 3B8A                          l797 3888  
                        l958 3E2C                          l894 3C6E  
                        l878 3BD0                          l798 3832  
                        l959 3E3A                          l895 3C38  
                        l887 3BDE                          l879 3B9A  
                        l799 383E                          l992 3FE4  
                        l976 3F0E                          l968 3E9E  
                        l977 3F22                          l969 3EB2  
                        l897 3C48                          l889 3BF6  
                        l978 3F36                          l989 3FD2  
                        u200 1266                          u150 1222  
                        u151 121E                          u160 1224  
                        u500 1502                          u510 1504  
                        u190 1264                          u191 1260  
                        u600 159C                          u440 14D8  
                        u450 14DA                          _PFN 0157  
                        u630 15D4                          u550 1574  
                        u640 15D6                          u560 1576  
                        u670 15F4                          u590 159A  
                        u680 15F6                          u930 1722  
                        _RTG DDFC                          _PWM 026E  
                        _RTM DDA8                          _RTS DD6C  
                   _WritePWM C26C        ?a_OczekujNaPrzeplywWG 00D7  
                        _zmn 0E9C                          _zps 0E9D  
                   __config1 0030FF                     __config2 00EFEF  
                   __config3 007DFF                     __config4 00FFFB  
                   __config5 00FFF0                     __config6 00DFF0  
                        wreg 000FE8                    _StartRTdS DD0C  
              ?_eeprom_write 00D9                   _RestartMod 6D58  
              _ReloadPlomien 3916                         F2350 0E99  
                       F2352 0E9A                         F2348 0E97  
                       F2349 0E98     __end_of_RefInterfaceData 16D8  
                 _PrintErrCs C664                   _PrintErrTm C6F0  
                 _PrintNstCO C8D2                   _PrintNstCW C872  
                 _PwrOnDelay E624                    _TrybPracy AD1A  
                       u1140 185E                  _DecyzjaPLM2 328E  
                       u1061 183C                         u1150 1860  
                       u3000 1FF0                         u2040 1CAE  
                       u3010 1FF2                         u1430 19EC  
                       u2080 1CC0                         u1280 194E  
                       u3201 2090                         u3041 2006  
                       u2170 1D0E                         u3300 20B8  
                       u1710 1AFA                         u3080 2016  
                       u2520 1E06                         u2280 1D7C  
                       u1560 1A70                         u4130 22F6  
                       u3090 2018                         u3420 216E  
                       u5110 24A6                         u1750 1B24  
                       u5200 24C4                         u4081 22EA  
                       u3521 2194                         u2490 1DFC  
                       u1930 1C44                         u3620 21C0  
                       u3630 21C2                         u1870 1BA4  
                       u3560 21A8                         u6050 262C  
                       u2850 1F6A                         u1955 1C5E  
                       u4460 23BC                         u2940 1FBE  
                       u2941 1FBA                         u1885 1BB8  
                       u2950 1FC0                         u5360 2512  
                       u6090 263C                         u4810 2440  
                       u4570 23E6                         u4900 2460  
                       u6510 2748                         u6630 2782  
                       u5681 258E                         u8330 2A72  
                       u6740 27BC                         u5870 25E2  
                       u5960 25FE                         u9500 2C6E  
                       u9710 2DBA                         u8780 2B3A  
                       u8970 2B94                    _WritePWM2 C27E  
                       _DtCO 020C                         _DtCS 0204  
                       _DtCW 021B                         _DtIN 022A  
                       _RTdS DD30          __end_of_DecyzjaPLM2 333E  
                       _main 10CA        __end_of_ReloadPlomien 393E  
                       indf0 000FEF                         fsr2l 000FD9  
   __end_of_FunkcjaSerwisowa 2EE6                         btemp 0000  
                ?_PrintErrCs 00D7                  ?_PrintErrTm 00D7  
            __end_of_VZPauza 3D4E                         start 0010  
            __end_of_GrzejON 2FB8              __end_of_VWybieg 3694  
            __end_of_ToReset 3FE6                      ?_SetPrt 00DB  
            __end_of_Proba48 3B4E              __end_of_Rozruch 3260  
        _DetekcjaPrzeplywuWG 3694      __end_of_KolejkaPobudzen 191C  
                      u11030 3166                        u10240 2D3E  
                      u10440 2E24                        u10611 2F08  
                      u12230 380C                        u12320 3874  
                      u14100 3F5C                        u10670 2F1E  
                      u13160 3DD4                        u10840 3066  
                      u13450 3E6E                        u13841 3F00  
                      _DtKNF 0084                        _EndL3 CA48  
          ?a_KolejkaPobudzen 00D7                        _EndCS CB26  
                      _EndCW CB68                        _RdPrt D14C  
                      _SetL3 C99C                   used_btemp0 0001  
                 used_btemp1 0001  __end_of_DetekcjaPrzeplywuWG 371C  
                _eeprom_read E640               _DecyzjaAntyLeg 191C  
                 _DecRozruch 27E8                        status 000FD8  
         __end_of_DecRozruch 2A34                      _VZPauza 3D22  
                    _InitI2C 940E                      _InitPWM BD28  
                    _InitOsc E694             __end_of_GrzejOFF 2FD8  
                    _InitWsw 6D6E          _OczekujNaPrzeplywWG 371C  
                   ?a_DecERR 00D7                      _GrzejON 2FA2  
           _RefInterfaceData 14A4             __end_of_SetLoMod 27E8  
                    _VWybieg 3628                      _Moduluj 3FEE  
                    _ToReset 3FB0                      __Lparam 00D7  
                    _Proba48 3B24           _FiltrPomiarowyCOCW 88D8  
                    _PrintL3 C9A2                      _PrintCO CB72  
                    _PrintCS CAFC                      _PrintCW CB3E  
                    _TestScr CBCA                      _Rozruch 2FD8  
               ?_eeprom_read 00DD             __end_of_Rusz48Z3 3CCA  
           _FunkcjaSerwisowa 2E76                      __ramtop 1000  
             __end_of_DecERR 235A             __end_of_RuszCiag 3AD6  
             __end_of_DecSTR 26D2               __end_of_DecWSW 2022  
                 _DecyzjaPLM 3260  __end_of_OczekujNaPrzeplywWG 3792  
     __end_of_DecyzjaAntyLeg 1A5C           __end_of_DecyzjaPLM 328E  
                 _EndTestScr CBFC               __end_of_ErrPTG 3FB0  
                 _Blokada15S 2F50               __end_of_KeyRes 3D22  
         __end_of_Blokada15S 2FA2                  _ZmienKCOKCW 3792  
                _InitDataPmr 8316               __end_of_Rusz48 3C36  
        __end_of_ZmienKCOKCW 38B4               __end_of_Wylacz 3628  
              _KodSterownika 1464                 __end_of_main 1346  
                     _DecERR 2022                       _DecSTR 235A  
                     _DecWSW 1CA4                       _EndOFF CAEA  
                     _EnKonf B492                  _RuszPlomien 38B4  
                     _EndErr C784                       _EndNst C996  
                     _ClsScr C5B6                       _ErrPTG 3D4E  
                  _DecWylacz 2A62                       _InitAC DF84  
          __end_of_DecWylacz 2E08                       _KeyRes 3CCA  
        __end_of_RuszPlomien 3916        __end_of_KodSterownika 14A4  
                     _RglPmp AA7C                    _RdEEParam BA74  
                     _SetErr C5C2                       _SetMsg C5CC  
                     _SetPrt D16E                       _Rusz48 3B4E  
                  _EndClsScr C5BA                    _ClearData 1346  
          __end_of_ClearData 141E                       _Wylacz 333E  
                    postinc0 000FEE                    _BlokadaL3 2EE6  
          __end_of_BlokadaL3 2F50                  _NastawaCOCW 1A5C  
                 _InitGlobal 3FE6          __end_of_NastawaCOCW 1CA4  
         __end_of_InitGlobal 3FEE                   _InitTimer1 E5C2  
               _eeprom_write E564                _RestartFltPrt 141E  
      ?a_DetekcjaPrzeplywuWG 00D7                    _ReadParam AABA  
                 ?_ReadParam 00D7                     _InitUart DA18  
                   _InitPort CFEC                     _GrzejOFF 2FB8  
                  _ToObiegCO 26D2                    _ToObiegCW 2720  
      __end_of_RestartFltPrt 1464            __end_of_ToObiegCO 2720  
          __end_of_ToObiegCW 27DE                     _SetDiode CC30  
                   _SetLoMod 27DE                   _ReloadCiag 3AD6  
