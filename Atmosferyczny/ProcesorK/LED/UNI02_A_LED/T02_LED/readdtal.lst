

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Wed Mar 20 08:54:41 2013


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	rbit,global,bit,common,class=COMRAM,space
      +                          =1,delta=1
     5                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     6                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     7                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     8  000000                     
     9                           ;       param _fst assigned to ?_ReadDataXONLID+
      +                          13
    10  000000                     _ReadDataXONLID$fst	set	?_ReadDataXONLID+13
    11                           ;       param _step2 assigned to ?_ReadDataXONLI
      +                          D+12
    12  000000                     _ReadDataXONLID$step2	set	?_ReadDataXONLID+12
    13                           ;       param _step assigned to ?_ReadDataXONLID
      +                          +11
    14  000000                     _ReadDataXONLID$step	set	?_ReadDataXONLID+11
    15                           ;       param _max assigned to ?_ReadDataXONLID+
      +                          9
    16  000000                     _ReadDataXONLID$max	set	?_ReadDataXONLID+9
    17                           ;       param _min assigned to ?_ReadDataXONLID+
      +                          7
    18  000000                     _ReadDataXONLID$min	set	?_ReadDataXONLID+7
    19                           ;       param _tid assigned to ?_ReadDataXONLID+
      +                          6
    20  000000                     _ReadDataXONLID$tid	set	?_ReadDataXONLID+6
    21                           ;       param _ovf assigned to ?_ReadDataXONLID+
      +                          4
    22  000000                     _ReadDataXONLID$ovf	set	?_ReadDataXONLID+4
    23                           ;       param _dt assigned to ?_ReadDataXONLID+2
    24  000000                     _ReadDataXONLID$dt	set	?_ReadDataXONLID+2
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101  000000                     
   102  000000                     
   103  000000                     
   104  000000                     
   105  000000                     
   106  000000                     
   107  000000                     
   108  000000                     
   109  000000                     
   110  000000                     
   111  000000                     
   112  000000                     
   113                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   114                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   115                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   116                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   117                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   118                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   119                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   120                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   121                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   122                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   123                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   124                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   125                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   126                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   127                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   128                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   129                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   130                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   131                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   132                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   133                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   134                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   135                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   136                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   137                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   138                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   139                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   140                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   141                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   142                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   143                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   144                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   145                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   146                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   147                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   148                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   149                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   150                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   151                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   152                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   153                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   154                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   155                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   156                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   157                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   158                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   159                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   160                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   161                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   162                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   163                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   164                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   165                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   166                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   167                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   168                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   169                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   170                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   171                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   172                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   173                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   174                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   175                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   176                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   177                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   178                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   179                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   180                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   181                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   182                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   183                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   184                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   185                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   186                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   187                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   188                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   189                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   190                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   191                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   192                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   193                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   194                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   195                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   196                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   197                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   198                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   199                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   200                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   201                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   202                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   203                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   204                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   205                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   206                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   207                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   208                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   209                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   210                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   211                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   212                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   213  000000                     _ReadDataXONLID$ky	set	?_ReadDataXONLID
   214                           
   215                           	psect	text
   216                           ;readdtal.c: 348: unsigned char ReadDataXONLID(u
      +                          nsigned char k,StPin *ky,unsigned int *dt,unsign
      +                          ed char *ovf, unsigned char tid, unsigned int mi
      +                          n, unsigned int max, const unsigned char step,co
      +                          nst unsigned char step2,const unsigned char fst)
   217                           ;readdtal.c: 349: {
   218  00D6F2  00E6               	dw	?_ReadDataXONLID
   219                           ;	_key assigned to ?a_ReadDataXONLID+1
   220  000000                     _ReadDataXONLID$key	set	?a_ReadDataXONLID+1
   221                           ;	_k assigned to ?a_ReadDataXONLID+0
   222  000000                     _ReadDataXONLID$k	set	?a_ReadDataXONLID
   223  00D6F4                     _ReadDataXONLID:
   224  000000                     
   225                           ;_k stored from wreg
   226  00D6F4  0100               	movlb	__Lparam shr (0+8)
   227  00D6F6  6FF4               	movwf	?a_ReadDataXONLID^(__Lparam& (0+65280)),b
   228                           ;readdtal.c: 350: static bit dtmo=0;
   229  00D6F8  6AD9               	clrf	fsr2l,c
   230                           ;readdtal.c: 354: if(!dtmo)
   231  00D6FA  B45E               	btfsc	F1161/(0+8),F1161& (0+7),c
   232  00D6FC  D009               	goto	l4
   233                           ;readdtal.c: 355: {
   234  00D6FE  845E               	bsf	F1161/(0+8),F1161& (0+7),c
   235                           ;readdtal.c: 357: ktu=0;
   236  00D700  010F               	movlb	F1162 shr (0+8)
   237  00D702  6B40               	clrf	F1162& (0+255),b
   238                           ;readdtal.c: 358: iu=0;
   239  00D704  010F               	movlb	F1163 shr (0+8)
   240  00D706  6B41               	clrf	F1163& (0+255),b
   241                           ;readdtal.c: 359: es2=0;
   242  00D708  010F               	movlb	F1165 shr (0+8)
   243  00D70A  6B43               	clrf	F1165& (0+255),b
   244                           ;readdtal.c: 360: pp=step;
   245  00D70C  C0F1  FF42         	movff	?_ReadDataXONLID+11,F1164
   246  00D710                     l4:
   247                           ;readdtal.c: 361: }
   248  00D710  C0E6  F0F6         	movff	?_ReadDataXONLID,?_ExxPresKey
   249  00D714  C0E7  F0F7         	movff	?_ReadDataXONLID+1,?_ExxPresKey+1
   250  00D718  0E05               	movlw	5
   251  00D71A  0100               	movlb	__Lparam shr (0+8)
   252  00D71C  6FF8               	movwf	(?_ExxPresKey+2)^(__Lparam& (0+65280)),b
   253  00D71E  CF40  F0F9         	movff	F1162,?_ExxPresKey+3
   254  00D722  51F4               	movf	?a_ReadDataXONLID^(__Lparam& (0+65280)),w
   255  00D724  ECA8  F06A         	call	_ExxPresKey
   256  00D728  0100               	movlb	__Lparam shr (0+8)
   257  00D72A  6FF5               	movwf	(?a_ReadDataXONLID+1)^(__Lparam& (0+65280
      +                          )),b
   258  00D72C  51F5               	movf	(?a_ReadDataXONLID+1)^(__Lparam& (0+65280)
      +                          ),w
   259  00D72E  E101 D169          	bz	l5
   260                           ; _dt loaded to fsr1
   261  00D732  C0E8  FFE1         	movff	?_ReadDataXONLID+2,fsr1l
   262  00D736  C0E9  FFE2         	movff	?_ReadDataXONLID+3,fsr1h
   263                           ; _ovf loaded to fsr2
   264  00D73A  C0EA  FFD9         	movff	?_ReadDataXONLID+4,fsr2l
   265  00D73E  C0EB  FFDA         	movff	?_ReadDataXONLID+5,fsr2h
   266                           ;readdtal.c: 364: {
   267  00D742  05F5               	decf	(?a_ReadDataXONLID+1)^(__Lparam& (0+65280)
      +                          ),w
   268  00D744  E007               	bz	u70
   269  00D746  51F5               	movf	(?a_ReadDataXONLID+1)^(__Lparam& (0+65280)
      +                          ),w
   270  00D748  0A02               	xorlw	2
   271  00D74A  E001 D087          	bnz	l6
   272  00D74E  51F3               	movf	(?_ReadDataXONLID+13)^(__Lparam& (0+65280)
      +                          ),w
   273  00D750  E001 D084          	bnz	l6
   274  00D754                     u70:
   275                           ;readdtal.c: 366: {
   276  00D754  010F               	movlb	F1163 shr (0+8)
   277  00D756  6B41               	clrf	F1163& (0+255),b
   278                           ;readdtal.c: 368: ktu=5;
   279  00D758  0E05               	movlw	5
   280  00D75A  CFE8 FF40          	movff	wreg,F1162
   281                           ;readdtal.c: 369: es2=0;
   282  00D75E  010F               	movlb	F1165 shr (0+8)
   283  00D760  6B43               	clrf	F1165& (0+255),b
   284                           ;readdtal.c: 370: pp=step;
   285  00D762  C0F1  FF42         	movff	?_ReadDataXONLID+11,F1164
   286                           ;readdtal.c: 371: if(!tid)
   287  00D766  0100               	movlb	__Lparam shr (0+8)
   288  00D768  51EC               	movf	(?_ReadDataXONLID+6)^(__Lparam& (0+65280))
      +                          ,w
   289  00D76A  E13C               	bnz	l7
   290                           ;readdtal.c: 372: {
   291  00D76C  50E6               	movf	postinc1,w,c
   292  00D76E  10E5               	iorwf	postdec1,w,c
   293  00D770  E00F               	bz	u110
   294  00D772  CF42  FFE8         	movff	F1164,wreg
   295  00D776  CFE6 F000          	movff	postinc1,btemp
   296  00D77A  CFE5 F001          	movff	postdec1,btemp+1
   297  00D77E  5E00               	subwf	btemp,f,c
   298  00D780  0E00               	movlw	0
   299  00D782  5A01               	subwfb	btemp+1,f,c
   300  00D784  51EE               	movf	(?_ReadDataXONLID+8)^(__Lparam& (0+65280))
      +                          ,w
   301  00D786  5C01               	subwf	btemp+1,w,c
   302  00D788  E102               	bnz	u105
   303  00D78A  51ED               	movf	(?_ReadDataXONLID+7)^(__Lparam& (0+65280))
      +                          ,w
   304  00D78C  5C00               	subwf	btemp,w,c
   305  00D78E                     u105:
   306  00D78E  E202               	bc	l8
   307  00D790                     u110:
   308  00D790  0E01               	movlw	1
   309  00D792  D001               	goto	L1
   310  00D794                     l8:
   311                           ;readdtal.c: 374: else *ovf=0;
   312  00D794  0E00               	movlw	0
   313  00D796                     L1:
   314  00D796  6EDF               	movwf	indf2,c
   315                           ;readdtal.c: 375: if(*dt&&((*dt-pp)>min)) *dt=*d
      +                          t-pp;
   316  00D798  50E6               	movf	postinc1,w,c
   317  00D79A  10E5               	iorwf	postdec1,w,c
   318  00D79C  E01E               	bz	l10
   319  00D79E  CF42  FFE8         	movff	F1164,wreg
   320  00D7A2  CFE6 F000          	movff	postinc1,btemp
   321  00D7A6  CFE5 F001          	movff	postdec1,btemp+1
   322  00D7AA  5E00               	subwf	btemp,f,c
   323  00D7AC  0E00               	movlw	0
   324  00D7AE  5A01               	subwfb	btemp+1,f,c
   325  00D7B0  0100               	movlb	__Lparam shr (0+8)
   326  00D7B2  5001               	movf	btemp+1,w,c
   327  00D7B4  5DEE               	subwf	(?_ReadDataXONLID+8)^(__Lparam& (0+65280)
      +                          ),w
   328  00D7B6  E102               	bnz	u135
   329  00D7B8  5000               	movf	btemp,w,c
   330  00D7BA  5DED               	subwf	(?_ReadDataXONLID+7)^(__Lparam& (0+65280)
      +                          ),w
   331  00D7BC                     u135:
   332  00D7BC  E20E               	bc	l10
   333  00D7BE  CF42  FFE8         	movff	F1164,wreg
   334  00D7C2  CFE6 F000          	movff	postinc1,btemp
   335  00D7C6  CFE5 F001          	movff	postdec1,btemp+1
   336  00D7CA  5E00               	subwf	btemp,f,c
   337  00D7CC  0E00               	movlw	0
   338  00D7CE  5A01               	subwfb	btemp+1,f,c
   339  00D7D0  C000  FFE6         	movff	btemp,postinc1
   340  00D7D4  C001  FFE5         	movff	btemp+1,postdec1
   341  00D7D8  D041               	goto	l6
   342  00D7DA                     l10:
   343                           ;readdtal.c: 376: else *dt=min;
   344  00D7DA  C0ED  FFE6         	movff	?_ReadDataXONLID+7,postinc1
   345  00D7DE  C0EE  FFE5         	movff	?_ReadDataXONLID+8,postdec1
   346                           ;readdtal.c: 377: }
   347  00D7E2  D03C               	goto	l6
   348  00D7E4                     l7:
   349                           ;readdtal.c: 378: else
   350  00D7E4  CFE6 F000          	movff	postinc1,btemp
   351  00D7E8  CFE5 F001          	movff	postdec1,btemp+1
   352  00D7EC  CF42  FFE8         	movff	F1164,wreg
   353  00D7F0  2400               	addwf	btemp,w,c
   354  00D7F2  6E02               	movwf	btemp+2,c
   355  00D7F4  0E00               	movlw	0
   356  00D7F6  2001               	addwfc	btemp+1,w,c
   357  00D7F8  6E03               	movwf	btemp+3,c
   358  00D7FA  0100               	movlb	__Lparam shr (0+8)
   359  00D7FC  5003               	movf	btemp+3,w,c
   360  00D7FE  5DF0               	subwf	(?_ReadDataXONLID+10)^(__Lparam& (0+65280
      +                          )),w
   361  00D800  E102               	bnz	u155
   362  00D802  5002               	movf	btemp+2,w,c
   363  00D804  5DEF               	subwf	(?_ReadDataXONLID+9)^(__Lparam& (0+65280)
      +                          ),w
   364  00D806                     u155:
   365  00D806  E202               	bc	l13
   366  00D808  0E01               	movlw	1
   367  00D80A  D001               	goto	L2
   368  00D80C                     l13:
   369                           ;readdtal.c: 381: else *ovf=0;
   370  00D80C  0E00               	movlw	0
   371  00D80E                     L2:
   372  00D80E  6EDF               	movwf	indf2,c
   373                           ;readdtal.c: 382: if(*dt+pp<=max) *dt=*dt+pp;
   374  00D810  CFE6 F000          	movff	postinc1,btemp
   375  00D814  CFE5 F001          	movff	postdec1,btemp+1
   376  00D818  CF42  FFE8         	movff	F1164,wreg
   377  00D81C  2400               	addwf	btemp,w,c
   378  00D81E  6E02               	movwf	btemp+2,c
   379  00D820  0E00               	movlw	0
   380  00D822  2001               	addwfc	btemp+1,w,c
   381  00D824  6E03               	movwf	btemp+3,c
   382  00D826  0100               	movlb	__Lparam shr (0+8)
   383  00D828  5003               	movf	btemp+3,w,c
   384  00D82A  5DF0               	subwf	(?_ReadDataXONLID+10)^(__Lparam& (0+65280
      +                          )),w
   385  00D82C  E102               	bnz	u165
   386  00D82E  5002               	movf	btemp+2,w,c
   387  00D830  5DEF               	subwf	(?_ReadDataXONLID+9)^(__Lparam& (0+65280)
      +                          ),w
   388  00D832                     u165:
   389  00D832  E310               	bnc	l15
   390  00D834  CFE6 F000          	movff	postinc1,btemp
   391  00D838  CFE5 F001          	movff	postdec1,btemp+1
   392  00D83C  CF42  FFE8         	movff	F1164,wreg
   393  00D840  2400               	addwf	btemp,w,c
   394  00D842  6E02               	movwf	btemp+2,c
   395  00D844  0E00               	movlw	0
   396  00D846  2001               	addwfc	btemp+1,w,c
   397  00D848  6E03               	movwf	btemp+3,c
   398  00D84A  C002  FFE6         	movff	btemp+2,postinc1
   399  00D84E  C003  FFE5         	movff	btemp+3,postdec1
   400  00D852  D004               	goto	l6
   401  00D854                     l15:
   402                           ;readdtal.c: 383: else *dt=max;
   403  00D854  C0EF  FFE6         	movff	?_ReadDataXONLID+9,postinc1
   404  00D858  C0F0  FFE5         	movff	?_ReadDataXONLID+10,postdec1
   405  00D85C                     l6:
   406                           ;readdtal.c: 384: }
   407  00D85C  0100               	movlb	__Lparam shr (0+8)
   408  00D85E  51F5               	movf	(?a_ReadDataXONLID+1)^(__Lparam& (0+65280)
      +                          ),w
   409  00D860  0A02               	xorlw	2
   410  00D862  E001 D0B0          	bnz	l17
   411  00D866  51F3               	movf	(?_ReadDataXONLID+13)^(__Lparam& (0+65280)
      +                          ),w
   412  00D868  E101 D0AD          	bz	l17
   413                           ;readdtal.c: 387: {
   414  00D86C  0E0D               	movlw	13
   415  00D86E  010F               	movlb	F1163 shr (0+8)
   416  00D870  6141               	cpfslt	F1163& (0+255),b
   417  00D872  D001               	goto	l18
   418  00D874  2B41               	incf	F1163& (0+255),f,b
   419  00D876                     l18:
   420                           ;readdtal.c: 389: ktu=5-iu/3;
   421  00D876  0E03               	movlw	3
   422  00D878  6E01               	movwf	btemp+1,c
   423  00D87A  CF41  FFE8         	movff	F1163,wreg
   424  00D87E  EC65  F072         	call	lbdiv
   425  00D882  0805               	sublw	5
   426  00D884  CFE8 FF40          	movff	wreg,F1162
   427                           ;readdtal.c: 390: if (iu>(5-1)*3)
   428  00D888  0E0C               	movlw	12
   429  00D88A  010F               	movlb	F1163 shr (0+8)
   430  00D88C  6541               	cpfsgt	F1163& (0+255),b
   431  00D88E  D01C               	goto	l19
   432                           ;readdtal.c: 391: {
   433  00D890  010F               	movlb	F1165 shr (0+8)
   434  00D892  5343               	movf	F1165& (0+255),f,b
   435  00D894  E007               	bz	l20
   436                           ;readdtal.c: 393: {
   437  00D896  0100               	movlb	__Lparam shr (0+8)
   438  00D898  51F2               	movf	(?_ReadDataXONLID+12)^(__Lparam& (0+65280)
      +                          ),w
   439  00D89A  010F               	movlb	F1164 shr (0+8)
   440  00D89C  6142               	cpfslt	F1164& (0+255),b
   441  00D89E  D004               	goto	l22
   442  00D8A0  2B42               	incf	F1164& (0+255),f,b
   443                           ;readdtal.c: 395: }
   444  00D8A2  D002               	goto	l22
   445  00D8A4                     l20:
   446                           ;readdtal.c: 396: else pp=step;
   447  00D8A4  C0F1  FF42         	movff	?_ReadDataXONLID+11,F1164
   448  00D8A8                     l22:
   449                           ;readdtal.c: 397: if((*dt%10)==0) es2=1;
   450  00D8A8  0E0A               	movlw	10
   451  00D8AA  6E02               	movwf	btemp+2,c
   452  00D8AC  6A03               	clrf	btemp+3,c
   453  00D8AE  CFE6 F000          	movff	postinc1,btemp
   454  00D8B2  CFE5 F001          	movff	postdec1,btemp+1
   455  00D8B6  EC32  F072         	call	lwmod
   456  00D8BA  5001               	movf	btemp+1,w,c
   457  00D8BC  1000               	iorwf	btemp,w,c
   458  00D8BE  E108               	bnz	l24
   459  00D8C0  0E01               	movlw	1
   460  00D8C2  CFE8 FF43          	movff	wreg,F1165
   461                           ;readdtal.c: 398: }
   462  00D8C6  D004               	goto	l24
   463  00D8C8                     l19:
   464                           ;readdtal.c: 399: else
   465  00D8C8  010F               	movlb	F1165 shr (0+8)
   466  00D8CA  6B43               	clrf	F1165& (0+255),b
   467                           ;readdtal.c: 402: pp=step;
   468  00D8CC  C0F1  FF42         	movff	?_ReadDataXONLID+11,F1164
   469  00D8D0                     l24:
   470                           ;readdtal.c: 403: }
   471  00D8D0  0100               	movlb	__Lparam shr (0+8)
   472  00D8D2  51EC               	movf	(?_ReadDataXONLID+6)^(__Lparam& (0+65280))
      +                          ,w
   473  00D8D4  E13C               	bnz	l25
   474                           ;readdtal.c: 405: {
   475  00D8D6  50E6               	movf	postinc1,w,c
   476  00D8D8  10E5               	iorwf	postdec1,w,c
   477  00D8DA  E00F               	bz	u280
   478  00D8DC  CF42  FFE8         	movff	F1164,wreg
   479  00D8E0  CFE6 F000          	movff	postinc1,btemp
   480  00D8E4  CFE5 F001          	movff	postdec1,btemp+1
   481  00D8E8  5E00               	subwf	btemp,f,c
   482  00D8EA  0E00               	movlw	0
   483  00D8EC  5A01               	subwfb	btemp+1,f,c
   484  00D8EE  51EE               	movf	(?_ReadDataXONLID+8)^(__Lparam& (0+65280))
      +                          ,w
   485  00D8F0  5C01               	subwf	btemp+1,w,c
   486  00D8F2  E102               	bnz	u275
   487  00D8F4  51ED               	movf	(?_ReadDataXONLID+7)^(__Lparam& (0+65280))
      +                          ,w
   488  00D8F6  5C00               	subwf	btemp,w,c
   489  00D8F8                     u275:
   490  00D8F8  E202               	bc	l26
   491  00D8FA                     u280:
   492  00D8FA  0E01               	movlw	1
   493  00D8FC  D001               	goto	L3
   494  00D8FE                     l26:
   495                           ;readdtal.c: 407: else *ovf=0;
   496  00D8FE  0E00               	movlw	0
   497  00D900                     L3:
   498  00D900  6EDF               	movwf	indf2,c
   499                           ;readdtal.c: 408: if(*dt&&((*dt-pp)>min)) *dt=*d
      +                          t-pp;
   500  00D902  50E6               	movf	postinc1,w,c
   501  00D904  10E5               	iorwf	postdec1,w,c
   502  00D906  E01E               	bz	l28
   503  00D908  CF42  FFE8         	movff	F1164,wreg
   504  00D90C  CFE6 F000          	movff	postinc1,btemp
   505  00D910  CFE5 F001          	movff	postdec1,btemp+1
   506  00D914  5E00               	subwf	btemp,f,c
   507  00D916  0E00               	movlw	0
   508  00D918  5A01               	subwfb	btemp+1,f,c
   509  00D91A  0100               	movlb	__Lparam shr (0+8)
   510  00D91C  5001               	movf	btemp+1,w,c
   511  00D91E  5DEE               	subwf	(?_ReadDataXONLID+8)^(__Lparam& (0+65280)
      +                          ),w
   512  00D920  E102               	bnz	u305
   513  00D922  5000               	movf	btemp,w,c
   514  00D924  5DED               	subwf	(?_ReadDataXONLID+7)^(__Lparam& (0+65280)
      +                          ),w
   515  00D926                     u305:
   516  00D926  E20E               	bc	l28
   517  00D928  CF42  FFE8         	movff	F1164,wreg
   518  00D92C  CFE6 F000          	movff	postinc1,btemp
   519  00D930  CFE5 F001          	movff	postdec1,btemp+1
   520  00D934  5E00               	subwf	btemp,f,c
   521  00D936  0E00               	movlw	0
   522  00D938  5A01               	subwfb	btemp+1,f,c
   523  00D93A  C000  FFE6         	movff	btemp,postinc1
   524  00D93E  C001  FFE5         	movff	btemp+1,postdec1
   525  00D942  D041               	goto	l17
   526  00D944                     l28:
   527                           ;readdtal.c: 409: else *dt=min;
   528  00D944  C0ED  FFE6         	movff	?_ReadDataXONLID+7,postinc1
   529  00D948  C0EE  FFE5         	movff	?_ReadDataXONLID+8,postdec1
   530                           ;readdtal.c: 410: }
   531  00D94C  D03C               	goto	l17
   532  00D94E                     l25:
   533                           ;readdtal.c: 411: else
   534  00D94E  CFE6 F000          	movff	postinc1,btemp
   535  00D952  CFE5 F001          	movff	postdec1,btemp+1
   536  00D956  CF42  FFE8         	movff	F1164,wreg
   537  00D95A  2400               	addwf	btemp,w,c
   538  00D95C  6E02               	movwf	btemp+2,c
   539  00D95E  0E00               	movlw	0
   540  00D960  2001               	addwfc	btemp+1,w,c
   541  00D962  6E03               	movwf	btemp+3,c
   542  00D964  0100               	movlb	__Lparam shr (0+8)
   543  00D966  5003               	movf	btemp+3,w,c
   544  00D968  5DF0               	subwf	(?_ReadDataXONLID+10)^(__Lparam& (0+65280
      +                          )),w
   545  00D96A  E102               	bnz	u325
   546  00D96C  5002               	movf	btemp+2,w,c
   547  00D96E  5DEF               	subwf	(?_ReadDataXONLID+9)^(__Lparam& (0+65280)
      +                          ),w
   548  00D970                     u325:
   549  00D970  E202               	bc	l31
   550  00D972  0E01               	movlw	1
   551  00D974  D001               	goto	L4
   552  00D976                     l31:
   553                           ;readdtal.c: 414: else *ovf=0;
   554  00D976  0E00               	movlw	0
   555  00D978                     L4:
   556  00D978  6EDF               	movwf	indf2,c
   557                           ;readdtal.c: 415: if(*dt+pp<=max) *dt=*dt+pp;
   558  00D97A  CFE6 F000          	movff	postinc1,btemp
   559  00D97E  CFE5 F001          	movff	postdec1,btemp+1
   560  00D982  CF42  FFE8         	movff	F1164,wreg
   561  00D986  2400               	addwf	btemp,w,c
   562  00D988  6E02               	movwf	btemp+2,c
   563  00D98A  0E00               	movlw	0
   564  00D98C  2001               	addwfc	btemp+1,w,c
   565  00D98E  6E03               	movwf	btemp+3,c
   566  00D990  0100               	movlb	__Lparam shr (0+8)
   567  00D992  5003               	movf	btemp+3,w,c
   568  00D994  5DF0               	subwf	(?_ReadDataXONLID+10)^(__Lparam& (0+65280
      +                          )),w
   569  00D996  E102               	bnz	u335
   570  00D998  5002               	movf	btemp+2,w,c
   571  00D99A  5DEF               	subwf	(?_ReadDataXONLID+9)^(__Lparam& (0+65280)
      +                          ),w
   572  00D99C                     u335:
   573  00D99C  E310               	bnc	l33
   574  00D99E  CFE6 F000          	movff	postinc1,btemp
   575  00D9A2  CFE5 F001          	movff	postdec1,btemp+1
   576  00D9A6  CF42  FFE8         	movff	F1164,wreg
   577  00D9AA  2400               	addwf	btemp,w,c
   578  00D9AC  6E02               	movwf	btemp+2,c
   579  00D9AE  0E00               	movlw	0
   580  00D9B0  2001               	addwfc	btemp+1,w,c
   581  00D9B2  6E03               	movwf	btemp+3,c
   582  00D9B4  C002  FFE6         	movff	btemp+2,postinc1
   583  00D9B8  C003  FFE5         	movff	btemp+3,postdec1
   584  00D9BC  D004               	goto	l17
   585  00D9BE                     l33:
   586                           ;readdtal.c: 416: else *dt=max;
   587  00D9BE  C0EF  FFE6         	movff	?_ReadDataXONLID+9,postinc1
   588  00D9C2  C0F0  FFE5         	movff	?_ReadDataXONLID+10,postdec1
   589  00D9C6                     l17:
   590                           ;readdtal.c: 417: }
   591  00D9C6  CFE6 F000          	movff	postinc1,btemp
   592  00D9CA  CFE5 F001          	movff	postdec1,btemp+1
   593  00D9CE  0100               	movlb	__Lparam shr (0+8)
   594  00D9D0  51EE               	movf	(?_ReadDataXONLID+8)^(__Lparam& (0+65280))
      +                          ,w
   595  00D9D2  5C01               	subwf	btemp+1,w,c
   596  00D9D4  E102               	bnz	u345
   597  00D9D6  51ED               	movf	(?_ReadDataXONLID+7)^(__Lparam& (0+65280))
      +                          ,w
   598  00D9D8  5C00               	subwf	btemp,w,c
   599  00D9DA                     u345:
   600  00D9DA  E204               	bc	l35
   601  00D9DC  C0ED  FFE6         	movff	?_ReadDataXONLID+7,postinc1
   602  00D9E0  C0EE  FFE5         	movff	?_ReadDataXONLID+8,postdec1
   603  00D9E4                     l35:
   604                           ;readdtal.c: 421: if(*dt>max) *dt=max;
   605  00D9E4  CFE6 F000          	movff	postinc1,btemp
   606  00D9E8  CFE5 F001          	movff	postdec1,btemp+1
   607  00D9EC  0100               	movlb	__Lparam shr (0+8)
   608  00D9EE  5001               	movf	btemp+1,w,c
   609  00D9F0  5DF0               	subwf	(?_ReadDataXONLID+10)^(__Lparam& (0+65280
      +                          )),w
   610  00D9F2  E102               	bnz	u355
   611  00D9F4  5000               	movf	btemp,w,c
   612  00D9F6  5DEF               	subwf	(?_ReadDataXONLID+9)^(__Lparam& (0+65280)
      +                          ),w
   613  00D9F8                     u355:
   614  00D9F8  E204               	bc	l36
   615  00D9FA  C0EF  FFE6         	movff	?_ReadDataXONLID+9,postinc1
   616  00D9FE  C0F0  FFE5         	movff	?_ReadDataXONLID+10,postdec1
   617  00DA02                     l36:
   618                           ;readdtal.c: 422: return 1;
   619  00DA02  0C01               	retlw	1
   620  00DA04                     l5:
   621                           ;readdtal.c: 424: else
   622  00DA04  010F               	movlb	F1163 shr (0+8)
   623  00DA06  6B41               	clrf	F1163& (0+255),b
   624                           ;readdtal.c: 427: ktu=5;
   625  00DA08  0E05               	movlw	5
   626  00DA0A  CFE8 FF40          	movff	wreg,F1162
   627                           ;readdtal.c: 428: es2=0;
   628  00DA0E  010F               	movlb	F1165 shr (0+8)
   629  00DA10  6B43               	clrf	F1165& (0+255),b
   630                           ;readdtal.c: 429: pp=step;
   631  00DA12  C0F1  FF42         	movff	?_ReadDataXONLID+11,F1164
   632                           ;readdtal.c: 430: }
   633  00DA16  0C00               	retlw	0
   634                           ;readdtal.c: 432: }
   635  00DA18                     __end_of_ReadDataXONLID:
   636                           
   637                           	psect	rbit
   638  0002F2                     F1161:
   639  0002F2                     	ds	1
   640  000000                     
   641  000000                     
   642  000000                     
   643  000000                     
   644  000000                     
   645  000000                     
   646  000000                     
   647  000000                     
   648  000000                     
   649  000000                     
   650  000000                     
   651  000000                     
   652  000000                     
   653  000000                     
   654  000000                     
   655  000000                     
   656  000000                     
   657  000000                     
   658  000000                     
   659  000000                     
   660  000000                     
   661  000000                     
   662  000000                     
   663  000000                     
   664  000000                     
   665  000000                     
   666  000000                     
   667  000000                     
   668  000000                     
   669  000000                     
   670  000000                     
   671  000000                     
   672  000000                     
   673  000000                     
   674  000000                     
   675  000000                     
   676  000000                     
   677  000000                     
   678  000000                     
   679  000000                     
   680  000000                     
   681  000000                     
   682  000000                     
   683  000000                     
   684  000000                     
   685  000000                     
   686  000000                     
   687  000000                     
   688  000000                     
   689  000000                     
   690  000000                     
   691  000000                     
   692  000000                     
   693  000000                     
   694  000000                     
   695  000000                     
   696  000000                     
   697  000000                     
   698  000000                     
   699  000000                     
   700  000000                     
   701  000000                     
   702  000000                     
   703  000000                     
   704  000000                     
   705  000000                     
   706  000000                     
   707  000000                     
   708  000000                     
   709  000000                     
   710  000000                     
   711  000000                     
   712  000000                     
   713  000000                     
   714  000000                     
   715  000000                     
   716  000000                     
   717  000000                     
   718  000000                     
   719  000000                     
   720  000000                     
   721  000000                     
   722  000000                     
   723  000000                     
   724  000000                     
   725  000000                     
   726  000000                     
   727  000000                     
   728  000000                     
   729  000000                     
   730  000000                     
   731  000000                     
   732  000000                     
   733  000000                     
   734  000000                     
   735  000000                     
   736  000000                     
   737  000000                     
   738  000000                     
   739  000000                     
   740  000000                     
   741  000000                     
   742  000000                     
   743  000000                     
   744  000000                     
   745  000000                     
   746  000000                     
   747  000000                     
   748  000000                     
   749  000000                     
   750  000000                     
   751  000000                     
   752  000000                     
   753  000000                     
   754  000000                     
   755  000000                     
   756  000000                     
   757  000000                     
   758  000000                     
   759  000000                     
   760  000000                     
   761  000000                     
   762  000000                     
   763  000000                     
   764  000000                     
   765  000000                     
   766  000000                     
   767  000000                     
   768  000000                     
   769  000000                     
   770  000000                     
   771  000000                     
   772  000000                     
   773  000000                     
   774  000000                     
   775  000000                     
   776  000000                     
   777  000000                     
   778  000000                     
   779  000000                     
   780  000000                     
   781  000000                     
   782  000000                     
   783  000000                     
   784  000000                     
   785  000000                     
   786  000000                     
   787  000000                     
   788  000000                     
   789  000000                     
   790  000000                     
   791  000000                     
   792  000000                     
   793  000000                     
   794  000000                     
   795  000000                     
   796  000000                     
   797  000000                     
   798  000000                     
   799  000000                     
   800  000000                     
   801  000000                     
   802  000000                     
   803  000000                     
   804  000000                     
   805  000000                     
   806  000000                     
   807  000000                     
   808  000000                     
   809  000000                     
   810  000000                     
   811  000000                     
   812  000000                     
   813  000000                     
   814  000000                     
   815  000000                     
   816  000000                     
   817  000000                     
   818  000000                     
   819  000000                     
   820  000000                     
   821  000000                     
   822  000000                     
   823  000000                     
   824  000000                     
   825  000000                     
   826  000000                     
   827  000000                     
   828  000000                     
   829  000000                     
   830  000000                     
   831  000000                     
   832  000000                     
   833  000000                     
   834  000000                     
   835  000000                     
   836  000000                     
   837  000000                     
   838  000000                     
   839  000000                     
   840  000000                     
   841  000000                     
   842  000000                     
   843  000000                     
   844  000000                     
   845  000000                     
   846  000000                     
   847  000000                     
   848  000000                     
   849  000000                     
   850  000000                     
   851  000000                     
   852  000000                     
   853  000000                     
   854  000000                     
   855  000000                     
   856  000000                     
   857  000000                     
   858  000000                     
   859  000000                     
   860  000000                     
   861  000000                     
   862  000000                     
   863  000000                     
   864  000000                     
   865  000000                     
   866  000000                     
   867  000000                     
   868  000000                     
   869  000000                     
   870  000000                     
   871  000000                     
   872  000000                     
   873  000000                     
   874  000000                     
   875  000000                     
   876  000000                     
   877  000000                     
   878  000000                     
   879  000000                     
   880  000000                     
   881  000000                     
   882  000000                     
   883  000000                     
   884  000000                     
   885  000000                     
   886  000000                     
   887  000000                     
   888  000000                     
   889  000000                     
   890  000000                     
   891  000000                     
   892  000000                     
   893  000000                     
   894  000000                     
   895  000000                     
   896  000000                     
   897  000000                     
   898  000000                     
   899  000000                     
   900  000000                     
   901  000000                     
   902  000000                     
   903  000000                     
   904  000000                     
   905  000000                     
   906  000000                     
   907  000000                     
   908  000000                     
   909  000000                     
   910  000000                     
   911  000000                     
   912  000000                     
   913  000000                     
   914  000000                     
   915  000000                     
   916  000000                     
   917  000000                     
   918  000000                     
   919  000000                     
   920  000000                     
   921  000000                     
   922  000000                     
   923  000000                     
   924  000000                     
   925  000000                     
   926  000000                     
   927  000000                     
   928  000000                     
   929  000000                     
   930  000000                     
   931  000000                     
   932  000000                     
   933  000000                     
   934  000000                     
   935  000000                     
   936  000000                     
   937  000000                     
   938  000000                     
   939  000000                     
   940  000000                     
   941  000000                     
   942  000000                     
   943  000000                     
   944  000000                     
   945  000000                     
   946  000000                     
   947  000000                     
   948  000000                     
   949  000000                     
   950  000000                     
   951  000000                     
   952  000000                     
   953  000000                     
   954  000000                     
   955  000000                     
   956  000000                     
   957  000000                     
   958  000000                     
   959  000000                     
   960  000000                     
   961  000000                     
   962  000000                     
   963  000000                     
   964  000000                     
   965  000000                     
   966  000000                     
   967  000000                     
   968  000000                     
   969  000000                     
   970  000000                     
   971  000000                     
   972  000000                     
   973  000000                     
   974  000000                     
   975  000000                     
   976  000000                     
   977  000000                     
   978  000000                     
   979  000000                     
   980  000000                     
   981  000000                     
   982  000000                     
   983  000000                     
   984  000000                     
   985  000000                     
   986  000000                     
   987  000000                     
   988  000000                     
   989  000000                     
   990  000000                     
   991  000000                     
   992  000000                     
   993  000000                     
   994  000000                     
   995  000000                     
   996  000000                     
   997  000000                     
   998  000000                     
   999  000000                     
  1000  000000                     
  1001  000000                     
  1002  000000                     
  1003  000000                     
  1004  000000                     
  1005  000000                     
  1006  000000                     
  1007  000000                     
  1008  000000                     
  1009  000000                     
  1010  000000                     
  1011  000000                     
  1012  000000                     
  1013  000000                     
  1014  000000                     
  1015  000000                     
  1016  000000                     
  1017  000000                     
  1018  000000                     
  1019  000000                     
  1020  000000                     
  1021  000000                     
  1022  000000                     
  1023  000000                     
  1024  000000                     
  1025  000000                     
  1026  000000                     
  1027  000000                     
  1028  000000                     
  1029  000000                     
  1030  000000                     
  1031  000000                     
  1032  000000                     
  1033  000000                     
  1034  000000                     
  1035  000000                     
  1036  000000                     
  1037  000000                     
  1038  000000                     
  1039  000000                     
  1040  000000                     
  1041  000000                     
  1042  000000                     
  1043  000000                     
  1044  000000                     
  1045  000000                     
  1046  000000                     
  1047  000000                     
  1048  000000                     
  1049  000000                     
  1050  000000                     
  1051  000000                     
  1052  000000                     
  1053  000000                     
  1054  000000                     
  1055  000000                     
  1056  000000                     
  1057  000000                     
  1058  000000                     
  1059  000000                     
  1060  000000                     
  1061  000000                     
  1062  000000                     
  1063  000000                     
  1064  000000                     
  1065  000000                     
  1066  000000                     
  1067  000000                     
  1068  000000                     
  1069  000000                     
  1070  000000                     
  1071  000000                     
  1072  000000                     
  1073  000000                     
  1074  000000                     
  1075  000000                     
  1076                           
  1077                           	psect	bigbss
  1078  000F40                     F1162:
  1079  000F40                     	ds	1
  1080  000F40                     F1163:
  1081  000F40                     	ds	1
  1082  000F40                     F1164:
  1083  000F40                     	ds	1
  1084  000F40                     F1165:
  1085  000F40                     	ds	1
  1086  000000                     
  1087  000000                     
  1088  000000                     
  1089  000000                     
  1090  000000                     
  1091  000000                     
  1092  000000                     
  1093  000000                     
  1094  000000                     
  1095  000000                     
  1096  000000                     
  1097  000000                     
  1098  000000                     
  1099  000000                     
  1100  000000                     
  1101  000000                     
  1102  000000                     
  1103  000000                     
  1104  000000                     
  1105  000000                     
  1106  000000                     
  1107  000000                     
  1108  000000                     
  1109  000000                     
  1110  000000                     
  1111  000000                     
  1112  000000                     
  1113  000000                     
  1114  000000                     
  1115  000000                     
  1116  000000                     
  1117  000000                     
  1118  000000                     
  1119  000000                     
  1120  000000                     
  1121  000000                     
  1122  000000                     
  1123  000000                     
  1124  000000                     
  1125  000000                     
  1126  000000                     
  1127  000000                     
  1128  000000                     
  1129  000000                     
  1130  000000                     
  1131  000000                     
  1132  000000                     
  1133  000000                     
  1134  000000                     
  1135  000000                     
  1136  000000                     
  1137  000000                     
  1138  000000                     
  1139  000000                     
  1140  000000                     
  1141  000000                     
  1142  000000                     
  1143  000000                     
  1144  000000                     
  1145  000000                     
  1146  000000                     
  1147  000000                     
  1148  000000                     
  1149  000000                     
  1150  000000                     
  1151  000000                     
  1152  000000                     
  1153  000000                     
  1154  000000                     
  1155  000000                     
  1156  000000                     
  1157  000000                     
  1158  000000                     
  1159  000000                     
  1160  000000                     
  1161  000000                     
  1162  000000                     
  1163  000000                     
  1164  000000                     
  1165  000000                     
  1166  000000                     
  1167  000000                     
  1168  000000                     
  1169  000000                     
  1170  000000                     
  1171  000000                     
  1172  000000                     
  1173  000000                     
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  1185  000000                     
  1186  000000                     
  1187  000000                     
  1188  000000                     
  1189  000000                     
  1190  000000                     
  1191  000000                     
  1192  000000                     
  1193  000000                     
  1194  000000                     
  1195  000000                     
  1196  000000                     
  1197  000000                     
  1198  000000                     
  1199  000000                     
  1200  000000                     
  1201  000000                     
  1202  000000                     
  1203  000000                     
  1204  000000                     
  1205  000000                     
  1206  000000                     
  1207  000000                     
  1208  000000                     
  1209  000000                     
  1210  000000                     
  1211  000000                     
  1212  000000                     
  1213  000000                     
  1214  000000                     
  1215  000000                     
  1216  000000                     
  1217  000000                     
  1218                           
  1219                           	psect	temp
  1220  000000                     btemp:
  1221  000000                     	ds	4
  1222                           wreg	equ	0xFE8
  1223                           postinc1	equ	0xFE6
  1224                           postdec1	equ	0xFE5
  1225                           fsr1h	equ	0xFE2
  1226                           fsr1l	equ	0xFE1
  1227                           indf2	equ	0xFDF
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Wed Mar 20 08:54:41 2013

                     l4 D710                       l5 DA04  
                     l6 D85C                       l7 D7E4  
                     l8 D794                      l10 D7DA  
                    l20 D8A4                      l13 D80C  
                    l22 D8A8                      l31 D976  
                    l15 D854                      l24 D8D0  
                    l33 D9BE                      l25 D94E  
                    l17 D9C6                      l26 D8FE  
                    l18 D876                      l35 D9E4  
                    l19 D8C8                      l36 DA02  
                    l28 D944                      u70 D754  
                   u110 D790                     u105 D78E  
                   u135 D7BC                     u305 D926  
                   u155 D806                     u325 D970  
                   u165 D832                     u335 D99C  
                   u280 D8FA                     u345 D9DA  
                   u355 D9F8                     u275 D8F8  
                   wreg 000FE8                    F1161 02F2  
                  F1162 0F40                    F1163 0F41  
                  F1164 0F42                    F1165 0F43  
                  fsr1l 000FE1                    indf2 000FDF  
                  fsr2l 000FD9                    btemp 0000  
                  lbdiv E4CA                    lwmod E464  
        _ReadDataXONLID D6F4         ?_ReadDataXONLID 00E6  
            used_btemp0 0001              used_btemp1 0001  
            used_btemp2 0001              used_btemp3 0001  
                 status 000FD8  __end_of_ReadDataXONLID DA18  
               __Lparam 00D7                 __ramtop 1000  
               postdec1 000FE5                 postinc1 000FE6  
            _ExxPresKey D550        ?a_ReadDataXONLID 00F4  
           ?_ExxPresKey 00F6  
