

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Wed Mar 20 08:54:41 2013


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	const,global,class=CODE,delta=1
     5                           	psect	bigdata,global,class=BIGRAM,space=1,delta
      +                          =1
     6                           	psect	ibigdata,global,class=CODE,delta=1
     7                           	psect	rbit,global,bit,common,class=COMRAM,space
      +                          =1,delta=1
     8                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     9                           	psect	bss,global,class=RAM,space=1,delta=1
    10                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101                           
   102                           	psect	text
   103                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   104                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   105                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   106                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   107                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   108                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   109                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   110                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   111                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   112                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   113                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   114                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   115                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   116                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   117                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   118                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   119                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   120                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   121                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   122                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   123                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   124                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   125                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   126                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   127                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   128                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   129                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   130                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   131                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   132                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   133                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   134                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   135                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   136                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   137                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   138                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   139                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   140                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   141                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   142                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   143                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   144                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   145                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   146                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   147                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   148                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   149                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   150                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   151                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   152                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   153                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   154                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   155                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   156                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   157                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   158                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   159                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   160                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   161                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   162                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   163                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   164                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   165                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   166                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   167                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   168                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   169                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   170                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   171                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   172                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   173                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   174                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   175                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   176                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   177                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   178                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   179                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   180                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   181                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   182                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   183                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   184                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   185                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   186                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   187                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   188                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   189                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   190                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   191                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   192                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   193                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   194                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   195                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   196                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   197                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   198                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   199                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   200                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   201                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   202                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   203  006D6E                     _InitWsw:
   204                           ;       param _nrpoz assigned to ?_ResetPoz+0
   205  000000                     _ResetPoz$nrpoz	set	?_ResetPoz
   206                           ;       param _nrpoz assigned to ?_SetPoz+0
   207  000000                     _SetPoz$nrpoz	set	?_SetPoz
   208                           ;       param _nrpoz assigned to ?_GetPoz+0
   209  000000                     _GetPoz$nrpoz	set	?_GetPoz
   210                           ;       param _mask assigned to ?_SetStatus+4
   211  000000                     _SetStatus$mask	set	?_SetStatus+4
   212                           ;       param _wst assigned to ?_SetStatus+2
   213  000000                     _SetStatus$wst	set	?_SetStatus+2
   214                           ;       param _wData assigned to ?_SetStatus+0
   215  000000                     _SetStatus$wData	set	?_SetStatus
   216                           ;       param _wdt0 assigned to ?_SetData+3
   217  000000                     _SetData$wdt0	set	?_SetData+3
   218                           ;       param _wdt1 assigned to ?_SetData+2
   219  000000                     _SetData$wdt1	set	?_SetData+2
   220                           ;       param _wData assigned to ?_SetData+0
   221  000000                     _SetData$wData	set	?_SetData
   222                           ;       param _bt assigned to ?_SetWbtyBit+1
   223  000000                     _SetWbtyBit$bt	set	?_SetWbtyBit+1
   224                           ;       param _nrbit assigned to ?_SetWbtyBit+0
   225  000000                     _SetWbtyBit$nrbit	set	?_SetWbtyBit
   226                           ;	_i assigned to ?a_KolProc+0
   227  000000                     _KolProc$i	set	?a_KolProc
   228  000000                     
   229                           ;wsw.c: 51: unsigned char i;
   230  006D6E  9284               	bcf	3972,1,c	;volatile
   231                           ;wsw.c: 55: RE2=0;
   232  006D70  9484               	bcf	3972,2,c	;volatile
   233                           ;wsw.c: 56: RE0=0;
   234  006D72  9084               	bcf	3972,0,c	;volatile
   235                           ;wsw.c: 58: wbty[0]=0xff;
   236  006D74  0EFF               	movlw	255
   237  006D76  CFE8 FF3A          	movff	wreg,_wbty
   238                           ;wsw.c: 59: wbty[1]=0xff;
   239  006D7A  CFE8 FF3B          	movff	wreg,_wbty+1
   240                           ;wsw.c: 60: wsdid=0x00;
   241  006D7E  010F               	movlb	_wsdid shr (0+8)
   242  006D80  6B39               	clrf	_wsdid& (0+255),b
   243                           ;wsw.c: 69: for(i=0;i<10-1;i++) PWD[i].St.focus=
      +                          0;
   244  006D82  6AD9               	clrf	fsr2l,c
   245  006D84                     l15:
   246  006D84  50D9               	movf	fsr2l,w,c
   247  006D86  0D04               	mullw	4
   248  006D88  0E2F               	movlw	low _PWD
   249  006D8A  24F3               	addwf	prodl,w,c
   250  006D8C  6EE9               	movwf	fsr0l,c
   251  006D8E  0E01               	movlw	high _PWD
   252  006D90  20F4               	addwfc	prodh,w,c
   253  006D92  6EEA               	movwf	fsr0h,c
   254  006D94  0EFE               	movlw	-2
   255  006D96  16EF               	andwf	indf0,f,c
   256  006D98  2AD9               	incf	fsr2l,f,c
   257  006D9A  0E08               	movlw	8
   258  006D9C  64D9               	cpfsgt	fsr2l,c
   259  006D9E  D7F2               	goto	l15
   260                           ;wsw.c: 76: SetStatus(&PWD[3],0b0100000000000000
      +                          ,0b1111111111111111);
   261  006DA0  0100               	movlb	__Lparam shr (0+8)
   262  006DA2  0E3B               	movlw	low (_PWD+12)
   263  006DA4  6FDB               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   264  006DA6  0E01               	movlw	high (_PWD+12)
   265  006DA8  6FDC               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   266  006DAA  6BDD               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   267  006DAC  0E40               	movlw	64
   268  006DAE  6FDE               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   269  006DB0  69DF               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   270  006DB2  69E0               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   271  006DB4  EC61  F03F         	call	_SetStatus	;wreg free
   272                           ;wsw.c: 77: SetStatus(&PWD[4],0b0100000000000000
      +                          ,0b1111111111111111);
   273  006DB8  0100               	movlb	__Lparam shr (0+8)
   274  006DBA  0E3F               	movlw	low (_PWD+16)
   275  006DBC  6FDB               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   276  006DBE  0E01               	movlw	high (_PWD+16)
   277  006DC0  6FDC               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   278  006DC2  6BDD               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   279  006DC4  0E40               	movlw	64
   280  006DC6  6FDE               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   281  006DC8  69DF               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   282  006DCA  69E0               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   283  006DCC  EC61  F03F         	call	_SetStatus	;wreg free
   284                           ;wsw.c: 78: SetStatus(&PWD[5],0b0010000000000000
      +                          ,0b1111111111111111);
   285  006DD0  0100               	movlb	__Lparam shr (0+8)
   286  006DD2  0E43               	movlw	low (_PWD+20)
   287  006DD4  6FDB               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   288  006DD6  0E01               	movlw	high (_PWD+20)
   289  006DD8  6FDC               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   290  006DDA  6BDD               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   291  006DDC  0E20               	movlw	32
   292  006DDE  6FDE               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   293  006DE0  69DF               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   294  006DE2  69E0               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   295  006DE4  EC61  F03F         	call	_SetStatus	;wreg free
   296                           ;wsw.c: 79: SetStatus(&PWD[6],0b0100000000000000
      +                          |0b0000010000000000,0b1111111111111111);
   297  006DE8  0100               	movlb	__Lparam shr (0+8)
   298  006DEA  0E47               	movlw	low (_PWD+24)
   299  006DEC  6FDB               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   300  006DEE  0E01               	movlw	high (_PWD+24)
   301  006DF0  6FDC               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   302  006DF2  6BDD               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   303  006DF4  0E44               	movlw	68
   304  006DF6  6FDE               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   305  006DF8  69DF               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   306  006DFA  69E0               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   307  006DFC  EC61  F03F         	call	_SetStatus	;wreg free
   308                           ;wsw.c: 80: SetStatus(&PWD[7],0b0100000000000000
      +                          ,0b1111111111111111);
   309  006E00  0100               	movlb	__Lparam shr (0+8)
   310  006E02  0E4B               	movlw	low (_PWD+28)
   311  006E04  6FDB               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   312  006E06  0E01               	movlw	high (_PWD+28)
   313  006E08  6FDC               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   314  006E0A  6BDD               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   315  006E0C  0E40               	movlw	64
   316  006E0E  6FDE               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   317  006E10  69DF               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   318  006E12  69E0               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   319  006E14  EC61  F03F         	call	_SetStatus	;wreg free
   320                           ;wsw.c: 81: SetStatus(&PWD[8],0b0100000000000000
      +                          ,0b1111111111111111);
   321  006E18  0100               	movlb	__Lparam shr (0+8)
   322  006E1A  0E4F               	movlw	low (_PWD+32)
   323  006E1C  6FDB               	movwf	?_SetStatus^(__Lparam& (0+65280)),b
   324  006E1E  0E01               	movlw	high (_PWD+32)
   325  006E20  6FDC               	movwf	(?_SetStatus+1)^(__Lparam& (0+65280)),b
   326  006E22  6BDD               	clrf	(?_SetStatus+2)^(__Lparam& (0+65280)),b
   327  006E24  0E40               	movlw	64
   328  006E26  6FDE               	movwf	(?_SetStatus+3)^(__Lparam& (0+65280)),b
   329  006E28  69DF               	setf	(?_SetStatus+4)^(__Lparam& (0+65280)),b
   330  006E2A  69E0               	setf	(?_SetStatus+5)^(__Lparam& (0+65280)),b
   331  006E2C  EF61  F03F         	goto	_SetStatus	;wreg free
   332                           ;wsw.c: 87: }
   333  006E30                     __end_of_InitWsw:
   334                           ;wsw.c: 283: const unsigned char Znak[16]={
   335                           ;wsw.c: 284: 0b01010000,
   336                           ;wsw.c: 285: 0b11111001,
   337                           ;wsw.c: 286: 0b00110010,
   338                           ;wsw.c: 287: 0b00110001,
   339                           ;wsw.c: 288: 0b10011001,
   340                           ;wsw.c: 289: 0b00010101,
   341                           ;wsw.c: 290: 0b00010100,
   342                           ;wsw.c: 291: 0b01111001,
   343                           ;wsw.c: 292: 0b00010000,
   344                           ;wsw.c: 293: 0b00010001,
   345                           ;wsw.c: 294: 0b00011000,
   346                           ;wsw.c: 295: 0b10010100,
   347                           ;wsw.c: 296: 0b01010110,
   348                           ;wsw.c: 297: 0b10110000,
   349                           ;wsw.c: 298: 0b00010110,
   350                           ;wsw.c: 299: 0b00011110,
   351                           ;wsw.c: 300: };
   352                           ;wsw.c: 306: void RefreshWSW(void)
   353                           ;wsw.c: 307: {
   354  006E30                     _RefreshWSW:
   355  000000                     
   356                           ;wsw.c: 309: KolProc();
   357  006E30  D806               	call	_KolProc	;wreg free
   358                           ;wsw.c: 311: SetPrWswData();
   359  006E32  ECBB  F03D         	call	_SetPrWswData	;wreg free
   360                           ;wsw.c: 312: FormatWswData();
   361  006E36  ECE8  F03D         	call	_FormatWswData	;wreg free
   362                           ;wsw.c: 313: PrintWswData();
   363  006E3A  EF8F  F03E         	goto	_PrintWswData	;wreg free
   364                           ;wsw.c: 314: }
   365  006E3E                     __end_of_RefreshWSW:
   366                           ;wsw.c: 319: void KolProc(void)
   367                           ;wsw.c: 320: {
   368  006E3E                     _KolProc:
   369  000000                     
   370                           ;wsw.c: 321: unsigned char i,j,k,l,nC;
   371  006E3E  6AD9               	clrf	fsr2l,c
   372  006E40                     l20:
   373                           ;wsw.c: 324: {
   374  006E40  50D9               	movf	fsr2l,w,c
   375  006E42  0D03               	mullw	3
   376  006E44  50F3               	movf	prodl,w,c
   377  006E46  0FA6               	addlw	low _Klj
   378  006E48  6EF6               	movwf	tblptrl,c
   379  006E4A  50F4               	movf	prodh,w,c
   380  006E4C  6EF7               	movwf	tblptrh,c
   381  006E4E  0E10               	movlw	high _Klj
   382  006E50  22F7               	addwfc	tblptrh,f,c
   383  006E52  0009               	tblrd		*+
   384  006E54  CFF5 F000          	movff	tablat,btemp
   385  006E58  0009               	tblrd		*+
   386  006E5A  CFF5 F001          	movff	tablat,btemp+1
   387  006E5E  0E08               	movlw	8
   388  006E60  2600               	addwf	btemp,f,c
   389  006E62  0E00               	movlw	0
   390  006E64  2201               	addwfc	btemp+1,f,c
   391  006E66  C000  FFF6         	movff	btemp,tblptrl
   392  006E6A  C001  FFF7         	movff	btemp+1,tblptrh
   393  006E6E  0E0F               	movlw	(high __ramtop+-1)
   394  006E70  64F7               	cpfsgt	tblptrh,c
   395  006E72  D007               	bra	u27
   396  006E74  0009               	tblrd		*+
   397  006E76  CFF5 F000          	movff	tablat,btemp
   398  006E7A  0009               	tblrd		*+
   399  006E7C  CFF5 F001          	movff	tablat,btemp+1
   400  006E80  D008               	bra	u20
   401  006E82                     u27:
   402  006E82  CFF6 FFE9          	movff	tblptrl,fsr0l
   403  006E86  CFF7 FFEA          	movff	tblptrh,fsr0h
   404  006E8A  CFEE F000          	movff	postinc0,btemp
   405  006E8E  CFEE F001          	movff	postinc0,btemp+1
   406  006E92                     u20:
   407  006E92  0E02               	movlw	2
   408  006E94  2600               	addwf	btemp,f,c
   409  006E96  0E00               	movlw	0
   410  006E98  2201               	addwfc	btemp+1,f,c
   411  006E9A  C000  FFF6         	movff	btemp,tblptrl
   412  006E9E  C001  FFF7         	movff	btemp+1,tblptrh
   413  006EA2  0E0F               	movlw	(high __ramtop+-1)
   414  006EA4  64F7               	cpfsgt	tblptrh,c
   415  006EA6  D003               	bra	u37
   416  006EA8  0008               	tblrd		*
   417  006EAA  50F5               	movf	tablat,w,c
   418  006EAC  D005               	bra	u30
   419  006EAE                     u37:
   420  006EAE  CFF6 FFE9          	movff	tblptrl,fsr0l
   421  006EB2  CFF7 FFEA          	movff	tblptrh,fsr0h
   422  006EB6  50EF               	movf	indf0,w,c
   423  006EB8                     u30:
   424  006EB8  6EE1               	movwf	fsr1l,c
   425                           ;wsw.c: 326: if((KInd[j].reset)||(nC&&KTim[j].cy
      +                          kl>=nC))
   426  006EBA  50D9               	movf	fsr2l,w,c
   427  006EBC  EE0F  F03C         	lfsr	0,_KInd
   428  006EC0  26E9               	addwf	fsr0l,f,c
   429  006EC2  0E00               	movlw	0
   430  006EC4  22EA               	addwfc	fsr0h,f,c
   431  006EC6  50EF               	movf	indf0,w,c
   432  006EC8  6E00               	movwf	btemp,c
   433  006ECA  B200               	btfsc	btemp,1,c
   434  006ECC  D00F               	goto	u80
   435  006ECE  50E1               	movf	fsr1l,w,c
   436  006ED0  E063               	bz	l23
   437  006ED2  50D9               	movf	fsr2l,w,c
   438  006ED4  0D03               	mullw	3
   439  006ED6  0E09               	movlw	low (_KTim+2)
   440  006ED8  24F3               	addwf	prodl,w,c
   441  006EDA  6EE9               	movwf	fsr0l,c
   442  006EDC  0E01               	movlw	high (_KTim+2)
   443  006EDE  20F4               	addwfc	prodh,w,c
   444  006EE0  6EEA               	movwf	fsr0h,c
   445  006EE2  50EF               	movf	indf0,w,c
   446  006EE4  6E00               	movwf	btemp,c
   447  006EE6  50E1               	movf	fsr1l,w,c
   448  006EE8  5C00               	subwf	btemp,w,c
   449  006EEA  E356               	bnc	l23
   450  006EEC                     u80:
   451                           ;wsw.c: 327: {
   452  006EEC  50D9               	movf	fsr2l,w,c
   453  006EEE  0D03               	mullw	3
   454  006EF0  0E09               	movlw	low (_KTim+2)
   455  006EF2  24F3               	addwf	prodl,w,c
   456  006EF4  6EE9               	movwf	fsr0l,c
   457  006EF6  0E01               	movlw	high (_KTim+2)
   458  006EF8  20F4               	addwfc	prodh,w,c
   459  006EFA  6EEA               	movwf	fsr0h,c
   460  006EFC  6AEF               	clrf	indf0,c
   461                           ;wsw.c: 329: KInd[j].reset=0;
   462  006EFE  50D9               	movf	fsr2l,w,c
   463  006F00  EE0F  F03C         	lfsr	0,_KInd
   464  006F04  26E9               	addwf	fsr0l,f,c
   465  006F06  0E00               	movlw	0
   466  006F08  22EA               	addwfc	fsr0h,f,c
   467  006F0A  0EFD               	movlw	-3
   468  006F0C  16EF               	andwf	indf0,f,c
   469                           ;wsw.c: 330: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j]
      +                          .KL).KFc[i].focus=0;
   470  006F0E  6A02               	clrf	btemp+2,c
   471  006F10                     l27:
   472  006F10  50D9               	movf	fsr2l,w,c
   473  006F12  0D03               	mullw	3
   474  006F14  50F3               	movf	prodl,w,c
   475  006F16  0FA6               	addlw	low _Klj
   476  006F18  6EF6               	movwf	tblptrl,c
   477  006F1A  50F4               	movf	prodh,w,c
   478  006F1C  6EF7               	movwf	tblptrh,c
   479  006F1E  0E10               	movlw	high _Klj
   480  006F20  22F7               	addwfc	tblptrh,f,c
   481  006F22  0E02               	movlw	2
   482  006F24  26F6               	addwf	tblptrl,f,c
   483  006F26  0E00               	movlw	0
   484  006F28  22F7               	addwfc	tblptrh,f,c
   485  006F2A  0008               	tblrd		*
   486  006F2C  50F5               	movf	tablat,w,c
   487  006F2E  5C02               	subwf	btemp+2,w,c
   488  006F30  E233               	bc	l23
   489  006F32  50D9               	movf	fsr2l,w,c
   490  006F34  0D03               	mullw	3
   491  006F36  50F3               	movf	prodl,w,c
   492  006F38  0FA6               	addlw	low _Klj
   493  006F3A  6EF6               	movwf	tblptrl,c
   494  006F3C  50F4               	movf	prodh,w,c
   495  006F3E  6EF7               	movwf	tblptrh,c
   496  006F40  0E10               	movlw	high _Klj
   497  006F42  22F7               	addwfc	tblptrh,f,c
   498  006F44  0009               	tblrd		*+
   499  006F46  CFF5 F000          	movff	tablat,btemp
   500  006F4A  0009               	tblrd		*+
   501  006F4C  CFF5 F001          	movff	tablat,btemp+1
   502  006F50  0E06               	movlw	6
   503  006F52  2600               	addwf	btemp,f,c
   504  006F54  0E00               	movlw	0
   505  006F56  2201               	addwfc	btemp+1,f,c
   506  006F58  C000  FFF6         	movff	btemp,tblptrl
   507  006F5C  C001  FFF7         	movff	btemp+1,tblptrh
   508  006F60  0E0F               	movlw	(high __ramtop+-1)
   509  006F62  64F7               	cpfsgt	tblptrh,c
   510  006F64  D007               	bra	u97
   511  006F66  0009               	tblrd		*+
   512  006F68  CFF5 F000          	movff	tablat,btemp
   513  006F6C  0009               	tblrd		*+
   514  006F6E  CFF5 F001          	movff	tablat,btemp+1
   515  006F72  D008               	bra	u90
   516  006F74                     u97:
   517  006F74  CFF6 FFE9          	movff	tblptrl,fsr0l
   518  006F78  CFF7 FFEA          	movff	tblptrh,fsr0h
   519  006F7C  CFEE F000          	movff	postinc0,btemp
   520  006F80  CFEE F001          	movff	postinc0,btemp+1
   521  006F84                     u90:
   522  006F84  5002               	movf	btemp+2,w,c
   523  006F86  2400               	addwf	btemp,w,c
   524  006F88  6EE9               	movwf	fsr0l,c
   525  006F8A  0E00               	movlw	0
   526  006F8C  2001               	addwfc	btemp+1,w,c
   527  006F8E  6EEA               	movwf	fsr0h,c
   528  006F90  0EFE               	movlw	-2
   529  006F92  16EF               	andwf	indf0,f,c
   530  006F94  2A02               	incf	btemp+2,f,c
   531  006F96  D7BC               	goto	l27
   532  006F98                     l23:
   533                           ;wsw.c: 331: }
   534  006F98  50D9               	movf	fsr2l,w,c
   535  006F9A  EE0F  F03C         	lfsr	0,_KInd
   536  006F9E  26E9               	addwf	fsr0l,f,c
   537  006FA0  0E00               	movlw	0
   538  006FA2  22EA               	addwfc	fsr0h,f,c
   539  006FA4  50EF               	movf	indf0,w,c
   540  006FA6  6E00               	movwf	btemp,c
   541  006FA8  A000               	btfss	btemp,0,c
   542  006FAA  D052               	goto	l28
   543  006FAC  50E1               	movf	fsr1l,w,c
   544  006FAE  E050               	bz	l28
   545                           ;wsw.c: 333: {
   546  006FB0  50D9               	movf	fsr2l,w,c
   547  006FB2  0D03               	mullw	3
   548  006FB4  0E09               	movlw	low (_KTim+2)
   549  006FB6  24F3               	addwf	prodl,w,c
   550  006FB8  6EE9               	movwf	fsr0l,c
   551  006FBA  0E01               	movlw	high (_KTim+2)
   552  006FBC  20F4               	addwfc	prodh,w,c
   553  006FBE  6EEA               	movwf	fsr0h,c
   554  006FC0  6AEF               	clrf	indf0,c
   555                           ;wsw.c: 335: for(i=0;i<Klj[j].nPzc;i++) (*Klj[j]
      +                          .KL).KFc[i].focus=1;
   556  006FC2  6A02               	clrf	btemp+2,c
   557  006FC4                     l32:
   558  006FC4  50D9               	movf	fsr2l,w,c
   559  006FC6  0D03               	mullw	3
   560  006FC8  50F3               	movf	prodl,w,c
   561  006FCA  0FA6               	addlw	low _Klj
   562  006FCC  6EF6               	movwf	tblptrl,c
   563  006FCE  50F4               	movf	prodh,w,c
   564  006FD0  6EF7               	movwf	tblptrh,c
   565  006FD2  0E10               	movlw	high _Klj
   566  006FD4  22F7               	addwfc	tblptrh,f,c
   567  006FD6  0E02               	movlw	2
   568  006FD8  26F6               	addwf	tblptrl,f,c
   569  006FDA  0E00               	movlw	0
   570  006FDC  22F7               	addwfc	tblptrh,f,c
   571  006FDE  0008               	tblrd		*
   572  006FE0  50F5               	movf	tablat,w,c
   573  006FE2  5C02               	subwf	btemp+2,w,c
   574  006FE4  E235               	bc	l28
   575  006FE6  50D9               	movf	fsr2l,w,c
   576  006FE8  0D03               	mullw	3
   577  006FEA  50F3               	movf	prodl,w,c
   578  006FEC  0FA6               	addlw	low _Klj
   579  006FEE  6EF6               	movwf	tblptrl,c
   580  006FF0  50F4               	movf	prodh,w,c
   581  006FF2  6EF7               	movwf	tblptrh,c
   582  006FF4  0E10               	movlw	high _Klj
   583  006FF6  22F7               	addwfc	tblptrh,f,c
   584  006FF8  0009               	tblrd		*+
   585  006FFA  CFF5 F000          	movff	tablat,btemp
   586  006FFE  0009               	tblrd		*+
   587  007000  CFF5 F001          	movff	tablat,btemp+1
   588  007004  0E06               	movlw	6
   589  007006  2600               	addwf	btemp,f,c
   590  007008  0E00               	movlw	0
   591  00700A  2201               	addwfc	btemp+1,f,c
   592  00700C  C000  FFF6         	movff	btemp,tblptrl
   593  007010  C001  FFF7         	movff	btemp+1,tblptrh
   594  007014  0E0F               	movlw	(high __ramtop+-1)
   595  007016  64F7               	cpfsgt	tblptrh,c
   596  007018  D007               	bra	u147
   597  00701A  0009               	tblrd		*+
   598  00701C  CFF5 F000          	movff	tablat,btemp
   599  007020  0009               	tblrd		*+
   600  007022  CFF5 F001          	movff	tablat,btemp+1
   601  007026  D008               	bra	u140
   602  007028                     u147:
   603  007028  CFF6 FFE9          	movff	tblptrl,fsr0l
   604  00702C  CFF7 FFEA          	movff	tblptrh,fsr0h
   605  007030  CFEE F000          	movff	postinc0,btemp
   606  007034  CFEE F001          	movff	postinc0,btemp+1
   607  007038                     u140:
   608  007038  5002               	movf	btemp+2,w,c
   609  00703A  2400               	addwf	btemp,w,c
   610  00703C  6EE9               	movwf	fsr0l,c
   611  00703E  0E00               	movlw	0
   612  007040  2001               	addwfc	btemp+1,w,c
   613  007042  6EEA               	movwf	fsr0h,c
   614  007044  50EF               	movf	indf0,w,c
   615  007046  0BFE               	andlw	-2
   616  007048  0901               	iorlw	1
   617  00704A  6EEF               	movwf	indf0,c
   618  00704C  2A02               	incf	btemp+2,f,c
   619  00704E  D7BA               	goto	l32
   620  007050                     l28:
   621                           ;wsw.c: 336: }
   622  007050  50D9               	movf	fsr2l,w,c
   623  007052  EE0F  F03C         	lfsr	0,_KInd
   624  007056  26E9               	addwf	fsr0l,f,c
   625  007058  0E00               	movlw	0
   626  00705A  22EA               	addwfc	fsr0h,f,c
   627  00705C  50EF               	movf	indf0,w,c
   628  00705E  6E00               	movwf	btemp,c
   629  007060  50D9               	movf	fsr2l,w,c
   630  007062  B000               	btfsc	btemp,0,c
   631  007064  D047               	goto	L4
   632  007066  0D03               	mullw	3
   633  007068  50F3               	movf	prodl,w,c
   634  00706A  0FA6               	addlw	low _Klj
   635  00706C  6EF6               	movwf	tblptrl,c
   636  00706E  50F4               	movf	prodh,w,c
   637  007070  6EF7               	movwf	tblptrh,c
   638  007072  0E10               	movlw	high _Klj
   639  007074  22F7               	addwfc	tblptrh,f,c
   640  007076  0009               	tblrd		*+
   641  007078  CFF5 F000          	movff	tablat,btemp
   642  00707C  0009               	tblrd		*+
   643  00707E  CFF5 F001          	movff	tablat,btemp+1
   644  007082  0E08               	movlw	8
   645  007084  2600               	addwf	btemp,f,c
   646  007086  0E00               	movlw	0
   647  007088  2201               	addwfc	btemp+1,f,c
   648  00708A  C000  FFF6         	movff	btemp,tblptrl
   649  00708E  C001  FFF7         	movff	btemp+1,tblptrh
   650  007092  0E0F               	movlw	(high __ramtop+-1)
   651  007094  64F7               	cpfsgt	tblptrh,c
   652  007096  D007               	bra	u177
   653  007098  0009               	tblrd		*+
   654  00709A  CFF5 F000          	movff	tablat,btemp
   655  00709E  0009               	tblrd		*+
   656  0070A0  CFF5 F001          	movff	tablat,btemp+1
   657  0070A4  D008               	bra	u170
   658  0070A6                     u177:
   659  0070A6  CFF6 FFE9          	movff	tblptrl,fsr0l
   660  0070AA  CFF7 FFEA          	movff	tblptrh,fsr0h
   661  0070AE  CFEE F000          	movff	postinc0,btemp
   662  0070B2  CFEE F001          	movff	postinc0,btemp+1
   663  0070B6                     u170:
   664  0070B6  C000  FFF6         	movff	btemp,tblptrl
   665  0070BA  C001  FFF7         	movff	btemp+1,tblptrh
   666  0070BE  0E0F               	movlw	(high __ramtop+-1)
   667  0070C0  64F7               	cpfsgt	tblptrh,c
   668  0070C2  D007               	bra	u187
   669  0070C4  0009               	tblrd		*+
   670  0070C6  CFF5 F000          	movff	tablat,btemp
   671  0070CA  0009               	tblrd		*+
   672  0070CC  CFF5 F001          	movff	tablat,btemp+1
   673  0070D0  D008               	bra	u180
   674  0070D2                     u187:
   675  0070D2  CFF6 FFE9          	movff	tblptrl,fsr0l
   676  0070D6  CFF7 FFEA          	movff	tblptrh,fsr0h
   677  0070DA  CFEE F000          	movff	postinc0,btemp
   678  0070DE  CFEE F001          	movff	postinc0,btemp+1
   679  0070E2                     u180:
   680  0070E2  C000  FFE9         	movff	btemp,fsr0l
   681  0070E6  C001  FFEA         	movff	btemp+1,fsr0h
   682  0070EA  50EF               	movf	indf0,w,c
   683  0070EC  6E00               	movwf	btemp,c
   684  0070EE  B000               	btfsc	btemp,0,c
   685  0070F0  D024               	goto	l33
   686                           ;wsw.c: 338: {
   687  0070F2  50D9               	movf	fsr2l,w,c
   688  0070F4                     L4:
   689  0070F4  EE0F  F03C         	lfsr	0,_KInd
   690  0070F8  26E9               	addwf	fsr0l,f,c
   691  0070FA  0E00               	movlw	0
   692  0070FC  22EA               	addwfc	fsr0h,f,c
   693  0070FE  0EFE               	movlw	-2
   694  007100  16EF               	andwf	indf0,f,c
   695                           ;wsw.c: 341: if(!nC)
   696  007102  50E1               	movf	fsr1l,w,c
   697  007104  E11A               	bnz	l33
   698                           ;wsw.c: 342: {
   699  007106  50D9               	movf	fsr2l,w,c
   700  007108  EE0F  F03C         	lfsr	0,_KInd
   701  00710C  26E9               	addwf	fsr0l,f,c
   702  00710E  0E00               	movlw	0
   703  007110  22EA               	addwfc	fsr0h,f,c
   704  007112  0E03               	movlw	-253
   705  007114  16EF               	andwf	indf0,f,c
   706                           ;wsw.c: 344: KTim[j].ncS=0;
   707  007116  50D9               	movf	fsr2l,w,c
   708  007118  0D03               	mullw	3
   709  00711A  0E07               	movlw	low _KTim
   710  00711C  24F3               	addwf	prodl,w,c
   711  00711E  6EE9               	movwf	fsr0l,c
   712  007120  0E01               	movlw	high _KTim
   713  007122  20F4               	addwfc	prodh,w,c
   714  007124  6EEA               	movwf	fsr0h,c
   715  007126  6AEF               	clrf	indf0,c
   716                           ;wsw.c: 345: KTim[j].ndS=0;
   717  007128  50D9               	movf	fsr2l,w,c
   718  00712A  0D03               	mullw	3
   719  00712C  0E08               	movlw	low (_KTim+1)
   720  00712E  24F3               	addwf	prodl,w,c
   721  007130  6EE9               	movwf	fsr0l,c
   722  007132  0E01               	movlw	high (_KTim+1)
   723  007134  20F4               	addwfc	prodh,w,c
   724  007136  6EEA               	movwf	fsr0h,c
   725  007138  6AEF               	clrf	indf0,c
   726  00713A                     l33:
   727                           ;wsw.c: 346: }
   728  00713A  50D9               	movf	fsr2l,w,c
   729  00713C  0D03               	mullw	3
   730  00713E  50F3               	movf	prodl,w,c
   731  007140  0FA6               	addlw	low _Klj
   732  007142  6EF6               	movwf	tblptrl,c
   733  007144  50F4               	movf	prodh,w,c
   734  007146  6EF7               	movwf	tblptrh,c
   735  007148  0E10               	movlw	high _Klj
   736  00714A  22F7               	addwfc	tblptrh,f,c
   737  00714C  0009               	tblrd		*+
   738  00714E  CFF5 F000          	movff	tablat,btemp
   739  007152  0009               	tblrd		*+
   740  007154  CFF5 F001          	movff	tablat,btemp+1
   741  007158  0E08               	movlw	8
   742  00715A  2600               	addwf	btemp,f,c
   743  00715C  0E00               	movlw	0
   744  00715E  2201               	addwfc	btemp+1,f,c
   745  007160  C000  FFF6         	movff	btemp,tblptrl
   746  007164  C001  FFF7         	movff	btemp+1,tblptrh
   747  007168  0E0F               	movlw	(high __ramtop+-1)
   748  00716A  64F7               	cpfsgt	tblptrh,c
   749  00716C  D007               	bra	u227
   750  00716E  0009               	tblrd		*+
   751  007170  CFF5 F000          	movff	tablat,btemp
   752  007174  0009               	tblrd		*+
   753  007176  CFF5 F001          	movff	tablat,btemp+1
   754  00717A  D008               	bra	u220
   755  00717C                     u227:
   756  00717C  CFF6 FFE9          	movff	tblptrl,fsr0l
   757  007180  CFF7 FFEA          	movff	tblptrh,fsr0h
   758  007184  CFEE F000          	movff	postinc0,btemp
   759  007188  CFEE F001          	movff	postinc0,btemp+1
   760  00718C                     u220:
   761  00718C  C000  FFF6         	movff	btemp,tblptrl
   762  007190  C001  FFF7         	movff	btemp+1,tblptrh
   763  007194  0E0F               	movlw	(high __ramtop+-1)
   764  007196  64F7               	cpfsgt	tblptrh,c
   765  007198  D007               	bra	u237
   766  00719A  0009               	tblrd		*+
   767  00719C  CFF5 F000          	movff	tablat,btemp
   768  0071A0  0009               	tblrd		*+
   769  0071A2  CFF5 F001          	movff	tablat,btemp+1
   770  0071A6  D008               	bra	u230
   771  0071A8                     u237:
   772  0071A8  CFF6 FFE9          	movff	tblptrl,fsr0l
   773  0071AC  CFF7 FFEA          	movff	tblptrh,fsr0h
   774  0071B0  CFEE F000          	movff	postinc0,btemp
   775  0071B4  CFEE F001          	movff	postinc0,btemp+1
   776  0071B8                     u230:
   777  0071B8  C000  FFE9         	movff	btemp,fsr0l
   778  0071BC  C001  FFEA         	movff	btemp+1,fsr0h
   779  0071C0  0EFE               	movlw	-2
   780  0071C2  16EF               	andwf	indf0,f,c
   781                           ;wsw.c: 354: for(i=KInd[j].indeks;i<Klj[j].nPzc;
      +                          i++)
   782  0071C4  50D9               	movf	fsr2l,w,c
   783  0071C6  EE0F  F03C         	lfsr	0,_KInd
   784  0071CA  26E9               	addwf	fsr0l,f,c
   785  0071CC  0E00               	movlw	0
   786  0071CE  22EA               	addwfc	fsr0h,f,c
   787  0071D0  30EF               	rrcf	indf0,w,c
   788  0071D2  6E00               	movwf	btemp,c
   789  0071D4  3000               	rrcf	btemp,w,c
   790  0071D6  0B3F               	andlw	63
   791  0071D8  0100               	movlb	__Lparam shr (0+8)
   792  0071DA  6FFC               	movwf	?a_KolProc^(__Lparam& (0+65280)),b
   793  0071DC                     l38:
   794  0071DC  50D9               	movf	fsr2l,w,c
   795  0071DE  0D03               	mullw	3
   796  0071E0  50F3               	movf	prodl,w,c
   797  0071E2  0FA6               	addlw	low _Klj
   798  0071E4  6EF6               	movwf	tblptrl,c
   799  0071E6  50F4               	movf	prodh,w,c
   800  0071E8  6EF7               	movwf	tblptrh,c
   801  0071EA  0E10               	movlw	high _Klj
   802  0071EC  22F7               	addwfc	tblptrh,f,c
   803  0071EE  0E02               	movlw	2
   804  0071F0  26F6               	addwf	tblptrl,f,c
   805  0071F2  0E00               	movlw	0
   806  0071F4  22F7               	addwfc	tblptrh,f,c
   807  0071F6  0008               	tblrd		*
   808  0071F8  50F5               	movf	tablat,w,c
   809  0071FA  0100               	movlb	__Lparam shr (0+8)
   810  0071FC  5DFC               	subwf	?a_KolProc^(__Lparam& (0+65280)),w
   811  0071FE  E302 EFB5  F03D    	bc	l36
   812                           ;wsw.c: 355: {
   813  007204  50D9               	movf	fsr2l,w,c
   814  007206  0D03               	mullw	3
   815  007208  50F3               	movf	prodl,w,c
   816  00720A  0FA6               	addlw	low _Klj
   817  00720C  6EF6               	movwf	tblptrl,c
   818  00720E  50F4               	movf	prodh,w,c
   819  007210  6EF7               	movwf	tblptrh,c
   820  007212  0E10               	movlw	high _Klj
   821  007214  22F7               	addwfc	tblptrh,f,c
   822  007216  0009               	tblrd		*+
   823  007218  CFF5 F000          	movff	tablat,btemp
   824  00721C  0009               	tblrd		*+
   825  00721E  CFF5 F001          	movff	tablat,btemp+1
   826  007222  0E06               	movlw	6
   827  007224  2600               	addwf	btemp,f,c
   828  007226  0E00               	movlw	0
   829  007228  2201               	addwfc	btemp+1,f,c
   830  00722A  C000  FFF6         	movff	btemp,tblptrl
   831  00722E  C001  FFF7         	movff	btemp+1,tblptrh
   832  007232  0E0F               	movlw	(high __ramtop+-1)
   833  007234  64F7               	cpfsgt	tblptrh,c
   834  007236  D007               	bra	u247
   835  007238  0009               	tblrd		*+
   836  00723A  CFF5 F000          	movff	tablat,btemp
   837  00723E  0009               	tblrd		*+
   838  007240  CFF5 F001          	movff	tablat,btemp+1
   839  007244  D008               	bra	u240
   840  007246                     u247:
   841  007246  CFF6 FFE9          	movff	tblptrl,fsr0l
   842  00724A  CFF7 FFEA          	movff	tblptrh,fsr0h
   843  00724E  CFEE F000          	movff	postinc0,btemp
   844  007252  CFEE F001          	movff	postinc0,btemp+1
   845  007256                     u240:
   846  007256  0100               	movlb	__Lparam shr (0+8)
   847  007258  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
   848  00725A  2400               	addwf	btemp,w,c
   849  00725C  6EE9               	movwf	fsr0l,c
   850  00725E  0E00               	movlw	0
   851  007260  2001               	addwfc	btemp+1,w,c
   852  007262  6EEA               	movwf	fsr0h,c
   853  007264  50EF               	movf	indf0,w,c
   854  007266  6E00               	movwf	btemp,c
   855  007268  B000               	btfsc	btemp,0,c
   856  00726A  D023               	goto	l39
   857                           ;wsw.c: 358: {
   858  00726C  50D9               	movf	fsr2l,w,c
   859  00726E  0D03               	mullw	3
   860  007270  50F3               	movf	prodl,w,c
   861  007272  0FA6               	addlw	low _Klj
   862  007274  6EF6               	movwf	tblptrl,c
   863  007276  50F4               	movf	prodh,w,c
   864  007278  6EF7               	movwf	tblptrh,c
   865  00727A  0E10               	movlw	high _Klj
   866  00727C  22F7               	addwfc	tblptrh,f,c
   867  00727E  0E02               	movlw	2
   868  007280  26F6               	addwf	tblptrl,f,c
   869  007282  0E00               	movlw	0
   870  007284  22F7               	addwfc	tblptrh,f,c
   871  007286  0008               	tblrd		*
   872  007288  50F5               	movf	tablat,w,c
   873  00728A  6E00               	movwf	btemp,c
   874  00728C  0FFF               	addlw	255
   875  00728E  6E02               	movwf	btemp+2,c
   876  007290  6A03               	clrf	btemp+3,c
   877  007292  0EFF               	movlw	255
   878  007294  2203               	addwfc	btemp+3,f,c
   879  007296  C0FC  F000         	movff	?a_KolProc,btemp
   880  00729A  6A01               	clrf	btemp+1,c
   881  00729C  5001               	movf	btemp+1,w,c
   882  00729E  0A80               	xorlw	128
   883  0072A0  6E04               	movwf	btemp+4,c
   884  0072A2  5003               	movf	btemp+3,w,c
   885  0072A4  0A80               	xorlw	128
   886  0072A6  5C04               	subwf	btemp+4,w,c
   887  0072A8  E102               	bnz	u265
   888  0072AA  5002               	movf	btemp+2,w,c
   889  0072AC  5C00               	subwf	btemp,w,c
   890  0072AE                     u265:
   891  0072AE  EF9D  F03D         	goto	u625
   892                           ;wsw.c: 360: {
   893                           ;wsw.c: 362: if(nC) KTim[j].cykl++;
   894                           ;wsw.c: 363: }
   895  0072B2                     l39:
   896                           ;wsw.c: 365: }
   897  0072B2  C0FC  F000         	movff	?a_KolProc,btemp
   898  0072B6  50D9               	movf	fsr2l,w,c
   899  0072B8  EE0F  F03C         	lfsr	0,_KInd
   900  0072BC  26E9               	addwf	fsr0l,f,c
   901  0072BE  0E00               	movlw	0
   902  0072C0  22EA               	addwfc	fsr0h,f,c
   903  0072C2  3600               	rlcf	btemp,f,c
   904  0072C4  3600               	rlcf	btemp,f,c
   905  0072C6  50EF               	movf	indf0,w,c
   906  0072C8  1800               	xorwf	btemp,w,c
   907  0072CA  0B03               	andlw	-253
   908  0072CC  1800               	xorwf	btemp,w,c
   909  0072CE  6EEF               	movwf	indf0,c
   910                           ;wsw.c: 370: for(k=j+1;k<4;k++)
   911  0072D0  28D9               	incf	fsr2l,w,c
   912  0072D2  6E02               	movwf	btemp+2,c
   913  0072D4  D08D               	goto	L2
   914  0072D6                     l42:
   915                           ;wsw.c: 371: if((*(*Klj[k].KL).KOut).nCykli)
   916  0072D6  5002               	movf	btemp+2,w,c
   917  0072D8  0D03               	mullw	3
   918  0072DA  50F3               	movf	prodl,w,c
   919  0072DC  0FA6               	addlw	low _Klj
   920  0072DE  6EF6               	movwf	tblptrl,c
   921  0072E0  50F4               	movf	prodh,w,c
   922  0072E2  6EF7               	movwf	tblptrh,c
   923  0072E4  0E10               	movlw	high _Klj
   924  0072E6  22F7               	addwfc	tblptrh,f,c
   925  0072E8  0009               	tblrd		*+
   926  0072EA  CFF5 F000          	movff	tablat,btemp
   927  0072EE  0009               	tblrd		*+
   928  0072F0  CFF5 F001          	movff	tablat,btemp+1
   929  0072F4  0E08               	movlw	8
   930  0072F6  2600               	addwf	btemp,f,c
   931  0072F8  0E00               	movlw	0
   932  0072FA  2201               	addwfc	btemp+1,f,c
   933  0072FC  C000  FFF6         	movff	btemp,tblptrl
   934  007300  C001  FFF7         	movff	btemp+1,tblptrh
   935  007304  0E0F               	movlw	(high __ramtop+-1)
   936  007306  64F7               	cpfsgt	tblptrh,c
   937  007308  D007               	bra	u297
   938  00730A  0009               	tblrd		*+
   939  00730C  CFF5 F000          	movff	tablat,btemp
   940  007310  0009               	tblrd		*+
   941  007312  CFF5 F001          	movff	tablat,btemp+1
   942  007316  D008               	bra	u290
   943  007318                     u297:
   944  007318  CFF6 FFE9          	movff	tblptrl,fsr0l
   945  00731C  CFF7 FFEA          	movff	tblptrh,fsr0h
   946  007320  CFEE F000          	movff	postinc0,btemp
   947  007324  CFEE F001          	movff	postinc0,btemp+1
   948  007328                     u290:
   949  007328  0E02               	movlw	2
   950  00732A  2600               	addwf	btemp,f,c
   951  00732C  0E00               	movlw	0
   952  00732E  2201               	addwfc	btemp+1,f,c
   953  007330  C000  FFF6         	movff	btemp,tblptrl
   954  007334  C001  FFF7         	movff	btemp+1,tblptrh
   955  007338  0E0F               	movlw	(high __ramtop+-1)
   956  00733A  64F7               	cpfsgt	tblptrh,c
   957  00733C  D003               	bra	u307
   958  00733E  0008               	tblrd		*
   959  007340  50F5               	movf	tablat,w,c
   960  007342  D005               	bra	u300
   961  007344                     u307:
   962  007344  CFF6 FFE9          	movff	tblptrl,fsr0l
   963  007348  CFF7 FFEA          	movff	tblptrh,fsr0h
   964  00734C  50EF               	movf	indf0,w,c
   965  00734E                     u300:
   966  00734E  0900               	iorlw	0
   967  007350  E04E               	bz	l45
   968                           ;wsw.c: 372: {
   969  007352  6A03               	clrf	btemp+3,c
   970  007354                     l49:
   971  007354  5002               	movf	btemp+2,w,c
   972  007356  0D03               	mullw	3
   973  007358  50F3               	movf	prodl,w,c
   974  00735A  0FA6               	addlw	low _Klj
   975  00735C  6EF6               	movwf	tblptrl,c
   976  00735E  50F4               	movf	prodh,w,c
   977  007360  6EF7               	movwf	tblptrh,c
   978  007362  0E10               	movlw	high _Klj
   979  007364  22F7               	addwfc	tblptrh,f,c
   980  007366  0E02               	movlw	2
   981  007368  26F6               	addwf	tblptrl,f,c
   982  00736A  0E00               	movlw	0
   983  00736C  22F7               	addwfc	tblptrh,f,c
   984  00736E  0008               	tblrd		*
   985  007370  50F5               	movf	tablat,w,c
   986  007372  5C03               	subwf	btemp+3,w,c
   987  007374  E233               	bc	u330
   988  007376  5002               	movf	btemp+2,w,c
   989  007378  0D03               	mullw	3
   990  00737A  50F3               	movf	prodl,w,c
   991  00737C  0FA6               	addlw	low _Klj
   992  00737E  6EF6               	movwf	tblptrl,c
   993  007380  50F4               	movf	prodh,w,c
   994  007382  6EF7               	movwf	tblptrh,c
   995  007384  0E10               	movlw	high _Klj
   996  007386  22F7               	addwfc	tblptrh,f,c
   997  007388  0009               	tblrd		*+
   998  00738A  CFF5 F000          	movff	tablat,btemp
   999  00738E  0009               	tblrd		*+
  1000  007390  CFF5 F001          	movff	tablat,btemp+1
  1001  007394  0E06               	movlw	6
  1002  007396  2600               	addwf	btemp,f,c
  1003  007398  0E00               	movlw	0
  1004  00739A  2201               	addwfc	btemp+1,f,c
  1005  00739C  C000  FFF6         	movff	btemp,tblptrl
  1006  0073A0  C001  FFF7         	movff	btemp+1,tblptrh
  1007  0073A4  0E0F               	movlw	(high __ramtop+-1)
  1008  0073A6  64F7               	cpfsgt	tblptrh,c
  1009  0073A8  D007               	bra	u327
  1010  0073AA  0009               	tblrd		*+
  1011  0073AC  CFF5 F000          	movff	tablat,btemp
  1012  0073B0  0009               	tblrd		*+
  1013  0073B2  CFF5 F001          	movff	tablat,btemp+1
  1014  0073B6  D008               	bra	u320
  1015  0073B8                     u327:
  1016  0073B8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1017  0073BC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1018  0073C0  CFEE F000          	movff	postinc0,btemp
  1019  0073C4  CFEE F001          	movff	postinc0,btemp+1
  1020  0073C8                     u320:
  1021  0073C8  5003               	movf	btemp+3,w,c
  1022  0073CA  2400               	addwf	btemp,w,c
  1023  0073CC  6EE9               	movwf	fsr0l,c
  1024  0073CE  0E00               	movlw	0
  1025  0073D0  2001               	addwfc	btemp+1,w,c
  1026  0073D2  6EEA               	movwf	fsr0h,c
  1027  0073D4  0EFE               	movlw	-2
  1028  0073D6  16EF               	andwf	indf0,f,c
  1029  0073D8  2A03               	incf	btemp+3,f,c
  1030  0073DA  D7BC               	goto	l49
  1031  0073DC                     u330:
  1032                           ;wsw.c: 374: KTim[k].cykl=0;
  1033  0073DC  5002               	movf	btemp+2,w,c
  1034  0073DE  0D03               	mullw	3
  1035  0073E0  0E09               	movlw	low (_KTim+2)
  1036  0073E2  24F3               	addwf	prodl,w,c
  1037  0073E4  6EE9               	movwf	fsr0l,c
  1038  0073E6  0E01               	movlw	high (_KTim+2)
  1039  0073E8  20F4               	addwfc	prodh,w,c
  1040  0073EA  6EEA               	movwf	fsr0h,c
  1041  0073EC  6AEF               	clrf	indf0,c
  1042  0073EE                     l45:
  1043  0073EE  2A02               	incf	btemp+2,f,c
  1044  0073F0                     L2:
  1045  0073F0  0E03               	movlw	3
  1046  0073F2  6402               	cpfsgt	btemp+2,c
  1047  0073F4  D770               	goto	l42
  1048                           ;wsw.c: 375: }
  1049  0073F6  28D9               	incf	fsr2l,w,c
  1050  0073F8  6E02               	movwf	btemp+2,c
  1051  0073FA  D01B               	goto	L3
  1052  0073FC                     l50:
  1053                           ;wsw.c: 380: {
  1054  0073FC  5002               	movf	btemp+2,w,c
  1055  0073FE  EE0F  F03C         	lfsr	0,_KInd
  1056  007402  26E9               	addwf	fsr0l,f,c
  1057  007404  0E00               	movlw	0
  1058  007406  22EA               	addwfc	fsr0h,f,c
  1059  007408  0E03               	movlw	-253
  1060  00740A  16EF               	andwf	indf0,f,c
  1061                           ;wsw.c: 382: KTim[k].ncS=0;
  1062  00740C  5002               	movf	btemp+2,w,c
  1063  00740E  0D03               	mullw	3
  1064  007410  0E07               	movlw	low _KTim
  1065  007412  24F3               	addwf	prodl,w,c
  1066  007414  6EE9               	movwf	fsr0l,c
  1067  007416  0E01               	movlw	high _KTim
  1068  007418  20F4               	addwfc	prodh,w,c
  1069  00741A  6EEA               	movwf	fsr0h,c
  1070  00741C  6AEF               	clrf	indf0,c
  1071                           ;wsw.c: 383: KTim[k].ndS=0;
  1072  00741E  5002               	movf	btemp+2,w,c
  1073  007420  0D03               	mullw	3
  1074  007422  0E08               	movlw	low (_KTim+1)
  1075  007424  24F3               	addwf	prodl,w,c
  1076  007426  6EE9               	movwf	fsr0l,c
  1077  007428  0E01               	movlw	high (_KTim+1)
  1078  00742A  20F4               	addwfc	prodh,w,c
  1079  00742C  6EEA               	movwf	fsr0h,c
  1080  00742E  6AEF               	clrf	indf0,c
  1081  007430  2A02               	incf	btemp+2,f,c
  1082  007432                     L3:
  1083  007432  0E03               	movlw	3
  1084  007434  6402               	cpfsgt	btemp+2,c
  1085  007436  D7E2               	goto	l50
  1086                           ;wsw.c: 384: }
  1087  007438  50D9               	movf	fsr2l,w,c
  1088  00743A  0D03               	mullw	3
  1089  00743C  50F3               	movf	prodl,w,c
  1090  00743E  0FA6               	addlw	low _Klj
  1091  007440  6EF6               	movwf	tblptrl,c
  1092  007442  50F4               	movf	prodh,w,c
  1093  007444  6EF7               	movwf	tblptrh,c
  1094  007446  0E10               	movlw	high _Klj
  1095  007448  22F7               	addwfc	tblptrh,f,c
  1096  00744A  0009               	tblrd		*+
  1097  00744C  CFF5 F000          	movff	tablat,btemp
  1098  007450  0009               	tblrd		*+
  1099  007452  CFF5 F001          	movff	tablat,btemp+1
  1100  007456  0E08               	movlw	8
  1101  007458  2600               	addwf	btemp,f,c
  1102  00745A  0E00               	movlw	0
  1103  00745C  2201               	addwfc	btemp+1,f,c
  1104  00745E  C000  FFF6         	movff	btemp,tblptrl
  1105  007462  C001  FFF7         	movff	btemp+1,tblptrh
  1106  007466  0E0F               	movlw	(high __ramtop+-1)
  1107  007468  64F7               	cpfsgt	tblptrh,c
  1108  00746A  D007               	bra	u377
  1109  00746C  0009               	tblrd		*+
  1110  00746E  CFF5 F000          	movff	tablat,btemp
  1111  007472  0009               	tblrd		*+
  1112  007474  CFF5 F001          	movff	tablat,btemp+1
  1113  007478  D008               	bra	u370
  1114  00747A                     u377:
  1115  00747A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1116  00747E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1117  007482  CFEE F000          	movff	postinc0,btemp
  1118  007486  CFEE F001          	movff	postinc0,btemp+1
  1119  00748A                     u370:
  1120  00748A  C000  FFF6         	movff	btemp,tblptrl
  1121  00748E  C001  FFF7         	movff	btemp+1,tblptrh
  1122  007492  0E0F               	movlw	(high __ramtop+-1)
  1123  007494  64F7               	cpfsgt	tblptrh,c
  1124  007496  D007               	bra	u387
  1125  007498  0009               	tblrd		*+
  1126  00749A  CFF5 F000          	movff	tablat,btemp
  1127  00749E  0009               	tblrd		*+
  1128  0074A0  CFF5 F001          	movff	tablat,btemp+1
  1129  0074A4  D008               	bra	u380
  1130  0074A6                     u387:
  1131  0074A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1132  0074AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1133  0074AE  CFEE F000          	movff	postinc0,btemp
  1134  0074B2  CFEE F001          	movff	postinc0,btemp+1
  1135  0074B6                     u380:
  1136  0074B6  C000  FFE9         	movff	btemp,fsr0l
  1137  0074BA  C001  FFEA         	movff	btemp+1,fsr0h
  1138  0074BE  50EF               	movf	indf0,w,c
  1139  0074C0  0BFE               	andlw	-2
  1140  0074C2  0901               	iorlw	1
  1141  0074C4  6EEF               	movwf	indf0,c
  1142                           ;wsw.c: 389: Dmask=(*(*Klj[j].KL).KOut).DMask;
  1143  0074C6  50D9               	movf	fsr2l,w,c
  1144  0074C8  0D03               	mullw	3
  1145  0074CA  50F3               	movf	prodl,w,c
  1146  0074CC  0FA6               	addlw	low _Klj
  1147  0074CE  6EF6               	movwf	tblptrl,c
  1148  0074D0  50F4               	movf	prodh,w,c
  1149  0074D2  6EF7               	movwf	tblptrh,c
  1150  0074D4  0E10               	movlw	high _Klj
  1151  0074D6  22F7               	addwfc	tblptrh,f,c
  1152  0074D8  0009               	tblrd		*+
  1153  0074DA  CFF5 F000          	movff	tablat,btemp
  1154  0074DE  0009               	tblrd		*+
  1155  0074E0  CFF5 F001          	movff	tablat,btemp+1
  1156  0074E4  0E08               	movlw	8
  1157  0074E6  2600               	addwf	btemp,f,c
  1158  0074E8  0E00               	movlw	0
  1159  0074EA  2201               	addwfc	btemp+1,f,c
  1160  0074EC  C000  FFF6         	movff	btemp,tblptrl
  1161  0074F0  C001  FFF7         	movff	btemp+1,tblptrh
  1162  0074F4  0E0F               	movlw	(high __ramtop+-1)
  1163  0074F6  64F7               	cpfsgt	tblptrh,c
  1164  0074F8  D007               	bra	u397
  1165  0074FA  0009               	tblrd		*+
  1166  0074FC  CFF5 F000          	movff	tablat,btemp
  1167  007500  0009               	tblrd		*+
  1168  007502  CFF5 F001          	movff	tablat,btemp+1
  1169  007506  D008               	bra	u390
  1170  007508                     u397:
  1171  007508  CFF6 FFE9          	movff	tblptrl,fsr0l
  1172  00750C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1173  007510  CFEE F000          	movff	postinc0,btemp
  1174  007514  CFEE F001          	movff	postinc0,btemp+1
  1175  007518                     u390:
  1176  007518  0E03               	movlw	3
  1177  00751A  2600               	addwf	btemp,f,c
  1178  00751C  0E00               	movlw	0
  1179  00751E  2201               	addwfc	btemp+1,f,c
  1180  007520  C000  FFF6         	movff	btemp,tblptrl
  1181  007524  C001  FFF7         	movff	btemp+1,tblptrh
  1182  007528  0E0F               	movlw	(high __ramtop+-1)
  1183  00752A  64F7               	cpfsgt	tblptrh,c
  1184  00752C  D003               	bra	u407
  1185  00752E  0008               	tblrd		*
  1186  007530  50F5               	movf	tablat,w,c
  1187  007532  D005               	bra	u400
  1188  007534                     u407:
  1189  007534  CFF6 FFE9          	movff	tblptrl,fsr0l
  1190  007538  CFF7 FFEA          	movff	tblptrh,fsr0h
  1191  00753C  50EF               	movf	indf0,w,c
  1192  00753E                     u400:
  1193  00753E  CFE8 FF38          	movff	wreg,_Dmask
  1194                           ;wsw.c: 391: if (KTim[j].ndS<(*Klj[j].KL).KWP[i]
      +                          .delay)
  1195  007542  50D9               	movf	fsr2l,w,c
  1196  007544  0D03               	mullw	3
  1197  007546  0E08               	movlw	low (_KTim+1)
  1198  007548  24F3               	addwf	prodl,w,c
  1199  00754A  6EE9               	movwf	fsr0l,c
  1200  00754C  0E01               	movlw	high (_KTim+1)
  1201  00754E  20F4               	addwfc	prodh,w,c
  1202  007550  6EEA               	movwf	fsr0h,c
  1203  007552  50EF               	movf	indf0,w,c
  1204  007554  0100               	movlb	__Lparam shr (0+8)
  1205  007556  6FFD               	movwf	(?a_KolProc+1)^(?a_KolProc& (0+65280)),b
  1206  007558  50D9               	movf	fsr2l,w,c
  1207  00755A  0D03               	mullw	3
  1208  00755C  50F3               	movf	prodl,w,c
  1209  00755E  0FA6               	addlw	low _Klj
  1210  007560  6EF6               	movwf	tblptrl,c
  1211  007562  50F4               	movf	prodh,w,c
  1212  007564  6EF7               	movwf	tblptrh,c
  1213  007566  0E10               	movlw	high _Klj
  1214  007568  22F7               	addwfc	tblptrh,f,c
  1215  00756A  0009               	tblrd		*+
  1216  00756C  CFF5 F000          	movff	tablat,btemp
  1217  007570  0009               	tblrd		*+
  1218  007572  CFF5 F001          	movff	tablat,btemp+1
  1219  007576  0E02               	movlw	2
  1220  007578  2600               	addwf	btemp,f,c
  1221  00757A  0E00               	movlw	0
  1222  00757C  2201               	addwfc	btemp+1,f,c
  1223  00757E  C000  FFF6         	movff	btemp,tblptrl
  1224  007582  C001  FFF7         	movff	btemp+1,tblptrh
  1225  007586  0E0F               	movlw	(high __ramtop+-1)
  1226  007588  64F7               	cpfsgt	tblptrh,c
  1227  00758A  D007               	bra	u417
  1228  00758C  0009               	tblrd		*+
  1229  00758E  CFF5 F000          	movff	tablat,btemp
  1230  007592  0009               	tblrd		*+
  1231  007594  CFF5 F001          	movff	tablat,btemp+1
  1232  007598  D008               	bra	u410
  1233  00759A                     u417:
  1234  00759A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1235  00759E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1236  0075A2  CFEE F000          	movff	postinc0,btemp
  1237  0075A6  CFEE F001          	movff	postinc0,btemp+1
  1238  0075AA                     u410:
  1239  0075AA  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1240  0075AC  0D03               	mullw	3
  1241  0075AE  5000               	movf	btemp,w,c
  1242  0075B0  24F3               	addwf	prodl,w,c
  1243  0075B2  6E02               	movwf	btemp+2,c
  1244  0075B4  5001               	movf	btemp+1,w,c
  1245  0075B6  20F4               	addwfc	prodh,w,c
  1246  0075B8  6E03               	movwf	btemp+3,c
  1247  0075BA  0E02               	movlw	2
  1248  0075BC  2602               	addwf	btemp+2,f,c
  1249  0075BE  0E00               	movlw	0
  1250  0075C0  2203               	addwfc	btemp+3,f,c
  1251  0075C2  C002  FFF6         	movff	btemp+2,tblptrl
  1252  0075C6  C003  FFF7         	movff	btemp+3,tblptrh
  1253  0075CA  0E0F               	movlw	(high __ramtop+-1)
  1254  0075CC  64F7               	cpfsgt	tblptrh,c
  1255  0075CE  D003               	bra	u427
  1256  0075D0  0008               	tblrd		*
  1257  0075D2  50F5               	movf	tablat,w,c
  1258  0075D4  D005               	bra	u420
  1259  0075D6                     u427:
  1260  0075D6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1261  0075DA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1262  0075DE  50EF               	movf	indf0,w,c
  1263  0075E0                     u420:
  1264  0075E0  5DFD               	subwf	(?a_KolProc+1)^(__Lparam& (0+65280)),w
  1265  0075E2  E301 D26C          	bc	l53
  1266                           ;wsw.c: 392: {
  1267  0075E6  50D9               	movf	fsr2l,w,c
  1268  0075E8  0D03               	mullw	3
  1269  0075EA  0E07               	movlw	low _KTim
  1270  0075EC  24F3               	addwf	prodl,w,c
  1271  0075EE  6EE9               	movwf	fsr0l,c
  1272  0075F0  0E01               	movlw	high _KTim
  1273  0075F2  20F4               	addwfc	prodh,w,c
  1274  0075F4  6EEA               	movwf	fsr0h,c
  1275  0075F6  2AEF               	incf	indf0,f,c
  1276                           ;wsw.c: 394: if (KTim[j].ncS>=10)
  1277  0075F8  50D9               	movf	fsr2l,w,c
  1278  0075FA  0D03               	mullw	3
  1279  0075FC  0E07               	movlw	low _KTim
  1280  0075FE  24F3               	addwf	prodl,w,c
  1281  007600  6EE9               	movwf	fsr0l,c
  1282  007602  0E01               	movlw	high _KTim
  1283  007604  20F4               	addwfc	prodh,w,c
  1284  007606  6EEA               	movwf	fsr0h,c
  1285  007608  50EF               	movf	indf0,w,c
  1286  00760A  6E00               	movwf	btemp,c
  1287  00760C  0E0A               	movlw	10
  1288  00760E  5C00               	subwf	btemp,w,c
  1289  007610  E312               	bnc	l54
  1290                           ;wsw.c: 395: {
  1291  007612  50D9               	movf	fsr2l,w,c
  1292  007614  0D03               	mullw	3
  1293  007616  0E07               	movlw	low _KTim
  1294  007618  24F3               	addwf	prodl,w,c
  1295  00761A  6EE9               	movwf	fsr0l,c
  1296  00761C  0E01               	movlw	high _KTim
  1297  00761E  20F4               	addwfc	prodh,w,c
  1298  007620  6EEA               	movwf	fsr0h,c
  1299  007622  6AEF               	clrf	indf0,c
  1300                           ;wsw.c: 397: KTim[j].ndS++;
  1301  007624  50D9               	movf	fsr2l,w,c
  1302  007626  0D03               	mullw	3
  1303  007628  0E08               	movlw	low (_KTim+1)
  1304  00762A  24F3               	addwf	prodl,w,c
  1305  00762C  6EE9               	movwf	fsr0l,c
  1306  00762E  0E01               	movlw	high (_KTim+1)
  1307  007630  20F4               	addwfc	prodh,w,c
  1308  007632  6EEA               	movwf	fsr0h,c
  1309  007634  2AEF               	incf	indf0,f,c
  1310  007636                     l54:
  1311                           ;wsw.c: 398: }
  1312  007636  50D9               	movf	fsr2l,w,c
  1313  007638  0D03               	mullw	3
  1314  00763A  50F3               	movf	prodl,w,c
  1315  00763C  0FA6               	addlw	low _Klj
  1316  00763E  6EF6               	movwf	tblptrl,c
  1317  007640  50F4               	movf	prodh,w,c
  1318  007642  6EF7               	movwf	tblptrh,c
  1319  007644  0E10               	movlw	high _Klj
  1320  007646  22F7               	addwfc	tblptrh,f,c
  1321  007648  0009               	tblrd		*+
  1322  00764A  CFF5 F000          	movff	tablat,btemp
  1323  00764E  0009               	tblrd		*+
  1324  007650  CFF5 F001          	movff	tablat,btemp+1
  1325  007654  C000  FFF6         	movff	btemp,tblptrl
  1326  007658  C001  FFF7         	movff	btemp+1,tblptrh
  1327  00765C  0E0F               	movlw	(high __ramtop+-1)
  1328  00765E  64F7               	cpfsgt	tblptrh,c
  1329  007660  D007               	bra	u457
  1330  007662  0009               	tblrd		*+
  1331  007664  CFF5 F000          	movff	tablat,btemp
  1332  007668  0009               	tblrd		*+
  1333  00766A  CFF5 F001          	movff	tablat,btemp+1
  1334  00766E  D008               	bra	u450
  1335  007670                     u457:
  1336  007670  CFF6 FFE9          	movff	tblptrl,fsr0l
  1337  007674  CFF7 FFEA          	movff	tblptrh,fsr0h
  1338  007678  CFEE F000          	movff	postinc0,btemp
  1339  00767C  CFEE F001          	movff	postinc0,btemp+1
  1340  007680                     u450:
  1341  007680  0100               	movlb	__Lparam shr (0+8)
  1342  007682  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1343  007684  0D02               	mullw	2
  1344  007686  5000               	movf	btemp,w,c
  1345  007688  24F3               	addwf	prodl,w,c
  1346  00768A  6E02               	movwf	btemp+2,c
  1347  00768C  5001               	movf	btemp+1,w,c
  1348  00768E  20F4               	addwfc	prodh,w,c
  1349  007690  6E03               	movwf	btemp+3,c
  1350  007692  C002  FFF6         	movff	btemp+2,tblptrl
  1351  007696  C003  FFF7         	movff	btemp+3,tblptrh
  1352  00769A  0E0F               	movlw	(high __ramtop+-1)
  1353  00769C  64F7               	cpfsgt	tblptrh,c
  1354  00769E  D007               	bra	u467
  1355  0076A0  0009               	tblrd		*+
  1356  0076A2  CFF5 F000          	movff	tablat,btemp
  1357  0076A6  0009               	tblrd		*+
  1358  0076A8  CFF5 F001          	movff	tablat,btemp+1
  1359  0076AC  D008               	bra	u460
  1360  0076AE                     u467:
  1361  0076AE  CFF6 FFE9          	movff	tblptrl,fsr0l
  1362  0076B2  CFF7 FFEA          	movff	tblptrh,fsr0h
  1363  0076B6  CFEE F000          	movff	postinc0,btemp
  1364  0076BA  CFEE F001          	movff	postinc0,btemp+1
  1365  0076BE                     u460:
  1366  0076BE  5001               	movf	btemp+1,w,c
  1367  0076C0  1000               	iorwf	btemp,w,c
  1368  0076C2  E001 D11F          	bnz	l55
  1369                           ;wsw.c: 400: {
  1370  0076C6  50D9               	movf	fsr2l,w,c
  1371  0076C8  0D03               	mullw	3
  1372  0076CA  50F3               	movf	prodl,w,c
  1373  0076CC  0FA6               	addlw	low _Klj
  1374  0076CE  6EF6               	movwf	tblptrl,c
  1375  0076D0  50F4               	movf	prodh,w,c
  1376  0076D2  6EF7               	movwf	tblptrh,c
  1377  0076D4  0E10               	movlw	high _Klj
  1378  0076D6  22F7               	addwfc	tblptrh,f,c
  1379  0076D8  0009               	tblrd		*+
  1380  0076DA  CFF5 F000          	movff	tablat,btemp
  1381  0076DE  0009               	tblrd		*+
  1382  0076E0  CFF5 F001          	movff	tablat,btemp+1
  1383  0076E4  0E04               	movlw	4
  1384  0076E6  2600               	addwf	btemp,f,c
  1385  0076E8  0E00               	movlw	0
  1386  0076EA  2201               	addwfc	btemp+1,f,c
  1387  0076EC  C000  FFF6         	movff	btemp,tblptrl
  1388  0076F0  C001  FFF7         	movff	btemp+1,tblptrh
  1389  0076F4  0E0F               	movlw	(high __ramtop+-1)
  1390  0076F6  64F7               	cpfsgt	tblptrh,c
  1391  0076F8  D007               	bra	u487
  1392  0076FA  0009               	tblrd		*+
  1393  0076FC  CFF5 F000          	movff	tablat,btemp
  1394  007700  0009               	tblrd		*+
  1395  007702  CFF5 F001          	movff	tablat,btemp+1
  1396  007706  D008               	bra	u480
  1397  007708                     u487:
  1398  007708  CFF6 FFE9          	movff	tblptrl,fsr0l
  1399  00770C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1400  007710  CFEE F000          	movff	postinc0,btemp
  1401  007714  CFEE F001          	movff	postinc0,btemp+1
  1402  007718                     u480:
  1403  007718  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1404  00771A  0D02               	mullw	2
  1405  00771C  5000               	movf	btemp,w,c
  1406  00771E  24F3               	addwf	prodl,w,c
  1407  007720  6E02               	movwf	btemp+2,c
  1408  007722  5001               	movf	btemp+1,w,c
  1409  007724  20F4               	addwfc	prodh,w,c
  1410  007726  6E03               	movwf	btemp+3,c
  1411  007728  C002  FFF6         	movff	btemp+2,tblptrl
  1412  00772C  C003  FFF7         	movff	btemp+3,tblptrh
  1413  007730  0E0F               	movlw	(high __ramtop+-1)
  1414  007732  64F7               	cpfsgt	tblptrh,c
  1415  007734  D007               	bra	u497
  1416  007736  0009               	tblrd		*+
  1417  007738  CFF5 F000          	movff	tablat,btemp
  1418  00773C  0009               	tblrd		*+
  1419  00773E  CFF5 F001          	movff	tablat,btemp+1
  1420  007742  D008               	bra	u490
  1421  007744                     u497:
  1422  007744  CFF6 FFE9          	movff	tblptrl,fsr0l
  1423  007748  CFF7 FFEA          	movff	tblptrh,fsr0h
  1424  00774C  CFEE F000          	movff	postinc0,btemp
  1425  007750  CFEE F001          	movff	postinc0,btemp+1
  1426  007754                     u490:
  1427  007754  50D9               	movf	fsr2l,w,c
  1428  007756  0D03               	mullw	3
  1429  007758  50F3               	movf	prodl,w,c
  1430  00775A  0FA6               	addlw	low _Klj
  1431  00775C  6EF6               	movwf	tblptrl,c
  1432  00775E  50F4               	movf	prodh,w,c
  1433  007760  6EF7               	movwf	tblptrh,c
  1434  007762  0E10               	movlw	high _Klj
  1435  007764  22F7               	addwfc	tblptrh,f,c
  1436  007766  0009               	tblrd		*+
  1437  007768  CFF5 F002          	movff	tablat,btemp+2
  1438  00776C  0009               	tblrd		*+
  1439  00776E  CFF5 F003          	movff	tablat,btemp+3
  1440  007772  0E08               	movlw	8
  1441  007774  2602               	addwf	btemp+2,f,c
  1442  007776  0E00               	movlw	0
  1443  007778  2203               	addwfc	btemp+3,f,c
  1444  00777A  C002  FFF6         	movff	btemp+2,tblptrl
  1445  00777E  C003  FFF7         	movff	btemp+3,tblptrh
  1446  007782  0E0F               	movlw	(high __ramtop+-1)
  1447  007784  64F7               	cpfsgt	tblptrh,c
  1448  007786  D007               	bra	u507
  1449  007788  0009               	tblrd		*+
  1450  00778A  CFF5 F002          	movff	tablat,btemp+2
  1451  00778E  0009               	tblrd		*+
  1452  007790  CFF5 F003          	movff	tablat,btemp+3
  1453  007794  D008               	bra	u500
  1454  007796                     u507:
  1455  007796  CFF6 FFE9          	movff	tblptrl,fsr0l
  1456  00779A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1457  00779E  CFEE F002          	movff	postinc0,btemp+2
  1458  0077A2  CFEE F003          	movff	postinc0,btemp+3
  1459  0077A6                     u500:
  1460  0077A6  C002  FFF6         	movff	btemp+2,tblptrl
  1461  0077AA  C003  FFF7         	movff	btemp+3,tblptrh
  1462  0077AE  0E0F               	movlw	(high __ramtop+-1)
  1463  0077B0  64F7               	cpfsgt	tblptrh,c
  1464  0077B2  D007               	bra	u517
  1465  0077B4  0009               	tblrd		*+
  1466  0077B6  CFF5 F002          	movff	tablat,btemp+2
  1467  0077BA  0009               	tblrd		*+
  1468  0077BC  CFF5 F003          	movff	tablat,btemp+3
  1469  0077C0  D008               	bra	u510
  1470  0077C2                     u517:
  1471  0077C2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1472  0077C6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1473  0077CA  CFEE F002          	movff	postinc0,btemp+2
  1474  0077CE  CFEE F003          	movff	postinc0,btemp+3
  1475  0077D2                     u510:
  1476  0077D2  C002  FFE9         	movff	btemp+2,fsr0l
  1477  0077D6  C003  FFEA         	movff	btemp+3,fsr0h
  1478  0077DA  C000  FFEE         	movff	btemp,postinc0
  1479  0077DE  C001  FFED         	movff	btemp+1,postdec0
  1480                           ;wsw.c: 402: (*(*(*Klj[j].KL).KOut).CAdr).Dt=(*K
      +                          lj[j].KL).KWP[i].PWrt;
  1481  0077E2  50D9               	movf	fsr2l,w,c
  1482  0077E4  0D03               	mullw	3
  1483  0077E6  50F3               	movf	prodl,w,c
  1484  0077E8  0FA6               	addlw	low _Klj
  1485  0077EA  6EF6               	movwf	tblptrl,c
  1486  0077EC  50F4               	movf	prodh,w,c
  1487  0077EE  6EF7               	movwf	tblptrh,c
  1488  0077F0  0E10               	movlw	high _Klj
  1489  0077F2  22F7               	addwfc	tblptrh,f,c
  1490  0077F4  0009               	tblrd		*+
  1491  0077F6  CFF5 F000          	movff	tablat,btemp
  1492  0077FA  0009               	tblrd		*+
  1493  0077FC  CFF5 F001          	movff	tablat,btemp+1
  1494  007800  0E02               	movlw	2
  1495  007802  2600               	addwf	btemp,f,c
  1496  007804  0E00               	movlw	0
  1497  007806  2201               	addwfc	btemp+1,f,c
  1498  007808  C000  FFF6         	movff	btemp,tblptrl
  1499  00780C  C001  FFF7         	movff	btemp+1,tblptrh
  1500  007810  0E0F               	movlw	(high __ramtop+-1)
  1501  007812  64F7               	cpfsgt	tblptrh,c
  1502  007814  D007               	bra	u527
  1503  007816  0009               	tblrd		*+
  1504  007818  CFF5 F000          	movff	tablat,btemp
  1505  00781C  0009               	tblrd		*+
  1506  00781E  CFF5 F001          	movff	tablat,btemp+1
  1507  007822  D008               	bra	u520
  1508  007824                     u527:
  1509  007824  CFF6 FFE9          	movff	tblptrl,fsr0l
  1510  007828  CFF7 FFEA          	movff	tblptrh,fsr0h
  1511  00782C  CFEE F000          	movff	postinc0,btemp
  1512  007830  CFEE F001          	movff	postinc0,btemp+1
  1513  007834                     u520:
  1514  007834  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1515  007836  0D03               	mullw	3
  1516  007838  5000               	movf	btemp,w,c
  1517  00783A  24F3               	addwf	prodl,w,c
  1518  00783C  6E02               	movwf	btemp+2,c
  1519  00783E  5001               	movf	btemp+1,w,c
  1520  007840  20F4               	addwfc	prodh,w,c
  1521  007842  6E03               	movwf	btemp+3,c
  1522  007844  C002  FFF6         	movff	btemp+2,tblptrl
  1523  007848  C003  FFF7         	movff	btemp+3,tblptrh
  1524  00784C  0E0F               	movlw	(high __ramtop+-1)
  1525  00784E  64F7               	cpfsgt	tblptrh,c
  1526  007850  D007               	bra	u537
  1527  007852  0009               	tblrd		*+
  1528  007854  CFF5 F000          	movff	tablat,btemp
  1529  007858  0009               	tblrd		*+
  1530  00785A  CFF5 F001          	movff	tablat,btemp+1
  1531  00785E  D008               	bra	u530
  1532  007860                     u537:
  1533  007860  CFF6 FFE9          	movff	tblptrl,fsr0l
  1534  007864  CFF7 FFEA          	movff	tblptrh,fsr0h
  1535  007868  CFEE F000          	movff	postinc0,btemp
  1536  00786C  CFEE F001          	movff	postinc0,btemp+1
  1537  007870                     u530:
  1538  007870  50D9               	movf	fsr2l,w,c
  1539  007872  0D03               	mullw	3
  1540  007874  50F3               	movf	prodl,w,c
  1541  007876  0FA6               	addlw	low _Klj
  1542  007878  6EF6               	movwf	tblptrl,c
  1543  00787A  50F4               	movf	prodh,w,c
  1544  00787C  6EF7               	movwf	tblptrh,c
  1545  00787E  0E10               	movlw	high _Klj
  1546  007880  22F7               	addwfc	tblptrh,f,c
  1547  007882  0009               	tblrd		*+
  1548  007884  CFF5 F002          	movff	tablat,btemp+2
  1549  007888  0009               	tblrd		*+
  1550  00788A  CFF5 F003          	movff	tablat,btemp+3
  1551  00788E  0E08               	movlw	8
  1552  007890  2602               	addwf	btemp+2,f,c
  1553  007892  0E00               	movlw	0
  1554  007894  2203               	addwfc	btemp+3,f,c
  1555  007896  C002  FFF6         	movff	btemp+2,tblptrl
  1556  00789A  C003  FFF7         	movff	btemp+3,tblptrh
  1557  00789E  0E0F               	movlw	(high __ramtop+-1)
  1558  0078A0  64F7               	cpfsgt	tblptrh,c
  1559  0078A2  D007               	bra	u547
  1560  0078A4  0009               	tblrd		*+
  1561  0078A6  CFF5 F002          	movff	tablat,btemp+2
  1562  0078AA  0009               	tblrd		*+
  1563  0078AC  CFF5 F003          	movff	tablat,btemp+3
  1564  0078B0  D008               	bra	u540
  1565  0078B2                     u547:
  1566  0078B2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1567  0078B6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1568  0078BA  CFEE F002          	movff	postinc0,btemp+2
  1569  0078BE  CFEE F003          	movff	postinc0,btemp+3
  1570  0078C2                     u540:
  1571  0078C2  C002  FFF6         	movff	btemp+2,tblptrl
  1572  0078C6  C003  FFF7         	movff	btemp+3,tblptrh
  1573  0078CA  0E0F               	movlw	(high __ramtop+-1)
  1574  0078CC  64F7               	cpfsgt	tblptrh,c
  1575  0078CE  D007               	bra	u557
  1576  0078D0  0009               	tblrd		*+
  1577  0078D2  CFF5 F002          	movff	tablat,btemp+2
  1578  0078D6  0009               	tblrd		*+
  1579  0078D8  CFF5 F003          	movff	tablat,btemp+3
  1580  0078DC  D008               	bra	u550
  1581  0078DE                     u557:
  1582  0078DE  CFF6 FFE9          	movff	tblptrl,fsr0l
  1583  0078E2  CFF7 FFEA          	movff	tblptrh,fsr0h
  1584  0078E6  CFEE F002          	movff	postinc0,btemp+2
  1585  0078EA  CFEE F003          	movff	postinc0,btemp+3
  1586  0078EE                     u550:
  1587  0078EE  0E02               	movlw	2
  1588  0078F0  2402               	addwf	btemp+2,w,c
  1589  0078F2  6EE9               	movwf	fsr0l,c
  1590  0078F4  0E00               	movlw	0
  1591  0078F6  2003               	addwfc	btemp+3,w,c
  1592  0078F8  6EEA               	movwf	fsr0h,c
  1593  0078FA  C000  FFEE         	movff	btemp,postinc0
  1594  0078FE  C001  FFED         	movff	btemp+1,postdec0
  1595                           ;wsw.c: 403: }else (*(*(*Klj[j].KL).KOut).CAdr)=
      +                          *((*Klj[j].KL).KAP[i].PAdr);
  1596  007902  D095               	goto	l56
  1597  007904                     l55:
  1598  007904  50D9               	movf	fsr2l,w,c
  1599  007906  0D03               	mullw	3
  1600  007908  50F3               	movf	prodl,w,c
  1601  00790A  0FA6               	addlw	low _Klj
  1602  00790C  6EF6               	movwf	tblptrl,c
  1603  00790E  50F4               	movf	prodh,w,c
  1604  007910  6EF7               	movwf	tblptrh,c
  1605  007912  0E10               	movlw	high _Klj
  1606  007914  22F7               	addwfc	tblptrh,f,c
  1607  007916  0009               	tblrd		*+
  1608  007918  CFF5 F000          	movff	tablat,btemp
  1609  00791C  0009               	tblrd		*+
  1610  00791E  CFF5 F001          	movff	tablat,btemp+1
  1611  007922  C000  FFF6         	movff	btemp,tblptrl
  1612  007926  C001  FFF7         	movff	btemp+1,tblptrh
  1613  00792A  0E0F               	movlw	(high __ramtop+-1)
  1614  00792C  64F7               	cpfsgt	tblptrh,c
  1615  00792E  D007               	bra	u567
  1616  007930  0009               	tblrd		*+
  1617  007932  CFF5 F000          	movff	tablat,btemp
  1618  007936  0009               	tblrd		*+
  1619  007938  CFF5 F001          	movff	tablat,btemp+1
  1620  00793C  D008               	bra	u560
  1621  00793E                     u567:
  1622  00793E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1623  007942  CFF7 FFEA          	movff	tblptrh,fsr0h
  1624  007946  CFEE F000          	movff	postinc0,btemp
  1625  00794A  CFEE F001          	movff	postinc0,btemp+1
  1626  00794E                     u560:
  1627  00794E  0100               	movlb	__Lparam shr (0+8)
  1628  007950  51FC               	movf	?a_KolProc^(__Lparam& (0+65280)),w
  1629  007952  0D02               	mullw	2
  1630  007954  5000               	movf	btemp,w,c
  1631  007956  24F3               	addwf	prodl,w,c
  1632  007958  6E02               	movwf	btemp+2,c
  1633  00795A  5001               	movf	btemp+1,w,c
  1634  00795C  20F4               	addwfc	prodh,w,c
  1635  00795E  6E03               	movwf	btemp+3,c
  1636  007960  C002  FFF6         	movff	btemp+2,tblptrl
  1637  007964  C003  FFF7         	movff	btemp+3,tblptrh
  1638  007968  0E0F               	movlw	(high __ramtop+-1)
  1639  00796A  64F7               	cpfsgt	tblptrh,c
  1640  00796C  D007               	bra	u577
  1641  00796E  0009               	tblrd		*+
  1642  007970  CFF5 F000          	movff	tablat,btemp
  1643  007974  0009               	tblrd		*+
  1644  007976  CFF5 F001          	movff	tablat,btemp+1
  1645  00797A  D008               	bra	u570
  1646  00797C                     u577:
  1647  00797C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1648  007980  CFF7 FFEA          	movff	tblptrh,fsr0h
  1649  007984  CFEE F000          	movff	postinc0,btemp
  1650  007988  CFEE F001          	movff	postinc0,btemp+1
  1651  00798C                     u570:
  1652  00798C  C000  FFE1         	movff	btemp,fsr1l
  1653  007990  C001  FFE2         	movff	btemp+1,fsr1h
  1654  007994  50D9               	movf	fsr2l,w,c
  1655  007996  0D03               	mullw	3
  1656  007998  50F3               	movf	prodl,w,c
  1657  00799A  0FA6               	addlw	low _Klj
  1658  00799C  6EF6               	movwf	tblptrl,c
  1659  00799E  50F4               	movf	prodh,w,c
  1660  0079A0  6EF7               	movwf	tblptrh,c
  1661  0079A2  0E10               	movlw	high _Klj
  1662  0079A4  22F7               	addwfc	tblptrh,f,c
  1663  0079A6  0009               	tblrd		*+
  1664  0079A8  CFF5 F000          	movff	tablat,btemp
  1665  0079AC  0009               	tblrd		*+
  1666  0079AE  CFF5 F001          	movff	tablat,btemp+1
  1667  0079B2  0E08               	movlw	8
  1668  0079B4  2600               	addwf	btemp,f,c
  1669  0079B6  0E00               	movlw	0
  1670  0079B8  2201               	addwfc	btemp+1,f,c
  1671  0079BA  C000  FFF6         	movff	btemp,tblptrl
  1672  0079BE  C001  FFF7         	movff	btemp+1,tblptrh
  1673  0079C2  0E0F               	movlw	(high __ramtop+-1)
  1674  0079C4  64F7               	cpfsgt	tblptrh,c
  1675  0079C6  D007               	bra	u587
  1676  0079C8  0009               	tblrd		*+
  1677  0079CA  CFF5 F000          	movff	tablat,btemp
  1678  0079CE  0009               	tblrd		*+
  1679  0079D0  CFF5 F001          	movff	tablat,btemp+1
  1680  0079D4  D008               	bra	u580
  1681  0079D6                     u587:
  1682  0079D6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1683  0079DA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1684  0079DE  CFEE F000          	movff	postinc0,btemp
  1685  0079E2  CFEE F001          	movff	postinc0,btemp+1
  1686  0079E6                     u580:
  1687  0079E6  C000  FFF6         	movff	btemp,tblptrl
  1688  0079EA  C001  FFF7         	movff	btemp+1,tblptrh
  1689  0079EE  0E0F               	movlw	(high __ramtop+-1)
  1690  0079F0  64F7               	cpfsgt	tblptrh,c
  1691  0079F2  D007               	bra	u597
  1692  0079F4  0009               	tblrd		*+
  1693  0079F6  CFF5 F000          	movff	tablat,btemp
  1694  0079FA  0009               	tblrd		*+
  1695  0079FC  CFF5 F001          	movff	tablat,btemp+1
  1696  007A00  D008               	bra	u590
  1697  007A02                     u597:
  1698  007A02  CFF6 FFE9          	movff	tblptrl,fsr0l
  1699  007A06  CFF7 FFEA          	movff	tblptrh,fsr0h
  1700  007A0A  CFEE F000          	movff	postinc0,btemp
  1701  007A0E  CFEE F001          	movff	postinc0,btemp+1
  1702  007A12                     u590:
  1703  007A12  C000  FFE9         	movff	btemp,fsr0l
  1704  007A16  C001  FFEA         	movff	btemp+1,fsr0h
  1705  007A1A  CFE6 FFEE          	movff	postinc1,postinc0
  1706  007A1E  CFE6 FFEE          	movff	postinc1,postinc0
  1707  007A22  CFE6 FFEE          	movff	postinc1,postinc0
  1708  007A26  CFE5 FFED          	movff	postdec1,postdec0
  1709  007A2A  52ED               	movf	postdec0,f,c
  1710  007A2C  52ED               	movf	postdec0,f,c
  1711  007A2E                     l56:
  1712                           ;wsw.c: 404: (*(*(*Klj[j].KL).KOut).CAdr).St.foc
      +                          us=1;
  1713  007A2E  50D9               	movf	fsr2l,w,c
  1714  007A30  0D03               	mullw	3
  1715  007A32  50F3               	movf	prodl,w,c
  1716  007A34  0FA6               	addlw	low _Klj
  1717  007A36  6EF6               	movwf	tblptrl,c
  1718  007A38  50F4               	movf	prodh,w,c
  1719  007A3A  6EF7               	movwf	tblptrh,c
  1720  007A3C  0E10               	movlw	high _Klj
  1721  007A3E  22F7               	addwfc	tblptrh,f,c
  1722  007A40  0009               	tblrd		*+
  1723  007A42  CFF5 F000          	movff	tablat,btemp
  1724  007A46  0009               	tblrd		*+
  1725  007A48  CFF5 F001          	movff	tablat,btemp+1
  1726  007A4C  0E08               	movlw	8
  1727  007A4E  2600               	addwf	btemp,f,c
  1728  007A50  0E00               	movlw	0
  1729  007A52  2201               	addwfc	btemp+1,f,c
  1730  007A54  C000  FFF6         	movff	btemp,tblptrl
  1731  007A58  C001  FFF7         	movff	btemp+1,tblptrh
  1732  007A5C  0E0F               	movlw	(high __ramtop+-1)
  1733  007A5E  64F7               	cpfsgt	tblptrh,c
  1734  007A60  D007               	bra	u607
  1735  007A62  0009               	tblrd		*+
  1736  007A64  CFF5 F000          	movff	tablat,btemp
  1737  007A68  0009               	tblrd		*+
  1738  007A6A  CFF5 F001          	movff	tablat,btemp+1
  1739  007A6E  D008               	bra	u600
  1740  007A70                     u607:
  1741  007A70  CFF6 FFE9          	movff	tblptrl,fsr0l
  1742  007A74  CFF7 FFEA          	movff	tblptrh,fsr0h
  1743  007A78  CFEE F000          	movff	postinc0,btemp
  1744  007A7C  CFEE F001          	movff	postinc0,btemp+1
  1745  007A80                     u600:
  1746  007A80  C000  FFF6         	movff	btemp,tblptrl
  1747  007A84  C001  FFF7         	movff	btemp+1,tblptrh
  1748  007A88  0E0F               	movlw	(high __ramtop+-1)
  1749  007A8A  64F7               	cpfsgt	tblptrh,c
  1750  007A8C  D007               	bra	u617
  1751  007A8E  0009               	tblrd		*+
  1752  007A90  CFF5 F000          	movff	tablat,btemp
  1753  007A94  0009               	tblrd		*+
  1754  007A96  CFF5 F001          	movff	tablat,btemp+1
  1755  007A9A  D008               	bra	u610
  1756  007A9C                     u617:
  1757  007A9C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1758  007AA0  CFF7 FFEA          	movff	tblptrh,fsr0h
  1759  007AA4  CFEE F000          	movff	postinc0,btemp
  1760  007AA8  CFEE F001          	movff	postinc0,btemp+1
  1761  007AAC                     u610:
  1762  007AAC  C000  FFE9         	movff	btemp,fsr0l
  1763  007AB0  C001  FFEA         	movff	btemp+1,fsr0h
  1764  007AB4  50EF               	movf	indf0,w,c
  1765  007AB6  0BFE               	andlw	-2
  1766  007AB8  0901               	iorlw	1
  1767  007ABA  6EEF               	movwf	indf0,c
  1768                           ;wsw.c: 405: break;
  1769  007ABC  D056               	goto	l36
  1770  007ABE                     l53:
  1771                           ;wsw.c: 407: {
  1772  007ABE  50D9               	movf	fsr2l,w,c
  1773  007AC0  0D03               	mullw	3
  1774  007AC2  0E07               	movlw	low _KTim
  1775  007AC4  24F3               	addwf	prodl,w,c
  1776  007AC6  6EE9               	movwf	fsr0l,c
  1777  007AC8  0E01               	movlw	high _KTim
  1778  007ACA  20F4               	addwfc	prodh,w,c
  1779  007ACC  6EEA               	movwf	fsr0h,c
  1780  007ACE  6AEF               	clrf	indf0,c
  1781                           ;wsw.c: 409: KTim[j].ndS=0;
  1782  007AD0  50D9               	movf	fsr2l,w,c
  1783  007AD2  0D03               	mullw	3
  1784  007AD4  0E08               	movlw	low (_KTim+1)
  1785  007AD6  24F3               	addwf	prodl,w,c
  1786  007AD8  6EE9               	movwf	fsr0l,c
  1787  007ADA  0E01               	movlw	high (_KTim+1)
  1788  007ADC  20F4               	addwfc	prodh,w,c
  1789  007ADE  6EEA               	movwf	fsr0h,c
  1790  007AE0  6AEF               	clrf	indf0,c
  1791                           ;wsw.c: 410: if (KInd[j].indeks>=Klj[j].nPzc-1)
  1792  007AE2  50D9               	movf	fsr2l,w,c
  1793  007AE4  0D03               	mullw	3
  1794  007AE6  50F3               	movf	prodl,w,c
  1795  007AE8  0FA6               	addlw	low _Klj
  1796  007AEA  6EF6               	movwf	tblptrl,c
  1797  007AEC  50F4               	movf	prodh,w,c
  1798  007AEE  6EF7               	movwf	tblptrh,c
  1799  007AF0  0E10               	movlw	high _Klj
  1800  007AF2  22F7               	addwfc	tblptrh,f,c
  1801  007AF4  0E02               	movlw	2
  1802  007AF6  26F6               	addwf	tblptrl,f,c
  1803  007AF8  0E00               	movlw	0
  1804  007AFA  22F7               	addwfc	tblptrh,f,c
  1805  007AFC  0008               	tblrd		*
  1806  007AFE  50F5               	movf	tablat,w,c
  1807  007B00  6E00               	movwf	btemp,c
  1808  007B02  0FFF               	addlw	255
  1809  007B04  6EF6               	movwf	tblptrl,c
  1810  007B06  6AF7               	clrf	tblptrh,c
  1811  007B08  0EFF               	movlw	255
  1812  007B0A  22F7               	addwfc	tblptrh,f,c
  1813  007B0C  50D9               	movf	fsr2l,w,c
  1814  007B0E  EE0F  F03C         	lfsr	0,_KInd
  1815  007B12  26E9               	addwf	fsr0l,f,c
  1816  007B14  0E00               	movlw	0
  1817  007B16  22EA               	addwfc	fsr0h,f,c
  1818  007B18  30EF               	rrcf	indf0,w,c
  1819  007B1A  6E00               	movwf	btemp,c
  1820  007B1C  3000               	rrcf	btemp,w,c
  1821  007B1E  0B3F               	andlw	63
  1822  007B20  6E00               	movwf	btemp,c
  1823  007B22  C000  F002         	movff	btemp,btemp+2
  1824  007B26  6A03               	clrf	btemp+3,c
  1825  007B28  5003               	movf	btemp+3,w,c
  1826  007B2A  0A80               	xorlw	128
  1827  007B2C  6E00               	movwf	btemp,c
  1828  007B2E  50F7               	movf	tblptrh,w,c
  1829  007B30  0A80               	xorlw	128
  1830  007B32  5C00               	subwf	btemp,w,c
  1831  007B34  E102               	bnz	u625
  1832  007B36  50F6               	movf	tblptrl,w,c
  1833  007B38  5C02               	subwf	btemp+2,w,c
  1834  007B3A                     u625:
  1835  007B3A  E313               	bnc	l37
  1836                           ;wsw.c: 411: {
  1837  007B3C  50D9               	movf	fsr2l,w,c
  1838  007B3E  EE0F  F03C         	lfsr	0,_KInd
  1839  007B42  26E9               	addwf	fsr0l,f,c
  1840  007B44  0E00               	movlw	0
  1841  007B46  22EA               	addwfc	fsr0h,f,c
  1842  007B48  0E03               	movlw	-253
  1843  007B4A  16EF               	andwf	indf0,f,c
  1844                           ;wsw.c: 413: if(nC) KTim[j].cykl++;
  1845  007B4C  50E1               	movf	fsr1l,w,c
  1846  007B4E  E009               	bz	l37
  1847  007B50  50D9               	movf	fsr2l,w,c
  1848  007B52  0D03               	mullw	3
  1849  007B54  0E09               	movlw	low (_KTim+2)
  1850  007B56  24F3               	addwf	prodl,w,c
  1851  007B58  6EE9               	movwf	fsr0l,c
  1852  007B5A  0E01               	movlw	high (_KTim+2)
  1853  007B5C  20F4               	addwfc	prodh,w,c
  1854  007B5E  6EEA               	movwf	fsr0h,c
  1855  007B60  2AEF               	incf	indf0,f,c
  1856  007B62                     l37:
  1857  007B62  0100               	movlb	__Lparam shr (0+8)
  1858  007B64  2BFC               	incf	?a_KolProc^(__Lparam& (0+65280)),f,b
  1859  007B66  EFEE  F038         	goto	l38
  1860  007B6A                     l36:
  1861  007B6A  2AD9               	incf	fsr2l,f,c
  1862  007B6C  0E03               	movlw	3
  1863  007B6E  64D9               	cpfsgt	fsr2l,c
  1864  007B70  EF20  F037         	goto	l20
  1865  007B74  0C03               	retlw	3
  1866                           ;wsw.c: 414: }
  1867  007B76                     __end_of_KolProc:
  1868                           ;wsw.c: 424: void SetPrWswData(void)
  1869                           ;wsw.c: 425: {
  1870  007B76                     _SetPrWswData:
  1871  000000                     
  1872                           ;wsw.c: 426: unsigned char i;
  1873  007B76  6AD9               	clrf	fsr2l,c
  1874  007B78                     l61:
  1875                           ;wsw.c: 428: {
  1876  007B78  50D9               	movf	fsr2l,w,c
  1877  007B7A  0D04               	mullw	4
  1878  007B7C  0E2F               	movlw	low _PWD
  1879  007B7E  24F3               	addwf	prodl,w,c
  1880  007B80  6EE9               	movwf	fsr0l,c
  1881  007B82  0E01               	movlw	high _PWD
  1882  007B84  20F4               	addwfc	prodh,w,c
  1883  007B86  6EEA               	movwf	fsr0h,c
  1884  007B88  50EF               	movf	indf0,w,c
  1885  007B8A  6E00               	movwf	btemp,c
  1886  007B8C  A000               	btfss	btemp,0,c
  1887  007B8E  D013               	goto	l64
  1888                           ;wsw.c: 430: {
  1889  007B90  50D9               	movf	fsr2l,w,c
  1890  007B92  0D04               	mullw	4
  1891  007B94  0E2F               	movlw	low _PWD
  1892  007B96  24F3               	addwf	prodl,w,c
  1893  007B98  6EE9               	movwf	fsr0l,c
  1894  007B9A  0E01               	movlw	high _PWD
  1895  007B9C  20F4               	addwfc	prodh,w,c
  1896  007B9E  6EEA               	movwf	fsr0h,c
  1897  007BA0  CFEE F103          	movff	postinc0,_WswData
  1898  007BA4  CFEE F104          	movff	postinc0,_WswData+1
  1899  007BA8  CFEE F105          	movff	postinc0,_WswData+2
  1900  007BAC  CFED F106          	movff	postdec0,_WswData+3
  1901  007BB0  52ED               	movf	postdec0,f,c
  1902  007BB2  52ED               	movf	postdec0,f,c
  1903                           ;wsw.c: 432: return;
  1904  007BB4  0012               	return	
  1905  007BB6                     l64:
  1906                           ;wsw.c: 433: };
  1907  007BB6  2AD9               	incf	fsr2l,f,c
  1908  007BB8  0E08               	movlw	8
  1909  007BBA  64D9               	cpfsgt	fsr2l,c
  1910  007BBC  D7DD               	goto	l61
  1911                           ;wsw.c: 434: }
  1912  007BBE  C153  F103         	movff	_PWD+36,_WswData
  1913  007BC2  C154  F104         	movff	_PWD+37,_WswData+1
  1914  007BC6  C155  F105         	movff	_PWD+38,_WswData+2
  1915  007BCA  C156  F106         	movff	_PWD+39,_WswData+3
  1916                           ;wsw.c: 436: }
  1917  007BCE  0C08               	retlw	8
  1918  007BD0                     __end_of_SetPrWswData:
  1919                           ;wsw.c: 438: void Swbty(unsigned char dtd);
  1920                           ;wsw.c: 439: void Rwbty(unsigned char dtd);
  1921                           ;wsw.c: 441: void FormatWswData(void)
  1922                           ;wsw.c: 442: {
  1923  007BD0                     _FormatWswData:
  1924  000000                     
  1925                           ;wsw.c: 443: unsigned char nrbty;
  1926  007BD0  0101               	movlb	_WswData shr (0+8)
  1927  007BD2  A503               	btfss	_WswData& (0+255),2,b
  1928  007BD4  D019               	goto	l66
  1929                           ;wsw.c: 446: {
  1930  007BD6  C106  F000         	movff	_WswData+3,btemp
  1931  007BDA  0EF0               	movlw	-16
  1932  007BDC  1600               	andwf	btemp,f,c
  1933  007BDE  3A00               	swapf	btemp,f,c
  1934  007BE0  0E0F               	movlw	15
  1935  007BE2  1600               	andwf	btemp,f,c
  1936  007BE4  C000  F002         	movff	btemp,btemp+2
  1937  007BE8  6A03               	clrf	btemp+3,c
  1938  007BEA  5002               	movf	btemp+2,w,c
  1939  007BEC  0FB2               	addlw	low _Znak
  1940  007BEE  6EF6               	movwf	tblptrl,c
  1941  007BF0  5003               	movf	btemp+3,w,c
  1942  007BF2  6EF7               	movwf	tblptrh,c
  1943  007BF4  0E10               	movlw	high _Znak
  1944  007BF6  22F7               	addwfc	tblptrh,f,c
  1945  007BF8  0008               	tblrd		*
  1946  007BFA  CFF5 F101          	movff	tablat,_LedData+1
  1947                           ;wsw.c: 448: LedData.dLed0=Znak[WswData.Dt.Data0
      +                          &0x0F];
  1948  007BFE  C106  F000         	movff	_WswData+3,btemp
  1949  007C02  0E0F               	movlw	15
  1950  007C04  1600               	andwf	btemp,f,c
  1951  007C06  D022               	goto	L1
  1952                           ;wsw.c: 449: }else
  1953  007C08                     l66:
  1954                           ;wsw.c: 450: if(WswData.St.dec)
  1955  007C08  0101               	movlb	_WswData shr (0+8)
  1956  007C0A  A303               	btfss	_WswData& (0+255),1,b
  1957  007C0C  D02D               	goto	l68
  1958                           ;wsw.c: 451: {
  1959  007C0E  0E63               	movlw	99
  1960  007C10  6506               	cpfsgt	(_WswData+3)& (0+255),b
  1961  007C12  D002               	goto	l69
  1962  007C14  CFE8 F106          	movff	wreg,_WswData+3
  1963  007C18                     l69:
  1964                           ;wsw.c: 453: LedData.dLed1=Znak[WswData.Dt.Data0
      +                          /10];
  1965  007C18  0E0A               	movlw	10
  1966  007C1A  6E01               	movwf	btemp+1,c
  1967  007C1C  C106  FFE8         	movff	_WswData+3,wreg
  1968  007C20  EC65  F072         	call	lbdiv
  1969  007C24  6E00               	movwf	btemp,c
  1970  007C26  C000  F002         	movff	btemp,btemp+2
  1971  007C2A  6A03               	clrf	btemp+3,c
  1972  007C2C  5002               	movf	btemp+2,w,c
  1973  007C2E  0FB2               	addlw	low _Znak
  1974  007C30  6EF6               	movwf	tblptrl,c
  1975  007C32  5003               	movf	btemp+3,w,c
  1976  007C34  6EF7               	movwf	tblptrh,c
  1977  007C36  0E10               	movlw	high _Znak
  1978  007C38  22F7               	addwfc	tblptrh,f,c
  1979  007C3A  0008               	tblrd		*
  1980  007C3C  CFF5 F101          	movff	tablat,_LedData+1
  1981                           ;wsw.c: 454: LedData.dLed0=Znak[WswData.Dt.Data0
      +                          %10];
  1982  007C40  0E0A               	movlw	10
  1983  007C42  6E01               	movwf	btemp+1,c
  1984  007C44  C106  FFE8         	movff	_WswData+3,wreg
  1985  007C48  EC65  F072         	call	lbmod
  1986  007C4C                     L1:
  1987  007C4C  C000  F002         	movff	btemp,btemp+2
  1988  007C50  6A03               	clrf	btemp+3,c
  1989  007C52  5002               	movf	btemp+2,w,c
  1990  007C54  0FB2               	addlw	low _Znak
  1991  007C56  6EF6               	movwf	tblptrl,c
  1992  007C58  5003               	movf	btemp+3,w,c
  1993  007C5A  6EF7               	movwf	tblptrh,c
  1994  007C5C  0E10               	movlw	high _Znak
  1995  007C5E  22F7               	addwfc	tblptrh,f,c
  1996  007C60  0008               	tblrd		*
  1997  007C62  CFF5 F102          	movff	tablat,_LedData+2
  1998                           ;wsw.c: 455: }else
  1999  007C66  D004               	goto	l67
  2000  007C68                     l68:
  2001                           ;wsw.c: 456: {
  2002  007C68  C105  F101         	movff	_WswData+2,_LedData+1
  2003                           ;wsw.c: 458: LedData.dLed0=WswData.Dt.Data0;
  2004  007C6C  C106  F102         	movff	_WswData+3,_LedData+2
  2005  007C70                     l67:
  2006                           ;wsw.c: 459: }
  2007  007C70  0101               	movlb	_WswData shr (0+8)
  2008  007C72  A703               	btfss	_WswData& (0+255),3,b
  2009  007C74  D00B               	goto	l71
  2010  007C76  0EB2               	movlw	low _Znak
  2011  007C78  6EF6               	movwf	tblptrl,c
  2012  007C7A  0E10               	movlw	high _Znak
  2013  007C7C  6EF7               	movwf	tblptrh,c
  2014  007C7E  0008               	tblrd		*
  2015  007C80  50F5               	movf	tablat,w,c
  2016  007C82  6301               	cpfseq	(_LedData+1)& (0+255),b
  2017  007C84  D003               	goto	l71
  2018                           ;wsw.c: 461: LedData.dLed1=0b11111111;
  2019  007C86  0EFF               	movlw	255
  2020  007C88  CFE8 F101          	movff	wreg,_LedData+1
  2021  007C8C                     l71:
  2022                           ;wsw.c: 462: if (WswData.St.kropka0)
  2023  007C8C  0101               	movlb	_WswData shr (0+8)
  2024  007C8E  A903               	btfss	_WswData& (0+255),4,b
  2025  007C90  D005               	goto	l72
  2026                           ;wsw.c: 463: LedData.dLed0=LedData.dLed0&0b11101
      +                          111;
  2027  007C92  C102  FFE8         	movff	_LedData+2,wreg
  2028  007C96  0BEF               	andlw	-17
  2029  007C98  CFE8 F102          	movff	wreg,_LedData+2
  2030  007C9C                     l72:
  2031                           ;wsw.c: 464: if (WswData.St.kropka1)
  2032  007C9C  0101               	movlb	_WswData shr (0+8)
  2033  007C9E  AB03               	btfss	_WswData& (0+255),5,b
  2034  007CA0  D005               	goto	l73
  2035                           ;wsw.c: 465: LedData.dLed1=LedData.dLed1&0b11101
      +                          111;
  2036  007CA2  C101  FFE8         	movff	_LedData+1,wreg
  2037  007CA6  0BEF               	andlw	-17
  2038  007CA8  CFE8 F101          	movff	wreg,_LedData+1
  2039  007CAC                     l73:
  2040                           ;wsw.c: 466: if (WswData.St.wygas0||LedData.setO
      +                          ff)
  2041  007CAC  0101               	movlb	_WswData shr (0+8)
  2042  007CAE  BD03               	btfsc	_WswData& (0+255),6,b
  2043  007CB0  D002               	goto	u780
  2044  007CB2  A100               	btfss	_LedData& (0+255),0,b
  2045  007CB4  D003               	goto	l74
  2046  007CB6                     u780:
  2047                           ;wsw.c: 467: LedData.dLed0=0b11111111;
  2048  007CB6  0EFF               	movlw	255
  2049  007CB8  CFE8 F102          	movff	wreg,_LedData+2
  2050  007CBC                     l74:
  2051                           ;wsw.c: 468: if (WswData.St.wygas1||LedData.setO
      +                          ff)
  2052  007CBC  0101               	movlb	_WswData shr (0+8)
  2053  007CBE  BF03               	btfsc	_WswData& (0+255),7,b
  2054  007CC0  D002               	goto	u810
  2055  007CC2  A100               	btfss	_LedData& (0+255),0,b
  2056  007CC4  D003               	goto	l75
  2057  007CC6                     u810:
  2058                           ;wsw.c: 469: LedData.dLed1=0b11111111;
  2059  007CC6  0EFF               	movlw	255
  2060  007CC8  CFE8 F101          	movff	wreg,_LedData+1
  2061  007CCC                     l75:
  2062                           ;wsw.c: 471: if (LedData.setOff)
  2063  007CCC  0101               	movlb	_LedData shr (0+8)
  2064  007CCE  A100               	btfss	_LedData& (0+255),0,b
  2065  007CD0  D004               	goto	l76
  2066                           ;wsw.c: 472: {
  2067  007CD2  010F               	movlb	(_wbty+1) shr (0+8)
  2068  007CD4  0E0F               	movlw	15
  2069  007CD6  133B               	iorwf	(_wbty+1)& (0+255),f,b
  2070                           ;wsw.c: 480: }
  2071  007CD8  0C0F               	retlw	15
  2072  007CDA                     l76:
  2073                           ;wsw.c: 481: else
  2074  007CDA  EE01  F004         	lfsr	0,_WswData+1
  2075  007CDE  38EF               	swapf	indf0,w,c
  2076  007CE0  0B0F               	andlw	15
  2077  007CE2  E015               	bz	l78
  2078  007CE4  0101               	movlb	(_WswData+1) shr (0+8)
  2079  007CE6  B504               	btfsc	(_WswData+1)& (0+255),2,b
  2080  007CE8  D002               	goto	u870
  2081  007CEA  A704               	btfss	(_WswData+1)& (0+255),3,b
  2082  007CEC  D010               	goto	l78
  2083  007CEE                     u870:
  2084                           ;wsw.c: 483: {
  2085  007CEE  0101               	movlb	(_WswData+1) shr (0+8)
  2086  007CF0  A504               	btfss	(_WswData+1)& (0+255),2,b
  2087  007CF2  D005               	goto	l79
  2088  007CF4  EE01  F004         	lfsr	0,_WswData+1
  2089  007CF8  38EF               	swapf	indf0,w,c
  2090  007CFA  0B0F               	andlw	15
  2091  007CFC  D08E               	goto	_Swbty
  2092  007CFE                     l79:
  2093                           ;wsw.c: 487: else
  2094  007CFE  0101               	movlb	(_WswData+1) shr (0+8)
  2095  007D00  A704               	btfss	(_WswData+1)& (0+255),3,b
  2096  007D02  0012               	return	
  2097  007D04  EE01  F004         	lfsr	0,_WswData+1
  2098  007D08  38EF               	swapf	indf0,w,c
  2099  007D0A  0B0F               	andlw	15
  2100  007D0C  D09A               	goto	_Rwbty
  2101                           ;wsw.c: 489: }
  2102  007D0E                     l78:
  2103                           ;wsw.c: 490: else
  2104  007D0E  010F               	movlb	(_wbty+1) shr (0+8)
  2105  007D10  0E0F               	movlw	15
  2106  007D12  133B               	iorwf	(_wbty+1)& (0+255),f,b
  2107                           ;wsw.c: 496: wbty[1]&=~(wsdid);
  2108  007D14  CF39  FFE8         	movff	_wsdid,wreg
  2109  007D18  0AFF               	xorlw	255
  2110  007D1A  173B               	andwf	(_wbty+1)& (0+255),f,b
  2111                           ;wsw.c: 502: }
  2112  007D1C  0012               	return	
  2113  007D1E                     __end_of_FormatWswData:
  2114                           ;wsw.c: 508: void PrintWswData(void)
  2115                           ;wsw.c: 509: {
  2116  007D1E                     _PrintWswData:
  2117  000000                     
  2118                           ;wsw.c: 511: unsigned char i,j,k;
  2119  007D1E  725E               	btg	_mux/(0+8),_mux& (0+7),c
  2120                           ;wsw.c: 534: if (mux)
  2121  007D20  A25E               	btfss	_mux/(0+8),_mux& (0+7),c
  2122  007D22  D003               	goto	l84
  2123                           ;wsw.c: 535: wbty[0]=LedData.dLed0;
  2124  007D24  C102  FF3A         	movff	_LedData+2,_wbty
  2125  007D28  D002               	goto	l85
  2126  007D2A                     l84:
  2127                           ;wsw.c: 536: else
  2128  007D2A  C101  FF3A         	movff	_LedData+1,_wbty
  2129  007D2E                     l85:
  2130  007D2E  010F               	movlb	(_wbty+1) shr (0+8)
  2131                           ;wsw.c: 544: if(mux) wbty[2-1]|=(1<<4);
  2132  007D30  A25E               	btfss	_mux/(0+8),_mux& (0+7),c
  2133  007D32  D002               	goto	L5
  2134  007D34  893B               	bsf	(_wbty+1)& (0+255),4,b
  2135  007D36  D001               	goto	l87
  2136                           ;wsw.c: 545: else wbty[2-1]&=~(1<<4);
  2137  007D38                     L5:
  2138  007D38  993B               	bcf	(_wbty+1)& (0+255),4,b
  2139  007D3A                     l87:
  2140                           ;wsw.c: 546: for(k=0;k<2;k++)
  2141  007D3A  6AD9               	clrf	fsr2l,c
  2142  007D3C                     l88:
  2143                           ;wsw.c: 547: {
  2144  007D3C  6AE1               	clrf	fsr1l,c
  2145  007D3E                     l91:
  2146                           ;wsw.c: 549: {
  2147  007D3E  0E01               	movlw	1
  2148  007D40  6E00               	movwf	btemp,c
  2149  007D42  6A01               	clrf	btemp+1,c
  2150  007D44  50D9               	movf	fsr2l,w,c
  2151  007D46  5E00               	subwf	btemp,f,c
  2152  007D48  0E00               	movlw	0
  2153  007D4A  5A01               	subwfb	btemp+1,f,c
  2154  007D4C  0E3A               	movlw	low _wbty
  2155  007D4E  2400               	addwf	btemp,w,c
  2156  007D50  6EE9               	movwf	fsr0l,c
  2157  007D52  0E0F               	movlw	high _wbty
  2158  007D54  2001               	addwfc	btemp+1,w,c
  2159  007D56  6EEA               	movwf	fsr0h,c
  2160  007D58  50EF               	movf	indf0,w,c
  2161  007D5A  6E01               	movwf	btemp+1,c
  2162  007D5C  50E1               	movf	fsr1l,w,c
  2163  007D5E  0807               	sublw	7
  2164  007D60  6E02               	movwf	btemp+2,c
  2165  007D62  0E01               	movlw	1
  2166  007D64  6E00               	movwf	btemp,c
  2167  007D66  2A02               	incf	btemp+2,f,c
  2168  007D68  D002               	goto	u924
  2169  007D6A                     u925:
  2170  007D6A  90D8               	bcf	status,0,c
  2171  007D6C  3600               	rlcf	btemp,f,c
  2172  007D6E                     u924:
  2173  007D6E  2E02               	decfsz	btemp+2,f,c
  2174  007D70  D7FC               	goto	u925
  2175  007D72  5001               	movf	btemp+1,w,c
  2176  007D74  1400               	andwf	btemp,w,c
  2177  007D76  E002               	bz	u930
  2178  007D78  8284               	bsf	3972,1,c	;volatile
  2179  007D7A  D001               	goto	u945
  2180  007D7C                     u930:
  2181  007D7C  9284               	bcf	3972,1,c	;volatile
  2182  007D7E                     u945:
  2183                           ;wsw.c: 552: for(i=0;i<10;i++);
  2184                           ; _i allocated to fsr0l
  2185  007D7E  6AE9               	clrf	fsr0l,c
  2186  007D80                     l94:
  2187  007D80  2AE9               	incf	fsr0l,f,c
  2188  007D82  0E09               	movlw	9
  2189  007D84  64E9               	cpfsgt	fsr0l,c
  2190  007D86  D7FC               	goto	l94
  2191                           ;wsw.c: 553: RE2=1;
  2192  007D88  8484               	bsf	3972,2,c	;volatile
  2193                           ;wsw.c: 554: for(i=0;i<10;i++);
  2194  007D8A  6AE9               	clrf	fsr0l,c
  2195  007D8C                     l97:
  2196  007D8C  2AE9               	incf	fsr0l,f,c
  2197  007D8E  0E09               	movlw	9
  2198  007D90  64E9               	cpfsgt	fsr0l,c
  2199  007D92  D7FC               	goto	l97
  2200                           ;wsw.c: 555: RE2=0;
  2201  007D94  9484               	bcf	3972,2,c	;volatile
  2202  007D96  2AE1               	incf	fsr1l,f,c
  2203  007D98  0E07               	movlw	7
  2204  007D9A  64E1               	cpfsgt	fsr1l,c
  2205  007D9C  D7D0               	goto	l91
  2206  007D9E  2AD9               	incf	fsr2l,f,c
  2207  007DA0  0E01               	movlw	1
  2208  007DA2  64D9               	cpfsgt	fsr2l,c
  2209  007DA4  D7CB               	goto	l88
  2210                           ;wsw.c: 556: }
  2211                           ; _i allocated to fsr2l
  2212  007DA6  6AD9               	clrf	fsr2l,c
  2213  007DA8                     l100:
  2214  007DA8  2AD9               	incf	fsr2l,f,c
  2215  007DAA  0E09               	movlw	9
  2216  007DAC  64D9               	cpfsgt	fsr2l,c
  2217  007DAE  D7FC               	goto	l100
  2218                           ;wsw.c: 560: RE0=1;
  2219  007DB0  8084               	bsf	3972,0,c	;volatile
  2220                           ;wsw.c: 561: for(i=0;i<10;i++);
  2221  007DB2  6AD9               	clrf	fsr2l,c
  2222  007DB4                     l103:
  2223  007DB4  2AD9               	incf	fsr2l,f,c
  2224  007DB6  0E09               	movlw	9
  2225  007DB8  64D9               	cpfsgt	fsr2l,c
  2226  007DBA  D7FC               	goto	l103
  2227                           ;wsw.c: 562: RE0=0;
  2228  007DBC  9084               	bcf	3972,0,c	;volatile
  2229                           ;wsw.c: 564: }
  2230  007DBE  0C09               	retlw	9
  2231  007DC0                     __end_of_PrintWswData:
  2232                           ;wsw.c: 572: void SetWbtyBit(unsigned char nrbty
      +                          , unsigned char nrbit, const unsigned char bt)
  2233                           ;wsw.c: 573: {
  2234  007DC0  00D7               	dw	?_SetWbtyBit
  2235  007DC2                     _SetWbtyBit:
  2236  000000                     
  2237                           ; _nrbty loaded to fsr2l
  2238  007DC2  6ED9               	movwf	fsr2l,c
  2239                           ;wsw.c: 574: if(nrbty>=2) nrbty=2-1;
  2240  007DC4  0E01               	movlw	1
  2241  007DC6  64D9               	cpfsgt	fsr2l,c
  2242  007DC8  D001               	goto	l107
  2243  007DCA  6ED9               	movwf	fsr2l,c
  2244  007DCC                     l107:
  2245                           ;wsw.c: 575: if(bt) wbty[nrbty]|=1<<nrbit;
  2246  007DCC  0100               	movlb	__Lparam shr (0+8)
  2247  007DCE  51D8               	movf	(?_SetWbtyBit+1)^(__Lparam& (0+65280)),w
  2248  007DD0  C0D7  F001         	movff	?_SetWbtyBit,btemp+1
  2249  007DD4  0E01               	movlw	1
  2250  007DD6  E010               	bz	L6
  2251  007DD8  6E00               	movwf	btemp,c
  2252  007DDA  2A01               	incf	btemp+1,f,c
  2253  007DDC  D002               	goto	u1034
  2254  007DDE                     u1035:
  2255  007DDE  90D8               	bcf	status,0,c
  2256  007DE0  3600               	rlcf	btemp,f,c
  2257  007DE2                     u1034:
  2258  007DE2  2E01               	decfsz	btemp+1,f,c
  2259  007DE4  D7FC               	goto	u1035
  2260  007DE6  50D9               	movf	fsr2l,w,c
  2261  007DE8  EE0F  F03A         	lfsr	0,_wbty
  2262  007DEC  26E9               	addwf	fsr0l,f,c
  2263  007DEE  0E00               	movlw	0
  2264  007DF0  22EA               	addwfc	fsr0h,f,c
  2265  007DF2  5000               	movf	btemp,w,c
  2266  007DF4  12EF               	iorwf	indf0,f,c
  2267  007DF6  0012               	return	
  2268                           ;wsw.c: 576: else wbty[nrbty]&=~(1<<nrbit);
  2269  007DF8                     L6:
  2270  007DF8  6E00               	movwf	btemp,c
  2271  007DFA  2A01               	incf	btemp+1,f,c
  2272  007DFC  D002               	goto	u1044
  2273  007DFE                     u1045:
  2274  007DFE  90D8               	bcf	status,0,c
  2275  007E00  3600               	rlcf	btemp,f,c
  2276  007E02                     u1044:
  2277  007E02  2E01               	decfsz	btemp+1,f,c
  2278  007E04  D7FC               	goto	u1045
  2279  007E06  1E00               	comf	btemp,f,c
  2280  007E08  50D9               	movf	fsr2l,w,c
  2281  007E0A  EE0F  F03A         	lfsr	0,_wbty
  2282  007E0E  26E9               	addwf	fsr0l,f,c
  2283  007E10  0E00               	movlw	0
  2284  007E12  22EA               	addwfc	fsr0h,f,c
  2285  007E14  5000               	movf	btemp,w,c
  2286  007E16  16EF               	andwf	indf0,f,c
  2287                           ;wsw.c: 577: }
  2288  007E18  0012               	return	
  2289  007E1A                     __end_of_SetWbtyBit:
  2290                           ;wsw.c: 580: void Swbty(unsigned char dtd)
  2291                           ;wsw.c: 581: {
  2292  007E1A                     _Swbty:
  2293  000000                     
  2294                           ; _dtd loaded to fsr2l
  2295  007E1A  6ED9               	movwf	fsr2l,c
  2296                           ;wsw.c: 582: unsigned char mask;
  2297  007E1C  0E0F               	movlw	15
  2298  007E1E  16D9               	andwf	fsr2l,f,c
  2299                           ;wsw.c: 584: mask=~(wsdid&dtd);
  2300  007E20  50D9               	movf	fsr2l,w,c
  2301  007E22  010F               	movlb	_wsdid shr (0+8)
  2302  007E24  1539               	andwf	_wsdid& (0+255),w,b
  2303  007E26  0AFF               	xorlw	255
  2304  007E28  6EE1               	movwf	fsr1l,c
  2305                           ;wsw.c: 588: wbty[1]|=0x0f;
  2306  007E2A  010F               	movlb	(_wbty+1) shr (0+8)
  2307  007E2C  0E0F               	movlw	15
  2308  007E2E  133B               	iorwf	(_wbty+1)& (0+255),f,b
  2309                           ;wsw.c: 589: wbty[1]&=~(dtd|(wsdid&mask));
  2310  007E30  50E1               	movf	fsr1l,w,c
  2311  007E32  010F               	movlb	_wsdid shr (0+8)
  2312  007E34  1539               	andwf	_wsdid& (0+255),w,b
  2313  007E36  6E00               	movwf	btemp,c
  2314  007E38  10D9               	iorwf	fsr2l,w,c
  2315  007E3A  0AFF               	xorlw	255
  2316  007E3C  010F               	movlb	(_wbty+1) shr (0+8)
  2317  007E3E  173B               	andwf	(_wbty+1)& (0+255),f,b
  2318                           ;wsw.c: 595: }
  2319  007E40  0012               	return	
  2320  007E42                     __end_of_Swbty:
  2321                           ;wsw.c: 597: void Rwbty(unsigned char dtd)
  2322                           ;wsw.c: 598: {
  2323  007E42                     _Rwbty:
  2324  000000                     
  2325                           ; _dtd loaded to fsr2l
  2326  007E42  6ED9               	movwf	fsr2l,c
  2327                           ;wsw.c: 599: unsigned char mask;
  2328  007E44  0E0F               	movlw	15
  2329  007E46  16D9               	andwf	fsr2l,f,c
  2330                           ;wsw.c: 602: mask=~(wsdid&dtd);
  2331  007E48  50D9               	movf	fsr2l,w,c
  2332  007E4A  010F               	movlb	_wsdid shr (0+8)
  2333  007E4C  1539               	andwf	_wsdid& (0+255),w,b
  2334  007E4E  0AFF               	xorlw	255
  2335  007E50  6EE1               	movwf	fsr1l,c
  2336                           ;wsw.c: 605: wbty[1]|=0x0f;
  2337  007E52  010F               	movlb	(_wbty+1) shr (0+8)
  2338  007E54  0E0F               	movlw	15
  2339  007E56  133B               	iorwf	(_wbty+1)& (0+255),f,b
  2340                           ;wsw.c: 606: wbty[1]&=~((~dtd)&(wsdid&mask));
  2341  007E58  CF39  F000         	movff	_wsdid,btemp
  2342  007E5C  1CD9               	comf	fsr2l,w,c
  2343  007E5E  6E01               	movwf	btemp+1,c
  2344  007E60  1600               	andwf	btemp,f,c
  2345  007E62  50E1               	movf	fsr1l,w,c
  2346  007E64  1400               	andwf	btemp,w,c
  2347  007E66  0AFF               	xorlw	255
  2348  007E68  173B               	andwf	(_wbty+1)& (0+255),f,b
  2349                           ;wsw.c: 612: }
  2350  007E6A  0012               	return	
  2351  007E6C                     __end_of_Rwbty:
  2352                           ;wsw.c: 614: void Swsdid(unsigned char dtd)
  2353                           ;wsw.c: 615: {
  2354  007E6C                     _Swsdid:
  2355  000000                     
  2356                           ; _dtd loaded to fsr2l
  2357  007E6C  6ED9               	movwf	fsr2l,c
  2358                           ;wsw.c: 616: dtd=dtd&0x0f;
  2359  007E6E  0E0F               	movlw	15
  2360  007E70  16D9               	andwf	fsr2l,f,c
  2361                           ;wsw.c: 617: wsdid|=dtd;
  2362  007E72  50D9               	movf	fsr2l,w,c
  2363  007E74  010F               	movlb	_wsdid shr (0+8)
  2364  007E76  1339               	iorwf	_wsdid& (0+255),f,b
  2365                           ;wsw.c: 618: }
  2366  007E78  0012               	return	
  2367  007E7A                     __end_of_Swsdid:
  2368                           ;wsw.c: 620: void Rwsdid(unsigned char dtd)
  2369                           ;wsw.c: 621: {
  2370  007E7A                     _Rwsdid:
  2371  000000                     
  2372                           ; _dtd loaded to fsr2l
  2373  007E7A  6ED9               	movwf	fsr2l,c
  2374                           ;wsw.c: 622: dtd=dtd&0x0f;
  2375  007E7C  0E0F               	movlw	15
  2376  007E7E  16D9               	andwf	fsr2l,f,c
  2377                           ;wsw.c: 623: wsdid&=~(dtd);
  2378  007E80  1CD9               	comf	fsr2l,w,c
  2379  007E82  010F               	movlb	_wsdid shr (0+8)
  2380  007E84  1739               	andwf	_wsdid& (0+255),f,b
  2381                           ;wsw.c: 624: }
  2382  007E86  0012               	return	
  2383  007E88                     __end_of_Rwsdid:
  2384                           ;wsw.c: 629: void WswOff(void)
  2385                           ;wsw.c: 630: {
  2386  007E88                     _WswOff:
  2387  000000                     
  2388                           ;wsw.c: 631: LedData.setOff=1;
  2389  007E88  0101               	movlb	_LedData shr (0+8)
  2390  007E8A  8100               	bsf	_LedData& (0+255),0,b
  2391                           ;wsw.c: 632: }
  2392  007E8C  0012               	return	
  2393  007E8E                     __end_of_WswOff:
  2394                           ;wsw.c: 634: void WswOn(void)
  2395                           ;wsw.c: 635: {
  2396  007E8E                     _WswOn:
  2397  000000                     
  2398                           ;wsw.c: 636: LedData.setOff=0;
  2399  007E8E  0101               	movlb	_LedData shr (0+8)
  2400  007E90  9100               	bcf	_LedData& (0+255),0,b
  2401                           ;wsw.c: 637: }
  2402  007E92  0012               	return	
  2403  007E94                     __end_of_WswOn:
  2404                           ;wsw.c: 642: void SetData(WPack *wData,const uns
      +                          igned char wdt1,const unsigned char wdt0)
  2405                           ;wsw.c: 643: {
  2406  007E94  00DB               	dw	?_SetData
  2407  007E96                     _SetData:
  2408  000000                     
  2409                           ;wsw.c: 644: (*wData).Dt.Data1=wdt1;
  2410                           ; _wData loaded to fsr1
  2411  007E96  C0DB  FFE1         	movff	?_SetData,fsr1l
  2412  007E9A  C0DC  FFE2         	movff	?_SetData+1,fsr1h
  2413  007E9E  EE00 F002          	lfsr	0,2
  2414  007EA2  50E1               	movf	fsr1l,w,c
  2415  007EA4  26E9               	addwf	fsr0l,f,c
  2416  007EA6  50E2               	movf	fsr1h,w,c
  2417  007EA8  22EA               	addwfc	fsr0h,f,c
  2418  007EAA  C0DD  FFEF         	movff	?_SetData+2,indf0
  2419                           ;wsw.c: 645: (*wData).Dt.Data0=wdt0;
  2420  007EAE  EE00 F003          	lfsr	0,3
  2421  007EB2  50E1               	movf	fsr1l,w,c
  2422  007EB4  26E9               	addwf	fsr0l,f,c
  2423  007EB6  50E2               	movf	fsr1h,w,c
  2424  007EB8  22EA               	addwfc	fsr0h,f,c
  2425  007EBA  C0DE  FFEF         	movff	?_SetData+3,indf0
  2426                           ;wsw.c: 646: }
  2427  007EBE  0012               	return	
  2428  007EC0                     __end_of_SetData:
  2429                           ;wsw.c: 651: void SetStatus(WPack *wData,const u
      +                          nsigned int wst,const unsigned int mask)
  2430                           ;wsw.c: 652: {
  2431  007EC0  00DB               	dw	?_SetStatus
  2432  007EC2                     _SetStatus:
  2433  000000                     
  2434                           ; _wData loaded to fsr1
  2435  007EC2  C0DB  FFE1         	movff	?_SetStatus,fsr1l
  2436  007EC6  C0DC  FFE2         	movff	?_SetStatus+1,fsr1h
  2437                           ;wsw.c: 653: if (mask&0b1000000000000000)(*wData
      +                          ).St.focus=(wst&0b1000000000000000)?1:0;
  2438  007ECA  0100               	movlb	__Lparam shr (0+8)
  2439  007ECC  AFE0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),7,b
  2440  007ECE  D008               	goto	l118
  2441  007ED0  0E00               	movlw	0
  2442  007ED2  BFDE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),7,b
  2443  007ED4  0E01               	movlw	1
  2444  007ED6  6E00               	movwf	btemp,c
  2445  007ED8  18E7               	xorwf	indf1,w,c
  2446  007EDA  0BFE               	andlw	-2
  2447  007EDC  1800               	xorwf	btemp,w,c
  2448  007EDE  6EE7               	movwf	indf1,c
  2449  007EE0                     l118:
  2450                           ;wsw.c: 654: if (mask&0b0100000000000000)(*wData
      +                          ).St.dec=(wst&0b0100000000000000)?1:0;
  2451  007EE0  0100               	movlb	__Lparam shr (0+8)
  2452  007EE2  ADE0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),6,b
  2453  007EE4  D00A               	goto	l119
  2454  007EE6  0E00               	movlw	0
  2455  007EE8  BDDE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),6,b
  2456  007EEA  0E01               	movlw	1
  2457  007EEC  6E00               	movwf	btemp,c
  2458  007EEE  3600               	rlcf	btemp,f,c
  2459  007EF0  50E7               	movf	indf1,w,c
  2460  007EF2  1800               	xorwf	btemp,w,c
  2461  007EF4  0BFD               	andlw	-3
  2462  007EF6  1800               	xorwf	btemp,w,c
  2463  007EF8  6EE7               	movwf	indf1,c
  2464  007EFA                     l119:
  2465                           ;wsw.c: 655: if (mask&0b0010000000000000)(*wData
      +                          ).St.hex=(wst&0b0010000000000000)?1:0;
  2466  007EFA  0100               	movlb	__Lparam shr (0+8)
  2467  007EFC  ABE0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),5,b
  2468  007EFE  D00B               	goto	l120
  2469  007F00  0E00               	movlw	0
  2470  007F02  BBDE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),5,b
  2471  007F04  0E01               	movlw	1
  2472  007F06  6E00               	movwf	btemp,c
  2473  007F08  3600               	rlcf	btemp,f,c
  2474  007F0A  3600               	rlcf	btemp,f,c
  2475  007F0C  50E7               	movf	indf1,w,c
  2476  007F0E  1800               	xorwf	btemp,w,c
  2477  007F10  0BFB               	andlw	-5
  2478  007F12  1800               	xorwf	btemp,w,c
  2479  007F14  6EE7               	movwf	indf1,c
  2480  007F16                     l120:
  2481                           ;wsw.c: 656: if (mask&0b0001000000000000)(*wData
      +                          ).St.autoOFF=(wst&0b0001000000000000)?1:0;
  2482  007F16  0100               	movlb	__Lparam shr (0+8)
  2483  007F18  A9E0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),4,b
  2484  007F1A  D00C               	goto	l121
  2485  007F1C  0E00               	movlw	0
  2486  007F1E  B9DE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),4,b
  2487  007F20  0E01               	movlw	1
  2488  007F22  6E00               	movwf	btemp,c
  2489  007F24  3600               	rlcf	btemp,f,c
  2490  007F26  3600               	rlcf	btemp,f,c
  2491  007F28  3600               	rlcf	btemp,f,c
  2492  007F2A  50E7               	movf	indf1,w,c
  2493  007F2C  1800               	xorwf	btemp,w,c
  2494  007F2E  0BF7               	andlw	-9
  2495  007F30  1800               	xorwf	btemp,w,c
  2496  007F32  6EE7               	movwf	indf1,c
  2497  007F34                     l121:
  2498                           ;wsw.c: 657: if (mask&0b0000100000000000)(*wData
      +                          ).St.kropka0=(wst&0b0000100000000000)?1:0;
  2499  007F34  0100               	movlb	__Lparam shr (0+8)
  2500  007F36  A7E0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),3,b
  2501  007F38  D00A               	goto	l122
  2502  007F3A  0E00               	movlw	0
  2503  007F3C  B7DE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),3,b
  2504  007F3E  0E01               	movlw	1
  2505  007F40  6E00               	movwf	btemp,c
  2506  007F42  3A00               	swapf	btemp,f,c
  2507  007F44  50E7               	movf	indf1,w,c
  2508  007F46  1800               	xorwf	btemp,w,c
  2509  007F48  0BEF               	andlw	-17
  2510  007F4A  1800               	xorwf	btemp,w,c
  2511  007F4C  6EE7               	movwf	indf1,c
  2512  007F4E                     l122:
  2513                           ;wsw.c: 658: if (mask&0b0000010000000000)(*wData
      +                          ).St.kropka1=(wst&0b0000010000000000)?1:0;
  2514  007F4E  0100               	movlb	__Lparam shr (0+8)
  2515  007F50  A5E0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),2,b
  2516  007F52  D00B               	goto	l123
  2517  007F54  0E00               	movlw	0
  2518  007F56  B5DE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),2,b
  2519  007F58  0E01               	movlw	1
  2520  007F5A  6E00               	movwf	btemp,c
  2521  007F5C  3A00               	swapf	btemp,f,c
  2522  007F5E  3600               	rlcf	btemp,f,c
  2523  007F60  50E7               	movf	indf1,w,c
  2524  007F62  1800               	xorwf	btemp,w,c
  2525  007F64  0BDF               	andlw	-33
  2526  007F66  1800               	xorwf	btemp,w,c
  2527  007F68  6EE7               	movwf	indf1,c
  2528  007F6A                     l123:
  2529                           ;wsw.c: 659: if (mask&0b0000001000000000)(*wData
      +                          ).St.wygas0=(wst&0b0000001000000000)?1:0;
  2530  007F6A  0100               	movlb	__Lparam shr (0+8)
  2531  007F6C  A3E0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),1,b
  2532  007F6E  D00C               	goto	l124
  2533  007F70  0E00               	movlw	0
  2534  007F72  B3DE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),1,b
  2535  007F74  0E01               	movlw	1
  2536  007F76  6E00               	movwf	btemp,c
  2537  007F78  3A00               	swapf	btemp,f,c
  2538  007F7A  3600               	rlcf	btemp,f,c
  2539  007F7C  3600               	rlcf	btemp,f,c
  2540  007F7E  50E7               	movf	indf1,w,c
  2541  007F80  1800               	xorwf	btemp,w,c
  2542  007F82  0BBF               	andlw	-65
  2543  007F84  1800               	xorwf	btemp,w,c
  2544  007F86  6EE7               	movwf	indf1,c
  2545  007F88                     l124:
  2546                           ;wsw.c: 660: if (mask&0b0000000100000000)(*wData
      +                          ).St.wygas1=(wst&0b0000000100000000)?1:0;
  2547  007F88  0100               	movlb	__Lparam shr (0+8)
  2548  007F8A  A1E0               	btfss	(?_SetStatus+5)^(__Lparam& (0+65280)),0,b
  2549  007F8C  D00B               	goto	l125
  2550  007F8E  0E00               	movlw	0
  2551  007F90  B1DE               	btfsc	(?_SetStatus+3)^(__Lparam& (0+65280)),0,b
  2552  007F92  0E01               	movlw	1
  2553  007F94  6E00               	movwf	btemp,c
  2554  007F96  3200               	rrcf	btemp,f,c
  2555  007F98  3200               	rrcf	btemp,f,c
  2556  007F9A  50E7               	movf	indf1,w,c
  2557  007F9C  1800               	xorwf	btemp,w,c
  2558  007F9E  0B7F               	andlw	-129
  2559  007FA0  1800               	xorwf	btemp,w,c
  2560  007FA2  6EE7               	movwf	indf1,c
  2561  007FA4                     l125:
  2562                           ;wsw.c: 661: if (mask&0b0000000010000000)(*wData
      +                          ).St.led0=(wst&0b0000000010000000)?1:0;
  2563  007FA4  0100               	movlb	__Lparam shr (0+8)
  2564  007FA6  AFDF               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),7,b
  2565  007FA8  D00F               	goto	l126
  2566  007FAA  0E00               	movlw	0
  2567  007FAC  BFDD               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),7,b
  2568  007FAE  0E01               	movlw	1
  2569  007FB0  6E00               	movwf	btemp,c
  2570  007FB2  EE00 F001          	lfsr	0,1
  2571  007FB6  50E1               	movf	fsr1l,w,c
  2572  007FB8  26E9               	addwf	fsr0l,f,c
  2573  007FBA  50E2               	movf	fsr1h,w,c
  2574  007FBC  22EA               	addwfc	fsr0h,f,c
  2575  007FBE  50EF               	movf	indf0,w,c
  2576  007FC0  1800               	xorwf	btemp,w,c
  2577  007FC2  0BFE               	andlw	-2
  2578  007FC4  1800               	xorwf	btemp,w,c
  2579  007FC6  6EEF               	movwf	indf0,c
  2580  007FC8                     l126:
  2581                           ;wsw.c: 662: if (mask&0b0000000001000000)(*wData
      +                          ).St.led1=(wst&0b0000000001000000)?1:0;
  2582  007FC8  0100               	movlb	__Lparam shr (0+8)
  2583  007FCA  ADDF               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),6,b
  2584  007FCC  D010               	goto	l127
  2585  007FCE  0E00               	movlw	0
  2586  007FD0  BDDD               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),6,b
  2587  007FD2  0E01               	movlw	1
  2588  007FD4  6E00               	movwf	btemp,c
  2589  007FD6  EE00 F001          	lfsr	0,1
  2590  007FDA  50E1               	movf	fsr1l,w,c
  2591  007FDC  26E9               	addwf	fsr0l,f,c
  2592  007FDE  50E2               	movf	fsr1h,w,c
  2593  007FE0  22EA               	addwfc	fsr0h,f,c
  2594  007FE2  3600               	rlcf	btemp,f,c
  2595  007FE4  50EF               	movf	indf0,w,c
  2596  007FE6  1800               	xorwf	btemp,w,c
  2597  007FE8  0BFD               	andlw	-3
  2598  007FEA  1800               	xorwf	btemp,w,c
  2599  007FEC  6EEF               	movwf	indf0,c
  2600  007FEE                     l127:
  2601                           ;wsw.c: 663: if (mask&0b0000000000100000)(*wData
      +                          ).St.sdiode=(wst&0b0000000000100000)?1:0;
  2602  007FEE  0100               	movlb	__Lparam shr (0+8)
  2603  007FF0  ABDF               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),5,b
  2604  007FF2  D011               	goto	l128
  2605  007FF4  0E00               	movlw	0
  2606  007FF6  BBDD               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),5,b
  2607  007FF8  0E01               	movlw	1
  2608  007FFA  6E00               	movwf	btemp,c
  2609  007FFC  EE00 F001          	lfsr	0,1
  2610  008000  50E1               	movf	fsr1l,w,c
  2611  008002  26E9               	addwf	fsr0l,f,c
  2612  008004  50E2               	movf	fsr1h,w,c
  2613  008006  22EA               	addwfc	fsr0h,f,c
  2614  008008  3600               	rlcf	btemp,f,c
  2615  00800A  3600               	rlcf	btemp,f,c
  2616  00800C  50EF               	movf	indf0,w,c
  2617  00800E  1800               	xorwf	btemp,w,c
  2618  008010  0BFB               	andlw	-5
  2619  008012  1800               	xorwf	btemp,w,c
  2620  008014  6EEF               	movwf	indf0,c
  2621  008016                     l128:
  2622                           ;wsw.c: 664: if (mask&0b0000000000010000)(*wData
      +                          ).St.rdiode=(wst&0b0000000000010000)?1:0;
  2623  008016  0100               	movlb	__Lparam shr (0+8)
  2624  008018  A9DF               	btfss	(?_SetStatus+4)^(__Lparam& (0+65280)),4,b
  2625  00801A  D012               	goto	l129
  2626  00801C  0E00               	movlw	0
  2627  00801E  B9DD               	btfsc	(?_SetStatus+2)^(__Lparam& (0+65280)),4,b
  2628  008020  0E01               	movlw	1
  2629  008022  6E00               	movwf	btemp,c
  2630  008024  EE00 F001          	lfsr	0,1
  2631  008028  50E1               	movf	fsr1l,w,c
  2632  00802A  26E9               	addwf	fsr0l,f,c
  2633  00802C  50E2               	movf	fsr1h,w,c
  2634  00802E  22EA               	addwfc	fsr0h,f,c
  2635  008030  3600               	rlcf	btemp,f,c
  2636  008032  3600               	rlcf	btemp,f,c
  2637  008034  3600               	rlcf	btemp,f,c
  2638  008036  50EF               	movf	indf0,w,c
  2639  008038  1800               	xorwf	btemp,w,c
  2640  00803A  0BF7               	andlw	-9
  2641  00803C  1800               	xorwf	btemp,w,c
  2642  00803E  6EEF               	movwf	indf0,c
  2643  008040                     l129:
  2644                           ;wsw.c: 666: if (mask&0b0000000000001111)
  2645  008040  0E0F               	movlw	15
  2646  008042  C0DF  F000         	movff	?_SetStatus+4,btemp
  2647  008046  C0E0  F001         	movff	?_SetStatus+5,btemp+1
  2648  00804A  1600               	andwf	btemp,f,c
  2649  00804C  6A01               	clrf	btemp+1,c
  2650  00804E  5001               	movf	btemp+1,w,c
  2651  008050  1000               	iorwf	btemp,w,c
  2652  008052  B4D8               	btfsc	status,2,c
  2653  008054  0012               	return	
  2654                           ;wsw.c: 667: if(((*wData).St.sdiode||(*wData).St
      +                          .rdiode)&&(wst&0b0000000000001111))
  2655  008056  EE00 F001          	lfsr	0,1
  2656  00805A  50E1               	movf	fsr1l,w,c
  2657  00805C  26E9               	addwf	fsr0l,f,c
  2658  00805E  50E2               	movf	fsr1h,w,c
  2659  008060  22EA               	addwfc	fsr0h,f,c
  2660  008062  50EF               	movf	indf0,w,c
  2661  008064  6E00               	movwf	btemp,c
  2662  008066  B400               	btfsc	btemp,2,c
  2663  008068  D00A               	goto	u1200
  2664  00806A  EE00 F001          	lfsr	0,1
  2665  00806E  50E1               	movf	fsr1l,w,c
  2666  008070  26E9               	addwf	fsr0l,f,c
  2667  008072  50E2               	movf	fsr1h,w,c
  2668  008074  22EA               	addwfc	fsr0h,f,c
  2669  008076  50EF               	movf	indf0,w,c
  2670  008078  6E00               	movwf	btemp,c
  2671  00807A  A600               	btfss	btemp,3,c
  2672  00807C  0012               	return	
  2673  00807E                     u1200:
  2674  00807E  0E0F               	movlw	15
  2675  008080  C0DD  F000         	movff	?_SetStatus+2,btemp
  2676  008084  C0DE  F001         	movff	?_SetStatus+3,btemp+1
  2677  008088  1600               	andwf	btemp,f,c
  2678  00808A  6A01               	clrf	btemp+1,c
  2679  00808C  5001               	movf	btemp+1,w,c
  2680  00808E  1000               	iorwf	btemp,w,c
  2681  008090  B4D8               	btfsc	status,2,c
  2682  008092  0012               	return	
  2683                           ;wsw.c: 668: {
  2684  008094  C0DD  F000         	movff	?_SetStatus+2,btemp
  2685  008098  0E0F               	movlw	15
  2686  00809A  1600               	andwf	btemp,f,c
  2687  00809C  EE00 F001          	lfsr	0,1
  2688  0080A0  50E1               	movf	fsr1l,w,c
  2689  0080A2  26E9               	addwf	fsr0l,f,c
  2690  0080A4  50E2               	movf	fsr1h,w,c
  2691  0080A6  22EA               	addwfc	fsr0h,f,c
  2692  0080A8  3A00               	swapf	btemp,f,c
  2693  0080AA  50EF               	movf	indf0,w,c
  2694  0080AC  1800               	xorwf	btemp,w,c
  2695  0080AE  0B0F               	andlw	-241
  2696  0080B0  1800               	xorwf	btemp,w,c
  2697  0080B2  6EEF               	movwf	indf0,c
  2698                           ;wsw.c: 670: }
  2699  0080B4  0012               	return	
  2700  0080B6                     __end_of_SetStatus:
  2701                           ;wsw.c: 676: bit GetPoz(const unsigned char nrko
      +                          l,const unsigned char nrpoz)
  2702                           ;wsw.c: 677: {
  2703  0080B6  00D7               	dw	?_GetPoz
  2704  0080B8                     _GetPoz:
  2705  000000                     
  2706                           ; _nrkol loaded to fsr2l
  2707  0080B8  6ED9               	movwf	fsr2l,c
  2708                           ;wsw.c: 678: if ((nrkol>=4)||(nrpoz>=Klj[nrkol].
      +                          nPzc)) asm("RESET");
  2709  0080BA  0E03               	movlw	3
  2710  0080BC  64D9               	cpfsgt	fsr2l,c
  2711  0080BE  D001               	goto	u1231
  2712  0080C0  D012               	goto	u1250
  2713  0080C2                     u1231:
  2714  0080C2  50D9               	movf	fsr2l,w,c
  2715  0080C4  0D03               	mullw	3
  2716  0080C6  50F3               	movf	prodl,w,c
  2717  0080C8  0FA6               	addlw	low _Klj
  2718  0080CA  6EF6               	movwf	tblptrl,c
  2719  0080CC  50F4               	movf	prodh,w,c
  2720  0080CE  6EF7               	movwf	tblptrh,c
  2721  0080D0  0E10               	movlw	high _Klj
  2722  0080D2  22F7               	addwfc	tblptrh,f,c
  2723  0080D4  0E02               	movlw	2
  2724  0080D6  26F6               	addwf	tblptrl,f,c
  2725  0080D8  0E00               	movlw	0
  2726  0080DA  22F7               	addwfc	tblptrh,f,c
  2727  0080DC  0008               	tblrd		*
  2728  0080DE  50F5               	movf	tablat,w,c
  2729  0080E0  0100               	movlb	__Lparam shr (0+8)
  2730  0080E2  5DD7               	subwf	?_GetPoz^(__Lparam& (0+65280)),w
  2731  0080E4  B0D8               	btfsc	status,0,c
  2732  0080E6                     u1250:
  2733  0080E6  00FF               	reset		;#
  2734                           ;wsw.c: 679: return (*Klj[nrkol].KL).KFc[nrpoz].
      +                          focus;
  2735  0080E8  50D9               	movf	fsr2l,w,c
  2736  0080EA  0D03               	mullw	3
  2737  0080EC  50F3               	movf	prodl,w,c
  2738  0080EE  0FA6               	addlw	low _Klj
  2739  0080F0  6EF6               	movwf	tblptrl,c
  2740  0080F2  50F4               	movf	prodh,w,c
  2741  0080F4  6EF7               	movwf	tblptrh,c
  2742  0080F6  0E10               	movlw	high _Klj
  2743  0080F8  22F7               	addwfc	tblptrh,f,c
  2744  0080FA  0009               	tblrd		*+
  2745  0080FC  CFF5 F000          	movff	tablat,btemp
  2746  008100  0009               	tblrd		*+
  2747  008102  CFF5 F001          	movff	tablat,btemp+1
  2748  008106  0E06               	movlw	6
  2749  008108  2600               	addwf	btemp,f,c
  2750  00810A  0E00               	movlw	0
  2751  00810C  2201               	addwfc	btemp+1,f,c
  2752  00810E  C000  FFF6         	movff	btemp,tblptrl
  2753  008112  C001  FFF7         	movff	btemp+1,tblptrh
  2754  008116  0E0F               	movlw	(high __ramtop+-1)
  2755  008118  64F7               	cpfsgt	tblptrh,c
  2756  00811A  D007               	bra	u1267
  2757  00811C  0009               	tblrd		*+
  2758  00811E  CFF5 F000          	movff	tablat,btemp
  2759  008122  0009               	tblrd		*+
  2760  008124  CFF5 F001          	movff	tablat,btemp+1
  2761  008128  D008               	bra	u1260
  2762  00812A                     u1267:
  2763  00812A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2764  00812E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2765  008132  CFEE F000          	movff	postinc0,btemp
  2766  008136  CFEE F001          	movff	postinc0,btemp+1
  2767  00813A                     u1260:
  2768  00813A  0100               	movlb	__Lparam shr (0+8)
  2769  00813C  51D7               	movf	?_GetPoz^(__Lparam& (0+65280)),w
  2770  00813E  2400               	addwf	btemp,w,c
  2771  008140  6EE9               	movwf	fsr0l,c
  2772  008142  0E00               	movlw	0
  2773  008144  2001               	addwfc	btemp+1,w,c
  2774  008146  6EEA               	movwf	fsr0h,c
  2775  008148  50EF               	movf	indf0,w,c
  2776  00814A  0B01               	andlw	1
  2777  00814C  6E00               	movwf	btemp,c
  2778  00814E  3000               	rrcf	btemp,w,c
  2779  008150  0012               	return	
  2780                           ;wsw.c: 680: }
  2781  008152                     __end_of_GetPoz:
  2782                           ;wsw.c: 682: void SetPoz(const unsigned char nrk
      +                          ol,const unsigned char nrpoz)
  2783                           ;wsw.c: 683: {
  2784  008152  00DB               	dw	?_SetPoz
  2785  008154                     _SetPoz:
  2786  000000                     
  2787                           ; _nrkol loaded to fsr2l
  2788  008154  6ED9               	movwf	fsr2l,c
  2789                           ;wsw.c: 684: if ((nrkol>=4)||(nrpoz>=Klj[nrkol].
      +                          nPzc)) asm("RESET");
  2790  008156  0E03               	movlw	3
  2791  008158  64D9               	cpfsgt	fsr2l,c
  2792  00815A  D001               	goto	u1271
  2793  00815C  D012               	goto	u1290
  2794  00815E                     u1271:
  2795  00815E  50D9               	movf	fsr2l,w,c
  2796  008160  0D03               	mullw	3
  2797  008162  50F3               	movf	prodl,w,c
  2798  008164  0FA6               	addlw	low _Klj
  2799  008166  6EF6               	movwf	tblptrl,c
  2800  008168  50F4               	movf	prodh,w,c
  2801  00816A  6EF7               	movwf	tblptrh,c
  2802  00816C  0E10               	movlw	high _Klj
  2803  00816E  22F7               	addwfc	tblptrh,f,c
  2804  008170  0E02               	movlw	2
  2805  008172  26F6               	addwf	tblptrl,f,c
  2806  008174  0E00               	movlw	0
  2807  008176  22F7               	addwfc	tblptrh,f,c
  2808  008178  0008               	tblrd		*
  2809  00817A  50F5               	movf	tablat,w,c
  2810  00817C  0100               	movlb	__Lparam shr (0+8)
  2811  00817E  5DDB               	subwf	?_SetPoz^(__Lparam& (0+65280)),w
  2812  008180  B0D8               	btfsc	status,0,c
  2813  008182                     u1290:
  2814  008182  00FF               	reset		;#
  2815                           ;wsw.c: 685: (*Klj[nrkol].KL).KFc[nrpoz].focus=1
      +                          ;
  2816  008184  50D9               	movf	fsr2l,w,c
  2817  008186  0D03               	mullw	3
  2818  008188  50F3               	movf	prodl,w,c
  2819  00818A  0FA6               	addlw	low _Klj
  2820  00818C  6EF6               	movwf	tblptrl,c
  2821  00818E  50F4               	movf	prodh,w,c
  2822  008190  6EF7               	movwf	tblptrh,c
  2823  008192  0E10               	movlw	high _Klj
  2824  008194  22F7               	addwfc	tblptrh,f,c
  2825  008196  0009               	tblrd		*+
  2826  008198  CFF5 F000          	movff	tablat,btemp
  2827  00819C  0009               	tblrd		*+
  2828  00819E  CFF5 F001          	movff	tablat,btemp+1
  2829  0081A2  0E06               	movlw	6
  2830  0081A4  2600               	addwf	btemp,f,c
  2831  0081A6  0E00               	movlw	0
  2832  0081A8  2201               	addwfc	btemp+1,f,c
  2833  0081AA  C000  FFF6         	movff	btemp,tblptrl
  2834  0081AE  C001  FFF7         	movff	btemp+1,tblptrh
  2835  0081B2  0E0F               	movlw	(high __ramtop+-1)
  2836  0081B4  64F7               	cpfsgt	tblptrh,c
  2837  0081B6  D007               	bra	u1307
  2838  0081B8  0009               	tblrd		*+
  2839  0081BA  CFF5 F000          	movff	tablat,btemp
  2840  0081BE  0009               	tblrd		*+
  2841  0081C0  CFF5 F001          	movff	tablat,btemp+1
  2842  0081C4  D008               	bra	u1300
  2843  0081C6                     u1307:
  2844  0081C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2845  0081CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2846  0081CE  CFEE F000          	movff	postinc0,btemp
  2847  0081D2  CFEE F001          	movff	postinc0,btemp+1
  2848  0081D6                     u1300:
  2849  0081D6  0100               	movlb	__Lparam shr (0+8)
  2850  0081D8  51DB               	movf	?_SetPoz^(__Lparam& (0+65280)),w
  2851  0081DA  2400               	addwf	btemp,w,c
  2852  0081DC  6EE9               	movwf	fsr0l,c
  2853  0081DE  0E00               	movlw	0
  2854  0081E0  2001               	addwfc	btemp+1,w,c
  2855  0081E2  6EEA               	movwf	fsr0h,c
  2856  0081E4  50EF               	movf	indf0,w,c
  2857  0081E6  0BFE               	andlw	-2
  2858  0081E8  0901               	iorlw	1
  2859  0081EA  6EEF               	movwf	indf0,c
  2860                           ;wsw.c: 686: KInd[nrkol].reset=0;
  2861  0081EC  50D9               	movf	fsr2l,w,c
  2862  0081EE  EE0F  F03C         	lfsr	0,_KInd
  2863  0081F2  26E9               	addwf	fsr0l,f,c
  2864  0081F4  0E00               	movlw	0
  2865  0081F6  22EA               	addwfc	fsr0h,f,c
  2866  0081F8  0EFD               	movlw	-3
  2867  0081FA  16EF               	andwf	indf0,f,c
  2868                           ;wsw.c: 687: }
  2869  0081FC  0CFD               	retlw	253
  2870  0081FE                     __end_of_SetPoz:
  2871                           ;wsw.c: 689: void ResetPoz(const unsigned char n
      +                          rkol,const unsigned char nrpoz)
  2872                           ;wsw.c: 690: {
  2873  0081FE  00D7               	dw	?_ResetPoz
  2874  008200                     _ResetPoz:
  2875  000000                     
  2876                           ; _nrkol loaded to fsr2l
  2877  008200  6ED9               	movwf	fsr2l,c
  2878                           ;wsw.c: 691: if ((nrkol>=4)||(nrpoz>=Klj[nrkol].
      +                          nPzc)) asm("RESET");
  2879  008202  0E03               	movlw	3
  2880  008204  64D9               	cpfsgt	fsr2l,c
  2881  008206  D001               	goto	u1311
  2882  008208  D012               	goto	u1330
  2883  00820A                     u1311:
  2884  00820A  50D9               	movf	fsr2l,w,c
  2885  00820C  0D03               	mullw	3
  2886  00820E  50F3               	movf	prodl,w,c
  2887  008210  0FA6               	addlw	low _Klj
  2888  008212  6EF6               	movwf	tblptrl,c
  2889  008214  50F4               	movf	prodh,w,c
  2890  008216  6EF7               	movwf	tblptrh,c
  2891  008218  0E10               	movlw	high _Klj
  2892  00821A  22F7               	addwfc	tblptrh,f,c
  2893  00821C  0E02               	movlw	2
  2894  00821E  26F6               	addwf	tblptrl,f,c
  2895  008220  0E00               	movlw	0
  2896  008222  22F7               	addwfc	tblptrh,f,c
  2897  008224  0008               	tblrd		*
  2898  008226  50F5               	movf	tablat,w,c
  2899  008228  0100               	movlb	__Lparam shr (0+8)
  2900  00822A  5DD7               	subwf	?_ResetPoz^(__Lparam& (0+65280)),w
  2901  00822C  B0D8               	btfsc	status,0,c
  2902  00822E                     u1330:
  2903  00822E  00FF               	reset		;#
  2904                           ;wsw.c: 692: (*Klj[nrkol].KL).KFc[nrpoz].focus=0
      +                          ;
  2905  008230  50D9               	movf	fsr2l,w,c
  2906  008232  0D03               	mullw	3
  2907  008234  50F3               	movf	prodl,w,c
  2908  008236  0FA6               	addlw	low _Klj
  2909  008238  6EF6               	movwf	tblptrl,c
  2910  00823A  50F4               	movf	prodh,w,c
  2911  00823C  6EF7               	movwf	tblptrh,c
  2912  00823E  0E10               	movlw	high _Klj
  2913  008240  22F7               	addwfc	tblptrh,f,c
  2914  008242  0009               	tblrd		*+
  2915  008244  CFF5 F000          	movff	tablat,btemp
  2916  008248  0009               	tblrd		*+
  2917  00824A  CFF5 F001          	movff	tablat,btemp+1
  2918  00824E  0E06               	movlw	6
  2919  008250  2600               	addwf	btemp,f,c
  2920  008252  0E00               	movlw	0
  2921  008254  2201               	addwfc	btemp+1,f,c
  2922  008256  C000  FFF6         	movff	btemp,tblptrl
  2923  00825A  C001  FFF7         	movff	btemp+1,tblptrh
  2924  00825E  0E0F               	movlw	(high __ramtop+-1)
  2925  008260  64F7               	cpfsgt	tblptrh,c
  2926  008262  D007               	bra	u1347
  2927  008264  0009               	tblrd		*+
  2928  008266  CFF5 F000          	movff	tablat,btemp
  2929  00826A  0009               	tblrd		*+
  2930  00826C  CFF5 F001          	movff	tablat,btemp+1
  2931  008270  D008               	bra	u1340
  2932  008272                     u1347:
  2933  008272  CFF6 FFE9          	movff	tblptrl,fsr0l
  2934  008276  CFF7 FFEA          	movff	tblptrh,fsr0h
  2935  00827A  CFEE F000          	movff	postinc0,btemp
  2936  00827E  CFEE F001          	movff	postinc0,btemp+1
  2937  008282                     u1340:
  2938  008282  0100               	movlb	__Lparam shr (0+8)
  2939  008284  51D7               	movf	?_ResetPoz^(__Lparam& (0+65280)),w
  2940  008286  2400               	addwf	btemp,w,c
  2941  008288  6EE9               	movwf	fsr0l,c
  2942  00828A  0E00               	movlw	0
  2943  00828C  2001               	addwfc	btemp+1,w,c
  2944  00828E  6EEA               	movwf	fsr0h,c
  2945  008290  0EFE               	movlw	-2
  2946  008292  16EF               	andwf	indf0,f,c
  2947                           ;wsw.c: 693: }
  2948  008294  0CFE               	retlw	254
  2949  008296                     __end_of_ResetPoz:
  2950                           ;wsw.c: 695: void ResetKol(const unsigned char n
      +                          rkol)
  2951                           ;wsw.c: 696: {
  2952  008296                     _ResetKol:
  2953  000000                     
  2954                           ; _nrkol loaded to fsr2l
  2955  008296  6ED9               	movwf	fsr2l,c
  2956                           ;wsw.c: 697: if (nrkol>=4) asm("RESET");
  2957  008298  0E03               	movlw	3
  2958  00829A  64D9               	cpfsgt	fsr2l,c
  2959  00829C  D001               	goto	l139
  2960  00829E  00FF               	reset		;#
  2961  0082A0                     l139:
  2962                           ;wsw.c: 698: KInd[nrkol].reset=1;
  2963  0082A0  50D9               	movf	fsr2l,w,c
  2964  0082A2  EE0F  F03C         	lfsr	0,_KInd
  2965  0082A6  26E9               	addwf	fsr0l,f,c
  2966  0082A8  0E00               	movlw	0
  2967  0082AA  22EA               	addwfc	fsr0h,f,c
  2968  0082AC  50EF               	movf	indf0,w,c
  2969  0082AE  0BFD               	andlw	-3
  2970  0082B0  0902               	iorlw	2
  2971  0082B2  6EEF               	movwf	indf0,c
  2972                           ;wsw.c: 699: }
  2973  0082B4  0012               	return	
  2974  0082B6                     __end_of_ResetKol:
  2975                           ;wsw.c: 702: void RestartKol(const unsigned char
      +                           nrkol)
  2976                           ;wsw.c: 703: {
  2977  0082B6                     _RestartKol:
  2978  000000                     
  2979                           ; _nrkol loaded to fsr2l
  2980  0082B6  6ED9               	movwf	fsr2l,c
  2981                           ;wsw.c: 704: if (nrkol>=4) asm("RESET");
  2982  0082B8  0E03               	movlw	3
  2983  0082BA  64D9               	cpfsgt	fsr2l,c
  2984  0082BC  D001               	goto	l141
  2985  0082BE  00FF               	reset		;#
  2986  0082C0                     l141:
  2987                           ;wsw.c: 705: KInd[nrkol].restart=1;
  2988  0082C0  50D9               	movf	fsr2l,w,c
  2989  0082C2  EE0F  F03C         	lfsr	0,_KInd
  2990  0082C6  26E9               	addwf	fsr0l,f,c
  2991  0082C8  0E00               	movlw	0
  2992  0082CA  22EA               	addwfc	fsr0h,f,c
  2993  0082CC  50EF               	movf	indf0,w,c
  2994  0082CE  0BFE               	andlw	-2
  2995  0082D0  0901               	iorlw	1
  2996  0082D2  6EEF               	movwf	indf0,c
  2997                           ;wsw.c: 706: }
  2998  0082D4  0012               	return	
  2999  0082D6                     __end_of_RestartKol:
  3000                           ;wsw.c: 708: void AllKolToFirstPoz(void)
  3001                           ;wsw.c: 709: {
  3002  0082D6                     _AllKolToFirstPoz:
  3003  000000                     
  3004                           ;wsw.c: 710: unsigned char j;
  3005  0082D6  6AD9               	clrf	fsr2l,c
  3006  0082D8                     l143:
  3007                           ;wsw.c: 712: {
  3008  0082D8  50D9               	movf	fsr2l,w,c
  3009  0082DA  EE0F  F03C         	lfsr	0,_KInd
  3010  0082DE  26E9               	addwf	fsr0l,f,c
  3011  0082E0  0E00               	movlw	0
  3012  0082E2  22EA               	addwfc	fsr0h,f,c
  3013  0082E4  0E03               	movlw	-253
  3014  0082E6  16EF               	andwf	indf0,f,c
  3015                           ;wsw.c: 714: KTim[j].ncS=0;
  3016  0082E8  50D9               	movf	fsr2l,w,c
  3017  0082EA  0D03               	mullw	3
  3018  0082EC  0E07               	movlw	low _KTim
  3019  0082EE  24F3               	addwf	prodl,w,c
  3020  0082F0  6EE9               	movwf	fsr0l,c
  3021  0082F2  0E01               	movlw	high _KTim
  3022  0082F4  20F4               	addwfc	prodh,w,c
  3023  0082F6  6EEA               	movwf	fsr0h,c
  3024  0082F8  6AEF               	clrf	indf0,c
  3025                           ;wsw.c: 715: KTim[j].ndS=0;
  3026  0082FA  50D9               	movf	fsr2l,w,c
  3027  0082FC  0D03               	mullw	3
  3028  0082FE  0E08               	movlw	low (_KTim+1)
  3029  008300  24F3               	addwf	prodl,w,c
  3030  008302  6EE9               	movwf	fsr0l,c
  3031  008304  0E01               	movlw	high (_KTim+1)
  3032  008306  20F4               	addwfc	prodh,w,c
  3033  008308  6EEA               	movwf	fsr0h,c
  3034  00830A  6AEF               	clrf	indf0,c
  3035  00830C  2AD9               	incf	fsr2l,f,c
  3036  00830E  0E03               	movlw	3
  3037  008310  64D9               	cpfsgt	fsr2l,c
  3038  008312  D7E2               	goto	l143
  3039  008314  0C03               	retlw	3
  3040                           ;wsw.c: 716: }
  3041  008316                     __end_of_AllKolToFirstPoz:
  3042  000000                     
  3043  000000                     
  3044  000000                     
  3045  000000                     
  3046  000000                     
  3047  000000                     
  3048  000000                     
  3049  000000                     
  3050  000000                     
  3051  000000                     
  3052  000000                     
  3053  000000                     
  3054  000000                     
  3055  000000                     
  3056  000000                     
  3057  000000                     
  3058  000000                     
  3059  000000                     
  3060  000000                     
  3061  000000                     
  3062  000000                     
  3063  000000                     
  3064  000000                     
  3065  000000                     
  3066  000000                     
  3067  000000                     
  3068  000000                     
  3069  000000                     
  3070  000000                     
  3071  000000                     
  3072  000000                     
  3073  000000                     
  3074  000000                     
  3075  000000                     
  3076  000000                     
  3077  000000                     
  3078  000000                     
  3079  000000                     
  3080  000000                     
  3081  000000                     
  3082  000000                     
  3083  000000                     
  3084  000000                     
  3085  000000                     
  3086  000000                     
  3087  000000                     
  3088  000000                     
  3089  000000                     
  3090  000000                     
  3091  000000                     
  3092  000000                     
  3093  000000                     
  3094  000000                     
  3095  000000                     
  3096  000000                     
  3097  000000                     
  3098  000000                     
  3099  000000                     
  3100  000000                     
  3101  000000                     
  3102  000000                     
  3103  000000                     
  3104  000000                     
  3105  000000                     
  3106  000000                     
  3107  000000                     
  3108  000000                     
  3109  000000                     
  3110  000000                     
  3111  000000                     
  3112  000000                     
  3113  000000                     
  3114  000000                     
  3115  000000                     
  3116  000000                     
  3117  000000                     
  3118  000000                     
  3119  000000                     
  3120  000000                     
  3121  000000                     
  3122  000000                     
  3123  000000                     
  3124  000000                     
  3125  000000                     
  3126  000000                     
  3127  000000                     
  3128  000000                     
  3129  000000                     
  3130  000000                     
  3131  000000                     
  3132  000000                     
  3133  000000                     
  3134  000000                     
  3135  000000                     
  3136  000000                     
  3137  000000                     
  3138  000000                     
  3139  000000                     
  3140  000000                     
  3141  000000                     
  3142  000000                     
  3143  000000                     
  3144  000000                     
  3145  000000                     
  3146  000000                     
  3147  000000                     
  3148  000000                     
  3149  000000                     
  3150  000000                     
  3151  000000                     
  3152  000000                     
  3153  000000                     
  3154  000000                     
  3155  000000                     
  3156  000000                     
  3157  000000                     
  3158  000000                     
  3159  000000                     
  3160  000000                     
  3161  000000                     
  3162  000000                     
  3163  000000                     
  3164  000000                     
  3165  000000                     
  3166  000000                     
  3167  000000                     
  3168  000000                     
  3169  000000                     
  3170  000000                     
  3171  000000                     
  3172  000000                     
  3173  000000                     
  3174  000000                     
  3175  000000                     
  3176  000000                     
  3177  000000                     
  3178  000000                     
  3179  000000                     
  3180  000000                     
  3181  000000                     
  3182  000000                     
  3183  000000                     
  3184  000000                     
  3185  000000                     
  3186  000000                     
  3187  000000                     
  3188  000000                     
  3189  000000                     
  3190  000000                     
  3191  000000                     
  3192  000000                     
  3193  000000                     
  3194  000000                     
  3195  000000                     
  3196  000000                     
  3197  000000                     
  3198  000000                     
  3199  000000                     
  3200  000000                     
  3201  000000                     
  3202  000000                     
  3203  000000                     
  3204  000000                     
  3205  000000                     
  3206  000000                     
  3207  000000                     
  3208  000000                     
  3209  000000                     
  3210  000000                     
  3211  000000                     
  3212  000000                     
  3213  000000                     
  3214  000000                     
  3215  000000                     
  3216  000000                     
  3217  000000                     
  3218  000000                     
  3219  000000                     
  3220  000000                     
  3221  000000                     
  3222  000000                     
  3223  000000                     
  3224  000000                     
  3225  000000                     
  3226  000000                     
  3227  000000                     
  3228  000000                     
  3229  000000                     
  3230  000000                     
  3231  000000                     
  3232  000000                     
  3233  000000                     
  3234  000000                     
  3235  000000                     
  3236  000000                     
  3237  000000                     
  3238  000000                     
  3239  000000                     
  3240  000000                     
  3241  000000                     
  3242  000000                     
  3243  000000                     
  3244  000000                     
  3245  000000                     
  3246  000000                     
  3247  000000                     
  3248  000000                     
  3249  000000                     
  3250  000000                     
  3251  000000                     
  3252  000000                     
  3253  000000                     
  3254  000000                     
  3255  000000                     
  3256  000000                     
  3257  000000                     
  3258  000000                     
  3259  000000                     
  3260  000000                     
  3261  000000                     
  3262  000000                     
  3263  000000                     
  3264  000000                     
  3265  000000                     
  3266  000000                     
  3267  000000                     
  3268  000000                     
  3269  000000                     
  3270  000000                     
  3271  000000                     
  3272  000000                     
  3273  000000                     
  3274  000000                     
  3275  000000                     
  3276  000000                     
  3277  000000                     
  3278  000000                     
  3279  000000                     
  3280  000000                     
  3281  000000                     
  3282  000000                     
  3283  000000                     
  3284  000000                     
  3285  000000                     
  3286  000000                     
  3287  000000                     
  3288  000000                     
  3289  000000                     
  3290  000000                     
  3291  000000                     
  3292  000000                     
  3293  000000                     
  3294  000000                     
  3295  000000                     
  3296  000000                     
  3297  000000                     
  3298  000000                     
  3299  000000                     
  3300  000000                     
  3301  000000                     
  3302  000000                     
  3303  000000                     
  3304  000000                     
  3305  000000                     
  3306  000000                     
  3307  000000                     
  3308  000000                     
  3309  000000                     
  3310  000000                     
  3311  000000                     
  3312  000000                     
  3313  000000                     
  3314  000000                     
  3315  000000                     
  3316  000000                     
  3317  000000                     
  3318  000000                     
  3319  000000                     
  3320  000000                     
  3321  000000                     
  3322  000000                     
  3323  000000                     
  3324  000000                     
  3325  000000                     
  3326  000000                     
  3327  000000                     
  3328  000000                     
  3329  000000                     
  3330  000000                     
  3331  000000                     
  3332  000000                     
  3333  000000                     
  3334  000000                     
  3335  000000                     
  3336  000000                     
  3337  000000                     
  3338  000000                     
  3339  000000                     
  3340  000000                     
  3341  000000                     
  3342  000000                     
  3343  000000                     
  3344  000000                     
  3345  000000                     
  3346  000000                     
  3347  000000                     
  3348  000000                     
  3349  000000                     
  3350  000000                     
  3351  000000                     
  3352  000000                     
  3353  000000                     
  3354  000000                     
  3355  000000                     
  3356  000000                     
  3357  000000                     
  3358  000000                     
  3359  000000                     
  3360  000000                     
  3361  000000                     
  3362  000000                     
  3363  000000                     
  3364  000000                     
  3365  000000                     
  3366  000000                     
  3367  000000                     
  3368  000000                     
  3369  000000                     
  3370  000000                     
  3371  000000                     
  3372  000000                     
  3373  000000                     
  3374  000000                     
  3375  000000                     
  3376  000000                     
  3377  000000                     
  3378  000000                     
  3379  000000                     
  3380  000000                     
  3381  000000                     
  3382  000000                     
  3383  000000                     
  3384  000000                     
  3385  000000                     
  3386  000000                     
  3387  000000                     
  3388  000000                     
  3389  000000                     
  3390  000000                     
  3391  000000                     
  3392  000000                     
  3393  000000                     
  3394  000000                     
  3395  000000                     
  3396  000000                     
  3397  000000                     
  3398  000000                     
  3399  000000                     
  3400  000000                     
  3401  000000                     
  3402  000000                     
  3403  000000                     
  3404  000000                     
  3405  000000                     
  3406  000000                     
  3407  000000                     
  3408  000000                     
  3409  000000                     
  3410  000000                     
  3411  000000                     
  3412  000000                     
  3413  000000                     
  3414  000000                     
  3415  000000                     
  3416  000000                     
  3417  000000                     
  3418  000000                     
  3419  000000                     
  3420  000000                     
  3421  000000                     
  3422  000000                     
  3423  000000                     
  3424  000000                     
  3425  000000                     
  3426  000000                     
  3427  000000                     
  3428  000000                     
  3429  000000                     
  3430  000000                     
  3431  000000                     
  3432  000000                     
  3433  000000                     
  3434  000000                     
  3435  000000                     
  3436  000000                     
  3437  000000                     
  3438  000000                     
  3439  000000                     
  3440  000000                     
  3441  000000                     
  3442  000000                     
  3443  000000                     
  3444  000000                     
  3445  000000                     
  3446  000000                     
  3447  000000                     
  3448  000000                     
  3449  000000                     
  3450  000000                     
  3451  000000                     
  3452  000000                     
  3453  000000                     
  3454  000000                     
  3455  000000                     
  3456  000000                     
  3457  000000                     
  3458  000000                     
  3459  000000                     
  3460  000000                     
  3461  000000                     
  3462  000000                     
  3463  000000                     
  3464  000000                     
  3465  000000                     
  3466  000000                     
  3467  000000                     
  3468  000000                     
  3469  000000                     
  3470  000000                     
  3471  000000                     
  3472  000000                     
  3473  000000                     
  3474  000000                     
  3475  000000                     
  3476  000000                     
  3477  000000                     
  3478                           
  3479                           	psect	const
  3480  001036                     _KL0_AP:
  3481  001036  0113               	dw	_DWD
  3482  001038  0117               	dw	_DWD+4
  3483                           ;wsw.c: 100: const KAdrPoz KL0_AP[2]= {
  3484                           ;wsw.c: 101: DWD,
  3485                           ;wsw.c: 102: DWD+1
  3486                           ;wsw.c: 103: };
  3487  00103A                     _KL1_AP:
  3488  00103A  011B               	dw	_DWD+8
  3489  00103C  011B               	dw	_DWD+8
  3490                           ;wsw.c: 105: const KAdrPoz KL1_AP[2]= {
  3491                           ;wsw.c: 106: DWD+2,
  3492                           ;wsw.c: 107: DWD+2
  3493                           ;wsw.c: 108: };
  3494  00103E                     _KL2_AP:
  3495  00103E  011F               	dw	_DWD+12
  3496  001040  0123               	dw	_DWD+16
  3497                           ;wsw.c: 110: const KAdrPoz KL2_AP[2]= {
  3498                           ;wsw.c: 111: DWD+3,
  3499                           ;wsw.c: 112: DWD+4
  3500                           ;wsw.c: 113: };
  3501  001042                     _KL3_AP:
  3502  001042  0127               	dw	_DWD+20
  3503  001044  012B               	dw	_DWD+24
  3504                           ;wsw.c: 115: const KAdrPoz KL3_AP[2]= {
  3505                           ;wsw.c: 116: DWD+5,
  3506                           ;wsw.c: 117: DWD+6
  3507                           ;wsw.c: 118: };
  3508  001046                     _KL0_WP:
  3509  001046  00                 	db	0
  3510  001047  00                 	db	0
  3511  001048  08                 	db	8
  3512  001049  00                 	db	0
  3513  00104A  00                 	db	0
  3514  00104B  08                 	db	8
  3515                           ;wsw.c: 127: const KWrtPoz KL0_WP[2]={
  3516                           ;wsw.c: 128: 0,0,8,
  3517                           ;wsw.c: 129: 0,0,8
  3518                           ;wsw.c: 130: };
  3519  00104C                     _KL1_WP:
  3520  00104C  00                 	db	0
  3521  00104D  00                 	db	0
  3522  00104E  06                 	db	6
  3523  00104F  00                 	db	0
  3524  001050  00                 	db	0
  3525  001051  06                 	db	6
  3526                           ;wsw.c: 132: const KWrtPoz KL1_WP[2]={
  3527                           ;wsw.c: 133: 0,0,6,
  3528                           ;wsw.c: 134: 0,0,6
  3529                           ;wsw.c: 135: };
  3530  001052                     _KL2_WP:
  3531  001052  00                 	db	0
  3532  001053  00                 	db	0
  3533  001054  06                 	db	6
  3534  001055  00                 	db	0
  3535  001056  00                 	db	0
  3536  001057  06                 	db	6
  3537                           ;wsw.c: 137: const KWrtPoz KL2_WP[2]={
  3538                           ;wsw.c: 138: 0,0,6,
  3539                           ;wsw.c: 139: 0,0,6
  3540                           ;wsw.c: 140: };
  3541  001058                     _KL3_WP:
  3542  001058  00                 	db	0
  3543  001059  00                 	db	0
  3544  00105A  1E                 	db	30
  3545  00105B  00                 	db	0
  3546  00105C  00                 	db	0
  3547  00105D  14                 	db	20
  3548                           ;wsw.c: 142: const KWrtPoz KL3_WP[2]={
  3549                           ;wsw.c: 143: 0,0,30,
  3550                           ;wsw.c: 144: 0,0,20
  3551                           ;wsw.c: 145: };
  3552  00105E                     _KL0_FP:
  3553  00105E  00                 	db	0
  3554  00105F  00                 	db	0
  3555  001060  00                 	db	0
  3556  001061  00                 	db	0
  3557                           ;wsw.c: 153: const KFrmPoz KL0_FP[2]={
  3558                           ;wsw.c: 154: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3559                           ;wsw.c: 155: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3560                           ;wsw.c: 156: };
  3561  001062                     _KL1_FP:
  3562  001062  00                 	db	0
  3563  001063  00                 	db	0
  3564  001064  00                 	db	0
  3565  001065  00                 	db	0
  3566                           ;wsw.c: 158: const KFrmPoz KL1_FP[2]={
  3567                           ;wsw.c: 159: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3568                           ;wsw.c: 160: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3569                           ;wsw.c: 161: };
  3570  001066                     _KL2_FP:
  3571  001066  00                 	db	0
  3572  001067  00                 	db	0
  3573  001068  00                 	db	0
  3574  001069  00                 	db	0
  3575                           ;wsw.c: 163: const KFrmPoz KL2_FP[2]={
  3576                           ;wsw.c: 164: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3577                           ;wsw.c: 165: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3578                           ;wsw.c: 166: };
  3579  00106A                     _KL3_FP:
  3580  00106A  00                 	db	0
  3581  00106B  00                 	db	0
  3582  00106C  00                 	db	0
  3583  00106D  00                 	db	0
  3584                           ;wsw.c: 192: static KFocus KL3_FC[2]= {
  3585                           ;wsw.c: 193: 0,
  3586                           ;wsw.c: 194: 0
  3587                           ;wsw.c: 195: };
  3588  00106E                     _KL0_OUT:
  3589  00106E  012F               	dw	_PWD
  3590  001070  00                 	db	0
  3591  001071  00                 	db	0
  3592                           ;wsw.c: 200: const KOutput KL0_OUT= {PWD,0,0};
  3593  001072                     _KL1_OUT:
  3594  001072  0133               	dw	_PWD+4
  3595  001074  00                 	db	0
  3596  001075  00                 	db	0
  3597                           ;wsw.c: 201: const KOutput KL1_OUT= {PWD+1,0,0};
  3598  001076                     _KL2_OUT:
  3599  001076  0137               	dw	_PWD+8
  3600  001078  04                 	db	4
  3601  001079  00                 	db	0
  3602                           ;wsw.c: 202: const KOutput KL2_OUT= {PWD+2,4,0};
  3603  00107A                     _KL3_OUT:
  3604  00107A  013B               	dw	_PWD+12
  3605  00107C  00                 	db	0
  3606  00107D  00                 	db	0
  3607                           ;wsw.c: 203: const KOutput KL3_OUT= {PWD+3,0,0};
  3608  00107E                     _KL0:
  3609  00107E  1036               	dw	_KL0_AP
  3610  001080  1046               	dw	_KL0_WP
  3611  001082  105E               	dw	_KL0_FP
  3612  001084  0E8F               	dw	_KL0_FC
  3613  001086  106E               	dw	_KL0_OUT
  3614                           ;wsw.c: 207: const Kolejka KL0={KL0_AP,KL0_WP,KL
      +                          0_FP,KL0_FC,&KL0_OUT};
  3615  001088                     _KL1:
  3616  001088  103A               	dw	_KL1_AP
  3617  00108A  104C               	dw	_KL1_WP
  3618  00108C  1062               	dw	_KL1_FP
  3619  00108E  0E91               	dw	_KL1_FC
  3620  001090  1072               	dw	_KL1_OUT
  3621                           ;wsw.c: 208: const Kolejka KL1={KL1_AP,KL1_WP,KL
      +                          1_FP,KL1_FC,&KL1_OUT};
  3622  001092                     _KL2:
  3623  001092  103E               	dw	_KL2_AP
  3624  001094  1052               	dw	_KL2_WP
  3625  001096  1066               	dw	_KL2_FP
  3626  001098  0E93               	dw	_KL2_FC
  3627  00109A  1076               	dw	_KL2_OUT
  3628                           ;wsw.c: 209: const Kolejka KL2={KL2_AP,KL2_WP,KL
      +                          2_FP,KL2_FC,&KL2_OUT};
  3629  00109C                     _KL3:
  3630  00109C  1042               	dw	_KL3_AP
  3631  00109E  1058               	dw	_KL3_WP
  3632  0010A0  106A               	dw	_KL3_FP
  3633  0010A2  0E95               	dw	_KL3_FC
  3634  0010A4  107A               	dw	_KL3_OUT
  3635                           ;wsw.c: 210: const Kolejka KL3={KL3_AP,KL3_WP,KL
      +                          3_FP,KL3_FC,&KL3_OUT};
  3636  0010A6                     _Klj:
  3637  0010A6  107E               	dw	_KL0
  3638  0010A8  02                 	db	2
  3639  0010A9  1088               	dw	_KL1
  3640  0010AB  02                 	db	2
  3641  0010AC  1092               	dw	_KL2
  3642  0010AE  02                 	db	2
  3643  0010AF  109C               	dw	_KL3
  3644  0010B1  02                 	db	2
  3645                           ;wsw.c: 216: const KGlobal Klj[4]= {
  3646                           ;wsw.c: 217: &KL0,2,
  3647                           ;wsw.c: 218: &KL1,2,
  3648                           ;wsw.c: 219: &KL2,2,
  3649                           ;wsw.c: 220: &KL3,2
  3650                           ;wsw.c: 221: };
  3651                           ;wsw.c: 255: static KIndeks KInd[4];
  3652                           ;wsw.c: 256: static KTime KTim[4];
  3653  0010B2                     _Znak:
  3654  0010B2  50                 	db	80
  3655  0010B3  F9                 	db	-7
  3656  0010B4  32                 	db	50
  3657  0010B5  31                 	db	49
  3658  0010B6  99                 	db	-103
  3659  0010B7  15                 	db	21
  3660  0010B8  14                 	db	20
  3661  0010B9  79                 	db	121
  3662  0010BA  10                 	db	16
  3663  0010BB  11                 	db	17
  3664  0010BC  18                 	db	24
  3665  0010BD  94                 	db	-108
  3666  0010BE  56                 	db	86
  3667  0010BF  B0                 	db	-80
  3668  0010C0  16                 	db	22
  3669  0010C1  1E                 	db	30
  3670                           
  3671                           	psect	bigdata
  3672                           ;wsw.c: 168: const KFrmPoz KL3_FP[2]={
  3673                           ;wsw.c: 169: 0,0,0,0,0,0,0,0,0,0,0,0,0,
  3674                           ;wsw.c: 170: 0,0,0,0,0,0,0,0,0,0,0,0,0
  3675                           ;wsw.c: 171: };
  3676  000E8F                     _KL0_FC:
  3677  000E8F                     	ds	1
  3678  000E8F                     	ds	1
  3679                           ;wsw.c: 177: static KFocus KL0_FC[2]= {
  3680                           ;wsw.c: 178: 0,
  3681                           ;wsw.c: 179: 0
  3682                           ;wsw.c: 180: };
  3683  000E8F                     _KL1_FC:
  3684  000E8F                     	ds	1
  3685  000E8F                     	ds	1
  3686                           ;wsw.c: 182: static KFocus KL1_FC[2]= {
  3687                           ;wsw.c: 183: 0,
  3688                           ;wsw.c: 184: 0
  3689                           ;wsw.c: 185: };
  3690  000E8F                     _KL2_FC:
  3691  000E8F                     	ds	1
  3692  000E8F                     	ds	1
  3693                           ;wsw.c: 187: static KFocus KL2_FC[2]= {
  3694                           ;wsw.c: 188: 0,
  3695                           ;wsw.c: 189: 0
  3696                           ;wsw.c: 190: };
  3697  000E8F                     _KL3_FC:
  3698  000E8F                     	ds	1
  3699  000E8F                     	ds	1
  3700                           
  3701                           	psect	ibigdata
  3702  0010C2  00                 	db	0
  3703  0010C3  00                 	db	0
  3704  0010C4  00                 	db	0
  3705  0010C5  00                 	db	0
  3706  0010C6  00                 	db	0
  3707  0010C7  00                 	db	0
  3708  0010C8  00                 	db	0
  3709  0010C9  00                 	db	0
  3710                           
  3711                           	psect	rbit
  3712  0002F1                     _mux:
  3713  0002F1                     	ds	1
  3714  000000                     
  3715  000000                     
  3716  000000                     
  3717  000000                     
  3718  000000                     
  3719  000000                     
  3720  000000                     
  3721  000000                     
  3722  000000                     
  3723  000000                     
  3724  000000                     
  3725  000000                     
  3726  000000                     
  3727  000000                     
  3728  000000                     
  3729  000000                     
  3730  000000                     
  3731  000000                     
  3732  000000                     
  3733  000000                     
  3734                           
  3735                           	psect	bigbss
  3736  000F38                     _Dmask:
  3737  000F38                     	ds	1
  3738  000000                     
  3739  000000                     
  3740  000000                     
  3741  000000                     
  3742  000000                     
  3743  000000                     
  3744  000000                     
  3745  000000                     
  3746  000000                     
  3747  000000                     
  3748  000000                     
  3749  000000                     
  3750  000000                     
  3751  000000                     
  3752  000000                     
  3753  000000                     
  3754  000000                     
  3755  000000                     
  3756  000000                     
  3757  000000                     
  3758  000000                     
  3759  000000                     
  3760  000000                     
  3761  000000                     
  3762  000000                     
  3763  000000                     
  3764  000000                     
  3765  000000                     
  3766  000000                     
  3767  000000                     
  3768  000000                     
  3769  000000                     
  3770  000000                     
  3771  000000                     
  3772  000000                     
  3773  000000                     
  3774  000000                     
  3775  000000                     
  3776  000000                     
  3777  000000                     
  3778  000000                     
  3779  000000                     
  3780  000000                     
  3781  000000                     
  3782  000000                     
  3783  000000                     
  3784  000000                     
  3785  000000                     
  3786  000000                     
  3787  000000                     
  3788  000000                     
  3789  000000                     
  3790  000000                     
  3791  000000                     
  3792  000000                     
  3793  000000                     
  3794  000000                     
  3795  000000                     
  3796  000000                     
  3797  000000                     
  3798  000000                     
  3799  000000                     
  3800  000000                     
  3801  000000                     
  3802  000000                     
  3803  000000                     
  3804  000000                     
  3805  000000                     
  3806  000000                     
  3807  000000                     
  3808  000000                     
  3809  000000                     
  3810  000000                     
  3811  000000                     
  3812  000000                     
  3813  000000                     
  3814  000000                     
  3815  000000                     
  3816  000000                     
  3817  000000                     
  3818  000000                     
  3819  000000                     
  3820  000000                     
  3821  000000                     
  3822  000000                     
  3823  000000                     
  3824  000000                     
  3825  000000                     
  3826  000000                     
  3827  000000                     
  3828  000000                     
  3829  000000                     
  3830  000000                     
  3831  000000                     
  3832  000000                     
  3833  000000                     
  3834  000000                     
  3835  000000                     
  3836  000000                     
  3837  000000                     
  3838  000000                     
  3839  000000                     
  3840  000000                     
  3841  000000                     
  3842  000000                     
  3843  000F38                     _wsdid:
  3844  000F38                     	ds	1
  3845  000000                     
  3846  000000                     
  3847  000000                     
  3848  000000                     
  3849  000000                     
  3850  000000                     
  3851  000000                     
  3852  000F38                     _wbty:
  3853  000F38                     	ds	2
  3854  000F38                     _KInd:
  3855  000F38                     	ds	4
  3856                           
  3857                           	psect	bss
  3858  000100                     _LedData:
  3859  000100                     	ds	3
  3860  000100                     _WswData:
  3861  000100                     	ds	4
  3862  000100                     _KTim:
  3863  000100                     	ds	12
  3864  000100                     _DWD:
  3865  000100                     	ds	28
  3866  000100                     _PWD:
  3867  000100                     	ds	40
  3868                           
  3869                           	psect	temp
  3870  000000                     btemp:
  3871  000000                     	ds	5
  3872                           tblptrh	equ	0xFF7
  3873                           tblptrl	equ	0xFF6
  3874                           tablat	equ	0xFF5
  3875                           prodh	equ	0xFF4
  3876                           prodl	equ	0xFF3
  3877                           indf0	equ	0xFEF
  3878                           postinc0	equ	0xFEE
  3879                           postdec0	equ	0xFED
  3880                           fsr0h	equ	0xFEA
  3881                           fsr0l	equ	0xFE9
  3882                           wreg	equ	0xFE8
  3883                           indf1	equ	0xFE7
  3884                           postinc1	equ	0xFE6
  3885                           postdec1	equ	0xFE5
  3886                           fsr1h	equ	0xFE2
  3887                           fsr1l	equ	0xFE1
  3888                           fsr2l	equ	0xFD9
  3889                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Wed Mar 20 08:54:41 2013

      __end_of_RefreshWSW 6E3E                  _ResetKol 8296  
                _ResetPoz 8200                 _SetStatus 7EC2  
       __end_of_SetStatus 80B6                 ?_ResetPoz 00D7  
                      l20 6E40                        l23 6F98  
                      l15 6D84                        l32 6FC4  
                      l33 713A                _SetWbtyBit 7DC2  
                      l50 73FC                        l42 72D6  
                      l27 6F10                        l36 7B6A  
                      l28 7050                        l61 7B78  
                      l53 7ABE                        l45 73EE  
                      l37 7B62                        l54 7636  
                      l38 71DC                        l71 7C8C  
                      l55 7904                        l39 72B2  
                      l72 7C9C                        l64 7BB6  
                      l56 7A2E                        l73 7CAC  
                      l49 7354                        l74 7CBC  
                      l66 7C08                        l91 7D3E  
                      l75 7CCC                        l67 7C70  
                      l84 7D2A                        l76 7CDA  
                      l68 7C68                        l85 7D2E  
                      l69 7C18                        l94 7D80  
                      l78 7D0E                        l87 7D3A  
                      l79 7CFE                        l88 7D3C  
                      l97 7D8C                        u20 6E92  
                      u30 6EB8                        u27 6E82  
                      u37 6EAE                        u80 6EEC  
                      u90 6F84                        u97 6F74  
               ?a_KolProc 00FC        __end_of_SetWbtyBit 7E1A  
              ?_SetStatus 00DB                       l100 7DA8  
                     l103 7DB4                       l120 7F16  
                     l121 7F34                       l122 7F4E  
                     l123 7F6A                       l107 7DCC  
                     l124 7F88                       l141 82C0  
                     l125 7FA4                       l126 7FC8  
                     l118 7EE0                       l143 82D8  
                     l127 7FEE                       l119 7EFA  
                     l128 8016                       l129 8040  
                     l139 82A0                       _KL0 107E  
                     _KL1 1088                       _KL2 1092  
                     _KL3 109C                       _DWD 0113  
                     u300 734E                       u220 718C  
                     u140 7038                       u230 71B8  
                     u400 753E                       u320 73C8  
                     u240 7256                       u410 75AA  
                     u330 73DC                       u170 70B6  
                     u307 7344                       u227 717C  
                     u147 7028                       u500 77A6  
                     u420 75E0                       u180 70E2  
                     u237 71A8                       u510 77D2  
                     u407 7534                       u327 73B8  
                     u247 7246                       u600 7A80  
                     u520 7834                       u417 759A  
                     u265 72AE                       u177 70A6  
                     u610 7AAC                       u530 7870  
                     u450 7680                       u370 748A  
                     u290 7328                       u507 7796  
                     u427 75D6                       u187 70D2  
                     u540 78C2                       u460 76BE  
                     u380 74B6                       u517 77C2  
                     u550 78EE                       u390 7518  
                     u607 7A70                       u527 7824  
                     u560 794E                       u480 7718  
                     u625 7B3A                       u617 7A9C  
                     u537 7860                       u457 7670  
                     u377 747A                       u297 7318  
                     u810 7CC6                       u570 798C  
                     u490 7754                       u547 78B2  
                     u467 76AE                       u387 74A6  
                     u580 79E6                       u557 78DE  
                     u397 7508                       u590 7A12  
                     u567 793E                       u487 7708  
                     u577 797C                       u497 7744  
                     u930 7D7C                       u587 79D6  
                     u924 7D6E                       u780 7CB6  
                     u925 7D6A                       u597 7A02  
                     u870 7CEE                       u945 7D7E  
                     _PWD 012F              _SetPrWswData 7B76  
                     _Klj 10A6                       _mux 02F1  
             ?_SetWbtyBit 00D7                       wreg 000FE8  
              _RestartKol 82B6        __end_of_RestartKol 82D6  
    __end_of_SetPrWswData 7BD0                      f6123 00FD  
                    u1200 807E                      u1034 7DE2  
                    u1035 7DDE                      u1300 81D6  
                    u1044 7E02                      u1045 7DFE  
                    u1311 820A                      u1231 80C2  
                    u1330 822E                      u1250 80E6  
                    u1307 81C6                      u1340 8282  
                    u1260 813A                      u1271 815E  
                    u1290 8182                      u1347 8272  
                    u1267 812A                      _KInd 0F3C  
                    _KTim 0107                      _Znak 10B2  
                    fsr0h 000FEA                      fsr1h 000FE2  
                    indf0 000FEF                      fsr0l 000FE9  
                    indf1 000FE7                      fsr1l 000FE1  
                    fsr2l 000FD9                      _wbty 0F3A  
                    btemp 0000                      lbdiv E4CA  
                    lbmod E4CA                      prodh 000FF4  
                    prodl 000FF3                   ?_GetPoz 00D7  
         __end_of_KolProc 7B76           __end_of_InitWsw 6E30  
         __end_of_SetData 7EC0                   ?_SetPoz 00DB  
        _AllKolToFirstPoz 82D6             __end_of_Rwbty 7E6C  
           __end_of_Swbty 7E42             __end_of_WswOn 7E94  
                 _KL0_OUT 106E                   _KL1_OUT 1072  
                 _KL2_OUT 1076                   _KL3_OUT 107A  
                   _Dmask 0F38                used_btemp0 0001  
              used_btemp1 0001                used_btemp2 0001  
              used_btemp3 0001                used_btemp4 0001  
                   _Rwbty 7E42                     _Swbty 7E1A  
                   _WswOn 7E8E                     _wsdid 0F39  
                   tablat 000FF5                   _LedData 0100  
                   status 000FD8                   _KolProc 6E3E  
                 _InitWsw 6D6E                   _SetData 7E96  
                ?_SetData 00DB                   __Lparam 00D7  
               ??_KolProc 00FC          __end_of_ResetKol 82B6  
        __end_of_ResetPoz 8296                   _WswData 0103  
                 __ramtop 1000            __end_of_GetPoz 8152  
          __end_of_SetPoz 81FE            __end_of_Rwsdid 7E88  
          __end_of_Swsdid 7E7A            __end_of_WswOff 7E8E  
                  _KL0_FC 0E8F                    _KL0_AP 1036  
                  _KL1_FC 0E91                    _KL1_AP 103A  
                  _KL0_FP 105E                    _KL2_FC 0E93  
                  _KL2_AP 103E                    _KL1_FP 1062  
                  _KL3_FC 0E95                    _KL3_AP 1042  
                  _KL2_FP 1066                    _KL3_FP 106A  
                  _KL0_WP 1046                    _KL1_WP 104C  
                  _KL2_WP 1052                    _KL3_WP 1058  
            _PrintWswData 7D1E      __end_of_PrintWswData 7DC0  
                  _GetPoz 80B8                    _SetPoz 8154  
                  _Rwsdid 7E7A                    _Swsdid 7E6C  
                  _WswOff 7E88                   postdec0 000FED  
                 postdec1 000FE5                   postinc0 000FEE  
                 postinc1 000FE6             _FormatWswData 7BD0  
                  tblptrh 000FF7                    tblptrl 000FF6  
   __end_of_FormatWswData 7D1E  __end_of_AllKolToFirstPoz 8316  
              _RefreshWSW 6E30  
