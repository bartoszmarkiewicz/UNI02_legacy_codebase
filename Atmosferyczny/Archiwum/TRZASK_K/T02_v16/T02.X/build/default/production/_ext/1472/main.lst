

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Mon Sep 14 17:44:54 2020


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	eeprom_data,global,class=EEDATA,delta=1
     5                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     6                           	psect	bss,global,class=RAM,space=1,delta=1
     7                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     	;#
    98                           
    99                           	psect	text
   100                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   101                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   102                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   103                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   104                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   105                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   106                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   107                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   108                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   109                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   110                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   111                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   112                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   113                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   114                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   115                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   116                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   117                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   118                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   119                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   120                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   121                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   122                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   123                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   124                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   125                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   126                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   127                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   128                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   129                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   130                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   131                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   132                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   133                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   134                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   135                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   136                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   137                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   138                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   139                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   140                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   141                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   142                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   143                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   144                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   145                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   146                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   147                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   148                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   149                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   150                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   151                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   152                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   153                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   154                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   155                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   156                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   157                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   158                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   159                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   160                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   161                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   162                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   163                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   164                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   165                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   166                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   167                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   168                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   169                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   170                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   171                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   172                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   173                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   174                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   175                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   176                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   177                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   178                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   179                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   180                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   181                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   182                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   183                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   184                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   185                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   186                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   187                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   188                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   189                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   190                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   191                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   192                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   193                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   194                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   195                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   196                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   197                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   198                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   199                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   200  000000                     	;#
   201                           ;	_prz assigned to ?a_OczekujNaPrzeplywWG+1
   202  000000                     _OczekujNaPrzeplywWG$prz	set	?a_OczekujNaPrzeply
      +                          wWG+1
   203                           ;	_pmp assigned to ?a_OczekujNaPrzeplywWG+0
   204  000000                     _OczekujNaPrzeplywWG$pmp	set	?a_OczekujNaPrzeply
      +                          wWG
   205                           ;	_prz assigned to ?a_DetekcjaPrzeplywuWG+1
   206  000000                     _DetekcjaPrzeplywuWG$prz	set	?a_DetekcjaPrzeplyw
      +                          uWG+1
   207                           ;	_pmp assigned to ?a_DetekcjaPrzeplywuWG+0
   208  000000                     _DetekcjaPrzeplywuWG$pmp	set	?a_DetekcjaPrzeplyw
      +                          uWG
   209                           ;	_KnfDisErr assigned to ?a_DecERR+1
   210  000000                     _DecERR$KnfDisErr	set	?a_DecERR+1
   211                           ;	_w assigned to ?a_DecERR+0
   212  000000                     _DecERR$w	set	?a_DecERR
   213                           ;	_wr assigned to ?a_KolejkaPobudzen+0
   214  000000                     _KolejkaPobudzen$wr	set	?a_KolejkaPobudzen
   215                           ;main.h: 36: asm("\tglobal __config" "2"); asm("
      +                          \t__config" "2" " equ " "0xFFFF&0xFFFF&0xFFEF&0x
      +                          FFFF&0xEFFF");
   216  000000                     	;#
   217                           ;main.h: 38: asm("\tglobal __config" "3"); asm("
      +                          \t__config" "3" " equ " "0xFFFF&0x7FFF&0xFDFF");
   218  000000                     	;#
   219                           ;main.h: 39: asm("\tglobal __config" "4"); asm("
      +                          \t__config" "4" " equ " "0xFFFF&0xFFFF&0xFFFB&0x
      +                          FFFF");
   220  000000                     	;#
   221                           ;main.h: 42: asm("\tglobal __config" "5"); asm("
      +                          \t__config" "5" " equ " "0xFFF0");
   222  000000                     	;#
   223                           ;main.h: 43: asm("\tglobal __config" "6"); asm("
      +                          \t__config" "6" " equ " "0xFFF0&0xDFFF");
   224  000000                     	;#
   225                           ;pwm.tp.h: 7: typedef struct {
   226                           ;pwm.tp.h: 8: unsigned _ENPWM:1;
   227                           ;pwm.tp.h: 9: unsigned _ENOSC:1;
   228                           ;pwm.tp.h: 10: unsigned tpGZ:1;
   229                           ;pwm.tp.h: 11: volatile near unsigned char BufPW
      +                          M;
   230                           ;pwm.tp.h: 12: volatile near unsigned char BufOS
      +                          C;
   231                           ;pwm.tp.h: 13: near unsigned char NewOSC;
   232                           ;pwm.tp.h: 14: near unsigned char NewPWM;
   233                           ;pwm.tp.h: 17: unsigned _ENPWM2:1;
   234                           ;pwm.tp.h: 18: volatile near unsigned char BufPW
      +                          M2;
   235                           ;pwm.tp.h: 19: near unsigned char NewPWM2;
   236                           ;pwm.tp.h: 21: unsigned char HIPWM;
   237                           ;pwm.tp.h: 23: unsigned char MDMOD;
   238                           ;pwm.tp.h: 24: unsigned char DKNF_MDMOD;
   239                           ;pwm.tp.h: 25: unsigned char DV16_MDMOD;
   240                           ;pwm.tp.h: 26: unsigned char MGMOD;
   241                           ;pwm.tp.h: 27: unsigned char MAXOSC;
   242                           ;pwm.tp.h: 28: unsigned char MINOSC;
   243                           ;pwm.tp.h: 29: unsigned char MAD_MOD;
   244                           ;pwm.tp.h: 30: unsigned char MAG_MOD;
   245                           ;pwm.tp.h: 31: unsigned char GWMSTART;
   246                           ;pwm.tp.h: 32: unsigned char MDSTART;
   247                           ;pwm.tp.h: 33: unsigned char MGSTART;
   248                           ;pwm.tp.h: 34: unsigned char GWMMAXCO;
   249                           ;pwm.tp.h: 35: unsigned char MDMAXCO;
   250                           ;pwm.tp.h: 36: unsigned char MGMAXCO;
   251                           ;pwm.tp.h: 37: unsigned char GWMMAXCW;
   252                           ;pwm.tp.h: 38: unsigned char MDMAXCW;
   253                           ;pwm.tp.h: 39: unsigned char MGMAXCW;
   254                           ;pwm.tp.h: 40: unsigned char FIRSTPB;
   255                           ;pwm.tp.h: 41: unsigned char PROP1;
   256                           ;pwm.tp.h: 42: unsigned char PROP2;
   257                           ;pwm.tp.h: 43: unsigned char PROP3;
   258                           ;pwm.tp.h: 45: unsigned char MSTART;
   259                           ;pwm.tp.h: 46: unsigned char MMAXCO;
   260                           ;pwm.tp.h: 47: unsigned char MMAXCW;
   261                           ;pwm.tp.h: 48: unsigned char PGD;
   262                           ;pwm.tp.h: 49: unsigned char MINPWM;
   263                           ;pwm.tp.h: 50: unsigned char MAXPWM;
   264                           ;pwm.tp.h: 53: }DtPWM;
   265                           ;pwm.h: 506: void SetOsc(void);
   266                           ;czcw.tp.h: 7: typedef struct {
   267                           ;czcw.tp.h: 8: unsigned _ltrUP:1;
   268                           ;czcw.tp.h: 9: unsigned _ltrDW:1;
   269                           ;czcw.tp.h: 10: unsigned S_CW:1;
   270                           ;czcw.tp.h: 11: unsigned char przCW;
   271                           ;czcw.tp.h: 12: }DataPrCW;
   272                           ;keypad.tp.h: 7: typedef struct {
   273                           ;keypad.tp.h: 8: unsigned bk:1;
   274                           ;keypad.tp.h: 9: unsigned sbk:1;
   275                           ;keypad.tp.h: 10: unsigned ap:1;
   276                           ;keypad.tp.h: 11: unsigned dk:1;
   277                           ;keypad.tp.h: 12: unsigned fl:1;
   278                           ;keypad.tp.h: 13: }StPin;
   279                           ;keypad.h: 15: extern void StartRTdS(const unsig
      +                          ned char Index);
   280                           ;keypad.h: 16: extern unsigned char RTdS(const u
      +                          nsigned char Index);
   281                           ;pompa.tp.h: 7: typedef struct {
   282                           ;pompa.tp.h: 8: unsigned char MGPROC;
   283                           ;pompa.tp.h: 9: unsigned char MDPROC;
   284                           ;pompa.tp.h: 10: unsigned char APROC;
   285                           ;pompa.tp.h: 12: unsigned char MGPROC2;
   286                           ;pompa.tp.h: 13: }DtPMP;
   287                           ;rgl.tp.h: 4: typedef struct {
   288                           ;rgl.tp.h: 5: unsigned btco:1;
   289                           ;rgl.tp.h: 6: unsigned btcw:1;
   290                           ;rgl.tp.h: 7: unsigned fz:1;
   291                           ;rgl.tp.h: 8: unsigned med_up:1;
   292                           ;rgl.tp.h: 9: unsigned fast_up:1;
   293                           ;rgl.tp.h: 10: unsigned nmod:1;
   294                           ;rgl.tp.h: 11: unsigned del1s:1;
   295                           ;rgl.tp.h: 12: unsigned deln1:1;
   296                           ;rgl.tp.h: 13: unsigned inv_mod:1;
   297                           ;rgl.tp.h: 15: signed char x_t;
   298                           ;rgl.tp.h: 16: signed char x_f;
   299                           ;rgl.tp.h: 17: signed char x_dt;
   300                           ;rgl.tp.h: 18: signed char x_df;
   301                           ;rgl.tp.h: 20: unsigned char ytmp;
   302                           ;rgl.tp.h: 21: unsigned char srp;
   303                           ;rgl.tp.h: 22: unsigned char xmod;
   304                           ;rgl.tp.h: 23: unsigned char tmp_pwm;
   305                           ;rgl.tp.h: 25: }DtRgl;
   306                           ;rgl.h: 36: void StartMCO1F(void);
   307                           ;rgl.h: 37: void ModZgCO(void);
   308                           ;rgl.h: 38: void ModDkCO(void);
   309                           ;rgl.h: 39: void ModPruCO(void);
   310                           ;rgl.h: 40: void IncMaxCO(void);
   311                           ;rgl.h: 41: void ModPrzCO(void);
   312                           ;rgl.h: 42: void PropOPT(void);
   313                           ;rgl.h: 44: void StartCO(void);
   314                           ;rgl.h: 45: void StartMCW(void);
   315                           ;rgl.h: 47: unsigned char FirstPCW(void);
   316                           ;rgl.h: 48: void ClrMod(void);
   317                           ;rgl.h: 49: void ModToCW(void);
   318                           ;rgl.h: 50: void ModToCO(void);
   319                           ;rgl.h: 51: void IncConstCOCW(void);
   320                           ;rgl.h: 52: void ReadDataCO(void);
   321                           ;rgl.h: 53: void ReadDataCW(void);
   322                           ;rgl.h: 54: void ModZgCW(void);
   323                           ;rgl.h: 55: void ModDkCW(void);
   324                           ;rgl.h: 56: void ModPruCW(void);
   325  0010AE                     _main:
   326  000000                     
   327                           ;main.c: 94: InitOsc();
   328  0010AE  ECD6  F078         	call	_InitOsc	;wreg free
   329                           ;main.c: 95: InitGlobal();
   330  0010B2  EC5E  F020         	call	_InitGlobal	;wreg free
   331                           ;main.c: 96: InitTimer1();
   332  0010B6  EC70  F078         	call	_InitTimer1	;wreg free
   333                           ;main.c: 97: InitPort();
   334  0010BA  EC9A  F06E         	call	_InitPort	;wreg free
   335                           ;main.c: 98: InitAC();
   336  0010BE  ECD8  F074         	call	_InitAC	;wreg free
   337                           ;main.c: 99: InitPWM();
   338  0010C2  ECE6  F067         	call	_InitPWM	;wreg free
   339                           ;main.c: 100: InitI2C();
   340  0010C6  ECB9  F05B         	call	_InitI2C	;wreg free
   341                           ;main.c: 101: InitReceptProc();
   342  0010CA  EC0E  F05B         	call	_InitReceptProc	;wreg free
   343                           ;main.c: 102: InitUart();
   344  0010CE  EC9F  F06F         	call	_InitUart	;wreg free
   345                           ;main.c: 103: InitDataPmr();
   346  0010D2  EC1C  F037         	call	_InitDataPmr	;wreg free
   347                           ;main.c: 104: ClearData();
   348  0010D6  D95C               	call	_ClearData	;wreg free
   349                           ;main.c: 105: BitSet2(&RSDT1.outSTAT0,1,0);
   350  0010D8  0100               	movlb	__Lparam shr (0+8)
   351  0010DA  0E36               	movlw	low (_RSDT1+18)
   352  0010DC  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   353  0010DE  0E01               	movlw	high (_RSDT1+18)
   354  0010E0  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   355  0010E2  0E01               	movlw	1
   356  0010E4  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   357  0010E6  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   358  0010E8  ECFA  F076         	call	_BitSet2	;wreg free
   359                           ;main.c: 106: BitSet2(&RSDT1.outSTAT0,0,0);
   360  0010EC  0100               	movlb	__Lparam shr (0+8)
   361  0010EE  0E36               	movlw	low (_RSDT1+18)
   362  0010F0  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   363  0010F2  0E01               	movlw	high (_RSDT1+18)
   364  0010F4  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   365  0010F6  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   366  0010F8  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   367  0010FA  ECFA  F076         	call	_BitSet2	;wreg free
   368                           ;main.c: 107: RefBHist(1);
   369  0010FE  0E01               	movlw	1
   370  001100  EC17  F072         	call	_RefBHist
   371                           ;main.c: 108: RefBStat(1);
   372  001104  0E01               	movlw	1
   373  001106  EC36  F073         	call	_RefBStat
   374                           ;main.c: 111: if (!POR||!BOR)
   375  00110A  A2D0               	btfss	4048,1,c	;volatile
   376  00110C  D002               	goto	u30
   377  00110E  B0D0               	btfsc	4048,0,c	;volatile
   378  001110  D005               	goto	l34
   379  001112                     u30:
   380                           ;main.c: 112: {
   381  001112  0101               	movlb	(_M+4) shr (0+8)
   382  001114  8904               	bsf	(_M+4)& (0+255),4,b
   383                           ;main.c: 114: PwrOnDelay();
   384  001116  ECEB  F077         	call	_PwrOnDelay	;wreg free
   385                           ;main.c: 115: }
   386  00111A  D004               	goto	l35
   387  00111C                     l34:
   388                           ;main.c: 116: else
   389  00111C  0101               	movlb	(_M+4) shr (0+8)
   390  00111E  8704               	bsf	(_M+4)& (0+255),3,b
   391                           ;main.c: 119: PwrOnDelay();
   392  001120  ECEB  F077         	call	_PwrOnDelay	;wreg free
   393  001124                     l35:
   394                           ;main.c: 120: }
   395  001124  EC4F  F04D         	call	_RdEEParam	;wreg free
   396                           ;main.c: 125: if (!POR||!BOR)
   397  001128  A2D0               	btfss	4048,1,c	;volatile
   398  00112A  D002               	goto	u60
   399  00112C  B0D0               	btfsc	4048,0,c	;volatile
   400  00112E  D002               	goto	l36
   401  001130                     u60:
   402                           ;main.c: 126: {
   403  001130  82D0               	bsf	4048,1,c	;volatile
   404                           ;main.c: 128: BOR=1;
   405  001132  80D0               	bsf	4048,0,c	;volatile
   406  001134                     l36:
   407                           ;main.c: 132: }
   408  001134  9483               	bcf	3971,2,c	;volatile
   409                           ;main.c: 136: switch(DtKNF.tpkt)
   410  001136  D010               	goto	l38
   411  001138                     l40:
   412                           ;main.c: 139: case 2:
   413  001138  0E00               	movlw	0
   414  00113A  A483               	btfss	3971,2,c	;volatile
   415  00113C  0E01               	movlw	1
   416  00113E  6E00               	movwf	btemp,c
   417  001140  EE01  F005         	lfsr	0,_M+5
   418  001144  3600               	rlcf	btemp,f,c
   419  001146  3600               	rlcf	btemp,f,c
   420  001148  3600               	rlcf	btemp,f,c
   421  00114A  50EF               	movf	indf0,w,c
   422  00114C  1800               	xorwf	btemp,w,c
   423  00114E  0BF7               	andlw	-9
   424  001150  1800               	xorwf	btemp,w,c
   425  001152  6EEF               	movwf	indf0,c
   426                           ;main.c: 142: break;
   427  001154  D019               	goto	l37
   428  001156                     l42:
   429  001156  D00A               	goto	l43
   430                           ;main.c: 153: break;
   431  001158                     l38:
   432  001158  C237  FFE8         	movff	_DtKNF+7,wreg
   433  00115C  0A00               	xorlw	0
   434  00115E  E0FB               	bz	l42
   435  001160  0A01               	xorlw	1
   436  001162  E0EA               	bz	l40
   437  001164  0A03               	xorlw	3
   438  001166  E0E8               	bz	l40
   439  001168  0A01               	xorlw	1
   440  00116A  E0F5               	bz	l42
   441                           ;main.c: 145: case 3:
   442                           ;main.c: 148: break;
   443  00116C                     l43:
   444                           ;main.c: 149: }
   445                           ;main.c: 151: {
   446  00116C  0E00               	movlw	0
   447  00116E  A283               	btfss	3971,1,c	;volatile
   448  001170  0E01               	movlw	1
   449  001172  6E00               	movwf	btemp,c
   450  001174  EE01  F005         	lfsr	0,_M+5
   451  001178  3600               	rlcf	btemp,f,c
   452  00117A  3600               	rlcf	btemp,f,c
   453  00117C  3600               	rlcf	btemp,f,c
   454  00117E  50EF               	movf	indf0,w,c
   455  001180  1800               	xorwf	btemp,w,c
   456  001182  0BF7               	andlw	-9
   457  001184  1800               	xorwf	btemp,w,c
   458  001186  6EEF               	movwf	indf0,c
   459  001188                     l37:
   460                           ;main.c: 158: if(M.ERR_BTY=eeprom_read(0x00C0))
   461  001188  0EC0               	movlw	192
   462  00118A  0100               	movlb	__Lparam shr (0+8)
   463  00118C  6FF9               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   464  00118E  6BFA               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   465  001190  ECA2  F078         	call	_eeprom_read	;wreg free
   466  001194  EE01  F00E         	lfsr	0,_M+14
   467  001198  6EEF               	movwf	indf0,c
   468  00119A  50EF               	movf	indf0,w,c
   469  00119C  E024               	bz	l44
   470                           ;main.c: 159: {
   471  00119E  EE02  F03A         	lfsr	0,_DtKNF+10
   472  0011A2  50EF               	movf	indf0,w,c
   473  0011A4  E10D               	bnz	l45
   474                           ;main.c: 161: {
   475  0011A6  C10E  FFE8         	movff	_M+14,wreg
   476  0011AA  0A05               	xorlw	5
   477  0011AC  E109               	bnz	l45
   478                           ;main.c: 163: {
   479  0011AE  0E01               	movlw	1
   480  0011B0  0100               	movlb	__Lparam shr (0+8)
   481  0011B2  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
   482  0011B4  C10E  FFE8         	movff	_M+14,wreg
   483  0011B8  EC44  F076         	call	_PrintErr
   484                           ;main.c: 165: ErrPTG();
   485  0011BC  EC9C  F01E         	call	_ErrPTG	;wreg free
   486  0011C0                     l45:
   487                           ;main.c: 166: }
   488  0011C0  0E00               	movlw	0
   489  0011C2  0101               	movlb	(_M+14) shr (0+8)
   490  0011C4  650E               	cpfsgt	(_M+14)& (0+255),b
   491  0011C6  D00D               	goto	l47
   492  0011C8  0E04               	movlw	4
   493  0011CA  610E               	cpfslt	(_M+14)& (0+255),b
   494  0011CC  D00A               	goto	l47
   495                           ;main.c: 169: {
   496  0011CE  0E01               	movlw	1
   497  0011D0  0100               	movlb	__Lparam shr (0+8)
   498  0011D2  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
   499  0011D4  C10E  FFE8         	movff	_M+14,wreg
   500  0011D8  EC44  F076         	call	_PrintErr
   501                           ;main.c: 171: ErrPTG();
   502  0011DC  EC9C  F01E         	call	_ErrPTG	;wreg free
   503                           ;main.c: 172: }
   504  0011E0  D002               	goto	l44
   505  0011E2                     l47:
   506                           ;main.c: 173: else M.ERR_BTY=0;
   507  0011E2  0101               	movlb	(_M+14) shr (0+8)
   508  0011E4  6B0E               	clrf	(_M+14)& (0+255),b
   509  0011E6                     l44:
   510                           ;main.c: 174: }
   511  0011E6  EC95  F03A         	call	_PomiarCO	;wreg free
   512                           ;main.c: 178: PomiarCW();
   513  0011EA  EC8C  F03D         	call	_PomiarCW	;wreg free
   514                           ;main.c: 179: PomiarZW();
   515  0011EE  EC97  F03E         	call	_PomiarZW	;wreg free
   516                           ;main.c: 180: PomiarCS();
   517  0011F2  EC01  F044         	call	_PomiarCS	;wreg free
   518                           ;main.c: 181: PomiarPCO();
   519  0011F6  ECC9  F041         	call	_PomiarPCO	;wreg free
   520                           ;main.c: 182: PomiarPCW();
   521  0011FA  EC81  F042         	call	_PomiarPCW	;wreg free
   522                           ;main.c: 183: PomiarPFN();
   523  0011FE  EC00  F043         	call	_PomiarPFN	;wreg free
   524                           ;main.c: 184: PomiarIN();
   525  001202  EC71  F03D         	call	_PomiarIN	;wreg free
   526                           ;main.c: 185: DtCO._newPCO=0;
   527  001206  0101               	movlb	(_DtCO+1) shr (0+8)
   528  001208  9FB7               	bcf	(_DtCO+1)& (0+255),7,b
   529                           ;main.c: 186: DtCW._newPCW=0;
   530  00120A  0101               	movlb	(_DtCW+1) shr (0+8)
   531  00120C  91A8               	bcf	(_DtCW+1)& (0+255),0,b
   532                           ;main.c: 189: RD3=0;
   533  00120E  9683               	bcf	3971,3,c	;volatile
   534                           ;main.c: 190: RD0=0;
   535  001210  9083               	bcf	3971,0,c	;volatile
   536                           ;main.c: 191: WritePWM(0);
   537  001212  0E00               	movlw	0
   538  001214  EC9C  F06A         	call	_WritePWM
   539                           ;main.c: 194: M._TURBO=!RdPrt(2)||RdPrt(3);
   540  001218  0E02               	movlw	2
   541  00121A  EC4C  F06F         	call	_RdPrt
   542  00121E  E304               	bnc	u151
   543  001220  0E03               	movlw	3
   544  001222  EC4C  F06F         	call	_RdPrt
   545  001226  E302               	bnc	u150
   546  001228                     u151:
   547  001228  0E01               	movlw	1
   548  00122A  D001               	goto	u160
   549  00122C                     u150:
   550  00122C  0E00               	movlw	0
   551  00122E                     u160:
   552  00122E  6E00               	movwf	btemp,c
   553  001230  EE01  F004         	lfsr	0,_M+4
   554  001234  3A00               	swapf	btemp,f,c
   555  001236  3600               	rlcf	btemp,f,c
   556  001238  50EF               	movf	indf0,w,c
   557  00123A  1800               	xorwf	btemp,w,c
   558  00123C  0BDF               	andlw	-33
   559  00123E  1800               	xorwf	btemp,w,c
   560  001240  6EEF               	movwf	indf0,c
   561                           ;main.c: 195: RestartFltPrt();
   562  001242  D8F7               	call	_RestartFltPrt	;wreg free
   563                           ;main.c: 196: StartRTS(10);
   564  001244  0E0A               	movlw	10
   565  001246  EC6F  F073         	call	_StartRTS
   566                           ;main.c: 200: DtCW.PCW=65;
   567  00124A  0E41               	movlw	65
   568  00124C  CFE8 F1AA          	movff	wreg,_DtCW+3
   569                           ;main.c: 201: DtCO.PCO=85;
   570  001250  0E55               	movlw	85
   571  001252  CFE8 F1B9          	movff	wreg,_DtCO+3
   572                           ;main.c: 202: WritePWM2(0);
   573  001256  0E00               	movlw	0
   574  001258  ECA5  F06A         	call	_WritePWM2
   575  00125C                     l50:
   576                           ;main.c: 203: while(1)
   577                           ;main.c: 204: {
   578  00125C  0004               	clrwdt		;#
   579                           ;main.c: 206: BitSet2(&RSDT1.outSTAT0,1,1);
   580  00125E  0100               	movlb	__Lparam shr (0+8)
   581  001260  0E36               	movlw	low (_RSDT1+18)
   582  001262  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   583  001264  0E01               	movlw	high (_RSDT1+18)
   584  001266  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   585  001268  0E01               	movlw	1
   586  00126A  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   587  00126C  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   588  00126E  ECFA  F076         	call	_BitSet2	;wreg free
   589                           ;main.c: 207: BitSet2(&RSDT1.outSTAT0,0,0);
   590  001272  0100               	movlb	__Lparam shr (0+8)
   591  001274  0E36               	movlw	low (_RSDT1+18)
   592  001276  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   593  001278  0E01               	movlw	high (_RSDT1+18)
   594  00127A  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   595  00127C  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   596  00127E  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   597  001280  ECFA  F076         	call	_BitSet2	;wreg free
   598                           ;main.c: 208: M._PRACA=M._ROZRUCH||RD0;
   599  001284  0101               	movlb	(_M+1) shr (0+8)
   600  001286  A701               	btfss	(_M+1)& (0+255),3,b
   601  001288  B083               	btfsc	3971,0,c	;volatile
   602  00128A  D001               	goto	u191
   603  00128C  D002               	goto	u190
   604  00128E                     u191:
   605  00128E  0E01               	movlw	1
   606  001290  D001               	goto	u200
   607  001292                     u190:
   608  001292  0E00               	movlw	0
   609  001294                     u200:
   610  001294  6E00               	movwf	btemp,c
   611  001296  EE01  F004         	lfsr	0,_M+4
   612  00129A  3A00               	swapf	btemp,f,c
   613  00129C  3600               	rlcf	btemp,f,c
   614  00129E  3600               	rlcf	btemp,f,c
   615  0012A0  50EF               	movf	indf0,w,c
   616  0012A2  1800               	xorwf	btemp,w,c
   617  0012A4  0BBF               	andlw	-65
   618  0012A6  1800               	xorwf	btemp,w,c
   619  0012A8  6EEF               	movwf	indf0,c
   620                           ;main.c: 210: ReceptDataLCD();
   621  0012AA  EC92  F05B         	call	_ReceptDataLCD	;wreg free
   622                           ;main.c: 211: MKonfiguracja();
   623  0012AE  ECFA  F044         	call	_MKonfiguracja	;wreg free
   624                           ;main.c: 213: PomiarPCO();
   625  0012B2  ECC9  F041         	call	_PomiarPCO	;wreg free
   626                           ;main.c: 214: PomiarPCW();
   627  0012B6  EC81  F042         	call	_PomiarPCW	;wreg free
   628                           ;main.c: 215: PomiarPFN();
   629  0012BA  EC00  F043         	call	_PomiarPFN	;wreg free
   630                           ;main.c: 216: PomiarCO();
   631  0012BE  EC95  F03A         	call	_PomiarCO	;wreg free
   632                           ;main.c: 217: PomiarCW();
   633  0012C2  EC8C  F03D         	call	_PomiarCW	;wreg free
   634                           ;main.c: 218: PomiarZW();
   635  0012C6  EC97  F03E         	call	_PomiarZW	;wreg free
   636                           ;main.c: 219: FiltrPomiarowyCOCW();
   637  0012CA  EC22  F03A         	call	_FiltrPomiarowyCOCW	;wreg free
   638                           ;main.c: 220: PomiarCS();
   639  0012CE  EC01  F044         	call	_PomiarCS	;wreg free
   640                           ;main.c: 221: PomiarIN();
   641  0012D2  EC71  F03D         	call	_PomiarIN	;wreg free
   642                           ;main.c: 223: DecERR();
   643  0012D6  ECB1  F00F         	call	_DecERR	;wreg free
   644                           ;main.c: 224: DecSTR();
   645  0012DA  EC9A  F011         	call	_DecSTR	;wreg free
   646                           ;main.c: 225: DecRozruch();
   647  0012DE  EC21  F014         	call	_DecRozruch	;wreg free
   648                           ;main.c: 226: DecWylacz();
   649  0012E2  EC38  F015         	call	_DecWylacz	;wreg free
   650                           ;main.c: 227: FunkcjaSerwisowa();
   651  0012E6  ECF5  F016         	call	_FunkcjaSerwisowa	;wreg free
   652                           ;main.c: 228: DecyzjaAntyLeg();
   653  0012EA  EC0C  F00F         	call	_DecyzjaAntyLeg	;wreg free
   654                           ;main.c: 229: KolejkaPobudzen();
   655  0012EE  EC5F  F00E         	call	_KolejkaPobudzen	;wreg free
   656                           ;main.c: 230: RefLCDData();
   657  0012F2  D8E2               	call	_RefLCDData	;wreg free
   658                           ;main.c: 231: RefBHist(0);
   659  0012F4  0E00               	movlw	0
   660  0012F6  EC17  F072         	call	_RefBHist
   661                           ;main.c: 233: RglPmp();
   662  0012FA  EC92  F067         	call	_RglPmp	;wreg free
   663                           ;main.c: 234: if(M._ZMKCOCW) ZmienKCOKCW();
   664  0012FE  0101               	movlb	(_M+1) shr (0+8)
   665  001300  B501               	btfsc	(_M+1)& (0+255),2,b
   666  001302  ECBA  F01B         	call	_ZmienKCOKCW	;wreg free
   667                           ;main.c: 235: if(M._LOW_PMP) SetLowPMP();
   668  001306  0101               	movlb	(_M+8) shr (0+8)
   669  001308  B308               	btfsc	(_M+8)& (0+255),1,b
   670  00130A  EC40  F01C         	call	_SetLowPMP	;wreg free
   671                           ;main.c: 236: if(M._WYLACZ) Wylacz();
   672  00130E  0101               	movlb	(_M+1) shr (0+8)
   673  001310  B301               	btfsc	(_M+1)& (0+255),1,b
   674  001312  EC95  F019         	call	_Wylacz	;wreg free
   675                           ;main.c: 237: if(M._ROZRUCH) Rozruch();
   676  001316  0101               	movlb	(_M+1) shr (0+8)
   677  001318  B701               	btfsc	(_M+1)& (0+255),3,b
   678  00131A  ECA4  F017         	call	_Rozruch	;wreg free
   679                           ;main.c: 238: if(M._VWYBIEG) VWybieg();
   680  00131E  0101               	movlb	(_M+1) shr (0+8)
   681  001320  BF01               	btfsc	(_M+1)& (0+255),7,b
   682  001322  EC03  F01B         	call	_VWybieg	;wreg free
   683                           ;main.c: 239: ReloadPlomien();
   684  001326  EC82  F01C         	call	_ReloadPlomien	;wreg free
   685                           ;main.c: 240: if(M._RUSZ_PLOMIEN) RuszPlomien();
   686  00132A  0101               	movlb	(_M+2) shr (0+8)
   687  00132C  B302               	btfsc	(_M+2)& (0+255),1,b
   688  00132E  EC51  F01C         	call	_RuszPlomien	;wreg free
   689                           ;main.c: 241: ReloadCiag();
   690  001332  EC68  F01D         	call	_ReloadCiag	;wreg free
   691                           ;main.c: 242: if(M._RUSZ_CIAG) RuszCiag();
   692  001336  0101               	movlb	(_M+2) shr (0+8)
   693  001338  B102               	btfsc	(_M+2)& (0+255),0,b
   694  00133A  EC96  F01C         	call	_RuszCiag	;wreg free
   695                           ;main.c: 243: Proba48();
   696  00133E  EC8F  F01D         	call	_Proba48	;wreg free
   697                           ;main.c: 244: if(M._RUSZ_48) Rusz48();
   698  001342  0101               	movlb	(_M+1) shr (0+8)
   699  001344  B901               	btfsc	(_M+1)& (0+255),4,b
   700  001346  ECA4  F01D         	call	_Rusz48	;wreg free
   701                           ;main.c: 245: Proba48Z3();
   702  00134A  EC18  F01E         	call	_Proba48Z3	;wreg free
   703                           ;main.c: 246: if(M._RUSZ_48Z3) Rusz48Z3();
   704  00134E  0101               	movlb	(_M+1) shr (0+8)
   705  001350  BB01               	btfsc	(_M+1)& (0+255),5,b
   706  001352  EC39  F01E         	call	_Rusz48Z3	;wreg free
   707                           ;main.c: 247: if(M._BLOKUJ_3M) BlokadaL3();
   708  001356  0101               	movlb	(_M+2) shr (0+8)
   709  001358  B902               	btfsc	(_M+2)& (0+255),4,b
   710  00135A  EC2C  F017         	call	_BlokadaL3	;wreg free
   711                           ;main.c: 248: if(M._BLOKUJ_15S)
   712  00135E  0101               	movlb	(_M+2) shr (0+8)
   713  001360  BB02               	btfsc	(_M+2)& (0+255),5,b
   714                           ;main.c: 249: {
   715  001362  BD04               	btfsc	(_M+4)& (0+255),6,b
   716  001364  D002               	goto	l62
   717  001366  EC60  F017         	call	_Blokada15S	;wreg free
   718  00136A                     l62:
   719                           ;main.c: 251: }
   720  00136A  0101               	movlb	(_M+2) shr (0+8)
   721  00136C  BD02               	btfsc	(_M+2)& (0+255),6,b
   722  00136E  EC62  F020         	call	_Moduluj	;wreg free
   723                           ;main.c: 253: if(DtKNF.robg==0)
   724  001372  EE02  F03A         	lfsr	0,_DtKNF+10
   725  001376  50EF               	movf	indf0,w,c
   726  001378  E107               	bnz	l65
   727                           ;main.c: 254: {
   728  00137A  EC39  F01B         	call	_DetekcjaPrzeplywuWG	;wreg free
   729                           ;main.c: 256: if(M._RUSZ_POMPE) OczekujNaPrzeply
      +                          wWG();
   730  00137E  0101               	movlb	(_M+2) shr (0+8)
   731  001380  B702               	btfsc	(_M+2)& (0+255),3,b
   732  001382  EC7D  F01B         	call	_OczekujNaPrzeplywWG	;wreg free
   733                           ;main.c: 257: }
   734  001386  D76A               	goto	l50
   735  001388                     l65:
   736                           ;main.c: 258: else
   737  001388  0101               	movlb	(_M+2) shr (0+8)
   738  00138A  9702               	bcf	(_M+2)& (0+255),3,b
   739                           ;main.c: 261: M._prb_PRZ=0;
   740  00138C  9B05               	bcf	(_M+5)& (0+255),5,b
   741  00138E  D766               	goto	l50
   742  001390                     __end_of_main:
   743                           ;main.c: 269: void ClearData(void)
   744                           ;main.c: 270: {
   745  001390                     _ClearData:
   746  000000                     
   747                           ;main.c: 271: DtKNF.enknf=0;
   748  001390  0102               	movlb	_DtKNF shr (0+8)
   749  001392  9130               	bcf	_DtKNF& (0+255),0,b
   750                           ;main.c: 272: M._pob_KCO=0;
   751  001394  0101               	movlb	_M shr (0+8)
   752  001396  9100               	bcf	_M& (0+255),0,b
   753                           ;main.c: 273: M._pob_KCW=0;
   754  001398  9300               	bcf	_M& (0+255),1,b
   755                           ;main.c: 274: M._pob_AL=0;
   756  00139A  9700               	bcf	_M& (0+255),3,b
   757                           ;main.c: 275: M._pob_SRW=0;
   758  00139C  9500               	bcf	_M& (0+255),2,b
   759                           ;main.c: 276: M._pob_CO=0;
   760  00139E  9B00               	bcf	_M& (0+255),5,b
   761                           ;main.c: 277: M._pob_CW=0;
   762  0013A0  9900               	bcf	_M& (0+255),4,b
   763                           ;main.c: 278: M._pob_DzCO=0;
   764  0013A2  9D00               	bcf	_M& (0+255),6,b
   765                           ;main.c: 279: M._pob_DzCW=0;
   766  0013A4  9F00               	bcf	_M& (0+255),7,b
   767                           ;main.c: 280: M._pob_PGDRT=0;
   768  0013A6  9101               	bcf	(_M+1)& (0+255),0,b
   769                           ;main.c: 282: M._WYLACZ=0;
   770  0013A8  9301               	bcf	(_M+1)& (0+255),1,b
   771                           ;main.c: 283: M._ZMKCOCW=0;
   772  0013AA  9501               	bcf	(_M+1)& (0+255),2,b
   773                           ;main.c: 284: M._ROZRUCH=0;
   774  0013AC  9701               	bcf	(_M+1)& (0+255),3,b
   775                           ;main.c: 285: M._RUSZ_48=0;
   776  0013AE  9901               	bcf	(_M+1)& (0+255),4,b
   777                           ;main.c: 286: M._RUSZ_48Z3=0;
   778  0013B0  9B01               	bcf	(_M+1)& (0+255),5,b
   779                           ;main.c: 287: M._RUSZ_PWR=0;
   780  0013B2  9D01               	bcf	(_M+1)& (0+255),6,b
   781                           ;main.c: 288: M._VWYBIEG=0;
   782  0013B4  9F01               	bcf	(_M+1)& (0+255),7,b
   783                           ;main.c: 289: M._MODULUJ=0;
   784  0013B6  9D02               	bcf	(_M+2)& (0+255),6,b
   785                           ;main.c: 290: M._RUSZ_CIAG=0;
   786  0013B8  9102               	bcf	(_M+2)& (0+255),0,b
   787                           ;main.c: 291: M._RUSZ_PLOMIEN=0;
   788  0013BA  9302               	bcf	(_M+2)& (0+255),1,b
   789                           ;main.c: 292: M._RUSZ_RPLM=0;
   790  0013BC  9502               	bcf	(_M+2)& (0+255),2,b
   791                           ;main.c: 293: M._RUSZ_POMPE=0;
   792  0013BE  9702               	bcf	(_M+2)& (0+255),3,b
   793                           ;main.c: 294: M._BLOKUJ_3M=0;
   794  0013C0  9902               	bcf	(_M+2)& (0+255),4,b
   795                           ;main.c: 295: M._BLOKUJ_15S=0;
   796  0013C2  9B02               	bcf	(_M+2)& (0+255),5,b
   797                           ;main.c: 296: M._MODULUJ=0;
   798  0013C4  9D02               	bcf	(_M+2)& (0+255),6,b
   799                           ;main.c: 298: M._AKTYWNE_AL=0;
   800  0013C6  9103               	bcf	(_M+3)& (0+255),0,b
   801                           ;main.c: 299: M._AKTYWNE_SRW=0;
   802  0013C8  9F02               	bcf	(_M+2)& (0+255),7,b
   803                           ;main.c: 300: M._AKTYWNE_PGD=0;
   804  0013CA  9303               	bcf	(_M+3)& (0+255),1,b
   805                           ;main.c: 301: M._AKTYWNE_PGD2=0;
   806  0013CC  9703               	bcf	(_M+3)& (0+255),3,b
   807                           ;main.c: 302: M._AKTYWNE_KNF=0;
   808  0013CE  9503               	bcf	(_M+3)& (0+255),2,b
   809                           ;main.c: 303: M._RUSZ_NTC_CO=0;
   810  0013D0  9903               	bcf	(_M+3)& (0+255),4,b
   811                           ;main.c: 304: M._RUSZ_NTC_CW=0;
   812  0013D2  9B03               	bcf	(_M+3)& (0+255),5,b
   813                           ;main.c: 305: M._RUSZ_STB=0;
   814  0013D4  9F03               	bcf	(_M+3)& (0+255),7,b
   815                           ;main.c: 306: M._RUSZ_MOD=0;
   816  0013D6  9104               	bcf	(_M+4)& (0+255),0,b
   817                           ;main.c: 307: M._RUSZ_CISN=0;
   818  0013D8  9304               	bcf	(_M+4)& (0+255),1,b
   819                           ;main.c: 308: M._RUSZ_NCISN=0;
   820  0013DA  9504               	bcf	(_M+4)& (0+255),2,b
   821                           ;main.c: 310: M._PW_START=0;
   822  0013DC  9904               	bcf	(_M+4)& (0+255),4,b
   823                           ;main.c: 311: M._RS_START=0;
   824  0013DE  9704               	bcf	(_M+4)& (0+255),3,b
   825                           ;main.c: 312: M._TURBO=0;
   826  0013E0  9B04               	bcf	(_M+4)& (0+255),5,b
   827                           ;main.c: 313: M._PRACA=0;
   828  0013E2  9D04               	bcf	(_M+4)& (0+255),6,b
   829                           ;main.c: 314: M._OST_PL=0;
   830  0013E4  9F04               	bcf	(_M+4)& (0+255),7,b
   831                           ;main.c: 315: M._RUN_MNMOD=0;
   832  0013E6  9105               	bcf	(_M+5)& (0+255),0,b
   833                           ;main.c: 316: M._KCW_PMP=0;
   834  0013E8  9305               	bcf	(_M+5)& (0+255),1,b
   835                           ;main.c: 317: M._DE_VNT=0;
   836  0013EA  9505               	bcf	(_M+5)& (0+255),2,b
   837                           ;main.c: 318: M._DE_PMP=0;
   838  0013EC  9D05               	bcf	(_M+5)& (0+255),6,b
   839                           ;main.c: 319: M._RPM_CW=0;
   840  0013EE  9705               	bcf	(_M+5)& (0+255),3,b
   841                           ;main.c: 320: M._RUSZ_NTC_IN=0;
   842  0013F0  9D03               	bcf	(_M+3)& (0+255),6,b
   843                           ;main.c: 322: M._SYNCH_PGD=0;
   844  0013F2  9108               	bcf	(_M+8)& (0+255),0,b
   845                           ;main.c: 324: M._LCD=0;
   846  0013F4  9106               	bcf	(_M+6)& (0+255),0,b
   847                           ;main.c: 325: M._LIN=0;
   848  0013F6  9F05               	bcf	(_M+5)& (0+255),7,b
   849                           ;main.c: 326: M._LIN_RT=0;
   850  0013F8  9306               	bcf	(_M+6)& (0+255),1,b
   851                           ;main.c: 327: M._LIN_CW=0;
   852  0013FA  9506               	bcf	(_M+6)& (0+255),2,b
   853                           ;main.c: 328: M._LOW_PMP=0;
   854  0013FC  9308               	bcf	(_M+8)& (0+255),1,b
   855                           ;main.c: 330: M.ERR_BTY=0;
   856  0013FE  6B0E               	clrf	(_M+14)& (0+255),b
   857                           ;main.c: 331: M.ROZ=0;
   858  001400  6B0F               	clrf	(_M+15)& (0+255),b
   859                           ;main.c: 332: M.R48=0;
   860  001402  6B10               	clrf	(_M+16)& (0+255),b
   861                           ;main.c: 333: M.R48Z3=0;
   862  001404  6B11               	clrf	(_M+17)& (0+255),b
   863                           ;main.c: 334: M.BL3=0;
   864  001406  6B12               	clrf	(_M+18)& (0+255),b
   865                           ;main.c: 335: M.BL15=0;
   866  001408  6B13               	clrf	(_M+19)& (0+255),b
   867                           ;main.c: 336: M.WYL=0;
   868  00140A  6B14               	clrf	(_M+20)& (0+255),b
   869                           ;main.c: 337: M.RPR=0;
   870  00140C  6B15               	clrf	(_M+21)& (0+255),b
   871                           ;main.c: 338: M.RPL=0;
   872  00140E  6B16               	clrf	(_M+22)& (0+255),b
   873                           ;main.c: 339: M.RCI=0;
   874  001410  6B17               	clrf	(_M+23)& (0+255),b
   875                           ;main.c: 340: M.MNM=0;
   876  001412  6B18               	clrf	(_M+24)& (0+255),b
   877                           ;main.c: 341: M.ZKP=0;
   878  001414  6B19               	clrf	(_M+25)& (0+255),b
   879                           ;main.c: 342: M.VWB=0;
   880  001416  6B1A               	clrf	(_M+26)& (0+255),b
   881                           ;main.c: 343: M.SRV=0;
   882  001418  6B1B               	clrf	(_M+27)& (0+255),b
   883                           ;main.c: 344: M.KRS=0;
   884  00141A  6B1C               	clrf	(_M+28)& (0+255),b
   885                           ;main.c: 345: M.HVZ=0;
   886  00141C  6B1D               	clrf	(_M+29)& (0+255),b
   887                           ;main.c: 346: M.LICZNIK_PL=0;
   888  00141E  6B09               	clrf	(_M+9)& (0+255),b
   889                           ;main.c: 347: M.LICZNIK_CIG=0;
   890  001420  6B0A               	clrf	(_M+10)& (0+255),b
   891                           ;main.c: 348: M.LICZNIK_CIG2=0;
   892  001422  6B0B               	clrf	(_M+11)& (0+255),b
   893                           ;main.c: 349: M.LICZNIK_CIG3=0;
   894  001424  6B0C               	clrf	(_M+12)& (0+255),b
   895                           ;main.c: 350: M.DPR=0;
   896  001426  6B1E               	clrf	(_M+30)& (0+255),b
   897                           ;main.c: 351: M.STRB=0;
   898  001428  6B23               	clrf	(_M+35)& (0+255),b
   899                           ;main.c: 353: RD3=0;
   900  00142A  9683               	bcf	3971,3,c	;volatile
   901                           ;main.c: 354: RD0=0;
   902  00142C  9083               	bcf	3971,0,c	;volatile
   903                           ;main.c: 355: RD2=0;
   904  00142E  9483               	bcf	3971,2,c	;volatile
   905                           ;main.c: 356: }
   906  001430  0012               	return	
   907  001432                     __end_of_ClearData:
   908                           ;main.c: 358: void RestartFltPrt(void)
   909                           ;main.c: 359: {
   910  001432                     _RestartFltPrt:
   911  000000                     
   912                           ;main.c: 360: SetPrt(13,0);
   913  001432  0100               	movlb	__Lparam shr (0+8)
   914  001434  6BEF               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   915  001436  0E0D               	movlw	13
   916  001438  EC5D  F06F         	call	_SetPrt
   917                           ;main.c: 361: SetPrt(17,0);
   918  00143C  0100               	movlb	__Lparam shr (0+8)
   919  00143E  6BEF               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   920  001440  0E11               	movlw	17
   921  001442  EC5D  F06F         	call	_SetPrt
   922                           ;main.c: 362: SetPrt(9,0);
   923  001446  0100               	movlb	__Lparam shr (0+8)
   924  001448  6BEF               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   925  00144A  0E09               	movlw	9
   926  00144C  EC5D  F06F         	call	_SetPrt
   927                           ;main.c: 363: SetPrt(10,0);
   928  001450  0100               	movlb	__Lparam shr (0+8)
   929  001452  6BEF               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   930  001454  0E0A               	movlw	10
   931  001456  EC5D  F06F         	call	_SetPrt
   932                           ;main.c: 364: SetPrt(12,0);
   933  00145A  0100               	movlb	__Lparam shr (0+8)
   934  00145C  6BEF               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   935  00145E  0E0C               	movlw	12
   936  001460  EC5D  F06F         	call	_SetPrt
   937                           ;main.c: 365: SetPrt(11,0);
   938  001464  0100               	movlb	__Lparam shr (0+8)
   939  001466  6BEF               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   940  001468  0E0B               	movlw	11
   941  00146A  EC5D  F06F         	call	_SetPrt
   942                           ;main.c: 366: SetPrt(7,0);
   943  00146E  0100               	movlb	__Lparam shr (0+8)
   944  001470  6BEF               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   945  001472  0E07               	movlw	7
   946  001474  EF5D  F06F         	goto	_SetPrt
   947                           ;main.c: 367: }
   948  001478                     __end_of_RestartFltPrt:
   949                           ;main.c: 370: unsigned char KodSterownika(void)
   950                           ;main.c: 371: {
   951  001478                     _KodSterownika:
   952  000000                     
   953                           ;main.c: 373: switch(DtKNF.tpkt)
   954  001478  D014               	goto	l72
   955  00147A                     l73:
   956                           ;main.c: 374: {
   957                           ;main.c: 376: if(!M._TURBO) return 0x10;
   958  00147A  0101               	movlb	(_M+4) shr (0+8)
   959  00147C  AB04               	btfss	(_M+4)& (0+255),5,b
   960  00147E  0C10               	retlw	16
   961                           ;main.c: 377: else return 0x11;
   962  001480  0C11               	retlw	17
   963  001482                     l76:
   964                           ;main.c: 378: case 1:
   965                           ;main.c: 379: if(!M._TURBO) return 0x12;
   966  001482  0101               	movlb	(_M+4) shr (0+8)
   967  001484  AB04               	btfss	(_M+4)& (0+255),5,b
   968  001486  0C12               	retlw	18
   969                           ;main.c: 380: else return 0x13;
   970  001488  0C13               	retlw	19
   971  00148A                     l79:
   972                           ;main.c: 381: case 2:
   973                           ;main.c: 382: if(!M._TURBO) return 0x14;
   974  00148A  0101               	movlb	(_M+4) shr (0+8)
   975  00148C  AB04               	btfss	(_M+4)& (0+255),5,b
   976  00148E  0C14               	retlw	20
   977                           ;main.c: 383: else return 0x15;
   978  001490  0C15               	retlw	21
   979  001492                     l82:
   980                           ;main.c: 384: case 3:
   981                           ;main.c: 385: if(!M._TURBO) return 0x16;
   982  001492  0101               	movlb	(_M+4) shr (0+8)
   983  001494  AB04               	btfss	(_M+4)& (0+255),5,b
   984  001496  0C16               	retlw	22
   985                           ;main.c: 386: else return 0x17;
   986  001498  0C17               	retlw	23
   987  00149A                     l85:
   988                           ;main.c: 387: default:
   989                           ;main.c: 388: if(!M._TURBO) return 0x18;
   990  00149A  0101               	movlb	(_M+4) shr (0+8)
   991  00149C  AB04               	btfss	(_M+4)& (0+255),5,b
   992  00149E  0C18               	retlw	24
   993                           ;main.c: 389: else return 0x19;
   994  0014A0  0C19               	retlw	25
   995  0014A2                     l72:
   996  0014A2  C237  FFE8         	movff	_DtKNF+7,wreg
   997  0014A6  0A00               	xorlw	0
   998  0014A8  E0E8               	bz	l73
   999  0014AA  0A01               	xorlw	1
  1000  0014AC  E0EA               	bz	l76
  1001  0014AE  0A03               	xorlw	3
  1002  0014B0  E0EC               	bz	l79
  1003  0014B2  0A01               	xorlw	1
  1004  0014B4  E0EE               	bz	l82
  1005  0014B6  D7F1               	goto	l85
  1006                           ;main.c: 391: }
  1007  0014B8                     __end_of_KodSterownika:
  1008                           ;main.c: 395: void RefLCDData(void)
  1009                           ;main.c: 396: {
  1010  0014B8                     _RefLCDData:
  1011  000000                     
  1012                           ;	_wr assigned to ?a_RefLCDData+0
  1013  000000                     _RefLCDData$wr	set	?a_RefLCDData
  1014                           ;main.c: 397: volatile unsigned char wr;
  1015  0014B8  EE01  F06B         	lfsr	0,_RSDT1+71
  1016  0014BC  50EF               	movf	indf0,w,c
  1017  0014BE  E108               	bnz	l89
  1018                           ;main.c: 399: {
  1019  0014C0  DFDB               	call	_KodSterownika	;wreg free
  1020  0014C2  CFE8 F126          	movff	wreg,_RSDT1+2
  1021                           ;main.c: 401: RSDT1.outRDZ1=DtKNF.tpkt;
  1022  0014C6  C237  F127         	movff	_DtKNF+7,_RSDT1+3
  1023                           ;main.c: 402: RSDT1.outRDZ2=0;
  1024  0014CA  0101               	movlb	(_RSDT1+4) shr (0+8)
  1025  0014CC  6B28               	clrf	(_RSDT1+4)& (0+255),b
  1026                           ;main.c: 403: }
  1027  0014CE  D021               	goto	l90
  1028  0014D0                     l89:
  1029                           ;main.c: 404: else
  1030  0014D0  C24B  F001         	movff	_DtKNF+27,btemp+1
  1031  0014D4  0E07               	movlw	7
  1032  0014D6  1601               	andwf	btemp+1,f,c
  1033  0014D8  0E05               	movlw	5
  1034  0014DA  6E00               	movwf	btemp,c
  1035  0014DC                     u425:
  1036  0014DC  90D8               	bcf	status,0,c
  1037  0014DE  3601               	rlcf	btemp+1,f,c
  1038  0014E0  2E00               	decfsz	btemp,f,c
  1039  0014E2  D7FC               	goto	u425
  1040  0014E4  DFC9               	call	_KodSterownika	;wreg free
  1041  0014E6  6E00               	movwf	btemp,c
  1042  0014E8  0E1F               	movlw	31
  1043  0014EA  1600               	andwf	btemp,f,c
  1044  0014EC  5001               	movf	btemp+1,w,c
  1045  0014EE  1000               	iorwf	btemp,w,c
  1046  0014F0  CFE8 F126          	movff	wreg,_RSDT1+2
  1047                           ;main.c: 407: if(16<=0x0F)
  1048                           ;main.c: 413: else
  1049  0014F4  C237  FFE8         	movff	_DtKNF+7,wreg
  1050  0014F8  0B0F               	andlw	15
  1051  0014FA  09F0               	iorlw	-16
  1052  0014FC  CFE8 F127          	movff	wreg,_RSDT1+3
  1053                           ;main.c: 416: wr=RSDT1.outRDZ2&0b11100000;
  1054  001500  C128  FFE8         	movff	_RSDT1+4,wreg
  1055  001504  0BE0               	andlw	-32
  1056  001506  0100               	movlb	__Lparam shr (0+8)
  1057  001508  6FEB               	movwf	?a_RefLCDData^(__Lparam& (0+65280)),b	;vo
      +                          latile
  1058                           ;main.c: 417: RSDT1.outRDZ2=wr|((16-0x0F)&0b0001
      +                          1111);
  1059  00150A  51EB               	movf	?a_RefLCDData^(__Lparam& (0+65280)),w	;vol
      +                          atile
  1060  00150C  0901               	iorlw	1
  1061  00150E  CFE8 F128          	movff	wreg,_RSDT1+4
  1062  001512                     l90:
  1063                           ;main.c: 418: }
  1064  001512  0100               	movlb	__Lparam shr (0+8)
  1065  001514  0E36               	movlw	low (_RSDT1+18)
  1066  001516  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1067  001518  0E01               	movlw	high (_RSDT1+18)
  1068  00151A  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1069  00151C  0E02               	movlw	2
  1070  00151E  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1071  001520  0101               	movlb	(_M+4) shr (0+8)
  1072  001522  BD04               	btfsc	(_M+4)& (0+255),6,b
  1073  001524  B705               	btfsc	(_M+5)& (0+255),3,b
  1074  001526  D006               	goto	u470
  1075  001528  0E05               	movlw	5
  1076  00152A  EC4C  F06F         	call	_RdPrt
  1077  00152E  E302               	bnc	u470
  1078  001530  0E01               	movlw	1
  1079  001532  D001               	goto	u480
  1080  001534                     u470:
  1081  001534  0E00               	movlw	0
  1082  001536                     u480:
  1083  001536  0100               	movlb	__Lparam shr (0+8)
  1084  001538  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1085  00153A  ECFA  F076         	call	_BitSet2	;wreg free
  1086                           ;main.c: 421: BitSet2(&RSDT1.outSTAT0,3,M._PRACA
      +                          &&M._RPM_CW&&RdPrt(5));
  1087  00153E  0100               	movlb	__Lparam shr (0+8)
  1088  001540  0E36               	movlw	low (_RSDT1+18)
  1089  001542  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1090  001544  0E01               	movlw	high (_RSDT1+18)
  1091  001546  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1092  001548  0E03               	movlw	3
  1093  00154A  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1094  00154C  0101               	movlb	(_M+4) shr (0+8)
  1095  00154E  BD04               	btfsc	(_M+4)& (0+255),6,b
  1096  001550  A705               	btfss	(_M+5)& (0+255),3,b
  1097  001552  D006               	goto	u530
  1098  001554  0E05               	movlw	5
  1099  001556  EC4C  F06F         	call	_RdPrt
  1100  00155A  E302               	bnc	u530
  1101  00155C  0E01               	movlw	1
  1102  00155E  D001               	goto	u540
  1103  001560                     u530:
  1104  001560  0E00               	movlw	0
  1105  001562                     u540:
  1106  001562  0100               	movlb	__Lparam shr (0+8)
  1107  001564  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1108  001566  ECFA  F076         	call	_BitSet2	;wreg free
  1109                           ;main.c: 422: BitSet2(&RSDT1.outSTAT0,4,M._AKTYW
      +                          NE_SRW);
  1110  00156A  0100               	movlb	__Lparam shr (0+8)
  1111  00156C  0E36               	movlw	low (_RSDT1+18)
  1112  00156E  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1113  001570  0E01               	movlw	high (_RSDT1+18)
  1114  001572  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1115  001574  0E04               	movlw	4
  1116  001576  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1117  001578  EE01  F002         	lfsr	0,_M+2
  1118  00157C  34EF               	rlcf	indf0,w,c
  1119  00157E  34EF               	rlcf	indf0,w,c
  1120  001580  0B01               	andlw	1
  1121  001582  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1122  001584  ECFA  F076         	call	_BitSet2	;wreg free
  1123                           ;main.c: 423: BitSet2(&RSDT1.outSTAT0,5,M._AKTYW
      +                          NE_AL);
  1124  001588  0100               	movlb	__Lparam shr (0+8)
  1125  00158A  0E36               	movlw	low (_RSDT1+18)
  1126  00158C  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1127  00158E  0E01               	movlw	high (_RSDT1+18)
  1128  001590  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1129  001592  0E05               	movlw	5
  1130  001594  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1131  001596  EE01  F003         	lfsr	0,_M+3
  1132  00159A  50EF               	movf	indf0,w,c
  1133  00159C  0B01               	andlw	1
  1134  00159E  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1135  0015A0  ECFA  F076         	call	_BitSet2	;wreg free
  1136                           ;main.c: 424: BitSet2(&RSDT1.outSTAT0,6,M._AKTYW
      +                          NE_KNF);
  1137  0015A4  0100               	movlb	__Lparam shr (0+8)
  1138  0015A6  0E36               	movlw	low (_RSDT1+18)
  1139  0015A8  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1140  0015AA  0E01               	movlw	high (_RSDT1+18)
  1141  0015AC  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1142  0015AE  0E06               	movlw	6
  1143  0015B0  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1144  0015B2  EE01  F003         	lfsr	0,_M+3
  1145  0015B6  30EF               	rrcf	indf0,w,c
  1146  0015B8  6E00               	movwf	btemp,c
  1147  0015BA  3000               	rrcf	btemp,w,c
  1148  0015BC  0B01               	andlw	1
  1149  0015BE  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1150  0015C0  ECFA  F076         	call	_BitSet2	;wreg free
  1151                           ;main.c: 425: BitSet2(&RSDT1.outSTAT0,7,DtKNF.en
      +                          knf);
  1152  0015C4  0100               	movlb	__Lparam shr (0+8)
  1153  0015C6  0E36               	movlw	low (_RSDT1+18)
  1154  0015C8  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1155  0015CA  0E01               	movlw	high (_RSDT1+18)
  1156  0015CC  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1157  0015CE  0E07               	movlw	7
  1158  0015D0  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1159  0015D2  EE02  F030         	lfsr	0,_DtKNF
  1160  0015D6  50EF               	movf	indf0,w,c
  1161  0015D8  0B01               	andlw	1
  1162  0015DA  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1163  0015DC  ECFA  F076         	call	_BitSet2	;wreg free
  1164                           ;main.c: 427: BitSet2(&RSDT1.outSTAT1,0,M._pob_D
      +                          zCW);
  1165  0015E0  0100               	movlb	__Lparam shr (0+8)
  1166  0015E2  0E37               	movlw	low (_RSDT1+19)
  1167  0015E4  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1168  0015E6  0E01               	movlw	high (_RSDT1+19)
  1169  0015E8  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1170  0015EA  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1171  0015EC  EE01  F000         	lfsr	0,_M
  1172  0015F0  34EF               	rlcf	indf0,w,c
  1173  0015F2  34EF               	rlcf	indf0,w,c
  1174  0015F4  0B01               	andlw	1
  1175  0015F6  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1176  0015F8  ECFA  F076         	call	_BitSet2	;wreg free
  1177                           ;main.c: 428: BitSet2(&RSDT1.outSTAT1,1,M._pob_D
      +                          zCO);
  1178  0015FC  0100               	movlb	__Lparam shr (0+8)
  1179  0015FE  0E37               	movlw	low (_RSDT1+19)
  1180  001600  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1181  001602  0E01               	movlw	high (_RSDT1+19)
  1182  001604  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1183  001606  0E01               	movlw	1
  1184  001608  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1185  00160A  EE01  F000         	lfsr	0,_M
  1186  00160E  38EF               	swapf	indf0,w,c
  1187  001610  6E00               	movwf	btemp,c
  1188  001612  3200               	rrcf	btemp,f,c
  1189  001614  3000               	rrcf	btemp,w,c
  1190  001616  0B01               	andlw	1
  1191  001618  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1192  00161A  ECFA  F076         	call	_BitSet2	;wreg free
  1193                           ;main.c: 429: BitSet2(&RSDT1.outSTAT1,5,M._AKTYW
      +                          NE_PGD);
  1194  00161E  0100               	movlb	__Lparam shr (0+8)
  1195  001620  0E37               	movlw	low (_RSDT1+19)
  1196  001622  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1197  001624  0E01               	movlw	high (_RSDT1+19)
  1198  001626  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1199  001628  0E05               	movlw	5
  1200  00162A  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1201  00162C  EE01  F003         	lfsr	0,_M+3
  1202  001630  30EF               	rrcf	indf0,w,c
  1203  001632  0B01               	andlw	1
  1204  001634  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1205  001636  ECFA  F076         	call	_BitSet2	;wreg free
  1206                           ;main.c: 430: BitSet2(&RSDT1.outSTAT1,6,M._PRACA
      +                          &&!M._RPM_CW);
  1207  00163A  0100               	movlb	__Lparam shr (0+8)
  1208  00163C  0E37               	movlw	low (_RSDT1+19)
  1209  00163E  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1210  001640  0E01               	movlw	high (_RSDT1+19)
  1211  001642  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1212  001644  0E06               	movlw	6
  1213  001646  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1214  001648  0101               	movlb	(_M+4) shr (0+8)
  1215  00164A  BD04               	btfsc	(_M+4)& (0+255),6,b
  1216  00164C  B705               	btfsc	(_M+5)& (0+255),3,b
  1217  00164E  D002               	goto	u570
  1218  001650  0E01               	movlw	1
  1219  001652  D001               	goto	u580
  1220  001654                     u570:
  1221  001654  0E00               	movlw	0
  1222  001656                     u580:
  1223  001656  0100               	movlb	__Lparam shr (0+8)
  1224  001658  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1225  00165A  ECFA  F076         	call	_BitSet2	;wreg free
  1226                           ;main.c: 431: BitSet2(&RSDT1.outSTAT1,7,M._PRACA
      +                          &&M._RPM_CW);
  1227  00165E  0100               	movlb	__Lparam shr (0+8)
  1228  001660  0E37               	movlw	low (_RSDT1+19)
  1229  001662  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1230  001664  0E01               	movlw	high (_RSDT1+19)
  1231  001666  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1232  001668  0E07               	movlw	7
  1233  00166A  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1234  00166C  0101               	movlb	(_M+4) shr (0+8)
  1235  00166E  BD04               	btfsc	(_M+4)& (0+255),6,b
  1236  001670  A705               	btfss	(_M+5)& (0+255),3,b
  1237  001672  D002               	goto	u610
  1238  001674  0E01               	movlw	1
  1239  001676  D001               	goto	u620
  1240  001678                     u610:
  1241  001678  0E00               	movlw	0
  1242  00167A                     u620:
  1243  00167A  0100               	movlb	__Lparam shr (0+8)
  1244  00167C  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1245  00167E  ECFA  F076         	call	_BitSet2	;wreg free
  1246                           ;main.c: 434: BitSet2(&RSDT1.outSTAT2,1,DtCO._er
      +                          r_CO);
  1247  001682  0100               	movlb	__Lparam shr (0+8)
  1248  001684  0E38               	movlw	low (_RSDT1+20)
  1249  001686  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1250  001688  0E01               	movlw	high (_RSDT1+20)
  1251  00168A  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1252  00168C  0E01               	movlw	1
  1253  00168E  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1254  001690  EE01  F0B6         	lfsr	0,_DtCO
  1255  001694  50EF               	movf	indf0,w,c
  1256  001696  0B01               	andlw	1
  1257  001698  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1258  00169A  ECFA  F076         	call	_BitSet2	;wreg free
  1259                           ;main.c: 435: BitSet2(&RSDT1.outSTAT2,0,DtCW._er
      +                          r_CW);
  1260  00169E  0100               	movlb	__Lparam shr (0+8)
  1261  0016A0  0E38               	movlw	low (_RSDT1+20)
  1262  0016A2  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1263  0016A4  0E01               	movlw	high (_RSDT1+20)
  1264  0016A6  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1265  0016A8  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1266  0016AA  EE01  F0A7         	lfsr	0,_DtCW
  1267  0016AE  50EF               	movf	indf0,w,c
  1268  0016B0  0B01               	andlw	1
  1269  0016B2  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1270  0016B4  ECFA  F076         	call	_BitSet2	;wreg free
  1271                           ;main.c: 436: BitSet2(&RSDT1.outSTAT2,2,DtCS._er
      +                          ror);
  1272  0016B8  0100               	movlb	__Lparam shr (0+8)
  1273  0016BA  0E38               	movlw	low (_RSDT1+20)
  1274  0016BC  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1275  0016BE  0E01               	movlw	high (_RSDT1+20)
  1276  0016C0  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1277  0016C2  0E02               	movlw	2
  1278  0016C4  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1279  0016C6  EE01  F098         	lfsr	0,_DtCS
  1280  0016CA  30EF               	rrcf	indf0,w,c
  1281  0016CC  6E00               	movwf	btemp,c
  1282  0016CE  3200               	rrcf	btemp,f,c
  1283  0016D0  3000               	rrcf	btemp,w,c
  1284  0016D2  0B01               	andlw	1
  1285  0016D4  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1286  0016D6  ECFA  F076         	call	_BitSet2	;wreg free
  1287                           ;main.c: 437: BitSet2(&RSDT1.outSTAT2,3,DtCS._no
      +                          _mont);
  1288  0016DA  0100               	movlb	__Lparam shr (0+8)
  1289  0016DC  0E38               	movlw	low (_RSDT1+20)
  1290  0016DE  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1291  0016E0  0E01               	movlw	high (_RSDT1+20)
  1292  0016E2  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1293  0016E4  0E03               	movlw	3
  1294  0016E6  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1295  0016E8  C199  F0F1         	movff	_DtCS+1,?_BitSet2+3
  1296  0016EC  ECFA  F076         	call	_BitSet2	;wreg free
  1297                           ;main.c: 438: BitSet2(&RSDT1.outSTAT2,7,M._TURBO
      +                          );
  1298  0016F0  0100               	movlb	__Lparam shr (0+8)
  1299  0016F2  0E38               	movlw	low (_RSDT1+20)
  1300  0016F4  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1301  0016F6  0E01               	movlw	high (_RSDT1+20)
  1302  0016F8  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1303  0016FA  0E07               	movlw	7
  1304  0016FC  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1305  0016FE  EE01  F004         	lfsr	0,_M+4
  1306  001702  38EF               	swapf	indf0,w,c
  1307  001704  6E00               	movwf	btemp,c
  1308  001706  3000               	rrcf	btemp,w,c
  1309  001708  0B01               	andlw	1
  1310  00170A  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1311  00170C  ECFA  F076         	call	_BitSet2	;wreg free
  1312                           ;main.c: 440: BitSet2(&RSDT1.outSTAT3,0,DtIN._er
      +                          r_IN);
  1313  001710  0100               	movlb	__Lparam shr (0+8)
  1314  001712  0E39               	movlw	low (_RSDT1+21)
  1315  001714  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1316  001716  0E01               	movlw	high (_RSDT1+21)
  1317  001718  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1318  00171A  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1319  00171C  EE01  F0C7         	lfsr	0,_DtIN
  1320  001720  50EF               	movf	indf0,w,c
  1321  001722  0B01               	andlw	1
  1322  001724  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1323  001726  ECFA  F076         	call	_BitSet2	;wreg free
  1324                           ;main.c: 441: BitSet2(&RSDT1.outSTAT3,1,(DtKNF.r
      +                          dpm!=0)?1:0);
  1325  00172A  0100               	movlb	__Lparam shr (0+8)
  1326  00172C  0E39               	movlw	low (_RSDT1+21)
  1327  00172E  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1328  001730  0E01               	movlw	high (_RSDT1+21)
  1329  001732  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1330  001734  0E01               	movlw	1
  1331  001736  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1332  001738  EE02  F03D         	lfsr	0,_DtKNF+13
  1333  00173C  50EF               	movf	indf0,w,c
  1334  00173E  0E00               	movlw	0
  1335  001740  A4D8               	btfss	status,2,c
  1336  001742  0E01               	movlw	1
  1337  001744  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1338  001746  ECFA  F076         	call	_BitSet2	;wreg free
  1339                           ;main.c: 442: BitSet2(&RSDT1.outSTAT3,2,(RB6)?0:
      +                          1);
  1340  00174A  0100               	movlb	__Lparam shr (0+8)
  1341  00174C  0E39               	movlw	low (_RSDT1+21)
  1342  00174E  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1343  001750  0E01               	movlw	high (_RSDT1+21)
  1344  001752  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1345  001754  0E02               	movlw	2
  1346  001756  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1347  001758  0E00               	movlw	0
  1348  00175A  AC81               	btfss	3969,6,c	;volatile
  1349  00175C  0E01               	movlw	1
  1350  00175E  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1351  001760  ECFA  F076         	call	_BitSet2	;wreg free
  1352                           ;main.c: 443: BitSet2(&RSDT1.outSTAT3,3,RD3);
  1353  001764  0100               	movlb	__Lparam shr (0+8)
  1354  001766  0E39               	movlw	low (_RSDT1+21)
  1355  001768  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1356  00176A  0E01               	movlw	high (_RSDT1+21)
  1357  00176C  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1358  00176E  0E03               	movlw	3
  1359  001770  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1360  001772  0E00               	movlw	0
  1361  001774  B683               	btfsc	3971,3,c	;volatile
  1362  001776  0E01               	movlw	1
  1363  001778  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1364  00177A  ECFA  F076         	call	_BitSet2	;wreg free
  1365                           ;main.c: 444: BitSet2(&RSDT1.outSTAT3,4,M._ROZRU
      +                          CH);
  1366  00177E  0100               	movlb	__Lparam shr (0+8)
  1367  001780  0E39               	movlw	low (_RSDT1+21)
  1368  001782  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1369  001784  0E01               	movlw	high (_RSDT1+21)
  1370  001786  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1371  001788  0E04               	movlw	4
  1372  00178A  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1373  00178C  EE01  F001         	lfsr	0,_M+1
  1374  001790  30EF               	rrcf	indf0,w,c
  1375  001792  6E00               	movwf	btemp,c
  1376  001794  3200               	rrcf	btemp,f,c
  1377  001796  3000               	rrcf	btemp,w,c
  1378  001798  0B01               	andlw	1
  1379  00179A  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1380  00179C  ECFA  F076         	call	_BitSet2	;wreg free
  1381                           ;main.c: 446: if(DtKNF.tpkt==0)
  1382  0017A0  EE02  F037         	lfsr	0,_DtKNF+7
  1383  0017A4  50EF               	movf	indf0,w,c
  1384  0017A6  E121               	bnz	l93
  1385                           ;main.c: 447: {
  1386  0017A8  EE02  F049         	lfsr	0,_DtKNF+25
  1387  0017AC  50EF               	movf	indf0,w,c
  1388                           ;main.c: 449: {
  1389  0017AE  0100               	movlb	__Lparam shr (0+8)
  1390  0017B0  0E39               	movlw	low (_RSDT1+21)
  1391  0017B2  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1392  0017B4  0E01               	movlw	high (_RSDT1+21)
  1393  0017B6  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1394  0017B8  0E05               	movlw	5
  1395  0017BA  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1396  0017BC  E10B               	bnz	L22
  1397  0017BE  0E0B               	movlw	11
  1398  0017C0  EC4C  F06F         	call	_RdPrt
  1399  0017C4  0E00               	movlw	0
  1400  0017C6  B0D8               	btfsc	status,0,c
  1401  0017C8  0E01               	movlw	1
  1402  0017CA  0100               	movlb	__Lparam shr (0+8)
  1403  0017CC  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1404  0017CE  ECFA  F076         	call	_BitSet2	;wreg free
  1405                           ;main.c: 451: }
  1406  0017D2  D01C               	goto	l96
  1407                           ;main.c: 452: else
  1408  0017D4                     L22:
  1409  0017D4  0E06               	movlw	6
  1410  0017D6  EC4C  F06F         	call	_RdPrt
  1411  0017DA  0E00               	movlw	0
  1412  0017DC  B0D8               	btfsc	status,0,c
  1413  0017DE  0E01               	movlw	1
  1414  0017E0  0100               	movlb	__Lparam shr (0+8)
  1415  0017E2  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1416  0017E4  ECFA  F076         	call	_BitSet2	;wreg free
  1417                           ;main.c: 455: }
  1418  0017E8  D011               	goto	l96
  1419  0017EA                     l93:
  1420                           ;main.c: 457: else
  1421  0017EA  0100               	movlb	__Lparam shr (0+8)
  1422  0017EC  0E39               	movlw	low (_RSDT1+21)
  1423  0017EE  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1424  0017F0  0E01               	movlw	high (_RSDT1+21)
  1425  0017F2  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1426  0017F4  0E05               	movlw	5
  1427  0017F6  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1428  0017F8  0E0B               	movlw	11
  1429  0017FA  EC4C  F06F         	call	_RdPrt
  1430  0017FE  0E00               	movlw	0
  1431  001800  B0D8               	btfsc	status,0,c
  1432  001802  0E01               	movlw	1
  1433  001804  0100               	movlb	__Lparam shr (0+8)
  1434  001806  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1435  001808  ECFA  F076         	call	_BitSet2	;wreg free
  1436  00180C                     l96:
  1437                           ;main.c: 460: }
  1438  00180C  0100               	movlb	__Lparam shr (0+8)
  1439  00180E  0E39               	movlw	low (_RSDT1+21)
  1440  001810  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1441  001812  0E01               	movlw	high (_RSDT1+21)
  1442  001814  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1443  001816  0E06               	movlw	6
  1444  001818  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1445  00181A  0E0C               	movlw	12
  1446  00181C  EC4C  F06F         	call	_RdPrt
  1447  001820  0E00               	movlw	0
  1448  001822  B0D8               	btfsc	status,0,c
  1449  001824  0E01               	movlw	1
  1450  001826  0100               	movlb	__Lparam shr (0+8)
  1451  001828  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1452  00182A  ECFA  F076         	call	_BitSet2	;wreg free
  1453                           ;main.c: 464: if(PFN.pop_poz==2)
  1454  00182E  0101               	movlb	(_PFN+3) shr (0+8)
  1455  001830  51A3               	movf	(_PFN+3)& (0+255),w,b
  1456  001832  0A02               	xorlw	2
  1457  001834  11A4               	iorwf	(_PFN+4)& (0+255),w,b
  1458                           ;main.c: 465: {
  1459  001836  0100               	movlb	__Lparam shr (0+8)
  1460  001838  0E3A               	movlw	low (_RSDT1+22)
  1461  00183A  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1462  00183C  0E01               	movlw	high (_RSDT1+22)
  1463  00183E  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1464  001840  0E01               	movlw	1
  1465  001842  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1466  001844  E104               	bnz	L23
  1467  001846  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1468  001848  ECFA  F076         	call	_BitSet2	;wreg free
  1469                           ;main.c: 467: }
  1470  00184C  D003               	goto	l98
  1471                           ;main.c: 468: else
  1472  00184E                     L23:
  1473  00184E  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1474  001850  ECFA  F076         	call	_BitSet2	;wreg free
  1475  001854                     l98:
  1476                           ;main.c: 471: }
  1477  001854  0100               	movlb	__Lparam shr (0+8)
  1478  001856  0E3A               	movlw	low (_RSDT1+22)
  1479  001858  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1480  00185A  0E01               	movlw	high (_RSDT1+22)
  1481  00185C  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1482  00185E  0E02               	movlw	2
  1483  001860  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1484  001862  0101               	movlb	_DtZW shr (0+8)
  1485  001864  0E00               	movlw	0
  1486  001866  B39C               	btfsc	_DtZW& (0+255),1,b
  1487  001868  0E01               	movlw	1
  1488  00186A  0100               	movlb	__Lparam shr (0+8)
  1489  00186C  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1490  00186E  ECFA  F076         	call	_BitSet2	;wreg free
  1491                           ;main.c: 473: BitSet2(&RSDT1.outSTAT4,4,RD2);
  1492  001872  0100               	movlb	__Lparam shr (0+8)
  1493  001874  0E3A               	movlw	low (_RSDT1+22)
  1494  001876  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1495  001878  0E01               	movlw	high (_RSDT1+22)
  1496  00187A  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1497  00187C  0E04               	movlw	4
  1498  00187E  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1499  001880  0E00               	movlw	0
  1500  001882  B483               	btfsc	3971,2,c	;volatile
  1501  001884  0E01               	movlw	1
  1502  001886  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1503  001888  ECFA  F076         	call	_BitSet2	;wreg free
  1504                           ;main.c: 474: BitSet2(&RSDT1.outSTAT4,5,RD1);
  1505  00188C  0100               	movlb	__Lparam shr (0+8)
  1506  00188E  0E3A               	movlw	low (_RSDT1+22)
  1507  001890  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1508  001892  0E01               	movlw	high (_RSDT1+22)
  1509  001894  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1510  001896  0E05               	movlw	5
  1511  001898  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1512  00189A  0E00               	movlw	0
  1513  00189C  B283               	btfsc	3971,1,c	;volatile
  1514  00189E  0E01               	movlw	1
  1515  0018A0  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1516  0018A2  ECFA  F076         	call	_BitSet2	;wreg free
  1517                           ;main.c: 475: BitSet2(&RSDT1.outSTAT4,6,(RdPrt(1
      +                          )!=0)?1:0);
  1518  0018A6  0100               	movlb	__Lparam shr (0+8)
  1519  0018A8  0E3A               	movlw	low (_RSDT1+22)
  1520  0018AA  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1521  0018AC  0E01               	movlw	high (_RSDT1+22)
  1522  0018AE  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1523  0018B0  0E06               	movlw	6
  1524  0018B2  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1525  0018B4  0E01               	movlw	1
  1526  0018B6  EC4C  F06F         	call	_RdPrt
  1527  0018BA  0E00               	movlw	0
  1528  0018BC  B0D8               	btfsc	status,0,c
  1529  0018BE  0E01               	movlw	1
  1530  0018C0  0100               	movlb	__Lparam shr (0+8)
  1531  0018C2  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1532  0018C4  ECFA  F076         	call	_BitSet2	;wreg free
  1533                           ;main.c: 476: BitSet2(&RSDT1.outSTAT4,7,RD0);
  1534  0018C8  0100               	movlb	__Lparam shr (0+8)
  1535  0018CA  0E3A               	movlw	low (_RSDT1+22)
  1536  0018CC  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1537  0018CE  0E01               	movlw	high (_RSDT1+22)
  1538  0018D0  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1539  0018D2  0E07               	movlw	7
  1540  0018D4  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1541  0018D6  0E00               	movlw	0
  1542  0018D8  B083               	btfsc	3971,0,c	;volatile
  1543  0018DA  0E01               	movlw	1
  1544  0018DC  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1545  0018DE  ECFA  F076         	call	_BitSet2	;wreg free
  1546                           ;main.c: 478: BitSet2(&RSDT1.outSTAT5,0,(RD5)?1:
      +                          0);
  1547  0018E2  0100               	movlb	__Lparam shr (0+8)
  1548  0018E4  0E3B               	movlw	low (_RSDT1+23)
  1549  0018E6  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1550  0018E8  0E01               	movlw	high (_RSDT1+23)
  1551  0018EA  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1552  0018EC  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1553  0018EE  0E00               	movlw	0
  1554  0018F0  BA83               	btfsc	3971,5,c	;volatile
  1555  0018F2  0E01               	movlw	1
  1556  0018F4  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1557  0018F6  ECFA  F076         	call	_BitSet2	;wreg free
  1558                           ;main.c: 479: BitSet2(&RSDT1.outSTAT5,1,(RA4)?0:
      +                          1);
  1559  0018FA  0100               	movlb	__Lparam shr (0+8)
  1560  0018FC  0E3B               	movlw	low (_RSDT1+23)
  1561  0018FE  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1562  001900  0E01               	movlw	high (_RSDT1+23)
  1563  001902  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1564  001904  0E01               	movlw	1
  1565  001906  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1566  001908  0E00               	movlw	0
  1567  00190A  A880               	btfss	3968,4,c	;volatile
  1568  00190C  0E01               	movlw	1
  1569  00190E  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1570  001910  ECFA  F076         	call	_BitSet2	;wreg free
  1571                           ;main.c: 480: BitSet2(&RSDT1.outSTAT5,2,(RdPrt(3
      +                          )!=0)?1:0);
  1572  001914  0100               	movlb	__Lparam shr (0+8)
  1573  001916  0E3B               	movlw	low (_RSDT1+23)
  1574  001918  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1575  00191A  0E01               	movlw	high (_RSDT1+23)
  1576  00191C  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1577  00191E  0E02               	movlw	2
  1578  001920  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1579  001922  0E03               	movlw	3
  1580  001924  EC4C  F06F         	call	_RdPrt
  1581  001928  0E00               	movlw	0
  1582  00192A  B0D8               	btfsc	status,0,c
  1583  00192C  0E01               	movlw	1
  1584  00192E  0100               	movlb	__Lparam shr (0+8)
  1585  001930  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1586  001932  ECFA  F076         	call	_BitSet2	;wreg free
  1587                           ;main.c: 481: BitSet2(&RSDT1.outSTAT5,3,(RdPrt(2
      +                          )!=0)?1:0);
  1588  001936  0100               	movlb	__Lparam shr (0+8)
  1589  001938  0E3B               	movlw	low (_RSDT1+23)
  1590  00193A  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1591  00193C  0E01               	movlw	high (_RSDT1+23)
  1592  00193E  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1593  001940  0E03               	movlw	3
  1594  001942  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1595  001944  0E02               	movlw	2
  1596  001946  EC4C  F06F         	call	_RdPrt
  1597  00194A  0E00               	movlw	0
  1598  00194C  B0D8               	btfsc	status,0,c
  1599  00194E  0E01               	movlw	1
  1600  001950  0100               	movlb	__Lparam shr (0+8)
  1601  001952  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1602  001954  ECFA  F076         	call	_BitSet2	;wreg free
  1603                           ;main.c: 482: BitSet2(&RSDT1.outSTAT5,4,(RdPrt(4
      +                          )!=0)?1:0);
  1604  001958  0100               	movlb	__Lparam shr (0+8)
  1605  00195A  0E3B               	movlw	low (_RSDT1+23)
  1606  00195C  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1607  00195E  0E01               	movlw	high (_RSDT1+23)
  1608  001960  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1609  001962  0E04               	movlw	4
  1610  001964  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1611  001966  EC4C  F06F         	call	_RdPrt
  1612  00196A  0E00               	movlw	0
  1613  00196C  B0D8               	btfsc	status,0,c
  1614  00196E  0E01               	movlw	1
  1615  001970  0100               	movlb	__Lparam shr (0+8)
  1616  001972  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1617  001974  ECFA  F076         	call	_BitSet2	;wreg free
  1618                           ;main.c: 483: BitSet2(&RSDT1.outSTAT5,5,(RdPrt(8
      +                          )!=0)?1:0);
  1619  001978  0100               	movlb	__Lparam shr (0+8)
  1620  00197A  0E3B               	movlw	low (_RSDT1+23)
  1621  00197C  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1622  00197E  0E01               	movlw	high (_RSDT1+23)
  1623  001980  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1624  001982  0E05               	movlw	5
  1625  001984  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1626  001986  0E08               	movlw	8
  1627  001988  EC4C  F06F         	call	_RdPrt
  1628  00198C  0E00               	movlw	0
  1629  00198E  B0D8               	btfsc	status,0,c
  1630  001990  0E01               	movlw	1
  1631  001992  0100               	movlb	__Lparam shr (0+8)
  1632  001994  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1633  001996  ECFA  F076         	call	_BitSet2	;wreg free
  1634                           ;main.c: 485: BitSet2(&RSDT1.outKSTAT0,0,(RB6)?0
      +                          :1);
  1635  00199A  0100               	movlb	__Lparam shr (0+8)
  1636  00199C  0E45               	movlw	low (_RSDT1+33)
  1637  00199E  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1638  0019A0  0E01               	movlw	high (_RSDT1+33)
  1639  0019A2  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1640  0019A4  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1641  0019A6  0E00               	movlw	0
  1642  0019A8  AC81               	btfss	3969,6,c	;volatile
  1643  0019AA  0E01               	movlw	1
  1644  0019AC  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1645  0019AE  ECFA  F076         	call	_BitSet2	;wreg free
  1646                           ;main.c: 486: BitSet2(&RSDT1.outKSTAT0,1,(DtKNF.
      +                          tpkt==0)?1:0);
  1647  0019B2  0100               	movlb	__Lparam shr (0+8)
  1648  0019B4  0E45               	movlw	low (_RSDT1+33)
  1649  0019B6  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1650  0019B8  0E01               	movlw	high (_RSDT1+33)
  1651  0019BA  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1652  0019BC  0E01               	movlw	1
  1653  0019BE  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1654  0019C0  EE02  F037         	lfsr	0,_DtKNF+7
  1655  0019C4  50EF               	movf	indf0,w,c
  1656  0019C6  0E00               	movlw	0
  1657  0019C8  B4D8               	btfsc	status,2,c
  1658  0019CA  0E01               	movlw	1
  1659  0019CC  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1660  0019CE  ECFA  F076         	call	_BitSet2	;wreg free
  1661                           ;main.c: 487: RSDT1.outPP=PMP.APROC;
  1662  0019D2  C02D  F13D         	movff	_PMP+2,_RSDT1+25
  1663                           ;main.c: 488: RSDT1.outPG=ModToProc(PWM.BufPWM);
  1664  0019D6  C1DC  FFE8         	movff	_PWM+1,wreg
  1665  0019DA  EC55  F06B         	call	_ModToProc
  1666  0019DE  CFE8 F13E          	movff	wreg,_RSDT1+26
  1667                           ;main.c: 489: M.vWSW=RSDT1.inRDZ0;
  1668  0019E2  C16C  F11F         	movff	_RSDT1+72,_M+31
  1669                           ;main.c: 490: if(GetBit2(RSDT1.inSTAT1,6))
  1670  0019E6  0E06               	movlw	6
  1671  0019E8  0100               	movlb	__Lparam shr (0+8)
  1672  0019EA  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1673  0019EC  C170  FFE8         	movff	_RSDT1+76,wreg
  1674  0019F0  ECC7  F076         	call	_GetBit2
  1675                           ;main.c: 491: {
  1676  0019F4  0101               	movlb	(_M+7) shr (0+8)
  1677  0019F6  E30D               	bnc	L24
  1678  0019F8  8D07               	bsf	(_M+7)& (0+255),6,b
  1679                           ;main.c: 493: if(GetBit2(RSDT1.inSTAT1,3))
  1680  0019FA  0E03               	movlw	3
  1681  0019FC  0100               	movlb	__Lparam shr (0+8)
  1682  0019FE  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1683  001A00  C170  FFE8         	movff	_RSDT1+76,wreg
  1684  001A04  ECC7  F076         	call	_GetBit2
  1685                           ;main.c: 494: {
  1686  001A08  0101               	movlb	(_M+7) shr (0+8)
  1687  001A0A  E302               	bnc	L25
  1688  001A0C  8F07               	bsf	(_M+7)& (0+255),7,b
  1689                           ;main.c: 496: }
  1690  001A0E  D003               	goto	l102
  1691                           ;main.c: 497: else
  1692  001A10                     L25:
  1693  001A10  D001               	goto	L1
  1694                           ;main.c: 500: }
  1695                           ;main.c: 502: else
  1696  001A12                     L24:
  1697  001A12  9D07               	bcf	(_M+7)& (0+255),6,b
  1698  001A14                     L1:
  1699                           ;main.c: 505: M._KKOM=0;
  1700  001A14  9F07               	bcf	(_M+7)& (0+255),7,b
  1701  001A16                     l102:
  1702                           ;main.c: 506: }
  1703  001A16  0100               	movlb	__Lparam shr (0+8)
  1704  001A18  6BF0               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
  1705  001A1A  C172  FFE8         	movff	_RSDT1+78,wreg
  1706  001A1E  ECC7  F076         	call	_GetBit2
  1707  001A22  E305               	bnc	u700
  1708  001A24  0101               	movlb	(_M+6) shr (0+8)
  1709  001A26  A106               	btfss	(_M+6)& (0+255),0,b
  1710  001A28  D002               	goto	u700
  1711  001A2A  0E01               	movlw	1
  1712  001A2C  D001               	goto	u710
  1713  001A2E                     u700:
  1714  001A2E  0E00               	movlw	0
  1715  001A30                     u710:
  1716  001A30  6E00               	movwf	btemp,c
  1717  001A32  EE01  F005         	lfsr	0,_M+5
  1718  001A36  3200               	rrcf	btemp,f,c
  1719  001A38  3200               	rrcf	btemp,f,c
  1720  001A3A  50EF               	movf	indf0,w,c
  1721  001A3C  1800               	xorwf	btemp,w,c
  1722  001A3E  0B7F               	andlw	-129
  1723  001A40  1800               	xorwf	btemp,w,c
  1724  001A42  6EEF               	movwf	indf0,c
  1725                           ;main.c: 582: M._LIN_RT=GetBit2(RSDT1.inLNSTAT,1
      +                          )&&M._LIN;
  1726  001A44  0E01               	movlw	1
  1727  001A46  0100               	movlb	__Lparam shr (0+8)
  1728  001A48  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1729  001A4A  C172  FFE8         	movff	_RSDT1+78,wreg
  1730  001A4E  ECC7  F076         	call	_GetBit2
  1731  001A52  E305               	bnc	u740
  1732  001A54  0101               	movlb	(_M+5) shr (0+8)
  1733  001A56  AF05               	btfss	(_M+5)& (0+255),7,b
  1734  001A58  D002               	goto	u740
  1735  001A5A  0E01               	movlw	1
  1736  001A5C  D001               	goto	u750
  1737  001A5E                     u740:
  1738  001A5E  0E00               	movlw	0
  1739  001A60                     u750:
  1740  001A60  6E00               	movwf	btemp,c
  1741  001A62  EE01  F006         	lfsr	0,_M+6
  1742  001A66  3600               	rlcf	btemp,f,c
  1743  001A68  50EF               	movf	indf0,w,c
  1744  001A6A  1800               	xorwf	btemp,w,c
  1745  001A6C  0BFD               	andlw	-3
  1746  001A6E  1800               	xorwf	btemp,w,c
  1747  001A70  6EEF               	movwf	indf0,c
  1748                           ;main.c: 583: M._LIN_CW=GetBit2(RSDT1.inLNSTAT,2
      +                          )&&(DtKNF.tpkt==0)&&M._LIN;
  1749  001A72  0E02               	movlw	2
  1750  001A74  0100               	movlb	__Lparam shr (0+8)
  1751  001A76  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1752  001A78  C172  FFE8         	movff	_RSDT1+78,wreg
  1753  001A7C  ECC7  F076         	call	_GetBit2
  1754  001A80  E309               	bnc	u800
  1755  001A82  EE02  F037         	lfsr	0,_DtKNF+7
  1756  001A86  50EF               	movf	indf0,w,c
  1757  001A88  E105               	bnz	u800
  1758  001A8A  0101               	movlb	(_M+5) shr (0+8)
  1759  001A8C  AF05               	btfss	(_M+5)& (0+255),7,b
  1760  001A8E  D002               	goto	u800
  1761  001A90  0E01               	movlw	1
  1762  001A92  D001               	goto	u810
  1763  001A94                     u800:
  1764  001A94  0E00               	movlw	0
  1765  001A96                     u810:
  1766  001A96  6E00               	movwf	btemp,c
  1767  001A98  EE01  F006         	lfsr	0,_M+6
  1768  001A9C  3600               	rlcf	btemp,f,c
  1769  001A9E  3600               	rlcf	btemp,f,c
  1770  001AA0  50EF               	movf	indf0,w,c
  1771  001AA2  1800               	xorwf	btemp,w,c
  1772  001AA4  0BFB               	andlw	-5
  1773  001AA6  1800               	xorwf	btemp,w,c
  1774  001AA8  6EEF               	movwf	indf0,c
  1775                           ;main.c: 584: M._LIN_KSK=GetBit2(RSDT1.inLNSTAT,
      +                          3)&&M._LIN;
  1776  001AAA  0E03               	movlw	3
  1777  001AAC  0100               	movlb	__Lparam shr (0+8)
  1778  001AAE  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1779  001AB0  C172  FFE8         	movff	_RSDT1+78,wreg
  1780  001AB4  ECC7  F076         	call	_GetBit2
  1781  001AB8  E305               	bnc	u840
  1782  001ABA  0101               	movlb	(_M+5) shr (0+8)
  1783  001ABC  AF05               	btfss	(_M+5)& (0+255),7,b
  1784  001ABE  D002               	goto	u840
  1785  001AC0  0E01               	movlw	1
  1786  001AC2  D001               	goto	u850
  1787  001AC4                     u840:
  1788  001AC4  0E00               	movlw	0
  1789  001AC6                     u850:
  1790  001AC6  6E00               	movwf	btemp,c
  1791  001AC8  EE01  F006         	lfsr	0,_M+6
  1792  001ACC  3600               	rlcf	btemp,f,c
  1793  001ACE  3600               	rlcf	btemp,f,c
  1794  001AD0  3600               	rlcf	btemp,f,c
  1795  001AD2  50EF               	movf	indf0,w,c
  1796  001AD4  1800               	xorwf	btemp,w,c
  1797  001AD6  0BF7               	andlw	-9
  1798  001AD8  1800               	xorwf	btemp,w,c
  1799  001ADA  6EEF               	movwf	indf0,c
  1800                           ;main.c: 585: M._LIN_STR=GetBit2(RSDT1.inLNSTAT,
      +                          4)&&M._LIN;
  1801  001ADC  0E04               	movlw	4
  1802  001ADE  0100               	movlb	__Lparam shr (0+8)
  1803  001AE0  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1804  001AE2  C172  FFE8         	movff	_RSDT1+78,wreg
  1805  001AE6  ECC7  F076         	call	_GetBit2
  1806  001AEA  E305               	bnc	u880
  1807  001AEC  0101               	movlb	(_M+5) shr (0+8)
  1808  001AEE  AF05               	btfss	(_M+5)& (0+255),7,b
  1809  001AF0  D002               	goto	u880
  1810  001AF2  0E01               	movlw	1
  1811  001AF4  D001               	goto	u890
  1812  001AF6                     u880:
  1813  001AF6  0E00               	movlw	0
  1814  001AF8                     u890:
  1815  001AF8  6E00               	movwf	btemp,c
  1816  001AFA  EE01  F006         	lfsr	0,_M+6
  1817  001AFE  3A00               	swapf	btemp,f,c
  1818  001B00  50EF               	movf	indf0,w,c
  1819  001B02  1800               	xorwf	btemp,w,c
  1820  001B04  0BEF               	andlw	-17
  1821  001B06  1800               	xorwf	btemp,w,c
  1822  001B08  6EEF               	movwf	indf0,c
  1823                           ;main.c: 586: M._LIN_DPGD=GetBit2(RSDT1.inLNSTAT
      +                          ,5)&&M._LIN;
  1824  001B0A  0E05               	movlw	5
  1825  001B0C  0100               	movlb	__Lparam shr (0+8)
  1826  001B0E  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1827  001B10  C172  FFE8         	movff	_RSDT1+78,wreg
  1828  001B14  ECC7  F076         	call	_GetBit2
  1829  001B18  E305               	bnc	u920
  1830  001B1A  0101               	movlb	(_M+5) shr (0+8)
  1831  001B1C  AF05               	btfss	(_M+5)& (0+255),7,b
  1832  001B1E  D002               	goto	u920
  1833  001B20  0E01               	movlw	1
  1834  001B22  D001               	goto	u930
  1835  001B24                     u920:
  1836  001B24  0E00               	movlw	0
  1837  001B26                     u930:
  1838  001B26  6E00               	movwf	btemp,c
  1839  001B28  EE01  F006         	lfsr	0,_M+6
  1840  001B2C  3A00               	swapf	btemp,f,c
  1841  001B2E  3600               	rlcf	btemp,f,c
  1842  001B30  50EF               	movf	indf0,w,c
  1843  001B32  1800               	xorwf	btemp,w,c
  1844  001B34  0BDF               	andlw	-33
  1845  001B36  1800               	xorwf	btemp,w,c
  1846  001B38  6EEF               	movwf	indf0,c
  1847                           ;main.c: 588: if(!M._LIN_KSK&&!M._LIN_STR)
  1848  001B3A  0101               	movlb	(_M+6) shr (0+8)
  1849  001B3C  A706               	btfss	(_M+6)& (0+255),3,b
  1850  001B3E  B906               	btfsc	(_M+6)& (0+255),4,b
  1851  001B40  D0AD               	goto	l103
  1852                           ;main.c: 589: {
  1853  001B42  0E02               	movlw	2
  1854  001B44  0100               	movlb	__Lparam shr (0+8)
  1855  001B46  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1856  001B48  C171  FFE8         	movff	_RSDT1+77,wreg
  1857  001B4C  ECC7  F076         	call	_GetBit2
  1858  001B50  E305               	bnc	u990
  1859  001B52  0101               	movlb	(_M+6) shr (0+8)
  1860  001B54  A106               	btfss	(_M+6)& (0+255),0,b
  1861  001B56  D002               	goto	u990
  1862  001B58  0E01               	movlw	1
  1863  001B5A  D001               	goto	u1000
  1864  001B5C                     u990:
  1865  001B5C  0E00               	movlw	0
  1866  001B5E                     u1000:
  1867  001B5E  6E00               	movwf	btemp,c
  1868  001B60  EE01  F007         	lfsr	0,_M+7
  1869  001B64  3600               	rlcf	btemp,f,c
  1870  001B66  50EF               	movf	indf0,w,c
  1871  001B68  1800               	xorwf	btemp,w,c
  1872  001B6A  0BFD               	andlw	-3
  1873  001B6C  1800               	xorwf	btemp,w,c
  1874  001B6E  6EEF               	movwf	indf0,c
  1875                           ;main.c: 591: M._IOT_RT=GetBit2(RSDT1.inINSTAT,3
      +                          )&&M._IOT;
  1876  001B70  0E03               	movlw	3
  1877  001B72  0100               	movlb	__Lparam shr (0+8)
  1878  001B74  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1879  001B76  C171  FFE8         	movff	_RSDT1+77,wreg
  1880  001B7A  ECC7  F076         	call	_GetBit2
  1881  001B7E  E305               	bnc	u1030
  1882  001B80  0101               	movlb	(_M+7) shr (0+8)
  1883  001B82  A307               	btfss	(_M+7)& (0+255),1,b
  1884  001B84  D002               	goto	u1030
  1885  001B86  0E01               	movlw	1
  1886  001B88  D001               	goto	u1040
  1887  001B8A                     u1030:
  1888  001B8A  0E00               	movlw	0
  1889  001B8C                     u1040:
  1890  001B8C  6E00               	movwf	btemp,c
  1891  001B8E  EE01  F007         	lfsr	0,_M+7
  1892  001B92  3600               	rlcf	btemp,f,c
  1893  001B94  3600               	rlcf	btemp,f,c
  1894  001B96  50EF               	movf	indf0,w,c
  1895  001B98  1800               	xorwf	btemp,w,c
  1896  001B9A  0BFB               	andlw	-5
  1897  001B9C  1800               	xorwf	btemp,w,c
  1898  001B9E  6EEF               	movwf	indf0,c
  1899                           ;main.c: 592: M._IOT_CW=GetBit2(RSDT1.inINSTAT,4
      +                          )&&(DtKNF.tpkt==0)&&M._IOT;
  1900  001BA0  0E04               	movlw	4
  1901  001BA2  0100               	movlb	__Lparam shr (0+8)
  1902  001BA4  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1903  001BA6  C171  FFE8         	movff	_RSDT1+77,wreg
  1904  001BAA  ECC7  F076         	call	_GetBit2
  1905  001BAE  E309               	bnc	u1090
  1906  001BB0  EE02  F037         	lfsr	0,_DtKNF+7
  1907  001BB4  50EF               	movf	indf0,w,c
  1908  001BB6  E105               	bnz	u1090
  1909  001BB8  0101               	movlb	(_M+7) shr (0+8)
  1910  001BBA  A307               	btfss	(_M+7)& (0+255),1,b
  1911  001BBC  D002               	goto	u1090
  1912  001BBE  0E01               	movlw	1
  1913  001BC0  D001               	goto	u1100
  1914  001BC2                     u1090:
  1915  001BC2  0E00               	movlw	0
  1916  001BC4                     u1100:
  1917  001BC4  6E00               	movwf	btemp,c
  1918  001BC6  EE01  F007         	lfsr	0,_M+7
  1919  001BCA  3600               	rlcf	btemp,f,c
  1920  001BCC  3600               	rlcf	btemp,f,c
  1921  001BCE  3600               	rlcf	btemp,f,c
  1922  001BD0  50EF               	movf	indf0,w,c
  1923  001BD2  1800               	xorwf	btemp,w,c
  1924  001BD4  0BF7               	andlw	-9
  1925  001BD6  1800               	xorwf	btemp,w,c
  1926  001BD8  6EEF               	movwf	indf0,c
  1927                           ;main.c: 593: M._IOT_STR=GetBit2(RSDT1.inINSTAT,
      +                          5)&&M._IOT;
  1928  001BDA  0E05               	movlw	5
  1929  001BDC  0100               	movlb	__Lparam shr (0+8)
  1930  001BDE  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1931  001BE0  C171  FFE8         	movff	_RSDT1+77,wreg
  1932  001BE4  ECC7  F076         	call	_GetBit2
  1933  001BE8  E305               	bnc	u1130
  1934  001BEA  0101               	movlb	(_M+7) shr (0+8)
  1935  001BEC  A307               	btfss	(_M+7)& (0+255),1,b
  1936  001BEE  D002               	goto	u1130
  1937  001BF0  0E01               	movlw	1
  1938  001BF2  D001               	goto	u1140
  1939  001BF4                     u1130:
  1940  001BF4  0E00               	movlw	0
  1941  001BF6                     u1140:
  1942  001BF6  6E00               	movwf	btemp,c
  1943  001BF8  EE01  F007         	lfsr	0,_M+7
  1944  001BFC  3A00               	swapf	btemp,f,c
  1945  001BFE  50EF               	movf	indf0,w,c
  1946  001C00  1800               	xorwf	btemp,w,c
  1947  001C02  0BEF               	andlw	-17
  1948  001C04  1800               	xorwf	btemp,w,c
  1949  001C06  6EEF               	movwf	indf0,c
  1950                           ;main.c: 594: M._IOT_DPGD=GetBit2(RSDT1.inINSTAT
      +                          ,6)&&M._IOT;
  1951  001C08  0E06               	movlw	6
  1952  001C0A  0100               	movlb	__Lparam shr (0+8)
  1953  001C0C  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1954  001C0E  C171  FFE8         	movff	_RSDT1+77,wreg
  1955  001C12  ECC7  F076         	call	_GetBit2
  1956  001C16  E305               	bnc	u1170
  1957  001C18  0101               	movlb	(_M+7) shr (0+8)
  1958  001C1A  A307               	btfss	(_M+7)& (0+255),1,b
  1959  001C1C  D002               	goto	u1170
  1960  001C1E  0E01               	movlw	1
  1961  001C20  D001               	goto	u1180
  1962  001C22                     u1170:
  1963  001C22  0E00               	movlw	0
  1964  001C24                     u1180:
  1965  001C24  6E00               	movwf	btemp,c
  1966  001C26  EE01  F007         	lfsr	0,_M+7
  1967  001C2A  3A00               	swapf	btemp,f,c
  1968  001C2C  3600               	rlcf	btemp,f,c
  1969  001C2E  50EF               	movf	indf0,w,c
  1970  001C30  1800               	xorwf	btemp,w,c
  1971  001C32  0BDF               	andlw	-33
  1972  001C34  1800               	xorwf	btemp,w,c
  1973  001C36  6EEF               	movwf	indf0,c
  1974                           ;main.c: 595: if(!M._IOT)
  1975  001C38  0101               	movlb	(_M+7) shr (0+8)
  1976  001C3A  B307               	btfsc	(_M+7)& (0+255),1,b
  1977  001C3C  D02D               	goto	l104
  1978                           ;main.c: 596: {
  1979  001C3E  0100               	movlb	__Lparam shr (0+8)
  1980  001C40  6BF0               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
  1981  001C42  C171  FFE8         	movff	_RSDT1+77,wreg
  1982  001C46  ECC7  F076         	call	_GetBit2
  1983  001C4A  E305               	bnc	u1220
  1984  001C4C  0101               	movlb	(_M+6) shr (0+8)
  1985  001C4E  A106               	btfss	(_M+6)& (0+255),0,b
  1986  001C50  D002               	goto	u1220
  1987  001C52  0E01               	movlw	1
  1988  001C54  D001               	goto	u1230
  1989  001C56                     u1220:
  1990  001C56  0E00               	movlw	0
  1991  001C58                     u1230:
  1992  001C58  6E00               	movwf	btemp,c
  1993  001C5A  EE01  F006         	lfsr	0,_M+6
  1994  001C5E  3200               	rrcf	btemp,f,c
  1995  001C60  3200               	rrcf	btemp,f,c
  1996  001C62  50EF               	movf	indf0,w,c
  1997  001C64  1800               	xorwf	btemp,w,c
  1998  001C66  0B7F               	andlw	-129
  1999  001C68  1800               	xorwf	btemp,w,c
  2000  001C6A  6EEF               	movwf	indf0,c
  2001                           ;main.c: 598: M._I10V_RT=GetBit2(RSDT1.inINSTAT,
      +                          1)&&M._I10V;
  2002  001C6C  0E01               	movlw	1
  2003  001C6E  0100               	movlb	__Lparam shr (0+8)
  2004  001C70  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2005  001C72  C171  FFE8         	movff	_RSDT1+77,wreg
  2006  001C76  ECC7  F076         	call	_GetBit2
  2007  001C7A  E305               	bnc	u1260
  2008  001C7C  0101               	movlb	(_M+6) shr (0+8)
  2009  001C7E  AF06               	btfss	(_M+6)& (0+255),7,b
  2010  001C80  D002               	goto	u1260
  2011  001C82  0E01               	movlw	1
  2012  001C84  D001               	goto	u1270
  2013  001C86                     u1260:
  2014  001C86  0E00               	movlw	0
  2015  001C88                     u1270:
  2016  001C88  6E00               	movwf	btemp,c
  2017  001C8A  EE01  F007         	lfsr	0,_M+7
  2018  001C8E  18EF               	xorwf	indf0,w,c
  2019  001C90  0BFE               	andlw	-2
  2020  001C92  1800               	xorwf	btemp,w,c
  2021  001C94  6EEF               	movwf	indf0,c
  2022                           ;main.c: 599: }
  2023  001C96  D00A               	goto	l106
  2024  001C98                     l104:
  2025                           ;main.c: 600: else
  2026  001C98  0101               	movlb	(_M+6) shr (0+8)
  2027  001C9A  D006               	goto	L2
  2028                           ;main.c: 603: M._I10V_RT=0;
  2029                           ;main.c: 604: }
  2030  001C9C                     l103:
  2031                           ;main.c: 606: else
  2032  001C9C  0101               	movlb	(_M+7) shr (0+8)
  2033  001C9E  9307               	bcf	(_M+7)& (0+255),1,b
  2034                           ;main.c: 609: M._IOT_RT=0;
  2035  001CA0  9507               	bcf	(_M+7)& (0+255),2,b
  2036                           ;main.c: 610: M._IOT_CW=0;
  2037  001CA2  9707               	bcf	(_M+7)& (0+255),3,b
  2038                           ;main.c: 611: M._IOT_STR=0;
  2039  001CA4  9907               	bcf	(_M+7)& (0+255),4,b
  2040                           ;main.c: 612: M._IOT_DPGD=0;
  2041  001CA6  9B07               	bcf	(_M+7)& (0+255),5,b
  2042  001CA8                     L2:
  2043                           ;main.c: 613: M._I10V=0;
  2044  001CA8  9F06               	bcf	(_M+6)& (0+255),7,b
  2045                           ;main.c: 614: M._I10V_RT=0;
  2046  001CAA  9107               	bcf	(_M+7)& (0+255),0,b
  2047  001CAC                     l106:
  2048                           ;main.c: 615: }
  2049  001CAC  0101               	movlb	(_M+5) shr (0+8)
  2050  001CAE  AF05               	btfss	(_M+5)& (0+255),7,b
  2051  001CB0  D003               	goto	l107
  2052                           ;main.c: 617: {
  2053  001CB2  C174  F123         	movff	_RSDT1+80,_M+35
  2054                           ;main.c: 619: }
  2055  001CB6  0012               	return	
  2056  001CB8                     l107:
  2057                           ;main.c: 620: else
  2058  001CB8  0101               	movlb	(_M+35) shr (0+8)
  2059  001CBA  6B23               	clrf	(_M+35)& (0+255),b
  2060                           ;main.c: 623: }
  2061  001CBC  0012               	return	
  2062  001CBE                     __end_of_RefLCDData:
  2063                           ;main.c: 629: void KolejkaPobudzen(void)
  2064                           ;main.c: 630: {
  2065  001CBE                     _KolejkaPobudzen:
  2066  000000                     
  2067                           ;main.c: 631: unsigned char wr=0;
  2068  001CBE  6AD9               	clrf	fsr2l,c
  2069                           ;main.c: 634: if(M._AKTYWNE_KNF)
  2070  001CC0  0101               	movlb	(_M+3) shr (0+8)
  2071  001CC2  A503               	btfss	(_M+3)& (0+255),2,b
  2072  001CC4  D025               	goto	l110
  2073                           ;main.c: 635: {
  2074  001CC6  9500               	bcf	_M& (0+255),2,b
  2075                           ;main.c: 637: M._pob_AL=0;
  2076  001CC8  9700               	bcf	_M& (0+255),3,b
  2077                           ;main.c: 638: M._pob_CO=0;
  2078  001CCA  9B00               	bcf	_M& (0+255),5,b
  2079                           ;main.c: 639: M._pob_CW=0;
  2080  001CCC  9900               	bcf	_M& (0+255),4,b
  2081                           ;main.c: 640: M._pob_DzCO=0;
  2082  001CCE  9D00               	bcf	_M& (0+255),6,b
  2083                           ;main.c: 641: M._pob_DzCW=0;
  2084  001CD0  9F00               	bcf	_M& (0+255),7,b
  2085                           ;main.c: 642: if((PFN.poz==2)||(PFN.poz==3))
  2086  001CD2  0101               	movlb	(_PFN+1) shr (0+8)
  2087  001CD4  51A1               	movf	(_PFN+1)& (0+255),w,b
  2088  001CD6  0A02               	xorlw	2
  2089  001CD8  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2090  001CDA  E004               	bz	u1320
  2091  001CDC  51A1               	movf	(_PFN+1)& (0+255),w,b
  2092  001CDE  0A03               	xorlw	3
  2093  001CE0  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2094  001CE2  E112               	bnz	l111
  2095  001CE4                     u1320:
  2096                           ;main.c: 643: {
  2097  001CE4  0102               	movlb	_DtKNF shr (0+8)
  2098  001CE6  A530               	btfss	_DtKNF& (0+255),2,b
  2099  001CE8  D003               	goto	l112
  2100  001CEA  0101               	movlb	_M shr (0+8)
  2101  001CEC  8300               	bsf	_M& (0+255),1,b
  2102  001CEE  D002               	goto	l113
  2103  001CF0                     l112:
  2104                           ;main.c: 645: else M._pob_KCW=0;
  2105  001CF0  0101               	movlb	_M shr (0+8)
  2106  001CF2  9300               	bcf	_M& (0+255),1,b
  2107  001CF4                     l113:
  2108                           ;main.c: 646: if(DtKNF.wymCO)
  2109  001CF4  0102               	movlb	_DtKNF shr (0+8)
  2110  001CF6  A330               	btfss	_DtKNF& (0+255),1,b
  2111  001CF8  D004               	goto	l114
  2112                           ;main.c: 647: {
  2113  001CFA  0101               	movlb	_M shr (0+8)
  2114  001CFC  8100               	bsf	_M& (0+255),0,b
  2115                           ;main.c: 649: M._BLOKUJ_15S=0;
  2116  001CFE  9B02               	bcf	(_M+2)& (0+255),5,b
  2117                           ;main.c: 650: }
  2118  001D00  0012               	return	
  2119  001D02                     l114:
  2120                           ;main.c: 651: else M._pob_KCO=0;
  2121  001D02  0101               	movlb	_M shr (0+8)
  2122  001D04  9100               	bcf	_M& (0+255),0,b
  2123                           ;main.c: 652: }
  2124  001D06  0012               	return	
  2125  001D08                     l111:
  2126                           ;main.c: 653: else
  2127  001D08  0101               	movlb	_M shr (0+8)
  2128  001D0A  9300               	bcf	_M& (0+255),1,b
  2129                           ;main.c: 656: M._pob_KCO=0;
  2130  001D0C  9100               	bcf	_M& (0+255),0,b
  2131                           ;main.c: 657: }
  2132  001D0E  0012               	return	
  2133  001D10                     l110:
  2134                           ;main.c: 659: else
  2135  001D10  0101               	movlb	_M shr (0+8)
  2136  001D12  9300               	bcf	_M& (0+255),1,b
  2137                           ;main.c: 663: M._pob_KCO=0;
  2138  001D14  9100               	bcf	_M& (0+255),0,b
  2139                           ;main.c: 664: if(M._AKTYWNE_SRW&&(PFN.poz==3))
  2140  001D16  AF02               	btfss	(_M+2)& (0+255),7,b
  2141  001D18  D00E               	goto	l118
  2142  001D1A  0101               	movlb	(_PFN+1) shr (0+8)
  2143  001D1C  51A1               	movf	(_PFN+1)& (0+255),w,b
  2144  001D1E  0A03               	xorlw	3
  2145  001D20  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2146                           ;main.c: 665: {
  2147  001D22  0101               	movlb	_M shr (0+8)
  2148  001D24  E109               	bnz	L26
  2149  001D26  8500               	bsf	_M& (0+255),2,b
  2150                           ;main.c: 667: M._pob_AL=0;
  2151  001D28  9700               	bcf	_M& (0+255),3,b
  2152                           ;main.c: 668: M._pob_CW=0;
  2153  001D2A  9900               	bcf	_M& (0+255),4,b
  2154                           ;main.c: 669: M._pob_CO=0;
  2155  001D2C  9B00               	bcf	_M& (0+255),5,b
  2156                           ;main.c: 670: M._pob_DzCO=0;
  2157  001D2E  9D00               	bcf	_M& (0+255),6,b
  2158                           ;main.c: 671: M._pob_DzCW=0;
  2159  001D30  9F00               	bcf	_M& (0+255),7,b
  2160                           ;main.c: 672: M._BLOKUJ_15S=0;
  2161  001D32  9B02               	bcf	(_M+2)& (0+255),5,b
  2162                           ;main.c: 673: }
  2163  001D34  0012               	return	
  2164  001D36                     l118:
  2165                           ;main.c: 674: else
  2166  001D36  0101               	movlb	_M shr (0+8)
  2167  001D38                     L26:
  2168  001D38  9500               	bcf	_M& (0+255),2,b
  2169                           ;main.c: 678: if(M._AKTYWNE_AL)
  2170  001D3A  A103               	btfss	(_M+3)& (0+255),0,b
  2171  001D3C  D014               	goto	l120
  2172                           ;main.c: 679: {
  2173  001D3E  0E45               	movlw	69
  2174  001D40  0101               	movlb	(_DtCW+2) shr (0+8)
  2175  001D42  61A9               	cpfslt	(_DtCW+2)& (0+255),b
  2176  001D44  D003               	goto	l121
  2177  001D46  0101               	movlb	_M shr (0+8)
  2178  001D48  8700               	bsf	_M& (0+255),3,b
  2179  001D4A  D007               	goto	l122
  2180  001D4C                     l121:
  2181                           ;main.c: 681: else
  2182  001D4C  0E45               	movlw	69
  2183  001D4E  0101               	movlb	(_DtCW+2) shr (0+8)
  2184  001D50  65A9               	cpfsgt	(_DtCW+2)& (0+255),b
  2185  001D52  D003               	goto	l122
  2186                           ;main.c: 684: {
  2187  001D54  0101               	movlb	_M shr (0+8)
  2188  001D56  9700               	bcf	_M& (0+255),3,b
  2189                           ;main.c: 686: M._AKTYWNE_AL=0;
  2190  001D58  9103               	bcf	(_M+3)& (0+255),0,b
  2191  001D5A                     l122:
  2192                           ;main.c: 687: }
  2193  001D5A  0101               	movlb	_M shr (0+8)
  2194  001D5C  9900               	bcf	_M& (0+255),4,b
  2195                           ;main.c: 690: M._pob_CO=0;
  2196  001D5E  9B00               	bcf	_M& (0+255),5,b
  2197                           ;main.c: 691: M._pob_DzCO=0;
  2198  001D60  9D00               	bcf	_M& (0+255),6,b
  2199                           ;main.c: 692: M._pob_DzCW=0;
  2200  001D62  9F00               	bcf	_M& (0+255),7,b
  2201                           ;main.c: 693: }
  2202  001D64  0012               	return	
  2203  001D66                     l120:
  2204                           ;main.c: 694: else
  2205  001D66  0101               	movlb	_M shr (0+8)
  2206  001D68  9700               	bcf	_M& (0+255),3,b
  2207                           ;main.c: 698: if(DtKNF.tpkt!=0) wr=RdPrt(11)&&((
      +                          PFN.poz==2)||(PFN.poz==3));
  2208  001D6A  EE02  F037         	lfsr	0,_DtKNF+7
  2209  001D6E  50EF               	movf	indf0,w,c
  2210  001D70  E00F               	bz	l125
  2211  001D72  0E0B               	movlw	11
  2212  001D74  EC4C  F06F         	call	_RdPrt
  2213  001D78  E31A               	bnc	u1540
  2214  001D7A  0101               	movlb	(_PFN+1) shr (0+8)
  2215  001D7C  51A1               	movf	(_PFN+1)& (0+255),w,b
  2216  001D7E  0A02               	xorlw	2
  2217  001D80  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2218  001D82  E004               	bz	u1461
  2219  001D84  51A1               	movf	(_PFN+1)& (0+255),w,b
  2220  001D86  0A03               	xorlw	3
  2221  001D88  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2222  001D8A  E111               	bnz	u1540
  2223  001D8C                     u1461:
  2224  001D8C  0E01               	movlw	1
  2225  001D8E  D010               	goto	u1550
  2226  001D90                     l125:
  2227                           ;main.c: 699: else wr=DtCW._wpz_CW&&DtCO._pz_CO&
      +                          &((PFN.poz==2)||(PFN.poz==3));
  2228  001D90  0101               	movlb	_DtCW shr (0+8)
  2229  001D92  A7A7               	btfss	_DtCW& (0+255),3,b
  2230  001D94  D00C               	goto	u1540
  2231  001D96  0101               	movlb	(_DtCO+1) shr (0+8)
  2232  001D98  A3B7               	btfss	(_DtCO+1)& (0+255),1,b
  2233  001D9A  D009               	goto	u1540
  2234  001D9C  0101               	movlb	(_PFN+1) shr (0+8)
  2235  001D9E  51A1               	movf	(_PFN+1)& (0+255),w,b
  2236  001DA0  0A02               	xorlw	2
  2237  001DA2  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2238  001DA4  E0F3               	bz	u1461
  2239  001DA6  51A1               	movf	(_PFN+1)& (0+255),w,b
  2240  001DA8  0A03               	xorlw	3
  2241  001DAA  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2242  001DAC  E0EF               	bz	u1461
  2243  001DAE                     u1540:
  2244  001DAE  0E00               	movlw	0
  2245  001DB0                     u1550:
  2246  001DB0  0100               	movlb	__Lparam shr (0+8)
  2247  001DB2  6FE9               	movwf	?a_KolejkaPobudzen^(__Lparam& (0+65280)),
      +                          b
  2248                           ;main.c: 700: if(wr!=0)
  2249  001DB4  51E9               	movf	?a_KolejkaPobudzen^(__Lparam& (0+65280)),w
  2250                           ;main.c: 701: {
  2251  001DB6  0101               	movlb	_M shr (0+8)
  2252  001DB8  E005               	bz	L27
  2253  001DBA  8900               	bsf	_M& (0+255),4,b
  2254                           ;main.c: 703: M._pob_CO=0;
  2255  001DBC  9B00               	bcf	_M& (0+255),5,b
  2256                           ;main.c: 704: M._pob_DzCO=0;
  2257  001DBE  9D00               	bcf	_M& (0+255),6,b
  2258                           ;main.c: 705: M._pob_DzCW=0;
  2259  001DC0  9F00               	bcf	_M& (0+255),7,b
  2260                           ;main.c: 706: }
  2261  001DC2  0012               	return	
  2262                           ;main.c: 707: else
  2263  001DC4                     L27:
  2264  001DC4  9900               	bcf	_M& (0+255),4,b
  2265                           ;main.c: 711: if(RdPrt(12)&&(PFN.poz==3))
  2266  001DC6  0E0C               	movlw	12
  2267  001DC8  EC4C  F06F         	call	_RdPrt
  2268  001DCC  E30A               	bnc	l129
  2269  001DCE  0101               	movlb	(_PFN+1) shr (0+8)
  2270  001DD0  51A1               	movf	(_PFN+1)& (0+255),w,b
  2271  001DD2  0A03               	xorlw	3
  2272  001DD4  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2273                           ;main.c: 712: {
  2274  001DD6  0101               	movlb	_M shr (0+8)
  2275  001DD8  E105               	bnz	L28
  2276  001DDA  8B00               	bsf	_M& (0+255),5,b
  2277                           ;main.c: 714: M._pob_DzCO=0;
  2278  001DDC  9D00               	bcf	_M& (0+255),6,b
  2279                           ;main.c: 715: M._pob_DzCW=0;
  2280  001DDE  9F00               	bcf	_M& (0+255),7,b
  2281                           ;main.c: 716: }
  2282  001DE0  0012               	return	
  2283  001DE2                     l129:
  2284                           ;main.c: 717: else
  2285  001DE2  0101               	movlb	_M shr (0+8)
  2286  001DE4                     L28:
  2287  001DE4  9B00               	bcf	_M& (0+255),5,b
  2288                           ;main.c: 721: if(RdPrt(9))
  2289  001DE6  0E09               	movlw	9
  2290  001DE8  EC4C  F06F         	call	_RdPrt
  2291                           ;main.c: 722: {
  2292  001DEC  0101               	movlb	_M shr (0+8)
  2293  001DEE  E303               	bnc	L29
  2294  001DF0  8D00               	bsf	_M& (0+255),6,b
  2295                           ;main.c: 724: M._pob_DzCW=0;
  2296  001DF2  9F00               	bcf	_M& (0+255),7,b
  2297                           ;main.c: 725: }
  2298  001DF4  0012               	return	
  2299                           ;main.c: 726: else
  2300  001DF6                     L29:
  2301  001DF6  9D00               	bcf	_M& (0+255),6,b
  2302                           ;main.c: 729: if(DtKNF.tpkt==0)
  2303  001DF8  EE02  F037         	lfsr	0,_DtKNF+7
  2304  001DFC  50EF               	movf	indf0,w,c
  2305  001DFE  E109               	bnz	l133
  2306                           ;main.c: 730: {
  2307  001E00  0E0A               	movlw	10
  2308  001E02  EC4C  F06F         	call	_RdPrt
  2309  001E06  0101               	movlb	_M shr (0+8)
  2310  001E08  E302               	bnc	L30
  2311  001E0A  8F00               	bsf	_M& (0+255),7,b
  2312  001E0C  0012               	return	
  2313                           ;main.c: 733: else M._pob_DzCW=0;
  2314  001E0E                     L30:
  2315  001E0E  9F00               	bcf	_M& (0+255),7,b
  2316                           ;main.c: 734: }
  2317  001E10  0012               	return	
  2318  001E12                     l133:
  2319                           ;main.c: 735: else M._pob_DzCW=0;
  2320  001E12  0101               	movlb	_M shr (0+8)
  2321  001E14  9F00               	bcf	_M& (0+255),7,b
  2322                           ;main.c: 736: }
  2323  001E16  0012               	return	
  2324  001E18                     __end_of_KolejkaPobudzen:
  2325                           ;main.c: 746: void DecyzjaAntyLeg(void)
  2326                           ;main.c: 747: {
  2327  001E18                     _DecyzjaAntyLeg:
  2328  000000                     
  2329                           ;main.c: 854: if(DtKNF.tpkt==0)
  2330  001E18  EE02  F037         	lfsr	0,_DtKNF+7
  2331  001E1C  50EF               	movf	indf0,w,c
  2332  001E1E  E001 D09C          	bnz	l138
  2333                           ;main.c: 855: {
  2334  001E22  0101               	movlb	(_M+3) shr (0+8)
  2335  001E24  A103               	btfss	(_M+3)& (0+255),0,b
  2336  001E26  D036               	goto	l139
  2337                           ;main.c: 859: {
  2338  001E28  0101               	movlb	_DtCW shr (0+8)
  2339  001E2A  B1A7               	btfsc	_DtCW& (0+255),0,b
  2340  001E2C  D003               	goto	u1670
  2341  001E2E  0101               	movlb	_DtCO shr (0+8)
  2342  001E30  A1B6               	btfss	_DtCO& (0+255),0,b
  2343  001E32  D003               	goto	l140
  2344  001E34                     u1670:
  2345                           ;main.c: 861: {
  2346  001E34  0101               	movlb	(_M+3) shr (0+8)
  2347  001E36  9103               	bcf	(_M+3)& (0+255),0,b
  2348                           ;main.c: 863: return;
  2349  001E38  0012               	return	
  2350  001E3A                     l140:
  2351                           ;main.c: 864: }
  2352  001E3A  EE02  F04A         	lfsr	0,_DtKNF+26
  2353  001E3E  50EF               	movf	indf0,w,c
  2354  001E40  E005               	bz	l141
  2355                           ;main.c: 866: {
  2356  001E42  0E01               	movlw	1
  2357  001E44  ECCC  F073         	call	_StartRTG
  2358                           ;main.c: 868: M.LICZNIK_ANL=0;
  2359  001E48  0101               	movlb	(_M+13) shr (0+8)
  2360  001E4A  6B0D               	clrf	(_M+13)& (0+255),b
  2361  001E4C                     l141:
  2362                           ;main.c: 869: }
  2363  001E4C  0101               	movlb	(_M+3) shr (0+8)
  2364  001E4E  B503               	btfsc	(_M+3)& (0+255),2,b
  2365  001E50  D002               	goto	u1710
  2366  001E52  AF02               	btfss	(_M+2)& (0+255),7,b
  2367  001E54  D003               	goto	l142
  2368  001E56                     u1710:
  2369                           ;main.c: 871: {
  2370  001E56  0101               	movlb	(_M+3) shr (0+8)
  2371  001E58  9103               	bcf	(_M+3)& (0+255),0,b
  2372                           ;main.c: 873: return;
  2373  001E5A  0012               	return	
  2374  001E5C                     l142:
  2375                           ;main.c: 874: }
  2376  001E5C  0101               	movlb	(_PFN+1) shr (0+8)
  2377  001E5E  51A1               	movf	(_PFN+1)& (0+255),w,b
  2378  001E60  0A02               	xorlw	2
  2379  001E62  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2380  001E64  E007               	bz	l143
  2381  001E66  51A1               	movf	(_PFN+1)& (0+255),w,b
  2382  001E68  0A03               	xorlw	3
  2383  001E6A  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2384  001E6C  E003               	bz	l143
  2385                           ;main.c: 877: {
  2386  001E6E  0101               	movlb	(_M+3) shr (0+8)
  2387  001E70  9103               	bcf	(_M+3)& (0+255),0,b
  2388                           ;main.c: 879: return;
  2389  001E72  0012               	return	
  2390  001E74                     l143:
  2391                           ;main.c: 880: }
  2392  001E74  0E04               	movlw	4
  2393  001E76  ECAE  F073         	call	_RTM
  2394  001E7A  6E00               	movwf	btemp,c
  2395  001E7C  0E3C               	movlw	60
  2396  001E7E  5C00               	subwf	btemp,w,c
  2397  001E80  E303               	bnc	l144
  2398                           ;main.c: 883: {
  2399  001E82  0101               	movlb	(_M+3) shr (0+8)
  2400  001E84  9103               	bcf	(_M+3)& (0+255),0,b
  2401                           ;main.c: 885: return;
  2402  001E86  0012               	return	
  2403  001E88                     l144:
  2404                           ;main.c: 886: }
  2405  001E88  0101               	movlb	_PFN shr (0+8)
  2406  001E8A  ABA0               	btfss	_PFN& (0+255),5,b
  2407  001E8C  D003               	goto	l139
  2408                           ;main.c: 890: {
  2409  001E8E  0101               	movlb	(_M+3) shr (0+8)
  2410  001E90  9103               	bcf	(_M+3)& (0+255),0,b
  2411                           ;main.c: 892: return;
  2412  001E92  0012               	return	
  2413  001E94                     l139:
  2414                           ;main.c: 893: }
  2415  001E94  0101               	movlb	(_M+3) shr (0+8)
  2416  001E96  B103               	btfsc	(_M+3)& (0+255),0,b
  2417  001E98  D05A               	goto	l146
  2418                           ;main.c: 898: {
  2419  001E9A  A503               	btfss	(_M+3)& (0+255),2,b
  2420  001E9C  BF02               	btfsc	(_M+2)& (0+255),7,b
  2421  001E9E  0012               	return	
  2422                           ;main.c: 900: {
  2423                           ;main.c: 902: }
  2424  001EA0  EE02  F04A         	lfsr	0,_DtKNF+26
  2425  001EA4  50EF               	movf	indf0,w,c
  2426  001EA6  E02D               	bz	l148
  2427                           ;main.c: 906: {
  2428  001EA8  0E01               	movlw	1
  2429  001EAA  ECE4  F073         	call	_RTG
  2430  001EAE  6E00               	movwf	btemp,c
  2431  001EB0  0E01               	movlw	1
  2432  001EB2  5C00               	subwf	btemp,w,c
  2433  001EB4  E326               	bnc	l148
  2434                           ;main.c: 908: {
  2435  001EB6  0E01               	movlw	1
  2436  001EB8  ECCC  F073         	call	_StartRTG
  2437                           ;main.c: 910: M.LICZNIK_ANL++;
  2438  001EBC  0101               	movlb	(_M+13) shr (0+8)
  2439  001EBE  2B0D               	incf	(_M+13)& (0+255),f,b
  2440                           ;main.c: 911: if(M.LICZNIK_ANL>=168)
  2441  001EC0  0EA7               	movlw	-89
  2442  001EC2  650D               	cpfsgt	(_M+13)& (0+255),b
  2443  001EC4  D016               	goto	l150
  2444                           ;main.c: 912: {
  2445  001EC6  6B0D               	clrf	(_M+13)& (0+255),b
  2446                           ;main.c: 914: if(!(DtCW._err_CW||DtCO._err_CO))
  2447  001EC8  0101               	movlb	_DtCW shr (0+8)
  2448  001ECA  B1A7               	btfsc	_DtCW& (0+255),0,b
  2449  001ECC  D00E               	goto	l151
  2450  001ECE  0101               	movlb	_DtCO shr (0+8)
  2451  001ED0  B1B6               	btfsc	_DtCO& (0+255),0,b
  2452  001ED2  D00B               	goto	l151
  2453                           ;main.c: 915: {
  2454  001ED4  0101               	movlb	(_PFN+1) shr (0+8)
  2455  001ED6  51A1               	movf	(_PFN+1)& (0+255),w,b
  2456  001ED8  0A02               	xorlw	2
  2457  001EDA  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2458  001EDC  E004               	bz	u1890
  2459  001EDE  51A1               	movf	(_PFN+1)& (0+255),w,b
  2460  001EE0  0A03               	xorlw	3
  2461  001EE2  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2462  001EE4  E102               	bnz	l151
  2463  001EE6                     u1890:
  2464  001EE6  0101               	movlb	(_M+3) shr (0+8)
  2465  001EE8  8103               	bsf	(_M+3)& (0+255),0,b
  2466  001EEA                     l151:
  2467                           ;main.c: 917: }
  2468  001EEA  0E04               	movlw	4
  2469  001EEC  EC96  F073         	call	_StartRTM
  2470  001EF0  D027               	goto	L42
  2471                           ;main.c: 919: eeprom_write(0x00C7,0);
  2472                           ;main.c: 920: return;
  2473  001EF2                     l150:
  2474                           ;main.c: 922: else
  2475  001EF2  0EC7               	movlw	199
  2476  001EF4  0100               	movlb	__Lparam shr (0+8)
  2477  001EF6  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2478  001EF8  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2479  001EFA  C10D  F0FB         	movff	_M+13,?_eeprom_write+2
  2480  001EFE  EC2F  F078         	call	_eeprom_write	;wreg free
  2481  001F02                     l148:
  2482                           ;main.c: 925: }
  2483  001F02  0101               	movlb	(_PFN+1) shr (0+8)
  2484  001F04  51A1               	movf	(_PFN+1)& (0+255),w,b
  2485  001F06  0A02               	xorlw	2
  2486  001F08  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2487  001F0A  E005               	bz	l154
  2488  001F0C  51A1               	movf	(_PFN+1)& (0+255),w,b
  2489  001F0E  0A03               	xorlw	3
  2490  001F10  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2491  001F12  A4D8               	btfss	status,2,c
  2492  001F14  0012               	return	
  2493                           ;main.c: 930: {
  2494  001F16                     l154:
  2495                           ;main.c: 932: }
  2496  001F16  0E02               	movlw	2
  2497  001F18  0100               	movlb	__Lparam shr (0+8)
  2498  001F1A  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2499  001F1C  C16F  FFE8         	movff	_RSDT1+75,wreg
  2500  001F20  ECC7  F076         	call	_GetBit2
  2501  001F24  A0D8               	btfss	status,0,c
  2502  001F26  0012               	return	
  2503                           ;main.c: 936: {
  2504  001F28  0101               	movlb	_DtCW shr (0+8)
  2505  001F2A  B1A7               	btfsc	_DtCW& (0+255),0,b
  2506  001F2C  0012               	return	
  2507  001F2E  0101               	movlb	_DtCO shr (0+8)
  2508  001F30  B1B6               	btfsc	_DtCO& (0+255),0,b
  2509  001F32  0012               	return	
  2510                           ;main.c: 938: {
  2511  001F34  0101               	movlb	(_M+13) shr (0+8)
  2512  001F36  6B0D               	clrf	(_M+13)& (0+255),b
  2513                           ;main.c: 940: M._AKTYWNE_AL=1;
  2514  001F38  8103               	bsf	(_M+3)& (0+255),0,b
  2515                           ;main.c: 941: StartRTM(4);
  2516  001F3A  0E04               	movlw	4
  2517  001F3C  EC96  F073         	call	_StartRTM
  2518  001F40                     L42:
  2519                           ;main.c: 942: eeprom_write(0x00C7,0);
  2520  001F40  0EC7               	movlw	199
  2521  001F42  0100               	movlb	__Lparam shr (0+8)
  2522  001F44  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2523  001F46  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2524  001F48  6BFB               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  2525  001F4A  EF2F  F078         	goto	_eeprom_write	;wreg free
  2526                           ;main.c: 943: }
  2527  001F4E                     l146:
  2528                           ;main.c: 946: else
  2529  001F4E  0E01               	movlw	1
  2530  001F50  ECCC  F073         	call	_StartRTG
  2531                           ;main.c: 949: M.LICZNIK_ANL=0;
  2532  001F54  0101               	movlb	(_M+13) shr (0+8)
  2533  001F56  6B0D               	clrf	(_M+13)& (0+255),b
  2534                           ;main.c: 950: }
  2535  001F58  0012               	return	
  2536  001F5A                     l138:
  2537                           ;main.c: 952: else M._AKTYWNE_AL=0;
  2538  001F5A  0101               	movlb	(_M+3) shr (0+8)
  2539  001F5C  9103               	bcf	(_M+3)& (0+255),0,b
  2540                           ;main.c: 954: }
  2541  001F5E  0012               	return	
  2542  001F60                     __end_of_DecyzjaAntyLeg:
  2543                           ;main.c: 958: void DecWSW(void)
  2544                           ;main.c: 959: {
  2545  001F60                     _DecWSW:
  2546  000000                     
  2547                           ;main.c: 1058: }
  2548  001F60  0012               	return	
  2549  001F62                     __end_of_DecWSW:
  2550                           ;main.c: 1062: void DecERR(void)
  2551                           ;main.c: 1063: {
  2552  001F62                     _DecERR:
  2553  000000                     
  2554                           ;main.c: 1064: unsigned char KnfDisErr=0;
  2555  001F62  6AD9               	clrf	fsr2l,c
  2556                           ;main.c: 1065: unsigned char w;
  2557  001F64  0101               	movlb	(_M+3) shr (0+8)
  2558  001F66  A503               	btfss	(_M+3)& (0+255),2,b
  2559  001F68  D00F               	goto	u2030
  2560  001F6A  C232  F000         	movff	_DtKNF+2,btemp
  2561  001F6E  0400               	decf	btemp,w,c
  2562  001F70  E009               	bz	u2031
  2563  001F72  C232  FFE8         	movff	_DtKNF+2,wreg
  2564  001F76  0A02               	xorlw	2
  2565  001F78  E107               	bnz	u2030
  2566  001F7A  0E03               	movlw	3
  2567  001F7C  0102               	movlb	(_DtKNF+1) shr (0+8)
  2568  001F7E  6131               	cpfslt	(_DtKNF+1)& (0+255),b
  2569  001F80  D001               	goto	u2031
  2570  001F82  D002               	goto	u2030
  2571  001F84                     u2031:
  2572  001F84  0E01               	movlw	1
  2573  001F86  D001               	goto	u2040
  2574  001F88                     u2030:
  2575  001F88  0E00               	movlw	0
  2576  001F8A                     u2040:
  2577  001F8A  0100               	movlb	__Lparam shr (0+8)
  2578  001F8C  6FEA               	movwf	(?a_DecERR+1)^(__Lparam& (0+65280)),b
  2579                           ;main.c: 1073: if(!RdPrt(4))
  2580  001F8E  0E04               	movlw	4
  2581  001F90  EC4C  F06F         	call	_RdPrt
  2582  001F94  E20D               	bc	l161
  2583                           ;main.c: 1074: {
  2584  001F96  0E02               	movlw	2
  2585  001F98  CFE8 F10E          	movff	wreg,_M+14
  2586                           ;main.c: 1076: PrintErr(0x02,1);
  2587  001F9C  0E01               	movlw	1
  2588  001F9E  0100               	movlb	__Lparam shr (0+8)
  2589  001FA0  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2590  001FA2  0E02               	movlw	2
  2591  001FA4  EC44  F076         	call	_PrintErr
  2592                           ;main.c: 1077: ToWriteESTAT();
  2593  001FA8  EC32  F073         	call	_ToWriteESTAT	;wreg free
  2594                           ;main.c: 1078: ErrPTG();
  2595  001FAC  EC9C  F01E         	call	_ErrPTG	;wreg free
  2596  001FB0                     l161:
  2597                           ;main.c: 1079: }
  2598  001FB0  0101               	movlb	(_M+2) shr (0+8)
  2599  001FB2  A302               	btfss	(_M+2)& (0+255),1,b
  2600  001FB4  D00D               	goto	l162
  2601                           ;main.c: 1082: {
  2602  001FB6  6B0E               	clrf	(_M+14)& (0+255),b
  2603                           ;main.c: 1084: if(KnfDisErr) EndErr();
  2604  001FB8  0100               	movlb	__Lparam shr (0+8)
  2605  001FBA  51EA               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2606  001FBC  E003               	bz	l163
  2607  001FBE  EC8C  F076         	call	_EndErr	;wreg free
  2608  001FC2  D018               	goto	l168
  2609  001FC4                     l163:
  2610                           ;main.c: 1085: else PrintErr(0x01,0);
  2611  001FC4  0100               	movlb	__Lparam shr (0+8)
  2612  001FC6  6BEB               	clrf	?_PrintErr^(__Lparam& (0+65280)),b
  2613  001FC8  0E01               	movlw	1
  2614  001FCA  EC44  F076         	call	_PrintErr
  2615  001FCE  D012               	goto	l168
  2616                           ;main.c: 1086: M._RUSZ_NTC_CO=0;
  2617                           ;main.c: 1087: M._RUSZ_CISN=0;
  2618                           ;main.c: 1088: M._RUSZ_NCISN=0;
  2619                           ;main.c: 1089: M._RUSZ_NTC_CW=0;
  2620                           ;main.c: 1090: M._RUSZ_MOD=0;
  2621                           ;main.c: 1091: M._RUSZ_NTC_IN = 0;
  2622                           ;main.c: 1092: }
  2623  001FD0                     l162:
  2624                           ;main.c: 1093: else
  2625  001FD0  0101               	movlb	(_M+2) shr (0+8)
  2626  001FD2  A102               	btfss	(_M+2)& (0+255),0,b
  2627  001FD4  D012               	goto	l166
  2628                           ;main.c: 1095: {
  2629  001FD6  6B0E               	clrf	(_M+14)& (0+255),b
  2630                           ;main.c: 1097: if(KnfDisErr) EndErr();
  2631  001FD8  0100               	movlb	__Lparam shr (0+8)
  2632  001FDA  51EA               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2633  001FDC  E003               	bz	l167
  2634  001FDE  EC8C  F076         	call	_EndErr	;wreg free
  2635  001FE2  D008               	goto	l168
  2636  001FE4                     l167:
  2637                           ;main.c: 1098: else
  2638  001FE4  0101               	movlb	(_M+5) shr (0+8)
  2639  001FE6  A905               	btfss	(_M+5)& (0+255),4,b
  2640  001FE8  D005               	goto	l168
  2641                           ;main.c: 1101: {
  2642  001FEA  0100               	movlb	__Lparam shr (0+8)
  2643  001FEC  6BEB               	clrf	?_PrintErr^(__Lparam& (0+65280)),b
  2644  001FEE  0E03               	movlw	3
  2645  001FF0  EC44  F076         	call	_PrintErr
  2646  001FF4                     l168:
  2647                           ;main.c: 1103: }
  2648  001FF4  0101               	movlb	(_M+3) shr (0+8)
  2649  001FF6  9903               	bcf	(_M+3)& (0+255),4,b
  2650  001FF8  D044               	goto	L4
  2651                           ;main.c: 1106: M._RUSZ_CISN=0;
  2652                           ;main.c: 1107: M._RUSZ_NCISN=0;
  2653                           ;main.c: 1108: M._RUSZ_NTC_CW=0;
  2654                           ;main.c: 1109: M._RUSZ_MOD=0;
  2655                           ;main.c: 1110: M._RUSZ_NTC_IN = 0;
  2656                           ;main.c: 1111: }
  2657  001FFA                     l166:
  2658                           ;main.c: 1112: else
  2659  001FFA  0E12               	movlw	18
  2660  001FFC  EC4C  F06F         	call	_RdPrt
  2661  002000  E308               	bnc	u2151
  2662  002002  C237  F000         	movff	_DtKNF+7,btemp
  2663  002006  0400               	decf	btemp,w,c
  2664  002008  E004               	bz	u2151
  2665  00200A  C237  FFE8         	movff	_DtKNF+7,wreg
  2666  00200E  0A02               	xorlw	2
  2667  002010  E112               	bnz	u2250
  2668  002012                     u2151:
  2669  002012  0E12               	movlw	18
  2670  002014  EC4C  F06F         	call	_RdPrt
  2671  002018  E320               	bnc	l171
  2672  00201A  0101               	movlb	_M shr (0+8)
  2673  00201C  B300               	btfsc	_M& (0+255),1,b
  2674  00201E  D01D               	goto	l171
  2675  002020  0101               	movlb	_M shr (0+8)
  2676  002022  B900               	btfsc	_M& (0+255),4,b
  2677  002024  D01A               	goto	l171
  2678  002026  C237  F000         	movff	_DtKNF+7,btemp
  2679  00202A  0400               	decf	btemp,w,c
  2680  00202C  E004               	bz	u2250
  2681  00202E  C237  FFE8         	movff	_DtKNF+7,wreg
  2682  002032  0A02               	xorlw	2
  2683  002034  E112               	bnz	l171
  2684  002036                     u2250:
  2685                           ;main.c: 1115: {
  2686  002036  0E04               	movlw	4
  2687  002038  CFE8 F10E          	movff	wreg,_M+14
  2688                           ;main.c: 1117: if(KnfDisErr) EndErr();
  2689  00203C  0100               	movlb	__Lparam shr (0+8)
  2690  00203E  51EA               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2691  002040  E003               	bz	l172
  2692  002042  EC8C  F076         	call	_EndErr	;wreg free
  2693  002046  D006               	goto	l173
  2694  002048                     l172:
  2695                           ;main.c: 1118: else PrintErr(0x04,1);
  2696  002048  0E01               	movlw	1
  2697  00204A  0100               	movlb	__Lparam shr (0+8)
  2698  00204C  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2699  00204E  0E04               	movlw	4
  2700  002050  EC44  F076         	call	_PrintErr
  2701  002054                     l173:
  2702                           ;main.c: 1119: M._RUSZ_NTC_CO=1;
  2703  002054  0101               	movlb	(_M+3) shr (0+8)
  2704  002056  8903               	bsf	(_M+3)& (0+255),4,b
  2705  002058  D014               	goto	L4
  2706                           ;main.c: 1120: M._RUSZ_CISN=0;
  2707                           ;main.c: 1121: M._RUSZ_NCISN=0;
  2708                           ;main.c: 1122: M._RUSZ_NTC_CW=0;
  2709                           ;main.c: 1123: M._RUSZ_MOD=0;
  2710                           ;main.c: 1124: M._RUSZ_NTC_IN = 0;
  2711                           ;main.c: 1125: }
  2712  00205A                     l171:
  2713                           ;main.c: 1126: else
  2714  00205A  0101               	movlb	(_M+3) shr (0+8)
  2715  00205C  9903               	bcf	(_M+3)& (0+255),4,b
  2716                           ;main.c: 1130: if(M._RUSZ_POMPE)
  2717  00205E  A702               	btfss	(_M+2)& (0+255),3,b
  2718  002060  D013               	goto	l175
  2719                           ;main.c: 1131: {
  2720  002062  6B0E               	clrf	(_M+14)& (0+255),b
  2721                           ;main.c: 1133: if(KnfDisErr) EndErr();
  2722  002064  0100               	movlb	__Lparam shr (0+8)
  2723  002066  51EA               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2724  002068  E003               	bz	l176
  2725  00206A  EC8C  F076         	call	_EndErr	;wreg free
  2726  00206E  D008               	goto	l177
  2727  002070                     l176:
  2728                           ;main.c: 1134: else
  2729  002070  0101               	movlb	(_M+5) shr (0+8)
  2730  002072  AB05               	btfss	(_M+5)& (0+255),5,b
  2731  002074  D005               	goto	l177
  2732  002076  0100               	movlb	__Lparam shr (0+8)
  2733  002078  6BEB               	clrf	?_PrintErr^(__Lparam& (0+65280)),b
  2734  00207A  0E05               	movlw	5
  2735  00207C  EC44  F076         	call	_PrintErr
  2736  002080                     l177:
  2737                           ;main.c: 1137: }
  2738  002080  0101               	movlb	(_M+4) shr (0+8)
  2739  002082                     L4:
  2740  002082  9304               	bcf	(_M+4)& (0+255),1,b
  2741                           ;main.c: 1139: M._RUSZ_NCISN=0;
  2742  002084  9504               	bcf	(_M+4)& (0+255),2,b
  2743  002086  D030               	goto	L6
  2744                           ;main.c: 1140: M._RUSZ_NTC_CW=0;
  2745                           ;main.c: 1141: M._RUSZ_MOD=0;
  2746                           ;main.c: 1142: M._RUSZ_NTC_IN = 0;
  2747                           ;main.c: 1143: }
  2748  002088                     l175:
  2749                           ;main.c: 1144: else
  2750  002088  0E0E               	movlw	14
  2751  00208A  EC4C  F06F         	call	_RdPrt
  2752  00208E  E313               	bnc	l180
  2753                           ;main.c: 1148: {
  2754  002090  0E08               	movlw	8
  2755  002092  CFE8 F10E          	movff	wreg,_M+14
  2756                           ;main.c: 1150: if(KnfDisErr) EndErr();
  2757  002096  0100               	movlb	__Lparam shr (0+8)
  2758  002098  51EA               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2759  00209A  E003               	bz	l181
  2760  00209C  EC8C  F076         	call	_EndErr	;wreg free
  2761  0020A0  D006               	goto	l182
  2762  0020A2                     l181:
  2763                           ;main.c: 1151: else PrintErr(0x08,1);
  2764  0020A2  0E01               	movlw	1
  2765  0020A4  0100               	movlb	__Lparam shr (0+8)
  2766  0020A6  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2767  0020A8  0E08               	movlw	8
  2768  0020AA  EC44  F076         	call	_PrintErr
  2769  0020AE                     l182:
  2770                           ;main.c: 1152: M._RUSZ_NCISN=1;
  2771  0020AE  0101               	movlb	(_M+4) shr (0+8)
  2772  0020B0  8504               	bsf	(_M+4)& (0+255),2,b
  2773                           ;main.c: 1153: M._RUSZ_CISN=0;
  2774  0020B2  9304               	bcf	(_M+4)& (0+255),1,b
  2775  0020B4  D019               	goto	L6
  2776                           ;main.c: 1154: M._RUSZ_NTC_CW=0;
  2777                           ;main.c: 1155: M._RUSZ_MOD=0;
  2778                           ;main.c: 1156: M._RUSZ_NTC_IN = 0;
  2779                           ;main.c: 1157: }
  2780  0020B6                     l180:
  2781                           ;main.c: 1158: else
  2782  0020B6  0101               	movlb	(_M+4) shr (0+8)
  2783  0020B8  9504               	bcf	(_M+4)& (0+255),2,b
  2784                           ;main.c: 1162: if(!RdPrt(15))
  2785  0020BA  0E0F               	movlw	15
  2786  0020BC  EC4C  F06F         	call	_RdPrt
  2787  0020C0  E215               	bc	l184
  2788                           ;main.c: 1163: {
  2789  0020C2  0E09               	movlw	9
  2790  0020C4  CFE8 F10E          	movff	wreg,_M+14
  2791                           ;main.c: 1166: if(KnfDisErr) EndErr();
  2792  0020C8  0100               	movlb	__Lparam shr (0+8)
  2793  0020CA  51EA               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2794  0020CC  E003               	bz	l185
  2795  0020CE  EC8C  F076         	call	_EndErr	;wreg free
  2796  0020D2  D008               	goto	l186
  2797  0020D4                     l185:
  2798                           ;main.c: 1167: else PrintErrCs(0x09,DtCS.CS,1);
  2799  0020D4  C19B  F0EB         	movff	_DtCS+3,?_PrintErrCs
  2800  0020D8  0E01               	movlw	1
  2801  0020DA  0100               	movlb	__Lparam shr (0+8)
  2802  0020DC  6FEC               	movwf	(?_PrintErrCs+1)^(__Lparam& (0+65280)),b
  2803  0020DE  0E09               	movlw	9
  2804  0020E0  EC66  F076         	call	_PrintErrCs
  2805  0020E4                     l186:
  2806                           ;main.c: 1168: M._RUSZ_CISN=1;
  2807  0020E4  0101               	movlb	(_M+4) shr (0+8)
  2808  0020E6  8304               	bsf	(_M+4)& (0+255),1,b
  2809  0020E8                     L6:
  2810                           ;main.c: 1169: M._RUSZ_NTC_CW=0;
  2811  0020E8  9B03               	bcf	(_M+3)& (0+255),5,b
  2812  0020EA  D060               	goto	L7
  2813                           ;main.c: 1170: M._RUSZ_MOD=0;
  2814                           ;main.c: 1171: M._RUSZ_NTC_IN = 0;
  2815                           ;main.c: 1172: }
  2816  0020EC                     l184:
  2817                           ;main.c: 1173: else
  2818  0020EC  0101               	movlb	(_M+4) shr (0+8)
  2819  0020EE  9304               	bcf	(_M+4)& (0+255),1,b
  2820                           ;main.c: 1176: if(DtKNF.tpkt!=0)
  2821  0020F0  EE02  F037         	lfsr	0,_DtKNF+7
  2822  0020F4  50EF               	movf	indf0,w,c
  2823  0020F6  E017               	bz	l188
  2824                           ;main.c: 1177: {
  2825  0020F8  0101               	movlb	_DtCW shr (0+8)
  2826  0020FA  A1A7               	btfss	_DtCW& (0+255),0,b
  2827  0020FC  D005               	goto	u2370
  2828  0020FE  0101               	movlb	(_PFN+1) shr (0+8)
  2829  002100  51A1               	movf	(_PFN+1)& (0+255),w,b
  2830  002102  0A02               	xorlw	2
  2831  002104  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2832  002106  E027               	bz	u2571
  2833  002108                     u2370:
  2834  002108  0101               	movlb	(_PFN+1) shr (0+8)
  2835  00210A  51A1               	movf	(_PFN+1)& (0+255),w,b
  2836  00210C  0A03               	xorlw	3
  2837  00210E  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2838  002110  E138               	bnz	u2680
  2839  002112  0101               	movlb	_DtCW shr (0+8)
  2840  002114  A1A7               	btfss	_DtCW& (0+255),0,b
  2841  002116  D035               	goto	u2680
  2842  002118  0101               	movlb	_M shr (0+8)
  2843  00211A  A900               	btfss	_M& (0+255),4,b
  2844  00211C  B300               	btfsc	_M& (0+255),1,b
  2845  00211E  D01B               	goto	u2571
  2846  002120  B700               	btfsc	_M& (0+255),3,b
  2847  002122  D019               	goto	u2571
  2848  002124  D02E               	goto	u2680
  2849                           ;main.c: 1179: }
  2850  002126                     l188:
  2851                           ;main.c: 1180: else
  2852  002126  EE02  F049         	lfsr	0,_DtKNF+25
  2853  00212A  50EF               	movf	indf0,w,c
  2854  00212C  E116               	bnz	l190
  2855                           ;main.c: 1183: {
  2856  00212E  0101               	movlb	_DtCW shr (0+8)
  2857  002130  A1A7               	btfss	_DtCW& (0+255),0,b
  2858  002132  D005               	goto	u2520
  2859  002134  0101               	movlb	(_PFN+1) shr (0+8)
  2860  002136  51A1               	movf	(_PFN+1)& (0+255),w,b
  2861  002138  0A02               	xorlw	2
  2862  00213A  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2863  00213C  E00C               	bz	u2571
  2864  00213E                     u2520:
  2865  00213E  0101               	movlb	(_PFN+1) shr (0+8)
  2866  002140  51A1               	movf	(_PFN+1)& (0+255),w,b
  2867  002142  0A03               	xorlw	3
  2868  002144  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2869  002146  E11D               	bnz	u2680
  2870  002148  0101               	movlb	_DtCW shr (0+8)
  2871  00214A  A1A7               	btfss	_DtCW& (0+255),0,b
  2872  00214C  D01A               	goto	u2680
  2873  00214E  0E0B               	movlw	11
  2874  002150  EC4C  F06F         	call	_RdPrt
  2875  002154  E316               	bnc	u2680
  2876  002156                     u2571:
  2877  002156  0E01               	movlw	1
  2878  002158  D015               	goto	u2690
  2879                           ;main.c: 1185: }
  2880  00215A                     l190:
  2881                           ;main.c: 1186: else
  2882  00215A  0101               	movlb	_DtCW shr (0+8)
  2883  00215C  A1A7               	btfss	_DtCW& (0+255),0,b
  2884  00215E  D005               	goto	u2620
  2885  002160  0101               	movlb	(_PFN+1) shr (0+8)
  2886  002162  51A1               	movf	(_PFN+1)& (0+255),w,b
  2887  002164  0A02               	xorlw	2
  2888  002166  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2889  002168  E0F6               	bz	u2571
  2890  00216A                     u2620:
  2891  00216A  0101               	movlb	(_PFN+1) shr (0+8)
  2892  00216C  51A1               	movf	(_PFN+1)& (0+255),w,b
  2893  00216E  0A03               	xorlw	3
  2894  002170  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2895  002172  E107               	bnz	u2680
  2896  002174  0101               	movlb	_DtCW shr (0+8)
  2897  002176  A1A7               	btfss	_DtCW& (0+255),0,b
  2898  002178  D004               	goto	u2680
  2899  00217A  0E06               	movlw	6
  2900  00217C  EC4C  F06F         	call	_RdPrt
  2901  002180  E2EA               	bc	u2571
  2902  002182                     u2680:
  2903  002182  0E00               	movlw	0
  2904  002184                     u2690:
  2905  002184  0100               	movlb	__Lparam shr (0+8)
  2906  002186  6FE9               	movwf	?a_DecERR^(__Lparam& (0+65280)),b
  2907                           ;main.c: 1189: }
  2908  002188  51E9               	movf	?a_DecERR^(__Lparam& (0+65280)),w
  2909  00218A  E012               	bz	l192
  2910                           ;main.c: 1193: {
  2911  00218C  0E0A               	movlw	10
  2912  00218E  CFE8 F10E          	movff	wreg,_M+14
  2913                           ;main.c: 1195: if(KnfDisErr) EndErr();
  2914  002192  51EA               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2915  002194  E003               	bz	l193
  2916  002196  EC8C  F076         	call	_EndErr	;wreg free
  2917  00219A  D006               	goto	l194
  2918  00219C                     l193:
  2919                           ;main.c: 1196: else PrintErr(0x0A,1);
  2920  00219C  0E01               	movlw	1
  2921  00219E  0100               	movlb	__Lparam shr (0+8)
  2922  0021A0  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2923  0021A2  0E0A               	movlw	10
  2924  0021A4  EC44  F076         	call	_PrintErr
  2925  0021A8                     l194:
  2926                           ;main.c: 1197: M._RUSZ_NTC_CW=1;
  2927  0021A8  0101               	movlb	(_M+3) shr (0+8)
  2928  0021AA  8B03               	bsf	(_M+3)& (0+255),5,b
  2929  0021AC                     L7:
  2930                           ;main.c: 1198: M._RUSZ_MOD=0;
  2931  0021AC  9104               	bcf	(_M+4)& (0+255),0,b
  2932  0021AE  D03D               	goto	L11
  2933                           ;main.c: 1199: M._RUSZ_NTC_IN = 0;
  2934                           ;main.c: 1200: }
  2935  0021B0                     l192:
  2936                           ;main.c: 1201: else
  2937  0021B0  0101               	movlb	(_M+3) shr (0+8)
  2938  0021B2  9B03               	bcf	(_M+3)& (0+255),5,b
  2939                           ;main.c: 1205: if(!RdPrt(8))
  2940  0021B4  0E08               	movlw	8
  2941  0021B6  EC4C  F06F         	call	_RdPrt
  2942  0021BA  E212               	bc	l196
  2943                           ;main.c: 1206: {
  2944  0021BC  0E07               	movlw	7
  2945  0021BE  CFE8 F10E          	movff	wreg,_M+14
  2946                           ;main.c: 1208: if(KnfDisErr) EndErr();
  2947  0021C2  0100               	movlb	__Lparam shr (0+8)
  2948  0021C4  51EA               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2949  0021C6  E003               	bz	l197
  2950  0021C8  EC8C  F076         	call	_EndErr	;wreg free
  2951  0021CC  D006               	goto	l198
  2952  0021CE                     l197:
  2953                           ;main.c: 1209: else PrintErr(0x07,1);
  2954  0021CE  0E01               	movlw	1
  2955  0021D0  0100               	movlb	__Lparam shr (0+8)
  2956  0021D2  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2957  0021D4  0E07               	movlw	7
  2958  0021D6  EC44  F076         	call	_PrintErr
  2959  0021DA                     l198:
  2960                           ;main.c: 1210: M._RUSZ_MOD=1;
  2961  0021DA  0101               	movlb	(_M+4) shr (0+8)
  2962  0021DC  8104               	bsf	(_M+4)& (0+255),0,b
  2963  0021DE  D025               	goto	L11
  2964                           ;main.c: 1211: M._RUSZ_NTC_IN = 0;
  2965                           ;main.c: 1212: }
  2966  0021E0                     l196:
  2967                           ;main.c: 1213: else
  2968  0021E0  0101               	movlb	(_M+4) shr (0+8)
  2969  0021E2  9104               	bcf	(_M+4)& (0+255),0,b
  2970                           ;main.c: 1216: if(DtKNF.rdpm != 0)
  2971  0021E4  EE02  F03D         	lfsr	0,_DtKNF+13
  2972  0021E8  50EF               	movf	indf0,w,c
  2973  0021EA  E01E               	bz	l200
  2974                           ;main.c: 1217: {
  2975  0021EC  0101               	movlb	(_PFN+1) shr (0+8)
  2976  0021EE  51A1               	movf	(_PFN+1)& (0+255),w,b
  2977  0021F0  0A03               	xorlw	3
  2978  0021F2  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  2979  0021F4  E119               	bnz	l200
  2980  0021F6  0101               	movlb	(_M+4) shr (0+8)
  2981  0021F8  BD04               	btfsc	(_M+4)& (0+255),6,b
  2982  0021FA  B705               	btfsc	(_M+5)& (0+255),3,b
  2983  0021FC  D015               	goto	l200
  2984  0021FE  0101               	movlb	_DtIN shr (0+8)
  2985  002200  A1C7               	btfss	_DtIN& (0+255),0,b
  2986  002202  D012               	goto	l200
  2987                           ;main.c: 1219: {
  2988  002204  0E0E               	movlw	14
  2989  002206  CFE8 F10E          	movff	wreg,_M+14
  2990                           ;main.c: 1221: if(KnfDisErr) EndErr();
  2991  00220A  0100               	movlb	__Lparam shr (0+8)
  2992  00220C  51EA               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2993  00220E  E003               	bz	l202
  2994  002210  EC8C  F076         	call	_EndErr	;wreg free
  2995  002214  D006               	goto	l203
  2996  002216                     l202:
  2997                           ;main.c: 1222: else PrintErr(0x0E,1);
  2998  002216  0E01               	movlw	1
  2999  002218  0100               	movlb	__Lparam shr (0+8)
  3000  00221A  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  3001  00221C  0E0E               	movlw	14
  3002  00221E  EC44  F076         	call	_PrintErr
  3003  002222                     l203:
  3004                           ;main.c: 1223: M._RUSZ_NTC_IN = 1;
  3005  002222  0101               	movlb	(_M+3) shr (0+8)
  3006  002224  8D03               	bsf	(_M+3)& (0+255),6,b
  3007                           ;main.c: 1224: }
  3008  002226  D002               	goto	l165
  3009                           ;main.c: 1225: else
  3010                           ;main.c: 1228: }
  3011  002228                     l200:
  3012                           ;main.c: 1230: else
  3013  002228  0101               	movlb	(_M+3) shr (0+8)
  3014  00222A                     L11:
  3015  00222A  9D03               	bcf	(_M+3)& (0+255),6,b
  3016  00222C                     l165:
  3017                           ;main.c: 1233: }
  3018  00222C  0101               	movlb	(_M+2) shr (0+8)
  3019  00222E  B302               	btfsc	(_M+2)& (0+255),1,b
  3020  002230  D024               	goto	l206
  3021  002232  0E05               	movlw	5
  3022  002234  EC4C  F06F         	call	_RdPrt
  3023  002238  E220               	bc	l206
  3024  00223A  0101               	movlb	(_M+1) shr (0+8)
  3025  00223C  A701               	btfss	(_M+1)& (0+255),3,b
  3026  00223E  A083               	btfss	3971,0,c	;volatile
  3027  002240  D01C               	goto	l206
  3028                           ;main.c: 1246: {
  3029  002242  0101               	movlb	(_M+4) shr (0+8)
  3030  002244  AB04               	btfss	(_M+4)& (0+255),5,b
  3031  002246  D00E               	goto	l207
  3032                           ;main.c: 1248: {
  3033  002248  A683               	btfss	3971,3,c	;volatile
  3034  00224A  D008               	goto	l208
  3035                           ;main.c: 1250: {
  3036  00224C  0E03               	movlw	3
  3037  00224E  EC4C  F06F         	call	_RdPrt
  3038  002252  E313               	bnc	l206
  3039  002254  0E04               	movlw	4
  3040  002256  EC4C  F06F         	call	_RdPrt
  3041  00225A  D00B               	goto	L18
  3042                           ;main.c: 1252: {
  3043                           ;main.c: 1254: M._RUSZ_PLOMIEN=1;
  3044                           ;main.c: 1255: }
  3045  00225C                     l208:
  3046                           ;main.c: 1257: else
  3047  00225C  0E04               	movlw	4
  3048  00225E  EC4C  F06F         	call	_RdPrt
  3049  002262  D007               	goto	L18
  3050                           ;main.c: 1260: {
  3051                           ;main.c: 1262: M._RUSZ_PLOMIEN=1;
  3052                           ;main.c: 1263: }
  3053  002264                     l207:
  3054                           ;main.c: 1266: else
  3055  002264  0E02               	movlw	2
  3056  002266  EC4C  F06F         	call	_RdPrt
  3057  00226A  E307               	bnc	l206
  3058  00226C  0E04               	movlw	4
  3059  00226E  EC4C  F06F         	call	_RdPrt
  3060  002272                     L18:
  3061  002272  E303               	bnc	l206
  3062                           ;main.c: 1269: {
  3063  002274  0101               	movlb	(_M+22) shr (0+8)
  3064  002276  6B16               	clrf	(_M+22)& (0+255),b
  3065                           ;main.c: 1271: M._RUSZ_PLOMIEN=1;
  3066  002278  8302               	bsf	(_M+2)& (0+255),1,b
  3067  00227A                     l206:
  3068                           ;main.c: 1272: }
  3069  00227A  0101               	movlb	(_M+4) shr (0+8)
  3070  00227C  BB04               	btfsc	(_M+4)& (0+255),5,b
  3071  00227E  D011               	goto	l214
  3072                           ;main.c: 1278: {
  3073  002280  B102               	btfsc	(_M+2)& (0+255),0,b
  3074  002282  D040               	goto	l216
  3075  002284  0E02               	movlw	2
  3076  002286  EC4C  F06F         	call	_RdPrt
  3077  00228A  E23C               	bc	l216
  3078  00228C  0E04               	movlw	4
  3079  00228E  EC4C  F06F         	call	_RdPrt
  3080  002292  E338               	bnc	l216
  3081  002294  0101               	movlb	(_M+4) shr (0+8)
  3082  002296  AD04               	btfss	(_M+4)& (0+255),6,b
  3083  002298  D035               	goto	l216
  3084                           ;main.c: 1280: {
  3085  00229A  0101               	movlb	(_M+23) shr (0+8)
  3086  00229C  6B17               	clrf	(_M+23)& (0+255),b
  3087                           ;main.c: 1282: M._RUSZ_CIAG=1;
  3088  00229E  8102               	bsf	(_M+2)& (0+255),0,b
  3089                           ;main.c: 1293: }
  3090  0022A0  D031               	goto	l216
  3091  0022A2                     l214:
  3092                           ;main.c: 1295: else
  3093  0022A2  0101               	movlb	(_M+2) shr (0+8)
  3094  0022A4  A102               	btfss	(_M+2)& (0+255),0,b
  3095  0022A6  B701               	btfsc	(_M+1)& (0+255),3,b
  3096  0022A8  D02D               	goto	l216
  3097  0022AA  0101               	movlb	(_M+5) shr (0+8)
  3098  0022AC  B505               	btfsc	(_M+5)& (0+255),2,b
  3099  0022AE  D02A               	goto	l216
  3100  0022B0  0E03               	movlw	3
  3101  0022B2  EC4C  F06F         	call	_RdPrt
  3102  0022B6  A0D8               	btfss	status,0,c
  3103  0022B8  A683               	btfss	3971,3,c	;volatile
  3104  0022BA  D001               	goto	u3141
  3105  0022BC  D006               	goto	u3190
  3106  0022BE                     u3141:
  3107  0022BE  0E03               	movlw	3
  3108  0022C0  EC4C  F06F         	call	_RdPrt
  3109  0022C4  B0D8               	btfsc	status,0,c
  3110  0022C6  B683               	btfsc	3971,3,c	;volatile
  3111  0022C8  D01D               	goto	l216
  3112  0022CA                     u3190:
  3113                           ;main.c: 1298: {
  3114  0022CA  0101               	movlb	(_M+23) shr (0+8)
  3115  0022CC  6B17               	clrf	(_M+23)& (0+255),b
  3116                           ;main.c: 1300: M._RUSZ_CIAG=1;
  3117  0022CE  8102               	bsf	(_M+2)& (0+255),0,b
  3118                           ;main.c: 1301: if(!M.LICZNIK_CIG) StartRTS(11);
  3119  0022D0  EE01  F00A         	lfsr	0,_M+10
  3120  0022D4  50EF               	movf	indf0,w,c
  3121  0022D6  E103               	bnz	l218
  3122  0022D8  0E0B               	movlw	11
  3123  0022DA  EC6F  F073         	call	_StartRTS
  3124  0022DE                     l218:
  3125                           ;main.c: 1302: M.LICZNIK_CIG++;
  3126  0022DE  0101               	movlb	(_M+10) shr (0+8)
  3127  0022E0  2B0A               	incf	(_M+10)& (0+255),f,b
  3128                           ;main.c: 1303: if(M.LICZNIK_CIG>=5)
  3129  0022E2  0E04               	movlw	4
  3130  0022E4  650A               	cpfsgt	(_M+10)& (0+255),b
  3131  0022E6  D00E               	goto	l216
  3132                           ;main.c: 1304: {
  3133  0022E8  6B0A               	clrf	(_M+10)& (0+255),b
  3134                           ;main.c: 1306: M.ERR_BTY=0x03;
  3135  0022EA  0E03               	movlw	3
  3136  0022EC  CFE8 F10E          	movff	wreg,_M+14
  3137                           ;main.c: 1307: PrintErr(0x03,1);
  3138  0022F0  0E01               	movlw	1
  3139  0022F2  0100               	movlb	__Lparam shr (0+8)
  3140  0022F4  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  3141  0022F6  0E03               	movlw	3
  3142  0022F8  EC44  F076         	call	_PrintErr
  3143                           ;main.c: 1308: ToWriteESTAT();
  3144  0022FC  EC32  F073         	call	_ToWriteESTAT	;wreg free
  3145                           ;main.c: 1309: ErrPTG();
  3146  002300  EC9C  F01E         	call	_ErrPTG	;wreg free
  3147  002304                     l216:
  3148                           ;main.c: 1310: }
  3149  002304  0101               	movlb	(_M+2) shr (0+8)
  3150  002306  A302               	btfss	(_M+2)& (0+255),1,b
  3151  002308  B102               	btfsc	(_M+2)& (0+255),0,b
  3152  00230A  0012               	return	
  3153                           ;main.c: 1319: if(!M._RUSZ_NTC_CO&&!M._RUSZ_NCIS
      +                          N&&!M._RUSZ_CISN)
  3154  00230C  0101               	movlb	(_M+3) shr (0+8)
  3155  00230E  A903               	btfss	(_M+3)& (0+255),4,b
  3156  002310  B504               	btfsc	(_M+4)& (0+255),2,b
  3157  002312  0012               	return	
  3158  002314  0101               	movlb	(_M+4) shr (0+8)
  3159  002316  B304               	btfsc	(_M+4)& (0+255),1,b
  3160  002318  0012               	return	
  3161                           ;main.c: 1320: if(!M._RUSZ_NTC_CW&&!M._RUSZ_MOD&
      +                          &!M._RUSZ_NTC_IN&&!M._RUSZ_POMPE)
  3162  00231A  0101               	movlb	(_M+3) shr (0+8)
  3163  00231C  AB03               	btfss	(_M+3)& (0+255),5,b
  3164  00231E  B104               	btfsc	(_M+4)& (0+255),0,b
  3165  002320  0012               	return	
  3166  002322  BD03               	btfsc	(_M+3)& (0+255),6,b
  3167  002324  0012               	return	
  3168  002326  0101               	movlb	(_M+2) shr (0+8)
  3169  002328  B702               	btfsc	(_M+2)& (0+255),3,b
  3170  00232A  0012               	return	
  3171                           ;main.c: 1321: {
  3172  00232C  0101               	movlb	(_M+14) shr (0+8)
  3173  00232E  6B0E               	clrf	(_M+14)& (0+255),b
  3174                           ;main.c: 1323: EndErr();
  3175  002330  EF8C  F076         	goto	_EndErr	;wreg free
  3176                           ;main.c: 1324: }
  3177  002334                     __end_of_DecERR:
  3178                           ;main.c: 1329: void DecSTR(void)
  3179                           ;main.c: 1330: {
  3180  002334                     _DecSTR:
  3181  000000                     
  3182                           ;main.c: 1332: if(RTS(10)>=3)
  3183  002334  0E0A               	movlw	10
  3184  002336  EC87  F073         	call	_RTS
  3185  00233A  6E00               	movwf	btemp,c
  3186  00233C  0E03               	movlw	3
  3187  00233E  5C00               	subwf	btemp,w,c
  3188  002340  E303               	bnc	l224
  3189                           ;main.c: 1333: {
  3190  002342  0101               	movlb	(_M+4) shr (0+8)
  3191  002344  9904               	bcf	(_M+4)& (0+255),4,b
  3192                           ;main.c: 1335: M._RS_START=0;
  3193  002346  9704               	bcf	(_M+4)& (0+255),3,b
  3194  002348                     l224:
  3195                           ;main.c: 1336: }
  3196  002348  ECD1  F03E         	call	_SetTrbPGD	;wreg free
  3197                           ;main.c: 1342: if(!M._ROZRUCH&&RD0&&DtCO._ldDCO)
      +                           M._RUN_MNMOD=1;
  3198  00234C  0101               	movlb	(_M+1) shr (0+8)
  3199  00234E  A701               	btfss	(_M+1)& (0+255),3,b
  3200  002350  A083               	btfss	3971,0,c	;volatile
  3201  002352  D006               	goto	l225
  3202  002354  0101               	movlb	(_DtCO+1) shr (0+8)
  3203  002356  A9B7               	btfss	(_DtCO+1)& (0+255),4,b
  3204  002358  D003               	goto	l225
  3205  00235A  0101               	movlb	(_M+5) shr (0+8)
  3206  00235C  8105               	bsf	(_M+5)& (0+255),0,b
  3207  00235E  D002               	goto	l226
  3208  002360                     l225:
  3209                           ;main.c: 1343: else M._RUN_MNMOD=0;
  3210  002360  0101               	movlb	(_M+5) shr (0+8)
  3211  002362  9105               	bcf	(_M+5)& (0+255),0,b
  3212  002364                     l226:
  3213                           ;main.c: 1346: if((DtKNF.tpkt==0)&&(DtCW._offKCW
      +                          ==1))
  3214  002364  EE02  F037         	lfsr	0,_DtKNF+7
  3215  002368  50EF               	movf	indf0,w,c
  3216  00236A  E109               	bnz	l227
  3217  00236C  0101               	movlb	(_DtCW+1) shr (0+8)
  3218  00236E  A7A8               	btfss	(_DtCW+1)& (0+255),3,b
  3219  002370  D006               	goto	l227
  3220                           ;main.c: 1347: {
  3221  002372  0101               	movlb	(_M+1) shr (0+8)
  3222  002374  A501               	btfss	(_M+1)& (0+255),2,b
  3223                           ;main.c: 1349: {
  3224  002376  BB01               	btfsc	(_M+1)& (0+255),5,b
  3225  002378  D0CA               	goto	l230
  3226  00237A  D9E9               	call	_ToObiegCO	;wreg free
  3227                           ;main.c: 1351: }
  3228  00237C  D0C8               	goto	l230
  3229  00237E                     l227:
  3230                           ;main.c: 1353: else
  3231  00237E  0101               	movlb	(_M+1) shr (0+8)
  3232  002380  B501               	btfsc	(_M+1)& (0+255),2,b
  3233  002382  D0C5               	goto	l230
  3234                           ;main.c: 1356: {
  3235  002384  AD04               	btfss	(_M+4)& (0+255),6,b
  3236  002386  D00B               	goto	l232
  3237  002388  A300               	btfss	_M& (0+255),1,b
  3238  00238A  B900               	btfsc	_M& (0+255),4,b
  3239  00238C  D006               	goto	u3570
  3240  00238E  0101               	movlb	_M shr (0+8)
  3241  002390  BF00               	btfsc	_M& (0+255),7,b
  3242  002392  D003               	goto	u3570
  3243  002394  0101               	movlb	_M shr (0+8)
  3244  002396  A700               	btfss	_M& (0+255),3,b
  3245  002398  D002               	goto	l232
  3246  00239A                     u3570:
  3247  00239A  DA00               	call	_ToObiegCW	;wreg free
  3248  00239C  D0B8               	goto	l230
  3249  00239E                     l232:
  3250                           ;main.c: 1359: else
  3251  00239E  0101               	movlb	(_M+4) shr (0+8)
  3252  0023A0  BD04               	btfsc	(_M+4)& (0+255),6,b
  3253  0023A2  BB02               	btfsc	(_M+2)& (0+255),5,b
  3254  0023A4  D00B               	goto	l234
  3255  0023A6  0101               	movlb	_M shr (0+8)
  3256  0023A8  A100               	btfss	_M& (0+255),0,b
  3257  0023AA  B500               	btfsc	_M& (0+255),2,b
  3258  0023AC  D005               	goto	u3680
  3259  0023AE  BB00               	btfsc	_M& (0+255),5,b
  3260  0023B0  D003               	goto	u3680
  3261  0023B2  0101               	movlb	_M shr (0+8)
  3262  0023B4  AD00               	btfss	_M& (0+255),6,b
  3263  0023B6  D002               	goto	l234
  3264  0023B8                     u3680:
  3265  0023B8  D9CA               	call	_ToObiegCO	;wreg free
  3266  0023BA  D0A9               	goto	l230
  3267  0023BC                     l234:
  3268                           ;main.c: 1362: else
  3269  0023BC  0101               	movlb	(_M+4) shr (0+8)
  3270  0023BE  AD04               	btfss	(_M+4)& (0+255),6,b
  3271  0023C0  A301               	btfss	(_M+1)& (0+255),1,b
  3272  0023C2  D00F               	goto	l236
  3273  0023C4  C237  FFE8         	movff	_DtKNF+7,wreg
  3274  0023C8  0A03               	xorlw	3
  3275  0023CA  E10B               	bnz	l236
  3276  0023CC  0101               	movlb	_DtCO shr (0+8)
  3277  0023CE  B1B6               	btfsc	_DtCO& (0+255),0,b
  3278  0023D0  D008               	goto	l236
  3279  0023D2  0101               	movlb	(_DtCO+1) shr (0+8)
  3280  0023D4  B1B7               	btfsc	(_DtCO+1)& (0+255),0,b
  3281  0023D6  D005               	goto	l236
  3282  0023D8  0101               	movlb	_M shr (0+8)
  3283  0023DA  A900               	btfss	_M& (0+255),4,b
  3284  0023DC  D002               	goto	l236
  3285  0023DE  D9DE               	call	_ToObiegCW	;wreg free
  3286  0023E0  D096               	goto	l230
  3287  0023E2                     l236:
  3288                           ;main.c: 1365: else
  3289  0023E2  0101               	movlb	(_M+4) shr (0+8)
  3290  0023E4  AD04               	btfss	(_M+4)& (0+255),6,b
  3291  0023E6  A301               	btfss	(_M+1)& (0+255),1,b
  3292  0023E8  D018               	goto	l238
  3293  0023EA  EE02  F037         	lfsr	0,_DtKNF+7
  3294  0023EE  50EF               	movf	indf0,w,c
  3295  0023F0  E114               	bnz	l238
  3296  0023F2  0101               	movlb	_DtCO shr (0+8)
  3297  0023F4  B1B6               	btfsc	_DtCO& (0+255),0,b
  3298  0023F6  D011               	goto	l238
  3299  0023F8  0101               	movlb	(_DtCO+1) shr (0+8)
  3300  0023FA  B1B7               	btfsc	(_DtCO+1)& (0+255),0,b
  3301  0023FC  D00E               	goto	l238
  3302  0023FE  0101               	movlb	(_PFN+1) shr (0+8)
  3303  002400  51A1               	movf	(_PFN+1)& (0+255),w,b
  3304  002402  0A02               	xorlw	2
  3305  002404  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  3306  002406  E004               	bz	u3920
  3307  002408  51A1               	movf	(_PFN+1)& (0+255),w,b
  3308  00240A  0A03               	xorlw	3
  3309  00240C  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  3310  00240E  E105               	bnz	l238
  3311  002410                     u3920:
  3312  002410  0101               	movlb	_DtCW shr (0+8)
  3313  002412  A7A7               	btfss	_DtCW& (0+255),3,b
  3314  002414  D002               	goto	l238
  3315  002416  D9C2               	call	_ToObiegCW	;wreg free
  3316  002418  D07A               	goto	l230
  3317  00241A                     l238:
  3318                           ;main.c: 1367: else
  3319  00241A  0101               	movlb	(_M+4) shr (0+8)
  3320  00241C  AD04               	btfss	(_M+4)& (0+255),6,b
  3321  00241E  BB02               	btfsc	(_M+2)& (0+255),5,b
  3322  002420  D031               	goto	l240
  3323  002422  0E0D               	movlw	13
  3324  002424  EC4C  F06F         	call	_RdPrt
  3325  002428  E203               	bc	u4010
  3326  00242A  0101               	movlb	(_M+1) shr (0+8)
  3327  00242C  A901               	btfss	(_M+1)& (0+255),4,b
  3328  00242E  D02A               	goto	l240
  3329  002430                     u4010:
  3330                           ;main.c: 1371: {
  3331  002430  0101               	movlb	(_PFN+1) shr (0+8)
  3332  002432  51A1               	movf	(_PFN+1)& (0+255),w,b
  3333  002434  0A01               	xorlw	1
  3334  002436  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  3335  002438  E102               	bnz	l241
  3336  00243A  D989               	call	_ToObiegCO	;wreg free
  3337  00243C  D068               	goto	l230
  3338  00243E                     l241:
  3339                           ;main.c: 1373: else
  3340  00243E  0101               	movlb	(_PFN+1) shr (0+8)
  3341  002440  51A1               	movf	(_PFN+1)& (0+255),w,b
  3342  002442  0A02               	xorlw	2
  3343  002444  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  3344  002446  E111               	bnz	l243
  3345                           ;main.c: 1375: {
  3346  002448  C237  F000         	movff	_DtKNF+7,btemp
  3347  00244C  0400               	decf	btemp,w,c
  3348  00244E  E00B               	bz	l244
  3349  002450  C237  FFE8         	movff	_DtKNF+7,wreg
  3350  002454  0A02               	xorlw	2
  3351  002456  E007               	bz	l244
  3352                           ;main.c: 1377: {
  3353  002458  0101               	movlb	(_DtCO+1) shr (0+8)
  3354  00245A  A5B7               	btfss	(_DtCO+1)& (0+255),2,b
  3355  00245C  D002               	goto	l245
  3356  00245E  D977               	call	_ToObiegCO	;wreg free
  3357  002460  D056               	goto	l230
  3358  002462                     l245:
  3359                           ;main.c: 1379: else ToObiegCW();
  3360  002462  D99C               	call	_ToObiegCW	;wreg free
  3361                           ;main.c: 1380: }
  3362  002464  D054               	goto	l230
  3363  002466                     l244:
  3364                           ;main.c: 1381: else ToObiegCO();
  3365  002466  D973               	call	_ToObiegCO	;wreg free
  3366                           ;main.c: 1382: }
  3367  002468  D052               	goto	l230
  3368  00246A                     l243:
  3369                           ;main.c: 1383: else
  3370  00246A  0101               	movlb	_M shr (0+8)
  3371  00246C  A300               	btfss	_M& (0+255),1,b
  3372  00246E  B900               	btfsc	_M& (0+255),4,b
  3373  002470  D007               	goto	l249
  3374  002472  BF00               	btfsc	_M& (0+255),7,b
  3375  002474  D005               	goto	l249
  3376  002476  0101               	movlb	_M shr (0+8)
  3377  002478  B700               	btfsc	_M& (0+255),3,b
  3378  00247A  D002               	goto	l249
  3379  00247C  D968               	call	_ToObiegCO	;wreg free
  3380  00247E  D047               	goto	l230
  3381  002480                     l249:
  3382                           ;main.c: 1386: else ToObiegCW();
  3383  002480  D98D               	call	_ToObiegCW	;wreg free
  3384                           ;main.c: 1387: }
  3385  002482  D045               	goto	l230
  3386  002484                     l240:
  3387                           ;main.c: 1389: else
  3388  002484  0101               	movlb	(_M+4) shr (0+8)
  3389  002486  AD04               	btfss	(_M+4)& (0+255),6,b
  3390  002488  BB02               	btfsc	(_M+2)& (0+255),5,b
  3391  00248A  D02E               	goto	l255
  3392  00248C  0101               	movlb	_M shr (0+8)
  3393  00248E  AB00               	btfss	_M& (0+255),5,b
  3394  002490  D02B               	goto	l255
  3395  002492  0101               	movlb	_DtCO shr (0+8)
  3396  002494  B3B6               	btfsc	_DtCO& (0+255),1,b
  3397  002496  D028               	goto	l255
  3398  002498  D95A               	call	_ToObiegCO	;wreg free
  3399  00249A  D039               	goto	l230
  3400                           ;main.c: 1392: else
  3401  00249C                     l257:
  3402                           ;main.c: 1397: case 2:
  3403  00249C  0101               	movlb	(_M+4) shr (0+8)
  3404  00249E  AD04               	btfss	(_M+4)& (0+255),6,b
  3405  0024A0  B301               	btfsc	(_M+1)& (0+255),1,b
  3406  0024A2  D035               	goto	l230
  3407  0024A4  0101               	movlb	(_M+1) shr (0+8)
  3408  0024A6  A901               	btfss	(_M+1)& (0+255),4,b
  3409  0024A8  D979               	call	_ToObiegCW	;wreg free
  3410                           ;main.c: 1401: break;
  3411  0024AA  D031               	goto	l230
  3412  0024AC                     l259:
  3413                           ;main.c: 1402: }
  3414                           ;main.c: 1404: {
  3415  0024AC  0101               	movlb	(_M+4) shr (0+8)
  3416  0024AE  AD04               	btfss	(_M+4)& (0+255),6,b
  3417  0024B0  B301               	btfsc	(_M+1)& (0+255),1,b
  3418  0024B2  D02D               	goto	l230
  3419  0024B4  0101               	movlb	(_M+1) shr (0+8)
  3420  0024B6  B901               	btfsc	(_M+1)& (0+255),4,b
  3421  0024B8  D02A               	goto	l230
  3422  0024BA  A483               	btfss	3971,2,c	;volatile
  3423  0024BC  D003               	goto	u4350
  3424  0024BE  0101               	movlb	(_M+1) shr (0+8)
  3425  0024C0  AB01               	btfss	(_M+1)& (0+255),5,b
  3426  0024C2  D025               	goto	l230
  3427  0024C4                     u4350:
  3428  0024C4  D96B               	call	_ToObiegCW	;wreg free
  3429                           ;main.c: 1407: break;
  3430  0024C6  D023               	goto	l230
  3431  0024C8                     l261:
  3432                           ;main.c: 1408: }
  3433                           ;main.c: 1410: {
  3434  0024C8  0101               	movlb	(_M+4) shr (0+8)
  3435  0024CA  BD04               	btfsc	(_M+4)& (0+255),6,b
  3436  0024CC  D006               	goto	l262
  3437  0024CE  0E11               	movlw	17
  3438  0024D0  EC4C  F06F         	call	_RdPrt
  3439  0024D4  E302               	bnc	l262
  3440                           ;main.c: 1414: {
  3441  0024D6  D962               	call	_ToObiegCW	;wreg free
  3442                           ;main.c: 1416: }
  3443  0024D8  D01A               	goto	l230
  3444  0024DA                     l262:
  3445                           ;main.c: 1417: else
  3446  0024DA  0101               	movlb	(_M+1) shr (0+8)
  3447  0024DC  A301               	btfss	(_M+1)& (0+255),1,b
  3448  0024DE  B901               	btfsc	(_M+1)& (0+255),4,b
  3449  0024E0  D016               	goto	l230
  3450  0024E2  A483               	btfss	3971,2,c	;volatile
  3451  0024E4  D934               	call	_ToObiegCO	;wreg free
  3452                           ;main.c: 1420: }
  3453  0024E6  D013               	goto	l230
  3454                           ;main.c: 1427: break;
  3455  0024E8                     l255:
  3456  0024E8  C237  FFE8         	movff	_DtKNF+7,wreg
  3457  0024EC  0A00               	xorlw	0
  3458  0024EE  E0EC               	bz	l261
  3459  0024F0  0A01               	xorlw	1
  3460  0024F2  E0D4               	bz	l257
  3461  0024F4  0A03               	xorlw	3
  3462  0024F6  E0D2               	bz	l257
  3463  0024F8  0A01               	xorlw	1
  3464  0024FA  E0D8               	bz	l259
  3465                           ;main.c: 1422: }
  3466                           ;main.c: 1424: {
  3467  0024FC  0101               	movlb	(_M+4) shr (0+8)
  3468  0024FE  AD04               	btfss	(_M+4)& (0+255),6,b
  3469  002500  B301               	btfsc	(_M+1)& (0+255),1,b
  3470  002502  D005               	goto	l230
  3471  002504  0101               	movlb	(_M+1) shr (0+8)
  3472  002506  A901               	btfss	(_M+1)& (0+255),4,b
  3473  002508  B483               	btfsc	3971,2,c	;volatile
  3474  00250A  D001               	goto	l230
  3475  00250C  D947               	call	_ToObiegCW	;wreg free
  3476  00250E                     l230:
  3477                           ;main.c: 1430: }
  3478  00250E  0101               	movlb	(_M+1) shr (0+8)
  3479  002510  A501               	btfss	(_M+1)& (0+255),2,b
  3480  002512  D067               	goto	l269
  3481  002514  D082               	goto	l267
  3482                           ;main.c: 1436: {
  3483  002516                     l271:
  3484                           ;main.c: 1440: case 2:
  3485  002516  0101               	movlb	(_M+1) shr (0+8)
  3486  002518  A301               	btfss	(_M+1)& (0+255),1,b
  3487  00251A  B901               	btfsc	(_M+1)& (0+255),4,b
  3488  00251C  D07E               	goto	l267
  3489  00251E  0101               	movlb	(_M+4) shr (0+8)
  3490  002520  BD04               	btfsc	(_M+4)& (0+255),6,b
  3491  002522  D07B               	goto	l267
  3492                           ;main.c: 1443: {
  3493  002524  0101               	movlb	(_M+5) shr (0+8)
  3494  002526  B705               	btfsc	(_M+5)& (0+255),3,b
  3495  002528  D007               	goto	l273
  3496  00252A  0E0D               	movlw	13
  3497  00252C  EC4C  F06F         	call	_RdPrt
  3498  002530  E303               	bnc	l273
  3499  002532                     u4590:
  3500                           ;main.c: 1446: {
  3501  002532  0101               	movlb	(_M+1) shr (0+8)
  3502  002534  8301               	bsf	(_M+1)& (0+255),1,b
  3503                           ;main.c: 1448: }
  3504  002536  D071               	goto	l267
  3505  002538                     l273:
  3506                           ;main.c: 1449: else
  3507  002538  0101               	movlb	(_M+5) shr (0+8)
  3508  00253A  B705               	btfsc	(_M+5)& (0+255),3,b
  3509  00253C  D06E               	goto	l267
  3510  00253E  0101               	movlb	(_PFN+1) shr (0+8)
  3511  002540  51A1               	movf	(_PFN+1)& (0+255),w,b
  3512  002542  0A01               	xorlw	1
  3513  002544  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  3514  002546  E069               	bz	l267
  3515  002548  51A1               	movf	(_PFN+1)& (0+255),w,b
  3516  00254A  0A02               	xorlw	2
  3517  00254C  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  3518  00254E  E065               	bz	l267
  3519  002550  0101               	movlb	_M shr (0+8)
  3520  002552  AB00               	btfss	_M& (0+255),5,b
  3521  002554  D062               	goto	l267
  3522  002556  0101               	movlb	_DtCO shr (0+8)
  3523  002558  B3B6               	btfsc	_DtCO& (0+255),1,b
  3524  00255A  D05F               	goto	l267
  3525  00255C  D7EA               	goto	u4590
  3526                           ;main.c: 1452: {
  3527                           ;main.c: 1454: }
  3528  00255E                     l276:
  3529                           ;main.c: 1457: }
  3530                           ;main.c: 1459: {
  3531  00255E  B483               	btfsc	3971,2,c	;volatile
  3532  002560  D05C               	goto	l267
  3533  002562  0101               	movlb	(_M+1) shr (0+8)
  3534  002564  B301               	btfsc	(_M+1)& (0+255),1,b
  3535  002566  D059               	goto	l267
  3536  002568  0101               	movlb	(_M+1) shr (0+8)
  3537  00256A  B901               	btfsc	(_M+1)& (0+255),4,b
  3538  00256C  D056               	goto	l267
  3539  00256E  0101               	movlb	(_M+1) shr (0+8)
  3540  002570  BB01               	btfsc	(_M+1)& (0+255),5,b
  3541  002572  D053               	goto	l267
  3542  002574  0101               	movlb	(_M+4) shr (0+8)
  3543  002576  BD04               	btfsc	(_M+4)& (0+255),6,b
  3544  002578  D050               	goto	l267
  3545                           ;main.c: 1461: {
  3546  00257A  0E0D               	movlw	13
  3547  00257C  EC4C  F06F         	call	_RdPrt
  3548  002580                     L43:
  3549  002580  E249               	bc	u5120
  3550  002582                     L21:
  3551                           ;main.c: 1464: {
  3552                           ;main.c: 1466: RD2=1;
  3553                           ;main.c: 1467: }
  3554                           ;main.c: 1468: else
  3555  002582  0101               	movlb	(_PFN+1) shr (0+8)
  3556  002584  51A1               	movf	(_PFN+1)& (0+255),w,b
  3557  002586  0A01               	xorlw	1
  3558  002588  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  3559  00258A  E047               	bz	l267
  3560  00258C  51A1               	movf	(_PFN+1)& (0+255),w,b
  3561  00258E  0A02               	xorlw	2
  3562  002590  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  3563  002592  E043               	bz	l267
  3564  002594                     L19:
  3565  002594  0101               	movlb	_M shr (0+8)
  3566  002596  AB00               	btfss	_M& (0+255),5,b
  3567  002598  D040               	goto	l267
  3568  00259A  0101               	movlb	_DtCO shr (0+8)
  3569  00259C  B3B6               	btfsc	_DtCO& (0+255),1,b
  3570  00259E  D03D               	goto	l267
  3571  0025A0  D039               	goto	u5120
  3572                           ;main.c: 1471: {
  3573                           ;main.c: 1473: RD2=1;
  3574                           ;main.c: 1474: }
  3575  0025A2                     l281:
  3576                           ;main.c: 1477: }
  3577                           ;main.c: 1479: {
  3578  0025A2  B483               	btfsc	3971,2,c	;volatile
  3579  0025A4  D03A               	goto	l267
  3580  0025A6  0101               	movlb	(_M+1) shr (0+8)
  3581  0025A8  B301               	btfsc	(_M+1)& (0+255),1,b
  3582  0025AA  D037               	goto	l267
  3583  0025AC  0101               	movlb	(_M+1) shr (0+8)
  3584  0025AE  B901               	btfsc	(_M+1)& (0+255),4,b
  3585  0025B0  D034               	goto	l267
  3586  0025B2  0101               	movlb	(_M+4) shr (0+8)
  3587  0025B4  BD04               	btfsc	(_M+4)& (0+255),6,b
  3588  0025B6  D031               	goto	l267
  3589                           ;main.c: 1481: {
  3590  0025B8  0E0D               	movlw	13
  3591  0025BA  EC4C  F06F         	call	_RdPrt
  3592  0025BE  E22A               	bc	u5120
  3593  0025C0  0101               	movlb	(_M+5) shr (0+8)
  3594  0025C2  A705               	btfss	(_M+5)& (0+255),3,b
  3595  0025C4  D7DE               	goto	L21
  3596  0025C6  0E11               	movlw	17
  3597  0025C8  EC4C  F06F         	call	_RdPrt
  3598  0025CC  D7D9               	goto	L43
  3599                           ;main.c: 1484: {
  3600                           ;main.c: 1486: RD2=1;
  3601                           ;main.c: 1487: }
  3602                           ;main.c: 1488: else
  3603                           ;main.c: 1491: {
  3604                           ;main.c: 1493: RD2=1;
  3605                           ;main.c: 1494: }
  3606                           ;main.c: 1507: }
  3607  0025CE                     l288:
  3608                           ;main.c: 1508: else
  3609  0025CE  0101               	movlb	(_PFN+1) shr (0+8)
  3610  0025D0  51A1               	movf	(_PFN+1)& (0+255),w,b
  3611  0025D2  0A01               	xorlw	1
  3612  0025D4  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  3613  0025D6  E021               	bz	l267
  3614  0025D8  51A1               	movf	(_PFN+1)& (0+255),w,b
  3615  0025DA  0A02               	xorlw	2
  3616  0025DC  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  3617  0025DE  E1DA               	bnz	L19
  3618                           ;main.c: 1511: {
  3619                           ;main.c: 1513: RD2=1;
  3620                           ;main.c: 1514: }
  3621  0025E0  D01C               	goto	l267
  3622  0025E2                     l269:
  3623  0025E2  C237  FFE8         	movff	_DtKNF+7,wreg
  3624  0025E6  0A00               	xorlw	0
  3625  0025E8  E0DC               	bz	l281
  3626  0025EA  0A01               	xorlw	1
  3627  0025EC  E094               	bz	l271
  3628  0025EE  0A03               	xorlw	3
  3629  0025F0  E092               	bz	l271
  3630  0025F2  0A01               	xorlw	1
  3631  0025F4  E0B4               	bz	l276
  3632                           ;main.c: 1497: }
  3633                           ;main.c: 1499: {
  3634  0025F6  B483               	btfsc	3971,2,c	;volatile
  3635  0025F8  D010               	goto	l267
  3636  0025FA  0101               	movlb	(_M+1) shr (0+8)
  3637  0025FC  B301               	btfsc	(_M+1)& (0+255),1,b
  3638  0025FE  D00D               	goto	l267
  3639  002600  0101               	movlb	(_M+1) shr (0+8)
  3640  002602  B901               	btfsc	(_M+1)& (0+255),4,b
  3641  002604  D00A               	goto	l267
  3642  002606  0101               	movlb	(_M+4) shr (0+8)
  3643  002608  BD04               	btfsc	(_M+4)& (0+255),6,b
  3644  00260A  D007               	goto	l267
  3645                           ;main.c: 1501: {
  3646  00260C  0E0D               	movlw	13
  3647  00260E  EC4C  F06F         	call	_RdPrt
  3648  002612  E3DD               	bnc	l288
  3649  002614                     u5120:
  3650                           ;main.c: 1504: {
  3651  002614  0101               	movlb	(_M+1) shr (0+8)
  3652  002616  8301               	bsf	(_M+1)& (0+255),1,b
  3653                           ;main.c: 1506: RD2=1;
  3654  002618  8483               	bsf	3971,2,c	;volatile
  3655  00261A                     l267:
  3656                           ;main.c: 1519: }
  3657  00261A  0101               	movlb	(_M+4) shr (0+8)
  3658  00261C  AD04               	btfss	(_M+4)& (0+255),6,b
  3659  00261E  D027               	goto	l291
  3660  002620  AB00               	btfss	_M& (0+255),5,b
  3661  002622  BD00               	btfsc	_M& (0+255),6,b
  3662  002624  D003               	goto	u5260
  3663  002626  0101               	movlb	_M shr (0+8)
  3664  002628  AF00               	btfss	_M& (0+255),7,b
  3665  00262A  D021               	goto	l291
  3666  00262C                     u5260:
  3667  00262C  0101               	movlb	_M shr (0+8)
  3668  00262E  B500               	btfsc	_M& (0+255),2,b
  3669  002630  D01E               	goto	l291
  3670  002632  0101               	movlb	(_M+3) shr (0+8)
  3671  002634  B503               	btfsc	(_M+3)& (0+255),2,b
  3672  002636  D01B               	goto	l291
  3673  002638  0101               	movlb	_M shr (0+8)
  3674  00263A  B100               	btfsc	_M& (0+255),0,b
  3675  00263C  D018               	goto	l291
  3676  00263E  0101               	movlb	_M shr (0+8)
  3677  002640  B300               	btfsc	_M& (0+255),1,b
  3678  002642  D015               	goto	l291
  3679  002644  0101               	movlb	_M shr (0+8)
  3680  002646  B900               	btfsc	_M& (0+255),4,b
  3681  002648  D012               	goto	l291
  3682  00264A  0101               	movlb	_M shr (0+8)
  3683  00264C  B700               	btfsc	_M& (0+255),3,b
  3684  00264E  D00F               	goto	l291
  3685                           ;main.c: 1523: {
  3686  002650  C1E6  FFE8         	movff	_PWM+11,wreg
  3687  002654  0101               	movlb	(_PWM+10) shr (0+8)
  3688  002656  61E5               	cpfslt	(_PWM+10)& (0+255),b
  3689  002658  D00A               	goto	l291
  3690  00265A  0E10               	movlw	16
  3691  00265C  EC87  F073         	call	_RTS
  3692  002660  6E00               	movwf	btemp,c
  3693  002662  0E05               	movlw	5
  3694  002664  5C00               	subwf	btemp,w,c
  3695  002666  E203               	bc	l291
  3696                           ;main.c: 1525: {
  3697  002668  C1E6  F1E4         	movff	_PWM+11,_PWM+9
  3698                           ;main.c: 1527: }
  3699  00266C  D002               	goto	l294
  3700                           ;main.c: 1528: else
  3701                           ;main.c: 1531: }
  3702  00266E                     l291:
  3703                           ;main.c: 1533: else
  3704  00266E  C1E5  F1E4         	movff	_PWM+10,_PWM+9
  3705  002672                     l294:
  3706                           ;main.c: 1536: }
  3707  002672  0101               	movlb	_M shr (0+8)
  3708  002674  AB00               	btfss	_M& (0+255),5,b
  3709  002676  B900               	btfsc	_M& (0+255),4,b
  3710  002678  D002               	goto	u5450
  3711  00267A  A700               	btfss	_M& (0+255),3,b
  3712  00267C  D00B               	goto	l295
  3713  00267E                     u5450:
  3714                           ;main.c: 1540: {
  3715  00267E  0101               	movlb	(_M+1) shr (0+8)
  3716  002680  A701               	btfss	(_M+1)& (0+255),3,b
  3717  002682  A083               	btfss	3971,0,c	;volatile
  3718  002684  D007               	goto	l295
  3719                           ;main.c: 1542: {
  3720  002686  0101               	movlb	(_M+2) shr (0+8)
  3721  002688  BD02               	btfsc	(_M+2)& (0+255),6,b
  3722  00268A  D006               	goto	l299
  3723                           ;main.c: 1544: {
  3724  00268C  8D02               	bsf	(_M+2)& (0+255),6,b
  3725                           ;main.c: 1546: RestartMod();
  3726  00268E  EC11  F037         	call	_RestartMod	;wreg free
  3727                           ;main.c: 1548: }
  3728  002692  D002               	goto	l299
  3729                           ;main.c: 1550: else M._MODULUJ=0;
  3730                           ;main.c: 1551: }
  3731  002694                     l295:
  3732                           ;main.c: 1552: else M._MODULUJ=0;
  3733  002694  0101               	movlb	(_M+2) shr (0+8)
  3734  002696  9D02               	bcf	(_M+2)& (0+255),6,b
  3735  002698                     l299:
  3736                           ;main.c: 1554: if(!M._PRACA||!RdPrt(8)||M._RUN_M
      +                          NMOD||(!M._ROZRUCH&&M._LOW_PMP))
  3737  002698  0101               	movlb	(_M+4) shr (0+8)
  3738  00269A  AD04               	btfss	(_M+4)& (0+255),6,b
  3739  00269C  D00B               	goto	u5590
  3740  00269E  0E08               	movlw	8
  3741  0026A0  EC4C  F06F         	call	_RdPrt
  3742  0026A4  E307               	bnc	u5590
  3743  0026A6  0101               	movlb	(_M+5) shr (0+8)
  3744  0026A8  B105               	btfsc	(_M+5)& (0+255),0,b
  3745  0026AA  D004               	goto	u5590
  3746  0026AC  0101               	movlb	(_M+1) shr (0+8)
  3747  0026AE  A701               	btfss	(_M+1)& (0+255),3,b
  3748  0026B0  A308               	btfss	(_M+8)& (0+255),1,b
  3749  0026B2  D010               	goto	l300
  3750  0026B4                     u5590:
  3751                           ;main.c: 1555: {
  3752  0026B4  0101               	movlb	(_M+2) shr (0+8)
  3753  0026B6  9D02               	bcf	(_M+2)& (0+255),6,b
  3754                           ;main.c: 1557: if(!M._PRACA||!RdPrt(8)) WritePWM
      +                          (0);
  3755  0026B8  AD04               	btfss	(_M+4)& (0+255),6,b
  3756  0026BA  D004               	goto	u5620
  3757  0026BC  0E08               	movlw	8
  3758  0026BE  EC4C  F06F         	call	_RdPrt
  3759  0026C2  E204               	bc	l301
  3760  0026C4                     u5620:
  3761  0026C4  0E00               	movlw	0
  3762  0026C6  EC9C  F06A         	call	_WritePWM
  3763  0026CA  D004               	goto	l300
  3764  0026CC                     l301:
  3765                           ;main.c: 1558: else WritePWM(PWM.MDMOD);
  3766  0026CC  C1E4  FFE8         	movff	_PWM+9,wreg
  3767  0026D0  EC9C  F06A         	call	_WritePWM
  3768  0026D4                     l300:
  3769                           ;main.c: 1559: }
  3770  0026D4  0101               	movlb	_M shr (0+8)
  3771  0026D6  B300               	btfsc	_M& (0+255),1,b
  3772  0026D8  B701               	btfsc	(_M+1)& (0+255),3,b
  3773  0026DA  D006               	goto	l303
  3774  0026DC  A083               	btfss	3971,0,c	;volatile
  3775  0026DE  D004               	goto	l303
  3776  0026E0  C1FB  FFE8         	movff	_PWM+32,wreg
  3777  0026E4  EC9C  F06A         	call	_WritePWM
  3778  0026E8                     l303:
  3779                           ;main.c: 1562: if(M._pob_KCO&&!M._ROZRUCH&&RD0) 
      +                          WritePWM(PWM.MMAXCO);
  3780  0026E8  0101               	movlb	_M shr (0+8)
  3781  0026EA  B100               	btfsc	_M& (0+255),0,b
  3782  0026EC  B701               	btfsc	(_M+1)& (0+255),3,b
  3783  0026EE  D006               	goto	l304
  3784  0026F0  A083               	btfss	3971,0,c	;volatile
  3785  0026F2  D004               	goto	l304
  3786  0026F4  C1FA  FFE8         	movff	_PWM+31,wreg
  3787  0026F8  EC9C  F06A         	call	_WritePWM
  3788  0026FC                     l304:
  3789                           ;main.c: 1566: if(M._pob_SRW&&!M._ROZRUCH&&RD0)
  3790  0026FC  0101               	movlb	_M shr (0+8)
  3791  0026FE  B500               	btfsc	_M& (0+255),2,b
  3792  002700  B701               	btfsc	(_M+1)& (0+255),3,b
  3793  002702  D011               	goto	l305
  3794  002704  A083               	btfss	3971,0,c	;volatile
  3795  002706  D00F               	goto	l305
  3796                           ;main.c: 1567: {
  3797  002708  0100               	movlb	__Lparam shr (0+8)
  3798  00270A  6BF0               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
  3799  00270C  C170  FFE8         	movff	_RSDT1+76,wreg
  3800  002710  ECC7  F076         	call	_GetBit2
  3801  002714  E304               	bnc	l306
  3802  002716  0EF0               	movlw	240
  3803  002718  EC9C  F06A         	call	_WritePWM
  3804  00271C  D004               	goto	l305
  3805  00271E                     l306:
  3806                           ;main.c: 1569: else WritePWM(PWM.MDMOD);
  3807  00271E  C1E4  FFE8         	movff	_PWM+9,wreg
  3808  002722  EC9C  F06A         	call	_WritePWM
  3809  002726                     l305:
  3810                           ;main.c: 1570: }
  3811  002726  0101               	movlb	_M shr (0+8)
  3812  002728  BD00               	btfsc	_M& (0+255),6,b
  3813  00272A  B701               	btfsc	(_M+1)& (0+255),3,b
  3814  00272C  D006               	goto	l308
  3815  00272E  A083               	btfss	3971,0,c	;volatile
  3816  002730  D004               	goto	l308
  3817  002732  C1E4  FFE8         	movff	_PWM+9,wreg
  3818  002736  EC9C  F06A         	call	_WritePWM
  3819  00273A                     l308:
  3820                           ;main.c: 1573: if(M._pob_DzCW&&!M._ROZRUCH&&RD0)
      +                           WritePWM(PWM.MDMOD);
  3821  00273A  0101               	movlb	_M shr (0+8)
  3822  00273C  BF00               	btfsc	_M& (0+255),7,b
  3823  00273E  B701               	btfsc	(_M+1)& (0+255),3,b
  3824  002740  0012               	return	
  3825  002742  A083               	btfss	3971,0,c	;volatile
  3826  002744  0012               	return	
  3827  002746  C1E4  FFE8         	movff	_PWM+9,wreg
  3828  00274A  EF9C  F06A         	goto	_WritePWM
  3829                           ;main.c: 1574: }
  3830  00274E                     __end_of_DecSTR:
  3831                           ;main.c: 1576: void ToObiegCO(void)
  3832                           ;main.c: 1577: {
  3833  00274E                     _ToObiegCO:
  3834  000000                     
  3835                           ;main.c: 1578: switch(DtKNF.tpkt)
  3836  00274E  D01B               	goto	l312
  3837  002750                     l314:
  3838                           ;main.c: 1581: case 2:
  3839  002750  0101               	movlb	(_M+1) shr (0+8)
  3840  002752  A501               	btfss	(_M+1)& (0+255),2,b
  3841  002754  B483               	btfsc	3971,2,c	;volatile
  3842  002756  0012               	return	
  3843                           ;main.c: 1584: {
  3844  002758  0101               	movlb	(_M+5) shr (0+8)
  3845  00275A  9705               	bcf	(_M+5)& (0+255),3,b
  3846                           ;main.c: 1586: M._ZMKCOCW=1;
  3847  00275C  8501               	bsf	(_M+1)& (0+255),2,b
  3848                           ;main.c: 1587: M.ZKP=0;
  3849  00275E  6B19               	clrf	(_M+25)& (0+255),b
  3850                           ;main.c: 1588: }
  3851  002760  0012               	return	
  3852  002762                     l317:
  3853                           ;main.c: 1592: case 3:
  3854  002762  0101               	movlb	(_M+1) shr (0+8)
  3855  002764  A501               	btfss	(_M+1)& (0+255),2,b
  3856  002766  B283               	btfsc	3971,1,c	;volatile
  3857  002768  0012               	return	
  3858                           ;main.c: 1595: {
  3859  00276A  0101               	movlb	(_M+5) shr (0+8)
  3860  00276C  9705               	bcf	(_M+5)& (0+255),3,b
  3861                           ;main.c: 1597: M._ZMKCOCW=1;
  3862  00276E  8501               	bsf	(_M+1)& (0+255),2,b
  3863                           ;main.c: 1598: M.ZKP=0;
  3864  002770  6B19               	clrf	(_M+25)& (0+255),b
  3865                           ;main.c: 1599: }
  3866  002772  0012               	return	
  3867  002774                     l319:
  3868                           ;main.c: 1601: }
  3869                           ;main.c: 1603: {
  3870  002774  0101               	movlb	(_M+1) shr (0+8)
  3871  002776  A501               	btfss	(_M+1)& (0+255),2,b
  3872  002778  B283               	btfsc	3971,1,c	;volatile
  3873  00277A  0012               	return	
  3874                           ;main.c: 1605: {
  3875  00277C  0101               	movlb	(_M+5) shr (0+8)
  3876  00277E  9705               	bcf	(_M+5)& (0+255),3,b
  3877                           ;main.c: 1607: M._ZMKCOCW=1;
  3878  002780  8501               	bsf	(_M+1)& (0+255),2,b
  3879                           ;main.c: 1608: M.ZKP=0;
  3880  002782  6B19               	clrf	(_M+25)& (0+255),b
  3881                           ;main.c: 1609: }
  3882  002784  0012               	return	
  3883  002786                     l312:
  3884  002786  C237  FFE8         	movff	_DtKNF+7,wreg
  3885  00278A  0A00               	xorlw	0
  3886  00278C  E0EA               	bz	l317
  3887  00278E  0A01               	xorlw	1
  3888  002790  E0DF               	bz	l314
  3889  002792  0A03               	xorlw	3
  3890  002794  E0DD               	bz	l314
  3891  002796  0A01               	xorlw	1
  3892  002798  E0E4               	bz	l317
  3893  00279A  D7EC               	goto	l319
  3894                           ;main.c: 1613: }
  3895  00279C                     __end_of_ToObiegCO:
  3896                           ;main.c: 1615: void ToObiegCW(void)
  3897                           ;main.c: 1616: {
  3898  00279C                     _ToObiegCW:
  3899  000000                     
  3900                           ;main.c: 1617: switch(DtKNF.tpkt)
  3901  00279C  D042               	goto	l323
  3902  00279E                     l325:
  3903                           ;main.c: 1620: case 2:
  3904  00279E  0101               	movlb	(_M+1) shr (0+8)
  3905  0027A0  A501               	btfss	(_M+1)& (0+255),2,b
  3906  0027A2  A483               	btfss	3971,2,c	;volatile
  3907  0027A4  0012               	return	
  3908                           ;main.c: 1623: {
  3909  0027A6  0101               	movlb	(_M+5) shr (0+8)
  3910  0027A8  8705               	bsf	(_M+5)& (0+255),3,b
  3911                           ;main.c: 1625: M._ZMKCOCW=1;
  3912  0027AA  8501               	bsf	(_M+1)& (0+255),2,b
  3913                           ;main.c: 1626: M.ZKP=0;
  3914  0027AC  6B19               	clrf	(_M+25)& (0+255),b
  3915                           ;main.c: 1627: if(M._pob_KCW||M._pob_CW||M._pob_
      +                          DzCW)
  3916  0027AE  A300               	btfss	_M& (0+255),1,b
  3917  0027B0  B900               	btfsc	_M& (0+255),4,b
  3918  0027B2  D003               	goto	u6040
  3919  0027B4  0101               	movlb	_M shr (0+8)
  3920  0027B6  AF00               	btfss	_M& (0+255),7,b
  3921  0027B8  0012               	return	
  3922  0027BA                     u6040:
  3923                           ;main.c: 1628: {
  3924  0027BA  0101               	movlb	(_M+4) shr (0+8)
  3925  0027BC  AD04               	btfss	(_M+4)& (0+255),6,b
  3926  0027BE  0012               	return	
  3927                           ;main.c: 1630: {
  3928  0027C0  8B02               	bsf	(_M+2)& (0+255),5,b
  3929                           ;main.c: 1632: M.BL15=0;
  3930  0027C2  6B13               	clrf	(_M+19)& (0+255),b
  3931                           ;main.c: 1633: }
  3932  0027C4  0012               	return	
  3933  0027C6                     l330:
  3934                           ;main.c: 1639: case 3:
  3935  0027C6  0101               	movlb	(_M+1) shr (0+8)
  3936  0027C8  A501               	btfss	(_M+1)& (0+255),2,b
  3937  0027CA  A283               	btfss	3971,1,c	;volatile
  3938  0027CC  0012               	return	
  3939                           ;main.c: 1642: {
  3940  0027CE  0101               	movlb	(_M+5) shr (0+8)
  3941  0027D0  8705               	bsf	(_M+5)& (0+255),3,b
  3942                           ;main.c: 1644: M._ZMKCOCW=1;
  3943  0027D2  8501               	bsf	(_M+1)& (0+255),2,b
  3944                           ;main.c: 1645: M.ZKP=0;
  3945  0027D4  6B19               	clrf	(_M+25)& (0+255),b
  3946                           ;main.c: 1646: if(M._pob_KCW||M._pob_CW||M._pob_
      +                          DzCW||M._pob_AL)
  3947  0027D6  A300               	btfss	_M& (0+255),1,b
  3948  0027D8  B900               	btfsc	_M& (0+255),4,b
  3949  0027DA  D006               	goto	u6160
  3950  0027DC  0101               	movlb	_M shr (0+8)
  3951  0027DE  BF00               	btfsc	_M& (0+255),7,b
  3952  0027E0  D003               	goto	u6160
  3953  0027E2  0101               	movlb	_M shr (0+8)
  3954  0027E4  A700               	btfss	_M& (0+255),3,b
  3955  0027E6  0012               	return	
  3956  0027E8                     u6160:
  3957                           ;main.c: 1647: {
  3958  0027E8  0101               	movlb	(_M+4) shr (0+8)
  3959  0027EA  AD04               	btfss	(_M+4)& (0+255),6,b
  3960  0027EC  0012               	return	
  3961                           ;main.c: 1649: {
  3962  0027EE  8B02               	bsf	(_M+2)& (0+255),5,b
  3963                           ;main.c: 1651: M.BL15=0;
  3964  0027F0  6B13               	clrf	(_M+19)& (0+255),b
  3965                           ;main.c: 1652: }
  3966  0027F2  0012               	return	
  3967  0027F4                     l334:
  3968                           ;main.c: 1656: }
  3969                           ;main.c: 1658: {
  3970  0027F4  0101               	movlb	(_M+1) shr (0+8)
  3971  0027F6  A501               	btfss	(_M+1)& (0+255),2,b
  3972  0027F8  A283               	btfss	3971,1,c	;volatile
  3973  0027FA  0012               	return	
  3974                           ;main.c: 1660: {
  3975  0027FC  0101               	movlb	(_M+5) shr (0+8)
  3976  0027FE  8705               	bsf	(_M+5)& (0+255),3,b
  3977                           ;main.c: 1662: M._ZMKCOCW=1;
  3978  002800  8501               	bsf	(_M+1)& (0+255),2,b
  3979                           ;main.c: 1663: M.ZKP=0;
  3980  002802  6B19               	clrf	(_M+25)& (0+255),b
  3981                           ;main.c: 1664: if(M._pob_KCW||M._pob_CW||M._pob_
      +                          DzCW||M._pob_AL)
  3982  002804  A300               	btfss	_M& (0+255),1,b
  3983  002806  B900               	btfsc	_M& (0+255),4,b
  3984  002808  D006               	goto	u6270
  3985  00280A  0101               	movlb	_M shr (0+8)
  3986  00280C  BF00               	btfsc	_M& (0+255),7,b
  3987  00280E  D003               	goto	u6270
  3988  002810  0101               	movlb	_M shr (0+8)
  3989  002812  A700               	btfss	_M& (0+255),3,b
  3990  002814  0012               	return	
  3991  002816                     u6270:
  3992                           ;main.c: 1665: {
  3993  002816  0101               	movlb	(_M+4) shr (0+8)
  3994  002818  AD04               	btfss	(_M+4)& (0+255),6,b
  3995  00281A  0012               	return	
  3996                           ;main.c: 1667: {
  3997  00281C  8B02               	bsf	(_M+2)& (0+255),5,b
  3998                           ;main.c: 1669: M.BL15=0;
  3999  00281E  6B13               	clrf	(_M+19)& (0+255),b
  4000                           ;main.c: 1670: }
  4001  002820  0012               	return	
  4002  002822                     l323:
  4003  002822  C237  FFE8         	movff	_DtKNF+7,wreg
  4004  002826  0A00               	xorlw	0
  4005  002828  E0CE               	bz	l330
  4006  00282A  0A01               	xorlw	1
  4007  00282C  E0B8               	bz	l325
  4008  00282E  0A03               	xorlw	3
  4009  002830  E0B6               	bz	l325
  4010  002832  0A01               	xorlw	1
  4011  002834  E0C8               	bz	l330
  4012  002836  D7DE               	goto	l334
  4013                           ;main.c: 1676: }
  4014  002838                     __end_of_ToObiegCW:
  4015                           ;main.c: 1678: void SetLoMod(void)
  4016                           ;main.c: 1679: {
  4017  002838                     _SetLoMod:
  4018  000000                     
  4019                           ;main.c: 1680: M._MODULUJ=0;
  4020  002838  0101               	movlb	(_M+2) shr (0+8)
  4021  00283A  9D02               	bcf	(_M+2)& (0+255),6,b
  4022                           ;main.c: 1681: WritePWM(0);
  4023  00283C  0E00               	movlw	0
  4024  00283E  EF9C  F06A         	goto	_WritePWM
  4025                           ;main.c: 1682: }
  4026  002842                     __end_of_SetLoMod:
  4027                           ;main.c: 1686: void DecRozruch(void)
  4028                           ;main.c: 1687: {
  4029  002842                     _DecRozruch:
  4030  000000                     
  4031                           ;main.c: 1688: switch(DtKNF.tpkt)
  4032  002842  D0F2               	goto	l341
  4033  002844                     l343:
  4034                           ;main.c: 1691: case 2:
  4035  002844  0101               	movlb	(_M+1) shr (0+8)
  4036  002846  A701               	btfss	(_M+1)& (0+255),3,b
  4037  002848  B083               	btfsc	3971,0,c	;volatile
  4038  00284A  0012               	return	
  4039                           ;main.c: 1694: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M.
      +                          _RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._
      +                          RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
  4040  00284C  A501               	btfss	(_M+1)& (0+255),2,b
  4041  00284E  BD01               	btfsc	(_M+1)& (0+255),6,b
  4042  002850  0012               	return	
  4043  002852  0101               	movlb	(_M+2) shr (0+8)
  4044  002854  A302               	btfss	(_M+2)& (0+255),1,b
  4045  002856  B102               	btfsc	(_M+2)& (0+255),0,b
  4046  002858  0012               	return	
  4047  00285A  0101               	movlb	(_M+3) shr (0+8)
  4048  00285C  AF03               	btfss	(_M+3)& (0+255),7,b
  4049  00285E  B903               	btfsc	(_M+3)& (0+255),4,b
  4050  002860  0012               	return	
  4051  002862  BB03               	btfsc	(_M+3)& (0+255),5,b
  4052  002864  0012               	return	
  4053                           ;main.c: 1695: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&
      +                          &!M._RUSZ_NCISN)
  4054  002866  0101               	movlb	(_M+2) shr (0+8)
  4055  002868  A702               	btfss	(_M+2)& (0+255),3,b
  4056  00286A  B304               	btfsc	(_M+4)& (0+255),1,b
  4057  00286C  0012               	return	
  4058  00286E  0101               	movlb	(_M+4) shr (0+8)
  4059  002870  B504               	btfsc	(_M+4)& (0+255),2,b
  4060  002872  0012               	return	
  4061                           ;main.c: 1696: {
  4062  002874  0101               	movlb	_M shr (0+8)
  4063  002876  B300               	btfsc	_M& (0+255),1,b
  4064  002878  D011               	goto	L44
  4065                           ;main.c: 1698: {
  4066                           ;main.c: 1700: {
  4067                           ;main.c: 1702: M.BL15=0;
  4068                           ;main.c: 1703: SetRozruch();
  4069                           ;main.c: 1704: }
  4070                           ;main.c: 1706: else
  4071  00287A  0101               	movlb	_M shr (0+8)
  4072  00287C  A100               	btfss	_M& (0+255),0,b
  4073  00287E  D004               	goto	l350
  4074                           ;main.c: 1708: {
  4075  002880  0101               	movlb	_DtCO shr (0+8)
  4076  002882  B3B6               	btfsc	_DtCO& (0+255),1,b
  4077  002884  D8E0               	call	_SetRozruch	;wreg free
  4078                           ;main.c: 1710: }
  4079  002886  0012               	return	
  4080  002888                     l350:
  4081                           ;main.c: 1711: else
  4082  002888  0101               	movlb	_M shr (0+8)
  4083  00288A  A500               	btfss	_M& (0+255),2,b
  4084  00288C  D004               	goto	l353
  4085                           ;main.c: 1713: {
  4086  00288E  0101               	movlb	_DtCO shr (0+8)
  4087  002890  B7B6               	btfsc	_DtCO& (0+255),3,b
  4088  002892  D8D9               	call	_SetRozruch	;wreg free
  4089                           ;main.c: 1715: }
  4090  002894  0012               	return	
  4091  002896                     l353:
  4092                           ;main.c: 1716: else
  4093  002896  0101               	movlb	_M shr (0+8)
  4094  002898  A900               	btfss	_M& (0+255),4,b
  4095  00289A  D007               	goto	l356
  4096  00289C                     L44:
  4097                           ;main.c: 1718: {
  4098  00289C  0101               	movlb	_DtCW shr (0+8)
  4099  00289E  A3A7               	btfss	_DtCW& (0+255),1,b
  4100  0028A0  0012               	return	
  4101                           ;main.c: 1720: {
  4102  0028A2  0101               	movlb	(_M+2) shr (0+8)
  4103  0028A4  8B02               	bsf	(_M+2)& (0+255),5,b
  4104                           ;main.c: 1722: M.BL15=0;
  4105  0028A6  6B13               	clrf	(_M+19)& (0+255),b
  4106                           ;main.c: 1723: SetRozruch();
  4107  0028A8  D0CE               	goto	_SetRozruch	;wreg free
  4108                           ;main.c: 1724: }
  4109  0028AA                     l356:
  4110                           ;main.c: 1726: else
  4111  0028AA  0101               	movlb	_M shr (0+8)
  4112  0028AC  AB00               	btfss	_M& (0+255),5,b
  4113  0028AE  D009               	goto	l359
  4114  0028B0  0101               	movlb	_DtCO shr (0+8)
  4115  0028B2  A3B6               	btfss	_DtCO& (0+255),1,b
  4116  0028B4  D006               	goto	l359
  4117  0028B6  0101               	movlb	(_M+2) shr (0+8)
  4118  0028B8  B902               	btfsc	(_M+2)& (0+255),4,b
  4119  0028BA  D003               	goto	l359
  4120  0028BC  0101               	movlb	(_M+2) shr (0+8)
  4121  0028BE  AB02               	btfss	(_M+2)& (0+255),5,b
  4122                           ;main.c: 1728: {
  4123  0028C0  D0C2               	goto	_SetRozruch	;wreg free
  4124                           ;main.c: 1730: }
  4125  0028C2                     l359:
  4126                           ;main.c: 1731: else
  4127  0028C2  0101               	movlb	_M shr (0+8)
  4128  0028C4  AD00               	btfss	_M& (0+255),6,b
  4129  0028C6  D009               	goto	l361
  4130  0028C8  0101               	movlb	_DtCO shr (0+8)
  4131  0028CA  ADB6               	btfss	_DtCO& (0+255),6,b
  4132  0028CC  D006               	goto	l361
  4133  0028CE  0101               	movlb	(_M+2) shr (0+8)
  4134  0028D0  B902               	btfsc	(_M+2)& (0+255),4,b
  4135  0028D2  D003               	goto	l361
  4136  0028D4  0101               	movlb	(_M+2) shr (0+8)
  4137  0028D6  AB02               	btfss	(_M+2)& (0+255),5,b
  4138                           ;main.c: 1733: {
  4139  0028D8  D0B6               	goto	_SetRozruch	;wreg free
  4140                           ;main.c: 1735: }
  4141  0028DA                     l361:
  4142                           ;main.c: 1736: else
  4143  0028DA  0101               	movlb	_M shr (0+8)
  4144  0028DC  AF00               	btfss	_M& (0+255),7,b
  4145  0028DE  0012               	return	
  4146  0028E0  0101               	movlb	_DtCW shr (0+8)
  4147  0028E2  ABA7               	btfss	_DtCW& (0+255),5,b
  4148  0028E4  0012               	return	
  4149                           ;main.c: 1738: {
  4150  0028E6  0101               	movlb	(_M+2) shr (0+8)
  4151  0028E8  8B02               	bsf	(_M+2)& (0+255),5,b
  4152                           ;main.c: 1740: M.BL15=0;
  4153  0028EA  6B13               	clrf	(_M+19)& (0+255),b
  4154                           ;main.c: 1741: SetRozruch();
  4155  0028EC  D0AC               	goto	_SetRozruch	;wreg free
  4156                           ;main.c: 1742: }
  4157  0028EE                     l365:
  4158                           ;main.c: 1747: case 3:
  4159  0028EE  0101               	movlb	(_M+1) shr (0+8)
  4160  0028F0  A701               	btfss	(_M+1)& (0+255),3,b
  4161  0028F2  B083               	btfsc	3971,0,c	;volatile
  4162  0028F4  0012               	return	
  4163                           ;main.c: 1750: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M.
      +                          _RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._
      +                          RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
  4164  0028F6  A501               	btfss	(_M+1)& (0+255),2,b
  4165  0028F8  BD01               	btfsc	(_M+1)& (0+255),6,b
  4166  0028FA  0012               	return	
  4167  0028FC  0101               	movlb	(_M+2) shr (0+8)
  4168  0028FE  A302               	btfss	(_M+2)& (0+255),1,b
  4169  002900  B102               	btfsc	(_M+2)& (0+255),0,b
  4170  002902  0012               	return	
  4171  002904  0101               	movlb	(_M+3) shr (0+8)
  4172  002906  AF03               	btfss	(_M+3)& (0+255),7,b
  4173  002908  B903               	btfsc	(_M+3)& (0+255),4,b
  4174  00290A  0012               	return	
  4175  00290C  BB03               	btfsc	(_M+3)& (0+255),5,b
  4176  00290E  0012               	return	
  4177                           ;main.c: 1751: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&
      +                          &!M._RUSZ_NCISN)
  4178  002910  0101               	movlb	(_M+2) shr (0+8)
  4179  002912  A702               	btfss	(_M+2)& (0+255),3,b
  4180  002914  B304               	btfsc	(_M+4)& (0+255),1,b
  4181  002916  0012               	return	
  4182  002918  0101               	movlb	(_M+4) shr (0+8)
  4183  00291A  B504               	btfsc	(_M+4)& (0+255),2,b
  4184  00291C  0012               	return	
  4185                           ;main.c: 1752: {
  4186  00291E  0101               	movlb	_M shr (0+8)
  4187  002920  B300               	btfsc	_M& (0+255),1,b
  4188  002922  D014               	goto	L47
  4189                           ;main.c: 1754: {
  4190                           ;main.c: 1756: {
  4191                           ;main.c: 1758: M.BL15=0;
  4192                           ;main.c: 1759: SetRozruch();
  4193                           ;main.c: 1760: }
  4194                           ;main.c: 1762: else
  4195  002924  0101               	movlb	_M shr (0+8)
  4196  002926  A100               	btfss	_M& (0+255),0,b
  4197  002928  D004               	goto	l372
  4198                           ;main.c: 1764: {
  4199  00292A  0101               	movlb	_DtCO shr (0+8)
  4200  00292C  B3B6               	btfsc	_DtCO& (0+255),1,b
  4201  00292E  D88B               	call	_SetRozruch	;wreg free
  4202                           ;main.c: 1766: }
  4203  002930  0012               	return	
  4204  002932                     l372:
  4205                           ;main.c: 1767: else
  4206  002932  0101               	movlb	_M shr (0+8)
  4207  002934  A500               	btfss	_M& (0+255),2,b
  4208  002936  D004               	goto	l375
  4209                           ;main.c: 1769: {
  4210  002938  0101               	movlb	_DtCO shr (0+8)
  4211  00293A  B7B6               	btfsc	_DtCO& (0+255),3,b
  4212  00293C  D884               	call	_SetRozruch	;wreg free
  4213                           ;main.c: 1771: }
  4214  00293E  0012               	return	
  4215  002940                     l375:
  4216                           ;main.c: 1772: else
  4217  002940  0101               	movlb	_M shr (0+8)
  4218  002942  B700               	btfsc	_M& (0+255),3,b
  4219  002944  D006               	goto	L46
  4220                           ;main.c: 1774: {
  4221                           ;main.c: 1776: {
  4222                           ;main.c: 1778: M.BL15=0;
  4223                           ;main.c: 1779: SetRozruch();
  4224                           ;main.c: 1780: }
  4225                           ;main.c: 1782: else
  4226  002946  0101               	movlb	_M shr (0+8)
  4227  002948  A900               	btfss	_M& (0+255),4,b
  4228  00294A  D00A               	goto	l381
  4229  00294C                     L47:
  4230                           ;main.c: 1819: {
  4231  00294C  0101               	movlb	_DtCW shr (0+8)
  4232  00294E  A3A7               	btfss	_DtCW& (0+255),1,b
  4233  002950  0012               	return	
  4234                           ;main.c: 1784: {
  4235  002952                     L46:
  4236  002952  0101               	movlb	(_DtCO+1) shr (0+8)
  4237  002954  A3B7               	btfss	(_DtCO+1)& (0+255),1,b
  4238  002956  0012               	return	
  4239                           ;main.c: 1786: {
  4240  002958  0101               	movlb	(_M+2) shr (0+8)
  4241  00295A  8B02               	bsf	(_M+2)& (0+255),5,b
  4242                           ;main.c: 1788: M.BL15=0;
  4243  00295C  6B13               	clrf	(_M+19)& (0+255),b
  4244                           ;main.c: 1789: SetRozruch();
  4245  00295E  D073               	goto	_SetRozruch	;wreg free
  4246                           ;main.c: 1790: }
  4247  002960                     l381:
  4248                           ;main.c: 1792: else
  4249  002960  0101               	movlb	_M shr (0+8)
  4250  002962  AB00               	btfss	_M& (0+255),5,b
  4251  002964  D009               	goto	l384
  4252  002966  0101               	movlb	_DtCO shr (0+8)
  4253  002968  A3B6               	btfss	_DtCO& (0+255),1,b
  4254  00296A  D006               	goto	l384
  4255  00296C  0101               	movlb	(_M+2) shr (0+8)
  4256  00296E  B902               	btfsc	(_M+2)& (0+255),4,b
  4257  002970  D003               	goto	l384
  4258  002972  0101               	movlb	(_M+2) shr (0+8)
  4259  002974  AB02               	btfss	(_M+2)& (0+255),5,b
  4260                           ;main.c: 1794: {
  4261  002976  D067               	goto	_SetRozruch	;wreg free
  4262                           ;main.c: 1796: }
  4263  002978                     l384:
  4264                           ;main.c: 1797: else
  4265  002978  0101               	movlb	_M shr (0+8)
  4266  00297A  AD00               	btfss	_M& (0+255),6,b
  4267  00297C  D006               	goto	l386
  4268  00297E  0101               	movlb	_DtCO shr (0+8)
  4269  002980  ADB6               	btfss	_DtCO& (0+255),6,b
  4270  002982  D003               	goto	l386
  4271  002984  0101               	movlb	(_M+2) shr (0+8)
  4272  002986  A902               	btfss	(_M+2)& (0+255),4,b
  4273  002988  D04B               	goto	L57
  4274                           ;main.c: 1799: {
  4275                           ;main.c: 1801: }
  4276  00298A                     l386:
  4277                           ;main.c: 1802: else
  4278  00298A  0101               	movlb	_M shr (0+8)
  4279  00298C  AF00               	btfss	_M& (0+255),7,b
  4280  00298E  0012               	return	
  4281  002990  0101               	movlb	_DtCW shr (0+8)
  4282  002992  ABA7               	btfss	_DtCW& (0+255),5,b
  4283  002994  0012               	return	
  4284  002996  D7DD               	goto	L46
  4285                           ;main.c: 1804: {
  4286                           ;main.c: 1806: M.BL15=0;
  4287                           ;main.c: 1807: SetRozruch();
  4288                           ;main.c: 1808: }
  4289  002998                     l389:
  4290                           ;main.c: 1811: }
  4291                           ;main.c: 1813: {
  4292  002998  0101               	movlb	(_M+1) shr (0+8)
  4293  00299A  A701               	btfss	(_M+1)& (0+255),3,b
  4294  00299C  B083               	btfsc	3971,0,c	;volatile
  4295  00299E  0012               	return	
  4296                           ;main.c: 1815: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M.
      +                          _RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._
      +                          RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
  4297  0029A0  A501               	btfss	(_M+1)& (0+255),2,b
  4298  0029A2  BD01               	btfsc	(_M+1)& (0+255),6,b
  4299  0029A4  0012               	return	
  4300  0029A6  0101               	movlb	(_M+2) shr (0+8)
  4301  0029A8  A302               	btfss	(_M+2)& (0+255),1,b
  4302  0029AA  B102               	btfsc	(_M+2)& (0+255),0,b
  4303  0029AC  0012               	return	
  4304  0029AE  0101               	movlb	(_M+3) shr (0+8)
  4305  0029B0  AF03               	btfss	(_M+3)& (0+255),7,b
  4306  0029B2  B903               	btfsc	(_M+3)& (0+255),4,b
  4307  0029B4  0012               	return	
  4308  0029B6  BB03               	btfsc	(_M+3)& (0+255),5,b
  4309  0029B8  0012               	return	
  4310                           ;main.c: 1816: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&
      +                          &!M._RUSZ_NCISN)
  4311  0029BA  0101               	movlb	(_M+2) shr (0+8)
  4312  0029BC  A702               	btfss	(_M+2)& (0+255),3,b
  4313  0029BE  B304               	btfsc	(_M+4)& (0+255),1,b
  4314  0029C0  0012               	return	
  4315  0029C2  0101               	movlb	(_M+4) shr (0+8)
  4316  0029C4  B504               	btfsc	(_M+4)& (0+255),2,b
  4317  0029C6  0012               	return	
  4318                           ;main.c: 1817: {
  4319  0029C8  0101               	movlb	_M shr (0+8)
  4320  0029CA  B300               	btfsc	_M& (0+255),1,b
  4321  0029CC  D7BF               	goto	L47
  4322                           ;main.c: 1821: {
  4323                           ;main.c: 1823: M.BL15=0;
  4324                           ;main.c: 1824: SetRozruch();
  4325                           ;main.c: 1825: }
  4326                           ;main.c: 1827: else
  4327  0029CE  0101               	movlb	_M shr (0+8)
  4328  0029D0  A100               	btfss	_M& (0+255),0,b
  4329  0029D2  D004               	goto	l396
  4330                           ;main.c: 1829: {
  4331  0029D4  0101               	movlb	_DtCO shr (0+8)
  4332  0029D6  B3B6               	btfsc	_DtCO& (0+255),1,b
  4333  0029D8  D836               	call	_SetRozruch	;wreg free
  4334                           ;main.c: 1831: }
  4335  0029DA  0012               	return	
  4336  0029DC                     l396:
  4337                           ;main.c: 1832: else
  4338  0029DC  0101               	movlb	_M shr (0+8)
  4339  0029DE  A500               	btfss	_M& (0+255),2,b
  4340  0029E0  D004               	goto	l399
  4341                           ;main.c: 1834: {
  4342  0029E2  0101               	movlb	_DtCO shr (0+8)
  4343  0029E4  B7B6               	btfsc	_DtCO& (0+255),3,b
  4344  0029E6  D82F               	call	_SetRozruch	;wreg free
  4345                           ;main.c: 1836: }
  4346  0029E8  0012               	return	
  4347  0029EA                     l399:
  4348                           ;main.c: 1837: else
  4349  0029EA  0101               	movlb	_M shr (0+8)
  4350  0029EC  B700               	btfsc	_M& (0+255),3,b
  4351  0029EE  D7B1               	goto	L46
  4352                           ;main.c: 1839: {
  4353                           ;main.c: 1841: {
  4354                           ;main.c: 1843: M.BL15=0;
  4355                           ;main.c: 1844: SetRozruch();
  4356                           ;main.c: 1845: }
  4357                           ;main.c: 1847: else
  4358  0029F0  0101               	movlb	_M shr (0+8)
  4359  0029F2  B900               	btfsc	_M& (0+255),4,b
  4360  0029F4  D7AB               	goto	L47
  4361                           ;main.c: 1849: {
  4362                           ;main.c: 1851: {
  4363                           ;main.c: 1853: M.BL15=0;
  4364                           ;main.c: 1854: SetRozruch();
  4365                           ;main.c: 1855: }
  4366                           ;main.c: 1857: else
  4367  0029F6  0101               	movlb	_M shr (0+8)
  4368  0029F8  AB00               	btfss	_M& (0+255),5,b
  4369  0029FA  D009               	goto	l408
  4370  0029FC  0101               	movlb	_DtCO shr (0+8)
  4371  0029FE  A3B6               	btfss	_DtCO& (0+255),1,b
  4372  002A00  D006               	goto	l408
  4373  002A02  0101               	movlb	(_M+2) shr (0+8)
  4374  002A04  B902               	btfsc	(_M+2)& (0+255),4,b
  4375  002A06  D003               	goto	l408
  4376  002A08  0101               	movlb	(_M+2) shr (0+8)
  4377  002A0A  AB02               	btfss	(_M+2)& (0+255),5,b
  4378                           ;main.c: 1859: {
  4379  002A0C  D01C               	goto	_SetRozruch	;wreg free
  4380                           ;main.c: 1861: }
  4381  002A0E                     l408:
  4382                           ;main.c: 1862: else
  4383  002A0E  0101               	movlb	_M shr (0+8)
  4384  002A10  AD00               	btfss	_M& (0+255),6,b
  4385  002A12  D7BB               	goto	l386
  4386  002A14  0101               	movlb	_DtCO shr (0+8)
  4387  002A16  ADB6               	btfss	_DtCO& (0+255),6,b
  4388  002A18  D7B8               	goto	l386
  4389  002A1A  0101               	movlb	(_M+2) shr (0+8)
  4390  002A1C  B902               	btfsc	(_M+2)& (0+255),4,b
  4391  002A1E  D7B5               	goto	l386
  4392  002A20                     L57:
  4393  002A20  0101               	movlb	(_M+2) shr (0+8)
  4394  002A22  AB02               	btfss	(_M+2)& (0+255),5,b
  4395                           ;main.c: 1864: {
  4396  002A24  D010               	goto	_SetRozruch	;wreg free
  4397                           ;main.c: 1866: }
  4398  002A26  D7B1               	goto	l386
  4399                           ;main.c: 1867: else
  4400                           ;main.c: 1869: {
  4401                           ;main.c: 1871: M.BL15=0;
  4402                           ;main.c: 1872: SetRozruch();
  4403                           ;main.c: 1873: }
  4404  002A28                     l341:
  4405  002A28  C237  FFE8         	movff	_DtKNF+7,wreg
  4406  002A2C  0A00               	xorlw	0
  4407  002A2E  E101 D75E          	bz	l365
  4408  002A32  0A01               	xorlw	1
  4409  002A34  E101 D706          	bz	l343
  4410  002A38  0A03               	xorlw	3
  4411  002A3A  E101 D703          	bz	l343
  4412  002A3E  0A01               	xorlw	1
  4413  002A40  E101 D755          	bz	l365
  4414  002A44  D7A9               	goto	l389
  4415                           ;main.c: 1878: }
  4416  002A46                     __end_of_DecRozruch:
  4417                           ;main.c: 1880: void SetRozruch(void)
  4418                           ;main.c: 1881: {
  4419  002A46                     _SetRozruch:
  4420  000000                     
  4421                           ;main.c: 1882: M._BLOKUJ_3M=0;
  4422  002A46  0101               	movlb	(_M+2) shr (0+8)
  4423  002A48  9902               	bcf	(_M+2)& (0+255),4,b
  4424                           ;main.c: 1883: M.BL3=0;
  4425  002A4A  6B12               	clrf	(_M+18)& (0+255),b
  4426                           ;main.c: 1884: EndL3();
  4427  002A4C  ECA9  F076         	call	_EndL3	;wreg free
  4428                           ;main.c: 1885: M._RUSZ_48=0;
  4429  002A50  0101               	movlb	(_M+1) shr (0+8)
  4430  002A52  9901               	bcf	(_M+1)& (0+255),4,b
  4431                           ;main.c: 1886: M.R48=0;
  4432  002A54  6B10               	clrf	(_M+16)& (0+255),b
  4433                           ;main.c: 1887: M._RUSZ_48Z3=0;
  4434  002A56  9B01               	bcf	(_M+1)& (0+255),5,b
  4435                           ;main.c: 1888: M.R48Z3=0;
  4436  002A58  6B11               	clrf	(_M+17)& (0+255),b
  4437                           ;main.c: 1889: M._VWYBIEG=0;
  4438  002A5A  9F01               	bcf	(_M+1)& (0+255),7,b
  4439                           ;main.c: 1890: M._DE_VNT=0;
  4440  002A5C  9505               	bcf	(_M+5)& (0+255),2,b
  4441                           ;main.c: 1891: M.VWB=0;
  4442  002A5E  6B1A               	clrf	(_M+26)& (0+255),b
  4443                           ;main.c: 1893: M._KCW_PMP=0;
  4444  002A60  9305               	bcf	(_M+5)& (0+255),1,b
  4445                           ;main.c: 1894: M.WYL=0;
  4446  002A62  6B14               	clrf	(_M+20)& (0+255),b
  4447                           ;main.c: 1895: M.RPR=0;
  4448  002A64  6B15               	clrf	(_M+21)& (0+255),b
  4449                           ;main.c: 1896: M._WYLACZ=0;
  4450  002A66  9301               	bcf	(_M+1)& (0+255),1,b
  4451                           ;main.c: 1897: M._RUSZ_POMPE=0;
  4452  002A68  9702               	bcf	(_M+2)& (0+255),3,b
  4453                           ;main.c: 1898: M._ROZRUCH=1;
  4454  002A6A  8701               	bsf	(_M+1)& (0+255),3,b
  4455                           ;main.c: 1899: M.ROZ=0;
  4456  002A6C  6B0F               	clrf	(_M+15)& (0+255),b
  4457                           ;main.c: 1901: }
  4458  002A6E  0012               	return	
  4459  002A70                     __end_of_SetRozruch:
  4460                           ;main.c: 1905: void DecWylacz(void)
  4461                           ;main.c: 1906: {
  4462  002A70                     _DecWylacz:
  4463  000000                     
  4464                           ;main.c: 1907: switch(DtKNF.tpkt)
  4465  002A70  D109               	goto	l416
  4466  002A72                     l418:
  4467                           ;main.c: 1910: case 2:
  4468  002A72  0101               	movlb	(_M+1) shr (0+8)
  4469  002A74  B301               	btfsc	(_M+1)& (0+255),1,b
  4470  002A76  0012               	return	
  4471                           ;main.c: 1913: if(M._ROZRUCH||RD0)
  4472  002A78  B701               	btfsc	(_M+1)& (0+255),3,b
  4473  002A7A  D002               	goto	u7860
  4474  002A7C  A083               	btfss	3971,0,c	;volatile
  4475  002A7E  0012               	return	
  4476  002A80                     u7860:
  4477                           ;main.c: 1914: {
  4478  002A80  0101               	movlb	_M shr (0+8)
  4479  002A82  A300               	btfss	_M& (0+255),1,b
  4480  002A84  B100               	btfsc	_M& (0+255),0,b
  4481  002A86  D00E               	goto	l421
  4482  002A88  B500               	btfsc	_M& (0+255),2,b
  4483  002A8A  D00C               	goto	l421
  4484  002A8C  0101               	movlb	_M shr (0+8)
  4485  002A8E  B900               	btfsc	_M& (0+255),4,b
  4486  002A90  D009               	goto	l421
  4487  002A92  0101               	movlb	_M shr (0+8)
  4488  002A94  BB00               	btfsc	_M& (0+255),5,b
  4489  002A96  D006               	goto	l421
  4490  002A98  0101               	movlb	_M shr (0+8)
  4491  002A9A  BD00               	btfsc	_M& (0+255),6,b
  4492  002A9C  D003               	goto	l421
  4493  002A9E  0101               	movlb	_M shr (0+8)
  4494  002AA0  AF00               	btfss	_M& (0+255),7,b
  4495                           ;main.c: 1916: {
  4496  002AA2  D16C               	goto	_SetWylacz	;wreg free
  4497                           ;main.c: 1918: return;
  4498  002AA4                     l421:
  4499                           ;main.c: 1919: }
  4500  002AA4  0101               	movlb	(_M+1) shr (0+8)
  4501  002AA6  AD01               	btfss	(_M+1)& (0+255),6,b
  4502  002AA8  B302               	btfsc	(_M+2)& (0+255),1,b
  4503  002AAA  D168               	goto	_SetWylacz
  4504  002AAC  0101               	movlb	(_M+2) shr (0+8)
  4505  002AAE  B102               	btfsc	(_M+2)& (0+255),0,b
  4506  002AB0  D165               	goto	_SetWylacz
  4507  002AB2  0101               	movlb	(_M+3) shr (0+8)
  4508  002AB4  BF03               	btfsc	(_M+3)& (0+255),7,b
  4509  002AB6  D162               	goto	_SetWylacz
  4510  002AB8  0101               	movlb	(_M+3) shr (0+8)
  4511  002ABA  B903               	btfsc	(_M+3)& (0+255),4,b
  4512  002ABC  D15F               	goto	_SetWylacz
  4513  002ABE  0101               	movlb	(_M+3) shr (0+8)
  4514  002AC0  BB03               	btfsc	(_M+3)& (0+255),5,b
  4515  002AC2  D15C               	goto	_SetWylacz
  4516  002AC4  0101               	movlb	(_M+2) shr (0+8)
  4517  002AC6  B702               	btfsc	(_M+2)& (0+255),3,b
  4518  002AC8  D159               	goto	_SetWylacz
  4519  002ACA  0101               	movlb	(_M+4) shr (0+8)
  4520  002ACC  B304               	btfsc	(_M+4)& (0+255),1,b
  4521  002ACE  D156               	goto	_SetWylacz
  4522  002AD0  0101               	movlb	(_M+4) shr (0+8)
  4523  002AD2  B504               	btfsc	(_M+4)& (0+255),2,b
  4524                           ;main.c: 1921: {
  4525  002AD4  D153               	goto	_SetWylacz	;wreg free
  4526                           ;main.c: 1923: }
  4527                           ;main.c: 1924: else
  4528  002AD6  0101               	movlb	_M shr (0+8)
  4529  002AD8  A300               	btfss	_M& (0+255),1,b
  4530  002ADA  D004               	goto	l424
  4531                           ;main.c: 1926: {
  4532  002ADC  0101               	movlb	_DtCW shr (0+8)
  4533  002ADE  B5A7               	btfsc	_DtCW& (0+255),2,b
  4534  002AE0  D94D               	call	_SetWylacz	;wreg free
  4535                           ;main.c: 1928: }
  4536  002AE2  0012               	return	
  4537  002AE4                     l424:
  4538                           ;main.c: 1929: else
  4539  002AE4  0101               	movlb	_M shr (0+8)
  4540  002AE6  A100               	btfss	_M& (0+255),0,b
  4541  002AE8  D006               	goto	l427
  4542                           ;main.c: 1931: {
  4543  002AEA  0E13               	movlw	19
  4544  002AEC  EC4C  F06F         	call	_RdPrt
  4545  002AF0  B0D8               	btfsc	status,0,c
  4546  002AF2  D944               	call	_SetWylacz	;wreg free
  4547                           ;main.c: 1933: }
  4548  002AF4  0012               	return	
  4549  002AF6                     l427:
  4550                           ;main.c: 1934: else
  4551  002AF6  0101               	movlb	_M shr (0+8)
  4552  002AF8  A500               	btfss	_M& (0+255),2,b
  4553  002AFA  D004               	goto	l430
  4554                           ;main.c: 1936: {
  4555  002AFC  0101               	movlb	_DtCO shr (0+8)
  4556  002AFE  B9B6               	btfsc	_DtCO& (0+255),4,b
  4557  002B00  D93D               	call	_SetWylacz	;wreg free
  4558                           ;main.c: 1938: }
  4559  002B02  0012               	return	
  4560  002B04                     l430:
  4561                           ;main.c: 1939: else
  4562  002B04  0101               	movlb	_M shr (0+8)
  4563  002B06  A900               	btfss	_M& (0+255),4,b
  4564  002B08  D004               	goto	l433
  4565                           ;main.c: 1941: {
  4566  002B0A  0101               	movlb	_DtCW shr (0+8)
  4567  002B0C  B5A7               	btfsc	_DtCW& (0+255),2,b
  4568  002B0E  D936               	call	_SetWylacz	;wreg free
  4569                           ;main.c: 1943: }
  4570  002B10  0012               	return	
  4571  002B12                     l433:
  4572                           ;main.c: 1944: else
  4573  002B12  0101               	movlb	_M shr (0+8)
  4574  002B14  AB00               	btfss	_M& (0+255),5,b
  4575  002B16  D01A               	goto	l436
  4576  002B18  0E13               	movlw	19
  4577  002B1A  EC4C  F06F         	call	_RdPrt
  4578  002B1E  E206               	bc	u8310
  4579  002B20  0101               	movlb	(_M+2) shr (0+8)
  4580  002B22  B902               	btfsc	(_M+2)& (0+255),4,b
  4581  002B24  D003               	goto	u8310
  4582  002B26  0101               	movlb	(_M+2) shr (0+8)
  4583  002B28  AB02               	btfss	(_M+2)& (0+255),5,b
  4584  002B2A  D010               	goto	l436
  4585  002B2C                     u8310:
  4586                           ;main.c: 1946: {
  4587  002B2C  0E13               	movlw	19
  4588  002B2E  EC4C  F06F         	call	_RdPrt
  4589  002B32  E30B               	bnc	l437
  4590  002B34  0101               	movlb	(_M+2) shr (0+8)
  4591  002B36  B902               	btfsc	(_M+2)& (0+255),4,b
  4592  002B38  D121               	goto	_SetWylacz
  4593  002B3A  0101               	movlb	(_M+2) shr (0+8)
  4594  002B3C  BB02               	btfsc	(_M+2)& (0+255),5,b
  4595  002B3E  D11E               	goto	_SetWylacz
  4596                           ;main.c: 1948: {
  4597  002B40  0101               	movlb	(_M+2) shr (0+8)
  4598  002B42  8902               	bsf	(_M+2)& (0+255),4,b
  4599                           ;main.c: 1950: M.BL3=0;
  4600  002B44  6B12               	clrf	(_M+18)& (0+255),b
  4601                           ;main.c: 1951: PrintL3();
  4602  002B46  ECA1  F076         	call	_PrintL3	;wreg free
  4603  002B4A                     l437:
  4604                           ;main.c: 1952: }
  4605  002B4A  D118               	goto	_SetWylacz	;wreg free
  4606                           ;main.c: 1954: }
  4607  002B4C                     l436:
  4608                           ;main.c: 1955: else
  4609  002B4C  0101               	movlb	_M shr (0+8)
  4610  002B4E  AD00               	btfss	_M& (0+255),6,b
  4611  002B50  D009               	goto	l439
  4612  002B52  0101               	movlb	_DtCO shr (0+8)
  4613  002B54  BFB6               	btfsc	_DtCO& (0+255),7,b
  4614  002B56  D112               	goto	_SetWylacz
  4615  002B58  0101               	movlb	(_M+2) shr (0+8)
  4616  002B5A  B902               	btfsc	(_M+2)& (0+255),4,b
  4617  002B5C  D10F               	goto	_SetWylacz
  4618  002B5E  0101               	movlb	(_M+2) shr (0+8)
  4619  002B60  BB02               	btfsc	(_M+2)& (0+255),5,b
  4620                           ;main.c: 1957: {
  4621  002B62  D10C               	goto	_SetWylacz	;wreg free
  4622                           ;main.c: 1959: }
  4623  002B64                     l439:
  4624                           ;main.c: 1960: else
  4625  002B64  0101               	movlb	_M shr (0+8)
  4626  002B66  AF00               	btfss	_M& (0+255),7,b
  4627  002B68  0012               	return	
  4628  002B6A  0101               	movlb	_DtCW shr (0+8)
  4629  002B6C  BDA7               	btfsc	_DtCW& (0+255),6,b
  4630                           ;main.c: 1962: {
  4631  002B6E  D906               	call	_SetWylacz	;wreg free
  4632                           ;main.c: 1964: }
  4633  002B70  0012               	return	
  4634  002B72                     l443:
  4635                           ;main.c: 1969: case 3:
  4636  002B72  0101               	movlb	(_M+1) shr (0+8)
  4637  002B74  B301               	btfsc	(_M+1)& (0+255),1,b
  4638  002B76  0012               	return	
  4639                           ;main.c: 1972: if(M._ROZRUCH||RD0)
  4640  002B78  B701               	btfsc	(_M+1)& (0+255),3,b
  4641  002B7A  D002               	goto	u8500
  4642  002B7C  A083               	btfss	3971,0,c	;volatile
  4643  002B7E  0012               	return	
  4644  002B80                     u8500:
  4645                           ;main.c: 1973: {
  4646  002B80  0101               	movlb	_M shr (0+8)
  4647  002B82  A300               	btfss	_M& (0+255),1,b
  4648  002B84  B700               	btfsc	_M& (0+255),3,b
  4649  002B86  D011               	goto	l446
  4650  002B88  B100               	btfsc	_M& (0+255),0,b
  4651  002B8A  D00F               	goto	l446
  4652  002B8C  0101               	movlb	_M shr (0+8)
  4653  002B8E  B500               	btfsc	_M& (0+255),2,b
  4654  002B90  D00C               	goto	l446
  4655  002B92  0101               	movlb	_M shr (0+8)
  4656  002B94  B900               	btfsc	_M& (0+255),4,b
  4657  002B96  D009               	goto	l446
  4658  002B98  0101               	movlb	_M shr (0+8)
  4659  002B9A  BB00               	btfsc	_M& (0+255),5,b
  4660  002B9C  D006               	goto	l446
  4661  002B9E  0101               	movlb	_M shr (0+8)
  4662  002BA0  BD00               	btfsc	_M& (0+255),6,b
  4663  002BA2  D003               	goto	l446
  4664  002BA4  0101               	movlb	_M shr (0+8)
  4665  002BA6  AF00               	btfss	_M& (0+255),7,b
  4666                           ;main.c: 1975: {
  4667  002BA8  D0E9               	goto	_SetWylacz	;wreg free
  4668                           ;main.c: 1977: return;
  4669  002BAA                     l446:
  4670                           ;main.c: 1978: }
  4671  002BAA  0101               	movlb	(_M+1) shr (0+8)
  4672  002BAC  AD01               	btfss	(_M+1)& (0+255),6,b
  4673  002BAE  B302               	btfsc	(_M+2)& (0+255),1,b
  4674  002BB0  D0E5               	goto	_SetWylacz
  4675  002BB2  0101               	movlb	(_M+2) shr (0+8)
  4676  002BB4  B102               	btfsc	(_M+2)& (0+255),0,b
  4677  002BB6  D0E2               	goto	_SetWylacz
  4678  002BB8  0101               	movlb	(_M+3) shr (0+8)
  4679  002BBA  BF03               	btfsc	(_M+3)& (0+255),7,b
  4680  002BBC  D0DF               	goto	_SetWylacz
  4681  002BBE  0101               	movlb	(_M+3) shr (0+8)
  4682  002BC0  B903               	btfsc	(_M+3)& (0+255),4,b
  4683  002BC2  D0DC               	goto	_SetWylacz
  4684  002BC4  0101               	movlb	(_M+3) shr (0+8)
  4685  002BC6  BB03               	btfsc	(_M+3)& (0+255),5,b
  4686  002BC8  D0D9               	goto	_SetWylacz
  4687  002BCA  0101               	movlb	(_M+2) shr (0+8)
  4688  002BCC  B702               	btfsc	(_M+2)& (0+255),3,b
  4689  002BCE  D0D6               	goto	_SetWylacz
  4690  002BD0  0101               	movlb	(_M+4) shr (0+8)
  4691  002BD2  B304               	btfsc	(_M+4)& (0+255),1,b
  4692  002BD4  D0D3               	goto	_SetWylacz
  4693  002BD6  0101               	movlb	(_M+4) shr (0+8)
  4694  002BD8  B504               	btfsc	(_M+4)& (0+255),2,b
  4695                           ;main.c: 1980: {
  4696  002BDA  D0D0               	goto	_SetWylacz	;wreg free
  4697                           ;main.c: 1982: }
  4698                           ;main.c: 1983: else
  4699  002BDC  0101               	movlb	_M shr (0+8)
  4700  002BDE  A300               	btfss	_M& (0+255),1,b
  4701  002BE0  D004               	goto	l449
  4702  002BE2                     L60:
  4703                           ;main.c: 1985: {
  4704  002BE2  0101               	movlb	_DtCW shr (0+8)
  4705  002BE4  B5A7               	btfsc	_DtCW& (0+255),2,b
  4706  002BE6  D0CA               	goto	_SetWylacz
  4707  002BE8  D049               	goto	L52
  4708                           ;main.c: 1987: }
  4709  002BEA                     l449:
  4710                           ;main.c: 1988: else
  4711  002BEA  0101               	movlb	_M shr (0+8)
  4712  002BEC  A700               	btfss	_M& (0+255),3,b
  4713  002BEE  D004               	goto	l452
  4714                           ;main.c: 1990: {
  4715  002BF0  0101               	movlb	(_DtCO+1) shr (0+8)
  4716  002BF2  A3B7               	btfss	(_DtCO+1)& (0+255),1,b
  4717  002BF4  D8C3               	call	_SetWylacz	;wreg free
  4718                           ;main.c: 1992: }
  4719  002BF6  0012               	return	
  4720  002BF8                     l452:
  4721                           ;main.c: 1993: else
  4722  002BF8  0101               	movlb	_M shr (0+8)
  4723  002BFA  A100               	btfss	_M& (0+255),0,b
  4724  002BFC  D006               	goto	l455
  4725                           ;main.c: 1995: {
  4726  002BFE  0E13               	movlw	19
  4727  002C00  EC4C  F06F         	call	_RdPrt
  4728  002C04  B0D8               	btfsc	status,0,c
  4729  002C06  D8BA               	call	_SetWylacz	;wreg free
  4730                           ;main.c: 1997: }
  4731  002C08  0012               	return	
  4732  002C0A                     l455:
  4733                           ;main.c: 1998: else
  4734  002C0A  0101               	movlb	_M shr (0+8)
  4735  002C0C  A500               	btfss	_M& (0+255),2,b
  4736  002C0E  D004               	goto	l458
  4737                           ;main.c: 2000: {
  4738  002C10  0101               	movlb	_DtCO shr (0+8)
  4739  002C12  B9B6               	btfsc	_DtCO& (0+255),4,b
  4740  002C14  D8B3               	call	_SetWylacz	;wreg free
  4741                           ;main.c: 2002: }
  4742  002C16  0012               	return	
  4743  002C18                     l458:
  4744                           ;main.c: 2003: else
  4745  002C18  0101               	movlb	_M shr (0+8)
  4746  002C1A  B900               	btfsc	_M& (0+255),4,b
  4747  002C1C  D7E2               	goto	L60
  4748                           ;main.c: 2005: {
  4749                           ;main.c: 2007: }
  4750                           ;main.c: 2008: else
  4751  002C1E  0101               	movlb	_M shr (0+8)
  4752  002C20  AB00               	btfss	_M& (0+255),5,b
  4753  002C22  D01A               	goto	l491
  4754  002C24  0E13               	movlw	19
  4755  002C26  EC4C  F06F         	call	_RdPrt
  4756  002C2A  E206               	bc	u9030
  4757  002C2C  0101               	movlb	(_M+2) shr (0+8)
  4758  002C2E  B902               	btfsc	(_M+2)& (0+255),4,b
  4759  002C30  D003               	goto	u9030
  4760  002C32  0101               	movlb	(_M+2) shr (0+8)
  4761  002C34  AB02               	btfss	(_M+2)& (0+255),5,b
  4762  002C36  D010               	goto	l491
  4763  002C38                     u9030:
  4764                           ;main.c: 2010: {
  4765  002C38  0E13               	movlw	19
  4766  002C3A  EC4C  F06F         	call	_RdPrt
  4767  002C3E  E30B               	bnc	l465
  4768  002C40  0101               	movlb	(_M+2) shr (0+8)
  4769  002C42  B902               	btfsc	(_M+2)& (0+255),4,b
  4770  002C44  D09B               	goto	_SetWylacz
  4771  002C46  0101               	movlb	(_M+2) shr (0+8)
  4772  002C48  BB02               	btfsc	(_M+2)& (0+255),5,b
  4773  002C4A  D098               	goto	_SetWylacz
  4774                           ;main.c: 2012: {
  4775  002C4C  0101               	movlb	(_M+2) shr (0+8)
  4776  002C4E  8902               	bsf	(_M+2)& (0+255),4,b
  4777                           ;main.c: 2014: M.BL3=0;
  4778  002C50  6B12               	clrf	(_M+18)& (0+255),b
  4779                           ;main.c: 2015: PrintL3();
  4780  002C52  ECA1  F076         	call	_PrintL3	;wreg free
  4781  002C56                     l465:
  4782                           ;main.c: 2016: }
  4783  002C56  D092               	goto	_SetWylacz	;wreg free
  4784                           ;main.c: 2018: }
  4785                           ;main.c: 2079: }
  4786                           ;main.c: 2081: }
  4787  002C58                     l491:
  4788                           ;main.c: 2082: else
  4789  002C58  0101               	movlb	_M shr (0+8)
  4790  002C5A  AD00               	btfss	_M& (0+255),6,b
  4791  002C5C  D009               	goto	l494
  4792  002C5E  0101               	movlb	_DtCO shr (0+8)
  4793  002C60  BFB6               	btfsc	_DtCO& (0+255),7,b
  4794  002C62  D08C               	goto	_SetWylacz
  4795  002C64  0101               	movlb	(_M+2) shr (0+8)
  4796  002C66  B902               	btfsc	(_M+2)& (0+255),4,b
  4797  002C68  D089               	goto	_SetWylacz
  4798  002C6A  0101               	movlb	(_M+2) shr (0+8)
  4799  002C6C  BB02               	btfsc	(_M+2)& (0+255),5,b
  4800                           ;main.c: 2084: {
  4801  002C6E  D086               	goto	_SetWylacz	;wreg free
  4802                           ;main.c: 2086: }
  4803  002C70                     l494:
  4804                           ;main.c: 2087: else
  4805  002C70  0101               	movlb	_M shr (0+8)
  4806  002C72  AF00               	btfss	_M& (0+255),7,b
  4807  002C74  0012               	return	
  4808  002C76  0101               	movlb	_DtCW shr (0+8)
  4809  002C78  BDA7               	btfsc	_DtCW& (0+255),6,b
  4810  002C7A  D080               	goto	_SetWylacz
  4811  002C7C                     L52:
  4812  002C7C  0101               	movlb	(_DtCO+1) shr (0+8)
  4813  002C7E  B3B7               	btfsc	(_DtCO+1)& (0+255),1,b
  4814  002C80  0012               	return	
  4815                           ;main.c: 2089: {
  4816  002C82  D07C               	goto	_SetWylacz	;wreg free
  4817                           ;main.c: 2091: }
  4818  002C84                     l416:
  4819  002C84  C237  FFE8         	movff	_DtKNF+7,wreg
  4820  002C88  0A00               	xorlw	0
  4821  002C8A  E101 D772          	bz	l443
  4822  002C8E  0A01               	xorlw	1
  4823  002C90  E101 D6EF          	bz	l418
  4824  002C94  0A03               	xorlw	3
  4825  002C96  E101 D6EC          	bz	l418
  4826  002C9A  0A01               	xorlw	1
  4827  002C9C  E101 D769          	bz	l443
  4828                           ;main.c: 2031: }
  4829                           ;main.c: 2033: {
  4830  002CA0  0101               	movlb	(_M+1) shr (0+8)
  4831  002CA2  B301               	btfsc	(_M+1)& (0+255),1,b
  4832                           ;main.c: 2096: }
  4833  002CA4  0012               	return	
  4834                           ;main.c: 2019: else
  4835                           ;main.c: 2021: {
  4836                           ;main.c: 2023: }
  4837                           ;main.c: 2024: else
  4838                           ;main.c: 2026: {
  4839                           ;main.c: 2028: }
  4840                           ;main.c: 2035: if(M._ROZRUCH||RD0)
  4841  002CA6  B701               	btfsc	(_M+1)& (0+255),3,b
  4842  002CA8  D002               	goto	u9240
  4843  002CAA  A083               	btfss	3971,0,c	;volatile
  4844  002CAC  0012               	return	
  4845  002CAE                     u9240:
  4846                           ;main.c: 2036: {
  4847  002CAE  0101               	movlb	_M shr (0+8)
  4848  002CB0  A300               	btfss	_M& (0+255),1,b
  4849  002CB2  B700               	btfsc	_M& (0+255),3,b
  4850  002CB4  D011               	goto	l473
  4851  002CB6  B100               	btfsc	_M& (0+255),0,b
  4852  002CB8  D00F               	goto	l473
  4853  002CBA  0101               	movlb	_M shr (0+8)
  4854  002CBC  B500               	btfsc	_M& (0+255),2,b
  4855  002CBE  D00C               	goto	l473
  4856  002CC0  0101               	movlb	_M shr (0+8)
  4857  002CC2  B900               	btfsc	_M& (0+255),4,b
  4858  002CC4  D009               	goto	l473
  4859  002CC6  0101               	movlb	_M shr (0+8)
  4860  002CC8  BB00               	btfsc	_M& (0+255),5,b
  4861  002CCA  D006               	goto	l473
  4862  002CCC  0101               	movlb	_M shr (0+8)
  4863  002CCE  BD00               	btfsc	_M& (0+255),6,b
  4864  002CD0  D003               	goto	l473
  4865  002CD2  0101               	movlb	_M shr (0+8)
  4866  002CD4  AF00               	btfss	_M& (0+255),7,b
  4867                           ;main.c: 2038: {
  4868  002CD6  D052               	goto	_SetWylacz	;wreg free
  4869                           ;main.c: 2040: return;
  4870  002CD8                     l473:
  4871                           ;main.c: 2041: }
  4872  002CD8  0101               	movlb	(_M+1) shr (0+8)
  4873  002CDA  AD01               	btfss	(_M+1)& (0+255),6,b
  4874  002CDC  B302               	btfsc	(_M+2)& (0+255),1,b
  4875  002CDE  D04E               	goto	_SetWylacz
  4876  002CE0  0101               	movlb	(_M+2) shr (0+8)
  4877  002CE2  B102               	btfsc	(_M+2)& (0+255),0,b
  4878  002CE4  D04B               	goto	_SetWylacz
  4879  002CE6  0101               	movlb	(_M+3) shr (0+8)
  4880  002CE8  BF03               	btfsc	(_M+3)& (0+255),7,b
  4881  002CEA  D048               	goto	_SetWylacz
  4882  002CEC  0101               	movlb	(_M+3) shr (0+8)
  4883  002CEE  B903               	btfsc	(_M+3)& (0+255),4,b
  4884  002CF0  D045               	goto	_SetWylacz
  4885  002CF2  0101               	movlb	(_M+3) shr (0+8)
  4886  002CF4  BB03               	btfsc	(_M+3)& (0+255),5,b
  4887  002CF6  D042               	goto	_SetWylacz
  4888  002CF8  0101               	movlb	(_M+2) shr (0+8)
  4889  002CFA  B702               	btfsc	(_M+2)& (0+255),3,b
  4890  002CFC  D03F               	goto	_SetWylacz
  4891  002CFE  0101               	movlb	(_M+4) shr (0+8)
  4892  002D00  B304               	btfsc	(_M+4)& (0+255),1,b
  4893  002D02  D03C               	goto	_SetWylacz
  4894  002D04  0101               	movlb	(_M+4) shr (0+8)
  4895  002D06  B504               	btfsc	(_M+4)& (0+255),2,b
  4896                           ;main.c: 2043: {
  4897  002D08  D039               	goto	_SetWylacz	;wreg free
  4898                           ;main.c: 2045: }
  4899                           ;main.c: 2046: else
  4900  002D0A  0101               	movlb	_M shr (0+8)
  4901  002D0C  B300               	btfsc	_M& (0+255),1,b
  4902  002D0E  D769               	goto	L60
  4903                           ;main.c: 2048: {
  4904                           ;main.c: 2050: }
  4905                           ;main.c: 2051: else
  4906  002D10  0101               	movlb	_M shr (0+8)
  4907  002D12  A700               	btfss	_M& (0+255),3,b
  4908  002D14  D004               	goto	l479
  4909                           ;main.c: 2053: {
  4910  002D16  0101               	movlb	(_DtCO+1) shr (0+8)
  4911  002D18  A3B7               	btfss	(_DtCO+1)& (0+255),1,b
  4912  002D1A  D830               	call	_SetWylacz	;wreg free
  4913                           ;main.c: 2055: }
  4914  002D1C  0012               	return	
  4915  002D1E                     l479:
  4916                           ;main.c: 2056: else
  4917  002D1E  0101               	movlb	_M shr (0+8)
  4918  002D20  A100               	btfss	_M& (0+255),0,b
  4919  002D22  D006               	goto	l482
  4920                           ;main.c: 2058: {
  4921  002D24  0E13               	movlw	19
  4922  002D26  EC4C  F06F         	call	_RdPrt
  4923  002D2A  B0D8               	btfsc	status,0,c
  4924  002D2C  D827               	call	_SetWylacz	;wreg free
  4925                           ;main.c: 2060: }
  4926  002D2E  0012               	return	
  4927  002D30                     l482:
  4928                           ;main.c: 2061: else
  4929  002D30  0101               	movlb	_M shr (0+8)
  4930  002D32  A500               	btfss	_M& (0+255),2,b
  4931  002D34  D004               	goto	l485
  4932                           ;main.c: 2063: {
  4933  002D36  0101               	movlb	_DtCO shr (0+8)
  4934  002D38  B9B6               	btfsc	_DtCO& (0+255),4,b
  4935  002D3A  D820               	call	_SetWylacz	;wreg free
  4936                           ;main.c: 2065: }
  4937  002D3C  0012               	return	
  4938  002D3E                     l485:
  4939                           ;main.c: 2066: else
  4940  002D3E  0101               	movlb	_M shr (0+8)
  4941  002D40  B900               	btfsc	_M& (0+255),4,b
  4942  002D42  D74F               	goto	L60
  4943                           ;main.c: 2068: {
  4944                           ;main.c: 2070: }
  4945                           ;main.c: 2071: else
  4946  002D44  0101               	movlb	_M shr (0+8)
  4947  002D46  AB00               	btfss	_M& (0+255),5,b
  4948  002D48  D787               	goto	l491
  4949  002D4A  0E13               	movlw	19
  4950  002D4C  EC4C  F06F         	call	_RdPrt
  4951  002D50  E206               	bc	u9770
  4952  002D52  0101               	movlb	(_M+2) shr (0+8)
  4953  002D54  B902               	btfsc	(_M+2)& (0+255),4,b
  4954  002D56  D003               	goto	u9770
  4955  002D58  0101               	movlb	(_M+2) shr (0+8)
  4956  002D5A  AB02               	btfss	(_M+2)& (0+255),5,b
  4957  002D5C  D77D               	goto	l491
  4958  002D5E                     u9770:
  4959                           ;main.c: 2073: {
  4960  002D5E  0E13               	movlw	19
  4961  002D60  EC4C  F06F         	call	_RdPrt
  4962  002D64  E30B               	bnc	l492
  4963  002D66  0101               	movlb	(_M+2) shr (0+8)
  4964  002D68  B902               	btfsc	(_M+2)& (0+255),4,b
  4965  002D6A  D008               	goto	_SetWylacz
  4966  002D6C  0101               	movlb	(_M+2) shr (0+8)
  4967  002D6E  BB02               	btfsc	(_M+2)& (0+255),5,b
  4968  002D70  D005               	goto	_SetWylacz
  4969                           ;main.c: 2075: {
  4970  002D72  0101               	movlb	(_M+2) shr (0+8)
  4971  002D74  8902               	bsf	(_M+2)& (0+255),4,b
  4972                           ;main.c: 2077: M.BL3=0;
  4973  002D76  6B12               	clrf	(_M+18)& (0+255),b
  4974                           ;main.c: 2078: PrintL3();
  4975  002D78  ECA1  F076         	call	_PrintL3	;wreg free
  4976  002D7C                     l492:
  4977  002D7C                     __end_of_DecWylacz:
  4978                           ;main.c: 2098: void SetWylacz(void)
  4979                           ;main.c: 2099: {
  4980  002D7C                     _SetWylacz:
  4981  000000                     
  4982                           ;main.c: 2100: GrzejOFF();
  4983  002D7C  D8D5               	call	_GrzejOFF	;wreg free
  4984                           ;main.c: 2103: switch(DtKNF.tpkt)
  4985  002D7E  D010               	goto	l499
  4986  002D80                     l501:
  4987                           ;main.c: 2109: {
  4988  002D80  0101               	movlb	(_M+5) shr (0+8)
  4989                           ;main.c: 2106: case 2:
  4990  002D82  B483               	btfsc	3971,2,c	;volatile
  4991  002D84  D004               	goto	L31
  4992  002D86  8305               	bsf	(_M+5)& (0+255),1,b
  4993                           ;main.c: 2111: M._BLOKUJ_15S=1;
  4994  002D88  8B02               	bsf	(_M+2)& (0+255),5,b
  4995                           ;main.c: 2112: M.BL15=0;
  4996  002D8A  6B13               	clrf	(_M+19)& (0+255),b
  4997                           ;main.c: 2113: }
  4998  002D8C  D001               	goto	l503
  4999                           ;main.c: 2114: else M._KCW_PMP=0;
  5000  002D8E                     L31:
  5001  002D8E  9305               	bcf	(_M+5)& (0+255),1,b
  5002  002D90                     l503:
  5003                           ;main.c: 2115: ToObiegCO();
  5004  002D90  DCDE               	call	_ToObiegCO	;wreg free
  5005                           ;main.c: 2116: break;
  5006  002D92  D012               	goto	l498
  5007  002D94                     l505:
  5008                           ;main.c: 2119: case 3:
  5009  002D94  B283               	btfsc	3971,1,c	;volatile
  5010  002D96  D010               	goto	l498
  5011  002D98                     u9970:
  5012                           ;main.c: 2131: {
  5013  002D98  0101               	movlb	(_M+2) shr (0+8)
  5014  002D9A  8B02               	bsf	(_M+2)& (0+255),5,b
  5015                           ;main.c: 2133: M.BL15=0;
  5016  002D9C  6B13               	clrf	(_M+19)& (0+255),b
  5017                           ;main.c: 2134: }
  5018  002D9E  D00C               	goto	l498
  5019  002DA0                     l499:
  5020  002DA0  C237  FFE8         	movff	_DtKNF+7,wreg
  5021  002DA4  0A00               	xorlw	0
  5022  002DA6  E0F6               	bz	l505
  5023  002DA8  0A01               	xorlw	1
  5024  002DAA  E0EA               	bz	l501
  5025  002DAC  0A03               	xorlw	3
  5026  002DAE  E0E8               	bz	l501
  5027  002DB0  0A01               	xorlw	1
  5028  002DB2  E0F0               	bz	l505
  5029                           ;main.c: 2122: {
  5030                           ;main.c: 2124: M.BL15=0;
  5031                           ;main.c: 2125: }
  5032                           ;main.c: 2127: }
  5033                           ;main.c: 2129: {
  5034  002DB4  A283               	btfss	3971,1,c	;volatile
  5035  002DB6  D7F0               	goto	u9970
  5036  002DB8                     l498:
  5037                           ;main.c: 2139: M._WYLACZ=1;
  5038  002DB8  0101               	movlb	(_M+1) shr (0+8)
  5039  002DBA  8301               	bsf	(_M+1)& (0+255),1,b
  5040                           ;main.c: 2140: if(M._TURBO&&RD3) M._VWYBIEG=1;
  5041  002DBC  BB04               	btfsc	(_M+4)& (0+255),5,b
  5042  002DBE  A683               	btfss	3971,3,c	;volatile
  5043  002DC0  D001               	goto	l509
  5044  002DC2  8F01               	bsf	(_M+1)& (0+255),7,b
  5045  002DC4                     l509:
  5046                           ;main.c: 2141: M.ROZ=0;
  5047  002DC4  0101               	movlb	(_M+15) shr (0+8)
  5048  002DC6  6B0F               	clrf	(_M+15)& (0+255),b
  5049                           ;main.c: 2142: M.MNM=0;
  5050  002DC8  6B18               	clrf	(_M+24)& (0+255),b
  5051                           ;main.c: 2143: M._ROZRUCH=0;
  5052  002DCA  9701               	bcf	(_M+1)& (0+255),3,b
  5053                           ;main.c: 2144: M._RUN_MNMOD=0;
  5054  002DCC  9105               	bcf	(_M+5)& (0+255),0,b
  5055                           ;main.c: 2147: DtCO._on_DZ_CO=0;
  5056  002DCE  0101               	movlb	_DtCO shr (0+8)
  5057  002DD0  9BB6               	bcf	_DtCO& (0+255),5,b
  5058                           ;main.c: 2148: SetPrt(9,0);
  5059  002DD2  0100               	movlb	__Lparam shr (0+8)
  5060  002DD4  6BEF               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  5061  002DD6  0E09               	movlw	9
  5062  002DD8  EC5D  F06F         	call	_SetPrt
  5063                           ;main.c: 2149: DtCW._on_DZ_CW=0;
  5064  002DDC  0101               	movlb	_DtCW shr (0+8)
  5065  002DDE  99A7               	bcf	_DtCW& (0+255),4,b
  5066                           ;main.c: 2150: SetPrt(10,0);
  5067  002DE0  0100               	movlb	__Lparam shr (0+8)
  5068  002DE2  6BEF               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  5069  002DE4  0E0A               	movlw	10
  5070  002DE6  EF5D  F06F         	goto	_SetPrt
  5071                           ;main.c: 2151: }
  5072  002DEA                     __end_of_SetWylacz:
  5073                           ;main.c: 2154: void FunkcjaSerwisowa(void)
  5074                           ;main.c: 2155: {
  5075  002DEA                     _FunkcjaSerwisowa:
  5076  000000                     
  5077                           ;main.c: 2156: if(M._AKTYWNE_KNF)
  5078  002DEA  0101               	movlb	(_M+3) shr (0+8)
  5079  002DEC  A503               	btfss	(_M+3)& (0+255),2,b
  5080  002DEE  D02D               	goto	l514
  5081                           ;main.c: 2157: {
  5082  002DF0  6B1B               	clrf	(_M+27)& (0+255),b
  5083                           ;main.c: 2159: M._AKTYWNE_SRW=0;
  5084  002DF2  9F02               	bcf	(_M+2)& (0+255),7,b
  5085                           ;main.c: 2160: }
  5086  002DF4  0012               	return	
  5087                           ;main.c: 2161: else
  5088  002DF6                     l515:
  5089                           ;main.c: 2163: {
  5090                           ;main.c: 2165: {
  5091  002DF6  0101               	movlb	(_PFN+1) shr (0+8)
  5092  002DF8  51A1               	movf	(_PFN+1)& (0+255),w,b
  5093  002DFA  0A03               	xorlw	3
  5094  002DFC  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  5095  002DFE  A4D8               	btfss	status,2,c
  5096  002E00  0012               	return	
  5097  002E02  0E01               	movlw	1
  5098  002E04  0100               	movlb	__Lparam shr (0+8)
  5099  002E06  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  5100  002E08  C16F  FFE8         	movff	_RSDT1+75,wreg
  5101  002E0C  ECC7  F076         	call	_GetBit2
  5102  002E10  A0D8               	btfss	status,0,c
  5103  002E12  0012               	return	
  5104                           ;main.c: 2167: {
  5105  002E14  0E01               	movlw	1
  5106  002E16  CFE8 F11B          	movff	wreg,_M+27
  5107                           ;main.c: 2169: M._AKTYWNE_SRW=1;
  5108  002E1A  0101               	movlb	(_M+2) shr (0+8)
  5109  002E1C  8F02               	bsf	(_M+2)& (0+255),7,b
  5110                           ;main.c: 2170: StartRTM(1);
  5111  002E1E  EF96  F073         	goto	_StartRTM
  5112                           ;main.c: 2171: }
  5113  002E22                     l517:
  5114                           ;main.c: 2173: }
  5115                           ;main.c: 2175: {
  5116  002E22  0101               	movlb	(_PFN+1) shr (0+8)
  5117  002E24  51A1               	movf	(_PFN+1)& (0+255),w,b
  5118  002E26  0A03               	xorlw	3
  5119  002E28  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  5120  002E2A  E10B               	bnz	l518
  5121  002E2C  0101               	movlb	_PFN shr (0+8)
  5122  002E2E  BBA0               	btfsc	_PFN& (0+255),5,b
  5123  002E30  D008               	goto	l518
  5124  002E32  0E01               	movlw	1
  5125  002E34  ECAE  F073         	call	_RTM
  5126  002E38  6E00               	movwf	btemp,c
  5127  002E3A  0E3C               	movlw	60
  5128  002E3C  5C00               	subwf	btemp,w,c
  5129  002E3E  A0D8               	btfss	status,0,c
  5130  002E40  0012               	return	
  5131  002E42                     l518:
  5132                           ;main.c: 2178: else
  5133  002E42  0101               	movlb	(_M+27) shr (0+8)
  5134  002E44  6B1B               	clrf	(_M+27)& (0+255),b
  5135                           ;main.c: 2181: M._AKTYWNE_SRW=0;
  5136  002E46  9F02               	bcf	(_M+2)& (0+255),7,b
  5137                           ;main.c: 2182: }
  5138  002E48  0012               	return	
  5139  002E4A                     l514:
  5140  002E4A  C11B  FFE8         	movff	_M+27,wreg
  5141  002E4E  0A00               	xorlw	0
  5142  002E50  E0D2               	bz	l515
  5143  002E52  0A01               	xorlw	1
  5144  002E54  E0E6               	bz	l517
  5145  002E56  0012               	return	
  5146                           ;main.c: 2186: }
  5147  002E58                     __end_of_FunkcjaSerwisowa:
  5148                           ;main.c: 2235: void BlokadaL3(void)
  5149                           ;main.c: 2236: {
  5150  002E58                     _BlokadaL3:
  5151  000000                     
  5152                           ;main.c: 2237: switch(M.BL3)
  5153  002E58  D02C               	goto	l522
  5154  002E5A                     l523:
  5155                           ;main.c: 2238: {
  5156                           ;main.c: 2240: {
  5157  002E5A  0E01               	movlw	1
  5158  002E5C  CFE8 F112          	movff	wreg,_M+18
  5159                           ;main.c: 2242: StartRTM(2);
  5160  002E60  0E02               	movlw	2
  5161  002E62  EC96  F073         	call	_StartRTM
  5162  002E66                     l524:
  5163                           ;main.c: 2243: }
  5164                           ;main.c: 2245: {
  5165  002E66  ECA1  F076         	call	_PrintL3	;wreg free
  5166                           ;main.c: 2247: if((PFN.poz!=3&&!M._ZMKCOCW)||M._
      +                          pob_CW||(DtKNF.tpkt==0&&DtCW._wpz_CW))
  5167  002E6A  0101               	movlb	(_PFN+1) shr (0+8)
  5168  002E6C  51A1               	movf	(_PFN+1)& (0+255),w,b
  5169  002E6E  0A03               	xorlw	3
  5170  002E70  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  5171  002E72  E003               	bz	u10121
  5172  002E74  0101               	movlb	(_M+1) shr (0+8)
  5173  002E76  A501               	btfss	(_M+1)& (0+255),2,b
  5174  002E78  D00A               	goto	u10180
  5175  002E7A                     u10121:
  5176  002E7A  0101               	movlb	_M shr (0+8)
  5177  002E7C  B900               	btfsc	_M& (0+255),4,b
  5178  002E7E  D007               	goto	u10180
  5179  002E80  EE02  F037         	lfsr	0,_DtKNF+7
  5180  002E84  50EF               	movf	indf0,w,c
  5181  002E86  E108               	bnz	l525
  5182  002E88  0101               	movlb	_DtCW shr (0+8)
  5183  002E8A  A7A7               	btfss	_DtCW& (0+255),3,b
  5184  002E8C  D005               	goto	l525
  5185  002E8E                     u10180:
  5186                           ;main.c: 2248: {
  5187  002E8E  0101               	movlb	(_M+2) shr (0+8)
  5188  002E90  9902               	bcf	(_M+2)& (0+255),4,b
  5189                           ;main.c: 2250: M.BL3=0;
  5190  002E92  6B12               	clrf	(_M+18)& (0+255),b
  5191                           ;main.c: 2251: EndL3();
  5192  002E94  ECA9  F076         	call	_EndL3	;wreg free
  5193  002E98                     l525:
  5194                           ;main.c: 2252: }
  5195  002E98  0E02               	movlw	2
  5196  002E9A  ECAE  F073         	call	_RTM
  5197  002E9E  6E00               	movwf	btemp,c
  5198  002EA0  0E03               	movlw	3
  5199  002EA2  5C00               	subwf	btemp,w,c
  5200  002EA4  A0D8               	btfss	status,0,c
  5201  002EA6  0012               	return	
  5202                           ;main.c: 2254: M._BLOKUJ_3M=0;
  5203  002EA8  0101               	movlb	(_M+2) shr (0+8)
  5204  002EAA  9902               	bcf	(_M+2)& (0+255),4,b
  5205                           ;main.c: 2255: M.BL3=0;
  5206  002EAC  6B12               	clrf	(_M+18)& (0+255),b
  5207                           ;main.c: 2256: EndL3();
  5208  002EAE  EFA9  F076         	goto	_EndL3	;wreg free
  5209                           ;main.c: 2257: }
  5210  002EB2                     l522:
  5211  002EB2  C112  FFE8         	movff	_M+18,wreg
  5212  002EB6  0A00               	xorlw	0
  5213  002EB8  E0D0               	bz	l523
  5214  002EBA  0A01               	xorlw	1
  5215  002EBC  E0D4               	bz	l524
  5216  002EBE  0012               	return	
  5217                           ;main.c: 2259: }
  5218  002EC0                     __end_of_BlokadaL3:
  5219                           ;main.c: 2263: void Blokada15S(void)
  5220                           ;main.c: 2264: {
  5221  002EC0                     _Blokada15S:
  5222  000000                     
  5223                           ;main.c: 2265: switch(M.BL15)
  5224  002EC0  D021               	goto	l529
  5225  002EC2                     l530:
  5226                           ;main.c: 2266: {
  5227                           ;main.c: 2268: {
  5228  002EC2  0E01               	movlw	1
  5229  002EC4  CFE8 F113          	movff	wreg,_M+19
  5230                           ;main.c: 2270: StartRTdS(4);
  5231  002EC8  0E04               	movlw	4
  5232  002ECA  EC51  F073         	call	_StartRTdS
  5233  002ECE                     l531:
  5234                           ;main.c: 2271: }
  5235                           ;main.c: 2273: {
  5236  002ECE  0E04               	movlw	4
  5237  002ED0  EC63  F073         	call	_RTdS
  5238  002ED4  6E00               	movwf	btemp,c
  5239  002ED6  0E02               	movlw	2
  5240  002ED8  5C00               	subwf	btemp,w,c
  5241  002EDA  E308               	bnc	l532
  5242  002EDC  0101               	movlb	(_PFN+1) shr (0+8)
  5243  002EDE  51A1               	movf	(_PFN+1)& (0+255),w,b
  5244  002EE0  0A03               	xorlw	3
  5245  002EE2  11A2               	iorwf	(_PFN+2)& (0+255),w,b
  5246  002EE4  E003               	bz	l532
  5247                           ;main.c: 2275: {
  5248  002EE6  0101               	movlb	(_M+2) shr (0+8)
  5249  002EE8  9B02               	bcf	(_M+2)& (0+255),5,b
  5250                           ;main.c: 2277: M.BL15=0;
  5251  002EEA  6B13               	clrf	(_M+19)& (0+255),b
  5252  002EEC                     l532:
  5253                           ;main.c: 2278: }
  5254  002EEC  0E04               	movlw	4
  5255  002EEE  EC63  F073         	call	_RTdS
  5256  002EF2  6E00               	movwf	btemp,c
  5257  002EF4  0E96               	movlw	150
  5258  002EF6  5C00               	subwf	btemp,w,c
  5259  002EF8  A0D8               	btfss	status,0,c
  5260  002EFA  0012               	return	
  5261                           ;main.c: 2280: M._BLOKUJ_15S=0;
  5262  002EFC  0101               	movlb	(_M+2) shr (0+8)
  5263  002EFE  9B02               	bcf	(_M+2)& (0+255),5,b
  5264                           ;main.c: 2281: M.BL15=0;
  5265  002F00  6B13               	clrf	(_M+19)& (0+255),b
  5266                           ;main.c: 2282: }
  5267  002F02  0012               	return	
  5268  002F04                     l529:
  5269  002F04  C113  FFE8         	movff	_M+19,wreg
  5270  002F08  0A00               	xorlw	0
  5271  002F0A  E0DB               	bz	l530
  5272  002F0C  0A01               	xorlw	1
  5273  002F0E  E0DF               	bz	l531
  5274  002F10  0012               	return	
  5275                           ;main.c: 2284: }
  5276  002F12                     __end_of_Blokada15S:
  5277                           ;main.c: 2288: void GrzejON(void)
  5278                           ;main.c: 2289: {
  5279  002F12                     _GrzejON:
  5280  000000                     
  5281                           ;main.c: 2290: RD0=1;
  5282  002F12  8083               	bsf	3971,0,c	;volatile
  5283                           ;main.c: 2291: asm("nop");
  5284  002F14  F000               	nop		;#
  5285                           ;main.c: 2292: asm("nop");
  5286  002F16  F000               	nop		;#
  5287                           ;main.c: 2293: asm("nop");
  5288  002F18  F000               	nop		;#
  5289                           ;main.c: 2294: asm("nop");
  5290  002F1A  F000               	nop		;#
  5291                           ;main.c: 2295: asm("nop");
  5292  002F1C  F000               	nop		;#
  5293                           ;main.c: 2296: asm("nop");
  5294  002F1E  F000               	nop		;#
  5295                           ;main.c: 2297: asm("nop");
  5296  002F20  F000               	nop		;#
  5297                           ;main.c: 2298: asm("nop");
  5298  002F22  F000               	nop		;#
  5299                           ;main.c: 2299: RD3=1;
  5300  002F24  8683               	bsf	3971,3,c	;volatile
  5301                           ;main.c: 2300: }
  5302  002F26  0012               	return	
  5303  002F28                     __end_of_GrzejON:
  5304                           ;main.c: 2304: void GrzejOFF(void)
  5305                           ;main.c: 2305: {
  5306  002F28                     _GrzejOFF:
  5307  000000                     
  5308                           ;main.c: 2306: if(!M._TURBO)
  5309  002F28  0101               	movlb	(_M+4) shr (0+8)
  5310  002F2A  BB04               	btfsc	(_M+4)& (0+255),5,b
  5311  002F2C  D00B               	goto	l536
  5312                           ;main.c: 2307: {
  5313  002F2E  9683               	bcf	3971,3,c	;volatile
  5314                           ;main.c: 2309: asm("nop");
  5315  002F30  F000               	nop		;#
  5316                           ;main.c: 2310: asm("nop");
  5317  002F32  F000               	nop		;#
  5318                           ;main.c: 2311: asm("nop");
  5319  002F34  F000               	nop		;#
  5320                           ;main.c: 2312: asm("nop");
  5321  002F36  F000               	nop		;#
  5322                           ;main.c: 2313: asm("nop");
  5323  002F38  F000               	nop		;#
  5324                           ;main.c: 2314: asm("nop");
  5325  002F3A  F000               	nop		;#
  5326                           ;main.c: 2315: asm("nop");
  5327  002F3C  F000               	nop		;#
  5328                           ;main.c: 2316: asm("nop");
  5329  002F3E  F000               	nop		;#
  5330                           ;main.c: 2317: RD0=0;
  5331  002F40  9083               	bcf	3971,0,c	;volatile
  5332                           ;main.c: 2318: }
  5333  002F42  0012               	return	
  5334  002F44                     l536:
  5335                           ;main.c: 2319: else
  5336  002F44  9083               	bcf	3971,0,c	;volatile
  5337                           ;main.c: 2322: }
  5338  002F46  0012               	return	
  5339  002F48                     __end_of_GrzejOFF:
  5340                           ;main.c: 2327: void Rozruch(void)
  5341                           ;main.c: 2328: {
  5342  002F48                     _Rozruch:
  5343  000000                     
  5344                           ;main.c: 2329: StartRTS(16);
  5345  002F48  0E10               	movlw	16
  5346  002F4A  EC6F  F073         	call	_StartRTS
  5347                           ;main.c: 2330: switch(M.ROZ)
  5348  002F4E  D15A               	goto	l540
  5349  002F50                     l541:
  5350                           ;main.c: 2331: {
  5351                           ;main.c: 2334: {
  5352  002F50  EE02  F03A         	lfsr	0,_DtKNF+10
  5353  002F54  50EF               	movf	indf0,w,c
  5354  002F56  E004               	bz	u10270
  5355  002F58  EE02  F037         	lfsr	0,_DtKNF+7
  5356  002F5C  50EF               	movf	indf0,w,c
  5357  002F5E  E103               	bnz	l542
  5358  002F60                     u10270:
  5359                           ;main.c: 2336: {
  5360  002F60  0101               	movlb	(_M+1) shr (0+8)
  5361  002F62  B501               	btfsc	(_M+1)& (0+255),2,b
  5362  002F64  0012               	return	
  5363  002F66                     l542:
  5364                           ;main.c: 2338: }
  5365  002F66  0E01               	movlw	1
  5366  002F68  CFE8 F10F          	movff	wreg,_M+15
  5367                           ;main.c: 2340: StartRTS(2);
  5368  002F6C  0E02               	movlw	2
  5369  002F6E  EC6F  F073         	call	_StartRTS
  5370  002F72                     l544:
  5371                           ;main.c: 2341: }
  5372                           ;main.c: 2344: {
  5373  002F72  EE02  F03A         	lfsr	0,_DtKNF+10
  5374  002F76  50EF               	movf	indf0,w,c
  5375                           ;main.c: 2346: {
  5376  002F78  0E02               	movlw	2
  5377  002F7A  E125               	bnz	L32
  5378  002F7C  EC87  F073         	call	_RTS
  5379  002F80  6E00               	movwf	btemp,c
  5380  002F82  0E01               	movlw	1
  5381  002F84  5C00               	subwf	btemp,w,c
  5382  002F86  A0D8               	btfss	status,0,c
  5383  002F88  0012               	return	
  5384                           ;main.c: 2348: RD2=0;
  5385  002F8A  9483               	bcf	3971,2,c	;volatile
  5386                           ;main.c: 2349: if(!RdPrt(1))
  5387  002F8C  0E01               	movlw	1
  5388  002F8E  EC4C  F06F         	call	_RdPrt
  5389                           ;main.c: 2350: {
  5390  002F92  0E02               	movlw	2
  5391  002F94  E204               	bc	L33
  5392  002F96  CFE8 F10F          	movff	wreg,_M+15
  5393                           ;main.c: 2352: StartRTS(2);
  5394  002F9A  EF6F  F073         	goto	_StartRTS
  5395                           ;main.c: 2353: return;
  5396                           ;main.c: 2354: }
  5397  002F9E                     L33:
  5398  002F9E  EC87  F073         	call	_RTS
  5399  002FA2  6E00               	movwf	btemp,c
  5400  002FA4  0E05               	movlw	5
  5401  002FA6  5C00               	subwf	btemp,w,c
  5402  002FA8  A0D8               	btfss	status,0,c
  5403  002FAA  0012               	return	
  5404                           ;main.c: 2356: M.ERR_BTY=0x05;
  5405  002FAC  0E05               	movlw	5
  5406  002FAE  CFE8 F10E          	movff	wreg,_M+14
  5407                           ;main.c: 2357: PrintErr(0x05,1);
  5408  002FB2  0E01               	movlw	1
  5409  002FB4  0100               	movlb	__Lparam shr (0+8)
  5410  002FB6  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5411  002FB8  0E05               	movlw	5
  5412  002FBA  EC44  F076         	call	_PrintErr
  5413                           ;main.c: 2358: ToWriteESTAT();
  5414  002FBE  EC32  F073         	call	_ToWriteESTAT	;wreg free
  5415                           ;main.c: 2359: ErrPTG();
  5416  002FC2  EF9C  F01E         	goto	_ErrPTG	;wreg free
  5417                           ;main.c: 2360: return;
  5418                           ;main.c: 2361: }
  5419  002FC6                     L32:
  5420  002FC6  CFE8 F10F          	movff	wreg,_M+15
  5421                           ;main.c: 2363: StartRTS(2);
  5422  002FCA  0E02               	movlw	2
  5423  002FCC  EC6F  F073         	call	_StartRTS
  5424  002FD0                     l549:
  5425                           ;main.c: 2364: }
  5426                           ;main.c: 2367: {
  5427  002FD0  D009               	goto	l551
  5428  002FD2                     l553:
  5429                           ;main.c: 2371: case 2:
  5430  002FD2  0101               	movlb	(_M+5) shr (0+8)
  5431  002FD4  B705               	btfsc	(_M+5)& (0+255),3,b
  5432  002FD6  D011               	goto	l550
  5433  002FD8  EE02  F03A         	lfsr	0,_DtKNF+10
  5434  002FDC  50EF               	movf	indf0,w,c
  5435  002FDE  E10D               	bnz	l550
  5436                           ;main.c: 2374: break;
  5437  002FE0  D00B               	goto	u10350
  5438  002FE2                     l556:
  5439  002FE2  D00A               	goto	u10350
  5440                           ;main.c: 2377: case 3:
  5441                           ;main.c: 2384: break;
  5442                           ;main.c: 2385: }
  5443                           ;main.c: 2387: {
  5444                           ;main.c: 2393: break;
  5445  002FE4                     l551:
  5446  002FE4  C237  FFE8         	movff	_DtKNF+7,wreg
  5447  002FE8  0A00               	xorlw	0
  5448  002FEA  E0FB               	bz	l556
  5449  002FEC  0A01               	xorlw	1
  5450  002FEE  E0F1               	bz	l553
  5451  002FF0  0A03               	xorlw	3
  5452  002FF2  E0EF               	bz	l553
  5453  002FF4  0A01               	xorlw	1
  5454  002FF6  E0F5               	bz	l556
  5455  002FF8                     u10350:
  5456  002FF8  8483               	bsf	3971,2,c	;volatile
  5457  002FFA                     l550:
  5458                           ;main.c: 2396: WritePWM(PWM.MDMOD);
  5459  002FFA  C1E4  FFE8         	movff	_PWM+9,wreg
  5460  002FFE  EC9C  F06A         	call	_WritePWM
  5461                           ;main.c: 2397: M.ROZ=3;
  5462  003002  0E03               	movlw	3
  5463  003004  CFE8 F10F          	movff	wreg,_M+15
  5464                           ;main.c: 2398: StartRTS(2);
  5465  003008  0E02               	movlw	2
  5466  00300A  EC6F  F073         	call	_StartRTS
  5467  00300E                     l558:
  5468                           ;main.c: 2399: }
  5469                           ;main.c: 2402: {
  5470  00300E  0101               	movlb	(_M+4) shr (0+8)
  5471  003010  AB04               	btfss	(_M+4)& (0+255),5,b
  5472  003012  D013               	goto	l559
  5473                           ;main.c: 2404: {
  5474  003014  0E03               	movlw	3
  5475  003016  EC4C  F06F         	call	_RdPrt
  5476  00301A  B0D8               	btfsc	status,0,c
  5477  00301C  B683               	btfsc	3971,3,c	;volatile
  5478  00301E  D00C               	goto	l560
  5479                           ;main.c: 2406: {
  5480  003020  0E02               	movlw	2
  5481  003022  EC87  F073         	call	_RTS
  5482  003026  6E00               	movwf	btemp,c
  5483  003028  0E05               	movlw	5
  5484  00302A  5C00               	subwf	btemp,w,c
  5485  00302C  A0D8               	btfss	status,0,c
  5486  00302E  0012               	return	
  5487                           ;main.c: 2408: M.RCI=0;
  5488  003030  0101               	movlb	(_M+23) shr (0+8)
  5489  003032  6B17               	clrf	(_M+23)& (0+255),b
  5490                           ;main.c: 2409: M._RUSZ_CIAG=1;
  5491  003034  8102               	bsf	(_M+2)& (0+255),0,b
  5492                           ;main.c: 2410: return;
  5493  003036  0012               	return	
  5494  003038                     l560:
  5495                           ;main.c: 2411: }
  5496  003038  8683               	bsf	3971,3,c	;volatile
  5497  00303A                     l559:
  5498                           ;main.c: 2413: }
  5499  00303A  0E04               	movlw	4
  5500  00303C  CFE8 F10F          	movff	wreg,_M+15
  5501                           ;main.c: 2415: StartRTS(2);
  5502  003040  0E02               	movlw	2
  5503  003042  EC6F  F073         	call	_StartRTS
  5504  003046                     l562:
  5505                           ;main.c: 2416: }
  5506                           ;main.c: 2419: {
  5507  003046  0101               	movlb	(_M+4) shr (0+8)
  5508  003048  AB04               	btfss	(_M+4)& (0+255),5,b
  5509  00304A  D012               	goto	l563
  5510                           ;main.c: 2421: {
  5511  00304C  0E15               	movlw	21
  5512  00304E  EC4C  F06F         	call	_RdPrt
  5513  003052  A0D8               	btfss	status,0,c
  5514  003054  A683               	btfss	3971,3,c	;volatile
  5515  003056  D00C               	goto	l563
  5516                           ;main.c: 2423: {
  5517  003058  0E02               	movlw	2
  5518  00305A  EC87  F073         	call	_RTS
  5519  00305E  6E00               	movwf	btemp,c
  5520  003060  0E05               	movlw	5
  5521  003062  5C00               	subwf	btemp,w,c
  5522  003064  A0D8               	btfss	status,0,c
  5523  003066  0012               	return	
  5524                           ;main.c: 2425: M.RCI=0;
  5525  003068  0101               	movlb	(_M+23) shr (0+8)
  5526  00306A  6B17               	clrf	(_M+23)& (0+255),b
  5527                           ;main.c: 2426: M._RUSZ_CIAG=1;
  5528  00306C  8102               	bsf	(_M+2)& (0+255),0,b
  5529                           ;main.c: 2427: return;
  5530  00306E  0012               	return	
  5531  003070                     l563:
  5532                           ;main.c: 2428: }
  5533  003070  0E05               	movlw	5
  5534  003072  CFE8 F10F          	movff	wreg,_M+15
  5535                           ;main.c: 2431: StartRTS(2);
  5536  003076  0E02               	movlw	2
  5537  003078  EC6F  F073         	call	_StartRTS
  5538  00307C                     l566:
  5539                           ;main.c: 2432: }
  5540                           ;main.c: 2435: {
  5541  00307C  0101               	movlb	(_M+4) shr (0+8)
  5542  00307E  AB04               	btfss	(_M+4)& (0+255),5,b
  5543  003080  D008               	goto	l567
  5544  003082  0E15               	movlw	21
  5545  003084  EC4C  F06F         	call	_RdPrt
  5546  003088  E204               	bc	l567
  5547                           ;main.c: 2437: {
  5548  00308A  0101               	movlb	(_M+23) shr (0+8)
  5549  00308C  6B17               	clrf	(_M+23)& (0+255),b
  5550                           ;main.c: 2439: M._RUSZ_CIAG=1;
  5551  00308E  8102               	bsf	(_M+2)& (0+255),0,b
  5552                           ;main.c: 2440: return;
  5553  003090  0012               	return	
  5554  003092                     l567:
  5555                           ;main.c: 2441: }
  5556  003092  0E05               	movlw	5
  5557  003094  EC4C  F06F         	call	_RdPrt
  5558  003098  B0D8               	btfsc	status,0,c
  5559  00309A  B083               	btfsc	3971,0,c	;volatile
  5560  00309C  D015               	goto	l568
  5561                           ;main.c: 2443: {
  5562  00309E  0E02               	movlw	2
  5563  0030A0  EC87  F073         	call	_RTS
  5564  0030A4  6E00               	movwf	btemp,c
  5565  0030A6  0E05               	movlw	5
  5566  0030A8  5C00               	subwf	btemp,w,c
  5567  0030AA  A0D8               	btfss	status,0,c
  5568  0030AC  0012               	return	
  5569                           ;main.c: 2445: M.ERR_BTY=0x06;
  5570  0030AE  0E06               	movlw	6
  5571  0030B0  CFE8 F10E          	movff	wreg,_M+14
  5572                           ;main.c: 2446: PrintErr(0x06,1);
  5573  0030B4  0E01               	movlw	1
  5574  0030B6  0100               	movlb	__Lparam shr (0+8)
  5575  0030B8  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5576  0030BA  0E06               	movlw	6
  5577  0030BC  EC44  F076         	call	_PrintErr
  5578                           ;main.c: 2447: ToWriteESTAT();
  5579  0030C0  EC32  F073         	call	_ToWriteESTAT	;wreg free
  5580                           ;main.c: 2448: ErrPTG();
  5581  0030C4  EC9C  F01E         	call	_ErrPTG	;wreg free
  5582  0030C8                     l568:
  5583                           ;main.c: 2449: }
  5584  0030C8  EE02  F037         	lfsr	0,_DtKNF+7
  5585  0030CC  50EF               	movf	indf0,w,c
  5586  0030CE  E005               	bz	l570
  5587                           ;main.c: 2451: {
  5588  0030D0  0E07               	movlw	7
  5589  0030D2  CFE8 F10F          	movff	wreg,_M+15
  5590                           ;main.c: 2453: GrzejON();
  5591  0030D6  DF1D               	call	_GrzejON	;wreg free
  5592  0030D8  D06F               	goto	L53
  5593                           ;main.c: 2454: StartRTS(2);
  5594                           ;main.c: 2455: return;
  5595  0030DA                     l570:
  5596                           ;main.c: 2457: else
  5597  0030DA  0E06               	movlw	6
  5598  0030DC  CFE8 F10F          	movff	wreg,_M+15
  5599                           ;main.c: 2460: StartRTS(2);
  5600  0030E0  0E02               	movlw	2
  5601  0030E2  EC6F  F073         	call	_StartRTS
  5602  0030E6                     l572:
  5603                           ;main.c: 2461: }
  5604                           ;main.c: 2465: {
  5605  0030E6  C123  F000         	movff	_M+35,btemp
  5606  0030EA  0400               	decf	btemp,w,c
  5607  0030EC  E004               	bz	u10560
  5608  0030EE  C123  FFE8         	movff	_M+35,wreg
  5609  0030F2  0A02               	xorlw	2
  5610  0030F4  E102               	bnz	l573
  5611  0030F6                     u10560:
  5612                           ;main.c: 2467: {
  5613  0030F6  8483               	bsf	3971,2,c	;volatile
  5614                           ;main.c: 2473: }
  5615  0030F8  D01B               	goto	l574
  5616  0030FA                     l573:
  5617                           ;main.c: 2474: else
  5618  0030FA  0101               	movlb	(_M+4) shr (0+8)
  5619  0030FC  AB04               	btfss	(_M+4)& (0+255),5,b
  5620  0030FE  D008               	goto	l575
  5621  003100  0E15               	movlw	21
  5622  003102  EC4C  F06F         	call	_RdPrt
  5623  003106  E204               	bc	l575
  5624                           ;main.c: 2477: {
  5625  003108  0101               	movlb	(_M+23) shr (0+8)
  5626  00310A  6B17               	clrf	(_M+23)& (0+255),b
  5627                           ;main.c: 2479: M._RUSZ_CIAG=1;
  5628  00310C  8102               	bsf	(_M+2)& (0+255),0,b
  5629                           ;main.c: 2480: return;
  5630  00310E  0012               	return	
  5631  003110                     l575:
  5632                           ;main.c: 2481: }
  5633  003110  0E02               	movlw	2
  5634  003112  EC87  F073         	call	_RTS
  5635  003116  6E00               	movwf	btemp,c
  5636  003118  0E02               	movlw	2
  5637  00311A  5C00               	subwf	btemp,w,c
  5638  00311C  B0D8               	btfsc	status,0,c
  5639                           ;main.c: 2483: {
  5640  00311E  8483               	bsf	3971,2,c	;volatile
  5641                           ;main.c: 2489: }
  5642  003120  0E02               	movlw	2
  5643  003122  EC87  F073         	call	_RTS
  5644  003126  6E00               	movwf	btemp,c
  5645  003128  0E03               	movlw	3
  5646  00312A  5C00               	subwf	btemp,w,c
  5647  00312C  A0D8               	btfss	status,0,c
  5648  00312E  0012               	return	
  5649  003130                     l574:
  5650                           ;main.c: 2491: }
  5651  003130  0E07               	movlw	7
  5652  003132  CFE8 F10F          	movff	wreg,_M+15
  5653                           ;main.c: 2493: GrzejON();
  5654  003136  DEED               	call	_GrzejON	;wreg free
  5655                           ;main.c: 2494: StartRTS(2);
  5656  003138  0E02               	movlw	2
  5657  00313A  EC6F  F073         	call	_StartRTS
  5658  00313E                     l578:
  5659                           ;main.c: 2495: }
  5660                           ;main.c: 2498: {
  5661  00313E  D002               	goto	l580
  5662  003140                     l582:
  5663                           ;main.c: 2502: case 2:
  5664  003140  D00C               	goto	l579
  5665  003142                     l584:
  5666  003142  D00A               	goto	l585
  5667                           ;main.c: 2523: break;
  5668  003144                     l580:
  5669  003144  C237  FFE8         	movff	_DtKNF+7,wreg
  5670  003148  0A00               	xorlw	0
  5671  00314A  E0FB               	bz	l584
  5672  00314C  0A01               	xorlw	1
  5673  00314E  E0F8               	bz	l582
  5674  003150  0A03               	xorlw	3
  5675  003152  E0F6               	bz	l582
  5676  003154  0A01               	xorlw	1
  5677  003156  E0F5               	bz	l584
  5678                           ;main.c: 2507: case 3:
  5679                           ;main.c: 2514: break;
  5680  003158                     l585:
  5681                           ;main.c: 2515: }
  5682                           ;main.c: 2517: {
  5683  003158  8483               	bsf	3971,2,c	;volatile
  5684  00315A                     l579:
  5685                           ;main.c: 2526: if(M._TURBO&&!RdPrt(21))
  5686  00315A  0101               	movlb	(_M+4) shr (0+8)
  5687  00315C  AB04               	btfss	(_M+4)& (0+255),5,b
  5688  00315E  D008               	goto	l586
  5689  003160  0E15               	movlw	21
  5690  003162  EC4C  F06F         	call	_RdPrt
  5691  003166  E204               	bc	l586
  5692                           ;main.c: 2527: {
  5693  003168  0101               	movlb	(_M+23) shr (0+8)
  5694  00316A  6B17               	clrf	(_M+23)& (0+255),b
  5695                           ;main.c: 2529: M._RUSZ_CIAG=1;
  5696  00316C  8102               	bsf	(_M+2)& (0+255),0,b
  5697                           ;main.c: 2530: return;
  5698  00316E  0012               	return	
  5699  003170                     l586:
  5700                           ;main.c: 2531: }
  5701  003170  0E08               	movlw	8
  5702  003172  EC4C  F06F         	call	_RdPrt
  5703  003176  E305               	bnc	l587
  5704  003178  C1F9  FFE8         	movff	_PWM+30,wreg
  5705  00317C  EC9C  F06A         	call	_WritePWM
  5706  003180  D004               	goto	l588
  5707  003182                     l587:
  5708                           ;main.c: 2533: else WritePWM(PWM.MDMOD);
  5709  003182  C1E4  FFE8         	movff	_PWM+9,wreg
  5710  003186  EC9C  F06A         	call	_WritePWM
  5711  00318A                     l588:
  5712                           ;main.c: 2535: if(RTS(2)<2) return;
  5713  00318A  0E02               	movlw	2
  5714  00318C  EC87  F073         	call	_RTS
  5715  003190  6E00               	movwf	btemp,c
  5716  003192  0E02               	movlw	2
  5717  003194  5C00               	subwf	btemp,w,c
  5718  003196  A0D8               	btfss	status,0,c
  5719  003198  0012               	return	
  5720                           ;main.c: 2537: if(RTS(2)<7+6)
  5721  00319A  0E02               	movlw	2
  5722  00319C  EC87  F073         	call	_RTS
  5723  0031A0  6E00               	movwf	btemp,c
  5724  0031A2  0E0D               	movlw	13
  5725  0031A4  5C00               	subwf	btemp,w,c
  5726  0031A6  E20B               	bc	l590
  5727                           ;main.c: 2538: {
  5728  0031A8  0E05               	movlw	5
  5729  0031AA  EC4C  F06F         	call	_RdPrt
  5730  0031AE  A0D8               	btfss	status,0,c
  5731  0031B0  0012               	return	
  5732                           ;main.c: 2540: {
  5733  0031B2  0E08               	movlw	8
  5734  0031B4  CFE8 F10F          	movff	wreg,_M+15
  5735  0031B8                     L53:
  5736                           ;main.c: 2542: StartRTS(2);
  5737  0031B8  0E02               	movlw	2
  5738  0031BA  EF6F  F073         	goto	_StartRTS
  5739                           ;main.c: 2543: }
  5740  0031BE                     l590:
  5741                           ;main.c: 2546: else
  5742  0031BE  D03E               	goto	_DecyzjaPLM	;wreg free
  5743                           ;main.c: 2549: return;
  5744  0031C0                     l593:
  5745                           ;main.c: 2550: }
  5746                           ;main.c: 2554: {
  5747  0031C0  0101               	movlb	(_M+5) shr (0+8)
  5748  0031C2  A705               	btfss	(_M+5)& (0+255),3,b
  5749  0031C4  D003               	goto	l594
  5750                           ;main.c: 2556: {
  5751  0031C6  9701               	bcf	(_M+1)& (0+255),3,b
  5752                           ;main.c: 2558: M.ROZ=0;
  5753  0031C8  6B0F               	clrf	(_M+15)& (0+255),b
  5754                           ;main.c: 2559: return;
  5755  0031CA  0012               	return	
  5756  0031CC                     l594:
  5757                           ;main.c: 2560: }
  5758  0031CC  0101               	movlb	(_M+4) shr (0+8)
  5759  0031CE  AB04               	btfss	(_M+4)& (0+255),5,b
  5760  0031D0  D008               	goto	l595
  5761  0031D2  0E15               	movlw	21
  5762  0031D4  EC4C  F06F         	call	_RdPrt
  5763  0031D8  E204               	bc	l595
  5764                           ;main.c: 2562: {
  5765  0031DA  0101               	movlb	(_M+23) shr (0+8)
  5766  0031DC  6B17               	clrf	(_M+23)& (0+255),b
  5767                           ;main.c: 2564: M._RUSZ_CIAG=1;
  5768  0031DE  8102               	bsf	(_M+2)& (0+255),0,b
  5769                           ;main.c: 2565: return;
  5770  0031E0  0012               	return	
  5771  0031E2                     l595:
  5772                           ;main.c: 2566: }
  5773  0031E2  0E05               	movlw	5
  5774  0031E4  EC4C  F06F         	call	_RdPrt
  5775  0031E8  A0D8               	btfss	status,0,c
  5776                           ;main.c: 2568: {
  5777  0031EA  D841               	call	_DecyzjaPLM2	;wreg free
  5778                           ;main.c: 2571: }
  5779  0031EC  0E02               	movlw	2
  5780  0031EE  EC87  F073         	call	_RTS
  5781  0031F2  6E00               	movwf	btemp,c
  5782  0031F4  0E02               	movlw	2
  5783  0031F6  5C00               	subwf	btemp,w,c
  5784  0031F8  A0D8               	btfss	status,0,c
  5785  0031FA  0012               	return	
  5786                           ;main.c: 2573: M._ROZRUCH=0;
  5787  0031FC  0101               	movlb	(_M+1) shr (0+8)
  5788  0031FE  9701               	bcf	(_M+1)& (0+255),3,b
  5789                           ;main.c: 2574: M.ROZ=0;
  5790  003200  6B0F               	clrf	(_M+15)& (0+255),b
  5791                           ;main.c: 2575: }
  5792  003202  0012               	return	
  5793  003204                     l540:
  5794  003204  C10F  FFE8         	movff	_M+15,wreg
  5795  003208  0A00               	xorlw	0
  5796  00320A  E101 D6A1          	bz	l541
  5797  00320E  0A01               	xorlw	1
  5798  003210  E101 D6AF          	bz	l544
  5799  003214  0A03               	xorlw	3
  5800  003216  E101 D6DB          	bz	l549
  5801  00321A  0A01               	xorlw	1
  5802  00321C  E101 D6F7          	bz	l558
  5803  003220  0A07               	xorlw	7
  5804  003222  E101 D710          	bz	l562
  5805  003226  0A01               	xorlw	1
  5806  003228  E101 D728          	bz	l566
  5807  00322C  0A03               	xorlw	3
  5808  00322E  E101 D75A          	bz	l572
  5809  003232  0A01               	xorlw	1
  5810  003234  E084               	bz	l578
  5811  003236  0A0F               	xorlw	15
  5812  003238  E0C3               	bz	l593
  5813  00323A  0012               	return	
  5814                           ;main.c: 2577: }
  5815  00323C                     __end_of_Rozruch:
  5816                           ;main.c: 2578: void DecyzjaPLM(void)
  5817                           ;main.c: 2579: {
  5818  00323C                     _DecyzjaPLM:
  5819  000000                     
  5820                           ;main.c: 2580: if(M._OST_PL)
  5821  00323C  0101               	movlb	(_M+4) shr (0+8)
  5822  00323E  AF04               	btfss	(_M+4)& (0+255),7,b
  5823  003240  D00B               	goto	l599
  5824                           ;main.c: 2581: {
  5825  003242  0E01               	movlw	1
  5826  003244  CFE8 F10E          	movff	wreg,_M+14
  5827                           ;main.c: 2583: PrintErr(0x01,1);
  5828  003248  0100               	movlb	__Lparam shr (0+8)
  5829  00324A  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5830  00324C  EC44  F076         	call	_PrintErr
  5831                           ;main.c: 2584: ToWriteESTAT();
  5832  003250  EC32  F073         	call	_ToWriteESTAT	;wreg free
  5833                           ;main.c: 2585: ErrPTG();
  5834  003254  EF9C  F01E         	goto	_ErrPTG	;wreg free
  5835                           ;main.c: 2586: }
  5836  003258                     l599:
  5837                           ;main.c: 2587: else
  5838  003258  0101               	movlb	(_M+2) shr (0+8)
  5839  00325A  8302               	bsf	(_M+2)& (0+255),1,b
  5840                           ;main.c: 2590: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5841  00325C  EE01  F009         	lfsr	0,_M+9
  5842  003260  50EF               	movf	indf0,w,c
  5843  003262  B4D8               	btfsc	status,2,c
  5844  003264  8502               	bsf	(_M+2)& (0+255),2,b
  5845                           ;main.c: 2591: M._ROZRUCH=0;
  5846  003266  0101               	movlb	(_M+1) shr (0+8)
  5847  003268  9701               	bcf	(_M+1)& (0+255),3,b
  5848                           ;main.c: 2592: M.ROZ=0;
  5849  00326A  6B0F               	clrf	(_M+15)& (0+255),b
  5850                           ;main.c: 2593: }
  5851  00326C  0012               	return	
  5852  00326E                     __end_of_DecyzjaPLM:
  5853                           ;main.c: 2595: void DecyzjaPLM2(void)
  5854                           ;main.c: 2596: {
  5855  00326E                     _DecyzjaPLM2:
  5856  000000                     
  5857                           ;main.c: 2597: if(M._TURBO)
  5858  00326E  0101               	movlb	(_M+4) shr (0+8)
  5859  003270  AB04               	btfss	(_M+4)& (0+255),5,b
  5860  003272  D03E               	goto	l603
  5861                           ;main.c: 2598: {
  5862  003274  A683               	btfss	3971,3,c	;volatile
  5863  003276  D01D               	goto	l604
  5864                           ;main.c: 2600: {
  5865  003278  BC80               	btfsc	3968,6,c	;volatile
  5866  00327A  AE80               	btfss	3968,7,c	;volatile
  5867  00327C  0012               	return	
  5868                           ;main.c: 2603: {
  5869  00327E  0101               	movlb	(_M+4) shr (0+8)
  5870  003280  AF04               	btfss	(_M+4)& (0+255),7,b
  5871  003282  D00B               	goto	l606
  5872                           ;main.c: 2605: {
  5873  003284  0E01               	movlw	1
  5874  003286  CFE8 F10E          	movff	wreg,_M+14
  5875                           ;main.c: 2607: PrintErr(0x01,1);
  5876  00328A  0100               	movlb	__Lparam shr (0+8)
  5877  00328C  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5878  00328E  EC44  F076         	call	_PrintErr
  5879                           ;main.c: 2608: ToWriteESTAT();
  5880  003292  EC32  F073         	call	_ToWriteESTAT	;wreg free
  5881                           ;main.c: 2609: ErrPTG();
  5882  003296  EF9C  F01E         	goto	_ErrPTG	;wreg free
  5883                           ;main.c: 2610: }
  5884  00329A                     l606:
  5885                           ;main.c: 2611: else
  5886  00329A  0101               	movlb	(_M+22) shr (0+8)
  5887  00329C  6B16               	clrf	(_M+22)& (0+255),b
  5888                           ;main.c: 2614: M._RUSZ_PLOMIEN=1;
  5889  00329E  8302               	bsf	(_M+2)& (0+255),1,b
  5890                           ;main.c: 2615: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5891  0032A0  EE01  F009         	lfsr	0,_M+9
  5892  0032A4  50EF               	movf	indf0,w,c
  5893  0032A6  B4D8               	btfsc	status,2,c
  5894  0032A8  8502               	bsf	(_M+2)& (0+255),2,b
  5895                           ;main.c: 2616: M._ROZRUCH=0;
  5896  0032AA  0101               	movlb	(_M+1) shr (0+8)
  5897  0032AC  9701               	bcf	(_M+1)& (0+255),3,b
  5898                           ;main.c: 2617: M.ROZ=0;
  5899  0032AE  6B0F               	clrf	(_M+15)& (0+255),b
  5900                           ;main.c: 2618: }
  5901  0032B0  0012               	return	
  5902  0032B2                     l604:
  5903                           ;main.c: 2621: else
  5904  0032B2  0E04               	movlw	4
  5905  0032B4  EC4C  F06F         	call	_RdPrt
  5906  0032B8  A0D8               	btfss	status,0,c
  5907  0032BA  0012               	return	
  5908                           ;main.c: 2624: {
  5909  0032BC  0101               	movlb	(_M+4) shr (0+8)
  5910  0032BE  AF04               	btfss	(_M+4)& (0+255),7,b
  5911  0032C0  D00B               	goto	l611
  5912                           ;main.c: 2626: {
  5913  0032C2  0E01               	movlw	1
  5914  0032C4  CFE8 F10E          	movff	wreg,_M+14
  5915                           ;main.c: 2628: PrintErr(0x01,1);
  5916  0032C8  0100               	movlb	__Lparam shr (0+8)
  5917  0032CA  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5918  0032CC  EC44  F076         	call	_PrintErr
  5919                           ;main.c: 2629: ToWriteESTAT();
  5920  0032D0  EC32  F073         	call	_ToWriteESTAT	;wreg free
  5921                           ;main.c: 2630: ErrPTG();
  5922  0032D4  EF9C  F01E         	goto	_ErrPTG	;wreg free
  5923                           ;main.c: 2631: }
  5924  0032D8                     l611:
  5925                           ;main.c: 2632: else
  5926  0032D8  0101               	movlb	(_M+22) shr (0+8)
  5927  0032DA  6B16               	clrf	(_M+22)& (0+255),b
  5928                           ;main.c: 2635: M._RUSZ_PLOMIEN=1;
  5929  0032DC  8302               	bsf	(_M+2)& (0+255),1,b
  5930                           ;main.c: 2636: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5931  0032DE  EE01  F009         	lfsr	0,_M+9
  5932  0032E2  50EF               	movf	indf0,w,c
  5933  0032E4  B4D8               	btfsc	status,2,c
  5934  0032E6  8502               	bsf	(_M+2)& (0+255),2,b
  5935                           ;main.c: 2637: M._ROZRUCH=0;
  5936  0032E8  0101               	movlb	(_M+1) shr (0+8)
  5937  0032EA  9701               	bcf	(_M+1)& (0+255),3,b
  5938                           ;main.c: 2638: M.ROZ=0;
  5939  0032EC  6B0F               	clrf	(_M+15)& (0+255),b
  5940                           ;main.c: 2639: }
  5941  0032EE  0012               	return	
  5942  0032F0                     l603:
  5943                           ;main.c: 2643: else
  5944  0032F0  B082               	btfsc	3970,0,c	;volatile
  5945  0032F2  AE80               	btfss	3968,7,c	;volatile
  5946  0032F4  0012               	return	
  5947                           ;main.c: 2647: {
  5948  0032F6  0101               	movlb	(_M+4) shr (0+8)
  5949  0032F8  AF04               	btfss	(_M+4)& (0+255),7,b
  5950  0032FA  D00B               	goto	l616
  5951                           ;main.c: 2649: {
  5952  0032FC  0E01               	movlw	1
  5953  0032FE  CFE8 F10E          	movff	wreg,_M+14
  5954                           ;main.c: 2651: PrintErr(0x01,1);
  5955  003302  0100               	movlb	__Lparam shr (0+8)
  5956  003304  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5957  003306  EC44  F076         	call	_PrintErr
  5958                           ;main.c: 2652: ToWriteESTAT();
  5959  00330A  EC32  F073         	call	_ToWriteESTAT	;wreg free
  5960                           ;main.c: 2653: ErrPTG();
  5961  00330E  EF9C  F01E         	goto	_ErrPTG	;wreg free
  5962                           ;main.c: 2654: }
  5963  003312                     l616:
  5964                           ;main.c: 2655: else
  5965  003312  0101               	movlb	(_M+22) shr (0+8)
  5966  003314  6B16               	clrf	(_M+22)& (0+255),b
  5967                           ;main.c: 2658: M._RUSZ_PLOMIEN=1;
  5968  003316  8302               	bsf	(_M+2)& (0+255),1,b
  5969                           ;main.c: 2659: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5970  003318  EE01  F009         	lfsr	0,_M+9
  5971  00331C  50EF               	movf	indf0,w,c
  5972  00331E  B4D8               	btfsc	status,2,c
  5973  003320  8502               	bsf	(_M+2)& (0+255),2,b
  5974                           ;main.c: 2660: M._ROZRUCH=0;
  5975  003322  0101               	movlb	(_M+1) shr (0+8)
  5976  003324  9701               	bcf	(_M+1)& (0+255),3,b
  5977                           ;main.c: 2661: M.ROZ=0;
  5978  003326  6B0F               	clrf	(_M+15)& (0+255),b
  5979                           ;main.c: 2662: }
  5980  003328  0012               	return	
  5981  00332A                     __end_of_DecyzjaPLM2:
  5982                           ;main.c: 2669: void Wylacz(void)
  5983                           ;main.c: 2670: {
  5984  00332A                     _Wylacz:
  5985  000000                     
  5986                           ;main.c: 2671: switch(DtKNF.tpkt)
  5987  00332A  D15E               	goto	l621
  5988  00332C                     l623:
  5989                           ;main.c: 2674: case 2:
  5990  00332C  D04A               	goto	l625
  5991  00332E                     l626:
  5992                           ;main.c: 2677: {
  5993                           ;main.c: 2679: {
  5994  00332E  0E01               	movlw	1
  5995  003330  CFE8 F114          	movff	wreg,_M+20
  5996                           ;main.c: 2681: StartRTS(7);
  5997  003334  0E07               	movlw	7
  5998  003336  EC6F  F073         	call	_StartRTS
  5999  00333A                     l627:
  6000                           ;main.c: 2682: }
  6001                           ;main.c: 2684: {
  6002  00333A  0101               	movlb	(_M+5) shr (0+8)
  6003                           ;main.c: 2686: {
  6004  00333C  0E07               	movlw	7
  6005  00333E  A305               	btfss	(_M+5)& (0+255),1,b
  6006  003340  D01C               	goto	L34
  6007  003342  EC87  F073         	call	_RTS
  6008  003346  6E00               	movwf	btemp,c
  6009  003348  0E14               	movlw	20
  6010  00334A  5C00               	subwf	btemp,w,c
  6011  00334C  E30A               	bnc	l629
  6012                           ;main.c: 2688: {
  6013  00334E  0101               	movlb	_DtCO shr (0+8)
  6014  003350  B1B6               	btfsc	_DtCO& (0+255),0,b
  6015  003352  D007               	goto	l629
  6016  003354  0101               	movlb	(_DtCO+1) shr (0+8)
  6017  003356  A1B7               	btfss	(_DtCO+1)& (0+255),0,b
  6018  003358  D004               	goto	l629
  6019                           ;main.c: 2690: {
  6020  00335A  0E02               	movlw	2
  6021  00335C  CFE8 F114          	movff	wreg,_M+20
  6022                           ;main.c: 2692: return;
  6023  003360  0C02               	retlw	2
  6024  003362                     l629:
  6025                           ;main.c: 2693: }
  6026  003362  0E07               	movlw	7
  6027  003364  EC87  F073         	call	_RTS
  6028  003368  6E00               	movwf	btemp,c
  6029  00336A  0EB4               	movlw	180
  6030  00336C  5C00               	subwf	btemp,w,c
  6031  00336E  A0D8               	btfss	status,0,c
  6032  003370  0012               	return	
  6033                           ;main.c: 2696: M.WYL=2;
  6034  003372  0E02               	movlw	2
  6035  003374  CFE8 F114          	movff	wreg,_M+20
  6036                           ;main.c: 2697: return;
  6037  003378  0C02               	retlw	2
  6038                           ;main.c: 2699: else
  6039  00337A                     L34:
  6040  00337A  EC87  F073         	call	_RTS
  6041  00337E  6E00               	movwf	btemp,c
  6042  003380  0EB4               	movlw	180
  6043  003382  5C00               	subwf	btemp,w,c
  6044  003384  A0D8               	btfss	status,0,c
  6045  003386  0012               	return	
  6046                           ;main.c: 2702: M.WYL=2;
  6047  003388  0E02               	movlw	2
  6048  00338A  CFE8 F114          	movff	wreg,_M+20
  6049  00338E                     l634:
  6050                           ;main.c: 2703: }
  6051                           ;main.c: 2706: {
  6052  00338E  0E0D               	movlw	13
  6053  003390  EC4C  F06F         	call	_RdPrt
  6054  003394  B0D8               	btfsc	status,0,c
  6055  003396  0012               	return	
  6056                           ;main.c: 2708: if(!M._KCW_PMP)
  6057  003398  0101               	movlb	(_M+5) shr (0+8)
  6058  00339A  B305               	btfsc	(_M+5)& (0+255),1,b
  6059  00339C  D006               	goto	l636
  6060                           ;main.c: 2709: {
  6061  00339E  0101               	movlb	_DtCO shr (0+8)
  6062  0033A0  B1B6               	btfsc	_DtCO& (0+255),0,b
  6063  0033A2  D003               	goto	l636
  6064  0033A4  0101               	movlb	_DtCO shr (0+8)
  6065  0033A6  A3B6               	btfss	_DtCO& (0+255),1,b
  6066  0033A8  0012               	return	
  6067  0033AA                     l636:
  6068                           ;main.c: 2711: }
  6069  0033AA  EE02  F03A         	lfsr	0,_DtKNF+10
  6070  0033AE  50EF               	movf	indf0,w,c
  6071  0033B0  E103               	bnz	l638
  6072                           ;main.c: 2713: {
  6073  0033B2  0101               	movlb	(_M+2) shr (0+8)
  6074  0033B4  B702               	btfsc	(_M+2)& (0+255),3,b
  6075  0033B6  0012               	return	
  6076  0033B8                     l638:
  6077                           ;main.c: 2715: }
  6078  0033B8  0101               	movlb	(_M+5) shr (0+8)
  6079  0033BA  9305               	bcf	(_M+5)& (0+255),1,b
  6080                           ;main.c: 2717: M._WYLACZ=0;
  6081  0033BC  9301               	bcf	(_M+1)& (0+255),1,b
  6082                           ;main.c: 2718: M.WYL=0;
  6083  0033BE  6B14               	clrf	(_M+20)& (0+255),b
  6084                           ;main.c: 2719: }
  6085  0033C0  0012               	return	
  6086  0033C2                     l625:
  6087  0033C2  C114  FFE8         	movff	_M+20,wreg
  6088  0033C6  0A00               	xorlw	0
  6089  0033C8  E0B2               	bz	l626
  6090  0033CA  0A01               	xorlw	1
  6091  0033CC  E0B6               	bz	l627
  6092  0033CE  0A03               	xorlw	3
  6093  0033D0  E0DE               	bz	l634
  6094  0033D2  0012               	return	
  6095                           ;main.c: 2721: return;
  6096  0033D4                     l640:
  6097                           ;main.c: 2722: }
  6098                           ;main.c: 2724: {
  6099  0033D4  D054               	goto	l642
  6100  0033D6                     l643:
  6101                           ;main.c: 2726: {
  6102                           ;main.c: 2728: {
  6103  0033D6  0E01               	movlw	1
  6104  0033D8  CFE8 F114          	movff	wreg,_M+20
  6105                           ;main.c: 2730: StartRTS(7);
  6106  0033DC  0E07               	movlw	7
  6107  0033DE  EC6F  F073         	call	_StartRTS
  6108  0033E2                     l644:
  6109                           ;main.c: 2731: }
  6110                           ;main.c: 2733: {
  6111  0033E2  0101               	movlb	(_M+5) shr (0+8)
  6112                           ;main.c: 2735: {
  6113  0033E4  0E07               	movlw	7
  6114  0033E6  A705               	btfss	(_M+5)& (0+255),3,b
  6115  0033E8  D01C               	goto	L35
  6116  0033EA  EC87  F073         	call	_RTS
  6117  0033EE  6E00               	movwf	btemp,c
  6118  0033F0  0E14               	movlw	20
  6119  0033F2  5C00               	subwf	btemp,w,c
  6120  0033F4  E30A               	bnc	l646
  6121                           ;main.c: 2737: {
  6122  0033F6  0101               	movlb	_DtCO shr (0+8)
  6123  0033F8  B1B6               	btfsc	_DtCO& (0+255),0,b
  6124  0033FA  D007               	goto	l646
  6125  0033FC  0101               	movlb	(_DtCO+1) shr (0+8)
  6126  0033FE  A1B7               	btfss	(_DtCO+1)& (0+255),0,b
  6127  003400  D004               	goto	l646
  6128                           ;main.c: 2739: {
  6129  003402  0E02               	movlw	2
  6130  003404  CFE8 F114          	movff	wreg,_M+20
  6131                           ;main.c: 2741: return;
  6132  003408  0C02               	retlw	2
  6133  00340A                     l646:
  6134                           ;main.c: 2742: }
  6135  00340A  0E07               	movlw	7
  6136  00340C  EC87  F073         	call	_RTS
  6137  003410  6E00               	movwf	btemp,c
  6138  003412  0EB4               	movlw	180
  6139  003414  5C00               	subwf	btemp,w,c
  6140  003416  A0D8               	btfss	status,0,c
  6141  003418  0012               	return	
  6142                           ;main.c: 2745: M.WYL=2;
  6143  00341A  0E02               	movlw	2
  6144  00341C  CFE8 F114          	movff	wreg,_M+20
  6145                           ;main.c: 2746: return;
  6146  003420  0C02               	retlw	2
  6147                           ;main.c: 2748: else
  6148  003422                     L35:
  6149  003422  EC87  F073         	call	_RTS
  6150  003426  6E00               	movwf	btemp,c
  6151  003428  0EB4               	movlw	180
  6152  00342A  5C00               	subwf	btemp,w,c
  6153  00342C  A0D8               	btfss	status,0,c
  6154  00342E  0012               	return	
  6155                           ;main.c: 2751: M.WYL=2;
  6156  003430  0E02               	movlw	2
  6157  003432  CFE8 F114          	movff	wreg,_M+20
  6158  003436                     l651:
  6159                           ;main.c: 2752: }
  6160                           ;main.c: 2755: {
  6161  003436  0101               	movlb	(_M+5) shr (0+8)
  6162  003438  B705               	btfsc	(_M+5)& (0+255),3,b
  6163  00343A  D00C               	goto	l652
  6164                           ;main.c: 2757: {
  6165  00343C  0E0D               	movlw	13
  6166  00343E  EC4C  F06F         	call	_RdPrt
  6167  003442  B0D8               	btfsc	status,0,c
  6168  003444  0012               	return	
  6169                           ;main.c: 2759: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  6170  003446  0101               	movlb	_DtCO shr (0+8)
  6171  003448  B1B6               	btfsc	_DtCO& (0+255),0,b
  6172  00344A  D00D               	goto	l655
  6173  00344C  0101               	movlb	_DtCO shr (0+8)
  6174  00344E  A3B6               	btfss	_DtCO& (0+255),1,b
  6175  003450  0012               	return	
  6176  003452  D009               	goto	l655
  6177                           ;main.c: 2760: }
  6178  003454                     l652:
  6179                           ;main.c: 2761: else
  6180  003454  0101               	movlb	_DtCO shr (0+8)
  6181  003456  B1B6               	btfsc	_DtCO& (0+255),0,b
  6182  003458  D006               	goto	l655
  6183  00345A  0101               	movlb	(_DtCO+1) shr (0+8)
  6184  00345C  B1B7               	btfsc	(_DtCO+1)& (0+255),0,b
  6185  00345E  D003               	goto	l655
  6186  003460  0101               	movlb	_M shr (0+8)
  6187  003462  B900               	btfsc	_M& (0+255),4,b
  6188  003464  0012               	return	
  6189  003466                     l655:
  6190                           ;main.c: 2764: }
  6191  003466  EE02  F03A         	lfsr	0,_DtKNF+10
  6192  00346A  50EF               	movf	indf0,w,c
  6193  00346C  E103               	bnz	l657
  6194                           ;main.c: 2766: {
  6195  00346E  0101               	movlb	(_M+2) shr (0+8)
  6196  003470  B702               	btfsc	(_M+2)& (0+255),3,b
  6197  003472  0012               	return	
  6198  003474                     l657:
  6199                           ;main.c: 2768: }
  6200  003474  9483               	bcf	3971,2,c	;volatile
  6201                           ;main.c: 2774: M._WYLACZ=0;
  6202  003476  0101               	movlb	(_M+1) shr (0+8)
  6203  003478  9301               	bcf	(_M+1)& (0+255),1,b
  6204                           ;main.c: 2775: M.WYL=0;
  6205  00347A  6B14               	clrf	(_M+20)& (0+255),b
  6206                           ;main.c: 2776: }
  6207  00347C  0012               	return	
  6208  00347E                     l642:
  6209  00347E  C114  FFE8         	movff	_M+20,wreg
  6210  003482  0A00               	xorlw	0
  6211  003484  E0A8               	bz	l643
  6212  003486  0A01               	xorlw	1
  6213  003488  E0AC               	bz	l644
  6214  00348A  0A03               	xorlw	3
  6215  00348C  E0D4               	bz	l651
  6216  00348E  0012               	return	
  6217                           ;main.c: 2778: return;
  6218  003490                     l659:
  6219                           ;main.c: 2779: }
  6220                           ;main.c: 2781: {
  6221  003490  D045               	goto	l661
  6222  003492                     l662:
  6223                           ;main.c: 2783: {
  6224                           ;main.c: 2785: {
  6225  003492  0E01               	movlw	1
  6226  003494  CFE8 F114          	movff	wreg,_M+20
  6227                           ;main.c: 2787: StartRTS(7);
  6228  003498  0E07               	movlw	7
  6229  00349A  EC6F  F073         	call	_StartRTS
  6230  00349E                     l663:
  6231                           ;main.c: 2788: }
  6232                           ;main.c: 2790: {
  6233  00349E  0101               	movlb	(_M+5) shr (0+8)
  6234                           ;main.c: 2792: {
  6235  0034A0  0E07               	movlw	7
  6236  0034A2  A705               	btfss	(_M+5)& (0+255),3,b
  6237  0034A4  D011               	goto	L36
  6238  0034A6  EC87  F073         	call	_RTS
  6239  0034AA  6E00               	movwf	btemp,c
  6240  0034AC  0E3C               	movlw	60
  6241  0034AE  5C00               	subwf	btemp,w,c
  6242  0034B0  A0D8               	btfss	status,0,c
  6243  0034B2  0012               	return	
  6244                           ;main.c: 2794: if(!DtCO._err_CO)
  6245  0034B4  0101               	movlb	_DtCO shr (0+8)
  6246  0034B6  B1B6               	btfsc	_DtCO& (0+255),0,b
  6247  0034B8  D00E               	goto	L12
  6248                           ;main.c: 2795: {
  6249  0034BA  0101               	movlb	(_DtCO+1) shr (0+8)
  6250  0034BC  A1B7               	btfss	(_DtCO+1)& (0+255),0,b
  6251  0034BE  0012               	return	
  6252                           ;main.c: 2797: {
  6253  0034C0  0E02               	movlw	2
  6254  0034C2  CFE8 F114          	movff	wreg,_M+20
  6255                           ;main.c: 2799: }
  6256  0034C6  0C02               	retlw	2
  6257                           ;main.c: 2802: else
  6258                           ;main.c: 2805: }
  6259                           ;main.c: 2807: else
  6260  0034C8                     L36:
  6261  0034C8  EC87  F073         	call	_RTS
  6262  0034CC  6E00               	movwf	btemp,c
  6263  0034CE  0EB4               	movlw	180
  6264  0034D0  5C00               	subwf	btemp,w,c
  6265  0034D2  A0D8               	btfss	status,0,c
  6266  0034D4  0012               	return	
  6267  0034D6                     L12:
  6268                           ;main.c: 2810: M.WYL=2;
  6269  0034D6  0E02               	movlw	2
  6270  0034D8  CFE8 F114          	movff	wreg,_M+20
  6271  0034DC                     l671:
  6272                           ;main.c: 2811: }
  6273                           ;main.c: 2814: {
  6274  0034DC  0101               	movlb	(_M+5) shr (0+8)
  6275  0034DE  A705               	btfss	(_M+5)& (0+255),3,b
  6276  0034E0  D006               	goto	l672
  6277                           ;main.c: 2816: {
  6278  0034E2  0E11               	movlw	17
  6279  0034E4  EC4C  F06F         	call	_RdPrt
  6280  0034E8  B0D8               	btfsc	status,0,c
  6281  0034EA  0012               	return	
  6282  0034EC  D00B               	goto	l674
  6283                           ;main.c: 2818: }
  6284  0034EE                     l672:
  6285                           ;main.c: 2819: else
  6286  0034EE  0E0D               	movlw	13
  6287  0034F0  EC4C  F06F         	call	_RdPrt
  6288  0034F4  B0D8               	btfsc	status,0,c
  6289  0034F6  0012               	return	
  6290                           ;main.c: 2822: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  6291  0034F8  0101               	movlb	_DtCO shr (0+8)
  6292  0034FA  B1B6               	btfsc	_DtCO& (0+255),0,b
  6293  0034FC  D003               	goto	l674
  6294  0034FE  0101               	movlb	_DtCO shr (0+8)
  6295  003500  A3B6               	btfss	_DtCO& (0+255),1,b
  6296  003502  0012               	return	
  6297  003504                     l674:
  6298                           ;main.c: 2823: }
  6299  003504  EE02  F03A         	lfsr	0,_DtKNF+10
  6300  003508  50EF               	movf	indf0,w,c
  6301  00350A  E103               	bnz	l677
  6302                           ;main.c: 2825: {
  6303  00350C  0101               	movlb	(_M+2) shr (0+8)
  6304  00350E  B702               	btfsc	(_M+2)& (0+255),3,b
  6305  003510  0012               	return	
  6306  003512                     l677:
  6307                           ;main.c: 2827: }
  6308  003512  9483               	bcf	3971,2,c	;volatile
  6309                           ;main.c: 2833: M._WYLACZ=0;
  6310  003514  0101               	movlb	(_M+1) shr (0+8)
  6311  003516  9301               	bcf	(_M+1)& (0+255),1,b
  6312                           ;main.c: 2834: M.WYL=0;
  6313  003518  6B14               	clrf	(_M+20)& (0+255),b
  6314                           ;main.c: 2835: }
  6315  00351A  0012               	return	
  6316  00351C                     l661:
  6317  00351C  C114  FFE8         	movff	_M+20,wreg
  6318  003520  0A00               	xorlw	0
  6319  003522  E0B7               	bz	l662
  6320  003524  0A01               	xorlw	1
  6321  003526  E0BB               	bz	l663
  6322  003528  0A03               	xorlw	3
  6323  00352A  E0D8               	bz	l671
  6324  00352C  0012               	return	
  6325                           ;main.c: 2837: return;
  6326                           ;main.c: 2838: }
  6327                           ;main.c: 2840: {
  6328  00352E                     l682:
  6329                           ;main.c: 2842: {
  6330                           ;main.c: 2844: {
  6331  00352E  0E01               	movlw	1
  6332  003530  CFE8 F114          	movff	wreg,_M+20
  6333                           ;main.c: 2846: StartRTS(7);
  6334  003534  0E07               	movlw	7
  6335  003536  EC6F  F073         	call	_StartRTS
  6336  00353A                     l683:
  6337                           ;main.c: 2847: }
  6338                           ;main.c: 2849: {
  6339  00353A  0101               	movlb	(_M+5) shr (0+8)
  6340                           ;main.c: 2851: {
  6341  00353C  0E07               	movlw	7
  6342  00353E  A705               	btfss	(_M+5)& (0+255),3,b
  6343  003540  D01C               	goto	L37
  6344  003542  EC87  F073         	call	_RTS
  6345  003546  6E00               	movwf	btemp,c
  6346  003548  0E14               	movlw	20
  6347  00354A  5C00               	subwf	btemp,w,c
  6348  00354C  E30A               	bnc	l685
  6349                           ;main.c: 2853: {
  6350  00354E  0101               	movlb	_DtCO shr (0+8)
  6351  003550  B1B6               	btfsc	_DtCO& (0+255),0,b
  6352  003552  D007               	goto	l685
  6353  003554  0101               	movlb	(_DtCO+1) shr (0+8)
  6354  003556  A1B7               	btfss	(_DtCO+1)& (0+255),0,b
  6355  003558  D004               	goto	l685
  6356                           ;main.c: 2855: {
  6357  00355A  0E02               	movlw	2
  6358  00355C  CFE8 F114          	movff	wreg,_M+20
  6359                           ;main.c: 2857: return;
  6360  003560  0C02               	retlw	2
  6361  003562                     l685:
  6362                           ;main.c: 2858: }
  6363  003562  0E07               	movlw	7
  6364  003564  EC87  F073         	call	_RTS
  6365  003568  6E00               	movwf	btemp,c
  6366  00356A  0EB4               	movlw	180
  6367  00356C  5C00               	subwf	btemp,w,c
  6368  00356E  A0D8               	btfss	status,0,c
  6369  003570  0012               	return	
  6370                           ;main.c: 2861: M.WYL=2;
  6371  003572  0E02               	movlw	2
  6372  003574  CFE8 F114          	movff	wreg,_M+20
  6373                           ;main.c: 2862: return;
  6374  003578  0C02               	retlw	2
  6375                           ;main.c: 2864: else
  6376  00357A                     L37:
  6377  00357A  EC87  F073         	call	_RTS
  6378  00357E  6E00               	movwf	btemp,c
  6379  003580  0EB4               	movlw	180
  6380  003582  5C00               	subwf	btemp,w,c
  6381  003584  A0D8               	btfss	status,0,c
  6382  003586  0012               	return	
  6383                           ;main.c: 2867: M.WYL=2;
  6384  003588  0E02               	movlw	2
  6385  00358A  CFE8 F114          	movff	wreg,_M+20
  6386  00358E                     l690:
  6387                           ;main.c: 2868: }
  6388                           ;main.c: 2871: {
  6389  00358E  0101               	movlb	(_M+5) shr (0+8)
  6390  003590  B705               	btfsc	(_M+5)& (0+255),3,b
  6391  003592  D00C               	goto	l691
  6392                           ;main.c: 2873: {
  6393  003594  0E0D               	movlw	13
  6394  003596  EC4C  F06F         	call	_RdPrt
  6395  00359A  B0D8               	btfsc	status,0,c
  6396  00359C  0012               	return	
  6397                           ;main.c: 2875: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  6398  00359E  0101               	movlb	_DtCO shr (0+8)
  6399  0035A0  B1B6               	btfsc	_DtCO& (0+255),0,b
  6400  0035A2  D00D               	goto	l694
  6401  0035A4  0101               	movlb	_DtCO shr (0+8)
  6402  0035A6  A3B6               	btfss	_DtCO& (0+255),1,b
  6403  0035A8  0012               	return	
  6404  0035AA  D009               	goto	l694
  6405                           ;main.c: 2876: }
  6406  0035AC                     l691:
  6407                           ;main.c: 2877: else
  6408  0035AC  0101               	movlb	_DtCO shr (0+8)
  6409  0035AE  B1B6               	btfsc	_DtCO& (0+255),0,b
  6410  0035B0  D006               	goto	l694
  6411  0035B2  0101               	movlb	(_DtCO+1) shr (0+8)
  6412  0035B4  B1B7               	btfsc	(_DtCO+1)& (0+255),0,b
  6413  0035B6  D003               	goto	l694
  6414  0035B8  0101               	movlb	_M shr (0+8)
  6415  0035BA  B900               	btfsc	_M& (0+255),4,b
  6416  0035BC  0012               	return	
  6417  0035BE                     l694:
  6418                           ;main.c: 2880: }
  6419  0035BE  EE02  F03A         	lfsr	0,_DtKNF+10
  6420  0035C2  50EF               	movf	indf0,w,c
  6421  0035C4  E103               	bnz	l696
  6422                           ;main.c: 2882: {
  6423  0035C6  0101               	movlb	(_M+2) shr (0+8)
  6424  0035C8  B702               	btfsc	(_M+2)& (0+255),3,b
  6425  0035CA  0012               	return	
  6426  0035CC                     l696:
  6427                           ;main.c: 2884: }
  6428  0035CC  9483               	bcf	3971,2,c	;volatile
  6429                           ;main.c: 2891: M._WYLACZ=0;
  6430  0035CE  0101               	movlb	(_M+1) shr (0+8)
  6431  0035D0  9301               	bcf	(_M+1)& (0+255),1,b
  6432                           ;main.c: 2892: M.WYL=0;
  6433  0035D2  6B14               	clrf	(_M+20)& (0+255),b
  6434                           ;main.c: 2893: }
  6435  0035D4  0012               	return	
  6436  0035D6                     l681:
  6437  0035D6  C114  FFE8         	movff	_M+20,wreg
  6438  0035DA  0A00               	xorlw	0
  6439  0035DC  E0A8               	bz	l682
  6440  0035DE  0A01               	xorlw	1
  6441  0035E0  E0AC               	bz	l683
  6442  0035E2  0A03               	xorlw	3
  6443  0035E4  E0D4               	bz	l690
  6444  0035E6  0012               	return	
  6445                           ;main.c: 2895: return;
  6446  0035E8                     l621:
  6447  0035E8  C237  FFE8         	movff	_DtKNF+7,wreg
  6448  0035EC  0A00               	xorlw	0
  6449  0035EE  E101 D74F          	bz	l659
  6450  0035F2  0A01               	xorlw	1
  6451  0035F4  E101 D69A          	bz	l623
  6452  0035F8  0A03               	xorlw	3
  6453  0035FA  E101 D697          	bz	l623
  6454  0035FE  0A01               	xorlw	1
  6455  003600  E101 D6E8          	bz	l640
  6456  003604  D7E8               	goto	l681
  6457                           ;main.c: 2898: }
  6458  003606                     __end_of_Wylacz:
  6459                           ;main.c: 2902: void VWybieg(void)
  6460                           ;main.c: 2903: {
  6461  003606                     _VWybieg:
  6462  000000                     
  6463                           ;main.c: 2904: switch(M.VWB)
  6464  003606  D02C               	goto	l700
  6465  003608                     l701:
  6466                           ;main.c: 2905: {
  6467                           ;main.c: 2907: {
  6468  003608  0E01               	movlw	1
  6469  00360A  CFE8 F11A          	movff	wreg,_M+26
  6470                           ;main.c: 2909: M._DE_VNT=1;
  6471  00360E  0101               	movlb	(_M+5) shr (0+8)
  6472  003610  8505               	bsf	(_M+5)& (0+255),2,b
  6473                           ;main.c: 2910: StartRTS(6);
  6474  003612  0E06               	movlw	6
  6475  003614  EC6F  F073         	call	_StartRTS
  6476  003618                     l702:
  6477                           ;main.c: 2911: }
  6478                           ;main.c: 2913: {
  6479  003618  0E06               	movlw	6
  6480  00361A  EC87  F073         	call	_RTS
  6481  00361E  6E00               	movwf	btemp,c
  6482  003620  0E02               	movlw	2
  6483  003622  5C00               	subwf	btemp,w,c
  6484  003624  E302               	bnc	l703
  6485  003626  0101               	movlb	(_M+5) shr (0+8)
  6486  003628  9505               	bcf	(_M+5)& (0+255),2,b
  6487  00362A                     l703:
  6488                           ;main.c: 2915: if(RTS(6)<15) return;
  6489  00362A  0E06               	movlw	6
  6490  00362C  EC87  F073         	call	_RTS
  6491  003630  6E00               	movwf	btemp,c
  6492  003632  0E0F               	movlw	15
  6493  003634  5C00               	subwf	btemp,w,c
  6494  003636  A0D8               	btfss	status,0,c
  6495  003638  0012               	return	
  6496                           ;main.c: 2917: RD3=0;
  6497  00363A  9683               	bcf	3971,3,c	;volatile
  6498                           ;main.c: 2918: M._DE_VNT=1;
  6499  00363C  0101               	movlb	(_M+5) shr (0+8)
  6500  00363E  8505               	bsf	(_M+5)& (0+255),2,b
  6501                           ;main.c: 2919: M.VWB=2;
  6502  003640  0E02               	movlw	2
  6503  003642  CFE8 F11A          	movff	wreg,_M+26
  6504  003646                     l705:
  6505                           ;main.c: 2920: }
  6506                           ;main.c: 2922: {
  6507  003646  0E06               	movlw	6
  6508  003648  EC87  F073         	call	_RTS
  6509  00364C  6E00               	movwf	btemp,c
  6510  00364E  0E11               	movlw	17
  6511  003650  5C00               	subwf	btemp,w,c
  6512  003652  A0D8               	btfss	status,0,c
  6513  003654  0012               	return	
  6514                           ;main.c: 2924: M._DE_VNT=0;
  6515  003656  0101               	movlb	(_M+5) shr (0+8)
  6516  003658  9505               	bcf	(_M+5)& (0+255),2,b
  6517                           ;main.c: 2925: M._VWYBIEG=0;
  6518  00365A  9F01               	bcf	(_M+1)& (0+255),7,b
  6519                           ;main.c: 2926: M.VWB=0;
  6520  00365C  6B1A               	clrf	(_M+26)& (0+255),b
  6521                           ;main.c: 2927: }
  6522  00365E  0012               	return	
  6523  003660                     l700:
  6524  003660  C11A  FFE8         	movff	_M+26,wreg
  6525  003664  0A00               	xorlw	0
  6526  003666  E0D0               	bz	l701
  6527  003668  0A01               	xorlw	1
  6528  00366A  E0D6               	bz	l702
  6529  00366C  0A03               	xorlw	3
  6530  00366E  E0EB               	bz	l705
  6531  003670  0012               	return	
  6532                           ;main.c: 2929: }
  6533  003672                     __end_of_VWybieg:
  6534                           ;main.c: 2933: void DetekcjaPrzeplywuWG(void)
  6535                           ;main.c: 2934: {
  6536  003672                     _DetekcjaPrzeplywuWG:
  6537  000000                     
  6538                           ;main.c: 2935: unsigned char pmp,prz;
  6539  003672  0E00               	movlw	0
  6540  003674  B483               	btfsc	3971,2,c	;volatile
  6541  003676  0E01               	movlw	1
  6542  003678  0100               	movlb	__Lparam shr (0+8)
  6543  00367A  6FE9               	movwf	?a_DetekcjaPrzeplywuWG^(__Lparam& (0+6528
      +                          0)),b
  6544                           ;main.c: 2938: prz=(RdPrt(1))?1:0;
  6545  00367C  0E01               	movlw	1
  6546  00367E  EC4C  F06F         	call	_RdPrt
  6547  003682  0E00               	movlw	0
  6548  003684  B0D8               	btfsc	status,0,c
  6549  003686  0E01               	movlw	1
  6550  003688  0100               	movlb	__Lparam shr (0+8)
  6551  00368A  6FEA               	movwf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+
      +                          65280)),b
  6552                           ;main.c: 2940: if(pmp)
  6553  00368C  51E9               	movf	?a_DetekcjaPrzeplywuWG^(__Lparam& (0+65280
      +                          )),w
  6554  00368E  E031               	bz	l708
  6555                           ;main.c: 2941: {
  6556  003690  51EA               	movf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+6
      +                          5280)),w
  6557  003692  E106               	bnz	l709
  6558  003694  0101               	movlb	(_M+5) shr (0+8)
  6559  003696  BD05               	btfsc	(_M+5)& (0+255),6,b
  6560  003698  D003               	goto	l709
  6561                           ;main.c: 2943: {
  6562  00369A  0101               	movlb	(_M+5) shr (0+8)
  6563  00369C  8D05               	bsf	(_M+5)& (0+255),6,b
  6564                           ;main.c: 2945: M.DPR=0;
  6565  00369E  6B1E               	clrf	(_M+30)& (0+255),b
  6566  0036A0                     l709:
  6567                           ;main.c: 2946: }
  6568  0036A0  0101               	movlb	(_M+5) shr (0+8)
  6569  0036A2  AD05               	btfss	(_M+5)& (0+255),6,b
  6570  0036A4  0012               	return	
  6571  0036A6  D01E               	goto	l712
  6572                           ;main.c: 2948: {
  6573  0036A8                     l713:
  6574                           ;main.c: 2950: {
  6575                           ;main.c: 2952: {
  6576  0036A8  0E0D               	movlw	13
  6577  0036AA  EC6F  F073         	call	_StartRTS
  6578                           ;main.c: 2954: M.DPR=1;
  6579  0036AE  0E01               	movlw	1
  6580  0036B0  CFE8 F11E          	movff	wreg,_M+30
  6581  0036B4                     l714:
  6582                           ;main.c: 2955: }
  6583                           ;main.c: 2957: {
  6584  0036B4  0100               	movlb	__Lparam shr (0+8)
  6585  0036B6  51EA               	movf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+6
      +                          5280)),w
  6586  0036B8  E004               	bz	l715
  6587                           ;main.c: 2959: {
  6588  0036BA  0101               	movlb	(_M+5) shr (0+8)
  6589  0036BC  9D05               	bcf	(_M+5)& (0+255),6,b
  6590                           ;main.c: 2961: M.DPR=0;
  6591  0036BE  6B1E               	clrf	(_M+30)& (0+255),b
  6592                           ;main.c: 2962: return;
  6593  0036C0  0012               	return	
  6594  0036C2                     l715:
  6595                           ;main.c: 2963: }
  6596  0036C2  0E0D               	movlw	13
  6597  0036C4  EC87  F073         	call	_RTS
  6598  0036C8  6E00               	movwf	btemp,c
  6599  0036CA  0E03               	movlw	3
  6600  0036CC  5C00               	subwf	btemp,w,c
  6601  0036CE  A0D8               	btfss	status,0,c
  6602  0036D0  0012               	return	
  6603                           ;main.c: 2965: if(!M._RUSZ_POMPE)
  6604  0036D2  0101               	movlb	(_M+2) shr (0+8)
  6605  0036D4  B702               	btfsc	(_M+2)& (0+255),3,b
  6606  0036D6  D002               	goto	l717
  6607                           ;main.c: 2966: {
  6608  0036D8  6B15               	clrf	(_M+21)& (0+255),b
  6609                           ;main.c: 2968: M._RUSZ_POMPE=1;
  6610  0036DA  8702               	bsf	(_M+2)& (0+255),3,b
  6611  0036DC                     l717:
  6612                           ;main.c: 2969: }
  6613  0036DC  0101               	movlb	(_M+5) shr (0+8)
  6614  0036DE  9D05               	bcf	(_M+5)& (0+255),6,b
  6615                           ;main.c: 2971: M.DPR=0;
  6616  0036E0  6B1E               	clrf	(_M+30)& (0+255),b
  6617                           ;main.c: 2972: }
  6618  0036E2  0012               	return	
  6619  0036E4                     l712:
  6620  0036E4  C11E  FFE8         	movff	_M+30,wreg
  6621  0036E8  0A00               	xorlw	0
  6622  0036EA  E0DE               	bz	l713
  6623  0036EC  0A01               	xorlw	1
  6624  0036EE  E0E2               	bz	l714
  6625  0036F0  0012               	return	
  6626                           ;main.c: 2974: }
  6627  0036F2                     l708:
  6628                           ;main.c: 2976: else
  6629  0036F2  0101               	movlb	(_M+5) shr (0+8)
  6630  0036F4  9D05               	bcf	(_M+5)& (0+255),6,b
  6631                           ;main.c: 2979: M.DPR=0;
  6632  0036F6  6B1E               	clrf	(_M+30)& (0+255),b
  6633                           ;main.c: 2980: }
  6634  0036F8  0012               	return	
  6635  0036FA                     __end_of_DetekcjaPrzeplywuWG:
  6636                           ;main.c: 2985: void OczekujNaPrzeplywWG(void)
  6637                           ;main.c: 2986: {
  6638  0036FA                     _OczekujNaPrzeplywWG:
  6639  000000                     
  6640                           ;main.c: 2987: unsigned char pmp,prz;
  6641  0036FA  0E00               	movlw	0
  6642  0036FC  B483               	btfsc	3971,2,c	;volatile
  6643  0036FE  0E01               	movlw	1
  6644  003700  0100               	movlb	__Lparam shr (0+8)
  6645  003702  6FE9               	movwf	?a_OczekujNaPrzeplywWG^(__Lparam& (0+6528
      +                          0)),b
  6646                           ;main.c: 2990: prz=(RdPrt(1))?1:0;
  6647  003704  0E01               	movlw	1
  6648  003706  EC4C  F06F         	call	_RdPrt
  6649  00370A  0E00               	movlw	0
  6650  00370C  B0D8               	btfsc	status,0,c
  6651  00370E  0E01               	movlw	1
  6652  003710  0100               	movlb	__Lparam shr (0+8)
  6653  003712  6FEA               	movwf	(?a_OczekujNaPrzeplywWG+1)^(__Lparam& (0+
      +                          65280)),b
  6654                           ;main.c: 2992: switch(M.RPR)
  6655  003714  D028               	goto	l721
  6656  003716                     l722:
  6657                           ;main.c: 2993: {
  6658                           ;main.c: 2995: {
  6659  003716  0E01               	movlw	1
  6660  003718  CFE8 F115          	movff	wreg,_M+21
  6661                           ;main.c: 2997: M._prb_PRZ=1;
  6662  00371C  0101               	movlb	(_M+5) shr (0+8)
  6663  00371E  8B05               	bsf	(_M+5)& (0+255),5,b
  6664                           ;main.c: 2998: StartRTS(14);
  6665  003720  0E0E               	movlw	14
  6666  003722  EC6F  F073         	call	_StartRTS
  6667  003726                     l723:
  6668                           ;main.c: 2999: }
  6669                           ;main.c: 3001: {
  6670  003726  0100               	movlb	__Lparam shr (0+8)
  6671  003728  51EA               	movf	(?a_OczekujNaPrzeplywWG+1)^(__Lparam& (0+6
      +                          5280)),w
  6672  00372A  E007               	bz	l724
  6673  00372C  51E9               	movf	?a_OczekujNaPrzeplywWG^(__Lparam& (0+65280
      +                          )),w
  6674  00372E  E005               	bz	l724
  6675                           ;main.c: 3003: {
  6676  003730  0101               	movlb	(_M+21) shr (0+8)
  6677  003732  6B15               	clrf	(_M+21)& (0+255),b
  6678                           ;main.c: 3005: M._RUSZ_POMPE=0;
  6679  003734  9702               	bcf	(_M+2)& (0+255),3,b
  6680                           ;main.c: 3006: M._prb_PRZ=0;
  6681  003736  9B05               	bcf	(_M+5)& (0+255),5,b
  6682                           ;main.c: 3007: return;
  6683  003738  0012               	return	
  6684  00373A                     l724:
  6685                           ;main.c: 3008: }
  6686  00373A  0E0E               	movlw	14
  6687  00373C  EC87  F073         	call	_RTS
  6688  003740  6E00               	movwf	btemp,c
  6689  003742  0EF0               	movlw	240
  6690  003744  5C00               	subwf	btemp,w,c
  6691  003746  A0D8               	btfss	status,0,c
  6692  003748  0012               	return	
  6693                           ;main.c: 3010: M._RUSZ_POMPE=0;
  6694  00374A  0101               	movlb	(_M+2) shr (0+8)
  6695  00374C  9702               	bcf	(_M+2)& (0+255),3,b
  6696                           ;main.c: 3011: M.ERR_BTY=0x05;
  6697  00374E  0E05               	movlw	5
  6698  003750  CFE8 F10E          	movff	wreg,_M+14
  6699                           ;main.c: 3012: PrintErr(0x05,1);
  6700  003754  0E01               	movlw	1
  6701  003756  0100               	movlb	__Lparam shr (0+8)
  6702  003758  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  6703  00375A  0E05               	movlw	5
  6704  00375C  EC44  F076         	call	_PrintErr
  6705                           ;main.c: 3013: ToWriteESTAT();
  6706  003760  EC32  F073         	call	_ToWriteESTAT	;wreg free
  6707                           ;main.c: 3014: ErrPTG();
  6708  003764  D2E9               	goto	_ErrPTG	;wreg free
  6709                           ;main.c: 3015: }
  6710  003766                     l721:
  6711  003766  C115  FFE8         	movff	_M+21,wreg
  6712  00376A  0A00               	xorlw	0
  6713  00376C  E0D4               	bz	l722
  6714  00376E  0A01               	xorlw	1
  6715  003770  E0DA               	bz	l723
  6716  003772  0012               	return	
  6717                           ;main.c: 3017: }
  6718  003774                     __end_of_OczekujNaPrzeplywWG:
  6719                           ;main.c: 3021: void ZmienKCOKCW(void)
  6720                           ;main.c: 3022: {
  6721  003774                     _ZmienKCOKCW:
  6722  000000                     
  6723                           ;main.c: 3023: switch(DtKNF.tpkt)
  6724  003774  D079               	goto	l728
  6725  003776                     l730:
  6726                           ;main.c: 3026: case 2:
  6727  003776  D018               	goto	l732
  6728  003778                     l733:
  6729                           ;main.c: 3029: {
  6730                           ;main.c: 3031: {
  6731  003778  7483               	btg	3971,2,c	;volatile
  6732                           ;main.c: 3033: M.ZKP=1;
  6733  00377A  0E01               	movlw	1
  6734  00377C  CFE8 F119          	movff	wreg,_M+25
  6735                           ;main.c: 3034: StartRTdS(2);
  6736  003780  0E02               	movlw	2
  6737  003782  EC51  F073         	call	_StartRTdS
  6738                           ;main.c: 3035: StartRTdS(10);
  6739  003786  0E0A               	movlw	10
  6740  003788  EC51  F073         	call	_StartRTdS
  6741                           ;main.c: 3036: M._LOW_PMP=0;
  6742  00378C  0101               	movlb	(_M+8) shr (0+8)
  6743  00378E  9308               	bcf	(_M+8)& (0+255),1,b
  6744  003790                     l734:
  6745                           ;main.c: 3037: }
  6746                           ;main.c: 3039: {
  6747  003790  0E02               	movlw	2
  6748  003792  EC63  F073         	call	_RTdS
  6749  003796  6E00               	movwf	btemp,c
  6750  003798  0E05               	movlw	5
  6751  00379A  5C00               	subwf	btemp,w,c
  6752  00379C  A0D8               	btfss	status,0,c
  6753  00379E  0012               	return	
  6754                           ;main.c: 3041: M._ZMKCOCW=0;
  6755  0037A0  0101               	movlb	(_M+1) shr (0+8)
  6756  0037A2  9501               	bcf	(_M+1)& (0+255),2,b
  6757                           ;main.c: 3042: M.ZKP=0;
  6758  0037A4  6B19               	clrf	(_M+25)& (0+255),b
  6759                           ;main.c: 3043: }
  6760  0037A6  0012               	return	
  6761  0037A8                     l732:
  6762  0037A8  C119  FFE8         	movff	_M+25,wreg
  6763  0037AC  0A00               	xorlw	0
  6764  0037AE  E0E4               	bz	l733
  6765  0037B0  0A01               	xorlw	1
  6766  0037B2  E0EE               	bz	l734
  6767  0037B4  0012               	return	
  6768                           ;main.c: 3045: return;
  6769  0037B6                     l737:
  6770                           ;main.c: 3048: case 3:
  6771  0037B6  D023               	goto	l739
  6772  0037B8                     l740:
  6773                           ;main.c: 3051: {
  6774                           ;main.c: 3053: {
  6775  0037B8  0E01               	movlw	1
  6776  0037BA  CFE8 F119          	movff	wreg,_M+25
  6777                           ;main.c: 3058: StartRTdS(2);
  6778  0037BE  0E02               	movlw	2
  6779  0037C0  EC51  F073         	call	_StartRTdS
  6780                           ;main.c: 3059: StartRTdS(10);
  6781  0037C4  0E0A               	movlw	10
  6782  0037C6  EC51  F073         	call	_StartRTdS
  6783                           ;main.c: 3060: M._LOW_PMP=1;
  6784  0037CA  0101               	movlb	(_M+8) shr (0+8)
  6785  0037CC  8308               	bsf	(_M+8)& (0+255),1,b
  6786  0037CE                     l741:
  6787                           ;main.c: 3061: }
  6788                           ;main.c: 3063: {
  6789  0037CE  0E02               	movlw	2
  6790  0037D0  EC63  F073         	call	_RTdS
  6791  0037D4  6E00               	movwf	btemp,c
  6792  0037D6  0E05               	movlw	5
  6793  0037D8  5C00               	subwf	btemp,w,c
  6794  0037DA  A0D8               	btfss	status,0,c
  6795  0037DC  0012               	return	
  6796                           ;main.c: 3065: RD1=!RD1;
  6797  0037DE  7283               	btg	3971,1,c	;volatile
  6798                           ;main.c: 3066: M.ZKP=2;
  6799  0037E0  0E02               	movlw	2
  6800  0037E2  CFE8 F119          	movff	wreg,_M+25
  6801  0037E6                     l743:
  6802                           ;main.c: 3067: }
  6803                           ;main.c: 3069: {
  6804  0037E6  0E02               	movlw	2
  6805  0037E8  EC63  F073         	call	_RTdS
  6806  0037EC  6E00               	movwf	btemp,c
  6807  0037EE  0E0A               	movlw	10
  6808  0037F0  5C00               	subwf	btemp,w,c
  6809  0037F2  A0D8               	btfss	status,0,c
  6810  0037F4  0012               	return	
  6811                           ;main.c: 3071: M._ZMKCOCW=0;
  6812  0037F6  0101               	movlb	(_M+1) shr (0+8)
  6813  0037F8  9501               	bcf	(_M+1)& (0+255),2,b
  6814                           ;main.c: 3072: M.ZKP=0;
  6815  0037FA  6B19               	clrf	(_M+25)& (0+255),b
  6816                           ;main.c: 3081: }
  6817  0037FC  0012               	return	
  6818  0037FE                     l739:
  6819  0037FE  C119  FFE8         	movff	_M+25,wreg
  6820  003802  0A00               	xorlw	0
  6821  003804  E0D9               	bz	l740
  6822  003806  0A01               	xorlw	1
  6823  003808  E0E2               	bz	l741
  6824  00380A  0A03               	xorlw	3
  6825  00380C  E0EC               	bz	l743
  6826  00380E  0012               	return	
  6827                           ;main.c: 3083: return;
  6828                           ;main.c: 3084: }
  6829                           ;main.c: 3086: {
  6830  003810                     l748:
  6831                           ;main.c: 3088: {
  6832                           ;main.c: 3090: {
  6833  003810  0E01               	movlw	1
  6834  003812  CFE8 F119          	movff	wreg,_M+25
  6835                           ;main.c: 3095: StartRTdS(2);
  6836  003816  0E02               	movlw	2
  6837  003818  EC51  F073         	call	_StartRTdS
  6838                           ;main.c: 3096: StartRTdS(10);
  6839  00381C  0E0A               	movlw	10
  6840  00381E  EC51  F073         	call	_StartRTdS
  6841                           ;main.c: 3097: M._LOW_PMP=1;
  6842  003822  0101               	movlb	(_M+8) shr (0+8)
  6843  003824  8308               	bsf	(_M+8)& (0+255),1,b
  6844  003826                     l749:
  6845                           ;main.c: 3098: }
  6846                           ;main.c: 3100: {
  6847  003826  0E02               	movlw	2
  6848  003828  EC63  F073         	call	_RTdS
  6849  00382C  6E00               	movwf	btemp,c
  6850  00382E  0E05               	movlw	5
  6851  003830  5C00               	subwf	btemp,w,c
  6852  003832  A0D8               	btfss	status,0,c
  6853  003834  0012               	return	
  6854                           ;main.c: 3102: RD1=!RD1;
  6855  003836  7283               	btg	3971,1,c	;volatile
  6856                           ;main.c: 3103: M.ZKP=2;
  6857  003838  0E02               	movlw	2
  6858  00383A  CFE8 F119          	movff	wreg,_M+25
  6859  00383E                     l751:
  6860                           ;main.c: 3104: }
  6861                           ;main.c: 3106: {
  6862  00383E  0E02               	movlw	2
  6863  003840  EC63  F073         	call	_RTdS
  6864  003844  6E00               	movwf	btemp,c
  6865  003846  0E0A               	movlw	10
  6866  003848  5C00               	subwf	btemp,w,c
  6867  00384A  A0D8               	btfss	status,0,c
  6868  00384C  0012               	return	
  6869                           ;main.c: 3108: M._ZMKCOCW=0;
  6870  00384E  0101               	movlb	(_M+1) shr (0+8)
  6871  003850  9501               	bcf	(_M+1)& (0+255),2,b
  6872                           ;main.c: 3109: M.ZKP=0;
  6873  003852  6B19               	clrf	(_M+25)& (0+255),b
  6874                           ;main.c: 3118: }
  6875  003854  0012               	return	
  6876  003856                     l747:
  6877  003856  C119  FFE8         	movff	_M+25,wreg
  6878  00385A  0A00               	xorlw	0
  6879  00385C  E0D9               	bz	l748
  6880  00385E  0A01               	xorlw	1
  6881  003860  E0E2               	bz	l749
  6882  003862  0A03               	xorlw	3
  6883  003864  E0EC               	bz	l751
  6884  003866  0012               	return	
  6885                           ;main.c: 3120: return;
  6886  003868                     l728:
  6887  003868  C237  FFE8         	movff	_DtKNF+7,wreg
  6888  00386C  0A00               	xorlw	0
  6889  00386E  E0A3               	bz	l737
  6890  003870  0A01               	xorlw	1
  6891  003872  E081               	bz	l730
  6892  003874  0A03               	xorlw	3
  6893  003876  E101 D77E          	bz	l730
  6894  00387A  0A01               	xorlw	1
  6895  00387C  E09C               	bz	l737
  6896  00387E  D7EB               	goto	l747
  6897                           ;main.c: 3123: }
  6898  003880                     __end_of_ZmienKCOKCW:
  6899                           ;main.c: 3125: void SetLowPMP(void)
  6900                           ;main.c: 3126: {
  6901  003880                     _SetLowPMP:
  6902  000000                     
  6903                           ;main.c: 3127: if(!M._ZMKCOCW&&!RD2)
  6904  003880  0101               	movlb	(_M+1) shr (0+8)
  6905  003882  A501               	btfss	(_M+1)& (0+255),2,b
  6906  003884  B483               	btfsc	3971,2,c	;volatile
  6907  003886  D002               	goto	l754
  6908                           ;main.c: 3128: {
  6909  003888  0101               	movlb	(_M+8) shr (0+8)
  6910  00388A  9308               	bcf	(_M+8)& (0+255),1,b
  6911  00388C                     l754:
  6912                           ;main.c: 3130: }
  6913  00388C  0E0A               	movlw	10
  6914  00388E  EC63  F073         	call	_RTdS
  6915  003892  6E00               	movwf	btemp,c
  6916  003894  0E32               	movlw	50
  6917  003896  5C00               	subwf	btemp,w,c
  6918  003898  A0D8               	btfss	status,0,c
  6919  00389A  0012               	return	
  6920                           ;main.c: 3132: M._LOW_PMP=0;
  6921  00389C  0101               	movlb	(_M+8) shr (0+8)
  6922  00389E  9308               	bcf	(_M+8)& (0+255),1,b
  6923                           ;main.c: 3133: }
  6924  0038A0  0012               	return	
  6925  0038A2                     __end_of_SetLowPMP:
  6926                           ;main.c: 3137: void RuszPlomien(void)
  6927                           ;main.c: 3138: {
  6928  0038A2                     _RuszPlomien:
  6929  000000                     
  6930                           ;main.c: 3139: switch(M.RPL)
  6931  0038A2  D029               	goto	l758
  6932  0038A4                     l759:
  6933                           ;main.c: 3140: {
  6934                           ;main.c: 3142: {
  6935  0038A4  0E01               	movlw	1
  6936  0038A6  CFE8 F116          	movff	wreg,_M+22
  6937                           ;main.c: 3144: StartRTS(3);
  6938  0038AA  0E03               	movlw	3
  6939  0038AC  EC6F  F073         	call	_StartRTS
  6940  0038B0                     l760:
  6941                           ;main.c: 3145: }
  6942                           ;main.c: 3147: {
  6943  0038B0  0E03               	movlw	3
  6944  0038B2  EC87  F073         	call	_RTS
  6945  0038B6  6E00               	movwf	btemp,c
  6946  0038B8  0E11               	movlw	17
  6947  0038BA  5C00               	subwf	btemp,w,c
  6948  0038BC  A0D8               	btfss	status,0,c
  6949  0038BE  0012               	return	
  6950                           ;main.c: 3149: M.LICZNIK_PL++;
  6951  0038C0  0101               	movlb	(_M+9) shr (0+8)
  6952  0038C2  2B09               	incf	(_M+9)& (0+255),f,b
  6953                           ;main.c: 3150: if(M._RUSZ_RPLM)
  6954  0038C4  A502               	btfss	(_M+2)& (0+255),2,b
  6955  0038C6  D005               	goto	l762
  6956                           ;main.c: 3151: {
  6957  0038C8  0101               	movlb	_PWM shr (0+8)
  6958  0038CA  A5DB               	btfss	_PWM& (0+255),2,b
  6959  0038CC  D007               	goto	l768
  6960                           ;main.c: 3153: {
  6961                           ;main.c: 3155: {
  6962                           ;main.c: 3157: M._RUSZ_RPLM=0;
  6963                           ;main.c: 3158: }
  6964                           ;main.c: 3160: else
  6965  0038CE  0E00               	movlw	0
  6966  0038D0  D006               	goto	L17
  6967                           ;main.c: 3163: {
  6968                           ;main.c: 3165: M._RUSZ_RPLM=0;
  6969                           ;main.c: 3166: }
  6970  0038D2                     l762:
  6971                           ;main.c: 3169: else
  6972  0038D2  0101               	movlb	_PWM shr (0+8)
  6973  0038D4  B5DB               	btfsc	_PWM& (0+255),2,b
  6974  0038D6  D002               	goto	l768
  6975                           ;main.c: 3172: {
  6976  0038D8  0E02               	movlw	2
  6977  0038DA  D001               	goto	L17
  6978                           ;main.c: 3174: {
  6979                           ;main.c: 3176: M._RUSZ_RPLM=0;
  6980                           ;main.c: 3177: }
  6981  0038DC                     l768:
  6982                           ;main.c: 3179: else
  6983  0038DC  0E01               	movlw	1
  6984  0038DE                     L17:
  6985  0038DE  0101               	movlb	(_M+9) shr (0+8)
  6986  0038E0  6509               	cpfsgt	(_M+9)& (0+255),b
  6987  0038E2  D002               	goto	l767
  6988                           ;main.c: 3182: {
  6989  0038E4  8F04               	bsf	(_M+4)& (0+255),7,b
  6990                           ;main.c: 3184: M._RUSZ_RPLM=0;
  6991  0038E6  9502               	bcf	(_M+2)& (0+255),2,b
  6992  0038E8                     l767:
  6993                           ;main.c: 3185: }
  6994  0038E8  0E05               	movlw	5
  6995  0038EA  EC51  F073         	call	_StartRTdS
  6996                           ;main.c: 3189: M._RUSZ_PLOMIEN=0;
  6997  0038EE  0101               	movlb	(_M+2) shr (0+8)
  6998  0038F0  9302               	bcf	(_M+2)& (0+255),1,b
  6999                           ;main.c: 3190: M.RPL=0;
  7000  0038F2  6B16               	clrf	(_M+22)& (0+255),b
  7001                           ;main.c: 3191: }
  7002  0038F4  0012               	return	
  7003  0038F6                     l758:
  7004  0038F6  C116  FFE8         	movff	_M+22,wreg
  7005  0038FA  0A00               	xorlw	0
  7006  0038FC  E0D3               	bz	l759
  7007  0038FE  0A01               	xorlw	1
  7008  003900  E0D7               	bz	l760
  7009  003902  0012               	return	
  7010                           ;main.c: 3193: }
  7011  003904                     __end_of_RuszPlomien:
  7012                           ;main.c: 3195: void ReloadPlomien(void)
  7013                           ;main.c: 3196: {
  7014  003904                     _ReloadPlomien:
  7015  000000                     
  7016                           ;main.c: 3197: if(!M._RUSZ_PLOMIEN&&!M._ZMKCOCW&
      +                          &!M._ROZRUCH&&(RTdS(5)>20))
  7017  003904  0101               	movlb	(_M+2) shr (0+8)
  7018  003906  A302               	btfss	(_M+2)& (0+255),1,b
  7019  003908  B501               	btfsc	(_M+1)& (0+255),2,b
  7020  00390A  0012               	return	
  7021  00390C  0101               	movlb	(_M+1) shr (0+8)
  7022  00390E  B701               	btfsc	(_M+1)& (0+255),3,b
  7023  003910  0012               	return	
  7024  003912  0E05               	movlw	5
  7025  003914  EC63  F073         	call	_RTdS
  7026  003918  6E00               	movwf	btemp,c
  7027  00391A  0E15               	movlw	21
  7028  00391C  5C00               	subwf	btemp,w,c
  7029  00391E  A0D8               	btfss	status,0,c
  7030  003920  0012               	return	
  7031                           ;main.c: 3198: {
  7032  003922  0101               	movlb	(_M+2) shr (0+8)
  7033  003924  9502               	bcf	(_M+2)& (0+255),2,b
  7034                           ;main.c: 3200: M._OST_PL=0;
  7035  003926  9F04               	bcf	(_M+4)& (0+255),7,b
  7036                           ;main.c: 3201: M.LICZNIK_PL=0;
  7037  003928  6B09               	clrf	(_M+9)& (0+255),b
  7038                           ;main.c: 3202: }
  7039  00392A  0012               	return	
  7040  00392C                     __end_of_ReloadPlomien:
  7041                           ;main.c: 3207: void RuszCiag(void)
  7042                           ;main.c: 3208: {
  7043  00392C                     _RuszCiag:
  7044  000000                     
  7045                           ;main.c: 3209: if(!M._TURBO)
  7046  00392C  0101               	movlb	(_M+4) shr (0+8)
  7047  00392E  AB04               	btfss	(_M+4)& (0+255),5,b
  7048  003930  D036               	goto	l777
  7049  003932  D0C0               	goto	l785
  7050                           ;main.c: 3210: {
  7051  003934                     l778:
  7052                           ;main.c: 3212: {
  7053                           ;main.c: 3214: {
  7054  003934  0E01               	movlw	1
  7055  003936  CFE8 F117          	movff	wreg,_M+23
  7056                           ;main.c: 3216: M._prb_CIG=0;
  7057  00393A  0101               	movlb	(_M+5) shr (0+8)
  7058  00393C  9905               	bcf	(_M+5)& (0+255),4,b
  7059                           ;main.c: 3217: StartRTS(4);
  7060  00393E  0E04               	movlw	4
  7061  003940  EC6F  F073         	call	_StartRTS
  7062                           ;main.c: 3218: StartRTM(3);
  7063  003944  0E03               	movlw	3
  7064  003946  EC96  F073         	call	_StartRTM
  7065  00394A                     l779:
  7066                           ;main.c: 3219: }
  7067                           ;main.c: 3221: {
  7068  00394A  0E04               	movlw	4
  7069  00394C  EC87  F073         	call	_RTS
  7070  003950  6E00               	movwf	btemp,c
  7071  003952  0E02               	movlw	2
  7072  003954  5C00               	subwf	btemp,w,c
  7073  003956  E302               	bnc	l780
  7074  003958  0101               	movlb	(_M+5) shr (0+8)
  7075  00395A  8905               	bsf	(_M+5)& (0+255),4,b
  7076  00395C                     l780:
  7077                           ;main.c: 3223: if(RTM(3)<15) return;
  7078  00395C  0E03               	movlw	3
  7079  00395E  ECAE  F073         	call	_RTM
  7080  003962  6E00               	movwf	btemp,c
  7081  003964  0E0F               	movlw	15
  7082  003966  5C00               	subwf	btemp,w,c
  7083  003968  A0D8               	btfss	status,0,c
  7084  00396A  0012               	return	
  7085                           ;main.c: 3224: M.LICZNIK_CIG2++;
  7086  00396C  0101               	movlb	(_M+11) shr (0+8)
  7087  00396E  2B0B               	incf	(_M+11)& (0+255),f,b
  7088                           ;main.c: 3225: if(M.LICZNIK_CIG2>=4)
  7089  003970  0E03               	movlw	3
  7090  003972  650B               	cpfsgt	(_M+11)& (0+255),b
  7091  003974  D00D               	goto	l782
  7092                           ;main.c: 3226: {
  7093  003976  6B0B               	clrf	(_M+11)& (0+255),b
  7094                           ;main.c: 3228: M.ERR_BTY=0x03;
  7095  003978  0E03               	movlw	3
  7096  00397A  CFE8 F10E          	movff	wreg,_M+14
  7097                           ;main.c: 3229: PrintErr(0x03,1);
  7098  00397E  0E01               	movlw	1
  7099  003980  0100               	movlb	__Lparam shr (0+8)
  7100  003982  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  7101  003984  0E03               	movlw	3
  7102  003986  EC44  F076         	call	_PrintErr
  7103                           ;main.c: 3230: ToWriteESTAT();
  7104  00398A  EC32  F073         	call	_ToWriteESTAT	;wreg free
  7105                           ;main.c: 3231: ErrPTG();
  7106  00398E  D9D4               	call	_ErrPTG	;wreg free
  7107  003990                     l782:
  7108                           ;main.c: 3232: }
  7109  003990  0101               	movlb	(_M+23) shr (0+8)
  7110  003992  6B17               	clrf	(_M+23)& (0+255),b
  7111                           ;main.c: 3234: M._RUSZ_CIAG=0;
  7112  003994  9102               	bcf	(_M+2)& (0+255),0,b
  7113                           ;main.c: 3235: M._prb_CIG=0;
  7114  003996  9905               	bcf	(_M+5)& (0+255),4,b
  7115                           ;main.c: 3236: StartRTM(6);
  7116  003998  0E06               	movlw	6
  7117  00399A  EF96  F073         	goto	_StartRTM
  7118                           ;main.c: 3237: return;
  7119  00399E                     l777:
  7120  00399E  C117  FFE8         	movff	_M+23,wreg
  7121  0039A2  0A00               	xorlw	0
  7122  0039A4  E0C7               	bz	l778
  7123  0039A6  0A01               	xorlw	1
  7124  0039A8  E0D0               	bz	l779
  7125  0039AA  0012               	return	
  7126                           ;main.c: 3240: }
  7127                           ;main.c: 3241: else
  7128  0039AC                     l786:
  7129                           ;main.c: 3244: {
  7130                           ;main.c: 3246: {
  7131  0039AC  0101               	movlb	(_M+5) shr (0+8)
  7132  0039AE  9905               	bcf	(_M+5)& (0+255),4,b
  7133                           ;main.c: 3248: StartRTS(4);
  7134  0039B0  0E04               	movlw	4
  7135  0039B2  EC6F  F073         	call	_StartRTS
  7136                           ;main.c: 3249: if(RD3)
  7137  0039B6  A683               	btfss	3971,3,c	;volatile
  7138  0039B8  D007               	goto	l787
  7139                           ;main.c: 3250: {
  7140  0039BA  0101               	movlb	(_M+1) shr (0+8)
  7141  0039BC  8F01               	bsf	(_M+1)& (0+255),7,b
  7142                           ;main.c: 3252: M.VWB=0;
  7143  0039BE  6B1A               	clrf	(_M+26)& (0+255),b
  7144                           ;main.c: 3253: M.RCI=1;
  7145  0039C0  0E01               	movlw	1
  7146  0039C2  CFE8 F117          	movff	wreg,_M+23
  7147                           ;main.c: 3254: }
  7148  0039C6  0C01               	retlw	1
  7149  0039C8                     l787:
  7150                           ;main.c: 3255: else M.RCI=2;
  7151  0039C8  0E02               	movlw	2
  7152  0039CA  CFE8 F117          	movff	wreg,_M+23
  7153                           ;main.c: 3256: break;
  7154  0039CE  0C02               	retlw	2
  7155  0039D0                     l789:
  7156                           ;main.c: 3257: }
  7157                           ;main.c: 3259: {
  7158  0039D0  0E04               	movlw	4
  7159  0039D2  EC87  F073         	call	_RTS
  7160  0039D6  6E00               	movwf	btemp,c
  7161  0039D8  0E02               	movlw	2
  7162  0039DA  5C00               	subwf	btemp,w,c
  7163  0039DC  E302               	bnc	l790
  7164  0039DE  0101               	movlb	(_M+5) shr (0+8)
  7165  0039E0  8905               	bsf	(_M+5)& (0+255),4,b
  7166  0039E2                     l790:
  7167                           ;main.c: 3262: if(RdPrt(3))
  7168  0039E2  0E03               	movlw	3
  7169  0039E4  EC4C  F06F         	call	_RdPrt
  7170                           ;main.c: 3263: {
  7171  0039E8  0E04               	movlw	4
  7172  0039EA  E305               	bnc	L38
  7173  0039EC  CFE8 F117          	movff	wreg,_M+23
  7174                           ;main.c: 3265: M.LICZNIK_CIG3=0;
  7175  0039F0  0101               	movlb	(_M+12) shr (0+8)
  7176  0039F2  6B0C               	clrf	(_M+12)& (0+255),b
  7177  0039F4  D00A               	goto	L54
  7178                           ;main.c: 3266: StartRTS(4);
  7179                           ;main.c: 3267: break;
  7180                           ;main.c: 3268: }
  7181  0039F6                     L38:
  7182  0039F6  EC87  F073         	call	_RTS
  7183  0039FA  6E00               	movwf	btemp,c
  7184  0039FC  0E0E               	movlw	14
  7185  0039FE  5C00               	subwf	btemp,w,c
  7186  003A00  A0D8               	btfss	status,0,c
  7187  003A02  0012               	return	
  7188                           ;main.c: 3270: M.RCI=3;
  7189  003A04  0E03               	movlw	3
  7190  003A06  CFE8 F117          	movff	wreg,_M+23
  7191  003A0A                     L54:
  7192                           ;main.c: 3271: StartRTS(4);
  7193  003A0A  0E04               	movlw	4
  7194  003A0C  EF6F  F073         	goto	_StartRTS
  7195                           ;main.c: 3272: break;
  7196  003A10                     l793:
  7197                           ;main.c: 3273: }
  7198                           ;main.c: 3276: {
  7199  003A10  0E04               	movlw	4
  7200  003A12  EC87  F073         	call	_RTS
  7201  003A16  6E00               	movwf	btemp,c
  7202  003A18  0E02               	movlw	2
  7203  003A1A  5C00               	subwf	btemp,w,c
  7204  003A1C  E302               	bnc	l794
  7205  003A1E  0101               	movlb	(_M+5) shr (0+8)
  7206  003A20  8905               	bsf	(_M+5)& (0+255),4,b
  7207  003A22                     l794:
  7208                           ;main.c: 3279: if(!RdPrt(3))
  7209  003A22  0E03               	movlw	3
  7210  003A24  EC4C  F06F         	call	_RdPrt
  7211                           ;main.c: 3280: {
  7212  003A28  0E04               	movlw	4
  7213  003A2A  E201               	bc	L39
  7214  003A2C  D02F               	goto	L55
  7215                           ;main.c: 3282: StartRTS(4);
  7216                           ;main.c: 3283: break;
  7217                           ;main.c: 3284: }
  7218  003A2E                     L39:
  7219  003A2E  EC87  F073         	call	_RTS
  7220  003A32  6E00               	movwf	btemp,c
  7221  003A34  0E0E               	movlw	14
  7222  003A36  5C00               	subwf	btemp,w,c
  7223  003A38  A0D8               	btfss	status,0,c
  7224  003A3A  0012               	return	
  7225                           ;main.c: 3286: M.ERR_BTY=0x03;
  7226  003A3C  0E03               	movlw	3
  7227  003A3E  CFE8 F10E          	movff	wreg,_M+14
  7228                           ;main.c: 3287: PrintErr(0x03,1);
  7229  003A42  0E01               	movlw	1
  7230  003A44  0100               	movlb	__Lparam shr (0+8)
  7231  003A46  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  7232  003A48  0E03               	movlw	3
  7233  003A4A  EC44  F076         	call	_PrintErr
  7234                           ;main.c: 3288: ToWriteESTAT();
  7235  003A4E  EC32  F073         	call	_ToWriteESTAT	;wreg free
  7236                           ;main.c: 3289: ErrPTG();
  7237  003A52  D972               	call	_ErrPTG	;wreg free
  7238  003A54                     l797:
  7239                           ;main.c: 3290: }
  7240                           ;main.c: 3293: {
  7241  003A54  9683               	bcf	3971,3,c	;volatile
  7242                           ;main.c: 3295: if(RTS(4)<5-1) return;
  7243  003A56  0E04               	movlw	4
  7244  003A58  EC87  F073         	call	_RTS
  7245  003A5C  6E00               	movwf	btemp,c
  7246  003A5E  0E04               	movlw	4
  7247  003A60  5C00               	subwf	btemp,w,c
  7248  003A62  A0D8               	btfss	status,0,c
  7249  003A64  0012               	return	
  7250                           ;main.c: 3296: M.LICZNIK_CIG3++;
  7251  003A66  0101               	movlb	(_M+12) shr (0+8)
  7252  003A68  2B0C               	incf	(_M+12)& (0+255),f,b
  7253                           ;main.c: 3297: if(M.LICZNIK_CIG3>=10)
  7254  003A6A  0E09               	movlw	9
  7255  003A6C  650C               	cpfsgt	(_M+12)& (0+255),b
  7256  003A6E  D00D               	goto	l799
  7257                           ;main.c: 3298: {
  7258  003A70  6B0C               	clrf	(_M+12)& (0+255),b
  7259                           ;main.c: 3300: M.ERR_BTY=0x03;
  7260  003A72  0E03               	movlw	3
  7261  003A74  CFE8 F10E          	movff	wreg,_M+14
  7262                           ;main.c: 3301: PrintErr(0x03,1);
  7263  003A78  0E01               	movlw	1
  7264  003A7A  0100               	movlb	__Lparam shr (0+8)
  7265  003A7C  6FEB               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  7266  003A7E  0E03               	movlw	3
  7267  003A80  EC44  F076         	call	_PrintErr
  7268                           ;main.c: 3302: ToWriteESTAT();
  7269  003A84  EC32  F073         	call	_ToWriteESTAT	;wreg free
  7270                           ;main.c: 3303: ErrPTG();
  7271  003A88  D957               	call	_ErrPTG	;wreg free
  7272  003A8A                     l799:
  7273                           ;main.c: 3304: }
  7274  003A8A  0E04               	movlw	4
  7275  003A8C                     L55:
  7276  003A8C  CFE8 F117          	movff	wreg,_M+23
  7277                           ;main.c: 3306: StartRTS(4);
  7278  003A90  EF6F  F073         	goto	_StartRTS
  7279                           ;main.c: 3307: break;
  7280  003A94                     l800:
  7281                           ;main.c: 3308: }
  7282                           ;main.c: 3310: {
  7283  003A94  0E04               	movlw	4
  7284  003A96  EC87  F073         	call	_RTS
  7285  003A9A  6E00               	movwf	btemp,c
  7286  003A9C  0E01               	movlw	1
  7287  003A9E  5C00               	subwf	btemp,w,c
  7288  003AA0  A0D8               	btfss	status,0,c
  7289  003AA2  0012               	return	
  7290                           ;main.c: 3312: StartRTS(15);
  7291  003AA4  0E0F               	movlw	15
  7292  003AA6  EC6F  F073         	call	_StartRTS
  7293                           ;main.c: 3313: M._prb_CIG=0;
  7294  003AAA  0101               	movlb	(_M+5) shr (0+8)
  7295  003AAC  9905               	bcf	(_M+5)& (0+255),4,b
  7296                           ;main.c: 3314: M._RUSZ_CIAG=0;
  7297  003AAE  9102               	bcf	(_M+2)& (0+255),0,b
  7298                           ;main.c: 3315: M.RCI=0;
  7299  003AB0  6B17               	clrf	(_M+23)& (0+255),b
  7300                           ;main.c: 3316: return;
  7301  003AB2  0012               	return	
  7302  003AB4                     l785:
  7303  003AB4  C117  FFE8         	movff	_M+23,wreg
  7304  003AB8  0A00               	xorlw	0
  7305  003ABA  E101 D777          	bz	l786
  7306  003ABE  0A01               	xorlw	1
  7307  003AC0  E087               	bz	l789
  7308  003AC2  0A03               	xorlw	3
  7309  003AC4  E0A5               	bz	l793
  7310  003AC6  0A01               	xorlw	1
  7311  003AC8  E0C5               	bz	l797
  7312  003ACA  0A07               	xorlw	7
  7313  003ACC  E0E3               	bz	l800
  7314  003ACE  0012               	return	
  7315                           ;main.c: 3319: }
  7316  003AD0                     __end_of_RuszCiag:
  7317                           ;main.c: 3324: void ReloadCiag(void)
  7318                           ;main.c: 3325: {
  7319  003AD0                     _ReloadCiag:
  7320  000000                     
  7321                           ;main.c: 3326: if(!M._TURBO)
  7322  003AD0  0101               	movlb	(_M+4) shr (0+8)
  7323  003AD2  BB04               	btfsc	(_M+4)& (0+255),5,b
  7324  003AD4  D00D               	goto	l803
  7325                           ;main.c: 3327: {
  7326  003AD6  B102               	btfsc	(_M+2)& (0+255),0,b
  7327  003AD8  0012               	return	
  7328  003ADA  0E06               	movlw	6
  7329  003ADC  ECAE  F073         	call	_RTM
  7330  003AE0  6E00               	movwf	btemp,c
  7331  003AE2  0E3D               	movlw	61
  7332  003AE4  5C00               	subwf	btemp,w,c
  7333  003AE6  A0D8               	btfss	status,0,c
  7334  003AE8  0012               	return	
  7335  003AEA  0101               	movlb	(_M+11) shr (0+8)
  7336  003AEC  6B0B               	clrf	(_M+11)& (0+255),b
  7337                           ;main.c: 3329: }
  7338  003AEE  0012               	return	
  7339  003AF0                     l803:
  7340                           ;main.c: 3330: else
  7341  003AF0  0E0B               	movlw	11
  7342  003AF2  EC87  F073         	call	_RTS
  7343  003AF6  6E00               	movwf	btemp,c
  7344  003AF8  0E3D               	movlw	61
  7345  003AFA  5C00               	subwf	btemp,w,c
  7346  003AFC  E302               	bnc	l806
  7347                           ;main.c: 3333: {
  7348  003AFE  0101               	movlb	(_M+10) shr (0+8)
  7349  003B00  6B0A               	clrf	(_M+10)& (0+255),b
  7350  003B02                     l806:
  7351                           ;main.c: 3335: }
  7352  003B02  0101               	movlb	(_M+2) shr (0+8)
  7353  003B04  B102               	btfsc	(_M+2)& (0+255),0,b
  7354  003B06  0012               	return	
  7355  003B08  0E0F               	movlw	15
  7356  003B0A  EC87  F073         	call	_RTS
  7357  003B0E  6E00               	movwf	btemp,c
  7358  003B10  0E3D               	movlw	61
  7359  003B12  5C00               	subwf	btemp,w,c
  7360  003B14  A0D8               	btfss	status,0,c
  7361  003B16  0012               	return	
  7362                           ;main.c: 3337: {
  7363  003B18  0101               	movlb	(_M+12) shr (0+8)
  7364  003B1A  6B0C               	clrf	(_M+12)& (0+255),b
  7365                           ;main.c: 3339: }
  7366  003B1C  0012               	return	
  7367  003B1E                     __end_of_ReloadCiag:
  7368                           ;main.c: 3345: void Proba48(void)
  7369                           ;main.c: 3346: {
  7370  003B1E                     _Proba48:
  7371  000000                     
  7372                           ;main.c: 3348: if(M._RUSZ_48||M._RUSZ_48Z3) retu
      +                          rn;
  7373  003B1E  0101               	movlb	(_M+1) shr (0+8)
  7374  003B20  A901               	btfss	(_M+1)& (0+255),4,b
  7375  003B22  BB01               	btfsc	(_M+1)& (0+255),5,b
  7376  003B24  0012               	return	
  7377  003B26  0E00               	movlw	0
  7378                           ;main.c: 3349: if(RD2) StartRTG(0);
  7379  003B28  B483               	btfsc	3971,2,c	;volatile
  7380  003B2A  EFCC  F073         	goto	_StartRTG
  7381                           ;main.c: 3350: else
  7382  003B2E  ECE4  F073         	call	_RTG
  7383  003B32  6E00               	movwf	btemp,c
  7384  003B34  0E18               	movlw	24
  7385  003B36  5C00               	subwf	btemp,w,c
  7386  003B38  A0D8               	btfss	status,0,c
  7387  003B3A  0012               	return	
  7388                           ;main.c: 3353: {
  7389  003B3C  0101               	movlb	(_M+16) shr (0+8)
  7390  003B3E  6B10               	clrf	(_M+16)& (0+255),b
  7391                           ;main.c: 3355: M._RUSZ_48=1;
  7392  003B40  8901               	bsf	(_M+1)& (0+255),4,b
  7393                           ;main.c: 3356: StartRTG(0);
  7394  003B42  0E00               	movlw	0
  7395  003B44  EFCC  F073         	goto	_StartRTG
  7396                           ;main.c: 3357: }
  7397  003B48                     __end_of_Proba48:
  7398                           ;main.c: 3377: void Rusz48(void)
  7399                           ;main.c: 3378: {
  7400  003B48                     _Rusz48:
  7401  000000                     
  7402                           ;main.c: 3379: switch(DtKNF.tpkt)
  7403  003B48  D062               	goto	l815
  7404  003B4A                     l817:
  7405                           ;main.c: 3382: case 2:
  7406  003B4A  D01C               	goto	l819
  7407  003B4C                     l820:
  7408                           ;main.c: 3385: {
  7409                           ;main.c: 3387: {
  7410  003B4C  0101               	movlb	(_M+1) shr (0+8)
  7411  003B4E  B501               	btfsc	(_M+1)& (0+255),2,b
  7412  003B50  0012               	return	
  7413                           ;main.c: 3389: StartRTS(5);
  7414  003B52  0E05               	movlw	5
  7415  003B54  EC6F  F073         	call	_StartRTS
  7416                           ;main.c: 3390: ToObiegCO();
  7417  003B58  ECA7  F013         	call	_ToObiegCO	;wreg free
  7418                           ;main.c: 3391: M.R48=1;
  7419  003B5C  0E01               	movlw	1
  7420  003B5E  CFE8 F110          	movff	wreg,_M+16
  7421  003B62                     l822:
  7422                           ;main.c: 3392: }
  7423                           ;main.c: 3394: {
  7424  003B62  0E05               	movlw	5
  7425  003B64  EC87  F073         	call	_RTS
  7426  003B68  6E00               	movwf	btemp,c
  7427  003B6A  0EB4               	movlw	180
  7428  003B6C  5C00               	subwf	btemp,w,c
  7429  003B6E  A0D8               	btfss	status,0,c
  7430  003B70  0012               	return	
  7431                           ;main.c: 3396: if(M._ZMKCOCW) return;
  7432  003B72  0101               	movlb	(_M+1) shr (0+8)
  7433  003B74  B501               	btfsc	(_M+1)& (0+255),2,b
  7434  003B76  0012               	return	
  7435                           ;main.c: 3397: ToObiegCW();
  7436  003B78  ECCE  F013         	call	_ToObiegCW	;wreg free
  7437                           ;main.c: 3398: M._RUSZ_48=0;
  7438  003B7C  0101               	movlb	(_M+1) shr (0+8)
  7439  003B7E  9901               	bcf	(_M+1)& (0+255),4,b
  7440                           ;main.c: 3399: M.R48=0;
  7441  003B80  6B10               	clrf	(_M+16)& (0+255),b
  7442                           ;main.c: 3400: }
  7443  003B82  0012               	return	
  7444  003B84                     l819:
  7445  003B84  C110  FFE8         	movff	_M+16,wreg
  7446  003B88  0A00               	xorlw	0
  7447  003B8A  E0E0               	bz	l820
  7448  003B8C  0A01               	xorlw	1
  7449  003B8E  E0E9               	bz	l822
  7450  003B90  0012               	return	
  7451                           ;main.c: 3402: break;
  7452  003B92                     l826:
  7453                           ;main.c: 3405: case 3:
  7454  003B92  D01B               	goto	l828
  7455  003B94                     l829:
  7456                           ;main.c: 3408: {
  7457                           ;main.c: 3410: {
  7458  003B94  ECA7  F013         	call	_ToObiegCO	;wreg free
  7459                           ;main.c: 3412: if(M._ZMKCOCW) return;
  7460  003B98  0101               	movlb	(_M+1) shr (0+8)
  7461  003B9A  B501               	btfsc	(_M+1)& (0+255),2,b
  7462  003B9C  0012               	return	
  7463                           ;main.c: 3413: StartRTS(5);
  7464  003B9E  0E05               	movlw	5
  7465  003BA0  EC6F  F073         	call	_StartRTS
  7466                           ;main.c: 3414: RD2=1;
  7467  003BA4  8483               	bsf	3971,2,c	;volatile
  7468                           ;main.c: 3415: M.R48=1;
  7469  003BA6  0E01               	movlw	1
  7470  003BA8  CFE8 F110          	movff	wreg,_M+16
  7471  003BAC                     l831:
  7472                           ;main.c: 3416: }
  7473                           ;main.c: 3418: {
  7474  003BAC  0E05               	movlw	5
  7475  003BAE  EC87  F073         	call	_RTS
  7476  003BB2  6E00               	movwf	btemp,c
  7477  003BB4  0EB4               	movlw	180
  7478  003BB6  5C00               	subwf	btemp,w,c
  7479  003BB8  A0D8               	btfss	status,0,c
  7480  003BBA  0012               	return	
  7481                           ;main.c: 3420: if(M._ZMKCOCW) return;
  7482  003BBC  0101               	movlb	(_M+1) shr (0+8)
  7483  003BBE  B501               	btfsc	(_M+1)& (0+255),2,b
  7484  003BC0  0012               	return	
  7485                           ;main.c: 3421: RD2=0;
  7486  003BC2  9483               	bcf	3971,2,c	;volatile
  7487                           ;main.c: 3422: M._RUSZ_48=0;
  7488  003BC4  9901               	bcf	(_M+1)& (0+255),4,b
  7489                           ;main.c: 3423: M.R48=0;
  7490  003BC6  6B10               	clrf	(_M+16)& (0+255),b
  7491                           ;main.c: 3424: }
  7492  003BC8  0012               	return	
  7493  003BCA                     l828:
  7494  003BCA  C110  FFE8         	movff	_M+16,wreg
  7495  003BCE  0A00               	xorlw	0
  7496  003BD0  E0E1               	bz	l829
  7497  003BD2  0A01               	xorlw	1
  7498  003BD4  E0EB               	bz	l831
  7499  003BD6  0012               	return	
  7500                           ;main.c: 3426: break;
  7501                           ;main.c: 3427: }
  7502                           ;main.c: 3429: {
  7503  003BD8                     l837:
  7504                           ;main.c: 3431: {
  7505                           ;main.c: 3433: {
  7506  003BD8  ECA7  F013         	call	_ToObiegCO	;wreg free
  7507                           ;main.c: 3435: if(M._ZMKCOCW) return;
  7508  003BDC  0101               	movlb	(_M+1) shr (0+8)
  7509  003BDE  B501               	btfsc	(_M+1)& (0+255),2,b
  7510  003BE0  0012               	return	
  7511                           ;main.c: 3436: StartRTS(5);
  7512  003BE2  0E05               	movlw	5
  7513  003BE4  EC6F  F073         	call	_StartRTS
  7514                           ;main.c: 3437: RD2=1;
  7515  003BE8  8483               	bsf	3971,2,c	;volatile
  7516                           ;main.c: 3438: M.R48=1;
  7517  003BEA  0E01               	movlw	1
  7518  003BEC  CFE8 F110          	movff	wreg,_M+16
  7519  003BF0                     l839:
  7520                           ;main.c: 3439: }
  7521                           ;main.c: 3441: {
  7522  003BF0  0E05               	movlw	5
  7523  003BF2  EC87  F073         	call	_RTS
  7524  003BF6  6E00               	movwf	btemp,c
  7525  003BF8  0EB4               	movlw	180
  7526  003BFA  5C00               	subwf	btemp,w,c
  7527  003BFC  A0D8               	btfss	status,0,c
  7528  003BFE  0012               	return	
  7529                           ;main.c: 3443: if(M._ZMKCOCW) return;
  7530  003C00  0101               	movlb	(_M+1) shr (0+8)
  7531  003C02  B501               	btfsc	(_M+1)& (0+255),2,b
  7532  003C04  0012               	return	
  7533                           ;main.c: 3444: RD2=0;
  7534  003C06  9483               	bcf	3971,2,c	;volatile
  7535                           ;main.c: 3445: M._RUSZ_48=0;
  7536  003C08  9901               	bcf	(_M+1)& (0+255),4,b
  7537                           ;main.c: 3446: M.R48=0;
  7538  003C0A  6B10               	clrf	(_M+16)& (0+255),b
  7539                           ;main.c: 3447: }
  7540  003C0C  0012               	return	
  7541                           ;main.c: 3449: break;
  7542  003C0E                     l815:
  7543  003C0E  C237  FFE8         	movff	_DtKNF+7,wreg
  7544  003C12  0A00               	xorlw	0
  7545  003C14  E0BE               	bz	l826
  7546  003C16  0A01               	xorlw	1
  7547  003C18  E098               	bz	l817
  7548  003C1A  0A03               	xorlw	3
  7549  003C1C  E096               	bz	l817
  7550  003C1E  0A01               	xorlw	1
  7551  003C20  E0B8               	bz	l826
  7552  003C22  C110  FFE8         	movff	_M+16,wreg
  7553  003C26  0A00               	xorlw	0
  7554  003C28  E0D7               	bz	l837
  7555  003C2A  0A01               	xorlw	1
  7556  003C2C  E0E1               	bz	l839
  7557                           ;main.c: 3452: }
  7558  003C2E  0012               	return	
  7559  003C30                     __end_of_Rusz48:
  7560                           ;main.c: 3455: void Proba48Z3(void)
  7561                           ;main.c: 3456: {
  7562  003C30                     _Proba48Z3:
  7563  000000                     
  7564                           ;main.c: 3458: switch(DtKNF.tpkt)
  7565  003C30  D01B               	goto	l844
  7566  003C32                     l845:
  7567                           ;main.c: 3459: {
  7568                           ;main.c: 3461: {
  7569  003C32  0101               	movlb	(_M+1) shr (0+8)
  7570  003C34  AB01               	btfss	(_M+1)& (0+255),5,b
  7571  003C36  B901               	btfsc	(_M+1)& (0+255),4,b
  7572  003C38  0012               	return	
  7573                           ;main.c: 3463: if(RD2&&!RD1) StartRTG(2);
  7574  003C3A  B483               	btfsc	3971,2,c	;volatile
  7575  003C3C  B283               	btfsc	3971,1,c	;volatile
  7576  003C3E  D001               	goto	l847
  7577  003C40  D010               	goto	L56
  7578  003C42                     l847:
  7579                           ;main.c: 3464: else
  7580  003C42  B483               	btfsc	3971,2,c	;volatile
  7581  003C44  0012               	return	
  7582  003C46  0101               	movlb	(_M+1) shr (0+8)
  7583  003C48  B501               	btfsc	(_M+1)& (0+255),2,b
  7584  003C4A  0012               	return	
  7585                           ;main.c: 3467: if(RTG(2)>=47)
  7586  003C4C  0E02               	movlw	2
  7587  003C4E  ECE4  F073         	call	_RTG
  7588  003C52  6E00               	movwf	btemp,c
  7589  003C54  0E2F               	movlw	47
  7590  003C56  5C00               	subwf	btemp,w,c
  7591  003C58  A0D8               	btfss	status,0,c
  7592  003C5A  0012               	return	
  7593                           ;main.c: 3468: {
  7594  003C5C  0101               	movlb	(_M+17) shr (0+8)
  7595  003C5E  6B11               	clrf	(_M+17)& (0+255),b
  7596                           ;main.c: 3470: M._RUSZ_48Z3=1;
  7597  003C60  8B01               	bsf	(_M+1)& (0+255),5,b
  7598  003C62                     L56:
  7599                           ;main.c: 3471: StartRTG(2);
  7600  003C62  0E02               	movlw	2
  7601  003C64  EFCC  F073         	goto	_StartRTG
  7602                           ;main.c: 3472: }
  7603  003C68                     l844:
  7604  003C68  C237  FFE8         	movff	_DtKNF+7,wreg
  7605  003C6C  0A03               	xorlw	3
  7606  003C6E  E0E1               	bz	l845
  7607  003C70  0012               	return	
  7608                           ;main.c: 3498: }
  7609  003C72                     __end_of_Proba48Z3:
  7610                           ;main.c: 3502: void Rusz48Z3(void)
  7611                           ;main.c: 3503: {
  7612  003C72                     _Rusz48Z3:
  7613  000000                     
  7614                           ;main.c: 3504: switch(DtKNF.tpkt)
  7615  003C72  D023               	goto	l853
  7616  003C74                     l854:
  7617                           ;main.c: 3505: {
  7618                           ;main.c: 3507: {
  7619  003C74  D01B               	goto	l856
  7620  003C76                     l857:
  7621                           ;main.c: 3509: {
  7622                           ;main.c: 3511: {
  7623  003C76  ECCE  F013         	call	_ToObiegCW	;wreg free
  7624                           ;main.c: 3513: if(M._ZMKCOCW) return;
  7625  003C7A  0101               	movlb	(_M+1) shr (0+8)
  7626  003C7C  B501               	btfsc	(_M+1)& (0+255),2,b
  7627  003C7E  0012               	return	
  7628                           ;main.c: 3514: StartRTS(5);
  7629  003C80  0E05               	movlw	5
  7630  003C82  EC6F  F073         	call	_StartRTS
  7631                           ;main.c: 3515: RD2=1;
  7632  003C86  8483               	bsf	3971,2,c	;volatile
  7633                           ;main.c: 3516: M.R48Z3=1;
  7634  003C88  0E01               	movlw	1
  7635  003C8A  CFE8 F111          	movff	wreg,_M+17
  7636  003C8E                     l859:
  7637                           ;main.c: 3517: }
  7638                           ;main.c: 3519: {
  7639  003C8E  0E05               	movlw	5
  7640  003C90  EC87  F073         	call	_RTS
  7641  003C94  6E00               	movwf	btemp,c
  7642  003C96  0E0F               	movlw	15
  7643  003C98  5C00               	subwf	btemp,w,c
  7644  003C9A  A0D8               	btfss	status,0,c
  7645  003C9C  0012               	return	
  7646                           ;main.c: 3521: if(M._ZMKCOCW) return;
  7647  003C9E  0101               	movlb	(_M+1) shr (0+8)
  7648  003CA0  B501               	btfsc	(_M+1)& (0+255),2,b
  7649  003CA2  0012               	return	
  7650                           ;main.c: 3522: RD2=0;
  7651  003CA4  9483               	bcf	3971,2,c	;volatile
  7652                           ;main.c: 3523: M._RUSZ_48Z3=0;
  7653  003CA6  9B01               	bcf	(_M+1)& (0+255),5,b
  7654                           ;main.c: 3524: M.R48Z3=0;
  7655  003CA8  6B11               	clrf	(_M+17)& (0+255),b
  7656                           ;main.c: 3525: }
  7657  003CAA  0012               	return	
  7658  003CAC                     l856:
  7659  003CAC  C111  FFE8         	movff	_M+17,wreg
  7660  003CB0  0A00               	xorlw	0
  7661  003CB2  E0E1               	bz	l857
  7662  003CB4  0A01               	xorlw	1
  7663  003CB6  E0EB               	bz	l859
  7664  003CB8  0012               	return	
  7665                           ;main.c: 3527: break;
  7666  003CBA                     l853:
  7667  003CBA  C237  FFE8         	movff	_DtKNF+7,wreg
  7668  003CBE  0A03               	xorlw	3
  7669  003CC0  E0D9               	bz	l854
  7670  003CC2  0012               	return	
  7671                           ;main.c: 3530: }
  7672  003CC4                     __end_of_Rusz48Z3:
  7673                           ;main.c: 3564: bit KeyRes(void)
  7674                           ;main.c: 3565: {
  7675  003CC4                     _KeyRes:
  7676  000000                     
  7677                           ;main.c: 3566: switch(M.KRS)
  7678  003CC4  D01B               	goto	l864
  7679  003CC6                     l865:
  7680                           ;main.c: 3567: {
  7681                           ;main.c: 3569: {
  7682  003CC6  0101               	movlb	_PFN shr (0+8)
  7683  003CC8  ABA0               	btfss	_PFN& (0+255),5,b
  7684  003CCA  D01E               	goto	l863
  7685                           ;main.c: 3571: {
  7686  003CCC  0E01               	movlw	1
  7687  003CCE  CFE8 F11C          	movff	wreg,_M+28
  7688                           ;main.c: 3573: StartRTS(8);
  7689  003CD2  0E08               	movlw	8
  7690  003CD4  EC6F  F073         	call	_StartRTS
  7691                           ;main.c: 3574: }
  7692  003CD8  D017               	goto	l863
  7693  003CDA                     l867:
  7694                           ;main.c: 3576: }
  7695                           ;main.c: 3578: {
  7696  003CDA  0101               	movlb	_PFN shr (0+8)
  7697  003CDC  ABA0               	btfss	_PFN& (0+255),5,b
  7698  003CDE  D00B               	goto	l868
  7699                           ;main.c: 3580: {
  7700  003CE0  0E08               	movlw	8
  7701  003CE2  EC87  F073         	call	_RTS
  7702  003CE6  6E00               	movwf	btemp,c
  7703  003CE8  0E01               	movlw	1
  7704  003CEA  5C00               	subwf	btemp,w,c
  7705  003CEC  E202               	bc	l869
  7706  003CEE  90D8               	bcf	status,0,c
  7707  003CF0  0012               	return	
  7708  003CF2                     l869:
  7709                           ;main.c: 3582: return 1;
  7710  003CF2  80D8               	bsf	status,0,c
  7711  003CF4  0012               	return	
  7712  003CF6                     l868:
  7713                           ;main.c: 3585: else
  7714  003CF6  0101               	movlb	(_M+28) shr (0+8)
  7715  003CF8  6B1C               	clrf	(_M+28)& (0+255),b
  7716                           ;main.c: 3588: }
  7717  003CFA  D006               	goto	l863
  7718  003CFC                     l864:
  7719  003CFC  C11C  FFE8         	movff	_M+28,wreg
  7720  003D00  0A00               	xorlw	0
  7721  003D02  E0E1               	bz	l865
  7722  003D04  0A01               	xorlw	1
  7723  003D06  E0E9               	bz	l867
  7724  003D08                     l863:
  7725                           ;main.c: 3591: return 0;
  7726  003D08  90D8               	bcf	status,0,c
  7727  003D0A  0012               	return	
  7728                           ;main.c: 3592: }
  7729  003D0C                     __end_of_KeyRes:
  7730                           ;main.c: 3596: void VZPauza(void)
  7731                           ;main.c: 3597: {
  7732  003D0C                     _VZPauza:
  7733  000000                     
  7734                           ;main.c: 3598: StartRTS(2);
  7735  003D0C  0E02               	movlw	2
  7736  003D0E  EC6F  F073         	call	_StartRTS
  7737  003D12                     l873:
  7738                           ;main.c: 3599: while(1)
  7739                           ;main.c: 3600: {
  7740  003D12  0004               	clrwdt		;#
  7741                           ;main.c: 3602: if(M.ERR_BTY==2)
  7742  003D14  C10E  FFE8         	movff	_M+14,wreg
  7743  003D18  0A02               	xorlw	2
  7744                           ;main.c: 3603: {
  7745  003D1A  0E02               	movlw	2
  7746  003D1C  E108               	bnz	L41
  7747  003D1E  EC87  F073         	call	_RTS
  7748  003D22  6E00               	movwf	btemp,c
  7749  003D24  0E03               	movlw	3
  7750  003D26                     L14:
  7751  003D26  5C00               	subwf	btemp,w,c
  7752  003D28  B0D8               	btfsc	status,0,c
  7753  003D2A  0012               	return	
  7754  003D2C  D7F2               	goto	l873
  7755                           ;main.c: 3605: }
  7756                           ;main.c: 3606: else
  7757  003D2E                     L41:
  7758  003D2E  EC87  F073         	call	_RTS
  7759  003D32  6E00               	movwf	btemp,c
  7760  003D34  0E02               	movlw	2
  7761  003D36  D7F7               	goto	L14
  7762                           ;main.c: 3609: }
  7763  003D38                     __end_of_VZPauza:
  7764                           ;main.c: 3615: void ErrPTG(void)
  7765                           ;main.c: 3616: {
  7766  003D38                     _ErrPTG:
  7767  000000                     
  7768                           ;main.c: 3617: BitSet2(&RSDT1.outSTAT0,1,0);
  7769  003D38  0100               	movlb	__Lparam shr (0+8)
  7770  003D3A  0E36               	movlw	low (_RSDT1+18)
  7771  003D3C  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7772  003D3E  0E01               	movlw	high (_RSDT1+18)
  7773  003D40  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7774  003D42  0E01               	movlw	1
  7775  003D44  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7776  003D46  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7777  003D48  ECFA  F076         	call	_BitSet2	;wreg free
  7778                           ;main.c: 3618: BitSet2(&RSDT1.outSTAT0,0,1);
  7779  003D4C  0100               	movlb	__Lparam shr (0+8)
  7780  003D4E  0E36               	movlw	low (_RSDT1+18)
  7781  003D50  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7782  003D52  0E01               	movlw	high (_RSDT1+18)
  7783  003D54  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7784  003D56  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7785  003D58  0E01               	movlw	1
  7786  003D5A  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7787  003D5C  ECFA  F076         	call	_BitSet2	;wreg free
  7788                           ;main.c: 3619: if(RefBHist(0))
  7789  003D60  0E00               	movlw	0
  7790  003D62  EC17  F072         	call	_RefBHist
  7791  003D66  0900               	iorlw	0
  7792  003D68  E003               	bz	l880
  7793                           ;main.c: 3620: {
  7794  003D6A  0E00               	movlw	0
  7795  003D6C  EC36  F073         	call	_RefBStat
  7796  003D70                     l880:
  7797                           ;main.c: 3622: }
  7798  003D70  EC94  F017         	call	_GrzejOFF	;wreg free
  7799                           ;main.c: 3624: VZPauza();
  7800  003D74  DFCB               	call	_VZPauza	;wreg free
  7801                           ;main.c: 3625: if(DtKNF.robg==0)
  7802  003D76  EE02  F03A         	lfsr	0,_DtKNF+10
  7803  003D7A  50EF               	movf	indf0,w,c
  7804  003D7C  E10C               	bnz	l881
  7805                           ;main.c: 3626: {
  7806  003D7E  C10E  FFE8         	movff	_M+14,wreg
  7807  003D82  0A05               	xorlw	5
  7808  003D84  E108               	bnz	l881
  7809                           ;main.c: 3628: {
  7810  003D86  0EC0               	movlw	192
  7811  003D88  0100               	movlb	__Lparam shr (0+8)
  7812  003D8A  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  7813  003D8C  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  7814  003D8E  C10E  F0FB         	movff	_M+14,?_eeprom_write+2
  7815  003D92  EC2F  F078         	call	_eeprom_write	;wreg free
  7816  003D96                     l881:
  7817                           ;main.c: 3630: }
  7818  003D96  0E00               	movlw	0
  7819  003D98  0101               	movlb	(_M+14) shr (0+8)
  7820  003D9A  650E               	cpfsgt	(_M+14)& (0+255),b
  7821  003D9C  D00B               	goto	l883
  7822  003D9E  0E04               	movlw	4
  7823  003DA0  610E               	cpfslt	(_M+14)& (0+255),b
  7824  003DA2  D008               	goto	l883
  7825  003DA4  0EC0               	movlw	192
  7826  003DA6  0100               	movlb	__Lparam shr (0+8)
  7827  003DA8  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  7828  003DAA  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  7829  003DAC  C10E  F0FB         	movff	_M+14,?_eeprom_write+2
  7830  003DB0  EC2F  F078         	call	_eeprom_write	;wreg free
  7831  003DB4                     l883:
  7832                           ;main.c: 3633: M._RUSZ_POMPE=0;
  7833  003DB4  0101               	movlb	(_M+2) shr (0+8)
  7834  003DB6  9702               	bcf	(_M+2)& (0+255),3,b
  7835                           ;main.c: 3634: M._ROZRUCH=0;
  7836  003DB8  9701               	bcf	(_M+1)& (0+255),3,b
  7837                           ;main.c: 3635: M._MODULUJ=0;
  7838  003DBA  9D02               	bcf	(_M+2)& (0+255),6,b
  7839                           ;main.c: 3636: WritePWM(0);
  7840  003DBC  0E00               	movlw	0
  7841  003DBE  EC9C  F06A         	call	_WritePWM
  7842                           ;main.c: 3637: if(!M._WYLACZ)
  7843  003DC2  0101               	movlb	(_M+1) shr (0+8)
  7844  003DC4  B301               	btfsc	(_M+1)& (0+255),1,b
  7845  003DC6  D013               	goto	l884
  7846                           ;main.c: 3638: {
  7847  003DC8  6B14               	clrf	(_M+20)& (0+255),b
  7848                           ;main.c: 3640: switch(DtKNF.tpkt)
  7849  003DCA  D005               	goto	l886
  7850  003DCC                     l888:
  7851                           ;main.c: 3643: case 2:
  7852                           ;main.c: 3646: break;
  7853  003DCC                     l891:
  7854                           ;main.c: 3649: case 3:
  7855  003DCC  A483               	btfss	3971,2,c	;volatile
  7856  003DCE  D00F               	goto	l884
  7857  003DD0                     u12600:
  7858  003DD0  0101               	movlb	(_M+1) shr (0+8)
  7859  003DD2  8301               	bsf	(_M+1)& (0+255),1,b
  7860                           ;main.c: 3669: }
  7861  003DD4  D00C               	goto	l884
  7862  003DD6                     l886:
  7863  003DD6  C237  FFE8         	movff	_DtKNF+7,wreg
  7864  003DDA  0A00               	xorlw	0
  7865  003DDC  E0F7               	bz	l891
  7866  003DDE  0A01               	xorlw	1
  7867  003DE0  E0F5               	bz	l888
  7868  003DE2  0A03               	xorlw	3
  7869  003DE4  E0F3               	bz	l888
  7870  003DE6  0A01               	xorlw	1
  7871  003DE8  E0F1               	bz	l891
  7872                           ;main.c: 3658: break;
  7873                           ;main.c: 3659: }
  7874                           ;main.c: 3661: {
  7875  003DEA  B483               	btfsc	3971,2,c	;volatile
  7876  003DEC  D7F1               	goto	u12600
  7877  003DEE                     l884:
  7878                           ;main.c: 3671: }
  7879  003DEE  0101               	movlb	(_M+4) shr (0+8)
  7880  003DF0  BB04               	btfsc	(_M+4)& (0+255),5,b
  7881  003DF2  A683               	btfss	3971,3,c	;volatile
  7882  003DF4  D002               	goto	l895
  7883  003DF6  0101               	movlb	(_M+1) shr (0+8)
  7884  003DF8  8F01               	bsf	(_M+1)& (0+255),7,b
  7885  003DFA                     l895:
  7886                           ;main.c: 3673: M._RUSZ_PWR=0;
  7887  003DFA  0101               	movlb	(_M+1) shr (0+8)
  7888  003DFC  9D01               	bcf	(_M+1)& (0+255),6,b
  7889                           ;main.c: 3674: M._SYNCH_PGD=0;
  7890  003DFE  9108               	bcf	(_M+8)& (0+255),0,b
  7891                           ;main.c: 3675: M.HVZ=0;
  7892  003E00  6B1D               	clrf	(_M+29)& (0+255),b
  7893                           ;main.c: 3676: M.KRS=0;
  7894  003E02  6B1C               	clrf	(_M+28)& (0+255),b
  7895  003E04                     l897:
  7896                           ;main.c: 3679: while(1)
  7897                           ;main.c: 3680: {
  7898  003E04  0004               	clrwdt		;#
  7899                           ;main.c: 3682: BitSet2(&RSDT1.outSTAT0,1,0);
  7900  003E06  0100               	movlb	__Lparam shr (0+8)
  7901  003E08  0E36               	movlw	low (_RSDT1+18)
  7902  003E0A  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7903  003E0C  0E01               	movlw	high (_RSDT1+18)
  7904  003E0E  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7905  003E10  0E01               	movlw	1
  7906  003E12  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7907  003E14  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7908  003E16  ECFA  F076         	call	_BitSet2	;wreg free
  7909                           ;main.c: 3683: BitSet2(&RSDT1.outSTAT0,0,1);
  7910  003E1A  0100               	movlb	__Lparam shr (0+8)
  7911  003E1C  0E36               	movlw	low (_RSDT1+18)
  7912  003E1E  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7913  003E20  0E01               	movlw	high (_RSDT1+18)
  7914  003E22  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7915  003E24  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7916  003E26  0E01               	movlw	1
  7917  003E28  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7918  003E2A  ECFA  F076         	call	_BitSet2	;wreg free
  7919                           ;main.c: 3684: BitSet2(&RSDT1.outSTAT1,3,1);
  7920  003E2E  0100               	movlb	__Lparam shr (0+8)
  7921  003E30  0E37               	movlw	low (_RSDT1+19)
  7922  003E32  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7923  003E34  0E01               	movlw	high (_RSDT1+19)
  7924  003E36  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7925  003E38  0E03               	movlw	3
  7926  003E3A  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7927  003E3C  0E01               	movlw	1
  7928  003E3E  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7929  003E40  ECFA  F076         	call	_BitSet2	;wreg free
  7930                           ;main.c: 3685: if(RTS(10)>=3)
  7931  003E44  0E0A               	movlw	10
  7932  003E46  EC87  F073         	call	_RTS
  7933  003E4A  6E00               	movwf	btemp,c
  7934  003E4C  0E03               	movlw	3
  7935  003E4E  5C00               	subwf	btemp,w,c
  7936  003E50  E303               	bnc	l899
  7937                           ;main.c: 3686: {
  7938  003E52  0101               	movlb	(_M+4) shr (0+8)
  7939  003E54  9904               	bcf	(_M+4)& (0+255),4,b
  7940                           ;main.c: 3688: M._RS_START=0;
  7941  003E56  9704               	bcf	(_M+4)& (0+255),3,b
  7942  003E58                     l899:
  7943                           ;main.c: 3689: }
  7944  003E58  EC92  F05B         	call	_ReceptDataLCD	;wreg free
  7945                           ;main.c: 3692: PomiarPCO();
  7946  003E5C  ECC9  F041         	call	_PomiarPCO	;wreg free
  7947                           ;main.c: 3693: PomiarPCW();
  7948  003E60  EC81  F042         	call	_PomiarPCW	;wreg free
  7949                           ;main.c: 3694: PomiarPFN();
  7950  003E64  EC00  F043         	call	_PomiarPFN	;wreg free
  7951                           ;main.c: 3695: PomiarCO();
  7952  003E68  EC95  F03A         	call	_PomiarCO	;wreg free
  7953                           ;main.c: 3696: PomiarCW();
  7954  003E6C  EC8C  F03D         	call	_PomiarCW	;wreg free
  7955                           ;main.c: 3697: PomiarZW();
  7956  003E70  EC97  F03E         	call	_PomiarZW	;wreg free
  7957                           ;main.c: 3698: FiltrPomiarowyCOCW();
  7958  003E74  EC22  F03A         	call	_FiltrPomiarowyCOCW	;wreg free
  7959                           ;main.c: 3699: PomiarCS();
  7960  003E78  EC01  F044         	call	_PomiarCS	;wreg free
  7961                           ;main.c: 3700: PomiarIN();
  7962  003E7C  EC71  F03D         	call	_PomiarIN	;wreg free
  7963                           ;main.c: 3702: SetTrbPGD();
  7964  003E80  ECD1  F03E         	call	_SetTrbPGD	;wreg free
  7965                           ;main.c: 3705: Proba48();
  7966  003E84  DE4C               	call	_Proba48	;wreg free
  7967                           ;main.c: 3706: Proba48Z3();
  7968  003E86  DED4               	call	_Proba48Z3	;wreg free
  7969                           ;main.c: 3708: RefLCDData();
  7970  003E88  EC5C  F00A         	call	_RefLCDData	;wreg free
  7971                           ;main.c: 3710: switch(DtKNF.tpkt)
  7972  003E8C  D0B5               	goto	l901
  7973  003E8E                     l903:
  7974                           ;main.c: 3713: case 2:
  7975  003E8E  0101               	movlb	(_M+1) shr (0+8)
  7976  003E90  AD01               	btfss	(_M+1)& (0+255),6,b
  7977  003E92  B501               	btfsc	(_M+1)& (0+255),2,b
  7978  003E94  D007               	goto	l904
  7979  003E96  0E0D               	movlw	13
  7980  003E98  EC4C  F06F         	call	_RdPrt
  7981  003E9C  E303               	bnc	l904
  7982  003E9E  ECA7  F013         	call	_ToObiegCO	;wreg free
  7983  003EA2  D007               	goto	l905
  7984  003EA4                     l904:
  7985                           ;main.c: 3717: else
  7986  003EA4  0101               	movlb	(_M+1) shr (0+8)
  7987  003EA6  A501               	btfss	(_M+1)& (0+255),2,b
  7988  003EA8  B301               	btfsc	(_M+1)& (0+255),1,b
  7989  003EAA  D003               	goto	l905
  7990  003EAC  A901               	btfss	(_M+1)& (0+255),4,b
  7991  003EAE  ECCE  F013         	call	_ToObiegCW	;wreg free
  7992  003EB2                     l905:
  7993                           ;main.c: 3720: if(!M._WYLACZ&&RD2)
  7994  003EB2  0101               	movlb	(_M+1) shr (0+8)
  7995  003EB4  A301               	btfss	(_M+1)& (0+255),1,b
  7996  003EB6  A483               	btfss	3971,2,c	;volatile
  7997  003EB8  D0AD               	goto	l900
  7998                           ;main.c: 3721: {
  7999  003EBA  8301               	bsf	(_M+1)& (0+255),1,b
  8000                           ;main.c: 3723: }
  8001  003EBC  D0AB               	goto	l900
  8002  003EBE                     l908:
  8003                           ;main.c: 3725: }
  8004                           ;main.c: 3727: {
  8005  003EBE  0101               	movlb	(_M+1) shr (0+8)
  8006  003EC0  B501               	btfsc	(_M+1)& (0+255),2,b
  8007  003EC2  D007               	goto	l909
  8008  003EC4  0E0D               	movlw	13
  8009  003EC6  EC4C  F06F         	call	_RdPrt
  8010  003ECA  E303               	bnc	l909
  8011  003ECC  ECA7  F013         	call	_ToObiegCO	;wreg free
  8012  003ED0  D00C               	goto	l910
  8013  003ED2                     l909:
  8014                           ;main.c: 3730: else
  8015  003ED2  0101               	movlb	(_M+1) shr (0+8)
  8016  003ED4  A501               	btfss	(_M+1)& (0+255),2,b
  8017  003ED6  B301               	btfsc	(_M+1)& (0+255),1,b
  8018  003ED8  D008               	goto	l910
  8019  003EDA  B901               	btfsc	(_M+1)& (0+255),4,b
  8020  003EDC  D006               	goto	l910
  8021  003EDE  A483               	btfss	3971,2,c	;volatile
  8022  003EE0  D002               	goto	u12890
  8023  003EE2  0101               	movlb	(_M+1) shr (0+8)
  8024  003EE4  BB01               	btfsc	(_M+1)& (0+255),5,b
  8025  003EE6                     u12890:
  8026  003EE6  ECCE  F013         	call	_ToObiegCW	;wreg free
  8027  003EEA                     l910:
  8028                           ;main.c: 3733: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!RD
      +                          2&&!M._WYLACZ&&!M._RUSZ_48&&!M._RUSZ_48Z3)
  8029  003EEA  0101               	movlb	(_M+1) shr (0+8)
  8030  003EEC  AD01               	btfss	(_M+1)& (0+255),6,b
  8031  003EEE  B501               	btfsc	(_M+1)& (0+255),2,b
  8032  003EF0  D091               	goto	l900
  8033  003EF2  B483               	btfsc	3971,2,c	;volatile
  8034  003EF4  D08F               	goto	l900
  8035  003EF6  0101               	movlb	(_M+1) shr (0+8)
  8036  003EF8  B301               	btfsc	(_M+1)& (0+255),1,b
  8037  003EFA  D08C               	goto	l900
  8038  003EFC  0101               	movlb	(_M+1) shr (0+8)
  8039  003EFE  B901               	btfsc	(_M+1)& (0+255),4,b
  8040  003F00  D089               	goto	l900
  8041  003F02  0101               	movlb	(_M+1) shr (0+8)
  8042  003F04  BB01               	btfsc	(_M+1)& (0+255),5,b
  8043  003F06  D086               	goto	l900
  8044                           ;main.c: 3734: {
  8045  003F08  0101               	movlb	(_M+5) shr (0+8)
  8046  003F0A  B705               	btfsc	(_M+5)& (0+255),3,b
  8047  003F0C  D083               	goto	l900
  8048  003F0E  0E0D               	movlw	13
  8049  003F10  EC4C  F06F         	call	_RdPrt
  8050  003F14  D06C               	goto	L20
  8051                           ;main.c: 3736: {
  8052                           ;main.c: 3738: RD2=1;
  8053                           ;main.c: 3739: }
  8054  003F16                     l914:
  8055                           ;main.c: 3742: }
  8056                           ;main.c: 3744: {
  8057  003F16  EE02  F037         	lfsr	0,_DtKNF+7
  8058  003F1A  50EF               	movf	indf0,w,c
  8059  003F1C  E10A               	bnz	l915
  8060  003F1E  0101               	movlb	(_DtCW+1) shr (0+8)
  8061  003F20  A7A8               	btfss	(_DtCW+1)& (0+255),3,b
  8062  003F22  D007               	goto	l915
  8063                           ;main.c: 3747: {
  8064  003F24  0101               	movlb	(_M+1) shr (0+8)
  8065  003F26  A501               	btfss	(_M+1)& (0+255),2,b
  8066                           ;main.c: 3749: {
  8067  003F28  BB01               	btfsc	(_M+1)& (0+255),5,b
  8068  003F2A  D021               	goto	l918
  8069  003F2C  ECA7  F013         	call	_ToObiegCO	;wreg free
  8070                           ;main.c: 3751: }
  8071  003F30  D01E               	goto	l918
  8072  003F32                     l915:
  8073                           ;main.c: 3753: else
  8074  003F32  0101               	movlb	(_M+1) shr (0+8)
  8075  003F34  B501               	btfsc	(_M+1)& (0+255),2,b
  8076  003F36  D007               	goto	l919
  8077  003F38  0E0D               	movlw	13
  8078  003F3A  EC4C  F06F         	call	_RdPrt
  8079  003F3E  E303               	bnc	l919
  8080  003F40  ECA7  F013         	call	_ToObiegCO	;wreg free
  8081  003F44  D014               	goto	l918
  8082  003F46                     l919:
  8083                           ;main.c: 3756: else
  8084  003F46  0101               	movlb	(_M+1) shr (0+8)
  8085  003F48  B501               	btfsc	(_M+1)& (0+255),2,b
  8086  003F4A  D007               	goto	l921
  8087  003F4C  0E0A               	movlw	10
  8088  003F4E  EC4C  F06F         	call	_RdPrt
  8089  003F52  E303               	bnc	l921
  8090  003F54  ECCE  F013         	call	_ToObiegCW	;wreg free
  8091  003F58  D00A               	goto	l918
  8092  003F5A                     l921:
  8093                           ;main.c: 3758: else
  8094  003F5A  0101               	movlb	(_M+1) shr (0+8)
  8095  003F5C  A501               	btfss	(_M+1)& (0+255),2,b
  8096  003F5E  B483               	btfsc	3971,2,c	;volatile
  8097  003F60  D006               	goto	l918
  8098  003F62  B301               	btfsc	(_M+1)& (0+255),1,b
  8099  003F64  D004               	goto	l918
  8100  003F66  0101               	movlb	(_M+1) shr (0+8)
  8101  003F68  A901               	btfss	(_M+1)& (0+255),4,b
  8102  003F6A  ECCE  F013         	call	_ToObiegCW	;wreg free
  8103  003F6E                     l918:
  8104                           ;main.c: 3760: }
  8105  003F6E  0101               	movlb	(_M+1) shr (0+8)
  8106  003F70  AD01               	btfss	(_M+1)& (0+255),6,b
  8107  003F72  B501               	btfsc	(_M+1)& (0+255),2,b
  8108  003F74  D04F               	goto	l900
  8109  003F76  B483               	btfsc	3971,2,c	;volatile
  8110  003F78  D04D               	goto	l900
  8111  003F7A  0101               	movlb	(_M+1) shr (0+8)
  8112  003F7C  B301               	btfsc	(_M+1)& (0+255),1,b
  8113  003F7E  D04A               	goto	l900
  8114  003F80  0101               	movlb	(_M+1) shr (0+8)
  8115  003F82  B901               	btfsc	(_M+1)& (0+255),4,b
  8116  003F84  D047               	goto	l900
  8117                           ;main.c: 3763: {
  8118  003F86  0101               	movlb	(_M+5) shr (0+8)
  8119  003F88  B705               	btfsc	(_M+5)& (0+255),3,b
  8120  003F8A  D004               	goto	u13331
  8121  003F8C  0E0D               	movlw	13
  8122  003F8E  EC4C  F06F         	call	_RdPrt
  8123  003F92  E22E               	bc	u13590
  8124  003F94                     u13331:
  8125  003F94  0101               	movlb	(_M+5) shr (0+8)
  8126  003F96  A705               	btfss	(_M+5)& (0+255),3,b
  8127  003F98  D03D               	goto	l900
  8128  003F9A  0E0A               	movlw	10
  8129  003F9C  EC4C  F06F         	call	_RdPrt
  8130  003FA0  D026               	goto	L20
  8131                           ;main.c: 3765: {
  8132                           ;main.c: 3767: RD2=1;
  8133                           ;main.c: 3768: }
  8134  003FA2                     l926:
  8135                           ;main.c: 3771: }
  8136                           ;main.c: 3773: {
  8137  003FA2  0101               	movlb	(_M+1) shr (0+8)
  8138  003FA4  B501               	btfsc	(_M+1)& (0+255),2,b
  8139  003FA6  D007               	goto	l927
  8140  003FA8  0E0D               	movlw	13
  8141  003FAA  EC4C  F06F         	call	_RdPrt
  8142  003FAE  E303               	bnc	l927
  8143  003FB0  ECA7  F013         	call	_ToObiegCO	;wreg free
  8144  003FB4  D00A               	goto	l928
  8145  003FB6                     l927:
  8146                           ;main.c: 3776: else
  8147  003FB6  0101               	movlb	(_M+1) shr (0+8)
  8148  003FB8  A501               	btfss	(_M+1)& (0+255),2,b
  8149  003FBA  B483               	btfsc	3971,2,c	;volatile
  8150  003FBC  D006               	goto	l928
  8151  003FBE  B301               	btfsc	(_M+1)& (0+255),1,b
  8152  003FC0  D004               	goto	l928
  8153  003FC2  0101               	movlb	(_M+1) shr (0+8)
  8154  003FC4  A901               	btfss	(_M+1)& (0+255),4,b
  8155  003FC6  ECCE  F013         	call	_ToObiegCW	;wreg free
  8156  003FCA                     l928:
  8157                           ;main.c: 3779: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!RD
      +                          2&&!M._WYLACZ&&!M._RUSZ_48)
  8158  003FCA  0101               	movlb	(_M+1) shr (0+8)
  8159  003FCC  AD01               	btfss	(_M+1)& (0+255),6,b
  8160  003FCE  B501               	btfsc	(_M+1)& (0+255),2,b
  8161  003FD0  D021               	goto	l900
  8162  003FD2  B483               	btfsc	3971,2,c	;volatile
  8163  003FD4  D01F               	goto	l900
  8164  003FD6  0101               	movlb	(_M+1) shr (0+8)
  8165  003FD8  B301               	btfsc	(_M+1)& (0+255),1,b
  8166  003FDA  D01C               	goto	l900
  8167  003FDC  0101               	movlb	(_M+1) shr (0+8)
  8168  003FDE  B901               	btfsc	(_M+1)& (0+255),4,b
  8169  003FE0  D019               	goto	l900
  8170                           ;main.c: 3780: {
  8171  003FE2  0101               	movlb	(_M+5) shr (0+8)
  8172  003FE4  B705               	btfsc	(_M+5)& (0+255),3,b
  8173  003FE6  D016               	goto	l900
  8174  003FE8  0E0D               	movlw	13
  8175  003FEA  EC4C  F06F         	call	_RdPrt
  8176  003FEE                     L20:
  8177  003FEE  E312               	bnc	l900
  8178  003FF0                     u13590:
  8179                           ;main.c: 3782: {
  8180  003FF0  0101               	movlb	(_M+1) shr (0+8)
  8181  003FF2  8301               	bsf	(_M+1)& (0+255),1,b
  8182                           ;main.c: 3784: RD2=1;
  8183  003FF4  8483               	bsf	3971,2,c	;volatile
  8184                           ;main.c: 3785: }
  8185  003FF6  D00E               	goto	l900
  8186  003FF8                     l901:
  8187  003FF8  C237  FFE8         	movff	_DtKNF+7,wreg
  8188  003FFC  0A00               	xorlw	0
  8189  003FFE  E08B               	bz	l914
  8190  004000  0A01               	xorlw	1
  8191  004002  E101 D744          	bz	l903
  8192  004006  0A03               	xorlw	3
  8193  004008  E101 D741          	bz	l903
  8194  00400C  0A01               	xorlw	1
  8195  00400E  E101 D756          	bz	l908
  8196  004012  D7C7               	goto	l926
  8197  004014                     l900:
  8198                           ;main.c: 3791: if(M._ZMKCOCW) ZmienKCOKCW();
  8199  004014  0101               	movlb	(_M+1) shr (0+8)
  8200  004016  B501               	btfsc	(_M+1)& (0+255),2,b
  8201  004018  ECBA  F01B         	call	_ZmienKCOKCW	;wreg free
  8202                           ;main.c: 3792: if(M._WYLACZ) Wylacz();
  8203  00401C  0101               	movlb	(_M+1) shr (0+8)
  8204  00401E  B301               	btfsc	(_M+1)& (0+255),1,b
  8205  004020  EC95  F019         	call	_Wylacz	;wreg free
  8206                           ;main.c: 3793: if(M._VWYBIEG) VWybieg();
  8207  004024  0101               	movlb	(_M+1) shr (0+8)
  8208  004026  BF01               	btfsc	(_M+1)& (0+255),7,b
  8209  004028  EC03  F01B         	call	_VWybieg	;wreg free
  8210                           ;main.c: 3794: if(M._RUSZ_48) Rusz48();
  8211  00402C  0101               	movlb	(_M+1) shr (0+8)
  8212  00402E  B901               	btfsc	(_M+1)& (0+255),4,b
  8213  004030  DD8B               	call	_Rusz48	;wreg free
  8214                           ;main.c: 3795: if(M._RUSZ_48Z3) Rusz48Z3();
  8215  004032  0101               	movlb	(_M+1) shr (0+8)
  8216  004034  BB01               	btfsc	(_M+1)& (0+255),5,b
  8217  004036  DE1D               	call	_Rusz48Z3	;wreg free
  8218                           ;main.c: 3798: if(RD2)
  8219  004038  A483               	btfss	3971,2,c	;volatile
  8220  00403A  D004               	goto	l937
  8221                           ;main.c: 3799: {
  8222  00403C  0E63               	movlw	99
  8223  00403E  CFE8 F02D          	movff	wreg,_PMP+2
  8224                           ;main.c: 3801: }
  8225  004042  D002               	goto	l938
  8226  004044                     l937:
  8227                           ;main.c: 3802: else
  8228  004044  0100               	movlb	(_PMP+2) shr (0+8)
  8229  004046  6B2D               	clrf	(_PMP+2)& (0+255),b
  8230  004048                     l938:
  8231                           ;main.c: 3805: }
  8232  004048  C02D  FFE8         	movff	_PMP+2,wreg
  8233  00404C  EC61  F062         	call	_ProcToPmpPwm
  8234  004050  ECA5  F06A         	call	_WritePWM2
  8235                           ;main.c: 3809: if(KeyRes())
  8236  004054  DE37               	call	_KeyRes	;wreg free
  8237  004056  E201 D6D5          	bnc	l897
  8238                           ;main.c: 3810: {
  8239  00405A  9683               	bcf	3971,3,c	;volatile
  8240                           ;main.c: 3812: RD2=0;
  8241  00405C  9483               	bcf	3971,2,c	;volatile
  8242                           ;main.c: 3813: ToReset();
  8243  00405E  D801               	call	_ToReset	;wreg free
  8244  004060  D6D1               	goto	l897
  8245  004062                     __end_of_ErrPTG:
  8246                           ;main.c: 3818: void ToReset(void)
  8247                           ;main.c: 3819: {
  8248  004062                     _ToReset:
  8249  000000                     
  8250                           ;main.c: 3820: RD3=0;
  8251  004062  9683               	bcf	3971,3,c	;volatile
  8252                           ;main.c: 3821: RD2=0;
  8253  004064  9483               	bcf	3971,2,c	;volatile
  8254                           ;main.c: 3822: EndErr();
  8255  004066  EC8C  F076         	call	_EndErr	;wreg free
  8256                           ;main.c: 3823: BitSet2(&RSDT1.outSTAT0,0,0);
  8257  00406A  0100               	movlb	__Lparam shr (0+8)
  8258  00406C  0E36               	movlw	low (_RSDT1+18)
  8259  00406E  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  8260  004070  0E01               	movlw	high (_RSDT1+18)
  8261  004072  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  8262  004074  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  8263  004076  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  8264  004078  ECFA  F076         	call	_BitSet2	;wreg free
  8265                           ;main.c: 3824: BitSet2(&RSDT1.outSTAT0,1,0);
  8266  00407C  0100               	movlb	__Lparam shr (0+8)
  8267  00407E  0E36               	movlw	low (_RSDT1+18)
  8268  004080  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  8269  004082  0E01               	movlw	high (_RSDT1+18)
  8270  004084  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  8271  004086  0E01               	movlw	1
  8272  004088  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  8273  00408A  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  8274  00408C  ECFA  F076         	call	_BitSet2	;wreg free
  8275                           ;main.c: 3825: eeprom_write(0x00C0,0x00);
  8276  004090  0EC0               	movlw	192
  8277  004092  0100               	movlb	__Lparam shr (0+8)
  8278  004094  6FF9               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  8279  004096  6BFA               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  8280  004098  6BFB               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  8281  00409A  EC2F  F078         	call	_eeprom_write	;wreg free
  8282                           ;main.c: 3826: StartRTS(2);
  8283  00409E  0E02               	movlw	2
  8284  0040A0  EC6F  F073         	call	_StartRTS
  8285                           ;main.c: 3827: while(RTS(2)<1)
  8286  0040A4                     l941:
  8287  0040A4  0E02               	movlw	2
  8288  0040A6  EC87  F073         	call	_RTS
  8289  0040AA  6E00               	movwf	btemp,c
  8290  0040AC  0E01               	movlw	1
  8291  0040AE  5C00               	subwf	btemp,w,c
  8292  0040B0  E204               	bc	l944
  8293                           ;main.c: 3828: {
  8294  0040B2  0004               	clrwdt		;#
  8295                           ;main.c: 3830: ReceptDataLCD();
  8296  0040B4  EC92  F05B         	call	_ReceptDataLCD	;wreg free
  8297  0040B8  D7F5               	goto	l941
  8298                           ;main.c: 3831: }
  8299  0040BA                     l944:
  8300  0040BA  D7FF               	goto	l944
  8301  0040BC                     __end_of_ToReset:
  8302                           ;main.c: 3836: void InitGlobal(void)
  8303                           ;main.c: 3837: {
  8304  0040BC                     _InitGlobal:
  8305  000000                     
  8306                           ;main.c: 3839: IPEN=1;
  8307  0040BC  8ED0               	bsf	4048,7,c
  8308                           ;main.c: 3841: GIEH=1;
  8309  0040BE  8EF2               	bsf	intcon,7,c
  8310                           ;main.c: 3842: GIEL=1;
  8311  0040C0  8CF2               	bsf	intcon,6,c
  8312                           ;main.c: 3843: }
  8313  0040C2  0012               	return	
  8314  0040C4                     __end_of_InitGlobal:
  8315  000000                     
  8316  000000                     
  8317  000000                     
  8318  000000                     
  8319  000000                     
  8320  000000                     
  8321  000000                     
  8322  000000                     
  8323  000000                     
  8324  000000                     
  8325  000000                     
  8326  000000                     
  8327  000000                     
  8328  000000                     
  8329  000000                     
  8330  000000                     
  8331  000000                     
  8332  000000                     
  8333  000000                     
  8334  000000                     
  8335  000000                     
  8336  000000                     
  8337  000000                     
  8338  000000                     
  8339  000000                     
  8340  000000                     
  8341  000000                     
  8342  000000                     
  8343  000000                     
  8344  000000                     
  8345  000000                     
  8346  000000                     
  8347  000000                     
  8348  000000                     
  8349  000000                     
  8350  000000                     
  8351  000000                     
  8352  000000                     
  8353  000000                     
  8354  000000                     
  8355  000000                     
  8356  000000                     
  8357  000000                     
  8358  000000                     
  8359  000000                     
  8360  000000                     
  8361  000000                     
  8362  000000                     
  8363  000000                     
  8364  000000                     
  8365  000000                     
  8366  000000                     
  8367  000000                     
  8368  000000                     
  8369  000000                     
  8370  000000                     
  8371  000000                     
  8372  000000                     
  8373  000000                     
  8374  000000                     
  8375  000000                     
  8376  000000                     
  8377  000000                     
  8378  000000                     
  8379  000000                     
  8380  000000                     
  8381  000000                     
  8382  000000                     
  8383  000000                     
  8384  000000                     
  8385  000000                     
  8386  000000                     
  8387  000000                     
  8388  000000                     
  8389  000000                     
  8390  000000                     
  8391  000000                     
  8392  000000                     
  8393  000000                     
  8394  000000                     
  8395  000000                     
  8396  000000                     
  8397  000000                     
  8398  000000                     
  8399  000000                     
  8400  000000                     
  8401  000000                     
  8402  000000                     
  8403  000000                     
  8404  000000                     
  8405  000000                     
  8406  000000                     
  8407  000000                     
  8408  000000                     
  8409  000000                     
  8410  000000                     
  8411  000000                     
  8412  000000                     
  8413  000000                     
  8414  000000                     
  8415  000000                     
  8416  000000                     
  8417  000000                     
  8418  000000                     
  8419  000000                     
  8420  000000                     
  8421  000000                     
  8422  000000                     
  8423  000000                     
  8424  000000                     
  8425  000000                     
  8426  000000                     
  8427  000000                     
  8428  000000                     
  8429  000000                     
  8430  000000                     
  8431  000000                     
  8432  000000                     
  8433  000000                     
  8434  000000                     
  8435  000000                     
  8436  000000                     
  8437  000000                     
  8438  000000                     
  8439  000000                     
  8440  000000                     
  8441  000000                     
  8442  000000                     
  8443  000000                     
  8444  000000                     
  8445  000000                     
  8446  000000                     
  8447  000000                     
  8448  000000                     
  8449  000000                     
  8450  000000                     
  8451  000000                     
  8452  000000                     
  8453  000000                     
  8454  000000                     
  8455  000000                     
  8456  000000                     
  8457  000000                     
  8458  000000                     
  8459  000000                     
  8460  000000                     
  8461  000000                     
  8462  000000                     
  8463  000000                     
  8464  000000                     
  8465  000000                     
  8466  000000                     
  8467  000000                     
  8468  000000                     
  8469  000000                     
  8470  000000                     
  8471  000000                     
  8472  000000                     
  8473  000000                     
  8474  000000                     
  8475  000000                     
  8476  000000                     
  8477  000000                     
  8478  000000                     
  8479  000000                     
  8480  000000                     
  8481  000000                     
  8482  000000                     
  8483  000000                     
  8484  000000                     
  8485  000000                     
  8486  000000                     
  8487  000000                     
  8488  000000                     
  8489  000000                     
  8490  000000                     
  8491  000000                     
  8492  000000                     
  8493  000000                     
  8494  000000                     
  8495  000000                     
  8496  000000                     
  8497  000000                     
  8498  000000                     
  8499  000000                     
  8500  000000                     
  8501  000000                     
  8502  000000                     
  8503  000000                     
  8504  000000                     
  8505  000000                     
  8506  000000                     
  8507  000000                     
  8508  000000                     
  8509  000000                     
  8510  000000                     
  8511  000000                     
  8512  000000                     
  8513  000000                     
  8514  000000                     
  8515  000000                     
  8516  000000                     
  8517  000000                     
  8518  000000                     
  8519  000000                     
  8520  000000                     
  8521  000000                     
  8522  000000                     
  8523  000000                     
  8524  000000                     
  8525  000000                     
  8526  000000                     
  8527  000000                     
  8528  000000                     
  8529  000000                     
  8530  000000                     
  8531  000000                     
  8532  000000                     
  8533  000000                     
  8534  000000                     
  8535  000000                     
  8536  000000                     
  8537  000000                     
  8538  000000                     
  8539  000000                     
  8540  000000                     
  8541  000000                     
  8542  000000                     
  8543  000000                     
  8544  000000                     
  8545  000000                     
  8546  000000                     
  8547  000000                     
  8548  000000                     
  8549  000000                     
  8550  000000                     
  8551  000000                     
  8552  000000                     
  8553  000000                     
  8554  000000                     
  8555  000000                     
  8556  000000                     
  8557  000000                     
  8558  000000                     
  8559  000000                     
  8560  000000                     
  8561  000000                     
  8562  000000                     
  8563  000000                     
  8564  000000                     
  8565  000000                     
  8566  000000                     
  8567  000000                     
  8568  000000                     
  8569  000000                     
  8570  000000                     
  8571  000000                     
  8572  000000                     
  8573  000000                     
  8574  000000                     
  8575  000000                     
  8576  000000                     
  8577  000000                     
  8578  000000                     
  8579  000000                     
  8580  000000                     
  8581  000000                     
  8582  000000                     
  8583  000000                     
  8584  000000                     
  8585  000000                     
  8586  000000                     
  8587  000000                     
  8588  000000                     
  8589  000000                     
  8590  000000                     
  8591  000000                     
  8592  000000                     
  8593  000000                     
  8594  000000                     
  8595  000000                     
  8596  000000                     
  8597  000000                     
  8598  000000                     
  8599  000000                     
  8600  000000                     
  8601  000000                     
  8602  000000                     
  8603  000000                     
  8604  000000                     
  8605  000000                     
  8606  000000                     
  8607  000000                     
  8608  000000                     
  8609  000000                     
  8610  000000                     
  8611  000000                     
  8612  000000                     
  8613  000000                     
  8614  000000                     
  8615  000000                     
  8616  000000                     
  8617  000000                     
  8618  000000                     
  8619  000000                     
  8620  000000                     
  8621  000000                     
  8622  000000                     
  8623  000000                     
  8624  000000                     
  8625  000000                     
  8626  000000                     
  8627  000000                     
  8628  000000                     
  8629  000000                     
  8630  000000                     
  8631  000000                     
  8632  000000                     
  8633  000000                     
  8634  000000                     
  8635  000000                     
  8636  000000                     
  8637  000000                     
  8638  000000                     
  8639  000000                     
  8640  000000                     
  8641  000000                     
  8642  000000                     
  8643  000000                     
  8644  000000                     
  8645  000000                     
  8646  000000                     
  8647  000000                     
  8648  000000                     
  8649  000000                     
  8650  000000                     
  8651  000000                     
  8652  000000                     
  8653  000000                     
  8654  000000                     
  8655  000000                     
  8656  000000                     
  8657  000000                     
  8658  000000                     
  8659  000000                     
  8660  000000                     
  8661  000000                     
  8662  000000                     
  8663  000000                     
  8664  000000                     
  8665  000000                     
  8666  000000                     
  8667  000000                     
  8668  000000                     
  8669  000000                     
  8670  000000                     
  8671  000000                     
  8672  000000                     
  8673  000000                     
  8674  000000                     
  8675  000000                     
  8676  000000                     
  8677  000000                     
  8678  000000                     
  8679  000000                     
  8680  000000                     
  8681  000000                     
  8682  000000                     
  8683  000000                     
  8684  000000                     
  8685  000000                     
  8686  000000                     
  8687  000000                     
  8688  000000                     
  8689  000000                     
  8690  000000                     
  8691  000000                     
  8692  000000                     
  8693  000000                     
  8694  000000                     
  8695  000000                     
  8696  000000                     
  8697  000000                     
  8698  000000                     
  8699  000000                     
  8700  000000                     
  8701  000000                     
  8702  000000                     
  8703  000000                     
  8704  000000                     
  8705  000000                     
  8706  000000                     
  8707  000000                     
  8708  000000                     
  8709  000000                     
  8710  000000                     
  8711  000000                     
  8712  000000                     
  8713  000000                     
  8714  000000                     
  8715  000000                     
  8716  000000                     
  8717  000000                     
  8718  000000                     
  8719  000000                     
  8720  000000                     
  8721  000000                     
  8722  000000                     
  8723  000000                     
  8724  000000                     
  8725  000000                     
  8726  000000                     
  8727  000000                     
  8728  000000                     
  8729  000000                     
  8730  000000                     
  8731  000000                     
  8732  000000                     
  8733  000000                     
  8734  000000                     
  8735  000000                     
  8736  000000                     
  8737  000000                     
  8738  000000                     
  8739  000000                     
  8740  000000                     
  8741  000000                     
  8742  000000                     
  8743  000000                     
  8744  000000                     
  8745  000000                     
  8746  000000                     
  8747  000000                     
  8748  000000                     
  8749  000000                     
  8750  000000                     
  8751  000000                     
  8752  000000                     
  8753  000000                     
  8754  000000                     
  8755  000000                     
  8756  000000                     
  8757  000000                     
  8758  000000                     
  8759  000000                     
  8760  000000                     
  8761  000000                     
  8762  000000                     
  8763  000000                     
  8764  000000                     
  8765  000000                     
  8766  000000                     
  8767  000000                     
  8768  000000                     
  8769  000000                     
  8770  000000                     
  8771  000000                     
  8772  000000                     
  8773  000000                     
  8774  000000                     
  8775  000000                     
  8776  000000                     
  8777  000000                     
  8778  000000                     
  8779  000000                     
  8780  000000                     
  8781  000000                     
  8782  000000                     
  8783  000000                     
  8784  000000                     
  8785  000000                     
  8786  000000                     
  8787  000000                     
  8788  000000                     
  8789  000000                     
  8790  000000                     
  8791  000000                     
  8792  000000                     
  8793  000000                     
  8794  000000                     
  8795  000000                     
  8796  000000                     
  8797  000000                     
  8798  000000                     
  8799  000000                     
  8800  000000                     
  8801  000000                     
  8802  000000                     
  8803  000000                     
  8804  000000                     
  8805  000000                     
  8806  000000                     
  8807  000000                     
  8808  000000                     
  8809  000000                     
  8810  000000                     
  8811  000000                     
  8812  000000                     
  8813  000000                     
  8814  000000                     
  8815  000000                     
  8816  000000                     
  8817  000000                     
  8818  000000                     
  8819  000000                     
  8820  000000                     
  8821  000000                     
  8822  000000                     
  8823  000000                     
  8824  000000                     
  8825  000000                     
  8826  000000                     
  8827  000000                     
  8828  000000                     
  8829  000000                     
  8830  000000                     
  8831  000000                     
  8832  000000                     
  8833  000000                     
  8834  000000                     
  8835  000000                     
  8836  000000                     
  8837  000000                     
  8838  000000                     
  8839  000000                     
  8840  000000                     
  8841  000000                     
  8842  000000                     
  8843  000000                     
  8844  000000                     
  8845  000000                     
  8846  000000                     
  8847  000000                     
  8848  000000                     
  8849  000000                     
  8850  000000                     
  8851  000000                     
  8852  000000                     
  8853  000000                     
  8854  000000                     
  8855  000000                     
  8856  000000                     
  8857  000000                     
  8858  000000                     
  8859  000000                     
  8860  000000                     
  8861  000000                     
  8862  000000                     
  8863  000000                     
  8864  000000                     
  8865  000000                     
  8866  000000                     
  8867  000000                     
  8868  000000                     
  8869  000000                     
  8870  000000                     
  8871  000000                     
  8872  000000                     
  8873  000000                     
  8874  000000                     
  8875  000000                     
  8876                           
  8877                           	psect	eeprom_data
  8878                           ;main.h: 130: extern void GoldenEye(void);
  8879                           ;main.h: 133: void InitGlobal(void);
  8880                           ;main.h: 134: void ErrDTF(void);
  8881                           ;main.h: 135: void ErrPTG(void);
  8882                           ;main.h: 136: void ToReset(void);
  8883                           ;main.h: 137: void DecWSW(void);
  8884                           ;main.h: 138: void DecERR(void);
  8885                           ;main.h: 139: void DecSTR(void);
  8886                           ;main.h: 140: void DecRozruch(void);
  8887                           ;main.h: 141: void SetRozruch(void);
  8888                           ;main.h: 142: void DecWylacz(void);
  8889                           ;main.h: 143: void SetWylacz(void);
  8890                           ;main.h: 144: void RuszPlomien(void);
  8891                           ;main.h: 145: void ReloadPlomien(void);
  8892                           ;main.h: 146: void RuszCiag(void);
  8893                           ;main.h: 147: void ReloadCiag(void);
  8894                           ;main.h: 148: void Proba48(void);
  8895                           ;main.h: 149: void Rusz48(void);
  8896                           ;main.h: 150: void Proba48Z3(void);
  8897                           ;main.h: 151: void Rusz48Z3(void);
  8898                           ;main.h: 152: void Rozruch(void);
  8899                           ;main.h: 153: void DecyzjaPLM(void);
  8900                           ;main.h: 154: void DecyzjaPLM2(void);
  8901                           ;main.h: 155: void VWybieg(void);
  8902                           ;main.h: 156: void ZmienKCOKCW(void);
  8903                           ;main.h: 157: void FunkcjaSerwisowa(void);
  8904                           ;main.h: 158: void KolejkaPobudzen(void);
  8905                           ;main.h: 159: void BlokadaL3(void);
  8906                           ;main.h: 160: void Blokada15S(void);
  8907                           ;main.h: 161: void ToObiegCW(void);
  8908                           ;main.h: 162: void ToObiegCO(void);
  8909                           ;main.h: 163: void Wylacz(void);
  8910                           ;main.h: 164: void RuszPWR(void);
  8911                           ;main.h: 165: void ClearData(void);
  8912                           ;main.h: 166: void SetLoMod(void);
  8913                           ;main.h: 167: void RestartFltPrt(void);
  8914                           ;main.h: 168: void ClearDiode(void);
  8915                           ;main.h: 169: void DecyzjaAntyLeg(void);
  8916                           ;main.h: 170: void DetekcjaPrzeplywuWG(void);
  8917                           ;main.h: 171: void OczekujNaPrzeplywWG(void);
  8918                           ;main.h: 172: void RefLCDData(void);
  8919                           ;main.h: 173: void GrzejON(void);
  8920                           ;main.h: 174: void GrzejOFF(void);
  8921                           ;main.h: 176: extern void InitOsc(void);
  8922                           ;main.h: 178: extern void InitAC(void);
  8923                           ;main.h: 180: extern void InitWsw(void);
  8924                           ;main.h: 181: extern bit GetPoz(const unsigned c
      +                          har nrkol,const unsigned char nrpoz);
  8925                           ;main.h: 183: extern void InitPWM(void);
  8926                           ;main.h: 184: extern void WritePWM(const unsigne
      +                          d char tpwm);
  8927                           ;main.h: 185: extern void WriteOPWM(unsigned cha
      +                          r tpwm);
  8928                           ;main.h: 186: extern void WritePWM2(const unsign
      +                          ed char tpwm);
  8929                           ;main.h: 187: extern unsigned char ModToProc(uns
      +                          igned char wrt);
  8930                           ;main.h: 189: extern void ClsScr(void);
  8931                           ;main.h: 190: extern void EndClsScr(void);
  8932                           ;main.h: 191: extern void TestScr(void);
  8933                           ;main.h: 192: extern void EndTestScr(void);
  8934                           ;main.h: 193: extern void ClsScr(void);
  8935                           ;main.h: 194: extern void EndClsScr(void);
  8936                           ;main.h: 195: extern void PrintErr(const unsigne
      +                          d char kod, const unsigned char pls);
  8937                           ;main.h: 196: extern void PrintErrCs(const unsig
      +                          ned char kod,const unsigned char cs, const unsig
      +                          ned char pls);
  8938                           ;main.h: 197: extern void PrintErrTm(const unsig
      +                          ned char kod,const unsigned char tm, const unsig
      +                          ned char pls);
  8939                           ;main.h: 198: extern void EndErr(void);
  8940                           ;main.h: 199: extern void PrintPR(const unsigned
      +                           char lkod,unsigned char nkod,unsigned char tryb
      +                          );
  8941                           ;main.h: 200: extern void EndPR(void);
  8942                           ;main.h: 201: extern void PrintNstCO(const unsig
      +                          ned char nst);
  8943                           ;main.h: 202: extern void PrintNstCW(const unsig
      +                          ned char nst);
  8944                           ;main.h: 203: extern void PrintNstKt(const unsig
      +                          ned char nst);
  8945                           ;main.h: 204: extern void EndNst(void);
  8946                           ;main.h: 205: extern void PrintL3(void);
  8947                           ;main.h: 206: extern void EndL3(void);
  8948                           ;main.h: 207: extern void PrintTdzCO(const unsig
      +                          ned char tm);
  8949                           ;main.h: 208: extern void EndTdzCO(void);
  8950                           ;main.h: 209: extern void PrintTdzCW(const unsig
      +                          ned char tm);
  8951                           ;main.h: 210: extern void EndTdzCW(void);
  8952                           ;main.h: 211: extern void PrintOFF(void);
  8953                           ;main.h: 212: extern void EndOFF(void);
  8954                           ;main.h: 213: extern void PrintCS(const unsigned
      +                           char cs);
  8955                           ;main.h: 214: extern void EndCS(void);
  8956                           ;main.h: 215: extern void PrintCW(const unsigned
      +                           char tm);
  8957                           ;main.h: 216: extern void EndCW(void);
  8958                           ;main.h: 217: extern void PrintCO(const unsigned
      +                           char tm);
  8959                           ;main.h: 218: extern void PrintHex(const unsigne
      +                          d char tm);
  8960                           ;main.h: 219: extern void SetDiode(unsigned char
      +                           nrd, unsigned char stn);
  8961                           ;main.h: 220: extern void RefreshNst(const unsig
      +                          ned char nst);
  8962                           ;main.h: 222: extern bit GetBit(const unsigned c
      +                          har data,const unsigned char nbit);
  8963                           ;main.h: 223: extern void BitSet(unsigned char *
      +                          data, const unsigned char nbit,const unsigned ch
      +                          ar bt);
  8964                           ;main.h: 224: extern void BitSet2(unsigned char 
      +                          *data, const unsigned char nbit,const unsigned c
      +                          har bt);
  8965                           ;main.h: 226: extern void StartRTG(const unsigne
      +                          d char Index);
  8966                           ;main.h: 227: extern unsigned char RTG(const uns
      +                          igned char Index);
  8967                           ;main.h: 228: extern void StartRTS(const unsigne
      +                          d char Index);
  8968                           ;main.h: 229: extern unsigned char RTS(const uns
      +                          igned char Index);
  8969                           ;main.h: 230: extern void StartRTdS(const unsign
      +                          ed char Index);
  8970                           ;main.h: 231: extern unsigned char RTdS(const un
      +                          signed char Index);
  8971                           ;main.h: 233: extern void InitTimer1(void);
  8972                           ;main.h: 235: extern void InitPort(void);
  8973                           ;main.h: 236: extern bit RdPrt(const unsigned ch
      +                          ar Index);
  8974                           ;main.h: 237: extern void SetPrt(const unsigned 
      +                          char Index, const unsigned char nw);
  8975                           ;main.h: 238: extern void RefPrt(const unsigned 
      +                          char Index);
  8976                           ;main.h: 240: extern void PwrOnDelay(void);
  8977                           ;main.h: 242: extern void InitI2C(void);
  8978  F00000  63 63 62 62 61 60  	db	99,99,98,98,97,96,95,95	;#
      +       5F 5F              
  8979                           ;eeprom.h: 11: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "94" "," "93" "," "92" "," 
      +                          "92" "," "91" "," "90" "," "90" "," "89");
  8980  F00008  5E 5D 5C 5C 5B 5A  	db	94,93,92,92,91,90,90,89	;#
      +       5A 59              
  8981                           ;eeprom.h: 12: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "88" "," "88" "," "87" "," 
      +                          "87" "," "86" "," "85" "," "85" "," "84");
  8982  F00010  58 58 57 57 56 55  	db	88,88,87,87,86,85,85,84	;#
      +       55 54              
  8983                           ;eeprom.h: 13: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "84" "," "83" "," "82" "," 
      +                          "82" "," "81" "," "81" "," "80" "," "80");
  8984  F00018  54 53 52 52 51 51  	db	84,83,82,82,81,81,80,80	;#
      +       50 50              
  8985                           ;eeprom.h: 14: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "79" "," "79" "," "78" "," 
      +                          "77" "," "77" "," "76" "," "76" "," "75");
  8986  F00020  4F 4F 4E 4D 4D 4C  	db	79,79,78,77,77,76,76,75	;#
      +       4C 4B              
  8987                           ;eeprom.h: 15: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "75" "," "74" "," "74" "," 
      +                          "73" "," "73" "," "72" "," "72" "," "71");
  8988  F00028  4B 4A 4A 49 49 48  	db	75,74,74,73,73,72,72,71	;#
      +       48 47              
  8989                           ;eeprom.h: 16: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "71" "," "70" "," "70" "," 
      +                          "70" "," "69" "," "69" "," "68" "," "68");
  8990  F00030  47 46 46 46 45 45  	db	71,70,70,70,69,69,68,68	;#
      +       44 44              
  8991                           ;eeprom.h: 17: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "67" "," "67" "," "66" "," 
      +                          "66" "," "65" "," "65" "," "64" "," "64");
  8992  F00038  43 43 42 42 41 41  	db	67,67,66,66,65,65,64,64	;#
      +       40 40              
  8993                           ;eeprom.h: 18: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "64" "," "63" "," "63" "," 
      +                          "62" "," "62" "," "61" "," "61" "," "61");
  8994  F00040  40 3F 3F 3E 3E 3D  	db	64,63,63,62,62,61,61,61	;#
      +       3D 3D              
  8995                           ;eeprom.h: 19: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "60" "," "60" "," "59" "," 
      +                          "59" "," "58" "," "58" "," "57" "," "57");
  8996  F00048  3C 3C 3B 3B 3A 3A  	db	60,60,59,59,58,58,57,57	;#
      +       39 39              
  8997                           ;eeprom.h: 20: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "57" "," "56" "," "56" "," 
      +                          "55" "," "55" "," "54" "," "54" "," "54");
  8998  F00050  39 38 38 37 37 36  	db	57,56,56,55,55,54,54,54	;#
      +       36 36              
  8999                           ;eeprom.h: 21: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "53" "," "53" "," "52" "," 
      +                          "52" "," "52" "," "51" "," "51" "," "50");
  9000  F00058  35 35 34 34 34 33  	db	53,53,52,52,52,51,51,50	;#
      +       33 32              
  9001                           ;eeprom.h: 22: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "50" "," "49" "," "49" "," 
      +                          "49" "," "48" "," "48" "," "47" "," "47");
  9002  F00060  32 31 31 31 30 30  	db	50,49,49,49,48,48,47,47	;#
      +       2F 2F              
  9003                           ;eeprom.h: 23: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "46" "," "46" "," "46" "," 
      +                          "45" "," "45" "," "44" "," "44" "," "44");
  9004  F00068  2E 2E 2E 2D 2D 2C  	db	46,46,46,45,45,44,44,44	;#
      +       2C 2C              
  9005                           ;eeprom.h: 24: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "43" "," "43" "," "42" "," 
      +                          "42" "," "41" "," "41" "," "41" "," "40");
  9006  F00070  2B 2B 2A 2A 29 29  	db	43,43,42,42,41,41,41,40	;#
      +       29 28              
  9007                           ;eeprom.h: 25: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "40" "," "39" "," "39" "," 
      +                          "38" "," "38" "," "37" "," "37" "," "37");
  9008  F00078  28 27 27 26 26 25  	db	40,39,39,38,38,37,37,37	;#
      +       25 25              
  9009                           ;eeprom.h: 26: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "36" "," "36" "," "35" "," 
      +                          "35" "," "34" "," "34" "," "33" "," "33");
  9010  F00080  24 24 23 23 22 22  	db	36,36,35,35,34,34,33,33	;#
      +       21 21              
  9011                           ;eeprom.h: 27: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "32" "," "32" "," "31" "," 
      +                          "31" "," "30" "," "30" "," "29" "," "29");
  9012  F00088  20 20 1F 1F 1E 1E  	db	32,32,31,31,30,30,29,29	;#
      +       1D 1D              
  9013                           ;eeprom.h: 28: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "28" "," "28" "," "27" "," 
      +                          "27" "," "26" "," "26" "," "25" "," "24");
  9014  F00090  1C 1C 1B 1B 1A 1A  	db	28,28,27,27,26,26,25,24	;#
      +       19 18              
  9015                           ;eeprom.h: 29: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "24" "," "23" "," "23" "," 
      +                          "22" "," "22" "," "21" "," "21" "," "20");
  9016  F00098  18 17 17 16 16 15  	db	24,23,23,22,22,21,21,20	;#
      +       15 14              
  9017                           ;eeprom.h: 30: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "19" "," "19" "," "18" "," 
      +                          "17" "," "17" "," "16" "," "16" "," "15");
  9018  F000A0  13 13 12 11 11 10  	db	19,19,18,17,17,16,16,15	;#
      +       10 0F              
  9019                           ;eeprom.h: 31: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "14" "," "14" "," "13" "," 
      +                          "12" "," "11" "," "11" "," "10" "," "09");
  9020  F000A8  0E 0E 0D 0C 0B 0B  	db	14,14,13,12,11,11,10,9	;#
      +       0A 09              
  9021                           ;eeprom.h: 32: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "08" "," "07" "," "06" "," 
      +                          "06" "," "05" "," "04" "," "03" "," "02");
  9022  F000B0  08 07 06 06 05 04  	db	8,7,6,6,5,4,3,2	;#
      +       03 02              
  9023                           ;eeprom.h: 33: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "01" "," "00" "," "00" "," 
      +                          "00" "," "00" "," "00" "," "00" "," "00");
  9024  F000B8  01 00 00 00 00 00  	db	1,0,0,0,0,0,0,0	;#
      +       00 00              
  9025                           ;eeprom.h: 64: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "0" "," "40" "," "99" "," "
      +                          99" "," "0" "," "3" "," "0" "," "0");
  9026  F000C0  00 28 63 63 00 03  	db	0,40,99,99,0,3,0,0	;#
      +       00 00              
  9027                           ;eeprom.h: 65: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "1" "," "85" "," "60" "," "
      +                          3" "," "0" "," "0" "," "00" "," "00");
  9028  F000C8  01 55 3C 03 00 00  	db	1,85,60,3,0,0,0,0	;#
      +       00 00              
  9029                           ;eeprom.h: 67: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "1" "," "6" "," "50" "," "8
      +                          0" "," "99" "," "5" "," "75" "," "0");
  9030  F000D0  01 06 32 50 63 05  	db	1,6,50,80,99,5,75,0	;#
      +       4B 00              
  9031                           ;eeprom.h: 68: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "0x01" "," "85" "," "1" ","
      +                           "0" "," "0" "," "99" "," "0" "," "0");
  9032  F000D8  01 55 01 00 00 63  	db	1,85,1,0,0,99,0,0	;#
      +       00 00              
  9033                           ;eeprom.h: 69: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "0" "," "0" "," "0" "," "0"
      +                           "," "0" "," "0" "," "0" "," "0");
  9034  F000E0  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9035                           ;eeprom.h: 70: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "0" "," "0" "," "0" "," "0"
      +                           "," "0" "," "0" "," "0" "," "0");
  9036  F000E8  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9037                           ;eeprom.h: 74: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "40" "," "40" "," "39" "," 
      +                          "38" "," "38" "," "37" "," "36" "," "36");
  9038  F000F0  28 28 27 26 26 25  	db	40,40,39,38,38,37,36,36	;#
      +       24 24              
  9039                           ;eeprom.h: 75: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "35" "," "34" "," "34" "," 
      +                          "33" "," "33" "," "32" "," "32" "," "31");
  9040  F000F8  23 22 22 21 21 20  	db	35,34,34,33,33,32,32,31	;#
      +       20 1F              
  9041                           ;eeprom.h: 76: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "31" "," "30" "," "30" "," 
      +                          "29" "," "29" "," "28" "," "28" "," "27");
  9042  F00100  1F 1E 1E 1D 1D 1C  	db	31,30,30,29,29,28,28,27	;#
      +       1C 1B              
  9043                           ;eeprom.h: 77: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "27" "," "26" "," "26" "," 
      +                          "25" "," "25" "," "24" "," "24" "," "23");
  9044  F00108  1B 1A 1A 19 19 18  	db	27,26,26,25,25,24,24,23	;#
      +       18 17              
  9045                           ;eeprom.h: 78: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "23" "," "22" "," "22" "," 
      +                          "22" "," "21" "," "21" "," "20" "," "20");
  9046  F00110  17 16 16 16 15 15  	db	23,22,22,22,21,21,20,20	;#
      +       14 14              
  9047                           ;eeprom.h: 79: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "20" "," "19" "," "19" "," 
      +                          "18" "," "18" "," "18" "," "17" "," "17");
  9048  F00118  14 13 13 12 12 12  	db	20,19,19,18,18,18,17,17	;#
      +       11 11              
  9049                           ;eeprom.h: 80: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "17" "," "16" "," "16" "," 
      +                          "15" "," "15" "," "15" "," "14" "," "14");
  9050  F00120  11 10 10 0F 0F 0F  	db	17,16,16,15,15,15,14,14	;#
      +       0E 0E              
  9051                           ;eeprom.h: 81: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "14" "," "13" "," "13" "," 
      +                          "13" "," "12" "," "12" "," "12" "," "11");
  9052  F00128  0E 0D 0D 0D 0C 0C  	db	14,13,13,13,12,12,12,11	;#
      +       0C 0B              
  9053                           ;eeprom.h: 82: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "11" "," "11" "," "10" "," 
      +                          "10" "," "10" "," "9" "," "9" "," "9");
  9054  F00130  0B 0B 0A 0A 0A 09  	db	11,11,10,10,10,9,9,9	;#
      +       09 09              
  9055                           ;eeprom.h: 83: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "8" "," "8" "," "8" "," "7"
      +                           "," "7" "," "7" "," "6" "," "6");
  9056  F00138  08 08 08 07 07 07  	db	8,8,8,7,7,7,6,6	;#
      +       06 06              
  9057                           ;eeprom.h: 84: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "6" "," "5" "," "5" "," "5"
      +                           "," "4" "," "4" "," "4" "," "3");
  9058  F00140  06 05 05 05 04 04  	db	6,5,5,5,4,4,4,3	;#
      +       04 03              
  9059                           ;eeprom.h: 85: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "3" "," "3" "," "2" "," "2"
      +                           "," "2" "," "1" "," "1" "," "1");
  9060  F00148  03 03 02 02 02 01  	db	3,3,2,2,2,1,1,1	;#
      +       01 01              
  9061                           ;eeprom.h: 86: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "1" "," "0" "," "0" "," "0"
      +                           "," "-1" "," "-1" "," "-1" "," "-2");
  9062  F00150  01 00 00 00 FF FF  	db	1,0,0,0,-1,-1,-1,-2	;#
      +       FF FE              
  9063                           ;eeprom.h: 87: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-2" "," "-2" "," "-2" "," 
      +                          "-3" "," "-3" "," "-3" "," "-4" "," "-4");
  9064  F00158  FE FE FE FD FD FD  	db	-2,-2,-2,-3,-3,-3,-4,-4	;#
      +       FC FC              
  9065                           ;eeprom.h: 88: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-4" "," "-5" "," "-5" "," 
      +                          "-5" "," "-6" "," "-6" "," "-6" "," "-7");
  9066  F00160  FC FB FB FB FA FA  	db	-4,-5,-5,-5,-6,-6,-6,-7	;#
      +       FA F9              
  9067                           ;eeprom.h: 89: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-7" "," "-7" "," "-8" "," 
      +                          "-8" "," "-8" "," "-9" "," "-9" "," "-9");
  9068  F00168  F9 F9 F8 F8 F8 F7  	db	-7,-7,-8,-8,-8,-9,-9,-9	;#
      +       F7 F7              
  9069                           ;eeprom.h: 90: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-9" "," "-10" "," "-10" ",
      +                          " "-10" "," "-11" "," "-11" "," "-11" "," "-12")
      +                          ;
  9070  F00170  F7 F6 F6 F6 F5 F5  	db	-9,-10,-10,-10,-11,-11,-11,-12	;#
      +       F5 F4              
  9071                           ;eeprom.h: 91: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-12" "," "-13" "," "-13" "
      +                          ," "-13" "," "-13" "," "-14" "," "-14" "," "-14"
      +                          );
  9072  F00178  F4 F3 F3 F3 F3 F2  	db	-12,-13,-13,-13,-13,-14,-14,-14	;#
      +       F2 F2              
  9073                           ;eeprom.h: 92: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-15" "," "-15" "," "-16" "
      +                          ," "-16" "," "-16" "," "-17" "," "-17" "," "-17"
      +                          );
  9074  F00180  F1 F1 F0 F0 F0 EF  	db	-15,-15,-16,-16,-16,-17,-17,-17	;#
      +       EF EF              
  9075                           ;eeprom.h: 93: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-18" "," "-18" "," "-18" "
      +                          ," "-19" "," "-19" "," "-20" "," "-20" "," "-20"
      +                          );
  9076  F00188  EE EE EE ED ED EC  	db	-18,-18,-18,-19,-19,-20,-20,-20	;#
      +       EC EC              
  9077                           ;eeprom.h: 94: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-21" "," "-21" "," "-22" "
      +                          ," "-22" "," "-22" "," "-23" "," "-23" "," "-24"
      +                          );
  9078  F00190  EB EB EA EA EA E9  	db	-21,-21,-22,-22,-22,-23,-23,-24	;#
      +       E9 E8              
  9079                           ;eeprom.h: 95: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-24" "," "-25" "," "-25" "
      +                          ," "-25" "," "-26" "," "-26" "," "-27" "," "-27"
      +                          );
  9080  F00198  E8 E7 E7 E7 E6 E6  	db	-24,-25,-25,-25,-26,-26,-27,-27	;#
      +       E5 E5              
  9081                           ;eeprom.h: 96: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-28" "," "-28" "," "-29" "
      +                          ," "-29" "," "-30" "," "-30" "," "-31" "," "-31"
      +                          );
  9082  F001A0  E4 E4 E3 E3 E2 E2  	db	-28,-28,-29,-29,-30,-30,-31,-31	;#
      +       E1 E1              
  9083                           ;eeprom.h: 97: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-32" "," "-33" "," "-33" "
      +                          ," "-34" "," "-35" "," "-35" "," "-36" "," "-37"
      +                          );
  9084  F001A8  E0 DF DF DE DD DD  	db	-32,-33,-33,-34,-35,-35,-36,-37	;#
      +       DC DB              
  9085                           ;eeprom.h: 98: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-37" "," "-38" "," "-39" "
      +                          ," "-40" "," "-40" "," "-40" "," "-40" "," "-40"
      +                          );
  9086  F001B0  DB DA D9 D8 D8 D8  	db	-37,-38,-39,-40,-40,-40,-40,-40	;#
      +       D8 D8              
  9087                           ;eeprom.h: 128: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0xFF" "," "0xFF" "," "0xF
      +                          F" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "
      +                          ," "0xFF");
  9088  F001B8  FF FF FF FF FF FF  	db	255,255,255,255,255,255,255,255	;#
      +       FF FF              
  9089                           ;eeprom.h: 129: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0xFF" "," "0xFF" "," "0xF
      +                          F" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "
      +                          ," "0xFF");
  9090  F001C0  FF FF FF FF FF FF  	db	255,255,255,255,255,255,255,255	;#
      +       FF FF              
  9091                           ;eeprom.h: 131: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9092  F001C8  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9093                           ;eeprom.h: 132: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9094  F001D0  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9095                           ;eeprom.h: 133: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9096  F001D8  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9097                           ;eeprom.h: 135: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9098  F001E0  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9099                           ;eeprom.h: 137: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9100  F001E8  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9101                           ;eeprom.h: 138: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9102  F001F0  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9103                           ;eeprom.h: 139: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9104  F001F8  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9105                           ;eeprom.h: 140: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9106  F00200  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9107                           ;eeprom.h: 142: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9108  F00208  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9109                           ;eeprom.h: 143: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9110  F00210  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9111                           ;eeprom.h: 144: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9112  F00218  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9113                           ;eeprom.h: 145: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9114  F00220  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9115                           ;eeprom.h: 147: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9116  F00228  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9117                           ;eeprom.h: 148: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9118  F00230  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9119                           ;eeprom.h: 149: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9120  F00238  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9121                           ;eeprom.h: 150: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9122  F00240  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9123                           ;eeprom.h: 152: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9124  F00248  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9125                           ;eeprom.h: 153: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9126  F00250  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9127                           ;eeprom.h: 154: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9128  F00258  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9129                           ;eeprom.h: 155: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9130  F00260  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9131                           ;eeprom.h: 157: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  9132  F00268  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  9133                           
  9134                           	psect	bigbss
  9135  000E9A                     _x:
  9136  000E9A                     	ds	1
  9137  000000                     
  9138  000000                     
  9139  000000                     
  9140  000000                     
  9141  000000                     
  9142  000000                     
  9143  000000                     
  9144                           
  9145                           	psect	bss
  9146  000100                     _M:
  9147  000100                     	ds	36
  9148  000100                     _RSDT1:
  9149  000100                     	ds	112
  9150                           
  9151                           	psect	temp
  9152  000000                     btemp:
  9153  000000                     	ds	2
  9154                           intcon	equ	0xFF2
  9155                           indf0	equ	0xFEF
  9156                           wreg	equ	0xFE8
  9157                           fsr2l	equ	0xFD9
  9158                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Mon Sep 14 17:44:54 2020

            _KolejkaPobudzen 1CBE            __end_of_SetLowPMP 38A2  
                  _SetTrbPGD 7DA2           __end_of_ReloadCiag 3B1E  
                          _M 0100                     _PomiarCO 752A  
                   _PomiarCS 8802                     _PomiarCW 7B18  
                   _PomiarIN 7AE2                            _x 0E9A  
                   _PomiarZW 7D2E                    _Proba48Z3 3C30  
          __end_of_Proba48Z3 3C72                     _PrintErr EC88  
                  _SetWylacz 2D7C                           l40 1138  
                         l50 125C                           l42 1156  
                         l34 111C                           l43 116C  
                         l35 1124                           l44 11E6  
                         l36 1134                           l45 11C0  
                         l37 1188                           l62 136A  
                         l38 1158                           l47 11E2  
                         l72 14A2                           l73 147A  
                         l65 1388                           l90 1512  
                         l82 1492                           l76 1482  
                         l93 17EA                           l85 149A  
                         l79 148A                           l96 180C  
                         l89 14D0                           l98 1854  
          __end_of_SetWylacz 2DEA                           u30 1112  
                         u60 1130                    _PomiarPCO 8392  
                  _PomiarPFN 8600                    _PomiarPCW 8502  
                  ?_PrintErr 00EB                     _StartRTG E798  
                   _StartRTM E72C                     _StartRTS E6DE  
                   _Rusz48Z3 3C72                   _SetRozruch 2A46  
         __end_of_SetRozruch 2A70                     _RuszCiag 392C  
                        l110 1D10                          l102 1A16  
                        l111 1D08                          l103 1C9C  
                        l200 2228                          l120 1D66  
                        l112 1CF0                          l104 1C98  
                        l121 1D4C                          l113 1CF4  
                        l202 2216                          l122 1D5A  
                        l114 1D02                          l106 1CAC  
                        l203 2222                          l107 1CB8  
                        l300 26D4                          l140 1E3A  
                        l301 26CC                          l141 1E4C  
                        l133 1E12                          l125 1D90  
                        l230 250E                          l214 22A2  
                        l206 227A                          l150 1EF2  
                        l142 1E5C                          l118 1D36  
                        l303 26E8                          l207 2264  
                        l151 1EEA                          l143 1E74  
                        l312 2786                          l304 26FC  
                        l240 2484                          l232 239E  
                        l224 2348                          l216 2304  
                        l208 225C                          l144 1E88  
                        l305 2726                          l241 243E  
                        l225 2360                          l161 1FB0  
                        l129 1DE2                          l330 27C6  
                        l314 2750                          l306 271E  
                        l234 23BC                          l226 2364  
                        l218 22DE                          l162 1FD0  
                        l154 1F16                          l146 1F4E  
                        l138 1F5A                          l323 2822  
                        l243 246A                          l227 237E  
                        l171 205A                          l163 1FC4  
                        l139 1E94                          l308 273A  
                        l244 2466                          l236 23E2  
                        l180 20B6                          l172 2048  
                        l148 1F02                          l501 2D80  
                        l421 2AA4                          l341 2A28  
                        l325 279E                          l317 2762  
                        l261 24C8                          l245 2462  
                        l181 20A2                          l173 2054  
                        l165 222C                          l430 2B04  
                        l350 2888                          l334 27F4  
                        l262 24DA                          l238 241A  
                        l190 215A                          l182 20AE  
                        l166 1FFA                          l503 2D90  
                        l343 2844                          l319 2774  
                        l271 2516                          l255 24E8  
                        l175 2088                          l167 1FE4  
                        l424 2AE4                          l416 2C84  
                        l408 2A0E                          l192 21B0  
                        l184 20EC                          l176 2070  
                        l168 1FF4                          l505 2D94  
                        l433 2B12                          l361 28DA  
                        l353 2896                          l281 25A2  
                        l273 2538                          l257 249C  
                        l249 2480                          l193 219C  
                        l185 20D4                          l177 2080  
                        l530 2EC2                          l522 2EB2  
                        l514 2E4A                          l418 2A72  
                        l194 21A8                          l186 20E4  
                        l611 32D8                          l603 32F0  
                        l531 2ECE                          l523 2E5A  
                        l515 2DF6                          l443 2B72  
                        l427 2AF6                          l291 266E  
                        l267 261A                          l259 24AC  
                        l700 3660                          l604 32B2  
                        l540 3204                          l532 2EEC  
                        l524 2E66                          l452 2BF8  
                        l436 2B4C                          l372 2932  
                        l356 28AA                          l276 255E  
                        l196 21E0                          l188 2126  
                        l701 3608                          l621 35E8  
                        l541 2F50                          l525 2E98  
                        l517 2E22                          l509 2DC4  
                        l437 2B4A                          l381 2960  
                        l365 28EE                          l269 25E2  
                        l197 21CE                          l702 3618  
                        l606 329A                          l550 2FFA  
                        l542 2F66                          l518 2E42  
                        l446 2BAA                          l294 2672  
                        l198 21DA                          l703 362A  
                        l623 332C                          l551 2FE4  
                        l455 2C0A                          l439 2B64  
                        l375 2940                          l359 28C2  
                        l295 2694                          l800 3A94  
                        l712 36E4                          l640 33D4  
                        l616 3312                          l560 3038  
                        l544 2F72                          l536 2F44  
                        l384 2978                          l288 25CE  
                        l721 3766                          l713 36A8  
                        l705 3646                          l625 33C2  
                        l553 2FD2                          l529 2F04  
                        l473 2CD8                          l465 2C56  
                        l449 2BEA                          l730 3776  
                        l722 3716                          l714 36B4  
                        l642 347E                          l634 338E  
                        l626 332E                          l570 30DA  
                        l562 3046                          l482 2D30  
                        l458 2C18                          l386 298A  
                        l803 3AF0                          l723 3726  
                        l715 36C2                          l651 3436  
                        l643 33D6                          l627 333A  
                        l563 3070                          l491 2C58  
                        l299 2698                          l900 4014  
                        l820 3B4C                          l740 37B8  
                        l732 37A8                          l724 373A  
                        l708 36F2                          l652 3454  
                        l644 33E2                          l636 33AA  
                        l580 3144                          l572 30E6  
                        l556 2FE2                          l492 2D7C  
                        l396 29DC                          l901 3FF8  
                        l741 37CE                          l733 3778  
                        l717 36DC                          l709 36A0  
                        l661 351C                          l629 3362  
                        l573 30FA                          l549 2FD0  
                        l485 2D3E                          l389 2998  
                        l910 3EEA                          l822 3B62  
                        l806 3B02                          l734 3790  
                        l662 3492                          l646 340A  
                        l638 33B8                          l590 31BE  
                        l582 3140                          l574 3130  
                        l566 307C                          l558 300E  
                        l494 2C70                          l903 3E8E  
                        l831 3BAC                          l815 3C0E  
                        l751 383E                          l743 37E6  
                        l671 34DC                          l663 349E  
                        l655 3466                          l575 3110  
                        l567 3092                          l559 303A  
                        l479 2D1E                          l399 29EA  
                        l904 3EA4                          l760 38B0  
                        l728 3868                          l672 34EE  
                        l584 3142                          l568 30C8  
                        l921 3F5A                          l905 3EB2  
                        l817 3B4A                          l737 37B6  
                        l681 35D6                          l657 3474  
                        l593 31C0                          l585 3158  
                        l914 3F16                          l826 3B92  
                        l762 38D2                          l754 388C  
                        l690 358E                          l682 352E  
                        l674 3504                          l594 31CC  
                        l586 3170                          l578 313E  
                        l498 2DB8                          l915 3F32  
                        l819 3B84                          l747 3856  
                        l739 37FE                          l691 35AC  
                        l683 353A                          l659 3490  
                        l595 31E2                          l587 3182  
                        l579 315A                          l499 2DA0  
                        l908 3EBE                          l844 3C68  
                        l828 3BCA                          l780 395C  
                        l748 3810                          l588 318A  
                        l941 40A4                          l909 3ED2  
                        l853 3CBA                          l845 3C32  
                        l837 3BD8                          l829 3B94  
                        l749 3826                          l685 3562  
                        l677 3512                          l926 3FA2  
                        l918 3F6E                          l854 3C74  
                        l790 39E2                          l782 3990  
                        l758 38F6                          l694 35BE  
                        l927 3FB6                          l919 3F46  
                        l863 3D08                          l847 3C42  
                        l839 3BF0                          l767 38E8  
                        l759 38A4                          l599 3258  
                        l944 40BA                          l928 3FCA  
                        l880 3D70                          l864 3CFC  
                        l856 3CAC                          l768 38DC  
                        l696 35CC                          l937 4044  
                        l881 3D96                          l873 3D12  
                        l865 3CC6                          l857 3C76  
                        l793 3A10                          l785 3AB4  
                        l777 399E                          l938 4048  
                        l794 3A22                          l786 39AC  
                        l778 3934                          l891 3DCC  
                        l883 3DB4                          l867 3CDA  
                        l859 3C8E                          l787 39C8  
                        l779 394A                          l884 3DEE  
                        l868 3CF6                          l869 3CF2  
                        l797 3A54                          l789 39D0  
                        l886 3DD6                          l895 3DFA  
                        l799 3A8A                          l888 3DCC  
                        l897 3E04                          l899 3E58  
                        u200 1294                          u150 122C  
                        u151 1228                          u160 122E  
                        u190 1292                          u191 128E  
                        u425 14DC                          u610 1678  
                        u530 1560                          _PFN 01A0  
                        u700 1A2E                          u620 167A  
                        u540 1562                          u710 1A30  
                        u470 1534                          u800 1A94  
                        u480 1536                          u810 1A96  
                        u570 1654                          u740 1A5E  
                        u580 1656                          u750 1A60  
                        u920 1B24                          u840 1AC4  
                        u930 1B26                          u850 1AC6  
                        _PMP 002B                          u880 1AF6  
                        u890 1AF8                          u990 1B5C  
                        _RTG E7C8                          _PWM 01DB  
                        _RTM E75C                          _RTS E70E  
                   _WritePWM D538        ?a_OczekujNaPrzeplywWG 00E9  
                   __config1 0030FF                     __config2 00EFEF  
                   __config3 007DFF                     __config4 00FFFB  
                   __config5 00FFF0                     __config6 00DFF0  
                        wreg 000FE8                    _StartRTdS E6A2  
              ?_eeprom_write 00F9                   _RestartMod 6E22  
              _ReloadPlomien 3904                   _PrintErrCs ECCC  
                 _PwrOnDelay EFD6                         u1000 1B5E  
                       u1100 1BC4                         u1030 1B8A  
                       u1040 1B8C                         u1130 1BF4  
                       u1220 1C56                         u1140 1BF6  
                _DecyzjaPLM2 326E                         u2030 1F88  
                       u1230 1C58                         u2031 1F84  
                       u2040 1F8A                         u1320 1CE4  
                       u1170 1C22                         u1090 1BC2  
                       u1260 1C86                         u1180 1C24  
                       u1270 1C88                         u2151 2012  
                       u4010 2430                         u2250 2036  
                       u1540 1DAE                         u3141 22BE  
                       u1461 1D8C                         u1710 1E56  
                       u1550 1DB0                         u2520 213E  
                       u2370 2108                         u2620 216A  
                       u3190 22CA                         u1670 1E34  
                       u5120 2614                         u2571 2156  
                       u4350 24C4                         u6040 27BA  
                       u2680 2182                         u3570 239A  
                       u2690 2184                         u1890 1EE6  
                       u5260 262C                         u6160 27E8  
                       u3920 2410                         u3680 23B8  
                       u5450 267E                         u5620 26C4  
                       u6270 2816                         u4590 2532  
                       u9030 2C38                         u8310 2B2C  
                       u5590 26B4                         u8500 2B80  
                       u9240 2CAE                         u7860 2A80  
                       u9770 2D5E                         u9970 2D98  
                  _WritePWM2 D54A                         _DtCO 01B6  
                       _DtCS 0198                         _DtCW 01A7  
                       _DtIN 01C7                         _RTdS E6C6  
                       _DtZW 019C          __end_of_DecyzjaPLM2 332A  
                       _main 10AE        __end_of_ReloadPlomien 392C  
                       indf0 000FEF                         fsr2l 000FD9  
   __end_of_FunkcjaSerwisowa 2E58                         btemp 0000  
                ?_PrintErrCs 00EB              __end_of_VZPauza 3D38  
                       start 0010              __end_of_GrzejON 2F28  
            __end_of_VWybieg 3672              __end_of_ToReset 40BC  
                    ?_SetPrt 00EF              __end_of_Proba48 3B48  
               ?a_RefLCDData 00EB              __end_of_Rozruch 323C  
        _DetekcjaPrzeplywuWG 3672      __end_of_KolejkaPobudzen 1E18  
                      u10121 2E7A                        u10180 2E8E  
                      u10350 2FF8                        u10270 2F60  
                      u10560 30F6                        u12600 3DD0  
                      u13331 3F94                        u13590 3FF0  
                      u12890 3EE6                        _RSDT1 0124  
                      _DtKNF 0230                        _EndL3 ED52  
          ?a_KolejkaPobudzen 00E9                        _RdPrt DE98  
                 used_btemp0 0001                   used_btemp1 0001  
__end_of_DetekcjaPrzeplywuWG 36FA                  _eeprom_read F144  
             _DecyzjaAntyLeg 1E18                 _ToWriteESTAT E664  
                    _BitSet2 EDF4                      _GetBit2 ED8E  
                 _DecRozruch 2842                     ?_BitSet2 00EE  
                      status 000FD8                     ?_GetBit2 00F0  
         __end_of_DecRozruch 2A46                      _VZPauza 3D0C  
                    _InitI2C B772                      _InitPWM CFCC  
               _ProcToPmpPwm C4C2                      _InitOsc F1AC  
           __end_of_GrzejOFF 2F48          _OczekujNaPrzeplywWG 36FA  
                   ?a_DecERR 00E9                      _GrzejON 2F12  
           __end_of_SetLoMod 2842                      _VWybieg 3606  
                    _Moduluj 40C4                      _ToReset 4062  
                    __Lparam 00E9                      _Proba48 3B1E  
              _ReceptDataLCD B724           _FiltrPomiarowyCOCW 7444  
                    _PrintL3 ED42               _InitReceptProc B61C  
                    _Rozruch 2F48                 ?_eeprom_read 00F9  
           __end_of_Rusz48Z3 3CC4             _FunkcjaSerwisowa 2DEA  
                    __ramtop 1000               __end_of_DecERR 2334  
           __end_of_RuszCiag 3AD0               __end_of_DecSTR 274E  
             __end_of_DecWSW 1F62                   _DecyzjaPLM 323C  
__end_of_OczekujNaPrzeplywWG 3774       __end_of_DecyzjaAntyLeg 1F60  
         __end_of_DecyzjaPLM 326E               __end_of_ErrPTG 4062  
                 _Blokada15S 2EC0               __end_of_KeyRes 3D0C  
         __end_of_Blokada15S 2F12                  _ZmienKCOKCW 3774  
                _InitDataPmr 6E38               __end_of_Rusz48 3C30  
        __end_of_ZmienKCOKCW 3880               __end_of_Wylacz 3606  
              _KodSterownika 1478                 __end_of_main 1390  
                     _DecERR 1F62                       _DecSTR 2334  
                     _DecWSW 1F60                  _RuszPlomien 38A2  
                     _EndErr ED18                   _RefLCDData 14B8  
                     _ErrPTG 3D38                    _DecWylacz 2A70  
                     _InitAC E9B0            __end_of_DecWylacz 2D7C  
         __end_of_RefLCDData 1CBE                       _KeyRes 3CC4  
        __end_of_RuszPlomien 3904        __end_of_KodSterownika 14B8  
                     _RglPmp CF24                    _RdEEParam 9A9E  
                     _SetPrt DEBA                       _Rusz48 3B48  
                  _ClearData 1390            __end_of_ClearData 1432  
                     _Wylacz 332A                    _BlokadaL3 2E58  
          __end_of_BlokadaL3 2EC0                   _InitGlobal 40BC  
         __end_of_InitGlobal 40C4                   _InitTimer1 F0E0  
               _eeprom_write F05E                _MKonfiguracja 89F4  
              _RestartFltPrt 1432        ?a_DetekcjaPrzeplywuWG 00E9  
                  _ModToProc D6AA                     _RefBHist E42E  
                   _RefBStat E66C                     _InitUart DF3E  
                   _InitPort DD34                     _GrzejOFF 2F28  
                  _ToObiegCO 274E                    _ToObiegCW 279C  
      __end_of_RestartFltPrt 1478            __end_of_ToObiegCO 279C  
          __end_of_ToObiegCW 2838                     _SetLoMod 2838  
                  _SetLowPMP 3880                   _ReloadCiag 3AD0  
