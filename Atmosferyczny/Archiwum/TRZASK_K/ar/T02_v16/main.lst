

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Fri Feb 26 07:54:43 2016


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	eeprom_data,global,class=EEDATA,delta=1
     5                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     6                           	psect	bss,global,class=RAM,space=1,delta=1
     7                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     	;#
    98                           
    99                           	psect	text
   100                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   101                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   102                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   103                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   104                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   105                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   106                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   107                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   108                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   109                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   110                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   111                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   112                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   113                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   114                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   115                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   116                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   117                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   118                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   119                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   120                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   121                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   122                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   123                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   124                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   125                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   126                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   127                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   128                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   129                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   130                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   131                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   132                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   133                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   134                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   135                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   136                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   137                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   138                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   139                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   140                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   141                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   142                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   143                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   144                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   145                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   146                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   147                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   148                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   149                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   150                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   151                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   152                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   153                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   154                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   155                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   156                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   157                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   158                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   159                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   160                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   161                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   162                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   163                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   164                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   165                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   166                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   167                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   168                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   169                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   170                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   171                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   172                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   173                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   174                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   175                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   176                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   177                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   178                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   179                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   180                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   181                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   182                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   183                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   184                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   185                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   186                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   187                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   188                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   189                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   190                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   191                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   192                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   193                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   194                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   195                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   196                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   197                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   198                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   199                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   200  000000                     	;#
   201                           ;	_prz assigned to ?a_OczekujNaPrzeplywWG+1
   202  000000                     _OczekujNaPrzeplywWG$prz	set	?a_OczekujNaPrzeply
      +                          wWG+1
   203                           ;	_pmp assigned to ?a_OczekujNaPrzeplywWG+0
   204  000000                     _OczekujNaPrzeplywWG$pmp	set	?a_OczekujNaPrzeply
      +                          wWG
   205                           ;	_prz assigned to ?a_DetekcjaPrzeplywuWG+1
   206  000000                     _DetekcjaPrzeplywuWG$prz	set	?a_DetekcjaPrzeplyw
      +                          uWG+1
   207                           ;	_pmp assigned to ?a_DetekcjaPrzeplywuWG+0
   208  000000                     _DetekcjaPrzeplywuWG$pmp	set	?a_DetekcjaPrzeplyw
      +                          uWG
   209                           ;	_KnfDisErr assigned to ?a_DecERR+1
   210  000000                     _DecERR$KnfDisErr	set	?a_DecERR+1
   211                           ;	_w assigned to ?a_DecERR+0
   212  000000                     _DecERR$w	set	?a_DecERR
   213                           ;	_wr assigned to ?a_KolejkaPobudzen+0
   214  000000                     _KolejkaPobudzen$wr	set	?a_KolejkaPobudzen
   215                           ;main.h: 36: asm("\tglobal __config" "2"); asm("
      +                          \t__config" "2" " equ " "0xFFFF&0xFFFF&0xFFEF&0x
      +                          FFFF&0xEFFF");
   216  000000                     	;#
   217                           ;main.h: 38: asm("\tglobal __config" "3"); asm("
      +                          \t__config" "3" " equ " "0xFFFF&0x7FFF&0xFDFF");
   218  000000                     	;#
   219                           ;main.h: 39: asm("\tglobal __config" "4"); asm("
      +                          \t__config" "4" " equ " "0xFFFF&0xFFFF&0xFFFB&0x
      +                          FFFF");
   220  000000                     	;#
   221                           ;main.h: 42: asm("\tglobal __config" "5"); asm("
      +                          \t__config" "5" " equ " "0xFFF0");
   222  000000                     	;#
   223                           ;main.h: 43: asm("\tglobal __config" "6"); asm("
      +                          \t__config" "6" " equ " "0xFFF0&0xDFFF");
   224  000000                     	;#
   225                           ;pwm.tp.h: 7: typedef struct {
   226                           ;pwm.tp.h: 8: unsigned _ENPWM:1;
   227                           ;pwm.tp.h: 9: unsigned _ENOSC:1;
   228                           ;pwm.tp.h: 10: unsigned tpGZ:1;
   229                           ;pwm.tp.h: 11: volatile near unsigned char BufPW
      +                          M;
   230                           ;pwm.tp.h: 12: volatile near unsigned char BufOS
      +                          C;
   231                           ;pwm.tp.h: 13: near unsigned char NewOSC;
   232                           ;pwm.tp.h: 14: near unsigned char NewPWM;
   233                           ;pwm.tp.h: 17: unsigned _ENPWM2:1;
   234                           ;pwm.tp.h: 18: volatile near unsigned char BufPW
      +                          M2;
   235                           ;pwm.tp.h: 19: near unsigned char NewPWM2;
   236                           ;pwm.tp.h: 21: unsigned char HIPWM;
   237                           ;pwm.tp.h: 23: unsigned char MDMOD;
   238                           ;pwm.tp.h: 24: unsigned char DKNF_MDMOD;
   239                           ;pwm.tp.h: 25: unsigned char DV16_MDMOD;
   240                           ;pwm.tp.h: 26: unsigned char MGMOD;
   241                           ;pwm.tp.h: 27: unsigned char MAXOSC;
   242                           ;pwm.tp.h: 28: unsigned char MINOSC;
   243                           ;pwm.tp.h: 29: unsigned char MAD_MOD;
   244                           ;pwm.tp.h: 30: unsigned char MAG_MOD;
   245                           ;pwm.tp.h: 31: unsigned char GWMSTART;
   246                           ;pwm.tp.h: 32: unsigned char MDSTART;
   247                           ;pwm.tp.h: 33: unsigned char MGSTART;
   248                           ;pwm.tp.h: 34: unsigned char GWMMAXCO;
   249                           ;pwm.tp.h: 35: unsigned char MDMAXCO;
   250                           ;pwm.tp.h: 36: unsigned char MGMAXCO;
   251                           ;pwm.tp.h: 37: unsigned char GWMMAXCW;
   252                           ;pwm.tp.h: 38: unsigned char MDMAXCW;
   253                           ;pwm.tp.h: 39: unsigned char MGMAXCW;
   254                           ;pwm.tp.h: 40: unsigned char FIRSTPB;
   255                           ;pwm.tp.h: 41: unsigned char PROP1;
   256                           ;pwm.tp.h: 42: unsigned char PROP2;
   257                           ;pwm.tp.h: 43: unsigned char PROP3;
   258                           ;pwm.tp.h: 45: unsigned char MSTART;
   259                           ;pwm.tp.h: 46: unsigned char MMAXCO;
   260                           ;pwm.tp.h: 47: unsigned char MMAXCW;
   261                           ;pwm.tp.h: 48: unsigned char PGD;
   262                           ;pwm.tp.h: 49: unsigned char MINPWM;
   263                           ;pwm.tp.h: 50: unsigned char MAXPWM;
   264                           ;pwm.tp.h: 53: }DtPWM;
   265                           ;pwm.h: 506: void SetOsc(void);
   266                           ;czcw.tp.h: 7: typedef struct {
   267                           ;czcw.tp.h: 8: unsigned _ltrUP:1;
   268                           ;czcw.tp.h: 9: unsigned _ltrDW:1;
   269                           ;czcw.tp.h: 10: unsigned S_CW:1;
   270                           ;czcw.tp.h: 11: unsigned char przCW;
   271                           ;czcw.tp.h: 12: }DataPrCW;
   272                           ;keypad.tp.h: 7: typedef struct {
   273                           ;keypad.tp.h: 8: unsigned bk:1;
   274                           ;keypad.tp.h: 9: unsigned sbk:1;
   275                           ;keypad.tp.h: 10: unsigned ap:1;
   276                           ;keypad.tp.h: 11: unsigned dk:1;
   277                           ;keypad.tp.h: 12: unsigned fl:1;
   278                           ;keypad.tp.h: 13: }StPin;
   279                           ;keypad.h: 15: extern void StartRTdS(const unsig
      +                          ned char Index);
   280                           ;keypad.h: 16: extern unsigned char RTdS(const u
      +                          nsigned char Index);
   281                           ;pompa.tp.h: 7: typedef struct {
   282                           ;pompa.tp.h: 8: unsigned char MGPROC;
   283                           ;pompa.tp.h: 9: unsigned char MDPROC;
   284                           ;pompa.tp.h: 10: unsigned char APROC;
   285                           ;pompa.tp.h: 12: unsigned char MGPROC2;
   286                           ;pompa.tp.h: 13: }DtPMP;
   287                           ;rgl.tp.h: 4: typedef struct {
   288                           ;rgl.tp.h: 5: unsigned btco:1;
   289                           ;rgl.tp.h: 6: unsigned btcw:1;
   290                           ;rgl.tp.h: 7: unsigned fz:1;
   291                           ;rgl.tp.h: 8: unsigned med_up:1;
   292                           ;rgl.tp.h: 9: unsigned fast_up:1;
   293                           ;rgl.tp.h: 10: unsigned nmod:1;
   294                           ;rgl.tp.h: 11: unsigned del1s:1;
   295                           ;rgl.tp.h: 12: unsigned deln1:1;
   296                           ;rgl.tp.h: 13: unsigned inv_mod:1;
   297                           ;rgl.tp.h: 15: signed char x_t;
   298                           ;rgl.tp.h: 16: signed char x_f;
   299                           ;rgl.tp.h: 17: signed char x_dt;
   300                           ;rgl.tp.h: 18: signed char x_df;
   301                           ;rgl.tp.h: 20: unsigned char ytmp;
   302                           ;rgl.tp.h: 21: unsigned char srp;
   303                           ;rgl.tp.h: 22: unsigned char xmod;
   304                           ;rgl.tp.h: 23: unsigned char tmp_pwm;
   305                           ;rgl.tp.h: 25: }DtRgl;
   306                           ;rgl.h: 36: void StartMCO1F(void);
   307                           ;rgl.h: 37: void ModZgCO(void);
   308                           ;rgl.h: 38: void ModDkCO(void);
   309                           ;rgl.h: 39: void ModPruCO(void);
   310                           ;rgl.h: 40: void IncMaxCO(void);
   311                           ;rgl.h: 41: void ModPrzCO(void);
   312                           ;rgl.h: 42: void PropOPT(void);
   313                           ;rgl.h: 44: void StartCO(void);
   314                           ;rgl.h: 45: void StartMCW(void);
   315                           ;rgl.h: 47: unsigned char FirstPCW(void);
   316                           ;rgl.h: 48: void ClrMod(void);
   317                           ;rgl.h: 49: void ModToCW(void);
   318                           ;rgl.h: 50: void ModToCO(void);
   319                           ;rgl.h: 51: void IncConstCOCW(void);
   320                           ;rgl.h: 52: void ReadDataCO(void);
   321                           ;rgl.h: 53: void ReadDataCW(void);
   322                           ;rgl.h: 54: void ModZgCW(void);
   323                           ;rgl.h: 55: void ModDkCW(void);
   324                           ;rgl.h: 56: void ModPruCW(void);
   325  003DC4                     _main:
   326  000000                     
   327                           ;main.c: 85: InitOsc();
   328  003DC4  ECF9  F062         	call	_InitOsc	;wreg free
   329                           ;main.c: 86: InitGlobal();
   330  003DC8  EC9B  F034         	call	_InitGlobal	;wreg free
   331                           ;main.c: 87: InitTimer1();
   332  003DCC  EC9D  F062         	call	_InitTimer1	;wreg free
   333                           ;main.c: 88: InitPort();
   334  003DD0  EC12  F05B         	call	_InitPort	;wreg free
   335                           ;main.c: 89: InitAC();
   336  003DD4  EC17  F05F         	call	_InitAC	;wreg free
   337                           ;main.c: 90: InitPWM();
   338  003DD8  EC1E  F052         	call	_InitPWM	;wreg free
   339                           ;main.c: 91: InitI2C();
   340  003DDC  ECB0  F040         	call	_InitI2C	;wreg free
   341                           ;main.c: 92: InitReceptProc();
   342  003DE0  ECEC  F058         	call	_InitReceptProc	;wreg free
   343                           ;main.c: 93: InitUart();
   344  003DE4  EC9D  F05D         	call	_InitUart	;wreg free
   345                           ;main.c: 94: InitDataPmr();
   346  003DE8  EC9F  F034         	call	_InitDataPmr	;wreg free
   347                           ;main.c: 95: ClearData();
   348  003DEC  D928               	call	_ClearData	;wreg free
   349                           ;main.c: 99: if (!POR||!BOR)
   350  003DEE  A2D0               	btfss	4048,1,c	;volatile
   351  003DF0  D002               	goto	u30
   352  003DF2  B0D0               	btfsc	4048,0,c	;volatile
   353  003DF4  D005               	goto	l30
   354  003DF6                     u30:
   355                           ;main.c: 100: {
   356  003DF6  0100               	movlb	(_M+27) shr (0+8)
   357  003DF8  8185               	bsf	(_M+27)& (0+255),0,b
   358                           ;main.c: 103: PwrOnDelay();
   359  003DFA  EC2A  F062         	call	_PwrOnDelay	;wreg free
   360                           ;main.c: 105: }
   361  003DFE  D004               	goto	l31
   362  003E00                     l30:
   363                           ;main.c: 106: else
   364  003E00  0100               	movlb	(_M+26) shr (0+8)
   365  003E02  8F84               	bsf	(_M+26)& (0+255),7,b
   366                           ;main.c: 110: PwrOnDelay();
   367  003E04  EC2A  F062         	call	_PwrOnDelay	;wreg free
   368  003E08                     l31:
   369                           ;main.c: 112: }
   370  003E08  ECCA  F04A         	call	_RdEEParam	;wreg free
   371                           ;main.c: 117: if (!POR||!BOR)
   372  003E0C  A2D0               	btfss	4048,1,c	;volatile
   373  003E0E  D002               	goto	u60
   374  003E10  B0D0               	btfsc	4048,0,c	;volatile
   375  003E12  D004               	goto	l32
   376  003E14                     u60:
   377                           ;main.c: 118: {
   378  003E14  82D0               	bsf	4048,1,c	;volatile
   379                           ;main.c: 120: BOR=1;
   380  003E16  80D0               	bsf	4048,0,c	;volatile
   381                           ;main.c: 121: EnKonf();
   382  003E18  ECD3  F046         	call	_EnKonf	;wreg free
   383  003E1C                     l32:
   384                           ;main.c: 122: }
   385  003E1C  9483               	bcf	3971,2,c	;volatile
   386                           ;main.c: 125: switch(DtKNF.tpkt)
   387  003E1E  D00F               	goto	l34
   388  003E20                     l36:
   389                           ;main.c: 128: case 2:
   390  003E20  0E00               	movlw	0
   391  003E22  A483               	btfss	3971,2,c	;volatile
   392  003E24  0E01               	movlw	1
   393  003E26  6E00               	movwf	btemp,c
   394  003E28  EE00  F085         	lfsr	0,_M+27
   395  003E2C  3200               	rrcf	btemp,f,c
   396  003E2E  3200               	rrcf	btemp,f,c
   397  003E30  50EF               	movf	indf0,w,c
   398  003E32  1800               	xorwf	btemp,w,c
   399  003E34  0B7F               	andlw	-129
   400  003E36  1800               	xorwf	btemp,w,c
   401  003E38  6EEF               	movwf	indf0,c
   402                           ;main.c: 131: break;
   403  003E3A  D018               	goto	l33
   404  003E3C                     l38:
   405  003E3C  D00A               	goto	l39
   406                           ;main.c: 142: break;
   407  003E3E                     l34:
   408  003E3E  C1B9  FFE8         	movff	_DtKNF+7,wreg
   409  003E42  0A00               	xorlw	0
   410  003E44  E0FB               	bz	l38
   411  003E46  0A01               	xorlw	1
   412  003E48  E0EB               	bz	l36
   413  003E4A  0A03               	xorlw	3
   414  003E4C  E0E9               	bz	l36
   415  003E4E  0A01               	xorlw	1
   416  003E50  E0F5               	bz	l38
   417                           ;main.c: 134: case 3:
   418                           ;main.c: 137: break;
   419  003E52                     l39:
   420                           ;main.c: 138: }
   421                           ;main.c: 140: {
   422  003E52  0E00               	movlw	0
   423  003E54  A283               	btfss	3971,1,c	;volatile
   424  003E56  0E01               	movlw	1
   425  003E58  6E00               	movwf	btemp,c
   426  003E5A  EE00  F085         	lfsr	0,_M+27
   427  003E5E  3200               	rrcf	btemp,f,c
   428  003E60  3200               	rrcf	btemp,f,c
   429  003E62  50EF               	movf	indf0,w,c
   430  003E64  1800               	xorwf	btemp,w,c
   431  003E66  0B7F               	andlw	-129
   432  003E68  1800               	xorwf	btemp,w,c
   433  003E6A  6EEF               	movwf	indf0,c
   434  003E6C                     l33:
   435                           ;main.c: 147: if(M.ERR_BTY=eeprom_read(0x00C0))
   436  003E6C  0EC0               	movlw	192
   437  003E6E  0100               	movlb	__Lparam shr (0+8)
   438  003E70  6FF0               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   439  003E72  6BF1               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   440  003E74  ECCF  F062         	call	_eeprom_read	;wreg free
   441  003E78  EE00  F08C         	lfsr	0,_M+34
   442  003E7C  6EEF               	movwf	indf0,c
   443  003E7E  50EF               	movf	indf0,w,c
   444  003E80  E024               	bz	l40
   445                           ;main.c: 148: {
   446  003E82  EE01  F0BC         	lfsr	0,_DtKNF+10
   447  003E86  50EF               	movf	indf0,w,c
   448  003E88  E10D               	bnz	l41
   449                           ;main.c: 150: {
   450  003E8A  C08C  FFE8         	movff	_M+34,wreg
   451  003E8E  0A05               	xorlw	5
   452  003E90  E109               	bnz	l41
   453                           ;main.c: 152: {
   454  003E92  0E01               	movlw	1
   455  003E94  0100               	movlb	__Lparam shr (0+8)
   456  003E96  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
   457  003E98  C08C  FFE8         	movff	_M+34,wreg
   458  003E9C  EC83  F060         	call	_PrintErr
   459                           ;main.c: 154: ErrPTG();
   460  003EA0  EC11  F033         	call	_ErrPTG	;wreg free
   461  003EA4                     l41:
   462                           ;main.c: 155: }
   463  003EA4  0E00               	movlw	0
   464  003EA6  0100               	movlb	(_M+34) shr (0+8)
   465  003EA8  658C               	cpfsgt	(_M+34)& (0+255),b
   466  003EAA  D00D               	goto	l43
   467  003EAC  0E04               	movlw	4
   468  003EAE  618C               	cpfslt	(_M+34)& (0+255),b
   469  003EB0  D00A               	goto	l43
   470                           ;main.c: 158: {
   471  003EB2  0E01               	movlw	1
   472  003EB4  0100               	movlb	__Lparam shr (0+8)
   473  003EB6  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
   474  003EB8  C08C  FFE8         	movff	_M+34,wreg
   475  003EBC  EC83  F060         	call	_PrintErr
   476                           ;main.c: 160: ErrPTG();
   477  003EC0  EC11  F033         	call	_ErrPTG	;wreg free
   478                           ;main.c: 161: }
   479  003EC4  D002               	goto	l40
   480  003EC6                     l43:
   481                           ;main.c: 162: else M.ERR_BTY=0;
   482  003EC6  0100               	movlb	(_M+34) shr (0+8)
   483  003EC8  6B8C               	clrf	(_M+34)& (0+255),b
   484  003ECA                     l40:
   485                           ;main.c: 163: }
   486  003ECA  EC8C  F03B         	call	_PomiarZW	;wreg free
   487                           ;main.c: 167: PomiarPCO();
   488  003ECE  ECB6  F03D         	call	_PomiarPCO	;wreg free
   489                           ;main.c: 168: PomiarPCW();
   490  003ED2  EC54  F03E         	call	_PomiarPCW	;wreg free
   491                           ;main.c: 169: DtCO._newPCO=0;
   492  003ED6  0101               	movlb	(_DtCO+1) shr (0+8)
   493  003ED8  9F21               	bcf	(_DtCO+1)& (0+255),7,b
   494                           ;main.c: 170: DtCW._newPCW=0;
   495  003EDA  0101               	movlb	(_DtCW+1) shr (0+8)
   496  003EDC  9112               	bcf	(_DtCW+1)& (0+255),0,b
   497                           ;main.c: 173: RD3=0;
   498  003EDE  9683               	bcf	3971,3,c	;volatile
   499                           ;main.c: 174: RD0=0;
   500  003EE0  9083               	bcf	3971,0,c	;volatile
   501                           ;main.c: 180: M._TURBO=!RdPrt(2)||RdPrt(3);
   502  003EE2  0E02               	movlw	2
   503  003EE4  ECC4  F05B         	call	_RdPrt
   504  003EE8  E304               	bnc	u151
   505  003EEA  0E03               	movlw	3
   506  003EEC  ECC4  F05B         	call	_RdPrt
   507  003EF0  E302               	bnc	u150
   508  003EF2                     u151:
   509  003EF2  0E01               	movlw	1
   510  003EF4  D001               	goto	u160
   511  003EF6                     u150:
   512  003EF6  0E00               	movlw	0
   513  003EF8                     u160:
   514  003EF8  6E00               	movwf	btemp,c
   515  003EFA  EE00  F085         	lfsr	0,_M+27
   516  003EFE  3600               	rlcf	btemp,f,c
   517  003F00  50EF               	movf	indf0,w,c
   518  003F02  1800               	xorwf	btemp,w,c
   519  003F04  0BFD               	andlw	-3
   520  003F06  1800               	xorwf	btemp,w,c
   521  003F08  6EEF               	movwf	indf0,c
   522                           ;main.c: 181: RestartFltPrt();
   523  003F0A  D905               	call	_RestartFltPrt	;wreg free
   524                           ;main.c: 182: StartRTS(10);
   525  003F0C  0E0A               	movlw	10
   526  003F0E  EC35  F05C         	call	_StartRTS
   527                           ;main.c: 186: DtCW.PCW=65;
   528  003F12  0E41               	movlw	65
   529  003F14  CFE8 F114          	movff	wreg,_DtCW+3
   530                           ;main.c: 187: DtCO.PCO=85;
   531  003F18  0E55               	movlw	85
   532  003F1A  CFE8 F123          	movff	wreg,_DtCO+3
   533  003F1E                     l46:
   534                           ;main.c: 189: while(1)
   535                           ;main.c: 190: {
   536  003F1E  0004               	clrwdt		;#
   537                           ;main.c: 192: BitSet2(&RSDT1.outSTAT0,1,1);
   538  003F20  0100               	movlb	__Lparam shr (0+8)
   539  003F22  0EAE               	movlw	low (_RSDT1+17)
   540  003F24  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   541  003F26  0E00               	movlw	high (_RSDT1+17)
   542  003F28  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   543  003F2A  0E01               	movlw	1
   544  003F2C  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   545  003F2E  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   546  003F30  EC39  F061         	call	_BitSet2	;wreg free
   547                           ;main.c: 193: BitSet2(&RSDT1.outSTAT0,0,0);
   548  003F34  0100               	movlb	__Lparam shr (0+8)
   549  003F36  0EAE               	movlw	low (_RSDT1+17)
   550  003F38  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   551  003F3A  0E00               	movlw	high (_RSDT1+17)
   552  003F3C  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   553  003F3E  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   554  003F40  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   555  003F42  EC39  F061         	call	_BitSet2	;wreg free
   556                           ;main.c: 194: M._PRACA=M._ROZRUCH||RD0;
   557  003F46  0100               	movlb	(_M+16) shr (0+8)
   558  003F48  A57A               	btfss	(_M+16)& (0+255),2,b
   559  003F4A  B083               	btfsc	3971,0,c	;volatile
   560  003F4C  D001               	goto	u191
   561  003F4E  D002               	goto	u190
   562  003F50                     u191:
   563  003F50  0E01               	movlw	1
   564  003F52  D001               	goto	u200
   565  003F54                     u190:
   566  003F54  0E00               	movlw	0
   567  003F56                     u200:
   568  003F56  6E00               	movwf	btemp,c
   569  003F58  EE00  F085         	lfsr	0,_M+27
   570  003F5C  3600               	rlcf	btemp,f,c
   571  003F5E  3600               	rlcf	btemp,f,c
   572  003F60  50EF               	movf	indf0,w,c
   573  003F62  1800               	xorwf	btemp,w,c
   574  003F64  0BFB               	andlw	-5
   575  003F66  1800               	xorwf	btemp,w,c
   576  003F68  6EEF               	movwf	indf0,c
   577                           ;main.c: 196: ReceptDataLCD();
   578  003F6A  EC6D  F059         	call	_ReceptDataLCD	;wreg free
   579                           ;main.c: 197: MKonfiguracja();
   580  003F6E  ECD8  F046         	call	_MKonfiguracja	;wreg free
   581                           ;main.c: 199: PomiarPCO();
   582  003F72  ECB6  F03D         	call	_PomiarPCO	;wreg free
   583                           ;main.c: 200: PomiarPCW();
   584  003F76  EC54  F03E         	call	_PomiarPCW	;wreg free
   585                           ;main.c: 201: PomiarPFN();
   586  003F7A  ECCD  F03E         	call	_PomiarPFN	;wreg free
   587                           ;main.c: 202: PomiarCO();
   588  003F7E  ECF1  F037         	call	_PomiarCO	;wreg free
   589                           ;main.c: 203: PomiarCW();
   590  003F82  ECE4  F03A         	call	_PomiarCW	;wreg free
   591                           ;main.c: 204: PomiarZW();
   592  003F86  EC8C  F03B         	call	_PomiarZW	;wreg free
   593                           ;main.c: 205: FiltrPomiarowyCOCW();
   594  003F8A  ECAD  F037         	call	_FiltrPomiarowyCOCW	;wreg free
   595                           ;main.c: 206: PomiarCS();
   596  003F8E  ECBD  F03F         	call	_PomiarCS	;wreg free
   597                           ;main.c: 207: PomiarIN();
   598  003F92  ECC9  F03A         	call	_PomiarIN	;wreg free
   599                           ;main.c: 210: DecERR();
   600  003F96  ECCD  F023         	call	_DecERR	;wreg free
   601                           ;main.c: 211: DecSTR();
   602  003F9A  EC9F  F025         	call	_DecSTR	;wreg free
   603                           ;main.c: 212: DecRozruch();
   604  003F9E  EC59  F028         	call	_DecRozruch	;wreg free
   605                           ;main.c: 213: DecWylacz();
   606  003FA2  EC96  F029         	call	_DecWylacz	;wreg free
   607                           ;main.c: 214: FunkcjaSerwisowa();
   608  003FA6  ECA0  F02B         	call	_FunkcjaSerwisowa	;wreg free
   609                           ;main.c: 215: DecyzjaAntyLeg();
   610  003FAA  DB39               	call	_DecyzjaAntyLeg	;wreg free
   611                           ;main.c: 216: KolejkaPobudzen();
   612  003FAC  DA0E               	call	_KolejkaPobudzen	;wreg free
   613                           ;main.c: 217: RefLCDData();
   614  003FAE  D8F6               	call	_RefLCDData	;wreg free
   615                           ;main.c: 219: RglPmp();
   616  003FB0  ECE2  F051         	call	_RglPmp	;wreg free
   617                           ;main.c: 220: if(M._ZMKCOCW) ZmienKCOKCW();
   618  003FB4  0100               	movlb	(_M+16) shr (0+8)
   619  003FB6  B37A               	btfsc	(_M+16)& (0+255),1,b
   620  003FB8  EC38  F030         	call	_ZmienKCOKCW	;wreg free
   621                           ;main.c: 221: if(M._WYLACZ) Wylacz();
   622  003FBC  0100               	movlb	(_M+16) shr (0+8)
   623  003FBE  B17A               	btfsc	(_M+16)& (0+255),0,b
   624  003FC0  EC0E  F02E         	call	_Wylacz	;wreg free
   625                           ;main.c: 222: if(M._ROZRUCH) Rozruch();
   626  003FC4  0100               	movlb	(_M+16) shr (0+8)
   627  003FC6  B57A               	btfsc	(_M+16)& (0+255),2,b
   628  003FC8  EC58  F02C         	call	_Rozruch	;wreg free
   629                           ;main.c: 223: if(M._VWYBIEG) VWybieg();
   630  003FCC  0100               	movlb	(_M+16) shr (0+8)
   631  003FCE  BD7A               	btfsc	(_M+16)& (0+255),6,b
   632  003FD0  EC83  F02F         	call	_VWybieg	;wreg free
   633                           ;main.c: 224: ReloadPlomien();
   634  003FD4  ECFD  F030         	call	_ReloadPlomien	;wreg free
   635                           ;main.c: 225: if(M._RUSZ_PLOMIEN) RuszPlomien();
   636  003FD8  0100               	movlb	(_M+17) shr (0+8)
   637  003FDA  B17B               	btfsc	(_M+17)& (0+255),0,b
   638  003FDC  ECCC  F030         	call	_RuszPlomien	;wreg free
   639                           ;main.c: 226: ReloadCiag();
   640  003FE0  ECDD  F031         	call	_ReloadCiag	;wreg free
   641                           ;main.c: 227: if(M._RUSZ_CIAG) RuszCiag();
   642  003FE4  0100               	movlb	(_M+16) shr (0+8)
   643  003FE6  BF7A               	btfsc	(_M+16)& (0+255),7,b
   644  003FE8  EC11  F031         	call	_RuszCiag	;wreg free
   645                           ;main.c: 228: Proba48();
   646  003FEC  EC04  F032         	call	_Proba48	;wreg free
   647                           ;main.c: 229: if(M._RUSZ_48) Rusz48();
   648  003FF0  0100               	movlb	(_M+16) shr (0+8)
   649  003FF2  B77A               	btfsc	(_M+16)& (0+255),3,b
   650  003FF4  EC19  F032         	call	_Rusz48	;wreg free
   651                           ;main.c: 230: Proba48Z3();
   652  003FF8  EC8D  F032         	call	_Proba48Z3	;wreg free
   653                           ;main.c: 231: if(M._RUSZ_48Z3) Rusz48Z3();
   654  003FFC  0100               	movlb	(_M+16) shr (0+8)
   655  003FFE  B97A               	btfsc	(_M+16)& (0+255),4,b
   656  004000  ECAE  F032         	call	_Rusz48Z3	;wreg free
   657                           ;main.c: 232: if(M._BLOKUJ_3M) BlokadaL3();
   658  004004  0100               	movlb	(_M+17) shr (0+8)
   659  004006  B77B               	btfsc	(_M+17)& (0+255),3,b
   660  004008  ECDF  F02B         	call	_BlokadaL3	;wreg free
   661                           ;main.c: 233: if(M._BLOKUJ_15S)
   662  00400C  0100               	movlb	(_M+17) shr (0+8)
   663  00400E  B97B               	btfsc	(_M+17)& (0+255),4,b
   664                           ;main.c: 234: {
   665  004010  B585               	btfsc	(_M+27)& (0+255),2,b
   666  004012  D002               	goto	l57
   667  004014  EC14  F02C         	call	_Blokada15S	;wreg free
   668  004018                     l57:
   669                           ;main.c: 236: }
   670  004018  0100               	movlb	(_M+17) shr (0+8)
   671  00401A  BB7B               	btfsc	(_M+17)& (0+255),5,b
   672  00401C  EC17  F008         	call	_Moduluj	;wreg free
   673                           ;main.c: 238: if(DtKNF.robg==0)
   674  004020  EE01  F0BC         	lfsr	0,_DtKNF+10
   675  004024  50EF               	movf	indf0,w,c
   676  004026  E107               	bnz	l60
   677                           ;main.c: 239: {
   678  004028  ECB9  F02F         	call	_DetekcjaPrzeplywuWG	;wreg free
   679                           ;main.c: 241: if(M._RUSZ_POMPE) OczekujNaPrzeply
      +                          wWG();
   680  00402C  0100               	movlb	(_M+17) shr (0+8)
   681  00402E  B57B               	btfsc	(_M+17)& (0+255),2,b
   682  004030  ECFD  F02F         	call	_OczekujNaPrzeplywWG	;wreg free
   683                           ;main.c: 242: }
   684  004034  D774               	goto	l46
   685  004036                     l60:
   686                           ;main.c: 243: else
   687  004036  0100               	movlb	(_M+17) shr (0+8)
   688  004038  957B               	bcf	(_M+17)& (0+255),2,b
   689                           ;main.c: 246: M._prb_PRZ=0;
   690  00403A  9386               	bcf	(_M+28)& (0+255),1,b
   691  00403C  D770               	goto	l46
   692  00403E                     __end_of_main:
   693                           ;main.c: 254: void ClearData(void)
   694                           ;main.c: 255: {
   695  00403E                     _ClearData:
   696  000000                     
   697                           ;main.c: 256: DtKNF.enknf=0;
   698  00403E  0101               	movlb	_DtKNF shr (0+8)
   699  004040  91B2               	bcf	_DtKNF& (0+255),0,b
   700                           ;main.c: 257: M._pob_KCO=0;
   701  004042  EE00  F06A         	lfsr	0,_M
   702  004046  6AEE               	clrf	postinc0,c
   703  004048  6AEE               	clrf	postinc0,c
   704                           ;main.c: 258: M._pob_KCW=0;
   705  00404A  EE00  F06C         	lfsr	0,_M+2
   706  00404E  6AEE               	clrf	postinc0,c
   707  004050  6AEE               	clrf	postinc0,c
   708                           ;main.c: 259: M._pob_AL=0;
   709  004052  EE00  F070         	lfsr	0,_M+6
   710  004056  6AEE               	clrf	postinc0,c
   711  004058  6AEE               	clrf	postinc0,c
   712                           ;main.c: 260: M._pob_SRW=0;
   713  00405A  EE00  F06E         	lfsr	0,_M+4
   714  00405E  6AEE               	clrf	postinc0,c
   715  004060  6AEE               	clrf	postinc0,c
   716                           ;main.c: 261: M._pob_CO=0;
   717  004062  EE00  F074         	lfsr	0,_M+10
   718  004066  6AEE               	clrf	postinc0,c
   719  004068  6AEE               	clrf	postinc0,c
   720                           ;main.c: 262: M._pob_CW=0;
   721  00406A  EE00  F072         	lfsr	0,_M+8
   722  00406E  6AEE               	clrf	postinc0,c
   723  004070  6AEE               	clrf	postinc0,c
   724                           ;main.c: 263: M._pob_DzCO=0;
   725  004072  EE00  F076         	lfsr	0,_M+12
   726  004076  6AEE               	clrf	postinc0,c
   727  004078  6AEE               	clrf	postinc0,c
   728                           ;main.c: 264: M._pob_DzCW=0;
   729  00407A  EE00  F078         	lfsr	0,_M+14
   730  00407E  6AEE               	clrf	postinc0,c
   731  004080  6AEE               	clrf	postinc0,c
   732                           ;main.c: 266: M._WYLACZ=0;
   733  004082  0100               	movlb	(_M+16) shr (0+8)
   734  004084  917A               	bcf	(_M+16)& (0+255),0,b
   735                           ;main.c: 267: M._ZMKCOCW=0;
   736  004086  937A               	bcf	(_M+16)& (0+255),1,b
   737                           ;main.c: 268: M._ROZRUCH=0;
   738  004088  957A               	bcf	(_M+16)& (0+255),2,b
   739                           ;main.c: 269: M._RUSZ_48=0;
   740  00408A  977A               	bcf	(_M+16)& (0+255),3,b
   741                           ;main.c: 270: M._RUSZ_48Z3=0;
   742  00408C  997A               	bcf	(_M+16)& (0+255),4,b
   743                           ;main.c: 271: M._RUSZ_PWR=0;
   744  00408E  9B7A               	bcf	(_M+16)& (0+255),5,b
   745                           ;main.c: 272: M._VWYBIEG=0;
   746  004090  9D7A               	bcf	(_M+16)& (0+255),6,b
   747                           ;main.c: 273: M._MODULUJ=0;
   748  004092  9B7B               	bcf	(_M+17)& (0+255),5,b
   749                           ;main.c: 274: M._RUSZ_CIAG=0;
   750  004094  9F7A               	bcf	(_M+16)& (0+255),7,b
   751                           ;main.c: 275: M._RUSZ_PLOMIEN=0;
   752  004096  917B               	bcf	(_M+17)& (0+255),0,b
   753                           ;main.c: 276: M._RUSZ_RPLM=0;
   754  004098  937B               	bcf	(_M+17)& (0+255),1,b
   755                           ;main.c: 277: M._RUSZ_POMPE=0;
   756  00409A  957B               	bcf	(_M+17)& (0+255),2,b
   757                           ;main.c: 278: M._BLOKUJ_3M=0;
   758  00409C  977B               	bcf	(_M+17)& (0+255),3,b
   759                           ;main.c: 279: M._BLOKUJ_15S=0;
   760  00409E  997B               	bcf	(_M+17)& (0+255),4,b
   761                           ;main.c: 280: M._MODULUJ=0;
   762  0040A0  9B7B               	bcf	(_M+17)& (0+255),5,b
   763                           ;main.c: 282: M._AKTYWNE_AL=0;
   764  0040A2  EE00  F07E         	lfsr	0,_M+20
   765  0040A6  6AEE               	clrf	postinc0,c
   766  0040A8  6AEE               	clrf	postinc0,c
   767                           ;main.c: 283: M._AKTYWNE_SRW=0;
   768  0040AA  EE00  F07C         	lfsr	0,_M+18
   769  0040AE  6AEE               	clrf	postinc0,c
   770  0040B0  6AEE               	clrf	postinc0,c
   771                           ;main.c: 284: M._AKTYWNE_PGD=0;
   772  0040B2  EE00  F080         	lfsr	0,_M+22
   773  0040B6  6AEE               	clrf	postinc0,c
   774  0040B8  6AEE               	clrf	postinc0,c
   775                           ;main.c: 285: M._AKTYWNE_KNF=0;
   776  0040BA  EE00  F082         	lfsr	0,_M+24
   777  0040BE  6AEE               	clrf	postinc0,c
   778  0040C0  6AEE               	clrf	postinc0,c
   779                           ;main.c: 286: M._RUSZ_NTC_CO=0;
   780  0040C2  9184               	bcf	(_M+26)& (0+255),0,b
   781                           ;main.c: 287: M._RUSZ_NTC_CW=0;
   782  0040C4  9384               	bcf	(_M+26)& (0+255),1,b
   783                           ;main.c: 288: M._RUSZ_STB=0;
   784  0040C6  9784               	bcf	(_M+26)& (0+255),3,b
   785                           ;main.c: 289: M._RUSZ_MOD=0;
   786  0040C8  9984               	bcf	(_M+26)& (0+255),4,b
   787                           ;main.c: 290: M._RUSZ_CISN=0;
   788  0040CA  9B84               	bcf	(_M+26)& (0+255),5,b
   789                           ;main.c: 291: M._RUSZ_NCISN=0;
   790  0040CC  9D84               	bcf	(_M+26)& (0+255),6,b
   791                           ;main.c: 293: M._PW_START=0;
   792  0040CE  9185               	bcf	(_M+27)& (0+255),0,b
   793                           ;main.c: 294: M._RS_START=0;
   794  0040D0  9F84               	bcf	(_M+26)& (0+255),7,b
   795                           ;main.c: 295: M._TURBO=0;
   796  0040D2  9385               	bcf	(_M+27)& (0+255),1,b
   797                           ;main.c: 296: M._PRACA=0;
   798  0040D4  9585               	bcf	(_M+27)& (0+255),2,b
   799                           ;main.c: 297: M._OST_PL=0;
   800  0040D6  9785               	bcf	(_M+27)& (0+255),3,b
   801                           ;main.c: 298: M._RUN_MNMOD=0;
   802  0040D8  9985               	bcf	(_M+27)& (0+255),4,b
   803                           ;main.c: 299: M._KCW_PMP=0;
   804  0040DA  9B85               	bcf	(_M+27)& (0+255),5,b
   805                           ;main.c: 300: M._DE_VNT=0;
   806  0040DC  9D85               	bcf	(_M+27)& (0+255),6,b
   807                           ;main.c: 301: M._DE_PMP=0;
   808  0040DE  9586               	bcf	(_M+28)& (0+255),2,b
   809                           ;main.c: 302: M._RPM_CW=0;
   810  0040E0  9F85               	bcf	(_M+27)& (0+255),7,b
   811                           ;main.c: 303: M._RUSZ_NTC_IN=0;
   812  0040E2  9584               	bcf	(_M+26)& (0+255),2,b
   813                           ;main.c: 305: M.ERR_BTY=0;
   814  0040E4  6B8C               	clrf	(_M+34)& (0+255),b
   815                           ;main.c: 306: M.ROZ=0;
   816  0040E6  6B8D               	clrf	(_M+35)& (0+255),b
   817                           ;main.c: 307: M.R48=0;
   818  0040E8  6B8E               	clrf	(_M+36)& (0+255),b
   819                           ;main.c: 308: M.R48Z3=0;
   820  0040EA  6B8F               	clrf	(_M+37)& (0+255),b
   821                           ;main.c: 309: M.BL3=0;
   822  0040EC  6B90               	clrf	(_M+38)& (0+255),b
   823                           ;main.c: 310: M.BL15=0;
   824  0040EE  6B91               	clrf	(_M+39)& (0+255),b
   825                           ;main.c: 311: M.WYL=0;
   826  0040F0  6B92               	clrf	(_M+40)& (0+255),b
   827                           ;main.c: 312: M.RPR=0;
   828  0040F2  6B93               	clrf	(_M+41)& (0+255),b
   829                           ;main.c: 313: M.RPL=0;
   830  0040F4  6B94               	clrf	(_M+42)& (0+255),b
   831                           ;main.c: 314: M.RCI=0;
   832  0040F6  6B95               	clrf	(_M+43)& (0+255),b
   833                           ;main.c: 315: M.MNM=0;
   834  0040F8  6B96               	clrf	(_M+44)& (0+255),b
   835                           ;main.c: 316: M.ZKP=0;
   836  0040FA  6B97               	clrf	(_M+45)& (0+255),b
   837                           ;main.c: 317: M.VWB=0;
   838  0040FC  6B98               	clrf	(_M+46)& (0+255),b
   839                           ;main.c: 318: M.SRV=0;
   840  0040FE  6B99               	clrf	(_M+47)& (0+255),b
   841                           ;main.c: 319: M.KRS=0;
   842  004100  6B9A               	clrf	(_M+48)& (0+255),b
   843                           ;main.c: 320: M.HVZ=0;
   844  004102  6B9B               	clrf	(_M+49)& (0+255),b
   845                           ;main.c: 321: M.LICZNIK_PL=0;
   846  004104  6B87               	clrf	(_M+29)& (0+255),b
   847                           ;main.c: 322: M.LICZNIK_CIG=0;
   848  004106  6B88               	clrf	(_M+30)& (0+255),b
   849                           ;main.c: 323: M.LICZNIK_CIG2=0;
   850  004108  6B89               	clrf	(_M+31)& (0+255),b
   851                           ;main.c: 324: M.LICZNIK_CIG3=0;
   852  00410A  6B8A               	clrf	(_M+32)& (0+255),b
   853                           ;main.c: 325: M.DPR=0;
   854  00410C  6B9C               	clrf	(_M+50)& (0+255),b
   855                           ;main.c: 327: RD3=0;
   856  00410E  9683               	bcf	3971,3,c	;volatile
   857                           ;main.c: 328: RD0=0;
   858  004110  9083               	bcf	3971,0,c	;volatile
   859                           ;main.c: 329: RD2=0;
   860  004112  9483               	bcf	3971,2,c	;volatile
   861                           ;main.c: 330: }
   862  004114  0012               	return	
   863  004116                     __end_of_ClearData:
   864                           ;main.c: 332: void RestartFltPrt(void)
   865                           ;main.c: 333: {
   866  004116                     _RestartFltPrt:
   867  000000                     
   868                           ;main.c: 334: SetPrt(13,0);
   869  004116  0100               	movlb	__Lparam shr (0+8)
   870  004118  6BEA               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   871  00411A  0E0D               	movlw	13
   872  00411C  ECD5  F05B         	call	_SetPrt
   873                           ;main.c: 335: SetPrt(17,0);
   874  004120  0100               	movlb	__Lparam shr (0+8)
   875  004122  6BEA               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   876  004124  0E11               	movlw	17
   877  004126  ECD5  F05B         	call	_SetPrt
   878                           ;main.c: 336: SetPrt(9,0);
   879  00412A  0100               	movlb	__Lparam shr (0+8)
   880  00412C  6BEA               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   881  00412E  0E09               	movlw	9
   882  004130  ECD5  F05B         	call	_SetPrt
   883                           ;main.c: 337: SetPrt(10,0);
   884  004134  0100               	movlb	__Lparam shr (0+8)
   885  004136  6BEA               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   886  004138  0E0A               	movlw	10
   887  00413A  ECD5  F05B         	call	_SetPrt
   888                           ;main.c: 338: SetPrt(12,0);
   889  00413E  0100               	movlb	__Lparam shr (0+8)
   890  004140  6BEA               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   891  004142  0E0C               	movlw	12
   892  004144  ECD5  F05B         	call	_SetPrt
   893                           ;main.c: 339: SetPrt(11,0);
   894  004148  0100               	movlb	__Lparam shr (0+8)
   895  00414A  6BEA               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   896  00414C  0E0B               	movlw	11
   897  00414E  ECD5  F05B         	call	_SetPrt
   898                           ;main.c: 340: SetPrt(7,0);
   899  004152  0100               	movlb	__Lparam shr (0+8)
   900  004154  6BEA               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
   901  004156  0E07               	movlw	7
   902  004158  EFD5  F05B         	goto	_SetPrt
   903                           ;main.c: 341: }
   904  00415C                     __end_of_RestartFltPrt:
   905                           ;main.c: 344: unsigned char KodSterownika(void)
   906                           ;main.c: 345: {
   907  00415C                     _KodSterownika:
   908  000000                     
   909                           ;main.c: 347: switch(DtKNF.tpkt)
   910  00415C  D014               	goto	l67
   911  00415E                     l68:
   912                           ;main.c: 348: {
   913                           ;main.c: 350: if(!M._TURBO) return 0x10;
   914  00415E  0100               	movlb	(_M+27) shr (0+8)
   915  004160  A385               	btfss	(_M+27)& (0+255),1,b
   916  004162  0C10               	retlw	16
   917                           ;main.c: 351: else return 0x11;
   918  004164  0C11               	retlw	17
   919  004166                     l71:
   920                           ;main.c: 352: case 1:
   921                           ;main.c: 353: if(!M._TURBO) return 0x12;
   922  004166  0100               	movlb	(_M+27) shr (0+8)
   923  004168  A385               	btfss	(_M+27)& (0+255),1,b
   924  00416A  0C12               	retlw	18
   925                           ;main.c: 354: else return 0x13;
   926  00416C  0C13               	retlw	19
   927  00416E                     l74:
   928                           ;main.c: 355: case 2:
   929                           ;main.c: 356: if(!M._TURBO) return 0x14;
   930  00416E  0100               	movlb	(_M+27) shr (0+8)
   931  004170  A385               	btfss	(_M+27)& (0+255),1,b
   932  004172  0C14               	retlw	20
   933                           ;main.c: 357: else return 0x15;
   934  004174  0C15               	retlw	21
   935  004176                     l77:
   936                           ;main.c: 358: case 3:
   937                           ;main.c: 359: if(!M._TURBO) return 0x16;
   938  004176  0100               	movlb	(_M+27) shr (0+8)
   939  004178  A385               	btfss	(_M+27)& (0+255),1,b
   940  00417A  0C16               	retlw	22
   941                           ;main.c: 360: else return 0x17;
   942  00417C  0C17               	retlw	23
   943  00417E                     l80:
   944                           ;main.c: 361: default:
   945                           ;main.c: 362: if(!M._TURBO) return 0x18;
   946  00417E  0100               	movlb	(_M+27) shr (0+8)
   947  004180  A385               	btfss	(_M+27)& (0+255),1,b
   948  004182  0C18               	retlw	24
   949                           ;main.c: 363: else return 0x19;
   950  004184  0C19               	retlw	25
   951  004186                     l67:
   952  004186  C1B9  FFE8         	movff	_DtKNF+7,wreg
   953  00418A  0A00               	xorlw	0
   954  00418C  E0E8               	bz	l68
   955  00418E  0A01               	xorlw	1
   956  004190  E0EA               	bz	l71
   957  004192  0A03               	xorlw	3
   958  004194  E0EC               	bz	l74
   959  004196  0A01               	xorlw	1
   960  004198  E0EE               	bz	l77
   961  00419A  D7F1               	goto	l80
   962                           ;main.c: 365: }
   963  00419C                     __end_of_KodSterownika:
   964                           ;main.c: 368: void RefLCDData(void)
   965                           ;main.c: 369: {
   966  00419C                     _RefLCDData:
   967  000000                     
   968                           ;main.c: 370: RSDT1.outRDZ0=KodSterownika();
   969  00419C  DFDF               	call	_KodSterownika	;wreg free
   970  00419E  CFE8 F09F          	movff	wreg,_RSDT1+2
   971                           ;main.c: 371: RSDT1.outRDZ1=DtKNF.tpkt;
   972  0041A2  C1B9  F0A0         	movff	_DtKNF+7,_RSDT1+3
   973                           ;main.c: 372: BitSet2(&RSDT1.outSTAT0,2,M._PRACA
      +                          &&!M._RPM_CW&&RdPrt(5));
   974  0041A6  0100               	movlb	__Lparam shr (0+8)
   975  0041A8  0EAE               	movlw	low (_RSDT1+17)
   976  0041AA  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   977  0041AC  0E00               	movlw	high (_RSDT1+17)
   978  0041AE  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   979  0041B0  0E02               	movlw	2
   980  0041B2  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   981  0041B4  0100               	movlb	(_M+27) shr (0+8)
   982  0041B6  B585               	btfsc	(_M+27)& (0+255),2,b
   983  0041B8  BF85               	btfsc	(_M+27)& (0+255),7,b
   984  0041BA  D006               	goto	u440
   985  0041BC  0E05               	movlw	5
   986  0041BE  ECC4  F05B         	call	_RdPrt
   987  0041C2  E302               	bnc	u440
   988  0041C4  0E01               	movlw	1
   989  0041C6  D001               	goto	u450
   990  0041C8                     u440:
   991  0041C8  0E00               	movlw	0
   992  0041CA                     u450:
   993  0041CA  0100               	movlb	__Lparam shr (0+8)
   994  0041CC  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   995  0041CE  EC39  F061         	call	_BitSet2	;wreg free
   996                           ;main.c: 373: BitSet2(&RSDT1.outSTAT0,3,M._PRACA
      +                          &&M._RPM_CW&&RdPrt(5));
   997  0041D2  0100               	movlb	__Lparam shr (0+8)
   998  0041D4  0EAE               	movlw	low (_RSDT1+17)
   999  0041D6  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1000  0041D8  0E00               	movlw	high (_RSDT1+17)
  1001  0041DA  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1002  0041DC  0E03               	movlw	3
  1003  0041DE  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1004  0041E0  0100               	movlb	(_M+27) shr (0+8)
  1005  0041E2  B585               	btfsc	(_M+27)& (0+255),2,b
  1006  0041E4  AF85               	btfss	(_M+27)& (0+255),7,b
  1007  0041E6  D006               	goto	u500
  1008  0041E8  0E05               	movlw	5
  1009  0041EA  ECC4  F05B         	call	_RdPrt
  1010  0041EE  E302               	bnc	u500
  1011  0041F0  0E01               	movlw	1
  1012  0041F2  D001               	goto	u510
  1013  0041F4                     u500:
  1014  0041F4  0E00               	movlw	0
  1015  0041F6                     u510:
  1016  0041F6  0100               	movlb	__Lparam shr (0+8)
  1017  0041F8  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1018  0041FA  EC39  F061         	call	_BitSet2	;wreg free
  1019                           ;main.c: 374: BitSet2(&RSDT1.outSTAT0,4,M._AKTYW
      +                          NE_SRW);
  1020  0041FE  0100               	movlb	__Lparam shr (0+8)
  1021  004200  0EAE               	movlw	low (_RSDT1+17)
  1022  004202  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1023  004204  0E00               	movlw	high (_RSDT1+17)
  1024  004206  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1025  004208  0E04               	movlw	4
  1026  00420A  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1027  00420C  C07C  F0F1         	movff	_M+18,?_BitSet2+3
  1028  004210  EC39  F061         	call	_BitSet2	;wreg free
  1029                           ;main.c: 375: BitSet2(&RSDT1.outSTAT0,5,M._AKTYW
      +                          NE_AL);
  1030  004214  0100               	movlb	__Lparam shr (0+8)
  1031  004216  0EAE               	movlw	low (_RSDT1+17)
  1032  004218  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1033  00421A  0E00               	movlw	high (_RSDT1+17)
  1034  00421C  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1035  00421E  0E05               	movlw	5
  1036  004220  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1037  004222  C07E  F0F1         	movff	_M+20,?_BitSet2+3
  1038  004226  EC39  F061         	call	_BitSet2	;wreg free
  1039                           ;main.c: 376: BitSet2(&RSDT1.outSTAT0,6,M._AKTYW
      +                          NE_KNF);
  1040  00422A  0100               	movlb	__Lparam shr (0+8)
  1041  00422C  0EAE               	movlw	low (_RSDT1+17)
  1042  00422E  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1043  004230  0E00               	movlw	high (_RSDT1+17)
  1044  004232  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1045  004234  0E06               	movlw	6
  1046  004236  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1047  004238  C082  F0F1         	movff	_M+24,?_BitSet2+3
  1048  00423C  EC39  F061         	call	_BitSet2	;wreg free
  1049                           ;main.c: 377: BitSet2(&RSDT1.outSTAT0,7,DtKNF.en
      +                          knf);
  1050  004240  0100               	movlb	__Lparam shr (0+8)
  1051  004242  0EAE               	movlw	low (_RSDT1+17)
  1052  004244  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1053  004246  0E00               	movlw	high (_RSDT1+17)
  1054  004248  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1055  00424A  0E07               	movlw	7
  1056  00424C  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1057  00424E  EE01  F0B2         	lfsr	0,_DtKNF
  1058  004252  50EF               	movf	indf0,w,c
  1059  004254  0B01               	andlw	1
  1060  004256  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1061  004258  EC39  F061         	call	_BitSet2	;wreg free
  1062                           ;main.c: 379: BitSet2(&RSDT1.outSTAT1,0,M._pob_D
      +                          zCW);
  1063  00425C  0100               	movlb	__Lparam shr (0+8)
  1064  00425E  0EAF               	movlw	low (_RSDT1+18)
  1065  004260  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1066  004262  0E00               	movlw	high (_RSDT1+18)
  1067  004264  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1068  004266  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1069  004268  C078  F0F1         	movff	_M+14,?_BitSet2+3
  1070  00426C  EC39  F061         	call	_BitSet2	;wreg free
  1071                           ;main.c: 380: BitSet2(&RSDT1.outSTAT1,1,M._pob_D
      +                          zCO);
  1072  004270  0100               	movlb	__Lparam shr (0+8)
  1073  004272  0EAF               	movlw	low (_RSDT1+18)
  1074  004274  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1075  004276  0E00               	movlw	high (_RSDT1+18)
  1076  004278  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1077  00427A  0E01               	movlw	1
  1078  00427C  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1079  00427E  C076  F0F1         	movff	_M+12,?_BitSet2+3
  1080  004282  EC39  F061         	call	_BitSet2	;wreg free
  1081                           ;main.c: 381: BitSet2(&RSDT1.outSTAT1,5,M._AKTYW
      +                          NE_PGD);
  1082  004286  0100               	movlb	__Lparam shr (0+8)
  1083  004288  0EAF               	movlw	low (_RSDT1+18)
  1084  00428A  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1085  00428C  0E00               	movlw	high (_RSDT1+18)
  1086  00428E  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1087  004290  0E05               	movlw	5
  1088  004292  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1089  004294  C080  F0F1         	movff	_M+22,?_BitSet2+3
  1090  004298  EC39  F061         	call	_BitSet2	;wreg free
  1091                           ;main.c: 382: BitSet2(&RSDT1.outSTAT1,6,M._PRACA
      +                          &&!M._RPM_CW);
  1092  00429C  0100               	movlb	__Lparam shr (0+8)
  1093  00429E  0EAF               	movlw	low (_RSDT1+18)
  1094  0042A0  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1095  0042A2  0E00               	movlw	high (_RSDT1+18)
  1096  0042A4  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1097  0042A6  0E06               	movlw	6
  1098  0042A8  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1099  0042AA  0100               	movlb	(_M+27) shr (0+8)
  1100  0042AC  B585               	btfsc	(_M+27)& (0+255),2,b
  1101  0042AE  BF85               	btfsc	(_M+27)& (0+255),7,b
  1102  0042B0  D002               	goto	u540
  1103  0042B2  0E01               	movlw	1
  1104  0042B4  D001               	goto	u550
  1105  0042B6                     u540:
  1106  0042B6  0E00               	movlw	0
  1107  0042B8                     u550:
  1108  0042B8  0100               	movlb	__Lparam shr (0+8)
  1109  0042BA  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1110  0042BC  EC39  F061         	call	_BitSet2	;wreg free
  1111                           ;main.c: 383: BitSet2(&RSDT1.outSTAT1,7,M._PRACA
      +                          &&M._RPM_CW);
  1112  0042C0  0100               	movlb	__Lparam shr (0+8)
  1113  0042C2  0EAF               	movlw	low (_RSDT1+18)
  1114  0042C4  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1115  0042C6  0E00               	movlw	high (_RSDT1+18)
  1116  0042C8  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1117  0042CA  0E07               	movlw	7
  1118  0042CC  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1119  0042CE  0100               	movlb	(_M+27) shr (0+8)
  1120  0042D0  B585               	btfsc	(_M+27)& (0+255),2,b
  1121  0042D2  AF85               	btfss	(_M+27)& (0+255),7,b
  1122  0042D4  D002               	goto	u580
  1123  0042D6  0E01               	movlw	1
  1124  0042D8  D001               	goto	u590
  1125  0042DA                     u580:
  1126  0042DA  0E00               	movlw	0
  1127  0042DC                     u590:
  1128  0042DC  0100               	movlb	__Lparam shr (0+8)
  1129  0042DE  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1130  0042E0  EC39  F061         	call	_BitSet2	;wreg free
  1131                           ;main.c: 386: BitSet2(&RSDT1.outSTAT2,1,DtCO._er
      +                          r_CO);
  1132  0042E4  0100               	movlb	__Lparam shr (0+8)
  1133  0042E6  0EB0               	movlw	low (_RSDT1+19)
  1134  0042E8  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1135  0042EA  0E00               	movlw	high (_RSDT1+19)
  1136  0042EC  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1137  0042EE  0E01               	movlw	1
  1138  0042F0  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1139  0042F2  EE01  F020         	lfsr	0,_DtCO
  1140  0042F6  50EF               	movf	indf0,w,c
  1141  0042F8  0B01               	andlw	1
  1142  0042FA  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1143  0042FC  EC39  F061         	call	_BitSet2	;wreg free
  1144                           ;main.c: 387: BitSet2(&RSDT1.outSTAT2,0,DtCW._er
      +                          r_CW);
  1145  004300  0100               	movlb	__Lparam shr (0+8)
  1146  004302  0EB0               	movlw	low (_RSDT1+19)
  1147  004304  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1148  004306  0E00               	movlw	high (_RSDT1+19)
  1149  004308  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1150  00430A  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1151  00430C  EE01  F011         	lfsr	0,_DtCW
  1152  004310  50EF               	movf	indf0,w,c
  1153  004312  0B01               	andlw	1
  1154  004314  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1155  004316  EC39  F061         	call	_BitSet2	;wreg free
  1156                           ;main.c: 388: BitSet2(&RSDT1.outSTAT2,2,DtCS._er
      +                          ror);
  1157  00431A  0100               	movlb	__Lparam shr (0+8)
  1158  00431C  0EB0               	movlw	low (_RSDT1+19)
  1159  00431E  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1160  004320  0E00               	movlw	high (_RSDT1+19)
  1161  004322  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1162  004324  0E02               	movlw	2
  1163  004326  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1164  004328  EE01  F004         	lfsr	0,_DtCS
  1165  00432C  30EF               	rrcf	indf0,w,c
  1166  00432E  6E00               	movwf	btemp,c
  1167  004330  3200               	rrcf	btemp,f,c
  1168  004332  3000               	rrcf	btemp,w,c
  1169  004334  0B01               	andlw	1
  1170  004336  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1171  004338  EC39  F061         	call	_BitSet2	;wreg free
  1172                           ;main.c: 389: BitSet2(&RSDT1.outSTAT2,3,DtCS._no
      +                          _mont);
  1173  00433C  0100               	movlb	__Lparam shr (0+8)
  1174  00433E  0EB0               	movlw	low (_RSDT1+19)
  1175  004340  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1176  004342  0E00               	movlw	high (_RSDT1+19)
  1177  004344  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1178  004346  0E03               	movlw	3
  1179  004348  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1180  00434A  C105  F0F1         	movff	_DtCS+1,?_BitSet2+3
  1181  00434E  EC39  F061         	call	_BitSet2	;wreg free
  1182                           ;main.c: 391: BitSet2(&RSDT1.outSTAT3,0,DtIN._er
      +                          r_IN);
  1183  004352  0100               	movlb	__Lparam shr (0+8)
  1184  004354  0EB1               	movlw	low (_RSDT1+20)
  1185  004356  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1186  004358  0E00               	movlw	high (_RSDT1+20)
  1187  00435A  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1188  00435C  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1189  00435E  EE01  F031         	lfsr	0,_DtIN
  1190  004362  50EF               	movf	indf0,w,c
  1191  004364  0B01               	andlw	1
  1192  004366  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1193  004368  EC39  F061         	call	_BitSet2	;wreg free
  1194                           ;main.c: 392: BitSet2(&RSDT1.outSTAT3,1,(DtKNF.r
      +                          dpm!=0)?1:0);
  1195  00436C  0100               	movlb	__Lparam shr (0+8)
  1196  00436E  0EB1               	movlw	low (_RSDT1+20)
  1197  004370  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1198  004372  0E00               	movlw	high (_RSDT1+20)
  1199  004374  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1200  004376  0E01               	movlw	1
  1201  004378  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1202  00437A  EE01  F0BF         	lfsr	0,_DtKNF+13
  1203  00437E  50EF               	movf	indf0,w,c
  1204  004380  0E00               	movlw	0
  1205  004382  A4D8               	btfss	status,2,c
  1206  004384  0E01               	movlw	1
  1207  004386  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1208  004388  EC39  F061         	call	_BitSet2	;wreg free
  1209                           ;main.c: 394: BitSet2(&RSDT1.outKSTAT0,0,(RB6)?0
      +                          :1);
  1210  00438C  0100               	movlb	__Lparam shr (0+8)
  1211  00438E  0EB5               	movlw	low (_RSDT1+24)
  1212  004390  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1213  004392  0E00               	movlw	high (_RSDT1+24)
  1214  004394  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1215  004396  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1216  004398  0E00               	movlw	0
  1217  00439A  AC81               	btfss	3969,6,c	;volatile
  1218  00439C  0E01               	movlw	1
  1219  00439E  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1220  0043A0  EC39  F061         	call	_BitSet2	;wreg free
  1221                           ;main.c: 395: BitSet2(&RSDT1.outKSTAT0,1,(DtKNF.
      +                          tpkt==0)?1:0);
  1222  0043A4  0100               	movlb	__Lparam shr (0+8)
  1223  0043A6  0EB5               	movlw	low (_RSDT1+24)
  1224  0043A8  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1225  0043AA  0E00               	movlw	high (_RSDT1+24)
  1226  0043AC  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1227  0043AE  0E01               	movlw	1
  1228  0043B0  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1229  0043B2  EE01  F0B9         	lfsr	0,_DtKNF+7
  1230  0043B6  50EF               	movf	indf0,w,c
  1231  0043B8  0E00               	movlw	0
  1232  0043BA  B4D8               	btfsc	status,2,c
  1233  0043BC  0E01               	movlw	1
  1234  0043BE  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1235  0043C0  EC39  F061         	call	_BitSet2	;wreg free
  1236                           ;main.c: 396: RSDT1.outPP=PMP.APROC;
  1237  0043C4  C02B  F0B3         	movff	_PMP+2,_RSDT1+22
  1238                           ;main.c: 397: }
  1239  0043C8  0012               	return	
  1240  0043CA                     __end_of_RefLCDData:
  1241                           ;main.c: 401: void KolejkaPobudzen(void)
  1242                           ;main.c: 402: {
  1243  0043CA                     _KolejkaPobudzen:
  1244  000000                     
  1245                           ;main.c: 403: unsigned char wr=0;
  1246  0043CA  6AD9               	clrf	fsr2l,c
  1247                           ;main.c: 406: if(M._AKTYWNE_KNF)
  1248  0043CC  0100               	movlb	(_M+24) shr (0+8)
  1249  0043CE  5182               	movf	(_M+24)& (0+255),w,b
  1250  0043D0  1183               	iorwf	(_M+25)& (0+255),w,b
  1251  0043D2  E045               	bz	l85
  1252                           ;main.c: 407: {
  1253  0043D4  EE00  F06E         	lfsr	0,_M+4
  1254  0043D8  6AEE               	clrf	postinc0,c
  1255  0043DA  6AEE               	clrf	postinc0,c
  1256                           ;main.c: 409: M._pob_AL=0;
  1257  0043DC  EE00  F070         	lfsr	0,_M+6
  1258  0043E0  6AEE               	clrf	postinc0,c
  1259  0043E2  6AEE               	clrf	postinc0,c
  1260                           ;main.c: 410: M._pob_CO=0;
  1261  0043E4  EE00  F074         	lfsr	0,_M+10
  1262  0043E8  6AEE               	clrf	postinc0,c
  1263  0043EA  6AEE               	clrf	postinc0,c
  1264                           ;main.c: 411: M._pob_CW=0;
  1265  0043EC  EE00  F072         	lfsr	0,_M+8
  1266  0043F0  6AEE               	clrf	postinc0,c
  1267  0043F2  6AEE               	clrf	postinc0,c
  1268                           ;main.c: 412: M._pob_DzCO=0;
  1269  0043F4  EE00  F076         	lfsr	0,_M+12
  1270  0043F8  6AEE               	clrf	postinc0,c
  1271  0043FA  6AEE               	clrf	postinc0,c
  1272                           ;main.c: 413: M._pob_DzCW=0;
  1273  0043FC  EE00  F078         	lfsr	0,_M+14
  1274  004400  6AEE               	clrf	postinc0,c
  1275  004402  6AEE               	clrf	postinc0,c
  1276                           ;main.c: 414: if((PFN.poz==2)||(PFN.poz==3))
  1277  004404  0101               	movlb	(_PFN+1) shr (0+8)
  1278  004406  510D               	movf	(_PFN+1)& (0+255),w,b
  1279  004408  0A02               	xorlw	2
  1280  00440A  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1281  00440C  E004               	bz	u630
  1282  00440E  510D               	movf	(_PFN+1)& (0+255),w,b
  1283  004410  0A03               	xorlw	3
  1284  004412  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1285  004414  E11B               	bnz	l86
  1286  004416                     u630:
  1287                           ;main.c: 415: {
  1288  004416  0101               	movlb	_DtKNF shr (0+8)
  1289  004418  A5B2               	btfss	_DtKNF& (0+255),2,b
  1290  00441A  D006               	goto	l87
  1291  00441C  0100               	movlb	(_M+2) shr (0+8)
  1292  00441E  0E01               	movlw	1
  1293  004420  6F6C               	movwf	(_M+2)& (0+255),b
  1294  004422  0E00               	movlw	0
  1295  004424  6B6D               	clrf	(_M+3)& (0+255),b
  1296  004426  D004               	goto	l88
  1297  004428                     l87:
  1298                           ;main.c: 417: else M._pob_KCW=0;
  1299  004428  EE00  F06C         	lfsr	0,_M+2
  1300  00442C  6AEE               	clrf	postinc0,c
  1301  00442E  6AEE               	clrf	postinc0,c
  1302  004430                     l88:
  1303                           ;main.c: 418: if(DtKNF.wymCO)
  1304  004430  0101               	movlb	_DtKNF shr (0+8)
  1305  004432  A3B2               	btfss	_DtKNF& (0+255),1,b
  1306  004434  D006               	goto	l89
  1307                           ;main.c: 419: {
  1308  004436  0100               	movlb	_M shr (0+8)
  1309  004438  0E01               	movlw	1
  1310  00443A  6F6A               	movwf	_M& (0+255),b
  1311  00443C  6B6B               	clrf	(_M+1)& (0+255),b
  1312                           ;main.c: 421: M._BLOKUJ_15S=0;
  1313  00443E  997B               	bcf	(_M+17)& (0+255),4,b
  1314                           ;main.c: 422: }
  1315  004440  0C00               	retlw	0
  1316  004442                     l89:
  1317                           ;main.c: 423: else M._pob_KCO=0;
  1318  004442  EE00  F06A         	lfsr	0,_M
  1319  004446  6AEE               	clrf	postinc0,c
  1320  004448  6AEE               	clrf	postinc0,c
  1321                           ;main.c: 424: }
  1322  00444A  0012               	return	
  1323  00444C                     l86:
  1324                           ;main.c: 425: else
  1325  00444C  EE00  F06C         	lfsr	0,_M+2
  1326  004450  6AEE               	clrf	postinc0,c
  1327  004452  6AEE               	clrf	postinc0,c
  1328                           ;main.c: 428: M._pob_KCO=0;
  1329  004454  EE00  F06A         	lfsr	0,_M
  1330  004458  6AEE               	clrf	postinc0,c
  1331  00445A  6AEE               	clrf	postinc0,c
  1332                           ;main.c: 429: }
  1333  00445C  0012               	return	
  1334  00445E                     l85:
  1335                           ;main.c: 431: else
  1336  00445E  EE00  F06C         	lfsr	0,_M+2
  1337  004462  6AEE               	clrf	postinc0,c
  1338  004464  6AEE               	clrf	postinc0,c
  1339                           ;main.c: 435: M._pob_KCO=0;
  1340  004466  EE00  F06A         	lfsr	0,_M
  1341  00446A  6AEE               	clrf	postinc0,c
  1342  00446C  6AEE               	clrf	postinc0,c
  1343                           ;main.c: 436: if(M._AKTYWNE_SRW&&(PFN.poz==3))
  1344  00446E  0100               	movlb	(_M+18) shr (0+8)
  1345  004470  517C               	movf	(_M+18)& (0+255),w,b
  1346  004472  117D               	iorwf	(_M+19)& (0+255),w,b
  1347  004474  E020               	bz	l93
  1348  004476  0101               	movlb	(_PFN+1) shr (0+8)
  1349  004478  510D               	movf	(_PFN+1)& (0+255),w,b
  1350  00447A  0A03               	xorlw	3
  1351  00447C  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1352  00447E  E11B               	bnz	l93
  1353                           ;main.c: 437: {
  1354  004480  0100               	movlb	(_M+4) shr (0+8)
  1355  004482  0E01               	movlw	1
  1356  004484  6F6E               	movwf	(_M+4)& (0+255),b
  1357  004486  0E00               	movlw	0
  1358  004488  6B6F               	clrf	(_M+5)& (0+255),b
  1359                           ;main.c: 439: M._pob_AL=0;
  1360  00448A  EE00  F070         	lfsr	0,_M+6
  1361  00448E  6AEE               	clrf	postinc0,c
  1362  004490  6AEE               	clrf	postinc0,c
  1363                           ;main.c: 440: M._pob_CW=0;
  1364  004492  EE00  F072         	lfsr	0,_M+8
  1365  004496  6AEE               	clrf	postinc0,c
  1366  004498  6AEE               	clrf	postinc0,c
  1367                           ;main.c: 441: M._pob_CO=0;
  1368  00449A  EE00  F074         	lfsr	0,_M+10
  1369  00449E  6AEE               	clrf	postinc0,c
  1370  0044A0  6AEE               	clrf	postinc0,c
  1371                           ;main.c: 442: M._pob_DzCO=0;
  1372  0044A2  EE00  F076         	lfsr	0,_M+12
  1373  0044A6  6AEE               	clrf	postinc0,c
  1374  0044A8  6AEE               	clrf	postinc0,c
  1375                           ;main.c: 443: M._pob_DzCW=0;
  1376  0044AA  EE00  F078         	lfsr	0,_M+14
  1377  0044AE  6AEE               	clrf	postinc0,c
  1378  0044B0  6AEE               	clrf	postinc0,c
  1379                           ;main.c: 444: M._BLOKUJ_15S=0;
  1380  0044B2  997B               	bcf	(_M+17)& (0+255),4,b
  1381                           ;main.c: 445: }
  1382  0044B4  0012               	return	
  1383  0044B6                     l93:
  1384                           ;main.c: 446: else
  1385  0044B6  EE00  F06E         	lfsr	0,_M+4
  1386  0044BA  6AEE               	clrf	postinc0,c
  1387  0044BC  6AEE               	clrf	postinc0,c
  1388                           ;main.c: 450: if(M._AKTYWNE_AL)
  1389  0044BE  0100               	movlb	(_M+20) shr (0+8)
  1390  0044C0  517E               	movf	(_M+20)& (0+255),w,b
  1391  0044C2  117F               	iorwf	(_M+21)& (0+255),w,b
  1392  0044C4  E027               	bz	l95
  1393                           ;main.c: 451: {
  1394  0044C6  0E45               	movlw	69
  1395  0044C8  0101               	movlb	(_DtCW+2) shr (0+8)
  1396  0044CA  6113               	cpfslt	(_DtCW+2)& (0+255),b
  1397  0044CC  D006               	goto	l96
  1398  0044CE  0100               	movlb	(_M+6) shr (0+8)
  1399  0044D0  0E01               	movlw	1
  1400  0044D2  6F70               	movwf	(_M+6)& (0+255),b
  1401  0044D4  0E00               	movlw	0
  1402  0044D6  6B71               	clrf	(_M+7)& (0+255),b
  1403  0044D8  D00C               	goto	l97
  1404  0044DA                     l96:
  1405                           ;main.c: 453: else
  1406  0044DA  0E45               	movlw	69
  1407  0044DC  0101               	movlb	(_DtCW+2) shr (0+8)
  1408  0044DE  6513               	cpfsgt	(_DtCW+2)& (0+255),b
  1409  0044E0  D008               	goto	l97
  1410                           ;main.c: 456: {
  1411  0044E2  EE00  F070         	lfsr	0,_M+6
  1412  0044E6  6AEE               	clrf	postinc0,c
  1413  0044E8  6AEE               	clrf	postinc0,c
  1414                           ;main.c: 458: M._AKTYWNE_AL=0;
  1415  0044EA  EE00  F07E         	lfsr	0,_M+20
  1416  0044EE  6AEE               	clrf	postinc0,c
  1417  0044F0  6AEE               	clrf	postinc0,c
  1418  0044F2                     l97:
  1419                           ;main.c: 459: }
  1420  0044F2  EE00  F072         	lfsr	0,_M+8
  1421  0044F6  6AEE               	clrf	postinc0,c
  1422  0044F8  6AEE               	clrf	postinc0,c
  1423                           ;main.c: 462: M._pob_CO=0;
  1424  0044FA  EE00  F074         	lfsr	0,_M+10
  1425  0044FE  6AEE               	clrf	postinc0,c
  1426  004500  6AEE               	clrf	postinc0,c
  1427                           ;main.c: 463: M._pob_DzCO=0;
  1428  004502  EE00  F076         	lfsr	0,_M+12
  1429  004506  6AEE               	clrf	postinc0,c
  1430  004508  6AEE               	clrf	postinc0,c
  1431                           ;main.c: 464: M._pob_DzCW=0;
  1432  00450A  EE00  F078         	lfsr	0,_M+14
  1433  00450E  6AEE               	clrf	postinc0,c
  1434  004510  6AEE               	clrf	postinc0,c
  1435                           ;main.c: 465: }
  1436  004512  0012               	return	
  1437  004514                     l95:
  1438                           ;main.c: 466: else
  1439  004514  EE00  F070         	lfsr	0,_M+6
  1440  004518  6AEE               	clrf	postinc0,c
  1441  00451A  6AEE               	clrf	postinc0,c
  1442                           ;main.c: 470: if(DtKNF.tpkt!=0) wr=RdPrt(11)&&((
      +                          PFN.poz==2)||(PFN.poz==3));
  1443  00451C  EE01  F0B9         	lfsr	0,_DtKNF+7
  1444  004520  50EF               	movf	indf0,w,c
  1445  004522  E00F               	bz	l100
  1446  004524  0E0B               	movlw	11
  1447  004526  ECC4  F05B         	call	_RdPrt
  1448  00452A  E31A               	bnc	u850
  1449  00452C  0101               	movlb	(_PFN+1) shr (0+8)
  1450  00452E  510D               	movf	(_PFN+1)& (0+255),w,b
  1451  004530  0A02               	xorlw	2
  1452  004532  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1453  004534  E004               	bz	u771
  1454  004536  510D               	movf	(_PFN+1)& (0+255),w,b
  1455  004538  0A03               	xorlw	3
  1456  00453A  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1457  00453C  E111               	bnz	u850
  1458  00453E                     u771:
  1459  00453E  0E01               	movlw	1
  1460  004540  D010               	goto	u860
  1461  004542                     l100:
  1462                           ;main.c: 471: else wr=DtCW._wpz_CW&&DtCO._pz_CO&
      +                          &((PFN.poz==2)||(PFN.poz==3));
  1463  004542  0101               	movlb	_DtCW shr (0+8)
  1464  004544  A711               	btfss	_DtCW& (0+255),3,b
  1465  004546  D00C               	goto	u850
  1466  004548  0101               	movlb	(_DtCO+1) shr (0+8)
  1467  00454A  A321               	btfss	(_DtCO+1)& (0+255),1,b
  1468  00454C  D009               	goto	u850
  1469  00454E  0101               	movlb	(_PFN+1) shr (0+8)
  1470  004550  510D               	movf	(_PFN+1)& (0+255),w,b
  1471  004552  0A02               	xorlw	2
  1472  004554  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1473  004556  E0F3               	bz	u771
  1474  004558  510D               	movf	(_PFN+1)& (0+255),w,b
  1475  00455A  0A03               	xorlw	3
  1476  00455C  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1477  00455E  E0EF               	bz	u771
  1478  004560                     u850:
  1479  004560  0E00               	movlw	0
  1480  004562                     u860:
  1481  004562  0100               	movlb	__Lparam shr (0+8)
  1482  004564  6FEA               	movwf	?a_KolejkaPobudzen^(__Lparam& (0+65280)),
      +                          b
  1483                           ;main.c: 472: if(wr!=0)
  1484  004566  51EA               	movf	?a_KolejkaPobudzen^(__Lparam& (0+65280)),w
  1485  004568  E012               	bz	l102
  1486                           ;main.c: 473: {
  1487  00456A  0100               	movlb	(_M+8) shr (0+8)
  1488  00456C  0E01               	movlw	1
  1489  00456E  6F72               	movwf	(_M+8)& (0+255),b
  1490  004570  0E00               	movlw	0
  1491  004572  6B73               	clrf	(_M+9)& (0+255),b
  1492                           ;main.c: 475: M._pob_CO=0;
  1493  004574  EE00  F074         	lfsr	0,_M+10
  1494  004578  6AEE               	clrf	postinc0,c
  1495  00457A  6AEE               	clrf	postinc0,c
  1496                           ;main.c: 476: M._pob_DzCO=0;
  1497  00457C  EE00  F076         	lfsr	0,_M+12
  1498  004580  6AEE               	clrf	postinc0,c
  1499  004582  6AEE               	clrf	postinc0,c
  1500                           ;main.c: 477: M._pob_DzCW=0;
  1501  004584  EE00  F078         	lfsr	0,_M+14
  1502  004588  6AEE               	clrf	postinc0,c
  1503  00458A  6AEE               	clrf	postinc0,c
  1504                           ;main.c: 478: }
  1505  00458C  0012               	return	
  1506  00458E                     l102:
  1507                           ;main.c: 479: else
  1508  00458E  EE00  F072         	lfsr	0,_M+8
  1509  004592  6AEE               	clrf	postinc0,c
  1510  004594  6AEE               	clrf	postinc0,c
  1511                           ;main.c: 483: if(RdPrt(12)&&(PFN.poz==3))
  1512  004596  0E0C               	movlw	12
  1513  004598  ECC4  F05B         	call	_RdPrt
  1514  00459C  E313               	bnc	l104
  1515  00459E  0101               	movlb	(_PFN+1) shr (0+8)
  1516  0045A0  510D               	movf	(_PFN+1)& (0+255),w,b
  1517  0045A2  0A03               	xorlw	3
  1518  0045A4  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1519  0045A6  E10E               	bnz	l104
  1520                           ;main.c: 484: {
  1521  0045A8  0100               	movlb	(_M+10) shr (0+8)
  1522  0045AA  0E01               	movlw	1
  1523  0045AC  6F74               	movwf	(_M+10)& (0+255),b
  1524  0045AE  0E00               	movlw	0
  1525  0045B0  6B75               	clrf	(_M+11)& (0+255),b
  1526                           ;main.c: 486: M._pob_DzCO=0;
  1527  0045B2  EE00  F076         	lfsr	0,_M+12
  1528  0045B6  6AEE               	clrf	postinc0,c
  1529  0045B8  6AEE               	clrf	postinc0,c
  1530                           ;main.c: 487: M._pob_DzCW=0;
  1531  0045BA  EE00  F078         	lfsr	0,_M+14
  1532  0045BE  6AEE               	clrf	postinc0,c
  1533  0045C0  6AEE               	clrf	postinc0,c
  1534                           ;main.c: 488: }
  1535  0045C2  0012               	return	
  1536  0045C4                     l104:
  1537                           ;main.c: 489: else
  1538  0045C4  EE00  F074         	lfsr	0,_M+10
  1539  0045C8  6AEE               	clrf	postinc0,c
  1540  0045CA  6AEE               	clrf	postinc0,c
  1541                           ;main.c: 493: if(RdPrt(9))
  1542  0045CC  0E09               	movlw	9
  1543  0045CE  ECC4  F05B         	call	_RdPrt
  1544  0045D2  E30A               	bnc	l106
  1545                           ;main.c: 494: {
  1546  0045D4  0100               	movlb	(_M+12) shr (0+8)
  1547  0045D6  0E01               	movlw	1
  1548  0045D8  6F76               	movwf	(_M+12)& (0+255),b
  1549  0045DA  0E00               	movlw	0
  1550  0045DC  6B77               	clrf	(_M+13)& (0+255),b
  1551                           ;main.c: 496: M._pob_DzCW=0;
  1552  0045DE  EE00  F078         	lfsr	0,_M+14
  1553  0045E2  6AEE               	clrf	postinc0,c
  1554  0045E4  6AEE               	clrf	postinc0,c
  1555                           ;main.c: 497: }
  1556  0045E6  0012               	return	
  1557  0045E8                     l106:
  1558                           ;main.c: 498: else
  1559  0045E8  EE00  F076         	lfsr	0,_M+12
  1560  0045EC  6AEE               	clrf	postinc0,c
  1561  0045EE  6AEE               	clrf	postinc0,c
  1562                           ;main.c: 501: if(DtKNF.tpkt==0)
  1563  0045F0  EE01  F0B9         	lfsr	0,_DtKNF+7
  1564  0045F4  50EF               	movf	indf0,w,c
  1565  0045F6  E10E               	bnz	l108
  1566                           ;main.c: 502: {
  1567  0045F8  0E0A               	movlw	10
  1568  0045FA  ECC4  F05B         	call	_RdPrt
  1569  0045FE  E305               	bnc	l109
  1570  004600  0100               	movlb	(_M+14) shr (0+8)
  1571  004602  0E01               	movlw	1
  1572  004604  6F78               	movwf	(_M+14)& (0+255),b
  1573  004606  6B79               	clrf	(_M+15)& (0+255),b
  1574  004608  0C00               	retlw	0
  1575  00460A                     l109:
  1576                           ;main.c: 505: else M._pob_DzCW=0;
  1577  00460A  EE00  F078         	lfsr	0,_M+14
  1578  00460E  6AEE               	clrf	postinc0,c
  1579  004610  6AEE               	clrf	postinc0,c
  1580                           ;main.c: 506: }
  1581  004612  0012               	return	
  1582  004614                     l108:
  1583                           ;main.c: 507: else M._pob_DzCW=0;
  1584  004614  EE00  F078         	lfsr	0,_M+14
  1585  004618  6AEE               	clrf	postinc0,c
  1586  00461A  6AEE               	clrf	postinc0,c
  1587                           ;main.c: 508: }
  1588  00461C  0012               	return	
  1589  00461E                     __end_of_KolejkaPobudzen:
  1590                           ;main.c: 518: void DecyzjaAntyLeg(void)
  1591                           ;main.c: 519: {
  1592  00461E                     _DecyzjaAntyLeg:
  1593  000000                     
  1594                           ;main.c: 626: if(DtKNF.tpkt==0)
  1595  00461E  EE01  F0B9         	lfsr	0,_DtKNF+7
  1596  004622  50EF               	movf	indf0,w,c
  1597  004624  E001 D0B3          	bnz	l113
  1598                           ;main.c: 627: {
  1599  004628  0100               	movlb	(_M+20) shr (0+8)
  1600  00462A  517E               	movf	(_M+20)& (0+255),w,b
  1601  00462C  117F               	iorwf	(_M+21)& (0+255),w,b
  1602  00462E  E042               	bz	l114
  1603                           ;main.c: 631: {
  1604  004630  0101               	movlb	_DtCW shr (0+8)
  1605  004632  B111               	btfsc	_DtCW& (0+255),0,b
  1606  004634  D003               	goto	u980
  1607  004636  0101               	movlb	_DtCO shr (0+8)
  1608  004638  A120               	btfss	_DtCO& (0+255),0,b
  1609  00463A  D005               	goto	l115
  1610  00463C                     u980:
  1611                           ;main.c: 633: {
  1612  00463C  EE00  F07E         	lfsr	0,_M+20
  1613  004640  6AEE               	clrf	postinc0,c
  1614  004642  6AEE               	clrf	postinc0,c
  1615                           ;main.c: 635: return;
  1616  004644  0012               	return	
  1617  004646                     l115:
  1618                           ;main.c: 636: }
  1619  004646  EE01  F0C8         	lfsr	0,_DtKNF+22
  1620  00464A  50EF               	movf	indf0,w,c
  1621  00464C  E005               	bz	l116
  1622                           ;main.c: 638: {
  1623  00464E  0E01               	movlw	1
  1624  004650  EC92  F05C         	call	_StartRTG
  1625                           ;main.c: 640: M.LICZNIK_ANL=0;
  1626  004654  0100               	movlb	(_M+33) shr (0+8)
  1627  004656  6B8B               	clrf	(_M+33)& (0+255),b
  1628  004658                     l116:
  1629                           ;main.c: 641: }
  1630  004658  0100               	movlb	(_M+24) shr (0+8)
  1631  00465A  5182               	movf	(_M+24)& (0+255),w,b
  1632  00465C  1183               	iorwf	(_M+25)& (0+255),w,b
  1633  00465E  E103               	bnz	u1020
  1634  004660  517C               	movf	(_M+18)& (0+255),w,b
  1635  004662  117D               	iorwf	(_M+19)& (0+255),w,b
  1636  004664  E005               	bz	l117
  1637  004666                     u1020:
  1638                           ;main.c: 643: {
  1639  004666  EE00  F07E         	lfsr	0,_M+20
  1640  00466A  6AEE               	clrf	postinc0,c
  1641  00466C  6AEE               	clrf	postinc0,c
  1642                           ;main.c: 645: return;
  1643  00466E  0012               	return	
  1644  004670                     l117:
  1645                           ;main.c: 646: }
  1646  004670  0101               	movlb	(_PFN+1) shr (0+8)
  1647  004672  510D               	movf	(_PFN+1)& (0+255),w,b
  1648  004674  0A02               	xorlw	2
  1649  004676  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1650  004678  E009               	bz	l118
  1651  00467A  510D               	movf	(_PFN+1)& (0+255),w,b
  1652  00467C  0A03               	xorlw	3
  1653  00467E  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1654  004680  E005               	bz	l118
  1655                           ;main.c: 649: {
  1656  004682  EE00  F07E         	lfsr	0,_M+20
  1657  004686  6AEE               	clrf	postinc0,c
  1658  004688  6AEE               	clrf	postinc0,c
  1659                           ;main.c: 651: return;
  1660  00468A  0012               	return	
  1661  00468C                     l118:
  1662                           ;main.c: 652: }
  1663  00468C  0E04               	movlw	4
  1664  00468E  EC74  F05C         	call	_RTM
  1665  004692  6E00               	movwf	btemp,c
  1666  004694  0E3C               	movlw	60
  1667  004696  5C00               	subwf	btemp,w,c
  1668  004698  E305               	bnc	l119
  1669                           ;main.c: 655: {
  1670  00469A  EE00  F07E         	lfsr	0,_M+20
  1671  00469E  6AEE               	clrf	postinc0,c
  1672  0046A0  6AEE               	clrf	postinc0,c
  1673                           ;main.c: 657: return;
  1674  0046A2  0012               	return	
  1675  0046A4                     l119:
  1676                           ;main.c: 658: }
  1677  0046A4  0101               	movlb	_PFN shr (0+8)
  1678  0046A6  AB0C               	btfss	_PFN& (0+255),5,b
  1679  0046A8  D005               	goto	l114
  1680                           ;main.c: 662: {
  1681  0046AA  EE00  F07E         	lfsr	0,_M+20
  1682  0046AE  6AEE               	clrf	postinc0,c
  1683  0046B0  6AEE               	clrf	postinc0,c
  1684                           ;main.c: 664: return;
  1685  0046B2  0012               	return	
  1686  0046B4                     l114:
  1687                           ;main.c: 665: }
  1688  0046B4  0100               	movlb	(_M+20) shr (0+8)
  1689  0046B6  517E               	movf	(_M+20)& (0+255),w,b
  1690  0046B8  117F               	iorwf	(_M+21)& (0+255),w,b
  1691  0046BA  E163               	bnz	l121
  1692                           ;main.c: 670: {
  1693  0046BC  5182               	movf	(_M+24)& (0+255),w,b
  1694  0046BE  1183               	iorwf	(_M+25)& (0+255),w,b
  1695  0046C0  A4D8               	btfss	status,2,c
  1696  0046C2  0012               	return	
  1697  0046C4  517C               	movf	(_M+18)& (0+255),w,b
  1698  0046C6  117D               	iorwf	(_M+19)& (0+255),w,b
  1699  0046C8  A4D8               	btfss	status,2,c
  1700  0046CA  0012               	return	
  1701                           ;main.c: 672: {
  1702                           ;main.c: 674: }
  1703  0046CC  EE01  F0C8         	lfsr	0,_DtKNF+22
  1704  0046D0  50EF               	movf	indf0,w,c
  1705  0046D2  E02F               	bz	l123
  1706                           ;main.c: 678: {
  1707  0046D4  0E01               	movlw	1
  1708  0046D6  ECAA  F05C         	call	_RTG
  1709  0046DA  6E00               	movwf	btemp,c
  1710  0046DC  0E01               	movlw	1
  1711  0046DE  5C00               	subwf	btemp,w,c
  1712  0046E0  E328               	bnc	l123
  1713                           ;main.c: 680: {
  1714  0046E2  0E01               	movlw	1
  1715  0046E4  EC92  F05C         	call	_StartRTG
  1716                           ;main.c: 682: M.LICZNIK_ANL++;
  1717  0046E8  0100               	movlb	(_M+33) shr (0+8)
  1718  0046EA  2B8B               	incf	(_M+33)& (0+255),f,b
  1719                           ;main.c: 683: if(M.LICZNIK_ANL>=168)
  1720  0046EC  0EA7               	movlw	-89
  1721  0046EE  658B               	cpfsgt	(_M+33)& (0+255),b
  1722  0046F0  D018               	goto	l125
  1723                           ;main.c: 684: {
  1724  0046F2  6B8B               	clrf	(_M+33)& (0+255),b
  1725                           ;main.c: 686: if(!(DtCW._err_CW||DtCO._err_CO))
  1726  0046F4  0101               	movlb	_DtCW shr (0+8)
  1727  0046F6  B111               	btfsc	_DtCW& (0+255),0,b
  1728  0046F8  D010               	goto	l126
  1729  0046FA  0101               	movlb	_DtCO shr (0+8)
  1730  0046FC  B120               	btfsc	_DtCO& (0+255),0,b
  1731  0046FE  D00D               	goto	l126
  1732                           ;main.c: 687: {
  1733  004700  0101               	movlb	(_PFN+1) shr (0+8)
  1734  004702  510D               	movf	(_PFN+1)& (0+255),w,b
  1735  004704  0A02               	xorlw	2
  1736  004706  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1737  004708  E004               	bz	u1200
  1738  00470A  510D               	movf	(_PFN+1)& (0+255),w,b
  1739  00470C  0A03               	xorlw	3
  1740  00470E  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1741  004710  E104               	bnz	l126
  1742  004712                     u1200:
  1743  004712  0100               	movlb	(_M+20) shr (0+8)
  1744  004714  0E01               	movlw	1
  1745  004716  6F7E               	movwf	(_M+20)& (0+255),b
  1746  004718  6B7F               	clrf	(_M+21)& (0+255),b
  1747  00471A                     l126:
  1748                           ;main.c: 689: }
  1749  00471A  0E04               	movlw	4
  1750  00471C  EC5C  F05C         	call	_StartRTM
  1751  004720  D029               	goto	L31
  1752                           ;main.c: 691: eeprom_write(0x00C7,0);
  1753                           ;main.c: 692: return;
  1754  004722                     l125:
  1755                           ;main.c: 694: else
  1756  004722  0EC7               	movlw	199
  1757  004724  0100               	movlb	__Lparam shr (0+8)
  1758  004726  6FEC               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1759  004728  6BED               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1760  00472A  C08B  F0EE         	movff	_M+33,?_eeprom_write+2
  1761  00472E  EC6E  F062         	call	_eeprom_write	;wreg free
  1762  004732                     l123:
  1763                           ;main.c: 697: }
  1764  004732  0101               	movlb	(_PFN+1) shr (0+8)
  1765  004734  510D               	movf	(_PFN+1)& (0+255),w,b
  1766  004736  0A02               	xorlw	2
  1767  004738  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1768  00473A  E005               	bz	l129
  1769  00473C  510D               	movf	(_PFN+1)& (0+255),w,b
  1770  00473E  0A03               	xorlw	3
  1771  004740  110E               	iorwf	(_PFN+2)& (0+255),w,b
  1772  004742  A4D8               	btfss	status,2,c
  1773  004744  0012               	return	
  1774                           ;main.c: 702: {
  1775  004746                     l129:
  1776                           ;main.c: 704: }
  1777  004746  0E02               	movlw	2
  1778  004748  0100               	movlb	__Lparam shr (0+8)
  1779  00474A  6FEC               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1780  00474C  C0D3  FFE8         	movff	_RSDT1+54,wreg
  1781  004750  EC06  F061         	call	_GetBit2
  1782  004754  A0D8               	btfss	status,0,c
  1783  004756  0012               	return	
  1784                           ;main.c: 708: {
  1785  004758  0101               	movlb	_DtCW shr (0+8)
  1786  00475A  B111               	btfsc	_DtCW& (0+255),0,b
  1787  00475C  0012               	return	
  1788  00475E  0101               	movlb	_DtCO shr (0+8)
  1789  004760  B120               	btfsc	_DtCO& (0+255),0,b
  1790  004762  0012               	return	
  1791                           ;main.c: 710: {
  1792  004764  0100               	movlb	(_M+33) shr (0+8)
  1793  004766  6B8B               	clrf	(_M+33)& (0+255),b
  1794                           ;main.c: 712: M._AKTYWNE_AL=1;
  1795  004768  0E01               	movlw	1
  1796  00476A  6F7E               	movwf	(_M+20)& (0+255),b
  1797  00476C  6B7F               	clrf	(_M+21)& (0+255),b
  1798                           ;main.c: 713: StartRTM(4);
  1799  00476E  0E04               	movlw	4
  1800  004770  EC5C  F05C         	call	_StartRTM
  1801  004774                     L31:
  1802                           ;main.c: 714: eeprom_write(0x00C7,0);
  1803  004774  0EC7               	movlw	199
  1804  004776  0100               	movlb	__Lparam shr (0+8)
  1805  004778  6FEC               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  1806  00477A  6BED               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  1807  00477C  6BEE               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  1808  00477E  EF6E  F062         	goto	_eeprom_write	;wreg free
  1809                           ;main.c: 715: }
  1810  004782                     l121:
  1811                           ;main.c: 718: else
  1812  004782  0E01               	movlw	1
  1813  004784  EC92  F05C         	call	_StartRTG
  1814                           ;main.c: 721: M.LICZNIK_ANL=0;
  1815  004788  0100               	movlb	(_M+33) shr (0+8)
  1816  00478A  6B8B               	clrf	(_M+33)& (0+255),b
  1817                           ;main.c: 722: }
  1818  00478C  0012               	return	
  1819  00478E                     l113:
  1820                           ;main.c: 724: else M._AKTYWNE_AL=0;
  1821  00478E  EE00  F07E         	lfsr	0,_M+20
  1822  004792  6AEE               	clrf	postinc0,c
  1823  004794  6AEE               	clrf	postinc0,c
  1824                           ;main.c: 726: }
  1825  004796  0012               	return	
  1826  004798                     __end_of_DecyzjaAntyLeg:
  1827                           ;main.c: 730: void DecWSW(void)
  1828                           ;main.c: 731: {
  1829  004798                     _DecWSW:
  1830  000000                     
  1831                           ;main.c: 830: }
  1832  004798  0012               	return	
  1833  00479A                     __end_of_DecWSW:
  1834                           ;main.c: 834: void DecERR(void)
  1835                           ;main.c: 835: {
  1836  00479A                     _DecERR:
  1837  000000                     
  1838                           ;main.c: 836: unsigned char KnfDisErr=0;
  1839  00479A  6AD9               	clrf	fsr2l,c
  1840                           ;main.c: 837: unsigned char w;
  1841  00479C  0100               	movlb	(_M+24) shr (0+8)
  1842  00479E  5182               	movf	(_M+24)& (0+255),w,b
  1843  0047A0  1183               	iorwf	(_M+25)& (0+255),w,b
  1844  0047A2  E00F               	bz	u1340
  1845  0047A4  C1B4  F000         	movff	_DtKNF+2,btemp
  1846  0047A8  0400               	decf	btemp,w,c
  1847  0047AA  E009               	bz	u1341
  1848  0047AC  C1B4  FFE8         	movff	_DtKNF+2,wreg
  1849  0047B0  0A02               	xorlw	2
  1850  0047B2  E107               	bnz	u1340
  1851  0047B4  0E03               	movlw	3
  1852  0047B6  0101               	movlb	(_DtKNF+1) shr (0+8)
  1853  0047B8  61B3               	cpfslt	(_DtKNF+1)& (0+255),b
  1854  0047BA  D001               	goto	u1341
  1855  0047BC  D002               	goto	u1340
  1856  0047BE                     u1341:
  1857  0047BE  0E01               	movlw	1
  1858  0047C0  D001               	goto	u1350
  1859  0047C2                     u1340:
  1860  0047C2  0E00               	movlw	0
  1861  0047C4                     u1350:
  1862  0047C4  0100               	movlb	__Lparam shr (0+8)
  1863  0047C6  6FEB               	movwf	(?a_DecERR+1)^(__Lparam& (0+65280)),b
  1864                           ;main.c: 845: if(!RdPrt(4))
  1865  0047C8  0E04               	movlw	4
  1866  0047CA  ECC4  F05B         	call	_RdPrt
  1867  0047CE  E20B               	bc	l136
  1868                           ;main.c: 846: {
  1869  0047D0  0E02               	movlw	2
  1870  0047D2  CFE8 F08C          	movff	wreg,_M+34
  1871                           ;main.c: 848: PrintErr(0x02,1);
  1872  0047D6  0E01               	movlw	1
  1873  0047D8  0100               	movlb	__Lparam shr (0+8)
  1874  0047DA  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  1875  0047DC  0E02               	movlw	2
  1876  0047DE  EC83  F060         	call	_PrintErr
  1877                           ;main.c: 849: ErrPTG();
  1878  0047E2  EC11  F033         	call	_ErrPTG	;wreg free
  1879  0047E6                     l136:
  1880                           ;main.c: 850: }
  1881  0047E6  0100               	movlb	(_M+17) shr (0+8)
  1882  0047E8  A17B               	btfss	(_M+17)& (0+255),0,b
  1883  0047EA  D00D               	goto	l137
  1884                           ;main.c: 853: {
  1885  0047EC  6B8C               	clrf	(_M+34)& (0+255),b
  1886                           ;main.c: 855: if(KnfDisErr) EndErr();
  1887  0047EE  0100               	movlb	__Lparam shr (0+8)
  1888  0047F0  51EB               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  1889  0047F2  E003               	bz	l138
  1890  0047F4  ECCB  F060         	call	_EndErr	;wreg free
  1891  0047F8  D018               	goto	l143
  1892  0047FA                     l138:
  1893                           ;main.c: 856: else PrintErr(0x01,0);
  1894  0047FA  0100               	movlb	__Lparam shr (0+8)
  1895  0047FC  6BEC               	clrf	?_PrintErr^(__Lparam& (0+65280)),b
  1896  0047FE  0E01               	movlw	1
  1897  004800  EC83  F060         	call	_PrintErr
  1898  004804  D012               	goto	l143
  1899                           ;main.c: 857: M._RUSZ_NTC_CO=0;
  1900                           ;main.c: 858: M._RUSZ_CISN=0;
  1901                           ;main.c: 859: M._RUSZ_NCISN=0;
  1902                           ;main.c: 860: M._RUSZ_NTC_CW=0;
  1903                           ;main.c: 861: M._RUSZ_MOD=0;
  1904                           ;main.c: 862: M._RUSZ_NTC_IN = 0;
  1905                           ;main.c: 863: }
  1906  004806                     l137:
  1907                           ;main.c: 864: else
  1908  004806  0100               	movlb	(_M+16) shr (0+8)
  1909  004808  AF7A               	btfss	(_M+16)& (0+255),7,b
  1910  00480A  D012               	goto	l141
  1911                           ;main.c: 866: {
  1912  00480C  6B8C               	clrf	(_M+34)& (0+255),b
  1913                           ;main.c: 868: if(KnfDisErr) EndErr();
  1914  00480E  0100               	movlb	__Lparam shr (0+8)
  1915  004810  51EB               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  1916  004812  E003               	bz	l142
  1917  004814  ECCB  F060         	call	_EndErr	;wreg free
  1918  004818  D008               	goto	l143
  1919  00481A                     l142:
  1920                           ;main.c: 869: else
  1921  00481A  0100               	movlb	(_M+28) shr (0+8)
  1922  00481C  A186               	btfss	(_M+28)& (0+255),0,b
  1923  00481E  D005               	goto	l143
  1924                           ;main.c: 872: {
  1925  004820  0100               	movlb	__Lparam shr (0+8)
  1926  004822  6BEC               	clrf	?_PrintErr^(__Lparam& (0+65280)),b
  1927  004824  0E03               	movlw	3
  1928  004826  EC83  F060         	call	_PrintErr
  1929  00482A                     l143:
  1930                           ;main.c: 874: }
  1931  00482A  0100               	movlb	(_M+26) shr (0+8)
  1932  00482C  9184               	bcf	(_M+26)& (0+255),0,b
  1933  00482E  D046               	goto	L2
  1934                           ;main.c: 877: M._RUSZ_CISN=0;
  1935                           ;main.c: 878: M._RUSZ_NCISN=0;
  1936                           ;main.c: 879: M._RUSZ_NTC_CW=0;
  1937                           ;main.c: 880: M._RUSZ_MOD=0;
  1938                           ;main.c: 881: M._RUSZ_NTC_IN = 0;
  1939                           ;main.c: 882: }
  1940  004830                     l141:
  1941                           ;main.c: 883: else
  1942  004830  0E12               	movlw	18
  1943  004832  ECC4  F05B         	call	_RdPrt
  1944  004836  E308               	bnc	u1461
  1945  004838  C1B9  F000         	movff	_DtKNF+7,btemp
  1946  00483C  0400               	decf	btemp,w,c
  1947  00483E  E004               	bz	u1461
  1948  004840  C1B9  FFE8         	movff	_DtKNF+7,wreg
  1949  004844  0A02               	xorlw	2
  1950  004846  E114               	bnz	u1560
  1951  004848                     u1461:
  1952  004848  0E12               	movlw	18
  1953  00484A  ECC4  F05B         	call	_RdPrt
  1954  00484E  E322               	bnc	l146
  1955  004850  0100               	movlb	(_M+2) shr (0+8)
  1956  004852  516C               	movf	(_M+2)& (0+255),w,b
  1957  004854  116D               	iorwf	(_M+3)& (0+255),w,b
  1958  004856  E11E               	bnz	l146
  1959  004858  0100               	movlb	(_M+8) shr (0+8)
  1960  00485A  5172               	movf	(_M+8)& (0+255),w,b
  1961  00485C  1173               	iorwf	(_M+9)& (0+255),w,b
  1962  00485E  E11A               	bnz	l146
  1963  004860  C1B9  F000         	movff	_DtKNF+7,btemp
  1964  004864  0400               	decf	btemp,w,c
  1965  004866  E004               	bz	u1560
  1966  004868  C1B9  FFE8         	movff	_DtKNF+7,wreg
  1967  00486C  0A02               	xorlw	2
  1968  00486E  E112               	bnz	l146
  1969  004870                     u1560:
  1970                           ;main.c: 886: {
  1971  004870  0E04               	movlw	4
  1972  004872  CFE8 F08C          	movff	wreg,_M+34
  1973                           ;main.c: 888: if(KnfDisErr) EndErr();
  1974  004876  0100               	movlb	__Lparam shr (0+8)
  1975  004878  51EB               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  1976  00487A  E003               	bz	l147
  1977  00487C  ECCB  F060         	call	_EndErr	;wreg free
  1978  004880  D006               	goto	l148
  1979  004882                     l147:
  1980                           ;main.c: 889: else PrintErr(0x04,1);
  1981  004882  0E01               	movlw	1
  1982  004884  0100               	movlb	__Lparam shr (0+8)
  1983  004886  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  1984  004888  0E04               	movlw	4
  1985  00488A  EC83  F060         	call	_PrintErr
  1986  00488E                     l148:
  1987                           ;main.c: 890: M._RUSZ_NTC_CO=1;
  1988  00488E  0100               	movlb	(_M+26) shr (0+8)
  1989  004890  8184               	bsf	(_M+26)& (0+255),0,b
  1990  004892  D014               	goto	L2
  1991                           ;main.c: 891: M._RUSZ_CISN=0;
  1992                           ;main.c: 892: M._RUSZ_NCISN=0;
  1993                           ;main.c: 893: M._RUSZ_NTC_CW=0;
  1994                           ;main.c: 894: M._RUSZ_MOD=0;
  1995                           ;main.c: 895: M._RUSZ_NTC_IN = 0;
  1996                           ;main.c: 896: }
  1997  004894                     l146:
  1998                           ;main.c: 897: else
  1999  004894  0100               	movlb	(_M+26) shr (0+8)
  2000  004896  9184               	bcf	(_M+26)& (0+255),0,b
  2001                           ;main.c: 901: if(M._RUSZ_POMPE)
  2002  004898  A57B               	btfss	(_M+17)& (0+255),2,b
  2003  00489A  D013               	goto	l150
  2004                           ;main.c: 902: {
  2005  00489C  6B8C               	clrf	(_M+34)& (0+255),b
  2006                           ;main.c: 904: if(KnfDisErr) EndErr();
  2007  00489E  0100               	movlb	__Lparam shr (0+8)
  2008  0048A0  51EB               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2009  0048A2  E003               	bz	l151
  2010  0048A4  ECCB  F060         	call	_EndErr	;wreg free
  2011  0048A8  D008               	goto	l152
  2012  0048AA                     l151:
  2013                           ;main.c: 905: else
  2014  0048AA  0100               	movlb	(_M+28) shr (0+8)
  2015  0048AC  A386               	btfss	(_M+28)& (0+255),1,b
  2016  0048AE  D005               	goto	l152
  2017  0048B0  0100               	movlb	__Lparam shr (0+8)
  2018  0048B2  6BEC               	clrf	?_PrintErr^(__Lparam& (0+65280)),b
  2019  0048B4  0E05               	movlw	5
  2020  0048B6  EC83  F060         	call	_PrintErr
  2021  0048BA                     l152:
  2022                           ;main.c: 908: }
  2023  0048BA  0100               	movlb	(_M+26) shr (0+8)
  2024  0048BC                     L2:
  2025  0048BC  9B84               	bcf	(_M+26)& (0+255),5,b
  2026                           ;main.c: 910: M._RUSZ_NCISN=0;
  2027  0048BE  9D84               	bcf	(_M+26)& (0+255),6,b
  2028  0048C0  D030               	goto	L4
  2029                           ;main.c: 911: M._RUSZ_NTC_CW=0;
  2030                           ;main.c: 912: M._RUSZ_MOD=0;
  2031                           ;main.c: 913: M._RUSZ_NTC_IN = 0;
  2032                           ;main.c: 914: }
  2033  0048C2                     l150:
  2034                           ;main.c: 915: else
  2035  0048C2  0E0E               	movlw	14
  2036  0048C4  ECC4  F05B         	call	_RdPrt
  2037  0048C8  E313               	bnc	l155
  2038                           ;main.c: 919: {
  2039  0048CA  0E08               	movlw	8
  2040  0048CC  CFE8 F08C          	movff	wreg,_M+34
  2041                           ;main.c: 921: if(KnfDisErr) EndErr();
  2042  0048D0  0100               	movlb	__Lparam shr (0+8)
  2043  0048D2  51EB               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2044  0048D4  E003               	bz	l156
  2045  0048D6  ECCB  F060         	call	_EndErr	;wreg free
  2046  0048DA  D006               	goto	l157
  2047  0048DC                     l156:
  2048                           ;main.c: 922: else PrintErr(0x08,1);
  2049  0048DC  0E01               	movlw	1
  2050  0048DE  0100               	movlb	__Lparam shr (0+8)
  2051  0048E0  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2052  0048E2  0E08               	movlw	8
  2053  0048E4  EC83  F060         	call	_PrintErr
  2054  0048E8                     l157:
  2055                           ;main.c: 923: M._RUSZ_NCISN=1;
  2056  0048E8  0100               	movlb	(_M+26) shr (0+8)
  2057  0048EA  8D84               	bsf	(_M+26)& (0+255),6,b
  2058                           ;main.c: 924: M._RUSZ_CISN=0;
  2059  0048EC  9B84               	bcf	(_M+26)& (0+255),5,b
  2060  0048EE  D019               	goto	L4
  2061                           ;main.c: 925: M._RUSZ_NTC_CW=0;
  2062                           ;main.c: 926: M._RUSZ_MOD=0;
  2063                           ;main.c: 927: M._RUSZ_NTC_IN = 0;
  2064                           ;main.c: 928: }
  2065  0048F0                     l155:
  2066                           ;main.c: 929: else
  2067  0048F0  0100               	movlb	(_M+26) shr (0+8)
  2068  0048F2  9D84               	bcf	(_M+26)& (0+255),6,b
  2069                           ;main.c: 933: if(!RdPrt(15))
  2070  0048F4  0E0F               	movlw	15
  2071  0048F6  ECC4  F05B         	call	_RdPrt
  2072  0048FA  E215               	bc	l159
  2073                           ;main.c: 934: {
  2074  0048FC  0E09               	movlw	9
  2075  0048FE  CFE8 F08C          	movff	wreg,_M+34
  2076                           ;main.c: 937: if(KnfDisErr) EndErr();
  2077  004902  0100               	movlb	__Lparam shr (0+8)
  2078  004904  51EB               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2079  004906  E003               	bz	l160
  2080  004908  ECCB  F060         	call	_EndErr	;wreg free
  2081  00490C  D008               	goto	l161
  2082  00490E                     l160:
  2083                           ;main.c: 938: else PrintErrCs(0x09,DtCS.CS,1);
  2084  00490E  C107  F0EC         	movff	_DtCS+3,?_PrintErrCs
  2085  004912  0E01               	movlw	1
  2086  004914  0100               	movlb	__Lparam shr (0+8)
  2087  004916  6FED               	movwf	(?_PrintErrCs+1)^(__Lparam& (0+65280)),b
  2088  004918  0E09               	movlw	9
  2089  00491A  ECA5  F060         	call	_PrintErrCs
  2090  00491E                     l161:
  2091                           ;main.c: 939: M._RUSZ_CISN=1;
  2092  00491E  0100               	movlb	(_M+26) shr (0+8)
  2093  004920  8B84               	bsf	(_M+26)& (0+255),5,b
  2094  004922                     L4:
  2095                           ;main.c: 940: M._RUSZ_NTC_CW=0;
  2096  004922  9384               	bcf	(_M+26)& (0+255),1,b
  2097  004924  D04C               	goto	L5
  2098                           ;main.c: 941: M._RUSZ_MOD=0;
  2099                           ;main.c: 942: M._RUSZ_NTC_IN = 0;
  2100                           ;main.c: 943: }
  2101  004926                     l159:
  2102                           ;main.c: 944: else
  2103  004926  0100               	movlb	(_M+26) shr (0+8)
  2104  004928  9B84               	bcf	(_M+26)& (0+255),5,b
  2105                           ;main.c: 947: if(DtKNF.tpkt!=0)
  2106  00492A  EE01  F0B9         	lfsr	0,_DtKNF+7
  2107  00492E  50EF               	movf	indf0,w,c
  2108  004930  E01D               	bz	l163
  2109                           ;main.c: 948: {
  2110  004932  0101               	movlb	_DtCW shr (0+8)
  2111  004934  A111               	btfss	_DtCW& (0+255),0,b
  2112  004936  D005               	goto	u1680
  2113  004938  0101               	movlb	(_PFN+1) shr (0+8)
  2114  00493A  510D               	movf	(_PFN+1)& (0+255),w,b
  2115  00493C  0A02               	xorlw	2
  2116  00493E  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2117  004940  E013               	bz	u1781
  2118  004942                     u1680:
  2119  004942  0101               	movlb	(_PFN+1) shr (0+8)
  2120  004944  510D               	movf	(_PFN+1)& (0+255),w,b
  2121  004946  0A03               	xorlw	3
  2122  004948  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2123  00494A  E124               	bnz	u1880
  2124  00494C  0101               	movlb	_DtCW shr (0+8)
  2125  00494E  A111               	btfss	_DtCW& (0+255),0,b
  2126  004950  D021               	goto	u1880
  2127  004952  0100               	movlb	(_M+8) shr (0+8)
  2128  004954  5172               	movf	(_M+8)& (0+255),w,b
  2129  004956  1173               	iorwf	(_M+9)& (0+255),w,b
  2130  004958  E107               	bnz	u1781
  2131  00495A  516C               	movf	(_M+2)& (0+255),w,b
  2132  00495C  116D               	iorwf	(_M+3)& (0+255),w,b
  2133  00495E  E104               	bnz	u1781
  2134  004960  0100               	movlb	(_M+6) shr (0+8)
  2135  004962  5170               	movf	(_M+6)& (0+255),w,b
  2136  004964  1171               	iorwf	(_M+7)& (0+255),w,b
  2137  004966  E016               	bz	u1880
  2138  004968                     u1781:
  2139  004968  0E01               	movlw	1
  2140  00496A  D015               	goto	u1890
  2141                           ;main.c: 950: }
  2142  00496C                     l163:
  2143                           ;main.c: 951: else
  2144  00496C  0101               	movlb	_DtCW shr (0+8)
  2145  00496E  A111               	btfss	_DtCW& (0+255),0,b
  2146  004970  D005               	goto	u1820
  2147  004972  0101               	movlb	(_PFN+1) shr (0+8)
  2148  004974  510D               	movf	(_PFN+1)& (0+255),w,b
  2149  004976  0A02               	xorlw	2
  2150  004978  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2151  00497A  E0F6               	bz	u1781
  2152  00497C                     u1820:
  2153  00497C  0101               	movlb	(_PFN+1) shr (0+8)
  2154  00497E  510D               	movf	(_PFN+1)& (0+255),w,b
  2155  004980  0A03               	xorlw	3
  2156  004982  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2157  004984  E107               	bnz	u1880
  2158  004986  0101               	movlb	_DtCW shr (0+8)
  2159  004988  A111               	btfss	_DtCW& (0+255),0,b
  2160  00498A  D004               	goto	u1880
  2161  00498C  0E0B               	movlw	11
  2162  00498E  ECC4  F05B         	call	_RdPrt
  2163  004992  E2EA               	bc	u1781
  2164  004994                     u1880:
  2165  004994  0E00               	movlw	0
  2166  004996                     u1890:
  2167  004996  0100               	movlb	__Lparam shr (0+8)
  2168  004998  6FEA               	movwf	?a_DecERR^(__Lparam& (0+65280)),b
  2169                           ;main.c: 954: }
  2170  00499A  51EA               	movf	?a_DecERR^(__Lparam& (0+65280)),w
  2171  00499C  E012               	bz	l165
  2172                           ;main.c: 957: {
  2173  00499E  0E0A               	movlw	10
  2174  0049A0  CFE8 F08C          	movff	wreg,_M+34
  2175                           ;main.c: 959: if(KnfDisErr) EndErr();
  2176  0049A4  51EB               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2177  0049A6  E003               	bz	l166
  2178  0049A8  ECCB  F060         	call	_EndErr	;wreg free
  2179  0049AC  D006               	goto	l167
  2180  0049AE                     l166:
  2181                           ;main.c: 960: else PrintErr(0x0A,1);
  2182  0049AE  0E01               	movlw	1
  2183  0049B0  0100               	movlb	__Lparam shr (0+8)
  2184  0049B2  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2185  0049B4  0E0A               	movlw	10
  2186  0049B6  EC83  F060         	call	_PrintErr
  2187  0049BA                     l167:
  2188                           ;main.c: 961: M._RUSZ_NTC_CW=1;
  2189  0049BA  0100               	movlb	(_M+26) shr (0+8)
  2190  0049BC  8384               	bsf	(_M+26)& (0+255),1,b
  2191  0049BE                     L5:
  2192                           ;main.c: 962: M._RUSZ_MOD=0;
  2193  0049BE  9984               	bcf	(_M+26)& (0+255),4,b
  2194  0049C0  D03D               	goto	L9
  2195                           ;main.c: 963: M._RUSZ_NTC_IN = 0;
  2196                           ;main.c: 964: }
  2197  0049C2                     l165:
  2198                           ;main.c: 965: else
  2199  0049C2  0100               	movlb	(_M+26) shr (0+8)
  2200  0049C4  9384               	bcf	(_M+26)& (0+255),1,b
  2201                           ;main.c: 969: if(!RdPrt(8))
  2202  0049C6  0E08               	movlw	8
  2203  0049C8  ECC4  F05B         	call	_RdPrt
  2204  0049CC  E212               	bc	l169
  2205                           ;main.c: 970: {
  2206  0049CE  0E07               	movlw	7
  2207  0049D0  CFE8 F08C          	movff	wreg,_M+34
  2208                           ;main.c: 972: if(KnfDisErr) EndErr();
  2209  0049D4  0100               	movlb	__Lparam shr (0+8)
  2210  0049D6  51EB               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2211  0049D8  E003               	bz	l170
  2212  0049DA  ECCB  F060         	call	_EndErr	;wreg free
  2213  0049DE  D006               	goto	l171
  2214  0049E0                     l170:
  2215                           ;main.c: 973: else PrintErr(0x07,1);
  2216  0049E0  0E01               	movlw	1
  2217  0049E2  0100               	movlb	__Lparam shr (0+8)
  2218  0049E4  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2219  0049E6  0E07               	movlw	7
  2220  0049E8  EC83  F060         	call	_PrintErr
  2221  0049EC                     l171:
  2222                           ;main.c: 974: M._RUSZ_MOD=1;
  2223  0049EC  0100               	movlb	(_M+26) shr (0+8)
  2224  0049EE  8984               	bsf	(_M+26)& (0+255),4,b
  2225  0049F0  D025               	goto	L9
  2226                           ;main.c: 975: M._RUSZ_NTC_IN = 0;
  2227                           ;main.c: 976: }
  2228  0049F2                     l169:
  2229                           ;main.c: 977: else
  2230  0049F2  0100               	movlb	(_M+26) shr (0+8)
  2231  0049F4  9984               	bcf	(_M+26)& (0+255),4,b
  2232                           ;main.c: 980: if(DtKNF.rdpm != 0)
  2233  0049F6  EE01  F0BF         	lfsr	0,_DtKNF+13
  2234  0049FA  50EF               	movf	indf0,w,c
  2235  0049FC  E01E               	bz	l173
  2236                           ;main.c: 981: {
  2237  0049FE  0101               	movlb	(_PFN+1) shr (0+8)
  2238  004A00  510D               	movf	(_PFN+1)& (0+255),w,b
  2239  004A02  0A03               	xorlw	3
  2240  004A04  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2241  004A06  E119               	bnz	l173
  2242  004A08  0100               	movlb	(_M+27) shr (0+8)
  2243  004A0A  B585               	btfsc	(_M+27)& (0+255),2,b
  2244  004A0C  BF85               	btfsc	(_M+27)& (0+255),7,b
  2245  004A0E  D015               	goto	l173
  2246  004A10  0101               	movlb	_DtIN shr (0+8)
  2247  004A12  A131               	btfss	_DtIN& (0+255),0,b
  2248  004A14  D012               	goto	l173
  2249                           ;main.c: 983: {
  2250  004A16  0E0E               	movlw	14
  2251  004A18  CFE8 F08C          	movff	wreg,_M+34
  2252                           ;main.c: 985: if(KnfDisErr) EndErr();
  2253  004A1C  0100               	movlb	__Lparam shr (0+8)
  2254  004A1E  51EB               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2255  004A20  E003               	bz	l175
  2256  004A22  ECCB  F060         	call	_EndErr	;wreg free
  2257  004A26  D006               	goto	l176
  2258  004A28                     l175:
  2259                           ;main.c: 986: else PrintErr(0x0E,1);
  2260  004A28  0E01               	movlw	1
  2261  004A2A  0100               	movlb	__Lparam shr (0+8)
  2262  004A2C  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2263  004A2E  0E0E               	movlw	14
  2264  004A30  EC83  F060         	call	_PrintErr
  2265  004A34                     l176:
  2266                           ;main.c: 987: M._RUSZ_NTC_IN = 1;
  2267  004A34  0100               	movlb	(_M+26) shr (0+8)
  2268  004A36  8584               	bsf	(_M+26)& (0+255),2,b
  2269                           ;main.c: 988: }
  2270  004A38  D002               	goto	l140
  2271                           ;main.c: 989: else
  2272                           ;main.c: 992: }
  2273  004A3A                     l173:
  2274                           ;main.c: 994: else
  2275  004A3A  0100               	movlb	(_M+26) shr (0+8)
  2276  004A3C                     L9:
  2277  004A3C  9584               	bcf	(_M+26)& (0+255),2,b
  2278  004A3E                     l140:
  2279                           ;main.c: 997: }
  2280  004A3E  0100               	movlb	(_M+17) shr (0+8)
  2281  004A40  B17B               	btfsc	(_M+17)& (0+255),0,b
  2282  004A42  D024               	goto	l179
  2283  004A44  0E05               	movlw	5
  2284  004A46  ECC4  F05B         	call	_RdPrt
  2285  004A4A  E220               	bc	l179
  2286  004A4C  0100               	movlb	(_M+16) shr (0+8)
  2287  004A4E  A57A               	btfss	(_M+16)& (0+255),2,b
  2288  004A50  A083               	btfss	3971,0,c	;volatile
  2289  004A52  D01C               	goto	l179
  2290                           ;main.c: 1010: {
  2291  004A54  0100               	movlb	(_M+27) shr (0+8)
  2292  004A56  A385               	btfss	(_M+27)& (0+255),1,b
  2293  004A58  D00E               	goto	l180
  2294                           ;main.c: 1012: {
  2295  004A5A  A683               	btfss	3971,3,c	;volatile
  2296  004A5C  D008               	goto	l181
  2297                           ;main.c: 1014: {
  2298  004A5E  0E03               	movlw	3
  2299  004A60  ECC4  F05B         	call	_RdPrt
  2300  004A64  E313               	bnc	l179
  2301  004A66  0E04               	movlw	4
  2302  004A68  ECC4  F05B         	call	_RdPrt
  2303  004A6C  D00B               	goto	L16
  2304                           ;main.c: 1016: {
  2305                           ;main.c: 1018: M._RUSZ_PLOMIEN=1;
  2306                           ;main.c: 1019: }
  2307  004A6E                     l181:
  2308                           ;main.c: 1021: else
  2309  004A6E  0E04               	movlw	4
  2310  004A70  ECC4  F05B         	call	_RdPrt
  2311  004A74  D007               	goto	L16
  2312                           ;main.c: 1024: {
  2313                           ;main.c: 1026: M._RUSZ_PLOMIEN=1;
  2314                           ;main.c: 1027: }
  2315  004A76                     l180:
  2316                           ;main.c: 1030: else
  2317  004A76  0E02               	movlw	2
  2318  004A78  ECC4  F05B         	call	_RdPrt
  2319  004A7C  E307               	bnc	l179
  2320  004A7E  0E04               	movlw	4
  2321  004A80  ECC4  F05B         	call	_RdPrt
  2322  004A84                     L16:
  2323  004A84  E303               	bnc	l179
  2324                           ;main.c: 1033: {
  2325  004A86  0100               	movlb	(_M+42) shr (0+8)
  2326  004A88  6B94               	clrf	(_M+42)& (0+255),b
  2327                           ;main.c: 1035: M._RUSZ_PLOMIEN=1;
  2328  004A8A  817B               	bsf	(_M+17)& (0+255),0,b
  2329  004A8C                     l179:
  2330                           ;main.c: 1036: }
  2331  004A8C  0100               	movlb	(_M+27) shr (0+8)
  2332  004A8E  B385               	btfsc	(_M+27)& (0+255),1,b
  2333  004A90  D011               	goto	l187
  2334                           ;main.c: 1042: {
  2335  004A92  BF7A               	btfsc	(_M+16)& (0+255),7,b
  2336  004A94  D03E               	goto	l189
  2337  004A96  0E02               	movlw	2
  2338  004A98  ECC4  F05B         	call	_RdPrt
  2339  004A9C  E23A               	bc	l189
  2340  004A9E  0E04               	movlw	4
  2341  004AA0  ECC4  F05B         	call	_RdPrt
  2342  004AA4  E336               	bnc	l189
  2343  004AA6  0100               	movlb	(_M+27) shr (0+8)
  2344  004AA8  A585               	btfss	(_M+27)& (0+255),2,b
  2345  004AAA  D033               	goto	l189
  2346                           ;main.c: 1044: {
  2347  004AAC  0100               	movlb	(_M+43) shr (0+8)
  2348  004AAE  6B95               	clrf	(_M+43)& (0+255),b
  2349                           ;main.c: 1046: M._RUSZ_CIAG=1;
  2350  004AB0  8F7A               	bsf	(_M+16)& (0+255),7,b
  2351                           ;main.c: 1056: }
  2352  004AB2  D02F               	goto	l189
  2353  004AB4                     l187:
  2354                           ;main.c: 1058: else
  2355  004AB4  0100               	movlb	(_M+16) shr (0+8)
  2356  004AB6  AF7A               	btfss	(_M+16)& (0+255),7,b
  2357  004AB8  B57A               	btfsc	(_M+16)& (0+255),2,b
  2358  004ABA  D02B               	goto	l189
  2359  004ABC  0100               	movlb	(_M+27) shr (0+8)
  2360  004ABE  BD85               	btfsc	(_M+27)& (0+255),6,b
  2361  004AC0  D028               	goto	l189
  2362  004AC2  0E03               	movlw	3
  2363  004AC4  ECC4  F05B         	call	_RdPrt
  2364  004AC8  A0D8               	btfss	status,0,c
  2365  004ACA  A683               	btfss	3971,3,c	;volatile
  2366  004ACC  D001               	goto	u2341
  2367  004ACE  D006               	goto	u2390
  2368  004AD0                     u2341:
  2369  004AD0  0E03               	movlw	3
  2370  004AD2  ECC4  F05B         	call	_RdPrt
  2371  004AD6  B0D8               	btfsc	status,0,c
  2372  004AD8  B683               	btfsc	3971,3,c	;volatile
  2373  004ADA  D01B               	goto	l189
  2374  004ADC                     u2390:
  2375                           ;main.c: 1061: {
  2376  004ADC  0100               	movlb	(_M+43) shr (0+8)
  2377  004ADE  6B95               	clrf	(_M+43)& (0+255),b
  2378                           ;main.c: 1063: M._RUSZ_CIAG=1;
  2379  004AE0  8F7A               	bsf	(_M+16)& (0+255),7,b
  2380                           ;main.c: 1064: if(!M.LICZNIK_CIG) StartRTS(11);
  2381  004AE2  EE00  F088         	lfsr	0,_M+30
  2382  004AE6  50EF               	movf	indf0,w,c
  2383  004AE8  E103               	bnz	l191
  2384  004AEA  0E0B               	movlw	11
  2385  004AEC  EC35  F05C         	call	_StartRTS
  2386  004AF0                     l191:
  2387                           ;main.c: 1065: M.LICZNIK_CIG++;
  2388  004AF0  0100               	movlb	(_M+30) shr (0+8)
  2389  004AF2  2B88               	incf	(_M+30)& (0+255),f,b
  2390                           ;main.c: 1066: if(M.LICZNIK_CIG>=5)
  2391  004AF4  0E04               	movlw	4
  2392  004AF6  6588               	cpfsgt	(_M+30)& (0+255),b
  2393  004AF8  D00C               	goto	l189
  2394                           ;main.c: 1067: {
  2395  004AFA  6B88               	clrf	(_M+30)& (0+255),b
  2396                           ;main.c: 1069: M.ERR_BTY=0x03;
  2397  004AFC  0E03               	movlw	3
  2398  004AFE  CFE8 F08C          	movff	wreg,_M+34
  2399                           ;main.c: 1070: PrintErr(0x03,1);
  2400  004B02  0E01               	movlw	1
  2401  004B04  0100               	movlb	__Lparam shr (0+8)
  2402  004B06  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2403  004B08  0E03               	movlw	3
  2404  004B0A  EC83  F060         	call	_PrintErr
  2405                           ;main.c: 1071: ErrPTG();
  2406  004B0E  EC11  F033         	call	_ErrPTG	;wreg free
  2407  004B12                     l189:
  2408                           ;main.c: 1072: }
  2409  004B12  0100               	movlb	(_M+17) shr (0+8)
  2410  004B14  A17B               	btfss	(_M+17)& (0+255),0,b
  2411  004B16  BF7A               	btfsc	(_M+16)& (0+255),7,b
  2412  004B18  0012               	return	
  2413                           ;main.c: 1081: if(!M._RUSZ_NTC_CO&&!M._RUSZ_NCIS
      +                          N&&!M._RUSZ_CISN)
  2414  004B1A  0100               	movlb	(_M+26) shr (0+8)
  2415  004B1C  A184               	btfss	(_M+26)& (0+255),0,b
  2416  004B1E  BD84               	btfsc	(_M+26)& (0+255),6,b
  2417  004B20  0012               	return	
  2418  004B22  BB84               	btfsc	(_M+26)& (0+255),5,b
  2419  004B24  0012               	return	
  2420                           ;main.c: 1082: if(!M._RUSZ_NTC_CW&&!M._RUSZ_MOD&
      +                          &!M._RUSZ_NTC_IN&&!M._RUSZ_POMPE)
  2421  004B26  A384               	btfss	(_M+26)& (0+255),1,b
  2422  004B28  B984               	btfsc	(_M+26)& (0+255),4,b
  2423  004B2A  0012               	return	
  2424  004B2C  B584               	btfsc	(_M+26)& (0+255),2,b
  2425  004B2E  0012               	return	
  2426  004B30  0100               	movlb	(_M+17) shr (0+8)
  2427  004B32  B57B               	btfsc	(_M+17)& (0+255),2,b
  2428  004B34  0012               	return	
  2429                           ;main.c: 1083: {
  2430  004B36  0100               	movlb	(_M+34) shr (0+8)
  2431  004B38  6B8C               	clrf	(_M+34)& (0+255),b
  2432                           ;main.c: 1085: EndErr();
  2433  004B3A  EFCB  F060         	goto	_EndErr	;wreg free
  2434                           ;main.c: 1086: }
  2435  004B3E                     __end_of_DecERR:
  2436                           ;main.c: 1091: void DecSTR(void)
  2437                           ;main.c: 1092: {
  2438  004B3E                     _DecSTR:
  2439  000000                     
  2440                           ;main.c: 1098: if(RTS(10)>=3)
  2441  004B3E  0E0A               	movlw	10
  2442  004B40  EC4D  F05C         	call	_RTS
  2443  004B44  6E00               	movwf	btemp,c
  2444  004B46  0E03               	movlw	3
  2445  004B48  5C00               	subwf	btemp,w,c
  2446  004B4A  E303               	bnc	l197
  2447                           ;main.c: 1099: {
  2448  004B4C  0100               	movlb	(_M+27) shr (0+8)
  2449  004B4E  9185               	bcf	(_M+27)& (0+255),0,b
  2450                           ;main.c: 1101: M._RS_START=0;
  2451  004B50  9F84               	bcf	(_M+26)& (0+255),7,b
  2452  004B52                     l197:
  2453                           ;main.c: 1102: }
  2454  004B52  0E14               	movlw	20
  2455  004B54  ECC4  F05B         	call	_RdPrt
  2456  004B58  0E00               	movlw	0
  2457  004B5A  B0D8               	btfsc	status,0,c
  2458  004B5C  0E01               	movlw	1
  2459  004B5E  0100               	movlb	(_M+22) shr (0+8)
  2460  004B60  6F80               	movwf	(_M+22)& (0+255),b
  2461  004B62  6B81               	clrf	(_M+23)& (0+255),b
  2462                           ;main.c: 1106: if(!M._ROZRUCH&&RD0&&DtCO._ldDCO)
      +                           M._RUN_MNMOD=1;
  2463  004B64  A57A               	btfss	(_M+16)& (0+255),2,b
  2464  004B66  A083               	btfss	3971,0,c	;volatile
  2465  004B68  D006               	goto	l198
  2466  004B6A  0101               	movlb	(_DtCO+1) shr (0+8)
  2467  004B6C  A921               	btfss	(_DtCO+1)& (0+255),4,b
  2468  004B6E  D003               	goto	l198
  2469  004B70  0100               	movlb	(_M+27) shr (0+8)
  2470  004B72  8985               	bsf	(_M+27)& (0+255),4,b
  2471  004B74  D002               	goto	l199
  2472  004B76                     l198:
  2473                           ;main.c: 1107: else M._RUN_MNMOD=0;
  2474  004B76  0100               	movlb	(_M+27) shr (0+8)
  2475  004B78  9985               	bcf	(_M+27)& (0+255),4,b
  2476  004B7A                     l199:
  2477                           ;main.c: 1110: if(!M._ZMKCOCW)
  2478  004B7A  0100               	movlb	(_M+16) shr (0+8)
  2479  004B7C  B37A               	btfsc	(_M+16)& (0+255),1,b
  2480  004B7E  D0D7               	goto	l200
  2481                           ;main.c: 1111: {
  2482  004B80  A585               	btfss	(_M+27)& (0+255),2,b
  2483  004B82  D010               	goto	l201
  2484  004B84  516C               	movf	(_M+2)& (0+255),w,b
  2485  004B86  116D               	iorwf	(_M+3)& (0+255),w,b
  2486  004B88  E10B               	bnz	u2720
  2487  004B8A  5172               	movf	(_M+8)& (0+255),w,b
  2488  004B8C  1173               	iorwf	(_M+9)& (0+255),w,b
  2489  004B8E  E108               	bnz	u2720
  2490  004B90  0100               	movlb	(_M+14) shr (0+8)
  2491  004B92  5178               	movf	(_M+14)& (0+255),w,b
  2492  004B94  1179               	iorwf	(_M+15)& (0+255),w,b
  2493  004B96  E104               	bnz	u2720
  2494  004B98  0100               	movlb	(_M+6) shr (0+8)
  2495  004B9A  5170               	movf	(_M+6)& (0+255),w,b
  2496  004B9C  1171               	iorwf	(_M+7)& (0+255),w,b
  2497  004B9E  E002               	bz	l201
  2498  004BA0                     u2720:
  2499  004BA0  DA24               	call	_ToObiegCW	;wreg free
  2500  004BA2  D0C5               	goto	l200
  2501  004BA4                     l201:
  2502                           ;main.c: 1114: else
  2503  004BA4  0100               	movlb	(_M+27) shr (0+8)
  2504  004BA6  B585               	btfsc	(_M+27)& (0+255),2,b
  2505  004BA8  B97B               	btfsc	(_M+17)& (0+255),4,b
  2506  004BAA  D011               	goto	l203
  2507  004BAC  0100               	movlb	_M shr (0+8)
  2508  004BAE  516A               	movf	_M& (0+255),w,b
  2509  004BB0  116B               	iorwf	(_M+1)& (0+255),w,b
  2510  004BB2  E10B               	bnz	u2830
  2511  004BB4  516E               	movf	(_M+4)& (0+255),w,b
  2512  004BB6  116F               	iorwf	(_M+5)& (0+255),w,b
  2513  004BB8  E108               	bnz	u2830
  2514  004BBA  0100               	movlb	(_M+10) shr (0+8)
  2515  004BBC  5174               	movf	(_M+10)& (0+255),w,b
  2516  004BBE  1175               	iorwf	(_M+11)& (0+255),w,b
  2517  004BC0  E104               	bnz	u2830
  2518  004BC2  0100               	movlb	(_M+12) shr (0+8)
  2519  004BC4  5176               	movf	(_M+12)& (0+255),w,b
  2520  004BC6  1177               	iorwf	(_M+13)& (0+255),w,b
  2521  004BC8  E002               	bz	l203
  2522  004BCA                     u2830:
  2523  004BCA  D9E8               	call	_ToObiegCO	;wreg free
  2524  004BCC  D0B0               	goto	l200
  2525  004BCE                     l203:
  2526                           ;main.c: 1117: else
  2527  004BCE  0100               	movlb	(_M+27) shr (0+8)
  2528  004BD0  A585               	btfss	(_M+27)& (0+255),2,b
  2529  004BD2  A17A               	btfss	(_M+16)& (0+255),0,b
  2530  004BD4  D010               	goto	l205
  2531  004BD6  C1B9  FFE8         	movff	_DtKNF+7,wreg
  2532  004BDA  0A03               	xorlw	3
  2533  004BDC  E10C               	bnz	l205
  2534  004BDE  0101               	movlb	_DtCO shr (0+8)
  2535  004BE0  B120               	btfsc	_DtCO& (0+255),0,b
  2536  004BE2  D009               	goto	l205
  2537  004BE4  0101               	movlb	(_DtCO+1) shr (0+8)
  2538  004BE6  B121               	btfsc	(_DtCO+1)& (0+255),0,b
  2539  004BE8  D006               	goto	l205
  2540  004BEA  0100               	movlb	(_M+8) shr (0+8)
  2541  004BEC  5172               	movf	(_M+8)& (0+255),w,b
  2542  004BEE  1173               	iorwf	(_M+9)& (0+255),w,b
  2543  004BF0  E002               	bz	l205
  2544  004BF2  D9FB               	call	_ToObiegCW	;wreg free
  2545  004BF4  D09C               	goto	l200
  2546  004BF6                     l205:
  2547                           ;main.c: 1120: else
  2548  004BF6  0100               	movlb	(_M+27) shr (0+8)
  2549  004BF8  A585               	btfss	(_M+27)& (0+255),2,b
  2550  004BFA  A17A               	btfss	(_M+16)& (0+255),0,b
  2551  004BFC  D018               	goto	l207
  2552  004BFE  EE01  F0B9         	lfsr	0,_DtKNF+7
  2553  004C02  50EF               	movf	indf0,w,c
  2554  004C04  E114               	bnz	l207
  2555  004C06  0101               	movlb	_DtCO shr (0+8)
  2556  004C08  B120               	btfsc	_DtCO& (0+255),0,b
  2557  004C0A  D011               	goto	l207
  2558  004C0C  0101               	movlb	(_DtCO+1) shr (0+8)
  2559  004C0E  B121               	btfsc	(_DtCO+1)& (0+255),0,b
  2560  004C10  D00E               	goto	l207
  2561  004C12  0101               	movlb	(_PFN+1) shr (0+8)
  2562  004C14  510D               	movf	(_PFN+1)& (0+255),w,b
  2563  004C16  0A02               	xorlw	2
  2564  004C18  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2565  004C1A  E004               	bz	u3070
  2566  004C1C  510D               	movf	(_PFN+1)& (0+255),w,b
  2567  004C1E  0A03               	xorlw	3
  2568  004C20  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2569  004C22  E105               	bnz	l207
  2570  004C24                     u3070:
  2571  004C24  0101               	movlb	_DtCW shr (0+8)
  2572  004C26  A711               	btfss	_DtCW& (0+255),3,b
  2573  004C28  D002               	goto	l207
  2574  004C2A  D9DF               	call	_ToObiegCW	;wreg free
  2575  004C2C  D080               	goto	l200
  2576  004C2E                     l207:
  2577                           ;main.c: 1122: else
  2578  004C2E  0100               	movlb	(_M+27) shr (0+8)
  2579  004C30  A585               	btfss	(_M+27)& (0+255),2,b
  2580  004C32  B97B               	btfsc	(_M+17)& (0+255),4,b
  2581  004C34  D037               	goto	l209
  2582  004C36  0E0D               	movlw	13
  2583  004C38  ECC4  F05B         	call	_RdPrt
  2584  004C3C  E203               	bc	u3160
  2585  004C3E  0100               	movlb	(_M+16) shr (0+8)
  2586  004C40  A77A               	btfss	(_M+16)& (0+255),3,b
  2587  004C42  D030               	goto	l209
  2588  004C44                     u3160:
  2589                           ;main.c: 1126: {
  2590  004C44  0101               	movlb	(_PFN+1) shr (0+8)
  2591  004C46  510D               	movf	(_PFN+1)& (0+255),w,b
  2592  004C48  0A01               	xorlw	1
  2593  004C4A  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2594  004C4C  E102               	bnz	l210
  2595  004C4E  D9A6               	call	_ToObiegCO	;wreg free
  2596  004C50  D06E               	goto	l200
  2597  004C52                     l210:
  2598                           ;main.c: 1128: else
  2599  004C52  0101               	movlb	(_PFN+1) shr (0+8)
  2600  004C54  510D               	movf	(_PFN+1)& (0+255),w,b
  2601  004C56  0A02               	xorlw	2
  2602  004C58  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2603  004C5A  E111               	bnz	l212
  2604                           ;main.c: 1130: {
  2605  004C5C  C1B9  F000         	movff	_DtKNF+7,btemp
  2606  004C60  0400               	decf	btemp,w,c
  2607  004C62  E00B               	bz	l213
  2608  004C64  C1B9  FFE8         	movff	_DtKNF+7,wreg
  2609  004C68  0A02               	xorlw	2
  2610  004C6A  E007               	bz	l213
  2611                           ;main.c: 1132: {
  2612  004C6C  0101               	movlb	(_DtCO+1) shr (0+8)
  2613  004C6E  A521               	btfss	(_DtCO+1)& (0+255),2,b
  2614  004C70  D002               	goto	l214
  2615  004C72  D994               	call	_ToObiegCO	;wreg free
  2616  004C74  D05C               	goto	l200
  2617  004C76                     l214:
  2618                           ;main.c: 1134: else ToObiegCW();
  2619  004C76  D9B9               	call	_ToObiegCW	;wreg free
  2620                           ;main.c: 1135: }
  2621  004C78  D05A               	goto	l200
  2622  004C7A                     l213:
  2623                           ;main.c: 1136: else ToObiegCO();
  2624  004C7A  D990               	call	_ToObiegCO	;wreg free
  2625                           ;main.c: 1137: }
  2626  004C7C  D058               	goto	l200
  2627  004C7E                     l212:
  2628                           ;main.c: 1138: else
  2629  004C7E  0100               	movlb	(_M+2) shr (0+8)
  2630  004C80  516C               	movf	(_M+2)& (0+255),w,b
  2631  004C82  116D               	iorwf	(_M+3)& (0+255),w,b
  2632  004C84  E10D               	bnz	l218
  2633  004C86  5172               	movf	(_M+8)& (0+255),w,b
  2634  004C88  1173               	iorwf	(_M+9)& (0+255),w,b
  2635  004C8A  E10A               	bnz	l218
  2636  004C8C  0100               	movlb	(_M+14) shr (0+8)
  2637  004C8E  5178               	movf	(_M+14)& (0+255),w,b
  2638  004C90  1179               	iorwf	(_M+15)& (0+255),w,b
  2639  004C92  E106               	bnz	l218
  2640  004C94  0100               	movlb	(_M+6) shr (0+8)
  2641  004C96  5170               	movf	(_M+6)& (0+255),w,b
  2642  004C98  1171               	iorwf	(_M+7)& (0+255),w,b
  2643  004C9A  E102               	bnz	l218
  2644  004C9C  D97F               	call	_ToObiegCO	;wreg free
  2645  004C9E  D047               	goto	l200
  2646  004CA0                     l218:
  2647                           ;main.c: 1141: else ToObiegCW();
  2648  004CA0  D9A4               	call	_ToObiegCW	;wreg free
  2649                           ;main.c: 1142: }
  2650  004CA2  D045               	goto	l200
  2651  004CA4                     l209:
  2652                           ;main.c: 1144: else
  2653  004CA4  0100               	movlb	(_M+27) shr (0+8)
  2654  004CA6  A585               	btfss	(_M+27)& (0+255),2,b
  2655  004CA8  B97B               	btfsc	(_M+17)& (0+255),4,b
  2656  004CAA  D02E               	goto	l224
  2657  004CAC  0100               	movlb	(_M+10) shr (0+8)
  2658  004CAE  5174               	movf	(_M+10)& (0+255),w,b
  2659  004CB0  1175               	iorwf	(_M+11)& (0+255),w,b
  2660  004CB2  E02A               	bz	l224
  2661  004CB4  0101               	movlb	_DtCO shr (0+8)
  2662  004CB6  B320               	btfsc	_DtCO& (0+255),1,b
  2663  004CB8  D027               	goto	l224
  2664  004CBA  D970               	call	_ToObiegCO	;wreg free
  2665  004CBC  D038               	goto	l200
  2666                           ;main.c: 1147: else
  2667  004CBE                     l226:
  2668                           ;main.c: 1152: case 2:
  2669  004CBE  0100               	movlb	(_M+27) shr (0+8)
  2670  004CC0  A585               	btfss	(_M+27)& (0+255),2,b
  2671  004CC2  B17A               	btfsc	(_M+16)& (0+255),0,b
  2672  004CC4  D034               	goto	l200
  2673  004CC6  0100               	movlb	(_M+16) shr (0+8)
  2674  004CC8  A77A               	btfss	(_M+16)& (0+255),3,b
  2675  004CCA  D98F               	call	_ToObiegCW	;wreg free
  2676                           ;main.c: 1156: break;
  2677  004CCC  D030               	goto	l200
  2678  004CCE                     l228:
  2679                           ;main.c: 1157: }
  2680                           ;main.c: 1159: {
  2681  004CCE  0100               	movlb	(_M+27) shr (0+8)
  2682  004CD0  A585               	btfss	(_M+27)& (0+255),2,b
  2683  004CD2  B17A               	btfsc	(_M+16)& (0+255),0,b
  2684  004CD4  D02C               	goto	l200
  2685  004CD6  0100               	movlb	(_M+16) shr (0+8)
  2686  004CD8  B77A               	btfsc	(_M+16)& (0+255),3,b
  2687  004CDA  D029               	goto	l200
  2688  004CDC  A483               	btfss	3971,2,c	;volatile
  2689  004CDE  D003               	goto	u3500
  2690  004CE0  0100               	movlb	(_M+16) shr (0+8)
  2691  004CE2  A97A               	btfss	(_M+16)& (0+255),4,b
  2692  004CE4  D024               	goto	l200
  2693  004CE6                     u3500:
  2694  004CE6  D981               	call	_ToObiegCW	;wreg free
  2695                           ;main.c: 1162: break;
  2696  004CE8  D022               	goto	l200
  2697  004CEA                     l230:
  2698                           ;main.c: 1163: }
  2699                           ;main.c: 1165: {
  2700  004CEA  0100               	movlb	(_M+27) shr (0+8)
  2701  004CEC  B585               	btfsc	(_M+27)& (0+255),2,b
  2702  004CEE  D01F               	goto	l200
  2703  004CF0  0E11               	movlw	17
  2704  004CF2  ECC4  F05B         	call	_RdPrt
  2705  004CF6  E206               	bc	u3590
  2706  004CF8  0100               	movlb	(_M+16) shr (0+8)
  2707  004CFA  A17A               	btfss	(_M+16)& (0+255),0,b
  2708  004CFC  B77A               	btfsc	(_M+16)& (0+255),3,b
  2709  004CFE  D017               	goto	l200
  2710  004D00  B483               	btfsc	3971,2,c	;volatile
  2711  004D02  D015               	goto	l200
  2712  004D04                     u3590:
  2713  004D04  D972               	call	_ToObiegCW	;wreg free
  2714                           ;main.c: 1168: break;
  2715  004D06  D013               	goto	l200
  2716                           ;main.c: 1174: break;
  2717  004D08                     l224:
  2718  004D08  C1B9  FFE8         	movff	_DtKNF+7,wreg
  2719  004D0C  0A00               	xorlw	0
  2720  004D0E  E0ED               	bz	l230
  2721  004D10  0A01               	xorlw	1
  2722  004D12  E0D5               	bz	l226
  2723  004D14  0A03               	xorlw	3
  2724  004D16  E0D3               	bz	l226
  2725  004D18  0A01               	xorlw	1
  2726  004D1A  E0D9               	bz	l228
  2727                           ;main.c: 1169: }
  2728                           ;main.c: 1171: {
  2729  004D1C  0100               	movlb	(_M+27) shr (0+8)
  2730  004D1E  A585               	btfss	(_M+27)& (0+255),2,b
  2731  004D20  B17A               	btfsc	(_M+16)& (0+255),0,b
  2732  004D22  D005               	goto	l200
  2733  004D24  0100               	movlb	(_M+16) shr (0+8)
  2734  004D26  A77A               	btfss	(_M+16)& (0+255),3,b
  2735  004D28  B483               	btfsc	3971,2,c	;volatile
  2736  004D2A  D001               	goto	l200
  2737  004D2C  D95E               	call	_ToObiegCW	;wreg free
  2738  004D2E                     l200:
  2739                           ;main.c: 1177: }
  2740  004D2E  0100               	movlb	(_M+16) shr (0+8)
  2741  004D30  A37A               	btfss	(_M+16)& (0+255),1,b
  2742  004D32  D069               	goto	l236
  2743  004D34  D084               	goto	l234
  2744                           ;main.c: 1182: {
  2745  004D36                     l238:
  2746                           ;main.c: 1186: case 2:
  2747  004D36  0100               	movlb	(_M+16) shr (0+8)
  2748  004D38  A17A               	btfss	(_M+16)& (0+255),0,b
  2749  004D3A  B77A               	btfsc	(_M+16)& (0+255),3,b
  2750  004D3C  D080               	goto	l234
  2751  004D3E  0100               	movlb	(_M+27) shr (0+8)
  2752  004D40  B585               	btfsc	(_M+27)& (0+255),2,b
  2753  004D42  D07D               	goto	l234
  2754                           ;main.c: 1189: {
  2755  004D44  0100               	movlb	(_M+27) shr (0+8)
  2756  004D46  BF85               	btfsc	(_M+27)& (0+255),7,b
  2757  004D48  D007               	goto	l240
  2758  004D4A  0E0D               	movlw	13
  2759  004D4C  ECC4  F05B         	call	_RdPrt
  2760  004D50  E303               	bnc	l240
  2761  004D52                     u3750:
  2762                           ;main.c: 1192: {
  2763  004D52  0100               	movlb	(_M+16) shr (0+8)
  2764  004D54  817A               	bsf	(_M+16)& (0+255),0,b
  2765                           ;main.c: 1194: }
  2766  004D56  D073               	goto	l234
  2767  004D58                     l240:
  2768                           ;main.c: 1195: else
  2769  004D58  0100               	movlb	(_M+27) shr (0+8)
  2770  004D5A  BF85               	btfsc	(_M+27)& (0+255),7,b
  2771  004D5C  D070               	goto	l234
  2772  004D5E  0101               	movlb	(_PFN+1) shr (0+8)
  2773  004D60  510D               	movf	(_PFN+1)& (0+255),w,b
  2774  004D62  0A01               	xorlw	1
  2775  004D64  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2776  004D66  E06B               	bz	l234
  2777  004D68  510D               	movf	(_PFN+1)& (0+255),w,b
  2778  004D6A  0A02               	xorlw	2
  2779  004D6C  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2780  004D6E  E067               	bz	l234
  2781  004D70  0100               	movlb	(_M+10) shr (0+8)
  2782  004D72  5174               	movf	(_M+10)& (0+255),w,b
  2783  004D74  1175               	iorwf	(_M+11)& (0+255),w,b
  2784  004D76  E063               	bz	l234
  2785  004D78  0101               	movlb	_DtCO shr (0+8)
  2786  004D7A  B320               	btfsc	_DtCO& (0+255),1,b
  2787  004D7C  D060               	goto	l234
  2788  004D7E  D7E9               	goto	u3750
  2789                           ;main.c: 1198: {
  2790                           ;main.c: 1200: }
  2791  004D80                     l243:
  2792                           ;main.c: 1203: }
  2793                           ;main.c: 1205: {
  2794  004D80  B483               	btfsc	3971,2,c	;volatile
  2795  004D82  D05D               	goto	l234
  2796  004D84  0100               	movlb	(_M+16) shr (0+8)
  2797  004D86  B17A               	btfsc	(_M+16)& (0+255),0,b
  2798  004D88  D05A               	goto	l234
  2799  004D8A  0100               	movlb	(_M+16) shr (0+8)
  2800  004D8C  B77A               	btfsc	(_M+16)& (0+255),3,b
  2801  004D8E  D057               	goto	l234
  2802  004D90  0100               	movlb	(_M+16) shr (0+8)
  2803  004D92  B97A               	btfsc	(_M+16)& (0+255),4,b
  2804  004D94  D054               	goto	l234
  2805  004D96  0100               	movlb	(_M+27) shr (0+8)
  2806  004D98  B585               	btfsc	(_M+27)& (0+255),2,b
  2807  004D9A  D051               	goto	l234
  2808                           ;main.c: 1207: {
  2809  004D9C  0E0D               	movlw	13
  2810  004D9E  ECC4  F05B         	call	_RdPrt
  2811  004DA2                     L32:
  2812  004DA2  E24A               	bc	u4280
  2813  004DA4                     L19:
  2814                           ;main.c: 1210: {
  2815                           ;main.c: 1212: RD2=1;
  2816                           ;main.c: 1213: }
  2817                           ;main.c: 1214: else
  2818  004DA4  0101               	movlb	(_PFN+1) shr (0+8)
  2819  004DA6  510D               	movf	(_PFN+1)& (0+255),w,b
  2820  004DA8  0A01               	xorlw	1
  2821  004DAA  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2822  004DAC  E048               	bz	l234
  2823  004DAE  510D               	movf	(_PFN+1)& (0+255),w,b
  2824  004DB0  0A02               	xorlw	2
  2825  004DB2  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2826  004DB4  E044               	bz	l234
  2827  004DB6                     L17:
  2828  004DB6  0100               	movlb	(_M+10) shr (0+8)
  2829  004DB8  5174               	movf	(_M+10)& (0+255),w,b
  2830  004DBA  1175               	iorwf	(_M+11)& (0+255),w,b
  2831  004DBC  E040               	bz	l234
  2832  004DBE  0101               	movlb	_DtCO shr (0+8)
  2833  004DC0  B320               	btfsc	_DtCO& (0+255),1,b
  2834  004DC2  D03D               	goto	l234
  2835  004DC4  D039               	goto	u4280
  2836                           ;main.c: 1217: {
  2837                           ;main.c: 1219: RD2=1;
  2838                           ;main.c: 1220: }
  2839  004DC6                     l248:
  2840                           ;main.c: 1223: }
  2841                           ;main.c: 1225: {
  2842  004DC6  B483               	btfsc	3971,2,c	;volatile
  2843  004DC8  D03A               	goto	l234
  2844  004DCA  0100               	movlb	(_M+16) shr (0+8)
  2845  004DCC  B17A               	btfsc	(_M+16)& (0+255),0,b
  2846  004DCE  D037               	goto	l234
  2847  004DD0  0100               	movlb	(_M+16) shr (0+8)
  2848  004DD2  B77A               	btfsc	(_M+16)& (0+255),3,b
  2849  004DD4  D034               	goto	l234
  2850  004DD6  0100               	movlb	(_M+27) shr (0+8)
  2851  004DD8  B585               	btfsc	(_M+27)& (0+255),2,b
  2852  004DDA  D031               	goto	l234
  2853                           ;main.c: 1227: {
  2854  004DDC  0E0D               	movlw	13
  2855  004DDE  ECC4  F05B         	call	_RdPrt
  2856  004DE2  E22A               	bc	u4280
  2857  004DE4  0100               	movlb	(_M+27) shr (0+8)
  2858  004DE6  AF85               	btfss	(_M+27)& (0+255),7,b
  2859  004DE8  D7DD               	goto	L19
  2860  004DEA  0E11               	movlw	17
  2861  004DEC  ECC4  F05B         	call	_RdPrt
  2862  004DF0  D7D8               	goto	L32
  2863                           ;main.c: 1230: {
  2864                           ;main.c: 1232: RD2=1;
  2865                           ;main.c: 1233: }
  2866                           ;main.c: 1234: else
  2867                           ;main.c: 1237: {
  2868                           ;main.c: 1239: RD2=1;
  2869                           ;main.c: 1240: }
  2870                           ;main.c: 1253: }
  2871  004DF2                     l255:
  2872                           ;main.c: 1254: else
  2873  004DF2  0101               	movlb	(_PFN+1) shr (0+8)
  2874  004DF4  510D               	movf	(_PFN+1)& (0+255),w,b
  2875  004DF6  0A01               	xorlw	1
  2876  004DF8  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2877  004DFA  E021               	bz	l234
  2878  004DFC  510D               	movf	(_PFN+1)& (0+255),w,b
  2879  004DFE  0A02               	xorlw	2
  2880  004E00  110E               	iorwf	(_PFN+2)& (0+255),w,b
  2881  004E02  E1D9               	bnz	L17
  2882                           ;main.c: 1257: {
  2883                           ;main.c: 1259: RD2=1;
  2884                           ;main.c: 1260: }
  2885  004E04  D01C               	goto	l234
  2886  004E06                     l236:
  2887  004E06  C1B9  FFE8         	movff	_DtKNF+7,wreg
  2888  004E0A  0A00               	xorlw	0
  2889  004E0C  E0DC               	bz	l248
  2890  004E0E  0A01               	xorlw	1
  2891  004E10  E092               	bz	l238
  2892  004E12  0A03               	xorlw	3
  2893  004E14  E090               	bz	l238
  2894  004E16  0A01               	xorlw	1
  2895  004E18  E0B3               	bz	l243
  2896                           ;main.c: 1243: }
  2897                           ;main.c: 1245: {
  2898  004E1A  B483               	btfsc	3971,2,c	;volatile
  2899  004E1C  D010               	goto	l234
  2900  004E1E  0100               	movlb	(_M+16) shr (0+8)
  2901  004E20  B17A               	btfsc	(_M+16)& (0+255),0,b
  2902  004E22  D00D               	goto	l234
  2903  004E24  0100               	movlb	(_M+16) shr (0+8)
  2904  004E26  B77A               	btfsc	(_M+16)& (0+255),3,b
  2905  004E28  D00A               	goto	l234
  2906  004E2A  0100               	movlb	(_M+27) shr (0+8)
  2907  004E2C  B585               	btfsc	(_M+27)& (0+255),2,b
  2908  004E2E  D007               	goto	l234
  2909                           ;main.c: 1247: {
  2910  004E30  0E0D               	movlw	13
  2911  004E32  ECC4  F05B         	call	_RdPrt
  2912  004E36  E3DD               	bnc	l255
  2913  004E38                     u4280:
  2914                           ;main.c: 1250: {
  2915  004E38  0100               	movlb	(_M+16) shr (0+8)
  2916  004E3A  817A               	bsf	(_M+16)& (0+255),0,b
  2917                           ;main.c: 1252: RD2=1;
  2918  004E3C  8483               	bsf	3971,2,c	;volatile
  2919  004E3E                     l234:
  2920                           ;main.c: 1265: }
  2921  004E3E  0100               	movlb	(_M+27) shr (0+8)
  2922  004E40  A585               	btfss	(_M+27)& (0+255),2,b
  2923  004E42  D031               	goto	l258
  2924  004E44  5174               	movf	(_M+10)& (0+255),w,b
  2925  004E46  1175               	iorwf	(_M+11)& (0+255),w,b
  2926  004E48  E107               	bnz	u4420
  2927  004E4A  5176               	movf	(_M+12)& (0+255),w,b
  2928  004E4C  1177               	iorwf	(_M+13)& (0+255),w,b
  2929  004E4E  E104               	bnz	u4420
  2930  004E50  0100               	movlb	(_M+14) shr (0+8)
  2931  004E52  5178               	movf	(_M+14)& (0+255),w,b
  2932  004E54  1179               	iorwf	(_M+15)& (0+255),w,b
  2933  004E56  E027               	bz	l258
  2934  004E58                     u4420:
  2935  004E58  0100               	movlb	(_M+4) shr (0+8)
  2936  004E5A  516E               	movf	(_M+4)& (0+255),w,b
  2937  004E5C  116F               	iorwf	(_M+5)& (0+255),w,b
  2938  004E5E  E123               	bnz	l258
  2939  004E60  0100               	movlb	(_M+24) shr (0+8)
  2940  004E62  5182               	movf	(_M+24)& (0+255),w,b
  2941  004E64  1183               	iorwf	(_M+25)& (0+255),w,b
  2942  004E66  E11F               	bnz	l258
  2943  004E68  0100               	movlb	_M shr (0+8)
  2944  004E6A  516A               	movf	_M& (0+255),w,b
  2945  004E6C  116B               	iorwf	(_M+1)& (0+255),w,b
  2946  004E6E  E11B               	bnz	l258
  2947  004E70  0100               	movlb	(_M+2) shr (0+8)
  2948  004E72  516C               	movf	(_M+2)& (0+255),w,b
  2949  004E74  116D               	iorwf	(_M+3)& (0+255),w,b
  2950  004E76  E117               	bnz	l258
  2951  004E78  0100               	movlb	(_M+8) shr (0+8)
  2952  004E7A  5172               	movf	(_M+8)& (0+255),w,b
  2953  004E7C  1173               	iorwf	(_M+9)& (0+255),w,b
  2954  004E7E  E113               	bnz	l258
  2955  004E80  0100               	movlb	(_M+6) shr (0+8)
  2956  004E82  5170               	movf	(_M+6)& (0+255),w,b
  2957  004E84  1171               	iorwf	(_M+7)& (0+255),w,b
  2958  004E86  E10F               	bnz	l258
  2959                           ;main.c: 1269: {
  2960  004E88  C180  FFE8         	movff	_PWM+11,wreg
  2961  004E8C  0101               	movlb	(_PWM+10) shr (0+8)
  2962  004E8E  617F               	cpfslt	(_PWM+10)& (0+255),b
  2963  004E90  D00A               	goto	l258
  2964  004E92  0E10               	movlw	16
  2965  004E94  EC4D  F05C         	call	_RTS
  2966  004E98  6E00               	movwf	btemp,c
  2967  004E9A  0E05               	movlw	5
  2968  004E9C  5C00               	subwf	btemp,w,c
  2969  004E9E  E203               	bc	l258
  2970                           ;main.c: 1271: {
  2971  004EA0  C180  F17E         	movff	_PWM+11,_PWM+9
  2972                           ;main.c: 1273: }
  2973  004EA4  D002               	goto	l261
  2974                           ;main.c: 1274: else
  2975                           ;main.c: 1277: }
  2976  004EA6                     l258:
  2977                           ;main.c: 1279: else
  2978  004EA6  C17F  F17E         	movff	_PWM+10,_PWM+9
  2979  004EAA                     l261:
  2980                           ;main.c: 1282: }
  2981  004EAA  0100               	movlb	(_M+10) shr (0+8)
  2982  004EAC  5174               	movf	(_M+10)& (0+255),w,b
  2983  004EAE  1175               	iorwf	(_M+11)& (0+255),w,b
  2984  004EB0  E107               	bnz	u4610
  2985  004EB2  5172               	movf	(_M+8)& (0+255),w,b
  2986  004EB4  1173               	iorwf	(_M+9)& (0+255),w,b
  2987  004EB6  E104               	bnz	u4610
  2988  004EB8  0100               	movlb	(_M+6) shr (0+8)
  2989  004EBA  5170               	movf	(_M+6)& (0+255),w,b
  2990  004EBC  1171               	iorwf	(_M+7)& (0+255),w,b
  2991  004EBE  E00B               	bz	l262
  2992  004EC0                     u4610:
  2993                           ;main.c: 1286: {
  2994  004EC0  0100               	movlb	(_M+16) shr (0+8)
  2995  004EC2  A57A               	btfss	(_M+16)& (0+255),2,b
  2996  004EC4  A083               	btfss	3971,0,c	;volatile
  2997  004EC6  D007               	goto	l262
  2998                           ;main.c: 1288: {
  2999  004EC8  0100               	movlb	(_M+17) shr (0+8)
  3000  004ECA  BB7B               	btfsc	(_M+17)& (0+255),5,b
  3001  004ECC  D006               	goto	l266
  3002                           ;main.c: 1290: {
  3003  004ECE  8B7B               	bsf	(_M+17)& (0+255),5,b
  3004                           ;main.c: 1292: RestartMod();
  3005  004ED0  ECD7  F01E         	call	_RestartMod	;wreg free
  3006                           ;main.c: 1294: }
  3007  004ED4  D002               	goto	l266
  3008                           ;main.c: 1296: else M._MODULUJ=0;
  3009                           ;main.c: 1297: }
  3010  004ED6                     l262:
  3011                           ;main.c: 1298: else M._MODULUJ=0;
  3012  004ED6  0100               	movlb	(_M+17) shr (0+8)
  3013  004ED8  9B7B               	bcf	(_M+17)& (0+255),5,b
  3014  004EDA                     l266:
  3015                           ;main.c: 1300: if(!M._PRACA||!RdPrt(8)||M._RUN_M
      +                          NMOD)
  3016  004EDA  0100               	movlb	(_M+27) shr (0+8)
  3017  004EDC  A585               	btfss	(_M+27)& (0+255),2,b
  3018  004EDE  D007               	goto	u4700
  3019  004EE0  0E08               	movlw	8
  3020  004EE2  ECC4  F05B         	call	_RdPrt
  3021  004EE6  E303               	bnc	u4700
  3022  004EE8  0100               	movlb	(_M+27) shr (0+8)
  3023  004EEA  A985               	btfss	(_M+27)& (0+255),4,b
  3024  004EEC  D010               	goto	l267
  3025  004EEE                     u4700:
  3026                           ;main.c: 1301: {
  3027  004EEE  0100               	movlb	(_M+17) shr (0+8)
  3028  004EF0  9B7B               	bcf	(_M+17)& (0+255),5,b
  3029                           ;main.c: 1303: if(!M._PRACA||!RdPrt(8)) WritePWM
      +                          (0);
  3030  004EF2  A585               	btfss	(_M+27)& (0+255),2,b
  3031  004EF4  D004               	goto	u4740
  3032  004EF6  0E08               	movlw	8
  3033  004EF8  ECC4  F05B         	call	_RdPrt
  3034  004EFC  E204               	bc	l268
  3035  004EFE                     u4740:
  3036  004EFE  0E00               	movlw	0
  3037  004F00  ECD4  F054         	call	_WritePWM
  3038  004F04  D004               	goto	l267
  3039  004F06                     l268:
  3040                           ;main.c: 1304: else WritePWM(PWM.MDMOD);
  3041  004F06  C17E  FFE8         	movff	_PWM+9,wreg
  3042  004F0A  ECD4  F054         	call	_WritePWM
  3043  004F0E                     l267:
  3044                           ;main.c: 1305: }
  3045  004F0E  0100               	movlb	(_M+2) shr (0+8)
  3046  004F10  516C               	movf	(_M+2)& (0+255),w,b
  3047  004F12  116D               	iorwf	(_M+3)& (0+255),w,b
  3048  004F14  A4D8               	btfss	status,2,c
  3049  004F16  B57A               	btfsc	(_M+16)& (0+255),2,b
  3050  004F18  D006               	goto	l270
  3051  004F1A  A083               	btfss	3971,0,c	;volatile
  3052  004F1C  D004               	goto	l270
  3053  004F1E  C195  FFE8         	movff	_PWM+32,wreg
  3054  004F22  ECD4  F054         	call	_WritePWM
  3055  004F26                     l270:
  3056                           ;main.c: 1308: if(M._pob_KCO&&!M._ROZRUCH&&RD0) 
      +                          WritePWM(PWM.MMAXCO);
  3057  004F26  0100               	movlb	_M shr (0+8)
  3058  004F28  516A               	movf	_M& (0+255),w,b
  3059  004F2A  116B               	iorwf	(_M+1)& (0+255),w,b
  3060  004F2C  A4D8               	btfss	status,2,c
  3061  004F2E  B57A               	btfsc	(_M+16)& (0+255),2,b
  3062  004F30  D006               	goto	l271
  3063  004F32  A083               	btfss	3971,0,c	;volatile
  3064  004F34  D004               	goto	l271
  3065  004F36  C194  FFE8         	movff	_PWM+31,wreg
  3066  004F3A  ECD4  F054         	call	_WritePWM
  3067  004F3E                     l271:
  3068                           ;main.c: 1312: if(M._pob_SRW&&!M._ROZRUCH&&RD0)
  3069  004F3E  0100               	movlb	(_M+4) shr (0+8)
  3070  004F40  516E               	movf	(_M+4)& (0+255),w,b
  3071  004F42  116F               	iorwf	(_M+5)& (0+255),w,b
  3072  004F44  A4D8               	btfss	status,2,c
  3073  004F46  B57A               	btfsc	(_M+16)& (0+255),2,b
  3074  004F48  D011               	goto	l272
  3075  004F4A  A083               	btfss	3971,0,c	;volatile
  3076  004F4C  D00F               	goto	l272
  3077                           ;main.c: 1313: {
  3078  004F4E  0100               	movlb	__Lparam shr (0+8)
  3079  004F50  6BEC               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
  3080  004F52  C0D4  FFE8         	movff	_RSDT1+55,wreg
  3081  004F56  EC06  F061         	call	_GetBit2
  3082  004F5A  E304               	bnc	l273
  3083  004F5C  0EF0               	movlw	240
  3084  004F5E  ECD4  F054         	call	_WritePWM
  3085  004F62  D004               	goto	l272
  3086  004F64                     l273:
  3087                           ;main.c: 1315: else WritePWM(PWM.MDMOD);
  3088  004F64  C17E  FFE8         	movff	_PWM+9,wreg
  3089  004F68  ECD4  F054         	call	_WritePWM
  3090  004F6C                     l272:
  3091                           ;main.c: 1316: }
  3092  004F6C  0100               	movlb	(_M+12) shr (0+8)
  3093  004F6E  5176               	movf	(_M+12)& (0+255),w,b
  3094  004F70  1177               	iorwf	(_M+13)& (0+255),w,b
  3095  004F72  A4D8               	btfss	status,2,c
  3096  004F74  B57A               	btfsc	(_M+16)& (0+255),2,b
  3097  004F76  D006               	goto	l275
  3098  004F78  A083               	btfss	3971,0,c	;volatile
  3099  004F7A  D004               	goto	l275
  3100  004F7C  C17E  FFE8         	movff	_PWM+9,wreg
  3101  004F80  ECD4  F054         	call	_WritePWM
  3102  004F84                     l275:
  3103                           ;main.c: 1319: if(M._pob_DzCW&&!M._ROZRUCH&&RD0)
      +                           WritePWM(PWM.MDMOD);
  3104  004F84  0100               	movlb	(_M+14) shr (0+8)
  3105  004F86  5178               	movf	(_M+14)& (0+255),w,b
  3106  004F88  1179               	iorwf	(_M+15)& (0+255),w,b
  3107  004F8A  A4D8               	btfss	status,2,c
  3108  004F8C  B57A               	btfsc	(_M+16)& (0+255),2,b
  3109  004F8E  0012               	return	
  3110  004F90  A083               	btfss	3971,0,c	;volatile
  3111  004F92  0012               	return	
  3112  004F94  C17E  FFE8         	movff	_PWM+9,wreg
  3113  004F98  EFD4  F054         	goto	_WritePWM
  3114                           ;main.c: 1320: }
  3115  004F9C                     __end_of_DecSTR:
  3116                           ;main.c: 1322: void ToObiegCO(void)
  3117                           ;main.c: 1323: {
  3118  004F9C                     _ToObiegCO:
  3119  000000                     
  3120                           ;main.c: 1324: switch(DtKNF.tpkt)
  3121  004F9C  D01B               	goto	l279
  3122  004F9E                     l281:
  3123                           ;main.c: 1327: case 2:
  3124  004F9E  0100               	movlb	(_M+16) shr (0+8)
  3125  004FA0  A37A               	btfss	(_M+16)& (0+255),1,b
  3126  004FA2  B483               	btfsc	3971,2,c	;volatile
  3127  004FA4  0012               	return	
  3128                           ;main.c: 1330: {
  3129  004FA6  0100               	movlb	(_M+27) shr (0+8)
  3130  004FA8  9F85               	bcf	(_M+27)& (0+255),7,b
  3131                           ;main.c: 1332: M._ZMKCOCW=1;
  3132  004FAA  837A               	bsf	(_M+16)& (0+255),1,b
  3133                           ;main.c: 1333: M.ZKP=0;
  3134  004FAC  6B97               	clrf	(_M+45)& (0+255),b
  3135                           ;main.c: 1334: }
  3136  004FAE  0012               	return	
  3137  004FB0                     l284:
  3138                           ;main.c: 1338: case 3:
  3139  004FB0  0100               	movlb	(_M+16) shr (0+8)
  3140  004FB2  A37A               	btfss	(_M+16)& (0+255),1,b
  3141  004FB4  B283               	btfsc	3971,1,c	;volatile
  3142  004FB6  0012               	return	
  3143                           ;main.c: 1341: {
  3144  004FB8  0100               	movlb	(_M+27) shr (0+8)
  3145  004FBA  9F85               	bcf	(_M+27)& (0+255),7,b
  3146                           ;main.c: 1343: M._ZMKCOCW=1;
  3147  004FBC  837A               	bsf	(_M+16)& (0+255),1,b
  3148                           ;main.c: 1344: M.ZKP=0;
  3149  004FBE  6B97               	clrf	(_M+45)& (0+255),b
  3150                           ;main.c: 1345: }
  3151  004FC0  0012               	return	
  3152  004FC2                     l286:
  3153                           ;main.c: 1347: }
  3154                           ;main.c: 1349: {
  3155  004FC2  0100               	movlb	(_M+16) shr (0+8)
  3156  004FC4  A37A               	btfss	(_M+16)& (0+255),1,b
  3157  004FC6  B283               	btfsc	3971,1,c	;volatile
  3158  004FC8  0012               	return	
  3159                           ;main.c: 1351: {
  3160  004FCA  0100               	movlb	(_M+27) shr (0+8)
  3161  004FCC  9F85               	bcf	(_M+27)& (0+255),7,b
  3162                           ;main.c: 1353: M._ZMKCOCW=1;
  3163  004FCE  837A               	bsf	(_M+16)& (0+255),1,b
  3164                           ;main.c: 1354: M.ZKP=0;
  3165  004FD0  6B97               	clrf	(_M+45)& (0+255),b
  3166                           ;main.c: 1355: }
  3167  004FD2  0012               	return	
  3168  004FD4                     l279:
  3169  004FD4  C1B9  FFE8         	movff	_DtKNF+7,wreg
  3170  004FD8  0A00               	xorlw	0
  3171  004FDA  E0EA               	bz	l284
  3172  004FDC  0A01               	xorlw	1
  3173  004FDE  E0DF               	bz	l281
  3174  004FE0  0A03               	xorlw	3
  3175  004FE2  E0DD               	bz	l281
  3176  004FE4  0A01               	xorlw	1
  3177  004FE6  E0E4               	bz	l284
  3178  004FE8  D7EC               	goto	l286
  3179                           ;main.c: 1359: }
  3180  004FEA                     __end_of_ToObiegCO:
  3181                           ;main.c: 1361: void ToObiegCW(void)
  3182                           ;main.c: 1362: {
  3183  004FEA                     _ToObiegCW:
  3184  000000                     
  3185                           ;main.c: 1363: switch(DtKNF.tpkt)
  3186  004FEA  D053               	goto	l290
  3187  004FEC                     l292:
  3188                           ;main.c: 1366: case 2:
  3189  004FEC  0100               	movlb	(_M+16) shr (0+8)
  3190  004FEE  A37A               	btfss	(_M+16)& (0+255),1,b
  3191  004FF0  A483               	btfss	3971,2,c	;volatile
  3192  004FF2  0012               	return	
  3193                           ;main.c: 1369: {
  3194  004FF4  0100               	movlb	(_M+27) shr (0+8)
  3195  004FF6  8F85               	bsf	(_M+27)& (0+255),7,b
  3196                           ;main.c: 1371: M._ZMKCOCW=1;
  3197  004FF8  837A               	bsf	(_M+16)& (0+255),1,b
  3198                           ;main.c: 1372: M.ZKP=0;
  3199  004FFA  6B97               	clrf	(_M+45)& (0+255),b
  3200                           ;main.c: 1373: if(M._pob_KCW||M._pob_CW||M._pob_
      +                          DzCW)
  3201  004FFC  516C               	movf	(_M+2)& (0+255),w,b
  3202  004FFE  116D               	iorwf	(_M+3)& (0+255),w,b
  3203  005000  E108               	bnz	u5160
  3204  005002  5172               	movf	(_M+8)& (0+255),w,b
  3205  005004  1173               	iorwf	(_M+9)& (0+255),w,b
  3206  005006  E105               	bnz	u5160
  3207  005008  0100               	movlb	(_M+14) shr (0+8)
  3208  00500A  5178               	movf	(_M+14)& (0+255),w,b
  3209  00500C  1179               	iorwf	(_M+15)& (0+255),w,b
  3210  00500E  B4D8               	btfsc	status,2,c
  3211  005010  0012               	return	
  3212  005012                     u5160:
  3213                           ;main.c: 1374: {
  3214  005012  0100               	movlb	(_M+27) shr (0+8)
  3215  005014  A585               	btfss	(_M+27)& (0+255),2,b
  3216  005016  0012               	return	
  3217                           ;main.c: 1376: {
  3218  005018  897B               	bsf	(_M+17)& (0+255),4,b
  3219                           ;main.c: 1378: M.BL15=0;
  3220  00501A  6B91               	clrf	(_M+39)& (0+255),b
  3221                           ;main.c: 1379: }
  3222  00501C  0012               	return	
  3223  00501E                     l297:
  3224                           ;main.c: 1385: case 3:
  3225  00501E  0100               	movlb	(_M+16) shr (0+8)
  3226  005020  A37A               	btfss	(_M+16)& (0+255),1,b
  3227  005022  A283               	btfss	3971,1,c	;volatile
  3228  005024  0012               	return	
  3229                           ;main.c: 1388: {
  3230  005026  0100               	movlb	(_M+27) shr (0+8)
  3231  005028  8F85               	bsf	(_M+27)& (0+255),7,b
  3232                           ;main.c: 1390: M._ZMKCOCW=1;
  3233  00502A  837A               	bsf	(_M+16)& (0+255),1,b
  3234                           ;main.c: 1391: M.ZKP=0;
  3235  00502C  6B97               	clrf	(_M+45)& (0+255),b
  3236                           ;main.c: 1392: if(M._pob_KCW||M._pob_CW||M._pob_
      +                          DzCW||M._pob_AL)
  3237  00502E  516C               	movf	(_M+2)& (0+255),w,b
  3238  005030  116D               	iorwf	(_M+3)& (0+255),w,b
  3239  005032  E10C               	bnz	u5280
  3240  005034  5172               	movf	(_M+8)& (0+255),w,b
  3241  005036  1173               	iorwf	(_M+9)& (0+255),w,b
  3242  005038  E109               	bnz	u5280
  3243  00503A  0100               	movlb	(_M+14) shr (0+8)
  3244  00503C  5178               	movf	(_M+14)& (0+255),w,b
  3245  00503E  1179               	iorwf	(_M+15)& (0+255),w,b
  3246  005040  E105               	bnz	u5280
  3247  005042  0100               	movlb	(_M+6) shr (0+8)
  3248  005044  5170               	movf	(_M+6)& (0+255),w,b
  3249  005046  1171               	iorwf	(_M+7)& (0+255),w,b
  3250  005048  B4D8               	btfsc	status,2,c
  3251  00504A  0012               	return	
  3252  00504C                     u5280:
  3253                           ;main.c: 1393: {
  3254  00504C  0100               	movlb	(_M+27) shr (0+8)
  3255  00504E  A585               	btfss	(_M+27)& (0+255),2,b
  3256  005050  0012               	return	
  3257                           ;main.c: 1395: {
  3258  005052  897B               	bsf	(_M+17)& (0+255),4,b
  3259                           ;main.c: 1397: M.BL15=0;
  3260  005054  6B91               	clrf	(_M+39)& (0+255),b
  3261                           ;main.c: 1398: }
  3262  005056  0012               	return	
  3263  005058                     l301:
  3264                           ;main.c: 1402: }
  3265                           ;main.c: 1404: {
  3266  005058  0100               	movlb	(_M+16) shr (0+8)
  3267  00505A  A37A               	btfss	(_M+16)& (0+255),1,b
  3268  00505C  A283               	btfss	3971,1,c	;volatile
  3269  00505E  0012               	return	
  3270                           ;main.c: 1406: {
  3271  005060  0100               	movlb	(_M+27) shr (0+8)
  3272  005062  8F85               	bsf	(_M+27)& (0+255),7,b
  3273                           ;main.c: 1408: M._ZMKCOCW=1;
  3274  005064  837A               	bsf	(_M+16)& (0+255),1,b
  3275                           ;main.c: 1409: M.ZKP=0;
  3276  005066  6B97               	clrf	(_M+45)& (0+255),b
  3277                           ;main.c: 1410: if(M._pob_KCW||M._pob_CW||M._pob_
      +                          DzCW||M._pob_AL)
  3278  005068  516C               	movf	(_M+2)& (0+255),w,b
  3279  00506A  116D               	iorwf	(_M+3)& (0+255),w,b
  3280  00506C  E10C               	bnz	u5390
  3281  00506E  5172               	movf	(_M+8)& (0+255),w,b
  3282  005070  1173               	iorwf	(_M+9)& (0+255),w,b
  3283  005072  E109               	bnz	u5390
  3284  005074  0100               	movlb	(_M+14) shr (0+8)
  3285  005076  5178               	movf	(_M+14)& (0+255),w,b
  3286  005078  1179               	iorwf	(_M+15)& (0+255),w,b
  3287  00507A  E105               	bnz	u5390
  3288  00507C  0100               	movlb	(_M+6) shr (0+8)
  3289  00507E  5170               	movf	(_M+6)& (0+255),w,b
  3290  005080  1171               	iorwf	(_M+7)& (0+255),w,b
  3291  005082  B4D8               	btfsc	status,2,c
  3292  005084  0012               	return	
  3293  005086                     u5390:
  3294                           ;main.c: 1411: {
  3295  005086  0100               	movlb	(_M+27) shr (0+8)
  3296  005088  A585               	btfss	(_M+27)& (0+255),2,b
  3297  00508A  0012               	return	
  3298                           ;main.c: 1413: {
  3299  00508C  897B               	bsf	(_M+17)& (0+255),4,b
  3300                           ;main.c: 1415: M.BL15=0;
  3301  00508E  6B91               	clrf	(_M+39)& (0+255),b
  3302                           ;main.c: 1416: }
  3303  005090  0012               	return	
  3304  005092                     l290:
  3305  005092  C1B9  FFE8         	movff	_DtKNF+7,wreg
  3306  005096  0A00               	xorlw	0
  3307  005098  E0C2               	bz	l297
  3308  00509A  0A01               	xorlw	1
  3309  00509C  E0A7               	bz	l292
  3310  00509E  0A03               	xorlw	3
  3311  0050A0  E0A5               	bz	l292
  3312  0050A2  0A01               	xorlw	1
  3313  0050A4  E0BC               	bz	l297
  3314  0050A6  D7D8               	goto	l301
  3315                           ;main.c: 1422: }
  3316  0050A8                     __end_of_ToObiegCW:
  3317                           ;main.c: 1424: void SetLoMod(void)
  3318                           ;main.c: 1425: {
  3319  0050A8                     _SetLoMod:
  3320  000000                     
  3321                           ;main.c: 1426: M._MODULUJ=0;
  3322  0050A8  0100               	movlb	(_M+17) shr (0+8)
  3323  0050AA  9B7B               	bcf	(_M+17)& (0+255),5,b
  3324                           ;main.c: 1427: WritePWM(0);
  3325  0050AC  0E00               	movlw	0
  3326  0050AE  EFD4  F054         	goto	_WritePWM
  3327                           ;main.c: 1428: }
  3328  0050B2                     __end_of_SetLoMod:
  3329                           ;main.c: 1432: void DecRozruch(void)
  3330                           ;main.c: 1433: {
  3331  0050B2                     _DecRozruch:
  3332  000000                     
  3333                           ;main.c: 1434: switch(DtKNF.tpkt)
  3334  0050B2  D116               	goto	l308
  3335  0050B4                     l310:
  3336                           ;main.c: 1437: case 2:
  3337  0050B4  0100               	movlb	(_M+16) shr (0+8)
  3338  0050B6  A57A               	btfss	(_M+16)& (0+255),2,b
  3339  0050B8  B083               	btfsc	3971,0,c	;volatile
  3340  0050BA  0012               	return	
  3341                           ;main.c: 1440: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M.
      +                          _RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._
      +                          RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
  3342  0050BC  A37A               	btfss	(_M+16)& (0+255),1,b
  3343  0050BE  BB7A               	btfsc	(_M+16)& (0+255),5,b
  3344  0050C0  0012               	return	
  3345  0050C2  0100               	movlb	(_M+17) shr (0+8)
  3346  0050C4  B17B               	btfsc	(_M+17)& (0+255),0,b
  3347  0050C6  0012               	return	
  3348  0050C8  0100               	movlb	(_M+16) shr (0+8)
  3349  0050CA  BF7A               	btfsc	(_M+16)& (0+255),7,b
  3350  0050CC  0012               	return	
  3351  0050CE  0100               	movlb	(_M+26) shr (0+8)
  3352  0050D0  A784               	btfss	(_M+26)& (0+255),3,b
  3353  0050D2  B184               	btfsc	(_M+26)& (0+255),0,b
  3354  0050D4  0012               	return	
  3355  0050D6  B384               	btfsc	(_M+26)& (0+255),1,b
  3356  0050D8  0012               	return	
  3357                           ;main.c: 1441: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&
      +                          &!M._RUSZ_NCISN)
  3358  0050DA  0100               	movlb	(_M+17) shr (0+8)
  3359  0050DC  A57B               	btfss	(_M+17)& (0+255),2,b
  3360  0050DE  BB84               	btfsc	(_M+26)& (0+255),5,b
  3361  0050E0  0012               	return	
  3362  0050E2  0100               	movlb	(_M+26) shr (0+8)
  3363  0050E4  BD84               	btfsc	(_M+26)& (0+255),6,b
  3364  0050E6  0012               	return	
  3365                           ;main.c: 1442: {
  3366  0050E8  0100               	movlb	(_M+2) shr (0+8)
  3367  0050EA  516C               	movf	(_M+2)& (0+255),w,b
  3368  0050EC  116D               	iorwf	(_M+3)& (0+255),w,b
  3369  0050EE  E001               	bz	l314
  3370  0050F0  D014               	goto	L33
  3371                           ;main.c: 1444: {
  3372                           ;main.c: 1446: {
  3373                           ;main.c: 1448: M.BL15=0;
  3374                           ;main.c: 1449: SetRozruch();
  3375                           ;main.c: 1450: }
  3376  0050F2                     l314:
  3377                           ;main.c: 1452: else
  3378  0050F2  0100               	movlb	_M shr (0+8)
  3379  0050F4  516A               	movf	_M& (0+255),w,b
  3380  0050F6  116B               	iorwf	(_M+1)& (0+255),w,b
  3381  0050F8  E004               	bz	l317
  3382                           ;main.c: 1454: {
  3383  0050FA  0101               	movlb	_DtCO shr (0+8)
  3384  0050FC  B320               	btfsc	_DtCO& (0+255),1,b
  3385  0050FE  D8FF               	call	_SetRozruch	;wreg free
  3386                           ;main.c: 1456: }
  3387  005100  0012               	return	
  3388  005102                     l317:
  3389                           ;main.c: 1457: else
  3390  005102  0100               	movlb	(_M+4) shr (0+8)
  3391  005104  516E               	movf	(_M+4)& (0+255),w,b
  3392  005106  116F               	iorwf	(_M+5)& (0+255),w,b
  3393  005108  E004               	bz	l320
  3394                           ;main.c: 1459: {
  3395  00510A  0101               	movlb	_DtCO shr (0+8)
  3396  00510C  B720               	btfsc	_DtCO& (0+255),3,b
  3397  00510E  D8F7               	call	_SetRozruch	;wreg free
  3398                           ;main.c: 1461: }
  3399  005110  0012               	return	
  3400  005112                     l320:
  3401                           ;main.c: 1462: else
  3402  005112  0100               	movlb	(_M+8) shr (0+8)
  3403  005114  5172               	movf	(_M+8)& (0+255),w,b
  3404  005116  1173               	iorwf	(_M+9)& (0+255),w,b
  3405  005118  E007               	bz	l323
  3406  00511A                     L33:
  3407                           ;main.c: 1464: {
  3408  00511A  0101               	movlb	_DtCW shr (0+8)
  3409  00511C  A311               	btfss	_DtCW& (0+255),1,b
  3410  00511E  0012               	return	
  3411                           ;main.c: 1466: {
  3412  005120  0100               	movlb	(_M+17) shr (0+8)
  3413  005122  897B               	bsf	(_M+17)& (0+255),4,b
  3414                           ;main.c: 1468: M.BL15=0;
  3415  005124  6B91               	clrf	(_M+39)& (0+255),b
  3416                           ;main.c: 1469: SetRozruch();
  3417  005126  D0EB               	goto	_SetRozruch	;wreg free
  3418                           ;main.c: 1470: }
  3419  005128                     l323:
  3420                           ;main.c: 1472: else
  3421  005128  0100               	movlb	(_M+10) shr (0+8)
  3422  00512A  5174               	movf	(_M+10)& (0+255),w,b
  3423  00512C  1175               	iorwf	(_M+11)& (0+255),w,b
  3424  00512E  E009               	bz	l326
  3425  005130  0101               	movlb	_DtCO shr (0+8)
  3426  005132  A320               	btfss	_DtCO& (0+255),1,b
  3427  005134  D006               	goto	l326
  3428  005136  0100               	movlb	(_M+17) shr (0+8)
  3429  005138  B77B               	btfsc	(_M+17)& (0+255),3,b
  3430  00513A  D003               	goto	l326
  3431  00513C  0100               	movlb	(_M+17) shr (0+8)
  3432  00513E  A97B               	btfss	(_M+17)& (0+255),4,b
  3433                           ;main.c: 1474: {
  3434  005140  D0DE               	goto	_SetRozruch	;wreg free
  3435                           ;main.c: 1476: }
  3436  005142                     l326:
  3437                           ;main.c: 1477: else
  3438  005142  0100               	movlb	(_M+12) shr (0+8)
  3439  005144  5176               	movf	(_M+12)& (0+255),w,b
  3440  005146  1177               	iorwf	(_M+13)& (0+255),w,b
  3441  005148  E009               	bz	l328
  3442  00514A  0101               	movlb	_DtCO shr (0+8)
  3443  00514C  AD20               	btfss	_DtCO& (0+255),6,b
  3444  00514E  D006               	goto	l328
  3445  005150  0100               	movlb	(_M+17) shr (0+8)
  3446  005152  B77B               	btfsc	(_M+17)& (0+255),3,b
  3447  005154  D003               	goto	l328
  3448  005156  0100               	movlb	(_M+17) shr (0+8)
  3449  005158  A97B               	btfss	(_M+17)& (0+255),4,b
  3450                           ;main.c: 1479: {
  3451  00515A  D0D1               	goto	_SetRozruch	;wreg free
  3452                           ;main.c: 1481: }
  3453  00515C                     l328:
  3454                           ;main.c: 1482: else
  3455  00515C  0100               	movlb	(_M+14) shr (0+8)
  3456  00515E  5178               	movf	(_M+14)& (0+255),w,b
  3457  005160  1179               	iorwf	(_M+15)& (0+255),w,b
  3458  005162  B4D8               	btfsc	status,2,c
  3459  005164  0012               	return	
  3460  005166  0101               	movlb	_DtCW shr (0+8)
  3461  005168  AB11               	btfss	_DtCW& (0+255),5,b
  3462  00516A  0012               	return	
  3463                           ;main.c: 1484: {
  3464  00516C  0100               	movlb	(_M+17) shr (0+8)
  3465  00516E  897B               	bsf	(_M+17)& (0+255),4,b
  3466                           ;main.c: 1486: M.BL15=0;
  3467  005170  6B91               	clrf	(_M+39)& (0+255),b
  3468                           ;main.c: 1487: SetRozruch();
  3469  005172  D0C5               	goto	_SetRozruch	;wreg free
  3470                           ;main.c: 1488: }
  3471  005174                     l332:
  3472                           ;main.c: 1493: case 3:
  3473  005174  0100               	movlb	(_M+16) shr (0+8)
  3474  005176  A57A               	btfss	(_M+16)& (0+255),2,b
  3475  005178  B083               	btfsc	3971,0,c	;volatile
  3476  00517A  0012               	return	
  3477                           ;main.c: 1496: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M.
      +                          _RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._
      +                          RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
  3478  00517C  A37A               	btfss	(_M+16)& (0+255),1,b
  3479  00517E  BB7A               	btfsc	(_M+16)& (0+255),5,b
  3480  005180  0012               	return	
  3481  005182  0100               	movlb	(_M+17) shr (0+8)
  3482  005184  B17B               	btfsc	(_M+17)& (0+255),0,b
  3483  005186  0012               	return	
  3484  005188  0100               	movlb	(_M+16) shr (0+8)
  3485  00518A  BF7A               	btfsc	(_M+16)& (0+255),7,b
  3486  00518C  0012               	return	
  3487  00518E  0100               	movlb	(_M+26) shr (0+8)
  3488  005190  A784               	btfss	(_M+26)& (0+255),3,b
  3489  005192  B184               	btfsc	(_M+26)& (0+255),0,b
  3490  005194  0012               	return	
  3491  005196  B384               	btfsc	(_M+26)& (0+255),1,b
  3492  005198  0012               	return	
  3493                           ;main.c: 1497: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&
      +                          &!M._RUSZ_NCISN)
  3494  00519A  0100               	movlb	(_M+17) shr (0+8)
  3495  00519C  A57B               	btfss	(_M+17)& (0+255),2,b
  3496  00519E  BB84               	btfsc	(_M+26)& (0+255),5,b
  3497  0051A0  0012               	return	
  3498  0051A2  0100               	movlb	(_M+26) shr (0+8)
  3499  0051A4  BD84               	btfsc	(_M+26)& (0+255),6,b
  3500  0051A6  0012               	return	
  3501                           ;main.c: 1498: {
  3502  0051A8  0100               	movlb	(_M+2) shr (0+8)
  3503  0051AA  516C               	movf	(_M+2)& (0+255),w,b
  3504  0051AC  116D               	iorwf	(_M+3)& (0+255),w,b
  3505  0051AE  E001               	bz	l336
  3506  0051B0  D019               	goto	L36
  3507                           ;main.c: 1500: {
  3508                           ;main.c: 1502: {
  3509                           ;main.c: 1504: M.BL15=0;
  3510                           ;main.c: 1505: SetRozruch();
  3511                           ;main.c: 1506: }
  3512  0051B2                     l336:
  3513                           ;main.c: 1508: else
  3514  0051B2  0100               	movlb	_M shr (0+8)
  3515  0051B4  516A               	movf	_M& (0+255),w,b
  3516  0051B6  116B               	iorwf	(_M+1)& (0+255),w,b
  3517  0051B8  E004               	bz	l339
  3518                           ;main.c: 1510: {
  3519  0051BA  0101               	movlb	_DtCO shr (0+8)
  3520  0051BC  B320               	btfsc	_DtCO& (0+255),1,b
  3521  0051BE  D89F               	call	_SetRozruch	;wreg free
  3522                           ;main.c: 1512: }
  3523  0051C0  0012               	return	
  3524  0051C2                     l339:
  3525                           ;main.c: 1513: else
  3526  0051C2  0100               	movlb	(_M+4) shr (0+8)
  3527  0051C4  516E               	movf	(_M+4)& (0+255),w,b
  3528  0051C6  116F               	iorwf	(_M+5)& (0+255),w,b
  3529  0051C8  E004               	bz	l342
  3530                           ;main.c: 1515: {
  3531  0051CA  0101               	movlb	_DtCO shr (0+8)
  3532  0051CC  B720               	btfsc	_DtCO& (0+255),3,b
  3533  0051CE  D897               	call	_SetRozruch	;wreg free
  3534                           ;main.c: 1517: }
  3535  0051D0  0012               	return	
  3536  0051D2                     l342:
  3537                           ;main.c: 1518: else
  3538  0051D2  0100               	movlb	(_M+6) shr (0+8)
  3539  0051D4  5170               	movf	(_M+6)& (0+255),w,b
  3540  0051D6  1171               	iorwf	(_M+7)& (0+255),w,b
  3541  0051D8  E001               	bz	l345
  3542  0051DA  D007               	goto	L35
  3543                           ;main.c: 1520: {
  3544                           ;main.c: 1522: {
  3545                           ;main.c: 1524: M.BL15=0;
  3546                           ;main.c: 1525: SetRozruch();
  3547                           ;main.c: 1526: }
  3548  0051DC                     l345:
  3549                           ;main.c: 1528: else
  3550  0051DC  0100               	movlb	(_M+8) shr (0+8)
  3551  0051DE  5172               	movf	(_M+8)& (0+255),w,b
  3552  0051E0  1173               	iorwf	(_M+9)& (0+255),w,b
  3553  0051E2  E00A               	bz	l348
  3554  0051E4                     L36:
  3555                           ;main.c: 1565: {
  3556  0051E4  0101               	movlb	_DtCW shr (0+8)
  3557  0051E6  A311               	btfss	_DtCW& (0+255),1,b
  3558  0051E8  0012               	return	
  3559                           ;main.c: 1530: {
  3560  0051EA                     L35:
  3561  0051EA  0101               	movlb	(_DtCO+1) shr (0+8)
  3562  0051EC  A321               	btfss	(_DtCO+1)& (0+255),1,b
  3563  0051EE  0012               	return	
  3564                           ;main.c: 1532: {
  3565  0051F0  0100               	movlb	(_M+17) shr (0+8)
  3566  0051F2  897B               	bsf	(_M+17)& (0+255),4,b
  3567                           ;main.c: 1534: M.BL15=0;
  3568  0051F4  6B91               	clrf	(_M+39)& (0+255),b
  3569                           ;main.c: 1535: SetRozruch();
  3570  0051F6  D083               	goto	_SetRozruch	;wreg free
  3571                           ;main.c: 1536: }
  3572  0051F8                     l348:
  3573                           ;main.c: 1538: else
  3574  0051F8  0100               	movlb	(_M+10) shr (0+8)
  3575  0051FA  5174               	movf	(_M+10)& (0+255),w,b
  3576  0051FC  1175               	iorwf	(_M+11)& (0+255),w,b
  3577  0051FE  E009               	bz	l351
  3578  005200  0101               	movlb	_DtCO shr (0+8)
  3579  005202  A320               	btfss	_DtCO& (0+255),1,b
  3580  005204  D006               	goto	l351
  3581  005206  0100               	movlb	(_M+17) shr (0+8)
  3582  005208  B77B               	btfsc	(_M+17)& (0+255),3,b
  3583  00520A  D003               	goto	l351
  3584  00520C  0100               	movlb	(_M+17) shr (0+8)
  3585  00520E  A97B               	btfss	(_M+17)& (0+255),4,b
  3586                           ;main.c: 1540: {
  3587  005210  D076               	goto	_SetRozruch	;wreg free
  3588                           ;main.c: 1542: }
  3589  005212                     l351:
  3590                           ;main.c: 1543: else
  3591  005212  0100               	movlb	(_M+12) shr (0+8)
  3592  005214  5176               	movf	(_M+12)& (0+255),w,b
  3593  005216  1177               	iorwf	(_M+13)& (0+255),w,b
  3594  005218  E006               	bz	l353
  3595  00521A  0101               	movlb	_DtCO shr (0+8)
  3596  00521C  AD20               	btfss	_DtCO& (0+255),6,b
  3597  00521E  D003               	goto	l353
  3598  005220  0100               	movlb	(_M+17) shr (0+8)
  3599  005222  A77B               	btfss	(_M+17)& (0+255),3,b
  3600  005224  D059               	goto	L45
  3601                           ;main.c: 1545: {
  3602                           ;main.c: 1547: }
  3603  005226                     l353:
  3604                           ;main.c: 1548: else
  3605  005226  0100               	movlb	(_M+14) shr (0+8)
  3606  005228  5178               	movf	(_M+14)& (0+255),w,b
  3607  00522A  1179               	iorwf	(_M+15)& (0+255),w,b
  3608  00522C  B4D8               	btfsc	status,2,c
  3609  00522E  0012               	return	
  3610  005230  0101               	movlb	_DtCW shr (0+8)
  3611  005232  AB11               	btfss	_DtCW& (0+255),5,b
  3612  005234  0012               	return	
  3613  005236  D7D9               	goto	L35
  3614                           ;main.c: 1550: {
  3615                           ;main.c: 1552: M.BL15=0;
  3616                           ;main.c: 1553: SetRozruch();
  3617                           ;main.c: 1554: }
  3618  005238                     l356:
  3619                           ;main.c: 1557: }
  3620                           ;main.c: 1559: {
  3621  005238  0100               	movlb	(_M+16) shr (0+8)
  3622  00523A  A57A               	btfss	(_M+16)& (0+255),2,b
  3623  00523C  B083               	btfsc	3971,0,c	;volatile
  3624  00523E  0012               	return	
  3625                           ;main.c: 1561: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M.
      +                          _RUSZ_PLOMIEN&&!M._RUSZ_CIAG&&!M._RUSZ_STB&&!M._
      +                          RUSZ_NTC_CO&&!M._RUSZ_NTC_CW)
  3626  005240  A37A               	btfss	(_M+16)& (0+255),1,b
  3627  005242  BB7A               	btfsc	(_M+16)& (0+255),5,b
  3628  005244  0012               	return	
  3629  005246  0100               	movlb	(_M+17) shr (0+8)
  3630  005248  B17B               	btfsc	(_M+17)& (0+255),0,b
  3631  00524A  0012               	return	
  3632  00524C  0100               	movlb	(_M+16) shr (0+8)
  3633  00524E  BF7A               	btfsc	(_M+16)& (0+255),7,b
  3634  005250  0012               	return	
  3635  005252  0100               	movlb	(_M+26) shr (0+8)
  3636  005254  A784               	btfss	(_M+26)& (0+255),3,b
  3637  005256  B184               	btfsc	(_M+26)& (0+255),0,b
  3638  005258  0012               	return	
  3639  00525A  B384               	btfsc	(_M+26)& (0+255),1,b
  3640  00525C  0012               	return	
  3641                           ;main.c: 1562: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&
      +                          &!M._RUSZ_NCISN)
  3642  00525E  0100               	movlb	(_M+17) shr (0+8)
  3643  005260  A57B               	btfss	(_M+17)& (0+255),2,b
  3644  005262  BB84               	btfsc	(_M+26)& (0+255),5,b
  3645  005264  0012               	return	
  3646  005266  0100               	movlb	(_M+26) shr (0+8)
  3647  005268  BD84               	btfsc	(_M+26)& (0+255),6,b
  3648  00526A  0012               	return	
  3649                           ;main.c: 1563: {
  3650  00526C  0100               	movlb	(_M+2) shr (0+8)
  3651  00526E  516C               	movf	(_M+2)& (0+255),w,b
  3652  005270  116D               	iorwf	(_M+3)& (0+255),w,b
  3653  005272  E001               	bz	l360
  3654  005274  D7B7               	goto	L36
  3655                           ;main.c: 1567: {
  3656                           ;main.c: 1569: M.BL15=0;
  3657                           ;main.c: 1570: SetRozruch();
  3658                           ;main.c: 1571: }
  3659  005276                     l360:
  3660                           ;main.c: 1573: else
  3661  005276  0100               	movlb	_M shr (0+8)
  3662  005278  516A               	movf	_M& (0+255),w,b
  3663  00527A  116B               	iorwf	(_M+1)& (0+255),w,b
  3664  00527C  E004               	bz	l363
  3665                           ;main.c: 1575: {
  3666  00527E  0101               	movlb	_DtCO shr (0+8)
  3667  005280  B320               	btfsc	_DtCO& (0+255),1,b
  3668  005282  D83D               	call	_SetRozruch	;wreg free
  3669                           ;main.c: 1577: }
  3670  005284  0012               	return	
  3671  005286                     l363:
  3672                           ;main.c: 1578: else
  3673  005286  0100               	movlb	(_M+4) shr (0+8)
  3674  005288  516E               	movf	(_M+4)& (0+255),w,b
  3675  00528A  116F               	iorwf	(_M+5)& (0+255),w,b
  3676  00528C  E004               	bz	l366
  3677                           ;main.c: 1580: {
  3678  00528E  0101               	movlb	_DtCO shr (0+8)
  3679  005290  B720               	btfsc	_DtCO& (0+255),3,b
  3680  005292  D835               	call	_SetRozruch	;wreg free
  3681                           ;main.c: 1582: }
  3682  005294  0012               	return	
  3683  005296                     l366:
  3684                           ;main.c: 1583: else
  3685  005296  0100               	movlb	(_M+6) shr (0+8)
  3686  005298  5170               	movf	(_M+6)& (0+255),w,b
  3687  00529A  1171               	iorwf	(_M+7)& (0+255),w,b
  3688  00529C  E001               	bz	l369
  3689  00529E  D7A5               	goto	L35
  3690                           ;main.c: 1585: {
  3691                           ;main.c: 1587: {
  3692                           ;main.c: 1589: M.BL15=0;
  3693                           ;main.c: 1590: SetRozruch();
  3694                           ;main.c: 1591: }
  3695  0052A0                     l369:
  3696                           ;main.c: 1593: else
  3697  0052A0  0100               	movlb	(_M+8) shr (0+8)
  3698  0052A2  5172               	movf	(_M+8)& (0+255),w,b
  3699  0052A4  1173               	iorwf	(_M+9)& (0+255),w,b
  3700  0052A6  E001               	bz	l372
  3701  0052A8  D79D               	goto	L36
  3702                           ;main.c: 1595: {
  3703                           ;main.c: 1597: {
  3704                           ;main.c: 1599: M.BL15=0;
  3705                           ;main.c: 1600: SetRozruch();
  3706                           ;main.c: 1601: }
  3707  0052AA                     l372:
  3708                           ;main.c: 1603: else
  3709  0052AA  0100               	movlb	(_M+10) shr (0+8)
  3710  0052AC  5174               	movf	(_M+10)& (0+255),w,b
  3711  0052AE  1175               	iorwf	(_M+11)& (0+255),w,b
  3712  0052B0  E009               	bz	l375
  3713  0052B2  0101               	movlb	_DtCO shr (0+8)
  3714  0052B4  A320               	btfss	_DtCO& (0+255),1,b
  3715  0052B6  D006               	goto	l375
  3716  0052B8  0100               	movlb	(_M+17) shr (0+8)
  3717  0052BA  B77B               	btfsc	(_M+17)& (0+255),3,b
  3718  0052BC  D003               	goto	l375
  3719  0052BE  0100               	movlb	(_M+17) shr (0+8)
  3720  0052C0  A97B               	btfss	(_M+17)& (0+255),4,b
  3721                           ;main.c: 1605: {
  3722  0052C2  D01D               	goto	_SetRozruch	;wreg free
  3723                           ;main.c: 1607: }
  3724  0052C4                     l375:
  3725                           ;main.c: 1608: else
  3726  0052C4  0100               	movlb	(_M+12) shr (0+8)
  3727  0052C6  5176               	movf	(_M+12)& (0+255),w,b
  3728  0052C8  1177               	iorwf	(_M+13)& (0+255),w,b
  3729  0052CA  E009               	bz	l377
  3730  0052CC  0101               	movlb	_DtCO shr (0+8)
  3731  0052CE  AD20               	btfss	_DtCO& (0+255),6,b
  3732  0052D0  D7AA               	goto	l353
  3733  0052D2  0100               	movlb	(_M+17) shr (0+8)
  3734  0052D4  B77B               	btfsc	(_M+17)& (0+255),3,b
  3735  0052D6  D7A7               	goto	l353
  3736  0052D8                     L45:
  3737  0052D8  0100               	movlb	(_M+17) shr (0+8)
  3738  0052DA  A97B               	btfss	(_M+17)& (0+255),4,b
  3739                           ;main.c: 1610: {
  3740  0052DC  D010               	goto	_SetRozruch	;wreg free
  3741                           ;main.c: 1612: }
  3742  0052DE                     l377:
  3743  0052DE  D7A3               	goto	l353
  3744                           ;main.c: 1613: else
  3745                           ;main.c: 1615: {
  3746                           ;main.c: 1617: M.BL15=0;
  3747                           ;main.c: 1618: SetRozruch();
  3748                           ;main.c: 1619: }
  3749  0052E0                     l308:
  3750  0052E0  C1B9  FFE8         	movff	_DtKNF+7,wreg
  3751  0052E4  0A00               	xorlw	0
  3752  0052E6  E101 D745          	bz	l332
  3753  0052EA  0A01               	xorlw	1
  3754  0052EC  E101 D6E2          	bz	l310
  3755  0052F0  0A03               	xorlw	3
  3756  0052F2  E101 D6DF          	bz	l310
  3757  0052F6  0A01               	xorlw	1
  3758  0052F8  E101 D73C          	bz	l332
  3759  0052FC  D79D               	goto	l356
  3760                           ;main.c: 1624: }
  3761  0052FE                     __end_of_DecRozruch:
  3762                           ;main.c: 1626: void SetRozruch(void)
  3763                           ;main.c: 1627: {
  3764  0052FE                     _SetRozruch:
  3765  000000                     
  3766                           ;main.c: 1628: M._BLOKUJ_3M=0;
  3767  0052FE  0100               	movlb	(_M+17) shr (0+8)
  3768  005300  977B               	bcf	(_M+17)& (0+255),3,b
  3769                           ;main.c: 1629: M.BL3=0;
  3770  005302  6B90               	clrf	(_M+38)& (0+255),b
  3771                           ;main.c: 1630: EndL3();
  3772  005304  ECE8  F060         	call	_EndL3	;wreg free
  3773                           ;main.c: 1631: M._RUSZ_48=0;
  3774  005308  0100               	movlb	(_M+16) shr (0+8)
  3775  00530A  977A               	bcf	(_M+16)& (0+255),3,b
  3776                           ;main.c: 1632: M.R48=0;
  3777  00530C  6B8E               	clrf	(_M+36)& (0+255),b
  3778                           ;main.c: 1633: M._RUSZ_48Z3=0;
  3779  00530E  997A               	bcf	(_M+16)& (0+255),4,b
  3780                           ;main.c: 1634: M.R48Z3=0;
  3781  005310  6B8F               	clrf	(_M+37)& (0+255),b
  3782                           ;main.c: 1635: M._VWYBIEG=0;
  3783  005312  9D7A               	bcf	(_M+16)& (0+255),6,b
  3784                           ;main.c: 1636: M._DE_VNT=0;
  3785  005314  9D85               	bcf	(_M+27)& (0+255),6,b
  3786                           ;main.c: 1637: M.VWB=0;
  3787  005316  6B98               	clrf	(_M+46)& (0+255),b
  3788                           ;main.c: 1639: M._KCW_PMP=0;
  3789  005318  9B85               	bcf	(_M+27)& (0+255),5,b
  3790                           ;main.c: 1640: M.WYL=0;
  3791  00531A  6B92               	clrf	(_M+40)& (0+255),b
  3792                           ;main.c: 1641: M.RPR=0;
  3793  00531C  6B93               	clrf	(_M+41)& (0+255),b
  3794                           ;main.c: 1642: M._WYLACZ=0;
  3795  00531E  917A               	bcf	(_M+16)& (0+255),0,b
  3796                           ;main.c: 1643: M._RUSZ_POMPE=0;
  3797  005320  957B               	bcf	(_M+17)& (0+255),2,b
  3798                           ;main.c: 1644: M._ROZRUCH=1;
  3799  005322  857A               	bsf	(_M+16)& (0+255),2,b
  3800                           ;main.c: 1645: M.ROZ=0;
  3801  005324  6B8D               	clrf	(_M+35)& (0+255),b
  3802                           ;main.c: 1646: x=0;
  3803  005326  010E               	movlb	_x shr (0+8)
  3804  005328  6BAA               	clrf	_x& (0+255),b
  3805                           ;main.c: 1647: }
  3806  00532A  0012               	return	
  3807  00532C                     __end_of_SetRozruch:
  3808                           ;main.c: 1651: void DecWylacz(void)
  3809                           ;main.c: 1652: {
  3810  00532C                     _DecWylacz:
  3811  000000                     
  3812                           ;main.c: 1653: switch(DtKNF.tpkt)
  3813  00532C  D196               	goto	l383
  3814  00532E                     l385:
  3815                           ;main.c: 1656: case 2:
  3816  00532E  0100               	movlb	(_M+16) shr (0+8)
  3817  005330  B17A               	btfsc	(_M+16)& (0+255),0,b
  3818  005332  0012               	return	
  3819                           ;main.c: 1659: if(M._ROZRUCH||RD0)
  3820  005334  B57A               	btfsc	(_M+16)& (0+255),2,b
  3821  005336  D002               	goto	u6980
  3822  005338  A083               	btfss	3971,0,c	;volatile
  3823  00533A  0012               	return	
  3824  00533C                     u6980:
  3825                           ;main.c: 1660: {
  3826  00533C  0100               	movlb	(_M+2) shr (0+8)
  3827  00533E  516C               	movf	(_M+2)& (0+255),w,b
  3828  005340  116D               	iorwf	(_M+3)& (0+255),w,b
  3829  005342  E118               	bnz	l388
  3830  005344  516A               	movf	_M& (0+255),w,b
  3831  005346  116B               	iorwf	(_M+1)& (0+255),w,b
  3832  005348  E115               	bnz	l388
  3833  00534A  0100               	movlb	(_M+4) shr (0+8)
  3834  00534C  516E               	movf	(_M+4)& (0+255),w,b
  3835  00534E  116F               	iorwf	(_M+5)& (0+255),w,b
  3836  005350  E111               	bnz	l388
  3837  005352  0100               	movlb	(_M+8) shr (0+8)
  3838  005354  5172               	movf	(_M+8)& (0+255),w,b
  3839  005356  1173               	iorwf	(_M+9)& (0+255),w,b
  3840  005358  E10D               	bnz	l388
  3841  00535A  0100               	movlb	(_M+10) shr (0+8)
  3842  00535C  5174               	movf	(_M+10)& (0+255),w,b
  3843  00535E  1175               	iorwf	(_M+11)& (0+255),w,b
  3844  005360  E109               	bnz	l388
  3845  005362  0100               	movlb	(_M+12) shr (0+8)
  3846  005364  5176               	movf	(_M+12)& (0+255),w,b
  3847  005366  1177               	iorwf	(_M+13)& (0+255),w,b
  3848  005368  E105               	bnz	l388
  3849  00536A  0100               	movlb	(_M+14) shr (0+8)
  3850  00536C  5178               	movf	(_M+14)& (0+255),w,b
  3851  00536E  1179               	iorwf	(_M+15)& (0+255),w,b
  3852  005370  E101               	bnz	l388
  3853                           ;main.c: 1662: {
  3854  005372  D1AF               	goto	_SetWylacz	;wreg free
  3855                           ;main.c: 1664: return;
  3856  005374                     l388:
  3857                           ;main.c: 1665: }
  3858  005374  0100               	movlb	(_M+16) shr (0+8)
  3859  005376  AB7A               	btfss	(_M+16)& (0+255),5,b
  3860  005378  B17B               	btfsc	(_M+17)& (0+255),0,b
  3861  00537A  D1AB               	goto	_SetWylacz
  3862  00537C  BF7A               	btfsc	(_M+16)& (0+255),7,b
  3863  00537E  D1A9               	goto	_SetWylacz
  3864  005380  0100               	movlb	(_M+26) shr (0+8)
  3865  005382  B784               	btfsc	(_M+26)& (0+255),3,b
  3866  005384  D1A6               	goto	_SetWylacz
  3867  005386  0100               	movlb	(_M+26) shr (0+8)
  3868  005388  B184               	btfsc	(_M+26)& (0+255),0,b
  3869  00538A  D1A3               	goto	_SetWylacz
  3870  00538C  0100               	movlb	(_M+26) shr (0+8)
  3871  00538E  B384               	btfsc	(_M+26)& (0+255),1,b
  3872  005390  D1A0               	goto	_SetWylacz
  3873  005392  0100               	movlb	(_M+17) shr (0+8)
  3874  005394  B57B               	btfsc	(_M+17)& (0+255),2,b
  3875  005396  D19D               	goto	_SetWylacz
  3876  005398  0100               	movlb	(_M+26) shr (0+8)
  3877  00539A  BB84               	btfsc	(_M+26)& (0+255),5,b
  3878  00539C  D19A               	goto	_SetWylacz
  3879  00539E  0100               	movlb	(_M+26) shr (0+8)
  3880  0053A0  BD84               	btfsc	(_M+26)& (0+255),6,b
  3881                           ;main.c: 1667: {
  3882  0053A2  D197               	goto	_SetWylacz	;wreg free
  3883                           ;main.c: 1669: }
  3884                           ;main.c: 1670: else
  3885  0053A4  0100               	movlb	(_M+2) shr (0+8)
  3886  0053A6  516C               	movf	(_M+2)& (0+255),w,b
  3887  0053A8  116D               	iorwf	(_M+3)& (0+255),w,b
  3888  0053AA  E004               	bz	l391
  3889                           ;main.c: 1672: {
  3890  0053AC  0101               	movlb	_DtCW shr (0+8)
  3891  0053AE  B511               	btfsc	_DtCW& (0+255),2,b
  3892  0053B0  D990               	call	_SetWylacz	;wreg free
  3893                           ;main.c: 1674: }
  3894  0053B2  0012               	return	
  3895  0053B4                     l391:
  3896                           ;main.c: 1675: else
  3897  0053B4  0100               	movlb	_M shr (0+8)
  3898  0053B6  516A               	movf	_M& (0+255),w,b
  3899  0053B8  116B               	iorwf	(_M+1)& (0+255),w,b
  3900  0053BA  E006               	bz	l394
  3901                           ;main.c: 1677: {
  3902  0053BC  0E13               	movlw	19
  3903  0053BE  ECC4  F05B         	call	_RdPrt
  3904  0053C2  B0D8               	btfsc	status,0,c
  3905  0053C4  D986               	call	_SetWylacz	;wreg free
  3906                           ;main.c: 1679: }
  3907  0053C6  0012               	return	
  3908  0053C8                     l394:
  3909                           ;main.c: 1680: else
  3910  0053C8  0100               	movlb	(_M+4) shr (0+8)
  3911  0053CA  516E               	movf	(_M+4)& (0+255),w,b
  3912  0053CC  116F               	iorwf	(_M+5)& (0+255),w,b
  3913  0053CE  E004               	bz	l397
  3914                           ;main.c: 1682: {
  3915  0053D0  0101               	movlb	_DtCO shr (0+8)
  3916  0053D2  B920               	btfsc	_DtCO& (0+255),4,b
  3917  0053D4  D97E               	call	_SetWylacz	;wreg free
  3918                           ;main.c: 1684: }
  3919  0053D6  0012               	return	
  3920  0053D8                     l397:
  3921                           ;main.c: 1685: else
  3922  0053D8  0100               	movlb	(_M+8) shr (0+8)
  3923  0053DA  5172               	movf	(_M+8)& (0+255),w,b
  3924  0053DC  1173               	iorwf	(_M+9)& (0+255),w,b
  3925  0053DE  E004               	bz	l400
  3926                           ;main.c: 1687: {
  3927  0053E0  0101               	movlb	_DtCW shr (0+8)
  3928  0053E2  B511               	btfsc	_DtCW& (0+255),2,b
  3929  0053E4  D976               	call	_SetWylacz	;wreg free
  3930                           ;main.c: 1689: }
  3931  0053E6  0012               	return	
  3932  0053E8                     l400:
  3933                           ;main.c: 1690: else
  3934  0053E8  0100               	movlb	(_M+10) shr (0+8)
  3935  0053EA  5174               	movf	(_M+10)& (0+255),w,b
  3936  0053EC  1175               	iorwf	(_M+11)& (0+255),w,b
  3937  0053EE  E01A               	bz	l403
  3938  0053F0  0E13               	movlw	19
  3939  0053F2  ECC4  F05B         	call	_RdPrt
  3940  0053F6  E206               	bc	u7430
  3941  0053F8  0100               	movlb	(_M+17) shr (0+8)
  3942  0053FA  B77B               	btfsc	(_M+17)& (0+255),3,b
  3943  0053FC  D003               	goto	u7430
  3944  0053FE  0100               	movlb	(_M+17) shr (0+8)
  3945  005400  A97B               	btfss	(_M+17)& (0+255),4,b
  3946  005402  D010               	goto	l403
  3947  005404                     u7430:
  3948                           ;main.c: 1692: {
  3949  005404  0E13               	movlw	19
  3950  005406  ECC4  F05B         	call	_RdPrt
  3951  00540A  E30B               	bnc	l404
  3952  00540C  0100               	movlb	(_M+17) shr (0+8)
  3953  00540E  B77B               	btfsc	(_M+17)& (0+255),3,b
  3954  005410  D160               	goto	_SetWylacz
  3955  005412  0100               	movlb	(_M+17) shr (0+8)
  3956  005414  B97B               	btfsc	(_M+17)& (0+255),4,b
  3957  005416  D15D               	goto	_SetWylacz
  3958                           ;main.c: 1694: {
  3959  005418  0100               	movlb	(_M+17) shr (0+8)
  3960  00541A  877B               	bsf	(_M+17)& (0+255),3,b
  3961                           ;main.c: 1696: M.BL3=0;
  3962  00541C  6B90               	clrf	(_M+38)& (0+255),b
  3963                           ;main.c: 1697: PrintL3();
  3964  00541E  ECE0  F060         	call	_PrintL3	;wreg free
  3965  005422                     l404:
  3966                           ;main.c: 1698: }
  3967  005422  D157               	goto	_SetWylacz	;wreg free
  3968                           ;main.c: 1700: }
  3969  005424                     l403:
  3970                           ;main.c: 1701: else
  3971  005424  0100               	movlb	(_M+12) shr (0+8)
  3972  005426  5176               	movf	(_M+12)& (0+255),w,b
  3973  005428  1177               	iorwf	(_M+13)& (0+255),w,b
  3974  00542A  E009               	bz	l406
  3975  00542C  0101               	movlb	_DtCO shr (0+8)
  3976  00542E  BF20               	btfsc	_DtCO& (0+255),7,b
  3977  005430  D150               	goto	_SetWylacz
  3978  005432  0100               	movlb	(_M+17) shr (0+8)
  3979  005434  B77B               	btfsc	(_M+17)& (0+255),3,b
  3980  005436  D14D               	goto	_SetWylacz
  3981  005438  0100               	movlb	(_M+17) shr (0+8)
  3982  00543A  B97B               	btfsc	(_M+17)& (0+255),4,b
  3983                           ;main.c: 1703: {
  3984  00543C  D14A               	goto	_SetWylacz	;wreg free
  3985                           ;main.c: 1705: }
  3986  00543E                     l406:
  3987                           ;main.c: 1706: else
  3988  00543E  0100               	movlb	(_M+14) shr (0+8)
  3989  005440  5178               	movf	(_M+14)& (0+255),w,b
  3990  005442  1179               	iorwf	(_M+15)& (0+255),w,b
  3991  005444  B4D8               	btfsc	status,2,c
  3992  005446  0012               	return	
  3993  005448  0101               	movlb	_DtCW shr (0+8)
  3994  00544A  BD11               	btfsc	_DtCW& (0+255),6,b
  3995                           ;main.c: 1708: {
  3996  00544C  D942               	call	_SetWylacz	;wreg free
  3997                           ;main.c: 1710: }
  3998  00544E  0012               	return	
  3999  005450                     l410:
  4000                           ;main.c: 1715: case 3:
  4001  005450  0100               	movlb	(_M+16) shr (0+8)
  4002  005452  B17A               	btfsc	(_M+16)& (0+255),0,b
  4003  005454  0012               	return	
  4004                           ;main.c: 1718: if(M._ROZRUCH||RD0)
  4005  005456  B57A               	btfsc	(_M+16)& (0+255),2,b
  4006  005458  D002               	goto	u7620
  4007  00545A  A083               	btfss	3971,0,c	;volatile
  4008  00545C  0012               	return	
  4009  00545E                     u7620:
  4010                           ;main.c: 1719: {
  4011  00545E  0100               	movlb	(_M+2) shr (0+8)
  4012  005460  516C               	movf	(_M+2)& (0+255),w,b
  4013  005462  116D               	iorwf	(_M+3)& (0+255),w,b
  4014  005464  E11C               	bnz	l413
  4015  005466  5170               	movf	(_M+6)& (0+255),w,b
  4016  005468  1171               	iorwf	(_M+7)& (0+255),w,b
  4017  00546A  E119               	bnz	l413
  4018  00546C  0100               	movlb	_M shr (0+8)
  4019  00546E  516A               	movf	_M& (0+255),w,b
  4020  005470  116B               	iorwf	(_M+1)& (0+255),w,b
  4021  005472  E115               	bnz	l413
  4022  005474  0100               	movlb	(_M+4) shr (0+8)
  4023  005476  516E               	movf	(_M+4)& (0+255),w,b
  4024  005478  116F               	iorwf	(_M+5)& (0+255),w,b
  4025  00547A  E111               	bnz	l413
  4026  00547C  0100               	movlb	(_M+8) shr (0+8)
  4027  00547E  5172               	movf	(_M+8)& (0+255),w,b
  4028  005480  1173               	iorwf	(_M+9)& (0+255),w,b
  4029  005482  E10D               	bnz	l413
  4030  005484  0100               	movlb	(_M+10) shr (0+8)
  4031  005486  5174               	movf	(_M+10)& (0+255),w,b
  4032  005488  1175               	iorwf	(_M+11)& (0+255),w,b
  4033  00548A  E109               	bnz	l413
  4034  00548C  0100               	movlb	(_M+12) shr (0+8)
  4035  00548E  5176               	movf	(_M+12)& (0+255),w,b
  4036  005490  1177               	iorwf	(_M+13)& (0+255),w,b
  4037  005492  E105               	bnz	l413
  4038  005494  0100               	movlb	(_M+14) shr (0+8)
  4039  005496  5178               	movf	(_M+14)& (0+255),w,b
  4040  005498  1179               	iorwf	(_M+15)& (0+255),w,b
  4041  00549A  E101               	bnz	l413
  4042                           ;main.c: 1721: {
  4043  00549C  D11A               	goto	_SetWylacz	;wreg free
  4044                           ;main.c: 1723: return;
  4045  00549E                     l413:
  4046                           ;main.c: 1724: }
  4047  00549E  0100               	movlb	(_M+16) shr (0+8)
  4048  0054A0  AB7A               	btfss	(_M+16)& (0+255),5,b
  4049  0054A2  B17B               	btfsc	(_M+17)& (0+255),0,b
  4050  0054A4  D116               	goto	_SetWylacz
  4051  0054A6  BF7A               	btfsc	(_M+16)& (0+255),7,b
  4052  0054A8  D114               	goto	_SetWylacz
  4053  0054AA  0100               	movlb	(_M+26) shr (0+8)
  4054  0054AC  B784               	btfsc	(_M+26)& (0+255),3,b
  4055  0054AE  D111               	goto	_SetWylacz
  4056  0054B0  0100               	movlb	(_M+26) shr (0+8)
  4057  0054B2  B184               	btfsc	(_M+26)& (0+255),0,b
  4058  0054B4  D10E               	goto	_SetWylacz
  4059  0054B6  0100               	movlb	(_M+26) shr (0+8)
  4060  0054B8  B384               	btfsc	(_M+26)& (0+255),1,b
  4061  0054BA  D10B               	goto	_SetWylacz
  4062  0054BC  0100               	movlb	(_M+17) shr (0+8)
  4063  0054BE  B57B               	btfsc	(_M+17)& (0+255),2,b
  4064  0054C0  D108               	goto	_SetWylacz
  4065  0054C2  0100               	movlb	(_M+26) shr (0+8)
  4066  0054C4  BB84               	btfsc	(_M+26)& (0+255),5,b
  4067  0054C6  D105               	goto	_SetWylacz
  4068  0054C8  0100               	movlb	(_M+26) shr (0+8)
  4069  0054CA  BD84               	btfsc	(_M+26)& (0+255),6,b
  4070                           ;main.c: 1726: {
  4071  0054CC  D102               	goto	_SetWylacz	;wreg free
  4072                           ;main.c: 1728: }
  4073                           ;main.c: 1729: else
  4074  0054CE  0100               	movlb	(_M+2) shr (0+8)
  4075  0054D0  516C               	movf	(_M+2)& (0+255),w,b
  4076  0054D2  116D               	iorwf	(_M+3)& (0+255),w,b
  4077  0054D4  E004               	bz	l416
  4078  0054D6                     L48:
  4079                           ;main.c: 1731: {
  4080  0054D6  0101               	movlb	_DtCW shr (0+8)
  4081  0054D8  B511               	btfsc	_DtCW& (0+255),2,b
  4082  0054DA  D0FB               	goto	_SetWylacz
  4083  0054DC  D0BA               	goto	L41
  4084                           ;main.c: 1733: }
  4085  0054DE                     l416:
  4086                           ;main.c: 1734: else
  4087  0054DE  0100               	movlb	(_M+6) shr (0+8)
  4088  0054E0  5170               	movf	(_M+6)& (0+255),w,b
  4089  0054E2  1171               	iorwf	(_M+7)& (0+255),w,b
  4090  0054E4  E004               	bz	l419
  4091                           ;main.c: 1736: {
  4092  0054E6  0101               	movlb	(_DtCO+1) shr (0+8)
  4093  0054E8  A321               	btfss	(_DtCO+1)& (0+255),1,b
  4094  0054EA  D8F3               	call	_SetWylacz	;wreg free
  4095                           ;main.c: 1738: }
  4096  0054EC  0012               	return	
  4097  0054EE                     l419:
  4098                           ;main.c: 1739: else
  4099  0054EE  0100               	movlb	_M shr (0+8)
  4100  0054F0  516A               	movf	_M& (0+255),w,b
  4101  0054F2  116B               	iorwf	(_M+1)& (0+255),w,b
  4102  0054F4  E006               	bz	l422
  4103                           ;main.c: 1741: {
  4104  0054F6  0E13               	movlw	19
  4105  0054F8  ECC4  F05B         	call	_RdPrt
  4106  0054FC  B0D8               	btfsc	status,0,c
  4107  0054FE  D8E9               	call	_SetWylacz	;wreg free
  4108                           ;main.c: 1743: }
  4109  005500  0012               	return	
  4110  005502                     l422:
  4111                           ;main.c: 1744: else
  4112  005502  0100               	movlb	(_M+4) shr (0+8)
  4113  005504  516E               	movf	(_M+4)& (0+255),w,b
  4114  005506  116F               	iorwf	(_M+5)& (0+255),w,b
  4115  005508  E004               	bz	l425
  4116                           ;main.c: 1746: {
  4117  00550A  0101               	movlb	_DtCO shr (0+8)
  4118  00550C  B920               	btfsc	_DtCO& (0+255),4,b
  4119  00550E  D8E1               	call	_SetWylacz	;wreg free
  4120                           ;main.c: 1748: }
  4121  005510  0012               	return	
  4122  005512                     l425:
  4123                           ;main.c: 1749: else
  4124  005512  0100               	movlb	(_M+8) shr (0+8)
  4125  005514  5172               	movf	(_M+8)& (0+255),w,b
  4126  005516  1173               	iorwf	(_M+9)& (0+255),w,b
  4127  005518  E001               	bz	l428
  4128  00551A  D7DD               	goto	L48
  4129                           ;main.c: 1751: {
  4130                           ;main.c: 1753: }
  4131  00551C                     l428:
  4132                           ;main.c: 1754: else
  4133  00551C  0100               	movlb	(_M+10) shr (0+8)
  4134  00551E  5174               	movf	(_M+10)& (0+255),w,b
  4135  005520  1175               	iorwf	(_M+11)& (0+255),w,b
  4136  005522  E01A               	bz	l431
  4137  005524  0E13               	movlw	19
  4138  005526  ECC4  F05B         	call	_RdPrt
  4139  00552A  E206               	bc	u8150
  4140  00552C  0100               	movlb	(_M+17) shr (0+8)
  4141  00552E  B77B               	btfsc	(_M+17)& (0+255),3,b
  4142  005530  D003               	goto	u8150
  4143  005532  0100               	movlb	(_M+17) shr (0+8)
  4144  005534  A97B               	btfss	(_M+17)& (0+255),4,b
  4145  005536  D010               	goto	l431
  4146  005538                     u8150:
  4147                           ;main.c: 1756: {
  4148  005538  0E13               	movlw	19
  4149  00553A  ECC4  F05B         	call	_RdPrt
  4150  00553E  E30B               	bnc	l432
  4151  005540  0100               	movlb	(_M+17) shr (0+8)
  4152  005542  B77B               	btfsc	(_M+17)& (0+255),3,b
  4153  005544  D0C6               	goto	_SetWylacz
  4154  005546  0100               	movlb	(_M+17) shr (0+8)
  4155  005548  B97B               	btfsc	(_M+17)& (0+255),4,b
  4156  00554A  D0C3               	goto	_SetWylacz
  4157                           ;main.c: 1758: {
  4158  00554C  0100               	movlb	(_M+17) shr (0+8)
  4159  00554E  877B               	bsf	(_M+17)& (0+255),3,b
  4160                           ;main.c: 1760: M.BL3=0;
  4161  005550  6B90               	clrf	(_M+38)& (0+255),b
  4162                           ;main.c: 1761: PrintL3();
  4163  005552  ECE0  F060         	call	_PrintL3	;wreg free
  4164  005556                     l432:
  4165                           ;main.c: 1762: }
  4166  005556  D0BD               	goto	_SetWylacz	;wreg free
  4167                           ;main.c: 1764: }
  4168  005558                     l431:
  4169                           ;main.c: 1765: else
  4170  005558  0100               	movlb	(_M+12) shr (0+8)
  4171  00555A  5176               	movf	(_M+12)& (0+255),w,b
  4172  00555C  1177               	iorwf	(_M+13)& (0+255),w,b
  4173  00555E  E009               	bz	l434
  4174  005560  0101               	movlb	_DtCO shr (0+8)
  4175  005562  BF20               	btfsc	_DtCO& (0+255),7,b
  4176  005564  D0B6               	goto	_SetWylacz
  4177  005566  0100               	movlb	(_M+17) shr (0+8)
  4178  005568  B77B               	btfsc	(_M+17)& (0+255),3,b
  4179  00556A  D0B3               	goto	_SetWylacz
  4180  00556C  0100               	movlb	(_M+17) shr (0+8)
  4181  00556E  B97B               	btfsc	(_M+17)& (0+255),4,b
  4182                           ;main.c: 1767: {
  4183  005570  D0B0               	goto	_SetWylacz	;wreg free
  4184                           ;main.c: 1769: }
  4185  005572                     l434:
  4186  005572  D067               	goto	l461
  4187                           ;main.c: 1770: else
  4188                           ;main.c: 1784: {
  4189                           ;main.c: 1786: return;
  4190  005574                     l440:
  4191                           ;main.c: 1787: }
  4192  005574  0100               	movlb	(_M+16) shr (0+8)
  4193  005576  AB7A               	btfss	(_M+16)& (0+255),5,b
  4194  005578  B17B               	btfsc	(_M+17)& (0+255),0,b
  4195  00557A  D0AB               	goto	_SetWylacz
  4196  00557C  BF7A               	btfsc	(_M+16)& (0+255),7,b
  4197  00557E  D0A9               	goto	_SetWylacz
  4198  005580  0100               	movlb	(_M+26) shr (0+8)
  4199  005582  B784               	btfsc	(_M+26)& (0+255),3,b
  4200  005584  D0A6               	goto	_SetWylacz
  4201  005586  0100               	movlb	(_M+26) shr (0+8)
  4202  005588  B184               	btfsc	(_M+26)& (0+255),0,b
  4203  00558A  D0A3               	goto	_SetWylacz
  4204  00558C  0100               	movlb	(_M+26) shr (0+8)
  4205  00558E  B384               	btfsc	(_M+26)& (0+255),1,b
  4206  005590  D0A0               	goto	_SetWylacz
  4207  005592  0100               	movlb	(_M+17) shr (0+8)
  4208  005594  B57B               	btfsc	(_M+17)& (0+255),2,b
  4209  005596  D09D               	goto	_SetWylacz
  4210  005598  0100               	movlb	(_M+26) shr (0+8)
  4211  00559A  BB84               	btfsc	(_M+26)& (0+255),5,b
  4212  00559C  D09A               	goto	_SetWylacz
  4213  00559E  0100               	movlb	(_M+26) shr (0+8)
  4214  0055A0  BD84               	btfsc	(_M+26)& (0+255),6,b
  4215                           ;main.c: 1789: {
  4216  0055A2  D097               	goto	_SetWylacz	;wreg free
  4217                           ;main.c: 1791: }
  4218                           ;main.c: 1792: else
  4219  0055A4  0100               	movlb	(_M+2) shr (0+8)
  4220  0055A6  516C               	movf	(_M+2)& (0+255),w,b
  4221  0055A8  116D               	iorwf	(_M+3)& (0+255),w,b
  4222  0055AA  E001               	bz	l443
  4223  0055AC  D794               	goto	L48
  4224                           ;main.c: 1794: {
  4225                           ;main.c: 1796: }
  4226  0055AE                     l443:
  4227                           ;main.c: 1797: else
  4228  0055AE  0100               	movlb	(_M+6) shr (0+8)
  4229  0055B0  5170               	movf	(_M+6)& (0+255),w,b
  4230  0055B2  1171               	iorwf	(_M+7)& (0+255),w,b
  4231  0055B4  E004               	bz	l446
  4232                           ;main.c: 1799: {
  4233  0055B6  0101               	movlb	(_DtCO+1) shr (0+8)
  4234  0055B8  A321               	btfss	(_DtCO+1)& (0+255),1,b
  4235  0055BA  D88B               	call	_SetWylacz	;wreg free
  4236                           ;main.c: 1801: }
  4237  0055BC  0012               	return	
  4238  0055BE                     l446:
  4239                           ;main.c: 1802: else
  4240  0055BE  0100               	movlb	_M shr (0+8)
  4241  0055C0  516A               	movf	_M& (0+255),w,b
  4242  0055C2  116B               	iorwf	(_M+1)& (0+255),w,b
  4243  0055C4  E006               	bz	l449
  4244                           ;main.c: 1804: {
  4245  0055C6  0E13               	movlw	19
  4246  0055C8  ECC4  F05B         	call	_RdPrt
  4247  0055CC  B0D8               	btfsc	status,0,c
  4248  0055CE  D881               	call	_SetWylacz	;wreg free
  4249                           ;main.c: 1806: }
  4250  0055D0  0012               	return	
  4251  0055D2                     l449:
  4252                           ;main.c: 1807: else
  4253  0055D2  0100               	movlb	(_M+4) shr (0+8)
  4254  0055D4  516E               	movf	(_M+4)& (0+255),w,b
  4255  0055D6  116F               	iorwf	(_M+5)& (0+255),w,b
  4256  0055D8  E004               	bz	l452
  4257                           ;main.c: 1809: {
  4258  0055DA  0101               	movlb	_DtCO shr (0+8)
  4259  0055DC  B920               	btfsc	_DtCO& (0+255),4,b
  4260  0055DE  D879               	call	_SetWylacz	;wreg free
  4261                           ;main.c: 1811: }
  4262  0055E0  0012               	return	
  4263  0055E2                     l452:
  4264                           ;main.c: 1812: else
  4265  0055E2  0100               	movlb	(_M+8) shr (0+8)
  4266  0055E4  5172               	movf	(_M+8)& (0+255),w,b
  4267  0055E6  1173               	iorwf	(_M+9)& (0+255),w,b
  4268  0055E8  E001               	bz	l455
  4269  0055EA  D775               	goto	L48
  4270                           ;main.c: 1814: {
  4271                           ;main.c: 1816: }
  4272  0055EC                     l455:
  4273                           ;main.c: 1817: else
  4274  0055EC  0100               	movlb	(_M+10) shr (0+8)
  4275  0055EE  5174               	movf	(_M+10)& (0+255),w,b
  4276  0055F0  1175               	iorwf	(_M+11)& (0+255),w,b
  4277  0055F2  E01A               	bz	l458
  4278  0055F4  0E13               	movlw	19
  4279  0055F6  ECC4  F05B         	call	_RdPrt
  4280  0055FA  E206               	bc	u8890
  4281  0055FC  0100               	movlb	(_M+17) shr (0+8)
  4282  0055FE  B77B               	btfsc	(_M+17)& (0+255),3,b
  4283  005600  D003               	goto	u8890
  4284  005602  0100               	movlb	(_M+17) shr (0+8)
  4285  005604  A97B               	btfss	(_M+17)& (0+255),4,b
  4286  005606  D010               	goto	l458
  4287  005608                     u8890:
  4288                           ;main.c: 1819: {
  4289  005608  0E13               	movlw	19
  4290  00560A  ECC4  F05B         	call	_RdPrt
  4291  00560E  E30B               	bnc	l459
  4292  005610  0100               	movlb	(_M+17) shr (0+8)
  4293  005612  B77B               	btfsc	(_M+17)& (0+255),3,b
  4294  005614  D05E               	goto	_SetWylacz
  4295  005616  0100               	movlb	(_M+17) shr (0+8)
  4296  005618  B97B               	btfsc	(_M+17)& (0+255),4,b
  4297  00561A  D05B               	goto	_SetWylacz
  4298                           ;main.c: 1821: {
  4299  00561C  0100               	movlb	(_M+17) shr (0+8)
  4300  00561E  877B               	bsf	(_M+17)& (0+255),3,b
  4301                           ;main.c: 1823: M.BL3=0;
  4302  005620  6B90               	clrf	(_M+38)& (0+255),b
  4303                           ;main.c: 1824: PrintL3();
  4304  005622  ECE0  F060         	call	_PrintL3	;wreg free
  4305  005626                     l459:
  4306                           ;main.c: 1825: }
  4307  005626  D055               	goto	_SetWylacz	;wreg free
  4308                           ;main.c: 1827: }
  4309  005628                     l458:
  4310                           ;main.c: 1828: else
  4311  005628  0100               	movlb	(_M+12) shr (0+8)
  4312  00562A  5176               	movf	(_M+12)& (0+255),w,b
  4313  00562C  1177               	iorwf	(_M+13)& (0+255),w,b
  4314  00562E  E009               	bz	l461
  4315  005630  0101               	movlb	_DtCO shr (0+8)
  4316  005632  BF20               	btfsc	_DtCO& (0+255),7,b
  4317  005634  D04E               	goto	_SetWylacz
  4318  005636  0100               	movlb	(_M+17) shr (0+8)
  4319  005638  B77B               	btfsc	(_M+17)& (0+255),3,b
  4320  00563A  D04B               	goto	_SetWylacz
  4321  00563C  0100               	movlb	(_M+17) shr (0+8)
  4322  00563E  B97B               	btfsc	(_M+17)& (0+255),4,b
  4323                           ;main.c: 1830: {
  4324  005640  D048               	goto	_SetWylacz	;wreg free
  4325                           ;main.c: 1832: }
  4326  005642                     l461:
  4327                           ;main.c: 1833: else
  4328  005642  0100               	movlb	(_M+14) shr (0+8)
  4329  005644  5178               	movf	(_M+14)& (0+255),w,b
  4330  005646  1179               	iorwf	(_M+15)& (0+255),w,b
  4331  005648  B4D8               	btfsc	status,2,c
  4332  00564A  0012               	return	
  4333  00564C  0101               	movlb	_DtCW shr (0+8)
  4334  00564E  BD11               	btfsc	_DtCW& (0+255),6,b
  4335  005650  D040               	goto	_SetWylacz
  4336  005652                     L41:
  4337  005652  0101               	movlb	(_DtCO+1) shr (0+8)
  4338  005654  B321               	btfsc	(_DtCO+1)& (0+255),1,b
  4339  005656  0012               	return	
  4340                           ;main.c: 1835: {
  4341  005658  D03C               	goto	_SetWylacz	;wreg free
  4342                           ;main.c: 1837: }
  4343  00565A                     l383:
  4344  00565A  C1B9  FFE8         	movff	_DtKNF+7,wreg
  4345  00565E  0A00               	xorlw	0
  4346  005660  E101 D6F6          	bz	l410
  4347  005664  0A01               	xorlw	1
  4348  005666  E101 D662          	bz	l385
  4349  00566A  0A03               	xorlw	3
  4350  00566C  E101 D65F          	bz	l385
  4351  005670  0A01               	xorlw	1
  4352  005672  E101 D6ED          	bz	l410
  4353                           ;main.c: 1777: }
  4354                           ;main.c: 1779: {
  4355  005676  0100               	movlb	(_M+16) shr (0+8)
  4356  005678  B17A               	btfsc	(_M+16)& (0+255),0,b
  4357                           ;main.c: 1842: }
  4358  00567A  0012               	return	
  4359                           ;main.c: 1772: {
  4360                           ;main.c: 1774: }
  4361                           ;main.c: 1781: if(M._ROZRUCH||RD0)
  4362  00567C  B57A               	btfsc	(_M+16)& (0+255),2,b
  4363  00567E  D002               	goto	u8360
  4364  005680  A083               	btfss	3971,0,c	;volatile
  4365  005682  0012               	return	
  4366  005684                     u8360:
  4367                           ;main.c: 1782: {
  4368  005684  0100               	movlb	(_M+2) shr (0+8)
  4369  005686  516C               	movf	(_M+2)& (0+255),w,b
  4370  005688  116D               	iorwf	(_M+3)& (0+255),w,b
  4371  00568A  E001 D773          	bnz	l440
  4372  00568E  5170               	movf	(_M+6)& (0+255),w,b
  4373  005690  1171               	iorwf	(_M+7)& (0+255),w,b
  4374  005692  E001 D76F          	bnz	l440
  4375  005696  0100               	movlb	_M shr (0+8)
  4376  005698  516A               	movf	_M& (0+255),w,b
  4377  00569A  116B               	iorwf	(_M+1)& (0+255),w,b
  4378  00569C  E001 D76A          	bnz	l440
  4379  0056A0  0100               	movlb	(_M+4) shr (0+8)
  4380  0056A2  516E               	movf	(_M+4)& (0+255),w,b
  4381  0056A4  116F               	iorwf	(_M+5)& (0+255),w,b
  4382  0056A6  E001 D765          	bnz	l440
  4383  0056AA  0100               	movlb	(_M+8) shr (0+8)
  4384  0056AC  5172               	movf	(_M+8)& (0+255),w,b
  4385  0056AE  1173               	iorwf	(_M+9)& (0+255),w,b
  4386  0056B0  E001 D760          	bnz	l440
  4387  0056B4  0100               	movlb	(_M+10) shr (0+8)
  4388  0056B6  5174               	movf	(_M+10)& (0+255),w,b
  4389  0056B8  1175               	iorwf	(_M+11)& (0+255),w,b
  4390  0056BA  E001 D75B          	bnz	l440
  4391  0056BE  0100               	movlb	(_M+12) shr (0+8)
  4392  0056C0  5176               	movf	(_M+12)& (0+255),w,b
  4393  0056C2  1177               	iorwf	(_M+13)& (0+255),w,b
  4394  0056C4  E001 D756          	bnz	l440
  4395  0056C8  0100               	movlb	(_M+14) shr (0+8)
  4396  0056CA  5178               	movf	(_M+14)& (0+255),w,b
  4397  0056CC  1179               	iorwf	(_M+15)& (0+255),w,b
  4398  0056CE  E001 D751          	bnz	l440
  4399  0056D2                     __end_of_DecWylacz:
  4400                           ;main.c: 1844: void SetWylacz(void)
  4401                           ;main.c: 1845: {
  4402  0056D2                     _SetWylacz:
  4403  000000                     
  4404                           ;main.c: 1846: GrzejOFF();
  4405  0056D2  D8DE               	call	_GrzejOFF	;wreg free
  4406                           ;main.c: 1849: switch(DtKNF.tpkt)
  4407  0056D4  D010               	goto	l466
  4408  0056D6                     l468:
  4409                           ;main.c: 1855: {
  4410  0056D6  0100               	movlb	(_M+27) shr (0+8)
  4411                           ;main.c: 1852: case 2:
  4412  0056D8  B483               	btfsc	3971,2,c	;volatile
  4413  0056DA  D004               	goto	L20
  4414  0056DC  8B85               	bsf	(_M+27)& (0+255),5,b
  4415                           ;main.c: 1857: M._BLOKUJ_15S=1;
  4416  0056DE  897B               	bsf	(_M+17)& (0+255),4,b
  4417                           ;main.c: 1858: M.BL15=0;
  4418  0056E0  6B91               	clrf	(_M+39)& (0+255),b
  4419                           ;main.c: 1859: }
  4420  0056E2  D001               	goto	l470
  4421                           ;main.c: 1860: else M._KCW_PMP=0;
  4422  0056E4                     L20:
  4423  0056E4  9B85               	bcf	(_M+27)& (0+255),5,b
  4424  0056E6                     l470:
  4425                           ;main.c: 1861: ToObiegCO();
  4426  0056E6  DC5A               	call	_ToObiegCO	;wreg free
  4427                           ;main.c: 1862: break;
  4428  0056E8  D012               	goto	l465
  4429  0056EA                     l472:
  4430                           ;main.c: 1865: case 3:
  4431  0056EA  B283               	btfsc	3971,1,c	;volatile
  4432  0056EC  D010               	goto	l465
  4433  0056EE                     u9090:
  4434                           ;main.c: 1877: {
  4435  0056EE  0100               	movlb	(_M+17) shr (0+8)
  4436  0056F0  897B               	bsf	(_M+17)& (0+255),4,b
  4437                           ;main.c: 1879: M.BL15=0;
  4438  0056F2  6B91               	clrf	(_M+39)& (0+255),b
  4439                           ;main.c: 1880: }
  4440  0056F4  D00C               	goto	l465
  4441  0056F6                     l466:
  4442  0056F6  C1B9  FFE8         	movff	_DtKNF+7,wreg
  4443  0056FA  0A00               	xorlw	0
  4444  0056FC  E0F6               	bz	l472
  4445  0056FE  0A01               	xorlw	1
  4446  005700  E0EA               	bz	l468
  4447  005702  0A03               	xorlw	3
  4448  005704  E0E8               	bz	l468
  4449  005706  0A01               	xorlw	1
  4450  005708  E0F0               	bz	l472
  4451                           ;main.c: 1868: {
  4452                           ;main.c: 1870: M.BL15=0;
  4453                           ;main.c: 1871: }
  4454                           ;main.c: 1873: }
  4455                           ;main.c: 1875: {
  4456  00570A  A283               	btfss	3971,1,c	;volatile
  4457  00570C  D7F0               	goto	u9090
  4458  00570E                     l465:
  4459                           ;main.c: 1885: M._WYLACZ=1;
  4460  00570E  0100               	movlb	(_M+16) shr (0+8)
  4461  005710  817A               	bsf	(_M+16)& (0+255),0,b
  4462                           ;main.c: 1886: if(M._TURBO&&RD3) M._VWYBIEG=1;
  4463  005712  B385               	btfsc	(_M+27)& (0+255),1,b
  4464  005714  A683               	btfss	3971,3,c	;volatile
  4465  005716  D001               	goto	l476
  4466  005718  8D7A               	bsf	(_M+16)& (0+255),6,b
  4467  00571A                     l476:
  4468                           ;main.c: 1887: M.ROZ=0;
  4469  00571A  0100               	movlb	(_M+35) shr (0+8)
  4470  00571C  6B8D               	clrf	(_M+35)& (0+255),b
  4471                           ;main.c: 1888: M.MNM=0;
  4472  00571E  6B96               	clrf	(_M+44)& (0+255),b
  4473                           ;main.c: 1889: M._ROZRUCH=0;
  4474  005720  957A               	bcf	(_M+16)& (0+255),2,b
  4475                           ;main.c: 1890: M._RUN_MNMOD=0;
  4476  005722  9985               	bcf	(_M+27)& (0+255),4,b
  4477                           ;main.c: 1893: DtCO._on_DZ_CO=0;
  4478  005724  0101               	movlb	_DtCO shr (0+8)
  4479  005726  9B20               	bcf	_DtCO& (0+255),5,b
  4480                           ;main.c: 1894: SetPrt(9,0);
  4481  005728  0100               	movlb	__Lparam shr (0+8)
  4482  00572A  6BEA               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  4483  00572C  0E09               	movlw	9
  4484  00572E  ECD5  F05B         	call	_SetPrt
  4485                           ;main.c: 1895: DtCW._on_DZ_CW=0;
  4486  005732  0101               	movlb	_DtCW shr (0+8)
  4487  005734  9911               	bcf	_DtCW& (0+255),4,b
  4488                           ;main.c: 1896: SetPrt(10,0);
  4489  005736  0100               	movlb	__Lparam shr (0+8)
  4490  005738  6BEA               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  4491  00573A  0E0A               	movlw	10
  4492  00573C  EFD5  F05B         	goto	_SetPrt
  4493                           ;main.c: 1897: }
  4494  005740                     __end_of_SetWylacz:
  4495                           ;main.c: 1900: void FunkcjaSerwisowa(void)
  4496                           ;main.c: 1901: {
  4497  005740                     _FunkcjaSerwisowa:
  4498  000000                     
  4499                           ;main.c: 1902: if(M._AKTYWNE_KNF)
  4500  005740  0100               	movlb	(_M+24) shr (0+8)
  4501  005742  5182               	movf	(_M+24)& (0+255),w,b
  4502  005744  1183               	iorwf	(_M+25)& (0+255),w,b
  4503  005746  E034               	bz	l481
  4504                           ;main.c: 1903: {
  4505  005748  6B99               	clrf	(_M+47)& (0+255),b
  4506                           ;main.c: 1905: M._AKTYWNE_SRW=0;
  4507  00574A  EE00  F07C         	lfsr	0,_M+18
  4508  00574E  6AEE               	clrf	postinc0,c
  4509  005750  6AEE               	clrf	postinc0,c
  4510                           ;main.c: 1906: }
  4511  005752  0012               	return	
  4512                           ;main.c: 1907: else
  4513  005754                     l482:
  4514                           ;main.c: 1909: {
  4515                           ;main.c: 1911: {
  4516  005754  0101               	movlb	(_PFN+1) shr (0+8)
  4517  005756  510D               	movf	(_PFN+1)& (0+255),w,b
  4518  005758  0A03               	xorlw	3
  4519  00575A  110E               	iorwf	(_PFN+2)& (0+255),w,b
  4520  00575C  A4D8               	btfss	status,2,c
  4521  00575E  0012               	return	
  4522  005760  0E01               	movlw	1
  4523  005762  0100               	movlb	__Lparam shr (0+8)
  4524  005764  6FEC               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  4525  005766  C0D3  FFE8         	movff	_RSDT1+54,wreg
  4526  00576A  EC06  F061         	call	_GetBit2
  4527  00576E  A0D8               	btfss	status,0,c
  4528  005770  0012               	return	
  4529                           ;main.c: 1913: {
  4530  005772  0E01               	movlw	1
  4531  005774  CFE8 F099          	movff	wreg,_M+47
  4532                           ;main.c: 1915: M._AKTYWNE_SRW=1;
  4533  005778  0100               	movlb	(_M+18) shr (0+8)
  4534  00577A  6F7C               	movwf	(_M+18)& (0+255),b
  4535  00577C  6B7D               	clrf	(_M+19)& (0+255),b
  4536                           ;main.c: 1916: StartRTM(1);
  4537  00577E  EF5C  F05C         	goto	_StartRTM
  4538                           ;main.c: 1917: }
  4539  005782                     l484:
  4540                           ;main.c: 1919: }
  4541                           ;main.c: 1921: {
  4542  005782  0101               	movlb	(_PFN+1) shr (0+8)
  4543  005784  510D               	movf	(_PFN+1)& (0+255),w,b
  4544  005786  0A03               	xorlw	3
  4545  005788  110E               	iorwf	(_PFN+2)& (0+255),w,b
  4546  00578A  E10B               	bnz	l485
  4547  00578C  0101               	movlb	_PFN shr (0+8)
  4548  00578E  BB0C               	btfsc	_PFN& (0+255),5,b
  4549  005790  D008               	goto	l485
  4550  005792  0E01               	movlw	1
  4551  005794  EC74  F05C         	call	_RTM
  4552  005798  6E00               	movwf	btemp,c
  4553  00579A  0E3C               	movlw	60
  4554  00579C  5C00               	subwf	btemp,w,c
  4555  00579E  A0D8               	btfss	status,0,c
  4556  0057A0  0012               	return	
  4557  0057A2                     l485:
  4558                           ;main.c: 1924: else
  4559  0057A2  0100               	movlb	(_M+47) shr (0+8)
  4560  0057A4  6B99               	clrf	(_M+47)& (0+255),b
  4561                           ;main.c: 1927: M._AKTYWNE_SRW=0;
  4562  0057A6  EE00  F07C         	lfsr	0,_M+18
  4563  0057AA  6AEE               	clrf	postinc0,c
  4564  0057AC  6AEE               	clrf	postinc0,c
  4565                           ;main.c: 1928: }
  4566  0057AE  0012               	return	
  4567  0057B0                     l481:
  4568  0057B0  C099  FFE8         	movff	_M+47,wreg
  4569  0057B4  0A00               	xorlw	0
  4570  0057B6  E0CE               	bz	l482
  4571  0057B8  0A01               	xorlw	1
  4572  0057BA  E0E3               	bz	l484
  4573  0057BC  0012               	return	
  4574                           ;main.c: 1932: }
  4575  0057BE                     __end_of_FunkcjaSerwisowa:
  4576                           ;main.c: 1981: void BlokadaL3(void)
  4577                           ;main.c: 1982: {
  4578  0057BE                     _BlokadaL3:
  4579  000000                     
  4580                           ;main.c: 1983: switch(M.BL3)
  4581  0057BE  D02D               	goto	l489
  4582  0057C0                     l490:
  4583                           ;main.c: 1984: {
  4584                           ;main.c: 1986: {
  4585  0057C0  0E01               	movlw	1
  4586  0057C2  CFE8 F090          	movff	wreg,_M+38
  4587                           ;main.c: 1988: StartRTM(2);
  4588  0057C6  0E02               	movlw	2
  4589  0057C8  EC5C  F05C         	call	_StartRTM
  4590  0057CC                     l491:
  4591                           ;main.c: 1989: }
  4592                           ;main.c: 1991: {
  4593  0057CC  ECE0  F060         	call	_PrintL3	;wreg free
  4594                           ;main.c: 1993: if((PFN.poz!=3&&!M._ZMKCOCW)||M._
      +                          pob_CW||(DtKNF.tpkt==0&&DtCW._wpz_CW))
  4595  0057D0  0101               	movlb	(_PFN+1) shr (0+8)
  4596  0057D2  510D               	movf	(_PFN+1)& (0+255),w,b
  4597  0057D4  0A03               	xorlw	3
  4598  0057D6  110E               	iorwf	(_PFN+2)& (0+255),w,b
  4599  0057D8  E003               	bz	u9241
  4600  0057DA  0100               	movlb	(_M+16) shr (0+8)
  4601  0057DC  A37A               	btfss	(_M+16)& (0+255),1,b
  4602  0057DE  D00B               	goto	u9300
  4603  0057E0                     u9241:
  4604  0057E0  0100               	movlb	(_M+8) shr (0+8)
  4605  0057E2  5172               	movf	(_M+8)& (0+255),w,b
  4606  0057E4  1173               	iorwf	(_M+9)& (0+255),w,b
  4607  0057E6  E107               	bnz	u9300
  4608  0057E8  EE01  F0B9         	lfsr	0,_DtKNF+7
  4609  0057EC  50EF               	movf	indf0,w,c
  4610  0057EE  E108               	bnz	l492
  4611  0057F0  0101               	movlb	_DtCW shr (0+8)
  4612  0057F2  A711               	btfss	_DtCW& (0+255),3,b
  4613  0057F4  D005               	goto	l492
  4614  0057F6                     u9300:
  4615                           ;main.c: 1994: {
  4616  0057F6  0100               	movlb	(_M+17) shr (0+8)
  4617  0057F8  977B               	bcf	(_M+17)& (0+255),3,b
  4618                           ;main.c: 1996: M.BL3=0;
  4619  0057FA  6B90               	clrf	(_M+38)& (0+255),b
  4620                           ;main.c: 1997: EndL3();
  4621  0057FC  ECE8  F060         	call	_EndL3	;wreg free
  4622  005800                     l492:
  4623                           ;main.c: 1998: }
  4624  005800  0E02               	movlw	2
  4625  005802  EC74  F05C         	call	_RTM
  4626  005806  6E00               	movwf	btemp,c
  4627  005808  0E03               	movlw	3
  4628  00580A  5C00               	subwf	btemp,w,c
  4629  00580C  A0D8               	btfss	status,0,c
  4630  00580E  0012               	return	
  4631                           ;main.c: 2000: M._BLOKUJ_3M=0;
  4632  005810  0100               	movlb	(_M+17) shr (0+8)
  4633  005812  977B               	bcf	(_M+17)& (0+255),3,b
  4634                           ;main.c: 2001: M.BL3=0;
  4635  005814  6B90               	clrf	(_M+38)& (0+255),b
  4636                           ;main.c: 2002: EndL3();
  4637  005816  EFE8  F060         	goto	_EndL3	;wreg free
  4638                           ;main.c: 2003: }
  4639  00581A                     l489:
  4640  00581A  C090  FFE8         	movff	_M+38,wreg
  4641  00581E  0A00               	xorlw	0
  4642  005820  E0CF               	bz	l490
  4643  005822  0A01               	xorlw	1
  4644  005824  E0D3               	bz	l491
  4645  005826  0012               	return	
  4646                           ;main.c: 2005: }
  4647  005828                     __end_of_BlokadaL3:
  4648                           ;main.c: 2009: void Blokada15S(void)
  4649                           ;main.c: 2010: {
  4650  005828                     _Blokada15S:
  4651  000000                     
  4652                           ;main.c: 2011: switch(M.BL15)
  4653  005828  D021               	goto	l496
  4654  00582A                     l497:
  4655                           ;main.c: 2012: {
  4656                           ;main.c: 2014: {
  4657  00582A  0E01               	movlw	1
  4658  00582C  CFE8 F091          	movff	wreg,_M+39
  4659                           ;main.c: 2016: StartRTdS(4);
  4660  005830  0E04               	movlw	4
  4661  005832  EC17  F05C         	call	_StartRTdS
  4662  005836                     l498:
  4663                           ;main.c: 2017: }
  4664                           ;main.c: 2019: {
  4665  005836  0E04               	movlw	4
  4666  005838  EC29  F05C         	call	_RTdS
  4667  00583C  6E00               	movwf	btemp,c
  4668  00583E  0E02               	movlw	2
  4669  005840  5C00               	subwf	btemp,w,c
  4670  005842  E308               	bnc	l499
  4671  005844  0101               	movlb	(_PFN+1) shr (0+8)
  4672  005846  510D               	movf	(_PFN+1)& (0+255),w,b
  4673  005848  0A03               	xorlw	3
  4674  00584A  110E               	iorwf	(_PFN+2)& (0+255),w,b
  4675  00584C  E003               	bz	l499
  4676                           ;main.c: 2021: {
  4677  00584E  0100               	movlb	(_M+17) shr (0+8)
  4678  005850  997B               	bcf	(_M+17)& (0+255),4,b
  4679                           ;main.c: 2023: M.BL15=0;
  4680  005852  6B91               	clrf	(_M+39)& (0+255),b
  4681  005854                     l499:
  4682                           ;main.c: 2024: }
  4683  005854  0E04               	movlw	4
  4684  005856  EC29  F05C         	call	_RTdS
  4685  00585A  6E00               	movwf	btemp,c
  4686  00585C  0E96               	movlw	150
  4687  00585E  5C00               	subwf	btemp,w,c
  4688  005860  A0D8               	btfss	status,0,c
  4689  005862  0012               	return	
  4690                           ;main.c: 2026: M._BLOKUJ_15S=0;
  4691  005864  0100               	movlb	(_M+17) shr (0+8)
  4692  005866  997B               	bcf	(_M+17)& (0+255),4,b
  4693                           ;main.c: 2027: M.BL15=0;
  4694  005868  6B91               	clrf	(_M+39)& (0+255),b
  4695                           ;main.c: 2028: }
  4696  00586A  0012               	return	
  4697  00586C                     l496:
  4698  00586C  C091  FFE8         	movff	_M+39,wreg
  4699  005870  0A00               	xorlw	0
  4700  005872  E0DB               	bz	l497
  4701  005874  0A01               	xorlw	1
  4702  005876  E0DF               	bz	l498
  4703  005878  0012               	return	
  4704                           ;main.c: 2030: }
  4705  00587A                     __end_of_Blokada15S:
  4706                           ;main.c: 2034: void GrzejON(void)
  4707                           ;main.c: 2035: {
  4708  00587A                     _GrzejON:
  4709  000000                     
  4710                           ;main.c: 2036: RD0=1;
  4711  00587A  8083               	bsf	3971,0,c	;volatile
  4712                           ;main.c: 2037: asm("nop");
  4713  00587C  F000               	nop		;#
  4714                           ;main.c: 2038: asm("nop");
  4715  00587E  F000               	nop		;#
  4716                           ;main.c: 2039: asm("nop");
  4717  005880  F000               	nop		;#
  4718                           ;main.c: 2040: asm("nop");
  4719  005882  F000               	nop		;#
  4720                           ;main.c: 2041: asm("nop");
  4721  005884  F000               	nop		;#
  4722                           ;main.c: 2042: asm("nop");
  4723  005886  F000               	nop		;#
  4724                           ;main.c: 2043: asm("nop");
  4725  005888  F000               	nop		;#
  4726                           ;main.c: 2044: asm("nop");
  4727  00588A  F000               	nop		;#
  4728                           ;main.c: 2045: RD3=1;
  4729  00588C  8683               	bsf	3971,3,c	;volatile
  4730                           ;main.c: 2046: }
  4731  00588E  0012               	return	
  4732  005890                     __end_of_GrzejON:
  4733                           ;main.c: 2050: void GrzejOFF(void)
  4734                           ;main.c: 2051: {
  4735  005890                     _GrzejOFF:
  4736  000000                     
  4737                           ;main.c: 2052: if(!M._TURBO)
  4738  005890  0100               	movlb	(_M+27) shr (0+8)
  4739  005892  B385               	btfsc	(_M+27)& (0+255),1,b
  4740  005894  D00B               	goto	l503
  4741                           ;main.c: 2053: {
  4742  005896  9683               	bcf	3971,3,c	;volatile
  4743                           ;main.c: 2055: asm("nop");
  4744  005898  F000               	nop		;#
  4745                           ;main.c: 2056: asm("nop");
  4746  00589A  F000               	nop		;#
  4747                           ;main.c: 2057: asm("nop");
  4748  00589C  F000               	nop		;#
  4749                           ;main.c: 2058: asm("nop");
  4750  00589E  F000               	nop		;#
  4751                           ;main.c: 2059: asm("nop");
  4752  0058A0  F000               	nop		;#
  4753                           ;main.c: 2060: asm("nop");
  4754  0058A2  F000               	nop		;#
  4755                           ;main.c: 2061: asm("nop");
  4756  0058A4  F000               	nop		;#
  4757                           ;main.c: 2062: asm("nop");
  4758  0058A6  F000               	nop		;#
  4759                           ;main.c: 2063: RD0=0;
  4760  0058A8  9083               	bcf	3971,0,c	;volatile
  4761                           ;main.c: 2064: }
  4762  0058AA  0012               	return	
  4763  0058AC                     l503:
  4764                           ;main.c: 2065: else
  4765  0058AC  9083               	bcf	3971,0,c	;volatile
  4766                           ;main.c: 2068: }
  4767  0058AE  0012               	return	
  4768  0058B0                     __end_of_GrzejOFF:
  4769                           ;main.c: 2073: void Rozruch(void)
  4770                           ;main.c: 2074: {
  4771  0058B0                     _Rozruch:
  4772  000000                     
  4773                           ;main.c: 2075: StartRTS(16);
  4774  0058B0  0E10               	movlw	16
  4775  0058B2  EC35  F05C         	call	_StartRTS
  4776                           ;main.c: 2076: switch(M.ROZ)
  4777  0058B6  D12A               	goto	l507
  4778  0058B8                     l508:
  4779                           ;main.c: 2077: {
  4780                           ;main.c: 2080: {
  4781  0058B8  EE01  F0BC         	lfsr	0,_DtKNF+10
  4782  0058BC  50EF               	movf	indf0,w,c
  4783  0058BE  E103               	bnz	l509
  4784                           ;main.c: 2082: {
  4785  0058C0  0100               	movlb	(_M+16) shr (0+8)
  4786  0058C2  B37A               	btfsc	(_M+16)& (0+255),1,b
  4787  0058C4  0012               	return	
  4788  0058C6                     l509:
  4789                           ;main.c: 2084: }
  4790  0058C6  0E01               	movlw	1
  4791  0058C8  CFE8 F08D          	movff	wreg,_M+35
  4792                           ;main.c: 2086: StartRTS(2);
  4793  0058CC  0E02               	movlw	2
  4794  0058CE  EC35  F05C         	call	_StartRTS
  4795  0058D2                     l511:
  4796                           ;main.c: 2087: }
  4797                           ;main.c: 2090: {
  4798  0058D2  EE01  F0BC         	lfsr	0,_DtKNF+10
  4799  0058D6  50EF               	movf	indf0,w,c
  4800                           ;main.c: 2092: {
  4801  0058D8  0E02               	movlw	2
  4802  0058DA  E123               	bnz	L21
  4803  0058DC  EC4D  F05C         	call	_RTS
  4804  0058E0  6E00               	movwf	btemp,c
  4805  0058E2  0E01               	movlw	1
  4806  0058E4  5C00               	subwf	btemp,w,c
  4807  0058E6  A0D8               	btfss	status,0,c
  4808  0058E8  0012               	return	
  4809                           ;main.c: 2094: RD2=0;
  4810  0058EA  9483               	bcf	3971,2,c	;volatile
  4811                           ;main.c: 2095: if(!RdPrt(1))
  4812  0058EC  0E01               	movlw	1
  4813  0058EE  ECC4  F05B         	call	_RdPrt
  4814                           ;main.c: 2096: {
  4815  0058F2  0E02               	movlw	2
  4816  0058F4  E204               	bc	L22
  4817  0058F6  CFE8 F08D          	movff	wreg,_M+35
  4818                           ;main.c: 2098: StartRTS(2);
  4819  0058FA  EF35  F05C         	goto	_StartRTS
  4820                           ;main.c: 2099: return;
  4821                           ;main.c: 2100: }
  4822  0058FE                     L22:
  4823  0058FE  EC4D  F05C         	call	_RTS
  4824  005902  6E00               	movwf	btemp,c
  4825  005904  0E05               	movlw	5
  4826  005906  5C00               	subwf	btemp,w,c
  4827  005908  A0D8               	btfss	status,0,c
  4828  00590A  0012               	return	
  4829                           ;main.c: 2102: M.ERR_BTY=0x05;
  4830  00590C  0E05               	movlw	5
  4831  00590E  CFE8 F08C          	movff	wreg,_M+34
  4832                           ;main.c: 2103: PrintErr(0x05,1);
  4833  005912  0E01               	movlw	1
  4834  005914  0100               	movlb	__Lparam shr (0+8)
  4835  005916  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  4836  005918  0E05               	movlw	5
  4837  00591A  EC83  F060         	call	_PrintErr
  4838                           ;main.c: 2104: ErrPTG();
  4839  00591E  EF11  F033         	goto	_ErrPTG	;wreg free
  4840                           ;main.c: 2105: return;
  4841                           ;main.c: 2106: }
  4842  005922                     L21:
  4843  005922  CFE8 F08D          	movff	wreg,_M+35
  4844                           ;main.c: 2108: StartRTS(2);
  4845  005926  0E02               	movlw	2
  4846  005928  EC35  F05C         	call	_StartRTS
  4847  00592C                     l516:
  4848                           ;main.c: 2109: }
  4849                           ;main.c: 2112: {
  4850  00592C  D00D               	goto	l518
  4851  00592E                     l520:
  4852                           ;main.c: 2116: case 2:
  4853  00592E  0100               	movlb	(_M+27) shr (0+8)
  4854  005930  BF85               	btfsc	(_M+27)& (0+255),7,b
  4855  005932  D017               	goto	l517
  4856  005934  EE01  F0BC         	lfsr	0,_DtKNF+10
  4857  005938  50EF               	movf	indf0,w,c
  4858  00593A  E113               	bnz	l517
  4859  00593C  D003               	goto	u9470
  4860                           ;main.c: 2119: break;
  4861  00593E                     l523:
  4862                           ;main.c: 2122: case 3:
  4863  00593E  0100               	movlb	(_M+16) shr (0+8)
  4864  005940  B37A               	btfsc	(_M+16)& (0+255),1,b
  4865  005942  D00F               	goto	l517
  4866  005944                     u9470:
  4867  005944  8483               	bsf	3971,2,c	;volatile
  4868                           ;main.c: 2130: break;
  4869  005946  D00D               	goto	l517
  4870  005948                     l518:
  4871  005948  C1B9  FFE8         	movff	_DtKNF+7,wreg
  4872  00594C  0A00               	xorlw	0
  4873  00594E  E0F7               	bz	l523
  4874  005950  0A01               	xorlw	1
  4875  005952  E0ED               	bz	l520
  4876  005954  0A03               	xorlw	3
  4877  005956  E0EB               	bz	l520
  4878  005958  0A01               	xorlw	1
  4879  00595A  E0F1               	bz	l523
  4880                           ;main.c: 2125: break;
  4881                           ;main.c: 2126: }
  4882                           ;main.c: 2128: {
  4883  00595C  0100               	movlb	(_M+16) shr (0+8)
  4884  00595E  A37A               	btfss	(_M+16)& (0+255),1,b
  4885  005960  D7F1               	goto	u9470
  4886  005962                     l517:
  4887                           ;main.c: 2133: WritePWM(PWM.MDMOD);
  4888  005962  C17E  FFE8         	movff	_PWM+9,wreg
  4889  005966  ECD4  F054         	call	_WritePWM
  4890                           ;main.c: 2134: M.ROZ=3;
  4891  00596A  0E03               	movlw	3
  4892  00596C  CFE8 F08D          	movff	wreg,_M+35
  4893                           ;main.c: 2135: StartRTS(2);
  4894  005970  0E02               	movlw	2
  4895  005972  EC35  F05C         	call	_StartRTS
  4896  005976                     l527:
  4897                           ;main.c: 2136: }
  4898                           ;main.c: 2139: {
  4899  005976  0100               	movlb	(_M+27) shr (0+8)
  4900  005978  A385               	btfss	(_M+27)& (0+255),1,b
  4901  00597A  D013               	goto	l528
  4902                           ;main.c: 2141: {
  4903  00597C  0E03               	movlw	3
  4904  00597E  ECC4  F05B         	call	_RdPrt
  4905  005982  B0D8               	btfsc	status,0,c
  4906  005984  B683               	btfsc	3971,3,c	;volatile
  4907  005986  D00C               	goto	l529
  4908                           ;main.c: 2143: {
  4909  005988  0E02               	movlw	2
  4910  00598A  EC4D  F05C         	call	_RTS
  4911  00598E  6E00               	movwf	btemp,c
  4912  005990  0E05               	movlw	5
  4913  005992  5C00               	subwf	btemp,w,c
  4914  005994  A0D8               	btfss	status,0,c
  4915  005996  0012               	return	
  4916                           ;main.c: 2145: M.RCI=0;
  4917  005998  0100               	movlb	(_M+43) shr (0+8)
  4918  00599A  6B95               	clrf	(_M+43)& (0+255),b
  4919                           ;main.c: 2146: M._RUSZ_CIAG=1;
  4920  00599C  8F7A               	bsf	(_M+16)& (0+255),7,b
  4921                           ;main.c: 2147: return;
  4922  00599E  0012               	return	
  4923  0059A0                     l529:
  4924                           ;main.c: 2148: }
  4925  0059A0  8683               	bsf	3971,3,c	;volatile
  4926  0059A2                     l528:
  4927                           ;main.c: 2150: }
  4928  0059A2  0E04               	movlw	4
  4929  0059A4  CFE8 F08D          	movff	wreg,_M+35
  4930                           ;main.c: 2152: StartRTS(2);
  4931  0059A8  0E02               	movlw	2
  4932  0059AA  EC35  F05C         	call	_StartRTS
  4933  0059AE                     l531:
  4934                           ;main.c: 2153: }
  4935                           ;main.c: 2156: {
  4936  0059AE  0100               	movlb	(_M+27) shr (0+8)
  4937  0059B0  A385               	btfss	(_M+27)& (0+255),1,b
  4938  0059B2  D012               	goto	l532
  4939                           ;main.c: 2158: {
  4940  0059B4  0E15               	movlw	21
  4941  0059B6  ECC4  F05B         	call	_RdPrt
  4942  0059BA  A0D8               	btfss	status,0,c
  4943  0059BC  A683               	btfss	3971,3,c	;volatile
  4944  0059BE  D00C               	goto	l532
  4945                           ;main.c: 2160: {
  4946  0059C0  0E02               	movlw	2
  4947  0059C2  EC4D  F05C         	call	_RTS
  4948  0059C6  6E00               	movwf	btemp,c
  4949  0059C8  0E05               	movlw	5
  4950  0059CA  5C00               	subwf	btemp,w,c
  4951  0059CC  A0D8               	btfss	status,0,c
  4952  0059CE  0012               	return	
  4953                           ;main.c: 2162: M.RCI=0;
  4954  0059D0  0100               	movlb	(_M+43) shr (0+8)
  4955  0059D2  6B95               	clrf	(_M+43)& (0+255),b
  4956                           ;main.c: 2163: M._RUSZ_CIAG=1;
  4957  0059D4  8F7A               	bsf	(_M+16)& (0+255),7,b
  4958                           ;main.c: 2164: return;
  4959  0059D6  0012               	return	
  4960  0059D8                     l532:
  4961                           ;main.c: 2165: }
  4962  0059D8  0E05               	movlw	5
  4963  0059DA  CFE8 F08D          	movff	wreg,_M+35
  4964                           ;main.c: 2168: StartRTS(2);
  4965  0059DE  0E02               	movlw	2
  4966  0059E0  EC35  F05C         	call	_StartRTS
  4967  0059E4                     l535:
  4968                           ;main.c: 2169: }
  4969                           ;main.c: 2172: {
  4970  0059E4  0100               	movlb	(_M+27) shr (0+8)
  4971  0059E6  A385               	btfss	(_M+27)& (0+255),1,b
  4972  0059E8  D008               	goto	l536
  4973  0059EA  0E15               	movlw	21
  4974  0059EC  ECC4  F05B         	call	_RdPrt
  4975  0059F0  E204               	bc	l536
  4976                           ;main.c: 2174: {
  4977  0059F2  0100               	movlb	(_M+43) shr (0+8)
  4978  0059F4  6B95               	clrf	(_M+43)& (0+255),b
  4979                           ;main.c: 2176: M._RUSZ_CIAG=1;
  4980  0059F6  8F7A               	bsf	(_M+16)& (0+255),7,b
  4981                           ;main.c: 2177: return;
  4982  0059F8  0012               	return	
  4983  0059FA                     l536:
  4984                           ;main.c: 2178: }
  4985  0059FA  0E05               	movlw	5
  4986  0059FC  ECC4  F05B         	call	_RdPrt
  4987  005A00  B0D8               	btfsc	status,0,c
  4988  005A02  B083               	btfsc	3971,0,c	;volatile
  4989  005A04  D013               	goto	l537
  4990                           ;main.c: 2180: {
  4991  005A06  0E02               	movlw	2
  4992  005A08  EC4D  F05C         	call	_RTS
  4993  005A0C  6E00               	movwf	btemp,c
  4994  005A0E  0E05               	movlw	5
  4995  005A10  5C00               	subwf	btemp,w,c
  4996  005A12  A0D8               	btfss	status,0,c
  4997  005A14  0012               	return	
  4998                           ;main.c: 2182: M.ERR_BTY=0x06;
  4999  005A16  0E06               	movlw	6
  5000  005A18  CFE8 F08C          	movff	wreg,_M+34
  5001                           ;main.c: 2183: PrintErr(0x06,1);
  5002  005A1C  0E01               	movlw	1
  5003  005A1E  0100               	movlb	__Lparam shr (0+8)
  5004  005A20  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5005  005A22  0E06               	movlw	6
  5006  005A24  EC83  F060         	call	_PrintErr
  5007                           ;main.c: 2184: ErrPTG();
  5008  005A28  EC11  F033         	call	_ErrPTG	;wreg free
  5009  005A2C                     l537:
  5010                           ;main.c: 2185: }
  5011  005A2C  DF26               	call	_GrzejON	;wreg free
  5012                           ;main.c: 2187: M.ROZ=6;
  5013  005A2E  0E06               	movlw	6
  5014  005A30  CFE8 F08D          	movff	wreg,_M+35
  5015                           ;main.c: 2188: StartRTS(2);
  5016  005A34  0E02               	movlw	2
  5017  005A36  EC35  F05C         	call	_StartRTS
  5018  005A3A                     l539:
  5019                           ;main.c: 2189: }
  5020                           ;main.c: 2192: {
  5021  005A3A  D006               	goto	l541
  5022  005A3C                     l543:
  5023                           ;main.c: 2196: case 2:
  5024  005A3C  D012               	goto	l540
  5025  005A3E                     l545:
  5026                           ;main.c: 2201: case 3:
  5027  005A3E  0100               	movlb	(_M+16) shr (0+8)
  5028  005A40  B37A               	btfsc	(_M+16)& (0+255),1,b
  5029  005A42  D00F               	goto	l540
  5030  005A44                     u9660:
  5031  005A44  8483               	bsf	3971,2,c	;volatile
  5032                           ;main.c: 2209: break;
  5033  005A46  D00D               	goto	l540
  5034  005A48                     l541:
  5035  005A48  C1B9  FFE8         	movff	_DtKNF+7,wreg
  5036  005A4C  0A00               	xorlw	0
  5037  005A4E  E0F7               	bz	l545
  5038  005A50  0A01               	xorlw	1
  5039  005A52  E0F4               	bz	l543
  5040  005A54  0A03               	xorlw	3
  5041  005A56  E0F2               	bz	l543
  5042  005A58  0A01               	xorlw	1
  5043  005A5A  E0F1               	bz	l545
  5044                           ;main.c: 2204: break;
  5045                           ;main.c: 2205: }
  5046                           ;main.c: 2207: {
  5047  005A5C  0100               	movlb	(_M+16) shr (0+8)
  5048  005A5E  A37A               	btfss	(_M+16)& (0+255),1,b
  5049  005A60  D7F1               	goto	u9660
  5050  005A62                     l540:
  5051                           ;main.c: 2212: if(M._TURBO&&!RdPrt(21))
  5052  005A62  0100               	movlb	(_M+27) shr (0+8)
  5053  005A64  A385               	btfss	(_M+27)& (0+255),1,b
  5054  005A66  D008               	goto	l549
  5055  005A68  0E15               	movlw	21
  5056  005A6A  ECC4  F05B         	call	_RdPrt
  5057  005A6E  E204               	bc	l549
  5058                           ;main.c: 2213: {
  5059  005A70  0100               	movlb	(_M+43) shr (0+8)
  5060  005A72  6B95               	clrf	(_M+43)& (0+255),b
  5061                           ;main.c: 2215: M._RUSZ_CIAG=1;
  5062  005A74  8F7A               	bsf	(_M+16)& (0+255),7,b
  5063                           ;main.c: 2216: return;
  5064  005A76  0012               	return	
  5065  005A78                     l549:
  5066                           ;main.c: 2217: }
  5067  005A78  0E08               	movlw	8
  5068  005A7A  ECC4  F05B         	call	_RdPrt
  5069  005A7E  E305               	bnc	l550
  5070  005A80  C193  FFE8         	movff	_PWM+30,wreg
  5071  005A84  ECD4  F054         	call	_WritePWM
  5072  005A88  D004               	goto	l551
  5073  005A8A                     l550:
  5074                           ;main.c: 2219: else WritePWM(PWM.MDMOD);
  5075  005A8A  C17E  FFE8         	movff	_PWM+9,wreg
  5076  005A8E  ECD4  F054         	call	_WritePWM
  5077  005A92                     l551:
  5078                           ;main.c: 2221: if(RTS(2)<2) return;
  5079  005A92  0E02               	movlw	2
  5080  005A94  EC4D  F05C         	call	_RTS
  5081  005A98  6E00               	movwf	btemp,c
  5082  005A9A  0E02               	movlw	2
  5083  005A9C  5C00               	subwf	btemp,w,c
  5084  005A9E  A0D8               	btfss	status,0,c
  5085  005AA0  0012               	return	
  5086                           ;main.c: 2223: if(RTS(2)<7)
  5087  005AA2  0E02               	movlw	2
  5088  005AA4  EC4D  F05C         	call	_RTS
  5089  005AA8  6E00               	movwf	btemp,c
  5090  005AAA  0E07               	movlw	7
  5091  005AAC  5C00               	subwf	btemp,w,c
  5092  005AAE  E20B               	bc	l553
  5093                           ;main.c: 2224: {
  5094  005AB0  0E05               	movlw	5
  5095  005AB2  ECC4  F05B         	call	_RdPrt
  5096  005AB6  A0D8               	btfss	status,0,c
  5097  005AB8  0012               	return	
  5098                           ;main.c: 2226: {
  5099  005ABA  0E07               	movlw	7
  5100  005ABC  CFE8 F08D          	movff	wreg,_M+35
  5101                           ;main.c: 2228: StartRTS(2);
  5102  005AC0  0E02               	movlw	2
  5103  005AC2  EF35  F05C         	goto	_StartRTS
  5104                           ;main.c: 2229: }
  5105  005AC6                     l553:
  5106                           ;main.c: 2232: else
  5107  005AC6  D03B               	goto	_DecyzjaPLM	;wreg free
  5108                           ;main.c: 2235: return;
  5109  005AC8                     l556:
  5110                           ;main.c: 2236: }
  5111                           ;main.c: 2240: {
  5112  005AC8  0100               	movlb	(_M+27) shr (0+8)
  5113  005ACA  AF85               	btfss	(_M+27)& (0+255),7,b
  5114  005ACC  D003               	goto	l557
  5115                           ;main.c: 2242: {
  5116  005ACE  957A               	bcf	(_M+16)& (0+255),2,b
  5117                           ;main.c: 2244: M.ROZ=0;
  5118  005AD0  6B8D               	clrf	(_M+35)& (0+255),b
  5119                           ;main.c: 2245: return;
  5120  005AD2  0012               	return	
  5121  005AD4                     l557:
  5122                           ;main.c: 2246: }
  5123  005AD4  0100               	movlb	(_M+27) shr (0+8)
  5124  005AD6  A385               	btfss	(_M+27)& (0+255),1,b
  5125  005AD8  D008               	goto	l558
  5126  005ADA  0E15               	movlw	21
  5127  005ADC  ECC4  F05B         	call	_RdPrt
  5128  005AE0  E204               	bc	l558
  5129                           ;main.c: 2248: {
  5130  005AE2  0100               	movlb	(_M+43) shr (0+8)
  5131  005AE4  6B95               	clrf	(_M+43)& (0+255),b
  5132                           ;main.c: 2250: M._RUSZ_CIAG=1;
  5133  005AE6  8F7A               	bsf	(_M+16)& (0+255),7,b
  5134                           ;main.c: 2251: return;
  5135  005AE8  0012               	return	
  5136  005AEA                     l558:
  5137                           ;main.c: 2252: }
  5138  005AEA  0E05               	movlw	5
  5139  005AEC  ECC4  F05B         	call	_RdPrt
  5140  005AF0  A0D8               	btfss	status,0,c
  5141                           ;main.c: 2254: {
  5142  005AF2  D83C               	call	_DecyzjaPLM2	;wreg free
  5143                           ;main.c: 2257: }
  5144  005AF4  0E02               	movlw	2
  5145  005AF6  EC4D  F05C         	call	_RTS
  5146  005AFA  6E00               	movwf	btemp,c
  5147  005AFC  0E02               	movlw	2
  5148  005AFE  5C00               	subwf	btemp,w,c
  5149  005B00  A0D8               	btfss	status,0,c
  5150  005B02  0012               	return	
  5151                           ;main.c: 2259: M._ROZRUCH=0;
  5152  005B04  0100               	movlb	(_M+16) shr (0+8)
  5153  005B06  957A               	bcf	(_M+16)& (0+255),2,b
  5154                           ;main.c: 2260: M.ROZ=0;
  5155  005B08  6B8D               	clrf	(_M+35)& (0+255),b
  5156                           ;main.c: 2261: }
  5157  005B0A  0012               	return	
  5158  005B0C                     l507:
  5159  005B0C  C08D  FFE8         	movff	_M+35,wreg
  5160  005B10  0A00               	xorlw	0
  5161  005B12  E101 D6D1          	bz	l508
  5162  005B16  0A01               	xorlw	1
  5163  005B18  E101 D6DB          	bz	l511
  5164  005B1C  0A03               	xorlw	3
  5165  005B1E  E101 D705          	bz	l516
  5166  005B22  0A01               	xorlw	1
  5167  005B24  E101 D727          	bz	l527
  5168  005B28  0A07               	xorlw	7
  5169  005B2A  E101 D740          	bz	l531
  5170  005B2E  0A01               	xorlw	1
  5171  005B30  E101 D758          	bz	l535
  5172  005B34  0A03               	xorlw	3
  5173  005B36  E081               	bz	l539
  5174  005B38  0A01               	xorlw	1
  5175  005B3A  E0C6               	bz	l556
  5176  005B3C  0012               	return	
  5177                           ;main.c: 2263: }
  5178  005B3E                     __end_of_Rozruch:
  5179                           ;main.c: 2264: void DecyzjaPLM(void)
  5180                           ;main.c: 2265: {
  5181  005B3E                     _DecyzjaPLM:
  5182  000000                     
  5183                           ;main.c: 2266: if(M._OST_PL)
  5184  005B3E  0100               	movlb	(_M+27) shr (0+8)
  5185  005B40  A785               	btfss	(_M+27)& (0+255),3,b
  5186  005B42  D009               	goto	l562
  5187                           ;main.c: 2267: {
  5188  005B44  0E01               	movlw	1
  5189  005B46  CFE8 F08C          	movff	wreg,_M+34
  5190                           ;main.c: 2269: PrintErr(0x01,1);
  5191  005B4A  0100               	movlb	__Lparam shr (0+8)
  5192  005B4C  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5193  005B4E  EC83  F060         	call	_PrintErr
  5194                           ;main.c: 2270: ErrPTG();
  5195  005B52  EF11  F033         	goto	_ErrPTG	;wreg free
  5196                           ;main.c: 2271: }
  5197  005B56                     l562:
  5198                           ;main.c: 2272: else
  5199  005B56  0100               	movlb	(_M+17) shr (0+8)
  5200  005B58  817B               	bsf	(_M+17)& (0+255),0,b
  5201                           ;main.c: 2275: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5202  005B5A  EE00  F087         	lfsr	0,_M+29
  5203  005B5E  50EF               	movf	indf0,w,c
  5204  005B60  B4D8               	btfsc	status,2,c
  5205  005B62  837B               	bsf	(_M+17)& (0+255),1,b
  5206                           ;main.c: 2276: M._ROZRUCH=0;
  5207  005B64  0100               	movlb	(_M+16) shr (0+8)
  5208  005B66  957A               	bcf	(_M+16)& (0+255),2,b
  5209                           ;main.c: 2277: M.ROZ=0;
  5210  005B68  6B8D               	clrf	(_M+35)& (0+255),b
  5211                           ;main.c: 2278: }
  5212  005B6A  0012               	return	
  5213  005B6C                     __end_of_DecyzjaPLM:
  5214                           ;main.c: 2280: void DecyzjaPLM2(void)
  5215                           ;main.c: 2281: {
  5216  005B6C                     _DecyzjaPLM2:
  5217  000000                     
  5218                           ;main.c: 2282: if(M._TURBO)
  5219  005B6C  0100               	movlb	(_M+27) shr (0+8)
  5220  005B6E  A385               	btfss	(_M+27)& (0+255),1,b
  5221  005B70  D03A               	goto	l566
  5222                           ;main.c: 2283: {
  5223  005B72  A683               	btfss	3971,3,c	;volatile
  5224  005B74  D01B               	goto	l567
  5225                           ;main.c: 2285: {
  5226  005B76  BC80               	btfsc	3968,6,c	;volatile
  5227  005B78  AE80               	btfss	3968,7,c	;volatile
  5228  005B7A  0012               	return	
  5229                           ;main.c: 2288: {
  5230  005B7C  0100               	movlb	(_M+27) shr (0+8)
  5231  005B7E  A785               	btfss	(_M+27)& (0+255),3,b
  5232  005B80  D009               	goto	l569
  5233                           ;main.c: 2290: {
  5234  005B82  0E01               	movlw	1
  5235  005B84  CFE8 F08C          	movff	wreg,_M+34
  5236                           ;main.c: 2292: PrintErr(0x01,1);
  5237  005B88  0100               	movlb	__Lparam shr (0+8)
  5238  005B8A  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5239  005B8C  EC83  F060         	call	_PrintErr
  5240                           ;main.c: 2293: ErrPTG();
  5241  005B90  EF11  F033         	goto	_ErrPTG	;wreg free
  5242                           ;main.c: 2294: }
  5243  005B94                     l569:
  5244                           ;main.c: 2295: else
  5245  005B94  0100               	movlb	(_M+42) shr (0+8)
  5246  005B96  6B94               	clrf	(_M+42)& (0+255),b
  5247                           ;main.c: 2298: M._RUSZ_PLOMIEN=1;
  5248  005B98  817B               	bsf	(_M+17)& (0+255),0,b
  5249                           ;main.c: 2299: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5250  005B9A  EE00  F087         	lfsr	0,_M+29
  5251  005B9E  50EF               	movf	indf0,w,c
  5252  005BA0  B4D8               	btfsc	status,2,c
  5253  005BA2  837B               	bsf	(_M+17)& (0+255),1,b
  5254                           ;main.c: 2300: M._ROZRUCH=0;
  5255  005BA4  0100               	movlb	(_M+16) shr (0+8)
  5256  005BA6  957A               	bcf	(_M+16)& (0+255),2,b
  5257                           ;main.c: 2301: M.ROZ=0;
  5258  005BA8  6B8D               	clrf	(_M+35)& (0+255),b
  5259                           ;main.c: 2302: }
  5260  005BAA  0012               	return	
  5261  005BAC                     l567:
  5262                           ;main.c: 2305: else
  5263  005BAC  0E04               	movlw	4
  5264  005BAE  ECC4  F05B         	call	_RdPrt
  5265  005BB2  A0D8               	btfss	status,0,c
  5266  005BB4  0012               	return	
  5267                           ;main.c: 2308: {
  5268  005BB6  0100               	movlb	(_M+27) shr (0+8)
  5269  005BB8  A785               	btfss	(_M+27)& (0+255),3,b
  5270  005BBA  D009               	goto	l574
  5271                           ;main.c: 2310: {
  5272  005BBC  0E01               	movlw	1
  5273  005BBE  CFE8 F08C          	movff	wreg,_M+34
  5274                           ;main.c: 2312: PrintErr(0x01,1);
  5275  005BC2  0100               	movlb	__Lparam shr (0+8)
  5276  005BC4  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5277  005BC6  EC83  F060         	call	_PrintErr
  5278                           ;main.c: 2313: ErrPTG();
  5279  005BCA  EF11  F033         	goto	_ErrPTG	;wreg free
  5280                           ;main.c: 2314: }
  5281  005BCE                     l574:
  5282                           ;main.c: 2315: else
  5283  005BCE  0100               	movlb	(_M+42) shr (0+8)
  5284  005BD0  6B94               	clrf	(_M+42)& (0+255),b
  5285                           ;main.c: 2318: M._RUSZ_PLOMIEN=1;
  5286  005BD2  817B               	bsf	(_M+17)& (0+255),0,b
  5287                           ;main.c: 2319: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5288  005BD4  EE00  F087         	lfsr	0,_M+29
  5289  005BD8  50EF               	movf	indf0,w,c
  5290  005BDA  B4D8               	btfsc	status,2,c
  5291  005BDC  837B               	bsf	(_M+17)& (0+255),1,b
  5292                           ;main.c: 2320: M._ROZRUCH=0;
  5293  005BDE  0100               	movlb	(_M+16) shr (0+8)
  5294  005BE0  957A               	bcf	(_M+16)& (0+255),2,b
  5295                           ;main.c: 2321: M.ROZ=0;
  5296  005BE2  6B8D               	clrf	(_M+35)& (0+255),b
  5297                           ;main.c: 2322: }
  5298  005BE4  0012               	return	
  5299  005BE6                     l566:
  5300                           ;main.c: 2326: else
  5301  005BE6  B082               	btfsc	3970,0,c	;volatile
  5302  005BE8  AE80               	btfss	3968,7,c	;volatile
  5303  005BEA  0012               	return	
  5304                           ;main.c: 2330: {
  5305  005BEC  0100               	movlb	(_M+27) shr (0+8)
  5306  005BEE  A785               	btfss	(_M+27)& (0+255),3,b
  5307  005BF0  D009               	goto	l579
  5308                           ;main.c: 2332: {
  5309  005BF2  0E01               	movlw	1
  5310  005BF4  CFE8 F08C          	movff	wreg,_M+34
  5311                           ;main.c: 2334: PrintErr(0x01,1);
  5312  005BF8  0100               	movlb	__Lparam shr (0+8)
  5313  005BFA  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5314  005BFC  EC83  F060         	call	_PrintErr
  5315                           ;main.c: 2335: ErrPTG();
  5316  005C00  EF11  F033         	goto	_ErrPTG	;wreg free
  5317                           ;main.c: 2336: }
  5318  005C04                     l579:
  5319                           ;main.c: 2337: else
  5320  005C04  0100               	movlb	(_M+42) shr (0+8)
  5321  005C06  6B94               	clrf	(_M+42)& (0+255),b
  5322                           ;main.c: 2340: M._RUSZ_PLOMIEN=1;
  5323  005C08  817B               	bsf	(_M+17)& (0+255),0,b
  5324                           ;main.c: 2341: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5325  005C0A  EE00  F087         	lfsr	0,_M+29
  5326  005C0E  50EF               	movf	indf0,w,c
  5327  005C10  B4D8               	btfsc	status,2,c
  5328  005C12  837B               	bsf	(_M+17)& (0+255),1,b
  5329                           ;main.c: 2342: M._ROZRUCH=0;
  5330  005C14  0100               	movlb	(_M+16) shr (0+8)
  5331  005C16  957A               	bcf	(_M+16)& (0+255),2,b
  5332                           ;main.c: 2343: M.ROZ=0;
  5333  005C18  6B8D               	clrf	(_M+35)& (0+255),b
  5334                           ;main.c: 2344: }
  5335  005C1A  0012               	return	
  5336  005C1C                     __end_of_DecyzjaPLM2:
  5337                           ;main.c: 2351: void Wylacz(void)
  5338                           ;main.c: 2352: {
  5339  005C1C                     _Wylacz:
  5340  000000                     
  5341                           ;main.c: 2353: switch(DtKNF.tpkt)
  5342  005C1C  D165               	goto	l584
  5343  005C1E                     l586:
  5344                           ;main.c: 2356: case 2:
  5345  005C1E  D04A               	goto	l588
  5346  005C20                     l589:
  5347                           ;main.c: 2359: {
  5348                           ;main.c: 2361: {
  5349  005C20  0E01               	movlw	1
  5350  005C22  CFE8 F092          	movff	wreg,_M+40
  5351                           ;main.c: 2363: StartRTS(7);
  5352  005C26  0E07               	movlw	7
  5353  005C28  EC35  F05C         	call	_StartRTS
  5354  005C2C                     l590:
  5355                           ;main.c: 2364: }
  5356                           ;main.c: 2366: {
  5357  005C2C  0100               	movlb	(_M+27) shr (0+8)
  5358                           ;main.c: 2368: {
  5359  005C2E  0E07               	movlw	7
  5360  005C30  AB85               	btfss	(_M+27)& (0+255),5,b
  5361  005C32  D01C               	goto	L23
  5362  005C34  EC4D  F05C         	call	_RTS
  5363  005C38  6E00               	movwf	btemp,c
  5364  005C3A  0E14               	movlw	20
  5365  005C3C  5C00               	subwf	btemp,w,c
  5366  005C3E  E30A               	bnc	l592
  5367                           ;main.c: 2370: {
  5368  005C40  0101               	movlb	_DtCO shr (0+8)
  5369  005C42  B120               	btfsc	_DtCO& (0+255),0,b
  5370  005C44  D007               	goto	l592
  5371  005C46  0101               	movlb	(_DtCO+1) shr (0+8)
  5372  005C48  A121               	btfss	(_DtCO+1)& (0+255),0,b
  5373  005C4A  D004               	goto	l592
  5374                           ;main.c: 2372: {
  5375  005C4C  0E02               	movlw	2
  5376  005C4E  CFE8 F092          	movff	wreg,_M+40
  5377                           ;main.c: 2374: return;
  5378  005C52  0C02               	retlw	2
  5379  005C54                     l592:
  5380                           ;main.c: 2375: }
  5381  005C54  0E07               	movlw	7
  5382  005C56  EC4D  F05C         	call	_RTS
  5383  005C5A  6E00               	movwf	btemp,c
  5384  005C5C  0EB4               	movlw	180
  5385  005C5E  5C00               	subwf	btemp,w,c
  5386  005C60  A0D8               	btfss	status,0,c
  5387  005C62  0012               	return	
  5388                           ;main.c: 2378: M.WYL=2;
  5389  005C64  0E02               	movlw	2
  5390  005C66  CFE8 F092          	movff	wreg,_M+40
  5391                           ;main.c: 2379: return;
  5392  005C6A  0C02               	retlw	2
  5393                           ;main.c: 2381: else
  5394  005C6C                     L23:
  5395  005C6C  EC4D  F05C         	call	_RTS
  5396  005C70  6E00               	movwf	btemp,c
  5397  005C72  0EB4               	movlw	180
  5398  005C74  5C00               	subwf	btemp,w,c
  5399  005C76  A0D8               	btfss	status,0,c
  5400  005C78  0012               	return	
  5401                           ;main.c: 2384: M.WYL=2;
  5402  005C7A  0E02               	movlw	2
  5403  005C7C  CFE8 F092          	movff	wreg,_M+40
  5404  005C80                     l597:
  5405                           ;main.c: 2385: }
  5406                           ;main.c: 2388: {
  5407  005C80  0E0D               	movlw	13
  5408  005C82  ECC4  F05B         	call	_RdPrt
  5409  005C86  B0D8               	btfsc	status,0,c
  5410  005C88  0012               	return	
  5411                           ;main.c: 2390: if(!M._KCW_PMP)
  5412  005C8A  0100               	movlb	(_M+27) shr (0+8)
  5413  005C8C  BB85               	btfsc	(_M+27)& (0+255),5,b
  5414  005C8E  D006               	goto	l599
  5415                           ;main.c: 2391: {
  5416  005C90  0101               	movlb	_DtCO shr (0+8)
  5417  005C92  B120               	btfsc	_DtCO& (0+255),0,b
  5418  005C94  D003               	goto	l599
  5419  005C96  0101               	movlb	_DtCO shr (0+8)
  5420  005C98  A320               	btfss	_DtCO& (0+255),1,b
  5421  005C9A  0012               	return	
  5422  005C9C                     l599:
  5423                           ;main.c: 2393: }
  5424  005C9C  EE01  F0BC         	lfsr	0,_DtKNF+10
  5425  005CA0  50EF               	movf	indf0,w,c
  5426  005CA2  E103               	bnz	l601
  5427                           ;main.c: 2395: {
  5428  005CA4  0100               	movlb	(_M+17) shr (0+8)
  5429  005CA6  B57B               	btfsc	(_M+17)& (0+255),2,b
  5430  005CA8  0012               	return	
  5431  005CAA                     l601:
  5432                           ;main.c: 2397: }
  5433  005CAA  0100               	movlb	(_M+27) shr (0+8)
  5434  005CAC  9B85               	bcf	(_M+27)& (0+255),5,b
  5435                           ;main.c: 2399: M._WYLACZ=0;
  5436  005CAE  917A               	bcf	(_M+16)& (0+255),0,b
  5437                           ;main.c: 2400: M.WYL=0;
  5438  005CB0  6B92               	clrf	(_M+40)& (0+255),b
  5439                           ;main.c: 2401: }
  5440  005CB2  0012               	return	
  5441  005CB4                     l588:
  5442  005CB4  C092  FFE8         	movff	_M+40,wreg
  5443  005CB8  0A00               	xorlw	0
  5444  005CBA  E0B2               	bz	l589
  5445  005CBC  0A01               	xorlw	1
  5446  005CBE  E0B6               	bz	l590
  5447  005CC0  0A03               	xorlw	3
  5448  005CC2  E0DE               	bz	l597
  5449  005CC4  0012               	return	
  5450                           ;main.c: 2403: return;
  5451  005CC6                     l603:
  5452                           ;main.c: 2404: }
  5453                           ;main.c: 2406: {
  5454  005CC6  D057               	goto	l605
  5455  005CC8                     l606:
  5456                           ;main.c: 2408: {
  5457                           ;main.c: 2410: {
  5458  005CC8  0E01               	movlw	1
  5459  005CCA  CFE8 F092          	movff	wreg,_M+40
  5460                           ;main.c: 2412: StartRTS(7);
  5461  005CCE  0E07               	movlw	7
  5462  005CD0  EC35  F05C         	call	_StartRTS
  5463  005CD4                     l607:
  5464                           ;main.c: 2413: }
  5465                           ;main.c: 2415: {
  5466  005CD4  0100               	movlb	(_M+27) shr (0+8)
  5467                           ;main.c: 2417: {
  5468  005CD6  0E07               	movlw	7
  5469  005CD8  AF85               	btfss	(_M+27)& (0+255),7,b
  5470  005CDA  D01C               	goto	L24
  5471  005CDC  EC4D  F05C         	call	_RTS
  5472  005CE0  6E00               	movwf	btemp,c
  5473  005CE2  0E14               	movlw	20
  5474  005CE4  5C00               	subwf	btemp,w,c
  5475  005CE6  E30A               	bnc	l609
  5476                           ;main.c: 2419: {
  5477  005CE8  0101               	movlb	_DtCO shr (0+8)
  5478  005CEA  B120               	btfsc	_DtCO& (0+255),0,b
  5479  005CEC  D007               	goto	l609
  5480  005CEE  0101               	movlb	(_DtCO+1) shr (0+8)
  5481  005CF0  A121               	btfss	(_DtCO+1)& (0+255),0,b
  5482  005CF2  D004               	goto	l609
  5483                           ;main.c: 2421: {
  5484  005CF4  0E02               	movlw	2
  5485  005CF6  CFE8 F092          	movff	wreg,_M+40
  5486                           ;main.c: 2423: return;
  5487  005CFA  0C02               	retlw	2
  5488  005CFC                     l609:
  5489                           ;main.c: 2424: }
  5490  005CFC  0E07               	movlw	7
  5491  005CFE  EC4D  F05C         	call	_RTS
  5492  005D02  6E00               	movwf	btemp,c
  5493  005D04  0EB4               	movlw	180
  5494  005D06  5C00               	subwf	btemp,w,c
  5495  005D08  A0D8               	btfss	status,0,c
  5496  005D0A  0012               	return	
  5497                           ;main.c: 2427: M.WYL=2;
  5498  005D0C  0E02               	movlw	2
  5499  005D0E  CFE8 F092          	movff	wreg,_M+40
  5500                           ;main.c: 2428: return;
  5501  005D12  0C02               	retlw	2
  5502                           ;main.c: 2430: else
  5503  005D14                     L24:
  5504  005D14  EC4D  F05C         	call	_RTS
  5505  005D18  6E00               	movwf	btemp,c
  5506  005D1A  0EB4               	movlw	180
  5507  005D1C  5C00               	subwf	btemp,w,c
  5508  005D1E  A0D8               	btfss	status,0,c
  5509  005D20  0012               	return	
  5510                           ;main.c: 2433: M.WYL=2;
  5511  005D22  0E02               	movlw	2
  5512  005D24  CFE8 F092          	movff	wreg,_M+40
  5513  005D28                     l614:
  5514                           ;main.c: 2434: }
  5515                           ;main.c: 2437: {
  5516  005D28  0100               	movlb	(_M+27) shr (0+8)
  5517  005D2A  BF85               	btfsc	(_M+27)& (0+255),7,b
  5518  005D2C  D00C               	goto	l615
  5519                           ;main.c: 2439: {
  5520  005D2E  0E0D               	movlw	13
  5521  005D30  ECC4  F05B         	call	_RdPrt
  5522  005D34  B0D8               	btfsc	status,0,c
  5523  005D36  0012               	return	
  5524                           ;main.c: 2441: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  5525  005D38  0101               	movlb	_DtCO shr (0+8)
  5526  005D3A  B120               	btfsc	_DtCO& (0+255),0,b
  5527  005D3C  D00F               	goto	l618
  5528  005D3E  0101               	movlb	_DtCO shr (0+8)
  5529  005D40  A320               	btfss	_DtCO& (0+255),1,b
  5530  005D42  0012               	return	
  5531  005D44  D00B               	goto	l618
  5532                           ;main.c: 2442: }
  5533  005D46                     l615:
  5534                           ;main.c: 2443: else
  5535  005D46  0101               	movlb	_DtCO shr (0+8)
  5536  005D48  B120               	btfsc	_DtCO& (0+255),0,b
  5537  005D4A  D008               	goto	l618
  5538  005D4C  0101               	movlb	(_DtCO+1) shr (0+8)
  5539  005D4E  B121               	btfsc	(_DtCO+1)& (0+255),0,b
  5540  005D50  D005               	goto	l618
  5541  005D52  0100               	movlb	(_M+8) shr (0+8)
  5542  005D54  5172               	movf	(_M+8)& (0+255),w,b
  5543  005D56  1173               	iorwf	(_M+9)& (0+255),w,b
  5544  005D58  A4D8               	btfss	status,2,c
  5545  005D5A  0012               	return	
  5546  005D5C                     l618:
  5547                           ;main.c: 2446: }
  5548  005D5C  EE01  F0BC         	lfsr	0,_DtKNF+10
  5549  005D60  50EF               	movf	indf0,w,c
  5550  005D62  E103               	bnz	l620
  5551                           ;main.c: 2448: {
  5552  005D64  0100               	movlb	(_M+17) shr (0+8)
  5553  005D66  B57B               	btfsc	(_M+17)& (0+255),2,b
  5554  005D68  0012               	return	
  5555  005D6A                     l620:
  5556                           ;main.c: 2450: }
  5557  005D6A  0100               	movlb	(_M+16) shr (0+8)
  5558  005D6C  A37A               	btfss	(_M+16)& (0+255),1,b
  5559  005D6E  9483               	bcf	3971,2,c	;volatile
  5560                           ;main.c: 2452: M._WYLACZ=0;
  5561  005D70  917A               	bcf	(_M+16)& (0+255),0,b
  5562                           ;main.c: 2453: M.WYL=0;
  5563  005D72  6B92               	clrf	(_M+40)& (0+255),b
  5564                           ;main.c: 2454: }
  5565  005D74  0012               	return	
  5566  005D76                     l605:
  5567  005D76  C092  FFE8         	movff	_M+40,wreg
  5568  005D7A  0A00               	xorlw	0
  5569  005D7C  E0A5               	bz	l606
  5570  005D7E  0A01               	xorlw	1
  5571  005D80  E0A9               	bz	l607
  5572  005D82  0A03               	xorlw	3
  5573  005D84  E0D1               	bz	l614
  5574  005D86  0012               	return	
  5575                           ;main.c: 2456: return;
  5576  005D88                     l623:
  5577                           ;main.c: 2457: }
  5578                           ;main.c: 2459: {
  5579  005D88  D046               	goto	l625
  5580  005D8A                     l626:
  5581                           ;main.c: 2461: {
  5582                           ;main.c: 2463: {
  5583  005D8A  0E01               	movlw	1
  5584  005D8C  CFE8 F092          	movff	wreg,_M+40
  5585                           ;main.c: 2465: StartRTS(7);
  5586  005D90  0E07               	movlw	7
  5587  005D92  EC35  F05C         	call	_StartRTS
  5588  005D96                     l627:
  5589                           ;main.c: 2466: }
  5590                           ;main.c: 2468: {
  5591  005D96  0100               	movlb	(_M+27) shr (0+8)
  5592                           ;main.c: 2470: {
  5593  005D98  0E07               	movlw	7
  5594  005D9A  AF85               	btfss	(_M+27)& (0+255),7,b
  5595  005D9C  D011               	goto	L25
  5596  005D9E  EC4D  F05C         	call	_RTS
  5597  005DA2  6E00               	movwf	btemp,c
  5598  005DA4  0E3C               	movlw	60
  5599  005DA6  5C00               	subwf	btemp,w,c
  5600  005DA8  A0D8               	btfss	status,0,c
  5601  005DAA  0012               	return	
  5602                           ;main.c: 2472: if(!DtCO._err_CO)
  5603  005DAC  0101               	movlb	_DtCO shr (0+8)
  5604  005DAE  B120               	btfsc	_DtCO& (0+255),0,b
  5605  005DB0  D00E               	goto	L10
  5606                           ;main.c: 2473: {
  5607  005DB2  0101               	movlb	(_DtCO+1) shr (0+8)
  5608  005DB4  A121               	btfss	(_DtCO+1)& (0+255),0,b
  5609  005DB6  0012               	return	
  5610                           ;main.c: 2475: {
  5611  005DB8  0E02               	movlw	2
  5612  005DBA  CFE8 F092          	movff	wreg,_M+40
  5613                           ;main.c: 2477: }
  5614  005DBE  0C02               	retlw	2
  5615                           ;main.c: 2480: else
  5616                           ;main.c: 2483: }
  5617                           ;main.c: 2485: else
  5618  005DC0                     L25:
  5619  005DC0  EC4D  F05C         	call	_RTS
  5620  005DC4  6E00               	movwf	btemp,c
  5621  005DC6  0EB4               	movlw	180
  5622  005DC8  5C00               	subwf	btemp,w,c
  5623  005DCA  A0D8               	btfss	status,0,c
  5624  005DCC  0012               	return	
  5625  005DCE                     L10:
  5626                           ;main.c: 2488: M.WYL=2;
  5627  005DCE  0E02               	movlw	2
  5628  005DD0  CFE8 F092          	movff	wreg,_M+40
  5629  005DD4                     l635:
  5630                           ;main.c: 2489: }
  5631                           ;main.c: 2492: {
  5632  005DD4  0100               	movlb	(_M+27) shr (0+8)
  5633  005DD6  AF85               	btfss	(_M+27)& (0+255),7,b
  5634  005DD8  D006               	goto	l636
  5635                           ;main.c: 2494: {
  5636  005DDA  0E11               	movlw	17
  5637  005DDC  ECC4  F05B         	call	_RdPrt
  5638  005DE0  B0D8               	btfsc	status,0,c
  5639  005DE2  0012               	return	
  5640  005DE4  D00B               	goto	l638
  5641                           ;main.c: 2496: }
  5642  005DE6                     l636:
  5643                           ;main.c: 2497: else
  5644  005DE6  0E0D               	movlw	13
  5645  005DE8  ECC4  F05B         	call	_RdPrt
  5646  005DEC  B0D8               	btfsc	status,0,c
  5647  005DEE  0012               	return	
  5648                           ;main.c: 2500: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  5649  005DF0  0101               	movlb	_DtCO shr (0+8)
  5650  005DF2  B120               	btfsc	_DtCO& (0+255),0,b
  5651  005DF4  D003               	goto	l638
  5652  005DF6  0101               	movlb	_DtCO shr (0+8)
  5653  005DF8  A320               	btfss	_DtCO& (0+255),1,b
  5654  005DFA  0012               	return	
  5655  005DFC                     l638:
  5656                           ;main.c: 2501: }
  5657  005DFC  EE01  F0BC         	lfsr	0,_DtKNF+10
  5658  005E00  50EF               	movf	indf0,w,c
  5659  005E02  E103               	bnz	l641
  5660                           ;main.c: 2503: {
  5661  005E04  0100               	movlb	(_M+17) shr (0+8)
  5662  005E06  B57B               	btfsc	(_M+17)& (0+255),2,b
  5663  005E08  0012               	return	
  5664  005E0A                     l641:
  5665                           ;main.c: 2505: }
  5666  005E0A  0100               	movlb	(_M+16) shr (0+8)
  5667  005E0C  A37A               	btfss	(_M+16)& (0+255),1,b
  5668                           ;main.c: 2507: {
  5669  005E0E  9483               	bcf	3971,2,c	;volatile
  5670                           ;main.c: 2509: }
  5671  005E10  917A               	bcf	(_M+16)& (0+255),0,b
  5672                           ;main.c: 2511: M.WYL=0;
  5673  005E12  6B92               	clrf	(_M+40)& (0+255),b
  5674                           ;main.c: 2512: }
  5675  005E14  0012               	return	
  5676  005E16                     l625:
  5677  005E16  C092  FFE8         	movff	_M+40,wreg
  5678  005E1A  0A00               	xorlw	0
  5679  005E1C  E0B6               	bz	l626
  5680  005E1E  0A01               	xorlw	1
  5681  005E20  E0BA               	bz	l627
  5682  005E22  0A03               	xorlw	3
  5683  005E24  E0D7               	bz	l635
  5684  005E26  0012               	return	
  5685                           ;main.c: 2514: return;
  5686                           ;main.c: 2515: }
  5687                           ;main.c: 2517: {
  5688  005E28                     l647:
  5689                           ;main.c: 2519: {
  5690                           ;main.c: 2521: {
  5691  005E28  0E01               	movlw	1
  5692  005E2A  CFE8 F092          	movff	wreg,_M+40
  5693                           ;main.c: 2523: StartRTS(7);
  5694  005E2E  0E07               	movlw	7
  5695  005E30  EC35  F05C         	call	_StartRTS
  5696  005E34                     l648:
  5697                           ;main.c: 2524: }
  5698                           ;main.c: 2526: {
  5699  005E34  0100               	movlb	(_M+27) shr (0+8)
  5700                           ;main.c: 2528: {
  5701  005E36  0E07               	movlw	7
  5702  005E38  AF85               	btfss	(_M+27)& (0+255),7,b
  5703  005E3A  D01C               	goto	L26
  5704  005E3C  EC4D  F05C         	call	_RTS
  5705  005E40  6E00               	movwf	btemp,c
  5706  005E42  0E14               	movlw	20
  5707  005E44  5C00               	subwf	btemp,w,c
  5708  005E46  E30A               	bnc	l650
  5709                           ;main.c: 2530: {
  5710  005E48  0101               	movlb	_DtCO shr (0+8)
  5711  005E4A  B120               	btfsc	_DtCO& (0+255),0,b
  5712  005E4C  D007               	goto	l650
  5713  005E4E  0101               	movlb	(_DtCO+1) shr (0+8)
  5714  005E50  A121               	btfss	(_DtCO+1)& (0+255),0,b
  5715  005E52  D004               	goto	l650
  5716                           ;main.c: 2532: {
  5717  005E54  0E02               	movlw	2
  5718  005E56  CFE8 F092          	movff	wreg,_M+40
  5719                           ;main.c: 2534: return;
  5720  005E5A  0C02               	retlw	2
  5721  005E5C                     l650:
  5722                           ;main.c: 2535: }
  5723  005E5C  0E07               	movlw	7
  5724  005E5E  EC4D  F05C         	call	_RTS
  5725  005E62  6E00               	movwf	btemp,c
  5726  005E64  0EB4               	movlw	180
  5727  005E66  5C00               	subwf	btemp,w,c
  5728  005E68  A0D8               	btfss	status,0,c
  5729  005E6A  0012               	return	
  5730                           ;main.c: 2538: M.WYL=2;
  5731  005E6C  0E02               	movlw	2
  5732  005E6E  CFE8 F092          	movff	wreg,_M+40
  5733                           ;main.c: 2539: return;
  5734  005E72  0C02               	retlw	2
  5735                           ;main.c: 2541: else
  5736  005E74                     L26:
  5737  005E74  EC4D  F05C         	call	_RTS
  5738  005E78  6E00               	movwf	btemp,c
  5739  005E7A  0EB4               	movlw	180
  5740  005E7C  5C00               	subwf	btemp,w,c
  5741  005E7E  A0D8               	btfss	status,0,c
  5742  005E80  0012               	return	
  5743                           ;main.c: 2544: M.WYL=2;
  5744  005E82  0E02               	movlw	2
  5745  005E84  CFE8 F092          	movff	wreg,_M+40
  5746  005E88                     l655:
  5747                           ;main.c: 2545: }
  5748                           ;main.c: 2548: {
  5749  005E88  0100               	movlb	(_M+27) shr (0+8)
  5750  005E8A  BF85               	btfsc	(_M+27)& (0+255),7,b
  5751  005E8C  D00C               	goto	l656
  5752                           ;main.c: 2550: {
  5753  005E8E  0E0D               	movlw	13
  5754  005E90  ECC4  F05B         	call	_RdPrt
  5755  005E94  B0D8               	btfsc	status,0,c
  5756  005E96  0012               	return	
  5757                           ;main.c: 2552: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  5758  005E98  0101               	movlb	_DtCO shr (0+8)
  5759  005E9A  B120               	btfsc	_DtCO& (0+255),0,b
  5760  005E9C  D00F               	goto	l659
  5761  005E9E  0101               	movlb	_DtCO shr (0+8)
  5762  005EA0  A320               	btfss	_DtCO& (0+255),1,b
  5763  005EA2  0012               	return	
  5764  005EA4  D00B               	goto	l659
  5765                           ;main.c: 2553: }
  5766  005EA6                     l656:
  5767                           ;main.c: 2554: else
  5768  005EA6  0101               	movlb	_DtCO shr (0+8)
  5769  005EA8  B120               	btfsc	_DtCO& (0+255),0,b
  5770  005EAA  D008               	goto	l659
  5771  005EAC  0101               	movlb	(_DtCO+1) shr (0+8)
  5772  005EAE  B121               	btfsc	(_DtCO+1)& (0+255),0,b
  5773  005EB0  D005               	goto	l659
  5774  005EB2  0100               	movlb	(_M+8) shr (0+8)
  5775  005EB4  5172               	movf	(_M+8)& (0+255),w,b
  5776  005EB6  1173               	iorwf	(_M+9)& (0+255),w,b
  5777  005EB8  A4D8               	btfss	status,2,c
  5778  005EBA  0012               	return	
  5779  005EBC                     l659:
  5780                           ;main.c: 2557: }
  5781  005EBC  EE01  F0BC         	lfsr	0,_DtKNF+10
  5782  005EC0  50EF               	movf	indf0,w,c
  5783  005EC2  E103               	bnz	l661
  5784                           ;main.c: 2559: {
  5785  005EC4  0100               	movlb	(_M+17) shr (0+8)
  5786  005EC6  B57B               	btfsc	(_M+17)& (0+255),2,b
  5787  005EC8  0012               	return	
  5788  005ECA                     l661:
  5789                           ;main.c: 2561: }
  5790  005ECA  0100               	movlb	(_M+16) shr (0+8)
  5791  005ECC  A37A               	btfss	(_M+16)& (0+255),1,b
  5792  005ECE  9483               	bcf	3971,2,c	;volatile
  5793                           ;main.c: 2563: M._WYLACZ=0;
  5794  005ED0  917A               	bcf	(_M+16)& (0+255),0,b
  5795                           ;main.c: 2564: M.WYL=0;
  5796  005ED2  6B92               	clrf	(_M+40)& (0+255),b
  5797                           ;main.c: 2565: }
  5798  005ED4  0012               	return	
  5799  005ED6                     l646:
  5800  005ED6  C092  FFE8         	movff	_M+40,wreg
  5801  005EDA  0A00               	xorlw	0
  5802  005EDC  E0A5               	bz	l647
  5803  005EDE  0A01               	xorlw	1
  5804  005EE0  E0A9               	bz	l648
  5805  005EE2  0A03               	xorlw	3
  5806  005EE4  E0D1               	bz	l655
  5807  005EE6  0012               	return	
  5808                           ;main.c: 2567: return;
  5809  005EE8                     l584:
  5810  005EE8  C1B9  FFE8         	movff	_DtKNF+7,wreg
  5811  005EEC  0A00               	xorlw	0
  5812  005EEE  E101 D74B          	bz	l623
  5813  005EF2  0A01               	xorlw	1
  5814  005EF4  E101 D693          	bz	l586
  5815  005EF8  0A03               	xorlw	3
  5816  005EFA  E101 D690          	bz	l586
  5817  005EFE  0A01               	xorlw	1
  5818  005F00  E101 D6E1          	bz	l603
  5819  005F04  D7E8               	goto	l646
  5820                           ;main.c: 2570: }
  5821  005F06                     __end_of_Wylacz:
  5822                           ;main.c: 2574: void VWybieg(void)
  5823                           ;main.c: 2575: {
  5824  005F06                     _VWybieg:
  5825  000000                     
  5826                           ;main.c: 2576: switch(M.VWB)
  5827  005F06  D02C               	goto	l666
  5828  005F08                     l667:
  5829                           ;main.c: 2577: {
  5830                           ;main.c: 2579: {
  5831  005F08  0E01               	movlw	1
  5832  005F0A  CFE8 F098          	movff	wreg,_M+46
  5833                           ;main.c: 2581: M._DE_VNT=1;
  5834  005F0E  0100               	movlb	(_M+27) shr (0+8)
  5835  005F10  8D85               	bsf	(_M+27)& (0+255),6,b
  5836                           ;main.c: 2582: StartRTS(6);
  5837  005F12  0E06               	movlw	6
  5838  005F14  EC35  F05C         	call	_StartRTS
  5839  005F18                     l668:
  5840                           ;main.c: 2583: }
  5841                           ;main.c: 2585: {
  5842  005F18  0E06               	movlw	6
  5843  005F1A  EC4D  F05C         	call	_RTS
  5844  005F1E  6E00               	movwf	btemp,c
  5845  005F20  0E02               	movlw	2
  5846  005F22  5C00               	subwf	btemp,w,c
  5847  005F24  E302               	bnc	l669
  5848  005F26  0100               	movlb	(_M+27) shr (0+8)
  5849  005F28  9D85               	bcf	(_M+27)& (0+255),6,b
  5850  005F2A                     l669:
  5851                           ;main.c: 2587: if(RTS(6)<15) return;
  5852  005F2A  0E06               	movlw	6
  5853  005F2C  EC4D  F05C         	call	_RTS
  5854  005F30  6E00               	movwf	btemp,c
  5855  005F32  0E0F               	movlw	15
  5856  005F34  5C00               	subwf	btemp,w,c
  5857  005F36  A0D8               	btfss	status,0,c
  5858  005F38  0012               	return	
  5859                           ;main.c: 2589: RD3=0;
  5860  005F3A  9683               	bcf	3971,3,c	;volatile
  5861                           ;main.c: 2590: M._DE_VNT=1;
  5862  005F3C  0100               	movlb	(_M+27) shr (0+8)
  5863  005F3E  8D85               	bsf	(_M+27)& (0+255),6,b
  5864                           ;main.c: 2591: M.VWB=2;
  5865  005F40  0E02               	movlw	2
  5866  005F42  CFE8 F098          	movff	wreg,_M+46
  5867  005F46                     l671:
  5868                           ;main.c: 2592: }
  5869                           ;main.c: 2594: {
  5870  005F46  0E06               	movlw	6
  5871  005F48  EC4D  F05C         	call	_RTS
  5872  005F4C  6E00               	movwf	btemp,c
  5873  005F4E  0E11               	movlw	17
  5874  005F50  5C00               	subwf	btemp,w,c
  5875  005F52  A0D8               	btfss	status,0,c
  5876  005F54  0012               	return	
  5877                           ;main.c: 2596: M._DE_VNT=0;
  5878  005F56  0100               	movlb	(_M+27) shr (0+8)
  5879  005F58  9D85               	bcf	(_M+27)& (0+255),6,b
  5880                           ;main.c: 2597: M._VWYBIEG=0;
  5881  005F5A  9D7A               	bcf	(_M+16)& (0+255),6,b
  5882                           ;main.c: 2598: M.VWB=0;
  5883  005F5C  6B98               	clrf	(_M+46)& (0+255),b
  5884                           ;main.c: 2599: }
  5885  005F5E  0012               	return	
  5886  005F60                     l666:
  5887  005F60  C098  FFE8         	movff	_M+46,wreg
  5888  005F64  0A00               	xorlw	0
  5889  005F66  E0D0               	bz	l667
  5890  005F68  0A01               	xorlw	1
  5891  005F6A  E0D6               	bz	l668
  5892  005F6C  0A03               	xorlw	3
  5893  005F6E  E0EB               	bz	l671
  5894  005F70  0012               	return	
  5895                           ;main.c: 2601: }
  5896  005F72                     __end_of_VWybieg:
  5897                           ;main.c: 2605: void DetekcjaPrzeplywuWG(void)
  5898                           ;main.c: 2606: {
  5899  005F72                     _DetekcjaPrzeplywuWG:
  5900  000000                     
  5901                           ;main.c: 2607: unsigned char pmp,prz;
  5902  005F72  0E00               	movlw	0
  5903  005F74  B483               	btfsc	3971,2,c	;volatile
  5904  005F76  0E01               	movlw	1
  5905  005F78  0100               	movlb	__Lparam shr (0+8)
  5906  005F7A  6FEA               	movwf	?a_DetekcjaPrzeplywuWG^(__Lparam& (0+6528
      +                          0)),b
  5907                           ;main.c: 2610: prz=(RdPrt(1))?1:0;
  5908  005F7C  0E01               	movlw	1
  5909  005F7E  ECC4  F05B         	call	_RdPrt
  5910  005F82  0E00               	movlw	0
  5911  005F84  B0D8               	btfsc	status,0,c
  5912  005F86  0E01               	movlw	1
  5913  005F88  0100               	movlb	__Lparam shr (0+8)
  5914  005F8A  6FEB               	movwf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+
      +                          65280)),b
  5915                           ;main.c: 2612: if(pmp)
  5916  005F8C  51EA               	movf	?a_DetekcjaPrzeplywuWG^(__Lparam& (0+65280
      +                          )),w
  5917  005F8E  E031               	bz	l674
  5918                           ;main.c: 2613: {
  5919  005F90  51EB               	movf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+6
      +                          5280)),w
  5920  005F92  E106               	bnz	l675
  5921  005F94  0100               	movlb	(_M+28) shr (0+8)
  5922  005F96  B586               	btfsc	(_M+28)& (0+255),2,b
  5923  005F98  D003               	goto	l675
  5924                           ;main.c: 2615: {
  5925  005F9A  0100               	movlb	(_M+28) shr (0+8)
  5926  005F9C  8586               	bsf	(_M+28)& (0+255),2,b
  5927                           ;main.c: 2617: M.DPR=0;
  5928  005F9E  6B9C               	clrf	(_M+50)& (0+255),b
  5929  005FA0                     l675:
  5930                           ;main.c: 2618: }
  5931  005FA0  0100               	movlb	(_M+28) shr (0+8)
  5932  005FA2  A586               	btfss	(_M+28)& (0+255),2,b
  5933  005FA4  0012               	return	
  5934  005FA6  D01E               	goto	l678
  5935                           ;main.c: 2620: {
  5936  005FA8                     l679:
  5937                           ;main.c: 2622: {
  5938                           ;main.c: 2624: {
  5939  005FA8  0E0D               	movlw	13
  5940  005FAA  EC35  F05C         	call	_StartRTS
  5941                           ;main.c: 2626: M.DPR=1;
  5942  005FAE  0E01               	movlw	1
  5943  005FB0  CFE8 F09C          	movff	wreg,_M+50
  5944  005FB4                     l680:
  5945                           ;main.c: 2627: }
  5946                           ;main.c: 2629: {
  5947  005FB4  0100               	movlb	__Lparam shr (0+8)
  5948  005FB6  51EB               	movf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+6
      +                          5280)),w
  5949  005FB8  E004               	bz	l681
  5950                           ;main.c: 2631: {
  5951  005FBA  0100               	movlb	(_M+28) shr (0+8)
  5952  005FBC  9586               	bcf	(_M+28)& (0+255),2,b
  5953                           ;main.c: 2633: M.DPR=0;
  5954  005FBE  6B9C               	clrf	(_M+50)& (0+255),b
  5955                           ;main.c: 2634: return;
  5956  005FC0  0012               	return	
  5957  005FC2                     l681:
  5958                           ;main.c: 2635: }
  5959  005FC2  0E0D               	movlw	13
  5960  005FC4  EC4D  F05C         	call	_RTS
  5961  005FC8  6E00               	movwf	btemp,c
  5962  005FCA  0E03               	movlw	3
  5963  005FCC  5C00               	subwf	btemp,w,c
  5964  005FCE  A0D8               	btfss	status,0,c
  5965  005FD0  0012               	return	
  5966                           ;main.c: 2637: if(!M._RUSZ_POMPE)
  5967  005FD2  0100               	movlb	(_M+17) shr (0+8)
  5968  005FD4  B57B               	btfsc	(_M+17)& (0+255),2,b
  5969  005FD6  D002               	goto	l683
  5970                           ;main.c: 2638: {
  5971  005FD8  6B93               	clrf	(_M+41)& (0+255),b
  5972                           ;main.c: 2640: M._RUSZ_POMPE=1;
  5973  005FDA  857B               	bsf	(_M+17)& (0+255),2,b
  5974  005FDC                     l683:
  5975                           ;main.c: 2641: }
  5976  005FDC  0100               	movlb	(_M+28) shr (0+8)
  5977  005FDE  9586               	bcf	(_M+28)& (0+255),2,b
  5978                           ;main.c: 2643: M.DPR=0;
  5979  005FE0  6B9C               	clrf	(_M+50)& (0+255),b
  5980                           ;main.c: 2644: }
  5981  005FE2  0012               	return	
  5982  005FE4                     l678:
  5983  005FE4  C09C  FFE8         	movff	_M+50,wreg
  5984  005FE8  0A00               	xorlw	0
  5985  005FEA  E0DE               	bz	l679
  5986  005FEC  0A01               	xorlw	1
  5987  005FEE  E0E2               	bz	l680
  5988  005FF0  0012               	return	
  5989                           ;main.c: 2646: }
  5990  005FF2                     l674:
  5991                           ;main.c: 2648: else
  5992  005FF2  0100               	movlb	(_M+28) shr (0+8)
  5993  005FF4  9586               	bcf	(_M+28)& (0+255),2,b
  5994                           ;main.c: 2651: M.DPR=0;
  5995  005FF6  6B9C               	clrf	(_M+50)& (0+255),b
  5996                           ;main.c: 2652: }
  5997  005FF8  0012               	return	
  5998  005FFA                     __end_of_DetekcjaPrzeplywuWG:
  5999                           ;main.c: 2657: void OczekujNaPrzeplywWG(void)
  6000                           ;main.c: 2658: {
  6001  005FFA                     _OczekujNaPrzeplywWG:
  6002  000000                     
  6003                           ;main.c: 2659: unsigned char pmp,prz;
  6004  005FFA  0E00               	movlw	0
  6005  005FFC  B483               	btfsc	3971,2,c	;volatile
  6006  005FFE  0E01               	movlw	1
  6007  006000  0100               	movlb	__Lparam shr (0+8)
  6008  006002  6FEA               	movwf	?a_OczekujNaPrzeplywWG^(__Lparam& (0+6528
      +                          0)),b
  6009                           ;main.c: 2662: prz=(RdPrt(1))?1:0;
  6010  006004  0E01               	movlw	1
  6011  006006  ECC4  F05B         	call	_RdPrt
  6012  00600A  0E00               	movlw	0
  6013  00600C  B0D8               	btfsc	status,0,c
  6014  00600E  0E01               	movlw	1
  6015  006010  0100               	movlb	__Lparam shr (0+8)
  6016  006012  6FEB               	movwf	(?a_OczekujNaPrzeplywWG+1)^(__Lparam& (0+
      +                          65280)),b
  6017                           ;main.c: 2664: switch(M.RPR)
  6018  006014  D026               	goto	l687
  6019  006016                     l688:
  6020                           ;main.c: 2665: {
  6021                           ;main.c: 2667: {
  6022  006016  0E01               	movlw	1
  6023  006018  CFE8 F093          	movff	wreg,_M+41
  6024                           ;main.c: 2669: M._prb_PRZ=1;
  6025  00601C  0100               	movlb	(_M+28) shr (0+8)
  6026  00601E  8386               	bsf	(_M+28)& (0+255),1,b
  6027                           ;main.c: 2670: StartRTS(14);
  6028  006020  0E0E               	movlw	14
  6029  006022  EC35  F05C         	call	_StartRTS
  6030  006026                     l689:
  6031                           ;main.c: 2671: }
  6032                           ;main.c: 2673: {
  6033  006026  0100               	movlb	__Lparam shr (0+8)
  6034  006028  51EB               	movf	(?a_OczekujNaPrzeplywWG+1)^(__Lparam& (0+6
      +                          5280)),w
  6035  00602A  E007               	bz	l690
  6036  00602C  51EA               	movf	?a_OczekujNaPrzeplywWG^(__Lparam& (0+65280
      +                          )),w
  6037  00602E  E005               	bz	l690
  6038                           ;main.c: 2675: {
  6039  006030  0100               	movlb	(_M+41) shr (0+8)
  6040  006032  6B93               	clrf	(_M+41)& (0+255),b
  6041                           ;main.c: 2677: M._RUSZ_POMPE=0;
  6042  006034  957B               	bcf	(_M+17)& (0+255),2,b
  6043                           ;main.c: 2678: M._prb_PRZ=0;
  6044  006036  9386               	bcf	(_M+28)& (0+255),1,b
  6045                           ;main.c: 2679: return;
  6046  006038  0012               	return	
  6047  00603A                     l690:
  6048                           ;main.c: 2680: }
  6049  00603A  0E0E               	movlw	14
  6050  00603C  EC4D  F05C         	call	_RTS
  6051  006040  6E00               	movwf	btemp,c
  6052  006042  0EF0               	movlw	240
  6053  006044  5C00               	subwf	btemp,w,c
  6054  006046  A0D8               	btfss	status,0,c
  6055  006048  0012               	return	
  6056                           ;main.c: 2682: M._RUSZ_POMPE=0;
  6057  00604A  0100               	movlb	(_M+17) shr (0+8)
  6058  00604C  957B               	bcf	(_M+17)& (0+255),2,b
  6059                           ;main.c: 2683: M.ERR_BTY=0x05;
  6060  00604E  0E05               	movlw	5
  6061  006050  CFE8 F08C          	movff	wreg,_M+34
  6062                           ;main.c: 2684: PrintErr(0x05,1);
  6063  006054  0E01               	movlw	1
  6064  006056  0100               	movlb	__Lparam shr (0+8)
  6065  006058  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  6066  00605A  0E05               	movlw	5
  6067  00605C  EC83  F060         	call	_PrintErr
  6068                           ;main.c: 2685: ErrPTG();
  6069  006060  D2E0               	goto	_ErrPTG	;wreg free
  6070                           ;main.c: 2686: }
  6071  006062                     l687:
  6072  006062  C093  FFE8         	movff	_M+41,wreg
  6073  006066  0A00               	xorlw	0
  6074  006068  E0D6               	bz	l688
  6075  00606A  0A01               	xorlw	1
  6076  00606C  E0DC               	bz	l689
  6077  00606E  0012               	return	
  6078                           ;main.c: 2688: }
  6079  006070                     __end_of_OczekujNaPrzeplywWG:
  6080                           ;main.c: 2692: void ZmienKCOKCW(void)
  6081                           ;main.c: 2693: {
  6082  006070                     _ZmienKCOKCW:
  6083  000000                     
  6084                           ;main.c: 2694: switch(DtKNF.tpkt)
  6085  006070  D086               	goto	l694
  6086  006072                     l696:
  6087                           ;main.c: 2697: case 2:
  6088  006072  D013               	goto	l698
  6089  006074                     l699:
  6090                           ;main.c: 2700: {
  6091                           ;main.c: 2702: {
  6092  006074  7483               	btg	3971,2,c	;volatile
  6093                           ;main.c: 2704: M.ZKP=1;
  6094  006076  0E01               	movlw	1
  6095  006078  CFE8 F097          	movff	wreg,_M+45
  6096                           ;main.c: 2705: StartRTdS(2);
  6097  00607C  0E02               	movlw	2
  6098  00607E  EC17  F05C         	call	_StartRTdS
  6099  006082                     l700:
  6100                           ;main.c: 2706: }
  6101                           ;main.c: 2708: {
  6102  006082  0E02               	movlw	2
  6103  006084  EC29  F05C         	call	_RTdS
  6104  006088  6E00               	movwf	btemp,c
  6105  00608A  0E05               	movlw	5
  6106  00608C  5C00               	subwf	btemp,w,c
  6107  00608E  A0D8               	btfss	status,0,c
  6108  006090  0012               	return	
  6109                           ;main.c: 2710: M._ZMKCOCW=0;
  6110  006092  0100               	movlb	(_M+16) shr (0+8)
  6111  006094  937A               	bcf	(_M+16)& (0+255),1,b
  6112                           ;main.c: 2711: M.ZKP=0;
  6113  006096  6B97               	clrf	(_M+45)& (0+255),b
  6114                           ;main.c: 2712: }
  6115  006098  0012               	return	
  6116  00609A                     l698:
  6117  00609A  C097  FFE8         	movff	_M+45,wreg
  6118  00609E  0A00               	xorlw	0
  6119  0060A0  E0E9               	bz	l699
  6120  0060A2  0A01               	xorlw	1
  6121  0060A4  E0EE               	bz	l700
  6122  0060A6  0012               	return	
  6123                           ;main.c: 2714: return;
  6124  0060A8                     l703:
  6125                           ;main.c: 2717: case 3:
  6126  0060A8  D02C               	goto	l705
  6127  0060AA                     l706:
  6128                           ;main.c: 2720: {
  6129                           ;main.c: 2722: {
  6130  0060AA  0E01               	movlw	1
  6131  0060AC  CFE8 F097          	movff	wreg,_M+45
  6132                           ;main.c: 2724: RD2=0;
  6133  0060B0  9483               	bcf	3971,2,c	;volatile
  6134                           ;main.c: 2725: StartRTdS(2);
  6135  0060B2  0E02               	movlw	2
  6136  0060B4  EC17  F05C         	call	_StartRTdS
  6137  0060B8                     l707:
  6138                           ;main.c: 2726: }
  6139                           ;main.c: 2728: {
  6140  0060B8  0E02               	movlw	2
  6141  0060BA  EC29  F05C         	call	_RTdS
  6142  0060BE  6E00               	movwf	btemp,c
  6143  0060C0  0E05               	movlw	5
  6144  0060C2  5C00               	subwf	btemp,w,c
  6145  0060C4  A0D8               	btfss	status,0,c
  6146  0060C6  0012               	return	
  6147                           ;main.c: 2730: RD1=!RD1;
  6148  0060C8  7283               	btg	3971,1,c	;volatile
  6149                           ;main.c: 2731: M.ZKP=2;
  6150  0060CA  0E02               	movlw	2
  6151  0060CC  CFE8 F097          	movff	wreg,_M+45
  6152  0060D0                     l709:
  6153                           ;main.c: 2732: }
  6154                           ;main.c: 2734: {
  6155  0060D0  0E02               	movlw	2
  6156  0060D2  EC29  F05C         	call	_RTdS
  6157  0060D6  6E00               	movwf	btemp,c
  6158  0060D8  0E0A               	movlw	10
  6159  0060DA  5C00               	subwf	btemp,w,c
  6160  0060DC  A0D8               	btfss	status,0,c
  6161  0060DE  0012               	return	
  6162                           ;main.c: 2736: M._ZMKCOCW=0;
  6163  0060E0  0100               	movlb	(_M+16) shr (0+8)
  6164  0060E2  937A               	bcf	(_M+16)& (0+255),1,b
  6165                           ;main.c: 2737: M.ZKP=0;
  6166  0060E4  6B97               	clrf	(_M+45)& (0+255),b
  6167                           ;main.c: 2740: if(M._ROZRUCH||RD0||M._WYLACZ) RD
      +                          2=1;
  6168  0060E6  A57A               	btfss	(_M+16)& (0+255),2,b
  6169  0060E8  B083               	btfsc	3971,0,c	;volatile
  6170  0060EA  D001               	goto	u10860
  6171  0060EC  B17A               	btfsc	(_M+16)& (0+255),0,b
  6172  0060EE                     u10860:
  6173  0060EE  8483               	bsf	3971,2,c	;volatile
  6174                           ;main.c: 2741: if(DtKNF.robg==0)
  6175  0060F0  EE01  F0BC         	lfsr	0,_DtKNF+10
  6176  0060F4  50EF               	movf	indf0,w,c
  6177  0060F6  A4D8               	btfss	status,2,c
  6178  0060F8  0012               	return	
  6179                           ;main.c: 2742: {
  6180  0060FA  0100               	movlb	(_M+17) shr (0+8)
  6181  0060FC  B57B               	btfsc	(_M+17)& (0+255),2,b
  6182  0060FE  8483               	bsf	3971,2,c	;volatile
  6183                           ;main.c: 2744: }
  6184  006100  0012               	return	
  6185  006102                     l705:
  6186  006102  C097  FFE8         	movff	_M+45,wreg
  6187  006106  0A00               	xorlw	0
  6188  006108  E0D0               	bz	l706
  6189  00610A  0A01               	xorlw	1
  6190  00610C  E0D5               	bz	l707
  6191  00610E  0A03               	xorlw	3
  6192  006110  E0DF               	bz	l709
  6193  006112  0012               	return	
  6194                           ;main.c: 2747: return;
  6195                           ;main.c: 2748: }
  6196                           ;main.c: 2750: {
  6197  006114                     l717:
  6198                           ;main.c: 2752: {
  6199                           ;main.c: 2754: {
  6200  006114  0E01               	movlw	1
  6201  006116  CFE8 F097          	movff	wreg,_M+45
  6202                           ;main.c: 2756: RD2=0;
  6203  00611A  9483               	bcf	3971,2,c	;volatile
  6204                           ;main.c: 2757: StartRTdS(2);
  6205  00611C  0E02               	movlw	2
  6206  00611E  EC17  F05C         	call	_StartRTdS
  6207  006122                     l718:
  6208                           ;main.c: 2758: }
  6209                           ;main.c: 2760: {
  6210  006122  0E02               	movlw	2
  6211  006124  EC29  F05C         	call	_RTdS
  6212  006128  6E00               	movwf	btemp,c
  6213  00612A  0E05               	movlw	5
  6214  00612C  5C00               	subwf	btemp,w,c
  6215  00612E  A0D8               	btfss	status,0,c
  6216  006130  0012               	return	
  6217                           ;main.c: 2762: RD1=!RD1;
  6218  006132  7283               	btg	3971,1,c	;volatile
  6219                           ;main.c: 2763: M.ZKP=2;
  6220  006134  0E02               	movlw	2
  6221  006136  CFE8 F097          	movff	wreg,_M+45
  6222  00613A                     l720:
  6223                           ;main.c: 2764: }
  6224                           ;main.c: 2766: {
  6225  00613A  0E02               	movlw	2
  6226  00613C  EC29  F05C         	call	_RTdS
  6227  006140  6E00               	movwf	btemp,c
  6228  006142  0E0A               	movlw	10
  6229  006144  5C00               	subwf	btemp,w,c
  6230  006146  A0D8               	btfss	status,0,c
  6231  006148  0012               	return	
  6232                           ;main.c: 2768: M._ZMKCOCW=0;
  6233  00614A  0100               	movlb	(_M+16) shr (0+8)
  6234  00614C  937A               	bcf	(_M+16)& (0+255),1,b
  6235                           ;main.c: 2769: M.ZKP=0;
  6236  00614E  6B97               	clrf	(_M+45)& (0+255),b
  6237                           ;main.c: 2772: if(M._ROZRUCH||RD0||M._WYLACZ) RD
      +                          2=1;
  6238  006150  A57A               	btfss	(_M+16)& (0+255),2,b
  6239  006152  B083               	btfsc	3971,0,c	;volatile
  6240  006154  D001               	goto	u10950
  6241  006156  B17A               	btfsc	(_M+16)& (0+255),0,b
  6242  006158                     u10950:
  6243  006158  8483               	bsf	3971,2,c	;volatile
  6244                           ;main.c: 2773: if(DtKNF.robg==0)
  6245  00615A  EE01  F0BC         	lfsr	0,_DtKNF+10
  6246  00615E  50EF               	movf	indf0,w,c
  6247  006160  A4D8               	btfss	status,2,c
  6248  006162  0012               	return	
  6249                           ;main.c: 2774: {
  6250  006164  0100               	movlb	(_M+17) shr (0+8)
  6251  006166  B57B               	btfsc	(_M+17)& (0+255),2,b
  6252  006168  8483               	bsf	3971,2,c	;volatile
  6253                           ;main.c: 2776: }
  6254  00616A  0012               	return	
  6255  00616C                     l716:
  6256  00616C  C097  FFE8         	movff	_M+45,wreg
  6257  006170  0A00               	xorlw	0
  6258  006172  E0D0               	bz	l717
  6259  006174  0A01               	xorlw	1
  6260  006176  E0D5               	bz	l718
  6261  006178  0A03               	xorlw	3
  6262  00617A  E0DF               	bz	l720
  6263  00617C  0012               	return	
  6264                           ;main.c: 2779: return;
  6265  00617E                     l694:
  6266  00617E  C1B9  FFE8         	movff	_DtKNF+7,wreg
  6267  006182  0A00               	xorlw	0
  6268  006184  E091               	bz	l703
  6269  006186  0A01               	xorlw	1
  6270  006188  E101 D773          	bz	l696
  6271  00618C  0A03               	xorlw	3
  6272  00618E  E101 D770          	bz	l696
  6273  006192  0A01               	xorlw	1
  6274  006194  E089               	bz	l703
  6275  006196  D7EA               	goto	l716
  6276                           ;main.c: 2782: }
  6277  006198                     __end_of_ZmienKCOKCW:
  6278                           ;main.c: 2786: void RuszPlomien(void)
  6279                           ;main.c: 2787: {
  6280  006198                     _RuszPlomien:
  6281  000000                     
  6282                           ;main.c: 2788: switch(M.RPL)
  6283  006198  D029               	goto	l727
  6284  00619A                     l728:
  6285                           ;main.c: 2789: {
  6286                           ;main.c: 2791: {
  6287  00619A  0E01               	movlw	1
  6288  00619C  CFE8 F094          	movff	wreg,_M+42
  6289                           ;main.c: 2793: StartRTS(3);
  6290  0061A0  0E03               	movlw	3
  6291  0061A2  EC35  F05C         	call	_StartRTS
  6292  0061A6                     l729:
  6293                           ;main.c: 2794: }
  6294                           ;main.c: 2796: {
  6295  0061A6  0E03               	movlw	3
  6296  0061A8  EC4D  F05C         	call	_RTS
  6297  0061AC  6E00               	movwf	btemp,c
  6298  0061AE  0E1E               	movlw	30
  6299  0061B0  5C00               	subwf	btemp,w,c
  6300  0061B2  A0D8               	btfss	status,0,c
  6301  0061B4  0012               	return	
  6302                           ;main.c: 2798: M.LICZNIK_PL++;
  6303  0061B6  0100               	movlb	(_M+29) shr (0+8)
  6304  0061B8  2B87               	incf	(_M+29)& (0+255),f,b
  6305                           ;main.c: 2799: if(M._RUSZ_RPLM)
  6306  0061BA  A37B               	btfss	(_M+17)& (0+255),1,b
  6307  0061BC  D005               	goto	l731
  6308                           ;main.c: 2800: {
  6309  0061BE  0101               	movlb	_PWM shr (0+8)
  6310  0061C0  A575               	btfss	_PWM& (0+255),2,b
  6311  0061C2  D007               	goto	l737
  6312                           ;main.c: 2802: {
  6313                           ;main.c: 2804: {
  6314                           ;main.c: 2806: M._RUSZ_RPLM=0;
  6315                           ;main.c: 2807: }
  6316                           ;main.c: 2809: else
  6317  0061C4  0E00               	movlw	0
  6318  0061C6  D006               	goto	L15
  6319                           ;main.c: 2812: {
  6320                           ;main.c: 2814: M._RUSZ_RPLM=0;
  6321                           ;main.c: 2815: }
  6322  0061C8                     l731:
  6323                           ;main.c: 2818: else
  6324  0061C8  0101               	movlb	_PWM shr (0+8)
  6325  0061CA  B575               	btfsc	_PWM& (0+255),2,b
  6326  0061CC  D002               	goto	l737
  6327                           ;main.c: 2821: {
  6328  0061CE  0E02               	movlw	2
  6329  0061D0  D001               	goto	L15
  6330                           ;main.c: 2823: {
  6331                           ;main.c: 2825: M._RUSZ_RPLM=0;
  6332                           ;main.c: 2826: }
  6333  0061D2                     l737:
  6334                           ;main.c: 2828: else
  6335  0061D2  0E01               	movlw	1
  6336  0061D4                     L15:
  6337  0061D4  0100               	movlb	(_M+29) shr (0+8)
  6338  0061D6  6587               	cpfsgt	(_M+29)& (0+255),b
  6339  0061D8  D002               	goto	l736
  6340                           ;main.c: 2831: {
  6341  0061DA  8785               	bsf	(_M+27)& (0+255),3,b
  6342                           ;main.c: 2833: M._RUSZ_RPLM=0;
  6343  0061DC  937B               	bcf	(_M+17)& (0+255),1,b
  6344  0061DE                     l736:
  6345                           ;main.c: 2834: }
  6346  0061DE  0E05               	movlw	5
  6347  0061E0  EC17  F05C         	call	_StartRTdS
  6348                           ;main.c: 2838: M._RUSZ_PLOMIEN=0;
  6349  0061E4  0100               	movlb	(_M+17) shr (0+8)
  6350  0061E6  917B               	bcf	(_M+17)& (0+255),0,b
  6351                           ;main.c: 2839: M.RPL=0;
  6352  0061E8  6B94               	clrf	(_M+42)& (0+255),b
  6353                           ;main.c: 2840: }
  6354  0061EA  0012               	return	
  6355  0061EC                     l727:
  6356  0061EC  C094  FFE8         	movff	_M+42,wreg
  6357  0061F0  0A00               	xorlw	0
  6358  0061F2  E0D3               	bz	l728
  6359  0061F4  0A01               	xorlw	1
  6360  0061F6  E0D7               	bz	l729
  6361  0061F8  0012               	return	
  6362                           ;main.c: 2842: }
  6363  0061FA                     __end_of_RuszPlomien:
  6364                           ;main.c: 2844: void ReloadPlomien(void)
  6365                           ;main.c: 2845: {
  6366  0061FA                     _ReloadPlomien:
  6367  000000                     
  6368                           ;main.c: 2846: if(!M._RUSZ_PLOMIEN&&!M._ZMKCOCW&
      +                          &!M._ROZRUCH&&(RTdS(5)>9))
  6369  0061FA  0100               	movlb	(_M+17) shr (0+8)
  6370  0061FC  A17B               	btfss	(_M+17)& (0+255),0,b
  6371  0061FE  B37A               	btfsc	(_M+16)& (0+255),1,b
  6372  006200  0012               	return	
  6373  006202  0100               	movlb	(_M+16) shr (0+8)
  6374  006204  B57A               	btfsc	(_M+16)& (0+255),2,b
  6375  006206  0012               	return	
  6376  006208  0E05               	movlw	5
  6377  00620A  EC29  F05C         	call	_RTdS
  6378  00620E  6E00               	movwf	btemp,c
  6379  006210  0E0A               	movlw	10
  6380  006212  5C00               	subwf	btemp,w,c
  6381  006214  A0D8               	btfss	status,0,c
  6382  006216  0012               	return	
  6383                           ;main.c: 2847: {
  6384  006218  0100               	movlb	(_M+17) shr (0+8)
  6385  00621A  937B               	bcf	(_M+17)& (0+255),1,b
  6386                           ;main.c: 2849: M._OST_PL=0;
  6387  00621C  9785               	bcf	(_M+27)& (0+255),3,b
  6388                           ;main.c: 2850: M.LICZNIK_PL=0;
  6389  00621E  6B87               	clrf	(_M+29)& (0+255),b
  6390                           ;main.c: 2851: }
  6391  006220  0012               	return	
  6392  006222                     __end_of_ReloadPlomien:
  6393                           ;main.c: 2856: void RuszCiag(void)
  6394                           ;main.c: 2857: {
  6395  006222                     _RuszCiag:
  6396  000000                     
  6397                           ;main.c: 2858: if(!M._TURBO)
  6398  006222  0100               	movlb	(_M+27) shr (0+8)
  6399  006224  A385               	btfss	(_M+27)& (0+255),1,b
  6400  006226  D034               	goto	l746
  6401  006228  D0BA               	goto	l754
  6402                           ;main.c: 2859: {
  6403  00622A                     l747:
  6404                           ;main.c: 2861: {
  6405                           ;main.c: 2863: {
  6406  00622A  0E01               	movlw	1
  6407  00622C  CFE8 F095          	movff	wreg,_M+43
  6408                           ;main.c: 2865: M._prb_CIG=0;
  6409  006230  0100               	movlb	(_M+28) shr (0+8)
  6410  006232  9186               	bcf	(_M+28)& (0+255),0,b
  6411                           ;main.c: 2866: StartRTS(4);
  6412  006234  0E04               	movlw	4
  6413  006236  EC35  F05C         	call	_StartRTS
  6414                           ;main.c: 2867: StartRTM(3);
  6415  00623A  0E03               	movlw	3
  6416  00623C  EC5C  F05C         	call	_StartRTM
  6417  006240                     l748:
  6418                           ;main.c: 2868: }
  6419                           ;main.c: 2870: {
  6420  006240  0E04               	movlw	4
  6421  006242  EC4D  F05C         	call	_RTS
  6422  006246  6E00               	movwf	btemp,c
  6423  006248  0E02               	movlw	2
  6424  00624A  5C00               	subwf	btemp,w,c
  6425  00624C  E302               	bnc	l749
  6426  00624E  0100               	movlb	(_M+28) shr (0+8)
  6427  006250  8186               	bsf	(_M+28)& (0+255),0,b
  6428  006252                     l749:
  6429                           ;main.c: 2872: if(RTM(3)<15) return;
  6430  006252  0E03               	movlw	3
  6431  006254  EC74  F05C         	call	_RTM
  6432  006258  6E00               	movwf	btemp,c
  6433  00625A  0E0F               	movlw	15
  6434  00625C  5C00               	subwf	btemp,w,c
  6435  00625E  A0D8               	btfss	status,0,c
  6436  006260  0012               	return	
  6437                           ;main.c: 2873: M.LICZNIK_CIG2++;
  6438  006262  0100               	movlb	(_M+31) shr (0+8)
  6439  006264  2B89               	incf	(_M+31)& (0+255),f,b
  6440                           ;main.c: 2874: if(M.LICZNIK_CIG2>=4)
  6441  006266  0E03               	movlw	3
  6442  006268  6589               	cpfsgt	(_M+31)& (0+255),b
  6443  00626A  D00B               	goto	l751
  6444                           ;main.c: 2875: {
  6445  00626C  6B89               	clrf	(_M+31)& (0+255),b
  6446                           ;main.c: 2877: M.ERR_BTY=0x03;
  6447  00626E  0E03               	movlw	3
  6448  006270  CFE8 F08C          	movff	wreg,_M+34
  6449                           ;main.c: 2878: PrintErr(0x03,1);
  6450  006274  0E01               	movlw	1
  6451  006276  0100               	movlb	__Lparam shr (0+8)
  6452  006278  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  6453  00627A  0E03               	movlw	3
  6454  00627C  EC83  F060         	call	_PrintErr
  6455                           ;main.c: 2879: ErrPTG();
  6456  006280  D9D0               	call	_ErrPTG	;wreg free
  6457  006282                     l751:
  6458                           ;main.c: 2880: }
  6459  006282  0100               	movlb	(_M+43) shr (0+8)
  6460  006284  6B95               	clrf	(_M+43)& (0+255),b
  6461                           ;main.c: 2882: M._RUSZ_CIAG=0;
  6462  006286  9F7A               	bcf	(_M+16)& (0+255),7,b
  6463                           ;main.c: 2883: M._prb_CIG=0;
  6464  006288  9186               	bcf	(_M+28)& (0+255),0,b
  6465                           ;main.c: 2884: StartRTM(6);
  6466  00628A  0E06               	movlw	6
  6467  00628C  EF5C  F05C         	goto	_StartRTM
  6468                           ;main.c: 2885: return;
  6469  006290                     l746:
  6470  006290  C095  FFE8         	movff	_M+43,wreg
  6471  006294  0A00               	xorlw	0
  6472  006296  E0C9               	bz	l747
  6473  006298  0A01               	xorlw	1
  6474  00629A  E0D2               	bz	l748
  6475  00629C  0012               	return	
  6476                           ;main.c: 2888: }
  6477                           ;main.c: 2889: else
  6478  00629E                     l755:
  6479                           ;main.c: 2892: {
  6480                           ;main.c: 2894: {
  6481  00629E  0100               	movlb	(_M+28) shr (0+8)
  6482  0062A0  9186               	bcf	(_M+28)& (0+255),0,b
  6483                           ;main.c: 2896: StartRTS(4);
  6484  0062A2  0E04               	movlw	4
  6485  0062A4  EC35  F05C         	call	_StartRTS
  6486                           ;main.c: 2897: if(RD3)
  6487  0062A8  A683               	btfss	3971,3,c	;volatile
  6488  0062AA  D007               	goto	l756
  6489                           ;main.c: 2898: {
  6490  0062AC  0100               	movlb	(_M+16) shr (0+8)
  6491  0062AE  8D7A               	bsf	(_M+16)& (0+255),6,b
  6492                           ;main.c: 2900: M.VWB=0;
  6493  0062B0  6B98               	clrf	(_M+46)& (0+255),b
  6494                           ;main.c: 2901: M.RCI=1;
  6495  0062B2  0E01               	movlw	1
  6496  0062B4  CFE8 F095          	movff	wreg,_M+43
  6497                           ;main.c: 2902: }
  6498  0062B8  0C01               	retlw	1
  6499  0062BA                     l756:
  6500                           ;main.c: 2903: else M.RCI=2;
  6501  0062BA  0E02               	movlw	2
  6502  0062BC  CFE8 F095          	movff	wreg,_M+43
  6503                           ;main.c: 2904: break;
  6504  0062C0  0C02               	retlw	2
  6505  0062C2                     l758:
  6506                           ;main.c: 2905: }
  6507                           ;main.c: 2907: {
  6508  0062C2  0E04               	movlw	4
  6509  0062C4  EC4D  F05C         	call	_RTS
  6510  0062C8  6E00               	movwf	btemp,c
  6511  0062CA  0E02               	movlw	2
  6512  0062CC  5C00               	subwf	btemp,w,c
  6513  0062CE  E302               	bnc	l759
  6514  0062D0  0100               	movlb	(_M+28) shr (0+8)
  6515  0062D2  8186               	bsf	(_M+28)& (0+255),0,b
  6516  0062D4                     l759:
  6517                           ;main.c: 2910: if(RdPrt(3))
  6518  0062D4  0E03               	movlw	3
  6519  0062D6  ECC4  F05B         	call	_RdPrt
  6520                           ;main.c: 2911: {
  6521  0062DA  0E04               	movlw	4
  6522  0062DC  E305               	bnc	L27
  6523  0062DE  CFE8 F095          	movff	wreg,_M+43
  6524                           ;main.c: 2913: M.LICZNIK_CIG3=0;
  6525  0062E2  0100               	movlb	(_M+32) shr (0+8)
  6526  0062E4  6B8A               	clrf	(_M+32)& (0+255),b
  6527  0062E6  D00A               	goto	L42
  6528                           ;main.c: 2914: StartRTS(4);
  6529                           ;main.c: 2915: break;
  6530                           ;main.c: 2916: }
  6531  0062E8                     L27:
  6532  0062E8  EC4D  F05C         	call	_RTS
  6533  0062EC  6E00               	movwf	btemp,c
  6534  0062EE  0E0E               	movlw	14
  6535  0062F0  5C00               	subwf	btemp,w,c
  6536  0062F2  A0D8               	btfss	status,0,c
  6537  0062F4  0012               	return	
  6538                           ;main.c: 2918: M.RCI=3;
  6539  0062F6  0E03               	movlw	3
  6540  0062F8  CFE8 F095          	movff	wreg,_M+43
  6541  0062FC                     L42:
  6542                           ;main.c: 2919: StartRTS(4);
  6543  0062FC  0E04               	movlw	4
  6544  0062FE  EF35  F05C         	goto	_StartRTS
  6545                           ;main.c: 2920: break;
  6546  006302                     l762:
  6547                           ;main.c: 2921: }
  6548                           ;main.c: 2924: {
  6549  006302  0E04               	movlw	4
  6550  006304  EC4D  F05C         	call	_RTS
  6551  006308  6E00               	movwf	btemp,c
  6552  00630A  0E02               	movlw	2
  6553  00630C  5C00               	subwf	btemp,w,c
  6554  00630E  E302               	bnc	l763
  6555  006310  0100               	movlb	(_M+28) shr (0+8)
  6556  006312  8186               	bsf	(_M+28)& (0+255),0,b
  6557  006314                     l763:
  6558                           ;main.c: 2927: if(!RdPrt(3))
  6559  006314  0E03               	movlw	3
  6560  006316  ECC4  F05B         	call	_RdPrt
  6561                           ;main.c: 2928: {
  6562  00631A  0E04               	movlw	4
  6563  00631C  E201               	bc	L28
  6564  00631E  D02B               	goto	L43
  6565                           ;main.c: 2930: StartRTS(4);
  6566                           ;main.c: 2931: break;
  6567                           ;main.c: 2932: }
  6568  006320                     L28:
  6569  006320  EC4D  F05C         	call	_RTS
  6570  006324  6E00               	movwf	btemp,c
  6571  006326  0E0E               	movlw	14
  6572  006328  5C00               	subwf	btemp,w,c
  6573  00632A  A0D8               	btfss	status,0,c
  6574  00632C  0012               	return	
  6575                           ;main.c: 2934: M.ERR_BTY=0x03;
  6576  00632E  0E03               	movlw	3
  6577  006330  CFE8 F08C          	movff	wreg,_M+34
  6578                           ;main.c: 2935: PrintErr(0x03,1);
  6579  006334  0E01               	movlw	1
  6580  006336  0100               	movlb	__Lparam shr (0+8)
  6581  006338  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  6582  00633A  0E03               	movlw	3
  6583  00633C  EC83  F060         	call	_PrintErr
  6584                           ;main.c: 2936: ErrPTG();
  6585  006340  D970               	call	_ErrPTG	;wreg free
  6586  006342                     l766:
  6587                           ;main.c: 2937: }
  6588                           ;main.c: 2940: {
  6589  006342  9683               	bcf	3971,3,c	;volatile
  6590                           ;main.c: 2942: if(RTS(4)<5-1) return;
  6591  006344  0E04               	movlw	4
  6592  006346  EC4D  F05C         	call	_RTS
  6593  00634A  6E00               	movwf	btemp,c
  6594  00634C  0E04               	movlw	4
  6595  00634E  5C00               	subwf	btemp,w,c
  6596  006350  A0D8               	btfss	status,0,c
  6597  006352  0012               	return	
  6598                           ;main.c: 2943: M.LICZNIK_CIG3++;
  6599  006354  0100               	movlb	(_M+32) shr (0+8)
  6600  006356  2B8A               	incf	(_M+32)& (0+255),f,b
  6601                           ;main.c: 2944: if(M.LICZNIK_CIG3>=10)
  6602  006358  0E09               	movlw	9
  6603  00635A  658A               	cpfsgt	(_M+32)& (0+255),b
  6604  00635C  D00B               	goto	l768
  6605                           ;main.c: 2945: {
  6606  00635E  6B8A               	clrf	(_M+32)& (0+255),b
  6607                           ;main.c: 2947: M.ERR_BTY=0x03;
  6608  006360  0E03               	movlw	3
  6609  006362  CFE8 F08C          	movff	wreg,_M+34
  6610                           ;main.c: 2948: PrintErr(0x03,1);
  6611  006366  0E01               	movlw	1
  6612  006368  0100               	movlb	__Lparam shr (0+8)
  6613  00636A  6FEC               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  6614  00636C  0E03               	movlw	3
  6615  00636E  EC83  F060         	call	_PrintErr
  6616                           ;main.c: 2949: ErrPTG();
  6617  006372  D957               	call	_ErrPTG	;wreg free
  6618  006374                     l768:
  6619                           ;main.c: 2950: }
  6620  006374  0E04               	movlw	4
  6621  006376                     L43:
  6622  006376  CFE8 F095          	movff	wreg,_M+43
  6623                           ;main.c: 2952: StartRTS(4);
  6624  00637A  EF35  F05C         	goto	_StartRTS
  6625                           ;main.c: 2953: break;
  6626  00637E                     l769:
  6627                           ;main.c: 2954: }
  6628                           ;main.c: 2956: {
  6629  00637E  0E04               	movlw	4
  6630  006380  EC4D  F05C         	call	_RTS
  6631  006384  6E00               	movwf	btemp,c
  6632  006386  0E01               	movlw	1
  6633  006388  5C00               	subwf	btemp,w,c
  6634  00638A  A0D8               	btfss	status,0,c
  6635  00638C  0012               	return	
  6636                           ;main.c: 2958: StartRTS(15);
  6637  00638E  0E0F               	movlw	15
  6638  006390  EC35  F05C         	call	_StartRTS
  6639                           ;main.c: 2959: M._prb_CIG=0;
  6640  006394  0100               	movlb	(_M+28) shr (0+8)
  6641  006396  9186               	bcf	(_M+28)& (0+255),0,b
  6642                           ;main.c: 2960: M._RUSZ_CIAG=0;
  6643  006398  9F7A               	bcf	(_M+16)& (0+255),7,b
  6644                           ;main.c: 2961: M.RCI=0;
  6645  00639A  6B95               	clrf	(_M+43)& (0+255),b
  6646                           ;main.c: 2962: return;
  6647  00639C  0012               	return	
  6648  00639E                     l754:
  6649  00639E  C095  FFE8         	movff	_M+43,wreg
  6650  0063A2  0A00               	xorlw	0
  6651  0063A4  E101 D77B          	bz	l755
  6652  0063A8  0A01               	xorlw	1
  6653  0063AA  E08B               	bz	l758
  6654  0063AC  0A03               	xorlw	3
  6655  0063AE  E0A9               	bz	l762
  6656  0063B0  0A01               	xorlw	1
  6657  0063B2  E0C7               	bz	l766
  6658  0063B4  0A07               	xorlw	7
  6659  0063B6  E0E3               	bz	l769
  6660  0063B8  0012               	return	
  6661                           ;main.c: 2965: }
  6662  0063BA                     __end_of_RuszCiag:
  6663                           ;main.c: 2970: void ReloadCiag(void)
  6664                           ;main.c: 2971: {
  6665  0063BA                     _ReloadCiag:
  6666  000000                     
  6667                           ;main.c: 2972: if(!M._TURBO)
  6668  0063BA  0100               	movlb	(_M+27) shr (0+8)
  6669  0063BC  B385               	btfsc	(_M+27)& (0+255),1,b
  6670  0063BE  D00D               	goto	l772
  6671                           ;main.c: 2973: {
  6672  0063C0  BF7A               	btfsc	(_M+16)& (0+255),7,b
  6673  0063C2  0012               	return	
  6674  0063C4  0E06               	movlw	6
  6675  0063C6  EC74  F05C         	call	_RTM
  6676  0063CA  6E00               	movwf	btemp,c
  6677  0063CC  0E3D               	movlw	61
  6678  0063CE  5C00               	subwf	btemp,w,c
  6679  0063D0  A0D8               	btfss	status,0,c
  6680  0063D2  0012               	return	
  6681  0063D4  0100               	movlb	(_M+31) shr (0+8)
  6682  0063D6  6B89               	clrf	(_M+31)& (0+255),b
  6683                           ;main.c: 2975: }
  6684  0063D8  0012               	return	
  6685  0063DA                     l772:
  6686                           ;main.c: 2976: else
  6687  0063DA  0E0B               	movlw	11
  6688  0063DC  EC4D  F05C         	call	_RTS
  6689  0063E0  6E00               	movwf	btemp,c
  6690  0063E2  0E3D               	movlw	61
  6691  0063E4  5C00               	subwf	btemp,w,c
  6692  0063E6  E302               	bnc	l775
  6693                           ;main.c: 2979: {
  6694  0063E8  0100               	movlb	(_M+30) shr (0+8)
  6695  0063EA  6B88               	clrf	(_M+30)& (0+255),b
  6696  0063EC                     l775:
  6697                           ;main.c: 2981: }
  6698  0063EC  0100               	movlb	(_M+16) shr (0+8)
  6699  0063EE  BF7A               	btfsc	(_M+16)& (0+255),7,b
  6700  0063F0  0012               	return	
  6701  0063F2  0E0F               	movlw	15
  6702  0063F4  EC4D  F05C         	call	_RTS
  6703  0063F8  6E00               	movwf	btemp,c
  6704  0063FA  0E3D               	movlw	61
  6705  0063FC  5C00               	subwf	btemp,w,c
  6706  0063FE  A0D8               	btfss	status,0,c
  6707  006400  0012               	return	
  6708                           ;main.c: 2983: {
  6709  006402  0100               	movlb	(_M+32) shr (0+8)
  6710  006404  6B8A               	clrf	(_M+32)& (0+255),b
  6711                           ;main.c: 2985: }
  6712  006406  0012               	return	
  6713  006408                     __end_of_ReloadCiag:
  6714                           ;main.c: 2991: void Proba48(void)
  6715                           ;main.c: 2992: {
  6716  006408                     _Proba48:
  6717  000000                     
  6718                           ;main.c: 2994: if(M._RUSZ_48||M._RUSZ_48Z3) retu
      +                          rn;
  6719  006408  0100               	movlb	(_M+16) shr (0+8)
  6720  00640A  A77A               	btfss	(_M+16)& (0+255),3,b
  6721  00640C  B97A               	btfsc	(_M+16)& (0+255),4,b
  6722  00640E  0012               	return	
  6723  006410  0E00               	movlw	0
  6724                           ;main.c: 2995: if(RD2) StartRTG(0);
  6725  006412  B483               	btfsc	3971,2,c	;volatile
  6726  006414  EF92  F05C         	goto	_StartRTG
  6727                           ;main.c: 2996: else
  6728  006418  ECAA  F05C         	call	_RTG
  6729  00641C  6E00               	movwf	btemp,c
  6730  00641E  0E18               	movlw	24
  6731  006420  5C00               	subwf	btemp,w,c
  6732  006422  A0D8               	btfss	status,0,c
  6733  006424  0012               	return	
  6734                           ;main.c: 2999: {
  6735  006426  0100               	movlb	(_M+36) shr (0+8)
  6736  006428  6B8E               	clrf	(_M+36)& (0+255),b
  6737                           ;main.c: 3001: M._RUSZ_48=1;
  6738  00642A  877A               	bsf	(_M+16)& (0+255),3,b
  6739                           ;main.c: 3002: StartRTG(0);
  6740  00642C  0E00               	movlw	0
  6741  00642E  EF92  F05C         	goto	_StartRTG
  6742                           ;main.c: 3003: }
  6743  006432                     __end_of_Proba48:
  6744                           ;main.c: 3023: void Rusz48(void)
  6745                           ;main.c: 3024: {
  6746  006432                     _Rusz48:
  6747  000000                     
  6748                           ;main.c: 3025: switch(DtKNF.tpkt)
  6749  006432  D062               	goto	l784
  6750  006434                     l786:
  6751                           ;main.c: 3028: case 2:
  6752  006434  D01C               	goto	l788
  6753  006436                     l789:
  6754                           ;main.c: 3031: {
  6755                           ;main.c: 3033: {
  6756  006436  0100               	movlb	(_M+16) shr (0+8)
  6757  006438  B37A               	btfsc	(_M+16)& (0+255),1,b
  6758  00643A  0012               	return	
  6759                           ;main.c: 3035: StartRTS(5);
  6760  00643C  0E05               	movlw	5
  6761  00643E  EC35  F05C         	call	_StartRTS
  6762                           ;main.c: 3036: ToObiegCO();
  6763  006442  ECCE  F027         	call	_ToObiegCO	;wreg free
  6764                           ;main.c: 3037: M.R48=1;
  6765  006446  0E01               	movlw	1
  6766  006448  CFE8 F08E          	movff	wreg,_M+36
  6767  00644C                     l791:
  6768                           ;main.c: 3038: }
  6769                           ;main.c: 3040: {
  6770  00644C  0E05               	movlw	5
  6771  00644E  EC4D  F05C         	call	_RTS
  6772  006452  6E00               	movwf	btemp,c
  6773  006454  0EB4               	movlw	180
  6774  006456  5C00               	subwf	btemp,w,c
  6775  006458  A0D8               	btfss	status,0,c
  6776  00645A  0012               	return	
  6777                           ;main.c: 3042: if(M._ZMKCOCW) return;
  6778  00645C  0100               	movlb	(_M+16) shr (0+8)
  6779  00645E  B37A               	btfsc	(_M+16)& (0+255),1,b
  6780  006460  0012               	return	
  6781                           ;main.c: 3043: ToObiegCW();
  6782  006462  ECF5  F027         	call	_ToObiegCW	;wreg free
  6783                           ;main.c: 3044: M._RUSZ_48=0;
  6784  006466  0100               	movlb	(_M+16) shr (0+8)
  6785  006468  977A               	bcf	(_M+16)& (0+255),3,b
  6786                           ;main.c: 3045: M.R48=0;
  6787  00646A  6B8E               	clrf	(_M+36)& (0+255),b
  6788                           ;main.c: 3046: }
  6789  00646C  0012               	return	
  6790  00646E                     l788:
  6791  00646E  C08E  FFE8         	movff	_M+36,wreg
  6792  006472  0A00               	xorlw	0
  6793  006474  E0E0               	bz	l789
  6794  006476  0A01               	xorlw	1
  6795  006478  E0E9               	bz	l791
  6796  00647A  0012               	return	
  6797                           ;main.c: 3048: break;
  6798  00647C                     l795:
  6799                           ;main.c: 3051: case 3:
  6800  00647C  D01B               	goto	l797
  6801  00647E                     l798:
  6802                           ;main.c: 3054: {
  6803                           ;main.c: 3056: {
  6804  00647E  ECCE  F027         	call	_ToObiegCO	;wreg free
  6805                           ;main.c: 3058: if(M._ZMKCOCW) return;
  6806  006482  0100               	movlb	(_M+16) shr (0+8)
  6807  006484  B37A               	btfsc	(_M+16)& (0+255),1,b
  6808  006486  0012               	return	
  6809                           ;main.c: 3059: StartRTS(5);
  6810  006488  0E05               	movlw	5
  6811  00648A  EC35  F05C         	call	_StartRTS
  6812                           ;main.c: 3060: RD2=1;
  6813  00648E  8483               	bsf	3971,2,c	;volatile
  6814                           ;main.c: 3061: M.R48=1;
  6815  006490  0E01               	movlw	1
  6816  006492  CFE8 F08E          	movff	wreg,_M+36
  6817  006496                     l800:
  6818                           ;main.c: 3062: }
  6819                           ;main.c: 3064: {
  6820  006496  0E05               	movlw	5
  6821  006498  EC4D  F05C         	call	_RTS
  6822  00649C  6E00               	movwf	btemp,c
  6823  00649E  0EB4               	movlw	180
  6824  0064A0  5C00               	subwf	btemp,w,c
  6825  0064A2  A0D8               	btfss	status,0,c
  6826  0064A4  0012               	return	
  6827                           ;main.c: 3066: if(M._ZMKCOCW) return;
  6828  0064A6  0100               	movlb	(_M+16) shr (0+8)
  6829  0064A8  B37A               	btfsc	(_M+16)& (0+255),1,b
  6830  0064AA  0012               	return	
  6831                           ;main.c: 3067: RD2=0;
  6832  0064AC  9483               	bcf	3971,2,c	;volatile
  6833                           ;main.c: 3068: M._RUSZ_48=0;
  6834  0064AE  977A               	bcf	(_M+16)& (0+255),3,b
  6835                           ;main.c: 3069: M.R48=0;
  6836  0064B0  6B8E               	clrf	(_M+36)& (0+255),b
  6837                           ;main.c: 3070: }
  6838  0064B2  0012               	return	
  6839  0064B4                     l797:
  6840  0064B4  C08E  FFE8         	movff	_M+36,wreg
  6841  0064B8  0A00               	xorlw	0
  6842  0064BA  E0E1               	bz	l798
  6843  0064BC  0A01               	xorlw	1
  6844  0064BE  E0EB               	bz	l800
  6845  0064C0  0012               	return	
  6846                           ;main.c: 3072: break;
  6847                           ;main.c: 3073: }
  6848                           ;main.c: 3075: {
  6849  0064C2                     l806:
  6850                           ;main.c: 3077: {
  6851                           ;main.c: 3079: {
  6852  0064C2  ECCE  F027         	call	_ToObiegCO	;wreg free
  6853                           ;main.c: 3081: if(M._ZMKCOCW) return;
  6854  0064C6  0100               	movlb	(_M+16) shr (0+8)
  6855  0064C8  B37A               	btfsc	(_M+16)& (0+255),1,b
  6856  0064CA  0012               	return	
  6857                           ;main.c: 3082: StartRTS(5);
  6858  0064CC  0E05               	movlw	5
  6859  0064CE  EC35  F05C         	call	_StartRTS
  6860                           ;main.c: 3083: RD2=1;
  6861  0064D2  8483               	bsf	3971,2,c	;volatile
  6862                           ;main.c: 3084: M.R48=1;
  6863  0064D4  0E01               	movlw	1
  6864  0064D6  CFE8 F08E          	movff	wreg,_M+36
  6865  0064DA                     l808:
  6866                           ;main.c: 3085: }
  6867                           ;main.c: 3087: {
  6868  0064DA  0E05               	movlw	5
  6869  0064DC  EC4D  F05C         	call	_RTS
  6870  0064E0  6E00               	movwf	btemp,c
  6871  0064E2  0EB4               	movlw	180
  6872  0064E4  5C00               	subwf	btemp,w,c
  6873  0064E6  A0D8               	btfss	status,0,c
  6874  0064E8  0012               	return	
  6875                           ;main.c: 3089: if(M._ZMKCOCW) return;
  6876  0064EA  0100               	movlb	(_M+16) shr (0+8)
  6877  0064EC  B37A               	btfsc	(_M+16)& (0+255),1,b
  6878  0064EE  0012               	return	
  6879                           ;main.c: 3090: RD2=0;
  6880  0064F0  9483               	bcf	3971,2,c	;volatile
  6881                           ;main.c: 3091: M._RUSZ_48=0;
  6882  0064F2  977A               	bcf	(_M+16)& (0+255),3,b
  6883                           ;main.c: 3092: M.R48=0;
  6884  0064F4  6B8E               	clrf	(_M+36)& (0+255),b
  6885                           ;main.c: 3093: }
  6886  0064F6  0012               	return	
  6887                           ;main.c: 3095: break;
  6888  0064F8                     l784:
  6889  0064F8  C1B9  FFE8         	movff	_DtKNF+7,wreg
  6890  0064FC  0A00               	xorlw	0
  6891  0064FE  E0BE               	bz	l795
  6892  006500  0A01               	xorlw	1
  6893  006502  E098               	bz	l786
  6894  006504  0A03               	xorlw	3
  6895  006506  E096               	bz	l786
  6896  006508  0A01               	xorlw	1
  6897  00650A  E0B8               	bz	l795
  6898  00650C  C08E  FFE8         	movff	_M+36,wreg
  6899  006510  0A00               	xorlw	0
  6900  006512  E0D7               	bz	l806
  6901  006514  0A01               	xorlw	1
  6902  006516  E0E1               	bz	l808
  6903                           ;main.c: 3098: }
  6904  006518  0012               	return	
  6905  00651A                     __end_of_Rusz48:
  6906                           ;main.c: 3101: void Proba48Z3(void)
  6907                           ;main.c: 3102: {
  6908  00651A                     _Proba48Z3:
  6909  000000                     
  6910                           ;main.c: 3104: switch(DtKNF.tpkt)
  6911  00651A  D01B               	goto	l813
  6912  00651C                     l814:
  6913                           ;main.c: 3105: {
  6914                           ;main.c: 3107: {
  6915  00651C  0100               	movlb	(_M+16) shr (0+8)
  6916  00651E  A97A               	btfss	(_M+16)& (0+255),4,b
  6917  006520  B77A               	btfsc	(_M+16)& (0+255),3,b
  6918  006522  0012               	return	
  6919                           ;main.c: 3109: if(RD2&&!RD1) StartRTG(2);
  6920  006524  B483               	btfsc	3971,2,c	;volatile
  6921  006526  B283               	btfsc	3971,1,c	;volatile
  6922  006528  D001               	goto	l816
  6923  00652A  D010               	goto	L44
  6924  00652C                     l816:
  6925                           ;main.c: 3110: else
  6926  00652C  B483               	btfsc	3971,2,c	;volatile
  6927  00652E  0012               	return	
  6928  006530  0100               	movlb	(_M+16) shr (0+8)
  6929  006532  B37A               	btfsc	(_M+16)& (0+255),1,b
  6930  006534  0012               	return	
  6931                           ;main.c: 3113: if(RTG(2)>=47)
  6932  006536  0E02               	movlw	2
  6933  006538  ECAA  F05C         	call	_RTG
  6934  00653C  6E00               	movwf	btemp,c
  6935  00653E  0E2F               	movlw	47
  6936  006540  5C00               	subwf	btemp,w,c
  6937  006542  A0D8               	btfss	status,0,c
  6938  006544  0012               	return	
  6939                           ;main.c: 3114: {
  6940  006546  0100               	movlb	(_M+37) shr (0+8)
  6941  006548  6B8F               	clrf	(_M+37)& (0+255),b
  6942                           ;main.c: 3116: M._RUSZ_48Z3=1;
  6943  00654A  897A               	bsf	(_M+16)& (0+255),4,b
  6944  00654C                     L44:
  6945                           ;main.c: 3117: StartRTG(2);
  6946  00654C  0E02               	movlw	2
  6947  00654E  EF92  F05C         	goto	_StartRTG
  6948                           ;main.c: 3118: }
  6949  006552                     l813:
  6950  006552  C1B9  FFE8         	movff	_DtKNF+7,wreg
  6951  006556  0A03               	xorlw	3
  6952  006558  E0E1               	bz	l814
  6953  00655A  0012               	return	
  6954                           ;main.c: 3144: }
  6955  00655C                     __end_of_Proba48Z3:
  6956                           ;main.c: 3148: void Rusz48Z3(void)
  6957                           ;main.c: 3149: {
  6958  00655C                     _Rusz48Z3:
  6959  000000                     
  6960                           ;main.c: 3150: switch(DtKNF.tpkt)
  6961  00655C  D023               	goto	l822
  6962  00655E                     l823:
  6963                           ;main.c: 3151: {
  6964                           ;main.c: 3153: {
  6965  00655E  D01B               	goto	l825
  6966  006560                     l826:
  6967                           ;main.c: 3155: {
  6968                           ;main.c: 3157: {
  6969  006560  ECF5  F027         	call	_ToObiegCW	;wreg free
  6970                           ;main.c: 3159: if(M._ZMKCOCW) return;
  6971  006564  0100               	movlb	(_M+16) shr (0+8)
  6972  006566  B37A               	btfsc	(_M+16)& (0+255),1,b
  6973  006568  0012               	return	
  6974                           ;main.c: 3160: StartRTS(5);
  6975  00656A  0E05               	movlw	5
  6976  00656C  EC35  F05C         	call	_StartRTS
  6977                           ;main.c: 3161: RD2=1;
  6978  006570  8483               	bsf	3971,2,c	;volatile
  6979                           ;main.c: 3162: M.R48Z3=1;
  6980  006572  0E01               	movlw	1
  6981  006574  CFE8 F08F          	movff	wreg,_M+37
  6982  006578                     l828:
  6983                           ;main.c: 3163: }
  6984                           ;main.c: 3165: {
  6985  006578  0E05               	movlw	5
  6986  00657A  EC4D  F05C         	call	_RTS
  6987  00657E  6E00               	movwf	btemp,c
  6988  006580  0E0F               	movlw	15
  6989  006582  5C00               	subwf	btemp,w,c
  6990  006584  A0D8               	btfss	status,0,c
  6991  006586  0012               	return	
  6992                           ;main.c: 3167: if(M._ZMKCOCW) return;
  6993  006588  0100               	movlb	(_M+16) shr (0+8)
  6994  00658A  B37A               	btfsc	(_M+16)& (0+255),1,b
  6995  00658C  0012               	return	
  6996                           ;main.c: 3168: RD2=0;
  6997  00658E  9483               	bcf	3971,2,c	;volatile
  6998                           ;main.c: 3169: M._RUSZ_48Z3=0;
  6999  006590  997A               	bcf	(_M+16)& (0+255),4,b
  7000                           ;main.c: 3170: M.R48Z3=0;
  7001  006592  6B8F               	clrf	(_M+37)& (0+255),b
  7002                           ;main.c: 3171: }
  7003  006594  0012               	return	
  7004  006596                     l825:
  7005  006596  C08F  FFE8         	movff	_M+37,wreg
  7006  00659A  0A00               	xorlw	0
  7007  00659C  E0E1               	bz	l826
  7008  00659E  0A01               	xorlw	1
  7009  0065A0  E0EB               	bz	l828
  7010  0065A2  0012               	return	
  7011                           ;main.c: 3173: break;
  7012  0065A4                     l822:
  7013  0065A4  C1B9  FFE8         	movff	_DtKNF+7,wreg
  7014  0065A8  0A03               	xorlw	3
  7015  0065AA  E0D9               	bz	l823
  7016  0065AC  0012               	return	
  7017                           ;main.c: 3176: }
  7018  0065AE                     __end_of_Rusz48Z3:
  7019                           ;main.c: 3210: bit KeyRes(void)
  7020                           ;main.c: 3211: {
  7021  0065AE                     _KeyRes:
  7022  000000                     
  7023                           ;main.c: 3212: switch(M.KRS)
  7024  0065AE  D01B               	goto	l833
  7025  0065B0                     l834:
  7026                           ;main.c: 3213: {
  7027                           ;main.c: 3215: {
  7028  0065B0  0101               	movlb	_PFN shr (0+8)
  7029  0065B2  AB0C               	btfss	_PFN& (0+255),5,b
  7030  0065B4  D01E               	goto	l832
  7031                           ;main.c: 3217: {
  7032  0065B6  0E01               	movlw	1
  7033  0065B8  CFE8 F09A          	movff	wreg,_M+48
  7034                           ;main.c: 3219: StartRTS(8);
  7035  0065BC  0E08               	movlw	8
  7036  0065BE  EC35  F05C         	call	_StartRTS
  7037                           ;main.c: 3220: }
  7038  0065C2  D017               	goto	l832
  7039  0065C4                     l836:
  7040                           ;main.c: 3222: }
  7041                           ;main.c: 3224: {
  7042  0065C4  0101               	movlb	_PFN shr (0+8)
  7043  0065C6  AB0C               	btfss	_PFN& (0+255),5,b
  7044  0065C8  D00B               	goto	l837
  7045                           ;main.c: 3226: {
  7046  0065CA  0E08               	movlw	8
  7047  0065CC  EC4D  F05C         	call	_RTS
  7048  0065D0  6E00               	movwf	btemp,c
  7049  0065D2  0E01               	movlw	1
  7050  0065D4  5C00               	subwf	btemp,w,c
  7051  0065D6  E202               	bc	l838
  7052  0065D8  90D8               	bcf	status,0,c
  7053  0065DA  0012               	return	
  7054  0065DC                     l838:
  7055                           ;main.c: 3228: return 1;
  7056  0065DC  80D8               	bsf	status,0,c
  7057  0065DE  0012               	return	
  7058  0065E0                     l837:
  7059                           ;main.c: 3231: else
  7060  0065E0  0100               	movlb	(_M+48) shr (0+8)
  7061  0065E2  6B9A               	clrf	(_M+48)& (0+255),b
  7062                           ;main.c: 3234: }
  7063  0065E4  D006               	goto	l832
  7064  0065E6                     l833:
  7065  0065E6  C09A  FFE8         	movff	_M+48,wreg
  7066  0065EA  0A00               	xorlw	0
  7067  0065EC  E0E1               	bz	l834
  7068  0065EE  0A01               	xorlw	1
  7069  0065F0  E0E9               	bz	l836
  7070  0065F2                     l832:
  7071                           ;main.c: 3237: return 0;
  7072  0065F2  90D8               	bcf	status,0,c
  7073  0065F4  0012               	return	
  7074                           ;main.c: 3238: }
  7075  0065F6                     __end_of_KeyRes:
  7076                           ;main.c: 3242: void VZPauza(void)
  7077                           ;main.c: 3243: {
  7078  0065F6                     _VZPauza:
  7079  000000                     
  7080                           ;main.c: 3245: StartRTS(2);
  7081  0065F6  0E02               	movlw	2
  7082  0065F8  EC35  F05C         	call	_StartRTS
  7083  0065FC                     l842:
  7084                           ;main.c: 3246: while(1)
  7085                           ;main.c: 3247: {
  7086  0065FC  0004               	clrwdt		;#
  7087                           ;main.c: 3249: if(M.ERR_BTY==2)
  7088  0065FE  C08C  FFE8         	movff	_M+34,wreg
  7089  006602  0A02               	xorlw	2
  7090                           ;main.c: 3250: {
  7091  006604  0E02               	movlw	2
  7092  006606  E108               	bnz	L30
  7093  006608  EC4D  F05C         	call	_RTS
  7094  00660C  6E00               	movwf	btemp,c
  7095  00660E  0E03               	movlw	3
  7096  006610                     L12:
  7097  006610  5C00               	subwf	btemp,w,c
  7098  006612  B0D8               	btfsc	status,0,c
  7099  006614  0012               	return	
  7100  006616  D7F2               	goto	l842
  7101                           ;main.c: 3252: }
  7102                           ;main.c: 3253: else
  7103  006618                     L30:
  7104  006618  EC4D  F05C         	call	_RTS
  7105  00661C  6E00               	movwf	btemp,c
  7106  00661E  0E02               	movlw	2
  7107  006620  D7F7               	goto	L12
  7108                           ;main.c: 3256: }
  7109  006622                     __end_of_VZPauza:
  7110                           ;main.c: 3262: void ErrPTG(void)
  7111                           ;main.c: 3263: {
  7112  006622                     _ErrPTG:
  7113  000000                     
  7114                           ;main.c: 3267: GrzejOFF();
  7115  006622  EC48  F02C         	call	_GrzejOFF	;wreg free
  7116                           ;main.c: 3268: VZPauza();
  7117  006626  DFE7               	call	_VZPauza	;wreg free
  7118                           ;main.c: 3269: if(DtKNF.robg==0)
  7119  006628  EE01  F0BC         	lfsr	0,_DtKNF+10
  7120  00662C  50EF               	movf	indf0,w,c
  7121  00662E  E10C               	bnz	l849
  7122                           ;main.c: 3270: {
  7123  006630  C08C  FFE8         	movff	_M+34,wreg
  7124  006634  0A05               	xorlw	5
  7125  006636  E108               	bnz	l849
  7126                           ;main.c: 3272: {
  7127  006638  0EC0               	movlw	192
  7128  00663A  0100               	movlb	__Lparam shr (0+8)
  7129  00663C  6FEC               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  7130  00663E  6BED               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  7131  006640  C08C  F0EE         	movff	_M+34,?_eeprom_write+2
  7132  006644  EC6E  F062         	call	_eeprom_write	;wreg free
  7133  006648                     l849:
  7134                           ;main.c: 3274: }
  7135  006648  0E00               	movlw	0
  7136  00664A  0100               	movlb	(_M+34) shr (0+8)
  7137  00664C  658C               	cpfsgt	(_M+34)& (0+255),b
  7138  00664E  D00B               	goto	l851
  7139  006650  0E04               	movlw	4
  7140  006652  618C               	cpfslt	(_M+34)& (0+255),b
  7141  006654  D008               	goto	l851
  7142  006656  0EC0               	movlw	192
  7143  006658  0100               	movlb	__Lparam shr (0+8)
  7144  00665A  6FEC               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  7145  00665C  6BED               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  7146  00665E  C08C  F0EE         	movff	_M+34,?_eeprom_write+2
  7147  006662  EC6E  F062         	call	_eeprom_write	;wreg free
  7148  006666                     l851:
  7149                           ;main.c: 3277: M._RUSZ_POMPE=0;
  7150  006666  0100               	movlb	(_M+17) shr (0+8)
  7151  006668  957B               	bcf	(_M+17)& (0+255),2,b
  7152                           ;main.c: 3278: M._ROZRUCH=0;
  7153  00666A  957A               	bcf	(_M+16)& (0+255),2,b
  7154                           ;main.c: 3279: M._MODULUJ=0;
  7155  00666C  9B7B               	bcf	(_M+17)& (0+255),5,b
  7156                           ;main.c: 3280: WritePWM(0);
  7157  00666E  0E00               	movlw	0
  7158  006670  ECD4  F054         	call	_WritePWM
  7159                           ;main.c: 3281: if(!M._WYLACZ)
  7160  006674  0100               	movlb	(_M+16) shr (0+8)
  7161  006676  B17A               	btfsc	(_M+16)& (0+255),0,b
  7162  006678  D018               	goto	l852
  7163                           ;main.c: 3282: {
  7164  00667A  6B92               	clrf	(_M+40)& (0+255),b
  7165                           ;main.c: 3284: switch(DtKNF.tpkt)
  7166  00667C  D008               	goto	l854
  7167  00667E                     l856:
  7168  00667E  D003               	goto	l864
  7169                           ;main.c: 3287: case 2:
  7170                           ;main.c: 3290: break;
  7171  006680                     l859:
  7172                           ;main.c: 3293: case 3:
  7173  006680  0100               	movlb	(_M+16) shr (0+8)
  7174  006682  B37A               	btfsc	(_M+16)& (0+255),1,b
  7175  006684  D011               	goto	u11780
  7176                           ;main.c: 3296: else
  7177  006686                     l864:
  7178                           ;main.c: 3303: else
  7179  006686  A483               	btfss	3971,2,c	;volatile
  7180  006688  D010               	goto	l852
  7181  00668A  0100               	movlb	(_M+16) shr (0+8)
  7182  00668C  D00D               	goto	u11780
  7183                           ;main.c: 3305: break;
  7184  00668E                     l854:
  7185  00668E  C1B9  FFE8         	movff	_DtKNF+7,wreg
  7186  006692  0A00               	xorlw	0
  7187  006694  E0F5               	bz	l859
  7188  006696  0A01               	xorlw	1
  7189  006698  E0F2               	bz	l856
  7190  00669A  0A03               	xorlw	3
  7191  00669C  E0F0               	bz	l856
  7192  00669E  0A01               	xorlw	1
  7193  0066A0  E0EF               	bz	l859
  7194                           ;main.c: 3298: break;
  7195                           ;main.c: 3299: }
  7196                           ;main.c: 3301: {
  7197  0066A2  0100               	movlb	(_M+16) shr (0+8)
  7198  0066A4  A37A               	btfss	(_M+16)& (0+255),1,b
  7199  0066A6  D7EF               	goto	l864
  7200  0066A8                     u11780:
  7201  0066A8  817A               	bsf	(_M+16)& (0+255),0,b
  7202  0066AA                     l852:
  7203                           ;main.c: 3308: }
  7204  0066AA  0100               	movlb	(_M+27) shr (0+8)
  7205  0066AC  B385               	btfsc	(_M+27)& (0+255),1,b
  7206  0066AE  A683               	btfss	3971,3,c	;volatile
  7207  0066B0  D002               	goto	l867
  7208  0066B2  0100               	movlb	(_M+16) shr (0+8)
  7209  0066B4  8D7A               	bsf	(_M+16)& (0+255),6,b
  7210  0066B6                     l867:
  7211                           ;main.c: 3310: M._RUSZ_PWR=0;
  7212  0066B6  0100               	movlb	(_M+16) shr (0+8)
  7213  0066B8  9B7A               	bcf	(_M+16)& (0+255),5,b
  7214                           ;main.c: 3311: M.HVZ=0;
  7215  0066BA  6B9B               	clrf	(_M+49)& (0+255),b
  7216                           ;main.c: 3312: M.KRS=0;
  7217  0066BC  6B9A               	clrf	(_M+48)& (0+255),b
  7218  0066BE                     l869:
  7219                           ;main.c: 3315: while(1)
  7220                           ;main.c: 3316: {
  7221  0066BE  0004               	clrwdt		;#
  7222                           ;main.c: 3318: BitSet2(&RSDT1.outSTAT0,1,0);
  7223  0066C0  0100               	movlb	__Lparam shr (0+8)
  7224  0066C2  0EAE               	movlw	low (_RSDT1+17)
  7225  0066C4  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7226  0066C6  0E00               	movlw	high (_RSDT1+17)
  7227  0066C8  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7228  0066CA  0E01               	movlw	1
  7229  0066CC  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7230  0066CE  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7231  0066D0  EC39  F061         	call	_BitSet2	;wreg free
  7232                           ;main.c: 3319: BitSet2(&RSDT1.outSTAT0,0,1);
  7233  0066D4  0100               	movlb	__Lparam shr (0+8)
  7234  0066D6  0EAE               	movlw	low (_RSDT1+17)
  7235  0066D8  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7236  0066DA  0E00               	movlw	high (_RSDT1+17)
  7237  0066DC  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7238  0066DE  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7239  0066E0  0E01               	movlw	1
  7240  0066E2  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7241  0066E4  EC39  F061         	call	_BitSet2	;wreg free
  7242                           ;main.c: 3320: BitSet2(&RSDT1.outSTAT1,3,1);
  7243  0066E8  0100               	movlb	__Lparam shr (0+8)
  7244  0066EA  0EAF               	movlw	low (_RSDT1+18)
  7245  0066EC  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7246  0066EE  0E00               	movlw	high (_RSDT1+18)
  7247  0066F0  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7248  0066F2  0E03               	movlw	3
  7249  0066F4  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7250  0066F6  0E01               	movlw	1
  7251  0066F8  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7252  0066FA  EC39  F061         	call	_BitSet2	;wreg free
  7253                           ;main.c: 3321: ReceptDataLCD();
  7254  0066FE  EC6D  F059         	call	_ReceptDataLCD	;wreg free
  7255                           ;main.c: 3324: PomiarPCO();
  7256  006702  ECB6  F03D         	call	_PomiarPCO	;wreg free
  7257                           ;main.c: 3325: PomiarPCW();
  7258  006706  EC54  F03E         	call	_PomiarPCW	;wreg free
  7259                           ;main.c: 3326: PomiarPFN();
  7260  00670A  ECCD  F03E         	call	_PomiarPFN	;wreg free
  7261                           ;main.c: 3327: PomiarCO();
  7262  00670E  ECF1  F037         	call	_PomiarCO	;wreg free
  7263                           ;main.c: 3328: PomiarCW();
  7264  006712  ECE4  F03A         	call	_PomiarCW	;wreg free
  7265                           ;main.c: 3329: PomiarCS();
  7266  006716  ECBD  F03F         	call	_PomiarCS	;wreg free
  7267                           ;main.c: 3331: Proba48();
  7268  00671A  DE76               	call	_Proba48	;wreg free
  7269                           ;main.c: 3332: Proba48Z3();
  7270  00671C  DEFE               	call	_Proba48Z3	;wreg free
  7271                           ;main.c: 3334: RefLCDData();
  7272  00671E  ECCE  F020         	call	_RefLCDData	;wreg free
  7273                           ;main.c: 3336: switch(DtKNF.tpkt)
  7274  006722  D0A7               	goto	l872
  7275  006724                     l874:
  7276                           ;main.c: 3339: case 2:
  7277  006724  0100               	movlb	(_M+16) shr (0+8)
  7278  006726  AB7A               	btfss	(_M+16)& (0+255),5,b
  7279  006728  B37A               	btfsc	(_M+16)& (0+255),1,b
  7280  00672A  D007               	goto	l875
  7281  00672C  0E0D               	movlw	13
  7282  00672E  ECC4  F05B         	call	_RdPrt
  7283  006732  E303               	bnc	l875
  7284  006734  ECCE  F027         	call	_ToObiegCO	;wreg free
  7285  006738  D007               	goto	l876
  7286  00673A                     l875:
  7287                           ;main.c: 3343: else
  7288  00673A  0100               	movlb	(_M+16) shr (0+8)
  7289  00673C  A37A               	btfss	(_M+16)& (0+255),1,b
  7290  00673E  B17A               	btfsc	(_M+16)& (0+255),0,b
  7291  006740  D003               	goto	l876
  7292  006742  A77A               	btfss	(_M+16)& (0+255),3,b
  7293  006744  ECF5  F027         	call	_ToObiegCW	;wreg free
  7294  006748                     l876:
  7295                           ;main.c: 3346: if(!M._WYLACZ&&RD2)
  7296  006748  0100               	movlb	(_M+16) shr (0+8)
  7297  00674A  A17A               	btfss	(_M+16)& (0+255),0,b
  7298  00674C  A483               	btfss	3971,2,c	;volatile
  7299  00674E  D09F               	goto	l871
  7300                           ;main.c: 3347: {
  7301  006750  817A               	bsf	(_M+16)& (0+255),0,b
  7302                           ;main.c: 3349: }
  7303  006752  D09D               	goto	l871
  7304  006754                     l879:
  7305                           ;main.c: 3351: }
  7306                           ;main.c: 3353: {
  7307  006754  0100               	movlb	(_M+16) shr (0+8)
  7308  006756  B37A               	btfsc	(_M+16)& (0+255),1,b
  7309  006758  D007               	goto	l880
  7310  00675A  0E0D               	movlw	13
  7311  00675C  ECC4  F05B         	call	_RdPrt
  7312  006760  E303               	bnc	l880
  7313  006762  ECCE  F027         	call	_ToObiegCO	;wreg free
  7314  006766  D00C               	goto	l881
  7315  006768                     l880:
  7316                           ;main.c: 3356: else
  7317  006768  0100               	movlb	(_M+16) shr (0+8)
  7318  00676A  A37A               	btfss	(_M+16)& (0+255),1,b
  7319  00676C  B17A               	btfsc	(_M+16)& (0+255),0,b
  7320  00676E  D008               	goto	l881
  7321  006770  B77A               	btfsc	(_M+16)& (0+255),3,b
  7322  006772  D006               	goto	l881
  7323  006774  A483               	btfss	3971,2,c	;volatile
  7324  006776  D002               	goto	u12070
  7325  006778  0100               	movlb	(_M+16) shr (0+8)
  7326  00677A  B97A               	btfsc	(_M+16)& (0+255),4,b
  7327  00677C                     u12070:
  7328  00677C  ECF5  F027         	call	_ToObiegCW	;wreg free
  7329  006780                     l881:
  7330                           ;main.c: 3359: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!RD
      +                          2&&!M._WYLACZ&&!M._RUSZ_48&&!M._RUSZ_48Z3)
  7331  006780  0100               	movlb	(_M+16) shr (0+8)
  7332  006782  AB7A               	btfss	(_M+16)& (0+255),5,b
  7333  006784  B37A               	btfsc	(_M+16)& (0+255),1,b
  7334  006786  D083               	goto	l871
  7335  006788  B483               	btfsc	3971,2,c	;volatile
  7336  00678A  D081               	goto	l871
  7337  00678C  0100               	movlb	(_M+16) shr (0+8)
  7338  00678E  B17A               	btfsc	(_M+16)& (0+255),0,b
  7339  006790  D07E               	goto	l871
  7340  006792  0100               	movlb	(_M+16) shr (0+8)
  7341  006794  B77A               	btfsc	(_M+16)& (0+255),3,b
  7342  006796  D07B               	goto	l871
  7343  006798  0100               	movlb	(_M+16) shr (0+8)
  7344  00679A  B97A               	btfsc	(_M+16)& (0+255),4,b
  7345  00679C  D078               	goto	l871
  7346                           ;main.c: 3360: {
  7347  00679E  0100               	movlb	(_M+27) shr (0+8)
  7348  0067A0  BF85               	btfsc	(_M+27)& (0+255),7,b
  7349  0067A2  D075               	goto	l871
  7350  0067A4  0E0D               	movlw	13
  7351  0067A6  ECC4  F05B         	call	_RdPrt
  7352  0067AA  D05E               	goto	L18
  7353                           ;main.c: 3362: {
  7354                           ;main.c: 3364: RD2=1;
  7355                           ;main.c: 3365: }
  7356  0067AC                     l885:
  7357                           ;main.c: 3368: }
  7358                           ;main.c: 3370: {
  7359  0067AC  0100               	movlb	(_M+16) shr (0+8)
  7360  0067AE  B37A               	btfsc	(_M+16)& (0+255),1,b
  7361  0067B0  D007               	goto	l886
  7362  0067B2  0E0D               	movlw	13
  7363  0067B4  ECC4  F05B         	call	_RdPrt
  7364  0067B8  E303               	bnc	l886
  7365  0067BA  ECCE  F027         	call	_ToObiegCO	;wreg free
  7366  0067BE  D014               	goto	l887
  7367  0067C0                     l886:
  7368                           ;main.c: 3373: else
  7369  0067C0  0100               	movlb	(_M+16) shr (0+8)
  7370  0067C2  B37A               	btfsc	(_M+16)& (0+255),1,b
  7371  0067C4  D007               	goto	l888
  7372  0067C6  0E0A               	movlw	10
  7373  0067C8  ECC4  F05B         	call	_RdPrt
  7374  0067CC  E303               	bnc	l888
  7375  0067CE  ECF5  F027         	call	_ToObiegCW	;wreg free
  7376  0067D2  D00A               	goto	l887
  7377  0067D4                     l888:
  7378                           ;main.c: 3375: else
  7379  0067D4  0100               	movlb	(_M+16) shr (0+8)
  7380  0067D6  A37A               	btfss	(_M+16)& (0+255),1,b
  7381  0067D8  B483               	btfsc	3971,2,c	;volatile
  7382  0067DA  D006               	goto	l887
  7383  0067DC  B17A               	btfsc	(_M+16)& (0+255),0,b
  7384  0067DE  D004               	goto	l887
  7385  0067E0  0100               	movlb	(_M+16) shr (0+8)
  7386  0067E2  A77A               	btfss	(_M+16)& (0+255),3,b
  7387  0067E4  ECF5  F027         	call	_ToObiegCW	;wreg free
  7388  0067E8                     l887:
  7389                           ;main.c: 3378: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!RD
      +                          2&&!M._WYLACZ&&!M._RUSZ_48)
  7390  0067E8  0100               	movlb	(_M+16) shr (0+8)
  7391  0067EA  AB7A               	btfss	(_M+16)& (0+255),5,b
  7392  0067EC  B37A               	btfsc	(_M+16)& (0+255),1,b
  7393  0067EE  D04F               	goto	l871
  7394  0067F0  B483               	btfsc	3971,2,c	;volatile
  7395  0067F2  D04D               	goto	l871
  7396  0067F4  0100               	movlb	(_M+16) shr (0+8)
  7397  0067F6  B17A               	btfsc	(_M+16)& (0+255),0,b
  7398  0067F8  D04A               	goto	l871
  7399  0067FA  0100               	movlb	(_M+16) shr (0+8)
  7400  0067FC  B77A               	btfsc	(_M+16)& (0+255),3,b
  7401  0067FE  D047               	goto	l871
  7402                           ;main.c: 3379: {
  7403  006800  0100               	movlb	(_M+27) shr (0+8)
  7404  006802  BF85               	btfsc	(_M+27)& (0+255),7,b
  7405  006804  D004               	goto	u12461
  7406  006806  0E0D               	movlw	13
  7407  006808  ECC4  F05B         	call	_RdPrt
  7408  00680C  E22E               	bc	u12720
  7409  00680E                     u12461:
  7410  00680E  0100               	movlb	(_M+27) shr (0+8)
  7411  006810  AF85               	btfss	(_M+27)& (0+255),7,b
  7412  006812  D03D               	goto	l871
  7413  006814  0E0A               	movlw	10
  7414  006816  ECC4  F05B         	call	_RdPrt
  7415  00681A  D026               	goto	L18
  7416                           ;main.c: 3381: {
  7417                           ;main.c: 3383: RD2=1;
  7418                           ;main.c: 3384: }
  7419  00681C                     l893:
  7420                           ;main.c: 3387: }
  7421                           ;main.c: 3389: {
  7422  00681C  0100               	movlb	(_M+16) shr (0+8)
  7423  00681E  B37A               	btfsc	(_M+16)& (0+255),1,b
  7424  006820  D007               	goto	l894
  7425  006822  0E0D               	movlw	13
  7426  006824  ECC4  F05B         	call	_RdPrt
  7427  006828  E303               	bnc	l894
  7428  00682A  ECCE  F027         	call	_ToObiegCO	;wreg free
  7429  00682E  D00A               	goto	l895
  7430  006830                     l894:
  7431                           ;main.c: 3392: else
  7432  006830  0100               	movlb	(_M+16) shr (0+8)
  7433  006832  A37A               	btfss	(_M+16)& (0+255),1,b
  7434  006834  B483               	btfsc	3971,2,c	;volatile
  7435  006836  D006               	goto	l895
  7436  006838  B17A               	btfsc	(_M+16)& (0+255),0,b
  7437  00683A  D004               	goto	l895
  7438  00683C  0100               	movlb	(_M+16) shr (0+8)
  7439  00683E  A77A               	btfss	(_M+16)& (0+255),3,b
  7440  006840  ECF5  F027         	call	_ToObiegCW	;wreg free
  7441  006844                     l895:
  7442                           ;main.c: 3395: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!RD
      +                          2&&!M._WYLACZ&&!M._RUSZ_48)
  7443  006844  0100               	movlb	(_M+16) shr (0+8)
  7444  006846  AB7A               	btfss	(_M+16)& (0+255),5,b
  7445  006848  B37A               	btfsc	(_M+16)& (0+255),1,b
  7446  00684A  D021               	goto	l871
  7447  00684C  B483               	btfsc	3971,2,c	;volatile
  7448  00684E  D01F               	goto	l871
  7449  006850  0100               	movlb	(_M+16) shr (0+8)
  7450  006852  B17A               	btfsc	(_M+16)& (0+255),0,b
  7451  006854  D01C               	goto	l871
  7452  006856  0100               	movlb	(_M+16) shr (0+8)
  7453  006858  B77A               	btfsc	(_M+16)& (0+255),3,b
  7454  00685A  D019               	goto	l871
  7455                           ;main.c: 3396: {
  7456  00685C  0100               	movlb	(_M+27) shr (0+8)
  7457  00685E  BF85               	btfsc	(_M+27)& (0+255),7,b
  7458  006860  D016               	goto	l871
  7459  006862  0E0D               	movlw	13
  7460  006864  ECC4  F05B         	call	_RdPrt
  7461  006868                     L18:
  7462  006868  E312               	bnc	l871
  7463  00686A                     u12720:
  7464                           ;main.c: 3398: {
  7465  00686A  0100               	movlb	(_M+16) shr (0+8)
  7466  00686C  817A               	bsf	(_M+16)& (0+255),0,b
  7467                           ;main.c: 3400: RD2=1;
  7468  00686E  8483               	bsf	3971,2,c	;volatile
  7469                           ;main.c: 3401: }
  7470  006870  D00E               	goto	l871
  7471  006872                     l872:
  7472  006872  C1B9  FFE8         	movff	_DtKNF+7,wreg
  7473  006876  0A00               	xorlw	0
  7474  006878  E099               	bz	l885
  7475  00687A  0A01               	xorlw	1
  7476  00687C  E101 D752          	bz	l874
  7477  006880  0A03               	xorlw	3
  7478  006882  E101 D74F          	bz	l874
  7479  006886  0A01               	xorlw	1
  7480  006888  E101 D764          	bz	l879
  7481  00688C  D7C7               	goto	l893
  7482  00688E                     l871:
  7483                           ;main.c: 3407: if(M._ZMKCOCW) ZmienKCOKCW();
  7484  00688E  0100               	movlb	(_M+16) shr (0+8)
  7485  006890  B37A               	btfsc	(_M+16)& (0+255),1,b
  7486  006892  EC38  F030         	call	_ZmienKCOKCW	;wreg free
  7487                           ;main.c: 3408: if(M._WYLACZ) Wylacz();
  7488  006896  0100               	movlb	(_M+16) shr (0+8)
  7489  006898  B17A               	btfsc	(_M+16)& (0+255),0,b
  7490  00689A  EC0E  F02E         	call	_Wylacz	;wreg free
  7491                           ;main.c: 3409: if(M._VWYBIEG) VWybieg();
  7492  00689E  0100               	movlb	(_M+16) shr (0+8)
  7493  0068A0  BD7A               	btfsc	(_M+16)& (0+255),6,b
  7494  0068A2  EC83  F02F         	call	_VWybieg	;wreg free
  7495                           ;main.c: 3410: if(M._RUSZ_48) Rusz48();
  7496  0068A6  0100               	movlb	(_M+16) shr (0+8)
  7497  0068A8  B77A               	btfsc	(_M+16)& (0+255),3,b
  7498  0068AA  DDC3               	call	_Rusz48	;wreg free
  7499                           ;main.c: 3411: if(M._RUSZ_48Z3) Rusz48Z3();
  7500  0068AC  0100               	movlb	(_M+16) shr (0+8)
  7501  0068AE  B97A               	btfsc	(_M+16)& (0+255),4,b
  7502  0068B0  DE55               	call	_Rusz48Z3	;wreg free
  7503                           ;main.c: 3414: if(RD2)
  7504  0068B2  A483               	btfss	3971,2,c	;volatile
  7505  0068B4  D004               	goto	l904
  7506                           ;main.c: 3415: {
  7507  0068B6  0E63               	movlw	99
  7508  0068B8  CFE8 F02B          	movff	wreg,_PMP+2
  7509                           ;main.c: 3417: }
  7510  0068BC  D002               	goto	l905
  7511  0068BE                     l904:
  7512                           ;main.c: 3418: else
  7513  0068BE  0100               	movlb	(_PMP+2) shr (0+8)
  7514  0068C0  6B2B               	clrf	(_PMP+2)& (0+255),b
  7515  0068C2                     l905:
  7516                           ;main.c: 3421: }
  7517  0068C2  C02B  FFE8         	movff	_PMP+2,wreg
  7518  0068C6  ECB1  F04C         	call	_ProcToPmpPwm
  7519  0068CA  ECDD  F054         	call	_WritePWM2
  7520                           ;main.c: 3425: if(KeyRes())
  7521  0068CE  DE6F               	call	_KeyRes	;wreg free
  7522  0068D0  E201 D6F5          	bnc	l869
  7523                           ;main.c: 3427: {
  7524  0068D4  9683               	bcf	3971,3,c	;volatile
  7525                           ;main.c: 3429: RD2=0;
  7526  0068D6  9483               	bcf	3971,2,c	;volatile
  7527                           ;main.c: 3430: ToReset();
  7528  0068D8  D801               	call	_ToReset	;wreg free
  7529  0068DA  D6F1               	goto	l869
  7530  0068DC                     __end_of_ErrPTG:
  7531                           ;main.c: 3435: void ToReset(void)
  7532                           ;main.c: 3436: {
  7533  0068DC                     _ToReset:
  7534  000000                     
  7535                           ;main.c: 3437: RD3=0;
  7536  0068DC  9683               	bcf	3971,3,c	;volatile
  7537                           ;main.c: 3438: RD2=0;
  7538  0068DE  9483               	bcf	3971,2,c	;volatile
  7539                           ;main.c: 3439: EndErr();
  7540  0068E0  ECCB  F060         	call	_EndErr	;wreg free
  7541                           ;main.c: 3440: BitSet2(&RSDT1.outSTAT0,0,0);
  7542  0068E4  0100               	movlb	__Lparam shr (0+8)
  7543  0068E6  0EAE               	movlw	low (_RSDT1+17)
  7544  0068E8  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7545  0068EA  0E00               	movlw	high (_RSDT1+17)
  7546  0068EC  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7547  0068EE  6BF0               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7548  0068F0  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7549  0068F2  EC39  F061         	call	_BitSet2	;wreg free
  7550                           ;main.c: 3441: BitSet2(&RSDT1.outSTAT0,1,0);
  7551  0068F6  0100               	movlb	__Lparam shr (0+8)
  7552  0068F8  0EAE               	movlw	low (_RSDT1+17)
  7553  0068FA  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7554  0068FC  0E00               	movlw	high (_RSDT1+17)
  7555  0068FE  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7556  006900  0E01               	movlw	1
  7557  006902  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7558  006904  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7559  006906  EC39  F061         	call	_BitSet2	;wreg free
  7560                           ;main.c: 3442: eeprom_write(0x00C0,0x00);
  7561  00690A  0EC0               	movlw	192
  7562  00690C  0100               	movlb	__Lparam shr (0+8)
  7563  00690E  6FEC               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  7564  006910  6BED               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  7565  006912  6BEE               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  7566  006914  EC6E  F062         	call	_eeprom_write	;wreg free
  7567                           ;main.c: 3443: StartRTS(2);
  7568  006918  0E02               	movlw	2
  7569  00691A  EC35  F05C         	call	_StartRTS
  7570                           ;main.c: 3444: while(RTS(2)<1)
  7571  00691E                     l908:
  7572  00691E  0E02               	movlw	2
  7573  006920  EC4D  F05C         	call	_RTS
  7574  006924  6E00               	movwf	btemp,c
  7575  006926  0E01               	movlw	1
  7576  006928  5C00               	subwf	btemp,w,c
  7577  00692A  E204               	bc	l911
  7578                           ;main.c: 3445: {
  7579  00692C  0004               	clrwdt		;#
  7580                           ;main.c: 3447: ReceptDataLCD();
  7581  00692E  EC6D  F059         	call	_ReceptDataLCD	;wreg free
  7582  006932  D7F5               	goto	l908
  7583                           ;main.c: 3448: }
  7584  006934                     l911:
  7585  006934  D7FF               	goto	l911
  7586  006936                     __end_of_ToReset:
  7587                           ;main.c: 3453: void InitGlobal(void)
  7588                           ;main.c: 3454: {
  7589  006936                     _InitGlobal:
  7590  000000                     
  7591                           ;main.c: 3456: IPEN=1;
  7592  006936  8ED0               	bsf	4048,7,c
  7593                           ;main.c: 3458: GIEH=1;
  7594  006938  8EF2               	bsf	intcon,7,c
  7595                           ;main.c: 3459: GIEL=1;
  7596  00693A  8CF2               	bsf	intcon,6,c
  7597                           ;main.c: 3460: }
  7598  00693C  0012               	return	
  7599  00693E                     __end_of_InitGlobal:
  7600  000000                     
  7601  000000                     
  7602  000000                     
  7603  000000                     
  7604  000000                     
  7605  000000                     
  7606  000000                     
  7607  000000                     
  7608  000000                     
  7609  000000                     
  7610  000000                     
  7611  000000                     
  7612  000000                     
  7613  000000                     
  7614  000000                     
  7615  000000                     
  7616  000000                     
  7617  000000                     
  7618  000000                     
  7619  000000                     
  7620  000000                     
  7621  000000                     
  7622  000000                     
  7623  000000                     
  7624  000000                     
  7625  000000                     
  7626  000000                     
  7627  000000                     
  7628  000000                     
  7629  000000                     
  7630  000000                     
  7631  000000                     
  7632  000000                     
  7633  000000                     
  7634  000000                     
  7635  000000                     
  7636  000000                     
  7637  000000                     
  7638  000000                     
  7639  000000                     
  7640  000000                     
  7641  000000                     
  7642  000000                     
  7643  000000                     
  7644  000000                     
  7645  000000                     
  7646  000000                     
  7647  000000                     
  7648  000000                     
  7649  000000                     
  7650  000000                     
  7651  000000                     
  7652  000000                     
  7653  000000                     
  7654  000000                     
  7655  000000                     
  7656  000000                     
  7657  000000                     
  7658  000000                     
  7659  000000                     
  7660  000000                     
  7661  000000                     
  7662  000000                     
  7663  000000                     
  7664  000000                     
  7665  000000                     
  7666  000000                     
  7667  000000                     
  7668  000000                     
  7669  000000                     
  7670  000000                     
  7671  000000                     
  7672  000000                     
  7673  000000                     
  7674  000000                     
  7675  000000                     
  7676  000000                     
  7677  000000                     
  7678  000000                     
  7679  000000                     
  7680  000000                     
  7681  000000                     
  7682  000000                     
  7683  000000                     
  7684  000000                     
  7685  000000                     
  7686  000000                     
  7687  000000                     
  7688  000000                     
  7689  000000                     
  7690  000000                     
  7691  000000                     
  7692  000000                     
  7693  000000                     
  7694  000000                     
  7695  000000                     
  7696  000000                     
  7697  000000                     
  7698  000000                     
  7699  000000                     
  7700  000000                     
  7701  000000                     
  7702  000000                     
  7703  000000                     
  7704  000000                     
  7705  000000                     
  7706  000000                     
  7707  000000                     
  7708  000000                     
  7709  000000                     
  7710  000000                     
  7711  000000                     
  7712  000000                     
  7713  000000                     
  7714  000000                     
  7715  000000                     
  7716  000000                     
  7717  000000                     
  7718  000000                     
  7719  000000                     
  7720  000000                     
  7721  000000                     
  7722  000000                     
  7723  000000                     
  7724  000000                     
  7725  000000                     
  7726  000000                     
  7727  000000                     
  7728  000000                     
  7729  000000                     
  7730  000000                     
  7731  000000                     
  7732  000000                     
  7733  000000                     
  7734  000000                     
  7735  000000                     
  7736  000000                     
  7737  000000                     
  7738  000000                     
  7739  000000                     
  7740  000000                     
  7741  000000                     
  7742  000000                     
  7743  000000                     
  7744  000000                     
  7745  000000                     
  7746  000000                     
  7747  000000                     
  7748  000000                     
  7749  000000                     
  7750  000000                     
  7751  000000                     
  7752  000000                     
  7753  000000                     
  7754  000000                     
  7755  000000                     
  7756  000000                     
  7757  000000                     
  7758  000000                     
  7759  000000                     
  7760  000000                     
  7761  000000                     
  7762  000000                     
  7763  000000                     
  7764  000000                     
  7765  000000                     
  7766  000000                     
  7767  000000                     
  7768  000000                     
  7769  000000                     
  7770  000000                     
  7771  000000                     
  7772  000000                     
  7773  000000                     
  7774  000000                     
  7775  000000                     
  7776  000000                     
  7777  000000                     
  7778  000000                     
  7779  000000                     
  7780  000000                     
  7781  000000                     
  7782  000000                     
  7783  000000                     
  7784  000000                     
  7785  000000                     
  7786  000000                     
  7787  000000                     
  7788  000000                     
  7789  000000                     
  7790  000000                     
  7791  000000                     
  7792  000000                     
  7793  000000                     
  7794  000000                     
  7795  000000                     
  7796  000000                     
  7797  000000                     
  7798  000000                     
  7799  000000                     
  7800  000000                     
  7801  000000                     
  7802  000000                     
  7803  000000                     
  7804  000000                     
  7805  000000                     
  7806  000000                     
  7807  000000                     
  7808  000000                     
  7809  000000                     
  7810  000000                     
  7811  000000                     
  7812  000000                     
  7813  000000                     
  7814  000000                     
  7815  000000                     
  7816  000000                     
  7817  000000                     
  7818  000000                     
  7819  000000                     
  7820  000000                     
  7821  000000                     
  7822  000000                     
  7823  000000                     
  7824  000000                     
  7825  000000                     
  7826  000000                     
  7827  000000                     
  7828  000000                     
  7829  000000                     
  7830  000000                     
  7831  000000                     
  7832  000000                     
  7833  000000                     
  7834  000000                     
  7835  000000                     
  7836  000000                     
  7837  000000                     
  7838  000000                     
  7839  000000                     
  7840  000000                     
  7841  000000                     
  7842  000000                     
  7843  000000                     
  7844  000000                     
  7845  000000                     
  7846  000000                     
  7847  000000                     
  7848  000000                     
  7849  000000                     
  7850  000000                     
  7851  000000                     
  7852  000000                     
  7853  000000                     
  7854  000000                     
  7855  000000                     
  7856  000000                     
  7857  000000                     
  7858  000000                     
  7859  000000                     
  7860  000000                     
  7861  000000                     
  7862  000000                     
  7863  000000                     
  7864  000000                     
  7865  000000                     
  7866  000000                     
  7867  000000                     
  7868  000000                     
  7869  000000                     
  7870  000000                     
  7871  000000                     
  7872  000000                     
  7873  000000                     
  7874  000000                     
  7875  000000                     
  7876  000000                     
  7877  000000                     
  7878  000000                     
  7879  000000                     
  7880  000000                     
  7881  000000                     
  7882  000000                     
  7883  000000                     
  7884  000000                     
  7885  000000                     
  7886  000000                     
  7887  000000                     
  7888  000000                     
  7889  000000                     
  7890  000000                     
  7891  000000                     
  7892  000000                     
  7893  000000                     
  7894  000000                     
  7895  000000                     
  7896  000000                     
  7897  000000                     
  7898  000000                     
  7899  000000                     
  7900  000000                     
  7901  000000                     
  7902  000000                     
  7903  000000                     
  7904  000000                     
  7905  000000                     
  7906  000000                     
  7907  000000                     
  7908  000000                     
  7909  000000                     
  7910  000000                     
  7911  000000                     
  7912  000000                     
  7913  000000                     
  7914  000000                     
  7915  000000                     
  7916  000000                     
  7917  000000                     
  7918  000000                     
  7919  000000                     
  7920  000000                     
  7921  000000                     
  7922  000000                     
  7923  000000                     
  7924  000000                     
  7925  000000                     
  7926  000000                     
  7927  000000                     
  7928  000000                     
  7929  000000                     
  7930  000000                     
  7931  000000                     
  7932  000000                     
  7933  000000                     
  7934  000000                     
  7935  000000                     
  7936  000000                     
  7937  000000                     
  7938  000000                     
  7939  000000                     
  7940  000000                     
  7941  000000                     
  7942  000000                     
  7943  000000                     
  7944  000000                     
  7945  000000                     
  7946  000000                     
  7947  000000                     
  7948  000000                     
  7949  000000                     
  7950  000000                     
  7951  000000                     
  7952  000000                     
  7953  000000                     
  7954  000000                     
  7955  000000                     
  7956  000000                     
  7957  000000                     
  7958  000000                     
  7959  000000                     
  7960  000000                     
  7961  000000                     
  7962  000000                     
  7963  000000                     
  7964  000000                     
  7965  000000                     
  7966  000000                     
  7967  000000                     
  7968  000000                     
  7969  000000                     
  7970  000000                     
  7971  000000                     
  7972  000000                     
  7973  000000                     
  7974  000000                     
  7975  000000                     
  7976  000000                     
  7977  000000                     
  7978  000000                     
  7979  000000                     
  7980  000000                     
  7981  000000                     
  7982  000000                     
  7983  000000                     
  7984  000000                     
  7985  000000                     
  7986  000000                     
  7987  000000                     
  7988  000000                     
  7989  000000                     
  7990  000000                     
  7991  000000                     
  7992  000000                     
  7993  000000                     
  7994  000000                     
  7995  000000                     
  7996  000000                     
  7997  000000                     
  7998  000000                     
  7999  000000                     
  8000  000000                     
  8001  000000                     
  8002  000000                     
  8003  000000                     
  8004  000000                     
  8005  000000                     
  8006  000000                     
  8007  000000                     
  8008  000000                     
  8009  000000                     
  8010  000000                     
  8011  000000                     
  8012  000000                     
  8013  000000                     
  8014  000000                     
  8015  000000                     
  8016  000000                     
  8017  000000                     
  8018  000000                     
  8019  000000                     
  8020  000000                     
  8021  000000                     
  8022  000000                     
  8023  000000                     
  8024  000000                     
  8025  000000                     
  8026  000000                     
  8027  000000                     
  8028  000000                     
  8029  000000                     
  8030  000000                     
  8031  000000                     
  8032  000000                     
  8033  000000                     
  8034  000000                     
  8035  000000                     
  8036  000000                     
  8037  000000                     
  8038  000000                     
  8039  000000                     
  8040  000000                     
  8041  000000                     
  8042  000000                     
  8043  000000                     
  8044  000000                     
  8045  000000                     
  8046  000000                     
  8047  000000                     
  8048  000000                     
  8049  000000                     
  8050  000000                     
  8051  000000                     
  8052  000000                     
  8053  000000                     
  8054  000000                     
  8055  000000                     
  8056  000000                     
  8057  000000                     
  8058  000000                     
  8059  000000                     
  8060  000000                     
  8061  000000                     
  8062  000000                     
  8063  000000                     
  8064  000000                     
  8065  000000                     
  8066  000000                     
  8067  000000                     
  8068  000000                     
  8069  000000                     
  8070  000000                     
  8071  000000                     
  8072  000000                     
  8073  000000                     
  8074  000000                     
  8075  000000                     
  8076  000000                     
  8077  000000                     
  8078  000000                     
  8079  000000                     
  8080  000000                     
  8081  000000                     
  8082  000000                     
  8083  000000                     
  8084  000000                     
  8085  000000                     
  8086  000000                     
  8087  000000                     
  8088  000000                     
  8089  000000                     
  8090  000000                     
  8091  000000                     
  8092  000000                     
  8093  000000                     
  8094  000000                     
  8095  000000                     
  8096  000000                     
  8097  000000                     
  8098  000000                     
  8099  000000                     
  8100  000000                     
  8101  000000                     
  8102  000000                     
  8103  000000                     
  8104  000000                     
  8105  000000                     
  8106  000000                     
  8107  000000                     
  8108  000000                     
  8109  000000                     
  8110  000000                     
  8111  000000                     
  8112  000000                     
  8113  000000                     
  8114  000000                     
  8115  000000                     
  8116  000000                     
  8117  000000                     
  8118  000000                     
  8119  000000                     
  8120  000000                     
  8121  000000                     
  8122  000000                     
  8123  000000                     
  8124  000000                     
  8125  000000                     
  8126  000000                     
  8127  000000                     
  8128  000000                     
  8129  000000                     
  8130  000000                     
  8131  000000                     
  8132  000000                     
  8133  000000                     
  8134  000000                     
  8135  000000                     
  8136  000000                     
  8137  000000                     
  8138  000000                     
  8139  000000                     
  8140  000000                     
  8141  000000                     
  8142  000000                     
  8143  000000                     
  8144  000000                     
  8145  000000                     
  8146  000000                     
  8147  000000                     
  8148  000000                     
  8149  000000                     
  8150  000000                     
  8151  000000                     
  8152  000000                     
  8153  000000                     
  8154  000000                     
  8155  000000                     
  8156  000000                     
  8157  000000                     
  8158  000000                     
  8159  000000                     
  8160  000000                     
  8161                           
  8162                           	psect	eeprom_data
  8163                           ;main.h: 127: extern void GoldenEye(void);
  8164                           ;main.h: 130: void InitGlobal(void);
  8165                           ;main.h: 131: void ErrDTF(void);
  8166                           ;main.h: 132: void ErrPTG(void);
  8167                           ;main.h: 133: void ToReset(void);
  8168                           ;main.h: 134: void DecWSW(void);
  8169                           ;main.h: 135: void DecERR(void);
  8170                           ;main.h: 136: void DecSTR(void);
  8171                           ;main.h: 137: void DecRozruch(void);
  8172                           ;main.h: 138: void SetRozruch(void);
  8173                           ;main.h: 139: void DecWylacz(void);
  8174                           ;main.h: 140: void SetWylacz(void);
  8175                           ;main.h: 141: void RuszPlomien(void);
  8176                           ;main.h: 142: void ReloadPlomien(void);
  8177                           ;main.h: 143: void RuszCiag(void);
  8178                           ;main.h: 144: void ReloadCiag(void);
  8179                           ;main.h: 145: void Proba48(void);
  8180                           ;main.h: 146: void Rusz48(void);
  8181                           ;main.h: 147: void Proba48Z3(void);
  8182                           ;main.h: 148: void Rusz48Z3(void);
  8183                           ;main.h: 149: void Rozruch(void);
  8184                           ;main.h: 150: void DecyzjaPLM(void);
  8185                           ;main.h: 151: void DecyzjaPLM2(void);
  8186                           ;main.h: 152: void VWybieg(void);
  8187                           ;main.h: 153: void ZmienKCOKCW(void);
  8188                           ;main.h: 154: void FunkcjaSerwisowa(void);
  8189                           ;main.h: 155: void KolejkaPobudzen(void);
  8190                           ;main.h: 156: void BlokadaL3(void);
  8191                           ;main.h: 157: void Blokada15S(void);
  8192                           ;main.h: 158: void ToObiegCW(void);
  8193                           ;main.h: 159: void ToObiegCO(void);
  8194                           ;main.h: 160: void Wylacz(void);
  8195                           ;main.h: 161: void RuszPWR(void);
  8196                           ;main.h: 162: void ClearData(void);
  8197                           ;main.h: 163: void SetLoMod(void);
  8198                           ;main.h: 164: void RestartFltPrt(void);
  8199                           ;main.h: 165: void ClearDiode(void);
  8200                           ;main.h: 166: void DecyzjaAntyLeg(void);
  8201                           ;main.h: 167: void DetekcjaPrzeplywuWG(void);
  8202                           ;main.h: 168: void OczekujNaPrzeplywWG(void);
  8203                           ;main.h: 169: void RefLCDData(void);
  8204                           ;main.h: 170: void GrzejON(void);
  8205                           ;main.h: 171: void GrzejOFF(void);
  8206                           ;main.h: 174: extern void InitOsc(void);
  8207                           ;main.h: 176: extern void InitAC(void);
  8208                           ;main.h: 178: extern void InitWsw(void);
  8209                           ;main.h: 179: extern bit GetPoz(const unsigned c
      +                          har nrkol,const unsigned char nrpoz);
  8210                           ;main.h: 181: extern void InitPWM(void);
  8211                           ;main.h: 182: extern void WritePWM(const unsigne
      +                          d char tpwm);
  8212                           ;main.h: 183: extern void WriteOPWM(unsigned cha
      +                          r tpwm);
  8213                           ;main.h: 184: extern void WritePWM2(const unsign
      +                          ed char tpwm);
  8214                           ;main.h: 186: extern void ClsScr(void);
  8215                           ;main.h: 187: extern void EndClsScr(void);
  8216                           ;main.h: 188: extern void TestScr(void);
  8217                           ;main.h: 189: extern void EndTestScr(void);
  8218                           ;main.h: 190: extern void ClsScr(void);
  8219                           ;main.h: 191: extern void EndClsScr(void);
  8220                           ;main.h: 192: extern void PrintErr(const unsigne
      +                          d char kod, const unsigned char pls);
  8221                           ;main.h: 193: extern void PrintErrCs(const unsig
      +                          ned char kod,const unsigned char cs, const unsig
      +                          ned char pls);
  8222                           ;main.h: 194: extern void PrintErrTm(const unsig
      +                          ned char kod,const unsigned char tm, const unsig
      +                          ned char pls);
  8223                           ;main.h: 195: extern void EndErr(void);
  8224                           ;main.h: 196: extern void PrintPR(const unsigned
      +                           char lkod,unsigned char nkod,unsigned char tryb
      +                          );
  8225                           ;main.h: 197: extern void EndPR(void);
  8226                           ;main.h: 198: extern void PrintNstCO(const unsig
      +                          ned char nst);
  8227                           ;main.h: 199: extern void PrintNstCW(const unsig
      +                          ned char nst);
  8228                           ;main.h: 200: extern void PrintNstKt(const unsig
      +                          ned char nst);
  8229                           ;main.h: 201: extern void EndNst(void);
  8230                           ;main.h: 202: extern void PrintL3(void);
  8231                           ;main.h: 203: extern void EndL3(void);
  8232                           ;main.h: 204: extern void PrintTdzCO(const unsig
      +                          ned char tm);
  8233                           ;main.h: 205: extern void EndTdzCO(void);
  8234                           ;main.h: 206: extern void PrintTdzCW(const unsig
      +                          ned char tm);
  8235                           ;main.h: 207: extern void EndTdzCW(void);
  8236                           ;main.h: 208: extern void PrintOFF(void);
  8237                           ;main.h: 209: extern void EndOFF(void);
  8238                           ;main.h: 210: extern void PrintCS(const unsigned
      +                           char cs);
  8239                           ;main.h: 211: extern void EndCS(void);
  8240                           ;main.h: 212: extern void PrintCW(const unsigned
      +                           char tm);
  8241                           ;main.h: 213: extern void EndCW(void);
  8242                           ;main.h: 214: extern void PrintCO(const unsigned
      +                           char tm);
  8243                           ;main.h: 215: extern void PrintHex(const unsigne
      +                          d char tm);
  8244                           ;main.h: 216: extern void SetDiode(unsigned char
      +                           nrd, unsigned char stn);
  8245                           ;main.h: 217: extern void RefreshNst(const unsig
      +                          ned char nst);
  8246                           ;main.h: 219: extern bit GetBit(const unsigned c
      +                          har data,const unsigned char nbit);
  8247                           ;main.h: 220: extern void BitSet(unsigned char *
      +                          data, const unsigned char nbit,const unsigned ch
      +                          ar bt);
  8248                           ;main.h: 221: extern void BitSet2(unsigned char 
      +                          *data, const unsigned char nbit,const unsigned c
      +                          har bt);
  8249                           ;main.h: 223: extern void StartRTG(const unsigne
      +                          d char Index);
  8250                           ;main.h: 224: extern unsigned char RTG(const uns
      +                          igned char Index);
  8251                           ;main.h: 225: extern void StartRTS(const unsigne
      +                          d char Index);
  8252                           ;main.h: 226: extern unsigned char RTS(const uns
      +                          igned char Index);
  8253                           ;main.h: 227: extern void StartRTdS(const unsign
      +                          ed char Index);
  8254                           ;main.h: 228: extern unsigned char RTdS(const un
      +                          signed char Index);
  8255                           ;main.h: 230: extern void InitTimer1(void);
  8256                           ;main.h: 232: extern void InitPort(void);
  8257                           ;main.h: 233: extern bit RdPrt(const unsigned ch
      +                          ar Index);
  8258                           ;main.h: 234: extern void SetPrt(const unsigned 
      +                          char Index, const unsigned char nw);
  8259                           ;main.h: 235: extern void RefPrt(const unsigned 
      +                          char Index);
  8260                           ;main.h: 237: extern void PwrOnDelay(void);
  8261                           ;main.h: 239: extern void InitI2C(void);
  8262                           ;main.h: 240: extern void StartI2CTim(void);
  8263  F00000  63 63 62 62 61 60  	db	99,99,98,98,97,96,95,95	;#
      +       5F 5F              
  8264                           ;eeprom.h: 136: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "94" "," "93" "," "92" ","
      +                           "92" "," "91" "," "90" "," "90" "," "89");
  8265  F00008  5E 5D 5C 5C 5B 5A  	db	94,93,92,92,91,90,90,89	;#
      +       5A 59              
  8266                           ;eeprom.h: 137: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "88" "," "88" "," "87" ","
      +                           "87" "," "86" "," "85" "," "85" "," "84");
  8267  F00010  58 58 57 57 56 55  	db	88,88,87,87,86,85,85,84	;#
      +       55 54              
  8268                           ;eeprom.h: 138: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "84" "," "83" "," "82" ","
      +                           "82" "," "81" "," "81" "," "80" "," "80");
  8269  F00018  54 53 52 52 51 51  	db	84,83,82,82,81,81,80,80	;#
      +       50 50              
  8270                           ;eeprom.h: 139: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "79" "," "79" "," "78" ","
      +                           "77" "," "77" "," "76" "," "76" "," "75");
  8271  F00020  4F 4F 4E 4D 4D 4C  	db	79,79,78,77,77,76,76,75	;#
      +       4C 4B              
  8272                           ;eeprom.h: 140: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "75" "," "74" "," "74" ","
      +                           "73" "," "73" "," "72" "," "72" "," "71");
  8273  F00028  4B 4A 4A 49 49 48  	db	75,74,74,73,73,72,72,71	;#
      +       48 47              
  8274                           ;eeprom.h: 141: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "71" "," "70" "," "70" ","
      +                           "70" "," "69" "," "69" "," "68" "," "68");
  8275  F00030  47 46 46 46 45 45  	db	71,70,70,70,69,69,68,68	;#
      +       44 44              
  8276                           ;eeprom.h: 142: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "67" "," "67" "," "66" ","
      +                           "66" "," "65" "," "65" "," "64" "," "64");
  8277  F00038  43 43 42 42 41 41  	db	67,67,66,66,65,65,64,64	;#
      +       40 40              
  8278                           ;eeprom.h: 143: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "64" "," "63" "," "63" ","
      +                           "62" "," "62" "," "61" "," "61" "," "61");
  8279  F00040  40 3F 3F 3E 3E 3D  	db	64,63,63,62,62,61,61,61	;#
      +       3D 3D              
  8280                           ;eeprom.h: 144: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "60" "," "60" "," "59" ","
      +                           "59" "," "58" "," "58" "," "57" "," "57");
  8281  F00048  3C 3C 3B 3B 3A 3A  	db	60,60,59,59,58,58,57,57	;#
      +       39 39              
  8282                           ;eeprom.h: 145: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "57" "," "56" "," "56" ","
      +                           "55" "," "55" "," "54" "," "54" "," "54");
  8283  F00050  39 38 38 37 37 36  	db	57,56,56,55,55,54,54,54	;#
      +       36 36              
  8284                           ;eeprom.h: 146: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "53" "," "53" "," "52" ","
      +                           "52" "," "52" "," "51" "," "51" "," "50");
  8285  F00058  35 35 34 34 34 33  	db	53,53,52,52,52,51,51,50	;#
      +       33 32              
  8286                           ;eeprom.h: 147: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "50" "," "49" "," "49" ","
      +                           "49" "," "48" "," "48" "," "47" "," "47");
  8287  F00060  32 31 31 31 30 30  	db	50,49,49,49,48,48,47,47	;#
      +       2F 2F              
  8288                           ;eeprom.h: 148: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "46" "," "46" "," "46" ","
      +                           "45" "," "45" "," "44" "," "44" "," "44");
  8289  F00068  2E 2E 2E 2D 2D 2C  	db	46,46,46,45,45,44,44,44	;#
      +       2C 2C              
  8290                           ;eeprom.h: 149: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "43" "," "43" "," "42" ","
      +                           "42" "," "41" "," "41" "," "41" "," "40");
  8291  F00070  2B 2B 2A 2A 29 29  	db	43,43,42,42,41,41,41,40	;#
      +       29 28              
  8292                           ;eeprom.h: 150: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "40" "," "39" "," "39" ","
      +                           "38" "," "38" "," "37" "," "37" "," "37");
  8293  F00078  28 27 27 26 26 25  	db	40,39,39,38,38,37,37,37	;#
      +       25 25              
  8294                           ;eeprom.h: 151: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "36" "," "36" "," "35" ","
      +                           "35" "," "34" "," "34" "," "33" "," "33");
  8295  F00080  24 24 23 23 22 22  	db	36,36,35,35,34,34,33,33	;#
      +       21 21              
  8296                           ;eeprom.h: 152: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "32" "," "32" "," "31" ","
      +                           "31" "," "30" "," "30" "," "29" "," "29");
  8297  F00088  20 20 1F 1F 1E 1E  	db	32,32,31,31,30,30,29,29	;#
      +       1D 1D              
  8298                           ;eeprom.h: 153: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "28" "," "28" "," "27" ","
      +                           "27" "," "26" "," "26" "," "25" "," "24");
  8299  F00090  1C 1C 1B 1B 1A 1A  	db	28,28,27,27,26,26,25,24	;#
      +       19 18              
  8300                           ;eeprom.h: 154: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "24" "," "23" "," "23" ","
      +                           "22" "," "22" "," "21" "," "21" "," "20");
  8301  F00098  18 17 17 16 16 15  	db	24,23,23,22,22,21,21,20	;#
      +       15 14              
  8302                           ;eeprom.h: 155: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "19" "," "19" "," "18" ","
      +                           "17" "," "17" "," "16" "," "16" "," "15");
  8303  F000A0  13 13 12 11 11 10  	db	19,19,18,17,17,16,16,15	;#
      +       10 0F              
  8304                           ;eeprom.h: 156: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "14" "," "14" "," "13" ","
      +                           "12" "," "11" "," "11" "," "10" "," "09");
  8305  F000A8  0E 0E 0D 0C 0B 0B  	db	14,14,13,12,11,11,10,9	;#
      +       0A 09              
  8306                           ;eeprom.h: 157: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "08" "," "07" "," "06" ","
      +                           "06" "," "05" "," "04" "," "03" "," "02");
  8307  F000B0  08 07 06 06 05 04  	db	8,7,6,6,5,4,3,2	;#
      +       03 02              
  8308                           ;eeprom.h: 158: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "01" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8309  F000B8  01 00 00 00 00 00  	db	1,0,0,0,0,0,0,0	;#
      +       00 00              
  8310                           ;eeprom.h: 189: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "40" "," "99" "," 
      +                          "99" "," "0" "," "3" "," "0" "," "0");
  8311  F000C0  00 28 63 63 00 03  	db	0,40,99,99,0,3,0,0	;#
      +       00 00              
  8312                           ;eeprom.h: 190: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "1" "," "85" "," "60" "," 
      +                          "3" "," "0" "," "0" "," "00" "," "00");
  8313  F000C8  01 55 3C 03 00 00  	db	1,85,60,3,0,0,0,0	;#
      +       00 00              
  8314                           ;eeprom.h: 192: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "6" "," "50" "," "
      +                          99" "," "99" "," "5" "," "89" "," "0");
  8315  F000D0  00 06 32 63 63 05  	db	0,6,50,99,99,5,89,0	;#
      +       59 00              
  8316                           ;eeprom.h: 193: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "0" "," "0" "," "0
      +                          " "," "0" "," "0" "," "0" "," "0");
  8317  F000D8  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8318                           ;eeprom.h: 194: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "0" "," "0" "," "0
      +                          " "," "0" "," "0" "," "0" "," "0");
  8319  F000E0  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8320                           ;eeprom.h: 195: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0" "," "0" "," "0" "," "0
      +                          " "," "0" "," "0" "," "0" "," "0");
  8321  F000E8  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8322                           ;eeprom.h: 199: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "40" "," "40" "," "39" ","
      +                           "38" "," "38" "," "37" "," "36" "," "36");
  8323  F000F0  28 28 27 26 26 25  	db	40,40,39,38,38,37,36,36	;#
      +       24 24              
  8324                           ;eeprom.h: 200: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "35" "," "34" "," "34" ","
      +                           "33" "," "33" "," "32" "," "32" "," "31");
  8325  F000F8  23 22 22 21 21 20  	db	35,34,34,33,33,32,32,31	;#
      +       20 1F              
  8326                           ;eeprom.h: 201: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "31" "," "30" "," "30" ","
      +                           "29" "," "29" "," "28" "," "28" "," "27");
  8327  F00100  1F 1E 1E 1D 1D 1C  	db	31,30,30,29,29,28,28,27	;#
      +       1C 1B              
  8328                           ;eeprom.h: 202: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "27" "," "26" "," "26" ","
      +                           "25" "," "25" "," "24" "," "24" "," "23");
  8329  F00108  1B 1A 1A 19 19 18  	db	27,26,26,25,25,24,24,23	;#
      +       18 17              
  8330                           ;eeprom.h: 203: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "23" "," "22" "," "22" ","
      +                           "22" "," "21" "," "21" "," "20" "," "20");
  8331  F00110  17 16 16 16 15 15  	db	23,22,22,22,21,21,20,20	;#
      +       14 14              
  8332                           ;eeprom.h: 204: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "20" "," "19" "," "19" ","
      +                           "18" "," "18" "," "18" "," "17" "," "17");
  8333  F00118  14 13 13 12 12 12  	db	20,19,19,18,18,18,17,17	;#
      +       11 11              
  8334                           ;eeprom.h: 205: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "17" "," "16" "," "16" ","
      +                           "15" "," "15" "," "15" "," "14" "," "14");
  8335  F00120  11 10 10 0F 0F 0F  	db	17,16,16,15,15,15,14,14	;#
      +       0E 0E              
  8336                           ;eeprom.h: 206: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "14" "," "13" "," "13" ","
      +                           "13" "," "12" "," "12" "," "12" "," "11");
  8337  F00128  0E 0D 0D 0D 0C 0C  	db	14,13,13,13,12,12,12,11	;#
      +       0C 0B              
  8338                           ;eeprom.h: 207: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "11" "," "11" "," "10" ","
      +                           "10" "," "10" "," "9" "," "9" "," "9");
  8339  F00130  0B 0B 0A 0A 0A 09  	db	11,11,10,10,10,9,9,9	;#
      +       09 09              
  8340                           ;eeprom.h: 208: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "8" "," "8" "," "8" "," "7
      +                          " "," "7" "," "7" "," "6" "," "6");
  8341  F00138  08 08 08 07 07 07  	db	8,8,8,7,7,7,6,6	;#
      +       06 06              
  8342                           ;eeprom.h: 209: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "6" "," "5" "," "5" "," "5
      +                          " "," "4" "," "4" "," "4" "," "3");
  8343  F00140  06 05 05 05 04 04  	db	6,5,5,5,4,4,4,3	;#
      +       04 03              
  8344                           ;eeprom.h: 210: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "3" "," "3" "," "2" "," "2
      +                          " "," "2" "," "1" "," "1" "," "1");
  8345  F00148  03 03 02 02 02 01  	db	3,3,2,2,2,1,1,1	;#
      +       01 01              
  8346                           ;eeprom.h: 211: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "1" "," "0" "," "0" "," "0
      +                          " "," "-1" "," "-1" "," "-1" "," "-2");
  8347  F00150  01 00 00 00 FF FF  	db	1,0,0,0,-1,-1,-1,-2	;#
      +       FF FE              
  8348                           ;eeprom.h: 212: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-2" "," "-2" "," "-2" ","
      +                           "-3" "," "-3" "," "-3" "," "-4" "," "-4");
  8349  F00158  FE FE FE FD FD FD  	db	-2,-2,-2,-3,-3,-3,-4,-4	;#
      +       FC FC              
  8350                           ;eeprom.h: 213: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-4" "," "-5" "," "-5" ","
      +                           "-5" "," "-6" "," "-6" "," "-6" "," "-7");
  8351  F00160  FC FB FB FB FA FA  	db	-4,-5,-5,-5,-6,-6,-6,-7	;#
      +       FA F9              
  8352                           ;eeprom.h: 214: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-7" "," "-7" "," "-8" ","
      +                           "-8" "," "-8" "," "-9" "," "-9" "," "-9");
  8353  F00168  F9 F9 F8 F8 F8 F7  	db	-7,-7,-8,-8,-8,-9,-9,-9	;#
      +       F7 F7              
  8354                           ;eeprom.h: 215: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-9" "," "-10" "," "-10" "
      +                          ," "-10" "," "-11" "," "-11" "," "-11" "," "-12"
      +                          );
  8355  F00170  F7 F6 F6 F6 F5 F5  	db	-9,-10,-10,-10,-11,-11,-11,-12	;#
      +       F5 F4              
  8356                           ;eeprom.h: 216: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-12" "," "-13" "," "-13" 
      +                          "," "-13" "," "-13" "," "-14" "," "-14" "," "-14
      +                          ");
  8357  F00178  F4 F3 F3 F3 F3 F2  	db	-12,-13,-13,-13,-13,-14,-14,-14	;#
      +       F2 F2              
  8358                           ;eeprom.h: 217: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-15" "," "-15" "," "-16" 
      +                          "," "-16" "," "-16" "," "-17" "," "-17" "," "-17
      +                          ");
  8359  F00180  F1 F1 F0 F0 F0 EF  	db	-15,-15,-16,-16,-16,-17,-17,-17	;#
      +       EF EF              
  8360                           ;eeprom.h: 218: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-18" "," "-18" "," "-18" 
      +                          "," "-19" "," "-19" "," "-20" "," "-20" "," "-20
      +                          ");
  8361  F00188  EE EE EE ED ED EC  	db	-18,-18,-18,-19,-19,-20,-20,-20	;#
      +       EC EC              
  8362                           ;eeprom.h: 219: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-21" "," "-21" "," "-22" 
      +                          "," "-22" "," "-22" "," "-23" "," "-23" "," "-24
      +                          ");
  8363  F00190  EB EB EA EA EA E9  	db	-21,-21,-22,-22,-22,-23,-23,-24	;#
      +       E9 E8              
  8364                           ;eeprom.h: 220: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-24" "," "-25" "," "-25" 
      +                          "," "-25" "," "-26" "," "-26" "," "-27" "," "-27
      +                          ");
  8365  F00198  E8 E7 E7 E7 E6 E6  	db	-24,-25,-25,-25,-26,-26,-27,-27	;#
      +       E5 E5              
  8366                           ;eeprom.h: 221: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-28" "," "-28" "," "-29" 
      +                          "," "-29" "," "-30" "," "-30" "," "-31" "," "-31
      +                          ");
  8367  F001A0  E4 E4 E3 E3 E2 E2  	db	-28,-28,-29,-29,-30,-30,-31,-31	;#
      +       E1 E1              
  8368                           ;eeprom.h: 222: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-32" "," "-33" "," "-33" 
      +                          "," "-34" "," "-35" "," "-35" "," "-36" "," "-37
      +                          ");
  8369  F001A8  E0 DF DF DE DD DD  	db	-32,-33,-33,-34,-35,-35,-36,-37	;#
      +       DC DB              
  8370                           ;eeprom.h: 223: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-37" "," "-38" "," "-39" 
      +                          "," "-40" "," "-40" "," "-40" "," "-40" "," "-40
      +                          ");
  8371  F001B0  DB DA D9 D8 D8 D8  	db	-37,-38,-39,-40,-40,-40,-40,-40	;#
      +       D8 D8              
  8372                           
  8373                           	psect	bigbss
  8374  000EAA                     _x:
  8375  000EAA                     	ds	1
  8376  000000                     
  8377  000000                     
  8378  000000                     
  8379  000000                     
  8380  000000                     
  8381  000000                     
  8382  000000                     
  8383                           
  8384                           	psect	bss
  8385  00006A                     _M:
  8386  00006A                     	ds	51
  8387  00006A                     _RSDT1:
  8388  00006A                     	ds	77
  8389                           
  8390                           	psect	temp
  8391  000000                     btemp:
  8392  000000                     	ds	1
  8393                           intcon	equ	0xFF2
  8394                           indf0	equ	0xFEF
  8395                           postinc0	equ	0xFEE
  8396                           wreg	equ	0xFE8
  8397                           fsr2l	equ	0xFD9
  8398                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Fri Feb 26 07:54:43 2016

            _KolejkaPobudzen 43CA           __end_of_ReloadCiag 6408  
                          _M 006A                     _PomiarCO 6FE2  
                   _PomiarCS 7F7A                     _PomiarCW 75C8  
                   _PomiarIN 7592                            _x 0EAA  
                   _PomiarZW 7718                    _Proba48Z3 651A  
          __end_of_Proba48Z3 655C                     _PrintErr C106  
                  _SetWylacz 56D2                           l30 3E00  
                         l31 3E08                           l40 3ECA  
                         l32 3E1C                           l41 3EA4  
                         l33 3E6C                           l34 3E3E  
                         l43 3EC6                           l60 4036  
                         l36 3E20                           l46 3F1E  
                         l38 3E3C                           l71 4166  
                         l39 3E52                           l80 417E  
                         l57 4018                           l74 416E  
                         l67 4186                           l68 415E  
                         l93 44B6                           l85 445E  
                         l77 4176                           l86 444C  
                         l95 4514                           l87 4428  
                         l96 44DA                           l88 4430  
                         l97 44F2                           l89 4442  
          __end_of_SetWylacz 5740                           u30 3DF6  
                         u60 3E14                    _PomiarPCO 7B6C  
                  _PomiarPFN 7D9A                    _PomiarPCW 7CA8  
                  ?_PrintErr 00EC                     _StartRTG B924  
                   _StartRTM B8B8                     _StartRTS B86A  
                   _Rusz48Z3 655C                   _SetRozruch 52FE  
         __end_of_SetRozruch 532C                     _RuszCiag 6222  
                        l100 4542                          l102 458E  
                        l200 4D2E                          l104 45C4  
                        l201 4BA4                          l121 4782  
                        l113 478E                          l210 4C52  
                        l114 46B4                          l106 45E8  
                        l203 4BCE                          l123 4732  
                        l115 4646                          l212 4C7E  
                        l140 4A3E                          l116 4658  
                        l108 4614                          l301 5058  
                        l213 4C7A                          l205 4BF6  
                        l141 4830                          l125 4722  
                        l117 4670                          l109 460A  
                        l310 50B4                          l230 4CEA  
                        l214 4C76                          l150 48C2  
                        l142 481A                          l126 471A  
                        l118 468C                          l207 4C2E  
                        l151 48AA                          l143 482A  
                        l119 46A4                          l400 53E8  
                        l320 5112                          l240 4D58  
                        l224 4D08                          l160 490E  
                        l152 48BA                          l136 47E6  
                        l209 4CA4                          l161 491E  
                        l137 4806                          l129 4746  
                        l410 5450                          l314 50F2  
                        l234 4E3E                          l226 4CBE  
                        l218 4CA0                          l170 49E0  
                        l146 4894                          l138 47FA  
                        l403 5424                          l323 5128  
                        l243 4D80                          l171 49EC  
                        l163 496C                          l155 48F0  
                        l147 4882                          l404 5422  
                        l332 5174                          l308 52E0  
                        l236 4E06                          l228 4CCE  
                        l180 4A76                          l156 48DC  
                        l148 488E                          l413 549E  
                        l317 5102                          l261 4EAA  
                        l181 4A6E                          l173 4A3A  
                        l165 49C2                          l157 48E8  
                        l422 5502                          l406 543E  
                        l342 51D2                          l326 5142  
                        l270 4F26                          l262 4ED6  
                        l238 4D36                          l166 49AE  
                        l511 58D2                          l503 58AC  
                        l431 5558                          l351 5212  
                        l271 4F3E                          l255 4DF2  
                        l191 4AF0                          l175 4A28  
                        l167 49BA                          l159 4926  
                        l520 592E                          l440 5574  
                        l432 5556                          l416 54DE  
                        l360 5276                          l336 51B2  
                        l328 515C                          l272 4F6C  
                        l248 4DC6                          l176 4A34  
                        l601 5CAA                          l425 5512  
                        l353 5226                          l345 51DC  
                        l281 4F9E                          l273 4F64  
                        l169 49F2                          l434 5572  
                        l290 5092                          l266 4EDA  
                        l258 4EA6                          l603 5CC6  
                        l531 59AE                          l523 593E  
                        l507 5B0C                          l443 55AE  
                        l419 54EE                          l363 5286  
                        l339 51C2                          l275 4F84  
                        l267 4F0E                          l187 4AB4  
                        l179 4A8C                          l700 6082  
                        l620 5D6A                          l540 5A62  
                        l532 59D8                          l516 592C  
                        l508 58B8                          l452 55E2  
                        l428 551C                          l372 52AA  
                        l356 5238                          l348 51F8  
                        l292 4FEC                          l284 4FB0  
                        l268 4F06                          l605 5D76  
                        l541 5A48                          l517 5962  
                        l509 58C6                          l461 5642  
                        l197 4B52                          l189 4B12  
                        l614 5D28                          l606 5CC8  
                        l550 5A8A                          l518 5948  
                        l470 56E6                          l446 55BE  
                        l366 5296                          l286 4FC2  
                        l198 4B76                          l703 60A8  
                        l623 5D88                          l615 5D46  
                        l607 5CD4                          l551 5A92  
                        l543 5A3C                          l535 59E4  
                        l527 5976                          l455 55EC  
                        l391 53B4                          l383 565A  
                        l375 52C4                          l279 4FD4  
                        l199 4B7A                          l800 6496  
                        l720 613A                          l536 59FA  
                        l528 59A2                          l472 56EA  
                        l705 6102                          l641 5E0A  
                        l625 5E16                          l609 5CFC  
                        l553 5AC6                          l545 5A3E  
                        l537 5A2C                          l529 59A0  
                        l481 57B0                          l465 570E  
                        l449 55D2                          l385 532E  
                        l377 52DE                          l369 52A0  
                        l297 501E                          l706 60AA  
                        l650 5E5C                          l626 5D8A  
                        l618 5D5C                          l562 5B56  
                        l490 57C0                          l482 5754  
                        l466 56F6                          l458 5628  
                        l394 53C8                          l731 61C8  
                        l707 60B8                          l635 5DD4  
                        l627 5D96                          l539 5A3A  
                        l491 57CC                          l459 5626  
                        l716 616C                          l636 5DE6  
                        l556 5AC8                          l492 5800  
                        l484 5782                          l476 571A  
                        l468 56D6                          l388 5374  
                        l813 6552                          l717 6114  
                        l709 60D0                          l661 5ECA  
                        l557 5AD4                          l549 5A78  
                        l485 57A2                          l397 53D8  
                        l822 65A4                          l814 651C  
                        l806 64C2                          l718 6122  
                        l646 5ED6                          l638 5DFC  
                        l590 5C2C                          l574 5BCE  
                        l566 5BE6                          l558 5AEA  
                        l911 6934                          l823 655E  
                        l751 6282                          l727 61EC  
                        l671 5F46                          l655 5E88  
                        l647 5E28                          l567 5BAC  
                        l904 68BE                          l832 65F2  
                        l816 652C                          l808 64DA  
                        l736 61DE                          l728 619A  
                        l680 5FB4                          l656 5EA6  
                        l648 5E34                          l592 5C54  
                        l584 5EE8                          l496 586C  
                        l905 68C2                          l833 65E6  
                        l825 6596                          l737 61D2  
                        l729 61A6                          l681 5FC2  
                        l569 5B94                          l497 582A  
                        l489 581A                          l842 65FC  
                        l834 65B0                          l826 6560  
                        l762 6302                          l754 639E  
                        l746 6290                          l690 603A  
                        l674 5FF2                          l666 5F60  
                        l586 5C1E                          l498 5836  
                        l851 6666                          l763 6314  
                        l755 629E                          l747 622A  
                        l683 5FDC                          l675 5FA0  
                        l667 5F08                          l659 5EBC  
                        l579 5C04                          l499 5854  
                        l908 691E                          l852 66AA  
                        l836 65C4                          l828 6578  
                        l772 63DA                          l756 62BA  
                        l748 6240                          l668 5F18  
                        l588 5CB4                          l837 65E0  
                        l749 6252                          l669 5F2A  
                        l597 5C80                          l589 5C20  
                        l854 668E                          l838 65DC  
                        l766 6342                          l758 62C2  
                        l694 617E                          l678 5FE4  
                        l871 688E                          l791 644C  
                        l775 63EC                          l759 62D4  
                        l687 6062                          l679 5FA8  
                        l599 5C9C                          l880 6768  
                        l872 6872                          l864 6686  
                        l856 667E                          l784 64F8  
                        l768 6374                          l696 6072  
                        l688 6016                          l881 6780  
                        l849 6648                          l769 637E  
                        l689 6026                          l874 6724  
                        l786 6434                          l698 609A  
                        l875 673A                          l867 66B6  
                        l859 6680                          l795 647C  
                        l699 6074                          l876 6748  
                        l788 646E                          l893 681C  
                        l885 67AC                          l869 66BE  
                        l797 64B4                          l789 6436  
                        l894 6830                          l886 67C0  
                        l798 647E                          l895 6844  
                        l887 67E8                          l879 6754  
                        l888 67D4                          u200 3F56  
                        u150 3EF6                          u151 3EF2  
                        u160 3EF8                          u500 41F4  
                        u510 41F6                          u190 3F54  
                        u191 3F50                          u440 41C8  
                        _PFN 010C                          u450 41CA  
                        u540 42B6                          u630 4416  
                        u550 42B8                          u580 42DA  
                        u590 42DC                          u850 4560  
                        _PMP 0029                          u771 453E  
                        u860 4562                          u980 463C  
                        _RTG B954                          _PWM 0175  
                        _RTM B8E8                          _RTS B89A  
                   _WritePWM A9A8        ?a_OczekujNaPrzeplywWG 00EA  
                   __config1 0030FF                     __config2 00EFEF  
                   __config3 007DFF                     __config4 00FFFB  
                   __config5 00FFF0                     __config6 00DFF0  
                        wreg 000FE8                    _StartRTdS B82E  
              ?_eeprom_write 00EC                   _RestartMod 3DAE  
              _ReloadPlomien 61FA                   _PrintErrCs C14A  
                 _PwrOnDelay C454                         u1020 4666  
                       u1200 4712                  _DecyzjaPLM2 5B6C  
                       u1340 47C2                         u1341 47BE  
                       u1350 47C4                         u2341 4AD0  
                       u1461 4848                         u3070 4C24  
                       u3160 4C44                         u1560 4870  
                       u3500 4CE6                         u1820 497C  
                       u2390 4ADC                         u2720 4BA0  
                       u1680 4942                         u4420 4E58  
                       u1781 4968                         u2830 4BCA  
                       u5160 5012                         u4280 4E38  
                       u1880 4994                         u4610 4EC0  
                       u1890 4996                         u4700 4EEE  
                       u3750 4D52                         u3590 4D04  
                       u5280 504C                         u4740 4EFE  
                       u5390 5086                         u8150 5538  
                       u7430 5404                         u9300 57F6  
                       u7620 545E                         u8360 5684  
                       u9241 57E0                         u9090 56EE  
                       u6980 533C                         u9470 5944  
                       u9660 5A44                         u8890 5608  
                  _WritePWM2 A9BA                         _DtCO 0120  
                       _DtCS 0104                         _DtCW 0111  
                       _DtIN 0131                         _RTdS B852  
        __end_of_DecyzjaPLM2 5C1C                         _main 3DC4  
      __end_of_ReloadPlomien 6222                         indf0 000FEF  
                       fsr2l 000FD9     __end_of_FunkcjaSerwisowa 57BE  
                       btemp 0000                  ?_PrintErrCs 00EC  
            __end_of_VZPauza 6622                         start 0010  
            __end_of_GrzejON 5890              __end_of_VWybieg 5F72  
            __end_of_ToReset 6936                      ?_SetPrt 00EA  
            __end_of_Proba48 6432              __end_of_Rozruch 5B3E  
        _DetekcjaPrzeplywuWG 5F72      __end_of_KolejkaPobudzen 461E  
                      u12070 677C                        u10860 60EE  
                      u12461 680E                        u10950 6158  
                      u12720 686A                        u11780 66A8  
                      _RSDT1 009D                        _DtKNF 01B2  
                      _EndL3 C1D0            ?a_KolejkaPobudzen 00EA  
                      _RdPrt B788                   used_btemp0 0001  
__end_of_DetekcjaPrzeplywuWG 5FFA                  _eeprom_read C59E  
             _DecyzjaAntyLeg 461E                      _BitSet2 C272  
                    _GetBit2 C20C                   _DecRozruch 50B2  
                   ?_BitSet2 00EE                        status 000FD8  
                   ?_GetBit2 00EC           __end_of_DecRozruch 52FE  
                    _VZPauza 65F6                      _InitI2C 8160  
                    _InitPWM A43C                 _ProcToPmpPwm 9962  
                    _InitOsc C5F2             __end_of_GrzejOFF 58B0  
        _OczekujNaPrzeplywWG 5FFA                     ?a_DecERR 00EA  
                    _GrzejON 587A             __end_of_SetLoMod 50B2  
                    _VWybieg 5F06                      _Moduluj 102E  
                    _ToReset 68DC                      __Lparam 00EA  
                    _Proba48 6408                _ReceptDataLCD B2DA  
         _FiltrPomiarowyCOCW 6F5A                      _PrintL3 C1C0  
             _InitReceptProc B1D8                      _Rozruch 58B0  
               ?_eeprom_read 00F0             __end_of_Rusz48Z3 65AE  
           _FunkcjaSerwisowa 5740                      __ramtop 1000  
             __end_of_DecERR 4B3E             __end_of_RuszCiag 63BA  
             __end_of_DecSTR 4F9C               __end_of_DecWSW 479A  
                 _DecyzjaPLM 5B3E  __end_of_OczekujNaPrzeplywWG 6070  
     __end_of_DecyzjaAntyLeg 4798           __end_of_DecyzjaPLM 5B6C  
             __end_of_ErrPTG 68DC                   _Blokada15S 5828  
             __end_of_KeyRes 65F6           __end_of_Blokada15S 587A  
                _ZmienKCOKCW 6070                  _InitDataPmr 693E  
             __end_of_Rusz48 651A          __end_of_ZmienKCOKCW 6198  
             __end_of_Wylacz 5F06                _KodSterownika 415C  
               __end_of_main 403E                       _DecERR 479A  
                     _DecSTR 4B3E                       _DecWSW 4798  
                     _EnKonf 8DA6                  _RuszPlomien 6198  
                     _EndErr C196                   _RefLCDData 419C  
                     _ErrPTG 6622                    _DecWylacz 532C  
                     _InitAC BE2E            __end_of_DecWylacz 56D2  
         __end_of_RefLCDData 43CA                       _KeyRes 65AE  
        __end_of_RuszPlomien 61FA        __end_of_KodSterownika 419C  
                     _RglPmp A3C4                    _RdEEParam 9594  
                     _SetPrt B7AA                       _Rusz48 6432  
                  _ClearData 403E            __end_of_ClearData 4116  
                     _Wylacz 5C1C                      postinc0 000FEE  
                  _BlokadaL3 57BE            __end_of_BlokadaL3 5828  
                 _InitGlobal 6936           __end_of_InitGlobal 693E  
                 _InitTimer1 C53A                 _eeprom_write C4DC  
              _MKonfiguracja 8DB0                _RestartFltPrt 4116  
      ?a_DetekcjaPrzeplywuWG 00EA                     _InitUart BB3A  
                   _InitPort B624                     _GrzejOFF 5890  
                  _ToObiegCO 4F9C                    _ToObiegCW 4FEA  
      __end_of_RestartFltPrt 415C            __end_of_ToObiegCO 4FEA  
          __end_of_ToObiegCW 50A8                     _SetLoMod 50A8  
                 _ReloadCiag 63BA  
