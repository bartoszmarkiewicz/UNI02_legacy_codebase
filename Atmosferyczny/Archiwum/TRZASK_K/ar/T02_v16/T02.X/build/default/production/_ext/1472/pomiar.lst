

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Mon Sep 14 17:44:52 2020


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     5                           	psect	bss,global,class=RAM,space=1,delta=1
     6                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     7                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97                           
    98                           	psect	text
    99                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   100                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   101                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   102                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   103                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   104                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   105                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   106                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   107                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   108                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   109                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   110                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   111                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   112                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   113                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   114                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   115                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   116                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   117                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   118                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   119                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   120                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   121                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   122                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   123                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   124                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   125                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   126                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   127                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   128                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   129                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   130                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   131                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   132                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   133                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   134                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   135                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   136                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   137                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   138                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   139                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   140                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   141                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   142                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   143                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   144                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   145                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   146                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   147                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   148                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   149                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   150                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   151                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   152                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   153                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   154                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   155                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   156                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   157                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   158                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   159                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   160                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   161                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   162                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   163                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   164                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   165                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   166                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   167                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   168                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   169                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   170                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   171                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   172                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   173                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   174                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   175                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   176                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   177                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   178                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   179                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   180                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   181                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   182                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   183                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   184                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   185                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   186                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   187                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   188                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   189                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   190                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   191                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   192                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   193                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   194                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   195                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   196                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   197                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   198                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   199  006E38                     _InitDataPmr:
   200                           ;	_dac assigned to ?a_PomiarCS+0
   201  000000                     _PomiarCS$dac	set	?a_PomiarCS
   202                           ;	_bnc assigned to ?a_PomiarPCO+0
   203  000000                     _PomiarPCO$bnc	set	?a_PomiarPCO
   204  000000                     
   205                           ;pomiar.c: 39: DtCO._err_CO=0;
   206  006E38  0101               	movlb	_DtCO shr (0+8)
   207  006E3A  91B6               	bcf	_DtCO& (0+255),0,b
   208                           ;pomiar.c: 40: DtCO._su_CO=0;
   209  006E3C  93B6               	bcf	_DtCO& (0+255),1,b
   210                           ;pomiar.c: 41: DtCO._ad_CO=0;
   211  006E3E  95B6               	bcf	_DtCO& (0+255),2,b
   212                           ;pomiar.c: 42: DtCO._su_SRW_CO=0;
   213  006E40  97B6               	bcf	_DtCO& (0+255),3,b
   214                           ;pomiar.c: 43: DtCO._ad_SRW_CO=0;
   215  006E42  99B6               	bcf	_DtCO& (0+255),4,b
   216                           ;pomiar.c: 44: DtCO._cold_CO=0;
   217  006E44  95B7               	bcf	(_DtCO+1)& (0+255),2,b
   218                           ;pomiar.c: 45: DtCO._hot_CO=0;
   219  006E46  97B7               	bcf	(_DtCO+1)& (0+255),3,b
   220                           ;pomiar.c: 46: DtCO._on_DZ_CO=0;
   221  006E48  9BB6               	bcf	_DtCO& (0+255),5,b
   222                           ;pomiar.c: 47: DtCO._su_DZ_CO=0;
   223  006E4A  9DB6               	bcf	_DtCO& (0+255),6,b
   224                           ;pomiar.c: 48: DtCO._ad_DZ_CO=0;
   225  006E4C  9FB6               	bcf	_DtCO& (0+255),7,b
   226                           ;pomiar.c: 49: DtCO._ptwp_CO=0;
   227  006E4E  91B7               	bcf	(_DtCO+1)& (0+255),0,b
   228                           ;pomiar.c: 50: DtCO._pz_CO=0;
   229  006E50  93B7               	bcf	(_DtCO+1)& (0+255),1,b
   230                           ;pomiar.c: 51: DtCO.indCO=0;
   231  006E52  6BC0               	clrf	(_DtCO+10)& (0+255),b
   232                           ;pomiar.c: 53: DtCW._err_CW=0;
   233  006E54  91A7               	bcf	_DtCW& (0+255),0,b
   234                           ;pomiar.c: 54: DtCW._su_CW=0;
   235  006E56  93A7               	bcf	_DtCW& (0+255),1,b
   236                           ;pomiar.c: 55: DtCW._ad_CW=0;
   237  006E58  95A7               	bcf	_DtCW& (0+255),2,b
   238                           ;pomiar.c: 56: DtCW._on_DZ_CW=0;
   239  006E5A  99A7               	bcf	_DtCW& (0+255),4,b
   240                           ;pomiar.c: 57: DtCW._su_DZ_CW=0;
   241  006E5C  9BA7               	bcf	_DtCW& (0+255),5,b
   242                           ;pomiar.c: 58: DtCW._ad_DZ_CW=0;
   243  006E5E  9DA7               	bcf	_DtCW& (0+255),6,b
   244                           ;pomiar.c: 59: DtCW.indCW=0;
   245  006E60  6BB1               	clrf	(_DtCW+10)& (0+255),b
   246                           ;pomiar.c: 61: DtCS._hi=0;
   247  006E62  9198               	bcf	_DtCS& (0+255),0,b
   248                           ;pomiar.c: 62: DtCS._lo=0;
   249  006E64  9398               	bcf	_DtCS& (0+255),1,b
   250                           ;pomiar.c: 63: DtCS._no=0;
   251  006E66  9598               	bcf	_DtCS& (0+255),2,b
   252                           ;pomiar.c: 64: DtCS._error=0;
   253  006E68  9798               	bcf	_DtCS& (0+255),3,b
   254                           ;pomiar.c: 65: DtCS._work=1;
   255  006E6A  8998               	bsf	_DtCS& (0+255),4,b
   256                           ;pomiar.c: 66: }
   257  006E6C  0012               	return	
   258  006E6E                     __end_of_InitDataPmr:
   259                           ;pomiar.c: 69: void IncPmrTimer(void)
   260                           ;pomiar.c: 70: {
   261  006E6E                     _IncPmrTimer:
   262  000000                     
   263                           ;pomiar.c: 71: if(PmrtimFlt1<0xff) PmrtimFlt1++;
   264  006E6E  CEA4  F000         	movff	_PmrtimFlt1,btemp
   265  006E72  2800               	incf	btemp,w,c
   266  006E74  E002               	bz	l17
   267  006E76  010E               	movlb	_PmrtimFlt1 shr (0+8)
   268  006E78  2BA4               	incf	_PmrtimFlt1& (0+255),f,b
   269  006E7A                     l17:
   270                           ;pomiar.c: 72: if(PmrtimFlt2<0xff) PmrtimFlt2++;
   271  006E7A  CEA5  F000         	movff	_PmrtimFlt2,btemp
   272  006E7E  2800               	incf	btemp,w,c
   273  006E80  E002               	bz	l18
   274  006E82  010E               	movlb	_PmrtimFlt2 shr (0+8)
   275  006E84  2BA5               	incf	_PmrtimFlt2& (0+255),f,b
   276  006E86                     l18:
   277                           ;pomiar.c: 73: if(PmrtimFlt3<0xffff) PmrtimFlt3+
      +                          +;
   278  006E86  0101               	movlb	_PmrtimFlt3 shr (0+8)
   279  006E88  1D95               	comf	(_PmrtimFlt3+1)& (0+255),w,b
   280  006E8A  0EFF               	movlw	255
   281  006E8C  B4D8               	btfsc	status,2,c
   282  006E8E  1994               	xorwf	_PmrtimFlt3& (0+255),w,b
   283  006E90  B4D8               	btfsc	status,2,c
   284  006E92  0012               	return	
   285  006E94  4B94               	infsnz	_PmrtimFlt3& (0+255),f,b
   286  006E96  2B95               	incf	(_PmrtimFlt3+1)& (0+255),f,b
   287                           ;pomiar.c: 74: }
   288  006E98  0012               	return	
   289  006E9A                     __end_of_IncPmrTimer:
   290                           ;pomiar.c: 77: void StartTim1(void)
   291                           ;pomiar.c: 78: {
   292  006E9A                     _StartTim1:
   293  000000                     
   294                           ;pomiar.c: 79: PmrtimFlt1=0;
   295  006E9A  010E               	movlb	_PmrtimFlt1 shr (0+8)
   296  006E9C  6BA4               	clrf	_PmrtimFlt1& (0+255),b
   297                           ;pomiar.c: 80: }
   298  006E9E  0012               	return	
   299  006EA0                     __end_of_StartTim1:
   300                           ;pomiar.c: 81: bit PmrTim1(unsigned char tm)
   301                           ;pomiar.c: 82: {
   302  006EA0                     _PmrTim1:
   303  000000                     
   304                           ; _tm loaded to fsr2l
   305  006EA0  6ED9               	movwf	fsr2l,c
   306                           ;pomiar.c: 83: if(PmrtimFlt1<tm) return 0;
   307  006EA2  50D9               	movf	fsr2l,w,c
   308  006EA4  010E               	movlb	_PmrtimFlt1 shr (0+8)
   309  006EA6  61A4               	cpfslt	_PmrtimFlt1& (0+255),b
   310  006EA8  D002               	goto	l22
   311  006EAA  90D8               	bcf	status,0,c
   312  006EAC  0012               	return	
   313  006EAE                     l22:
   314                           ;pomiar.c: 84: return 1;
   315  006EAE  80D8               	bsf	status,0,c
   316  006EB0  0012               	return	
   317                           ;pomiar.c: 85: }
   318  006EB2                     __end_of_PmrTim1:
   319                           ;pomiar.c: 88: void StartTim2(void)
   320                           ;pomiar.c: 89: {
   321  006EB2                     _StartTim2:
   322  000000                     
   323                           ;pomiar.c: 90: PmrtimFlt2=0;
   324  006EB2  010E               	movlb	_PmrtimFlt2 shr (0+8)
   325  006EB4  6BA5               	clrf	_PmrtimFlt2& (0+255),b
   326                           ;pomiar.c: 91: }
   327  006EB6  0012               	return	
   328  006EB8                     __end_of_StartTim2:
   329                           ;pomiar.c: 92: bit PmrTim2(unsigned char tm)
   330                           ;pomiar.c: 93: {
   331  006EB8                     _PmrTim2:
   332  000000                     
   333                           ; _tm loaded to fsr2l
   334  006EB8  6ED9               	movwf	fsr2l,c
   335                           ;pomiar.c: 94: if(PmrtimFlt2<tm) return 0;
   336  006EBA  50D9               	movf	fsr2l,w,c
   337  006EBC  010E               	movlb	_PmrtimFlt2 shr (0+8)
   338  006EBE  61A5               	cpfslt	_PmrtimFlt2& (0+255),b
   339  006EC0  D002               	goto	l25
   340  006EC2  90D8               	bcf	status,0,c
   341  006EC4  0012               	return	
   342  006EC6                     l25:
   343                           ;pomiar.c: 95: return 1;
   344  006EC6  80D8               	bsf	status,0,c
   345  006EC8  0012               	return	
   346                           ;pomiar.c: 96: }
   347  006ECA                     __end_of_PmrTim2:
   348                           ;pomiar.c: 99: void StartTim3(void)
   349                           ;pomiar.c: 100: {
   350  006ECA                     _StartTim3:
   351  000000                     
   352                           ;pomiar.c: 101: PmrtimFlt3=0;
   353  006ECA  EE01  F094         	lfsr	0,_PmrtimFlt3
   354  006ECE  6AEE               	clrf	postinc0,c
   355  006ED0  6AEE               	clrf	postinc0,c
   356                           ;pomiar.c: 102: }
   357  006ED2  0012               	return	
   358  006ED4                     __end_of_StartTim3:
   359                           ;       param _tm assigned to ?_PmrTim3+0
   360  000000                     _PmrTim3$tm	set	?_PmrTim3
   361                           ;pomiar.c: 103: bit PmrTim3(unsigned int tm)
   362                           ;pomiar.c: 104: {
   363  006ED4  00E9               	dw	?_PmrTim3
   364  006ED6                     _PmrTim3:
   365  000000                     
   366                           ;pomiar.c: 105: if(PmrtimFlt3<tm) return 0;
   367  006ED6  C194  F000         	movff	_PmrtimFlt3,btemp
   368  006EDA  C195  F001         	movff	_PmrtimFlt3+1,btemp+1
   369  006EDE  0100               	movlb	__Lparam shr (0+8)
   370  006EE0  51EA               	movf	(?_PmrTim3+1)^(__Lparam& (0+65280)),w
   371  006EE2  5C01               	subwf	btemp+1,w,c
   372  006EE4  E102               	bnz	u65
   373  006EE6  51E9               	movf	?_PmrTim3^(__Lparam& (0+65280)),w
   374  006EE8  5C00               	subwf	btemp,w,c
   375  006EEA                     u65:
   376  006EEA  E202               	bc	l28
   377  006EEC  90D8               	bcf	status,0,c
   378  006EEE  0012               	return	
   379  006EF0                     l28:
   380                           ;pomiar.c: 106: return 1;
   381  006EF0  80D8               	bsf	status,0,c
   382  006EF2  0012               	return	
   383                           ;pomiar.c: 107: }
   384  006EF4                     __end_of_PmrTim3:
   385                           ;pomiar.c: 110: void GoldenEye(void)
   386                           ;pomiar.c: 111: {
   387  006EF4                     _GoldenEye:
   388  000000                     
   389                           ;pomiar.c: 112: signed char dt;
   390  006EF4  C1B8  FFE8         	movff	_DtCO+2,wreg
   391  006EF8  0101               	movlb	(_M+32) shr (0+8)
   392  006EFA  5D20               	subwf	(_M+32)& (0+255),w,b
   393  006EFC  6EE1               	movwf	fsr1l,c
   394                           ;pomiar.c: 121: if((DtCO.PPCO-M.CONTSETP)>0) ph=
      +                          DtCO.PPCO-M.CONTSETP;
   395  006EFE  C120  FFE8         	movff	_M+32,wreg
   396  006F02  C1BA  F000         	movff	_DtCO+4,btemp
   397  006F06  6A01               	clrf	btemp+1,c
   398  006F08  5E00               	subwf	btemp,f,c
   399  006F0A  0E00               	movlw	0
   400  006F0C  5A01               	subwfb	btemp+1,f,c
   401  006F0E  5001               	movf	btemp+1,w,c
   402  006F10  0A80               	xorlw	128
   403  006F12  0F80               	addlw	-128
   404  006F14  0E01               	movlw	1
   405  006F16  B4D8               	btfsc	status,2,c
   406  006F18  5C00               	subwf	btemp,w,c
   407  006F1A  E306               	bnc	l30
   408  006F1C  C120  FFE8         	movff	_M+32,wreg
   409  006F20  0101               	movlb	(_DtCO+4) shr (0+8)
   410  006F22  5DBA               	subwf	(_DtCO+4)& (0+255),w,b
   411  006F24  6EE9               	movwf	fsr0l,c
   412  006F26  D001               	goto	l31
   413  006F28                     l30:
   414                           ;pomiar.c: 122: else ph=0;
   415  006F28  6AE9               	clrf	fsr0l,c
   416  006F2A                     l31:
   417                           ;pomiar.c: 123: if((DtCO.CO>=(M.CONTSETP+11))||(
      +                          DtCO.CO<=(M.CONTSETP-11))) DtCO.SCO=DtCO.CO;
   418  006F2A  0E0B               	movlw	11
   419  006F2C  C120  F002         	movff	_M+32,btemp+2
   420  006F30  6A03               	clrf	btemp+3,c
   421  006F32  2602               	addwf	btemp+2,f,c
   422  006F34  0E00               	movlw	0
   423  006F36  2203               	addwfc	btemp+3,f,c
   424  006F38  C1B8  F000         	movff	_DtCO+2,btemp
   425  006F3C  6A01               	clrf	btemp+1,c
   426  006F3E  5001               	movf	btemp+1,w,c
   427  006F40  0A80               	xorlw	128
   428  006F42  6E04               	movwf	btemp+4,c
   429  006F44  5003               	movf	btemp+3,w,c
   430  006F46  0A80               	xorlw	128
   431  006F48  5C04               	subwf	btemp+4,w,c
   432  006F4A  E102               	bnz	u85
   433  006F4C  5002               	movf	btemp+2,w,c
   434  006F4E  5C00               	subwf	btemp,w,c
   435  006F50                     u85:
   436  006F50  E215               	bc	u100
   437  006F52  C1B8  F000         	movff	_DtCO+2,btemp
   438  006F56  6A01               	clrf	btemp+1,c
   439  006F58  C120  F002         	movff	_M+32,btemp+2
   440  006F5C  0EF5               	movlw	245
   441  006F5E  2402               	addwf	btemp+2,w,c
   442  006F60  6EF6               	movwf	tblptrl,c
   443  006F62  6AF7               	clrf	tblptrh,c
   444  006F64  0EFF               	movlw	255
   445  006F66  22F7               	addwfc	tblptrh,f,c
   446  006F68  50F7               	movf	tblptrh,w,c
   447  006F6A  0A80               	xorlw	128
   448  006F6C  6E02               	movwf	btemp+2,c
   449  006F6E  5001               	movf	btemp+1,w,c
   450  006F70  0A80               	xorlw	128
   451  006F72  5C02               	subwf	btemp+2,w,c
   452  006F74  E102               	bnz	u95
   453  006F76  5000               	movf	btemp,w,c
   454  006F78  5CF6               	subwf	tblptrl,w,c
   455  006F7A                     u95:
   456  006F7A  E303               	bnc	l32
   457  006F7C                     u100:
   458  006F7C  C1B8  F1C1         	movff	_DtCO+2,_DtCO+11
   459  006F80  D077               	goto	l33
   460  006F82                     l32:
   461                           ;pomiar.c: 124: else
   462  006F82  BEE1               	btfsc	fsr1l,7,c
   463  006F84  D023               	goto	l34
   464                           ;pomiar.c: 127: {
   465                           ; _hist allocated to prodl
   466  006F86  50E9               	movf	fsr0l,w,c
   467  006F88  0101               	movlb	(_DtCO+15) shr (0+8)
   468  006F8A  25C5               	addwf	(_DtCO+15)& (0+255),w,b
   469  006F8C  6EF3               	movwf	prodl,c
   470                           ;pomiar.c: 130: if(dt<1) pop=dt;
   471  006F8E  50E1               	movf	fsr1l,w,c
   472  006F90  0A80               	xorlw	128
   473  006F92  0F7F               	addlw	-129
   474  006F94  50E1               	movf	fsr1l,w,c
   475  006F96  E201               	bc	L56
   476  006F98  D00F               	goto	L19
   477                           ;pomiar.c: 131: else
   478  006F9A                     L56:
   479  006F9A  0A80               	xorlw	128
   480  006F9C  0F7F               	addlw	-129
   481  006F9E  E306               	bnc	l37
   482  006FA0  50E1               	movf	fsr1l,w,c
   483  006FA2  0A80               	xorlw	128
   484  006FA4  0F75               	addlw	-139
   485  006FA6  E202               	bc	l37
   486  006FA8  0E01               	movlw	1
   487  006FAA  D006               	goto	L19
   488  006FAC                     l37:
   489                           ;pomiar.c: 133: else
   490  006FAC  50E1               	movf	fsr1l,w,c
   491  006FAE  0A80               	xorlw	128
   492  006FB0  0F75               	addlw	-139
   493  006FB2  E303               	bnc	l36
   494  006FB4  50E1               	movf	fsr1l,w,c
   495  006FB6  080B               	sublw	11
   496  006FB8                     L19:
   497  006FB8  6ED9               	movwf	fsr2l,c
   498  006FBA                     l36:
   499                           ;pomiar.c: 136: if(pop&&!hist) pop=pop-1;
   500  006FBA  50D9               	movf	fsr2l,w,c
   501  006FBC  E003               	bz	l40
   502  006FBE  50F3               	movf	prodl,w,c
   503  006FC0  E101               	bnz	l40
   504  006FC2  06D9               	decf	fsr2l,f,c
   505  006FC4                     l40:
   506                           ;pomiar.c: 137: DtCO.SCO=DtCO.CO+pop;
   507  006FC4  50D9               	movf	fsr2l,w,c
   508  006FC6  0101               	movlb	(_DtCO+2) shr (0+8)
   509  006FC8  25B8               	addwf	(_DtCO+2)& (0+255),w,b
   510  006FCA  D050               	goto	L20
   511                           ;pomiar.c: 138: }
   512  006FCC                     l34:
   513                           ;pomiar.c: 139: else
   514                           ; _hist allocated to fsr2l
   515  006FCC  50E9               	movf	fsr0l,w,c
   516  006FCE  0101               	movlb	(_DtCO+15) shr (0+8)
   517  006FD0  25C5               	addwf	(_DtCO+15)& (0+255),w,b
   518  006FD2  6ED9               	movwf	fsr2l,c
   519                           ;pomiar.c: 144: switch(DtKNF.tpkt)
   520  006FD4  D011               	goto	l43
   521  006FD6                     l45:
   522                           ;pomiar.c: 147: case 2:
   523  006FD6  EE02  F03B         	lfsr	0,_DtKNF+11
   524  006FDA  50EF               	movf	indf0,w,c
   525  006FDC  E01B               	bz	L44
   526                           ;pomiar.c: 150: {
   527                           ;pomiar.c: 152: {
   528                           ;pomiar.c: 154: }
   529  006FDE                     l46:
   530                           ;pomiar.c: 156: else
   531  006FDE  50D9               	movf	fsr2l,w,c
   532  006FE0  C120  F000         	movff	_M+32,btemp
   533  006FE4  6A01               	clrf	btemp+1,c
   534  006FE6  2600               	addwf	btemp,f,c
   535  006FE8  0E00               	movlw	0
   536  006FEA  2201               	addwfc	btemp+1,f,c
   537  006FEC  5001               	movf	btemp+1,w,c
   538  006FEE  0A80               	xorlw	128
   539  006FF0  0F80               	addlw	-128
   540  006FF2  0E3D               	movlw	61
   541  006FF4  D01A               	goto	L45
   542                           ;pomiar.c: 159: {
   543                           ;pomiar.c: 161: }
   544  006FF6                     l50:
   545                           ;pomiar.c: 164: }
   546                           ;pomiar.c: 166: {
   547                           ;pomiar.c: 168: {
   548                           ;pomiar.c: 170: {
   549                           ;pomiar.c: 172: }
   550                           ;pomiar.c: 174: else
   551                           ;pomiar.c: 177: {
   552                           ;pomiar.c: 179: }
   553  006FF6                     l55:
   554  006FF6  D7EF               	goto	l45
   555                           ;pomiar.c: 182: }
   556                           ;pomiar.c: 184: {
   557                           ;pomiar.c: 186: {
   558                           ;pomiar.c: 188: {
   559                           ;pomiar.c: 190: }
   560                           ;pomiar.c: 192: else
   561                           ;pomiar.c: 208: }
   562                           ;pomiar.c: 210: else
   563                           ;pomiar.c: 213: {
   564                           ;pomiar.c: 215: }
   565  006FF8                     l43:
   566  006FF8  C237  FFE8         	movff	_DtKNF+7,wreg
   567  006FFC  0A00               	xorlw	0
   568  006FFE  E0FB               	bz	l55
   569  007000  0A01               	xorlw	1
   570  007002  E0E9               	bz	l45
   571  007004  0A03               	xorlw	3
   572  007006  E0E7               	bz	l45
   573  007008  0A01               	xorlw	1
   574  00700A  E0F5               	bz	l50
   575                           ;pomiar.c: 195: {
   576                           ;pomiar.c: 197: }
   577                           ;pomiar.c: 200: }
   578                           ;pomiar.c: 202: {
   579  00700C  EE02  F03B         	lfsr	0,_DtKNF+11
   580  007010  50EF               	movf	indf0,w,c
   581  007012  E1E5               	bnz	l46
   582  007014                     L44:
   583                           ;pomiar.c: 204: {
   584  007014  50D9               	movf	fsr2l,w,c
   585  007016  C120  F000         	movff	_M+32,btemp
   586  00701A  6A01               	clrf	btemp+1,c
   587  00701C  2600               	addwf	btemp,f,c
   588  00701E  0E00               	movlw	0
   589  007020  2201               	addwfc	btemp+1,f,c
   590  007022  5001               	movf	btemp+1,w,c
   591  007024  0A80               	xorlw	128
   592  007026  0F80               	addlw	-128
   593  007028  0E5B               	movlw	91
   594  00702A                     L45:
   595  00702A  B4D8               	btfsc	status,2,c
   596  00702C  5C00               	subwf	btemp,w,c
   597  00702E  E302               	bnc	l42
   598                           ;pomiar.c: 206: {
   599  007030  0E05               	movlw	5
   600  007032  6ED9               	movwf	fsr2l,c
   601  007034                     l42:
   602                           ;pomiar.c: 221: if(hist>1)
   603  007034  0E01               	movlw	1
   604  007036  64D9               	cpfsgt	fsr2l,c
   605  007038  D015               	goto	l65
   606                           ;pomiar.c: 222: {
   607  00703A  50D9               	movf	fsr2l,w,c
   608  00703C  E013               	bz	l65
   609                           ;pomiar.c: 224: {
   610  00703E  CFE1 F000          	movff	fsr1l,btemp
   611  007042  6A01               	clrf	btemp+1,c
   612  007044  BE00               	btfsc	btemp,7,c
   613  007046  0601               	decf	btemp+1,f,c
   614  007048  1E00               	comf	btemp,f,c
   615  00704A  1E01               	comf	btemp+1,f,c
   616  00704C  4A00               	infsnz	btemp,f,c
   617  00704E  2A01               	incf	btemp+1,f,c
   618  007050  5001               	movf	btemp+1,w,c
   619  007052  0A80               	xorlw	128
   620  007054  0F80               	addlw	-128
   621  007056  0E01               	movlw	1
   622  007058  B4D8               	btfsc	status,2,c
   623  00705A  5C00               	subwf	btemp,w,c
   624  00705C  E203               	bc	l65
   625  00705E  28E1               	incf	fsr1l,w,c
   626  007060  6ED9               	movwf	fsr2l,c
   627  007062  D001               	goto	l70
   628                           ;pomiar.c: 226: else pop=0;
   629                           ;pomiar.c: 227: }
   630                           ;pomiar.c: 228: else pop=0;
   631                           ;pomiar.c: 229: }
   632  007064                     l65:
   633                           ;pomiar.c: 230: else pop=0;
   634  007064  6AD9               	clrf	fsr2l,c
   635  007066                     l70:
   636                           ;pomiar.c: 231: DtCO.SCO=DtCO.CO-pop;
   637  007066  50D9               	movf	fsr2l,w,c
   638  007068  0101               	movlb	(_DtCO+2) shr (0+8)
   639  00706A  5DB8               	subwf	(_DtCO+2)& (0+255),w,b
   640  00706C                     L20:
   641  00706C  CFE8 F1C1          	movff	wreg,_DtCO+11
   642  007070                     l33:
   643                           ;pomiar.c: 232: }
   644  007070  C1C1  F129         	movff	_DtCO+11,_RSDT1+5
   645                           ;pomiar.c: 237: if(DtKNF.tpkt!=0)
   646  007074  EE02  F037         	lfsr	0,_DtKNF+7
   647  007078  50EF               	movf	indf0,w,c
   648  00707A  E101 D130          	bz	l71
   649                           ;pomiar.c: 238: {
   650  00707E  C237  F000         	movff	_DtKNF+7,btemp
   651  007082  0400               	decf	btemp,w,c
   652  007084  E001 D097          	bnz	l72
   653                           ;pomiar.c: 240: {
   654  007088  C1A9  FFE8         	movff	_DtCW+2,wreg
   655  00708C  0101               	movlb	(_DtCW+4) shr (0+8)
   656  00708E  5DAB               	subwf	(_DtCW+4)& (0+255),w,b
   657  007090  6EE1               	movwf	fsr1l,c
   658                           ;pomiar.c: 242: if((DtCW.CW>=(DtCW.PPCW+11))||(D
      +                          tCW.CW<=(DtCW.PPCW-11))) DtCW.SCW=DtCW.CW;
   659  007092  0E0B               	movlw	11
   660  007094  C1AB  F002         	movff	_DtCW+4,btemp+2
   661  007098  6A03               	clrf	btemp+3,c
   662  00709A  2602               	addwf	btemp+2,f,c
   663  00709C  0E00               	movlw	0
   664  00709E  2203               	addwfc	btemp+3,f,c
   665  0070A0  C1A9  F000         	movff	_DtCW+2,btemp
   666  0070A4  6A01               	clrf	btemp+1,c
   667  0070A6  5001               	movf	btemp+1,w,c
   668  0070A8  0A80               	xorlw	128
   669  0070AA  6E04               	movwf	btemp+4,c
   670  0070AC  5003               	movf	btemp+3,w,c
   671  0070AE  0A80               	xorlw	128
   672  0070B0  5C04               	subwf	btemp+4,w,c
   673  0070B2  E102               	bnz	u375
   674  0070B4  5002               	movf	btemp+2,w,c
   675  0070B6  5C00               	subwf	btemp,w,c
   676  0070B8                     u375:
   677  0070B8  E301 D111          	bc	l71
   678  0070BC  C1A9  F000         	movff	_DtCW+2,btemp
   679  0070C0  6A01               	clrf	btemp+1,c
   680  0070C2  C1AB  F002         	movff	_DtCW+4,btemp+2
   681  0070C6  0EF5               	movlw	245
   682  0070C8  2402               	addwf	btemp+2,w,c
   683  0070CA  6EF6               	movwf	tblptrl,c
   684  0070CC  6AF7               	clrf	tblptrh,c
   685  0070CE  0EFF               	movlw	255
   686  0070D0  22F7               	addwfc	tblptrh,f,c
   687  0070D2  50F7               	movf	tblptrh,w,c
   688  0070D4  0A80               	xorlw	128
   689  0070D6  6E02               	movwf	btemp+2,c
   690  0070D8  5001               	movf	btemp+1,w,c
   691  0070DA  0A80               	xorlw	128
   692  0070DC  5C02               	subwf	btemp+2,w,c
   693  0070DE  E102               	bnz	u385
   694  0070E0  5000               	movf	btemp,w,c
   695  0070E2  5CF6               	subwf	tblptrl,w,c
   696  0070E4                     u385:
   697  0070E4  E301 D0FB          	bc	l71
   698                           ;pomiar.c: 243: else
   699  0070E8  BEE1               	btfsc	fsr1l,7,c
   700  0070EA  D01C               	goto	l75
   701                           ;pomiar.c: 246: {
   702  0070EC  50E1               	movf	fsr1l,w,c
   703  0070EE  0A80               	xorlw	128
   704  0070F0  0F7D               	addlw	-131
   705  0070F2  E201 D094          	bnc	L48
   706                           ;pomiar.c: 248: else
   707  0070F6  50E1               	movf	fsr1l,w,c
   708  0070F8  0A80               	xorlw	128
   709  0070FA  0F7D               	addlw	-131
   710  0070FC  E306               	bnc	l78
   711  0070FE  50E1               	movf	fsr1l,w,c
   712  007100  0A80               	xorlw	128
   713  007102  0F77               	addlw	-137
   714  007104  E202               	bc	l78
   715  007106  0E03               	movlw	3
   716  007108  D006               	goto	L21
   717  00710A                     l78:
   718                           ;pomiar.c: 250: else
   719  00710A  50E1               	movf	fsr1l,w,c
   720  00710C  0A80               	xorlw	128
   721  00710E  0F77               	addlw	-137
   722  007110  E303               	bnc	l92
   723  007112  50E1               	movf	fsr1l,w,c
   724  007114  080B               	sublw	11
   725  007116                     L21:
   726  007116  6ED9               	movwf	fsr2l,c
   727  007118                     l92:
   728                           ;pomiar.c: 278: DtCW.SCW=DtCW.CW+pop;
   729  007118  50D9               	movf	fsr2l,w,c
   730  00711A  0101               	movlb	(_DtCW+2) shr (0+8)
   731  00711C  25A9               	addwf	(_DtCW+2)& (0+255),w,b
   732                           ;pomiar.c: 252: DtCW.SCW=DtCW.CW+pop;
   733  00711E                     L22:
   734  00711E  CFE8 F1B2          	movff	wreg,_DtCW+11
   735                           ;pomiar.c: 253: }
   736  007122  D0DF               	goto	l102
   737  007124                     l75:
   738                           ;pomiar.c: 254: else
   739  007124  CFE1 F000          	movff	fsr1l,btemp
   740  007128  6A01               	clrf	btemp+1,c
   741  00712A  BE00               	btfsc	btemp,7,c
   742  00712C  0601               	decf	btemp+1,f,c
   743  00712E  1E00               	comf	btemp,f,c
   744  007130  1E01               	comf	btemp+1,f,c
   745  007132  4A00               	infsnz	btemp,f,c
   746  007134  2A01               	incf	btemp+1,f,c
   747  007136  5001               	movf	btemp+1,w,c
   748  007138  0A80               	xorlw	128
   749  00713A  0F80               	addlw	-128
   750  00713C  0E03               	movlw	3
   751  00713E  B4D8               	btfsc	status,2,c
   752  007140  5C00               	subwf	btemp,w,c
   753  007142  E203               	bc	l82
   754  007144  50E1               	movf	fsr1l,w,c
   755  007146  0800               	sublw	0
   756  007148  D0C5               	goto	L6
   757  00714A                     l82:
   758                           ;pomiar.c: 257: else
   759  00714A  CFE1 F000          	movff	fsr1l,btemp
   760  00714E  6A01               	clrf	btemp+1,c
   761  007150  BE00               	btfsc	btemp,7,c
   762  007152  0601               	decf	btemp+1,f,c
   763  007154  1E00               	comf	btemp,f,c
   764  007156  1E01               	comf	btemp+1,f,c
   765  007158  4A00               	infsnz	btemp,f,c
   766  00715A  2A01               	incf	btemp+1,f,c
   767  00715C  5001               	movf	btemp+1,w,c
   768  00715E  0A80               	xorlw	128
   769  007160  0F80               	addlw	-128
   770  007162  0E03               	movlw	3
   771  007164  B4D8               	btfsc	status,2,c
   772  007166  5C00               	subwf	btemp,w,c
   773  007168  E312               	bnc	l84
   774  00716A  CFE1 F000          	movff	fsr1l,btemp
   775  00716E  6A01               	clrf	btemp+1,c
   776  007170  BE00               	btfsc	btemp,7,c
   777  007172  0601               	decf	btemp+1,f,c
   778  007174  1E00               	comf	btemp,f,c
   779  007176  1E01               	comf	btemp+1,f,c
   780  007178  4A00               	infsnz	btemp,f,c
   781  00717A  2A01               	incf	btemp+1,f,c
   782  00717C  5001               	movf	btemp+1,w,c
   783  00717E  0A80               	xorlw	128
   784  007180  0F80               	addlw	-128
   785  007182  0E09               	movlw	9
   786  007184  B4D8               	btfsc	status,2,c
   787  007186  5C00               	subwf	btemp,w,c
   788  007188  E202               	bc	l84
   789  00718A  0E03               	movlw	3
   790  00718C  D0A3               	goto	L6
   791  00718E                     l84:
   792                           ;pomiar.c: 259: else
   793  00718E  CFE1 F000          	movff	fsr1l,btemp
   794  007192  6A01               	clrf	btemp+1,c
   795  007194  BE00               	btfsc	btemp,7,c
   796  007196  0601               	decf	btemp+1,f,c
   797  007198  1E00               	comf	btemp,f,c
   798  00719A  1E01               	comf	btemp+1,f,c
   799  00719C  4A00               	infsnz	btemp,f,c
   800  00719E  2A01               	incf	btemp+1,f,c
   801  0071A0  5001               	movf	btemp+1,w,c
   802  0071A2  0A80               	xorlw	128
   803  0071A4  0F80               	addlw	-128
   804  0071A6  0E09               	movlw	9
   805  0071A8  B4D8               	btfsc	status,2,c
   806  0071AA  5C00               	subwf	btemp,w,c
   807  0071AC  E201 D093          	bnc	l98
   808  0071B0  50E1               	movf	fsr1l,w,c
   809  0071B2  0F0B               	addlw	11
   810  0071B4  D08F               	goto	L6
   811                           ;pomiar.c: 261: DtCW.SCW=DtCW.CW-pop;
   812                           ;pomiar.c: 262: }
   813  0071B6                     l72:
   814                           ;pomiar.c: 265: else
   815  0071B6  C1A9  FFE8         	movff	_DtCW+2,wreg
   816  0071BA  0101               	movlb	(_DtCW+4) shr (0+8)
   817  0071BC  5DAB               	subwf	(_DtCW+4)& (0+255),w,b
   818  0071BE  6EE1               	movwf	fsr1l,c
   819                           ;pomiar.c: 268: if((DtCW.CW>=(DtCW.PPCW+8))||(Dt
      +                          CW.CW<=(DtCW.PPCW-8))) DtCW.SCW=DtCW.CW;
   820  0071C0  0E08               	movlw	8
   821  0071C2  C1AB  F002         	movff	_DtCW+4,btemp+2
   822  0071C6  6A03               	clrf	btemp+3,c
   823  0071C8  2602               	addwf	btemp+2,f,c
   824  0071CA  0E00               	movlw	0
   825  0071CC  2203               	addwfc	btemp+3,f,c
   826  0071CE  C1A9  F000         	movff	_DtCW+2,btemp
   827  0071D2  6A01               	clrf	btemp+1,c
   828  0071D4  5001               	movf	btemp+1,w,c
   829  0071D6  0A80               	xorlw	128
   830  0071D8  6E04               	movwf	btemp+4,c
   831  0071DA  5003               	movf	btemp+3,w,c
   832  0071DC  0A80               	xorlw	128
   833  0071DE  5C04               	subwf	btemp+4,w,c
   834  0071E0  E102               	bnz	u515
   835  0071E2  5002               	movf	btemp+2,w,c
   836  0071E4  5C00               	subwf	btemp,w,c
   837  0071E6                     u515:
   838  0071E6  E27B               	bc	l71
   839  0071E8  C1A9  F000         	movff	_DtCW+2,btemp
   840  0071EC  6A01               	clrf	btemp+1,c
   841  0071EE  C1AB  F002         	movff	_DtCW+4,btemp+2
   842  0071F2  0EF8               	movlw	248
   843  0071F4  2402               	addwf	btemp+2,w,c
   844  0071F6  6EF6               	movwf	tblptrl,c
   845  0071F8  6AF7               	clrf	tblptrh,c
   846  0071FA  0EFF               	movlw	255
   847  0071FC  22F7               	addwfc	tblptrh,f,c
   848  0071FE  50F7               	movf	tblptrh,w,c
   849  007200  0A80               	xorlw	128
   850  007202  6E02               	movwf	btemp+2,c
   851  007204  5001               	movf	btemp+1,w,c
   852  007206  0A80               	xorlw	128
   853  007208  5C02               	subwf	btemp+2,w,c
   854  00720A  E102               	bnz	u525
   855  00720C  5000               	movf	btemp,w,c
   856  00720E  5CF6               	subwf	tblptrl,w,c
   857  007210                     u525:
   858  007210  E266               	bc	l71
   859                           ;pomiar.c: 269: else
   860  007212  BEE1               	btfsc	fsr1l,7,c
   861  007214  D018               	goto	l90
   862                           ;pomiar.c: 272: {
   863  007216  50E1               	movf	fsr1l,w,c
   864  007218  0A80               	xorlw	128
   865  00721A  0F7E               	addlw	-130
   866  00721C  E202               	bc	l91
   867  00721E                     L48:
   868  00721E  50E1               	movf	fsr1l,w,c
   869  007220  D77A               	goto	L21
   870  007222                     l91:
   871                           ;pomiar.c: 274: else
   872  007222  50E1               	movf	fsr1l,w,c
   873  007224  0A80               	xorlw	128
   874  007226  0F7E               	addlw	-130
   875  007228  E306               	bnc	l93
   876  00722A  50E1               	movf	fsr1l,w,c
   877  00722C  0A80               	xorlw	128
   878  00722E  0F79               	addlw	-135
   879  007230  E202               	bc	l93
   880  007232  0E02               	movlw	2
   881  007234  D770               	goto	L21
   882  007236                     l93:
   883                           ;pomiar.c: 276: else
   884  007236  50E1               	movf	fsr1l,w,c
   885  007238  0A80               	xorlw	128
   886  00723A  0F79               	addlw	-135
   887  00723C  E201 D76C          	bnc	l92
   888  007240  50E1               	movf	fsr1l,w,c
   889  007242  0808               	sublw	8
   890  007244  D768               	goto	L21
   891                           ;pomiar.c: 279: }
   892  007246                     l90:
   893                           ;pomiar.c: 280: else
   894  007246  CFE1 F000          	movff	fsr1l,btemp
   895  00724A  6A01               	clrf	btemp+1,c
   896  00724C  BE00               	btfsc	btemp,7,c
   897  00724E  0601               	decf	btemp+1,f,c
   898  007250  1E00               	comf	btemp,f,c
   899  007252  1E01               	comf	btemp+1,f,c
   900  007254  4A00               	infsnz	btemp,f,c
   901  007256  2A01               	incf	btemp+1,f,c
   902  007258  5001               	movf	btemp+1,w,c
   903  00725A  0A80               	xorlw	128
   904  00725C  0F80               	addlw	-128
   905  00725E  0E02               	movlw	2
   906  007260  B4D8               	btfsc	status,2,c
   907  007262  5C00               	subwf	btemp,w,c
   908  007264  E203               	bc	l97
   909  007266  50E1               	movf	fsr1l,w,c
   910  007268  0F02               	addlw	2
   911  00726A  D034               	goto	L6
   912  00726C                     l97:
   913                           ;pomiar.c: 283: else
   914  00726C  CFE1 F000          	movff	fsr1l,btemp
   915  007270  6A01               	clrf	btemp+1,c
   916  007272  BE00               	btfsc	btemp,7,c
   917  007274  0601               	decf	btemp+1,f,c
   918  007276  1E00               	comf	btemp,f,c
   919  007278  1E01               	comf	btemp+1,f,c
   920  00727A  4A00               	infsnz	btemp,f,c
   921  00727C  2A01               	incf	btemp+1,f,c
   922  00727E  5001               	movf	btemp+1,w,c
   923  007280  0A80               	xorlw	128
   924  007282  0F80               	addlw	-128
   925  007284  0E02               	movlw	2
   926  007286  B4D8               	btfsc	status,2,c
   927  007288  5C00               	subwf	btemp,w,c
   928  00728A  E312               	bnc	l99
   929  00728C  CFE1 F000          	movff	fsr1l,btemp
   930  007290  6A01               	clrf	btemp+1,c
   931  007292  BE00               	btfsc	btemp,7,c
   932  007294  0601               	decf	btemp+1,f,c
   933  007296  1E00               	comf	btemp,f,c
   934  007298  1E01               	comf	btemp+1,f,c
   935  00729A  4A00               	infsnz	btemp,f,c
   936  00729C  2A01               	incf	btemp+1,f,c
   937  00729E  5001               	movf	btemp+1,w,c
   938  0072A0  0A80               	xorlw	128
   939  0072A2  0F80               	addlw	-128
   940  0072A4  0E07               	movlw	7
   941  0072A6  B4D8               	btfsc	status,2,c
   942  0072A8  5C00               	subwf	btemp,w,c
   943  0072AA  E202               	bc	l99
   944  0072AC  0E02               	movlw	2
   945  0072AE  D012               	goto	L6
   946  0072B0                     l99:
   947                           ;pomiar.c: 285: else
   948  0072B0  CFE1 F000          	movff	fsr1l,btemp
   949  0072B4  6A01               	clrf	btemp+1,c
   950  0072B6  BE00               	btfsc	btemp,7,c
   951  0072B8  0601               	decf	btemp+1,f,c
   952  0072BA  1E00               	comf	btemp,f,c
   953  0072BC  1E01               	comf	btemp+1,f,c
   954  0072BE  4A00               	infsnz	btemp,f,c
   955  0072C0  2A01               	incf	btemp+1,f,c
   956  0072C2  5001               	movf	btemp+1,w,c
   957  0072C4  0A80               	xorlw	128
   958  0072C6  0F80               	addlw	-128
   959  0072C8  0E07               	movlw	7
   960  0072CA  B4D8               	btfsc	status,2,c
   961  0072CC  5C00               	subwf	btemp,w,c
   962  0072CE  E303               	bnc	l98
   963  0072D0  50E1               	movf	fsr1l,w,c
   964  0072D2  0F08               	addlw	8
   965  0072D4                     L6:
   966  0072D4  6ED9               	movwf	fsr2l,c
   967  0072D6                     l98:
   968                           ;pomiar.c: 287: DtCW.SCW=DtCW.CW-pop;
   969  0072D6  50D9               	movf	fsr2l,w,c
   970  0072D8  0101               	movlb	(_DtCW+2) shr (0+8)
   971  0072DA  5DA9               	subwf	(_DtCW+2)& (0+255),w,b
   972  0072DC  D720               	goto	L22
   973                           ;pomiar.c: 288: }
   974  0072DE                     l71:
   975                           ;pomiar.c: 292: else DtCW.SCW=DtCW.CW;
   976  0072DE  C1A9  F1B2         	movff	_DtCW+2,_DtCW+11
   977  0072E2                     l102:
   978                           ;pomiar.c: 293: RSDT1.outCW=DtCW.SCW;
   979  0072E2  C1B2  F12A         	movff	_DtCW+11,_RSDT1+6
   980                           ;pomiar.c: 294: }
   981  0072E6  0012               	return	
   982  0072E8                     __end_of_GoldenEye:
   983                           ;pomiar.c: 297: void PredkoscZmianCW(void)
   984                           ;pomiar.c: 298: {
   985  0072E8                     _PredkoscZmianCW:
   986  000000                     
   987                           ;pomiar.c: 299: static unsigned char ffcw,indff;
   988  0072E8  0101               	movlb	(_M+4) shr (0+8)
   989  0072EA  BD04               	btfsc	(_M+4)& (0+255),6,b
   990  0072EC  D005               	goto	l104
   991                           ;pomiar.c: 303: {
   992  0072EE  010E               	movlb	F1645 shr (0+8)
   993  0072F0  6B9B               	clrf	F1645& (0+255),b
   994                           ;pomiar.c: 305: indff=0;
   995  0072F2  010E               	movlb	F1646 shr (0+8)
   996  0072F4  6B9C               	clrf	F1646& (0+255),b
   997                           ;pomiar.c: 306: }
   998  0072F6  D036               	goto	l105
   999  0072F8                     l104:
  1000                           ;pomiar.c: 307: else
  1001  0072F8  010E               	movlb	F1646 shr (0+8)
  1002  0072FA  539C               	movf	F1646& (0+255),f,b
  1003  0072FC  E10C               	bnz	l106
  1004                           ;pomiar.c: 310: {
  1005  0072FE  6AD9               	clrf	fsr2l,c
  1006  007300                     l107:
  1007  007300  50D9               	movf	fsr2l,w,c
  1008  007302  EE0E  F0A6         	lfsr	0,_wff
  1009  007306  26E9               	addwf	fsr0l,f,c
  1010  007308  0E00               	movlw	0
  1011  00730A  22EA               	addwfc	fsr0h,f,c
  1012  00730C  6AEF               	clrf	indf0,c
  1013  00730E  2AD9               	incf	fsr2l,f,c
  1014  007310  0E09               	movlw	9
  1015  007312  64D9               	cpfsgt	fsr2l,c
  1016  007314  D7F5               	goto	l107
  1017  007316                     l106:
  1018                           ;pomiar.c: 312: }
  1019  007316  010E               	movlb	F1646 shr (0+8)
  1020  007318  2B9C               	incf	F1646& (0+255),f,b
  1021                           ;pomiar.c: 314: if(indff>=9)
  1022  00731A  0E08               	movlw	8
  1023  00731C  659C               	cpfsgt	F1646& (0+255),b
  1024  00731E  D016               	goto	l110
  1025                           ;pomiar.c: 315: {
  1026  007320  0E09               	movlw	9
  1027  007322  CFE8 FE9C          	movff	wreg,F1646
  1028                           ;pomiar.c: 317: for(i=0;i<9;i++) wff[i]=wff[i+1]
      +                          ;
  1029  007326  6AD9               	clrf	fsr2l,c
  1030  007328                     l111:
  1031  007328  50D9               	movf	fsr2l,w,c
  1032  00732A  EE1E  F0A7         	lfsr	1,_wff+1
  1033  00732E  26E1               	addwf	fsr1l,f,c
  1034  007330  0E00               	movlw	0
  1035  007332  22E2               	addwfc	fsr1h,f,c
  1036  007334  50D9               	movf	fsr2l,w,c
  1037  007336  EE0E  F0A6         	lfsr	0,_wff
  1038  00733A  26E9               	addwf	fsr0l,f,c
  1039  00733C  0E00               	movlw	0
  1040  00733E  22EA               	addwfc	fsr0h,f,c
  1041  007340  CFE7 FFEF          	movff	indf1,indf0
  1042  007344  2AD9               	incf	fsr2l,f,c
  1043  007346  0E08               	movlw	8
  1044  007348  64D9               	cpfsgt	fsr2l,c
  1045  00734A  D7EE               	goto	l111
  1046  00734C                     l110:
  1047                           ;pomiar.c: 318: }
  1048  00734C  CE9C  FFE8         	movff	F1646,wreg
  1049  007350  EE0E  F0A6         	lfsr	0,_wff
  1050  007354  26E9               	addwf	fsr0l,f,c
  1051  007356  0E00               	movlw	0
  1052  007358  22EA               	addwfc	fsr0h,f,c
  1053  00735A  CE9B  FFE8         	movff	F1645,wreg
  1054  00735E  0101               	movlb	(_DtCW+2) shr (0+8)
  1055  007360  5DA9               	subwf	(_DtCW+2)& (0+255),w,b
  1056  007362  6EEF               	movwf	indf0,c
  1057  007364                     l105:
  1058                           ;pomiar.c: 320: }
  1059  007364  C1A9  FE9B         	movff	_DtCW+2,F1645
  1060                           ;pomiar.c: 322: w=0;
  1061  007368  6AE1               	clrf	fsr1l,c
  1062                           ;pomiar.c: 323: for(i=0;i<10;i++) w+=wff[i];
  1063  00736A  6AD9               	clrf	fsr2l,c
  1064  00736C                     l114:
  1065  00736C  50D9               	movf	fsr2l,w,c
  1066  00736E  EE0E  F0A6         	lfsr	0,_wff
  1067  007372  26E9               	addwf	fsr0l,f,c
  1068  007374  0E00               	movlw	0
  1069  007376  22EA               	addwfc	fsr0h,f,c
  1070  007378  50EF               	movf	indf0,w,c
  1071  00737A  26E1               	addwf	fsr1l,f,c
  1072  00737C  2AD9               	incf	fsr2l,f,c
  1073  00737E  0E09               	movlw	9
  1074  007380  64D9               	cpfsgt	fsr2l,c
  1075  007382  D7F4               	goto	l114
  1076                           ;pomiar.c: 324: DtCW.ddDCW=w;
  1077  007384  CFE1 F1B0          	movff	fsr1l,_DtCW+9
  1078                           ;pomiar.c: 325: }
  1079  007388  0C09               	retlw	9
  1080  00738A                     __end_of_PredkoscZmianCW:
  1081                           ;pomiar.c: 328: void FltParMod(void)
  1082                           ;pomiar.c: 329: {
  1083  00738A                     _FltParMod:
  1084  000000                     
  1085                           ;pomiar.c: 330: static unsigned char indtm,fco,f
      +                          cw;
  1086  00738A  C1B8  FFE8         	movff	_DtCO+2,wreg
  1087  00738E  010E               	movlb	F1652 shr (0+8)
  1088  007390  619E               	cpfslt	F1652& (0+255),b
  1089  007392  D005               	goto	l118
  1090  007394  CE9E  FFE8         	movff	F1652,wreg
  1091  007398  0101               	movlb	(_DtCO+2) shr (0+8)
  1092  00739A  5DB8               	subwf	(_DtCO+2)& (0+255),w,b
  1093  00739C  D004               	goto	L7
  1094  00739E                     l118:
  1095                           ;pomiar.c: 337: else wr=fco-DtCO.CO;
  1096  00739E  C1B8  FFE8         	movff	_DtCO+2,wreg
  1097  0073A2  010E               	movlb	F1652 shr (0+8)
  1098  0073A4  5D9E               	subwf	F1652& (0+255),w,b
  1099  0073A6                     L7:
  1100  0073A6  6ED9               	movwf	fsr2l,c
  1101                           ;pomiar.c: 338: if(wr) DtCO.indCO++;
  1102  0073A8  50D9               	movf	fsr2l,w,c
  1103  0073AA  E002               	bz	l120
  1104  0073AC  0101               	movlb	(_DtCO+10) shr (0+8)
  1105  0073AE  2BC0               	incf	(_DtCO+10)& (0+255),f,b
  1106  0073B0                     l120:
  1107                           ;pomiar.c: 339: if(wr>=2) DtCO.indCO=10;
  1108  0073B0  0E01               	movlw	1
  1109  0073B2  64D9               	cpfsgt	fsr2l,c
  1110  0073B4  D003               	goto	l121
  1111  0073B6  0E0A               	movlw	10
  1112  0073B8  CFE8 F1C0          	movff	wreg,_DtCO+10
  1113  0073BC                     l121:
  1114                           ;pomiar.c: 341: if(DtCW.CW>fcw) wr=DtCW.CW-fcw;
  1115  0073BC  C1A9  FFE8         	movff	_DtCW+2,wreg
  1116  0073C0  010E               	movlb	F1653 shr (0+8)
  1117  0073C2  619F               	cpfslt	F1653& (0+255),b
  1118  0073C4  D005               	goto	l122
  1119  0073C6  CE9F  FFE8         	movff	F1653,wreg
  1120  0073CA  0101               	movlb	(_DtCW+2) shr (0+8)
  1121  0073CC  5DA9               	subwf	(_DtCW+2)& (0+255),w,b
  1122  0073CE  D004               	goto	L8
  1123  0073D0                     l122:
  1124                           ;pomiar.c: 342: else wr=fcw-DtCW.CW;
  1125  0073D0  C1A9  FFE8         	movff	_DtCW+2,wreg
  1126  0073D4  010E               	movlb	F1653 shr (0+8)
  1127  0073D6  5D9F               	subwf	F1653& (0+255),w,b
  1128  0073D8                     L8:
  1129  0073D8  6ED9               	movwf	fsr2l,c
  1130                           ;pomiar.c: 343: if(wr) DtCW.indCW++;
  1131  0073DA  50D9               	movf	fsr2l,w,c
  1132  0073DC  E002               	bz	l124
  1133  0073DE  0101               	movlb	(_DtCW+10) shr (0+8)
  1134  0073E0  2BB1               	incf	(_DtCW+10)& (0+255),f,b
  1135  0073E2                     l124:
  1136                           ;pomiar.c: 344: if(wr>=2) DtCW.indCW=10;
  1137  0073E2  0E01               	movlw	1
  1138  0073E4  64D9               	cpfsgt	fsr2l,c
  1139  0073E6  D003               	goto	l125
  1140  0073E8  0E0A               	movlw	10
  1141  0073EA  CFE8 F1B1          	movff	wreg,_DtCW+10
  1142  0073EE                     l125:
  1143                           ;pomiar.c: 345: PredkoscZmianCW();
  1144  0073EE  DF7C               	call	_PredkoscZmianCW	;wreg free
  1145                           ;pomiar.c: 348: indtm++;
  1146  0073F0  010E               	movlb	F1651 shr (0+8)
  1147  0073F2  2B9D               	incf	F1651& (0+255),f,b
  1148                           ;pomiar.c: 349: if(indtm>9)
  1149  0073F4  0E09               	movlw	9
  1150  0073F6  659D               	cpfsgt	F1651& (0+255),b
  1151  0073F8  0C09               	retlw	9
  1152                           ;pomiar.c: 350: {
  1153  0073FA  6B9D               	clrf	F1651& (0+255),b
  1154                           ;pomiar.c: 353: DtZW.SZW=DtZW.ZW;
  1155  0073FC  C19E  F19F         	movff	_DtZW+2,_DtZW+3
  1156                           ;pomiar.c: 356: if(DtCO.indCO<=7) DtCO.dDCO=0;
  1157  007400  0E08               	movlw	8
  1158  007402  0101               	movlb	(_DtCO+10) shr (0+8)
  1159  007404  61C0               	cpfslt	(_DtCO+10)& (0+255),b
  1160  007406  D002               	goto	l127
  1161  007408  6BBF               	clrf	(_DtCO+9)& (0+255),b
  1162  00740A  D008               	goto	l128
  1163  00740C                     l127:
  1164                           ;pomiar.c: 357: else
  1165  00740C  CE9E  FFE8         	movff	F1652,wreg
  1166  007410  0101               	movlb	(_DtCO+2) shr (0+8)
  1167  007412  5DB8               	subwf	(_DtCO+2)& (0+255),w,b
  1168  007414  CFE8 F1BF          	movff	wreg,_DtCO+9
  1169                           ;pomiar.c: 360: fco=DtCO.CO;
  1170  007418  C1B8  FE9E         	movff	_DtCO+2,F1652
  1171  00741C                     l128:
  1172                           ;pomiar.c: 361: }
  1173  00741C  0101               	movlb	(_DtCO+10) shr (0+8)
  1174  00741E  6BC0               	clrf	(_DtCO+10)& (0+255),b
  1175                           ;pomiar.c: 364: if(DtCW.indCW<=7)
  1176  007420  0E08               	movlw	8
  1177  007422  61B1               	cpfslt	(_DtCW+10)& (0+255),b
  1178  007424  D003               	goto	l129
  1179                           ;pomiar.c: 365: {
  1180  007426  6BAF               	clrf	(_DtCW+8)& (0+255),b
  1181                           ;pomiar.c: 367: DtCW._fpCW=1;
  1182  007428  85A8               	bsf	(_DtCW+1)& (0+255),2,b
  1183                           ;pomiar.c: 368: }
  1184  00742A  D009               	goto	l130
  1185  00742C                     l129:
  1186                           ;pomiar.c: 369: else
  1187  00742C  CE9F  FFE8         	movff	F1653,wreg
  1188  007430  0101               	movlb	(_DtCW+2) shr (0+8)
  1189  007432  5DA9               	subwf	(_DtCW+2)& (0+255),w,b
  1190  007434  CFE8 F1AF          	movff	wreg,_DtCW+8
  1191                           ;pomiar.c: 372: DtCW._fpCW=1;
  1192  007438  85A8               	bsf	(_DtCW+1)& (0+255),2,b
  1193                           ;pomiar.c: 373: fcw=DtCW.CW;
  1194  00743A  C1A9  FE9F         	movff	_DtCW+2,F1653
  1195  00743E                     l130:
  1196                           ;pomiar.c: 374: }
  1197  00743E  0101               	movlb	(_DtCW+10) shr (0+8)
  1198  007440  6BB1               	clrf	(_DtCW+10)& (0+255),b
  1199                           ;pomiar.c: 376: }
  1200  007442  0012               	return	
  1201  007444                     __end_of_FltParMod:
  1202                           ;pomiar.c: 381: void FiltrPomiarowyCOCW(void)
  1203                           ;pomiar.c: 382: {
  1204  007444                     _FiltrPomiarowyCOCW:
  1205  000000                     
  1206                           ;pomiar.c: 383: unsigned char bnc;
  1207  007444  0E14               	movlw	20
  1208  007446  DD2C               	call	_PmrTim1
  1209  007448  E302               	bnc	l132
  1210                           ;pomiar.c: 387: {
  1211  00744A  DD27               	call	_StartTim1	;wreg free
  1212                           ;pomiar.c: 389: GoldenEye();
  1213  00744C  DD53               	call	_GoldenEye	;wreg free
  1214  00744E                     l132:
  1215                           ;pomiar.c: 390: }
  1216  00744E  C120  FFE8         	movff	_M+32,wreg
  1217  007452  0101               	movlb	(_DtCO+4) shr (0+8)
  1218  007454  5DBA               	subwf	(_DtCO+4)& (0+255),w,b
  1219  007456  E315               	bnc	l133
  1220                           ;pomiar.c: 394: {
  1221  007458  C120  FFE8         	movff	_M+32,wreg
  1222  00745C  C1BA  F000         	movff	_DtCO+4,btemp
  1223  007460  6A01               	clrf	btemp+1,c
  1224  007462  5E00               	subwf	btemp,f,c
  1225  007464  0E00               	movlw	0
  1226  007466  5A01               	subwfb	btemp+1,f,c
  1227  007468  5001               	movf	btemp+1,w,c
  1228  00746A  0A80               	xorlw	128
  1229  00746C  0F80               	addlw	-128
  1230  00746E  0E01               	movlw	1
  1231  007470  B4D8               	btfsc	status,2,c
  1232  007472  5C00               	subwf	btemp,w,c
  1233  007474  E206               	bc	l133
  1234                           ;pomiar.c: 396: {
  1235                           ;pomiar.c: 398: }
  1236                           ;pomiar.c: 399: else
  1237  007476  C120  FFE8         	movff	_M+32,wreg
  1238  00747A  5DBA               	subwf	(_DtCO+4)& (0+255),w,b
  1239  00747C  0800               	sublw	0
  1240  00747E  6ED9               	movwf	fsr2l,c
  1241                           ;pomiar.c: 402: }
  1242  007480  D001               	goto	l136
  1243  007482                     l133:
  1244                           ;pomiar.c: 404: else
  1245  007482  6AD9               	clrf	fsr2l,c
  1246  007484                     l136:
  1247                           ;pomiar.c: 407: }
  1248  007484  C1B8  F000         	movff	_DtCO+2,btemp
  1249  007488  50D9               	movf	fsr2l,w,c
  1250  00748A  0101               	movlb	(_M+32) shr (0+8)
  1251  00748C  5D20               	subwf	(_M+32)& (0+255),w,b
  1252  00748E  6E01               	movwf	btemp+1,c
  1253  007490  5000               	movf	btemp,w,c
  1254  007492  5C01               	subwf	btemp+1,w,c
  1255  007494  CFE8 F1BE          	movff	wreg,_DtCO+8
  1256                           ;pomiar.c: 411: DtCW.DCW=(DtCW.PPCW-(2-1))-DtCW.
      +                          CW;
  1257  007498  C1A9  F000         	movff	_DtCW+2,btemp
  1258  00749C  C1AB  F001         	movff	_DtCW+4,btemp+1
  1259  0074A0  0EFF               	movlw	-1
  1260  0074A2  2601               	addwf	btemp+1,f,c
  1261  0074A4  5000               	movf	btemp,w,c
  1262  0074A6  5C01               	subwf	btemp+1,w,c
  1263  0074A8  CFE8 F1AE          	movff	wreg,_DtCW+7
  1264                           ;pomiar.c: 413: if(!DtIN._err_IN)
  1265  0074AC  0101               	movlb	_DtIN shr (0+8)
  1266  0074AE  B1C7               	btfsc	_DtIN& (0+255),0,b
  1267  0074B0  D02D               	goto	l137
  1268                           ;pomiar.c: 414: {
  1269  0074B2  C1B8  FFE8         	movff	_DtCO+2,wreg
  1270  0074B6  61C9               	cpfslt	(_DtIN+2)& (0+255),b
  1271  0074B8  D006               	goto	l138
  1272  0074BA  C1C9  FFE8         	movff	_DtIN+2,wreg
  1273  0074BE  5DB8               	subwf	(_DtCO+2)& (0+255),w,b
  1274  0074C0  CFE8 F1CA          	movff	wreg,_DtIN+3
  1275  0074C4  D002               	goto	l139
  1276  0074C6                     l138:
  1277                           ;pomiar.c: 417: else DtIN.DIN=0;
  1278  0074C6  0101               	movlb	(_DtIN+3) shr (0+8)
  1279  0074C8  6BCA               	clrf	(_DtIN+3)& (0+255),b
  1280  0074CA                     l139:
  1281                           ;pomiar.c: 419: if((M.CONTSETP-bnc)>DtIN.IN) DtI
      +                          N.DIN2=(M.CONTSETP-bnc)-DtIN.IN;
  1282  0074CA  50D9               	movf	fsr2l,w,c
  1283  0074CC  C120  F002         	movff	_M+32,btemp+2
  1284  0074D0  6A03               	clrf	btemp+3,c
  1285  0074D2  5E02               	subwf	btemp+2,f,c
  1286  0074D4  0E00               	movlw	0
  1287  0074D6  5A03               	subwfb	btemp+3,f,c
  1288  0074D8  C1C9  F000         	movff	_DtIN+2,btemp
  1289  0074DC  6A01               	clrf	btemp+1,c
  1290  0074DE  5001               	movf	btemp+1,w,c
  1291  0074E0  0A80               	xorlw	128
  1292  0074E2  6E04               	movwf	btemp+4,c
  1293  0074E4  5003               	movf	btemp+3,w,c
  1294  0074E6  0A80               	xorlw	128
  1295  0074E8  5C04               	subwf	btemp+4,w,c
  1296  0074EA  E102               	bnz	u855
  1297  0074EC  5002               	movf	btemp+2,w,c
  1298  0074EE  5C00               	subwf	btemp,w,c
  1299  0074F0                     u855:
  1300  0074F0  E20B               	bc	l140
  1301  0074F2  C1C9  F000         	movff	_DtIN+2,btemp
  1302  0074F6  50D9               	movf	fsr2l,w,c
  1303  0074F8  0101               	movlb	(_M+32) shr (0+8)
  1304  0074FA  5D20               	subwf	(_M+32)& (0+255),w,b
  1305  0074FC  6E01               	movwf	btemp+1,c
  1306  0074FE  5000               	movf	btemp,w,c
  1307  007500  5C01               	subwf	btemp+1,w,c
  1308  007502  CFE8 F1CB          	movff	wreg,_DtIN+4
  1309  007506  D002               	goto	l137
  1310  007508                     l140:
  1311                           ;pomiar.c: 420: else DtIN.DIN2=0;
  1312  007508  0101               	movlb	(_DtIN+4) shr (0+8)
  1313  00750A  6BCB               	clrf	(_DtIN+4)& (0+255),b
  1314  00750C                     l137:
  1315                           ;pomiar.c: 421: }
  1316  00750C  0E0A               	movlw	10
  1317  00750E  DCD4               	call	_PmrTim2
  1318  007510  E302               	bnc	l142
  1319                           ;pomiar.c: 423: {
  1320  007512  DCCF               	call	_StartTim2	;wreg free
  1321                           ;pomiar.c: 425: FltParMod();
  1322  007514  DF3A               	call	_FltParMod	;wreg free
  1323  007516                     l142:
  1324                           ;pomiar.c: 426: }
  1325  007516  C1BF  FFE8         	movff	_DtCO+9,wreg
  1326  00751A  0A80               	xorlw	128
  1327  00751C  0F7A               	addlw	-134
  1328  00751E  0101               	movlb	(_DtCO+1) shr (0+8)
  1329  007520  E302               	bnc	L57
  1330  007522  89B7               	bsf	(_DtCO+1)& (0+255),4,b
  1331  007524  0012               	return	
  1332                           ;pomiar.c: 428: else DtCO._ldDCO=0;
  1333  007526                     L57:
  1334  007526  99B7               	bcf	(_DtCO+1)& (0+255),4,b
  1335                           ;pomiar.c: 429: }
  1336  007528  0012               	return	
  1337  00752A                     __end_of_FiltrPomiarowyCOCW:
  1338                           ;pomiar.c: 433: void PomiarCO(void)
  1339                           ;pomiar.c: 434: {
  1340  00752A                     _PomiarCO:
  1341  000000                     
  1342                           ;pomiar.c: 435: DtCO.AC_CO=ReadAC(0);
  1343  00752A  0E00               	movlw	0
  1344  00752C  ECEB  F074         	call	_ReadAC
  1345  007530  CFE8 F1C2          	movff	wreg,_DtCO+12
  1346                           ;pomiar.c: 436: DtCO.CO=ReadTabNTC(DtCO.AC_CO);
  1347  007534  C1C2  FFE8         	movff	_DtCO+12,wreg
  1348  007538  EC21  F075         	call	_ReadTabNTC
  1349  00753C  CFE8 F1B8          	movff	wreg,_DtCO+2
  1350                           ;pomiar.c: 437: DtCO.HstCo=DtKNF.hsco;
  1351  007540  C243  F1C5         	movff	_DtKNF+19,_DtCO+15
  1352                           ;pomiar.c: 438: DtCO.F3PPCO=DtKNF.conw;
  1353  007544  C244  F1C6         	movff	_DtKNF+20,_DtCO+16
  1354                           ;pomiar.c: 439: if(DtCO.AC_CO<=0X28||DtCO.AC_CO>
      +                          =0XF5)
  1355  007548  0E29               	movlw	41
  1356  00754A  0101               	movlb	(_DtCO+12) shr (0+8)
  1357  00754C  61C2               	cpfslt	(_DtCO+12)& (0+255),b
  1358  00754E  D001               	goto	u881
  1359  007550  D003               	goto	u900
  1360  007552                     u881:
  1361  007552  0EF4               	movlw	-12
  1362  007554  65C2               	cpfsgt	(_DtCO+12)& (0+255),b
  1363  007556  D010               	goto	l146
  1364  007558                     u900:
  1365                           ;pomiar.c: 440: {
  1366  007558  0101               	movlb	_DtCO shr (0+8)
  1367  00755A  81B6               	bsf	_DtCO& (0+255),0,b
  1368                           ;pomiar.c: 442: DtCO._su_CO=0;
  1369  00755C  93B6               	bcf	_DtCO& (0+255),1,b
  1370                           ;pomiar.c: 443: DtCO._ad_CO=0;
  1371  00755E  95B6               	bcf	_DtCO& (0+255),2,b
  1372                           ;pomiar.c: 444: DtCO._cold_CO=0;
  1373  007560  95B7               	bcf	(_DtCO+1)& (0+255),2,b
  1374                           ;pomiar.c: 445: DtCO._hot_CO=0;
  1375  007562  97B7               	bcf	(_DtCO+1)& (0+255),3,b
  1376                           ;pomiar.c: 446: DtCO._on_DZ_CO=0;
  1377  007564  9BB6               	bcf	_DtCO& (0+255),5,b
  1378                           ;pomiar.c: 447: DtCO._su_DZ_CO=0;
  1379  007566  9DB6               	bcf	_DtCO& (0+255),6,b
  1380                           ;pomiar.c: 448: DtCO._ad_DZ_CO=0;
  1381  007568  9FB6               	bcf	_DtCO& (0+255),7,b
  1382                           ;pomiar.c: 449: DtCO._ptwp_CO=0;
  1383  00756A  91B7               	bcf	(_DtCO+1)& (0+255),0,b
  1384                           ;pomiar.c: 450: DtCO._pz_CO=0;
  1385  00756C  93B7               	bcf	(_DtCO+1)& (0+255),1,b
  1386                           ;pomiar.c: 451: DtCO._su_SRW_CO=0;
  1387  00756E  97B6               	bcf	_DtCO& (0+255),3,b
  1388                           ;pomiar.c: 452: DtCO._ad_SRW_CO=0;
  1389  007570  99B6               	bcf	_DtCO& (0+255),4,b
  1390                           ;pomiar.c: 453: RSDT1.outrCO=0;
  1391  007572  0101               	movlb	(_RSDT1+27) shr (0+8)
  1392  007574  6B3F               	clrf	(_RSDT1+27)& (0+255),b
  1393                           ;pomiar.c: 454: return;
  1394  007576  0012               	return	
  1395  007578                     l146:
  1396                           ;pomiar.c: 456: else DtCO._err_CO=0;
  1397  007578  0101               	movlb	_DtCO shr (0+8)
  1398  00757A  91B6               	bcf	_DtCO& (0+255),0,b
  1399                           ;pomiar.c: 457: RSDT1.outrCO=DtCO.CO;
  1400  00757C  C1B8  F13F         	movff	_DtCO+2,_RSDT1+27
  1401                           ;pomiar.c: 458: switch(DtKNF.tpkt)
  1402  007580  D269               	goto	l149
  1403  007582                     l151:
  1404                           ;pomiar.c: 461: case 2:
  1405  007582  EE02  F03B         	lfsr	0,_DtKNF+11
  1406  007586  50EF               	movf	indf0,w,c
  1407                           ;pomiar.c: 464: {
  1408  007588  C1C5  FFE8         	movff	_DtCO+15,wreg
  1409  00758C  E134               	bnz	L58
  1410  00758E  C120  F000         	movff	_M+32,btemp
  1411  007592  6A01               	clrf	btemp+1,c
  1412  007594  2600               	addwf	btemp,f,c
  1413  007596  0E00               	movlw	0
  1414  007598  2201               	addwfc	btemp+1,f,c
  1415  00759A  5001               	movf	btemp+1,w,c
  1416  00759C  0A80               	xorlw	128
  1417  00759E  0F80               	addlw	-128
  1418  0075A0  0E5B               	movlw	91
  1419  0075A2  B4D8               	btfsc	status,2,c
  1420  0075A4  5C00               	subwf	btemp,w,c
  1421  0075A6  E30F               	bnc	l153
  1422                           ;pomiar.c: 466: {
  1423  0075A8  C1B8  F000         	movff	_DtCO+2,btemp
  1424  0075AC  0EAB               	movlw	171
  1425  0075AE                     L25:
  1426  0075AE  2400               	addwf	btemp,w,c
  1427  0075B0  6E02               	movwf	btemp+2,c
  1428  0075B2  6A03               	clrf	btemp+3,c
  1429  0075B4  0EFF               	movlw	255
  1430  0075B6  2203               	addwfc	btemp+3,f,c
  1431  0075B8  5003               	movf	btemp+3,w,c
  1432  0075BA  0A80               	xorlw	128
  1433  0075BC  0F80               	addlw	-128
  1434  0075BE  0E05               	movlw	5
  1435  0075C0  B4D8               	btfsc	status,2,c
  1436  0075C2                     L24:
  1437  0075C2  5C02               	subwf	btemp+2,w,c
  1438  0075C4  D014               	goto	u945
  1439                           ;pomiar.c: 468: else DtCO._ad_CO=0;
  1440                           ;pomiar.c: 469: }
  1441  0075C6                     l153:
  1442                           ;pomiar.c: 470: else
  1443  0075C6  C1C5  F000         	movff	_DtCO+15,btemp
  1444  0075CA  6A01               	clrf	btemp+1,c
  1445  0075CC  C120  FFE8         	movff	_M+32,wreg
  1446  0075D0  C1B8  F002         	movff	_DtCO+2,btemp+2
  1447  0075D4  6A03               	clrf	btemp+3,c
  1448  0075D6  5E02               	subwf	btemp+2,f,c
  1449  0075D8  0E00               	movlw	0
  1450  0075DA  5A03               	subwfb	btemp+3,f,c
  1451  0075DC  5003               	movf	btemp+3,w,c
  1452  0075DE  0A80               	xorlw	128
  1453  0075E0  6E04               	movwf	btemp+4,c
  1454  0075E2  5001               	movf	btemp+1,w,c
  1455  0075E4  0A80               	xorlw	128
  1456  0075E6  5C04               	subwf	btemp+4,w,c
  1457  0075E8  E102               	bnz	u945
  1458  0075EA  5000               	movf	btemp,w,c
  1459  0075EC  D7EA               	goto	L24
  1460  0075EE                     u945:
  1461  0075EE  E329               	bnc	l164
  1462  0075F0                     u940:
  1463  0075F0  0101               	movlb	_DtCO shr (0+8)
  1464  0075F2  85B6               	bsf	_DtCO& (0+255),2,b
  1465  0075F4  D028               	goto	l159
  1466                           ;pomiar.c: 473: else DtCO._ad_CO=0;
  1467                           ;pomiar.c: 474: }
  1468                           ;pomiar.c: 476: else
  1469  0075F6                     L58:
  1470  0075F6  C120  F000         	movff	_M+32,btemp
  1471  0075FA  6A01               	clrf	btemp+1,c
  1472  0075FC  2600               	addwf	btemp,f,c
  1473  0075FE  0E00               	movlw	0
  1474  007600  2201               	addwfc	btemp+1,f,c
  1475  007602  5001               	movf	btemp+1,w,c
  1476  007604  0A80               	xorlw	128
  1477  007606  0F80               	addlw	-128
  1478  007608  0E3D               	movlw	61
  1479  00760A  B4D8               	btfsc	status,2,c
  1480  00760C  5C00               	subwf	btemp,w,c
  1481  00760E  E304               	bnc	l160
  1482                           ;pomiar.c: 479: {
  1483  007610  C1B8  F000         	movff	_DtCO+2,btemp
  1484  007614  0EC9               	movlw	201
  1485  007616  D7CB               	goto	L25
  1486                           ;pomiar.c: 481: else DtCO._ad_CO=0;
  1487                           ;pomiar.c: 482: }
  1488  007618                     l160:
  1489                           ;pomiar.c: 483: else
  1490  007618  C1C5  F000         	movff	_DtCO+15,btemp
  1491  00761C  6A01               	clrf	btemp+1,c
  1492  00761E  C120  FFE8         	movff	_M+32,wreg
  1493  007622  C1B8  F002         	movff	_DtCO+2,btemp+2
  1494  007626  6A03               	clrf	btemp+3,c
  1495  007628  5E02               	subwf	btemp+2,f,c
  1496  00762A  0E00               	movlw	0
  1497  00762C  5A03               	subwfb	btemp+3,f,c
  1498  00762E  5003               	movf	btemp+3,w,c
  1499  007630  0A80               	xorlw	128
  1500  007632  6E04               	movwf	btemp+4,c
  1501  007634  5001               	movf	btemp+1,w,c
  1502  007636  0A80               	xorlw	128
  1503  007638  5C04               	subwf	btemp+4,w,c
  1504  00763A  E102               	bnz	u975
  1505  00763C  5000               	movf	btemp,w,c
  1506  00763E  5C02               	subwf	btemp+2,w,c
  1507  007640                     u975:
  1508  007640  E2D7               	bc	u940
  1509  007642                     l164:
  1510                           ;pomiar.c: 486: else DtCO._ad_CO=0;
  1511  007642  0101               	movlb	_DtCO shr (0+8)
  1512  007644  95B6               	bcf	_DtCO& (0+255),2,b
  1513  007646                     l159:
  1514                           ;pomiar.c: 487: }
  1515  007646  C1B8  FFE8         	movff	_DtCO+2,wreg
  1516  00764A  C120  F000         	movff	_M+32,btemp
  1517  00764E  6A01               	clrf	btemp+1,c
  1518  007650  5E00               	subwf	btemp,f,c
  1519  007652  0E00               	movlw	0
  1520  007654  5A01               	subwfb	btemp+1,f,c
  1521  007656  5001               	movf	btemp+1,w,c
  1522  007658  0A80               	xorlw	128
  1523  00765A  0F80               	addlw	-128
  1524  00765C  0E05               	movlw	5
  1525  00765E  B4D8               	btfsc	status,2,c
  1526  007660  5C00               	subwf	btemp,w,c
  1527  007662  0101               	movlb	_DtCO shr (0+8)
  1528  007664  E302               	bnc	L59
  1529  007666  83B6               	bsf	_DtCO& (0+255),1,b
  1530  007668  D001               	goto	l167
  1531                           ;pomiar.c: 491: else DtCO._su_CO=0;
  1532  00766A                     L59:
  1533  00766A  93B6               	bcf	_DtCO& (0+255),1,b
  1534  00766C                     l167:
  1535                           ;pomiar.c: 493: if(DtCO.CO<=50) DtCO._ptwp_CO=1;
  1536  00766C  0E33               	movlw	51
  1537  00766E  0101               	movlb	(_DtCO+2) shr (0+8)
  1538  007670  61B8               	cpfslt	(_DtCO+2)& (0+255),b
  1539  007672  D001               	goto	l168
  1540  007674  81B7               	bsf	(_DtCO+1)& (0+255),0,b
  1541  007676                     l168:
  1542                           ;pomiar.c: 494: if(DtCO.CO>50+1) DtCO._ptwp_CO=0
      +                          ;
  1543  007676  0E33               	movlw	51
  1544  007678  0101               	movlb	(_DtCO+2) shr (0+8)
  1545  00767A  65B8               	cpfsgt	(_DtCO+2)& (0+255),b
  1546  00767C  D001               	goto	l169
  1547  00767E  91B7               	bcf	(_DtCO+1)& (0+255),0,b
  1548  007680                     l169:
  1549                           ;pomiar.c: 495: if(DtCO.CO<=82) DtCO._pz_CO=1;
  1550  007680  0E53               	movlw	83
  1551  007682  0101               	movlb	(_DtCO+2) shr (0+8)
  1552  007684  61B8               	cpfslt	(_DtCO+2)& (0+255),b
  1553  007686  D001               	goto	l170
  1554  007688  83B7               	bsf	(_DtCO+1)& (0+255),1,b
  1555  00768A                     l170:
  1556                           ;pomiar.c: 496: if(DtCO.CO>88) DtCO._pz_CO=0;
  1557  00768A  0E58               	movlw	88
  1558  00768C  D1CA               	goto	L54
  1559                           ;pomiar.c: 497: if(DtCO.CO<=7) DtCO._cold_CO=1;
  1560                           ;pomiar.c: 498: if(DtCO.CO>7+1) DtCO._cold_CO=0;
  1561                           ;pomiar.c: 499: if(DtCO.CO>=88) DtCO._hot_CO=1;
  1562                           ;pomiar.c: 500: if(DtCO.CO<88-1) DtCO._hot_CO=0;
  1563                           ;pomiar.c: 501: break;
  1564  00768E                     l176:
  1565                           ;pomiar.c: 502: }
  1566                           ;pomiar.c: 504: {
  1567  00768E  EE02  F03B         	lfsr	0,_DtKNF+11
  1568  007692  50EF               	movf	indf0,w,c
  1569                           ;pomiar.c: 506: {
  1570  007694  C1C5  FFE8         	movff	_DtCO+15,wreg
  1571  007698  E134               	bnz	L60
  1572  00769A  C120  F000         	movff	_M+32,btemp
  1573  00769E  6A01               	clrf	btemp+1,c
  1574  0076A0  2600               	addwf	btemp,f,c
  1575  0076A2  0E00               	movlw	0
  1576  0076A4  2201               	addwfc	btemp+1,f,c
  1577  0076A6  5001               	movf	btemp+1,w,c
  1578  0076A8  0A80               	xorlw	128
  1579  0076AA  0F80               	addlw	-128
  1580  0076AC  0E5B               	movlw	91
  1581  0076AE  B4D8               	btfsc	status,2,c
  1582  0076B0  5C00               	subwf	btemp,w,c
  1583  0076B2  E30F               	bnc	l178
  1584                           ;pomiar.c: 508: {
  1585  0076B4  C1B8  F000         	movff	_DtCO+2,btemp
  1586  0076B8  0EAB               	movlw	171
  1587  0076BA                     L27:
  1588  0076BA  2400               	addwf	btemp,w,c
  1589  0076BC  6E02               	movwf	btemp+2,c
  1590  0076BE  6A03               	clrf	btemp+3,c
  1591  0076C0  0EFF               	movlw	255
  1592  0076C2  2203               	addwfc	btemp+3,f,c
  1593  0076C4  5003               	movf	btemp+3,w,c
  1594  0076C6  0A80               	xorlw	128
  1595  0076C8  0F80               	addlw	-128
  1596  0076CA  0E05               	movlw	5
  1597  0076CC  B4D8               	btfsc	status,2,c
  1598  0076CE                     L26:
  1599  0076CE  5C02               	subwf	btemp+2,w,c
  1600  0076D0  D014               	goto	u1105
  1601                           ;pomiar.c: 510: else DtCO._ad_CO=0;
  1602                           ;pomiar.c: 511: }
  1603  0076D2                     l178:
  1604                           ;pomiar.c: 512: else
  1605  0076D2  C1C5  F000         	movff	_DtCO+15,btemp
  1606  0076D6  6A01               	clrf	btemp+1,c
  1607  0076D8  C120  FFE8         	movff	_M+32,wreg
  1608  0076DC  C1B8  F002         	movff	_DtCO+2,btemp+2
  1609  0076E0  6A03               	clrf	btemp+3,c
  1610  0076E2  5E02               	subwf	btemp+2,f,c
  1611  0076E4  0E00               	movlw	0
  1612  0076E6  5A03               	subwfb	btemp+3,f,c
  1613  0076E8  5003               	movf	btemp+3,w,c
  1614  0076EA  0A80               	xorlw	128
  1615  0076EC  6E04               	movwf	btemp+4,c
  1616  0076EE  5001               	movf	btemp+1,w,c
  1617  0076F0  0A80               	xorlw	128
  1618  0076F2  5C04               	subwf	btemp+4,w,c
  1619  0076F4  E102               	bnz	u1105
  1620  0076F6  5000               	movf	btemp,w,c
  1621  0076F8  D7EA               	goto	L26
  1622  0076FA                     u1105:
  1623  0076FA  E329               	bnc	l189
  1624  0076FC                     u1100:
  1625  0076FC  0101               	movlb	_DtCO shr (0+8)
  1626  0076FE  85B6               	bsf	_DtCO& (0+255),2,b
  1627  007700  D028               	goto	l184
  1628                           ;pomiar.c: 515: else DtCO._ad_CO=0;
  1629                           ;pomiar.c: 516: }
  1630                           ;pomiar.c: 518: else
  1631  007702                     L60:
  1632  007702  C120  F000         	movff	_M+32,btemp
  1633  007706  6A01               	clrf	btemp+1,c
  1634  007708  2600               	addwf	btemp,f,c
  1635  00770A  0E00               	movlw	0
  1636  00770C  2201               	addwfc	btemp+1,f,c
  1637  00770E  5001               	movf	btemp+1,w,c
  1638  007710  0A80               	xorlw	128
  1639  007712  0F80               	addlw	-128
  1640  007714  0E3D               	movlw	61
  1641  007716  B4D8               	btfsc	status,2,c
  1642  007718  5C00               	subwf	btemp,w,c
  1643  00771A  E304               	bnc	l185
  1644                           ;pomiar.c: 521: {
  1645  00771C  C1B8  F000         	movff	_DtCO+2,btemp
  1646  007720  0EC9               	movlw	201
  1647  007722  D7CB               	goto	L27
  1648                           ;pomiar.c: 523: else DtCO._ad_CO=0;
  1649                           ;pomiar.c: 524: }
  1650  007724                     l185:
  1651                           ;pomiar.c: 525: else
  1652  007724  C1C5  F000         	movff	_DtCO+15,btemp
  1653  007728  6A01               	clrf	btemp+1,c
  1654  00772A  C120  FFE8         	movff	_M+32,wreg
  1655  00772E  C1B8  F002         	movff	_DtCO+2,btemp+2
  1656  007732  6A03               	clrf	btemp+3,c
  1657  007734  5E02               	subwf	btemp+2,f,c
  1658  007736  0E00               	movlw	0
  1659  007738  5A03               	subwfb	btemp+3,f,c
  1660  00773A  5003               	movf	btemp+3,w,c
  1661  00773C  0A80               	xorlw	128
  1662  00773E  6E04               	movwf	btemp+4,c
  1663  007740  5001               	movf	btemp+1,w,c
  1664  007742  0A80               	xorlw	128
  1665  007744  5C04               	subwf	btemp+4,w,c
  1666  007746  E102               	bnz	u1135
  1667  007748  5000               	movf	btemp,w,c
  1668  00774A  5C02               	subwf	btemp+2,w,c
  1669  00774C                     u1135:
  1670  00774C  E2D7               	bc	u1100
  1671  00774E                     l189:
  1672                           ;pomiar.c: 528: else DtCO._ad_CO=0;
  1673  00774E  0101               	movlb	_DtCO shr (0+8)
  1674  007750  95B6               	bcf	_DtCO& (0+255),2,b
  1675  007752                     l184:
  1676                           ;pomiar.c: 529: }
  1677  007752  C1B8  FFE8         	movff	_DtCO+2,wreg
  1678  007756  C120  F000         	movff	_M+32,btemp
  1679  00775A  6A01               	clrf	btemp+1,c
  1680  00775C  5E00               	subwf	btemp,f,c
  1681  00775E  0E00               	movlw	0
  1682  007760  5A01               	subwfb	btemp+1,f,c
  1683  007762  5001               	movf	btemp+1,w,c
  1684  007764  0A80               	xorlw	128
  1685  007766  0F80               	addlw	-128
  1686  007768  0E05               	movlw	5
  1687  00776A  B4D8               	btfsc	status,2,c
  1688  00776C  5C00               	subwf	btemp,w,c
  1689  00776E  E201 D146          	bnc	l241
  1690  007772                     L55:
  1691  007772  0101               	movlb	_DtCO shr (0+8)
  1692  007774  83B6               	bsf	_DtCO& (0+255),1,b
  1693  007776  D145               	goto	l242
  1694                           ;pomiar.c: 533: else DtCO._su_CO=0;
  1695                           ;pomiar.c: 535: if(DtCO.CO<=87) DtCO._ptwp_CO=1;
  1696                           ;pomiar.c: 536: if(DtCO.CO>87+1) DtCO._ptwp_CO=0
      +                          ;
  1697                           ;pomiar.c: 537: if(DtCO.CO<=87) DtCO._pz_CO=1;
  1698                           ;pomiar.c: 538: if(DtCO.CO>91) DtCO._pz_CO=0;
  1699                           ;pomiar.c: 539: if(DtCO.CO<=7) DtCO._cold_CO=1;
  1700                           ;pomiar.c: 540: if(DtCO.CO>7+1) DtCO._cold_CO=0;
  1701                           ;pomiar.c: 541: if(DtCO.CO>=88) DtCO._hot_CO=1;
  1702                           ;pomiar.c: 542: if(DtCO.CO<88-1) DtCO._hot_CO=0;
  1703                           ;pomiar.c: 543: break;
  1704  007778                     l201:
  1705                           ;pomiar.c: 544: }
  1706                           ;pomiar.c: 546: {
  1707  007778  EE02  F03B         	lfsr	0,_DtKNF+11
  1708  00777C  50EF               	movf	indf0,w,c
  1709                           ;pomiar.c: 548: {
  1710  00777E  C1C5  FFE8         	movff	_DtCO+15,wreg
  1711  007782  E134               	bnz	L61
  1712  007784  C120  F000         	movff	_M+32,btemp
  1713  007788  6A01               	clrf	btemp+1,c
  1714  00778A  2600               	addwf	btemp,f,c
  1715  00778C  0E00               	movlw	0
  1716  00778E  2201               	addwfc	btemp+1,f,c
  1717  007790  5001               	movf	btemp+1,w,c
  1718  007792  0A80               	xorlw	128
  1719  007794  0F80               	addlw	-128
  1720  007796  0E5B               	movlw	91
  1721  007798  B4D8               	btfsc	status,2,c
  1722  00779A  5C00               	subwf	btemp,w,c
  1723  00779C  E30F               	bnc	l203
  1724                           ;pomiar.c: 550: {
  1725  00779E  C1B8  F000         	movff	_DtCO+2,btemp
  1726  0077A2  0EAB               	movlw	171
  1727  0077A4                     L29:
  1728  0077A4  2400               	addwf	btemp,w,c
  1729  0077A6  6E02               	movwf	btemp+2,c
  1730  0077A8  6A03               	clrf	btemp+3,c
  1731  0077AA  0EFF               	movlw	255
  1732  0077AC  2203               	addwfc	btemp+3,f,c
  1733  0077AE  5003               	movf	btemp+3,w,c
  1734  0077B0  0A80               	xorlw	128
  1735  0077B2  0F80               	addlw	-128
  1736  0077B4  0E05               	movlw	5
  1737  0077B6  B4D8               	btfsc	status,2,c
  1738  0077B8                     L28:
  1739  0077B8  5C02               	subwf	btemp+2,w,c
  1740  0077BA  D014               	goto	u1265
  1741                           ;pomiar.c: 552: else DtCO._ad_CO=0;
  1742                           ;pomiar.c: 553: }
  1743  0077BC                     l203:
  1744                           ;pomiar.c: 554: else
  1745  0077BC  C1C5  F000         	movff	_DtCO+15,btemp
  1746  0077C0  6A01               	clrf	btemp+1,c
  1747  0077C2  C120  FFE8         	movff	_M+32,wreg
  1748  0077C6  C1B8  F002         	movff	_DtCO+2,btemp+2
  1749  0077CA  6A03               	clrf	btemp+3,c
  1750  0077CC  5E02               	subwf	btemp+2,f,c
  1751  0077CE  0E00               	movlw	0
  1752  0077D0  5A03               	subwfb	btemp+3,f,c
  1753  0077D2  5003               	movf	btemp+3,w,c
  1754  0077D4  0A80               	xorlw	128
  1755  0077D6  6E04               	movwf	btemp+4,c
  1756  0077D8  5001               	movf	btemp+1,w,c
  1757  0077DA  0A80               	xorlw	128
  1758  0077DC  5C04               	subwf	btemp+4,w,c
  1759  0077DE  E102               	bnz	u1265
  1760  0077E0  5000               	movf	btemp,w,c
  1761  0077E2  D7EA               	goto	L28
  1762  0077E4                     u1265:
  1763  0077E4  E329               	bnc	l214
  1764  0077E6                     u1260:
  1765  0077E6  0101               	movlb	_DtCO shr (0+8)
  1766  0077E8  85B6               	bsf	_DtCO& (0+255),2,b
  1767  0077EA  D028               	goto	l209
  1768                           ;pomiar.c: 557: else DtCO._ad_CO=0;
  1769                           ;pomiar.c: 558: }
  1770                           ;pomiar.c: 560: else
  1771  0077EC                     L61:
  1772  0077EC  C120  F000         	movff	_M+32,btemp
  1773  0077F0  6A01               	clrf	btemp+1,c
  1774  0077F2  2600               	addwf	btemp,f,c
  1775  0077F4  0E00               	movlw	0
  1776  0077F6  2201               	addwfc	btemp+1,f,c
  1777  0077F8  5001               	movf	btemp+1,w,c
  1778  0077FA  0A80               	xorlw	128
  1779  0077FC  0F80               	addlw	-128
  1780  0077FE  0E3D               	movlw	61
  1781  007800  B4D8               	btfsc	status,2,c
  1782  007802  5C00               	subwf	btemp,w,c
  1783  007804  E304               	bnc	l210
  1784                           ;pomiar.c: 563: {
  1785  007806  C1B8  F000         	movff	_DtCO+2,btemp
  1786  00780A  0EC9               	movlw	201
  1787  00780C  D7CB               	goto	L29
  1788                           ;pomiar.c: 565: else DtCO._ad_CO=0;
  1789                           ;pomiar.c: 566: }
  1790  00780E                     l210:
  1791                           ;pomiar.c: 567: else
  1792  00780E  C1C5  F000         	movff	_DtCO+15,btemp
  1793  007812  6A01               	clrf	btemp+1,c
  1794  007814  C120  FFE8         	movff	_M+32,wreg
  1795  007818  C1B8  F002         	movff	_DtCO+2,btemp+2
  1796  00781C  6A03               	clrf	btemp+3,c
  1797  00781E  5E02               	subwf	btemp+2,f,c
  1798  007820  0E00               	movlw	0
  1799  007822  5A03               	subwfb	btemp+3,f,c
  1800  007824  5003               	movf	btemp+3,w,c
  1801  007826  0A80               	xorlw	128
  1802  007828  6E04               	movwf	btemp+4,c
  1803  00782A  5001               	movf	btemp+1,w,c
  1804  00782C  0A80               	xorlw	128
  1805  00782E  5C04               	subwf	btemp+4,w,c
  1806  007830  E102               	bnz	u1295
  1807  007832  5000               	movf	btemp,w,c
  1808  007834  5C02               	subwf	btemp+2,w,c
  1809  007836                     u1295:
  1810  007836  E2D7               	bc	u1260
  1811  007838                     l214:
  1812                           ;pomiar.c: 570: else DtCO._ad_CO=0;
  1813  007838  0101               	movlb	_DtCO shr (0+8)
  1814  00783A  95B6               	bcf	_DtCO& (0+255),2,b
  1815  00783C                     l209:
  1816                           ;pomiar.c: 571: }
  1817  00783C  C1B8  FFE8         	movff	_DtCO+2,wreg
  1818  007840  C120  F000         	movff	_M+32,btemp
  1819  007844  6A01               	clrf	btemp+1,c
  1820  007846  5E00               	subwf	btemp,f,c
  1821  007848  0E00               	movlw	0
  1822  00784A  5A01               	subwfb	btemp+1,f,c
  1823  00784C  5001               	movf	btemp+1,w,c
  1824  00784E  0A80               	xorlw	128
  1825  007850  0F80               	addlw	-128
  1826  007852  0E05               	movlw	5
  1827  007854  B4D8               	btfsc	status,2,c
  1828  007856  5C00               	subwf	btemp,w,c
  1829  007858  0101               	movlb	_DtCO shr (0+8)
  1830  00785A  E302               	bnc	L62
  1831  00785C  83B6               	bsf	_DtCO& (0+255),1,b
  1832  00785E  D001               	goto	l217
  1833                           ;pomiar.c: 575: else DtCO._su_CO=0;
  1834  007860                     L62:
  1835  007860  93B6               	bcf	_DtCO& (0+255),1,b
  1836  007862                     l217:
  1837                           ;pomiar.c: 577: if(DtCO.CO<=(DtCO.F3PPCO-2)) DtC
      +                          O._ptwp_CO=1;
  1838  007862  C1B8  F000         	movff	_DtCO+2,btemp
  1839  007866  6A01               	clrf	btemp+1,c
  1840  007868  C1C6  F002         	movff	_DtCO+16,btemp+2
  1841  00786C  0EFE               	movlw	254
  1842  00786E  2402               	addwf	btemp+2,w,c
  1843  007870  6EF6               	movwf	tblptrl,c
  1844  007872  6AF7               	clrf	tblptrh,c
  1845  007874  0EFF               	movlw	255
  1846  007876  22F7               	addwfc	tblptrh,f,c
  1847  007878  50F7               	movf	tblptrh,w,c
  1848  00787A  0A80               	xorlw	128
  1849  00787C  6E02               	movwf	btemp+2,c
  1850  00787E  5001               	movf	btemp+1,w,c
  1851  007880  0A80               	xorlw	128
  1852  007882  5C02               	subwf	btemp+2,w,c
  1853  007884  E102               	bnz	u1315
  1854  007886  5000               	movf	btemp,w,c
  1855  007888  5CF6               	subwf	tblptrl,w,c
  1856  00788A                     u1315:
  1857  00788A  E302               	bnc	l218
  1858  00788C  0101               	movlb	(_DtCO+1) shr (0+8)
  1859  00788E  81B7               	bsf	(_DtCO+1)& (0+255),0,b
  1860  007890                     l218:
  1861                           ;pomiar.c: 578: if(DtCO.CO>((DtCO.F3PPCO-2)+1)) 
      +                          DtCO._ptwp_CO=0;
  1862  007890  C1B8  F000         	movff	_DtCO+2,btemp
  1863  007894  6A01               	clrf	btemp+1,c
  1864  007896  C1C6  F002         	movff	_DtCO+16,btemp+2
  1865  00789A  0EFF               	movlw	255
  1866  00789C  2402               	addwf	btemp+2,w,c
  1867  00789E  6EF6               	movwf	tblptrl,c
  1868  0078A0  6AF7               	clrf	tblptrh,c
  1869  0078A2  0EFF               	movlw	255
  1870  0078A4  22F7               	addwfc	tblptrh,f,c
  1871  0078A6  50F7               	movf	tblptrh,w,c
  1872  0078A8  0A80               	xorlw	128
  1873  0078AA  6E02               	movwf	btemp+2,c
  1874  0078AC  5001               	movf	btemp+1,w,c
  1875  0078AE  0A80               	xorlw	128
  1876  0078B0  5C02               	subwf	btemp+2,w,c
  1877  0078B2  E102               	bnz	u1325
  1878  0078B4  5000               	movf	btemp,w,c
  1879  0078B6  5CF6               	subwf	tblptrl,w,c
  1880  0078B8                     u1325:
  1881  0078B8  E202               	bc	l219
  1882  0078BA  0101               	movlb	(_DtCO+1) shr (0+8)
  1883  0078BC  91B7               	bcf	(_DtCO+1)& (0+255),0,b
  1884  0078BE                     l219:
  1885                           ;pomiar.c: 579: if(DtCO.CO<=(DtCO.F3PPCO-2)) DtC
      +                          O._pz_CO=1;
  1886  0078BE  C1B8  F000         	movff	_DtCO+2,btemp
  1887  0078C2  6A01               	clrf	btemp+1,c
  1888  0078C4  C1C6  F002         	movff	_DtCO+16,btemp+2
  1889  0078C8  0EFE               	movlw	254
  1890  0078CA  2402               	addwf	btemp+2,w,c
  1891  0078CC  6EF6               	movwf	tblptrl,c
  1892  0078CE  6AF7               	clrf	tblptrh,c
  1893  0078D0  0EFF               	movlw	255
  1894  0078D2  22F7               	addwfc	tblptrh,f,c
  1895  0078D4  50F7               	movf	tblptrh,w,c
  1896  0078D6  0A80               	xorlw	128
  1897  0078D8  6E02               	movwf	btemp+2,c
  1898  0078DA  5001               	movf	btemp+1,w,c
  1899  0078DC  0A80               	xorlw	128
  1900  0078DE  5C02               	subwf	btemp+2,w,c
  1901  0078E0  E102               	bnz	u1335
  1902  0078E2  5000               	movf	btemp,w,c
  1903  0078E4  5CF6               	subwf	tblptrl,w,c
  1904  0078E6                     u1335:
  1905  0078E6  E302               	bnc	l220
  1906  0078E8  0101               	movlb	(_DtCO+1) shr (0+8)
  1907  0078EA  83B7               	bsf	(_DtCO+1)& (0+255),1,b
  1908  0078EC                     l220:
  1909                           ;pomiar.c: 580: if(DtCO.CO>(DtCO.F3PPCO+2)) DtCO
      +                          ._pz_CO=0;
  1910  0078EC  C1B8  F000         	movff	_DtCO+2,btemp
  1911  0078F0  6A01               	clrf	btemp+1,c
  1912  0078F2  0E02               	movlw	2
  1913  0078F4  C1C6  F002         	movff	_DtCO+16,btemp+2
  1914  0078F8  6A03               	clrf	btemp+3,c
  1915  0078FA  2602               	addwf	btemp+2,f,c
  1916  0078FC  0E00               	movlw	0
  1917  0078FE  2203               	addwfc	btemp+3,f,c
  1918  007900  5003               	movf	btemp+3,w,c
  1919  007902  0A80               	xorlw	128
  1920  007904  6E04               	movwf	btemp+4,c
  1921  007906  5001               	movf	btemp+1,w,c
  1922  007908  0A80               	xorlw	128
  1923  00790A  5C04               	subwf	btemp+4,w,c
  1924  00790C  E102               	bnz	u1345
  1925  00790E  5000               	movf	btemp,w,c
  1926  007910  5C02               	subwf	btemp+2,w,c
  1927  007912                     u1345:
  1928  007912  E301 D08A          	bc	l246
  1929  007916  0101               	movlb	(_DtCO+1) shr (0+8)
  1930  007918  D087               	goto	L52
  1931                           ;pomiar.c: 582: if(DtCO.CO<=7) DtCO._cold_CO=1;
  1932                           ;pomiar.c: 583: if(DtCO.CO>7+1) DtCO._cold_CO=0;
  1933                           ;pomiar.c: 584: if(DtCO.CO>=88) DtCO._hot_CO=1;
  1934                           ;pomiar.c: 585: if(DtCO.CO<88-1) DtCO._hot_CO=0;
  1935                           ;pomiar.c: 586: break;
  1936  00791A                     l226:
  1937                           ;pomiar.c: 587: }
  1938                           ;pomiar.c: 589: {
  1939  00791A  EE02  F03B         	lfsr	0,_DtKNF+11
  1940  00791E  50EF               	movf	indf0,w,c
  1941                           ;pomiar.c: 591: {
  1942  007920  C1C5  FFE8         	movff	_DtCO+15,wreg
  1943  007924  E134               	bnz	L63
  1944  007926  C120  F000         	movff	_M+32,btemp
  1945  00792A  6A01               	clrf	btemp+1,c
  1946  00792C  2600               	addwf	btemp,f,c
  1947  00792E  0E00               	movlw	0
  1948  007930  2201               	addwfc	btemp+1,f,c
  1949  007932  5001               	movf	btemp+1,w,c
  1950  007934  0A80               	xorlw	128
  1951  007936  0F80               	addlw	-128
  1952  007938  0E5B               	movlw	91
  1953  00793A  B4D8               	btfsc	status,2,c
  1954  00793C  5C00               	subwf	btemp,w,c
  1955  00793E  E30F               	bnc	l228
  1956                           ;pomiar.c: 593: {
  1957  007940  C1B8  F000         	movff	_DtCO+2,btemp
  1958  007944  0EAB               	movlw	171
  1959  007946                     L32:
  1960  007946  2400               	addwf	btemp,w,c
  1961  007948  6E02               	movwf	btemp+2,c
  1962  00794A  6A03               	clrf	btemp+3,c
  1963  00794C  0EFF               	movlw	255
  1964  00794E  2203               	addwfc	btemp+3,f,c
  1965  007950  5003               	movf	btemp+3,w,c
  1966  007952  0A80               	xorlw	128
  1967  007954  0F80               	addlw	-128
  1968  007956  0E05               	movlw	5
  1969  007958  B4D8               	btfsc	status,2,c
  1970  00795A                     L31:
  1971  00795A  5C02               	subwf	btemp+2,w,c
  1972  00795C  D014               	goto	u1425
  1973                           ;pomiar.c: 595: else DtCO._ad_CO=0;
  1974                           ;pomiar.c: 596: }
  1975  00795E                     l228:
  1976                           ;pomiar.c: 597: else
  1977  00795E  C1C5  F000         	movff	_DtCO+15,btemp
  1978  007962  6A01               	clrf	btemp+1,c
  1979  007964  C120  FFE8         	movff	_M+32,wreg
  1980  007968  C1B8  F002         	movff	_DtCO+2,btemp+2
  1981  00796C  6A03               	clrf	btemp+3,c
  1982  00796E  5E02               	subwf	btemp+2,f,c
  1983  007970  0E00               	movlw	0
  1984  007972  5A03               	subwfb	btemp+3,f,c
  1985  007974  5003               	movf	btemp+3,w,c
  1986  007976  0A80               	xorlw	128
  1987  007978  6E04               	movwf	btemp+4,c
  1988  00797A  5001               	movf	btemp+1,w,c
  1989  00797C  0A80               	xorlw	128
  1990  00797E  5C04               	subwf	btemp+4,w,c
  1991  007980  E102               	bnz	u1425
  1992  007982  5000               	movf	btemp,w,c
  1993  007984  D7EA               	goto	L31
  1994  007986                     u1425:
  1995  007986  E329               	bnc	l239
  1996  007988                     u1420:
  1997  007988  0101               	movlb	_DtCO shr (0+8)
  1998  00798A  85B6               	bsf	_DtCO& (0+255),2,b
  1999  00798C  D028               	goto	l234
  2000                           ;pomiar.c: 600: else DtCO._ad_CO=0;
  2001                           ;pomiar.c: 601: }
  2002                           ;pomiar.c: 603: else
  2003  00798E                     L63:
  2004  00798E  C120  F000         	movff	_M+32,btemp
  2005  007992  6A01               	clrf	btemp+1,c
  2006  007994  2600               	addwf	btemp,f,c
  2007  007996  0E00               	movlw	0
  2008  007998  2201               	addwfc	btemp+1,f,c
  2009  00799A  5001               	movf	btemp+1,w,c
  2010  00799C  0A80               	xorlw	128
  2011  00799E  0F80               	addlw	-128
  2012  0079A0  0E3D               	movlw	61
  2013  0079A2  B4D8               	btfsc	status,2,c
  2014  0079A4  5C00               	subwf	btemp,w,c
  2015  0079A6  E304               	bnc	l235
  2016                           ;pomiar.c: 606: {
  2017  0079A8  C1B8  F000         	movff	_DtCO+2,btemp
  2018  0079AC  0EC9               	movlw	201
  2019  0079AE  D7CB               	goto	L32
  2020                           ;pomiar.c: 608: else DtCO._ad_CO=0;
  2021                           ;pomiar.c: 609: }
  2022  0079B0                     l235:
  2023                           ;pomiar.c: 610: else
  2024  0079B0  C1C5  F000         	movff	_DtCO+15,btemp
  2025  0079B4  6A01               	clrf	btemp+1,c
  2026  0079B6  C120  FFE8         	movff	_M+32,wreg
  2027  0079BA  C1B8  F002         	movff	_DtCO+2,btemp+2
  2028  0079BE  6A03               	clrf	btemp+3,c
  2029  0079C0  5E02               	subwf	btemp+2,f,c
  2030  0079C2  0E00               	movlw	0
  2031  0079C4  5A03               	subwfb	btemp+3,f,c
  2032  0079C6  5003               	movf	btemp+3,w,c
  2033  0079C8  0A80               	xorlw	128
  2034  0079CA  6E04               	movwf	btemp+4,c
  2035  0079CC  5001               	movf	btemp+1,w,c
  2036  0079CE  0A80               	xorlw	128
  2037  0079D0  5C04               	subwf	btemp+4,w,c
  2038  0079D2  E102               	bnz	u1455
  2039  0079D4  5000               	movf	btemp,w,c
  2040  0079D6  5C02               	subwf	btemp+2,w,c
  2041  0079D8                     u1455:
  2042  0079D8  E2D7               	bc	u1420
  2043  0079DA                     l239:
  2044                           ;pomiar.c: 613: else DtCO._ad_CO=0;
  2045  0079DA  0101               	movlb	_DtCO shr (0+8)
  2046  0079DC  95B6               	bcf	_DtCO& (0+255),2,b
  2047  0079DE                     l234:
  2048                           ;pomiar.c: 614: }
  2049  0079DE  C1B8  FFE8         	movff	_DtCO+2,wreg
  2050  0079E2  C120  F000         	movff	_M+32,btemp
  2051  0079E6  6A01               	clrf	btemp+1,c
  2052  0079E8  5E00               	subwf	btemp,f,c
  2053  0079EA  0E00               	movlw	0
  2054  0079EC  5A01               	subwfb	btemp+1,f,c
  2055  0079EE  5001               	movf	btemp+1,w,c
  2056  0079F0  0A80               	xorlw	128
  2057  0079F2  0F80               	addlw	-128
  2058  0079F4  0E05               	movlw	5
  2059  0079F6  B4D8               	btfsc	status,2,c
  2060  0079F8  5C00               	subwf	btemp,w,c
  2061  0079FA  E301 D6BA          	bc	L55
  2062  0079FE                     l241:
  2063                           ;pomiar.c: 618: else DtCO._su_CO=0;
  2064  0079FE  0101               	movlb	_DtCO shr (0+8)
  2065  007A00  93B6               	bcf	_DtCO& (0+255),1,b
  2066  007A02                     l242:
  2067                           ;pomiar.c: 620: if(DtCO.CO<=87) DtCO._ptwp_CO=1;
  2068  007A02  0E58               	movlw	88
  2069  007A04  0101               	movlb	(_DtCO+2) shr (0+8)
  2070  007A06  61B8               	cpfslt	(_DtCO+2)& (0+255),b
  2071  007A08  D001               	goto	l243
  2072  007A0A  81B7               	bsf	(_DtCO+1)& (0+255),0,b
  2073  007A0C                     l243:
  2074                           ;pomiar.c: 621: if(DtCO.CO>87+1) DtCO._ptwp_CO=0
      +                          ;
  2075  007A0C  0E58               	movlw	88
  2076  007A0E  0101               	movlb	(_DtCO+2) shr (0+8)
  2077  007A10  65B8               	cpfsgt	(_DtCO+2)& (0+255),b
  2078  007A12  D001               	goto	l244
  2079  007A14  91B7               	bcf	(_DtCO+1)& (0+255),0,b
  2080  007A16                     l244:
  2081                           ;pomiar.c: 622: if(DtCO.CO<=87) DtCO._pz_CO=1;
  2082  007A16  0E58               	movlw	88
  2083  007A18  0101               	movlb	(_DtCO+2) shr (0+8)
  2084  007A1A  61B8               	cpfslt	(_DtCO+2)& (0+255),b
  2085  007A1C  D001               	goto	l245
  2086  007A1E  83B7               	bsf	(_DtCO+1)& (0+255),1,b
  2087  007A20                     l245:
  2088                           ;pomiar.c: 623: if(DtCO.CO>91) DtCO._pz_CO=0;
  2089  007A20  0E5B               	movlw	91
  2090  007A22                     L54:
  2091  007A22  0101               	movlb	(_DtCO+2) shr (0+8)
  2092  007A24  65B8               	cpfsgt	(_DtCO+2)& (0+255),b
  2093  007A26  D001               	goto	l246
  2094  007A28                     L52:
  2095  007A28  93B7               	bcf	(_DtCO+1)& (0+255),1,b
  2096  007A2A                     l246:
  2097                           ;pomiar.c: 624: if(DtCO.CO<=7) DtCO._cold_CO=1;
  2098  007A2A  0E08               	movlw	8
  2099  007A2C  0101               	movlb	(_DtCO+2) shr (0+8)
  2100  007A2E  61B8               	cpfslt	(_DtCO+2)& (0+255),b
  2101  007A30  D001               	goto	l247
  2102  007A32  85B7               	bsf	(_DtCO+1)& (0+255),2,b
  2103  007A34                     l247:
  2104                           ;pomiar.c: 625: if(DtCO.CO>7+1) DtCO._cold_CO=0;
  2105  007A34  0E08               	movlw	8
  2106  007A36  0101               	movlb	(_DtCO+2) shr (0+8)
  2107  007A38  65B8               	cpfsgt	(_DtCO+2)& (0+255),b
  2108  007A3A  D001               	goto	l248
  2109  007A3C  95B7               	bcf	(_DtCO+1)& (0+255),2,b
  2110  007A3E                     l248:
  2111                           ;pomiar.c: 626: if(DtCO.CO>=88) DtCO._hot_CO=1;
  2112  007A3E  0E57               	movlw	87
  2113  007A40  0101               	movlb	(_DtCO+2) shr (0+8)
  2114  007A42  65B8               	cpfsgt	(_DtCO+2)& (0+255),b
  2115  007A44  D001               	goto	l249
  2116  007A46  87B7               	bsf	(_DtCO+1)& (0+255),3,b
  2117  007A48                     l249:
  2118                           ;pomiar.c: 627: if(DtCO.CO<88-1) DtCO._hot_CO=0;
  2119  007A48  0E57               	movlw	87
  2120  007A4A  0101               	movlb	(_DtCO+2) shr (0+8)
  2121  007A4C  61B8               	cpfslt	(_DtCO+2)& (0+255),b
  2122  007A4E  D011               	goto	l148
  2123  007A50  97B7               	bcf	(_DtCO+1)& (0+255),3,b
  2124                           ;pomiar.c: 628: break;
  2125  007A52  D00F               	goto	l148
  2126  007A54                     l149:
  2127  007A54  C237  FFE8         	movff	_DtKNF+7,wreg
  2128  007A58  0A00               	xorlw	0
  2129  007A5A  E101 D68D          	bz	l201
  2130  007A5E  0A01               	xorlw	1
  2131  007A60  E101 D58F          	bz	l151
  2132  007A64  0A03               	xorlw	3
  2133  007A66  E101 D58C          	bz	l151
  2134  007A6A  0A01               	xorlw	1
  2135  007A6C  E101 D60F          	bz	l176
  2136  007A70  D754               	goto	l226
  2137  007A72                     l148:
  2138                           ;pomiar.c: 632: if(DtCO.CO<=8)
  2139  007A72  0E09               	movlw	9
  2140  007A74  0101               	movlb	(_DtCO+2) shr (0+8)
  2141  007A76  61B8               	cpfslt	(_DtCO+2)& (0+255),b
  2142  007A78  D003               	goto	l251
  2143                           ;pomiar.c: 633: {
  2144  007A7A  8DB6               	bsf	_DtCO& (0+255),6,b
  2145                           ;pomiar.c: 635: DtCO._on_DZ_CO=1;
  2146  007A7C  8BB6               	bsf	_DtCO& (0+255),5,b
  2147                           ;pomiar.c: 636: }
  2148  007A7E  D002               	goto	l252
  2149  007A80                     l251:
  2150                           ;pomiar.c: 637: else DtCO._su_DZ_CO=0;
  2151  007A80  0101               	movlb	_DtCO shr (0+8)
  2152  007A82  9DB6               	bcf	_DtCO& (0+255),6,b
  2153  007A84                     l252:
  2154                           ;pomiar.c: 638: if(DtCO.CO>=20)
  2155  007A84  0E13               	movlw	19
  2156  007A86  0101               	movlb	(_DtCO+2) shr (0+8)
  2157  007A88  65B8               	cpfsgt	(_DtCO+2)& (0+255),b
  2158  007A8A  D003               	goto	l253
  2159                           ;pomiar.c: 639: {
  2160  007A8C  8FB6               	bsf	_DtCO& (0+255),7,b
  2161                           ;pomiar.c: 641: DtCO._on_DZ_CO=0;
  2162  007A8E  9BB6               	bcf	_DtCO& (0+255),5,b
  2163                           ;pomiar.c: 642: }
  2164  007A90  D002               	goto	l254
  2165  007A92                     l253:
  2166                           ;pomiar.c: 643: else DtCO._ad_DZ_CO=0;
  2167  007A92  0101               	movlb	_DtCO shr (0+8)
  2168  007A94  9FB6               	bcf	_DtCO& (0+255),7,b
  2169  007A96                     l254:
  2170                           ;pomiar.c: 645: if(!DtKNF.opdg)
  2171  007A96  EE02  F03B         	lfsr	0,_DtKNF+11
  2172  007A9A  50EF               	movf	indf0,w,c
  2173  007A9C  E111               	bnz	l255
  2174                           ;pomiar.c: 646: {
  2175  007A9E  0E4F               	movlw	79
  2176  007AA0  0101               	movlb	(_DtCO+2) shr (0+8)
  2177  007AA2  61B8               	cpfslt	(_DtCO+2)& (0+255),b
  2178  007AA4  D002               	goto	l256
  2179  007AA6  87B6               	bsf	_DtCO& (0+255),3,b
  2180  007AA8  D002               	goto	l257
  2181  007AAA                     l256:
  2182                           ;pomiar.c: 648: else DtCO._su_SRW_CO=0;
  2183  007AAA  0101               	movlb	_DtCO shr (0+8)
  2184  007AAC  97B6               	bcf	_DtCO& (0+255),3,b
  2185  007AAE                     l257:
  2186                           ;pomiar.c: 649: if(DtCO.CO>88) DtCO._ad_SRW_CO=1
      +                          ;
  2187  007AAE  0E58               	movlw	88
  2188  007AB0  0101               	movlb	(_DtCO+2) shr (0+8)
  2189  007AB2  65B8               	cpfsgt	(_DtCO+2)& (0+255),b
  2190  007AB4  D002               	goto	l258
  2191  007AB6  89B6               	bsf	_DtCO& (0+255),4,b
  2192  007AB8  0C58               	retlw	88
  2193  007ABA                     l258:
  2194                           ;pomiar.c: 650: else DtCO._ad_SRW_CO=0;
  2195  007ABA  0101               	movlb	_DtCO shr (0+8)
  2196  007ABC  99B6               	bcf	_DtCO& (0+255),4,b
  2197                           ;pomiar.c: 651: }
  2198  007ABE  0012               	return	
  2199  007AC0                     l255:
  2200                           ;pomiar.c: 652: else
  2201  007AC0  0E31               	movlw	49
  2202  007AC2  0101               	movlb	(_DtCO+2) shr (0+8)
  2203  007AC4  61B8               	cpfslt	(_DtCO+2)& (0+255),b
  2204  007AC6  D002               	goto	l261
  2205  007AC8  87B6               	bsf	_DtCO& (0+255),3,b
  2206  007ACA  D002               	goto	l262
  2207  007ACC                     l261:
  2208                           ;pomiar.c: 655: else DtCO._su_SRW_CO=0;
  2209  007ACC  0101               	movlb	_DtCO shr (0+8)
  2210  007ACE  97B6               	bcf	_DtCO& (0+255),3,b
  2211  007AD0                     l262:
  2212                           ;pomiar.c: 656: if(DtCO.CO>58) DtCO._ad_SRW_CO=1
      +                          ;
  2213  007AD0  0E3A               	movlw	58
  2214  007AD2  0101               	movlb	(_DtCO+2) shr (0+8)
  2215  007AD4  65B8               	cpfsgt	(_DtCO+2)& (0+255),b
  2216  007AD6  D002               	goto	l263
  2217  007AD8  89B6               	bsf	_DtCO& (0+255),4,b
  2218  007ADA  0C3A               	retlw	58
  2219  007ADC                     l263:
  2220                           ;pomiar.c: 657: else DtCO._ad_SRW_CO=0;
  2221  007ADC  0101               	movlb	_DtCO shr (0+8)
  2222  007ADE  99B6               	bcf	_DtCO& (0+255),4,b
  2223                           ;pomiar.c: 658: }
  2224  007AE0  0012               	return	
  2225  007AE2                     __end_of_PomiarCO:
  2226                           ;pomiar.c: 892: void PomiarIN(void)
  2227                           ;pomiar.c: 893: {
  2228  007AE2                     _PomiarIN:
  2229  000000                     
  2230                           ;pomiar.c: 894: signed char delta;
  2231  007AE2  0E04               	movlw	4
  2232  007AE4  ECEB  F074         	call	_ReadAC
  2233  007AE8  CFE8 F1C8          	movff	wreg,_DtIN+1
  2234                           ;pomiar.c: 897: DtIN.IN=ReadTabNTC(DtIN.AC_IN);
  2235  007AEC  C1C8  FFE8         	movff	_DtIN+1,wreg
  2236  007AF0  EC21  F075         	call	_ReadTabNTC
  2237  007AF4  CFE8 F1C9          	movff	wreg,_DtIN+2
  2238                           ;pomiar.c: 899: if(DtIN.AC_IN<=0X28||DtIN.AC_IN>
      +                          =0XF5)
  2239  007AF8  0E29               	movlw	41
  2240  007AFA  0101               	movlb	(_DtIN+1) shr (0+8)
  2241  007AFC  61C8               	cpfslt	(_DtIN+1)& (0+255),b
  2242  007AFE  D001               	goto	u1621
  2243  007B00  D003               	goto	u1640
  2244  007B02                     u1621:
  2245  007B02  0EF4               	movlw	-12
  2246  007B04  65C8               	cpfsgt	(_DtIN+1)& (0+255),b
  2247  007B06  D003               	goto	l266
  2248  007B08                     u1640:
  2249                           ;pomiar.c: 900: {
  2250  007B08  0101               	movlb	_DtIN shr (0+8)
  2251  007B0A  81C7               	bsf	_DtIN& (0+255),0,b
  2252                           ;pomiar.c: 902: return;
  2253  007B0C  0012               	return	
  2254  007B0E                     l266:
  2255                           ;pomiar.c: 904: else DtIN._err_IN=0;
  2256  007B0E  0101               	movlb	_DtIN shr (0+8)
  2257  007B10  91C7               	bcf	_DtIN& (0+255),0,b
  2258                           ;pomiar.c: 905: RSDT1.outIN=DtIN.IN;
  2259  007B12  C1C9  F13C         	movff	_DtIN+2,_RSDT1+24
  2260                           ;pomiar.c: 906: }
  2261  007B16  0012               	return	
  2262  007B18                     __end_of_PomiarIN:
  2263                           ;pomiar.c: 909: void PomiarCW(void)
  2264                           ;pomiar.c: 910: {
  2265  007B18                     _PomiarCW:
  2266  000000                     
  2267                           ;	_tmz assigned to ?a_PomiarCW+0
  2268  000000                     _PomiarCW$tmz	set	?a_PomiarCW
  2269                           ;pomiar.c: 911: volatile unsigned char tmz;
  2270  007B18  0E01               	movlw	1
  2271  007B1A  ECEB  F074         	call	_ReadAC
  2272  007B1E  CFE8 F1B3          	movff	wreg,_DtCW+12
  2273                           ;pomiar.c: 914: DtCW.CW=ReadTabNTC(DtCW.AC_CW);
  2274  007B22  C1B3  FFE8         	movff	_DtCW+12,wreg
  2275  007B26  EC21  F075         	call	_ReadTabNTC
  2276  007B2A  CFE8 F1A9          	movff	wreg,_DtCW+2
  2277                           ;pomiar.c: 916: if(DtCW.AC_CW<=0X28||DtCW.AC_CW>
      +                          =0XF5)
  2278  007B2E  0E29               	movlw	41
  2279  007B30  0101               	movlb	(_DtCW+12) shr (0+8)
  2280  007B32  61B3               	cpfslt	(_DtCW+12)& (0+255),b
  2281  007B34  D001               	goto	u1651
  2282  007B36  D003               	goto	u1670
  2283  007B38                     u1651:
  2284  007B38  0EF4               	movlw	-12
  2285  007B3A  65B3               	cpfsgt	(_DtCW+12)& (0+255),b
  2286  007B3C  D00C               	goto	l269
  2287  007B3E                     u1670:
  2288                           ;pomiar.c: 917: {
  2289  007B3E  0101               	movlb	_DtCW shr (0+8)
  2290  007B40  81A7               	bsf	_DtCW& (0+255),0,b
  2291                           ;pomiar.c: 919: DtCW._su_CW=0;
  2292  007B42  93A7               	bcf	_DtCW& (0+255),1,b
  2293                           ;pomiar.c: 920: DtCW._ad_CW=0;
  2294  007B44  95A7               	bcf	_DtCW& (0+255),2,b
  2295                           ;pomiar.c: 921: DtCW._cold_CW=0;
  2296  007B46  9FA7               	bcf	_DtCW& (0+255),7,b
  2297                           ;pomiar.c: 922: DtCW._on_DZ_CW=0;
  2298  007B48  99A7               	bcf	_DtCW& (0+255),4,b
  2299                           ;pomiar.c: 923: DtCW._su_DZ_CW=0;
  2300  007B4A  9BA7               	bcf	_DtCW& (0+255),5,b
  2301                           ;pomiar.c: 924: DtCW._ad_DZ_CW=0;
  2302  007B4C  9DA7               	bcf	_DtCW& (0+255),6,b
  2303                           ;pomiar.c: 925: DtCW._wpz_CW=0;
  2304  007B4E  97A7               	bcf	_DtCW& (0+255),3,b
  2305                           ;pomiar.c: 926: RSDT1.outrCW=DtCW.CW;
  2306  007B50  C1A9  F140         	movff	_DtCW+2,_RSDT1+28
  2307                           ;pomiar.c: 927: return;
  2308  007B54  0012               	return	
  2309  007B56                     l269:
  2310                           ;pomiar.c: 929: else DtCW._err_CW=0;
  2311  007B56  0101               	movlb	_DtCW shr (0+8)
  2312  007B58  91A7               	bcf	_DtCW& (0+255),0,b
  2313                           ;pomiar.c: 930: RSDT1.outrCW=DtCW.CW;
  2314  007B5A  C1A9  F140         	movff	_DtCW+2,_RSDT1+28
  2315                           ;pomiar.c: 931: switch(DtKNF.tpkt)
  2316  007B5E  D0AB               	goto	l272
  2317  007B60                     l274:
  2318                           ;pomiar.c: 934: case 2:
  2319  007B60  0E37               	movlw	55
  2320  007B62  0101               	movlb	(_DtCW+3) shr (0+8)
  2321  007B64  61AA               	cpfslt	(_DtCW+3)& (0+255),b
  2322  007B66  D00A               	goto	l275
  2323                           ;pomiar.c: 937: {
  2324  007B68  0E41               	movlw	65
  2325  007B6A                     L51:
  2326  007B6A  65A9               	cpfsgt	(_DtCW+2)& (0+255),b
  2327  007B6C  D07C               	goto	l311
  2328  007B6E  85A7               	bsf	_DtCW& (0+255),2,b
  2329  007B70                     L49:
  2330                           ;pomiar.c: 939: else DtCW._ad_CW=0;
  2331                           ;pomiar.c: 940: if(DtCW.CW<=65-2) DtCW._su_CW=1;
  2332  007B70  0E40               	movlw	64
  2333  007B72                     L33:
  2334  007B72  0101               	movlb	(_DtCW+2) shr (0+8)
  2335  007B74  61A9               	cpfslt	(_DtCW+2)& (0+255),b
  2336  007B76  D07A               	goto	l313
  2337  007B78                     L34:
  2338  007B78  83A7               	bsf	_DtCW& (0+255),1,b
  2339  007B7A  D0AC               	goto	l271
  2340                           ;pomiar.c: 941: else DtCW._su_CW=0;
  2341                           ;pomiar.c: 942: }
  2342  007B7C                     l275:
  2343                           ;pomiar.c: 943: else
  2344  007B7C  0E46               	movlw	70
  2345  007B7E  0101               	movlb	(_DtCW+2) shr (0+8)
  2346  007B80  65A9               	cpfsgt	(_DtCW+2)& (0+255),b
  2347  007B82  D002               	goto	l281
  2348  007B84  85A7               	bsf	_DtCW& (0+255),2,b
  2349  007B86  D002               	goto	l282
  2350  007B88                     l281:
  2351                           ;pomiar.c: 946: else DtCW._ad_CW=0;
  2352  007B88  0101               	movlb	_DtCW shr (0+8)
  2353  007B8A  95A7               	bcf	_DtCW& (0+255),2,b
  2354  007B8C                     l282:
  2355                           ;pomiar.c: 947: if(DtCW.CW<=70-2) DtCW._su_CW=1;
  2356  007B8C  0E45               	movlw	69
  2357  007B8E  D7F1               	goto	L33
  2358                           ;pomiar.c: 948: else DtCW._su_CW=0;
  2359                           ;pomiar.c: 949: }
  2360  007B90                     l285:
  2361                           ;pomiar.c: 951: }
  2362                           ;pomiar.c: 953: {
  2363  007B90  EE02  F048         	lfsr	0,_DtKNF+24
  2364  007B94  50EF               	movf	indf0,w,c
  2365  007B96  E064               	bz	L53
  2366                           ;pomiar.c: 955: {
  2367                           ;pomiar.c: 957: else DtCW._ad_CW=0;
  2368                           ;pomiar.c: 958: if(DtCW.CW<=65-2) DtCW._su_CW=1;
  2369                           ;pomiar.c: 959: else DtCW._su_CW=0;
  2370                           ;pomiar.c: 960: }
  2371                           ;pomiar.c: 961: else
  2372  007B98  C1AB  FFE8         	movff	_DtCW+4,wreg
  2373  007B9C  C1A9  F000         	movff	_DtCW+2,btemp
  2374  007BA0  6A01               	clrf	btemp+1,c
  2375  007BA2  5E00               	subwf	btemp,f,c
  2376  007BA4  0E00               	movlw	0
  2377  007BA6  5A01               	subwfb	btemp+1,f,c
  2378  007BA8  5001               	movf	btemp+1,w,c
  2379  007BAA  0A80               	xorlw	128
  2380  007BAC  0F80               	addlw	-128
  2381  007BAE  0E05               	movlw	5
  2382  007BB0  B4D8               	btfsc	status,2,c
  2383  007BB2  5C00               	subwf	btemp,w,c
  2384  007BB4  E36D               	bnc	l316
  2385  007BB6                     L50:
  2386  007BB6  0101               	movlb	_DtCW shr (0+8)
  2387  007BB8  85A7               	bsf	_DtCW& (0+255),2,b
  2388  007BBA  D06C               	goto	l317
  2389                           ;pomiar.c: 964: else DtCW._ad_CW=0;
  2390                           ;pomiar.c: 965: if((DtCW.PPCW-DtCW.CW)>=1) DtCW.
      +                          _su_CW=1;
  2391                           ;pomiar.c: 966: else DtCW._su_CW=0;
  2392                           ;pomiar.c: 967: }
  2393  007BBC                     l296:
  2394                           ;pomiar.c: 969: }
  2395                           ;pomiar.c: 971: {
  2396  007BBC  C1AB  FFE8         	movff	_DtCW+4,wreg
  2397  007BC0  C1A9  F000         	movff	_DtCW+2,btemp
  2398  007BC4  6A01               	clrf	btemp+1,c
  2399  007BC6  5E00               	subwf	btemp,f,c
  2400  007BC8  0E00               	movlw	0
  2401  007BCA  5A01               	subwfb	btemp+1,f,c
  2402  007BCC  5001               	movf	btemp+1,w,c
  2403  007BCE  0A80               	xorlw	128
  2404  007BD0  0F80               	addlw	-128
  2405  007BD2  0E01               	movlw	1
  2406  007BD4  B4D8               	btfsc	status,2,c
  2407  007BD6  5C00               	subwf	btemp,w,c
  2408  007BD8  0101               	movlb	_DtCW shr (0+8)
  2409  007BDA  E302               	bnc	L64
  2410  007BDC  85A7               	bsf	_DtCW& (0+255),2,b
  2411  007BDE  D001               	goto	l298
  2412                           ;pomiar.c: 973: else DtCW._ad_CW=0;
  2413  007BE0                     L64:
  2414  007BE0  95A7               	bcf	_DtCW& (0+255),2,b
  2415  007BE2                     l298:
  2416                           ;pomiar.c: 974: if((DtCW.PPCW-DtCW.CW)>=5) DtCW.
      +                          _su_CW=1;
  2417  007BE2  C1A9  FFE8         	movff	_DtCW+2,wreg
  2418  007BE6  C1AB  F000         	movff	_DtCW+4,btemp
  2419  007BEA  6A01               	clrf	btemp+1,c
  2420  007BEC  5E00               	subwf	btemp,f,c
  2421  007BEE  0E00               	movlw	0
  2422  007BF0  5A01               	subwfb	btemp+1,f,c
  2423  007BF2  5001               	movf	btemp+1,w,c
  2424  007BF4  0A80               	xorlw	128
  2425  007BF6  0F80               	addlw	-128
  2426  007BF8  0E05               	movlw	5
  2427  007BFA  B4D8               	btfsc	status,2,c
  2428  007BFC  5C00               	subwf	btemp,w,c
  2429  007BFE  0101               	movlb	_DtCW shr (0+8)
  2430  007C00  E302               	bnc	L65
  2431  007C02  83A7               	bsf	_DtCW& (0+255),1,b
  2432  007C04  D001               	goto	l300
  2433                           ;pomiar.c: 975: else DtCW._su_CW=0;
  2434  007C06                     L65:
  2435  007C06  93A7               	bcf	_DtCW& (0+255),1,b
  2436  007C08                     l300:
  2437                           ;pomiar.c: 976: if(!DtKNF.cwtm)
  2438  007C08  EE02  F049         	lfsr	0,_DtKNF+25
  2439  007C0C  50EF               	movf	indf0,w,c
  2440  007C0E  E104               	bnz	l301
  2441                           ;pomiar.c: 977: {
  2442  007C10  0E0B               	movlw	11
  2443  007C12  EC4C  F06F         	call	_RdPrt
  2444  007C16  D003               	goto	L9
  2445                           ;pomiar.c: 979: }
  2446  007C18                     l301:
  2447                           ;pomiar.c: 980: else
  2448  007C18  0E06               	movlw	6
  2449  007C1A  EC4C  F06F         	call	_RdPrt
  2450  007C1E                     L9:
  2451  007C1E  0E00               	movlw	0
  2452  007C20  B0D8               	btfsc	status,0,c
  2453  007C22  0E01               	movlw	1
  2454  007C24  0100               	movlb	__Lparam shr (0+8)
  2455  007C26  6FEB               	movwf	?a_PomiarCW^(__Lparam& (0+65280)),b	;vola
      +                          tile
  2456                           ;pomiar.c: 983: }
  2457  007C28  51EB               	movf	?a_PomiarCW^(__Lparam& (0+65280)),w	;volat
      +                          ile
  2458  007C2A  E014               	bz	l303
  2459  007C2C  C1AC  FFE8         	movff	_DtCW+5,wreg
  2460  007C30  0101               	movlb	(_DtCW+3) shr (0+8)
  2461  007C32  5DAA               	subwf	(_DtCW+3)& (0+255),w,b
  2462  007C34  E30F               	bnc	l303
  2463                           ;pomiar.c: 985: {
  2464  007C36  0101               	movlb	_DtCW shr (0+8)
  2465  007C38  A3A7               	btfss	_DtCW& (0+255),1,b
  2466  007C3A  D002               	goto	l304
  2467  007C3C  87A7               	bsf	_DtCW& (0+255),3,b
  2468  007C3E  D005               	goto	l305
  2469  007C40                     l304:
  2470                           ;pomiar.c: 987: else if(!M._PRACA) DtCW._wpz_CW=
      +                          0;
  2471  007C40  0101               	movlb	(_M+4) shr (0+8)
  2472  007C42  BD04               	btfsc	(_M+4)& (0+255),6,b
  2473  007C44  D002               	goto	l305
  2474  007C46  0101               	movlb	_DtCW shr (0+8)
  2475  007C48  97A7               	bcf	_DtCW& (0+255),3,b
  2476  007C4A                     l305:
  2477                           ;pomiar.c: 988: if (DtCW._ad_CW) DtCW._wpz_CW=0;
  2478  007C4A  0101               	movlb	_DtCW shr (0+8)
  2479  007C4C  A5A7               	btfss	_DtCW& (0+255),2,b
  2480  007C4E  D042               	goto	l271
  2481  007C50                     u1860:
  2482  007C50  97A7               	bcf	_DtCW& (0+255),3,b
  2483                           ;pomiar.c: 989: }
  2484  007C52  D040               	goto	l271
  2485  007C54                     l303:
  2486                           ;pomiar.c: 990: else DtCW._wpz_CW=0;
  2487  007C54  0101               	movlb	_DtCW shr (0+8)
  2488  007C56  D7FC               	goto	u1860
  2489                           ;pomiar.c: 991: break;
  2490  007C58                     l309:
  2491                           ;pomiar.c: 992: }
  2492                           ;pomiar.c: 994: {
  2493  007C58  EE02  F048         	lfsr	0,_DtKNF+24
  2494  007C5C  50EF               	movf	indf0,w,c
  2495  007C5E  E109               	bnz	l310
  2496  007C60                     L53:
  2497                           ;pomiar.c: 996: {
  2498  007C60  0E41               	movlw	65
  2499  007C62  0101               	movlb	(_DtCW+2) shr (0+8)
  2500  007C64  D782               	goto	L51
  2501  007C66                     l311:
  2502                           ;pomiar.c: 998: else DtCW._ad_CW=0;
  2503  007C66  0101               	movlb	_DtCW shr (0+8)
  2504  007C68  95A7               	bcf	_DtCW& (0+255),2,b
  2505  007C6A  D782               	goto	L49
  2506                           ;pomiar.c: 999: if(DtCW.CW<=65-2) DtCW._su_CW=1;
  2507  007C6C                     l313:
  2508                           ;pomiar.c: 1000: else DtCW._su_CW=0;
  2509  007C6C  0101               	movlb	_DtCW shr (0+8)
  2510  007C6E                     L66:
  2511  007C6E  93A7               	bcf	_DtCW& (0+255),1,b
  2512                           ;pomiar.c: 1001: }
  2513  007C70  D031               	goto	l271
  2514  007C72                     l310:
  2515                           ;pomiar.c: 1002: else
  2516  007C72  C1AB  FFE8         	movff	_DtCW+4,wreg
  2517  007C76  C1A9  F000         	movff	_DtCW+2,btemp
  2518  007C7A  6A01               	clrf	btemp+1,c
  2519  007C7C  5E00               	subwf	btemp,f,c
  2520  007C7E  0E00               	movlw	0
  2521  007C80  5A01               	subwfb	btemp+1,f,c
  2522  007C82  5001               	movf	btemp+1,w,c
  2523  007C84  0A80               	xorlw	128
  2524  007C86  0F80               	addlw	-128
  2525  007C88  0E05               	movlw	5
  2526  007C8A  B4D8               	btfsc	status,2,c
  2527  007C8C  5C00               	subwf	btemp,w,c
  2528  007C8E  E293               	bc	L50
  2529  007C90                     l316:
  2530                           ;pomiar.c: 1005: else DtCW._ad_CW=0;
  2531  007C90  0101               	movlb	_DtCW shr (0+8)
  2532  007C92  95A7               	bcf	_DtCW& (0+255),2,b
  2533  007C94                     l317:
  2534                           ;pomiar.c: 1006: if((DtCW.PPCW-DtCW.CW)>=1) DtCW
      +                          ._su_CW=1;
  2535  007C94  C1A9  FFE8         	movff	_DtCW+2,wreg
  2536  007C98  C1AB  F000         	movff	_DtCW+4,btemp
  2537  007C9C  6A01               	clrf	btemp+1,c
  2538  007C9E  5E00               	subwf	btemp,f,c
  2539  007CA0  0E00               	movlw	0
  2540  007CA2  5A01               	subwfb	btemp+1,f,c
  2541  007CA4  5001               	movf	btemp+1,w,c
  2542  007CA6  0A80               	xorlw	128
  2543  007CA8  0F80               	addlw	-128
  2544  007CAA  0E01               	movlw	1
  2545  007CAC  B4D8               	btfsc	status,2,c
  2546  007CAE  5C00               	subwf	btemp,w,c
  2547  007CB0  0101               	movlb	_DtCW shr (0+8)
  2548  007CB2  E3DD               	bnc	L66
  2549  007CB4  D761               	goto	L34
  2550                           ;pomiar.c: 1007: else DtCW._su_CW=0;
  2551                           ;pomiar.c: 1008: }
  2552  007CB6                     l272:
  2553  007CB6  C237  FFE8         	movff	_DtKNF+7,wreg
  2554  007CBA  0A00               	xorlw	0
  2555  007CBC  E101 D77E          	bz	l296
  2556  007CC0  0A01               	xorlw	1
  2557  007CC2  E101 D74D          	bz	l274
  2558  007CC6  0A03               	xorlw	3
  2559  007CC8  E101 D74A          	bz	l274
  2560  007CCC  0A01               	xorlw	1
  2561  007CCE  E101 D75F          	bz	l285
  2562  007CD2  D7C2               	goto	l309
  2563  007CD4                     l271:
  2564                           ;pomiar.c: 1013: if(DtKNF.tpkt==0)
  2565  007CD4  EE02  F037         	lfsr	0,_DtKNF+7
  2566  007CD8  50EF               	movf	indf0,w,c
  2567  007CDA  E10A               	bnz	l320
  2568                           ;pomiar.c: 1014: {
  2569  007CDC  0E55               	movlw	85
  2570  007CDE  0101               	movlb	(_DtCW+2) shr (0+8)
  2571  007CE0  65A9               	cpfsgt	(_DtCW+2)& (0+255),b
  2572  007CE2  D001               	goto	l321
  2573  007CE4  87A8               	bsf	(_DtCW+1)& (0+255),3,b
  2574  007CE6                     l321:
  2575                           ;pomiar.c: 1016: if(DtCW.CW<85) DtCW._offKCW=0;
  2576  007CE6  0E55               	movlw	85
  2577  007CE8  0101               	movlb	(_DtCW+2) shr (0+8)
  2578  007CEA  61A9               	cpfslt	(_DtCW+2)& (0+255),b
  2579  007CEC  D003               	goto	l323
  2580  007CEE  D001               	goto	L35
  2581                           ;pomiar.c: 1017: }
  2582  007CF0                     l320:
  2583                           ;pomiar.c: 1018: else
  2584  007CF0  0101               	movlb	(_DtCW+1) shr (0+8)
  2585  007CF2                     L35:
  2586  007CF2  97A8               	bcf	(_DtCW+1)& (0+255),3,b
  2587  007CF4                     l323:
  2588                           ;pomiar.c: 1021: }
  2589  007CF4  0E06               	movlw	6
  2590  007CF6  0101               	movlb	(_DtCW+2) shr (0+8)
  2591  007CF8  61A9               	cpfslt	(_DtCW+2)& (0+255),b
  2592  007CFA  D003               	goto	l324
  2593                           ;pomiar.c: 1023: {
  2594  007CFC  8BA7               	bsf	_DtCW& (0+255),5,b
  2595                           ;pomiar.c: 1025: DtCW._on_DZ_CW=1;
  2596  007CFE  89A7               	bsf	_DtCW& (0+255),4,b
  2597                           ;pomiar.c: 1026: }
  2598  007D00  D002               	goto	l325
  2599  007D02                     l324:
  2600                           ;pomiar.c: 1027: else DtCW._su_DZ_CW=0;
  2601  007D02  0101               	movlb	_DtCW shr (0+8)
  2602  007D04  9BA7               	bcf	_DtCW& (0+255),5,b
  2603  007D06                     l325:
  2604                           ;pomiar.c: 1028: if(DtCW.CW>=10)
  2605  007D06  0E09               	movlw	9
  2606  007D08  0101               	movlb	(_DtCW+2) shr (0+8)
  2607  007D0A  65A9               	cpfsgt	(_DtCW+2)& (0+255),b
  2608  007D0C  D003               	goto	l326
  2609                           ;pomiar.c: 1029: {
  2610  007D0E  8DA7               	bsf	_DtCW& (0+255),6,b
  2611                           ;pomiar.c: 1031: DtCW._on_DZ_CW=0;
  2612  007D10  99A7               	bcf	_DtCW& (0+255),4,b
  2613                           ;pomiar.c: 1032: }
  2614  007D12  D002               	goto	l327
  2615  007D14                     l326:
  2616                           ;pomiar.c: 1033: else DtCW._ad_DZ_CW=0;
  2617  007D14  0101               	movlb	_DtCW shr (0+8)
  2618  007D16  9DA7               	bcf	_DtCW& (0+255),6,b
  2619  007D18                     l327:
  2620                           ;pomiar.c: 1034: if(DtCW.CW<=5) DtCW._cold_CW=1;
  2621  007D18  0E06               	movlw	6
  2622  007D1A  0101               	movlb	(_DtCW+2) shr (0+8)
  2623  007D1C  61A9               	cpfslt	(_DtCW+2)& (0+255),b
  2624  007D1E  D001               	goto	l328
  2625  007D20  8FA7               	bsf	_DtCW& (0+255),7,b
  2626  007D22                     l328:
  2627                           ;pomiar.c: 1035: if(DtCW.CW>5+1) DtCW._cold_CW=0
      +                          ;
  2628  007D22  0E06               	movlw	6
  2629  007D24  0101               	movlb	(_DtCW+2) shr (0+8)
  2630  007D26  65A9               	cpfsgt	(_DtCW+2)& (0+255),b
  2631  007D28  0C06               	retlw	6
  2632  007D2A  9FA7               	bcf	_DtCW& (0+255),7,b
  2633                           ;pomiar.c: 1036: }
  2634  007D2C  0C06               	retlw	6
  2635  007D2E                     __end_of_PomiarCW:
  2636                           ;pomiar.c: 1039: void PomiarZW(void)
  2637                           ;pomiar.c: 1040: {
  2638  007D2E                     _PomiarZW:
  2639  000000                     
  2640                           ;pomiar.c: 1041: DtZW.AC_ZW=ReadAC(2);
  2641  007D2E  0E02               	movlw	2
  2642  007D30  ECEB  F074         	call	_ReadAC
  2643  007D34  CFE8 F19D          	movff	wreg,_DtZW+1
  2644                           ;pomiar.c: 1042: DtZW.ZW=ReadTabZNTC(DtZW.AC_ZW)
      +                          ;
  2645  007D38  C19D  FFE8         	movff	_DtZW+1,wreg
  2646  007D3C  EC72  F075         	call	_ReadTabZNTC
  2647  007D40  CFE8 F19E          	movff	wreg,_DtZW+2
  2648                           ;pomiar.c: 1043: if(DtZW.AC_ZW<=0x0F||DtZW.AC_ZW
      +                          >=0xF0)
  2649  007D44  0E10               	movlw	16
  2650  007D46  0101               	movlb	(_DtZW+1) shr (0+8)
  2651  007D48  619D               	cpfslt	(_DtZW+1)& (0+255),b
  2652  007D4A  D001               	goto	u1991
  2653  007D4C  D003               	goto	u2010
  2654  007D4E                     u1991:
  2655  007D4E  0EEF               	movlw	-17
  2656  007D50  659D               	cpfsgt	(_DtZW+1)& (0+255),b
  2657  007D52  D006               	goto	l331
  2658  007D54                     u2010:
  2659                           ;pomiar.c: 1044: {
  2660  007D54  0101               	movlb	_DtZW shr (0+8)
  2661  007D56  919C               	bcf	_DtZW& (0+255),0,b
  2662                           ;pomiar.c: 1046: DtZW._en_ZW=0;
  2663  007D58  939C               	bcf	_DtZW& (0+255),1,b
  2664                           ;pomiar.c: 1047: RSDT1.outZW=0;
  2665  007D5A  0101               	movlb	(_RSDT1+29) shr (0+8)
  2666  007D5C  6B41               	clrf	(_RSDT1+29)& (0+255),b
  2667                           ;pomiar.c: 1048: }
  2668  007D5E  D01C               	goto	l332
  2669  007D60                     l331:
  2670                           ;pomiar.c: 1049: else
  2671  007D60  C19E  F141         	movff	_DtZW+2,_RSDT1+29
  2672                           ;pomiar.c: 1052: DtZW._en_ZW=1;
  2673  007D64  0101               	movlb	_DtZW shr (0+8)
  2674  007D66  839C               	bsf	_DtZW& (0+255),1,b
  2675                           ;pomiar.c: 1053: if(DtKNF.pgdr)
  2676  007D68  EE02  F046         	lfsr	0,_DtKNF+22
  2677  007D6C  50EF               	movf	indf0,w,c
  2678  007D6E  E012               	bz	l333
  2679                           ;pomiar.c: 1054: {
  2680  007D70  0101               	movlb	(_M+6) shr (0+8)
  2681  007D72  BB06               	btfsc	(_M+6)& (0+255),5,b
  2682  007D74  D003               	goto	u2050
  2683  007D76  0101               	movlb	(_M+7) shr (0+8)
  2684  007D78  AB07               	btfss	(_M+7)& (0+255),5,b
  2685  007D7A  D003               	goto	l334
  2686  007D7C                     u2050:
  2687  007D7C  0101               	movlb	_DtZW shr (0+8)
  2688  007D7E  919C               	bcf	_DtZW& (0+255),0,b
  2689  007D80  D002               	goto	l335
  2690  007D82                     l334:
  2691                           ;pomiar.c: 1064: else DtZW._on_ZW=1;
  2692  007D82  0101               	movlb	_DtZW shr (0+8)
  2693  007D84  819C               	bsf	_DtZW& (0+255),0,b
  2694  007D86                     l335:
  2695                           ;pomiar.c: 1065: if(DtKNF.pgdr==2)
  2696  007D86  C246  FFE8         	movff	_DtKNF+22,wreg
  2697  007D8A  0A02               	xorlw	2
  2698  007D8C  E105               	bnz	l332
  2699                           ;pomiar.c: 1066: {
  2700  007D8E  0101               	movlb	_DtZW shr (0+8)
  2701  007D90  819C               	bsf	_DtZW& (0+255),0,b
  2702                           ;pomiar.c: 1068: }
  2703  007D92  D002               	goto	l332
  2704  007D94                     l333:
  2705                           ;pomiar.c: 1071: else
  2706  007D94  0101               	movlb	_DtZW shr (0+8)
  2707  007D96  919C               	bcf	_DtZW& (0+255),0,b
  2708  007D98                     l332:
  2709                           ;pomiar.c: 1074: }
  2710  007D98  0101               	movlb	(_M+3) shr (0+8)
  2711  007D9A  9703               	bcf	(_M+3)& (0+255),3,b
  2712                           ;pomiar.c: 1077: M._pob_PGDRT=0;
  2713  007D9C  0101               	movlb	(_M+1) shr (0+8)
  2714  007D9E  9101               	bcf	(_M+1)& (0+255),0,b
  2715                           ;pomiar.c: 1078: }
  2716  007DA0  0012               	return	
  2717  007DA2                     __end_of_PomiarZW:
  2718                           ;pomiar.c: 1081: void SetTrbPGD(void)
  2719                           ;pomiar.c: 1082: {
  2720  007DA2                     _SetTrbPGD:
  2721  000000                     
  2722                           ;	_dt assigned to ?a_SetTrbPGD+0
  2723  000000                     _SetTrbPGD$dt	set	?a_SetTrbPGD
  2724                           ;pomiar.c: 1083: volatile unsigned char dt;
  2725  007DA2  0E14               	movlw	20
  2726  007DA4  EC4C  F06F         	call	_RdPrt
  2727  007DA8  0E00               	movlw	0
  2728  007DAA  B0D8               	btfsc	status,0,c
  2729  007DAC  0E01               	movlw	1
  2730  007DAE  0100               	movlb	__Lparam shr (0+8)
  2731  007DB0  6FEB               	movwf	?a_SetTrbPGD^(__Lparam& (0+65280)),b	;vol
      +                          atile
  2732                           ;pomiar.c: 1087: if(!M._SYNCH_PGD)
  2733  007DB2  0101               	movlb	(_M+8) shr (0+8)
  2734  007DB4  B108               	btfsc	(_M+8)& (0+255),0,b
  2735  007DB6  D03C               	goto	l339
  2736                           ;pomiar.c: 1088: {
  2737  007DB8  EE01  F003         	lfsr	0,_M+3
  2738  007DBC  30EF               	rrcf	indf0,w,c
  2739  007DBE  0B01               	andlw	1
  2740  007DC0  0100               	movlb	__Lparam shr (0+8)
  2741  007DC2  19EB               	xorwf	?a_SetTrbPGD^(__Lparam& (0+65280)),w	;vol
      +                          atile
  2742  007DC4  E035               	bz	l339
  2743                           ;pomiar.c: 1090: {
  2744  007DC6  0101               	movlb	(_M+3) shr (0+8)
  2745  007DC8  B303               	btfsc	(_M+3)& (0+255),1,b
  2746  007DCA  D01C               	goto	l341
  2747                           ;pomiar.c: 1092: {
  2748  007DCC  0101               	movlb	_DtZW shr (0+8)
  2749  007DCE  A39C               	btfss	_DtZW& (0+255),1,b
  2750  007DD0  D02F               	goto	l339
  2751                           ;pomiar.c: 1094: {
  2752  007DD2  0101               	movlb	(_M+3) shr (0+8)
  2753  007DD4  8303               	bsf	(_M+3)& (0+255),1,b
  2754                           ;pomiar.c: 1096: M._AKTYWNE_PGD2=0;
  2755  007DD6  9703               	bcf	(_M+3)& (0+255),3,b
  2756                           ;pomiar.c: 1097: DtCO.PCO=ReadEEPPGD();
  2757  007DD8  EC7B  F04F         	call	_ReadEEPPGD	;wreg free
  2758  007DDC  CFE8 F1B9          	movff	wreg,_DtCO+3
  2759                           ;pomiar.c: 1098: RSDT1.outPCO=DtCO.PCO;
  2760  007DE0  C1B9  F12C         	movff	_DtCO+3,_RSDT1+8
  2761                           ;pomiar.c: 1099: SetMinMaxPGD();
  2762  007DE4  ECC9  F04C         	call	_SetMinMaxPGD	;wreg free
  2763                           ;pomiar.c: 1100: ChkPGD();
  2764  007DE8  ECFC  F04C         	call	_ChkPGD	;wreg free
  2765                           ;pomiar.c: 1101: DtCO.PGDPCO=GetPGD_PCO();
  2766  007DEC  D8D3               	call	_GetPGD_PCO	;wreg free
  2767  007DEE  CFE8 F1BD          	movff	wreg,_DtCO+7
  2768                           ;pomiar.c: 1103: SetModPCO();
  2769  007DF2  D82B               	call	_SetModPCO	;wreg free
  2770                           ;pomiar.c: 1104: RSDT1.outSETPmax=M.SETPmax;
  2771  007DF4  C122  F143         	movff	_M+34,_RSDT1+31
  2772                           ;pomiar.c: 1105: StartRTS(18);
  2773  007DF8  0E12               	movlw	18
  2774  007DFA  EC6F  F073         	call	_StartRTS
  2775                           ;pomiar.c: 1106: M._SYNCH_PGD=1;
  2776  007DFE  0101               	movlb	(_M+8) shr (0+8)
  2777  007E00  8108               	bsf	(_M+8)& (0+255),0,b
  2778                           ;pomiar.c: 1107: return;
  2779  007E02  0012               	return	
  2780                           ;pomiar.c: 1108: }
  2781  007E04                     l341:
  2782                           ;pomiar.c: 1110: else
  2783  007E04  0101               	movlb	(_M+3) shr (0+8)
  2784  007E06  9303               	bcf	(_M+3)& (0+255),1,b
  2785                           ;pomiar.c: 1113: M._AKTYWNE_PGD2=0;
  2786  007E08  9703               	bcf	(_M+3)& (0+255),3,b
  2787                           ;pomiar.c: 1114: DtCO.PCO=ReadEEPCO();
  2788  007E0A  EC79  F04F         	call	_ReadEEPCO	;wreg free
  2789  007E0E  CFE8 F1B9          	movff	wreg,_DtCO+3
  2790                           ;pomiar.c: 1115: RSDT1.outPCO=DtCO.PCO;
  2791  007E12  C1B9  F12C         	movff	_DtCO+3,_RSDT1+8
  2792                           ;pomiar.c: 1116: SetMinMaxPCO();
  2793  007E16  EC8B  F04C         	call	_SetMinMaxPCO	;wreg free
  2794                           ;pomiar.c: 1117: ChkPCO();
  2795  007E1A  ECDE  F04C         	call	_ChkPCO	;wreg free
  2796                           ;pomiar.c: 1119: SetModPCO();
  2797  007E1E  D815               	call	_SetModPCO	;wreg free
  2798                           ;pomiar.c: 1120: RSDT1.outSETPmax=M.SETPmax;
  2799  007E20  C122  F143         	movff	_M+34,_RSDT1+31
  2800                           ;pomiar.c: 1121: StartRTS(18);
  2801  007E24  0E12               	movlw	18
  2802  007E26  EC6F  F073         	call	_StartRTS
  2803                           ;pomiar.c: 1122: M._SYNCH_PGD=1;
  2804  007E2A  0101               	movlb	(_M+8) shr (0+8)
  2805  007E2C  8108               	bsf	(_M+8)& (0+255),0,b
  2806                           ;pomiar.c: 1123: return;
  2807  007E2E  0012               	return	
  2808  007E30                     l339:
  2809                           ;pomiar.c: 1124: }
  2810  007E30  0101               	movlb	(_M+3) shr (0+8)
  2811  007E32  9703               	bcf	(_M+3)& (0+255),3,b
  2812                           ;pomiar.c: 1128: if(RTS(18)>2)
  2813  007E34  0E12               	movlw	18
  2814  007E36  EC87  F073         	call	_RTS
  2815  007E3A  6E00               	movwf	btemp,c
  2816  007E3C  0E03               	movlw	3
  2817  007E3E  5C00               	subwf	btemp,w,c
  2818  007E40  A0D8               	btfss	status,0,c
  2819  007E42  0012               	return	
  2820                           ;pomiar.c: 1129: {
  2821  007E44  0101               	movlb	(_M+8) shr (0+8)
  2822  007E46  9108               	bcf	(_M+8)& (0+255),0,b
  2823                           ;pomiar.c: 1131: }
  2824  007E48  0012               	return	
  2825  007E4A                     __end_of_SetTrbPGD:
  2826                           ;pomiar.c: 1135: void SetModPCO(void)
  2827                           ;pomiar.c: 1136: {
  2828  007E4A                     _SetModPCO:
  2829  000000                     
  2830                           ;pomiar.c: 1137: if(M._AKTYWNE_KNF)
  2831  007E4A  0101               	movlb	(_M+3) shr (0+8)
  2832  007E4C  A503               	btfss	(_M+3)& (0+255),2,b
  2833  007E4E  D006               	goto	l346
  2834                           ;pomiar.c: 1138: {
  2835  007E50  EE02  F03B         	lfsr	0,_DtKNF+11
  2836  007E54  50EF               	movf	indf0,w,c
  2837  007E56  E00C               	bz	l354
  2838                           ;pomiar.c: 1140: else DtCO.PPCO=55;
  2839  007E58  0E37               	movlw	55
  2840  007E5A  D025               	goto	L13
  2841                           ;pomiar.c: 1141: M.CONTSETP=DtCO.PPCO;
  2842                           ;pomiar.c: 1142: M.SETPmax=DtCO.PPCO;
  2843                           ;pomiar.c: 1143: }
  2844  007E5C                     l346:
  2845                           ;pomiar.c: 1144: else
  2846  007E5C  0101               	movlb	_M shr (0+8)
  2847  007E5E  B900               	btfsc	_M& (0+255),4,b
  2848  007E60  D017               	goto	l352
  2849  007E62  0101               	movlb	_M shr (0+8)
  2850  007E64  B700               	btfsc	_M& (0+255),3,b
  2851  007E66  D014               	goto	l352
  2852  007E68  0101               	movlb	_M shr (0+8)
  2853  007E6A  AF00               	btfss	_M& (0+255),7,b
  2854  007E6C  D023               	goto	l350
  2855  007E6E  D010               	goto	l352
  2856                           ;pomiar.c: 1146: {
  2857  007E70                     l354:
  2858                           ;pomiar.c: 1150: case 2:
  2859  007E70  0E55               	movlw	85
  2860  007E72  D019               	goto	L13
  2861                           ;pomiar.c: 1153: break;
  2862  007E74                     l355:
  2863  007E74  D017               	goto	L42
  2864                           ;pomiar.c: 1154: }
  2865                           ;pomiar.c: 1156: {
  2866                           ;pomiar.c: 1158: break;
  2867  007E76                     l356:
  2868                           ;pomiar.c: 1159: }
  2869                           ;pomiar.c: 1161: {
  2870  007E76  0101               	movlb	_M shr (0+8)
  2871  007E78  B900               	btfsc	_M& (0+255),4,b
  2872  007E7A  D003               	goto	u2210
  2873  007E7C  0101               	movlb	_M shr (0+8)
  2874  007E7E  A700               	btfss	_M& (0+255),3,b
  2875  007E80  D003               	goto	l357
  2876  007E82                     u2210:
  2877                           ;pomiar.c: 1163: {
  2878  007E82  C1C6  F1BA         	movff	_DtCO+16,_DtCO+4
  2879                           ;pomiar.c: 1166: }
  2880  007E86  D011               	goto	l351
  2881  007E88                     l357:
  2882                           ;pomiar.c: 1167: else
  2883  007E88  C1C6  FFE8         	movff	_DtCO+16,wreg
  2884  007E8C  0F02               	addlw	2
  2885  007E8E  D00B               	goto	L13
  2886                           ;pomiar.c: 1177: break;
  2887  007E90                     l352:
  2888  007E90  C237  FFE8         	movff	_DtKNF+7,wreg
  2889  007E94  0A00               	xorlw	0
  2890  007E96  E0EF               	bz	l356
  2891  007E98  0A01               	xorlw	1
  2892  007E9A  E0EA               	bz	l354
  2893  007E9C  0A03               	xorlw	3
  2894  007E9E  E0E8               	bz	l354
  2895  007EA0  0A01               	xorlw	1
  2896  007EA2  E0E8               	bz	l355
  2897  007EA4                     L42:
  2898                           ;pomiar.c: 1171: }
  2899                           ;pomiar.c: 1173: }
  2900                           ;pomiar.c: 1175: {
  2901  007EA4  0E59               	movlw	89
  2902  007EA6                     L13:
  2903  007EA6  CFE8 F1BA          	movff	wreg,_DtCO+4
  2904  007EAA                     l351:
  2905                           ;pomiar.c: 1180: M.CONTSETP=DtCO.PPCO;
  2906  007EAA  C1BA  F120         	movff	_DtCO+4,_M+32
  2907                           ;pomiar.c: 1181: M.SETPmax=DtCO.PPCO;
  2908  007EAE  C1BA  F122         	movff	_DtCO+4,_M+34
  2909                           ;pomiar.c: 1182: }
  2910  007EB2  D04B               	goto	l349
  2911  007EB4                     l350:
  2912                           ;pomiar.c: 1183: else
  2913  007EB4  0101               	movlb	(_M+3) shr (0+8)
  2914  007EB6  A303               	btfss	(_M+3)& (0+255),1,b
  2915  007EB8  D02F               	goto	l361
  2916                           ;pomiar.c: 1185: {
  2917  007EBA  C1BD  F1BA         	movff	_DtCO+7,_DtCO+4
  2918                           ;pomiar.c: 1187: M.SETPmax=DtCO.PPCO;
  2919  007EBE  C1BA  F122         	movff	_DtCO+4,_M+34
  2920                           ;pomiar.c: 1188: if(M.SETPmin>M.SETPmax) M.SETPm
      +                          in=M.SETPmax;
  2921  007EC2  C121  FFE8         	movff	_M+33,wreg
  2922  007EC6  0101               	movlb	(_M+34) shr (0+8)
  2923  007EC8  6122               	cpfslt	(_M+34)& (0+255),b
  2924  007ECA  D002               	goto	l362
  2925  007ECC  C122  F121         	movff	_M+34,_M+33
  2926  007ED0                     l362:
  2927                           ;pomiar.c: 1236: if(!M._AKTYWNE_PGD2)
  2928  007ED0  0101               	movlb	(_M+3) shr (0+8)
  2929  007ED2  B703               	btfsc	(_M+3)& (0+255),3,b
  2930  007ED4  D01E               	goto	l364
  2931                           ;pomiar.c: 1237: {
  2932  007ED6  0101               	movlb	(_M+7) shr (0+8)
  2933  007ED8  B107               	btfsc	(_M+7)& (0+255),0,b
  2934  007EDA  D009               	goto	u2310
  2935  007EDC  0101               	movlb	(_M+6) shr (0+8)
  2936  007EDE  B906               	btfsc	(_M+6)& (0+255),4,b
  2937  007EE0  D006               	goto	u2310
  2938  007EE2  0101               	movlb	(_M+6) shr (0+8)
  2939  007EE4  B706               	btfsc	(_M+6)& (0+255),3,b
  2940  007EE6  D003               	goto	u2310
  2941  007EE8  0101               	movlb	(_M+7) shr (0+8)
  2942  007EEA  A907               	btfss	(_M+7)& (0+255),4,b
  2943  007EEC  D012               	goto	l364
  2944  007EEE                     u2310:
  2945                           ;pomiar.c: 1239: {
  2946  007EEE  C173  F120         	movff	_RSDT1+79,_M+32
  2947                           ;pomiar.c: 1241: if(M.CONTSETP>M.SETPmax) M.CONT
      +                          SETP=M.SETPmax;
  2948  007EF2  C120  FFE8         	movff	_M+32,wreg
  2949  007EF6  0101               	movlb	(_M+34) shr (0+8)
  2950  007EF8  6122               	cpfslt	(_M+34)& (0+255),b
  2951  007EFA  D003               	goto	l365
  2952  007EFC  C122  F120         	movff	_M+34,_M+32
  2953  007F00  D024               	goto	l349
  2954  007F02                     l365:
  2955                           ;pomiar.c: 1242: else
  2956  007F02  C121  FFE8         	movff	_M+33,wreg
  2957  007F06  0101               	movlb	(_M+32) shr (0+8)
  2958  007F08  6120               	cpfslt	(_M+32)& (0+255),b
  2959  007F0A  D01F               	goto	l349
  2960  007F0C  C121  F120         	movff	_M+33,_M+32
  2961                           ;pomiar.c: 1244: }
  2962  007F10  D01C               	goto	l349
  2963  007F12                     l364:
  2964                           ;pomiar.c: 1245: else
  2965  007F12  C1BD  F120         	movff	_DtCO+7,_M+32
  2966                           ;pomiar.c: 1248: }
  2967                           ;pomiar.c: 1250: else
  2968                           ;pomiar.c: 1253: }
  2969  007F16  D019               	goto	l349
  2970  007F18                     l361:
  2971                           ;pomiar.c: 1256: else
  2972  007F18  C1B9  F1BA         	movff	_DtCO+3,_DtCO+4
  2973                           ;pomiar.c: 1259: M.SETPmax=DtCO.PPCO;
  2974  007F1C  C1BA  F122         	movff	_DtCO+4,_M+34
  2975                           ;pomiar.c: 1260: if(M.SETPmin>M.SETPmax) M.SETPm
      +                          in=M.SETPmax;
  2976  007F20  C121  FFE8         	movff	_M+33,wreg
  2977  007F24  0101               	movlb	(_M+34) shr (0+8)
  2978  007F26  6122               	cpfslt	(_M+34)& (0+255),b
  2979  007F28  D002               	goto	l371
  2980  007F2A  C122  F121         	movff	_M+34,_M+33
  2981  007F2E                     l371:
  2982                           ;pomiar.c: 1295: if(M._I10V_RT||M._LIN_STR||M._L
      +                          IN_KSK||M._IOT_STR)
  2983  007F2E  0101               	movlb	(_M+7) shr (0+8)
  2984  007F30  B107               	btfsc	(_M+7)& (0+255),0,b
  2985  007F32  D7DD               	goto	u2310
  2986  007F34  0101               	movlb	(_M+6) shr (0+8)
  2987  007F36  B906               	btfsc	(_M+6)& (0+255),4,b
  2988  007F38  D7DA               	goto	u2310
  2989  007F3A  0101               	movlb	(_M+6) shr (0+8)
  2990  007F3C  B706               	btfsc	(_M+6)& (0+255),3,b
  2991  007F3E  D7D7               	goto	u2310
  2992  007F40  0101               	movlb	(_M+7) shr (0+8)
  2993  007F42  B907               	btfsc	(_M+7)& (0+255),4,b
  2994  007F44  D7D4               	goto	u2310
  2995                           ;pomiar.c: 1296: {
  2996                           ;pomiar.c: 1298: if(M.CONTSETP>M.SETPmax) M.CONT
      +                          SETP=M.SETPmax;
  2997                           ;pomiar.c: 1299: else
  2998                           ;pomiar.c: 1301: }
  2999                           ;pomiar.c: 1302: else
  3000  007F46  C1B9  F120         	movff	_DtCO+3,_M+32
  3001  007F4A                     l349:
  3002                           ;pomiar.c: 1305: }
  3003  007F4A  EE02  F03B         	lfsr	0,_DtKNF+11
  3004  007F4E  50EF               	movf	indf0,w,c
  3005  007F50  E108               	bnz	l377
  3006                           ;pomiar.c: 1310: {
  3007  007F52  0101               	movlb	_M shr (0+8)
  3008  007F54  B500               	btfsc	_M& (0+255),2,b
  3009  007F56  D003               	goto	l378
  3010  007F58                     u2450:
  3011  007F58  C1BA  F132         	movff	_DtCO+4,_RSDT1+14
  3012  007F5C  D00E               	goto	l380
  3013  007F5E                     l378:
  3014                           ;pomiar.c: 1312: else
  3015  007F5E  0E58               	movlw	88
  3016  007F60  D004               	goto	L70
  3017                           ;pomiar.c: 1315: RSDT1.outPPCO=88;
  3018                           ;pomiar.c: 1316: M.CONTSETP=DtCO.PPCO;
  3019                           ;pomiar.c: 1317: M.SETPmax=DtCO.PPCO;
  3020                           ;pomiar.c: 1318: }
  3021  007F62                     l377:
  3022                           ;pomiar.c: 1320: else
  3023  007F62  0101               	movlb	_M shr (0+8)
  3024  007F64  A500               	btfss	_M& (0+255),2,b
  3025  007F66  D7F8               	goto	u2450
  3026                           ;pomiar.c: 1323: else
  3027  007F68  0E3A               	movlw	58
  3028  007F6A                     L70:
  3029  007F6A  CFE8 F1BA          	movff	wreg,_DtCO+4
  3030                           ;pomiar.c: 1326: RSDT1.outPPCO=58;
  3031  007F6E  CFE8 F132          	movff	wreg,_RSDT1+14
  3032                           ;pomiar.c: 1327: M.CONTSETP=DtCO.PPCO;
  3033  007F72  C1BA  F120         	movff	_DtCO+4,_M+32
  3034                           ;pomiar.c: 1328: M.SETPmax=DtCO.PPCO;
  3035  007F76  C1BA  F122         	movff	_DtCO+4,_M+34
  3036  007F7A                     l380:
  3037                           ;pomiar.c: 1329: }
  3038  007F7A  0101               	movlb	_M shr (0+8)
  3039  007F7C  AD00               	btfss	_M& (0+255),6,b
  3040  007F7E  0012               	return	
  3041                           ;pomiar.c: 1332: {
  3042  007F80  0E14               	movlw	20
  3043  007F82  CFE8 F1BA          	movff	wreg,_DtCO+4
  3044                           ;pomiar.c: 1334: RSDT1.outPPCO=20;
  3045  007F86  CFE8 F132          	movff	wreg,_RSDT1+14
  3046                           ;pomiar.c: 1335: M.CONTSETP=DtCO.PPCO;
  3047  007F8A  C1BA  F120         	movff	_DtCO+4,_M+32
  3048                           ;pomiar.c: 1336: M.SETPmax=DtCO.PPCO;
  3049  007F8E  C1BA  F122         	movff	_DtCO+4,_M+34
  3050                           ;pomiar.c: 1337: }
  3051  007F92  0C14               	retlw	20
  3052  007F94                     __end_of_SetModPCO:
  3053                           ;pomiar.c: 1374: unsigned char GetPGD_PCO(void)
  3054                           ;pomiar.c: 1375: {
  3055  007F94                     _GetPGD_PCO:
  3056  000000                     
  3057                           ;	_m assigned to ?a_GetPGD_PCO+0
  3058  000000                     _GetPGD_PCO$m	set	?a_GetPGD_PCO
  3059                           ;pomiar.c: 1376: unsigned char p;
  3060  007F94  EE02  F03B         	lfsr	0,_DtKNF+11
  3061  007F98  50EF               	movf	indf0,w,c
  3062  007F9A  E001 D0EF          	bnz	l385
  3063                           ;pomiar.c: 1380: {
  3064  007F9E  EE01  F0B9         	lfsr	0,_DtCO+3
  3065  007FA2  50EF               	movf	indf0,w,c
  3066  007FA4  E101 D0C7          	bz	l386
  3067                           ;pomiar.c: 1382: {
  3068  007FA8  C19F  FFE8         	movff	_DtZW+3,wreg
  3069  007FAC  0A80               	xorlw	128
  3070  007FAE  0F67               	addlw	-153
  3071  007FB0  E301 D09E          	bc	l387
  3072                           ;pomiar.c: 1384: {
  3073  007FB4  C1B9  F002         	movff	_DtCO+3,btemp+2
  3074  007FB8  6A03               	clrf	btemp+3,c
  3075  007FBA  C19F  FFF6         	movff	_DtZW+3,tblptrl
  3076  007FBE  6AF7               	clrf	tblptrh,c
  3077  007FC0  BEF6               	btfsc	tblptrl,7,c
  3078  007FC2  06F7               	decf	tblptrh,f,c
  3079  007FC4  0E19               	movlw	25
  3080  007FC6  6E00               	movwf	btemp,c
  3081  007FC8  6A01               	clrf	btemp+1,c
  3082  007FCA  50F6               	movf	tblptrl,w,c
  3083  007FCC  5E00               	subwf	btemp,f,c
  3084  007FCE  50F7               	movf	tblptrh,w,c
  3085  007FD0  5A01               	subwfb	btemp+1,f,c
  3086  007FD2  EC92  F078         	call	awmul
  3087  007FD6  0100               	movlb	__Lparam shr (0+8)
  3088  007FD8  C004  F0EF         	movff	btemp+4,?a_GetPGD_PCO
  3089  007FDC  C005  F0F0         	movff	btemp+5,?a_GetPGD_PCO+1
  3090  007FE0  0E00               	movlw	0
  3091  007FE2  BFF0               	btfsc	(?a_GetPGD_PCO+1)^(__Lparam& (0+65280)),7
      +                          ,b
  3092  007FE4  0EFF               	movlw	-1
  3093  007FE6  6FF1               	movwf	(?a_GetPGD_PCO+2)^(__Lparam& (0+65280)),b
  3094  007FE8  6FF2               	movwf	(?a_GetPGD_PCO+3)^(__Lparam& (0+65280)),b
  3095                           ;pomiar.c: 1386: m*=(85-40);
  3096  007FEA  0E2D               	movlw	45
  3097  007FEC  6E04               	movwf	btemp+4,c
  3098  007FEE  6A05               	clrf	btemp+5,c
  3099  007FF0  6A06               	clrf	btemp+6,c
  3100  007FF2  6A07               	clrf	btemp+7,c
  3101  007FF4  0EEF               	movlw	low ?a_GetPGD_PCO
  3102  007FF6  6EE9               	movwf	fsr0l,c
  3103  007FF8  0E00               	movlw	high ?a_GetPGD_PCO
  3104  007FFA  6EEA               	movwf	fsr0h,c
  3105  007FFC  ECAE  F078         	call	almul_f
  3106                           ;pomiar.c: 1387: m*=100;
  3107  008000  0E64               	movlw	100
  3108  008002  6E04               	movwf	btemp+4,c
  3109  008004  6A05               	clrf	btemp+5,c
  3110  008006  6A06               	clrf	btemp+6,c
  3111  008008  6A07               	clrf	btemp+7,c
  3112  00800A  0EEF               	movlw	low ?a_GetPGD_PCO
  3113  00800C  6EE9               	movwf	fsr0l,c
  3114  00800E  0E00               	movlw	high ?a_GetPGD_PCO
  3115  008010  6EEA               	movwf	fsr0h,c
  3116  008012  ECAE  F078         	call	almul_f
  3117                           ;pomiar.c: 1388: m/=1485;
  3118  008016  0ECD               	movlw	205
  3119  008018  6E04               	movwf	btemp+4,c
  3120  00801A  0E05               	movlw	5
  3121  00801C  6E05               	movwf	btemp+5,c
  3122  00801E  6A06               	clrf	btemp+6,c
  3123  008020  6A07               	clrf	btemp+7,c
  3124  008022  0EEF               	movlw	low ?a_GetPGD_PCO
  3125  008024  6EE9               	movwf	fsr0l,c
  3126  008026  0E00               	movlw	high ?a_GetPGD_PCO
  3127  008028  6EEA               	movwf	fsr0h,c
  3128  00802A  ECB8  F078         	call	aldiv_f
  3129                           ;pomiar.c: 1389: if((40+m/100)>85) p=85;
  3130  00802E  0E64               	movlw	100
  3131  008030  6E04               	movwf	btemp+4,c
  3132  008032  6A05               	clrf	btemp+5,c
  3133  008034  6A06               	clrf	btemp+6,c
  3134  008036  6A07               	clrf	btemp+7,c
  3135  008038  C0EF  F000         	movff	?a_GetPGD_PCO,btemp
  3136  00803C  C0F0  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  3137  008040  C0F1  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  3138  008044  C0F2  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  3139  008048  EC10  F078         	call	aldiv
  3140  00804C  0E28               	movlw	40
  3141  00804E  2400               	addwf	btemp,w,c
  3142  008050  6E04               	movwf	btemp+4,c
  3143  008052  0E00               	movlw	0
  3144  008054  2001               	addwfc	btemp+1,w,c
  3145  008056  6E05               	movwf	btemp+5,c
  3146  008058  0E00               	movlw	0
  3147  00805A  2002               	addwfc	btemp+2,w,c
  3148  00805C  6E06               	movwf	btemp+6,c
  3149  00805E  0E00               	movlw	0
  3150  008060  2003               	addwfc	btemp+3,w,c
  3151  008062  6E07               	movwf	btemp+7,c
  3152  008064  5007               	movf	btemp+7,w,c
  3153  008066  0A80               	xorlw	128
  3154  008068  0F80               	addlw	128
  3155  00806A  E108               	bnz	u2515
  3156  00806C  0E00               	movlw	0
  3157  00806E  5C06               	subwf	btemp+6,w,c
  3158  008070  E105               	bnz	u2515
  3159  008072  0E00               	movlw	0
  3160  008074  5C05               	subwf	btemp+5,w,c
  3161  008076  E102               	bnz	u2515
  3162  008078  0E56               	movlw	86
  3163  00807A  5C04               	subwf	btemp+4,w,c
  3164  00807C                     u2515:
  3165  00807C  E229               	bc	l391
  3166                           ;pomiar.c: 1390: else
  3167  00807E  0E64               	movlw	100
  3168  008080  6E04               	movwf	btemp+4,c
  3169  008082  6A05               	clrf	btemp+5,c
  3170  008084  6A06               	clrf	btemp+6,c
  3171  008086  6A07               	clrf	btemp+7,c
  3172  008088  C0EF  F000         	movff	?a_GetPGD_PCO,btemp
  3173  00808C  C0F0  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  3174  008090  C0F1  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  3175  008094  C0F2  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  3176  008098  EC10  F078         	call	aldiv
  3177  00809C  5000               	movf	btemp,w,c
  3178  00809E  0F28               	addlw	40
  3179  0080A0  6ED9               	movwf	fsr2l,c
  3180                           ;pomiar.c: 1393: if(p<40) p=40;
  3181  0080A2  0E28               	movlw	40
  3182  0080A4  60D9               	cpfslt	fsr2l,c
  3183  0080A6  D001               	goto	l390
  3184  0080A8  6ED9               	movwf	fsr2l,c
  3185  0080AA                     l390:
  3186                           ;pomiar.c: 1394: if((p+DtKNF.prop)<85) p=p+DtKNF
      +                          .prop;
  3187  0080AA  C245  FFE8         	movff	_DtKNF+21,wreg
  3188  0080AE  CFD9 F000          	movff	fsr2l,btemp
  3189  0080B2  6A01               	clrf	btemp+1,c
  3190  0080B4  2600               	addwf	btemp,f,c
  3191  0080B6  0E00               	movlw	0
  3192  0080B8  2201               	addwfc	btemp+1,f,c
  3193  0080BA  5001               	movf	btemp+1,w,c
  3194  0080BC  0A80               	xorlw	128
  3195  0080BE  0F80               	addlw	-128
  3196  0080C0  0E55               	movlw	85
  3197  0080C2  B4D8               	btfsc	status,2,c
  3198  0080C4  5C00               	subwf	btemp,w,c
  3199  0080C6  E204               	bc	l391
  3200  0080C8  C245  FFE8         	movff	_DtKNF+21,wreg
  3201  0080CC  26D9               	addwf	fsr2l,f,c
  3202  0080CE  D002               	goto	l389
  3203  0080D0                     l391:
  3204                           ;pomiar.c: 1395: else p=85;
  3205  0080D0  0E55               	movlw	85
  3206  0080D2  6ED9               	movwf	fsr2l,c
  3207  0080D4                     l389:
  3208                           ;pomiar.c: 1396: }
  3209  0080D4  0E27               	movlw	39
  3210  0080D6  0102               	movlb	(_DtKNF+23) shr (0+8)
  3211  0080D8  6547               	cpfsgt	(_DtKNF+23)& (0+255),b
  3212  0080DA  D006               	goto	l393
  3213                           ;pomiar.c: 1398: {
  3214  0080DC  50D9               	movf	fsr2l,w,c
  3215  0080DE  6147               	cpfslt	(_DtKNF+23)& (0+255),b
  3216  0080E0  D005               	goto	l395
  3217  0080E2  C247  FFD9         	movff	_DtKNF+23,fsr2l
  3218                           ;pomiar.c: 1400: }
  3219  0080E6  D002               	goto	l395
  3220  0080E8                     l393:
  3221                           ;pomiar.c: 1401: else p=40;
  3222  0080E8  0E28               	movlw	40
  3223  0080EA  6ED9               	movwf	fsr2l,c
  3224  0080EC                     l395:
  3225                           ;pomiar.c: 1402: return p;
  3226  0080EC  50D9               	movf	fsr2l,w,c
  3227  0080EE  0012               	return	
  3228  0080F0                     l387:
  3229                           ;pomiar.c: 1404: else
  3230  0080F0  0E28               	movlw	40
  3231  0080F2  6ED9               	movwf	fsr2l,c
  3232                           ;pomiar.c: 1407: if((p+DtKNF.prop)<85) p=p+DtKNF
      +                          .prop;
  3233  0080F4  C245  F000         	movff	_DtKNF+21,btemp
  3234  0080F8  6A01               	clrf	btemp+1,c
  3235  0080FA  2600               	addwf	btemp,f,c
  3236  0080FC  0E00               	movlw	0
  3237  0080FE  2201               	addwfc	btemp+1,f,c
  3238  008100  5001               	movf	btemp+1,w,c
  3239  008102  0A80               	xorlw	128
  3240  008104  0F80               	addlw	-128
  3241  008106  0E55               	movlw	85
  3242  008108  B4D8               	btfsc	status,2,c
  3243  00810A  5C00               	subwf	btemp,w,c
  3244  00810C  E204               	bc	l397
  3245  00810E  C245  FFE8         	movff	_DtKNF+21,wreg
  3246  008112  26D9               	addwf	fsr2l,f,c
  3247  008114  D002               	goto	l398
  3248  008116                     l397:
  3249                           ;pomiar.c: 1408: else p=85;
  3250  008116  0E55               	movlw	85
  3251  008118  6ED9               	movwf	fsr2l,c
  3252  00811A                     l398:
  3253                           ;pomiar.c: 1409: if(DtKNF.pgmx>=40)
  3254  00811A  0E27               	movlw	39
  3255  00811C  0102               	movlb	(_DtKNF+23) shr (0+8)
  3256  00811E  6547               	cpfsgt	(_DtKNF+23)& (0+255),b
  3257  008120  D006               	goto	l399
  3258                           ;pomiar.c: 1410: {
  3259  008122  50D9               	movf	fsr2l,w,c
  3260  008124  6147               	cpfslt	(_DtKNF+23)& (0+255),b
  3261  008126  D005               	goto	l401
  3262  008128  C247  FFD9         	movff	_DtKNF+23,fsr2l
  3263                           ;pomiar.c: 1412: }
  3264  00812C  D002               	goto	l401
  3265  00812E                     l399:
  3266                           ;pomiar.c: 1413: else p=40;
  3267  00812E  0E28               	movlw	40
  3268  008130  6ED9               	movwf	fsr2l,c
  3269  008132                     l401:
  3270                           ;pomiar.c: 1414: return p;
  3271  008132  50D9               	movf	fsr2l,w,c
  3272  008134  0012               	return	
  3273  008136                     l386:
  3274                           ;pomiar.c: 1417: else
  3275  008136  0E28               	movlw	40
  3276  008138  6ED9               	movwf	fsr2l,c
  3277                           ;pomiar.c: 1420: if((p+DtKNF.prop)<85) p=p+DtKNF
      +                          .prop;
  3278  00813A  C245  F000         	movff	_DtKNF+21,btemp
  3279  00813E  6A01               	clrf	btemp+1,c
  3280  008140  2600               	addwf	btemp,f,c
  3281  008142  0E00               	movlw	0
  3282  008144  2201               	addwfc	btemp+1,f,c
  3283  008146  5001               	movf	btemp+1,w,c
  3284  008148  0A80               	xorlw	128
  3285  00814A  0F80               	addlw	-128
  3286  00814C  0E55               	movlw	85
  3287  00814E  B4D8               	btfsc	status,2,c
  3288  008150  5C00               	subwf	btemp,w,c
  3289  008152  E204               	bc	l403
  3290  008154  C245  FFE8         	movff	_DtKNF+21,wreg
  3291  008158  26D9               	addwf	fsr2l,f,c
  3292  00815A  D002               	goto	l404
  3293  00815C                     l403:
  3294                           ;pomiar.c: 1421: else p=85;
  3295  00815C  0E55               	movlw	85
  3296  00815E  6ED9               	movwf	fsr2l,c
  3297  008160                     l404:
  3298                           ;pomiar.c: 1422: if(DtKNF.pgmx>=40)
  3299  008160  0E27               	movlw	39
  3300  008162  0102               	movlb	(_DtKNF+23) shr (0+8)
  3301  008164  6547               	cpfsgt	(_DtKNF+23)& (0+255),b
  3302  008166  D006               	goto	l405
  3303                           ;pomiar.c: 1423: {
  3304  008168  50D9               	movf	fsr2l,w,c
  3305  00816A  6147               	cpfslt	(_DtKNF+23)& (0+255),b
  3306  00816C  D005               	goto	l407
  3307  00816E  C247  FFD9         	movff	_DtKNF+23,fsr2l
  3308                           ;pomiar.c: 1425: }
  3309  008172  D002               	goto	l407
  3310  008174                     l405:
  3311                           ;pomiar.c: 1426: else p=40;
  3312  008174  0E28               	movlw	40
  3313  008176  6ED9               	movwf	fsr2l,c
  3314  008178                     l407:
  3315                           ;pomiar.c: 1427: return p;
  3316  008178  50D9               	movf	fsr2l,w,c
  3317  00817A  0012               	return	
  3318  00817C                     l385:
  3319                           ;pomiar.c: 1430: else
  3320  00817C  EE01  F0B9         	lfsr	0,_DtCO+3
  3321  008180  50EF               	movf	indf0,w,c
  3322  008182  E101 D0C7          	bz	l409
  3323                           ;pomiar.c: 1433: {
  3324  008186  C19F  FFE8         	movff	_DtZW+3,wreg
  3325  00818A  0A80               	xorlw	128
  3326  00818C  0F67               	addlw	-153
  3327  00818E  E301 D09E          	bc	l410
  3328                           ;pomiar.c: 1435: {
  3329  008192  C1B9  F002         	movff	_DtCO+3,btemp+2
  3330  008196  6A03               	clrf	btemp+3,c
  3331  008198  C19F  FFF6         	movff	_DtZW+3,tblptrl
  3332  00819C  6AF7               	clrf	tblptrh,c
  3333  00819E  BEF6               	btfsc	tblptrl,7,c
  3334  0081A0  06F7               	decf	tblptrh,f,c
  3335  0081A2  0E19               	movlw	25
  3336  0081A4  6E00               	movwf	btemp,c
  3337  0081A6  6A01               	clrf	btemp+1,c
  3338  0081A8  50F6               	movf	tblptrl,w,c
  3339  0081AA  5E00               	subwf	btemp,f,c
  3340  0081AC  50F7               	movf	tblptrh,w,c
  3341  0081AE  5A01               	subwfb	btemp+1,f,c
  3342  0081B0  EC92  F078         	call	awmul
  3343  0081B4  0100               	movlb	__Lparam shr (0+8)
  3344  0081B6  C004  F0EF         	movff	btemp+4,?a_GetPGD_PCO
  3345  0081BA  C005  F0F0         	movff	btemp+5,?a_GetPGD_PCO+1
  3346  0081BE  0E00               	movlw	0
  3347  0081C0  BFF0               	btfsc	(?a_GetPGD_PCO+1)^(__Lparam& (0+65280)),7
      +                          ,b
  3348  0081C2  0EFF               	movlw	-1
  3349  0081C4  6FF1               	movwf	(?a_GetPGD_PCO+2)^(__Lparam& (0+65280)),b
  3350  0081C6  6FF2               	movwf	(?a_GetPGD_PCO+3)^(__Lparam& (0+65280)),b
  3351                           ;pomiar.c: 1437: m*=(55-35);
  3352  0081C8  0E14               	movlw	20
  3353  0081CA  6E04               	movwf	btemp+4,c
  3354  0081CC  6A05               	clrf	btemp+5,c
  3355  0081CE  6A06               	clrf	btemp+6,c
  3356  0081D0  6A07               	clrf	btemp+7,c
  3357  0081D2  0EEF               	movlw	low ?a_GetPGD_PCO
  3358  0081D4  6EE9               	movwf	fsr0l,c
  3359  0081D6  0E00               	movlw	high ?a_GetPGD_PCO
  3360  0081D8  6EEA               	movwf	fsr0h,c
  3361  0081DA  ECAE  F078         	call	almul_f
  3362                           ;pomiar.c: 1438: m*=100;
  3363  0081DE  0E64               	movlw	100
  3364  0081E0  6E04               	movwf	btemp+4,c
  3365  0081E2  6A05               	clrf	btemp+5,c
  3366  0081E4  6A06               	clrf	btemp+6,c
  3367  0081E6  6A07               	clrf	btemp+7,c
  3368  0081E8  0EEF               	movlw	low ?a_GetPGD_PCO
  3369  0081EA  6EE9               	movwf	fsr0l,c
  3370  0081EC  0E00               	movlw	high ?a_GetPGD_PCO
  3371  0081EE  6EEA               	movwf	fsr0h,c
  3372  0081F0  ECAE  F078         	call	almul_f
  3373                           ;pomiar.c: 1439: m/=1485;
  3374  0081F4  0ECD               	movlw	205
  3375  0081F6  6E04               	movwf	btemp+4,c
  3376  0081F8  0E05               	movlw	5
  3377  0081FA  6E05               	movwf	btemp+5,c
  3378  0081FC  6A06               	clrf	btemp+6,c
  3379  0081FE  6A07               	clrf	btemp+7,c
  3380  008200  0EEF               	movlw	low ?a_GetPGD_PCO
  3381  008202  6EE9               	movwf	fsr0l,c
  3382  008204  0E00               	movlw	high ?a_GetPGD_PCO
  3383  008206  6EEA               	movwf	fsr0h,c
  3384  008208  ECB8  F078         	call	aldiv_f
  3385                           ;pomiar.c: 1440: if((35+m/100)>55) p=55;
  3386  00820C  0E64               	movlw	100
  3387  00820E  6E04               	movwf	btemp+4,c
  3388  008210  6A05               	clrf	btemp+5,c
  3389  008212  6A06               	clrf	btemp+6,c
  3390  008214  6A07               	clrf	btemp+7,c
  3391  008216  C0EF  F000         	movff	?a_GetPGD_PCO,btemp
  3392  00821A  C0F0  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  3393  00821E  C0F1  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  3394  008222  C0F2  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  3395  008226  EC10  F078         	call	aldiv
  3396  00822A  0E23               	movlw	35
  3397  00822C  2400               	addwf	btemp,w,c
  3398  00822E  6E04               	movwf	btemp+4,c
  3399  008230  0E00               	movlw	0
  3400  008232  2001               	addwfc	btemp+1,w,c
  3401  008234  6E05               	movwf	btemp+5,c
  3402  008236  0E00               	movlw	0
  3403  008238  2002               	addwfc	btemp+2,w,c
  3404  00823A  6E06               	movwf	btemp+6,c
  3405  00823C  0E00               	movlw	0
  3406  00823E  2003               	addwfc	btemp+3,w,c
  3407  008240  6E07               	movwf	btemp+7,c
  3408  008242  5007               	movf	btemp+7,w,c
  3409  008244  0A80               	xorlw	128
  3410  008246  0F80               	addlw	128
  3411  008248  E108               	bnz	u2645
  3412  00824A  0E00               	movlw	0
  3413  00824C  5C06               	subwf	btemp+6,w,c
  3414  00824E  E105               	bnz	u2645
  3415  008250  0E00               	movlw	0
  3416  008252  5C05               	subwf	btemp+5,w,c
  3417  008254  E102               	bnz	u2645
  3418  008256  0E38               	movlw	56
  3419  008258  5C04               	subwf	btemp+4,w,c
  3420  00825A                     u2645:
  3421  00825A  E229               	bc	l414
  3422                           ;pomiar.c: 1441: else
  3423  00825C  0E64               	movlw	100
  3424  00825E  6E04               	movwf	btemp+4,c
  3425  008260  6A05               	clrf	btemp+5,c
  3426  008262  6A06               	clrf	btemp+6,c
  3427  008264  6A07               	clrf	btemp+7,c
  3428  008266  C0EF  F000         	movff	?a_GetPGD_PCO,btemp
  3429  00826A  C0F0  F001         	movff	?a_GetPGD_PCO+1,btemp+1
  3430  00826E  C0F1  F002         	movff	?a_GetPGD_PCO+2,btemp+2
  3431  008272  C0F2  F003         	movff	?a_GetPGD_PCO+3,btemp+3
  3432  008276  EC10  F078         	call	aldiv
  3433  00827A  5000               	movf	btemp,w,c
  3434  00827C  0F23               	addlw	35
  3435  00827E  6ED9               	movwf	fsr2l,c
  3436                           ;pomiar.c: 1444: if(p<35) p=35;
  3437  008280  0E23               	movlw	35
  3438  008282  60D9               	cpfslt	fsr2l,c
  3439  008284  D001               	goto	l413
  3440  008286  6ED9               	movwf	fsr2l,c
  3441  008288                     l413:
  3442                           ;pomiar.c: 1445: if((p+DtKNF.prop)<55) p=p+DtKNF
      +                          .prop;
  3443  008288  C245  FFE8         	movff	_DtKNF+21,wreg
  3444  00828C  CFD9 F000          	movff	fsr2l,btemp
  3445  008290  6A01               	clrf	btemp+1,c
  3446  008292  2600               	addwf	btemp,f,c
  3447  008294  0E00               	movlw	0
  3448  008296  2201               	addwfc	btemp+1,f,c
  3449  008298  5001               	movf	btemp+1,w,c
  3450  00829A  0A80               	xorlw	128
  3451  00829C  0F80               	addlw	-128
  3452  00829E  0E37               	movlw	55
  3453  0082A0  B4D8               	btfsc	status,2,c
  3454  0082A2  5C00               	subwf	btemp,w,c
  3455  0082A4  E204               	bc	l414
  3456  0082A6  C245  FFE8         	movff	_DtKNF+21,wreg
  3457  0082AA  26D9               	addwf	fsr2l,f,c
  3458  0082AC  D002               	goto	l412
  3459  0082AE                     l414:
  3460                           ;pomiar.c: 1446: else p=55;
  3461  0082AE  0E37               	movlw	55
  3462  0082B0  6ED9               	movwf	fsr2l,c
  3463  0082B2                     l412:
  3464                           ;pomiar.c: 1447: }
  3465  0082B2  0E22               	movlw	34
  3466  0082B4  0102               	movlb	(_DtKNF+23) shr (0+8)
  3467  0082B6  6547               	cpfsgt	(_DtKNF+23)& (0+255),b
  3468  0082B8  D006               	goto	l416
  3469                           ;pomiar.c: 1449: {
  3470  0082BA  50D9               	movf	fsr2l,w,c
  3471  0082BC  6147               	cpfslt	(_DtKNF+23)& (0+255),b
  3472  0082BE  D005               	goto	l418
  3473  0082C0  C247  FFD9         	movff	_DtKNF+23,fsr2l
  3474                           ;pomiar.c: 1451: }
  3475  0082C4  D002               	goto	l418
  3476  0082C6                     l416:
  3477                           ;pomiar.c: 1452: else p=35;
  3478  0082C6  0E23               	movlw	35
  3479  0082C8  6ED9               	movwf	fsr2l,c
  3480  0082CA                     l418:
  3481                           ;pomiar.c: 1453: return p;
  3482  0082CA  50D9               	movf	fsr2l,w,c
  3483  0082CC  0012               	return	
  3484  0082CE                     l410:
  3485                           ;pomiar.c: 1455: else
  3486  0082CE  0E23               	movlw	35
  3487  0082D0  6ED9               	movwf	fsr2l,c
  3488                           ;pomiar.c: 1458: if((p+DtKNF.prop)<55) p=p+DtKNF
      +                          .prop;
  3489  0082D2  C245  F000         	movff	_DtKNF+21,btemp
  3490  0082D6  6A01               	clrf	btemp+1,c
  3491  0082D8  2600               	addwf	btemp,f,c
  3492  0082DA  0E00               	movlw	0
  3493  0082DC  2201               	addwfc	btemp+1,f,c
  3494  0082DE  5001               	movf	btemp+1,w,c
  3495  0082E0  0A80               	xorlw	128
  3496  0082E2  0F80               	addlw	-128
  3497  0082E4  0E37               	movlw	55
  3498  0082E6  B4D8               	btfsc	status,2,c
  3499  0082E8  5C00               	subwf	btemp,w,c
  3500  0082EA  E204               	bc	l420
  3501  0082EC  C245  FFE8         	movff	_DtKNF+21,wreg
  3502  0082F0  26D9               	addwf	fsr2l,f,c
  3503  0082F2  D002               	goto	l421
  3504  0082F4                     l420:
  3505                           ;pomiar.c: 1459: else p=55;
  3506  0082F4  0E37               	movlw	55
  3507  0082F6  6ED9               	movwf	fsr2l,c
  3508  0082F8                     l421:
  3509                           ;pomiar.c: 1460: if(DtKNF.pgmx>=35)
  3510  0082F8  0E22               	movlw	34
  3511  0082FA  0102               	movlb	(_DtKNF+23) shr (0+8)
  3512  0082FC  6547               	cpfsgt	(_DtKNF+23)& (0+255),b
  3513  0082FE  D006               	goto	l422
  3514                           ;pomiar.c: 1461: {
  3515  008300  50D9               	movf	fsr2l,w,c
  3516  008302  6147               	cpfslt	(_DtKNF+23)& (0+255),b
  3517  008304  D005               	goto	l424
  3518  008306  C247  FFD9         	movff	_DtKNF+23,fsr2l
  3519                           ;pomiar.c: 1463: }
  3520  00830A  D002               	goto	l424
  3521  00830C                     l422:
  3522                           ;pomiar.c: 1464: else p=35;
  3523  00830C  0E23               	movlw	35
  3524  00830E  6ED9               	movwf	fsr2l,c
  3525  008310                     l424:
  3526                           ;pomiar.c: 1465: return p;
  3527  008310  50D9               	movf	fsr2l,w,c
  3528  008312  0012               	return	
  3529  008314                     l409:
  3530                           ;pomiar.c: 1468: else
  3531  008314  0E23               	movlw	35
  3532  008316  6ED9               	movwf	fsr2l,c
  3533                           ;pomiar.c: 1471: if((p+DtKNF.prop)<55) p=p+DtKNF
      +                          .prop;
  3534  008318  C245  F000         	movff	_DtKNF+21,btemp
  3535  00831C  6A01               	clrf	btemp+1,c
  3536  00831E  2600               	addwf	btemp,f,c
  3537  008320  0E00               	movlw	0
  3538  008322  2201               	addwfc	btemp+1,f,c
  3539  008324  5001               	movf	btemp+1,w,c
  3540  008326  0A80               	xorlw	128
  3541  008328  0F80               	addlw	-128
  3542  00832A  0E37               	movlw	55
  3543  00832C  B4D8               	btfsc	status,2,c
  3544  00832E  5C00               	subwf	btemp,w,c
  3545  008330  E204               	bc	l426
  3546  008332  C245  FFE8         	movff	_DtKNF+21,wreg
  3547  008336  26D9               	addwf	fsr2l,f,c
  3548  008338  D002               	goto	l427
  3549  00833A                     l426:
  3550                           ;pomiar.c: 1472: else p=55;
  3551  00833A  0E37               	movlw	55
  3552  00833C  6ED9               	movwf	fsr2l,c
  3553  00833E                     l427:
  3554                           ;pomiar.c: 1473: if(DtKNF.pgmx>=35)
  3555  00833E  0E22               	movlw	34
  3556  008340  0102               	movlb	(_DtKNF+23) shr (0+8)
  3557  008342  6547               	cpfsgt	(_DtKNF+23)& (0+255),b
  3558  008344  D006               	goto	l428
  3559                           ;pomiar.c: 1474: {
  3560  008346  50D9               	movf	fsr2l,w,c
  3561  008348  6147               	cpfslt	(_DtKNF+23)& (0+255),b
  3562  00834A  D005               	goto	l430
  3563  00834C  C247  FFD9         	movff	_DtKNF+23,fsr2l
  3564                           ;pomiar.c: 1476: }
  3565  008350  D002               	goto	l430
  3566  008352                     l428:
  3567                           ;pomiar.c: 1477: else p=35;
  3568  008352  0E23               	movlw	35
  3569  008354  6ED9               	movwf	fsr2l,c
  3570  008356                     l430:
  3571                           ;pomiar.c: 1478: return p;
  3572  008356  50D9               	movf	fsr2l,w,c
  3573  008358  0012               	return	
  3574                           ;pomiar.c: 1479: }
  3575  00835A                     __end_of_GetPGD_PCO:
  3576                           ;pomiar.c: 1484: unsigned char ReadPCO(void)
  3577                           ;pomiar.c: 1485: {
  3578  00835A                     _ReadPCO:
  3579  000000                     
  3580                           ;pomiar.c: 1486: if(!M._AKTYWNE_PGD)
  3581  00835A  0101               	movlb	(_M+3) shr (0+8)
  3582  00835C  A303               	btfss	(_M+3)& (0+255),1,b
  3583                           ;pomiar.c: 1487: {
  3584  00835E  EF79  F04F         	goto	_ReadEEPCO	;wreg free
  3585                           ;pomiar.c: 1490: else
  3586  008362  EF7B  F04F         	goto	_ReadEEPPGD	;wreg free
  3587                           ;pomiar.c: 1493: }
  3588  008366                     __end_of_ReadPCO:
  3589                           ;pomiar.c: 1497: void WritePCO(void)
  3590                           ;pomiar.c: 1498: {
  3591  008366                     _WritePCO:
  3592  000000                     
  3593                           ;pomiar.c: 1499: if(DtCO._newPCO&&RTdS(6)>=10)
  3594  008366  0101               	movlb	(_DtCO+1) shr (0+8)
  3595  008368  AFB7               	btfss	(_DtCO+1)& (0+255),7,b
  3596  00836A  0012               	return	
  3597  00836C  0E06               	movlw	6
  3598  00836E  EC63  F073         	call	_RTdS
  3599  008372  6E00               	movwf	btemp,c
  3600  008374  0E0A               	movlw	10
  3601  008376  5C00               	subwf	btemp,w,c
  3602  008378  A0D8               	btfss	status,0,c
  3603  00837A  0012               	return	
  3604                           ;pomiar.c: 1500: {
  3605  00837C  0101               	movlb	(_DtCO+1) shr (0+8)
  3606  00837E  9FB7               	bcf	(_DtCO+1)& (0+255),7,b
  3607                           ;pomiar.c: 1502: StartRTdS(6);
  3608  008380  0E06               	movlw	6
  3609  008382  EC51  F073         	call	_StartRTdS
  3610                           ;pomiar.c: 1503: if(!M._AKTYWNE_PGD)
  3611  008386  0101               	movlb	(_M+3) shr (0+8)
  3612  008388  A303               	btfss	(_M+3)& (0+255),1,b
  3613                           ;pomiar.c: 1504: {
  3614  00838A  EF66  F04F         	goto	_WriteEEPCO	;wreg free
  3615                           ;pomiar.c: 1506: }
  3616                           ;pomiar.c: 1507: else
  3617  00838E  EF7D  F04F         	goto	_WriteEEPPGD	;wreg free
  3618                           ;pomiar.c: 1510: }
  3619  008392                     __end_of_WritePCO:
  3620                           ;pomiar.c: 1515: void PomiarPCO(void)
  3621                           ;pomiar.c: 1516: {
  3622  008392                     _PomiarPCO:
  3623  000000                     
  3624                           ;pomiar.c: 1517: static unsigned char pnst;
  3625  008392  0101               	movlb	(_M+8) shr (0+8)
  3626  008394  B108               	btfsc	(_M+8)& (0+255),0,b
  3627  008396  0012               	return	
  3628                           ;pomiar.c: 1521: {
  3629                           ;pomiar.c: 1523: }
  3630  008398  0101               	movlb	(_M+3) shr (0+8)
  3631  00839A  B303               	btfsc	(_M+3)& (0+255),1,b
  3632  00839C  D003               	goto	l440
  3633                           ;pomiar.c: 1526: {
  3634  00839E  EC8B  F04C         	call	_SetMinMaxPCO	;wreg free
  3635                           ;pomiar.c: 1528: }
  3636  0083A2  D002               	goto	l441
  3637  0083A4                     l440:
  3638                           ;pomiar.c: 1529: else
  3639  0083A4  ECC9  F04C         	call	_SetMinMaxPGD	;wreg free
  3640  0083A8                     l441:
  3641                           ;pomiar.c: 1532: }
  3642  0083A8  0E07               	movlw	7
  3643  0083AA  0100               	movlb	__Lparam shr (0+8)
  3644  0083AC  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3645  0083AE  C16F  FFE8         	movff	_RSDT1+75,wreg
  3646  0083B2  ECC7  F076         	call	_GetBit2
  3647  0083B6  E227               	bc	l442
  3648  0083B8  0102               	movlb	_MGSD shr (0+8)
  3649  0083BA  AD4C               	btfss	_MGSD& (0+255),6,b
  3650  0083BC  D024               	goto	l442
  3651  0083BE  0101               	movlb	(_M+4) shr (0+8)
  3652  0083C0  B904               	btfsc	(_M+4)& (0+255),4,b
  3653  0083C2  D021               	goto	l442
  3654  0083C4  0101               	movlb	(_M+4) shr (0+8)
  3655  0083C6  B704               	btfsc	(_M+4)& (0+255),3,b
  3656  0083C8  D01E               	goto	l442
  3657                           ;pomiar.c: 1535: {
  3658  0083CA  C16D  FEA0         	movff	_RSDT1+73,F1680
  3659                           ;pomiar.c: 1537: if(pnst<DtCO.minPCO) pnst=DtCO.
      +                          minPCO;
  3660  0083CE  C1BB  FFE8         	movff	_DtCO+5,wreg
  3661  0083D2  010E               	movlb	F1680 shr (0+8)
  3662  0083D4  61A0               	cpfslt	F1680& (0+255),b
  3663  0083D6  D002               	goto	l443
  3664  0083D8  C1BB  FEA0         	movff	_DtCO+5,F1680
  3665  0083DC                     l443:
  3666                           ;pomiar.c: 1538: if(pnst>DtCO.maxPCO) pnst=DtCO.
      +                          maxPCO;
  3667  0083DC  CEA0  FFE8         	movff	F1680,wreg
  3668  0083E0  0101               	movlb	(_DtCO+6) shr (0+8)
  3669  0083E2  61BC               	cpfslt	(_DtCO+6)& (0+255),b
  3670  0083E4  D002               	goto	l444
  3671  0083E6  C1BC  FEA0         	movff	_DtCO+6,F1680
  3672  0083EA                     l444:
  3673                           ;pomiar.c: 1539: if(DtCO.PCO!=pnst)
  3674  0083EA  C1B9  FFE8         	movff	_DtCO+3,wreg
  3675  0083EE  010E               	movlb	F1680 shr (0+8)
  3676  0083F0  19A0               	xorwf	F1680& (0+255),w,b
  3677  0083F2  E007               	bz	l445
  3678                           ;pomiar.c: 1540: {
  3679  0083F4  CEA0  F1B9         	movff	F1680,_DtCO+3
  3680                           ;pomiar.c: 1542: DtCO._newPCO=1;
  3681  0083F8  0101               	movlb	(_DtCO+1) shr (0+8)
  3682  0083FA  8FB7               	bsf	(_DtCO+1)& (0+255),7,b
  3683                           ;pomiar.c: 1543: StartRTdS(6);
  3684  0083FC  0E06               	movlw	6
  3685  0083FE  EC51  F073         	call	_StartRTdS
  3686  008402                     l445:
  3687                           ;pomiar.c: 1544: }
  3688  008402  DFB1               	call	_WritePCO	;wreg free
  3689  008404  D011               	goto	l448
  3690                           ;pomiar.c: 1546: RSDT1.outPCO=DtCO.PCO;
  3691                           ;pomiar.c: 1547: }
  3692  008406                     l442:
  3693                           ;pomiar.c: 1548: else
  3694  008406  DFA9               	call	_ReadPCO	;wreg free
  3695  008408  CFE8 F1B9          	movff	wreg,_DtCO+3
  3696                           ;pomiar.c: 1551: if(pnst<DtCO.minPCO) pnst=DtCO.
      +                          minPCO;
  3697  00840C  C1BB  FFE8         	movff	_DtCO+5,wreg
  3698  008410  010E               	movlb	F1680 shr (0+8)
  3699  008412  61A0               	cpfslt	F1680& (0+255),b
  3700  008414  D002               	goto	l447
  3701  008416  C1BB  FEA0         	movff	_DtCO+5,F1680
  3702  00841A                     l447:
  3703                           ;pomiar.c: 1552: if(pnst>DtCO.maxPCO) pnst=DtCO.
      +                          maxPCO;
  3704  00841A  CEA0  FFE8         	movff	F1680,wreg
  3705  00841E  0101               	movlb	(_DtCO+6) shr (0+8)
  3706  008420  61BC               	cpfslt	(_DtCO+6)& (0+255),b
  3707  008422  D002               	goto	l448
  3708  008424  C1BC  FEA0         	movff	_DtCO+6,F1680
  3709  008428                     l448:
  3710                           ;pomiar.c: 1553: RSDT1.outPCO=DtCO.PCO;
  3711  008428  C1B9  F12C         	movff	_DtCO+3,_RSDT1+8
  3712                           ;pomiar.c: 1554: }
  3713  00842C  0101               	movlb	(_M+3) shr (0+8)
  3714  00842E  A303               	btfss	(_M+3)& (0+255),1,b
  3715  008430  D006               	goto	l449
  3716                           ;pomiar.c: 1557: {
  3717  008432  0101               	movlb	_DtZW shr (0+8)
  3718  008434  A39C               	btfss	_DtZW& (0+255),1,b
  3719  008436  D003               	goto	l449
  3720  008438  DDAD               	call	_GetPGD_PCO	;wreg free
  3721  00843A  CFE8 F1BD          	movff	wreg,_DtCO+7
  3722  00843E                     l449:
  3723                           ;pomiar.c: 1559: }
  3724  00843E  DD05               	call	_SetModPCO	;wreg free
  3725                           ;pomiar.c: 1561: RSDT1.outSETPmax=M.SETPmax;
  3726  008440  C122  F143         	movff	_M+34,_RSDT1+31
  3727                           ;pomiar.c: 1563: if(M.CONTSETP<=DtCO.PPCO)
  3728  008444  C120  FFE8         	movff	_M+32,wreg
  3729  008448  0101               	movlb	(_DtCO+4) shr (0+8)
  3730  00844A  5DBA               	subwf	(_DtCO+4)& (0+255),w,b
  3731  00844C  E318               	bnc	l451
  3732                           ;pomiar.c: 1564: {
  3733  00844E  C120  FFE8         	movff	_M+32,wreg
  3734  008452  C1BA  F000         	movff	_DtCO+4,btemp
  3735  008456  6A01               	clrf	btemp+1,c
  3736  008458  5E00               	subwf	btemp,f,c
  3737  00845A  0E00               	movlw	0
  3738  00845C  5A01               	subwfb	btemp+1,f,c
  3739  00845E  5001               	movf	btemp+1,w,c
  3740  008460  0A80               	xorlw	128
  3741  008462  0F80               	addlw	-128
  3742  008464  0E02               	movlw	2
  3743  008466  B4D8               	btfsc	status,2,c
  3744  008468  5C00               	subwf	btemp,w,c
  3745  00846A  E303               	bnc	l452
  3746                           ;pomiar.c: 1566: {
  3747  00846C  0100               	movlb	__Lparam shr (0+8)
  3748  00846E  6BEB               	clrf	?a_PomiarPCO^(__Lparam& (0+65280)),b
  3749                           ;pomiar.c: 1568: }
  3750  008470  D009               	goto	l454
  3751  008472                     l452:
  3752                           ;pomiar.c: 1569: else
  3753  008472  C120  FFE8         	movff	_M+32,wreg
  3754  008476  0101               	movlb	(_DtCO+4) shr (0+8)
  3755  008478  5DBA               	subwf	(_DtCO+4)& (0+255),w,b
  3756  00847A  0801               	sublw	1
  3757  00847C  D001               	goto	L14
  3758                           ;pomiar.c: 1572: }
  3759  00847E                     l451:
  3760                           ;pomiar.c: 1574: else
  3761  00847E  0E01               	movlw	1
  3762  008480                     L14:
  3763  008480  0100               	movlb	__Lparam shr (0+8)
  3764  008482  6FEB               	movwf	?a_PomiarPCO^(__Lparam& (0+65280)),b
  3765  008484                     l454:
  3766                           ;pomiar.c: 1577: }
  3767  008484  0100               	movlb	__Lparam shr (0+8)
  3768  008486  51EB               	movf	?a_PomiarPCO^(__Lparam& (0+65280)),w
  3769  008488  0101               	movlb	(_M+32) shr (0+8)
  3770  00848A  5D20               	subwf	(_M+32)& (0+255),w,b
  3771  00848C  EC54  F075         	call	_ReturnACfromNTC
  3772  008490  CFE8 F1C4          	movff	wreg,_DtCO+14
  3773                           ;pomiar.c: 1579: DtCO.MAD_CO=ReturnACfromNTC(M.C
      +                          ONTSETP-bnc-6);
  3774  008494  0100               	movlb	__Lparam shr (0+8)
  3775  008496  51EB               	movf	?a_PomiarPCO^(__Lparam& (0+65280)),w
  3776  008498  0101               	movlb	(_M+32) shr (0+8)
  3777  00849A  5D20               	subwf	(_M+32)& (0+255),w,b
  3778  00849C  0FFA               	addlw	-6
  3779  00849E  EC54  F075         	call	_ReturnACfromNTC
  3780  0084A2  CFE8 F1C3          	movff	wreg,_DtCO+13
  3781                           ;pomiar.c: 1580: }
  3782  0084A6  0012               	return	
  3783  0084A8                     __end_of_PomiarPCO:
  3784                           ;pomiar.c: 1584: void WritePCW(void)
  3785                           ;pomiar.c: 1585: {
  3786  0084A8                     _WritePCW:
  3787  000000                     
  3788                           ;pomiar.c: 1586: if(DtCW._newPCW&&RTdS(7)>=10)
  3789  0084A8  0101               	movlb	(_DtCW+1) shr (0+8)
  3790  0084AA  A1A8               	btfss	(_DtCW+1)& (0+255),0,b
  3791  0084AC  0012               	return	
  3792  0084AE  0E07               	movlw	7
  3793  0084B0  EC63  F073         	call	_RTdS
  3794  0084B4  6E00               	movwf	btemp,c
  3795  0084B6  0E0A               	movlw	10
  3796  0084B8  5C00               	subwf	btemp,w,c
  3797  0084BA  A0D8               	btfss	status,0,c
  3798  0084BC  0012               	return	
  3799                           ;pomiar.c: 1587: {
  3800  0084BE  0101               	movlb	(_DtCW+1) shr (0+8)
  3801  0084C0  91A8               	bcf	(_DtCW+1)& (0+255),0,b
  3802                           ;pomiar.c: 1589: StartRTdS(7);
  3803  0084C2  0E07               	movlw	7
  3804  0084C4  EC51  F073         	call	_StartRTdS
  3805                           ;pomiar.c: 1590: WriteEEPCW();
  3806  0084C8  EF4B  F04F         	goto	_WriteEEPCW	;wreg free
  3807                           ;pomiar.c: 1591: }
  3808  0084CC                     __end_of_WritePCW:
  3809                           ;pomiar.c: 1595: void SetModPCW(void)
  3810                           ;pomiar.c: 1596: {
  3811  0084CC                     _SetModPCW:
  3812  000000                     
  3813                           ;pomiar.c: 1597: if(M._AKTYWNE_KNF) DtCW.PPCW=60
      +                          ;
  3814  0084CC  0101               	movlb	(_M+3) shr (0+8)
  3815  0084CE  A503               	btfss	(_M+3)& (0+255),2,b
  3816  0084D0  D002               	goto	l458
  3817  0084D2  0E3C               	movlw	60
  3818  0084D4  D008               	goto	L15
  3819  0084D6                     l458:
  3820                           ;pomiar.c: 1598: else
  3821  0084D6  EE02  F037         	lfsr	0,_DtKNF+7
  3822  0084DA  50EF               	movf	indf0,w,c
  3823  0084DC  E107               	bnz	l460
  3824  0084DE  0101               	movlb	_M shr (0+8)
  3825  0084E0  A700               	btfss	_M& (0+255),3,b
  3826  0084E2  D004               	goto	l460
  3827  0084E4  0E46               	movlw	70
  3828  0084E6                     L15:
  3829  0084E6  CFE8 F1AB          	movff	wreg,_DtCW+4
  3830  0084EA  D002               	goto	l459
  3831  0084EC                     l460:
  3832                           ;pomiar.c: 1600: else DtCW.PPCW=DtCW.PCW;
  3833  0084EC  C1AA  F1AB         	movff	_DtCW+3,_DtCW+4
  3834  0084F0                     l459:
  3835                           ;pomiar.c: 1602: if(M._pob_DzCW)
  3836  0084F0  0101               	movlb	_M shr (0+8)
  3837  0084F2  AF00               	btfss	_M& (0+255),7,b
  3838  0084F4  D003               	goto	l462
  3839                           ;pomiar.c: 1603: {
  3840  0084F6  0E0A               	movlw	10
  3841  0084F8  CFE8 F1AB          	movff	wreg,_DtCW+4
  3842  0084FC                     l462:
  3843                           ;pomiar.c: 1605: }
  3844  0084FC  C1AB  F133         	movff	_DtCW+4,_RSDT1+15
  3845                           ;pomiar.c: 1607: }
  3846  008500  0012               	return	
  3847  008502                     __end_of_SetModPCW:
  3848                           ;pomiar.c: 1610: void PomiarPCW(void)
  3849                           ;pomiar.c: 1611: {
  3850  008502                     _PomiarPCW:
  3851  000000                     
  3852                           ;pomiar.c: 1612: static unsigned char pnst;
  3853  008502  D006               	goto	l465
  3854  008504                     l467:
  3855                           ;pomiar.c: 1619: case 2:
  3856                           ;pomiar.c: 1622: DtCW.maxPCW=60;
  3857                           ;pomiar.c: 1623: break;
  3858  008504                     l468:
  3859  008504  D00F               	goto	L43
  3860                           ;pomiar.c: 1624: }
  3861                           ;pomiar.c: 1626: {
  3862                           ;pomiar.c: 1628: DtCW.maxPCW=60;
  3863                           ;pomiar.c: 1629: break;
  3864  008506                     l469:
  3865                           ;pomiar.c: 1630: }
  3866                           ;pomiar.c: 1632: {
  3867  008506  0E23               	movlw	35
  3868  008508  CFE8 F1AC          	movff	wreg,_DtCW+5
  3869                           ;pomiar.c: 1634: DtCW.maxPCW=65;
  3870  00850C  0E41               	movlw	65
  3871  00850E  D00E               	goto	L17
  3872                           ;pomiar.c: 1641: break;
  3873  008510                     l465:
  3874  008510  C237  FFE8         	movff	_DtKNF+7,wreg
  3875  008514  0A00               	xorlw	0
  3876  008516  E0F7               	bz	l469
  3877  008518  0A01               	xorlw	1
  3878  00851A  E0F4               	bz	l467
  3879  00851C  0A03               	xorlw	3
  3880  00851E  E0F2               	bz	l467
  3881  008520  0A01               	xorlw	1
  3882  008522  E0F0               	bz	l468
  3883  008524                     L43:
  3884                           ;pomiar.c: 1635: break;
  3885                           ;pomiar.c: 1636: }
  3886                           ;pomiar.c: 1638: {
  3887  008524  0E1E               	movlw	30
  3888  008526  CFE8 F1AC          	movff	wreg,_DtCW+5
  3889                           ;pomiar.c: 1640: DtCW.maxPCW=60;
  3890  00852A  0E3C               	movlw	60
  3891  00852C                     L17:
  3892  00852C  CFE8 F1AD          	movff	wreg,_DtCW+6
  3893                           ;pomiar.c: 1644: RSDT1.outPCWmn=DtCW.minPCW;
  3894  008530  C1AC  F130         	movff	_DtCW+5,_RSDT1+12
  3895                           ;pomiar.c: 1645: RSDT1.outPCWmx=DtCW.maxPCW;
  3896  008534  C1AD  F131         	movff	_DtCW+6,_RSDT1+13
  3897                           ;pomiar.c: 1646: if(!GetBit2(RSDT1.inSTAT0,7)&&M
      +                          GSD._CON&&!M._PW_START&&!M._RS_START)
  3898  008538  0E07               	movlw	7
  3899  00853A  0100               	movlb	__Lparam shr (0+8)
  3900  00853C  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  3901  00853E  C16F  FFE8         	movff	_RSDT1+75,wreg
  3902  008542  ECC7  F076         	call	_GetBit2
  3903  008546  E227               	bc	l471
  3904  008548  0102               	movlb	_MGSD shr (0+8)
  3905  00854A  AD4C               	btfss	_MGSD& (0+255),6,b
  3906  00854C  D024               	goto	l471
  3907  00854E  0101               	movlb	(_M+4) shr (0+8)
  3908  008550  B904               	btfsc	(_M+4)& (0+255),4,b
  3909  008552  D021               	goto	l471
  3910  008554  0101               	movlb	(_M+4) shr (0+8)
  3911  008556  B704               	btfsc	(_M+4)& (0+255),3,b
  3912  008558  D01E               	goto	l471
  3913                           ;pomiar.c: 1647: {
  3914  00855A  C16E  FEA1         	movff	_RSDT1+74,F1688
  3915                           ;pomiar.c: 1650: if(pnst<DtCW.minPCW) pnst=DtCW.
      +                          minPCW;
  3916  00855E  C1AC  FFE8         	movff	_DtCW+5,wreg
  3917  008562  010E               	movlb	F1688 shr (0+8)
  3918  008564  61A1               	cpfslt	F1688& (0+255),b
  3919  008566  D002               	goto	l472
  3920  008568  C1AC  FEA1         	movff	_DtCW+5,F1688
  3921  00856C                     l472:
  3922                           ;pomiar.c: 1651: if(pnst>DtCW.maxPCW) pnst=DtCW.
      +                          maxPCW;
  3923  00856C  CEA1  FFE8         	movff	F1688,wreg
  3924  008570  0101               	movlb	(_DtCW+6) shr (0+8)
  3925  008572  61AD               	cpfslt	(_DtCW+6)& (0+255),b
  3926  008574  D002               	goto	l473
  3927  008576  C1AD  FEA1         	movff	_DtCW+6,F1688
  3928  00857A                     l473:
  3929                           ;pomiar.c: 1652: if(DtCW.PCW!=pnst)
  3930  00857A  C1AA  FFE8         	movff	_DtCW+3,wreg
  3931  00857E  010E               	movlb	F1688 shr (0+8)
  3932  008580  19A1               	xorwf	F1688& (0+255),w,b
  3933  008582  E007               	bz	l474
  3934                           ;pomiar.c: 1653: {
  3935  008584  CEA1  F1AA         	movff	F1688,_DtCW+3
  3936                           ;pomiar.c: 1655: DtCW._newPCW=1;
  3937  008588  0101               	movlb	(_DtCW+1) shr (0+8)
  3938  00858A  81A8               	bsf	(_DtCW+1)& (0+255),0,b
  3939                           ;pomiar.c: 1656: StartRTdS(7);
  3940  00858C  0E07               	movlw	7
  3941  00858E  EC51  F073         	call	_StartRTdS
  3942  008592                     l474:
  3943                           ;pomiar.c: 1657: }
  3944  008592  DF8A               	call	_WritePCW	;wreg free
  3945  008594  D012               	goto	l477
  3946                           ;pomiar.c: 1659: RSDT1.outPCW=DtCW.PCW;
  3947                           ;pomiar.c: 1660: }
  3948  008596                     l471:
  3949                           ;pomiar.c: 1661: else
  3950  008596  EC64  F04F         	call	_ReadEEPCW	;wreg free
  3951  00859A  CFE8 F1AA          	movff	wreg,_DtCW+3
  3952                           ;pomiar.c: 1664: if(pnst<DtCW.minPCW) pnst=DtCW.
      +                          minPCW;
  3953  00859E  C1AC  FFE8         	movff	_DtCW+5,wreg
  3954  0085A2  010E               	movlb	F1688 shr (0+8)
  3955  0085A4  61A1               	cpfslt	F1688& (0+255),b
  3956  0085A6  D002               	goto	l476
  3957  0085A8  C1AC  FEA1         	movff	_DtCW+5,F1688
  3958  0085AC                     l476:
  3959                           ;pomiar.c: 1665: if(pnst>DtCW.maxPCW) pnst=DtCW.
      +                          maxPCW;
  3960  0085AC  CEA1  FFE8         	movff	F1688,wreg
  3961  0085B0  0101               	movlb	(_DtCW+6) shr (0+8)
  3962  0085B2  61AD               	cpfslt	(_DtCW+6)& (0+255),b
  3963  0085B4  D002               	goto	l477
  3964  0085B6  C1AD  FEA1         	movff	_DtCW+6,F1688
  3965  0085BA                     l477:
  3966                           ;pomiar.c: 1666: RSDT1.outPCW=DtCW.PCW;
  3967  0085BA  C1AA  F12D         	movff	_DtCW+3,_RSDT1+9
  3968                           ;pomiar.c: 1667: }
  3969  0085BE  DF86               	call	_SetModPCW	;wreg free
  3970                           ;pomiar.c: 1670: DtCW.DAD_CW=ReturnACfromNTC(DtC
      +                          W.PPCW-(2-1));
  3971  0085C0  0101               	movlb	(_DtCW+4) shr (0+8)
  3972  0085C2  05AB               	decf	(_DtCW+4)& (0+255),w,b
  3973  0085C4  EC54  F075         	call	_ReturnACfromNTC
  3974  0085C8  CFE8 F1B5          	movff	wreg,_DtCW+14
  3975                           ;pomiar.c: 1671: DtCW.MAD_CW=ReturnACfromNTC(DtC
      +                          W.PPCW-(2-1)-9);
  3976  0085CC  C1AB  FFE8         	movff	_DtCW+4,wreg
  3977  0085D0  0FF6               	addlw	-10
  3978  0085D2  EC54  F075         	call	_ReturnACfromNTC
  3979  0085D6  CFE8 F1B4          	movff	wreg,_DtCW+13
  3980                           ;pomiar.c: 1672: }
  3981  0085DA  0012               	return	
  3982  0085DC                     __end_of_PomiarPCW:
  3983                           ;pomiar.c: 1676: void WritePFN(void)
  3984                           ;pomiar.c: 1677: {
  3985  0085DC                     _WritePFN:
  3986  000000                     
  3987                           ;pomiar.c: 1678: if(PFN._newPFN&&RTdS(8)>=10)
  3988  0085DC  0101               	movlb	_PFN shr (0+8)
  3989  0085DE  A1A0               	btfss	_PFN& (0+255),0,b
  3990  0085E0  0012               	return	
  3991  0085E2  0E08               	movlw	8
  3992  0085E4  EC63  F073         	call	_RTdS
  3993  0085E8  6E00               	movwf	btemp,c
  3994  0085EA  0E0A               	movlw	10
  3995  0085EC  5C00               	subwf	btemp,w,c
  3996  0085EE  A0D8               	btfss	status,0,c
  3997  0085F0  0012               	return	
  3998                           ;pomiar.c: 1679: {
  3999  0085F2  0101               	movlb	_PFN shr (0+8)
  4000  0085F4  91A0               	bcf	_PFN& (0+255),0,b
  4001                           ;pomiar.c: 1681: StartRTdS(8);
  4002  0085F6  0E08               	movlw	8
  4003  0085F8  EC51  F073         	call	_StartRTdS
  4004                           ;pomiar.c: 1682: WriteEEPFN();
  4005  0085FC  EF96  F04F         	goto	_WriteEEPFN	;wreg free
  4006                           ;pomiar.c: 1683: }
  4007  008600                     __end_of_WritePFN:
  4008                           ;pomiar.c: 1687: void PomiarPFN(void)
  4009                           ;pomiar.c: 1688: {
  4010  008600                     _PomiarPFN:
  4011  000000                     
  4012                           ;pomiar.c: 1689: static unsigned char pnst;
  4013  008600  0E07               	movlw	7
  4014  008602  0100               	movlb	__Lparam shr (0+8)
  4015  008604  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  4016  008606  C16F  FFE8         	movff	_RSDT1+75,wreg
  4017  00860A  ECC7  F076         	call	_GetBit2
  4018  00860E  E301 D0E7          	bc	l481
  4019  008612  0102               	movlb	_MGSD shr (0+8)
  4020  008614  AD4C               	btfss	_MGSD& (0+255),6,b
  4021  008616  D0E4               	goto	l481
  4022  008618  0101               	movlb	(_M+4) shr (0+8)
  4023  00861A  B904               	btfsc	(_M+4)& (0+255),4,b
  4024  00861C  D0E1               	goto	l481
  4025  00861E  0101               	movlb	(_M+4) shr (0+8)
  4026  008620  B704               	btfsc	(_M+4)& (0+255),3,b
  4027  008622  D0DE               	goto	l481
  4028                           ;pomiar.c: 1692: {
  4029  008624  0E05               	movlw	5
  4030  008626  0100               	movlb	__Lparam shr (0+8)
  4031  008628  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  4032  00862A  C16F  FFE8         	movff	_RSDT1+75,wreg
  4033  00862E  ECC7  F076         	call	_GetBit2
  4034  008632  E328               	bnc	l482
  4035                           ;pomiar.c: 1694: {
  4036  008634  0101               	movlb	_PFN shr (0+8)
  4037  008636  99A0               	bcf	_PFN& (0+255),4,b
  4038                           ;pomiar.c: 1696: PFN._lato=0;
  4039  008638  97A0               	bcf	_PFN& (0+255),3,b
  4040                           ;pomiar.c: 1697: PFN._off=1;
  4041  00863A  85A0               	bsf	_PFN& (0+255),2,b
  4042                           ;pomiar.c: 1698: PFN._csn=0;
  4043  00863C  93A0               	bcf	_PFN& (0+255),1,b
  4044                           ;pomiar.c: 1699: PFN.poz=1;
  4045  00863E  0E01               	movlw	1
  4046  008640  6FA1               	movwf	(_PFN+1)& (0+255),b
  4047  008642  6BA2               	clrf	(_PFN+2)& (0+255),b
  4048                           ;pomiar.c: 1700: BitSet2(&RSDT1.outSTAT2,4,0);
  4049  008644  0100               	movlb	__Lparam shr (0+8)
  4050  008646  0E38               	movlw	low (_RSDT1+20)
  4051  008648  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4052  00864A  0E01               	movlw	high (_RSDT1+20)
  4053  00864C  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4054  00864E  0E04               	movlw	4
  4055  008650  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4056  008652  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4057  008654  ECFA  F076         	call	_BitSet2	;wreg free
  4058                           ;pomiar.c: 1701: BitSet2(&RSDT1.outSTAT2,5,0);
  4059  008658  0100               	movlb	__Lparam shr (0+8)
  4060  00865A  0E38               	movlw	low (_RSDT1+20)
  4061  00865C  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4062  00865E  0E01               	movlw	high (_RSDT1+20)
  4063  008660  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4064  008662  0E05               	movlw	5
  4065  008664  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4066  008666  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4067  008668  ECFA  F076         	call	_BitSet2	;wreg free
  4068                           ;pomiar.c: 1702: BitSet2(&RSDT1.outSTAT2,6,1);
  4069  00866C  0100               	movlb	__Lparam shr (0+8)
  4070  00866E  0E38               	movlw	low (_RSDT1+20)
  4071  008670  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4072  008672  0E01               	movlw	high (_RSDT1+20)
  4073  008674  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4074  008676  0E06               	movlw	6
  4075  008678  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4076  00867A  0E01               	movlw	1
  4077  00867C  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4078  00867E  ECFA  F076         	call	_BitSet2	;wreg free
  4079                           ;pomiar.c: 1703: }
  4080  008682  D086               	goto	l483
  4081  008684                     l482:
  4082                           ;pomiar.c: 1704: else
  4083  008684  0E03               	movlw	3
  4084  008686  0100               	movlb	__Lparam shr (0+8)
  4085  008688  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  4086  00868A  C16F  FFE8         	movff	_RSDT1+75,wreg
  4087  00868E  ECC7  F076         	call	_GetBit2
  4088  008692  E328               	bnc	l484
  4089                           ;pomiar.c: 1706: {
  4090  008694  0101               	movlb	_PFN shr (0+8)
  4091  008696  89A0               	bsf	_PFN& (0+255),4,b
  4092                           ;pomiar.c: 1708: PFN._lato=0;
  4093  008698  97A0               	bcf	_PFN& (0+255),3,b
  4094                           ;pomiar.c: 1709: PFN._off=0;
  4095  00869A  95A0               	bcf	_PFN& (0+255),2,b
  4096                           ;pomiar.c: 1710: PFN._csn=0;
  4097  00869C  93A0               	bcf	_PFN& (0+255),1,b
  4098                           ;pomiar.c: 1711: PFN.poz=3;
  4099  00869E  0E03               	movlw	3
  4100  0086A0  6FA1               	movwf	(_PFN+1)& (0+255),b
  4101  0086A2  6BA2               	clrf	(_PFN+2)& (0+255),b
  4102                           ;pomiar.c: 1712: BitSet2(&RSDT1.outSTAT2,4,1);
  4103  0086A4  0100               	movlb	__Lparam shr (0+8)
  4104  0086A6  0E38               	movlw	low (_RSDT1+20)
  4105  0086A8  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4106  0086AA  0E01               	movlw	high (_RSDT1+20)
  4107  0086AC  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4108  0086AE  0E04               	movlw	4
  4109  0086B0  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4110  0086B2  0E01               	movlw	1
  4111  0086B4  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4112  0086B6  ECFA  F076         	call	_BitSet2	;wreg free
  4113                           ;pomiar.c: 1713: BitSet2(&RSDT1.outSTAT2,5,0);
  4114  0086BA  0100               	movlb	__Lparam shr (0+8)
  4115  0086BC  0E38               	movlw	low (_RSDT1+20)
  4116  0086BE  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4117  0086C0  0E01               	movlw	high (_RSDT1+20)
  4118  0086C2  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4119  0086C4  0E05               	movlw	5
  4120  0086C6  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4121  0086C8  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4122  0086CA  ECFA  F076         	call	_BitSet2	;wreg free
  4123                           ;pomiar.c: 1714: BitSet2(&RSDT1.outSTAT2,6,0);
  4124  0086CE  0100               	movlb	__Lparam shr (0+8)
  4125  0086D0  0E38               	movlw	low (_RSDT1+20)
  4126  0086D2  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4127  0086D4  0E01               	movlw	high (_RSDT1+20)
  4128  0086D6  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4129  0086D8  0E06               	movlw	6
  4130  0086DA  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4131  0086DC  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4132  0086DE  ECFA  F076         	call	_BitSet2	;wreg free
  4133                           ;pomiar.c: 1715: }
  4134  0086E2  D056               	goto	l483
  4135  0086E4                     l484:
  4136                           ;pomiar.c: 1716: else
  4137  0086E4  0E04               	movlw	4
  4138  0086E6  0100               	movlb	__Lparam shr (0+8)
  4139  0086E8  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  4140  0086EA  C16F  FFE8         	movff	_RSDT1+75,wreg
  4141  0086EE  ECC7  F076         	call	_GetBit2
  4142                           ;pomiar.c: 1718: {
  4143  0086F2  0101               	movlb	_PFN shr (0+8)
  4144  0086F4  E327               	bnc	L67
  4145  0086F6  99A0               	bcf	_PFN& (0+255),4,b
  4146                           ;pomiar.c: 1720: PFN._lato=1;
  4147  0086F8  87A0               	bsf	_PFN& (0+255),3,b
  4148                           ;pomiar.c: 1721: PFN._off=0;
  4149  0086FA  95A0               	bcf	_PFN& (0+255),2,b
  4150                           ;pomiar.c: 1722: PFN._csn=0;
  4151  0086FC  93A0               	bcf	_PFN& (0+255),1,b
  4152                           ;pomiar.c: 1723: PFN.poz=2;
  4153  0086FE  0E02               	movlw	2
  4154  008700  6FA1               	movwf	(_PFN+1)& (0+255),b
  4155  008702  6BA2               	clrf	(_PFN+2)& (0+255),b
  4156                           ;pomiar.c: 1724: BitSet2(&RSDT1.outSTAT2,4,0);
  4157  008704  0100               	movlb	__Lparam shr (0+8)
  4158  008706  0E38               	movlw	low (_RSDT1+20)
  4159  008708  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4160  00870A  0E01               	movlw	high (_RSDT1+20)
  4161  00870C  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4162  00870E  0E04               	movlw	4
  4163  008710  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4164  008712  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4165  008714  ECFA  F076         	call	_BitSet2	;wreg free
  4166                           ;pomiar.c: 1725: BitSet2(&RSDT1.outSTAT2,5,1);
  4167  008718  0100               	movlb	__Lparam shr (0+8)
  4168  00871A  0E38               	movlw	low (_RSDT1+20)
  4169  00871C  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4170  00871E  0E01               	movlw	high (_RSDT1+20)
  4171  008720  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4172  008722  0E05               	movlw	5
  4173  008724  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4174  008726  0E01               	movlw	1
  4175  008728  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4176  00872A  ECFA  F076         	call	_BitSet2	;wreg free
  4177                           ;pomiar.c: 1726: BitSet2(&RSDT1.outSTAT2,6,0);
  4178  00872E  0100               	movlb	__Lparam shr (0+8)
  4179  008730  0E38               	movlw	low (_RSDT1+20)
  4180  008732  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4181  008734  0E01               	movlw	high (_RSDT1+20)
  4182  008736  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4183  008738  0E06               	movlw	6
  4184  00873A  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4185  00873C  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4186  00873E  ECFA  F076         	call	_BitSet2	;wreg free
  4187                           ;pomiar.c: 1727: }
  4188  008742  D026               	goto	l483
  4189                           ;pomiar.c: 1728: else
  4190  008744                     L67:
  4191  008744  89A0               	bsf	_PFN& (0+255),4,b
  4192                           ;pomiar.c: 1731: PFN._lato=0;
  4193  008746  97A0               	bcf	_PFN& (0+255),3,b
  4194                           ;pomiar.c: 1732: PFN._off=0;
  4195  008748  95A0               	bcf	_PFN& (0+255),2,b
  4196                           ;pomiar.c: 1733: PFN._csn=0;
  4197  00874A  93A0               	bcf	_PFN& (0+255),1,b
  4198                           ;pomiar.c: 1734: PFN.poz=3;
  4199  00874C  0E03               	movlw	3
  4200  00874E  6FA1               	movwf	(_PFN+1)& (0+255),b
  4201  008750  6BA2               	clrf	(_PFN+2)& (0+255),b
  4202                           ;pomiar.c: 1735: BitSet2(&RSDT1.outSTAT2,4,1);
  4203  008752  0100               	movlb	__Lparam shr (0+8)
  4204  008754  0E38               	movlw	low (_RSDT1+20)
  4205  008756  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4206  008758  0E01               	movlw	high (_RSDT1+20)
  4207  00875A  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4208  00875C  0E04               	movlw	4
  4209  00875E  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4210  008760  0E01               	movlw	1
  4211  008762  6FF1               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4212  008764  ECFA  F076         	call	_BitSet2	;wreg free
  4213                           ;pomiar.c: 1736: BitSet2(&RSDT1.outSTAT2,5,0);
  4214  008768  0100               	movlb	__Lparam shr (0+8)
  4215  00876A  0E38               	movlw	low (_RSDT1+20)
  4216  00876C  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4217  00876E  0E01               	movlw	high (_RSDT1+20)
  4218  008770  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4219  008772  0E05               	movlw	5
  4220  008774  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4221  008776  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4222  008778  ECFA  F076         	call	_BitSet2	;wreg free
  4223                           ;pomiar.c: 1737: BitSet2(&RSDT1.outSTAT2,6,0);
  4224  00877C  0100               	movlb	__Lparam shr (0+8)
  4225  00877E  0E38               	movlw	low (_RSDT1+20)
  4226  008780  6FEE               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  4227  008782  0E01               	movlw	high (_RSDT1+20)
  4228  008784  6FEF               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  4229  008786  0E06               	movlw	6
  4230  008788  6FF0               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  4231  00878A  6BF1               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  4232  00878C  ECFA  F076         	call	_BitSet2	;wreg free
  4233  008790                     l483:
  4234                           ;pomiar.c: 1738: }
  4235  008790  0101               	movlb	(_M+3) shr (0+8)
  4236  008792  B503               	btfsc	(_M+3)& (0+255),2,b
  4237  008794  D018               	goto	l488
  4238                           ;pomiar.c: 1740: {
  4239  008796  ECBD  F04F         	call	_ReadEEPFN	;wreg free
  4240  00879A  CFE8 FEA2          	movff	wreg,F1695
  4241                           ;pomiar.c: 1742: if(PFN.poz!=pnst)
  4242  00879E  CEA2  F000         	movff	F1695,btemp
  4243  0087A2  6A01               	clrf	btemp+1,c
  4244  0087A4  C1A2  FFE8         	movff	_PFN+2,wreg
  4245  0087A8  1801               	xorwf	btemp+1,w,c
  4246  0087AA  E103               	bnz	u3325
  4247  0087AC  C1A1  FFE8         	movff	_PFN+1,wreg
  4248  0087B0  1800               	xorwf	btemp,w,c
  4249  0087B2                     u3325:
  4250  0087B2  E008               	bz	l489
  4251                           ;pomiar.c: 1743: {
  4252  0087B4  0101               	movlb	_PFN shr (0+8)
  4253  0087B6  B1A0               	btfsc	_PFN& (0+255),0,b
  4254  0087B8  D003               	goto	l490
  4255  0087BA  0E08               	movlw	8
  4256  0087BC  EC51  F073         	call	_StartRTdS
  4257  0087C0                     l490:
  4258                           ;pomiar.c: 1745: PFN._newPFN=1;
  4259  0087C0  0101               	movlb	_PFN shr (0+8)
  4260  0087C2  81A0               	bsf	_PFN& (0+255),0,b
  4261  0087C4                     l489:
  4262                           ;pomiar.c: 1746: }
  4263  0087C4  DF0B               	call	_WritePFN	;wreg free
  4264  0087C6                     l488:
  4265                           ;pomiar.c: 1748: }
  4266  0087C6  0E06               	movlw	6
  4267  0087C8  0100               	movlb	__Lparam shr (0+8)
  4268  0087CA  6FF0               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  4269  0087CC  C16F  FFE8         	movff	_RSDT1+75,wreg
  4270  0087D0  ECC7  F076         	call	_GetBit2
  4271  0087D4  0101               	movlb	_PFN shr (0+8)
  4272  0087D6  E302               	bnc	L68
  4273  0087D8  8BA0               	bsf	_PFN& (0+255),5,b
  4274  0087DA  D00B               	goto	l493
  4275                           ;pomiar.c: 1758: else PFN._res=0;
  4276  0087DC                     L68:
  4277  0087DC  9BA0               	bcf	_PFN& (0+255),5,b
  4278                           ;pomiar.c: 1759: }
  4279  0087DE  D009               	goto	l493
  4280  0087E0                     l481:
  4281                           ;pomiar.c: 1760: else
  4282  0087E0  ECBD  F04F         	call	_ReadEEPFN	;wreg free
  4283  0087E4  6E00               	movwf	btemp,c
  4284  0087E6  0101               	movlb	(_PFN+1) shr (0+8)
  4285  0087E8  C000  F1A1         	movff	btemp,_PFN+1
  4286  0087EC  6BA2               	clrf	(_PFN+2)& (0+255),b
  4287                           ;pomiar.c: 1763: SetPFN();
  4288  0087EE  ECBA  F04E         	call	_SetPFN	;wreg free
  4289  0087F2                     l493:
  4290                           ;pomiar.c: 1764: }
  4291  0087F2  ECC9  F04F         	call	_ReadEEPopPFN	;wreg free
  4292  0087F6  6E00               	movwf	btemp,c
  4293  0087F8  0101               	movlb	(_PFN+3) shr (0+8)
  4294  0087FA  C000  F1A3         	movff	btemp,_PFN+3
  4295  0087FE  6BA4               	clrf	(_PFN+4)& (0+255),b
  4296                           ;pomiar.c: 1766: }
  4297  008800  0012               	return	
  4298  008802                     __end_of_PomiarPFN:
  4299                           ;pomiar.c: 1769: void PomiarCS(void)
  4300                           ;pomiar.c: 1770: {
  4301  008802                     _PomiarCS:
  4302  000000                     
  4303                           ;pomiar.c: 1771: static unsigned char pcs;
  4304  008802  0E03               	movlw	3
  4305  008804  ECEB  F074         	call	_ReadAC
  4306  008808  0100               	movlb	__Lparam shr (0+8)
  4307  00880A  6FEB               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  4308                           ;pomiar.c: 1774: if((!DtKNF.tpcs&&(dac<16||dac>2
      +                          35))||(DtKNF.tpcs&&(dac<16||dac>235)))
  4309  00880C  EE02  F03C         	lfsr	0,_DtKNF+12
  4310  008810  50EF               	movf	indf0,w,c
  4311  008812  E108               	bnz	u3381
  4312  008814  0E10               	movlw	16
  4313  008816  61EB               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  4314  008818  D001               	goto	u3361
  4315  00881A  D010               	goto	u3450
  4316  00881C                     u3361:
  4317  00881C  0EEB               	movlw	-21
  4318  00881E  65EB               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  4319  008820  D001               	goto	u3381
  4320  008822  D00C               	goto	u3450
  4321  008824                     u3381:
  4322  008824  EE02  F03C         	lfsr	0,_DtKNF+12
  4323  008828  50EF               	movf	indf0,w,c
  4324  00882A  E022               	bz	l495
  4325  00882C  0E10               	movlw	16
  4326  00882E  0100               	movlb	__Lparam shr (0+8)
  4327  008830  61EB               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  4328  008832  D001               	goto	u3411
  4329  008834  D003               	goto	u3450
  4330  008836                     u3411:
  4331  008836  0EEB               	movlw	-21
  4332  008838  65EB               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  4333  00883A  D01A               	goto	l495
  4334  00883C                     u3450:
  4335                           ;pomiar.c: 1775: {
  4336  00883C  EE02  F03A         	lfsr	0,_DtKNF+10
  4337  008840  50EF               	movf	indf0,w,c
  4338                           ;pomiar.c: 1777: {
  4339  008842  0101               	movlb	_DtCS shr (0+8)
  4340  008844  E10B               	bnz	L69
  4341  008846  9798               	bcf	_DtCS& (0+255),3,b
  4342                           ;pomiar.c: 1779: DtCS._no=0;
  4343  008848  9598               	bcf	_DtCS& (0+255),2,b
  4344                           ;pomiar.c: 1780: DtCS._lo=0;
  4345  00884A  9398               	bcf	_DtCS& (0+255),1,b
  4346                           ;pomiar.c: 1781: DtCS._hi=0;
  4347  00884C  9198               	bcf	_DtCS& (0+255),0,b
  4348                           ;pomiar.c: 1782: DtCS._work=1;
  4349  00884E  8998               	bsf	_DtCS& (0+255),4,b
  4350                           ;pomiar.c: 1783: DtCS._no_mont=1;
  4351  008850  0E01               	movlw	1
  4352  008852  6F99               	movwf	(_DtCS+1)& (0+255),b
  4353  008854  0E00               	movlw	0
  4354  008856  6B9A               	clrf	(_DtCS+2)& (0+255),b
  4355                           ;pomiar.c: 1784: DtCS.CS=0;
  4356  008858  6B9B               	clrf	(_DtCS+3)& (0+255),b
  4357                           ;pomiar.c: 1785: }
  4358  00885A  0012               	return	
  4359                           ;pomiar.c: 1786: else
  4360  00885C                     L69:
  4361  00885C  8798               	bsf	_DtCS& (0+255),3,b
  4362                           ;pomiar.c: 1789: DtCS._no=0;
  4363  00885E  9598               	bcf	_DtCS& (0+255),2,b
  4364                           ;pomiar.c: 1790: DtCS._lo=0;
  4365  008860  9398               	bcf	_DtCS& (0+255),1,b
  4366                           ;pomiar.c: 1791: DtCS._hi=0;
  4367  008862  9198               	bcf	_DtCS& (0+255),0,b
  4368                           ;pomiar.c: 1792: DtCS._work=0;
  4369  008864  9998               	bcf	_DtCS& (0+255),4,b
  4370                           ;pomiar.c: 1793: DtCS._no_mont=0;
  4371  008866  EE01  F099         	lfsr	0,_DtCS+1
  4372  00886A  6AEE               	clrf	postinc0,c
  4373  00886C  6AEE               	clrf	postinc0,c
  4374                           ;pomiar.c: 1794: }
  4375  00886E  0012               	return	
  4376  008870                     l495:
  4377                           ;pomiar.c: 1796: else
  4378  008870  0101               	movlb	_DtCS shr (0+8)
  4379  008872  9798               	bcf	_DtCS& (0+255),3,b
  4380                           ;pomiar.c: 1799: DtCS._no_mont=0;
  4381  008874  EE01  F099         	lfsr	0,_DtCS+1
  4382  008878  6AEE               	clrf	postinc0,c
  4383  00887A  6AEE               	clrf	postinc0,c
  4384                           ;pomiar.c: 1800: if(!DtKNF.tpcs)
  4385  00887C  EE02  F03C         	lfsr	0,_DtKNF+12
  4386  008880  50EF               	movf	indf0,w,c
  4387  008882  E121               	bnz	l499
  4388                           ;pomiar.c: 1801: {
  4389  008884  0E1E               	movlw	30
  4390  008886  0100               	movlb	__Lparam shr (0+8)
  4391  008888  61EB               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  4392  00888A  D001               	goto	l500
  4393  00888C  6FEB               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  4394  00888E                     l500:
  4395                           ;pomiar.c: 1803: if(dac>210) dac=210;
  4396  00888E  0ED2               	movlw	-46
  4397  008890  0100               	movlb	__Lparam shr (0+8)
  4398  008892  65EB               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  4399  008894  D002               	goto	l501
  4400  008896  0ED2               	movlw	210
  4401  008898  6FEB               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  4402  00889A                     l501:
  4403                           ;pomiar.c: 1804: cs=((dac-30)*10)/(((210-30)*10)
      +                          /40);
  4404  00889A  0E0A               	movlw	10
  4405  00889C  6E02               	movwf	btemp+2,c
  4406  00889E  6A03               	clrf	btemp+3,c
  4407  0088A0  0100               	movlb	__Lparam shr (0+8)
  4408  0088A2  0EE2               	movlw	226
  4409  0088A4  25EB               	addwf	?a_PomiarCS^(__Lparam& (0+65280)),w
  4410  0088A6  6E00               	movwf	btemp,c
  4411  0088A8  6A01               	clrf	btemp+1,c
  4412  0088AA  0EFF               	movlw	255
  4413  0088AC  2201               	addwfc	btemp+1,f,c
  4414  0088AE  EC92  F078         	call	awmul
  4415  0088B2  C004  F000         	movff	btemp+4,btemp
  4416  0088B6  C005  F001         	movff	btemp+5,btemp+1
  4417  0088BA  0E2D               	movlw	45
  4418  0088BC  6E02               	movwf	btemp+2,c
  4419  0088BE  6A03               	clrf	btemp+3,c
  4420  0088C0  EC49  F078         	call	awdiv
  4421  0088C4  D020               	goto	L47
  4422                           ;pomiar.c: 1805: if(cs<40)
  4423                           ;pomiar.c: 1806: if((cs-pcs>0)&&(cs-pcs)<2) cs=p
      +                          cs;
  4424                           ;pomiar.c: 1807: if(cs>40) cs=40;
  4425                           ;pomiar.c: 1808: }
  4426  0088C6                     l499:
  4427                           ;pomiar.c: 1809: else
  4428  0088C6  0E23               	movlw	35
  4429  0088C8  0100               	movlb	__Lparam shr (0+8)
  4430  0088CA  61EB               	cpfslt	?a_PomiarCS^(__Lparam& (0+65280)),b
  4431  0088CC  D001               	goto	l506
  4432  0088CE  6FEB               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  4433  0088D0                     l506:
  4434                           ;pomiar.c: 1812: if(dac>190) dac=190;
  4435  0088D0  0EBE               	movlw	-66
  4436  0088D2  0100               	movlb	__Lparam shr (0+8)
  4437  0088D4  65EB               	cpfsgt	?a_PomiarCS^(__Lparam& (0+65280)),b
  4438  0088D6  D002               	goto	l507
  4439  0088D8  0EBE               	movlw	190
  4440  0088DA  6FEB               	movwf	?a_PomiarCS^(__Lparam& (0+65280)),b
  4441  0088DC                     l507:
  4442                           ;pomiar.c: 1813: cs=((dac-35)*10)/(((190-35)*10)
      +                          /40);
  4443  0088DC  0E0A               	movlw	10
  4444  0088DE  6E02               	movwf	btemp+2,c
  4445  0088E0  6A03               	clrf	btemp+3,c
  4446  0088E2  0100               	movlb	__Lparam shr (0+8)
  4447  0088E4  0EDD               	movlw	221
  4448  0088E6  25EB               	addwf	?a_PomiarCS^(__Lparam& (0+65280)),w
  4449  0088E8  6E00               	movwf	btemp,c
  4450  0088EA  6A01               	clrf	btemp+1,c
  4451  0088EC  0EFF               	movlw	255
  4452  0088EE  2201               	addwfc	btemp+1,f,c
  4453  0088F0  EC92  F078         	call	awmul
  4454  0088F4  C004  F000         	movff	btemp+4,btemp
  4455  0088F8  C005  F001         	movff	btemp+5,btemp+1
  4456  0088FC  0E26               	movlw	38
  4457  0088FE  6E02               	movwf	btemp+2,c
  4458  008900  6A03               	clrf	btemp+3,c
  4459  008902  EC49  F078         	call	awdiv
  4460  008906                     L47:
  4461  008906  5004               	movf	btemp+4,w,c
  4462  008908  6ED9               	movwf	fsr2l,c
  4463                           ;pomiar.c: 1814: if(cs<40)
  4464  00890A  0E28               	movlw	40
  4465  00890C  60D9               	cpfslt	fsr2l,c
  4466  00890E  D020               	goto	l508
  4467                           ;pomiar.c: 1815: if((cs-pcs>0)&&(cs-pcs)<2) cs=p
      +                          cs;
  4468  008910  CEA3  FFE8         	movff	F1698,wreg
  4469  008914  CFD9 F000          	movff	fsr2l,btemp
  4470  008918  6A01               	clrf	btemp+1,c
  4471  00891A  5E00               	subwf	btemp,f,c
  4472  00891C  0E00               	movlw	0
  4473  00891E  5A01               	subwfb	btemp+1,f,c
  4474  008920  5001               	movf	btemp+1,w,c
  4475  008922  0A80               	xorlw	128
  4476  008924  0F80               	addlw	-128
  4477  008926  0E01               	movlw	1
  4478  008928  B4D8               	btfsc	status,2,c
  4479  00892A  5C00               	subwf	btemp,w,c
  4480  00892C  E311               	bnc	l508
  4481  00892E  CEA3  FFE8         	movff	F1698,wreg
  4482  008932  CFD9 F000          	movff	fsr2l,btemp
  4483  008936  6A01               	clrf	btemp+1,c
  4484  008938  5E00               	subwf	btemp,f,c
  4485  00893A  0E00               	movlw	0
  4486  00893C  5A01               	subwfb	btemp+1,f,c
  4487  00893E  5001               	movf	btemp+1,w,c
  4488  008940  0A80               	xorlw	128
  4489  008942  0F80               	addlw	-128
  4490  008944  0E02               	movlw	2
  4491  008946  B4D8               	btfsc	status,2,c
  4492  008948  5C00               	subwf	btemp,w,c
  4493  00894A  A0D8               	btfss	status,0,c
  4494  00894C  CEA3  FFD9         	movff	F1698,fsr2l
  4495  008950                     l508:
  4496                           ;pomiar.c: 1816: if(cs>40) cs=40;
  4497  008950  0E28               	movlw	40
  4498  008952  64D9               	cpfsgt	fsr2l,c
  4499  008954  D001               	goto	l505
  4500  008956  6ED9               	movwf	fsr2l,c
  4501  008958                     l505:
  4502                           ;pomiar.c: 1817: }
  4503  008958  CFD9 FEA3          	movff	fsr2l,F1698
  4504                           ;pomiar.c: 1819: DtCS.CS=cs;
  4505  00895C  CFD9 F19B          	movff	fsr2l,_DtCS+3
  4506                           ;pomiar.c: 1820: RSDT1.outCS=DtCS.CS;
  4507  008960  C19B  F12B         	movff	_DtCS+3,_RSDT1+7
  4508                           ;pomiar.c: 1821: if(DtKNF.robg==0)
  4509  008964  EE02  F03A         	lfsr	0,_DtKNF+10
  4510  008968  50EF               	movf	indf0,w,c
  4511  00896A  E10D               	bnz	l511
  4512                           ;pomiar.c: 1822: {
  4513  00896C  0101               	movlb	_DtCS shr (0+8)
  4514  00896E  9598               	bcf	_DtCS& (0+255),2,b
  4515                           ;pomiar.c: 1825: DtCS._lo=0;
  4516  008970  9398               	bcf	_DtCS& (0+255),1,b
  4517                           ;pomiar.c: 1826: if(DtCS.CS<=27) DtCS._work=1;
  4518  008972  0E1C               	movlw	28
  4519  008974  619B               	cpfslt	(_DtCS+3)& (0+255),b
  4520  008976  D002               	goto	l512
  4521  008978                     L18:
  4522  008978  8998               	bsf	_DtCS& (0+255),4,b
  4523  00897A  D02B               	goto	l515
  4524  00897C                     l512:
  4525                           ;pomiar.c: 1827: else
  4526  00897C  0E1C               	movlw	28
  4527  00897E  0101               	movlb	(_DtCS+3) shr (0+8)
  4528  008980  659B               	cpfsgt	(_DtCS+3)& (0+255),b
  4529  008982  D027               	goto	l515
  4530  008984  D025               	goto	L39
  4531                           ;pomiar.c: 1829: }
  4532  008986                     l511:
  4533                           ;pomiar.c: 1830: else
  4534  008986  0E03               	movlw	3
  4535  008988  0101               	movlb	(_DtCS+3) shr (0+8)
  4536  00898A  619B               	cpfslt	(_DtCS+3)& (0+255),b
  4537  00898C  D002               	goto	l516
  4538  00898E  8598               	bsf	_DtCS& (0+255),2,b
  4539  008990  D002               	goto	l517
  4540  008992                     l516:
  4541                           ;pomiar.c: 1834: else DtCS._no=0;
  4542  008992  0101               	movlb	_DtCS shr (0+8)
  4543  008994  9598               	bcf	_DtCS& (0+255),2,b
  4544  008996                     l517:
  4545                           ;pomiar.c: 1835: if(!DtCS._no&&DtCS.CS<5) DtCS._
      +                          lo=1;
  4546  008996  0101               	movlb	_DtCS shr (0+8)
  4547  008998  B598               	btfsc	_DtCS& (0+255),2,b
  4548  00899A  D006               	goto	l518
  4549  00899C  0E05               	movlw	5
  4550  00899E  619B               	cpfslt	(_DtCS+3)& (0+255),b
  4551  0089A0  D003               	goto	l518
  4552  0089A2  0101               	movlb	_DtCS shr (0+8)
  4553  0089A4  8398               	bsf	_DtCS& (0+255),1,b
  4554  0089A6  D002               	goto	l519
  4555  0089A8                     l518:
  4556                           ;pomiar.c: 1836: else DtCS._lo=0;
  4557  0089A8  0101               	movlb	_DtCS shr (0+8)
  4558  0089AA  9398               	bcf	_DtCS& (0+255),1,b
  4559  0089AC                     l519:
  4560                           ;pomiar.c: 1837: if((DtCS.CS>=6)&&(DtCS.CS<=27))
      +                           DtCS._work=1;
  4561  0089AC  0E05               	movlw	5
  4562  0089AE  0101               	movlb	(_DtCS+3) shr (0+8)
  4563  0089B0  659B               	cpfsgt	(_DtCS+3)& (0+255),b
  4564  0089B2  D005               	goto	l520
  4565  0089B4  0E1C               	movlw	28
  4566  0089B6  619B               	cpfslt	(_DtCS+3)& (0+255),b
  4567  0089B8  D002               	goto	l520
  4568  0089BA  0101               	movlb	_DtCS shr (0+8)
  4569  0089BC  D7DD               	goto	L18
  4570  0089BE                     l520:
  4571                           ;pomiar.c: 1838: else
  4572  0089BE  0E05               	movlw	5
  4573  0089C0  0101               	movlb	(_DtCS+3) shr (0+8)
  4574  0089C2  619B               	cpfslt	(_DtCS+3)& (0+255),b
  4575  0089C4  D001               	goto	u3721
  4576  0089C6  D003               	goto	u3740
  4577  0089C8                     u3721:
  4578  0089C8  0E1C               	movlw	28
  4579  0089CA  659B               	cpfsgt	(_DtCS+3)& (0+255),b
  4580  0089CC  D002               	goto	l515
  4581  0089CE                     u3740:
  4582  0089CE  0101               	movlb	_DtCS shr (0+8)
  4583  0089D0                     L39:
  4584  0089D0  9998               	bcf	_DtCS& (0+255),4,b
  4585  0089D2                     l515:
  4586                           ;pomiar.c: 1840: }
  4587  0089D2  0E1C               	movlw	28
  4588  0089D4  0101               	movlb	(_DtCS+3) shr (0+8)
  4589  0089D6  659B               	cpfsgt	(_DtCS+3)& (0+255),b
  4590  0089D8  D002               	goto	l523
  4591  0089DA  8198               	bsf	_DtCS& (0+255),0,b
  4592  0089DC  0C1C               	retlw	28
  4593  0089DE                     l523:
  4594                           ;pomiar.c: 1842: else DtCS._hi=0;
  4595  0089DE  0101               	movlb	_DtCS shr (0+8)
  4596  0089E0  9198               	bcf	_DtCS& (0+255),0,b
  4597                           ;pomiar.c: 1843: }
  4598  0089E2  0012               	return	
  4599  0089E4                     __end_of_PomiarCS:
  4600  000000                     
  4601  000000                     
  4602  000000                     
  4603  000000                     
  4604  000000                     
  4605  000000                     
  4606  000000                     
  4607  000000                     
  4608  000000                     
  4609  000000                     
  4610  000000                     
  4611  000000                     
  4612  000000                     
  4613  000000                     
  4614  000000                     
  4615  000000                     
  4616  000000                     
  4617  000000                     
  4618  000000                     
  4619  000000                     
  4620  000000                     
  4621  000000                     
  4622  000000                     
  4623  000000                     
  4624  000000                     
  4625  000000                     
  4626  000000                     
  4627  000000                     
  4628  000000                     
  4629  000000                     
  4630  000000                     
  4631  000000                     
  4632  000000                     
  4633  000000                     
  4634  000000                     
  4635  000000                     
  4636  000000                     
  4637  000000                     
  4638  000000                     
  4639  000000                     
  4640  000000                     
  4641  000000                     
  4642  000000                     
  4643  000000                     
  4644  000000                     
  4645  000000                     
  4646  000000                     
  4647  000000                     
  4648  000000                     
  4649  000000                     
  4650  000000                     
  4651  000000                     
  4652  000000                     
  4653  000000                     
  4654  000000                     
  4655  000000                     
  4656  000000                     
  4657  000000                     
  4658  000000                     
  4659  000000                     
  4660  000000                     
  4661  000000                     
  4662  000000                     
  4663  000000                     
  4664  000000                     
  4665  000000                     
  4666  000000                     
  4667  000000                     
  4668  000000                     
  4669  000000                     
  4670  000000                     
  4671  000000                     
  4672  000000                     
  4673  000000                     
  4674  000000                     
  4675  000000                     
  4676  000000                     
  4677  000000                     
  4678  000000                     
  4679  000000                     
  4680  000000                     
  4681  000000                     
  4682  000000                     
  4683  000000                     
  4684  000000                     
  4685  000000                     
  4686  000000                     
  4687  000000                     
  4688  000000                     
  4689  000000                     
  4690  000000                     
  4691  000000                     
  4692  000000                     
  4693  000000                     
  4694  000000                     
  4695  000000                     
  4696  000000                     
  4697  000000                     
  4698  000000                     
  4699  000000                     
  4700  000000                     
  4701  000000                     
  4702  000000                     
  4703  000000                     
  4704  000000                     
  4705  000000                     
  4706  000000                     
  4707  000000                     
  4708  000000                     
  4709  000000                     
  4710  000000                     
  4711  000000                     
  4712  000000                     
  4713  000000                     
  4714  000000                     
  4715  000000                     
  4716  000000                     
  4717  000000                     
  4718  000000                     
  4719  000000                     
  4720  000000                     
  4721  000000                     
  4722  000000                     
  4723  000000                     
  4724  000000                     
  4725  000000                     
  4726  000000                     
  4727  000000                     
  4728  000000                     
  4729  000000                     
  4730  000000                     
  4731  000000                     
  4732  000000                     
  4733  000000                     
  4734  000000                     
  4735  000000                     
  4736  000000                     
  4737  000000                     
  4738  000000                     
  4739  000000                     
  4740  000000                     
  4741  000000                     
  4742  000000                     
  4743  000000                     
  4744  000000                     
  4745  000000                     
  4746  000000                     
  4747  000000                     
  4748  000000                     
  4749  000000                     
  4750  000000                     
  4751  000000                     
  4752  000000                     
  4753  000000                     
  4754  000000                     
  4755  000000                     
  4756  000000                     
  4757  000000                     
  4758  000000                     
  4759  000000                     
  4760  000000                     
  4761  000000                     
  4762  000000                     
  4763  000000                     
  4764  000000                     
  4765  000000                     
  4766  000000                     
  4767  000000                     
  4768  000000                     
  4769  000000                     
  4770  000000                     
  4771  000000                     
  4772  000000                     
  4773  000000                     
  4774  000000                     
  4775  000000                     
  4776  000000                     
  4777  000000                     
  4778  000000                     
  4779  000000                     
  4780  000000                     
  4781  000000                     
  4782  000000                     
  4783  000000                     
  4784  000000                     
  4785  000000                     
  4786  000000                     
  4787  000000                     
  4788  000000                     
  4789  000000                     
  4790  000000                     
  4791  000000                     
  4792  000000                     
  4793  000000                     
  4794  000000                     
  4795  000000                     
  4796  000000                     
  4797  000000                     
  4798  000000                     
  4799  000000                     
  4800  000000                     
  4801  000000                     
  4802  000000                     
  4803  000000                     
  4804  000000                     
  4805  000000                     
  4806  000000                     
  4807  000000                     
  4808  000000                     
  4809  000000                     
  4810  000000                     
  4811  000000                     
  4812  000000                     
  4813  000000                     
  4814  000000                     
  4815  000000                     
  4816  000000                     
  4817  000000                     
  4818  000000                     
  4819  000000                     
  4820  000000                     
  4821  000000                     
  4822  000000                     
  4823  000000                     
  4824  000000                     
  4825  000000                     
  4826  000000                     
  4827  000000                     
  4828  000000                     
  4829  000000                     
  4830  000000                     
  4831  000000                     
  4832  000000                     
  4833  000000                     
  4834  000000                     
  4835  000000                     
  4836  000000                     
  4837  000000                     
  4838  000000                     
  4839  000000                     
  4840  000000                     
  4841  000000                     
  4842  000000                     
  4843  000000                     
  4844  000000                     
  4845  000000                     
  4846  000000                     
  4847  000000                     
  4848  000000                     
  4849  000000                     
  4850  000000                     
  4851  000000                     
  4852  000000                     
  4853  000000                     
  4854  000000                     
  4855  000000                     
  4856  000000                     
  4857  000000                     
  4858  000000                     
  4859  000000                     
  4860  000000                     
  4861  000000                     
  4862  000000                     
  4863  000000                     
  4864  000000                     
  4865  000000                     
  4866  000000                     
  4867  000000                     
  4868  000000                     
  4869  000000                     
  4870  000000                     
  4871  000000                     
  4872  000000                     
  4873  000000                     
  4874  000000                     
  4875  000000                     
  4876  000000                     
  4877  000000                     
  4878  000000                     
  4879  000000                     
  4880  000000                     
  4881  000000                     
  4882  000000                     
  4883  000000                     
  4884  000000                     
  4885  000000                     
  4886  000000                     
  4887  000000                     
  4888  000000                     
  4889  000000                     
  4890  000000                     
  4891  000000                     
  4892  000000                     
  4893  000000                     
  4894  000000                     
  4895  000000                     
  4896  000000                     
  4897  000000                     
  4898  000000                     
  4899  000000                     
  4900  000000                     
  4901  000000                     
  4902  000000                     
  4903  000000                     
  4904  000000                     
  4905  000000                     
  4906  000000                     
  4907  000000                     
  4908  000000                     
  4909  000000                     
  4910  000000                     
  4911  000000                     
  4912  000000                     
  4913  000000                     
  4914  000000                     
  4915  000000                     
  4916  000000                     
  4917  000000                     
  4918  000000                     
  4919  000000                     
  4920  000000                     
  4921  000000                     
  4922  000000                     
  4923  000000                     
  4924  000000                     
  4925  000000                     
  4926  000000                     
  4927  000000                     
  4928  000000                     
  4929  000000                     
  4930  000000                     
  4931  000000                     
  4932  000000                     
  4933  000000                     
  4934  000000                     
  4935  000000                     
  4936  000000                     
  4937  000000                     
  4938  000000                     
  4939  000000                     
  4940  000000                     
  4941  000000                     
  4942  000000                     
  4943  000000                     
  4944  000000                     
  4945  000000                     
  4946  000000                     
  4947  000000                     
  4948  000000                     
  4949  000000                     
  4950  000000                     
  4951  000000                     
  4952  000000                     
  4953  000000                     
  4954  000000                     
  4955  000000                     
  4956  000000                     
  4957  000000                     
  4958  000000                     
  4959  000000                     
  4960  000000                     
  4961  000000                     
  4962  000000                     
  4963  000000                     
  4964  000000                     
  4965  000000                     
  4966  000000                     
  4967  000000                     
  4968  000000                     
  4969  000000                     
  4970  000000                     
  4971  000000                     
  4972  000000                     
  4973  000000                     
  4974  000000                     
  4975  000000                     
  4976  000000                     
  4977  000000                     
  4978  000000                     
  4979  000000                     
  4980  000000                     
  4981  000000                     
  4982  000000                     
  4983  000000                     
  4984  000000                     
  4985  000000                     
  4986  000000                     
  4987  000000                     
  4988  000000                     
  4989  000000                     
  4990  000000                     
  4991  000000                     
  4992  000000                     
  4993  000000                     
  4994  000000                     
  4995  000000                     
  4996  000000                     
  4997  000000                     
  4998  000000                     
  4999  000000                     
  5000  000000                     
  5001  000000                     
  5002  000000                     
  5003  000000                     
  5004  000000                     
  5005  000000                     
  5006  000000                     
  5007  000000                     
  5008  000000                     
  5009  000000                     
  5010  000000                     
  5011  000000                     
  5012  000000                     
  5013  000000                     
  5014  000000                     
  5015  000000                     
  5016  000000                     
  5017  000000                     
  5018  000000                     
  5019  000000                     
  5020  000000                     
  5021  000000                     
  5022  000000                     
  5023  000000                     
  5024  000000                     
  5025  000000                     
  5026  000000                     
  5027  000000                     
  5028  000000                     
  5029  000000                     
  5030  000000                     
  5031  000000                     
  5032  000000                     
  5033  000000                     
  5034  000000                     
  5035  000000                     
  5036                           
  5037                           	psect	bigbss
  5038  000E9B                     F1645:
  5039  000E9B                     	ds	1
  5040  000E9B                     F1646:
  5041  000E9B                     	ds	1
  5042  000E9B                     F1651:
  5043  000E9B                     	ds	1
  5044  000E9B                     F1652:
  5045  000E9B                     	ds	1
  5046  000E9B                     F1653:
  5047  000E9B                     	ds	1
  5048  000E9B                     F1680:
  5049  000E9B                     	ds	1
  5050  000E9B                     F1688:
  5051  000E9B                     	ds	1
  5052  000E9B                     F1695:
  5053  000E9B                     	ds	1
  5054  000E9B                     F1698:
  5055  000E9B                     	ds	1
  5056  000000                     
  5057  000000                     
  5058  000000                     
  5059  000000                     
  5060  000000                     
  5061  000000                     
  5062  000000                     
  5063  000000                     
  5064  000000                     
  5065  000000                     
  5066  000000                     
  5067  000000                     
  5068  000000                     
  5069  000000                     
  5070  000000                     
  5071  000000                     
  5072  000000                     
  5073  000000                     
  5074  000000                     
  5075  000000                     
  5076  000000                     
  5077  000000                     
  5078  000000                     
  5079  000000                     
  5080  000000                     
  5081  000000                     
  5082  000000                     
  5083  000000                     
  5084  000000                     
  5085  000000                     
  5086  000000                     
  5087  000000                     
  5088  000000                     
  5089  000000                     
  5090  000000                     
  5091  000000                     
  5092  000000                     
  5093  000000                     
  5094  000000                     
  5095  000000                     
  5096  000000                     
  5097  000000                     
  5098  000000                     
  5099  000000                     
  5100  000000                     
  5101  000000                     
  5102  000000                     
  5103  000000                     
  5104  000000                     
  5105  000000                     
  5106  000000                     
  5107  000000                     
  5108  000000                     
  5109  000000                     
  5110  000000                     
  5111  000000                     
  5112  000000                     
  5113  000000                     
  5114  000000                     
  5115  000000                     
  5116  000000                     
  5117  000000                     
  5118  000000                     
  5119  000000                     
  5120  000000                     
  5121  000000                     
  5122  000000                     
  5123  000000                     
  5124  000000                     
  5125  000000                     
  5126  000000                     
  5127  000000                     
  5128  000000                     
  5129  000000                     
  5130  000000                     
  5131  000000                     
  5132  000000                     
  5133  000000                     
  5134  000E9B                     _PmrtimFlt1:
  5135  000E9B                     	ds	1
  5136  000E9B                     _PmrtimFlt2:
  5137  000E9B                     	ds	1
  5138  000000                     
  5139  000000                     
  5140  000000                     
  5141  000000                     
  5142  000000                     
  5143  000000                     
  5144  000000                     
  5145  000000                     
  5146  000000                     
  5147  000000                     
  5148  000000                     
  5149  000000                     
  5150  000000                     
  5151  000000                     
  5152  000000                     
  5153  000000                     
  5154  000000                     
  5155  000000                     
  5156  000000                     
  5157  000000                     
  5158  000000                     
  5159  000000                     
  5160  000000                     
  5161  000000                     
  5162  000000                     
  5163  000000                     
  5164  000000                     
  5165  000000                     
  5166  000000                     
  5167  000000                     
  5168  000000                     
  5169  000000                     
  5170  000000                     
  5171  000000                     
  5172  000000                     
  5173  000000                     
  5174  000000                     
  5175  000000                     
  5176  000000                     
  5177  000000                     
  5178  000000                     
  5179  000000                     
  5180  000000                     
  5181  000000                     
  5182  000000                     
  5183  000000                     
  5184  000000                     
  5185  000000                     
  5186  000000                     
  5187  000000                     
  5188  000E9B                     _wff:
  5189  000E9B                     	ds	12
  5190                           
  5191                           	psect	bss
  5192  000194                     _PmrtimFlt3:
  5193  000194                     	ds	2
  5194  000000                     
  5195  000000                     
  5196  000000                     
  5197  000000                     
  5198  000194                     _pbf:
  5199  000194                     	ds	2
  5200  000194                     _DtCS:
  5201  000194                     	ds	4
  5202  000194                     _DtZW:
  5203  000194                     	ds	4
  5204  000194                     _PFN:
  5205  000194                     	ds	7
  5206  000194                     _DtCW:
  5207  000194                     	ds	15
  5208  000194                     _DtCO:
  5209  000194                     	ds	17
  5210  000194                     _DtIN:
  5211  000194                     	ds	20
  5212                           
  5213                           	psect	temp
  5214  000000                     btemp:
  5215  000000                     	ds	8
  5216                           tblptrh	equ	0xFF7
  5217                           tblptrl	equ	0xFF6
  5218                           prodl	equ	0xFF3
  5219                           indf0	equ	0xFEF
  5220                           postinc0	equ	0xFEE
  5221                           fsr0h	equ	0xFEA
  5222                           fsr0l	equ	0xFE9
  5223                           wreg	equ	0xFE8
  5224                           indf1	equ	0xFE7
  5225                           fsr1h	equ	0xFE2
  5226                           fsr1l	equ	0xFE1
  5227                           fsr2l	equ	0xFD9
  5228                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Mon Sep 14 17:44:52 2020

                 _SetTrbPGD 7DA2           __end_of_SetTrbPGD 7E4A  
                         _M 0100                    _PomiarCO 752A  
                  _PomiarCS 8802                    _PomiarCW 7B18  
                  _PomiarIN 7AE2                    _PomiarZW 7D2E  
                        l30 6F28                          l22 6EAE  
                        l31 6F2A                          l40 6FC4  
                        l32 6F82                          l33 7070  
                        l25 6EC6                          l17 6E7A  
                        l50 6FF6                          l42 7034  
                        l34 6FCC                          l18 6E86  
                        l43 6FF8                          l36 6FBA  
                        l28 6EF0                          l45 6FD6  
                        l37 6FAC                          l70 7066  
                        l46 6FDE                          l71 72DE  
                        l55 6FF6                          l72 71B6  
                        l65 7064                          l90 7246  
                        l82 714A                          l91 7222  
                        l75 7124                          l92 7118  
                        l84 718E                          l93 7236  
                        l78 710A                          l97 726C  
                        l98 72D6                          l99 72B0  
                        u65 6EEA                          u85 6F50  
                        u95 6F7A                   _PomiarPCO 8392  
                 _PomiarPFN 8600                   _PomiarPCW 8502  
         __end_of_PomiarPCO 84A8           __end_of_PomiarPFN 8802  
         __end_of_PomiarPCW 85DC                ?a_GetPGD_PCO 00EF  
                  _StartRTS E6DE  __end_of_FiltrPomiarowyCOCW 752A  
                       l110 734C                         l102 72E2  
                       l111 7328                         l120 73B0  
                       l104 72F8                         l201 7778  
                       l121 73BC                         l105 7364  
                       l210 780E                         l130 743E  
                       l122 73D0                         l114 736C  
                       l106 7316                         l203 77BC  
                       l107 7300                         l300 7C08  
                       l220 78EC                         l140 7508  
                       l132 744E                         l124 73E2  
                       l301 7C18                         l133 7482  
                       l125 73EE                         l310 7C72  
                       l214 7838                         l142 7516  
                       l118 739E                         l311 7C66  
                       l303 7C54                         l151 7582  
                       l127 740C                         l320 7CF0  
                       l304 7C40                         l160 7618  
                       l136 7484                         l128 741C  
                       l401 8132                         l321 7CE6  
                       l313 7C6C                         l305 7C4A  
                       l241 79FE                         l217 7862  
                       l209 783C                         l153 75C6  
                       l137 750C                         l129 742C  
                       l410 82CE                         l242 7A02  
                       l234 79DE                         l226 791A  
                       l218 7890                         l170 768A  
                       l146 7578                         l138 74C6  
                       l403 815C                         l331 7D60  
                       l323 7CF4                         l251 7A80  
                       l243 7A0C                         l235 79B0  
                       l219 78BE                         l139 74CA  
                       l500 888E                         l420 82F4  
                       l412 82B2                         l404 8160  
                       l332 7D98                         l324 7D02  
                       l316 7C90                         l252 7A84  
                       l244 7A16                         l228 795E  
                       l148 7A72                         l164 7642  
                       l501 889A                         l421 82F8  
                       l413 8288                         l405 8174  
                       l341 7E04                         l333 7D94  
                       l325 7D06                         l317 7C94  
                       l309 7C58                         l261 7ACC  
                       l253 7A92                         l245 7A20  
                       l149 7A54                         l430 8356  
                       l422 830C                         l414 82AE  
                       l350 7EB4                         l334 7D82  
                       l326 7D14                         l262 7AD0  
                       l254 7A96                         l246 7A2A  
                       l511 8986                         l407 8178  
                       l351 7EAA                         l335 7D86  
                       l327 7D18                         l271 7CD4  
                       l263 7ADC                         l255 7AC0  
                       l247 7A34                         l239 79DA  
                       l167 766C                         l159 7646  
                       l520 89BE                         l512 897C  
                       l440 83A4                         l424 8310  
                       l416 82C6                         l352 7E90  
                       l328 7D22                         l272 7CB6  
                       l256 7AAA                         l248 7A3E  
                       l184 7752                         l176 768E  
                       l168 7676                         l505 8958  
                       l441 83A8                         l409 8314  
                       l361 7F18                         l281 7B88  
                       l257 7AAE                         l249 7A48  
                       l185 7724                         l169 7680  
                       l506 88D0                         l442 8406  
                       l426 833A                         l418 82CA  
                       l362 7ED0                         l354 7E70  
                       l346 7E5C                         l282 7B8C  
                       l274 7B60                         l266 7B0E  
                       l258 7ABA                         l178 76D2  
                       l523 89DE                         l515 89D2  
                       l507 88DC                         l451 847E  
                       l443 83DC                         l427 833E  
                       l371 7F2E                         l355 7E74  
                       l339 7E30                         l275 7B7C  
                       l516 8992                         l508 8950  
                       l460 84EC                         l452 8472  
                       l444 83EA                         l428 8352  
                       l380 7F7A                         l364 7F12  
                       l356 7E76                         l517 8996  
                       l445 8402                         l365 7F02  
                       l357 7E88                         l349 7F4A  
                       l285 7B90                         l269 7B56  
                       l189 774E                         l518 89A8  
                       l462 84FC                         l454 8484  
                       l390 80AA                         l519 89AC  
                       l471 8596                         l447 841A  
                       l391 80D0                         l472 856C  
                       l448 8428                         l296 7BBC  
                       l481 87E0                         l473 857A  
                       l465 8510                         l449 843E  
                       l393 80E8                         l385 817C  
                       l377 7F62                         l490 87C0  
                       l482 8684                         l474 8592  
                       l458 84D6                         l386 8136  
                       l378 7F5E                         l298 7BE2  
                       l483 8790                         l467 8504  
                       l459 84F0                         l395 80EC  
                       l387 80F0                         l484 86E4  
                       l476 85AC                         l468 8504  
                       l493 87F2                         l477 85BA  
                       l469 8506                         l397 8116  
                       l389 80D4                         l398 811A  
                       l495 8870                         l399 812E  
                       l488 87C6                         l489 87C4  
                       l499 88C6                         u100 6F7C  
                       _PFN 01A0                         u515 71E6  
                       u525 7210                         u375 70B8  
                       u385 70E4                    _WritePCO 8366  
                       u900 7558                    _WritePFN 85DC  
                  _WritePCW 84A8                         u940 75F0  
                       u855 74F0                         u945 75EE  
                       u881 7552                         u975 7640  
                       _RTS E70E                         _pbf 0196  
                       _wff 0EA6                         wreg 000FE8  
                 _StartRTdS E6A2                   _StartTim1 6E9A  
                 _StartTim2 6EB2                   _StartTim3 6ECA  
           _ReturnACfromNTC EAA8           __end_of_StartTim1 6EA0  
                      F1651 0E9D           __end_of_StartTim2 6EB8  
                      F1652 0E9E           __end_of_StartTim3 6ED4  
                      F1653 0E9F                        F1645 0E9B  
                      F1646 0E9C                        F1680 0EA0  
                      F1695 0EA2                        F1688 0EA1  
                      F1698 0EA3                  ?a_PomiarCS 00EB  
                ?a_PomiarCW 00EB                  _PmrtimFlt1 0EA4  
                _PmrtimFlt2 0EA5                  _PmrtimFlt3 0194  
                      u1100 76FC                        u1105 76FA  
                      u2010 7D54                        u1135 774C  
                      u2210 7E82                        u2050 7D7C  
                      u1315 788A                        u1420 7988  
                      u1260 77E6                        u1325 78B8  
                      u2310 7EEE                        u1335 78E6  
                      u1425 7986                        u1345 7912  
                      u1265 77E4                        u1621 7B02  
                      u1455 79D8                        u1295 7836  
                      u1640 7B08                        u2450 7F58  
                      u3411 8836                        u2515 807C  
                      u1651 7B38                        u3325 87B2  
                      u1670 7B3E                        u3361 881C  
                      u3450 883C                        u1860 7C50  
                      u3381 8824                        u2645 825A  
                      u3721 89C8                        u3740 89CE  
                      _MGSD 024C                        u1991 7D4E  
              _ReadEEPopPFN 9F92                        _DtCO 01B6  
                      _DtCS 0198                        _DtCW 01A7  
                      _DtIN 01C7                        _RTdS E6C6  
                      _DtZW 019C                        aldiv F020  
                      fsr0h 000FEA                        fsr1h 000FE2  
                      indf0 000FEF                        fsr0l 000FE9  
                      indf1 000FE7                        fsr1l 000FE1  
                      fsr2l 000FD9                        btemp 0000  
                      awdiv F092                        awmul F124  
                      prodl 000FF3             __end_of_ReadPCO 8366  
           __end_of_PmrTim1 6EB2             __end_of_PmrTim2 6ECA  
           __end_of_PmrTim3 6EF4                 ?a_SetTrbPGD 00EB  
           _PredkoscZmianCW 72E8                 ?a_PomiarPCO 00EB  
                _WriteEEPCO 9ECC                  _WriteEEPFN 9F2C  
                _WriteEEPCW 9E96                       _RSDT1 0124  
                     _DtKNF 0230                       _RdPrt DE98  
                used_btemp0 0001                  used_btemp1 0001  
                used_btemp2 0001                  used_btemp3 0001  
                used_btemp4 0001                  used_btemp5 0001  
                used_btemp6 0001                  used_btemp7 0001  
               _IncPmrTimer 6E6E                     _BitSet2 EDF4  
                   _GetBit2 ED8E                    ?_BitSet2 00EE  
       __end_of_IncPmrTimer 6E9A                       status 000FD8  
                  ?_GetBit2 00F0                     _ReadPCO 835A  
                   _PmrTim1 6EA0                     _PmrTim2 6EB8  
                   _PmrTim3 6ED6                     __Lparam 00E9  
                  ?_PmrTim3 00E9                  _GetPGD_PCO 7F94  
        _FiltrPomiarowyCOCW 7444          __end_of_GetPGD_PCO 835A  
          __end_of_PomiarCO 7AE2            __end_of_PomiarCS 89E4  
          __end_of_PomiarCW 7D2E            __end_of_PomiarIN 7B18  
          __end_of_PomiarZW 7DA2                     __ramtop 1000  
          __end_of_WritePCO 8392            __end_of_WritePFN 8600  
          __end_of_WritePCW 84CC     __end_of_PredkoscZmianCW 738A  
               _InitDataPmr 6E38         __end_of_InitDataPmr 6E6E  
               _WriteEEPPGD 9EFA                 _ReadTabZNTC EAE4  
                    _ChkPGD 99F8                      _ChkPCO 99BC  
                    _ReadAC E9D6                      _SetPFN 9D74  
                _ReadEEPPGD 9EF6                     postinc0 000FEE  
                    aldiv_f F170                      almul_f F15C  
                 _FltParMod 738A                  _ReadTabNTC EA42  
         __end_of_FltParMod 7444                      tblptrh 000FF7  
                    tblptrl 000FF6                   _ReadEEPCO 9EF2  
                 _ReadEEPFN 9F7A                   _ReadEEPCW 9EC8  
                 _GoldenEye 6EF4           __end_of_GoldenEye 72E8  
              _SetMinMaxPGD 9992                _SetMinMaxPCO 9916  
                 _SetModPCO 7E4A                   _SetModPCW 84CC  
         __end_of_SetModPCO 7F94           __end_of_SetModPCW 8502  
