

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Mon Sep 14 17:44:54 2020


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     5                           	psect	bss,global,class=RAM,space=1,delta=1
     6                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     7                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97                           
    98                           	psect	text
    99                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   100                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   101                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   102                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   103                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   104                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   105                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   106                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   107                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   108                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   109                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   110                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   111                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   112                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   113                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   114                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   115                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   116                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   117                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   118                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   119                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   120                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   121                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   122                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   123                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   124                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   125                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   126                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   127                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   128                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   129                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   130                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   131                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   132                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   133                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   134                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   135                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   136                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   137                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   138                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   139                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   140                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   141                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   142                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   143                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   144                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   145                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   146                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   147                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   148                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   149                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   150                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   151                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   152                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   153                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   154                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   155                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   156                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   157                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   158                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   159                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   160                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   161                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   162                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   163                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   164                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   165                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   166                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   167                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   168                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   169                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   170                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   171                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   172                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   173                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   174                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   175                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   176                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   177                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   178                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   179                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   180                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   181                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   182                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   183                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   184                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   185                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   186                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   187                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   188                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   189                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   190                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   191                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   192                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   193                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   194                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   195                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   196                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   197                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   198                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   199  00A36C                     _SaveRSToData:
   200                           ;	_tnDat assigned to ?a_ReceptData+0
   201  000000                     _ReceptData$tnDat	set	?a_ReceptData
   202                           ;	_ndat assigned to ?a_SaveDataToRS+3
   203  000000                     _SaveDataToRS$ndat	set	?a_SaveDataToRS+3
   204                           ;	_nr assigned to ?a_SaveDataToRS+2
   205  000000                     _SaveDataToRS$nr	set	?a_SaveDataToRS+2
   206                           ;	_chkndat assigned to ?a_SaveDataToRS+1
   207  000000                     _SaveDataToRS$chkndat	set	?a_SaveDataToRS+1
   208                           ;	_i assigned to ?a_SaveDataToRS+0
   209  000000                     _SaveDataToRS$i	set	?a_SaveDataToRS
   210                           ;	_nbty assigned to ?a_SaveRSToData+1
   211  000000                     _SaveRSToData$nbty	set	?a_SaveRSToData+1
   212  000000                     
   213                           ;	_bf assigned to ?a_SaveRSToData+0
   214  000000                     _SaveRSToData$bf	set	?a_SaveRSToData
   215                           ;smgs_rs9b.c: 26: volatile unsigned char nbty,bf
      +                          ;
   216  00A36C  0E02               	movlw	2
   217  00A36E  ECD6  F070         	call	_GetRSRBuf
   218  00A372  CFE8 F124          	movff	wreg,_RSDT1
   219                           ;smgs_rs9b.c: 31: switch(RSDT1.outID)
   220  00A376  D3B5               	goto	l18
   221  00A378                     l19:
   222                           ;smgs_rs9b.c: 32: {
   223                           ;smgs_rs9b.c: 34: {
   224  00A378  0101               	movlb	(_RSDT1+1) shr (0+8)
   225  00A37A  9125               	bcf	(_RSDT1+1)& (0+255),0,b
   226                           ;smgs_rs9b.c: 37: nbty=GetNDat();
   227  00A37C  EC8F  F071         	call	_GetNDat	;wreg free
   228  00A380  0100               	movlb	__Lparam shr (0+8)
   229  00A382  6FED               	movwf	(?a_SaveRSToData+1)^(__Lparam& (0+65280))
      +                          ,b	;volatile
   230                           ;smgs_rs9b.c: 39: if(nbty>=9) RSDT1.vSTD=1;
   231  00A384  0E08               	movlw	8
   232  00A386  65ED               	cpfsgt	(?a_SaveRSToData+1)^(__Lparam& (0+65280)
      +                          ),b	;volatile
   233  00A388  D004               	goto	l20
   234  00A38A  0E01               	movlw	1
   235  00A38C  CFE8 F16B          	movff	wreg,_RSDT1+71
   236  00A390  D002               	goto	l21
   237  00A392                     l20:
   238                           ;smgs_rs9b.c: 40: else RSDT1.vSTD=0;
   239  00A392  0101               	movlb	(_RSDT1+71) shr (0+8)
   240  00A394  6B6B               	clrf	(_RSDT1+71)& (0+255),b
   241  00A396                     l21:
   242                           ;smgs_rs9b.c: 42: RSDT1.inSTAT0=GetRSRBuf(3);
   243  00A396  0E03               	movlw	3
   244  00A398  ECD6  F070         	call	_GetRSRBuf
   245  00A39C  CFE8 F16F          	movff	wreg,_RSDT1+75
   246                           ;smgs_rs9b.c: 43: RSDT1.inSTAT1=GetRSRBuf(4);
   247  00A3A0  0E04               	movlw	4
   248  00A3A2  ECD6  F070         	call	_GetRSRBuf
   249  00A3A6  CFE8 F170          	movff	wreg,_RSDT1+76
   250                           ;smgs_rs9b.c: 44: RSDT1.inPCO=GetRSRBuf(5);
   251  00A3AA  0E05               	movlw	5
   252  00A3AC  ECD6  F070         	call	_GetRSRBuf
   253  00A3B0  CFE8 F16D          	movff	wreg,_RSDT1+73
   254                           ;smgs_rs9b.c: 45: RSDT1.inPCW=GetRSRBuf(6);
   255  00A3B4  0E06               	movlw	6
   256  00A3B6  ECD6  F070         	call	_GetRSRBuf
   257  00A3BA  CFE8 F16E          	movff	wreg,_RSDT1+74
   258                           ;smgs_rs9b.c: 46: RSDT1.inINSTAT=0;
   259  00A3BE  0101               	movlb	(_RSDT1+77) shr (0+8)
   260  00A3C0  6B71               	clrf	(_RSDT1+77)& (0+255),b
   261                           ;smgs_rs9b.c: 47: RSDT1.inLNSTAT=0;
   262  00A3C2  0101               	movlb	(_RSDT1+78) shr (0+8)
   263  00A3C4  6B72               	clrf	(_RSDT1+78)& (0+255),b
   264                           ;smgs_rs9b.c: 48: RSDT1.inSTAT2=0;
   265  00A3C6  0101               	movlb	(_RSDT1+80) shr (0+8)
   266  00A3C8  6B74               	clrf	(_RSDT1+80)& (0+255),b
   267                           ;smgs_rs9b.c: 49: RSDT1.inRDZ0=0;
   268  00A3CA  0101               	movlb	(_RSDT1+72) shr (0+8)
   269  00A3CC  6B6C               	clrf	(_RSDT1+72)& (0+255),b
   270                           ;smgs_rs9b.c: 50: RSDT1.RD_STD=1;
   271  00A3CE  0101               	movlb	(_RSDT1+1) shr (0+8)
   272  00A3D0  8125               	bsf	(_RSDT1+1)& (0+255),0,b
   273                           ;smgs_rs9b.c: 51: break;
   274  00A3D2  0012               	return	
   275  00A3D4                     l22:
   276                           ;smgs_rs9b.c: 52: }
   277                           ;smgs_rs9b.c: 54: {
   278  00A3D4  0101               	movlb	(_RSDT1+1) shr (0+8)
   279  00A3D6  9125               	bcf	(_RSDT1+1)& (0+255),0,b
   280                           ;smgs_rs9b.c: 57: nbty=GetExNDat();
   281  00A3D8  EC93  F071         	call	_GetExNDat	;wreg free
   282  00A3DC  0100               	movlb	__Lparam shr (0+8)
   283  00A3DE  6FED               	movwf	(?a_SaveRSToData+1)^(__Lparam& (0+65280))
      +                          ,b	;volatile
   284                           ;smgs_rs9b.c: 59: switch(nbty)
   285  00A3E0  D001               	goto	l24
   286  00A3E2                     l25:
   287  00A3E2  D007               	goto	L1
   288                           ;smgs_rs9b.c: 66: else RSDT1.vSTD=2;
   289                           ;smgs_rs9b.c: 67: break;
   290  00A3E4                     l24:
   291  00A3E4  0100               	movlb	__Lparam shr (0+8)
   292  00A3E6  51ED               	movf	(?a_SaveRSToData+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
   293  00A3E8  0A0E               	xorlw	14
   294  00A3EA  E0FB               	bz	l25
   295                           ;smgs_rs9b.c: 60: {
   296                           ;smgs_rs9b.c: 62: RSDT1.vSTD=2;
   297                           ;smgs_rs9b.c: 63: break;
   298                           ;smgs_rs9b.c: 64: default:
   299                           ;smgs_rs9b.c: 65: if(nbty>=14) RSDT1.vSTD=2;
   300  00A3EC  0E0D               	movlw	13
   301  00A3EE  65ED               	cpfsgt	(?a_SaveRSToData+1)^(__Lparam& (0+65280)
      +                          ),b	;volatile
   302  00A3F0  D000               	goto	L1
   303  00A3F2                     L1:
   304  00A3F2  0E02               	movlw	2
   305  00A3F4  CFE8 F16B          	movff	wreg,_RSDT1+71
   306                           ;smgs_rs9b.c: 69: RSDT1.inRDZ0=GetRSRBuf(4);
   307  00A3F8  0E04               	movlw	4
   308  00A3FA  ECD6  F070         	call	_GetRSRBuf
   309  00A3FE  CFE8 F16C          	movff	wreg,_RSDT1+72
   310                           ;smgs_rs9b.c: 70: RSDT1.inSTAT0=GetRSRBuf(5);
   311  00A402  0E05               	movlw	5
   312  00A404  ECD6  F070         	call	_GetRSRBuf
   313  00A408  CFE8 F16F          	movff	wreg,_RSDT1+75
   314                           ;smgs_rs9b.c: 71: RSDT1.inSTAT1=GetRSRBuf(6);
   315  00A40C  0E06               	movlw	6
   316  00A40E  ECD6  F070         	call	_GetRSRBuf
   317  00A412  CFE8 F170          	movff	wreg,_RSDT1+76
   318                           ;smgs_rs9b.c: 72: RSDT1.inPCO=GetRSRBuf(7);
   319  00A416  0E07               	movlw	7
   320  00A418  ECD6  F070         	call	_GetRSRBuf
   321  00A41C  CFE8 F16D          	movff	wreg,_RSDT1+73
   322                           ;smgs_rs9b.c: 73: RSDT1.inPCW=GetRSRBuf(8);
   323  00A420  0E08               	movlw	8
   324  00A422  ECD6  F070         	call	_GetRSRBuf
   325  00A426  CFE8 F16E          	movff	wreg,_RSDT1+74
   326                           ;smgs_rs9b.c: 74: RSDT1.inINSTAT=GetRSRBuf(9);
   327  00A42A  0E09               	movlw	9
   328  00A42C  ECD6  F070         	call	_GetRSRBuf
   329  00A430  CFE8 F171          	movff	wreg,_RSDT1+77
   330                           ;smgs_rs9b.c: 75: RSDT1.inLNSTAT=GetRSRBuf(10);
   331  00A434  0E0A               	movlw	10
   332  00A436  ECD6  F070         	call	_GetRSRBuf
   333  00A43A  CFE8 F172          	movff	wreg,_RSDT1+78
   334                           ;smgs_rs9b.c: 76: RSDT1.inCONTSETP=GetRSRBuf(11)
      +                          ;
   335  00A43E  0E0B               	movlw	11
   336  00A440  ECD6  F070         	call	_GetRSRBuf
   337  00A444  CFE8 F173          	movff	wreg,_RSDT1+79
   338                           ;smgs_rs9b.c: 77: RSDT1.inSTAT2=GetRSRBuf(12);
   339  00A448  0E0C               	movlw	12
   340  00A44A  ECD6  F070         	call	_GetRSRBuf
   341  00A44E  CFE8 F174          	movff	wreg,_RSDT1+80
   342                           ;smgs_rs9b.c: 87: RSDT1.RD_STD=1;
   343  00A452  0101               	movlb	(_RSDT1+1) shr (0+8)
   344  00A454  8125               	bsf	(_RSDT1+1)& (0+255),0,b
   345                           ;smgs_rs9b.c: 88: break;
   346  00A456  0012               	return	
   347  00A458                     l29:
   348                           ;smgs_rs9b.c: 89: }
   349                           ;smgs_rs9b.c: 91: {
   350  00A458  0101               	movlb	(_RSDT1+1) shr (0+8)
   351  00A45A  B725               	btfsc	(_RSDT1+1)& (0+255),3,b
   352  00A45C  0012               	return	
   353                           ;smgs_rs9b.c: 94: {
   354  00A45E  9325               	bcf	(_RSDT1+1)& (0+255),1,b
   355                           ;smgs_rs9b.c: 96: switch(GetRSRBuf(1)&0b00011111
      +                          )
   356  00A460  D005               	goto	l32
   357  00A462                     l33:
   358                           ;smgs_rs9b.c: 97: {
   359                           ;smgs_rs9b.c: 99: RSDT1.vKNF=1;
   360  00A462  0E01               	movlw	1
   361  00A464  D021               	goto	L5
   362                           ;smgs_rs9b.c: 100: break;
   363  00A466                     l34:
   364                           ;smgs_rs9b.c: 101: case 21:
   365                           ;smgs_rs9b.c: 102: RSDT1.vKNF=2;
   366  00A466  0E02               	movlw	2
   367  00A468  D01F               	goto	L5
   368                           ;smgs_rs9b.c: 103: break;
   369  00A46A                     l35:
   370  00A46A  D01D               	goto	L11
   371                           ;smgs_rs9b.c: 104: case 24:
   372                           ;smgs_rs9b.c: 105: RSDT1.vKNF=3;
   373                           ;smgs_rs9b.c: 109: else RSDT1.vKNF=1;
   374                           ;smgs_rs9b.c: 110: break;
   375  00A46C                     l32:
   376  00A46C  0E01               	movlw	1
   377  00A46E  ECD6  F070         	call	_GetRSRBuf
   378  00A472  6E00               	movwf	btemp,c
   379  00A474  0E1F               	movlw	31
   380  00A476  1600               	andwf	btemp,f,c
   381  00A478  C000  F002         	movff	btemp,btemp+2
   382  00A47C  6A03               	clrf	btemp+3,c
   383  00A47E  D008               	goto	l30003
   384  00A480                     l30004:
   385  00A480  5002               	movf	btemp+2,w,c
   386  00A482  0A11               	xorlw	17
   387  00A484  E0EE               	bz	l33
   388  00A486  0A04               	xorlw	4
   389  00A488  E0EE               	bz	l34
   390  00A48A  0A0D               	xorlw	13
   391  00A48C  E0EE               	bz	l35
   392  00A48E  D002               	goto	l36
   393  00A490                     l30003:
   394  00A490  5003               	movf	btemp+3,w,c
   395  00A492  E0F6               	bz	l30004
   396                           ;smgs_rs9b.c: 106: break;
   397  00A494                     l36:
   398                           ;smgs_rs9b.c: 107: default:
   399                           ;smgs_rs9b.c: 108: if((GetRSRBuf(1)&0b00011111)>
      +                          24) RSDT1.vKNF=3;
   400  00A494  0E01               	movlw	1
   401  00A496  ECD6  F070         	call	_GetRSRBuf
   402  00A49A  6E00               	movwf	btemp,c
   403  00A49C  0E1F               	movlw	31
   404  00A49E  1600               	andwf	btemp,f,c
   405  00A4A0  0E19               	movlw	25
   406  00A4A2  5C00               	subwf	btemp,w,c
   407  00A4A4  E3DE               	bnc	l33
   408  00A4A6                     L11:
   409  00A4A6  0E03               	movlw	3
   410  00A4A8                     L5:
   411  00A4A8  CFE8 F144          	movff	wreg,_RSDT1+32
   412                           ;smgs_rs9b.c: 112: RSDT1.inKSTAT0=GetRSRBuf(3);
   413  00A4AC  0E03               	movlw	3
   414  00A4AE  ECD6  F070         	call	_GetRSRBuf
   415  00A4B2  CFE8 F175          	movff	wreg,_RSDT1+81
   416                           ;smgs_rs9b.c: 113: RSDT1.inKRK=GetRSRBuf(4);
   417  00A4B6  0E04               	movlw	4
   418  00A4B8  ECD6  F070         	call	_GetRSRBuf
   419  00A4BC  CFE8 F176          	movff	wreg,_RSDT1+82
   420                           ;smgs_rs9b.c: 114: RSDT1.inPRM=GetRSRBuf(5);
   421  00A4C0  0E05               	movlw	5
   422  00A4C2  ECD6  F070         	call	_GetRSRBuf
   423  00A4C6  CFE8 F177          	movff	wreg,_RSDT1+83
   424                           ;smgs_rs9b.c: 115: RSDT1.inDDTA=GetRSRBuf(6);
   425  00A4CA  0E06               	movlw	6
   426  00A4CC  ECD6  F070         	call	_GetRSRBuf
   427  00A4D0  CFE8 F178          	movff	wreg,_RSDT1+84
   428                           ;smgs_rs9b.c: 116: RSDT1.inMSTR=GetRSRBuf(7);
   429  00A4D4  0E07               	movlw	7
   430  00A4D6  ECD6  F070         	call	_GetRSRBuf
   431  00A4DA  CFE8 F179          	movff	wreg,_RSDT1+85
   432                           ;smgs_rs9b.c: 117: RSDT1.inMMAXU=GetRSRBuf(8);
   433  00A4DE  0E08               	movlw	8
   434  00A4E0  ECD6  F070         	call	_GetRSRBuf
   435  00A4E4  CFE8 F17A          	movff	wreg,_RSDT1+86
   436                           ;smgs_rs9b.c: 118: RSDT1.inMMAXG=GetRSRBuf(9);
   437  00A4E8  0E09               	movlw	9
   438  00A4EA  ECD6  F070         	call	_GetRSRBuf
   439  00A4EE  CFE8 F17B          	movff	wreg,_RSDT1+87
   440                           ;smgs_rs9b.c: 119: RSDT1.inRGZ=GetRSRBuf(10);
   441  00A4F2  0E0A               	movlw	10
   442  00A4F4  ECD6  F070         	call	_GetRSRBuf
   443  00A4F8  CFE8 F17C          	movff	wreg,_RSDT1+88
   444                           ;smgs_rs9b.c: 120: RSDT1.inWANL=GetRSRBuf(11);
   445  00A4FC  0E0B               	movlw	11
   446  00A4FE  ECD6  F070         	call	_GetRSRBuf
   447  00A502  CFE8 F17D          	movff	wreg,_RSDT1+89
   448                           ;smgs_rs9b.c: 121: RSDT1.inTPKT=GetRSRBuf(12);
   449  00A506  0E0C               	movlw	12
   450  00A508  ECD6  F070         	call	_GetRSRBuf
   451  00A50C  CFE8 F17E          	movff	wreg,_RSDT1+90
   452                           ;smgs_rs9b.c: 122: RSDT1.inWOBG=GetRSRBuf(13);
   453  00A510  0E0D               	movlw	13
   454  00A512  ECD6  F070         	call	_GetRSRBuf
   455  00A516  CFE8 F17F          	movff	wreg,_RSDT1+91
   456                           ;smgs_rs9b.c: 123: RSDT1.inOPDG=GetRSRBuf(14);
   457  00A51A  0E0E               	movlw	14
   458  00A51C  ECD6  F070         	call	_GetRSRBuf
   459  00A520  CFE8 F180          	movff	wreg,_RSDT1+92
   460                           ;smgs_rs9b.c: 124: RSDT1.inTPCS=GetRSRBuf(15);
   461  00A524  0E0F               	movlw	15
   462  00A526  ECD6  F070         	call	_GetRSRBuf
   463  00A52A  CFE8 F181          	movff	wreg,_RSDT1+93
   464                           ;smgs_rs9b.c: 126: RSDT1.inRDPM=GetRSRBuf(16);
   465  00A52E  0E10               	movlw	16
   466  00A530  ECD6  F070         	call	_GetRSRBuf
   467  00A534  CFE8 F182          	movff	wreg,_RSDT1+94
   468                           ;smgs_rs9b.c: 127: RSDT1.inDTPM=GetRSRBuf(17);
   469  00A538  0E11               	movlw	17
   470  00A53A  ECD6  F070         	call	_GetRSRBuf
   471  00A53E  CFE8 F183          	movff	wreg,_RSDT1+95
   472                           ;smgs_rs9b.c: 128: RSDT1.inMDPM=GetRSRBuf(18);
   473  00A542  0E12               	movlw	18
   474  00A544  ECD6  F070         	call	_GetRSRBuf
   475  00A548  CFE8 F184          	movff	wreg,_RSDT1+96
   476                           ;smgs_rs9b.c: 129: RSDT1.inMGPM=GetRSRBuf(19);
   477  00A54C  0E13               	movlw	19
   478  00A54E  ECD6  F070         	call	_GetRSRBuf
   479  00A552  CFE8 F185          	movff	wreg,_RSDT1+97
   480                           ;smgs_rs9b.c: 131: RSDT1.inMGPM2=GetRSRBuf(20);
   481  00A556  0E14               	movlw	20
   482  00A558  ECD6  F070         	call	_GetRSRBuf
   483  00A55C  CFE8 F186          	movff	wreg,_RSDT1+98
   484                           ;smgs_rs9b.c: 132: RSDT1.inHSCO=GetRSRBuf(21);
   485  00A560  0E15               	movlw	21
   486  00A562  ECD6  F070         	call	_GetRSRBuf
   487  00A566  CFE8 F187          	movff	wreg,_RSDT1+99
   488                           ;smgs_rs9b.c: 133: RSDT1.inCONW=GetRSRBuf(22);
   489  00A56A  0E16               	movlw	22
   490  00A56C  ECD6  F070         	call	_GetRSRBuf
   491  00A570  CFE8 F188          	movff	wreg,_RSDT1+100
   492                           ;smgs_rs9b.c: 134: RSDT1.RD_KNF=1;
   493  00A574  0101               	movlb	(_RSDT1+1) shr (0+8)
   494  00A576  8325               	bsf	(_RSDT1+1)& (0+255),1,b
   495                           ;smgs_rs9b.c: 135: }
   496  00A578  0012               	return	
   497  00A57A                     l39:
   498                           ;smgs_rs9b.c: 137: }
   499                           ;smgs_rs9b.c: 139: {
   500  00A57A  0101               	movlb	(_RSDT1+1) shr (0+8)
   501  00A57C  B725               	btfsc	(_RSDT1+1)& (0+255),3,b
   502  00A57E  0012               	return	
   503                           ;smgs_rs9b.c: 142: {
   504  00A580  9325               	bcf	(_RSDT1+1)& (0+255),1,b
   505                           ;smgs_rs9b.c: 144: nbty=GetExNDat();
   506  00A582  EC93  F071         	call	_GetExNDat	;wreg free
   507  00A586  0100               	movlb	__Lparam shr (0+8)
   508  00A588  6FED               	movwf	(?a_SaveRSToData+1)^(__Lparam& (0+65280))
      +                          ,b	;volatile
   509                           ;smgs_rs9b.c: 145: switch(nbty)
   510  00A58A  D005               	goto	l42
   511  00A58C                     l43:
   512  00A58C  D00F               	goto	L9
   513                           ;smgs_rs9b.c: 146: {
   514                           ;smgs_rs9b.c: 148: RSDT1.vKNF=5;
   515                           ;smgs_rs9b.c: 149: break;
   516  00A58E                     l44:
   517                           ;smgs_rs9b.c: 150: case 27:
   518                           ;smgs_rs9b.c: 151: RSDT1.vKNF=4;
   519  00A58E  0E04               	movlw	4
   520  00A590  D00E               	goto	L10
   521                           ;smgs_rs9b.c: 152: break;
   522  00A592                     l45:
   523                           ;smgs_rs9b.c: 153: case 25:
   524                           ;smgs_rs9b.c: 154: RSDT1.vKNF=3;
   525  00A592  0E03               	movlw	3
   526                           ;smgs_rs9b.c: 158: else RSDT1.vKNF=5;
   527  00A594  D00C               	goto	L10
   528                           ;smgs_rs9b.c: 159: break;
   529  00A596                     l42:
   530  00A596  0100               	movlb	__Lparam shr (0+8)
   531  00A598  51ED               	movf	(?a_SaveRSToData+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
   532  00A59A  0A19               	xorlw	25
   533  00A59C  E0FA               	bz	l45
   534  00A59E  0A02               	xorlw	2
   535  00A5A0  E0F6               	bz	l44
   536  00A5A2  0A05               	xorlw	5
   537  00A5A4  E0F3               	bz	l43
   538                           ;smgs_rs9b.c: 155: break;
   539                           ;smgs_rs9b.c: 156: default:
   540                           ;smgs_rs9b.c: 157: if(nbty>30) RSDT1.vKNF=5;
   541  00A5A6  0E1E               	movlw	30
   542  00A5A8  65ED               	cpfsgt	(?a_SaveRSToData+1)^(__Lparam& (0+65280)
      +                          ),b	;volatile
   543  00A5AA  D000               	goto	L9
   544  00A5AC                     L9:
   545  00A5AC  0E05               	movlw	5
   546  00A5AE                     L10:
   547  00A5AE  CFE8 F144          	movff	wreg,_RSDT1+32
   548                           ;smgs_rs9b.c: 161: RSDT1.inKSTAT0=GetRSRBuf(4);
   549  00A5B2  0E04               	movlw	4
   550  00A5B4  ECD6  F070         	call	_GetRSRBuf
   551  00A5B8  CFE8 F175          	movff	wreg,_RSDT1+81
   552                           ;smgs_rs9b.c: 162: RSDT1.inKRK=GetRSRBuf(5);
   553  00A5BC  0E05               	movlw	5
   554  00A5BE  ECD6  F070         	call	_GetRSRBuf
   555  00A5C2  CFE8 F176          	movff	wreg,_RSDT1+82
   556                           ;smgs_rs9b.c: 163: RSDT1.inPRM=GetRSRBuf(6);
   557  00A5C6  0E06               	movlw	6
   558  00A5C8  ECD6  F070         	call	_GetRSRBuf
   559  00A5CC  CFE8 F177          	movff	wreg,_RSDT1+83
   560                           ;smgs_rs9b.c: 164: RSDT1.inDDTA=GetRSRBuf(7);
   561  00A5D0  0E07               	movlw	7
   562  00A5D2  ECD6  F070         	call	_GetRSRBuf
   563  00A5D6  CFE8 F178          	movff	wreg,_RSDT1+84
   564                           ;smgs_rs9b.c: 165: RSDT1.inMSTR=GetRSRBuf(8);
   565  00A5DA  0E08               	movlw	8
   566  00A5DC  ECD6  F070         	call	_GetRSRBuf
   567  00A5E0  CFE8 F179          	movff	wreg,_RSDT1+85
   568                           ;smgs_rs9b.c: 166: RSDT1.inMMAXU=GetRSRBuf(9);
   569  00A5E4  0E09               	movlw	9
   570  00A5E6  ECD6  F070         	call	_GetRSRBuf
   571  00A5EA  CFE8 F17A          	movff	wreg,_RSDT1+86
   572                           ;smgs_rs9b.c: 167: RSDT1.inMMAXG=GetRSRBuf(10);
   573  00A5EE  0E0A               	movlw	10
   574  00A5F0  ECD6  F070         	call	_GetRSRBuf
   575  00A5F4  CFE8 F17B          	movff	wreg,_RSDT1+87
   576                           ;smgs_rs9b.c: 168: RSDT1.inRGZ=GetRSRBuf(11);
   577  00A5F8  0E0B               	movlw	11
   578  00A5FA  ECD6  F070         	call	_GetRSRBuf
   579  00A5FE  CFE8 F17C          	movff	wreg,_RSDT1+88
   580                           ;smgs_rs9b.c: 169: RSDT1.inWANL=GetRSRBuf(12);
   581  00A602  0E0C               	movlw	12
   582  00A604  ECD6  F070         	call	_GetRSRBuf
   583  00A608  CFE8 F17D          	movff	wreg,_RSDT1+89
   584                           ;smgs_rs9b.c: 170: RSDT1.inTPKT=GetRSRBuf(13);
   585  00A60C  0E0D               	movlw	13
   586  00A60E  ECD6  F070         	call	_GetRSRBuf
   587  00A612  CFE8 F17E          	movff	wreg,_RSDT1+90
   588                           ;smgs_rs9b.c: 171: RSDT1.inWOBG=GetRSRBuf(14);
   589  00A616  0E0E               	movlw	14
   590  00A618  ECD6  F070         	call	_GetRSRBuf
   591  00A61C  CFE8 F17F          	movff	wreg,_RSDT1+91
   592                           ;smgs_rs9b.c: 172: RSDT1.inOPDG=GetRSRBuf(15);
   593  00A620  0E0F               	movlw	15
   594  00A622  ECD6  F070         	call	_GetRSRBuf
   595  00A626  CFE8 F180          	movff	wreg,_RSDT1+92
   596                           ;smgs_rs9b.c: 173: RSDT1.inTPCS=GetRSRBuf(16);
   597  00A62A  0E10               	movlw	16
   598  00A62C  ECD6  F070         	call	_GetRSRBuf
   599  00A630  CFE8 F181          	movff	wreg,_RSDT1+93
   600                           ;smgs_rs9b.c: 175: RSDT1.inRDPM=GetRSRBuf(17);
   601  00A634  0E11               	movlw	17
   602  00A636  ECD6  F070         	call	_GetRSRBuf
   603  00A63A  CFE8 F182          	movff	wreg,_RSDT1+94
   604                           ;smgs_rs9b.c: 176: RSDT1.inDTPM=GetRSRBuf(18);
   605  00A63E  0E12               	movlw	18
   606  00A640  ECD6  F070         	call	_GetRSRBuf
   607  00A644  CFE8 F183          	movff	wreg,_RSDT1+95
   608                           ;smgs_rs9b.c: 177: RSDT1.inMDPM=GetRSRBuf(19);
   609  00A648  0E13               	movlw	19
   610  00A64A  ECD6  F070         	call	_GetRSRBuf
   611  00A64E  CFE8 F184          	movff	wreg,_RSDT1+96
   612                           ;smgs_rs9b.c: 178: RSDT1.inMGPM=GetRSRBuf(20);
   613  00A652  0E14               	movlw	20
   614  00A654  ECD6  F070         	call	_GetRSRBuf
   615  00A658  CFE8 F185          	movff	wreg,_RSDT1+97
   616                           ;smgs_rs9b.c: 180: RSDT1.inMGPM2=GetRSRBuf(21);
   617  00A65C  0E15               	movlw	21
   618  00A65E  ECD6  F070         	call	_GetRSRBuf
   619  00A662  CFE8 F186          	movff	wreg,_RSDT1+98
   620                           ;smgs_rs9b.c: 181: RSDT1.inHSCO=GetRSRBuf(22);
   621  00A666  0E16               	movlw	22
   622  00A668  ECD6  F070         	call	_GetRSRBuf
   623  00A66C  CFE8 F187          	movff	wreg,_RSDT1+99
   624                           ;smgs_rs9b.c: 182: RSDT1.inCONW=GetRSRBuf(23);
   625  00A670  0E17               	movlw	23
   626  00A672  ECD6  F070         	call	_GetRSRBuf
   627  00A676  CFE8 F188          	movff	wreg,_RSDT1+100
   628                           ;smgs_rs9b.c: 183: RSDT1.inPROP=GetRSRBuf(24);
   629  00A67A  0E18               	movlw	24
   630  00A67C  ECD6  F070         	call	_GetRSRBuf
   631  00A680  CFE8 F189          	movff	wreg,_RSDT1+101
   632                           ;smgs_rs9b.c: 184: RSDT1.inPGMX=GetRSRBuf(25);
   633  00A684  0E19               	movlw	25
   634  00A686  ECD6  F070         	call	_GetRSRBuf
   635  00A68A  CFE8 F18A          	movff	wreg,_RSDT1+102
   636                           ;smgs_rs9b.c: 185: RSDT1.inPGDR=GetRSRBuf(26);
   637  00A68E  0E1A               	movlw	26
   638  00A690  ECD6  F070         	call	_GetRSRBuf
   639  00A694  CFE8 F18B          	movff	wreg,_RSDT1+103
   640                           ;smgs_rs9b.c: 186: RSDT1.inCWMG=GetRSRBuf(27);
   641  00A698  0E1B               	movlw	27
   642  00A69A  ECD6  F070         	call	_GetRSRBuf
   643  00A69E  CFE8 F18C          	movff	wreg,_RSDT1+104
   644                           ;smgs_rs9b.c: 187: RSDT1.inCWTM=GetRSRBuf(28);
   645  00A6A2  0E1C               	movlw	28
   646  00A6A4  ECD6  F070         	call	_GetRSRBuf
   647  00A6A8  CFE8 F18D          	movff	wreg,_RSDT1+105
   648                           ;smgs_rs9b.c: 188: RSDT1.RD_KNF=1;
   649  00A6AC  0101               	movlb	(_RSDT1+1) shr (0+8)
   650  00A6AE  8325               	bsf	(_RSDT1+1)& (0+255),1,b
   651                           ;smgs_rs9b.c: 189: }
   652  00A6B0  0012               	return	
   653  00A6B2                     l49:
   654                           ;smgs_rs9b.c: 191: }
   655                           ;smgs_rs9b.c: 195: {
   656  00A6B2  0101               	movlb	(_RSDT1+1) shr (0+8)
   657  00A6B4  9525               	bcf	(_RSDT1+1)& (0+255),2,b
   658                           ;smgs_rs9b.c: 198: RSDT1.inLIDN=GetRSRBuf(3);
   659  00A6B6  0E03               	movlw	3
   660  00A6B8  ECD6  F070         	call	_GetRSRBuf
   661  00A6BC  CFE8 F18E          	movff	wreg,_RSDT1+106
   662                           ;smgs_rs9b.c: 199: switch(RSDT1.inLIDN)
   663  00A6C0  D1F8               	goto	l51
   664  00A6C2                     l52:
   665                           ;smgs_rs9b.c: 200: {
   666                           ;smgs_rs9b.c: 203: {
   667  00A6C2  D20C               	goto	l50
   668  00A6C4                     l53:
   669                           ;smgs_rs9b.c: 205: }
   670                           ;smgs_rs9b.c: 207: {
   671  00A6C4  0E04               	movlw	4
   672  00A6C6  ECD6  F070         	call	_GetRSRBuf
   673  00A6CA  CFE8 F18F          	movff	wreg,_RSDT1+107
   674                           ;smgs_rs9b.c: 211: RSDT1.outPKERR=0;
   675  00A6CE  0101               	movlb	(_RSDT1+70) shr (0+8)
   676  00A6D0  6B6A               	clrf	(_RSDT1+70)& (0+255),b
   677                           ;smgs_rs9b.c: 212: if(RSDT1.inLDTA1<21)
   678  00A6D2  0E15               	movlw	21
   679  00A6D4  0101               	movlb	(_RSDT1+107) shr (0+8)
   680  00A6D6  618F               	cpfslt	(_RSDT1+107)& (0+255),b
   681  00A6D8  D1C3               	goto	l58
   682                           ;smgs_rs9b.c: 213: {
   683  00A6DA  C18F  FFE8         	movff	_RSDT1+107,wreg
   684  00A6DE  0D06               	mullw	6
   685  00A6E0  0E6B               	movlw	low _MinMax
   686  00A6E2  24F3               	addwf	prodl,w,c
   687  00A6E4  6EE9               	movwf	fsr0l,c
   688  00A6E6  0E00               	movlw	high _MinMax
   689  00A6E8  20F4               	addwfc	prodh,w,c
   690  00A6EA  6EEA               	movwf	fsr0h,c
   691  00A6EC  CFEE F0F9          	movff	postinc0,?_eeprom_read
   692  00A6F0  CFED F0FA          	movff	postdec0,?_eeprom_read+1
   693  00A6F4  ECA2  F078         	call	_eeprom_read	;wreg free
   694  00A6F8  CFE8 F168          	movff	wreg,_RSDT1+68
   695                           ;smgs_rs9b.c: 215: }
   696  00A6FC  D1EF               	goto	l50
   697                           ;smgs_rs9b.c: 216: else RSDT1.outPKERR=1;
   698                           ;smgs_rs9b.c: 217: break;
   699  00A6FE                     l56:
   700                           ;smgs_rs9b.c: 218: }
   701                           ;smgs_rs9b.c: 221: {
   702  00A6FE  0E04               	movlw	4
   703  00A700  ECD6  F070         	call	_GetRSRBuf
   704  00A704  CFE8 F18F          	movff	wreg,_RSDT1+107
   705                           ;smgs_rs9b.c: 223: RSDT1.inLDTA2=GetRSRBuf(5);
   706  00A708  0E05               	movlw	5
   707  00A70A  ECD6  F070         	call	_GetRSRBuf
   708  00A70E  CFE8 F190          	movff	wreg,_RSDT1+108
   709                           ;smgs_rs9b.c: 224: RSDT1.outPKERR=0;
   710  00A712  0101               	movlb	(_RSDT1+70) shr (0+8)
   711  00A714  6B6A               	clrf	(_RSDT1+70)& (0+255),b
   712                           ;smgs_rs9b.c: 225: if(RSDT1.inLDTA1<21)
   713  00A716  0E15               	movlw	21
   714  00A718  0101               	movlb	(_RSDT1+107) shr (0+8)
   715  00A71A  618F               	cpfslt	(_RSDT1+107)& (0+255),b
   716  00A71C  D1A1               	goto	l58
   717                           ;smgs_rs9b.c: 226: {
   718  00A71E  C18F  FFE8         	movff	_RSDT1+107,wreg
   719  00A722  0D06               	mullw	6
   720  00A724  0E6D               	movlw	low (_MinMax+2)
   721  00A726  24F3               	addwf	prodl,w,c
   722  00A728  6EE9               	movwf	fsr0l,c
   723  00A72A  0E00               	movlw	high (_MinMax+2)
   724  00A72C  20F4               	addwfc	prodh,w,c
   725  00A72E  6EEA               	movwf	fsr0h,c
   726  00A730  CFEE F002          	movff	postinc0,btemp+2
   727  00A734  CFED F003          	movff	postdec0,btemp+3
   728  00A738  C190  F000         	movff	_RSDT1+108,btemp
   729  00A73C  6A01               	clrf	btemp+1,c
   730  00A73E  5003               	movf	btemp+3,w,c
   731  00A740  5C01               	subwf	btemp+1,w,c
   732  00A742  E102               	bnz	u95
   733  00A744  5002               	movf	btemp+2,w,c
   734  00A746  5C00               	subwf	btemp,w,c
   735  00A748                     u95:
   736  00A748  E201 D18A          	bnc	l58
   737  00A74C  C190  F000         	movff	_RSDT1+108,btemp
   738  00A750  6A01               	clrf	btemp+1,c
   739  00A752  C18F  FFE8         	movff	_RSDT1+107,wreg
   740  00A756  0D06               	mullw	6
   741  00A758  0E6F               	movlw	low (_MinMax+4)
   742  00A75A  24F3               	addwf	prodl,w,c
   743  00A75C  6EE9               	movwf	fsr0l,c
   744  00A75E  0E00               	movlw	high (_MinMax+4)
   745  00A760  20F4               	addwfc	prodh,w,c
   746  00A762  6EEA               	movwf	fsr0h,c
   747  00A764  CFEE F002          	movff	postinc0,btemp+2
   748  00A768  CFED F003          	movff	postdec0,btemp+3
   749  00A76C  5001               	movf	btemp+1,w,c
   750  00A76E  5C03               	subwf	btemp+3,w,c
   751  00A770  E102               	bnz	u105
   752  00A772  5000               	movf	btemp,w,c
   753  00A774  5C02               	subwf	btemp+2,w,c
   754  00A776                     u105:
   755  00A776  E201 D173          	bnc	l58
   756  00A77A  D138               	goto	l60
   757                           ;smgs_rs9b.c: 228: {
   758  00A77C                     l61:
   759                           ;smgs_rs9b.c: 230: {
   760                           ;smgs_rs9b.c: 232: {
   761  00A77C  C18F  FFE8         	movff	_RSDT1+107,wreg
   762  00A780  0D06               	mullw	6
   763  00A782  0E6B               	movlw	low _MinMax
   764  00A784  24F3               	addwf	prodl,w,c
   765  00A786  6EE9               	movwf	fsr0l,c
   766  00A788  0E00               	movlw	high _MinMax
   767  00A78A  20F4               	addwfc	prodh,w,c
   768  00A78C  6EEA               	movwf	fsr0h,c
   769  00A78E  CFEE F0F9          	movff	postinc0,?_eeprom_read
   770  00A792  CFED F0FA          	movff	postdec0,?_eeprom_read+1
   771  00A796  ECA2  F078         	call	_eeprom_read	;wreg free
   772  00A79A  6E00               	movwf	btemp,c
   773  00A79C  C000  F002         	movff	btemp,btemp+2
   774  00A7A0  6A03               	clrf	btemp+3,c
   775  00A7A2  C190  FFE8         	movff	_RSDT1+108,wreg
   776  00A7A6  1802               	xorwf	btemp+2,w,c
   777  00A7A8  E101               	bnz	u125
   778  00A7AA  5203               	movf	btemp+3,f,c
   779  00A7AC                     u125:
   780  00A7AC  E101 D144          	bz	l59
   781                           ;smgs_rs9b.c: 234: {
   782  00A7B0  0E01               	movlw	1
   783  00A7B2  ECCC  F073         	call	_StartRTG
   784                           ;smgs_rs9b.c: 236: ClearEETA();
   785  00A7B6  ECF6  F04F         	call	_ClearEETA	;wreg free
   786                           ;smgs_rs9b.c: 237: eeprom_write(MinMax[RSDT1.inL
      +                          DTA1].addr,RSDT1.inLDTA2);
   787  00A7BA  C18F  FFE8         	movff	_RSDT1+107,wreg
   788  00A7BE  0D06               	mullw	6
   789  00A7C0  0E6B               	movlw	low _MinMax
   790  00A7C2  24F3               	addwf	prodl,w,c
   791  00A7C4  6EE9               	movwf	fsr0l,c
   792  00A7C6  0E00               	movlw	high _MinMax
   793  00A7C8  20F4               	addwfc	prodh,w,c
   794  00A7CA  6EEA               	movwf	fsr0h,c
   795  00A7CC  CFEE F0F9          	movff	postinc0,?_eeprom_write
   796  00A7D0  CFED F0FA          	movff	postdec0,?_eeprom_write+1
   797  00A7D4  C190  F0FB         	movff	_RSDT1+108,?_eeprom_write+2
   798  00A7D8  EC2F  F078         	call	_eeprom_write	;wreg free
   799                           ;smgs_rs9b.c: 238: }
   800  00A7DC  D12D               	goto	l59
   801  00A7DE                     l63:
   802                           ;smgs_rs9b.c: 240: }
   803                           ;smgs_rs9b.c: 242: {
   804  00A7DE  C18F  FFE8         	movff	_RSDT1+107,wreg
   805  00A7E2  0D06               	mullw	6
   806  00A7E4  0E6B               	movlw	low _MinMax
   807  00A7E6  24F3               	addwf	prodl,w,c
   808  00A7E8  6EE9               	movwf	fsr0l,c
   809  00A7EA  0E00               	movlw	high _MinMax
   810  00A7EC  20F4               	addwfc	prodh,w,c
   811  00A7EE  6EEA               	movwf	fsr0h,c
   812  00A7F0  CFEE F0F9          	movff	postinc0,?_eeprom_read
   813  00A7F4  CFED F0FA          	movff	postdec0,?_eeprom_read+1
   814  00A7F8  ECA2  F078         	call	_eeprom_read	;wreg free
   815  00A7FC  6E00               	movwf	btemp,c
   816  00A7FE  C000  F002         	movff	btemp,btemp+2
   817  00A802  6A03               	clrf	btemp+3,c
   818  00A804  C190  FFE8         	movff	_RSDT1+108,wreg
   819  00A808  1802               	xorwf	btemp+2,w,c
   820  00A80A  E101               	bnz	u135
   821  00A80C  5203               	movf	btemp+3,f,c
   822  00A80E                     u135:
   823  00A80E  E101 D113          	bz	l59
   824                           ;smgs_rs9b.c: 244: {
   825  00A812  EE00  F0B3         	lfsr	0,_MinMax+72
   826  00A816  CFEE F0F9          	movff	postinc0,?_eeprom_read
   827  00A81A  CFED F0FA          	movff	postdec0,?_eeprom_read+1
   828  00A81E  ECA2  F078         	call	_eeprom_read	;wreg free
   829  00A822  0100               	movlb	__Lparam shr (0+8)
   830  00A824  6FEC               	movwf	?a_SaveRSToData^(__Lparam& (0+65280)),b	;
      +                          volatile
   831                           ;smgs_rs9b.c: 246: if(RSDT1.inLDTA2>bf)
   832  00A826  C190  FFE8         	movff	_RSDT1+108,wreg
   833  00A82A  61EC               	cpfslt	?a_SaveRSToData^(__Lparam& (0+65280)),b	
      +                          ;volatile
   834  00A82C  D028               	goto	l65
   835                           ;smgs_rs9b.c: 247: {
   836  00A82E  C18F  FFE8         	movff	_RSDT1+107,wreg
   837  00A832  0D06               	mullw	6
   838  00A834  0E6D               	movlw	low (_MinMax+2)
   839  00A836  24F3               	addwf	prodl,w,c
   840  00A838  6EE9               	movwf	fsr0l,c
   841  00A83A  0E00               	movlw	high (_MinMax+2)
   842  00A83C  20F4               	addwfc	prodh,w,c
   843  00A83E  6EEA               	movwf	fsr0h,c
   844  00A840  CFEE F002          	movff	postinc0,btemp+2
   845  00A844  CFED F003          	movff	postdec0,btemp+3
   846  00A848  C0EC  F000         	movff	?a_SaveRSToData,btemp	;volatile
   847  00A84C  6A01               	clrf	btemp+1,c
   848  00A84E  5003               	movf	btemp+3,w,c
   849  00A850  5C01               	subwf	btemp+1,w,c
   850  00A852  E102               	bnz	u155
   851  00A854  5002               	movf	btemp+2,w,c
   852  00A856  5C00               	subwf	btemp,w,c
   853  00A858                     u155:
   854  00A858  E312               	bnc	l65
   855                           ;smgs_rs9b.c: 249: {
   856  00A85A  C18F  FFE8         	movff	_RSDT1+107,wreg
   857  00A85E  0D06               	mullw	6
   858  00A860  0E6B               	movlw	low _MinMax
   859  00A862  24F3               	addwf	prodl,w,c
   860  00A864  6EE9               	movwf	fsr0l,c
   861  00A866  0E00               	movlw	high _MinMax
   862  00A868  20F4               	addwfc	prodh,w,c
   863  00A86A  6EEA               	movwf	fsr0h,c
   864  00A86C  CFEE F0F9          	movff	postinc0,?_eeprom_write
   865  00A870  CFED F0FA          	movff	postdec0,?_eeprom_write+1
   866  00A874  51EC               	movf	?a_SaveRSToData^(__Lparam& (0+65280)),w	;v
      +                          olatile
   867  00A876  6FFB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
   868  00A878  EC2F  F078         	call	_eeprom_write	;wreg free
   869                           ;smgs_rs9b.c: 252: break;
   870  00A87C  D0DD               	goto	l59
   871  00A87E                     l65:
   872                           ;smgs_rs9b.c: 253: }
   873  00A87E  C18F  FFE8         	movff	_RSDT1+107,wreg
   874  00A882  0D06               	mullw	6
   875  00A884  0E6B               	movlw	low _MinMax
   876  00A886  24F3               	addwf	prodl,w,c
   877  00A888  6EE9               	movwf	fsr0l,c
   878  00A88A  0E00               	movlw	high _MinMax
   879  00A88C  20F4               	addwfc	prodh,w,c
   880  00A88E  6EEA               	movwf	fsr0h,c
   881  00A890  CFEE F0F9          	movff	postinc0,?_eeprom_write
   882  00A894  CFED F0FA          	movff	postdec0,?_eeprom_write+1
   883  00A898  C190  F0FB         	movff	_RSDT1+108,?_eeprom_write+2
   884  00A89C  EC2F  F078         	call	_eeprom_write	;wreg free
   885                           ;smgs_rs9b.c: 256: }
   886  00A8A0  D0CB               	goto	l59
   887  00A8A2                     l67:
   888                           ;smgs_rs9b.c: 258: }
   889                           ;smgs_rs9b.c: 260: {
   890  00A8A2  C18F  FFE8         	movff	_RSDT1+107,wreg
   891  00A8A6  0D06               	mullw	6
   892  00A8A8  0E6B               	movlw	low _MinMax
   893  00A8AA  24F3               	addwf	prodl,w,c
   894  00A8AC  6EE9               	movwf	fsr0l,c
   895  00A8AE  0E00               	movlw	high _MinMax
   896  00A8B0  20F4               	addwfc	prodh,w,c
   897  00A8B2  6EEA               	movwf	fsr0h,c
   898  00A8B4  CFEE F0F9          	movff	postinc0,?_eeprom_read
   899  00A8B8  CFED F0FA          	movff	postdec0,?_eeprom_read+1
   900  00A8BC  ECA2  F078         	call	_eeprom_read	;wreg free
   901  00A8C0  6E00               	movwf	btemp,c
   902  00A8C2  C000  F002         	movff	btemp,btemp+2
   903  00A8C6  6A03               	clrf	btemp+3,c
   904  00A8C8  C190  FFE8         	movff	_RSDT1+108,wreg
   905  00A8CC  1802               	xorwf	btemp+2,w,c
   906  00A8CE  E101               	bnz	u165
   907  00A8D0  5203               	movf	btemp+3,f,c
   908  00A8D2                     u165:
   909  00A8D2  E101 D0B1          	bz	l59
   910                           ;smgs_rs9b.c: 262: {
   911  00A8D6  EE00  F0AD         	lfsr	0,_MinMax+66
   912  00A8DA  CFEE F0F9          	movff	postinc0,?_eeprom_read
   913  00A8DE  CFED F0FA          	movff	postdec0,?_eeprom_read+1
   914  00A8E2  ECA2  F078         	call	_eeprom_read	;wreg free
   915  00A8E6  0100               	movlb	__Lparam shr (0+8)
   916  00A8E8  6FEC               	movwf	?a_SaveRSToData^(__Lparam& (0+65280)),b	;
      +                          volatile
   917                           ;smgs_rs9b.c: 264: if(RSDT1.inLDTA2<bf)
   918  00A8EA  51EC               	movf	?a_SaveRSToData^(__Lparam& (0+65280)),w	;v
      +                          olatile
   919  00A8EC  0101               	movlb	(_RSDT1+108) shr (0+8)
   920  00A8EE  6190               	cpfslt	(_RSDT1+108)& (0+255),b
   921  00A8F0  D029               	goto	l69
   922                           ;smgs_rs9b.c: 265: {
   923  00A8F2  C0EC  F000         	movff	?a_SaveRSToData,btemp	;volatile
   924  00A8F6  6A01               	clrf	btemp+1,c
   925  00A8F8  C18F  FFE8         	movff	_RSDT1+107,wreg
   926  00A8FC  0D06               	mullw	6
   927  00A8FE  0E6F               	movlw	low (_MinMax+4)
   928  00A900  24F3               	addwf	prodl,w,c
   929  00A902  6EE9               	movwf	fsr0l,c
   930  00A904  0E00               	movlw	high (_MinMax+4)
   931  00A906  20F4               	addwfc	prodh,w,c
   932  00A908  6EEA               	movwf	fsr0h,c
   933  00A90A  CFEE F002          	movff	postinc0,btemp+2
   934  00A90E  CFED F003          	movff	postdec0,btemp+3
   935  00A912  5001               	movf	btemp+1,w,c
   936  00A914  5C03               	subwf	btemp+3,w,c
   937  00A916  E102               	bnz	u185
   938  00A918  5000               	movf	btemp,w,c
   939  00A91A  5C02               	subwf	btemp+2,w,c
   940  00A91C                     u185:
   941  00A91C  E313               	bnc	l69
   942                           ;smgs_rs9b.c: 267: {
   943  00A91E  C18F  FFE8         	movff	_RSDT1+107,wreg
   944  00A922  0D06               	mullw	6
   945  00A924  0E6B               	movlw	low _MinMax
   946  00A926  24F3               	addwf	prodl,w,c
   947  00A928  6EE9               	movwf	fsr0l,c
   948  00A92A  0E00               	movlw	high _MinMax
   949  00A92C  20F4               	addwfc	prodh,w,c
   950  00A92E  6EEA               	movwf	fsr0h,c
   951  00A930  CFEE F0F9          	movff	postinc0,?_eeprom_write
   952  00A934  CFED F0FA          	movff	postdec0,?_eeprom_write+1
   953  00A938  0100               	movlb	__Lparam shr (0+8)
   954  00A93A  51EC               	movf	?a_SaveRSToData^(__Lparam& (0+65280)),w	;v
      +                          olatile
   955  00A93C  6FFB               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
   956  00A93E  EC2F  F078         	call	_eeprom_write	;wreg free
   957                           ;smgs_rs9b.c: 270: break;
   958  00A942  D07A               	goto	l59
   959  00A944                     l69:
   960                           ;smgs_rs9b.c: 271: }
   961  00A944  C18F  FFE8         	movff	_RSDT1+107,wreg
   962  00A948  0D06               	mullw	6
   963  00A94A  0E6B               	movlw	low _MinMax
   964  00A94C  24F3               	addwf	prodl,w,c
   965  00A94E  6EE9               	movwf	fsr0l,c
   966  00A950  0E00               	movlw	high _MinMax
   967  00A952  20F4               	addwfc	prodh,w,c
   968  00A954  6EEA               	movwf	fsr0h,c
   969  00A956  CFEE F0F9          	movff	postinc0,?_eeprom_write
   970  00A95A  CFED F0FA          	movff	postdec0,?_eeprom_write+1
   971  00A95E  C190  F0FB         	movff	_RSDT1+108,?_eeprom_write+2
   972  00A962  EC2F  F078         	call	_eeprom_write	;wreg free
   973                           ;smgs_rs9b.c: 274: }
   974  00A966  D068               	goto	l59
   975  00A968                     l71:
   976                           ;smgs_rs9b.c: 276: }
   977                           ;smgs_rs9b.c: 278: {
   978  00A968  C18F  FFE8         	movff	_RSDT1+107,wreg
   979  00A96C  0D06               	mullw	6
   980  00A96E  0E6B               	movlw	low _MinMax
   981  00A970  24F3               	addwf	prodl,w,c
   982  00A972  6EE9               	movwf	fsr0l,c
   983  00A974  0E00               	movlw	high _MinMax
   984  00A976  20F4               	addwfc	prodh,w,c
   985  00A978  6EEA               	movwf	fsr0h,c
   986  00A97A  CFEE F0F9          	movff	postinc0,?_eeprom_read
   987  00A97E  CFED F0FA          	movff	postdec0,?_eeprom_read+1
   988  00A982  ECA2  F078         	call	_eeprom_read	;wreg free
   989  00A986  6E00               	movwf	btemp,c
   990  00A988  C000  F002         	movff	btemp,btemp+2
   991  00A98C  6A03               	clrf	btemp+3,c
   992  00A98E  C190  FFE8         	movff	_RSDT1+108,wreg
   993  00A992  1802               	xorwf	btemp+2,w,c
   994  00A994  E101               	bnz	u195
   995  00A996  5203               	movf	btemp+3,f,c
   996  00A998                     u195:
   997  00A998  E04F               	bz	l59
   998                           ;smgs_rs9b.c: 280: {
   999  00A99A  C18F  FFE8         	movff	_RSDT1+107,wreg
  1000  00A99E  0D06               	mullw	6
  1001  00A9A0  0E6B               	movlw	low _MinMax
  1002  00A9A2  24F3               	addwf	prodl,w,c
  1003  00A9A4  6EE9               	movwf	fsr0l,c
  1004  00A9A6  0E00               	movlw	high _MinMax
  1005  00A9A8  20F4               	addwfc	prodh,w,c
  1006  00A9AA  6EEA               	movwf	fsr0h,c
  1007  00A9AC  CFEE F0F9          	movff	postinc0,?_eeprom_write
  1008  00A9B0  CFED F0FA          	movff	postdec0,?_eeprom_write+1
  1009  00A9B4  C190  F0FB         	movff	_RSDT1+108,?_eeprom_write+2
  1010  00A9B8  EC2F  F078         	call	_eeprom_write	;wreg free
  1011                           ;smgs_rs9b.c: 282: StartRTS(18);
  1012  00A9BC  0E12               	movlw	18
  1013  00A9BE  EC6F  F073         	call	_StartRTS
  1014                           ;smgs_rs9b.c: 283: M._SYNCH_PGD=1;
  1015  00A9C2  0101               	movlb	(_M+8) shr (0+8)
  1016  00A9C4  8108               	bsf	(_M+8)& (0+255),0,b
  1017                           ;smgs_rs9b.c: 284: }
  1018  00A9C6  D038               	goto	l59
  1019  00A9C8                     u200:
  1020  00A9C8  C18F  FFE8         	movff	_RSDT1+107,wreg
  1021  00A9CC  0D06               	mullw	6
  1022  00A9CE  0E6B               	movlw	low _MinMax
  1023  00A9D0  24F3               	addwf	prodl,w,c
  1024  00A9D2  6EE9               	movwf	fsr0l,c
  1025  00A9D4  0E00               	movlw	high _MinMax
  1026  00A9D6  20F4               	addwfc	prodh,w,c
  1027  00A9D8  6EEA               	movwf	fsr0h,c
  1028  00A9DA  CFEE F0F9          	movff	postinc0,?_eeprom_write
  1029  00A9DE  CFED F0FA          	movff	postdec0,?_eeprom_write+1
  1030  00A9E2  C190  F0FB         	movff	_RSDT1+108,?_eeprom_write+2
  1031  00A9E6  EC2F  F078         	call	_eeprom_write	;wreg free
  1032                           ;smgs_rs9b.c: 289: break;
  1033  00A9EA  D026               	goto	l59
  1034  00A9EC                     l60:
  1035  00A9EC  C18F  FFE8         	movff	_RSDT1+107,wreg
  1036  00A9F0  0A04               	xorlw	4
  1037  00A9F2  E101 D6C3          	bz	l61
  1038  00A9F6  0A0F               	xorlw	15
  1039  00A9F8  E101 D6F1          	bz	l63
  1040  00A9FC  0A07               	xorlw	7
  1041  00A9FE  E101 D750          	bz	l67
  1042  00AA02  0A1E               	xorlw	30
  1043  00AA04  E0B1               	bz	l71
  1044                           ;smgs_rs9b.c: 286: }
  1045                           ;smgs_rs9b.c: 288: if(RSDT1.inLDTA2!=eeprom_read
      +                          (MinMax[RSDT1.inLDTA1].addr)) eeprom_write(MinMa
      +                          x[RSDT1.inLDTA1].addr,RSDT1.inLDTA2);
  1046  00AA06  C18F  FFE8         	movff	_RSDT1+107,wreg
  1047  00AA0A  0D06               	mullw	6
  1048  00AA0C  0E6B               	movlw	low _MinMax
  1049  00AA0E  24F3               	addwf	prodl,w,c
  1050  00AA10  6EE9               	movwf	fsr0l,c
  1051  00AA12  0E00               	movlw	high _MinMax
  1052  00AA14  20F4               	addwfc	prodh,w,c
  1053  00AA16  6EEA               	movwf	fsr0h,c
  1054  00AA18  CFEE F0F9          	movff	postinc0,?_eeprom_read
  1055  00AA1C  CFED F0FA          	movff	postdec0,?_eeprom_read+1
  1056  00AA20  ECA2  F078         	call	_eeprom_read	;wreg free
  1057  00AA24  6E00               	movwf	btemp,c
  1058  00AA26  C000  F002         	movff	btemp,btemp+2
  1059  00AA2A  6A03               	clrf	btemp+3,c
  1060  00AA2C  C190  FFE8         	movff	_RSDT1+108,wreg
  1061  00AA30  1802               	xorwf	btemp+2,w,c
  1062  00AA32  E101               	bnz	u205
  1063  00AA34  5203               	movf	btemp+3,f,c
  1064  00AA36                     u205:
  1065  00AA36  E1C8               	bnz	u200
  1066  00AA38                     l59:
  1067                           ;smgs_rs9b.c: 291: RdEEParam();
  1068  00AA38  EC4F  F04D         	call	_RdEEParam	;wreg free
  1069                           ;smgs_rs9b.c: 292: RSDT1.outWPKNF=eeprom_read(Mi
      +                          nMax[RSDT1.inLDTA1].addr);
  1070  00AA3C  C18F  FFE8         	movff	_RSDT1+107,wreg
  1071  00AA40  0D06               	mullw	6
  1072  00AA42  0E6B               	movlw	low _MinMax
  1073  00AA44  24F3               	addwf	prodl,w,c
  1074  00AA46  6EE9               	movwf	fsr0l,c
  1075  00AA48  0E00               	movlw	high _MinMax
  1076  00AA4A  20F4               	addwfc	prodh,w,c
  1077  00AA4C  6EEA               	movwf	fsr0h,c
  1078  00AA4E  CFEE F0F9          	movff	postinc0,?_eeprom_read
  1079  00AA52  CFED F0FA          	movff	postdec0,?_eeprom_read+1
  1080  00AA56  ECA2  F078         	call	_eeprom_read	;wreg free
  1081  00AA5A  CFE8 F169          	movff	wreg,_RSDT1+69
  1082                           ;smgs_rs9b.c: 293: }else RSDT1.outPKERR=1;
  1083  00AA5E  D03E               	goto	l50
  1084  00AA60                     l58:
  1085  00AA60  0E01               	movlw	1
  1086  00AA62  CFE8 F16A          	movff	wreg,_RSDT1+70
  1087                           ;smgs_rs9b.c: 294: }else RSDT1.outPKERR=1;
  1088                           ;smgs_rs9b.c: 295: break;
  1089  00AA66                     l77:
  1090                           ;smgs_rs9b.c: 296: }
  1091                           ;smgs_rs9b.c: 298: {
  1092  00AA66  D03A               	goto	l50
  1093  00AA68                     l78:
  1094                           ;smgs_rs9b.c: 300: }
  1095                           ;smgs_rs9b.c: 302: {
  1096  00AA68  0E04               	movlw	4
  1097  00AA6A  ECD6  F070         	call	_GetRSRBuf
  1098  00AA6E  CFE8 F18F          	movff	wreg,_RSDT1+107
  1099                           ;smgs_rs9b.c: 304: break;
  1100  00AA72                     l79:
  1101                           ;smgs_rs9b.c: 305: }
  1102                           ;smgs_rs9b.c: 307: {
  1103  00AA72  D034               	goto	l50
  1104  00AA74                     l80:
  1105                           ;smgs_rs9b.c: 309: }
  1106                           ;smgs_rs9b.c: 311: {
  1107  00AA74  EC46  F073         	call	_ClrHFLG	;wreg free
  1108                           ;smgs_rs9b.c: 313: break;
  1109  00AA78  D031               	goto	l50
  1110  00AA7A                     l81:
  1111                           ;smgs_rs9b.c: 314: }
  1112                           ;smgs_rs9b.c: 316: {
  1113  00AA7A  0E04               	movlw	4
  1114  00AA7C  ECD6  F070         	call	_GetRSRBuf
  1115  00AA80  CFE8 F18F          	movff	wreg,_RSDT1+107
  1116                           ;smgs_rs9b.c: 318: if((RSDT1.inLDTA1>=1)&&(RSDT1
      +                          .inLDTA1<=5))
  1117  00AA84  0E00               	movlw	0
  1118  00AA86  0101               	movlb	(_RSDT1+107) shr (0+8)
  1119  00AA88  658F               	cpfsgt	(_RSDT1+107)& (0+255),b
  1120  00AA8A  D00C               	goto	l82
  1121  00AA8C  0E06               	movlw	6
  1122  00AA8E  618F               	cpfslt	(_RSDT1+107)& (0+255),b
  1123  00AA90  D009               	goto	l82
  1124                           ;smgs_rs9b.c: 319: {
  1125  00AA92  ECF0  F04F         	call	_ReadEEALIN	;wreg free
  1126  00AA96  0101               	movlb	(_RSDT1+107) shr (0+8)
  1127  00AA98  198F               	xorwf	(_RSDT1+107)& (0+255),w,b
  1128  00AA9A  E004               	bz	l82
  1129                           ;smgs_rs9b.c: 321: {
  1130  00AA9C  C18F  FFE8         	movff	_RSDT1+107,wreg
  1131  00AAA0  ECD8  F04F         	call	_WriteEEALIN
  1132  00AAA4                     l82:
  1133                           ;smgs_rs9b.c: 323: }
  1134  00AAA4  ECF0  F04F         	call	_ReadEEALIN	;wreg free
  1135  00AAA8  CFE8 F24B          	movff	wreg,_DtKNF+27
  1136                           ;smgs_rs9b.c: 326: RSDT1.outALIN=DtKNF.alin;
  1137  00AAAC  C24B  F167         	movff	_DtKNF+27,_RSDT1+67
  1138                           ;smgs_rs9b.c: 327: break;
  1139  00AAB0  D015               	goto	l50
  1140  00AAB2                     l51:
  1141  00AAB2  C18E  FFE8         	movff	_RSDT1+106,wreg
  1142  00AAB6  0A01               	xorlw	1
  1143  00AAB8  E101 D603          	bz	l52
  1144  00AABC  0A03               	xorlw	3
  1145  00AABE  E101 D601          	bz	l53
  1146  00AAC2  0A01               	xorlw	1
  1147  00AAC4  E0D0               	bz	l77
  1148  00AAC6  0A07               	xorlw	7
  1149  00AAC8  E0CF               	bz	l78
  1150  00AACA  0A01               	xorlw	1
  1151  00AACC  E0D2               	bz	l79
  1152  00AACE  0A7A               	xorlw	122
  1153  00AAD0  E0D4               	bz	l81
  1154  00AAD2  0AFF               	xorlw	255
  1155  00AAD4  E101 D613          	bz	l56
  1156  00AAD8  0A01               	xorlw	1
  1157  00AADA  E0CC               	bz	l80
  1158  00AADC                     l50:
  1159                           ;smgs_rs9b.c: 330: RSDT1.RD_LIN=1;
  1160  00AADC  0101               	movlb	(_RSDT1+1) shr (0+8)
  1161  00AADE  8525               	bsf	(_RSDT1+1)& (0+255),2,b
  1162                           ;smgs_rs9b.c: 331: break;
  1163  00AAE0  0012               	return	
  1164  00AAE2                     l18:
  1165  00AAE2  C124  FFE8         	movff	_RSDT1,wreg
  1166  00AAE6  0A01               	xorlw	1
  1167  00AAE8  E101 D446          	bz	l19
  1168  00AAEC  0A03               	xorlw	3
  1169  00AAEE  E101 D4B3          	bz	l29
  1170  00AAF2  0A01               	xorlw	1
  1171  00AAF4  E101 D5DD          	bz	l49
  1172  00AAF8  0A07               	xorlw	7
  1173  00AAFA  E101 D46B          	bz	l22
  1174  00AAFE  0A01               	xorlw	1
  1175  00AB00  E101 D53B          	bz	l39
  1176  00AB04  0012               	return	
  1177                           ;smgs_rs9b.c: 336: }
  1178  00AB06                     __end_of_SaveRSToData:
  1179                           ;smgs_rs9b.c: 339: void SaveDataToRS(unsigned ch
      +                          ar tDTA)
  1180                           ;smgs_rs9b.c: 340: {
  1181  00AB06                     _SaveDataToRS:
  1182  000000                     
  1183                           ; _tDTA loaded to fsr2l
  1184  00AB06  6ED9               	movwf	fsr2l,c
  1185                           ;smgs_rs9b.c: 341: volatile unsigned char ndat,i
      +                          ,nr;
  1186  00AB08  EFDB  F05A         	goto	l86
  1187  00AB0C                     l87:
  1188                           ;smgs_rs9b.c: 347: {
  1189                           ;smgs_rs9b.c: 349: {
  1190  00AB0C  0E04               	movlw	4
  1191  00AB0E  0100               	movlb	__Lparam shr (0+8)
  1192  00AB10  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1193                           ;smgs_rs9b.c: 351: chkndat=SetNDatCHK(ndat);
  1194  00AB12  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1195  00AB14  EC52  F071         	call	_SetNDatCHK
  1196  00AB18  0100               	movlb	__Lparam shr (0+8)
  1197  00AB1A  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  1198                           ;smgs_rs9b.c: 353: SetRSTBuf(0,0x01);
  1199  00AB1C  0E01               	movlw	1
  1200  00AB1E  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1201  00AB20  0E00               	movlw	0
  1202  00AB22  ECB7  F070         	call	_SetRSTBuf
  1203                           ;smgs_rs9b.c: 354: SetRSTBuf(1,chkndat);
  1204  00AB26  0100               	movlb	__Lparam shr (0+8)
  1205  00AB28  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  1206  00AB2A  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1207  00AB2C  0E01               	movlw	1
  1208  00AB2E  ECB7  F070         	call	_SetRSTBuf
  1209                           ;smgs_rs9b.c: 355: SetRSTBuf(2,0);
  1210  00AB32  0100               	movlb	__Lparam shr (0+8)
  1211  00AB34  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1212  00AB36  0E02               	movlw	2
  1213  00AB38  EFB7  F070         	goto	_SetRSTBuf
  1214                           ;smgs_rs9b.c: 357: break;
  1215  00AB3C                     l88:
  1216                           ;smgs_rs9b.c: 358: }
  1217                           ;smgs_rs9b.c: 360: {
  1218  00AB3C  0E1A               	movlw	26
  1219  00AB3E  0100               	movlb	__Lparam shr (0+8)
  1220  00AB40  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1221                           ;smgs_rs9b.c: 362: chkndat=SetNDatCHK(ndat);
  1222  00AB42  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1223  00AB44  EC52  F071         	call	_SetNDatCHK
  1224  00AB48  0100               	movlb	__Lparam shr (0+8)
  1225  00AB4A  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  1226                           ;smgs_rs9b.c: 364: SetRSTBuf(0,0x01);
  1227  00AB4C  0E01               	movlw	1
  1228  00AB4E  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1229  00AB50  0E00               	movlw	0
  1230  00AB52  ECB7  F070         	call	_SetRSTBuf
  1231                           ;smgs_rs9b.c: 365: SetRSTBuf(1,chkndat);
  1232  00AB56  0100               	movlb	__Lparam shr (0+8)
  1233  00AB58  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  1234  00AB5A  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1235  00AB5C  0E01               	movlw	1
  1236  00AB5E  ECB7  F070         	call	_SetRSTBuf
  1237                           ;smgs_rs9b.c: 366: SetRSTBuf(2,1);
  1238  00AB62  0E01               	movlw	1
  1239  00AB64  0100               	movlb	__Lparam shr (0+8)
  1240  00AB66  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1241  00AB68  0E02               	movlw	2
  1242  00AB6A  ECB7  F070         	call	_SetRSTBuf
  1243                           ;smgs_rs9b.c: 367: SetRSTBuf(3,RSDT1.outRDZ0);
  1244  00AB6E  C126  F0F1         	movff	_RSDT1+2,?_SetRSTBuf
  1245  00AB72  0E03               	movlw	3
  1246  00AB74  ECB7  F070         	call	_SetRSTBuf
  1247                           ;smgs_rs9b.c: 368: SetRSTBuf(4,RSDT1.outRDZ1);
  1248  00AB78  C127  F0F1         	movff	_RSDT1+3,?_SetRSTBuf
  1249  00AB7C  0E04               	movlw	4
  1250  00AB7E  ECB7  F070         	call	_SetRSTBuf
  1251                           ;smgs_rs9b.c: 369: SetRSTBuf(5,RSDT1.outSTAT0);
  1252  00AB82  C136  F0F1         	movff	_RSDT1+18,?_SetRSTBuf
  1253  00AB86  0E05               	movlw	5
  1254  00AB88  ECB7  F070         	call	_SetRSTBuf
  1255                           ;smgs_rs9b.c: 370: SetRSTBuf(6,RSDT1.outSTAT1);
  1256  00AB8C  C137  F0F1         	movff	_RSDT1+19,?_SetRSTBuf
  1257  00AB90  0E06               	movlw	6
  1258  00AB92  ECB7  F070         	call	_SetRSTBuf
  1259                           ;smgs_rs9b.c: 371: SetRSTBuf(7,RSDT1.outSTAT2);
  1260  00AB96  C138  F0F1         	movff	_RSDT1+20,?_SetRSTBuf
  1261  00AB9A  0E07               	movlw	7
  1262  00AB9C  ECB7  F070         	call	_SetRSTBuf
  1263                           ;smgs_rs9b.c: 372: SetRSTBuf(8,RSDT1.outCO);
  1264  00ABA0  C129  F0F1         	movff	_RSDT1+5,?_SetRSTBuf
  1265  00ABA4  0E08               	movlw	8
  1266  00ABA6  ECB7  F070         	call	_SetRSTBuf
  1267                           ;smgs_rs9b.c: 373: SetRSTBuf(9,RSDT1.outCW);
  1268  00ABAA  C12A  F0F1         	movff	_RSDT1+6,?_SetRSTBuf
  1269  00ABAE  0E09               	movlw	9
  1270  00ABB0  ECB7  F070         	call	_SetRSTBuf
  1271                           ;smgs_rs9b.c: 374: SetRSTBuf(10,RSDT1.outCS);
  1272  00ABB4  C12B  F0F1         	movff	_RSDT1+7,?_SetRSTBuf
  1273  00ABB8  0E0A               	movlw	10
  1274  00ABBA  ECB7  F070         	call	_SetRSTBuf
  1275                           ;smgs_rs9b.c: 375: SetRSTBuf(11,RSDT1.outPCO);
  1276  00ABBE  C12C  F0F1         	movff	_RSDT1+8,?_SetRSTBuf
  1277  00ABC2  0E0B               	movlw	11
  1278  00ABC4  ECB7  F070         	call	_SetRSTBuf
  1279                           ;smgs_rs9b.c: 376: SetRSTBuf(12,RSDT1.outPCOmn);
  1280  00ABC8  C12E  F0F1         	movff	_RSDT1+10,?_SetRSTBuf
  1281  00ABCC  0E0C               	movlw	12
  1282  00ABCE  ECB7  F070         	call	_SetRSTBuf
  1283                           ;smgs_rs9b.c: 377: SetRSTBuf(13,RSDT1.outPCOmx);
  1284  00ABD2  C12F  F0F1         	movff	_RSDT1+11,?_SetRSTBuf
  1285  00ABD6  0E0D               	movlw	13
  1286  00ABD8  ECB7  F070         	call	_SetRSTBuf
  1287                           ;smgs_rs9b.c: 378: SetRSTBuf(14,RSDT1.outPCW);
  1288  00ABDC  C12D  F0F1         	movff	_RSDT1+9,?_SetRSTBuf
  1289  00ABE0  0E0E               	movlw	14
  1290  00ABE2  ECB7  F070         	call	_SetRSTBuf
  1291                           ;smgs_rs9b.c: 379: SetRSTBuf(15,RSDT1.outPCWmn);
  1292  00ABE6  C130  F0F1         	movff	_RSDT1+12,?_SetRSTBuf
  1293  00ABEA  0E0F               	movlw	15
  1294  00ABEC  ECB7  F070         	call	_SetRSTBuf
  1295                           ;smgs_rs9b.c: 380: SetRSTBuf(16,RSDT1.outPCWmx);
  1296  00ABF0  C131  F0F1         	movff	_RSDT1+13,?_SetRSTBuf
  1297  00ABF4  0E10               	movlw	16
  1298  00ABF6  ECB7  F070         	call	_SetRSTBuf
  1299                           ;smgs_rs9b.c: 381: SetRSTBuf(17,RSDT1.outPPCO);
  1300  00ABFA  C132  F0F1         	movff	_RSDT1+14,?_SetRSTBuf
  1301  00ABFE  0E11               	movlw	17
  1302  00AC00  ECB7  F070         	call	_SetRSTBuf
  1303                           ;smgs_rs9b.c: 382: SetRSTBuf(18,RSDT1.outPPCW);
  1304  00AC04  C133  F0F1         	movff	_RSDT1+15,?_SetRSTBuf
  1305  00AC08  0E12               	movlw	18
  1306  00AC0A  ECB7  F070         	call	_SetRSTBuf
  1307                           ;smgs_rs9b.c: 383: SetRSTBuf(19,RSDT1.outERR);
  1308  00AC0E  C134  F0F1         	movff	_RSDT1+16,?_SetRSTBuf
  1309  00AC12  0E13               	movlw	19
  1310  00AC14  ECB7  F070         	call	_SetRSTBuf
  1311                           ;smgs_rs9b.c: 384: SetRSTBuf(20,RSDT1.outAWR);
  1312  00AC18  C135  F0F1         	movff	_RSDT1+17,?_SetRSTBuf
  1313  00AC1C  0E14               	movlw	20
  1314  00AC1E  ECB7  F070         	call	_SetRSTBuf
  1315                           ;smgs_rs9b.c: 386: SetRSTBuf(21,RSDT1.outSTAT3);
  1316  00AC22  C139  F0F1         	movff	_RSDT1+21,?_SetRSTBuf
  1317  00AC26  0E15               	movlw	21
  1318  00AC28  ECB7  F070         	call	_SetRSTBuf
  1319                           ;smgs_rs9b.c: 387: SetRSTBuf(22,RSDT1.outIN);
  1320  00AC2C  C13C  F0F1         	movff	_RSDT1+24,?_SetRSTBuf
  1321  00AC30  0E16               	movlw	22
  1322  00AC32  ECB7  F070         	call	_SetRSTBuf
  1323                           ;smgs_rs9b.c: 388: SetRSTBuf(23,RSDT1.outPP);
  1324  00AC36  C13D  F0F1         	movff	_RSDT1+25,?_SetRSTBuf
  1325  00AC3A  0E17               	movlw	23
  1326  00AC3C  ECB7  F070         	call	_SetRSTBuf
  1327                           ;smgs_rs9b.c: 389: SetRSTBuf(24,0x00);
  1328  00AC40  0100               	movlb	__Lparam shr (0+8)
  1329  00AC42  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1330  00AC44  0E18               	movlw	24
  1331  00AC46  ECB7  F070         	call	_SetRSTBuf
  1332  00AC4A  EFC1  F05A         	goto	L18
  1333                           ;smgs_rs9b.c: 390: SetRSCHK(ndat);
  1334                           ;smgs_rs9b.c: 392: break;
  1335  00AC4E                     l89:
  1336                           ;smgs_rs9b.c: 393: }
  1337                           ;smgs_rs9b.c: 395: {
  1338  00AC4E  0E23               	movlw	35
  1339  00AC50  0100               	movlb	__Lparam shr (0+8)
  1340  00AC52  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1341                           ;smgs_rs9b.c: 397: SetExNDatCHK(ndat);
  1342  00AC54  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1343  00AC56  EC71  F071         	call	_SetExNDatCHK
  1344                           ;smgs_rs9b.c: 398: SetRSTBuf(0,0x01);
  1345  00AC5A  0E01               	movlw	1
  1346  00AC5C  0100               	movlb	__Lparam shr (0+8)
  1347  00AC5E  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1348  00AC60  0E00               	movlw	0
  1349  00AC62  ECB7  F070         	call	_SetRSTBuf
  1350                           ;smgs_rs9b.c: 400: SetRSTBuf(2,4);
  1351  00AC66  0E04               	movlw	4
  1352  00AC68  0100               	movlb	__Lparam shr (0+8)
  1353  00AC6A  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1354  00AC6C  0E02               	movlw	2
  1355  00AC6E  ECB7  F070         	call	_SetRSTBuf
  1356                           ;smgs_rs9b.c: 402: SetRSTBuf(4,RSDT1.outRDZ0);
  1357  00AC72  C126  F0F1         	movff	_RSDT1+2,?_SetRSTBuf
  1358  00AC76  0E04               	movlw	4
  1359  00AC78  ECB7  F070         	call	_SetRSTBuf
  1360                           ;smgs_rs9b.c: 403: SetRSTBuf(5,RSDT1.outRDZ1);
  1361  00AC7C  C127  F0F1         	movff	_RSDT1+3,?_SetRSTBuf
  1362  00AC80  0E05               	movlw	5
  1363  00AC82  ECB7  F070         	call	_SetRSTBuf
  1364                           ;smgs_rs9b.c: 404: SetRSTBuf(6,RSDT1.outRDZ2);
  1365  00AC86  C128  F0F1         	movff	_RSDT1+4,?_SetRSTBuf
  1366  00AC8A  0E06               	movlw	6
  1367  00AC8C  ECB7  F070         	call	_SetRSTBuf
  1368                           ;smgs_rs9b.c: 405: SetRSTBuf(7,RSDT1.outSTAT0);
  1369  00AC90  C136  F0F1         	movff	_RSDT1+18,?_SetRSTBuf
  1370  00AC94  0E07               	movlw	7
  1371  00AC96  ECB7  F070         	call	_SetRSTBuf
  1372                           ;smgs_rs9b.c: 406: SetRSTBuf(8,RSDT1.outSTAT1);
  1373  00AC9A  C137  F0F1         	movff	_RSDT1+19,?_SetRSTBuf
  1374  00AC9E  0E08               	movlw	8
  1375  00ACA0  ECB7  F070         	call	_SetRSTBuf
  1376                           ;smgs_rs9b.c: 407: SetRSTBuf(9,RSDT1.outSTAT2);
  1377  00ACA4  C138  F0F1         	movff	_RSDT1+20,?_SetRSTBuf
  1378  00ACA8  0E09               	movlw	9
  1379  00ACAA  ECB7  F070         	call	_SetRSTBuf
  1380                           ;smgs_rs9b.c: 408: SetRSTBuf(10,RSDT1.outSTAT3);
  1381  00ACAE  C139  F0F1         	movff	_RSDT1+21,?_SetRSTBuf
  1382  00ACB2  0E0A               	movlw	10
  1383  00ACB4  ECB7  F070         	call	_SetRSTBuf
  1384                           ;smgs_rs9b.c: 409: SetRSTBuf(11,RSDT1.outSTAT4);
  1385  00ACB8  C13A  F0F1         	movff	_RSDT1+22,?_SetRSTBuf
  1386  00ACBC  0E0B               	movlw	11
  1387  00ACBE  ECB7  F070         	call	_SetRSTBuf
  1388                           ;smgs_rs9b.c: 410: SetRSTBuf(12,RSDT1.outSTAT5);
  1389  00ACC2  C13B  F0F1         	movff	_RSDT1+23,?_SetRSTBuf
  1390  00ACC6  0E0C               	movlw	12
  1391  00ACC8  ECB7  F070         	call	_SetRSTBuf
  1392                           ;smgs_rs9b.c: 411: SetRSTBuf(13,RSDT1.outCO);
  1393  00ACCC  C129  F0F1         	movff	_RSDT1+5,?_SetRSTBuf
  1394  00ACD0  0E0D               	movlw	13
  1395  00ACD2  ECB7  F070         	call	_SetRSTBuf
  1396                           ;smgs_rs9b.c: 412: SetRSTBuf(14,RSDT1.outCW);
  1397  00ACD6  C12A  F0F1         	movff	_RSDT1+6,?_SetRSTBuf
  1398  00ACDA  0E0E               	movlw	14
  1399  00ACDC  ECB7  F070         	call	_SetRSTBuf
  1400                           ;smgs_rs9b.c: 413: SetRSTBuf(15,RSDT1.outCS);
  1401  00ACE0  C12B  F0F1         	movff	_RSDT1+7,?_SetRSTBuf
  1402  00ACE4  0E0F               	movlw	15
  1403  00ACE6  ECB7  F070         	call	_SetRSTBuf
  1404                           ;smgs_rs9b.c: 414: SetRSTBuf(16,RSDT1.outIN);
  1405  00ACEA  C13C  F0F1         	movff	_RSDT1+24,?_SetRSTBuf
  1406  00ACEE  0E10               	movlw	16
  1407  00ACF0  ECB7  F070         	call	_SetRSTBuf
  1408                           ;smgs_rs9b.c: 415: SetRSTBuf(17,RSDT1.outPCO);
  1409  00ACF4  C12C  F0F1         	movff	_RSDT1+8,?_SetRSTBuf
  1410  00ACF8  0E11               	movlw	17
  1411  00ACFA  ECB7  F070         	call	_SetRSTBuf
  1412                           ;smgs_rs9b.c: 416: SetRSTBuf(18,RSDT1.outPCOmn);
  1413  00ACFE  C12E  F0F1         	movff	_RSDT1+10,?_SetRSTBuf
  1414  00AD02  0E12               	movlw	18
  1415  00AD04  ECB7  F070         	call	_SetRSTBuf
  1416                           ;smgs_rs9b.c: 417: SetRSTBuf(19,RSDT1.outPCOmx);
  1417  00AD08  C12F  F0F1         	movff	_RSDT1+11,?_SetRSTBuf
  1418  00AD0C  0E13               	movlw	19
  1419  00AD0E  ECB7  F070         	call	_SetRSTBuf
  1420                           ;smgs_rs9b.c: 418: SetRSTBuf(20,RSDT1.outPCW);
  1421  00AD12  C12D  F0F1         	movff	_RSDT1+9,?_SetRSTBuf
  1422  00AD16  0E14               	movlw	20
  1423  00AD18  ECB7  F070         	call	_SetRSTBuf
  1424                           ;smgs_rs9b.c: 419: SetRSTBuf(21,RSDT1.outPCWmn);
  1425  00AD1C  C130  F0F1         	movff	_RSDT1+12,?_SetRSTBuf
  1426  00AD20  0E15               	movlw	21
  1427  00AD22  ECB7  F070         	call	_SetRSTBuf
  1428                           ;smgs_rs9b.c: 420: SetRSTBuf(22,RSDT1.outPCWmx);
  1429  00AD26  C131  F0F1         	movff	_RSDT1+13,?_SetRSTBuf
  1430  00AD2A  0E16               	movlw	22
  1431  00AD2C  ECB7  F070         	call	_SetRSTBuf
  1432                           ;smgs_rs9b.c: 421: SetRSTBuf(23,RSDT1.outPPCO);
  1433  00AD30  C132  F0F1         	movff	_RSDT1+14,?_SetRSTBuf
  1434  00AD34  0E17               	movlw	23
  1435  00AD36  ECB7  F070         	call	_SetRSTBuf
  1436                           ;smgs_rs9b.c: 422: SetRSTBuf(24,RSDT1.outPPCW);
  1437  00AD3A  C133  F0F1         	movff	_RSDT1+15,?_SetRSTBuf
  1438  00AD3E  0E18               	movlw	24
  1439  00AD40  ECB7  F070         	call	_SetRSTBuf
  1440                           ;smgs_rs9b.c: 423: SetRSTBuf(25,RSDT1.outERR);
  1441  00AD44  C134  F0F1         	movff	_RSDT1+16,?_SetRSTBuf
  1442  00AD48  0E19               	movlw	25
  1443  00AD4A  ECB7  F070         	call	_SetRSTBuf
  1444                           ;smgs_rs9b.c: 424: SetRSTBuf(26,RSDT1.outAWR);
  1445  00AD4E  C135  F0F1         	movff	_RSDT1+17,?_SetRSTBuf
  1446  00AD52  0E1A               	movlw	26
  1447  00AD54  ECB7  F070         	call	_SetRSTBuf
  1448                           ;smgs_rs9b.c: 425: SetRSTBuf(27,RSDT1.outPP);
  1449  00AD58  C13D  F0F1         	movff	_RSDT1+25,?_SetRSTBuf
  1450  00AD5C  0E1B               	movlw	27
  1451  00AD5E  ECB7  F070         	call	_SetRSTBuf
  1452                           ;smgs_rs9b.c: 426: SetRSTBuf(28,RSDT1.outPG);
  1453  00AD62  C13E  F0F1         	movff	_RSDT1+26,?_SetRSTBuf
  1454  00AD66  0E1C               	movlw	28
  1455  00AD68  ECB7  F070         	call	_SetRSTBuf
  1456                           ;smgs_rs9b.c: 427: SetRSTBuf(29,RSDT1.outrCO);
  1457  00AD6C  C13F  F0F1         	movff	_RSDT1+27,?_SetRSTBuf
  1458  00AD70  0E1D               	movlw	29
  1459  00AD72  ECB7  F070         	call	_SetRSTBuf
  1460                           ;smgs_rs9b.c: 428: SetRSTBuf(30,RSDT1.outrCW);
  1461  00AD76  C140  F0F1         	movff	_RSDT1+28,?_SetRSTBuf
  1462  00AD7A  0E1E               	movlw	30
  1463  00AD7C  ECB7  F070         	call	_SetRSTBuf
  1464                           ;smgs_rs9b.c: 429: SetRSTBuf(31,RSDT1.outZW);
  1465  00AD80  C141  F0F1         	movff	_RSDT1+29,?_SetRSTBuf
  1466  00AD84  0E1F               	movlw	31
  1467  00AD86  ECB7  F070         	call	_SetRSTBuf
  1468                           ;smgs_rs9b.c: 430: SetRSTBuf(32,RSDT1.outSETPmin
      +                          );
  1469  00AD8A  C142  F0F1         	movff	_RSDT1+30,?_SetRSTBuf
  1470  00AD8E  0E20               	movlw	32
  1471  00AD90  ECB7  F070         	call	_SetRSTBuf
  1472                           ;smgs_rs9b.c: 431: SetRSTBuf(33,RSDT1.outSETPmax
      +                          );
  1473  00AD94  C143  F0F1         	movff	_RSDT1+31,?_SetRSTBuf
  1474  00AD98  0E21               	movlw	33
  1475  00AD9A  ECB7  F070         	call	_SetRSTBuf
  1476  00AD9E  D3F1               	goto	L18
  1477                           ;smgs_rs9b.c: 432: SetRSCHK(ndat);
  1478                           ;smgs_rs9b.c: 434: break;
  1479  00ADA0                     l90:
  1480                           ;smgs_rs9b.c: 435: }
  1481                           ;smgs_rs9b.c: 437: {
  1482  00ADA0  0E1F               	movlw	31
  1483  00ADA2  0100               	movlb	__Lparam shr (0+8)
  1484  00ADA4  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1485                           ;smgs_rs9b.c: 439: chkndat=SetNDatCHK(ndat);
  1486  00ADA6  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1487  00ADA8  EC52  F071         	call	_SetNDatCHK
  1488  00ADAC  0100               	movlb	__Lparam shr (0+8)
  1489  00ADAE  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  1490                           ;smgs_rs9b.c: 441: SetRSTBuf(0,0x01);
  1491  00ADB0  0E01               	movlw	1
  1492  00ADB2  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1493  00ADB4  0E00               	movlw	0
  1494  00ADB6  ECB7  F070         	call	_SetRSTBuf
  1495                           ;smgs_rs9b.c: 442: SetRSTBuf(1,chkndat);
  1496  00ADBA  0100               	movlb	__Lparam shr (0+8)
  1497  00ADBC  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  1498  00ADBE  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1499  00ADC0  0E01               	movlw	1
  1500  00ADC2  ECB7  F070         	call	_SetRSTBuf
  1501                           ;smgs_rs9b.c: 443: SetRSTBuf(2,2);
  1502  00ADC6  0E02               	movlw	2
  1503  00ADC8  0100               	movlb	__Lparam shr (0+8)
  1504  00ADCA  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1505  00ADCC  ECB7  F070         	call	_SetRSTBuf
  1506                           ;smgs_rs9b.c: 444: SetRSTBuf(3,RSDT1.outKSTAT0);
  1507  00ADD0  C145  F0F1         	movff	_RSDT1+33,?_SetRSTBuf
  1508  00ADD4  0E03               	movlw	3
  1509  00ADD6  ECB7  F070         	call	_SetRSTBuf
  1510                           ;smgs_rs9b.c: 445: SetRSTBuf(4,RSDT1.outMSTR);
  1511  00ADDA  C148  F0F1         	movff	_RSDT1+36,?_SetRSTBuf
  1512  00ADDE  0E04               	movlw	4
  1513  00ADE0  ECB7  F070         	call	_SetRSTBuf
  1514                           ;smgs_rs9b.c: 446: SetRSTBuf(5,0);
  1515  00ADE4  0100               	movlb	__Lparam shr (0+8)
  1516  00ADE6  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1517  00ADE8  0E05               	movlw	5
  1518  00ADEA  ECB7  F070         	call	_SetRSTBuf
  1519                           ;smgs_rs9b.c: 447: SetRSTBuf(6,99);
  1520  00ADEE  0E63               	movlw	99
  1521  00ADF0  0100               	movlb	__Lparam shr (0+8)
  1522  00ADF2  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1523  00ADF4  0E06               	movlw	6
  1524  00ADF6  ECB7  F070         	call	_SetRSTBuf
  1525                           ;smgs_rs9b.c: 448: SetRSTBuf(7,RSDT1.outMMAXU);
  1526  00ADFA  C14B  F0F1         	movff	_RSDT1+39,?_SetRSTBuf
  1527  00ADFE  0E07               	movlw	7
  1528  00AE00  ECB7  F070         	call	_SetRSTBuf
  1529                           ;smgs_rs9b.c: 449: SetRSTBuf(8,0);
  1530  00AE04  0100               	movlb	__Lparam shr (0+8)
  1531  00AE06  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1532  00AE08  0E08               	movlw	8
  1533  00AE0A  ECB7  F070         	call	_SetRSTBuf
  1534                           ;smgs_rs9b.c: 450: SetRSTBuf(9,99);
  1535  00AE0E  0E63               	movlw	99
  1536  00AE10  0100               	movlb	__Lparam shr (0+8)
  1537  00AE12  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1538  00AE14  0E09               	movlw	9
  1539  00AE16  ECB7  F070         	call	_SetRSTBuf
  1540                           ;smgs_rs9b.c: 451: SetRSTBuf(10,RSDT1.outMMAXG);
  1541  00AE1A  C14E  F0F1         	movff	_RSDT1+42,?_SetRSTBuf
  1542  00AE1E  0E0A               	movlw	10
  1543  00AE20  ECB7  F070         	call	_SetRSTBuf
  1544                           ;smgs_rs9b.c: 452: SetRSTBuf(11,0);
  1545  00AE24  0100               	movlb	__Lparam shr (0+8)
  1546  00AE26  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1547  00AE28  0E0B               	movlw	11
  1548  00AE2A  ECB7  F070         	call	_SetRSTBuf
  1549                           ;smgs_rs9b.c: 453: SetRSTBuf(12,99);
  1550  00AE2E  0E63               	movlw	99
  1551  00AE30  0100               	movlb	__Lparam shr (0+8)
  1552  00AE32  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1553  00AE34  0E0C               	movlw	12
  1554  00AE36  ECB7  F070         	call	_SetRSTBuf
  1555                           ;smgs_rs9b.c: 454: SetRSTBuf(13,RSDT1.outRGZ);
  1556  00AE3A  C151  F0F1         	movff	_RSDT1+45,?_SetRSTBuf
  1557  00AE3E  0E0D               	movlw	13
  1558  00AE40  ECB7  F070         	call	_SetRSTBuf
  1559                           ;smgs_rs9b.c: 455: SetRSTBuf(14,0);
  1560  00AE44  0100               	movlb	__Lparam shr (0+8)
  1561  00AE46  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1562  00AE48  0E0E               	movlw	14
  1563  00AE4A  ECB7  F070         	call	_SetRSTBuf
  1564                           ;smgs_rs9b.c: 456: SetRSTBuf(15,1);
  1565  00AE4E  0E01               	movlw	1
  1566  00AE50  0100               	movlb	__Lparam shr (0+8)
  1567  00AE52  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1568  00AE54  0E0F               	movlw	15
  1569  00AE56  ECB7  F070         	call	_SetRSTBuf
  1570                           ;smgs_rs9b.c: 457: SetRSTBuf(16,RSDT1.outWANL);
  1571  00AE5A  C154  F0F1         	movff	_RSDT1+48,?_SetRSTBuf
  1572  00AE5E  0E10               	movlw	16
  1573  00AE60  ECB7  F070         	call	_SetRSTBuf
  1574                           ;smgs_rs9b.c: 458: SetRSTBuf(17,RSDT1.outTPKT);
  1575  00AE64  C155  F0F1         	movff	_RSDT1+49,?_SetRSTBuf
  1576  00AE68  0E11               	movlw	17
  1577  00AE6A  ECB7  F070         	call	_SetRSTBuf
  1578                           ;smgs_rs9b.c: 459: SetRSTBuf(18,0);
  1579  00AE6E  0100               	movlb	__Lparam shr (0+8)
  1580  00AE70  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1581  00AE72  0E12               	movlw	18
  1582  00AE74  ECB7  F070         	call	_SetRSTBuf
  1583                           ;smgs_rs9b.c: 460: SetRSTBuf(19,3);
  1584  00AE78  0E03               	movlw	3
  1585  00AE7A  0100               	movlb	__Lparam shr (0+8)
  1586  00AE7C  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1587  00AE7E  0E13               	movlw	19
  1588  00AE80  ECB7  F070         	call	_SetRSTBuf
  1589                           ;smgs_rs9b.c: 461: SetRSTBuf(20,RSDT1.outWOBG);
  1590  00AE84  C158  F0F1         	movff	_RSDT1+52,?_SetRSTBuf
  1591  00AE88  0E14               	movlw	20
  1592  00AE8A  ECB7  F070         	call	_SetRSTBuf
  1593                           ;smgs_rs9b.c: 462: SetRSTBuf(21,RSDT1.outOPDG);
  1594  00AE8E  C159  F0F1         	movff	_RSDT1+53,?_SetRSTBuf
  1595  00AE92  0E15               	movlw	21
  1596  00AE94  ECB7  F070         	call	_SetRSTBuf
  1597                           ;smgs_rs9b.c: 463: SetRSTBuf(22,RSDT1.outTPCS);
  1598  00AE98  C15A  F0F1         	movff	_RSDT1+54,?_SetRSTBuf
  1599  00AE9C  0E16               	movlw	22
  1600  00AE9E  ECB7  F070         	call	_SetRSTBuf
  1601                           ;smgs_rs9b.c: 465: SetRSTBuf(23,RSDT1.outRDPM);
  1602  00AEA2  C15B  F0F1         	movff	_RSDT1+55,?_SetRSTBuf
  1603  00AEA6  0E17               	movlw	23
  1604  00AEA8  ECB7  F070         	call	_SetRSTBuf
  1605                           ;smgs_rs9b.c: 466: SetRSTBuf(24,RSDT1.outDTPM);
  1606  00AEAC  C15C  F0F1         	movff	_RSDT1+56,?_SetRSTBuf
  1607  00AEB0  0E18               	movlw	24
  1608  00AEB2  ECB7  F070         	call	_SetRSTBuf
  1609                           ;smgs_rs9b.c: 467: SetRSTBuf(25,RSDT1.outMDPM);
  1610  00AEB6  C15D  F0F1         	movff	_RSDT1+57,?_SetRSTBuf
  1611  00AEBA  0E19               	movlw	25
  1612  00AEBC  ECB7  F070         	call	_SetRSTBuf
  1613                           ;smgs_rs9b.c: 468: SetRSTBuf(26,RSDT1.outMGPM);
  1614  00AEC0  C15E  F0F1         	movff	_RSDT1+58,?_SetRSTBuf
  1615  00AEC4  0E1A               	movlw	26
  1616  00AEC6  ECB7  F070         	call	_SetRSTBuf
  1617                           ;smgs_rs9b.c: 470: SetRSTBuf(27,RSDT1.outMGPM2);
  1618  00AECA  C15F  F0F1         	movff	_RSDT1+59,?_SetRSTBuf
  1619  00AECE  0E1B               	movlw	27
  1620  00AED0  ECB7  F070         	call	_SetRSTBuf
  1621                           ;smgs_rs9b.c: 471: SetRSTBuf(28,RSDT1.outHSCO);
  1622  00AED4  C160  F0F1         	movff	_RSDT1+60,?_SetRSTBuf
  1623  00AED8  0E1C               	movlw	28
  1624  00AEDA  ECB7  F070         	call	_SetRSTBuf
  1625                           ;smgs_rs9b.c: 472: SetRSTBuf(29,RSDT1.outCONW);
  1626  00AEDE  C161  F0F1         	movff	_RSDT1+61,?_SetRSTBuf
  1627  00AEE2  0E1D               	movlw	29
  1628  00AEE4  ECB7  F070         	call	_SetRSTBuf
  1629  00AEE8  D34C               	goto	L18
  1630                           ;smgs_rs9b.c: 475: SetRSCHK(ndat);
  1631                           ;smgs_rs9b.c: 477: break;
  1632  00AEEA                     l91:
  1633                           ;smgs_rs9b.c: 478: }
  1634                           ;smgs_rs9b.c: 480: {
  1635  00AEEA  0E1D               	movlw	29
  1636  00AEEC  0100               	movlb	__Lparam shr (0+8)
  1637  00AEEE  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1638                           ;smgs_rs9b.c: 482: SetExNDatCHK(ndat);
  1639  00AEF0  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1640  00AEF2  EC71  F071         	call	_SetExNDatCHK
  1641                           ;smgs_rs9b.c: 483: SetRSTBuf(0,0x01);
  1642  00AEF6  0E01               	movlw	1
  1643  00AEF8  0100               	movlb	__Lparam shr (0+8)
  1644  00AEFA  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1645  00AEFC  0E00               	movlw	0
  1646  00AEFE  ECB7  F070         	call	_SetRSTBuf
  1647                           ;smgs_rs9b.c: 485: SetRSTBuf(2,5);
  1648  00AF02  0E05               	movlw	5
  1649  00AF04  0100               	movlb	__Lparam shr (0+8)
  1650  00AF06  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1651  00AF08  0E02               	movlw	2
  1652  00AF0A  ECB7  F070         	call	_SetRSTBuf
  1653                           ;smgs_rs9b.c: 487: SetRSTBuf(4,RSDT1.outKSTAT0);
  1654  00AF0E  C145  F0F1         	movff	_RSDT1+33,?_SetRSTBuf
  1655  00AF12  0E04               	movlw	4
  1656  00AF14  ECB7  F070         	call	_SetRSTBuf
  1657                           ;smgs_rs9b.c: 488: SetRSTBuf(5,RSDT1.outKRK);
  1658  00AF18  C146  F0F1         	movff	_RSDT1+34,?_SetRSTBuf
  1659  00AF1C  0E05               	movlw	5
  1660  00AF1E  ECB7  F070         	call	_SetRSTBuf
  1661                           ;smgs_rs9b.c: 489: SetRSTBuf(6,RSDT1.outPRM);
  1662  00AF22  C147  F0F1         	movff	_RSDT1+35,?_SetRSTBuf
  1663  00AF26  0E06               	movlw	6
  1664  00AF28  ECB7  F070         	call	_SetRSTBuf
  1665                           ;smgs_rs9b.c: 490: SetRSTBuf(7,RSDT1.outMSTR);
  1666  00AF2C  C148  F0F1         	movff	_RSDT1+36,?_SetRSTBuf
  1667  00AF30  0E07               	movlw	7
  1668  00AF32  ECB7  F070         	call	_SetRSTBuf
  1669                           ;smgs_rs9b.c: 491: SetRSTBuf(8,RSDT1.outMMAXU);
  1670  00AF36  C14B  F0F1         	movff	_RSDT1+39,?_SetRSTBuf
  1671  00AF3A  0E08               	movlw	8
  1672  00AF3C  ECB7  F070         	call	_SetRSTBuf
  1673                           ;smgs_rs9b.c: 492: SetRSTBuf(9,RSDT1.outMMAXG);
  1674  00AF40  C14E  F0F1         	movff	_RSDT1+42,?_SetRSTBuf
  1675  00AF44  0E09               	movlw	9
  1676  00AF46  ECB7  F070         	call	_SetRSTBuf
  1677                           ;smgs_rs9b.c: 493: SetRSTBuf(10,RSDT1.outRGZ);
  1678  00AF4A  C151  F0F1         	movff	_RSDT1+45,?_SetRSTBuf
  1679  00AF4E  0E0A               	movlw	10
  1680  00AF50  ECB7  F070         	call	_SetRSTBuf
  1681                           ;smgs_rs9b.c: 494: SetRSTBuf(11,RSDT1.outWANL);
  1682  00AF54  C154  F0F1         	movff	_RSDT1+48,?_SetRSTBuf
  1683  00AF58  0E0B               	movlw	11
  1684  00AF5A  ECB7  F070         	call	_SetRSTBuf
  1685                           ;smgs_rs9b.c: 495: SetRSTBuf(12,RSDT1.outTPKT);
  1686  00AF5E  C155  F0F1         	movff	_RSDT1+49,?_SetRSTBuf
  1687  00AF62  0E0C               	movlw	12
  1688  00AF64  ECB7  F070         	call	_SetRSTBuf
  1689                           ;smgs_rs9b.c: 496: SetRSTBuf(13,RSDT1.outWOBG);
  1690  00AF68  C158  F0F1         	movff	_RSDT1+52,?_SetRSTBuf
  1691  00AF6C  0E0D               	movlw	13
  1692  00AF6E  ECB7  F070         	call	_SetRSTBuf
  1693                           ;smgs_rs9b.c: 497: SetRSTBuf(14,RSDT1.outOPDG);
  1694  00AF72  C159  F0F1         	movff	_RSDT1+53,?_SetRSTBuf
  1695  00AF76  0E0E               	movlw	14
  1696  00AF78  ECB7  F070         	call	_SetRSTBuf
  1697                           ;smgs_rs9b.c: 498: SetRSTBuf(15,RSDT1.outTPCS);
  1698  00AF7C  C15A  F0F1         	movff	_RSDT1+54,?_SetRSTBuf
  1699  00AF80  0E0F               	movlw	15
  1700  00AF82  ECB7  F070         	call	_SetRSTBuf
  1701                           ;smgs_rs9b.c: 499: SetRSTBuf(16,RSDT1.outRDPM);
  1702  00AF86  C15B  F0F1         	movff	_RSDT1+55,?_SetRSTBuf
  1703  00AF8A  0E10               	movlw	16
  1704  00AF8C  ECB7  F070         	call	_SetRSTBuf
  1705                           ;smgs_rs9b.c: 500: SetRSTBuf(17,RSDT1.outDTPM);
  1706  00AF90  C15C  F0F1         	movff	_RSDT1+56,?_SetRSTBuf
  1707  00AF94  0E11               	movlw	17
  1708  00AF96  ECB7  F070         	call	_SetRSTBuf
  1709                           ;smgs_rs9b.c: 501: SetRSTBuf(18,RSDT1.outMDPM);
  1710  00AF9A  C15D  F0F1         	movff	_RSDT1+57,?_SetRSTBuf
  1711  00AF9E  0E12               	movlw	18
  1712  00AFA0  ECB7  F070         	call	_SetRSTBuf
  1713                           ;smgs_rs9b.c: 502: SetRSTBuf(19,RSDT1.outMGPM);
  1714  00AFA4  C15E  F0F1         	movff	_RSDT1+58,?_SetRSTBuf
  1715  00AFA8  0E13               	movlw	19
  1716  00AFAA  ECB7  F070         	call	_SetRSTBuf
  1717                           ;smgs_rs9b.c: 503: SetRSTBuf(20,RSDT1.outMGPM2);
  1718  00AFAE  C15F  F0F1         	movff	_RSDT1+59,?_SetRSTBuf
  1719  00AFB2  0E14               	movlw	20
  1720  00AFB4  ECB7  F070         	call	_SetRSTBuf
  1721                           ;smgs_rs9b.c: 504: SetRSTBuf(21,RSDT1.outHSCO);
  1722  00AFB8  C160  F0F1         	movff	_RSDT1+60,?_SetRSTBuf
  1723  00AFBC  0E15               	movlw	21
  1724  00AFBE  ECB7  F070         	call	_SetRSTBuf
  1725                           ;smgs_rs9b.c: 505: SetRSTBuf(22,RSDT1.outCONW);
  1726  00AFC2  C161  F0F1         	movff	_RSDT1+61,?_SetRSTBuf
  1727  00AFC6  0E16               	movlw	22
  1728  00AFC8  ECB7  F070         	call	_SetRSTBuf
  1729                           ;smgs_rs9b.c: 506: SetRSTBuf(23,RSDT1.outPROP);
  1730  00AFCC  C162  F0F1         	movff	_RSDT1+62,?_SetRSTBuf
  1731  00AFD0  0E17               	movlw	23
  1732  00AFD2  ECB7  F070         	call	_SetRSTBuf
  1733                           ;smgs_rs9b.c: 507: SetRSTBuf(24,RSDT1.outPGMX);
  1734  00AFD6  C163  F0F1         	movff	_RSDT1+63,?_SetRSTBuf
  1735  00AFDA  0E18               	movlw	24
  1736  00AFDC  ECB7  F070         	call	_SetRSTBuf
  1737                           ;smgs_rs9b.c: 508: SetRSTBuf(25,RSDT1.outPGDR);
  1738  00AFE0  C164  F0F1         	movff	_RSDT1+64,?_SetRSTBuf
  1739  00AFE4  0E19               	movlw	25
  1740  00AFE6  ECB7  F070         	call	_SetRSTBuf
  1741                           ;smgs_rs9b.c: 509: SetRSTBuf(26,RSDT1.outCWMG);
  1742  00AFEA  C165  F0F1         	movff	_RSDT1+65,?_SetRSTBuf
  1743  00AFEE  0E1A               	movlw	26
  1744  00AFF0  ECB7  F070         	call	_SetRSTBuf
  1745                           ;smgs_rs9b.c: 510: SetRSTBuf(27,RSDT1.outCWTM);
  1746  00AFF4  C166  F0F1         	movff	_RSDT1+66,?_SetRSTBuf
  1747  00AFF8  0E1B               	movlw	27
  1748  00AFFA  ECB7  F070         	call	_SetRSTBuf
  1749  00AFFE  D2C1               	goto	L18
  1750                           ;smgs_rs9b.c: 511: SetRSCHK(ndat);
  1751                           ;smgs_rs9b.c: 513: break;
  1752  00B000                     l92:
  1753                           ;smgs_rs9b.c: 514: }
  1754                           ;smgs_rs9b.c: 518: {
  1755  00B000  D2C4               	goto	l94
  1756  00B002                     l95:
  1757                           ;smgs_rs9b.c: 520: {
  1758                           ;smgs_rs9b.c: 560: {
  1759  00B002  0E07               	movlw	7
  1760  00B004  0100               	movlb	__Lparam shr (0+8)
  1761  00B006  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1762                           ;smgs_rs9b.c: 562: chkndat=SetNDatCHK(ndat);
  1763  00B008  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1764  00B00A  EC52  F071         	call	_SetNDatCHK
  1765  00B00E  0100               	movlb	__Lparam shr (0+8)
  1766  00B010  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  1767                           ;smgs_rs9b.c: 563: SetRSTBuf(0,0x01);
  1768  00B012  0E01               	movlw	1
  1769  00B014  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1770  00B016  0E00               	movlw	0
  1771  00B018  ECB7  F070         	call	_SetRSTBuf
  1772                           ;smgs_rs9b.c: 564: SetRSTBuf(1,chkndat);
  1773  00B01C  0100               	movlb	__Lparam shr (0+8)
  1774  00B01E  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  1775  00B020  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1776  00B022  0E01               	movlw	1
  1777  00B024  ECB7  F070         	call	_SetRSTBuf
  1778                           ;smgs_rs9b.c: 565: SetRSTBuf(2,3);
  1779  00B028  0E03               	movlw	3
  1780  00B02A  0100               	movlb	__Lparam shr (0+8)
  1781  00B02C  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1782  00B02E  0E02               	movlw	2
  1783  00B030  ECB7  F070         	call	_SetRSTBuf
  1784                           ;smgs_rs9b.c: 566: SetRSTBuf(3,2);
  1785  00B034  0E02               	movlw	2
  1786  00B036  0100               	movlb	__Lparam shr (0+8)
  1787  00B038  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1788  00B03A  0E03               	movlw	3
  1789  00B03C  ECB7  F070         	call	_SetRSTBuf
  1790                           ;smgs_rs9b.c: 567: SetRSTBuf(4,RSDT1.outRPKNF);
  1791  00B040  C168  F0F1         	movff	_RSDT1+68,?_SetRSTBuf
  1792  00B044  0E04               	movlw	4
  1793  00B046  ECB7  F070         	call	_SetRSTBuf
  1794                           ;smgs_rs9b.c: 568: SetRSTBuf(5,RSDT1.outPKERR);
  1795  00B04A  C16A  F0F1         	movff	_RSDT1+70,?_SetRSTBuf
  1796  00B04E  0E05               	movlw	5
  1797  00B050  ECB7  F070         	call	_SetRSTBuf
  1798                           ;smgs_rs9b.c: 569: SetRSCHK(ndat);
  1799  00B054  0100               	movlb	__Lparam shr (0+8)
  1800  00B056  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1801  00B058  EC0A  F071         	call	_SetRSCHK
  1802                           ;smgs_rs9b.c: 571: RSDT1.outPKERR=0;
  1803  00B05C  0101               	movlb	(_RSDT1+70) shr (0+8)
  1804  00B05E  6B6A               	clrf	(_RSDT1+70)& (0+255),b
  1805                           ;smgs_rs9b.c: 572: break;
  1806  00B060  0012               	return	
  1807  00B062                     l96:
  1808                           ;smgs_rs9b.c: 573: }
  1809                           ;smgs_rs9b.c: 575: {
  1810  00B062  0E07               	movlw	7
  1811  00B064  0100               	movlb	__Lparam shr (0+8)
  1812  00B066  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1813                           ;smgs_rs9b.c: 577: chkndat=SetNDatCHK(ndat);
  1814  00B068  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1815  00B06A  EC52  F071         	call	_SetNDatCHK
  1816  00B06E  0100               	movlb	__Lparam shr (0+8)
  1817  00B070  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  1818                           ;smgs_rs9b.c: 578: SetRSTBuf(0,0x01);
  1819  00B072  0E01               	movlw	1
  1820  00B074  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1821  00B076  0E00               	movlw	0
  1822  00B078  ECB7  F070         	call	_SetRSTBuf
  1823                           ;smgs_rs9b.c: 579: SetRSTBuf(1,chkndat);
  1824  00B07C  0100               	movlb	__Lparam shr (0+8)
  1825  00B07E  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  1826  00B080  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1827  00B082  0E01               	movlw	1
  1828  00B084  ECB7  F070         	call	_SetRSTBuf
  1829                           ;smgs_rs9b.c: 580: SetRSTBuf(2,3);
  1830  00B088  0E03               	movlw	3
  1831  00B08A  0100               	movlb	__Lparam shr (0+8)
  1832  00B08C  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1833  00B08E  0E02               	movlw	2
  1834  00B090  ECB7  F070         	call	_SetRSTBuf
  1835                           ;smgs_rs9b.c: 581: SetRSTBuf(3,128);
  1836  00B094  0E80               	movlw	128
  1837  00B096  0100               	movlb	__Lparam shr (0+8)
  1838  00B098  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1839  00B09A  0E03               	movlw	3
  1840  00B09C  ECB7  F070         	call	_SetRSTBuf
  1841                           ;smgs_rs9b.c: 582: SetRSTBuf(4,RSDT1.outWPKNF);
  1842  00B0A0  C169  F0F1         	movff	_RSDT1+69,?_SetRSTBuf
  1843  00B0A4  0E04               	movlw	4
  1844  00B0A6  ECB7  F070         	call	_SetRSTBuf
  1845                           ;smgs_rs9b.c: 583: SetRSTBuf(5,RSDT1.outPKERR);
  1846  00B0AA  C16A  F0F1         	movff	_RSDT1+70,?_SetRSTBuf
  1847  00B0AE  0E05               	movlw	5
  1848  00B0B0  ECB7  F070         	call	_SetRSTBuf
  1849                           ;smgs_rs9b.c: 584: SetRSCHK(ndat);
  1850  00B0B4  0100               	movlb	__Lparam shr (0+8)
  1851  00B0B6  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1852  00B0B8  EC0A  F071         	call	_SetRSCHK
  1853                           ;smgs_rs9b.c: 586: RSDT1.outPKERR=0;
  1854  00B0BC  0101               	movlb	(_RSDT1+70) shr (0+8)
  1855  00B0BE  6B6A               	clrf	(_RSDT1+70)& (0+255),b
  1856                           ;smgs_rs9b.c: 587: break;
  1857  00B0C0  0012               	return	
  1858  00B0C2                     l97:
  1859                           ;smgs_rs9b.c: 588: }
  1860                           ;smgs_rs9b.c: 590: {
  1861  00B0C2  0E0A               	movlw	10
  1862  00B0C4  0100               	movlb	__Lparam shr (0+8)
  1863  00B0C6  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1864                           ;smgs_rs9b.c: 592: chkndat=SetNDatCHK(ndat);
  1865  00B0C8  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1866  00B0CA  EC52  F071         	call	_SetNDatCHK
  1867  00B0CE  0100               	movlb	__Lparam shr (0+8)
  1868  00B0D0  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  1869                           ;smgs_rs9b.c: 593: SetRSTBuf(0,0x01);
  1870  00B0D2  0E01               	movlw	1
  1871  00B0D4  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1872  00B0D6  0E00               	movlw	0
  1873  00B0D8  ECB7  F070         	call	_SetRSTBuf
  1874                           ;smgs_rs9b.c: 594: SetRSTBuf(1,chkndat);
  1875  00B0DC  0100               	movlb	__Lparam shr (0+8)
  1876  00B0DE  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  1877  00B0E0  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1878  00B0E2  0E01               	movlw	1
  1879  00B0E4  ECB7  F070         	call	_SetRSTBuf
  1880                           ;smgs_rs9b.c: 595: SetRSTBuf(2,3);
  1881  00B0E8  0E03               	movlw	3
  1882  00B0EA  0100               	movlb	__Lparam shr (0+8)
  1883  00B0EC  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1884  00B0EE  0E02               	movlw	2
  1885  00B0F0  ECB7  F070         	call	_SetRSTBuf
  1886                           ;smgs_rs9b.c: 596: SetRSTBuf(3,3);
  1887  00B0F4  0E03               	movlw	3
  1888  00B0F6  0100               	movlb	__Lparam shr (0+8)
  1889  00B0F8  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1890  00B0FA  ECB7  F070         	call	_SetRSTBuf
  1891                           ;smgs_rs9b.c: 597: SetRSTBuf(4,ReadBtyHREF(0));
  1892  00B0FE  0E00               	movlw	0
  1893  00B100  EC20  F050         	call	_ReadBtyHREF
  1894  00B104  0100               	movlb	__Lparam shr (0+8)
  1895  00B106  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1896  00B108  0E04               	movlw	4
  1897  00B10A  ECB7  F070         	call	_SetRSTBuf
  1898                           ;smgs_rs9b.c: 598: SetRSTBuf(5,ReadBtyHREF(1));
  1899  00B10E  0E01               	movlw	1
  1900  00B110  EC20  F050         	call	_ReadBtyHREF
  1901  00B114  0100               	movlb	__Lparam shr (0+8)
  1902  00B116  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1903  00B118  0E05               	movlw	5
  1904  00B11A  ECB7  F070         	call	_SetRSTBuf
  1905                           ;smgs_rs9b.c: 599: SetRSTBuf(6,ReadBtyNZSTAT(0))
      +                          ;
  1906  00B11E  0E00               	movlw	0
  1907  00B120  EC38  F050         	call	_ReadBtyNZSTAT
  1908  00B124  0100               	movlb	__Lparam shr (0+8)
  1909  00B126  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1910  00B128  0E06               	movlw	6
  1911  00B12A  ECB7  F070         	call	_SetRSTBuf
  1912                           ;smgs_rs9b.c: 600: SetRSTBuf(7,ReadBtyNZSTAT(1))
      +                          ;
  1913  00B12E  0E01               	movlw	1
  1914  00B130  EC38  F050         	call	_ReadBtyNZSTAT
  1915  00B134  0100               	movlb	__Lparam shr (0+8)
  1916  00B136  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1917  00B138  0E07               	movlw	7
  1918  00B13A  ECB7  F070         	call	_SetRSTBuf
  1919                           ;smgs_rs9b.c: 601: SetRSTBuf(8,ReadBtyHFLG());
  1920  00B13E  EC1B  F050         	call	_ReadBtyHFLG	;wreg free
  1921  00B142  0100               	movlb	__Lparam shr (0+8)
  1922  00B144  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1923  00B146  0E08               	movlw	8
  1924  00B148  ECB7  F070         	call	_SetRSTBuf
  1925  00B14C  D21A               	goto	L18
  1926                           ;smgs_rs9b.c: 602: SetRSCHK(ndat);
  1927                           ;smgs_rs9b.c: 604: break;
  1928  00B14E                     l98:
  1929                           ;smgs_rs9b.c: 605: }
  1930                           ;smgs_rs9b.c: 607: {
  1931  00B14E  C18F  F0EE         	movff	_RSDT1+107,?a_SaveDataToRS+2	;volatile
  1932                           ;smgs_rs9b.c: 609: if(nr>4-1||(!ReadBtySTAT(nr,0
      +                          )&&!ReadBtySTAT(nr,1)))
  1933  00B152  0E03               	movlw	3
  1934  00B154  0100               	movlb	__Lparam shr (0+8)
  1935  00B156  65EE               	cpfsgt	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)
      +                          ),b	;volatile
  1936  00B158  D001               	goto	u251
  1937  00B15A  D00E               	goto	u290
  1938  00B15C                     u251:
  1939  00B15C  6BF4               	clrf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  1940  00B15E  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1941  00B160  EC59  F050         	call	_ReadBtySTAT
  1942  00B164  0A00               	xorlw	0
  1943  00B166  E132               	bnz	l99
  1944  00B168  0E01               	movlw	1
  1945  00B16A  0100               	movlb	__Lparam shr (0+8)
  1946  00B16C  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  1947  00B16E  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1948  00B170  EC59  F050         	call	_ReadBtySTAT
  1949  00B174  0A00               	xorlw	0
  1950  00B176  E12A               	bnz	l99
  1951  00B178                     u290:
  1952                           ;smgs_rs9b.c: 610: {
  1953  00B178  0E07               	movlw	7
  1954  00B17A  0100               	movlb	__Lparam shr (0+8)
  1955  00B17C  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1956                           ;smgs_rs9b.c: 612: chkndat=SetNDatCHK(ndat);
  1957  00B17E  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1958  00B180  EC52  F071         	call	_SetNDatCHK
  1959  00B184  0100               	movlb	__Lparam shr (0+8)
  1960  00B186  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  1961                           ;smgs_rs9b.c: 613: SetRSTBuf(0,0x01);
  1962  00B188  0E01               	movlw	1
  1963  00B18A  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1964  00B18C  0E00               	movlw	0
  1965  00B18E  ECB7  F070         	call	_SetRSTBuf
  1966                           ;smgs_rs9b.c: 614: SetRSTBuf(1,chkndat);
  1967  00B192  0100               	movlb	__Lparam shr (0+8)
  1968  00B194  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  1969  00B196  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1970  00B198  0E01               	movlw	1
  1971  00B19A  ECB7  F070         	call	_SetRSTBuf
  1972                           ;smgs_rs9b.c: 615: SetRSTBuf(2,3);
  1973  00B19E  0E03               	movlw	3
  1974  00B1A0  0100               	movlb	__Lparam shr (0+8)
  1975  00B1A2  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1976  00B1A4  0E02               	movlw	2
  1977  00B1A6  ECB7  F070         	call	_SetRSTBuf
  1978                           ;smgs_rs9b.c: 616: SetRSTBuf(3,4);
  1979  00B1AA  0E04               	movlw	4
  1980  00B1AC  0100               	movlb	__Lparam shr (0+8)
  1981  00B1AE  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1982  00B1B0  0E03               	movlw	3
  1983  00B1B2  ECB7  F070         	call	_SetRSTBuf
  1984                           ;smgs_rs9b.c: 617: SetRSTBuf(4,0);
  1985  00B1B6  0100               	movlb	__Lparam shr (0+8)
  1986  00B1B8  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1987  00B1BA  0E04               	movlw	4
  1988  00B1BC  ECB7  F070         	call	_SetRSTBuf
  1989                           ;smgs_rs9b.c: 618: SetRSTBuf(5,0);
  1990  00B1C0  0100               	movlb	__Lparam shr (0+8)
  1991  00B1C2  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1992  00B1C4  0E05               	movlw	5
  1993  00B1C6  ECB7  F070         	call	_SetRSTBuf
  1994                           ;smgs_rs9b.c: 619: }
  1995  00B1CA  D1DB               	goto	L18
  1996  00B1CC                     l99:
  1997                           ;smgs_rs9b.c: 620: else
  1998  00B1CC  0E1B               	movlw	27
  1999  00B1CE  0100               	movlb	__Lparam shr (0+8)
  2000  00B1D0  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2001                           ;smgs_rs9b.c: 623: chkndat=SetNDatCHK(ndat);
  2002  00B1D2  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2003  00B1D4  EC52  F071         	call	_SetNDatCHK
  2004  00B1D8  0100               	movlb	__Lparam shr (0+8)
  2005  00B1DA  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  2006                           ;smgs_rs9b.c: 624: SetRSTBuf(0,0x01);
  2007  00B1DC  0E01               	movlw	1
  2008  00B1DE  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2009  00B1E0  0E00               	movlw	0
  2010  00B1E2  ECB7  F070         	call	_SetRSTBuf
  2011                           ;smgs_rs9b.c: 625: SetRSTBuf(1,chkndat);
  2012  00B1E6  0100               	movlb	__Lparam shr (0+8)
  2013  00B1E8  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  2014  00B1EA  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2015  00B1EC  0E01               	movlw	1
  2016  00B1EE  ECB7  F070         	call	_SetRSTBuf
  2017                           ;smgs_rs9b.c: 626: SetRSTBuf(2,3);
  2018  00B1F2  0E03               	movlw	3
  2019  00B1F4  0100               	movlb	__Lparam shr (0+8)
  2020  00B1F6  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2021  00B1F8  0E02               	movlw	2
  2022  00B1FA  ECB7  F070         	call	_SetRSTBuf
  2023                           ;smgs_rs9b.c: 627: SetRSTBuf(3,4);
  2024  00B1FE  0E04               	movlw	4
  2025  00B200  0100               	movlb	__Lparam shr (0+8)
  2026  00B202  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2027  00B204  0E03               	movlw	3
  2028  00B206  ECB7  F070         	call	_SetRSTBuf
  2029                           ;smgs_rs9b.c: 628: SetRSTBuf(4,ReadBtySTAT(nr,0)
      +                          );
  2030  00B20A  0100               	movlb	__Lparam shr (0+8)
  2031  00B20C  6BF4               	clrf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2032  00B20E  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2033  00B210  EC59  F050         	call	_ReadBtySTAT
  2034  00B214  0100               	movlb	__Lparam shr (0+8)
  2035  00B216  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2036  00B218  0E04               	movlw	4
  2037  00B21A  ECB7  F070         	call	_SetRSTBuf
  2038                           ;smgs_rs9b.c: 629: SetRSTBuf(5,ReadBtySTAT(nr,1)
      +                          );
  2039  00B21E  0E01               	movlw	1
  2040  00B220  0100               	movlb	__Lparam shr (0+8)
  2041  00B222  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2042  00B224  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2043  00B226  EC59  F050         	call	_ReadBtySTAT
  2044  00B22A  0100               	movlb	__Lparam shr (0+8)
  2045  00B22C  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2046  00B22E  0E05               	movlw	5
  2047  00B230  ECB7  F070         	call	_SetRSTBuf
  2048                           ;smgs_rs9b.c: 630: SetRSTBuf(6,ReadBtySTAT(nr,2)
      +                          );
  2049  00B234  0E02               	movlw	2
  2050  00B236  0100               	movlb	__Lparam shr (0+8)
  2051  00B238  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2052  00B23A  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2053  00B23C  EC59  F050         	call	_ReadBtySTAT
  2054  00B240  0100               	movlb	__Lparam shr (0+8)
  2055  00B242  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2056  00B244  0E06               	movlw	6
  2057  00B246  ECB7  F070         	call	_SetRSTBuf
  2058                           ;smgs_rs9b.c: 631: SetRSTBuf(7,ReadBtySTAT(nr,3)
      +                          );
  2059  00B24A  0E03               	movlw	3
  2060  00B24C  0100               	movlb	__Lparam shr (0+8)
  2061  00B24E  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2062  00B250  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2063  00B252  EC59  F050         	call	_ReadBtySTAT
  2064  00B256  0100               	movlb	__Lparam shr (0+8)
  2065  00B258  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2066  00B25A  0E07               	movlw	7
  2067  00B25C  ECB7  F070         	call	_SetRSTBuf
  2068                           ;smgs_rs9b.c: 632: SetRSTBuf(8,ReadBtySTAT(nr,4)
      +                          );
  2069  00B260  0E04               	movlw	4
  2070  00B262  0100               	movlb	__Lparam shr (0+8)
  2071  00B264  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2072  00B266  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2073  00B268  EC59  F050         	call	_ReadBtySTAT
  2074  00B26C  0100               	movlb	__Lparam shr (0+8)
  2075  00B26E  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2076  00B270  0E08               	movlw	8
  2077  00B272  ECB7  F070         	call	_SetRSTBuf
  2078                           ;smgs_rs9b.c: 633: SetRSTBuf(9,ReadBtySTAT(nr,5)
      +                          );
  2079  00B276  0E05               	movlw	5
  2080  00B278  0100               	movlb	__Lparam shr (0+8)
  2081  00B27A  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2082  00B27C  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2083  00B27E  EC59  F050         	call	_ReadBtySTAT
  2084  00B282  0100               	movlb	__Lparam shr (0+8)
  2085  00B284  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2086  00B286  0E09               	movlw	9
  2087  00B288  ECB7  F070         	call	_SetRSTBuf
  2088                           ;smgs_rs9b.c: 634: SetRSTBuf(10,ReadBtySTAT(nr,6
      +                          ));
  2089  00B28C  0E06               	movlw	6
  2090  00B28E  0100               	movlb	__Lparam shr (0+8)
  2091  00B290  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2092  00B292  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2093  00B294  EC59  F050         	call	_ReadBtySTAT
  2094  00B298  0100               	movlb	__Lparam shr (0+8)
  2095  00B29A  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2096  00B29C  0E0A               	movlw	10
  2097  00B29E  ECB7  F070         	call	_SetRSTBuf
  2098                           ;smgs_rs9b.c: 635: SetRSTBuf(11,ReadBtySTAT(nr,7
      +                          ));
  2099  00B2A2  0E07               	movlw	7
  2100  00B2A4  0100               	movlb	__Lparam shr (0+8)
  2101  00B2A6  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2102  00B2A8  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2103  00B2AA  EC59  F050         	call	_ReadBtySTAT
  2104  00B2AE  0100               	movlb	__Lparam shr (0+8)
  2105  00B2B0  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2106  00B2B2  0E0B               	movlw	11
  2107  00B2B4  ECB7  F070         	call	_SetRSTBuf
  2108                           ;smgs_rs9b.c: 636: SetRSTBuf(12,ReadBtySTAT(nr,8
      +                          ));
  2109  00B2B8  0E08               	movlw	8
  2110  00B2BA  0100               	movlb	__Lparam shr (0+8)
  2111  00B2BC  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2112  00B2BE  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2113  00B2C0  EC59  F050         	call	_ReadBtySTAT
  2114  00B2C4  0100               	movlb	__Lparam shr (0+8)
  2115  00B2C6  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2116  00B2C8  0E0C               	movlw	12
  2117  00B2CA  ECB7  F070         	call	_SetRSTBuf
  2118                           ;smgs_rs9b.c: 637: SetRSTBuf(13,ReadBtySTAT(nr,9
      +                          ));
  2119  00B2CE  0E09               	movlw	9
  2120  00B2D0  0100               	movlb	__Lparam shr (0+8)
  2121  00B2D2  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2122  00B2D4  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2123  00B2D6  EC59  F050         	call	_ReadBtySTAT
  2124  00B2DA  0100               	movlb	__Lparam shr (0+8)
  2125  00B2DC  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2126  00B2DE  0E0D               	movlw	13
  2127  00B2E0  ECB7  F070         	call	_SetRSTBuf
  2128                           ;smgs_rs9b.c: 638: SetRSTBuf(14,ReadBtySTAT(nr,1
      +                          0));
  2129  00B2E4  0E0A               	movlw	10
  2130  00B2E6  0100               	movlb	__Lparam shr (0+8)
  2131  00B2E8  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2132  00B2EA  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2133  00B2EC  EC59  F050         	call	_ReadBtySTAT
  2134  00B2F0  0100               	movlb	__Lparam shr (0+8)
  2135  00B2F2  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2136  00B2F4  0E0E               	movlw	14
  2137  00B2F6  ECB7  F070         	call	_SetRSTBuf
  2138                           ;smgs_rs9b.c: 639: SetRSTBuf(15,ReadBtySTAT(nr,1
      +                          1));
  2139  00B2FA  0E0B               	movlw	11
  2140  00B2FC  0100               	movlb	__Lparam shr (0+8)
  2141  00B2FE  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2142  00B300  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2143  00B302  EC59  F050         	call	_ReadBtySTAT
  2144  00B306  0100               	movlb	__Lparam shr (0+8)
  2145  00B308  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2146  00B30A  0E0F               	movlw	15
  2147  00B30C  ECB7  F070         	call	_SetRSTBuf
  2148                           ;smgs_rs9b.c: 640: SetRSTBuf(16,ReadBtySTAT(nr,1
      +                          2));
  2149  00B310  0E0C               	movlw	12
  2150  00B312  0100               	movlb	__Lparam shr (0+8)
  2151  00B314  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2152  00B316  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2153  00B318  EC59  F050         	call	_ReadBtySTAT
  2154  00B31C  0100               	movlb	__Lparam shr (0+8)
  2155  00B31E  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2156  00B320  0E10               	movlw	16
  2157  00B322  ECB7  F070         	call	_SetRSTBuf
  2158                           ;smgs_rs9b.c: 641: SetRSTBuf(17,ReadBtySTAT(nr,1
      +                          3));
  2159  00B326  0E0D               	movlw	13
  2160  00B328  0100               	movlb	__Lparam shr (0+8)
  2161  00B32A  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2162  00B32C  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2163  00B32E  EC59  F050         	call	_ReadBtySTAT
  2164  00B332  0100               	movlb	__Lparam shr (0+8)
  2165  00B334  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2166  00B336  0E11               	movlw	17
  2167  00B338  ECB7  F070         	call	_SetRSTBuf
  2168                           ;smgs_rs9b.c: 642: SetRSTBuf(18,ReadBtySTAT(nr,1
      +                          4));
  2169  00B33C  0E0E               	movlw	14
  2170  00B33E  0100               	movlb	__Lparam shr (0+8)
  2171  00B340  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2172  00B342  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2173  00B344  EC59  F050         	call	_ReadBtySTAT
  2174  00B348  0100               	movlb	__Lparam shr (0+8)
  2175  00B34A  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2176  00B34C  0E12               	movlw	18
  2177  00B34E  ECB7  F070         	call	_SetRSTBuf
  2178                           ;smgs_rs9b.c: 643: SetRSTBuf(19,ReadBtySTAT(nr,1
      +                          5));
  2179  00B352  0E0F               	movlw	15
  2180  00B354  0100               	movlb	__Lparam shr (0+8)
  2181  00B356  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2182  00B358  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2183  00B35A  EC59  F050         	call	_ReadBtySTAT
  2184  00B35E  0100               	movlb	__Lparam shr (0+8)
  2185  00B360  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2186  00B362  0E13               	movlw	19
  2187  00B364  ECB7  F070         	call	_SetRSTBuf
  2188                           ;smgs_rs9b.c: 644: SetRSTBuf(20,ReadBtySTAT(nr,1
      +                          6));
  2189  00B368  0E10               	movlw	16
  2190  00B36A  0100               	movlb	__Lparam shr (0+8)
  2191  00B36C  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2192  00B36E  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2193  00B370  EC59  F050         	call	_ReadBtySTAT
  2194  00B374  0100               	movlb	__Lparam shr (0+8)
  2195  00B376  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2196  00B378  0E14               	movlw	20
  2197  00B37A  ECB7  F070         	call	_SetRSTBuf
  2198                           ;smgs_rs9b.c: 645: SetRSTBuf(21,ReadBtySTAT(nr,1
      +                          7));
  2199  00B37E  0E11               	movlw	17
  2200  00B380  0100               	movlb	__Lparam shr (0+8)
  2201  00B382  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2202  00B384  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2203  00B386  EC59  F050         	call	_ReadBtySTAT
  2204  00B38A  0100               	movlb	__Lparam shr (0+8)
  2205  00B38C  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2206  00B38E  0E15               	movlw	21
  2207  00B390  ECB7  F070         	call	_SetRSTBuf
  2208                           ;smgs_rs9b.c: 646: SetRSTBuf(22,ReadBtySTAT(nr,1
      +                          8));
  2209  00B394  0E12               	movlw	18
  2210  00B396  0100               	movlb	__Lparam shr (0+8)
  2211  00B398  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2212  00B39A  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2213  00B39C  EC59  F050         	call	_ReadBtySTAT
  2214  00B3A0  0100               	movlb	__Lparam shr (0+8)
  2215  00B3A2  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2216  00B3A4  0E16               	movlw	22
  2217  00B3A6  ECB7  F070         	call	_SetRSTBuf
  2218                           ;smgs_rs9b.c: 647: SetRSTBuf(23,ReadBtySTAT(nr,1
      +                          9));
  2219  00B3AA  0E13               	movlw	19
  2220  00B3AC  0100               	movlb	__Lparam shr (0+8)
  2221  00B3AE  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2222  00B3B0  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2223  00B3B2  EC59  F050         	call	_ReadBtySTAT
  2224  00B3B6  0100               	movlb	__Lparam shr (0+8)
  2225  00B3B8  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2226  00B3BA  0E17               	movlw	23
  2227  00B3BC  ECB7  F070         	call	_SetRSTBuf
  2228                           ;smgs_rs9b.c: 648: SetRSTBuf(24,ReadBtySTAT(nr,2
      +                          0));
  2229  00B3C0  0E14               	movlw	20
  2230  00B3C2  0100               	movlb	__Lparam shr (0+8)
  2231  00B3C4  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2232  00B3C6  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2233  00B3C8  EC59  F050         	call	_ReadBtySTAT
  2234  00B3CC  0100               	movlb	__Lparam shr (0+8)
  2235  00B3CE  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2236  00B3D0  0E18               	movlw	24
  2237  00B3D2  ECB7  F070         	call	_SetRSTBuf
  2238                           ;smgs_rs9b.c: 649: SetRSTBuf(25,ReadBtySTAT(nr,2
      +                          1));
  2239  00B3D6  0E15               	movlw	21
  2240  00B3D8  0100               	movlb	__Lparam shr (0+8)
  2241  00B3DA  6FF4               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2242  00B3DC  51EE               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2243  00B3DE  EC59  F050         	call	_ReadBtySTAT
  2244  00B3E2  0100               	movlb	__Lparam shr (0+8)
  2245  00B3E4  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2246  00B3E6  0E19               	movlw	25
  2247  00B3E8  ECB7  F070         	call	_SetRSTBuf
  2248  00B3EC  D0CA               	goto	L18
  2249                           ;smgs_rs9b.c: 650: }
  2250                           ;smgs_rs9b.c: 653: break;
  2251  00B3EE                     l101:
  2252                           ;smgs_rs9b.c: 654: }
  2253                           ;smgs_rs9b.c: 656: {
  2254  00B3EE  EC18  F050         	call	_ReadBtyHNPZ	;wreg free
  2255  00B3F2  0900               	iorlw	0
  2256  00B3F4  E12F               	bnz	l102
  2257                           ;smgs_rs9b.c: 658: {
  2258  00B3F6  0E08               	movlw	8
  2259  00B3F8  0100               	movlb	__Lparam shr (0+8)
  2260  00B3FA  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2261                           ;smgs_rs9b.c: 660: chkndat=SetNDatCHK(ndat);
  2262  00B3FC  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2263  00B3FE  EC52  F071         	call	_SetNDatCHK
  2264  00B402  0100               	movlb	__Lparam shr (0+8)
  2265  00B404  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  2266                           ;smgs_rs9b.c: 661: SetRSTBuf(0,0x01);
  2267  00B406  0E01               	movlw	1
  2268  00B408  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2269  00B40A  0E00               	movlw	0
  2270  00B40C  ECB7  F070         	call	_SetRSTBuf
  2271                           ;smgs_rs9b.c: 662: SetRSTBuf(1,chkndat);
  2272  00B410  0100               	movlb	__Lparam shr (0+8)
  2273  00B412  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  2274  00B414  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2275  00B416  0E01               	movlw	1
  2276  00B418  ECB7  F070         	call	_SetRSTBuf
  2277                           ;smgs_rs9b.c: 663: SetRSTBuf(2,3);
  2278  00B41C  0E03               	movlw	3
  2279  00B41E  0100               	movlb	__Lparam shr (0+8)
  2280  00B420  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2281  00B422  0E02               	movlw	2
  2282  00B424  ECB7  F070         	call	_SetRSTBuf
  2283                           ;smgs_rs9b.c: 664: SetRSTBuf(3,5);
  2284  00B428  0E05               	movlw	5
  2285  00B42A  0100               	movlb	__Lparam shr (0+8)
  2286  00B42C  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2287  00B42E  0E03               	movlw	3
  2288  00B430  ECB7  F070         	call	_SetRSTBuf
  2289                           ;smgs_rs9b.c: 665: SetRSTBuf(4,0);
  2290  00B434  0100               	movlb	__Lparam shr (0+8)
  2291  00B436  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2292  00B438  0E04               	movlw	4
  2293  00B43A  ECB7  F070         	call	_SetRSTBuf
  2294                           ;smgs_rs9b.c: 666: SetRSTBuf(5,0);
  2295  00B43E  0100               	movlb	__Lparam shr (0+8)
  2296  00B440  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2297  00B442  0E05               	movlw	5
  2298  00B444  ECB7  F070         	call	_SetRSTBuf
  2299                           ;smgs_rs9b.c: 667: SetRSTBuf(6,0);
  2300  00B448  0100               	movlb	__Lparam shr (0+8)
  2301  00B44A  6BF1               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2302  00B44C  0E06               	movlw	6
  2303  00B44E  ECB7  F070         	call	_SetRSTBuf
  2304                           ;smgs_rs9b.c: 668: }
  2305  00B452  D097               	goto	L18
  2306  00B454                     l102:
  2307                           ;smgs_rs9b.c: 669: else
  2308  00B454  EC18  F050         	call	_ReadBtyHNPZ	;wreg free
  2309  00B458  0F08               	addlw	8
  2310  00B45A  0100               	movlb	__Lparam shr (0+8)
  2311  00B45C  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2312                           ;smgs_rs9b.c: 672: chkndat=SetNDatCHK(ndat);
  2313  00B45E  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2314  00B460  EC52  F071         	call	_SetNDatCHK
  2315  00B464  0100               	movlb	__Lparam shr (0+8)
  2316  00B466  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  2317                           ;smgs_rs9b.c: 673: SetRSTBuf(0,0x01);
  2318  00B468  0E01               	movlw	1
  2319  00B46A  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2320  00B46C  0E00               	movlw	0
  2321  00B46E  ECB7  F070         	call	_SetRSTBuf
  2322                           ;smgs_rs9b.c: 674: SetRSTBuf(1,chkndat);
  2323  00B472  0100               	movlb	__Lparam shr (0+8)
  2324  00B474  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  2325  00B476  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2326  00B478  0E01               	movlw	1
  2327  00B47A  ECB7  F070         	call	_SetRSTBuf
  2328                           ;smgs_rs9b.c: 675: SetRSTBuf(2,3);
  2329  00B47E  0E03               	movlw	3
  2330  00B480  0100               	movlb	__Lparam shr (0+8)
  2331  00B482  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2332  00B484  0E02               	movlw	2
  2333  00B486  ECB7  F070         	call	_SetRSTBuf
  2334                           ;smgs_rs9b.c: 676: SetRSTBuf(3,5);
  2335  00B48A  0E05               	movlw	5
  2336  00B48C  0100               	movlb	__Lparam shr (0+8)
  2337  00B48E  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2338  00B490  0E03               	movlw	3
  2339  00B492  ECB7  F070         	call	_SetRSTBuf
  2340                           ;smgs_rs9b.c: 677: SetRSTBuf(4,ReadBtyHREF(0));
  2341  00B496  0E00               	movlw	0
  2342  00B498  EC20  F050         	call	_ReadBtyHREF
  2343  00B49C  0100               	movlb	__Lparam shr (0+8)
  2344  00B49E  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2345  00B4A0  0E04               	movlw	4
  2346  00B4A2  ECB7  F070         	call	_SetRSTBuf
  2347                           ;smgs_rs9b.c: 678: SetRSTBuf(5,ReadBtyHREF(1));
  2348  00B4A6  0E01               	movlw	1
  2349  00B4A8  EC20  F050         	call	_ReadBtyHREF
  2350  00B4AC  0100               	movlb	__Lparam shr (0+8)
  2351  00B4AE  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2352  00B4B0  0E05               	movlw	5
  2353  00B4B2  ECB7  F070         	call	_SetRSTBuf
  2354                           ;smgs_rs9b.c: 679: SetRSTBuf(6,ReadBtyHNPZ());
  2355  00B4B6  EC18  F050         	call	_ReadBtyHNPZ	;wreg free
  2356  00B4BA  0100               	movlb	__Lparam shr (0+8)
  2357  00B4BC  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2358  00B4BE  0E06               	movlw	6
  2359  00B4C0  ECB7  F070         	call	_SetRSTBuf
  2360                           ;smgs_rs9b.c: 680: for(i=0;i<ReadBtyHNPZ();i++)
  2361  00B4C4  0100               	movlb	__Lparam shr (0+8)
  2362  00B4C6  6BEC               	clrf	?a_SaveDataToRS^(__Lparam& (0+65280)),b	;v
      +                          olatile
  2363  00B4C8                     l107:
  2364  00B4C8  EC18  F050         	call	_ReadBtyHNPZ	;wreg free
  2365  00B4CC  0100               	movlb	__Lparam shr (0+8)
  2366  00B4CE  5DEC               	subwf	?a_SaveDataToRS^(__Lparam& (0+65280)),w	;
      +                          volatile
  2367  00B4D0  E20C               	bc	l103
  2368                           ;smgs_rs9b.c: 681: {
  2369  00B4D2  51EC               	movf	?a_SaveDataToRS^(__Lparam& (0+65280)),w	;v
      +                          olatile
  2370  00B4D4  EC2C  F050         	call	_ReadBtyEEHIST
  2371  00B4D8  0100               	movlb	__Lparam shr (0+8)
  2372  00B4DA  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2373  00B4DC  51EC               	movf	?a_SaveDataToRS^(__Lparam& (0+65280)),w	;v
      +                          olatile
  2374  00B4DE  0F07               	addlw	7
  2375  00B4E0  ECB7  F070         	call	_SetRSTBuf
  2376  00B4E4  0100               	movlb	__Lparam shr (0+8)
  2377  00B4E6  2BEC               	incf	?a_SaveDataToRS^(__Lparam& (0+65280)),f,b	
      +                          ;volatile
  2378  00B4E8  D7EF               	goto	l107
  2379  00B4EA                     l103:
  2380  00B4EA  D04B               	goto	L18
  2381                           ;smgs_rs9b.c: 683: }
  2382                           ;smgs_rs9b.c: 687: break;
  2383  00B4EC                     l108:
  2384                           ;smgs_rs9b.c: 688: }
  2385                           ;smgs_rs9b.c: 691: {
  2386  00B4EC  0E06               	movlw	6
  2387  00B4EE  0100               	movlb	__Lparam shr (0+8)
  2388  00B4F0  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2389                           ;smgs_rs9b.c: 693: chkndat=SetNDatCHK(ndat);
  2390  00B4F2  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2391  00B4F4  EC52  F071         	call	_SetNDatCHK
  2392  00B4F8  0100               	movlb	__Lparam shr (0+8)
  2393  00B4FA  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  2394                           ;smgs_rs9b.c: 694: SetRSTBuf(0,0x01);
  2395  00B4FC  0E01               	movlw	1
  2396  00B4FE  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2397  00B500  0E00               	movlw	0
  2398  00B502  ECB7  F070         	call	_SetRSTBuf
  2399                           ;smgs_rs9b.c: 695: SetRSTBuf(1,chkndat);
  2400  00B506  0100               	movlb	__Lparam shr (0+8)
  2401  00B508  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  2402  00B50A  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2403  00B50C  0E01               	movlw	1
  2404  00B50E  ECB7  F070         	call	_SetRSTBuf
  2405                           ;smgs_rs9b.c: 696: SetRSTBuf(2,3);
  2406  00B512  0E03               	movlw	3
  2407  00B514  0100               	movlb	__Lparam shr (0+8)
  2408  00B516  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2409  00B518  0E02               	movlw	2
  2410  00B51A  ECB7  F070         	call	_SetRSTBuf
  2411                           ;smgs_rs9b.c: 697: SetRSTBuf(3,129);
  2412  00B51E  0E81               	movlw	129
  2413  00B520  0100               	movlb	__Lparam shr (0+8)
  2414  00B522  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2415  00B524  0E03               	movlw	3
  2416  00B526  ECB7  F070         	call	_SetRSTBuf
  2417                           ;smgs_rs9b.c: 698: SetRSTBuf(4,ReadBtyHFLG());
  2418  00B52A  EC1B  F050         	call	_ReadBtyHFLG	;wreg free
  2419  00B52E  0100               	movlb	__Lparam shr (0+8)
  2420  00B530  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2421  00B532  0E04               	movlw	4
  2422  00B534  ECB7  F070         	call	_SetRSTBuf
  2423  00B538  D024               	goto	L18
  2424                           ;smgs_rs9b.c: 699: SetRSCHK(ndat);
  2425                           ;smgs_rs9b.c: 701: break;
  2426  00B53A                     l109:
  2427                           ;smgs_rs9b.c: 702: }
  2428                           ;smgs_rs9b.c: 704: {
  2429  00B53A  0E06               	movlw	6
  2430  00B53C  0100               	movlb	__Lparam shr (0+8)
  2431  00B53E  6FEF               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2432                           ;smgs_rs9b.c: 706: chkndat=SetNDatCHK(ndat);
  2433  00B540  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2434  00B542  EC52  F071         	call	_SetNDatCHK
  2435  00B546  0100               	movlb	__Lparam shr (0+8)
  2436  00B548  6FED               	movwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,b
  2437                           ;smgs_rs9b.c: 707: SetRSTBuf(0,0x01);
  2438  00B54A  0E01               	movlw	1
  2439  00B54C  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2440  00B54E  0E00               	movlw	0
  2441  00B550  ECB7  F070         	call	_SetRSTBuf
  2442                           ;smgs_rs9b.c: 708: SetRSTBuf(1,chkndat);
  2443  00B554  0100               	movlb	__Lparam shr (0+8)
  2444  00B556  51ED               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w
  2445  00B558  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2446  00B55A  0E01               	movlw	1
  2447  00B55C  ECB7  F070         	call	_SetRSTBuf
  2448                           ;smgs_rs9b.c: 709: SetRSTBuf(2,3);
  2449  00B560  0E03               	movlw	3
  2450  00B562  0100               	movlb	__Lparam shr (0+8)
  2451  00B564  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2452  00B566  0E02               	movlw	2
  2453  00B568  ECB7  F070         	call	_SetRSTBuf
  2454                           ;smgs_rs9b.c: 710: SetRSTBuf(3,127);
  2455  00B56C  0E7F               	movlw	127
  2456  00B56E  0100               	movlb	__Lparam shr (0+8)
  2457  00B570  6FF1               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2458  00B572  0E03               	movlw	3
  2459  00B574  ECB7  F070         	call	_SetRSTBuf
  2460                           ;smgs_rs9b.c: 711: SetRSTBuf(4,RSDT1.outALIN);
  2461  00B578  C167  F0F1         	movff	_RSDT1+67,?_SetRSTBuf
  2462  00B57C  0E04               	movlw	4
  2463  00B57E  ECB7  F070         	call	_SetRSTBuf
  2464  00B582                     L18:
  2465                           ;smgs_rs9b.c: 712: SetRSCHK(ndat);
  2466  00B582  0100               	movlb	__Lparam shr (0+8)
  2467  00B584  51EF               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2468  00B586  EF0A  F071         	goto	_SetRSCHK
  2469                           ;smgs_rs9b.c: 714: break;
  2470  00B58A                     l94:
  2471  00B58A  C18E  FFE8         	movff	_RSDT1+106,wreg
  2472  00B58E  0A02               	xorlw	2
  2473  00B590  E101 D537          	bz	l95
  2474  00B594  0A01               	xorlw	1
  2475  00B596  E101 D594          	bz	l97
  2476  00B59A  0A07               	xorlw	7
  2477  00B59C  E101 D5D7          	bz	l98
  2478  00B5A0  0A01               	xorlw	1
  2479  00B5A2  E101 D724          	bz	l101
  2480  00B5A6  0A7A               	xorlw	122
  2481  00B5A8  E0C8               	bz	l109
  2482  00B5AA  0AFF               	xorlw	255
  2483  00B5AC  E101 D559          	bz	l96
  2484  00B5B0  0A01               	xorlw	1
  2485  00B5B2  E09C               	bz	l108
  2486  00B5B4  0012               	return	
  2487                           ;smgs_rs9b.c: 717: break;
  2488  00B5B6                     l86:
  2489  00B5B6  50D9               	movf	fsr2l,w,c
  2490  00B5B8  E102 EF86  F055    	bz	l87
  2491  00B5BE  0A01               	xorlw	1
  2492  00B5C0  E102 EF9E  F055    	bz	l88
  2493  00B5C6  0A03               	xorlw	3
  2494  00B5C8  E102 EFD0  F056    	bz	l90
  2495  00B5CE  0A01               	xorlw	1
  2496  00B5D0  E101 D516          	bz	l92
  2497  00B5D4  0A07               	xorlw	7
  2498  00B5D6  E102 EF27  F056    	bz	l89
  2499  00B5DC  0A01               	xorlw	1
  2500  00B5DE  E101 D484          	bz	l91
  2501  00B5E2  0012               	return	
  2502                           ;smgs_rs9b.c: 721: }
  2503  00B5E4                     __end_of_SaveDataToRS:
  2504                           ;smgs_rs9b.c: 725: void IncRSTimer(void)
  2505                           ;smgs_rs9b.c: 726: {
  2506  00B5E4                     _IncRSTimer:
  2507  000000                     
  2508                           ;smgs_rs9b.c: 727: if(MGSD.timRS<255) MGSD.timRS
      +                          ++;
  2509  00B5E4  C24D  F000         	movff	_MGSD+1,btemp
  2510  00B5E8  2800               	incf	btemp,w,c
  2511  00B5EA  B4D8               	btfsc	status,2,c
  2512  00B5EC  0012               	return	
  2513  00B5EE  0102               	movlb	(_MGSD+1) shr (0+8)
  2514  00B5F0  2B4D               	incf	(_MGSD+1)& (0+255),f,b
  2515                           ;smgs_rs9b.c: 728: }
  2516  00B5F2  0C01               	retlw	1
  2517  00B5F4                     __end_of_IncRSTimer:
  2518                           ;smgs_rs9b.c: 731: void StartRSTim(void)
  2519                           ;smgs_rs9b.c: 732: {
  2520  00B5F4                     _StartRSTim:
  2521  000000                     
  2522                           ;smgs_rs9b.c: 733: MGSD.timRS=0;
  2523  00B5F4  0102               	movlb	(_MGSD+1) shr (0+8)
  2524  00B5F6  6B4D               	clrf	(_MGSD+1)& (0+255),b
  2525                           ;smgs_rs9b.c: 734: }
  2526  00B5F8  0012               	return	
  2527  00B5FA                     __end_of_StartRSTim:
  2528                           ;smgs_rs9b.c: 737: unsigned char RSTim(void)
  2529                           ;smgs_rs9b.c: 738: {
  2530  00B5FA                     _RSTim:
  2531  000000                     
  2532                           ;smgs_rs9b.c: 739: return MGSD.timRS;
  2533  00B5FA  C24D  FFE8         	movff	_MGSD+1,wreg
  2534  00B5FE  0012               	return	
  2535                           ;smgs_rs9b.c: 740: }
  2536  00B600                     __end_of_RSTim:
  2537                           ;smgs_rs9b.c: 744: void IncRSTimer2(void)
  2538                           ;smgs_rs9b.c: 745: {
  2539  00B600                     _IncRSTimer2:
  2540  000000                     
  2541                           ;smgs_rs9b.c: 746: if(MGSD.timRS2<255) MGSD.timR
      +                          S2++;
  2542  00B600  C24E  F000         	movff	_MGSD+2,btemp
  2543  00B604  2800               	incf	btemp,w,c
  2544  00B606  B4D8               	btfsc	status,2,c
  2545  00B608  0012               	return	
  2546  00B60A  0102               	movlb	(_MGSD+2) shr (0+8)
  2547  00B60C  2B4E               	incf	(_MGSD+2)& (0+255),f,b
  2548                           ;smgs_rs9b.c: 747: }
  2549  00B60E  0C01               	retlw	1
  2550  00B610                     __end_of_IncRSTimer2:
  2551                           ;smgs_rs9b.c: 750: void StartRSTim2(void)
  2552                           ;smgs_rs9b.c: 751: {
  2553  00B610                     _StartRSTim2:
  2554  000000                     
  2555                           ;smgs_rs9b.c: 752: MGSD.timRS2=0;
  2556  00B610  0102               	movlb	(_MGSD+2) shr (0+8)
  2557  00B612  6B4E               	clrf	(_MGSD+2)& (0+255),b
  2558                           ;smgs_rs9b.c: 753: }
  2559  00B614  0012               	return	
  2560  00B616                     __end_of_StartRSTim2:
  2561                           ;smgs_rs9b.c: 756: unsigned char RSTim2(void)
  2562                           ;smgs_rs9b.c: 757: {
  2563  00B616                     _RSTim2:
  2564  000000                     
  2565                           ;smgs_rs9b.c: 758: return MGSD.timRS2;
  2566  00B616  C24E  FFE8         	movff	_MGSD+2,wreg
  2567  00B61A  0012               	return	
  2568                           ;smgs_rs9b.c: 759: }
  2569  00B61C                     __end_of_RSTim2:
  2570                           ;smgs_rs9b.c: 762: void InitReceptProc(void)
  2571                           ;smgs_rs9b.c: 763: {
  2572  00B61C                     _InitReceptProc:
  2573  000000                     
  2574                           ;smgs_rs9b.c: 764: MGSD._ReceptData=0;
  2575  00B61C  0102               	movlb	_MGSD shr (0+8)
  2576  00B61E  914C               	bcf	_MGSD& (0+255),0,b
  2577                           ;smgs_rs9b.c: 765: MGSD._ReceptOK=0;
  2578  00B620  934C               	bcf	_MGSD& (0+255),1,b
  2579                           ;smgs_rs9b.c: 766: MGSD._ReceptACK=0;
  2580  00B622  954C               	bcf	_MGSD& (0+255),2,b
  2581                           ;smgs_rs9b.c: 767: MGSD._TERR_TIM=0;
  2582  00B624  974C               	bcf	_MGSD& (0+255),3,b
  2583                           ;smgs_rs9b.c: 768: MGSD._RERR_TIM=0;
  2584  00B626  994C               	bcf	_MGSD& (0+255),4,b
  2585                           ;smgs_rs9b.c: 769: MGSD._RERR_REC=0;
  2586  00B628  9B4C               	bcf	_MGSD& (0+255),5,b
  2587                           ;smgs_rs9b.c: 770: MGSD._CON=0;
  2588  00B62A  9D4C               	bcf	_MGSD& (0+255),6,b
  2589                           ;smgs_rs9b.c: 771: MGSD.timRS=0;
  2590  00B62C  6B4D               	clrf	(_MGSD+1)& (0+255),b
  2591                           ;smgs_rs9b.c: 772: MGSD.timRS2=0;
  2592  00B62E  6B4E               	clrf	(_MGSD+2)& (0+255),b
  2593                           ;smgs_rs9b.c: 773: MGSD.MTRS=0;
  2594  00B630  6B4F               	clrf	(_MGSD+3)& (0+255),b
  2595                           ;smgs_rs9b.c: 774: MGSD.KTR=0;
  2596  00B632  6B50               	clrf	(_MGSD+4)& (0+255),b
  2597                           ;smgs_rs9b.c: 775: }
  2598  00B634  0012               	return	
  2599  00B636                     __end_of_InitReceptProc:
  2600                           ;smgs_rs9b.c: 778: void StartReceptData(void)
  2601                           ;smgs_rs9b.c: 779: {
  2602  00B636                     _StartReceptData:
  2603  000000                     
  2604                           ;smgs_rs9b.c: 780: MGSD._ReceptData=1;
  2605  00B636  0102               	movlb	_MGSD shr (0+8)
  2606  00B638  814C               	bsf	_MGSD& (0+255),0,b
  2607                           ;smgs_rs9b.c: 781: MGSD.MTRS=0;
  2608  00B63A  6B4F               	clrf	(_MGSD+3)& (0+255),b
  2609                           ;smgs_rs9b.c: 782: }
  2610  00B63C  0012               	return	
  2611  00B63E                     __end_of_StartReceptData:
  2612                           ;smgs_rs9b.c: 802: void ReceptData(const unsigne
      +                          d char tnDat)
  2613                           ;smgs_rs9b.c: 803: {
  2614  00B63E                     _ReceptData:
  2615  000000                     
  2616                           ;_tnDat stored from wreg
  2617  00B63E  0100               	movlb	__Lparam shr (0+8)
  2618  00B640  6FEB               	movwf	?a_ReceptData^(__Lparam& (0+65280)),b
  2619                           ;smgs_rs9b.c: 804: switch(MGSD.MTRS)
  2620  00B642  D061               	goto	l122
  2621  00B644                     l123:
  2622                           ;smgs_rs9b.c: 805: {
  2623                           ;smgs_rs9b.c: 807: MGSD.MTRS=1;
  2624  00B644  0E01               	movlw	1
  2625  00B646  CFE8 F24F          	movff	wreg,_MGSD+3
  2626                           ;smgs_rs9b.c: 808: if(!RCIDL) return;
  2627  00B64A  ACB8               	btfss	4024,6,c	;volatile
  2628  00B64C  0C01               	retlw	1
  2629  00B64E                     l125:
  2630                           ;smgs_rs9b.c: 809: case 1:
  2631                           ;smgs_rs9b.c: 810: MGSD._ReceptOK=1;
  2632  00B64E  0102               	movlb	_MGSD shr (0+8)
  2633  00B650  834C               	bsf	_MGSD& (0+255),1,b
  2634                           ;smgs_rs9b.c: 811: CREN=0;
  2635  00B652  98AB               	bcf	4011,4,c
  2636                           ;smgs_rs9b.c: 812: if(VerifyRSCHK(UADt.RNData))
  2637  00B654  C271  FFE8         	movff	_UADt+2,wreg
  2638  00B658  EC2C  F071         	call	_VerifyRSCHK
  2639  00B65C  0900               	iorlw	0
  2640  00B65E  E007               	bz	l126
  2641                           ;smgs_rs9b.c: 813: {
  2642  00B660  ECB6  F051         	call	_SaveRSToData	;wreg free
  2643                           ;smgs_rs9b.c: 815: MGSD._ReceptACK=1;
  2644  00B664  0102               	movlb	_MGSD shr (0+8)
  2645  00B666  854C               	bsf	_MGSD& (0+255),2,b
  2646                           ;smgs_rs9b.c: 816: MGSD._CON=1;
  2647  00B668  8D4C               	bsf	_MGSD& (0+255),6,b
  2648                           ;smgs_rs9b.c: 817: StartRSTim2();
  2649  00B66A  DFD2               	call	_StartRSTim2	;wreg free
  2650                           ;smgs_rs9b.c: 819: }
  2651  00B66C  D002               	goto	l127
  2652  00B66E                     l126:
  2653                           ;smgs_rs9b.c: 820: else
  2654  00B66E  0102               	movlb	_MGSD shr (0+8)
  2655  00B670  954C               	bcf	_MGSD& (0+255),2,b
  2656  00B672                     l127:
  2657                           ;smgs_rs9b.c: 823: }
  2658  00B672  88AB               	bsf	4011,4,c
  2659                           ;smgs_rs9b.c: 825: if(tnDat)
  2660  00B674  0100               	movlb	__Lparam shr (0+8)
  2661  00B676  51EB               	movf	?a_ReceptData^(__Lparam& (0+65280)),w
  2662  00B678  E00D               	bz	l128
  2663                           ;smgs_rs9b.c: 826: {
  2664  00B67A  0102               	movlb	_MGSD shr (0+8)
  2665  00B67C  A54C               	btfss	_MGSD& (0+255),2,b
  2666  00B67E  D005               	goto	l129
  2667  00B680  C124  FFE8         	movff	_RSDT1,wreg
  2668  00B684  EC83  F055         	call	_SaveDataToRS
  2669  00B688  D003               	goto	l130
  2670  00B68A                     l129:
  2671                           ;smgs_rs9b.c: 828: else SaveDataToRS(0);
  2672  00B68A  0E00               	movlw	0
  2673  00B68C  EC83  F055         	call	_SaveDataToRS
  2674  00B690                     l130:
  2675                           ;smgs_rs9b.c: 829: StartUSARTTR();
  2676  00B690  EC6E  F070         	call	_StartUSARTTR	;wreg free
  2677  00B694                     l128:
  2678                           ;smgs_rs9b.c: 830: }
  2679  00B694  DFAF               	call	_StartRSTim	;wreg free
  2680                           ;smgs_rs9b.c: 832: MGSD.MTRS=2;
  2681  00B696  0E02               	movlw	2
  2682  00B698  CFE8 F24F          	movff	wreg,_MGSD+3
  2683  00B69C                     l131:
  2684                           ;smgs_rs9b.c: 833: case 2:
  2685                           ;smgs_rs9b.c: 834: if(tnDat)
  2686  00B69C  0100               	movlb	__Lparam shr (0+8)
  2687  00B69E  51EB               	movf	?a_ReceptData^(__Lparam& (0+65280)),w
  2688  00B6A0  A4D8               	btfss	status,2,c
  2689                           ;smgs_rs9b.c: 835: {
  2690  00B6A2  A89D               	btfss	3997,4,c
  2691  00B6A4  D012               	goto	l132
  2692                           ;smgs_rs9b.c: 837: {
  2693  00B6A6  DFA9               	call	_RSTim	;wreg free
  2694  00B6A8  6E00               	movwf	btemp,c
  2695  00B6AA  0E02               	movlw	2
  2696  00B6AC  5C00               	subwf	btemp,w,c
  2697  00B6AE  E303               	bnc	u421
  2698  00B6B0  0102               	movlb	_UADt shr (0+8)
  2699  00B6B2  A96F               	btfss	_UADt& (0+255),4,b
  2700  00B6B4  D006               	goto	u440
  2701  00B6B6                     u421:
  2702  00B6B6  DFA1               	call	_RSTim	;wreg free
  2703  00B6B8  6E00               	movwf	btemp,c
  2704  00B6BA  0E15               	movlw	21
  2705  00B6BC  5C00               	subwf	btemp,w,c
  2706  00B6BE  A0D8               	btfss	status,0,c
  2707  00B6C0  0012               	return	
  2708  00B6C2                     u440:
  2709                           ;smgs_rs9b.c: 839: {
  2710  00B6C2  0E03               	movlw	3
  2711  00B6C4  CFE8 F24F          	movff	wreg,_MGSD+3
  2712                           ;smgs_rs9b.c: 841: break;
  2713  00B6C8  0C03               	retlw	3
  2714                           ;smgs_rs9b.c: 842: }
  2715  00B6CA                     l132:
  2716                           ;smgs_rs9b.c: 844: }
  2717  00B6CA  0102               	movlb	_MGSD shr (0+8)
  2718  00B6CC  974C               	bcf	_MGSD& (0+255),3,b
  2719                           ;smgs_rs9b.c: 847: if(!TRMT) return;
  2720  00B6CE  A2AC               	btfss	4012,1,c	;volatile
  2721  00B6D0  0012               	return	
  2722                           ;smgs_rs9b.c: 848: MGSD.MTRS=5;
  2723  00B6D2  0E05               	movlw	5
  2724  00B6D4  CFE8 F24F          	movff	wreg,_MGSD+3
  2725                           ;smgs_rs9b.c: 849: break;
  2726  00B6D8  0C05               	retlw	5
  2727  00B6DA                     l136:
  2728                           ;smgs_rs9b.c: 850: case 3:
  2729                           ;smgs_rs9b.c: 852: MGSD._ReceptOK=0;
  2730  00B6DA  0102               	movlb	_MGSD shr (0+8)
  2731  00B6DC  934C               	bcf	_MGSD& (0+255),1,b
  2732                           ;smgs_rs9b.c: 853: MGSD._TERR_TIM=1;
  2733  00B6DE  874C               	bsf	_MGSD& (0+255),3,b
  2734                           ;smgs_rs9b.c: 854: StopUSARTTR();
  2735  00B6E0  EC96  F070         	call	_StopUSARTTR	;wreg free
  2736                           ;smgs_rs9b.c: 855: MGSD.MTRS=5;
  2737  00B6E4  0E05               	movlw	5
  2738  00B6E6  CFE8 F24F          	movff	wreg,_MGSD+3
  2739                           ;smgs_rs9b.c: 856: break;
  2740  00B6EA  0C05               	retlw	5
  2741  00B6EC                     l137:
  2742                           ;smgs_rs9b.c: 857: case 4:
  2743                           ;smgs_rs9b.c: 859: MGSD._ReceptOK=0;
  2744  00B6EC  0102               	movlb	_MGSD shr (0+8)
  2745  00B6EE  934C               	bcf	_MGSD& (0+255),1,b
  2746                           ;smgs_rs9b.c: 860: MGSD._ReceptACK=0;
  2747  00B6F0  954C               	bcf	_MGSD& (0+255),2,b
  2748                           ;smgs_rs9b.c: 861: MGSD._RERR_TIM=1;
  2749  00B6F2  894C               	bsf	_MGSD& (0+255),4,b
  2750                           ;smgs_rs9b.c: 862: MGSD.MTRS=5;
  2751  00B6F4  0E05               	movlw	5
  2752  00B6F6  CFE8 F24F          	movff	wreg,_MGSD+3
  2753  00B6FA                     l138:
  2754                           ;smgs_rs9b.c: 863: case 5:
  2755                           ;smgs_rs9b.c: 864: MGSD._ReceptData=0;
  2756  00B6FA  0102               	movlb	_MGSD shr (0+8)
  2757  00B6FC  914C               	bcf	_MGSD& (0+255),0,b
  2758                           ;smgs_rs9b.c: 865: MGSD.MTRS=0;
  2759  00B6FE  6B4F               	clrf	(_MGSD+3)& (0+255),b
  2760                           ;smgs_rs9b.c: 866: UADt.REnd=0;
  2761  00B700  0102               	movlb	_UADt shr (0+8)
  2762  00B702  936F               	bcf	_UADt& (0+255),1,b
  2763                           ;smgs_rs9b.c: 868: break;
  2764  00B704  0012               	return	
  2765  00B706                     l122:
  2766  00B706  C24F  FFE8         	movff	_MGSD+3,wreg
  2767  00B70A  0A00               	xorlw	0
  2768  00B70C  E09B               	bz	l123
  2769  00B70E  0A01               	xorlw	1
  2770  00B710  E09E               	bz	l125
  2771  00B712  0A03               	xorlw	3
  2772  00B714  E0C3               	bz	l131
  2773  00B716  0A01               	xorlw	1
  2774  00B718  E0E0               	bz	l136
  2775  00B71A  0A07               	xorlw	7
  2776  00B71C  E0E7               	bz	l137
  2777  00B71E  0A01               	xorlw	1
  2778  00B720  E0EC               	bz	l138
  2779  00B722  0012               	return	
  2780                           ;smgs_rs9b.c: 870: }
  2781  00B724                     __end_of_ReceptData:
  2782                           ;smgs_rs9b.c: 873: void ReceptDataLCD(void)
  2783                           ;smgs_rs9b.c: 874: {
  2784  00B724                     _ReceptDataLCD:
  2785  000000                     
  2786                           ;smgs_rs9b.c: 875: switch(MGSD.KTR)
  2787  00B724  D01F               	goto	l141
  2788  00B726                     l142:
  2789                           ;smgs_rs9b.c: 876: {
  2790                           ;smgs_rs9b.c: 878: StartReceptData();
  2791  00B726  DF87               	call	_StartReceptData	;wreg free
  2792                           ;smgs_rs9b.c: 879: MGSD.KTR=1;
  2793  00B728  0E01               	movlw	1
  2794  00B72A  CFE8 F250          	movff	wreg,_MGSD+4
  2795  00B72E                     l143:
  2796                           ;smgs_rs9b.c: 880: case 1:
  2797                           ;smgs_rs9b.c: 881: if(UADt.REnd)
  2798  00B72E  0102               	movlb	_UADt shr (0+8)
  2799  00B730  A36F               	btfss	_UADt& (0+255),1,b
  2800  00B732  D005               	goto	l144
  2801                           ;smgs_rs9b.c: 882: {
  2802  00B734  0102               	movlb	_MGSD shr (0+8)
  2803  00B736  A14C               	btfss	_MGSD& (0+255),0,b
  2804  00B738  D002               	goto	l144
  2805                           ;smgs_rs9b.c: 886: {
  2806  00B73A  0E01               	movlw	1
  2807  00B73C  D780               	goto	_ReceptData
  2808                           ;smgs_rs9b.c: 888: return;
  2809  00B73E                     l144:
  2810                           ;smgs_rs9b.c: 889: }
  2811  00B73E  DF6B               	call	_RSTim2	;wreg free
  2812  00B740  6E00               	movwf	btemp,c
  2813  00B742  0EC9               	movlw	201
  2814  00B744  5C00               	subwf	btemp,w,c
  2815  00B746  0102               	movlb	_MGSD shr (0+8)
  2816  00B748  E301               	bnc	L12
  2817  00B74A  9D4C               	bcf	_MGSD& (0+255),6,b
  2818                           ;smgs_rs9b.c: 892: M._LCD=(MGSD._CON)?1:0;
  2819  00B74C                     L12:
  2820  00B74C  0E00               	movlw	0
  2821  00B74E  BD4C               	btfsc	_MGSD& (0+255),6,b
  2822  00B750  0E01               	movlw	1
  2823  00B752  6E00               	movwf	btemp,c
  2824  00B754  EE01  F006         	lfsr	0,_M+6
  2825  00B758  18EF               	xorwf	indf0,w,c
  2826  00B75A  0BFE               	andlw	-2
  2827  00B75C  1800               	xorwf	btemp,w,c
  2828  00B75E  6EEF               	movwf	indf0,c
  2829                           ;smgs_rs9b.c: 893: MGSD.KTR=0;
  2830  00B760  6B50               	clrf	(_MGSD+4)& (0+255),b
  2831                           ;smgs_rs9b.c: 894: break;
  2832  00B762  0012               	return	
  2833  00B764                     l141:
  2834  00B764  C250  FFE8         	movff	_MGSD+4,wreg
  2835  00B768  0A00               	xorlw	0
  2836  00B76A  E0DD               	bz	l142
  2837  00B76C  0A01               	xorlw	1
  2838  00B76E  E0DF               	bz	l143
  2839  00B770  0012               	return	
  2840                           ;smgs_rs9b.c: 896: }
  2841  00B772                     __end_of_ReceptDataLCD:
  2842  000000                     
  2843  000000                     
  2844  000000                     
  2845  000000                     
  2846  000000                     
  2847  000000                     
  2848  000000                     
  2849  000000                     
  2850  000000                     
  2851  000000                     
  2852  000000                     
  2853  000000                     
  2854  000000                     
  2855  000000                     
  2856  000000                     
  2857  000000                     
  2858  000000                     
  2859  000000                     
  2860  000000                     
  2861  000000                     
  2862  000000                     
  2863  000000                     
  2864  000000                     
  2865  000000                     
  2866  000000                     
  2867  000000                     
  2868  000000                     
  2869  000000                     
  2870  000000                     
  2871  000000                     
  2872  000000                     
  2873  000000                     
  2874  000000                     
  2875  000000                     
  2876  000000                     
  2877  000000                     
  2878  000000                     
  2879  000000                     
  2880  000000                     
  2881  000000                     
  2882  000000                     
  2883  000000                     
  2884  000000                     
  2885  000000                     
  2886  000000                     
  2887  000000                     
  2888  000000                     
  2889  000000                     
  2890  000000                     
  2891  000000                     
  2892  000000                     
  2893  000000                     
  2894  000000                     
  2895  000000                     
  2896  000000                     
  2897  000000                     
  2898  000000                     
  2899  000000                     
  2900  000000                     
  2901  000000                     
  2902  000000                     
  2903  000000                     
  2904  000000                     
  2905  000000                     
  2906  000000                     
  2907  000000                     
  2908  000000                     
  2909  000000                     
  2910  000000                     
  2911  000000                     
  2912  000000                     
  2913  000000                     
  2914  000000                     
  2915  000000                     
  2916  000000                     
  2917  000000                     
  2918  000000                     
  2919  000000                     
  2920  000000                     
  2921  000000                     
  2922  000000                     
  2923  000000                     
  2924  000000                     
  2925  000000                     
  2926  000000                     
  2927  000000                     
  2928  000000                     
  2929  000000                     
  2930  000000                     
  2931  000000                     
  2932  000000                     
  2933  000000                     
  2934  000000                     
  2935  000000                     
  2936  000000                     
  2937  000000                     
  2938  000000                     
  2939  000000                     
  2940  000000                     
  2941  000000                     
  2942  000000                     
  2943  000000                     
  2944  000000                     
  2945  000000                     
  2946  000000                     
  2947  000000                     
  2948  000000                     
  2949  000000                     
  2950  000000                     
  2951  000000                     
  2952  000000                     
  2953  000000                     
  2954  000000                     
  2955  000000                     
  2956  000000                     
  2957  000000                     
  2958  000000                     
  2959  000000                     
  2960  000000                     
  2961  000000                     
  2962  000000                     
  2963  000000                     
  2964  000000                     
  2965  000000                     
  2966  000000                     
  2967  000000                     
  2968  000000                     
  2969  000000                     
  2970  000000                     
  2971  000000                     
  2972  000000                     
  2973  000000                     
  2974  000000                     
  2975  000000                     
  2976  000000                     
  2977  000000                     
  2978  000000                     
  2979  000000                     
  2980  000000                     
  2981  000000                     
  2982  000000                     
  2983  000000                     
  2984  000000                     
  2985  000000                     
  2986  000000                     
  2987  000000                     
  2988  000000                     
  2989  000000                     
  2990  000000                     
  2991  000000                     
  2992  000000                     
  2993  000000                     
  2994  000000                     
  2995  000000                     
  2996  000000                     
  2997  000000                     
  2998  000000                     
  2999  000000                     
  3000  000000                     
  3001  000000                     
  3002  000000                     
  3003  000000                     
  3004  000000                     
  3005  000000                     
  3006  000000                     
  3007  000000                     
  3008  000000                     
  3009  000000                     
  3010  000000                     
  3011  000000                     
  3012  000000                     
  3013  000000                     
  3014  000000                     
  3015  000000                     
  3016  000000                     
  3017  000000                     
  3018  000000                     
  3019  000000                     
  3020  000000                     
  3021  000000                     
  3022  000000                     
  3023  000000                     
  3024  000000                     
  3025  000000                     
  3026  000000                     
  3027  000000                     
  3028  000000                     
  3029  000000                     
  3030  000000                     
  3031  000000                     
  3032  000000                     
  3033  000000                     
  3034  000000                     
  3035  000000                     
  3036  000000                     
  3037  000000                     
  3038  000000                     
  3039  000000                     
  3040  000000                     
  3041  000000                     
  3042  000000                     
  3043  000000                     
  3044  000000                     
  3045  000000                     
  3046  000000                     
  3047  000000                     
  3048  000000                     
  3049  000000                     
  3050  000000                     
  3051  000000                     
  3052  000000                     
  3053  000000                     
  3054  000000                     
  3055  000000                     
  3056  000000                     
  3057  000000                     
  3058  000000                     
  3059  000000                     
  3060  000000                     
  3061  000000                     
  3062  000000                     
  3063  000000                     
  3064  000000                     
  3065  000000                     
  3066  000000                     
  3067  000000                     
  3068  000000                     
  3069  000000                     
  3070  000000                     
  3071  000000                     
  3072  000000                     
  3073  000000                     
  3074  000000                     
  3075  000000                     
  3076  000000                     
  3077  000000                     
  3078  000000                     
  3079  000000                     
  3080  000000                     
  3081  000000                     
  3082  000000                     
  3083  000000                     
  3084  000000                     
  3085  000000                     
  3086  000000                     
  3087  000000                     
  3088  000000                     
  3089  000000                     
  3090  000000                     
  3091  000000                     
  3092  000000                     
  3093  000000                     
  3094  000000                     
  3095  000000                     
  3096  000000                     
  3097  000000                     
  3098  000000                     
  3099  000000                     
  3100  000000                     
  3101  000000                     
  3102  000000                     
  3103  000000                     
  3104  000000                     
  3105  000000                     
  3106  000000                     
  3107  000000                     
  3108  000000                     
  3109  000000                     
  3110  000000                     
  3111  000000                     
  3112  000000                     
  3113  000000                     
  3114  000000                     
  3115  000000                     
  3116  000000                     
  3117  000000                     
  3118  000000                     
  3119  000000                     
  3120  000000                     
  3121  000000                     
  3122  000000                     
  3123  000000                     
  3124  000000                     
  3125  000000                     
  3126  000000                     
  3127  000000                     
  3128  000000                     
  3129  000000                     
  3130  000000                     
  3131  000000                     
  3132  000000                     
  3133  000000                     
  3134  000000                     
  3135  000000                     
  3136  000000                     
  3137  000000                     
  3138  000000                     
  3139  000000                     
  3140  000000                     
  3141  000000                     
  3142  000000                     
  3143  000000                     
  3144  000000                     
  3145  000000                     
  3146  000000                     
  3147  000000                     
  3148  000000                     
  3149  000000                     
  3150  000000                     
  3151  000000                     
  3152  000000                     
  3153  000000                     
  3154  000000                     
  3155  000000                     
  3156  000000                     
  3157  000000                     
  3158  000000                     
  3159  000000                     
  3160  000000                     
  3161  000000                     
  3162  000000                     
  3163  000000                     
  3164  000000                     
  3165  000000                     
  3166  000000                     
  3167  000000                     
  3168  000000                     
  3169  000000                     
  3170  000000                     
  3171  000000                     
  3172  000000                     
  3173  000000                     
  3174  000000                     
  3175  000000                     
  3176  000000                     
  3177  000000                     
  3178  000000                     
  3179  000000                     
  3180  000000                     
  3181  000000                     
  3182  000000                     
  3183  000000                     
  3184  000000                     
  3185  000000                     
  3186  000000                     
  3187  000000                     
  3188  000000                     
  3189  000000                     
  3190  000000                     
  3191  000000                     
  3192  000000                     
  3193  000000                     
  3194  000000                     
  3195  000000                     
  3196  000000                     
  3197  000000                     
  3198  000000                     
  3199  000000                     
  3200  000000                     
  3201  000000                     
  3202  000000                     
  3203  000000                     
  3204  000000                     
  3205  000000                     
  3206  000000                     
  3207  000000                     
  3208  000000                     
  3209  000000                     
  3210  000000                     
  3211  000000                     
  3212  000000                     
  3213  000000                     
  3214  000000                     
  3215  000000                     
  3216  000000                     
  3217  000000                     
  3218  000000                     
  3219  000000                     
  3220  000000                     
  3221  000000                     
  3222  000000                     
  3223  000000                     
  3224  000000                     
  3225  000000                     
  3226  000000                     
  3227  000000                     
  3228  000000                     
  3229  000000                     
  3230  000000                     
  3231  000000                     
  3232  000000                     
  3233  000000                     
  3234  000000                     
  3235  000000                     
  3236  000000                     
  3237  000000                     
  3238  000000                     
  3239  000000                     
  3240  000000                     
  3241  000000                     
  3242  000000                     
  3243  000000                     
  3244  000000                     
  3245  000000                     
  3246  000000                     
  3247  000000                     
  3248  000000                     
  3249  000000                     
  3250  000000                     
  3251  000000                     
  3252  000000                     
  3253  000000                     
  3254  000000                     
  3255  000000                     
  3256  000000                     
  3257  000000                     
  3258  000000                     
  3259  000000                     
  3260  000000                     
  3261  000000                     
  3262  000000                     
  3263  000000                     
  3264  000000                     
  3265  000000                     
  3266  000000                     
  3267  000000                     
  3268  000000                     
  3269  000000                     
  3270  000000                     
  3271  000000                     
  3272  000000                     
  3273  000000                     
  3274  000000                     
  3275  000000                     
  3276  000000                     
  3277  000000                     
  3278  000000                     
  3279  000000                     
  3280  000000                     
  3281  000000                     
  3282  000000                     
  3283  000000                     
  3284  000000                     
  3285  000000                     
  3286  000000                     
  3287  000000                     
  3288  000000                     
  3289  000000                     
  3290  000000                     
  3291  000000                     
  3292  000000                     
  3293  000000                     
  3294  000000                     
  3295  000000                     
  3296  000000                     
  3297  000000                     
  3298  000000                     
  3299  000000                     
  3300  000000                     
  3301  000000                     
  3302  000000                     
  3303  000000                     
  3304  000000                     
  3305  000000                     
  3306  000000                     
  3307  000000                     
  3308  000000                     
  3309  000000                     
  3310  000000                     
  3311  000000                     
  3312  000000                     
  3313  000000                     
  3314  000000                     
  3315  000000                     
  3316  000000                     
  3317  000000                     
  3318  000000                     
  3319  000000                     
  3320  000000                     
  3321  000000                     
  3322  000000                     
  3323  000000                     
  3324  000000                     
  3325  000000                     
  3326  000000                     
  3327  000000                     
  3328  000000                     
  3329  000000                     
  3330  000000                     
  3331  000000                     
  3332  000000                     
  3333  000000                     
  3334  000000                     
  3335  000000                     
  3336  000000                     
  3337  000000                     
  3338  000000                     
  3339  000000                     
  3340  000000                     
  3341  000000                     
  3342  000000                     
  3343  000000                     
  3344  000000                     
  3345  000000                     
  3346  000000                     
  3347  000000                     
  3348  000000                     
  3349  000000                     
  3350  000000                     
  3351  000000                     
  3352  000000                     
  3353  000000                     
  3354  000000                     
  3355  000000                     
  3356  000000                     
  3357  000000                     
  3358  000000                     
  3359  000000                     
  3360  000000                     
  3361  000000                     
  3362  000000                     
  3363  000000                     
  3364  000000                     
  3365  000000                     
  3366  000000                     
  3367  000000                     
  3368  000000                     
  3369  000000                     
  3370  000000                     
  3371  000000                     
  3372  000000                     
  3373  000000                     
  3374  000000                     
  3375  000000                     
  3376  000000                     
  3377  000000                     
  3378  000000                     
  3379  000000                     
  3380  000000                     
  3381  000000                     
  3382  000000                     
  3383  000000                     
  3384  000000                     
  3385  000000                     
  3386  000000                     
  3387  000000                     
  3388  000000                     
  3389  000000                     
  3390  000000                     
  3391  000000                     
  3392  000000                     
  3393  000000                     
  3394  000000                     
  3395  000000                     
  3396  000000                     
  3397  000000                     
  3398  000000                     
  3399  000000                     
  3400  000000                     
  3401  000000                     
  3402  000000                     
  3403                           
  3404                           	psect	bigbss
  3405  000EEA                     _mmm:
  3406  000EEA                     	ds	1
  3407  000EEA                     _vvv:
  3408  000EEA                     	ds	1
  3409  000EEA                     _xxy:
  3410  000EEA                     	ds	1
  3411  000EEA                     _zzz:
  3412  000EEA                     	ds	1
  3413  000000                     
  3414  000000                     
  3415  000000                     
  3416  000000                     
  3417  000000                     
  3418  000000                     
  3419  000000                     
  3420                           
  3421                           	psect	bss
  3422  00024C                     _MGSD:
  3423  00024C                     	ds	5
  3424  00024C                     _DtAMMY1:
  3425  00024C                     	ds	20
  3426                           
  3427                           	psect	temp
  3428  000000                     btemp:
  3429  000000                     	ds	4
  3430                           prodh	equ	0xFF4
  3431                           prodl	equ	0xFF3
  3432                           indf0	equ	0xFEF
  3433                           postinc0	equ	0xFEE
  3434                           postdec0	equ	0xFED
  3435                           fsr0h	equ	0xFEA
  3436                           fsr0l	equ	0xFE9
  3437                           wreg	equ	0xFE8
  3438                           fsr2l	equ	0xFD9
  3439                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Mon Sep 14 17:44:54 2020

                      _M 0100                       l20 A392  
                     l21 A396                       l22 A3D4  
                     l32 A46C                       l24 A3E4  
                     l33 A462                       l25 A3E2  
                     l50 AADC                       l42 A596  
                     l34 A466                       l18 AAE2  
                     l51 AAB2                       l43 A58C  
                     l35 A46A                       l19 A378  
                     l60 A9EC                       l52 A6C2  
                     l44 A58E                       l36 A494  
                     l61 A77C                       l53 A6C4  
                     l45 A592                       l29 A458  
                     l71 A968                       l63 A7DE  
                     l39 A57A                       l80 AA74  
                     l56 A6FE                       l81 AA7A  
                     l65 A87E                       l49 A6B2  
                     l90 ADA0                       l82 AAA4  
                     l58 AA60                       l91 AEEA  
                     l67 A8A2                       l59 AA38  
                     l92 B000                       l77 AA66  
                     l69 A944                       l94 B58A  
                     l86 B5B6                       l78 AA68  
                     l95 B002                       l87 AB0C  
                     l79 AA72                       l96 B062  
                     l88 AB3C                       l97 B0C2  
                     l89 AC4E                       l98 B14E  
                     l99 B1CC                       u95 A748  
               _StartRTG E798                 _StartRTS E6DE  
         ?a_SaveRSToData 00EC           ?a_SaveDataToRS 00EC  
                    l101 B3EE                      l102 B454  
                    l103 B4EA                      l130 B690  
                    l122 B706                      l131 B69C  
                    l123 B644                      l107 B4C8  
                    l132 B6CA                      l108 B4EC  
                    l141 B764                      l125 B64E  
                    l109 B53A                      l142 B726  
                    l126 B66E                      l143 B72E  
                    l127 B672                      l144 B73E  
                    l136 B6DA                      l128 B694  
                    l137 B6EC                      l129 B68A  
                    l138 B6FA                      u200 A9C8  
                    u105 A776                      u205 AA36  
                    u125 A7AC                      u135 A80E  
                    u251 B15C                      u155 A858  
                    u421 B6B6                      u165 A8D2  
                    u440 B6C2                      u185 A91C  
                    u290 B178                      u195 A998  
                    _mmm 0EEA                      _vvv 0EEB  
                    _xxy 0EEC                      _zzz 0EED  
                    wreg 000FE8            ?_eeprom_write 00F9  
                   _MGSD 024C                     _UADt 026F  
                   indf0 000FEF                     fsr0l 000FE9  
                   fsr2l 000FD9                     btemp 0000  
                   prodh 000FF4                     prodl 000FF3  
             _StartRSTim B5F4       __end_of_StartRSTim B5FA  
          __end_of_RSTim B600              _IncRSTimer2 B600  
                  l30003 A490                    l30004 A480  
    __end_of_IncRSTimer2 B610                    _RSDT1 0124  
                  _DtKNF 0230                    _RSTim B5FA  
            _VerifyRSCHK E258               used_btemp0 0001  
             used_btemp1 0001               used_btemp2 0001  
             used_btemp3 0001                  _DtAMMY1 0251  
            _eeprom_read F144                  _ClrHFLG E68C  
                _GetNDat E31E              _StartRSTim2 B610  
                  status 000FD8      __end_of_StartRSTim2 B616  
           ?a_ReceptData 00EB                  __Lparam 00E9  
            _StopUSARTTR E12C            _ReceptDataLCD B724  
         _InitReceptProc B61C             ?_eeprom_read 00F9  
                __ramtop 1000    __end_of_ReceptDataLCD B772  
         __end_of_RSTim2 B61C          _StartReceptData B636  
             _IncRSTimer B5E4       __end_of_IncRSTimer B5F4  
            _WriteEEALIN 9FB0              _ReadBtyHFLG A036  
            _ReadBtyHREF A040              _ReadBtyHNPZ A030  
            _ReadBtySTAT A0B2   __end_of_InitReceptProc B636  
          _ReadBtyEEHIST A058                   _RSTim2 B616  
                 _MinMax 006B                _RdEEParam 9A9E  
          _ReadBtyNZSTAT A070                _ClearEETA 9FEC  
             _ReadEEALIN 9FE0                _GetRSRBuf E1AC  
                postdec0 000FED                _GetExNDat E326  
                postinc0 000FEE             ?_ReadBtySTAT 00F4  
           _SetExNDatCHK E2E2             _eeprom_write F05E  
           _StartUSARTTR E0DC             _SaveRSToData A36C  
           _SaveDataToRS AB06               _SetNDatCHK E2A4  
   __end_of_SaveRSToData AB06     __end_of_SaveDataToRS B5E4  
             _ReceptData B63E       __end_of_ReceptData B724  
__end_of_StartReceptData B63E                _SetRSTBuf E16E  
               _SetRSCHK E214               ?_SetRSTBuf 00F1  
