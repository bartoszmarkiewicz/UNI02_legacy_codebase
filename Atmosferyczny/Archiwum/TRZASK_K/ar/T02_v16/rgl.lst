

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Fri Feb 26 07:54:44 2016


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     5                           	psect	bss,global,class=RAM,space=1,delta=1
     6                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     7                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97                           
    98                           	psect	text
    99                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   100                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   101                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   102                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   103                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   104                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   105                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   106                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   107                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   108                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   109                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   110                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   111                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   112                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   113                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   114                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   115                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   116                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   117                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   118                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   119                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   120                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   121                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   122                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   123                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   124                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   125                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   126                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   127                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   128                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   129                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   130                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   131                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   132                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   133                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   134                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   135                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   136                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   137                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   138                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   139                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   140                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   141                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   142                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   143                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   144                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   145                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   146                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   147                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   148                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   149                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   150                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   151                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   152                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   153                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   154                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   155                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   156                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   157                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   158                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   159                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   160                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   161                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   162                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   163                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   164                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   165                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   166                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   167                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   168                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   169                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   170                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   171                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   172                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   173                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   174                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   175                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   176                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   177                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   178                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   179                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   180                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   181                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   182                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   183                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   184                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   185                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   186                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   187                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   188                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   189                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   190                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   191                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   192                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   193                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   194                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   195                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   196                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   197                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   198                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   199  00102E                     _Moduluj:
   200                           ;	_k assigned to ?a_ModPruCW2+0
   201  000000                     _ModPruCW2$k	set	?a_ModPruCW2
   202                           ;	_m assigned to ?a_ModDkCW2+0
   203  000000                     _ModDkCW2$m	set	?a_ModDkCW2
   204                           ;	_m assigned to ?a_ModZgCW2+0
   205  000000                     _ModZgCW2$m	set	?a_ModZgCW2
   206                           ;	_k assigned to ?a_ModPruCW4+0
   207  000000                     _ModPruCW4$k	set	?a_ModPruCW4
   208                           ;	_m assigned to ?a_ModDkCW4+0
   209  000000                     _ModDkCW4$m	set	?a_ModDkCW4
   210                           ;	_m assigned to ?a_ModZgCW4+0
   211  000000                     _ModZgCW4$m	set	?a_ModZgCW4
   212                           ;	_k assigned to ?a_ModPruCW+0
   213  000000                     _ModPruCW$k	set	?a_ModPruCW
   214                           ;	_m assigned to ?a_ModDkCW+2
   215  000000                     _ModDkCW$m	set	?a_ModDkCW+2
   216                           ;	_k assigned to ?a_ModDkCW+1
   217  000000                     _ModDkCW$k	set	?a_ModDkCW+1
   218                           ;	_ada assigned to ?a_ModDkCW+0
   219  000000                     _ModDkCW$ada	set	?a_ModDkCW
   220                           ;	_m assigned to ?a_ModZgCW+0
   221  000000                     _ModZgCW$m	set	?a_ModZgCW
   222                           ;	_m assigned to ?a_FirstPCW+1
   223  000000                     _FirstPCW$m	set	?a_FirstPCW+1
   224                           ;	_p assigned to ?a_FirstPCW+0
   225  000000                     _FirstPCW$p	set	?a_FirstPCW
   226                           ;	_m assigned to ?a_ModDkCO+2
   227  000000                     _ModDkCO$m	set	?a_ModDkCO+2
   228                           ;	_k assigned to ?a_ModDkCO+1
   229  000000                     _ModDkCO$k	set	?a_ModDkCO+1
   230                           ;	_ada assigned to ?a_ModDkCO+0
   231  000000                     _ModDkCO$ada	set	?a_ModDkCO
   232                           ;	_m assigned to ?a_ModZgCO+0
   233  000000                     _ModZgCO$m	set	?a_ModZgCO
   234  000000                     
   235                           ;rgl.c: 28: unsigned int wpw;
   236  00102E  D160               	goto	l15
   237  001030                     l16:
   238                           ;rgl.c: 32: {
   239                           ;rgl.c: 34: {
   240  001030  0100               	movlb	(_M+10) shr (0+8)
   241  001032  5174               	movf	(_M+10)& (0+255),w,b
   242  001034  1175               	iorwf	(_M+11)& (0+255),w,b
   243  001036  E01E               	bz	l17
   244                           ;rgl.c: 36: {
   245  001038  C194  F198         	movff	_PWM+31,_PWM+35
   246                           ;rgl.c: 38: PWM.MINPWM = PWM.MDMOD;
   247  00103C  C17E  F197         	movff	_PWM+9,_PWM+34
   248                           ;rgl.c: 39: StartCO();
   249  001040  EC95  F00C         	call	_StartCO	;wreg free
   250                           ;rgl.c: 40: ReadDataCO();
   251  001044  ECBB  F00E         	call	_ReadDataCO	;wreg free
   252                           ;rgl.c: 41: ModToCO();
   253  001048  ECAD  F00E         	call	_ModToCO	;wreg free
   254                           ;rgl.c: 42: ModZgCO();
   255  00104C  D9AC               	call	_ModZgCO	;wreg free
   256                           ;rgl.c: 43: ModDkCO();
   257  00104E  DAA0               	call	_ModDkCO	;wreg free
   258                           ;rgl.c: 44: if(RTdS(3)>10)
   259  001050  0E03               	movlw	3
   260  001052  EC29  F05C         	call	_RTdS
   261  001056  6E00               	movwf	btemp,c
   262  001058  0E0B               	movlw	11
   263  00105A  5C00               	subwf	btemp,w,c
   264  00105C  E307               	bnc	l18
   265                           ;rgl.c: 45: {
   266  00105E  0E03               	movlw	3
   267  001060  EC17  F05C         	call	_StartRTdS
   268                           ;rgl.c: 47: IncConstCOCW();
   269  001064  ECB3  F00E         	call	_IncConstCOCW	;wreg free
   270                           ;rgl.c: 48: IncMaxCO();
   271  001068  DBC1               	call	_IncMaxCO	;wreg free
   272                           ;rgl.c: 49: ModPruCO();
   273  00106A  DAF6               	call	_ModPruCO	;wreg free
   274  00106C                     l18:
   275                           ;rgl.c: 50: }
   276  00106C  EC5F  F00C         	call	_ModPrzCO	;wreg free
   277                           ;rgl.c: 52: PropOPT();
   278  001070  EF8F  F00C         	goto	_PropOPT	;wreg free
   279                           ;rgl.c: 53: }
   280  001074                     l17:
   281                           ;rgl.c: 54: else
   282  001074  0100               	movlb	(_M+8) shr (0+8)
   283  001076  5172               	movf	(_M+8)& (0+255),w,b
   284  001078  1173               	iorwf	(_M+9)& (0+255),w,b
   285  00107A  B4D8               	btfsc	status,2,c
   286  00107C  0012               	return	
   287                           ;rgl.c: 56: {
   288  00107E  ECB9  F00C         	call	_StartMCW	;wreg free
   289                           ;rgl.c: 58: ReadDataCW();
   290  001082  ECC0  F00E         	call	_ReadDataCW	;wreg free
   291                           ;rgl.c: 59: ModToCW();
   292  001086  ECA7  F00E         	call	_ModToCW	;wreg free
   293                           ;rgl.c: 60: ModZgCW();
   294  00108A  ECC9  F00E         	call	_ModZgCW	;wreg free
   295                           ;rgl.c: 61: ModDkCW();
   296  00108E  ECBA  F00F         	call	_ModDkCW	;wreg free
   297                           ;rgl.c: 62: if(RTdS(3)>10)
   298  001092  0E03               	movlw	3
   299  001094  EC29  F05C         	call	_RTdS
   300  001098  6E00               	movwf	btemp,c
   301  00109A  0E0B               	movlw	11
   302  00109C  5C00               	subwf	btemp,w,c
   303  00109E  E315               	bnc	l21
   304                           ;rgl.c: 63: {
   305  0010A0  0E03               	movlw	3
   306  0010A2  EC17  F05C         	call	_StartRTdS
   307                           ;rgl.c: 65: if(tmr<0xff) tmr++;
   308  0010A6  CEF5  F000         	movff	_tmr,btemp
   309  0010AA  2800               	incf	btemp,w,c
   310  0010AC  E002               	bz	l22
   311  0010AE  010E               	movlb	_tmr shr (0+8)
   312  0010B0  2BF5               	incf	_tmr& (0+255),f,b
   313  0010B2                     l22:
   314                           ;rgl.c: 66: if(tmr2<0xff) tmr2++;
   315  0010B2  CEF6  F000         	movff	_tmr2,btemp
   316  0010B6  2800               	incf	btemp,w,c
   317  0010B8  E002               	bz	l23
   318  0010BA  010E               	movlb	_tmr2 shr (0+8)
   319  0010BC  2BF6               	incf	_tmr2& (0+255),f,b
   320  0010BE                     l23:
   321                           ;rgl.c: 67: IncConstCOCW();
   322  0010BE  ECB3  F00E         	call	_IncConstCOCW	;wreg free
   323                           ;rgl.c: 68: IncMaxCW();
   324  0010C2  EC37  F012         	call	_IncMaxCW	;wreg free
   325                           ;rgl.c: 69: ModPruCW();
   326  0010C6  EC22  F010         	call	_ModPruCW	;wreg free
   327  0010CA                     l21:
   328                           ;rgl.c: 70: }
   329  0010CA  ECFC  F012         	call	_ModPrzCW	;wreg free
   330                           ;rgl.c: 72: PropCO();
   331  0010CE  EFC3  F014         	goto	_PropCO	;wreg free
   332                           ;rgl.c: 73: }
   333  0010D2                     l24:
   334                           ;rgl.c: 75: }
   335                           ;rgl.c: 77: {
   336  0010D2  0100               	movlb	(_M+10) shr (0+8)
   337  0010D4  5174               	movf	(_M+10)& (0+255),w,b
   338  0010D6  1175               	iorwf	(_M+11)& (0+255),w,b
   339  0010D8  E01D               	bz	l25
   340                           ;rgl.c: 79: {
   341  0010DA  C194  F198         	movff	_PWM+31,_PWM+35
   342                           ;rgl.c: 81: PWM.MINPWM = PWM.MDMOD;
   343  0010DE  C17E  F197         	movff	_PWM+9,_PWM+34
   344                           ;rgl.c: 82: StartCO2();
   345  0010E2  EC67  F019         	call	_StartCO2	;wreg free
   346                           ;rgl.c: 83: ReadDataCO2();
   347  0010E6  ECF1  F019         	call	_ReadDataCO2	;wreg free
   348                           ;rgl.c: 84: ModToCO2();
   349  0010EA  ECD4  F019         	call	_ModToCO2	;wreg free
   350                           ;rgl.c: 85: ModZgCO();
   351  0010EE  D95B               	call	_ModZgCO	;wreg free
   352                           ;rgl.c: 86: ModDkCO();
   353  0010F0  DA4F               	call	_ModDkCO	;wreg free
   354                           ;rgl.c: 87: if(RTdS(3)>10)
   355  0010F2  0E03               	movlw	3
   356  0010F4  EC29  F05C         	call	_RTdS
   357  0010F8  6E00               	movwf	btemp,c
   358  0010FA  0E0B               	movlw	11
   359  0010FC  5C00               	subwf	btemp,w,c
   360  0010FE  E307               	bnc	l26
   361                           ;rgl.c: 88: {
   362  001100  0E03               	movlw	3
   363  001102  EC17  F05C         	call	_StartRTdS
   364                           ;rgl.c: 90: IncConstCO2();
   365  001106  ECE9  F019         	call	_IncConstCO2	;wreg free
   366                           ;rgl.c: 91: IncMaxCO();
   367  00110A  DB70               	call	_IncMaxCO	;wreg free
   368                           ;rgl.c: 92: ModPruCO();
   369  00110C  DAA5               	call	_ModPruCO	;wreg free
   370  00110E                     l26:
   371                           ;rgl.c: 93: }
   372  00110E  DBD7               	call	_ModPrzCO	;wreg free
   373                           ;rgl.c: 96: PropOPT();
   374  001110  EF8F  F00C         	goto	_PropOPT	;wreg free
   375                           ;rgl.c: 97: }
   376  001114                     l25:
   377                           ;rgl.c: 98: else
   378  001114  0100               	movlb	(_M+8) shr (0+8)
   379  001116  5172               	movf	(_M+8)& (0+255),w,b
   380  001118  1173               	iorwf	(_M+9)& (0+255),w,b
   381  00111A  B4D8               	btfsc	status,2,c
   382  00111C  0012               	return	
   383                           ;rgl.c: 100: {
   384  00111E  EC8C  F019         	call	_StartMCW2	;wreg free
   385                           ;rgl.c: 102: ReadDataCW2();
   386  001122  ECF6  F019         	call	_ReadDataCW2	;wreg free
   387                           ;rgl.c: 103: ModToCW2();
   388  001126  ECCE  F019         	call	_ModToCW2	;wreg free
   389                           ;rgl.c: 104: ModZgCW2();
   390  00112A  ECFF  F019         	call	_ModZgCW2	;wreg free
   391                           ;rgl.c: 105: ModDkCW2();
   392  00112E  EC0D  F01B         	call	_ModDkCW2	;wreg free
   393                           ;rgl.c: 106: if(RTdS(3)>10)
   394  001132  0E03               	movlw	3
   395  001134  EC29  F05C         	call	_RTdS
   396  001138  6E00               	movwf	btemp,c
   397  00113A  0E0B               	movlw	11
   398  00113C  5C00               	subwf	btemp,w,c
   399  00113E  E309               	bnc	l29
   400                           ;rgl.c: 107: {
   401  001140  0E03               	movlw	3
   402  001142  EC17  F05C         	call	_StartRTdS
   403                           ;rgl.c: 109: IncConstCW2();
   404  001146  ECDA  F019         	call	_IncConstCW2	;wreg free
   405                           ;rgl.c: 110: IncMaxCW2();
   406  00114A  EC62  F01D         	call	_IncMaxCW2	;wreg free
   407                           ;rgl.c: 111: ModPruCW2();
   408  00114E  EC6D  F01B         	call	_ModPruCW2	;wreg free
   409  001152                     l29:
   410                           ;rgl.c: 112: }
   411  001152  EC9F  F01D         	call	_ModPrzCW2	;wreg free
   412                           ;rgl.c: 114: PropCO2();
   413  001156  EFC4  F01D         	goto	_PropCO2	;wreg free
   414                           ;rgl.c: 115: }
   415  00115A                     l30:
   416                           ;rgl.c: 117: }
   417                           ;rgl.c: 119: {
   418  00115A  0100               	movlb	(_M+10) shr (0+8)
   419  00115C  5174               	movf	(_M+10)& (0+255),w,b
   420  00115E  1175               	iorwf	(_M+11)& (0+255),w,b
   421  001160  E01C               	bz	l31
   422                           ;rgl.c: 121: {
   423  001162  C194  F198         	movff	_PWM+31,_PWM+35
   424                           ;rgl.c: 123: PWM.MINPWM = PWM.MDMOD;
   425  001166  C17E  F197         	movff	_PWM+9,_PWM+34
   426                           ;rgl.c: 124: StartMCO3();
   427  00116A  EC27  F01E         	call	_StartMCO3	;wreg free
   428                           ;rgl.c: 125: ReadDataCO2();
   429  00116E  ECF1  F019         	call	_ReadDataCO2	;wreg free
   430                           ;rgl.c: 126: ModToCO3();
   431  001172  EC23  F01E         	call	_ModToCO3	;wreg free
   432                           ;rgl.c: 127: ModZgCO();
   433  001176  D917               	call	_ModZgCO	;wreg free
   434                           ;rgl.c: 128: ModDkCO();
   435  001178  DA0B               	call	_ModDkCO	;wreg free
   436                           ;rgl.c: 129: if(RTdS(3)>10)
   437  00117A  0E03               	movlw	3
   438  00117C  EC29  F05C         	call	_RTdS
   439  001180  6E00               	movwf	btemp,c
   440  001182  0E0B               	movlw	11
   441  001184  5C00               	subwf	btemp,w,c
   442  001186  E307               	bnc	l32
   443                           ;rgl.c: 130: {
   444  001188  0E03               	movlw	3
   445  00118A  EC17  F05C         	call	_StartRTdS
   446                           ;rgl.c: 132: IncConstCO2();
   447  00118E  ECE9  F019         	call	_IncConstCO2	;wreg free
   448                           ;rgl.c: 133: IncMaxCO();
   449  001192  DB2C               	call	_IncMaxCO	;wreg free
   450                           ;rgl.c: 134: ModPruCO();
   451  001194  DA61               	call	_ModPruCO	;wreg free
   452  001196                     l32:
   453                           ;rgl.c: 135: }
   454  001196  DB93               	call	_ModPrzCO	;wreg free
   455                           ;rgl.c: 138: PropOPT();
   456  001198  D3C2               	goto	_PropOPT	;wreg free
   457                           ;rgl.c: 139: }
   458  00119A                     l31:
   459                           ;rgl.c: 140: else
   460  00119A  0100               	movlb	(_M+8) shr (0+8)
   461  00119C  5172               	movf	(_M+8)& (0+255),w,b
   462  00119E  1173               	iorwf	(_M+9)& (0+255),w,b
   463  0011A0  E105               	bnz	u150
   464  0011A2  0100               	movlb	(_M+6) shr (0+8)
   465  0011A4  5170               	movf	(_M+6)& (0+255),w,b
   466  0011A6  1171               	iorwf	(_M+7)& (0+255),w,b
   467  0011A8  B4D8               	btfsc	status,2,c
   468  0011AA  0012               	return	
   469  0011AC                     u150:
   470                           ;rgl.c: 142: {
   471  0011AC  C195  F198         	movff	_PWM+32,_PWM+35
   472                           ;rgl.c: 144: PWM.MINPWM = PWM.MDMOD;
   473  0011B0  C17E  F197         	movff	_PWM+9,_PWM+34
   474                           ;rgl.c: 145: StartMCO3();
   475  0011B4  EC27  F01E         	call	_StartMCO3	;wreg free
   476                           ;rgl.c: 146: ReadDataCO2();
   477  0011B8  ECF1  F019         	call	_ReadDataCO2	;wreg free
   478                           ;rgl.c: 147: ModToCW3();
   479  0011BC  ECFE  F01D         	call	_ModToCW3	;wreg free
   480                           ;rgl.c: 148: ModZgCO();
   481  0011C0  D8F2               	call	_ModZgCO	;wreg free
   482                           ;rgl.c: 149: ModDkCO();
   483  0011C2  D9E6               	call	_ModDkCO	;wreg free
   484                           ;rgl.c: 150: if(RTdS(3)>10)
   485  0011C4  0E03               	movlw	3
   486  0011C6  EC29  F05C         	call	_RTdS
   487  0011CA  6E00               	movwf	btemp,c
   488  0011CC  0E0B               	movlw	11
   489  0011CE  5C00               	subwf	btemp,w,c
   490  0011D0  E307               	bnc	l35
   491                           ;rgl.c: 151: {
   492  0011D2  0E03               	movlw	3
   493  0011D4  EC17  F05C         	call	_StartRTdS
   494                           ;rgl.c: 153: IncConstCO2();
   495  0011D8  ECE9  F019         	call	_IncConstCO2	;wreg free
   496                           ;rgl.c: 154: IncMaxCO();
   497  0011DC  DB07               	call	_IncMaxCO	;wreg free
   498                           ;rgl.c: 155: ModPruCO();
   499  0011DE  DA3C               	call	_ModPruCO	;wreg free
   500  0011E0                     l35:
   501                           ;rgl.c: 156: }
   502  0011E0  DB6E               	call	_ModPrzCO	;wreg free
   503                           ;rgl.c: 159: PropOPT();
   504  0011E2  D39D               	goto	_PropOPT	;wreg free
   505                           ;rgl.c: 160: }
   506  0011E4                     l36:
   507                           ;rgl.c: 162: }
   508                           ;rgl.c: 164: {
   509  0011E4  0100               	movlb	(_M+10) shr (0+8)
   510  0011E6  5174               	movf	(_M+10)& (0+255),w,b
   511  0011E8  1175               	iorwf	(_M+11)& (0+255),w,b
   512  0011EA  E01C               	bz	l37
   513                           ;rgl.c: 166: {
   514  0011EC  C194  F198         	movff	_PWM+31,_PWM+35
   515                           ;rgl.c: 168: PWM.MINPWM = PWM.MDMOD;
   516  0011F0  C17E  F197         	movff	_PWM+9,_PWM+34
   517                           ;rgl.c: 169: StartCO4();
   518  0011F4  ECE6  F014         	call	_StartCO4	;wreg free
   519                           ;rgl.c: 170: ReadDataCO4();
   520  0011F8  EC68  F015         	call	_ReadDataCO4	;wreg free
   521                           ;rgl.c: 171: ModToCO4();
   522  0011FC  EC5A  F015         	call	_ModToCO4	;wreg free
   523                           ;rgl.c: 172: ModZgCO();
   524  001200  D8D2               	call	_ModZgCO	;wreg free
   525                           ;rgl.c: 173: ModDkCO();
   526  001202  D9C6               	call	_ModDkCO	;wreg free
   527                           ;rgl.c: 174: if(RTdS(3)>10)
   528  001204  0E03               	movlw	3
   529  001206  EC29  F05C         	call	_RTdS
   530  00120A  6E00               	movwf	btemp,c
   531  00120C  0E0B               	movlw	11
   532  00120E  5C00               	subwf	btemp,w,c
   533  001210  E307               	bnc	l38
   534                           ;rgl.c: 175: {
   535  001212  0E03               	movlw	3
   536  001214  EC17  F05C         	call	_StartRTdS
   537                           ;rgl.c: 177: IncConstCOCW4();
   538  001218  EC60  F015         	call	_IncConstCOCW4	;wreg free
   539                           ;rgl.c: 178: IncMaxCO();
   540  00121C  DAE7               	call	_IncMaxCO	;wreg free
   541                           ;rgl.c: 179: ModPruCO();
   542  00121E  DA1C               	call	_ModPruCO	;wreg free
   543  001220                     l38:
   544                           ;rgl.c: 180: }
   545  001220  DB4E               	call	_ModPrzCO	;wreg free
   546                           ;rgl.c: 182: PropOPT();
   547  001222  D37D               	goto	_PropOPT	;wreg free
   548                           ;rgl.c: 183: }
   549  001224                     l37:
   550                           ;rgl.c: 184: else
   551  001224  0100               	movlb	(_M+8) shr (0+8)
   552  001226  5172               	movf	(_M+8)& (0+255),w,b
   553  001228  1173               	iorwf	(_M+9)& (0+255),w,b
   554  00122A  B4D8               	btfsc	status,2,c
   555  00122C  0012               	return	
   556                           ;rgl.c: 186: {
   557  00122E  EC0A  F015         	call	_StartMCW4	;wreg free
   558                           ;rgl.c: 188: ReadDataCW4();
   559  001232  EC6D  F015         	call	_ReadDataCW4	;wreg free
   560                           ;rgl.c: 189: ModToCW4();
   561  001236  EC54  F015         	call	_ModToCW4	;wreg free
   562                           ;rgl.c: 190: ModZgCW4();
   563  00123A  EC76  F015         	call	_ModZgCW4	;wreg free
   564                           ;rgl.c: 191: ModDkCW4();
   565  00123E  EC82  F016         	call	_ModDkCW4	;wreg free
   566                           ;rgl.c: 192: if(RTdS(3)>10)
   567  001242  0E03               	movlw	3
   568  001244  EC29  F05C         	call	_RTdS
   569  001248  6E00               	movwf	btemp,c
   570  00124A  0E0B               	movlw	11
   571  00124C  5C00               	subwf	btemp,w,c
   572  00124E  E309               	bnc	l41
   573                           ;rgl.c: 193: {
   574  001250  0E03               	movlw	3
   575  001252  EC17  F05C         	call	_StartRTdS
   576                           ;rgl.c: 195: IncConstCOCW4();
   577  001256  EC60  F015         	call	_IncConstCOCW4	;wreg free
   578                           ;rgl.c: 196: IncMaxCW4();
   579  00125A  EC71  F018         	call	_IncMaxCW4	;wreg free
   580                           ;rgl.c: 197: ModPruCW4();
   581  00125E  ECE2  F016         	call	_ModPruCW4	;wreg free
   582  001262                     l41:
   583                           ;rgl.c: 198: }
   584  001262  ECAB  F018         	call	_ModPrzCW4	;wreg free
   585                           ;rgl.c: 200: PropCO4();
   586  001266  EF3E  F019         	goto	_PropCO4	;wreg free
   587                           ;rgl.c: 201: }
   588  00126A                     l42:
   589                           ;rgl.c: 203: }
   590                           ;rgl.c: 205: {
   591  00126A  0100               	movlb	(_M+10) shr (0+8)
   592  00126C  5174               	movf	(_M+10)& (0+255),w,b
   593  00126E  1175               	iorwf	(_M+11)& (0+255),w,b
   594  001270  E01C               	bz	l43
   595                           ;rgl.c: 207: {
   596  001272  C194  F198         	movff	_PWM+31,_PWM+35
   597                           ;rgl.c: 209: PWM.MINPWM = PWM.MDMOD;
   598  001276  C17E  F197         	movff	_PWM+9,_PWM+34
   599                           ;rgl.c: 210: StartCO2();
   600  00127A  EC67  F019         	call	_StartCO2	;wreg free
   601                           ;rgl.c: 211: ReadDataCO2();
   602  00127E  ECF1  F019         	call	_ReadDataCO2	;wreg free
   603                           ;rgl.c: 212: ModToCO2();
   604  001282  ECD4  F019         	call	_ModToCO2	;wreg free
   605                           ;rgl.c: 213: ModZgCO();
   606  001286  D88F               	call	_ModZgCO	;wreg free
   607                           ;rgl.c: 214: ModDkCO();
   608  001288  D983               	call	_ModDkCO	;wreg free
   609                           ;rgl.c: 215: if(RTdS(3)>10)
   610  00128A  0E03               	movlw	3
   611  00128C  EC29  F05C         	call	_RTdS
   612  001290  6E00               	movwf	btemp,c
   613  001292  0E0B               	movlw	11
   614  001294  5C00               	subwf	btemp,w,c
   615  001296  E307               	bnc	l44
   616                           ;rgl.c: 216: {
   617  001298  0E03               	movlw	3
   618  00129A  EC17  F05C         	call	_StartRTdS
   619                           ;rgl.c: 218: IncConstCO2();
   620  00129E  ECE9  F019         	call	_IncConstCO2	;wreg free
   621                           ;rgl.c: 219: IncMaxCO();
   622  0012A2  DAA4               	call	_IncMaxCO	;wreg free
   623                           ;rgl.c: 220: ModPruCO();
   624  0012A4  D9D9               	call	_ModPruCO	;wreg free
   625  0012A6                     l44:
   626                           ;rgl.c: 221: }
   627  0012A6  DB0B               	call	_ModPrzCO	;wreg free
   628                           ;rgl.c: 224: PropOPT();
   629  0012A8  D33A               	goto	_PropOPT	;wreg free
   630                           ;rgl.c: 225: }
   631  0012AA                     l43:
   632                           ;rgl.c: 226: else
   633  0012AA  0100               	movlb	(_M+8) shr (0+8)
   634  0012AC  5172               	movf	(_M+8)& (0+255),w,b
   635  0012AE  1173               	iorwf	(_M+9)& (0+255),w,b
   636  0012B0  B4D8               	btfsc	status,2,c
   637  0012B2  0012               	return	
   638                           ;rgl.c: 228: {
   639  0012B4  EC8C  F019         	call	_StartMCW2	;wreg free
   640                           ;rgl.c: 230: ReadDataCW2();
   641  0012B8  ECF6  F019         	call	_ReadDataCW2	;wreg free
   642                           ;rgl.c: 231: ModToCW2();
   643  0012BC  ECCE  F019         	call	_ModToCW2	;wreg free
   644                           ;rgl.c: 232: ModZgCW2();
   645  0012C0  ECFF  F019         	call	_ModZgCW2	;wreg free
   646                           ;rgl.c: 233: ModDkCW2();
   647  0012C4  EC0D  F01B         	call	_ModDkCW2	;wreg free
   648                           ;rgl.c: 234: if(RTdS(3)>10)
   649  0012C8  0E03               	movlw	3
   650  0012CA  EC29  F05C         	call	_RTdS
   651  0012CE  6E00               	movwf	btemp,c
   652  0012D0  0E0B               	movlw	11
   653  0012D2  5C00               	subwf	btemp,w,c
   654  0012D4  E309               	bnc	l47
   655                           ;rgl.c: 235: {
   656  0012D6  0E03               	movlw	3
   657  0012D8  EC17  F05C         	call	_StartRTdS
   658                           ;rgl.c: 237: IncConstCW2();
   659  0012DC  ECDA  F019         	call	_IncConstCW2	;wreg free
   660                           ;rgl.c: 238: IncMaxCW2();
   661  0012E0  EC62  F01D         	call	_IncMaxCW2	;wreg free
   662                           ;rgl.c: 239: ModPruCW2();
   663  0012E4  EC6D  F01B         	call	_ModPruCW2	;wreg free
   664  0012E8                     l47:
   665                           ;rgl.c: 240: }
   666  0012E8  EC9F  F01D         	call	_ModPrzCW2	;wreg free
   667                           ;rgl.c: 242: PropCO2();
   668  0012EC  EFC4  F01D         	goto	_PropCO2	;wreg free
   669                           ;rgl.c: 243: }
   670  0012F0                     l15:
   671  0012F0  C1B9  FFE8         	movff	_DtKNF+7,wreg
   672  0012F4  0A00               	xorlw	0
   673  0012F6  E101 D730          	bz	l30
   674  0012FA  0A01               	xorlw	1
   675  0012FC  E101 D698          	bz	l16
   676  001300  0A03               	xorlw	3
   677  001302  E101 D76F          	bz	l36
   678  001306  0A01               	xorlw	1
   679  001308  E101 D6E3          	bz	l24
   680  00130C  D7AE               	goto	l42
   681                           ;rgl.c: 247: }
   682  00130E                     __end_of_Moduluj:
   683                           ;rgl.c: 256: void StartMCO1F(void)
   684                           ;rgl.c: 257: {
   685  00130E                     _StartMCO1F:
   686  000000                     
   687                           ;rgl.c: 258: unsigned char k;
   688  00130E  0101               	movlb	_rgl shr (0+8)
   689  001310  B1C9               	btfsc	_rgl& (0+255),0,b
   690  001312  B3C9               	btfsc	_rgl& (0+255),1,b
   691  001314  D001               	goto	l49
   692  001316  0012               	return	
   693  001318                     l49:
   694                           ;rgl.c: 261: if(rgl.btco&&rgl.btcw)
   695  001318  0101               	movlb	_rgl shr (0+8)
   696  00131A  B1C9               	btfsc	_rgl& (0+255),0,b
   697  00131C  A3C9               	btfss	_rgl& (0+255),1,b
   698  00131E  D024               	goto	l50
   699                           ;rgl.c: 262: {
   700  001320  93C9               	bcf	_rgl& (0+255),1,b
   701                           ;rgl.c: 264: if(!Tnizsza(0))
   702  001322  0E00               	movlw	0
   703  001324  EC79  F01E         	call	_Tnizsza
   704  001328  B0D8               	btfsc	status,0,c
   705  00132A  0012               	return	
   706                           ;rgl.c: 265: {
   707  00132C  0E0A               	movlw	10
   708  00132E  6ED9               	movwf	fsr2l,c
   709                           ;rgl.c: 267: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM
      +                          .MDMOD;
   710  001330  C17E  F000         	movff	_PWM+9,btemp
   711  001334  6A01               	clrf	btemp+1,c
   712  001336  C1D0  F002         	movff	_rgl+7,btemp+2
   713  00133A  0EF6               	movlw	246
   714  00133C  2402               	addwf	btemp+2,w,c
   715  00133E  6EF6               	movwf	tblptrl,c
   716  001340  6AF7               	clrf	tblptrh,c
   717  001342  0EFF               	movlw	255
   718  001344  22F7               	addwfc	tblptrh,f,c
   719  001346  50F7               	movf	tblptrh,w,c
   720  001348  0A80               	xorlw	128
   721  00134A  6E02               	movwf	btemp+2,c
   722  00134C  5001               	movf	btemp+1,w,c
   723  00134E  0A80               	xorlw	128
   724  001350  5C02               	subwf	btemp+2,w,c
   725  001352  E102               	bnz	u325
   726  001354  5000               	movf	btemp,w,c
   727  001356  5CF6               	subwf	tblptrl,w,c
   728  001358                     u325:
   729  001358  E203               	bc	l52
   730  00135A  C17E  F1D0         	movff	_PWM+9,_rgl+7
   731  00135E  0012               	return	
   732  001360                     l52:
   733                           ;rgl.c: 268: else rgl.srp-=k;
   734  001360  0101               	movlb	(_rgl+7) shr (0+8)
   735  001362  0EF6               	movlw	-10
   736  001364  27D0               	addwf	(_rgl+7)& (0+255),f,b
   737                           ;rgl.c: 269: }
   738  001366  0CF6               	retlw	246
   739  001368                     l50:
   740                           ;rgl.c: 271: else
   741  001368  0E03               	movlw	3
   742  00136A  EC17  F05C         	call	_StartRTdS
   743                           ;rgl.c: 274: DtCO.dDCO=0;
   744  00136E  0101               	movlb	(_DtCO+9) shr (0+8)
   745  001370  6B29               	clrf	(_DtCO+9)& (0+255),b
   746                           ;rgl.c: 275: DtCO.indCO=0;
   747  001372  0101               	movlb	(_DtCO+10) shr (0+8)
   748  001374  6B2A               	clrf	(_DtCO+10)& (0+255),b
   749                           ;rgl.c: 276: rgl.fz=0;
   750  001376  0101               	movlb	_rgl shr (0+8)
   751  001378  95C9               	bcf	_rgl& (0+255),2,b
   752                           ;rgl.c: 277: rgl.med_up=0;
   753  00137A  97C9               	bcf	_rgl& (0+255),3,b
   754                           ;rgl.c: 278: rgl.fast_up=0;
   755  00137C  99C9               	bcf	_rgl& (0+255),4,b
   756                           ;rgl.c: 280: if(PWM.MMAXCO>PWM.FIRSTPB)
   757  00137E  C194  FFE8         	movff	_PWM+31,wreg
   758  001382  0101               	movlb	(_PWM+26) shr (0+8)
   759  001384  618F               	cpfslt	(_PWM+26)& (0+255),b
   760  001386  D003               	goto	l55
   761                           ;rgl.c: 281: {
   762  001388  C18F  F1D1         	movff	_PWM+26,_rgl+8
   763                           ;rgl.c: 283: }
   764  00138C  D002               	goto	l56
   765  00138E                     l55:
   766                           ;rgl.c: 284: else
   767  00138E  C194  F1D1         	movff	_PWM+31,_rgl+8
   768  001392                     l56:
   769                           ;rgl.c: 287: }
   770  001392  0101               	movlb	(_rgl+7) shr (0+8)
   771  001394  6BD0               	clrf	(_rgl+7)& (0+255),b
   772                           ;rgl.c: 291: rgl.ytmp=0;
   773  001396  6BCF               	clrf	(_rgl+6)& (0+255),b
   774                           ;rgl.c: 292: rgl.nmod=0;
   775  001398  9BC9               	bcf	_rgl& (0+255),5,b
   776                           ;rgl.c: 293: rgl.btcw=0;
   777  00139A  93C9               	bcf	_rgl& (0+255),1,b
   778                           ;rgl.c: 294: rgl.btco=1;
   779  00139C  81C9               	bsf	_rgl& (0+255),0,b
   780                           ;rgl.c: 295: rgl.del1s=0;
   781  00139E  9DC9               	bcf	_rgl& (0+255),6,b
   782                           ;rgl.c: 296: rgl.deln1=0;
   783  0013A0  9FC9               	bcf	_rgl& (0+255),7,b
   784                           ;rgl.c: 297: rgl.inv_mod=0;
   785  0013A2  91CA               	bcf	(_rgl+1)& (0+255),0,b
   786                           ;rgl.c: 298: }
   787  0013A4  0012               	return	
   788  0013A6                     __end_of_StartMCO1F:
   789                           ;rgl.c: 302: void ModZgCO(void)
   790                           ;rgl.c: 303: {
   791  0013A6                     _ModZgCO:
   792  000000                     
   793                           ;rgl.c: 304: signed long m;
   794  0013A6  0101               	movlb	_rgl shr (0+8)
   795  0013A8  A5C9               	btfss	_rgl& (0+255),2,b
   796  0013AA  D00A               	goto	l58
   797                           ;rgl.c: 309: {
   798  0013AC  0E0A               	movlw	10
   799  0013AE  EC79  F01E         	call	_Tnizsza
   800  0013B2  A0D8               	btfss	status,0,c
   801  0013B4  0012               	return	
   802                           ;rgl.c: 311: {
   803  0013B6  C176  F1D1         	movff	_PWM+1,_rgl+8
   804                           ;rgl.c: 313: rgl.srp=0;
   805  0013BA  0101               	movlb	(_rgl+7) shr (0+8)
   806  0013BC  6BD0               	clrf	(_rgl+7)& (0+255),b
   807                           ;rgl.c: 314: rgl.ytmp=0;
   808  0013BE  6BCF               	clrf	(_rgl+6)& (0+255),b
   809                           ;rgl.c: 315: }
   810                           ;rgl.c: 316: else return;
   811  0013C0                     l58:
   812                           ;rgl.c: 317: }
   813  0013C0  0E05               	movlw	5
   814  0013C2  EC79  F01E         	call	_Tnizsza
   815  0013C6  E204               	bc	u381
   816  0013C8  0E00               	movlw	0
   817  0013CA  EC57  F01E         	call	_Tmaleje
   818  0013CE  E207               	bc	u420
   819  0013D0                     u381:
   820  0013D0  0E02               	movlw	2
   821  0013D2  EC79  F01E         	call	_Tnizsza
   822  0013D6  E213               	bc	l61
   823  0013D8  EC72  F01E         	call	_Tstoi	;wreg free
   824  0013DC  E310               	bnc	l61
   825  0013DE                     u420:
   826                           ;rgl.c: 320: {
   827  0013DE  0101               	movlb	_rgl shr (0+8)
   828  0013E0  85C9               	bsf	_rgl& (0+255),2,b
   829                           ;rgl.c: 322: rgl.srp=PWM.BufPWM;
   830  0013E2  C176  F1D0         	movff	_PWM+1,_rgl+7
   831                           ;rgl.c: 323: rgl.xmod=PWM.BufPWM;
   832  0013E6  C176  F1D1         	movff	_PWM+1,_rgl+8
   833                           ;rgl.c: 324: if(rgl.xmod>PWM.MGMOD)
   834  0013EA  C1D1  FFE8         	movff	_rgl+8,wreg
   835  0013EE  0101               	movlb	(_PWM+12) shr (0+8)
   836  0013F0  6181               	cpfslt	(_PWM+12)& (0+255),b
   837  0013F2  0012               	return	
   838                           ;rgl.c: 325: {
   839  0013F4  C181  F1D0         	movff	_PWM+12,_rgl+7
   840                           ;rgl.c: 327: rgl.xmod=PWM.MGMOD;
   841  0013F8  C181  F1D1         	movff	_PWM+12,_rgl+8
   842                           ;rgl.c: 328: }
   843  0013FC  0012               	return	
   844  0013FE                     l61:
   845                           ;rgl.c: 330: }
   846  0013FE  C17E  FFE8         	movff	_PWM+9,wreg
   847  001402  0101               	movlb	(_rgl+8) shr (0+8)
   848  001404  5DD1               	subwf	(_rgl+8)& (0+255),w,b
   849  001406  E318               	bnc	l63
   850  001408  0E0A               	movlw	10
   851  00140A  6E02               	movwf	btemp+2,c
   852  00140C  6A03               	clrf	btemp+3,c
   853  00140E  C17E  FFE8         	movff	_PWM+9,wreg
   854  001412  C1D1  F000         	movff	_rgl+8,btemp
   855  001416  6A01               	clrf	btemp+1,c
   856  001418  5E00               	subwf	btemp,f,c
   857  00141A  0E00               	movlw	0
   858  00141C  5A01               	subwfb	btemp+1,f,c
   859  00141E  ECBF  F062         	call	awmul
   860  001422  0100               	movlb	__Lparam shr (0+8)
   861  001424  C004  F0EA         	movff	btemp+4,?a_ModZgCO
   862  001428  C005  F0EB         	movff	btemp+5,?a_ModZgCO+1
   863  00142C  0E00               	movlw	0
   864  00142E  BFEB               	btfsc	(?a_ModZgCO+1)^(__Lparam& (0+65280)),7,b
   865  001430  0EFF               	movlw	-1
   866  001432  6FEC               	movwf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),b
   867  001434  6FED               	movwf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),b
   868  001436  D005               	goto	l64
   869  001438                     l63:
   870                           ;rgl.c: 332: else m=0;
   871  001438  0100               	movlb	__Lparam shr (0+8)
   872  00143A  6BEA               	clrf	?a_ModZgCO^(__Lparam& (0+65280)),b
   873  00143C  6BEB               	clrf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),b
   874  00143E  6BEC               	clrf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),b
   875  001440  6BED               	clrf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),b
   876  001442                     l64:
   877                           ;rgl.c: 333: m=m/(DtCO.MAD_CO-DtCO.DAD_CO);
   878  001442  C12E  FFE8         	movff	_DtCO+14,wreg
   879  001446  C12D  F000         	movff	_DtCO+13,btemp
   880  00144A  5C00               	subwf	btemp,w,c
   881  00144C  6E04               	movwf	btemp+4,c
   882  00144E  6A05               	clrf	btemp+5,c
   883  001450  A0D8               	btfss	status,0,c
   884  001452  0605               	decf	btemp+5,f,c
   885  001454  6A06               	clrf	btemp+6,c
   886  001456  BE05               	btfsc	btemp+5,7,c
   887  001458  0606               	decf	btemp+6,f,c
   888  00145A  5006               	movf	btemp+6,w,c
   889  00145C  6E07               	movwf	btemp+7,c
   890  00145E  0EEA               	movlw	low ?a_ModZgCO
   891  001460  6EE9               	movwf	fsr0l,c
   892  001462  0E00               	movlw	high ?a_ModZgCO
   893  001464  6EEA               	movwf	fsr0h,c
   894  001466  ECEF  F062         	call	aldiv_f
   895                           ;rgl.c: 334: m=m*(DtCO.AC_CO-DtCO.DAD_CO);
   896  00146A  C12E  FFE8         	movff	_DtCO+14,wreg
   897  00146E  C12C  F000         	movff	_DtCO+12,btemp
   898  001472  5C00               	subwf	btemp,w,c
   899  001474  6E04               	movwf	btemp+4,c
   900  001476  6A05               	clrf	btemp+5,c
   901  001478  A0D8               	btfss	status,0,c
   902  00147A  0605               	decf	btemp+5,f,c
   903  00147C  6A06               	clrf	btemp+6,c
   904  00147E  BE05               	btfsc	btemp+5,7,c
   905  001480  0606               	decf	btemp+6,f,c
   906  001482  5006               	movf	btemp+6,w,c
   907  001484  6E07               	movwf	btemp+7,c
   908  001486  0EEA               	movlw	low ?a_ModZgCO
   909  001488  6EE9               	movwf	fsr0l,c
   910  00148A  0E00               	movlw	high ?a_ModZgCO
   911  00148C  6EEA               	movwf	fsr0h,c
   912  00148E  ECDB  F062         	call	almul_f
   913                           ;rgl.c: 335: if(m<0) m=0;
   914  001492  0100               	movlb	__Lparam shr (0+8)
   915  001494  AFED               	btfss	(?a_ModZgCO+3)^(__Lparam& (0+65280)),7,b
   916  001496  D004               	goto	l65
   917  001498  6BEA               	clrf	?a_ModZgCO^(__Lparam& (0+65280)),b
   918  00149A  6BEB               	clrf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),b
   919  00149C  6BEC               	clrf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),b
   920  00149E  6BED               	clrf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),b
   921  0014A0                     l65:
   922                           ;rgl.c: 336: m=m/10+PWM.MDMOD;
   923  0014A0  0E0A               	movlw	10
   924  0014A2  6E04               	movwf	btemp+4,c
   925  0014A4  6A05               	clrf	btemp+5,c
   926  0014A6  6A06               	clrf	btemp+6,c
   927  0014A8  6A07               	clrf	btemp+7,c
   928  0014AA  C0EA  F000         	movff	?a_ModZgCO,btemp
   929  0014AE  C0EB  F001         	movff	?a_ModZgCO+1,btemp+1
   930  0014B2  C0EC  F002         	movff	?a_ModZgCO+2,btemp+2
   931  0014B6  C0ED  F003         	movff	?a_ModZgCO+3,btemp+3
   932  0014BA  EC4F  F062         	call	aldiv
   933  0014BE  C17E  FFE8         	movff	_PWM+9,wreg
   934  0014C2  2400               	addwf	btemp,w,c
   935  0014C4  0100               	movlb	__Lparam shr (0+8)
   936  0014C6  6FEA               	movwf	?a_ModZgCO^(__Lparam& (0+65280)),b
   937  0014C8  0E00               	movlw	0
   938  0014CA  2001               	addwfc	btemp+1,w,c
   939  0014CC  6FEB               	movwf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),b
   940  0014CE  0E00               	movlw	0
   941  0014D0  2002               	addwfc	btemp+2,w,c
   942  0014D2  6FEC               	movwf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),b
   943  0014D4  0E00               	movlw	0
   944  0014D6  2003               	addwfc	btemp+3,w,c
   945  0014D8  6FED               	movwf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),b
   946                           ;rgl.c: 337: if(m>0xff)
   947  0014DA  51ED               	movf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),w
   948  0014DC  0A80               	xorlw	128
   949  0014DE  0F80               	addlw	128
   950  0014E0  E108               	bnz	u465
   951  0014E2  0E00               	movlw	0
   952  0014E4  5DEC               	subwf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),w
   953  0014E6  E105               	bnz	u465
   954  0014E8  0E01               	movlw	1
   955  0014EA  5DEB               	subwf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),w
   956  0014EC  E102               	bnz	u465
   957  0014EE  0E00               	movlw	0
   958  0014F0  5DEA               	subwf	?a_ModZgCO^(__Lparam& (0+65280)),w
   959  0014F2                     u465:
   960                           ;rgl.c: 338: {
   961  0014F2  0101               	movlb	_rgl shr (0+8)
   962  0014F4  E304               	bnc	L15
   963  0014F6  95C9               	bcf	_rgl& (0+255),2,b
   964                           ;rgl.c: 340: rgl.tmp_pwm=rgl.xmod;
   965  0014F8  C1D1  F1D2         	movff	_rgl+8,_rgl+9
   966                           ;rgl.c: 341: return;
   967  0014FC  0012               	return	
   968                           ;rgl.c: 342: }
   969  0014FE                     L15:
   970  0014FE  A5C9               	btfss	_rgl& (0+255),2,b
   971  001500  D01C               	goto	l67
   972  001502  C1D1  F000         	movff	_rgl+8,btemp
   973  001506  6A01               	clrf	btemp+1,c
   974  001508  6A02               	clrf	btemp+2,c
   975  00150A  6A03               	clrf	btemp+3,c
   976  00150C  0100               	movlb	__Lparam shr (0+8)
   977  00150E  51ED               	movf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),w
   978  001510  0A80               	xorlw	128
   979  001512  6E04               	movwf	btemp+4,c
   980  001514  5003               	movf	btemp+3,w,c
   981  001516  0A80               	xorlw	128
   982  001518  5C04               	subwf	btemp+4,w,c
   983  00151A  E108               	bnz	u485
   984  00151C  5002               	movf	btemp+2,w,c
   985  00151E  5DEC               	subwf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),w
   986  001520  E105               	bnz	u485
   987  001522  5001               	movf	btemp+1,w,c
   988  001524  5DEB               	subwf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),w
   989  001526  E102               	bnz	u485
   990  001528  5000               	movf	btemp,w,c
   991  00152A  5DEA               	subwf	?a_ModZgCO^(__Lparam& (0+65280)),w
   992  00152C                     u485:
   993  00152C  E206               	bc	l67
   994                           ;rgl.c: 344: rgl.srp=(rgl.xmod-m);
   995  00152E  0100               	movlb	__Lparam shr (0+8)
   996  001530  51EA               	movf	?a_ModZgCO^(__Lparam& (0+65280)),w
   997  001532  0101               	movlb	(_rgl+8) shr (0+8)
   998  001534  5DD1               	subwf	(_rgl+8)& (0+255),w,b
   999  001536  CFE8 F1D0          	movff	wreg,_rgl+7
  1000  00153A                     l67:
  1001                           ;rgl.c: 345: m+=rgl.srp;
  1002  00153A  C1D0  FFE8         	movff	_rgl+7,wreg
  1003  00153E  0100               	movlb	__Lparam shr (0+8)
  1004  001540  27EA               	addwf	?a_ModZgCO^(__Lparam& (0+65280)),f,b
  1005  001542  0E01               	movlw	1
  1006  001544  B0D8               	btfsc	status,0,c
  1007  001546  27EB               	addwf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),f,b
  1008  001548  B0D8               	btfsc	status,0,c
  1009  00154A  27EC               	addwf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),f,b
  1010  00154C  B0D8               	btfsc	status,0,c
  1011  00154E  27ED               	addwf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),f,b
  1012                           ;rgl.c: 346: if(m>rgl.xmod) p=rgl.xmod;
  1013  001550  C1D1  F000         	movff	_rgl+8,btemp
  1014  001554  6A01               	clrf	btemp+1,c
  1015  001556  6A02               	clrf	btemp+2,c
  1016  001558  6A03               	clrf	btemp+3,c
  1017  00155A  5003               	movf	btemp+3,w,c
  1018  00155C  0A80               	xorlw	128
  1019  00155E  6E04               	movwf	btemp+4,c
  1020  001560  51ED               	movf	(?a_ModZgCO+3)^(__Lparam& (0+65280)),w
  1021  001562  0A80               	xorlw	128
  1022  001564  5C04               	subwf	btemp+4,w,c
  1023  001566  E108               	bnz	u505
  1024  001568  51EC               	movf	(?a_ModZgCO+2)^(__Lparam& (0+65280)),w
  1025  00156A  5C02               	subwf	btemp+2,w,c
  1026  00156C  E105               	bnz	u505
  1027  00156E  51EB               	movf	(?a_ModZgCO+1)^(__Lparam& (0+65280)),w
  1028  001570  5C01               	subwf	btemp+1,w,c
  1029  001572  E102               	bnz	u505
  1030  001574  51EA               	movf	?a_ModZgCO^(__Lparam& (0+65280)),w
  1031  001576  5C00               	subwf	btemp,w,c
  1032  001578                     u505:
  1033  001578  E203               	bc	l68
  1034  00157A  C1D1  FFD9         	movff	_rgl+8,fsr2l
  1035  00157E  D003               	goto	l69
  1036  001580                     l68:
  1037                           ;rgl.c: 347: else p=m;
  1038  001580  0100               	movlb	__Lparam shr (0+8)
  1039  001582  51EA               	movf	?a_ModZgCO^(__Lparam& (0+65280)),w
  1040  001584  6ED9               	movwf	fsr2l,c
  1041  001586                     l69:
  1042                           ;rgl.c: 348: rgl.fz=0;
  1043  001586  0101               	movlb	_rgl shr (0+8)
  1044  001588  95C9               	bcf	_rgl& (0+255),2,b
  1045                           ;rgl.c: 349: rgl.tmp_pwm=p;
  1046  00158A  CFD9 F1D2          	movff	fsr2l,_rgl+9
  1047                           ;rgl.c: 350: }
  1048  00158E  0012               	return	
  1049  001590                     __end_of_ModZgCO:
  1050                           ;rgl.c: 353: void ModDkCO(void)
  1051                           ;rgl.c: 354: {
  1052  001590                     _ModDkCO:
  1053  000000                     
  1054                           ;rgl.c: 355: signed long m;
  1055  001590  0101               	movlb	_rgl shr (0+8)
  1056  001592  A5C9               	btfss	_rgl& (0+255),2,b
  1057  001594  0012               	return	
  1058                           ;rgl.c: 360: ada=DtCO.AC_CO-DtCO.DAD_CO;
  1059  001596  C12E  FFE8         	movff	_DtCO+14,wreg
  1060  00159A  0101               	movlb	(_DtCO+12) shr (0+8)
  1061  00159C  5D2C               	subwf	(_DtCO+12)& (0+255),w,b
  1062  00159E  0100               	movlb	__Lparam shr (0+8)
  1063  0015A0  6FEA               	movwf	?a_ModDkCO^(__Lparam& (0+65280)),b
  1064                           ;rgl.c: 361: k=5;
  1065  0015A2  0E05               	movlw	5
  1066  0015A4  6FEB               	movwf	(?a_ModDkCO+1)^(__Lparam& (0+65280)),b
  1067                           ;rgl.c: 362: if(Twyzsza(0)) k=6;
  1068  0015A6  0E00               	movlw	0
  1069  0015A8  EC86  F01E         	call	_Twyzsza
  1070  0015AC  E303               	bnc	l72
  1071  0015AE  0E06               	movlw	6
  1072  0015B0  0100               	movlb	__Lparam shr (0+8)
  1073  0015B2  6FEB               	movwf	(?a_ModDkCO+1)^(__Lparam& (0+65280)),b
  1074  0015B4                     l72:
  1075                           ;rgl.c: 363: m=rgl.srp+k*ada;
  1076  0015B4  C0EA  F002         	movff	?a_ModDkCO,btemp+2
  1077  0015B8  6A03               	clrf	btemp+3,c
  1078  0015BA  BE02               	btfsc	btemp+2,7,c
  1079  0015BC  0603               	decf	btemp+3,f,c
  1080  0015BE  C0EB  F000         	movff	?a_ModDkCO+1,btemp
  1081  0015C2  6A01               	clrf	btemp+1,c
  1082  0015C4  ECBF  F062         	call	awmul
  1083  0015C8  C1D0  FFE8         	movff	_rgl+7,wreg
  1084  0015CC  2404               	addwf	btemp+4,w,c
  1085  0015CE  6E00               	movwf	btemp,c
  1086  0015D0  0E00               	movlw	0
  1087  0015D2  2005               	addwfc	btemp+5,w,c
  1088  0015D4  6E01               	movwf	btemp+1,c
  1089  0015D6  0100               	movlb	__Lparam shr (0+8)
  1090  0015D8  C000  F0EC         	movff	btemp,?a_ModDkCO+2
  1091  0015DC  C001  F0ED         	movff	btemp+1,?a_ModDkCO+3
  1092  0015E0  0E00               	movlw	0
  1093  0015E2  BFED               	btfsc	(?a_ModDkCO+3)^(__Lparam& (0+65280)),7,b
  1094  0015E4  0EFF               	movlw	-1
  1095  0015E6  6FEE               	movwf	(?a_ModDkCO+4)^(__Lparam& (0+65280)),b
  1096  0015E8  6FEF               	movwf	(?a_ModDkCO+5)^(__Lparam& (0+65280)),b
  1097                           ;rgl.c: 364: if(m>rgl.xmod) p=rgl.xmod;
  1098  0015EA  C1D1  F000         	movff	_rgl+8,btemp
  1099  0015EE  6A01               	clrf	btemp+1,c
  1100  0015F0  6A02               	clrf	btemp+2,c
  1101  0015F2  6A03               	clrf	btemp+3,c
  1102  0015F4  5003               	movf	btemp+3,w,c
  1103  0015F6  0A80               	xorlw	128
  1104  0015F8  6E04               	movwf	btemp+4,c
  1105  0015FA  51EF               	movf	(?a_ModDkCO+5)^(__Lparam& (0+65280)),w
  1106  0015FC  0A80               	xorlw	128
  1107  0015FE  5C04               	subwf	btemp+4,w,c
  1108  001600  E108               	bnz	u535
  1109  001602  51EE               	movf	(?a_ModDkCO+4)^(__Lparam& (0+65280)),w
  1110  001604  5C02               	subwf	btemp+2,w,c
  1111  001606  E105               	bnz	u535
  1112  001608  51ED               	movf	(?a_ModDkCO+3)^(__Lparam& (0+65280)),w
  1113  00160A  5C01               	subwf	btemp+1,w,c
  1114  00160C  E102               	bnz	u535
  1115  00160E  51EC               	movf	(?a_ModDkCO+2)^(__Lparam& (0+65280)),w
  1116  001610  5C00               	subwf	btemp,w,c
  1117  001612                     u535:
  1118  001612  E203               	bc	l73
  1119  001614  C1D1  FFD9         	movff	_rgl+8,fsr2l
  1120  001618  D01C               	goto	l74
  1121  00161A                     l73:
  1122                           ;rgl.c: 365: else
  1123  00161A  C17E  F000         	movff	_PWM+9,btemp
  1124  00161E  6A01               	clrf	btemp+1,c
  1125  001620  6A02               	clrf	btemp+2,c
  1126  001622  6A03               	clrf	btemp+3,c
  1127  001624  0100               	movlb	__Lparam shr (0+8)
  1128  001626  51EF               	movf	(?a_ModDkCO+5)^(__Lparam& (0+65280)),w
  1129  001628  0A80               	xorlw	128
  1130  00162A  6E04               	movwf	btemp+4,c
  1131  00162C  5003               	movf	btemp+3,w,c
  1132  00162E  0A80               	xorlw	128
  1133  001630  5C04               	subwf	btemp+4,w,c
  1134  001632  E108               	bnz	u545
  1135  001634  5002               	movf	btemp+2,w,c
  1136  001636  5DEE               	subwf	(?a_ModDkCO+4)^(__Lparam& (0+65280)),w
  1137  001638  E105               	bnz	u545
  1138  00163A  5001               	movf	btemp+1,w,c
  1139  00163C  5DED               	subwf	(?a_ModDkCO+3)^(__Lparam& (0+65280)),w
  1140  00163E  E102               	bnz	u545
  1141  001640  5000               	movf	btemp,w,c
  1142  001642  5DEC               	subwf	(?a_ModDkCO+2)^(__Lparam& (0+65280)),w
  1143  001644                     u545:
  1144  001644  E203               	bc	l75
  1145  001646  C17E  FFD9         	movff	_PWM+9,fsr2l
  1146  00164A  D003               	goto	l74
  1147  00164C                     l75:
  1148                           ;rgl.c: 367: else p=m;
  1149  00164C  0100               	movlb	__Lparam shr (0+8)
  1150  00164E  51EC               	movf	(?a_ModDkCO+2)^(__Lparam& (0+65280)),w
  1151  001650  6ED9               	movwf	fsr2l,c
  1152  001652                     l74:
  1153                           ;rgl.c: 368: rgl.tmp_pwm=p;
  1154  001652  CFD9 F1D2          	movff	fsr2l,_rgl+9
  1155                           ;rgl.c: 369: }
  1156  001656  0012               	return	
  1157  001658                     __end_of_ModDkCO:
  1158                           ;rgl.c: 374: void ModPruCO(void)
  1159                           ;rgl.c: 375: {
  1160  001658                     _ModPruCO:
  1161  000000                     
  1162                           ;rgl.c: 376: static unsigned char l;
  1163  001658  0101               	movlb	_rgl shr (0+8)
  1164  00165A  B5C9               	btfsc	_rgl& (0+255),2,b
  1165  00165C  D035               	goto	l78
  1166                           ;rgl.c: 380: {
  1167  00165E  0E00               	movlw	0
  1168  001660  EC57  F01E         	call	_Tmaleje
  1169  001664  E204               	bc	u580
  1170  001666  0E02               	movlw	2
  1171  001668  0101               	movlb	(_rgl+6) shr (0+8)
  1172  00166A  65CF               	cpfsgt	(_rgl+6)& (0+255),b
  1173  00166C  0C02               	retlw	2
  1174  00166E                     u580:
  1175                           ;rgl.c: 382: {
  1176  00166E  0101               	movlb	(_rgl+6) shr (0+8)
  1177  001670  6BCF               	clrf	(_rgl+6)& (0+255),b
  1178                           ;rgl.c: 384: if(PWM.BufPWM>rgl.xmod) return;
  1179  001672  C176  FFE8         	movff	_PWM+1,wreg
  1180  001676  61D1               	cpfslt	(_rgl+8)& (0+255),b
  1181  001678  D001               	goto	l80
  1182  00167A  0012               	return	
  1183  00167C                     l80:
  1184                           ;rgl.c: 385: tmp=rgl.xmod-PWM.BufPWM;
  1185  00167C  C176  FFE8         	movff	_PWM+1,wreg
  1186  001680  0101               	movlb	(_rgl+8) shr (0+8)
  1187  001682  5DD1               	subwf	(_rgl+8)& (0+255),w,b
  1188  001684  6EE1               	movwf	fsr1l,c
  1189                           ;rgl.c: 386: k=6;
  1190  001686  0E06               	movlw	6
  1191  001688  6ED9               	movwf	fsr2l,c
  1192                           ;rgl.c: 387: if(k>tmp) k=tmp;
  1193  00168A  60E1               	cpfslt	fsr1l,c
  1194  00168C  D002               	goto	l81
  1195  00168E  50E1               	movf	fsr1l,w,c
  1196  001690  6ED9               	movwf	fsr2l,c
  1197  001692                     l81:
  1198                           ;rgl.c: 388: if(rgl.srp+k>PWM.MGMOD) rgl.srp=PWM
      +                          .MGMOD;
  1199  001692  50D9               	movf	fsr2l,w,c
  1200  001694  C1D0  F002         	movff	_rgl+7,btemp+2
  1201  001698  6A03               	clrf	btemp+3,c
  1202  00169A  2602               	addwf	btemp+2,f,c
  1203  00169C  0E00               	movlw	0
  1204  00169E  2203               	addwfc	btemp+3,f,c
  1205  0016A0  C181  F000         	movff	_PWM+12,btemp
  1206  0016A4  6A01               	clrf	btemp+1,c
  1207  0016A6  5001               	movf	btemp+1,w,c
  1208  0016A8  0A80               	xorlw	128
  1209  0016AA  6E04               	movwf	btemp+4,c
  1210  0016AC  5003               	movf	btemp+3,w,c
  1211  0016AE  0A80               	xorlw	128
  1212  0016B0  5C04               	subwf	btemp+4,w,c
  1213  0016B2  E102               	bnz	u615
  1214  0016B4  5002               	movf	btemp+2,w,c
  1215  0016B6  5C00               	subwf	btemp,w,c
  1216  0016B8                     u615:
  1217  0016B8  E203               	bc	l82
  1218  0016BA  C181  F1D0         	movff	_PWM+12,_rgl+7
  1219  0016BE  0012               	return	
  1220  0016C0                     l82:
  1221                           ;rgl.c: 389: else rgl.srp+=k;
  1222  0016C0  50D9               	movf	fsr2l,w,c
  1223  0016C2  0101               	movlb	(_rgl+7) shr (0+8)
  1224  0016C4  27D0               	addwf	(_rgl+7)& (0+255),f,b
  1225                           ;rgl.c: 390: }
  1226  0016C6  0012               	return	
  1227  0016C8                     l78:
  1228                           ;rgl.c: 393: else
  1229  0016C8  ECA1  F01E         	call	_Trowna	;wreg free
  1230  0016CC  E301 D08B          	bc	l85
  1231                           ;rgl.c: 396: {
  1232  0016D0  C12E  FFE8         	movff	_DtCO+14,wreg
  1233  0016D4  0101               	movlb	(_DtCO+12) shr (0+8)
  1234  0016D6  612C               	cpfslt	(_DtCO+12)& (0+255),b
  1235  0016D8  D038               	goto	l86
  1236                           ;rgl.c: 398: {
  1237  0016DA  0E00               	movlw	0
  1238  0016DC  EC57  F01E         	call	_Tmaleje
  1239  0016E0  B0D8               	btfsc	status,0,c
  1240  0016E2  0012               	return	
  1241                           ;rgl.c: 400: if(l>=2)
  1242  0016E4  0E01               	movlw	1
  1243  0016E6  010E               	movlb	F1670 shr (0+8)
  1244  0016E8  65D9               	cpfsgt	F1670& (0+255),b
  1245  0016EA  D003               	goto	l88
  1246                           ;rgl.c: 401: {
  1247  0016EC  6ED9               	movwf	fsr2l,c
  1248                           ;rgl.c: 403: l=0;
  1249  0016EE  6BD9               	clrf	F1670& (0+255),b
  1250                           ;rgl.c: 404: }
  1251  0016F0  D003               	goto	l89
  1252  0016F2                     l88:
  1253                           ;rgl.c: 405: else
  1254  0016F2  6AD9               	clrf	fsr2l,c
  1255                           ;rgl.c: 408: l++;
  1256  0016F4  010E               	movlb	F1670 shr (0+8)
  1257  0016F6  2BD9               	incf	F1670& (0+255),f,b
  1258  0016F8                     l89:
  1259                           ;rgl.c: 409: }
  1260  0016F8  C17E  F000         	movff	_PWM+9,btemp
  1261  0016FC  6A01               	clrf	btemp+1,c
  1262  0016FE  50D9               	movf	fsr2l,w,c
  1263  001700  C1D0  F002         	movff	_rgl+7,btemp+2
  1264  001704  6A03               	clrf	btemp+3,c
  1265  001706  5E02               	subwf	btemp+2,f,c
  1266  001708  0E00               	movlw	0
  1267  00170A  5A03               	subwfb	btemp+3,f,c
  1268  00170C  5003               	movf	btemp+3,w,c
  1269  00170E  0A80               	xorlw	128
  1270  001710  6E04               	movwf	btemp+4,c
  1271  001712  5001               	movf	btemp+1,w,c
  1272  001714  0A80               	xorlw	128
  1273  001716  5C04               	subwf	btemp+4,w,c
  1274  001718  E102               	bnz	u665
  1275  00171A  5000               	movf	btemp,w,c
  1276  00171C  5C02               	subwf	btemp+2,w,c
  1277  00171E                     u665:
  1278  00171E  E203               	bc	l90
  1279  001720  C17E  F1D0         	movff	_PWM+9,_rgl+7
  1280  001724  D003               	goto	l91
  1281  001726                     l90:
  1282                           ;rgl.c: 411: else rgl.srp-=k;
  1283  001726  50D9               	movf	fsr2l,w,c
  1284  001728  0101               	movlb	(_rgl+7) shr (0+8)
  1285  00172A  5FD0               	subwf	(_rgl+7)& (0+255),f,b
  1286  00172C                     l91:
  1287                           ;rgl.c: 412: if(rgl.srp>PWM.MAXPWM) rgl.srp=PWM.
      +                          MAXPWM;
  1288  00172C  C1D0  FFE8         	movff	_rgl+7,wreg
  1289  001730  0101               	movlb	(_PWM+35) shr (0+8)
  1290  001732  6198               	cpfslt	(_PWM+35)& (0+255),b
  1291  001734  D002               	goto	l92
  1292  001736  C198  F1D0         	movff	_PWM+35,_rgl+7
  1293  00173A                     l92:
  1294                           ;rgl.c: 413: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.s
      +                          rp;
  1295  00173A  C1D0  FFE8         	movff	_rgl+7,wreg
  1296  00173E  0101               	movlb	(_rgl+8) shr (0+8)
  1297  001740  61D1               	cpfslt	(_rgl+8)& (0+255),b
  1298  001742  0012               	return	
  1299  001744  C1D0  F1D1         	movff	_rgl+7,_rgl+8
  1300                           ;rgl.c: 414: return;
  1301  001748  0012               	return	
  1302  00174A                     l86:
  1303                           ;rgl.c: 416: else
  1304  00174A  0E00               	movlw	0
  1305  00174C  EC4A  F01E         	call	_Trosnie
  1306  001750  B0D8               	btfsc	status,0,c
  1307  001752  0012               	return	
  1308                           ;rgl.c: 419: if(l>=1)
  1309  001754  0E00               	movlw	0
  1310  001756  010E               	movlb	F1670 shr (0+8)
  1311  001758  65D9               	cpfsgt	F1670& (0+255),b
  1312  00175A  D004               	goto	l96
  1313                           ;rgl.c: 420: {
  1314  00175C  0E01               	movlw	1
  1315  00175E  6ED9               	movwf	fsr2l,c
  1316                           ;rgl.c: 422: l=0;
  1317  001760  6BD9               	clrf	F1670& (0+255),b
  1318                           ;rgl.c: 423: }
  1319  001762  D003               	goto	l97
  1320  001764                     l96:
  1321                           ;rgl.c: 424: else
  1322  001764  6AD9               	clrf	fsr2l,c
  1323                           ;rgl.c: 427: l++;
  1324  001766  010E               	movlb	F1670 shr (0+8)
  1325  001768  2BD9               	incf	F1670& (0+255),f,b
  1326  00176A                     l97:
  1327                           ;rgl.c: 428: }
  1328  00176A  C198  FFE8         	movff	_PWM+35,wreg
  1329  00176E  0101               	movlb	(_PWM+12) shr (0+8)
  1330  001770  6181               	cpfslt	(_PWM+12)& (0+255),b
  1331  001772  D017               	goto	l98
  1332                           ;rgl.c: 430: {
  1333  001774  50D9               	movf	fsr2l,w,c
  1334  001776  C1D0  F002         	movff	_rgl+7,btemp+2
  1335  00177A  6A03               	clrf	btemp+3,c
  1336  00177C  2602               	addwf	btemp+2,f,c
  1337  00177E  0E00               	movlw	0
  1338  001780  2203               	addwfc	btemp+3,f,c
  1339  001782  C181  F000         	movff	_PWM+12,btemp
  1340  001786  6A01               	clrf	btemp+1,c
  1341  001788  5001               	movf	btemp+1,w,c
  1342  00178A  0A80               	xorlw	128
  1343  00178C  6E04               	movwf	btemp+4,c
  1344  00178E  5003               	movf	btemp+3,w,c
  1345  001790  0A80               	xorlw	128
  1346  001792  5C04               	subwf	btemp+4,w,c
  1347  001794  E102               	bnz	u725
  1348  001796  5002               	movf	btemp+2,w,c
  1349  001798  5C00               	subwf	btemp,w,c
  1350  00179A                     u725:
  1351  00179A  E21A               	bc	l102
  1352  00179C  C181  F1D0         	movff	_PWM+12,_rgl+7
  1353  0017A0  D01A               	goto	l101
  1354                           ;rgl.c: 432: else rgl.srp+=k;
  1355                           ;rgl.c: 433: }
  1356  0017A2                     l98:
  1357                           ;rgl.c: 434: else
  1358  0017A2  50D9               	movf	fsr2l,w,c
  1359  0017A4  C1D0  F002         	movff	_rgl+7,btemp+2
  1360  0017A8  6A03               	clrf	btemp+3,c
  1361  0017AA  2602               	addwf	btemp+2,f,c
  1362  0017AC  0E00               	movlw	0
  1363  0017AE  2203               	addwfc	btemp+3,f,c
  1364  0017B0  C198  F000         	movff	_PWM+35,btemp
  1365  0017B4  6A01               	clrf	btemp+1,c
  1366  0017B6  5001               	movf	btemp+1,w,c
  1367  0017B8  0A80               	xorlw	128
  1368  0017BA  6E04               	movwf	btemp+4,c
  1369  0017BC  5003               	movf	btemp+3,w,c
  1370  0017BE  0A80               	xorlw	128
  1371  0017C0  5C04               	subwf	btemp+4,w,c
  1372  0017C2  E102               	bnz	u735
  1373  0017C4  5002               	movf	btemp+2,w,c
  1374  0017C6  5C00               	subwf	btemp,w,c
  1375  0017C8                     u735:
  1376  0017C8  E203               	bc	l102
  1377  0017CA  C198  F1D0         	movff	_PWM+35,_rgl+7
  1378  0017CE  D003               	goto	l101
  1379  0017D0                     l102:
  1380                           ;rgl.c: 437: else rgl.srp+=k;
  1381  0017D0  50D9               	movf	fsr2l,w,c
  1382  0017D2  0101               	movlb	(_rgl+7) shr (0+8)
  1383  0017D4  27D0               	addwf	(_rgl+7)& (0+255),f,b
  1384  0017D6                     l101:
  1385                           ;rgl.c: 438: }
  1386  0017D6  C1D0  FFE8         	movff	_rgl+7,wreg
  1387  0017DA  0101               	movlb	(_rgl+8) shr (0+8)
  1388  0017DC  61D1               	cpfslt	(_rgl+8)& (0+255),b
  1389  0017DE  0012               	return	
  1390  0017E0  C1D0  F1D1         	movff	_rgl+7,_rgl+8
  1391                           ;rgl.c: 440: }
  1392  0017E4  0012               	return	
  1393  0017E6                     l85:
  1394  0017E6  010E               	movlb	F1670 shr (0+8)
  1395  0017E8  6BD9               	clrf	F1670& (0+255),b
  1396                           ;rgl.c: 442: }
  1397  0017EA  0012               	return	
  1398  0017EC                     __end_of_ModPruCO:
  1399                           ;rgl.c: 447: void IncMaxCO(void)
  1400                           ;rgl.c: 448: {
  1401  0017EC                     _IncMaxCO:
  1402  000000                     
  1403                           ;rgl.c: 449: unsigned char k;
  1404  0017EC  0E01               	movlw	1
  1405  0017EE  EC4A  F01E         	call	_Trosnie
  1406  0017F2  B0D8               	btfsc	status,0,c
  1407  0017F4  0012               	return	
  1408                           ;rgl.c: 453: k=6;
  1409  0017F6  0E06               	movlw	6
  1410  0017F8  6ED9               	movwf	fsr2l,c
  1411                           ;rgl.c: 454: if(!rgl.fz)
  1412  0017FA  0101               	movlb	_rgl shr (0+8)
  1413  0017FC  B5C9               	btfsc	_rgl& (0+255),2,b
  1414  0017FE  D024               	goto	l108
  1415                           ;rgl.c: 455: {
  1416  001800  C1D1  F002         	movff	_rgl+8,btemp+2
  1417  001804  6A03               	clrf	btemp+3,c
  1418  001806  2602               	addwf	btemp+2,f,c
  1419  001808  0E00               	movlw	0
  1420  00180A  2203               	addwfc	btemp+3,f,c
  1421  00180C  C198  F000         	movff	_PWM+35,btemp
  1422  001810  6A01               	clrf	btemp+1,c
  1423  001812  5001               	movf	btemp+1,w,c
  1424  001814  0A80               	xorlw	128
  1425  001816  6E04               	movwf	btemp+4,c
  1426  001818  5003               	movf	btemp+3,w,c
  1427  00181A  0A80               	xorlw	128
  1428  00181C  5C04               	subwf	btemp+4,w,c
  1429  00181E  E102               	bnz	u775
  1430  001820  5002               	movf	btemp+2,w,c
  1431  001822  5C00               	subwf	btemp,w,c
  1432  001824                     u775:
  1433  001824  E205               	bc	l109
  1434                           ;rgl.c: 461: {
  1435  001826  C198  F1D1         	movff	_PWM+35,_rgl+8
  1436                           ;rgl.c: 463: PmpToUP();
  1437  00182A  EC96  F051         	call	_PmpToUP	;wreg free
  1438                           ;rgl.c: 464: }
  1439  00182E  D005               	goto	l110
  1440  001830                     l109:
  1441                           ;rgl.c: 465: else
  1442  001830  0101               	movlb	(_rgl+8) shr (0+8)
  1443  001832  0E06               	movlw	6
  1444  001834  27D1               	addwf	(_rgl+8)& (0+255),f,b
  1445                           ;rgl.c: 468: PmpToDW();
  1446  001836  ECBE  F051         	call	_PmpToDW	;wreg free
  1447  00183A                     l110:
  1448                           ;rgl.c: 469: }
  1449  00183A  0EF0               	movlw	-16
  1450  00183C  0101               	movlb	(_rgl+8) shr (0+8)
  1451  00183E  65D1               	cpfsgt	(_rgl+8)& (0+255),b
  1452  001840  0CF0               	retlw	240
  1453  001842  CFE8 F1D1          	movff	wreg,_rgl+8
  1454                           ;rgl.c: 471: }
  1455  001846  0CF0               	retlw	240
  1456  001848                     l108:
  1457                           ;rgl.c: 472: else
  1458  001848  C198  FFE8         	movff	_PWM+35,wreg
  1459  00184C  0101               	movlb	(_PWM+12) shr (0+8)
  1460  00184E  6181               	cpfslt	(_PWM+12)& (0+255),b
  1461  001850  D01B               	goto	l113
  1462                           ;rgl.c: 475: {
  1463  001852  0E06               	movlw	6
  1464  001854  C1D1  F002         	movff	_rgl+8,btemp+2
  1465  001858  6A03               	clrf	btemp+3,c
  1466  00185A  2602               	addwf	btemp+2,f,c
  1467  00185C  0E00               	movlw	0
  1468  00185E  2203               	addwfc	btemp+3,f,c
  1469  001860  C181  F000         	movff	_PWM+12,btemp
  1470  001864  6A01               	clrf	btemp+1,c
  1471  001866  5001               	movf	btemp+1,w,c
  1472  001868  0A80               	xorlw	128
  1473  00186A  6E04               	movwf	btemp+4,c
  1474  00186C  5003               	movf	btemp+3,w,c
  1475  00186E  0A80               	xorlw	128
  1476  001870  5C04               	subwf	btemp+4,w,c
  1477  001872  E102               	bnz	u805
  1478  001874  5002               	movf	btemp+2,w,c
  1479  001876  5C00               	subwf	btemp,w,c
  1480  001878                     u805:
  1481  001878  E203               	bc	l114
  1482  00187A  C181  F1D1         	movff	_PWM+12,_rgl+8
  1483  00187E  0012               	return	
  1484  001880                     l114:
  1485                           ;rgl.c: 477: else rgl.xmod+=k;
  1486  001880  0101               	movlb	(_rgl+8) shr (0+8)
  1487  001882  0E06               	movlw	6
  1488  001884  27D1               	addwf	(_rgl+8)& (0+255),f,b
  1489                           ;rgl.c: 478: }
  1490  001886  0C06               	retlw	6
  1491  001888                     l113:
  1492                           ;rgl.c: 479: else
  1493  001888  0E06               	movlw	6
  1494  00188A  C1D1  F002         	movff	_rgl+8,btemp+2
  1495  00188E  6A03               	clrf	btemp+3,c
  1496  001890  2602               	addwf	btemp+2,f,c
  1497  001892  0E00               	movlw	0
  1498  001894  2203               	addwfc	btemp+3,f,c
  1499  001896  C198  F000         	movff	_PWM+35,btemp
  1500  00189A  6A01               	clrf	btemp+1,c
  1501  00189C  5001               	movf	btemp+1,w,c
  1502  00189E  0A80               	xorlw	128
  1503  0018A0  6E04               	movwf	btemp+4,c
  1504  0018A2  5003               	movf	btemp+3,w,c
  1505  0018A4  0A80               	xorlw	128
  1506  0018A6  5C04               	subwf	btemp+4,w,c
  1507  0018A8  E102               	bnz	u815
  1508  0018AA  5002               	movf	btemp+2,w,c
  1509  0018AC  5C00               	subwf	btemp,w,c
  1510  0018AE                     u815:
  1511  0018AE  E203               	bc	l117
  1512  0018B0  C198  F1D1         	movff	_PWM+35,_rgl+8
  1513  0018B4  0012               	return	
  1514  0018B6                     l117:
  1515                           ;rgl.c: 482: else rgl.xmod+=k;
  1516  0018B6  0101               	movlb	(_rgl+8) shr (0+8)
  1517  0018B8  0E06               	movlw	6
  1518  0018BA  27D1               	addwf	(_rgl+8)& (0+255),f,b
  1519                           ;rgl.c: 483: }
  1520  0018BC  0C06               	retlw	6
  1521  0018BE                     __end_of_IncMaxCO:
  1522                           ;rgl.c: 488: void ModPrzCO(void)
  1523                           ;rgl.c: 489: {
  1524  0018BE                     _ModPrzCO:
  1525  000000                     
  1526                           ;rgl.c: 490: unsigned char k;
  1527  0018BE  0101               	movlb	_rgl shr (0+8)
  1528  0018C0  BBC9               	btfsc	_rgl& (0+255),5,b
  1529  0018C2  D025               	goto	l120
  1530                           ;rgl.c: 493: {
  1531  0018C4  0E03               	movlw	3
  1532  0018C6  EC86  F01E         	call	_Twyzsza
  1533  0018CA  A0D8               	btfss	status,0,c
  1534  0018CC  0012               	return	
  1535                           ;rgl.c: 495: {
  1536  0018CE  0101               	movlb	_rgl shr (0+8)
  1537  0018D0  8BC9               	bsf	_rgl& (0+255),5,b
  1538                           ;rgl.c: 497: k=20;
  1539  0018D2  0E14               	movlw	20
  1540  0018D4  6ED9               	movwf	fsr2l,c
  1541                           ;rgl.c: 498: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PWM
      +                          .MDMOD;
  1542  0018D6  C17E  F000         	movff	_PWM+9,btemp
  1543  0018DA  6A01               	clrf	btemp+1,c
  1544  0018DC  C1D0  F002         	movff	_rgl+7,btemp+2
  1545  0018E0  0EEC               	movlw	236
  1546  0018E2  2402               	addwf	btemp+2,w,c
  1547  0018E4  6EF6               	movwf	tblptrl,c
  1548  0018E6  6AF7               	clrf	tblptrh,c
  1549  0018E8  0EFF               	movlw	255
  1550  0018EA  22F7               	addwfc	tblptrh,f,c
  1551  0018EC  50F7               	movf	tblptrh,w,c
  1552  0018EE  0A80               	xorlw	128
  1553  0018F0  6E02               	movwf	btemp+2,c
  1554  0018F2  5001               	movf	btemp+1,w,c
  1555  0018F4  0A80               	xorlw	128
  1556  0018F6  5C02               	subwf	btemp+2,w,c
  1557  0018F8  E102               	bnz	u845
  1558  0018FA  5000               	movf	btemp,w,c
  1559  0018FC  5CF6               	subwf	tblptrl,w,c
  1560  0018FE                     u845:
  1561  0018FE  E203               	bc	l122
  1562  001900  C17E  F1D0         	movff	_PWM+9,_rgl+7
  1563  001904  0012               	return	
  1564  001906                     l122:
  1565                           ;rgl.c: 499: else rgl.srp-=k;
  1566  001906  0101               	movlb	(_rgl+7) shr (0+8)
  1567  001908  0EEC               	movlw	-20
  1568  00190A  27D0               	addwf	(_rgl+7)& (0+255),f,b
  1569                           ;rgl.c: 500: }
  1570  00190C  0CEC               	retlw	236
  1571  00190E                     l120:
  1572                           ;rgl.c: 502: else
  1573  00190E  0E02               	movlw	2
  1574  001910  EC86  F01E         	call	_Twyzsza
  1575  001914  B0D8               	btfsc	status,0,c
  1576  001916  0012               	return	
  1577                           ;rgl.c: 505: rgl.nmod=0;
  1578  001918  0101               	movlb	_rgl shr (0+8)
  1579  00191A  9BC9               	bcf	_rgl& (0+255),5,b
  1580                           ;rgl.c: 506: }
  1581  00191C  0012               	return	
  1582  00191E                     __end_of_ModPrzCO:
  1583                           ;rgl.c: 510: void PropOPT(void)
  1584                           ;rgl.c: 511: {
  1585  00191E                     _PropOPT:
  1586  000000                     
  1587                           ;rgl.c: 512: if(rgl.nmod)
  1588  00191E  0101               	movlb	_rgl shr (0+8)
  1589  001920  BBC9               	btfsc	_rgl& (0+255),5,b
  1590  001922  EFFA  F01D         	goto	l638
  1591                           ;rgl.c: 513: {
  1592                           ;rgl.c: 516: }
  1593  001926  EF63  F019         	goto	l483
  1594                           ;rgl.c: 517: else
  1595                           ;rgl.c: 521: }
  1596  00192A                     __end_of_PropOPT:
  1597                           ;rgl.c: 531: void StartCO(void)
  1598                           ;rgl.c: 532: {
  1599  00192A                     _StartCO:
  1600  000000                     
  1601                           ;rgl.c: 533: unsigned char k;
  1602  00192A  0101               	movlb	_rgl shr (0+8)
  1603  00192C  A1C9               	btfss	_rgl& (0+255),0,b
  1604  00192E  B3C9               	btfsc	_rgl& (0+255),1,b
  1605  001930  0012               	return	
  1606                           ;rgl.c: 536: StartRTdS(3);
  1607  001932  0E03               	movlw	3
  1608  001934  EC17  F05C         	call	_StartRTdS
  1609                           ;rgl.c: 537: DtCO.dDCO=0;
  1610  001938  0101               	movlb	(_DtCO+9) shr (0+8)
  1611  00193A  6B29               	clrf	(_DtCO+9)& (0+255),b
  1612                           ;rgl.c: 538: DtCO.indCO=0;
  1613  00193C  0101               	movlb	(_DtCO+10) shr (0+8)
  1614  00193E  6B2A               	clrf	(_DtCO+10)& (0+255),b
  1615                           ;rgl.c: 539: DtCW.dDCW=0;
  1616  001940  0101               	movlb	(_DtCW+8) shr (0+8)
  1617  001942  6B19               	clrf	(_DtCW+8)& (0+255),b
  1618                           ;rgl.c: 540: DtCW.indCW=0;
  1619  001944  0101               	movlb	(_DtCW+10) shr (0+8)
  1620  001946  6B1B               	clrf	(_DtCW+10)& (0+255),b
  1621                           ;rgl.c: 541: rgl.fz=0;
  1622  001948  0101               	movlb	_rgl shr (0+8)
  1623  00194A  95C9               	bcf	_rgl& (0+255),2,b
  1624                           ;rgl.c: 542: rgl.med_up=0;
  1625  00194C  97C9               	bcf	_rgl& (0+255),3,b
  1626                           ;rgl.c: 543: rgl.fast_up=0;
  1627  00194E  99C9               	bcf	_rgl& (0+255),4,b
  1628                           ;rgl.c: 545: if(PWM.MMAXCO>PWM.FIRSTPB)
  1629  001950  C194  FFE8         	movff	_PWM+31,wreg
  1630  001954  0101               	movlb	(_PWM+26) shr (0+8)
  1631  001956  618F               	cpfslt	(_PWM+26)& (0+255),b
  1632  001958  D003               	goto	l131
  1633                           ;rgl.c: 546: {
  1634  00195A  C18F  F1D1         	movff	_PWM+26,_rgl+8
  1635                           ;rgl.c: 548: }
  1636  00195E  D002               	goto	l132
  1637  001960                     l131:
  1638                           ;rgl.c: 549: else
  1639  001960  C194  F1D1         	movff	_PWM+31,_rgl+8
  1640  001964                     l132:
  1641                           ;rgl.c: 552: }
  1642  001964  0101               	movlb	(_rgl+7) shr (0+8)
  1643  001966  6BD0               	clrf	(_rgl+7)& (0+255),b
  1644                           ;rgl.c: 554: rgl.ytmp=0;
  1645  001968  6BCF               	clrf	(_rgl+6)& (0+255),b
  1646                           ;rgl.c: 555: rgl.nmod=0;
  1647  00196A  9BC9               	bcf	_rgl& (0+255),5,b
  1648                           ;rgl.c: 556: rgl.del1s=0;
  1649  00196C  9DC9               	bcf	_rgl& (0+255),6,b
  1650                           ;rgl.c: 557: rgl.inv_mod=0;
  1651  00196E  91CA               	bcf	(_rgl+1)& (0+255),0,b
  1652                           ;rgl.c: 558: }
  1653  001970  0012               	return	
  1654  001972                     __end_of_StartCO:
  1655                           ;rgl.c: 561: void StartMCW(void)
  1656                           ;rgl.c: 562: {
  1657  001972                     _StartMCW:
  1658  000000                     
  1659                           ;rgl.c: 563: if(rgl.btco||rgl.btcw) return;
  1660  001972  0101               	movlb	_rgl shr (0+8)
  1661  001974  A1C9               	btfss	_rgl& (0+255),0,b
  1662  001976  B3C9               	btfsc	_rgl& (0+255),1,b
  1663  001978  0012               	return	
  1664                           ;rgl.c: 564: StartRTdS(3);
  1665  00197A  0E03               	movlw	3
  1666  00197C  EC17  F05C         	call	_StartRTdS
  1667                           ;rgl.c: 565: DtCO.dDCO=0;
  1668  001980  0101               	movlb	(_DtCO+9) shr (0+8)
  1669  001982  6B29               	clrf	(_DtCO+9)& (0+255),b
  1670                           ;rgl.c: 566: DtCW.dDCW=0;
  1671  001984  0101               	movlb	(_DtCW+8) shr (0+8)
  1672  001986  6B19               	clrf	(_DtCW+8)& (0+255),b
  1673                           ;rgl.c: 567: DtCO.indCO=0;
  1674  001988  0101               	movlb	(_DtCO+10) shr (0+8)
  1675  00198A  6B2A               	clrf	(_DtCO+10)& (0+255),b
  1676                           ;rgl.c: 568: DtCW.indCW=0;
  1677  00198C  0101               	movlb	(_DtCW+10) shr (0+8)
  1678  00198E  6B1B               	clrf	(_DtCW+10)& (0+255),b
  1679                           ;rgl.c: 569: rgl.fz=0;
  1680  001990  0101               	movlb	_rgl shr (0+8)
  1681  001992  95C9               	bcf	_rgl& (0+255),2,b
  1682                           ;rgl.c: 570: rgl.med_up=0;
  1683  001994  97C9               	bcf	_rgl& (0+255),3,b
  1684                           ;rgl.c: 571: rgl.fast_up=0;
  1685  001996  99C9               	bcf	_rgl& (0+255),4,b
  1686                           ;rgl.c: 573: rgl.srp=0;
  1687  001998  6BD0               	clrf	(_rgl+7)& (0+255),b
  1688                           ;rgl.c: 574: rgl.ytmp=0;
  1689  00199A  6BCF               	clrf	(_rgl+6)& (0+255),b
  1690                           ;rgl.c: 575: rgl.nmod=0;
  1691  00199C  9BC9               	bcf	_rgl& (0+255),5,b
  1692                           ;rgl.c: 576: rgl.del1s=0;
  1693  00199E  9DC9               	bcf	_rgl& (0+255),6,b
  1694                           ;rgl.c: 577: rgl.inv_mod=0;
  1695  0019A0  91CA               	bcf	(_rgl+1)& (0+255),0,b
  1696                           ;rgl.c: 578: rgl.xmod=FirstPCW();
  1697  0019A2  D82E               	call	_FirstPCW	;wreg free
  1698  0019A4  CFE8 F1D1          	movff	wreg,_rgl+8
  1699                           ;rgl.c: 579: tmr=1;
  1700  0019A8  0E01               	movlw	1
  1701  0019AA  CFE8 FEF5          	movff	wreg,_tmr
  1702                           ;rgl.c: 580: tmr2=1;
  1703  0019AE  CFE8 FEF6          	movff	wreg,_tmr2
  1704                           ;rgl.c: 581: pwm_center=PWM.MDMOD+(PWM.MGMOD-PWM
      +                          .MDMOD)/2;
  1705  0019B2  0E02               	movlw	2
  1706  0019B4  6E02               	movwf	btemp+2,c
  1707  0019B6  6A03               	clrf	btemp+3,c
  1708  0019B8  C17E  FFE8         	movff	_PWM+9,wreg
  1709  0019BC  C181  F000         	movff	_PWM+12,btemp
  1710  0019C0  6A01               	clrf	btemp+1,c
  1711  0019C2  5E00               	subwf	btemp,f,c
  1712  0019C4  0E00               	movlw	0
  1713  0019C6  5A01               	subwfb	btemp+1,f,c
  1714  0019C8  EC88  F062         	call	awdiv
  1715  0019CC  C17E  F000         	movff	_PWM+9,btemp
  1716  0019D0  5000               	movf	btemp,w,c
  1717  0019D2  2404               	addwf	btemp+4,w,c
  1718  0019D4  CFE8 FEF3          	movff	wreg,_pwm_center
  1719                           ;rgl.c: 582: pwm_kwr=PWM.MDMOD+(PWM.MGMOD-PWM.MD
      +                          MOD)/4;
  1720  0019D8  0E04               	movlw	4
  1721  0019DA  6E02               	movwf	btemp+2,c
  1722  0019DC  6A03               	clrf	btemp+3,c
  1723  0019DE  C17E  FFE8         	movff	_PWM+9,wreg
  1724  0019E2  C181  F000         	movff	_PWM+12,btemp
  1725  0019E6  6A01               	clrf	btemp+1,c
  1726  0019E8  5E00               	subwf	btemp,f,c
  1727  0019EA  0E00               	movlw	0
  1728  0019EC  5A01               	subwfb	btemp+1,f,c
  1729  0019EE  EC88  F062         	call	awdiv
  1730  0019F2  C17E  F000         	movff	_PWM+9,btemp
  1731  0019F6  5000               	movf	btemp,w,c
  1732  0019F8  2404               	addwf	btemp+4,w,c
  1733  0019FA  CFE8 FEF4          	movff	wreg,_pwm_kwr
  1734                           ;rgl.c: 583: }
  1735  0019FE  0012               	return	
  1736  001A00                     __end_of_StartMCW:
  1737                           ;rgl.c: 645: unsigned char FirstPCW(void)
  1738                           ;rgl.c: 646: {
  1739  001A00                     _FirstPCW:
  1740  000000                     
  1741                           ;rgl.c: 647: signed long m;
  1742  001A00  0E04               	movlw	4
  1743  001A02  6E02               	movwf	btemp+2,c
  1744  001A04  6A03               	clrf	btemp+3,c
  1745  001A06  C17E  FFE8         	movff	_PWM+9,wreg
  1746  001A0A  C18F  F000         	movff	_PWM+26,btemp
  1747  001A0E  6A01               	clrf	btemp+1,c
  1748  001A10  5E00               	subwf	btemp,f,c
  1749  001A12  0E00               	movlw	0
  1750  001A14  5A01               	subwfb	btemp+1,f,c
  1751  001A16  EC88  F062         	call	awdiv
  1752  001A1A  5004               	movf	btemp+4,w,c
  1753  001A1C  6ED9               	movwf	fsr2l,c
  1754                           ;rgl.c: 655: if(PWM.MMAXCW>(PWM.FIRSTPB+tmp))
  1755  001A1E  C195  F000         	movff	_PWM+32,btemp
  1756  001A22  6A01               	clrf	btemp+1,c
  1757  001A24  50D9               	movf	fsr2l,w,c
  1758  001A26  C18F  F002         	movff	_PWM+26,btemp+2
  1759  001A2A  6A03               	clrf	btemp+3,c
  1760  001A2C  2602               	addwf	btemp+2,f,c
  1761  001A2E  0E00               	movlw	0
  1762  001A30  2203               	addwfc	btemp+3,f,c
  1763  001A32  5003               	movf	btemp+3,w,c
  1764  001A34  0A80               	xorlw	128
  1765  001A36  6E04               	movwf	btemp+4,c
  1766  001A38  5001               	movf	btemp+1,w,c
  1767  001A3A  0A80               	xorlw	128
  1768  001A3C  5C04               	subwf	btemp+4,w,c
  1769  001A3E  E102               	bnz	u945
  1770  001A40  5000               	movf	btemp,w,c
  1771  001A42  5C02               	subwf	btemp+2,w,c
  1772  001A44                     u945:
  1773  001A44  E205               	bc	l136
  1774                           ;rgl.c: 656: {
  1775  001A46  50D9               	movf	fsr2l,w,c
  1776  001A48  0101               	movlb	(_PWM+26) shr (0+8)
  1777  001A4A  258F               	addwf	(_PWM+26)& (0+255),w,b
  1778  001A4C  6EE1               	movwf	fsr1l,c
  1779                           ;rgl.c: 658: }
  1780  001A4E  D002               	goto	l137
  1781  001A50                     l136:
  1782                           ;rgl.c: 659: else
  1783  001A50  C195  FFE1         	movff	_PWM+32,fsr1l
  1784  001A54                     l137:
  1785                           ;rgl.c: 662: }
  1786  001A54  0E13               	movlw	19
  1787  001A56  0101               	movlb	(_DtCW+2) shr (0+8)
  1788  001A58  6513               	cpfsgt	(_DtCW+2)& (0+255),b
  1789  001A5A  D06D               	goto	l138
  1790  001A5C  0E3D               	movlw	61
  1791  001A5E  6113               	cpfslt	(_DtCW+2)& (0+255),b
  1792  001A60  D06A               	goto	l138
  1793                           ;rgl.c: 668: {
  1794  001A62  0E0A               	movlw	10
  1795  001A64  6E02               	movwf	btemp+2,c
  1796  001A66  6A03               	clrf	btemp+3,c
  1797  001A68  0E3C               	movlw	60
  1798  001A6A  6E00               	movwf	btemp,c
  1799  001A6C  6A01               	clrf	btemp+1,c
  1800  001A6E  C113  FFE8         	movff	_DtCW+2,wreg
  1801  001A72  5E00               	subwf	btemp,f,c
  1802  001A74  0E00               	movlw	0
  1803  001A76  5A01               	subwfb	btemp+1,f,c
  1804  001A78  ECBF  F062         	call	awmul
  1805  001A7C  0100               	movlb	__Lparam shr (0+8)
  1806  001A7E  C004  F0EB         	movff	btemp+4,?a_FirstPCW+1
  1807  001A82  C005  F0EC         	movff	btemp+5,?a_FirstPCW+2
  1808  001A86  0E00               	movlw	0
  1809  001A88  BFEC               	btfsc	(?a_FirstPCW+2)^(__Lparam& (0+65280)),7,b
  1810  001A8A  0EFF               	movlw	-1
  1811  001A8C  6FED               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
  1812  001A8E  6FEE               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
  1813                           ;rgl.c: 670: m=m/(60-20);
  1814  001A90  0E28               	movlw	40
  1815  001A92  6E04               	movwf	btemp+4,c
  1816  001A94  6A05               	clrf	btemp+5,c
  1817  001A96  6A06               	clrf	btemp+6,c
  1818  001A98  6A07               	clrf	btemp+7,c
  1819  001A9A  0EEB               	movlw	low (?a_FirstPCW+1)
  1820  001A9C  6EE9               	movwf	fsr0l,c
  1821  001A9E  0E00               	movlw	high (?a_FirstPCW+1)
  1822  001AA0  6EEA               	movwf	fsr0h,c
  1823  001AA2  ECEF  F062         	call	aldiv_f
  1824                           ;rgl.c: 671: m=m*(maxmod-PWM.MDMOD);
  1825  001AA6  C17E  FFE8         	movff	_PWM+9,wreg
  1826  001AAA  5CE1               	subwf	fsr1l,w,c
  1827  001AAC  6E04               	movwf	btemp+4,c
  1828  001AAE  6A05               	clrf	btemp+5,c
  1829  001AB0  A0D8               	btfss	status,0,c
  1830  001AB2  0605               	decf	btemp+5,f,c
  1831  001AB4  6A06               	clrf	btemp+6,c
  1832  001AB6  BE05               	btfsc	btemp+5,7,c
  1833  001AB8  0606               	decf	btemp+6,f,c
  1834  001ABA  5006               	movf	btemp+6,w,c
  1835  001ABC  6E07               	movwf	btemp+7,c
  1836  001ABE  0EEB               	movlw	low (?a_FirstPCW+1)
  1837  001AC0  6EE9               	movwf	fsr0l,c
  1838  001AC2  0E00               	movlw	high (?a_FirstPCW+1)
  1839  001AC4  6EEA               	movwf	fsr0h,c
  1840  001AC6  ECDB  F062         	call	almul_f
  1841                           ;rgl.c: 672: if(m<0) m=0;
  1842  001ACA  AFEE               	btfss	(?a_FirstPCW+4)^(__Lparam& (0+65280)),7,b
  1843  001ACC  D004               	goto	l139
  1844  001ACE  6BEB               	clrf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
  1845  001AD0  6BEC               	clrf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
  1846  001AD2  6BED               	clrf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
  1847  001AD4  6BEE               	clrf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
  1848  001AD6                     l139:
  1849                           ;rgl.c: 673: m=m/10+PWM.MDMOD;
  1850  001AD6  0E0A               	movlw	10
  1851  001AD8  6E04               	movwf	btemp+4,c
  1852  001ADA  6A05               	clrf	btemp+5,c
  1853  001ADC  6A06               	clrf	btemp+6,c
  1854  001ADE  6A07               	clrf	btemp+7,c
  1855  001AE0  C0EB  F000         	movff	?a_FirstPCW+1,btemp
  1856  001AE4  C0EC  F001         	movff	?a_FirstPCW+2,btemp+1
  1857  001AE8  C0ED  F002         	movff	?a_FirstPCW+3,btemp+2
  1858  001AEC  C0EE  F003         	movff	?a_FirstPCW+4,btemp+3
  1859  001AF0  EC4F  F062         	call	aldiv
  1860  001AF4  C17E  FFE8         	movff	_PWM+9,wreg
  1861  001AF8  2400               	addwf	btemp,w,c
  1862  001AFA  0100               	movlb	__Lparam shr (0+8)
  1863  001AFC  6FEB               	movwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
  1864  001AFE  0E00               	movlw	0
  1865  001B00  2001               	addwfc	btemp+1,w,c
  1866  001B02  6FEC               	movwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
  1867  001B04  0E00               	movlw	0
  1868  001B06  2002               	addwfc	btemp+2,w,c
  1869  001B08  6FED               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
  1870  001B0A  0E00               	movlw	0
  1871  001B0C  2003               	addwfc	btemp+3,w,c
  1872  001B0E  6FEE               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
  1873                           ;rgl.c: 674: if(m>0xff) p=maxmod;
  1874  001B10  51EE               	movf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),w
  1875  001B12  0A80               	xorlw	128
  1876  001B14  0F80               	addlw	128
  1877  001B16  E108               	bnz	u995
  1878  001B18  0E00               	movlw	0
  1879  001B1A  5DED               	subwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),w
  1880  001B1C  E105               	bnz	u995
  1881  001B1E  0E01               	movlw	1
  1882  001B20  5DEC               	subwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),w
  1883  001B22  E102               	bnz	u995
  1884  001B24  0E00               	movlw	0
  1885  001B26  5DEB               	subwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
  1886  001B28                     u995:
  1887  001B28  E303               	bnc	l140
  1888  001B2A  50E1               	movf	fsr1l,w,c
  1889  001B2C                     L1:
  1890  001B2C  6FEA               	movwf	?a_FirstPCW^(__Lparam& (0+65280)),b
  1891  001B2E  D010               	goto	l142
  1892  001B30                     l140:
  1893                           ;rgl.c: 675: else p=m;
  1894  001B30  0100               	movlb	__Lparam shr (0+8)
  1895  001B32  51EB               	movf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
  1896  001B34  D7FB               	goto	L1
  1897                           ;rgl.c: 676: }
  1898  001B36                     l138:
  1899                           ;rgl.c: 677: else
  1900  001B36  0E14               	movlw	20
  1901  001B38  0101               	movlb	(_DtCW+2) shr (0+8)
  1902  001B3A  6113               	cpfslt	(_DtCW+2)& (0+255),b
  1903  001B3C  D003               	goto	l143
  1904  001B3E  50E1               	movf	fsr1l,w,c
  1905  001B40  0100               	movlb	__Lparam shr (0+8)
  1906  001B42  6FEA               	movwf	?a_FirstPCW^(__Lparam& (0+65280)),b
  1907  001B44                     l143:
  1908                           ;rgl.c: 680: if(DtCW.CW>60) p=PWM.MDMOD;
  1909  001B44  0E3C               	movlw	60
  1910  001B46  0101               	movlb	(_DtCW+2) shr (0+8)
  1911  001B48  6513               	cpfsgt	(_DtCW+2)& (0+255),b
  1912  001B4A  D002               	goto	l142
  1913  001B4C  C17E  F0EA         	movff	_PWM+9,?a_FirstPCW
  1914  001B50                     l142:
  1915                           ;rgl.c: 681: }
  1916  001B50  0E0A               	movlw	10
  1917  001B52  6E02               	movwf	btemp+2,c
  1918  001B54  6A03               	clrf	btemp+3,c
  1919  001B56  C114  F000         	movff	_DtCW+3,btemp
  1920  001B5A  6A01               	clrf	btemp+1,c
  1921  001B5C  0EE2               	movlw	226
  1922  001B5E  2600               	addwf	btemp,f,c
  1923  001B60  0EFF               	movlw	255
  1924  001B62  2201               	addwfc	btemp+1,f,c
  1925  001B64  ECBF  F062         	call	awmul
  1926  001B68  0100               	movlb	__Lparam shr (0+8)
  1927  001B6A  C004  F0EB         	movff	btemp+4,?a_FirstPCW+1
  1928  001B6E  C005  F0EC         	movff	btemp+5,?a_FirstPCW+2
  1929  001B72  0E00               	movlw	0
  1930  001B74  BFEC               	btfsc	(?a_FirstPCW+2)^(__Lparam& (0+65280)),7,b
  1931  001B76  0EFF               	movlw	-1
  1932  001B78  6FED               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
  1933  001B7A  6FEE               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
  1934                           ;rgl.c: 685: m=m/(60-30);
  1935  001B7C  0E1E               	movlw	30
  1936  001B7E  6E04               	movwf	btemp+4,c
  1937  001B80  6A05               	clrf	btemp+5,c
  1938  001B82  6A06               	clrf	btemp+6,c
  1939  001B84  6A07               	clrf	btemp+7,c
  1940  001B86  0EEB               	movlw	low (?a_FirstPCW+1)
  1941  001B88  6EE9               	movwf	fsr0l,c
  1942  001B8A  0E00               	movlw	high (?a_FirstPCW+1)
  1943  001B8C  6EEA               	movwf	fsr0h,c
  1944  001B8E  ECEF  F062         	call	aldiv_f
  1945                           ;rgl.c: 686: m=m*(maxmod-PWM.MDMOD);
  1946  001B92  C17E  FFE8         	movff	_PWM+9,wreg
  1947  001B96  5CE1               	subwf	fsr1l,w,c
  1948  001B98  6E04               	movwf	btemp+4,c
  1949  001B9A  6A05               	clrf	btemp+5,c
  1950  001B9C  A0D8               	btfss	status,0,c
  1951  001B9E  0605               	decf	btemp+5,f,c
  1952  001BA0  6A06               	clrf	btemp+6,c
  1953  001BA2  BE05               	btfsc	btemp+5,7,c
  1954  001BA4  0606               	decf	btemp+6,f,c
  1955  001BA6  5006               	movf	btemp+6,w,c
  1956  001BA8  6E07               	movwf	btemp+7,c
  1957  001BAA  0EEB               	movlw	low (?a_FirstPCW+1)
  1958  001BAC  6EE9               	movwf	fsr0l,c
  1959  001BAE  0E00               	movlw	high (?a_FirstPCW+1)
  1960  001BB0  6EEA               	movwf	fsr0h,c
  1961  001BB2  ECDB  F062         	call	almul_f
  1962                           ;rgl.c: 687: if(m<0) m=0;
  1963  001BB6  AFEE               	btfss	(?a_FirstPCW+4)^(__Lparam& (0+65280)),7,b
  1964  001BB8  D004               	goto	l145
  1965  001BBA  6BEB               	clrf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
  1966  001BBC  6BEC               	clrf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
  1967  001BBE  6BED               	clrf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
  1968  001BC0  6BEE               	clrf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
  1969  001BC2                     l145:
  1970                           ;rgl.c: 688: m=m/10+PWM.MDMOD;
  1971  001BC2  0E0A               	movlw	10
  1972  001BC4  6E04               	movwf	btemp+4,c
  1973  001BC6  6A05               	clrf	btemp+5,c
  1974  001BC8  6A06               	clrf	btemp+6,c
  1975  001BCA  6A07               	clrf	btemp+7,c
  1976  001BCC  C0EB  F000         	movff	?a_FirstPCW+1,btemp
  1977  001BD0  C0EC  F001         	movff	?a_FirstPCW+2,btemp+1
  1978  001BD4  C0ED  F002         	movff	?a_FirstPCW+3,btemp+2
  1979  001BD8  C0EE  F003         	movff	?a_FirstPCW+4,btemp+3
  1980  001BDC  EC4F  F062         	call	aldiv
  1981  001BE0  C17E  FFE8         	movff	_PWM+9,wreg
  1982  001BE4  2400               	addwf	btemp,w,c
  1983  001BE6  0100               	movlb	__Lparam shr (0+8)
  1984  001BE8  6FEB               	movwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
  1985  001BEA  0E00               	movlw	0
  1986  001BEC  2001               	addwfc	btemp+1,w,c
  1987  001BEE  6FEC               	movwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
  1988  001BF0  0E00               	movlw	0
  1989  001BF2  2002               	addwfc	btemp+2,w,c
  1990  001BF4  6FED               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
  1991  001BF6  0E00               	movlw	0
  1992  001BF8  2003               	addwfc	btemp+3,w,c
  1993  001BFA  6FEE               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
  1994                           ;rgl.c: 689: if(m>0xff) p2=maxmod;
  1995  001BFC  51EE               	movf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),w
  1996  001BFE  0A80               	xorlw	128
  1997  001C00  0F80               	addlw	128
  1998  001C02  E108               	bnz	u1035
  1999  001C04  0E00               	movlw	0
  2000  001C06  5DED               	subwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),w
  2001  001C08  E105               	bnz	u1035
  2002  001C0A  0E01               	movlw	1
  2003  001C0C  5DEC               	subwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),w
  2004  001C0E  E102               	bnz	u1035
  2005  001C10  0E00               	movlw	0
  2006  001C12  5DEB               	subwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
  2007  001C14                     u1035:
  2008  001C14  E302               	bnc	l146
  2009  001C16  50E1               	movf	fsr1l,w,c
  2010  001C18  D002               	goto	L2
  2011  001C1A                     l146:
  2012                           ;rgl.c: 690: else p2=m;
  2013  001C1A  0100               	movlb	__Lparam shr (0+8)
  2014  001C1C  51EB               	movf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
  2015  001C1E                     L2:
  2016  001C1E  6ED9               	movwf	fsr2l,c
  2017                           ;rgl.c: 693: if(p>p2) p=p2;
  2018  001C20  0100               	movlb	__Lparam shr (0+8)
  2019  001C22  51EA               	movf	?a_FirstPCW^(__Lparam& (0+65280)),w
  2020  001C24  60D9               	cpfslt	fsr2l,c
  2021  001C26  D002               	goto	l148
  2022  001C28  50D9               	movf	fsr2l,w,c
  2023  001C2A  6FEA               	movwf	?a_FirstPCW^(__Lparam& (0+65280)),b
  2024  001C2C                     l148:
  2025                           ;rgl.c: 696: if(DtCW.DCW>=0&&DtCW.DCW<=40)
  2026  001C2C  C118  F000         	movff	_DtCW+7,btemp
  2027  001C30  C118  FFE8         	movff	_DtCW+7,wreg
  2028  001C34  0A80               	xorlw	128
  2029  001C36  BE00               	btfsc	btemp,7,c
  2030  001C38  D06C               	goto	L16
  2031  001C3A  0F57               	addlw	-169
  2032  001C3C  E267               	bc	l149
  2033                           ;rgl.c: 697: {
  2034  001C3E  0E0A               	movlw	10
  2035  001C40  6E02               	movwf	btemp+2,c
  2036  001C42  6A03               	clrf	btemp+3,c
  2037  001C44  C118  F000         	movff	_DtCW+7,btemp
  2038  001C48  6A01               	clrf	btemp+1,c
  2039  001C4A  BE00               	btfsc	btemp,7,c
  2040  001C4C  0601               	decf	btemp+1,f,c
  2041  001C4E  ECBF  F062         	call	awmul
  2042  001C52  0100               	movlb	__Lparam shr (0+8)
  2043  001C54  C004  F0EB         	movff	btemp+4,?a_FirstPCW+1
  2044  001C58  C005  F0EC         	movff	btemp+5,?a_FirstPCW+2
  2045  001C5C  0E00               	movlw	0
  2046  001C5E  BFEC               	btfsc	(?a_FirstPCW+2)^(__Lparam& (0+65280)),7,b
  2047  001C60  0EFF               	movlw	-1
  2048  001C62  6FED               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
  2049  001C64  6FEE               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
  2050                           ;rgl.c: 699: m=m/(40-0);
  2051  001C66  0E28               	movlw	40
  2052  001C68  6E04               	movwf	btemp+4,c
  2053  001C6A  6A05               	clrf	btemp+5,c
  2054  001C6C  6A06               	clrf	btemp+6,c
  2055  001C6E  6A07               	clrf	btemp+7,c
  2056  001C70  0EEB               	movlw	low (?a_FirstPCW+1)
  2057  001C72  6EE9               	movwf	fsr0l,c
  2058  001C74  0E00               	movlw	high (?a_FirstPCW+1)
  2059  001C76  6EEA               	movwf	fsr0h,c
  2060  001C78  ECEF  F062         	call	aldiv_f
  2061                           ;rgl.c: 700: m=m*(maxmod-PWM.MDMOD);
  2062  001C7C  C17E  FFE8         	movff	_PWM+9,wreg
  2063  001C80  5CE1               	subwf	fsr1l,w,c
  2064  001C82  6E04               	movwf	btemp+4,c
  2065  001C84  6A05               	clrf	btemp+5,c
  2066  001C86  A0D8               	btfss	status,0,c
  2067  001C88  0605               	decf	btemp+5,f,c
  2068  001C8A  6A06               	clrf	btemp+6,c
  2069  001C8C  BE05               	btfsc	btemp+5,7,c
  2070  001C8E  0606               	decf	btemp+6,f,c
  2071  001C90  5006               	movf	btemp+6,w,c
  2072  001C92  6E07               	movwf	btemp+7,c
  2073  001C94  0EEB               	movlw	low (?a_FirstPCW+1)
  2074  001C96  6EE9               	movwf	fsr0l,c
  2075  001C98  0E00               	movlw	high (?a_FirstPCW+1)
  2076  001C9A  6EEA               	movwf	fsr0h,c
  2077  001C9C  ECDB  F062         	call	almul_f
  2078                           ;rgl.c: 701: if(m<0) m=0;
  2079  001CA0  AFEE               	btfss	(?a_FirstPCW+4)^(__Lparam& (0+65280)),7,b
  2080  001CA2  D004               	goto	l150
  2081  001CA4  6BEB               	clrf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
  2082  001CA6  6BEC               	clrf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
  2083  001CA8  6BED               	clrf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
  2084  001CAA  6BEE               	clrf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
  2085  001CAC                     l150:
  2086                           ;rgl.c: 702: m=m/10+PWM.MDMOD;
  2087  001CAC  0E0A               	movlw	10
  2088  001CAE  6E04               	movwf	btemp+4,c
  2089  001CB0  6A05               	clrf	btemp+5,c
  2090  001CB2  6A06               	clrf	btemp+6,c
  2091  001CB4  6A07               	clrf	btemp+7,c
  2092  001CB6  C0EB  F000         	movff	?a_FirstPCW+1,btemp
  2093  001CBA  C0EC  F001         	movff	?a_FirstPCW+2,btemp+1
  2094  001CBE  C0ED  F002         	movff	?a_FirstPCW+3,btemp+2
  2095  001CC2  C0EE  F003         	movff	?a_FirstPCW+4,btemp+3
  2096  001CC6  EC4F  F062         	call	aldiv
  2097  001CCA  C17E  FFE8         	movff	_PWM+9,wreg
  2098  001CCE  2400               	addwf	btemp,w,c
  2099  001CD0  0100               	movlb	__Lparam shr (0+8)
  2100  001CD2  6FEB               	movwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),b
  2101  001CD4  0E00               	movlw	0
  2102  001CD6  2001               	addwfc	btemp+1,w,c
  2103  001CD8  6FEC               	movwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),b
  2104  001CDA  0E00               	movlw	0
  2105  001CDC  2002               	addwfc	btemp+2,w,c
  2106  001CDE  6FED               	movwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),b
  2107  001CE0  0E00               	movlw	0
  2108  001CE2  2003               	addwfc	btemp+3,w,c
  2109  001CE4  6FEE               	movwf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),b
  2110                           ;rgl.c: 703: if(m>0xff) p2=maxmod;
  2111  001CE6  51EE               	movf	(?a_FirstPCW+4)^(__Lparam& (0+65280)),w
  2112  001CE8  0A80               	xorlw	128
  2113  001CEA  0F80               	addlw	128
  2114  001CEC  E108               	bnz	u1095
  2115  001CEE  0E00               	movlw	0
  2116  001CF0  5DED               	subwf	(?a_FirstPCW+3)^(__Lparam& (0+65280)),w
  2117  001CF2  E105               	bnz	u1095
  2118  001CF4  0E01               	movlw	1
  2119  001CF6  5DEC               	subwf	(?a_FirstPCW+2)^(__Lparam& (0+65280)),w
  2120  001CF8  E102               	bnz	u1095
  2121  001CFA  0E00               	movlw	0
  2122  001CFC  5DEB               	subwf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
  2123  001CFE                     u1095:
  2124  001CFE  E303               	bnc	l151
  2125  001D00  50E1               	movf	fsr1l,w,c
  2126  001D02                     L3:
  2127  001D02  6ED9               	movwf	fsr2l,c
  2128  001D04  D00F               	goto	l153
  2129  001D06                     l151:
  2130                           ;rgl.c: 704: else p2=m;
  2131  001D06  0100               	movlb	__Lparam shr (0+8)
  2132  001D08  51EB               	movf	(?a_FirstPCW+1)^(__Lparam& (0+65280)),w
  2133  001D0A  D7FB               	goto	L3
  2134                           ;rgl.c: 705: }
  2135  001D0C                     l149:
  2136                           ;rgl.c: 706: else
  2137  001D0C  C118  FFE8         	movff	_DtCW+7,wreg
  2138  001D10  0A80               	xorlw	128
  2139  001D12                     L16:
  2140  001D12  0F57               	addlw	-169
  2141  001D14  E302               	bnc	l154
  2142  001D16  50E1               	movf	fsr1l,w,c
  2143  001D18  6ED9               	movwf	fsr2l,c
  2144  001D1A                     l154:
  2145                           ;rgl.c: 709: if(DtCW.DCW<0) p2=PWM.MDMOD;
  2146  001D1A  C118  F000         	movff	_DtCW+7,btemp
  2147  001D1E  BE00               	btfsc	btemp,7,c
  2148  001D20  C17E  FFD9         	movff	_PWM+9,fsr2l
  2149  001D24                     l153:
  2150                           ;rgl.c: 710: }
  2151  001D24  0100               	movlb	__Lparam shr (0+8)
  2152  001D26  51EA               	movf	?a_FirstPCW^(__Lparam& (0+65280)),w
  2153  001D28  60D9               	cpfslt	fsr2l,c
  2154  001D2A  D002               	goto	l156
  2155  001D2C  50D9               	movf	fsr2l,w,c
  2156  001D2E  6FEA               	movwf	?a_FirstPCW^(__Lparam& (0+65280)),b
  2157  001D30                     l156:
  2158                           ;rgl.c: 715: return p;
  2159  001D30  0100               	movlb	__Lparam shr (0+8)
  2160  001D32  51EA               	movf	?a_FirstPCW^(__Lparam& (0+65280)),w
  2161  001D34  0012               	return	
  2162                           ;rgl.c: 716: }
  2163  001D36                     __end_of_FirstPCW:
  2164                           ;rgl.c: 719: void ClrMod(void)
  2165                           ;rgl.c: 720: {
  2166  001D36                     _ClrMod:
  2167  000000                     
  2168                           ;rgl.c: 721: rgl.fz=0;
  2169  001D36  0101               	movlb	_rgl shr (0+8)
  2170  001D38  95C9               	bcf	_rgl& (0+255),2,b
  2171                           ;rgl.c: 722: rgl.med_up=0;
  2172  001D3A  97C9               	bcf	_rgl& (0+255),3,b
  2173                           ;rgl.c: 723: rgl.fast_up=0;
  2174  001D3C  99C9               	bcf	_rgl& (0+255),4,b
  2175                           ;rgl.c: 724: rgl.xmod=PWM.BufPWM;
  2176  001D3E  C176  F1D1         	movff	_PWM+1,_rgl+8
  2177                           ;rgl.c: 725: rgl.srp=0;
  2178  001D42  6BD0               	clrf	(_rgl+7)& (0+255),b
  2179                           ;rgl.c: 726: rgl.ytmp=0;
  2180  001D44  6BCF               	clrf	(_rgl+6)& (0+255),b
  2181                           ;rgl.c: 727: rgl.nmod=0;
  2182  001D46  9BC9               	bcf	_rgl& (0+255),5,b
  2183                           ;rgl.c: 728: rgl.del1s=0;
  2184  001D48  9DC9               	bcf	_rgl& (0+255),6,b
  2185                           ;rgl.c: 729: rgl.inv_mod=0;
  2186  001D4A  91CA               	bcf	(_rgl+1)& (0+255),0,b
  2187                           ;rgl.c: 730: }
  2188  001D4C  0012               	return	
  2189  001D4E                     __end_of_ClrMod:
  2190                           ;rgl.c: 733: void ModToCW(void)
  2191                           ;rgl.c: 734: {
  2192  001D4E                     _ModToCW:
  2193  000000                     
  2194                           ;rgl.c: 735: rgl.btcw=1;
  2195  001D4E  0101               	movlb	_rgl shr (0+8)
  2196  001D50  83C9               	bsf	_rgl& (0+255),1,b
  2197                           ;rgl.c: 736: if(rgl.btco)
  2198  001D52  A1C9               	btfss	_rgl& (0+255),0,b
  2199  001D54  0012               	return	
  2200                           ;rgl.c: 737: {
  2201  001D56  91C9               	bcf	_rgl& (0+255),0,b
  2202                           ;rgl.c: 739: ClrMod();
  2203  001D58  D7EE               	goto	_ClrMod	;wreg free
  2204                           ;rgl.c: 740: }
  2205  001D5A                     __end_of_ModToCW:
  2206                           ;rgl.c: 744: void ModToCO(void)
  2207                           ;rgl.c: 745: {
  2208  001D5A                     _ModToCO:
  2209  000000                     
  2210                           ;rgl.c: 746: rgl.btco=1;
  2211  001D5A  0101               	movlb	_rgl shr (0+8)
  2212  001D5C  81C9               	bsf	_rgl& (0+255),0,b
  2213                           ;rgl.c: 747: if(rgl.btcw)
  2214  001D5E  A3C9               	btfss	_rgl& (0+255),1,b
  2215  001D60  0012               	return	
  2216                           ;rgl.c: 748: {
  2217  001D62  93C9               	bcf	_rgl& (0+255),1,b
  2218                           ;rgl.c: 750: ClrMod();
  2219  001D64  D7E8               	goto	_ClrMod	;wreg free
  2220                           ;rgl.c: 751: }
  2221  001D66                     __end_of_ModToCO:
  2222                           ;rgl.c: 755: void IncConstCOCW(void)
  2223                           ;rgl.c: 756: {
  2224  001D66                     _IncConstCOCW:
  2225  000000                     
  2226                           ;rgl.c: 757: if(Tstoi()) rgl.ytmp++;
  2227  001D66  EC72  F01E         	call	_Tstoi	;wreg free
  2228  001D6A  0101               	movlb	(_rgl+6) shr (0+8)
  2229  001D6C  E302               	bnc	L17
  2230  001D6E  2BCF               	incf	(_rgl+6)& (0+255),f,b
  2231  001D70  0C01               	retlw	1
  2232                           ;rgl.c: 758: else rgl.ytmp=0;
  2233  001D72                     L17:
  2234  001D72  6BCF               	clrf	(_rgl+6)& (0+255),b
  2235                           ;rgl.c: 759: }
  2236  001D74  0012               	return	
  2237  001D76                     __end_of_IncConstCOCW:
  2238                           ;rgl.c: 762: void ReadDataCO(void)
  2239                           ;rgl.c: 763: {
  2240  001D76                     _ReadDataCO:
  2241  000000                     
  2242                           ;rgl.c: 764: rgl.x_t=DtCO.DCO;
  2243  001D76  C128  F1CB         	movff	_DtCO+8,_rgl+2
  2244                           ;rgl.c: 765: rgl.x_dt=DtCO.dDCO;
  2245  001D7A  C129  F1CD         	movff	_DtCO+9,_rgl+4
  2246                           ;rgl.c: 766: }
  2247  001D7E  0012               	return	
  2248  001D80                     __end_of_ReadDataCO:
  2249                           ;rgl.c: 769: void ReadDataCW(void)
  2250                           ;rgl.c: 770: {
  2251  001D80                     _ReadDataCW:
  2252  000000                     
  2253                           ;rgl.c: 771: rgl.x_t=DtCW.DCW;
  2254  001D80  C118  F1CB         	movff	_DtCW+7,_rgl+2
  2255                           ;rgl.c: 772: rgl.x_f=DtCO.DCO;
  2256  001D84  C128  F1CC         	movff	_DtCO+8,_rgl+3
  2257                           ;rgl.c: 773: rgl.x_dt=DtCW.dDCW;
  2258  001D88  C119  F1CD         	movff	_DtCW+8,_rgl+4
  2259                           ;rgl.c: 774: rgl.x_df=DtCO.dDCO;
  2260  001D8C  C129  F1CE         	movff	_DtCO+9,_rgl+5
  2261                           ;rgl.c: 775: }
  2262  001D90  0012               	return	
  2263  001D92                     __end_of_ReadDataCW:
  2264                           ;rgl.c: 778: void ModZgCW(void)
  2265                           ;rgl.c: 779: {
  2266  001D92                     _ModZgCW:
  2267  000000                     
  2268                           ;rgl.c: 780: signed long m;
  2269  001D92  0101               	movlb	_rgl shr (0+8)
  2270  001D94  A5C9               	btfss	_rgl& (0+255),2,b
  2271  001D96  D00C               	goto	l168
  2272                           ;rgl.c: 783: {
  2273  001D98  0E03               	movlw	3
  2274  001D9A  EC79  F01E         	call	_Tnizsza
  2275  001D9E  A0D8               	btfss	status,0,c
  2276  001DA0  0012               	return	
  2277                           ;rgl.c: 785: {
  2278  001DA2  C176  F1D1         	movff	_PWM+1,_rgl+8
  2279                           ;rgl.c: 787: rgl.srp=0;
  2280  001DA6  0101               	movlb	(_rgl+7) shr (0+8)
  2281  001DA8  6BD0               	clrf	(_rgl+7)& (0+255),b
  2282                           ;rgl.c: 788: rgl.ytmp=0;
  2283  001DAA  6BCF               	clrf	(_rgl+6)& (0+255),b
  2284                           ;rgl.c: 789: rgl.nmod=0;
  2285  001DAC  9BC9               	bcf	_rgl& (0+255),5,b
  2286                           ;rgl.c: 790: rgl.del1s=0;
  2287  001DAE  9DC9               	bcf	_rgl& (0+255),6,b
  2288                           ;rgl.c: 791: }
  2289                           ;rgl.c: 792: else return;
  2290  001DB0                     l168:
  2291                           ;rgl.c: 793: }
  2292  001DB0  0E00               	movlw	0
  2293  001DB2  EC86  F01E         	call	_Twyzsza
  2294  001DB6  E315               	bnc	l171
  2295  001DB8  EC72  F01E         	call	_Tstoi	;wreg free
  2296  001DBC  E312               	bnc	l171
  2297                           ;rgl.c: 795: {
  2298  001DBE  0101               	movlb	_rgl shr (0+8)
  2299  001DC0  85C9               	bsf	_rgl& (0+255),2,b
  2300                           ;rgl.c: 797: rgl.fast_up=0;
  2301  001DC2  99C9               	bcf	_rgl& (0+255),4,b
  2302                           ;rgl.c: 798: rgl.med_up=0;
  2303  001DC4  97C9               	bcf	_rgl& (0+255),3,b
  2304                           ;rgl.c: 799: rgl.srp=PWM.BufPWM;
  2305  001DC6  C176  F1D0         	movff	_PWM+1,_rgl+7
  2306                           ;rgl.c: 800: rgl.xmod=PWM.BufPWM;
  2307  001DCA  C176  F1D1         	movff	_PWM+1,_rgl+8
  2308                           ;rgl.c: 801: if(rgl.xmod>PWM.MGMOD)
  2309  001DCE  C1D1  FFE8         	movff	_rgl+8,wreg
  2310  001DD2  0101               	movlb	(_PWM+12) shr (0+8)
  2311  001DD4  6181               	cpfslt	(_PWM+12)& (0+255),b
  2312  001DD6  0012               	return	
  2313                           ;rgl.c: 802: {
  2314  001DD8  C181  F1D0         	movff	_PWM+12,_rgl+7
  2315                           ;rgl.c: 804: rgl.xmod=PWM.MGMOD;
  2316  001DDC  C181  F1D1         	movff	_PWM+12,_rgl+8
  2317                           ;rgl.c: 805: }
  2318  001DE0  0012               	return	
  2319  001DE2                     l171:
  2320                           ;rgl.c: 807: }
  2321  001DE2  C17E  FFE8         	movff	_PWM+9,wreg
  2322  001DE6  0101               	movlb	(_rgl+8) shr (0+8)
  2323  001DE8  5DD1               	subwf	(_rgl+8)& (0+255),w,b
  2324  001DEA  E318               	bnc	l173
  2325  001DEC  0E0A               	movlw	10
  2326  001DEE  6E02               	movwf	btemp+2,c
  2327  001DF0  6A03               	clrf	btemp+3,c
  2328  001DF2  C17E  FFE8         	movff	_PWM+9,wreg
  2329  001DF6  C1D1  F000         	movff	_rgl+8,btemp
  2330  001DFA  6A01               	clrf	btemp+1,c
  2331  001DFC  5E00               	subwf	btemp,f,c
  2332  001DFE  0E00               	movlw	0
  2333  001E00  5A01               	subwfb	btemp+1,f,c
  2334  001E02  ECBF  F062         	call	awmul
  2335  001E06  0100               	movlb	__Lparam shr (0+8)
  2336  001E08  C004  F0EA         	movff	btemp+4,?a_ModZgCW
  2337  001E0C  C005  F0EB         	movff	btemp+5,?a_ModZgCW+1
  2338  001E10  0E00               	movlw	0
  2339  001E12  BFEB               	btfsc	(?a_ModZgCW+1)^(__Lparam& (0+65280)),7,b
  2340  001E14  0EFF               	movlw	-1
  2341  001E16  6FEC               	movwf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),b
  2342  001E18  6FED               	movwf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),b
  2343  001E1A  D005               	goto	l174
  2344  001E1C                     l173:
  2345                           ;rgl.c: 809: else m=0;
  2346  001E1C  0100               	movlb	__Lparam shr (0+8)
  2347  001E1E  6BEA               	clrf	?a_ModZgCW^(__Lparam& (0+65280)),b
  2348  001E20  6BEB               	clrf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),b
  2349  001E22  6BEC               	clrf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),b
  2350  001E24  6BED               	clrf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),b
  2351  001E26                     l174:
  2352                           ;rgl.c: 810: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
  2353  001E26  C11F  FFE8         	movff	_DtCW+14,wreg
  2354  001E2A  C11E  F000         	movff	_DtCW+13,btemp
  2355  001E2E  5C00               	subwf	btemp,w,c
  2356  001E30  6E04               	movwf	btemp+4,c
  2357  001E32  6A05               	clrf	btemp+5,c
  2358  001E34  A0D8               	btfss	status,0,c
  2359  001E36  0605               	decf	btemp+5,f,c
  2360  001E38  6A06               	clrf	btemp+6,c
  2361  001E3A  BE05               	btfsc	btemp+5,7,c
  2362  001E3C  0606               	decf	btemp+6,f,c
  2363  001E3E  5006               	movf	btemp+6,w,c
  2364  001E40  6E07               	movwf	btemp+7,c
  2365  001E42  0EEA               	movlw	low ?a_ModZgCW
  2366  001E44  6EE9               	movwf	fsr0l,c
  2367  001E46  0E00               	movlw	high ?a_ModZgCW
  2368  001E48  6EEA               	movwf	fsr0h,c
  2369  001E4A  ECEF  F062         	call	aldiv_f
  2370                           ;rgl.c: 811: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
  2371  001E4E  C11F  FFE8         	movff	_DtCW+14,wreg
  2372  001E52  C11D  F000         	movff	_DtCW+12,btemp
  2373  001E56  5C00               	subwf	btemp,w,c
  2374  001E58  6E04               	movwf	btemp+4,c
  2375  001E5A  6A05               	clrf	btemp+5,c
  2376  001E5C  A0D8               	btfss	status,0,c
  2377  001E5E  0605               	decf	btemp+5,f,c
  2378  001E60  6A06               	clrf	btemp+6,c
  2379  001E62  BE05               	btfsc	btemp+5,7,c
  2380  001E64  0606               	decf	btemp+6,f,c
  2381  001E66  5006               	movf	btemp+6,w,c
  2382  001E68  6E07               	movwf	btemp+7,c
  2383  001E6A  0EEA               	movlw	low ?a_ModZgCW
  2384  001E6C  6EE9               	movwf	fsr0l,c
  2385  001E6E  0E00               	movlw	high ?a_ModZgCW
  2386  001E70  6EEA               	movwf	fsr0h,c
  2387  001E72  ECDB  F062         	call	almul_f
  2388                           ;rgl.c: 812: if(m<0) m=0;
  2389  001E76  0100               	movlb	__Lparam shr (0+8)
  2390  001E78  AFED               	btfss	(?a_ModZgCW+3)^(__Lparam& (0+65280)),7,b
  2391  001E7A  D004               	goto	l175
  2392  001E7C  6BEA               	clrf	?a_ModZgCW^(__Lparam& (0+65280)),b
  2393  001E7E  6BEB               	clrf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),b
  2394  001E80  6BEC               	clrf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),b
  2395  001E82  6BED               	clrf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),b
  2396  001E84                     l175:
  2397                           ;rgl.c: 813: m=m/10+PWM.MDMOD;
  2398  001E84  0E0A               	movlw	10
  2399  001E86  6E04               	movwf	btemp+4,c
  2400  001E88  6A05               	clrf	btemp+5,c
  2401  001E8A  6A06               	clrf	btemp+6,c
  2402  001E8C  6A07               	clrf	btemp+7,c
  2403  001E8E  C0EA  F000         	movff	?a_ModZgCW,btemp
  2404  001E92  C0EB  F001         	movff	?a_ModZgCW+1,btemp+1
  2405  001E96  C0EC  F002         	movff	?a_ModZgCW+2,btemp+2
  2406  001E9A  C0ED  F003         	movff	?a_ModZgCW+3,btemp+3
  2407  001E9E  EC4F  F062         	call	aldiv
  2408  001EA2  C17E  FFE8         	movff	_PWM+9,wreg
  2409  001EA6  2400               	addwf	btemp,w,c
  2410  001EA8  0100               	movlb	__Lparam shr (0+8)
  2411  001EAA  6FEA               	movwf	?a_ModZgCW^(__Lparam& (0+65280)),b
  2412  001EAC  0E00               	movlw	0
  2413  001EAE  2001               	addwfc	btemp+1,w,c
  2414  001EB0  6FEB               	movwf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),b
  2415  001EB2  0E00               	movlw	0
  2416  001EB4  2002               	addwfc	btemp+2,w,c
  2417  001EB6  6FEC               	movwf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),b
  2418  001EB8  0E00               	movlw	0
  2419  001EBA  2003               	addwfc	btemp+3,w,c
  2420  001EBC  6FED               	movwf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),b
  2421                           ;rgl.c: 814: if(m>0xff)
  2422  001EBE  51ED               	movf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),w
  2423  001EC0  0A80               	xorlw	128
  2424  001EC2  0F80               	addlw	128
  2425  001EC4  E108               	bnz	u1245
  2426  001EC6  0E00               	movlw	0
  2427  001EC8  5DEC               	subwf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),w
  2428  001ECA  E105               	bnz	u1245
  2429  001ECC  0E01               	movlw	1
  2430  001ECE  5DEB               	subwf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),w
  2431  001ED0  E102               	bnz	u1245
  2432  001ED2  0E00               	movlw	0
  2433  001ED4  5DEA               	subwf	?a_ModZgCW^(__Lparam& (0+65280)),w
  2434  001ED6                     u1245:
  2435                           ;rgl.c: 815: {
  2436  001ED6  0101               	movlb	_rgl shr (0+8)
  2437  001ED8  E304               	bnc	L18
  2438  001EDA  95C9               	bcf	_rgl& (0+255),2,b
  2439                           ;rgl.c: 817: rgl.tmp_pwm=rgl.xmod;
  2440  001EDC  C1D1  F1D2         	movff	_rgl+8,_rgl+9
  2441                           ;rgl.c: 818: return;
  2442  001EE0  0012               	return	
  2443                           ;rgl.c: 819: }
  2444  001EE2                     L18:
  2445  001EE2  A5C9               	btfss	_rgl& (0+255),2,b
  2446  001EE4  D01C               	goto	l177
  2447  001EE6  C1D1  F000         	movff	_rgl+8,btemp
  2448  001EEA  6A01               	clrf	btemp+1,c
  2449  001EEC  6A02               	clrf	btemp+2,c
  2450  001EEE  6A03               	clrf	btemp+3,c
  2451  001EF0  0100               	movlb	__Lparam shr (0+8)
  2452  001EF2  51ED               	movf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),w
  2453  001EF4  0A80               	xorlw	128
  2454  001EF6  6E04               	movwf	btemp+4,c
  2455  001EF8  5003               	movf	btemp+3,w,c
  2456  001EFA  0A80               	xorlw	128
  2457  001EFC  5C04               	subwf	btemp+4,w,c
  2458  001EFE  E108               	bnz	u1265
  2459  001F00  5002               	movf	btemp+2,w,c
  2460  001F02  5DEC               	subwf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),w
  2461  001F04  E105               	bnz	u1265
  2462  001F06  5001               	movf	btemp+1,w,c
  2463  001F08  5DEB               	subwf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),w
  2464  001F0A  E102               	bnz	u1265
  2465  001F0C  5000               	movf	btemp,w,c
  2466  001F0E  5DEA               	subwf	?a_ModZgCW^(__Lparam& (0+65280)),w
  2467  001F10                     u1265:
  2468  001F10  E206               	bc	l177
  2469                           ;rgl.c: 821: rgl.srp=(rgl.xmod-m);
  2470  001F12  0100               	movlb	__Lparam shr (0+8)
  2471  001F14  51EA               	movf	?a_ModZgCW^(__Lparam& (0+65280)),w
  2472  001F16  0101               	movlb	(_rgl+8) shr (0+8)
  2473  001F18  5DD1               	subwf	(_rgl+8)& (0+255),w,b
  2474  001F1A  CFE8 F1D0          	movff	wreg,_rgl+7
  2475  001F1E                     l177:
  2476                           ;rgl.c: 822: m+=rgl.srp;
  2477  001F1E  C1D0  FFE8         	movff	_rgl+7,wreg
  2478  001F22  0100               	movlb	__Lparam shr (0+8)
  2479  001F24  27EA               	addwf	?a_ModZgCW^(__Lparam& (0+65280)),f,b
  2480  001F26  0E01               	movlw	1
  2481  001F28  B0D8               	btfsc	status,0,c
  2482  001F2A  27EB               	addwf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),f,b
  2483  001F2C  B0D8               	btfsc	status,0,c
  2484  001F2E  27EC               	addwf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),f,b
  2485  001F30  B0D8               	btfsc	status,0,c
  2486  001F32  27ED               	addwf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),f,b
  2487                           ;rgl.c: 823: if(m>rgl.xmod) p=rgl.xmod;
  2488  001F34  C1D1  F000         	movff	_rgl+8,btemp
  2489  001F38  6A01               	clrf	btemp+1,c
  2490  001F3A  6A02               	clrf	btemp+2,c
  2491  001F3C  6A03               	clrf	btemp+3,c
  2492  001F3E  5003               	movf	btemp+3,w,c
  2493  001F40  0A80               	xorlw	128
  2494  001F42  6E04               	movwf	btemp+4,c
  2495  001F44  51ED               	movf	(?a_ModZgCW+3)^(__Lparam& (0+65280)),w
  2496  001F46  0A80               	xorlw	128
  2497  001F48  5C04               	subwf	btemp+4,w,c
  2498  001F4A  E108               	bnz	u1285
  2499  001F4C  51EC               	movf	(?a_ModZgCW+2)^(__Lparam& (0+65280)),w
  2500  001F4E  5C02               	subwf	btemp+2,w,c
  2501  001F50  E105               	bnz	u1285
  2502  001F52  51EB               	movf	(?a_ModZgCW+1)^(__Lparam& (0+65280)),w
  2503  001F54  5C01               	subwf	btemp+1,w,c
  2504  001F56  E102               	bnz	u1285
  2505  001F58  51EA               	movf	?a_ModZgCW^(__Lparam& (0+65280)),w
  2506  001F5A  5C00               	subwf	btemp,w,c
  2507  001F5C                     u1285:
  2508  001F5C  E203               	bc	l178
  2509  001F5E  C1D1  FFD9         	movff	_rgl+8,fsr2l
  2510  001F62  D003               	goto	l179
  2511  001F64                     l178:
  2512                           ;rgl.c: 824: else p=m;
  2513  001F64  0100               	movlb	__Lparam shr (0+8)
  2514  001F66  51EA               	movf	?a_ModZgCW^(__Lparam& (0+65280)),w
  2515  001F68  6ED9               	movwf	fsr2l,c
  2516  001F6A                     l179:
  2517                           ;rgl.c: 825: rgl.fz=0;
  2518  001F6A  0101               	movlb	_rgl shr (0+8)
  2519  001F6C  95C9               	bcf	_rgl& (0+255),2,b
  2520                           ;rgl.c: 826: rgl.tmp_pwm=p;
  2521  001F6E  CFD9 F1D2          	movff	fsr2l,_rgl+9
  2522                           ;rgl.c: 827: }
  2523  001F72  0012               	return	
  2524  001F74                     __end_of_ModZgCW:
  2525                           ;rgl.c: 830: void ModDkCW(void)
  2526                           ;rgl.c: 831: {
  2527  001F74                     _ModDkCW:
  2528  000000                     
  2529                           ;rgl.c: 832: signed long m;
  2530  001F74  0101               	movlb	_rgl shr (0+8)
  2531  001F76  A5C9               	btfss	_rgl& (0+255),2,b
  2532  001F78  0012               	return	
  2533                           ;rgl.c: 837: ada=DtCW.AC_CW-DtCW.DAD_CW;
  2534  001F7A  C11F  FFE8         	movff	_DtCW+14,wreg
  2535  001F7E  0101               	movlb	(_DtCW+12) shr (0+8)
  2536  001F80  5D1D               	subwf	(_DtCW+12)& (0+255),w,b
  2537  001F82  0100               	movlb	__Lparam shr (0+8)
  2538  001F84  6FEA               	movwf	?a_ModDkCW^(__Lparam& (0+65280)),b
  2539                           ;rgl.c: 838: k=1;
  2540  001F86  0E01               	movlw	1
  2541  001F88  6FEB               	movwf	(?a_ModDkCW+1)^(__Lparam& (0+65280)),b
  2542                           ;rgl.c: 839: if(Trowna()) return;
  2543  001F8A  ECA1  F01E         	call	_Trowna	;wreg free
  2544  001F8E  B0D8               	btfsc	status,0,c
  2545  001F90  0012               	return	
  2546                           ;rgl.c: 840: if(Tnizsza(0))
  2547  001F92  0E00               	movlw	0
  2548  001F94  EC79  F01E         	call	_Tnizsza
  2549  001F98  E303               	bnc	l183
  2550                           ;rgl.c: 841: {
  2551  001F9A  0E02               	movlw	2
  2552  001F9C  0100               	movlb	__Lparam shr (0+8)
  2553  001F9E  6FEB               	movwf	(?a_ModDkCW+1)^(__Lparam& (0+65280)),b
  2554  001FA0                     l183:
  2555                           ;rgl.c: 848: }
  2556  001FA0  C0EA  F002         	movff	?a_ModDkCW,btemp+2
  2557  001FA4  6A03               	clrf	btemp+3,c
  2558  001FA6  BE02               	btfsc	btemp+2,7,c
  2559  001FA8  0603               	decf	btemp+3,f,c
  2560  001FAA  C0EB  F000         	movff	?a_ModDkCW+1,btemp
  2561  001FAE  6A01               	clrf	btemp+1,c
  2562  001FB0  ECBF  F062         	call	awmul
  2563  001FB4  C1D0  FFE8         	movff	_rgl+7,wreg
  2564  001FB8  2404               	addwf	btemp+4,w,c
  2565  001FBA  6E00               	movwf	btemp,c
  2566  001FBC  0E00               	movlw	0
  2567  001FBE  2005               	addwfc	btemp+5,w,c
  2568  001FC0  6E01               	movwf	btemp+1,c
  2569  001FC2  0100               	movlb	__Lparam shr (0+8)
  2570  001FC4  C000  F0EC         	movff	btemp,?a_ModDkCW+2
  2571  001FC8  C001  F0ED         	movff	btemp+1,?a_ModDkCW+3
  2572  001FCC  0E00               	movlw	0
  2573  001FCE  BFED               	btfsc	(?a_ModDkCW+3)^(__Lparam& (0+65280)),7,b
  2574  001FD0  0EFF               	movlw	-1
  2575  001FD2  6FEE               	movwf	(?a_ModDkCW+4)^(__Lparam& (0+65280)),b
  2576  001FD4  6FEF               	movwf	(?a_ModDkCW+5)^(__Lparam& (0+65280)),b
  2577                           ;rgl.c: 858: if(m>rgl.xmod) p=rgl.xmod;
  2578  001FD6  C1D1  F000         	movff	_rgl+8,btemp
  2579  001FDA  6A01               	clrf	btemp+1,c
  2580  001FDC  6A02               	clrf	btemp+2,c
  2581  001FDE  6A03               	clrf	btemp+3,c
  2582  001FE0  5003               	movf	btemp+3,w,c
  2583  001FE2  0A80               	xorlw	128
  2584  001FE4  6E04               	movwf	btemp+4,c
  2585  001FE6  51EF               	movf	(?a_ModDkCW+5)^(__Lparam& (0+65280)),w
  2586  001FE8  0A80               	xorlw	128
  2587  001FEA  5C04               	subwf	btemp+4,w,c
  2588  001FEC  E108               	bnz	u1325
  2589  001FEE  51EE               	movf	(?a_ModDkCW+4)^(__Lparam& (0+65280)),w
  2590  001FF0  5C02               	subwf	btemp+2,w,c
  2591  001FF2  E105               	bnz	u1325
  2592  001FF4  51ED               	movf	(?a_ModDkCW+3)^(__Lparam& (0+65280)),w
  2593  001FF6  5C01               	subwf	btemp+1,w,c
  2594  001FF8  E102               	bnz	u1325
  2595  001FFA  51EC               	movf	(?a_ModDkCW+2)^(__Lparam& (0+65280)),w
  2596  001FFC  5C00               	subwf	btemp,w,c
  2597  001FFE                     u1325:
  2598  001FFE  E203               	bc	l184
  2599  002000  C1D1  FFD9         	movff	_rgl+8,fsr2l
  2600  002004  D01C               	goto	l185
  2601  002006                     l184:
  2602                           ;rgl.c: 859: else
  2603  002006  C17E  F000         	movff	_PWM+9,btemp
  2604  00200A  6A01               	clrf	btemp+1,c
  2605  00200C  6A02               	clrf	btemp+2,c
  2606  00200E  6A03               	clrf	btemp+3,c
  2607  002010  0100               	movlb	__Lparam shr (0+8)
  2608  002012  51EF               	movf	(?a_ModDkCW+5)^(__Lparam& (0+65280)),w
  2609  002014  0A80               	xorlw	128
  2610  002016  6E04               	movwf	btemp+4,c
  2611  002018  5003               	movf	btemp+3,w,c
  2612  00201A  0A80               	xorlw	128
  2613  00201C  5C04               	subwf	btemp+4,w,c
  2614  00201E  E108               	bnz	u1335
  2615  002020  5002               	movf	btemp+2,w,c
  2616  002022  5DEE               	subwf	(?a_ModDkCW+4)^(__Lparam& (0+65280)),w
  2617  002024  E105               	bnz	u1335
  2618  002026  5001               	movf	btemp+1,w,c
  2619  002028  5DED               	subwf	(?a_ModDkCW+3)^(__Lparam& (0+65280)),w
  2620  00202A  E102               	bnz	u1335
  2621  00202C  5000               	movf	btemp,w,c
  2622  00202E  5DEC               	subwf	(?a_ModDkCW+2)^(__Lparam& (0+65280)),w
  2623  002030                     u1335:
  2624  002030  E203               	bc	l186
  2625  002032  C17E  FFD9         	movff	_PWM+9,fsr2l
  2626  002036  D003               	goto	l185
  2627  002038                     l186:
  2628                           ;rgl.c: 861: else p=m;
  2629  002038  0100               	movlb	__Lparam shr (0+8)
  2630  00203A  51EC               	movf	(?a_ModDkCW+2)^(__Lparam& (0+65280)),w
  2631  00203C  6ED9               	movwf	fsr2l,c
  2632  00203E                     l185:
  2633                           ;rgl.c: 862: rgl.tmp_pwm=p;
  2634  00203E  CFD9 F1D2          	movff	fsr2l,_rgl+9
  2635                           ;rgl.c: 863: }
  2636  002042  0012               	return	
  2637  002044                     __end_of_ModDkCW:
  2638                           ;rgl.c: 868: void ModPruCW(void)
  2639                           ;rgl.c: 869: {
  2640  002044                     _ModPruCW:
  2641  000000                     
  2642                           ;rgl.c: 870: static unsigned char l,m,o,p,q,r,s;
  2643  002044  0101               	movlb	_rgl shr (0+8)
  2644  002046  B5C9               	btfsc	_rgl& (0+255),2,b
  2645  002048  D119               	goto	l189
  2646                           ;rgl.c: 875: {
  2647  00204A  010E               	movlb	F1703 shr (0+8)
  2648  00204C  6BDA               	clrf	F1703& (0+255),b
  2649                           ;rgl.c: 877: m=0;
  2650  00204E  010E               	movlb	F1704 shr (0+8)
  2651  002050  6BDB               	clrf	F1704& (0+255),b
  2652                           ;rgl.c: 878: o=0;
  2653  002052  010E               	movlb	F1705 shr (0+8)
  2654  002054  6BDC               	clrf	F1705& (0+255),b
  2655                           ;rgl.c: 879: p=0;
  2656  002056  010E               	movlb	F1706 shr (0+8)
  2657  002058  6BDD               	clrf	F1706& (0+255),b
  2658                           ;rgl.c: 880: if(q<255) q++;
  2659  00205A  CEDE  F000         	movff	F1707,btemp
  2660  00205E  2800               	incf	btemp,w,c
  2661  002060  E002               	bz	l190
  2662  002062  010E               	movlb	F1707 shr (0+8)
  2663  002064  2BDE               	incf	F1707& (0+255),f,b
  2664  002066                     l190:
  2665                           ;rgl.c: 881: if(s<255) s++;
  2666  002066  CEE0  F000         	movff	F1709,btemp
  2667  00206A  2800               	incf	btemp,w,c
  2668  00206C  E002               	bz	l191
  2669  00206E  010E               	movlb	F1709 shr (0+8)
  2670  002070  2BE0               	incf	F1709& (0+255),f,b
  2671  002072                     l191:
  2672                           ;rgl.c: 882: if(DtCW._newPCW) s=0;
  2673  002072  0101               	movlb	(_DtCW+1) shr (0+8)
  2674  002074  A112               	btfss	(_DtCW+1)& (0+255),0,b
  2675  002076  D002               	goto	l192
  2676  002078  010E               	movlb	F1709 shr (0+8)
  2677  00207A  6BE0               	clrf	F1709& (0+255),b
  2678  00207C                     l192:
  2679                           ;rgl.c: 883: if(Tnizsza(0))
  2680  00207C  0E00               	movlw	0
  2681  00207E  EC79  F01E         	call	_Tnizsza
  2682  002082  A0D8               	btfss	status,0,c
  2683  002084  0012               	return	
  2684                           ;rgl.c: 884: {
  2685  002086  0E0A               	movlw	10
  2686  002088  EC79  F01E         	call	_Tnizsza
  2687  00208C  B0D8               	btfsc	status,0,c
  2688  00208E  0012               	return	
  2689                           ;rgl.c: 886: {
  2690  002090  0100               	movlb	__Lparam shr (0+8)
  2691  002092  6BEA               	clrf	?a_ModPruCW^(__Lparam& (0+65280)),b
  2692                           ;rgl.c: 888: if(rgl.tmp_pwm>=pwm_center)
  2693  002094  CEF3  FFE8         	movff	_pwm_center,wreg
  2694  002098  0101               	movlb	(_rgl+9) shr (0+8)
  2695  00209A  5DD2               	subwf	(_rgl+9)& (0+255),w,b
  2696  00209C  E330               	bnc	l195
  2697                           ;rgl.c: 889: {
  2698  00209E  0E05               	movlw	5
  2699  0020A0  EC79  F01E         	call	_Tnizsza
  2700  0020A4  E30A               	bnc	l196
  2701  0020A6  EC72  F01E         	call	_Tstoi	;wreg free
  2702  0020AA  E307               	bnc	l196
  2703  0020AC  0E00               	movlw	0
  2704  0020AE  010E               	movlb	F1709 shr (0+8)
  2705  0020B0  65E0               	cpfsgt	F1709& (0+255),b
  2706  0020B2  D003               	goto	l196
  2707                           ;rgl.c: 891: {
  2708  0020B4  6BE0               	clrf	F1709& (0+255),b
  2709                           ;rgl.c: 893: k=20;
  2710  0020B6  0E14               	movlw	20
  2711  0020B8  D06B               	goto	L9
  2712                           ;rgl.c: 894: }
  2713  0020BA                     l196:
  2714                           ;rgl.c: 895: else
  2715  0020BA  0E04               	movlw	4
  2716  0020BC  EC79  F01E         	call	_Tnizsza
  2717  0020C0  E30A               	bnc	l198
  2718  0020C2  EC72  F01E         	call	_Tstoi	;wreg free
  2719  0020C6  E307               	bnc	l198
  2720  0020C8  0E00               	movlw	0
  2721  0020CA  010E               	movlb	F1709 shr (0+8)
  2722  0020CC  65E0               	cpfsgt	F1709& (0+255),b
  2723  0020CE  D003               	goto	l198
  2724                           ;rgl.c: 897: {
  2725  0020D0  6BE0               	clrf	F1709& (0+255),b
  2726                           ;rgl.c: 899: k=15;
  2727  0020D2  0E0F               	movlw	15
  2728  0020D4  D05D               	goto	L9
  2729                           ;rgl.c: 900: }
  2730  0020D6                     l198:
  2731                           ;rgl.c: 901: else
  2732  0020D6  0E02               	movlw	2
  2733  0020D8  EC79  F01E         	call	_Tnizsza
  2734  0020DC  E308               	bnc	l200
  2735  0020DE  EC72  F01E         	call	_Tstoi	;wreg free
  2736  0020E2  E305               	bnc	l200
  2737  0020E4  0E00               	movlw	0
  2738  0020E6  010E               	movlb	F1709 shr (0+8)
  2739  0020E8  65E0               	cpfsgt	F1709& (0+255),b
  2740  0020EA  D001               	goto	l200
  2741  0020EC  D018               	goto	u1640
  2742                           ;rgl.c: 903: {
  2743                           ;rgl.c: 905: k=10;
  2744                           ;rgl.c: 906: }
  2745  0020EE                     l200:
  2746                           ;rgl.c: 907: else
  2747  0020EE  EC72  F01E         	call	_Tstoi	;wreg free
  2748  0020F2  E350               	bnc	l203
  2749  0020F4  0E00               	movlw	0
  2750  0020F6  010E               	movlb	F1709 shr (0+8)
  2751  0020F8  65E0               	cpfsgt	F1709& (0+255),b
  2752  0020FA  D04C               	goto	l203
  2753  0020FC  D03C               	goto	u1820
  2754                           ;rgl.c: 909: {
  2755                           ;rgl.c: 911: k=5;
  2756                           ;rgl.c: 912: }
  2757  0020FE                     l195:
  2758                           ;rgl.c: 914: else
  2759  0020FE  CEF4  FFE8         	movff	_pwm_kwr,wreg
  2760  002102  0101               	movlb	(_rgl+9) shr (0+8)
  2761  002104  5DD2               	subwf	(_rgl+9)& (0+255),w,b
  2762  002106  E32C               	bnc	l204
  2763                           ;rgl.c: 917: {
  2764  002108  0E05               	movlw	5
  2765  00210A  EC79  F01E         	call	_Tnizsza
  2766  00210E  E30B               	bnc	l205
  2767  002110  EC72  F01E         	call	_Tstoi	;wreg free
  2768  002114  E308               	bnc	l205
  2769  002116  0E00               	movlw	0
  2770  002118  010E               	movlb	F1709 shr (0+8)
  2771  00211A  65E0               	cpfsgt	F1709& (0+255),b
  2772  00211C  D004               	goto	l205
  2773  00211E                     u1640:
  2774                           ;rgl.c: 919: {
  2775  00211E  010E               	movlb	F1709 shr (0+8)
  2776  002120  6BE0               	clrf	F1709& (0+255),b
  2777                           ;rgl.c: 921: k=10;
  2778  002122  0E0A               	movlw	10
  2779  002124  D035               	goto	L9
  2780                           ;rgl.c: 922: }
  2781  002126                     l205:
  2782                           ;rgl.c: 923: else
  2783  002126  0E04               	movlw	4
  2784  002128  EC79  F01E         	call	_Tnizsza
  2785  00212C  E30A               	bnc	l207
  2786  00212E  EC72  F01E         	call	_Tstoi	;wreg free
  2787  002132  E307               	bnc	l207
  2788  002134  0E00               	movlw	0
  2789  002136  010E               	movlb	F1709 shr (0+8)
  2790  002138  65E0               	cpfsgt	F1709& (0+255),b
  2791  00213A  D003               	goto	l207
  2792                           ;rgl.c: 925: {
  2793  00213C  6BE0               	clrf	F1709& (0+255),b
  2794                           ;rgl.c: 927: k=8;
  2795  00213E  0E08               	movlw	8
  2796  002140  D027               	goto	L9
  2797                           ;rgl.c: 928: }
  2798  002142                     l207:
  2799                           ;rgl.c: 929: else
  2800  002142  0E02               	movlw	2
  2801  002144  EC79  F01E         	call	_Tnizsza
  2802  002148  E308               	bnc	l209
  2803  00214A  EC72  F01E         	call	_Tstoi	;wreg free
  2804  00214E  E305               	bnc	l209
  2805  002150  0E00               	movlw	0
  2806  002152  010E               	movlb	F1709 shr (0+8)
  2807  002154  65E0               	cpfsgt	F1709& (0+255),b
  2808  002156  D001               	goto	l209
  2809  002158  D00E               	goto	u1820
  2810                           ;rgl.c: 931: {
  2811                           ;rgl.c: 933: k=5;
  2812                           ;rgl.c: 934: }
  2813  00215A                     l209:
  2814                           ;rgl.c: 935: else
  2815  00215A  EC72  F01E         	call	_Tstoi	;wreg free
  2816  00215E  D011               	goto	L10
  2817                           ;rgl.c: 937: {
  2818                           ;rgl.c: 939: k=2;
  2819                           ;rgl.c: 940: }
  2820  002160                     l204:
  2821                           ;rgl.c: 942: else
  2822  002160  0E02               	movlw	2
  2823  002162  EC79  F01E         	call	_Tnizsza
  2824  002166  E30B               	bnc	l213
  2825  002168  EC72  F01E         	call	_Tstoi	;wreg free
  2826  00216C  E308               	bnc	l213
  2827  00216E  0E00               	movlw	0
  2828  002170  010E               	movlb	F1709 shr (0+8)
  2829  002172  65E0               	cpfsgt	F1709& (0+255),b
  2830  002174  D004               	goto	l213
  2831  002176                     u1820:
  2832                           ;rgl.c: 945: {
  2833  002176  010E               	movlb	F1709 shr (0+8)
  2834  002178  6BE0               	clrf	F1709& (0+255),b
  2835                           ;rgl.c: 947: k=5;
  2836  00217A  0E05               	movlw	5
  2837  00217C  D009               	goto	L9
  2838                           ;rgl.c: 948: }
  2839  00217E                     l213:
  2840                           ;rgl.c: 949: else
  2841  00217E  EC72  F01E         	call	_Tstoi	;wreg free
  2842  002182                     L10:
  2843  002182  E308               	bnc	l203
  2844  002184  0E00               	movlw	0
  2845  002186  010E               	movlb	F1709 shr (0+8)
  2846  002188  65E0               	cpfsgt	F1709& (0+255),b
  2847  00218A  D004               	goto	l203
  2848                           ;rgl.c: 951: {
  2849  00218C  6BE0               	clrf	F1709& (0+255),b
  2850                           ;rgl.c: 953: k=2;
  2851  00218E  0E02               	movlw	2
  2852  002190                     L9:
  2853  002190  0100               	movlb	__Lparam shr (0+8)
  2854  002192  6FEA               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  2855  002194                     l203:
  2856                           ;rgl.c: 954: }
  2857  002194  CEF4  FFE8         	movff	_pwm_kwr,wreg
  2858  002198  0101               	movlb	(_rgl+9) shr (0+8)
  2859  00219A  5DD2               	subwf	(_rgl+9)& (0+255),w,b
  2860  00219C  E316               	bnc	l216
  2861                           ;rgl.c: 958: {
  2862  00219E  0E01               	movlw	1
  2863  0021A0  EC4A  F01E         	call	_Trosnie
  2864  0021A4  E310               	bnc	l217
  2865  0021A6  0E00               	movlw	0
  2866  0021A8  010E               	movlb	F1709 shr (0+8)
  2867  0021AA  65E0               	cpfsgt	F1709& (0+255),b
  2868  0021AC  D00C               	goto	l217
  2869                           ;rgl.c: 960: {
  2870  0021AE  6BE0               	clrf	F1709& (0+255),b
  2871                           ;rgl.c: 962: k=10;
  2872  0021B0  0E0A               	movlw	10
  2873  0021B2  0100               	movlb	__Lparam shr (0+8)
  2874  0021B4  6FEA               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  2875                           ;rgl.c: 963: if(Trosnie(2)) k=8;
  2876  0021B6  0E02               	movlw	2
  2877  0021B8  EC4A  F01E         	call	_Trosnie
  2878  0021BC  E306               	bnc	l216
  2879  0021BE  0E08               	movlw	8
  2880  0021C0  0100               	movlb	__Lparam shr (0+8)
  2881  0021C2  6FEA               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  2882                           ;rgl.c: 964: }
  2883  0021C4  D002               	goto	l216
  2884  0021C6                     l217:
  2885                           ;rgl.c: 965: else
  2886  0021C6  0101               	movlb	(_rgl+6) shr (0+8)
  2887  0021C8  6BCF               	clrf	(_rgl+6)& (0+255),b
  2888  0021CA                     l216:
  2889                           ;rgl.c: 967: }
  2890  0021CA  C176  FFE8         	movff	_PWM+1,wreg
  2891  0021CE  0101               	movlb	(_rgl+8) shr (0+8)
  2892  0021D0  61D1               	cpfslt	(_rgl+8)& (0+255),b
  2893  0021D2  D001               	goto	l220
  2894  0021D4  0012               	return	
  2895  0021D6                     l220:
  2896                           ;rgl.c: 969: tmp=rgl.xmod-PWM.BufPWM;
  2897  0021D6  C176  FFE8         	movff	_PWM+1,wreg
  2898  0021DA  0101               	movlb	(_rgl+8) shr (0+8)
  2899  0021DC  5DD1               	subwf	(_rgl+8)& (0+255),w,b
  2900  0021DE  6ED9               	movwf	fsr2l,c
  2901                           ;rgl.c: 970: if(k>tmp) k=tmp;
  2902  0021E0  50D9               	movf	fsr2l,w,c
  2903  0021E2  0100               	movlb	__Lparam shr (0+8)
  2904  0021E4  94D8               	bcf	status,2,c
  2905  0021E6  90D8               	bcf	status,0,c
  2906  0021E8  AFEA               	btfss	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  2907  0021EA  5DEA               	subwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  2908  0021EC  B4D8               	btfsc	status,2,c
  2909  0021EE  90D8               	bcf	status,0,c
  2910  0021F0  E302               	bnc	l221
  2911  0021F2  50D9               	movf	fsr2l,w,c
  2912  0021F4  6FEA               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  2913  0021F6                     l221:
  2914                           ;rgl.c: 971: if(PWM.MMAXCW>PWM.MGMOD)
  2915  0021F6  C195  FFE8         	movff	_PWM+32,wreg
  2916  0021FA  0101               	movlb	(_PWM+12) shr (0+8)
  2917  0021FC  6181               	cpfslt	(_PWM+12)& (0+255),b
  2918  0021FE  D01F               	goto	l222
  2919                           ;rgl.c: 972: {
  2920  002200  C1D0  FFE8         	movff	_rgl+7,wreg
  2921  002204  0100               	movlb	__Lparam shr (0+8)
  2922  002206  25EA               	addwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  2923  002208  6E02               	movwf	btemp+2,c
  2924  00220A  6A03               	clrf	btemp+3,c
  2925  00220C  B0D8               	btfsc	status,0,c
  2926  00220E  2A03               	incf	btemp+3,f,c
  2927  002210  BFEA               	btfsc	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  2928  002212  0603               	decf	btemp+3,f,c
  2929  002214  C181  F000         	movff	_PWM+12,btemp
  2930  002218  6A01               	clrf	btemp+1,c
  2931  00221A  5001               	movf	btemp+1,w,c
  2932  00221C  0A80               	xorlw	128
  2933  00221E  6E04               	movwf	btemp+4,c
  2934  002220  5003               	movf	btemp+3,w,c
  2935  002222  0A80               	xorlw	128
  2936  002224  5C04               	subwf	btemp+4,w,c
  2937  002226  E102               	bnz	u1945
  2938  002228  5002               	movf	btemp+2,w,c
  2939  00222A  5C00               	subwf	btemp,w,c
  2940  00222C                     u1945:
  2941  00222C  E203               	bc	l223
  2942  00222E  C181  F1D0         	movff	_PWM+12,_rgl+7
  2943  002232  0012               	return	
  2944  002234                     l223:
  2945                           ;rgl.c: 974: else rgl.srp+=k;
  2946  002234  0100               	movlb	__Lparam shr (0+8)
  2947  002236  51EA               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  2948  002238  0101               	movlb	(_rgl+7) shr (0+8)
  2949  00223A  27D0               	addwf	(_rgl+7)& (0+255),f,b
  2950                           ;rgl.c: 975: }
  2951  00223C  0012               	return	
  2952  00223E                     l222:
  2953                           ;rgl.c: 976: else
  2954  00223E  C1D0  FFE8         	movff	_rgl+7,wreg
  2955  002242  0100               	movlb	__Lparam shr (0+8)
  2956  002244  25EA               	addwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  2957  002246  6E02               	movwf	btemp+2,c
  2958  002248  6A03               	clrf	btemp+3,c
  2959  00224A  B0D8               	btfsc	status,0,c
  2960  00224C  2A03               	incf	btemp+3,f,c
  2961  00224E  BFEA               	btfsc	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  2962  002250  0603               	decf	btemp+3,f,c
  2963  002252  C195  F000         	movff	_PWM+32,btemp
  2964  002256  6A01               	clrf	btemp+1,c
  2965  002258  5001               	movf	btemp+1,w,c
  2966  00225A  0A80               	xorlw	128
  2967  00225C  6E04               	movwf	btemp+4,c
  2968  00225E  5003               	movf	btemp+3,w,c
  2969  002260  0A80               	xorlw	128
  2970  002262  5C04               	subwf	btemp+4,w,c
  2971  002264  E102               	bnz	u1955
  2972  002266  5002               	movf	btemp+2,w,c
  2973  002268  5C00               	subwf	btemp,w,c
  2974  00226A                     u1955:
  2975  00226A  E203               	bc	l226
  2976  00226C  C195  F1D0         	movff	_PWM+32,_rgl+7
  2977  002270  0012               	return	
  2978  002272                     l226:
  2979                           ;rgl.c: 979: else rgl.srp+=k;
  2980  002272  0100               	movlb	__Lparam shr (0+8)
  2981  002274  51EA               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  2982  002276  0101               	movlb	(_rgl+7) shr (0+8)
  2983  002278  27D0               	addwf	(_rgl+7)& (0+255),f,b
  2984                           ;rgl.c: 980: }
  2985  00227A  0012               	return	
  2986                           ;rgl.c: 983: else return;
  2987                           ;rgl.c: 985: else return;
  2988  00227C                     l189:
  2989                           ;rgl.c: 987: else
  2990  00227C  010E               	movlb	F1707 shr (0+8)
  2991  00227E  6BDE               	clrf	F1707& (0+255),b
  2992                           ;rgl.c: 990: r=0;
  2993  002280  010E               	movlb	F1708 shr (0+8)
  2994  002282  6BDF               	clrf	F1708& (0+255),b
  2995                           ;rgl.c: 991: s=0;
  2996  002284  010E               	movlb	F1709 shr (0+8)
  2997  002286  6BE0               	clrf	F1709& (0+255),b
  2998                           ;rgl.c: 992: if(m<255) m++;
  2999  002288  CEDB  F000         	movff	F1704,btemp
  3000  00228C  2800               	incf	btemp,w,c
  3001  00228E  E002               	bz	l231
  3002  002290  010E               	movlb	F1704 shr (0+8)
  3003  002292  2BDB               	incf	F1704& (0+255),f,b
  3004  002294                     l231:
  3005                           ;rgl.c: 993: if(p<255) p++;
  3006  002294  CEDD  F000         	movff	F1706,btemp
  3007  002298  2800               	incf	btemp,w,c
  3008  00229A  E002               	bz	l232
  3009  00229C  010E               	movlb	F1706 shr (0+8)
  3010  00229E  2BDD               	incf	F1706& (0+255),f,b
  3011  0022A0                     l232:
  3012                           ;rgl.c: 994: if(o<255) o++;
  3013  0022A0  CEDC  F000         	movff	F1705,btemp
  3014  0022A4  2800               	incf	btemp,w,c
  3015  0022A6  E002               	bz	l233
  3016  0022A8  010E               	movlb	F1705 shr (0+8)
  3017  0022AA  2BDC               	incf	F1705& (0+255),f,b
  3018  0022AC                     l233:
  3019                           ;rgl.c: 995: if(DtCW.DAD_CW>DtCW.AC_CW)
  3020  0022AC  C11F  FFE8         	movff	_DtCW+14,wreg
  3021  0022B0  0101               	movlb	(_DtCW+12) shr (0+8)
  3022  0022B2  611D               	cpfslt	(_DtCW+12)& (0+255),b
  3023  0022B4  D06C               	goto	l234
  3024                           ;rgl.c: 996: {
  3025  0022B6  0100               	movlb	__Lparam shr (0+8)
  3026  0022B8  6BEA               	clrf	?a_ModPruCW^(__Lparam& (0+65280)),b
  3027                           ;rgl.c: 998: if(Trosnie(0)&&m>=2)
  3028  0022BA  0E00               	movlw	0
  3029  0022BC  EC4A  F01E         	call	_Trosnie
  3030  0022C0  E310               	bnc	l235
  3031  0022C2  0E01               	movlw	1
  3032  0022C4  010E               	movlb	F1704 shr (0+8)
  3033  0022C6  65DB               	cpfsgt	F1704& (0+255),b
  3034  0022C8  D00C               	goto	l235
  3035                           ;rgl.c: 999: {
  3036  0022CA  010E               	movlb	F1706 shr (0+8)
  3037  0022CC  6BDD               	clrf	F1706& (0+255),b
  3038                           ;rgl.c: 1001: o=0;
  3039  0022CE  010E               	movlb	F1705 shr (0+8)
  3040  0022D0  6BDC               	clrf	F1705& (0+255),b
  3041                           ;rgl.c: 1002: l=0;
  3042  0022D2  010E               	movlb	F1703 shr (0+8)
  3043  0022D4  6BDA               	clrf	F1703& (0+255),b
  3044                           ;rgl.c: 1003: m=0;
  3045  0022D6  010E               	movlb	F1704 shr (0+8)
  3046  0022D8  6BDB               	clrf	F1704& (0+255),b
  3047                           ;rgl.c: 1004: k=2;
  3048  0022DA  0E02               	movlw	2
  3049  0022DC  0100               	movlb	__Lparam shr (0+8)
  3050  0022DE  6FEA               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  3051                           ;rgl.c: 1005: }
  3052  0022E0  D01C               	goto	l236
  3053  0022E2                     l235:
  3054                           ;rgl.c: 1006: else
  3055  0022E2  0E01               	movlw	1
  3056  0022E4  EC86  F01E         	call	_Twyzsza
  3057  0022E8  E316               	bnc	l237
  3058                           ;rgl.c: 1008: {
  3059  0022EA  EC72  F01E         	call	_Tstoi	;wreg free
  3060  0022EE  E315               	bnc	l236
  3061                           ;rgl.c: 1010: {
  3062  0022F0  0E01               	movlw	1
  3063  0022F2  010E               	movlb	F1703 shr (0+8)
  3064  0022F4  65DA               	cpfsgt	F1703& (0+255),b
  3065  0022F6  D00A               	goto	l239
  3066                           ;rgl.c: 1012: {
  3067  0022F8  0100               	movlb	__Lparam shr (0+8)
  3068  0022FA  6FEA               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  3069                           ;rgl.c: 1014: if(Twyzsza(3)) k=2;
  3070  0022FC  0E03               	movlw	3
  3071  0022FE  EC86  F01E         	call	_Twyzsza
  3072  002302  E309               	bnc	l237
  3073  002304  0E02               	movlw	2
  3074  002306  0100               	movlb	__Lparam shr (0+8)
  3075  002308  6FEA               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  3076  00230A  D005               	goto	l237
  3077                           ;rgl.c: 1015: l=0;
  3078                           ;rgl.c: 1016: }
  3079  00230C                     l239:
  3080                           ;rgl.c: 1017: else
  3081  00230C  0100               	movlb	__Lparam shr (0+8)
  3082  00230E  6BEA               	clrf	?a_ModPruCW^(__Lparam& (0+65280)),b
  3083                           ;rgl.c: 1020: l++;
  3084  002310  010E               	movlb	F1703 shr (0+8)
  3085  002312  2BDA               	incf	F1703& (0+255),f,b
  3086                           ;rgl.c: 1021: }
  3087  002314  D002               	goto	l236
  3088  002316                     l237:
  3089  002316  010E               	movlb	F1703 shr (0+8)
  3090  002318  6BDA               	clrf	F1703& (0+255),b
  3091  00231A                     l236:
  3092                           ;rgl.c: 1024: if(PWM.MMAXCW>PWM.MGMOD)
  3093  00231A  C195  FFE8         	movff	_PWM+32,wreg
  3094  00231E  0101               	movlb	(_PWM+12) shr (0+8)
  3095  002320  6181               	cpfslt	(_PWM+12)& (0+255),b
  3096  002322  D007               	goto	l243
  3097                           ;rgl.c: 1025: {
  3098  002324  C1D0  FFE8         	movff	_rgl+7,wreg
  3099  002328  6181               	cpfslt	(_PWM+12)& (0+255),b
  3100  00232A  D00A               	goto	l245
  3101  00232C  C181  F1D0         	movff	_PWM+12,_rgl+7
  3102                           ;rgl.c: 1027: }
  3103  002330  D007               	goto	l245
  3104  002332                     l243:
  3105                           ;rgl.c: 1028: else
  3106  002332  C1D0  FFE8         	movff	_rgl+7,wreg
  3107  002336  0101               	movlb	(_PWM+32) shr (0+8)
  3108  002338  6195               	cpfslt	(_PWM+32)& (0+255),b
  3109  00233A  D002               	goto	l245
  3110  00233C  C195  F1D0         	movff	_PWM+32,_rgl+7
  3111  002340                     l245:
  3112                           ;rgl.c: 1031: }
  3113  002340  C17E  F000         	movff	_PWM+9,btemp
  3114  002344  6A01               	clrf	btemp+1,c
  3115  002346  C1D0  F002         	movff	_rgl+7,btemp+2
  3116  00234A  0100               	movlb	__Lparam shr (0+8)
  3117  00234C  51EA               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  3118  00234E  5C02               	subwf	btemp+2,w,c
  3119  002350  6EF6               	movwf	tblptrl,c
  3120  002352  6AF7               	clrf	tblptrh,c
  3121  002354  B0D8               	btfsc	status,0,c
  3122  002356  2AF7               	incf	tblptrh,f,c
  3123  002358  AFEA               	btfss	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  3124  00235A  06F7               	decf	tblptrh,f,c
  3125  00235C  50F7               	movf	tblptrh,w,c
  3126  00235E  0A80               	xorlw	128
  3127  002360  6E02               	movwf	btemp+2,c
  3128  002362  5001               	movf	btemp+1,w,c
  3129  002364  0A80               	xorlw	128
  3130  002366  5C02               	subwf	btemp+2,w,c
  3131  002368  E102               	bnz	u2105
  3132  00236A  5000               	movf	btemp,w,c
  3133  00236C  5CF6               	subwf	tblptrl,w,c
  3134  00236E                     u2105:
  3135  00236E  E203               	bc	l247
  3136  002370  C17E  F1D0         	movff	_PWM+9,_rgl+7
  3137  002374  D004               	goto	l248
  3138  002376                     l247:
  3139                           ;rgl.c: 1033: else rgl.srp-=k;
  3140  002376  0100               	movlb	__Lparam shr (0+8)
  3141  002378  51EA               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  3142  00237A  0101               	movlb	(_rgl+7) shr (0+8)
  3143  00237C  5FD0               	subwf	(_rgl+7)& (0+255),f,b
  3144  00237E                     l248:
  3145                           ;rgl.c: 1036: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.
      +                          srp;
  3146  00237E  C1D0  FFE8         	movff	_rgl+7,wreg
  3147  002382  0101               	movlb	(_rgl+8) shr (0+8)
  3148  002384  61D1               	cpfslt	(_rgl+8)& (0+255),b
  3149  002386  0012               	return	
  3150  002388  C1D0  F1D1         	movff	_rgl+7,_rgl+8
  3151                           ;rgl.c: 1037: return;
  3152  00238C  0012               	return	
  3153  00238E                     l234:
  3154                           ;rgl.c: 1039: else
  3155  00238E  0100               	movlb	__Lparam shr (0+8)
  3156  002390  6BEA               	clrf	?a_ModPruCW^(__Lparam& (0+65280)),b
  3157                           ;rgl.c: 1042: if(Tmaleje(0)&&m>=2)
  3158  002392  0E00               	movlw	0
  3159  002394  EC57  F01E         	call	_Tmaleje
  3160  002398  E310               	bnc	l251
  3161  00239A  0E01               	movlw	1
  3162  00239C  010E               	movlb	F1704 shr (0+8)
  3163  00239E  65DB               	cpfsgt	F1704& (0+255),b
  3164  0023A0  D00C               	goto	l251
  3165                           ;rgl.c: 1043: {
  3166  0023A2  010E               	movlb	F1706 shr (0+8)
  3167  0023A4  6BDD               	clrf	F1706& (0+255),b
  3168                           ;rgl.c: 1045: o=0;
  3169  0023A6  010E               	movlb	F1705 shr (0+8)
  3170  0023A8  6BDC               	clrf	F1705& (0+255),b
  3171                           ;rgl.c: 1046: l=0;
  3172  0023AA  010E               	movlb	F1703 shr (0+8)
  3173  0023AC  6BDA               	clrf	F1703& (0+255),b
  3174                           ;rgl.c: 1047: m=0;
  3175  0023AE  010E               	movlb	F1704 shr (0+8)
  3176  0023B0  6BDB               	clrf	F1704& (0+255),b
  3177                           ;rgl.c: 1048: k=5;
  3178  0023B2  0E05               	movlw	5
  3179  0023B4  0100               	movlb	__Lparam shr (0+8)
  3180  0023B6  6FEA               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  3181                           ;rgl.c: 1050: }
  3182  0023B8  D015               	goto	l252
  3183  0023BA                     l251:
  3184                           ;rgl.c: 1051: else
  3185  0023BA  0E01               	movlw	1
  3186  0023BC  EC79  F01E         	call	_Tnizsza
  3187  0023C0  E30F               	bnc	l253
  3188                           ;rgl.c: 1053: {
  3189  0023C2  EC72  F01E         	call	_Tstoi	;wreg free
  3190  0023C6  E30E               	bnc	l252
  3191                           ;rgl.c: 1055: {
  3192  0023C8  0E02               	movlw	2
  3193  0023CA  010E               	movlb	F1703 shr (0+8)
  3194  0023CC  65DA               	cpfsgt	F1703& (0+255),b
  3195  0023CE  D003               	goto	l255
  3196                           ;rgl.c: 1057: {
  3197  0023D0  0100               	movlb	__Lparam shr (0+8)
  3198  0023D2  6FEA               	movwf	?a_ModPruCW^(__Lparam& (0+65280)),b
  3199  0023D4  D005               	goto	l253
  3200                           ;rgl.c: 1059: l=0;
  3201                           ;rgl.c: 1060: }
  3202  0023D6                     l255:
  3203                           ;rgl.c: 1061: else
  3204  0023D6  0100               	movlb	__Lparam shr (0+8)
  3205  0023D8  6BEA               	clrf	?a_ModPruCW^(__Lparam& (0+65280)),b
  3206                           ;rgl.c: 1064: l++;
  3207  0023DA  010E               	movlb	F1703 shr (0+8)
  3208  0023DC  2BDA               	incf	F1703& (0+255),f,b
  3209                           ;rgl.c: 1065: }
  3210  0023DE  D002               	goto	l252
  3211  0023E0                     l253:
  3212  0023E0  010E               	movlb	F1703 shr (0+8)
  3213  0023E2  6BDA               	clrf	F1703& (0+255),b
  3214  0023E4                     l252:
  3215                           ;rgl.c: 1068: if(PWM.MMAXCW>PWM.MGMOD)
  3216  0023E4  C195  FFE8         	movff	_PWM+32,wreg
  3217  0023E8  0101               	movlb	(_PWM+12) shr (0+8)
  3218  0023EA  6181               	cpfslt	(_PWM+12)& (0+255),b
  3219  0023EC  D01A               	goto	l258
  3220                           ;rgl.c: 1069: {
  3221  0023EE  C1D0  FFE8         	movff	_rgl+7,wreg
  3222  0023F2  0100               	movlb	__Lparam shr (0+8)
  3223  0023F4  25EA               	addwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  3224  0023F6  6E02               	movwf	btemp+2,c
  3225  0023F8  6A03               	clrf	btemp+3,c
  3226  0023FA  B0D8               	btfsc	status,0,c
  3227  0023FC  2A03               	incf	btemp+3,f,c
  3228  0023FE  BFEA               	btfsc	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  3229  002400  0603               	decf	btemp+3,f,c
  3230  002402  C181  F000         	movff	_PWM+12,btemp
  3231  002406  6A01               	clrf	btemp+1,c
  3232  002408  5001               	movf	btemp+1,w,c
  3233  00240A  0A80               	xorlw	128
  3234  00240C  6E04               	movwf	btemp+4,c
  3235  00240E  5003               	movf	btemp+3,w,c
  3236  002410  0A80               	xorlw	128
  3237  002412  5C04               	subwf	btemp+4,w,c
  3238  002414  E102               	bnz	u2195
  3239  002416  5002               	movf	btemp+2,w,c
  3240  002418  5C00               	subwf	btemp,w,c
  3241  00241A                     u2195:
  3242  00241A  E21D               	bc	l262
  3243  00241C  C181  F1D0         	movff	_PWM+12,_rgl+7
  3244  002420  D01E               	goto	l261
  3245                           ;rgl.c: 1071: else rgl.srp+=k;
  3246                           ;rgl.c: 1072: }
  3247  002422                     l258:
  3248                           ;rgl.c: 1073: else
  3249  002422  C1D0  FFE8         	movff	_rgl+7,wreg
  3250  002426  0100               	movlb	__Lparam shr (0+8)
  3251  002428  25EA               	addwf	?a_ModPruCW^(__Lparam& (0+65280)),w
  3252  00242A  6E02               	movwf	btemp+2,c
  3253  00242C  6A03               	clrf	btemp+3,c
  3254  00242E  B0D8               	btfsc	status,0,c
  3255  002430  2A03               	incf	btemp+3,f,c
  3256  002432  BFEA               	btfsc	?a_ModPruCW^(__Lparam& (0+65280)),7,b
  3257  002434  0603               	decf	btemp+3,f,c
  3258  002436  C195  F000         	movff	_PWM+32,btemp
  3259  00243A  6A01               	clrf	btemp+1,c
  3260  00243C  5001               	movf	btemp+1,w,c
  3261  00243E  0A80               	xorlw	128
  3262  002440  6E04               	movwf	btemp+4,c
  3263  002442  5003               	movf	btemp+3,w,c
  3264  002444  0A80               	xorlw	128
  3265  002446  5C04               	subwf	btemp+4,w,c
  3266  002448  E102               	bnz	u2205
  3267  00244A  5002               	movf	btemp+2,w,c
  3268  00244C  5C00               	subwf	btemp,w,c
  3269  00244E                     u2205:
  3270  00244E  E203               	bc	l262
  3271  002450  C195  F1D0         	movff	_PWM+32,_rgl+7
  3272  002454  D004               	goto	l261
  3273  002456                     l262:
  3274                           ;rgl.c: 1076: else rgl.srp+=k;
  3275  002456  0100               	movlb	__Lparam shr (0+8)
  3276  002458  51EA               	movf	?a_ModPruCW^(__Lparam& (0+65280)),w
  3277  00245A  0101               	movlb	(_rgl+7) shr (0+8)
  3278  00245C  27D0               	addwf	(_rgl+7)& (0+255),f,b
  3279  00245E                     l261:
  3280                           ;rgl.c: 1077: }
  3281  00245E  C1D0  FFE8         	movff	_rgl+7,wreg
  3282  002462  0101               	movlb	(_rgl+8) shr (0+8)
  3283  002464  61D1               	cpfslt	(_rgl+8)& (0+255),b
  3284  002466  0012               	return	
  3285  002468  C1D0  F1D1         	movff	_rgl+7,_rgl+8
  3286                           ;rgl.c: 1079: return;
  3287  00246C  0012               	return	
  3288                           ;rgl.c: 1080: }
  3289  00246E                     __end_of_ModPruCW:
  3290                           ;rgl.c: 1087: void IncMaxCW(void)
  3291                           ;rgl.c: 1088: {
  3292  00246E                     _IncMaxCW:
  3293  000000                     
  3294                           ;rgl.c: 1089: unsigned char k;
  3295  00246E  0101               	movlb	_rgl shr (0+8)
  3296  002470  A5C9               	btfss	_rgl& (0+255),2,b
  3297  002472  D014               	goto	l266
  3298                           ;rgl.c: 1094: {
  3299  002474  C195  FFE8         	movff	_PWM+32,wreg
  3300  002478  0101               	movlb	(_PWM+12) shr (0+8)
  3301  00247A  6181               	cpfslt	(_PWM+12)& (0+255),b
  3302  00247C  D007               	goto	l267
  3303                           ;rgl.c: 1096: {
  3304  00247E  C1D1  FFE8         	movff	_rgl+8,wreg
  3305  002482  6181               	cpfslt	(_PWM+12)& (0+255),b
  3306  002484  0012               	return	
  3307  002486  C181  F1D1         	movff	_PWM+12,_rgl+8
  3308                           ;rgl.c: 1098: }
  3309  00248A  0012               	return	
  3310  00248C                     l267:
  3311                           ;rgl.c: 1099: else
  3312  00248C  C1D1  FFE8         	movff	_rgl+8,wreg
  3313  002490  0101               	movlb	(_PWM+32) shr (0+8)
  3314  002492  6195               	cpfslt	(_PWM+32)& (0+255),b
  3315  002494  0012               	return	
  3316  002496  C195  F1D1         	movff	_PWM+32,_rgl+8
  3317                           ;rgl.c: 1102: }
  3318  00249A  0012               	return	
  3319  00249C                     l266:
  3320                           ;rgl.c: 1104: }
  3321  00249C  0E02               	movlw	2
  3322  00249E  EC4A  F01E         	call	_Trosnie
  3323  0024A2  E33D               	bnc	l271
  3324  0024A4  0101               	movlb	_rgl shr (0+8)
  3325  0024A6  B7C9               	btfsc	_rgl& (0+255),3,b
  3326  0024A8  D03A               	goto	l271
  3327                           ;rgl.c: 1108: {
  3328  0024AA  0101               	movlb	_rgl shr (0+8)
  3329  0024AC  87C9               	bsf	_rgl& (0+255),3,b
  3330                           ;rgl.c: 1110: k=5;
  3331  0024AE  0E05               	movlw	5
  3332  0024B0  6ED9               	movwf	fsr2l,c
  3333                           ;rgl.c: 1111: if(PWM.MMAXCW>PWM.MGMOD)
  3334  0024B2  C195  FFE8         	movff	_PWM+32,wreg
  3335  0024B6  0101               	movlb	(_PWM+12) shr (0+8)
  3336  0024B8  6181               	cpfslt	(_PWM+12)& (0+255),b
  3337  0024BA  D017               	goto	l272
  3338                           ;rgl.c: 1112: {
  3339  0024BC  0E05               	movlw	5
  3340  0024BE  C1D0  F002         	movff	_rgl+7,btemp+2
  3341  0024C2  6A03               	clrf	btemp+3,c
  3342  0024C4  2602               	addwf	btemp+2,f,c
  3343  0024C6  0E00               	movlw	0
  3344  0024C8  2203               	addwfc	btemp+3,f,c
  3345  0024CA  C181  F000         	movff	_PWM+12,btemp
  3346  0024CE  6A01               	clrf	btemp+1,c
  3347  0024D0  5001               	movf	btemp+1,w,c
  3348  0024D2  0A80               	xorlw	128
  3349  0024D4  6E04               	movwf	btemp+4,c
  3350  0024D6  5003               	movf	btemp+3,w,c
  3351  0024D8  0A80               	xorlw	128
  3352  0024DA  5C04               	subwf	btemp+4,w,c
  3353  0024DC  E102               	bnz	u2305
  3354  0024DE  5002               	movf	btemp+2,w,c
  3355  0024E0  5C00               	subwf	btemp,w,c
  3356  0024E2                     u2305:
  3357  0024E2  E21A               	bc	l276
  3358  0024E4  C181  F1D0         	movff	_PWM+12,_rgl+7
  3359  0024E8  D01A               	goto	l271
  3360                           ;rgl.c: 1114: else rgl.srp+=k;
  3361                           ;rgl.c: 1115: }
  3362  0024EA                     l272:
  3363                           ;rgl.c: 1116: else
  3364  0024EA  0E05               	movlw	5
  3365  0024EC  C1D0  F002         	movff	_rgl+7,btemp+2
  3366  0024F0  6A03               	clrf	btemp+3,c
  3367  0024F2  2602               	addwf	btemp+2,f,c
  3368  0024F4  0E00               	movlw	0
  3369  0024F6  2203               	addwfc	btemp+3,f,c
  3370  0024F8  C195  F000         	movff	_PWM+32,btemp
  3371  0024FC  6A01               	clrf	btemp+1,c
  3372  0024FE  5001               	movf	btemp+1,w,c
  3373  002500  0A80               	xorlw	128
  3374  002502  6E04               	movwf	btemp+4,c
  3375  002504  5003               	movf	btemp+3,w,c
  3376  002506  0A80               	xorlw	128
  3377  002508  5C04               	subwf	btemp+4,w,c
  3378  00250A  E102               	bnz	u2315
  3379  00250C  5002               	movf	btemp+2,w,c
  3380  00250E  5C00               	subwf	btemp,w,c
  3381  002510                     u2315:
  3382  002510  E203               	bc	l276
  3383  002512  C195  F1D0         	movff	_PWM+32,_rgl+7
  3384  002516  D003               	goto	l271
  3385  002518                     l276:
  3386                           ;rgl.c: 1119: else rgl.srp+=k;
  3387  002518  0101               	movlb	(_rgl+7) shr (0+8)
  3388  00251A  0E05               	movlw	5
  3389  00251C  27D0               	addwf	(_rgl+7)& (0+255),f,b
  3390  00251E                     l271:
  3391                           ;rgl.c: 1120: }
  3392  00251E  0E03               	movlw	3
  3393  002520  EC4A  F01E         	call	_Trosnie
  3394  002524  E33D               	bnc	l278
  3395  002526  0101               	movlb	_rgl shr (0+8)
  3396  002528  B9C9               	btfsc	_rgl& (0+255),4,b
  3397  00252A  D03A               	goto	l278
  3398                           ;rgl.c: 1123: {
  3399  00252C  0101               	movlb	_rgl shr (0+8)
  3400  00252E  89C9               	bsf	_rgl& (0+255),4,b
  3401                           ;rgl.c: 1125: k=8;
  3402  002530  0E08               	movlw	8
  3403  002532  6ED9               	movwf	fsr2l,c
  3404                           ;rgl.c: 1126: if(PWM.MMAXCW>PWM.MGMOD)
  3405  002534  C195  FFE8         	movff	_PWM+32,wreg
  3406  002538  0101               	movlb	(_PWM+12) shr (0+8)
  3407  00253A  6181               	cpfslt	(_PWM+12)& (0+255),b
  3408  00253C  D017               	goto	l279
  3409                           ;rgl.c: 1127: {
  3410  00253E  0E08               	movlw	8
  3411  002540  C1D0  F002         	movff	_rgl+7,btemp+2
  3412  002544  6A03               	clrf	btemp+3,c
  3413  002546  2602               	addwf	btemp+2,f,c
  3414  002548  0E00               	movlw	0
  3415  00254A  2203               	addwfc	btemp+3,f,c
  3416  00254C  C181  F000         	movff	_PWM+12,btemp
  3417  002550  6A01               	clrf	btemp+1,c
  3418  002552  5001               	movf	btemp+1,w,c
  3419  002554  0A80               	xorlw	128
  3420  002556  6E04               	movwf	btemp+4,c
  3421  002558  5003               	movf	btemp+3,w,c
  3422  00255A  0A80               	xorlw	128
  3423  00255C  5C04               	subwf	btemp+4,w,c
  3424  00255E  E102               	bnz	u2365
  3425  002560  5002               	movf	btemp+2,w,c
  3426  002562  5C00               	subwf	btemp,w,c
  3427  002564                     u2365:
  3428  002564  E21A               	bc	l283
  3429  002566  C181  F1D0         	movff	_PWM+12,_rgl+7
  3430  00256A  D01A               	goto	l278
  3431                           ;rgl.c: 1129: else rgl.srp+=k;
  3432                           ;rgl.c: 1130: }
  3433  00256C                     l279:
  3434                           ;rgl.c: 1131: else
  3435  00256C  0E08               	movlw	8
  3436  00256E  C1D0  F002         	movff	_rgl+7,btemp+2
  3437  002572  6A03               	clrf	btemp+3,c
  3438  002574  2602               	addwf	btemp+2,f,c
  3439  002576  0E00               	movlw	0
  3440  002578  2203               	addwfc	btemp+3,f,c
  3441  00257A  C195  F000         	movff	_PWM+32,btemp
  3442  00257E  6A01               	clrf	btemp+1,c
  3443  002580  5001               	movf	btemp+1,w,c
  3444  002582  0A80               	xorlw	128
  3445  002584  6E04               	movwf	btemp+4,c
  3446  002586  5003               	movf	btemp+3,w,c
  3447  002588  0A80               	xorlw	128
  3448  00258A  5C04               	subwf	btemp+4,w,c
  3449  00258C  E102               	bnz	u2375
  3450  00258E  5002               	movf	btemp+2,w,c
  3451  002590  5C00               	subwf	btemp,w,c
  3452  002592                     u2375:
  3453  002592  E203               	bc	l283
  3454  002594  C195  F1D0         	movff	_PWM+32,_rgl+7
  3455  002598  D003               	goto	l278
  3456  00259A                     l283:
  3457                           ;rgl.c: 1134: else rgl.srp+=k;
  3458  00259A  0101               	movlb	(_rgl+7) shr (0+8)
  3459  00259C  0E08               	movlw	8
  3460  00259E  27D0               	addwf	(_rgl+7)& (0+255),f,b
  3461  0025A0                     l278:
  3462                           ;rgl.c: 1135: }
  3463  0025A0  CEF4  FFE8         	movff	_pwm_kwr,wreg
  3464  0025A4  0101               	movlb	(_rgl+9) shr (0+8)
  3465  0025A6  5DD2               	subwf	(_rgl+9)& (0+255),w,b
  3466  0025A8  E304               	bnc	l285
  3467                           ;rgl.c: 1140: {
  3468  0025AA  0E02               	movlw	2
  3469  0025AC  EC4A  F01E         	call	_Trosnie
  3470  0025B0  D003               	goto	L11
  3471                           ;rgl.c: 1142: }
  3472  0025B2                     l285:
  3473                           ;rgl.c: 1143: else
  3474  0025B2  0E01               	movlw	1
  3475  0025B4  EC4A  F01E         	call	_Trosnie
  3476  0025B8                     L11:
  3477  0025B8  B0D8               	btfsc	status,0,c
  3478  0025BA  0012               	return	
  3479                           ;rgl.c: 1146: }
  3480  0025BC  0E05               	movlw	5
  3481  0025BE  6ED9               	movwf	fsr2l,c
  3482                           ;rgl.c: 1148: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
  3483  0025C0  C1D1  F000         	movff	_rgl+8,btemp
  3484  0025C4  6A01               	clrf	btemp+1,c
  3485  0025C6  2600               	addwf	btemp,f,c
  3486  0025C8  0E00               	movlw	0
  3487  0025CA  2201               	addwfc	btemp+1,f,c
  3488  0025CC  5001               	movf	btemp+1,w,c
  3489  0025CE  0A80               	xorlw	128
  3490  0025D0  0F80               	addlw	-128
  3491  0025D2  0EF1               	movlw	241
  3492  0025D4  B4D8               	btfsc	status,2,c
  3493  0025D6  5C00               	subwf	btemp,w,c
  3494  0025D8  E304               	bnc	l289
  3495  0025DA  0EF0               	movlw	-16
  3496  0025DC  CFE8 F1D1          	movff	wreg,_rgl+8
  3497  0025E0  D003               	goto	l290
  3498  0025E2                     l289:
  3499                           ;rgl.c: 1149: else rgl.xmod+=k;
  3500  0025E2  0101               	movlb	(_rgl+8) shr (0+8)
  3501  0025E4  0E05               	movlw	5
  3502  0025E6  27D1               	addwf	(_rgl+8)& (0+255),f,b
  3503  0025E8                     l290:
  3504                           ;rgl.c: 1150: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=P
      +                          WM.MMAXCW;
  3505  0025E8  C1D1  FFE8         	movff	_rgl+8,wreg
  3506  0025EC  0101               	movlb	(_PWM+32) shr (0+8)
  3507  0025EE  6195               	cpfslt	(_PWM+32)& (0+255),b
  3508  0025F0  0012               	return	
  3509  0025F2  C195  F1D1         	movff	_PWM+32,_rgl+8
  3510                           ;rgl.c: 1151: }
  3511  0025F6  0012               	return	
  3512  0025F8                     __end_of_IncMaxCW:
  3513                           ;rgl.c: 1181: void ModPrzCW(void)
  3514                           ;rgl.c: 1182: {
  3515  0025F8                     _ModPrzCW:
  3516  000000                     
  3517                           ;rgl.c: 1183: unsigned char p,m,maxmod,mdmod;
  3518  0025F8  0E00               	movlw	0
  3519  0025FA  EC79  F01E         	call	_Tnizsza
  3520  0025FE  E201 D187          	bnc	l293
  3521                           ;rgl.c: 1189: {
  3522  002602  C181  FFE8         	movff	_PWM+12,wreg
  3523  002606  0101               	movlb	(_PWM+32) shr (0+8)
  3524  002608  6195               	cpfslt	(_PWM+32)& (0+255),b
  3525  00260A  D003               	goto	l294
  3526  00260C  C195  FFE1         	movff	_PWM+32,fsr1l
  3527  002610  D002               	goto	l295
  3528  002612                     l294:
  3529                           ;rgl.c: 1191: else maxmod=PWM.MGMOD;
  3530  002612  C181  FFE1         	movff	_PWM+12,fsr1l
  3531  002616                     l295:
  3532                           ;rgl.c: 1194: if(rgl.tmp_pwm>=pwm_center)
  3533  002616  CEF3  FFE8         	movff	_pwm_center,wreg
  3534  00261A  0101               	movlb	(_rgl+9) shr (0+8)
  3535  00261C  5DD2               	subwf	(_rgl+9)& (0+255),w,b
  3536  00261E  E201 D0BE          	bnc	l296
  3537                           ;rgl.c: 1195: {
  3538  002622  C1D1  FFE8         	movff	_rgl+8,wreg
  3539  002626  5CE1               	subwf	fsr1l,w,c
  3540  002628  E303               	bnc	l297
  3541  00262A  C1D1  FFD9         	movff	_rgl+8,fsr2l
  3542  00262E  D004               	goto	l298
  3543  002630                     l297:
  3544                           ;rgl.c: 1197: else
  3545  002630  50E1               	movf	fsr1l,w,c
  3546  002632  6ED9               	movwf	fsr2l,c
  3547                           ;rgl.c: 1200: rgl.xmod=maxmod;
  3548  002634  CFE1 F1D1          	movff	fsr1l,_rgl+8
  3549  002638                     l298:
  3550                           ;rgl.c: 1201: }
  3551  002638  C11A  FFE8         	movff	_DtCW+9,wreg
  3552  00263C  0A80               	xorlw	128
  3553  00263E  0F79               	addlw	-135
  3554  002640  E335               	bnc	l299
  3555  002642  0E01               	movlw	1
  3556  002644  010E               	movlb	_tmr shr (0+8)
  3557  002646  65F5               	cpfsgt	_tmr& (0+255),b
  3558  002648  D031               	goto	l299
  3559                           ;rgl.c: 1203: {
  3560  00264A  6BF5               	clrf	_tmr& (0+255),b
  3561                           ;rgl.c: 1205: r=p-PWM.MDMOD;
  3562  00264C  C17E  FFE8         	movff	_PWM+9,wreg
  3563  002650  5CD9               	subwf	fsr2l,w,c
  3564  002652  6EF3               	movwf	prodl,c
  3565  002654  6AF4               	clrf	prodh,c
  3566  002656  A0D8               	btfss	status,0,c
  3567  002658  06F4               	decf	prodh,f,c
  3568                           ;rgl.c: 1206: if((p-(r/3))>PWM.MDMOD) p-=r/3;
  3569  00265A  0E03               	movlw	3
  3570  00265C  6E02               	movwf	btemp+2,c
  3571  00265E  6A03               	clrf	btemp+3,c
  3572  002660  CFF3 F000          	movff	prodl,btemp
  3573  002664  CFF4 F001          	movff	prodh,btemp+1
  3574  002668  EC88  F062         	call	awdiv
  3575  00266C  5004               	movf	btemp+4,w,c
  3576  00266E  5CD9               	subwf	fsr2l,w,c
  3577  002670  6E00               	movwf	btemp,c
  3578  002672  5005               	movf	btemp+5,w,c
  3579  002674  A0D8               	btfss	status,0,c
  3580  002676  2805               	incf	btemp+5,w,c
  3581  002678  6A01               	clrf	btemp+1,c
  3582  00267A  5E01               	subwf	btemp+1,f,c
  3583  00267C  C17E  F002         	movff	_PWM+9,btemp+2
  3584  002680  6A03               	clrf	btemp+3,c
  3585  002682  5003               	movf	btemp+3,w,c
  3586  002684  0A80               	xorlw	128
  3587  002686  6E04               	movwf	btemp+4,c
  3588  002688  5001               	movf	btemp+1,w,c
  3589  00268A  0A80               	xorlw	128
  3590  00268C  5C04               	subwf	btemp+4,w,c
  3591  00268E  E102               	bnz	u2505
  3592  002690  5000               	movf	btemp,w,c
  3593  002692  5C02               	subwf	btemp+2,w,c
  3594  002694                     u2505:
  3595  002694  E301 D138          	bc	l322
  3596  002698  0E03               	movlw	3
  3597  00269A  6E02               	movwf	btemp+2,c
  3598  00269C  6A03               	clrf	btemp+3,c
  3599  00269E  CFF3 F000          	movff	prodl,btemp
  3600  0026A2  CFF4 F001          	movff	prodh,btemp+1
  3601  0026A6  EC88  F062         	call	awdiv
  3602  0026AA  D039               	goto	L14
  3603                           ;rgl.c: 1207: else p=PWM.MDMOD;
  3604                           ;rgl.c: 1208: rgl.xmod=p;
  3605                           ;rgl.c: 1209: }
  3606  0026AC                     l299:
  3607                           ;rgl.c: 1210: else
  3608  0026AC  C11A  FFE8         	movff	_DtCW+9,wreg
  3609  0026B0  0A80               	xorlw	128
  3610  0026B2  0F7B               	addlw	-133
  3611  0026B4  E337               	bnc	l303
  3612  0026B6  0E01               	movlw	1
  3613  0026B8  010E               	movlb	_tmr shr (0+8)
  3614  0026BA  65F5               	cpfsgt	_tmr& (0+255),b
  3615  0026BC  D033               	goto	l303
  3616                           ;rgl.c: 1212: {
  3617  0026BE  6BF5               	clrf	_tmr& (0+255),b
  3618                           ;rgl.c: 1214: r=p-PWM.MDMOD;
  3619  0026C0  C17E  FFE8         	movff	_PWM+9,wreg
  3620  0026C4  5CD9               	subwf	fsr2l,w,c
  3621  0026C6  6EF3               	movwf	prodl,c
  3622  0026C8  6AF4               	clrf	prodh,c
  3623  0026CA  A0D8               	btfss	status,0,c
  3624  0026CC  06F4               	decf	prodh,f,c
  3625                           ;rgl.c: 1215: if((p-(r/4))>PWM.MDMOD) p-=r/4;
  3626  0026CE  0E04               	movlw	4
  3627  0026D0  6E02               	movwf	btemp+2,c
  3628  0026D2  6A03               	clrf	btemp+3,c
  3629  0026D4  CFF3 F000          	movff	prodl,btemp
  3630  0026D8  CFF4 F001          	movff	prodh,btemp+1
  3631  0026DC  EC88  F062         	call	awdiv
  3632  0026E0  5004               	movf	btemp+4,w,c
  3633  0026E2  5CD9               	subwf	fsr2l,w,c
  3634  0026E4  6E00               	movwf	btemp,c
  3635  0026E6  5005               	movf	btemp+5,w,c
  3636  0026E8  A0D8               	btfss	status,0,c
  3637  0026EA  2805               	incf	btemp+5,w,c
  3638  0026EC  6A01               	clrf	btemp+1,c
  3639  0026EE  5E01               	subwf	btemp+1,f,c
  3640  0026F0  C17E  F002         	movff	_PWM+9,btemp+2
  3641  0026F4  6A03               	clrf	btemp+3,c
  3642  0026F6  5003               	movf	btemp+3,w,c
  3643  0026F8  0A80               	xorlw	128
  3644  0026FA  6E04               	movwf	btemp+4,c
  3645  0026FC  5001               	movf	btemp+1,w,c
  3646  0026FE  0A80               	xorlw	128
  3647  002700  5C04               	subwf	btemp+4,w,c
  3648  002702  E102               	bnz	u2545
  3649  002704  5000               	movf	btemp,w,c
  3650  002706  5C02               	subwf	btemp+2,w,c
  3651  002708                     u2545:
  3652  002708  E301 D0FE          	bc	l322
  3653  00270C  0E04               	movlw	4
  3654  00270E  6E02               	movwf	btemp+2,c
  3655  002710  6A03               	clrf	btemp+3,c
  3656  002712  CFF3 F000          	movff	prodl,btemp
  3657  002716  CFF4 F001          	movff	prodh,btemp+1
  3658  00271A  EC88  F062         	call	awdiv
  3659  00271E                     L14:
  3660  00271E  5004               	movf	btemp+4,w,c
  3661  002720  5ED9               	subwf	fsr2l,f,c
  3662  002722  D0F4               	goto	l323
  3663                           ;rgl.c: 1216: else p=PWM.MDMOD;
  3664                           ;rgl.c: 1217: rgl.xmod=p;
  3665                           ;rgl.c: 1218: }
  3666  002724                     l303:
  3667                           ;rgl.c: 1219: else
  3668  002724  C11A  FFE8         	movff	_DtCW+9,wreg
  3669  002728  0A80               	xorlw	128
  3670  00272A  0F7C               	addlw	-132
  3671  00272C  E201 D0F0          	bnc	l293
  3672  002730  010E               	movlb	_tmr shr (0+8)
  3673  002732  53F5               	movf	_tmr& (0+255),f,b
  3674  002734  E101 D0EC          	bz	l293
  3675                           ;rgl.c: 1221: {
  3676  002738  6BF5               	clrf	_tmr& (0+255),b
  3677                           ;rgl.c: 1223: r=p-PWM.MDMOD;
  3678  00273A  C17E  FFE8         	movff	_PWM+9,wreg
  3679  00273E  5CD9               	subwf	fsr2l,w,c
  3680  002740  6EF3               	movwf	prodl,c
  3681  002742  6AF4               	clrf	prodh,c
  3682  002744  A0D8               	btfss	status,0,c
  3683  002746  06F4               	decf	prodh,f,c
  3684                           ;rgl.c: 1224: if((p-(r/14))>PWM.MDMOD) p-=r/14;
  3685  002748  0E0E               	movlw	14
  3686  00274A  6E02               	movwf	btemp+2,c
  3687  00274C  6A03               	clrf	btemp+3,c
  3688  00274E  CFF3 F000          	movff	prodl,btemp
  3689  002752  CFF4 F001          	movff	prodh,btemp+1
  3690  002756  EC88  F062         	call	awdiv
  3691  00275A  5004               	movf	btemp+4,w,c
  3692  00275C  5CD9               	subwf	fsr2l,w,c
  3693  00275E  6E00               	movwf	btemp,c
  3694  002760  5005               	movf	btemp+5,w,c
  3695  002762  A0D8               	btfss	status,0,c
  3696  002764  2805               	incf	btemp+5,w,c
  3697  002766  6A01               	clrf	btemp+1,c
  3698  002768  5E01               	subwf	btemp+1,f,c
  3699  00276A  C17E  F002         	movff	_PWM+9,btemp+2
  3700  00276E  6A03               	clrf	btemp+3,c
  3701  002770  5003               	movf	btemp+3,w,c
  3702  002772  0A80               	xorlw	128
  3703  002774  6E04               	movwf	btemp+4,c
  3704  002776  5001               	movf	btemp+1,w,c
  3705  002778  0A80               	xorlw	128
  3706  00277A  5C04               	subwf	btemp+4,w,c
  3707  00277C  E102               	bnz	u2585
  3708  00277E  5000               	movf	btemp,w,c
  3709  002780  5C02               	subwf	btemp+2,w,c
  3710  002782                     u2585:
  3711  002782  E301 D0C1          	bc	l322
  3712  002786  0E0E               	movlw	14
  3713  002788  6E02               	movwf	btemp+2,c
  3714  00278A  6A03               	clrf	btemp+3,c
  3715  00278C  CFF3 F000          	movff	prodl,btemp
  3716  002790  CFF4 F001          	movff	prodh,btemp+1
  3717  002794  EC88  F062         	call	awdiv
  3718  002798                     L12:
  3719  002798  5004               	movf	btemp+4,w,c
  3720  00279A  5ED9               	subwf	fsr2l,f,c
  3721  00279C  D0B7               	goto	l323
  3722                           ;rgl.c: 1225: else p=PWM.MDMOD;
  3723                           ;rgl.c: 1226: rgl.xmod=p;
  3724                           ;rgl.c: 1227: }
  3725  00279E                     l296:
  3726                           ;rgl.c: 1229: else
  3727  00279E  C1D1  FFE8         	movff	_rgl+8,wreg
  3728  0027A2  5CE1               	subwf	fsr1l,w,c
  3729  0027A4  E303               	bnc	l311
  3730  0027A6  C1D1  FFD9         	movff	_rgl+8,fsr2l
  3731  0027AA  D004               	goto	l312
  3732  0027AC                     l311:
  3733                           ;rgl.c: 1232: else
  3734  0027AC  50E1               	movf	fsr1l,w,c
  3735  0027AE  6ED9               	movwf	fsr2l,c
  3736                           ;rgl.c: 1235: rgl.xmod=maxmod;
  3737  0027B0  CFE1 F1D1          	movff	fsr1l,_rgl+8
  3738  0027B4                     l312:
  3739                           ;rgl.c: 1236: }
  3740  0027B4  C11A  FFE8         	movff	_DtCW+9,wreg
  3741  0027B8  0A80               	xorlw	128
  3742  0027BA  0F79               	addlw	-135
  3743  0027BC  E334               	bnc	l313
  3744  0027BE  0E01               	movlw	1
  3745  0027C0  010E               	movlb	_tmr shr (0+8)
  3746  0027C2  65F5               	cpfsgt	_tmr& (0+255),b
  3747  0027C4  D030               	goto	l313
  3748                           ;rgl.c: 1238: {
  3749  0027C6  6BF5               	clrf	_tmr& (0+255),b
  3750                           ;rgl.c: 1240: r=p-PWM.MDMOD;
  3751  0027C8  C17E  FFE8         	movff	_PWM+9,wreg
  3752  0027CC  5CD9               	subwf	fsr2l,w,c
  3753  0027CE  6EF3               	movwf	prodl,c
  3754  0027D0  6AF4               	clrf	prodh,c
  3755  0027D2  A0D8               	btfss	status,0,c
  3756  0027D4  06F4               	decf	prodh,f,c
  3757                           ;rgl.c: 1241: if((p-(r/2))>PWM.MDMOD) p-=r/2;
  3758  0027D6  0E02               	movlw	2
  3759  0027D8  6E02               	movwf	btemp+2,c
  3760  0027DA  6A03               	clrf	btemp+3,c
  3761  0027DC  CFF3 F000          	movff	prodl,btemp
  3762  0027E0  CFF4 F001          	movff	prodh,btemp+1
  3763  0027E4  EC88  F062         	call	awdiv
  3764  0027E8  5004               	movf	btemp+4,w,c
  3765  0027EA  5CD9               	subwf	fsr2l,w,c
  3766  0027EC  6E00               	movwf	btemp,c
  3767  0027EE  5005               	movf	btemp+5,w,c
  3768  0027F0  A0D8               	btfss	status,0,c
  3769  0027F2  2805               	incf	btemp+5,w,c
  3770  0027F4  6A01               	clrf	btemp+1,c
  3771  0027F6  5E01               	subwf	btemp+1,f,c
  3772  0027F8  C17E  F002         	movff	_PWM+9,btemp+2
  3773  0027FC  6A03               	clrf	btemp+3,c
  3774  0027FE  5003               	movf	btemp+3,w,c
  3775  002800  0A80               	xorlw	128
  3776  002802  6E04               	movwf	btemp+4,c
  3777  002804  5001               	movf	btemp+1,w,c
  3778  002806  0A80               	xorlw	128
  3779  002808  5C04               	subwf	btemp+4,w,c
  3780  00280A  E102               	bnz	u2635
  3781  00280C  5000               	movf	btemp,w,c
  3782  00280E  5C02               	subwf	btemp+2,w,c
  3783  002810                     u2635:
  3784  002810  E27B               	bc	l322
  3785  002812  0E02               	movlw	2
  3786  002814  6E02               	movwf	btemp+2,c
  3787  002816  6A03               	clrf	btemp+3,c
  3788  002818  CFF3 F000          	movff	prodl,btemp
  3789  00281C  CFF4 F001          	movff	prodh,btemp+1
  3790  002820  EC88  F062         	call	awdiv
  3791  002824  D7B9               	goto	L12
  3792                           ;rgl.c: 1242: else p=PWM.MDMOD;
  3793                           ;rgl.c: 1243: rgl.xmod=p;
  3794                           ;rgl.c: 1244: }
  3795  002826                     l313:
  3796                           ;rgl.c: 1245: else
  3797  002826  C11A  FFE8         	movff	_DtCW+9,wreg
  3798  00282A  0A80               	xorlw	128
  3799  00282C  0F7B               	addlw	-133
  3800  00282E  E334               	bnc	l317
  3801  002830  0E01               	movlw	1
  3802  002832  010E               	movlb	_tmr shr (0+8)
  3803  002834  65F5               	cpfsgt	_tmr& (0+255),b
  3804  002836  D030               	goto	l317
  3805                           ;rgl.c: 1247: {
  3806  002838  6BF5               	clrf	_tmr& (0+255),b
  3807                           ;rgl.c: 1249: r=p-PWM.MDMOD;
  3808  00283A  C17E  FFE8         	movff	_PWM+9,wreg
  3809  00283E  5CD9               	subwf	fsr2l,w,c
  3810  002840  6EF3               	movwf	prodl,c
  3811  002842  6AF4               	clrf	prodh,c
  3812  002844  A0D8               	btfss	status,0,c
  3813  002846  06F4               	decf	prodh,f,c
  3814                           ;rgl.c: 1250: if((p-(r/3))>PWM.MDMOD) p-=r/3;
  3815  002848  0E03               	movlw	3
  3816  00284A  6E02               	movwf	btemp+2,c
  3817  00284C  6A03               	clrf	btemp+3,c
  3818  00284E  CFF3 F000          	movff	prodl,btemp
  3819  002852  CFF4 F001          	movff	prodh,btemp+1
  3820  002856  EC88  F062         	call	awdiv
  3821  00285A  5004               	movf	btemp+4,w,c
  3822  00285C  5CD9               	subwf	fsr2l,w,c
  3823  00285E  6E00               	movwf	btemp,c
  3824  002860  5005               	movf	btemp+5,w,c
  3825  002862  A0D8               	btfss	status,0,c
  3826  002864  2805               	incf	btemp+5,w,c
  3827  002866  6A01               	clrf	btemp+1,c
  3828  002868  5E01               	subwf	btemp+1,f,c
  3829  00286A  C17E  F002         	movff	_PWM+9,btemp+2
  3830  00286E  6A03               	clrf	btemp+3,c
  3831  002870  5003               	movf	btemp+3,w,c
  3832  002872  0A80               	xorlw	128
  3833  002874  6E04               	movwf	btemp+4,c
  3834  002876  5001               	movf	btemp+1,w,c
  3835  002878  0A80               	xorlw	128
  3836  00287A  5C04               	subwf	btemp+4,w,c
  3837  00287C  E102               	bnz	u2675
  3838  00287E  5000               	movf	btemp,w,c
  3839  002880  5C02               	subwf	btemp+2,w,c
  3840  002882                     u2675:
  3841  002882  E242               	bc	l322
  3842  002884  0E03               	movlw	3
  3843  002886  6E02               	movwf	btemp+2,c
  3844  002888  6A03               	clrf	btemp+3,c
  3845  00288A  CFF3 F000          	movff	prodl,btemp
  3846  00288E  CFF4 F001          	movff	prodh,btemp+1
  3847  002892  EC88  F062         	call	awdiv
  3848  002896  D780               	goto	L12
  3849                           ;rgl.c: 1251: else p=PWM.MDMOD;
  3850                           ;rgl.c: 1252: rgl.xmod=p;
  3851                           ;rgl.c: 1253: }
  3852  002898                     l317:
  3853                           ;rgl.c: 1254: else
  3854  002898  C11A  FFE8         	movff	_DtCW+9,wreg
  3855  00289C  0A80               	xorlw	128
  3856  00289E  0F7C               	addlw	-132
  3857  0028A0  E337               	bnc	l293
  3858  0028A2  010E               	movlb	_tmr shr (0+8)
  3859  0028A4  53F5               	movf	_tmr& (0+255),f,b
  3860  0028A6  E034               	bz	l293
  3861                           ;rgl.c: 1256: {
  3862  0028A8  6BF5               	clrf	_tmr& (0+255),b
  3863                           ;rgl.c: 1258: r=p-PWM.MDMOD;
  3864  0028AA  C17E  FFE8         	movff	_PWM+9,wreg
  3865  0028AE  5CD9               	subwf	fsr2l,w,c
  3866  0028B0  6EF3               	movwf	prodl,c
  3867  0028B2  6AF4               	clrf	prodh,c
  3868  0028B4  A0D8               	btfss	status,0,c
  3869  0028B6  06F4               	decf	prodh,f,c
  3870                           ;rgl.c: 1259: if((p-(r/4))>PWM.MDMOD) p-=r/4;
  3871  0028B8  0E04               	movlw	4
  3872  0028BA  6E02               	movwf	btemp+2,c
  3873  0028BC  6A03               	clrf	btemp+3,c
  3874  0028BE  CFF3 F000          	movff	prodl,btemp
  3875  0028C2  CFF4 F001          	movff	prodh,btemp+1
  3876  0028C6  EC88  F062         	call	awdiv
  3877  0028CA  5004               	movf	btemp+4,w,c
  3878  0028CC  5CD9               	subwf	fsr2l,w,c
  3879  0028CE  6E00               	movwf	btemp,c
  3880  0028D0  5005               	movf	btemp+5,w,c
  3881  0028D2  A0D8               	btfss	status,0,c
  3882  0028D4  2805               	incf	btemp+5,w,c
  3883  0028D6  6A01               	clrf	btemp+1,c
  3884  0028D8  5E01               	subwf	btemp+1,f,c
  3885  0028DA  C17E  F002         	movff	_PWM+9,btemp+2
  3886  0028DE  6A03               	clrf	btemp+3,c
  3887  0028E0  5003               	movf	btemp+3,w,c
  3888  0028E2  0A80               	xorlw	128
  3889  0028E4  6E04               	movwf	btemp+4,c
  3890  0028E6  5001               	movf	btemp+1,w,c
  3891  0028E8  0A80               	xorlw	128
  3892  0028EA  5C04               	subwf	btemp+4,w,c
  3893  0028EC  E102               	bnz	u2715
  3894  0028EE  5000               	movf	btemp,w,c
  3895  0028F0  5C02               	subwf	btemp+2,w,c
  3896  0028F2                     u2715:
  3897  0028F2  E20A               	bc	l322
  3898  0028F4  0E04               	movlw	4
  3899  0028F6  6E02               	movwf	btemp+2,c
  3900  0028F8  6A03               	clrf	btemp+3,c
  3901  0028FA  CFF3 F000          	movff	prodl,btemp
  3902  0028FE  CFF4 F001          	movff	prodh,btemp+1
  3903  002902  EC88  F062         	call	awdiv
  3904  002906  D70B               	goto	L14
  3905  002908                     l322:
  3906                           ;rgl.c: 1260: else p=PWM.MDMOD;
  3907  002908  C17E  FFD9         	movff	_PWM+9,fsr2l
  3908  00290C                     l323:
  3909                           ;rgl.c: 1261: rgl.xmod=p;
  3910  00290C  CFD9 F1D1          	movff	fsr2l,_rgl+8
  3911  002910                     l293:
  3912                           ;rgl.c: 1262: }
  3913  002910  0101               	movlb	_rgl shr (0+8)
  3914  002912  BBC9               	btfsc	_rgl& (0+255),5,b
  3915  002914  D02F               	goto	l324
  3916                           ;rgl.c: 1275: {
  3917  002916  A5C9               	btfss	_rgl& (0+255),2,b
  3918  002918  0012               	return	
  3919                           ;rgl.c: 1277: {
  3920  00291A  0E00               	movlw	0
  3921  00291C  EC57  F01E         	call	_Tmaleje
  3922  002920  B0D8               	btfsc	status,0,c
  3923  002922  0012               	return	
  3924                           ;rgl.c: 1279: {
  3925  002924  0E04               	movlw	4
  3926  002926  EC86  F01E         	call	_Twyzsza
  3927  00292A  A0D8               	btfss	status,0,c
  3928  00292C  0012               	return	
  3929                           ;rgl.c: 1281: {
  3930  00292E  CEF4  FFE8         	movff	_pwm_kwr,wreg
  3931  002932  0101               	movlb	(_rgl+9) shr (0+8)
  3932  002934  5DD2               	subwf	(_rgl+9)& (0+255),w,b
  3933  002936  E31B               	bnc	l328
  3934                           ;rgl.c: 1283: {
  3935  002938  C17E  F000         	movff	_PWM+9,btemp
  3936  00293C  6A01               	clrf	btemp+1,c
  3937  00293E  C1D0  F002         	movff	_rgl+7,btemp+2
  3938  002942  0EFB               	movlw	251
  3939  002944  2402               	addwf	btemp+2,w,c
  3940  002946  6EF6               	movwf	tblptrl,c
  3941  002948  6AF7               	clrf	tblptrh,c
  3942  00294A  0EFF               	movlw	255
  3943  00294C  22F7               	addwfc	tblptrh,f,c
  3944  00294E  50F7               	movf	tblptrh,w,c
  3945  002950  0A80               	xorlw	128
  3946  002952  6E02               	movwf	btemp+2,c
  3947  002954  5001               	movf	btemp+1,w,c
  3948  002956  0A80               	xorlw	128
  3949  002958  5C02               	subwf	btemp+2,w,c
  3950  00295A  E102               	bnz	u2775
  3951  00295C  5000               	movf	btemp,w,c
  3952  00295E  5CF6               	subwf	tblptrl,w,c
  3953  002960                     u2775:
  3954  002960  E203               	bc	l329
  3955  002962  C17E  F1D0         	movff	_PWM+9,_rgl+7
  3956  002966  D003               	goto	l328
  3957  002968                     l329:
  3958                           ;rgl.c: 1285: else rgl.srp-=5;
  3959  002968  0101               	movlb	(_rgl+7) shr (0+8)
  3960  00296A  0EFB               	movlw	-5
  3961  00296C  27D0               	addwf	(_rgl+7)& (0+255),f,b
  3962  00296E                     l328:
  3963                           ;rgl.c: 1286: }
  3964  00296E  0101               	movlb	_rgl shr (0+8)
  3965  002970  8BC9               	bsf	_rgl& (0+255),5,b
  3966                           ;rgl.c: 1288: return;
  3967  002972  0012               	return	
  3968                           ;rgl.c: 1290: else return;
  3969                           ;rgl.c: 1292: else return;
  3970                           ;rgl.c: 1294: else return;
  3971  002974                     l324:
  3972                           ;rgl.c: 1296: else
  3973  002974  0E00               	movlw	0
  3974  002976  EC57  F01E         	call	_Tmaleje
  3975  00297A  E302               	bnc	l334
  3976                           ;rgl.c: 1299: rgl.nmod=0;
  3977  00297C  0101               	movlb	_rgl shr (0+8)
  3978  00297E  9BC9               	bcf	_rgl& (0+255),5,b
  3979  002980                     l334:
  3980                           ;rgl.c: 1300: }
  3981  002980  010E               	movlb	F1722 shr (0+8)
  3982  002982  2BE1               	incf	F1722& (0+255),f,b
  3983                           ;rgl.c: 1302: }
  3984  002984  0C01               	retlw	1
  3985  002986                     __end_of_ModPrzCW:
  3986                           ;rgl.c: 1308: void PropCO(void)
  3987                           ;rgl.c: 1309: {
  3988  002986                     _PropCO:
  3989  000000                     
  3990                           ;rgl.c: 1310: if(!rgl.nmod)
  3991  002986  0101               	movlb	_rgl shr (0+8)
  3992  002988  BBC9               	btfsc	_rgl& (0+255),5,b
  3993  00298A  EFFA  F01D         	goto	l638
  3994                           ;rgl.c: 1311: {
  3995  00298E  0101               	movlb	_DtCO shr (0+8)
  3996  002990  B120               	btfsc	_DtCO& (0+255),0,b
  3997  002992  EF63  F019         	goto	l483
  3998                           ;rgl.c: 1313: {
  3999  002996  C1CC  FFE8         	movff	_rgl+3,wreg
  4000  00299A  0A03               	xorlw	3
  4001  00299C  E102               	bnz	l339
  4002  00299E  EFCB  F01D         	goto	L32
  4003                           ;rgl.c: 1315: {
  4004                           ;rgl.c: 1317: rgl.tmp_pwm=PWM.MGMOD;
  4005                           ;rgl.c: 1318: }
  4006  0029A2                     l339:
  4007                           ;rgl.c: 1319: else
  4008  0029A2  C1CC  FFE8         	movff	_rgl+3,wreg
  4009  0029A6  0A02               	xorlw	2
  4010  0029A8  E102               	bnz	l342
  4011  0029AA  EFD9  F01D         	goto	L33
  4012                           ;rgl.c: 1321: {
  4013                           ;rgl.c: 1323: rgl.tmp_pwm=PWM.PROP1;
  4014                           ;rgl.c: 1324: }
  4015  0029AE                     l342:
  4016                           ;rgl.c: 1325: else
  4017  0029AE  C1CC  F000         	movff	_rgl+3,btemp
  4018  0029B2  0400               	decf	btemp,w,c
  4019  0029B4  E102               	bnz	l345
  4020  0029B6  EFE7  F01D         	goto	L34
  4021                           ;rgl.c: 1327: {
  4022                           ;rgl.c: 1329: rgl.tmp_pwm=PWM.PROP2;
  4023                           ;rgl.c: 1330: }
  4024  0029BA                     l345:
  4025                           ;rgl.c: 1331: else
  4026  0029BA  C1CC  FFE8         	movff	_rgl+3,wreg
  4027  0029BE  0A80               	xorlw	128
  4028  0029C0  0F7F               	addlw	-129
  4029  0029C2  E202               	bc	l338
  4030  0029C4  EF5C  F019         	goto	L35
  4031                           ;rgl.c: 1333: {
  4032                           ;rgl.c: 1335: rgl.tmp_pwm=PWM.PROP3;
  4033  0029C8                     l338:
  4034  0029C8  EF63  F019         	goto	l483
  4035                           ;rgl.c: 1336: }
  4036                           ;rgl.c: 1339: }
  4037                           ;rgl.c: 1340: else WriteOPWM(PWM.MDMOD);
  4038                           ;rgl.c: 1341: }
  4039  0029CC                     __end_of_PropCO:
  4040                           ;rgl.c: 1350: void StartCO4(void)
  4041                           ;rgl.c: 1351: {
  4042  0029CC                     _StartCO4:
  4043  000000                     
  4044                           ;rgl.c: 1352: unsigned char k;
  4045  0029CC  0101               	movlb	_rgl shr (0+8)
  4046  0029CE  A1C9               	btfss	_rgl& (0+255),0,b
  4047  0029D0  B3C9               	btfsc	_rgl& (0+255),1,b
  4048  0029D2  0012               	return	
  4049                           ;rgl.c: 1355: StartRTdS(3);
  4050  0029D4  0E03               	movlw	3
  4051  0029D6  EC17  F05C         	call	_StartRTdS
  4052                           ;rgl.c: 1356: DtCO.dDCO=0;
  4053  0029DA  0101               	movlb	(_DtCO+9) shr (0+8)
  4054  0029DC  6B29               	clrf	(_DtCO+9)& (0+255),b
  4055                           ;rgl.c: 1357: DtCO.indCO=0;
  4056  0029DE  0101               	movlb	(_DtCO+10) shr (0+8)
  4057  0029E0  6B2A               	clrf	(_DtCO+10)& (0+255),b
  4058                           ;rgl.c: 1358: DtCW.dDCW=0;
  4059  0029E2  0101               	movlb	(_DtCW+8) shr (0+8)
  4060  0029E4  6B19               	clrf	(_DtCW+8)& (0+255),b
  4061                           ;rgl.c: 1359: DtCW.indCW=0;
  4062  0029E6  0101               	movlb	(_DtCW+10) shr (0+8)
  4063  0029E8  6B1B               	clrf	(_DtCW+10)& (0+255),b
  4064                           ;rgl.c: 1360: rgl.fz=0;
  4065  0029EA  0101               	movlb	_rgl shr (0+8)
  4066  0029EC  95C9               	bcf	_rgl& (0+255),2,b
  4067                           ;rgl.c: 1361: rgl.med_up=0;
  4068  0029EE  97C9               	bcf	_rgl& (0+255),3,b
  4069                           ;rgl.c: 1362: rgl.fast_up=0;
  4070  0029F0  99C9               	bcf	_rgl& (0+255),4,b
  4071                           ;rgl.c: 1364: if(PWM.MMAXCO>PWM.FIRSTPB)
  4072  0029F2  C194  FFE8         	movff	_PWM+31,wreg
  4073  0029F6  0101               	movlb	(_PWM+26) shr (0+8)
  4074  0029F8  618F               	cpfslt	(_PWM+26)& (0+255),b
  4075  0029FA  D003               	goto	l353
  4076                           ;rgl.c: 1365: {
  4077  0029FC  C18F  F1D1         	movff	_PWM+26,_rgl+8
  4078                           ;rgl.c: 1367: }
  4079  002A00  D002               	goto	l354
  4080  002A02                     l353:
  4081                           ;rgl.c: 1368: else
  4082  002A02  C194  F1D1         	movff	_PWM+31,_rgl+8
  4083  002A06                     l354:
  4084                           ;rgl.c: 1371: }
  4085  002A06  0101               	movlb	(_rgl+7) shr (0+8)
  4086  002A08  6BD0               	clrf	(_rgl+7)& (0+255),b
  4087                           ;rgl.c: 1373: rgl.ytmp=0;
  4088  002A0A  6BCF               	clrf	(_rgl+6)& (0+255),b
  4089                           ;rgl.c: 1374: rgl.nmod=0;
  4090  002A0C  9BC9               	bcf	_rgl& (0+255),5,b
  4091                           ;rgl.c: 1375: rgl.del1s=0;
  4092  002A0E  9DC9               	bcf	_rgl& (0+255),6,b
  4093                           ;rgl.c: 1376: rgl.inv_mod=0;
  4094  002A10  91CA               	bcf	(_rgl+1)& (0+255),0,b
  4095                           ;rgl.c: 1377: }
  4096  002A12  0012               	return	
  4097  002A14                     __end_of_StartCO4:
  4098                           ;rgl.c: 1380: void StartMCW4(void)
  4099                           ;rgl.c: 1381: {
  4100  002A14                     _StartMCW4:
  4101  000000                     
  4102                           ;rgl.c: 1382: if(rgl.btco||rgl.btcw) return;
  4103  002A14  0101               	movlb	_rgl shr (0+8)
  4104  002A16  A1C9               	btfss	_rgl& (0+255),0,b
  4105  002A18  B3C9               	btfsc	_rgl& (0+255),1,b
  4106  002A1A  0012               	return	
  4107                           ;rgl.c: 1383: StartRTdS(3);
  4108  002A1C  0E03               	movlw	3
  4109  002A1E  EC17  F05C         	call	_StartRTdS
  4110                           ;rgl.c: 1384: DtCO.dDCO=0;
  4111  002A22  0101               	movlb	(_DtCO+9) shr (0+8)
  4112  002A24  6B29               	clrf	(_DtCO+9)& (0+255),b
  4113                           ;rgl.c: 1385: DtCW.dDCW=0;
  4114  002A26  0101               	movlb	(_DtCW+8) shr (0+8)
  4115  002A28  6B19               	clrf	(_DtCW+8)& (0+255),b
  4116                           ;rgl.c: 1386: DtCO.indCO=0;
  4117  002A2A  0101               	movlb	(_DtCO+10) shr (0+8)
  4118  002A2C  6B2A               	clrf	(_DtCO+10)& (0+255),b
  4119                           ;rgl.c: 1387: DtCW.indCW=0;
  4120  002A2E  0101               	movlb	(_DtCW+10) shr (0+8)
  4121  002A30  6B1B               	clrf	(_DtCW+10)& (0+255),b
  4122                           ;rgl.c: 1388: rgl.fz=0;
  4123  002A32  0101               	movlb	_rgl shr (0+8)
  4124  002A34  95C9               	bcf	_rgl& (0+255),2,b
  4125                           ;rgl.c: 1389: rgl.med_up=0;
  4126  002A36  97C9               	bcf	_rgl& (0+255),3,b
  4127                           ;rgl.c: 1390: rgl.fast_up=0;
  4128  002A38  99C9               	bcf	_rgl& (0+255),4,b
  4129                           ;rgl.c: 1392: rgl.srp=0;
  4130  002A3A  6BD0               	clrf	(_rgl+7)& (0+255),b
  4131                           ;rgl.c: 1393: rgl.ytmp=0;
  4132  002A3C  6BCF               	clrf	(_rgl+6)& (0+255),b
  4133                           ;rgl.c: 1394: rgl.nmod=0;
  4134  002A3E  9BC9               	bcf	_rgl& (0+255),5,b
  4135                           ;rgl.c: 1395: rgl.del1s=0;
  4136  002A40  9DC9               	bcf	_rgl& (0+255),6,b
  4137                           ;rgl.c: 1396: rgl.inv_mod=0;
  4138  002A42  91CA               	bcf	(_rgl+1)& (0+255),0,b
  4139                           ;rgl.c: 1397: rgl.xmod=PWM.MDMOD;
  4140  002A44  C17E  F1D1         	movff	_PWM+9,_rgl+8
  4141                           ;rgl.c: 1398: }
  4142  002A48  0012               	return	
  4143  002A4A                     __end_of_StartMCW4:
  4144                           ;rgl.c: 1401: void FirstPCW4(void)
  4145                           ;rgl.c: 1402: {
  4146  002A4A                     _FirstPCW4:
  4147  000000                     
  4148                           ;rgl.c: 1403: if(PWM.MMAXCW>PWM.MGMOD)
  4149  002A4A  C195  FFE8         	movff	_PWM+32,wreg
  4150  002A4E  0101               	movlb	(_PWM+12) shr (0+8)
  4151  002A50  6181               	cpfslt	(_PWM+12)& (0+255),b
  4152  002A52  D00B               	goto	l358
  4153                           ;rgl.c: 1404: {
  4154  002A54  C118  FFE8         	movff	_DtCW+7,wreg
  4155  002A58  0A80               	xorlw	128
  4156  002A5A  0F7F               	addlw	-129
  4157  002A5C  E303               	bnc	l359
  4158  002A5E  C181  F1D1         	movff	_PWM+12,_rgl+8
  4159  002A62  0012               	return	
  4160  002A64                     l359:
  4161                           ;rgl.c: 1406: else rgl.xmod=PWM.FIRSTPB;
  4162  002A64  C18F  F1D1         	movff	_PWM+26,_rgl+8
  4163                           ;rgl.c: 1407: }
  4164  002A68  0012               	return	
  4165  002A6A                     l358:
  4166                           ;rgl.c: 1408: else
  4167  002A6A  C118  FFE8         	movff	_DtCW+7,wreg
  4168  002A6E  0A80               	xorlw	128
  4169  002A70  0F7F               	addlw	-129
  4170  002A72  E303               	bnc	l362
  4171  002A74  C195  F1D1         	movff	_PWM+32,_rgl+8
  4172  002A78  0012               	return	
  4173  002A7A                     l362:
  4174                           ;rgl.c: 1411: else
  4175  002A7A  C195  FFE8         	movff	_PWM+32,wreg
  4176  002A7E  0101               	movlb	(_PWM+26) shr (0+8)
  4177  002A80  618F               	cpfslt	(_PWM+26)& (0+255),b
  4178  002A82  D003               	goto	l364
  4179  002A84  C18F  F1D1         	movff	_PWM+26,_rgl+8
  4180  002A88  0012               	return	
  4181  002A8A                     l364:
  4182                           ;rgl.c: 1414: else rgl.xmod=PWM.MMAXCW;
  4183  002A8A  C195  F1D1         	movff	_PWM+32,_rgl+8
  4184                           ;rgl.c: 1415: }
  4185  002A8E  0012               	return	
  4186  002A90                     __end_of_FirstPCW4:
  4187                           ;rgl.c: 1420: void ClrMod4(void)
  4188                           ;rgl.c: 1421: {
  4189  002A90                     _ClrMod4:
  4190  000000                     
  4191                           ;rgl.c: 1422: rgl.fz=0;
  4192  002A90  0101               	movlb	_rgl shr (0+8)
  4193  002A92  95C9               	bcf	_rgl& (0+255),2,b
  4194                           ;rgl.c: 1423: rgl.med_up=0;
  4195  002A94  97C9               	bcf	_rgl& (0+255),3,b
  4196                           ;rgl.c: 1424: rgl.fast_up=0;
  4197  002A96  99C9               	bcf	_rgl& (0+255),4,b
  4198                           ;rgl.c: 1425: rgl.xmod=PWM.BufPWM;
  4199  002A98  C176  F1D1         	movff	_PWM+1,_rgl+8
  4200                           ;rgl.c: 1426: rgl.srp=0;
  4201  002A9C  6BD0               	clrf	(_rgl+7)& (0+255),b
  4202                           ;rgl.c: 1427: rgl.ytmp=0;
  4203  002A9E  6BCF               	clrf	(_rgl+6)& (0+255),b
  4204                           ;rgl.c: 1428: rgl.nmod=0;
  4205  002AA0  9BC9               	bcf	_rgl& (0+255),5,b
  4206                           ;rgl.c: 1429: rgl.del1s=0;
  4207  002AA2  9DC9               	bcf	_rgl& (0+255),6,b
  4208                           ;rgl.c: 1430: rgl.inv_mod=0;
  4209  002AA4  91CA               	bcf	(_rgl+1)& (0+255),0,b
  4210                           ;rgl.c: 1431: }
  4211  002AA6  0012               	return	
  4212  002AA8                     __end_of_ClrMod4:
  4213                           ;rgl.c: 1434: void ModToCW4(void)
  4214                           ;rgl.c: 1435: {
  4215  002AA8                     _ModToCW4:
  4216  000000                     
  4217                           ;rgl.c: 1436: rgl.btcw=1;
  4218  002AA8  0101               	movlb	_rgl shr (0+8)
  4219  002AAA  83C9               	bsf	_rgl& (0+255),1,b
  4220                           ;rgl.c: 1437: if(rgl.btco)
  4221  002AAC  A1C9               	btfss	_rgl& (0+255),0,b
  4222  002AAE  0012               	return	
  4223                           ;rgl.c: 1438: {
  4224  002AB0  91C9               	bcf	_rgl& (0+255),0,b
  4225                           ;rgl.c: 1440: ClrMod4();
  4226  002AB2  D7EE               	goto	_ClrMod4	;wreg free
  4227                           ;rgl.c: 1441: }
  4228  002AB4                     __end_of_ModToCW4:
  4229                           ;rgl.c: 1445: void ModToCO4(void)
  4230                           ;rgl.c: 1446: {
  4231  002AB4                     _ModToCO4:
  4232  000000                     
  4233                           ;rgl.c: 1447: rgl.btco=1;
  4234  002AB4  0101               	movlb	_rgl shr (0+8)
  4235  002AB6  81C9               	bsf	_rgl& (0+255),0,b
  4236                           ;rgl.c: 1448: if(rgl.btcw)
  4237  002AB8  A3C9               	btfss	_rgl& (0+255),1,b
  4238  002ABA  0012               	return	
  4239                           ;rgl.c: 1449: {
  4240  002ABC  93C9               	bcf	_rgl& (0+255),1,b
  4241                           ;rgl.c: 1451: ClrMod4();
  4242  002ABE  D7E8               	goto	_ClrMod4	;wreg free
  4243                           ;rgl.c: 1452: }
  4244  002AC0                     __end_of_ModToCO4:
  4245                           ;rgl.c: 1456: void IncConstCOCW4(void)
  4246                           ;rgl.c: 1457: {
  4247  002AC0                     _IncConstCOCW4:
  4248  000000                     
  4249                           ;rgl.c: 1458: if(Tstoi()) rgl.ytmp++;
  4250  002AC0  EC72  F01E         	call	_Tstoi	;wreg free
  4251  002AC4  0101               	movlb	(_rgl+6) shr (0+8)
  4252  002AC6  E302               	bnc	L19
  4253  002AC8  2BCF               	incf	(_rgl+6)& (0+255),f,b
  4254  002ACA  0C01               	retlw	1
  4255                           ;rgl.c: 1459: else rgl.ytmp=0;
  4256  002ACC                     L19:
  4257  002ACC  6BCF               	clrf	(_rgl+6)& (0+255),b
  4258                           ;rgl.c: 1460: }
  4259  002ACE  0012               	return	
  4260  002AD0                     __end_of_IncConstCOCW4:
  4261                           ;rgl.c: 1463: void ReadDataCO4(void)
  4262                           ;rgl.c: 1464: {
  4263  002AD0                     _ReadDataCO4:
  4264  000000                     
  4265                           ;rgl.c: 1465: rgl.x_t=DtCO.DCO;
  4266  002AD0  C128  F1CB         	movff	_DtCO+8,_rgl+2
  4267                           ;rgl.c: 1466: rgl.x_dt=DtCO.dDCO;
  4268  002AD4  C129  F1CD         	movff	_DtCO+9,_rgl+4
  4269                           ;rgl.c: 1467: }
  4270  002AD8  0012               	return	
  4271  002ADA                     __end_of_ReadDataCO4:
  4272                           ;rgl.c: 1470: void ReadDataCW4(void)
  4273                           ;rgl.c: 1471: {
  4274  002ADA                     _ReadDataCW4:
  4275  000000                     
  4276                           ;rgl.c: 1472: rgl.x_t=DtCW.DCW;
  4277  002ADA  C118  F1CB         	movff	_DtCW+7,_rgl+2
  4278                           ;rgl.c: 1473: rgl.x_f=DtCO.DCO;
  4279  002ADE  C128  F1CC         	movff	_DtCO+8,_rgl+3
  4280                           ;rgl.c: 1474: rgl.x_dt=DtCW.dDCW;
  4281  002AE2  C119  F1CD         	movff	_DtCW+8,_rgl+4
  4282                           ;rgl.c: 1475: rgl.x_df=DtCO.dDCO;
  4283  002AE6  C129  F1CE         	movff	_DtCO+9,_rgl+5
  4284                           ;rgl.c: 1476: }
  4285  002AEA  0012               	return	
  4286  002AEC                     __end_of_ReadDataCW4:
  4287                           ;rgl.c: 1479: void ModZgCW4(void)
  4288                           ;rgl.c: 1480: {
  4289  002AEC                     _ModZgCW4:
  4290  000000                     
  4291                           ;rgl.c: 1481: signed long m;
  4292  002AEC  0E0A               	movlw	10
  4293  002AEE  EC79  F01E         	call	_Tnizsza
  4294  002AF2  E302               	bnc	l377
  4295                           ;rgl.c: 1486: {
  4296  002AF4  010E               	movlb	F1737 shr (0+8)
  4297  002AF6  6BE2               	clrf	F1737& (0+255),b
  4298  002AF8                     l377:
  4299                           ;rgl.c: 1489: }
  4300  002AF8  0101               	movlb	_rgl shr (0+8)
  4301  002AFA  A5C9               	btfss	_rgl& (0+255),2,b
  4302  002AFC  D00D               	goto	l378
  4303                           ;rgl.c: 1491: {
  4304  002AFE  0E02               	movlw	2
  4305  002B00  EC79  F01E         	call	_Tnizsza
  4306  002B04  A0D8               	btfss	status,0,c
  4307  002B06  0012               	return	
  4308                           ;rgl.c: 1493: {
  4309  002B08  C176  F1D1         	movff	_PWM+1,_rgl+8
  4310                           ;rgl.c: 1495: rgl.srp=0;
  4311  002B0C  0101               	movlb	(_rgl+7) shr (0+8)
  4312  002B0E  6BD0               	clrf	(_rgl+7)& (0+255),b
  4313                           ;rgl.c: 1496: rgl.ytmp=0;
  4314  002B10  6BCF               	clrf	(_rgl+6)& (0+255),b
  4315                           ;rgl.c: 1497: rgl.del1s=0;
  4316  002B12  9DC9               	bcf	_rgl& (0+255),6,b
  4317                           ;rgl.c: 1498: pop=0;
  4318  002B14  010E               	movlb	F1737 shr (0+8)
  4319  002B16  6BE2               	clrf	F1737& (0+255),b
  4320                           ;rgl.c: 1499: }
  4321                           ;rgl.c: 1500: else return;
  4322  002B18                     l378:
  4323                           ;rgl.c: 1501: }
  4324  002B18  0E01               	movlw	1
  4325  002B1A  EC79  F01E         	call	_Tnizsza
  4326  002B1E  E229               	bc	l381
  4327                           ;rgl.c: 1503: {
  4328  002B20  0101               	movlb	_rgl shr (0+8)
  4329  002B22  85C9               	bsf	_rgl& (0+255),2,b
  4330                           ;rgl.c: 1505: rgl.fast_up=0;
  4331  002B24  99C9               	bcf	_rgl& (0+255),4,b
  4332                           ;rgl.c: 1506: rgl.med_up=0;
  4333  002B26  97C9               	bcf	_rgl& (0+255),3,b
  4334                           ;rgl.c: 1507: rgl.srp=PWM.BufPWM+pop;
  4335  002B28  CEE2  FFE8         	movff	F1737,wreg
  4336  002B2C  0101               	movlb	(_PWM+1) shr (0+8)
  4337  002B2E  2576               	addwf	(_PWM+1)& (0+255),w,b
  4338  002B30  CFE8 F1D0          	movff	wreg,_rgl+7
  4339                           ;rgl.c: 1508: rgl.xmod=PWM.BufPWM+pop;
  4340  002B34  CEE2  FFE8         	movff	F1737,wreg
  4341  002B38  2576               	addwf	(_PWM+1)& (0+255),w,b
  4342  002B3A  CFE8 F1D1          	movff	wreg,_rgl+8
  4343                           ;rgl.c: 1509: pop=0;
  4344  002B3E  010E               	movlb	F1737 shr (0+8)
  4345  002B40  6BE2               	clrf	F1737& (0+255),b
  4346                           ;rgl.c: 1510: if(PWM.MMAXCW>PWM.MGMOD)
  4347  002B42  C195  FFE8         	movff	_PWM+32,wreg
  4348  002B46  0101               	movlb	(_PWM+12) shr (0+8)
  4349  002B48  6181               	cpfslt	(_PWM+12)& (0+255),b
  4350  002B4A  D009               	goto	l382
  4351                           ;rgl.c: 1511: {
  4352  002B4C  C1D1  FFE8         	movff	_rgl+8,wreg
  4353  002B50  6181               	cpfslt	(_PWM+12)& (0+255),b
  4354  002B52  0012               	return	
  4355                           ;rgl.c: 1513: {
  4356  002B54  C181  F1D0         	movff	_PWM+12,_rgl+7
  4357                           ;rgl.c: 1515: rgl.xmod=PWM.MGMOD;
  4358  002B58  C181  F1D1         	movff	_PWM+12,_rgl+8
  4359                           ;rgl.c: 1516: }
  4360  002B5C  0012               	return	
  4361  002B5E                     l382:
  4362                           ;rgl.c: 1518: else
  4363  002B5E  C1D1  FFE8         	movff	_rgl+8,wreg
  4364  002B62  0101               	movlb	(_PWM+32) shr (0+8)
  4365  002B64  6195               	cpfslt	(_PWM+32)& (0+255),b
  4366  002B66  0012               	return	
  4367                           ;rgl.c: 1521: {
  4368  002B68  C195  F1D0         	movff	_PWM+32,_rgl+7
  4369                           ;rgl.c: 1523: rgl.xmod=PWM.MMAXCW;
  4370  002B6C  C195  F1D1         	movff	_PWM+32,_rgl+8
  4371                           ;rgl.c: 1524: }
  4372  002B70  0012               	return	
  4373  002B72                     l381:
  4374                           ;rgl.c: 1527: }
  4375  002B72  C17E  FFE8         	movff	_PWM+9,wreg
  4376  002B76  0101               	movlb	(_rgl+8) shr (0+8)
  4377  002B78  5DD1               	subwf	(_rgl+8)& (0+255),w,b
  4378  002B7A  E318               	bnc	l386
  4379  002B7C  0E0A               	movlw	10
  4380  002B7E  6E02               	movwf	btemp+2,c
  4381  002B80  6A03               	clrf	btemp+3,c
  4382  002B82  C17E  FFE8         	movff	_PWM+9,wreg
  4383  002B86  C1D1  F000         	movff	_rgl+8,btemp
  4384  002B8A  6A01               	clrf	btemp+1,c
  4385  002B8C  5E00               	subwf	btemp,f,c
  4386  002B8E  0E00               	movlw	0
  4387  002B90  5A01               	subwfb	btemp+1,f,c
  4388  002B92  ECBF  F062         	call	awmul
  4389  002B96  0100               	movlb	__Lparam shr (0+8)
  4390  002B98  C004  F0EA         	movff	btemp+4,?a_ModZgCW4
  4391  002B9C  C005  F0EB         	movff	btemp+5,?a_ModZgCW4+1
  4392  002BA0  0E00               	movlw	0
  4393  002BA2  BFEB               	btfsc	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),7,b
  4394  002BA4  0EFF               	movlw	-1
  4395  002BA6  6FEC               	movwf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),b
  4396  002BA8  6FED               	movwf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),b
  4397  002BAA  D005               	goto	l387
  4398  002BAC                     l386:
  4399                           ;rgl.c: 1529: else m=0;
  4400  002BAC  0100               	movlb	__Lparam shr (0+8)
  4401  002BAE  6BEA               	clrf	?a_ModZgCW4^(__Lparam& (0+65280)),b
  4402  002BB0  6BEB               	clrf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),b
  4403  002BB2  6BEC               	clrf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),b
  4404  002BB4  6BED               	clrf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),b
  4405  002BB6                     l387:
  4406                           ;rgl.c: 1530: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
  4407  002BB6  C11F  FFE8         	movff	_DtCW+14,wreg
  4408  002BBA  C11E  F000         	movff	_DtCW+13,btemp
  4409  002BBE  5C00               	subwf	btemp,w,c
  4410  002BC0  6E04               	movwf	btemp+4,c
  4411  002BC2  6A05               	clrf	btemp+5,c
  4412  002BC4  A0D8               	btfss	status,0,c
  4413  002BC6  0605               	decf	btemp+5,f,c
  4414  002BC8  6A06               	clrf	btemp+6,c
  4415  002BCA  BE05               	btfsc	btemp+5,7,c
  4416  002BCC  0606               	decf	btemp+6,f,c
  4417  002BCE  5006               	movf	btemp+6,w,c
  4418  002BD0  6E07               	movwf	btemp+7,c
  4419  002BD2  0EEA               	movlw	low ?a_ModZgCW4
  4420  002BD4  6EE9               	movwf	fsr0l,c
  4421  002BD6  0E00               	movlw	high ?a_ModZgCW4
  4422  002BD8  6EEA               	movwf	fsr0h,c
  4423  002BDA  ECEF  F062         	call	aldiv_f
  4424                           ;rgl.c: 1531: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
  4425  002BDE  C11F  FFE8         	movff	_DtCW+14,wreg
  4426  002BE2  C11D  F000         	movff	_DtCW+12,btemp
  4427  002BE6  5C00               	subwf	btemp,w,c
  4428  002BE8  6E04               	movwf	btemp+4,c
  4429  002BEA  6A05               	clrf	btemp+5,c
  4430  002BEC  A0D8               	btfss	status,0,c
  4431  002BEE  0605               	decf	btemp+5,f,c
  4432  002BF0  6A06               	clrf	btemp+6,c
  4433  002BF2  BE05               	btfsc	btemp+5,7,c
  4434  002BF4  0606               	decf	btemp+6,f,c
  4435  002BF6  5006               	movf	btemp+6,w,c
  4436  002BF8  6E07               	movwf	btemp+7,c
  4437  002BFA  0EEA               	movlw	low ?a_ModZgCW4
  4438  002BFC  6EE9               	movwf	fsr0l,c
  4439  002BFE  0E00               	movlw	high ?a_ModZgCW4
  4440  002C00  6EEA               	movwf	fsr0h,c
  4441  002C02  ECDB  F062         	call	almul_f
  4442                           ;rgl.c: 1532: if(m<0) m=0;
  4443  002C06  0100               	movlb	__Lparam shr (0+8)
  4444  002C08  AFED               	btfss	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),7,b
  4445  002C0A  D004               	goto	l388
  4446  002C0C  6BEA               	clrf	?a_ModZgCW4^(__Lparam& (0+65280)),b
  4447  002C0E  6BEB               	clrf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),b
  4448  002C10  6BEC               	clrf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),b
  4449  002C12  6BED               	clrf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),b
  4450  002C14                     l388:
  4451                           ;rgl.c: 1533: m=m/10+PWM.MDMOD;
  4452  002C14  0E0A               	movlw	10
  4453  002C16  6E04               	movwf	btemp+4,c
  4454  002C18  6A05               	clrf	btemp+5,c
  4455  002C1A  6A06               	clrf	btemp+6,c
  4456  002C1C  6A07               	clrf	btemp+7,c
  4457  002C1E  C0EA  F000         	movff	?a_ModZgCW4,btemp
  4458  002C22  C0EB  F001         	movff	?a_ModZgCW4+1,btemp+1
  4459  002C26  C0EC  F002         	movff	?a_ModZgCW4+2,btemp+2
  4460  002C2A  C0ED  F003         	movff	?a_ModZgCW4+3,btemp+3
  4461  002C2E  EC4F  F062         	call	aldiv
  4462  002C32  C17E  FFE8         	movff	_PWM+9,wreg
  4463  002C36  2400               	addwf	btemp,w,c
  4464  002C38  0100               	movlb	__Lparam shr (0+8)
  4465  002C3A  6FEA               	movwf	?a_ModZgCW4^(__Lparam& (0+65280)),b
  4466  002C3C  0E00               	movlw	0
  4467  002C3E  2001               	addwfc	btemp+1,w,c
  4468  002C40  6FEB               	movwf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),b
  4469  002C42  0E00               	movlw	0
  4470  002C44  2002               	addwfc	btemp+2,w,c
  4471  002C46  6FEC               	movwf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),b
  4472  002C48  0E00               	movlw	0
  4473  002C4A  2003               	addwfc	btemp+3,w,c
  4474  002C4C  6FED               	movwf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),b
  4475                           ;rgl.c: 1534: if(m>0xff)
  4476  002C4E  51ED               	movf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),w
  4477  002C50  0A80               	xorlw	128
  4478  002C52  0F80               	addlw	128
  4479  002C54  E108               	bnz	u3125
  4480  002C56  0E00               	movlw	0
  4481  002C58  5DEC               	subwf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),w
  4482  002C5A  E105               	bnz	u3125
  4483  002C5C  0E01               	movlw	1
  4484  002C5E  5DEB               	subwf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),w
  4485  002C60  E102               	bnz	u3125
  4486  002C62  0E00               	movlw	0
  4487  002C64  5DEA               	subwf	?a_ModZgCW4^(__Lparam& (0+65280)),w
  4488  002C66                     u3125:
  4489                           ;rgl.c: 1535: {
  4490  002C66  0101               	movlb	_rgl shr (0+8)
  4491  002C68  E304               	bnc	L20
  4492  002C6A  95C9               	bcf	_rgl& (0+255),2,b
  4493                           ;rgl.c: 1537: rgl.tmp_pwm=rgl.xmod;
  4494  002C6C  C1D1  F1D2         	movff	_rgl+8,_rgl+9
  4495                           ;rgl.c: 1538: return;
  4496  002C70  0012               	return	
  4497                           ;rgl.c: 1539: }
  4498  002C72                     L20:
  4499  002C72  A5C9               	btfss	_rgl& (0+255),2,b
  4500  002C74  D01C               	goto	l390
  4501  002C76  C1D1  F000         	movff	_rgl+8,btemp
  4502  002C7A  6A01               	clrf	btemp+1,c
  4503  002C7C  6A02               	clrf	btemp+2,c
  4504  002C7E  6A03               	clrf	btemp+3,c
  4505  002C80  0100               	movlb	__Lparam shr (0+8)
  4506  002C82  51ED               	movf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),w
  4507  002C84  0A80               	xorlw	128
  4508  002C86  6E04               	movwf	btemp+4,c
  4509  002C88  5003               	movf	btemp+3,w,c
  4510  002C8A  0A80               	xorlw	128
  4511  002C8C  5C04               	subwf	btemp+4,w,c
  4512  002C8E  E108               	bnz	u3145
  4513  002C90  5002               	movf	btemp+2,w,c
  4514  002C92  5DEC               	subwf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),w
  4515  002C94  E105               	bnz	u3145
  4516  002C96  5001               	movf	btemp+1,w,c
  4517  002C98  5DEB               	subwf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),w
  4518  002C9A  E102               	bnz	u3145
  4519  002C9C  5000               	movf	btemp,w,c
  4520  002C9E  5DEA               	subwf	?a_ModZgCW4^(__Lparam& (0+65280)),w
  4521  002CA0                     u3145:
  4522  002CA0  E206               	bc	l390
  4523                           ;rgl.c: 1541: rgl.srp=(rgl.xmod-m);
  4524  002CA2  0100               	movlb	__Lparam shr (0+8)
  4525  002CA4  51EA               	movf	?a_ModZgCW4^(__Lparam& (0+65280)),w
  4526  002CA6  0101               	movlb	(_rgl+8) shr (0+8)
  4527  002CA8  5DD1               	subwf	(_rgl+8)& (0+255),w,b
  4528  002CAA  CFE8 F1D0          	movff	wreg,_rgl+7
  4529  002CAE                     l390:
  4530                           ;rgl.c: 1542: m+=rgl.srp;
  4531  002CAE  C1D0  FFE8         	movff	_rgl+7,wreg
  4532  002CB2  0100               	movlb	__Lparam shr (0+8)
  4533  002CB4  27EA               	addwf	?a_ModZgCW4^(__Lparam& (0+65280)),f,b
  4534  002CB6  0E01               	movlw	1
  4535  002CB8  B0D8               	btfsc	status,0,c
  4536  002CBA  27EB               	addwf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),f,b
  4537  002CBC  B0D8               	btfsc	status,0,c
  4538  002CBE  27EC               	addwf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),f,b
  4539  002CC0  B0D8               	btfsc	status,0,c
  4540  002CC2  27ED               	addwf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),f,b
  4541                           ;rgl.c: 1543: if(m>rgl.xmod) p=rgl.xmod;
  4542  002CC4  C1D1  F000         	movff	_rgl+8,btemp
  4543  002CC8  6A01               	clrf	btemp+1,c
  4544  002CCA  6A02               	clrf	btemp+2,c
  4545  002CCC  6A03               	clrf	btemp+3,c
  4546  002CCE  5003               	movf	btemp+3,w,c
  4547  002CD0  0A80               	xorlw	128
  4548  002CD2  6E04               	movwf	btemp+4,c
  4549  002CD4  51ED               	movf	(?a_ModZgCW4+3)^(__Lparam& (0+65280)),w
  4550  002CD6  0A80               	xorlw	128
  4551  002CD8  5C04               	subwf	btemp+4,w,c
  4552  002CDA  E108               	bnz	u3165
  4553  002CDC  51EC               	movf	(?a_ModZgCW4+2)^(__Lparam& (0+65280)),w
  4554  002CDE  5C02               	subwf	btemp+2,w,c
  4555  002CE0  E105               	bnz	u3165
  4556  002CE2  51EB               	movf	(?a_ModZgCW4+1)^(__Lparam& (0+65280)),w
  4557  002CE4  5C01               	subwf	btemp+1,w,c
  4558  002CE6  E102               	bnz	u3165
  4559  002CE8  51EA               	movf	?a_ModZgCW4^(__Lparam& (0+65280)),w
  4560  002CEA  5C00               	subwf	btemp,w,c
  4561  002CEC                     u3165:
  4562  002CEC  E203               	bc	l391
  4563  002CEE  C1D1  FFD9         	movff	_rgl+8,fsr2l
  4564  002CF2  D003               	goto	l392
  4565  002CF4                     l391:
  4566                           ;rgl.c: 1544: else p=m;
  4567  002CF4  0100               	movlb	__Lparam shr (0+8)
  4568  002CF6  51EA               	movf	?a_ModZgCW4^(__Lparam& (0+65280)),w
  4569  002CF8  6ED9               	movwf	fsr2l,c
  4570  002CFA                     l392:
  4571                           ;rgl.c: 1545: rgl.fz=0;
  4572  002CFA  0101               	movlb	_rgl shr (0+8)
  4573  002CFC  95C9               	bcf	_rgl& (0+255),2,b
  4574                           ;rgl.c: 1546: rgl.tmp_pwm=p;
  4575  002CFE  CFD9 F1D2          	movff	fsr2l,_rgl+9
  4576                           ;rgl.c: 1547: }
  4577  002D02  0012               	return	
  4578  002D04                     __end_of_ModZgCW4:
  4579                           ;rgl.c: 1550: void ModDkCW4(void)
  4580                           ;rgl.c: 1551: {
  4581  002D04                     _ModDkCW4:
  4582  000000                     
  4583                           ;rgl.c: 1552: signed long m;
  4584  002D04  0101               	movlb	_rgl shr (0+8)
  4585  002D06  A5C9               	btfss	_rgl& (0+255),2,b
  4586  002D08  0012               	return	
  4587                           ;rgl.c: 1557: ada=DtCW.AC_CW-DtCW.DAD_CW;
  4588  002D0A  C11F  FFE8         	movff	_DtCW+14,wreg
  4589  002D0E  0101               	movlb	(_DtCW+12) shr (0+8)
  4590  002D10  5D1D               	subwf	(_DtCW+12)& (0+255),w,b
  4591  002D12  6ED9               	movwf	fsr2l,c
  4592                           ;rgl.c: 1558: k=2;
  4593  002D14  0E02               	movlw	2
  4594  002D16  6EE1               	movwf	fsr1l,c
  4595                           ;rgl.c: 1559: if(ada<0) k=1;
  4596  002D18  AED9               	btfss	fsr2l,7,c
  4597  002D1A  D002               	goto	l395
  4598  002D1C  0E01               	movlw	1
  4599  002D1E  6EE1               	movwf	fsr1l,c
  4600  002D20                     l395:
  4601                           ;rgl.c: 1560: m=rgl.srp+k*ada;
  4602  002D20  CFD9 F002          	movff	fsr2l,btemp+2
  4603  002D24  6A03               	clrf	btemp+3,c
  4604  002D26  BE02               	btfsc	btemp+2,7,c
  4605  002D28  0603               	decf	btemp+3,f,c
  4606  002D2A  CFE1 F000          	movff	fsr1l,btemp
  4607  002D2E  6A01               	clrf	btemp+1,c
  4608  002D30  ECBF  F062         	call	awmul
  4609  002D34  C1D0  FFE8         	movff	_rgl+7,wreg
  4610  002D38  2404               	addwf	btemp+4,w,c
  4611  002D3A  6E00               	movwf	btemp,c
  4612  002D3C  0E00               	movlw	0
  4613  002D3E  2005               	addwfc	btemp+5,w,c
  4614  002D40  6E01               	movwf	btemp+1,c
  4615  002D42  0100               	movlb	__Lparam shr (0+8)
  4616  002D44  C000  F0EA         	movff	btemp,?a_ModDkCW4
  4617  002D48  C001  F0EB         	movff	btemp+1,?a_ModDkCW4+1
  4618  002D4C  0E00               	movlw	0
  4619  002D4E  BFEB               	btfsc	(?a_ModDkCW4+1)^(__Lparam& (0+65280)),7,b
  4620  002D50  0EFF               	movlw	-1
  4621  002D52  6FEC               	movwf	(?a_ModDkCW4+2)^(__Lparam& (0+65280)),b
  4622  002D54  6FED               	movwf	(?a_ModDkCW4+3)^(__Lparam& (0+65280)),b
  4623                           ;rgl.c: 1561: if(m>rgl.xmod) p=rgl.xmod;
  4624  002D56  C1D1  F000         	movff	_rgl+8,btemp
  4625  002D5A  6A01               	clrf	btemp+1,c
  4626  002D5C  6A02               	clrf	btemp+2,c
  4627  002D5E  6A03               	clrf	btemp+3,c
  4628  002D60  5003               	movf	btemp+3,w,c
  4629  002D62  0A80               	xorlw	128
  4630  002D64  6E04               	movwf	btemp+4,c
  4631  002D66  51ED               	movf	(?a_ModDkCW4+3)^(__Lparam& (0+65280)),w
  4632  002D68  0A80               	xorlw	128
  4633  002D6A  5C04               	subwf	btemp+4,w,c
  4634  002D6C  E108               	bnz	u3195
  4635  002D6E  51EC               	movf	(?a_ModDkCW4+2)^(__Lparam& (0+65280)),w
  4636  002D70  5C02               	subwf	btemp+2,w,c
  4637  002D72  E105               	bnz	u3195
  4638  002D74  51EB               	movf	(?a_ModDkCW4+1)^(__Lparam& (0+65280)),w
  4639  002D76  5C01               	subwf	btemp+1,w,c
  4640  002D78  E102               	bnz	u3195
  4641  002D7A  51EA               	movf	?a_ModDkCW4^(__Lparam& (0+65280)),w
  4642  002D7C  5C00               	subwf	btemp,w,c
  4643  002D7E                     u3195:
  4644  002D7E  E203               	bc	l396
  4645  002D80  C1D1  FFD9         	movff	_rgl+8,fsr2l
  4646  002D84  D01C               	goto	l397
  4647  002D86                     l396:
  4648                           ;rgl.c: 1562: else
  4649  002D86  C17E  F000         	movff	_PWM+9,btemp
  4650  002D8A  6A01               	clrf	btemp+1,c
  4651  002D8C  6A02               	clrf	btemp+2,c
  4652  002D8E  6A03               	clrf	btemp+3,c
  4653  002D90  0100               	movlb	__Lparam shr (0+8)
  4654  002D92  51ED               	movf	(?a_ModDkCW4+3)^(__Lparam& (0+65280)),w
  4655  002D94  0A80               	xorlw	128
  4656  002D96  6E04               	movwf	btemp+4,c
  4657  002D98  5003               	movf	btemp+3,w,c
  4658  002D9A  0A80               	xorlw	128
  4659  002D9C  5C04               	subwf	btemp+4,w,c
  4660  002D9E  E108               	bnz	u3205
  4661  002DA0  5002               	movf	btemp+2,w,c
  4662  002DA2  5DEC               	subwf	(?a_ModDkCW4+2)^(__Lparam& (0+65280)),w
  4663  002DA4  E105               	bnz	u3205
  4664  002DA6  5001               	movf	btemp+1,w,c
  4665  002DA8  5DEB               	subwf	(?a_ModDkCW4+1)^(__Lparam& (0+65280)),w
  4666  002DAA  E102               	bnz	u3205
  4667  002DAC  5000               	movf	btemp,w,c
  4668  002DAE  5DEA               	subwf	?a_ModDkCW4^(__Lparam& (0+65280)),w
  4669  002DB0                     u3205:
  4670  002DB0  E203               	bc	l398
  4671  002DB2  C17E  FFD9         	movff	_PWM+9,fsr2l
  4672  002DB6  D003               	goto	l397
  4673  002DB8                     l398:
  4674                           ;rgl.c: 1564: else p=m;
  4675  002DB8  0100               	movlb	__Lparam shr (0+8)
  4676  002DBA  51EA               	movf	?a_ModDkCW4^(__Lparam& (0+65280)),w
  4677  002DBC  6ED9               	movwf	fsr2l,c
  4678  002DBE                     l397:
  4679                           ;rgl.c: 1565: rgl.tmp_pwm=p;
  4680  002DBE  CFD9 F1D2          	movff	fsr2l,_rgl+9
  4681                           ;rgl.c: 1566: }
  4682  002DC2  0012               	return	
  4683  002DC4                     __end_of_ModDkCW4:
  4684                           ;rgl.c: 1571: void ModPruCW4(void)
  4685                           ;rgl.c: 1572: {
  4686  002DC4                     _ModPruCW4:
  4687  000000                     
  4688                           ;rgl.c: 1573: static unsigned char l,m,o,p,q,r,s
      +                          ;
  4689  002DC4  0101               	movlb	_rgl shr (0+8)
  4690  002DC6  B5C9               	btfsc	_rgl& (0+255),2,b
  4691  002DC8  D09F               	goto	l401
  4692                           ;rgl.c: 1577: {
  4693  002DCA  010E               	movlb	F1744 shr (0+8)
  4694  002DCC  6BE3               	clrf	F1744& (0+255),b
  4695                           ;rgl.c: 1579: m=0;
  4696  002DCE  010E               	movlb	F1745 shr (0+8)
  4697  002DD0  6BE4               	clrf	F1745& (0+255),b
  4698                           ;rgl.c: 1580: o=0;
  4699  002DD2  010E               	movlb	F1746 shr (0+8)
  4700  002DD4  6BE5               	clrf	F1746& (0+255),b
  4701                           ;rgl.c: 1581: p=0;
  4702  002DD6  010E               	movlb	F1747 shr (0+8)
  4703  002DD8  6BE6               	clrf	F1747& (0+255),b
  4704                           ;rgl.c: 1582: if(q<255) q++;
  4705  002DDA  CEE7  F000         	movff	F1748,btemp
  4706  002DDE  2800               	incf	btemp,w,c
  4707  002DE0  E002               	bz	l402
  4708  002DE2  010E               	movlb	F1748 shr (0+8)
  4709  002DE4  2BE7               	incf	F1748& (0+255),f,b
  4710  002DE6                     l402:
  4711                           ;rgl.c: 1583: if(s<255) s++;
  4712  002DE6  CEE9  F000         	movff	F1750,btemp
  4713  002DEA  2800               	incf	btemp,w,c
  4714  002DEC  E002               	bz	l403
  4715  002DEE  010E               	movlb	F1750 shr (0+8)
  4716  002DF0  2BE9               	incf	F1750& (0+255),f,b
  4717  002DF2                     l403:
  4718                           ;rgl.c: 1584: if(DtCW._newPCW) s=0;
  4719  002DF2  0101               	movlb	(_DtCW+1) shr (0+8)
  4720  002DF4  A112               	btfss	(_DtCW+1)& (0+255),0,b
  4721  002DF6  D002               	goto	l404
  4722  002DF8  010E               	movlb	F1750 shr (0+8)
  4723  002DFA  6BE9               	clrf	F1750& (0+255),b
  4724  002DFC                     l404:
  4725                           ;rgl.c: 1585: if(Tnizsza(0))
  4726  002DFC  0E00               	movlw	0
  4727  002DFE  EC79  F01E         	call	_Tnizsza
  4728  002E02  A0D8               	btfss	status,0,c
  4729  002E04  0012               	return	
  4730                           ;rgl.c: 1586: {
  4731  002E06  0E0A               	movlw	10
  4732  002E08  EC79  F01E         	call	_Tnizsza
  4733  002E0C  B0D8               	btfsc	status,0,c
  4734  002E0E  0012               	return	
  4735                           ;rgl.c: 1588: {
  4736  002E10  0100               	movlb	__Lparam shr (0+8)
  4737  002E12  6BEA               	clrf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4738                           ;rgl.c: 1590: if(Tstoi()&&s>=1)
  4739  002E14  EC72  F01E         	call	_Tstoi	;wreg free
  4740  002E18  E308               	bnc	l407
  4741  002E1A  0E00               	movlw	0
  4742  002E1C  010E               	movlb	F1750 shr (0+8)
  4743  002E1E  65E9               	cpfsgt	F1750& (0+255),b
  4744  002E20  D004               	goto	l407
  4745                           ;rgl.c: 1591: {
  4746  002E22  6BE9               	clrf	F1750& (0+255),b
  4747                           ;rgl.c: 1593: k=2;
  4748  002E24  0E02               	movlw	2
  4749  002E26  0100               	movlb	__Lparam shr (0+8)
  4750  002E28  6FEA               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4751  002E2A                     l407:
  4752                           ;rgl.c: 1594: }
  4753  002E2A  0E01               	movlw	1
  4754  002E2C  EC4A  F01E         	call	_Trosnie
  4755  002E30  E310               	bnc	l408
  4756  002E32  0E00               	movlw	0
  4757  002E34  010E               	movlb	F1750 shr (0+8)
  4758  002E36  65E9               	cpfsgt	F1750& (0+255),b
  4759  002E38  D00C               	goto	l408
  4760                           ;rgl.c: 1596: {
  4761  002E3A  6BE9               	clrf	F1750& (0+255),b
  4762                           ;rgl.c: 1598: k=10;
  4763  002E3C  0E0A               	movlw	10
  4764  002E3E  0100               	movlb	__Lparam shr (0+8)
  4765  002E40  6FEA               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4766                           ;rgl.c: 1599: if(Trosnie(2)) k=8;
  4767  002E42  0E02               	movlw	2
  4768  002E44  EC4A  F01E         	call	_Trosnie
  4769  002E48  E306               	bnc	l410
  4770  002E4A  0E08               	movlw	8
  4771  002E4C  0100               	movlb	__Lparam shr (0+8)
  4772  002E4E  6FEA               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4773                           ;rgl.c: 1600: }
  4774  002E50  D002               	goto	l410
  4775  002E52                     l408:
  4776                           ;rgl.c: 1601: else
  4777  002E52  0101               	movlb	(_rgl+6) shr (0+8)
  4778  002E54  6BCF               	clrf	(_rgl+6)& (0+255),b
  4779  002E56                     l410:
  4780                           ;rgl.c: 1603: if(PWM.BufPWM>rgl.xmod) return;
  4781  002E56  C176  FFE8         	movff	_PWM+1,wreg
  4782  002E5A  0101               	movlb	(_rgl+8) shr (0+8)
  4783  002E5C  61D1               	cpfslt	(_rgl+8)& (0+255),b
  4784  002E5E  D001               	goto	l411
  4785  002E60  0012               	return	
  4786  002E62                     l411:
  4787                           ;rgl.c: 1604: tmp=rgl.xmod-PWM.BufPWM;
  4788  002E62  C176  FFE8         	movff	_PWM+1,wreg
  4789  002E66  0101               	movlb	(_rgl+8) shr (0+8)
  4790  002E68  5DD1               	subwf	(_rgl+8)& (0+255),w,b
  4791  002E6A  6ED9               	movwf	fsr2l,c
  4792                           ;rgl.c: 1605: if(k>tmp) k=tmp;
  4793  002E6C  50D9               	movf	fsr2l,w,c
  4794  002E6E  0100               	movlb	__Lparam shr (0+8)
  4795  002E70  94D8               	bcf	status,2,c
  4796  002E72  90D8               	bcf	status,0,c
  4797  002E74  AFEA               	btfss	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  4798  002E76  5DEA               	subwf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4799  002E78  B4D8               	btfsc	status,2,c
  4800  002E7A  90D8               	bcf	status,0,c
  4801  002E7C  E302               	bnc	l412
  4802  002E7E  50D9               	movf	fsr2l,w,c
  4803  002E80  6FEA               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4804  002E82                     l412:
  4805                           ;rgl.c: 1606: if(PWM.MMAXCW>PWM.MGMOD)
  4806  002E82  C195  FFE8         	movff	_PWM+32,wreg
  4807  002E86  0101               	movlb	(_PWM+12) shr (0+8)
  4808  002E88  6181               	cpfslt	(_PWM+12)& (0+255),b
  4809  002E8A  D01F               	goto	l413
  4810                           ;rgl.c: 1607: {
  4811  002E8C  C1D0  FFE8         	movff	_rgl+7,wreg
  4812  002E90  0100               	movlb	__Lparam shr (0+8)
  4813  002E92  25EA               	addwf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4814  002E94  6E02               	movwf	btemp+2,c
  4815  002E96  6A03               	clrf	btemp+3,c
  4816  002E98  B0D8               	btfsc	status,0,c
  4817  002E9A  2A03               	incf	btemp+3,f,c
  4818  002E9C  BFEA               	btfsc	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  4819  002E9E  0603               	decf	btemp+3,f,c
  4820  002EA0  C181  F000         	movff	_PWM+12,btemp
  4821  002EA4  6A01               	clrf	btemp+1,c
  4822  002EA6  5001               	movf	btemp+1,w,c
  4823  002EA8  0A80               	xorlw	128
  4824  002EAA  6E04               	movwf	btemp+4,c
  4825  002EAC  5003               	movf	btemp+3,w,c
  4826  002EAE  0A80               	xorlw	128
  4827  002EB0  5C04               	subwf	btemp+4,w,c
  4828  002EB2  E102               	bnz	u3375
  4829  002EB4  5002               	movf	btemp+2,w,c
  4830  002EB6  5C00               	subwf	btemp,w,c
  4831  002EB8                     u3375:
  4832  002EB8  E203               	bc	l414
  4833  002EBA  C181  F1D0         	movff	_PWM+12,_rgl+7
  4834  002EBE  0012               	return	
  4835  002EC0                     l414:
  4836                           ;rgl.c: 1609: else rgl.srp+=k;
  4837  002EC0  0100               	movlb	__Lparam shr (0+8)
  4838  002EC2  51EA               	movf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4839  002EC4  0101               	movlb	(_rgl+7) shr (0+8)
  4840  002EC6  27D0               	addwf	(_rgl+7)& (0+255),f,b
  4841                           ;rgl.c: 1610: }
  4842  002EC8  0012               	return	
  4843  002ECA                     l413:
  4844                           ;rgl.c: 1611: else
  4845  002ECA  C1D0  FFE8         	movff	_rgl+7,wreg
  4846  002ECE  0100               	movlb	__Lparam shr (0+8)
  4847  002ED0  25EA               	addwf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4848  002ED2  6E02               	movwf	btemp+2,c
  4849  002ED4  6A03               	clrf	btemp+3,c
  4850  002ED6  B0D8               	btfsc	status,0,c
  4851  002ED8  2A03               	incf	btemp+3,f,c
  4852  002EDA  BFEA               	btfsc	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  4853  002EDC  0603               	decf	btemp+3,f,c
  4854  002EDE  C195  F000         	movff	_PWM+32,btemp
  4855  002EE2  6A01               	clrf	btemp+1,c
  4856  002EE4  5001               	movf	btemp+1,w,c
  4857  002EE6  0A80               	xorlw	128
  4858  002EE8  6E04               	movwf	btemp+4,c
  4859  002EEA  5003               	movf	btemp+3,w,c
  4860  002EEC  0A80               	xorlw	128
  4861  002EEE  5C04               	subwf	btemp+4,w,c
  4862  002EF0  E102               	bnz	u3385
  4863  002EF2  5002               	movf	btemp+2,w,c
  4864  002EF4  5C00               	subwf	btemp,w,c
  4865  002EF6                     u3385:
  4866  002EF6  E203               	bc	l417
  4867  002EF8  C195  F1D0         	movff	_PWM+32,_rgl+7
  4868  002EFC  0012               	return	
  4869  002EFE                     l417:
  4870                           ;rgl.c: 1614: else rgl.srp+=k;
  4871  002EFE  0100               	movlb	__Lparam shr (0+8)
  4872  002F00  51EA               	movf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4873  002F02  0101               	movlb	(_rgl+7) shr (0+8)
  4874  002F04  27D0               	addwf	(_rgl+7)& (0+255),f,b
  4875                           ;rgl.c: 1615: }
  4876  002F06  0012               	return	
  4877                           ;rgl.c: 1618: else return;
  4878                           ;rgl.c: 1620: else return;
  4879  002F08                     l401:
  4880                           ;rgl.c: 1622: else
  4881  002F08  010E               	movlb	F1748 shr (0+8)
  4882  002F0A  6BE7               	clrf	F1748& (0+255),b
  4883                           ;rgl.c: 1625: r=0;
  4884  002F0C  010E               	movlb	F1749 shr (0+8)
  4885  002F0E  6BE8               	clrf	F1749& (0+255),b
  4886                           ;rgl.c: 1626: s=0;
  4887  002F10  010E               	movlb	F1750 shr (0+8)
  4888  002F12  6BE9               	clrf	F1750& (0+255),b
  4889                           ;rgl.c: 1627: if(m<255) m++;
  4890  002F14  CEE4  F000         	movff	F1745,btemp
  4891  002F18  2800               	incf	btemp,w,c
  4892  002F1A  E002               	bz	l422
  4893  002F1C  010E               	movlb	F1745 shr (0+8)
  4894  002F1E  2BE4               	incf	F1745& (0+255),f,b
  4895  002F20                     l422:
  4896                           ;rgl.c: 1628: if(p<255) p++;
  4897  002F20  CEE6  F000         	movff	F1747,btemp
  4898  002F24  2800               	incf	btemp,w,c
  4899  002F26  E002               	bz	l423
  4900  002F28  010E               	movlb	F1747 shr (0+8)
  4901  002F2A  2BE6               	incf	F1747& (0+255),f,b
  4902  002F2C                     l423:
  4903                           ;rgl.c: 1629: if(o<255) o++;
  4904  002F2C  CEE5  F000         	movff	F1746,btemp
  4905  002F30  2800               	incf	btemp,w,c
  4906  002F32  E002               	bz	l424
  4907  002F34  010E               	movlb	F1746 shr (0+8)
  4908  002F36  2BE5               	incf	F1746& (0+255),f,b
  4909  002F38                     l424:
  4910                           ;rgl.c: 1630: if(DtCW.DAD_CW>DtCW.AC_CW)
  4911  002F38  C11F  FFE8         	movff	_DtCW+14,wreg
  4912  002F3C  0101               	movlb	(_DtCW+12) shr (0+8)
  4913  002F3E  611D               	cpfslt	(_DtCW+12)& (0+255),b
  4914  002F40  D060               	goto	l425
  4915                           ;rgl.c: 1631: {
  4916  002F42  0100               	movlb	__Lparam shr (0+8)
  4917  002F44  6BEA               	clrf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4918                           ;rgl.c: 1633: if(Trosnie(0)&&m>=2)
  4919  002F46  0E00               	movlw	0
  4920  002F48  EC4A  F01E         	call	_Trosnie
  4921  002F4C  E310               	bnc	l426
  4922  002F4E  0E01               	movlw	1
  4923  002F50  010E               	movlb	F1745 shr (0+8)
  4924  002F52  65E4               	cpfsgt	F1745& (0+255),b
  4925  002F54  D00C               	goto	l426
  4926                           ;rgl.c: 1634: {
  4927  002F56  010E               	movlb	F1747 shr (0+8)
  4928  002F58  6BE6               	clrf	F1747& (0+255),b
  4929                           ;rgl.c: 1636: o=0;
  4930  002F5A  010E               	movlb	F1746 shr (0+8)
  4931  002F5C  6BE5               	clrf	F1746& (0+255),b
  4932                           ;rgl.c: 1637: l=0;
  4933  002F5E  010E               	movlb	F1744 shr (0+8)
  4934  002F60  6BE3               	clrf	F1744& (0+255),b
  4935                           ;rgl.c: 1638: m=0;
  4936  002F62  010E               	movlb	F1745 shr (0+8)
  4937  002F64  6BE4               	clrf	F1745& (0+255),b
  4938                           ;rgl.c: 1639: k=2;
  4939  002F66  0E02               	movlw	2
  4940  002F68  0100               	movlb	__Lparam shr (0+8)
  4941  002F6A  6FEA               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4942                           ;rgl.c: 1640: }
  4943  002F6C  D01C               	goto	l427
  4944  002F6E                     l426:
  4945                           ;rgl.c: 1641: else
  4946  002F6E  0E01               	movlw	1
  4947  002F70  EC86  F01E         	call	_Twyzsza
  4948  002F74  E316               	bnc	l428
  4949                           ;rgl.c: 1643: {
  4950  002F76  EC72  F01E         	call	_Tstoi	;wreg free
  4951  002F7A  E315               	bnc	l427
  4952                           ;rgl.c: 1645: {
  4953  002F7C  0E01               	movlw	1
  4954  002F7E  010E               	movlb	F1744 shr (0+8)
  4955  002F80  65E3               	cpfsgt	F1744& (0+255),b
  4956  002F82  D00A               	goto	l430
  4957                           ;rgl.c: 1647: {
  4958  002F84  0100               	movlb	__Lparam shr (0+8)
  4959  002F86  6FEA               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4960                           ;rgl.c: 1649: if(Twyzsza(3)) k=2;
  4961  002F88  0E03               	movlw	3
  4962  002F8A  EC86  F01E         	call	_Twyzsza
  4963  002F8E  E309               	bnc	l428
  4964  002F90  0E02               	movlw	2
  4965  002F92  0100               	movlb	__Lparam shr (0+8)
  4966  002F94  6FEA               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4967  002F96  D005               	goto	l428
  4968                           ;rgl.c: 1650: l=0;
  4969                           ;rgl.c: 1651: }
  4970  002F98                     l430:
  4971                           ;rgl.c: 1652: else
  4972  002F98  0100               	movlb	__Lparam shr (0+8)
  4973  002F9A  6BEA               	clrf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  4974                           ;rgl.c: 1655: l++;
  4975  002F9C  010E               	movlb	F1744 shr (0+8)
  4976  002F9E  2BE3               	incf	F1744& (0+255),f,b
  4977                           ;rgl.c: 1656: }
  4978  002FA0  D002               	goto	l427
  4979  002FA2                     l428:
  4980  002FA2  010E               	movlb	F1744 shr (0+8)
  4981  002FA4  6BE3               	clrf	F1744& (0+255),b
  4982  002FA6                     l427:
  4983                           ;rgl.c: 1659: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PW
      +                          M.MDMOD;
  4984  002FA6  C17E  F000         	movff	_PWM+9,btemp
  4985  002FAA  6A01               	clrf	btemp+1,c
  4986  002FAC  C1D0  F002         	movff	_rgl+7,btemp+2
  4987  002FB0  0100               	movlb	__Lparam shr (0+8)
  4988  002FB2  51EA               	movf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  4989  002FB4  5C02               	subwf	btemp+2,w,c
  4990  002FB6  6EF6               	movwf	tblptrl,c
  4991  002FB8  6AF7               	clrf	tblptrh,c
  4992  002FBA  B0D8               	btfsc	status,0,c
  4993  002FBC  2AF7               	incf	tblptrh,f,c
  4994  002FBE  AFEA               	btfss	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  4995  002FC0  06F7               	decf	tblptrh,f,c
  4996  002FC2  50F7               	movf	tblptrh,w,c
  4997  002FC4  0A80               	xorlw	128
  4998  002FC6  6E02               	movwf	btemp+2,c
  4999  002FC8  5001               	movf	btemp+1,w,c
  5000  002FCA  0A80               	xorlw	128
  5001  002FCC  5C02               	subwf	btemp+2,w,c
  5002  002FCE  E102               	bnz	u3505
  5003  002FD0  5000               	movf	btemp,w,c
  5004  002FD2  5CF6               	subwf	tblptrl,w,c
  5005  002FD4                     u3505:
  5006  002FD4  E203               	bc	l434
  5007  002FD6  C17E  F1D0         	movff	_PWM+9,_rgl+7
  5008  002FDA  D004               	goto	l435
  5009  002FDC                     l434:
  5010                           ;rgl.c: 1660: else rgl.srp-=k;
  5011  002FDC  0100               	movlb	__Lparam shr (0+8)
  5012  002FDE  51EA               	movf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  5013  002FE0  0101               	movlb	(_rgl+7) shr (0+8)
  5014  002FE2  5FD0               	subwf	(_rgl+7)& (0+255),f,b
  5015  002FE4                     l435:
  5016                           ;rgl.c: 1661: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM
      +                          .MMAXCW;
  5017  002FE4  C1D0  FFE8         	movff	_rgl+7,wreg
  5018  002FE8  0101               	movlb	(_PWM+32) shr (0+8)
  5019  002FEA  6195               	cpfslt	(_PWM+32)& (0+255),b
  5020  002FEC  D002               	goto	l436
  5021  002FEE  C195  F1D0         	movff	_PWM+32,_rgl+7
  5022  002FF2                     l436:
  5023                           ;rgl.c: 1662: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.
      +                          srp;
  5024  002FF2  C1D0  FFE8         	movff	_rgl+7,wreg
  5025  002FF6  0101               	movlb	(_rgl+8) shr (0+8)
  5026  002FF8  61D1               	cpfslt	(_rgl+8)& (0+255),b
  5027  002FFA  0012               	return	
  5028  002FFC  C1D0  F1D1         	movff	_rgl+7,_rgl+8
  5029                           ;rgl.c: 1663: return;
  5030  003000  0012               	return	
  5031  003002                     l425:
  5032                           ;rgl.c: 1665: else
  5033  003002  0100               	movlb	__Lparam shr (0+8)
  5034  003004  6BEA               	clrf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  5035                           ;rgl.c: 1668: if(Tmaleje(0)&&m>=2)
  5036  003006  0E00               	movlw	0
  5037  003008  EC57  F01E         	call	_Tmaleje
  5038  00300C  E310               	bnc	l439
  5039  00300E  0E01               	movlw	1
  5040  003010  010E               	movlb	F1745 shr (0+8)
  5041  003012  65E4               	cpfsgt	F1745& (0+255),b
  5042  003014  D00C               	goto	l439
  5043                           ;rgl.c: 1669: {
  5044  003016  010E               	movlb	F1747 shr (0+8)
  5045  003018  6BE6               	clrf	F1747& (0+255),b
  5046                           ;rgl.c: 1671: o=0;
  5047  00301A  010E               	movlb	F1746 shr (0+8)
  5048  00301C  6BE5               	clrf	F1746& (0+255),b
  5049                           ;rgl.c: 1672: l=0;
  5050  00301E  010E               	movlb	F1744 shr (0+8)
  5051  003020  6BE3               	clrf	F1744& (0+255),b
  5052                           ;rgl.c: 1673: m=0;
  5053  003022  010E               	movlb	F1745 shr (0+8)
  5054  003024  6BE4               	clrf	F1745& (0+255),b
  5055                           ;rgl.c: 1674: k=1;
  5056  003026  0E01               	movlw	1
  5057  003028  0100               	movlb	__Lparam shr (0+8)
  5058  00302A  6FEA               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  5059                           ;rgl.c: 1676: }
  5060  00302C  D015               	goto	l440
  5061  00302E                     l439:
  5062                           ;rgl.c: 1677: else
  5063  00302E  0E01               	movlw	1
  5064  003030  EC79  F01E         	call	_Tnizsza
  5065  003034  E30F               	bnc	l441
  5066                           ;rgl.c: 1679: {
  5067  003036  EC72  F01E         	call	_Tstoi	;wreg free
  5068  00303A  E30E               	bnc	l440
  5069                           ;rgl.c: 1681: {
  5070  00303C  0E02               	movlw	2
  5071  00303E  010E               	movlb	F1744 shr (0+8)
  5072  003040  65E3               	cpfsgt	F1744& (0+255),b
  5073  003042  D003               	goto	l443
  5074                           ;rgl.c: 1683: {
  5075  003044  0100               	movlb	__Lparam shr (0+8)
  5076  003046  6FEA               	movwf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  5077  003048  D005               	goto	l441
  5078                           ;rgl.c: 1685: l=0;
  5079                           ;rgl.c: 1686: }
  5080  00304A                     l443:
  5081                           ;rgl.c: 1687: else
  5082  00304A  0100               	movlb	__Lparam shr (0+8)
  5083  00304C  6BEA               	clrf	?a_ModPruCW4^(__Lparam& (0+65280)),b
  5084                           ;rgl.c: 1690: l++;
  5085  00304E  010E               	movlb	F1744 shr (0+8)
  5086  003050  2BE3               	incf	F1744& (0+255),f,b
  5087                           ;rgl.c: 1691: }
  5088  003052  D002               	goto	l440
  5089  003054                     l441:
  5090  003054  010E               	movlb	F1744 shr (0+8)
  5091  003056  6BE3               	clrf	F1744& (0+255),b
  5092  003058                     l440:
  5093                           ;rgl.c: 1694: if(PWM.MMAXCW>PWM.MGMOD)
  5094  003058  C195  FFE8         	movff	_PWM+32,wreg
  5095  00305C  0101               	movlb	(_PWM+12) shr (0+8)
  5096  00305E  6181               	cpfslt	(_PWM+12)& (0+255),b
  5097  003060  D01A               	goto	l446
  5098                           ;rgl.c: 1695: {
  5099  003062  C1D0  FFE8         	movff	_rgl+7,wreg
  5100  003066  0100               	movlb	__Lparam shr (0+8)
  5101  003068  25EA               	addwf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  5102  00306A  6E02               	movwf	btemp+2,c
  5103  00306C  6A03               	clrf	btemp+3,c
  5104  00306E  B0D8               	btfsc	status,0,c
  5105  003070  2A03               	incf	btemp+3,f,c
  5106  003072  BFEA               	btfsc	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  5107  003074  0603               	decf	btemp+3,f,c
  5108  003076  C181  F000         	movff	_PWM+12,btemp
  5109  00307A  6A01               	clrf	btemp+1,c
  5110  00307C  5001               	movf	btemp+1,w,c
  5111  00307E  0A80               	xorlw	128
  5112  003080  6E04               	movwf	btemp+4,c
  5113  003082  5003               	movf	btemp+3,w,c
  5114  003084  0A80               	xorlw	128
  5115  003086  5C04               	subwf	btemp+4,w,c
  5116  003088  E102               	bnz	u3605
  5117  00308A  5002               	movf	btemp+2,w,c
  5118  00308C  5C00               	subwf	btemp,w,c
  5119  00308E                     u3605:
  5120  00308E  E21D               	bc	l450
  5121  003090  C181  F1D0         	movff	_PWM+12,_rgl+7
  5122  003094  D01E               	goto	l449
  5123                           ;rgl.c: 1697: else rgl.srp+=k;
  5124                           ;rgl.c: 1698: }
  5125  003096                     l446:
  5126                           ;rgl.c: 1699: else
  5127  003096  C1D0  FFE8         	movff	_rgl+7,wreg
  5128  00309A  0100               	movlb	__Lparam shr (0+8)
  5129  00309C  25EA               	addwf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  5130  00309E  6E02               	movwf	btemp+2,c
  5131  0030A0  6A03               	clrf	btemp+3,c
  5132  0030A2  B0D8               	btfsc	status,0,c
  5133  0030A4  2A03               	incf	btemp+3,f,c
  5134  0030A6  BFEA               	btfsc	?a_ModPruCW4^(__Lparam& (0+65280)),7,b
  5135  0030A8  0603               	decf	btemp+3,f,c
  5136  0030AA  C195  F000         	movff	_PWM+32,btemp
  5137  0030AE  6A01               	clrf	btemp+1,c
  5138  0030B0  5001               	movf	btemp+1,w,c
  5139  0030B2  0A80               	xorlw	128
  5140  0030B4  6E04               	movwf	btemp+4,c
  5141  0030B6  5003               	movf	btemp+3,w,c
  5142  0030B8  0A80               	xorlw	128
  5143  0030BA  5C04               	subwf	btemp+4,w,c
  5144  0030BC  E102               	bnz	u3615
  5145  0030BE  5002               	movf	btemp+2,w,c
  5146  0030C0  5C00               	subwf	btemp,w,c
  5147  0030C2                     u3615:
  5148  0030C2  E203               	bc	l450
  5149  0030C4  C195  F1D0         	movff	_PWM+32,_rgl+7
  5150  0030C8  D004               	goto	l449
  5151  0030CA                     l450:
  5152                           ;rgl.c: 1702: else rgl.srp+=k;
  5153  0030CA  0100               	movlb	__Lparam shr (0+8)
  5154  0030CC  51EA               	movf	?a_ModPruCW4^(__Lparam& (0+65280)),w
  5155  0030CE  0101               	movlb	(_rgl+7) shr (0+8)
  5156  0030D0  27D0               	addwf	(_rgl+7)& (0+255),f,b
  5157  0030D2                     l449:
  5158                           ;rgl.c: 1703: }
  5159  0030D2  C1D0  FFE8         	movff	_rgl+7,wreg
  5160  0030D6  0101               	movlb	(_rgl+8) shr (0+8)
  5161  0030D8  61D1               	cpfslt	(_rgl+8)& (0+255),b
  5162  0030DA  0012               	return	
  5163  0030DC  C1D0  F1D1         	movff	_rgl+7,_rgl+8
  5164                           ;rgl.c: 1705: return;
  5165  0030E0  0012               	return	
  5166                           ;rgl.c: 1706: }
  5167  0030E2                     __end_of_ModPruCW4:
  5168                           ;rgl.c: 1712: void IncMaxCW4(void)
  5169                           ;rgl.c: 1713: {
  5170  0030E2                     _IncMaxCW4:
  5171  000000                     
  5172                           ;rgl.c: 1714: unsigned char k;
  5173  0030E2  0101               	movlb	_rgl shr (0+8)
  5174  0030E4  A5C9               	btfss	_rgl& (0+255),2,b
  5175  0030E6  D014               	goto	l454
  5176                           ;rgl.c: 1718: {
  5177  0030E8  C195  FFE8         	movff	_PWM+32,wreg
  5178  0030EC  0101               	movlb	(_PWM+12) shr (0+8)
  5179  0030EE  6181               	cpfslt	(_PWM+12)& (0+255),b
  5180  0030F0  D007               	goto	l455
  5181                           ;rgl.c: 1720: {
  5182  0030F2  C1D1  FFE8         	movff	_rgl+8,wreg
  5183  0030F6  6181               	cpfslt	(_PWM+12)& (0+255),b
  5184  0030F8  0012               	return	
  5185  0030FA  C181  F1D1         	movff	_PWM+12,_rgl+8
  5186                           ;rgl.c: 1722: }
  5187  0030FE  0012               	return	
  5188  003100                     l455:
  5189                           ;rgl.c: 1723: else
  5190  003100  C1D1  FFE8         	movff	_rgl+8,wreg
  5191  003104  0101               	movlb	(_PWM+32) shr (0+8)
  5192  003106  6195               	cpfslt	(_PWM+32)& (0+255),b
  5193  003108  0012               	return	
  5194  00310A  C195  F1D1         	movff	_PWM+32,_rgl+8
  5195                           ;rgl.c: 1726: }
  5196  00310E  0012               	return	
  5197  003110                     l454:
  5198                           ;rgl.c: 1728: }
  5199  003110  0E01               	movlw	1
  5200  003112  EC4A  F01E         	call	_Trosnie
  5201  003116  B0D8               	btfsc	status,0,c
  5202  003118  0012               	return	
  5203                           ;rgl.c: 1732: k=5;
  5204  00311A  0E05               	movlw	5
  5205  00311C  6ED9               	movwf	fsr2l,c
  5206                           ;rgl.c: 1733: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
  5207  00311E  C1D1  F000         	movff	_rgl+8,btemp
  5208  003122  6A01               	clrf	btemp+1,c
  5209  003124  2600               	addwf	btemp,f,c
  5210  003126  0E00               	movlw	0
  5211  003128  2201               	addwfc	btemp+1,f,c
  5212  00312A  5001               	movf	btemp+1,w,c
  5213  00312C  0A80               	xorlw	128
  5214  00312E  0F80               	addlw	-128
  5215  003130  0EF1               	movlw	241
  5216  003132  B4D8               	btfsc	status,2,c
  5217  003134  5C00               	subwf	btemp,w,c
  5218  003136  E304               	bnc	l460
  5219  003138  0EF0               	movlw	-16
  5220  00313A  CFE8 F1D1          	movff	wreg,_rgl+8
  5221  00313E  D003               	goto	l461
  5222  003140                     l460:
  5223                           ;rgl.c: 1734: else rgl.xmod+=k;
  5224  003140  0101               	movlb	(_rgl+8) shr (0+8)
  5225  003142  0E05               	movlw	5
  5226  003144  27D1               	addwf	(_rgl+8)& (0+255),f,b
  5227  003146                     l461:
  5228                           ;rgl.c: 1735: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=P
      +                          WM.MMAXCW;
  5229  003146  C1D1  FFE8         	movff	_rgl+8,wreg
  5230  00314A  0101               	movlb	(_PWM+32) shr (0+8)
  5231  00314C  6195               	cpfslt	(_PWM+32)& (0+255),b
  5232  00314E  0012               	return	
  5233  003150  C195  F1D1         	movff	_PWM+32,_rgl+8
  5234                           ;rgl.c: 1736: }
  5235  003154  0012               	return	
  5236  003156                     __end_of_IncMaxCW4:
  5237                           ;rgl.c: 1739: void ModPrzCW4(void)
  5238                           ;rgl.c: 1740: {
  5239  003156                     _ModPrzCW4:
  5240  000000                     
  5241                           ;rgl.c: 1741: static unsigned char trb=0;
  5242  003156  0E64               	movlw	100
  5243  003158  6E02               	movwf	btemp+2,c
  5244  00315A  6A03               	clrf	btemp+3,c
  5245  00315C  C17E  FFE8         	movff	_PWM+9,wreg
  5246  003160  C1D2  F000         	movff	_rgl+9,btemp
  5247  003164  6A01               	clrf	btemp+1,c
  5248  003166  5E00               	subwf	btemp,f,c
  5249  003168  0E00               	movlw	0
  5250  00316A  5A01               	subwfb	btemp+1,f,c
  5251  00316C  ECBF  F062         	call	lwmul
  5252  003170  C004  FFF6         	movff	btemp+4,tblptrl
  5253  003174  C005  FFF7         	movff	btemp+5,tblptrh
  5254                           ;rgl.c: 1745: p=p/(PWM.MGMOD-PWM.MDMOD);
  5255  003178  C17E  FFE8         	movff	_PWM+9,wreg
  5256  00317C  C181  F002         	movff	_PWM+12,btemp+2
  5257  003180  6A03               	clrf	btemp+3,c
  5258  003182  5E02               	subwf	btemp+2,f,c
  5259  003184  0E00               	movlw	0
  5260  003186  5A03               	subwfb	btemp+3,f,c
  5261  003188  CFF6 F000          	movff	tblptrl,btemp
  5262  00318C  CFF7 F001          	movff	tblptrh,btemp+1
  5263  003190  ECF7  F061         	call	lwdiv
  5264  003194  C004  FFF6         	movff	btemp+4,tblptrl
  5265  003198  C005  FFF7         	movff	btemp+5,tblptrh
  5266                           ;rgl.c: 1747: if(!rgl.nmod)
  5267  00319C  0101               	movlb	_rgl shr (0+8)
  5268  00319E  BBC9               	btfsc	_rgl& (0+255),5,b
  5269  0031A0  D066               	goto	l475
  5270                           ;rgl.c: 1748: {
  5271  0031A2  010E               	movlb	F1757 shr (0+8)
  5272  0031A4  6BEA               	clrf	F1757& (0+255),b
  5273                           ;rgl.c: 1750: if(p<=35)
  5274  0031A6  0E00               	movlw	0
  5275  0031A8  5CF7               	subwf	tblptrh,w,c
  5276  0031AA  0E24               	movlw	36
  5277  0031AC  B4D8               	btfsc	status,2,c
  5278  0031AE  5CF6               	subwf	tblptrl,w,c
  5279                           ;rgl.c: 1751: {
  5280  0031B0  0E00               	movlw	0
  5281  0031B2  E20F               	bc	L21
  5282  0031B4  EC57  F01E         	call	_Tmaleje
  5283  0031B8  B0D8               	btfsc	status,0,c
  5284  0031BA  0012               	return	
  5285  0031BC  0E03               	movlw	3
  5286  0031BE  EC86  F01E         	call	_Twyzsza
  5287  0031C2  A0D8               	btfss	status,0,c
  5288  0031C4  0012               	return	
  5289                           ;rgl.c: 1753: {
  5290  0031C6  0E01               	movlw	1
  5291  0031C8  CFE8 FEEA          	movff	wreg,F1757
  5292                           ;rgl.c: 1755: rgl.nmod=1;
  5293  0031CC  0101               	movlb	_rgl shr (0+8)
  5294  0031CE  8BC9               	bsf	_rgl& (0+255),5,b
  5295                           ;rgl.c: 1756: }
  5296  0031D0  0C01               	retlw	1
  5297                           ;rgl.c: 1758: else
  5298  0031D2                     L21:
  5299  0031D2  EC57  F01E         	call	_Tmaleje
  5300  0031D6  B0D8               	btfsc	status,0,c
  5301  0031D8  0012               	return	
  5302                           ;rgl.c: 1761: {
  5303  0031DA  0E05               	movlw	5
  5304  0031DC  EC86  F01E         	call	_Twyzsza
  5305  0031E0  A0D8               	btfss	status,0,c
  5306  0031E2  0012               	return	
  5307                           ;rgl.c: 1763: {
  5308  0031E4  C17E  F000         	movff	_PWM+9,btemp
  5309  0031E8  6A01               	clrf	btemp+1,c
  5310  0031EA  C1D0  F002         	movff	_rgl+7,btemp+2
  5311  0031EE  0EFD               	movlw	253
  5312  0031F0  2402               	addwf	btemp+2,w,c
  5313  0031F2  6EF6               	movwf	tblptrl,c
  5314  0031F4  6AF7               	clrf	tblptrh,c
  5315  0031F6  0EFF               	movlw	255
  5316  0031F8  22F7               	addwfc	tblptrh,f,c
  5317  0031FA  50F7               	movf	tblptrh,w,c
  5318  0031FC  0A80               	xorlw	128
  5319  0031FE  6E02               	movwf	btemp+2,c
  5320  003200  5001               	movf	btemp+1,w,c
  5321  003202  0A80               	xorlw	128
  5322  003204  5C02               	subwf	btemp+2,w,c
  5323  003206  E102               	bnz	u3775
  5324  003208  5000               	movf	btemp,w,c
  5325  00320A  5CF6               	subwf	tblptrl,w,c
  5326  00320C                     u3775:
  5327  00320C  E203               	bc	l470
  5328  00320E  C17E  F1D0         	movff	_PWM+9,_rgl+7
  5329  003212  D003               	goto	l471
  5330  003214                     l470:
  5331                           ;rgl.c: 1765: else rgl.srp-=3;
  5332  003214  0101               	movlb	(_rgl+7) shr (0+8)
  5333  003216  0EFD               	movlw	-3
  5334  003218  27D0               	addwf	(_rgl+7)& (0+255),f,b
  5335  00321A                     l471:
  5336                           ;rgl.c: 1766: trb=2;
  5337  00321A  0E02               	movlw	2
  5338  00321C  CFE8 FEEA          	movff	wreg,F1757
  5339                           ;rgl.c: 1767: rgl.nmod=1;
  5340  003220  0101               	movlb	_rgl shr (0+8)
  5341  003222  8BC9               	bsf	_rgl& (0+255),5,b
  5342                           ;rgl.c: 1768: return;
  5343  003224  0C02               	retlw	2
  5344                           ;rgl.c: 1769: }
  5345                           ;rgl.c: 1771: else return;
  5346                           ;rgl.c: 1772: }
  5347                           ;rgl.c: 1774: else
  5348  003226                     l476:
  5349                           ;rgl.c: 1777: {
  5350                           ;rgl.c: 1779: {
  5351  003226  0E03               	movlw	3
  5352  003228  EC86  F01E         	call	_Twyzsza
  5353  00322C  B0D8               	btfsc	status,0,c
  5354  00322E  0012               	return	
  5355                           ;rgl.c: 1781: {
  5356  003230  0E03               	movlw	3
  5357  003232  EC79  F01E         	call	_Tnizsza
  5358  003236  E208               	bc	u3820
  5359  003238  EC72  F01E         	call	_Tstoi	;wreg free
  5360  00323C  E205               	bc	u3820
  5361  00323E  0E00               	movlw	0
  5362  003240  EC57  F01E         	call	_Tmaleje
  5363  003244  A0D8               	btfss	status,0,c
  5364  003246  0012               	return	
  5365  003248                     u3820:
  5366                           ;rgl.c: 1783: {
  5367  003248  010E               	movlb	F1757 shr (0+8)
  5368  00324A  6BEA               	clrf	F1757& (0+255),b
  5369                           ;rgl.c: 1785: rgl.nmod=0;
  5370  00324C  0101               	movlb	_rgl shr (0+8)
  5371  00324E  9BC9               	bcf	_rgl& (0+255),5,b
  5372                           ;rgl.c: 1786: }
  5373  003250  0012               	return	
  5374  003252                     l479:
  5375                           ;rgl.c: 1789: }
  5376                           ;rgl.c: 1791: {
  5377  003252  0E00               	movlw	0
  5378  003254  EC57  F01E         	call	_Tmaleje
  5379  003258  E205               	bc	u3860
  5380  00325A  0E04               	movlw	4
  5381  00325C  EC86  F01E         	call	_Twyzsza
  5382  003260  B0D8               	btfsc	status,0,c
  5383  003262  0012               	return	
  5384  003264                     u3860:
  5385                           ;rgl.c: 1793: {
  5386  003264  010E               	movlb	F1757 shr (0+8)
  5387  003266  6BEA               	clrf	F1757& (0+255),b
  5388                           ;rgl.c: 1795: rgl.nmod=0;
  5389  003268  0101               	movlb	_rgl shr (0+8)
  5390  00326A  9BC9               	bcf	_rgl& (0+255),5,b
  5391                           ;rgl.c: 1796: return;
  5392  00326C  0012               	return	
  5393                           ;rgl.c: 1797: }
  5394  00326E                     l475:
  5395  00326E  CEEA  FFE8         	movff	F1757,wreg
  5396  003272  0A01               	xorlw	1
  5397  003274  E0D8               	bz	l476
  5398  003276  0A03               	xorlw	3
  5399  003278  E0EC               	bz	l479
  5400  00327A  0012               	return	
  5401                           ;rgl.c: 1801: }
  5402  00327C                     __end_of_ModPrzCW4:
  5403                           ;rgl.c: 1805: void PropCO4(void)
  5404                           ;rgl.c: 1806: {
  5405  00327C                     _PropCO4:
  5406  000000                     
  5407                           ;rgl.c: 1807: if(!rgl.nmod)
  5408  00327C  0101               	movlb	_rgl shr (0+8)
  5409  00327E  BBC9               	btfsc	_rgl& (0+255),5,b
  5410  003280  EFFA  F01D         	goto	l638
  5411                           ;rgl.c: 1808: {
  5412  003284  0101               	movlb	_DtCO shr (0+8)
  5413  003286  B120               	btfsc	_DtCO& (0+255),0,b
  5414  003288  D01E               	goto	l483
  5415                           ;rgl.c: 1810: {
  5416  00328A  C1CC  FFE8         	movff	_rgl+3,wreg
  5417  00328E  0A03               	xorlw	3
  5418  003290  E102               	bnz	l484
  5419  003292  EFCB  F01D         	goto	L32
  5420                           ;rgl.c: 1812: {
  5421                           ;rgl.c: 1814: rgl.tmp_pwm=PWM.MGMOD;
  5422                           ;rgl.c: 1815: }
  5423  003296                     l484:
  5424                           ;rgl.c: 1816: else
  5425  003296  C1CC  FFE8         	movff	_rgl+3,wreg
  5426  00329A  0A02               	xorlw	2
  5427  00329C  E102               	bnz	l487
  5428  00329E  EFD9  F01D         	goto	L33
  5429                           ;rgl.c: 1818: {
  5430                           ;rgl.c: 1820: rgl.tmp_pwm=PWM.PROP1;
  5431                           ;rgl.c: 1821: }
  5432  0032A2                     l487:
  5433                           ;rgl.c: 1822: else
  5434  0032A2  C1CC  F000         	movff	_rgl+3,btemp
  5435  0032A6  0400               	decf	btemp,w,c
  5436  0032A8  E102               	bnz	l490
  5437  0032AA  EFE7  F01D         	goto	L34
  5438                           ;rgl.c: 1824: {
  5439                           ;rgl.c: 1826: rgl.tmp_pwm=PWM.PROP2;
  5440                           ;rgl.c: 1827: }
  5441  0032AE                     l490:
  5442                           ;rgl.c: 1828: else
  5443  0032AE  C1CC  FFE8         	movff	_rgl+3,wreg
  5444  0032B2  0A80               	xorlw	128
  5445  0032B4  0F7F               	addlw	-129
  5446  0032B6  E207               	bc	l483
  5447  0032B8                     L35:
  5448                           ;rgl.c: 1830: {
  5449  0032B8  C1D2  FFE8         	movff	_rgl+9,wreg
  5450  0032BC  0101               	movlb	(_PWM+29) shr (0+8)
  5451  0032BE  6192               	cpfslt	(_PWM+29)& (0+255),b
  5452  0032C0  D002               	goto	l483
  5453                           ;rgl.c: 2398: rgl.tmp_pwm=PWM.PROP3;
  5454  0032C2  C192  F1D2         	movff	_PWM+29,_rgl+9
  5455  0032C6                     l641:
  5456                           ;rgl.c: 1832: rgl.tmp_pwm=PWM.PROP3;
  5457  0032C6                     l483:
  5458                           ;rgl.c: 1833: }
  5459  0032C6  C1D2  FFE8         	movff	_rgl+9,wreg
  5460  0032CA  EFE5  F054         	goto	_WriteOPWM
  5461                           ;rgl.c: 1836: }
  5462                           ;rgl.c: 1837: else WriteOPWM(PWM.MDMOD);
  5463                           ;rgl.c: 1838: }
  5464  0032CE                     __end_of_PropCO4:
  5465                           ;rgl.c: 1847: void StartCO2(void)
  5466                           ;rgl.c: 1848: {
  5467  0032CE                     _StartCO2:
  5468  000000                     
  5469                           ;rgl.c: 1849: unsigned char k;
  5470  0032CE  0101               	movlb	_rgl shr (0+8)
  5471  0032D0  A1C9               	btfss	_rgl& (0+255),0,b
  5472  0032D2  B3C9               	btfsc	_rgl& (0+255),1,b
  5473  0032D4  0012               	return	
  5474                           ;rgl.c: 1852: StartRTdS(3);
  5475  0032D6  0E03               	movlw	3
  5476  0032D8  EC17  F05C         	call	_StartRTdS
  5477                           ;rgl.c: 1853: DtCO.dDCO=0;
  5478  0032DC  0101               	movlb	(_DtCO+9) shr (0+8)
  5479  0032DE  6B29               	clrf	(_DtCO+9)& (0+255),b
  5480                           ;rgl.c: 1854: DtCO.indCO=0;
  5481  0032E0  0101               	movlb	(_DtCO+10) shr (0+8)
  5482  0032E2  6B2A               	clrf	(_DtCO+10)& (0+255),b
  5483                           ;rgl.c: 1855: DtCW.dDCW=0;
  5484  0032E4  0101               	movlb	(_DtCW+8) shr (0+8)
  5485  0032E6  6B19               	clrf	(_DtCW+8)& (0+255),b
  5486                           ;rgl.c: 1856: DtCW.indCW=0;
  5487  0032E8  0101               	movlb	(_DtCW+10) shr (0+8)
  5488  0032EA  6B1B               	clrf	(_DtCW+10)& (0+255),b
  5489                           ;rgl.c: 1857: rgl.fz=0;
  5490  0032EC  0101               	movlb	_rgl shr (0+8)
  5491  0032EE  95C9               	bcf	_rgl& (0+255),2,b
  5492                           ;rgl.c: 1858: rgl.med_up=0;
  5493  0032F0  97C9               	bcf	_rgl& (0+255),3,b
  5494                           ;rgl.c: 1859: rgl.fast_up=0;
  5495  0032F2  99C9               	bcf	_rgl& (0+255),4,b
  5496                           ;rgl.c: 1863: if(PWM.MMAXCO>PWM.FIRSTPB)
  5497  0032F4  C194  FFE8         	movff	_PWM+31,wreg
  5498  0032F8  0101               	movlb	(_PWM+26) shr (0+8)
  5499  0032FA  618F               	cpfslt	(_PWM+26)& (0+255),b
  5500  0032FC  D003               	goto	l498
  5501                           ;rgl.c: 1864: {
  5502  0032FE  C18F  F1D1         	movff	_PWM+26,_rgl+8
  5503                           ;rgl.c: 1866: }
  5504  003302  D002               	goto	l499
  5505  003304                     l498:
  5506                           ;rgl.c: 1867: else
  5507  003304  C194  F1D1         	movff	_PWM+31,_rgl+8
  5508  003308                     l499:
  5509                           ;rgl.c: 1870: }
  5510  003308  0101               	movlb	(_rgl+7) shr (0+8)
  5511  00330A  6BD0               	clrf	(_rgl+7)& (0+255),b
  5512                           ;rgl.c: 1896: rgl.ytmp=0;
  5513  00330C  6BCF               	clrf	(_rgl+6)& (0+255),b
  5514                           ;rgl.c: 1897: rgl.nmod=0;
  5515  00330E  9BC9               	bcf	_rgl& (0+255),5,b
  5516                           ;rgl.c: 1898: rgl.del1s=0;
  5517  003310  9DC9               	bcf	_rgl& (0+255),6,b
  5518                           ;rgl.c: 1899: rgl.deln1=0;
  5519  003312  9FC9               	bcf	_rgl& (0+255),7,b
  5520                           ;rgl.c: 1900: rgl.inv_mod=0;
  5521  003314  91CA               	bcf	(_rgl+1)& (0+255),0,b
  5522                           ;rgl.c: 1901: }
  5523  003316  0012               	return	
  5524  003318                     __end_of_StartCO2:
  5525                           ;rgl.c: 1904: void StartMCW2(void)
  5526                           ;rgl.c: 1905: {
  5527  003318                     _StartMCW2:
  5528  000000                     
  5529                           ;rgl.c: 1906: if(rgl.btco||rgl.btcw) return;
  5530  003318  0101               	movlb	_rgl shr (0+8)
  5531  00331A  A1C9               	btfss	_rgl& (0+255),0,b
  5532  00331C  B3C9               	btfsc	_rgl& (0+255),1,b
  5533  00331E  0012               	return	
  5534                           ;rgl.c: 1907: StartRTdS(3);
  5535  003320  0E03               	movlw	3
  5536  003322  EC17  F05C         	call	_StartRTdS
  5537                           ;rgl.c: 1908: DtCO.dDCO=0;
  5538  003326  0101               	movlb	(_DtCO+9) shr (0+8)
  5539  003328  6B29               	clrf	(_DtCO+9)& (0+255),b
  5540                           ;rgl.c: 1909: DtCW.dDCW=0;
  5541  00332A  0101               	movlb	(_DtCW+8) shr (0+8)
  5542  00332C  6B19               	clrf	(_DtCW+8)& (0+255),b
  5543                           ;rgl.c: 1910: DtCO.indCO=0;
  5544  00332E  0101               	movlb	(_DtCO+10) shr (0+8)
  5545  003330  6B2A               	clrf	(_DtCO+10)& (0+255),b
  5546                           ;rgl.c: 1911: DtCW.indCW=0;
  5547  003332  0101               	movlb	(_DtCW+10) shr (0+8)
  5548  003334  6B1B               	clrf	(_DtCW+10)& (0+255),b
  5549                           ;rgl.c: 1912: rgl.fz=0;
  5550  003336  0101               	movlb	_rgl shr (0+8)
  5551  003338  95C9               	bcf	_rgl& (0+255),2,b
  5552                           ;rgl.c: 1913: FirstPCW2();
  5553  00333A  D805               	call	_FirstPCW2	;wreg free
  5554                           ;rgl.c: 1914: rgl.srp=0;
  5555  00333C  0101               	movlb	(_rgl+7) shr (0+8)
  5556  00333E  6BD0               	clrf	(_rgl+7)& (0+255),b
  5557                           ;rgl.c: 1915: rgl.ytmp=0;
  5558  003340  6BCF               	clrf	(_rgl+6)& (0+255),b
  5559                           ;rgl.c: 1916: rgl.del1s=0;
  5560  003342  9DC9               	bcf	_rgl& (0+255),6,b
  5561                           ;rgl.c: 1917: }
  5562  003344  0012               	return	
  5563  003346                     __end_of_StartMCW2:
  5564                           ;rgl.c: 1920: void FirstPCW2(void)
  5565                           ;rgl.c: 1921: {
  5566  003346                     _FirstPCW2:
  5567  000000                     
  5568                           ;rgl.c: 1922: if(PWM.MMAXCW>PWM.MGMOD)
  5569  003346  C195  FFE8         	movff	_PWM+32,wreg
  5570  00334A  0101               	movlb	(_PWM+12) shr (0+8)
  5571  00334C  6181               	cpfslt	(_PWM+12)& (0+255),b
  5572  00334E  D00B               	goto	l503
  5573                           ;rgl.c: 1923: {
  5574  003350  C118  FFE8         	movff	_DtCW+7,wreg
  5575  003354  0A80               	xorlw	128
  5576  003356  0F7F               	addlw	-129
  5577  003358  E303               	bnc	l504
  5578  00335A  C181  F1D1         	movff	_PWM+12,_rgl+8
  5579  00335E  0012               	return	
  5580  003360                     l504:
  5581                           ;rgl.c: 1925: else rgl.xmod=PWM.FIRSTPB;
  5582  003360  C18F  F1D1         	movff	_PWM+26,_rgl+8
  5583                           ;rgl.c: 1926: }
  5584  003364  0012               	return	
  5585  003366                     l503:
  5586                           ;rgl.c: 1927: else
  5587  003366  C118  FFE8         	movff	_DtCW+7,wreg
  5588  00336A  0A80               	xorlw	128
  5589  00336C  0F7F               	addlw	-129
  5590  00336E  E303               	bnc	l507
  5591  003370  C195  F1D1         	movff	_PWM+32,_rgl+8
  5592  003374  0012               	return	
  5593  003376                     l507:
  5594                           ;rgl.c: 1930: else
  5595  003376  C195  FFE8         	movff	_PWM+32,wreg
  5596  00337A  0101               	movlb	(_PWM+26) shr (0+8)
  5597  00337C  618F               	cpfslt	(_PWM+26)& (0+255),b
  5598  00337E  D003               	goto	l509
  5599  003380  C18F  F1D1         	movff	_PWM+26,_rgl+8
  5600  003384  0012               	return	
  5601  003386                     l509:
  5602                           ;rgl.c: 1933: else rgl.xmod=PWM.MMAXCW;
  5603  003386  C195  F1D1         	movff	_PWM+32,_rgl+8
  5604                           ;rgl.c: 1934: }
  5605  00338A  0012               	return	
  5606  00338C                     __end_of_FirstPCW2:
  5607                           ;rgl.c: 1974: void ClrMod2(void)
  5608                           ;rgl.c: 1975: {
  5609  00338C                     _ClrMod2:
  5610  000000                     
  5611                           ;rgl.c: 1976: rgl.fz=0;
  5612  00338C  0101               	movlb	_rgl shr (0+8)
  5613  00338E  95C9               	bcf	_rgl& (0+255),2,b
  5614                           ;rgl.c: 1977: rgl.xmod=PWM.BufPWM;
  5615  003390  C176  F1D1         	movff	_PWM+1,_rgl+8
  5616                           ;rgl.c: 1978: rgl.srp=0;
  5617  003394  6BD0               	clrf	(_rgl+7)& (0+255),b
  5618                           ;rgl.c: 1979: rgl.ytmp=0;
  5619  003396  6BCF               	clrf	(_rgl+6)& (0+255),b
  5620                           ;rgl.c: 1980: rgl.del1s=0;
  5621  003398  9DC9               	bcf	_rgl& (0+255),6,b
  5622                           ;rgl.c: 1981: }
  5623  00339A  0012               	return	
  5624  00339C                     __end_of_ClrMod2:
  5625                           ;rgl.c: 1984: void ModToCW2(void)
  5626                           ;rgl.c: 1985: {
  5627  00339C                     _ModToCW2:
  5628  000000                     
  5629                           ;rgl.c: 1986: rgl.btcw=1;
  5630  00339C  0101               	movlb	_rgl shr (0+8)
  5631  00339E  83C9               	bsf	_rgl& (0+255),1,b
  5632                           ;rgl.c: 1987: if(rgl.btco)
  5633  0033A0  A1C9               	btfss	_rgl& (0+255),0,b
  5634  0033A2  0012               	return	
  5635                           ;rgl.c: 1988: {
  5636  0033A4  91C9               	bcf	_rgl& (0+255),0,b
  5637                           ;rgl.c: 1990: ClrMod2();
  5638  0033A6  D7F2               	goto	_ClrMod2	;wreg free
  5639                           ;rgl.c: 1991: }
  5640  0033A8                     __end_of_ModToCW2:
  5641                           ;rgl.c: 1995: void ModToCO2(void)
  5642                           ;rgl.c: 1996: {
  5643  0033A8                     _ModToCO2:
  5644  000000                     
  5645                           ;rgl.c: 1997: rgl.btco=1;
  5646  0033A8  0101               	movlb	_rgl shr (0+8)
  5647  0033AA  81C9               	bsf	_rgl& (0+255),0,b
  5648                           ;rgl.c: 1998: if(rgl.btcw)
  5649  0033AC  A3C9               	btfss	_rgl& (0+255),1,b
  5650  0033AE  0012               	return	
  5651                           ;rgl.c: 1999: {
  5652  0033B0  93C9               	bcf	_rgl& (0+255),1,b
  5653                           ;rgl.c: 2001: ClrMod2();
  5654  0033B2  D7EC               	goto	_ClrMod2	;wreg free
  5655                           ;rgl.c: 2002: }
  5656  0033B4                     __end_of_ModToCO2:
  5657                           ;rgl.c: 2006: void IncConstCW2(void)
  5658                           ;rgl.c: 2007: {
  5659  0033B4                     _IncConstCW2:
  5660  000000                     
  5661                           ;rgl.c: 2008: if(!TFrosnie(0))
  5662  0033B4  0E00               	movlw	0
  5663  0033B6  ECA8  F01E         	call	_TFrosnie
  5664  0033BA  E208               	bc	l517
  5665                           ;rgl.c: 2009: {
  5666  0033BC  EC72  F01E         	call	_Tstoi	;wreg free
  5667  0033C0  0101               	movlb	(_rgl+6) shr (0+8)
  5668  0033C2  E302               	bnc	L22
  5669  0033C4  2BCF               	incf	(_rgl+6)& (0+255),f,b
  5670  0033C6  0C01               	retlw	1
  5671                           ;rgl.c: 2011: else rgl.ytmp=0;
  5672  0033C8                     L22:
  5673  0033C8  6BCF               	clrf	(_rgl+6)& (0+255),b
  5674                           ;rgl.c: 2012: }
  5675  0033CA  0012               	return	
  5676  0033CC                     l517:
  5677                           ;rgl.c: 2013: else rgl.ytmp=0;
  5678  0033CC  0101               	movlb	(_rgl+6) shr (0+8)
  5679  0033CE  6BCF               	clrf	(_rgl+6)& (0+255),b
  5680                           ;rgl.c: 2014: }
  5681  0033D0  0012               	return	
  5682  0033D2                     __end_of_IncConstCW2:
  5683                           ;rgl.c: 2016: void IncConstCO2(void)
  5684                           ;rgl.c: 2017: {
  5685  0033D2                     _IncConstCO2:
  5686  000000                     
  5687                           ;rgl.c: 2018: if(Tstoi()) rgl.ytmp++;
  5688  0033D2  EC72  F01E         	call	_Tstoi	;wreg free
  5689  0033D6  0101               	movlb	(_rgl+6) shr (0+8)
  5690  0033D8  E302               	bnc	L23
  5691  0033DA  2BCF               	incf	(_rgl+6)& (0+255),f,b
  5692  0033DC  0C01               	retlw	1
  5693                           ;rgl.c: 2019: else rgl.ytmp=0;
  5694  0033DE                     L23:
  5695  0033DE  6BCF               	clrf	(_rgl+6)& (0+255),b
  5696                           ;rgl.c: 2020: }
  5697  0033E0  0012               	return	
  5698  0033E2                     __end_of_IncConstCO2:
  5699                           ;rgl.c: 2023: void ReadDataCO2(void)
  5700                           ;rgl.c: 2024: {
  5701  0033E2                     _ReadDataCO2:
  5702  000000                     
  5703                           ;rgl.c: 2025: rgl.x_t=DtCO.DCO;
  5704  0033E2  C128  F1CB         	movff	_DtCO+8,_rgl+2
  5705                           ;rgl.c: 2026: rgl.x_dt=DtCO.dDCO;
  5706  0033E6  C129  F1CD         	movff	_DtCO+9,_rgl+4
  5707                           ;rgl.c: 2027: }
  5708  0033EA  0012               	return	
  5709  0033EC                     __end_of_ReadDataCO2:
  5710                           ;rgl.c: 2030: void ReadDataCW2(void)
  5711                           ;rgl.c: 2031: {
  5712  0033EC                     _ReadDataCW2:
  5713  000000                     
  5714                           ;rgl.c: 2032: rgl.x_t=DtCW.DCW;
  5715  0033EC  C118  F1CB         	movff	_DtCW+7,_rgl+2
  5716                           ;rgl.c: 2033: rgl.x_f=DtCO.DCO;
  5717  0033F0  C128  F1CC         	movff	_DtCO+8,_rgl+3
  5718                           ;rgl.c: 2034: rgl.x_dt=DtCW.dDCW;
  5719  0033F4  C119  F1CD         	movff	_DtCW+8,_rgl+4
  5720                           ;rgl.c: 2035: rgl.x_df=DtCO.dDCO;
  5721  0033F8  C129  F1CE         	movff	_DtCO+9,_rgl+5
  5722                           ;rgl.c: 2036: }
  5723  0033FC  0012               	return	
  5724  0033FE                     __end_of_ReadDataCW2:
  5725                           ;rgl.c: 2039: void ModZgCW2(void)
  5726                           ;rgl.c: 2040: {
  5727  0033FE                     _ModZgCW2:
  5728  000000                     
  5729                           ;rgl.c: 2041: signed long m;
  5730  0033FE  0E0A               	movlw	10
  5731  003400  EC79  F01E         	call	_Tnizsza
  5732  003404  E304               	bnc	l527
  5733                           ;rgl.c: 2046: {
  5734  003406  0E14               	movlw	20
  5735  003408  CFE8 FEEB          	movff	wreg,F1774
  5736                           ;rgl.c: 2048: FirstPCW2();
  5737  00340C  DF9C               	call	_FirstPCW2	;wreg free
  5738  00340E                     l527:
  5739                           ;rgl.c: 2049: }
  5740  00340E  0101               	movlb	_rgl shr (0+8)
  5741  003410  A5C9               	btfss	_rgl& (0+255),2,b
  5742  003412  D00D               	goto	l528
  5743                           ;rgl.c: 2051: {
  5744  003414  0E02               	movlw	2
  5745  003416  EC79  F01E         	call	_Tnizsza
  5746  00341A  A0D8               	btfss	status,0,c
  5747  00341C  0012               	return	
  5748                           ;rgl.c: 2053: {
  5749  00341E  C176  F1D1         	movff	_PWM+1,_rgl+8
  5750                           ;rgl.c: 2055: rgl.srp=0;
  5751  003422  0101               	movlb	(_rgl+7) shr (0+8)
  5752  003424  6BD0               	clrf	(_rgl+7)& (0+255),b
  5753                           ;rgl.c: 2056: rgl.ytmp=0;
  5754  003426  6BCF               	clrf	(_rgl+6)& (0+255),b
  5755                           ;rgl.c: 2057: rgl.del1s=0;
  5756  003428  9DC9               	bcf	_rgl& (0+255),6,b
  5757                           ;rgl.c: 2058: pop=0;
  5758  00342A  010E               	movlb	F1774 shr (0+8)
  5759  00342C  6BEB               	clrf	F1774& (0+255),b
  5760                           ;rgl.c: 2059: }
  5761                           ;rgl.c: 2060: else return;
  5762  00342E                     l528:
  5763                           ;rgl.c: 2061: }
  5764  00342E  0E01               	movlw	1
  5765  003430  EC79  F01E         	call	_Tnizsza
  5766  003434  E229               	bc	l531
  5767                           ;rgl.c: 2063: {
  5768  003436  0101               	movlb	_rgl shr (0+8)
  5769  003438  85C9               	bsf	_rgl& (0+255),2,b
  5770                           ;rgl.c: 2065: rgl.fast_up=0;
  5771  00343A  99C9               	bcf	_rgl& (0+255),4,b
  5772                           ;rgl.c: 2066: rgl.med_up=0;
  5773  00343C  97C9               	bcf	_rgl& (0+255),3,b
  5774                           ;rgl.c: 2067: rgl.srp=PWM.BufPWM+pop;
  5775  00343E  CEEB  FFE8         	movff	F1774,wreg
  5776  003442  0101               	movlb	(_PWM+1) shr (0+8)
  5777  003444  2576               	addwf	(_PWM+1)& (0+255),w,b
  5778  003446  CFE8 F1D0          	movff	wreg,_rgl+7
  5779                           ;rgl.c: 2068: rgl.xmod=PWM.BufPWM+pop;
  5780  00344A  CEEB  FFE8         	movff	F1774,wreg
  5781  00344E  2576               	addwf	(_PWM+1)& (0+255),w,b
  5782  003450  CFE8 F1D1          	movff	wreg,_rgl+8
  5783                           ;rgl.c: 2069: pop=0;
  5784  003454  010E               	movlb	F1774 shr (0+8)
  5785  003456  6BEB               	clrf	F1774& (0+255),b
  5786                           ;rgl.c: 2070: if(PWM.MMAXCW>PWM.MGMOD)
  5787  003458  C195  FFE8         	movff	_PWM+32,wreg
  5788  00345C  0101               	movlb	(_PWM+12) shr (0+8)
  5789  00345E  6181               	cpfslt	(_PWM+12)& (0+255),b
  5790  003460  D009               	goto	l532
  5791                           ;rgl.c: 2071: {
  5792  003462  C1D1  FFE8         	movff	_rgl+8,wreg
  5793  003466  6181               	cpfslt	(_PWM+12)& (0+255),b
  5794  003468  0012               	return	
  5795                           ;rgl.c: 2073: {
  5796  00346A  C181  F1D0         	movff	_PWM+12,_rgl+7
  5797                           ;rgl.c: 2075: rgl.xmod=PWM.MGMOD;
  5798  00346E  C181  F1D1         	movff	_PWM+12,_rgl+8
  5799                           ;rgl.c: 2076: }
  5800  003472  0012               	return	
  5801  003474                     l532:
  5802                           ;rgl.c: 2078: else
  5803  003474  C1D1  FFE8         	movff	_rgl+8,wreg
  5804  003478  0101               	movlb	(_PWM+32) shr (0+8)
  5805  00347A  6195               	cpfslt	(_PWM+32)& (0+255),b
  5806  00347C  0012               	return	
  5807                           ;rgl.c: 2081: {
  5808  00347E  C195  F1D0         	movff	_PWM+32,_rgl+7
  5809                           ;rgl.c: 2083: rgl.xmod=PWM.MMAXCW;
  5810  003482  C195  F1D1         	movff	_PWM+32,_rgl+8
  5811                           ;rgl.c: 2084: }
  5812  003486  0012               	return	
  5813  003488                     l531:
  5814                           ;rgl.c: 2087: }
  5815  003488  C17E  FFE8         	movff	_PWM+9,wreg
  5816  00348C  0101               	movlb	(_rgl+8) shr (0+8)
  5817  00348E  5DD1               	subwf	(_rgl+8)& (0+255),w,b
  5818  003490  E318               	bnc	l536
  5819  003492  0E0A               	movlw	10
  5820  003494  6E02               	movwf	btemp+2,c
  5821  003496  6A03               	clrf	btemp+3,c
  5822  003498  C17E  FFE8         	movff	_PWM+9,wreg
  5823  00349C  C1D1  F000         	movff	_rgl+8,btemp
  5824  0034A0  6A01               	clrf	btemp+1,c
  5825  0034A2  5E00               	subwf	btemp,f,c
  5826  0034A4  0E00               	movlw	0
  5827  0034A6  5A01               	subwfb	btemp+1,f,c
  5828  0034A8  ECBF  F062         	call	awmul
  5829  0034AC  0100               	movlb	__Lparam shr (0+8)
  5830  0034AE  C004  F0EA         	movff	btemp+4,?a_ModZgCW2
  5831  0034B2  C005  F0EB         	movff	btemp+5,?a_ModZgCW2+1
  5832  0034B6  0E00               	movlw	0
  5833  0034B8  BFEB               	btfsc	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),7,b
  5834  0034BA  0EFF               	movlw	-1
  5835  0034BC  6FEC               	movwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  5836  0034BE  6FED               	movwf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  5837  0034C0  D005               	goto	l537
  5838  0034C2                     l536:
  5839                           ;rgl.c: 2089: else m=0;
  5840  0034C2  0100               	movlb	__Lparam shr (0+8)
  5841  0034C4  6BEA               	clrf	?a_ModZgCW2^(__Lparam& (0+65280)),b
  5842  0034C6  6BEB               	clrf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),b
  5843  0034C8  6BEC               	clrf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  5844  0034CA  6BED               	clrf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  5845  0034CC                     l537:
  5846                           ;rgl.c: 2090: m=m/(DtCW.MAD_CW-DtCW.DAD_CW);
  5847  0034CC  C11F  FFE8         	movff	_DtCW+14,wreg
  5848  0034D0  C11E  F000         	movff	_DtCW+13,btemp
  5849  0034D4  5C00               	subwf	btemp,w,c
  5850  0034D6  6E04               	movwf	btemp+4,c
  5851  0034D8  6A05               	clrf	btemp+5,c
  5852  0034DA  A0D8               	btfss	status,0,c
  5853  0034DC  0605               	decf	btemp+5,f,c
  5854  0034DE  6A06               	clrf	btemp+6,c
  5855  0034E0  BE05               	btfsc	btemp+5,7,c
  5856  0034E2  0606               	decf	btemp+6,f,c
  5857  0034E4  5006               	movf	btemp+6,w,c
  5858  0034E6  6E07               	movwf	btemp+7,c
  5859  0034E8  0EEA               	movlw	low ?a_ModZgCW2
  5860  0034EA  6EE9               	movwf	fsr0l,c
  5861  0034EC  0E00               	movlw	high ?a_ModZgCW2
  5862  0034EE  6EEA               	movwf	fsr0h,c
  5863  0034F0  ECEF  F062         	call	aldiv_f
  5864                           ;rgl.c: 2091: m=m*(DtCW.AC_CW-DtCW.DAD_CW);
  5865  0034F4  C11F  FFE8         	movff	_DtCW+14,wreg
  5866  0034F8  C11D  F000         	movff	_DtCW+12,btemp
  5867  0034FC  5C00               	subwf	btemp,w,c
  5868  0034FE  6E04               	movwf	btemp+4,c
  5869  003500  6A05               	clrf	btemp+5,c
  5870  003502  A0D8               	btfss	status,0,c
  5871  003504  0605               	decf	btemp+5,f,c
  5872  003506  6A06               	clrf	btemp+6,c
  5873  003508  BE05               	btfsc	btemp+5,7,c
  5874  00350A  0606               	decf	btemp+6,f,c
  5875  00350C  5006               	movf	btemp+6,w,c
  5876  00350E  6E07               	movwf	btemp+7,c
  5877  003510  0EEA               	movlw	low ?a_ModZgCW2
  5878  003512  6EE9               	movwf	fsr0l,c
  5879  003514  0E00               	movlw	high ?a_ModZgCW2
  5880  003516  6EEA               	movwf	fsr0h,c
  5881  003518  ECDB  F062         	call	almul_f
  5882                           ;rgl.c: 2092: if(m<0) m=0;
  5883  00351C  0100               	movlb	__Lparam shr (0+8)
  5884  00351E  AFED               	btfss	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),7,b
  5885  003520  D004               	goto	l538
  5886  003522  6BEA               	clrf	?a_ModZgCW2^(__Lparam& (0+65280)),b
  5887  003524  6BEB               	clrf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),b
  5888  003526  6BEC               	clrf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  5889  003528  6BED               	clrf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  5890  00352A                     l538:
  5891                           ;rgl.c: 2093: m=m/10+PWM.MDMOD;
  5892  00352A  0E0A               	movlw	10
  5893  00352C  6E04               	movwf	btemp+4,c
  5894  00352E  6A05               	clrf	btemp+5,c
  5895  003530  6A06               	clrf	btemp+6,c
  5896  003532  6A07               	clrf	btemp+7,c
  5897  003534  C0EA  F000         	movff	?a_ModZgCW2,btemp
  5898  003538  C0EB  F001         	movff	?a_ModZgCW2+1,btemp+1
  5899  00353C  C0EC  F002         	movff	?a_ModZgCW2+2,btemp+2
  5900  003540  C0ED  F003         	movff	?a_ModZgCW2+3,btemp+3
  5901  003544  EC4F  F062         	call	aldiv
  5902  003548  C17E  FFE8         	movff	_PWM+9,wreg
  5903  00354C  2400               	addwf	btemp,w,c
  5904  00354E  0100               	movlb	__Lparam shr (0+8)
  5905  003550  6FEA               	movwf	?a_ModZgCW2^(__Lparam& (0+65280)),b
  5906  003552  0E00               	movlw	0
  5907  003554  2001               	addwfc	btemp+1,w,c
  5908  003556  6FEB               	movwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),b
  5909  003558  0E00               	movlw	0
  5910  00355A  2002               	addwfc	btemp+2,w,c
  5911  00355C  6FEC               	movwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),b
  5912  00355E  0E00               	movlw	0
  5913  003560  2003               	addwfc	btemp+3,w,c
  5914  003562  6FED               	movwf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),b
  5915                           ;rgl.c: 2094: if(m>0xff)
  5916  003564  51ED               	movf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),w
  5917  003566  0A80               	xorlw	128
  5918  003568  0F80               	addlw	128
  5919  00356A  E108               	bnz	u4225
  5920  00356C  0E00               	movlw	0
  5921  00356E  5DEC               	subwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),w
  5922  003570  E105               	bnz	u4225
  5923  003572  0E01               	movlw	1
  5924  003574  5DEB               	subwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),w
  5925  003576  E102               	bnz	u4225
  5926  003578  0E00               	movlw	0
  5927  00357A  5DEA               	subwf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  5928  00357C                     u4225:
  5929                           ;rgl.c: 2095: {
  5930  00357C  0101               	movlb	_rgl shr (0+8)
  5931  00357E  E304               	bnc	L24
  5932  003580  95C9               	bcf	_rgl& (0+255),2,b
  5933                           ;rgl.c: 2097: rgl.tmp_pwm=rgl.xmod;
  5934  003582  C1D1  F1D2         	movff	_rgl+8,_rgl+9
  5935                           ;rgl.c: 2098: return;
  5936  003586  0012               	return	
  5937                           ;rgl.c: 2099: }
  5938  003588                     L24:
  5939  003588  A5C9               	btfss	_rgl& (0+255),2,b
  5940  00358A  D01C               	goto	l540
  5941  00358C  C1D1  F000         	movff	_rgl+8,btemp
  5942  003590  6A01               	clrf	btemp+1,c
  5943  003592  6A02               	clrf	btemp+2,c
  5944  003594  6A03               	clrf	btemp+3,c
  5945  003596  0100               	movlb	__Lparam shr (0+8)
  5946  003598  51ED               	movf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),w
  5947  00359A  0A80               	xorlw	128
  5948  00359C  6E04               	movwf	btemp+4,c
  5949  00359E  5003               	movf	btemp+3,w,c
  5950  0035A0  0A80               	xorlw	128
  5951  0035A2  5C04               	subwf	btemp+4,w,c
  5952  0035A4  E108               	bnz	u4245
  5953  0035A6  5002               	movf	btemp+2,w,c
  5954  0035A8  5DEC               	subwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),w
  5955  0035AA  E105               	bnz	u4245
  5956  0035AC  5001               	movf	btemp+1,w,c
  5957  0035AE  5DEB               	subwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),w
  5958  0035B0  E102               	bnz	u4245
  5959  0035B2  5000               	movf	btemp,w,c
  5960  0035B4  5DEA               	subwf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  5961  0035B6                     u4245:
  5962  0035B6  E206               	bc	l540
  5963                           ;rgl.c: 2101: rgl.srp=(rgl.xmod-m);
  5964  0035B8  0100               	movlb	__Lparam shr (0+8)
  5965  0035BA  51EA               	movf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  5966  0035BC  0101               	movlb	(_rgl+8) shr (0+8)
  5967  0035BE  5DD1               	subwf	(_rgl+8)& (0+255),w,b
  5968  0035C0  CFE8 F1D0          	movff	wreg,_rgl+7
  5969  0035C4                     l540:
  5970                           ;rgl.c: 2102: m+=rgl.srp;
  5971  0035C4  C1D0  FFE8         	movff	_rgl+7,wreg
  5972  0035C8  0100               	movlb	__Lparam shr (0+8)
  5973  0035CA  27EA               	addwf	?a_ModZgCW2^(__Lparam& (0+65280)),f,b
  5974  0035CC  0E01               	movlw	1
  5975  0035CE  B0D8               	btfsc	status,0,c
  5976  0035D0  27EB               	addwf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),f,b
  5977  0035D2  B0D8               	btfsc	status,0,c
  5978  0035D4  27EC               	addwf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),f,b
  5979  0035D6  B0D8               	btfsc	status,0,c
  5980  0035D8  27ED               	addwf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),f,b
  5981                           ;rgl.c: 2103: if(m>rgl.xmod) p=rgl.xmod;
  5982  0035DA  C1D1  F000         	movff	_rgl+8,btemp
  5983  0035DE  6A01               	clrf	btemp+1,c
  5984  0035E0  6A02               	clrf	btemp+2,c
  5985  0035E2  6A03               	clrf	btemp+3,c
  5986  0035E4  5003               	movf	btemp+3,w,c
  5987  0035E6  0A80               	xorlw	128
  5988  0035E8  6E04               	movwf	btemp+4,c
  5989  0035EA  51ED               	movf	(?a_ModZgCW2+3)^(__Lparam& (0+65280)),w
  5990  0035EC  0A80               	xorlw	128
  5991  0035EE  5C04               	subwf	btemp+4,w,c
  5992  0035F0  E108               	bnz	u4265
  5993  0035F2  51EC               	movf	(?a_ModZgCW2+2)^(__Lparam& (0+65280)),w
  5994  0035F4  5C02               	subwf	btemp+2,w,c
  5995  0035F6  E105               	bnz	u4265
  5996  0035F8  51EB               	movf	(?a_ModZgCW2+1)^(__Lparam& (0+65280)),w
  5997  0035FA  5C01               	subwf	btemp+1,w,c
  5998  0035FC  E102               	bnz	u4265
  5999  0035FE  51EA               	movf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  6000  003600  5C00               	subwf	btemp,w,c
  6001  003602                     u4265:
  6002  003602  E203               	bc	l541
  6003  003604  C1D1  FFD9         	movff	_rgl+8,fsr2l
  6004  003608  D003               	goto	l542
  6005  00360A                     l541:
  6006                           ;rgl.c: 2104: else p=m;
  6007  00360A  0100               	movlb	__Lparam shr (0+8)
  6008  00360C  51EA               	movf	?a_ModZgCW2^(__Lparam& (0+65280)),w
  6009  00360E  6ED9               	movwf	fsr2l,c
  6010  003610                     l542:
  6011                           ;rgl.c: 2105: rgl.fz=0;
  6012  003610  0101               	movlb	_rgl shr (0+8)
  6013  003612  95C9               	bcf	_rgl& (0+255),2,b
  6014                           ;rgl.c: 2106: rgl.tmp_pwm=p;
  6015  003614  CFD9 F1D2          	movff	fsr2l,_rgl+9
  6016                           ;rgl.c: 2107: }
  6017  003618  0012               	return	
  6018  00361A                     __end_of_ModZgCW2:
  6019                           ;rgl.c: 2110: void ModDkCW2(void)
  6020                           ;rgl.c: 2111: {
  6021  00361A                     _ModDkCW2:
  6022  000000                     
  6023                           ;rgl.c: 2112: signed long m;
  6024  00361A  0101               	movlb	_rgl shr (0+8)
  6025  00361C  A5C9               	btfss	_rgl& (0+255),2,b
  6026  00361E  0012               	return	
  6027                           ;rgl.c: 2117: ada=DtCW.AC_CW-DtCW.DAD_CW;
  6028  003620  C11F  FFE8         	movff	_DtCW+14,wreg
  6029  003624  0101               	movlb	(_DtCW+12) shr (0+8)
  6030  003626  5D1D               	subwf	(_DtCW+12)& (0+255),w,b
  6031  003628  6ED9               	movwf	fsr2l,c
  6032                           ;rgl.c: 2118: k=9;
  6033  00362A  0E09               	movlw	9
  6034  00362C  6EE1               	movwf	fsr1l,c
  6035                           ;rgl.c: 2119: if(ada<0) k=8;
  6036  00362E  AED9               	btfss	fsr2l,7,c
  6037  003630  D002               	goto	l545
  6038  003632  0E08               	movlw	8
  6039  003634  6EE1               	movwf	fsr1l,c
  6040  003636                     l545:
  6041                           ;rgl.c: 2120: m=rgl.srp+k*ada;
  6042  003636  CFD9 F002          	movff	fsr2l,btemp+2
  6043  00363A  6A03               	clrf	btemp+3,c
  6044  00363C  BE02               	btfsc	btemp+2,7,c
  6045  00363E  0603               	decf	btemp+3,f,c
  6046  003640  CFE1 F000          	movff	fsr1l,btemp
  6047  003644  6A01               	clrf	btemp+1,c
  6048  003646  ECBF  F062         	call	awmul
  6049  00364A  C1D0  FFE8         	movff	_rgl+7,wreg
  6050  00364E  2404               	addwf	btemp+4,w,c
  6051  003650  6E00               	movwf	btemp,c
  6052  003652  0E00               	movlw	0
  6053  003654  2005               	addwfc	btemp+5,w,c
  6054  003656  6E01               	movwf	btemp+1,c
  6055  003658  0100               	movlb	__Lparam shr (0+8)
  6056  00365A  C000  F0EA         	movff	btemp,?a_ModDkCW2
  6057  00365E  C001  F0EB         	movff	btemp+1,?a_ModDkCW2+1
  6058  003662  0E00               	movlw	0
  6059  003664  BFEB               	btfsc	(?a_ModDkCW2+1)^(__Lparam& (0+65280)),7,b
  6060  003666  0EFF               	movlw	-1
  6061  003668  6FEC               	movwf	(?a_ModDkCW2+2)^(__Lparam& (0+65280)),b
  6062  00366A  6FED               	movwf	(?a_ModDkCW2+3)^(__Lparam& (0+65280)),b
  6063                           ;rgl.c: 2121: if(m>rgl.xmod) p=rgl.xmod;
  6064  00366C  C1D1  F000         	movff	_rgl+8,btemp
  6065  003670  6A01               	clrf	btemp+1,c
  6066  003672  6A02               	clrf	btemp+2,c
  6067  003674  6A03               	clrf	btemp+3,c
  6068  003676  5003               	movf	btemp+3,w,c
  6069  003678  0A80               	xorlw	128
  6070  00367A  6E04               	movwf	btemp+4,c
  6071  00367C  51ED               	movf	(?a_ModDkCW2+3)^(__Lparam& (0+65280)),w
  6072  00367E  0A80               	xorlw	128
  6073  003680  5C04               	subwf	btemp+4,w,c
  6074  003682  E108               	bnz	u4295
  6075  003684  51EC               	movf	(?a_ModDkCW2+2)^(__Lparam& (0+65280)),w
  6076  003686  5C02               	subwf	btemp+2,w,c
  6077  003688  E105               	bnz	u4295
  6078  00368A  51EB               	movf	(?a_ModDkCW2+1)^(__Lparam& (0+65280)),w
  6079  00368C  5C01               	subwf	btemp+1,w,c
  6080  00368E  E102               	bnz	u4295
  6081  003690  51EA               	movf	?a_ModDkCW2^(__Lparam& (0+65280)),w
  6082  003692  5C00               	subwf	btemp,w,c
  6083  003694                     u4295:
  6084  003694  E203               	bc	l546
  6085  003696  C1D1  FFD9         	movff	_rgl+8,fsr2l
  6086  00369A  D01C               	goto	l547
  6087  00369C                     l546:
  6088                           ;rgl.c: 2122: else
  6089  00369C  C17E  F000         	movff	_PWM+9,btemp
  6090  0036A0  6A01               	clrf	btemp+1,c
  6091  0036A2  6A02               	clrf	btemp+2,c
  6092  0036A4  6A03               	clrf	btemp+3,c
  6093  0036A6  0100               	movlb	__Lparam shr (0+8)
  6094  0036A8  51ED               	movf	(?a_ModDkCW2+3)^(__Lparam& (0+65280)),w
  6095  0036AA  0A80               	xorlw	128
  6096  0036AC  6E04               	movwf	btemp+4,c
  6097  0036AE  5003               	movf	btemp+3,w,c
  6098  0036B0  0A80               	xorlw	128
  6099  0036B2  5C04               	subwf	btemp+4,w,c
  6100  0036B4  E108               	bnz	u4305
  6101  0036B6  5002               	movf	btemp+2,w,c
  6102  0036B8  5DEC               	subwf	(?a_ModDkCW2+2)^(__Lparam& (0+65280)),w
  6103  0036BA  E105               	bnz	u4305
  6104  0036BC  5001               	movf	btemp+1,w,c
  6105  0036BE  5DEB               	subwf	(?a_ModDkCW2+1)^(__Lparam& (0+65280)),w
  6106  0036C0  E102               	bnz	u4305
  6107  0036C2  5000               	movf	btemp,w,c
  6108  0036C4  5DEA               	subwf	?a_ModDkCW2^(__Lparam& (0+65280)),w
  6109  0036C6                     u4305:
  6110  0036C6  E203               	bc	l548
  6111  0036C8  C17E  FFD9         	movff	_PWM+9,fsr2l
  6112  0036CC  D003               	goto	l547
  6113  0036CE                     l548:
  6114                           ;rgl.c: 2124: else p=m;
  6115  0036CE  0100               	movlb	__Lparam shr (0+8)
  6116  0036D0  51EA               	movf	?a_ModDkCW2^(__Lparam& (0+65280)),w
  6117  0036D2  6ED9               	movwf	fsr2l,c
  6118  0036D4                     l547:
  6119                           ;rgl.c: 2125: rgl.tmp_pwm=p;
  6120  0036D4  CFD9 F1D2          	movff	fsr2l,_rgl+9
  6121                           ;rgl.c: 2126: }
  6122  0036D8  0012               	return	
  6123  0036DA                     __end_of_ModDkCW2:
  6124                           ;rgl.c: 2131: void ModPruCW2(void)
  6125                           ;rgl.c: 2132: {
  6126  0036DA                     _ModPruCW2:
  6127  000000                     
  6128                           ;rgl.c: 2133: static unsigned char l,m,o,p,q,r,s
      +                          ;
  6129  0036DA  0101               	movlb	_rgl shr (0+8)
  6130  0036DC  B5C9               	btfsc	_rgl& (0+255),2,b
  6131  0036DE  D0AF               	goto	l551
  6132                           ;rgl.c: 2137: {
  6133  0036E0  010E               	movlb	F1781 shr (0+8)
  6134  0036E2  6BEC               	clrf	F1781& (0+255),b
  6135                           ;rgl.c: 2139: m=0;
  6136  0036E4  010E               	movlb	F1782 shr (0+8)
  6137  0036E6  6BED               	clrf	F1782& (0+255),b
  6138                           ;rgl.c: 2140: o=0;
  6139  0036E8  010E               	movlb	F1783 shr (0+8)
  6140  0036EA  6BEE               	clrf	F1783& (0+255),b
  6141                           ;rgl.c: 2141: p=0;
  6142  0036EC  010E               	movlb	F1784 shr (0+8)
  6143  0036EE  6BEF               	clrf	F1784& (0+255),b
  6144                           ;rgl.c: 2142: if(q<255) q++;
  6145  0036F0  CEF0  F000         	movff	F1785,btemp
  6146  0036F4  2800               	incf	btemp,w,c
  6147  0036F6  E002               	bz	l552
  6148  0036F8  010E               	movlb	F1785 shr (0+8)
  6149  0036FA  2BF0               	incf	F1785& (0+255),f,b
  6150  0036FC                     l552:
  6151                           ;rgl.c: 2143: if(s<255) s++;
  6152  0036FC  CEF2  F000         	movff	F1787,btemp
  6153  003700  2800               	incf	btemp,w,c
  6154  003702  E002               	bz	l553
  6155  003704  010E               	movlb	F1787 shr (0+8)
  6156  003706  2BF2               	incf	F1787& (0+255),f,b
  6157  003708                     l553:
  6158                           ;rgl.c: 2144: if(DtCW._newPCW) s=0;
  6159  003708  0101               	movlb	(_DtCW+1) shr (0+8)
  6160  00370A  A112               	btfss	(_DtCW+1)& (0+255),0,b
  6161  00370C  D002               	goto	l554
  6162  00370E  010E               	movlb	F1787 shr (0+8)
  6163  003710  6BF2               	clrf	F1787& (0+255),b
  6164  003712                     l554:
  6165                           ;rgl.c: 2145: if(Tnizsza(0))
  6166  003712  0E00               	movlw	0
  6167  003714  DAEE               	call	_Tnizsza
  6168  003716  A0D8               	btfss	status,0,c
  6169  003718  0012               	return	
  6170                           ;rgl.c: 2146: {
  6171  00371A  0E0A               	movlw	10
  6172  00371C  DAEA               	call	_Tnizsza
  6173  00371E  B0D8               	btfsc	status,0,c
  6174  003720  0012               	return	
  6175                           ;rgl.c: 2148: {
  6176  003722  0100               	movlb	__Lparam shr (0+8)
  6177  003724  6BEA               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6178                           ;rgl.c: 2150: if((Trosnie(1)||TFrosnie(1))&&s>=1
      +                          )
  6179  003726  0E01               	movlw	1
  6180  003728  DAB5               	call	_Trosnie
  6181  00372A  E203               	bc	u4390
  6182  00372C  0E01               	movlw	1
  6183  00372E  DB10               	call	_TFrosnie
  6184  003730  E310               	bnc	l557
  6185  003732                     u4390:
  6186  003732  0E00               	movlw	0
  6187  003734  010E               	movlb	F1787 shr (0+8)
  6188  003736  65F2               	cpfsgt	F1787& (0+255),b
  6189  003738  D00C               	goto	l557
  6190                           ;rgl.c: 2151: {
  6191  00373A  6BF2               	clrf	F1787& (0+255),b
  6192                           ;rgl.c: 2153: k=10;
  6193  00373C  0E0A               	movlw	10
  6194  00373E  0100               	movlb	__Lparam shr (0+8)
  6195  003740  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6196                           ;rgl.c: 2154: if(Trosnie(2)||TFrosnie(2)) k=8;
  6197  003742  0E02               	movlw	2
  6198  003744  DAA7               	call	_Trosnie
  6199  003746  E203               	bc	u4440
  6200  003748  0E02               	movlw	2
  6201  00374A  DB02               	call	_TFrosnie
  6202  00374C  E31E               	bnc	l559
  6203  00374E                     u4440:
  6204  00374E  0E08               	movlw	8
  6205  003750  D009               	goto	L5
  6206                           ;rgl.c: 2155: }
  6207  003752                     l557:
  6208                           ;rgl.c: 2156: else
  6209  003752  0E00               	movlw	0
  6210  003754  DB0A               	call	_TFmaleje
  6211  003756  E309               	bnc	l560
  6212  003758  0E00               	movlw	0
  6213  00375A  010E               	movlb	F1785 shr (0+8)
  6214  00375C  65F0               	cpfsgt	F1785& (0+255),b
  6215  00375E  D005               	goto	l560
  6216                           ;rgl.c: 2158: {
  6217  003760  6BF0               	clrf	F1785& (0+255),b
  6218                           ;rgl.c: 2160: k=6;
  6219  003762  0E06               	movlw	6
  6220  003764                     L5:
  6221  003764  0100               	movlb	__Lparam shr (0+8)
  6222  003766  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6223                           ;rgl.c: 2161: }else
  6224  003768  D010               	goto	l559
  6225  00376A                     l560:
  6226                           ;rgl.c: 2162: if(TFstoi())
  6227  00376A  DB1A               	call	_TFstoi	;wreg free
  6228  00376C  E30E               	bnc	l559
  6229                           ;rgl.c: 2163: {
  6230  00376E  0E00               	movlw	0
  6231  003770  010E               	movlb	F1786 shr (0+8)
  6232  003772  65F1               	cpfsgt	F1786& (0+255),b
  6233  003774  D006               	goto	l563
  6234                           ;rgl.c: 2165: {
  6235  003776  0E06               	movlw	6
  6236  003778  0100               	movlb	__Lparam shr (0+8)
  6237  00377A  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6238                           ;rgl.c: 2167: r=0;
  6239  00377C  010E               	movlb	F1786 shr (0+8)
  6240  00377E  6BF1               	clrf	F1786& (0+255),b
  6241                           ;rgl.c: 2168: }
  6242  003780  D004               	goto	l559
  6243  003782                     l563:
  6244                           ;rgl.c: 2169: else
  6245  003782  0100               	movlb	__Lparam shr (0+8)
  6246  003784  6BEA               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6247                           ;rgl.c: 2172: r++;
  6248  003786  010E               	movlb	F1786 shr (0+8)
  6249  003788  2BF1               	incf	F1786& (0+255),f,b
  6250  00378A                     l559:
  6251                           ;rgl.c: 2173: }
  6252  00378A  0101               	movlb	(_rgl+6) shr (0+8)
  6253  00378C  6BCF               	clrf	(_rgl+6)& (0+255),b
  6254                           ;rgl.c: 2176: if(PWM.BufPWM>rgl.xmod) return;
  6255  00378E  C176  FFE8         	movff	_PWM+1,wreg
  6256  003792  61D1               	cpfslt	(_rgl+8)& (0+255),b
  6257  003794  D001               	goto	l565
  6258  003796  0012               	return	
  6259  003798                     l565:
  6260                           ;rgl.c: 2177: tmp=rgl.xmod-PWM.BufPWM;
  6261  003798  C176  FFE8         	movff	_PWM+1,wreg
  6262  00379C  0101               	movlb	(_rgl+8) shr (0+8)
  6263  00379E  5DD1               	subwf	(_rgl+8)& (0+255),w,b
  6264  0037A0  6ED9               	movwf	fsr2l,c
  6265                           ;rgl.c: 2178: if(k>tmp) k=tmp;
  6266  0037A2  50D9               	movf	fsr2l,w,c
  6267  0037A4  0100               	movlb	__Lparam shr (0+8)
  6268  0037A6  94D8               	bcf	status,2,c
  6269  0037A8  90D8               	bcf	status,0,c
  6270  0037AA  AFEA               	btfss	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  6271  0037AC  5DEA               	subwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6272  0037AE  B4D8               	btfsc	status,2,c
  6273  0037B0  90D8               	bcf	status,0,c
  6274  0037B2  E302               	bnc	l566
  6275  0037B4  50D9               	movf	fsr2l,w,c
  6276  0037B6  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6277  0037B8                     l566:
  6278                           ;rgl.c: 2181: if(PWM.MMAXCW>PWM.MGMOD)
  6279  0037B8  C195  FFE8         	movff	_PWM+32,wreg
  6280  0037BC  0101               	movlb	(_PWM+12) shr (0+8)
  6281  0037BE  6181               	cpfslt	(_PWM+12)& (0+255),b
  6282  0037C0  D01F               	goto	l567
  6283                           ;rgl.c: 2182: {
  6284  0037C2  C1D0  FFE8         	movff	_rgl+7,wreg
  6285  0037C6  0100               	movlb	__Lparam shr (0+8)
  6286  0037C8  25EA               	addwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6287  0037CA  6E02               	movwf	btemp+2,c
  6288  0037CC  6A03               	clrf	btemp+3,c
  6289  0037CE  B0D8               	btfsc	status,0,c
  6290  0037D0  2A03               	incf	btemp+3,f,c
  6291  0037D2  BFEA               	btfsc	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  6292  0037D4  0603               	decf	btemp+3,f,c
  6293  0037D6  C181  F000         	movff	_PWM+12,btemp
  6294  0037DA  6A01               	clrf	btemp+1,c
  6295  0037DC  5001               	movf	btemp+1,w,c
  6296  0037DE  0A80               	xorlw	128
  6297  0037E0  6E04               	movwf	btemp+4,c
  6298  0037E2  5003               	movf	btemp+3,w,c
  6299  0037E4  0A80               	xorlw	128
  6300  0037E6  5C04               	subwf	btemp+4,w,c
  6301  0037E8  E102               	bnz	u4535
  6302  0037EA  5002               	movf	btemp+2,w,c
  6303  0037EC  5C00               	subwf	btemp,w,c
  6304  0037EE                     u4535:
  6305  0037EE  E203               	bc	l568
  6306  0037F0  C181  F1D0         	movff	_PWM+12,_rgl+7
  6307  0037F4  0012               	return	
  6308  0037F6                     l568:
  6309                           ;rgl.c: 2184: else rgl.srp+=k;
  6310  0037F6  0100               	movlb	__Lparam shr (0+8)
  6311  0037F8  51EA               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6312  0037FA  0101               	movlb	(_rgl+7) shr (0+8)
  6313  0037FC  27D0               	addwf	(_rgl+7)& (0+255),f,b
  6314                           ;rgl.c: 2185: }
  6315  0037FE  0012               	return	
  6316  003800                     l567:
  6317                           ;rgl.c: 2186: else
  6318  003800  C1D0  FFE8         	movff	_rgl+7,wreg
  6319  003804  0100               	movlb	__Lparam shr (0+8)
  6320  003806  25EA               	addwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6321  003808  6E02               	movwf	btemp+2,c
  6322  00380A  6A03               	clrf	btemp+3,c
  6323  00380C  B0D8               	btfsc	status,0,c
  6324  00380E  2A03               	incf	btemp+3,f,c
  6325  003810  BFEA               	btfsc	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  6326  003812  0603               	decf	btemp+3,f,c
  6327  003814  C195  F000         	movff	_PWM+32,btemp
  6328  003818  6A01               	clrf	btemp+1,c
  6329  00381A  5001               	movf	btemp+1,w,c
  6330  00381C  0A80               	xorlw	128
  6331  00381E  6E04               	movwf	btemp+4,c
  6332  003820  5003               	movf	btemp+3,w,c
  6333  003822  0A80               	xorlw	128
  6334  003824  5C04               	subwf	btemp+4,w,c
  6335  003826  E102               	bnz	u4545
  6336  003828  5002               	movf	btemp+2,w,c
  6337  00382A  5C00               	subwf	btemp,w,c
  6338  00382C                     u4545:
  6339  00382C  E203               	bc	l571
  6340  00382E  C195  F1D0         	movff	_PWM+32,_rgl+7
  6341  003832  0012               	return	
  6342  003834                     l571:
  6343                           ;rgl.c: 2189: else rgl.srp+=k;
  6344  003834  0100               	movlb	__Lparam shr (0+8)
  6345  003836  51EA               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6346  003838  0101               	movlb	(_rgl+7) shr (0+8)
  6347  00383A  27D0               	addwf	(_rgl+7)& (0+255),f,b
  6348                           ;rgl.c: 2190: }
  6349  00383C  0012               	return	
  6350                           ;rgl.c: 2193: else return;
  6351                           ;rgl.c: 2195: else return;
  6352  00383E                     l551:
  6353                           ;rgl.c: 2197: else
  6354  00383E  010E               	movlb	F1785 shr (0+8)
  6355  003840  6BF0               	clrf	F1785& (0+255),b
  6356                           ;rgl.c: 2200: r=0;
  6357  003842  010E               	movlb	F1786 shr (0+8)
  6358  003844  6BF1               	clrf	F1786& (0+255),b
  6359                           ;rgl.c: 2201: s=0;
  6360  003846  010E               	movlb	F1787 shr (0+8)
  6361  003848  6BF2               	clrf	F1787& (0+255),b
  6362                           ;rgl.c: 2202: if(m<255) m++;
  6363  00384A  CEED  F000         	movff	F1782,btemp
  6364  00384E  2800               	incf	btemp,w,c
  6365  003850  E002               	bz	l576
  6366  003852  010E               	movlb	F1782 shr (0+8)
  6367  003854  2BED               	incf	F1782& (0+255),f,b
  6368  003856                     l576:
  6369                           ;rgl.c: 2203: if(p<255) p++;
  6370  003856  CEEF  F000         	movff	F1784,btemp
  6371  00385A  2800               	incf	btemp,w,c
  6372  00385C  E002               	bz	l577
  6373  00385E  010E               	movlb	F1784 shr (0+8)
  6374  003860  2BEF               	incf	F1784& (0+255),f,b
  6375  003862                     l577:
  6376                           ;rgl.c: 2204: if(o<255) o++;
  6377  003862  CEEE  F000         	movff	F1783,btemp
  6378  003866  2800               	incf	btemp,w,c
  6379  003868  E002               	bz	l578
  6380  00386A  010E               	movlb	F1783 shr (0+8)
  6381  00386C  2BEE               	incf	F1783& (0+255),f,b
  6382  00386E                     l578:
  6383                           ;rgl.c: 2205: if(DtCW.DAD_CW>DtCW.AC_CW)
  6384  00386E  C11F  FFE8         	movff	_DtCW+14,wreg
  6385  003872  0101               	movlb	(_DtCW+12) shr (0+8)
  6386  003874  611D               	cpfslt	(_DtCW+12)& (0+255),b
  6387  003876  D087               	goto	l579
  6388                           ;rgl.c: 2206: {
  6389  003878  0100               	movlb	__Lparam shr (0+8)
  6390  00387A  6BEA               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6391                           ;rgl.c: 2208: if(TFmaleje(0)&&!Twyzsza(0)&&p>=2)
  6392  00387C  0E00               	movlw	0
  6393  00387E  DA75               	call	_TFmaleje
  6394  003880  0E00               	movlw	0
  6395  003882  E311               	bnc	L25
  6396  003884  DA43               	call	_Twyzsza
  6397  003886  E20E               	bc	l580
  6398  003888  0E01               	movlw	1
  6399  00388A  010E               	movlb	F1784 shr (0+8)
  6400  00388C  65EF               	cpfsgt	F1784& (0+255),b
  6401  00388E  D00A               	goto	l580
  6402                           ;rgl.c: 2209: {
  6403  003890  6BEF               	clrf	F1784& (0+255),b
  6404                           ;rgl.c: 2211: o=0;
  6405  003892  010E               	movlb	F1783 shr (0+8)
  6406  003894  6BEE               	clrf	F1783& (0+255),b
  6407                           ;rgl.c: 2212: l=0;
  6408  003896  010E               	movlb	F1781 shr (0+8)
  6409  003898  6BEC               	clrf	F1781& (0+255),b
  6410                           ;rgl.c: 2213: m=0;
  6411  00389A  010E               	movlb	F1782 shr (0+8)
  6412  00389C  6BED               	clrf	F1782& (0+255),b
  6413                           ;rgl.c: 2214: k=-1;
  6414  00389E  0100               	movlb	__Lparam shr (0+8)
  6415  0038A0  69EA               	setf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6416                           ;rgl.c: 2215: }
  6417  0038A2  D043               	goto	l581
  6418  0038A4                     l580:
  6419                           ;rgl.c: 2216: else
  6420  0038A4  0E00               	movlw	0
  6421  0038A6                     L25:
  6422  0038A6  DA54               	call	_TFrosnie
  6423  0038A8  E312               	bnc	l582
  6424  0038AA  0E01               	movlw	1
  6425  0038AC  010E               	movlb	F1783 shr (0+8)
  6426  0038AE  65EE               	cpfsgt	F1783& (0+255),b
  6427  0038B0  D00E               	goto	l582
  6428                           ;rgl.c: 2218: {
  6429  0038B2  6BEE               	clrf	F1783& (0+255),b
  6430                           ;rgl.c: 2220: p=0;
  6431  0038B4  010E               	movlb	F1784 shr (0+8)
  6432  0038B6  6BEF               	clrf	F1784& (0+255),b
  6433                           ;rgl.c: 2221: l=0;
  6434  0038B8  010E               	movlb	F1781 shr (0+8)
  6435  0038BA  6BEC               	clrf	F1781& (0+255),b
  6436                           ;rgl.c: 2222: m=0;
  6437  0038BC  010E               	movlb	F1782 shr (0+8)
  6438  0038BE  6BED               	clrf	F1782& (0+255),b
  6439                           ;rgl.c: 2223: k=2;
  6440  0038C0  0E02               	movlw	2
  6441  0038C2  0100               	movlb	__Lparam shr (0+8)
  6442  0038C4  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6443                           ;rgl.c: 2224: if(Trowna()) k=1;
  6444  0038C6  DA3D               	call	_Trowna	;wreg free
  6445  0038C8  E330               	bnc	l581
  6446  0038CA  0E01               	movlw	1
  6447  0038CC  D010               	goto	L6
  6448                           ;rgl.c: 2225: }
  6449  0038CE                     l582:
  6450                           ;rgl.c: 2226: else
  6451  0038CE  0E00               	movlw	0
  6452  0038D0  D9E1               	call	_Trosnie
  6453  0038D2  E310               	bnc	l585
  6454  0038D4  0E01               	movlw	1
  6455  0038D6  010E               	movlb	F1782 shr (0+8)
  6456  0038D8  65ED               	cpfsgt	F1782& (0+255),b
  6457  0038DA  D00C               	goto	l585
  6458                           ;rgl.c: 2228: {
  6459  0038DC  010E               	movlb	F1784 shr (0+8)
  6460  0038DE  6BEF               	clrf	F1784& (0+255),b
  6461                           ;rgl.c: 2230: o=0;
  6462  0038E0  010E               	movlb	F1783 shr (0+8)
  6463  0038E2  6BEE               	clrf	F1783& (0+255),b
  6464                           ;rgl.c: 2231: l=0;
  6465  0038E4  010E               	movlb	F1781 shr (0+8)
  6466  0038E6  6BEC               	clrf	F1781& (0+255),b
  6467                           ;rgl.c: 2232: m=0;
  6468  0038E8  010E               	movlb	F1782 shr (0+8)
  6469  0038EA  6BED               	clrf	F1782& (0+255),b
  6470                           ;rgl.c: 2233: k=3;
  6471  0038EC  0E03               	movlw	3
  6472  0038EE                     L6:
  6473  0038EE  0100               	movlb	__Lparam shr (0+8)
  6474  0038F0  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6475                           ;rgl.c: 2234: }
  6476  0038F2  D01B               	goto	l581
  6477  0038F4                     l585:
  6478                           ;rgl.c: 2235: else
  6479  0038F4  0E01               	movlw	1
  6480  0038F6  DA0A               	call	_Twyzsza
  6481  0038F8  E316               	bnc	l587
  6482                           ;rgl.c: 2237: {
  6483  0038FA  D9F4               	call	_Tstoi	;wreg free
  6484  0038FC  E316               	bnc	l581
  6485  0038FE  DA50               	call	_TFstoi	;wreg free
  6486  003900  E314               	bnc	l581
  6487                           ;rgl.c: 2239: {
  6488  003902  0E01               	movlw	1
  6489  003904  010E               	movlb	F1781 shr (0+8)
  6490  003906  65EC               	cpfsgt	F1781& (0+255),b
  6491  003908  D009               	goto	l589
  6492                           ;rgl.c: 2241: {
  6493  00390A  0100               	movlb	__Lparam shr (0+8)
  6494  00390C  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6495                           ;rgl.c: 2243: if(Twyzsza(3)) k=2;
  6496  00390E  0E03               	movlw	3
  6497  003910  D9FD               	call	_Twyzsza
  6498  003912  E309               	bnc	l587
  6499  003914  0E02               	movlw	2
  6500  003916  0100               	movlb	__Lparam shr (0+8)
  6501  003918  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6502  00391A  D005               	goto	l587
  6503                           ;rgl.c: 2244: l=0;
  6504                           ;rgl.c: 2245: }
  6505  00391C                     l589:
  6506                           ;rgl.c: 2246: else
  6507  00391C  0100               	movlb	__Lparam shr (0+8)
  6508  00391E  6BEA               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6509                           ;rgl.c: 2249: l++;
  6510  003920  010E               	movlb	F1781 shr (0+8)
  6511  003922  2BEC               	incf	F1781& (0+255),f,b
  6512                           ;rgl.c: 2250: }
  6513  003924  D002               	goto	l581
  6514  003926                     l587:
  6515  003926  010E               	movlb	F1781 shr (0+8)
  6516  003928  6BEC               	clrf	F1781& (0+255),b
  6517  00392A                     l581:
  6518                           ;rgl.c: 2253: if(rgl.srp-k<PWM.MDMOD) rgl.srp=PW
      +                          M.MDMOD;
  6519  00392A  C17E  F000         	movff	_PWM+9,btemp
  6520  00392E  6A01               	clrf	btemp+1,c
  6521  003930  C1D0  F002         	movff	_rgl+7,btemp+2
  6522  003934  0100               	movlb	__Lparam shr (0+8)
  6523  003936  51EA               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6524  003938  5C02               	subwf	btemp+2,w,c
  6525  00393A  6EF6               	movwf	tblptrl,c
  6526  00393C  6AF7               	clrf	tblptrh,c
  6527  00393E  B0D8               	btfsc	status,0,c
  6528  003940  2AF7               	incf	tblptrh,f,c
  6529  003942  AFEA               	btfss	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  6530  003944  06F7               	decf	tblptrh,f,c
  6531  003946  50F7               	movf	tblptrh,w,c
  6532  003948  0A80               	xorlw	128
  6533  00394A  6E02               	movwf	btemp+2,c
  6534  00394C  5001               	movf	btemp+1,w,c
  6535  00394E  0A80               	xorlw	128
  6536  003950  5C02               	subwf	btemp+2,w,c
  6537  003952  E102               	bnz	u4775
  6538  003954  5000               	movf	btemp,w,c
  6539  003956  5CF6               	subwf	tblptrl,w,c
  6540  003958                     u4775:
  6541  003958  E203               	bc	l593
  6542  00395A  C17E  F1D0         	movff	_PWM+9,_rgl+7
  6543  00395E  D004               	goto	l594
  6544  003960                     l593:
  6545                           ;rgl.c: 2254: else rgl.srp-=k;
  6546  003960  0100               	movlb	__Lparam shr (0+8)
  6547  003962  51EA               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6548  003964  0101               	movlb	(_rgl+7) shr (0+8)
  6549  003966  5FD0               	subwf	(_rgl+7)& (0+255),f,b
  6550  003968                     l594:
  6551                           ;rgl.c: 2255: if(rgl.srp>PWM.MMAXCW) rgl.srp=PWM
      +                          .MMAXCW;
  6552  003968  C1D0  FFE8         	movff	_rgl+7,wreg
  6553  00396C  0101               	movlb	(_PWM+32) shr (0+8)
  6554  00396E  6195               	cpfslt	(_PWM+32)& (0+255),b
  6555  003970  D002               	goto	l595
  6556  003972  C195  F1D0         	movff	_PWM+32,_rgl+7
  6557  003976                     l595:
  6558                           ;rgl.c: 2256: if(rgl.xmod<rgl.srp) rgl.xmod=rgl.
      +                          srp;
  6559  003976  C1D0  FFE8         	movff	_rgl+7,wreg
  6560  00397A  0101               	movlb	(_rgl+8) shr (0+8)
  6561  00397C  61D1               	cpfslt	(_rgl+8)& (0+255),b
  6562  00397E  0012               	return	
  6563  003980  C1D0  F1D1         	movff	_rgl+7,_rgl+8
  6564                           ;rgl.c: 2257: return;
  6565  003984  0012               	return	
  6566  003986                     l579:
  6567                           ;rgl.c: 2259: else
  6568  003986  0100               	movlb	__Lparam shr (0+8)
  6569  003988  6BEA               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6570                           ;rgl.c: 2262: if(TFrosnie(0)&&o>=2)
  6571  00398A  0E00               	movlw	0
  6572  00398C  D9E1               	call	_TFrosnie
  6573  00398E  E312               	bnc	l598
  6574  003990  0E01               	movlw	1
  6575  003992  010E               	movlb	F1783 shr (0+8)
  6576  003994  65EE               	cpfsgt	F1783& (0+255),b
  6577  003996  D00E               	goto	l598
  6578                           ;rgl.c: 2263: {
  6579  003998  6BEE               	clrf	F1783& (0+255),b
  6580                           ;rgl.c: 2265: p=0;
  6581  00399A  010E               	movlb	F1784 shr (0+8)
  6582  00399C  6BEF               	clrf	F1784& (0+255),b
  6583                           ;rgl.c: 2266: l=0;
  6584  00399E  010E               	movlb	F1781 shr (0+8)
  6585  0039A0  6BEC               	clrf	F1781& (0+255),b
  6586                           ;rgl.c: 2267: m=0;
  6587  0039A2  010E               	movlb	F1782 shr (0+8)
  6588  0039A4  6BED               	clrf	F1782& (0+255),b
  6589                           ;rgl.c: 2268: k=-3;
  6590  0039A6  0EFD               	movlw	253
  6591  0039A8  0100               	movlb	__Lparam shr (0+8)
  6592  0039AA  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6593                           ;rgl.c: 2269: if(Trowna()) k=-2;
  6594  0039AC  D9CA               	call	_Trowna	;wreg free
  6595  0039AE  E345               	bnc	l600
  6596  0039B0  0EFE               	movlw	254
  6597  0039B2  D02B               	goto	L8
  6598                           ;rgl.c: 2270: }
  6599  0039B4                     l598:
  6600                           ;rgl.c: 2271: else
  6601  0039B4  0E00               	movlw	0
  6602  0039B6  D9D9               	call	_TFmaleje
  6603  0039B8  E312               	bnc	l601
  6604  0039BA  0E01               	movlw	1
  6605  0039BC  010E               	movlb	F1784 shr (0+8)
  6606  0039BE  65EF               	cpfsgt	F1784& (0+255),b
  6607  0039C0  D00E               	goto	l601
  6608                           ;rgl.c: 2273: {
  6609  0039C2  6BEF               	clrf	F1784& (0+255),b
  6610                           ;rgl.c: 2275: o=0;
  6611  0039C4  010E               	movlb	F1783 shr (0+8)
  6612  0039C6  6BEE               	clrf	F1783& (0+255),b
  6613                           ;rgl.c: 2276: l=0;
  6614  0039C8  010E               	movlb	F1781 shr (0+8)
  6615  0039CA  6BEC               	clrf	F1781& (0+255),b
  6616                           ;rgl.c: 2277: m=0;
  6617  0039CC  010E               	movlb	F1782 shr (0+8)
  6618  0039CE  6BED               	clrf	F1782& (0+255),b
  6619                           ;rgl.c: 2278: k=2;
  6620  0039D0  0E02               	movlw	2
  6621  0039D2  0100               	movlb	__Lparam shr (0+8)
  6622  0039D4  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6623                           ;rgl.c: 2279: if(Trowna()) k=1;
  6624  0039D6  D9B5               	call	_Trowna	;wreg free
  6625  0039D8  E330               	bnc	l600
  6626  0039DA  0E01               	movlw	1
  6627  0039DC  D016               	goto	L8
  6628                           ;rgl.c: 2280: }
  6629  0039DE                     l601:
  6630                           ;rgl.c: 2281: else
  6631  0039DE  0E00               	movlw	0
  6632  0039E0  D966               	call	_Tmaleje
  6633  0039E2  E316               	bnc	l604
  6634  0039E4  0E01               	movlw	1
  6635  0039E6  010E               	movlb	F1782 shr (0+8)
  6636  0039E8  65ED               	cpfsgt	F1782& (0+255),b
  6637  0039EA  D012               	goto	l604
  6638                           ;rgl.c: 2283: {
  6639  0039EC  010E               	movlb	F1784 shr (0+8)
  6640  0039EE  6BEF               	clrf	F1784& (0+255),b
  6641                           ;rgl.c: 2285: o=0;
  6642  0039F0  010E               	movlb	F1783 shr (0+8)
  6643  0039F2  6BEE               	clrf	F1783& (0+255),b
  6644                           ;rgl.c: 2286: l=0;
  6645  0039F4  010E               	movlb	F1781 shr (0+8)
  6646  0039F6  6BEC               	clrf	F1781& (0+255),b
  6647                           ;rgl.c: 2287: m=0;
  6648  0039F8  010E               	movlb	F1782 shr (0+8)
  6649  0039FA  6BED               	clrf	F1782& (0+255),b
  6650                           ;rgl.c: 2288: k=2;
  6651  0039FC  0E02               	movlw	2
  6652  0039FE  0100               	movlb	__Lparam shr (0+8)
  6653  003A00  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6654                           ;rgl.c: 2289: if(Tnizsza(0)) k=3;
  6655  003A02  0E00               	movlw	0
  6656  003A04  D976               	call	_Tnizsza
  6657  003A06  E319               	bnc	l600
  6658  003A08  0E03               	movlw	3
  6659  003A0A                     L8:
  6660  003A0A  0100               	movlb	__Lparam shr (0+8)
  6661  003A0C  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6662                           ;rgl.c: 2290: }
  6663  003A0E  D015               	goto	l600
  6664  003A10                     l604:
  6665                           ;rgl.c: 2291: else
  6666  003A10  0E01               	movlw	1
  6667  003A12  D96F               	call	_Tnizsza
  6668  003A14  E310               	bnc	l607
  6669                           ;rgl.c: 2293: {
  6670  003A16  D966               	call	_Tstoi	;wreg free
  6671  003A18  E310               	bnc	l600
  6672  003A1A  D9C2               	call	_TFstoi	;wreg free
  6673  003A1C  E30E               	bnc	l600
  6674                           ;rgl.c: 2295: {
  6675  003A1E  0E02               	movlw	2
  6676  003A20  010E               	movlb	F1781 shr (0+8)
  6677  003A22  65EC               	cpfsgt	F1781& (0+255),b
  6678  003A24  D003               	goto	l609
  6679                           ;rgl.c: 2297: {
  6680  003A26  0100               	movlb	__Lparam shr (0+8)
  6681  003A28  6FEA               	movwf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6682  003A2A  D005               	goto	l607
  6683                           ;rgl.c: 2299: l=0;
  6684                           ;rgl.c: 2300: }
  6685  003A2C                     l609:
  6686                           ;rgl.c: 2301: else
  6687  003A2C  0100               	movlb	__Lparam shr (0+8)
  6688  003A2E  6BEA               	clrf	?a_ModPruCW2^(__Lparam& (0+65280)),b
  6689                           ;rgl.c: 2304: l++;
  6690  003A30  010E               	movlb	F1781 shr (0+8)
  6691  003A32  2BEC               	incf	F1781& (0+255),f,b
  6692                           ;rgl.c: 2305: }
  6693  003A34  D002               	goto	l600
  6694  003A36                     l607:
  6695  003A36  010E               	movlb	F1781 shr (0+8)
  6696  003A38  6BEC               	clrf	F1781& (0+255),b
  6697  003A3A                     l600:
  6698                           ;rgl.c: 2308: if(PWM.MMAXCW>PWM.MGMOD)
  6699  003A3A  C195  FFE8         	movff	_PWM+32,wreg
  6700  003A3E  0101               	movlb	(_PWM+12) shr (0+8)
  6701  003A40  6181               	cpfslt	(_PWM+12)& (0+255),b
  6702  003A42  D01A               	goto	l612
  6703                           ;rgl.c: 2309: {
  6704  003A44  C1D0  FFE8         	movff	_rgl+7,wreg
  6705  003A48  0100               	movlb	__Lparam shr (0+8)
  6706  003A4A  25EA               	addwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6707  003A4C  6E02               	movwf	btemp+2,c
  6708  003A4E  6A03               	clrf	btemp+3,c
  6709  003A50  B0D8               	btfsc	status,0,c
  6710  003A52  2A03               	incf	btemp+3,f,c
  6711  003A54  BFEA               	btfsc	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  6712  003A56  0603               	decf	btemp+3,f,c
  6713  003A58  C181  F000         	movff	_PWM+12,btemp
  6714  003A5C  6A01               	clrf	btemp+1,c
  6715  003A5E  5001               	movf	btemp+1,w,c
  6716  003A60  0A80               	xorlw	128
  6717  003A62  6E04               	movwf	btemp+4,c
  6718  003A64  5003               	movf	btemp+3,w,c
  6719  003A66  0A80               	xorlw	128
  6720  003A68  5C04               	subwf	btemp+4,w,c
  6721  003A6A  E102               	bnz	u4985
  6722  003A6C  5002               	movf	btemp+2,w,c
  6723  003A6E  5C00               	subwf	btemp,w,c
  6724  003A70                     u4985:
  6725  003A70  E21D               	bc	l616
  6726  003A72  C181  F1D0         	movff	_PWM+12,_rgl+7
  6727  003A76  D01E               	goto	l615
  6728                           ;rgl.c: 2311: else rgl.srp+=k;
  6729                           ;rgl.c: 2312: }
  6730  003A78                     l612:
  6731                           ;rgl.c: 2313: else
  6732  003A78  C1D0  FFE8         	movff	_rgl+7,wreg
  6733  003A7C  0100               	movlb	__Lparam shr (0+8)
  6734  003A7E  25EA               	addwf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6735  003A80  6E02               	movwf	btemp+2,c
  6736  003A82  6A03               	clrf	btemp+3,c
  6737  003A84  B0D8               	btfsc	status,0,c
  6738  003A86  2A03               	incf	btemp+3,f,c
  6739  003A88  BFEA               	btfsc	?a_ModPruCW2^(__Lparam& (0+65280)),7,b
  6740  003A8A  0603               	decf	btemp+3,f,c
  6741  003A8C  C195  F000         	movff	_PWM+32,btemp
  6742  003A90  6A01               	clrf	btemp+1,c
  6743  003A92  5001               	movf	btemp+1,w,c
  6744  003A94  0A80               	xorlw	128
  6745  003A96  6E04               	movwf	btemp+4,c
  6746  003A98  5003               	movf	btemp+3,w,c
  6747  003A9A  0A80               	xorlw	128
  6748  003A9C  5C04               	subwf	btemp+4,w,c
  6749  003A9E  E102               	bnz	u4995
  6750  003AA0  5002               	movf	btemp+2,w,c
  6751  003AA2  5C00               	subwf	btemp,w,c
  6752  003AA4                     u4995:
  6753  003AA4  E203               	bc	l616
  6754  003AA6  C195  F1D0         	movff	_PWM+32,_rgl+7
  6755  003AAA  D004               	goto	l615
  6756  003AAC                     l616:
  6757                           ;rgl.c: 2316: else rgl.srp+=k;
  6758  003AAC  0100               	movlb	__Lparam shr (0+8)
  6759  003AAE  51EA               	movf	?a_ModPruCW2^(__Lparam& (0+65280)),w
  6760  003AB0  0101               	movlb	(_rgl+7) shr (0+8)
  6761  003AB2  27D0               	addwf	(_rgl+7)& (0+255),f,b
  6762  003AB4                     l615:
  6763                           ;rgl.c: 2317: }
  6764  003AB4  C1D0  FFE8         	movff	_rgl+7,wreg
  6765  003AB8  0101               	movlb	(_rgl+8) shr (0+8)
  6766  003ABA  61D1               	cpfslt	(_rgl+8)& (0+255),b
  6767  003ABC  0012               	return	
  6768  003ABE  C1D0  F1D1         	movff	_rgl+7,_rgl+8
  6769                           ;rgl.c: 2319: return;
  6770  003AC2  0012               	return	
  6771                           ;rgl.c: 2320: }
  6772  003AC4                     __end_of_ModPruCW2:
  6773                           ;rgl.c: 2326: void IncMaxCW2(void)
  6774                           ;rgl.c: 2327: {
  6775  003AC4                     _IncMaxCW2:
  6776  000000                     
  6777                           ;rgl.c: 2328: unsigned char k;
  6778  003AC4  0101               	movlb	_rgl shr (0+8)
  6779  003AC6  A5C9               	btfss	_rgl& (0+255),2,b
  6780  003AC8  D014               	goto	l620
  6781                           ;rgl.c: 2332: {
  6782  003ACA  C195  FFE8         	movff	_PWM+32,wreg
  6783  003ACE  0101               	movlb	(_PWM+12) shr (0+8)
  6784  003AD0  6181               	cpfslt	(_PWM+12)& (0+255),b
  6785  003AD2  D007               	goto	l621
  6786                           ;rgl.c: 2334: {
  6787  003AD4  C1D1  FFE8         	movff	_rgl+8,wreg
  6788  003AD8  6181               	cpfslt	(_PWM+12)& (0+255),b
  6789  003ADA  0012               	return	
  6790  003ADC  C181  F1D1         	movff	_PWM+12,_rgl+8
  6791                           ;rgl.c: 2336: }
  6792  003AE0  0012               	return	
  6793  003AE2                     l621:
  6794                           ;rgl.c: 2337: else
  6795  003AE2  C1D1  FFE8         	movff	_rgl+8,wreg
  6796  003AE6  0101               	movlb	(_PWM+32) shr (0+8)
  6797  003AE8  6195               	cpfslt	(_PWM+32)& (0+255),b
  6798  003AEA  0012               	return	
  6799  003AEC  C195  F1D1         	movff	_PWM+32,_rgl+8
  6800                           ;rgl.c: 2340: }
  6801  003AF0  0012               	return	
  6802  003AF2                     l620:
  6803                           ;rgl.c: 2342: }
  6804  003AF2  0E01               	movlw	1
  6805  003AF4  D8CF               	call	_Trosnie
  6806  003AF6  B0D8               	btfsc	status,0,c
  6807  003AF8  0012               	return	
  6808  003AFA  0E01               	movlw	1
  6809  003AFC  D929               	call	_TFrosnie
  6810  003AFE  B0D8               	btfsc	status,0,c
  6811  003B00  0012               	return	
  6812                           ;rgl.c: 2345: k=5;
  6813  003B02  0E05               	movlw	5
  6814  003B04  6ED9               	movwf	fsr2l,c
  6815                           ;rgl.c: 2346: if(rgl.xmod+k>0xF0) rgl.xmod=0xF0;
  6816  003B06  C1D1  F000         	movff	_rgl+8,btemp
  6817  003B0A  6A01               	clrf	btemp+1,c
  6818  003B0C  2600               	addwf	btemp,f,c
  6819  003B0E  0E00               	movlw	0
  6820  003B10  2201               	addwfc	btemp+1,f,c
  6821  003B12  5001               	movf	btemp+1,w,c
  6822  003B14  0A80               	xorlw	128
  6823  003B16  0F80               	addlw	-128
  6824  003B18  0EF1               	movlw	241
  6825  003B1A  B4D8               	btfsc	status,2,c
  6826  003B1C  5C00               	subwf	btemp,w,c
  6827  003B1E  E304               	bnc	l626
  6828  003B20  0EF0               	movlw	-16
  6829  003B22  CFE8 F1D1          	movff	wreg,_rgl+8
  6830  003B26  D003               	goto	l627
  6831  003B28                     l626:
  6832                           ;rgl.c: 2347: else rgl.xmod+=k;
  6833  003B28  0101               	movlb	(_rgl+8) shr (0+8)
  6834  003B2A  0E05               	movlw	5
  6835  003B2C  27D1               	addwf	(_rgl+8)& (0+255),f,b
  6836  003B2E                     l627:
  6837                           ;rgl.c: 2348: if(rgl.xmod>PWM.MMAXCW) rgl.xmod=P
      +                          WM.MMAXCW;
  6838  003B2E  C1D1  FFE8         	movff	_rgl+8,wreg
  6839  003B32  0101               	movlb	(_PWM+32) shr (0+8)
  6840  003B34  6195               	cpfslt	(_PWM+32)& (0+255),b
  6841  003B36  0012               	return	
  6842  003B38  C195  F1D1         	movff	_PWM+32,_rgl+8
  6843                           ;rgl.c: 2349: }
  6844  003B3C  0012               	return	
  6845  003B3E                     __end_of_IncMaxCW2:
  6846                           ;rgl.c: 2352: void ModPrzCW2(void)
  6847                           ;rgl.c: 2353: {
  6848  003B3E                     _ModPrzCW2:
  6849  000000                     
  6850                           ;rgl.c: 2354: if(!rgl.nmod)
  6851  003B3E  0101               	movlb	_rgl shr (0+8)
  6852  003B40  BBC9               	btfsc	_rgl& (0+255),5,b
  6853  003B42  D00B               	goto	l630
  6854                           ;rgl.c: 2355: {
  6855  003B44  0E00               	movlw	0
  6856  003B46  D8B3               	call	_Tmaleje
  6857  003B48  B0D8               	btfsc	status,0,c
  6858  003B4A  0012               	return	
  6859  003B4C  0E03               	movlw	3
  6860  003B4E  D8DE               	call	_Twyzsza
  6861  003B50  A0D8               	btfss	status,0,c
  6862  003B52  0012               	return	
  6863                           ;rgl.c: 2357: {
  6864  003B54  0101               	movlb	_rgl shr (0+8)
  6865  003B56  8BC9               	bsf	_rgl& (0+255),5,b
  6866                           ;rgl.c: 2359: }
  6867  003B58  0012               	return	
  6868  003B5A                     l630:
  6869                           ;rgl.c: 2361: else
  6870  003B5A  0E03               	movlw	3
  6871  003B5C  D8D7               	call	_Twyzsza
  6872  003B5E  B0D8               	btfsc	status,0,c
  6873  003B60  0012               	return	
  6874                           ;rgl.c: 2364: {
  6875  003B62  0E00               	movlw	0
  6876  003B64  D8A4               	call	_Tmaleje
  6877  003B66  E302               	bnc	l634
  6878  003B68  0101               	movlb	_rgl shr (0+8)
  6879  003B6A  9BC9               	bcf	_rgl& (0+255),5,b
  6880  003B6C                     l634:
  6881                           ;rgl.c: 2366: if(Tstoi()&&TFmaleje(0)) rgl.nmod=
      +                          0;
  6882  003B6C  D8BB               	call	_Tstoi	;wreg free
  6883  003B6E  E305               	bnc	l635
  6884  003B70  0E00               	movlw	0
  6885  003B72  D8FB               	call	_TFmaleje
  6886  003B74  E302               	bnc	l635
  6887  003B76  0101               	movlb	_rgl shr (0+8)
  6888  003B78  9BC9               	bcf	_rgl& (0+255),5,b
  6889  003B7A                     l635:
  6890                           ;rgl.c: 2367: if(Tnizsza(3)) rgl.nmod=0;
  6891  003B7A  0E03               	movlw	3
  6892  003B7C  D8BA               	call	_Tnizsza
  6893  003B7E  A0D8               	btfss	status,0,c
  6894  003B80  0012               	return	
  6895  003B82  0101               	movlb	_rgl shr (0+8)
  6896  003B84  9BC9               	bcf	_rgl& (0+255),5,b
  6897                           ;rgl.c: 2368: }
  6898  003B86  0012               	return	
  6899  003B88                     __end_of_ModPrzCW2:
  6900                           ;rgl.c: 2373: void PropCO2(void)
  6901                           ;rgl.c: 2374: {
  6902  003B88                     _PropCO2:
  6903  000000                     
  6904                           ;rgl.c: 2375: if(!rgl.nmod)
  6905  003B88  0101               	movlb	_rgl shr (0+8)
  6906  003B8A  BBC9               	btfsc	_rgl& (0+255),5,b
  6907  003B8C  D033               	goto	l638
  6908                           ;rgl.c: 2376: {
  6909  003B8E  C1CC  FFE8         	movff	_rgl+3,wreg
  6910  003B92  0A03               	xorlw	3
  6911  003B94  E10A               	bnz	l639
  6912  003B96                     L32:
  6913                           ;rgl.c: 2378: {
  6914  003B96  C1D2  FFE8         	movff	_rgl+9,wreg
  6915  003B9A  0101               	movlb	(_PWM+12) shr (0+8)
  6916  003B9C  6181               	cpfslt	(_PWM+12)& (0+255),b
  6917  003B9E  EF63  F019         	goto	l483
  6918                           ;rgl.c: 2380: rgl.tmp_pwm=PWM.MGMOD;
  6919  003BA2  C181  F1D2         	movff	_PWM+12,_rgl+9
  6920                           ;rgl.c: 2381: }
  6921  003BA6  EF63  F019         	goto	l483
  6922  003BAA                     l639:
  6923                           ;rgl.c: 2382: else
  6924  003BAA  C1CC  FFE8         	movff	_rgl+3,wreg
  6925  003BAE  0A02               	xorlw	2
  6926  003BB0  E10A               	bnz	l642
  6927  003BB2                     L33:
  6928                           ;rgl.c: 2384: {
  6929  003BB2  C1D2  FFE8         	movff	_rgl+9,wreg
  6930  003BB6  0101               	movlb	(_PWM+27) shr (0+8)
  6931  003BB8  6190               	cpfslt	(_PWM+27)& (0+255),b
  6932  003BBA  EF63  F019         	goto	l483
  6933                           ;rgl.c: 2386: rgl.tmp_pwm=PWM.PROP1;
  6934  003BBE  C190  F1D2         	movff	_PWM+27,_rgl+9
  6935                           ;rgl.c: 2387: }
  6936  003BC2  EF63  F019         	goto	l483
  6937  003BC6                     l642:
  6938                           ;rgl.c: 2388: else
  6939  003BC6  C1CC  F000         	movff	_rgl+3,btemp
  6940  003BCA  0400               	decf	btemp,w,c
  6941  003BCC  E10A               	bnz	l645
  6942  003BCE                     L34:
  6943                           ;rgl.c: 2390: {
  6944  003BCE  C1D2  FFE8         	movff	_rgl+9,wreg
  6945  003BD2  0101               	movlb	(_PWM+28) shr (0+8)
  6946  003BD4  6191               	cpfslt	(_PWM+28)& (0+255),b
  6947  003BD6  EF63  F019         	goto	l483
  6948                           ;rgl.c: 2392: rgl.tmp_pwm=PWM.PROP2;
  6949  003BDA  C191  F1D2         	movff	_PWM+28,_rgl+9
  6950                           ;rgl.c: 2393: }
  6951  003BDE  EF63  F019         	goto	l483
  6952  003BE2                     l645:
  6953                           ;rgl.c: 2394: else
  6954  003BE2  C1CC  FFE8         	movff	_rgl+3,wreg
  6955  003BE6  0A80               	xorlw	128
  6956  003BE8  0F7F               	addlw	-129
  6957  003BEA  E302 EF63  F019    	bc	l641
  6958  003BF0  EF5C  F019         	goto	L35
  6959                           ;rgl.c: 2396: {
  6960                           ;rgl.c: 2399: }
  6961                           ;rgl.c: 2402: }
  6962  003BF4                     l638:
  6963                           ;rgl.c: 2403: else WriteOPWM(PWM.MDMOD);
  6964  003BF4  C17E  FFE8         	movff	_PWM+9,wreg
  6965  003BF8  EFE5  F054         	goto	_WriteOPWM
  6966                           ;rgl.c: 2404: }
  6967  003BFC                     __end_of_PropCO2:
  6968                           ;rgl.c: 2414: void ModToCW3(void)
  6969                           ;rgl.c: 2415: {
  6970  003BFC                     _ModToCW3:
  6971  000000                     
  6972                           ;rgl.c: 2416: rgl.btcw=1;
  6973  003BFC  0101               	movlb	_rgl shr (0+8)
  6974  003BFE  83C9               	bsf	_rgl& (0+255),1,b
  6975                           ;rgl.c: 2417: if(rgl.btco)
  6976  003C00  A1C9               	btfss	_rgl& (0+255),0,b
  6977  003C02  0012               	return	
  6978                           ;rgl.c: 2418: {
  6979  003C04  91C9               	bcf	_rgl& (0+255),0,b
  6980                           ;rgl.c: 2421: if(!Tnizsza(0))
  6981  003C06  0E00               	movlw	0
  6982  003C08  D874               	call	_Tnizsza
  6983  003C0A  B0D8               	btfsc	status,0,c
  6984  003C0C  0012               	return	
  6985                           ;rgl.c: 2422: {
  6986  003C0E  C17E  F000         	movff	_PWM+9,btemp
  6987  003C12  6A01               	clrf	btemp+1,c
  6988  003C14  C1D0  F002         	movff	_rgl+7,btemp+2
  6989  003C18  0EF6               	movlw	246
  6990  003C1A  2402               	addwf	btemp+2,w,c
  6991  003C1C  6EF6               	movwf	tblptrl,c
  6992  003C1E  6AF7               	clrf	tblptrh,c
  6993  003C20  0EFF               	movlw	255
  6994  003C22  22F7               	addwfc	tblptrh,f,c
  6995  003C24  50F7               	movf	tblptrh,w,c
  6996  003C26  0A80               	xorlw	128
  6997  003C28  6E02               	movwf	btemp+2,c
  6998  003C2A  5001               	movf	btemp+1,w,c
  6999  003C2C  0A80               	xorlw	128
  7000  003C2E  5C02               	subwf	btemp+2,w,c
  7001  003C30  E102               	bnz	u5315
  7002  003C32  5000               	movf	btemp,w,c
  7003  003C34  5CF6               	subwf	tblptrl,w,c
  7004  003C36                     u5315:
  7005  003C36  E203               	bc	l654
  7006  003C38  C17E  F1D0         	movff	_PWM+9,_rgl+7
  7007  003C3C  0012               	return	
  7008  003C3E                     l654:
  7009                           ;rgl.c: 2424: else rgl.srp-=10;
  7010  003C3E  0101               	movlb	(_rgl+7) shr (0+8)
  7011  003C40  0EF6               	movlw	-10
  7012  003C42  27D0               	addwf	(_rgl+7)& (0+255),f,b
  7013                           ;rgl.c: 2425: }
  7014  003C44  0CF6               	retlw	246
  7015  003C46                     __end_of_ModToCW3:
  7016                           ;rgl.c: 2430: void ModToCO3(void)
  7017                           ;rgl.c: 2431: {
  7018  003C46                     _ModToCO3:
  7019  000000                     
  7020                           ;rgl.c: 2432: rgl.btco=1;
  7021  003C46  0101               	movlb	_rgl shr (0+8)
  7022  003C48  81C9               	bsf	_rgl& (0+255),0,b
  7023                           ;rgl.c: 2433: rgl.btcw=0;
  7024  003C4A  93C9               	bcf	_rgl& (0+255),1,b
  7025                           ;rgl.c: 2434: }
  7026  003C4C  0012               	return	
  7027  003C4E                     __end_of_ModToCO3:
  7028                           ;rgl.c: 2437: void StartMCO3(void)
  7029                           ;rgl.c: 2438: {
  7030  003C4E                     _StartMCO3:
  7031  000000                     
  7032                           ;rgl.c: 2439: if(rgl.btco||rgl.btcw) return;
  7033  003C4E  0101               	movlb	_rgl shr (0+8)
  7034  003C50  A1C9               	btfss	_rgl& (0+255),0,b
  7035  003C52  B3C9               	btfsc	_rgl& (0+255),1,b
  7036  003C54  0012               	return	
  7037                           ;rgl.c: 2440: StartRTdS(3);
  7038  003C56  0E03               	movlw	3
  7039  003C58  EC17  F05C         	call	_StartRTdS
  7040                           ;rgl.c: 2441: DtCO.dDCO=0;
  7041  003C5C  0101               	movlb	(_DtCO+9) shr (0+8)
  7042  003C5E  6B29               	clrf	(_DtCO+9)& (0+255),b
  7043                           ;rgl.c: 2442: DtCO.indCO=0;
  7044  003C60  0101               	movlb	(_DtCO+10) shr (0+8)
  7045  003C62  6B2A               	clrf	(_DtCO+10)& (0+255),b
  7046                           ;rgl.c: 2443: rgl.fz=0;
  7047  003C64  0101               	movlb	_rgl shr (0+8)
  7048  003C66  95C9               	bcf	_rgl& (0+255),2,b
  7049                           ;rgl.c: 2444: rgl.med_up=0;
  7050  003C68  97C9               	bcf	_rgl& (0+255),3,b
  7051                           ;rgl.c: 2445: rgl.fast_up=0;
  7052  003C6A  99C9               	bcf	_rgl& (0+255),4,b
  7053                           ;rgl.c: 2447: if(PWM.MAXPWM>PWM.FIRSTPB)
  7054  003C6C  C198  FFE8         	movff	_PWM+35,wreg
  7055  003C70  0101               	movlb	(_PWM+26) shr (0+8)
  7056  003C72  618F               	cpfslt	(_PWM+26)& (0+255),b
  7057  003C74  D003               	goto	l659
  7058                           ;rgl.c: 2448: {
  7059  003C76  C18F  F1D1         	movff	_PWM+26,_rgl+8
  7060                           ;rgl.c: 2450: }
  7061  003C7A  D002               	goto	l660
  7062  003C7C                     l659:
  7063                           ;rgl.c: 2451: else
  7064  003C7C  C198  F1D1         	movff	_PWM+35,_rgl+8
  7065  003C80                     l660:
  7066                           ;rgl.c: 2454: }
  7067  003C80  0101               	movlb	(_rgl+7) shr (0+8)
  7068  003C82  6BD0               	clrf	(_rgl+7)& (0+255),b
  7069                           ;rgl.c: 2456: rgl.ytmp=0;
  7070  003C84  6BCF               	clrf	(_rgl+6)& (0+255),b
  7071                           ;rgl.c: 2457: rgl.nmod=0;
  7072  003C86  9BC9               	bcf	_rgl& (0+255),5,b
  7073                           ;rgl.c: 2458: rgl.btcw=0;
  7074  003C88  93C9               	bcf	_rgl& (0+255),1,b
  7075                           ;rgl.c: 2459: rgl.btco=1;
  7076  003C8A  81C9               	bsf	_rgl& (0+255),0,b
  7077                           ;rgl.c: 2460: rgl.del1s=0;
  7078  003C8C  9DC9               	bcf	_rgl& (0+255),6,b
  7079                           ;rgl.c: 2461: rgl.deln1=0;
  7080  003C8E  9FC9               	bcf	_rgl& (0+255),7,b
  7081                           ;rgl.c: 2462: rgl.inv_mod=0;
  7082  003C90  91CA               	bcf	(_rgl+1)& (0+255),0,b
  7083                           ;rgl.c: 2463: }
  7084  003C92  0012               	return	
  7085  003C94                     __end_of_StartMCO3:
  7086                           ;rgl.c: 2473: bit Trosnie(const unsigned char t)
  7087                           ;rgl.c: 2474: {
  7088  003C94                     _Trosnie:
  7089  000000                     
  7090                           ; _t loaded to fsr2l
  7091  003C94  6ED9               	movwf	fsr2l,c
  7092                           ;rgl.c: 2475: return (rgl.x_dt>t);
  7093  003C96  C1CD  F000         	movff	_rgl+4,btemp
  7094  003C9A  50D9               	movf	fsr2l,w,c
  7095  003C9C  BE00               	btfsc	btemp,7,c
  7096  003C9E  D005               	goto	u5360
  7097  003CA0  0AFF               	xorlw	255
  7098  003CA2  2400               	addwf	btemp,w,c
  7099  003CA4  E302               	bnc	u5360
  7100  003CA6  80D8               	bsf	status,0,c
  7101  003CA8  0012               	return	
  7102  003CAA                     u5360:
  7103  003CAA  90D8               	bcf	status,0,c
  7104  003CAC  0012               	return	
  7105                           ;rgl.c: 2476: }
  7106  003CAE                     __end_of_Trosnie:
  7107                           ;rgl.c: 2482: bit Tmaleje(const unsigned char t)
  7108                           ;rgl.c: 2483: {
  7109  003CAE                     _Tmaleje:
  7110  000000                     
  7111                           ; _t loaded to fsr2l
  7112  003CAE  6ED9               	movwf	fsr2l,c
  7113                           ;rgl.c: 2484: return (rgl.x_dt<(-1*t));
  7114  003CB0  CFD9 F000          	movff	fsr2l,btemp
  7115  003CB4  6A01               	clrf	btemp+1,c
  7116  003CB6  1E00               	comf	btemp,f,c
  7117  003CB8  1E01               	comf	btemp+1,f,c
  7118  003CBA  4A00               	infsnz	btemp,f,c
  7119  003CBC  2A01               	incf	btemp+1,f,c
  7120  003CBE  C1CD  F002         	movff	_rgl+4,btemp+2
  7121  003CC2  6A03               	clrf	btemp+3,c
  7122  003CC4  BE02               	btfsc	btemp+2,7,c
  7123  003CC6  0603               	decf	btemp+3,f,c
  7124  003CC8  5003               	movf	btemp+3,w,c
  7125  003CCA  0A80               	xorlw	128
  7126  003CCC  6E04               	movwf	btemp+4,c
  7127  003CCE  5001               	movf	btemp+1,w,c
  7128  003CD0  0A80               	xorlw	128
  7129  003CD2  5C04               	subwf	btemp+4,w,c
  7130  003CD4  E102               	bnz	u5385
  7131  003CD6  5000               	movf	btemp,w,c
  7132  003CD8  5C02               	subwf	btemp+2,w,c
  7133  003CDA                     u5385:
  7134  003CDA  E202               	bc	u5380
  7135  003CDC  80D8               	bsf	status,0,c
  7136  003CDE  0012               	return	
  7137  003CE0                     u5380:
  7138  003CE0  90D8               	bcf	status,0,c
  7139  003CE2  0012               	return	
  7140                           ;rgl.c: 2485: }
  7141  003CE4                     __end_of_Tmaleje:
  7142                           ;rgl.c: 2489: bit Tstoi(void)
  7143                           ;rgl.c: 2490: {
  7144  003CE4                     _Tstoi:
  7145  000000                     
  7146                           ;rgl.c: 2491: return !rgl.x_dt;
  7147  003CE4  EE01  F0CD         	lfsr	0,_rgl+4
  7148  003CE8  50EF               	movf	indf0,w,c
  7149  003CEA  90D8               	bcf	status,0,c
  7150  003CEC  B4D8               	btfsc	status,2,c
  7151  003CEE  80D8               	bsf	status,0,c
  7152  003CF0  0012               	return	
  7153                           ;rgl.c: 2492: }
  7154  003CF2                     __end_of_Tstoi:
  7155                           ;rgl.c: 2499: bit Tnizsza(const unsigned char t)
  7156                           ;rgl.c: 2500: {
  7157  003CF2                     _Tnizsza:
  7158  000000                     
  7159                           ; _t loaded to fsr2l
  7160  003CF2  6ED9               	movwf	fsr2l,c
  7161                           ;rgl.c: 2501: return (rgl.x_t>t);
  7162  003CF4  C1CB  F000         	movff	_rgl+2,btemp
  7163  003CF8  50D9               	movf	fsr2l,w,c
  7164  003CFA  BE00               	btfsc	btemp,7,c
  7165  003CFC  D005               	goto	u5400
  7166  003CFE  0AFF               	xorlw	255
  7167  003D00  2400               	addwf	btemp,w,c
  7168  003D02  E302               	bnc	u5400
  7169  003D04  80D8               	bsf	status,0,c
  7170  003D06  0012               	return	
  7171  003D08                     u5400:
  7172  003D08  90D8               	bcf	status,0,c
  7173  003D0A  0012               	return	
  7174                           ;rgl.c: 2502: }
  7175  003D0C                     __end_of_Tnizsza:
  7176                           ;rgl.c: 2508: bit Twyzsza(const unsigned char t)
  7177                           ;rgl.c: 2509: {
  7178  003D0C                     _Twyzsza:
  7179  000000                     
  7180                           ; _t loaded to fsr2l
  7181  003D0C  6ED9               	movwf	fsr2l,c
  7182                           ;rgl.c: 2510: return (rgl.x_t<(-1*t));
  7183  003D0E  CFD9 F000          	movff	fsr2l,btemp
  7184  003D12  6A01               	clrf	btemp+1,c
  7185  003D14  1E00               	comf	btemp,f,c
  7186  003D16  1E01               	comf	btemp+1,f,c
  7187  003D18  4A00               	infsnz	btemp,f,c
  7188  003D1A  2A01               	incf	btemp+1,f,c
  7189  003D1C  C1CB  F002         	movff	_rgl+2,btemp+2
  7190  003D20  6A03               	clrf	btemp+3,c
  7191  003D22  BE02               	btfsc	btemp+2,7,c
  7192  003D24  0603               	decf	btemp+3,f,c
  7193  003D26  5003               	movf	btemp+3,w,c
  7194  003D28  0A80               	xorlw	128
  7195  003D2A  6E04               	movwf	btemp+4,c
  7196  003D2C  5001               	movf	btemp+1,w,c
  7197  003D2E  0A80               	xorlw	128
  7198  003D30  5C04               	subwf	btemp+4,w,c
  7199  003D32  E102               	bnz	u5425
  7200  003D34  5000               	movf	btemp,w,c
  7201  003D36  5C02               	subwf	btemp+2,w,c
  7202  003D38                     u5425:
  7203  003D38  E202               	bc	u5420
  7204  003D3A  80D8               	bsf	status,0,c
  7205  003D3C  0012               	return	
  7206  003D3E                     u5420:
  7207  003D3E  90D8               	bcf	status,0,c
  7208  003D40  0012               	return	
  7209                           ;rgl.c: 2511: }
  7210  003D42                     __end_of_Twyzsza:
  7211                           ;rgl.c: 2515: bit Trowna(void)
  7212                           ;rgl.c: 2516: {
  7213  003D42                     _Trowna:
  7214  000000                     
  7215                           ;rgl.c: 2517: return !rgl.x_t;
  7216  003D42  EE01  F0CB         	lfsr	0,_rgl+2
  7217  003D46  50EF               	movf	indf0,w,c
  7218  003D48  90D8               	bcf	status,0,c
  7219  003D4A  B4D8               	btfsc	status,2,c
  7220  003D4C  80D8               	bsf	status,0,c
  7221  003D4E  0012               	return	
  7222                           ;rgl.c: 2518: }
  7223  003D50                     __end_of_Trowna:
  7224                           ;rgl.c: 2524: bit TFrosnie(const unsigned char t
      +                          )
  7225                           ;rgl.c: 2525: {
  7226  003D50                     _TFrosnie:
  7227  000000                     
  7228                           ; _t loaded to fsr2l
  7229  003D50  6ED9               	movwf	fsr2l,c
  7230                           ;rgl.c: 2526: return (rgl.x_df>t);
  7231  003D52  C1CE  F000         	movff	_rgl+5,btemp
  7232  003D56  50D9               	movf	fsr2l,w,c
  7233  003D58  BE00               	btfsc	btemp,7,c
  7234  003D5A  D005               	goto	u5440
  7235  003D5C  0AFF               	xorlw	255
  7236  003D5E  2400               	addwf	btemp,w,c
  7237  003D60  E302               	bnc	u5440
  7238  003D62  80D8               	bsf	status,0,c
  7239  003D64  0012               	return	
  7240  003D66                     u5440:
  7241  003D66  90D8               	bcf	status,0,c
  7242  003D68  0012               	return	
  7243                           ;rgl.c: 2527: }
  7244  003D6A                     __end_of_TFrosnie:
  7245                           ;rgl.c: 2533: bit TFmaleje(const unsigned char t
      +                          )
  7246                           ;rgl.c: 2534: {
  7247  003D6A                     _TFmaleje:
  7248  000000                     
  7249                           ; _t loaded to fsr2l
  7250  003D6A  6ED9               	movwf	fsr2l,c
  7251                           ;rgl.c: 2535: return (rgl.x_df<(-1*t));
  7252  003D6C  CFD9 F000          	movff	fsr2l,btemp
  7253  003D70  6A01               	clrf	btemp+1,c
  7254  003D72  1E00               	comf	btemp,f,c
  7255  003D74  1E01               	comf	btemp+1,f,c
  7256  003D76  4A00               	infsnz	btemp,f,c
  7257  003D78  2A01               	incf	btemp+1,f,c
  7258  003D7A  C1CE  F002         	movff	_rgl+5,btemp+2
  7259  003D7E  6A03               	clrf	btemp+3,c
  7260  003D80  BE02               	btfsc	btemp+2,7,c
  7261  003D82  0603               	decf	btemp+3,f,c
  7262  003D84  5003               	movf	btemp+3,w,c
  7263  003D86  0A80               	xorlw	128
  7264  003D88  6E04               	movwf	btemp+4,c
  7265  003D8A  5001               	movf	btemp+1,w,c
  7266  003D8C  0A80               	xorlw	128
  7267  003D8E  5C04               	subwf	btemp+4,w,c
  7268  003D90  E102               	bnz	u5465
  7269  003D92  5000               	movf	btemp,w,c
  7270  003D94  5C02               	subwf	btemp+2,w,c
  7271  003D96                     u5465:
  7272  003D96  E202               	bc	u5460
  7273  003D98  80D8               	bsf	status,0,c
  7274  003D9A  0012               	return	
  7275  003D9C                     u5460:
  7276  003D9C  90D8               	bcf	status,0,c
  7277  003D9E  0012               	return	
  7278                           ;rgl.c: 2536: }
  7279  003DA0                     __end_of_TFmaleje:
  7280                           ;rgl.c: 2540: bit TFstoi(void)
  7281                           ;rgl.c: 2541: {
  7282  003DA0                     _TFstoi:
  7283  000000                     
  7284                           ;rgl.c: 2542: return !rgl.x_df;
  7285  003DA0  EE01  F0CE         	lfsr	0,_rgl+5
  7286  003DA4  50EF               	movf	indf0,w,c
  7287  003DA6  90D8               	bcf	status,0,c
  7288  003DA8  B4D8               	btfsc	status,2,c
  7289  003DAA  80D8               	bsf	status,0,c
  7290  003DAC  0012               	return	
  7291                           ;rgl.c: 2543: }
  7292  003DAE                     __end_of_TFstoi:
  7293                           ;rgl.c: 2546: void RestartMod(void)
  7294                           ;rgl.c: 2547: {
  7295  003DAE                     _RestartMod:
  7296  000000                     
  7297                           ;rgl.c: 2548: rgl.btco=0;
  7298  003DAE  0101               	movlb	_rgl shr (0+8)
  7299  003DB0  91C9               	bcf	_rgl& (0+255),0,b
  7300                           ;rgl.c: 2549: rgl.btcw=0;
  7301  003DB2  93C9               	bcf	_rgl& (0+255),1,b
  7302                           ;rgl.c: 2550: rgl.fz=0;
  7303  003DB4  95C9               	bcf	_rgl& (0+255),2,b
  7304                           ;rgl.c: 2551: rgl.med_up=0;
  7305  003DB6  97C9               	bcf	_rgl& (0+255),3,b
  7306                           ;rgl.c: 2552: rgl.fast_up=0;
  7307  003DB8  99C9               	bcf	_rgl& (0+255),4,b
  7308                           ;rgl.c: 2553: rgl.nmod=0;
  7309  003DBA  9BC9               	bcf	_rgl& (0+255),5,b
  7310                           ;rgl.c: 2554: rgl.del1s=0;
  7311  003DBC  9DC9               	bcf	_rgl& (0+255),6,b
  7312                           ;rgl.c: 2555: rgl.deln1=0;
  7313  003DBE  9FC9               	bcf	_rgl& (0+255),7,b
  7314                           ;rgl.c: 2556: rgl.inv_mod=0;
  7315  003DC0  91CA               	bcf	(_rgl+1)& (0+255),0,b
  7316                           ;rgl.c: 2557: }
  7317  003DC2  0012               	return	
  7318  003DC4                     __end_of_RestartMod:
  7319  000000                     
  7320  000000                     
  7321  000000                     
  7322  000000                     
  7323  000000                     
  7324  000000                     
  7325  000000                     
  7326  000000                     
  7327  000000                     
  7328  000000                     
  7329  000000                     
  7330  000000                     
  7331  000000                     
  7332  000000                     
  7333  000000                     
  7334  000000                     
  7335  000000                     
  7336  000000                     
  7337  000000                     
  7338  000000                     
  7339  000000                     
  7340  000000                     
  7341  000000                     
  7342  000000                     
  7343  000000                     
  7344  000000                     
  7345  000000                     
  7346  000000                     
  7347  000000                     
  7348  000000                     
  7349  000000                     
  7350  000000                     
  7351  000000                     
  7352  000000                     
  7353  000000                     
  7354  000000                     
  7355  000000                     
  7356  000000                     
  7357  000000                     
  7358  000000                     
  7359  000000                     
  7360  000000                     
  7361  000000                     
  7362  000000                     
  7363  000000                     
  7364  000000                     
  7365  000000                     
  7366  000000                     
  7367  000000                     
  7368  000000                     
  7369  000000                     
  7370  000000                     
  7371  000000                     
  7372  000000                     
  7373  000000                     
  7374  000000                     
  7375  000000                     
  7376  000000                     
  7377  000000                     
  7378  000000                     
  7379  000000                     
  7380  000000                     
  7381  000000                     
  7382  000000                     
  7383  000000                     
  7384  000000                     
  7385  000000                     
  7386  000000                     
  7387  000000                     
  7388  000000                     
  7389  000000                     
  7390  000000                     
  7391  000000                     
  7392  000000                     
  7393  000000                     
  7394  000000                     
  7395  000000                     
  7396  000000                     
  7397  000000                     
  7398  000000                     
  7399  000000                     
  7400  000000                     
  7401  000000                     
  7402  000000                     
  7403  000000                     
  7404  000000                     
  7405  000000                     
  7406  000000                     
  7407  000000                     
  7408  000000                     
  7409  000000                     
  7410  000000                     
  7411  000000                     
  7412  000000                     
  7413  000000                     
  7414  000000                     
  7415  000000                     
  7416  000000                     
  7417  000000                     
  7418  000000                     
  7419  000000                     
  7420  000000                     
  7421  000000                     
  7422  000000                     
  7423  000000                     
  7424  000000                     
  7425  000000                     
  7426  000000                     
  7427  000000                     
  7428  000000                     
  7429  000000                     
  7430  000000                     
  7431  000000                     
  7432  000000                     
  7433  000000                     
  7434  000000                     
  7435  000000                     
  7436  000000                     
  7437  000000                     
  7438  000000                     
  7439  000000                     
  7440  000000                     
  7441  000000                     
  7442  000000                     
  7443  000000                     
  7444  000000                     
  7445  000000                     
  7446  000000                     
  7447  000000                     
  7448  000000                     
  7449  000000                     
  7450  000000                     
  7451  000000                     
  7452  000000                     
  7453  000000                     
  7454  000000                     
  7455  000000                     
  7456  000000                     
  7457  000000                     
  7458  000000                     
  7459  000000                     
  7460  000000                     
  7461  000000                     
  7462  000000                     
  7463  000000                     
  7464  000000                     
  7465  000000                     
  7466  000000                     
  7467  000000                     
  7468  000000                     
  7469  000000                     
  7470  000000                     
  7471  000000                     
  7472  000000                     
  7473  000000                     
  7474  000000                     
  7475  000000                     
  7476  000000                     
  7477  000000                     
  7478  000000                     
  7479  000000                     
  7480  000000                     
  7481  000000                     
  7482  000000                     
  7483  000000                     
  7484  000000                     
  7485  000000                     
  7486  000000                     
  7487  000000                     
  7488  000000                     
  7489  000000                     
  7490  000000                     
  7491  000000                     
  7492  000000                     
  7493  000000                     
  7494  000000                     
  7495  000000                     
  7496  000000                     
  7497  000000                     
  7498  000000                     
  7499  000000                     
  7500  000000                     
  7501  000000                     
  7502  000000                     
  7503  000000                     
  7504  000000                     
  7505  000000                     
  7506  000000                     
  7507  000000                     
  7508  000000                     
  7509  000000                     
  7510  000000                     
  7511  000000                     
  7512  000000                     
  7513  000000                     
  7514  000000                     
  7515  000000                     
  7516  000000                     
  7517  000000                     
  7518  000000                     
  7519  000000                     
  7520  000000                     
  7521  000000                     
  7522  000000                     
  7523  000000                     
  7524  000000                     
  7525  000000                     
  7526  000000                     
  7527  000000                     
  7528  000000                     
  7529  000000                     
  7530  000000                     
  7531  000000                     
  7532  000000                     
  7533  000000                     
  7534  000000                     
  7535  000000                     
  7536  000000                     
  7537  000000                     
  7538  000000                     
  7539  000000                     
  7540  000000                     
  7541  000000                     
  7542  000000                     
  7543  000000                     
  7544  000000                     
  7545  000000                     
  7546  000000                     
  7547  000000                     
  7548  000000                     
  7549  000000                     
  7550  000000                     
  7551  000000                     
  7552  000000                     
  7553  000000                     
  7554  000000                     
  7555  000000                     
  7556  000000                     
  7557  000000                     
  7558  000000                     
  7559  000000                     
  7560  000000                     
  7561  000000                     
  7562  000000                     
  7563  000000                     
  7564  000000                     
  7565  000000                     
  7566  000000                     
  7567  000000                     
  7568  000000                     
  7569  000000                     
  7570  000000                     
  7571  000000                     
  7572  000000                     
  7573  000000                     
  7574  000000                     
  7575  000000                     
  7576  000000                     
  7577  000000                     
  7578  000000                     
  7579  000000                     
  7580  000000                     
  7581  000000                     
  7582  000000                     
  7583  000000                     
  7584  000000                     
  7585  000000                     
  7586  000000                     
  7587  000000                     
  7588  000000                     
  7589  000000                     
  7590  000000                     
  7591  000000                     
  7592  000000                     
  7593  000000                     
  7594  000000                     
  7595  000000                     
  7596  000000                     
  7597  000000                     
  7598  000000                     
  7599  000000                     
  7600  000000                     
  7601  000000                     
  7602  000000                     
  7603  000000                     
  7604  000000                     
  7605  000000                     
  7606  000000                     
  7607  000000                     
  7608  000000                     
  7609  000000                     
  7610  000000                     
  7611  000000                     
  7612  000000                     
  7613  000000                     
  7614  000000                     
  7615  000000                     
  7616  000000                     
  7617  000000                     
  7618  000000                     
  7619  000000                     
  7620  000000                     
  7621  000000                     
  7622  000000                     
  7623  000000                     
  7624  000000                     
  7625  000000                     
  7626  000000                     
  7627  000000                     
  7628  000000                     
  7629  000000                     
  7630  000000                     
  7631  000000                     
  7632  000000                     
  7633  000000                     
  7634  000000                     
  7635  000000                     
  7636  000000                     
  7637  000000                     
  7638  000000                     
  7639  000000                     
  7640  000000                     
  7641  000000                     
  7642  000000                     
  7643  000000                     
  7644  000000                     
  7645  000000                     
  7646  000000                     
  7647  000000                     
  7648  000000                     
  7649  000000                     
  7650  000000                     
  7651  000000                     
  7652  000000                     
  7653  000000                     
  7654  000000                     
  7655  000000                     
  7656  000000                     
  7657  000000                     
  7658  000000                     
  7659  000000                     
  7660  000000                     
  7661  000000                     
  7662  000000                     
  7663  000000                     
  7664  000000                     
  7665  000000                     
  7666  000000                     
  7667  000000                     
  7668  000000                     
  7669  000000                     
  7670  000000                     
  7671  000000                     
  7672  000000                     
  7673  000000                     
  7674  000000                     
  7675  000000                     
  7676  000000                     
  7677  000000                     
  7678  000000                     
  7679  000000                     
  7680  000000                     
  7681  000000                     
  7682  000000                     
  7683  000000                     
  7684  000000                     
  7685  000000                     
  7686  000000                     
  7687  000000                     
  7688  000000                     
  7689  000000                     
  7690  000000                     
  7691  000000                     
  7692  000000                     
  7693  000000                     
  7694  000000                     
  7695  000000                     
  7696  000000                     
  7697  000000                     
  7698  000000                     
  7699  000000                     
  7700  000000                     
  7701  000000                     
  7702  000000                     
  7703  000000                     
  7704  000000                     
  7705  000000                     
  7706  000000                     
  7707  000000                     
  7708  000000                     
  7709  000000                     
  7710  000000                     
  7711  000000                     
  7712  000000                     
  7713  000000                     
  7714  000000                     
  7715  000000                     
  7716  000000                     
  7717  000000                     
  7718  000000                     
  7719  000000                     
  7720  000000                     
  7721  000000                     
  7722  000000                     
  7723  000000                     
  7724  000000                     
  7725  000000                     
  7726  000000                     
  7727  000000                     
  7728  000000                     
  7729  000000                     
  7730  000000                     
  7731  000000                     
  7732  000000                     
  7733  000000                     
  7734  000000                     
  7735  000000                     
  7736  000000                     
  7737  000000                     
  7738  000000                     
  7739  000000                     
  7740  000000                     
  7741  000000                     
  7742  000000                     
  7743  000000                     
  7744  000000                     
  7745  000000                     
  7746  000000                     
  7747  000000                     
  7748  000000                     
  7749  000000                     
  7750  000000                     
  7751  000000                     
  7752  000000                     
  7753  000000                     
  7754  000000                     
  7755                           
  7756                           	psect	bigbss
  7757  000ED9                     F1670:
  7758  000ED9                     	ds	1
  7759  000ED9                     F1703:
  7760  000ED9                     	ds	1
  7761  000ED9                     F1704:
  7762  000ED9                     	ds	1
  7763  000ED9                     F1705:
  7764  000ED9                     	ds	1
  7765  000ED9                     F1706:
  7766  000ED9                     	ds	1
  7767  000ED9                     F1707:
  7768  000ED9                     	ds	1
  7769  000ED9                     F1708:
  7770  000ED9                     	ds	1
  7771  000ED9                     F1709:
  7772  000ED9                     	ds	1
  7773  000ED9                     F1722:
  7774  000ED9                     	ds	1
  7775  000ED9                     F1737:
  7776  000ED9                     	ds	1
  7777  000ED9                     F1744:
  7778  000ED9                     	ds	1
  7779  000ED9                     F1745:
  7780  000ED9                     	ds	1
  7781  000ED9                     F1746:
  7782  000ED9                     	ds	1
  7783  000ED9                     F1747:
  7784  000ED9                     	ds	1
  7785  000ED9                     F1748:
  7786  000ED9                     	ds	1
  7787  000ED9                     F1749:
  7788  000ED9                     	ds	1
  7789  000ED9                     F1750:
  7790  000ED9                     	ds	1
  7791  000ED9                     F1757:
  7792  000ED9                     	ds	1
  7793  000ED9                     F1774:
  7794  000ED9                     	ds	1
  7795  000ED9                     F1781:
  7796  000ED9                     	ds	1
  7797  000ED9                     F1782:
  7798  000ED9                     	ds	1
  7799  000ED9                     F1783:
  7800  000ED9                     	ds	1
  7801  000ED9                     F1784:
  7802  000ED9                     	ds	1
  7803  000ED9                     F1785:
  7804  000ED9                     	ds	1
  7805  000ED9                     F1786:
  7806  000ED9                     	ds	1
  7807  000ED9                     F1787:
  7808  000ED9                     	ds	1
  7809  000000                     
  7810  000000                     
  7811  000000                     
  7812  000000                     
  7813  000000                     
  7814  000000                     
  7815  000000                     
  7816  000000                     
  7817  000000                     
  7818  000000                     
  7819  000000                     
  7820  000000                     
  7821  000000                     
  7822  000000                     
  7823  000000                     
  7824  000000                     
  7825  000000                     
  7826  000000                     
  7827  000000                     
  7828  000000                     
  7829  000000                     
  7830  000000                     
  7831  000000                     
  7832  000000                     
  7833  000000                     
  7834  000000                     
  7835  000000                     
  7836  000000                     
  7837  000000                     
  7838  000000                     
  7839  000000                     
  7840  000000                     
  7841  000000                     
  7842  000000                     
  7843  000000                     
  7844  000000                     
  7845  000000                     
  7846  000000                     
  7847  000000                     
  7848  000000                     
  7849  000000                     
  7850  000000                     
  7851  000000                     
  7852  000000                     
  7853  000000                     
  7854  000000                     
  7855  000000                     
  7856  000000                     
  7857  000000                     
  7858  000000                     
  7859  000000                     
  7860  000000                     
  7861  000000                     
  7862  000000                     
  7863  000000                     
  7864  000000                     
  7865  000000                     
  7866  000000                     
  7867  000000                     
  7868  000000                     
  7869  000000                     
  7870  000000                     
  7871  000000                     
  7872  000000                     
  7873  000000                     
  7874  000000                     
  7875  000000                     
  7876  000000                     
  7877  000000                     
  7878  000000                     
  7879  000000                     
  7880  000000                     
  7881  000000                     
  7882  000000                     
  7883  000000                     
  7884  000000                     
  7885  000000                     
  7886  000000                     
  7887  000000                     
  7888  000000                     
  7889  000000                     
  7890  000000                     
  7891  000000                     
  7892  000000                     
  7893  000000                     
  7894  000000                     
  7895  000000                     
  7896  000000                     
  7897  000000                     
  7898  000000                     
  7899  000000                     
  7900  000000                     
  7901  000000                     
  7902  000000                     
  7903  000000                     
  7904  000000                     
  7905  000000                     
  7906  000000                     
  7907  000000                     
  7908  000000                     
  7909  000000                     
  7910  000000                     
  7911  000000                     
  7912  000000                     
  7913  000000                     
  7914  000000                     
  7915  000000                     
  7916  000000                     
  7917  000000                     
  7918  000000                     
  7919  000000                     
  7920  000000                     
  7921  000000                     
  7922  000000                     
  7923  000000                     
  7924  000000                     
  7925  000000                     
  7926  000000                     
  7927  000000                     
  7928  000000                     
  7929  000000                     
  7930  000000                     
  7931  000000                     
  7932  000000                     
  7933  000000                     
  7934  000ED9                     _pwm_center:
  7935  000ED9                     	ds	1
  7936  000ED9                     _pwm_kwr:
  7937  000ED9                     	ds	1
  7938  000ED9                     _tmr:
  7939  000ED9                     	ds	1
  7940  000ED9                     _tmr2:
  7941  000ED9                     	ds	1
  7942  000000                     
  7943  000000                     
  7944  000000                     
  7945  000000                     
  7946  000000                     
  7947  000000                     
  7948  000000                     
  7949                           
  7950                           	psect	bss
  7951  0001C9                     _rgl:
  7952  0001C9                     	ds	10
  7953                           
  7954                           	psect	temp
  7955  000000                     btemp:
  7956  000000                     	ds	8
  7957                           tblptrh	equ	0xFF7
  7958                           tblptrl	equ	0xFF6
  7959                           prodh	equ	0xFF4
  7960                           prodl	equ	0xFF3
  7961                           indf0	equ	0xFEF
  7962                           fsr0h	equ	0xFEA
  7963                           fsr0l	equ	0xFE9
  7964                           wreg	equ	0xFE8
  7965                           fsr1l	equ	0xFE1
  7966                           fsr2l	equ	0xFD9
  7967                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Fri Feb 26 07:54:44 2016

                    _M 006A              ?a_ModDkCO 00EA  
            ?a_ModDkCW 00EA                     l21 10CA  
                   l30 115A                     l22 10B2  
                   l31 119A                     l23 10BE  
                   l15 12F0                     l32 1196  
                   l24 10D2                     l16 1030  
                   l41 1262                     l25 1114  
                   l17 1074                     l50 1368  
                   l42 126A                     l26 110E  
                   l18 106C                     l43 12AA  
                   l35 11E0                     l52 1360  
                   l44 12A6                     l36 11E4  
                   l61 13FE                     l37 1224  
                   l29 1152                     l38 1220  
                   l63 1438                     l55 138E  
                   l47 12E8                     l80 167C  
                   l72 15B4                     l64 1442  
                   l56 1392                     l81 1692  
                   l73 161A                     l65 14A0  
                   l49 1318                     l90 1726  
                   l82 16C0                     l74 1652  
                   l58 13C0                     l91 172C  
                   l75 164C                     l67 153A  
                   l92 173A                     l68 1580  
                   l85 17E6                     l69 1586  
                   l86 174A                     l78 16C8  
                   l96 1764                     l88 16F2  
                   l97 176A                     l89 16F8  
                   l98 17A2              ?a_ModZgCO 00EA  
            ?a_ModZgCW 00EA               _StartCO2 32CE  
             _StartCO4 29CC               _StartMCW 1972  
           ?a_ModDkCW2 00EA             ?a_ModDkCW4 00EA  
           ?a_FirstPCW 00EA                    l101 17D6  
                  l110 183A                    l102 17D0  
                  l200 20EE                    l120 190E  
                  l113 1888                    l122 1906  
                  l114 1880                    l203 2194  
                  l131 1960                    l220 21D6  
                  l204 2160                    l140 1B30  
                  l132 1964                    l108 1848  
                  l221 21F6                    l213 217E  
                  l205 2126                    l117 18B6  
                  l109 1830                    l222 223E  
                  l150 1CAC                    l142 1B50  
                  l311 27AC                    l303 2724  
                  l231 2294                    l223 2234  
                  l207 2142                    l151 1D06  
                  l143 1B44                    l312 27B4  
                  l232 22A0                    l216 21CA  
                  l136 1A50                    l401 2F08  
                  l313 2826                    l233 22AC  
                  l217 21C6                    l209 215A  
                  l153 1D24                    l145 1BC2  
                  l137 1A54                    l410 2E56  
                  l402 2DE6                    l322 2908  
                  l234 238E                    l226 2272  
                  l154 1D1A                    l146 1C1A  
                  l138 1B36                    l411 2E62  
                  l403 2DF2                    l323 290C  
                  l251 23BA                    l243 2332  
                  l235 22E2                    l171 1DE2  
                  l139 1AD6                    l412 2E82  
                  l404 2DFC                    l324 2974  
                  l252 23E4                    l236 231A  
                  l156 1D30                    l148 1C2C  
                  l413 2ECA                    l317 2898  
                  l261 245E                    l253 23E0  
                  l245 2340                    l237 2316  
                  l173 1E1C                    l149 1D0C  
                  l430 2F98                    l422 2F20  
                  l414 2EC0                    l342 29AE  
                  l334 2980                    l262 2456  
                  l190 2066                    l174 1E26  
                  l503 3366                    l423 2F2C  
                  l407 2E2A                    l271 251E  
                  l255 23D6                    l247 2376  
                  l239 230C                    l191 2072  
                  l183 1FA0                    l175 1E84  
                  l600 3A3A                    l504 3360  
                  l440 3058                    l424 2F38  
                  l408 2E52                    l328 296E  
                  l272 24EA                    l248 237E  
                  l192 207C                    l184 2006  
                  l168 1DB0                    l601 39DE  
                  l441 3054                    l425 3002  
                  l417 2EFE                    l353 2A02  
                  l345 29BA                    l329 2968  
                  l185 203E                    l177 1F1E  
                  l450 30CA                    l434 2FDC  
                  l426 2F6E                    l362 2A7A  
                  l354 2A06                    l338 29C8  
                  l290 25E8                    l266 249C  
                  l258 2422                    l186 2038  
                  l178 1F64                    l531 3488  
                  l507 3376                    l443 304A  
                  l435 2FE4                    l427 2FA6  
                  l339 29A2                    l283 259A  
                  l267 248C                    l195 20FE  
                  l179 1F6A                    l620 3AF2  
                  l612 3A78                    l604 3A10  
                  l540 35C4                    l532 3474  
                  l460 3140                    l436 2FF2  
                  l428 2FA2                    l364 2A8A  
                  l276 2518                    l196 20BA  
                  l621 3AE2                    l541 360A  
                  l517 33CC                    l509 3386  
                  l461 3146                    l381 2B72  
                  l293 2910                    l285 25B2  
                  l189 227C                    l630 3B5A  
                  l542 3610                    l470 3214  
                  l454 3110                    l446 3096  
                  l390 2CAE                    l382 2B5E  
                  l358 2A6A                    l294 2612  
                  l278 25A0                    l198 20D6  
                  l615 3AB4                    l607 3A36  
                  l551 383E                    l527 340E  
                  l471 321A                    l455 3100  
                  l439 302E                    l391 2CF4  
                  l359 2A64                    l295 2616  
                  l279 256C                    l616 3AAC  
                  l560 376A                    l552 36FC  
                  l536 34C2                    l528 342E  
                  l392 2CFA                    l296 279E  
                  l641 32C6                    l609 3A2C  
                  l553 3708                    l545 3636  
                  l537 34CC                    l449 30D2  
                  l377 2AF8                    l297 2630  
                  l289 25E2                    l642 3BC6  
                  l634 3B6C                    l626 3B28  
                  l554 3712                    l546 369C  
                  l538 352A                    l490 32AE  
                  l386 2BAC                    l378 2B18  
                  l298 2638                    l635 3B7A  
                  l627 3B2E                    l571 3834  
                  l563 3782                    l547 36D4  
                  l483 32C6                    l475 326E  
                  l395 2D20                    l387 2BB6  
                  l299 26AC                    l660 3C80  
                  l580 38A4                    l548 36CE  
                  l484 3296                    l476 3226  
                  l396 2D86                    l388 2C14  
                  l645 3BE2                    l581 392A  
                  l565 3798                    l557 3752  
                  l397 2DBE                    l654 3C3E  
                  l638 3BF4                    l582 38CE  
                  l566 37B8                    l398 2DB8  
                  l639 3BAA                    l567 3800  
                  l559 378A                    l487 32A2  
                  l479 3252                    l576 3856  
                  l568 37F6                    l593 3960  
                  l585 38F4                    l577 3862  
                  l594 3968                    l578 386E  
                  l498 3304                    l659 3C7C  
                  l595 3976                    l587 3926  
                  l579 3986                    l499 3308  
                  l589 391C                    l598 39B4  
                  u150 11AC                    u420 13DE  
                  u325 1358                    u505 1578  
                  u381 13D0                    u615 16B8  
                  u535 1612                    u545 1644  
                  u465 14F2                    u580 166E  
                  u805 1878                    u725 179A  
                  u485 152C                    u815 18AE  
                  u735 17C8                    u665 171E  
                  u845 18FE                    u775 1824  
                  u945 1A44                    u995 1B28  
                  _PWM 0175             ?a_ModZgCW2 00EA  
           ?a_ModZgCW4 00EA             ?a_ModPruCW 00EA  
                  _rgl 01C9              _StartMCO3 3C4E  
            _StartMCW2 3318              _StartMCW4 2A14  
                  _tmr 0EF5      __end_of_StartMCO3 3C94  
    __end_of_StartMCW2 3346      __end_of_StartMCW4 2A4A  
                  wreg 000FE8              _StartRTdS B82E  
           _RestartMod 3DAE                   F1703 0EDA  
                 F1704 0EDB                   F1705 0EDC  
                 F1722 0EE1                   F1706 0EDD  
                 F1707 0EDE                   F1708 0EDF  
                 F1709 0EE0                   F1750 0EE9  
                 F1670 0ED9                   F1744 0EE3  
                 F1745 0EE4                   F1737 0EE2  
                 F1746 0EE5                   F1747 0EE6  
                 F1748 0EE7                   F1781 0EEC  
                 F1757 0EEA                   F1749 0EE8  
                 F1782 0EED                   F1774 0EEB  
                 F1783 0EEE                   F1784 0EEF  
                 F1785 0EF0                   F1786 0EF1  
                 F1787 0EF2     __end_of_RestartMod 3DC4  
                 u1035 1C14                   u2105 236E  
                 u2205 244E                   u1325 1FFE  
                 u1245 1ED6                   u1335 2030  
                 u1095 1CFE                   u2305 24E2  
                 u1265 1F10                   u2315 2510  
                 u3205 2DB0                   u3125 2C66  
                 u1285 1F5C                   u1640 211E  
                 u3145 2CA0                   u2505 2694  
                 u2195 241A                   u1820 2176  
                 u3165 2CEC                   u2365 2564  
                 u2375 2592                   u4305 36C6  
                 u4225 357C                   u3505 2FD4  
                 u2545 2708                   u3195 2D7E  
                 u2715 28F2                   u2635 2810  
                 u4245 35B6                   u3605 308E  
                 u3615 30C2                   u3375 2EB8  
                 u5400 3D08                   u4440 374E  
                 u4265 3602                   u3385 2EF6  
                 u2585 2782                   u1945 222C  
                 u5315 3C36                   u2675 2882  
                 u1955 226A                   u5420 3D3E  
                 u3820 3248                   u4390 3732  
                 u4535 37EE                   u4295 3694  
                 u2775 2960                   u5440 3D66  
                 u5360 3CAA                   u5425 3D38  
                 u4545 382C                   u5460 3D9C  
                 u5380 3CE0                   u3860 3264  
                 u3775 320C                   u5465 3D96  
                 u5385 3CDA                   u4775 3958  
                 u4985 3A70                   u4995 3AA4  
                 _DtCO 0120                   _DtCW 0111  
            _WriteOPWM A9CA                   _RTdS B852  
      __end_of_ClrMod2 339C        __end_of_ClrMod4 2AA8  
          ?a_ModPruCW2 00EA            ?a_ModPruCW4 00EA  
           _StartMCO1F 130E                   aldiv C49E  
                 _tmr2 0EF6                   fsr0h 000FEA  
                 indf0 000FEF                   fsr0l 000FE9  
                 fsr1l 000FE1                   fsr2l 000FD9  
                 btemp 0000                   awdiv C510  
                 awmul C57E     __end_of_StartMCO1F 13A6  
                 lwdiv C3EE        __end_of_ModDkCO 1658  
      __end_of_ModDkCW 2044                   prodl 000FF3  
                 lwmul C57E             _pwm_center 0EF3  
      __end_of_ModToCO 1D66        __end_of_ModToCW 1D5A  
      __end_of_ModZgCO 1590        __end_of_ModZgCW 1F74  
      __end_of_Moduluj 130E        __end_of_PropCO2 3BFC  
      __end_of_PropCO4 32CE        __end_of_Tmaleje 3CE4  
      __end_of_PropOPT 192A        __end_of_StartCO 1972  
      __end_of_Tnizsza 3D0C        __end_of_Trosnie 3CAE  
      __end_of_Twyzsza 3D42          __end_of_Tstoi 3CF2  
          _IncConstCO2 33D2            _IncConstCW2 33B4  
                _DtKNF 01B2    __end_of_IncConstCO2 33E2  
  __end_of_IncConstCW2 33D2          _IncConstCOCW4 2AC0  
           used_btemp0 0001             used_btemp1 0001  
           used_btemp2 0001             used_btemp3 0001  
           used_btemp4 0001             used_btemp5 0001  
           used_btemp6 0001             used_btemp7 0001  
                _Tstoi 3CE4       __end_of_TFmaleje 3DA0  
     __end_of_IncMaxCO 18BE       __end_of_IncMaxCW 25F8  
     __end_of_TFrosnie 3D6A       __end_of_ModDkCW2 36DA  
     __end_of_ModDkCW4 2DC4       __end_of_FirstPCW 1D36  
              _ClrMod2 338C                _ClrMod4 2A90  
                status 000FD8  __end_of_IncConstCOCW4 2AD0  
     __end_of_ModToCO2 33B4       __end_of_ModToCO3 3C4E  
     __end_of_ModToCO4 2AC0       __end_of_ModToCW2 33A8  
     __end_of_ModToCW3 3C46       __end_of_ModToCW4 2AB4  
     __end_of_ModZgCW2 361A       __end_of_ModZgCW4 2D04  
     __end_of_ModPruCO 17EC       __end_of_ModPruCW 246E  
     __end_of_ModPrzCO 191E       __end_of_ModPrzCW 2986  
              _ModDkCO 1590                _ModDkCW 1F74  
              _ModToCO 1D5A                _ModToCW 1D4E  
              _ModZgCO 13A6                _ModZgCW 1D92  
              _PmpToDW A37C                _PmpToUP A32C  
              _Moduluj 102E                __Lparam 00EA  
              _PropCO2 3B88                _PropCO4 327C  
              _Tmaleje 3CAE                _PropOPT 191E  
              _StartCO 192A                _Tnizsza 3CF2  
              _Trosnie 3C94       __end_of_StartCO2 3318  
     __end_of_StartCO4 2A14       __end_of_StartMCW 1A00  
              _Twyzsza 3D0C                __ramtop 1000  
       __end_of_ClrMod 1D4E         __end_of_TFstoi 3DAE  
       __end_of_PropCO 29CC         __end_of_Trowna 3D50  
          _ReadDataCO2 33E2            _ReadDataCO4 2AD0  
              _pwm_kwr 0EF4            _ReadDataCW2 33EC  
          _ReadDataCW4 2ADA    __end_of_ReadDataCO2 33EC  
  __end_of_ReadDataCO4 2ADA    __end_of_ReadDataCW2 33FE  
  __end_of_ReadDataCW4 2AEC           _IncConstCOCW 1D66  
               _ClrMod 1D36   __end_of_IncConstCOCW 1D76  
               _TFstoi 3DA0                 _PropCO 2986  
               _Trowna 3D42                 aldiv_f C5DE  
               almul_f C5B6             _ReadDataCO 1D76  
           _ReadDataCW 1D80              _IncMaxCW2 3AC4  
            _IncMaxCW4 30E2      __end_of_IncMaxCW2 3B3E  
    __end_of_IncMaxCW4 3156     __end_of_ReadDataCO 1D80  
   __end_of_ReadDataCW 1D92              _FirstPCW2 3346  
            _FirstPCW4 2A4A                 tblptrh 000FF7  
               tblptrl 000FF6      __end_of_FirstPCW2 338C  
    __end_of_FirstPCW4 2A90               _TFmaleje 3D6A  
             _IncMaxCO 17EC               _IncMaxCW 246E  
             _TFrosnie 3D50              _ModPruCW2 36DA  
            _ModPruCW4 2DC4              _ModPrzCW2 3B3E  
            _ModPrzCW4 3156      __end_of_ModPruCW2 3AC4  
    __end_of_ModPruCW4 30E2      __end_of_ModPrzCW2 3B88  
    __end_of_ModPrzCW4 327C               _ModDkCW2 361A  
             _ModDkCW4 2D04               _FirstPCW 1A00  
             _ModToCO2 33A8               _ModToCO3 3C46  
             _ModToCO4 2AB4               _ModToCW2 339C  
             _ModToCW3 3BFC               _ModToCW4 2AA8  
             _ModZgCW2 33FE               _ModZgCW4 2AEC  
             _ModPruCO 1658               _ModPruCW 2044  
             _ModPrzCO 18BE               _ModPrzCW 25F8  
