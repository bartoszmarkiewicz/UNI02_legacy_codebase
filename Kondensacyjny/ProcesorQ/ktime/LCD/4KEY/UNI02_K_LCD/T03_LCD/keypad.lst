

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Fri Nov 21 09:58:04 2014


     1                           	processor	18F65J90
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bss,global,class=RAM,space=1,delta=1
     5                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     6                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     7  000000                     
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96                           
    97                           	psect	text
    98                           ;pic18f85j90.h: 18: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
    99                           ;pic18f85j90.h: 19: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   100                           ;pic18f85j90.h: 20: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   101                           ;pic18f85j90.h: 21: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   102                           ;pic18f85j90.h: 22: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   103                           ;pic18f85j90.h: 23: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   104                           ;pic18f85j90.h: 24: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   105                           ;pic18f85j90.h: 25: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   106                           ;pic18f85j90.h: 26: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   107                           ;pic18f85j90.h: 27: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   108                           ;pic18f85j90.h: 28: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   109                           ;pic18f85j90.h: 29: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   110                           ;pic18f85j90.h: 30: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   111                           ;pic18f85j90.h: 31: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   112                           ;pic18f85j90.h: 32: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   113                           ;pic18f85j90.h: 33: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   114                           ;pic18f85j90.h: 34: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   115                           ;pic18f85j90.h: 35: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   116                           ;pic18f85j90.h: 36: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   117                           ;pic18f85j90.h: 37: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   118                           ;pic18f85j90.h: 38: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   119                           ;pic18f85j90.h: 39: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   120                           ;pic18f85j90.h: 40: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   121                           ;pic18f85j90.h: 41: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   122                           ;pic18f85j90.h: 42: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   123                           ;pic18f85j90.h: 43: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   124                           ;pic18f85j90.h: 44: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   125                           ;pic18f85j90.h: 45: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   126                           ;pic18f85j90.h: 46: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   127                           ;pic18f85j90.h: 47: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   128                           ;pic18f85j90.h: 48: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   129                           ;pic18f85j90.h: 49: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   130                           ;pic18f85j90.h: 50: static near unsigned char BS
      +                          R @ 0xFE0;
   131                           ;pic18f85j90.h: 51: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   132                           ;pic18f85j90.h: 52: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   133                           ;pic18f85j90.h: 53: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   134                           ;pic18f85j90.h: 54: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   135                           ;pic18f85j90.h: 55: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   136                           ;pic18f85j90.h: 56: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   137                           ;pic18f85j90.h: 57: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   138                           ;pic18f85j90.h: 58: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   139                           ;pic18f85j90.h: 59: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   140                           ;pic18f85j90.h: 60: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   141                           ;pic18f85j90.h: 62: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   142                           ;pic18f85j90.h: 63: static near unsigned char T0
      +                          CON @ 0xFD5;
   143                           ;pic18f85j90.h: 64: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   144                           ;pic18f85j90.h: 65: static near unsigned char LC
      +                          DREG @ 0xFD2;
   145                           ;pic18f85j90.h: 66: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   146                           ;pic18f85j90.h: 67: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   147                           ;pic18f85j90.h: 68: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   148                           ;pic18f85j90.h: 69: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   149                           ;pic18f85j90.h: 71: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   150                           ;pic18f85j90.h: 72: static near unsigned char T1
      +                          CON @ 0xFCD;
   151                           ;pic18f85j90.h: 73: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   152                           ;pic18f85j90.h: 74: static near unsigned char PR
      +                          2 @ 0xFCB;
   153                           ;pic18f85j90.h: 75: static near unsigned char T2
      +                          CON @ 0xFCA;
   154                           ;pic18f85j90.h: 76: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   155                           ;pic18f85j90.h: 77: static near unsigned char SS
      +                          PADD @ 0xFC8;
   156                           ;pic18f85j90.h: 78: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   157                           ;pic18f85j90.h: 79: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   158                           ;pic18f85j90.h: 80: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   159                           ;pic18f85j90.h: 81: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   160                           ;pic18f85j90.h: 82: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   161                           ;pic18f85j90.h: 84: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   162                           ;pic18f85j90.h: 85: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   163                           ;pic18f85j90.h: 86: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   164                           ;pic18f85j90.h: 87: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   165                           ;pic18f85j90.h: 88: static near unsigned char LC
      +                          DDATA4 @ 0xFBF;
   166                           ;pic18f85j90.h: 89: static near unsigned char LC
      +                          DDATA3 @ 0xFBE;
   167                           ;pic18f85j90.h: 90: static near unsigned char LC
      +                          DDATA2 @ 0xFBD;
   168                           ;pic18f85j90.h: 91: static near unsigned char LC
      +                          DDATA1 @ 0xFBC;
   169                           ;pic18f85j90.h: 92: static near unsigned char LC
      +                          DDATA0 @ 0xFBB;
   170                           ;pic18f85j90.h: 93: static near unsigned char LC
      +                          DSE5 @ 0xFBA;
   171                           ;pic18f85j90.h: 94: static near unsigned char LC
      +                          DSE4 @ 0xFB9;
   172                           ;pic18f85j90.h: 95: static near unsigned char LC
      +                          DSE3 @ 0xFB8;
   173                           ;pic18f85j90.h: 96: static near unsigned char LC
      +                          DSE2 @ 0xFB7;
   174                           ;pic18f85j90.h: 97: static near unsigned char LC
      +                          DSE1 @ 0xFB6;
   175                           ;pic18f85j90.h: 98: static volatile near unsigne
      +                          d char CVRCON @ 0xFB5;
   176                           ;pic18f85j90.h: 99: static volatile near unsigne
      +                          d char CMCON @ 0xFB4;
   177                           ;pic18f85j90.h: 100: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   178                           ;pic18f85j90.h: 101: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   179                           ;pic18f85j90.h: 103: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   180                           ;pic18f85j90.h: 104: static near unsigned char T
      +                          3CON @ 0xFB1;
   181                           ;pic18f85j90.h: 105: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   182                           ;pic18f85j90.h: 107: static near unsigned char S
      +                          PBRG @ 0xFAF;
   183                           ;pic18f85j90.h: 108: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   184                           ;pic18f85j90.h: 110: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   185                           ;pic18f85j90.h: 111: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   186                           ;pic18f85j90.h: 113: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   187                           ;pic18f85j90.h: 114: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   188                           ;pic18f85j90.h: 116: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   189                           ;pic18f85j90.h: 117: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   190                           ;pic18f85j90.h: 119: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   191                           ;pic18f85j90.h: 120: static volatile near unsign
      +                          ed char LCDPS @ 0xFAA;
   192                           ;pic18f85j90.h: 121: static near unsigned char L
      +                          CDSE0 @ 0xFA9;
   193                           ;pic18f85j90.h: 122: static volatile near unsign
      +                          ed char LCDCON @ 0xFA8;
   194                           ;pic18f85j90.h: 123: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   195                           ;pic18f85j90.h: 124: static volatile near unsign
      +                          ed char EECON1 @ 0xFA6;
   196                           ;pic18f85j90.h: 125: static near unsigned char I
      +                          PR3 @ 0xFA5;
   197                           ;pic18f85j90.h: 126: static volatile near unsign
      +                          ed char PIR3 @ 0xFA4;
   198  006898                     _IncKeyTimer:
   199                           ;       param _ky assigned to ?_ExxResKey+0
   200  000000                     _ExxResKey$ky	set	?_ExxResKey
   201                           ;       param _pTim assigned to ?_ExxPresKey+3
   202  000000                     _ExxPresKey$pTim	set	?_ExxPresKey+3
   203                           ;       param _dTim assigned to ?_ExxPresKey+2
   204  000000                     _ExxPresKey$dTim	set	?_ExxPresKey+2
   205                           ;       param _ky assigned to ?_ExxPresKey+0
   206  000000                     _ExxPresKey$ky	set	?_ExxPresKey
   207                           ;       param _ky assigned to ?_WaitToLowEx+0
   208  000000                     _WaitToLowEx$ky	set	?_WaitToLowEx
   209                           ;       param _ky assigned to ?_ResBufKeyEx+0
   210  000000                     _ResBufKeyEx$ky	set	?_ResBufKeyEx
   211                           ;       param _ky assigned to ?_PresKeyEX+0
   212  000000                     _PresKeyEX$ky	set	?_PresKeyEX
   213                           ;       param _ky assigned to ?_KeyTim+0
   214  000000                     _KeyTim$ky	set	?_KeyTim
   215  000000                     
   216                           ;keypad.c: 28: unsigned char i;
   217  006898  6AD9               	clrf	fsr2l,c
   218  00689A                     l3:
   219                           ;keypad.c: 31: {
   220  00689A  50D9               	movf	fsr2l,w,c
   221  00689C  0D05               	mullw	5
   222  00689E  0EA6               	movlw	low (_ky+1)
   223  0068A0  24F3               	addwf	prodl,w,c
   224  0068A2  6EE9               	movwf	fsr0l,c
   225  0068A4  0E02               	movlw	high (_ky+1)
   226  0068A6  20F4               	addwfc	prodh,w,c
   227  0068A8  6EEA               	movwf	fsr0h,c
   228  0068AA  2AEF               	incf	indf0,f,c
   229                           ;keypad.c: 33: if(ky[i].cS>9)
   230  0068AC  50D9               	movf	fsr2l,w,c
   231  0068AE  0D05               	mullw	5
   232  0068B0  0EA6               	movlw	low (_ky+1)
   233  0068B2  24F3               	addwf	prodl,w,c
   234  0068B4  6EE9               	movwf	fsr0l,c
   235  0068B6  0E02               	movlw	high (_ky+1)
   236  0068B8  20F4               	addwfc	prodh,w,c
   237  0068BA  6EEA               	movwf	fsr0h,c
   238  0068BC  50EF               	movf	indf0,w,c
   239  0068BE  6E00               	movwf	btemp,c
   240  0068C0  0E0A               	movlw	10
   241  0068C2  5C00               	subwf	btemp,w,c
   242  0068C4  E31E               	bnc	l6
   243                           ;keypad.c: 34: {
   244  0068C6  50D9               	movf	fsr2l,w,c
   245  0068C8  0D05               	mullw	5
   246  0068CA  0EA6               	movlw	low (_ky+1)
   247  0068CC  24F3               	addwf	prodl,w,c
   248  0068CE  6EE9               	movwf	fsr0l,c
   249  0068D0  0E02               	movlw	high (_ky+1)
   250  0068D2  20F4               	addwfc	prodh,w,c
   251  0068D4  6EEA               	movwf	fsr0h,c
   252  0068D6  6AEF               	clrf	indf0,c
   253                           ;keypad.c: 36: if(ky[i].dS<255) ky[i].dS++;
   254  0068D8  50D9               	movf	fsr2l,w,c
   255  0068DA  0D05               	mullw	5
   256  0068DC  0EA7               	movlw	low (_ky+2)
   257  0068DE  24F3               	addwf	prodl,w,c
   258  0068E0  6EE9               	movwf	fsr0l,c
   259  0068E2  0E02               	movlw	high (_ky+2)
   260  0068E4  20F4               	addwfc	prodh,w,c
   261  0068E6  6EEA               	movwf	fsr0h,c
   262  0068E8  50EF               	movf	indf0,w,c
   263  0068EA  6E00               	movwf	btemp,c
   264  0068EC  2800               	incf	btemp,w,c
   265  0068EE  E009               	bz	l6
   266  0068F0  50D9               	movf	fsr2l,w,c
   267  0068F2  0D05               	mullw	5
   268  0068F4  0EA7               	movlw	low (_ky+2)
   269  0068F6  24F3               	addwf	prodl,w,c
   270  0068F8  6EE9               	movwf	fsr0l,c
   271  0068FA  0E02               	movlw	high (_ky+2)
   272  0068FC  20F4               	addwfc	prodh,w,c
   273  0068FE  6EEA               	movwf	fsr0h,c
   274  006900  2AEF               	incf	indf0,f,c
   275  006902                     l6:
   276  006902  2AD9               	incf	fsr2l,f,c
   277  006904  0E06               	movlw	6
   278  006906  64D9               	cpfsgt	fsr2l,c
   279  006908  D7C8               	goto	l3
   280                           ;keypad.c: 37: }
   281  00690A  6AD9               	clrf	fsr2l,c
   282  00690C                     l8:
   283                           ;keypad.c: 64: {
   284  00690C  50D9               	movf	fsr2l,w,c
   285  00690E  0D05               	mullw	5
   286  006910  0EC9               	movlw	low (_xxky+1)
   287  006912  24F3               	addwf	prodl,w,c
   288  006914  6EE9               	movwf	fsr0l,c
   289  006916  0E02               	movlw	high (_xxky+1)
   290  006918  20F4               	addwfc	prodh,w,c
   291  00691A  6EEA               	movwf	fsr0h,c
   292  00691C  2AEF               	incf	indf0,f,c
   293                           ;keypad.c: 66: if(xxky[i].cS>9)
   294  00691E  50D9               	movf	fsr2l,w,c
   295  006920  0D05               	mullw	5
   296  006922  0EC9               	movlw	low (_xxky+1)
   297  006924  24F3               	addwf	prodl,w,c
   298  006926  6EE9               	movwf	fsr0l,c
   299  006928  0E02               	movlw	high (_xxky+1)
   300  00692A  20F4               	addwfc	prodh,w,c
   301  00692C  6EEA               	movwf	fsr0h,c
   302  00692E  50EF               	movf	indf0,w,c
   303  006930  6E00               	movwf	btemp,c
   304  006932  0E0A               	movlw	10
   305  006934  5C00               	subwf	btemp,w,c
   306  006936  E31E               	bnc	l11
   307                           ;keypad.c: 67: {
   308  006938  50D9               	movf	fsr2l,w,c
   309  00693A  0D05               	mullw	5
   310  00693C  0EC9               	movlw	low (_xxky+1)
   311  00693E  24F3               	addwf	prodl,w,c
   312  006940  6EE9               	movwf	fsr0l,c
   313  006942  0E02               	movlw	high (_xxky+1)
   314  006944  20F4               	addwfc	prodh,w,c
   315  006946  6EEA               	movwf	fsr0h,c
   316  006948  6AEF               	clrf	indf0,c
   317                           ;keypad.c: 69: if(xxky[i].dS<255) xxky[i].dS++;
   318  00694A  50D9               	movf	fsr2l,w,c
   319  00694C  0D05               	mullw	5
   320  00694E  0ECA               	movlw	low (_xxky+2)
   321  006950  24F3               	addwf	prodl,w,c
   322  006952  6EE9               	movwf	fsr0l,c
   323  006954  0E02               	movlw	high (_xxky+2)
   324  006956  20F4               	addwfc	prodh,w,c
   325  006958  6EEA               	movwf	fsr0h,c
   326  00695A  50EF               	movf	indf0,w,c
   327  00695C  6E00               	movwf	btemp,c
   328  00695E  2800               	incf	btemp,w,c
   329  006960  E009               	bz	l11
   330  006962  50D9               	movf	fsr2l,w,c
   331  006964  0D05               	mullw	5
   332  006966  0ECA               	movlw	low (_xxky+2)
   333  006968  24F3               	addwf	prodl,w,c
   334  00696A  6EE9               	movwf	fsr0l,c
   335  00696C  0E02               	movlw	high (_xxky+2)
   336  00696E  20F4               	addwfc	prodh,w,c
   337  006970  6EEA               	movwf	fsr0h,c
   338  006972  2AEF               	incf	indf0,f,c
   339  006974                     l11:
   340  006974  2AD9               	incf	fsr2l,f,c
   341  006976  0E06               	movlw	6
   342  006978  64D9               	cpfsgt	fsr2l,c
   343  00697A  D7C8               	goto	l8
   344  00697C  0C06               	retlw	6
   345                           ;keypad.c: 70: }
   346  00697E                     __end_of_IncKeyTimer:
   347                           ;       param _ky assigned to ?_StartKeyTim+0
   348  000000                     _StartKeyTim$ky	set	?_StartKeyTim
   349                           ;keypad.c: 76: void StartKeyTim(StPin *ky)
   350                           ;keypad.c: 77: {
   351  00697E  00F3               	dw	?_StartKeyTim
   352  006980                     _StartKeyTim:
   353  000000                     
   354                           ;keypad.c: 78: (*ky).cS=0;
   355                           ; _ky loaded to fsr1
   356  006980  C0F3  FFE1         	movff	?_StartKeyTim,fsr1l
   357  006984  C0F4  FFE2         	movff	?_StartKeyTim+1,fsr1h
   358  006988  EE00 F001          	lfsr	0,1
   359  00698C  50E1               	movf	fsr1l,w,c
   360  00698E  26E9               	addwf	fsr0l,f,c
   361  006990  50E2               	movf	fsr1h,w,c
   362  006992  22EA               	addwfc	fsr0h,f,c
   363  006994  6AEF               	clrf	indf0,c
   364                           ;keypad.c: 79: (*ky).dS=0;
   365  006996  EE00 F002          	lfsr	0,2
   366  00699A  50E1               	movf	fsr1l,w,c
   367  00699C  26E9               	addwf	fsr0l,f,c
   368  00699E  50E2               	movf	fsr1h,w,c
   369  0069A0  22EA               	addwfc	fsr0h,f,c
   370  0069A2  6AEF               	clrf	indf0,c
   371                           ;keypad.c: 80: }
   372  0069A4  0C00               	retlw	0
   373  0069A6                     __end_of_StartKeyTim:
   374                           ;keypad.c: 83: unsigned char KeyTim(StPin *ky)
   375                           ;keypad.c: 84: {
   376  0069A6  00F3               	dw	?_KeyTim
   377  0069A8                     _KeyTim:
   378  000000                     
   379                           ;keypad.c: 85: return (*ky).dS;
   380  0069A8  0100               	movlb	__Lparam shr (0+8)
   381  0069AA  EE00 F002          	lfsr	0,2
   382  0069AE  51F3               	movf	?_KeyTim^(__Lparam& (0+65280)),w
   383  0069B0  26E9               	addwf	fsr0l,f,c
   384  0069B2  51F4               	movf	(?_KeyTim+1)^(__Lparam& (0+65280)),w
   385  0069B4  22EA               	addwfc	fsr0h,f,c
   386  0069B6  50EF               	movf	indf0,w,c
   387  0069B8  0012               	return	
   388                           ;keypad.c: 86: }
   389  0069BA                     __end_of_KeyTim:
   390                           ;keypad.c: 129: unsigned char PresKeyEX(unsigned
      +                           char k,StPin *ky)
   391                           ;keypad.c: 130: {
   392  0069BA  00D4               	dw	?_PresKeyEX
   393  0069BC                     _PresKeyEX:
   394  000000                     
   395                           ; _k loaded to fsr1l
   396  0069BC  6EE1               	movwf	fsr1l,c
   397                           ;keypad.c: 132: (*ky).bk=(k)?1:0;
   398                           ; _ky loaded to fsr2
   399  0069BE  C0D4  FFD9         	movff	?_PresKeyEX,fsr2l
   400  0069C2  C0D5  FFDA         	movff	?_PresKeyEX+1,fsr2h
   401  0069C6  0E00               	movlw	0
   402  0069C8  6A00               	clrf	btemp,c
   403  0069CA  62E1               	cpfseq	fsr1l,c
   404  0069CC  2A00               	incf	btemp,f,c
   405  0069CE  50DF               	movf	indf2,w,c
   406  0069D0  1800               	xorwf	btemp,w,c
   407  0069D2  0BFE               	andlw	-2
   408  0069D4  1800               	xorwf	btemp,w,c
   409  0069D6  6EDF               	movwf	indf2,c
   410                           ;keypad.c: 133: switch ((*ky).krk)
   411  0069D8  D0D1               	goto	l17
   412  0069DA                     l18:
   413                           ;keypad.c: 134: {
   414                           ;keypad.c: 137: {
   415  0069DA  50DF               	movf	indf2,w,c
   416  0069DC  6E00               	movwf	btemp,c
   417  0069DE  B200               	btfsc	btemp,1,c
   418  0069E0  D016               	goto	l19
   419  0069E2  50DF               	movf	indf2,w,c
   420  0069E4  6E00               	movwf	btemp,c
   421                           ;keypad.c: 139: {
   422  0069E6  50DF               	movf	indf2,w,c
   423  0069E8  A000               	btfss	btemp,0,c
   424  0069EA  D012               	goto	L1
   425  0069EC  0BFD               	andlw	-3
   426  0069EE  0902               	iorlw	2
   427  0069F0  6EDF               	movwf	indf2,c
   428                           ;keypad.c: 141: StartKeyTim(ky);
   429  0069F2  CFD9 F0F3          	movff	fsr2l,?_StartKeyTim
   430  0069F6  CFDA F0F4          	movff	fsr2h,?_StartKeyTim+1
   431  0069FA  DFC2               	call	_StartKeyTim	;wreg free
   432                           ;keypad.c: 142: (*ky).krk=1;
   433  0069FC  EE00 F003          	lfsr	0,3
   434  006A00  50D9               	movf	fsr2l,w,c
   435  006A02  26E9               	addwf	fsr0l,f,c
   436  006A04  50DA               	movf	fsr2h,w,c
   437  006A06  22EA               	addwfc	fsr0h,f,c
   438  006A08  0E01               	movlw	1
   439  006A0A  6EEF               	movwf	indf0,c
   440                           ;keypad.c: 143: }
   441  006A0C  0C00               	retlw	0
   442  006A0E                     l19:
   443                           ;keypad.c: 144: else (*ky).sbk=((*ky).bk)?1:0;
   444  006A0E  50DF               	movf	indf2,w,c
   445  006A10                     L1:
   446  006A10  6E00               	movwf	btemp,c
   447  006A12  0E00               	movlw	0
   448  006A14  B000               	btfsc	btemp,0,c
   449  006A16  0E01               	movlw	1
   450  006A18  6E00               	movwf	btemp,c
   451  006A1A  3600               	rlcf	btemp,f,c
   452  006A1C  50DF               	movf	indf2,w,c
   453  006A1E  1800               	xorwf	btemp,w,c
   454  006A20  0BFD               	andlw	-3
   455  006A22  1800               	xorwf	btemp,w,c
   456  006A24  6EDF               	movwf	indf2,c
   457                           ;keypad.c: 145: return 0;
   458  006A26  0C00               	retlw	0
   459  006A28                     l21:
   460                           ;keypad.c: 146: }
   461                           ;keypad.c: 149: {
   462  006A28  EE10 F004          	lfsr	1,4
   463  006A2C  50D9               	movf	fsr2l,w,c
   464  006A2E  26E1               	addwf	fsr1l,f,c
   465  006A30  50DA               	movf	fsr2h,w,c
   466  006A32  22E2               	addwfc	fsr1h,f,c
   467  006A34  CFD9 F0F3          	movff	fsr2l,?_KeyTim
   468  006A38  CFDA F0F4          	movff	fsr2h,?_KeyTim+1
   469  006A3C  DFB5               	call	_KeyTim	;wreg free
   470  006A3E  6E00               	movwf	btemp,c
   471  006A40  2800               	incf	btemp,w,c
   472  006A42  6EE7               	movwf	indf1,c
   473                           ;keypad.c: 151: if((*ky).val>99) (*ky).val=99;
   474  006A44  EE00 F004          	lfsr	0,4
   475  006A48  50D9               	movf	fsr2l,w,c
   476  006A4A  26E9               	addwf	fsr0l,f,c
   477  006A4C  50DA               	movf	fsr2h,w,c
   478  006A4E  22EA               	addwfc	fsr0h,f,c
   479  006A50  50EF               	movf	indf0,w,c
   480  006A52  6E00               	movwf	btemp,c
   481  006A54  0E64               	movlw	100
   482  006A56  5C00               	subwf	btemp,w,c
   483  006A58  E308               	bnc	l22
   484  006A5A  EE00 F004          	lfsr	0,4
   485  006A5E  50D9               	movf	fsr2l,w,c
   486  006A60  26E9               	addwf	fsr0l,f,c
   487  006A62  50DA               	movf	fsr2h,w,c
   488  006A64  22EA               	addwfc	fsr0h,f,c
   489  006A66  0E63               	movlw	99
   490  006A68  6EEF               	movwf	indf0,c
   491  006A6A                     l22:
   492                           ;keypad.c: 152: if((*ky).sbk&&!(*ky).bk)
   493  006A6A  50DF               	movf	indf2,w,c
   494  006A6C  6E00               	movwf	btemp,c
   495  006A6E  A200               	btfss	btemp,1,c
   496  006A70  D037               	goto	l23
   497  006A72  50DF               	movf	indf2,w,c
   498  006A74  6E00               	movwf	btemp,c
   499  006A76  B000               	btfsc	btemp,0,c
   500  006A78  D033               	goto	l23
   501                           ;keypad.c: 153: {
   502  006A7A  0EFD               	movlw	-3
   503  006A7C  16DF               	andwf	indf2,f,c
   504                           ;keypad.c: 155: if(((*ky).val-1)<8)
   505  006A7E  EE00 F004          	lfsr	0,4
   506  006A82  50D9               	movf	fsr2l,w,c
   507  006A84  26E9               	addwf	fsr0l,f,c
   508  006A86  50DA               	movf	fsr2h,w,c
   509  006A88  22EA               	addwfc	fsr0h,f,c
   510  006A8A  50EF               	movf	indf0,w,c
   511  006A8C  6E00               	movwf	btemp,c
   512  006A8E  0FFF               	addlw	255
   513  006A90  6E02               	movwf	btemp+2,c
   514  006A92  6A03               	clrf	btemp+3,c
   515  006A94  0EFF               	movlw	255
   516  006A96  2203               	addwfc	btemp+3,f,c
   517  006A98  5003               	movf	btemp+3,w,c
   518  006A9A  0A80               	xorlw	128
   519  006A9C  0F80               	addlw	-128
   520  006A9E  0E08               	movlw	8
   521  006AA0  B4D8               	btfsc	status,2,c
   522  006AA2  5C02               	subwf	btemp+2,w,c
   523  006AA4  E208               	bc	l24
   524                           ;keypad.c: 156: {
   525  006AA6  EE00 F004          	lfsr	0,4
   526  006AAA  50D9               	movf	fsr2l,w,c
   527  006AAC  26E9               	addwf	fsr0l,f,c
   528  006AAE  50DA               	movf	fsr2h,w,c
   529  006AB0  22EA               	addwfc	fsr0h,f,c
   530  006AB2  0E64               	movlw	100
   531  006AB4  6EEF               	movwf	indf0,c
   532  006AB6                     l24:
   533                           ;keypad.c: 158: }
   534  006AB6  CFD9 F0F3          	movff	fsr2l,?_StartKeyTim
   535  006ABA  CFDA F0F4          	movff	fsr2h,?_StartKeyTim+1
   536  006ABE  DF60               	call	_StartKeyTim	;wreg free
   537                           ;keypad.c: 160: (*ky).krk=2;
   538  006AC0  EE00 F003          	lfsr	0,3
   539  006AC4  50D9               	movf	fsr2l,w,c
   540  006AC6  26E9               	addwf	fsr0l,f,c
   541  006AC8  50DA               	movf	fsr2h,w,c
   542  006ACA  22EA               	addwfc	fsr0h,f,c
   543  006ACC  0E02               	movlw	2
   544  006ACE  6EEF               	movwf	indf0,c
   545                           ;keypad.c: 161: return (*ky).val;
   546  006AD0  EE00 F004          	lfsr	0,4
   547  006AD4  50D9               	movf	fsr2l,w,c
   548  006AD6  26E9               	addwf	fsr0l,f,c
   549  006AD8  50DA               	movf	fsr2h,w,c
   550  006ADA  22EA               	addwfc	fsr0h,f,c
   551  006ADC  50EF               	movf	indf0,w,c
   552  006ADE  0012               	return	
   553  006AE0                     l23:
   554                           ;keypad.c: 162: }
   555  006AE0  EE00 F004          	lfsr	0,4
   556  006AE4  50D9               	movf	fsr2l,w,c
   557  006AE6  26E9               	addwf	fsr0l,f,c
   558  006AE8  50DA               	movf	fsr2h,w,c
   559  006AEA  22EA               	addwfc	fsr0h,f,c
   560  006AEC  50EF               	movf	indf0,w,c
   561  006AEE  0012               	return	
   562  006AF0                     l25:
   563                           ;keypad.c: 164: }
   564                           ;keypad.c: 167: {
   565  006AF0  CFD9 F0F3          	movff	fsr2l,?_KeyTim
   566  006AF4  CFDA F0F4          	movff	fsr2h,?_KeyTim+1
   567  006AF8  DF57               	call	_KeyTim	;wreg free
   568  006AFA  6E00               	movwf	btemp,c
   569  006AFC  C000  F002         	movff	btemp,btemp+2
   570  006B00  6A03               	clrf	btemp+3,c
   571  006B02  5003               	movf	btemp+3,w,c
   572  006B04  0A80               	xorlw	128
   573  006B06  0F80               	addlw	-128
   574  006B08  0E02               	movlw	2
   575  006B0A  B4D8               	btfsc	status,2,c
   576  006B0C  5C02               	subwf	btemp+2,w,c
   577  006B0E  E308               	bnc	u191
   578  006B10  50DF               	movf	indf2,w,c
   579  006B12  6E00               	movwf	btemp,c
   580  006B14  B200               	btfsc	btemp,1,c
   581  006B16  D004               	goto	u191
   582  006B18  50DF               	movf	indf2,w,c
   583  006B1A  6E00               	movwf	btemp,c
   584  006B1C  B000               	btfsc	btemp,0,c
   585  006B1E  D010               	goto	u210
   586  006B20                     u191:
   587  006B20  CFD9 F0F3          	movff	fsr2l,?_KeyTim
   588  006B24  CFDA F0F4          	movff	fsr2h,?_KeyTim+1
   589  006B28  DF3F               	call	_KeyTim	;wreg free
   590  006B2A  6E00               	movwf	btemp,c
   591  006B2C  C000  F002         	movff	btemp,btemp+2
   592  006B30  6A03               	clrf	btemp+3,c
   593  006B32  5003               	movf	btemp+3,w,c
   594  006B34  0A80               	xorlw	128
   595  006B36  0F80               	addlw	-128
   596  006B38  0E0A               	movlw	10
   597  006B3A  B4D8               	btfsc	status,2,c
   598  006B3C  5C02               	subwf	btemp+2,w,c
   599  006B3E  E308               	bnc	l26
   600  006B40                     u210:
   601                           ;keypad.c: 169: {
   602  006B40  EE00 F003          	lfsr	0,3
   603  006B44  50D9               	movf	fsr2l,w,c
   604  006B46  26E9               	addwf	fsr0l,f,c
   605  006B48  50DA               	movf	fsr2h,w,c
   606  006B4A  22EA               	addwfc	fsr0h,f,c
   607  006B4C  6AEF               	clrf	indf0,c
   608                           ;keypad.c: 171: return 0;
   609  006B4E  0C00               	retlw	0
   610  006B50                     l26:
   611                           ;keypad.c: 172: }
   612  006B50  EE00 F004          	lfsr	0,4
   613  006B54  50D9               	movf	fsr2l,w,c
   614  006B56  26E9               	addwf	fsr0l,f,c
   615  006B58  50DA               	movf	fsr2h,w,c
   616  006B5A  22EA               	addwfc	fsr0h,f,c
   617  006B5C  50EF               	movf	indf0,w,c
   618  006B5E  0012               	return	
   619  006B60                     l27:
   620                           ;keypad.c: 174: }
   621                           ;keypad.c: 176: {
   622  006B60  50DF               	movf	indf2,w,c
   623  006B62  6E00               	movwf	btemp,c
   624  006B64  B000               	btfsc	btemp,0,c
   625  006B66  0C00               	retlw	0
   626                           ;keypad.c: 178: {
   627  006B68  0EFD               	movlw	-3
   628  006B6A  16DF               	andwf	indf2,f,c
   629                           ;keypad.c: 180: (*ky).krk=0;
   630  006B6C  EE00 F003          	lfsr	0,3
   631  006B70  50D9               	movf	fsr2l,w,c
   632  006B72  26E9               	addwf	fsr0l,f,c
   633  006B74  50DA               	movf	fsr2h,w,c
   634  006B76  22EA               	addwfc	fsr0h,f,c
   635  006B78  6AEF               	clrf	indf0,c
   636                           ;keypad.c: 181: }
   637  006B7A  0C00               	retlw	0
   638  006B7C                     l17:
   639  006B7C  EE00 F003          	lfsr	0,3
   640  006B80  50D9               	movf	fsr2l,w,c
   641  006B82  26E9               	addwf	fsr0l,f,c
   642  006B84  50DA               	movf	fsr2h,w,c
   643  006B86  22EA               	addwfc	fsr0h,f,c
   644  006B88  50EF               	movf	indf0,w,c
   645  006B8A  E101 D726          	bz	l18
   646  006B8E  0A01               	xorlw	1
   647  006B90  E101 D74A          	bz	l21
   648  006B94  0A03               	xorlw	3
   649  006B96  E0AC               	bz	l25
   650  006B98  0A01               	xorlw	1
   651  006B9A  E0E2               	bz	l27
   652                           ;keypad.c: 185: return 0;
   653  006B9C  0C00               	retlw	0
   654                           ;keypad.c: 186: }
   655  006B9E                     __end_of_PresKeyEX:
   656                           ;keypad.c: 188: void ResBufKeyEx(StPin *ky)
   657                           ;keypad.c: 189: {
   658  006B9E  00D4               	dw	?_ResBufKeyEx
   659  006BA0                     _ResBufKeyEx:
   660  000000                     
   661                           ;keypad.c: 190: (*ky).sbk=0;
   662                           ; _ky loaded to fsr1
   663  006BA0  C0D4  FFE1         	movff	?_ResBufKeyEx,fsr1l
   664  006BA4  C0D5  FFE2         	movff	?_ResBufKeyEx+1,fsr1h
   665  006BA8  0EFD               	movlw	-3
   666  006BAA  16E7               	andwf	indf1,f,c
   667                           ;keypad.c: 191: (*ky).krk=0;
   668  006BAC  EE00 F003          	lfsr	0,3
   669  006BB0  50E1               	movf	fsr1l,w,c
   670  006BB2  26E9               	addwf	fsr0l,f,c
   671  006BB4  50E2               	movf	fsr1h,w,c
   672  006BB6  22EA               	addwfc	fsr0h,f,c
   673  006BB8  6AEF               	clrf	indf0,c
   674                           ;keypad.c: 192: (*ky).val=0;
   675  006BBA  EE00 F004          	lfsr	0,4
   676  006BBE  50E1               	movf	fsr1l,w,c
   677  006BC0  26E9               	addwf	fsr0l,f,c
   678  006BC2  50E2               	movf	fsr1h,w,c
   679  006BC4  22EA               	addwfc	fsr0h,f,c
   680  006BC6  6AEF               	clrf	indf0,c
   681                           ;keypad.c: 193: }
   682  006BC8  0C00               	retlw	0
   683  006BCA                     __end_of_ResBufKeyEx:
   684                           ;keypad.c: 195: void WaitToLowEx(StPin *ky)
   685                           ;keypad.c: 196: {
   686  006BCA  00D4               	dw	?_WaitToLowEx
   687  006BCC                     _WaitToLowEx:
   688  000000                     
   689                           ;keypad.c: 197: (*ky).krk=3;
   690                           ; _ky loaded to fsr1
   691  006BCC  C0D4  FFE1         	movff	?_WaitToLowEx,fsr1l
   692  006BD0  C0D5  FFE2         	movff	?_WaitToLowEx+1,fsr1h
   693  006BD4  EE00 F003          	lfsr	0,3
   694  006BD8  50E1               	movf	fsr1l,w,c
   695  006BDA  26E9               	addwf	fsr0l,f,c
   696  006BDC  50E2               	movf	fsr1h,w,c
   697  006BDE  22EA               	addwfc	fsr0h,f,c
   698  006BE0  0E03               	movlw	3
   699  006BE2  6EEF               	movwf	indf0,c
   700                           ;keypad.c: 198: (*ky).val=0;
   701  006BE4  EE00 F004          	lfsr	0,4
   702  006BE8  50E1               	movf	fsr1l,w,c
   703  006BEA  26E9               	addwf	fsr0l,f,c
   704  006BEC  50E2               	movf	fsr1h,w,c
   705  006BEE  22EA               	addwfc	fsr0h,f,c
   706  006BF0  6AEF               	clrf	indf0,c
   707                           ;keypad.c: 199: }
   708  006BF2  0C00               	retlw	0
   709  006BF4                     __end_of_WaitToLowEx:
   710                           ;keypad.c: 286: unsigned char ExxPresKey(unsigne
      +                          d char k,StPin *ky,unsigned char dTim,unsigned c
      +                          har pTim)
   711                           ;keypad.c: 287: {
   712  006BF4  00EF               	dw	?_ExxPresKey
   713  006BF6                     _ExxPresKey:
   714  000000                     
   715                           ; _k loaded to fsr1l
   716  006BF6  6EE1               	movwf	fsr1l,c
   717                           ;keypad.c: 288: (*ky).bk=(k)?1:0;
   718                           ; _ky loaded to fsr2
   719  006BF8  C0EF  FFD9         	movff	?_ExxPresKey,fsr2l
   720  006BFC  C0F0  FFDA         	movff	?_ExxPresKey+1,fsr2h
   721  006C00  0E00               	movlw	0
   722  006C02  6A00               	clrf	btemp,c
   723  006C04  62E1               	cpfseq	fsr1l,c
   724  006C06  2A00               	incf	btemp,f,c
   725  006C08  50DF               	movf	indf2,w,c
   726  006C0A  1800               	xorwf	btemp,w,c
   727  006C0C  0BFE               	andlw	-2
   728  006C0E  1800               	xorwf	btemp,w,c
   729  006C10  6EDF               	movwf	indf2,c
   730                           ;keypad.c: 290: if((*ky).fl&&(*ky).sbk&&!(*ky).b
      +                          k)
   731  006C12  50DF               	movf	indf2,w,c
   732  006C14  6E00               	movwf	btemp,c
   733  006C16  A800               	btfss	btemp,4,c
   734  006C18  D01B               	goto	l32
   735  006C1A  50DF               	movf	indf2,w,c
   736  006C1C  6E00               	movwf	btemp,c
   737  006C1E  A200               	btfss	btemp,1,c
   738  006C20  D017               	goto	l32
   739  006C22  50DF               	movf	indf2,w,c
   740  006C24  6E00               	movwf	btemp,c
   741  006C26  B000               	btfsc	btemp,0,c
   742  006C28  D013               	goto	l32
   743                           ;keypad.c: 291: {
   744  006C2A  0EEF               	movlw	-17
   745  006C2C  16DF               	andwf	indf2,f,c
   746                           ;keypad.c: 293: (*ky).sbk=((*ky).bk)?1:0;
   747  006C2E  50DF               	movf	indf2,w,c
   748  006C30  6E00               	movwf	btemp,c
   749  006C32  0E00               	movlw	0
   750  006C34  B000               	btfsc	btemp,0,c
   751  006C36  0E01               	movlw	1
   752  006C38  6E00               	movwf	btemp,c
   753  006C3A  3600               	rlcf	btemp,f,c
   754  006C3C  50DF               	movf	indf2,w,c
   755  006C3E  1800               	xorwf	btemp,w,c
   756  006C40  0BFD               	andlw	-3
   757  006C42  1800               	xorwf	btemp,w,c
   758  006C44  6EDF               	movwf	indf2,c
   759                           ;keypad.c: 294: StartKeyTim(ky);
   760  006C46  CFD9 F0F3          	movff	fsr2l,?_StartKeyTim
   761  006C4A  CFDA F0F4          	movff	fsr2h,?_StartKeyTim+1
   762  006C4E  DE98               	call	_StartKeyTim	;wreg free
   763  006C50                     l32:
   764                           ;keypad.c: 295: }
   765  006C50  50DF               	movf	indf2,w,c
   766  006C52  6E00               	movwf	btemp,c
   767  006C54  B200               	btfsc	btemp,1,c
   768  006C56  D016               	goto	l33
   769  006C58  50DF               	movf	indf2,w,c
   770  006C5A  6E00               	movwf	btemp,c
   771  006C5C  A000               	btfss	btemp,0,c
   772  006C5E  D012               	goto	l33
   773                           ;keypad.c: 297: {
   774  006C60  50DF               	movf	indf2,w,c
   775  006C62  6E00               	movwf	btemp,c
   776  006C64  0E00               	movlw	0
   777  006C66  B000               	btfsc	btemp,0,c
   778  006C68  0E01               	movlw	1
   779  006C6A  6E00               	movwf	btemp,c
   780  006C6C  3600               	rlcf	btemp,f,c
   781  006C6E  50DF               	movf	indf2,w,c
   782  006C70  1800               	xorwf	btemp,w,c
   783  006C72  0BFD               	andlw	-3
   784  006C74  1800               	xorwf	btemp,w,c
   785  006C76  6EDF               	movwf	indf2,c
   786                           ;keypad.c: 299: StartKeyTim(ky);
   787  006C78  CFD9 F0F3          	movff	fsr2l,?_StartKeyTim
   788  006C7C  CFDA F0F4          	movff	fsr2h,?_StartKeyTim+1
   789  006C80  DE7F               	call	_StartKeyTim	;wreg free
   790                           ;keypad.c: 300: return 1;
   791  006C82  0C01               	retlw	1
   792  006C84                     l33:
   793                           ;keypad.c: 301: }
   794  006C84  50DF               	movf	indf2,w,c
   795  006C86  6E00               	movwf	btemp,c
   796  006C88  B800               	btfsc	btemp,4,c
   797  006C8A  D019               	goto	l34
   798  006C8C  50DF               	movf	indf2,w,c
   799  006C8E  6E00               	movwf	btemp,c
   800  006C90  A200               	btfss	btemp,1,c
   801  006C92  D015               	goto	l34
   802  006C94  50DF               	movf	indf2,w,c
   803  006C96  6E00               	movwf	btemp,c
   804  006C98  B000               	btfsc	btemp,0,c
   805  006C9A  D011               	goto	l34
   806                           ;keypad.c: 303: {
   807  006C9C  50DF               	movf	indf2,w,c
   808  006C9E  6E00               	movwf	btemp,c
   809  006CA0  0E00               	movlw	0
   810  006CA2  B000               	btfsc	btemp,0,c
   811  006CA4  0E01               	movlw	1
   812  006CA6  6E00               	movwf	btemp,c
   813  006CA8  3600               	rlcf	btemp,f,c
   814  006CAA  50DF               	movf	indf2,w,c
   815  006CAC  1800               	xorwf	btemp,w,c
   816  006CAE  0BFD               	andlw	-3
   817  006CB0  1800               	xorwf	btemp,w,c
   818  006CB2  6EDF               	movwf	indf2,c
   819                           ;keypad.c: 305: StartKeyTim(ky);
   820  006CB4  CFD9 F0F3          	movff	fsr2l,?_StartKeyTim
   821  006CB8  CFDA F0F4          	movff	fsr2h,?_StartKeyTim+1
   822  006CBC  DE61               	call	_StartKeyTim	;wreg free
   823  006CBE                     l34:
   824                           ;keypad.c: 306: }
   825  006CBE  50DF               	movf	indf2,w,c
   826  006CC0  6E00               	movwf	btemp,c
   827  006CC2  A200               	btfss	btemp,1,c
   828  006CC4  D046               	goto	l35
   829  006CC6  50DF               	movf	indf2,w,c
   830  006CC8  6E00               	movwf	btemp,c
   831  006CCA  A000               	btfss	btemp,0,c
   832  006CCC  D042               	goto	l35
   833                           ;keypad.c: 308: {
   834  006CCE  50DF               	movf	indf2,w,c
   835  006CD0  6E00               	movwf	btemp,c
   836  006CD2  B400               	btfsc	btemp,2,c
   837  006CD4  D01E               	goto	l36
   838  006CD6  C0F1  F000         	movff	?_ExxPresKey+2,btemp
   839  006CDA  6A01               	clrf	btemp+1,c
   840  006CDC  CFD9 F0F3          	movff	fsr2l,?_KeyTim
   841  006CE0  CFDA F0F4          	movff	fsr2h,?_KeyTim+1
   842  006CE4  DE61               	call	_KeyTim	;wreg free
   843  006CE6  6E02               	movwf	btemp+2,c
   844  006CE8  C002  FFF6         	movff	btemp+2,tblptrl
   845  006CEC  6AF7               	clrf	tblptrh,c
   846  006CEE  50F7               	movf	tblptrh,w,c
   847  006CF0  0A80               	xorlw	128
   848  006CF2  6E02               	movwf	btemp+2,c
   849  006CF4  5001               	movf	btemp+1,w,c
   850  006CF6  0A80               	xorlw	128
   851  006CF8  5C02               	subwf	btemp+2,w,c
   852  006CFA  E102               	bnz	u405
   853  006CFC  5000               	movf	btemp,w,c
   854  006CFE  5CF6               	subwf	tblptrl,w,c
   855  006D00                     u405:
   856  006D00  E308               	bnc	l36
   857                           ;keypad.c: 311: {
   858  006D02  50DF               	movf	indf2,w,c
   859  006D04  0BEF               	andlw	-17
   860  006D06  0910               	iorlw	16
   861  006D08  6EDF               	movwf	indf2,c
   862                           ;keypad.c: 313: (*ky).ap=1;
   863  006D0A  50DF               	movf	indf2,w,c
   864  006D0C  0BFB               	andlw	-5
   865  006D0E  0904               	iorlw	4
   866  006D10  6EDF               	movwf	indf2,c
   867  006D12                     l36:
   868                           ;keypad.c: 314: }
   869  006D12  50DF               	movf	indf2,w,c
   870  006D14  6E00               	movwf	btemp,c
   871  006D16  A400               	btfss	btemp,2,c
   872  006D18  D01E               	goto	l38
   873  006D1A  C0F2  F000         	movff	?_ExxPresKey+3,btemp
   874  006D1E  6A01               	clrf	btemp+1,c
   875  006D20  CFD9 F0F3          	movff	fsr2l,?_KeyTim
   876  006D24  CFDA F0F4          	movff	fsr2h,?_KeyTim+1
   877  006D28  DE3F               	call	_KeyTim	;wreg free
   878  006D2A  6E02               	movwf	btemp+2,c
   879  006D2C  C002  FFF6         	movff	btemp+2,tblptrl
   880  006D30  6AF7               	clrf	tblptrh,c
   881  006D32  50F7               	movf	tblptrh,w,c
   882  006D34  0A80               	xorlw	128
   883  006D36  6E02               	movwf	btemp+2,c
   884  006D38  5001               	movf	btemp+1,w,c
   885  006D3A  0A80               	xorlw	128
   886  006D3C  5C02               	subwf	btemp+2,w,c
   887  006D3E  E102               	bnz	u435
   888  006D40  5000               	movf	btemp,w,c
   889  006D42  5CF6               	subwf	tblptrl,w,c
   890  006D44                     u435:
   891  006D44  E308               	bnc	l38
   892                           ;keypad.c: 316: {
   893  006D46  CFD9 F0F3          	movff	fsr2l,?_StartKeyTim
   894  006D4A  CFDA F0F4          	movff	fsr2h,?_StartKeyTim+1
   895  006D4E  DE18               	call	_StartKeyTim	;wreg free
   896                           ;keypad.c: 318: return 2;
   897  006D50  0C02               	retlw	2
   898                           ;keypad.c: 319: }
   899  006D52                     l35:
   900  006D52  0EFB               	movlw	-5
   901  006D54  16DF               	andwf	indf2,f,c
   902  006D56                     l38:
   903                           ;keypad.c: 321: (*ky).sbk=((*ky).bk)?1:0;
   904  006D56  50DF               	movf	indf2,w,c
   905  006D58  6E00               	movwf	btemp,c
   906  006D5A  0E00               	movlw	0
   907  006D5C  B000               	btfsc	btemp,0,c
   908  006D5E  0E01               	movlw	1
   909  006D60  6E00               	movwf	btemp,c
   910  006D62  3600               	rlcf	btemp,f,c
   911  006D64  50DF               	movf	indf2,w,c
   912  006D66  1800               	xorwf	btemp,w,c
   913  006D68  0BFD               	andlw	-3
   914  006D6A  1800               	xorwf	btemp,w,c
   915  006D6C  6EDF               	movwf	indf2,c
   916                           ;keypad.c: 322: if ((*ky).ap) return 3;
   917  006D6E  50DF               	movf	indf2,w,c
   918  006D70  6E00               	movwf	btemp,c
   919  006D72  B400               	btfsc	btemp,2,c
   920  006D74  0C03               	retlw	3
   921                           ;keypad.c: 323: return 0;
   922  006D76  0C00               	retlw	0
   923                           ;keypad.c: 324: }
   924  006D78                     __end_of_ExxPresKey:
   925                           ;keypad.c: 325: void ExxResKey(StPin *ky)
   926                           ;keypad.c: 326: {
   927  006D78  00CF               	dw	?_ExxResKey
   928  006D7A                     _ExxResKey:
   929  000000                     
   930                           ;keypad.c: 327: (*ky).bk=0;
   931                           ; _ky loaded to fsr1
   932  006D7A  C0CF  FFE1         	movff	?_ExxResKey,fsr1l
   933  006D7E  C0D0  FFE2         	movff	?_ExxResKey+1,fsr1h
   934  006D82  0EFE               	movlw	-2
   935  006D84  16E7               	andwf	indf1,f,c
   936                           ;keypad.c: 328: (*ky).sbk=0;
   937  006D86  0EFD               	movlw	-3
   938  006D88  16E7               	andwf	indf1,f,c
   939                           ;keypad.c: 329: (*ky).ap=0;
   940  006D8A  0EFB               	movlw	-5
   941  006D8C  16E7               	andwf	indf1,f,c
   942                           ;keypad.c: 330: StartKeyTim(ky);
   943  006D8E  CFE1 F0F3          	movff	fsr1l,?_StartKeyTim
   944  006D92  CFE2 F0F4          	movff	fsr1h,?_StartKeyTim+1
   945  006D96  D5F4               	goto	_StartKeyTim	;wreg free
   946                           ;keypad.c: 331: }
   947  006D98                     __end_of_ExxResKey:
   948  000000                     
   949  000000                     
   950  000000                     
   951  000000                     
   952  000000                     
   953  000000                     
   954  000000                     
   955  000000                     
   956  000000                     
   957  000000                     
   958  000000                     
   959  000000                     
   960  000000                     
   961  000000                     
   962  000000                     
   963  000000                     
   964  000000                     
   965  000000                     
   966  000000                     
   967  000000                     
   968  000000                     
   969  000000                     
   970  000000                     
   971  000000                     
   972  000000                     
   973  000000                     
   974  000000                     
   975  000000                     
   976  000000                     
   977  000000                     
   978  000000                     
   979  000000                     
   980  000000                     
   981  000000                     
   982  000000                     
   983  000000                     
   984  000000                     
   985  000000                     
   986  000000                     
   987  000000                     
   988  000000                     
   989  000000                     
   990  000000                     
   991  000000                     
   992  000000                     
   993  000000                     
   994  000000                     
   995  000000                     
   996  000000                     
   997  000000                     
   998  000000                     
   999  000000                     
  1000  000000                     
  1001  000000                     
  1002  000000                     
  1003  000000                     
  1004  000000                     
  1005  000000                     
  1006  000000                     
  1007  000000                     
  1008  000000                     
  1009  000000                     
  1010  000000                     
  1011  000000                     
  1012  000000                     
  1013  000000                     
  1014  000000                     
  1015  000000                     
  1016  000000                     
  1017  000000                     
  1018  000000                     
  1019  000000                     
  1020  000000                     
  1021  000000                     
  1022  000000                     
  1023  000000                     
  1024  000000                     
  1025  000000                     
  1026  000000                     
  1027  000000                     
  1028  000000                     
  1029  000000                     
  1030  000000                     
  1031  000000                     
  1032  000000                     
  1033  000000                     
  1034  000000                     
  1035  000000                     
  1036  000000                     
  1037  000000                     
  1038  000000                     
  1039  000000                     
  1040  000000                     
  1041  000000                     
  1042  000000                     
  1043  000000                     
  1044  000000                     
  1045  000000                     
  1046  000000                     
  1047  000000                     
  1048  000000                     
  1049  000000                     
  1050  000000                     
  1051  000000                     
  1052  000000                     
  1053  000000                     
  1054  000000                     
  1055  000000                     
  1056  000000                     
  1057  000000                     
  1058  000000                     
  1059  000000                     
  1060  000000                     
  1061  000000                     
  1062  000000                     
  1063  000000                     
  1064  000000                     
  1065  000000                     
  1066  000000                     
  1067  000000                     
  1068  000000                     
  1069  000000                     
  1070  000000                     
  1071  000000                     
  1072  000000                     
  1073  000000                     
  1074  000000                     
  1075  000000                     
  1076  000000                     
  1077  000000                     
  1078  000000                     
  1079  000000                     
  1080  000000                     
  1081  000000                     
  1082  000000                     
  1083  000000                     
  1084  000000                     
  1085  000000                     
  1086  000000                     
  1087  000000                     
  1088  000000                     
  1089  000000                     
  1090  000000                     
  1091  000000                     
  1092  000000                     
  1093  000000                     
  1094  000000                     
  1095  000000                     
  1096  000000                     
  1097  000000                     
  1098  000000                     
  1099  000000                     
  1100  000000                     
  1101  000000                     
  1102  000000                     
  1103  000000                     
  1104  000000                     
  1105  000000                     
  1106  000000                     
  1107  000000                     
  1108  000000                     
  1109  000000                     
  1110  000000                     
  1111  000000                     
  1112  000000                     
  1113  000000                     
  1114  000000                     
  1115  000000                     
  1116  000000                     
  1117  000000                     
  1118  000000                     
  1119  000000                     
  1120  000000                     
  1121  000000                     
  1122  000000                     
  1123  000000                     
  1124  000000                     
  1125  000000                     
  1126  000000                     
  1127  000000                     
  1128  000000                     
  1129  000000                     
  1130  000000                     
  1131  000000                     
  1132  000000                     
  1133  000000                     
  1134  000000                     
  1135  000000                     
  1136  000000                     
  1137  000000                     
  1138  000000                     
  1139  000000                     
  1140  000000                     
  1141  000000                     
  1142  000000                     
  1143  000000                     
  1144  000000                     
  1145  000000                     
  1146  000000                     
  1147  000000                     
  1148  000000                     
  1149  000000                     
  1150  000000                     
  1151  000000                     
  1152  000000                     
  1153  000000                     
  1154  000000                     
  1155  000000                     
  1156  000000                     
  1157  000000                     
  1158  000000                     
  1159  000000                     
  1160  000000                     
  1161  000000                     
  1162  000000                     
  1163  000000                     
  1164  000000                     
  1165  000000                     
  1166  000000                     
  1167  000000                     
  1168  000000                     
  1169  000000                     
  1170  000000                     
  1171  000000                     
  1172  000000                     
  1173  000000                     
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  1185  000000                     
  1186  000000                     
  1187  000000                     
  1188  000000                     
  1189  000000                     
  1190  000000                     
  1191  000000                     
  1192  000000                     
  1193  000000                     
  1194  000000                     
  1195  000000                     
  1196  000000                     
  1197  000000                     
  1198  000000                     
  1199  000000                     
  1200  000000                     
  1201  000000                     
  1202  000000                     
  1203  000000                     
  1204  000000                     
  1205  000000                     
  1206  000000                     
  1207  000000                     
  1208  000000                     
  1209  000000                     
  1210  000000                     
  1211  000000                     
  1212  000000                     
  1213  000000                     
  1214  000000                     
  1215  000000                     
  1216  000000                     
  1217  000000                     
  1218  000000                     
  1219  000000                     
  1220  000000                     
  1221  000000                     
  1222  000000                     
  1223  000000                     
  1224  000000                     
  1225  000000                     
  1226  000000                     
  1227  000000                     
  1228  000000                     
  1229  000000                     
  1230  000000                     
  1231  000000                     
  1232  000000                     
  1233  000000                     
  1234  000000                     
  1235  000000                     
  1236  000000                     
  1237  000000                     
  1238  000000                     
  1239  000000                     
  1240  000000                     
  1241  000000                     
  1242  000000                     
  1243  000000                     
  1244  000000                     
  1245  000000                     
  1246  000000                     
  1247  000000                     
  1248  000000                     
  1249  000000                     
  1250  000000                     
  1251  000000                     
  1252  000000                     
  1253  000000                     
  1254  000000                     
  1255  000000                     
  1256  000000                     
  1257  000000                     
  1258  000000                     
  1259  000000                     
  1260  000000                     
  1261  000000                     
  1262  000000                     
  1263  000000                     
  1264  000000                     
  1265  000000                     
  1266  000000                     
  1267  000000                     
  1268  000000                     
  1269  000000                     
  1270  000000                     
  1271  000000                     
  1272  000000                     
  1273  000000                     
  1274  000000                     
  1275  000000                     
  1276  000000                     
  1277  000000                     
  1278  000000                     
  1279  000000                     
  1280  000000                     
  1281  000000                     
  1282  000000                     
  1283  000000                     
  1284  000000                     
  1285  000000                     
  1286  000000                     
  1287  000000                     
  1288  000000                     
  1289  000000                     
  1290  000000                     
  1291  000000                     
  1292  000000                     
  1293  000000                     
  1294  000000                     
  1295  000000                     
  1296  000000                     
  1297  000000                     
  1298  000000                     
  1299  000000                     
  1300  000000                     
  1301  000000                     
  1302  000000                     
  1303  000000                     
  1304  000000                     
  1305  000000                     
  1306  000000                     
  1307  000000                     
  1308  000000                     
  1309  000000                     
  1310  000000                     
  1311  000000                     
  1312  000000                     
  1313  000000                     
  1314  000000                     
  1315  000000                     
  1316  000000                     
  1317  000000                     
  1318  000000                     
  1319  000000                     
  1320  000000                     
  1321  000000                     
  1322  000000                     
  1323  000000                     
  1324  000000                     
  1325  000000                     
  1326  000000                     
  1327  000000                     
  1328  000000                     
  1329  000000                     
  1330  000000                     
  1331  000000                     
  1332  000000                     
  1333  000000                     
  1334  000000                     
  1335  000000                     
  1336  000000                     
  1337  000000                     
  1338  000000                     
  1339  000000                     
  1340  000000                     
  1341  000000                     
  1342  000000                     
  1343  000000                     
  1344  000000                     
  1345  000000                     
  1346  000000                     
  1347  000000                     
  1348  000000                     
  1349  000000                     
  1350  000000                     
  1351  000000                     
  1352  000000                     
  1353  000000                     
  1354  000000                     
  1355  000000                     
  1356  000000                     
  1357  000000                     
  1358  000000                     
  1359  000000                     
  1360  000000                     
  1361  000000                     
  1362  000000                     
  1363  000000                     
  1364  000000                     
  1365  000000                     
  1366  000000                     
  1367  000000                     
  1368  000000                     
  1369  000000                     
  1370  000000                     
  1371  000000                     
  1372  000000                     
  1373  000000                     
  1374  000000                     
  1375  000000                     
  1376  000000                     
  1377  000000                     
  1378  000000                     
  1379  000000                     
  1380  000000                     
  1381  000000                     
  1382  000000                     
  1383  000000                     
  1384  000000                     
  1385  000000                     
  1386  000000                     
  1387  000000                     
  1388  000000                     
  1389  000000                     
  1390  000000                     
  1391  000000                     
  1392  000000                     
  1393  000000                     
  1394  000000                     
  1395  000000                     
  1396  000000                     
  1397  000000                     
  1398  000000                     
  1399  000000                     
  1400  000000                     
  1401  000000                     
  1402  000000                     
  1403  000000                     
  1404  000000                     
  1405  000000                     
  1406  000000                     
  1407  000000                     
  1408  000000                     
  1409  000000                     
  1410  000000                     
  1411  000000                     
  1412  000000                     
  1413  000000                     
  1414  000000                     
  1415  000000                     
  1416  000000                     
  1417  000000                     
  1418  000000                     
  1419  000000                     
  1420  000000                     
  1421  000000                     
  1422  000000                     
  1423  000000                     
  1424  000000                     
  1425  000000                     
  1426  000000                     
  1427  000000                     
  1428  000000                     
  1429  000000                     
  1430  000000                     
  1431  000000                     
  1432  000000                     
  1433  000000                     
  1434  000000                     
  1435  000000                     
  1436  000000                     
  1437  000000                     
  1438  000000                     
  1439  000000                     
  1440  000000                     
  1441  000000                     
  1442  000000                     
  1443  000000                     
  1444  000000                     
  1445  000000                     
  1446  000000                     
  1447  000000                     
  1448  000000                     
  1449  000000                     
  1450  000000                     
  1451  000000                     
  1452  000000                     
  1453  000000                     
  1454  000000                     
  1455  000000                     
  1456  000000                     
  1457  000000                     
  1458  000000                     
  1459  000000                     
  1460  000000                     
  1461  000000                     
  1462  000000                     
  1463  000000                     
  1464  000000                     
  1465  000000                     
  1466  000000                     
  1467  000000                     
  1468  000000                     
  1469  000000                     
  1470  000000                     
  1471  000000                     
  1472  000000                     
  1473  000000                     
  1474  000000                     
  1475  000000                     
  1476  000000                     
  1477  000000                     
  1478  000000                     
  1479  000000                     
  1480  000000                     
  1481  000000                     
  1482  000000                     
  1483  000000                     
  1484  000000                     
  1485  000000                     
  1486  000000                     
  1487  000000                     
  1488  000000                     
  1489  000000                     
  1490  000000                     
  1491  000000                     
  1492  000000                     
  1493  000000                     
  1494  000000                     
  1495  000000                     
  1496  000000                     
  1497  000000                     
  1498  000000                     
  1499  000000                     
  1500  000000                     
  1501  000000                     
  1502  000000                     
  1503  000000                     
  1504  000000                     
  1505  000000                     
  1506  000000                     
  1507  000000                     
  1508  000000                     
  1509  000000                     
  1510  000000                     
  1511  000000                     
  1512  000000                     
  1513  000000                     
  1514  000000                     
  1515  000000                     
  1516  000000                     
  1517  000000                     
  1518  000000                     
  1519  000000                     
  1520  000000                     
  1521  000000                     
  1522  000000                     
  1523  000000                     
  1524  000000                     
  1525  000000                     
  1526  000000                     
  1527  000000                     
  1528  000000                     
  1529  000000                     
  1530  000000                     
  1531  000000                     
  1532  000000                     
  1533  000000                     
  1534  000000                     
  1535  000000                     
  1536  000000                     
  1537  000000                     
  1538  000000                     
  1539  000000                     
  1540  000000                     
  1541  000000                     
  1542  000000                     
  1543  000000                     
  1544  000000                     
  1545  000000                     
  1546  000000                     
  1547  000000                     
  1548  000000                     
  1549  000000                     
  1550  000000                     
  1551  000000                     
  1552  000000                     
  1553  000000                     
  1554  000000                     
  1555  000000                     
  1556  000000                     
  1557  000000                     
  1558  000000                     
  1559  000000                     
  1560  000000                     
  1561  000000                     
  1562  000000                     
  1563  000000                     
  1564  000000                     
  1565  000000                     
  1566  000000                     
  1567  000000                     
  1568  000000                     
  1569  000000                     
  1570  000000                     
  1571  000000                     
  1572  000000                     
  1573  000000                     
  1574  000000                     
  1575  000000                     
  1576  000000                     
  1577  000000                     
  1578  000000                     
  1579  000000                     
  1580  000000                     
  1581  000000                     
  1582  000000                     
  1583  000000                     
  1584  000000                     
  1585  000000                     
  1586  000000                     
  1587  000000                     
  1588  000000                     
  1589  000000                     
  1590  000000                     
  1591  000000                     
  1592  000000                     
  1593  000000                     
  1594  000000                     
  1595  000000                     
  1596  000000                     
  1597  000000                     
  1598  000000                     
  1599  000000                     
  1600  000000                     
  1601  000000                     
  1602  000000                     
  1603  000000                     
  1604  000000                     
  1605  000000                     
  1606  000000                     
  1607  000000                     
  1608  000000                     
  1609  000000                     
  1610  000000                     
  1611  000000                     
  1612  000000                     
  1613  000000                     
  1614  000000                     
  1615  000000                     
  1616  000000                     
  1617  000000                     
  1618  000000                     
  1619  000000                     
  1620  000000                     
  1621  000000                     
  1622  000000                     
  1623  000000                     
  1624  000000                     
  1625  000000                     
  1626  000000                     
  1627  000000                     
  1628  000000                     
  1629  000000                     
  1630  000000                     
  1631  000000                     
  1632  000000                     
  1633  000000                     
  1634  000000                     
  1635  000000                     
  1636  000000                     
  1637  000000                     
  1638  000000                     
  1639  000000                     
  1640  000000                     
  1641  000000                     
  1642  000000                     
  1643  000000                     
  1644  000000                     
  1645  000000                     
  1646  000000                     
  1647  000000                     
  1648  000000                     
  1649  000000                     
  1650  000000                     
  1651  000000                     
  1652  000000                     
  1653  000000                     
  1654  000000                     
  1655  000000                     
  1656  000000                     
  1657  000000                     
  1658  000000                     
  1659  000000                     
  1660  000000                     
  1661  000000                     
  1662  000000                     
  1663  000000                     
  1664  000000                     
  1665  000000                     
  1666  000000                     
  1667  000000                     
  1668  000000                     
  1669  000000                     
  1670  000000                     
  1671  000000                     
  1672  000000                     
  1673  000000                     
  1674  000000                     
  1675  000000                     
  1676  000000                     
  1677  000000                     
  1678  000000                     
  1679  000000                     
  1680  000000                     
  1681  000000                     
  1682  000000                     
  1683  000000                     
  1684  000000                     
  1685  000000                     
  1686  000000                     
  1687  000000                     
  1688  000000                     
  1689  000000                     
  1690  000000                     
  1691  000000                     
  1692  000000                     
  1693  000000                     
  1694  000000                     
  1695  000000                     
  1696  000000                     
  1697  000000                     
  1698  000000                     
  1699  000000                     
  1700  000000                     
  1701  000000                     
  1702  000000                     
  1703  000000                     
  1704  000000                     
  1705  000000                     
  1706  000000                     
  1707  000000                     
  1708  000000                     
  1709  000000                     
  1710  000000                     
  1711  000000                     
  1712  000000                     
  1713  000000                     
  1714  000000                     
  1715  000000                     
  1716  000000                     
  1717  000000                     
  1718  000000                     
  1719  000000                     
  1720  000000                     
  1721  000000                     
  1722  000000                     
  1723  000000                     
  1724  000000                     
  1725  000000                     
  1726                           
  1727                           	psect	bss
  1728  0002A5                     _ky:
  1729  0002A5                     	ds	35
  1730  0002A5                     _xxky:
  1731  0002A5                     	ds	35
  1732                           
  1733                           	psect	temp
  1734  000000                     btemp:
  1735  000000                     	ds	4
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           prodh	equ	0xFF4
  1739                           prodl	equ	0xFF3
  1740                           indf0	equ	0xFEF
  1741                           fsr0h	equ	0xFEA
  1742                           fsr0l	equ	0xFE9
  1743                           indf1	equ	0xFE7
  1744                           fsr1h	equ	0xFE2
  1745                           fsr1l	equ	0xFE1
  1746                           indf2	equ	0xFDF
  1747                           fsr2h	equ	0xFDA
  1748                           fsr2l	equ	0xFD9
  1749                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Fri Nov 21 09:58:04 2014

                  l3 689A                    l6 6902  
                  l8 690C            _PresKeyEX 69BC  
                 l11 6974                   l21 6A28  
                 l22 6A6A                   l23 6AE0  
                 l32 6C50                   l24 6AB6  
                 l33 6C84                   l25 6AF0  
                 l17 6B7C                   l34 6CBE  
                 l26 6B50                   l18 69DA  
                 l35 6D52                   l27 6B60  
                 l19 6A0E                   l36 6D12  
                 l38 6D56    __end_of_PresKeyEX 6B9E  
                 _ky 02A5           ?_PresKeyEX 00D4  
                u210 6B40                  u405 6D00  
                u191 6B20                  u435 6D44  
        _WaitToLowEx 6BCC  __end_of_WaitToLowEx 6BF4  
               fsr0h 000FEA                 fsr1h 000FE2  
               indf0 000FEF                 fsr0l 000FE9  
               indf1 000FE7                 fsr1l 000FE1  
               indf2 000FDF                 fsr2l 000FD9  
               btemp 0000                 _xxky 02C8  
               prodh 000FF4                 prodl 000FF3  
            ?_KeyTim 00F3         ?_WaitToLowEx 00D4  
        _IncKeyTimer 6898           used_btemp0 0001  
         used_btemp1 0001           used_btemp2 0001  
         used_btemp3 0001  __end_of_IncKeyTimer 697E  
              status 000FD8          _StartKeyTim 6980  
__end_of_StartKeyTim 69A6              __Lparam 00CF  
            __ramtop 0800         ?_StartKeyTim 00F3  
     __end_of_KeyTim 69BA               _KeyTim 69A8  
        _ResBufKeyEx 6BA0  __end_of_ResBufKeyEx 6BCA  
             tblptrh 000FF7               tblptrl 000FF6  
         _ExxPresKey 6BF6   __end_of_ExxPresKey 6D78  
          _ExxResKey 6D7A    __end_of_ExxResKey 6D98  
        ?_ExxPresKey 00EF           ?_ExxResKey 00CF  
       ?_ResBufKeyEx 00D4  
