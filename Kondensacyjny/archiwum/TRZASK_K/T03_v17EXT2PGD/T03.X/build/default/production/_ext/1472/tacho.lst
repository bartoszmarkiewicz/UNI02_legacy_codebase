

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Mon Sep 14 17:33:14 2020


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	bigdata,global,class=BIGRAM,space=1,delta
      +                          =1
     4                           	psect	ibigdata,global,class=CODE,delta=1
     5                           	psect	text,global,reloc=2,class=CODE,delta=1
     6                           	psect	rbit,global,bit,common,class=COMRAM,space
      +                          =1,delta=1
     7                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     8                           	psect	bss,global,class=RAM,space=1,delta=1
     9                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100                           
   101                           	psect	bigdata
   102                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   103                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   104                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   105                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   106                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   107                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   108                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   109                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   110                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   111                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   112                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   113                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   114                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   115                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   116                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   117                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   118                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   119                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   120                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   121                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   122                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   123                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   124                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   125                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   126                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   127                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   128                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   129                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   130                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   131                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   132                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   133                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   134                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   135                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   136                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   137                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   138                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   139                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   140                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   141                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   142                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   143                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   144                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   145                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   146                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   147                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   148                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   149                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   150                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   151                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   152                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   153                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   154                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   155                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   156                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   157                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   158                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   159                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   160                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   161                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   162                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   163                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   164                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   165                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   166                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   167                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   168                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   169                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   170                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   171                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   172                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   173                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   174                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   175                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   176                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   177                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   178                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   179                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   180                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   181                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   182                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   183                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   184                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   185                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   186                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   187                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   188                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   189                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   190                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   191                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   192                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   193                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   194                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   195                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   196                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   197                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   198                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   199                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   200                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   201                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   202  000E5F                     _nokrobr:
   203  000E5F                     	ds	1
   204                           
   205                           	psect	ibigdata
   206  00111E  02                 	db	2
   207                           
   208                           	psect	text
   209                           ;tacho.c: 26: unsigned char nokrobr=2;
   210                           ;tacho.c: 27: bit stn,new,zero;
   211                           ;tacho.c: 29: unsigned char tkrk=0;
   212                           ;tacho.c: 30: volatile signed int wvv[12];
   213                           ;tacho.c: 31: volatile signed int wv[12];
   214                           ;tacho.c: 32: volatile unsigned int VDoc;
   215                           ;tacho.c: 33: volatile signed long ddDVNT,v_ddt;
   216                           ;tacho.c: 34: volatile signed int DVNT,dDVNT,tdD
      +                          VNT,v_t,v_dt,v_tdt;
   217                           ;tacho.c: 37: volatile unsigned int zr0,ni0,ip0,
      +                          in0,bin0,nw0,tm0;
   218                           ;tacho.c: 40: void ClrTachoDta(void)
   219                           ;tacho.c: 41: {
   220  00D6D6                     _ClrTachoDta:
   221                           ;       param _t assigned to ?_Vwyzsza+0
   222  000000                     _Vwyzsza$t	set	?_Vwyzsza
   223                           ;       param _t assigned to ?_Vnizsza+0
   224  000000                     _Vnizsza$t	set	?_Vnizsza
   225                           ;       param _t assigned to ?_Vmaleje+0
   226  000000                     _Vmaleje$t	set	?_Vmaleje
   227                           ;	_www assigned to ?a_FltParVNT+0
   228  000000                     _FltParVNT$www	set	?a_FltParVNT
   229                           ;	_w assigned to ?a_PredkoscZmianVNT+0
   230  000000                     _PredkoscZmianVNT$w	set	?a_PredkoscZmianVNT
   231                           ;	_wnk2 assigned to ?a_PomiarVNT+2
   232  000000                     _PomiarVNT$wnk2	set	?a_PomiarVNT+2
   233                           ;	_wnk assigned to ?a_PomiarVNT+0
   234  000000                     _PomiarVNT$wnk	set	?a_PomiarVNT
   235                           ;       param _wnk assigned to ?_TFlt+0
   236  000000                     _TFlt$wnk	set	?_TFlt
   237                           ;	_wb assigned to ?a_HistVal+0
   238  000000                     _HistVal$wb	set	?a_HistVal
   239                           ;       param _ndat assigned to ?_HistVal+2
   240  000000                     _HistVal$ndat	set	?_HistVal+2
   241                           ;       param _tbb assigned to ?_HistVal+0
   242  000000                     _HistVal$tbb	set	?_HistVal
   243                           ;	_tmx assigned to ?a_FindPropVal+22
   244  000000                     _FindPropVal$tmx	set	?a_FindPropVal+22
   245                           ;	_wb assigned to ?a_FindPropVal+2
   246  000000                     _FindPropVal$wb	set	?a_FindPropVal+2
   247                           ;	_min assigned to ?a_FindPropVal+0
   248  000000                     _FindPropVal$min	set	?a_FindPropVal
   249                           ;       param _ndat assigned to ?_FindPropVal+2
   250  000000                     _FindPropVal$ndat	set	?_FindPropVal+2
   251                           ;       param _tbb assigned to ?_FindPropVal+0
   252  000000                     _FindPropVal$tbb	set	?_FindPropVal
   253                           ;       param _wnk assigned to ?_AddTab+3
   254  000000                     _AddTab$wnk	set	?_AddTab+3
   255                           ;       param _ndat assigned to ?_AddTab+2
   256  000000                     _AddTab$ndat	set	?_AddTab+2
   257  000000                     
   258                           ;	_i assigned to ?a_ClrTachoDta+0
   259  000000                     _ClrTachoDta$i	set	?a_ClrTachoDta
   260                           ;tacho.c: 42: volatile unsigned char i;
   261  00D6D6  EE02  F022         	lfsr	0,_wynik
   262  00D6DA  6AEE               	clrf	postinc0,c
   263  00D6DC  6AEE               	clrf	postinc0,c
   264                           ;tacho.c: 45: stn=0;
   265  00D6DE  9259               	bcf	_stn/(0+8),_stn& (0+7),c
   266                           ;tacho.c: 46: new=0;
   267  00D6E0  9059               	bcf	_new/(0+8),_new& (0+7),c
   268                           ;tacho.c: 47: zero=0;
   269  00D6E2  9459               	bcf	_zero/(0+8),_zero& (0+7),c
   270                           ;tacho.c: 48: zr0=0;
   271  00D6E4  EE02  F024         	lfsr	0,_zr0	;volatile
   272  00D6E8  6AEE               	clrf	postinc0,c
   273  00D6EA  6AEE               	clrf	postinc0,c
   274                           ;tacho.c: 49: ni0=0;
   275  00D6EC  EE02  F014         	lfsr	0,_ni0	;volatile
   276  00D6F0  6AEE               	clrf	postinc0,c
   277  00D6F2  6AEE               	clrf	postinc0,c
   278                           ;tacho.c: 50: ip0=0;
   279  00D6F4  EE02  F012         	lfsr	0,_ip0	;volatile
   280  00D6F8  6AEE               	clrf	postinc0,c
   281  00D6FA  6AEE               	clrf	postinc0,c
   282                           ;tacho.c: 51: in0=0;
   283  00D6FC  EE02  F010         	lfsr	0,_in0	;volatile
   284  00D700  6AEE               	clrf	postinc0,c
   285  00D702  6AEE               	clrf	postinc0,c
   286                           ;tacho.c: 52: bin0=0;
   287  00D704  EE02  F00C         	lfsr	0,_bin0	;volatile
   288  00D708  6AEE               	clrf	postinc0,c
   289  00D70A  6AEE               	clrf	postinc0,c
   290                           ;tacho.c: 53: nw0=0;
   291  00D70C  EE02  F016         	lfsr	0,_nw0	;volatile
   292  00D710  6AEE               	clrf	postinc0,c
   293  00D712  6AEE               	clrf	postinc0,c
   294                           ;tacho.c: 54: tm0=0;
   295  00D714  EE02  F01A         	lfsr	0,_tm0	;volatile
   296  00D718  6AEE               	clrf	postinc0,c
   297  00D71A  6AEE               	clrf	postinc0,c
   298                           ;tacho.c: 55: tkrk=0;
   299  00D71C  010F               	movlb	_tkrk shr (0+8)
   300  00D71E  6B3B               	clrf	_tkrk& (0+255),b
   301                           ;tacho.c: 56: for(i=0;i<20;i++)
   302  00D720  0100               	movlb	__Lparam shr (0+8)
   303  00D722  6BA9               	clrf	?a_ClrTachoDta^(__Lparam& (0+65280)),b	;vo
      +                          latile
   304  00D724  D016               	goto	L2
   305  00D726                     l7:
   306                           ;tacho.c: 57: {
   307  00D726  0100               	movlb	__Lparam shr (0+8)
   308  00D728  51A9               	movf	?a_ClrTachoDta^(__Lparam& (0+65280)),w	;vo
      +                          latile
   309  00D72A  0D02               	mullw	2
   310  00D72C  0E5E               	movlw	low _tnp
   311  00D72E  24F3               	addwf	prodl,w,c
   312  00D730  6EE9               	movwf	fsr0l,c
   313  00D732  0E02               	movlw	high _tnp
   314  00D734  20F4               	addwfc	prodh,w,c
   315  00D736  6EEA               	movwf	fsr0h,c
   316  00D738  6AEE               	clrf	postinc0,c
   317  00D73A  6AED               	clrf	postdec0,c
   318                           ;tacho.c: 59: tvv[i]=0;
   319  00D73C  51A9               	movf	?a_ClrTachoDta^(__Lparam& (0+65280)),w	;vo
      +                          latile
   320  00D73E  0D02               	mullw	2
   321  00D740  0E86               	movlw	low _tvv
   322  00D742  24F3               	addwf	prodl,w,c
   323  00D744  6EE9               	movwf	fsr0l,c
   324  00D746  0E02               	movlw	high _tvv
   325  00D748  20F4               	addwfc	prodh,w,c
   326  00D74A  6EEA               	movwf	fsr0h,c
   327  00D74C  6AEE               	clrf	postinc0,c
   328  00D74E  6AED               	clrf	postdec0,c
   329  00D750  2BA9               	incf	?a_ClrTachoDta^(__Lparam& (0+65280)),f,b	;
      +                          volatile
   330  00D752                     L2:
   331  00D752  0E13               	movlw	19
   332  00D754  65A9               	cpfsgt	?a_ClrTachoDta^(__Lparam& (0+65280)),b	;
      +                          volatile
   333  00D756  D7E7               	goto	l7
   334                           ;tacho.c: 60: }
   335  00D758  0100               	movlb	__Lparam shr (0+8)
   336  00D75A  6BA9               	clrf	?a_ClrTachoDta^(__Lparam& (0+65280)),b	;vo
      +                          latile
   337  00D75C  D016               	goto	L3
   338  00D75E                     l10:
   339                           ;tacho.c: 62: {
   340  00D75E  0100               	movlb	__Lparam shr (0+8)
   341  00D760  51A9               	movf	?a_ClrTachoDta^(__Lparam& (0+65280)),w	;vo
      +                          latile
   342  00D762  0D02               	mullw	2
   343  00D764  0E46               	movlw	low _wvv
   344  00D766  24F3               	addwf	prodl,w,c
   345  00D768  6EE9               	movwf	fsr0l,c
   346  00D76A  0E02               	movlw	high _wvv
   347  00D76C  20F4               	addwfc	prodh,w,c
   348  00D76E  6EEA               	movwf	fsr0h,c
   349  00D770  6AEE               	clrf	postinc0,c
   350  00D772  6AED               	clrf	postdec0,c
   351                           ;tacho.c: 64: wv[i]=0;
   352  00D774  51A9               	movf	?a_ClrTachoDta^(__Lparam& (0+65280)),w	;vo
      +                          latile
   353  00D776  0D02               	mullw	2
   354  00D778  0E2E               	movlw	low _wv
   355  00D77A  24F3               	addwf	prodl,w,c
   356  00D77C  6EE9               	movwf	fsr0l,c
   357  00D77E  0E02               	movlw	high _wv
   358  00D780  20F4               	addwfc	prodh,w,c
   359  00D782  6EEA               	movwf	fsr0h,c
   360  00D784  6AEE               	clrf	postinc0,c
   361  00D786  6AED               	clrf	postdec0,c
   362  00D788  2BA9               	incf	?a_ClrTachoDta^(__Lparam& (0+65280)),f,b	;
      +                          volatile
   363  00D78A                     L3:
   364  00D78A  0E0B               	movlw	11
   365  00D78C  65A9               	cpfsgt	?a_ClrTachoDta^(__Lparam& (0+65280)),b	;
      +                          volatile
   366  00D78E  D7E7               	goto	l10
   367                           ;tacho.c: 65: }
   368  00D790  EE02  F00A         	lfsr	0,_VDoc	;volatile
   369  00D794  6AEE               	clrf	postinc0,c
   370  00D796  6AEE               	clrf	postinc0,c
   371                           ;tacho.c: 67: M.rVVNT=0;
   372  00D798  EE03  F025         	lfsr	0,_M+31
   373  00D79C  6AEE               	clrf	postinc0,c
   374  00D79E  6AEE               	clrf	postinc0,c
   375                           ;tacho.c: 68: M.VVNT=0;
   376  00D7A0  0103               	movlb	(_M+30) shr (0+8)
   377  00D7A2  6B24               	clrf	(_M+30)& (0+255),b
   378                           ;tacho.c: 69: }
   379  00D7A4  0012               	return	
   380  00D7A6                     __end_of_ClrTachoDta:
   381                           ;tacho.c: 74: void IntTacho(void)
   382                           ;tacho.c: 75: {
   383  00D7A6                     _IntTacho:
   384  000000                     
   385                           ;tacho.c: 76: if(ip0<4*1000) ip0++;
   386  00D7A6  0102               	movlb	_ip0 shr (0+8)	;volatile
   387  00D7A8  0E0F               	movlw	15
   388  00D7AA  5D13               	subwf	(_ip0+1)& (0+255),w,b	;volatile
   389  00D7AC  0EA0               	movlw	160
   390  00D7AE  B4D8               	btfsc	status,2,c
   391  00D7B0  5D12               	subwf	_ip0& (0+255),w,b	;volatile
   392  00D7B2  E202               	bc	l14
   393  00D7B4  4B12               	infsnz	_ip0& (0+255),f,b	;volatile
   394  00D7B6  2B13               	incf	(_ip0+1)& (0+255),f,b	;volatile
   395  00D7B8                     l14:
   396                           ;tacho.c: 77: if(ip0>=4*1000)
   397  00D7B8  0102               	movlb	_ip0 shr (0+8)	;volatile
   398  00D7BA  0E0F               	movlw	15
   399  00D7BC  5D13               	subwf	(_ip0+1)& (0+255),w,b	;volatile
   400  00D7BE  0EA0               	movlw	160
   401  00D7C0  B4D8               	btfsc	status,2,c
   402  00D7C2  5D12               	subwf	_ip0& (0+255),w,b	;volatile
   403  00D7C4  A0D8               	btfss	status,0,c
   404  00D7C6  0012               	return	
   405                           ;tacho.c: 78: {
   406  00D7C8  0E01               	movlw	1
   407  00D7CA  6F24               	movwf	_zr0& (0+255),b	;volatile
   408  00D7CC  6B25               	clrf	(_zr0+1)& (0+255),b	;volatile
   409                           ;tacho.c: 80: nw0=1;
   410  00D7CE  6F16               	movwf	_nw0& (0+255),b	;volatile
   411  00D7D0  6B17               	clrf	(_nw0+1)& (0+255),b	;volatile
   412                           ;tacho.c: 81: }
   413  00D7D2  0C00               	retlw	0
   414  00D7D4                     __end_of_IntTacho:
   415                           ;tacho.c: 87: unsigned char IntINT0(void)
   416                           ;tacho.c: 88: {
   417  00D7D4                     _IntINT0:
   418  000000                     
   419                           ;tacho.c: 89: if(zr0)
   420  00D7D4  0102               	movlb	_zr0 shr (0+8)	;volatile
   421  00D7D6  5124               	movf	_zr0& (0+255),w,b	;volatile
   422  00D7D8  1125               	iorwf	(_zr0+1)& (0+255),w,b	;volatile
   423  00D7DA  E011               	bz	l17
   424                           ;tacho.c: 90: {
   425  00D7DC  90B1               	bcf	4017,0,c
   426                           ;tacho.c: 92: zr0=0;
   427  00D7DE  EE02  F024         	lfsr	0,_zr0	;volatile
   428  00D7E2  6AEE               	clrf	postinc0,c
   429  00D7E4  6AEE               	clrf	postinc0,c
   430                           ;tacho.c: 93: ip0=0;
   431  00D7E6  EE02  F012         	lfsr	0,_ip0	;volatile
   432  00D7EA  6AEE               	clrf	postinc0,c
   433  00D7EC  6AEE               	clrf	postinc0,c
   434                           ;tacho.c: 94: ni0=DtKNF.nokr;
   435  00D7EE  C2C4  F214         	movff	_DtKNF+22,_ni0	;volatile
   436  00D7F2  6B15               	clrf	(_ni0+1)& (0+255),b	;volatile
   437                           ;tacho.c: 95: nw0=0;
   438  00D7F4  EE02  F016         	lfsr	0,_nw0	;volatile
   439  00D7F8  6AEE               	clrf	postinc0,c
   440  00D7FA  6AEE               	clrf	postinc0,c
   441                           ;tacho.c: 96: return 1;
   442  00D7FC  0C01               	retlw	1
   443  00D7FE                     l17:
   444                           ;tacho.c: 98: else
   445  00D7FE  0102               	movlb	_ni0 shr (0+8)	;volatile
   446  00D800  5114               	movf	_ni0& (0+255),w,b	;volatile
   447  00D802  1115               	iorwf	(_ni0+1)& (0+255),w,b	;volatile
   448  00D804  E004               	bz	l19
   449  00D806  0714               	decf	_ni0& (0+255),f,b	;volatile
   450  00D808  0E00               	movlw	0
   451  00D80A  5B15               	subwfb	(_ni0+1)& (0+255),f,b	;volatile
   452  00D80C  0C00               	retlw	0
   453  00D80E                     l19:
   454                           ;tacho.c: 101: else
   455  00D80E  90B1               	bcf	4017,0,c
   456                           ;tacho.c: 104: if(!nw0)
   457  00D810  0102               	movlb	_nw0 shr (0+8)	;volatile
   458  00D812  5116               	movf	_nw0& (0+255),w,b	;volatile
   459  00D814  1117               	iorwf	(_nw0+1)& (0+255),w,b	;volatile
   460  00D816  E117               	bnz	l21
   461                           ;tacho.c: 105: {
   462  00D818  C212  F000         	movff	_ip0,btemp	;volatile
   463  00D81C  C213  F001         	movff	_ip0+1,btemp+1	;volatile
   464  00D820  C20C  FFE8         	movff	_bin0,wreg	;volatile
   465  00D824  2400               	addwf	btemp,w,c
   466  00D826  6E02               	movwf	btemp+2,c
   467  00D828  C20D  FFE8         	movff	_bin0+1,wreg	;volatile
   468  00D82C  2001               	addwfc	btemp+1,w,c
   469  00D82E  6E03               	movwf	btemp+3,c
   470  00D830  90D8               	bcf	status,0,c
   471  00D832  3003               	rrcf	btemp+3,w,c
   472  00D834  CFE8 F211          	movff	wreg,_in0+1	;volatile
   473  00D838  3002               	rrcf	btemp+2,w,c
   474  00D83A  CFE8 F210          	movff	wreg,_in0	;volatile
   475                           ;tacho.c: 107: bin0=in0;
   476  00D83E  C210  F20C         	movff	_in0,_bin0	;volatile
   477  00D842  C211  F20D         	movff	_in0+1,_bin0+1	;volatile
   478  00D846                     l21:
   479                           ;tacho.c: 108: }
   480  00D846  0102               	movlb	_nw0 shr (0+8)	;volatile
   481  00D848  0E01               	movlw	1
   482  00D84A  6F16               	movwf	_nw0& (0+255),b	;volatile
   483  00D84C  6B17               	clrf	(_nw0+1)& (0+255),b	;volatile
   484                           ;tacho.c: 110: ip0=0;
   485  00D84E  EE02  F012         	lfsr	0,_ip0	;volatile
   486  00D852  6AEE               	clrf	postinc0,c
   487  00D854  6AEE               	clrf	postinc0,c
   488                           ;tacho.c: 111: ni0=DtKNF.nokr;
   489  00D856  C2C4  F214         	movff	_DtKNF+22,_ni0	;volatile
   490  00D85A  6B15               	clrf	(_ni0+1)& (0+255),b	;volatile
   491                           ;tacho.c: 112: return 1;
   492  00D85C  0C01               	retlw	1
   493                           ;tacho.c: 113: }
   494                           ;tacho.c: 116: }
   495  00D85E                     __end_of_IntINT0:
   496                           ;tacho.c: 121: void IncTimTacho(void)
   497                           ;tacho.c: 122: {
   498  00D85E                     _IncTimTacho:
   499  000000                     
   500                           ;tacho.c: 123: if(tm0<0xFFFF) tm0++;
   501  00D85E  0102               	movlb	_tm0 shr (0+8)	;volatile
   502  00D860  1D1B               	comf	(_tm0+1)& (0+255),w,b	;volatile
   503  00D862  0EFF               	movlw	255
   504  00D864  B4D8               	btfsc	status,2,c
   505  00D866  191A               	xorwf	_tm0& (0+255),w,b	;volatile
   506  00D868  B4D8               	btfsc	status,2,c
   507  00D86A  0012               	return	
   508  00D86C  4B1A               	infsnz	_tm0& (0+255),f,b	;volatile
   509  00D86E  2B1B               	incf	(_tm0+1)& (0+255),f,b	;volatile
   510                           ;tacho.c: 124: }
   511  00D870  0012               	return	
   512  00D872                     __end_of_IncTimTacho:
   513                           ;tacho.c: 125: void StartTimTacho(void)
   514                           ;tacho.c: 126: {
   515  00D872                     _StartTimTacho:
   516  000000                     
   517                           ;tacho.c: 127: tm0=0;
   518  00D872  EE02  F01A         	lfsr	0,_tm0	;volatile
   519  00D876  6AEE               	clrf	postinc0,c
   520  00D878  6AEE               	clrf	postinc0,c
   521                           ;tacho.c: 128: }
   522  00D87A  0012               	return	
   523  00D87C                     __end_of_StartTimTacho:
   524                           ;tacho.c: 129: unsigned char TimTacho(void)
   525                           ;tacho.c: 130: {
   526  00D87C                     _TimTacho:
   527  000000                     
   528                           ;tacho.c: 131: return tm0;
   529  00D87C  C21A  FFE8         	movff	_tm0,wreg	;volatile
   530  00D880  0012               	return	
   531                           ;tacho.c: 132: }
   532  00D882                     __end_of_TimTacho:
   533                           ;       param _tbb assigned to ?_AddTab+0
   534  000000                     _AddTab$tbb	set	?_AddTab
   535                           ;tacho.c: 136: void AddTab(unsigned int *tbb,uns
      +                          igned char ndat,unsigned int wnk)
   536                           ;tacho.c: 137: {
   537  00D882  00B6               	dw	?_AddTab
   538  00D884                     _AddTab:
   539  000000                     
   540                           ;tacho.c: 138: unsigned char i;
   541  00D884  0100               	movlb	__Lparam shr (0+8)
   542  00D886  51B8               	movf	(?_AddTab+2)^(__Lparam& (0+65280)),w
   543  00D888  0E14               	movlw	20
   544  00D88A  E002               	bz	L4
   545  00D88C  65B8               	cpfsgt	(?_AddTab+2)^(__Lparam& (0+65280)),b
   546  00D88E  D002               	goto	l27
   547  00D890                     L4:
   548  00D890  0100               	movlb	__Lparam shr (0+8)
   549  00D892  6FB8               	movwf	(?_AddTab+2)^(__Lparam& (0+65280)),b
   550  00D894                     l27:
   551                           ;tacho.c: 141: for(i=1;i<ndat;i++) tbb[i-1]=tbb[
      +                          i];
   552  00D894  0E01               	movlw	1
   553  00D896  6ED9               	movwf	fsr2l,c
   554  00D898                     l31:
   555  00D898  0100               	movlb	__Lparam shr (0+8)
   556  00D89A  51B8               	movf	(?_AddTab+2)^(__Lparam& (0+65280)),w
   557  00D89C  5CD9               	subwf	fsr2l,w,c
   558  00D89E  E21A               	bc	u140
   559  00D8A0  50D9               	movf	fsr2l,w,c
   560  00D8A2  0D02               	mullw	2
   561  00D8A4  51B6               	movf	?_AddTab^(__Lparam& (0+65280)),w
   562  00D8A6  24F3               	addwf	prodl,w,c
   563  00D8A8  6EE9               	movwf	fsr0l,c
   564  00D8AA  51B7               	movf	(?_AddTab+1)^(__Lparam& (0+65280)),w
   565  00D8AC  20F4               	addwfc	prodh,w,c
   566  00D8AE  6EEA               	movwf	fsr0h,c
   567  00D8B0  50D9               	movf	fsr2l,w,c
   568  00D8B2  0D02               	mullw	2
   569  00D8B4  51B6               	movf	?_AddTab^(__Lparam& (0+65280)),w
   570  00D8B6  26F3               	addwf	prodl,f,c
   571  00D8B8  51B7               	movf	(?_AddTab+1)^(__Lparam& (0+65280)),w
   572  00D8BA  22F4               	addwfc	prodh,f,c
   573  00D8BC  0EFE               	movlw	254
   574  00D8BE  24F3               	addwf	prodl,w,c
   575  00D8C0  6EE1               	movwf	fsr1l,c
   576  00D8C2  0EFF               	movlw	255
   577  00D8C4  20F4               	addwfc	prodh,w,c
   578  00D8C6  6EE2               	movwf	fsr1h,c
   579  00D8C8  CFEE FFE6          	movff	postinc0,postinc1
   580  00D8CC  CFED FFE5          	movff	postdec0,postdec1
   581  00D8D0  2AD9               	incf	fsr2l,f,c
   582  00D8D2  D7E2               	goto	l31
   583  00D8D4                     u140:
   584                           ;tacho.c: 142: tbb[ndat-1]=wnk;
   585  00D8D4  0100               	movlb	__Lparam shr (0+8)
   586  00D8D6  51B8               	movf	(?_AddTab+2)^(__Lparam& (0+65280)),w
   587  00D8D8  0D02               	mullw	2
   588  00D8DA  51B6               	movf	?_AddTab^(__Lparam& (0+65280)),w
   589  00D8DC  26F3               	addwf	prodl,f,c
   590  00D8DE  51B7               	movf	(?_AddTab+1)^(__Lparam& (0+65280)),w
   591  00D8E0  22F4               	addwfc	prodh,f,c
   592  00D8E2  0EFE               	movlw	254
   593  00D8E4  24F3               	addwf	prodl,w,c
   594  00D8E6  6EE9               	movwf	fsr0l,c
   595  00D8E8  0EFF               	movlw	255
   596  00D8EA  20F4               	addwfc	prodh,w,c
   597  00D8EC  6EEA               	movwf	fsr0h,c
   598  00D8EE  C0B9  FFEE         	movff	?_AddTab+3,postinc0
   599  00D8F2  C0BA  FFED         	movff	?_AddTab+4,postdec0
   600                           ;tacho.c: 143: }
   601  00D8F6  0012               	return	
   602  00D8F8                     __end_of_AddTab:
   603                           ;tacho.c: 146: unsigned int FindPropVal(unsigned
      +                           int *tbb,unsigned char ndat)
   604                           ;tacho.c: 147: {
   605  00D8F8  00B6               	dw	?_FindPropVal
   606  00D8FA                     _FindPropVal:
   607  000000                     
   608                           ;tacho.c: 148: unsigned int wrt;
   609  00D8FA  0100               	movlb	__Lparam shr (0+8)
   610  00D8FC  51B8               	movf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   611  00D8FE  0E14               	movlw	20
   612  00D900  E002               	bz	L5
   613  00D902  65B8               	cpfsgt	(?_FindPropVal+2)^(__Lparam& (0+65280)),
      +                          b
   614  00D904  D002               	goto	l33
   615  00D906                     L5:
   616  00D906  0100               	movlb	__Lparam shr (0+8)
   617  00D908  6FB8               	movwf	(?_FindPropVal+2)^(__Lparam& (0+65280)),b
   618  00D90A                     l33:
   619                           ;tacho.c: 157: for(i=0;i<ndat;i++) tmx[i]=tbb[i]
      +                          ;
   620  00D90A  6AD9               	clrf	fsr2l,c
   621  00D90C                     l37:
   622  00D90C  0100               	movlb	__Lparam shr (0+8)
   623  00D90E  51B8               	movf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   624  00D910  5CD9               	subwf	fsr2l,w,c
   625  00D912  E216               	bc	u180
   626  00D914  50D9               	movf	fsr2l,w,c
   627  00D916  0D02               	mullw	2
   628  00D918  51B6               	movf	?_FindPropVal^(__Lparam& (0+65280)),w
   629  00D91A  24F3               	addwf	prodl,w,c
   630  00D91C  6EE1               	movwf	fsr1l,c
   631  00D91E  51B7               	movf	(?_FindPropVal+1)^(__Lparam& (0+65280)),w
   632  00D920  20F4               	addwfc	prodh,w,c
   633  00D922  6EE2               	movwf	fsr1h,c
   634  00D924  50D9               	movf	fsr2l,w,c
   635  00D926  0D02               	mullw	2
   636  00D928  0ECF               	movlw	low (?a_FindPropVal+22)
   637  00D92A  24F3               	addwf	prodl,w,c
   638  00D92C  6EE9               	movwf	fsr0l,c
   639  00D92E  0E00               	movlw	high (?a_FindPropVal+22)
   640  00D930  20F4               	addwfc	prodh,w,c
   641  00D932  6EEA               	movwf	fsr0h,c
   642  00D934  CFE6 FFEE          	movff	postinc1,postinc0
   643  00D938  CFE5 FFED          	movff	postdec1,postdec0
   644  00D93C  2AD9               	incf	fsr2l,f,c
   645  00D93E  D7E6               	goto	l37
   646  00D940                     u180:
   647                           ;tacho.c: 160: for(i=0;i<ndat;i++) wb[i]=0;
   648  00D940  6AD9               	clrf	fsr2l,c
   649  00D942                     l41:
   650  00D942  0100               	movlb	__Lparam shr (0+8)
   651  00D944  51B8               	movf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   652  00D946  5CD9               	subwf	fsr2l,w,c
   653  00D948  E209               	bc	u190
   654  00D94A  50D9               	movf	fsr2l,w,c
   655  00D94C  EE00  F0BB         	lfsr	0,?a_FindPropVal+2
   656  00D950  26E9               	addwf	fsr0l,f,c
   657  00D952  0E00               	movlw	0
   658  00D954  22EA               	addwfc	fsr0h,f,c
   659  00D956  6AEF               	clrf	indf0,c
   660  00D958  2AD9               	incf	fsr2l,f,c
   661  00D95A  D7F3               	goto	l41
   662  00D95C                     u190:
   663                           ;tacho.c: 161: for(j=0;j<(ndat/2);j++)
   664  00D95C  6AE1               	clrf	fsr1l,c
   665  00D95E                     l45:
   666  00D95E  0100               	movlb	__Lparam shr (0+8)
   667  00D960  90D8               	bcf	status,0,c
   668  00D962  31B8               	rrcf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   669  00D964  5CE1               	subwf	fsr1l,w,c
   670  00D966  E26A               	bc	u250
   671                           ;tacho.c: 162: {
   672  00D968  69B9               	setf	?a_FindPropVal^(__Lparam& (0+65280)),b
   673  00D96A  69BA               	setf	(?a_FindPropVal+1)^(__Lparam& (0+65280)),b
   674                           ;tacho.c: 164: max=0;
   675  00D96C  6A00               	clrf	btemp,c
   676  00D96E  6A01               	clrf	btemp+1,c
   677                           ;tacho.c: 165: for(i=0;i<ndat;i++)
   678  00D970  6AD9               	clrf	fsr2l,c
   679  00D972                     l49:
   680  00D972  0100               	movlb	__Lparam shr (0+8)
   681  00D974  51B8               	movf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   682  00D976  5CD9               	subwf	fsr2l,w,c
   683  00D978  E22F               	bc	u230
   684                           ;tacho.c: 166: {
   685  00D97A  50D9               	movf	fsr2l,w,c
   686  00D97C  EE00  F0BB         	lfsr	0,?a_FindPropVal+2
   687  00D980  26E9               	addwf	fsr0l,f,c
   688  00D982  0E00               	movlw	0
   689  00D984  22EA               	addwfc	fsr0h,f,c
   690  00D986  50EF               	movf	indf0,w,c
   691  00D988  E125               	bnz	l48
   692                           ;tacho.c: 168: wrt=tmx[i];
   693  00D98A  50D9               	movf	fsr2l,w,c
   694  00D98C  0D02               	mullw	2
   695  00D98E  0ECF               	movlw	low (?a_FindPropVal+22)
   696  00D990  24F3               	addwf	prodl,w,c
   697  00D992  6EE9               	movwf	fsr0l,c
   698  00D994  0E00               	movlw	high (?a_FindPropVal+22)
   699  00D996  20F4               	addwfc	prodh,w,c
   700  00D998  6EEA               	movwf	fsr0h,c
   701  00D99A  CFEE FFF6          	movff	postinc0,tblptrl
   702  00D99E  CFED FFF7          	movff	postdec0,tblptrh
   703                           ;tacho.c: 169: if(max<wrt)
   704  00D9A2  50F7               	movf	tblptrh,w,c
   705  00D9A4  5C01               	subwf	btemp+1,w,c
   706  00D9A6  E102               	bnz	u215
   707  00D9A8  50F6               	movf	tblptrl,w,c
   708  00D9AA  5C00               	subwf	btemp,w,c
   709  00D9AC                     u215:
   710  00D9AC  E206               	bc	l51
   711                           ;tacho.c: 170: {
   712  00D9AE  CFF6 F000          	movff	tblptrl,btemp
   713  00D9B2  CFF7 F001          	movff	tblptrh,btemp+1
   714                           ;tacho.c: 172: ix=i;
   715  00D9B6  50D9               	movf	fsr2l,w,c
   716  00D9B8  6E02               	movwf	btemp+2,c
   717  00D9BA                     l51:
   718                           ;tacho.c: 173: }
   719  00D9BA  0100               	movlb	__Lparam shr (0+8)
   720  00D9BC  51BA               	movf	(?a_FindPropVal+1)^(__Lparam& (0+65280)),w
   721  00D9BE  5CF7               	subwf	tblptrh,w,c
   722  00D9C0  E102               	bnz	u225
   723  00D9C2  51B9               	movf	?a_FindPropVal^(__Lparam& (0+65280)),w
   724  00D9C4  5CF6               	subwf	tblptrl,w,c
   725  00D9C6                     u225:
   726  00D9C6  E206               	bc	l48
   727                           ;tacho.c: 175: {
   728  00D9C8  CFF6 F0B9          	movff	tblptrl,?a_FindPropVal
   729  00D9CC  CFF7 F0BA          	movff	tblptrh,?a_FindPropVal+1
   730                           ;tacho.c: 177: im=i;
   731  00D9D0  50D9               	movf	fsr2l,w,c
   732  00D9D2  6E03               	movwf	btemp+3,c
   733  00D9D4                     l48:
   734  00D9D4  2AD9               	incf	fsr2l,f,c
   735  00D9D6  D7CD               	goto	l49
   736  00D9D8                     u230:
   737                           ;tacho.c: 178: }
   738  00D9D8  5003               	movf	btemp+3,w,c
   739  00D9DA  6202               	cpfseq	btemp+2,c
   740  00D9DC  D009               	goto	l53
   741                           ;tacho.c: 181: {
   742  00D9DE  50E1               	movf	fsr1l,w,c
   743  00D9E0  6E03               	movwf	btemp+3,c
   744                           ;tacho.c: 183: ix=(ndat-1-j);
   745  00D9E2  C0B8  F000         	movff	?_FindPropVal+2,btemp
   746  00D9E6  0EFF               	movlw	-1
   747  00D9E8  2600               	addwf	btemp,f,c
   748  00D9EA  50E1               	movf	fsr1l,w,c
   749  00D9EC  5C00               	subwf	btemp,w,c
   750  00D9EE  6E02               	movwf	btemp+2,c
   751  00D9F0                     l53:
   752                           ;tacho.c: 184: }
   753  00D9F0  5002               	movf	btemp+2,w,c
   754  00D9F2  EE00  F0BB         	lfsr	0,?a_FindPropVal+2
   755  00D9F6  26E9               	addwf	fsr0l,f,c
   756  00D9F8  0E00               	movlw	0
   757  00D9FA  22EA               	addwfc	fsr0h,f,c
   758  00D9FC  0E01               	movlw	1
   759  00D9FE  6EEF               	movwf	indf0,c
   760                           ;tacho.c: 186: wb[im]=1;
   761  00DA00  5003               	movf	btemp+3,w,c
   762  00DA02  EE00  F0BB         	lfsr	0,?a_FindPropVal+2
   763  00DA06  26E9               	addwf	fsr0l,f,c
   764  00DA08  0E00               	movlw	0
   765  00DA0A  22EA               	addwfc	fsr0h,f,c
   766  00DA0C  0E01               	movlw	1
   767  00DA0E  6EEF               	movwf	indf0,c
   768                           ;tacho.c: 187: tmx[ix]=0;
   769  00DA10  5002               	movf	btemp+2,w,c
   770  00DA12  0D02               	mullw	2
   771  00DA14  0ECF               	movlw	low (?a_FindPropVal+22)
   772  00DA16  24F3               	addwf	prodl,w,c
   773  00DA18  6EE9               	movwf	fsr0l,c
   774  00DA1A  0E00               	movlw	high (?a_FindPropVal+22)
   775  00DA1C  20F4               	addwfc	prodh,w,c
   776  00DA1E  6EEA               	movwf	fsr0h,c
   777  00DA20  6AEE               	clrf	postinc0,c
   778  00DA22  6AED               	clrf	postdec0,c
   779                           ;tacho.c: 188: tmx[im]=0;
   780  00DA24  5003               	movf	btemp+3,w,c
   781  00DA26  0D02               	mullw	2
   782  00DA28  0ECF               	movlw	low (?a_FindPropVal+22)
   783  00DA2A  24F3               	addwf	prodl,w,c
   784  00DA2C  6EE9               	movwf	fsr0l,c
   785  00DA2E  0E00               	movlw	high (?a_FindPropVal+22)
   786  00DA30  20F4               	addwfc	prodh,w,c
   787  00DA32  6EEA               	movwf	fsr0h,c
   788  00DA34  6AEE               	clrf	postinc0,c
   789  00DA36  6AED               	clrf	postdec0,c
   790  00DA38  2AE1               	incf	fsr1l,f,c
   791  00DA3A  D791               	goto	l45
   792  00DA3C                     u250:
   793                           ;tacho.c: 189: }
   794  00DA3C  6AD9               	clrf	fsr2l,c
   795  00DA3E                     l57:
   796  00DA3E  0100               	movlb	__Lparam shr (0+8)
   797  00DA40  51B8               	movf	(?_FindPropVal+2)^(__Lparam& (0+65280)),w
   798  00DA42  5CD9               	subwf	fsr2l,w,c
   799  00DA44  E211               	bc	l55
   800                           ;tacho.c: 192: {
   801  00DA46  50D9               	movf	fsr2l,w,c
   802  00DA48  0D02               	mullw	2
   803  00DA4A  0ECF               	movlw	low (?a_FindPropVal+22)
   804  00DA4C  24F3               	addwf	prodl,w,c
   805  00DA4E  6EE9               	movwf	fsr0l,c
   806  00DA50  0E00               	movlw	high (?a_FindPropVal+22)
   807  00DA52  20F4               	addwfc	prodh,w,c
   808  00DA54  6EEA               	movwf	fsr0h,c
   809  00DA56  CFEE FFF6          	movff	postinc0,tblptrl
   810  00DA5A  CFED FFF7          	movff	postdec0,tblptrh
   811                           ;tacho.c: 194: if(wrt) break;
   812  00DA5E  50F7               	movf	tblptrh,w,c
   813  00DA60  10F6               	iorwf	tblptrl,w,c
   814  00DA62  E102               	bnz	l55
   815  00DA64  2AD9               	incf	fsr2l,f,c
   816  00DA66  D7EB               	goto	l57
   817  00DA68                     l55:
   818                           ;tacho.c: 195: }
   819  00DA68  CFF6 F000          	movff	tblptrl,btemp
   820  00DA6C  CFF7 F001          	movff	tblptrh,btemp+1
   821  00DA70  0012               	return	
   822                           ;tacho.c: 197: }
   823  00DA72                     __end_of_FindPropVal:
   824                           ;tacho.c: 200: unsigned int HistVal(unsigned int
      +                           *tbb,unsigned char ndat)
   825                           ;tacho.c: 201: {
   826  00DA72  00B6               	dw	?_HistVal
   827  00DA74                     _HistVal:
   828  000000                     
   829                           ;tacho.c: 202: unsigned int wrt;
   830  00DA74  0100               	movlb	__Lparam shr (0+8)
   831  00DA76  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   832  00DA78  0E14               	movlw	20
   833  00DA7A  E002               	bz	L6
   834  00DA7C  65B8               	cpfsgt	(?_HistVal+2)^(__Lparam& (0+65280)),b
   835  00DA7E  D002               	goto	l60
   836  00DA80                     L6:
   837  00DA80  0100               	movlb	__Lparam shr (0+8)
   838  00DA82  6FB8               	movwf	(?_HistVal+2)^(__Lparam& (0+65280)),b
   839  00DA84                     l60:
   840                           ;tacho.c: 210: for(i=0;i<ndat;i++) wb[i]=0;
   841  00DA84  6AD9               	clrf	fsr2l,c
   842  00DA86                     l64:
   843  00DA86  0100               	movlb	__Lparam shr (0+8)
   844  00DA88  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   845  00DA8A  5CD9               	subwf	fsr2l,w,c
   846  00DA8C  E209               	bc	u310
   847  00DA8E  50D9               	movf	fsr2l,w,c
   848  00DA90  EE00  F0B9         	lfsr	0,?a_HistVal
   849  00DA94  26E9               	addwf	fsr0l,f,c
   850  00DA96  0E00               	movlw	0
   851  00DA98  22EA               	addwfc	fsr0h,f,c
   852  00DA9A  6AEF               	clrf	indf0,c
   853  00DA9C  2AD9               	incf	fsr2l,f,c
   854  00DA9E  D7F3               	goto	l64
   855  00DAA0                     u310:
   856                           ;tacho.c: 211: for(j=0;j<ndat;j++)
   857  00DAA0  6AD9               	clrf	fsr2l,c
   858  00DAA2                     l68:
   859  00DAA2  0100               	movlb	__Lparam shr (0+8)
   860  00DAA4  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   861  00DAA6  5CD9               	subwf	fsr2l,w,c
   862  00DAA8  E22C               	bc	u340
   863                           ;tacho.c: 212: {
   864                           ; _wrt allocated to tablreg
   865  00DAAA  50D9               	movf	fsr2l,w,c
   866  00DAAC  0D02               	mullw	2
   867  00DAAE  51B6               	movf	?_HistVal^(__Lparam& (0+65280)),w
   868  00DAB0  24F3               	addwf	prodl,w,c
   869  00DAB2  6EE9               	movwf	fsr0l,c
   870  00DAB4  51B7               	movf	(?_HistVal+1)^(__Lparam& (0+65280)),w
   871  00DAB6  20F4               	addwfc	prodh,w,c
   872  00DAB8  6EEA               	movwf	fsr0h,c
   873  00DABA  CFEE FFF6          	movff	postinc0,tblptrl
   874  00DABE  CFED FFF7          	movff	postdec0,tblptrh
   875                           ;tacho.c: 214: for(i=0;i<ndat;i++)
   876                           ; _i allocated to btemp
   877  00DAC2  6A00               	clrf	btemp,c
   878  00DAC4                     l72:
   879  00DAC4  0100               	movlb	__Lparam shr (0+8)
   880  00DAC6  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   881  00DAC8  5C00               	subwf	btemp,w,c
   882  00DACA  E219               	bc	u330
   883                           ;tacho.c: 215: {
   884  00DACC  5000               	movf	btemp,w,c
   885  00DACE  0D02               	mullw	2
   886  00DAD0  51B6               	movf	?_HistVal^(__Lparam& (0+65280)),w
   887  00DAD2  24F3               	addwf	prodl,w,c
   888  00DAD4  6EE9               	movwf	fsr0l,c
   889  00DAD6  51B7               	movf	(?_HistVal+1)^(__Lparam& (0+65280)),w
   890  00DAD8  20F4               	addwfc	prodh,w,c
   891  00DADA  6EEA               	movwf	fsr0h,c
   892  00DADC  52EE               	movf	postinc0,f,c
   893  00DADE  50F7               	movf	tblptrh,w,c
   894  00DAE0  18ED               	xorwf	postdec0,w,c
   895  00DAE2  CFF6 FFE8          	movff	tblptrl,wreg
   896  00DAE6  B4D8               	btfsc	status,2,c
   897  00DAE8  18EF               	xorwf	indf0,w,c
   898  00DAEA  E107               	bnz	l73
   899  00DAEC  50D9               	movf	fsr2l,w,c
   900  00DAEE  EE00  F0B9         	lfsr	0,?a_HistVal
   901  00DAF2  26E9               	addwf	fsr0l,f,c
   902  00DAF4  0E00               	movlw	0
   903  00DAF6  22EA               	addwfc	fsr0h,f,c
   904  00DAF8  2AEF               	incf	indf0,f,c
   905  00DAFA                     l73:
   906  00DAFA  2A00               	incf	btemp,f,c
   907  00DAFC  D7E3               	goto	l72
   908  00DAFE                     u330:
   909  00DAFE  2AD9               	incf	fsr2l,f,c
   910  00DB00  D7D0               	goto	l68
   911  00DB02                     u340:
   912                           ;tacho.c: 217: }
   913  00DB02  6AF6               	clrf	tblptrl,c
   914  00DB04  6AF7               	clrf	tblptrh,c
   915                           ;tacho.c: 221: im=ndat-1;
   916  00DB06  0100               	movlb	__Lparam shr (0+8)
   917  00DB08  05B8               	decf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   918  00DB0A  6EE1               	movwf	fsr1l,c
   919                           ;tacho.c: 222: for(i=0;i<ndat;i++)
   920                           ; _i allocated to fsr2l
   921  00DB0C  6AD9               	clrf	fsr2l,c
   922  00DB0E                     l77:
   923  00DB0E  0100               	movlb	__Lparam shr (0+8)
   924  00DB10  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   925  00DB12  5CD9               	subwf	fsr2l,w,c
   926  00DB14  E217               	bc	u360
   927                           ;tacho.c: 223: {
   928                           ; _wrt allocated to wtemp0
   929  00DB16  50D9               	movf	fsr2l,w,c
   930  00DB18  EE00  F0B9         	lfsr	0,?a_HistVal
   931  00DB1C  26E9               	addwf	fsr0l,f,c
   932  00DB1E  0E00               	movlw	0
   933  00DB20  22EA               	addwfc	fsr0h,f,c
   934  00DB22  50EF               	movf	indf0,w,c
   935  00DB24  6E00               	movwf	btemp,c
   936  00DB26  6A01               	clrf	btemp+1,c
   937                           ;tacho.c: 225: if(max<=wrt)
   938  00DB28  50F7               	movf	tblptrh,w,c
   939  00DB2A  5C01               	subwf	btemp+1,w,c
   940  00DB2C  E102               	bnz	u355
   941  00DB2E  50F6               	movf	tblptrl,w,c
   942  00DB30  5C00               	subwf	btemp,w,c
   943  00DB32                     u355:
   944  00DB32  E306               	bnc	l78
   945                           ;tacho.c: 226: {
   946  00DB34  C000  FFF6         	movff	btemp,tblptrl
   947  00DB38  C001  FFF7         	movff	btemp+1,tblptrh
   948                           ;tacho.c: 228: im=i;
   949  00DB3C  50D9               	movf	fsr2l,w,c
   950  00DB3E  6EE1               	movwf	fsr1l,c
   951  00DB40                     l78:
   952  00DB40  2AD9               	incf	fsr2l,f,c
   953  00DB42  D7E5               	goto	l77
   954  00DB44                     u360:
   955                           ;tacho.c: 229: }
   956  00DB44  6802               	setf	btemp+2,c
   957  00DB46  6A03               	clrf	btemp+3,c
   958                           ;tacho.c: 233: for(i=0;i<ndat;i++)
   959  00DB48  6AD9               	clrf	fsr2l,c
   960  00DB4A                     l82:
   961  00DB4A  0100               	movlb	__Lparam shr (0+8)
   962  00DB4C  51B8               	movf	(?_HistVal+2)^(__Lparam& (0+65280)),w
   963  00DB4E  5CD9               	subwf	fsr2l,w,c
   964  00DB50  E227               	bc	u390
   965                           ;tacho.c: 234: {
   966  00DB52  50D9               	movf	fsr2l,w,c
   967  00DB54  EE00  F0B9         	lfsr	0,?a_HistVal
   968  00DB58  26E9               	addwf	fsr0l,f,c
   969  00DB5A  0E00               	movlw	0
   970  00DB5C  22EA               	addwfc	fsr0h,f,c
   971  00DB5E  50EF               	movf	indf0,w,c
   972  00DB60  6E00               	movwf	btemp,c
   973  00DB62  18F6               	xorwf	tblptrl,w,c
   974  00DB64  E101               	bnz	u375
   975  00DB66  52F7               	movf	tblptrh,f,c
   976  00DB68                     u375:
   977  00DB68  E119               	bnz	l83
   978                           ;tacho.c: 236: {
   979  00DB6A  50D9               	movf	fsr2l,w,c
   980  00DB6C  0D02               	mullw	2
   981  00DB6E  0100               	movlb	__Lparam shr (0+8)
   982  00DB70  51B6               	movf	?_HistVal^(__Lparam& (0+65280)),w
   983  00DB72  24F3               	addwf	prodl,w,c
   984  00DB74  6EE9               	movwf	fsr0l,c
   985  00DB76  51B7               	movf	(?_HistVal+1)^(__Lparam& (0+65280)),w
   986  00DB78  20F4               	addwfc	prodh,w,c
   987  00DB7A  6EEA               	movwf	fsr0h,c
   988  00DB7C  CFEE F000          	movff	postinc0,btemp
   989  00DB80  CFED F001          	movff	postdec0,btemp+1
   990                           ;tacho.c: 238: if(min>=wrt)
   991  00DB84  5001               	movf	btemp+1,w,c
   992  00DB86  5C03               	subwf	btemp+3,w,c
   993  00DB88  E102               	bnz	u385
   994  00DB8A  5000               	movf	btemp,w,c
   995  00DB8C  5C02               	subwf	btemp+2,w,c
   996  00DB8E                     u385:
   997  00DB8E  E306               	bnc	l83
   998                           ;tacho.c: 239: {
   999  00DB90  C000  F002         	movff	btemp,btemp+2
  1000  00DB94  C001  F003         	movff	btemp+1,btemp+3
  1001                           ;tacho.c: 241: im=i;
  1002  00DB98  50D9               	movf	fsr2l,w,c
  1003  00DB9A  6EE1               	movwf	fsr1l,c
  1004  00DB9C                     l83:
  1005  00DB9C  2AD9               	incf	fsr2l,f,c
  1006  00DB9E  D7D5               	goto	l82
  1007  00DBA0                     u390:
  1008                           ;tacho.c: 242: }
  1009  00DBA0  50E1               	movf	fsr1l,w,c
  1010  00DBA2  0D02               	mullw	2
  1011  00DBA4  0100               	movlb	__Lparam shr (0+8)
  1012  00DBA6  51B6               	movf	?_HistVal^(__Lparam& (0+65280)),w
  1013  00DBA8  24F3               	addwf	prodl,w,c
  1014  00DBAA  6EE9               	movwf	fsr0l,c
  1015  00DBAC  51B7               	movf	(?_HistVal+1)^(__Lparam& (0+65280)),w
  1016  00DBAE  20F4               	addwfc	prodh,w,c
  1017  00DBB0  6EEA               	movwf	fsr0h,c
  1018  00DBB2  CFEE F000          	movff	postinc0,btemp
  1019  00DBB6  CFED F001          	movff	postdec0,btemp+1
  1020  00DBBA  0012               	return	
  1021                           ;tacho.c: 246: }
  1022  00DBBC                     __end_of_HistVal:
  1023                           ;tacho.c: 250: unsigned int TFlt(unsigned int wn
      +                          k)
  1024                           ;tacho.c: 251: {
  1025  00DBBC  00B6               	dw	?_TFlt
  1026  00DBBE                     _TFlt:
  1027  000000                     
  1028                           ;tacho.c: 252: static unsigned int bwnk=0;
  1029  00DBBE  C200  F000         	movff	F1493,btemp
  1030  00DBC2  C201  F001         	movff	F1493+1,btemp+1
  1031  00DBC6  0100               	movlb	__Lparam shr (0+8)
  1032  00DBC8  51B7               	movf	(?_TFlt+1)^(__Lparam& (0+65280)),w
  1033  00DBCA  5C01               	subwf	btemp+1,w,c
  1034  00DBCC  E102               	bnz	u405
  1035  00DBCE  51B6               	movf	?_TFlt^(__Lparam& (0+65280)),w
  1036  00DBD0  5C00               	subwf	btemp,w,c
  1037  00DBD2                     u405:
  1038  00DBD2  E219               	bc	l86
  1039                           ;tacho.c: 256: {
  1040  00DBD4  C200  FFE8         	movff	F1493,wreg
  1041  00DBD8  5DB6               	subwf	?_TFlt^(__Lparam& (0+65280)),w
  1042  00DBDA  6E00               	movwf	btemp,c
  1043  00DBDC  C201  FFE8         	movff	F1493+1,wreg
  1044  00DBE0  59B7               	subwfb	(?_TFlt+1)^(__Lparam& (0+65280)),w
  1045  00DBE2  6E01               	movwf	btemp+1,c
  1046  00DBE4  0E00               	movlw	0
  1047  00DBE6  5C01               	subwf	btemp+1,w,c
  1048  00DBE8  0EC8               	movlw	200
  1049  00DBEA  B4D8               	btfsc	status,2,c
  1050  00DBEC  5C00               	subwf	btemp,w,c
  1051  00DBEE  E336               	bnc	l91
  1052                           ;tacho.c: 258: {
  1053  00DBF0  010F               	movlb	F1494 shr (0+8)
  1054  00DBF2  6B37               	clrf	F1494& (0+255),b
  1055                           ;tacho.c: 260: bwnk=wnk;
  1056  00DBF4  C0B6  F200         	movff	?_TFlt,F1493
  1057  00DBF8  C0B7  F201         	movff	?_TFlt+1,F1493+1
  1058                           ;tacho.c: 261: return wnk;
  1059  00DBFC  C0B6  F000         	movff	?_TFlt,btemp
  1060  00DC00  C0B7  F001         	movff	?_TFlt+1,btemp+1
  1061  00DC04  0012               	return	
  1062                           ;tacho.c: 262: }
  1063  00DC06                     l86:
  1064                           ;tacho.c: 264: else
  1065  00DC06  C200  F000         	movff	F1493,btemp
  1066  00DC0A  C201  F001         	movff	F1493+1,btemp+1
  1067  00DC0E  0100               	movlb	__Lparam shr (0+8)
  1068  00DC10  51B6               	movf	?_TFlt^(__Lparam& (0+65280)),w
  1069  00DC12  5E00               	subwf	btemp,f,c
  1070  00DC14  51B7               	movf	(?_TFlt+1)^(__Lparam& (0+65280)),w
  1071  00DC16  5A01               	subwfb	btemp+1,f,c
  1072  00DC18  0E00               	movlw	0
  1073  00DC1A  5C01               	subwf	btemp+1,w,c
  1074  00DC1C  0EC8               	movlw	200
  1075  00DC1E  B4D8               	btfsc	status,2,c
  1076  00DC20  5C00               	subwf	btemp,w,c
  1077  00DC22  E31C               	bnc	l91
  1078                           ;tacho.c: 267: {
  1079  00DC24  010F               	movlb	F1494 shr (0+8)
  1080  00DC26  6B37               	clrf	F1494& (0+255),b
  1081                           ;tacho.c: 269: bwnk=wnk;
  1082  00DC28  C0B6  F200         	movff	?_TFlt,F1493
  1083  00DC2C  C0B7  F201         	movff	?_TFlt+1,F1493+1
  1084                           ;tacho.c: 270: return wnk;
  1085  00DC30  C0B6  F000         	movff	?_TFlt,btemp
  1086  00DC34  C0B7  F001         	movff	?_TFlt+1,btemp+1
  1087  00DC38  0012               	return	
  1088                           ;tacho.c: 271: }
  1089  00DC3A                     l92:
  1090                           ;tacho.c: 275: {
  1091                           ;tacho.c: 277: {
  1092  00DC3A  C0B6  F200         	movff	?_TFlt,F1493
  1093  00DC3E  C0B7  F201         	movff	?_TFlt+1,F1493+1
  1094                           ;tacho.c: 279: StartTimTacho();
  1095  00DC42  DE17               	call	_StartTimTacho	;wreg free
  1096                           ;tacho.c: 280: krok=1;
  1097  00DC44  0E01               	movlw	1
  1098  00DC46  CFE8 FF37          	movff	wreg,F1494
  1099                           ;tacho.c: 281: break;
  1100  00DC4A  D00E               	goto	l90
  1101  00DC4C                     l93:
  1102                           ;tacho.c: 282: }
  1103                           ;tacho.c: 284: {
  1104  00DC4C  DE17               	call	_TimTacho	;wreg free
  1105  00DC4E  6E00               	movwf	btemp,c
  1106  00DC50  0E21               	movlw	33
  1107  00DC52  5C00               	subwf	btemp,w,c
  1108  00DC54  E309               	bnc	l90
  1109                           ;tacho.c: 286: {
  1110                           ;tacho.c: 288: }
  1111  00DC56  010F               	movlb	F1494 shr (0+8)
  1112  00DC58  6B37               	clrf	F1494& (0+255),b
  1113                           ;tacho.c: 290: }
  1114  00DC5A  D006               	goto	l90
  1115  00DC5C                     l91:
  1116  00DC5C  CF37  FFE8         	movff	F1494,wreg
  1117  00DC60  0A00               	xorlw	0
  1118  00DC62  E0EB               	bz	l92
  1119  00DC64  0A01               	xorlw	1
  1120  00DC66  E0F2               	bz	l93
  1121  00DC68                     l90:
  1122                           ;tacho.c: 292: return bwnk;
  1123  00DC68  C200  F000         	movff	F1493,btemp
  1124  00DC6C  C201  F001         	movff	F1493+1,btemp+1
  1125  00DC70  0012               	return	
  1126                           ;tacho.c: 293: }
  1127  00DC72                     __end_of_TFlt:
  1128                           ;tacho.c: 297: void PomiarVNT(void)
  1129                           ;tacho.c: 298: {
  1130  00DC72                     _PomiarVNT:
  1131  000000                     
  1132                           ;tacho.c: 300: static unsigned int bwnk2;
  1133  00DC72  0102               	movlb	_nw0 shr (0+8)	;volatile
  1134  00DC74  5116               	movf	_nw0& (0+255),w,b	;volatile
  1135  00DC76  1117               	iorwf	(_nw0+1)& (0+255),w,b	;volatile
  1136  00DC78  E101 D143          	bz	l96
  1137                           ;tacho.c: 307: {
  1138  00DC7C  EE02  F016         	lfsr	0,_nw0	;volatile
  1139  00DC80  6AEE               	clrf	postinc0,c
  1140  00DC82  6AEE               	clrf	postinc0,c
  1141                           ;tacho.c: 309: if(zr0) wynik=0;
  1142  00DC84  5124               	movf	_zr0& (0+255),w,b	;volatile
  1143  00DC86  1125               	iorwf	(_zr0+1)& (0+255),w,b	;volatile
  1144  00DC88  E005               	bz	l97
  1145  00DC8A  EE02  F022         	lfsr	0,_wynik
  1146  00DC8E  6AEE               	clrf	postinc0,c
  1147  00DC90  6AEE               	clrf	postinc0,c
  1148  00DC92  D005               	goto	l98
  1149  00DC94                     l97:
  1150                           ;tacho.c: 310: else
  1151  00DC94  C210  F222         	movff	_in0,_wynik	;volatile
  1152  00DC98  C211  F223         	movff	_in0+1,_wynik+1	;volatile
  1153                           ;tacho.c: 313: zero=0;
  1154  00DC9C  9459               	bcf	_zero/(0+8),_zero& (0+7),c
  1155  00DC9E                     l98:
  1156                           ;tacho.c: 314: }
  1157  00DC9E  C222  FFF3         	movff	_wynik,prodl
  1158  00DCA2  C223  FFF4         	movff	_wynik+1,prodh
  1159                           ;tacho.c: 317: if(zr0)
  1160  00DCA6  0102               	movlb	_zr0 shr (0+8)	;volatile
  1161  00DCA8  5124               	movf	_zr0& (0+255),w,b	;volatile
  1162  00DCAA  1125               	iorwf	(_zr0+1)& (0+255),w,b	;volatile
  1163  00DCAC  E020               	bz	l99
  1164                           ;tacho.c: 318: {
  1165  00DCAE  8459               	bsf	_zero/(0+8),_zero& (0+7),c
  1166                           ;tacho.c: 320: for(i=0;i<20;i++)
  1167  00DCB0  6AD9               	clrf	fsr2l,c
  1168  00DCB2                     l100:
  1169                           ;tacho.c: 321: {
  1170  00DCB2  50D9               	movf	fsr2l,w,c
  1171  00DCB4  0D02               	mullw	2
  1172  00DCB6  0E5E               	movlw	low _tnp
  1173  00DCB8  24F3               	addwf	prodl,w,c
  1174  00DCBA  6EE9               	movwf	fsr0l,c
  1175  00DCBC  0E02               	movlw	high _tnp
  1176  00DCBE  20F4               	addwfc	prodh,w,c
  1177  00DCC0  6EEA               	movwf	fsr0h,c
  1178  00DCC2  68EE               	setf	postinc0,c
  1179  00DCC4  68ED               	setf	postdec0,c
  1180                           ;tacho.c: 323: tvv[i]=0;
  1181  00DCC6  50D9               	movf	fsr2l,w,c
  1182  00DCC8  0D02               	mullw	2
  1183  00DCCA  0E86               	movlw	low _tvv
  1184  00DCCC  24F3               	addwf	prodl,w,c
  1185  00DCCE  6EE9               	movwf	fsr0l,c
  1186  00DCD0  0E02               	movlw	high _tvv
  1187  00DCD2  20F4               	addwfc	prodh,w,c
  1188  00DCD4  6EEA               	movwf	fsr0h,c
  1189  00DCD6  6AEE               	clrf	postinc0,c
  1190  00DCD8  6AED               	clrf	postdec0,c
  1191  00DCDA  2AD9               	incf	fsr2l,f,c
  1192  00DCDC  0E13               	movlw	19
  1193  00DCDE  64D9               	cpfsgt	fsr2l,c
  1194  00DCE0  D7E8               	goto	l100
  1195                           ;tacho.c: 324: }
  1196  00DCE2  EE02  F002         	lfsr	0,F1497
  1197  00DCE6  6AEE               	clrf	postinc0,c
  1198  00DCE8  6AEE               	clrf	postinc0,c
  1199                           ;tacho.c: 326: wnk=0xffff;
  1200  00DCEA  68F3               	setf	prodl,c
  1201  00DCEC  68F4               	setf	prodh,c
  1202  00DCEE                     l99:
  1203                           ;tacho.c: 327: }
  1204  00DCEE  0100               	movlb	__Lparam shr (0+8)
  1205  00DCF0  0E5E               	movlw	low _tnp
  1206  00DCF2  6FB6               	movwf	?_AddTab^(__Lparam& (0+65280)),b
  1207  00DCF4  0E02               	movlw	high _tnp
  1208  00DCF6  6FB7               	movwf	(?_AddTab+1)^(__Lparam& (0+65280)),b
  1209  00DCF8  0E0B               	movlw	11
  1210  00DCFA  6FB8               	movwf	(?_AddTab+2)^(__Lparam& (0+65280)),b
  1211  00DCFC  CFF3 F0B9          	movff	prodl,?_AddTab+3
  1212  00DD00  CFF4 F0BA          	movff	prodh,?_AddTab+4
  1213  00DD04  DDBF               	call	_AddTab	;wreg free
  1214                           ;tacho.c: 330: wnk=FindPropVal(tnp,11);
  1215  00DD06  0100               	movlb	__Lparam shr (0+8)
  1216  00DD08  0E5E               	movlw	low _tnp
  1217  00DD0A  6FB6               	movwf	?_FindPropVal^(__Lparam& (0+65280)),b
  1218  00DD0C  0E02               	movlw	high _tnp
  1219  00DD0E  6FB7               	movwf	(?_FindPropVal+1)^(__Lparam& (0+65280)),b
  1220  00DD10  0E0B               	movlw	11
  1221  00DD12  6FB8               	movwf	(?_FindPropVal+2)^(__Lparam& (0+65280)),b
  1222  00DD14  DDF2               	call	_FindPropVal	;wreg free
  1223  00DD16  C000  F0A9         	movff	btemp,?a_PomiarVNT
  1224  00DD1A  C001  F0AA         	movff	btemp+1,?a_PomiarVNT+1
  1225                           ;tacho.c: 331: wnk2=(unsigned int)(round(((1000.
      +                          0/((float)wnk/4))*60.0)));
  1226  00DD1E  6A00               	clrf	btemp,c
  1227  00DD20  0E70               	movlw	112
  1228  00DD22  6E01               	movwf	btemp+1,c
  1229  00DD24  0E42               	movlw	66
  1230  00DD26  6E02               	movwf	btemp+2,c
  1231  00DD28  C000  F0AD         	movff	btemp,?a_PomiarVNT+4
  1232  00DD2C  C001  F0AE         	movff	btemp+1,?a_PomiarVNT+5
  1233  00DD30  C002  F0AF         	movff	btemp+2,?a_PomiarVNT+6
  1234  00DD34  6A00               	clrf	btemp,c
  1235  00DD36  0E80               	movlw	128
  1236  00DD38  6E01               	movwf	btemp+1,c
  1237  00DD3A  0E40               	movlw	64
  1238  00DD3C  6E02               	movwf	btemp+2,c
  1239  00DD3E  C000  F0B0         	movff	btemp,?a_PomiarVNT+7
  1240  00DD42  C001  F0B1         	movff	btemp+1,?a_PomiarVNT+8
  1241  00DD46  C002  F0B2         	movff	btemp+2,?a_PomiarVNT+9
  1242  00DD4A  C0A9  F000         	movff	?a_PomiarVNT,btemp
  1243  00DD4E  C0AA  F001         	movff	?a_PomiarVNT+1,btemp+1
  1244  00DD52  EC42  F007         	call	lwtoft
  1245  00DD56  C0B0  F003         	movff	?a_PomiarVNT+7,btemp+3
  1246  00DD5A  C0B1  F004         	movff	?a_PomiarVNT+8,btemp+4
  1247  00DD5E  C0B2  F005         	movff	?a_PomiarVNT+9,btemp+5
  1248  00DD62  EC37  F005         	call	ftdiv
  1249  00DD66  C000  F0B3         	movff	btemp,?a_PomiarVNT+10
  1250  00DD6A  C001  F0B4         	movff	btemp+1,?a_PomiarVNT+11
  1251  00DD6E  C002  F0B5         	movff	btemp+2,?a_PomiarVNT+12
  1252  00DD72  6A00               	clrf	btemp,c
  1253  00DD74  0E7A               	movlw	122
  1254  00DD76  6E01               	movwf	btemp+1,c
  1255  00DD78  0E44               	movlw	68
  1256  00DD7A  6E02               	movwf	btemp+2,c
  1257  00DD7C  C0B3  F003         	movff	?a_PomiarVNT+10,btemp+3
  1258  00DD80  C0B4  F004         	movff	?a_PomiarVNT+11,btemp+4
  1259  00DD84  C0B5  F005         	movff	?a_PomiarVNT+12,btemp+5
  1260  00DD88  EC37  F005         	call	ftdiv
  1261  00DD8C  C0AD  F003         	movff	?a_PomiarVNT+4,btemp+3
  1262  00DD90  C0AE  F004         	movff	?a_PomiarVNT+5,btemp+4
  1263  00DD94  C0AF  F005         	movff	?a_PomiarVNT+6,btemp+5
  1264  00DD98  ECB4  F07F         	call	ftmul
  1265  00DD9C  C000  F0B6         	movff	btemp,?_round
  1266  00DDA0  C001  F0B7         	movff	btemp+1,?_round+1
  1267  00DDA4  C002  F0B8         	movff	btemp+2,?_round+2
  1268  00DDA8  EC79  F005         	call	_round	;wreg free
  1269  00DDAC  EC16  F006         	call	fttol
  1270  00DDB0  C000  F0AB         	movff	btemp,?a_PomiarVNT+2
  1271  00DDB4  C001  F0AC         	movff	btemp+1,?a_PomiarVNT+3
  1272                           ;tacho.c: 333: if(wnk2&&bwnk2!=wnk2)
  1273  00DDB8  0100               	movlb	__Lparam shr (0+8)
  1274  00DDBA  51AC               	movf	(?a_PomiarVNT+3)^(__Lparam& (0+65280)),w
  1275  00DDBC  11AB               	iorwf	(?a_PomiarVNT+2)^(__Lparam& (0+65280)),w
  1276  00DDBE  E048               	bz	l103
  1277  00DDC0  C202  F000         	movff	F1497,btemp
  1278  00DDC4  C203  F001         	movff	F1497+1,btemp+1
  1279  00DDC8  51AC               	movf	(?a_PomiarVNT+3)^(__Lparam& (0+65280)),w
  1280  00DDCA  1801               	xorwf	btemp+1,w,c
  1281  00DDCC  E102               	bnz	u495
  1282  00DDCE  51AB               	movf	(?a_PomiarVNT+2)^(__Lparam& (0+65280)),w
  1283  00DDD0  1800               	xorwf	btemp,w,c
  1284  00DDD2                     u495:
  1285  00DDD2  E03E               	bz	l103
  1286                           ;tacho.c: 334: {
  1287  00DDD4  C202  F000         	movff	F1497,btemp
  1288  00DDD8  C203  F001         	movff	F1497+1,btemp+1
  1289  00DDDC  0100               	movlb	__Lparam shr (0+8)
  1290  00DDDE  5001               	movf	btemp+1,w,c
  1291  00DDE0  5DAC               	subwf	(?a_PomiarVNT+3)^(__Lparam& (0+65280)),w
  1292  00DDE2  E102               	bnz	u515
  1293  00DDE4  5000               	movf	btemp,w,c
  1294  00DDE6  5DAB               	subwf	(?a_PomiarVNT+2)^(__Lparam& (0+65280)),w
  1295  00DDE8                     u515:
  1296  00DDE8  E218               	bc	l104
  1297                           ;tacho.c: 336: {
  1298  00DDEA  C202  F000         	movff	F1497,btemp
  1299  00DDEE  C203  F001         	movff	F1497+1,btemp+1
  1300  00DDF2  51AB               	movf	(?a_PomiarVNT+2)^(__Lparam& (0+65280)),w
  1301  00DDF4  5E00               	subwf	btemp,f,c
  1302  00DDF6  51AC               	movf	(?a_PomiarVNT+3)^(__Lparam& (0+65280)),w
  1303  00DDF8  5A01               	subwfb	btemp+1,f,c
  1304  00DDFA  0E13               	movlw	19
  1305  00DDFC  5C01               	subwf	btemp+1,w,c
  1306  00DDFE  0E89               	movlw	137
  1307  00DE00  B4D8               	btfsc	status,2,c
  1308  00DE02  5C00               	subwf	btemp,w,c
  1309  00DE04  E325               	bnc	l103
  1310                           ;tacho.c: 338: {
  1311  00DE06  0102               	movlb	F1497 shr (0+8)
  1312  00DE08  5102               	movf	F1497& (0+255),w,b
  1313  00DE0A  1103               	iorwf	(F1497+1)& (0+255),w,b
  1314  00DE0C  E003               	bz	l106
  1315  00DE0E  0702               	decf	F1497& (0+255),f,b
  1316  00DE10  0E00               	movlw	0
  1317  00DE12  5B03               	subwfb	(F1497+1)& (0+255),f,b
  1318  00DE14                     l106:
  1319                           ;tacho.c: 340: tkrk=0;
  1320  00DE14  010F               	movlb	_tkrk shr (0+8)
  1321  00DE16  6B3B               	clrf	_tkrk& (0+255),b
  1322                           ;tacho.c: 341: return;
  1323  00DE18  0012               	return	
  1324                           ;tacho.c: 342: }
  1325  00DE1A                     l104:
  1326                           ;tacho.c: 344: else
  1327  00DE1A  0100               	movlb	__Lparam shr (0+8)
  1328  00DE1C  C202  FFE8         	movff	F1497,wreg
  1329  00DE20  5DAB               	subwf	(?a_PomiarVNT+2)^(__Lparam& (0+65280)),w
  1330  00DE22  6E00               	movwf	btemp,c
  1331  00DE24  C203  FFE8         	movff	F1497+1,wreg
  1332  00DE28  59AC               	subwfb	(?a_PomiarVNT+3)^(__Lparam& (0+65280)),w
  1333  00DE2A  6E01               	movwf	btemp+1,c
  1334  00DE2C  0E13               	movlw	19
  1335  00DE2E  5C01               	subwf	btemp+1,w,c
  1336  00DE30  0E89               	movlw	137
  1337  00DE32  B4D8               	btfsc	status,2,c
  1338  00DE34  5C00               	subwf	btemp,w,c
  1339  00DE36  E30C               	bnc	l103
  1340                           ;tacho.c: 347: {
  1341  00DE38  0102               	movlb	F1497 shr (0+8)
  1342  00DE3A  0E00               	movlw	0
  1343  00DE3C  5D03               	subwf	(F1497+1)& (0+255),w,b
  1344  00DE3E  0EFF               	movlw	255
  1345  00DE40  B4D8               	btfsc	status,2,c
  1346  00DE42  5D02               	subwf	F1497& (0+255),w,b
  1347  00DE44  E202               	bc	l109
  1348  00DE46  4B02               	infsnz	F1497& (0+255),f,b
  1349  00DE48  2B03               	incf	(F1497+1)& (0+255),f,b
  1350  00DE4A                     l109:
  1351                           ;tacho.c: 349: tkrk=0;
  1352  00DE4A  010F               	movlb	_tkrk shr (0+8)
  1353  00DE4C  6B3B               	clrf	_tkrk& (0+255),b
  1354                           ;tacho.c: 350: return;
  1355  00DE4E  0012               	return	
  1356  00DE50                     l103:
  1357                           ;tacho.c: 351: }
  1358  00DE50  C0AB  F202         	movff	?a_PomiarVNT+2,F1497
  1359  00DE54  C0AC  F203         	movff	?a_PomiarVNT+3,F1497+1
  1360                           ;tacho.c: 356: AddTab(tvv,11,wnk2);
  1361  00DE58  0100               	movlb	__Lparam shr (0+8)
  1362  00DE5A  0E86               	movlw	low _tvv
  1363  00DE5C  6FB6               	movwf	?_AddTab^(__Lparam& (0+65280)),b
  1364  00DE5E  0E02               	movlw	high _tvv
  1365  00DE60  6FB7               	movwf	(?_AddTab+1)^(__Lparam& (0+65280)),b
  1366  00DE62  0E0B               	movlw	11
  1367  00DE64  6FB8               	movwf	(?_AddTab+2)^(__Lparam& (0+65280)),b
  1368  00DE66  C0AB  F0B9         	movff	?a_PomiarVNT+2,?_AddTab+3
  1369  00DE6A  C0AC  F0BA         	movff	?a_PomiarVNT+3,?_AddTab+4
  1370  00DE6E  DD0A               	call	_AddTab	;wreg free
  1371                           ;tacho.c: 357: wnk2=HistVal(tvv,11);
  1372  00DE70  0100               	movlb	__Lparam shr (0+8)
  1373  00DE72  0E86               	movlw	low _tvv
  1374  00DE74  6FB6               	movwf	?_HistVal^(__Lparam& (0+65280)),b
  1375  00DE76  0E02               	movlw	high _tvv
  1376  00DE78  6FB7               	movwf	(?_HistVal+1)^(__Lparam& (0+65280)),b
  1377  00DE7A  0E0B               	movlw	11
  1378  00DE7C  6FB8               	movwf	(?_HistVal+2)^(__Lparam& (0+65280)),b
  1379  00DE7E  DDFA               	call	_HistVal	;wreg free
  1380  00DE80  C000  F0AB         	movff	btemp,?a_PomiarVNT+2
  1381  00DE84  C001  F0AC         	movff	btemp+1,?a_PomiarVNT+3
  1382                           ;tacho.c: 358: M.rVVNT=TFlt(wnk2);
  1383  00DE88  C0AB  F0B6         	movff	?a_PomiarVNT+2,?_TFlt
  1384  00DE8C  C0AC  F0B7         	movff	?a_PomiarVNT+3,?_TFlt+1
  1385  00DE90  DE96               	call	_TFlt	;wreg free
  1386  00DE92  C000  F325         	movff	btemp,_M+31
  1387  00DE96  C001  F326         	movff	btemp+1,_M+32
  1388                           ;tacho.c: 359: M.VVNT=(unsigned char)((M.rVVNT/1
      +                          00.0));
  1389  00DE9A  6A00               	clrf	btemp,c
  1390  00DE9C  0EC8               	movlw	200
  1391  00DE9E  6E01               	movwf	btemp+1,c
  1392  00DEA0  0E42               	movlw	66
  1393  00DEA2  6E02               	movwf	btemp+2,c
  1394  00DEA4  C000  F0AD         	movff	btemp,?a_PomiarVNT+4
  1395  00DEA8  C001  F0AE         	movff	btemp+1,?a_PomiarVNT+5
  1396  00DEAC  C002  F0AF         	movff	btemp+2,?a_PomiarVNT+6
  1397  00DEB0  EE03  F025         	lfsr	0,_M+31
  1398  00DEB4  CFEE F000          	movff	postinc0,btemp
  1399  00DEB8  CFED F001          	movff	postdec0,btemp+1
  1400  00DEBC  EC42  F007         	call	lwtoft
  1401  00DEC0  C0AD  F003         	movff	?a_PomiarVNT+4,btemp+3
  1402  00DEC4  C0AE  F004         	movff	?a_PomiarVNT+5,btemp+4
  1403  00DEC8  C0AF  F005         	movff	?a_PomiarVNT+6,btemp+5
  1404  00DECC  EC37  F005         	call	ftdiv
  1405  00DED0  EC16  F006         	call	fttol
  1406  00DED4  C000  F324         	movff	btemp,_M+30
  1407                           ;tacho.c: 360: if((M.rVVNT%100)>=70) M.VVNT+=1;
  1408  00DED8  0E64               	movlw	100
  1409  00DEDA  6E02               	movwf	btemp+2,c
  1410  00DEDC  6A03               	clrf	btemp+3,c
  1411  00DEDE  EE03  F025         	lfsr	0,_M+31
  1412  00DEE2  CFEE F000          	movff	postinc0,btemp
  1413  00DEE6  CFED F001          	movff	postdec0,btemp+1
  1414  00DEEA  ECE3  F005         	call	lwmod
  1415  00DEEE  0E00               	movlw	0
  1416  00DEF0  5C01               	subwf	btemp+1,w,c
  1417  00DEF2  0E46               	movlw	70
  1418  00DEF4  B4D8               	btfsc	status,2,c
  1419  00DEF6  5C00               	subwf	btemp,w,c
  1420  00DEF8  E302               	bnc	l110
  1421  00DEFA  0103               	movlb	(_M+30) shr (0+8)
  1422  00DEFC  2B24               	incf	(_M+30)& (0+255),f,b
  1423  00DEFE                     l110:
  1424                           ;tacho.c: 361: tkrk=0;
  1425  00DEFE  010F               	movlb	_tkrk shr (0+8)
  1426  00DF00  6B3B               	clrf	_tkrk& (0+255),b
  1427  00DF02                     l96:
  1428                           ;tacho.c: 362: }
  1429  00DF02  D9CD               	call	_FPmVNT	;wreg free
  1430                           ;tacho.c: 365: RSDT1.outVNT=M.VVNT;
  1431  00DF04  C324  F336         	movff	_M+30,_RSDT1+9
  1432                           ;tacho.c: 366: }
  1433  00DF08  0012               	return	
  1434  00DF0A                     __end_of_PomiarVNT:
  1435                           ;tacho.c: 370: void ClrDtV(void)
  1436                           ;tacho.c: 371: {
  1437  00DF0A                     _ClrDtV:
  1438  000000                     
  1439                           ;tacho.c: 372: DVNT=0;
  1440  00DF0A  EE02  F008         	lfsr	0,_DVNT	;volatile
  1441  00DF0E  6AEE               	clrf	postinc0,c
  1442  00DF10  6AEE               	clrf	postinc0,c
  1443                           ;tacho.c: 373: dDVNT=0;
  1444  00DF12  EE02  F00E         	lfsr	0,_dDVNT	;volatile
  1445  00DF16  6AEE               	clrf	postinc0,c
  1446  00DF18  6AEE               	clrf	postinc0,c
  1447                           ;tacho.c: 374: tdDVNT=0;
  1448  00DF1A  EE02  F018         	lfsr	0,_tdDVNT	;volatile
  1449  00DF1E  6AEE               	clrf	postinc0,c
  1450  00DF20  6AEE               	clrf	postinc0,c
  1451                           ;tacho.c: 375: ddDVNT=0;
  1452  00DF22  EE02  F026         	lfsr	0,_ddDVNT	;volatile
  1453  00DF26  6AEE               	clrf	postinc0,c
  1454  00DF28  6AEE               	clrf	postinc0,c
  1455  00DF2A  6AEE               	clrf	postinc0,c
  1456  00DF2C  6AEE               	clrf	postinc0,c
  1457                           ;tacho.c: 376: v_t=0;
  1458  00DF2E  EE02  F01E         	lfsr	0,_v_t	;volatile
  1459  00DF32  6AEE               	clrf	postinc0,c
  1460  00DF34  6AEE               	clrf	postinc0,c
  1461                           ;tacho.c: 377: v_dt=0;
  1462  00DF36  EE02  F01C         	lfsr	0,_v_dt	;volatile
  1463  00DF3A  6AEE               	clrf	postinc0,c
  1464  00DF3C  6AEE               	clrf	postinc0,c
  1465                           ;tacho.c: 378: v_tdt=0;
  1466  00DF3E  EE02  F020         	lfsr	0,_v_tdt	;volatile
  1467  00DF42  6AEE               	clrf	postinc0,c
  1468  00DF44  6AEE               	clrf	postinc0,c
  1469                           ;tacho.c: 379: v_ddt=0;
  1470  00DF46  EE02  F02A         	lfsr	0,_v_ddt	;volatile
  1471  00DF4A  6AEE               	clrf	postinc0,c
  1472  00DF4C  6AEE               	clrf	postinc0,c
  1473  00DF4E  6AEE               	clrf	postinc0,c
  1474  00DF50  6AEE               	clrf	postinc0,c
  1475                           ;tacho.c: 380: }
  1476  00DF52  0012               	return	
  1477  00DF54                     __end_of_ClrDtV:
  1478                           ;tacho.c: 382: void PredkoscZmianVNT(void)
  1479                           ;tacho.c: 383: {
  1480  00DF54                     _PredkoscZmianVNT:
  1481  000000                     
  1482                           ;tacho.c: 384: static unsigned int ffv;
  1483  00DF54  B683               	btfsc	3971,3,c	;volatile
  1484  00DF56  D007               	goto	l113
  1485                           ;tacho.c: 390: {
  1486  00DF58  EE02  F004         	lfsr	0,F1507
  1487  00DF5C  6AEE               	clrf	postinc0,c
  1488  00DF5E  6AEE               	clrf	postinc0,c
  1489                           ;tacho.c: 392: indff=0;
  1490  00DF60  010F               	movlb	F1508 shr (0+8)
  1491  00DF62  6B38               	clrf	F1508& (0+255),b
  1492                           ;tacho.c: 393: }
  1493  00DF64  D04E               	goto	l114
  1494  00DF66                     l113:
  1495                           ;tacho.c: 394: else
  1496  00DF66  010F               	movlb	F1508 shr (0+8)
  1497  00DF68  5338               	movf	F1508& (0+255),f,b
  1498  00DF6A  E10F               	bnz	l115
  1499                           ;tacho.c: 397: {
  1500  00DF6C  6AD9               	clrf	fsr2l,c
  1501  00DF6E                     l116:
  1502  00DF6E  50D9               	movf	fsr2l,w,c
  1503  00DF70  0D02               	mullw	2
  1504  00DF72  0E46               	movlw	low _wvv
  1505  00DF74  24F3               	addwf	prodl,w,c
  1506  00DF76  6EE9               	movwf	fsr0l,c
  1507  00DF78  0E02               	movlw	high _wvv
  1508  00DF7A  20F4               	addwfc	prodh,w,c
  1509  00DF7C  6EEA               	movwf	fsr0h,c
  1510  00DF7E  6AEE               	clrf	postinc0,c
  1511  00DF80  6AED               	clrf	postdec0,c
  1512  00DF82  2AD9               	incf	fsr2l,f,c
  1513  00DF84  0E09               	movlw	9
  1514  00DF86  64D9               	cpfsgt	fsr2l,c
  1515  00DF88  D7F2               	goto	l116
  1516  00DF8A                     l115:
  1517                           ;tacho.c: 399: }
  1518  00DF8A  010F               	movlb	F1508 shr (0+8)
  1519  00DF8C  2B38               	incf	F1508& (0+255),f,b
  1520                           ;tacho.c: 401: if(indff>=9)
  1521  00DF8E  0E08               	movlw	8
  1522  00DF90  6538               	cpfsgt	F1508& (0+255),b
  1523  00DF92  D01C               	goto	l119
  1524                           ;tacho.c: 402: {
  1525  00DF94  0E09               	movlw	9
  1526  00DF96  CFE8 FF38          	movff	wreg,F1508
  1527                           ;tacho.c: 404: for(i=0;i<9;i++) wvv[i]=wvv[i+1];
  1528  00DF9A  6AD9               	clrf	fsr2l,c
  1529  00DF9C                     l120:
  1530  00DF9C  50D9               	movf	fsr2l,w,c
  1531  00DF9E  0D02               	mullw	2
  1532  00DFA0  0E48               	movlw	low (_wvv+2)
  1533  00DFA2  24F3               	addwf	prodl,w,c
  1534  00DFA4  6EE1               	movwf	fsr1l,c
  1535  00DFA6  0E02               	movlw	high (_wvv+2)
  1536  00DFA8  20F4               	addwfc	prodh,w,c
  1537  00DFAA  6EE2               	movwf	fsr1h,c
  1538  00DFAC  50D9               	movf	fsr2l,w,c
  1539  00DFAE  0D02               	mullw	2
  1540  00DFB0  0E46               	movlw	low _wvv
  1541  00DFB2  24F3               	addwf	prodl,w,c
  1542  00DFB4  6EE9               	movwf	fsr0l,c
  1543  00DFB6  0E02               	movlw	high _wvv
  1544  00DFB8  20F4               	addwfc	prodh,w,c
  1545  00DFBA  6EEA               	movwf	fsr0h,c
  1546  00DFBC  CFE6 FFEE          	movff	postinc1,postinc0
  1547  00DFC0  CFE5 FFED          	movff	postdec1,postdec0
  1548  00DFC4  2AD9               	incf	fsr2l,f,c
  1549  00DFC6  0E08               	movlw	8
  1550  00DFC8  64D9               	cpfsgt	fsr2l,c
  1551  00DFCA  D7E8               	goto	l120
  1552  00DFCC                     l119:
  1553                           ;tacho.c: 405: }
  1554  00DFCC  EE03  F025         	lfsr	0,_M+31
  1555  00DFD0  CFEE F000          	movff	postinc0,btemp
  1556  00DFD4  CFED F001          	movff	postdec0,btemp+1
  1557  00DFD8  C204  FFE8         	movff	F1507,wreg
  1558  00DFDC  5C00               	subwf	btemp,w,c
  1559  00DFDE  6E02               	movwf	btemp+2,c
  1560  00DFE0  C205  FFE8         	movff	F1507+1,wreg
  1561  00DFE4  5801               	subwfb	btemp+1,w,c
  1562  00DFE6  6E03               	movwf	btemp+3,c
  1563  00DFE8  CF38  FFE8         	movff	F1508,wreg
  1564  00DFEC  0D02               	mullw	2
  1565  00DFEE  0E46               	movlw	low _wvv
  1566  00DFF0  24F3               	addwf	prodl,w,c
  1567  00DFF2  6EE9               	movwf	fsr0l,c
  1568  00DFF4  0E02               	movlw	high _wvv
  1569  00DFF6  20F4               	addwfc	prodh,w,c
  1570  00DFF8  6EEA               	movwf	fsr0h,c
  1571  00DFFA  C002  FFEE         	movff	btemp+2,postinc0
  1572  00DFFE  C003  FFED         	movff	btemp+3,postdec0
  1573  00E002                     l114:
  1574                           ;tacho.c: 407: }
  1575  00E002  C325  F204         	movff	_M+31,F1507
  1576  00E006  C326  F205         	movff	_M+32,F1507+1
  1577                           ;tacho.c: 409: w=0;
  1578  00E00A  0100               	movlb	__Lparam shr (0+8)
  1579  00E00C  6BBA               	clrf	?a_PredkoscZmianVNT^(__Lparam& (0+65280)),
      +                          b
  1580  00E00E  6BBB               	clrf	(?a_PredkoscZmianVNT+1)^(__Lparam& (0+6528
      +                          0)),b
  1581  00E010  6BBC               	clrf	(?a_PredkoscZmianVNT+2)^(__Lparam& (0+6528
      +                          0)),b
  1582  00E012  6BBD               	clrf	(?a_PredkoscZmianVNT+3)^(__Lparam& (0+6528
      +                          0)),b
  1583                           ;tacho.c: 410: for(i=0;i<10;i++) {if(w+wvv[i]<=0
      +                          xff) w+=wvv[i];}
  1584  00E014  6AD9               	clrf	fsr2l,c
  1585  00E016                     l123:
  1586  00E016  50D9               	movf	fsr2l,w,c
  1587  00E018  0D02               	mullw	2
  1588  00E01A  0E46               	movlw	low _wvv
  1589  00E01C  24F3               	addwf	prodl,w,c
  1590  00E01E  6EE9               	movwf	fsr0l,c
  1591  00E020  0E02               	movlw	high _wvv
  1592  00E022  20F4               	addwfc	prodh,w,c
  1593  00E024  6EEA               	movwf	fsr0h,c
  1594  00E026  CFEE F000          	movff	postinc0,btemp
  1595  00E02A  CFED F001          	movff	postdec0,btemp+1
  1596  00E02E  0E00               	movlw	0
  1597  00E030  BE01               	btfsc	btemp+1,7,c
  1598  00E032  0EFF               	movlw	255
  1599  00E034  6E02               	movwf	btemp+2,c
  1600  00E036  6E03               	movwf	btemp+3,c
  1601  00E038  0100               	movlb	__Lparam shr (0+8)
  1602  00E03A  51BA               	movf	?a_PredkoscZmianVNT^(__Lparam& (0+65280)),
      +                          w
  1603  00E03C  2400               	addwf	btemp,w,c
  1604  00E03E  6E04               	movwf	btemp+4,c
  1605  00E040  51BB               	movf	(?a_PredkoscZmianVNT+1)^(__Lparam& (0+6528
      +                          0)),w
  1606  00E042  2001               	addwfc	btemp+1,w,c
  1607  00E044  6E05               	movwf	btemp+5,c
  1608  00E046  51BC               	movf	(?a_PredkoscZmianVNT+2)^(__Lparam& (0+6528
      +                          0)),w
  1609  00E048  2002               	addwfc	btemp+2,w,c
  1610  00E04A  6E06               	movwf	btemp+6,c
  1611  00E04C  51BD               	movf	(?a_PredkoscZmianVNT+3)^(__Lparam& (0+6528
      +                          0)),w
  1612  00E04E  2003               	addwfc	btemp+3,w,c
  1613  00E050  6E07               	movwf	btemp+7,c
  1614  00E052  5007               	movf	btemp+7,w,c
  1615  00E054  0A80               	xorlw	128
  1616  00E056  0F80               	addlw	128
  1617  00E058  E108               	bnz	u625
  1618  00E05A  0E00               	movlw	0
  1619  00E05C  5C06               	subwf	btemp+6,w,c
  1620  00E05E  E105               	bnz	u625
  1621  00E060  0E01               	movlw	1
  1622  00E062  5C05               	subwf	btemp+5,w,c
  1623  00E064  E102               	bnz	u625
  1624  00E066  0E00               	movlw	0
  1625  00E068  5C04               	subwf	btemp+4,w,c
  1626  00E06A                     u625:
  1627  00E06A  E219               	bc	l126
  1628  00E06C  50D9               	movf	fsr2l,w,c
  1629  00E06E  0D02               	mullw	2
  1630  00E070  0E46               	movlw	low _wvv
  1631  00E072  24F3               	addwf	prodl,w,c
  1632  00E074  6EE9               	movwf	fsr0l,c
  1633  00E076  0E02               	movlw	high _wvv
  1634  00E078  20F4               	addwfc	prodh,w,c
  1635  00E07A  6EEA               	movwf	fsr0h,c
  1636  00E07C  CFEE F000          	movff	postinc0,btemp
  1637  00E080  CFED F001          	movff	postdec0,btemp+1
  1638  00E084  0E00               	movlw	0
  1639  00E086  BE01               	btfsc	btemp+1,7,c
  1640  00E088  0EFF               	movlw	255
  1641  00E08A  6E02               	movwf	btemp+2,c
  1642  00E08C  6E03               	movwf	btemp+3,c
  1643  00E08E  5000               	movf	btemp,w,c
  1644  00E090  27BA               	addwf	?a_PredkoscZmianVNT^(__Lparam& (0+65280))
      +                          ,f,b
  1645  00E092  5001               	movf	btemp+1,w,c
  1646  00E094  23BB               	addwfc	(?a_PredkoscZmianVNT+1)^(__Lparam& (0+65
      +                          280)),f,b
  1647  00E096  5002               	movf	btemp+2,w,c
  1648  00E098  23BC               	addwfc	(?a_PredkoscZmianVNT+2)^(__Lparam& (0+65
      +                          280)),f,b
  1649  00E09A  5003               	movf	btemp+3,w,c
  1650  00E09C  23BD               	addwfc	(?a_PredkoscZmianVNT+3)^(__Lparam& (0+65
      +                          280)),f,b
  1651  00E09E                     l126:
  1652  00E09E  2AD9               	incf	fsr2l,f,c
  1653  00E0A0  0E09               	movlw	9
  1654  00E0A2  64D9               	cpfsgt	fsr2l,c
  1655  00E0A4  D7B8               	goto	l123
  1656                           ;tacho.c: 411: ddDVNT=w;
  1657  00E0A6  C0BA  F226         	movff	?a_PredkoscZmianVNT,_ddDVNT	;volatile
  1658  00E0AA  C0BB  F227         	movff	?a_PredkoscZmianVNT+1,_ddDVNT+1	;volatile
  1659  00E0AE  C0BC  F228         	movff	?a_PredkoscZmianVNT+2,_ddDVNT+2	;volatile
  1660  00E0B2  C0BD  F229         	movff	?a_PredkoscZmianVNT+3,_ddDVNT+3	;volatile
  1661                           ;tacho.c: 412: }
  1662  00E0B6  0C09               	retlw	9
  1663  00E0B8                     __end_of_PredkoscZmianVNT:
  1664                           ;tacho.c: 415: void FltParVNT(void)
  1665                           ;tacho.c: 416: {
  1666  00E0B8                     _FltParVNT:
  1667  000000                     
  1668                           ;tacho.c: 417: static unsigned char indv,indtm;
  1669  00E0B8  EE03  F025         	lfsr	0,_M+31
  1670  00E0BC  CFEE F002          	movff	postinc0,btemp+2
  1671  00E0C0  CFED F003          	movff	postdec0,btemp+3
  1672  00E0C4  C206  F000         	movff	F1515,btemp
  1673  00E0C8  C207  F001         	movff	F1515+1,btemp+1
  1674  00E0CC  5003               	movf	btemp+3,w,c
  1675  00E0CE  5C01               	subwf	btemp+1,w,c
  1676  00E0D0  E102               	bnz	u645
  1677  00E0D2  5002               	movf	btemp+2,w,c
  1678  00E0D4  5C00               	subwf	btemp,w,c
  1679  00E0D6                     u645:
  1680  00E0D6  E20D               	bc	l128
  1681  00E0D8  EE03  F025         	lfsr	0,_M+31
  1682  00E0DC  CFEE F000          	movff	postinc0,btemp
  1683  00E0E0  CFED F001          	movff	postdec0,btemp+1
  1684  00E0E4  C206  FFE8         	movff	F1515,wreg
  1685  00E0E8  5C00               	subwf	btemp,w,c
  1686  00E0EA  6EF3               	movwf	prodl,c
  1687  00E0EC  C207  FFE8         	movff	F1515+1,wreg
  1688  00E0F0  D00A               	goto	L1
  1689  00E0F2                     l128:
  1690                           ;tacho.c: 425: else wr=fv-M.rVVNT;
  1691  00E0F2  C206  F000         	movff	F1515,btemp
  1692  00E0F6  C207  F001         	movff	F1515+1,btemp+1
  1693  00E0FA  C325  FFE8         	movff	_M+31,wreg
  1694  00E0FE  5C00               	subwf	btemp,w,c
  1695  00E100  6EF3               	movwf	prodl,c
  1696  00E102  C326  FFE8         	movff	_M+32,wreg
  1697  00E106                     L1:
  1698  00E106  5801               	subwfb	btemp+1,w,c
  1699  00E108  6EF4               	movwf	prodh,c
  1700                           ;tacho.c: 426: if(wr) indv++;
  1701  00E10A  50F4               	movf	prodh,w,c
  1702  00E10C  10F3               	iorwf	prodl,w,c
  1703  00E10E  E002               	bz	l130
  1704  00E110  010F               	movlb	F1513 shr (0+8)
  1705  00E112  2B39               	incf	F1513& (0+255),f,b
  1706  00E114                     l130:
  1707                           ;tacho.c: 427: if(wr>=2) indv=10;
  1708  00E114  0E00               	movlw	0
  1709  00E116  5CF4               	subwf	prodh,w,c
  1710  00E118  0E02               	movlw	2
  1711  00E11A  B4D8               	btfsc	status,2,c
  1712  00E11C  5CF3               	subwf	prodl,w,c
  1713  00E11E  E303               	bnc	l131
  1714  00E120  0E0A               	movlw	10
  1715  00E122  CFE8 FF39          	movff	wreg,F1513
  1716  00E126                     l131:
  1717                           ;tacho.c: 428: PredkoscZmianVNT();
  1718  00E126  DF16               	call	_PredkoscZmianVNT	;wreg free
  1719                           ;tacho.c: 433: for(i=0;i<9;i++) wv[i]=wv[i+1];
  1720  00E128  6AF3               	clrf	prodl,c
  1721  00E12A  6AF4               	clrf	prodh,c
  1722  00E12C                     l132:
  1723  00E12C  90D8               	bcf	status,0,c
  1724  00E12E  34F3               	rlcf	prodl,w,c
  1725  00E130  6E00               	movwf	btemp,c
  1726  00E132  34F4               	rlcf	prodh,w,c
  1727  00E134  6E01               	movwf	btemp+1,c
  1728  00E136  0E30               	movlw	low (_wv+2)
  1729  00E138  2400               	addwf	btemp,w,c
  1730  00E13A  6EE1               	movwf	fsr1l,c
  1731  00E13C  0E02               	movlw	high (_wv+2)
  1732  00E13E  2001               	addwfc	btemp+1,w,c
  1733  00E140  6EE2               	movwf	fsr1h,c
  1734  00E142  90D8               	bcf	status,0,c
  1735  00E144  34F3               	rlcf	prodl,w,c
  1736  00E146  6E00               	movwf	btemp,c
  1737  00E148  34F4               	rlcf	prodh,w,c
  1738  00E14A  6E01               	movwf	btemp+1,c
  1739  00E14C  0E2E               	movlw	low _wv
  1740  00E14E  2400               	addwf	btemp,w,c
  1741  00E150  6EE9               	movwf	fsr0l,c
  1742  00E152  0E02               	movlw	high _wv
  1743  00E154  2001               	addwfc	btemp+1,w,c
  1744  00E156  6EEA               	movwf	fsr0h,c
  1745  00E158  CFE6 FFEE          	movff	postinc1,postinc0
  1746  00E15C  CFE5 FFED          	movff	postdec1,postdec0
  1747  00E160  4AF3               	infsnz	prodl,f,c
  1748  00E162  2AF4               	incf	prodh,f,c
  1749  00E164  0E00               	movlw	0
  1750  00E166  5CF4               	subwf	prodh,w,c
  1751  00E168  0E09               	movlw	9
  1752  00E16A  B4D8               	btfsc	status,2,c
  1753  00E16C  5CF3               	subwf	prodl,w,c
  1754  00E16E  E3DE               	bnc	l132
  1755                           ;tacho.c: 434: wv[9]=M.rVVNT;
  1756  00E170  C325  F240         	movff	_M+31,_wv+18
  1757  00E174  C326  F241         	movff	_M+32,_wv+19
  1758                           ;tacho.c: 435: www=0;
  1759  00E178  0100               	movlb	__Lparam shr (0+8)
  1760  00E17A  6BB6               	clrf	?a_FltParVNT^(__Lparam& (0+65280)),b
  1761  00E17C  6BB7               	clrf	(?a_FltParVNT+1)^(__Lparam& (0+65280)),b
  1762  00E17E  6BB8               	clrf	(?a_FltParVNT+2)^(__Lparam& (0+65280)),b
  1763  00E180  6BB9               	clrf	(?a_FltParVNT+3)^(__Lparam& (0+65280)),b
  1764                           ;tacho.c: 436: for(i=0;i<9;i++) www+=wv[i];
  1765  00E182  6AF3               	clrf	prodl,c
  1766  00E184  6AF4               	clrf	prodh,c
  1767  00E186                     l135:
  1768  00E186  90D8               	bcf	status,0,c
  1769  00E188  34F3               	rlcf	prodl,w,c
  1770  00E18A  6E00               	movwf	btemp,c
  1771  00E18C  34F4               	rlcf	prodh,w,c
  1772  00E18E  6E01               	movwf	btemp+1,c
  1773  00E190  0E2E               	movlw	low _wv
  1774  00E192  2400               	addwf	btemp,w,c
  1775  00E194  6EE9               	movwf	fsr0l,c
  1776  00E196  0E02               	movlw	high _wv
  1777  00E198  2001               	addwfc	btemp+1,w,c
  1778  00E19A  6EEA               	movwf	fsr0h,c
  1779  00E19C  CFEE F000          	movff	postinc0,btemp
  1780  00E1A0  CFED F001          	movff	postdec0,btemp+1
  1781  00E1A4  0E00               	movlw	0
  1782  00E1A6  BE01               	btfsc	btemp+1,7,c
  1783  00E1A8  0EFF               	movlw	255
  1784  00E1AA  6E02               	movwf	btemp+2,c
  1785  00E1AC  6E03               	movwf	btemp+3,c
  1786  00E1AE  0100               	movlb	__Lparam shr (0+8)
  1787  00E1B0  5000               	movf	btemp,w,c
  1788  00E1B2  27B6               	addwf	?a_FltParVNT^(__Lparam& (0+65280)),f,b
  1789  00E1B4  5001               	movf	btemp+1,w,c
  1790  00E1B6  23B7               	addwfc	(?a_FltParVNT+1)^(__Lparam& (0+65280)),f
      +                          ,b
  1791  00E1B8  5002               	movf	btemp+2,w,c
  1792  00E1BA  23B8               	addwfc	(?a_FltParVNT+2)^(__Lparam& (0+65280)),f
      +                          ,b
  1793  00E1BC  5003               	movf	btemp+3,w,c
  1794  00E1BE  23B9               	addwfc	(?a_FltParVNT+3)^(__Lparam& (0+65280)),f
      +                          ,b
  1795  00E1C0  4AF3               	infsnz	prodl,f,c
  1796  00E1C2  2AF4               	incf	prodh,f,c
  1797  00E1C4  0E00               	movlw	0
  1798  00E1C6  5CF4               	subwf	prodh,w,c
  1799  00E1C8  0E09               	movlw	9
  1800  00E1CA  B4D8               	btfsc	status,2,c
  1801  00E1CC  5CF3               	subwf	prodl,w,c
  1802  00E1CE  E3DB               	bnc	l135
  1803                           ;tacho.c: 437: tdDVNT=wv[9]-www/9;
  1804  00E1D0  0E09               	movlw	9
  1805  00E1D2  6E04               	movwf	btemp+4,c
  1806  00E1D4  6A05               	clrf	btemp+5,c
  1807  00E1D6  6A06               	clrf	btemp+6,c
  1808  00E1D8  6A07               	clrf	btemp+7,c
  1809  00E1DA  C0B6  F000         	movff	?a_FltParVNT,btemp
  1810  00E1DE  C0B7  F001         	movff	?a_FltParVNT+1,btemp+1
  1811  00E1E2  C0B8  F002         	movff	?a_FltParVNT+2,btemp+2
  1812  00E1E6  C0B9  F003         	movff	?a_FltParVNT+3,btemp+3
  1813  00E1EA  EC0B  F004         	call	lldiv
  1814  00E1EE  C000  F004         	movff	btemp,btemp+4
  1815  00E1F2  C001  F005         	movff	btemp+1,btemp+5
  1816  00E1F6  C002  F006         	movff	btemp+2,btemp+6
  1817  00E1FA  C003  F007         	movff	btemp+3,btemp+7
  1818  00E1FE  EE02  F040         	lfsr	0,_wv+18
  1819  00E202  CFEE F000          	movff	postinc0,btemp
  1820  00E206  CFED F001          	movff	postdec0,btemp+1
  1821  00E20A  5004               	movf	btemp+4,w,c
  1822  00E20C  5C00               	subwf	btemp,w,c
  1823  00E20E  CFE8 F218          	movff	wreg,_tdDVNT	;volatile
  1824  00E212  5005               	movf	btemp+5,w,c
  1825  00E214  5801               	subwfb	btemp+1,w,c
  1826  00E216  CFE8 F219          	movff	wreg,_tdDVNT+1	;volatile
  1827                           ;tacho.c: 438: if(tdDVNT>0&&tdDVNT<=3) tdDVNT=0;
  1828  00E21A  0102               	movlb	_tdDVNT shr (0+8)	;volatile
  1829  00E21C  5119               	movf	(_tdDVNT+1)& (0+255),w,b	;volatile
  1830  00E21E  0A80               	xorlw	128
  1831  00E220  0F80               	addlw	128
  1832  00E222  0E01               	movlw	1
  1833  00E224  B4D8               	btfsc	status,2,c
  1834  00E226  5D18               	subwf	_tdDVNT& (0+255),w,b	;volatile
  1835  00E228  E30B               	bnc	l138
  1836  00E22A  5119               	movf	(_tdDVNT+1)& (0+255),w,b	;volatile
  1837  00E22C  0A80               	xorlw	128
  1838  00E22E  0F80               	addlw	128
  1839  00E230  0E04               	movlw	4
  1840  00E232  B4D8               	btfsc	status,2,c
  1841  00E234  5D18               	subwf	_tdDVNT& (0+255),w,b	;volatile
  1842  00E236  E204               	bc	l138
  1843  00E238  EE02  F018         	lfsr	0,_tdDVNT	;volatile
  1844  00E23C  6AEE               	clrf	postinc0,c
  1845  00E23E  6AEE               	clrf	postinc0,c
  1846  00E240                     l138:
  1847                           ;tacho.c: 439: if(tdDVNT<0&&tdDVNT>=-3) tdDVNT=0
      +                          ;
  1848  00E240  0102               	movlb	_tdDVNT shr (0+8)	;volatile
  1849  00E242  AF19               	btfss	(_tdDVNT+1)& (0+255),7,b	;volatile
  1850  00E244  D00B               	goto	l139
  1851  00E246  5119               	movf	(_tdDVNT+1)& (0+255),w,b	;volatile
  1852  00E248  0A80               	xorlw	128
  1853  00E24A  0F81               	addlw	-127
  1854  00E24C  0EFD               	movlw	253
  1855  00E24E  B4D8               	btfsc	status,2,c
  1856  00E250  5D18               	subwf	_tdDVNT& (0+255),w,b	;volatile
  1857  00E252  E304               	bnc	l139
  1858  00E254  EE02  F018         	lfsr	0,_tdDVNT	;volatile
  1859  00E258  6AEE               	clrf	postinc0,c
  1860  00E25A  6AEE               	clrf	postinc0,c
  1861  00E25C                     l139:
  1862                           ;tacho.c: 443: indtm++;
  1863  00E25C  010F               	movlb	F1514 shr (0+8)
  1864  00E25E  2B3A               	incf	F1514& (0+255),f,b
  1865                           ;tacho.c: 444: if(indtm>9)
  1866  00E260  0E09               	movlw	9
  1867  00E262  653A               	cpfsgt	F1514& (0+255),b
  1868  00E264  0C09               	retlw	9
  1869                           ;tacho.c: 445: {
  1870  00E266  6B3A               	clrf	F1514& (0+255),b
  1871                           ;tacho.c: 448: if(indv<=7)
  1872  00E268  0E08               	movlw	8
  1873  00E26A  010F               	movlb	F1513 shr (0+8)
  1874  00E26C  6139               	cpfslt	F1513& (0+255),b
  1875  00E26E  D005               	goto	l141
  1876                           ;tacho.c: 449: {
  1877  00E270  EE02  F00E         	lfsr	0,_dDVNT	;volatile
  1878  00E274  6AEE               	clrf	postinc0,c
  1879  00E276  6AEE               	clrf	postinc0,c
  1880                           ;tacho.c: 451: }
  1881  00E278  D00F               	goto	l142
  1882  00E27A                     l141:
  1883                           ;tacho.c: 452: else
  1884  00E27A  0103               	movlb	(_M+31) shr (0+8)
  1885  00E27C  C206  FFE8         	movff	F1515,wreg
  1886  00E280  5D25               	subwf	(_M+31)& (0+255),w,b
  1887  00E282  CFE8 F20E          	movff	wreg,_dDVNT	;volatile
  1888  00E286  C207  FFE8         	movff	F1515+1,wreg
  1889  00E28A  5926               	subwfb	(_M+32)& (0+255),w,b
  1890  00E28C  CFE8 F20F          	movff	wreg,_dDVNT+1	;volatile
  1891                           ;tacho.c: 455: fv=M.rVVNT;
  1892  00E290  C325  F206         	movff	_M+31,F1515
  1893  00E294  C326  F207         	movff	_M+32,F1515+1
  1894  00E298                     l142:
  1895                           ;tacho.c: 456: }
  1896  00E298  010F               	movlb	F1513 shr (0+8)
  1897  00E29A  6B39               	clrf	F1513& (0+255),b
  1898                           ;tacho.c: 458: }
  1899  00E29C  0012               	return	
  1900  00E29E                     __end_of_FltParVNT:
  1901                           ;tacho.c: 462: void FPmVNT(void)
  1902                           ;tacho.c: 463: {
  1903  00E29E                     _FPmVNT:
  1904  000000                     
  1905                           ;tacho.c: 466: DVNT=VDoc-M.rVVNT;
  1906  00E29E  0102               	movlb	_VDoc shr (0+8)	;volatile
  1907  00E2A0  C325  FFE8         	movff	_M+31,wreg
  1908  00E2A4  5D0A               	subwf	_VDoc& (0+255),w,b	;volatile
  1909  00E2A6  CFE8 F208          	movff	wreg,_DVNT	;volatile
  1910  00E2AA  C326  FFE8         	movff	_M+32,wreg
  1911  00E2AE  590B               	subwfb	(_VDoc+1)& (0+255),w,b
  1912  00E2B0  CFE8 F209          	movff	wreg,_DVNT+1	;volatile
  1913                           ;tacho.c: 467: v_t=DVNT;
  1914  00E2B4  C208  F21E         	movff	_DVNT,_v_t	;volatile
  1915  00E2B8  C209  F21F         	movff	_DVNT+1,_v_t+1	;volatile
  1916                           ;tacho.c: 468: if(RTdS(9)>1)
  1917  00E2BC  0E09               	movlw	9
  1918  00E2BE  EC45  F07E         	call	_RTdS
  1919  00E2C2  6E00               	movwf	btemp,c
  1920  00E2C4  0E02               	movlw	2
  1921  00E2C6  5C00               	subwf	btemp,w,c
  1922  00E2C8  A0D8               	btfss	status,0,c
  1923  00E2CA  0012               	return	
  1924                           ;tacho.c: 469: {
  1925  00E2CC  0E09               	movlw	9
  1926  00E2CE  EC33  F07E         	call	_StartRTdS
  1927                           ;tacho.c: 471: FltParVNT();
  1928  00E2D2  DEF2               	call	_FltParVNT	;wreg free
  1929                           ;tacho.c: 472: v_dt=dDVNT;
  1930  00E2D4  C20E  F21C         	movff	_dDVNT,_v_dt	;volatile
  1931  00E2D8  C20F  F21D         	movff	_dDVNT+1,_v_dt+1	;volatile
  1932                           ;tacho.c: 473: v_tdt=tdDVNT;
  1933  00E2DC  C218  F220         	movff	_tdDVNT,_v_tdt	;volatile
  1934  00E2E0  C219  F221         	movff	_tdDVNT+1,_v_tdt+1	;volatile
  1935                           ;tacho.c: 474: v_ddt=ddDVNT;
  1936  00E2E4  C226  F22A         	movff	_ddDVNT,_v_ddt	;volatile
  1937  00E2E8  C227  F22B         	movff	_ddDVNT+1,_v_ddt+1	;volatile
  1938  00E2EC  C228  F22C         	movff	_ddDVNT+2,_v_ddt+2	;volatile
  1939  00E2F0  C229  F22D         	movff	_ddDVNT+3,_v_ddt+3	;volatile
  1940                           ;tacho.c: 475: }
  1941  00E2F4  0012               	return	
  1942  00E2F6                     __end_of_FPmVNT:
  1943                           ;tacho.c: 481: void SetNstVNT(unsigned char doc)
  1944                           ;tacho.c: 482: {
  1945  00E2F6                     _SetNstVNT:
  1946  000000                     
  1947                           ; _doc loaded to fsr2l
  1948  00E2F6  6ED9               	movwf	fsr2l,c
  1949                           ;tacho.c: 483: VDoc=doc*100;
  1950  00E2F8  50D9               	movf	fsr2l,w,c
  1951  00E2FA  0D64               	mullw	100
  1952  00E2FC  CFF3 F20A          	movff	prodl,_VDoc	;volatile
  1953  00E300  CFF4 F20B          	movff	prodh,_VDoc+1	;volatile
  1954                           ;tacho.c: 484: }
  1955  00E304  0012               	return	
  1956  00E306                     __end_of_SetNstVNT:
  1957                           ;tacho.c: 490: bit Vrosnie(const unsigned char t
      +                          )
  1958                           ;tacho.c: 491: {
  1959  00E306                     _Vrosnie:
  1960  000000                     
  1961                           ; _t loaded to fsr2l
  1962  00E306  6ED9               	movwf	fsr2l,c
  1963                           ;tacho.c: 495: return (v_dt>t)?1:0;
  1964  00E308  C21C  F000         	movff	_v_dt,btemp	;volatile
  1965  00E30C  C21D  F001         	movff	_v_dt+1,btemp+1	;volatile
  1966  00E310  CFD9 F002          	movff	fsr2l,btemp+2
  1967  00E314  6A03               	clrf	btemp+3,c
  1968  00E316  5003               	movf	btemp+3,w,c
  1969  00E318  0A80               	xorlw	128
  1970  00E31A  6E04               	movwf	btemp+4,c
  1971  00E31C  5001               	movf	btemp+1,w,c
  1972  00E31E  0A80               	xorlw	128
  1973  00E320  5C04               	subwf	btemp+4,w,c
  1974  00E322  E102               	bnz	u785
  1975  00E324  5000               	movf	btemp,w,c
  1976  00E326  5C02               	subwf	btemp+2,w,c
  1977  00E328                     u785:
  1978  00E328  E202               	bc	u780
  1979  00E32A  80D8               	bsf	status,0,c
  1980  00E32C  0012               	return	
  1981  00E32E                     u780:
  1982  00E32E  90D8               	bcf	status,0,c
  1983  00E330  0012               	return	
  1984                           ;tacho.c: 496: }
  1985  00E332                     __end_of_Vrosnie:
  1986                           ;tacho.c: 502: bit Vmaleje(const unsigned int t)
  1987                           ;tacho.c: 503: {
  1988  00E332  00B2               	dw	?_Vmaleje
  1989  00E334                     _Vmaleje:
  1990  000000                     
  1991                           ;tacho.c: 504: signed char w;
  1992  00E334  0100               	movlb	__Lparam shr (0+8)
  1993  00E336  51B2               	movf	?_Vmaleje^(__Lparam& (0+65280)),w
  1994  00E338  0800               	sublw	0
  1995  00E33A  6ED9               	movwf	fsr2l,c
  1996                           ;tacho.c: 506: return (v_dt<w)?1:0;
  1997  00E33C  CFD9 F002          	movff	fsr2l,btemp+2
  1998  00E340  6A03               	clrf	btemp+3,c
  1999  00E342  BE02               	btfsc	btemp+2,7,c
  2000  00E344  0603               	decf	btemp+3,f,c
  2001  00E346  C21C  F000         	movff	_v_dt,btemp	;volatile
  2002  00E34A  C21D  F001         	movff	_v_dt+1,btemp+1	;volatile
  2003  00E34E  5001               	movf	btemp+1,w,c
  2004  00E350  0A80               	xorlw	128
  2005  00E352  6E04               	movwf	btemp+4,c
  2006  00E354  5003               	movf	btemp+3,w,c
  2007  00E356  0A80               	xorlw	128
  2008  00E358  5C04               	subwf	btemp+4,w,c
  2009  00E35A  E102               	bnz	u805
  2010  00E35C  5002               	movf	btemp+2,w,c
  2011  00E35E  5C00               	subwf	btemp,w,c
  2012  00E360                     u805:
  2013  00E360  E202               	bc	u800
  2014  00E362  80D8               	bsf	status,0,c
  2015  00E364  0012               	return	
  2016  00E366                     u800:
  2017  00E366  90D8               	bcf	status,0,c
  2018  00E368  0012               	return	
  2019                           ;tacho.c: 508: }
  2020  00E36A                     __end_of_Vmaleje:
  2021                           ;tacho.c: 512: bit Vstoi(void)
  2022                           ;tacho.c: 513: {
  2023  00E36A                     _Vstoi:
  2024  000000                     
  2025                           ;tacho.c: 514: return (!v_dt)?1:0;
  2026  00E36A  0102               	movlb	_v_dt shr (0+8)	;volatile
  2027  00E36C  511C               	movf	_v_dt& (0+255),w,b	;volatile
  2028  00E36E  111D               	iorwf	(_v_dt+1)& (0+255),w,b	;volatile
  2029  00E370  90D8               	bcf	status,0,c
  2030  00E372  B4D8               	btfsc	status,2,c
  2031  00E374  80D8               	bsf	status,0,c
  2032  00E376  0012               	return	
  2033                           ;tacho.c: 515: }
  2034  00E378                     __end_of_Vstoi:
  2035                           ;tacho.c: 521: bit Vnizsza(const unsigned int t)
  2036                           ;tacho.c: 522: {
  2037  00E378  00A4               	dw	?_Vnizsza
  2038  00E37A                     _Vnizsza:
  2039  000000                     
  2040                           ;tacho.c: 523: return (v_t>t)?1:0;
  2041  00E37A  C21E  F000         	movff	_v_t,btemp	;volatile
  2042  00E37E  C21F  F001         	movff	_v_t+1,btemp+1	;volatile
  2043  00E382  0100               	movlb	__Lparam shr (0+8)
  2044  00E384  5001               	movf	btemp+1,w,c
  2045  00E386  5DA5               	subwf	(?_Vnizsza+1)^(__Lparam& (0+65280)),w
  2046  00E388  E102               	bnz	u825
  2047  00E38A  5000               	movf	btemp,w,c
  2048  00E38C  5DA4               	subwf	?_Vnizsza^(__Lparam& (0+65280)),w
  2049  00E38E                     u825:
  2050  00E38E  E202               	bc	u820
  2051  00E390  80D8               	bsf	status,0,c
  2052  00E392  0012               	return	
  2053  00E394                     u820:
  2054  00E394  90D8               	bcf	status,0,c
  2055  00E396  0012               	return	
  2056                           ;tacho.c: 524: }
  2057  00E398                     __end_of_Vnizsza:
  2058                           ;tacho.c: 530: bit Vwyzsza(const unsigned int t)
  2059                           ;tacho.c: 531: {
  2060  00E398  00A4               	dw	?_Vwyzsza
  2061  00E39A                     _Vwyzsza:
  2062  000000                     
  2063                           ;tacho.c: 532: signed char w;
  2064  00E39A  0100               	movlb	__Lparam shr (0+8)
  2065  00E39C  51A4               	movf	?_Vwyzsza^(__Lparam& (0+65280)),w
  2066  00E39E  0800               	sublw	0
  2067  00E3A0  6ED9               	movwf	fsr2l,c
  2068                           ;tacho.c: 534: return (v_t<w)?1:0;
  2069  00E3A2  CFD9 F002          	movff	fsr2l,btemp+2
  2070  00E3A6  6A03               	clrf	btemp+3,c
  2071  00E3A8  BE02               	btfsc	btemp+2,7,c
  2072  00E3AA  0603               	decf	btemp+3,f,c
  2073  00E3AC  C21E  F000         	movff	_v_t,btemp	;volatile
  2074  00E3B0  C21F  F001         	movff	_v_t+1,btemp+1	;volatile
  2075  00E3B4  5001               	movf	btemp+1,w,c
  2076  00E3B6  0A80               	xorlw	128
  2077  00E3B8  6E04               	movwf	btemp+4,c
  2078  00E3BA  5003               	movf	btemp+3,w,c
  2079  00E3BC  0A80               	xorlw	128
  2080  00E3BE  5C04               	subwf	btemp+4,w,c
  2081  00E3C0  E102               	bnz	u845
  2082  00E3C2  5002               	movf	btemp+2,w,c
  2083  00E3C4  5C00               	subwf	btemp,w,c
  2084  00E3C6                     u845:
  2085  00E3C6  E202               	bc	u840
  2086  00E3C8  80D8               	bsf	status,0,c
  2087  00E3CA  0012               	return	
  2088  00E3CC                     u840:
  2089  00E3CC  90D8               	bcf	status,0,c
  2090  00E3CE  0012               	return	
  2091                           ;tacho.c: 535: }
  2092  00E3D0                     __end_of_Vwyzsza:
  2093                           ;tacho.c: 539: bit Vrowna(void)
  2094                           ;tacho.c: 540: {
  2095  00E3D0                     _Vrowna:
  2096  000000                     
  2097                           ;tacho.c: 541: return (!v_t)?1:0;
  2098  00E3D0  0102               	movlb	_v_t shr (0+8)	;volatile
  2099  00E3D2  511E               	movf	_v_t& (0+255),w,b	;volatile
  2100  00E3D4  111F               	iorwf	(_v_t+1)& (0+255),w,b	;volatile
  2101  00E3D6  90D8               	bcf	status,0,c
  2102  00E3D8  B4D8               	btfsc	status,2,c
  2103  00E3DA  80D8               	bsf	status,0,c
  2104  00E3DC  0012               	return	
  2105                           ;tacho.c: 542: }
  2106  00E3DE                     __end_of_Vrowna:
  2107                           ;tacho.c: 548: bit VTrosnacy(const unsigned char
      +                           t)
  2108                           ;tacho.c: 549: {
  2109  00E3DE                     _VTrosnacy:
  2110  000000                     
  2111                           ; _t loaded to fsr2l
  2112  00E3DE  6ED9               	movwf	fsr2l,c
  2113                           ;tacho.c: 550: return (v_tdt>t)?1:0;
  2114  00E3E0  C220  F000         	movff	_v_tdt,btemp	;volatile
  2115  00E3E4  C221  F001         	movff	_v_tdt+1,btemp+1	;volatile
  2116  00E3E8  CFD9 F002          	movff	fsr2l,btemp+2
  2117  00E3EC  6A03               	clrf	btemp+3,c
  2118  00E3EE  5003               	movf	btemp+3,w,c
  2119  00E3F0  0A80               	xorlw	128
  2120  00E3F2  6E04               	movwf	btemp+4,c
  2121  00E3F4  5001               	movf	btemp+1,w,c
  2122  00E3F6  0A80               	xorlw	128
  2123  00E3F8  5C04               	subwf	btemp+4,w,c
  2124  00E3FA  E102               	bnz	u865
  2125  00E3FC  5000               	movf	btemp,w,c
  2126  00E3FE  5C02               	subwf	btemp+2,w,c
  2127  00E400                     u865:
  2128  00E400  E202               	bc	u860
  2129  00E402  80D8               	bsf	status,0,c
  2130  00E404  0012               	return	
  2131  00E406                     u860:
  2132  00E406  90D8               	bcf	status,0,c
  2133  00E408  0012               	return	
  2134                           ;tacho.c: 551: }
  2135  00E40A                     __end_of_VTrosnacy:
  2136                           ;tacho.c: 557: bit VTmalejacy(const unsigned cha
      +                          r t)
  2137                           ;tacho.c: 558: {
  2138  00E40A                     _VTmalejacy:
  2139  000000                     
  2140                           ; _t loaded to fsr1l
  2141  00E40A  6EE1               	movwf	fsr1l,c
  2142                           ;tacho.c: 559: signed char w;
  2143  00E40C  50E1               	movf	fsr1l,w,c
  2144  00E40E  0800               	sublw	0
  2145  00E410  6ED9               	movwf	fsr2l,c
  2146                           ;tacho.c: 561: return (v_tdt<w)?1:0;
  2147  00E412  CFD9 F002          	movff	fsr2l,btemp+2
  2148  00E416  6A03               	clrf	btemp+3,c
  2149  00E418  BE02               	btfsc	btemp+2,7,c
  2150  00E41A  0603               	decf	btemp+3,f,c
  2151  00E41C  C220  F000         	movff	_v_tdt,btemp	;volatile
  2152  00E420  C221  F001         	movff	_v_tdt+1,btemp+1	;volatile
  2153  00E424  5001               	movf	btemp+1,w,c
  2154  00E426  0A80               	xorlw	128
  2155  00E428  6E04               	movwf	btemp+4,c
  2156  00E42A  5003               	movf	btemp+3,w,c
  2157  00E42C  0A80               	xorlw	128
  2158  00E42E  5C04               	subwf	btemp+4,w,c
  2159  00E430  E102               	bnz	u885
  2160  00E432  5002               	movf	btemp+2,w,c
  2161  00E434  5C00               	subwf	btemp,w,c
  2162  00E436                     u885:
  2163  00E436  E202               	bc	u880
  2164  00E438  80D8               	bsf	status,0,c
  2165  00E43A  0012               	return	
  2166  00E43C                     u880:
  2167  00E43C  90D8               	bcf	status,0,c
  2168  00E43E  0012               	return	
  2169                           ;tacho.c: 562: }
  2170  00E440                     __end_of_VTmalejacy:
  2171                           ;tacho.c: 566: bit VTzerowy(void)
  2172                           ;tacho.c: 567: {
  2173  00E440                     _VTzerowy:
  2174  000000                     
  2175                           ;tacho.c: 568: return (!v_tdt)?1:0;
  2176  00E440  0102               	movlb	_v_tdt shr (0+8)	;volatile
  2177  00E442  5120               	movf	_v_tdt& (0+255),w,b	;volatile
  2178  00E444  1121               	iorwf	(_v_tdt+1)& (0+255),w,b	;volatile
  2179  00E446  90D8               	bcf	status,0,c
  2180  00E448  B4D8               	btfsc	status,2,c
  2181  00E44A  80D8               	bsf	status,0,c
  2182  00E44C  0012               	return	
  2183                           ;tacho.c: 569: }
  2184  00E44E                     __end_of_VTzerowy:
  2185  000000                     
  2186  000000                     
  2187  000000                     
  2188  000000                     
  2189  000000                     
  2190  000000                     
  2191  000000                     
  2192  000000                     
  2193  000000                     
  2194  000000                     
  2195  000000                     
  2196  000000                     
  2197  000000                     
  2198  000000                     
  2199  000000                     
  2200  000000                     
  2201  000000                     
  2202  000000                     
  2203  000000                     
  2204  000000                     
  2205  000000                     
  2206  000000                     
  2207  000000                     
  2208  000000                     
  2209  000000                     
  2210  000000                     
  2211  000000                     
  2212  000000                     
  2213  000000                     
  2214  000000                     
  2215  000000                     
  2216  000000                     
  2217  000000                     
  2218  000000                     
  2219  000000                     
  2220  000000                     
  2221  000000                     
  2222  000000                     
  2223  000000                     
  2224  000000                     
  2225  000000                     
  2226  000000                     
  2227  000000                     
  2228  000000                     
  2229  000000                     
  2230  000000                     
  2231  000000                     
  2232  000000                     
  2233  000000                     
  2234  000000                     
  2235  000000                     
  2236  000000                     
  2237  000000                     
  2238  000000                     
  2239  000000                     
  2240  000000                     
  2241  000000                     
  2242  000000                     
  2243  000000                     
  2244  000000                     
  2245  000000                     
  2246  000000                     
  2247  000000                     
  2248  000000                     
  2249  000000                     
  2250  000000                     
  2251  000000                     
  2252  000000                     
  2253  000000                     
  2254  000000                     
  2255  000000                     
  2256  000000                     
  2257  000000                     
  2258  000000                     
  2259  000000                     
  2260  000000                     
  2261  000000                     
  2262  000000                     
  2263  000000                     
  2264  000000                     
  2265  000000                     
  2266  000000                     
  2267  000000                     
  2268  000000                     
  2269  000000                     
  2270  000000                     
  2271  000000                     
  2272  000000                     
  2273  000000                     
  2274  000000                     
  2275  000000                     
  2276  000000                     
  2277  000000                     
  2278  000000                     
  2279  000000                     
  2280  000000                     
  2281  000000                     
  2282  000000                     
  2283  000000                     
  2284  000000                     
  2285  000000                     
  2286  000000                     
  2287  000000                     
  2288  000000                     
  2289  000000                     
  2290  000000                     
  2291  000000                     
  2292  000000                     
  2293  000000                     
  2294  000000                     
  2295  000000                     
  2296  000000                     
  2297  000000                     
  2298  000000                     
  2299  000000                     
  2300  000000                     
  2301  000000                     
  2302  000000                     
  2303  000000                     
  2304  000000                     
  2305  000000                     
  2306  000000                     
  2307  000000                     
  2308  000000                     
  2309  000000                     
  2310  000000                     
  2311  000000                     
  2312  000000                     
  2313  000000                     
  2314  000000                     
  2315  000000                     
  2316  000000                     
  2317  000000                     
  2318  000000                     
  2319  000000                     
  2320  000000                     
  2321  000000                     
  2322  000000                     
  2323  000000                     
  2324  000000                     
  2325  000000                     
  2326  000000                     
  2327  000000                     
  2328  000000                     
  2329  000000                     
  2330  000000                     
  2331  000000                     
  2332  000000                     
  2333  000000                     
  2334  000000                     
  2335  000000                     
  2336  000000                     
  2337  000000                     
  2338  000000                     
  2339  000000                     
  2340  000000                     
  2341  000000                     
  2342  000000                     
  2343  000000                     
  2344  000000                     
  2345  000000                     
  2346  000000                     
  2347  000000                     
  2348  000000                     
  2349  000000                     
  2350  000000                     
  2351  000000                     
  2352  000000                     
  2353  000000                     
  2354  000000                     
  2355  000000                     
  2356  000000                     
  2357  000000                     
  2358  000000                     
  2359  000000                     
  2360  000000                     
  2361  000000                     
  2362  000000                     
  2363  000000                     
  2364  000000                     
  2365  000000                     
  2366  000000                     
  2367  000000                     
  2368  000000                     
  2369  000000                     
  2370  000000                     
  2371  000000                     
  2372  000000                     
  2373  000000                     
  2374  000000                     
  2375  000000                     
  2376  000000                     
  2377  000000                     
  2378  000000                     
  2379  000000                     
  2380  000000                     
  2381  000000                     
  2382  000000                     
  2383  000000                     
  2384  000000                     
  2385  000000                     
  2386  000000                     
  2387  000000                     
  2388  000000                     
  2389  000000                     
  2390  000000                     
  2391  000000                     
  2392  000000                     
  2393  000000                     
  2394  000000                     
  2395  000000                     
  2396  000000                     
  2397  000000                     
  2398  000000                     
  2399  000000                     
  2400  000000                     
  2401  000000                     
  2402  000000                     
  2403  000000                     
  2404  000000                     
  2405  000000                     
  2406  000000                     
  2407  000000                     
  2408  000000                     
  2409  000000                     
  2410  000000                     
  2411  000000                     
  2412  000000                     
  2413  000000                     
  2414  000000                     
  2415  000000                     
  2416  000000                     
  2417  000000                     
  2418  000000                     
  2419  000000                     
  2420  000000                     
  2421  000000                     
  2422  000000                     
  2423  000000                     
  2424  000000                     
  2425  000000                     
  2426  000000                     
  2427  000000                     
  2428  000000                     
  2429  000000                     
  2430  000000                     
  2431  000000                     
  2432  000000                     
  2433  000000                     
  2434  000000                     
  2435  000000                     
  2436  000000                     
  2437  000000                     
  2438  000000                     
  2439  000000                     
  2440  000000                     
  2441  000000                     
  2442  000000                     
  2443  000000                     
  2444  000000                     
  2445  000000                     
  2446  000000                     
  2447  000000                     
  2448  000000                     
  2449  000000                     
  2450  000000                     
  2451  000000                     
  2452  000000                     
  2453  000000                     
  2454  000000                     
  2455  000000                     
  2456  000000                     
  2457  000000                     
  2458  000000                     
  2459  000000                     
  2460  000000                     
  2461  000000                     
  2462  000000                     
  2463  000000                     
  2464  000000                     
  2465  000000                     
  2466  000000                     
  2467  000000                     
  2468  000000                     
  2469  000000                     
  2470  000000                     
  2471  000000                     
  2472  000000                     
  2473  000000                     
  2474  000000                     
  2475  000000                     
  2476  000000                     
  2477  000000                     
  2478  000000                     
  2479  000000                     
  2480  000000                     
  2481  000000                     
  2482  000000                     
  2483  000000                     
  2484  000000                     
  2485  000000                     
  2486  000000                     
  2487  000000                     
  2488  000000                     
  2489  000000                     
  2490  000000                     
  2491  000000                     
  2492  000000                     
  2493  000000                     
  2494  000000                     
  2495  000000                     
  2496  000000                     
  2497  000000                     
  2498  000000                     
  2499  000000                     
  2500  000000                     
  2501  000000                     
  2502  000000                     
  2503  000000                     
  2504  000000                     
  2505  000000                     
  2506  000000                     
  2507  000000                     
  2508  000000                     
  2509  000000                     
  2510  000000                     
  2511  000000                     
  2512  000000                     
  2513  000000                     
  2514  000000                     
  2515  000000                     
  2516  000000                     
  2517  000000                     
  2518  000000                     
  2519  000000                     
  2520  000000                     
  2521  000000                     
  2522  000000                     
  2523  000000                     
  2524  000000                     
  2525  000000                     
  2526  000000                     
  2527  000000                     
  2528  000000                     
  2529  000000                     
  2530  000000                     
  2531  000000                     
  2532  000000                     
  2533  000000                     
  2534  000000                     
  2535  000000                     
  2536  000000                     
  2537  000000                     
  2538  000000                     
  2539  000000                     
  2540  000000                     
  2541  000000                     
  2542  000000                     
  2543  000000                     
  2544  000000                     
  2545  000000                     
  2546  000000                     
  2547  000000                     
  2548  000000                     
  2549  000000                     
  2550  000000                     
  2551  000000                     
  2552  000000                     
  2553  000000                     
  2554  000000                     
  2555  000000                     
  2556  000000                     
  2557  000000                     
  2558  000000                     
  2559  000000                     
  2560  000000                     
  2561  000000                     
  2562  000000                     
  2563  000000                     
  2564  000000                     
  2565  000000                     
  2566  000000                     
  2567  000000                     
  2568  000000                     
  2569  000000                     
  2570  000000                     
  2571  000000                     
  2572  000000                     
  2573  000000                     
  2574  000000                     
  2575  000000                     
  2576  000000                     
  2577  000000                     
  2578  000000                     
  2579  000000                     
  2580  000000                     
  2581  000000                     
  2582  000000                     
  2583  000000                     
  2584  000000                     
  2585  000000                     
  2586  000000                     
  2587  000000                     
  2588  000000                     
  2589  000000                     
  2590  000000                     
  2591  000000                     
  2592  000000                     
  2593  000000                     
  2594  000000                     
  2595  000000                     
  2596  000000                     
  2597  000000                     
  2598  000000                     
  2599  000000                     
  2600  000000                     
  2601  000000                     
  2602  000000                     
  2603  000000                     
  2604  000000                     
  2605  000000                     
  2606  000000                     
  2607  000000                     
  2608  000000                     
  2609  000000                     
  2610  000000                     
  2611  000000                     
  2612  000000                     
  2613  000000                     
  2614  000000                     
  2615  000000                     
  2616  000000                     
  2617  000000                     
  2618  000000                     
  2619  000000                     
  2620  000000                     
  2621                           
  2622                           	psect	rbit
  2623  0002C8                     _new:
  2624  0002C8                     	ds	1
  2625  0002C8                     _stn:
  2626  0002C8                     	ds	1
  2627  0002C8                     _zero:
  2628  0002C8                     	ds	1
  2629                           
  2630                           	psect	bigbss
  2631  000F37                     F1494:
  2632  000F37                     	ds	1
  2633  000F37                     F1508:
  2634  000F37                     	ds	1
  2635  000F37                     F1513:
  2636  000F37                     	ds	1
  2637  000F37                     F1514:
  2638  000F37                     	ds	1
  2639  000000                     
  2640  000000                     
  2641  000000                     
  2642  000000                     
  2643  000000                     
  2644  000000                     
  2645  000000                     
  2646  000000                     
  2647  000000                     
  2648  000000                     
  2649  000000                     
  2650  000000                     
  2651  000000                     
  2652  000000                     
  2653  000000                     
  2654  000000                     
  2655  000000                     
  2656  000000                     
  2657  000000                     
  2658  000000                     
  2659  000000                     
  2660  000000                     
  2661  000000                     
  2662  000000                     
  2663  000000                     
  2664  000000                     
  2665  000000                     
  2666  000000                     
  2667  000000                     
  2668  000000                     
  2669  000000                     
  2670  000000                     
  2671  000000                     
  2672  000000                     
  2673  000000                     
  2674  000000                     
  2675  000000                     
  2676  000000                     
  2677  000000                     
  2678  000000                     
  2679  000000                     
  2680  000000                     
  2681  000000                     
  2682  000000                     
  2683  000000                     
  2684  000000                     
  2685  000000                     
  2686  000000                     
  2687  000000                     
  2688  000000                     
  2689  000000                     
  2690  000000                     
  2691  000000                     
  2692  000000                     
  2693  000000                     
  2694  000000                     
  2695  000000                     
  2696  000000                     
  2697  000000                     
  2698  000000                     
  2699  000000                     
  2700  000000                     
  2701  000000                     
  2702  000000                     
  2703  000000                     
  2704  000000                     
  2705  000000                     
  2706  000000                     
  2707  000000                     
  2708  000000                     
  2709  000000                     
  2710  000000                     
  2711  000000                     
  2712  000000                     
  2713  000000                     
  2714  000000                     
  2715  000000                     
  2716  000000                     
  2717  000000                     
  2718  000000                     
  2719  000000                     
  2720  000000                     
  2721  000000                     
  2722  000000                     
  2723  000000                     
  2724  000000                     
  2725  000000                     
  2726  000000                     
  2727  000000                     
  2728  000000                     
  2729  000000                     
  2730  000000                     
  2731  000000                     
  2732  000000                     
  2733  000000                     
  2734  000000                     
  2735  000000                     
  2736  000000                     
  2737  000000                     
  2738  000000                     
  2739  000000                     
  2740  000000                     
  2741  000000                     
  2742  000000                     
  2743  000000                     
  2744  000000                     
  2745  000000                     
  2746  000000                     
  2747  000000                     
  2748  000000                     
  2749  000000                     
  2750  000000                     
  2751  000000                     
  2752  000000                     
  2753  000000                     
  2754  000000                     
  2755  000000                     
  2756  000000                     
  2757  000000                     
  2758  000000                     
  2759  000000                     
  2760  000000                     
  2761  000000                     
  2762  000000                     
  2763  000000                     
  2764  000F37                     _tkrk:
  2765  000F37                     	ds	1
  2766                           
  2767                           	psect	bss
  2768  000200                     F1493:
  2769  000200                     	ds	2
  2770  000200                     F1497:
  2771  000200                     	ds	2
  2772  000200                     F1507:
  2773  000200                     	ds	2
  2774  000200                     F1515:
  2775  000200                     	ds	2
  2776  000000                     
  2777  000000                     
  2778  000000                     
  2779  000200                     _DVNT:
  2780  000200                     	ds	2
  2781  000000                     
  2782  000000                     
  2783  000000                     
  2784  000000                     
  2785  000200                     _VDoc:
  2786  000200                     	ds	2
  2787  000200                     _bin0:
  2788  000200                     	ds	2
  2789  000200                     _dDVNT:
  2790  000200                     	ds	2
  2791  000200                     _in0:
  2792  000200                     	ds	2
  2793  000200                     _ip0:
  2794  000200                     	ds	2
  2795  000200                     _ni0:
  2796  000200                     	ds	2
  2797  000200                     _nw0:
  2798  000200                     	ds	2
  2799  000200                     _tdDVNT:
  2800  000200                     	ds	2
  2801  000200                     _tm0:
  2802  000200                     	ds	2
  2803  000200                     _v_dt:
  2804  000200                     	ds	2
  2805  000200                     _v_t:
  2806  000200                     	ds	2
  2807  000200                     _v_tdt:
  2808  000200                     	ds	2
  2809  000200                     _wynik:
  2810  000200                     	ds	2
  2811  000200                     _zr0:
  2812  000200                     	ds	2
  2813  000200                     _ddDVNT:
  2814  000200                     	ds	4
  2815  000200                     _v_ddt:
  2816  000200                     	ds	4
  2817  000200                     _wv:
  2818  000200                     	ds	24
  2819  000200                     _wvv:
  2820  000200                     	ds	24
  2821  000200                     _tnp:
  2822  000200                     	ds	40
  2823  000200                     _tvv:
  2824  000200                     	ds	40
  2825                           
  2826                           	psect	temp
  2827  000000                     btemp:
  2828  000000                     	ds	8
  2829                           tblptrh	equ	0xFF7
  2830                           tblptrl	equ	0xFF6
  2831                           prodh	equ	0xFF4
  2832                           prodl	equ	0xFF3
  2833                           indf0	equ	0xFEF
  2834                           postinc0	equ	0xFEE
  2835                           postdec0	equ	0xFED
  2836                           fsr0h	equ	0xFEA
  2837                           fsr0l	equ	0xFE9
  2838                           wreg	equ	0xFE8
  2839                           postinc1	equ	0xFE6
  2840                           postdec1	equ	0xFE5
  2841                           fsr1h	equ	0xFE2
  2842                           fsr1l	equ	0xFE1
  2843                           fsr2l	equ	0xFD9
  2844                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Mon Sep 14 17:33:14 2020

               _SetNstVNT E2F6                  _TimTacho D87C  
   __end_of_StartTimTacho D87C         __end_of_SetNstVNT E306  
                       _M 0306                         l7 D726  
                      l10 D75E                        l21 D846  
                      l14 D7B8                        l31 D898  
                      l41 D942                        l33 D90A  
                      l17 D7FE                        l51 D9BA  
                      l27 D894                        l19 D80E  
                      l60 DA84                        l53 D9F0  
                      l45 D95E                        l37 D90C  
                      l55 DA68                        l72 DAC4  
                      l64 DA86                        l48 D9D4  
                      l73 DAFA                        l57 DA3E  
                      l49 D972                        l90 DC68  
                      l82 DB4A                        l91 DC5C  
                      l83 DB9C                        l92 DC3A  
                      l68 DAA2                        l93 DC4C  
                      l77 DB0E                        l86 DC06  
                      l78 DB40                        l96 DF02  
                      l97 DC94                        l98 DC9E  
                      l99 DCEE                 ?a_HistVal 00B9  
               _PomiarVNT DC72                        _wv 022E  
       __end_of_PomiarVNT DF0A                       l100 DCB2  
                     l110 DEFE                       l103 DE50  
                     l120 DF9C                       l104 DE1A  
                     l113 DF66                       l130 E114  
                     l114 E002                       l106 DE14  
                     l131 E126                       l123 E016  
                     l115 DF8A                       l132 E12C  
                     l116 DF6E                       l141 E27A  
                     l109 DE4A                       l142 E298  
                     l126 E09E                       l135 E186  
                     l119 DFCC                       l128 E0F2  
                     l138 E240                       l139 E25C  
                     u140 D8D4                       u310 DAA0  
                     u230 D9D8                       u215 D9AC  
                     u225 D9C6                       u330 DAFE  
                     u250 DA3C                       u340 DB02  
                     u180 D940                       u405 DBD2  
                     u190 D95C                       u360 DB44  
                     u515 DDE8                       u355 DB32  
                     u390 DBA0                       u375 DB68  
                     u800 E366                       u625 E06A  
                     u385 DB8E                       u820 E394  
                     u805 E360                       u645 E0D6  
                     u495 DDD2                       u840 E3CC  
                     u825 E38E                       u860 E406  
                     u780 E32E                       u845 E3C6  
                     u880 E43C                       u865 E400  
                     u785 E328                       u885 E436  
                     _in0 0210                       _ip0 0212  
                     _ni0 0214                       _nw0 0216  
                     _tm0 021A                       _new 02C8  
                     _zr0 0224                       _v_t 021E  
                     _tnp 025E                       _stn 02C9  
                     _tvv 0286                       _wvv 0246  
                     wreg 000FE8                 _StartRTdS FC66  
             ?a_FltParVNT 00B6                      F1513 0F39  
                    F1514 0F3A                      F1515 0206  
                    F1507 0204                      F1508 0F38  
                    F1493 0200                      F1494 0F37  
                    F1497 0202                      f6093 00AD  
                    _DVNT 0208                      _RTdS FC8A  
                    _VDoc 020A                      _TFlt DBBE  
             _ClrTachoDta D6D6                      _bin0 020C  
                    _v_dt 021C                      fsr0h 000FEA  
                    fsr1h 000FE2                      _tkrk 0F3B  
                    indf0 000FEF                      fsr0l 000FE9  
                    fsr1l 000FE1                      fsr2l 000FD9  
                    btemp 0000       __end_of_ClrTachoDta D7A6  
                    _zero 02CA                   ?_AddTab 00B6  
                    ftdiv 0A6E                      lldiv 0816  
                    ftmul FF68           __end_of_IntINT0 D85E  
                    fttol 0C2C                      lwmod 0BC6  
                    prodh 000FF4                      prodl 000FF3  
         __end_of_HistVal DBBC  __end_of_PredkoscZmianVNT E0B8  
           ?a_ClrTachoDta 00A9           __end_of_Vmaleje E36A  
      ?a_PredkoscZmianVNT 00BA           __end_of_Vnizsza E398  
         __end_of_Vrosnie E332                     ?_TFlt 00B6  
             _FindPropVal D8FA               ?a_PomiarVNT 00A9  
           __end_of_Vstoi E378           __end_of_Vwyzsza E3D0  
     __end_of_FindPropVal DA72                     _RSDT1 032D  
                   _DtKNF 02AE                     _dDVNT 020E  
              used_btemp0 0001                used_btemp1 0001  
              used_btemp2 0001                used_btemp3 0001  
              used_btemp4 0001                used_btemp5 0001  
              used_btemp6 0001                used_btemp7 0001  
                   _Vstoi E36A             ?a_FindPropVal 00B9  
                   _v_ddt 022A                     _v_tdt 0220  
                   _round 0AF2                     _wynik 0222  
             _IncTimTacho D85E                     lwtoft 0E84  
            ?_FindPropVal 00B6       __end_of_IncTimTacho D872  
                   status 000FD8          __end_of_IntTacho D7D4  
                 _IntINT0 D7D4                   _HistVal DA74  
                ?_HistVal 00B6          __end_of_VTzerowy E44E  
                 __Lparam 00A4          __end_of_TimTacho D882  
                 _Vmaleje E334                  ?_Vmaleje 00B2  
                 _Vnizsza E37A                   _Vrosnie E306  
                ?_Vnizsza 00A4            __end_of_FPmVNT E2F6  
                 __ramtop 1000                   _Vwyzsza E39A  
          __end_of_AddTab D8F8          _PredkoscZmianVNT DF54  
                ?_Vwyzsza 00A4            __end_of_ClrDtV DF54  
                 _nokrobr 0E5F              __end_of_TFlt DC72  
          __end_of_Vrowna E3DE                    ?_round 00B6  
                  _FPmVNT E29E                    _AddTab D884  
                  _ClrDtV DF0A                    _ddDVNT 0226  
                  _Vrowna E3D0                   postdec0 000FED  
                 postdec1 000FE5                   postinc0 000FEE  
                 postinc1 000FE6                    _tdDVNT 0218  
               _FltParVNT E0B8         __end_of_FltParVNT E29E  
              _VTmalejacy E40A        __end_of_VTmalejacy E440  
                  tblptrl 000FF6             _StartTimTacho D872  
                _IntTacho D7A6                 _VTrosnacy E3DE  
       __end_of_VTrosnacy E40A                  _VTzerowy E440  
