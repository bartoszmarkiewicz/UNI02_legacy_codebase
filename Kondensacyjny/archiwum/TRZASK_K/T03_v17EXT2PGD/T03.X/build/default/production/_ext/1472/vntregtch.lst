

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Mon Sep 14 17:33:14 2020


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     5                           	psect	const,global,class=CODE,delta=1
     6                           	psect	bss,global,class=RAM,space=1,delta=1
     7                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
    99                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   100                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   101                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   102                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   103                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   104                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   105                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   106                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   107                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   108                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   109                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   110                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   111                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   112                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   113                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   114                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   115                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   116                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   117                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   118                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   119                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   120                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   121                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   122                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   123                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   124                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   125                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   126                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   127                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   128                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   129                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   130                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   131                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   132                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   133                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   134                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   135                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   136                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   137                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   138                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   139                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   140                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   141                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   142                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   143                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   144                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   145                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   146                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   147                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   148                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   149                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   150                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   151                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   152                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   153                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   154                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   155                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   156                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   157                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   158                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   159                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   160                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   161                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   162                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   163                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   164                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   165                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   166                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   167                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   168                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   169                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   170                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   171                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   172                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   173                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   174                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   175                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   176                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   177                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   178                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   179                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   180                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   181                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   182                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   183                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   184                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   185                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   186                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   187                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   188                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   189                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   190                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   191                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   192                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   193                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   194                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   195                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   196                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   197                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   198  000000                     _SetKalPWM$pwm	set	?_SetKalPWM
   199                           
   200                           	psect	text
   201                           ;vntregtch.c: 60: unsigned char SetKalPWM(unsign
      +                          ed char krk,unsigned char pwm)
   202                           ;vntregtch.c: 61: {
   203  00BBAC  00A9               	dw	?_SetKalPWM
   204                           ;	_w assigned to ?a_CalkTimStr+1
   205  000000                     _CalkTimStr$w	set	?a_CalkTimStr+1
   206                           ;	_minv assigned to ?a_CalkTimStr+0
   207  000000                     _CalkTimStr$minv	set	?a_CalkTimStr
   208                           ;	_tmp assigned to ?a_VNTToProc+0
   209  000000                     _VNTToProc$tmp	set	?a_VNTToProc
   210                           ;	_tmp assigned to ?a_ProcToVNT+0
   211  000000                     _ProcToVNT$tmp	set	?a_ProcToVNT
   212                           ;	_nst assigned to ?a_CalkVNTtoPopPWM+0
   213  000000                     _CalkVNTtoPopPWM$nst	set	?a_CalkVNTtoPopPWM
   214                           ;       param _pop assigned to ?_CalkVNTtoPopPWM
      +                          +0
   215  000000                     _CalkVNTtoPopPWM$pop	set	?_CalkVNTtoPopPWM
   216                           ;	_nst assigned to ?a_CalkVNTtoPWM+0
   217  000000                     _CalkVNTtoPWM$nst	set	?a_CalkVNTtoPWM
   218                           ;	_pw assigned to ?a_DVNTtoPopPWM+9
   219  000000                     _DVNTtoPopPWM$pw	set	?a_DVNTtoPopPWM+9
   220                           ;	_wsp assigned to ?a_DVNTtoPopPWM+5
   221  000000                     _DVNTtoPopPWM$wsp	set	?a_DVNTtoPopPWM+5
   222                           ;	_v1 assigned to ?a_DVNTtoPopPWM+4
   223  000000                     _DVNTtoPopPWM$v1	set	?a_DVNTtoPopPWM+4
   224                           ;	_dv assigned to ?a_DVNTtoPopPWM+3
   225  000000                     _DVNTtoPopPWM$dv	set	?a_DVNTtoPopPWM+3
   226                           ;	_v2 assigned to ?a_DVNTtoPopPWM+2
   227  000000                     _DVNTtoPopPWM$v2	set	?a_DVNTtoPopPWM+2
   228                           ;	_p1 assigned to ?a_DVNTtoPopPWM+1
   229  000000                     _DVNTtoPopPWM$p1	set	?a_DVNTtoPopPWM+1
   230                           ;	_p2 assigned to ?a_DVNTtoPopPWM+0
   231  000000                     _DVNTtoPopPWM$p2	set	?a_DVNTtoPopPWM
   232                           ;       param _pop assigned to ?_DVNTtoPopPWM+0
   233  000000                     _DVNTtoPopPWM$pop	set	?_DVNTtoPopPWM
   234                           ;	_pw assigned to ?a_DVNTtoPWM+9
   235  000000                     _DVNTtoPWM$pw	set	?a_DVNTtoPWM+9
   236                           ;	_wsp assigned to ?a_DVNTtoPWM+5
   237  000000                     _DVNTtoPWM$wsp	set	?a_DVNTtoPWM+5
   238                           ;	_v1 assigned to ?a_DVNTtoPWM+4
   239  000000                     _DVNTtoPWM$v1	set	?a_DVNTtoPWM+4
   240                           ;	_dv assigned to ?a_DVNTtoPWM+3
   241  000000                     _DVNTtoPWM$dv	set	?a_DVNTtoPWM+3
   242                           ;	_v2 assigned to ?a_DVNTtoPWM+2
   243  000000                     _DVNTtoPWM$v2	set	?a_DVNTtoPWM+2
   244                           ;	_p1 assigned to ?a_DVNTtoPWM+1
   245  000000                     _DVNTtoPWM$p1	set	?a_DVNTtoPWM+1
   246                           ;	_p2 assigned to ?a_DVNTtoPWM+0
   247  000000                     _DVNTtoPWM$p2	set	?a_DVNTtoPWM
   248                           ;	_p assigned to ?a_KalibracjaVNT+2
   249  000000                     _KalibracjaVNT$p	set	?a_KalibracjaVNT+2
   250                           ;	_i assigned to ?a_KalibracjaVNT+1
   251  000000                     _KalibracjaVNT$i	set	?a_KalibracjaVNT+1
   252                           ;	_d assigned to ?a_KalibracjaVNT+0
   253  000000                     _KalibracjaVNT$d	set	?a_KalibracjaVNT
   254                           ;	_krk assigned to ?a_SetKalPWM+1
   255  000000                     _SetKalPWM$krk	set	?a_SetKalPWM+1
   256                           ;	_tim assigned to ?a_SetKalPWM+0
   257  000000                     _SetKalPWM$tim	set	?a_SetKalPWM
   258  00BBAE                     _SetKalPWM:
   259  000000                     
   260                           ;_krk stored from wreg
   261  00BBAE  0100               	movlb	__Lparam shr (0+8)
   262  00BBB0  6FAB               	movwf	(?a_SetKalPWM+1)^(__Lparam& (0+65280)),b
   263                           ;vntregtch.c: 62: unsigned char tim,ppp;
   264  00BBB2  51AB               	movf	(?a_SetKalPWM+1)^(__Lparam& (0+65280)),w
   265  00BBB4  E105               	bnz	l17
   266                           ;vntregtch.c: 65: {
   267  00BBB6  51AB               	movf	(?a_SetKalPWM+1)^(__Lparam& (0+65280)),w
   268  00BBB8  0D05               	mullw	5
   269  00BBBA  50F3               	movf	prodl,w,c
   270  00BBBC  0F3C               	addlw	60
   271  00BBBE  D005               	goto	L1
   272                           ;vntregtch.c: 67: }
   273  00BBC0                     l17:
   274                           ;vntregtch.c: 68: else
   275  00BBC0  0100               	movlb	__Lparam shr (0+8)
   276  00BBC2  51AB               	movf	(?a_SetKalPWM+1)^(__Lparam& (0+65280)),w
   277  00BBC4  0D05               	mullw	5
   278  00BBC6  50F3               	movf	prodl,w,c
   279  00BBC8  0F23               	addlw	35
   280  00BBCA                     L1:
   281  00BBCA  6FAA               	movwf	?a_SetKalPWM^(__Lparam& (0+65280)),b
   282                           ;vntregtch.c: 71: }
   283  00BBCC  0E0A               	movlw	10
   284  00BBCE  EC45  F07E         	call	_RTdS
   285  00BBD2  6E00               	movwf	btemp,c
   286  00BBD4  0100               	movlb	__Lparam shr (0+8)
   287  00BBD6  51AA               	movf	?a_SetKalPWM^(__Lparam& (0+65280)),w
   288  00BBD8  5C00               	subwf	btemp,w,c
   289  00BBDA  E204               	bc	l19
   290                           ;vntregtch.c: 74: {
   291  00BBDC  51A9               	movf	?_SetKalPWM^(__Lparam& (0+65280)),w
   292  00BBDE  EC74  F001         	call	_WritePWM
   293                           ;vntregtch.c: 76: return 0;
   294  00BBE2  0C00               	retlw	0
   295  00BBE4                     l19:
   296                           ;vntregtch.c: 78: else
   297  00BBE4  0E0A               	movlw	10
   298  00BBE6  EC33  F07E         	call	_StartRTdS
   299                           ;vntregtch.c: 81: Kvnt[krk].dvnt=(unsigned char)
      +                           (round(M.rVVNT/100.0));
   300  00BBEA  6A00               	clrf	btemp,c
   301  00BBEC  0EC8               	movlw	200
   302  00BBEE  6E01               	movwf	btemp+1,c
   303  00BBF0  0E42               	movlw	66
   304  00BBF2  6E02               	movwf	btemp+2,c
   305  00BBF4  C000  F0AC         	movff	btemp,?a_SetKalPWM+2
   306  00BBF8  C001  F0AD         	movff	btemp+1,?a_SetKalPWM+3
   307  00BBFC  C002  F0AE         	movff	btemp+2,?a_SetKalPWM+4
   308  00BC00  EE03  F025         	lfsr	0,_M+31
   309  00BC04  CFEE F000          	movff	postinc0,btemp
   310  00BC08  CFED F001          	movff	postdec0,btemp+1
   311  00BC0C  EC42  F007         	call	lwtoft
   312  00BC10  C0AC  F003         	movff	?a_SetKalPWM+2,btemp+3
   313  00BC14  C0AD  F004         	movff	?a_SetKalPWM+3,btemp+4
   314  00BC18  C0AE  F005         	movff	?a_SetKalPWM+4,btemp+5
   315  00BC1C  EC37  F005         	call	ftdiv
   316  00BC20  C000  F0B6         	movff	btemp,?_round
   317  00BC24  C001  F0B7         	movff	btemp+1,?_round+1
   318  00BC28  C002  F0B8         	movff	btemp+2,?_round+2
   319  00BC2C  EC79  F005         	call	_round	;wreg free
   320  00BC30  EC16  F006         	call	fttol
   321  00BC34  0100               	movlb	__Lparam shr (0+8)
   322  00BC36  51AB               	movf	(?a_SetKalPWM+1)^(__Lparam& (0+65280)),w
   323  00BC38  0D02               	mullw	2
   324  00BC3A  0EC3               	movlw	low _Kvnt
   325  00BC3C  24F3               	addwf	prodl,w,c
   326  00BC3E  6EE9               	movwf	fsr0l,c
   327  00BC40  0E03               	movlw	high _Kvnt
   328  00BC42  20F4               	addwfc	prodh,w,c
   329  00BC44  6EEA               	movwf	fsr0h,c
   330  00BC46  C000  FFEF         	movff	btemp,indf0
   331                           ;vntregtch.c: 82: switch(DtKNF.rfan)
   332  00BC4A  D03B               	goto	l22
   333  00BC4C                     l23:
   334  00BC4C  D040               	goto	l28
   335                           ;vntregtch.c: 83: {
   336                           ;vntregtch.c: 85: {
   337                           ;vntregtch.c: 87: break;
   338  00BC4E                     l24:
   339                           ;vntregtch.c: 88: }
   340                           ;vntregtch.c: 90: {
   341  00BC4E  0E02               	movlw	2
   342  00BC50  6ED9               	movwf	fsr2l,c
   343                           ;vntregtch.c: 92: if((krk>2)||(Kvnt[krk].dvnt>12
      +                          )) ppp=0;
   344  00BC52  0100               	movlb	__Lparam shr (0+8)
   345  00BC54  65AB               	cpfsgt	(?a_SetKalPWM+1)^(__Lparam& (0+65280)),b
   346  00BC56  D001               	goto	u31
   347  00BC58  D00D               	goto	u50
   348  00BC5A                     u31:
   349  00BC5A  51AB               	movf	(?a_SetKalPWM+1)^(__Lparam& (0+65280)),w
   350  00BC5C  0D02               	mullw	2
   351  00BC5E  0EC3               	movlw	low _Kvnt
   352  00BC60  24F3               	addwf	prodl,w,c
   353  00BC62  6EE9               	movwf	fsr0l,c
   354  00BC64  0E03               	movlw	high _Kvnt
   355  00BC66  20F4               	addwfc	prodh,w,c
   356  00BC68  6EEA               	movwf	fsr0h,c
   357  00BC6A  50EF               	movf	indf0,w,c
   358  00BC6C  6E00               	movwf	btemp,c
   359  00BC6E  0E0D               	movlw	13
   360  00BC70  5C00               	subwf	btemp,w,c
   361  00BC72  B0D8               	btfsc	status,0,c
   362  00BC74                     u50:
   363  00BC74  6AD9               	clrf	fsr2l,c
   364                           ;vntregtch.c: 93: if((pwm+ppp)<=0xff)
   365  00BC76  50D9               	movf	fsr2l,w,c
   366  00BC78  C0A9  F000         	movff	?_SetKalPWM,btemp
   367  00BC7C  6A01               	clrf	btemp+1,c
   368  00BC7E  2600               	addwf	btemp,f,c
   369  00BC80  0E00               	movlw	0
   370  00BC82  2201               	addwfc	btemp+1,f,c
   371  00BC84  5001               	movf	btemp+1,w,c
   372  00BC86  0A80               	xorlw	128
   373  00BC88  0F7F               	addlw	-129
   374  00BC8A  0E00               	movlw	0
   375  00BC8C  B4D8               	btfsc	status,2,c
   376  00BC8E  5C00               	subwf	btemp,w,c
   377  00BC90  E20D               	bc	l26
   378                           ;vntregtch.c: 94: {
   379  00BC92  0100               	movlb	__Lparam shr (0+8)
   380  00BC94  51AB               	movf	(?a_SetKalPWM+1)^(__Lparam& (0+65280)),w
   381  00BC96  0D02               	mullw	2
   382  00BC98  0EC4               	movlw	low (_Kvnt+1)
   383  00BC9A  24F3               	addwf	prodl,w,c
   384  00BC9C  6EE9               	movwf	fsr0l,c
   385  00BC9E  0E03               	movlw	high (_Kvnt+1)
   386  00BCA0  20F4               	addwfc	prodh,w,c
   387  00BCA2  6EEA               	movwf	fsr0h,c
   388  00BCA4  50D9               	movf	fsr2l,w,c
   389  00BCA6  25A9               	addwf	?_SetKalPWM^(__Lparam& (0+65280)),w
   390  00BCA8                     L2:
   391  00BCA8  6EEF               	movwf	indf0,c
   392                           ;vntregtch.c: 96: }
   393  00BCAA  0C01               	retlw	1
   394  00BCAC                     l26:
   395                           ;vntregtch.c: 97: else
   396  00BCAC  0100               	movlb	__Lparam shr (0+8)
   397  00BCAE  51AB               	movf	(?a_SetKalPWM+1)^(__Lparam& (0+65280)),w
   398  00BCB0  0D02               	mullw	2
   399  00BCB2  0EC4               	movlw	low (_Kvnt+1)
   400  00BCB4  24F3               	addwf	prodl,w,c
   401  00BCB6  6EE9               	movwf	fsr0l,c
   402  00BCB8  0E03               	movlw	high (_Kvnt+1)
   403  00BCBA  20F4               	addwfc	prodh,w,c
   404  00BCBC  6EEA               	movwf	fsr0h,c
   405  00BCBE  0EFF               	movlw	-1
   406  00BCC0  D7F3               	goto	L2
   407                           ;vntregtch.c: 106: break;
   408  00BCC2                     l22:
   409  00BCC2  C2D0  FFE8         	movff	_DtKNF+34,wreg
   410  00BCC6  0A00               	xorlw	0
   411  00BCC8  E0C1               	bz	l23
   412  00BCCA  0A01               	xorlw	1
   413  00BCCC  E0C0               	bz	l24
   414                           ;vntregtch.c: 100: }
   415  00BCCE                     l28:
   416                           ;vntregtch.c: 102: }
   417                           ;vntregtch.c: 104: {
   418  00BCCE  0100               	movlb	__Lparam shr (0+8)
   419  00BCD0  51AB               	movf	(?a_SetKalPWM+1)^(__Lparam& (0+65280)),w
   420  00BCD2  0D02               	mullw	2
   421  00BCD4  0EC4               	movlw	low (_Kvnt+1)
   422  00BCD6  24F3               	addwf	prodl,w,c
   423  00BCD8  6EE9               	movwf	fsr0l,c
   424  00BCDA  0E03               	movlw	high (_Kvnt+1)
   425  00BCDC  20F4               	addwfc	prodh,w,c
   426  00BCDE  6EEA               	movwf	fsr0h,c
   427  00BCE0  C0A9  FFEF         	movff	?_SetKalPWM,indf0
   428                           ;vntregtch.c: 109: }
   429  00BCE4  0C01               	retlw	1
   430                           ;vntregtch.c: 111: }
   431  00BCE6                     __end_of_SetKalPWM:
   432                           ;vntregtch.c: 115: void SetDefFan(const unsigned
      +                           char tp)
   433                           ;vntregtch.c: 116: {
   434  00BCE6                     _SetDefFan:
   435  000000                     
   436                           ; _tp loaded to fsr2l
   437  00BCE6  6ED9               	movwf	fsr2l,c
   438                           ;vntregtch.c: 117: switch(tp)
   439  00BCE8  D030               	goto	l31
   440  00BCEA                     l32:
   441  00BCEA  D033               	goto	L6
   442                           ;vntregtch.c: 118: {
   443                           ;vntregtch.c: 120: {
   444                           ;vntregtch.c: 122: Kvnt[0].dpwm=18;
   445                           ;vntregtch.c: 124: Kvnt[1].dvnt=32;
   446                           ;vntregtch.c: 125: Kvnt[1].dpwm=51;
   447                           ;vntregtch.c: 127: Kvnt[2].dvnt=46;
   448                           ;vntregtch.c: 128: Kvnt[2].dpwm=84;
   449                           ;vntregtch.c: 130: Kvnt[3].dvnt=56;
   450                           ;vntregtch.c: 131: Kvnt[3].dpwm=117;
   451                           ;vntregtch.c: 133: Kvnt[4].dvnt=63;
   452                           ;vntregtch.c: 134: Kvnt[4].dpwm=150;
   453                           ;vntregtch.c: 136: Kvnt[5].dvnt=69;
   454                           ;vntregtch.c: 137: Kvnt[5].dpwm=183;
   455                           ;vntregtch.c: 139: Kvnt[6].dvnt=75;
   456                           ;vntregtch.c: 140: Kvnt[6].dpwm=216;
   457                           ;vntregtch.c: 142: Kvnt[7].dvnt=80;
   458                           ;vntregtch.c: 143: Kvnt[7].dpwm=249;
   459                           ;vntregtch.c: 144: break;
   460  00BCEC                     l33:
   461                           ;vntregtch.c: 145: }
   462                           ;vntregtch.c: 147: {
   463  00BCEC  0E08               	movlw	8
   464  00BCEE  CFE8 F3C3          	movff	wreg,_Kvnt
   465                           ;vntregtch.c: 149: Kvnt[0].dpwm=33;
   466  00BCF2  0E21               	movlw	33
   467  00BCF4  CFE8 F3C4          	movff	wreg,_Kvnt+1
   468                           ;vntregtch.c: 151: Kvnt[1].dvnt=32;
   469  00BCF8  0E20               	movlw	32
   470  00BCFA  CFE8 F3C5          	movff	wreg,_Kvnt+2
   471                           ;vntregtch.c: 152: Kvnt[1].dpwm=62;
   472  00BCFE  0E3E               	movlw	62
   473  00BD00  CFE8 F3C6          	movff	wreg,_Kvnt+3
   474                           ;vntregtch.c: 154: Kvnt[2].dvnt=44;
   475  00BD04  0E2C               	movlw	44
   476  00BD06  CFE8 F3C7          	movff	wreg,_Kvnt+4
   477                           ;vntregtch.c: 155: Kvnt[2].dpwm=84;
   478  00BD0A  0E54               	movlw	84
   479  00BD0C  CFE8 F3C8          	movff	wreg,_Kvnt+5
   480                           ;vntregtch.c: 157: Kvnt[3].dvnt=63;
   481  00BD10  0E3F               	movlw	63
   482  00BD12  CFE8 F3C9          	movff	wreg,_Kvnt+6
   483                           ;vntregtch.c: 158: Kvnt[3].dpwm=124;
   484  00BD16  0E7C               	movlw	124
   485  00BD18  CFE8 F3CA          	movff	wreg,_Kvnt+7
   486                           ;vntregtch.c: 160: Kvnt[4].dvnt=75;
   487  00BD1C  0E4B               	movlw	75
   488  00BD1E  CFE8 F3CB          	movff	wreg,_Kvnt+8
   489                           ;vntregtch.c: 161: Kvnt[4].dpwm=155;
   490  00BD22  0E9B               	movlw	-101
   491  00BD24  CFE8 F3CC          	movff	wreg,_Kvnt+9
   492                           ;vntregtch.c: 163: Kvnt[5].dvnt=86;
   493  00BD28  0E56               	movlw	86
   494  00BD2A  CFE8 F3CD          	movff	wreg,_Kvnt+10
   495                           ;vntregtch.c: 164: Kvnt[5].dpwm=186;
   496  00BD2E  0EBA               	movlw	-70
   497  00BD30  CFE8 F3CE          	movff	wreg,_Kvnt+11
   498                           ;vntregtch.c: 166: Kvnt[6].dvnt=96;
   499  00BD34  0E60               	movlw	96
   500  00BD36  CFE8 F3CF          	movff	wreg,_Kvnt+12
   501                           ;vntregtch.c: 167: Kvnt[6].dpwm=217;
   502  00BD3A  0ED9               	movlw	-39
   503  00BD3C  CFE8 F3D0          	movff	wreg,_Kvnt+13
   504                           ;vntregtch.c: 169: Kvnt[7].dvnt=104;
   505  00BD40  0E68               	movlw	104
   506  00BD42  CFE8 F3D1          	movff	wreg,_Kvnt+14
   507                           ;vntregtch.c: 170: Kvnt[7].dpwm=248;
   508  00BD46  0EF8               	movlw	-8
   509  00BD48  D032               	goto	L4
   510                           ;vntregtch.c: 198: break;
   511  00BD4A                     l31:
   512  00BD4A  50D9               	movf	fsr2l,w,c
   513  00BD4C  E0CE               	bz	l32
   514  00BD4E  0A01               	xorlw	1
   515  00BD50  E0CD               	bz	l33
   516  00BD52                     L6:
   517                           ;vntregtch.c: 171: break;
   518                           ;vntregtch.c: 172: }
   519                           ;vntregtch.c: 174: {
   520  00BD52  0E09               	movlw	9
   521  00BD54  CFE8 F3C3          	movff	wreg,_Kvnt
   522                           ;vntregtch.c: 176: Kvnt[0].dpwm=18;
   523  00BD58  0E12               	movlw	18
   524  00BD5A  CFE8 F3C4          	movff	wreg,_Kvnt+1
   525                           ;vntregtch.c: 178: Kvnt[1].dvnt=32;
   526  00BD5E  0E20               	movlw	32
   527  00BD60  CFE8 F3C5          	movff	wreg,_Kvnt+2
   528                           ;vntregtch.c: 179: Kvnt[1].dpwm=51;
   529  00BD64  0E33               	movlw	51
   530  00BD66  CFE8 F3C6          	movff	wreg,_Kvnt+3
   531                           ;vntregtch.c: 181: Kvnt[2].dvnt=46;
   532  00BD6A  0E2E               	movlw	46
   533  00BD6C  CFE8 F3C7          	movff	wreg,_Kvnt+4
   534                           ;vntregtch.c: 182: Kvnt[2].dpwm=84;
   535  00BD70  0E54               	movlw	84
   536  00BD72  CFE8 F3C8          	movff	wreg,_Kvnt+5
   537                           ;vntregtch.c: 184: Kvnt[3].dvnt=56;
   538  00BD76  0E38               	movlw	56
   539  00BD78  CFE8 F3C9          	movff	wreg,_Kvnt+6
   540                           ;vntregtch.c: 185: Kvnt[3].dpwm=117;
   541  00BD7C  0E75               	movlw	117
   542  00BD7E  CFE8 F3CA          	movff	wreg,_Kvnt+7
   543                           ;vntregtch.c: 187: Kvnt[4].dvnt=63;
   544  00BD82  0E3F               	movlw	63
   545  00BD84  CFE8 F3CB          	movff	wreg,_Kvnt+8
   546                           ;vntregtch.c: 188: Kvnt[4].dpwm=150;
   547  00BD88  0E96               	movlw	-106
   548  00BD8A  CFE8 F3CC          	movff	wreg,_Kvnt+9
   549                           ;vntregtch.c: 190: Kvnt[5].dvnt=69;
   550  00BD8E  0E45               	movlw	69
   551  00BD90  CFE8 F3CD          	movff	wreg,_Kvnt+10
   552                           ;vntregtch.c: 191: Kvnt[5].dpwm=183;
   553  00BD94  0EB7               	movlw	-73
   554  00BD96  CFE8 F3CE          	movff	wreg,_Kvnt+11
   555                           ;vntregtch.c: 193: Kvnt[6].dvnt=75;
   556  00BD9A  0E4B               	movlw	75
   557  00BD9C  CFE8 F3CF          	movff	wreg,_Kvnt+12
   558                           ;vntregtch.c: 194: Kvnt[6].dpwm=216;
   559  00BDA0  0ED8               	movlw	-40
   560  00BDA2  CFE8 F3D0          	movff	wreg,_Kvnt+13
   561                           ;vntregtch.c: 196: Kvnt[7].dvnt=80;
   562  00BDA6  0E50               	movlw	80
   563  00BDA8  CFE8 F3D1          	movff	wreg,_Kvnt+14
   564                           ;vntregtch.c: 197: Kvnt[7].dpwm=249;
   565  00BDAC  0EF9               	movlw	-7
   566  00BDAE                     L4:
   567  00BDAE  CFE8 F3D2          	movff	wreg,_Kvnt+15
   568                           ;vntregtch.c: 201: WriteEEVNT0(Kvnt[0].dvnt,Kvnt
      +                          [0].dpwm);
   569  00BDB2  C3C4  F0AC         	movff	_Kvnt+1,?_WriteEEVNT0
   570  00BDB6  C3C3  FFE8         	movff	_Kvnt,wreg
   571  00BDBA  ECE1  F042         	call	_WriteEEVNT0
   572                           ;vntregtch.c: 202: WriteEEVNT1(Kvnt[1].dvnt,Kvnt
      +                          [1].dpwm);
   573  00BDBE  C3C6  F0AC         	movff	_Kvnt+3,?_WriteEEVNT1
   574  00BDC2  C3C5  FFE8         	movff	_Kvnt+2,wreg
   575  00BDC6  ECF5  F042         	call	_WriteEEVNT1
   576                           ;vntregtch.c: 203: WriteEEVNT2(Kvnt[2].dvnt,Kvnt
      +                          [2].dpwm);
   577  00BDCA  C3C8  F0AC         	movff	_Kvnt+5,?_WriteEEVNT2
   578  00BDCE  C3C7  FFE8         	movff	_Kvnt+4,wreg
   579  00BDD2  EC09  F043         	call	_WriteEEVNT2
   580                           ;vntregtch.c: 204: WriteEEVNT3(Kvnt[3].dvnt,Kvnt
      +                          [3].dpwm);
   581  00BDD6  C3CA  F0AC         	movff	_Kvnt+7,?_WriteEEVNT3
   582  00BDDA  C3C9  FFE8         	movff	_Kvnt+6,wreg
   583  00BDDE  EC1D  F043         	call	_WriteEEVNT3
   584                           ;vntregtch.c: 205: WriteEEVNT4(Kvnt[4].dvnt,Kvnt
      +                          [4].dpwm);
   585  00BDE2  C3CC  F0AC         	movff	_Kvnt+9,?_WriteEEVNT4
   586  00BDE6  C3CB  FFE8         	movff	_Kvnt+8,wreg
   587  00BDEA  EC31  F043         	call	_WriteEEVNT4
   588                           ;vntregtch.c: 206: WriteEEVNT5(Kvnt[5].dvnt,Kvnt
      +                          [5].dpwm);
   589  00BDEE  C3CE  F0AC         	movff	_Kvnt+11,?_WriteEEVNT5
   590  00BDF2  C3CD  FFE8         	movff	_Kvnt+10,wreg
   591  00BDF6  EC45  F043         	call	_WriteEEVNT5
   592                           ;vntregtch.c: 207: WriteEEVNT6(Kvnt[6].dvnt,Kvnt
      +                          [6].dpwm);
   593  00BDFA  C3D0  F0AC         	movff	_Kvnt+13,?_WriteEEVNT6
   594  00BDFE  C3CF  FFE8         	movff	_Kvnt+12,wreg
   595  00BE02  EC59  F043         	call	_WriteEEVNT6
   596                           ;vntregtch.c: 208: WriteEEVNT7(Kvnt[7].dvnt,Kvnt
      +                          [7].dpwm);
   597  00BE06  C3D2  F0AC         	movff	_Kvnt+15,?_WriteEEVNT7
   598  00BE0A  C3D1  FFE8         	movff	_Kvnt+14,wreg
   599  00BE0E  EF6D  F043         	goto	_WriteEEVNT7
   600                           ;vntregtch.c: 209: }
   601  00BE12                     __end_of_SetDefFan:
   602                           ;vntregtch.c: 214: unsigned char KalibracjaVNT(v
      +                          oid)
   603                           ;vntregtch.c: 215: {
   604  00BE12                     _KalibracjaVNT:
   605  000000                     
   606                           ;vntregtch.c: 216: static unsigned char k=0,krok
      +                          =0;
   607  00BE12  0100               	movlb	__Lparam shr (0+8)
   608  00BE14  6BA7               	clrf	(?a_KalibracjaVNT+2)^(__Lparam& (0+65280))
      +                          ,b
   609  00BE16  6BA8               	clrf	(?a_KalibracjaVNT+3)^(__Lparam& (0+65280))
      +                          ,b
   610                           ;vntregtch.c: 224: d=(GetBit2(RSDT1.inSTAT1,2)&&
      +                          GetBit2(RSDT1.inSTAT1,3))?1:0;
   611  00BE18  0E02               	movlw	2
   612  00BE1A  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   613  00BE1C  C37C  FFE8         	movff	_RSDT1+79,wreg
   614  00BE20  ECB9  F003         	call	_GetBit2
   615  00BE24  E30A               	bnc	u90
   616  00BE26  0E03               	movlw	3
   617  00BE28  0100               	movlb	__Lparam shr (0+8)
   618  00BE2A  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   619  00BE2C  C37C  FFE8         	movff	_RSDT1+79,wreg
   620  00BE30  ECB9  F003         	call	_GetBit2
   621  00BE34  E302               	bnc	u90
   622  00BE36  0E01               	movlw	1
   623  00BE38  D001               	goto	u100
   624  00BE3A                     u90:
   625  00BE3A  0E00               	movlw	0
   626  00BE3C                     u100:
   627  00BE3C  0100               	movlb	__Lparam shr (0+8)
   628  00BE3E  6FA5               	movwf	?a_KalibracjaVNT^(__Lparam& (0+65280)),b	
      +                          ;volatile
   629                           ;vntregtch.c: 226: if(!M._LCD||!d)
   630  00BE40  0103               	movlb	(_M+5) shr (0+8)
   631  00BE42  AD0B               	btfss	(_M+5)& (0+255),6,b
   632  00BE44  D003               	goto	u130
   633  00BE46  0100               	movlb	__Lparam shr (0+8)
   634  00BE48  51A5               	movf	?a_KalibracjaVNT^(__Lparam& (0+65280)),w	;
      +                          volatile
   635  00BE4A  E103               	bnz	l36
   636  00BE4C                     u130:
   637                           ;vntregtch.c: 227: {
   638  00BE4C  0E0E               	movlw	14
   639  00BE4E  EC51  F07E         	call	_StartRTS
   640  00BE52                     l36:
   641                           ;vntregtch.c: 229: }
   642  00BE52  0103               	movlb	(_M+4) shr (0+8)
   643  00BE54  A50A               	btfss	(_M+4)& (0+255),2,b
   644  00BE56  D00A               	goto	u181
   645  00BE58  0103               	movlb	(_M+5) shr (0+8)
   646  00BE5A  AD0B               	btfss	(_M+5)& (0+255),6,b
   647  00BE5C  D007               	goto	u181
   648  00BE5E  0E0E               	movlw	14
   649  00BE60  EC63  F07E         	call	_RTS
   650  00BE64  6E00               	movwf	btemp,c
   651  00BE66  0E03               	movlw	3
   652  00BE68  5C00               	subwf	btemp,w,c
   653  00BE6A  E20B               	bc	u240
   654  00BE6C                     u181:
   655  00BE6C  0103               	movlb	(_M+4) shr (0+8)
   656  00BE6E  A50A               	btfss	(_M+4)& (0+255),2,b
   657  00BE70  D22B               	goto	l39
   658  00BE72  0103               	movlb	(_M+5) shr (0+8)
   659  00BE74  AD0B               	btfss	(_M+5)& (0+255),6,b
   660  00BE76  D228               	goto	l39
   661  00BE78  C32C  FFE8         	movff	_M+38,wreg
   662  00BE7C  0A02               	xorlw	2
   663  00BE7E  E001 D223          	bnz	l39
   664  00BE82                     u240:
   665                           ;vntregtch.c: 234: {
   666  00BE82  0100               	movlb	__Lparam shr (0+8)
   667  00BE84  0E46               	movlw	low (_RSDT1+25)
   668  00BE86  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   669  00BE88  0E03               	movlw	high (_RSDT1+25)
   670  00BE8A  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   671  00BE8C  0E07               	movlw	7
   672  00BE8E  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   673  00BE90  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   674  00BE92  ECEC  F003         	call	_BitSet2	;wreg free
   675                           ;vntregtch.c: 237: SetDefFan(DtKNF.rfan);
   676  00BE96  C2D0  FFE8         	movff	_DtKNF+34,wreg
   677  00BE9A  DF25               	call	_SetDefFan
   678                           ;vntregtch.c: 238: ModParam();
   679  00BE9C  EC65  F000         	call	_ModParam	;wreg free
   680                           ;vntregtch.c: 242: {
   681  00BEA0  0100               	movlb	_PFN shr (0+8)
   682  00BEA2  9967               	bcf	_PFN& (0+255),4,b
   683                           ;vntregtch.c: 244: PFN._lato=0;
   684  00BEA4  9767               	bcf	_PFN& (0+255),3,b
   685                           ;vntregtch.c: 245: PFN._off=1;
   686  00BEA6  8567               	bsf	_PFN& (0+255),2,b
   687                           ;vntregtch.c: 246: PFN._csn=0;
   688  00BEA8  9367               	bcf	_PFN& (0+255),1,b
   689                           ;vntregtch.c: 247: PFN.poz=1;
   690  00BEAA  0100               	movlb	(_PFN+1) shr (0+8)
   691  00BEAC  0E01               	movlw	1
   692  00BEAE  6F68               	movwf	(_PFN+1)& (0+255),b
   693  00BEB0  6B69               	clrf	(_PFN+2)& (0+255),b
   694                           ;vntregtch.c: 248: BitSet2(&RSDT1.outSTAT2,4,0);
   695  00BEB2  0100               	movlb	__Lparam shr (0+8)
   696  00BEB4  0E46               	movlw	low (_RSDT1+25)
   697  00BEB6  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   698  00BEB8  0E03               	movlw	high (_RSDT1+25)
   699  00BEBA  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   700  00BEBC  0E04               	movlw	4
   701  00BEBE  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   702  00BEC0  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   703  00BEC2  ECEC  F003         	call	_BitSet2	;wreg free
   704                           ;vntregtch.c: 249: BitSet2(&RSDT1.outSTAT2,5,0);
   705  00BEC6  0100               	movlb	__Lparam shr (0+8)
   706  00BEC8  0E46               	movlw	low (_RSDT1+25)
   707  00BECA  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   708  00BECC  0E03               	movlw	high (_RSDT1+25)
   709  00BECE  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   710  00BED0  0E05               	movlw	5
   711  00BED2  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   712  00BED4  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   713  00BED6  ECEC  F003         	call	_BitSet2	;wreg free
   714                           ;vntregtch.c: 250: BitSet2(&RSDT1.outSTAT2,6,1);
   715  00BEDA  0100               	movlb	__Lparam shr (0+8)
   716  00BEDC  0E46               	movlw	low (_RSDT1+25)
   717  00BEDE  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   718  00BEE0  0E03               	movlw	high (_RSDT1+25)
   719  00BEE2  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   720  00BEE4  0E06               	movlw	6
   721  00BEE6  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   722  00BEE8  0E01               	movlw	1
   723  00BEEA  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   724  00BEEC  ECEC  F003         	call	_BitSet2	;wreg free
   725                           ;vntregtch.c: 251: WriteEEPFN();
   726  00BEF0  EC7D  F042         	call	_WriteEEPFN	;wreg free
   727                           ;vntregtch.c: 252: }
   728  00BEF4  010F               	movlb	F1841 shr (0+8)
   729  00BEF6  6B3C               	clrf	F1841& (0+255),b
   730                           ;vntregtch.c: 255: RD3=0;
   731  00BEF8  9683               	bcf	3971,3,c	;volatile
   732                           ;vntregtch.c: 256: StartRTS(4);
   733  00BEFA  0E04               	movlw	4
   734  00BEFC  EC51  F07E         	call	_StartRTS
   735                           ;vntregtch.c: 257: return 2;
   736  00BF00  0C02               	retlw	2
   737                           ;vntregtch.c: 258: }
   738  00BF02                     l40:
   739                           ;vntregtch.c: 261: {
   740                           ;vntregtch.c: 263: {
   741  00BF02  0E00               	movlw	0
   742  00BF04  EC74  F001         	call	_WritePWM
   743                           ;vntregtch.c: 265: RD3=0;
   744  00BF08  9683               	bcf	3971,3,c	;volatile
   745                           ;vntregtch.c: 266: BitSet2(&RSDT1.outSTAT2,7,1);
   746  00BF0A  0100               	movlb	__Lparam shr (0+8)
   747  00BF0C  0E46               	movlw	low (_RSDT1+25)
   748  00BF0E  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   749  00BF10  0E03               	movlw	high (_RSDT1+25)
   750  00BF12  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   751  00BF14  0E07               	movlw	7
   752  00BF16  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   753  00BF18  0E01               	movlw	1
   754  00BF1A  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   755  00BF1C  ECEC  F003         	call	_BitSet2	;wreg free
   756                           ;vntregtch.c: 267: if(M._PW_START&&!RB6)
   757  00BF20  0103               	movlb	(_M+4) shr (0+8)
   758  00BF22  B50A               	btfsc	(_M+4)& (0+255),2,b
   759  00BF24  BC81               	btfsc	3969,6,c	;volatile
   760  00BF26  D005               	goto	l41
   761                           ;vntregtch.c: 268: {
   762  00BF28  0E0A               	movlw	10
   763  00BF2A  EC33  F07E         	call	_StartRTdS
   764                           ;vntregtch.c: 270: k=1;
   765  00BF2E  0E01               	movlw	1
   766  00BF30  D01F               	goto	L5
   767                           ;vntregtch.c: 271: }
   768  00BF32                     l41:
   769                           ;vntregtch.c: 272: else
   770  00BF32  0100               	movlb	__Lparam shr (0+8)
   771  00BF34  6BA6               	clrf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,b	;volatile
   772  00BF36  D014               	goto	l46
   773  00BF38                     l43:
   774  00BF38  0100               	movlb	__Lparam shr (0+8)
   775  00BF3A  51A6               	movf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,w	;volatile
   776  00BF3C  0D02               	mullw	2
   777  00BF3E  0EC3               	movlw	low _Kvnt
   778  00BF40  24F3               	addwf	prodl,w,c
   779  00BF42  6EE9               	movwf	fsr0l,c
   780  00BF44  0E03               	movlw	high _Kvnt
   781  00BF46  20F4               	addwfc	prodh,w,c
   782  00BF48  6EEA               	movwf	fsr0h,c
   783  00BF4A  6AEF               	clrf	indf0,c
   784  00BF4C  51A6               	movf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,w	;volatile
   785  00BF4E  0D02               	mullw	2
   786  00BF50  0EC4               	movlw	low (_Kvnt+1)
   787  00BF52  24F3               	addwf	prodl,w,c
   788  00BF54  6EE9               	movwf	fsr0l,c
   789  00BF56  0E03               	movlw	high (_Kvnt+1)
   790  00BF58  20F4               	addwfc	prodh,w,c
   791  00BF5A  6EEA               	movwf	fsr0h,c
   792  00BF5C  6AEF               	clrf	indf0,c
   793  00BF5E  2BA6               	incf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,f,b	;volatile
   794  00BF60                     l46:
   795  00BF60  0E07               	movlw	7
   796  00BF62  0100               	movlb	__Lparam shr (0+8)
   797  00BF64  65A6               	cpfsgt	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280
      +                          )),b	;volatile
   798  00BF66  D7E8               	goto	l43
   799                           ;vntregtch.c: 275: StartRTdS(10);
   800  00BF68  0E0A               	movlw	10
   801  00BF6A  EC33  F07E         	call	_StartRTdS
   802                           ;vntregtch.c: 276: k=2;
   803  00BF6E  0E02               	movlw	2
   804  00BF70                     L5:
   805  00BF70  CFE8 FF3C          	movff	wreg,F1841
   806                           ;vntregtch.c: 277: }
   807  00BF74  EC6B  F06B         	call	_ClrTachoDta	;wreg free
   808                           ;vntregtch.c: 279: return 0;
   809  00BF78  0C00               	retlw	0
   810  00BF7A                     l47:
   811                           ;vntregtch.c: 280: }
   812                           ;vntregtch.c: 282: {
   813  00BF7A  0E00               	movlw	0
   814  00BF7C  EC74  F001         	call	_WritePWM
   815                           ;vntregtch.c: 284: RD3=0;
   816  00BF80  9683               	bcf	3971,3,c	;volatile
   817                           ;vntregtch.c: 285: if(!RB6&&M._PW_START&&GetBit2
      +                          (RSDT1.inSTAT1,3)&&GetBit2(RSDT1.inSTAT1,4))
   818  00BF82  BC81               	btfsc	3969,6,c	;volatile
   819  00BF84  D04B               	goto	l48
   820  00BF86  0103               	movlb	(_M+4) shr (0+8)
   821  00BF88  A50A               	btfss	(_M+4)& (0+255),2,b
   822  00BF8A  D048               	goto	l48
   823  00BF8C  0E03               	movlw	3
   824  00BF8E  0100               	movlb	__Lparam shr (0+8)
   825  00BF90  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   826  00BF92  C37C  FFE8         	movff	_RSDT1+79,wreg
   827  00BF96  ECB9  F003         	call	_GetBit2
   828  00BF9A  E340               	bnc	l48
   829  00BF9C  0E04               	movlw	4
   830  00BF9E  0100               	movlb	__Lparam shr (0+8)
   831  00BFA0  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   832  00BFA2  C37C  FFE8         	movff	_RSDT1+79,wreg
   833  00BFA6  ECB9  F003         	call	_GetBit2
   834  00BFAA  E338               	bnc	l48
   835                           ;vntregtch.c: 286: {
   836  00BFAC  0100               	movlb	__Lparam shr (0+8)
   837  00BFAE  0E46               	movlw	low (_RSDT1+25)
   838  00BFB0  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   839  00BFB2  0E03               	movlw	high (_RSDT1+25)
   840  00BFB4  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   841  00BFB6  0E07               	movlw	7
   842  00BFB8  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   843  00BFBA  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   844  00BFBC  ECEC  F003         	call	_BitSet2	;wreg free
   845                           ;vntregtch.c: 290: OdczytDanychKalibracji();
   846  00BFC0  D99D               	call	_OdczytDanychKalibracji	;wreg free
   847                           ;vntregtch.c: 293: PFN._zima=0;
   848  00BFC2  0100               	movlb	_PFN shr (0+8)
   849  00BFC4  9967               	bcf	_PFN& (0+255),4,b
   850                           ;vntregtch.c: 294: PFN._lato=0;
   851  00BFC6  9767               	bcf	_PFN& (0+255),3,b
   852                           ;vntregtch.c: 295: PFN._off=1;
   853  00BFC8  8567               	bsf	_PFN& (0+255),2,b
   854                           ;vntregtch.c: 296: PFN._csn=0;
   855  00BFCA  9367               	bcf	_PFN& (0+255),1,b
   856                           ;vntregtch.c: 297: PFN.poz=1;
   857  00BFCC  0100               	movlb	(_PFN+1) shr (0+8)
   858  00BFCE  0E01               	movlw	1
   859  00BFD0  6F68               	movwf	(_PFN+1)& (0+255),b
   860  00BFD2  6B69               	clrf	(_PFN+2)& (0+255),b
   861                           ;vntregtch.c: 298: BitSet2(&RSDT1.outSTAT2,4,0);
   862  00BFD4  0100               	movlb	__Lparam shr (0+8)
   863  00BFD6  0E46               	movlw	low (_RSDT1+25)
   864  00BFD8  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   865  00BFDA  0E03               	movlw	high (_RSDT1+25)
   866  00BFDC  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   867  00BFDE  0E04               	movlw	4
   868  00BFE0  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   869  00BFE2  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   870  00BFE4  ECEC  F003         	call	_BitSet2	;wreg free
   871                           ;vntregtch.c: 299: BitSet2(&RSDT1.outSTAT2,5,0);
   872  00BFE8  0100               	movlb	__Lparam shr (0+8)
   873  00BFEA  0E46               	movlw	low (_RSDT1+25)
   874  00BFEC  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   875  00BFEE  0E03               	movlw	high (_RSDT1+25)
   876  00BFF0  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   877  00BFF2  0E05               	movlw	5
   878  00BFF4  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   879  00BFF6  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   880  00BFF8  ECEC  F003         	call	_BitSet2	;wreg free
   881                           ;vntregtch.c: 300: BitSet2(&RSDT1.outSTAT2,6,1);
   882  00BFFC  0100               	movlb	__Lparam shr (0+8)
   883  00BFFE  0E46               	movlw	low (_RSDT1+25)
   884  00C000  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   885  00C002  0E03               	movlw	high (_RSDT1+25)
   886  00C004  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   887  00C006  0E06               	movlw	6
   888  00C008  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   889  00C00A  0E01               	movlw	1
   890  00C00C  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   891  00C00E  ECEC  F003         	call	_BitSet2	;wreg free
   892                           ;vntregtch.c: 301: WriteEEPFN();
   893  00C012  EC7D  F042         	call	_WriteEEPFN	;wreg free
   894                           ;vntregtch.c: 302: k=0;
   895  00C016  010F               	movlb	F1841 shr (0+8)
   896  00C018  6B3C               	clrf	F1841& (0+255),b
   897                           ;vntregtch.c: 303: return 1;
   898  00C01A  0C01               	retlw	1
   899  00C01C                     l48:
   900                           ;vntregtch.c: 304: }
   901  00C01C  BC81               	btfsc	3969,6,c	;volatile
   902  00C01E  D008               	goto	l49
   903  00C020  0E0A               	movlw	10
   904  00C022  EC45  F07E         	call	_RTdS
   905  00C026  6E00               	movwf	btemp,c
   906  00C028  0E1F               	movlw	31
   907  00C02A  5C00               	subwf	btemp,w,c
   908  00C02C  E201               	bc	l49
   909  00C02E  0C00               	retlw	0
   910  00C030                     l49:
   911                           ;vntregtch.c: 306: for(i=0;i<nkpkt;i++) {Kvnt[i]
      +                          .dvnt=0;Kvnt[i].dpwm=0;}
   912  00C030  0100               	movlb	__Lparam shr (0+8)
   913  00C032  6BA6               	clrf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,b	;volatile
   914  00C034  D014               	goto	l53
   915  00C036                     l50:
   916  00C036  0100               	movlb	__Lparam shr (0+8)
   917  00C038  51A6               	movf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,w	;volatile
   918  00C03A  0D02               	mullw	2
   919  00C03C  0EC3               	movlw	low _Kvnt
   920  00C03E  24F3               	addwf	prodl,w,c
   921  00C040  6EE9               	movwf	fsr0l,c
   922  00C042  0E03               	movlw	high _Kvnt
   923  00C044  20F4               	addwfc	prodh,w,c
   924  00C046  6EEA               	movwf	fsr0h,c
   925  00C048  6AEF               	clrf	indf0,c
   926  00C04A  51A6               	movf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,w	;volatile
   927  00C04C  0D02               	mullw	2
   928  00C04E  0EC4               	movlw	low (_Kvnt+1)
   929  00C050  24F3               	addwf	prodl,w,c
   930  00C052  6EE9               	movwf	fsr0l,c
   931  00C054  0E03               	movlw	high (_Kvnt+1)
   932  00C056  20F4               	addwfc	prodh,w,c
   933  00C058  6EEA               	movwf	fsr0h,c
   934  00C05A  6AEF               	clrf	indf0,c
   935  00C05C  2BA6               	incf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,f,b	;volatile
   936  00C05E                     l53:
   937  00C05E  0E07               	movlw	7
   938  00C060  0100               	movlb	__Lparam shr (0+8)
   939  00C062  65A6               	cpfsgt	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280
      +                          )),b	;volatile
   940  00C064  D7E8               	goto	l50
   941                           ;vntregtch.c: 307: StartRTdS(10);
   942  00C066  0E0A               	movlw	10
   943  00C068  EC33  F07E         	call	_StartRTdS
   944                           ;vntregtch.c: 308: k=2;
   945  00C06C  0E02               	movlw	2
   946  00C06E  CFE8 FF3C          	movff	wreg,F1841
   947                           ;vntregtch.c: 309: return 0;
   948  00C072  0C00               	retlw	0
   949  00C074                     l54:
   950                           ;vntregtch.c: 310: }
   951                           ;vntregtch.c: 312: {
   952  00C074  0E00               	movlw	0
   953  00C076  EC74  F001         	call	_WritePWM
   954                           ;vntregtch.c: 314: RD3=0;
   955  00C07A  9683               	bcf	3971,3,c	;volatile
   956                           ;vntregtch.c: 315: if(RTdS(10)>10&&M.rVVNT<500)
   957  00C07C  0E0A               	movlw	10
   958  00C07E  EC45  F07E         	call	_RTdS
   959  00C082  6E00               	movwf	btemp,c
   960  00C084  0E0B               	movlw	11
   961  00C086  5C00               	subwf	btemp,w,c
   962  00C088  E310               	bnc	l55
   963  00C08A  0103               	movlb	(_M+31) shr (0+8)
   964  00C08C  0E01               	movlw	1
   965  00C08E  5D26               	subwf	(_M+32)& (0+255),w,b
   966  00C090  0EF4               	movlw	244
   967  00C092  B4D8               	btfsc	status,2,c
   968  00C094  5D25               	subwf	(_M+31)& (0+255),w,b
   969                           ;vntregtch.c: 316: {
   970  00C096  0E0A               	movlw	10
   971  00C098  E209               	bc	L7
   972  00C09A  EC33  F07E         	call	_StartRTdS
   973                           ;vntregtch.c: 319: krok=0;
   974  00C09E  010F               	movlb	F1842 shr (0+8)
   975  00C0A0  6B3D               	clrf	F1842& (0+255),b
   976                           ;vntregtch.c: 320: k=3;
   977  00C0A2  0E03               	movlw	3
   978  00C0A4  CFE8 FF3C          	movff	wreg,F1841
   979                           ;vntregtch.c: 321: return 0;
   980  00C0A8  0C00               	retlw	0
   981  00C0AA                     l55:
   982                           ;vntregtch.c: 322: }
   983  00C0AA  0E0A               	movlw	10
   984  00C0AC                     L7:
   985  00C0AC  EC45  F07E         	call	_RTdS
   986  00C0B0  6E00               	movwf	btemp,c
   987  00C0B2  0E5B               	movlw	91
   988  00C0B4  5C00               	subwf	btemp,w,c
   989  00C0B6  E201               	bc	l56
   990  00C0B8  0C00               	retlw	0
   991  00C0BA                     l56:
   992                           ;vntregtch.c: 324: StartRTdS(10);
   993  00C0BA  0E0A               	movlw	10
   994  00C0BC  EC33  F07E         	call	_StartRTdS
   995                           ;vntregtch.c: 326: krok=0;
   996  00C0C0  010F               	movlb	F1842 shr (0+8)
   997  00C0C2  6B3D               	clrf	F1842& (0+255),b
   998                           ;vntregtch.c: 327: k=3;
   999  00C0C4  0E03               	movlw	3
  1000  00C0C6  CFE8 FF3C          	movff	wreg,F1841
  1001                           ;vntregtch.c: 328: return 0;
  1002  00C0CA  0C00               	retlw	0
  1003  00C0CC                     l57:
  1004                           ;vntregtch.c: 329: }
  1005                           ;vntregtch.c: 331: {
  1006  00C0CC  0E08               	movlw	8
  1007  00C0CE  6E02               	movwf	btemp+2,c
  1008  00C0D0  6A03               	clrf	btemp+3,c
  1009  00C0D2  C2E0  FFE8         	movff	_PWM+7,wreg
  1010  00C0D6  C2DF  F000         	movff	_PWM+6,btemp
  1011  00C0DA  6A01               	clrf	btemp+1,c
  1012  00C0DC  5E00               	subwf	btemp,f,c
  1013  00C0DE  0E00               	movlw	0
  1014  00C0E0  5A01               	subwfb	btemp+1,f,c
  1015  00C0E2  ECA5  F006         	call	awdiv
  1016  00C0E6  C2E0  F000         	movff	_PWM+7,btemp
  1017  00C0EA  5000               	movf	btemp,w,c
  1018  00C0EC  2404               	addwf	btemp+4,w,c
  1019  00C0EE  EC74  F001         	call	_WritePWM
  1020                           ;vntregtch.c: 333: RD3=1;
  1021  00C0F2  8683               	bsf	3971,3,c	;volatile
  1022                           ;vntregtch.c: 334: if(RTdS(10)<=10) return 0;
  1023  00C0F4  0E0A               	movlw	10
  1024  00C0F6  EC45  F07E         	call	_RTdS
  1025  00C0FA  6E00               	movwf	btemp,c
  1026  00C0FC  0E0B               	movlw	11
  1027  00C0FE  5C00               	subwf	btemp,w,c
  1028  00C100  E201               	bc	l58
  1029  00C102  0C00               	retlw	0
  1030  00C104                     l58:
  1031                           ;vntregtch.c: 335: StartRTdS(10);
  1032  00C104  0E0A               	movlw	10
  1033  00C106  EC33  F07E         	call	_StartRTdS
  1034                           ;vntregtch.c: 337: krok=0;
  1035  00C10A  010F               	movlb	F1842 shr (0+8)
  1036  00C10C  6B3D               	clrf	F1842& (0+255),b
  1037                           ;vntregtch.c: 338: k=4;
  1038  00C10E  0E04               	movlw	4
  1039  00C110  CFE8 FF3C          	movff	wreg,F1841
  1040                           ;vntregtch.c: 339: return 0;
  1041  00C114  0C00               	retlw	0
  1042  00C116                     l59:
  1043                           ;vntregtch.c: 340: }
  1044                           ;vntregtch.c: 342: {
  1045  00C116  C2E0  FFE8         	movff	_PWM+7,wreg
  1046  00C11A  EC74  F001         	call	_WritePWM
  1047                           ;vntregtch.c: 344: if(RTdS(10)<=10) return 0;
  1048  00C11E  0E0A               	movlw	10
  1049  00C120  EC45  F07E         	call	_RTdS
  1050  00C124  6E00               	movwf	btemp,c
  1051  00C126  0E0B               	movlw	11
  1052  00C128  5C00               	subwf	btemp,w,c
  1053  00C12A  E201               	bc	l60
  1054  00C12C  0C00               	retlw	0
  1055  00C12E                     l60:
  1056                           ;vntregtch.c: 345: StartRTdS(10);
  1057  00C12E  0E0A               	movlw	10
  1058  00C130  EC33  F07E         	call	_StartRTdS
  1059                           ;vntregtch.c: 347: krok=0;
  1060  00C134  010F               	movlb	F1842 shr (0+8)
  1061  00C136  6B3D               	clrf	F1842& (0+255),b
  1062                           ;vntregtch.c: 348: k=5;
  1063  00C138  0E05               	movlw	5
  1064  00C13A  CFE8 FF3C          	movff	wreg,F1841
  1065                           ;vntregtch.c: 349: return 0;
  1066  00C13E  0C00               	retlw	0
  1067  00C140                     l61:
  1068                           ;vntregtch.c: 350: }
  1069                           ;vntregtch.c: 352: {
  1070  00C140  8683               	bsf	3971,3,c	;volatile
  1071                           ;vntregtch.c: 354: PMP.APROC=krok*99/(nkpkt-1);
  1072  00C142  0E07               	movlw	7
  1073  00C144  6E02               	movwf	btemp+2,c
  1074  00C146  6A03               	clrf	btemp+3,c
  1075  00C148  CF3D  FFE8         	movff	F1842,wreg
  1076  00C14C  0D63               	mullw	99
  1077  00C14E  CFF3 F000          	movff	prodl,btemp
  1078  00C152  CFF4 F001          	movff	prodh,btemp+1
  1079  00C156  ECA5  F006         	call	awdiv
  1080  00C15A  C004  F2FE         	movff	btemp+4,_PMP+2
  1081                           ;vntregtch.c: 355: WritePWM2(ProcToPmpPwm(99-PMP
      +                          .APROC));
  1082  00C15E  C2FE  FFE8         	movff	_PMP+2,wreg
  1083  00C162  0863               	sublw	99
  1084  00C164  EC27  F072         	call	_ProcToPmpPwm
  1085  00C168  EC81  F001         	call	_WritePWM2
  1086                           ;vntregtch.c: 356: if(SetKalPWM(krok,PWM.VLO_PWM
      +                          +krok*((PWM.HIPWM-PWM.VLO_PWM)/(nkpkt-1))))
  1087  00C16C  0E07               	movlw	7
  1088  00C16E  6E02               	movwf	btemp+2,c
  1089  00C170  6A03               	clrf	btemp+3,c
  1090  00C172  C2E0  FFE8         	movff	_PWM+7,wreg
  1091  00C176  C2DF  F000         	movff	_PWM+6,btemp
  1092  00C17A  6A01               	clrf	btemp+1,c
  1093  00C17C  5E00               	subwf	btemp,f,c
  1094  00C17E  0E00               	movlw	0
  1095  00C180  5A01               	subwfb	btemp+1,f,c
  1096  00C182  ECA5  F006         	call	awdiv
  1097  00C186  5004               	movf	btemp+4,w,c
  1098  00C188  CF3D  F000         	movff	F1842,btemp
  1099  00C18C  0200               	mulwf	btemp,c
  1100  00C18E  C2E0  FFE8         	movff	_PWM+7,wreg
  1101  00C192  24F3               	addwf	prodl,w,c
  1102  00C194  0100               	movlb	__Lparam shr (0+8)
  1103  00C196  6FA9               	movwf	?_SetKalPWM^(__Lparam& (0+65280)),b
  1104  00C198  CF3D  FFE8         	movff	F1842,wreg
  1105  00C19C  DD08               	call	_SetKalPWM
  1106  00C19E  0A00               	xorlw	0
  1107  00C1A0  E008               	bz	l62
  1108                           ;vntregtch.c: 357: {
  1109  00C1A2  010F               	movlb	F1842 shr (0+8)
  1110  00C1A4  2B3D               	incf	F1842& (0+255),f,b
  1111                           ;vntregtch.c: 359: if (krok>=nkpkt) k=6;
  1112  00C1A6  0E07               	movlw	7
  1113  00C1A8  653D               	cpfsgt	F1842& (0+255),b
  1114  00C1AA  0C00               	retlw	0
  1115  00C1AC  0E06               	movlw	6
  1116  00C1AE  CFE8 FF3C          	movff	wreg,F1841
  1117  00C1B2                     l62:
  1118                           ;vntregtch.c: 360: }
  1119  00C1B2  0C00               	retlw	0
  1120  00C1B4                     l64:
  1121                           ;vntregtch.c: 362: }
  1122                           ;vntregtch.c: 364: {
  1123  00C1B4  0100               	movlb	__Lparam shr (0+8)
  1124  00C1B6  6BA6               	clrf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1125  00C1B8  D01F               	goto	l68
  1126  00C1BA                     l65:
  1127                           ;vntregtch.c: 367: {
  1128  00C1BA  0100               	movlb	__Lparam shr (0+8)
  1129  00C1BC  51A6               	movf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,w	;volatile
  1130  00C1BE  0D02               	mullw	2
  1131  00C1C0  0EC3               	movlw	low _Kvnt
  1132  00C1C2  24F3               	addwf	prodl,w,c
  1133  00C1C4  6EE9               	movwf	fsr0l,c
  1134  00C1C6  0E03               	movlw	high _Kvnt
  1135  00C1C8  20F4               	addwfc	prodh,w,c
  1136  00C1CA  6EEA               	movwf	fsr0h,c
  1137  00C1CC  50EF               	movf	indf0,w,c
  1138  00C1CE  27A7               	addwf	(?a_KalibracjaVNT+2)^(__Lparam& (0+65280)
      +                          ),f,b
  1139  00C1D0  0E00               	movlw	0
  1140  00C1D2  23A8               	addwfc	(?a_KalibracjaVNT+3)^(__Lparam& (0+65280
      +                          )),f,b
  1141                           ;vntregtch.c: 369: if(i>1&&!Kvnt[i].dvnt)
  1142  00C1D4  0E01               	movlw	1
  1143  00C1D6  65A6               	cpfsgt	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280
      +                          )),b	;volatile
  1144  00C1D8  D00D               	goto	l69
  1145  00C1DA  51A6               	movf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,w	;volatile
  1146  00C1DC  0D02               	mullw	2
  1147  00C1DE  0EC3               	movlw	low _Kvnt
  1148  00C1E0  24F3               	addwf	prodl,w,c
  1149  00C1E2  6EE9               	movwf	fsr0l,c
  1150  00C1E4  0E03               	movlw	high _Kvnt
  1151  00C1E6  20F4               	addwfc	prodh,w,c
  1152  00C1E8  6EEA               	movwf	fsr0h,c
  1153  00C1EA  50EF               	movf	indf0,w,c
  1154  00C1EC  E103               	bnz	l69
  1155                           ;vntregtch.c: 370: {
  1156  00C1EE  6BA7               	clrf	(?a_KalibracjaVNT+2)^(__Lparam& (0+65280))
      +                          ,b
  1157  00C1F0  6BA8               	clrf	(?a_KalibracjaVNT+3)^(__Lparam& (0+65280))
      +                          ,b
  1158                           ;vntregtch.c: 372: break;
  1159  00C1F2  D006               	goto	l66
  1160  00C1F4                     l69:
  1161  00C1F4  0100               	movlb	__Lparam shr (0+8)
  1162  00C1F6  2BA6               	incf	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280))
      +                          ,f,b	;volatile
  1163  00C1F8                     l68:
  1164  00C1F8  0E07               	movlw	7
  1165  00C1FA  0100               	movlb	__Lparam shr (0+8)
  1166  00C1FC  65A6               	cpfsgt	(?a_KalibracjaVNT+1)^(__Lparam& (0+65280
      +                          )),b	;volatile
  1167  00C1FE  D7DD               	goto	l65
  1168  00C200                     l66:
  1169                           ;vntregtch.c: 373: }
  1170  00C200  0100               	movlb	__Lparam shr (0+8)
  1171  00C202  51A8               	movf	(?a_KalibracjaVNT+3)^(__Lparam& (0+65280))
      +                          ,w
  1172  00C204  11A7               	iorwf	(?a_KalibracjaVNT+2)^(__Lparam& (0+65280)
      +                          ),w
  1173  00C206  E03C               	bz	l70
  1174                           ;vntregtch.c: 376: {
  1175  00C208  0E46               	movlw	low (_RSDT1+25)
  1176  00C20A  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1177  00C20C  0E03               	movlw	high (_RSDT1+25)
  1178  00C20E  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1179  00C210  0E07               	movlw	7
  1180  00C212  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1181  00C214  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1182  00C216  ECEC  F003         	call	_BitSet2	;wreg free
  1183                           ;vntregtch.c: 379: WriteEEVNT0(Kvnt[0].dvnt,Kvnt
      +                          [0].dpwm);
  1184  00C21A  C3C4  F0AC         	movff	_Kvnt+1,?_WriteEEVNT0
  1185  00C21E  C3C3  FFE8         	movff	_Kvnt,wreg
  1186  00C222  ECE1  F042         	call	_WriteEEVNT0
  1187                           ;vntregtch.c: 380: WriteEEVNT1(Kvnt[1].dvnt,Kvnt
      +                          [1].dpwm);
  1188  00C226  C3C6  F0AC         	movff	_Kvnt+3,?_WriteEEVNT1
  1189  00C22A  C3C5  FFE8         	movff	_Kvnt+2,wreg
  1190  00C22E  ECF5  F042         	call	_WriteEEVNT1
  1191                           ;vntregtch.c: 381: WriteEEVNT2(Kvnt[2].dvnt,Kvnt
      +                          [2].dpwm);
  1192  00C232  C3C8  F0AC         	movff	_Kvnt+5,?_WriteEEVNT2
  1193  00C236  C3C7  FFE8         	movff	_Kvnt+4,wreg
  1194  00C23A  EC09  F043         	call	_WriteEEVNT2
  1195                           ;vntregtch.c: 382: WriteEEVNT3(Kvnt[3].dvnt,Kvnt
      +                          [3].dpwm);
  1196  00C23E  C3CA  F0AC         	movff	_Kvnt+7,?_WriteEEVNT3
  1197  00C242  C3C9  FFE8         	movff	_Kvnt+6,wreg
  1198  00C246  EC1D  F043         	call	_WriteEEVNT3
  1199                           ;vntregtch.c: 383: WriteEEVNT4(Kvnt[4].dvnt,Kvnt
      +                          [4].dpwm);
  1200  00C24A  C3CC  F0AC         	movff	_Kvnt+9,?_WriteEEVNT4
  1201  00C24E  C3CB  FFE8         	movff	_Kvnt+8,wreg
  1202  00C252  EC31  F043         	call	_WriteEEVNT4
  1203                           ;vntregtch.c: 384: WriteEEVNT5(Kvnt[5].dvnt,Kvnt
      +                          [5].dpwm);
  1204  00C256  C3CE  F0AC         	movff	_Kvnt+11,?_WriteEEVNT5
  1205  00C25A  C3CD  FFE8         	movff	_Kvnt+10,wreg
  1206  00C25E  EC45  F043         	call	_WriteEEVNT5
  1207                           ;vntregtch.c: 385: WriteEEVNT6(Kvnt[6].dvnt,Kvnt
      +                          [6].dpwm);
  1208  00C262  C3D0  F0AC         	movff	_Kvnt+13,?_WriteEEVNT6
  1209  00C266  C3CF  FFE8         	movff	_Kvnt+12,wreg
  1210  00C26A  EC59  F043         	call	_WriteEEVNT6
  1211                           ;vntregtch.c: 386: WriteEEVNT7(Kvnt[7].dvnt,Kvnt
      +                          [7].dpwm);
  1212  00C26E  C3D2  F0AC         	movff	_Kvnt+15,?_WriteEEVNT7
  1213  00C272  C3D1  FFE8         	movff	_Kvnt+14,wreg
  1214  00C276  EC6D  F043         	call	_WriteEEVNT7
  1215                           ;vntregtch.c: 387: ModParam();
  1216  00C27A  EC65  F000         	call	_ModParam	;wreg free
  1217                           ;vntregtch.c: 388: }
  1218  00C27E  D01B               	goto	l71
  1219  00C280                     l70:
  1220                           ;vntregtch.c: 389: else
  1221  00C280  0100               	movlb	__Lparam shr (0+8)
  1222  00C282  0E46               	movlw	low (_RSDT1+25)
  1223  00C284  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1224  00C286  0E03               	movlw	high (_RSDT1+25)
  1225  00C288  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1226  00C28A  0E07               	movlw	7
  1227  00C28C  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1228  00C28E  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1229  00C290  ECEC  F003         	call	_BitSet2	;wreg free
  1230                           ;vntregtch.c: 392: M.ERR_BTY=0x07;
  1231  00C294  0E07               	movlw	7
  1232  00C296  CFE8 F313          	movff	wreg,_M+13
  1233                           ;vntregtch.c: 393: PrintErr(0x07,1);
  1234  00C29A  0E01               	movlw	1
  1235  00C29C  0100               	movlb	__Lparam shr (0+8)
  1236  00C29E  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  1237  00C2A0  0E07               	movlw	7
  1238  00C2A2  EC36  F003         	call	_PrintErr
  1239                           ;vntregtch.c: 394: PomALL();
  1240  00C2A6  EC0D  F00A         	call	_PomALL	;wreg free
  1241                           ;vntregtch.c: 395: ToWriteESTAT();
  1242  00C2AA  EC00  F07E         	call	_ToWriteESTAT	;wreg free
  1243                           ;vntregtch.c: 396: k=0;
  1244  00C2AE  010F               	movlb	F1841 shr (0+8)
  1245  00C2B0  6B3C               	clrf	F1841& (0+255),b
  1246                           ;vntregtch.c: 397: ErrPTG();
  1247  00C2B2  ECEE  F01D         	call	_ErrPTG	;wreg free
  1248  00C2B6                     l71:
  1249                           ;vntregtch.c: 398: }
  1250  00C2B6  0E07               	movlw	7
  1251  00C2B8  CFE8 FF3C          	movff	wreg,F1841
  1252                           ;vntregtch.c: 400: return 0;
  1253  00C2BC  0C00               	retlw	0
  1254  00C2BE                     l72:
  1255                           ;vntregtch.c: 401: }
  1256                           ;vntregtch.c: 403: {
  1257  00C2BE  0103               	movlb	(_M+1) shr (0+8)
  1258  00C2C0  8F07               	bsf	(_M+1)& (0+255),7,b
  1259                           ;vntregtch.c: 405: k=0;
  1260  00C2C2  010F               	movlb	F1841 shr (0+8)
  1261  00C2C4  6B3C               	clrf	F1841& (0+255),b
  1262                           ;vntregtch.c: 406: return 1;
  1263  00C2C6  0C01               	retlw	1
  1264  00C2C8                     l39:
  1265  00C2C8  CF3C  FFE8         	movff	F1841,wreg
  1266  00C2CC  0A00               	xorlw	0
  1267  00C2CE  E101 D618          	bz	l40
  1268  00C2D2  0A01               	xorlw	1
  1269  00C2D4  E101 D651          	bz	l47
  1270  00C2D8  0A03               	xorlw	3
  1271  00C2DA  E101 D6CB          	bz	l54
  1272  00C2DE  0A01               	xorlw	1
  1273  00C2E0  E101 D6F4          	bz	l57
  1274  00C2E4  0A07               	xorlw	7
  1275  00C2E6  E101 D716          	bz	l59
  1276  00C2EA  0A01               	xorlw	1
  1277  00C2EC  E101 D728          	bz	l61
  1278  00C2F0  0A03               	xorlw	3
  1279  00C2F2  E101 D75F          	bz	l64
  1280  00C2F6  0A01               	xorlw	1
  1281  00C2F8  E0E2               	bz	l72
  1282                           ;vntregtch.c: 467: return 1;
  1283  00C2FA  0C01               	retlw	1
  1284                           ;vntregtch.c: 468: }
  1285  00C2FC                     __end_of_KalibracjaVNT:
  1286                           ;vntregtch.c: 472: void OdczytDanychKalibracji()
  1287                           ;vntregtch.c: 473: {
  1288  00C2FC                     _OdczytDanychKalibracji:
  1289  000000                     
  1290                           ;vntregtch.c: 475: Kvnt[0].dvnt=ReadEEVNT0_V();
  1291  00C2FC  ECF0  F042         	call	_ReadEEVNT0_V	;wreg free
  1292  00C300  CFE8 F3C3          	movff	wreg,_Kvnt
  1293                           ;vntregtch.c: 476: Kvnt[0].dpwm=ReadEEVNT0_P();
  1294  00C304  ECF2  F042         	call	_ReadEEVNT0_P	;wreg free
  1295  00C308  CFE8 F3C4          	movff	wreg,_Kvnt+1
  1296                           ;vntregtch.c: 477: Kvnt[1].dvnt=ReadEEVNT1_V();
  1297  00C30C  EC04  F043         	call	_ReadEEVNT1_V	;wreg free
  1298  00C310  CFE8 F3C5          	movff	wreg,_Kvnt+2
  1299                           ;vntregtch.c: 478: Kvnt[1].dpwm=ReadEEVNT1_P();
  1300  00C314  EC06  F043         	call	_ReadEEVNT1_P	;wreg free
  1301  00C318  CFE8 F3C6          	movff	wreg,_Kvnt+3
  1302                           ;vntregtch.c: 479: Kvnt[2].dvnt=ReadEEVNT2_V();
  1303  00C31C  EC18  F043         	call	_ReadEEVNT2_V	;wreg free
  1304  00C320  CFE8 F3C7          	movff	wreg,_Kvnt+4
  1305                           ;vntregtch.c: 480: Kvnt[2].dpwm=ReadEEVNT2_P();
  1306  00C324  EC1A  F043         	call	_ReadEEVNT2_P	;wreg free
  1307  00C328  CFE8 F3C8          	movff	wreg,_Kvnt+5
  1308                           ;vntregtch.c: 481: Kvnt[3].dvnt=ReadEEVNT3_V();
  1309  00C32C  EC2C  F043         	call	_ReadEEVNT3_V	;wreg free
  1310  00C330  CFE8 F3C9          	movff	wreg,_Kvnt+6
  1311                           ;vntregtch.c: 482: Kvnt[3].dpwm=ReadEEVNT3_P();
  1312  00C334  EC2E  F043         	call	_ReadEEVNT3_P	;wreg free
  1313  00C338  CFE8 F3CA          	movff	wreg,_Kvnt+7
  1314                           ;vntregtch.c: 483: Kvnt[4].dvnt=ReadEEVNT4_V();
  1315  00C33C  EC40  F043         	call	_ReadEEVNT4_V	;wreg free
  1316  00C340  CFE8 F3CB          	movff	wreg,_Kvnt+8
  1317                           ;vntregtch.c: 484: Kvnt[4].dpwm=ReadEEVNT4_P();
  1318  00C344  EC42  F043         	call	_ReadEEVNT4_P	;wreg free
  1319  00C348  CFE8 F3CC          	movff	wreg,_Kvnt+9
  1320                           ;vntregtch.c: 485: Kvnt[5].dvnt=ReadEEVNT5_V();
  1321  00C34C  EC54  F043         	call	_ReadEEVNT5_V	;wreg free
  1322  00C350  CFE8 F3CD          	movff	wreg,_Kvnt+10
  1323                           ;vntregtch.c: 486: Kvnt[5].dpwm=ReadEEVNT5_P();
  1324  00C354  EC56  F043         	call	_ReadEEVNT5_P	;wreg free
  1325  00C358  CFE8 F3CE          	movff	wreg,_Kvnt+11
  1326                           ;vntregtch.c: 487: Kvnt[6].dvnt=ReadEEVNT6_V();
  1327  00C35C  EC68  F043         	call	_ReadEEVNT6_V	;wreg free
  1328  00C360  CFE8 F3CF          	movff	wreg,_Kvnt+12
  1329                           ;vntregtch.c: 488: Kvnt[6].dpwm=ReadEEVNT6_P();
  1330  00C364  EC6A  F043         	call	_ReadEEVNT6_P	;wreg free
  1331  00C368  CFE8 F3D0          	movff	wreg,_Kvnt+13
  1332                           ;vntregtch.c: 489: Kvnt[7].dvnt=ReadEEVNT7_V();
  1333  00C36C  EC7C  F043         	call	_ReadEEVNT7_V	;wreg free
  1334  00C370  CFE8 F3D1          	movff	wreg,_Kvnt+14
  1335                           ;vntregtch.c: 490: Kvnt[7].dpwm=ReadEEVNT7_P();
  1336  00C374  EC7E  F043         	call	_ReadEEVNT7_P	;wreg free
  1337  00C378  CFE8 F3D2          	movff	wreg,_Kvnt+15
  1338                           ;vntregtch.c: 491: ModParam();
  1339  00C37C  EF65  F000         	goto	_ModParam	;wreg free
  1340                           ;vntregtch.c: 492: }
  1341  00C380                     __end_of_OdczytDanychKalibracji:
  1342                           ;vntregtch.c: 499: unsigned char DVNTtoPWM(unsig
      +                          ned char dvnt)
  1343                           ;vntregtch.c: 500: {
  1344  00C380                     _DVNTtoPWM:
  1345  000000                     
  1346                           ;vntregtch.c: 501: unsigned char i,v1,v2,p1,p2,d
      +                          v;
  1347  00C380  6A00               	clrf	btemp,c
  1348  00C382  6A01               	clrf	btemp+1,c
  1349  00C384  6A02               	clrf	btemp+2,c
  1350  00C386  6A03               	clrf	btemp+3,c
  1351                           ;vntregtch.c: 505: dv=dvnt;
  1352  00C388  0100               	movlb	__Lparam shr (0+8)
  1353  00C38A  6FB6               	movwf	(?a_DVNTtoPWM+3)^(__Lparam& (0+65280)),b
  1354                           ;vntregtch.c: 506: for(i=0;i<nkpkt;i++)
  1355  00C38C  6AD9               	clrf	fsr2l,c
  1356  00C38E  D0DA               	goto	l78
  1357  00C390                     l75:
  1358                           ;vntregtch.c: 507: {
  1359  00C390  50D9               	movf	fsr2l,w,c
  1360  00C392  0D02               	mullw	2
  1361  00C394  0EC3               	movlw	low _Kvnt
  1362  00C396  24F3               	addwf	prodl,w,c
  1363  00C398  6EE9               	movwf	fsr0l,c
  1364  00C39A  0E03               	movlw	high _Kvnt
  1365  00C39C  20F4               	addwfc	prodh,w,c
  1366  00C39E  6EEA               	movwf	fsr0h,c
  1367  00C3A0  50EF               	movf	indf0,w,c
  1368  00C3A2  0100               	movlb	__Lparam shr (0+8)
  1369  00C3A4  6FB5               	movwf	(?a_DVNTtoPWM+2)^(__Lparam& (0+65280)),b
  1370                           ;vntregtch.c: 509: p2=Kvnt[i].dpwm;
  1371  00C3A6  50D9               	movf	fsr2l,w,c
  1372  00C3A8  0D02               	mullw	2
  1373  00C3AA  0EC4               	movlw	low (_Kvnt+1)
  1374  00C3AC  24F3               	addwf	prodl,w,c
  1375  00C3AE  6EE9               	movwf	fsr0l,c
  1376  00C3B0  0E03               	movlw	high (_Kvnt+1)
  1377  00C3B2  20F4               	addwfc	prodh,w,c
  1378  00C3B4  6EEA               	movwf	fsr0h,c
  1379  00C3B6  50EF               	movf	indf0,w,c
  1380  00C3B8  6FB3               	movwf	?a_DVNTtoPWM^(__Lparam& (0+65280)),b
  1381                           ;vntregtch.c: 510: if(i!=0)
  1382  00C3BA  50D9               	movf	fsr2l,w,c
  1383  00C3BC  E015               	bz	l79
  1384                           ;vntregtch.c: 511: {
  1385  00C3BE  50D9               	movf	fsr2l,w,c
  1386  00C3C0  0D02               	mullw	2
  1387  00C3C2  0EC1               	movlw	low (_Kvnt+-2)
  1388  00C3C4  24F3               	addwf	prodl,w,c
  1389  00C3C6  6EE9               	movwf	fsr0l,c
  1390  00C3C8  0E03               	movlw	high (_Kvnt+-2)
  1391  00C3CA  20F4               	addwfc	prodh,w,c
  1392  00C3CC  6EEA               	movwf	fsr0h,c
  1393  00C3CE  50EF               	movf	indf0,w,c
  1394  00C3D0  6FB7               	movwf	(?a_DVNTtoPWM+4)^(__Lparam& (0+65280)),b
  1395                           ;vntregtch.c: 513: p1=Kvnt[i-1].dpwm;
  1396  00C3D2  50D9               	movf	fsr2l,w,c
  1397  00C3D4  0D02               	mullw	2
  1398  00C3D6  0EC2               	movlw	low (_Kvnt+-1)
  1399  00C3D8  24F3               	addwf	prodl,w,c
  1400  00C3DA  6EE9               	movwf	fsr0l,c
  1401  00C3DC  0E03               	movlw	high (_Kvnt+-1)
  1402  00C3DE  20F4               	addwfc	prodh,w,c
  1403  00C3E0  6EEA               	movwf	fsr0h,c
  1404  00C3E2  50EF               	movf	indf0,w,c
  1405  00C3E4  6FB4               	movwf	(?a_DVNTtoPWM+1)^(__Lparam& (0+65280)),b
  1406                           ;vntregtch.c: 514: }
  1407  00C3E6  D003               	goto	l80
  1408  00C3E8                     l79:
  1409                           ;vntregtch.c: 515: else
  1410  00C3E8  0100               	movlb	__Lparam shr (0+8)
  1411  00C3EA  6BB7               	clrf	(?a_DVNTtoPWM+4)^(__Lparam& (0+65280)),b
  1412                           ;vntregtch.c: 518: p1=0;
  1413  00C3EC  6BB4               	clrf	(?a_DVNTtoPWM+1)^(__Lparam& (0+65280)),b
  1414  00C3EE                     l80:
  1415                           ;vntregtch.c: 519: }
  1416  00C3EE  0100               	movlb	__Lparam shr (0+8)
  1417  00C3F0  51B5               	movf	(?a_DVNTtoPWM+2)^(__Lparam& (0+65280)),w
  1418  00C3F2  61B6               	cpfslt	(?a_DVNTtoPWM+3)^(__Lparam& (0+65280)),b
  1419  00C3F4  D004               	goto	u561
  1420  00C3F6  51B6               	movf	(?a_DVNTtoPWM+3)^(__Lparam& (0+65280)),w
  1421  00C3F8  61B7               	cpfslt	(?a_DVNTtoPWM+4)^(__Lparam& (0+65280)),b
  1422  00C3FA  D001               	goto	u561
  1423  00C3FC  D004               	goto	u580
  1424  00C3FE                     u561:
  1425  00C3FE  0100               	movlb	__Lparam shr (0+8)
  1426  00C400  51B6               	movf	(?a_DVNTtoPWM+3)^(__Lparam& (0+65280)),w
  1427  00C402  63B5               	cpfseq	(?a_DVNTtoPWM+2)^(__Lparam& (0+65280)),b
  1428  00C404  D09E               	goto	l81
  1429  00C406                     u580:
  1430                           ;vntregtch.c: 521: {
  1431  00C406  0EE8               	movlw	232
  1432  00C408  6E04               	movwf	btemp+4,c
  1433  00C40A  0E03               	movlw	3
  1434  00C40C  6E05               	movwf	btemp+5,c
  1435  00C40E  6A06               	clrf	btemp+6,c
  1436  00C410  6A07               	clrf	btemp+7,c
  1437  00C412  0100               	movlb	__Lparam shr (0+8)
  1438  00C414  51B4               	movf	(?a_DVNTtoPWM+1)^(__Lparam& (0+65280)),w
  1439  00C416  5DB3               	subwf	?a_DVNTtoPWM^(__Lparam& (0+65280)),w
  1440  00C418  6E00               	movwf	btemp,c
  1441  00C41A  6A01               	clrf	btemp+1,c
  1442  00C41C  A0D8               	btfss	status,0,c
  1443  00C41E  0601               	decf	btemp+1,f,c
  1444  00C420  6A02               	clrf	btemp+2,c
  1445  00C422  BE01               	btfsc	btemp+1,7,c
  1446  00C424  0602               	decf	btemp+2,f,c
  1447  00C426  5002               	movf	btemp+2,w,c
  1448  00C428  6E03               	movwf	btemp+3,c
  1449  00C42A  ECB2  F004         	call	almul
  1450  00C42E  C000  F0B8         	movff	btemp,?a_DVNTtoPWM+5
  1451  00C432  C001  F0B9         	movff	btemp+1,?a_DVNTtoPWM+6
  1452  00C436  C002  F0BA         	movff	btemp+2,?a_DVNTtoPWM+7
  1453  00C43A  C003  F0BB         	movff	btemp+3,?a_DVNTtoPWM+8
  1454                           ;vntregtch.c: 523: wsp/=(v2-v1);
  1455  00C43E  51B7               	movf	(?a_DVNTtoPWM+4)^(__Lparam& (0+65280)),w
  1456  00C440  5DB5               	subwf	(?a_DVNTtoPWM+2)^(__Lparam& (0+65280)),w
  1457  00C442  6E04               	movwf	btemp+4,c
  1458  00C444  6A05               	clrf	btemp+5,c
  1459  00C446  A0D8               	btfss	status,0,c
  1460  00C448  0605               	decf	btemp+5,f,c
  1461  00C44A  6A06               	clrf	btemp+6,c
  1462  00C44C  BE05               	btfsc	btemp+5,7,c
  1463  00C44E  0606               	decf	btemp+6,f,c
  1464  00C450  5006               	movf	btemp+6,w,c
  1465  00C452  6E07               	movwf	btemp+7,c
  1466  00C454  0EB8               	movlw	low (?a_DVNTtoPWM+5)
  1467  00C456  6EE9               	movwf	fsr0l,c
  1468  00C458  0E00               	movlw	high (?a_DVNTtoPWM+5)
  1469  00C45A  6EEA               	movwf	fsr0h,c
  1470  00C45C  EC64  F007         	call	aldiv_f
  1471                           ;vntregtch.c: 524: pw=(signed long int)(dv-v1)*w
      +                          sp;
  1472  00C460  C0B8  F004         	movff	?a_DVNTtoPWM+5,btemp+4
  1473  00C464  C0B9  F005         	movff	?a_DVNTtoPWM+6,btemp+5
  1474  00C468  C0BA  F006         	movff	?a_DVNTtoPWM+7,btemp+6
  1475  00C46C  C0BB  F007         	movff	?a_DVNTtoPWM+8,btemp+7
  1476  00C470  51B7               	movf	(?a_DVNTtoPWM+4)^(__Lparam& (0+65280)),w
  1477  00C472  5DB6               	subwf	(?a_DVNTtoPWM+3)^(__Lparam& (0+65280)),w
  1478  00C474  6E00               	movwf	btemp,c
  1479  00C476  6A01               	clrf	btemp+1,c
  1480  00C478  A0D8               	btfss	status,0,c
  1481  00C47A  0601               	decf	btemp+1,f,c
  1482  00C47C  6A02               	clrf	btemp+2,c
  1483  00C47E  BE01               	btfsc	btemp+1,7,c
  1484  00C480  0602               	decf	btemp+2,f,c
  1485  00C482  5002               	movf	btemp+2,w,c
  1486  00C484  6E03               	movwf	btemp+3,c
  1487  00C486  ECB2  F004         	call	almul
  1488  00C48A  C000  F0BC         	movff	btemp,?a_DVNTtoPWM+9
  1489  00C48E  C001  F0BD         	movff	btemp+1,?a_DVNTtoPWM+10
  1490  00C492  C002  F0BE         	movff	btemp+2,?a_DVNTtoPWM+11
  1491  00C496  C003  F0BF         	movff	btemp+3,?a_DVNTtoPWM+12
  1492                           ;vntregtch.c: 525: pw/=1000;
  1493  00C49A  0EE8               	movlw	232
  1494  00C49C  6E04               	movwf	btemp+4,c
  1495  00C49E  0E03               	movlw	3
  1496  00C4A0  6E05               	movwf	btemp+5,c
  1497  00C4A2  6A06               	clrf	btemp+6,c
  1498  00C4A4  6A07               	clrf	btemp+7,c
  1499  00C4A6  0EBC               	movlw	low (?a_DVNTtoPWM+9)
  1500  00C4A8  6EE9               	movwf	fsr0l,c
  1501  00C4AA  0E00               	movlw	high (?a_DVNTtoPWM+9)
  1502  00C4AC  6EEA               	movwf	fsr0h,c
  1503  00C4AE  EC64  F007         	call	aldiv_f
  1504                           ;vntregtch.c: 527: pw+=p1;
  1505  00C4B2  51B4               	movf	(?a_DVNTtoPWM+1)^(__Lparam& (0+65280)),w
  1506  00C4B4  27BC               	addwf	(?a_DVNTtoPWM+9)^(__Lparam& (0+65280)),f,
      +                          b
  1507  00C4B6  0E01               	movlw	1
  1508  00C4B8  B0D8               	btfsc	status,0,c
  1509  00C4BA  27BD               	addwf	(?a_DVNTtoPWM+10)^(__Lparam& (0+65280)),f
      +                          ,b
  1510  00C4BC  B0D8               	btfsc	status,0,c
  1511  00C4BE  27BE               	addwf	(?a_DVNTtoPWM+11)^(__Lparam& (0+65280)),f
      +                          ,b
  1512  00C4C0  B0D8               	btfsc	status,0,c
  1513  00C4C2  27BF               	addwf	(?a_DVNTtoPWM+12)^(__Lparam& (0+65280)),f
      +                          ,b
  1514                           ;vntregtch.c: 528: if(pw<0) pw=0;
  1515  00C4C4  AFBF               	btfss	(?a_DVNTtoPWM+12)^(__Lparam& (0+65280)),7
      +                          ,b
  1516  00C4C6  D004               	goto	l82
  1517  00C4C8  6BBC               	clrf	(?a_DVNTtoPWM+9)^(__Lparam& (0+65280)),b
  1518  00C4CA  6BBD               	clrf	(?a_DVNTtoPWM+10)^(__Lparam& (0+65280)),b
  1519  00C4CC  6BBE               	clrf	(?a_DVNTtoPWM+11)^(__Lparam& (0+65280)),b
  1520  00C4CE  6BBF               	clrf	(?a_DVNTtoPWM+12)^(__Lparam& (0+65280)),b
  1521  00C4D0                     l82:
  1522                           ;vntregtch.c: 529: if(pw>PWM.HIPWM) pw=PWM.HIPWM
      +                          ;
  1523  00C4D0  C2DF  F000         	movff	_PWM+6,btemp
  1524  00C4D4  6A01               	clrf	btemp+1,c
  1525  00C4D6  6A02               	clrf	btemp+2,c
  1526  00C4D8  6A03               	clrf	btemp+3,c
  1527  00C4DA  0100               	movlb	__Lparam shr (0+8)
  1528  00C4DC  5003               	movf	btemp+3,w,c
  1529  00C4DE  0A80               	xorlw	128
  1530  00C4E0  6E04               	movwf	btemp+4,c
  1531  00C4E2  51BF               	movf	(?a_DVNTtoPWM+12)^(__Lparam& (0+65280)),w
  1532  00C4E4  0A80               	xorlw	128
  1533  00C4E6  5C04               	subwf	btemp+4,w,c
  1534  00C4E8  E108               	bnz	u605
  1535  00C4EA  51BE               	movf	(?a_DVNTtoPWM+11)^(__Lparam& (0+65280)),w
  1536  00C4EC  5C02               	subwf	btemp+2,w,c
  1537  00C4EE  E105               	bnz	u605
  1538  00C4F0  51BD               	movf	(?a_DVNTtoPWM+10)^(__Lparam& (0+65280)),w
  1539  00C4F2  5C01               	subwf	btemp+1,w,c
  1540  00C4F4  E102               	bnz	u605
  1541  00C4F6  51BC               	movf	(?a_DVNTtoPWM+9)^(__Lparam& (0+65280)),w
  1542  00C4F8  5C00               	subwf	btemp,w,c
  1543  00C4FA                     u605:
  1544  00C4FA  E205               	bc	l83
  1545  00C4FC  C2DF  F0BC         	movff	_PWM+6,?a_DVNTtoPWM+9
  1546  00C500  6BBD               	clrf	(?a_DVNTtoPWM+10)^(__Lparam& (0+65280)),b
  1547  00C502  6BBE               	clrf	(?a_DVNTtoPWM+11)^(__Lparam& (0+65280)),b
  1548  00C504  6BBF               	clrf	(?a_DVNTtoPWM+12)^(__Lparam& (0+65280)),b
  1549  00C506                     l83:
  1550                           ;vntregtch.c: 530: if(pw<PWM.VLO_PWM) pw=PWM.VLO
      +                          _PWM;
  1551  00C506  C2E0  F000         	movff	_PWM+7,btemp
  1552  00C50A  6A01               	clrf	btemp+1,c
  1553  00C50C  6A02               	clrf	btemp+2,c
  1554  00C50E  6A03               	clrf	btemp+3,c
  1555  00C510  0100               	movlb	__Lparam shr (0+8)
  1556  00C512  51BF               	movf	(?a_DVNTtoPWM+12)^(__Lparam& (0+65280)),w
  1557  00C514  0A80               	xorlw	128
  1558  00C516  6E04               	movwf	btemp+4,c
  1559  00C518  5003               	movf	btemp+3,w,c
  1560  00C51A  0A80               	xorlw	128
  1561  00C51C  5C04               	subwf	btemp+4,w,c
  1562  00C51E  E108               	bnz	u615
  1563  00C520  5002               	movf	btemp+2,w,c
  1564  00C522  5DBE               	subwf	(?a_DVNTtoPWM+11)^(__Lparam& (0+65280)),w
  1565  00C524  E105               	bnz	u615
  1566  00C526  5001               	movf	btemp+1,w,c
  1567  00C528  5DBD               	subwf	(?a_DVNTtoPWM+10)^(__Lparam& (0+65280)),w
  1568  00C52A  E102               	bnz	u615
  1569  00C52C  5000               	movf	btemp,w,c
  1570  00C52E  5DBC               	subwf	(?a_DVNTtoPWM+9)^(__Lparam& (0+65280)),w
  1571  00C530                     u615:
  1572  00C530  E205               	bc	l84
  1573  00C532  C2E0  F0BC         	movff	_PWM+7,?a_DVNTtoPWM+9
  1574  00C536  6BBD               	clrf	(?a_DVNTtoPWM+10)^(__Lparam& (0+65280)),b
  1575  00C538  6BBE               	clrf	(?a_DVNTtoPWM+11)^(__Lparam& (0+65280)),b
  1576  00C53A  6BBF               	clrf	(?a_DVNTtoPWM+12)^(__Lparam& (0+65280)),b
  1577  00C53C                     l84:
  1578                           ;vntregtch.c: 531: return (unsigned char) pw;
  1579  00C53C  0100               	movlb	__Lparam shr (0+8)
  1580  00C53E  51BC               	movf	(?a_DVNTtoPWM+9)^(__Lparam& (0+65280)),w
  1581  00C540  0012               	return	
  1582  00C542                     l81:
  1583  00C542  2AD9               	incf	fsr2l,f,c
  1584  00C544                     l78:
  1585  00C544  0E07               	movlw	7
  1586  00C546  64D9               	cpfsgt	fsr2l,c
  1587  00C548  D723               	goto	l75
  1588                           ;vntregtch.c: 532: }
  1589  00C54A  0100               	movlb	__Lparam shr (0+8)
  1590  00C54C  51B3               	movf	?a_DVNTtoPWM^(__Lparam& (0+65280)),w
  1591  00C54E  0012               	return	
  1592                           ;vntregtch.c: 535: }
  1593  00C550                     __end_of_DVNTtoPWM:
  1594                           ;vntregtch.c: 543: unsigned char DVNTtoPopPWM(un
      +                          signed char dvnt,const unsigned char pop)
  1595                           ;vntregtch.c: 544: {
  1596  00C550  00B4               	dw	?_DVNTtoPopPWM
  1597  00C552                     _DVNTtoPopPWM:
  1598  000000                     
  1599                           ;vntregtch.c: 545: unsigned char i,v1,v2,p1,p2,d
      +                          v;
  1600  00C552  6A00               	clrf	btemp,c
  1601  00C554  6A01               	clrf	btemp+1,c
  1602  00C556  6A02               	clrf	btemp+2,c
  1603  00C558  6A03               	clrf	btemp+3,c
  1604                           ;vntregtch.c: 549: dv=dvnt;
  1605  00C55A  0100               	movlb	__Lparam shr (0+8)
  1606  00C55C  6FB8               	movwf	(?a_DVNTtoPopPWM+3)^(__Lparam& (0+65280))
      +                          ,b
  1607                           ;vntregtch.c: 550: for(i=0;i<nkpkt;i++)
  1608  00C55E  6AD9               	clrf	fsr2l,c
  1609  00C560  D109               	goto	l89
  1610  00C562                     l86:
  1611                           ;vntregtch.c: 551: {
  1612  00C562  50D9               	movf	fsr2l,w,c
  1613  00C564  0D02               	mullw	2
  1614  00C566  0EC3               	movlw	low _Kvnt
  1615  00C568  24F3               	addwf	prodl,w,c
  1616  00C56A  6EE9               	movwf	fsr0l,c
  1617  00C56C  0E03               	movlw	high _Kvnt
  1618  00C56E  20F4               	addwfc	prodh,w,c
  1619  00C570  6EEA               	movwf	fsr0h,c
  1620  00C572  50EF               	movf	indf0,w,c
  1621  00C574  0100               	movlb	__Lparam shr (0+8)
  1622  00C576  6FB7               	movwf	(?a_DVNTtoPopPWM+2)^(__Lparam& (0+65280))
      +                          ,b
  1623                           ;vntregtch.c: 553: p2=Kvnt[i].dpwm;
  1624  00C578  50D9               	movf	fsr2l,w,c
  1625  00C57A  0D02               	mullw	2
  1626  00C57C  0EC4               	movlw	low (_Kvnt+1)
  1627  00C57E  24F3               	addwf	prodl,w,c
  1628  00C580  6EE9               	movwf	fsr0l,c
  1629  00C582  0E03               	movlw	high (_Kvnt+1)
  1630  00C584  20F4               	addwfc	prodh,w,c
  1631  00C586  6EEA               	movwf	fsr0h,c
  1632  00C588  50EF               	movf	indf0,w,c
  1633  00C58A  6FB5               	movwf	?a_DVNTtoPopPWM^(__Lparam& (0+65280)),b
  1634                           ;vntregtch.c: 554: if(i!=0)
  1635  00C58C  50D9               	movf	fsr2l,w,c
  1636  00C58E  E015               	bz	l90
  1637                           ;vntregtch.c: 555: {
  1638  00C590  50D9               	movf	fsr2l,w,c
  1639  00C592  0D02               	mullw	2
  1640  00C594  0EC1               	movlw	low (_Kvnt+-2)
  1641  00C596  24F3               	addwf	prodl,w,c
  1642  00C598  6EE9               	movwf	fsr0l,c
  1643  00C59A  0E03               	movlw	high (_Kvnt+-2)
  1644  00C59C  20F4               	addwfc	prodh,w,c
  1645  00C59E  6EEA               	movwf	fsr0h,c
  1646  00C5A0  50EF               	movf	indf0,w,c
  1647  00C5A2  6FB9               	movwf	(?a_DVNTtoPopPWM+4)^(__Lparam& (0+65280))
      +                          ,b
  1648                           ;vntregtch.c: 557: p1=Kvnt[i-1].dpwm;
  1649  00C5A4  50D9               	movf	fsr2l,w,c
  1650  00C5A6  0D02               	mullw	2
  1651  00C5A8  0EC2               	movlw	low (_Kvnt+-1)
  1652  00C5AA  24F3               	addwf	prodl,w,c
  1653  00C5AC  6EE9               	movwf	fsr0l,c
  1654  00C5AE  0E03               	movlw	high (_Kvnt+-1)
  1655  00C5B0  20F4               	addwfc	prodh,w,c
  1656  00C5B2  6EEA               	movwf	fsr0h,c
  1657  00C5B4  50EF               	movf	indf0,w,c
  1658  00C5B6  6FB6               	movwf	(?a_DVNTtoPopPWM+1)^(__Lparam& (0+65280))
      +                          ,b
  1659                           ;vntregtch.c: 558: }
  1660  00C5B8  D003               	goto	l91
  1661  00C5BA                     l90:
  1662                           ;vntregtch.c: 559: else
  1663  00C5BA  0100               	movlb	__Lparam shr (0+8)
  1664  00C5BC  6BB9               	clrf	(?a_DVNTtoPopPWM+4)^(__Lparam& (0+65280)),
      +                          b
  1665                           ;vntregtch.c: 562: p1=0;
  1666  00C5BE  6BB6               	clrf	(?a_DVNTtoPopPWM+1)^(__Lparam& (0+65280)),
      +                          b
  1667  00C5C0                     l91:
  1668                           ;vntregtch.c: 563: }
  1669  00C5C0  0100               	movlb	__Lparam shr (0+8)
  1670  00C5C2  51B7               	movf	(?a_DVNTtoPopPWM+2)^(__Lparam& (0+65280)),
      +                          w
  1671  00C5C4  61B8               	cpfslt	(?a_DVNTtoPopPWM+3)^(__Lparam& (0+65280)
      +                          ),b
  1672  00C5C6  D004               	goto	u661
  1673  00C5C8  51B8               	movf	(?a_DVNTtoPopPWM+3)^(__Lparam& (0+65280)),
      +                          w
  1674  00C5CA  61B9               	cpfslt	(?a_DVNTtoPopPWM+4)^(__Lparam& (0+65280)
      +                          ),b
  1675  00C5CC  D001               	goto	u661
  1676  00C5CE  D004               	goto	u680
  1677  00C5D0                     u661:
  1678  00C5D0  0100               	movlb	__Lparam shr (0+8)
  1679  00C5D2  51B8               	movf	(?a_DVNTtoPopPWM+3)^(__Lparam& (0+65280)),
      +                          w
  1680  00C5D4  63B7               	cpfseq	(?a_DVNTtoPopPWM+2)^(__Lparam& (0+65280)
      +                          ),b
  1681  00C5D6  D0CD               	goto	l92
  1682  00C5D8                     u680:
  1683                           ;vntregtch.c: 565: {
  1684  00C5D8  0EE8               	movlw	232
  1685  00C5DA  6E04               	movwf	btemp+4,c
  1686  00C5DC  0E03               	movlw	3
  1687  00C5DE  6E05               	movwf	btemp+5,c
  1688  00C5E0  6A06               	clrf	btemp+6,c
  1689  00C5E2  6A07               	clrf	btemp+7,c
  1690  00C5E4  0100               	movlb	__Lparam shr (0+8)
  1691  00C5E6  51B6               	movf	(?a_DVNTtoPopPWM+1)^(__Lparam& (0+65280)),
      +                          w
  1692  00C5E8  5DB5               	subwf	?a_DVNTtoPopPWM^(__Lparam& (0+65280)),w
  1693  00C5EA  6E00               	movwf	btemp,c
  1694  00C5EC  6A01               	clrf	btemp+1,c
  1695  00C5EE  A0D8               	btfss	status,0,c
  1696  00C5F0  0601               	decf	btemp+1,f,c
  1697  00C5F2  6A02               	clrf	btemp+2,c
  1698  00C5F4  BE01               	btfsc	btemp+1,7,c
  1699  00C5F6  0602               	decf	btemp+2,f,c
  1700  00C5F8  5002               	movf	btemp+2,w,c
  1701  00C5FA  6E03               	movwf	btemp+3,c
  1702  00C5FC  ECB2  F004         	call	almul
  1703  00C600  C000  F0BA         	movff	btemp,?a_DVNTtoPopPWM+5
  1704  00C604  C001  F0BB         	movff	btemp+1,?a_DVNTtoPopPWM+6
  1705  00C608  C002  F0BC         	movff	btemp+2,?a_DVNTtoPopPWM+7
  1706  00C60C  C003  F0BD         	movff	btemp+3,?a_DVNTtoPopPWM+8
  1707                           ;vntregtch.c: 567: wsp/=(v2-v1);
  1708  00C610  51B9               	movf	(?a_DVNTtoPopPWM+4)^(__Lparam& (0+65280)),
      +                          w
  1709  00C612  5DB7               	subwf	(?a_DVNTtoPopPWM+2)^(__Lparam& (0+65280))
      +                          ,w
  1710  00C614  6E04               	movwf	btemp+4,c
  1711  00C616  6A05               	clrf	btemp+5,c
  1712  00C618  A0D8               	btfss	status,0,c
  1713  00C61A  0605               	decf	btemp+5,f,c
  1714  00C61C  6A06               	clrf	btemp+6,c
  1715  00C61E  BE05               	btfsc	btemp+5,7,c
  1716  00C620  0606               	decf	btemp+6,f,c
  1717  00C622  5006               	movf	btemp+6,w,c
  1718  00C624  6E07               	movwf	btemp+7,c
  1719  00C626  0EBA               	movlw	low (?a_DVNTtoPopPWM+5)
  1720  00C628  6EE9               	movwf	fsr0l,c
  1721  00C62A  0E00               	movlw	high (?a_DVNTtoPopPWM+5)
  1722  00C62C  6EEA               	movwf	fsr0h,c
  1723  00C62E  EC64  F007         	call	aldiv_f
  1724                           ;vntregtch.c: 568: pw=(signed long int)(dv-v1)*w
      +                          sp;
  1725  00C632  C0BA  F004         	movff	?a_DVNTtoPopPWM+5,btemp+4
  1726  00C636  C0BB  F005         	movff	?a_DVNTtoPopPWM+6,btemp+5
  1727  00C63A  C0BC  F006         	movff	?a_DVNTtoPopPWM+7,btemp+6
  1728  00C63E  C0BD  F007         	movff	?a_DVNTtoPopPWM+8,btemp+7
  1729  00C642  51B9               	movf	(?a_DVNTtoPopPWM+4)^(__Lparam& (0+65280)),
      +                          w
  1730  00C644  5DB8               	subwf	(?a_DVNTtoPopPWM+3)^(__Lparam& (0+65280))
      +                          ,w
  1731  00C646  6E00               	movwf	btemp,c
  1732  00C648  6A01               	clrf	btemp+1,c
  1733  00C64A  A0D8               	btfss	status,0,c
  1734  00C64C  0601               	decf	btemp+1,f,c
  1735  00C64E  6A02               	clrf	btemp+2,c
  1736  00C650  BE01               	btfsc	btemp+1,7,c
  1737  00C652  0602               	decf	btemp+2,f,c
  1738  00C654  5002               	movf	btemp+2,w,c
  1739  00C656  6E03               	movwf	btemp+3,c
  1740  00C658  ECB2  F004         	call	almul
  1741  00C65C  C000  F0BE         	movff	btemp,?a_DVNTtoPopPWM+9
  1742  00C660  C001  F0BF         	movff	btemp+1,?a_DVNTtoPopPWM+10
  1743  00C664  C002  F0C0         	movff	btemp+2,?a_DVNTtoPopPWM+11
  1744  00C668  C003  F0C1         	movff	btemp+3,?a_DVNTtoPopPWM+12
  1745                           ;vntregtch.c: 569: pw/=1000;
  1746  00C66C  0EE8               	movlw	232
  1747  00C66E  6E04               	movwf	btemp+4,c
  1748  00C670  0E03               	movlw	3
  1749  00C672  6E05               	movwf	btemp+5,c
  1750  00C674  6A06               	clrf	btemp+6,c
  1751  00C676  6A07               	clrf	btemp+7,c
  1752  00C678  0EBE               	movlw	low (?a_DVNTtoPopPWM+9)
  1753  00C67A  6EE9               	movwf	fsr0l,c
  1754  00C67C  0E00               	movlw	high (?a_DVNTtoPopPWM+9)
  1755  00C67E  6EEA               	movwf	fsr0h,c
  1756  00C680  EC64  F007         	call	aldiv_f
  1757                           ;vntregtch.c: 571: pw+=p1;
  1758  00C684  51B6               	movf	(?a_DVNTtoPopPWM+1)^(__Lparam& (0+65280)),
      +                          w
  1759  00C686  27BE               	addwf	(?a_DVNTtoPopPWM+9)^(__Lparam& (0+65280))
      +                          ,f,b
  1760  00C688  0E01               	movlw	1
  1761  00C68A  B0D8               	btfsc	status,0,c
  1762  00C68C  27BF               	addwf	(?a_DVNTtoPopPWM+10)^(__Lparam& (0+65280)
      +                          ),f,b
  1763  00C68E  B0D8               	btfsc	status,0,c
  1764  00C690  27C0               	addwf	(?a_DVNTtoPopPWM+11)^(__Lparam& (0+65280)
      +                          ),f,b
  1765  00C692  B0D8               	btfsc	status,0,c
  1766  00C694  27C1               	addwf	(?a_DVNTtoPopPWM+12)^(__Lparam& (0+65280)
      +                          ),f,b
  1767                           ;vntregtch.c: 572: if(pw<0) pw=0;
  1768  00C696  AFC1               	btfss	(?a_DVNTtoPopPWM+12)^(__Lparam& (0+65280)
      +                          ),7,b
  1769  00C698  D004               	goto	l93
  1770  00C69A  6BBE               	clrf	(?a_DVNTtoPopPWM+9)^(__Lparam& (0+65280)),
      +                          b
  1771  00C69C  6BBF               	clrf	(?a_DVNTtoPopPWM+10)^(__Lparam& (0+65280))
      +                          ,b
  1772  00C69E  6BC0               	clrf	(?a_DVNTtoPopPWM+11)^(__Lparam& (0+65280))
      +                          ,b
  1773  00C6A0  6BC1               	clrf	(?a_DVNTtoPopPWM+12)^(__Lparam& (0+65280))
      +                          ,b
  1774  00C6A2                     l93:
  1775                           ;vntregtch.c: 573: if(pw>PWM.HIPWM) pw=PWM.HIPWM
      +                          ;
  1776  00C6A2  C2DF  F000         	movff	_PWM+6,btemp
  1777  00C6A6  6A01               	clrf	btemp+1,c
  1778  00C6A8  6A02               	clrf	btemp+2,c
  1779  00C6AA  6A03               	clrf	btemp+3,c
  1780  00C6AC  0100               	movlb	__Lparam shr (0+8)
  1781  00C6AE  5003               	movf	btemp+3,w,c
  1782  00C6B0  0A80               	xorlw	128
  1783  00C6B2  6E04               	movwf	btemp+4,c
  1784  00C6B4  51C1               	movf	(?a_DVNTtoPopPWM+12)^(__Lparam& (0+65280))
      +                          ,w
  1785  00C6B6  0A80               	xorlw	128
  1786  00C6B8  5C04               	subwf	btemp+4,w,c
  1787  00C6BA  E108               	bnz	u705
  1788  00C6BC  51C0               	movf	(?a_DVNTtoPopPWM+11)^(__Lparam& (0+65280))
      +                          ,w
  1789  00C6BE  5C02               	subwf	btemp+2,w,c
  1790  00C6C0  E105               	bnz	u705
  1791  00C6C2  51BF               	movf	(?a_DVNTtoPopPWM+10)^(__Lparam& (0+65280))
      +                          ,w
  1792  00C6C4  5C01               	subwf	btemp+1,w,c
  1793  00C6C6  E102               	bnz	u705
  1794  00C6C8  51BE               	movf	(?a_DVNTtoPopPWM+9)^(__Lparam& (0+65280)),
      +                          w
  1795  00C6CA  5C00               	subwf	btemp,w,c
  1796  00C6CC                     u705:
  1797  00C6CC  E205               	bc	l94
  1798  00C6CE  C2DF  F0BE         	movff	_PWM+6,?a_DVNTtoPopPWM+9
  1799  00C6D2  6BBF               	clrf	(?a_DVNTtoPopPWM+10)^(__Lparam& (0+65280))
      +                          ,b
  1800  00C6D4  6BC0               	clrf	(?a_DVNTtoPopPWM+11)^(__Lparam& (0+65280))
      +                          ,b
  1801  00C6D6  6BC1               	clrf	(?a_DVNTtoPopPWM+12)^(__Lparam& (0+65280))
      +                          ,b
  1802  00C6D8                     l94:
  1803                           ;vntregtch.c: 574: if(pw<PWM.VLO_PWM) pw=PWM.VLO
      +                          _PWM;
  1804  00C6D8  C2E0  F000         	movff	_PWM+7,btemp
  1805  00C6DC  6A01               	clrf	btemp+1,c
  1806  00C6DE  6A02               	clrf	btemp+2,c
  1807  00C6E0  6A03               	clrf	btemp+3,c
  1808  00C6E2  0100               	movlb	__Lparam shr (0+8)
  1809  00C6E4  51C1               	movf	(?a_DVNTtoPopPWM+12)^(__Lparam& (0+65280))
      +                          ,w
  1810  00C6E6  0A80               	xorlw	128
  1811  00C6E8  6E04               	movwf	btemp+4,c
  1812  00C6EA  5003               	movf	btemp+3,w,c
  1813  00C6EC  0A80               	xorlw	128
  1814  00C6EE  5C04               	subwf	btemp+4,w,c
  1815  00C6F0  E108               	bnz	u715
  1816  00C6F2  5002               	movf	btemp+2,w,c
  1817  00C6F4  5DC0               	subwf	(?a_DVNTtoPopPWM+11)^(__Lparam& (0+65280)
      +                          ),w
  1818  00C6F6  E105               	bnz	u715
  1819  00C6F8  5001               	movf	btemp+1,w,c
  1820  00C6FA  5DBF               	subwf	(?a_DVNTtoPopPWM+10)^(__Lparam& (0+65280)
      +                          ),w
  1821  00C6FC  E102               	bnz	u715
  1822  00C6FE  5000               	movf	btemp,w,c
  1823  00C700  5DBE               	subwf	(?a_DVNTtoPopPWM+9)^(__Lparam& (0+65280))
      +                          ,w
  1824  00C702                     u715:
  1825  00C702  E205               	bc	l95
  1826  00C704  C2E0  F0BE         	movff	_PWM+7,?a_DVNTtoPopPWM+9
  1827  00C708  6BBF               	clrf	(?a_DVNTtoPopPWM+10)^(__Lparam& (0+65280))
      +                          ,b
  1828  00C70A  6BC0               	clrf	(?a_DVNTtoPopPWM+11)^(__Lparam& (0+65280))
      +                          ,b
  1829  00C70C  6BC1               	clrf	(?a_DVNTtoPopPWM+12)^(__Lparam& (0+65280))
      +                          ,b
  1830  00C70E                     l95:
  1831                           ;vntregtch.c: 575: if(i>2||!pop)
  1832  00C70E  0E02               	movlw	2
  1833  00C710  64D9               	cpfsgt	fsr2l,c
  1834  00C712  D001               	goto	u721
  1835  00C714  D003               	goto	u740
  1836  00C716                     u721:
  1837  00C716  0100               	movlb	__Lparam shr (0+8)
  1838  00C718  51B4               	movf	?_DVNTtoPopPWM^(__Lparam& (0+65280)),w
  1839  00C71A  E103               	bnz	l96
  1840  00C71C                     u740:
  1841                           ;vntregtch.c: 576: {
  1842  00C71C  0100               	movlb	__Lparam shr (0+8)
  1843  00C71E  51BE               	movf	(?a_DVNTtoPopPWM+9)^(__Lparam& (0+65280)),
      +                          w
  1844  00C720  0012               	return	
  1845  00C722                     l96:
  1846                           ;vntregtch.c: 579: else
  1847  00C722  0100               	movlb	__Lparam shr (0+8)
  1848  00C724  51B4               	movf	?_DVNTtoPopPWM^(__Lparam& (0+65280)),w
  1849  00C726  25BE               	addwf	(?a_DVNTtoPopPWM+9)^(__Lparam& (0+65280))
      +                          ,w
  1850  00C728  6E00               	movwf	btemp,c
  1851  00C72A  0E00               	movlw	0
  1852  00C72C  21BF               	addwfc	(?a_DVNTtoPopPWM+10)^(__Lparam& (0+65280
      +                          )),w
  1853  00C72E  6E01               	movwf	btemp+1,c
  1854  00C730  0E00               	movlw	0
  1855  00C732  21C0               	addwfc	(?a_DVNTtoPopPWM+11)^(__Lparam& (0+65280
      +                          )),w
  1856  00C734  6E02               	movwf	btemp+2,c
  1857  00C736  0E00               	movlw	0
  1858  00C738  21C1               	addwfc	(?a_DVNTtoPopPWM+12)^(__Lparam& (0+65280
      +                          )),w
  1859  00C73A  6E03               	movwf	btemp+3,c
  1860  00C73C  C2DF  F004         	movff	_PWM+6,btemp+4
  1861  00C740  6A05               	clrf	btemp+5,c
  1862  00C742  6A06               	clrf	btemp+6,c
  1863  00C744  6A07               	clrf	btemp+7,c
  1864  00C746  5007               	movf	btemp+7,w,c
  1865  00C748  0A80               	xorlw	128
  1866  00C74A  6E08               	movwf	btemp+8,c
  1867  00C74C  5003               	movf	btemp+3,w,c
  1868  00C74E  0A80               	xorlw	128
  1869  00C750  5C08               	subwf	btemp+8,w,c
  1870  00C752  E108               	bnz	u755
  1871  00C754  5002               	movf	btemp+2,w,c
  1872  00C756  5C06               	subwf	btemp+6,w,c
  1873  00C758  E105               	bnz	u755
  1874  00C75A  5001               	movf	btemp+1,w,c
  1875  00C75C  5C05               	subwf	btemp+5,w,c
  1876  00C75E  E102               	bnz	u755
  1877  00C760  5000               	movf	btemp,w,c
  1878  00C762  5C04               	subwf	btemp+4,w,c
  1879  00C764                     u755:
  1880  00C764  E303               	bnc	l98
  1881                           ;vntregtch.c: 582: {
  1882  00C766  51B4               	movf	?_DVNTtoPopPWM^(__Lparam& (0+65280)),w
  1883  00C768  25BE               	addwf	(?a_DVNTtoPopPWM+9)^(__Lparam& (0+65280))
      +                          ,w
  1884  00C76A  0012               	return	
  1885  00C76C                     l98:
  1886                           ;vntregtch.c: 585: else
  1887  00C76C  C2DF  FFE8         	movff	_PWM+6,wreg
  1888  00C770  0012               	return	
  1889  00C772                     l92:
  1890  00C772  2AD9               	incf	fsr2l,f,c
  1891  00C774                     l89:
  1892  00C774  0E07               	movlw	7
  1893  00C776  64D9               	cpfsgt	fsr2l,c
  1894  00C778  D6F4               	goto	l86
  1895                           ;vntregtch.c: 588: }
  1896  00C77A  0100               	movlb	__Lparam shr (0+8)
  1897  00C77C  51B5               	movf	?a_DVNTtoPopPWM^(__Lparam& (0+65280)),w
  1898  00C77E  0012               	return	
  1899                           ;vntregtch.c: 593: }
  1900  00C780                     __end_of_DVNTtoPopPWM:
  1901                           ;vntregtch.c: 598: unsigned char CalkVNTtoPWM(un
      +                          signed char nst)
  1902                           ;vntregtch.c: 599: {
  1903  00C780                     _CalkVNTtoPWM:
  1904  000000                     
  1905                           ;_nst stored from wreg
  1906  00C780  0100               	movlb	__Lparam shr (0+8)
  1907  00C782  6FB2               	movwf	?a_CalkVNTtoPWM^(__Lparam& (0+65280)),b
  1908                           ;vntregtch.c: 600: unsigned char p;
  1909  00C784  51B2               	movf	?a_CalkVNTtoPWM^(__Lparam& (0+65280)),w
  1910  00C786  DDFC               	call	_DVNTtoPWM
  1911  00C788  6EE1               	movwf	fsr1l,c
  1912                           ;vntregtch.c: 602: return p;
  1913  00C78A  50E1               	movf	fsr1l,w,c
  1914  00C78C  0012               	return	
  1915                           ;vntregtch.c: 603: }
  1916  00C78E                     __end_of_CalkVNTtoPWM:
  1917                           ;vntregtch.c: 609: unsigned char CalkVNTtoPopPWM
      +                          (unsigned char nst,unsigned char pop)
  1918                           ;vntregtch.c: 610: {
  1919  00C78E  00B2               	dw	?_CalkVNTtoPopPWM
  1920  00C790                     _CalkVNTtoPopPWM:
  1921  000000                     
  1922                           ;_nst stored from wreg
  1923  00C790  0100               	movlb	__Lparam shr (0+8)
  1924  00C792  6FB3               	movwf	?a_CalkVNTtoPopPWM^(__Lparam& (0+65280)),
      +                          b
  1925                           ;vntregtch.c: 611: unsigned char p;
  1926  00C794  51B2               	movf	?_CalkVNTtoPopPWM^(__Lparam& (0+65280)),w
  1927  00C796  6FB4               	movwf	?_DVNTtoPopPWM^(__Lparam& (0+65280)),b
  1928  00C798  51B3               	movf	?a_CalkVNTtoPopPWM^(__Lparam& (0+65280)),w
  1929  00C79A  DEDB               	call	_DVNTtoPopPWM
  1930  00C79C  6EE1               	movwf	fsr1l,c
  1931                           ;vntregtch.c: 613: return p;
  1932  00C79E  50E1               	movf	fsr1l,w,c
  1933  00C7A0  0012               	return	
  1934                           ;vntregtch.c: 614: }
  1935  00C7A2                     __end_of_CalkVNTtoPopPWM:
  1936                           ;vntregtch.c: 618: unsigned char ProcToVNT(unsig
      +                          ned char wrt)
  1937                           ;vntregtch.c: 619: {
  1938  00C7A2                     _ProcToVNT:
  1939  000000                     
  1940                           ; _wrt loaded to fsr2l
  1941  00C7A2  6ED9               	movwf	fsr2l,c
  1942                           ;vntregtch.c: 620: unsigned long tmp;
  1943  00C7A4  0E63               	movlw	99
  1944  00C7A6  64D9               	cpfsgt	fsr2l,c
  1945  00C7A8  D001               	goto	l103
  1946  00C7AA  6ED9               	movwf	fsr2l,c
  1947  00C7AC                     l103:
  1948                           ;vntregtch.c: 622: wrt=wrt+1;
  1949  00C7AC  2AD9               	incf	fsr2l,f,c
  1950                           ;vntregtch.c: 623: tmp=((DtKNF.mmax-DtKNF.mmin)*
      +                          100)/100;
  1951  00C7AE  0E64               	movlw	100
  1952  00C7B0  6E02               	movwf	btemp+2,c
  1953  00C7B2  6A03               	clrf	btemp+3,c
  1954  00C7B4  C2C5  FFE8         	movff	_DtKNF+23,wreg
  1955  00C7B8  C2C6  F000         	movff	_DtKNF+24,btemp
  1956  00C7BC  6A01               	clrf	btemp+1,c
  1957  00C7BE  5E00               	subwf	btemp,f,c
  1958  00C7C0  0E00               	movlw	0
  1959  00C7C2  5A01               	subwfb	btemp+1,f,c
  1960  00C7C4  EC12  F007         	call	awmul
  1961  00C7C8  C004  F000         	movff	btemp+4,btemp
  1962  00C7CC  C005  F001         	movff	btemp+5,btemp+1
  1963  00C7D0  0E64               	movlw	100
  1964  00C7D2  6E02               	movwf	btemp+2,c
  1965  00C7D4  6A03               	clrf	btemp+3,c
  1966  00C7D6  ECA5  F006         	call	awdiv
  1967  00C7DA  0E00               	movlw	0
  1968  00C7DC  BE05               	btfsc	btemp+5,7,c
  1969  00C7DE  0EFF               	movlw	255
  1970  00C7E0  6E06               	movwf	btemp+6,c
  1971  00C7E2  6E07               	movwf	btemp+7,c
  1972  00C7E4  C004  F0AC         	movff	btemp+4,?a_ProcToVNT
  1973  00C7E8  C005  F0AD         	movff	btemp+5,?a_ProcToVNT+1
  1974  00C7EC  C006  F0AE         	movff	btemp+6,?a_ProcToVNT+2
  1975  00C7F0  C007  F0AF         	movff	btemp+7,?a_ProcToVNT+3
  1976                           ;vntregtch.c: 624: return (DtKNF.mmin+(unsigned 
      +                          char)((wrt*tmp)/100));
  1977  00C7F4  C2C5  F0B0         	movff	_DtKNF+23,?a_ProcToVNT+4
  1978  00C7F8  C0AC  F004         	movff	?a_ProcToVNT,btemp+4
  1979  00C7FC  C0AD  F005         	movff	?a_ProcToVNT+1,btemp+5
  1980  00C800  C0AE  F006         	movff	?a_ProcToVNT+2,btemp+6
  1981  00C804  C0AF  F007         	movff	?a_ProcToVNT+3,btemp+7
  1982  00C808  CFD9 F000          	movff	fsr2l,btemp
  1983  00C80C  6A01               	clrf	btemp+1,c
  1984  00C80E  6A02               	clrf	btemp+2,c
  1985  00C810  6A03               	clrf	btemp+3,c
  1986  00C812  ECB2  F004         	call	llmul
  1987  00C816  0E64               	movlw	100
  1988  00C818  6E04               	movwf	btemp+4,c
  1989  00C81A  6A05               	clrf	btemp+5,c
  1990  00C81C  6A06               	clrf	btemp+6,c
  1991  00C81E  6A07               	clrf	btemp+7,c
  1992  00C820  EC0B  F004         	call	lldiv
  1993  00C824  0100               	movlb	__Lparam shr (0+8)
  1994  00C826  51B0               	movf	(?a_ProcToVNT+4)^(__Lparam& (0+65280)),w
  1995  00C828  2400               	addwf	btemp,w,c
  1996  00C82A  0012               	return	
  1997                           ;vntregtch.c: 625: }
  1998  00C82C                     __end_of_ProcToVNT:
  1999                           ;vntregtch.c: 629: unsigned char VNTToProc(unsig
      +                          ned char wrt)
  2000                           ;vntregtch.c: 630: {
  2001  00C82C                     _VNTToProc:
  2002  000000                     
  2003                           ; _wrt loaded to fsr2l
  2004  00C82C  6ED9               	movwf	fsr2l,c
  2005                           ;vntregtch.c: 631: unsigned long tmp;
  2006  00C82E  C2C5  FFE8         	movff	_DtKNF+23,wreg
  2007  00C832  60D9               	cpfslt	fsr2l,c
  2008  00C834  D001               	goto	l105
  2009  00C836  0C00               	retlw	0
  2010  00C838                     l105:
  2011                           ;vntregtch.c: 633: if(wrt>DtKNF.mmax) return 99;
  2012  00C838  50D9               	movf	fsr2l,w,c
  2013  00C83A  0102               	movlb	(_DtKNF+24) shr (0+8)
  2014  00C83C  61C6               	cpfslt	(_DtKNF+24)& (0+255),b
  2015  00C83E  D001               	goto	l106
  2016  00C840  0C63               	retlw	99
  2017  00C842                     l106:
  2018                           ;vntregtch.c: 634: tmp=(wrt-DtKNF.mmin)*100;
  2019  00C842  0E64               	movlw	100
  2020  00C844  6E02               	movwf	btemp+2,c
  2021  00C846  6A03               	clrf	btemp+3,c
  2022  00C848  C2C5  FFE8         	movff	_DtKNF+23,wreg
  2023  00C84C  CFD9 F000          	movff	fsr2l,btemp
  2024  00C850  6A01               	clrf	btemp+1,c
  2025  00C852  5E00               	subwf	btemp,f,c
  2026  00C854  0E00               	movlw	0
  2027  00C856  5A01               	subwfb	btemp+1,f,c
  2028  00C858  EC12  F007         	call	awmul
  2029  00C85C  0E00               	movlw	0
  2030  00C85E  BE05               	btfsc	btemp+5,7,c
  2031  00C860  0EFF               	movlw	255
  2032  00C862  6E06               	movwf	btemp+6,c
  2033  00C864  6E07               	movwf	btemp+7,c
  2034  00C866  C004  F0AA         	movff	btemp+4,?a_VNTToProc
  2035  00C86A  C005  F0AB         	movff	btemp+5,?a_VNTToProc+1
  2036  00C86E  C006  F0AC         	movff	btemp+6,?a_VNTToProc+2
  2037  00C872  C007  F0AD         	movff	btemp+7,?a_VNTToProc+3
  2038                           ;vntregtch.c: 635: tmp/=(DtKNF.mmax-DtKNF.mmin);
  2039  00C876  C2C5  FFE8         	movff	_DtKNF+23,wreg
  2040  00C87A  C2C6  F000         	movff	_DtKNF+24,btemp
  2041  00C87E  5C00               	subwf	btemp,w,c
  2042  00C880  6E04               	movwf	btemp+4,c
  2043  00C882  6A05               	clrf	btemp+5,c
  2044  00C884  A0D8               	btfss	status,0,c
  2045  00C886  0605               	decf	btemp+5,f,c
  2046  00C888  6A06               	clrf	btemp+6,c
  2047  00C88A  BE05               	btfsc	btemp+5,7,c
  2048  00C88C  0606               	decf	btemp+6,f,c
  2049  00C88E  5006               	movf	btemp+6,w,c
  2050  00C890  6E07               	movwf	btemp+7,c
  2051  00C892  0EAA               	movlw	low ?a_VNTToProc
  2052  00C894  6EE9               	movwf	fsr0l,c
  2053  00C896  0E00               	movlw	high ?a_VNTToProc
  2054  00C898  6EEA               	movwf	fsr0h,c
  2055  00C89A  EC50  F007         	call	lldiv_f
  2056                           ;vntregtch.c: 636: if(tmp>=99) return 99;
  2057  00C89E  0100               	movlb	__Lparam shr (0+8)
  2058  00C8A0  0E00               	movlw	0
  2059  00C8A2  5DAD               	subwf	(?a_VNTToProc+3)^(__Lparam& (0+65280)),w
  2060  00C8A4  E108               	bnz	u805
  2061  00C8A6  0E00               	movlw	0
  2062  00C8A8  5DAC               	subwf	(?a_VNTToProc+2)^(__Lparam& (0+65280)),w
  2063  00C8AA  E105               	bnz	u805
  2064  00C8AC  0E00               	movlw	0
  2065  00C8AE  5DAB               	subwf	(?a_VNTToProc+1)^(__Lparam& (0+65280)),w
  2066  00C8B0  E102               	bnz	u805
  2067  00C8B2  0E63               	movlw	99
  2068  00C8B4  5DAA               	subwf	?a_VNTToProc^(__Lparam& (0+65280)),w
  2069  00C8B6                     u805:
  2070  00C8B6  E301               	bnc	l107
  2071  00C8B8  0C63               	retlw	99
  2072  00C8BA                     l107:
  2073                           ;vntregtch.c: 637: return (unsigned char)tmp;
  2074  00C8BA  0100               	movlb	__Lparam shr (0+8)
  2075  00C8BC  51AA               	movf	?a_VNTToProc^(__Lparam& (0+65280)),w
  2076  00C8BE  0012               	return	
  2077                           ;vntregtch.c: 638: }
  2078  00C8C0                     __end_of_VNTToProc:
  2079                           ;vntregtch.c: 643: unsigned char CalkTimStr(unsi
      +                          gned char vstr)
  2080                           ;vntregtch.c: 644: {
  2081  00C8C0                     _CalkTimStr:
  2082  000000                     
  2083                           ; _vstr loaded to fsr2l
  2084  00C8C0  6ED9               	movwf	fsr2l,c
  2085                           ;vntregtch.c: 645: unsigned char mint,maxt,minv,
      +                          maxv;
  2086  00C8C2  0E06               	movlw	6
  2087  00C8C4  6EE1               	movwf	fsr1l,c
  2088                           ;vntregtch.c: 648: maxt=10;
  2089  00C8C6  0E0A               	movlw	10
  2090  00C8C8  6EF3               	movwf	prodl,c
  2091                           ;vntregtch.c: 650: minv=28;
  2092  00C8CA  0E1C               	movlw	28
  2093  00C8CC  0100               	movlb	__Lparam shr (0+8)
  2094  00C8CE  6FA4               	movwf	?a_CalkTimStr^(__Lparam& (0+65280)),b
  2095                           ;vntregtch.c: 651: maxv=50;
  2096  00C8D0  0E32               	movlw	50
  2097  00C8D2  6EE9               	movwf	fsr0l,c
  2098                           ;vntregtch.c: 653: if(vstr<minv) vstr=minv;
  2099  00C8D4  0E1C               	movlw	28
  2100  00C8D6  60D9               	cpfslt	fsr2l,c
  2101  00C8D8  D001               	goto	l109
  2102  00C8DA  6ED9               	movwf	fsr2l,c
  2103  00C8DC                     l109:
  2104                           ;vntregtch.c: 654: if(vstr>maxv) vstr=maxv;
  2105  00C8DC  0E32               	movlw	50
  2106  00C8DE  6E00               	movwf	btemp,c
  2107  00C8E0  50D9               	movf	fsr2l,w,c
  2108  00C8E2  5C00               	subwf	btemp,w,c
  2109  00C8E4  E202               	bc	l110
  2110  00C8E6  0E32               	movlw	50
  2111  00C8E8  6ED9               	movwf	fsr2l,c
  2112  00C8EA                     l110:
  2113                           ;vntregtch.c: 656: w=(unsigned long int)((maxt-m
      +                          int)*(vstr-minv)*100);
  2114  00C8EA  0E64               	movlw	100
  2115  00C8EC  6E02               	movwf	btemp+2,c
  2116  00C8EE  6A03               	clrf	btemp+3,c
  2117  00C8F0  50D9               	movf	fsr2l,w,c
  2118  00C8F2  0D04               	mullw	4
  2119  00C8F4  0E90               	movlw	144
  2120  00C8F6  24F3               	addwf	prodl,w,c
  2121  00C8F8  6E00               	movwf	btemp,c
  2122  00C8FA  0EFF               	movlw	255
  2123  00C8FC  20F4               	addwfc	prodh,w,c
  2124  00C8FE  6E01               	movwf	btemp+1,c
  2125  00C900  EC12  F007         	call	awmul
  2126  00C904  0100               	movlb	__Lparam shr (0+8)
  2127  00C906  C004  F0A5         	movff	btemp+4,?a_CalkTimStr+1
  2128  00C90A  C005  F0A6         	movff	btemp+5,?a_CalkTimStr+2
  2129  00C90E  0E00               	movlw	0
  2130  00C910  BFA6               	btfsc	(?a_CalkTimStr+2)^(__Lparam& (0+65280)),7
      +                          ,b
  2131  00C912  0EFF               	movlw	-1
  2132  00C914  6FA7               	movwf	(?a_CalkTimStr+3)^(__Lparam& (0+65280)),b
  2133  00C916  6FA8               	movwf	(?a_CalkTimStr+4)^(__Lparam& (0+65280)),b
  2134                           ;vntregtch.c: 657: w/=(maxv-minv);
  2135  00C918  0E16               	movlw	22
  2136  00C91A  6E04               	movwf	btemp+4,c
  2137  00C91C  6A05               	clrf	btemp+5,c
  2138  00C91E  6A06               	clrf	btemp+6,c
  2139  00C920  6A07               	clrf	btemp+7,c
  2140  00C922  0EA5               	movlw	low (?a_CalkTimStr+1)
  2141  00C924  6EE9               	movwf	fsr0l,c
  2142  00C926  0E00               	movlw	high (?a_CalkTimStr+1)
  2143  00C928  6EEA               	movwf	fsr0h,c
  2144  00C92A  EC50  F007         	call	lldiv_f
  2145                           ;vntregtch.c: 658: w/=100;
  2146  00C92E  0E64               	movlw	100
  2147  00C930  6E04               	movwf	btemp+4,c
  2148  00C932  6A05               	clrf	btemp+5,c
  2149  00C934  6A06               	clrf	btemp+6,c
  2150  00C936  6A07               	clrf	btemp+7,c
  2151  00C938  0EA5               	movlw	low (?a_CalkTimStr+1)
  2152  00C93A  6EE9               	movwf	fsr0l,c
  2153  00C93C  0E00               	movlw	high (?a_CalkTimStr+1)
  2154  00C93E  6EEA               	movwf	fsr0h,c
  2155  00C940  EC50  F007         	call	lldiv_f
  2156                           ;vntregtch.c: 659: w+=mint;
  2157  00C944  0E06               	movlw	6
  2158  00C946  27A5               	addwf	(?a_CalkTimStr+1)^(__Lparam& (0+65280)),f
      +                          ,b
  2159  00C948  0E00               	movlw	0
  2160  00C94A  23A6               	addwfc	(?a_CalkTimStr+2)^(__Lparam& (0+65280)),
      +                          f,b
  2161  00C94C  23A7               	addwfc	(?a_CalkTimStr+3)^(__Lparam& (0+65280)),
      +                          f,b
  2162  00C94E  23A8               	addwfc	(?a_CalkTimStr+4)^(__Lparam& (0+65280)),
      +                          f,b
  2163                           ;vntregtch.c: 660: return (unsigned char) w;
  2164  00C950  51A5               	movf	(?a_CalkTimStr+1)^(__Lparam& (0+65280)),w
  2165  00C952  0012               	return	
  2166                           ;vntregtch.c: 661: }
  2167  00C954                     __end_of_CalkTimStr:
  2168  000000                     
  2169  000000                     
  2170  000000                     
  2171  000000                     
  2172  000000                     
  2173  000000                     
  2174  000000                     
  2175  000000                     
  2176  000000                     
  2177  000000                     
  2178  000000                     
  2179  000000                     
  2180  000000                     
  2181  000000                     
  2182  000000                     
  2183  000000                     
  2184  000000                     
  2185  000000                     
  2186  000000                     
  2187  000000                     
  2188  000000                     
  2189  000000                     
  2190  000000                     
  2191  000000                     
  2192  000000                     
  2193  000000                     
  2194  000000                     
  2195  000000                     
  2196  000000                     
  2197  000000                     
  2198  000000                     
  2199  000000                     
  2200  000000                     
  2201  000000                     
  2202  000000                     
  2203  000000                     
  2204  000000                     
  2205  000000                     
  2206  000000                     
  2207  000000                     
  2208  000000                     
  2209  000000                     
  2210  000000                     
  2211  000000                     
  2212  000000                     
  2213  000000                     
  2214  000000                     
  2215  000000                     
  2216  000000                     
  2217  000000                     
  2218  000000                     
  2219  000000                     
  2220  000000                     
  2221  000000                     
  2222  000000                     
  2223  000000                     
  2224  000000                     
  2225  000000                     
  2226  000000                     
  2227  000000                     
  2228  000000                     
  2229  000000                     
  2230  000000                     
  2231  000000                     
  2232  000000                     
  2233  000000                     
  2234  000000                     
  2235  000000                     
  2236  000000                     
  2237  000000                     
  2238  000000                     
  2239  000000                     
  2240  000000                     
  2241  000000                     
  2242  000000                     
  2243  000000                     
  2244  000000                     
  2245  000000                     
  2246  000000                     
  2247  000000                     
  2248  000000                     
  2249  000000                     
  2250  000000                     
  2251  000000                     
  2252  000000                     
  2253  000000                     
  2254  000000                     
  2255  000000                     
  2256  000000                     
  2257  000000                     
  2258  000000                     
  2259  000000                     
  2260  000000                     
  2261  000000                     
  2262  000000                     
  2263  000000                     
  2264  000000                     
  2265  000000                     
  2266  000000                     
  2267  000000                     
  2268  000000                     
  2269  000000                     
  2270  000000                     
  2271  000000                     
  2272  000000                     
  2273  000000                     
  2274  000000                     
  2275  000000                     
  2276  000000                     
  2277  000000                     
  2278  000000                     
  2279  000000                     
  2280  000000                     
  2281  000000                     
  2282  000000                     
  2283  000000                     
  2284  000000                     
  2285  000000                     
  2286  000000                     
  2287  000000                     
  2288  000000                     
  2289  000000                     
  2290  000000                     
  2291  000000                     
  2292  000000                     
  2293  000000                     
  2294  000000                     
  2295  000000                     
  2296  000000                     
  2297  000000                     
  2298  000000                     
  2299  000000                     
  2300  000000                     
  2301  000000                     
  2302  000000                     
  2303  000000                     
  2304  000000                     
  2305  000000                     
  2306  000000                     
  2307  000000                     
  2308  000000                     
  2309  000000                     
  2310  000000                     
  2311  000000                     
  2312  000000                     
  2313  000000                     
  2314  000000                     
  2315  000000                     
  2316  000000                     
  2317  000000                     
  2318  000000                     
  2319  000000                     
  2320  000000                     
  2321  000000                     
  2322  000000                     
  2323  000000                     
  2324  000000                     
  2325  000000                     
  2326  000000                     
  2327  000000                     
  2328  000000                     
  2329  000000                     
  2330  000000                     
  2331  000000                     
  2332  000000                     
  2333  000000                     
  2334  000000                     
  2335  000000                     
  2336  000000                     
  2337  000000                     
  2338  000000                     
  2339  000000                     
  2340  000000                     
  2341  000000                     
  2342  000000                     
  2343  000000                     
  2344  000000                     
  2345  000000                     
  2346  000000                     
  2347  000000                     
  2348  000000                     
  2349  000000                     
  2350  000000                     
  2351  000000                     
  2352  000000                     
  2353  000000                     
  2354  000000                     
  2355  000000                     
  2356  000000                     
  2357  000000                     
  2358  000000                     
  2359  000000                     
  2360  000000                     
  2361  000000                     
  2362  000000                     
  2363  000000                     
  2364  000000                     
  2365  000000                     
  2366  000000                     
  2367  000000                     
  2368  000000                     
  2369  000000                     
  2370  000000                     
  2371  000000                     
  2372  000000                     
  2373  000000                     
  2374  000000                     
  2375  000000                     
  2376  000000                     
  2377  000000                     
  2378  000000                     
  2379  000000                     
  2380  000000                     
  2381  000000                     
  2382  000000                     
  2383  000000                     
  2384  000000                     
  2385  000000                     
  2386  000000                     
  2387  000000                     
  2388  000000                     
  2389  000000                     
  2390  000000                     
  2391  000000                     
  2392  000000                     
  2393  000000                     
  2394  000000                     
  2395  000000                     
  2396  000000                     
  2397  000000                     
  2398  000000                     
  2399  000000                     
  2400  000000                     
  2401  000000                     
  2402  000000                     
  2403  000000                     
  2404  000000                     
  2405  000000                     
  2406  000000                     
  2407  000000                     
  2408  000000                     
  2409  000000                     
  2410  000000                     
  2411  000000                     
  2412  000000                     
  2413  000000                     
  2414  000000                     
  2415  000000                     
  2416  000000                     
  2417  000000                     
  2418  000000                     
  2419  000000                     
  2420  000000                     
  2421  000000                     
  2422  000000                     
  2423  000000                     
  2424  000000                     
  2425  000000                     
  2426  000000                     
  2427  000000                     
  2428  000000                     
  2429  000000                     
  2430  000000                     
  2431  000000                     
  2432  000000                     
  2433  000000                     
  2434  000000                     
  2435  000000                     
  2436  000000                     
  2437  000000                     
  2438  000000                     
  2439  000000                     
  2440  000000                     
  2441  000000                     
  2442  000000                     
  2443  000000                     
  2444  000000                     
  2445  000000                     
  2446  000000                     
  2447  000000                     
  2448  000000                     
  2449  000000                     
  2450  000000                     
  2451  000000                     
  2452  000000                     
  2453  000000                     
  2454  000000                     
  2455  000000                     
  2456  000000                     
  2457  000000                     
  2458  000000                     
  2459  000000                     
  2460  000000                     
  2461  000000                     
  2462  000000                     
  2463  000000                     
  2464  000000                     
  2465  000000                     
  2466  000000                     
  2467  000000                     
  2468  000000                     
  2469  000000                     
  2470  000000                     
  2471  000000                     
  2472  000000                     
  2473  000000                     
  2474  000000                     
  2475  000000                     
  2476  000000                     
  2477  000000                     
  2478  000000                     
  2479  000000                     
  2480  000000                     
  2481  000000                     
  2482  000000                     
  2483  000000                     
  2484  000000                     
  2485  000000                     
  2486  000000                     
  2487  000000                     
  2488  000000                     
  2489  000000                     
  2490  000000                     
  2491  000000                     
  2492  000000                     
  2493  000000                     
  2494  000000                     
  2495  000000                     
  2496  000000                     
  2497  000000                     
  2498  000000                     
  2499  000000                     
  2500  000000                     
  2501  000000                     
  2502  000000                     
  2503  000000                     
  2504  000000                     
  2505  000000                     
  2506  000000                     
  2507  000000                     
  2508  000000                     
  2509  000000                     
  2510  000000                     
  2511  000000                     
  2512  000000                     
  2513  000000                     
  2514  000000                     
  2515  000000                     
  2516  000000                     
  2517  000000                     
  2518  000000                     
  2519  000000                     
  2520  000000                     
  2521  000000                     
  2522  000000                     
  2523  000000                     
  2524  000000                     
  2525  000000                     
  2526  000000                     
  2527  000000                     
  2528  000000                     
  2529  000000                     
  2530  000000                     
  2531  000000                     
  2532  000000                     
  2533  000000                     
  2534  000000                     
  2535  000000                     
  2536  000000                     
  2537  000000                     
  2538  000000                     
  2539  000000                     
  2540  000000                     
  2541  000000                     
  2542  000000                     
  2543  000000                     
  2544  000000                     
  2545  000000                     
  2546  000000                     
  2547  000000                     
  2548  000000                     
  2549  000000                     
  2550  000000                     
  2551  000000                     
  2552  000000                     
  2553  000000                     
  2554  000000                     
  2555  000000                     
  2556  000000                     
  2557  000000                     
  2558  000000                     
  2559  000000                     
  2560  000000                     
  2561  000000                     
  2562  000000                     
  2563  000000                     
  2564  000000                     
  2565  000000                     
  2566  000000                     
  2567  000000                     
  2568  000000                     
  2569  000000                     
  2570  000000                     
  2571  000000                     
  2572  000000                     
  2573  000000                     
  2574  000000                     
  2575  000000                     
  2576  000000                     
  2577  000000                     
  2578  000000                     
  2579  000000                     
  2580  000000                     
  2581  000000                     
  2582  000000                     
  2583  000000                     
  2584  000000                     
  2585  000000                     
  2586  000000                     
  2587  000000                     
  2588  000000                     
  2589  000000                     
  2590  000000                     
  2591  000000                     
  2592  000000                     
  2593  000000                     
  2594  000000                     
  2595  000000                     
  2596  000000                     
  2597  000000                     
  2598  000000                     
  2599  000000                     
  2600  000000                     
  2601  000000                     
  2602  000000                     
  2603  000000                     
  2604                           
  2605                           	psect	bigbss
  2606  000F3C                     F1841:
  2607  000F3C                     	ds	1
  2608  000F3C                     F1842:
  2609  000F3C                     	ds	1
  2610  000000                     
  2611  000000                     
  2612  000000                     
  2613  000000                     
  2614  000000                     
  2615  000000                     
  2616  000000                     
  2617  000000                     
  2618  000000                     
  2619  000000                     
  2620  000000                     
  2621  000000                     
  2622  000000                     
  2623  000000                     
  2624  000000                     
  2625  000000                     
  2626  000000                     
  2627  000000                     
  2628  000000                     
  2629  000000                     
  2630  000000                     
  2631  000000                     
  2632  000000                     
  2633  000000                     
  2634  000000                     
  2635  000000                     
  2636  000000                     
  2637  000000                     
  2638  000000                     
  2639  000000                     
  2640  000000                     
  2641  000000                     
  2642  000000                     
  2643  000000                     
  2644  000000                     
  2645  000000                     
  2646  000000                     
  2647  000000                     
  2648  000000                     
  2649  000000                     
  2650  000000                     
  2651  000000                     
  2652  000000                     
  2653  000000                     
  2654  000000                     
  2655  000000                     
  2656  000000                     
  2657  000000                     
  2658  000000                     
  2659  000000                     
  2660  000000                     
  2661  000000                     
  2662  000000                     
  2663  000000                     
  2664  000000                     
  2665  000000                     
  2666  000000                     
  2667  000000                     
  2668  000000                     
  2669  000000                     
  2670  000000                     
  2671  000000                     
  2672  000000                     
  2673  000000                     
  2674  000000                     
  2675  000000                     
  2676  000000                     
  2677  000000                     
  2678  000000                     
  2679  000000                     
  2680  000000                     
  2681  000000                     
  2682  000000                     
  2683  000000                     
  2684  000000                     
  2685  000000                     
  2686  000000                     
  2687  000000                     
  2688  000000                     
  2689  000000                     
  2690  000000                     
  2691  000000                     
  2692  000000                     
  2693  000000                     
  2694  000000                     
  2695  000000                     
  2696  000000                     
  2697  000000                     
  2698  000000                     
  2699  000000                     
  2700  000000                     
  2701  000000                     
  2702  000000                     
  2703  000000                     
  2704  000000                     
  2705  000000                     
  2706  000000                     
  2707  000000                     
  2708  000000                     
  2709  000000                     
  2710  000000                     
  2711  000000                     
  2712  000000                     
  2713  000000                     
  2714  000000                     
  2715  000000                     
  2716  000000                     
  2717  000000                     
  2718  000000                     
  2719  000000                     
  2720  000000                     
  2721  000000                     
  2722  000000                     
  2723  000000                     
  2724  000000                     
  2725  000000                     
  2726  000000                     
  2727  000000                     
  2728  000000                     
  2729  000000                     
  2730  000000                     
  2731  000000                     
  2732  000000                     
  2733  000000                     
  2734  000000                     
  2735                           
  2736                           	psect	const
  2737  001062                     _nkpkt:
  2738  001062  08                 	db	8
  2739  000000                     
  2740  000000                     
  2741  000000                     
  2742  000000                     
  2743  000000                     
  2744  000000                     
  2745  000000                     
  2746                           
  2747                           	psect	bss
  2748  0003C3                     _Kvnt:
  2749  0003C3                     	ds	20
  2750                           
  2751                           	psect	temp
  2752  000000                     btemp:
  2753  000000                     	ds	9
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           indf0	equ	0xFEF
  2757                           postinc0	equ	0xFEE
  2758                           postdec0	equ	0xFED
  2759                           fsr0h	equ	0xFEA
  2760                           fsr0l	equ	0xFE9
  2761                           wreg	equ	0xFE8
  2762                           fsr1l	equ	0xFE1
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Mon Sep 14 17:33:14 2020

                    ?_SetKalPWM 00A9                     ?a_VNTToProc 00AA  
                             _M 0306          _OdczytDanychKalibracji C2FC  
                      _PrintErr 066C                              l22 BCC2  
                            l31 BD4A                              l23 BC4C  
                            l40 BF02                              l32 BCEA  
                            l24 BC4E                              l41 BF32  
                            l33 BCEC                              l17 BBC0  
                            l50 C036                              l26 BCAC  
                            l43 BF38                              l19 BBE4  
                            l60 C12E                              l36 BE52  
                            l28 BCCE                              l61 C140  
                            l53 C05E                              l70 C280  
                            l62 C1B2                              l54 C074  
                            l46 BF60                              l71 C2B6  
                            l55 C0AA                              l47 BF7A  
                            l39 C2C8                              l80 C3EE  
                            l72 C2BE                              l64 C1B4  
                            l56 C0BA                              l48 C01C  
                            l81 C542                              l65 C1BA  
                            l57 C0CC                              l49 C030  
                            l90 C5BA                              l82 C4D0  
                            l66 C200                              l58 C104  
                            l91 C5C0                              l83 C506  
                            l75 C390                              l59 C116  
                            l92 C772                              l84 C53C  
                            l68 C1F8                              l93 C6A2  
                            l69 C1F4                              l94 C6D8  
                            l86 C562                              l78 C544  
                            l95 C70E                              l79 C3E8  
                            l96 C722                              l89 C774  
                            l98 C76C                              u31 BC5A  
                            u50 BC74                              u90 BE3A  
                     ?_PrintErr 00A9                       _ProcToVNT C7A2  
                      _StartRTS FCA2               __end_of_ProcToVNT C82C  
                           l110 C8EA                             l103 C7AC  
                           l105 C838                             l106 C842  
                           l107 C8BA                             l109 C8DC  
                           u100 BE3C                             u130 BE4C  
                           u240 BE82                             u181 BE6C  
                           _PFN 0067                             u605 C4FA  
                           u615 C530                             u721 C716  
                           u705 C6CC                             u561 C3FE  
                           u715 C702                             u740 C71C  
                           u580 C406                             u805 C8B6  
                           u661 C5D0                             u680 C5D8  
                           _PMP 02FC                             u755 C764  
                           _PWM 02D9                             _RTS FCC6  
                      _WritePWM 02E8                    _DVNTtoPopPWM C552  
                           wreg 000FE8                       _StartRTdS FC66  
               ?a_KalibracjaVNT 00A5                            F1841 0F3C  
                          F1842 0F3D                    _ReadEEVNT0_P 85E4  
                  _ReadEEVNT1_P 860C                    _ReadEEVNT0_V 85E0  
                  _ReadEEVNT2_P 8634                    _ReadEEVNT1_V 8608  
                  _ReadEEVNT3_P 865C                    _ReadEEVNT2_V 8630  
                  _ReadEEVNT4_P 8684                    _ReadEEVNT3_V 8658  
                  _ReadEEVNT5_P 86AC                    _ReadEEVNT4_V 8680  
                  _ReadEEVNT6_P 86D4                    _ReadEEVNT5_V 86A8  
                  _ReadEEVNT7_P 86FC                    _ReadEEVNT6_V 86D0  
                  _ReadEEVNT7_V 86F8            __end_of_DVNTtoPopPWM C780  
                          f5713 00AC                            f6293 00B0  
                     _WritePWM2 0302                            _RTdS FC8A  
                   _ClrTachoDta D6D6                            _Kvnt 03C3  
                          almul 0964                            fsr0h 000FEA  
                          indf0 000FEF                            fsr0l 000FE9  
                          fsr1l 000FE1                            fsr2l 000FD9  
                          btemp 0000                            awdiv 0D4A  
                          awmul 0E24                            ftdiv 0A6E  
                          lldiv 0816                            fttol 0C2C  
                          llmul 0964                            prodh 000FF4  
                          prodl 000FF3                 _CalkVNTtoPopPWM C790  
                   ?a_SetKalPWM 00AA                ?_CalkVNTtoPopPWM 00B2  
                ?a_DVNTtoPopPWM 00B5                     ?a_ProcToVNT 00AC  
                    _WriteEEPFN 84FA                           _RSDT1 032D  
                         _DtKNF 02AE                   ?_DVNTtoPopPWM 00B4  
                    used_btemp0 0001                      used_btemp1 0001  
                    used_btemp2 0001                      used_btemp3 0001  
                    used_btemp4 0001                      used_btemp5 0001  
                    used_btemp6 0001                      used_btemp7 0001  
                    used_btemp8 0001                           _nkpkt 1062  
                         _round 0AF2                    _ToWriteESTAT FC00  
                       _BitSet2 07D8                      _CalkTimStr C8C0  
                       _GetBit2 0772                           lwtoft 0E84  
                      ?_BitSet2 00AC                           status 000FD8  
                      ?_GetBit2 00AE              __end_of_CalkTimStr C954  
                  _ProcToPmpPwm E44E                         __Lparam 00A4  
                     _DVNTtoPWM C380               __end_of_DVNTtoPWM C550  
       __end_of_CalkVNTtoPopPWM C7A2                         __ramtop 1000  
             ?a_CalkVNTtoPopPWM 00B3                    _CalkVNTtoPWM C780  
                        ?_round 00B6                     _WriteEEVNT0 85C2  
                   _WriteEEVNT1 85EA                     _WriteEEVNT2 8612  
                   _WriteEEVNT3 863A                     _WriteEEVNT4 8662  
                   _WriteEEVNT5 868A                     _WriteEEVNT6 86B2  
                   _WriteEEVNT7 86DA            __end_of_CalkVNTtoPWM C78E  
                        _ErrPTG 3BDC                          _PomALL 141A  
                     _VNTToProc C82C               __end_of_VNTToProc C8C0  
                   ?a_DVNTtoPWM 00B3                         postdec0 000FED  
                 _KalibracjaVNT BE12                         postinc0 000FEE  
                  ?_WriteEEVNT0 00AC                    ?_WriteEEVNT1 00AC  
                  ?_WriteEEVNT2 00AC                    ?_WriteEEVNT3 00AC  
                  ?_WriteEEVNT4 00AC                    ?_WriteEEVNT5 00AC  
                  ?_WriteEEVNT6 00AC                    ?_WriteEEVNT7 00AC  
                        aldiv_f 0EC8                  ?a_CalkVNTtoPWM 00B2  
                        lldiv_f 0EA0  __end_of_OdczytDanychKalibracji C380  
         __end_of_KalibracjaVNT C2FC                        _ModParam 00CA  
                     _SetDefFan BCE6               __end_of_SetDefFan BE12  
                     _SetKalPWM BBAE                    ?a_CalkTimStr 00A4  
             __end_of_SetKalPWM BCE6  
