

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Mon Sep 14 17:33:14 2020


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     5                           	psect	bss,global,class=RAM,space=1,delta=1
     6                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     7                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97                           
    98                           	psect	text
    99                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   100                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   101                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   102                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   103                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   104                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   105                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   106                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   107                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   108                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   109                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   110                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   111                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   112                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   113                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   114                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   115                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   116                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   117                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   118                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   119                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   120                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   121                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   122                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   123                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   124                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   125                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   126                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   127                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   128                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   129                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   130                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   131                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   132                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   133                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   134                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   135                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   136                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   137                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   138                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   139                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   140                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   141                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   142                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   143                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   144                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   145                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   146                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   147                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   148                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   149                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   150                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   151                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   152                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   153                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   154                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   155                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   156                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   157                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   158                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   159                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   160                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   161                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   162                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   163                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   164                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   165                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   166                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   167                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   168                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   169                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   170                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   171                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   172                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   173                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   174                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   175                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   176                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   177                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   178                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   179                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   180                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   181                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   182                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   183                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   184                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   185                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   186                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   187                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   188                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   189                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   190                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   191                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   192                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   193                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   194                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   195                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   196                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   197                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   198                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   199  00A7A2                     _SaveRSToData:
   200                           ;	_tnDat assigned to ?a_ReceptData+0
   201  000000                     _ReceptData$tnDat	set	?a_ReceptData
   202                           ;	_ndat assigned to ?a_SaveDataToRS+3
   203  000000                     _SaveDataToRS$ndat	set	?a_SaveDataToRS+3
   204                           ;	_chkndat assigned to ?a_SaveDataToRS+2
   205  000000                     _SaveDataToRS$chkndat	set	?a_SaveDataToRS+2
   206                           ;	_i assigned to ?a_SaveDataToRS+1
   207  000000                     _SaveDataToRS$i	set	?a_SaveDataToRS+1
   208                           ;	_nr assigned to ?a_SaveDataToRS+0
   209  000000                     _SaveDataToRS$nr	set	?a_SaveDataToRS
   210                           ;	_nbty assigned to ?a_SaveRSToData+1
   211  000000                     _SaveRSToData$nbty	set	?a_SaveRSToData+1
   212  000000                     
   213                           ;	_bf assigned to ?a_SaveRSToData+0
   214  000000                     _SaveRSToData$bf	set	?a_SaveRSToData
   215                           ;smgs_rs9b.c: 28: unsigned char nbty,bf;
   216  00A7A2  0E02               	movlw	2
   217  00A7A4  ECA6  F07B         	call	_GetRSRBuf
   218  00A7A8  CFE8 F32D          	movff	wreg,_RSDT1
   219                           ;smgs_rs9b.c: 34: switch(RSDT1.outID)
   220  00A7AC  EF1C  F058         	goto	l18
   221  00A7B0                     l19:
   222                           ;smgs_rs9b.c: 35: {
   223                           ;smgs_rs9b.c: 37: {
   224  00A7B0  0103               	movlb	(_RSDT1+1) shr (0+8)
   225  00A7B2  912E               	bcf	(_RSDT1+1)& (0+255),0,b
   226                           ;smgs_rs9b.c: 40: nbty=GetNDat();
   227  00A7B4  EC5F  F07C         	call	_GetNDat	;wreg free
   228  00A7B8  0100               	movlb	__Lparam shr (0+8)
   229  00A7BA  6FAB               	movwf	(?a_SaveRSToData+1)^(__Lparam& (0+65280))
      +                          ,b
   230                           ;smgs_rs9b.c: 42: if(nbty>=10) RSDT1.vSTD=1;
   231  00A7BC  0E09               	movlw	9
   232  00A7BE  65AB               	cpfsgt	(?a_SaveRSToData+1)^(__Lparam& (0+65280)
      +                          ),b
   233  00A7C0  D004               	goto	l20
   234  00A7C2  0E01               	movlw	1
   235  00A7C4  CFE8 F376          	movff	wreg,_RSDT1+73
   236  00A7C8  D002               	goto	l21
   237  00A7CA                     l20:
   238                           ;smgs_rs9b.c: 43: else RSDT1.vSTD=0;
   239  00A7CA  0103               	movlb	(_RSDT1+73) shr (0+8)
   240  00A7CC  6B76               	clrf	(_RSDT1+73)& (0+255),b
   241  00A7CE                     l21:
   242                           ;smgs_rs9b.c: 45: RSDT1.inSTAT0=GetRSRBuf(3);
   243  00A7CE  0E03               	movlw	3
   244  00A7D0  ECA6  F07B         	call	_GetRSRBuf
   245  00A7D4  CFE8 F37B          	movff	wreg,_RSDT1+78
   246                           ;smgs_rs9b.c: 46: RSDT1.inSTAT1=GetRSRBuf(4);
   247  00A7D8  0E04               	movlw	4
   248  00A7DA  ECA6  F07B         	call	_GetRSRBuf
   249  00A7DE  CFE8 F37C          	movff	wreg,_RSDT1+79
   250                           ;smgs_rs9b.c: 47: RSDT1.inPCO=GetRSRBuf(5);
   251  00A7E2  0E05               	movlw	5
   252  00A7E4  ECA6  F07B         	call	_GetRSRBuf
   253  00A7E8  CFE8 F378          	movff	wreg,_RSDT1+75
   254                           ;smgs_rs9b.c: 48: RSDT1.inPCW=GetRSRBuf(6);
   255  00A7EC  0E06               	movlw	6
   256  00A7EE  ECA6  F07B         	call	_GetRSRBuf
   257  00A7F2  CFE8 F379          	movff	wreg,_RSDT1+76
   258                           ;smgs_rs9b.c: 49: RSDT1.inECO=GetRSRBuf(7);
   259  00A7F6  0E07               	movlw	7
   260  00A7F8  ECA6  F07B         	call	_GetRSRBuf
   261  00A7FC  CFE8 F37A          	movff	wreg,_RSDT1+77
   262                           ;smgs_rs9b.c: 50: RSDT1.inINSTAT=0;
   263  00A800  0103               	movlb	(_RSDT1+80) shr (0+8)
   264  00A802  6B7D               	clrf	(_RSDT1+80)& (0+255),b
   265                           ;smgs_rs9b.c: 51: RSDT1.inLNSTAT=0;
   266  00A804  0103               	movlb	(_RSDT1+81) shr (0+8)
   267  00A806  6B7E               	clrf	(_RSDT1+81)& (0+255),b
   268                           ;smgs_rs9b.c: 52: RSDT1.inSTAT2=0;
   269  00A808  0103               	movlb	(_RSDT1+83) shr (0+8)
   270  00A80A  6B80               	clrf	(_RSDT1+83)& (0+255),b
   271                           ;smgs_rs9b.c: 53: RSDT1.inRDZ0=0;
   272  00A80C  0103               	movlb	(_RSDT1+74) shr (0+8)
   273  00A80E  6B77               	clrf	(_RSDT1+74)& (0+255),b
   274                           ;smgs_rs9b.c: 54: RSDT1.RD_STD=1;
   275  00A810  0103               	movlb	(_RSDT1+1) shr (0+8)
   276  00A812  812E               	bsf	(_RSDT1+1)& (0+255),0,b
   277                           ;smgs_rs9b.c: 55: break;
   278  00A814  0012               	return	
   279  00A816                     l22:
   280                           ;smgs_rs9b.c: 56: }
   281                           ;smgs_rs9b.c: 58: {
   282  00A816  0103               	movlb	(_RSDT1+1) shr (0+8)
   283  00A818  912E               	bcf	(_RSDT1+1)& (0+255),0,b
   284                           ;smgs_rs9b.c: 61: nbty=GetExNDat();
   285  00A81A  EC63  F07C         	call	_GetExNDat	;wreg free
   286  00A81E  0100               	movlb	__Lparam shr (0+8)
   287  00A820  6FAB               	movwf	(?a_SaveRSToData+1)^(__Lparam& (0+65280))
      +                          ,b
   288                           ;smgs_rs9b.c: 63: switch(nbty)
   289  00A822  D001               	goto	l24
   290  00A824                     l25:
   291  00A824  D007               	goto	L1
   292                           ;smgs_rs9b.c: 70: else RSDT1.vSTD=2;
   293                           ;smgs_rs9b.c: 71: break;
   294  00A826                     l24:
   295  00A826  0100               	movlb	__Lparam shr (0+8)
   296  00A828  51AB               	movf	(?a_SaveRSToData+1)^(__Lparam& (0+65280)),
      +                          w
   297  00A82A  0A0F               	xorlw	15
   298  00A82C  E0FB               	bz	l25
   299                           ;smgs_rs9b.c: 64: {
   300                           ;smgs_rs9b.c: 66: RSDT1.vSTD=2;
   301                           ;smgs_rs9b.c: 67: break;
   302                           ;smgs_rs9b.c: 68: default:
   303                           ;smgs_rs9b.c: 69: if(nbty>=15) RSDT1.vSTD=2;
   304  00A82E  0E0E               	movlw	14
   305  00A830  65AB               	cpfsgt	(?a_SaveRSToData+1)^(__Lparam& (0+65280)
      +                          ),b
   306  00A832  D000               	goto	L1
   307  00A834                     L1:
   308  00A834  0E02               	movlw	2
   309  00A836  CFE8 F376          	movff	wreg,_RSDT1+73
   310                           ;smgs_rs9b.c: 73: RSDT1.inRDZ0=GetRSRBuf(4);
   311  00A83A  0E04               	movlw	4
   312  00A83C  ECA6  F07B         	call	_GetRSRBuf
   313  00A840  CFE8 F377          	movff	wreg,_RSDT1+74
   314                           ;smgs_rs9b.c: 74: RSDT1.inSTAT0=GetRSRBuf(5);
   315  00A844  0E05               	movlw	5
   316  00A846  ECA6  F07B         	call	_GetRSRBuf
   317  00A84A  CFE8 F37B          	movff	wreg,_RSDT1+78
   318                           ;smgs_rs9b.c: 75: RSDT1.inSTAT1=GetRSRBuf(6);
   319  00A84E  0E06               	movlw	6
   320  00A850  ECA6  F07B         	call	_GetRSRBuf
   321  00A854  CFE8 F37C          	movff	wreg,_RSDT1+79
   322                           ;smgs_rs9b.c: 76: RSDT1.inPCO=GetRSRBuf(7);
   323  00A858  0E07               	movlw	7
   324  00A85A  ECA6  F07B         	call	_GetRSRBuf
   325  00A85E  CFE8 F378          	movff	wreg,_RSDT1+75
   326                           ;smgs_rs9b.c: 77: RSDT1.inPCW=GetRSRBuf(8);
   327  00A862  0E08               	movlw	8
   328  00A864  ECA6  F07B         	call	_GetRSRBuf
   329  00A868  CFE8 F379          	movff	wreg,_RSDT1+76
   330                           ;smgs_rs9b.c: 78: RSDT1.inECO=GetRSRBuf(9);
   331  00A86C  0E09               	movlw	9
   332  00A86E  ECA6  F07B         	call	_GetRSRBuf
   333  00A872  CFE8 F37A          	movff	wreg,_RSDT1+77
   334                           ;smgs_rs9b.c: 79: RSDT1.inINSTAT=GetRSRBuf(10);
   335  00A876  0E0A               	movlw	10
   336  00A878  ECA6  F07B         	call	_GetRSRBuf
   337  00A87C  CFE8 F37D          	movff	wreg,_RSDT1+80
   338                           ;smgs_rs9b.c: 80: RSDT1.inLNSTAT=GetRSRBuf(11);
   339  00A880  0E0B               	movlw	11
   340  00A882  ECA6  F07B         	call	_GetRSRBuf
   341  00A886  CFE8 F37E          	movff	wreg,_RSDT1+81
   342                           ;smgs_rs9b.c: 81: RSDT1.inCONTSETP=GetRSRBuf(12)
      +                          ;
   343  00A88A  0E0C               	movlw	12
   344  00A88C  ECA6  F07B         	call	_GetRSRBuf
   345  00A890  CFE8 F37F          	movff	wreg,_RSDT1+82
   346                           ;smgs_rs9b.c: 82: RSDT1.inSTAT2=GetRSRBuf(13);
   347  00A894  0E0D               	movlw	13
   348  00A896  ECA6  F07B         	call	_GetRSRBuf
   349  00A89A  CFE8 F380          	movff	wreg,_RSDT1+83
   350                           ;smgs_rs9b.c: 92: RSDT1.RD_STD=1;
   351  00A89E  0103               	movlb	(_RSDT1+1) shr (0+8)
   352  00A8A0  812E               	bsf	(_RSDT1+1)& (0+255),0,b
   353                           ;smgs_rs9b.c: 93: break;
   354  00A8A2  0012               	return	
   355  00A8A4                     l29:
   356                           ;smgs_rs9b.c: 94: }
   357                           ;smgs_rs9b.c: 96: {
   358  00A8A4  0103               	movlb	(_RSDT1+1) shr (0+8)
   359  00A8A6  B72E               	btfsc	(_RSDT1+1)& (0+255),3,b
   360  00A8A8  0012               	return	
   361                           ;smgs_rs9b.c: 99: {
   362  00A8AA  932E               	bcf	(_RSDT1+1)& (0+255),1,b
   363                           ;smgs_rs9b.c: 103: nbty=GetNDat();
   364  00A8AC  EC5F  F07C         	call	_GetNDat	;wreg free
   365  00A8B0  0100               	movlb	__Lparam shr (0+8)
   366  00A8B2  6FAB               	movwf	(?a_SaveRSToData+1)^(__Lparam& (0+65280))
      +                          ,b
   367                           ;smgs_rs9b.c: 105: switch(nbty)
   368  00A8B4  D00B               	goto	l32
   369  00A8B6                     l33:
   370                           ;smgs_rs9b.c: 106: {
   371                           ;smgs_rs9b.c: 108: RSDT1.vKNF=1;
   372  00A8B6  0E01               	movlw	1
   373  00A8B8  D01B               	goto	L8
   374                           ;smgs_rs9b.c: 109: break;
   375  00A8BA                     l34:
   376                           ;smgs_rs9b.c: 110: case 25:
   377                           ;smgs_rs9b.c: 111: RSDT1.vKNF=2;
   378  00A8BA  0E02               	movlw	2
   379  00A8BC  D019               	goto	L8
   380                           ;smgs_rs9b.c: 112: break;
   381  00A8BE                     l35:
   382                           ;smgs_rs9b.c: 113: case 26:
   383                           ;smgs_rs9b.c: 114: RSDT1.vKNF=3;
   384  00A8BE  0E03               	movlw	3
   385  00A8C0  D017               	goto	L8
   386                           ;smgs_rs9b.c: 115: break;
   387  00A8C2                     l36:
   388                           ;smgs_rs9b.c: 116: case 27:
   389                           ;smgs_rs9b.c: 117: RSDT1.vKNF=4;
   390  00A8C2  0E04               	movlw	4
   391  00A8C4  D015               	goto	L8
   392                           ;smgs_rs9b.c: 118: break;
   393  00A8C6                     l37:
   394                           ;smgs_rs9b.c: 119: case 30:
   395                           ;smgs_rs9b.c: 120: RSDT1.vKNF=5;
   396  00A8C6  0E05               	movlw	5
   397  00A8C8  D013               	goto	L8
   398                           ;smgs_rs9b.c: 121: break;
   399  00A8CA                     l38:
   400  00A8CA  D011               	goto	L15
   401                           ;smgs_rs9b.c: 122: case 31:
   402                           ;smgs_rs9b.c: 123: RSDT1.vKNF=6;
   403                           ;smgs_rs9b.c: 127: else RSDT1.vKNF=2;
   404                           ;smgs_rs9b.c: 128: break;
   405  00A8CC                     l32:
   406  00A8CC  0100               	movlb	__Lparam shr (0+8)
   407  00A8CE  51AB               	movf	(?a_SaveRSToData+1)^(__Lparam& (0+65280)),
      +                          w
   408  00A8D0  0A17               	xorlw	23
   409  00A8D2  E0F1               	bz	l33
   410  00A8D4  0A0E               	xorlw	14
   411  00A8D6  E0F1               	bz	l34
   412  00A8D8  0A03               	xorlw	3
   413  00A8DA  E0F1               	bz	l35
   414  00A8DC  0A01               	xorlw	1
   415  00A8DE  E0F1               	bz	l36
   416  00A8E0  0A05               	xorlw	5
   417  00A8E2  E0F1               	bz	l37
   418  00A8E4  0A01               	xorlw	1
   419  00A8E6  E0F1               	bz	l38
   420                           ;smgs_rs9b.c: 124: break;
   421                           ;smgs_rs9b.c: 125: default:
   422                           ;smgs_rs9b.c: 126: if(nbty>31) RSDT1.vKNF=6;
   423  00A8E8  0E1F               	movlw	31
   424  00A8EA  65AB               	cpfsgt	(?a_SaveRSToData+1)^(__Lparam& (0+65280)
      +                          ),b
   425  00A8EC  D7E6               	goto	l34
   426  00A8EE                     L15:
   427  00A8EE  0E06               	movlw	6
   428  00A8F0                     L8:
   429  00A8F0  CFE8 F34F          	movff	wreg,_RSDT1+34
   430                           ;smgs_rs9b.c: 130: RSDT1.inKSTAT0=GetRSRBuf(3);
   431  00A8F4  0E03               	movlw	3
   432  00A8F6  ECA6  F07B         	call	_GetRSRBuf
   433  00A8FA  CFE8 F381          	movff	wreg,_RSDT1+84
   434                           ;smgs_rs9b.c: 131: RSDT1.inKRK=GetRSRBuf(4);
   435  00A8FE  0E04               	movlw	4
   436  00A900  ECA6  F07B         	call	_GetRSRBuf
   437  00A904  CFE8 F382          	movff	wreg,_RSDT1+85
   438                           ;smgs_rs9b.c: 132: RSDT1.inPRM=GetRSRBuf(5);
   439  00A908  0E05               	movlw	5
   440  00A90A  ECA6  F07B         	call	_GetRSRBuf
   441  00A90E  CFE8 F383          	movff	wreg,_RSDT1+86
   442                           ;smgs_rs9b.c: 133: RSDT1.inDDTA=GetRSRBuf(6);
   443  00A912  0E06               	movlw	6
   444  00A914  ECA6  F07B         	call	_GetRSRBuf
   445  00A918  CFE8 F384          	movff	wreg,_RSDT1+87
   446                           ;smgs_rs9b.c: 134: RSDT1.inMSTR=GetRSRBuf(7);
   447  00A91C  0E07               	movlw	7
   448  00A91E  ECA6  F07B         	call	_GetRSRBuf
   449  00A922  CFE8 F385          	movff	wreg,_RSDT1+88
   450                           ;smgs_rs9b.c: 135: RSDT1.inMMAXU=GetRSRBuf(8);
   451  00A926  0E08               	movlw	8
   452  00A928  ECA6  F07B         	call	_GetRSRBuf
   453  00A92C  CFE8 F386          	movff	wreg,_RSDT1+89
   454                           ;smgs_rs9b.c: 136: RSDT1.inMMAXG=GetRSRBuf(9);
   455  00A930  0E09               	movlw	9
   456  00A932  ECA6  F07B         	call	_GetRSRBuf
   457  00A936  CFE8 F387          	movff	wreg,_RSDT1+90
   458                           ;smgs_rs9b.c: 137: RSDT1.inOPDG=GetRSRBuf(10);
   459  00A93A  0E0A               	movlw	10
   460  00A93C  ECA6  F07B         	call	_GetRSRBuf
   461  00A940  CFE8 F38C          	movff	wreg,_RSDT1+95
   462                           ;smgs_rs9b.c: 138: RSDT1.inWANL=GetRSRBuf(11);
   463  00A944  0E0B               	movlw	11
   464  00A946  ECA6  F07B         	call	_GetRSRBuf
   465  00A94A  CFE8 F388          	movff	wreg,_RSDT1+91
   466                           ;smgs_rs9b.c: 139: RSDT1.inKODKT=GetRSRBuf(12);
   467  00A94E  0E0C               	movlw	12
   468  00A950  ECA6  F07B         	call	_GetRSRBuf
   469  00A954  CFE8 F389          	movff	wreg,_RSDT1+92
   470                           ;smgs_rs9b.c: 140: RSDT1.inWOBG=GetRSRBuf(13);
   471  00A958  0E0D               	movlw	13
   472  00A95A  ECA6  F07B         	call	_GetRSRBuf
   473  00A95E  CFE8 F38A          	movff	wreg,_RSDT1+93
   474                           ;smgs_rs9b.c: 141: RSDT1.inNOKR=GetRSRBuf(14);
   475  00A962  0E0E               	movlw	14
   476  00A964  ECA6  F07B         	call	_GetRSRBuf
   477  00A968  CFE8 F38B          	movff	wreg,_RSDT1+94
   478                           ;smgs_rs9b.c: 142: RSDT1.inTPCS=GetRSRBuf(15);
   479  00A96C  0E0F               	movlw	15
   480  00A96E  ECA6  F07B         	call	_GetRSRBuf
   481  00A972  CFE8 F38D          	movff	wreg,_RSDT1+96
   482                           ;smgs_rs9b.c: 143: RSDT1.inMMIN=GetRSRBuf(16);
   483  00A976  0E10               	movlw	16
   484  00A978  ECA6  F07B         	call	_GetRSRBuf
   485  00A97C  CFE8 F38E          	movff	wreg,_RSDT1+97
   486                           ;smgs_rs9b.c: 144: RSDT1.inMMAX=GetRSRBuf(17);
   487  00A980  0E11               	movlw	17
   488  00A982  ECA6  F07B         	call	_GetRSRBuf
   489  00A986  CFE8 F38F          	movff	wreg,_RSDT1+98
   490                           ;smgs_rs9b.c: 145: RSDT1.inRDPM=GetRSRBuf(18);
   491  00A98A  0E12               	movlw	18
   492  00A98C  ECA6  F07B         	call	_GetRSRBuf
   493  00A990  CFE8 F390          	movff	wreg,_RSDT1+99
   494                           ;smgs_rs9b.c: 146: RSDT1.inDTPM=GetRSRBuf(19);
   495  00A994  0E13               	movlw	19
   496  00A996  ECA6  F07B         	call	_GetRSRBuf
   497  00A99A  CFE8 F391          	movff	wreg,_RSDT1+100
   498                           ;smgs_rs9b.c: 147: RSDT1.inMDPM=GetRSRBuf(20);
   499  00A99E  0E14               	movlw	20
   500  00A9A0  ECA6  F07B         	call	_GetRSRBuf
   501  00A9A4  CFE8 F392          	movff	wreg,_RSDT1+101
   502                           ;smgs_rs9b.c: 148: RSDT1.inTECO=GetRSRBuf(21);
   503  00A9A8  0E15               	movlw	21
   504  00A9AA  ECA6  F07B         	call	_GetRSRBuf
   505  00A9AE  CFE8 F393          	movff	wreg,_RSDT1+102
   506                           ;smgs_rs9b.c: 149: RSDT1.inTMMAXG2=GetRSRBuf(22)
      +                          ;
   507  00A9B2  0E16               	movlw	22
   508  00A9B4  ECA6  F07B         	call	_GetRSRBuf
   509  00A9B8  CFE8 F394          	movff	wreg,_RSDT1+103
   510                           ;smgs_rs9b.c: 150: RSDT1.inMMAXG2=GetRSRBuf(23);
   511  00A9BC  0E17               	movlw	23
   512  00A9BE  ECA6  F07B         	call	_GetRSRBuf
   513  00A9C2  CFE8 F395          	movff	wreg,_RSDT1+104
   514                           ;smgs_rs9b.c: 151: RSDT1.inMGPM=GetRSRBuf(24);
   515  00A9C6  0E18               	movlw	24
   516  00A9C8  ECA6  F07B         	call	_GetRSRBuf
   517  00A9CC  CFE8 F396          	movff	wreg,_RSDT1+105
   518                           ;smgs_rs9b.c: 152: RSDT1.inMGPM2=GetRSRBuf(25);
   519  00A9D0  0E19               	movlw	25
   520  00A9D2  ECA6  F07B         	call	_GetRSRBuf
   521  00A9D6  CFE8 F397          	movff	wreg,_RSDT1+106
   522                           ;smgs_rs9b.c: 153: RSDT1.inHSCO=GetRSRBuf(26);
   523  00A9DA  0E1A               	movlw	26
   524  00A9DC  ECA6  F07B         	call	_GetRSRBuf
   525  00A9E0  CFE8 F398          	movff	wreg,_RSDT1+107
   526                           ;smgs_rs9b.c: 154: RSDT1.inCONW=GetRSRBuf(27);
   527  00A9E4  0E1B               	movlw	27
   528  00A9E6  ECA6  F07B         	call	_GetRSRBuf
   529  00A9EA  CFE8 F399          	movff	wreg,_RSDT1+108
   530                           ;smgs_rs9b.c: 155: RSDT1.inPROP=GetRSRBuf(28);
   531  00A9EE  0E1C               	movlw	28
   532  00A9F0  ECA6  F07B         	call	_GetRSRBuf
   533  00A9F4  CFE8 F39A          	movff	wreg,_RSDT1+109
   534                           ;smgs_rs9b.c: 156: RSDT1.inRFAN=GetRSRBuf(29);
   535  00A9F8  0E1D               	movlw	29
   536  00A9FA  ECA6  F07B         	call	_GetRSRBuf
   537  00A9FE  CFE8 F39B          	movff	wreg,_RSDT1+110
   538                           ;smgs_rs9b.c: 157: RSDT1.RD_KNF=1;
   539  00AA02  0103               	movlb	(_RSDT1+1) shr (0+8)
   540  00AA04  832E               	bsf	(_RSDT1+1)& (0+255),1,b
   541                           ;smgs_rs9b.c: 158: }
   542  00AA06  0012               	return	
   543  00AA08                     l42:
   544                           ;smgs_rs9b.c: 160: }
   545                           ;smgs_rs9b.c: 162: {
   546  00AA08  0103               	movlb	(_RSDT1+1) shr (0+8)
   547  00AA0A  B72E               	btfsc	(_RSDT1+1)& (0+255),3,b
   548  00AA0C  0012               	return	
   549                           ;smgs_rs9b.c: 165: {
   550  00AA0E  932E               	bcf	(_RSDT1+1)& (0+255),1,b
   551                           ;smgs_rs9b.c: 167: nbty=GetExNDat();
   552  00AA10  EC63  F07C         	call	_GetExNDat	;wreg free
   553  00AA14  0100               	movlb	__Lparam shr (0+8)
   554  00AA16  6FAB               	movwf	(?a_SaveRSToData+1)^(__Lparam& (0+65280))
      +                          ,b
   555                           ;smgs_rs9b.c: 169: switch(nbty)
   556  00AA18  D005               	goto	l45
   557  00AA1A                     l46:
   558  00AA1A  D00F               	goto	L12
   559                           ;smgs_rs9b.c: 170: {
   560                           ;smgs_rs9b.c: 172: RSDT1.vKNF=9;
   561                           ;smgs_rs9b.c: 173: break;
   562  00AA1C                     l47:
   563                           ;smgs_rs9b.c: 174: case 38:
   564                           ;smgs_rs9b.c: 175: RSDT1.vKNF=8;
   565  00AA1C  0E08               	movlw	8
   566  00AA1E  D00E               	goto	L13
   567                           ;smgs_rs9b.c: 176: break;
   568  00AA20                     l48:
   569                           ;smgs_rs9b.c: 177: case 37:
   570                           ;smgs_rs9b.c: 178: RSDT1.vKNF=7;
   571  00AA20  0E07               	movlw	7
   572                           ;smgs_rs9b.c: 182: else RSDT1.vKNF=9;
   573  00AA22  D00C               	goto	L13
   574                           ;smgs_rs9b.c: 183: break;
   575  00AA24                     l45:
   576  00AA24  0100               	movlb	__Lparam shr (0+8)
   577  00AA26  51AB               	movf	(?a_SaveRSToData+1)^(__Lparam& (0+65280)),
      +                          w
   578  00AA28  0A25               	xorlw	37
   579  00AA2A  E0FA               	bz	l48
   580  00AA2C  0A03               	xorlw	3
   581  00AA2E  E0F6               	bz	l47
   582  00AA30  0A0E               	xorlw	14
   583  00AA32  E0F3               	bz	l46
   584                           ;smgs_rs9b.c: 179: break;
   585                           ;smgs_rs9b.c: 180: default:
   586                           ;smgs_rs9b.c: 181: if(nbty>40) RSDT1.vKNF=9;
   587  00AA34  0E28               	movlw	40
   588  00AA36  65AB               	cpfsgt	(?a_SaveRSToData+1)^(__Lparam& (0+65280)
      +                          ),b
   589  00AA38  D000               	goto	L12
   590  00AA3A                     L12:
   591  00AA3A  0E09               	movlw	9
   592  00AA3C                     L13:
   593  00AA3C  CFE8 F34F          	movff	wreg,_RSDT1+34
   594                           ;smgs_rs9b.c: 185: RSDT1.inKSTAT0=GetRSRBuf(4);
   595  00AA40  0E04               	movlw	4
   596  00AA42  ECA6  F07B         	call	_GetRSRBuf
   597  00AA46  CFE8 F381          	movff	wreg,_RSDT1+84
   598                           ;smgs_rs9b.c: 186: RSDT1.inKRK=GetRSRBuf(5);
   599  00AA4A  0E05               	movlw	5
   600  00AA4C  ECA6  F07B         	call	_GetRSRBuf
   601  00AA50  CFE8 F382          	movff	wreg,_RSDT1+85
   602                           ;smgs_rs9b.c: 187: RSDT1.inPRM=GetRSRBuf(6);
   603  00AA54  0E06               	movlw	6
   604  00AA56  ECA6  F07B         	call	_GetRSRBuf
   605  00AA5A  CFE8 F383          	movff	wreg,_RSDT1+86
   606                           ;smgs_rs9b.c: 188: RSDT1.inDDTA=GetRSRBuf(7);
   607  00AA5E  0E07               	movlw	7
   608  00AA60  ECA6  F07B         	call	_GetRSRBuf
   609  00AA64  CFE8 F384          	movff	wreg,_RSDT1+87
   610                           ;smgs_rs9b.c: 189: RSDT1.inMSTR=GetRSRBuf(8);
   611  00AA68  0E08               	movlw	8
   612  00AA6A  ECA6  F07B         	call	_GetRSRBuf
   613  00AA6E  CFE8 F385          	movff	wreg,_RSDT1+88
   614                           ;smgs_rs9b.c: 190: RSDT1.inMMAXU=GetRSRBuf(9);
   615  00AA72  0E09               	movlw	9
   616  00AA74  ECA6  F07B         	call	_GetRSRBuf
   617  00AA78  CFE8 F386          	movff	wreg,_RSDT1+89
   618                           ;smgs_rs9b.c: 191: RSDT1.inMMAXG=GetRSRBuf(10);
   619  00AA7C  0E0A               	movlw	10
   620  00AA7E  ECA6  F07B         	call	_GetRSRBuf
   621  00AA82  CFE8 F387          	movff	wreg,_RSDT1+90
   622                           ;smgs_rs9b.c: 192: RSDT1.inOPDG=GetRSRBuf(11);
   623  00AA86  0E0B               	movlw	11
   624  00AA88  ECA6  F07B         	call	_GetRSRBuf
   625  00AA8C  CFE8 F38C          	movff	wreg,_RSDT1+95
   626                           ;smgs_rs9b.c: 193: RSDT1.inWANL=GetRSRBuf(12);
   627  00AA90  0E0C               	movlw	12
   628  00AA92  ECA6  F07B         	call	_GetRSRBuf
   629  00AA96  CFE8 F388          	movff	wreg,_RSDT1+91
   630                           ;smgs_rs9b.c: 194: RSDT1.inKODKT=GetRSRBuf(13);
   631  00AA9A  0E0D               	movlw	13
   632  00AA9C  ECA6  F07B         	call	_GetRSRBuf
   633  00AAA0  CFE8 F389          	movff	wreg,_RSDT1+92
   634                           ;smgs_rs9b.c: 195: RSDT1.inWOBG=GetRSRBuf(14);
   635  00AAA4  0E0E               	movlw	14
   636  00AAA6  ECA6  F07B         	call	_GetRSRBuf
   637  00AAAA  CFE8 F38A          	movff	wreg,_RSDT1+93
   638                           ;smgs_rs9b.c: 196: RSDT1.inNOKR=GetRSRBuf(15);
   639  00AAAE  0E0F               	movlw	15
   640  00AAB0  ECA6  F07B         	call	_GetRSRBuf
   641  00AAB4  CFE8 F38B          	movff	wreg,_RSDT1+94
   642                           ;smgs_rs9b.c: 197: RSDT1.inTPCS=GetRSRBuf(16);
   643  00AAB8  0E10               	movlw	16
   644  00AABA  ECA6  F07B         	call	_GetRSRBuf
   645  00AABE  CFE8 F38D          	movff	wreg,_RSDT1+96
   646                           ;smgs_rs9b.c: 198: RSDT1.inMMIN=GetRSRBuf(17);
   647  00AAC2  0E11               	movlw	17
   648  00AAC4  ECA6  F07B         	call	_GetRSRBuf
   649  00AAC8  CFE8 F38E          	movff	wreg,_RSDT1+97
   650                           ;smgs_rs9b.c: 199: RSDT1.inMMAX=GetRSRBuf(18);
   651  00AACC  0E12               	movlw	18
   652  00AACE  ECA6  F07B         	call	_GetRSRBuf
   653  00AAD2  CFE8 F38F          	movff	wreg,_RSDT1+98
   654                           ;smgs_rs9b.c: 200: RSDT1.inRDPM=GetRSRBuf(19);
   655  00AAD6  0E13               	movlw	19
   656  00AAD8  ECA6  F07B         	call	_GetRSRBuf
   657  00AADC  CFE8 F390          	movff	wreg,_RSDT1+99
   658                           ;smgs_rs9b.c: 201: RSDT1.inDTPM=GetRSRBuf(20);
   659  00AAE0  0E14               	movlw	20
   660  00AAE2  ECA6  F07B         	call	_GetRSRBuf
   661  00AAE6  CFE8 F391          	movff	wreg,_RSDT1+100
   662                           ;smgs_rs9b.c: 202: RSDT1.inMDPM=GetRSRBuf(21);
   663  00AAEA  0E15               	movlw	21
   664  00AAEC  ECA6  F07B         	call	_GetRSRBuf
   665  00AAF0  CFE8 F392          	movff	wreg,_RSDT1+101
   666                           ;smgs_rs9b.c: 203: RSDT1.inTECO=GetRSRBuf(22);
   667  00AAF4  0E16               	movlw	22
   668  00AAF6  ECA6  F07B         	call	_GetRSRBuf
   669  00AAFA  CFE8 F393          	movff	wreg,_RSDT1+102
   670                           ;smgs_rs9b.c: 204: RSDT1.inTMMAXG2=GetRSRBuf(23)
      +                          ;
   671  00AAFE  0E17               	movlw	23
   672  00AB00  ECA6  F07B         	call	_GetRSRBuf
   673  00AB04  CFE8 F394          	movff	wreg,_RSDT1+103
   674                           ;smgs_rs9b.c: 205: RSDT1.inMMAXG2=GetRSRBuf(24);
   675  00AB08  0E18               	movlw	24
   676  00AB0A  ECA6  F07B         	call	_GetRSRBuf
   677  00AB0E  CFE8 F395          	movff	wreg,_RSDT1+104
   678                           ;smgs_rs9b.c: 206: RSDT1.inMGPM=GetRSRBuf(25);
   679  00AB12  0E19               	movlw	25
   680  00AB14  ECA6  F07B         	call	_GetRSRBuf
   681  00AB18  CFE8 F396          	movff	wreg,_RSDT1+105
   682                           ;smgs_rs9b.c: 207: RSDT1.inMGPM2=GetRSRBuf(26);
   683  00AB1C  0E1A               	movlw	26
   684  00AB1E  ECA6  F07B         	call	_GetRSRBuf
   685  00AB22  CFE8 F397          	movff	wreg,_RSDT1+106
   686                           ;smgs_rs9b.c: 208: RSDT1.inHSCO=GetRSRBuf(27);
   687  00AB26  0E1B               	movlw	27
   688  00AB28  ECA6  F07B         	call	_GetRSRBuf
   689  00AB2C  CFE8 F398          	movff	wreg,_RSDT1+107
   690                           ;smgs_rs9b.c: 209: RSDT1.inCONW=GetRSRBuf(28);
   691  00AB30  0E1C               	movlw	28
   692  00AB32  ECA6  F07B         	call	_GetRSRBuf
   693  00AB36  CFE8 F399          	movff	wreg,_RSDT1+108
   694                           ;smgs_rs9b.c: 210: RSDT1.inPROP=GetRSRBuf(29);
   695  00AB3A  0E1D               	movlw	29
   696  00AB3C  ECA6  F07B         	call	_GetRSRBuf
   697  00AB40  CFE8 F39A          	movff	wreg,_RSDT1+109
   698                           ;smgs_rs9b.c: 211: RSDT1.inRFAN=GetRSRBuf(30);
   699  00AB44  0E1E               	movlw	30
   700  00AB46  ECA6  F07B         	call	_GetRSRBuf
   701  00AB4A  CFE8 F39B          	movff	wreg,_RSDT1+110
   702                           ;smgs_rs9b.c: 212: RSDT1.inTSTR=GetRSRBuf(31);
   703  00AB4E  0E1F               	movlw	31
   704  00AB50  ECA6  F07B         	call	_GetRSRBuf
   705  00AB54  CFE8 F39C          	movff	wreg,_RSDT1+111
   706                           ;smgs_rs9b.c: 213: RSDT1.inTL3=GetRSRBuf(32);
   707  00AB58  0E20               	movlw	32
   708  00AB5A  ECA6  F07B         	call	_GetRSRBuf
   709  00AB5E  CFE8 F39D          	movff	wreg,_RSDT1+112
   710                           ;smgs_rs9b.c: 215: RSDT1.inPGDR=GetRSRBuf(33);
   711  00AB62  0E21               	movlw	33
   712  00AB64  ECA6  F07B         	call	_GetRSRBuf
   713  00AB68  CFE8 F39E          	movff	wreg,_RSDT1+113
   714                           ;smgs_rs9b.c: 216: RSDT1.inPGDG=GetRSRBuf(34);
   715  00AB6C  0E22               	movlw	34
   716  00AB6E  ECA6  F07B         	call	_GetRSRBuf
   717  00AB72  CFE8 F39F          	movff	wreg,_RSDT1+114
   718                           ;smgs_rs9b.c: 217: RSDT1.inPGDO=GetRSRBuf(35);
   719  00AB76  0E23               	movlw	35
   720  00AB78  ECA6  F07B         	call	_GetRSRBuf
   721  00AB7C  CFE8 F3A0          	movff	wreg,_RSDT1+115
   722                           ;smgs_rs9b.c: 218: RSDT1.inPGMX=GetRSRBuf(36);
   723  00AB80  0E24               	movlw	36
   724  00AB82  ECA6  F07B         	call	_GetRSRBuf
   725  00AB86  CFE8 F3A1          	movff	wreg,_RSDT1+116
   726                           ;smgs_rs9b.c: 220: RSDT1.inCWMG=GetRSRBuf(37);
   727  00AB8A  0E25               	movlw	37
   728  00AB8C  ECA6  F07B         	call	_GetRSRBuf
   729  00AB90  CFE8 F3A2          	movff	wreg,_RSDT1+117
   730                           ;smgs_rs9b.c: 221: RSDT1.inCWTM=GetRSRBuf(38);
   731  00AB94  0E26               	movlw	38
   732  00AB96  ECA6  F07B         	call	_GetRSRBuf
   733  00AB9A  CFE8 F3A3          	movff	wreg,_RSDT1+118
   734                           ;smgs_rs9b.c: 222: RSDT1.RD_KNF=1;
   735  00AB9E  0103               	movlb	(_RSDT1+1) shr (0+8)
   736  00ABA0  832E               	bsf	(_RSDT1+1)& (0+255),1,b
   737                           ;smgs_rs9b.c: 223: }
   738  00ABA2  0012               	return	
   739  00ABA4                     l52:
   740                           ;smgs_rs9b.c: 225: }
   741                           ;smgs_rs9b.c: 229: {
   742  00ABA4  0103               	movlb	(_RSDT1+1) shr (0+8)
   743  00ABA6  952E               	bcf	(_RSDT1+1)& (0+255),2,b
   744                           ;smgs_rs9b.c: 232: RSDT1.inLIDN=GetRSRBuf(3);
   745  00ABA8  0E03               	movlw	3
   746  00ABAA  ECA6  F07B         	call	_GetRSRBuf
   747  00ABAE  CFE8 F3A4          	movff	wreg,_RSDT1+119
   748                           ;smgs_rs9b.c: 233: switch(RSDT1.inLIDN)
   749  00ABB2  D22A               	goto	l54
   750  00ABB4                     l55:
   751                           ;smgs_rs9b.c: 234: {
   752                           ;smgs_rs9b.c: 237: {
   753  00ABB4  D23E               	goto	l53
   754  00ABB6                     l56:
   755                           ;smgs_rs9b.c: 239: }
   756                           ;smgs_rs9b.c: 241: {
   757  00ABB6  0E04               	movlw	4
   758  00ABB8  ECA6  F07B         	call	_GetRSRBuf
   759  00ABBC  CFE8 F3A5          	movff	wreg,_RSDT1+120
   760                           ;smgs_rs9b.c: 245: RSDT1.outPKERR=0;
   761  00ABC0  0103               	movlb	(_RSDT1+72) shr (0+8)
   762  00ABC2  6B75               	clrf	(_RSDT1+72)& (0+255),b
   763                           ;smgs_rs9b.c: 246: if(RSDT1.inLDTA1<31)
   764  00ABC4  0E1F               	movlw	31
   765  00ABC6  0103               	movlb	(_RSDT1+120) shr (0+8)
   766  00ABC8  61A5               	cpfslt	(_RSDT1+120)& (0+255),b
   767  00ABCA  D1F5               	goto	l61
   768                           ;smgs_rs9b.c: 247: {
   769  00ABCC  C3A5  FFE8         	movff	_RSDT1+120,wreg
   770  00ABD0  0D06               	mullw	6
   771  00ABD2  0E00               	movlw	low _MinMax
   772  00ABD4  24F3               	addwf	prodl,w,c
   773  00ABD6  6EE9               	movwf	fsr0l,c
   774  00ABD8  0E01               	movlw	high _MinMax
   775  00ABDA  20F4               	addwfc	prodh,w,c
   776  00ABDC  6EEA               	movwf	fsr0h,c
   777  00ABDE  CFEE F0B7          	movff	postinc0,?_eeprom_read
   778  00ABE2  CFED F0B8          	movff	postdec0,?_eeprom_read+1
   779  00ABE6  EC2F  F007         	call	_eeprom_read	;wreg free
   780  00ABEA  CFE8 F373          	movff	wreg,_RSDT1+70
   781                           ;smgs_rs9b.c: 249: }
   782  00ABEE  D221               	goto	l53
   783                           ;smgs_rs9b.c: 250: else RSDT1.outPKERR=1;
   784                           ;smgs_rs9b.c: 251: break;
   785  00ABF0                     l59:
   786                           ;smgs_rs9b.c: 252: }
   787                           ;smgs_rs9b.c: 255: {
   788  00ABF0  0E04               	movlw	4
   789  00ABF2  ECA6  F07B         	call	_GetRSRBuf
   790  00ABF6  CFE8 F3A5          	movff	wreg,_RSDT1+120
   791                           ;smgs_rs9b.c: 257: RSDT1.inLDTA2=GetRSRBuf(5);
   792  00ABFA  0E05               	movlw	5
   793  00ABFC  ECA6  F07B         	call	_GetRSRBuf
   794  00AC00  CFE8 F3A6          	movff	wreg,_RSDT1+121
   795                           ;smgs_rs9b.c: 258: RSDT1.outPKERR=0;
   796  00AC04  0103               	movlb	(_RSDT1+72) shr (0+8)
   797  00AC06  6B75               	clrf	(_RSDT1+72)& (0+255),b
   798                           ;smgs_rs9b.c: 259: if(RSDT1.inLDTA1<31)
   799  00AC08  0E1F               	movlw	31
   800  00AC0A  0103               	movlb	(_RSDT1+120) shr (0+8)
   801  00AC0C  61A5               	cpfslt	(_RSDT1+120)& (0+255),b
   802  00AC0E  D1D3               	goto	l61
   803                           ;smgs_rs9b.c: 260: {
   804  00AC10  C3A5  FFE8         	movff	_RSDT1+120,wreg
   805  00AC14  0D06               	mullw	6
   806  00AC16  0E02               	movlw	low (_MinMax+2)
   807  00AC18  24F3               	addwf	prodl,w,c
   808  00AC1A  6EE9               	movwf	fsr0l,c
   809  00AC1C  0E01               	movlw	high (_MinMax+2)
   810  00AC1E  20F4               	addwfc	prodh,w,c
   811  00AC20  6EEA               	movwf	fsr0h,c
   812  00AC22  CFEE F002          	movff	postinc0,btemp+2
   813  00AC26  CFED F003          	movff	postdec0,btemp+3
   814  00AC2A  C3A6  F000         	movff	_RSDT1+121,btemp
   815  00AC2E  6A01               	clrf	btemp+1,c
   816  00AC30  5003               	movf	btemp+3,w,c
   817  00AC32  5C01               	subwf	btemp+1,w,c
   818  00AC34  E102               	bnz	u95
   819  00AC36  5002               	movf	btemp+2,w,c
   820  00AC38  5C00               	subwf	btemp,w,c
   821  00AC3A                     u95:
   822  00AC3A  E201 D1BC          	bnc	l61
   823  00AC3E  C3A6  F000         	movff	_RSDT1+121,btemp
   824  00AC42  6A01               	clrf	btemp+1,c
   825  00AC44  C3A5  FFE8         	movff	_RSDT1+120,wreg
   826  00AC48  0D06               	mullw	6
   827  00AC4A  0E04               	movlw	low (_MinMax+4)
   828  00AC4C  24F3               	addwf	prodl,w,c
   829  00AC4E  6EE9               	movwf	fsr0l,c
   830  00AC50  0E01               	movlw	high (_MinMax+4)
   831  00AC52  20F4               	addwfc	prodh,w,c
   832  00AC54  6EEA               	movwf	fsr0h,c
   833  00AC56  CFEE F002          	movff	postinc0,btemp+2
   834  00AC5A  CFED F003          	movff	postdec0,btemp+3
   835  00AC5E  5001               	movf	btemp+1,w,c
   836  00AC60  5C03               	subwf	btemp+3,w,c
   837  00AC62  E102               	bnz	u105
   838  00AC64  5000               	movf	btemp,w,c
   839  00AC66  5C02               	subwf	btemp+2,w,c
   840  00AC68                     u105:
   841  00AC68  E201 D1A5          	bnc	l61
   842  00AC6C  D168               	goto	l63
   843                           ;smgs_rs9b.c: 262: {
   844  00AC6E                     l64:
   845                           ;smgs_rs9b.c: 264: {
   846                           ;smgs_rs9b.c: 266: {
   847  00AC6E  C3A5  FFE8         	movff	_RSDT1+120,wreg
   848  00AC72  0D06               	mullw	6
   849  00AC74  0E00               	movlw	low _MinMax
   850  00AC76  24F3               	addwf	prodl,w,c
   851  00AC78  6EE9               	movwf	fsr0l,c
   852  00AC7A  0E01               	movlw	high _MinMax
   853  00AC7C  20F4               	addwfc	prodh,w,c
   854  00AC7E  6EEA               	movwf	fsr0h,c
   855  00AC80  CFEE F0B7          	movff	postinc0,?_eeprom_read
   856  00AC84  CFED F0B8          	movff	postdec0,?_eeprom_read+1
   857  00AC88  EC2F  F007         	call	_eeprom_read	;wreg free
   858  00AC8C  6E00               	movwf	btemp,c
   859  00AC8E  C000  F002         	movff	btemp,btemp+2
   860  00AC92  6A03               	clrf	btemp+3,c
   861  00AC94  C3A6  FFE8         	movff	_RSDT1+121,wreg
   862  00AC98  1802               	xorwf	btemp+2,w,c
   863  00AC9A  E101               	bnz	u125
   864  00AC9C  5203               	movf	btemp+3,f,c
   865  00AC9E                     u125:
   866  00AC9E  E101 D176          	bz	l62
   867                           ;smgs_rs9b.c: 268: {
   868  00ACA2  0E01               	movlw	1
   869  00ACA4  ECA5  F07E         	call	_StartRTG
   870                           ;smgs_rs9b.c: 270: ClearEETA();
   871  00ACA8  ECD9  F042         	call	_ClearEETA	;wreg free
   872                           ;smgs_rs9b.c: 271: eeprom_write(MinMax[RSDT1.inL
      +                          DTA1].addr,RSDT1.inLDTA2);
   873  00ACAC  C3A5  FFE8         	movff	_RSDT1+120,wreg
   874  00ACB0  0D06               	mullw	6
   875  00ACB2  0E00               	movlw	low _MinMax
   876  00ACB4  24F3               	addwf	prodl,w,c
   877  00ACB6  6EE9               	movwf	fsr0l,c
   878  00ACB8  0E01               	movlw	high _MinMax
   879  00ACBA  20F4               	addwfc	prodh,w,c
   880  00ACBC  6EEA               	movwf	fsr0h,c
   881  00ACBE  CFEE F0B7          	movff	postinc0,?_eeprom_write
   882  00ACC2  CFED F0B8          	movff	postdec0,?_eeprom_write+1
   883  00ACC6  C3A6  F0B9         	movff	_RSDT1+121,?_eeprom_write+2
   884  00ACCA  EC5C  F006         	call	_eeprom_write	;wreg free
   885                           ;smgs_rs9b.c: 272: }
   886  00ACCE  D15F               	goto	l62
   887  00ACD0                     l66:
   888                           ;smgs_rs9b.c: 274: }
   889                           ;smgs_rs9b.c: 276: {
   890  00ACD0  C3A5  FFE8         	movff	_RSDT1+120,wreg
   891  00ACD4  0D06               	mullw	6
   892  00ACD6  0E00               	movlw	low _MinMax
   893  00ACD8  24F3               	addwf	prodl,w,c
   894  00ACDA  6EE9               	movwf	fsr0l,c
   895  00ACDC  0E01               	movlw	high _MinMax
   896  00ACDE  20F4               	addwfc	prodh,w,c
   897  00ACE0  6EEA               	movwf	fsr0h,c
   898  00ACE2  CFEE F0B7          	movff	postinc0,?_eeprom_read
   899  00ACE6  CFED F0B8          	movff	postdec0,?_eeprom_read+1
   900  00ACEA  EC2F  F007         	call	_eeprom_read	;wreg free
   901  00ACEE  6E00               	movwf	btemp,c
   902  00ACF0  C000  F002         	movff	btemp,btemp+2
   903  00ACF4  6A03               	clrf	btemp+3,c
   904  00ACF6  C3A6  FFE8         	movff	_RSDT1+121,wreg
   905  00ACFA  1802               	xorwf	btemp+2,w,c
   906  00ACFC  E101               	bnz	u135
   907  00ACFE  5203               	movf	btemp+3,f,c
   908  00AD00                     u135:
   909  00AD00  E101 D145          	bz	l62
   910                           ;smgs_rs9b.c: 278: {
   911  00AD04  EE01  F066         	lfsr	0,_MinMax+102
   912  00AD08  CFEE F0B7          	movff	postinc0,?_eeprom_read
   913  00AD0C  CFED F0B8          	movff	postdec0,?_eeprom_read+1
   914  00AD10  EC2F  F007         	call	_eeprom_read	;wreg free
   915  00AD14  0100               	movlb	__Lparam shr (0+8)
   916  00AD16  6FAA               	movwf	?a_SaveRSToData^(__Lparam& (0+65280)),b
   917                           ;smgs_rs9b.c: 280: if(RSDT1.inLDTA2>bf)
   918  00AD18  C3A6  FFE8         	movff	_RSDT1+121,wreg
   919  00AD1C  61AA               	cpfslt	?a_SaveRSToData^(__Lparam& (0+65280)),b
   920  00AD1E  D028               	goto	l68
   921                           ;smgs_rs9b.c: 281: {
   922  00AD20  C3A5  FFE8         	movff	_RSDT1+120,wreg
   923  00AD24  0D06               	mullw	6
   924  00AD26  0E02               	movlw	low (_MinMax+2)
   925  00AD28  24F3               	addwf	prodl,w,c
   926  00AD2A  6EE9               	movwf	fsr0l,c
   927  00AD2C  0E01               	movlw	high (_MinMax+2)
   928  00AD2E  20F4               	addwfc	prodh,w,c
   929  00AD30  6EEA               	movwf	fsr0h,c
   930  00AD32  CFEE F002          	movff	postinc0,btemp+2
   931  00AD36  CFED F003          	movff	postdec0,btemp+3
   932  00AD3A  C0AA  F000         	movff	?a_SaveRSToData,btemp
   933  00AD3E  6A01               	clrf	btemp+1,c
   934  00AD40  5003               	movf	btemp+3,w,c
   935  00AD42  5C01               	subwf	btemp+1,w,c
   936  00AD44  E102               	bnz	u155
   937  00AD46  5002               	movf	btemp+2,w,c
   938  00AD48  5C00               	subwf	btemp,w,c
   939  00AD4A                     u155:
   940  00AD4A  E312               	bnc	l68
   941                           ;smgs_rs9b.c: 283: {
   942  00AD4C  C3A5  FFE8         	movff	_RSDT1+120,wreg
   943  00AD50  0D06               	mullw	6
   944  00AD52  0E00               	movlw	low _MinMax
   945  00AD54  24F3               	addwf	prodl,w,c
   946  00AD56  6EE9               	movwf	fsr0l,c
   947  00AD58  0E01               	movlw	high _MinMax
   948  00AD5A  20F4               	addwfc	prodh,w,c
   949  00AD5C  6EEA               	movwf	fsr0h,c
   950  00AD5E  CFEE F0B7          	movff	postinc0,?_eeprom_write
   951  00AD62  CFED F0B8          	movff	postdec0,?_eeprom_write+1
   952  00AD66  51AA               	movf	?a_SaveRSToData^(__Lparam& (0+65280)),w
   953  00AD68  6FB9               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
   954  00AD6A  EC5C  F006         	call	_eeprom_write	;wreg free
   955                           ;smgs_rs9b.c: 286: break;
   956  00AD6E  D10F               	goto	l62
   957  00AD70                     l68:
   958                           ;smgs_rs9b.c: 287: }
   959  00AD70  C3A5  FFE8         	movff	_RSDT1+120,wreg
   960  00AD74  0D06               	mullw	6
   961  00AD76  0E00               	movlw	low _MinMax
   962  00AD78  24F3               	addwf	prodl,w,c
   963  00AD7A  6EE9               	movwf	fsr0l,c
   964  00AD7C  0E01               	movlw	high _MinMax
   965  00AD7E  20F4               	addwfc	prodh,w,c
   966  00AD80  6EEA               	movwf	fsr0h,c
   967  00AD82  CFEE F0B7          	movff	postinc0,?_eeprom_write
   968  00AD86  CFED F0B8          	movff	postdec0,?_eeprom_write+1
   969  00AD8A  C3A6  F0B9         	movff	_RSDT1+121,?_eeprom_write+2
   970  00AD8E  EC5C  F006         	call	_eeprom_write	;wreg free
   971                           ;smgs_rs9b.c: 290: }
   972  00AD92  D0FD               	goto	l62
   973  00AD94                     l70:
   974                           ;smgs_rs9b.c: 292: }
   975                           ;smgs_rs9b.c: 294: {
   976  00AD94  C3A5  FFE8         	movff	_RSDT1+120,wreg
   977  00AD98  0D06               	mullw	6
   978  00AD9A  0E00               	movlw	low _MinMax
   979  00AD9C  24F3               	addwf	prodl,w,c
   980  00AD9E  6EE9               	movwf	fsr0l,c
   981  00ADA0  0E01               	movlw	high _MinMax
   982  00ADA2  20F4               	addwfc	prodh,w,c
   983  00ADA4  6EEA               	movwf	fsr0h,c
   984  00ADA6  CFEE F0B7          	movff	postinc0,?_eeprom_read
   985  00ADAA  CFED F0B8          	movff	postdec0,?_eeprom_read+1
   986  00ADAE  EC2F  F007         	call	_eeprom_read	;wreg free
   987  00ADB2  6E00               	movwf	btemp,c
   988  00ADB4  C000  F002         	movff	btemp,btemp+2
   989  00ADB8  6A03               	clrf	btemp+3,c
   990  00ADBA  C3A6  FFE8         	movff	_RSDT1+121,wreg
   991  00ADBE  1802               	xorwf	btemp+2,w,c
   992  00ADC0  E101               	bnz	u165
   993  00ADC2  5203               	movf	btemp+3,f,c
   994  00ADC4                     u165:
   995  00ADC4  E101 D0E3          	bz	l62
   996                           ;smgs_rs9b.c: 296: {
   997  00ADC8  EE01  F04E         	lfsr	0,_MinMax+78
   998  00ADCC  CFEE F0B7          	movff	postinc0,?_eeprom_read
   999  00ADD0  CFED F0B8          	movff	postdec0,?_eeprom_read+1
  1000  00ADD4  EC2F  F007         	call	_eeprom_read	;wreg free
  1001  00ADD8  0100               	movlb	__Lparam shr (0+8)
  1002  00ADDA  6FAA               	movwf	?a_SaveRSToData^(__Lparam& (0+65280)),b
  1003                           ;smgs_rs9b.c: 298: if(RSDT1.inLDTA2<bf)
  1004  00ADDC  51AA               	movf	?a_SaveRSToData^(__Lparam& (0+65280)),w
  1005  00ADDE  0103               	movlb	(_RSDT1+121) shr (0+8)
  1006  00ADE0  61A6               	cpfslt	(_RSDT1+121)& (0+255),b
  1007  00ADE2  D029               	goto	l72
  1008                           ;smgs_rs9b.c: 299: {
  1009  00ADE4  C0AA  F000         	movff	?a_SaveRSToData,btemp
  1010  00ADE8  6A01               	clrf	btemp+1,c
  1011  00ADEA  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1012  00ADEE  0D06               	mullw	6
  1013  00ADF0  0E04               	movlw	low (_MinMax+4)
  1014  00ADF2  24F3               	addwf	prodl,w,c
  1015  00ADF4  6EE9               	movwf	fsr0l,c
  1016  00ADF6  0E01               	movlw	high (_MinMax+4)
  1017  00ADF8  20F4               	addwfc	prodh,w,c
  1018  00ADFA  6EEA               	movwf	fsr0h,c
  1019  00ADFC  CFEE F002          	movff	postinc0,btemp+2
  1020  00AE00  CFED F003          	movff	postdec0,btemp+3
  1021  00AE04  5001               	movf	btemp+1,w,c
  1022  00AE06  5C03               	subwf	btemp+3,w,c
  1023  00AE08  E102               	bnz	u185
  1024  00AE0A  5000               	movf	btemp,w,c
  1025  00AE0C  5C02               	subwf	btemp+2,w,c
  1026  00AE0E                     u185:
  1027  00AE0E  E313               	bnc	l72
  1028                           ;smgs_rs9b.c: 301: {
  1029  00AE10  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1030  00AE14  0D06               	mullw	6
  1031  00AE16  0E00               	movlw	low _MinMax
  1032  00AE18  24F3               	addwf	prodl,w,c
  1033  00AE1A  6EE9               	movwf	fsr0l,c
  1034  00AE1C  0E01               	movlw	high _MinMax
  1035  00AE1E  20F4               	addwfc	prodh,w,c
  1036  00AE20  6EEA               	movwf	fsr0h,c
  1037  00AE22  CFEE F0B7          	movff	postinc0,?_eeprom_write
  1038  00AE26  CFED F0B8          	movff	postdec0,?_eeprom_write+1
  1039  00AE2A  0100               	movlb	__Lparam shr (0+8)
  1040  00AE2C  51AA               	movf	?a_SaveRSToData^(__Lparam& (0+65280)),w
  1041  00AE2E  6FB9               	movwf	(?_eeprom_write+2)^(__Lparam& (0+65280)),
      +                          b
  1042  00AE30  EC5C  F006         	call	_eeprom_write	;wreg free
  1043                           ;smgs_rs9b.c: 304: break;
  1044  00AE34  D0AC               	goto	l62
  1045  00AE36                     l72:
  1046                           ;smgs_rs9b.c: 305: }
  1047  00AE36  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1048  00AE3A  0D06               	mullw	6
  1049  00AE3C  0E00               	movlw	low _MinMax
  1050  00AE3E  24F3               	addwf	prodl,w,c
  1051  00AE40  6EE9               	movwf	fsr0l,c
  1052  00AE42  0E01               	movlw	high _MinMax
  1053  00AE44  20F4               	addwfc	prodh,w,c
  1054  00AE46  6EEA               	movwf	fsr0h,c
  1055  00AE48  CFEE F0B7          	movff	postinc0,?_eeprom_write
  1056  00AE4C  CFED F0B8          	movff	postdec0,?_eeprom_write+1
  1057  00AE50  C3A6  F0B9         	movff	_RSDT1+121,?_eeprom_write+2
  1058  00AE54  EC5C  F006         	call	_eeprom_write	;wreg free
  1059                           ;smgs_rs9b.c: 308: }
  1060  00AE58  D09A               	goto	l62
  1061  00AE5A                     l74:
  1062                           ;smgs_rs9b.c: 310: }
  1063                           ;smgs_rs9b.c: 312: {
  1064  00AE5A  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1065  00AE5E  0D06               	mullw	6
  1066  00AE60  0E00               	movlw	low _MinMax
  1067  00AE62  24F3               	addwf	prodl,w,c
  1068  00AE64  6EE9               	movwf	fsr0l,c
  1069  00AE66  0E01               	movlw	high _MinMax
  1070  00AE68  20F4               	addwfc	prodh,w,c
  1071  00AE6A  6EEA               	movwf	fsr0h,c
  1072  00AE6C  CFEE F0B7          	movff	postinc0,?_eeprom_read
  1073  00AE70  CFED F0B8          	movff	postdec0,?_eeprom_read+1
  1074  00AE74  EC2F  F007         	call	_eeprom_read	;wreg free
  1075  00AE78  6E00               	movwf	btemp,c
  1076  00AE7A  C000  F002         	movff	btemp,btemp+2
  1077  00AE7E  6A03               	clrf	btemp+3,c
  1078  00AE80  C3A6  FFE8         	movff	_RSDT1+121,wreg
  1079  00AE84  1802               	xorwf	btemp+2,w,c
  1080  00AE86  E101               	bnz	u195
  1081  00AE88  5203               	movf	btemp+3,f,c
  1082  00AE8A                     u195:
  1083  00AE8A  E101 D080          	bz	l62
  1084                           ;smgs_rs9b.c: 314: {
  1085  00AE8E  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1086  00AE92  0D06               	mullw	6
  1087  00AE94  0E00               	movlw	low _MinMax
  1088  00AE96  24F3               	addwf	prodl,w,c
  1089  00AE98  6EE9               	movwf	fsr0l,c
  1090  00AE9A  0E01               	movlw	high _MinMax
  1091  00AE9C  20F4               	addwfc	prodh,w,c
  1092  00AE9E  6EEA               	movwf	fsr0h,c
  1093  00AEA0  CFEE F0B7          	movff	postinc0,?_eeprom_write
  1094  00AEA4  CFED F0B8          	movff	postdec0,?_eeprom_write+1
  1095  00AEA8  C3A6  F0B9         	movff	_RSDT1+121,?_eeprom_write+2
  1096  00AEAC  EC5C  F006         	call	_eeprom_write	;wreg free
  1097                           ;smgs_rs9b.c: 316: SetDefFan(RSDT1.inLDTA2);
  1098  00AEB0  C3A6  FFE8         	movff	_RSDT1+121,wreg
  1099  00AEB4  EC73  F05E         	call	_SetDefFan
  1100                           ;smgs_rs9b.c: 317: }
  1101  00AEB8  D06A               	goto	l62
  1102  00AEBA                     l76:
  1103                           ;smgs_rs9b.c: 319: }
  1104                           ;smgs_rs9b.c: 321: {
  1105  00AEBA  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1106  00AEBE  0D06               	mullw	6
  1107  00AEC0  0E00               	movlw	low _MinMax
  1108  00AEC2  24F3               	addwf	prodl,w,c
  1109  00AEC4  6EE9               	movwf	fsr0l,c
  1110  00AEC6  0E01               	movlw	high _MinMax
  1111  00AEC8  20F4               	addwfc	prodh,w,c
  1112  00AECA  6EEA               	movwf	fsr0h,c
  1113  00AECC  CFEE F0B7          	movff	postinc0,?_eeprom_read
  1114  00AED0  CFED F0B8          	movff	postdec0,?_eeprom_read+1
  1115  00AED4  EC2F  F007         	call	_eeprom_read	;wreg free
  1116  00AED8  6E00               	movwf	btemp,c
  1117  00AEDA  C000  F002         	movff	btemp,btemp+2
  1118  00AEDE  6A03               	clrf	btemp+3,c
  1119  00AEE0  C3A6  FFE8         	movff	_RSDT1+121,wreg
  1120  00AEE4  1802               	xorwf	btemp+2,w,c
  1121  00AEE6  E101               	bnz	u205
  1122  00AEE8  5203               	movf	btemp+3,f,c
  1123  00AEEA                     u205:
  1124  00AEEA  E051               	bz	l62
  1125                           ;smgs_rs9b.c: 323: {
  1126  00AEEC  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1127  00AEF0  0D06               	mullw	6
  1128  00AEF2  0E00               	movlw	low _MinMax
  1129  00AEF4  24F3               	addwf	prodl,w,c
  1130  00AEF6  6EE9               	movwf	fsr0l,c
  1131  00AEF8  0E01               	movlw	high _MinMax
  1132  00AEFA  20F4               	addwfc	prodh,w,c
  1133  00AEFC  6EEA               	movwf	fsr0h,c
  1134  00AEFE  CFEE F0B7          	movff	postinc0,?_eeprom_write
  1135  00AF02  CFED F0B8          	movff	postdec0,?_eeprom_write+1
  1136  00AF06  C3A6  F0B9         	movff	_RSDT1+121,?_eeprom_write+2
  1137  00AF0A  EC5C  F006         	call	_eeprom_write	;wreg free
  1138                           ;smgs_rs9b.c: 325: StartRTS(15);
  1139  00AF0E  0E0F               	movlw	15
  1140  00AF10  EC51  F07E         	call	_StartRTS
  1141                           ;smgs_rs9b.c: 326: M._SYNCH_PGD=1;
  1142  00AF14  0103               	movlb	(_M+8) shr (0+8)
  1143  00AF16  850E               	bsf	(_M+8)& (0+255),2,b
  1144                           ;smgs_rs9b.c: 327: }
  1145  00AF18  D03A               	goto	l62
  1146  00AF1A                     u210:
  1147  00AF1A  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1148  00AF1E  0D06               	mullw	6
  1149  00AF20  0E00               	movlw	low _MinMax
  1150  00AF22  24F3               	addwf	prodl,w,c
  1151  00AF24  6EE9               	movwf	fsr0l,c
  1152  00AF26  0E01               	movlw	high _MinMax
  1153  00AF28  20F4               	addwfc	prodh,w,c
  1154  00AF2A  6EEA               	movwf	fsr0h,c
  1155  00AF2C  CFEE F0B7          	movff	postinc0,?_eeprom_write
  1156  00AF30  CFED F0B8          	movff	postdec0,?_eeprom_write+1
  1157  00AF34  C3A6  F0B9         	movff	_RSDT1+121,?_eeprom_write+2
  1158  00AF38  EC5C  F006         	call	_eeprom_write	;wreg free
  1159                           ;smgs_rs9b.c: 332: break;
  1160  00AF3C  D028               	goto	l62
  1161  00AF3E                     l63:
  1162  00AF3E  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1163  00AF42  0A09               	xorlw	9
  1164  00AF44  E101 D693          	bz	l64
  1165  00AF48  0A04               	xorlw	4
  1166  00AF4A  E101 D6C1          	bz	l66
  1167  00AF4E  0A1C               	xorlw	28
  1168  00AF50  E101 D720          	bz	l70
  1169  00AF54  0A07               	xorlw	7
  1170  00AF56  E081               	bz	l74
  1171  00AF58  0A0F               	xorlw	15
  1172  00AF5A  E0AF               	bz	l76
  1173                           ;smgs_rs9b.c: 329: }
  1174                           ;smgs_rs9b.c: 331: if(RSDT1.inLDTA2!=eeprom_read
      +                          (MinMax[RSDT1.inLDTA1].addr)) eeprom_write(MinMa
      +                          x[RSDT1.inLDTA1].addr,RSDT1.inLDTA2);
  1175  00AF5C  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1176  00AF60  0D06               	mullw	6
  1177  00AF62  0E00               	movlw	low _MinMax
  1178  00AF64  24F3               	addwf	prodl,w,c
  1179  00AF66  6EE9               	movwf	fsr0l,c
  1180  00AF68  0E01               	movlw	high _MinMax
  1181  00AF6A  20F4               	addwfc	prodh,w,c
  1182  00AF6C  6EEA               	movwf	fsr0h,c
  1183  00AF6E  CFEE F0B7          	movff	postinc0,?_eeprom_read
  1184  00AF72  CFED F0B8          	movff	postdec0,?_eeprom_read+1
  1185  00AF76  EC2F  F007         	call	_eeprom_read	;wreg free
  1186  00AF7A  6E00               	movwf	btemp,c
  1187  00AF7C  C000  F002         	movff	btemp,btemp+2
  1188  00AF80  6A03               	clrf	btemp+3,c
  1189  00AF82  C3A6  FFE8         	movff	_RSDT1+121,wreg
  1190  00AF86  1802               	xorwf	btemp+2,w,c
  1191  00AF88  E101               	bnz	u215
  1192  00AF8A  5203               	movf	btemp+3,f,c
  1193  00AF8C                     u215:
  1194  00AF8C  E1C6               	bnz	u210
  1195  00AF8E                     l62:
  1196                           ;smgs_rs9b.c: 334: RdEEParam();
  1197  00AF8E  EC2A  F03F         	call	_RdEEParam	;wreg free
  1198                           ;smgs_rs9b.c: 335: RSDT1.outWPKNF=eeprom_read(Mi
      +                          nMax[RSDT1.inLDTA1].addr);
  1199  00AF92  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1200  00AF96  0D06               	mullw	6
  1201  00AF98  0E00               	movlw	low _MinMax
  1202  00AF9A  24F3               	addwf	prodl,w,c
  1203  00AF9C  6EE9               	movwf	fsr0l,c
  1204  00AF9E  0E01               	movlw	high _MinMax
  1205  00AFA0  20F4               	addwfc	prodh,w,c
  1206  00AFA2  6EEA               	movwf	fsr0h,c
  1207  00AFA4  CFEE F0B7          	movff	postinc0,?_eeprom_read
  1208  00AFA8  CFED F0B8          	movff	postdec0,?_eeprom_read+1
  1209  00AFAC  EC2F  F007         	call	_eeprom_read	;wreg free
  1210  00AFB0  CFE8 F374          	movff	wreg,_RSDT1+71
  1211                           ;smgs_rs9b.c: 336: }else RSDT1.outPKERR=1;
  1212  00AFB4  D03E               	goto	l53
  1213  00AFB6                     l61:
  1214  00AFB6  0E01               	movlw	1
  1215  00AFB8  CFE8 F375          	movff	wreg,_RSDT1+72
  1216                           ;smgs_rs9b.c: 337: }else RSDT1.outPKERR=1;
  1217                           ;smgs_rs9b.c: 338: break;
  1218  00AFBC                     l82:
  1219                           ;smgs_rs9b.c: 339: }
  1220                           ;smgs_rs9b.c: 341: {
  1221  00AFBC  D03A               	goto	l53
  1222  00AFBE                     l83:
  1223                           ;smgs_rs9b.c: 343: }
  1224                           ;smgs_rs9b.c: 345: {
  1225  00AFBE  0E04               	movlw	4
  1226  00AFC0  ECA6  F07B         	call	_GetRSRBuf
  1227  00AFC4  CFE8 F3A5          	movff	wreg,_RSDT1+120
  1228                           ;smgs_rs9b.c: 347: break;
  1229  00AFC8                     l84:
  1230                           ;smgs_rs9b.c: 348: }
  1231                           ;smgs_rs9b.c: 350: {
  1232  00AFC8  D034               	goto	l53
  1233  00AFCA                     l85:
  1234                           ;smgs_rs9b.c: 352: }
  1235                           ;smgs_rs9b.c: 354: {
  1236  00AFCA  EC14  F07E         	call	_ClrHFLG	;wreg free
  1237                           ;smgs_rs9b.c: 356: break;
  1238  00AFCE  D031               	goto	l53
  1239  00AFD0                     l86:
  1240                           ;smgs_rs9b.c: 357: }
  1241                           ;smgs_rs9b.c: 359: {
  1242  00AFD0  0E04               	movlw	4
  1243  00AFD2  ECA6  F07B         	call	_GetRSRBuf
  1244  00AFD6  CFE8 F3A5          	movff	wreg,_RSDT1+120
  1245                           ;smgs_rs9b.c: 361: if((RSDT1.inLDTA1>=1)&&(RSDT1
      +                          .inLDTA1<=5))
  1246  00AFDA  0E00               	movlw	0
  1247  00AFDC  0103               	movlb	(_RSDT1+120) shr (0+8)
  1248  00AFDE  65A5               	cpfsgt	(_RSDT1+120)& (0+255),b
  1249  00AFE0  D00C               	goto	l87
  1250  00AFE2  0E06               	movlw	6
  1251  00AFE4  61A5               	cpfslt	(_RSDT1+120)& (0+255),b
  1252  00AFE6  D009               	goto	l87
  1253                           ;smgs_rs9b.c: 362: {
  1254  00AFE8  ECD7  F042         	call	_ReadEEALIN	;wreg free
  1255  00AFEC  0103               	movlb	(_RSDT1+120) shr (0+8)
  1256  00AFEE  19A5               	xorwf	(_RSDT1+120)& (0+255),w,b
  1257  00AFF0  E004               	bz	l87
  1258                           ;smgs_rs9b.c: 364: {
  1259  00AFF2  C3A5  FFE8         	movff	_RSDT1+120,wreg
  1260  00AFF6  ECBF  F042         	call	_WriteEEALIN
  1261  00AFFA                     l87:
  1262                           ;smgs_rs9b.c: 366: }
  1263  00AFFA  ECD7  F042         	call	_ReadEEALIN	;wreg free
  1264  00AFFE  CFE8 F2CC          	movff	wreg,_DtKNF+30
  1265                           ;smgs_rs9b.c: 369: RSDT1.outALIN=DtKNF.alin;
  1266  00B002  C2CC  F366         	movff	_DtKNF+30,_RSDT1+57
  1267                           ;smgs_rs9b.c: 370: break;
  1268  00B006  D015               	goto	l53
  1269  00B008                     l54:
  1270  00B008  C3A4  FFE8         	movff	_RSDT1+119,wreg
  1271  00B00C  0A01               	xorlw	1
  1272  00B00E  E101 D5D1          	bz	l55
  1273  00B012  0A03               	xorlw	3
  1274  00B014  E101 D5CF          	bz	l56
  1275  00B018  0A01               	xorlw	1
  1276  00B01A  E0D0               	bz	l82
  1277  00B01C  0A07               	xorlw	7
  1278  00B01E  E0CF               	bz	l83
  1279  00B020  0A01               	xorlw	1
  1280  00B022  E0D2               	bz	l84
  1281  00B024  0A7A               	xorlw	122
  1282  00B026  E0D4               	bz	l86
  1283  00B028  0AFF               	xorlw	255
  1284  00B02A  E101 D5E1          	bz	l59
  1285  00B02E  0A01               	xorlw	1
  1286  00B030  E0CC               	bz	l85
  1287  00B032                     l53:
  1288                           ;smgs_rs9b.c: 373: RSDT1.RD_LIN=1;
  1289  00B032  0103               	movlb	(_RSDT1+1) shr (0+8)
  1290  00B034  852E               	bsf	(_RSDT1+1)& (0+255),2,b
  1291                           ;smgs_rs9b.c: 374: break;
  1292  00B036  0012               	return	
  1293  00B038                     l18:
  1294  00B038  C32D  FFE8         	movff	_RSDT1,wreg
  1295  00B03C  0A01               	xorlw	1
  1296  00B03E  E102 EFD8  F053    	bz	l19
  1297  00B044  0A03               	xorlw	3
  1298  00B046  E101 D42D          	bz	l29
  1299  00B04A  0A01               	xorlw	1
  1300  00B04C  E101 D5AA          	bz	l52
  1301  00B050  0A07               	xorlw	7
  1302  00B052  E102 EF0B  F054    	bz	l22
  1303  00B058  0A01               	xorlw	1
  1304  00B05A  E101 D4D5          	bz	l42
  1305  00B05E  0012               	return	
  1306                           ;smgs_rs9b.c: 379: }
  1307  00B060                     __end_of_SaveRSToData:
  1308                           ;smgs_rs9b.c: 382: void SaveDataToRS(unsigned ch
      +                          ar tDTA)
  1309                           ;smgs_rs9b.c: 383: {
  1310  00B060                     _SaveDataToRS:
  1311  000000                     
  1312                           ; _tDTA loaded to fsr2l
  1313  00B060  6ED9               	movwf	fsr2l,c
  1314                           ;smgs_rs9b.c: 384: volatile unsigned char ndat,i
      +                          ,nr;
  1315  00B062  EFF5  F05C         	goto	l91
  1316  00B066                     l92:
  1317                           ;smgs_rs9b.c: 390: {
  1318                           ;smgs_rs9b.c: 392: {
  1319  00B066  0E04               	movlw	4
  1320  00B068  0100               	movlb	__Lparam shr (0+8)
  1321  00B06A  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1322                           ;smgs_rs9b.c: 394: chkndat=SetNDatCHK(ndat);
  1323  00B06C  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1324  00B06E  EC22  F07C         	call	_SetNDatCHK
  1325  00B072  0100               	movlb	__Lparam shr (0+8)
  1326  00B074  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  1327                           ;smgs_rs9b.c: 396: SetRSTBuf(0,0x11);
  1328  00B076  0E11               	movlw	17
  1329  00B078  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1330  00B07A  0E00               	movlw	0
  1331  00B07C  EC87  F07B         	call	_SetRSTBuf
  1332                           ;smgs_rs9b.c: 397: SetRSTBuf(1,chkndat);
  1333  00B080  0100               	movlb	__Lparam shr (0+8)
  1334  00B082  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  1335  00B084  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1336  00B086  0E01               	movlw	1
  1337  00B088  EC87  F07B         	call	_SetRSTBuf
  1338                           ;smgs_rs9b.c: 398: SetRSTBuf(2,0);
  1339  00B08C  0100               	movlb	__Lparam shr (0+8)
  1340  00B08E  6BAF               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1341  00B090  0E02               	movlw	2
  1342  00B092  EF87  F07B         	goto	_SetRSTBuf
  1343                           ;smgs_rs9b.c: 400: break;
  1344  00B096                     l93:
  1345                           ;smgs_rs9b.c: 401: }
  1346                           ;smgs_rs9b.c: 403: {
  1347  00B096  0E1F               	movlw	31
  1348  00B098  0100               	movlb	__Lparam shr (0+8)
  1349  00B09A  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1350                           ;smgs_rs9b.c: 405: chkndat=SetNDatCHK(ndat);
  1351  00B09C  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1352  00B09E  EC22  F07C         	call	_SetNDatCHK
  1353  00B0A2  0100               	movlb	__Lparam shr (0+8)
  1354  00B0A4  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  1355                           ;smgs_rs9b.c: 406: SetRSTBuf(0,0x11);
  1356  00B0A6  0E11               	movlw	17
  1357  00B0A8  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1358  00B0AA  0E00               	movlw	0
  1359  00B0AC  EC87  F07B         	call	_SetRSTBuf
  1360                           ;smgs_rs9b.c: 407: SetRSTBuf(1,chkndat);
  1361  00B0B0  0100               	movlb	__Lparam shr (0+8)
  1362  00B0B2  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  1363  00B0B4  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1364  00B0B6  0E01               	movlw	1
  1365  00B0B8  EC87  F07B         	call	_SetRSTBuf
  1366                           ;smgs_rs9b.c: 408: SetRSTBuf(2,1);
  1367  00B0BC  0E01               	movlw	1
  1368  00B0BE  0100               	movlb	__Lparam shr (0+8)
  1369  00B0C0  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1370  00B0C2  0E02               	movlw	2
  1371  00B0C4  EC87  F07B         	call	_SetRSTBuf
  1372                           ;smgs_rs9b.c: 409: SetRSTBuf(3,RSDT1.outRDZ0);
  1373  00B0C8  C32F  F0AF         	movff	_RSDT1+2,?_SetRSTBuf
  1374  00B0CC  0E03               	movlw	3
  1375  00B0CE  EC87  F07B         	call	_SetRSTBuf
  1376                           ;smgs_rs9b.c: 410: SetRSTBuf(4,RSDT1.outRDZ1);
  1377  00B0D2  C330  F0AF         	movff	_RSDT1+3,?_SetRSTBuf
  1378  00B0D6  0E04               	movlw	4
  1379  00B0D8  EC87  F07B         	call	_SetRSTBuf
  1380                           ;smgs_rs9b.c: 411: SetRSTBuf(5,RSDT1.outSTAT0);
  1381  00B0DC  C344  F0AF         	movff	_RSDT1+23,?_SetRSTBuf
  1382  00B0E0  0E05               	movlw	5
  1383  00B0E2  EC87  F07B         	call	_SetRSTBuf
  1384                           ;smgs_rs9b.c: 412: SetRSTBuf(6,RSDT1.outSTAT1);
  1385  00B0E6  C345  F0AF         	movff	_RSDT1+24,?_SetRSTBuf
  1386  00B0EA  0E06               	movlw	6
  1387  00B0EC  EC87  F07B         	call	_SetRSTBuf
  1388                           ;smgs_rs9b.c: 413: SetRSTBuf(7,RSDT1.outSTAT2);
  1389  00B0F0  C346  F0AF         	movff	_RSDT1+25,?_SetRSTBuf
  1390  00B0F4  0E07               	movlw	7
  1391  00B0F6  EC87  F07B         	call	_SetRSTBuf
  1392                           ;smgs_rs9b.c: 414: SetRSTBuf(8,RSDT1.outSTAT3);
  1393  00B0FA  C347  F0AF         	movff	_RSDT1+26,?_SetRSTBuf
  1394  00B0FE  0E08               	movlw	8
  1395  00B100  EC87  F07B         	call	_SetRSTBuf
  1396                           ;smgs_rs9b.c: 415: SetRSTBuf(9,RSDT1.outCO);
  1397  00B104  C332  F0AF         	movff	_RSDT1+5,?_SetRSTBuf
  1398  00B108  0E09               	movlw	9
  1399  00B10A  EC87  F07B         	call	_SetRSTBuf
  1400                           ;smgs_rs9b.c: 416: SetRSTBuf(10,RSDT1.outCW);
  1401  00B10E  C333  F0AF         	movff	_RSDT1+6,?_SetRSTBuf
  1402  00B112  0E0A               	movlw	10
  1403  00B114  EC87  F07B         	call	_SetRSTBuf
  1404                           ;smgs_rs9b.c: 417: SetRSTBuf(11,RSDT1.outCS);
  1405  00B118  C334  F0AF         	movff	_RSDT1+7,?_SetRSTBuf
  1406  00B11C  0E0B               	movlw	11
  1407  00B11E  EC87  F07B         	call	_SetRSTBuf
  1408                           ;smgs_rs9b.c: 418: SetRSTBuf(12,RSDT1.outIN);
  1409  00B122  C335  F0AF         	movff	_RSDT1+8,?_SetRSTBuf
  1410  00B126  0E0C               	movlw	12
  1411  00B128  EC87  F07B         	call	_SetRSTBuf
  1412                           ;smgs_rs9b.c: 419: SetRSTBuf(13,RSDT1.outVNT);
  1413  00B12C  C336  F0AF         	movff	_RSDT1+9,?_SetRSTBuf
  1414  00B130  0E0D               	movlw	13
  1415  00B132  EC87  F07B         	call	_SetRSTBuf
  1416                           ;smgs_rs9b.c: 420: SetRSTBuf(14,RSDT1.outPCO);
  1417  00B136  C337  F0AF         	movff	_RSDT1+10,?_SetRSTBuf
  1418  00B13A  0E0E               	movlw	14
  1419  00B13C  EC87  F07B         	call	_SetRSTBuf
  1420                           ;smgs_rs9b.c: 421: SetRSTBuf(15,RSDT1.outPCOmn);
  1421  00B140  C339  F0AF         	movff	_RSDT1+12,?_SetRSTBuf
  1422  00B144  0E0F               	movlw	15
  1423  00B146  EC87  F07B         	call	_SetRSTBuf
  1424                           ;smgs_rs9b.c: 422: SetRSTBuf(16,RSDT1.outPCOmx);
  1425  00B14A  C33A  F0AF         	movff	_RSDT1+13,?_SetRSTBuf
  1426  00B14E  0E10               	movlw	16
  1427  00B150  EC87  F07B         	call	_SetRSTBuf
  1428                           ;smgs_rs9b.c: 423: SetRSTBuf(17,RSDT1.outPCW);
  1429  00B154  C338  F0AF         	movff	_RSDT1+11,?_SetRSTBuf
  1430  00B158  0E11               	movlw	17
  1431  00B15A  EC87  F07B         	call	_SetRSTBuf
  1432                           ;smgs_rs9b.c: 424: SetRSTBuf(18,RSDT1.outPCWmn);
  1433  00B15E  C33B  F0AF         	movff	_RSDT1+14,?_SetRSTBuf
  1434  00B162  0E12               	movlw	18
  1435  00B164  EC87  F07B         	call	_SetRSTBuf
  1436                           ;smgs_rs9b.c: 425: SetRSTBuf(19,RSDT1.outPCWmx);
  1437  00B168  C33C  F0AF         	movff	_RSDT1+15,?_SetRSTBuf
  1438  00B16C  0E13               	movlw	19
  1439  00B16E  EC87  F07B         	call	_SetRSTBuf
  1440                           ;smgs_rs9b.c: 426: SetRSTBuf(20,RSDT1.outPPCO);
  1441  00B172  C33D  F0AF         	movff	_RSDT1+16,?_SetRSTBuf
  1442  00B176  0E14               	movlw	20
  1443  00B178  EC87  F07B         	call	_SetRSTBuf
  1444                           ;smgs_rs9b.c: 427: SetRSTBuf(21,RSDT1.outPPCW);
  1445  00B17C  C33E  F0AF         	movff	_RSDT1+17,?_SetRSTBuf
  1446  00B180  0E15               	movlw	21
  1447  00B182  EC87  F07B         	call	_SetRSTBuf
  1448                           ;smgs_rs9b.c: 428: SetRSTBuf(22,RSDT1.outERR);
  1449  00B186  C33F  F0AF         	movff	_RSDT1+18,?_SetRSTBuf
  1450  00B18A  0E16               	movlw	22
  1451  00B18C  EC87  F07B         	call	_SetRSTBuf
  1452                           ;smgs_rs9b.c: 429: SetRSTBuf(23,RSDT1.outAWR);
  1453  00B190  C340  F0AF         	movff	_RSDT1+19,?_SetRSTBuf
  1454  00B194  0E17               	movlw	23
  1455  00B196  EC87  F07B         	call	_SetRSTBuf
  1456                           ;smgs_rs9b.c: 430: SetRSTBuf(24,RSDT1.outECO);
  1457  00B19A  C341  F0AF         	movff	_RSDT1+20,?_SetRSTBuf
  1458  00B19E  0E18               	movlw	24
  1459  00B1A0  EC87  F07B         	call	_SetRSTBuf
  1460                           ;smgs_rs9b.c: 431: SetRSTBuf(25,RSDT1.outPP);
  1461  00B1A4  C342  F0AF         	movff	_RSDT1+21,?_SetRSTBuf
  1462  00B1A8  0E19               	movlw	25
  1463  00B1AA  EC87  F07B         	call	_SetRSTBuf
  1464                           ;smgs_rs9b.c: 432: SetRSTBuf(26,RSDT1.outPG);
  1465  00B1AE  C343  F0AF         	movff	_RSDT1+22,?_SetRSTBuf
  1466  00B1B2  0E1A               	movlw	26
  1467  00B1B4  EC87  F07B         	call	_SetRSTBuf
  1468                           ;smgs_rs9b.c: 433: SetRSTBuf(27,RSDT1.outrCO);
  1469  00B1B8  C34A  F0AF         	movff	_RSDT1+29,?_SetRSTBuf
  1470  00B1BC  0E1B               	movlw	27
  1471  00B1BE  EC87  F07B         	call	_SetRSTBuf
  1472                           ;smgs_rs9b.c: 434: SetRSTBuf(28,RSDT1.outrCW);
  1473  00B1C2  C34B  F0AF         	movff	_RSDT1+30,?_SetRSTBuf
  1474  00B1C6  0E1C               	movlw	28
  1475  00B1C8  EC87  F07B         	call	_SetRSTBuf
  1476                           ;smgs_rs9b.c: 435: SetRSTBuf(29,RSDT1.outSTAT4);
  1477  00B1CC  C348  F0AF         	movff	_RSDT1+27,?_SetRSTBuf
  1478  00B1D0  0E1D               	movlw	29
  1479  00B1D2  EC87  F07B         	call	_SetRSTBuf
  1480  00B1D6  D3EF               	goto	L22
  1481                           ;smgs_rs9b.c: 436: SetRSCHK(ndat);
  1482                           ;smgs_rs9b.c: 438: break;
  1483  00B1D8                     l94:
  1484                           ;smgs_rs9b.c: 439: }
  1485                           ;smgs_rs9b.c: 441: {
  1486  00B1D8  0E25               	movlw	37
  1487  00B1DA  0100               	movlb	__Lparam shr (0+8)
  1488  00B1DC  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1489                           ;smgs_rs9b.c: 443: SetExNDatCHK(ndat);
  1490  00B1DE  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1491  00B1E0  EC41  F07C         	call	_SetExNDatCHK
  1492                           ;smgs_rs9b.c: 444: SetRSTBuf(0,0x11);
  1493  00B1E4  0E11               	movlw	17
  1494  00B1E6  0100               	movlb	__Lparam shr (0+8)
  1495  00B1E8  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1496  00B1EA  0E00               	movlw	0
  1497  00B1EC  EC87  F07B         	call	_SetRSTBuf
  1498                           ;smgs_rs9b.c: 446: SetRSTBuf(2,4);
  1499  00B1F0  0E04               	movlw	4
  1500  00B1F2  0100               	movlb	__Lparam shr (0+8)
  1501  00B1F4  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1502  00B1F6  0E02               	movlw	2
  1503  00B1F8  EC87  F07B         	call	_SetRSTBuf
  1504                           ;smgs_rs9b.c: 448: SetRSTBuf(4,RSDT1.outRDZ0);
  1505  00B1FC  C32F  F0AF         	movff	_RSDT1+2,?_SetRSTBuf
  1506  00B200  0E04               	movlw	4
  1507  00B202  EC87  F07B         	call	_SetRSTBuf
  1508                           ;smgs_rs9b.c: 449: SetRSTBuf(5,RSDT1.outRDZ1);
  1509  00B206  C330  F0AF         	movff	_RSDT1+3,?_SetRSTBuf
  1510  00B20A  0E05               	movlw	5
  1511  00B20C  EC87  F07B         	call	_SetRSTBuf
  1512                           ;smgs_rs9b.c: 450: SetRSTBuf(6,RSDT1.outRDZ2);
  1513  00B210  C331  F0AF         	movff	_RSDT1+4,?_SetRSTBuf
  1514  00B214  0E06               	movlw	6
  1515  00B216  EC87  F07B         	call	_SetRSTBuf
  1516                           ;smgs_rs9b.c: 451: SetRSTBuf(7,RSDT1.outSTAT0);
  1517  00B21A  C344  F0AF         	movff	_RSDT1+23,?_SetRSTBuf
  1518  00B21E  0E07               	movlw	7
  1519  00B220  EC87  F07B         	call	_SetRSTBuf
  1520                           ;smgs_rs9b.c: 452: SetRSTBuf(8,RSDT1.outSTAT1);
  1521  00B224  C345  F0AF         	movff	_RSDT1+24,?_SetRSTBuf
  1522  00B228  0E08               	movlw	8
  1523  00B22A  EC87  F07B         	call	_SetRSTBuf
  1524                           ;smgs_rs9b.c: 453: SetRSTBuf(9,RSDT1.outSTAT2);
  1525  00B22E  C346  F0AF         	movff	_RSDT1+25,?_SetRSTBuf
  1526  00B232  0E09               	movlw	9
  1527  00B234  EC87  F07B         	call	_SetRSTBuf
  1528                           ;smgs_rs9b.c: 454: SetRSTBuf(10,RSDT1.outSTAT3);
  1529  00B238  C347  F0AF         	movff	_RSDT1+26,?_SetRSTBuf
  1530  00B23C  0E0A               	movlw	10
  1531  00B23E  EC87  F07B         	call	_SetRSTBuf
  1532                           ;smgs_rs9b.c: 455: SetRSTBuf(11,RSDT1.outSTAT4);
  1533  00B242  C348  F0AF         	movff	_RSDT1+27,?_SetRSTBuf
  1534  00B246  0E0B               	movlw	11
  1535  00B248  EC87  F07B         	call	_SetRSTBuf
  1536                           ;smgs_rs9b.c: 456: SetRSTBuf(12,RSDT1.outSTAT5);
  1537  00B24C  C349  F0AF         	movff	_RSDT1+28,?_SetRSTBuf
  1538  00B250  0E0C               	movlw	12
  1539  00B252  EC87  F07B         	call	_SetRSTBuf
  1540                           ;smgs_rs9b.c: 457: SetRSTBuf(13,RSDT1.outCO);
  1541  00B256  C332  F0AF         	movff	_RSDT1+5,?_SetRSTBuf
  1542  00B25A  0E0D               	movlw	13
  1543  00B25C  EC87  F07B         	call	_SetRSTBuf
  1544                           ;smgs_rs9b.c: 458: SetRSTBuf(14,RSDT1.outCW);
  1545  00B260  C333  F0AF         	movff	_RSDT1+6,?_SetRSTBuf
  1546  00B264  0E0E               	movlw	14
  1547  00B266  EC87  F07B         	call	_SetRSTBuf
  1548                           ;smgs_rs9b.c: 459: SetRSTBuf(15,RSDT1.outCS);
  1549  00B26A  C334  F0AF         	movff	_RSDT1+7,?_SetRSTBuf
  1550  00B26E  0E0F               	movlw	15
  1551  00B270  EC87  F07B         	call	_SetRSTBuf
  1552                           ;smgs_rs9b.c: 460: SetRSTBuf(16,RSDT1.outIN);
  1553  00B274  C335  F0AF         	movff	_RSDT1+8,?_SetRSTBuf
  1554  00B278  0E10               	movlw	16
  1555  00B27A  EC87  F07B         	call	_SetRSTBuf
  1556                           ;smgs_rs9b.c: 461: SetRSTBuf(17,RSDT1.outVNT);
  1557  00B27E  C336  F0AF         	movff	_RSDT1+9,?_SetRSTBuf
  1558  00B282  0E11               	movlw	17
  1559  00B284  EC87  F07B         	call	_SetRSTBuf
  1560                           ;smgs_rs9b.c: 462: SetRSTBuf(18,RSDT1.outPCO);
  1561  00B288  C337  F0AF         	movff	_RSDT1+10,?_SetRSTBuf
  1562  00B28C  0E12               	movlw	18
  1563  00B28E  EC87  F07B         	call	_SetRSTBuf
  1564                           ;smgs_rs9b.c: 463: SetRSTBuf(19,RSDT1.outPCOmn);
  1565  00B292  C339  F0AF         	movff	_RSDT1+12,?_SetRSTBuf
  1566  00B296  0E13               	movlw	19
  1567  00B298  EC87  F07B         	call	_SetRSTBuf
  1568                           ;smgs_rs9b.c: 464: SetRSTBuf(20,RSDT1.outPCOmx);
  1569  00B29C  C33A  F0AF         	movff	_RSDT1+13,?_SetRSTBuf
  1570  00B2A0  0E14               	movlw	20
  1571  00B2A2  EC87  F07B         	call	_SetRSTBuf
  1572                           ;smgs_rs9b.c: 465: SetRSTBuf(21,RSDT1.outPCW);
  1573  00B2A6  C338  F0AF         	movff	_RSDT1+11,?_SetRSTBuf
  1574  00B2AA  0E15               	movlw	21
  1575  00B2AC  EC87  F07B         	call	_SetRSTBuf
  1576                           ;smgs_rs9b.c: 466: SetRSTBuf(22,RSDT1.outPCWmn);
  1577  00B2B0  C33B  F0AF         	movff	_RSDT1+14,?_SetRSTBuf
  1578  00B2B4  0E16               	movlw	22
  1579  00B2B6  EC87  F07B         	call	_SetRSTBuf
  1580                           ;smgs_rs9b.c: 467: SetRSTBuf(23,RSDT1.outPCWmx);
  1581  00B2BA  C33C  F0AF         	movff	_RSDT1+15,?_SetRSTBuf
  1582  00B2BE  0E17               	movlw	23
  1583  00B2C0  EC87  F07B         	call	_SetRSTBuf
  1584                           ;smgs_rs9b.c: 468: SetRSTBuf(24,RSDT1.outPPCO);
  1585  00B2C4  C33D  F0AF         	movff	_RSDT1+16,?_SetRSTBuf
  1586  00B2C8  0E18               	movlw	24
  1587  00B2CA  EC87  F07B         	call	_SetRSTBuf
  1588                           ;smgs_rs9b.c: 469: SetRSTBuf(25,RSDT1.outPPCW);
  1589  00B2CE  C33E  F0AF         	movff	_RSDT1+17,?_SetRSTBuf
  1590  00B2D2  0E19               	movlw	25
  1591  00B2D4  EC87  F07B         	call	_SetRSTBuf
  1592                           ;smgs_rs9b.c: 470: SetRSTBuf(26,RSDT1.outERR);
  1593  00B2D8  C33F  F0AF         	movff	_RSDT1+18,?_SetRSTBuf
  1594  00B2DC  0E1A               	movlw	26
  1595  00B2DE  EC87  F07B         	call	_SetRSTBuf
  1596                           ;smgs_rs9b.c: 471: SetRSTBuf(27,RSDT1.outAWR);
  1597  00B2E2  C340  F0AF         	movff	_RSDT1+19,?_SetRSTBuf
  1598  00B2E6  0E1B               	movlw	27
  1599  00B2E8  EC87  F07B         	call	_SetRSTBuf
  1600                           ;smgs_rs9b.c: 472: SetRSTBuf(28,RSDT1.outECO);
  1601  00B2EC  C341  F0AF         	movff	_RSDT1+20,?_SetRSTBuf
  1602  00B2F0  0E1C               	movlw	28
  1603  00B2F2  EC87  F07B         	call	_SetRSTBuf
  1604                           ;smgs_rs9b.c: 473: SetRSTBuf(29,RSDT1.outPP);
  1605  00B2F6  C342  F0AF         	movff	_RSDT1+21,?_SetRSTBuf
  1606  00B2FA  0E1D               	movlw	29
  1607  00B2FC  EC87  F07B         	call	_SetRSTBuf
  1608                           ;smgs_rs9b.c: 474: SetRSTBuf(30,RSDT1.outPG);
  1609  00B300  C343  F0AF         	movff	_RSDT1+22,?_SetRSTBuf
  1610  00B304  0E1E               	movlw	30
  1611  00B306  EC87  F07B         	call	_SetRSTBuf
  1612                           ;smgs_rs9b.c: 475: SetRSTBuf(31,RSDT1.outrCO);
  1613  00B30A  C34A  F0AF         	movff	_RSDT1+29,?_SetRSTBuf
  1614  00B30E  0E1F               	movlw	31
  1615  00B310  EC87  F07B         	call	_SetRSTBuf
  1616                           ;smgs_rs9b.c: 476: SetRSTBuf(32,RSDT1.outrCW);
  1617  00B314  C34B  F0AF         	movff	_RSDT1+30,?_SetRSTBuf
  1618  00B318  0E20               	movlw	32
  1619  00B31A  EC87  F07B         	call	_SetRSTBuf
  1620                           ;smgs_rs9b.c: 477: SetRSTBuf(33,RSDT1.outZW);
  1621  00B31E  C34C  F0AF         	movff	_RSDT1+31,?_SetRSTBuf
  1622  00B322  0E21               	movlw	33
  1623  00B324  EC87  F07B         	call	_SetRSTBuf
  1624                           ;smgs_rs9b.c: 478: SetRSTBuf(34,RSDT1.outSETPmin
      +                          );
  1625  00B328  C34D  F0AF         	movff	_RSDT1+32,?_SetRSTBuf
  1626  00B32C  0E22               	movlw	34
  1627  00B32E  EC87  F07B         	call	_SetRSTBuf
  1628                           ;smgs_rs9b.c: 479: SetRSTBuf(35,RSDT1.outSETPmax
      +                          );
  1629  00B332  C34E  F0AF         	movff	_RSDT1+33,?_SetRSTBuf
  1630  00B336  0E23               	movlw	35
  1631  00B338  EC87  F07B         	call	_SetRSTBuf
  1632  00B33C  D33C               	goto	L22
  1633                           ;smgs_rs9b.c: 480: SetRSCHK(ndat);
  1634                           ;smgs_rs9b.c: 482: break;
  1635  00B33E                     l95:
  1636                           ;smgs_rs9b.c: 483: }
  1637                           ;smgs_rs9b.c: 485: {
  1638  00B33E  0E1E               	movlw	30
  1639  00B340  0100               	movlb	__Lparam shr (0+8)
  1640  00B342  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1641                           ;smgs_rs9b.c: 487: chkndat=SetNDatCHK(ndat);
  1642  00B344  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1643  00B346  EC22  F07C         	call	_SetNDatCHK
  1644  00B34A  0100               	movlb	__Lparam shr (0+8)
  1645  00B34C  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  1646                           ;smgs_rs9b.c: 488: SetRSTBuf(0,0x11);
  1647  00B34E  0E11               	movlw	17
  1648  00B350  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1649  00B352  0E00               	movlw	0
  1650  00B354  EC87  F07B         	call	_SetRSTBuf
  1651                           ;smgs_rs9b.c: 489: SetRSTBuf(1,chkndat);
  1652  00B358  0100               	movlb	__Lparam shr (0+8)
  1653  00B35A  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  1654  00B35C  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1655  00B35E  0E01               	movlw	1
  1656  00B360  EC87  F07B         	call	_SetRSTBuf
  1657                           ;smgs_rs9b.c: 490: SetRSTBuf(2,2);
  1658  00B364  0E02               	movlw	2
  1659  00B366  0100               	movlb	__Lparam shr (0+8)
  1660  00B368  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1661  00B36A  EC87  F07B         	call	_SetRSTBuf
  1662                           ;smgs_rs9b.c: 491: SetRSTBuf(3,RSDT1.outKSTAT0);
  1663  00B36E  C350  F0AF         	movff	_RSDT1+35,?_SetRSTBuf
  1664  00B372  0E03               	movlw	3
  1665  00B374  EC87  F07B         	call	_SetRSTBuf
  1666                           ;smgs_rs9b.c: 492: SetRSTBuf(4,RSDT1.outKRK);
  1667  00B378  C351  F0AF         	movff	_RSDT1+36,?_SetRSTBuf
  1668  00B37C  0E04               	movlw	4
  1669  00B37E  EC87  F07B         	call	_SetRSTBuf
  1670                           ;smgs_rs9b.c: 493: SetRSTBuf(5,RSDT1.outPRM);
  1671  00B382  C352  F0AF         	movff	_RSDT1+37,?_SetRSTBuf
  1672  00B386  0E05               	movlw	5
  1673  00B388  EC87  F07B         	call	_SetRSTBuf
  1674                           ;smgs_rs9b.c: 494: SetRSTBuf(6,RSDT1.outMSTR);
  1675  00B38C  C353  F0AF         	movff	_RSDT1+38,?_SetRSTBuf
  1676  00B390  0E06               	movlw	6
  1677  00B392  EC87  F07B         	call	_SetRSTBuf
  1678                           ;smgs_rs9b.c: 495: SetRSTBuf(7,RSDT1.outMMAXU);
  1679  00B396  C354  F0AF         	movff	_RSDT1+39,?_SetRSTBuf
  1680  00B39A  0E07               	movlw	7
  1681  00B39C  EC87  F07B         	call	_SetRSTBuf
  1682                           ;smgs_rs9b.c: 496: SetRSTBuf(8,RSDT1.outMMAXG);
  1683  00B3A0  C355  F0AF         	movff	_RSDT1+40,?_SetRSTBuf
  1684  00B3A4  0E08               	movlw	8
  1685  00B3A6  EC87  F07B         	call	_SetRSTBuf
  1686                           ;smgs_rs9b.c: 497: SetRSTBuf(9,RSDT1.outOPDG);
  1687  00B3AA  C35A  F0AF         	movff	_RSDT1+45,?_SetRSTBuf
  1688  00B3AE  0E09               	movlw	9
  1689  00B3B0  EC87  F07B         	call	_SetRSTBuf
  1690                           ;smgs_rs9b.c: 498: SetRSTBuf(10,RSDT1.outWANL);
  1691  00B3B4  C356  F0AF         	movff	_RSDT1+41,?_SetRSTBuf
  1692  00B3B8  0E0A               	movlw	10
  1693  00B3BA  EC87  F07B         	call	_SetRSTBuf
  1694                           ;smgs_rs9b.c: 499: SetRSTBuf(11,RSDT1.outKODKT);
  1695  00B3BE  C357  F0AF         	movff	_RSDT1+42,?_SetRSTBuf
  1696  00B3C2  0E0B               	movlw	11
  1697  00B3C4  EC87  F07B         	call	_SetRSTBuf
  1698                           ;smgs_rs9b.c: 500: SetRSTBuf(12,RSDT1.outWOBG);
  1699  00B3C8  C358  F0AF         	movff	_RSDT1+43,?_SetRSTBuf
  1700  00B3CC  0E0C               	movlw	12
  1701  00B3CE  EC87  F07B         	call	_SetRSTBuf
  1702                           ;smgs_rs9b.c: 501: SetRSTBuf(13,RSDT1.outNOKR);
  1703  00B3D2  C359  F0AF         	movff	_RSDT1+44,?_SetRSTBuf
  1704  00B3D6  0E0D               	movlw	13
  1705  00B3D8  EC87  F07B         	call	_SetRSTBuf
  1706                           ;smgs_rs9b.c: 502: SetRSTBuf(14,RSDT1.outTPCS);
  1707  00B3DC  C35B  F0AF         	movff	_RSDT1+46,?_SetRSTBuf
  1708  00B3E0  0E0E               	movlw	14
  1709  00B3E2  EC87  F07B         	call	_SetRSTBuf
  1710                           ;smgs_rs9b.c: 503: SetRSTBuf(15,RSDT1.outMMIN);
  1711  00B3E6  C35C  F0AF         	movff	_RSDT1+47,?_SetRSTBuf
  1712  00B3EA  0E0F               	movlw	15
  1713  00B3EC  EC87  F07B         	call	_SetRSTBuf
  1714                           ;smgs_rs9b.c: 504: SetRSTBuf(16,RSDT1.outMMAX);
  1715  00B3F0  C35D  F0AF         	movff	_RSDT1+48,?_SetRSTBuf
  1716  00B3F4  0E10               	movlw	16
  1717  00B3F6  EC87  F07B         	call	_SetRSTBuf
  1718                           ;smgs_rs9b.c: 505: SetRSTBuf(17,RSDT1.outRDPM);
  1719  00B3FA  C35E  F0AF         	movff	_RSDT1+49,?_SetRSTBuf
  1720  00B3FE  0E11               	movlw	17
  1721  00B400  EC87  F07B         	call	_SetRSTBuf
  1722                           ;smgs_rs9b.c: 506: SetRSTBuf(18,RSDT1.outDTPM);
  1723  00B404  C35F  F0AF         	movff	_RSDT1+50,?_SetRSTBuf
  1724  00B408  0E12               	movlw	18
  1725  00B40A  EC87  F07B         	call	_SetRSTBuf
  1726                           ;smgs_rs9b.c: 507: SetRSTBuf(19,RSDT1.outMDPM);
  1727  00B40E  C360  F0AF         	movff	_RSDT1+51,?_SetRSTBuf
  1728  00B412  0E13               	movlw	19
  1729  00B414  EC87  F07B         	call	_SetRSTBuf
  1730                           ;smgs_rs9b.c: 508: SetRSTBuf(20,RSDT1.outTECO);
  1731  00B418  C361  F0AF         	movff	_RSDT1+52,?_SetRSTBuf
  1732  00B41C  0E14               	movlw	20
  1733  00B41E  EC87  F07B         	call	_SetRSTBuf
  1734                           ;smgs_rs9b.c: 509: SetRSTBuf(21,RSDT1.outTMMAXG2
      +                          );
  1735  00B422  C362  F0AF         	movff	_RSDT1+53,?_SetRSTBuf
  1736  00B426  0E15               	movlw	21
  1737  00B428  EC87  F07B         	call	_SetRSTBuf
  1738                           ;smgs_rs9b.c: 510: SetRSTBuf(22,RSDT1.outMMAXG2)
      +                          ;
  1739  00B42C  C363  F0AF         	movff	_RSDT1+54,?_SetRSTBuf
  1740  00B430  0E16               	movlw	22
  1741  00B432  EC87  F07B         	call	_SetRSTBuf
  1742                           ;smgs_rs9b.c: 511: SetRSTBuf(23,RSDT1.outMGPM);
  1743  00B436  C364  F0AF         	movff	_RSDT1+55,?_SetRSTBuf
  1744  00B43A  0E17               	movlw	23
  1745  00B43C  EC87  F07B         	call	_SetRSTBuf
  1746                           ;smgs_rs9b.c: 512: SetRSTBuf(24,RSDT1.outMGPM2);
  1747  00B440  C365  F0AF         	movff	_RSDT1+56,?_SetRSTBuf
  1748  00B444  0E18               	movlw	24
  1749  00B446  EC87  F07B         	call	_SetRSTBuf
  1750                           ;smgs_rs9b.c: 514: SetRSTBuf(25,RSDT1.outHSCO);
  1751  00B44A  C367  F0AF         	movff	_RSDT1+58,?_SetRSTBuf
  1752  00B44E  0E19               	movlw	25
  1753  00B450  EC87  F07B         	call	_SetRSTBuf
  1754                           ;smgs_rs9b.c: 515: SetRSTBuf(26,RSDT1.outCONW);
  1755  00B454  C368  F0AF         	movff	_RSDT1+59,?_SetRSTBuf
  1756  00B458  0E1A               	movlw	26
  1757  00B45A  EC87  F07B         	call	_SetRSTBuf
  1758                           ;smgs_rs9b.c: 516: SetRSTBuf(27,RSDT1.outPROP);
  1759  00B45E  C369  F0AF         	movff	_RSDT1+60,?_SetRSTBuf
  1760  00B462  0E1B               	movlw	27
  1761  00B464  EC87  F07B         	call	_SetRSTBuf
  1762                           ;smgs_rs9b.c: 517: SetRSTBuf(28,RSDT1.outRFAN);
  1763  00B468  C36A  F0AF         	movff	_RSDT1+61,?_SetRSTBuf
  1764  00B46C  0E1C               	movlw	28
  1765  00B46E  EC87  F07B         	call	_SetRSTBuf
  1766  00B472  D2A1               	goto	L22
  1767                           ;smgs_rs9b.c: 518: SetRSCHK(ndat);
  1768                           ;smgs_rs9b.c: 520: break;
  1769  00B474                     l96:
  1770                           ;smgs_rs9b.c: 521: }
  1771                           ;smgs_rs9b.c: 523: {
  1772  00B474  0E27               	movlw	39
  1773  00B476  0100               	movlb	__Lparam shr (0+8)
  1774  00B478  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1775                           ;smgs_rs9b.c: 525: SetExNDatCHK(ndat);
  1776  00B47A  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1777  00B47C  EC41  F07C         	call	_SetExNDatCHK
  1778                           ;smgs_rs9b.c: 526: SetRSTBuf(0,0x11);
  1779  00B480  0E11               	movlw	17
  1780  00B482  0100               	movlb	__Lparam shr (0+8)
  1781  00B484  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1782  00B486  0E00               	movlw	0
  1783  00B488  EC87  F07B         	call	_SetRSTBuf
  1784                           ;smgs_rs9b.c: 528: SetRSTBuf(2,5);
  1785  00B48C  0E05               	movlw	5
  1786  00B48E  0100               	movlb	__Lparam shr (0+8)
  1787  00B490  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1788  00B492  0E02               	movlw	2
  1789  00B494  EC87  F07B         	call	_SetRSTBuf
  1790                           ;smgs_rs9b.c: 530: SetRSTBuf(4,RSDT1.outKSTAT0);
  1791  00B498  C350  F0AF         	movff	_RSDT1+35,?_SetRSTBuf
  1792  00B49C  0E04               	movlw	4
  1793  00B49E  EC87  F07B         	call	_SetRSTBuf
  1794                           ;smgs_rs9b.c: 531: SetRSTBuf(5,RSDT1.outKRK);
  1795  00B4A2  C351  F0AF         	movff	_RSDT1+36,?_SetRSTBuf
  1796  00B4A6  0E05               	movlw	5
  1797  00B4A8  EC87  F07B         	call	_SetRSTBuf
  1798                           ;smgs_rs9b.c: 532: SetRSTBuf(6,RSDT1.outPRM);
  1799  00B4AC  C352  F0AF         	movff	_RSDT1+37,?_SetRSTBuf
  1800  00B4B0  0E06               	movlw	6
  1801  00B4B2  EC87  F07B         	call	_SetRSTBuf
  1802                           ;smgs_rs9b.c: 533: SetRSTBuf(7,RSDT1.outMSTR);
  1803  00B4B6  C353  F0AF         	movff	_RSDT1+38,?_SetRSTBuf
  1804  00B4BA  0E07               	movlw	7
  1805  00B4BC  EC87  F07B         	call	_SetRSTBuf
  1806                           ;smgs_rs9b.c: 534: SetRSTBuf(8,RSDT1.outMMAXU);
  1807  00B4C0  C354  F0AF         	movff	_RSDT1+39,?_SetRSTBuf
  1808  00B4C4  0E08               	movlw	8
  1809  00B4C6  EC87  F07B         	call	_SetRSTBuf
  1810                           ;smgs_rs9b.c: 535: SetRSTBuf(9,RSDT1.outMMAXG);
  1811  00B4CA  C355  F0AF         	movff	_RSDT1+40,?_SetRSTBuf
  1812  00B4CE  0E09               	movlw	9
  1813  00B4D0  EC87  F07B         	call	_SetRSTBuf
  1814                           ;smgs_rs9b.c: 536: SetRSTBuf(10,RSDT1.outOPDG);
  1815  00B4D4  C35A  F0AF         	movff	_RSDT1+45,?_SetRSTBuf
  1816  00B4D8  0E0A               	movlw	10
  1817  00B4DA  EC87  F07B         	call	_SetRSTBuf
  1818                           ;smgs_rs9b.c: 537: SetRSTBuf(11,RSDT1.outWANL);
  1819  00B4DE  C356  F0AF         	movff	_RSDT1+41,?_SetRSTBuf
  1820  00B4E2  0E0B               	movlw	11
  1821  00B4E4  EC87  F07B         	call	_SetRSTBuf
  1822                           ;smgs_rs9b.c: 538: SetRSTBuf(12,RSDT1.outKODKT);
  1823  00B4E8  C357  F0AF         	movff	_RSDT1+42,?_SetRSTBuf
  1824  00B4EC  0E0C               	movlw	12
  1825  00B4EE  EC87  F07B         	call	_SetRSTBuf
  1826                           ;smgs_rs9b.c: 539: SetRSTBuf(13,RSDT1.outWOBG);
  1827  00B4F2  C358  F0AF         	movff	_RSDT1+43,?_SetRSTBuf
  1828  00B4F6  0E0D               	movlw	13
  1829  00B4F8  EC87  F07B         	call	_SetRSTBuf
  1830                           ;smgs_rs9b.c: 540: SetRSTBuf(14,RSDT1.outNOKR);
  1831  00B4FC  C359  F0AF         	movff	_RSDT1+44,?_SetRSTBuf
  1832  00B500  0E0E               	movlw	14
  1833  00B502  EC87  F07B         	call	_SetRSTBuf
  1834                           ;smgs_rs9b.c: 541: SetRSTBuf(15,RSDT1.outTPCS);
  1835  00B506  C35B  F0AF         	movff	_RSDT1+46,?_SetRSTBuf
  1836  00B50A  0E0F               	movlw	15
  1837  00B50C  EC87  F07B         	call	_SetRSTBuf
  1838                           ;smgs_rs9b.c: 542: SetRSTBuf(16,RSDT1.outMMIN);
  1839  00B510  C35C  F0AF         	movff	_RSDT1+47,?_SetRSTBuf
  1840  00B514  0E10               	movlw	16
  1841  00B516  EC87  F07B         	call	_SetRSTBuf
  1842                           ;smgs_rs9b.c: 543: SetRSTBuf(17,RSDT1.outMMAX);
  1843  00B51A  C35D  F0AF         	movff	_RSDT1+48,?_SetRSTBuf
  1844  00B51E  0E11               	movlw	17
  1845  00B520  EC87  F07B         	call	_SetRSTBuf
  1846                           ;smgs_rs9b.c: 544: SetRSTBuf(18,RSDT1.outRDPM);
  1847  00B524  C35E  F0AF         	movff	_RSDT1+49,?_SetRSTBuf
  1848  00B528  0E12               	movlw	18
  1849  00B52A  EC87  F07B         	call	_SetRSTBuf
  1850                           ;smgs_rs9b.c: 545: SetRSTBuf(19,RSDT1.outDTPM);
  1851  00B52E  C35F  F0AF         	movff	_RSDT1+50,?_SetRSTBuf
  1852  00B532  0E13               	movlw	19
  1853  00B534  EC87  F07B         	call	_SetRSTBuf
  1854                           ;smgs_rs9b.c: 546: SetRSTBuf(20,RSDT1.outMDPM);
  1855  00B538  C360  F0AF         	movff	_RSDT1+51,?_SetRSTBuf
  1856  00B53C  0E14               	movlw	20
  1857  00B53E  EC87  F07B         	call	_SetRSTBuf
  1858                           ;smgs_rs9b.c: 547: SetRSTBuf(21,RSDT1.outTECO);
  1859  00B542  C361  F0AF         	movff	_RSDT1+52,?_SetRSTBuf
  1860  00B546  0E15               	movlw	21
  1861  00B548  EC87  F07B         	call	_SetRSTBuf
  1862                           ;smgs_rs9b.c: 548: SetRSTBuf(22,RSDT1.outTMMAXG2
      +                          );
  1863  00B54C  C362  F0AF         	movff	_RSDT1+53,?_SetRSTBuf
  1864  00B550  0E16               	movlw	22
  1865  00B552  EC87  F07B         	call	_SetRSTBuf
  1866                           ;smgs_rs9b.c: 549: SetRSTBuf(23,RSDT1.outMMAXG2)
      +                          ;
  1867  00B556  C363  F0AF         	movff	_RSDT1+54,?_SetRSTBuf
  1868  00B55A  0E17               	movlw	23
  1869  00B55C  EC87  F07B         	call	_SetRSTBuf
  1870                           ;smgs_rs9b.c: 550: SetRSTBuf(24,RSDT1.outMGPM);
  1871  00B560  C364  F0AF         	movff	_RSDT1+55,?_SetRSTBuf
  1872  00B564  0E18               	movlw	24
  1873  00B566  EC87  F07B         	call	_SetRSTBuf
  1874                           ;smgs_rs9b.c: 551: SetRSTBuf(25,RSDT1.outMGPM2);
  1875  00B56A  C365  F0AF         	movff	_RSDT1+56,?_SetRSTBuf
  1876  00B56E  0E19               	movlw	25
  1877  00B570  EC87  F07B         	call	_SetRSTBuf
  1878                           ;smgs_rs9b.c: 553: SetRSTBuf(26,RSDT1.outHSCO);
  1879  00B574  C367  F0AF         	movff	_RSDT1+58,?_SetRSTBuf
  1880  00B578  0E1A               	movlw	26
  1881  00B57A  EC87  F07B         	call	_SetRSTBuf
  1882                           ;smgs_rs9b.c: 554: SetRSTBuf(27,RSDT1.outCONW);
  1883  00B57E  C368  F0AF         	movff	_RSDT1+59,?_SetRSTBuf
  1884  00B582  0E1B               	movlw	27
  1885  00B584  EC87  F07B         	call	_SetRSTBuf
  1886                           ;smgs_rs9b.c: 555: SetRSTBuf(28,RSDT1.outPROP);
  1887  00B588  C369  F0AF         	movff	_RSDT1+60,?_SetRSTBuf
  1888  00B58C  0E1C               	movlw	28
  1889  00B58E  EC87  F07B         	call	_SetRSTBuf
  1890                           ;smgs_rs9b.c: 556: SetRSTBuf(29,RSDT1.outRFAN);
  1891  00B592  C36A  F0AF         	movff	_RSDT1+61,?_SetRSTBuf
  1892  00B596  0E1D               	movlw	29
  1893  00B598  EC87  F07B         	call	_SetRSTBuf
  1894                           ;smgs_rs9b.c: 557: SetRSTBuf(30,RSDT1.outTSTR);
  1895  00B59C  C36B  F0AF         	movff	_RSDT1+62,?_SetRSTBuf
  1896  00B5A0  0E1E               	movlw	30
  1897  00B5A2  EC87  F07B         	call	_SetRSTBuf
  1898                           ;smgs_rs9b.c: 558: SetRSTBuf(31,RSDT1.outTL3);
  1899  00B5A6  C36C  F0AF         	movff	_RSDT1+63,?_SetRSTBuf
  1900  00B5AA  0E1F               	movlw	31
  1901  00B5AC  EC87  F07B         	call	_SetRSTBuf
  1902                           ;smgs_rs9b.c: 559: SetRSTBuf(32,RSDT1.outPGDR);
  1903  00B5B0  C36D  F0AF         	movff	_RSDT1+64,?_SetRSTBuf
  1904  00B5B4  0E20               	movlw	32
  1905  00B5B6  EC87  F07B         	call	_SetRSTBuf
  1906                           ;smgs_rs9b.c: 560: SetRSTBuf(33,RSDT1.outPGDG);
  1907  00B5BA  C36E  F0AF         	movff	_RSDT1+65,?_SetRSTBuf
  1908  00B5BE  0E21               	movlw	33
  1909  00B5C0  EC87  F07B         	call	_SetRSTBuf
  1910                           ;smgs_rs9b.c: 561: SetRSTBuf(34,RSDT1.outPGDO);
  1911  00B5C4  C36F  F0AF         	movff	_RSDT1+66,?_SetRSTBuf
  1912  00B5C8  0E22               	movlw	34
  1913  00B5CA  EC87  F07B         	call	_SetRSTBuf
  1914                           ;smgs_rs9b.c: 562: SetRSTBuf(35,RSDT1.outPGMX);
  1915  00B5CE  C370  F0AF         	movff	_RSDT1+67,?_SetRSTBuf
  1916  00B5D2  0E23               	movlw	35
  1917  00B5D4  EC87  F07B         	call	_SetRSTBuf
  1918                           ;smgs_rs9b.c: 563: SetRSTBuf(36,RSDT1.outCWMG);
  1919  00B5D8  C371  F0AF         	movff	_RSDT1+68,?_SetRSTBuf
  1920  00B5DC  0E24               	movlw	36
  1921  00B5DE  EC87  F07B         	call	_SetRSTBuf
  1922                           ;smgs_rs9b.c: 564: SetRSTBuf(37,RSDT1.outCWTM);
  1923  00B5E2  C372  F0AF         	movff	_RSDT1+69,?_SetRSTBuf
  1924  00B5E6  0E25               	movlw	37
  1925  00B5E8  EC87  F07B         	call	_SetRSTBuf
  1926  00B5EC  D1E4               	goto	L22
  1927                           ;smgs_rs9b.c: 565: SetRSCHK(ndat);
  1928                           ;smgs_rs9b.c: 567: break;
  1929  00B5EE                     l97:
  1930                           ;smgs_rs9b.c: 568: }
  1931                           ;smgs_rs9b.c: 572: {
  1932  00B5EE  D1E7               	goto	l99
  1933  00B5F0                     l100:
  1934                           ;smgs_rs9b.c: 574: {
  1935                           ;smgs_rs9b.c: 620: {
  1936  00B5F0  0E07               	movlw	7
  1937  00B5F2  0100               	movlb	__Lparam shr (0+8)
  1938  00B5F4  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1939                           ;smgs_rs9b.c: 622: chkndat=SetNDatCHK(ndat);
  1940  00B5F6  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1941  00B5F8  EC22  F07C         	call	_SetNDatCHK
  1942  00B5FC  0100               	movlb	__Lparam shr (0+8)
  1943  00B5FE  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  1944                           ;smgs_rs9b.c: 623: SetRSTBuf(0,0x11);
  1945  00B600  0E11               	movlw	17
  1946  00B602  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1947  00B604  0E00               	movlw	0
  1948  00B606  EC87  F07B         	call	_SetRSTBuf
  1949                           ;smgs_rs9b.c: 624: SetRSTBuf(1,chkndat);
  1950  00B60A  0100               	movlb	__Lparam shr (0+8)
  1951  00B60C  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  1952  00B60E  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1953  00B610  0E01               	movlw	1
  1954  00B612  EC87  F07B         	call	_SetRSTBuf
  1955                           ;smgs_rs9b.c: 625: SetRSTBuf(2,3);
  1956  00B616  0E03               	movlw	3
  1957  00B618  0100               	movlb	__Lparam shr (0+8)
  1958  00B61A  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1959  00B61C  0E02               	movlw	2
  1960  00B61E  EC87  F07B         	call	_SetRSTBuf
  1961                           ;smgs_rs9b.c: 626: SetRSTBuf(3,2);
  1962  00B622  0E02               	movlw	2
  1963  00B624  0100               	movlb	__Lparam shr (0+8)
  1964  00B626  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1965  00B628  0E03               	movlw	3
  1966  00B62A  EC87  F07B         	call	_SetRSTBuf
  1967                           ;smgs_rs9b.c: 627: SetRSTBuf(4,RSDT1.outRPKNF);
  1968  00B62E  C373  F0AF         	movff	_RSDT1+70,?_SetRSTBuf
  1969  00B632  0E04               	movlw	4
  1970  00B634  EC87  F07B         	call	_SetRSTBuf
  1971                           ;smgs_rs9b.c: 628: SetRSTBuf(5,RSDT1.outPKERR);
  1972  00B638  C375  F0AF         	movff	_RSDT1+72,?_SetRSTBuf
  1973  00B63C  0E05               	movlw	5
  1974  00B63E  EC87  F07B         	call	_SetRSTBuf
  1975                           ;smgs_rs9b.c: 629: SetRSCHK(ndat);
  1976  00B642  0100               	movlb	__Lparam shr (0+8)
  1977  00B644  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1978  00B646  ECDA  F07B         	call	_SetRSCHK
  1979                           ;smgs_rs9b.c: 631: RSDT1.outPKERR=0;
  1980  00B64A  0103               	movlb	(_RSDT1+72) shr (0+8)
  1981  00B64C  6B75               	clrf	(_RSDT1+72)& (0+255),b
  1982                           ;smgs_rs9b.c: 632: break;
  1983  00B64E  0012               	return	
  1984  00B650                     l101:
  1985                           ;smgs_rs9b.c: 633: }
  1986                           ;smgs_rs9b.c: 635: {
  1987  00B650  0E07               	movlw	7
  1988  00B652  0100               	movlb	__Lparam shr (0+8)
  1989  00B654  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  1990                           ;smgs_rs9b.c: 637: chkndat=SetNDatCHK(ndat);
  1991  00B656  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  1992  00B658  EC22  F07C         	call	_SetNDatCHK
  1993  00B65C  0100               	movlb	__Lparam shr (0+8)
  1994  00B65E  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  1995                           ;smgs_rs9b.c: 638: SetRSTBuf(0,0x11);
  1996  00B660  0E11               	movlw	17
  1997  00B662  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  1998  00B664  0E00               	movlw	0
  1999  00B666  EC87  F07B         	call	_SetRSTBuf
  2000                           ;smgs_rs9b.c: 639: SetRSTBuf(1,chkndat);
  2001  00B66A  0100               	movlb	__Lparam shr (0+8)
  2002  00B66C  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  2003  00B66E  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2004  00B670  0E01               	movlw	1
  2005  00B672  EC87  F07B         	call	_SetRSTBuf
  2006                           ;smgs_rs9b.c: 640: SetRSTBuf(2,3);
  2007  00B676  0E03               	movlw	3
  2008  00B678  0100               	movlb	__Lparam shr (0+8)
  2009  00B67A  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2010  00B67C  0E02               	movlw	2
  2011  00B67E  EC87  F07B         	call	_SetRSTBuf
  2012                           ;smgs_rs9b.c: 641: SetRSTBuf(3,128);
  2013  00B682  0E80               	movlw	128
  2014  00B684  0100               	movlb	__Lparam shr (0+8)
  2015  00B686  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2016  00B688  0E03               	movlw	3
  2017  00B68A  EC87  F07B         	call	_SetRSTBuf
  2018                           ;smgs_rs9b.c: 642: SetRSTBuf(4,RSDT1.outWPKNF);
  2019  00B68E  C374  F0AF         	movff	_RSDT1+71,?_SetRSTBuf
  2020  00B692  0E04               	movlw	4
  2021  00B694  EC87  F07B         	call	_SetRSTBuf
  2022                           ;smgs_rs9b.c: 643: SetRSTBuf(5,RSDT1.outPKERR);
  2023  00B698  C375  F0AF         	movff	_RSDT1+72,?_SetRSTBuf
  2024  00B69C  0E05               	movlw	5
  2025  00B69E  EC87  F07B         	call	_SetRSTBuf
  2026                           ;smgs_rs9b.c: 644: SetRSCHK(ndat);
  2027  00B6A2  0100               	movlb	__Lparam shr (0+8)
  2028  00B6A4  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2029  00B6A6  ECDA  F07B         	call	_SetRSCHK
  2030                           ;smgs_rs9b.c: 646: RSDT1.outPKERR=0;
  2031  00B6AA  0103               	movlb	(_RSDT1+72) shr (0+8)
  2032  00B6AC  6B75               	clrf	(_RSDT1+72)& (0+255),b
  2033                           ;smgs_rs9b.c: 647: break;
  2034  00B6AE  0012               	return	
  2035  00B6B0                     l102:
  2036                           ;smgs_rs9b.c: 648: }
  2037                           ;smgs_rs9b.c: 650: {
  2038  00B6B0  0E0A               	movlw	10
  2039  00B6B2  0100               	movlb	__Lparam shr (0+8)
  2040  00B6B4  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2041                           ;smgs_rs9b.c: 652: chkndat=SetNDatCHK(ndat);
  2042  00B6B6  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2043  00B6B8  EC22  F07C         	call	_SetNDatCHK
  2044  00B6BC  0100               	movlb	__Lparam shr (0+8)
  2045  00B6BE  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  2046                           ;smgs_rs9b.c: 653: SetRSTBuf(0,0x11);
  2047  00B6C0  0E11               	movlw	17
  2048  00B6C2  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2049  00B6C4  0E00               	movlw	0
  2050  00B6C6  EC87  F07B         	call	_SetRSTBuf
  2051                           ;smgs_rs9b.c: 654: SetRSTBuf(1,chkndat);
  2052  00B6CA  0100               	movlb	__Lparam shr (0+8)
  2053  00B6CC  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  2054  00B6CE  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2055  00B6D0  0E01               	movlw	1
  2056  00B6D2  EC87  F07B         	call	_SetRSTBuf
  2057                           ;smgs_rs9b.c: 655: SetRSTBuf(2,3);
  2058  00B6D6  0E03               	movlw	3
  2059  00B6D8  0100               	movlb	__Lparam shr (0+8)
  2060  00B6DA  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2061  00B6DC  0E02               	movlw	2
  2062  00B6DE  EC87  F07B         	call	_SetRSTBuf
  2063                           ;smgs_rs9b.c: 656: SetRSTBuf(3,3);
  2064  00B6E2  0E03               	movlw	3
  2065  00B6E4  0100               	movlb	__Lparam shr (0+8)
  2066  00B6E6  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2067  00B6E8  EC87  F07B         	call	_SetRSTBuf
  2068                           ;smgs_rs9b.c: 657: SetRSTBuf(4,ReadBtyHREF(0));
  2069  00B6EC  0E00               	movlw	0
  2070  00B6EE  ECA7  F043         	call	_ReadBtyHREF
  2071  00B6F2  0100               	movlb	__Lparam shr (0+8)
  2072  00B6F4  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2073  00B6F6  0E04               	movlw	4
  2074  00B6F8  EC87  F07B         	call	_SetRSTBuf
  2075                           ;smgs_rs9b.c: 658: SetRSTBuf(5,ReadBtyHREF(1));
  2076  00B6FC  0E01               	movlw	1
  2077  00B6FE  ECA7  F043         	call	_ReadBtyHREF
  2078  00B702  0100               	movlb	__Lparam shr (0+8)
  2079  00B704  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2080  00B706  0E05               	movlw	5
  2081  00B708  EC87  F07B         	call	_SetRSTBuf
  2082                           ;smgs_rs9b.c: 659: SetRSTBuf(6,ReadBtyNZSTAT(0))
      +                          ;
  2083  00B70C  0E00               	movlw	0
  2084  00B70E  ECC2  F043         	call	_ReadBtyNZSTAT
  2085  00B712  0100               	movlb	__Lparam shr (0+8)
  2086  00B714  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2087  00B716  0E06               	movlw	6
  2088  00B718  EC87  F07B         	call	_SetRSTBuf
  2089                           ;smgs_rs9b.c: 660: SetRSTBuf(7,ReadBtyNZSTAT(1))
      +                          ;
  2090  00B71C  0E01               	movlw	1
  2091  00B71E  ECC2  F043         	call	_ReadBtyNZSTAT
  2092  00B722  0100               	movlb	__Lparam shr (0+8)
  2093  00B724  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2094  00B726  0E07               	movlw	7
  2095  00B728  EC87  F07B         	call	_SetRSTBuf
  2096                           ;smgs_rs9b.c: 661: SetRSTBuf(8,ReadBtyHFLG());
  2097  00B72C  ECA2  F043         	call	_ReadBtyHFLG	;wreg free
  2098  00B730  0100               	movlb	__Lparam shr (0+8)
  2099  00B732  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2100  00B734  0E08               	movlw	8
  2101  00B736  EC87  F07B         	call	_SetRSTBuf
  2102  00B73A  D13D               	goto	L22
  2103                           ;smgs_rs9b.c: 662: SetRSCHK(ndat);
  2104                           ;smgs_rs9b.c: 664: break;
  2105  00B73C                     l103:
  2106                           ;smgs_rs9b.c: 665: }
  2107                           ;smgs_rs9b.c: 667: {
  2108  00B73C  C3A5  F0AA         	movff	_RSDT1+120,?a_SaveDataToRS	;volatile
  2109                           ;smgs_rs9b.c: 669: if(nr>4-1||(!ReadBtySTAT(nr,0
      +                          )&&!ReadBtySTAT(nr,1)))
  2110  00B740  0E03               	movlw	3
  2111  00B742  0100               	movlb	__Lparam shr (0+8)
  2112  00B744  65AA               	cpfsgt	?a_SaveDataToRS^(__Lparam& (0+65280)),b	
      +                          ;volatile
  2113  00B746  D001               	goto	u261
  2114  00B748  D00E               	goto	u300
  2115  00B74A                     u261:
  2116  00B74A  6BB2               	clrf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2117  00B74C  51AA               	movf	?a_SaveDataToRS^(__Lparam& (0+65280)),w	;v
      +                          olatile
  2118  00B74E  ECE3  F043         	call	_ReadBtySTAT
  2119  00B752  0A00               	xorlw	0
  2120  00B754  E132               	bnz	l104
  2121  00B756  0E01               	movlw	1
  2122  00B758  0100               	movlb	__Lparam shr (0+8)
  2123  00B75A  6FB2               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2124  00B75C  51AA               	movf	?a_SaveDataToRS^(__Lparam& (0+65280)),w	;v
      +                          olatile
  2125  00B75E  ECE3  F043         	call	_ReadBtySTAT
  2126  00B762  0A00               	xorlw	0
  2127  00B764  E12A               	bnz	l104
  2128  00B766                     u300:
  2129                           ;smgs_rs9b.c: 670: {
  2130  00B766  0E07               	movlw	7
  2131  00B768  0100               	movlb	__Lparam shr (0+8)
  2132  00B76A  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2133                           ;smgs_rs9b.c: 672: chkndat=SetNDatCHK(ndat);
  2134  00B76C  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2135  00B76E  EC22  F07C         	call	_SetNDatCHK
  2136  00B772  0100               	movlb	__Lparam shr (0+8)
  2137  00B774  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  2138                           ;smgs_rs9b.c: 673: SetRSTBuf(0,0x11);
  2139  00B776  0E11               	movlw	17
  2140  00B778  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2141  00B77A  0E00               	movlw	0
  2142  00B77C  EC87  F07B         	call	_SetRSTBuf
  2143                           ;smgs_rs9b.c: 674: SetRSTBuf(1,chkndat);
  2144  00B780  0100               	movlb	__Lparam shr (0+8)
  2145  00B782  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  2146  00B784  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2147  00B786  0E01               	movlw	1
  2148  00B788  EC87  F07B         	call	_SetRSTBuf
  2149                           ;smgs_rs9b.c: 675: SetRSTBuf(2,3);
  2150  00B78C  0E03               	movlw	3
  2151  00B78E  0100               	movlb	__Lparam shr (0+8)
  2152  00B790  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2153  00B792  0E02               	movlw	2
  2154  00B794  EC87  F07B         	call	_SetRSTBuf
  2155                           ;smgs_rs9b.c: 676: SetRSTBuf(3,4);
  2156  00B798  0E04               	movlw	4
  2157  00B79A  0100               	movlb	__Lparam shr (0+8)
  2158  00B79C  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2159  00B79E  0E03               	movlw	3
  2160  00B7A0  EC87  F07B         	call	_SetRSTBuf
  2161                           ;smgs_rs9b.c: 677: SetRSTBuf(4,0);
  2162  00B7A4  0100               	movlb	__Lparam shr (0+8)
  2163  00B7A6  6BAF               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2164  00B7A8  0E04               	movlw	4
  2165  00B7AA  EC87  F07B         	call	_SetRSTBuf
  2166                           ;smgs_rs9b.c: 678: SetRSTBuf(5,0);
  2167  00B7AE  0100               	movlb	__Lparam shr (0+8)
  2168  00B7B0  6BAF               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2169  00B7B2  0E05               	movlw	5
  2170  00B7B4  EC87  F07B         	call	_SetRSTBuf
  2171                           ;smgs_rs9b.c: 679: }
  2172  00B7B8  D0FE               	goto	L22
  2173  00B7BA                     l104:
  2174                           ;smgs_rs9b.c: 680: else
  2175  00B7BA  0E1C               	movlw	28
  2176  00B7BC  0100               	movlb	__Lparam shr (0+8)
  2177  00B7BE  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2178                           ;smgs_rs9b.c: 683: chkndat=SetNDatCHK(ndat);
  2179  00B7C0  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2180  00B7C2  EC22  F07C         	call	_SetNDatCHK
  2181  00B7C6  0100               	movlb	__Lparam shr (0+8)
  2182  00B7C8  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  2183                           ;smgs_rs9b.c: 684: SetRSTBuf(0,0x11);
  2184  00B7CA  0E11               	movlw	17
  2185  00B7CC  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2186  00B7CE  0E00               	movlw	0
  2187  00B7D0  EC87  F07B         	call	_SetRSTBuf
  2188                           ;smgs_rs9b.c: 685: SetRSTBuf(1,chkndat);
  2189  00B7D4  0100               	movlb	__Lparam shr (0+8)
  2190  00B7D6  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  2191  00B7D8  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2192  00B7DA  0E01               	movlw	1
  2193  00B7DC  EC87  F07B         	call	_SetRSTBuf
  2194                           ;smgs_rs9b.c: 686: SetRSTBuf(2,3);
  2195  00B7E0  0E03               	movlw	3
  2196  00B7E2  0100               	movlb	__Lparam shr (0+8)
  2197  00B7E4  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2198  00B7E6  0E02               	movlw	2
  2199  00B7E8  EC87  F07B         	call	_SetRSTBuf
  2200                           ;smgs_rs9b.c: 687: SetRSTBuf(3,4);
  2201  00B7EC  0E04               	movlw	4
  2202  00B7EE  0100               	movlb	__Lparam shr (0+8)
  2203  00B7F0  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2204  00B7F2  0E03               	movlw	3
  2205  00B7F4  EC87  F07B         	call	_SetRSTBuf
  2206                           ;smgs_rs9b.c: 688: for(i=0;i<23;i++)
  2207  00B7F8  0100               	movlb	__Lparam shr (0+8)
  2208  00B7FA  6BAB               	clrf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  2209  00B7FC  D00E               	goto	L14
  2210  00B7FE                     l106:
  2211                           ;smgs_rs9b.c: 689: {
  2212  00B7FE  0100               	movlb	__Lparam shr (0+8)
  2213  00B800  51AB               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2214  00B802  6FB2               	movwf	?_ReadBtySTAT^(__Lparam& (0+65280)),b
  2215  00B804  51AA               	movf	?a_SaveDataToRS^(__Lparam& (0+65280)),w	;v
      +                          olatile
  2216  00B806  ECE3  F043         	call	_ReadBtySTAT
  2217  00B80A  0100               	movlb	__Lparam shr (0+8)
  2218  00B80C  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2219  00B80E  51AB               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2220  00B810  0F04               	addlw	4
  2221  00B812  EC87  F07B         	call	_SetRSTBuf
  2222  00B816  0100               	movlb	__Lparam shr (0+8)
  2223  00B818  2BAB               	incf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          f,b	;volatile
  2224  00B81A                     L14:
  2225  00B81A  0E16               	movlw	22
  2226  00B81C  65AB               	cpfsgt	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)
      +                          ),b	;volatile
  2227  00B81E  D7EF               	goto	l106
  2228  00B820  D0CA               	goto	L22
  2229                           ;smgs_rs9b.c: 691: }
  2230                           ;smgs_rs9b.c: 719: break;
  2231  00B822                     l109:
  2232                           ;smgs_rs9b.c: 720: }
  2233                           ;smgs_rs9b.c: 722: {
  2234  00B822  EC9F  F043         	call	_ReadBtyHNPZ	;wreg free
  2235  00B826  0900               	iorlw	0
  2236  00B828  E12F               	bnz	l110
  2237                           ;smgs_rs9b.c: 724: {
  2238  00B82A  0E08               	movlw	8
  2239  00B82C  0100               	movlb	__Lparam shr (0+8)
  2240  00B82E  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2241                           ;smgs_rs9b.c: 726: chkndat=SetNDatCHK(ndat);
  2242  00B830  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2243  00B832  EC22  F07C         	call	_SetNDatCHK
  2244  00B836  0100               	movlb	__Lparam shr (0+8)
  2245  00B838  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  2246                           ;smgs_rs9b.c: 727: SetRSTBuf(0,0x11);
  2247  00B83A  0E11               	movlw	17
  2248  00B83C  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2249  00B83E  0E00               	movlw	0
  2250  00B840  EC87  F07B         	call	_SetRSTBuf
  2251                           ;smgs_rs9b.c: 728: SetRSTBuf(1,chkndat);
  2252  00B844  0100               	movlb	__Lparam shr (0+8)
  2253  00B846  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  2254  00B848  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2255  00B84A  0E01               	movlw	1
  2256  00B84C  EC87  F07B         	call	_SetRSTBuf
  2257                           ;smgs_rs9b.c: 729: SetRSTBuf(2,3);
  2258  00B850  0E03               	movlw	3
  2259  00B852  0100               	movlb	__Lparam shr (0+8)
  2260  00B854  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2261  00B856  0E02               	movlw	2
  2262  00B858  EC87  F07B         	call	_SetRSTBuf
  2263                           ;smgs_rs9b.c: 730: SetRSTBuf(3,5);
  2264  00B85C  0E05               	movlw	5
  2265  00B85E  0100               	movlb	__Lparam shr (0+8)
  2266  00B860  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2267  00B862  0E03               	movlw	3
  2268  00B864  EC87  F07B         	call	_SetRSTBuf
  2269                           ;smgs_rs9b.c: 731: SetRSTBuf(4,0);
  2270  00B868  0100               	movlb	__Lparam shr (0+8)
  2271  00B86A  6BAF               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2272  00B86C  0E04               	movlw	4
  2273  00B86E  EC87  F07B         	call	_SetRSTBuf
  2274                           ;smgs_rs9b.c: 732: SetRSTBuf(5,0);
  2275  00B872  0100               	movlb	__Lparam shr (0+8)
  2276  00B874  6BAF               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2277  00B876  0E05               	movlw	5
  2278  00B878  EC87  F07B         	call	_SetRSTBuf
  2279                           ;smgs_rs9b.c: 733: SetRSTBuf(6,0);
  2280  00B87C  0100               	movlb	__Lparam shr (0+8)
  2281  00B87E  6BAF               	clrf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2282  00B880  0E06               	movlw	6
  2283  00B882  EC87  F07B         	call	_SetRSTBuf
  2284                           ;smgs_rs9b.c: 734: }
  2285  00B886  D097               	goto	L22
  2286  00B888                     l110:
  2287                           ;smgs_rs9b.c: 735: else
  2288  00B888  EC9F  F043         	call	_ReadBtyHNPZ	;wreg free
  2289  00B88C  0F08               	addlw	8
  2290  00B88E  0100               	movlb	__Lparam shr (0+8)
  2291  00B890  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2292                           ;smgs_rs9b.c: 738: chkndat=SetNDatCHK(ndat);
  2293  00B892  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2294  00B894  EC22  F07C         	call	_SetNDatCHK
  2295  00B898  0100               	movlb	__Lparam shr (0+8)
  2296  00B89A  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  2297                           ;smgs_rs9b.c: 739: SetRSTBuf(0,0x11);
  2298  00B89C  0E11               	movlw	17
  2299  00B89E  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2300  00B8A0  0E00               	movlw	0
  2301  00B8A2  EC87  F07B         	call	_SetRSTBuf
  2302                           ;smgs_rs9b.c: 740: SetRSTBuf(1,chkndat);
  2303  00B8A6  0100               	movlb	__Lparam shr (0+8)
  2304  00B8A8  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  2305  00B8AA  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2306  00B8AC  0E01               	movlw	1
  2307  00B8AE  EC87  F07B         	call	_SetRSTBuf
  2308                           ;smgs_rs9b.c: 741: SetRSTBuf(2,3);
  2309  00B8B2  0E03               	movlw	3
  2310  00B8B4  0100               	movlb	__Lparam shr (0+8)
  2311  00B8B6  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2312  00B8B8  0E02               	movlw	2
  2313  00B8BA  EC87  F07B         	call	_SetRSTBuf
  2314                           ;smgs_rs9b.c: 742: SetRSTBuf(3,5);
  2315  00B8BE  0E05               	movlw	5
  2316  00B8C0  0100               	movlb	__Lparam shr (0+8)
  2317  00B8C2  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2318  00B8C4  0E03               	movlw	3
  2319  00B8C6  EC87  F07B         	call	_SetRSTBuf
  2320                           ;smgs_rs9b.c: 743: SetRSTBuf(4,ReadBtyHREF(0));
  2321  00B8CA  0E00               	movlw	0
  2322  00B8CC  ECA7  F043         	call	_ReadBtyHREF
  2323  00B8D0  0100               	movlb	__Lparam shr (0+8)
  2324  00B8D2  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2325  00B8D4  0E04               	movlw	4
  2326  00B8D6  EC87  F07B         	call	_SetRSTBuf
  2327                           ;smgs_rs9b.c: 744: SetRSTBuf(5,ReadBtyHREF(1));
  2328  00B8DA  0E01               	movlw	1
  2329  00B8DC  ECA7  F043         	call	_ReadBtyHREF
  2330  00B8E0  0100               	movlb	__Lparam shr (0+8)
  2331  00B8E2  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2332  00B8E4  0E05               	movlw	5
  2333  00B8E6  EC87  F07B         	call	_SetRSTBuf
  2334                           ;smgs_rs9b.c: 745: SetRSTBuf(6,ReadBtyHNPZ());
  2335  00B8EA  EC9F  F043         	call	_ReadBtyHNPZ	;wreg free
  2336  00B8EE  0100               	movlb	__Lparam shr (0+8)
  2337  00B8F0  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2338  00B8F2  0E06               	movlw	6
  2339  00B8F4  EC87  F07B         	call	_SetRSTBuf
  2340                           ;smgs_rs9b.c: 746: for(i=0;i<ReadBtyHNPZ();i++)
  2341  00B8F8  0100               	movlb	__Lparam shr (0+8)
  2342  00B8FA  6BAB               	clrf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          b	;volatile
  2343  00B8FC                     l115:
  2344  00B8FC  EC9F  F043         	call	_ReadBtyHNPZ	;wreg free
  2345  00B900  0100               	movlb	__Lparam shr (0+8)
  2346  00B902  5DAB               	subwf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280))
      +                          ,w	;volatile
  2347  00B904  E20C               	bc	l111
  2348                           ;smgs_rs9b.c: 747: {
  2349  00B906  51AB               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2350  00B908  ECB3  F043         	call	_ReadBtyEEHIST
  2351  00B90C  0100               	movlb	__Lparam shr (0+8)
  2352  00B90E  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2353  00B910  51AB               	movf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2354  00B912  0F07               	addlw	7
  2355  00B914  EC87  F07B         	call	_SetRSTBuf
  2356  00B918  0100               	movlb	__Lparam shr (0+8)
  2357  00B91A  2BAB               	incf	(?a_SaveDataToRS+1)^(__Lparam& (0+65280)),
      +                          f,b	;volatile
  2358  00B91C  D7EF               	goto	l115
  2359  00B91E                     l111:
  2360  00B91E  D04B               	goto	L22
  2361                           ;smgs_rs9b.c: 749: }
  2362                           ;smgs_rs9b.c: 753: break;
  2363  00B920                     l116:
  2364                           ;smgs_rs9b.c: 754: }
  2365                           ;smgs_rs9b.c: 757: {
  2366  00B920  0E06               	movlw	6
  2367  00B922  0100               	movlb	__Lparam shr (0+8)
  2368  00B924  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2369                           ;smgs_rs9b.c: 759: chkndat=SetNDatCHK(ndat);
  2370  00B926  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2371  00B928  EC22  F07C         	call	_SetNDatCHK
  2372  00B92C  0100               	movlb	__Lparam shr (0+8)
  2373  00B92E  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  2374                           ;smgs_rs9b.c: 760: SetRSTBuf(0,0x11);
  2375  00B930  0E11               	movlw	17
  2376  00B932  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2377  00B934  0E00               	movlw	0
  2378  00B936  EC87  F07B         	call	_SetRSTBuf
  2379                           ;smgs_rs9b.c: 761: SetRSTBuf(1,chkndat);
  2380  00B93A  0100               	movlb	__Lparam shr (0+8)
  2381  00B93C  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  2382  00B93E  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2383  00B940  0E01               	movlw	1
  2384  00B942  EC87  F07B         	call	_SetRSTBuf
  2385                           ;smgs_rs9b.c: 762: SetRSTBuf(2,3);
  2386  00B946  0E03               	movlw	3
  2387  00B948  0100               	movlb	__Lparam shr (0+8)
  2388  00B94A  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2389  00B94C  0E02               	movlw	2
  2390  00B94E  EC87  F07B         	call	_SetRSTBuf
  2391                           ;smgs_rs9b.c: 763: SetRSTBuf(3,129);
  2392  00B952  0E81               	movlw	129
  2393  00B954  0100               	movlb	__Lparam shr (0+8)
  2394  00B956  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2395  00B958  0E03               	movlw	3
  2396  00B95A  EC87  F07B         	call	_SetRSTBuf
  2397                           ;smgs_rs9b.c: 764: SetRSTBuf(4,ReadBtyHFLG());
  2398  00B95E  ECA2  F043         	call	_ReadBtyHFLG	;wreg free
  2399  00B962  0100               	movlb	__Lparam shr (0+8)
  2400  00B964  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2401  00B966  0E04               	movlw	4
  2402  00B968  EC87  F07B         	call	_SetRSTBuf
  2403  00B96C  D024               	goto	L22
  2404                           ;smgs_rs9b.c: 765: SetRSCHK(ndat);
  2405                           ;smgs_rs9b.c: 767: break;
  2406  00B96E                     l117:
  2407                           ;smgs_rs9b.c: 768: }
  2408                           ;smgs_rs9b.c: 770: {
  2409  00B96E  0E06               	movlw	6
  2410  00B970  0100               	movlb	__Lparam shr (0+8)
  2411  00B972  6FAD               	movwf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280))
      +                          ,b	;volatile
  2412                           ;smgs_rs9b.c: 772: chkndat=SetNDatCHK(ndat);
  2413  00B974  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2414  00B976  EC22  F07C         	call	_SetNDatCHK
  2415  00B97A  0100               	movlb	__Lparam shr (0+8)
  2416  00B97C  6FAC               	movwf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280))
      +                          ,b
  2417                           ;smgs_rs9b.c: 773: SetRSTBuf(0,0x11);
  2418  00B97E  0E11               	movlw	17
  2419  00B980  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2420  00B982  0E00               	movlw	0
  2421  00B984  EC87  F07B         	call	_SetRSTBuf
  2422                           ;smgs_rs9b.c: 774: SetRSTBuf(1,chkndat);
  2423  00B988  0100               	movlb	__Lparam shr (0+8)
  2424  00B98A  51AC               	movf	(?a_SaveDataToRS+2)^(__Lparam& (0+65280)),
      +                          w
  2425  00B98C  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2426  00B98E  0E01               	movlw	1
  2427  00B990  EC87  F07B         	call	_SetRSTBuf
  2428                           ;smgs_rs9b.c: 775: SetRSTBuf(2,3);
  2429  00B994  0E03               	movlw	3
  2430  00B996  0100               	movlb	__Lparam shr (0+8)
  2431  00B998  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2432  00B99A  0E02               	movlw	2
  2433  00B99C  EC87  F07B         	call	_SetRSTBuf
  2434                           ;smgs_rs9b.c: 776: SetRSTBuf(3,127);
  2435  00B9A0  0E7F               	movlw	127
  2436  00B9A2  0100               	movlb	__Lparam shr (0+8)
  2437  00B9A4  6FAF               	movwf	?_SetRSTBuf^(__Lparam& (0+65280)),b
  2438  00B9A6  0E03               	movlw	3
  2439  00B9A8  EC87  F07B         	call	_SetRSTBuf
  2440                           ;smgs_rs9b.c: 777: SetRSTBuf(4,RSDT1.outALIN);
  2441  00B9AC  C366  F0AF         	movff	_RSDT1+57,?_SetRSTBuf
  2442  00B9B0  0E04               	movlw	4
  2443  00B9B2  EC87  F07B         	call	_SetRSTBuf
  2444  00B9B6                     L22:
  2445                           ;smgs_rs9b.c: 778: SetRSCHK(ndat);
  2446  00B9B6  0100               	movlb	__Lparam shr (0+8)
  2447  00B9B8  51AD               	movf	(?a_SaveDataToRS+3)^(__Lparam& (0+65280)),
      +                          w	;volatile
  2448  00B9BA  EFDA  F07B         	goto	_SetRSCHK
  2449                           ;smgs_rs9b.c: 780: break;
  2450  00B9BE                     l99:
  2451  00B9BE  C3A4  FFE8         	movff	_RSDT1+119,wreg
  2452  00B9C2  0A02               	xorlw	2
  2453  00B9C4  E101 D614          	bz	l100
  2454  00B9C8  0A01               	xorlw	1
  2455  00B9CA  E101 D671          	bz	l102
  2456  00B9CE  0A07               	xorlw	7
  2457  00B9D0  E101 D6B4          	bz	l103
  2458  00B9D4  0A01               	xorlw	1
  2459  00B9D6  E101 D724          	bz	l109
  2460  00B9DA  0A7A               	xorlw	122
  2461  00B9DC  E0C8               	bz	l117
  2462  00B9DE  0AFF               	xorlw	255
  2463  00B9E0  E101 D636          	bz	l101
  2464  00B9E4  0A01               	xorlw	1
  2465  00B9E6  E09C               	bz	l116
  2466  00B9E8  0012               	return	
  2467                           ;smgs_rs9b.c: 783: break;
  2468  00B9EA                     l91:
  2469  00B9EA  50D9               	movf	fsr2l,w,c
  2470  00B9EC  E102 EF33  F058    	bz	l92
  2471  00B9F2  0A01               	xorlw	1
  2472  00B9F4  E102 EF4B  F058    	bz	l93
  2473  00B9FA  0A03               	xorlw	3
  2474  00B9FC  E101 D49F          	bz	l95
  2475  00BA00  0A01               	xorlw	1
  2476  00BA02  E101 D5F4          	bz	l97
  2477  00BA06  0A07               	xorlw	7
  2478  00BA08  E102 EFEC  F058    	bz	l94
  2479  00BA0E  0A01               	xorlw	1
  2480  00BA10  E101 D530          	bz	l96
  2481  00BA14  0012               	return	
  2482                           ;smgs_rs9b.c: 787: }
  2483  00BA16                     __end_of_SaveDataToRS:
  2484                           ;smgs_rs9b.c: 791: void IncRSTimer(void)
  2485                           ;smgs_rs9b.c: 792: {
  2486  00BA16                     _IncRSTimer:
  2487  000000                     
  2488                           ;smgs_rs9b.c: 793: if(MGSD.timRS<255) MGSD.timRS
      +                          ++;
  2489  00BA16  C3AB  F000         	movff	_MGSD+1,btemp
  2490  00BA1A  2800               	incf	btemp,w,c
  2491  00BA1C  B4D8               	btfsc	status,2,c
  2492  00BA1E  0012               	return	
  2493  00BA20  0103               	movlb	(_MGSD+1) shr (0+8)
  2494  00BA22  2BAB               	incf	(_MGSD+1)& (0+255),f,b
  2495                           ;smgs_rs9b.c: 794: }
  2496  00BA24  0C01               	retlw	1
  2497  00BA26                     __end_of_IncRSTimer:
  2498                           ;smgs_rs9b.c: 797: void StartRSTim(void)
  2499                           ;smgs_rs9b.c: 798: {
  2500  00BA26                     _StartRSTim:
  2501  000000                     
  2502                           ;smgs_rs9b.c: 799: MGSD.timRS=0;
  2503  00BA26  0103               	movlb	(_MGSD+1) shr (0+8)
  2504  00BA28  6BAB               	clrf	(_MGSD+1)& (0+255),b
  2505                           ;smgs_rs9b.c: 800: }
  2506  00BA2A  0012               	return	
  2507  00BA2C                     __end_of_StartRSTim:
  2508                           ;smgs_rs9b.c: 803: unsigned char RSTim(void)
  2509                           ;smgs_rs9b.c: 804: {
  2510  00BA2C                     _RSTim:
  2511  000000                     
  2512                           ;smgs_rs9b.c: 805: return MGSD.timRS;
  2513  00BA2C  C3AB  FFE8         	movff	_MGSD+1,wreg
  2514  00BA30  0012               	return	
  2515                           ;smgs_rs9b.c: 806: }
  2516  00BA32                     __end_of_RSTim:
  2517                           ;smgs_rs9b.c: 810: void IncRSTimer2(void)
  2518                           ;smgs_rs9b.c: 811: {
  2519  00BA32                     _IncRSTimer2:
  2520  000000                     
  2521                           ;smgs_rs9b.c: 812: if(MGSD.timRS2<255) MGSD.timR
      +                          S2++;
  2522  00BA32  C3AC  F000         	movff	_MGSD+2,btemp
  2523  00BA36  2800               	incf	btemp,w,c
  2524  00BA38  B4D8               	btfsc	status,2,c
  2525  00BA3A  0012               	return	
  2526  00BA3C  0103               	movlb	(_MGSD+2) shr (0+8)
  2527  00BA3E  2BAC               	incf	(_MGSD+2)& (0+255),f,b
  2528                           ;smgs_rs9b.c: 813: }
  2529  00BA40  0C01               	retlw	1
  2530  00BA42                     __end_of_IncRSTimer2:
  2531                           ;smgs_rs9b.c: 816: void StartRSTim2(void)
  2532                           ;smgs_rs9b.c: 817: {
  2533  00BA42                     _StartRSTim2:
  2534  000000                     
  2535                           ;smgs_rs9b.c: 818: MGSD.timRS2=0;
  2536  00BA42  0103               	movlb	(_MGSD+2) shr (0+8)
  2537  00BA44  6BAC               	clrf	(_MGSD+2)& (0+255),b
  2538                           ;smgs_rs9b.c: 819: }
  2539  00BA46  0012               	return	
  2540  00BA48                     __end_of_StartRSTim2:
  2541                           ;smgs_rs9b.c: 822: unsigned char RSTim2(void)
  2542                           ;smgs_rs9b.c: 823: {
  2543  00BA48                     _RSTim2:
  2544  000000                     
  2545                           ;smgs_rs9b.c: 824: return MGSD.timRS2;
  2546  00BA48  C3AC  FFE8         	movff	_MGSD+2,wreg
  2547  00BA4C  0012               	return	
  2548                           ;smgs_rs9b.c: 825: }
  2549  00BA4E                     __end_of_RSTim2:
  2550                           ;smgs_rs9b.c: 828: void InitReceptProc(void)
  2551                           ;smgs_rs9b.c: 829: {
  2552  00BA4E                     _InitReceptProc:
  2553  000000                     
  2554                           ;smgs_rs9b.c: 830: MGSD._ReceptData=0;
  2555  00BA4E  0103               	movlb	_MGSD shr (0+8)
  2556  00BA50  91AA               	bcf	_MGSD& (0+255),0,b
  2557                           ;smgs_rs9b.c: 831: MGSD._ReceptOK=0;
  2558  00BA52  93AA               	bcf	_MGSD& (0+255),1,b
  2559                           ;smgs_rs9b.c: 832: MGSD._ReceptACK=0;
  2560  00BA54  95AA               	bcf	_MGSD& (0+255),2,b
  2561                           ;smgs_rs9b.c: 833: MGSD._TERR_TIM=0;
  2562  00BA56  97AA               	bcf	_MGSD& (0+255),3,b
  2563                           ;smgs_rs9b.c: 834: MGSD._RERR_TIM=0;
  2564  00BA58  99AA               	bcf	_MGSD& (0+255),4,b
  2565                           ;smgs_rs9b.c: 835: MGSD._RERR_REC=0;
  2566  00BA5A  9BAA               	bcf	_MGSD& (0+255),5,b
  2567                           ;smgs_rs9b.c: 836: MGSD._CON=0;
  2568  00BA5C  9DAA               	bcf	_MGSD& (0+255),6,b
  2569                           ;smgs_rs9b.c: 837: MGSD.timRS=0;
  2570  00BA5E  6BAB               	clrf	(_MGSD+1)& (0+255),b
  2571                           ;smgs_rs9b.c: 838: MGSD.timRS2=0;
  2572  00BA60  6BAC               	clrf	(_MGSD+2)& (0+255),b
  2573                           ;smgs_rs9b.c: 839: MGSD.MTRS=0;
  2574  00BA62  6BAD               	clrf	(_MGSD+3)& (0+255),b
  2575                           ;smgs_rs9b.c: 840: MGSD.KTR=0;
  2576  00BA64  6BAE               	clrf	(_MGSD+4)& (0+255),b
  2577                           ;smgs_rs9b.c: 841: }
  2578  00BA66  0012               	return	
  2579  00BA68                     __end_of_InitReceptProc:
  2580                           ;smgs_rs9b.c: 844: void StartReceptData(void)
  2581                           ;smgs_rs9b.c: 845: {
  2582  00BA68                     _StartReceptData:
  2583  000000                     
  2584                           ;smgs_rs9b.c: 846: MGSD._ReceptData=1;
  2585  00BA68  0103               	movlb	_MGSD shr (0+8)
  2586  00BA6A  81AA               	bsf	_MGSD& (0+255),0,b
  2587                           ;smgs_rs9b.c: 847: MGSD.MTRS=0;
  2588  00BA6C  6BAD               	clrf	(_MGSD+3)& (0+255),b
  2589                           ;smgs_rs9b.c: 848: }
  2590  00BA6E  0012               	return	
  2591  00BA70                     __end_of_StartReceptData:
  2592                           ;smgs_rs9b.c: 868: void ReceptData(const unsigne
      +                          d char tnDat)
  2593                           ;smgs_rs9b.c: 869: {
  2594  00BA70                     _ReceptData:
  2595  000000                     
  2596                           ;_tnDat stored from wreg
  2597  00BA70  0100               	movlb	__Lparam shr (0+8)
  2598  00BA72  6FA9               	movwf	?a_ReceptData^(__Lparam& (0+65280)),b
  2599                           ;smgs_rs9b.c: 870: switch(MGSD.MTRS)
  2600  00BA74  D061               	goto	l130
  2601  00BA76                     l131:
  2602                           ;smgs_rs9b.c: 871: {
  2603                           ;smgs_rs9b.c: 873: MGSD.MTRS=1;
  2604  00BA76  0E01               	movlw	1
  2605  00BA78  CFE8 F3AD          	movff	wreg,_MGSD+3
  2606                           ;smgs_rs9b.c: 874: if(!RCIDL) return;
  2607  00BA7C  ACB8               	btfss	4024,6,c	;volatile
  2608  00BA7E  0C01               	retlw	1
  2609  00BA80                     l133:
  2610                           ;smgs_rs9b.c: 875: case 1:
  2611                           ;smgs_rs9b.c: 876: MGSD._ReceptOK=1;
  2612  00BA80  0103               	movlb	_MGSD shr (0+8)
  2613  00BA82  83AA               	bsf	_MGSD& (0+255),1,b
  2614                           ;smgs_rs9b.c: 877: CREN=0;
  2615  00BA84  98AB               	bcf	4011,4,c
  2616                           ;smgs_rs9b.c: 878: if(VerifyRSCHK(UADt.RNData))
  2617  00BA86  C2F9  FFE8         	movff	_UADt+2,wreg
  2618  00BA8A  ECFC  F07B         	call	_VerifyRSCHK
  2619  00BA8E  0900               	iorlw	0
  2620  00BA90  E007               	bz	l134
  2621                           ;smgs_rs9b.c: 879: {
  2622  00BA92  ECD1  F053         	call	_SaveRSToData	;wreg free
  2623                           ;smgs_rs9b.c: 881: MGSD._ReceptACK=1;
  2624  00BA96  0103               	movlb	_MGSD shr (0+8)
  2625  00BA98  85AA               	bsf	_MGSD& (0+255),2,b
  2626                           ;smgs_rs9b.c: 882: MGSD._CON=1;
  2627  00BA9A  8DAA               	bsf	_MGSD& (0+255),6,b
  2628                           ;smgs_rs9b.c: 883: StartRSTim2();
  2629  00BA9C  DFD2               	call	_StartRSTim2	;wreg free
  2630                           ;smgs_rs9b.c: 885: }
  2631  00BA9E  D002               	goto	l135
  2632  00BAA0                     l134:
  2633                           ;smgs_rs9b.c: 886: else
  2634  00BAA0  0103               	movlb	_MGSD shr (0+8)
  2635  00BAA2  95AA               	bcf	_MGSD& (0+255),2,b
  2636  00BAA4                     l135:
  2637                           ;smgs_rs9b.c: 889: }
  2638  00BAA4  88AB               	bsf	4011,4,c
  2639                           ;smgs_rs9b.c: 891: if(tnDat)
  2640  00BAA6  0100               	movlb	__Lparam shr (0+8)
  2641  00BAA8  51A9               	movf	?a_ReceptData^(__Lparam& (0+65280)),w
  2642  00BAAA  E00D               	bz	l136
  2643                           ;smgs_rs9b.c: 892: {
  2644  00BAAC  0103               	movlb	_MGSD shr (0+8)
  2645  00BAAE  A5AA               	btfss	_MGSD& (0+255),2,b
  2646  00BAB0  D005               	goto	l137
  2647  00BAB2  C32D  FFE8         	movff	_RSDT1,wreg
  2648  00BAB6  EC30  F058         	call	_SaveDataToRS
  2649  00BABA  D003               	goto	l138
  2650  00BABC                     l137:
  2651                           ;smgs_rs9b.c: 894: else SaveDataToRS(0);
  2652  00BABC  0E00               	movlw	0
  2653  00BABE  EC30  F058         	call	_SaveDataToRS
  2654  00BAC2                     l138:
  2655                           ;smgs_rs9b.c: 895: StartUSARTTR();
  2656  00BAC2  EC3E  F07B         	call	_StartUSARTTR	;wreg free
  2657  00BAC6                     l136:
  2658                           ;smgs_rs9b.c: 896: }
  2659  00BAC6  DFAF               	call	_StartRSTim	;wreg free
  2660                           ;smgs_rs9b.c: 898: MGSD.MTRS=2;
  2661  00BAC8  0E02               	movlw	2
  2662  00BACA  CFE8 F3AD          	movff	wreg,_MGSD+3
  2663  00BACE                     l139:
  2664                           ;smgs_rs9b.c: 899: case 2:
  2665                           ;smgs_rs9b.c: 900: if(tnDat)
  2666  00BACE  0100               	movlb	__Lparam shr (0+8)
  2667  00BAD0  51A9               	movf	?a_ReceptData^(__Lparam& (0+65280)),w
  2668  00BAD2  A4D8               	btfss	status,2,c
  2669                           ;smgs_rs9b.c: 901: {
  2670  00BAD4  A89D               	btfss	3997,4,c
  2671  00BAD6  D012               	goto	l140
  2672                           ;smgs_rs9b.c: 903: {
  2673  00BAD8  DFA9               	call	_RSTim	;wreg free
  2674  00BADA  6E00               	movwf	btemp,c
  2675  00BADC  0E02               	movlw	2
  2676  00BADE  5C00               	subwf	btemp,w,c
  2677  00BAE0  E303               	bnc	u451
  2678  00BAE2  0102               	movlb	_UADt shr (0+8)
  2679  00BAE4  A9F7               	btfss	_UADt& (0+255),4,b
  2680  00BAE6  D006               	goto	u470
  2681  00BAE8                     u451:
  2682  00BAE8  DFA1               	call	_RSTim	;wreg free
  2683  00BAEA  6E00               	movwf	btemp,c
  2684  00BAEC  0E15               	movlw	21
  2685  00BAEE  5C00               	subwf	btemp,w,c
  2686  00BAF0  A0D8               	btfss	status,0,c
  2687  00BAF2  0012               	return	
  2688  00BAF4                     u470:
  2689                           ;smgs_rs9b.c: 905: {
  2690  00BAF4  0E03               	movlw	3
  2691  00BAF6  CFE8 F3AD          	movff	wreg,_MGSD+3
  2692                           ;smgs_rs9b.c: 907: break;
  2693  00BAFA  0C03               	retlw	3
  2694                           ;smgs_rs9b.c: 908: }
  2695  00BAFC                     l140:
  2696                           ;smgs_rs9b.c: 910: }
  2697  00BAFC  0103               	movlb	_MGSD shr (0+8)
  2698  00BAFE  97AA               	bcf	_MGSD& (0+255),3,b
  2699                           ;smgs_rs9b.c: 913: if(!TRMT) return;
  2700  00BB00  A2AC               	btfss	4012,1,c	;volatile
  2701  00BB02  0012               	return	
  2702                           ;smgs_rs9b.c: 914: MGSD.MTRS=5;
  2703  00BB04  0E05               	movlw	5
  2704  00BB06  CFE8 F3AD          	movff	wreg,_MGSD+3
  2705                           ;smgs_rs9b.c: 915: break;
  2706  00BB0A  0C05               	retlw	5
  2707  00BB0C                     l144:
  2708                           ;smgs_rs9b.c: 916: case 3:
  2709                           ;smgs_rs9b.c: 918: MGSD._ReceptOK=0;
  2710  00BB0C  0103               	movlb	_MGSD shr (0+8)
  2711  00BB0E  93AA               	bcf	_MGSD& (0+255),1,b
  2712                           ;smgs_rs9b.c: 919: MGSD._TERR_TIM=1;
  2713  00BB10  87AA               	bsf	_MGSD& (0+255),3,b
  2714                           ;smgs_rs9b.c: 920: StopUSARTTR();
  2715  00BB12  EC66  F07B         	call	_StopUSARTTR	;wreg free
  2716                           ;smgs_rs9b.c: 921: MGSD.MTRS=5;
  2717  00BB16  0E05               	movlw	5
  2718  00BB18  CFE8 F3AD          	movff	wreg,_MGSD+3
  2719                           ;smgs_rs9b.c: 922: break;
  2720  00BB1C  0C05               	retlw	5
  2721  00BB1E                     l145:
  2722                           ;smgs_rs9b.c: 923: case 4:
  2723                           ;smgs_rs9b.c: 925: MGSD._ReceptOK=0;
  2724  00BB1E  0103               	movlb	_MGSD shr (0+8)
  2725  00BB20  93AA               	bcf	_MGSD& (0+255),1,b
  2726                           ;smgs_rs9b.c: 926: MGSD._ReceptACK=0;
  2727  00BB22  95AA               	bcf	_MGSD& (0+255),2,b
  2728                           ;smgs_rs9b.c: 927: MGSD._RERR_TIM=1;
  2729  00BB24  89AA               	bsf	_MGSD& (0+255),4,b
  2730                           ;smgs_rs9b.c: 928: MGSD.MTRS=5;
  2731  00BB26  0E05               	movlw	5
  2732  00BB28  CFE8 F3AD          	movff	wreg,_MGSD+3
  2733  00BB2C                     l146:
  2734                           ;smgs_rs9b.c: 929: case 5:
  2735                           ;smgs_rs9b.c: 931: MGSD._ReceptData=0;
  2736  00BB2C  0103               	movlb	_MGSD shr (0+8)
  2737  00BB2E  91AA               	bcf	_MGSD& (0+255),0,b
  2738                           ;smgs_rs9b.c: 932: MGSD.MTRS=0;
  2739  00BB30  6BAD               	clrf	(_MGSD+3)& (0+255),b
  2740                           ;smgs_rs9b.c: 933: UADt.REnd=0;
  2741  00BB32  0102               	movlb	_UADt shr (0+8)
  2742  00BB34  93F7               	bcf	_UADt& (0+255),1,b
  2743                           ;smgs_rs9b.c: 935: break;
  2744  00BB36  0012               	return	
  2745  00BB38                     l130:
  2746  00BB38  C3AD  FFE8         	movff	_MGSD+3,wreg
  2747  00BB3C  0A00               	xorlw	0
  2748  00BB3E  E09B               	bz	l131
  2749  00BB40  0A01               	xorlw	1
  2750  00BB42  E09E               	bz	l133
  2751  00BB44  0A03               	xorlw	3
  2752  00BB46  E0C3               	bz	l139
  2753  00BB48  0A01               	xorlw	1
  2754  00BB4A  E0E0               	bz	l144
  2755  00BB4C  0A07               	xorlw	7
  2756  00BB4E  E0E7               	bz	l145
  2757  00BB50  0A01               	xorlw	1
  2758  00BB52  E0EC               	bz	l146
  2759  00BB54  0012               	return	
  2760                           ;smgs_rs9b.c: 937: }
  2761  00BB56                     __end_of_ReceptData:
  2762                           ;smgs_rs9b.c: 940: void ReceptDataLCD(void)
  2763                           ;smgs_rs9b.c: 941: {
  2764  00BB56                     _ReceptDataLCD:
  2765  000000                     
  2766                           ;smgs_rs9b.c: 942: switch(MGSD.KTR)
  2767  00BB56  D023               	goto	l149
  2768  00BB58                     l150:
  2769                           ;smgs_rs9b.c: 943: {
  2770                           ;smgs_rs9b.c: 945: StartReceptData();
  2771  00BB58  DF87               	call	_StartReceptData	;wreg free
  2772                           ;smgs_rs9b.c: 946: MGSD.KTR=1;
  2773  00BB5A  0E01               	movlw	1
  2774  00BB5C  CFE8 F3AE          	movff	wreg,_MGSD+4
  2775  00BB60                     l151:
  2776                           ;smgs_rs9b.c: 947: case 1:
  2777                           ;smgs_rs9b.c: 948: if(UADt.REnd)
  2778  00BB60  0102               	movlb	_UADt shr (0+8)
  2779  00BB62  A3F7               	btfss	_UADt& (0+255),1,b
  2780  00BB64  D005               	goto	l152
  2781                           ;smgs_rs9b.c: 949: {
  2782  00BB66  0103               	movlb	_MGSD shr (0+8)
  2783  00BB68  A1AA               	btfss	_MGSD& (0+255),0,b
  2784  00BB6A  D002               	goto	l152
  2785                           ;smgs_rs9b.c: 953: {
  2786  00BB6C  0E01               	movlw	1
  2787  00BB6E  D780               	goto	_ReceptData
  2788                           ;smgs_rs9b.c: 955: return;
  2789  00BB70                     l152:
  2790                           ;smgs_rs9b.c: 956: }
  2791  00BB70  DF6B               	call	_RSTim2	;wreg free
  2792  00BB72  6E00               	movwf	btemp,c
  2793  00BB74  0EC9               	movlw	201
  2794  00BB76  5C00               	subwf	btemp,w,c
  2795  00BB78  0103               	movlb	_MGSD shr (0+8)
  2796  00BB7A  E301               	bnc	L16
  2797  00BB7C  9DAA               	bcf	_MGSD& (0+255),6,b
  2798                           ;smgs_rs9b.c: 959: M._LCD=(MGSD._CON)?1:0;
  2799  00BB7E                     L16:
  2800  00BB7E  0E00               	movlw	0
  2801  00BB80  BDAA               	btfsc	_MGSD& (0+255),6,b
  2802  00BB82  0E01               	movlw	1
  2803  00BB84  6E00               	movwf	btemp,c
  2804  00BB86  EE03  F00B         	lfsr	0,_M+5
  2805  00BB8A  3A00               	swapf	btemp,f,c
  2806  00BB8C  3600               	rlcf	btemp,f,c
  2807  00BB8E  3600               	rlcf	btemp,f,c
  2808  00BB90  50EF               	movf	indf0,w,c
  2809  00BB92  1800               	xorwf	btemp,w,c
  2810  00BB94  0BBF               	andlw	-65
  2811  00BB96  1800               	xorwf	btemp,w,c
  2812  00BB98  6EEF               	movwf	indf0,c
  2813                           ;smgs_rs9b.c: 960: MGSD.KTR=0;
  2814  00BB9A  6BAE               	clrf	(_MGSD+4)& (0+255),b
  2815                           ;smgs_rs9b.c: 961: break;
  2816  00BB9C  0012               	return	
  2817  00BB9E                     l149:
  2818  00BB9E  C3AE  FFE8         	movff	_MGSD+4,wreg
  2819  00BBA2  0A00               	xorlw	0
  2820  00BBA4  E0D9               	bz	l150
  2821  00BBA6  0A01               	xorlw	1
  2822  00BBA8  E0DB               	bz	l151
  2823  00BBAA  0012               	return	
  2824                           ;smgs_rs9b.c: 963: }
  2825  00BBAC                     __end_of_ReceptDataLCD:
  2826  000000                     
  2827  000000                     
  2828  000000                     
  2829  000000                     
  2830  000000                     
  2831  000000                     
  2832  000000                     
  2833  000000                     
  2834  000000                     
  2835  000000                     
  2836  000000                     
  2837  000000                     
  2838  000000                     
  2839  000000                     
  2840  000000                     
  2841  000000                     
  2842  000000                     
  2843  000000                     
  2844  000000                     
  2845  000000                     
  2846  000000                     
  2847  000000                     
  2848  000000                     
  2849  000000                     
  2850  000000                     
  2851  000000                     
  2852  000000                     
  2853  000000                     
  2854  000000                     
  2855  000000                     
  2856  000000                     
  2857  000000                     
  2858  000000                     
  2859  000000                     
  2860  000000                     
  2861  000000                     
  2862  000000                     
  2863  000000                     
  2864  000000                     
  2865  000000                     
  2866  000000                     
  2867  000000                     
  2868  000000                     
  2869  000000                     
  2870  000000                     
  2871  000000                     
  2872  000000                     
  2873  000000                     
  2874  000000                     
  2875  000000                     
  2876  000000                     
  2877  000000                     
  2878  000000                     
  2879  000000                     
  2880  000000                     
  2881  000000                     
  2882  000000                     
  2883  000000                     
  2884  000000                     
  2885  000000                     
  2886  000000                     
  2887  000000                     
  2888  000000                     
  2889  000000                     
  2890  000000                     
  2891  000000                     
  2892  000000                     
  2893  000000                     
  2894  000000                     
  2895  000000                     
  2896  000000                     
  2897  000000                     
  2898  000000                     
  2899  000000                     
  2900  000000                     
  2901  000000                     
  2902  000000                     
  2903  000000                     
  2904  000000                     
  2905  000000                     
  2906  000000                     
  2907  000000                     
  2908  000000                     
  2909  000000                     
  2910  000000                     
  2911  000000                     
  2912  000000                     
  2913  000000                     
  2914  000000                     
  2915  000000                     
  2916  000000                     
  2917  000000                     
  2918  000000                     
  2919  000000                     
  2920  000000                     
  2921  000000                     
  2922  000000                     
  2923  000000                     
  2924  000000                     
  2925  000000                     
  2926  000000                     
  2927  000000                     
  2928  000000                     
  2929  000000                     
  2930  000000                     
  2931  000000                     
  2932  000000                     
  2933  000000                     
  2934  000000                     
  2935  000000                     
  2936  000000                     
  2937  000000                     
  2938  000000                     
  2939  000000                     
  2940  000000                     
  2941  000000                     
  2942  000000                     
  2943  000000                     
  2944  000000                     
  2945  000000                     
  2946  000000                     
  2947  000000                     
  2948  000000                     
  2949  000000                     
  2950  000000                     
  2951  000000                     
  2952  000000                     
  2953  000000                     
  2954  000000                     
  2955  000000                     
  2956  000000                     
  2957  000000                     
  2958  000000                     
  2959  000000                     
  2960  000000                     
  2961  000000                     
  2962  000000                     
  2963  000000                     
  2964  000000                     
  2965  000000                     
  2966  000000                     
  2967  000000                     
  2968  000000                     
  2969  000000                     
  2970  000000                     
  2971  000000                     
  2972  000000                     
  2973  000000                     
  2974  000000                     
  2975  000000                     
  2976  000000                     
  2977  000000                     
  2978  000000                     
  2979  000000                     
  2980  000000                     
  2981  000000                     
  2982  000000                     
  2983  000000                     
  2984  000000                     
  2985  000000                     
  2986  000000                     
  2987  000000                     
  2988  000000                     
  2989  000000                     
  2990  000000                     
  2991  000000                     
  2992  000000                     
  2993  000000                     
  2994  000000                     
  2995  000000                     
  2996  000000                     
  2997  000000                     
  2998  000000                     
  2999  000000                     
  3000  000000                     
  3001  000000                     
  3002  000000                     
  3003  000000                     
  3004  000000                     
  3005  000000                     
  3006  000000                     
  3007  000000                     
  3008  000000                     
  3009  000000                     
  3010  000000                     
  3011  000000                     
  3012  000000                     
  3013  000000                     
  3014  000000                     
  3015  000000                     
  3016  000000                     
  3017  000000                     
  3018  000000                     
  3019  000000                     
  3020  000000                     
  3021  000000                     
  3022  000000                     
  3023  000000                     
  3024  000000                     
  3025  000000                     
  3026  000000                     
  3027  000000                     
  3028  000000                     
  3029  000000                     
  3030  000000                     
  3031  000000                     
  3032  000000                     
  3033  000000                     
  3034  000000                     
  3035  000000                     
  3036  000000                     
  3037  000000                     
  3038  000000                     
  3039  000000                     
  3040  000000                     
  3041  000000                     
  3042  000000                     
  3043  000000                     
  3044  000000                     
  3045  000000                     
  3046  000000                     
  3047  000000                     
  3048  000000                     
  3049  000000                     
  3050  000000                     
  3051  000000                     
  3052  000000                     
  3053  000000                     
  3054  000000                     
  3055  000000                     
  3056  000000                     
  3057  000000                     
  3058  000000                     
  3059  000000                     
  3060  000000                     
  3061  000000                     
  3062  000000                     
  3063  000000                     
  3064  000000                     
  3065  000000                     
  3066  000000                     
  3067  000000                     
  3068  000000                     
  3069  000000                     
  3070  000000                     
  3071  000000                     
  3072  000000                     
  3073  000000                     
  3074  000000                     
  3075  000000                     
  3076  000000                     
  3077  000000                     
  3078  000000                     
  3079  000000                     
  3080  000000                     
  3081  000000                     
  3082  000000                     
  3083  000000                     
  3084  000000                     
  3085  000000                     
  3086  000000                     
  3087  000000                     
  3088  000000                     
  3089  000000                     
  3090  000000                     
  3091  000000                     
  3092  000000                     
  3093  000000                     
  3094  000000                     
  3095  000000                     
  3096  000000                     
  3097  000000                     
  3098  000000                     
  3099  000000                     
  3100  000000                     
  3101  000000                     
  3102  000000                     
  3103  000000                     
  3104  000000                     
  3105  000000                     
  3106  000000                     
  3107  000000                     
  3108  000000                     
  3109  000000                     
  3110  000000                     
  3111  000000                     
  3112  000000                     
  3113  000000                     
  3114  000000                     
  3115  000000                     
  3116  000000                     
  3117  000000                     
  3118  000000                     
  3119  000000                     
  3120  000000                     
  3121  000000                     
  3122  000000                     
  3123  000000                     
  3124  000000                     
  3125  000000                     
  3126  000000                     
  3127  000000                     
  3128  000000                     
  3129  000000                     
  3130  000000                     
  3131  000000                     
  3132  000000                     
  3133  000000                     
  3134  000000                     
  3135  000000                     
  3136  000000                     
  3137  000000                     
  3138  000000                     
  3139  000000                     
  3140  000000                     
  3141  000000                     
  3142  000000                     
  3143  000000                     
  3144  000000                     
  3145  000000                     
  3146  000000                     
  3147  000000                     
  3148  000000                     
  3149  000000                     
  3150  000000                     
  3151  000000                     
  3152  000000                     
  3153  000000                     
  3154  000000                     
  3155  000000                     
  3156  000000                     
  3157  000000                     
  3158  000000                     
  3159  000000                     
  3160  000000                     
  3161  000000                     
  3162  000000                     
  3163  000000                     
  3164  000000                     
  3165  000000                     
  3166  000000                     
  3167  000000                     
  3168  000000                     
  3169  000000                     
  3170  000000                     
  3171  000000                     
  3172  000000                     
  3173  000000                     
  3174  000000                     
  3175  000000                     
  3176  000000                     
  3177  000000                     
  3178  000000                     
  3179  000000                     
  3180  000000                     
  3181  000000                     
  3182  000000                     
  3183  000000                     
  3184  000000                     
  3185  000000                     
  3186  000000                     
  3187  000000                     
  3188  000000                     
  3189  000000                     
  3190  000000                     
  3191  000000                     
  3192  000000                     
  3193  000000                     
  3194  000000                     
  3195  000000                     
  3196  000000                     
  3197  000000                     
  3198  000000                     
  3199  000000                     
  3200  000000                     
  3201  000000                     
  3202  000000                     
  3203  000000                     
  3204  000000                     
  3205  000000                     
  3206  000000                     
  3207  000000                     
  3208  000000                     
  3209  000000                     
  3210  000000                     
  3211  000000                     
  3212  000000                     
  3213  000000                     
  3214  000000                     
  3215  000000                     
  3216  000000                     
  3217  000000                     
  3218  000000                     
  3219  000000                     
  3220  000000                     
  3221  000000                     
  3222  000000                     
  3223  000000                     
  3224  000000                     
  3225  000000                     
  3226  000000                     
  3227  000000                     
  3228  000000                     
  3229  000000                     
  3230  000000                     
  3231  000000                     
  3232  000000                     
  3233  000000                     
  3234  000000                     
  3235  000000                     
  3236  000000                     
  3237  000000                     
  3238  000000                     
  3239  000000                     
  3240  000000                     
  3241  000000                     
  3242  000000                     
  3243  000000                     
  3244  000000                     
  3245  000000                     
  3246  000000                     
  3247  000000                     
  3248  000000                     
  3249  000000                     
  3250  000000                     
  3251  000000                     
  3252  000000                     
  3253  000000                     
  3254  000000                     
  3255  000000                     
  3256  000000                     
  3257  000000                     
  3258  000000                     
  3259  000000                     
  3260  000000                     
  3261  000000                     
  3262  000000                     
  3263  000000                     
  3264  000000                     
  3265  000000                     
  3266  000000                     
  3267  000000                     
  3268  000000                     
  3269  000000                     
  3270  000000                     
  3271  000000                     
  3272  000000                     
  3273  000000                     
  3274  000000                     
  3275  000000                     
  3276  000000                     
  3277  000000                     
  3278  000000                     
  3279  000000                     
  3280  000000                     
  3281  000000                     
  3282  000000                     
  3283  000000                     
  3284  000000                     
  3285  000000                     
  3286  000000                     
  3287  000000                     
  3288  000000                     
  3289  000000                     
  3290  000000                     
  3291  000000                     
  3292  000000                     
  3293  000000                     
  3294  000000                     
  3295  000000                     
  3296  000000                     
  3297  000000                     
  3298  000000                     
  3299  000000                     
  3300  000000                     
  3301  000000                     
  3302  000000                     
  3303  000000                     
  3304  000000                     
  3305  000000                     
  3306  000000                     
  3307  000000                     
  3308  000000                     
  3309  000000                     
  3310  000000                     
  3311  000000                     
  3312  000000                     
  3313  000000                     
  3314  000000                     
  3315  000000                     
  3316  000000                     
  3317  000000                     
  3318  000000                     
  3319  000000                     
  3320  000000                     
  3321  000000                     
  3322  000000                     
  3323  000000                     
  3324  000000                     
  3325  000000                     
  3326  000000                     
  3327  000000                     
  3328  000000                     
  3329  000000                     
  3330  000000                     
  3331  000000                     
  3332  000000                     
  3333  000000                     
  3334  000000                     
  3335  000000                     
  3336  000000                     
  3337  000000                     
  3338  000000                     
  3339  000000                     
  3340  000000                     
  3341  000000                     
  3342  000000                     
  3343  000000                     
  3344  000000                     
  3345  000000                     
  3346  000000                     
  3347  000000                     
  3348  000000                     
  3349  000000                     
  3350  000000                     
  3351  000000                     
  3352  000000                     
  3353  000000                     
  3354  000000                     
  3355  000000                     
  3356  000000                     
  3357  000000                     
  3358  000000                     
  3359  000000                     
  3360  000000                     
  3361  000000                     
  3362  000000                     
  3363  000000                     
  3364  000000                     
  3365  000000                     
  3366  000000                     
  3367  000000                     
  3368  000000                     
  3369  000000                     
  3370  000000                     
  3371  000000                     
  3372  000000                     
  3373  000000                     
  3374  000000                     
  3375  000000                     
  3376  000000                     
  3377  000000                     
  3378  000000                     
  3379  000000                     
  3380  000000                     
  3381  000000                     
  3382  000000                     
  3383  000000                     
  3384  000000                     
  3385  000000                     
  3386  000000                     
  3387                           
  3388                           	psect	bigbss
  3389  000EE3                     _mmm:
  3390  000EE3                     	ds	1
  3391  000EE3                     _vvv:
  3392  000EE3                     	ds	1
  3393  000EE3                     _xxy:
  3394  000EE3                     	ds	1
  3395  000EE3                     _zzz:
  3396  000EE3                     	ds	1
  3397  000000                     
  3398  000000                     
  3399  000000                     
  3400  000000                     
  3401  000000                     
  3402  000000                     
  3403  000000                     
  3404                           
  3405                           	psect	bss
  3406  0003AA                     _MGSD:
  3407  0003AA                     	ds	5
  3408  0003AA                     _DtAMMY1:
  3409  0003AA                     	ds	20
  3410                           
  3411                           	psect	temp
  3412  000000                     btemp:
  3413  000000                     	ds	4
  3414                           prodh	equ	0xFF4
  3415                           prodl	equ	0xFF3
  3416                           indf0	equ	0xFEF
  3417                           postinc0	equ	0xFEE
  3418                           postdec0	equ	0xFED
  3419                           fsr0h	equ	0xFEA
  3420                           fsr0l	equ	0xFE9
  3421                           wreg	equ	0xFE8
  3422                           fsr2l	equ	0xFD9
  3423                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Mon Sep 14 17:33:14 2020

                      _M 0306                       l20 A7CA  
                     l21 A7CE                       l22 A816  
                     l32 A8CC                       l24 A826  
                     l33 A8B6                       l25 A824  
                     l42 AA08                       l34 A8BA  
                     l18 B038                       l35 A8BE  
                     l19 A7B0                       l52 ABA4  
                     l36 A8C2                       l61 AFB6  
                     l53 B032                       l45 AA24  
                     l37 A8C6                       l29 A8A4  
                     l70 AD94                       l62 AF8E  
                     l54 B008                       l46 AA1A  
                     l38 A8CA                       l63 AF3E  
                     l55 ABB4                       l47 AA1C  
                     l72 AE36                       l64 AC6E  
                     l56 ABB6                       l48 AA20  
                     l82 AFBC                       l74 AE5A  
                     l66 ACD0                       l91 B9EA  
                     l83 AFBE                       l59 ABF0  
                     l92 B066                       l84 AFC8  
                     l76 AEBA                       l68 AD70  
                     l93 B096                       l85 AFCA  
                     l94 B1D8                       l86 AFD0  
                     l95 B33E                       l87 AFFA  
                     l96 B474                       l97 B5EE  
                     l99 B9BE                       u95 AC3A  
               _StartRTG FD4A                 _StartRTS FCA2  
         ?a_SaveRSToData 00AA           ?a_SaveDataToRS 00AA  
                    l100 B5F0                      l101 B650  
                    l110 B888                      l102 B6B0  
                    l111 B91E                      l103 B73C  
                    l104 B7BA                      l130 BB38  
                    l106 B7FE                      l131 BA76  
                    l115 B8FC                      l140 BAFC  
                    l116 B920                      l133 BA80  
                    l117 B96E                      l109 B822  
                    l150 BB58                      l134 BAA0  
                    l151 BB60                      l135 BAA4  
                    l152 BB70                      l144 BB0C  
                    l136 BAC6                      l145 BB1E  
                    l137 BABC                      l146 BB2C  
                    l138 BAC2                      l139 BACE  
                    l149 BB9E                      u105 AC68  
                    u210 AF1A                      u300 B766  
                    u205 AEEA                      u125 AC9E  
                    u215 AF8C                      u135 AD00  
                    u155 AD4A                      u261 B74A  
                    u165 ADC4                      u185 AE0E  
                    u451 BAE8                      u195 AE8A  
                    u470 BAF4                      _mmm 0EE3  
                    _vvv 0EE4                      _xxy 0EE5  
                    _zzz 0EE6                      wreg 000FE8  
          ?_eeprom_write 00B7                     _MGSD 03AA  
                   _UADt 02F7                     indf0 000FEF  
                   fsr0l 000FE9                     fsr2l 000FD9  
                   btemp 0000                     prodh 000FF4  
                   prodl 000FF3               _StartRSTim BA26  
     __end_of_StartRSTim BA2C            __end_of_RSTim BA32  
            _IncRSTimer2 BA32      __end_of_IncRSTimer2 BA42  
                  _RSDT1 032D                    _DtKNF 02AE  
                  _RSTim BA2C              _VerifyRSCHK F7F8  
             used_btemp0 0001               used_btemp1 0001  
             used_btemp2 0001               used_btemp3 0001  
                _DtAMMY1 03AF              _eeprom_read 0E5E  
                _ClrHFLG FC28                  _GetNDat F8BE  
            _StartRSTim2 BA42                    status 000FD8  
    __end_of_StartRSTim2 BA48             ?a_ReceptData 00A9  
                __Lparam 00A4              _StopUSARTTR F6CC  
          _ReceptDataLCD BB56           _InitReceptProc BA4E  
           ?_eeprom_read 00B7                  __ramtop 1000  
  __end_of_ReceptDataLCD BBAC           __end_of_RSTim2 BA4E  
        _StartReceptData BA68               _IncRSTimer BA16  
     __end_of_IncRSTimer BA26              _WriteEEALIN 857E  
            _ReadBtyHFLG 8744              _ReadBtyHREF 874E  
            _ReadBtyHNPZ 873E              _ReadBtySTAT 87C6  
 __end_of_InitReceptProc BA68            _ReadBtyEEHIST 8766  
                 _RSTim2 BA48                   _MinMax 0100  
              _RdEEParam 7E54            _ReadBtyNZSTAT 8784  
              _ClearEETA 85B2               _ReadEEALIN 85AE  
              _GetRSRBuf F74C                  postdec0 000FED  
              _GetExNDat F8C6                  postinc0 000FEE  
           ?_ReadBtySTAT 00B2             _SetExNDatCHK F882  
           _eeprom_write 0CB8             _StartUSARTTR F67C  
           _SaveRSToData A7A2             _SaveDataToRS B060  
             _SetNDatCHK F844     __end_of_SaveRSToData B060  
   __end_of_SaveDataToRS BA16               _ReceptData BA70  
     __end_of_ReceptData BB56  __end_of_StartReceptData BA70  
              _SetDefFan BCE6                _SetRSTBuf F70E  
               _SetRSCHK F7B4               ?_SetRSTBuf 00AF  
