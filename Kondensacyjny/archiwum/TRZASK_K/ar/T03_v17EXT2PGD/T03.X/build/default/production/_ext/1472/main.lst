

HI-TECH Software PICC-18 Macro Assembler V9.51PL3
                                                       Mon Sep 14 17:33:13 2020


     1                           	processor	18F46K20
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	eeprom_data,global,class=EEDATA,delta=1
     5                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     6                           	psect	bss,global,class=RAM,space=1,delta=1
     7                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     	;#
    98                           
    99                           	psect	text
   100                           ;pic18f45k20.h: 20: static volatile near unsigne
      +                          d char TOSU @ 0xFFF;
   101                           ;pic18f45k20.h: 21: static volatile near unsigne
      +                          d char TOSH @ 0xFFE;
   102                           ;pic18f45k20.h: 22: static volatile near unsigne
      +                          d char TOSL @ 0xFFD;
   103                           ;pic18f45k20.h: 23: static volatile near unsigne
      +                          d char STKPTR @ 0xFFC;
   104                           ;pic18f45k20.h: 24: static volatile near unsigne
      +                          d char PCLATU @ 0xFFB;
   105                           ;pic18f45k20.h: 25: static volatile near unsigne
      +                          d char PCLATH @ 0xFFA;
   106                           ;pic18f45k20.h: 26: static volatile near unsigne
      +                          d char PCL @ 0xFF9;
   107                           ;pic18f45k20.h: 27: static volatile far unsigned
      +                           char * TBLPTR @ 0xFF6;
   108                           ;pic18f45k20.h: 28: static volatile near unsigne
      +                          d char TBLPTRU @ 0xFF8;
   109                           ;pic18f45k20.h: 29: static volatile near unsigne
      +                          d char TBLPTRH @ 0xFF7;
   110                           ;pic18f45k20.h: 30: static volatile near unsigne
      +                          d char TBLPTRL @ 0xFF6;
   111                           ;pic18f45k20.h: 31: static volatile near unsigne
      +                          d char TABLAT @ 0xFF5;
   112                           ;pic18f45k20.h: 32: static volatile near unsigne
      +                          d char PRODH @ 0xFF4;
   113                           ;pic18f45k20.h: 33: static volatile near unsigne
      +                          d char PRODL @ 0xFF3;
   114                           ;pic18f45k20.h: 34: static volatile near unsigne
      +                          d char INTCON @ 0xFF2;
   115                           ;pic18f45k20.h: 35: static near unsigned char IN
      +                          TCON2 @ 0xFF1;
   116                           ;pic18f45k20.h: 36: static volatile near unsigne
      +                          d char INTCON3 @ 0xFF0;
   117                           ;pic18f45k20.h: 37: static volatile near unsigne
      +                          d char INDF0 @ 0xFEF;
   118                           ;pic18f45k20.h: 38: static volatile near unsigne
      +                          d char POSTINC0 @ 0xFEE;
   119                           ;pic18f45k20.h: 39: static volatile near unsigne
      +                          d char POSTDEC0 @ 0xFED;
   120                           ;pic18f45k20.h: 40: static volatile near unsigne
      +                          d char PREINC0 @ 0xFEC;
   121                           ;pic18f45k20.h: 41: static volatile near unsigne
      +                          d char PLUSW0 @ 0xFEB;
   122                           ;pic18f45k20.h: 42: static volatile near unsigne
      +                          d char FSR0H @ 0xFEA;
   123                           ;pic18f45k20.h: 43: static volatile near unsigne
      +                          d char FSR0L @ 0xFE9;
   124                           ;pic18f45k20.h: 44: static volatile near unsigne
      +                          d char WREG @ 0xFE8;
   125                           ;pic18f45k20.h: 45: static volatile near unsigne
      +                          d char INDF1 @ 0xFE7;
   126                           ;pic18f45k20.h: 46: static volatile near unsigne
      +                          d char POSTINC1 @ 0xFE6;
   127                           ;pic18f45k20.h: 47: static volatile near unsigne
      +                          d char POSTDEC1 @ 0xFE5;
   128                           ;pic18f45k20.h: 48: static volatile near unsigne
      +                          d char PREINC1 @ 0xFE4;
   129                           ;pic18f45k20.h: 49: static volatile near unsigne
      +                          d char PLUSW1 @ 0xFE3;
   130                           ;pic18f45k20.h: 50: static volatile near unsigne
      +                          d char FSR1H @ 0xFE2;
   131                           ;pic18f45k20.h: 51: static volatile near unsigne
      +                          d char FSR1L @ 0xFE1;
   132                           ;pic18f45k20.h: 52: static near unsigned char BS
      +                          R @ 0xFE0;
   133                           ;pic18f45k20.h: 53: static volatile near unsigne
      +                          d char INDF2 @ 0xFDF;
   134                           ;pic18f45k20.h: 54: static volatile near unsigne
      +                          d char POSTINC2 @ 0xFDE;
   135                           ;pic18f45k20.h: 55: static volatile near unsigne
      +                          d char POSTDEC2 @ 0xFDD;
   136                           ;pic18f45k20.h: 56: static volatile near unsigne
      +                          d char PREINC2 @ 0xFDC;
   137                           ;pic18f45k20.h: 57: static volatile near unsigne
      +                          d char PLUSW2 @ 0xFDB;
   138                           ;pic18f45k20.h: 58: static volatile near unsigne
      +                          d char FSR2H @ 0xFDA;
   139                           ;pic18f45k20.h: 59: static volatile near unsigne
      +                          d char FSR2L @ 0xFD9;
   140                           ;pic18f45k20.h: 60: static volatile near unsigne
      +                          d char STATUS @ 0xFD8;
   141                           ;pic18f45k20.h: 61: static volatile near unsigne
      +                          d char TMR0H @ 0xFD7;
   142                           ;pic18f45k20.h: 62: static volatile near unsigne
      +                          d char TMR0L @ 0xFD6;
   143                           ;pic18f45k20.h: 64: static volatile near unsigne
      +                          d int TMR0 @ 0xFD6;
   144                           ;pic18f45k20.h: 65: static near unsigned char T0
      +                          CON @ 0xFD5;
   145                           ;pic18f45k20.h: 66: static volatile near unsigne
      +                          d char OSCCON @ 0xFD3;
   146                           ;pic18f45k20.h: 67: static volatile near unsigne
      +                          d char HLVDCON @ 0xFD2;
   147                           ;pic18f45k20.h: 68: static volatile near unsigne
      +                          d char WDTCON @ 0xFD1;
   148                           ;pic18f45k20.h: 69: static volatile near unsigne
      +                          d char RCON @ 0xFD0;
   149                           ;pic18f45k20.h: 70: static volatile near unsigne
      +                          d char TMR1H @ 0xFCF;
   150                           ;pic18f45k20.h: 71: static volatile near unsigne
      +                          d char TMR1L @ 0xFCE;
   151                           ;pic18f45k20.h: 73: static volatile near unsigne
      +                          d int TMR1 @ 0xFCE;
   152                           ;pic18f45k20.h: 74: static near unsigned char T1
      +                          CON @ 0xFCD;
   153                           ;pic18f45k20.h: 75: static volatile near unsigne
      +                          d char TMR2 @ 0xFCC;
   154                           ;pic18f45k20.h: 76: static near unsigned char PR
      +                          2 @ 0xFCB;
   155                           ;pic18f45k20.h: 77: static near unsigned char T2
      +                          CON @ 0xFCA;
   156                           ;pic18f45k20.h: 78: static volatile near unsigne
      +                          d char SSPBUF @ 0xFC9;
   157                           ;pic18f45k20.h: 79: static near unsigned char SS
      +                          PADD @ 0xFC8;
   158                           ;pic18f45k20.h: 80: static volatile near unsigne
      +                          d char SSPSTAT @ 0xFC7;
   159                           ;pic18f45k20.h: 81: static volatile near unsigne
      +                          d char SSPCON1 @ 0xFC6;
   160                           ;pic18f45k20.h: 82: static volatile near unsigne
      +                          d char SSPCON2 @ 0xFC5;
   161                           ;pic18f45k20.h: 83: static volatile near unsigne
      +                          d char ADRESH @ 0xFC4;
   162                           ;pic18f45k20.h: 84: static volatile near unsigne
      +                          d char ADRESL @ 0xFC3;
   163                           ;pic18f45k20.h: 86: static volatile near unsigne
      +                          d int ADRES @ 0xFC3;
   164                           ;pic18f45k20.h: 87: static volatile near unsigne
      +                          d char ADCON0 @ 0xFC2;
   165                           ;pic18f45k20.h: 88: static near unsigned char AD
      +                          CON1 @ 0xFC1;
   166                           ;pic18f45k20.h: 89: static near unsigned char AD
      +                          CON2 @ 0xFC0;
   167                           ;pic18f45k20.h: 90: static volatile near unsigne
      +                          d char CCPR1H @ 0xFBF;
   168                           ;pic18f45k20.h: 91: static volatile near unsigne
      +                          d char CCPR1L @ 0xFBE;
   169                           ;pic18f45k20.h: 93: static volatile near unsigne
      +                          d int CCPR1 @ 0xFBE;
   170                           ;pic18f45k20.h: 94: static volatile near unsigne
      +                          d char CCP1CON @ 0xFBD;
   171                           ;pic18f45k20.h: 95: static volatile near unsigne
      +                          d char CCPR2H @ 0xFBC;
   172                           ;pic18f45k20.h: 96: static volatile near unsigne
      +                          d char CCPR2L @ 0xFBB;
   173                           ;pic18f45k20.h: 98: static volatile near unsigne
      +                          d int CCPR2 @ 0xFBB;
   174                           ;pic18f45k20.h: 99: static volatile near unsigne
      +                          d char CCP2CON @ 0xFBA;
   175                           ;pic18f45k20.h: 100: static near unsigned char P
      +                          STRCON @ 0xFB9;
   176                           ;pic18f45k20.h: 101: static volatile near unsign
      +                          ed char BAUDCTL @ 0xFB8;
   177                           ;pic18f45k20.h: 102: static volatile near unsign
      +                          ed char PWM1CON @ 0xFB7;
   178                           ;pic18f45k20.h: 103: static volatile near unsign
      +                          ed char ECCP1AS @ 0xFB6;
   179                           ;pic18f45k20.h: 104: static volatile near unsign
      +                          ed char CVRCON @ 0xFB5;
   180                           ;pic18f45k20.h: 105: static volatile near unsign
      +                          ed char CVRCON2 @ 0xFB4;
   181                           ;pic18f45k20.h: 106: static volatile near unsign
      +                          ed char TMR3H @ 0xFB3;
   182                           ;pic18f45k20.h: 107: static volatile near unsign
      +                          ed char TMR3L @ 0xFB2;
   183                           ;pic18f45k20.h: 109: static volatile near unsign
      +                          ed int TMR3 @ 0xFB2;
   184                           ;pic18f45k20.h: 110: static near unsigned char T
      +                          3CON @ 0xFB1;
   185                           ;pic18f45k20.h: 111: static near unsigned char S
      +                          PBRGH @ 0xFB0;
   186                           ;pic18f45k20.h: 112: static near unsigned char S
      +                          PBRG @ 0xFAF;
   187                           ;pic18f45k20.h: 114: static near unsigned char S
      +                          PBRG1 @ 0xFAF;
   188                           ;pic18f45k20.h: 115: static volatile near unsign
      +                          ed char RCREG @ 0xFAE;
   189                           ;pic18f45k20.h: 117: static volatile near unsign
      +                          ed char RCREG1 @ 0xFAE;
   190                           ;pic18f45k20.h: 118: static volatile near unsign
      +                          ed char TXREG @ 0xFAD;
   191                           ;pic18f45k20.h: 120: static volatile near unsign
      +                          ed char TXREG1 @ 0xFAD;
   192                           ;pic18f45k20.h: 121: static volatile near unsign
      +                          ed char TXSTA @ 0xFAC;
   193                           ;pic18f45k20.h: 123: static volatile near unsign
      +                          ed char TXSTA1 @ 0xFAC;
   194                           ;pic18f45k20.h: 124: static volatile near unsign
      +                          ed char RCSTA @ 0xFAB;
   195                           ;pic18f45k20.h: 126: static volatile near unsign
      +                          ed char RCSTA1 @ 0xFAB;
   196                           ;pic18f45k20.h: 128: static near unsigned char E
      +                          EADRH @ 0xFAA;
   197                           ;pic18f45k20.h: 130: static near unsigned char E
      +                          EADR @ 0xFA9;
   198                           ;pic18f45k20.h: 131: static volatile near unsign
      +                          ed char EEDATA @ 0xFA8;
   199                           ;pic18f45k20.h: 132: static volatile near unsign
      +                          ed char EECON2 @ 0xFA7;
   200  000000                     	;#
   201                           ;	_prz assigned to ?a_OczekujNaPrzeplywWG+1
   202  000000                     _OczekujNaPrzeplywWG$prz	set	?a_OczekujNaPrzeply
      +                          wWG+1
   203                           ;	_pmp assigned to ?a_OczekujNaPrzeplywWG+0
   204  000000                     _OczekujNaPrzeplywWG$pmp	set	?a_OczekujNaPrzeply
      +                          wWG
   205                           ;	_prz assigned to ?a_DetekcjaPrzeplywuWG+1
   206  000000                     _DetekcjaPrzeplywuWG$prz	set	?a_DetekcjaPrzeplyw
      +                          uWG+1
   207                           ;	_pmp assigned to ?a_DetekcjaPrzeplywuWG+0
   208  000000                     _DetekcjaPrzeplywuWG$pmp	set	?a_DetekcjaPrzeplyw
      +                          uWG
   209                           ;	_st assigned to ?a_DecSTR+0
   210  000000                     _DecSTR$st	set	?a_DecSTR
   211                           ;	_KnfDisErr assigned to ?a_DecERR+1
   212  000000                     _DecERR$KnfDisErr	set	?a_DecERR+1
   213                           ;	_w assigned to ?a_DecERR+0
   214  000000                     _DecERR$w	set	?a_DecERR
   215                           ;	_wr assigned to ?a_KolejkaPobudzen+0
   216  000000                     _KolejkaPobudzen$wr	set	?a_KolejkaPobudzen
   217                           ;	_wr assigned to ?a_RefLCDData+0
   218  000000                     _RefLCDData$wr	set	?a_RefLCDData
   219                           ;	_x assigned to ?a_KalibracjaWentylatora+0
   220  000000                     _KalibracjaWentylatora$x	set	?a_KalibracjaWentyl
      +                          atora
   221                           ;main.h: 37: asm("\tglobal __config" "2"); asm("
      +                          \t__config" "2" " equ " "0xFFFF&0xFFFF&0xFFEF&0x
      +                          FFFF&0xEFFF");
   222  000000                     	;#
   223                           ;main.h: 38: asm("\tglobal __config" "3"); asm("
      +                          \t__config" "3" " equ " "0xFFFF&0x7FFF&0xFDFF&0x
      +                          FFFF");
   224  000000                     	;#
   225                           ;main.h: 39: asm("\tglobal __config" "4"); asm("
      +                          \t__config" "4" " equ " "0xFFFF&0xFFFF&0xFFFB&0x
      +                          FFFF");
   226  000000                     	;#
   227                           ;main.h: 42: asm("\tglobal __config" "5"); asm("
      +                          \t__config" "5" " equ " "0xFFF0");
   228  000000                     	;#
   229                           ;main.h: 43: asm("\tglobal __config" "6"); asm("
      +                          \t__config" "6" " equ " "0xFFF0&0xDFFF");
   230  000000                     	;#
   231                           ;pwm.tp.h: 7: typedef struct {
   232                           ;pwm.tp.h: 9: unsigned _ENPWM:1;
   233                           ;pwm.tp.h: 10: volatile near unsigned char BufPW
      +                          M;
   234                           ;pwm.tp.h: 11: near unsigned char NewPWM;
   235                           ;pwm.tp.h: 14: unsigned _ENPWM2:1;
   236                           ;pwm.tp.h: 15: volatile near unsigned char BufPW
      +                          M2;
   237                           ;pwm.tp.h: 16: near unsigned char NewPWM2;
   238                           ;pwm.tp.h: 18: unsigned char HIPWM;
   239                           ;pwm.tp.h: 20: unsigned char VLO_PWM;
   240                           ;pwm.tp.h: 21: unsigned char MDMOD;
   241                           ;pwm.tp.h: 22: unsigned char DKNF_MDMOD;
   242                           ;pwm.tp.h: 23: unsigned char DV16_MDMOD;
   243                           ;pwm.tp.h: 24: unsigned char MGMOD;
   244                           ;pwm.tp.h: 26: unsigned char MDSTART;
   245                           ;pwm.tp.h: 27: unsigned char MGSTART;
   246                           ;pwm.tp.h: 29: unsigned char MDMAXCO;
   247                           ;pwm.tp.h: 30: unsigned char MGMAXCO;
   248                           ;pwm.tp.h: 33: unsigned char MDMAXCW;
   249                           ;pwm.tp.h: 34: unsigned char MGMAXCW;
   250                           ;pwm.tp.h: 35: unsigned char FIRSTPB;
   251                           ;pwm.tp.h: 36: unsigned char PROP1;
   252                           ;pwm.tp.h: 37: unsigned char PROP2;
   253                           ;pwm.tp.h: 38: unsigned char PROP3;
   254                           ;pwm.tp.h: 39: unsigned char APROC;
   255                           ;pwm.tp.h: 41: unsigned _TMAXCO:1;
   256                           ;pwm.tp.h: 42: unsigned char MSTART;
   257                           ;pwm.tp.h: 43: unsigned char MMAXCO;
   258                           ;pwm.tp.h: 44: unsigned char MMAXCW;
   259                           ;pwm.tp.h: 45: unsigned char PGD;
   260                           ;pwm.tp.h: 46: unsigned char MINPWM;
   261                           ;pwm.tp.h: 47: unsigned char MAXPWM;
   262                           ;pwm.tp.h: 50: }DtPWM;
   263                           ;pwm.h: 232: void SetOsc(void);
   264                           ;pwm.h: 233: extern unsigned char CalkVNTtoPWM(u
      +                          nsigned char nst);
   265                           ;pwm.h: 234: extern unsigned char ReadEEMDMOD(vo
      +                          id);
   266                           ;pwm.h: 235: extern unsigned char ReadEEMSTART(v
      +                          oid);
   267                           ;pwm.h: 236: extern unsigned char ReadEEMAXCO(vo
      +                          id);
   268                           ;pwm.h: 237: extern unsigned char ReadEEMAXCW(vo
      +                          id);
   269                           ;pwm.h: 238: extern unsigned char ProcToVNT(unsi
      +                          gned char wrt);
   270                           ;czcw.tp.h: 7: typedef struct {
   271                           ;czcw.tp.h: 8: unsigned _ltrUP:1;
   272                           ;czcw.tp.h: 9: unsigned _ltrDW:1;
   273                           ;czcw.tp.h: 10: unsigned S_CW:1;
   274                           ;czcw.tp.h: 11: unsigned char przCW;
   275                           ;czcw.tp.h: 12: }DataPrCW;
   276                           ;keypad.tp.h: 7: typedef struct {
   277                           ;keypad.tp.h: 8: unsigned bk:1;
   278                           ;keypad.tp.h: 9: unsigned sbk:1;
   279                           ;keypad.tp.h: 10: unsigned ap:1;
   280                           ;keypad.tp.h: 11: unsigned dk:1;
   281                           ;keypad.tp.h: 12: unsigned fl:1;
   282                           ;keypad.tp.h: 13: }StPin;
   283                           ;keypad.h: 15: extern void StartRTdS(const unsig
      +                          ned char Index);
   284                           ;keypad.h: 16: extern unsigned char RTdS(const u
      +                          nsigned char Index);
   285                           ;pompa.tp.h: 7: typedef struct {
   286                           ;pompa.tp.h: 8: unsigned char MGPROC;
   287                           ;pompa.tp.h: 9: unsigned char MDPROC;
   288                           ;pompa.tp.h: 10: unsigned char APROC;
   289                           ;pompa.tp.h: 12: unsigned char MGPROC2;
   290                           ;pompa.tp.h: 13: }DtPMP;
   291                           ;vntregtch.tp.h: 7: typedef struct {
   292                           ;vntregtch.tp.h: 8: unsigned char dvnt;
   293                           ;vntregtch.tp.h: 9: unsigned char dpwm;
   294                           ;vntregtch.tp.h: 10: }KALVnt;
   295                           ;rgl.tp.h: 4: typedef struct {
   296                           ;rgl.tp.h: 5: unsigned btco:1;
   297                           ;rgl.tp.h: 6: unsigned btcw:1;
   298                           ;rgl.tp.h: 7: unsigned fz:1;
   299                           ;rgl.tp.h: 8: unsigned med_up:1;
   300                           ;rgl.tp.h: 9: unsigned fast_up:1;
   301                           ;rgl.tp.h: 10: unsigned nmod:1;
   302                           ;rgl.tp.h: 11: unsigned del1s:1;
   303                           ;rgl.tp.h: 12: unsigned deln1:1;
   304                           ;rgl.tp.h: 13: unsigned inv_mod:1;
   305                           ;rgl.tp.h: 14: unsigned slow_inc:1;
   306                           ;rgl.tp.h: 16: signed char x_t;
   307                           ;rgl.tp.h: 17: signed char x_f;
   308                           ;rgl.tp.h: 18: signed char x_dt;
   309                           ;rgl.tp.h: 19: signed char x_df;
   310                           ;rgl.tp.h: 21: unsigned char ytmp;
   311                           ;rgl.tp.h: 22: unsigned char srp;
   312                           ;rgl.tp.h: 23: unsigned char xmod;
   313                           ;rgl.tp.h: 24: unsigned char tmp_pwm;
   314                           ;rgl.tp.h: 26: }DtRgl;
   315                           ;rgl.h: 56: void StartMCO1F(void);
   316                           ;rgl.h: 57: void ModZgCO(void);
   317                           ;rgl.h: 58: void ModDkCO(void);
   318                           ;rgl.h: 59: void ModPruCO(void);
   319                           ;rgl.h: 60: void IncMaxCO(void);
   320                           ;rgl.h: 61: void ModPrzCO(void);
   321                           ;rgl.h: 62: void PropOPT(void);
   322                           ;rgl.h: 64: void StartCO(void);
   323                           ;rgl.h: 65: void StartMCW(void);
   324                           ;rgl.h: 67: unsigned char FirstPCW(void);
   325                           ;rgl.h: 68: void ClrMod(void);
   326                           ;rgl.h: 69: void ModToCW(void);
   327                           ;rgl.h: 70: void ModToCO(void);
   328                           ;rgl.h: 71: void IncConstCOCW(void);
   329                           ;rgl.h: 72: void ReadDataCO(void);
   330                           ;rgl.h: 73: void ReadDataCW(void);
   331  00113A                     _main:
   332  000000                     
   333                           ;main.c: 66: InitOsc();
   334  00113A  EC78  F007         	call	_InitOsc	;wreg free
   335                           ;main.c: 67: InitGlobal();
   336  00113E  ECAE  F01F         	call	_InitGlobal	;wreg free
   337                           ;main.c: 68: InitTimer1();
   338  001142  ECCE  F006         	call	_InitTimer1	;wreg free
   339                           ;main.c: 69: InitTimer3();
   340  001146  ECBA  F006         	call	_InitTimer3	;wreg free
   341                           ;main.c: 70: InitPort();
   342  00114A  EC6A  F079         	call	_InitPort	;wreg free
   343                           ;main.c: 71: InitAC();
   344  00114E  ECB5  F001         	call	_InitAC	;wreg free
   345                           ;main.c: 72: InitPWM();
   346  001152  EC47  F000         	call	_InitPWM	;wreg free
   347                           ;main.c: 73: InitI2C();
   348  001156  ECAA  F064         	call	_InitI2C	;wreg free
   349                           ;main.c: 74: InitReceptProc();
   350  00115A  EC27  F05D         	call	_InitReceptProc	;wreg free
   351                           ;main.c: 75: InitUart();
   352  00115E  EC6F  F07A         	call	_InitUart	;wreg free
   353                           ;main.c: 76: InitDataPmr();
   354  001162  EC43  F045         	call	_InitDataPmr	;wreg free
   355                           ;main.c: 77: ClearData();
   356  001166  DA4F               	call	_ClearData	;wreg free
   357                           ;main.c: 78: BitSet2(&RSDT1.outSTAT0,1,0);
   358  001168  0100               	movlb	__Lparam shr (0+8)
   359  00116A  0E44               	movlw	low (_RSDT1+23)
   360  00116C  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   361  00116E  0E03               	movlw	high (_RSDT1+23)
   362  001170  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   363  001172  0E01               	movlw	1
   364  001174  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   365  001176  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   366  001178  ECEC  F003         	call	_BitSet2	;wreg free
   367                           ;main.c: 79: BitSet2(&RSDT1.outSTAT0,0,0);
   368  00117C  0100               	movlb	__Lparam shr (0+8)
   369  00117E  0E44               	movlw	low (_RSDT1+23)
   370  001180  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   371  001182  0E03               	movlw	high (_RSDT1+23)
   372  001184  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   373  001186  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   374  001188  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   375  00118A  ECEC  F003         	call	_BitSet2	;wreg free
   376                           ;main.c: 80: RefBHist(1);
   377  00118E  0E01               	movlw	1
   378  001190  ECE7  F07C         	call	_RefBHist
   379                           ;main.c: 81: RefBStat(1);
   380  001194  0E01               	movlw	1
   381  001196  EC04  F07E         	call	_RefBStat
   382                           ;main.c: 84: if (!POR||!BOR)
   383  00119A  A2D0               	btfss	4048,1,c	;volatile
   384  00119C  D002               	goto	u30
   385  00119E  B0D0               	btfsc	4048,0,c	;volatile
   386  0011A0  D005               	goto	l35
   387  0011A2                     u30:
   388                           ;main.c: 85: {
   389  0011A2  0103               	movlb	(_M+4) shr (0+8)
   390  0011A4  850A               	bsf	(_M+4)& (0+255),2,b
   391                           ;main.c: 87: PwrOnDelay();
   392  0011A6  EC21  F007         	call	_PwrOnDelay	;wreg free
   393                           ;main.c: 88: }
   394  0011AA  D004               	goto	l36
   395  0011AC                     l35:
   396                           ;main.c: 89: else
   397  0011AC  0103               	movlb	(_M+4) shr (0+8)
   398  0011AE  830A               	bsf	(_M+4)& (0+255),1,b
   399                           ;main.c: 92: PwrOnDelay();
   400  0011B0  EC21  F007         	call	_PwrOnDelay	;wreg free
   401  0011B4                     l36:
   402                           ;main.c: 93: }
   403  0011B4  EC2A  F03F         	call	_RdEEParam	;wreg free
   404                           ;main.c: 98: if (!POR||!BOR)
   405  0011B8  A2D0               	btfss	4048,1,c	;volatile
   406  0011BA  D002               	goto	u60
   407  0011BC  B0D0               	btfsc	4048,0,c	;volatile
   408  0011BE  D002               	goto	l37
   409  0011C0                     u60:
   410                           ;main.c: 99: {
   411  0011C0  82D0               	bsf	4048,1,c	;volatile
   412                           ;main.c: 101: BOR=1;
   413  0011C2  80D0               	bsf	4048,0,c	;volatile
   414  0011C4                     l37:
   415                           ;main.c: 103: }
   416  0011C4  9483               	bcf	3971,2,c	;volatile
   417                           ;main.c: 108: switch(DtKNF.tpkt)
   418  0011C6  D001               	goto	l39
   419  0011C8                     l41:
   420  0011C8  D006               	goto	l42
   421                           ;main.c: 119: break;
   422  0011CA                     l39:
   423  0011CA  C2BC  FFE8         	movff	_DtKNF+14,wreg
   424  0011CE  0A00               	xorlw	0
   425  0011D0  E0FB               	bz	l41
   426  0011D2  0A03               	xorlw	3
   427  0011D4  E0F9               	bz	l41
   428                           ;main.c: 111: case 3:
   429                           ;main.c: 114: break;
   430  0011D6                     l42:
   431                           ;main.c: 115: }
   432                           ;main.c: 117: {
   433  0011D6  0E00               	movlw	0
   434  0011D8  A283               	btfss	3971,1,c	;volatile
   435  0011DA  0E01               	movlw	1
   436  0011DC  6E00               	movwf	btemp,c
   437  0011DE  EE03  F00B         	lfsr	0,_M+5
   438  0011E2  18EF               	xorwf	indf0,w,c
   439  0011E4  0BFE               	andlw	-2
   440  0011E6  1800               	xorwf	btemp,w,c
   441  0011E8  6EEF               	movwf	indf0,c
   442                           ;main.c: 125: if(M.ERR_BTY=eeprom_read(0x00C0))
   443  0011EA  0EC0               	movlw	192
   444  0011EC  0100               	movlb	__Lparam shr (0+8)
   445  0011EE  6FB7               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   446  0011F0  6BB8               	clrf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   447  0011F2  EC2F  F007         	call	_eeprom_read	;wreg free
   448  0011F6  EE03  F013         	lfsr	0,_M+13
   449  0011FA  6EEF               	movwf	indf0,c
   450  0011FC  50EF               	movf	indf0,w,c
   451  0011FE  E02D               	bz	l43
   452                           ;main.c: 126: {
   453  001200  EE02  F0C3         	lfsr	0,_DtKNF+21
   454  001204  50EF               	movf	indf0,w,c
   455  001206  E10D               	bnz	l44
   456                           ;main.c: 128: {
   457  001208  C313  FFE8         	movff	_M+13,wreg
   458  00120C  0A05               	xorlw	5
   459  00120E  E109               	bnz	l44
   460                           ;main.c: 130: {
   461  001210  0E01               	movlw	1
   462  001212  0100               	movlb	__Lparam shr (0+8)
   463  001214  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
   464  001216  C313  FFE8         	movff	_M+13,wreg
   465  00121A  EC36  F003         	call	_PrintErr
   466                           ;main.c: 132: ErrPTG();
   467  00121E  ECEE  F01D         	call	_ErrPTG	;wreg free
   468  001222                     l44:
   469                           ;main.c: 133: }
   470  001222  0E00               	movlw	0
   471  001224  0103               	movlb	(_M+13) shr (0+8)
   472  001226  6513               	cpfsgt	(_M+13)& (0+255),b
   473  001228  D004               	goto	u121
   474  00122A  0E04               	movlw	4
   475  00122C  6113               	cpfslt	(_M+13)& (0+255),b
   476  00122E  D001               	goto	u121
   477  001230  D008               	goto	u150
   478  001232                     u121:
   479  001232  C313  FFE8         	movff	_M+13,wreg
   480  001236  0A07               	xorlw	7
   481  001238  E004               	bz	u150
   482  00123A  C313  FFE8         	movff	_M+13,wreg
   483  00123E  0A0D               	xorlw	13
   484  001240  E10A               	bnz	l46
   485  001242                     u150:
   486                           ;main.c: 136: {
   487  001242  0E01               	movlw	1
   488  001244  0100               	movlb	__Lparam shr (0+8)
   489  001246  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
   490  001248  C313  FFE8         	movff	_M+13,wreg
   491  00124C  EC36  F003         	call	_PrintErr
   492                           ;main.c: 138: ErrPTG();
   493  001250  ECEE  F01D         	call	_ErrPTG	;wreg free
   494                           ;main.c: 139: }
   495  001254  D002               	goto	l43
   496  001256                     l46:
   497                           ;main.c: 140: else M.ERR_BTY=0;
   498  001256  0103               	movlb	(_M+13) shr (0+8)
   499  001258  6B13               	clrf	(_M+13)& (0+255),b
   500  00125A                     l43:
   501                           ;main.c: 141: }
   502  00125A  EC75  F048         	call	_PomiarCO	;wreg free
   503                           ;main.c: 146: PomiarCW();
   504  00125E  ECE0  F04A         	call	_PomiarCW	;wreg free
   505                           ;main.c: 147: PomiarZW();
   506  001262  ECD5  F04B         	call	_PomiarZW	;wreg free
   507                           ;main.c: 148: PomiarCS();
   508  001266  ECE0  F052         	call	_PomiarCS	;wreg free
   509                           ;main.c: 149: PomiarPCO();
   510  00126A  EC35  F050         	call	_PomiarPCO	;wreg free
   511                           ;main.c: 150: PomiarPCW();
   512  00126E  ECED  F050         	call	_PomiarPCW	;wreg free
   513                           ;main.c: 151: PomiarPFN();
   514  001272  ECDF  F051         	call	_PomiarPFN	;wreg free
   515                           ;main.c: 152: PomiarECO();
   516  001276  EC85  F051         	call	_PomiarECO	;wreg free
   517                           ;main.c: 153: PomiarIN();
   518  00127A  ECC5  F04A         	call	_PomiarIN	;wreg free
   519                           ;main.c: 154: DtCO._newPCO=0;
   520  00127E  0100               	movlb	(_DtCO+1) shr (0+8)
   521  001280  9F7E               	bcf	(_DtCO+1)& (0+255),7,b
   522                           ;main.c: 155: DtCW._newPCW=0;
   523  001282  0100               	movlb	(_DtCW+1) shr (0+8)
   524  001284  916F               	bcf	(_DtCW+1)& (0+255),0,b
   525                           ;main.c: 158: RD3=0;
   526  001286  9683               	bcf	3971,3,c	;volatile
   527                           ;main.c: 159: RD0=0;
   528  001288  9083               	bcf	3971,0,c	;volatile
   529                           ;main.c: 160: WritePWM(0);
   530  00128A  0E00               	movlw	0
   531  00128C  EC74  F001         	call	_WritePWM
   532                           ;main.c: 162: RestartFltPrt();
   533  001290  DA14               	call	_RestartFltPrt	;wreg free
   534                           ;main.c: 163: StartRTS(9);
   535  001292  0E09               	movlw	9
   536  001294  EC51  F07E         	call	_StartRTS
   537                           ;main.c: 168: DtCW.PCW=65;
   538  001298  0E41               	movlw	65
   539  00129A  CFE8 F071          	movff	wreg,_DtCW+3
   540                           ;main.c: 169: DtCO.PCO=85;
   541  00129E  0E55               	movlw	85
   542  0012A0  CFE8 F081          	movff	wreg,_DtCO+4
   543                           ;main.c: 172: WritePWM2(0);
   544  0012A4  0E00               	movlw	0
   545  0012A6  EC81  F001         	call	_WritePWM2
   546                           ;main.c: 173: if(M._PW_START||eeprom_read(0x01D7
      +                          ))
   547  0012AA  0103               	movlb	(_M+4) shr (0+8)
   548  0012AC  B50A               	btfsc	(_M+4)& (0+255),2,b
   549  0012AE  D009               	goto	u190
   550  0012B0  0100               	movlb	__Lparam shr (0+8)
   551  0012B2  0ED7               	movlw	215
   552  0012B4  6FB7               	movwf	?_eeprom_read^(__Lparam& (0+65280)),b
   553  0012B6  0E01               	movlw	1
   554  0012B8  6FB8               	movwf	(?_eeprom_read+1)^(__Lparam& (0+65280)),b
   555  0012BA  EC2F  F007         	call	_eeprom_read	;wreg free
   556  0012BE  0A00               	xorlw	0
   557  0012C0  E00A               	bz	l48
   558  0012C2                     u190:
   559                           ;main.c: 174: {
   560  0012C2  0100               	movlb	__Lparam shr (0+8)
   561  0012C4  0ED7               	movlw	215
   562  0012C6  6FB4               	movwf	?_if_eeprom_write^(__Lparam& (0+65280)),b
   563  0012C8  0E01               	movlw	1
   564  0012CA  6FB5               	movwf	(?_if_eeprom_write+1)^(__Lparam& (0+65280
      +                          )),b
   565  0012CC  6BB6               	clrf	(?_if_eeprom_write+2)^(__Lparam& (0+65280)
      +                          ),b
   566  0012CE  EC85  F043         	call	_if_eeprom_write	;wreg free
   567                           ;main.c: 176: KalibracjaWentylatora();
   568  0012D2  D90B               	call	_KalibracjaWentylatora	;wreg free
   569                           ;main.c: 177: }
   570  0012D4  D002               	goto	l51
   571  0012D6                     l48:
   572                           ;main.c: 178: else
   573  0012D6  EC7E  F061         	call	_OdczytDanychKalibracji	;wreg free
   574  0012DA                     l51:
   575                           ;main.c: 181: }
   576                           ;main.c: 194: {
   577  0012DA  0004               	clrwdt		;#
   578                           ;main.c: 196: BitSet2(&RSDT1.outSTAT0,1,1);
   579  0012DC  0100               	movlb	__Lparam shr (0+8)
   580  0012DE  0E44               	movlw	low (_RSDT1+23)
   581  0012E0  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   582  0012E2  0E03               	movlw	high (_RSDT1+23)
   583  0012E4  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   584  0012E6  0E01               	movlw	1
   585  0012E8  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   586  0012EA  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   587  0012EC  ECEC  F003         	call	_BitSet2	;wreg free
   588                           ;main.c: 197: BitSet2(&RSDT1.outSTAT0,0,0);
   589  0012F0  0100               	movlb	__Lparam shr (0+8)
   590  0012F2  0E44               	movlw	low (_RSDT1+23)
   591  0012F4  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   592  0012F6  0E03               	movlw	high (_RSDT1+23)
   593  0012F8  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   594  0012FA  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   595  0012FC  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   596  0012FE  ECEC  F003         	call	_BitSet2	;wreg free
   597                           ;main.c: 198: M._PRACA=M._ROZRUCH||RD0;
   598  001302  0103               	movlb	(_M+1) shr (0+8)
   599  001304  A707               	btfss	(_M+1)& (0+255),3,b
   600  001306  B083               	btfsc	3971,0,c	;volatile
   601  001308  D001               	goto	u221
   602  00130A  D002               	goto	u220
   603  00130C                     u221:
   604  00130C  0E01               	movlw	1
   605  00130E  D001               	goto	u230
   606  001310                     u220:
   607  001310  0E00               	movlw	0
   608  001312                     u230:
   609  001312  6E00               	movwf	btemp,c
   610  001314  EE03  F00A         	lfsr	0,_M+4
   611  001318  3600               	rlcf	btemp,f,c
   612  00131A  3600               	rlcf	btemp,f,c
   613  00131C  3600               	rlcf	btemp,f,c
   614  00131E  50EF               	movf	indf0,w,c
   615  001320  1800               	xorwf	btemp,w,c
   616  001322  0BF7               	andlw	-9
   617  001324  1800               	xorwf	btemp,w,c
   618  001326  6EEF               	movwf	indf0,c
   619                           ;main.c: 200: ReceptDataLCD();
   620  001328  ECAB  F05D         	call	_ReceptDataLCD	;wreg free
   621                           ;main.c: 201: MKonfiguracja();
   622  00132C  ECA6  F033         	call	_MKonfiguracja	;wreg free
   623                           ;main.c: 207: PomiarVNT();
   624  001330  EC39  F06E         	call	_PomiarVNT	;wreg free
   625                           ;main.c: 208: PomiarPCO();
   626  001334  EC35  F050         	call	_PomiarPCO	;wreg free
   627                           ;main.c: 209: PomiarPCW();
   628  001338  ECED  F050         	call	_PomiarPCW	;wreg free
   629                           ;main.c: 210: PomiarPFN();
   630  00133C  ECDF  F051         	call	_PomiarPFN	;wreg free
   631                           ;main.c: 211: PomiarECO();
   632  001340  EC85  F051         	call	_PomiarECO	;wreg free
   633                           ;main.c: 212: PomiarCO();
   634  001344  EC75  F048         	call	_PomiarCO	;wreg free
   635                           ;main.c: 213: PomiarCW();
   636  001348  ECE0  F04A         	call	_PomiarCW	;wreg free
   637                           ;main.c: 214: PomiarZW();
   638  00134C  ECD5  F04B         	call	_PomiarZW	;wreg free
   639                           ;main.c: 215: FiltrPomiarowyCOCW();
   640  001350  ECFF  F047         	call	_FiltrPomiarowyCOCW	;wreg free
   641                           ;main.c: 216: PomiarCS();
   642  001354  ECE0  F052         	call	_PomiarCS	;wreg free
   643                           ;main.c: 217: PomiarIN();
   644  001358  ECC5  F04A         	call	_PomiarIN	;wreg free
   645                           ;main.c: 219: DecERR();
   646  00135C  ECE4  F010         	call	_DecERR	;wreg free
   647                           ;main.c: 220: DecSTR();
   648  001360  EC4F  F012         	call	_DecSTR	;wreg free
   649                           ;main.c: 221: DecRozruch();
   650  001364  EC39  F015         	call	_DecRozruch	;wreg free
   651                           ;main.c: 222: DecWylacz();
   652  001368  ECFC  F015         	call	_DecWylacz	;wreg free
   653                           ;main.c: 223: FunkcjaSerwisowa();
   654  00136C  EC1D  F017         	call	_FunkcjaSerwisowa	;wreg free
   655                           ;main.c: 224: DecyzjaAntyLeg();
   656  001370  EC55  F010         	call	_DecyzjaAntyLeg	;wreg free
   657                           ;main.c: 225: KolejkaPobudzen();
   658  001374  ECAC  F00F         	call	_KolejkaPobudzen	;wreg free
   659                           ;main.c: 226: KontrolaWentylatora();
   660  001378  ECC5  F01B         	call	_KontrolaWentylatora	;wreg free
   661                           ;main.c: 227: RefLCDData();
   662  00137C  D9CB               	call	_RefLCDData	;wreg free
   663                           ;main.c: 228: RefBHist(0);
   664  00137E  0E00               	movlw	0
   665  001380  ECE7  F07C         	call	_RefBHist
   666                           ;main.c: 230: RglPmp();
   667  001384  EC58  F077         	call	_RglPmp	;wreg free
   668                           ;main.c: 231: if(M._ZMKCOCW) ZmienKCOKCW();
   669  001388  0103               	movlb	(_M+1) shr (0+8)
   670  00138A  B507               	btfsc	(_M+1)& (0+255),2,b
   671  00138C  EC07  F01B         	call	_ZmienKCOKCW	;wreg free
   672                           ;main.c: 232: if(M._LOW_PMP) SetLowPMP();
   673  001390  0103               	movlb	(_M+8) shr (0+8)
   674  001392  B90E               	btfsc	(_M+8)& (0+255),4,b
   675  001394  EC68  F01B         	call	_SetLowPMP	;wreg free
   676                           ;main.c: 233: if(M._WYLACZ) Wylacz();
   677  001398  0103               	movlb	(_M+1) shr (0+8)
   678  00139A  B307               	btfsc	(_M+1)& (0+255),1,b
   679  00139C  EC1F  F019         	call	_Wylacz	;wreg free
   680                           ;main.c: 234: if(M._ROZRUCH) Rozruch();
   681  0013A0  0103               	movlb	(_M+1) shr (0+8)
   682  0013A2  B707               	btfsc	(_M+1)& (0+255),3,b
   683  0013A4  ECC1  F017         	call	_Rozruch	;wreg free
   684                           ;main.c: 235: if(M._VWYBIEG) VWybieg();
   685  0013A8  0103               	movlb	(_M+1) shr (0+8)
   686  0013AA  BF07               	btfsc	(_M+1)& (0+255),7,b
   687  0013AC  EC46  F01A         	call	_VWybieg	;wreg free
   688                           ;main.c: 236: ReloadPlomien();
   689  0013B0  ECA2  F01B         	call	_ReloadPlomien	;wreg free
   690                           ;main.c: 237: if(M._RUSZ_PLOMIEN) RuszPlomien();
   691  0013B4  0103               	movlb	(_M+2) shr (0+8)
   692  0013B6  B108               	btfsc	(_M+2)& (0+255),0,b
   693  0013B8  EC79  F01B         	call	_RuszPlomien	;wreg free
   694                           ;main.c: 238: Proba48();
   695  0013BC  ECF6  F01B         	call	_Proba48	;wreg free
   696                           ;main.c: 239: if(M._RUSZ_48) Rusz48();
   697  0013C0  0103               	movlb	(_M+1) shr (0+8)
   698  0013C2  B907               	btfsc	(_M+1)& (0+255),4,b
   699  0013C4  EC0D  F01C         	call	_Rusz48	;wreg free
   700                           ;main.c: 240: Proba48Z3();
   701  0013C8  EC59  F01C         	call	_Proba48Z3	;wreg free
   702                           ;main.c: 241: if(M._RUSZ_48Z3) Rusz48Z3();
   703  0013CC  0103               	movlb	(_M+1) shr (0+8)
   704  0013CE  BB07               	btfsc	(_M+1)& (0+255),5,b
   705  0013D0  EC7D  F01C         	call	_Rusz48Z3	;wreg free
   706                           ;main.c: 242: if(M._BLOKUJ_3M) BlokadaL3();
   707  0013D4  0103               	movlb	(_M+2) shr (0+8)
   708  0013D6  B708               	btfsc	(_M+2)& (0+255),3,b
   709  0013D8  EC54  F017         	call	_BlokadaL3	;wreg free
   710                           ;main.c: 243: if(M._BLOKUJ_15S)
   711  0013DC  0103               	movlb	(_M+2) shr (0+8)
   712  0013DE  B908               	btfsc	(_M+2)& (0+255),4,b
   713                           ;main.c: 244: {
   714  0013E0  B70A               	btfsc	(_M+4)& (0+255),3,b
   715  0013E2  D002               	goto	l62
   716  0013E4  EC89  F017         	call	_Blokada15S	;wreg free
   717  0013E8                     l62:
   718                           ;main.c: 246: }
   719  0013E8  0103               	movlb	(_M+2) shr (0+8)
   720  0013EA  BB08               	btfsc	(_M+2)& (0+255),5,b
   721  0013EC  ECB2  F01F         	call	_Moduluj	;wreg free
   722                           ;main.c: 248: if(DtKNF.robg==0)
   723  0013F0  EE02  F0C3         	lfsr	0,_DtKNF+21
   724  0013F4  50EF               	movf	indf0,w,c
   725  0013F6  E107               	bnz	l65
   726                           ;main.c: 249: {
   727  0013F8  EC84  F01A         	call	_DetekcjaPrzeplywuWG	;wreg free
   728                           ;main.c: 251: if(M._RUSZ_POMPE) OczekujNaPrzeply
      +                          wWG();
   729  0013FC  0103               	movlb	(_M+2) shr (0+8)
   730  0013FE  B508               	btfsc	(_M+2)& (0+255),2,b
   731  001400  ECCA  F01A         	call	_OczekujNaPrzeplywWG	;wreg free
   732                           ;main.c: 252: }
   733  001404  D003               	goto	l67
   734  001406                     l65:
   735                           ;main.c: 253: else
   736  001406  0103               	movlb	(_M+2) shr (0+8)
   737  001408  9508               	bcf	(_M+2)& (0+255),2,b
   738                           ;main.c: 256: M._prb_PRZ=0;
   739  00140A  950B               	bcf	(_M+5)& (0+255),2,b
   740  00140C                     l67:
   741                           ;main.c: 257: }
   742  00140C  ECA6  F01C         	call	_DecyzjaOdp	;wreg free
   743                           ;main.c: 259: if(M._BLOKUJ_ODP) Odpowietrzenie()
      +                          ;
   744  001410  0103               	movlb	(_M+7) shr (0+8)
   745  001412  BD0D               	btfsc	(_M+7)& (0+255),6,b
   746  001414  ECCE  F01C         	call	_Odpowietrzenie	;wreg free
   747  001418  D760               	goto	l51
   748  00141A                     __end_of_main:
   749                           ;main.c: 264: void PomALL(void)
   750                           ;main.c: 265: {
   751  00141A                     _PomALL:
   752  000000                     
   753                           ;main.c: 266: PomiarVNT();
   754  00141A  EC39  F06E         	call	_PomiarVNT	;wreg free
   755                           ;main.c: 267: PomiarPCO();
   756  00141E  EC35  F050         	call	_PomiarPCO	;wreg free
   757                           ;main.c: 268: PomiarPCW();
   758  001422  ECED  F050         	call	_PomiarPCW	;wreg free
   759                           ;main.c: 269: PomiarPFN();
   760  001426  ECDF  F051         	call	_PomiarPFN	;wreg free
   761                           ;main.c: 270: PomiarECO();
   762  00142A  EC85  F051         	call	_PomiarECO	;wreg free
   763                           ;main.c: 271: PomiarCO();
   764  00142E  EC75  F048         	call	_PomiarCO	;wreg free
   765                           ;main.c: 272: PomiarCW();
   766  001432  ECE0  F04A         	call	_PomiarCW	;wreg free
   767                           ;main.c: 273: PomiarZW();
   768  001436  ECD5  F04B         	call	_PomiarZW	;wreg free
   769                           ;main.c: 274: FiltrPomiarowyCOCW();
   770  00143A  ECFF  F047         	call	_FiltrPomiarowyCOCW	;wreg free
   771                           ;main.c: 275: PomiarCS();
   772  00143E  ECE0  F052         	call	_PomiarCS	;wreg free
   773                           ;main.c: 276: PomiarIN();
   774  001442  EFC5  F04A         	goto	_PomiarIN	;wreg free
   775                           ;main.c: 277: }
   776  001446                     __end_of_PomALL:
   777                           ;main.c: 281: void InitPFN(const unsigned char p
      +                          os)
   778                           ;main.c: 282: {
   779  001446                     _InitPFN:
   780  000000                     
   781                           ;main.c: 283: PFN.poz=pos;
   782  001446  0100               	movlb	(_PFN+1) shr (0+8)
   783  001448  CFE8 F068          	movff	wreg,_PFN+1
   784  00144C  6B69               	clrf	(_PFN+2)& (0+255),b
   785                           ;main.c: 284: SetPFN();
   786  00144E  EC83  F041         	call	_SetPFN	;wreg free
   787                           ;main.c: 285: WriteEEPFN();
   788  001452  EC7D  F042         	call	_WriteEEPFN	;wreg free
   789                           ;main.c: 286: if(MGSD._CON)
   790  001456  0103               	movlb	_MGSD shr (0+8)
   791  001458  ADAA               	btfss	_MGSD& (0+255),6,b
   792  00145A  0012               	return	
   793                           ;main.c: 287: {
   794  00145C  0100               	movlb	__Lparam shr (0+8)
   795  00145E  0E44               	movlw	low (_RSDT1+23)
   796  001460  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   797  001462  0E03               	movlw	high (_RSDT1+23)
   798  001464  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   799  001466  0E01               	movlw	1
   800  001468  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   801  00146A  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   802  00146C  ECEC  F003         	call	_BitSet2	;wreg free
   803                           ;main.c: 289: BitSet2(&RSDT1.outSTAT0,0,0);
   804  001470  0100               	movlb	__Lparam shr (0+8)
   805  001472  0E44               	movlw	low (_RSDT1+23)
   806  001474  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   807  001476  0E03               	movlw	high (_RSDT1+23)
   808  001478  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   809  00147A  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   810  00147C  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   811  00147E  ECEC  F003         	call	_BitSet2	;wreg free
   812                           ;main.c: 290: while(!GetBit2(RSDT1.inSTAT0,7)&&M
      +                          GSD._CON)
   813  001482  D004               	goto	l72
   814  001484                     l73:
   815                           ;main.c: 291: {
   816  001484  0004               	clrwdt		;#
   817                           ;main.c: 293: RefLCDData();
   818  001486  D946               	call	_RefLCDData	;wreg free
   819                           ;main.c: 294: ReceptDataLCD();
   820  001488  ECAB  F05D         	call	_ReceptDataLCD	;wreg free
   821  00148C                     l72:
   822  00148C  0E07               	movlw	7
   823  00148E  0100               	movlb	__Lparam shr (0+8)
   824  001490  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   825  001492  C37B  FFE8         	movff	_RSDT1+78,wreg
   826  001496  ECB9  F003         	call	_GetBit2
   827  00149A  E203               	bc	u420
   828  00149C  0103               	movlb	_MGSD shr (0+8)
   829  00149E  BDAA               	btfsc	_MGSD& (0+255),6,b
   830  0014A0  D7F1               	goto	l73
   831  0014A2                     u420:
   832                           ;main.c: 296: }
   833  0014A2  0100               	movlb	__Lparam shr (0+8)
   834  0014A4  0E44               	movlw	low (_RSDT1+23)
   835  0014A6  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   836  0014A8  0E03               	movlw	high (_RSDT1+23)
   837  0014AA  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   838  0014AC  0E01               	movlw	1
   839  0014AE  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   840  0014B0  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   841  0014B2  ECEC  F003         	call	_BitSet2	;wreg free
   842                           ;main.c: 298: BitSet2(&RSDT1.outSTAT0,0,0);
   843  0014B6  0100               	movlb	__Lparam shr (0+8)
   844  0014B8  0E44               	movlw	low (_RSDT1+23)
   845  0014BA  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   846  0014BC  0E03               	movlw	high (_RSDT1+23)
   847  0014BE  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   848  0014C0  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   849  0014C2  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   850  0014C4  ECEC  F003         	call	_BitSet2	;wreg free
   851                           ;main.c: 299: while(GetBit2(RSDT1.inSTAT0,7)&&MG
      +                          SD._CON)
   852  0014C8                     l75:
   853  0014C8  0E07               	movlw	7
   854  0014CA  0100               	movlb	__Lparam shr (0+8)
   855  0014CC  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
   856  0014CE  C37B  FFE8         	movff	_RSDT1+78,wreg
   857  0014D2  ECB9  F003         	call	_GetBit2
   858  0014D6  A0D8               	btfss	status,0,c
   859  0014D8  0012               	return	
   860  0014DA  0103               	movlb	_MGSD shr (0+8)
   861  0014DC  ADAA               	btfss	_MGSD& (0+255),6,b
   862                           ;main.c: 305: }
   863  0014DE  0012               	return	
   864                           ;main.c: 300: {
   865  0014E0  0004               	clrwdt		;#
   866                           ;main.c: 302: RefLCDData();
   867  0014E2  D918               	call	_RefLCDData	;wreg free
   868                           ;main.c: 303: ReceptDataLCD();
   869  0014E4  ECAB  F05D         	call	_ReceptDataLCD	;wreg free
   870  0014E8  D7EF               	goto	l75
   871  0014EA                     __end_of_InitPFN:
   872                           ;main.c: 309: void KalibracjaWentylatora(void)
   873                           ;main.c: 310: {
   874  0014EA                     _KalibracjaWentylatora:
   875  000000                     
   876                           ;main.c: 311: volatile unsigned char x;
   877  0014EA  0103               	movlb	(_M+5) shr (0+8)
   878  0014EC  990B               	bcf	(_M+5)& (0+255),4,b
   879                           ;main.c: 315: RD3=0;
   880  0014EE  9683               	bcf	3971,3,c	;volatile
   881                           ;main.c: 316: WritePWM(0);
   882  0014F0  0E00               	movlw	0
   883  0014F2  EC74  F001         	call	_WritePWM
   884                           ;main.c: 318: M.R48=0;
   885  0014F6  0103               	movlb	(_M+15) shr (0+8)
   886  0014F8  6B15               	clrf	(_M+15)& (0+255),b
   887                           ;main.c: 319: M._RUSZ_48=0;
   888  0014FA  9907               	bcf	(_M+1)& (0+255),4,b
   889                           ;main.c: 320: while(!(x=KalibracjaVNT()))
   890  0014FC                     l79:
   891  0014FC  EC09  F05F         	call	_KalibracjaVNT	;wreg free
   892  001500  0100               	movlb	__Lparam shr (0+8)
   893  001502  6FA4               	movwf	?a_KalibracjaWentylatora^(__Lparam& (0+65
      +                          280)),b	;volatile
   894  001504  51A4               	movf	?a_KalibracjaWentylatora^(__Lparam& (0+652
      +                          80)),w	;volatile
   895  001506  E15B               	bnz	u530
   896                           ;main.c: 321: {
   897  001508  0004               	clrwdt		;#
   898                           ;main.c: 323: if(M.STRB!=2)
   899  00150A  C32C  FFE8         	movff	_M+38,wreg
   900  00150E  0A02               	xorlw	2
   901  001510  E024               	bz	l82
   902                           ;main.c: 324: {
   903  001512  0E09               	movlw	9
   904  001514  EC63  F07E         	call	_RTS
   905  001518  6E00               	movwf	btemp,c
   906  00151A  0E0A               	movlw	10
   907  00151C  5C00               	subwf	btemp,w,c
   908  00151E  E315               	bnc	l83
   909  001520  0E09               	movlw	9
   910  001522  EC63  F07E         	call	_RTS
   911  001526  6E00               	movwf	btemp,c
   912  001528  0E0B               	movlw	11
   913  00152A  5C00               	subwf	btemp,w,c
   914  00152C  E20E               	bc	l83
   915                           ;main.c: 326: {
   916  00152E  ECE9  F014         	call	_ToObiegCO	;wreg free
   917                           ;main.c: 328: RD2=1;
   918  001532  8483               	bsf	3971,2,c	;volatile
   919                           ;main.c: 329: M._WYLACZ=1;
   920  001534  0103               	movlb	(_M+1) shr (0+8)
   921  001536  8307               	bsf	(_M+1)& (0+255),1,b
   922                           ;main.c: 330: PMP.APROC=99;
   923  001538  0E63               	movlw	99
   924  00153A  CFE8 F2FE          	movff	wreg,_PMP+2
   925                           ;main.c: 331: WritePWM2(ProcToPmpPwm(PMP.APROC))
      +                          ;
   926  00153E  C2FE  FFE8         	movff	_PMP+2,wreg
   927  001542  EC27  F072         	call	_ProcToPmpPwm
   928  001546  EC81  F001         	call	_WritePWM2
   929  00154A                     l83:
   930                           ;main.c: 332: }
   931  00154A  0103               	movlb	(_M+1) shr (0+8)
   932  00154C  B507               	btfsc	(_M+1)& (0+255),2,b
   933  00154E  EC07  F01B         	call	_ZmienKCOKCW	;wreg free
   934                           ;main.c: 334: if(M._WYLACZ) Wylacz();
   935  001552  0103               	movlb	(_M+1) shr (0+8)
   936  001554  B307               	btfsc	(_M+1)& (0+255),1,b
   937  001556  EC1F  F019         	call	_Wylacz	;wreg free
   938  00155A                     l82:
   939                           ;main.c: 335: }
   940  00155A  0100               	movlb	__Lparam shr (0+8)
   941  00155C  0E44               	movlw	low (_RSDT1+23)
   942  00155E  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   943  001560  0E03               	movlw	high (_RSDT1+23)
   944  001562  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   945  001564  0E01               	movlw	1
   946  001566  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   947  001568  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   948  00156A  ECEC  F003         	call	_BitSet2	;wreg free
   949                           ;main.c: 338: BitSet2(&RSDT1.outSTAT0,0,0);
   950  00156E  0100               	movlb	__Lparam shr (0+8)
   951  001570  0E44               	movlw	low (_RSDT1+23)
   952  001572  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
   953  001574  0E03               	movlw	high (_RSDT1+23)
   954  001576  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
   955  001578  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
   956  00157A  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
   957  00157C  ECEC  F003         	call	_BitSet2	;wreg free
   958                           ;main.c: 339: PomiarCO();
   959  001580  EC75  F048         	call	_PomiarCO	;wreg free
   960                           ;main.c: 340: PomiarCW();
   961  001584  ECE0  F04A         	call	_PomiarCW	;wreg free
   962                           ;main.c: 341: PomiarZW();
   963  001588  ECD5  F04B         	call	_PomiarZW	;wreg free
   964                           ;main.c: 342: PomiarCS();
   965  00158C  ECE0  F052         	call	_PomiarCS	;wreg free
   966                           ;main.c: 343: PomiarPCO();
   967  001590  EC35  F050         	call	_PomiarPCO	;wreg free
   968                           ;main.c: 344: PomiarPCW();
   969  001594  ECED  F050         	call	_PomiarPCW	;wreg free
   970                           ;main.c: 345: PomiarPFN();
   971  001598  ECDF  F051         	call	_PomiarPFN	;wreg free
   972                           ;main.c: 346: PomiarECO();
   973  00159C  EC85  F051         	call	_PomiarECO	;wreg free
   974                           ;main.c: 347: PomiarIN();
   975  0015A0  ECC5  F04A         	call	_PomiarIN	;wreg free
   976                           ;main.c: 349: SetTrbPGD();
   977  0015A4  EC42  F04C         	call	_SetTrbPGD	;wreg free
   978                           ;main.c: 351: if(RD3) PomiarVNT();
   979  0015A8  A683               	btfss	3971,3,c	;volatile
   980  0015AA  D003               	goto	l86
   981  0015AC  EC39  F06E         	call	_PomiarVNT	;wreg free
   982  0015B0  D002               	goto	l87
   983  0015B2                     l86:
   984                           ;main.c: 352: else ClrTachoDta();
   985  0015B2  EC6B  F06B         	call	_ClrTachoDta	;wreg free
   986  0015B6                     l87:
   987                           ;main.c: 353: ReceptDataLCD();
   988  0015B6  ECAB  F05D         	call	_ReceptDataLCD	;wreg free
   989                           ;main.c: 354: RefLCDData();
   990  0015BA  D8AC               	call	_RefLCDData	;wreg free
   991  0015BC  D79F               	goto	l79
   992  0015BE                     u530:
   993                           ;main.c: 355: };
   994  0015BE  0E02               	movlw	2
   995  0015C0  0100               	movlb	__Lparam shr (0+8)
   996  0015C2  61A4               	cpfslt	?a_KalibracjaWentylatora^(__Lparam& (0+6
      +                          5280)),b	;volatile
   997  0015C4  D019               	goto	l88
   998                           ;main.c: 358: {
   999  0015C6  0103               	movlb	_MGSD shr (0+8)
  1000  0015C8  ADAA               	btfss	_MGSD& (0+255),6,b
  1001  0015CA  D007               	goto	u590
  1002  0015CC  0103               	movlb	_MGSD shr (0+8)
  1003  0015CE  ADAA               	btfss	_MGSD& (0+255),6,b
  1004  0015D0  D010               	goto	l89
  1005  0015D2  EE03  F076         	lfsr	0,_RSDT1+73
  1006  0015D6  50EF               	movf	indf0,w,c
  1007  0015D8  E00C               	bz	l89
  1008  0015DA                     u590:
  1009                           ;main.c: 360: {
  1010  0015DA  C32C  F000         	movff	_M+38,btemp
  1011  0015DE  0400               	decf	btemp,w,c
  1012  0015E0  E008               	bz	l89
  1013  0015E2  C32C  FFE8         	movff	_M+38,wreg
  1014  0015E6  0A02               	xorlw	2
  1015                           ;main.c: 362: {
  1016                           ;main.c: 364: M._WYM_ODP=0;
  1017                           ;main.c: 365: }
  1018                           ;main.c: 366: else
  1019  0015E8  0103               	movlb	(_M+7) shr (0+8)
  1020  0015EA  E004               	bz	L17
  1021  0015EC  8D0D               	bsf	(_M+7)& (0+255),6,b
  1022                           ;main.c: 369: M._WYM_ODP=1;
  1023  0015EE  810E               	bsf	(_M+8)& (0+255),0,b
  1024                           ;main.c: 370: }
  1025  0015F0  D003               	goto	l88
  1026  0015F2                     l89:
  1027                           ;main.c: 372: else
  1028  0015F2  0103               	movlb	(_M+7) shr (0+8)
  1029  0015F4                     L17:
  1030  0015F4  9D0D               	bcf	(_M+7)& (0+255),6,b
  1031                           ;main.c: 375: M._WYM_ODP=0;
  1032  0015F6  910E               	bcf	(_M+8)& (0+255),0,b
  1033  0015F8                     l88:
  1034                           ;main.c: 376: }
  1035  0015F8  0E0C               	movlw	12
  1036  0015FA  EC51  F07E         	call	_StartRTS
  1037                           ;main.c: 379: M._PO_KAL=1;
  1038  0015FE  0103               	movlb	(_M+5) shr (0+8)
  1039  001600  890B               	bsf	(_M+5)& (0+255),4,b
  1040                           ;main.c: 380: M._KNF_KAL=0;
  1041  001602  970E               	bcf	(_M+8)& (0+255),3,b
  1042                           ;main.c: 381: }
  1043  001604  0012               	return	
  1044  001606                     __end_of_KalibracjaWentylatora:
  1045                           ;main.c: 386: void ClearData(void)
  1046                           ;main.c: 387: {
  1047  001606                     _ClearData:
  1048  000000                     
  1049                           ;main.c: 388: DtKNF.enknf=0;
  1050  001606  0102               	movlb	_DtKNF shr (0+8)
  1051  001608  91AE               	bcf	_DtKNF& (0+255),0,b
  1052                           ;main.c: 389: M._pob_KCO=0;
  1053  00160A  0103               	movlb	_M shr (0+8)
  1054  00160C  9106               	bcf	_M& (0+255),0,b
  1055                           ;main.c: 390: M._pob_KCW=0;
  1056  00160E  9306               	bcf	_M& (0+255),1,b
  1057                           ;main.c: 391: M._pob_AL=0;
  1058  001610  9706               	bcf	_M& (0+255),3,b
  1059                           ;main.c: 392: M._pob_SRW=0;
  1060  001612  9506               	bcf	_M& (0+255),2,b
  1061                           ;main.c: 393: M._pob_CO=0;
  1062  001614  9B06               	bcf	_M& (0+255),5,b
  1063                           ;main.c: 394: M._pob_CW=0;
  1064  001616  9906               	bcf	_M& (0+255),4,b
  1065                           ;main.c: 395: M._pob_DzCO=0;
  1066  001618  9D06               	bcf	_M& (0+255),6,b
  1067                           ;main.c: 396: M._pob_DzCW=0;
  1068  00161A  9F06               	bcf	_M& (0+255),7,b
  1069                           ;main.c: 397: M._pob_PGDRT=0;
  1070  00161C  9107               	bcf	(_M+1)& (0+255),0,b
  1071                           ;main.c: 399: M._WYLACZ=0;
  1072  00161E  9307               	bcf	(_M+1)& (0+255),1,b
  1073                           ;main.c: 400: M._ZMKCOCW=0;
  1074  001620  9507               	bcf	(_M+1)& (0+255),2,b
  1075                           ;main.c: 401: M._ROZRUCH=0;
  1076  001622  9707               	bcf	(_M+1)& (0+255),3,b
  1077                           ;main.c: 402: M._RUSZ_48=0;
  1078  001624  9907               	bcf	(_M+1)& (0+255),4,b
  1079                           ;main.c: 403: M._RUSZ_48Z3=0;
  1080  001626  9B07               	bcf	(_M+1)& (0+255),5,b
  1081                           ;main.c: 404: M._RUSZ_PWR=0;
  1082  001628  9D07               	bcf	(_M+1)& (0+255),6,b
  1083                           ;main.c: 405: M._VWYBIEG=0;
  1084  00162A  9F07               	bcf	(_M+1)& (0+255),7,b
  1085                           ;main.c: 406: M._MODULUJ=0;
  1086  00162C  9B08               	bcf	(_M+2)& (0+255),5,b
  1087                           ;main.c: 407: M._RUSZ_PLOMIEN=0;
  1088  00162E  9108               	bcf	(_M+2)& (0+255),0,b
  1089                           ;main.c: 408: M._RUSZ_RPLM=0;
  1090  001630  9308               	bcf	(_M+2)& (0+255),1,b
  1091                           ;main.c: 409: M._RUSZ_POMPE=0;
  1092  001632  9508               	bcf	(_M+2)& (0+255),2,b
  1093                           ;main.c: 410: M._BLOKUJ_3M=0;
  1094  001634  9708               	bcf	(_M+2)& (0+255),3,b
  1095                           ;main.c: 411: M._BLOKUJ_15S=0;
  1096  001636  9908               	bcf	(_M+2)& (0+255),4,b
  1097                           ;main.c: 412: M._BLOKUJ_ODP=0;
  1098  001638  9D0D               	bcf	(_M+7)& (0+255),6,b
  1099                           ;main.c: 413: M._PROC_ODP=0;
  1100  00163A  9F0D               	bcf	(_M+7)& (0+255),7,b
  1101                           ;main.c: 414: M._WYM_ODP=0;
  1102  00163C  910E               	bcf	(_M+8)& (0+255),0,b
  1103                           ;main.c: 415: M._MODULUJ=0;
  1104  00163E  9B08               	bcf	(_M+2)& (0+255),5,b
  1105                           ;main.c: 417: M._AKTYWNE_AL=0;
  1106  001640  9F08               	bcf	(_M+2)& (0+255),7,b
  1107                           ;main.c: 418: M._AKTYWNE_SRW=0;
  1108  001642  9D08               	bcf	(_M+2)& (0+255),6,b
  1109                           ;main.c: 419: M._AKTYWNE_PGD=0;
  1110  001644  9109               	bcf	(_M+3)& (0+255),0,b
  1111                           ;main.c: 420: M._AKTYWNE_PGD2=0;
  1112  001646  9509               	bcf	(_M+3)& (0+255),2,b
  1113                           ;main.c: 421: M._AKTYWNE_KNF=0;
  1114  001648  9309               	bcf	(_M+3)& (0+255),1,b
  1115                           ;main.c: 422: M._RUSZ_NTC_CO=0;
  1116  00164A  9709               	bcf	(_M+3)& (0+255),3,b
  1117                           ;main.c: 423: M._RUSZ_NTC_CW=0;
  1118  00164C  9909               	bcf	(_M+3)& (0+255),4,b
  1119                           ;main.c: 424: M._RUSZ_STB=0;
  1120  00164E  9D09               	bcf	(_M+3)& (0+255),6,b
  1121                           ;main.c: 425: M._RUSZ_CISN=0;
  1122  001650  9F09               	bcf	(_M+3)& (0+255),7,b
  1123                           ;main.c: 426: M._RUSZ_NCISN=0;
  1124  001652  910A               	bcf	(_M+4)& (0+255),0,b
  1125                           ;main.c: 428: M._PW_START=0;
  1126  001654  950A               	bcf	(_M+4)& (0+255),2,b
  1127                           ;main.c: 429: M._RS_START=0;
  1128  001656  930A               	bcf	(_M+4)& (0+255),1,b
  1129                           ;main.c: 430: M._PRACA=0;
  1130  001658  970A               	bcf	(_M+4)& (0+255),3,b
  1131                           ;main.c: 431: M._OST_PL=0;
  1132  00165A  990A               	bcf	(_M+4)& (0+255),4,b
  1133                           ;main.c: 432: M._RUN_MNMOD=0;
  1134  00165C  9B0A               	bcf	(_M+4)& (0+255),5,b
  1135                           ;main.c: 433: M._KCW_PMP=0;
  1136  00165E  9D0A               	bcf	(_M+4)& (0+255),6,b
  1137                           ;main.c: 434: M._DE_VNT=0;
  1138  001660  9F0A               	bcf	(_M+4)& (0+255),7,b
  1139                           ;main.c: 435: M._DE_PMP=0;
  1140  001662  970B               	bcf	(_M+5)& (0+255),3,b
  1141                           ;main.c: 436: M._RPM_CW=0;
  1142  001664  910B               	bcf	(_M+5)& (0+255),0,b
  1143                           ;main.c: 437: M._RUSZ_NTC_IN=0;
  1144  001666  9B09               	bcf	(_M+3)& (0+255),5,b
  1145                           ;main.c: 439: M._SYNCH_PGD=0;
  1146  001668  950E               	bcf	(_M+8)& (0+255),2,b
  1147                           ;main.c: 440: M._LOW_PMP=0;
  1148  00166A  990E               	bcf	(_M+8)& (0+255),4,b
  1149                           ;main.c: 442: M._LCD=0;
  1150  00166C  9D0B               	bcf	(_M+5)& (0+255),6,b
  1151                           ;main.c: 443: M._LIN=0;
  1152  00166E  9B0B               	bcf	(_M+5)& (0+255),5,b
  1153                           ;main.c: 444: M._LIN_RT=0;
  1154  001670  9F0B               	bcf	(_M+5)& (0+255),7,b
  1155                           ;main.c: 445: M._LIN_CW=0;
  1156  001672  910C               	bcf	(_M+6)& (0+255),0,b
  1157                           ;main.c: 446: M._HWB_CW=0;
  1158  001674  930E               	bcf	(_M+8)& (0+255),1,b
  1159                           ;main.c: 448: M.ERR_BTY=0;
  1160  001676  6B13               	clrf	(_M+13)& (0+255),b
  1161                           ;main.c: 449: M.ROZ=0;
  1162  001678  6B14               	clrf	(_M+14)& (0+255),b
  1163                           ;main.c: 450: M.R48=0;
  1164  00167A  6B15               	clrf	(_M+15)& (0+255),b
  1165                           ;main.c: 451: M.R48Z3=0;
  1166  00167C  6B16               	clrf	(_M+16)& (0+255),b
  1167                           ;main.c: 452: M.BL3=0;
  1168  00167E  6B17               	clrf	(_M+17)& (0+255),b
  1169                           ;main.c: 453: M.BL15=0;
  1170  001680  6B18               	clrf	(_M+18)& (0+255),b
  1171                           ;main.c: 454: M.WYL=0;
  1172  001682  6B19               	clrf	(_M+19)& (0+255),b
  1173                           ;main.c: 455: M.RPR=0;
  1174  001684  6B1A               	clrf	(_M+20)& (0+255),b
  1175                           ;main.c: 456: M.RPL=0;
  1176  001686  6B1B               	clrf	(_M+21)& (0+255),b
  1177                           ;main.c: 457: M.RCI=0;
  1178  001688  6B1C               	clrf	(_M+22)& (0+255),b
  1179                           ;main.c: 458: M.MNM=0;
  1180  00168A  6B1D               	clrf	(_M+23)& (0+255),b
  1181                           ;main.c: 459: M.ZKP=0;
  1182  00168C  6B1E               	clrf	(_M+24)& (0+255),b
  1183                           ;main.c: 460: M.VWB=0;
  1184  00168E  6B1F               	clrf	(_M+25)& (0+255),b
  1185                           ;main.c: 461: M.SRV=0;
  1186  001690  6B20               	clrf	(_M+26)& (0+255),b
  1187                           ;main.c: 462: M.KRS=0;
  1188  001692  6B21               	clrf	(_M+27)& (0+255),b
  1189                           ;main.c: 463: M.HVZ=0;
  1190  001694  6B22               	clrf	(_M+28)& (0+255),b
  1191                           ;main.c: 464: M.LICZNIK_PL=0;
  1192  001696  6B0F               	clrf	(_M+9)& (0+255),b
  1193                           ;main.c: 465: M.LICZNIK_PL2=0;
  1194  001698  6B10               	clrf	(_M+10)& (0+255),b
  1195                           ;main.c: 466: M.LICZNIK_ODP=0;
  1196  00169A  6B12               	clrf	(_M+12)& (0+255),b
  1197                           ;main.c: 467: M.DPR=0;
  1198  00169C  6B23               	clrf	(_M+29)& (0+255),b
  1199                           ;main.c: 468: M.VVNT=0;
  1200  00169E  6B24               	clrf	(_M+30)& (0+255),b
  1201                           ;main.c: 469: M.rVVNT=0;
  1202  0016A0  EE03  F025         	lfsr	0,_M+31
  1203  0016A4  6AEE               	clrf	postinc0,c
  1204  0016A6  6AEE               	clrf	postinc0,c
  1205                           ;main.c: 470: M.ODP=0;
  1206  0016A8  6B27               	clrf	(_M+33)& (0+255),b
  1207                           ;main.c: 471: M.STRB=0;
  1208  0016AA  6B2C               	clrf	(_M+38)& (0+255),b
  1209                           ;main.c: 473: RD3=0;
  1210  0016AC  9683               	bcf	3971,3,c	;volatile
  1211                           ;main.c: 474: RD0=0;
  1212  0016AE  9083               	bcf	3971,0,c	;volatile
  1213                           ;main.c: 475: RD2=0;
  1214  0016B0  9483               	bcf	3971,2,c	;volatile
  1215                           ;main.c: 476: ClrDtV();
  1216  0016B2  EC85  F06F         	call	_ClrDtV	;wreg free
  1217                           ;main.c: 477: ClrTachoDta();
  1218  0016B6  EF6B  F06B         	goto	_ClrTachoDta	;wreg free
  1219                           ;main.c: 478: }
  1220  0016BA                     __end_of_ClearData:
  1221                           ;main.c: 480: void RestartFltPrt(void)
  1222                           ;main.c: 481: {
  1223  0016BA                     _RestartFltPrt:
  1224  000000                     
  1225                           ;main.c: 482: SetPrt(13,0);
  1226  0016BA  0100               	movlb	__Lparam shr (0+8)
  1227  0016BC  6BAD               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  1228  0016BE  0E0D               	movlw	13
  1229  0016C0  EC2D  F07A         	call	_SetPrt
  1230                           ;main.c: 483: SetPrt(17,0);
  1231  0016C4  0100               	movlb	__Lparam shr (0+8)
  1232  0016C6  6BAD               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  1233  0016C8  0E11               	movlw	17
  1234  0016CA  EC2D  F07A         	call	_SetPrt
  1235                           ;main.c: 484: SetPrt(9,0);
  1236  0016CE  0100               	movlb	__Lparam shr (0+8)
  1237  0016D0  6BAD               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  1238  0016D2  0E09               	movlw	9
  1239  0016D4  EC2D  F07A         	call	_SetPrt
  1240                           ;main.c: 485: SetPrt(10,0);
  1241  0016D8  0100               	movlb	__Lparam shr (0+8)
  1242  0016DA  6BAD               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  1243  0016DC  0E0A               	movlw	10
  1244  0016DE  EC2D  F07A         	call	_SetPrt
  1245                           ;main.c: 486: SetPrt(12,0);
  1246  0016E2  0100               	movlb	__Lparam shr (0+8)
  1247  0016E4  6BAD               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  1248  0016E6  0E0C               	movlw	12
  1249  0016E8  EC2D  F07A         	call	_SetPrt
  1250                           ;main.c: 487: SetPrt(11,0);
  1251  0016EC  0100               	movlb	__Lparam shr (0+8)
  1252  0016EE  6BAD               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  1253  0016F0  0E0B               	movlw	11
  1254  0016F2  EC2D  F07A         	call	_SetPrt
  1255                           ;main.c: 488: SetPrt(7,0);
  1256  0016F6  0100               	movlb	__Lparam shr (0+8)
  1257  0016F8  6BAD               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  1258  0016FA  0E07               	movlw	7
  1259  0016FC  EF2D  F07A         	goto	_SetPrt
  1260                           ;main.c: 489: }
  1261  001700                     __end_of_RestartFltPrt:
  1262                           ;main.c: 492: unsigned char KodSterownika(void)
  1263                           ;main.c: 493: {
  1264  001700                     _KodSterownika:
  1265  000000                     
  1266                           ;main.c: 495: switch(DtKNF.tpkt)
  1267  001700  D002               	goto	l97
  1268  001702                     l98:
  1269                           ;main.c: 496: {
  1270                           ;main.c: 498: return 0x11;
  1271  001702  0C11               	retlw	17
  1272  001704                     l99:
  1273                           ;main.c: 499: case 3:
  1274                           ;main.c: 500: return 0x17;
  1275  001704  0C17               	retlw	23
  1276                           ;main.c: 501: default:
  1277                           ;main.c: 502: return 0x17;
  1278  001706                     l97:
  1279  001706  C2BC  FFE8         	movff	_DtKNF+14,wreg
  1280  00170A  0A00               	xorlw	0
  1281  00170C  E0FA               	bz	l98
  1282  00170E  0A03               	xorlw	3
  1283  001710  E0F9               	bz	l99
  1284  001712  0C17               	retlw	23
  1285                           ;main.c: 504: }
  1286  001714                     __end_of_KodSterownika:
  1287                           ;main.c: 508: void RefLCDData(void)
  1288                           ;main.c: 509: {
  1289  001714                     _RefLCDData:
  1290  000000                     
  1291                           ;main.c: 510: volatile unsigned char wr;
  1292  001714  C2CC  F001         	movff	_DtKNF+30,btemp+1
  1293  001718  0E07               	movlw	7
  1294  00171A  1601               	andwf	btemp+1,f,c
  1295  00171C  0E05               	movlw	5
  1296  00171E  6E00               	movwf	btemp,c
  1297  001720                     u635:
  1298  001720  90D8               	bcf	status,0,c
  1299  001722  3601               	rlcf	btemp+1,f,c
  1300  001724  2E00               	decfsz	btemp,f,c
  1301  001726  D7FC               	goto	u635
  1302  001728  DFEB               	call	_KodSterownika	;wreg free
  1303  00172A  6E00               	movwf	btemp,c
  1304  00172C  0E1F               	movlw	31
  1305  00172E  1600               	andwf	btemp,f,c
  1306  001730  5001               	movf	btemp+1,w,c
  1307  001732  1000               	iorwf	btemp,w,c
  1308  001734  CFE8 F32F          	movff	wreg,_RSDT1+2
  1309                           ;main.c: 513: if(15<=0x0F)
  1310  001738  C2BC  FFE8         	movff	_DtKNF+14,wreg
  1311  00173C  0B0F               	andlw	15
  1312  00173E  09F0               	iorlw	-16
  1313  001740  CFE8 F330          	movff	wreg,_RSDT1+3
  1314                           ;main.c: 516: wr=RSDT1.outRDZ2&0b11100000;
  1315  001744  C331  FFE8         	movff	_RSDT1+4,wreg
  1316  001748  0BE0               	andlw	-32
  1317  00174A  0100               	movlb	__Lparam shr (0+8)
  1318  00174C  6FA9               	movwf	?a_RefLCDData^(__Lparam& (0+65280)),b	;vo
      +                          latile
  1319                           ;main.c: 517: RSDT1.outRDZ2=wr;
  1320  00174E  C0A9  F331         	movff	?a_RefLCDData,_RSDT1+4	;volatile
  1321                           ;main.c: 518: }
  1322                           ;main.c: 524: }
  1323  001752  0E44               	movlw	low (_RSDT1+23)
  1324  001754  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1325  001756  0E03               	movlw	high (_RSDT1+23)
  1326  001758  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1327  00175A  0E02               	movlw	2
  1328  00175C  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1329  00175E  0103               	movlb	(_M+4) shr (0+8)
  1330  001760  B70A               	btfsc	(_M+4)& (0+255),3,b
  1331  001762  B10B               	btfsc	(_M+5)& (0+255),0,b
  1332  001764  D006               	goto	u680
  1333  001766  0E05               	movlw	5
  1334  001768  EC1C  F07A         	call	_RdPrt
  1335  00176C  E302               	bnc	u680
  1336  00176E  0E01               	movlw	1
  1337  001770  D001               	goto	u690
  1338  001772                     u680:
  1339  001772  0E00               	movlw	0
  1340  001774                     u690:
  1341  001774  0100               	movlb	__Lparam shr (0+8)
  1342  001776  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1343  001778  ECEC  F003         	call	_BitSet2	;wreg free
  1344                           ;main.c: 526: BitSet2(&RSDT1.outSTAT0,3,M._PRACA
      +                          &&M._RPM_CW&&RdPrt(5));
  1345  00177C  0100               	movlb	__Lparam shr (0+8)
  1346  00177E  0E44               	movlw	low (_RSDT1+23)
  1347  001780  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1348  001782  0E03               	movlw	high (_RSDT1+23)
  1349  001784  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1350  001786  0E03               	movlw	3
  1351  001788  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1352  00178A  0103               	movlb	(_M+4) shr (0+8)
  1353  00178C  B70A               	btfsc	(_M+4)& (0+255),3,b
  1354  00178E  A10B               	btfss	(_M+5)& (0+255),0,b
  1355  001790  D006               	goto	u740
  1356  001792  0E05               	movlw	5
  1357  001794  EC1C  F07A         	call	_RdPrt
  1358  001798  E302               	bnc	u740
  1359  00179A  0E01               	movlw	1
  1360  00179C  D001               	goto	u750
  1361  00179E                     u740:
  1362  00179E  0E00               	movlw	0
  1363  0017A0                     u750:
  1364  0017A0  0100               	movlb	__Lparam shr (0+8)
  1365  0017A2  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1366  0017A4  ECEC  F003         	call	_BitSet2	;wreg free
  1367                           ;main.c: 527: BitSet2(&RSDT1.outSTAT0,4,M._AKTYW
      +                          NE_SRW);
  1368  0017A8  0100               	movlb	__Lparam shr (0+8)
  1369  0017AA  0E44               	movlw	low (_RSDT1+23)
  1370  0017AC  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1371  0017AE  0E03               	movlw	high (_RSDT1+23)
  1372  0017B0  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1373  0017B2  0E04               	movlw	4
  1374  0017B4  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1375  0017B6  EE03  F008         	lfsr	0,_M+2
  1376  0017BA  38EF               	swapf	indf0,w,c
  1377  0017BC  6E00               	movwf	btemp,c
  1378  0017BE  3200               	rrcf	btemp,f,c
  1379  0017C0  3000               	rrcf	btemp,w,c
  1380  0017C2  0B01               	andlw	1
  1381  0017C4  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1382  0017C6  ECEC  F003         	call	_BitSet2	;wreg free
  1383                           ;main.c: 528: BitSet2(&RSDT1.outSTAT0,5,M._AKTYW
      +                          NE_AL);
  1384  0017CA  0100               	movlb	__Lparam shr (0+8)
  1385  0017CC  0E44               	movlw	low (_RSDT1+23)
  1386  0017CE  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1387  0017D0  0E03               	movlw	high (_RSDT1+23)
  1388  0017D2  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1389  0017D4  0E05               	movlw	5
  1390  0017D6  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1391  0017D8  EE03  F008         	lfsr	0,_M+2
  1392  0017DC  34EF               	rlcf	indf0,w,c
  1393  0017DE  34EF               	rlcf	indf0,w,c
  1394  0017E0  0B01               	andlw	1
  1395  0017E2  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1396  0017E4  ECEC  F003         	call	_BitSet2	;wreg free
  1397                           ;main.c: 529: BitSet2(&RSDT1.outSTAT0,6,M._AKTYW
      +                          NE_KNF);
  1398  0017E8  0100               	movlb	__Lparam shr (0+8)
  1399  0017EA  0E44               	movlw	low (_RSDT1+23)
  1400  0017EC  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1401  0017EE  0E03               	movlw	high (_RSDT1+23)
  1402  0017F0  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1403  0017F2  0E06               	movlw	6
  1404  0017F4  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1405  0017F6  EE03  F009         	lfsr	0,_M+3
  1406  0017FA  30EF               	rrcf	indf0,w,c
  1407  0017FC  0B01               	andlw	1
  1408  0017FE  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1409  001800  ECEC  F003         	call	_BitSet2	;wreg free
  1410                           ;main.c: 530: BitSet2(&RSDT1.outSTAT0,7,DtKNF.en
      +                          knf);
  1411  001804  0100               	movlb	__Lparam shr (0+8)
  1412  001806  0E44               	movlw	low (_RSDT1+23)
  1413  001808  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1414  00180A  0E03               	movlw	high (_RSDT1+23)
  1415  00180C  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1416  00180E  0E07               	movlw	7
  1417  001810  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1418  001812  EE02  F0AE         	lfsr	0,_DtKNF
  1419  001816  50EF               	movf	indf0,w,c
  1420  001818  0B01               	andlw	1
  1421  00181A  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1422  00181C  ECEC  F003         	call	_BitSet2	;wreg free
  1423                           ;main.c: 532: BitSet2(&RSDT1.outSTAT1,0,M._pob_D
      +                          zCW);
  1424  001820  0100               	movlb	__Lparam shr (0+8)
  1425  001822  0E45               	movlw	low (_RSDT1+24)
  1426  001824  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1427  001826  0E03               	movlw	high (_RSDT1+24)
  1428  001828  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1429  00182A  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1430  00182C  EE03  F006         	lfsr	0,_M
  1431  001830  34EF               	rlcf	indf0,w,c
  1432  001832  34EF               	rlcf	indf0,w,c
  1433  001834  0B01               	andlw	1
  1434  001836  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1435  001838  ECEC  F003         	call	_BitSet2	;wreg free
  1436                           ;main.c: 533: BitSet2(&RSDT1.outSTAT1,1,M._pob_D
      +                          zCO);
  1437  00183C  0100               	movlb	__Lparam shr (0+8)
  1438  00183E  0E45               	movlw	low (_RSDT1+24)
  1439  001840  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1440  001842  0E03               	movlw	high (_RSDT1+24)
  1441  001844  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1442  001846  0E01               	movlw	1
  1443  001848  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1444  00184A  EE03  F006         	lfsr	0,_M
  1445  00184E  38EF               	swapf	indf0,w,c
  1446  001850  6E00               	movwf	btemp,c
  1447  001852  3200               	rrcf	btemp,f,c
  1448  001854  3000               	rrcf	btemp,w,c
  1449  001856  0B01               	andlw	1
  1450  001858  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1451  00185A  ECEC  F003         	call	_BitSet2	;wreg free
  1452                           ;main.c: 534: BitSet2(&RSDT1.outSTAT1,5,M._AKTYW
      +                          NE_PGD);
  1453  00185E  0100               	movlb	__Lparam shr (0+8)
  1454  001860  0E45               	movlw	low (_RSDT1+24)
  1455  001862  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1456  001864  0E03               	movlw	high (_RSDT1+24)
  1457  001866  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1458  001868  0E05               	movlw	5
  1459  00186A  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1460  00186C  EE03  F009         	lfsr	0,_M+3
  1461  001870  50EF               	movf	indf0,w,c
  1462  001872  0B01               	andlw	1
  1463  001874  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1464  001876  ECEC  F003         	call	_BitSet2	;wreg free
  1465                           ;main.c: 535: BitSet2(&RSDT1.outSTAT1,6,M._PRACA
      +                          &&!M._RPM_CW);
  1466  00187A  0100               	movlb	__Lparam shr (0+8)
  1467  00187C  0E45               	movlw	low (_RSDT1+24)
  1468  00187E  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1469  001880  0E03               	movlw	high (_RSDT1+24)
  1470  001882  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1471  001884  0E06               	movlw	6
  1472  001886  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1473  001888  0103               	movlb	(_M+4) shr (0+8)
  1474  00188A  B70A               	btfsc	(_M+4)& (0+255),3,b
  1475  00188C  B10B               	btfsc	(_M+5)& (0+255),0,b
  1476  00188E  D002               	goto	u780
  1477  001890  0E01               	movlw	1
  1478  001892  D001               	goto	u790
  1479  001894                     u780:
  1480  001894  0E00               	movlw	0
  1481  001896                     u790:
  1482  001896  0100               	movlb	__Lparam shr (0+8)
  1483  001898  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1484  00189A  ECEC  F003         	call	_BitSet2	;wreg free
  1485                           ;main.c: 536: BitSet2(&RSDT1.outSTAT1,7,M._PRACA
      +                          &&M._RPM_CW);
  1486  00189E  0100               	movlb	__Lparam shr (0+8)
  1487  0018A0  0E45               	movlw	low (_RSDT1+24)
  1488  0018A2  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1489  0018A4  0E03               	movlw	high (_RSDT1+24)
  1490  0018A6  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1491  0018A8  0E07               	movlw	7
  1492  0018AA  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1493  0018AC  0103               	movlb	(_M+4) shr (0+8)
  1494  0018AE  B70A               	btfsc	(_M+4)& (0+255),3,b
  1495  0018B0  A10B               	btfss	(_M+5)& (0+255),0,b
  1496  0018B2  D002               	goto	u820
  1497  0018B4  0E01               	movlw	1
  1498  0018B6  D001               	goto	u830
  1499  0018B8                     u820:
  1500  0018B8  0E00               	movlw	0
  1501  0018BA                     u830:
  1502  0018BA  0100               	movlb	__Lparam shr (0+8)
  1503  0018BC  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1504  0018BE  ECEC  F003         	call	_BitSet2	;wreg free
  1505                           ;main.c: 539: BitSet2(&RSDT1.outSTAT2,1,DtCO._er
      +                          r_CO);
  1506  0018C2  0100               	movlb	__Lparam shr (0+8)
  1507  0018C4  0E46               	movlw	low (_RSDT1+25)
  1508  0018C6  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1509  0018C8  0E03               	movlw	high (_RSDT1+25)
  1510  0018CA  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1511  0018CC  0E01               	movlw	1
  1512  0018CE  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1513  0018D0  EE00  F07D         	lfsr	0,_DtCO
  1514  0018D4  50EF               	movf	indf0,w,c
  1515  0018D6  0B01               	andlw	1
  1516  0018D8  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1517  0018DA  ECEC  F003         	call	_BitSet2	;wreg free
  1518                           ;main.c: 540: BitSet2(&RSDT1.outSTAT2,0,DtCW._er
      +                          r_CW);
  1519  0018DE  0100               	movlb	__Lparam shr (0+8)
  1520  0018E0  0E46               	movlw	low (_RSDT1+25)
  1521  0018E2  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1522  0018E4  0E03               	movlw	high (_RSDT1+25)
  1523  0018E6  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1524  0018E8  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1525  0018EA  EE00  F06E         	lfsr	0,_DtCW
  1526  0018EE  50EF               	movf	indf0,w,c
  1527  0018F0  0B01               	andlw	1
  1528  0018F2  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1529  0018F4  ECEC  F003         	call	_BitSet2	;wreg free
  1530                           ;main.c: 541: BitSet2(&RSDT1.outSTAT2,2,DtCS._er
      +                          ror);
  1531  0018F8  0100               	movlb	__Lparam shr (0+8)
  1532  0018FA  0E46               	movlw	low (_RSDT1+25)
  1533  0018FC  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1534  0018FE  0E03               	movlw	high (_RSDT1+25)
  1535  001900  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1536  001902  0E02               	movlw	2
  1537  001904  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1538  001906  EE00  F05F         	lfsr	0,_DtCS
  1539  00190A  30EF               	rrcf	indf0,w,c
  1540  00190C  6E00               	movwf	btemp,c
  1541  00190E  3200               	rrcf	btemp,f,c
  1542  001910  3000               	rrcf	btemp,w,c
  1543  001912  0B01               	andlw	1
  1544  001914  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1545  001916  ECEC  F003         	call	_BitSet2	;wreg free
  1546                           ;main.c: 542: BitSet2(&RSDT1.outSTAT2,3,DtCS._no
      +                          _mont);
  1547  00191A  0100               	movlb	__Lparam shr (0+8)
  1548  00191C  0E46               	movlw	low (_RSDT1+25)
  1549  00191E  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1550  001920  0E03               	movlw	high (_RSDT1+25)
  1551  001922  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1552  001924  0E03               	movlw	3
  1553  001926  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1554  001928  C060  F0AF         	movff	_DtCS+1,?_BitSet2+3
  1555  00192C  ECEC  F003         	call	_BitSet2	;wreg free
  1556                           ;main.c: 544: BitSet2(&RSDT1.outSTAT3,0,(RB6)?0:
      +                          1);
  1557  001930  0100               	movlb	__Lparam shr (0+8)
  1558  001932  0E47               	movlw	low (_RSDT1+26)
  1559  001934  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1560  001936  0E03               	movlw	high (_RSDT1+26)
  1561  001938  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1562  00193A  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1563  00193C  0E00               	movlw	0
  1564  00193E  AC81               	btfss	3969,6,c	;volatile
  1565  001940  0E01               	movlw	1
  1566  001942  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1567  001944  ECEC  F003         	call	_BitSet2	;wreg free
  1568                           ;main.c: 545: BitSet2(&RSDT1.outSTAT3,1,RD3);
  1569  001948  0100               	movlb	__Lparam shr (0+8)
  1570  00194A  0E47               	movlw	low (_RSDT1+26)
  1571  00194C  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1572  00194E  0E03               	movlw	high (_RSDT1+26)
  1573  001950  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1574  001952  0E01               	movlw	1
  1575  001954  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1576  001956  0E00               	movlw	0
  1577  001958  B683               	btfsc	3971,3,c	;volatile
  1578  00195A  0E01               	movlw	1
  1579  00195C  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1580  00195E  ECEC  F003         	call	_BitSet2	;wreg free
  1581                           ;main.c: 546: BitSet2(&RSDT1.outSTAT3,2,M._ROZRU
      +                          CH);
  1582  001962  0100               	movlb	__Lparam shr (0+8)
  1583  001964  0E47               	movlw	low (_RSDT1+26)
  1584  001966  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1585  001968  0E03               	movlw	high (_RSDT1+26)
  1586  00196A  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1587  00196C  0E02               	movlw	2
  1588  00196E  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1589  001970  EE03  F007         	lfsr	0,_M+1
  1590  001974  30EF               	rrcf	indf0,w,c
  1591  001976  6E00               	movwf	btemp,c
  1592  001978  3200               	rrcf	btemp,f,c
  1593  00197A  3000               	rrcf	btemp,w,c
  1594  00197C  0B01               	andlw	1
  1595  00197E  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1596  001980  ECEC  F003         	call	_BitSet2	;wreg free
  1597                           ;main.c: 547: BitSet2(&RSDT1.outSTAT3,3,DtIN._er
      +                          r_IN);
  1598  001984  0100               	movlb	__Lparam shr (0+8)
  1599  001986  0E47               	movlw	low (_RSDT1+26)
  1600  001988  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1601  00198A  0E03               	movlw	high (_RSDT1+26)
  1602  00198C  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1603  00198E  0E03               	movlw	3
  1604  001990  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1605  001992  EE00  F090         	lfsr	0,_DtIN
  1606  001996  50EF               	movf	indf0,w,c
  1607  001998  0B01               	andlw	1
  1608  00199A  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1609  00199C  ECEC  F003         	call	_BitSet2	;wreg free
  1610                           ;main.c: 548: BitSet2(&RSDT1.outSTAT3,4,(DtKNF.r
      +                          dpm!=0)?1:0);
  1611  0019A0  0100               	movlb	__Lparam shr (0+8)
  1612  0019A2  0E47               	movlw	low (_RSDT1+26)
  1613  0019A4  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1614  0019A6  0E03               	movlw	high (_RSDT1+26)
  1615  0019A8  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1616  0019AA  0E04               	movlw	4
  1617  0019AC  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1618  0019AE  EE02  F0BE         	lfsr	0,_DtKNF+16
  1619  0019B2  50EF               	movf	indf0,w,c
  1620  0019B4  0E00               	movlw	0
  1621  0019B6  A4D8               	btfss	status,2,c
  1622  0019B8  0E01               	movlw	1
  1623  0019BA  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1624  0019BC  ECEC  F003         	call	_BitSet2	;wreg free
  1625                           ;main.c: 549: BitSet2(&RSDT1.outSTAT3,5,((DtKNF.
      +                          teco!=0)&&(DtKNF.robg!=0))?1:0);
  1626  0019C0  0100               	movlb	__Lparam shr (0+8)
  1627  0019C2  0E47               	movlw	low (_RSDT1+26)
  1628  0019C4  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1629  0019C6  0E03               	movlw	high (_RSDT1+26)
  1630  0019C8  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1631  0019CA  0E05               	movlw	5
  1632  0019CC  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1633  0019CE  EE02  F0C1         	lfsr	0,_DtKNF+19
  1634  0019D2  50EF               	movf	indf0,w,c
  1635  0019D4  E006               	bz	u860
  1636  0019D6  EE02  F0C3         	lfsr	0,_DtKNF+21
  1637  0019DA  50EF               	movf	indf0,w,c
  1638  0019DC  E002               	bz	u860
  1639  0019DE  0E01               	movlw	1
  1640  0019E0  D001               	goto	u870
  1641  0019E2                     u860:
  1642  0019E2  0E00               	movlw	0
  1643  0019E4                     u870:
  1644  0019E4  0100               	movlb	__Lparam shr (0+8)
  1645  0019E6  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1646  0019E8  ECEC  F003         	call	_BitSet2	;wreg free
  1647                           ;main.c: 551: if(DtKNF.tpkt==0)
  1648  0019EC  EE02  F0BC         	lfsr	0,_DtKNF+14
  1649  0019F0  50EF               	movf	indf0,w,c
  1650  0019F2  E121               	bnz	l104
  1651                           ;main.c: 552: {
  1652  0019F4  EE02  F0D7         	lfsr	0,_DtKNF+41
  1653  0019F8  50EF               	movf	indf0,w,c
  1654                           ;main.c: 554: {
  1655  0019FA  0100               	movlb	__Lparam shr (0+8)
  1656  0019FC  0E47               	movlw	low (_RSDT1+26)
  1657  0019FE  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1658  001A00  0E03               	movlw	high (_RSDT1+26)
  1659  001A02  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1660  001A04  0E06               	movlw	6
  1661  001A06  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1662  001A08  E10B               	bnz	L18
  1663  001A0A  0E0B               	movlw	11
  1664  001A0C  EC1C  F07A         	call	_RdPrt
  1665  001A10  0E00               	movlw	0
  1666  001A12  B0D8               	btfsc	status,0,c
  1667  001A14  0E01               	movlw	1
  1668  001A16  0100               	movlb	__Lparam shr (0+8)
  1669  001A18  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1670  001A1A  ECEC  F003         	call	_BitSet2	;wreg free
  1671                           ;main.c: 556: }
  1672  001A1E  D01C               	goto	l107
  1673                           ;main.c: 557: else
  1674  001A20                     L18:
  1675  001A20  0E06               	movlw	6
  1676  001A22  EC1C  F07A         	call	_RdPrt
  1677  001A26  0E00               	movlw	0
  1678  001A28  B0D8               	btfsc	status,0,c
  1679  001A2A  0E01               	movlw	1
  1680  001A2C  0100               	movlb	__Lparam shr (0+8)
  1681  001A2E  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1682  001A30  ECEC  F003         	call	_BitSet2	;wreg free
  1683                           ;main.c: 560: }
  1684  001A34  D011               	goto	l107
  1685  001A36                     l104:
  1686                           ;main.c: 562: else
  1687  001A36  0100               	movlb	__Lparam shr (0+8)
  1688  001A38  0E47               	movlw	low (_RSDT1+26)
  1689  001A3A  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1690  001A3C  0E03               	movlw	high (_RSDT1+26)
  1691  001A3E  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1692  001A40  0E06               	movlw	6
  1693  001A42  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1694  001A44  0E0B               	movlw	11
  1695  001A46  EC1C  F07A         	call	_RdPrt
  1696  001A4A  0E00               	movlw	0
  1697  001A4C  B0D8               	btfsc	status,0,c
  1698  001A4E  0E01               	movlw	1
  1699  001A50  0100               	movlb	__Lparam shr (0+8)
  1700  001A52  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1701  001A54  ECEC  F003         	call	_BitSet2	;wreg free
  1702  001A58                     l107:
  1703                           ;main.c: 565: }
  1704  001A58  0100               	movlb	__Lparam shr (0+8)
  1705  001A5A  0E47               	movlw	low (_RSDT1+26)
  1706  001A5C  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1707  001A5E  0E03               	movlw	high (_RSDT1+26)
  1708  001A60  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1709  001A62  0E07               	movlw	7
  1710  001A64  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1711  001A66  0E0C               	movlw	12
  1712  001A68  EC1C  F07A         	call	_RdPrt
  1713  001A6C  0E00               	movlw	0
  1714  001A6E  B0D8               	btfsc	status,0,c
  1715  001A70  0E01               	movlw	1
  1716  001A72  0100               	movlb	__Lparam shr (0+8)
  1717  001A74  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1718  001A76  ECEC  F003         	call	_BitSet2	;wreg free
  1719                           ;main.c: 569: BitSet2(&RSDT1.outSTAT4,0,M._PROC_
      +                          ODP);
  1720  001A7A  0100               	movlb	__Lparam shr (0+8)
  1721  001A7C  0E48               	movlw	low (_RSDT1+27)
  1722  001A7E  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1723  001A80  0E03               	movlw	high (_RSDT1+27)
  1724  001A82  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1725  001A84  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1726  001A86  EE03  F00D         	lfsr	0,_M+7
  1727  001A8A  34EF               	rlcf	indf0,w,c
  1728  001A8C  34EF               	rlcf	indf0,w,c
  1729  001A8E  0B01               	andlw	1
  1730  001A90  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1731  001A92  ECEC  F003         	call	_BitSet2	;wreg free
  1732                           ;main.c: 570: if(PFN.pop_poz==2)
  1733  001A96  0100               	movlb	(_PFN+3) shr (0+8)
  1734  001A98  516A               	movf	(_PFN+3)& (0+255),w,b
  1735  001A9A  0A02               	xorlw	2
  1736  001A9C  116B               	iorwf	(_PFN+4)& (0+255),w,b
  1737                           ;main.c: 571: {
  1738  001A9E  0100               	movlb	__Lparam shr (0+8)
  1739  001AA0  0E48               	movlw	low (_RSDT1+27)
  1740  001AA2  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1741  001AA4  0E03               	movlw	high (_RSDT1+27)
  1742  001AA6  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1743  001AA8  0E01               	movlw	1
  1744  001AAA  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1745  001AAC  E104               	bnz	L19
  1746  001AAE  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1747  001AB0  ECEC  F003         	call	_BitSet2	;wreg free
  1748                           ;main.c: 573: }
  1749  001AB4  D003               	goto	l109
  1750                           ;main.c: 574: else
  1751  001AB6                     L19:
  1752  001AB6  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1753  001AB8  ECEC  F003         	call	_BitSet2	;wreg free
  1754  001ABC                     l109:
  1755                           ;main.c: 577: }
  1756  001ABC  0100               	movlb	__Lparam shr (0+8)
  1757  001ABE  0E48               	movlw	low (_RSDT1+27)
  1758  001AC0  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1759  001AC2  0E03               	movlw	high (_RSDT1+27)
  1760  001AC4  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1761  001AC6  0E02               	movlw	2
  1762  001AC8  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1763  001ACA  0100               	movlb	_DtZW shr (0+8)
  1764  001ACC  0E00               	movlw	0
  1765  001ACE  B363               	btfsc	_DtZW& (0+255),1,b
  1766  001AD0  0E01               	movlw	1
  1767  001AD2  0100               	movlb	__Lparam shr (0+8)
  1768  001AD4  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1769  001AD6  ECEC  F003         	call	_BitSet2	;wreg free
  1770                           ;main.c: 579: BitSet2(&RSDT1.outSTAT4,3,(DtKNF.p
      +                          gdr==2)?1:0);
  1771  001ADA  0100               	movlb	__Lparam shr (0+8)
  1772  001ADC  0E48               	movlw	low (_RSDT1+27)
  1773  001ADE  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1774  001AE0  0E03               	movlw	high (_RSDT1+27)
  1775  001AE2  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1776  001AE4  0E03               	movlw	3
  1777  001AE6  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1778  001AE8  C2D2  FFE8         	movff	_DtKNF+36,wreg
  1779  001AEC  0A02               	xorlw	2
  1780  001AEE  0E00               	movlw	0
  1781  001AF0  B4D8               	btfsc	status,2,c
  1782  001AF2  0E01               	movlw	1
  1783  001AF4  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1784  001AF6  ECEC  F003         	call	_BitSet2	;wreg free
  1785                           ;main.c: 580: BitSet2(&RSDT1.outSTAT4,4,RD2);
  1786  001AFA  0100               	movlb	__Lparam shr (0+8)
  1787  001AFC  0E48               	movlw	low (_RSDT1+27)
  1788  001AFE  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1789  001B00  0E03               	movlw	high (_RSDT1+27)
  1790  001B02  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1791  001B04  0E04               	movlw	4
  1792  001B06  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1793  001B08  0E00               	movlw	0
  1794  001B0A  B483               	btfsc	3971,2,c	;volatile
  1795  001B0C  0E01               	movlw	1
  1796  001B0E  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1797  001B10  ECEC  F003         	call	_BitSet2	;wreg free
  1798                           ;main.c: 581: BitSet2(&RSDT1.outSTAT4,5,RD1);
  1799  001B14  0100               	movlb	__Lparam shr (0+8)
  1800  001B16  0E48               	movlw	low (_RSDT1+27)
  1801  001B18  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1802  001B1A  0E03               	movlw	high (_RSDT1+27)
  1803  001B1C  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1804  001B1E  0E05               	movlw	5
  1805  001B20  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1806  001B22  0E00               	movlw	0
  1807  001B24  B283               	btfsc	3971,1,c	;volatile
  1808  001B26  0E01               	movlw	1
  1809  001B28  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1810  001B2A  ECEC  F003         	call	_BitSet2	;wreg free
  1811                           ;main.c: 582: BitSet2(&RSDT1.outSTAT4,6,(RdPrt(1
      +                          )!=0)?1:0);
  1812  001B2E  0100               	movlb	__Lparam shr (0+8)
  1813  001B30  0E48               	movlw	low (_RSDT1+27)
  1814  001B32  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1815  001B34  0E03               	movlw	high (_RSDT1+27)
  1816  001B36  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1817  001B38  0E06               	movlw	6
  1818  001B3A  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1819  001B3C  0E01               	movlw	1
  1820  001B3E  EC1C  F07A         	call	_RdPrt
  1821  001B42  0E00               	movlw	0
  1822  001B44  B0D8               	btfsc	status,0,c
  1823  001B46  0E01               	movlw	1
  1824  001B48  0100               	movlb	__Lparam shr (0+8)
  1825  001B4A  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1826  001B4C  ECEC  F003         	call	_BitSet2	;wreg free
  1827                           ;main.c: 583: BitSet2(&RSDT1.outSTAT4,7,RD0);
  1828  001B50  0100               	movlb	__Lparam shr (0+8)
  1829  001B52  0E48               	movlw	low (_RSDT1+27)
  1830  001B54  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1831  001B56  0E03               	movlw	high (_RSDT1+27)
  1832  001B58  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1833  001B5A  0E07               	movlw	7
  1834  001B5C  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1835  001B5E  0E00               	movlw	0
  1836  001B60  B083               	btfsc	3971,0,c	;volatile
  1837  001B62  0E01               	movlw	1
  1838  001B64  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1839  001B66  ECEC  F003         	call	_BitSet2	;wreg free
  1840                           ;main.c: 585: BitSet2(&RSDT1.outSTAT5,0,(RD5)?1:
      +                          0);
  1841  001B6A  0100               	movlb	__Lparam shr (0+8)
  1842  001B6C  0E49               	movlw	low (_RSDT1+28)
  1843  001B6E  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1844  001B70  0E03               	movlw	high (_RSDT1+28)
  1845  001B72  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1846  001B74  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1847  001B76  0E00               	movlw	0
  1848  001B78  BA83               	btfsc	3971,5,c	;volatile
  1849  001B7A  0E01               	movlw	1
  1850  001B7C  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1851  001B7E  ECEC  F003         	call	_BitSet2	;wreg free
  1852                           ;main.c: 586: BitSet2(&RSDT1.outSTAT5,1,(RA4)?0:
      +                          1);
  1853  001B82  0100               	movlb	__Lparam shr (0+8)
  1854  001B84  0E49               	movlw	low (_RSDT1+28)
  1855  001B86  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1856  001B88  0E03               	movlw	high (_RSDT1+28)
  1857  001B8A  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1858  001B8C  0E01               	movlw	1
  1859  001B8E  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1860  001B90  0E00               	movlw	0
  1861  001B92  A880               	btfss	3968,4,c	;volatile
  1862  001B94  0E01               	movlw	1
  1863  001B96  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1864  001B98  ECEC  F003         	call	_BitSet2	;wreg free
  1865                           ;main.c: 587: BitSet2(&RSDT1.outSTAT5,2,(RdPrt(3
      +                          )!=0)?1:0);
  1866  001B9C  0100               	movlb	__Lparam shr (0+8)
  1867  001B9E  0E49               	movlw	low (_RSDT1+28)
  1868  001BA0  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1869  001BA2  0E03               	movlw	high (_RSDT1+28)
  1870  001BA4  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1871  001BA6  0E02               	movlw	2
  1872  001BA8  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1873  001BAA  0E03               	movlw	3
  1874  001BAC  EC1C  F07A         	call	_RdPrt
  1875  001BB0  0E00               	movlw	0
  1876  001BB2  B0D8               	btfsc	status,0,c
  1877  001BB4  0E01               	movlw	1
  1878  001BB6  0100               	movlb	__Lparam shr (0+8)
  1879  001BB8  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1880  001BBA  ECEC  F003         	call	_BitSet2	;wreg free
  1881                           ;main.c: 588: BitSet2(&RSDT1.outSTAT5,3,(RdPrt(2
      +                          )!=0)?1:0);
  1882  001BBE  0100               	movlb	__Lparam shr (0+8)
  1883  001BC0  0E49               	movlw	low (_RSDT1+28)
  1884  001BC2  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1885  001BC4  0E03               	movlw	high (_RSDT1+28)
  1886  001BC6  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1887  001BC8  0E03               	movlw	3
  1888  001BCA  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1889  001BCC  0E02               	movlw	2
  1890  001BCE  EC1C  F07A         	call	_RdPrt
  1891  001BD2  0E00               	movlw	0
  1892  001BD4  B0D8               	btfsc	status,0,c
  1893  001BD6  0E01               	movlw	1
  1894  001BD8  0100               	movlb	__Lparam shr (0+8)
  1895  001BDA  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1896  001BDC  ECEC  F003         	call	_BitSet2	;wreg free
  1897                           ;main.c: 589: BitSet2(&RSDT1.outSTAT5,4,(RdPrt(4
      +                          )!=0)?1:0);
  1898  001BE0  0100               	movlb	__Lparam shr (0+8)
  1899  001BE2  0E49               	movlw	low (_RSDT1+28)
  1900  001BE4  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1901  001BE6  0E03               	movlw	high (_RSDT1+28)
  1902  001BE8  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1903  001BEA  0E04               	movlw	4
  1904  001BEC  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1905  001BEE  EC1C  F07A         	call	_RdPrt
  1906  001BF2  0E00               	movlw	0
  1907  001BF4  B0D8               	btfsc	status,0,c
  1908  001BF6  0E01               	movlw	1
  1909  001BF8  0100               	movlb	__Lparam shr (0+8)
  1910  001BFA  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1911  001BFC  ECEC  F003         	call	_BitSet2	;wreg free
  1912                           ;main.c: 592: BitSet2(&RSDT1.outKSTAT0,0,(RB6)?0
      +                          :1);
  1913  001C00  0100               	movlb	__Lparam shr (0+8)
  1914  001C02  0E50               	movlw	low (_RSDT1+35)
  1915  001C04  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1916  001C06  0E03               	movlw	high (_RSDT1+35)
  1917  001C08  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1918  001C0A  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1919  001C0C  0E00               	movlw	0
  1920  001C0E  AC81               	btfss	3969,6,c	;volatile
  1921  001C10  0E01               	movlw	1
  1922  001C12  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1923  001C14  ECEC  F003         	call	_BitSet2	;wreg free
  1924                           ;main.c: 593: BitSet2(&RSDT1.outKSTAT0,1,(DtKNF.
      +                          tpkt==0)?1:0);
  1925  001C18  0100               	movlb	__Lparam shr (0+8)
  1926  001C1A  0E50               	movlw	low (_RSDT1+35)
  1927  001C1C  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  1928  001C1E  0E03               	movlw	high (_RSDT1+35)
  1929  001C20  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  1930  001C22  0E01               	movlw	1
  1931  001C24  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  1932  001C26  EE02  F0BC         	lfsr	0,_DtKNF+14
  1933  001C2A  50EF               	movf	indf0,w,c
  1934  001C2C  0E00               	movlw	0
  1935  001C2E  B4D8               	btfsc	status,2,c
  1936  001C30  0E01               	movlw	1
  1937  001C32  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  1938  001C34  ECEC  F003         	call	_BitSet2	;wreg free
  1939                           ;main.c: 594: RSDT1.outPP=PMP.APROC;
  1940  001C38  C2FE  F342         	movff	_PMP+2,_RSDT1+21
  1941                           ;main.c: 595: RSDT1.outPG=VNTToProc(M.VVNT);
  1942  001C3C  C324  FFE8         	movff	_M+30,wreg
  1943  001C40  EC16  F064         	call	_VNTToProc
  1944  001C44  CFE8 F343          	movff	wreg,_RSDT1+22
  1945                           ;main.c: 597: M.vWSW=RSDT1.inRDZ0;
  1946  001C48  C377  F328         	movff	_RSDT1+74,_M+34
  1947                           ;main.c: 598: if(GetBit2(RSDT1.inSTAT1,6))
  1948  001C4C  0E06               	movlw	6
  1949  001C4E  0100               	movlb	__Lparam shr (0+8)
  1950  001C50  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1951  001C52  C37C  FFE8         	movff	_RSDT1+79,wreg
  1952  001C56  ECB9  F003         	call	_GetBit2
  1953                           ;main.c: 599: {
  1954  001C5A  0103               	movlb	(_M+7) shr (0+8)
  1955  001C5C  E30D               	bnc	L20
  1956  001C5E  890D               	bsf	(_M+7)& (0+255),4,b
  1957                           ;main.c: 601: if(GetBit2(RSDT1.inSTAT1,3))
  1958  001C60  0E03               	movlw	3
  1959  001C62  0100               	movlb	__Lparam shr (0+8)
  1960  001C64  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  1961  001C66  C37C  FFE8         	movff	_RSDT1+79,wreg
  1962  001C6A  ECB9  F003         	call	_GetBit2
  1963                           ;main.c: 602: {
  1964  001C6E  0103               	movlb	(_M+7) shr (0+8)
  1965  001C70  E302               	bnc	L21
  1966  001C72  8B0D               	bsf	(_M+7)& (0+255),5,b
  1967                           ;main.c: 604: }
  1968  001C74  D003               	goto	l113
  1969                           ;main.c: 605: else
  1970  001C76                     L21:
  1971  001C76  D001               	goto	L1
  1972                           ;main.c: 608: }
  1973                           ;main.c: 610: else
  1974  001C78                     L20:
  1975  001C78  990D               	bcf	(_M+7)& (0+255),4,b
  1976  001C7A                     L1:
  1977                           ;main.c: 613: M._KKOM=0;
  1978  001C7A  9B0D               	bcf	(_M+7)& (0+255),5,b
  1979  001C7C                     l113:
  1980                           ;main.c: 614: }
  1981  001C7C  0100               	movlb	__Lparam shr (0+8)
  1982  001C7E  6BAE               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
  1983  001C80  C37E  FFE8         	movff	_RSDT1+81,wreg
  1984  001C84  ECB9  F003         	call	_GetBit2
  1985  001C88  E305               	bnc	u950
  1986  001C8A  0103               	movlb	(_M+5) shr (0+8)
  1987  001C8C  AD0B               	btfss	(_M+5)& (0+255),6,b
  1988  001C8E  D002               	goto	u950
  1989  001C90  0E01               	movlw	1
  1990  001C92  D001               	goto	u960
  1991  001C94                     u950:
  1992  001C94  0E00               	movlw	0
  1993  001C96                     u960:
  1994  001C96  6E00               	movwf	btemp,c
  1995  001C98  EE03  F00B         	lfsr	0,_M+5
  1996  001C9C  3A00               	swapf	btemp,f,c
  1997  001C9E  3600               	rlcf	btemp,f,c
  1998  001CA0  50EF               	movf	indf0,w,c
  1999  001CA2  1800               	xorwf	btemp,w,c
  2000  001CA4  0BDF               	andlw	-33
  2001  001CA6  1800               	xorwf	btemp,w,c
  2002  001CA8  6EEF               	movwf	indf0,c
  2003                           ;main.c: 694: M._LIN_RT=GetBit2(RSDT1.inLNSTAT,1
      +                          )&&M._LIN;
  2004  001CAA  0E01               	movlw	1
  2005  001CAC  0100               	movlb	__Lparam shr (0+8)
  2006  001CAE  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2007  001CB0  C37E  FFE8         	movff	_RSDT1+81,wreg
  2008  001CB4  ECB9  F003         	call	_GetBit2
  2009  001CB8  E305               	bnc	u990
  2010  001CBA  0103               	movlb	(_M+5) shr (0+8)
  2011  001CBC  AB0B               	btfss	(_M+5)& (0+255),5,b
  2012  001CBE  D002               	goto	u990
  2013  001CC0  0E01               	movlw	1
  2014  001CC2  D001               	goto	u1000
  2015  001CC4                     u990:
  2016  001CC4  0E00               	movlw	0
  2017  001CC6                     u1000:
  2018  001CC6  6E00               	movwf	btemp,c
  2019  001CC8  EE03  F00B         	lfsr	0,_M+5
  2020  001CCC  3200               	rrcf	btemp,f,c
  2021  001CCE  3200               	rrcf	btemp,f,c
  2022  001CD0  50EF               	movf	indf0,w,c
  2023  001CD2  1800               	xorwf	btemp,w,c
  2024  001CD4  0B7F               	andlw	-129
  2025  001CD6  1800               	xorwf	btemp,w,c
  2026  001CD8  6EEF               	movwf	indf0,c
  2027                           ;main.c: 695: M._LIN_CW=GetBit2(RSDT1.inLNSTAT,2
      +                          )&&(DtKNF.tpkt==0)&&M._LIN;
  2028  001CDA  0E02               	movlw	2
  2029  001CDC  0100               	movlb	__Lparam shr (0+8)
  2030  001CDE  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2031  001CE0  C37E  FFE8         	movff	_RSDT1+81,wreg
  2032  001CE4  ECB9  F003         	call	_GetBit2
  2033  001CE8  E309               	bnc	u1050
  2034  001CEA  EE02  F0BC         	lfsr	0,_DtKNF+14
  2035  001CEE  50EF               	movf	indf0,w,c
  2036  001CF0  E105               	bnz	u1050
  2037  001CF2  0103               	movlb	(_M+5) shr (0+8)
  2038  001CF4  AB0B               	btfss	(_M+5)& (0+255),5,b
  2039  001CF6  D002               	goto	u1050
  2040  001CF8  0E01               	movlw	1
  2041  001CFA  D001               	goto	u1060
  2042  001CFC                     u1050:
  2043  001CFC  0E00               	movlw	0
  2044  001CFE                     u1060:
  2045  001CFE  6E00               	movwf	btemp,c
  2046  001D00  EE03  F00C         	lfsr	0,_M+6
  2047  001D04  18EF               	xorwf	indf0,w,c
  2048  001D06  0BFE               	andlw	-2
  2049  001D08  1800               	xorwf	btemp,w,c
  2050  001D0A  6EEF               	movwf	indf0,c
  2051                           ;main.c: 696: M._LIN_KSK=GetBit2(RSDT1.inLNSTAT,
      +                          3)&&M._LIN;
  2052  001D0C  0E03               	movlw	3
  2053  001D0E  0100               	movlb	__Lparam shr (0+8)
  2054  001D10  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2055  001D12  C37E  FFE8         	movff	_RSDT1+81,wreg
  2056  001D16  ECB9  F003         	call	_GetBit2
  2057  001D1A  E305               	bnc	u1090
  2058  001D1C  0103               	movlb	(_M+5) shr (0+8)
  2059  001D1E  AB0B               	btfss	(_M+5)& (0+255),5,b
  2060  001D20  D002               	goto	u1090
  2061  001D22  0E01               	movlw	1
  2062  001D24  D001               	goto	u1100
  2063  001D26                     u1090:
  2064  001D26  0E00               	movlw	0
  2065  001D28                     u1100:
  2066  001D28  6E00               	movwf	btemp,c
  2067  001D2A  EE03  F00C         	lfsr	0,_M+6
  2068  001D2E  3600               	rlcf	btemp,f,c
  2069  001D30  50EF               	movf	indf0,w,c
  2070  001D32  1800               	xorwf	btemp,w,c
  2071  001D34  0BFD               	andlw	-3
  2072  001D36  1800               	xorwf	btemp,w,c
  2073  001D38  6EEF               	movwf	indf0,c
  2074                           ;main.c: 697: M._LIN_STR=GetBit2(RSDT1.inLNSTAT,
      +                          4)&&M._LIN;
  2075  001D3A  0E04               	movlw	4
  2076  001D3C  0100               	movlb	__Lparam shr (0+8)
  2077  001D3E  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2078  001D40  C37E  FFE8         	movff	_RSDT1+81,wreg
  2079  001D44  ECB9  F003         	call	_GetBit2
  2080  001D48  E305               	bnc	u1130
  2081  001D4A  0103               	movlb	(_M+5) shr (0+8)
  2082  001D4C  AB0B               	btfss	(_M+5)& (0+255),5,b
  2083  001D4E  D002               	goto	u1130
  2084  001D50  0E01               	movlw	1
  2085  001D52  D001               	goto	u1140
  2086  001D54                     u1130:
  2087  001D54  0E00               	movlw	0
  2088  001D56                     u1140:
  2089  001D56  6E00               	movwf	btemp,c
  2090  001D58  EE03  F00C         	lfsr	0,_M+6
  2091  001D5C  3600               	rlcf	btemp,f,c
  2092  001D5E  3600               	rlcf	btemp,f,c
  2093  001D60  50EF               	movf	indf0,w,c
  2094  001D62  1800               	xorwf	btemp,w,c
  2095  001D64  0BFB               	andlw	-5
  2096  001D66  1800               	xorwf	btemp,w,c
  2097  001D68  6EEF               	movwf	indf0,c
  2098                           ;main.c: 698: M._LIN_DPGD=GetBit2(RSDT1.inLNSTAT
      +                          ,5)&&M._LIN;
  2099  001D6A  0E05               	movlw	5
  2100  001D6C  0100               	movlb	__Lparam shr (0+8)
  2101  001D6E  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2102  001D70  C37E  FFE8         	movff	_RSDT1+81,wreg
  2103  001D74  ECB9  F003         	call	_GetBit2
  2104  001D78  E305               	bnc	u1170
  2105  001D7A  0103               	movlb	(_M+5) shr (0+8)
  2106  001D7C  AB0B               	btfss	(_M+5)& (0+255),5,b
  2107  001D7E  D002               	goto	u1170
  2108  001D80  0E01               	movlw	1
  2109  001D82  D001               	goto	u1180
  2110  001D84                     u1170:
  2111  001D84  0E00               	movlw	0
  2112  001D86                     u1180:
  2113  001D86  6E00               	movwf	btemp,c
  2114  001D88  EE03  F00C         	lfsr	0,_M+6
  2115  001D8C  3600               	rlcf	btemp,f,c
  2116  001D8E  3600               	rlcf	btemp,f,c
  2117  001D90  3600               	rlcf	btemp,f,c
  2118  001D92  50EF               	movf	indf0,w,c
  2119  001D94  1800               	xorwf	btemp,w,c
  2120  001D96  0BF7               	andlw	-9
  2121  001D98  1800               	xorwf	btemp,w,c
  2122  001D9A  6EEF               	movwf	indf0,c
  2123                           ;main.c: 699: M._LIN_ENDO=GetBit2(RSDT1.inSTAT1,
      +                          5)&&M._LIN&&M._BLOKUJ_ODP;
  2124  001D9C  0E05               	movlw	5
  2125  001D9E  0100               	movlb	__Lparam shr (0+8)
  2126  001DA0  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2127  001DA2  C37C  FFE8         	movff	_RSDT1+79,wreg
  2128  001DA6  ECB9  F003         	call	_GetBit2
  2129  001DAA  E308               	bnc	u1230
  2130  001DAC  0103               	movlb	(_M+5) shr (0+8)
  2131  001DAE  AB0B               	btfss	(_M+5)& (0+255),5,b
  2132  001DB0  D005               	goto	u1230
  2133  001DB2  0103               	movlb	(_M+7) shr (0+8)
  2134  001DB4  AD0D               	btfss	(_M+7)& (0+255),6,b
  2135  001DB6  D002               	goto	u1230
  2136  001DB8  0E01               	movlw	1
  2137  001DBA  D001               	goto	u1240
  2138  001DBC                     u1230:
  2139  001DBC  0E00               	movlw	0
  2140  001DBE                     u1240:
  2141  001DBE  6E00               	movwf	btemp,c
  2142  001DC0  EE03  F00C         	lfsr	0,_M+6
  2143  001DC4  3A00               	swapf	btemp,f,c
  2144  001DC6  50EF               	movf	indf0,w,c
  2145  001DC8  1800               	xorwf	btemp,w,c
  2146  001DCA  0BEF               	andlw	-17
  2147  001DCC  1800               	xorwf	btemp,w,c
  2148  001DCE  6EEF               	movwf	indf0,c
  2149                           ;main.c: 700: if(!M._LIN_KSK&&!M._LIN_STR)
  2150  001DD0  0103               	movlb	(_M+6) shr (0+8)
  2151  001DD2  A30C               	btfss	(_M+6)& (0+255),1,b
  2152  001DD4  B50C               	btfsc	(_M+6)& (0+255),2,b
  2153  001DD6  D0AF               	goto	l114
  2154                           ;main.c: 701: {
  2155  001DD8  0E02               	movlw	2
  2156  001DDA  0100               	movlb	__Lparam shr (0+8)
  2157  001DDC  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2158  001DDE  C37D  FFE8         	movff	_RSDT1+80,wreg
  2159  001DE2  ECB9  F003         	call	_GetBit2
  2160  001DE6  E305               	bnc	u1300
  2161  001DE8  0103               	movlb	(_M+5) shr (0+8)
  2162  001DEA  AD0B               	btfss	(_M+5)& (0+255),6,b
  2163  001DEC  D002               	goto	u1300
  2164  001DEE  0E01               	movlw	1
  2165  001DF0  D001               	goto	u1310
  2166  001DF2                     u1300:
  2167  001DF2  0E00               	movlw	0
  2168  001DF4                     u1310:
  2169  001DF4  6E00               	movwf	btemp,c
  2170  001DF6  EE03  F00C         	lfsr	0,_M+6
  2171  001DFA  3200               	rrcf	btemp,f,c
  2172  001DFC  3200               	rrcf	btemp,f,c
  2173  001DFE  50EF               	movf	indf0,w,c
  2174  001E00  1800               	xorwf	btemp,w,c
  2175  001E02  0B7F               	andlw	-129
  2176  001E04  1800               	xorwf	btemp,w,c
  2177  001E06  6EEF               	movwf	indf0,c
  2178                           ;main.c: 703: M._IOT_RT=GetBit2(RSDT1.inINSTAT,3
      +                          )&&M._IOT;
  2179  001E08  0E03               	movlw	3
  2180  001E0A  0100               	movlb	__Lparam shr (0+8)
  2181  001E0C  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2182  001E0E  C37D  FFE8         	movff	_RSDT1+80,wreg
  2183  001E12  ECB9  F003         	call	_GetBit2
  2184  001E16  E305               	bnc	u1340
  2185  001E18  0103               	movlb	(_M+6) shr (0+8)
  2186  001E1A  AF0C               	btfss	(_M+6)& (0+255),7,b
  2187  001E1C  D002               	goto	u1340
  2188  001E1E  0E01               	movlw	1
  2189  001E20  D001               	goto	u1350
  2190  001E22                     u1340:
  2191  001E22  0E00               	movlw	0
  2192  001E24                     u1350:
  2193  001E24  6E00               	movwf	btemp,c
  2194  001E26  EE03  F00D         	lfsr	0,_M+7
  2195  001E2A  18EF               	xorwf	indf0,w,c
  2196  001E2C  0BFE               	andlw	-2
  2197  001E2E  1800               	xorwf	btemp,w,c
  2198  001E30  6EEF               	movwf	indf0,c
  2199                           ;main.c: 704: M._IOT_CW=GetBit2(RSDT1.inINSTAT,4
      +                          )&&(DtKNF.tpkt==0)&&M._IOT;
  2200  001E32  0E04               	movlw	4
  2201  001E34  0100               	movlb	__Lparam shr (0+8)
  2202  001E36  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2203  001E38  C37D  FFE8         	movff	_RSDT1+80,wreg
  2204  001E3C  ECB9  F003         	call	_GetBit2
  2205  001E40  E309               	bnc	u1400
  2206  001E42  EE02  F0BC         	lfsr	0,_DtKNF+14
  2207  001E46  50EF               	movf	indf0,w,c
  2208  001E48  E105               	bnz	u1400
  2209  001E4A  0103               	movlb	(_M+6) shr (0+8)
  2210  001E4C  AF0C               	btfss	(_M+6)& (0+255),7,b
  2211  001E4E  D002               	goto	u1400
  2212  001E50  0E01               	movlw	1
  2213  001E52  D001               	goto	u1410
  2214  001E54                     u1400:
  2215  001E54  0E00               	movlw	0
  2216  001E56                     u1410:
  2217  001E56  6E00               	movwf	btemp,c
  2218  001E58  EE03  F00D         	lfsr	0,_M+7
  2219  001E5C  3600               	rlcf	btemp,f,c
  2220  001E5E  50EF               	movf	indf0,w,c
  2221  001E60  1800               	xorwf	btemp,w,c
  2222  001E62  0BFD               	andlw	-3
  2223  001E64  1800               	xorwf	btemp,w,c
  2224  001E66  6EEF               	movwf	indf0,c
  2225                           ;main.c: 705: M._IOT_STR=GetBit2(RSDT1.inINSTAT,
      +                          5)&&M._IOT;
  2226  001E68  0E05               	movlw	5
  2227  001E6A  0100               	movlb	__Lparam shr (0+8)
  2228  001E6C  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2229  001E6E  C37D  FFE8         	movff	_RSDT1+80,wreg
  2230  001E72  ECB9  F003         	call	_GetBit2
  2231  001E76  E305               	bnc	u1440
  2232  001E78  0103               	movlb	(_M+6) shr (0+8)
  2233  001E7A  AF0C               	btfss	(_M+6)& (0+255),7,b
  2234  001E7C  D002               	goto	u1440
  2235  001E7E  0E01               	movlw	1
  2236  001E80  D001               	goto	u1450
  2237  001E82                     u1440:
  2238  001E82  0E00               	movlw	0
  2239  001E84                     u1450:
  2240  001E84  6E00               	movwf	btemp,c
  2241  001E86  EE03  F00D         	lfsr	0,_M+7
  2242  001E8A  3600               	rlcf	btemp,f,c
  2243  001E8C  3600               	rlcf	btemp,f,c
  2244  001E8E  50EF               	movf	indf0,w,c
  2245  001E90  1800               	xorwf	btemp,w,c
  2246  001E92  0BFB               	andlw	-5
  2247  001E94  1800               	xorwf	btemp,w,c
  2248  001E96  6EEF               	movwf	indf0,c
  2249                           ;main.c: 706: M._IOT_DPGD=GetBit2(RSDT1.inINSTAT
      +                          ,6)&&M._IOT;
  2250  001E98  0E06               	movlw	6
  2251  001E9A  0100               	movlb	__Lparam shr (0+8)
  2252  001E9C  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2253  001E9E  C37D  FFE8         	movff	_RSDT1+80,wreg
  2254  001EA2  ECB9  F003         	call	_GetBit2
  2255  001EA6  E305               	bnc	u1480
  2256  001EA8  0103               	movlb	(_M+6) shr (0+8)
  2257  001EAA  AF0C               	btfss	(_M+6)& (0+255),7,b
  2258  001EAC  D002               	goto	u1480
  2259  001EAE  0E01               	movlw	1
  2260  001EB0  D001               	goto	u1490
  2261  001EB2                     u1480:
  2262  001EB2  0E00               	movlw	0
  2263  001EB4                     u1490:
  2264  001EB4  6E00               	movwf	btemp,c
  2265  001EB6  EE03  F00D         	lfsr	0,_M+7
  2266  001EBA  3600               	rlcf	btemp,f,c
  2267  001EBC  3600               	rlcf	btemp,f,c
  2268  001EBE  3600               	rlcf	btemp,f,c
  2269  001EC0  50EF               	movf	indf0,w,c
  2270  001EC2  1800               	xorwf	btemp,w,c
  2271  001EC4  0BF7               	andlw	-9
  2272  001EC6  1800               	xorwf	btemp,w,c
  2273  001EC8  6EEF               	movwf	indf0,c
  2274                           ;main.c: 707: if(!M._IOT)
  2275  001ECA  0103               	movlb	(_M+6) shr (0+8)
  2276  001ECC  BF0C               	btfsc	(_M+6)& (0+255),7,b
  2277  001ECE  D031               	goto	l115
  2278                           ;main.c: 708: {
  2279  001ED0  0100               	movlb	__Lparam shr (0+8)
  2280  001ED2  6BAE               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
  2281  001ED4  C37D  FFE8         	movff	_RSDT1+80,wreg
  2282  001ED8  ECB9  F003         	call	_GetBit2
  2283  001EDC  E305               	bnc	u1530
  2284  001EDE  0103               	movlb	(_M+5) shr (0+8)
  2285  001EE0  AD0B               	btfss	(_M+5)& (0+255),6,b
  2286  001EE2  D002               	goto	u1530
  2287  001EE4  0E01               	movlw	1
  2288  001EE6  D001               	goto	u1540
  2289  001EE8                     u1530:
  2290  001EE8  0E00               	movlw	0
  2291  001EEA                     u1540:
  2292  001EEA  6E00               	movwf	btemp,c
  2293  001EEC  EE03  F00C         	lfsr	0,_M+6
  2294  001EF0  3A00               	swapf	btemp,f,c
  2295  001EF2  3600               	rlcf	btemp,f,c
  2296  001EF4  50EF               	movf	indf0,w,c
  2297  001EF6  1800               	xorwf	btemp,w,c
  2298  001EF8  0BDF               	andlw	-33
  2299  001EFA  1800               	xorwf	btemp,w,c
  2300  001EFC  6EEF               	movwf	indf0,c
  2301                           ;main.c: 710: M._I10V_RT=GetBit2(RSDT1.inINSTAT,
      +                          1)&&M._I10V;
  2302  001EFE  0E01               	movlw	1
  2303  001F00  0100               	movlb	__Lparam shr (0+8)
  2304  001F02  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2305  001F04  C37D  FFE8         	movff	_RSDT1+80,wreg
  2306  001F08  ECB9  F003         	call	_GetBit2
  2307  001F0C  E305               	bnc	u1570
  2308  001F0E  0103               	movlb	(_M+6) shr (0+8)
  2309  001F10  AB0C               	btfss	(_M+6)& (0+255),5,b
  2310  001F12  D002               	goto	u1570
  2311  001F14  0E01               	movlw	1
  2312  001F16  D001               	goto	u1580
  2313  001F18                     u1570:
  2314  001F18  0E00               	movlw	0
  2315  001F1A                     u1580:
  2316  001F1A  6E00               	movwf	btemp,c
  2317  001F1C  EE03  F00C         	lfsr	0,_M+6
  2318  001F20  3A00               	swapf	btemp,f,c
  2319  001F22  3600               	rlcf	btemp,f,c
  2320  001F24  3600               	rlcf	btemp,f,c
  2321  001F26  50EF               	movf	indf0,w,c
  2322  001F28  1800               	xorwf	btemp,w,c
  2323  001F2A  0BBF               	andlw	-65
  2324  001F2C  1800               	xorwf	btemp,w,c
  2325  001F2E  6EEF               	movwf	indf0,c
  2326                           ;main.c: 711: }
  2327  001F30  D00A               	goto	l117
  2328  001F32                     l115:
  2329                           ;main.c: 712: else
  2330  001F32  0103               	movlb	(_M+6) shr (0+8)
  2331  001F34  D006               	goto	L2
  2332                           ;main.c: 715: M._I10V_RT=0;
  2333                           ;main.c: 716: }
  2334  001F36                     l114:
  2335                           ;main.c: 718: else
  2336  001F36  0103               	movlb	(_M+6) shr (0+8)
  2337  001F38  9F0C               	bcf	(_M+6)& (0+255),7,b
  2338                           ;main.c: 721: M._IOT_RT=0;
  2339  001F3A  910D               	bcf	(_M+7)& (0+255),0,b
  2340                           ;main.c: 722: M._IOT_CW=0;
  2341  001F3C  930D               	bcf	(_M+7)& (0+255),1,b
  2342                           ;main.c: 723: M._IOT_STR=0;
  2343  001F3E  950D               	bcf	(_M+7)& (0+255),2,b
  2344                           ;main.c: 724: M._IOT_DPGD=0;
  2345  001F40  970D               	bcf	(_M+7)& (0+255),3,b
  2346  001F42                     L2:
  2347                           ;main.c: 725: M._I10V=0;
  2348  001F42  9B0C               	bcf	(_M+6)& (0+255),5,b
  2349                           ;main.c: 726: M._I10V_RT=0;
  2350  001F44  9D0C               	bcf	(_M+6)& (0+255),6,b
  2351  001F46                     l117:
  2352                           ;main.c: 727: }
  2353  001F46  0103               	movlb	(_M+5) shr (0+8)
  2354  001F48  AB0B               	btfss	(_M+5)& (0+255),5,b
  2355  001F4A  D003               	goto	l118
  2356                           ;main.c: 729: {
  2357  001F4C  C380  F32C         	movff	_RSDT1+83,_M+38
  2358                           ;main.c: 731: }
  2359  001F50  0012               	return	
  2360  001F52                     l118:
  2361                           ;main.c: 732: else
  2362  001F52  0103               	movlb	(_M+38) shr (0+8)
  2363  001F54  6B2C               	clrf	(_M+38)& (0+255),b
  2364                           ;main.c: 735: }
  2365  001F56  0012               	return	
  2366  001F58                     __end_of_RefLCDData:
  2367                           ;main.c: 741: void KolejkaPobudzen(void)
  2368                           ;main.c: 742: {
  2369  001F58                     _KolejkaPobudzen:
  2370  000000                     
  2371                           ;main.c: 743: unsigned char wr=0;
  2372  001F58  6AD9               	clrf	fsr2l,c
  2373                           ;main.c: 746: if(M._AKTYWNE_KNF)
  2374  001F5A  0103               	movlb	(_M+3) shr (0+8)
  2375  001F5C  A309               	btfss	(_M+3)& (0+255),1,b
  2376  001F5E  D025               	goto	l121
  2377                           ;main.c: 747: {
  2378  001F60  9506               	bcf	_M& (0+255),2,b
  2379                           ;main.c: 749: M._pob_AL=0;
  2380  001F62  9706               	bcf	_M& (0+255),3,b
  2381                           ;main.c: 750: M._pob_CO=0;
  2382  001F64  9B06               	bcf	_M& (0+255),5,b
  2383                           ;main.c: 751: M._pob_CW=0;
  2384  001F66  9906               	bcf	_M& (0+255),4,b
  2385                           ;main.c: 752: M._pob_DzCO=0;
  2386  001F68  9D06               	bcf	_M& (0+255),6,b
  2387                           ;main.c: 753: M._pob_DzCW=0;
  2388  001F6A  9F06               	bcf	_M& (0+255),7,b
  2389                           ;main.c: 754: if((PFN.poz==2)||(PFN.poz==3))
  2390  001F6C  0100               	movlb	(_PFN+1) shr (0+8)
  2391  001F6E  5168               	movf	(_PFN+1)& (0+255),w,b
  2392  001F70  0A02               	xorlw	2
  2393  001F72  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2394  001F74  E004               	bz	u1630
  2395  001F76  5168               	movf	(_PFN+1)& (0+255),w,b
  2396  001F78  0A03               	xorlw	3
  2397  001F7A  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2398  001F7C  E112               	bnz	l122
  2399  001F7E                     u1630:
  2400                           ;main.c: 755: {
  2401  001F7E  0102               	movlb	_DtKNF shr (0+8)
  2402  001F80  A5AE               	btfss	_DtKNF& (0+255),2,b
  2403  001F82  D003               	goto	l123
  2404  001F84  0103               	movlb	_M shr (0+8)
  2405  001F86  8306               	bsf	_M& (0+255),1,b
  2406  001F88  D002               	goto	l124
  2407  001F8A                     l123:
  2408                           ;main.c: 757: else M._pob_KCW=0;
  2409  001F8A  0103               	movlb	_M shr (0+8)
  2410  001F8C  9306               	bcf	_M& (0+255),1,b
  2411  001F8E                     l124:
  2412                           ;main.c: 758: if(DtKNF.wymCO)
  2413  001F8E  0102               	movlb	_DtKNF shr (0+8)
  2414  001F90  A3AE               	btfss	_DtKNF& (0+255),1,b
  2415  001F92  D004               	goto	l125
  2416                           ;main.c: 759: {
  2417  001F94  0103               	movlb	_M shr (0+8)
  2418  001F96  8106               	bsf	_M& (0+255),0,b
  2419                           ;main.c: 761: M._BLOKUJ_15S=0;
  2420  001F98  9908               	bcf	(_M+2)& (0+255),4,b
  2421                           ;main.c: 762: }
  2422  001F9A  0012               	return	
  2423  001F9C                     l125:
  2424                           ;main.c: 763: else M._pob_KCO=0;
  2425  001F9C  0103               	movlb	_M shr (0+8)
  2426  001F9E  9106               	bcf	_M& (0+255),0,b
  2427                           ;main.c: 764: }
  2428  001FA0  0012               	return	
  2429  001FA2                     l122:
  2430                           ;main.c: 765: else
  2431  001FA2  0103               	movlb	_M shr (0+8)
  2432  001FA4  9306               	bcf	_M& (0+255),1,b
  2433                           ;main.c: 768: M._pob_KCO=0;
  2434  001FA6  9106               	bcf	_M& (0+255),0,b
  2435                           ;main.c: 769: }
  2436  001FA8  0012               	return	
  2437  001FAA                     l121:
  2438                           ;main.c: 771: else
  2439  001FAA  0103               	movlb	_M shr (0+8)
  2440  001FAC  9306               	bcf	_M& (0+255),1,b
  2441                           ;main.c: 775: M._pob_KCO=0;
  2442  001FAE  9106               	bcf	_M& (0+255),0,b
  2443                           ;main.c: 776: if(M._AKTYWNE_SRW&&(PFN.poz==3))
  2444  001FB0  AD08               	btfss	(_M+2)& (0+255),6,b
  2445  001FB2  D00E               	goto	l129
  2446  001FB4  0100               	movlb	(_PFN+1) shr (0+8)
  2447  001FB6  5168               	movf	(_PFN+1)& (0+255),w,b
  2448  001FB8  0A03               	xorlw	3
  2449  001FBA  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2450                           ;main.c: 777: {
  2451  001FBC  0103               	movlb	_M shr (0+8)
  2452  001FBE  E109               	bnz	L22
  2453  001FC0  8506               	bsf	_M& (0+255),2,b
  2454                           ;main.c: 779: M._pob_AL=0;
  2455  001FC2  9706               	bcf	_M& (0+255),3,b
  2456                           ;main.c: 780: M._pob_CW=0;
  2457  001FC4  9906               	bcf	_M& (0+255),4,b
  2458                           ;main.c: 781: M._pob_CO=0;
  2459  001FC6  9B06               	bcf	_M& (0+255),5,b
  2460                           ;main.c: 782: M._pob_DzCO=0;
  2461  001FC8  9D06               	bcf	_M& (0+255),6,b
  2462                           ;main.c: 783: M._pob_DzCW=0;
  2463  001FCA  9F06               	bcf	_M& (0+255),7,b
  2464                           ;main.c: 784: M._BLOKUJ_15S=0;
  2465  001FCC  9908               	bcf	(_M+2)& (0+255),4,b
  2466                           ;main.c: 785: }
  2467  001FCE  0012               	return	
  2468  001FD0                     l129:
  2469                           ;main.c: 786: else
  2470  001FD0  0103               	movlb	_M shr (0+8)
  2471  001FD2                     L22:
  2472  001FD2  9506               	bcf	_M& (0+255),2,b
  2473                           ;main.c: 790: if(M._AKTYWNE_AL)
  2474  001FD4  AF08               	btfss	(_M+2)& (0+255),7,b
  2475  001FD6  D010               	goto	l131
  2476                           ;main.c: 791: {
  2477  001FD8  0E46               	movlw	70
  2478  001FDA  0100               	movlb	(_DtCW+2) shr (0+8)
  2479  001FDC  6170               	cpfslt	(_DtCW+2)& (0+255),b
  2480  001FDE  D003               	goto	l132
  2481  001FE0  0103               	movlb	_M shr (0+8)
  2482  001FE2  8706               	bsf	_M& (0+255),3,b
  2483  001FE4  D003               	goto	l133
  2484  001FE6                     l132:
  2485                           ;main.c: 793: else
  2486  001FE6  0103               	movlb	_M shr (0+8)
  2487  001FE8  9706               	bcf	_M& (0+255),3,b
  2488                           ;main.c: 796: M._AKTYWNE_AL=0;
  2489  001FEA  9F08               	bcf	(_M+2)& (0+255),7,b
  2490  001FEC                     l133:
  2491                           ;main.c: 797: }
  2492  001FEC  0103               	movlb	_M shr (0+8)
  2493  001FEE  9906               	bcf	_M& (0+255),4,b
  2494                           ;main.c: 799: M._pob_CO=0;
  2495  001FF0  9B06               	bcf	_M& (0+255),5,b
  2496                           ;main.c: 800: M._pob_DzCO=0;
  2497  001FF2  9D06               	bcf	_M& (0+255),6,b
  2498                           ;main.c: 801: M._pob_DzCW=0;
  2499  001FF4  9F06               	bcf	_M& (0+255),7,b
  2500                           ;main.c: 802: }
  2501  001FF6  0012               	return	
  2502  001FF8                     l131:
  2503                           ;main.c: 803: else
  2504  001FF8  0103               	movlb	_M shr (0+8)
  2505  001FFA  9706               	bcf	_M& (0+255),3,b
  2506                           ;main.c: 807: if(DtKNF.tpkt!=0) wr=RdPrt(11)&&((
      +                          PFN.poz==2)||(PFN.poz==3));
  2507  001FFC  EE02  F0BC         	lfsr	0,_DtKNF+14
  2508  002000  50EF               	movf	indf0,w,c
  2509  002002  E00F               	bz	l135
  2510  002004  0E0B               	movlw	11
  2511  002006  EC1C  F07A         	call	_RdPrt
  2512  00200A  E31A               	bnc	u1840
  2513  00200C  0100               	movlb	(_PFN+1) shr (0+8)
  2514  00200E  5168               	movf	(_PFN+1)& (0+255),w,b
  2515  002010  0A02               	xorlw	2
  2516  002012  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2517  002014  E004               	bz	u1761
  2518  002016  5168               	movf	(_PFN+1)& (0+255),w,b
  2519  002018  0A03               	xorlw	3
  2520  00201A  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2521  00201C  E111               	bnz	u1840
  2522  00201E                     u1761:
  2523  00201E  0E01               	movlw	1
  2524  002020  D010               	goto	u1850
  2525  002022                     l135:
  2526                           ;main.c: 808: else wr=DtCW._wpz_CW&&DtCO._pz_CO&
      +                          &((PFN.poz==2)||(PFN.poz==3));
  2527  002022  0100               	movlb	_DtCW shr (0+8)
  2528  002024  A76E               	btfss	_DtCW& (0+255),3,b
  2529  002026  D00C               	goto	u1840
  2530  002028  0100               	movlb	(_DtCO+1) shr (0+8)
  2531  00202A  A37E               	btfss	(_DtCO+1)& (0+255),1,b
  2532  00202C  D009               	goto	u1840
  2533  00202E  0100               	movlb	(_PFN+1) shr (0+8)
  2534  002030  5168               	movf	(_PFN+1)& (0+255),w,b
  2535  002032  0A02               	xorlw	2
  2536  002034  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2537  002036  E0F3               	bz	u1761
  2538  002038  5168               	movf	(_PFN+1)& (0+255),w,b
  2539  00203A  0A03               	xorlw	3
  2540  00203C  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2541  00203E  E0EF               	bz	u1761
  2542  002040                     u1840:
  2543  002040  0E00               	movlw	0
  2544  002042                     u1850:
  2545  002042  0100               	movlb	__Lparam shr (0+8)
  2546  002044  6FA4               	movwf	?a_KolejkaPobudzen^(__Lparam& (0+65280)),
      +                          b
  2547                           ;main.c: 809: if(wr!=0)
  2548  002046  51A4               	movf	?a_KolejkaPobudzen^(__Lparam& (0+65280)),w
  2549                           ;main.c: 810: {
  2550  002048  0103               	movlb	_M shr (0+8)
  2551  00204A  E005               	bz	L23
  2552  00204C  8906               	bsf	_M& (0+255),4,b
  2553                           ;main.c: 812: M._pob_CO=0;
  2554  00204E  9B06               	bcf	_M& (0+255),5,b
  2555                           ;main.c: 813: M._pob_DzCO=0;
  2556  002050  9D06               	bcf	_M& (0+255),6,b
  2557                           ;main.c: 814: M._pob_DzCW=0;
  2558  002052  9F06               	bcf	_M& (0+255),7,b
  2559                           ;main.c: 815: }
  2560  002054  0012               	return	
  2561                           ;main.c: 816: else
  2562  002056                     L23:
  2563  002056  9906               	bcf	_M& (0+255),4,b
  2564                           ;main.c: 820: if(RdPrt(12)&&(PFN.poz==3))
  2565  002058  0E0C               	movlw	12
  2566  00205A  EC1C  F07A         	call	_RdPrt
  2567  00205E  E30A               	bnc	l139
  2568  002060  0100               	movlb	(_PFN+1) shr (0+8)
  2569  002062  5168               	movf	(_PFN+1)& (0+255),w,b
  2570  002064  0A03               	xorlw	3
  2571  002066  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2572                           ;main.c: 821: {
  2573  002068  0103               	movlb	_M shr (0+8)
  2574  00206A  E105               	bnz	L24
  2575  00206C  8B06               	bsf	_M& (0+255),5,b
  2576                           ;main.c: 823: M._pob_DzCO=0;
  2577  00206E  9D06               	bcf	_M& (0+255),6,b
  2578                           ;main.c: 824: M._pob_DzCW=0;
  2579  002070  9F06               	bcf	_M& (0+255),7,b
  2580                           ;main.c: 825: }
  2581  002072  0012               	return	
  2582  002074                     l139:
  2583                           ;main.c: 826: else
  2584  002074  0103               	movlb	_M shr (0+8)
  2585  002076                     L24:
  2586  002076  9B06               	bcf	_M& (0+255),5,b
  2587                           ;main.c: 830: if(RdPrt(9))
  2588  002078  0E09               	movlw	9
  2589  00207A  EC1C  F07A         	call	_RdPrt
  2590                           ;main.c: 831: {
  2591  00207E  0103               	movlb	_M shr (0+8)
  2592  002080  E303               	bnc	L25
  2593  002082  8D06               	bsf	_M& (0+255),6,b
  2594                           ;main.c: 833: M._pob_DzCW=0;
  2595  002084  9F06               	bcf	_M& (0+255),7,b
  2596                           ;main.c: 834: }
  2597  002086  0012               	return	
  2598                           ;main.c: 835: else
  2599  002088                     L25:
  2600  002088  9D06               	bcf	_M& (0+255),6,b
  2601                           ;main.c: 838: if(DtKNF.tpkt==0)
  2602  00208A  EE02  F0BC         	lfsr	0,_DtKNF+14
  2603  00208E  50EF               	movf	indf0,w,c
  2604  002090  E109               	bnz	l143
  2605                           ;main.c: 839: {
  2606  002092  0E0A               	movlw	10
  2607  002094  EC1C  F07A         	call	_RdPrt
  2608  002098  0103               	movlb	_M shr (0+8)
  2609  00209A  E302               	bnc	L26
  2610  00209C  8F06               	bsf	_M& (0+255),7,b
  2611  00209E  0012               	return	
  2612                           ;main.c: 842: else M._pob_DzCW=0;
  2613  0020A0                     L26:
  2614  0020A0  9F06               	bcf	_M& (0+255),7,b
  2615                           ;main.c: 843: }
  2616  0020A2  0012               	return	
  2617  0020A4                     l143:
  2618                           ;main.c: 844: else M._pob_DzCW=0;
  2619  0020A4  0103               	movlb	_M shr (0+8)
  2620  0020A6  9F06               	bcf	_M& (0+255),7,b
  2621                           ;main.c: 845: }
  2622  0020A8  0012               	return	
  2623  0020AA                     __end_of_KolejkaPobudzen:
  2624                           ;main.c: 855: void DecyzjaAntyLeg(void)
  2625                           ;main.c: 856: {
  2626  0020AA                     _DecyzjaAntyLeg:
  2627  000000                     
  2628                           ;main.c: 952: if(DtKNF.tpkt==0)
  2629  0020AA  EE02  F0BC         	lfsr	0,_DtKNF+14
  2630  0020AE  50EF               	movf	indf0,w,c
  2631  0020B0  E001 D087          	bnz	l148
  2632                           ;main.c: 953: {
  2633  0020B4  0103               	movlb	(_M+2) shr (0+8)
  2634  0020B6  AF08               	btfss	(_M+2)& (0+255),7,b
  2635  0020B8  D02D               	goto	l149
  2636                           ;main.c: 957: {
  2637  0020BA  EE02  F0C7         	lfsr	0,_DtKNF+25
  2638  0020BE  50EF               	movf	indf0,w,c
  2639  0020C0  E005               	bz	l150
  2640                           ;main.c: 959: {
  2641  0020C2  0E01               	movlw	1
  2642  0020C4  ECA5  F07E         	call	_StartRTG
  2643                           ;main.c: 961: M.LICZNIK_ANL=0;
  2644  0020C8  0103               	movlb	(_M+11) shr (0+8)
  2645  0020CA  6B11               	clrf	(_M+11)& (0+255),b
  2646  0020CC                     l150:
  2647                           ;main.c: 962: }
  2648  0020CC  0103               	movlb	(_M+3) shr (0+8)
  2649  0020CE  B309               	btfsc	(_M+3)& (0+255),1,b
  2650  0020D0  D002               	goto	u1980
  2651  0020D2  AD08               	btfss	(_M+2)& (0+255),6,b
  2652  0020D4  D003               	goto	l151
  2653  0020D6                     u1980:
  2654                           ;main.c: 964: {
  2655  0020D6  0103               	movlb	(_M+2) shr (0+8)
  2656  0020D8  9F08               	bcf	(_M+2)& (0+255),7,b
  2657                           ;main.c: 966: return;
  2658  0020DA  0012               	return	
  2659  0020DC                     l151:
  2660                           ;main.c: 967: }
  2661  0020DC  0100               	movlb	(_PFN+1) shr (0+8)
  2662  0020DE  5168               	movf	(_PFN+1)& (0+255),w,b
  2663  0020E0  0A02               	xorlw	2
  2664  0020E2  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2665  0020E4  E007               	bz	l152
  2666  0020E6  5168               	movf	(_PFN+1)& (0+255),w,b
  2667  0020E8  0A03               	xorlw	3
  2668  0020EA  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2669  0020EC  E003               	bz	l152
  2670                           ;main.c: 970: {
  2671  0020EE  0103               	movlb	(_M+2) shr (0+8)
  2672  0020F0  9F08               	bcf	(_M+2)& (0+255),7,b
  2673                           ;main.c: 972: return;
  2674  0020F2  0012               	return	
  2675  0020F4                     l152:
  2676                           ;main.c: 973: }
  2677  0020F4  0E03               	movlw	3
  2678  0020F6  EC87  F07E         	call	_RTM
  2679  0020FA  6E00               	movwf	btemp,c
  2680  0020FC  0E3C               	movlw	60
  2681  0020FE  5C00               	subwf	btemp,w,c
  2682  002100  E303               	bnc	l153
  2683                           ;main.c: 976: {
  2684  002102  0103               	movlb	(_M+2) shr (0+8)
  2685  002104  9F08               	bcf	(_M+2)& (0+255),7,b
  2686                           ;main.c: 978: return;
  2687  002106  0012               	return	
  2688  002108                     l153:
  2689                           ;main.c: 979: }
  2690  002108  0100               	movlb	_PFN shr (0+8)
  2691  00210A  AB67               	btfss	_PFN& (0+255),5,b
  2692  00210C  D003               	goto	l149
  2693                           ;main.c: 983: {
  2694  00210E  0103               	movlb	(_M+2) shr (0+8)
  2695  002110  9F08               	bcf	(_M+2)& (0+255),7,b
  2696                           ;main.c: 985: return;
  2697  002112  0012               	return	
  2698  002114                     l149:
  2699                           ;main.c: 986: }
  2700  002114  0103               	movlb	(_M+2) shr (0+8)
  2701  002116  BF08               	btfsc	(_M+2)& (0+255),7,b
  2702  002118  D04E               	goto	l155
  2703                           ;main.c: 991: {
  2704  00211A  A309               	btfss	(_M+3)& (0+255),1,b
  2705  00211C  BD08               	btfsc	(_M+2)& (0+255),6,b
  2706  00211E  0012               	return	
  2707                           ;main.c: 993: {
  2708                           ;main.c: 995: }
  2709  002120  EE02  F0C7         	lfsr	0,_DtKNF+25
  2710  002124  50EF               	movf	indf0,w,c
  2711  002126  E027               	bz	l157
  2712                           ;main.c: 999: {
  2713  002128  0E01               	movlw	1
  2714  00212A  ECBD  F07E         	call	_RTG
  2715  00212E  6E00               	movwf	btemp,c
  2716  002130  0E01               	movlw	1
  2717  002132  5C00               	subwf	btemp,w,c
  2718  002134  E320               	bnc	l157
  2719                           ;main.c: 1001: {
  2720  002136  0E01               	movlw	1
  2721  002138  ECA5  F07E         	call	_StartRTG
  2722                           ;main.c: 1003: M.LICZNIK_ANL++;
  2723  00213C  0103               	movlb	(_M+11) shr (0+8)
  2724  00213E  2B11               	incf	(_M+11)& (0+255),f,b
  2725                           ;main.c: 1004: if(M.LICZNIK_ANL>=168)
  2726  002140  0EA7               	movlw	-89
  2727  002142  6511               	cpfsgt	(_M+11)& (0+255),b
  2728  002144  D010               	goto	l159
  2729                           ;main.c: 1005: {
  2730  002146  6B11               	clrf	(_M+11)& (0+255),b
  2731                           ;main.c: 1007: if((PFN.poz==2)||(PFN.poz==3)) M.
      +                          _AKTYWNE_AL=1;
  2732  002148  0100               	movlb	(_PFN+1) shr (0+8)
  2733  00214A  5168               	movf	(_PFN+1)& (0+255),w,b
  2734  00214C  0A02               	xorlw	2
  2735  00214E  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2736  002150  E004               	bz	u2130
  2737  002152  5168               	movf	(_PFN+1)& (0+255),w,b
  2738  002154  0A03               	xorlw	3
  2739  002156  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2740  002158  E102               	bnz	l160
  2741  00215A                     u2130:
  2742  00215A  0103               	movlb	(_M+2) shr (0+8)
  2743  00215C  8F08               	bsf	(_M+2)& (0+255),7,b
  2744  00215E                     l160:
  2745                           ;main.c: 1008: StartRTM(3);
  2746  00215E  0E03               	movlw	3
  2747  002160  EC6F  F07E         	call	_StartRTM
  2748  002164  D021               	goto	L36
  2749                           ;main.c: 1009: eeprom_write(0x00C7,0);
  2750                           ;main.c: 1010: return;
  2751  002166                     l159:
  2752                           ;main.c: 1012: else
  2753  002166  0EC7               	movlw	199
  2754  002168  0100               	movlb	__Lparam shr (0+8)
  2755  00216A  6FB7               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2756  00216C  6BB8               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2757  00216E  C311  F0B9         	movff	_M+11,?_eeprom_write+2
  2758  002172  EC5C  F006         	call	_eeprom_write	;wreg free
  2759  002176                     l157:
  2760                           ;main.c: 1015: }
  2761  002176  0100               	movlb	(_PFN+1) shr (0+8)
  2762  002178  5168               	movf	(_PFN+1)& (0+255),w,b
  2763  00217A  0A02               	xorlw	2
  2764  00217C  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2765  00217E  E005               	bz	l162
  2766  002180  5168               	movf	(_PFN+1)& (0+255),w,b
  2767  002182  0A03               	xorlw	3
  2768  002184  1169               	iorwf	(_PFN+2)& (0+255),w,b
  2769  002186  A4D8               	btfss	status,2,c
  2770  002188  0012               	return	
  2771                           ;main.c: 1020: {
  2772  00218A                     l162:
  2773                           ;main.c: 1022: }
  2774  00218A  0E02               	movlw	2
  2775  00218C  0100               	movlb	__Lparam shr (0+8)
  2776  00218E  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  2777  002190  C37B  FFE8         	movff	_RSDT1+78,wreg
  2778  002194  ECB9  F003         	call	_GetBit2
  2779  002198  A0D8               	btfss	status,0,c
  2780  00219A  0012               	return	
  2781                           ;main.c: 1026: {
  2782  00219C  0103               	movlb	(_M+11) shr (0+8)
  2783  00219E  6B11               	clrf	(_M+11)& (0+255),b
  2784                           ;main.c: 1028: M._AKTYWNE_AL=1;
  2785  0021A0  8F08               	bsf	(_M+2)& (0+255),7,b
  2786                           ;main.c: 1029: StartRTM(3);
  2787  0021A2  0E03               	movlw	3
  2788  0021A4  EC6F  F07E         	call	_StartRTM
  2789  0021A8                     L36:
  2790                           ;main.c: 1030: eeprom_write(0x00C7,0);
  2791  0021A8  0EC7               	movlw	199
  2792  0021AA  0100               	movlb	__Lparam shr (0+8)
  2793  0021AC  6FB7               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  2794  0021AE  6BB8               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  2795  0021B0  6BB9               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  2796  0021B2  EF5C  F006         	goto	_eeprom_write	;wreg free
  2797                           ;main.c: 1031: }
  2798  0021B6                     l155:
  2799                           ;main.c: 1033: else
  2800  0021B6  0E01               	movlw	1
  2801  0021B8  ECA5  F07E         	call	_StartRTG
  2802                           ;main.c: 1036: M.LICZNIK_ANL=0;
  2803  0021BC  0103               	movlb	(_M+11) shr (0+8)
  2804  0021BE  6B11               	clrf	(_M+11)& (0+255),b
  2805                           ;main.c: 1037: }
  2806  0021C0  0012               	return	
  2807  0021C2                     l148:
  2808                           ;main.c: 1039: else M._AKTYWNE_AL=0;
  2809  0021C2  0103               	movlb	(_M+2) shr (0+8)
  2810  0021C4  9F08               	bcf	(_M+2)& (0+255),7,b
  2811                           ;main.c: 1041: }
  2812  0021C6  0012               	return	
  2813  0021C8                     __end_of_DecyzjaAntyLeg:
  2814                           ;main.c: 1048: void DecERR(void)
  2815                           ;main.c: 1049: {
  2816  0021C8                     _DecERR:
  2817  000000                     
  2818                           ;main.c: 1050: unsigned char KnfDisErr=0;
  2819  0021C8  6AD9               	clrf	fsr2l,c
  2820                           ;main.c: 1051: unsigned char w;
  2821  0021CA  0103               	movlb	(_M+3) shr (0+8)
  2822  0021CC  A309               	btfss	(_M+3)& (0+255),1,b
  2823  0021CE  D00F               	goto	u2240
  2824  0021D0  C2B0  F000         	movff	_DtKNF+2,btemp
  2825  0021D4  0400               	decf	btemp,w,c
  2826  0021D6  E009               	bz	u2241
  2827  0021D8  C2B0  FFE8         	movff	_DtKNF+2,wreg
  2828  0021DC  0A02               	xorlw	2
  2829  0021DE  E107               	bnz	u2240
  2830  0021E0  0E03               	movlw	3
  2831  0021E2  0102               	movlb	(_DtKNF+1) shr (0+8)
  2832  0021E4  61AF               	cpfslt	(_DtKNF+1)& (0+255),b
  2833  0021E6  D001               	goto	u2241
  2834  0021E8  D002               	goto	u2240
  2835  0021EA                     u2241:
  2836  0021EA  0E01               	movlw	1
  2837  0021EC  D001               	goto	u2250
  2838  0021EE                     u2240:
  2839  0021EE  0E00               	movlw	0
  2840  0021F0                     u2250:
  2841  0021F0  0100               	movlb	__Lparam shr (0+8)
  2842  0021F2  6FA5               	movwf	(?a_DecERR+1)^(__Lparam& (0+65280)),b
  2843                           ;main.c: 1060: if(!RdPrt(4))
  2844  0021F4  0E04               	movlw	4
  2845  0021F6  EC1C  F07A         	call	_RdPrt
  2846                           ;main.c: 1061: {
  2847  0021FA  0E02               	movlw	2
  2848  0021FC  E20D               	bc	L27
  2849  0021FE  CFE8 F313          	movff	wreg,_M+13
  2850                           ;main.c: 1063: PrintErr(0x02,1);
  2851  002202  0E01               	movlw	1
  2852  002204  0100               	movlb	__Lparam shr (0+8)
  2853  002206  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2854  002208  0E02               	movlw	2
  2855  00220A  EC36  F003         	call	_PrintErr
  2856                           ;main.c: 1064: ToWriteESTAT();
  2857  00220E  EC00  F07E         	call	_ToWriteESTAT	;wreg free
  2858                           ;main.c: 1065: ErrPTG();
  2859  002212  ECEE  F01D         	call	_ErrPTG	;wreg free
  2860                           ;main.c: 1066: }
  2861  002216  0E02               	movlw	2
  2862  002218                     L27:
  2863  002218  EC1C  F07A         	call	_RdPrt
  2864  00221C  E20D               	bc	l168
  2865                           ;main.c: 1069: {
  2866  00221E  0E03               	movlw	3
  2867  002220  CFE8 F313          	movff	wreg,_M+13
  2868                           ;main.c: 1071: PrintErr(0x03,1);
  2869  002224  0E01               	movlw	1
  2870  002226  0100               	movlb	__Lparam shr (0+8)
  2871  002228  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2872  00222A  0E03               	movlw	3
  2873  00222C  EC36  F003         	call	_PrintErr
  2874                           ;main.c: 1072: ToWriteESTAT();
  2875  002230  EC00  F07E         	call	_ToWriteESTAT	;wreg free
  2876                           ;main.c: 1073: ErrPTG();
  2877  002234  ECEE  F01D         	call	_ErrPTG	;wreg free
  2878  002238                     l168:
  2879                           ;main.c: 1074: }
  2880  002238  0103               	movlb	(_M+2) shr (0+8)
  2881  00223A  A108               	btfss	(_M+2)& (0+255),0,b
  2882  00223C  D00F               	goto	l169
  2883                           ;main.c: 1077: {
  2884  00223E  6B13               	clrf	(_M+13)& (0+255),b
  2885                           ;main.c: 1079: if(KnfDisErr) EndErr();
  2886  002240  0100               	movlb	__Lparam shr (0+8)
  2887  002242  51A5               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2888  002244  E003               	bz	l170
  2889  002246  EC7E  F003         	call	_EndErr	;wreg free
  2890  00224A  D005               	goto	l171
  2891  00224C                     l170:
  2892                           ;main.c: 1080: else PrintErr(0x01,0);
  2893  00224C  0100               	movlb	__Lparam shr (0+8)
  2894  00224E  6BA9               	clrf	?_PrintErr^(__Lparam& (0+65280)),b
  2895  002250  0E01               	movlw	1
  2896  002252  EC36  F003         	call	_PrintErr
  2897  002256                     l171:
  2898                           ;main.c: 1081: M._RUSZ_NTC_CO=0;
  2899  002256  0103               	movlb	(_M+3) shr (0+8)
  2900  002258  9709               	bcf	(_M+3)& (0+255),3,b
  2901  00225A  D02A               	goto	L4
  2902                           ;main.c: 1082: M._RUSZ_CISN=0;
  2903                           ;main.c: 1083: M._RUSZ_NCISN=0;
  2904                           ;main.c: 1084: M._RUSZ_NTC_CW=0;
  2905                           ;main.c: 1085: }
  2906  00225C                     l169:
  2907                           ;main.c: 1086: else
  2908  00225C  0E12               	movlw	18
  2909  00225E  EC1C  F07A         	call	_RdPrt
  2910  002262  E312               	bnc	l173
  2911                           ;main.c: 1089: {
  2912  002264  0E04               	movlw	4
  2913  002266  CFE8 F313          	movff	wreg,_M+13
  2914                           ;main.c: 1091: if(KnfDisErr) EndErr();
  2915  00226A  0100               	movlb	__Lparam shr (0+8)
  2916  00226C  51A5               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2917  00226E  E003               	bz	l174
  2918  002270  EC7E  F003         	call	_EndErr	;wreg free
  2919  002274  D006               	goto	l175
  2920  002276                     l174:
  2921                           ;main.c: 1092: else PrintErr(0x04,1);
  2922  002276  0E01               	movlw	1
  2923  002278  0100               	movlb	__Lparam shr (0+8)
  2924  00227A  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2925  00227C  0E04               	movlw	4
  2926  00227E  EC36  F003         	call	_PrintErr
  2927  002282                     l175:
  2928                           ;main.c: 1093: M._RUSZ_NTC_CO=1;
  2929  002282  0103               	movlb	(_M+3) shr (0+8)
  2930  002284  8709               	bsf	(_M+3)& (0+255),3,b
  2931  002286  D014               	goto	L4
  2932                           ;main.c: 1094: M._RUSZ_CISN=0;
  2933                           ;main.c: 1095: M._RUSZ_NCISN=0;
  2934                           ;main.c: 1096: M._RUSZ_NTC_CW=0;
  2935                           ;main.c: 1097: }
  2936  002288                     l173:
  2937                           ;main.c: 1098: else
  2938  002288  0103               	movlb	(_M+3) shr (0+8)
  2939  00228A  9709               	bcf	(_M+3)& (0+255),3,b
  2940                           ;main.c: 1102: if(M._RUSZ_POMPE)
  2941  00228C  A508               	btfss	(_M+2)& (0+255),2,b
  2942  00228E  D013               	goto	l177
  2943                           ;main.c: 1103: {
  2944  002290  6B13               	clrf	(_M+13)& (0+255),b
  2945                           ;main.c: 1105: if(KnfDisErr) EndErr();
  2946  002292  0100               	movlb	__Lparam shr (0+8)
  2947  002294  51A5               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2948  002296  E003               	bz	l178
  2949  002298  EC7E  F003         	call	_EndErr	;wreg free
  2950  00229C  D008               	goto	l179
  2951  00229E                     l178:
  2952                           ;main.c: 1106: else
  2953  00229E  0103               	movlb	(_M+5) shr (0+8)
  2954  0022A0  A50B               	btfss	(_M+5)& (0+255),2,b
  2955  0022A2  D005               	goto	l179
  2956  0022A4  0100               	movlb	__Lparam shr (0+8)
  2957  0022A6  6BA9               	clrf	?_PrintErr^(__Lparam& (0+65280)),b
  2958  0022A8  0E05               	movlw	5
  2959  0022AA  EC36  F003         	call	_PrintErr
  2960  0022AE                     l179:
  2961                           ;main.c: 1109: }
  2962  0022AE  0103               	movlb	(_M+3) shr (0+8)
  2963  0022B0                     L4:
  2964  0022B0  9F09               	bcf	(_M+3)& (0+255),7,b
  2965                           ;main.c: 1111: M._RUSZ_NCISN=0;
  2966  0022B2  910A               	bcf	(_M+4)& (0+255),0,b
  2967  0022B4  D030               	goto	L6
  2968                           ;main.c: 1112: M._RUSZ_NTC_CW=0;
  2969                           ;main.c: 1113: }
  2970  0022B6                     l177:
  2971                           ;main.c: 1114: else
  2972  0022B6  0E0E               	movlw	14
  2973  0022B8  EC1C  F07A         	call	_RdPrt
  2974  0022BC  E313               	bnc	l182
  2975                           ;main.c: 1118: {
  2976  0022BE  0E08               	movlw	8
  2977  0022C0  CFE8 F313          	movff	wreg,_M+13
  2978                           ;main.c: 1120: if(KnfDisErr) EndErr();
  2979  0022C4  0100               	movlb	__Lparam shr (0+8)
  2980  0022C6  51A5               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  2981  0022C8  E003               	bz	l183
  2982  0022CA  EC7E  F003         	call	_EndErr	;wreg free
  2983  0022CE  D006               	goto	l184
  2984  0022D0                     l183:
  2985                           ;main.c: 1121: else PrintErr(0x08,1);
  2986  0022D0  0E01               	movlw	1
  2987  0022D2  0100               	movlb	__Lparam shr (0+8)
  2988  0022D4  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  2989  0022D6  0E08               	movlw	8
  2990  0022D8  EC36  F003         	call	_PrintErr
  2991  0022DC                     l184:
  2992                           ;main.c: 1122: M._RUSZ_NCISN=1;
  2993  0022DC  0103               	movlb	(_M+4) shr (0+8)
  2994  0022DE  810A               	bsf	(_M+4)& (0+255),0,b
  2995                           ;main.c: 1123: M._RUSZ_CISN=0;
  2996  0022E0  9F09               	bcf	(_M+3)& (0+255),7,b
  2997  0022E2  D019               	goto	L6
  2998                           ;main.c: 1124: M._RUSZ_NTC_CW=0;
  2999                           ;main.c: 1125: }
  3000  0022E4                     l182:
  3001                           ;main.c: 1126: else
  3002  0022E4  0103               	movlb	(_M+4) shr (0+8)
  3003  0022E6  910A               	bcf	(_M+4)& (0+255),0,b
  3004                           ;main.c: 1130: if(!RdPrt(15))
  3005  0022E8  0E0F               	movlw	15
  3006  0022EA  EC1C  F07A         	call	_RdPrt
  3007  0022EE  E215               	bc	l186
  3008                           ;main.c: 1131: {
  3009  0022F0  0E09               	movlw	9
  3010  0022F2  CFE8 F313          	movff	wreg,_M+13
  3011                           ;main.c: 1134: if(KnfDisErr) EndErr();
  3012  0022F6  0100               	movlb	__Lparam shr (0+8)
  3013  0022F8  51A5               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  3014  0022FA  E003               	bz	l187
  3015  0022FC  EC7E  F003         	call	_EndErr	;wreg free
  3016  002300  D008               	goto	l188
  3017  002302                     l187:
  3018                           ;main.c: 1135: else PrintErrCs(0x09,DtCS.CS,1);
  3019  002302  C062  F0A6         	movff	_DtCS+3,?_PrintErrCs
  3020  002306  0E01               	movlw	1
  3021  002308  0100               	movlb	__Lparam shr (0+8)
  3022  00230A  6FA7               	movwf	(?_PrintErrCs+1)^(__Lparam& (0+65280)),b
  3023  00230C  0E09               	movlw	9
  3024  00230E  EC58  F003         	call	_PrintErrCs
  3025  002312                     l188:
  3026                           ;main.c: 1136: M._RUSZ_CISN=1;
  3027  002312  0103               	movlb	(_M+3) shr (0+8)
  3028  002314  8F09               	bsf	(_M+3)& (0+255),7,b
  3029  002316                     L6:
  3030                           ;main.c: 1137: M._RUSZ_NTC_CW=0;
  3031  002316  9909               	bcf	(_M+3)& (0+255),4,b
  3032                           ;main.c: 1138: }
  3033  002318  D087               	goto	l172
  3034  00231A                     l186:
  3035                           ;main.c: 1139: else
  3036  00231A  0103               	movlb	(_M+3) shr (0+8)
  3037  00231C  9F09               	bcf	(_M+3)& (0+255),7,b
  3038                           ;main.c: 1142: if(DtKNF.tpkt!=0)
  3039  00231E  EE02  F0BC         	lfsr	0,_DtKNF+14
  3040  002322  50EF               	movf	indf0,w,c
  3041  002324  E017               	bz	l190
  3042                           ;main.c: 1143: {
  3043  002326  0100               	movlb	_DtCW shr (0+8)
  3044  002328  A16E               	btfss	_DtCW& (0+255),0,b
  3045  00232A  D005               	goto	u2420
  3046  00232C  0100               	movlb	(_PFN+1) shr (0+8)
  3047  00232E  5168               	movf	(_PFN+1)& (0+255),w,b
  3048  002330  0A02               	xorlw	2
  3049  002332  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3050  002334  E027               	bz	u2621
  3051  002336                     u2420:
  3052  002336  0100               	movlb	(_PFN+1) shr (0+8)
  3053  002338  5168               	movf	(_PFN+1)& (0+255),w,b
  3054  00233A  0A03               	xorlw	3
  3055  00233C  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3056  00233E  E138               	bnz	u2730
  3057  002340  0100               	movlb	_DtCW shr (0+8)
  3058  002342  A16E               	btfss	_DtCW& (0+255),0,b
  3059  002344  D035               	goto	u2730
  3060  002346  0103               	movlb	_M shr (0+8)
  3061  002348  A906               	btfss	_M& (0+255),4,b
  3062  00234A  B306               	btfsc	_M& (0+255),1,b
  3063  00234C  D01B               	goto	u2621
  3064  00234E  B706               	btfsc	_M& (0+255),3,b
  3065  002350  D019               	goto	u2621
  3066  002352  D02E               	goto	u2730
  3067                           ;main.c: 1145: }
  3068  002354                     l190:
  3069                           ;main.c: 1146: else
  3070  002354  EE02  F0D7         	lfsr	0,_DtKNF+41
  3071  002358  50EF               	movf	indf0,w,c
  3072  00235A  E116               	bnz	l192
  3073                           ;main.c: 1149: {
  3074  00235C  0100               	movlb	_DtCW shr (0+8)
  3075  00235E  A16E               	btfss	_DtCW& (0+255),0,b
  3076  002360  D005               	goto	u2570
  3077  002362  0100               	movlb	(_PFN+1) shr (0+8)
  3078  002364  5168               	movf	(_PFN+1)& (0+255),w,b
  3079  002366  0A02               	xorlw	2
  3080  002368  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3081  00236A  E00C               	bz	u2621
  3082  00236C                     u2570:
  3083  00236C  0100               	movlb	(_PFN+1) shr (0+8)
  3084  00236E  5168               	movf	(_PFN+1)& (0+255),w,b
  3085  002370  0A03               	xorlw	3
  3086  002372  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3087  002374  E11D               	bnz	u2730
  3088  002376  0100               	movlb	_DtCW shr (0+8)
  3089  002378  A16E               	btfss	_DtCW& (0+255),0,b
  3090  00237A  D01A               	goto	u2730
  3091  00237C  0E0B               	movlw	11
  3092  00237E  EC1C  F07A         	call	_RdPrt
  3093  002382  E316               	bnc	u2730
  3094  002384                     u2621:
  3095  002384  0E01               	movlw	1
  3096  002386  D015               	goto	u2740
  3097                           ;main.c: 1151: }
  3098  002388                     l192:
  3099                           ;main.c: 1152: else
  3100  002388  0100               	movlb	_DtCW shr (0+8)
  3101  00238A  A16E               	btfss	_DtCW& (0+255),0,b
  3102  00238C  D005               	goto	u2670
  3103  00238E  0100               	movlb	(_PFN+1) shr (0+8)
  3104  002390  5168               	movf	(_PFN+1)& (0+255),w,b
  3105  002392  0A02               	xorlw	2
  3106  002394  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3107  002396  E0F6               	bz	u2621
  3108  002398                     u2670:
  3109  002398  0100               	movlb	(_PFN+1) shr (0+8)
  3110  00239A  5168               	movf	(_PFN+1)& (0+255),w,b
  3111  00239C  0A03               	xorlw	3
  3112  00239E  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3113  0023A0  E107               	bnz	u2730
  3114  0023A2  0100               	movlb	_DtCW shr (0+8)
  3115  0023A4  A16E               	btfss	_DtCW& (0+255),0,b
  3116  0023A6  D004               	goto	u2730
  3117  0023A8  0E06               	movlw	6
  3118  0023AA  EC1C  F07A         	call	_RdPrt
  3119  0023AE  E2EA               	bc	u2621
  3120  0023B0                     u2730:
  3121  0023B0  0E00               	movlw	0
  3122  0023B2                     u2740:
  3123  0023B2  0100               	movlb	__Lparam shr (0+8)
  3124  0023B4  6FA4               	movwf	?a_DecERR^(__Lparam& (0+65280)),b
  3125                           ;main.c: 1155: }
  3126  0023B6  51A4               	movf	?a_DecERR^(__Lparam& (0+65280)),w
  3127  0023B8  E011               	bz	l194
  3128                           ;main.c: 1159: {
  3129  0023BA  0E0A               	movlw	10
  3130  0023BC  CFE8 F313          	movff	wreg,_M+13
  3131                           ;main.c: 1161: if(KnfDisErr) EndErr();
  3132  0023C0  51A5               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  3133  0023C2  E003               	bz	l195
  3134  0023C4  EC7E  F003         	call	_EndErr	;wreg free
  3135  0023C8  D006               	goto	l196
  3136  0023CA                     l195:
  3137                           ;main.c: 1162: else PrintErr(0x0A,1);
  3138  0023CA  0E01               	movlw	1
  3139  0023CC  0100               	movlb	__Lparam shr (0+8)
  3140  0023CE  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  3141  0023D0  0E0A               	movlw	10
  3142  0023D2  EC36  F003         	call	_PrintErr
  3143  0023D6                     l196:
  3144                           ;main.c: 1163: M._RUSZ_NTC_CW=1;
  3145  0023D6  0103               	movlb	(_M+3) shr (0+8)
  3146  0023D8  8909               	bsf	(_M+3)& (0+255),4,b
  3147                           ;main.c: 1164: }
  3148  0023DA  D026               	goto	l172
  3149  0023DC                     l194:
  3150                           ;main.c: 1165: else
  3151  0023DC  0103               	movlb	(_M+3) shr (0+8)
  3152  0023DE  9909               	bcf	(_M+3)& (0+255),4,b
  3153                           ;main.c: 1168: if(DtKNF.rdpm!=0)
  3154  0023E0  EE02  F0BE         	lfsr	0,_DtKNF+16
  3155  0023E4  50EF               	movf	indf0,w,c
  3156  0023E6  E01E               	bz	l198
  3157                           ;main.c: 1169: {
  3158  0023E8  0100               	movlb	(_PFN+1) shr (0+8)
  3159  0023EA  5168               	movf	(_PFN+1)& (0+255),w,b
  3160  0023EC  0A03               	xorlw	3
  3161  0023EE  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3162  0023F0  E119               	bnz	l198
  3163  0023F2  0103               	movlb	(_M+4) shr (0+8)
  3164  0023F4  B70A               	btfsc	(_M+4)& (0+255),3,b
  3165  0023F6  B10B               	btfsc	(_M+5)& (0+255),0,b
  3166  0023F8  D015               	goto	l198
  3167  0023FA  0100               	movlb	_DtIN shr (0+8)
  3168  0023FC  A190               	btfss	_DtIN& (0+255),0,b
  3169  0023FE  D012               	goto	l198
  3170                           ;main.c: 1171: {
  3171  002400  0E0E               	movlw	14
  3172  002402  CFE8 F313          	movff	wreg,_M+13
  3173                           ;main.c: 1173: if(KnfDisErr) EndErr();
  3174  002406  0100               	movlb	__Lparam shr (0+8)
  3175  002408  51A5               	movf	(?a_DecERR+1)^(__Lparam& (0+65280)),w
  3176  00240A  E003               	bz	l200
  3177  00240C  EC7E  F003         	call	_EndErr	;wreg free
  3178  002410  D006               	goto	l201
  3179  002412                     l200:
  3180                           ;main.c: 1174: else PrintErr(0x0E,1);
  3181  002412  0E01               	movlw	1
  3182  002414  0100               	movlb	__Lparam shr (0+8)
  3183  002416  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  3184  002418  0E0E               	movlw	14
  3185  00241A  EC36  F003         	call	_PrintErr
  3186  00241E                     l201:
  3187                           ;main.c: 1175: M._RUSZ_NTC_IN=1;
  3188  00241E  0103               	movlb	(_M+3) shr (0+8)
  3189  002420  8B09               	bsf	(_M+3)& (0+255),5,b
  3190                           ;main.c: 1176: }
  3191  002422  D002               	goto	l172
  3192                           ;main.c: 1177: else
  3193                           ;main.c: 1180: }
  3194  002424                     l198:
  3195                           ;main.c: 1182: else
  3196  002424  0103               	movlb	(_M+3) shr (0+8)
  3197  002426  9B09               	bcf	(_M+3)& (0+255),5,b
  3198  002428                     l172:
  3199                           ;main.c: 1185: }
  3200  002428  0103               	movlb	(_M+2) shr (0+8)
  3201  00242A  B108               	btfsc	(_M+2)& (0+255),0,b
  3202  00242C  D025               	goto	l204
  3203  00242E  0E05               	movlw	5
  3204  002430  EC1C  F07A         	call	_RdPrt
  3205  002434  E221               	bc	l204
  3206  002436  0103               	movlb	(_M+1) shr (0+8)
  3207  002438  A707               	btfss	(_M+1)& (0+255),3,b
  3208  00243A  A083               	btfss	3971,0,c	;volatile
  3209  00243C  D01D               	goto	l204
  3210                           ;main.c: 1196: {
  3211  00243E  0E02               	movlw	2
  3212  002440  EC1C  F07A         	call	_RdPrt
  3213  002444  E319               	bnc	l204
  3214  002446  0E04               	movlw	4
  3215  002448  EC1C  F07A         	call	_RdPrt
  3216  00244C  E315               	bnc	l204
  3217                           ;main.c: 1198: {
  3218  00244E  0103               	movlb	(_M+21) shr (0+8)
  3219  002450  6B1B               	clrf	(_M+21)& (0+255),b
  3220                           ;main.c: 1200: M._RUSZ_PLOMIEN=1;
  3221  002452  8108               	bsf	(_M+2)& (0+255),0,b
  3222                           ;main.c: 1201: M.LICZNIK_PL2++;
  3223  002454  2B10               	incf	(_M+10)& (0+255),f,b
  3224                           ;main.c: 1202: if(M.LICZNIK_PL2>=5)
  3225  002456  0E04               	movlw	4
  3226  002458  6510               	cpfsgt	(_M+10)& (0+255),b
  3227  00245A  D00E               	goto	l204
  3228                           ;main.c: 1203: {
  3229  00245C  6B10               	clrf	(_M+10)& (0+255),b
  3230                           ;main.c: 1205: M.ERR_BTY=0x0D;
  3231  00245E  0E0D               	movlw	13
  3232  002460  CFE8 F313          	movff	wreg,_M+13
  3233                           ;main.c: 1206: PrintErr(0x0D,1);
  3234  002464  0E01               	movlw	1
  3235  002466  0100               	movlb	__Lparam shr (0+8)
  3236  002468  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  3237  00246A  0E0D               	movlw	13
  3238  00246C  EC36  F003         	call	_PrintErr
  3239                           ;main.c: 1207: ToWriteESTAT();
  3240  002470  EC00  F07E         	call	_ToWriteESTAT	;wreg free
  3241                           ;main.c: 1208: ErrPTG();
  3242  002474  ECEE  F01D         	call	_ErrPTG	;wreg free
  3243  002478                     l204:
  3244                           ;main.c: 1209: }
  3245  002478  0103               	movlb	(_M+2) shr (0+8)
  3246  00247A  B108               	btfsc	(_M+2)& (0+255),0,b
  3247  00247C  0012               	return	
  3248                           ;main.c: 1217: if(!M._RUSZ_NTC_CO&&!M._RUSZ_NCIS
      +                          N&&!M._RUSZ_CISN)
  3249  00247E  A709               	btfss	(_M+3)& (0+255),3,b
  3250  002480  B10A               	btfsc	(_M+4)& (0+255),0,b
  3251  002482  0012               	return	
  3252  002484  0103               	movlb	(_M+3) shr (0+8)
  3253  002486  BF09               	btfsc	(_M+3)& (0+255),7,b
  3254  002488  0012               	return	
  3255                           ;main.c: 1218: if(!M._RUSZ_NTC_CW&&!M._RUSZ_NTC_
      +                          IN&&!M._RUSZ_POMPE)
  3256  00248A  A909               	btfss	(_M+3)& (0+255),4,b
  3257  00248C  BB09               	btfsc	(_M+3)& (0+255),5,b
  3258  00248E  0012               	return	
  3259  002490  0103               	movlb	(_M+2) shr (0+8)
  3260  002492  B508               	btfsc	(_M+2)& (0+255),2,b
  3261  002494  0012               	return	
  3262                           ;main.c: 1219: {
  3263  002496  0103               	movlb	(_M+13) shr (0+8)
  3264  002498  6B13               	clrf	(_M+13)& (0+255),b
  3265                           ;main.c: 1221: EndErr();
  3266  00249A  EF7E  F003         	goto	_EndErr	;wreg free
  3267                           ;main.c: 1222: }
  3268  00249E                     __end_of_DecERR:
  3269                           ;main.c: 1227: void DecSTR(void)
  3270                           ;main.c: 1228: {
  3271  00249E                     _DecSTR:
  3272  000000                     
  3273                           ;main.c: 1229: volatile unsigned char st;
  3274  00249E  0E09               	movlw	9
  3275  0024A0  EC63  F07E         	call	_RTS
  3276  0024A4  6E00               	movwf	btemp,c
  3277  0024A6  0E03               	movlw	3
  3278  0024A8  5C00               	subwf	btemp,w,c
  3279  0024AA  E303               	bnc	l211
  3280                           ;main.c: 1234: {
  3281  0024AC  0103               	movlb	(_M+4) shr (0+8)
  3282  0024AE  950A               	bcf	(_M+4)& (0+255),2,b
  3283                           ;main.c: 1236: M._RS_START=0;
  3284  0024B0  930A               	bcf	(_M+4)& (0+255),1,b
  3285  0024B2                     l211:
  3286                           ;main.c: 1237: }
  3287  0024B2  EC42  F04C         	call	_SetTrbPGD	;wreg free
  3288                           ;main.c: 1243: if(!M._ROZRUCH&&RD0&&DtCO._ldDCO)
      +                           M._RUN_MNMOD=1;
  3289  0024B6  0103               	movlb	(_M+1) shr (0+8)
  3290  0024B8  A707               	btfss	(_M+1)& (0+255),3,b
  3291  0024BA  A083               	btfss	3971,0,c	;volatile
  3292  0024BC  D006               	goto	l212
  3293  0024BE  0100               	movlb	(_DtCO+1) shr (0+8)
  3294  0024C0  A97E               	btfss	(_DtCO+1)& (0+255),4,b
  3295  0024C2  D003               	goto	l212
  3296  0024C4  0103               	movlb	(_M+4) shr (0+8)
  3297  0024C6  8B0A               	bsf	(_M+4)& (0+255),5,b
  3298  0024C8  D002               	goto	l213
  3299  0024CA                     l212:
  3300                           ;main.c: 1244: else M._RUN_MNMOD=0;
  3301  0024CA  0103               	movlb	(_M+4) shr (0+8)
  3302  0024CC  9B0A               	bcf	(_M+4)& (0+255),5,b
  3303  0024CE                     l213:
  3304                           ;main.c: 1247: if((DtKNF.tpkt==0)&&(DtCW._offKCW
      +                          ==1))
  3305  0024CE  EE02  F0BC         	lfsr	0,_DtKNF+14
  3306  0024D2  50EF               	movf	indf0,w,c
  3307  0024D4  E10A               	bnz	l214
  3308  0024D6  0100               	movlb	(_DtCW+1) shr (0+8)
  3309  0024D8  A76F               	btfss	(_DtCW+1)& (0+255),3,b
  3310  0024DA  D007               	goto	l214
  3311                           ;main.c: 1248: {
  3312  0024DC  0103               	movlb	(_M+1) shr (0+8)
  3313  0024DE  A507               	btfss	(_M+1)& (0+255),2,b
  3314                           ;main.c: 1250: {
  3315  0024E0  BB07               	btfsc	(_M+1)& (0+255),5,b
  3316  0024E2  D0F2               	goto	l217
  3317  0024E4  AF0D               	btfss	(_M+7)& (0+255),7,b
  3318  0024E6  DA75               	call	_ToObiegCO	;wreg free
  3319                           ;main.c: 1252: }
  3320  0024E8  D0EF               	goto	l217
  3321  0024EA                     l214:
  3322                           ;main.c: 1254: else
  3323  0024EA  0103               	movlb	(_M+1) shr (0+8)
  3324  0024EC  B507               	btfsc	(_M+1)& (0+255),2,b
  3325  0024EE  D0EC               	goto	l217
  3326                           ;main.c: 1257: {
  3327  0024F0  A70A               	btfss	(_M+4)& (0+255),3,b
  3328  0024F2  D00B               	goto	l219
  3329  0024F4  A306               	btfss	_M& (0+255),1,b
  3330  0024F6  B906               	btfsc	_M& (0+255),4,b
  3331  0024F8  D006               	goto	u3300
  3332  0024FA  0103               	movlb	_M shr (0+8)
  3333  0024FC  BF06               	btfsc	_M& (0+255),7,b
  3334  0024FE  D003               	goto	u3300
  3335  002500  0103               	movlb	_M shr (0+8)
  3336  002502  A706               	btfss	_M& (0+255),3,b
  3337  002504  D002               	goto	l219
  3338  002506                     u3300:
  3339  002506  DA7F               	call	_ToObiegCW	;wreg free
  3340  002508  D0DF               	goto	l217
  3341  00250A                     l219:
  3342                           ;main.c: 1260: else
  3343  00250A  0103               	movlb	(_M+4) shr (0+8)
  3344  00250C  B70A               	btfsc	(_M+4)& (0+255),3,b
  3345  00250E  B908               	btfsc	(_M+2)& (0+255),4,b
  3346  002510  D00B               	goto	l221
  3347  002512  0103               	movlb	_M shr (0+8)
  3348  002514  A106               	btfss	_M& (0+255),0,b
  3349  002516  B506               	btfsc	_M& (0+255),2,b
  3350  002518  D005               	goto	u3410
  3351  00251A  BB06               	btfsc	_M& (0+255),5,b
  3352  00251C  D003               	goto	u3410
  3353  00251E  0103               	movlb	_M shr (0+8)
  3354  002520  AD06               	btfss	_M& (0+255),6,b
  3355  002522  D002               	goto	l221
  3356  002524                     u3410:
  3357  002524  DA56               	call	_ToObiegCO	;wreg free
  3358  002526  D0D0               	goto	l217
  3359  002528                     l221:
  3360                           ;main.c: 1263: else
  3361  002528  0103               	movlb	(_M+4) shr (0+8)
  3362  00252A  A70A               	btfss	(_M+4)& (0+255),3,b
  3363  00252C  A307               	btfss	(_M+1)& (0+255),1,b
  3364  00252E  D012               	goto	l223
  3365  002530  0103               	movlb	(_M+7) shr (0+8)
  3366  002532  BF0D               	btfsc	(_M+7)& (0+255),7,b
  3367  002534  D00F               	goto	l223
  3368  002536  C2BC  FFE8         	movff	_DtKNF+14,wreg
  3369  00253A  0A03               	xorlw	3
  3370  00253C  E10B               	bnz	l223
  3371  00253E  0100               	movlb	_DtCO shr (0+8)
  3372  002540  B17D               	btfsc	_DtCO& (0+255),0,b
  3373  002542  D008               	goto	l223
  3374  002544  0100               	movlb	(_DtCO+1) shr (0+8)
  3375  002546  B17E               	btfsc	(_DtCO+1)& (0+255),0,b
  3376  002548  D005               	goto	l223
  3377  00254A  0103               	movlb	_M shr (0+8)
  3378  00254C  A906               	btfss	_M& (0+255),4,b
  3379  00254E  D002               	goto	l223
  3380  002550  DA5A               	call	_ToObiegCW	;wreg free
  3381  002552  D0BA               	goto	l217
  3382  002554                     l223:
  3383                           ;main.c: 1266: else
  3384  002554  0103               	movlb	(_M+4) shr (0+8)
  3385  002556  A70A               	btfss	(_M+4)& (0+255),3,b
  3386  002558  A307               	btfss	(_M+1)& (0+255),1,b
  3387  00255A  D01B               	goto	l225
  3388  00255C  0103               	movlb	(_M+7) shr (0+8)
  3389  00255E  BF0D               	btfsc	(_M+7)& (0+255),7,b
  3390  002560  D018               	goto	l225
  3391  002562  EE02  F0BC         	lfsr	0,_DtKNF+14
  3392  002566  50EF               	movf	indf0,w,c
  3393  002568  E114               	bnz	l225
  3394  00256A  0100               	movlb	_DtCO shr (0+8)
  3395  00256C  B17D               	btfsc	_DtCO& (0+255),0,b
  3396  00256E  D011               	goto	l225
  3397  002570  0100               	movlb	(_DtCO+1) shr (0+8)
  3398  002572  B17E               	btfsc	(_DtCO+1)& (0+255),0,b
  3399  002574  D00E               	goto	l225
  3400  002576  0100               	movlb	(_PFN+1) shr (0+8)
  3401  002578  5168               	movf	(_PFN+1)& (0+255),w,b
  3402  00257A  0A02               	xorlw	2
  3403  00257C  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3404  00257E  E004               	bz	u3690
  3405  002580  5168               	movf	(_PFN+1)& (0+255),w,b
  3406  002582  0A03               	xorlw	3
  3407  002584  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3408  002586  E105               	bnz	l225
  3409  002588                     u3690:
  3410  002588  0100               	movlb	_DtCW shr (0+8)
  3411  00258A  A76E               	btfss	_DtCW& (0+255),3,b
  3412  00258C  D002               	goto	l225
  3413  00258E  DA3B               	call	_ToObiegCW	;wreg free
  3414  002590  D09B               	goto	l217
  3415  002592                     l225:
  3416                           ;main.c: 1268: else
  3417  002592  0103               	movlb	(_M+4) shr (0+8)
  3418  002594  A70A               	btfss	(_M+4)& (0+255),3,b
  3419  002596  B908               	btfsc	(_M+2)& (0+255),4,b
  3420  002598  D051               	goto	l227
  3421  00259A  0103               	movlb	(_M+7) shr (0+8)
  3422  00259C  BF0D               	btfsc	(_M+7)& (0+255),7,b
  3423  00259E  D04E               	goto	l227
  3424  0025A0  0E0D               	movlw	13
  3425  0025A2  EC1C  F07A         	call	_RdPrt
  3426  0025A6  E203               	bc	u3800
  3427  0025A8  0103               	movlb	(_M+1) shr (0+8)
  3428  0025AA  A907               	btfss	(_M+1)& (0+255),4,b
  3429  0025AC  D047               	goto	l227
  3430  0025AE                     u3800:
  3431                           ;main.c: 1271: {
  3432  0025AE  0100               	movlb	(_PFN+1) shr (0+8)
  3433  0025B0  5168               	movf	(_PFN+1)& (0+255),w,b
  3434  0025B2  0A01               	xorlw	1
  3435  0025B4  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3436  0025B6  E102               	bnz	l228
  3437  0025B8  DA0C               	call	_ToObiegCO	;wreg free
  3438  0025BA  D086               	goto	l217
  3439  0025BC                     l228:
  3440                           ;main.c: 1273: else
  3441  0025BC  0100               	movlb	(_PFN+1) shr (0+8)
  3442  0025BE  5168               	movf	(_PFN+1)& (0+255),w,b
  3443  0025C0  0A02               	xorlw	2
  3444  0025C2  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3445  0025C4  E107               	bnz	l230
  3446                           ;main.c: 1275: {
  3447  0025C6  0100               	movlb	(_DtCO+1) shr (0+8)
  3448  0025C8  A57E               	btfss	(_DtCO+1)& (0+255),2,b
  3449  0025CA  D002               	goto	l231
  3450  0025CC  DA02               	call	_ToObiegCO	;wreg free
  3451  0025CE  D07C               	goto	l217
  3452  0025D0                     l231:
  3453                           ;main.c: 1277: else ToObiegCW();
  3454  0025D0  DA1A               	call	_ToObiegCW	;wreg free
  3455                           ;main.c: 1278: }
  3456  0025D2  D07A               	goto	l217
  3457  0025D4                     l230:
  3458                           ;main.c: 1279: else
  3459  0025D4  EE02  F0BC         	lfsr	0,_DtKNF+14
  3460  0025D8  50EF               	movf	indf0,w,c
  3461  0025DA  E123               	bnz	l234
  3462                           ;main.c: 1282: {
  3463  0025DC  0103               	movlb	(_M+1) shr (0+8)
  3464  0025DE  A307               	btfss	(_M+1)& (0+255),1,b
  3465  0025E0  930E               	bcf	(_M+8)& (0+255),1,b
  3466                           ;main.c: 1284: if(M._HWB_CW)
  3467  0025E2  0103               	movlb	(_M+8) shr (0+8)
  3468  0025E4  A30E               	btfss	(_M+8)& (0+255),1,b
  3469  0025E6  D010               	goto	l236
  3470                           ;main.c: 1285: {
  3471  0025E8  A306               	btfss	_M& (0+255),1,b
  3472  0025EA  B906               	btfsc	_M& (0+255),4,b
  3473  0025EC  D00B               	goto	l237
  3474  0025EE  0103               	movlb	_M shr (0+8)
  3475  0025F0  BF06               	btfsc	_M& (0+255),7,b
  3476  0025F2  D008               	goto	l237
  3477  0025F4  0103               	movlb	_M shr (0+8)
  3478  0025F6  B706               	btfsc	_M& (0+255),3,b
  3479  0025F8  D005               	goto	l237
  3480  0025FA  0103               	movlb	_M shr (0+8)
  3481  0025FC  AB06               	btfss	_M& (0+255),5,b
  3482  0025FE  D002               	goto	l237
  3483  002600  D9E8               	call	_ToObiegCO	;wreg free
  3484  002602  D062               	goto	l217
  3485  002604                     l237:
  3486                           ;main.c: 1288: else ToObiegCW();
  3487  002604  DA00               	call	_ToObiegCW	;wreg free
  3488                           ;main.c: 1289: }
  3489  002606  D060               	goto	l217
  3490  002608                     l236:
  3491                           ;main.c: 1290: else
  3492  002608  0103               	movlb	_M shr (0+8)
  3493  00260A  A306               	btfss	_M& (0+255),1,b
  3494  00260C  B906               	btfsc	_M& (0+255),4,b
  3495  00260E  D007               	goto	l240
  3496  002610  BF06               	btfsc	_M& (0+255),7,b
  3497  002612  D005               	goto	l240
  3498  002614  0103               	movlb	_M shr (0+8)
  3499  002616  B706               	btfsc	_M& (0+255),3,b
  3500  002618  D002               	goto	l240
  3501  00261A  D9DB               	call	_ToObiegCO	;wreg free
  3502  00261C  D055               	goto	l217
  3503  00261E                     l240:
  3504                           ;main.c: 1293: else ToObiegCW();
  3505  00261E  D9F3               	call	_ToObiegCW	;wreg free
  3506                           ;main.c: 1294: }
  3507  002620  D053               	goto	l217
  3508  002622                     l234:
  3509                           ;main.c: 1296: else
  3510  002622  0103               	movlb	_M shr (0+8)
  3511  002624  A306               	btfss	_M& (0+255),1,b
  3512  002626  B906               	btfsc	_M& (0+255),4,b
  3513  002628  D007               	goto	l243
  3514  00262A  BF06               	btfsc	_M& (0+255),7,b
  3515  00262C  D005               	goto	l243
  3516  00262E  0103               	movlb	_M shr (0+8)
  3517  002630  B706               	btfsc	_M& (0+255),3,b
  3518  002632  D002               	goto	l243
  3519  002634  D9CE               	call	_ToObiegCO	;wreg free
  3520  002636  D048               	goto	l217
  3521  002638                     l243:
  3522                           ;main.c: 1299: else ToObiegCW();
  3523  002638  D9E6               	call	_ToObiegCW	;wreg free
  3524                           ;main.c: 1300: }
  3525  00263A  D046               	goto	l217
  3526  00263C                     l227:
  3527                           ;main.c: 1303: else
  3528  00263C  0103               	movlb	(_M+4) shr (0+8)
  3529  00263E  A70A               	btfss	(_M+4)& (0+255),3,b
  3530  002640  B908               	btfsc	(_M+2)& (0+255),4,b
  3531  002642  D030               	goto	l249
  3532  002644  0103               	movlb	(_M+7) shr (0+8)
  3533  002646  BF0D               	btfsc	(_M+7)& (0+255),7,b
  3534  002648  D02D               	goto	l249
  3535  00264A  0103               	movlb	_M shr (0+8)
  3536  00264C  AB06               	btfss	_M& (0+255),5,b
  3537  00264E  D02A               	goto	l249
  3538  002650  0100               	movlb	_DtCO shr (0+8)
  3539  002652  B37D               	btfsc	_DtCO& (0+255),1,b
  3540  002654  D027               	goto	l249
  3541  002656  D9BD               	call	_ToObiegCO	;wreg free
  3542  002658  D037               	goto	l217
  3543                           ;main.c: 1306: else
  3544  00265A                     l250:
  3545                           ;main.c: 1309: {
  3546                           ;main.c: 1311: {
  3547  00265A  0103               	movlb	(_M+4) shr (0+8)
  3548  00265C  A70A               	btfss	(_M+4)& (0+255),3,b
  3549  00265E  B307               	btfsc	(_M+1)& (0+255),1,b
  3550  002660  D033               	goto	l217
  3551  002662  0103               	movlb	(_M+7) shr (0+8)
  3552  002664  BF0D               	btfsc	(_M+7)& (0+255),7,b
  3553  002666  D030               	goto	l217
  3554  002668  0103               	movlb	(_M+1) shr (0+8)
  3555  00266A  B907               	btfsc	(_M+1)& (0+255),4,b
  3556  00266C  D02D               	goto	l217
  3557  00266E  A483               	btfss	3971,2,c	;volatile
  3558  002670  D003               	goto	u4290
  3559  002672  0103               	movlb	(_M+1) shr (0+8)
  3560  002674  AB07               	btfss	(_M+1)& (0+255),5,b
  3561  002676  D028               	goto	l217
  3562  002678                     u4290:
  3563  002678  D9C6               	call	_ToObiegCW	;wreg free
  3564                           ;main.c: 1314: break;
  3565  00267A  D026               	goto	l217
  3566  00267C                     l252:
  3567                           ;main.c: 1315: }
  3568                           ;main.c: 1317: {
  3569  00267C  0103               	movlb	(_M+4) shr (0+8)
  3570  00267E  A70A               	btfss	(_M+4)& (0+255),3,b
  3571  002680  BF0D               	btfsc	(_M+7)& (0+255),7,b
  3572  002682  D006               	goto	l253
  3573  002684  0E11               	movlw	17
  3574  002686  EC1C  F07A         	call	_RdPrt
  3575  00268A  E302               	bnc	l253
  3576                           ;main.c: 1321: {
  3577  00268C  D9BC               	call	_ToObiegCW	;wreg free
  3578                           ;main.c: 1323: }
  3579  00268E  D01C               	goto	l217
  3580  002690                     l253:
  3581                           ;main.c: 1324: else
  3582  002690  0103               	movlb	(_M+1) shr (0+8)
  3583  002692  A307               	btfss	(_M+1)& (0+255),1,b
  3584  002694  B907               	btfsc	(_M+1)& (0+255),4,b
  3585  002696  D018               	goto	l217
  3586  002698  B483               	btfsc	3971,2,c	;volatile
  3587  00269A  D016               	goto	l217
  3588  00269C  0103               	movlb	(_M+7) shr (0+8)
  3589  00269E  AF0D               	btfss	(_M+7)& (0+255),7,b
  3590  0026A0  D998               	call	_ToObiegCO	;wreg free
  3591                           ;main.c: 1327: }
  3592  0026A2  D012               	goto	l217
  3593                           ;main.c: 1334: break;
  3594  0026A4                     l249:
  3595  0026A4  C2BC  FFE8         	movff	_DtKNF+14,wreg
  3596  0026A8  0A00               	xorlw	0
  3597  0026AA  E0E8               	bz	l252
  3598  0026AC  0A03               	xorlw	3
  3599  0026AE  E0D5               	bz	l250
  3600                           ;main.c: 1329: }
  3601                           ;main.c: 1331: {
  3602  0026B0  0103               	movlb	(_M+4) shr (0+8)
  3603  0026B2  A70A               	btfss	(_M+4)& (0+255),3,b
  3604  0026B4  B307               	btfsc	(_M+1)& (0+255),1,b
  3605  0026B6  D008               	goto	l217
  3606  0026B8  0103               	movlb	(_M+7) shr (0+8)
  3607  0026BA  BF0D               	btfsc	(_M+7)& (0+255),7,b
  3608  0026BC  D005               	goto	l217
  3609  0026BE  0103               	movlb	(_M+1) shr (0+8)
  3610  0026C0  A907               	btfss	(_M+1)& (0+255),4,b
  3611  0026C2  B483               	btfsc	3971,2,c	;volatile
  3612  0026C4  D001               	goto	l217
  3613  0026C6  D99F               	call	_ToObiegCW	;wreg free
  3614  0026C8                     l217:
  3615                           ;main.c: 1337: }
  3616  0026C8  0103               	movlb	(_M+1) shr (0+8)
  3617  0026CA  A507               	btfss	(_M+1)& (0+255),2,b
  3618  0026CC  D049               	goto	l260
  3619  0026CE  D066               	goto	l258
  3620                           ;main.c: 1343: {
  3621  0026D0                     l261:
  3622                           ;main.c: 1345: {
  3623                           ;main.c: 1347: {
  3624  0026D0  B483               	btfsc	3971,2,c	;volatile
  3625  0026D2  D064               	goto	l258
  3626  0026D4  0103               	movlb	(_M+1) shr (0+8)
  3627  0026D6  B307               	btfsc	(_M+1)& (0+255),1,b
  3628  0026D8  D061               	goto	l258
  3629  0026DA  0103               	movlb	(_M+7) shr (0+8)
  3630  0026DC  BF0D               	btfsc	(_M+7)& (0+255),7,b
  3631  0026DE  D05E               	goto	l258
  3632  0026E0  0103               	movlb	(_M+1) shr (0+8)
  3633  0026E2  B907               	btfsc	(_M+1)& (0+255),4,b
  3634  0026E4  D05B               	goto	l258
  3635  0026E6  0103               	movlb	(_M+1) shr (0+8)
  3636  0026E8  BB07               	btfsc	(_M+1)& (0+255),5,b
  3637  0026EA  D058               	goto	l258
  3638  0026EC  0103               	movlb	(_M+4) shr (0+8)
  3639  0026EE  B70A               	btfsc	(_M+4)& (0+255),3,b
  3640  0026F0  D055               	goto	l258
  3641                           ;main.c: 1349: {
  3642  0026F2  0E0D               	movlw	13
  3643  0026F4  EC1C  F07A         	call	_RdPrt
  3644  0026F8                     L37:
  3645  0026F8  E24E               	bc	u5030
  3646  0026FA                     L16:
  3647                           ;main.c: 1352: {
  3648                           ;main.c: 1354: RD2=1;
  3649                           ;main.c: 1355: }
  3650                           ;main.c: 1356: else
  3651  0026FA  0100               	movlb	(_PFN+1) shr (0+8)
  3652  0026FC  5168               	movf	(_PFN+1)& (0+255),w,b
  3653  0026FE  0A01               	xorlw	1
  3654  002700  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3655  002702  E04C               	bz	l258
  3656  002704  5168               	movf	(_PFN+1)& (0+255),w,b
  3657  002706  0A02               	xorlw	2
  3658  002708  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3659  00270A  E048               	bz	l258
  3660  00270C                     L14:
  3661  00270C  0103               	movlb	_M shr (0+8)
  3662  00270E  AB06               	btfss	_M& (0+255),5,b
  3663  002710  D045               	goto	l258
  3664  002712  0100               	movlb	_DtCO shr (0+8)
  3665  002714  B37D               	btfsc	_DtCO& (0+255),1,b
  3666  002716  D042               	goto	l258
  3667  002718  D03E               	goto	u5030
  3668                           ;main.c: 1359: {
  3669                           ;main.c: 1361: RD2=1;
  3670                           ;main.c: 1362: }
  3671  00271A                     l266:
  3672                           ;main.c: 1365: }
  3673                           ;main.c: 1367: {
  3674  00271A  B483               	btfsc	3971,2,c	;volatile
  3675  00271C  D03F               	goto	l258
  3676  00271E  0103               	movlb	(_M+1) shr (0+8)
  3677  002720  B307               	btfsc	(_M+1)& (0+255),1,b
  3678  002722  D03C               	goto	l258
  3679  002724  0103               	movlb	(_M+7) shr (0+8)
  3680  002726  BF0D               	btfsc	(_M+7)& (0+255),7,b
  3681  002728  D039               	goto	l258
  3682  00272A  0103               	movlb	(_M+1) shr (0+8)
  3683  00272C  B907               	btfsc	(_M+1)& (0+255),4,b
  3684  00272E  D036               	goto	l258
  3685  002730  0103               	movlb	(_M+4) shr (0+8)
  3686  002732  B70A               	btfsc	(_M+4)& (0+255),3,b
  3687  002734  D033               	goto	l258
  3688                           ;main.c: 1369: {
  3689  002736  0E0D               	movlw	13
  3690  002738  EC1C  F07A         	call	_RdPrt
  3691  00273C  E22C               	bc	u5030
  3692  00273E  0103               	movlb	(_M+5) shr (0+8)
  3693  002740  A10B               	btfss	(_M+5)& (0+255),0,b
  3694  002742  D7DB               	goto	L16
  3695  002744  0E11               	movlw	17
  3696  002746  EC1C  F07A         	call	_RdPrt
  3697  00274A  D7D6               	goto	L37
  3698                           ;main.c: 1372: {
  3699                           ;main.c: 1374: RD2=1;
  3700                           ;main.c: 1375: }
  3701                           ;main.c: 1376: else
  3702                           ;main.c: 1395: }
  3703  00274C                     l273:
  3704                           ;main.c: 1396: else
  3705  00274C  0100               	movlb	(_PFN+1) shr (0+8)
  3706  00274E  5168               	movf	(_PFN+1)& (0+255),w,b
  3707  002750  0A01               	xorlw	1
  3708  002752  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3709  002754  E023               	bz	l258
  3710  002756  5168               	movf	(_PFN+1)& (0+255),w,b
  3711  002758  0A02               	xorlw	2
  3712  00275A  1169               	iorwf	(_PFN+2)& (0+255),w,b
  3713  00275C  E1D7               	bnz	L14
  3714                           ;main.c: 1399: {
  3715                           ;main.c: 1401: RD2=1;
  3716                           ;main.c: 1402: }
  3717  00275E  D01E               	goto	l258
  3718  002760                     l260:
  3719  002760  C2BC  FFE8         	movff	_DtKNF+14,wreg
  3720  002764  0A00               	xorlw	0
  3721  002766  E0D9               	bz	l266
  3722  002768  0A03               	xorlw	3
  3723  00276A  E0B2               	bz	l261
  3724                           ;main.c: 1379: {
  3725                           ;main.c: 1381: RD2=1;
  3726                           ;main.c: 1382: }
  3727                           ;main.c: 1385: }
  3728                           ;main.c: 1387: {
  3729  00276C  B483               	btfsc	3971,2,c	;volatile
  3730  00276E  D016               	goto	l258
  3731  002770  0103               	movlb	(_M+1) shr (0+8)
  3732  002772  B307               	btfsc	(_M+1)& (0+255),1,b
  3733  002774  D013               	goto	l258
  3734  002776  0103               	movlb	(_M+7) shr (0+8)
  3735  002778  BF0D               	btfsc	(_M+7)& (0+255),7,b
  3736  00277A  D010               	goto	l258
  3737  00277C  0103               	movlb	(_M+1) shr (0+8)
  3738  00277E  B907               	btfsc	(_M+1)& (0+255),4,b
  3739  002780  D00D               	goto	l258
  3740  002782  0103               	movlb	(_M+1) shr (0+8)
  3741  002784  BB07               	btfsc	(_M+1)& (0+255),5,b
  3742  002786  D00A               	goto	l258
  3743  002788  0103               	movlb	(_M+4) shr (0+8)
  3744  00278A  B70A               	btfsc	(_M+4)& (0+255),3,b
  3745  00278C  D007               	goto	l258
  3746                           ;main.c: 1389: {
  3747  00278E  0E0D               	movlw	13
  3748  002790  EC1C  F07A         	call	_RdPrt
  3749  002794  E3DB               	bnc	l273
  3750  002796                     u5030:
  3751                           ;main.c: 1392: {
  3752  002796  0103               	movlb	(_M+1) shr (0+8)
  3753  002798  8307               	bsf	(_M+1)& (0+255),1,b
  3754                           ;main.c: 1394: RD2=1;
  3755  00279A  8483               	bsf	3971,2,c	;volatile
  3756  00279C                     l258:
  3757                           ;main.c: 1407: }
  3758  00279C  0103               	movlb	(_M+4) shr (0+8)
  3759  00279E  A70A               	btfss	(_M+4)& (0+255),3,b
  3760  0027A0  D027               	goto	l276
  3761  0027A2  AB06               	btfss	_M& (0+255),5,b
  3762  0027A4  BD06               	btfsc	_M& (0+255),6,b
  3763  0027A6  D003               	goto	u5170
  3764  0027A8  0103               	movlb	_M shr (0+8)
  3765  0027AA  AF06               	btfss	_M& (0+255),7,b
  3766  0027AC  D021               	goto	l276
  3767  0027AE                     u5170:
  3768  0027AE  0103               	movlb	_M shr (0+8)
  3769  0027B0  B506               	btfsc	_M& (0+255),2,b
  3770  0027B2  D01E               	goto	l276
  3771  0027B4  0103               	movlb	(_M+3) shr (0+8)
  3772  0027B6  B309               	btfsc	(_M+3)& (0+255),1,b
  3773  0027B8  D01B               	goto	l276
  3774  0027BA  0103               	movlb	_M shr (0+8)
  3775  0027BC  B106               	btfsc	_M& (0+255),0,b
  3776  0027BE  D018               	goto	l276
  3777  0027C0  0103               	movlb	_M shr (0+8)
  3778  0027C2  B306               	btfsc	_M& (0+255),1,b
  3779  0027C4  D015               	goto	l276
  3780  0027C6  0103               	movlb	_M shr (0+8)
  3781  0027C8  B906               	btfsc	_M& (0+255),4,b
  3782  0027CA  D012               	goto	l276
  3783  0027CC  0103               	movlb	_M shr (0+8)
  3784  0027CE  B706               	btfsc	_M& (0+255),3,b
  3785  0027D0  D00F               	goto	l276
  3786                           ;main.c: 1411: {
  3787  0027D2  C2E3  FFE8         	movff	_PWM+10,wreg
  3788  0027D6  0102               	movlb	(_PWM+9) shr (0+8)
  3789  0027D8  61E2               	cpfslt	(_PWM+9)& (0+255),b
  3790  0027DA  D00A               	goto	l276
  3791  0027DC  0E0E               	movlw	14
  3792  0027DE  EC63  F07E         	call	_RTS
  3793  0027E2  6E00               	movwf	btemp,c
  3794  0027E4  0E05               	movlw	5
  3795  0027E6  5C00               	subwf	btemp,w,c
  3796  0027E8  E203               	bc	l276
  3797                           ;main.c: 1413: {
  3798  0027EA  C2E3  F2E1         	movff	_PWM+10,_PWM+8
  3799                           ;main.c: 1415: }
  3800  0027EE  D002               	goto	l279
  3801                           ;main.c: 1416: else
  3802                           ;main.c: 1419: }
  3803  0027F0                     l276:
  3804                           ;main.c: 1421: else
  3805  0027F0  C2E2  F2E1         	movff	_PWM+9,_PWM+8
  3806  0027F4                     l279:
  3807                           ;main.c: 1424: }
  3808  0027F4  0103               	movlb	(_M+1) shr (0+8)
  3809  0027F6  A707               	btfss	(_M+1)& (0+255),3,b
  3810  0027F8  A083               	btfss	3971,0,c	;volatile
  3811  0027FA  D038               	goto	l280
  3812  0027FC  0103               	movlb	_M shr (0+8)
  3813  0027FE  AB06               	btfss	_M& (0+255),5,b
  3814  002800  D035               	goto	l280
  3815  002802  0103               	movlb	_M shr (0+8)
  3816  002804  B506               	btfsc	_M& (0+255),2,b
  3817  002806  D032               	goto	l280
  3818  002808  0103               	movlb	(_M+3) shr (0+8)
  3819  00280A  B309               	btfsc	(_M+3)& (0+255),1,b
  3820  00280C  D02F               	goto	l280
  3821  00280E  0103               	movlb	_M shr (0+8)
  3822  002810  B106               	btfsc	_M& (0+255),0,b
  3823  002812  D02C               	goto	l280
  3824  002814  0103               	movlb	_M shr (0+8)
  3825  002816  B306               	btfsc	_M& (0+255),1,b
  3826  002818  D029               	goto	l280
  3827  00281A  0103               	movlb	_M shr (0+8)
  3828  00281C  B906               	btfsc	_M& (0+255),4,b
  3829  00281E  D026               	goto	l280
  3830  002820  0103               	movlb	_M shr (0+8)
  3831  002822  BF06               	btfsc	_M& (0+255),7,b
  3832  002824  D023               	goto	l280
  3833  002826  0103               	movlb	_M shr (0+8)
  3834  002828  B706               	btfsc	_M& (0+255),3,b
  3835  00282A  D020               	goto	l280
  3836                           ;main.c: 1429: {
  3837  00282C  EE02  F0B9         	lfsr	0,_DtKNF+11
  3838  002830  50EF               	movf	indf0,w,c
  3839  002832  E014               	bz	l281
  3840  002834  0E05               	movlw	5
  3841  002836  EC87  F07E         	call	_RTM
  3842  00283A  6E00               	movwf	btemp,c
  3843  00283C  C2B9  FFE8         	movff	_DtKNF+11,wreg
  3844  002840  5C00               	subwf	btemp,w,c
  3845  002842  E20C               	bc	l281
  3846                           ;main.c: 1431: {
  3847  002844  0102               	movlb	(_PWM+23) shr (0+8)
  3848  002846  B1F0               	btfsc	(_PWM+23)& (0+255),0,b
  3849  002848  D006               	goto	l282
  3850                           ;main.c: 1433: {
  3851  00284A  C2B8  F2B6         	movff	_DtKNF+10,_DtKNF+8
  3852                           ;main.c: 1435: rgl.slow_inc=1;
  3853  00284E  0103               	movlb	(_rgl+1) shr (0+8)
  3854  002850  83D8               	bsf	(_rgl+1)& (0+255),1,b
  3855                           ;main.c: 1436: ModParam();
  3856  002852  EC65  F000         	call	_ModParam	;wreg free
  3857  002856                     l282:
  3858                           ;main.c: 1437: }
  3859  002856  0102               	movlb	(_PWM+23) shr (0+8)
  3860  002858  81F0               	bsf	(_PWM+23)& (0+255),0,b
  3861                           ;main.c: 1440: }
  3862  00285A  D013               	goto	l285
  3863  00285C                     l281:
  3864                           ;main.c: 1441: else
  3865  00285C  0102               	movlb	(_PWM+23) shr (0+8)
  3866  00285E  A1F0               	btfss	(_PWM+23)& (0+255),0,b
  3867  002860  D00E               	goto	L7
  3868                           ;main.c: 1444: {
  3869  002862  C2B7  F2B6         	movff	_DtKNF+9,_DtKNF+8
  3870                           ;main.c: 1446: ModParam();
  3871  002866  EC65  F000         	call	_ModParam	;wreg free
  3872  00286A  D009               	goto	L7
  3873                           ;main.c: 1447: }
  3874                           ;main.c: 1450: }
  3875  00286C                     l280:
  3876                           ;main.c: 1452: else
  3877  00286C  0102               	movlb	(_PWM+23) shr (0+8)
  3878  00286E  A1F0               	btfss	(_PWM+23)& (0+255),0,b
  3879  002870  D004               	goto	l286
  3880                           ;main.c: 1455: {
  3881  002872  C2B7  F2B6         	movff	_DtKNF+9,_DtKNF+8
  3882                           ;main.c: 1457: ModParam();
  3883  002876  EC65  F000         	call	_ModParam	;wreg free
  3884  00287A                     l286:
  3885                           ;main.c: 1458: }
  3886  00287A  0103               	movlb	(_rgl+1) shr (0+8)
  3887  00287C  93D8               	bcf	(_rgl+1)& (0+255),1,b
  3888  00287E                     L7:
  3889                           ;main.c: 1460: PWM._TMAXCO=0;
  3890  00287E  0102               	movlb	(_PWM+23) shr (0+8)
  3891  002880  91F0               	bcf	(_PWM+23)& (0+255),0,b
  3892  002882                     l285:
  3893                           ;main.c: 1462: }
  3894  002882  0103               	movlb	_M shr (0+8)
  3895  002884  AB06               	btfss	_M& (0+255),5,b
  3896  002886  B906               	btfsc	_M& (0+255),4,b
  3897  002888  D002               	goto	u5610
  3898  00288A  A706               	btfss	_M& (0+255),3,b
  3899  00288C  D00B               	goto	l287
  3900  00288E                     u5610:
  3901                           ;main.c: 1467: {
  3902  00288E  0103               	movlb	(_M+1) shr (0+8)
  3903  002890  A707               	btfss	(_M+1)& (0+255),3,b
  3904  002892  A083               	btfss	3971,0,c	;volatile
  3905  002894  D007               	goto	l287
  3906                           ;main.c: 1469: {
  3907  002896  0103               	movlb	(_M+2) shr (0+8)
  3908  002898  BB08               	btfsc	(_M+2)& (0+255),5,b
  3909  00289A  D006               	goto	l291
  3910                           ;main.c: 1471: {
  3911  00289C  8B08               	bsf	(_M+2)& (0+255),5,b
  3912                           ;main.c: 1473: RestartMod();
  3913  00289E  EC93  F033         	call	_RestartMod	;wreg free
  3914                           ;main.c: 1475: }
  3915  0028A2  D002               	goto	l291
  3916                           ;main.c: 1477: else M._MODULUJ=0;
  3917                           ;main.c: 1478: }
  3918  0028A4                     l287:
  3919                           ;main.c: 1479: else M._MODULUJ=0;
  3920  0028A4  0103               	movlb	(_M+2) shr (0+8)
  3921  0028A6  9B08               	bcf	(_M+2)& (0+255),5,b
  3922  0028A8                     l291:
  3923                           ;main.c: 1502: st=(!M._ROZRUCH&&M._LOW_PMP)?1:0;
  3924  0028A8  0103               	movlb	(_M+1) shr (0+8)
  3925  0028AA  A707               	btfss	(_M+1)& (0+255),3,b
  3926  0028AC  A90E               	btfss	(_M+8)& (0+255),4,b
  3927  0028AE  D002               	goto	u5690
  3928  0028B0  0E01               	movlw	1
  3929  0028B2  D001               	goto	u5700
  3930  0028B4                     u5690:
  3931  0028B4  0E00               	movlw	0
  3932  0028B6                     u5700:
  3933  0028B6  0100               	movlb	__Lparam shr (0+8)
  3934  0028B8  6FA4               	movwf	?a_DecSTR^(__Lparam& (0+65280)),b	;volati
      +                          le
  3935                           ;main.c: 1503: if(!st) lwp=0;
  3936  0028BA  51A4               	movf	?a_DecSTR^(__Lparam& (0+65280)),w	;volatil
      +                          e
  3937  0028BC  E103               	bnz	l292
  3938  0028BE  010E               	movlb	F2593 shr (0+8)
  3939  0028C0  6B62               	clrf	F2593& (0+255),b
  3940  0028C2  D010               	goto	l293
  3941  0028C4                     l292:
  3942                           ;main.c: 1504: else
  3943  0028C4  010E               	movlb	F2592 shr (0+8)
  3944  0028C6  5361               	movf	F2592& (0+255),f,b
  3945  0028C8  E10D               	bnz	l293
  3946  0028CA  CE61  FFE8         	movff	F2592,wreg
  3947  0028CE  0100               	movlb	__Lparam shr (0+8)
  3948  0028D0  19A4               	xorwf	?a_DecSTR^(__Lparam& (0+65280)),w	;volati
      +                          le
  3949  0028D2  E008               	bz	l293
  3950                           ;main.c: 1507: {
  3951  0028D4  0E33               	movlw	51
  3952  0028D6  0103               	movlb	(_RSDT1+22) shr (0+8)
  3953  0028D8  5D43               	subwf	(_RSDT1+22)& (0+255),w,b
  3954  0028DA  0E00               	movlw	0
  3955  0028DC  B0D8               	btfsc	status,0,c
  3956  0028DE  0E01               	movlw	1
  3957  0028E0  CFE8 FE62          	movff	wreg,F2593
  3958  0028E4                     l293:
  3959                           ;main.c: 1509: }
  3960  0028E4  C0A4  FE61         	movff	?a_DecSTR,F2592	;volatile
  3961                           ;main.c: 1512: if(!M._PRACA||M._RUN_MNMOD||(!M._
      +                          PRACA&&M._VWYBIEG)||(lwp))
  3962  0028E8  0103               	movlb	(_M+4) shr (0+8)
  3963  0028EA  B70A               	btfsc	(_M+4)& (0+255),3,b
  3964  0028EC  BB0A               	btfsc	(_M+4)& (0+255),5,b
  3965  0028EE  D007               	goto	u5830
  3966  0028F0  A70A               	btfss	(_M+4)& (0+255),3,b
  3967  0028F2  AF07               	btfss	(_M+1)& (0+255),7,b
  3968  0028F4  D001               	goto	u5811
  3969  0028F6  D003               	goto	u5830
  3970  0028F8                     u5811:
  3971  0028F8  010E               	movlb	F2593 shr (0+8)
  3972  0028FA  5362               	movf	F2593& (0+255),f,b
  3973  0028FC  E026               	bz	l295
  3974  0028FE                     u5830:
  3975                           ;main.c: 1513: {
  3976  0028FE  0103               	movlb	(_M+2) shr (0+8)
  3977  002900  9B08               	bcf	(_M+2)& (0+255),5,b
  3978                           ;main.c: 1515: if(M._RUN_MNMOD)
  3979  002902  AB0A               	btfss	(_M+4)& (0+255),5,b
  3980  002904  D006               	goto	l296
  3981                           ;main.c: 1516: {
  3982  002906  0E00               	movlw	0
  3983  002908  ECEF  F032         	call	_ProcToMod
  3984  00290C  EC74  F001         	call	_WritePWM
  3985                           ;main.c: 1518: }
  3986  002910  D01C               	goto	l295
  3987  002912                     l296:
  3988                           ;main.c: 1519: else
  3989  002912  0103               	movlb	(_M+1) shr (0+8)
  3990  002914  AF07               	btfss	(_M+1)& (0+255),7,b
  3991  002916  D006               	goto	l298
  3992                           ;main.c: 1521: {
  3993  002918  0E00               	movlw	0
  3994  00291A  ECEF  F032         	call	_ProcToMod
  3995  00291E  EC74  F001         	call	_WritePWM
  3996                           ;main.c: 1523: }
  3997  002922  D013               	goto	l295
  3998  002924                     l298:
  3999                           ;main.c: 1524: else
  4000  002924  0103               	movlb	(_M+4) shr (0+8)
  4001  002926  B70A               	btfsc	(_M+4)& (0+255),3,b
  4002  002928  D004               	goto	l300
  4003                           ;main.c: 1526: {
  4004  00292A  0E00               	movlw	0
  4005  00292C  EC74  F001         	call	_WritePWM
  4006                           ;main.c: 1528: }
  4007  002930  D00C               	goto	l295
  4008  002932                     l300:
  4009                           ;main.c: 1529: else
  4010  002932  010E               	movlb	F2593 shr (0+8)
  4011  002934  5362               	movf	F2593& (0+255),f,b
  4012  002936  E006               	bz	l302
  4013                           ;main.c: 1531: {
  4014  002938  0E32               	movlw	50
  4015  00293A  ECEF  F032         	call	_ProcToMod
  4016  00293E  EC74  F001         	call	_WritePWM
  4017                           ;main.c: 1534: }
  4018  002942  D003               	goto	l295
  4019  002944                     l302:
  4020                           ;main.c: 1535: else
  4021  002944  0E00               	movlw	0
  4022  002946  EC74  F001         	call	_WritePWM
  4023  00294A                     l295:
  4024                           ;main.c: 1538: }
  4025  00294A  0103               	movlb	_M shr (0+8)
  4026  00294C  B306               	btfsc	_M& (0+255),1,b
  4027  00294E  B707               	btfsc	(_M+1)& (0+255),3,b
  4028  002950  D008               	goto	l304
  4029  002952  A083               	btfss	3971,0,c	;volatile
  4030  002954  D006               	goto	l304
  4031  002956  C2B2  FFE8         	movff	_DtKNF+4,wreg
  4032  00295A  ECEF  F032         	call	_ProcToMod
  4033  00295E  EC74  F001         	call	_WritePWM
  4034  002962                     l304:
  4035                           ;main.c: 1542: if(M._pob_KCO&&!M._ROZRUCH&&RD0) 
      +                          WritePWM(ProcToMod(DtKNF.dmxco));
  4036  002962  0103               	movlb	_M shr (0+8)
  4037  002964  B106               	btfsc	_M& (0+255),0,b
  4038  002966  B707               	btfsc	(_M+1)& (0+255),3,b
  4039  002968  D008               	goto	l305
  4040  00296A  A083               	btfss	3971,0,c	;volatile
  4041  00296C  D006               	goto	l305
  4042  00296E  C2B3  FFE8         	movff	_DtKNF+5,wreg
  4043  002972  ECEF  F032         	call	_ProcToMod
  4044  002976  EC74  F001         	call	_WritePWM
  4045  00297A                     l305:
  4046                           ;main.c: 1546: if(M._pob_SRW&&!M._ROZRUCH&&RD0)
  4047  00297A  0103               	movlb	_M shr (0+8)
  4048  00297C  B506               	btfsc	_M& (0+255),2,b
  4049  00297E  B707               	btfsc	(_M+1)& (0+255),3,b
  4050  002980  D014               	goto	l306
  4051  002982  A083               	btfss	3971,0,c	;volatile
  4052  002984  D012               	goto	l306
  4053                           ;main.c: 1547: {
  4054  002986  0100               	movlb	__Lparam shr (0+8)
  4055  002988  6BAE               	clrf	?_GetBit2^(__Lparam& (0+65280)),b
  4056  00298A  C37C  FFE8         	movff	_RSDT1+79,wreg
  4057  00298E  ECB9  F003         	call	_GetBit2
  4058  002992  E306               	bnc	l307
  4059  002994  0E63               	movlw	99
  4060  002996  ECEF  F032         	call	_ProcToMod
  4061  00299A  EC74  F001         	call	_WritePWM
  4062  00299E  D005               	goto	l306
  4063  0029A0                     l307:
  4064                           ;main.c: 1549: else WritePWM(ProcToMod(0));
  4065  0029A0  0E00               	movlw	0
  4066  0029A2  ECEF  F032         	call	_ProcToMod
  4067  0029A6  EC74  F001         	call	_WritePWM
  4068  0029AA                     l306:
  4069                           ;main.c: 1550: }
  4070  0029AA  0103               	movlb	_M shr (0+8)
  4071  0029AC  BD06               	btfsc	_M& (0+255),6,b
  4072  0029AE  B707               	btfsc	(_M+1)& (0+255),3,b
  4073  0029B0  D006               	goto	l309
  4074  0029B2  A083               	btfss	3971,0,c	;volatile
  4075  0029B4  D004               	goto	l309
  4076  0029B6  C2E1  FFE8         	movff	_PWM+8,wreg
  4077  0029BA  EC74  F001         	call	_WritePWM
  4078  0029BE                     l309:
  4079                           ;main.c: 1553: if(M._pob_DzCW&&!M._ROZRUCH&&RD0)
      +                           WritePWM(PWM.MDMOD);
  4080  0029BE  0103               	movlb	_M shr (0+8)
  4081  0029C0  BF06               	btfsc	_M& (0+255),7,b
  4082  0029C2  B707               	btfsc	(_M+1)& (0+255),3,b
  4083  0029C4  0012               	return	
  4084  0029C6  A083               	btfss	3971,0,c	;volatile
  4085  0029C8  0012               	return	
  4086  0029CA  C2E1  FFE8         	movff	_PWM+8,wreg
  4087  0029CE  EF74  F001         	goto	_WritePWM
  4088                           ;main.c: 1554: }
  4089  0029D2                     __end_of_DecSTR:
  4090                           ;main.c: 1558: void ToObiegCO(void)
  4091                           ;main.c: 1559: {
  4092  0029D2                     _ToObiegCO:
  4093  000000                     
  4094                           ;main.c: 1560: switch(DtKNF.tpkt)
  4095  0029D2  D012               	goto	l313
  4096  0029D4                     l315:
  4097                           ;main.c: 1563: case 3:
  4098  0029D4  0103               	movlb	(_M+1) shr (0+8)
  4099  0029D6  A507               	btfss	(_M+1)& (0+255),2,b
  4100  0029D8  B283               	btfsc	3971,1,c	;volatile
  4101  0029DA  0012               	return	
  4102                           ;main.c: 1566: {
  4103  0029DC  0103               	movlb	(_M+5) shr (0+8)
  4104  0029DE  910B               	bcf	(_M+5)& (0+255),0,b
  4105                           ;main.c: 1568: M._ZMKCOCW=1;
  4106  0029E0  8507               	bsf	(_M+1)& (0+255),2,b
  4107                           ;main.c: 1569: M.ZKP=0;
  4108  0029E2  6B1E               	clrf	(_M+24)& (0+255),b
  4109                           ;main.c: 1570: }
  4110  0029E4  0012               	return	
  4111  0029E6                     l317:
  4112                           ;main.c: 1572: }
  4113                           ;main.c: 1574: {
  4114  0029E6  0103               	movlb	(_M+1) shr (0+8)
  4115  0029E8  A507               	btfss	(_M+1)& (0+255),2,b
  4116  0029EA  B283               	btfsc	3971,1,c	;volatile
  4117  0029EC  0012               	return	
  4118                           ;main.c: 1576: {
  4119  0029EE  0103               	movlb	(_M+5) shr (0+8)
  4120  0029F0  910B               	bcf	(_M+5)& (0+255),0,b
  4121                           ;main.c: 1578: M._ZMKCOCW=1;
  4122  0029F2  8507               	bsf	(_M+1)& (0+255),2,b
  4123                           ;main.c: 1579: M.ZKP=0;
  4124  0029F4  6B1E               	clrf	(_M+24)& (0+255),b
  4125                           ;main.c: 1580: }
  4126  0029F6  0012               	return	
  4127  0029F8                     l313:
  4128  0029F8  C2BC  FFE8         	movff	_DtKNF+14,wreg
  4129  0029FC  0A00               	xorlw	0
  4130  0029FE  E0EA               	bz	l315
  4131  002A00  0A03               	xorlw	3
  4132  002A02  E0E8               	bz	l315
  4133  002A04  D7F0               	goto	l317
  4134                           ;main.c: 1584: }
  4135  002A06                     __end_of_ToObiegCO:
  4136                           ;main.c: 1586: void ToObiegCW(void)
  4137                           ;main.c: 1587: {
  4138  002A06                     _ToObiegCW:
  4139  000000                     
  4140                           ;main.c: 1588: switch(DtKNF.tpkt)
  4141  002A06  D02E               	goto	l321
  4142  002A08                     l323:
  4143                           ;main.c: 1591: case 3:
  4144  002A08  0103               	movlb	(_M+1) shr (0+8)
  4145  002A0A  A507               	btfss	(_M+1)& (0+255),2,b
  4146  002A0C  A283               	btfss	3971,1,c	;volatile
  4147  002A0E  0012               	return	
  4148                           ;main.c: 1594: {
  4149  002A10  0103               	movlb	(_M+5) shr (0+8)
  4150  002A12  810B               	bsf	(_M+5)& (0+255),0,b
  4151                           ;main.c: 1596: M._ZMKCOCW=1;
  4152  002A14  8507               	bsf	(_M+1)& (0+255),2,b
  4153                           ;main.c: 1597: M.ZKP=0;
  4154  002A16  6B1E               	clrf	(_M+24)& (0+255),b
  4155                           ;main.c: 1598: if(M._pob_KCW||M._pob_CW||M._pob_
      +                          DzCW||M._pob_AL)
  4156  002A18  A306               	btfss	_M& (0+255),1,b
  4157  002A1A  B906               	btfsc	_M& (0+255),4,b
  4158  002A1C  D006               	goto	u6290
  4159  002A1E  0103               	movlb	_M shr (0+8)
  4160  002A20  BF06               	btfsc	_M& (0+255),7,b
  4161  002A22  D003               	goto	u6290
  4162  002A24  0103               	movlb	_M shr (0+8)
  4163  002A26  A706               	btfss	_M& (0+255),3,b
  4164  002A28  0012               	return	
  4165  002A2A                     u6290:
  4166                           ;main.c: 1599: {
  4167  002A2A  0103               	movlb	(_M+4) shr (0+8)
  4168  002A2C  A70A               	btfss	(_M+4)& (0+255),3,b
  4169  002A2E  0012               	return	
  4170                           ;main.c: 1601: {
  4171  002A30  8908               	bsf	(_M+2)& (0+255),4,b
  4172                           ;main.c: 1603: M.BL15=0;
  4173  002A32  6B18               	clrf	(_M+18)& (0+255),b
  4174                           ;main.c: 1604: }
  4175  002A34  0012               	return	
  4176  002A36                     l327:
  4177                           ;main.c: 1608: }
  4178                           ;main.c: 1610: {
  4179  002A36  0103               	movlb	(_M+1) shr (0+8)
  4180  002A38  A507               	btfss	(_M+1)& (0+255),2,b
  4181  002A3A  A283               	btfss	3971,1,c	;volatile
  4182  002A3C  0012               	return	
  4183                           ;main.c: 1612: {
  4184  002A3E  0103               	movlb	(_M+5) shr (0+8)
  4185  002A40  810B               	bsf	(_M+5)& (0+255),0,b
  4186                           ;main.c: 1614: M._ZMKCOCW=1;
  4187  002A42  8507               	bsf	(_M+1)& (0+255),2,b
  4188                           ;main.c: 1615: M.ZKP=0;
  4189  002A44  6B1E               	clrf	(_M+24)& (0+255),b
  4190                           ;main.c: 1616: if(M._pob_KCW||M._pob_CW||M._pob_
      +                          DzCW||M._pob_AL)
  4191  002A46  A306               	btfss	_M& (0+255),1,b
  4192  002A48  B906               	btfsc	_M& (0+255),4,b
  4193  002A4A  D006               	goto	u6400
  4194  002A4C  0103               	movlb	_M shr (0+8)
  4195  002A4E  BF06               	btfsc	_M& (0+255),7,b
  4196  002A50  D003               	goto	u6400
  4197  002A52  0103               	movlb	_M shr (0+8)
  4198  002A54  A706               	btfss	_M& (0+255),3,b
  4199  002A56  0012               	return	
  4200  002A58                     u6400:
  4201                           ;main.c: 1617: {
  4202  002A58  0103               	movlb	(_M+4) shr (0+8)
  4203  002A5A  A70A               	btfss	(_M+4)& (0+255),3,b
  4204  002A5C  0012               	return	
  4205                           ;main.c: 1619: {
  4206  002A5E  8908               	bsf	(_M+2)& (0+255),4,b
  4207                           ;main.c: 1621: M.BL15=0;
  4208  002A60  6B18               	clrf	(_M+18)& (0+255),b
  4209                           ;main.c: 1622: }
  4210  002A62  0012               	return	
  4211  002A64                     l321:
  4212  002A64  C2BC  FFE8         	movff	_DtKNF+14,wreg
  4213  002A68  0A00               	xorlw	0
  4214  002A6A  E0CE               	bz	l323
  4215  002A6C  0A03               	xorlw	3
  4216  002A6E  E0CC               	bz	l323
  4217  002A70  D7E2               	goto	l327
  4218                           ;main.c: 1628: }
  4219  002A72                     __end_of_ToObiegCW:
  4220                           ;main.c: 1633: void DecRozruch(void)
  4221                           ;main.c: 1634: {
  4222  002A72                     _DecRozruch:
  4223  000000                     
  4224                           ;main.c: 1635: switch(DtKNF.tpkt)
  4225  002A72  D0A3               	goto	l333
  4226  002A74                     l335:
  4227                           ;main.c: 1638: case 3:
  4228  002A74  0103               	movlb	(_M+1) shr (0+8)
  4229  002A76  A707               	btfss	(_M+1)& (0+255),3,b
  4230  002A78  B083               	btfsc	3971,0,c	;volatile
  4231  002A7A  0012               	return	
  4232  002A7C  0103               	movlb	(_M+7) shr (0+8)
  4233  002A7E  BD0D               	btfsc	(_M+7)& (0+255),6,b
  4234  002A80  0012               	return	
  4235                           ;main.c: 1641: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M.
      +                          _RUSZ_PLOMIEN&&!M._RUSZ_STB&&!M._RUSZ_NTC_CO&&!M
      +                          ._RUSZ_NTC_CW)
  4236  002A82  0103               	movlb	(_M+1) shr (0+8)
  4237  002A84  A507               	btfss	(_M+1)& (0+255),2,b
  4238  002A86  BD07               	btfsc	(_M+1)& (0+255),6,b
  4239  002A88  0012               	return	
  4240  002A8A  0103               	movlb	(_M+2) shr (0+8)
  4241  002A8C  B108               	btfsc	(_M+2)& (0+255),0,b
  4242  002A8E  0012               	return	
  4243  002A90  0103               	movlb	(_M+3) shr (0+8)
  4244  002A92  AD09               	btfss	(_M+3)& (0+255),6,b
  4245  002A94  B709               	btfsc	(_M+3)& (0+255),3,b
  4246  002A96  0012               	return	
  4247  002A98  B909               	btfsc	(_M+3)& (0+255),4,b
  4248  002A9A  0012               	return	
  4249                           ;main.c: 1642: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&
      +                          &!M._RUSZ_NCISN)
  4250  002A9C  0103               	movlb	(_M+2) shr (0+8)
  4251  002A9E  A508               	btfss	(_M+2)& (0+255),2,b
  4252  002AA0  BF09               	btfsc	(_M+3)& (0+255),7,b
  4253  002AA2  0012               	return	
  4254  002AA4  0103               	movlb	(_M+4) shr (0+8)
  4255  002AA6  B10A               	btfsc	(_M+4)& (0+255),0,b
  4256  002AA8  0012               	return	
  4257                           ;main.c: 1643: {
  4258  002AAA  0103               	movlb	_M shr (0+8)
  4259  002AAC  B306               	btfsc	_M& (0+255),1,b
  4260  002AAE  D014               	goto	L40
  4261                           ;main.c: 1645: {
  4262                           ;main.c: 1647: {
  4263                           ;main.c: 1649: M.BL15=0;
  4264                           ;main.c: 1650: SetRozruch();
  4265                           ;main.c: 1651: }
  4266                           ;main.c: 1653: else
  4267  002AB0  0103               	movlb	_M shr (0+8)
  4268  002AB2  A106               	btfss	_M& (0+255),0,b
  4269  002AB4  D004               	goto	l342
  4270                           ;main.c: 1655: {
  4271  002AB6  0100               	movlb	_DtCO shr (0+8)
  4272  002AB8  B37D               	btfsc	_DtCO& (0+255),1,b
  4273  002ABA  D888               	call	_SetRozruch	;wreg free
  4274                           ;main.c: 1657: }
  4275  002ABC  0012               	return	
  4276  002ABE                     l342:
  4277                           ;main.c: 1658: else
  4278  002ABE  0103               	movlb	_M shr (0+8)
  4279  002AC0  A506               	btfss	_M& (0+255),2,b
  4280  002AC2  D004               	goto	l345
  4281                           ;main.c: 1660: {
  4282  002AC4  0100               	movlb	_DtCO shr (0+8)
  4283  002AC6  B77D               	btfsc	_DtCO& (0+255),3,b
  4284  002AC8  D881               	call	_SetRozruch	;wreg free
  4285                           ;main.c: 1662: }
  4286  002ACA  0012               	return	
  4287  002ACC                     l345:
  4288                           ;main.c: 1663: else
  4289  002ACC  0103               	movlb	_M shr (0+8)
  4290  002ACE  B706               	btfsc	_M& (0+255),3,b
  4291  002AD0  D006               	goto	L39
  4292                           ;main.c: 1665: {
  4293                           ;main.c: 1667: {
  4294                           ;main.c: 1669: M.BL15=0;
  4295                           ;main.c: 1670: SetRozruch();
  4296                           ;main.c: 1671: }
  4297                           ;main.c: 1673: else
  4298  002AD2  0103               	movlb	_M shr (0+8)
  4299  002AD4  A906               	btfss	_M& (0+255),4,b
  4300  002AD6  D00A               	goto	l351
  4301  002AD8                     L40:
  4302                           ;main.c: 1710: {
  4303  002AD8  0100               	movlb	_DtCW shr (0+8)
  4304  002ADA  A36E               	btfss	_DtCW& (0+255),1,b
  4305  002ADC  0012               	return	
  4306                           ;main.c: 1675: {
  4307  002ADE                     L39:
  4308  002ADE  0100               	movlb	(_DtCO+1) shr (0+8)
  4309  002AE0  A37E               	btfss	(_DtCO+1)& (0+255),1,b
  4310  002AE2  0012               	return	
  4311                           ;main.c: 1677: {
  4312  002AE4  0103               	movlb	(_M+2) shr (0+8)
  4313  002AE6  8908               	bsf	(_M+2)& (0+255),4,b
  4314                           ;main.c: 1679: M.BL15=0;
  4315  002AE8  6B18               	clrf	(_M+18)& (0+255),b
  4316                           ;main.c: 1680: SetRozruch();
  4317  002AEA  D070               	goto	_SetRozruch	;wreg free
  4318                           ;main.c: 1681: }
  4319  002AEC                     l351:
  4320                           ;main.c: 1683: else
  4321  002AEC  0103               	movlb	_M shr (0+8)
  4322  002AEE  AB06               	btfss	_M& (0+255),5,b
  4323  002AF0  D009               	goto	l354
  4324  002AF2  0100               	movlb	_DtCO shr (0+8)
  4325  002AF4  A37D               	btfss	_DtCO& (0+255),1,b
  4326  002AF6  D006               	goto	l354
  4327  002AF8  0103               	movlb	(_M+2) shr (0+8)
  4328  002AFA  B708               	btfsc	(_M+2)& (0+255),3,b
  4329  002AFC  D003               	goto	l354
  4330  002AFE  0103               	movlb	(_M+2) shr (0+8)
  4331  002B00  A908               	btfss	(_M+2)& (0+255),4,b
  4332                           ;main.c: 1685: {
  4333  002B02  D064               	goto	_SetRozruch	;wreg free
  4334                           ;main.c: 1687: }
  4335  002B04                     l354:
  4336                           ;main.c: 1688: else
  4337  002B04  0103               	movlb	_M shr (0+8)
  4338  002B06  AD06               	btfss	_M& (0+255),6,b
  4339  002B08  D006               	goto	l356
  4340  002B0A  0100               	movlb	_DtCO shr (0+8)
  4341  002B0C  AD7D               	btfss	_DtCO& (0+255),6,b
  4342  002B0E  D003               	goto	l356
  4343  002B10  0103               	movlb	(_M+2) shr (0+8)
  4344  002B12  A708               	btfss	(_M+2)& (0+255),3,b
  4345  002B14  D04E               	goto	L48
  4346                           ;main.c: 1690: {
  4347                           ;main.c: 1692: }
  4348  002B16                     l356:
  4349                           ;main.c: 1693: else
  4350  002B16  0103               	movlb	_M shr (0+8)
  4351  002B18  AF06               	btfss	_M& (0+255),7,b
  4352  002B1A  0012               	return	
  4353  002B1C  0100               	movlb	_DtCW shr (0+8)
  4354  002B1E  AB6E               	btfss	_DtCW& (0+255),5,b
  4355  002B20  0012               	return	
  4356  002B22  D7DD               	goto	L39
  4357                           ;main.c: 1695: {
  4358                           ;main.c: 1697: M.BL15=0;
  4359                           ;main.c: 1698: SetRozruch();
  4360                           ;main.c: 1699: }
  4361  002B24                     l359:
  4362                           ;main.c: 1702: }
  4363                           ;main.c: 1704: {
  4364  002B24  0103               	movlb	(_M+1) shr (0+8)
  4365  002B26  A707               	btfss	(_M+1)& (0+255),3,b
  4366  002B28  B083               	btfsc	3971,0,c	;volatile
  4367  002B2A  0012               	return	
  4368  002B2C  0103               	movlb	(_M+7) shr (0+8)
  4369  002B2E  BD0D               	btfsc	(_M+7)& (0+255),6,b
  4370  002B30  0012               	return	
  4371                           ;main.c: 1706: if(!M._ZMKCOCW&&!M._RUSZ_PWR&&!M.
      +                          _RUSZ_PLOMIEN&&!M._RUSZ_STB&&!M._RUSZ_NTC_CO&&!M
      +                          ._RUSZ_NTC_CW)
  4372  002B32  0103               	movlb	(_M+1) shr (0+8)
  4373  002B34  A507               	btfss	(_M+1)& (0+255),2,b
  4374  002B36  BD07               	btfsc	(_M+1)& (0+255),6,b
  4375  002B38  0012               	return	
  4376  002B3A  0103               	movlb	(_M+2) shr (0+8)
  4377  002B3C  B108               	btfsc	(_M+2)& (0+255),0,b
  4378  002B3E  0012               	return	
  4379  002B40  0103               	movlb	(_M+3) shr (0+8)
  4380  002B42  AD09               	btfss	(_M+3)& (0+255),6,b
  4381  002B44  B709               	btfsc	(_M+3)& (0+255),3,b
  4382  002B46  0012               	return	
  4383  002B48  B909               	btfsc	(_M+3)& (0+255),4,b
  4384  002B4A  0012               	return	
  4385                           ;main.c: 1707: if(!M._RUSZ_POMPE&&!M._RUSZ_CISN&
      +                          &!M._RUSZ_NCISN)
  4386  002B4C  0103               	movlb	(_M+2) shr (0+8)
  4387  002B4E  A508               	btfss	(_M+2)& (0+255),2,b
  4388  002B50  BF09               	btfsc	(_M+3)& (0+255),7,b
  4389  002B52  0012               	return	
  4390  002B54  0103               	movlb	(_M+4) shr (0+8)
  4391  002B56  B10A               	btfsc	(_M+4)& (0+255),0,b
  4392  002B58  0012               	return	
  4393                           ;main.c: 1708: {
  4394  002B5A  0103               	movlb	_M shr (0+8)
  4395  002B5C  B306               	btfsc	_M& (0+255),1,b
  4396  002B5E  D7BC               	goto	L40
  4397                           ;main.c: 1712: {
  4398                           ;main.c: 1714: M.BL15=0;
  4399                           ;main.c: 1715: SetRozruch();
  4400                           ;main.c: 1716: }
  4401                           ;main.c: 1718: else
  4402  002B60  0103               	movlb	_M shr (0+8)
  4403  002B62  A106               	btfss	_M& (0+255),0,b
  4404  002B64  D004               	goto	l366
  4405                           ;main.c: 1720: {
  4406  002B66  0100               	movlb	_DtCO shr (0+8)
  4407  002B68  B37D               	btfsc	_DtCO& (0+255),1,b
  4408  002B6A  D830               	call	_SetRozruch	;wreg free
  4409                           ;main.c: 1722: }
  4410  002B6C  0012               	return	
  4411  002B6E                     l366:
  4412                           ;main.c: 1723: else
  4413  002B6E  0103               	movlb	_M shr (0+8)
  4414  002B70  A506               	btfss	_M& (0+255),2,b
  4415  002B72  D004               	goto	l369
  4416                           ;main.c: 1725: {
  4417  002B74  0100               	movlb	_DtCO shr (0+8)
  4418  002B76  B77D               	btfsc	_DtCO& (0+255),3,b
  4419  002B78  D829               	call	_SetRozruch	;wreg free
  4420                           ;main.c: 1727: }
  4421  002B7A  0012               	return	
  4422  002B7C                     l369:
  4423                           ;main.c: 1728: else
  4424  002B7C  0103               	movlb	_M shr (0+8)
  4425  002B7E  B706               	btfsc	_M& (0+255),3,b
  4426  002B80  D7AE               	goto	L39
  4427                           ;main.c: 1730: {
  4428                           ;main.c: 1732: {
  4429                           ;main.c: 1734: M.BL15=0;
  4430                           ;main.c: 1735: SetRozruch();
  4431                           ;main.c: 1736: }
  4432                           ;main.c: 1738: else
  4433  002B82  0103               	movlb	_M shr (0+8)
  4434  002B84  B906               	btfsc	_M& (0+255),4,b
  4435  002B86  D7A8               	goto	L40
  4436                           ;main.c: 1740: {
  4437                           ;main.c: 1742: {
  4438                           ;main.c: 1744: M.BL15=0;
  4439                           ;main.c: 1745: SetRozruch();
  4440                           ;main.c: 1746: }
  4441                           ;main.c: 1748: else
  4442  002B88  0103               	movlb	_M shr (0+8)
  4443  002B8A  AB06               	btfss	_M& (0+255),5,b
  4444  002B8C  D009               	goto	l378
  4445  002B8E  0100               	movlb	_DtCO shr (0+8)
  4446  002B90  A37D               	btfss	_DtCO& (0+255),1,b
  4447  002B92  D006               	goto	l378
  4448  002B94  0103               	movlb	(_M+2) shr (0+8)
  4449  002B96  B708               	btfsc	(_M+2)& (0+255),3,b
  4450  002B98  D003               	goto	l378
  4451  002B9A  0103               	movlb	(_M+2) shr (0+8)
  4452  002B9C  A908               	btfss	(_M+2)& (0+255),4,b
  4453                           ;main.c: 1750: {
  4454  002B9E  D016               	goto	_SetRozruch	;wreg free
  4455                           ;main.c: 1752: }
  4456  002BA0                     l378:
  4457                           ;main.c: 1753: else
  4458  002BA0  0103               	movlb	_M shr (0+8)
  4459  002BA2  AD06               	btfss	_M& (0+255),6,b
  4460  002BA4  D7B8               	goto	l356
  4461  002BA6  0100               	movlb	_DtCO shr (0+8)
  4462  002BA8  AD7D               	btfss	_DtCO& (0+255),6,b
  4463  002BAA  D7B5               	goto	l356
  4464  002BAC  0103               	movlb	(_M+2) shr (0+8)
  4465  002BAE  B708               	btfsc	(_M+2)& (0+255),3,b
  4466  002BB0  D7B2               	goto	l356
  4467  002BB2                     L48:
  4468  002BB2  0103               	movlb	(_M+2) shr (0+8)
  4469  002BB4  A908               	btfss	(_M+2)& (0+255),4,b
  4470                           ;main.c: 1755: {
  4471  002BB6  D00A               	goto	_SetRozruch	;wreg free
  4472                           ;main.c: 1757: }
  4473  002BB8  D7AE               	goto	l356
  4474                           ;main.c: 1758: else
  4475                           ;main.c: 1760: {
  4476                           ;main.c: 1762: M.BL15=0;
  4477                           ;main.c: 1763: SetRozruch();
  4478                           ;main.c: 1764: }
  4479  002BBA                     l333:
  4480  002BBA  C2BC  FFE8         	movff	_DtKNF+14,wreg
  4481  002BBE  0A00               	xorlw	0
  4482  002BC0  E101 D758          	bz	l335
  4483  002BC4  0A03               	xorlw	3
  4484  002BC6  E101 D755          	bz	l335
  4485  002BCA  D7AC               	goto	l359
  4486                           ;main.c: 1769: }
  4487  002BCC                     __end_of_DecRozruch:
  4488                           ;main.c: 1771: void SetRozruch(void)
  4489                           ;main.c: 1772: {
  4490  002BCC                     _SetRozruch:
  4491  000000                     
  4492                           ;main.c: 1773: M._BLOKUJ_3M=0;
  4493  002BCC  0103               	movlb	(_M+2) shr (0+8)
  4494  002BCE  9708               	bcf	(_M+2)& (0+255),3,b
  4495                           ;main.c: 1774: M.BL3=0;
  4496  002BD0  6B17               	clrf	(_M+17)& (0+255),b
  4497                           ;main.c: 1775: EndL3();
  4498  002BD2  EC9B  F003         	call	_EndL3	;wreg free
  4499                           ;main.c: 1776: M._RUSZ_48=0;
  4500  002BD6  0103               	movlb	(_M+1) shr (0+8)
  4501  002BD8  9907               	bcf	(_M+1)& (0+255),4,b
  4502                           ;main.c: 1777: M.R48=0;
  4503  002BDA  6B15               	clrf	(_M+15)& (0+255),b
  4504                           ;main.c: 1778: M._RUSZ_48Z3=0;
  4505  002BDC  9B07               	bcf	(_M+1)& (0+255),5,b
  4506                           ;main.c: 1779: M.R48Z3=0;
  4507  002BDE  6B16               	clrf	(_M+16)& (0+255),b
  4508                           ;main.c: 1780: M._VWYBIEG=0;
  4509  002BE0  9F07               	bcf	(_M+1)& (0+255),7,b
  4510                           ;main.c: 1781: M._DE_VNT=0;
  4511  002BE2  9F0A               	bcf	(_M+4)& (0+255),7,b
  4512                           ;main.c: 1782: M.VWB=0;
  4513  002BE4  6B1F               	clrf	(_M+25)& (0+255),b
  4514                           ;main.c: 1784: M._KCW_PMP=0;
  4515  002BE6  9D0A               	bcf	(_M+4)& (0+255),6,b
  4516                           ;main.c: 1785: M.WYL=0;
  4517  002BE8  6B19               	clrf	(_M+19)& (0+255),b
  4518                           ;main.c: 1786: M.RPR=0;
  4519  002BEA  6B1A               	clrf	(_M+20)& (0+255),b
  4520                           ;main.c: 1787: M._WYLACZ=0;
  4521  002BEC  9307               	bcf	(_M+1)& (0+255),1,b
  4522                           ;main.c: 1788: M._HWB_CW=0;
  4523  002BEE  930E               	bcf	(_M+8)& (0+255),1,b
  4524                           ;main.c: 1789: M._RUSZ_POMPE=0;
  4525  002BF0  9508               	bcf	(_M+2)& (0+255),2,b
  4526                           ;main.c: 1790: M._ROZRUCH=1;
  4527  002BF2  8707               	bsf	(_M+1)& (0+255),3,b
  4528                           ;main.c: 1791: M.ROZ=0;
  4529  002BF4  6B14               	clrf	(_M+14)& (0+255),b
  4530                           ;main.c: 1793: }
  4531  002BF6  0012               	return	
  4532  002BF8                     __end_of_SetRozruch:
  4533                           ;main.c: 1797: void DecWylacz(void)
  4534                           ;main.c: 1798: {
  4535  002BF8                     _DecWylacz:
  4536  000000                     
  4537                           ;main.c: 1799: switch(DtKNF.tpkt)
  4538  002BF8  D086               	goto	l386
  4539  002BFA                     l388:
  4540                           ;main.c: 1802: case 3:
  4541  002BFA  0103               	movlb	(_M+1) shr (0+8)
  4542  002BFC  B307               	btfsc	(_M+1)& (0+255),1,b
  4543  002BFE  0012               	return	
  4544                           ;main.c: 1805: if(M._ROZRUCH||RD0)
  4545  002C00  B707               	btfsc	(_M+1)& (0+255),3,b
  4546  002C02  D002               	goto	u7530
  4547  002C04  A083               	btfss	3971,0,c	;volatile
  4548  002C06  0012               	return	
  4549  002C08                     u7530:
  4550                           ;main.c: 1806: {
  4551  002C08  0103               	movlb	_M shr (0+8)
  4552  002C0A  A306               	btfss	_M& (0+255),1,b
  4553  002C0C  B706               	btfsc	_M& (0+255),3,b
  4554  002C0E  D011               	goto	l391
  4555  002C10  B106               	btfsc	_M& (0+255),0,b
  4556  002C12  D00F               	goto	l391
  4557  002C14  0103               	movlb	_M shr (0+8)
  4558  002C16  B506               	btfsc	_M& (0+255),2,b
  4559  002C18  D00C               	goto	l391
  4560  002C1A  0103               	movlb	_M shr (0+8)
  4561  002C1C  B906               	btfsc	_M& (0+255),4,b
  4562  002C1E  D009               	goto	l391
  4563  002C20  0103               	movlb	_M shr (0+8)
  4564  002C22  BB06               	btfsc	_M& (0+255),5,b
  4565  002C24  D006               	goto	l391
  4566  002C26  0103               	movlb	_M shr (0+8)
  4567  002C28  BD06               	btfsc	_M& (0+255),6,b
  4568  002C2A  D003               	goto	l391
  4569  002C2C  0103               	movlb	_M shr (0+8)
  4570  002C2E  AF06               	btfss	_M& (0+255),7,b
  4571                           ;main.c: 1808: {
  4572  002C30  D0DD               	goto	_SetWylacz	;wreg free
  4573                           ;main.c: 1810: return;
  4574  002C32                     l391:
  4575                           ;main.c: 1811: }
  4576  002C32  0103               	movlb	(_M+1) shr (0+8)
  4577  002C34  AD07               	btfss	(_M+1)& (0+255),6,b
  4578  002C36  B108               	btfsc	(_M+2)& (0+255),0,b
  4579  002C38  D0D9               	goto	_SetWylacz
  4580  002C3A  0103               	movlb	(_M+3) shr (0+8)
  4581  002C3C  BD09               	btfsc	(_M+3)& (0+255),6,b
  4582  002C3E  D0D6               	goto	_SetWylacz
  4583  002C40  0103               	movlb	(_M+3) shr (0+8)
  4584  002C42  B709               	btfsc	(_M+3)& (0+255),3,b
  4585  002C44  D0D3               	goto	_SetWylacz
  4586  002C46  0103               	movlb	(_M+3) shr (0+8)
  4587  002C48  B909               	btfsc	(_M+3)& (0+255),4,b
  4588  002C4A  D0D0               	goto	_SetWylacz
  4589  002C4C  0103               	movlb	(_M+2) shr (0+8)
  4590  002C4E  B508               	btfsc	(_M+2)& (0+255),2,b
  4591  002C50  D0CD               	goto	_SetWylacz
  4592  002C52  0103               	movlb	(_M+3) shr (0+8)
  4593  002C54  BF09               	btfsc	(_M+3)& (0+255),7,b
  4594  002C56  D0CA               	goto	_SetWylacz
  4595  002C58  0103               	movlb	(_M+4) shr (0+8)
  4596  002C5A  B10A               	btfsc	(_M+4)& (0+255),0,b
  4597                           ;main.c: 1813: {
  4598  002C5C  D0C7               	goto	_SetWylacz	;wreg free
  4599                           ;main.c: 1815: }
  4600                           ;main.c: 1816: else
  4601  002C5E  0103               	movlb	_M shr (0+8)
  4602  002C60  A306               	btfss	_M& (0+255),1,b
  4603  002C62  D004               	goto	l394
  4604  002C64                     L51:
  4605                           ;main.c: 1818: {
  4606  002C64  0100               	movlb	_DtCW shr (0+8)
  4607  002C66  B56E               	btfsc	_DtCW& (0+255),2,b
  4608  002C68  D0C1               	goto	_SetWylacz
  4609  002C6A  D049               	goto	L45
  4610                           ;main.c: 1820: }
  4611  002C6C                     l394:
  4612                           ;main.c: 1821: else
  4613  002C6C  0103               	movlb	_M shr (0+8)
  4614  002C6E  A706               	btfss	_M& (0+255),3,b
  4615  002C70  D004               	goto	l397
  4616                           ;main.c: 1823: {
  4617  002C72  0100               	movlb	(_DtCO+1) shr (0+8)
  4618  002C74  A37E               	btfss	(_DtCO+1)& (0+255),1,b
  4619  002C76  D8BA               	call	_SetWylacz	;wreg free
  4620                           ;main.c: 1825: }
  4621  002C78  0012               	return	
  4622  002C7A                     l397:
  4623                           ;main.c: 1826: else
  4624  002C7A  0103               	movlb	_M shr (0+8)
  4625  002C7C  A106               	btfss	_M& (0+255),0,b
  4626  002C7E  D006               	goto	l400
  4627                           ;main.c: 1828: {
  4628  002C80  0E13               	movlw	19
  4629  002C82  EC1C  F07A         	call	_RdPrt
  4630  002C86  B0D8               	btfsc	status,0,c
  4631  002C88  D8B1               	call	_SetWylacz	;wreg free
  4632                           ;main.c: 1830: }
  4633  002C8A  0012               	return	
  4634  002C8C                     l400:
  4635                           ;main.c: 1831: else
  4636  002C8C  0103               	movlb	_M shr (0+8)
  4637  002C8E  A506               	btfss	_M& (0+255),2,b
  4638  002C90  D004               	goto	l403
  4639                           ;main.c: 1833: {
  4640  002C92  0100               	movlb	_DtCO shr (0+8)
  4641  002C94  B97D               	btfsc	_DtCO& (0+255),4,b
  4642  002C96  D8AA               	call	_SetWylacz	;wreg free
  4643                           ;main.c: 1835: }
  4644  002C98  0012               	return	
  4645  002C9A                     l403:
  4646                           ;main.c: 1836: else
  4647  002C9A  0103               	movlb	_M shr (0+8)
  4648  002C9C  B906               	btfsc	_M& (0+255),4,b
  4649  002C9E  D7E2               	goto	L51
  4650                           ;main.c: 1838: {
  4651                           ;main.c: 1840: }
  4652                           ;main.c: 1841: else
  4653  002CA0  0103               	movlb	_M shr (0+8)
  4654  002CA2  AB06               	btfss	_M& (0+255),5,b
  4655  002CA4  D01A               	goto	l436
  4656  002CA6  0E13               	movlw	19
  4657  002CA8  EC1C  F07A         	call	_RdPrt
  4658  002CAC  E206               	bc	u8040
  4659  002CAE  0103               	movlb	(_M+2) shr (0+8)
  4660  002CB0  B708               	btfsc	(_M+2)& (0+255),3,b
  4661  002CB2  D003               	goto	u8040
  4662  002CB4  0103               	movlb	(_M+2) shr (0+8)
  4663  002CB6  A908               	btfss	(_M+2)& (0+255),4,b
  4664  002CB8  D010               	goto	l436
  4665  002CBA                     u8040:
  4666                           ;main.c: 1843: {
  4667  002CBA  0E13               	movlw	19
  4668  002CBC  EC1C  F07A         	call	_RdPrt
  4669  002CC0  E30B               	bnc	l410
  4670  002CC2  0103               	movlb	(_M+2) shr (0+8)
  4671  002CC4  B708               	btfsc	(_M+2)& (0+255),3,b
  4672  002CC6  D092               	goto	_SetWylacz
  4673  002CC8  0103               	movlb	(_M+2) shr (0+8)
  4674  002CCA  B908               	btfsc	(_M+2)& (0+255),4,b
  4675  002CCC  D08F               	goto	_SetWylacz
  4676                           ;main.c: 1845: {
  4677  002CCE  0103               	movlb	(_M+2) shr (0+8)
  4678  002CD0  8708               	bsf	(_M+2)& (0+255),3,b
  4679                           ;main.c: 1847: M.BL3=0;
  4680  002CD2  6B17               	clrf	(_M+17)& (0+255),b
  4681                           ;main.c: 1848: PrintL3();
  4682  002CD4  EC93  F003         	call	_PrintL3	;wreg free
  4683  002CD8                     l410:
  4684                           ;main.c: 1849: }
  4685  002CD8  D089               	goto	_SetWylacz	;wreg free
  4686                           ;main.c: 1851: }
  4687                           ;main.c: 1912: }
  4688                           ;main.c: 1914: }
  4689  002CDA                     l436:
  4690                           ;main.c: 1915: else
  4691  002CDA  0103               	movlb	_M shr (0+8)
  4692  002CDC  AD06               	btfss	_M& (0+255),6,b
  4693  002CDE  D009               	goto	l439
  4694  002CE0  0100               	movlb	_DtCO shr (0+8)
  4695  002CE2  BF7D               	btfsc	_DtCO& (0+255),7,b
  4696  002CE4  D083               	goto	_SetWylacz
  4697  002CE6  0103               	movlb	(_M+2) shr (0+8)
  4698  002CE8  B708               	btfsc	(_M+2)& (0+255),3,b
  4699  002CEA  D080               	goto	_SetWylacz
  4700  002CEC  0103               	movlb	(_M+2) shr (0+8)
  4701  002CEE  B908               	btfsc	(_M+2)& (0+255),4,b
  4702                           ;main.c: 1917: {
  4703  002CF0  D07D               	goto	_SetWylacz	;wreg free
  4704                           ;main.c: 1919: }
  4705  002CF2                     l439:
  4706                           ;main.c: 1920: else
  4707  002CF2  0103               	movlb	_M shr (0+8)
  4708  002CF4  AF06               	btfss	_M& (0+255),7,b
  4709  002CF6  0012               	return	
  4710  002CF8  0100               	movlb	_DtCW shr (0+8)
  4711  002CFA  BD6E               	btfsc	_DtCW& (0+255),6,b
  4712  002CFC  D077               	goto	_SetWylacz
  4713  002CFE                     L45:
  4714  002CFE  0100               	movlb	(_DtCO+1) shr (0+8)
  4715  002D00  B37E               	btfsc	(_DtCO+1)& (0+255),1,b
  4716  002D02  0012               	return	
  4717                           ;main.c: 1922: {
  4718  002D04  D073               	goto	_SetWylacz	;wreg free
  4719                           ;main.c: 1924: }
  4720  002D06                     l386:
  4721  002D06  C2BC  FFE8         	movff	_DtKNF+14,wreg
  4722  002D0A  0A00               	xorlw	0
  4723  002D0C  E101 D775          	bz	l388
  4724  002D10  0A03               	xorlw	3
  4725  002D12  E101 D772          	bz	l388
  4726                           ;main.c: 1864: }
  4727                           ;main.c: 1866: {
  4728  002D16  0103               	movlb	(_M+1) shr (0+8)
  4729  002D18  B307               	btfsc	(_M+1)& (0+255),1,b
  4730                           ;main.c: 1929: }
  4731  002D1A  0012               	return	
  4732                           ;main.c: 1852: else
  4733                           ;main.c: 1854: {
  4734                           ;main.c: 1856: }
  4735                           ;main.c: 1857: else
  4736                           ;main.c: 1859: {
  4737                           ;main.c: 1861: }
  4738                           ;main.c: 1868: if(M._ROZRUCH||RD0)
  4739  002D1C  B707               	btfsc	(_M+1)& (0+255),3,b
  4740  002D1E  D002               	goto	u8250
  4741  002D20  A083               	btfss	3971,0,c	;volatile
  4742  002D22  0012               	return	
  4743  002D24                     u8250:
  4744                           ;main.c: 1869: {
  4745  002D24  0103               	movlb	_M shr (0+8)
  4746  002D26  A306               	btfss	_M& (0+255),1,b
  4747  002D28  B706               	btfsc	_M& (0+255),3,b
  4748  002D2A  D011               	goto	l418
  4749  002D2C  B106               	btfsc	_M& (0+255),0,b
  4750  002D2E  D00F               	goto	l418
  4751  002D30  0103               	movlb	_M shr (0+8)
  4752  002D32  B506               	btfsc	_M& (0+255),2,b
  4753  002D34  D00C               	goto	l418
  4754  002D36  0103               	movlb	_M shr (0+8)
  4755  002D38  B906               	btfsc	_M& (0+255),4,b
  4756  002D3A  D009               	goto	l418
  4757  002D3C  0103               	movlb	_M shr (0+8)
  4758  002D3E  BB06               	btfsc	_M& (0+255),5,b
  4759  002D40  D006               	goto	l418
  4760  002D42  0103               	movlb	_M shr (0+8)
  4761  002D44  BD06               	btfsc	_M& (0+255),6,b
  4762  002D46  D003               	goto	l418
  4763  002D48  0103               	movlb	_M shr (0+8)
  4764  002D4A  AF06               	btfss	_M& (0+255),7,b
  4765                           ;main.c: 1871: {
  4766  002D4C  D04F               	goto	_SetWylacz	;wreg free
  4767                           ;main.c: 1873: return;
  4768  002D4E                     l418:
  4769                           ;main.c: 1874: }
  4770  002D4E  0103               	movlb	(_M+1) shr (0+8)
  4771  002D50  AD07               	btfss	(_M+1)& (0+255),6,b
  4772  002D52  B108               	btfsc	(_M+2)& (0+255),0,b
  4773  002D54  D04B               	goto	_SetWylacz
  4774  002D56  0103               	movlb	(_M+3) shr (0+8)
  4775  002D58  BD09               	btfsc	(_M+3)& (0+255),6,b
  4776  002D5A  D048               	goto	_SetWylacz
  4777  002D5C  0103               	movlb	(_M+3) shr (0+8)
  4778  002D5E  B709               	btfsc	(_M+3)& (0+255),3,b
  4779  002D60  D045               	goto	_SetWylacz
  4780  002D62  0103               	movlb	(_M+3) shr (0+8)
  4781  002D64  B909               	btfsc	(_M+3)& (0+255),4,b
  4782  002D66  D042               	goto	_SetWylacz
  4783  002D68  0103               	movlb	(_M+2) shr (0+8)
  4784  002D6A  B508               	btfsc	(_M+2)& (0+255),2,b
  4785  002D6C  D03F               	goto	_SetWylacz
  4786  002D6E  0103               	movlb	(_M+3) shr (0+8)
  4787  002D70  BF09               	btfsc	(_M+3)& (0+255),7,b
  4788  002D72  D03C               	goto	_SetWylacz
  4789  002D74  0103               	movlb	(_M+4) shr (0+8)
  4790  002D76  B10A               	btfsc	(_M+4)& (0+255),0,b
  4791                           ;main.c: 1876: {
  4792  002D78  D039               	goto	_SetWylacz	;wreg free
  4793                           ;main.c: 1878: }
  4794                           ;main.c: 1879: else
  4795  002D7A  0103               	movlb	_M shr (0+8)
  4796  002D7C  B306               	btfsc	_M& (0+255),1,b
  4797  002D7E  D772               	goto	L51
  4798                           ;main.c: 1881: {
  4799                           ;main.c: 1883: }
  4800                           ;main.c: 1884: else
  4801  002D80  0103               	movlb	_M shr (0+8)
  4802  002D82  A706               	btfss	_M& (0+255),3,b
  4803  002D84  D004               	goto	l424
  4804                           ;main.c: 1886: {
  4805  002D86  0100               	movlb	(_DtCO+1) shr (0+8)
  4806  002D88  A37E               	btfss	(_DtCO+1)& (0+255),1,b
  4807  002D8A  D830               	call	_SetWylacz	;wreg free
  4808                           ;main.c: 1888: }
  4809  002D8C  0012               	return	
  4810  002D8E                     l424:
  4811                           ;main.c: 1889: else
  4812  002D8E  0103               	movlb	_M shr (0+8)
  4813  002D90  A106               	btfss	_M& (0+255),0,b
  4814  002D92  D006               	goto	l427
  4815                           ;main.c: 1891: {
  4816  002D94  0E13               	movlw	19
  4817  002D96  EC1C  F07A         	call	_RdPrt
  4818  002D9A  B0D8               	btfsc	status,0,c
  4819  002D9C  D827               	call	_SetWylacz	;wreg free
  4820                           ;main.c: 1893: }
  4821  002D9E  0012               	return	
  4822  002DA0                     l427:
  4823                           ;main.c: 1894: else
  4824  002DA0  0103               	movlb	_M shr (0+8)
  4825  002DA2  A506               	btfss	_M& (0+255),2,b
  4826  002DA4  D004               	goto	l430
  4827                           ;main.c: 1896: {
  4828  002DA6  0100               	movlb	_DtCO shr (0+8)
  4829  002DA8  B97D               	btfsc	_DtCO& (0+255),4,b
  4830  002DAA  D820               	call	_SetWylacz	;wreg free
  4831                           ;main.c: 1898: }
  4832  002DAC  0012               	return	
  4833  002DAE                     l430:
  4834                           ;main.c: 1899: else
  4835  002DAE  0103               	movlb	_M shr (0+8)
  4836  002DB0  B906               	btfsc	_M& (0+255),4,b
  4837  002DB2  D758               	goto	L51
  4838                           ;main.c: 1901: {
  4839                           ;main.c: 1903: }
  4840                           ;main.c: 1904: else
  4841  002DB4  0103               	movlb	_M shr (0+8)
  4842  002DB6  AB06               	btfss	_M& (0+255),5,b
  4843  002DB8  D790               	goto	l436
  4844  002DBA  0E13               	movlw	19
  4845  002DBC  EC1C  F07A         	call	_RdPrt
  4846  002DC0  E206               	bc	u8760
  4847  002DC2  0103               	movlb	(_M+2) shr (0+8)
  4848  002DC4  B708               	btfsc	(_M+2)& (0+255),3,b
  4849  002DC6  D003               	goto	u8760
  4850  002DC8  0103               	movlb	(_M+2) shr (0+8)
  4851  002DCA  A908               	btfss	(_M+2)& (0+255),4,b
  4852  002DCC  D786               	goto	l436
  4853  002DCE                     u8760:
  4854                           ;main.c: 1906: {
  4855  002DCE  0E13               	movlw	19
  4856  002DD0  EC1C  F07A         	call	_RdPrt
  4857  002DD4  E30B               	bnc	l437
  4858  002DD6  0103               	movlb	(_M+2) shr (0+8)
  4859  002DD8  B708               	btfsc	(_M+2)& (0+255),3,b
  4860  002DDA  D008               	goto	_SetWylacz
  4861  002DDC  0103               	movlb	(_M+2) shr (0+8)
  4862  002DDE  B908               	btfsc	(_M+2)& (0+255),4,b
  4863  002DE0  D005               	goto	_SetWylacz
  4864                           ;main.c: 1908: {
  4865  002DE2  0103               	movlb	(_M+2) shr (0+8)
  4866  002DE4  8708               	bsf	(_M+2)& (0+255),3,b
  4867                           ;main.c: 1910: M.BL3=0;
  4868  002DE6  6B17               	clrf	(_M+17)& (0+255),b
  4869                           ;main.c: 1911: PrintL3();
  4870  002DE8  EC93  F003         	call	_PrintL3	;wreg free
  4871  002DEC                     l437:
  4872  002DEC                     __end_of_DecWylacz:
  4873                           ;main.c: 1931: void SetWylacz(void)
  4874                           ;main.c: 1932: {
  4875  002DEC                     _SetWylacz:
  4876  000000                     
  4877                           ;main.c: 1933: GrzejOFF();
  4878  002DEC  D8C8               	call	_GrzejOFF	;wreg free
  4879                           ;main.c: 1936: switch(DtKNF.tpkt)
  4880  002DEE  D006               	goto	l444
  4881  002DF0                     l446:
  4882                           ;main.c: 1939: case 3:
  4883  002DF0  B283               	btfsc	3971,1,c	;volatile
  4884  002DF2  D00C               	goto	l443
  4885  002DF4                     u8950:
  4886                           ;main.c: 1951: {
  4887  002DF4  0103               	movlb	(_M+2) shr (0+8)
  4888  002DF6  8908               	bsf	(_M+2)& (0+255),4,b
  4889                           ;main.c: 1953: M.BL15=0;
  4890  002DF8  6B18               	clrf	(_M+18)& (0+255),b
  4891                           ;main.c: 1954: }
  4892  002DFA  D008               	goto	l443
  4893  002DFC                     l444:
  4894  002DFC  C2BC  FFE8         	movff	_DtKNF+14,wreg
  4895  002E00  0A00               	xorlw	0
  4896  002E02  E0F6               	bz	l446
  4897  002E04  0A03               	xorlw	3
  4898  002E06  E0F4               	bz	l446
  4899                           ;main.c: 1942: {
  4900                           ;main.c: 1944: M.BL15=0;
  4901                           ;main.c: 1945: }
  4902                           ;main.c: 1947: }
  4903                           ;main.c: 1949: {
  4904  002E08  A283               	btfss	3971,1,c	;volatile
  4905  002E0A  D7F4               	goto	u8950
  4906  002E0C                     l443:
  4907                           ;main.c: 1959: M._WYLACZ=1;
  4908  002E0C  0103               	movlb	(_M+1) shr (0+8)
  4909  002E0E  8307               	bsf	(_M+1)& (0+255),1,b
  4910                           ;main.c: 1960: if(RD3) M._VWYBIEG=1;
  4911  002E10  B683               	btfsc	3971,3,c	;volatile
  4912  002E12  8F07               	bsf	(_M+1)& (0+255),7,b
  4913                           ;main.c: 1961: M.ROZ=0;
  4914  002E14  0103               	movlb	(_M+14) shr (0+8)
  4915  002E16  6B14               	clrf	(_M+14)& (0+255),b
  4916                           ;main.c: 1962: M.MNM=0;
  4917  002E18  6B1D               	clrf	(_M+23)& (0+255),b
  4918                           ;main.c: 1963: M._ROZRUCH=0;
  4919  002E1A  9707               	bcf	(_M+1)& (0+255),3,b
  4920                           ;main.c: 1964: M._RUN_MNMOD=0;
  4921  002E1C  9B0A               	bcf	(_M+4)& (0+255),5,b
  4922                           ;main.c: 1967: DtCO._on_DZ_CO=0;
  4923  002E1E  0100               	movlb	_DtCO shr (0+8)
  4924  002E20  9B7D               	bcf	_DtCO& (0+255),5,b
  4925                           ;main.c: 1968: SetPrt(9,0);
  4926  002E22  0100               	movlb	__Lparam shr (0+8)
  4927  002E24  6BAD               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  4928  002E26  0E09               	movlw	9
  4929  002E28  EC2D  F07A         	call	_SetPrt
  4930                           ;main.c: 1969: DtCW._on_DZ_CW=0;
  4931  002E2C  0100               	movlb	_DtCW shr (0+8)
  4932  002E2E  996E               	bcf	_DtCW& (0+255),4,b
  4933                           ;main.c: 1970: SetPrt(10,0);
  4934  002E30  0100               	movlb	__Lparam shr (0+8)
  4935  002E32  6BAD               	clrf	?_SetPrt^(__Lparam& (0+65280)),b
  4936  002E34  0E0A               	movlw	10
  4937  002E36  EF2D  F07A         	goto	_SetPrt
  4938                           ;main.c: 1971: }
  4939  002E3A                     __end_of_SetWylacz:
  4940                           ;main.c: 1974: void FunkcjaSerwisowa(void)
  4941                           ;main.c: 1975: {
  4942  002E3A                     _FunkcjaSerwisowa:
  4943  000000                     
  4944                           ;main.c: 1976: if(M._AKTYWNE_KNF)
  4945  002E3A  0103               	movlb	(_M+3) shr (0+8)
  4946  002E3C  A309               	btfss	(_M+3)& (0+255),1,b
  4947  002E3E  D02D               	goto	l455
  4948                           ;main.c: 1977: {
  4949  002E40  6B20               	clrf	(_M+26)& (0+255),b
  4950                           ;main.c: 1979: M._AKTYWNE_SRW=0;
  4951  002E42  9D08               	bcf	(_M+2)& (0+255),6,b
  4952                           ;main.c: 1980: }
  4953  002E44  0012               	return	
  4954                           ;main.c: 1981: else
  4955  002E46                     l456:
  4956                           ;main.c: 1983: {
  4957                           ;main.c: 1985: {
  4958  002E46  0100               	movlb	(_PFN+1) shr (0+8)
  4959  002E48  5168               	movf	(_PFN+1)& (0+255),w,b
  4960  002E4A  0A03               	xorlw	3
  4961  002E4C  1169               	iorwf	(_PFN+2)& (0+255),w,b
  4962  002E4E  A4D8               	btfss	status,2,c
  4963  002E50  0012               	return	
  4964  002E52  0E01               	movlw	1
  4965  002E54  0100               	movlb	__Lparam shr (0+8)
  4966  002E56  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  4967  002E58  C37B  FFE8         	movff	_RSDT1+78,wreg
  4968  002E5C  ECB9  F003         	call	_GetBit2
  4969  002E60  A0D8               	btfss	status,0,c
  4970  002E62  0012               	return	
  4971                           ;main.c: 1987: {
  4972  002E64  0E01               	movlw	1
  4973  002E66  CFE8 F320          	movff	wreg,_M+26
  4974                           ;main.c: 1989: M._AKTYWNE_SRW=1;
  4975  002E6A  0103               	movlb	(_M+2) shr (0+8)
  4976  002E6C  8D08               	bsf	(_M+2)& (0+255),6,b
  4977                           ;main.c: 1990: StartRTM(1);
  4978  002E6E  EF6F  F07E         	goto	_StartRTM
  4979                           ;main.c: 1991: }
  4980  002E72                     l458:
  4981                           ;main.c: 1993: }
  4982                           ;main.c: 1995: {
  4983  002E72  0100               	movlb	(_PFN+1) shr (0+8)
  4984  002E74  5168               	movf	(_PFN+1)& (0+255),w,b
  4985  002E76  0A03               	xorlw	3
  4986  002E78  1169               	iorwf	(_PFN+2)& (0+255),w,b
  4987  002E7A  E10B               	bnz	l459
  4988  002E7C  0100               	movlb	_PFN shr (0+8)
  4989  002E7E  BB67               	btfsc	_PFN& (0+255),5,b
  4990  002E80  D008               	goto	l459
  4991  002E82  0E01               	movlw	1
  4992  002E84  EC87  F07E         	call	_RTM
  4993  002E88  6E00               	movwf	btemp,c
  4994  002E8A  0E3C               	movlw	60
  4995  002E8C  5C00               	subwf	btemp,w,c
  4996  002E8E  A0D8               	btfss	status,0,c
  4997  002E90  0012               	return	
  4998  002E92                     l459:
  4999                           ;main.c: 1998: else
  5000  002E92  0103               	movlb	(_M+26) shr (0+8)
  5001  002E94  6B20               	clrf	(_M+26)& (0+255),b
  5002                           ;main.c: 2001: M._AKTYWNE_SRW=0;
  5003  002E96  9D08               	bcf	(_M+2)& (0+255),6,b
  5004                           ;main.c: 2002: }
  5005  002E98  0012               	return	
  5006  002E9A                     l455:
  5007  002E9A  C320  FFE8         	movff	_M+26,wreg
  5008  002E9E  0A00               	xorlw	0
  5009  002EA0  E0D2               	bz	l456
  5010  002EA2  0A01               	xorlw	1
  5011  002EA4  E0E6               	bz	l458
  5012  002EA6  0012               	return	
  5013                           ;main.c: 2006: }
  5014  002EA8                     __end_of_FunkcjaSerwisowa:
  5015                           ;main.c: 2011: void BlokadaL3(void)
  5016                           ;main.c: 2012: {
  5017  002EA8                     _BlokadaL3:
  5018  000000                     
  5019                           ;main.c: 2013: switch(M.BL3)
  5020  002EA8  D02D               	goto	l463
  5021  002EAA                     l464:
  5022                           ;main.c: 2014: {
  5023                           ;main.c: 2016: {
  5024  002EAA  0E01               	movlw	1
  5025  002EAC  CFE8 F317          	movff	wreg,_M+17
  5026                           ;main.c: 2018: StartRTM(2);
  5027  002EB0  0E02               	movlw	2
  5028  002EB2  EC6F  F07E         	call	_StartRTM
  5029  002EB6                     l465:
  5030                           ;main.c: 2019: }
  5031                           ;main.c: 2021: {
  5032  002EB6  EC93  F003         	call	_PrintL3	;wreg free
  5033                           ;main.c: 2023: if((PFN.poz!=3&&!M._ZMKCOCW)||M._
      +                          pob_CW||(DtKNF.tpkt==0&&DtCW._wpz_CW))
  5034  002EBA  0100               	movlb	(_PFN+1) shr (0+8)
  5035  002EBC  5168               	movf	(_PFN+1)& (0+255),w,b
  5036  002EBE  0A03               	xorlw	3
  5037  002EC0  1169               	iorwf	(_PFN+2)& (0+255),w,b
  5038  002EC2  E003               	bz	u9081
  5039  002EC4  0103               	movlb	(_M+1) shr (0+8)
  5040  002EC6  A507               	btfss	(_M+1)& (0+255),2,b
  5041  002EC8  D00A               	goto	u9140
  5042  002ECA                     u9081:
  5043  002ECA  0103               	movlb	_M shr (0+8)
  5044  002ECC  B906               	btfsc	_M& (0+255),4,b
  5045  002ECE  D007               	goto	u9140
  5046  002ED0  EE02  F0BC         	lfsr	0,_DtKNF+14
  5047  002ED4  50EF               	movf	indf0,w,c
  5048  002ED6  E108               	bnz	l466
  5049  002ED8  0100               	movlb	_DtCW shr (0+8)
  5050  002EDA  A76E               	btfss	_DtCW& (0+255),3,b
  5051  002EDC  D005               	goto	l466
  5052  002EDE                     u9140:
  5053                           ;main.c: 2024: {
  5054  002EDE  0103               	movlb	(_M+2) shr (0+8)
  5055  002EE0  9708               	bcf	(_M+2)& (0+255),3,b
  5056                           ;main.c: 2026: M.BL3=0;
  5057  002EE2  6B17               	clrf	(_M+17)& (0+255),b
  5058                           ;main.c: 2027: EndL3();
  5059  002EE4  EC9B  F003         	call	_EndL3	;wreg free
  5060  002EE8                     l466:
  5061                           ;main.c: 2028: }
  5062  002EE8  0E02               	movlw	2
  5063  002EEA  EC87  F07E         	call	_RTM
  5064  002EEE  6E00               	movwf	btemp,c
  5065  002EF0  C2D8  FFE8         	movff	_DtKNF+42,wreg
  5066  002EF4  5C00               	subwf	btemp,w,c
  5067  002EF6  A0D8               	btfss	status,0,c
  5068  002EF8  0012               	return	
  5069                           ;main.c: 2031: M._BLOKUJ_3M=0;
  5070  002EFA  0103               	movlb	(_M+2) shr (0+8)
  5071  002EFC  9708               	bcf	(_M+2)& (0+255),3,b
  5072                           ;main.c: 2032: M.BL3=0;
  5073  002EFE  6B17               	clrf	(_M+17)& (0+255),b
  5074                           ;main.c: 2033: EndL3();
  5075  002F00  EF9B  F003         	goto	_EndL3	;wreg free
  5076                           ;main.c: 2034: }
  5077  002F04                     l463:
  5078  002F04  C317  FFE8         	movff	_M+17,wreg
  5079  002F08  0A00               	xorlw	0
  5080  002F0A  E0CF               	bz	l464
  5081  002F0C  0A01               	xorlw	1
  5082  002F0E  E0D3               	bz	l465
  5083  002F10  0012               	return	
  5084                           ;main.c: 2036: }
  5085  002F12                     __end_of_BlokadaL3:
  5086                           ;main.c: 2040: void Blokada15S(void)
  5087                           ;main.c: 2041: {
  5088  002F12                     _Blokada15S:
  5089  000000                     
  5090                           ;main.c: 2042: switch(M.BL15)
  5091  002F12  D023               	goto	l470
  5092  002F14                     l471:
  5093                           ;main.c: 2043: {
  5094                           ;main.c: 2045: {
  5095  002F14  0E01               	movlw	1
  5096  002F16  CFE8 F318          	movff	wreg,_M+18
  5097                           ;main.c: 2047: StartRTdS(4);
  5098  002F1A  0E04               	movlw	4
  5099  002F1C  EC33  F07E         	call	_StartRTdS
  5100  002F20                     l472:
  5101                           ;main.c: 2048: }
  5102                           ;main.c: 2050: {
  5103  002F20  0E04               	movlw	4
  5104  002F22  EC45  F07E         	call	_RTdS
  5105  002F26  6E00               	movwf	btemp,c
  5106  002F28  0E02               	movlw	2
  5107  002F2A  5C00               	subwf	btemp,w,c
  5108  002F2C  E308               	bnc	l473
  5109  002F2E  0100               	movlb	(_PFN+1) shr (0+8)
  5110  002F30  5168               	movf	(_PFN+1)& (0+255),w,b
  5111  002F32  0A03               	xorlw	3
  5112  002F34  1169               	iorwf	(_PFN+2)& (0+255),w,b
  5113  002F36  E003               	bz	l473
  5114                           ;main.c: 2052: {
  5115  002F38  0103               	movlb	(_M+2) shr (0+8)
  5116  002F3A  9908               	bcf	(_M+2)& (0+255),4,b
  5117                           ;main.c: 2054: M.BL15=0;
  5118  002F3C  6B18               	clrf	(_M+18)& (0+255),b
  5119  002F3E                     l473:
  5120                           ;main.c: 2055: }
  5121  002F3E  0E04               	movlw	4
  5122  002F40  EC45  F07E         	call	_RTdS
  5123  002F44  6E00               	movwf	btemp,c
  5124  002F46  0E96               	movlw	150
  5125  002F48  5C00               	subwf	btemp,w,c
  5126  002F4A  E203               	bc	l474
  5127  002F4C  0103               	movlb	_M shr (0+8)
  5128  002F4E  A506               	btfss	_M& (0+255),2,b
  5129  002F50  0012               	return	
  5130  002F52                     l474:
  5131                           ;main.c: 2057: M._BLOKUJ_15S=0;
  5132  002F52  0103               	movlb	(_M+2) shr (0+8)
  5133  002F54  9908               	bcf	(_M+2)& (0+255),4,b
  5134                           ;main.c: 2058: M.BL15=0;
  5135  002F56  6B18               	clrf	(_M+18)& (0+255),b
  5136                           ;main.c: 2059: }
  5137  002F58  0012               	return	
  5138  002F5A                     l470:
  5139  002F5A  C318  FFE8         	movff	_M+18,wreg
  5140  002F5E  0A00               	xorlw	0
  5141  002F60  E0D9               	bz	l471
  5142  002F62  0A01               	xorlw	1
  5143  002F64  E0DD               	bz	l472
  5144  002F66  0012               	return	
  5145                           ;main.c: 2061: }
  5146  002F68                     __end_of_Blokada15S:
  5147                           ;main.c: 2065: void GrzejON(void)
  5148                           ;main.c: 2066: {
  5149  002F68                     _GrzejON:
  5150  000000                     
  5151                           ;main.c: 2067: RD0=1;
  5152  002F68  8083               	bsf	3971,0,c	;volatile
  5153                           ;main.c: 2068: asm("nop");
  5154  002F6A  F000               	nop		;#
  5155                           ;main.c: 2069: asm("nop");
  5156  002F6C  F000               	nop		;#
  5157                           ;main.c: 2070: asm("nop");
  5158  002F6E  F000               	nop		;#
  5159                           ;main.c: 2071: asm("nop");
  5160  002F70  F000               	nop		;#
  5161                           ;main.c: 2072: asm("nop");
  5162  002F72  F000               	nop		;#
  5163                           ;main.c: 2073: asm("nop");
  5164  002F74  F000               	nop		;#
  5165                           ;main.c: 2074: asm("nop");
  5166  002F76  F000               	nop		;#
  5167                           ;main.c: 2075: asm("nop");
  5168  002F78  F000               	nop		;#
  5169                           ;main.c: 2076: RD3=1;
  5170  002F7A  8683               	bsf	3971,3,c	;volatile
  5171                           ;main.c: 2077: }
  5172  002F7C  0012               	return	
  5173  002F7E                     __end_of_GrzejON:
  5174                           ;main.c: 2081: void GrzejOFF(void)
  5175                           ;main.c: 2082: {
  5176  002F7E                     _GrzejOFF:
  5177  000000                     
  5178                           ;main.c: 2083: RD0=0;
  5179  002F7E  9083               	bcf	3971,0,c	;volatile
  5180                           ;main.c: 2084: }
  5181  002F80  0012               	return	
  5182  002F82                     __end_of_GrzejOFF:
  5183                           ;main.c: 2089: void Rozruch(void)
  5184                           ;main.c: 2090: {
  5185  002F82                     _Rozruch:
  5186  000000                     
  5187                           ;main.c: 2091: static unsigned char tim;
  5188  002F82  0E0E               	movlw	14
  5189  002F84  EC51  F07E         	call	_StartRTS
  5190                           ;main.c: 2094: StartRTM(5);
  5191  002F88  0E05               	movlw	5
  5192  002F8A  EC6F  F07E         	call	_StartRTM
  5193                           ;main.c: 2095: switch(M.ROZ)
  5194  002F8E  D108               	goto	l479
  5195  002F90                     l480:
  5196                           ;main.c: 2096: {
  5197                           ;main.c: 2099: {
  5198  002F90  EE02  F0C3         	lfsr	0,_DtKNF+21
  5199  002F94  50EF               	movf	indf0,w,c
  5200  002F96  E004               	bz	u9240
  5201  002F98  EE02  F0BC         	lfsr	0,_DtKNF+14
  5202  002F9C  50EF               	movf	indf0,w,c
  5203  002F9E  E103               	bnz	l481
  5204  002FA0                     u9240:
  5205                           ;main.c: 2101: {
  5206  002FA0  0103               	movlb	(_M+1) shr (0+8)
  5207  002FA2  B507               	btfsc	(_M+1)& (0+255),2,b
  5208  002FA4  0012               	return	
  5209  002FA6                     l481:
  5210                           ;main.c: 2103: }
  5211  002FA6  0E01               	movlw	1
  5212  002FA8  CFE8 F314          	movff	wreg,_M+14
  5213                           ;main.c: 2105: StartRTS(2);
  5214  002FAC  0E02               	movlw	2
  5215  002FAE  EC51  F07E         	call	_StartRTS
  5216  002FB2                     l483:
  5217                           ;main.c: 2106: }
  5218                           ;main.c: 2109: {
  5219  002FB2  EE02  F0C3         	lfsr	0,_DtKNF+21
  5220  002FB6  50EF               	movf	indf0,w,c
  5221                           ;main.c: 2111: {
  5222  002FB8  0E02               	movlw	2
  5223  002FBA  E125               	bnz	L28
  5224  002FBC  EC63  F07E         	call	_RTS
  5225  002FC0  6E00               	movwf	btemp,c
  5226  002FC2  0E01               	movlw	1
  5227  002FC4  5C00               	subwf	btemp,w,c
  5228  002FC6  A0D8               	btfss	status,0,c
  5229  002FC8  0012               	return	
  5230                           ;main.c: 2113: RD2=0;
  5231  002FCA  9483               	bcf	3971,2,c	;volatile
  5232                           ;main.c: 2114: if(!RdPrt(1))
  5233  002FCC  0E01               	movlw	1
  5234  002FCE  EC1C  F07A         	call	_RdPrt
  5235                           ;main.c: 2115: {
  5236  002FD2  0E02               	movlw	2
  5237  002FD4  E204               	bc	L29
  5238  002FD6  CFE8 F314          	movff	wreg,_M+14
  5239                           ;main.c: 2117: StartRTS(2);
  5240  002FDA  EF51  F07E         	goto	_StartRTS
  5241                           ;main.c: 2118: return;
  5242                           ;main.c: 2119: }
  5243  002FDE                     L29:
  5244  002FDE  EC63  F07E         	call	_RTS
  5245  002FE2  6E00               	movwf	btemp,c
  5246  002FE4  0E05               	movlw	5
  5247  002FE6  5C00               	subwf	btemp,w,c
  5248  002FE8  A0D8               	btfss	status,0,c
  5249  002FEA  0012               	return	
  5250                           ;main.c: 2121: M.ERR_BTY=0x05;
  5251  002FEC  0E05               	movlw	5
  5252  002FEE  CFE8 F313          	movff	wreg,_M+13
  5253                           ;main.c: 2122: PrintErr(0x05,1);
  5254  002FF2  0E01               	movlw	1
  5255  002FF4  0100               	movlb	__Lparam shr (0+8)
  5256  002FF6  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5257  002FF8  0E05               	movlw	5
  5258  002FFA  EC36  F003         	call	_PrintErr
  5259                           ;main.c: 2123: ToWriteESTAT();
  5260  002FFE  EC00  F07E         	call	_ToWriteESTAT	;wreg free
  5261                           ;main.c: 2124: ErrPTG();
  5262  003002  EFEE  F01D         	goto	_ErrPTG	;wreg free
  5263                           ;main.c: 2125: return;
  5264                           ;main.c: 2126: }
  5265  003006                     L28:
  5266  003006  CFE8 F314          	movff	wreg,_M+14
  5267                           ;main.c: 2128: StartRTS(2);
  5268  00300A  0E02               	movlw	2
  5269  00300C  EC51  F07E         	call	_StartRTS
  5270  003010                     l488:
  5271                           ;main.c: 2129: }
  5272                           ;main.c: 2132: {
  5273  003010  EE02  F0BC         	lfsr	0,_DtKNF+14
  5274  003014  50EF               	movf	indf0,w,c
  5275  003016  E119               	bnz	l489
  5276                           ;main.c: 2134: {
  5277  003018  C32C  F000         	movff	_M+38,btemp
  5278  00301C  0400               	decf	btemp,w,c
  5279  00301E  E015               	bz	l489
  5280  003020  C32C  FFE8         	movff	_M+38,wreg
  5281  003024  0A02               	xorlw	2
  5282  003026  E011               	bz	l489
  5283                           ;main.c: 2136: {
  5284                           ;main.c: 2142: }
  5285                           ;main.c: 2143: else
  5286  003028  0E02               	movlw	2
  5287  00302A  EC63  F07E         	call	_RTS
  5288  00302E  6E00               	movwf	btemp,c
  5289  003030  0E02               	movlw	2
  5290  003032  5C00               	subwf	btemp,w,c
  5291  003034  B0D8               	btfsc	status,0,c
  5292                           ;main.c: 2146: {
  5293  003036  8483               	bsf	3971,2,c	;volatile
  5294                           ;main.c: 2152: }
  5295  003038  0E02               	movlw	2
  5296  00303A  EC63  F07E         	call	_RTS
  5297  00303E  6E00               	movwf	btemp,c
  5298  003040  0E03               	movlw	3
  5299  003042  5C00               	subwf	btemp,w,c
  5300  003044  A0D8               	btfss	status,0,c
  5301  003046  0012               	return	
  5302  003048  D001               	goto	l494
  5303                           ;main.c: 2154: }
  5304  00304A                     l489:
  5305                           ;main.c: 2156: else
  5306  00304A  8483               	bsf	3971,2,c	;volatile
  5307  00304C                     l494:
  5308                           ;main.c: 2163: }
  5309  00304C  0E03               	movlw	3
  5310  00304E  CFE8 F314          	movff	wreg,_M+14
  5311                           ;main.c: 2165: StartRTS(2);
  5312  003052  0E02               	movlw	2
  5313  003054  EC51  F07E         	call	_StartRTS
  5314  003058                     l495:
  5315                           ;main.c: 2166: }
  5316                           ;main.c: 2169: {
  5317  003058  8483               	bsf	3971,2,c	;volatile
  5318                           ;main.c: 2175: if(RdPrt(5)&&!RD0)
  5319  00305A  0E05               	movlw	5
  5320  00305C  EC1C  F07A         	call	_RdPrt
  5321  003060  B0D8               	btfsc	status,0,c
  5322  003062  B083               	btfsc	3971,0,c	;volatile
  5323  003064  D015               	goto	l496
  5324                           ;main.c: 2176: {
  5325  003066  0E02               	movlw	2
  5326  003068  EC63  F07E         	call	_RTS
  5327  00306C  6E00               	movwf	btemp,c
  5328  00306E  0E05               	movlw	5
  5329  003070  5C00               	subwf	btemp,w,c
  5330  003072  A0D8               	btfss	status,0,c
  5331  003074  0012               	return	
  5332                           ;main.c: 2178: M.ERR_BTY=0x06;
  5333  003076  0E06               	movlw	6
  5334  003078  CFE8 F313          	movff	wreg,_M+13
  5335                           ;main.c: 2179: PrintErr(0x06,1);
  5336  00307C  0E01               	movlw	1
  5337  00307E  0100               	movlb	__Lparam shr (0+8)
  5338  003080  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5339  003082  0E06               	movlw	6
  5340  003084  EC36  F003         	call	_PrintErr
  5341                           ;main.c: 2180: ToWriteESTAT();
  5342  003088  EC00  F07E         	call	_ToWriteESTAT	;wreg free
  5343                           ;main.c: 2181: ErrPTG();
  5344  00308C  ECEE  F01D         	call	_ErrPTG	;wreg free
  5345  003090                     l496:
  5346                           ;main.c: 2182: }
  5347  003090  DF6B               	call	_GrzejON	;wreg free
  5348                           ;main.c: 2184: M.ROZ=4;
  5349  003092  0E04               	movlw	4
  5350  003094  CFE8 F314          	movff	wreg,_M+14
  5351  003098                     l498:
  5352                           ;main.c: 2185: }
  5353                           ;main.c: 2188: {
  5354  003098  0E0A               	movlw	10
  5355  00309A  EC33  F07E         	call	_StartRTdS
  5356                           ;main.c: 2190: M.ROZ=5;
  5357  00309E  0E05               	movlw	5
  5358  0030A0  CFE8 F314          	movff	wreg,_M+14
  5359  0030A4                     l499:
  5360                           ;main.c: 2191: }
  5361                           ;main.c: 2194: {
  5362  0030A4  8483               	bsf	3971,2,c	;volatile
  5363                           ;main.c: 2200: WritePWM(CalkVNTtoPWM(DtKNF.mmax)
      +                          );
  5364  0030A6  C2C6  FFE8         	movff	_DtKNF+24,wreg
  5365  0030AA  ECC0  F063         	call	_CalkVNTtoPWM
  5366  0030AE  EC74  F001         	call	_WritePWM
  5367                           ;main.c: 2201: tim=CalkTimStr(ProcToVNT(DtKNF.ms
      +                          tr));
  5368  0030B2  C2B4  FFE8         	movff	_DtKNF+6,wreg
  5369  0030B6  ECD1  F063         	call	_ProcToVNT
  5370  0030BA  EC60  F064         	call	_CalkTimStr
  5371  0030BE  CFE8 FE63          	movff	wreg,F2606
  5372                           ;main.c: 2202: if(RTdS(10)<tim) return;
  5373  0030C2  0E0A               	movlw	10
  5374  0030C4  EC45  F07E         	call	_RTdS
  5375  0030C8  6E00               	movwf	btemp,c
  5376  0030CA  CE63  FFE8         	movff	F2606,wreg
  5377  0030CE  5C00               	subwf	btemp,w,c
  5378  0030D0  A0D8               	btfss	status,0,c
  5379  0030D2  0012               	return	
  5380                           ;main.c: 2203: WritePWM(ProcToMod(DtKNF.mstr));
  5381  0030D4  C2B4  FFE8         	movff	_DtKNF+6,wreg
  5382  0030D8  ECEF  F032         	call	_ProcToMod
  5383  0030DC  EC74  F001         	call	_WritePWM
  5384                           ;main.c: 2204: StartRTS(2);
  5385  0030E0  0E02               	movlw	2
  5386  0030E2  EC51  F07E         	call	_StartRTS
  5387                           ;main.c: 2205: M.ROZ=6;
  5388  0030E6  0E06               	movlw	6
  5389  0030E8  CFE8 F314          	movff	wreg,_M+14
  5390  0030EC                     l501:
  5391                           ;main.c: 2206: }
  5392                           ;main.c: 2209: {
  5393  0030EC  D001               	goto	l503
  5394  0030EE                     l505:
  5395  0030EE  D006               	goto	l506
  5396                           ;main.c: 2229: break;
  5397  0030F0                     l503:
  5398  0030F0  C2BC  FFE8         	movff	_DtKNF+14,wreg
  5399  0030F4  0A00               	xorlw	0
  5400  0030F6  E0FB               	bz	l505
  5401  0030F8  0A03               	xorlw	3
  5402  0030FA  E0F9               	bz	l505
  5403                           ;main.c: 2213: case 3:
  5404                           ;main.c: 2220: break;
  5405  0030FC                     l506:
  5406                           ;main.c: 2221: }
  5407                           ;main.c: 2223: {
  5408  0030FC  8483               	bsf	3971,2,c	;volatile
  5409                           ;main.c: 2232: WritePWM(ProcToMod(DtKNF.mstr));
  5410  0030FE  C2B4  FFE8         	movff	_DtKNF+6,wreg
  5411  003102  ECEF  F032         	call	_ProcToMod
  5412  003106  EC74  F001         	call	_WritePWM
  5413                           ;main.c: 2234: if(RTS(2)<2) return;
  5414  00310A  0E02               	movlw	2
  5415  00310C  EC63  F07E         	call	_RTS
  5416  003110  6E00               	movwf	btemp,c
  5417  003112  0E02               	movlw	2
  5418  003114  5C00               	subwf	btemp,w,c
  5419  003116  A0D8               	btfss	status,0,c
  5420  003118  0012               	return	
  5421                           ;main.c: 2236: if(RTS(2)<7+6)
  5422  00311A  0E02               	movlw	2
  5423  00311C  EC63  F07E         	call	_RTS
  5424  003120  6E00               	movwf	btemp,c
  5425  003122  0E0D               	movlw	13
  5426  003124  5C00               	subwf	btemp,w,c
  5427  003126  E20B               	bc	l508
  5428                           ;main.c: 2237: {
  5429  003128  0E05               	movlw	5
  5430  00312A  EC1C  F07A         	call	_RdPrt
  5431  00312E  A0D8               	btfss	status,0,c
  5432  003130  0012               	return	
  5433                           ;main.c: 2239: {
  5434  003132  0E07               	movlw	7
  5435  003134  CFE8 F314          	movff	wreg,_M+14
  5436                           ;main.c: 2241: StartRTS(2);
  5437  003138  0E02               	movlw	2
  5438  00313A  EF51  F07E         	goto	_StartRTS
  5439                           ;main.c: 2242: }
  5440  00313E                     l508:
  5441                           ;main.c: 2245: else
  5442  00313E  D049               	goto	_DecyzjaPLM	;wreg free
  5443                           ;main.c: 2248: return;
  5444  003140                     l511:
  5445                           ;main.c: 2249: }
  5446                           ;main.c: 2253: {
  5447  003140  C2B4  FFE8         	movff	_DtKNF+6,wreg
  5448  003144  ECEF  F032         	call	_ProcToMod
  5449  003148  EC74  F001         	call	_WritePWM
  5450                           ;main.c: 2255: if(M._RPM_CW)
  5451  00314C  0103               	movlb	(_M+5) shr (0+8)
  5452  00314E  A10B               	btfss	(_M+5)& (0+255),0,b
  5453  003150  D003               	goto	l512
  5454                           ;main.c: 2256: {
  5455  003152  9707               	bcf	(_M+1)& (0+255),3,b
  5456                           ;main.c: 2258: M.ROZ=0;
  5457  003154  6B14               	clrf	(_M+14)& (0+255),b
  5458                           ;main.c: 2259: return;
  5459  003156  0012               	return	
  5460  003158                     l512:
  5461                           ;main.c: 2260: }
  5462  003158  0E05               	movlw	5
  5463  00315A  EC1C  F07A         	call	_RdPrt
  5464  00315E  A0D8               	btfss	status,0,c
  5465                           ;main.c: 2262: {
  5466  003160  D851               	call	_DecyzjaPLM2	;wreg free
  5467                           ;main.c: 2264: }
  5468  003162  0103               	movlb	(_M+2) shr (0+8)
  5469  003164  AD08               	btfss	(_M+2)& (0+255),6,b
  5470  003166  B309               	btfsc	(_M+3)& (0+255),1,b
  5471  003168  D008               	goto	u9520
  5472  00316A  C32C  F000         	movff	_M+38,btemp
  5473  00316E  0400               	decf	btemp,w,c
  5474  003170  E004               	bz	u9520
  5475  003172  C32C  FFE8         	movff	_M+38,wreg
  5476  003176  0A02               	xorlw	2
  5477  003178  E106               	bnz	l514
  5478  00317A                     u9520:
  5479                           ;main.c: 2266: {
  5480  00317A  0E02               	movlw	2
  5481  00317C  EC63  F07E         	call	_RTS
  5482  003180  6E00               	movwf	btemp,c
  5483  003182  0E02               	movlw	2
  5484  003184  D006               	goto	L12
  5485                           ;main.c: 2268: }
  5486  003186                     l514:
  5487                           ;main.c: 2269: else
  5488  003186  0E02               	movlw	2
  5489  003188  EC63  F07E         	call	_RTS
  5490  00318C  6E00               	movwf	btemp,c
  5491  00318E  C2D1  FFE8         	movff	_DtKNF+35,wreg
  5492  003192                     L12:
  5493  003192  5C00               	subwf	btemp,w,c
  5494  003194  A0D8               	btfss	status,0,c
  5495  003196  0012               	return	
  5496                           ;main.c: 2272: }
  5497  003198  0103               	movlb	(_M+1) shr (0+8)
  5498  00319A  9707               	bcf	(_M+1)& (0+255),3,b
  5499                           ;main.c: 2274: M.ROZ=0;
  5500  00319C  6B14               	clrf	(_M+14)& (0+255),b
  5501                           ;main.c: 2275: }
  5502  00319E  0012               	return	
  5503  0031A0                     l479:
  5504  0031A0  C314  FFE8         	movff	_M+14,wreg
  5505  0031A4  0A00               	xorlw	0
  5506  0031A6  E101 D6F3          	bz	l480
  5507  0031AA  0A01               	xorlw	1
  5508  0031AC  E101 D701          	bz	l483
  5509  0031B0  0A03               	xorlw	3
  5510  0031B2  E101 D72D          	bz	l488
  5511  0031B6  0A01               	xorlw	1
  5512  0031B8  E101 D74E          	bz	l495
  5513  0031BC  0A07               	xorlw	7
  5514  0031BE  E101 D76B          	bz	l498
  5515  0031C2  0A01               	xorlw	1
  5516  0031C4  E101 D76E          	bz	l499
  5517  0031C8  0A03               	xorlw	3
  5518  0031CA  E090               	bz	l501
  5519  0031CC  0A01               	xorlw	1
  5520  0031CE  E0B8               	bz	l511
  5521  0031D0  0012               	return	
  5522                           ;main.c: 2277: }
  5523  0031D2                     __end_of_Rozruch:
  5524                           ;main.c: 2278: void DecyzjaPLM(void)
  5525                           ;main.c: 2279: {
  5526  0031D2                     _DecyzjaPLM:
  5527  000000                     
  5528                           ;main.c: 2280: if(M._OST_PL)
  5529  0031D2  0103               	movlb	(_M+4) shr (0+8)
  5530  0031D4  A90A               	btfss	(_M+4)& (0+255),4,b
  5531  0031D6  D00B               	goto	l519
  5532                           ;main.c: 2281: {
  5533  0031D8  0E01               	movlw	1
  5534  0031DA  CFE8 F313          	movff	wreg,_M+13
  5535                           ;main.c: 2283: PrintErr(0x01,1);
  5536  0031DE  0100               	movlb	__Lparam shr (0+8)
  5537  0031E0  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5538  0031E2  EC36  F003         	call	_PrintErr
  5539                           ;main.c: 2284: ToWriteESTAT();
  5540  0031E6  EC00  F07E         	call	_ToWriteESTAT	;wreg free
  5541                           ;main.c: 2285: ErrPTG();
  5542  0031EA  EFEE  F01D         	goto	_ErrPTG	;wreg free
  5543                           ;main.c: 2286: }
  5544  0031EE                     l519:
  5545                           ;main.c: 2287: else
  5546  0031EE  0103               	movlb	(_M+2) shr (0+8)
  5547  0031F0  8108               	bsf	(_M+2)& (0+255),0,b
  5548                           ;main.c: 2290: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5549  0031F2  EE03  F00F         	lfsr	0,_M+9
  5550  0031F6  50EF               	movf	indf0,w,c
  5551  0031F8  B4D8               	btfsc	status,2,c
  5552  0031FA  8308               	bsf	(_M+2)& (0+255),1,b
  5553                           ;main.c: 2291: M._ROZRUCH=0;
  5554  0031FC  0103               	movlb	(_M+1) shr (0+8)
  5555  0031FE  9707               	bcf	(_M+1)& (0+255),3,b
  5556                           ;main.c: 2292: M.ROZ=0;
  5557  003200  6B14               	clrf	(_M+14)& (0+255),b
  5558                           ;main.c: 2293: }
  5559  003202  0012               	return	
  5560  003204                     __end_of_DecyzjaPLM:
  5561                           ;main.c: 2295: void DecyzjaPLM2(void)
  5562                           ;main.c: 2296: {
  5563  003204                     _DecyzjaPLM2:
  5564  000000                     
  5565                           ;main.c: 2297: if(RA7&&RC0)
  5566  003204  BE80               	btfsc	3968,7,c	;volatile
  5567  003206  A082               	btfss	3970,0,c	;volatile
  5568  003208  0012               	return	
  5569                           ;main.c: 2298: {
  5570  00320A  0103               	movlb	(_M+4) shr (0+8)
  5571  00320C  A90A               	btfss	(_M+4)& (0+255),4,b
  5572  00320E  D00B               	goto	l524
  5573                           ;main.c: 2300: {
  5574  003210  0E01               	movlw	1
  5575  003212  CFE8 F313          	movff	wreg,_M+13
  5576                           ;main.c: 2302: PrintErr(0x01,1);
  5577  003216  0100               	movlb	__Lparam shr (0+8)
  5578  003218  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  5579  00321A  EC36  F003         	call	_PrintErr
  5580                           ;main.c: 2303: ToWriteESTAT();
  5581  00321E  EC00  F07E         	call	_ToWriteESTAT	;wreg free
  5582                           ;main.c: 2304: ErrPTG();
  5583  003222  EFEE  F01D         	goto	_ErrPTG	;wreg free
  5584                           ;main.c: 2305: }
  5585  003226                     l524:
  5586                           ;main.c: 2306: else
  5587  003226  0103               	movlb	(_M+21) shr (0+8)
  5588  003228  6B1B               	clrf	(_M+21)& (0+255),b
  5589                           ;main.c: 2309: M._RUSZ_PLOMIEN=1;
  5590  00322A  8108               	bsf	(_M+2)& (0+255),0,b
  5591                           ;main.c: 2310: if(!M.LICZNIK_PL) M._RUSZ_RPLM=1;
  5592  00322C  EE03  F00F         	lfsr	0,_M+9
  5593  003230  50EF               	movf	indf0,w,c
  5594  003232  B4D8               	btfsc	status,2,c
  5595  003234  8308               	bsf	(_M+2)& (0+255),1,b
  5596                           ;main.c: 2311: M._ROZRUCH=0;
  5597  003236  0103               	movlb	(_M+1) shr (0+8)
  5598  003238  9707               	bcf	(_M+1)& (0+255),3,b
  5599                           ;main.c: 2312: M.ROZ=0;
  5600  00323A  6B14               	clrf	(_M+14)& (0+255),b
  5601                           ;main.c: 2313: }
  5602  00323C  0012               	return	
  5603  00323E                     __end_of_DecyzjaPLM2:
  5604                           ;main.c: 2319: void Wylacz(void)
  5605                           ;main.c: 2320: {
  5606  00323E                     _Wylacz:
  5607  000000                     
  5608                           ;main.c: 2321: switch(DtKNF.tpkt)
  5609  00323E  D11D               	goto	l529
  5610  003240                     l530:
  5611                           ;main.c: 2322: {
  5612                           ;main.c: 2324: {
  5613  003240  D054               	goto	l532
  5614  003242                     l533:
  5615                           ;main.c: 2326: {
  5616                           ;main.c: 2328: {
  5617  003242  0E01               	movlw	1
  5618  003244  CFE8 F319          	movff	wreg,_M+19
  5619                           ;main.c: 2330: StartRTS(7);
  5620  003248  0E07               	movlw	7
  5621  00324A  EC51  F07E         	call	_StartRTS
  5622  00324E                     l534:
  5623                           ;main.c: 2331: }
  5624                           ;main.c: 2333: {
  5625  00324E  0103               	movlb	(_M+5) shr (0+8)
  5626                           ;main.c: 2335: {
  5627  003250  0E07               	movlw	7
  5628  003252  A10B               	btfss	(_M+5)& (0+255),0,b
  5629  003254  D01C               	goto	L30
  5630  003256  EC63  F07E         	call	_RTS
  5631  00325A  6E00               	movwf	btemp,c
  5632  00325C  0E14               	movlw	20
  5633  00325E  5C00               	subwf	btemp,w,c
  5634  003260  E30A               	bnc	l536
  5635                           ;main.c: 2337: {
  5636  003262  0100               	movlb	_DtCO shr (0+8)
  5637  003264  B17D               	btfsc	_DtCO& (0+255),0,b
  5638  003266  D007               	goto	l536
  5639  003268  0100               	movlb	(_DtCO+1) shr (0+8)
  5640  00326A  A17E               	btfss	(_DtCO+1)& (0+255),0,b
  5641  00326C  D004               	goto	l536
  5642                           ;main.c: 2339: {
  5643  00326E  0E02               	movlw	2
  5644  003270  CFE8 F319          	movff	wreg,_M+19
  5645                           ;main.c: 2341: return;
  5646  003274  0C02               	retlw	2
  5647  003276                     l536:
  5648                           ;main.c: 2342: }
  5649  003276  0E07               	movlw	7
  5650  003278  EC63  F07E         	call	_RTS
  5651  00327C  6E00               	movwf	btemp,c
  5652  00327E  0EB4               	movlw	180
  5653  003280  5C00               	subwf	btemp,w,c
  5654  003282  A0D8               	btfss	status,0,c
  5655  003284  0012               	return	
  5656                           ;main.c: 2345: M.WYL=2;
  5657  003286  0E02               	movlw	2
  5658  003288  CFE8 F319          	movff	wreg,_M+19
  5659                           ;main.c: 2346: return;
  5660  00328C  0C02               	retlw	2
  5661                           ;main.c: 2348: else
  5662  00328E                     L30:
  5663  00328E  EC63  F07E         	call	_RTS
  5664  003292  6E00               	movwf	btemp,c
  5665  003294  0EB4               	movlw	180
  5666  003296  5C00               	subwf	btemp,w,c
  5667  003298  A0D8               	btfss	status,0,c
  5668  00329A  0012               	return	
  5669                           ;main.c: 2351: M.WYL=2;
  5670  00329C  0E02               	movlw	2
  5671  00329E  CFE8 F319          	movff	wreg,_M+19
  5672  0032A2                     l541:
  5673                           ;main.c: 2352: }
  5674                           ;main.c: 2355: {
  5675  0032A2  0103               	movlb	(_M+5) shr (0+8)
  5676  0032A4  B10B               	btfsc	(_M+5)& (0+255),0,b
  5677  0032A6  D00C               	goto	l542
  5678                           ;main.c: 2357: {
  5679  0032A8  0E0D               	movlw	13
  5680  0032AA  EC1C  F07A         	call	_RdPrt
  5681  0032AE  B0D8               	btfsc	status,0,c
  5682  0032B0  0012               	return	
  5683                           ;main.c: 2359: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  5684  0032B2  0100               	movlb	_DtCO shr (0+8)
  5685  0032B4  B17D               	btfsc	_DtCO& (0+255),0,b
  5686  0032B6  D00D               	goto	l545
  5687  0032B8  0100               	movlb	_DtCO shr (0+8)
  5688  0032BA  A37D               	btfss	_DtCO& (0+255),1,b
  5689  0032BC  0012               	return	
  5690  0032BE  D009               	goto	l545
  5691                           ;main.c: 2360: }
  5692  0032C0                     l542:
  5693                           ;main.c: 2361: else
  5694  0032C0  0100               	movlb	_DtCO shr (0+8)
  5695  0032C2  B17D               	btfsc	_DtCO& (0+255),0,b
  5696  0032C4  D006               	goto	l545
  5697  0032C6  0100               	movlb	(_DtCO+1) shr (0+8)
  5698  0032C8  B17E               	btfsc	(_DtCO+1)& (0+255),0,b
  5699  0032CA  D003               	goto	l545
  5700  0032CC  0103               	movlb	_M shr (0+8)
  5701  0032CE  B906               	btfsc	_M& (0+255),4,b
  5702  0032D0  0012               	return	
  5703  0032D2                     l545:
  5704                           ;main.c: 2364: }
  5705  0032D2  EE02  F0C3         	lfsr	0,_DtKNF+21
  5706  0032D6  50EF               	movf	indf0,w,c
  5707  0032D8  E103               	bnz	l547
  5708                           ;main.c: 2366: {
  5709  0032DA  0103               	movlb	(_M+2) shr (0+8)
  5710  0032DC  B508               	btfsc	(_M+2)& (0+255),2,b
  5711  0032DE  0012               	return	
  5712  0032E0                     l547:
  5713                           ;main.c: 2368: }
  5714  0032E0  9483               	bcf	3971,2,c	;volatile
  5715                           ;main.c: 2374: M._WYLACZ=0;
  5716  0032E2  0103               	movlb	(_M+1) shr (0+8)
  5717  0032E4  9307               	bcf	(_M+1)& (0+255),1,b
  5718                           ;main.c: 2375: M.WYL=0;
  5719  0032E6  6B19               	clrf	(_M+19)& (0+255),b
  5720                           ;main.c: 2376: }
  5721  0032E8  0012               	return	
  5722  0032EA                     l532:
  5723  0032EA  C319  FFE8         	movff	_M+19,wreg
  5724  0032EE  0A00               	xorlw	0
  5725  0032F0  E0A8               	bz	l533
  5726  0032F2  0A01               	xorlw	1
  5727  0032F4  E0AC               	bz	l534
  5728  0032F6  0A03               	xorlw	3
  5729  0032F8  E0D4               	bz	l541
  5730  0032FA  0012               	return	
  5731                           ;main.c: 2378: return;
  5732  0032FC                     l549:
  5733                           ;main.c: 2379: }
  5734                           ;main.c: 2381: {
  5735  0032FC  D058               	goto	l551
  5736  0032FE                     l552:
  5737                           ;main.c: 2383: {
  5738                           ;main.c: 2385: {
  5739  0032FE  0E01               	movlw	1
  5740  003300  CFE8 F319          	movff	wreg,_M+19
  5741                           ;main.c: 2387: StartRTS(7);
  5742  003304  0E07               	movlw	7
  5743  003306  EC51  F07E         	call	_StartRTS
  5744  00330A                     l553:
  5745                           ;main.c: 2388: }
  5746                           ;main.c: 2390: {
  5747  00330A  0103               	movlb	(_M+5) shr (0+8)
  5748  00330C  A10B               	btfss	(_M+5)& (0+255),0,b
  5749  00330E  D013               	goto	l554
  5750                           ;main.c: 2392: {
  5751  003310  830E               	bsf	(_M+8)& (0+255),1,b
  5752                           ;main.c: 2394: if(RTS(7)<60) return;
  5753  003312  0E07               	movlw	7
  5754  003314  EC63  F07E         	call	_RTS
  5755  003318  6E00               	movwf	btemp,c
  5756  00331A  0E3C               	movlw	60
  5757  00331C  5C00               	subwf	btemp,w,c
  5758  00331E  A0D8               	btfss	status,0,c
  5759  003320  0012               	return	
  5760                           ;main.c: 2395: if(!DtCO._err_CO)
  5761  003322  0100               	movlb	_DtCO shr (0+8)
  5762  003324  B17D               	btfsc	_DtCO& (0+255),0,b
  5763  003326  D011               	goto	L8
  5764                           ;main.c: 2396: {
  5765  003328  0100               	movlb	(_DtCO+1) shr (0+8)
  5766  00332A  A17E               	btfss	(_DtCO+1)& (0+255),0,b
  5767  00332C  0012               	return	
  5768                           ;main.c: 2398: {
  5769  00332E  0E02               	movlw	2
  5770  003330  CFE8 F319          	movff	wreg,_M+19
  5771                           ;main.c: 2400: return;
  5772  003334  0C02               	retlw	2
  5773                           ;main.c: 2401: }
  5774                           ;main.c: 2404: else
  5775                           ;main.c: 2407: }
  5776  003336                     l554:
  5777                           ;main.c: 2409: else
  5778  003336  0103               	movlb	(_M+8) shr (0+8)
  5779  003338  930E               	bcf	(_M+8)& (0+255),1,b
  5780                           ;main.c: 2412: if(RTS(7)<180) return;
  5781  00333A  0E07               	movlw	7
  5782  00333C  EC63  F07E         	call	_RTS
  5783  003340  6E00               	movwf	btemp,c
  5784  003342  0EB4               	movlw	180
  5785  003344  5C00               	subwf	btemp,w,c
  5786  003346  A0D8               	btfss	status,0,c
  5787  003348  0012               	return	
  5788  00334A                     L8:
  5789                           ;main.c: 2413: M.WYL=2;
  5790  00334A  0E02               	movlw	2
  5791  00334C  CFE8 F319          	movff	wreg,_M+19
  5792  003350                     l561:
  5793                           ;main.c: 2414: }
  5794                           ;main.c: 2417: {
  5795  003350  0103               	movlb	(_M+5) shr (0+8)
  5796  003352  A10B               	btfss	(_M+5)& (0+255),0,b
  5797  003354  D014               	goto	l562
  5798                           ;main.c: 2419: {
  5799  003356  0E11               	movlw	17
  5800  003358  EC1C  F07A         	call	_RdPrt
  5801  00335C  B0D8               	btfsc	status,0,c
  5802  00335E  0012               	return	
  5803                           ;main.c: 2421: if(RdPrt(13)&&(PFN.poz==3)&&!RdPr
      +                          t(12)) return;
  5804  003360  0E0D               	movlw	13
  5805  003362  EC1C  F07A         	call	_RdPrt
  5806  003366  E316               	bnc	l565
  5807  003368  0100               	movlb	(_PFN+1) shr (0+8)
  5808  00336A  5168               	movf	(_PFN+1)& (0+255),w,b
  5809  00336C  0A03               	xorlw	3
  5810  00336E  1169               	iorwf	(_PFN+2)& (0+255),w,b
  5811  003370  E111               	bnz	l565
  5812  003372  0E0C               	movlw	12
  5813  003374  EC1C  F07A         	call	_RdPrt
  5814  003378  A0D8               	btfss	status,0,c
  5815  00337A  0012               	return	
  5816  00337C  D00B               	goto	l565
  5817                           ;main.c: 2422: }
  5818  00337E                     l562:
  5819                           ;main.c: 2423: else
  5820  00337E  0E0D               	movlw	13
  5821  003380  EC1C  F07A         	call	_RdPrt
  5822  003384  B0D8               	btfsc	status,0,c
  5823  003386  0012               	return	
  5824                           ;main.c: 2426: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  5825  003388  0100               	movlb	_DtCO shr (0+8)
  5826  00338A  B17D               	btfsc	_DtCO& (0+255),0,b
  5827  00338C  D003               	goto	l565
  5828  00338E  0100               	movlb	_DtCO shr (0+8)
  5829  003390  A37D               	btfss	_DtCO& (0+255),1,b
  5830  003392  0012               	return	
  5831  003394                     l565:
  5832                           ;main.c: 2427: }
  5833  003394  0103               	movlb	(_M+8) shr (0+8)
  5834  003396  930E               	bcf	(_M+8)& (0+255),1,b
  5835                           ;main.c: 2429: if(DtKNF.robg==0)
  5836  003398  EE02  F0C3         	lfsr	0,_DtKNF+21
  5837  00339C  50EF               	movf	indf0,w,c
  5838  00339E  E102               	bnz	l568
  5839                           ;main.c: 2430: {
  5840  0033A0  B508               	btfsc	(_M+2)& (0+255),2,b
  5841  0033A2  0012               	return	
  5842  0033A4                     l568:
  5843                           ;main.c: 2432: }
  5844  0033A4  9483               	bcf	3971,2,c	;volatile
  5845                           ;main.c: 2438: M._WYLACZ=0;
  5846  0033A6  0103               	movlb	(_M+1) shr (0+8)
  5847  0033A8  9307               	bcf	(_M+1)& (0+255),1,b
  5848                           ;main.c: 2439: M.WYL=0;
  5849  0033AA  6B19               	clrf	(_M+19)& (0+255),b
  5850                           ;main.c: 2440: }
  5851  0033AC  0012               	return	
  5852  0033AE                     l551:
  5853  0033AE  C319  FFE8         	movff	_M+19,wreg
  5854  0033B2  0A00               	xorlw	0
  5855  0033B4  E0A4               	bz	l552
  5856  0033B6  0A01               	xorlw	1
  5857  0033B8  E0A8               	bz	l553
  5858  0033BA  0A03               	xorlw	3
  5859  0033BC  E0C9               	bz	l561
  5860  0033BE  0012               	return	
  5861                           ;main.c: 2442: return;
  5862                           ;main.c: 2443: }
  5863                           ;main.c: 2445: {
  5864  0033C0                     l573:
  5865                           ;main.c: 2447: {
  5866                           ;main.c: 2449: {
  5867  0033C0  0E01               	movlw	1
  5868  0033C2  CFE8 F319          	movff	wreg,_M+19
  5869                           ;main.c: 2451: StartRTS(7);
  5870  0033C6  0E07               	movlw	7
  5871  0033C8  EC51  F07E         	call	_StartRTS
  5872  0033CC                     l574:
  5873                           ;main.c: 2452: }
  5874                           ;main.c: 2454: {
  5875  0033CC  0103               	movlb	(_M+5) shr (0+8)
  5876                           ;main.c: 2456: {
  5877  0033CE  0E07               	movlw	7
  5878  0033D0  A10B               	btfss	(_M+5)& (0+255),0,b
  5879  0033D2  D01C               	goto	L31
  5880  0033D4  EC63  F07E         	call	_RTS
  5881  0033D8  6E00               	movwf	btemp,c
  5882  0033DA  0E14               	movlw	20
  5883  0033DC  5C00               	subwf	btemp,w,c
  5884  0033DE  E30A               	bnc	l576
  5885                           ;main.c: 2458: {
  5886  0033E0  0100               	movlb	_DtCO shr (0+8)
  5887  0033E2  B17D               	btfsc	_DtCO& (0+255),0,b
  5888  0033E4  D007               	goto	l576
  5889  0033E6  0100               	movlb	(_DtCO+1) shr (0+8)
  5890  0033E8  A17E               	btfss	(_DtCO+1)& (0+255),0,b
  5891  0033EA  D004               	goto	l576
  5892                           ;main.c: 2460: {
  5893  0033EC  0E02               	movlw	2
  5894  0033EE  CFE8 F319          	movff	wreg,_M+19
  5895                           ;main.c: 2462: return;
  5896  0033F2  0C02               	retlw	2
  5897  0033F4                     l576:
  5898                           ;main.c: 2463: }
  5899  0033F4  0E07               	movlw	7
  5900  0033F6  EC63  F07E         	call	_RTS
  5901  0033FA  6E00               	movwf	btemp,c
  5902  0033FC  0EB4               	movlw	180
  5903  0033FE  5C00               	subwf	btemp,w,c
  5904  003400  A0D8               	btfss	status,0,c
  5905  003402  0012               	return	
  5906                           ;main.c: 2466: M.WYL=2;
  5907  003404  0E02               	movlw	2
  5908  003406  CFE8 F319          	movff	wreg,_M+19
  5909                           ;main.c: 2467: return;
  5910  00340A  0C02               	retlw	2
  5911                           ;main.c: 2469: else
  5912  00340C                     L31:
  5913  00340C  EC63  F07E         	call	_RTS
  5914  003410  6E00               	movwf	btemp,c
  5915  003412  0EB4               	movlw	180
  5916  003414  5C00               	subwf	btemp,w,c
  5917  003416  A0D8               	btfss	status,0,c
  5918  003418  0012               	return	
  5919                           ;main.c: 2472: M.WYL=2;
  5920  00341A  0E02               	movlw	2
  5921  00341C  CFE8 F319          	movff	wreg,_M+19
  5922  003420                     l581:
  5923                           ;main.c: 2473: }
  5924                           ;main.c: 2476: {
  5925  003420  0103               	movlb	(_M+5) shr (0+8)
  5926  003422  B10B               	btfsc	(_M+5)& (0+255),0,b
  5927  003424  D00C               	goto	l582
  5928                           ;main.c: 2478: {
  5929  003426  0E0D               	movlw	13
  5930  003428  EC1C  F07A         	call	_RdPrt
  5931  00342C  B0D8               	btfsc	status,0,c
  5932  00342E  0012               	return	
  5933                           ;main.c: 2480: if(!DtCO._err_CO&&!DtCO._su_CO) r
      +                          eturn;
  5934  003430  0100               	movlb	_DtCO shr (0+8)
  5935  003432  B17D               	btfsc	_DtCO& (0+255),0,b
  5936  003434  D00D               	goto	l585
  5937  003436  0100               	movlb	_DtCO shr (0+8)
  5938  003438  A37D               	btfss	_DtCO& (0+255),1,b
  5939  00343A  0012               	return	
  5940  00343C  D009               	goto	l585
  5941                           ;main.c: 2481: }
  5942  00343E                     l582:
  5943                           ;main.c: 2482: else
  5944  00343E  0100               	movlb	_DtCO shr (0+8)
  5945  003440  B17D               	btfsc	_DtCO& (0+255),0,b
  5946  003442  D006               	goto	l585
  5947  003444  0100               	movlb	(_DtCO+1) shr (0+8)
  5948  003446  B17E               	btfsc	(_DtCO+1)& (0+255),0,b
  5949  003448  D003               	goto	l585
  5950  00344A  0103               	movlb	_M shr (0+8)
  5951  00344C  B906               	btfsc	_M& (0+255),4,b
  5952  00344E  0012               	return	
  5953  003450                     l585:
  5954                           ;main.c: 2485: }
  5955  003450  EE02  F0C3         	lfsr	0,_DtKNF+21
  5956  003454  50EF               	movf	indf0,w,c
  5957  003456  E103               	bnz	l587
  5958                           ;main.c: 2487: {
  5959  003458  0103               	movlb	(_M+2) shr (0+8)
  5960  00345A  B508               	btfsc	(_M+2)& (0+255),2,b
  5961  00345C  0012               	return	
  5962  00345E                     l587:
  5963                           ;main.c: 2489: }
  5964  00345E  9483               	bcf	3971,2,c	;volatile
  5965                           ;main.c: 2495: M._WYLACZ=0;
  5966  003460  0103               	movlb	(_M+1) shr (0+8)
  5967  003462  9307               	bcf	(_M+1)& (0+255),1,b
  5968                           ;main.c: 2496: M.WYL=0;
  5969  003464  6B19               	clrf	(_M+19)& (0+255),b
  5970                           ;main.c: 2497: }
  5971  003466  0012               	return	
  5972  003468                     l572:
  5973  003468  C319  FFE8         	movff	_M+19,wreg
  5974  00346C  0A00               	xorlw	0
  5975  00346E  E0A8               	bz	l573
  5976  003470  0A01               	xorlw	1
  5977  003472  E0AC               	bz	l574
  5978  003474  0A03               	xorlw	3
  5979  003476  E0D4               	bz	l581
  5980  003478  0012               	return	
  5981                           ;main.c: 2499: return;
  5982  00347A                     l529:
  5983  00347A  C2BC  FFE8         	movff	_DtKNF+14,wreg
  5984  00347E  0A00               	xorlw	0
  5985  003480  E101 D73C          	bz	l549
  5986  003484  0A03               	xorlw	3
  5987  003486  E101 D6DB          	bz	l530
  5988  00348A  D7EE               	goto	l572
  5989                           ;main.c: 2502: }
  5990  00348C                     __end_of_Wylacz:
  5991                           ;main.c: 2506: void VWybieg(void)
  5992                           ;main.c: 2507: {
  5993  00348C                     _VWybieg:
  5994  000000                     
  5995                           ;main.c: 2508: switch(M.VWB)
  5996  00348C  D034               	goto	l591
  5997  00348E                     l592:
  5998                           ;main.c: 2509: {
  5999                           ;main.c: 2511: {
  6000  00348E  0E01               	movlw	1
  6001  003490  CFE8 F31F          	movff	wreg,_M+25
  6002                           ;main.c: 2513: M._DE_VNT=1;
  6003  003494  0103               	movlb	(_M+4) shr (0+8)
  6004  003496  8F0A               	bsf	(_M+4)& (0+255),7,b
  6005                           ;main.c: 2514: StartRTS(6);
  6006  003498  0E06               	movlw	6
  6007  00349A  EC51  F07E         	call	_StartRTS
  6008                           ;main.c: 2515: WritePWM(ProcToMod(0));
  6009  00349E  0E00               	movlw	0
  6010  0034A0  ECEF  F032         	call	_ProcToMod
  6011  0034A4  EC74  F001         	call	_WritePWM
  6012  0034A8                     l593:
  6013                           ;main.c: 2516: }
  6014                           ;main.c: 2518: {
  6015  0034A8  0E06               	movlw	6
  6016  0034AA  EC63  F07E         	call	_RTS
  6017  0034AE  6E00               	movwf	btemp,c
  6018  0034B0  0E02               	movlw	2
  6019  0034B2  5C00               	subwf	btemp,w,c
  6020  0034B4  E302               	bnc	l594
  6021  0034B6  0103               	movlb	(_M+4) shr (0+8)
  6022  0034B8  9F0A               	bcf	(_M+4)& (0+255),7,b
  6023  0034BA                     l594:
  6024                           ;main.c: 2520: if(RTS(6)<15) return;
  6025  0034BA  0E06               	movlw	6
  6026  0034BC  EC63  F07E         	call	_RTS
  6027  0034C0  6E00               	movwf	btemp,c
  6028  0034C2  0E0F               	movlw	15
  6029  0034C4  5C00               	subwf	btemp,w,c
  6030  0034C6  A0D8               	btfss	status,0,c
  6031  0034C8  0012               	return	
  6032                           ;main.c: 2521: WritePWM(0);
  6033  0034CA  0E00               	movlw	0
  6034  0034CC  EC74  F001         	call	_WritePWM
  6035                           ;main.c: 2522: RD3=0;
  6036  0034D0  9683               	bcf	3971,3,c	;volatile
  6037                           ;main.c: 2523: M._DE_VNT=1;
  6038  0034D2  0103               	movlb	(_M+4) shr (0+8)
  6039  0034D4  8F0A               	bsf	(_M+4)& (0+255),7,b
  6040                           ;main.c: 2524: M.VWB=2;
  6041  0034D6  0E02               	movlw	2
  6042  0034D8  CFE8 F31F          	movff	wreg,_M+25
  6043  0034DC                     l596:
  6044                           ;main.c: 2525: }
  6045                           ;main.c: 2527: {
  6046  0034DC  0E06               	movlw	6
  6047  0034DE  EC63  F07E         	call	_RTS
  6048  0034E2  6E00               	movwf	btemp,c
  6049  0034E4  0E11               	movlw	17
  6050  0034E6  5C00               	subwf	btemp,w,c
  6051  0034E8  A0D8               	btfss	status,0,c
  6052  0034EA  0012               	return	
  6053                           ;main.c: 2529: M._DE_VNT=0;
  6054  0034EC  0103               	movlb	(_M+4) shr (0+8)
  6055  0034EE  9F0A               	bcf	(_M+4)& (0+255),7,b
  6056                           ;main.c: 2530: M._VWYBIEG=0;
  6057  0034F0  9F07               	bcf	(_M+1)& (0+255),7,b
  6058                           ;main.c: 2531: M.VWB=0;
  6059  0034F2  6B1F               	clrf	(_M+25)& (0+255),b
  6060                           ;main.c: 2533: }
  6061  0034F4  0012               	return	
  6062  0034F6                     l591:
  6063  0034F6  C31F  FFE8         	movff	_M+25,wreg
  6064  0034FA  0A00               	xorlw	0
  6065  0034FC  E0C8               	bz	l592
  6066  0034FE  0A01               	xorlw	1
  6067  003500  E0D3               	bz	l593
  6068  003502  0A03               	xorlw	3
  6069  003504  E0EB               	bz	l596
  6070  003506  0012               	return	
  6071                           ;main.c: 2535: }
  6072  003508                     __end_of_VWybieg:
  6073                           ;main.c: 2539: void DetekcjaPrzeplywuWG(void)
  6074                           ;main.c: 2540: {
  6075  003508                     _DetekcjaPrzeplywuWG:
  6076  000000                     
  6077                           ;main.c: 2541: unsigned char pmp,prz;
  6078  003508  0E00               	movlw	0
  6079  00350A  B483               	btfsc	3971,2,c	;volatile
  6080  00350C  0E01               	movlw	1
  6081  00350E  0100               	movlb	__Lparam shr (0+8)
  6082  003510  6FA4               	movwf	?a_DetekcjaPrzeplywuWG^(__Lparam& (0+6528
      +                          0)),b
  6083                           ;main.c: 2544: prz=(RdPrt(1))?1:0;
  6084  003512  0E01               	movlw	1
  6085  003514  EC1C  F07A         	call	_RdPrt
  6086  003518  0E00               	movlw	0
  6087  00351A  B0D8               	btfsc	status,0,c
  6088  00351C  0E01               	movlw	1
  6089  00351E  0100               	movlb	__Lparam shr (0+8)
  6090  003520  6FA5               	movwf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+
      +                          65280)),b
  6091                           ;main.c: 2546: if(pmp)
  6092  003522  51A4               	movf	?a_DetekcjaPrzeplywuWG^(__Lparam& (0+65280
      +                          )),w
  6093  003524  E033               	bz	l599
  6094                           ;main.c: 2547: {
  6095  003526  51A5               	movf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+6
      +                          5280)),w
  6096  003528  E106               	bnz	l600
  6097  00352A  0103               	movlb	(_M+5) shr (0+8)
  6098  00352C  B70B               	btfsc	(_M+5)& (0+255),3,b
  6099  00352E  D003               	goto	l600
  6100                           ;main.c: 2549: {
  6101  003530  0103               	movlb	(_M+5) shr (0+8)
  6102  003532  870B               	bsf	(_M+5)& (0+255),3,b
  6103                           ;main.c: 2551: M.DPR=0;
  6104  003534  6B23               	clrf	(_M+29)& (0+255),b
  6105  003536                     l600:
  6106                           ;main.c: 2552: }
  6107  003536  0103               	movlb	(_M+5) shr (0+8)
  6108  003538  A70B               	btfss	(_M+5)& (0+255),3,b
  6109  00353A  0012               	return	
  6110  00353C  D020               	goto	l603
  6111                           ;main.c: 2554: {
  6112  00353E                     l604:
  6113                           ;main.c: 2556: {
  6114                           ;main.c: 2558: {
  6115  00353E  0E0A               	movlw	10
  6116  003540  EC51  F07E         	call	_StartRTS
  6117                           ;main.c: 2560: M.DPR=1;
  6118  003544  0E01               	movlw	1
  6119  003546  CFE8 F323          	movff	wreg,_M+29
  6120  00354A                     l605:
  6121                           ;main.c: 2561: }
  6122                           ;main.c: 2563: {
  6123  00354A  0100               	movlb	__Lparam shr (0+8)
  6124  00354C  51A5               	movf	(?a_DetekcjaPrzeplywuWG+1)^(__Lparam& (0+6
      +                          5280)),w
  6125  00354E  E004               	bz	l606
  6126                           ;main.c: 2565: {
  6127  003550  0103               	movlb	(_M+5) shr (0+8)
  6128  003552  970B               	bcf	(_M+5)& (0+255),3,b
  6129                           ;main.c: 2567: M.DPR=0;
  6130  003554  6B23               	clrf	(_M+29)& (0+255),b
  6131                           ;main.c: 2568: return;
  6132  003556  0012               	return	
  6133  003558                     l606:
  6134                           ;main.c: 2569: }
  6135  003558  0E0A               	movlw	10
  6136  00355A  EC63  F07E         	call	_RTS
  6137  00355E  6E00               	movwf	btemp,c
  6138  003560  0E03               	movlw	3
  6139  003562  5C00               	subwf	btemp,w,c
  6140  003564  A0D8               	btfss	status,0,c
  6141  003566  0012               	return	
  6142                           ;main.c: 2571: if(!M._RUSZ_POMPE&&!M._PROC_ODP)
  6143  003568  0103               	movlb	(_M+2) shr (0+8)
  6144  00356A  A508               	btfss	(_M+2)& (0+255),2,b
  6145  00356C  BF0D               	btfsc	(_M+7)& (0+255),7,b
  6146  00356E  D003               	goto	l608
  6147                           ;main.c: 2572: {
  6148  003570  0103               	movlb	(_M+20) shr (0+8)
  6149  003572  6B1A               	clrf	(_M+20)& (0+255),b
  6150                           ;main.c: 2574: M._RUSZ_POMPE=1;
  6151  003574  8508               	bsf	(_M+2)& (0+255),2,b
  6152  003576                     l608:
  6153                           ;main.c: 2575: }
  6154  003576  0103               	movlb	(_M+5) shr (0+8)
  6155  003578  970B               	bcf	(_M+5)& (0+255),3,b
  6156                           ;main.c: 2577: M.DPR=0;
  6157  00357A  6B23               	clrf	(_M+29)& (0+255),b
  6158                           ;main.c: 2578: }
  6159  00357C  0012               	return	
  6160  00357E                     l603:
  6161  00357E  C323  FFE8         	movff	_M+29,wreg
  6162  003582  0A00               	xorlw	0
  6163  003584  E0DC               	bz	l604
  6164  003586  0A01               	xorlw	1
  6165  003588  E0E0               	bz	l605
  6166  00358A  0012               	return	
  6167                           ;main.c: 2580: }
  6168  00358C                     l599:
  6169                           ;main.c: 2582: else
  6170  00358C  0103               	movlb	(_M+5) shr (0+8)
  6171  00358E  970B               	bcf	(_M+5)& (0+255),3,b
  6172                           ;main.c: 2585: M.DPR=0;
  6173  003590  6B23               	clrf	(_M+29)& (0+255),b
  6174                           ;main.c: 2586: }
  6175  003592  0012               	return	
  6176  003594                     __end_of_DetekcjaPrzeplywuWG:
  6177                           ;main.c: 2591: void OczekujNaPrzeplywWG(void)
  6178                           ;main.c: 2592: {
  6179  003594                     _OczekujNaPrzeplywWG:
  6180  000000                     
  6181                           ;main.c: 2593: unsigned char pmp,prz;
  6182  003594  0E00               	movlw	0
  6183  003596  B483               	btfsc	3971,2,c	;volatile
  6184  003598  0E01               	movlw	1
  6185  00359A  0100               	movlb	__Lparam shr (0+8)
  6186  00359C  6FA4               	movwf	?a_OczekujNaPrzeplywWG^(__Lparam& (0+6528
      +                          0)),b
  6187                           ;main.c: 2596: prz=(RdPrt(1))?1:0;
  6188  00359E  0E01               	movlw	1
  6189  0035A0  EC1C  F07A         	call	_RdPrt
  6190  0035A4  0E00               	movlw	0
  6191  0035A6  B0D8               	btfsc	status,0,c
  6192  0035A8  0E01               	movlw	1
  6193  0035AA  0100               	movlb	__Lparam shr (0+8)
  6194  0035AC  6FA5               	movwf	(?a_OczekujNaPrzeplywWG+1)^(__Lparam& (0+
      +                          65280)),b
  6195                           ;main.c: 2598: switch(M.RPR)
  6196  0035AE  D028               	goto	l612
  6197  0035B0                     l613:
  6198                           ;main.c: 2599: {
  6199                           ;main.c: 2601: {
  6200  0035B0  0E01               	movlw	1
  6201  0035B2  CFE8 F31A          	movff	wreg,_M+20
  6202                           ;main.c: 2603: M._prb_PRZ=1;
  6203  0035B6  0103               	movlb	(_M+5) shr (0+8)
  6204  0035B8  850B               	bsf	(_M+5)& (0+255),2,b
  6205                           ;main.c: 2604: StartRTS(11);
  6206  0035BA  0E0B               	movlw	11
  6207  0035BC  EC51  F07E         	call	_StartRTS
  6208  0035C0                     l614:
  6209                           ;main.c: 2605: }
  6210                           ;main.c: 2607: {
  6211  0035C0  0100               	movlb	__Lparam shr (0+8)
  6212  0035C2  51A5               	movf	(?a_OczekujNaPrzeplywWG+1)^(__Lparam& (0+6
      +                          5280)),w
  6213  0035C4  E007               	bz	l615
  6214  0035C6  51A4               	movf	?a_OczekujNaPrzeplywWG^(__Lparam& (0+65280
      +                          )),w
  6215  0035C8  E005               	bz	l615
  6216                           ;main.c: 2609: {
  6217  0035CA  0103               	movlb	(_M+20) shr (0+8)
  6218  0035CC  6B1A               	clrf	(_M+20)& (0+255),b
  6219                           ;main.c: 2611: M._RUSZ_POMPE=0;
  6220  0035CE  9508               	bcf	(_M+2)& (0+255),2,b
  6221                           ;main.c: 2612: M._prb_PRZ=0;
  6222  0035D0  950B               	bcf	(_M+5)& (0+255),2,b
  6223                           ;main.c: 2613: return;
  6224  0035D2  0012               	return	
  6225  0035D4                     l615:
  6226                           ;main.c: 2614: }
  6227  0035D4  0E0B               	movlw	11
  6228  0035D6  EC63  F07E         	call	_RTS
  6229  0035DA  6E00               	movwf	btemp,c
  6230  0035DC  0EF0               	movlw	240
  6231  0035DE  5C00               	subwf	btemp,w,c
  6232  0035E0  A0D8               	btfss	status,0,c
  6233  0035E2  0012               	return	
  6234                           ;main.c: 2616: M._RUSZ_POMPE=0;
  6235  0035E4  0103               	movlb	(_M+2) shr (0+8)
  6236  0035E6  9508               	bcf	(_M+2)& (0+255),2,b
  6237                           ;main.c: 2617: M.ERR_BTY=0x05;
  6238  0035E8  0E05               	movlw	5
  6239  0035EA  CFE8 F313          	movff	wreg,_M+13
  6240                           ;main.c: 2618: PrintErr(0x05,1);
  6241  0035EE  0E01               	movlw	1
  6242  0035F0  0100               	movlb	__Lparam shr (0+8)
  6243  0035F2  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  6244  0035F4  0E05               	movlw	5
  6245  0035F6  EC36  F003         	call	_PrintErr
  6246                           ;main.c: 2619: ToWriteESTAT();
  6247  0035FA  EC00  F07E         	call	_ToWriteESTAT	;wreg free
  6248                           ;main.c: 2620: ErrPTG();
  6249  0035FE  D2EE               	goto	_ErrPTG	;wreg free
  6250                           ;main.c: 2621: }
  6251  003600                     l612:
  6252  003600  C31A  FFE8         	movff	_M+20,wreg
  6253  003604  0A00               	xorlw	0
  6254  003606  E0D4               	bz	l613
  6255  003608  0A01               	xorlw	1
  6256  00360A  E0DA               	bz	l614
  6257  00360C  0012               	return	
  6258                           ;main.c: 2623: }
  6259  00360E                     __end_of_OczekujNaPrzeplywWG:
  6260                           ;main.c: 2627: void ZmienKCOKCW(void)
  6261                           ;main.c: 2628: {
  6262  00360E                     _ZmienKCOKCW:
  6263  000000                     
  6264                           ;main.c: 2629: switch(DtKNF.tpkt)
  6265  00360E  D059               	goto	l619
  6266  003610                     l621:
  6267                           ;main.c: 2632: case 3:
  6268  003610  D023               	goto	l623
  6269  003612                     l624:
  6270                           ;main.c: 2635: {
  6271                           ;main.c: 2637: {
  6272  003612  0E01               	movlw	1
  6273  003614  CFE8 F31E          	movff	wreg,_M+24
  6274                           ;main.c: 2642: StartRTdS(2);
  6275  003618  0E02               	movlw	2
  6276  00361A  EC33  F07E         	call	_StartRTdS
  6277                           ;main.c: 2643: StartRTdS(15);
  6278  00361E  0E0F               	movlw	15
  6279  003620  EC33  F07E         	call	_StartRTdS
  6280                           ;main.c: 2644: M._LOW_PMP=1;
  6281  003624  0103               	movlb	(_M+8) shr (0+8)
  6282  003626  890E               	bsf	(_M+8)& (0+255),4,b
  6283  003628                     l625:
  6284                           ;main.c: 2645: }
  6285                           ;main.c: 2647: {
  6286  003628  0E02               	movlw	2
  6287  00362A  EC45  F07E         	call	_RTdS
  6288  00362E  6E00               	movwf	btemp,c
  6289  003630  0E05               	movlw	5
  6290  003632  5C00               	subwf	btemp,w,c
  6291  003634  A0D8               	btfss	status,0,c
  6292  003636  0012               	return	
  6293                           ;main.c: 2649: RD1=!RD1;
  6294  003638  7283               	btg	3971,1,c	;volatile
  6295                           ;main.c: 2650: M.ZKP=2;
  6296  00363A  0E02               	movlw	2
  6297  00363C  CFE8 F31E          	movff	wreg,_M+24
  6298  003640                     l627:
  6299                           ;main.c: 2651: }
  6300                           ;main.c: 2653: {
  6301  003640  0E02               	movlw	2
  6302  003642  EC45  F07E         	call	_RTdS
  6303  003646  6E00               	movwf	btemp,c
  6304  003648  0E0A               	movlw	10
  6305  00364A  5C00               	subwf	btemp,w,c
  6306  00364C  A0D8               	btfss	status,0,c
  6307  00364E  0012               	return	
  6308                           ;main.c: 2655: M._ZMKCOCW=0;
  6309  003650  0103               	movlb	(_M+1) shr (0+8)
  6310  003652  9507               	bcf	(_M+1)& (0+255),2,b
  6311                           ;main.c: 2656: M.ZKP=0;
  6312  003654  6B1E               	clrf	(_M+24)& (0+255),b
  6313                           ;main.c: 2665: }
  6314  003656  0012               	return	
  6315  003658                     l623:
  6316  003658  C31E  FFE8         	movff	_M+24,wreg
  6317  00365C  0A00               	xorlw	0
  6318  00365E  E0D9               	bz	l624
  6319  003660  0A01               	xorlw	1
  6320  003662  E0E2               	bz	l625
  6321  003664  0A03               	xorlw	3
  6322  003666  E0EC               	bz	l627
  6323  003668  0012               	return	
  6324                           ;main.c: 2667: return;
  6325                           ;main.c: 2668: }
  6326                           ;main.c: 2670: {
  6327  00366A                     l632:
  6328                           ;main.c: 2672: {
  6329                           ;main.c: 2674: {
  6330  00366A  0E01               	movlw	1
  6331  00366C  CFE8 F31E          	movff	wreg,_M+24
  6332                           ;main.c: 2679: StartRTdS(2);
  6333  003670  0E02               	movlw	2
  6334  003672  EC33  F07E         	call	_StartRTdS
  6335                           ;main.c: 2680: StartRTdS(15);
  6336  003676  0E0F               	movlw	15
  6337  003678  EC33  F07E         	call	_StartRTdS
  6338                           ;main.c: 2681: M._LOW_PMP=1;
  6339  00367C  0103               	movlb	(_M+8) shr (0+8)
  6340  00367E  890E               	bsf	(_M+8)& (0+255),4,b
  6341  003680                     l633:
  6342                           ;main.c: 2682: }
  6343                           ;main.c: 2684: {
  6344  003680  0E02               	movlw	2
  6345  003682  EC45  F07E         	call	_RTdS
  6346  003686  6E00               	movwf	btemp,c
  6347  003688  0E05               	movlw	5
  6348  00368A  5C00               	subwf	btemp,w,c
  6349  00368C  A0D8               	btfss	status,0,c
  6350  00368E  0012               	return	
  6351                           ;main.c: 2686: RD1=!RD1;
  6352  003690  7283               	btg	3971,1,c	;volatile
  6353                           ;main.c: 2687: M.ZKP=2;
  6354  003692  0E02               	movlw	2
  6355  003694  CFE8 F31E          	movff	wreg,_M+24
  6356  003698                     l635:
  6357                           ;main.c: 2688: }
  6358                           ;main.c: 2690: {
  6359  003698  0E02               	movlw	2
  6360  00369A  EC45  F07E         	call	_RTdS
  6361  00369E  6E00               	movwf	btemp,c
  6362  0036A0  0E0A               	movlw	10
  6363  0036A2  5C00               	subwf	btemp,w,c
  6364  0036A4  A0D8               	btfss	status,0,c
  6365  0036A6  0012               	return	
  6366                           ;main.c: 2692: M._ZMKCOCW=0;
  6367  0036A8  0103               	movlb	(_M+1) shr (0+8)
  6368  0036AA  9507               	bcf	(_M+1)& (0+255),2,b
  6369                           ;main.c: 2693: M.ZKP=0;
  6370  0036AC  6B1E               	clrf	(_M+24)& (0+255),b
  6371                           ;main.c: 2702: }
  6372  0036AE  0012               	return	
  6373  0036B0                     l631:
  6374  0036B0  C31E  FFE8         	movff	_M+24,wreg
  6375  0036B4  0A00               	xorlw	0
  6376  0036B6  E0D9               	bz	l632
  6377  0036B8  0A01               	xorlw	1
  6378  0036BA  E0E2               	bz	l633
  6379  0036BC  0A03               	xorlw	3
  6380  0036BE  E0EC               	bz	l635
  6381  0036C0  0012               	return	
  6382                           ;main.c: 2704: return;
  6383  0036C2                     l619:
  6384  0036C2  C2BC  FFE8         	movff	_DtKNF+14,wreg
  6385  0036C6  0A00               	xorlw	0
  6386  0036C8  E0A3               	bz	l621
  6387  0036CA  0A03               	xorlw	3
  6388  0036CC  E0A1               	bz	l621
  6389  0036CE  D7F0               	goto	l631
  6390                           ;main.c: 2707: }
  6391  0036D0                     __end_of_ZmienKCOKCW:
  6392                           ;main.c: 2711: void SetLowPMP(void)
  6393                           ;main.c: 2712: {
  6394  0036D0                     _SetLowPMP:
  6395  000000                     
  6396                           ;main.c: 2713: if(!M._ZMKCOCW&&!RD2)
  6397  0036D0  0103               	movlb	(_M+1) shr (0+8)
  6398  0036D2  A507               	btfss	(_M+1)& (0+255),2,b
  6399  0036D4  B483               	btfsc	3971,2,c	;volatile
  6400  0036D6  D002               	goto	l638
  6401                           ;main.c: 2714: {
  6402  0036D8  0103               	movlb	(_M+8) shr (0+8)
  6403  0036DA  990E               	bcf	(_M+8)& (0+255),4,b
  6404  0036DC                     l638:
  6405                           ;main.c: 2716: }
  6406  0036DC  0E0F               	movlw	15
  6407  0036DE  EC45  F07E         	call	_RTdS
  6408  0036E2  6E00               	movwf	btemp,c
  6409  0036E4  0E32               	movlw	50
  6410  0036E6  5C00               	subwf	btemp,w,c
  6411  0036E8  A0D8               	btfss	status,0,c
  6412  0036EA  0012               	return	
  6413                           ;main.c: 2718: M._LOW_PMP=0;
  6414  0036EC  0103               	movlb	(_M+8) shr (0+8)
  6415  0036EE  990E               	bcf	(_M+8)& (0+255),4,b
  6416                           ;main.c: 2719: }
  6417  0036F0  0012               	return	
  6418  0036F2                     __end_of_SetLowPMP:
  6419                           ;main.c: 2724: void RuszPlomien(void)
  6420                           ;main.c: 2725: {
  6421  0036F2                     _RuszPlomien:
  6422  000000                     
  6423                           ;main.c: 2726: switch(M.RPL)
  6424  0036F2  D021               	goto	l642
  6425  0036F4                     l643:
  6426                           ;main.c: 2727: {
  6427                           ;main.c: 2729: {
  6428  0036F4  0E01               	movlw	1
  6429  0036F6  CFE8 F31B          	movff	wreg,_M+21
  6430                           ;main.c: 2731: StartRTS(3);
  6431  0036FA  0E03               	movlw	3
  6432  0036FC  EC51  F07E         	call	_StartRTS
  6433  003700                     l644:
  6434                           ;main.c: 2732: }
  6435                           ;main.c: 2734: {
  6436  003700  0E03               	movlw	3
  6437  003702  EC63  F07E         	call	_RTS
  6438  003706  6E00               	movwf	btemp,c
  6439  003708  0E10               	movlw	16
  6440  00370A  5C00               	subwf	btemp,w,c
  6441  00370C  A0D8               	btfss	status,0,c
  6442  00370E  0012               	return	
  6443                           ;main.c: 2736: M.LICZNIK_PL++;
  6444  003710  0103               	movlb	(_M+9) shr (0+8)
  6445  003712  2B0F               	incf	(_M+9)& (0+255),f,b
  6446                           ;main.c: 2737: if(M._RUSZ_RPLM)
  6447  003714  A308               	btfss	(_M+2)& (0+255),1,b
  6448  003716  D002               	goto	l646
  6449                           ;main.c: 2738: {
  6450  003718  0E01               	movlw	1
  6451  00371A  D002               	goto	L9
  6452                           ;main.c: 2740: {
  6453                           ;main.c: 2742: M._RUSZ_RPLM=0;
  6454                           ;main.c: 2743: }
  6455  00371C                     l646:
  6456                           ;main.c: 2745: else
  6457  00371C  0E02               	movlw	2
  6458  00371E  0103               	movlb	(_M+9) shr (0+8)
  6459  003720                     L9:
  6460  003720  650F               	cpfsgt	(_M+9)& (0+255),b
  6461  003722  D002               	goto	l648
  6462                           ;main.c: 2748: {
  6463  003724  890A               	bsf	(_M+4)& (0+255),4,b
  6464                           ;main.c: 2750: M._RUSZ_RPLM=0;
  6465  003726  9308               	bcf	(_M+2)& (0+255),1,b
  6466  003728                     l648:
  6467                           ;main.c: 2751: }
  6468  003728  0E05               	movlw	5
  6469  00372A  EC33  F07E         	call	_StartRTdS
  6470                           ;main.c: 2754: M._RUSZ_PLOMIEN=0;
  6471  00372E  0103               	movlb	(_M+2) shr (0+8)
  6472  003730  9108               	bcf	(_M+2)& (0+255),0,b
  6473                           ;main.c: 2755: M.RPL=0;
  6474  003732  6B1B               	clrf	(_M+21)& (0+255),b
  6475                           ;main.c: 2756: }
  6476  003734  0012               	return	
  6477  003736                     l642:
  6478  003736  C31B  FFE8         	movff	_M+21,wreg
  6479  00373A  0A00               	xorlw	0
  6480  00373C  E0DB               	bz	l643
  6481  00373E  0A01               	xorlw	1
  6482  003740  E0DF               	bz	l644
  6483  003742  0012               	return	
  6484                           ;main.c: 2758: }
  6485  003744                     __end_of_RuszPlomien:
  6486                           ;main.c: 2762: void ReloadPlomien(void)
  6487                           ;main.c: 2763: {
  6488  003744                     _ReloadPlomien:
  6489  000000                     
  6490                           ;main.c: 2764: if(!M._RUSZ_PLOMIEN&&!M._ZMKCOCW&
      +                          &!M._ROZRUCH&&(RTdS(5)>9))
  6491  003744  0103               	movlb	(_M+2) shr (0+8)
  6492  003746  A108               	btfss	(_M+2)& (0+255),0,b
  6493  003748  B507               	btfsc	(_M+1)& (0+255),2,b
  6494  00374A  D00E               	goto	l651
  6495  00374C  0103               	movlb	(_M+1) shr (0+8)
  6496  00374E  B707               	btfsc	(_M+1)& (0+255),3,b
  6497  003750  D00B               	goto	l651
  6498  003752  0E05               	movlw	5
  6499  003754  EC45  F07E         	call	_RTdS
  6500  003758  6E00               	movwf	btemp,c
  6501  00375A  0E0A               	movlw	10
  6502  00375C  5C00               	subwf	btemp,w,c
  6503                           ;main.c: 2765: {
  6504  00375E  0103               	movlb	(_M+2) shr (0+8)
  6505  003760  E304               	bnc	L32
  6506  003762  9308               	bcf	(_M+2)& (0+255),1,b
  6507                           ;main.c: 2767: M._OST_PL=0;
  6508  003764  990A               	bcf	(_M+4)& (0+255),4,b
  6509                           ;main.c: 2768: M.LICZNIK_PL=0;
  6510  003766  6B0F               	clrf	(_M+9)& (0+255),b
  6511  003768                     l651:
  6512                           ;main.c: 2769: }
  6513  003768  0103               	movlb	(_M+2) shr (0+8)
  6514  00376A                     L32:
  6515  00376A  0E0D               	movlw	13
  6516  00376C  A108               	btfss	(_M+2)& (0+255),0,b
  6517  00376E  D003               	goto	L33
  6518  003770  EC51  F07E         	call	_StartRTS
  6519                           ;main.c: 2771: if(RTS(13)>60)
  6520  003774  0E0D               	movlw	13
  6521  003776                     L33:
  6522  003776  EC63  F07E         	call	_RTS
  6523  00377A  6E00               	movwf	btemp,c
  6524  00377C  0E3D               	movlw	61
  6525  00377E  5C00               	subwf	btemp,w,c
  6526  003780  A0D8               	btfss	status,0,c
  6527  003782  0012               	return	
  6528                           ;main.c: 2772: {
  6529  003784  0103               	movlb	(_M+10) shr (0+8)
  6530  003786  6B10               	clrf	(_M+10)& (0+255),b
  6531                           ;main.c: 2774: }
  6532  003788  0012               	return	
  6533  00378A                     __end_of_ReloadPlomien:
  6534                           ;main.c: 2780: void KontrolaWentylatora(void)
  6535                           ;main.c: 2781: {
  6536  00378A                     _KontrolaWentylatora:
  6537  000000                     
  6538                           ;main.c: 2782: if(!RD3||!PWM.BufPWM)
  6539  00378A  A683               	btfss	3971,3,c	;volatile
  6540  00378C  D004               	goto	u10580
  6541  00378E  EE02  F0DA         	lfsr	0,_PWM+1
  6542  003792  50EF               	movf	indf0,w,c
  6543  003794  E103               	bnz	l655
  6544  003796                     u10580:
  6545                           ;main.c: 2783: {
  6546  003796  0E04               	movlw	4
  6547  003798  EF51  F07E         	goto	_StartRTS
  6548                           ;main.c: 2785: }
  6549  00379C                     l655:
  6550                           ;main.c: 2786: else
  6551  00379C  EE03  F024         	lfsr	0,_M+30
  6552  0037A0  50EF               	movf	indf0,w,c
  6553                           ;main.c: 2789: {
  6554  0037A2  0E04               	movlw	4
  6555  0037A4  E002               	bz	L34
  6556  0037A6  EF51  F07E         	goto	_StartRTS
  6557                           ;main.c: 2791: }
  6558                           ;main.c: 2792: else
  6559  0037AA                     L34:
  6560  0037AA  EC63  F07E         	call	_RTS
  6561  0037AE  6E00               	movwf	btemp,c
  6562  0037B0  0E06               	movlw	6
  6563  0037B2  5C00               	subwf	btemp,w,c
  6564  0037B4  A0D8               	btfss	status,0,c
  6565  0037B6  0012               	return	
  6566                           ;main.c: 2795: {
  6567  0037B8  0100               	movlb	__Lparam shr (0+8)
  6568  0037BA  0E46               	movlw	low (_RSDT1+25)
  6569  0037BC  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  6570  0037BE  0E03               	movlw	high (_RSDT1+25)
  6571  0037C0  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  6572  0037C2  0E07               	movlw	7
  6573  0037C4  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  6574  0037C6  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  6575  0037C8  ECEC  F003         	call	_BitSet2	;wreg free
  6576                           ;main.c: 2797: RD3=0;
  6577  0037CC  9683               	bcf	3971,3,c	;volatile
  6578                           ;main.c: 2798: WritePWM(0);
  6579  0037CE  0E00               	movlw	0
  6580  0037D0  EC74  F001         	call	_WritePWM
  6581                           ;main.c: 2799: M.ERR_BTY=0x07;
  6582  0037D4  0E07               	movlw	7
  6583  0037D6  CFE8 F313          	movff	wreg,_M+13
  6584                           ;main.c: 2800: PrintErr(0x07,1);
  6585  0037DA  0E01               	movlw	1
  6586  0037DC  0100               	movlb	__Lparam shr (0+8)
  6587  0037DE  6FA9               	movwf	?_PrintErr^(__Lparam& (0+65280)),b
  6588  0037E0  0E07               	movlw	7
  6589  0037E2  EC36  F003         	call	_PrintErr
  6590                           ;main.c: 2801: ToWriteESTAT();
  6591  0037E6  EC00  F07E         	call	_ToWriteESTAT	;wreg free
  6592                           ;main.c: 2802: ErrPTG();
  6593  0037EA  D1F8               	goto	_ErrPTG	;wreg free
  6594                           ;main.c: 2803: }
  6595  0037EC                     __end_of_KontrolaWentylatora:
  6596                           ;main.c: 2810: void Proba48(void)
  6597                           ;main.c: 2811: {
  6598  0037EC                     _Proba48:
  6599  000000                     
  6600                           ;main.c: 2813: if(M._RUSZ_48||M._RUSZ_48Z3) retu
      +                          rn;
  6601  0037EC  0103               	movlb	(_M+1) shr (0+8)
  6602  0037EE  A907               	btfss	(_M+1)& (0+255),4,b
  6603  0037F0  BB07               	btfsc	(_M+1)& (0+255),5,b
  6604  0037F2  0012               	return	
  6605                           ;main.c: 2814: if(RD2) StartRTG(0);
  6606  0037F4  B483               	btfsc	3971,2,c	;volatile
  6607  0037F6  D00E               	goto	L46
  6608                           ;main.c: 2815: else
  6609  0037F8  0103               	movlb	(_M+7) shr (0+8)
  6610  0037FA  BF0D               	btfsc	(_M+7)& (0+255),7,b
  6611  0037FC  0012               	return	
  6612                           ;main.c: 2818: if(RTG(0)>=24)
  6613  0037FE  0E00               	movlw	0
  6614  003800  ECBD  F07E         	call	_RTG
  6615  003804  6E00               	movwf	btemp,c
  6616  003806  0E18               	movlw	24
  6617  003808  5C00               	subwf	btemp,w,c
  6618  00380A  A0D8               	btfss	status,0,c
  6619  00380C  0012               	return	
  6620                           ;main.c: 2819: {
  6621  00380E  0103               	movlb	(_M+15) shr (0+8)
  6622  003810  6B15               	clrf	(_M+15)& (0+255),b
  6623                           ;main.c: 2821: M._RUSZ_48=1;
  6624  003812  8907               	bsf	(_M+1)& (0+255),4,b
  6625  003814                     L46:
  6626                           ;main.c: 2822: StartRTG(0);
  6627  003814  0E00               	movlw	0
  6628  003816  EFA5  F07E         	goto	_StartRTG
  6629                           ;main.c: 2823: }
  6630  00381A                     __end_of_Proba48:
  6631                           ;main.c: 2844: void Rusz48(void)
  6632                           ;main.c: 2845: {
  6633  00381A                     _Rusz48:
  6634  000000                     
  6635                           ;main.c: 2846: switch(DtKNF.tpkt)
  6636  00381A  D03E               	goto	l668
  6637  00381C                     l670:
  6638                           ;main.c: 2849: case 3:
  6639  00381C  D01B               	goto	l672
  6640  00381E                     l673:
  6641                           ;main.c: 2852: {
  6642                           ;main.c: 2854: {
  6643  00381E  ECE9  F014         	call	_ToObiegCO	;wreg free
  6644                           ;main.c: 2856: if(M._ZMKCOCW) return;
  6645  003822  0103               	movlb	(_M+1) shr (0+8)
  6646  003824  B507               	btfsc	(_M+1)& (0+255),2,b
  6647  003826  0012               	return	
  6648                           ;main.c: 2857: StartRTS(5);
  6649  003828  0E05               	movlw	5
  6650  00382A  EC51  F07E         	call	_StartRTS
  6651                           ;main.c: 2858: RD2=1;
  6652  00382E  8483               	bsf	3971,2,c	;volatile
  6653                           ;main.c: 2859: M.R48=1;
  6654  003830  0E01               	movlw	1
  6655  003832  CFE8 F315          	movff	wreg,_M+15
  6656  003836                     l675:
  6657                           ;main.c: 2860: }
  6658                           ;main.c: 2862: {
  6659  003836  0E05               	movlw	5
  6660  003838  EC63  F07E         	call	_RTS
  6661  00383C  6E00               	movwf	btemp,c
  6662  00383E  0EB4               	movlw	180
  6663  003840  5C00               	subwf	btemp,w,c
  6664  003842  A0D8               	btfss	status,0,c
  6665  003844  0012               	return	
  6666                           ;main.c: 2864: if(M._ZMKCOCW) return;
  6667  003846  0103               	movlb	(_M+1) shr (0+8)
  6668  003848  B507               	btfsc	(_M+1)& (0+255),2,b
  6669  00384A  0012               	return	
  6670                           ;main.c: 2865: RD2=0;
  6671  00384C  9483               	bcf	3971,2,c	;volatile
  6672                           ;main.c: 2866: M._RUSZ_48=0;
  6673  00384E  9907               	bcf	(_M+1)& (0+255),4,b
  6674                           ;main.c: 2867: M.R48=0;
  6675  003850  6B15               	clrf	(_M+15)& (0+255),b
  6676                           ;main.c: 2868: }
  6677  003852  0012               	return	
  6678  003854                     l672:
  6679  003854  C315  FFE8         	movff	_M+15,wreg
  6680  003858  0A00               	xorlw	0
  6681  00385A  E0E1               	bz	l673
  6682  00385C  0A01               	xorlw	1
  6683  00385E  E0EB               	bz	l675
  6684  003860  0012               	return	
  6685                           ;main.c: 2870: break;
  6686                           ;main.c: 2871: }
  6687                           ;main.c: 2873: {
  6688  003862                     l681:
  6689                           ;main.c: 2875: {
  6690                           ;main.c: 2877: {
  6691  003862  ECE9  F014         	call	_ToObiegCO	;wreg free
  6692                           ;main.c: 2879: if(M._ZMKCOCW) return;
  6693  003866  0103               	movlb	(_M+1) shr (0+8)
  6694  003868  B507               	btfsc	(_M+1)& (0+255),2,b
  6695  00386A  0012               	return	
  6696                           ;main.c: 2880: StartRTS(5);
  6697  00386C  0E05               	movlw	5
  6698  00386E  EC51  F07E         	call	_StartRTS
  6699                           ;main.c: 2881: RD2=1;
  6700  003872  8483               	bsf	3971,2,c	;volatile
  6701                           ;main.c: 2882: M.R48=1;
  6702  003874  0E01               	movlw	1
  6703  003876  CFE8 F315          	movff	wreg,_M+15
  6704  00387A                     l683:
  6705                           ;main.c: 2883: }
  6706                           ;main.c: 2885: {
  6707  00387A  0E05               	movlw	5
  6708  00387C  EC63  F07E         	call	_RTS
  6709  003880  6E00               	movwf	btemp,c
  6710  003882  0EB4               	movlw	180
  6711  003884  5C00               	subwf	btemp,w,c
  6712  003886  A0D8               	btfss	status,0,c
  6713  003888  0012               	return	
  6714                           ;main.c: 2887: if(M._ZMKCOCW) return;
  6715  00388A  0103               	movlb	(_M+1) shr (0+8)
  6716  00388C  B507               	btfsc	(_M+1)& (0+255),2,b
  6717  00388E  0012               	return	
  6718                           ;main.c: 2888: RD2=0;
  6719  003890  9483               	bcf	3971,2,c	;volatile
  6720                           ;main.c: 2889: M._RUSZ_48=0;
  6721  003892  9907               	bcf	(_M+1)& (0+255),4,b
  6722                           ;main.c: 2890: M.R48=0;
  6723  003894  6B15               	clrf	(_M+15)& (0+255),b
  6724                           ;main.c: 2891: }
  6725  003896  0012               	return	
  6726                           ;main.c: 2893: break;
  6727  003898                     l668:
  6728  003898  C2BC  FFE8         	movff	_DtKNF+14,wreg
  6729  00389C  0A00               	xorlw	0
  6730  00389E  E0BE               	bz	l670
  6731  0038A0  0A03               	xorlw	3
  6732  0038A2  E0BC               	bz	l670
  6733  0038A4  C315  FFE8         	movff	_M+15,wreg
  6734  0038A8  0A00               	xorlw	0
  6735  0038AA  E0DB               	bz	l681
  6736  0038AC  0A01               	xorlw	1
  6737  0038AE  E0E5               	bz	l683
  6738                           ;main.c: 2896: }
  6739  0038B0  0012               	return	
  6740  0038B2                     __end_of_Rusz48:
  6741                           ;main.c: 2899: void Proba48Z3(void)
  6742                           ;main.c: 2900: {
  6743  0038B2                     _Proba48Z3:
  6744  000000                     
  6745                           ;main.c: 2902: switch(DtKNF.tpkt)
  6746  0038B2  D01E               	goto	l688
  6747  0038B4                     l689:
  6748                           ;main.c: 2903: {
  6749                           ;main.c: 2905: {
  6750  0038B4  0103               	movlb	(_M+1) shr (0+8)
  6751  0038B6  AB07               	btfss	(_M+1)& (0+255),5,b
  6752  0038B8  B907               	btfsc	(_M+1)& (0+255),4,b
  6753  0038BA  0012               	return	
  6754                           ;main.c: 2907: if(RD2&&!RD1) StartRTG(2);
  6755  0038BC  B483               	btfsc	3971,2,c	;volatile
  6756  0038BE  B283               	btfsc	3971,1,c	;volatile
  6757  0038C0  D001               	goto	l691
  6758  0038C2  D013               	goto	L47
  6759  0038C4                     l691:
  6760                           ;main.c: 2908: else
  6761  0038C4  B483               	btfsc	3971,2,c	;volatile
  6762  0038C6  0012               	return	
  6763  0038C8  0103               	movlb	(_M+1) shr (0+8)
  6764  0038CA  B507               	btfsc	(_M+1)& (0+255),2,b
  6765  0038CC  0012               	return	
  6766  0038CE  0103               	movlb	(_M+7) shr (0+8)
  6767  0038D0  BF0D               	btfsc	(_M+7)& (0+255),7,b
  6768  0038D2  0012               	return	
  6769                           ;main.c: 2911: if(RTG(2)>=47)
  6770  0038D4  0E02               	movlw	2
  6771  0038D6  ECBD  F07E         	call	_RTG
  6772  0038DA  6E00               	movwf	btemp,c
  6773  0038DC  0E2F               	movlw	47
  6774  0038DE  5C00               	subwf	btemp,w,c
  6775  0038E0  A0D8               	btfss	status,0,c
  6776  0038E2  0012               	return	
  6777                           ;main.c: 2912: {
  6778  0038E4  0103               	movlb	(_M+16) shr (0+8)
  6779  0038E6  6B16               	clrf	(_M+16)& (0+255),b
  6780                           ;main.c: 2914: M._RUSZ_48Z3=1;
  6781  0038E8  8B07               	bsf	(_M+1)& (0+255),5,b
  6782  0038EA                     L47:
  6783                           ;main.c: 2915: StartRTG(2);
  6784  0038EA  0E02               	movlw	2
  6785  0038EC  EFA5  F07E         	goto	_StartRTG
  6786                           ;main.c: 2916: }
  6787  0038F0                     l688:
  6788  0038F0  C2BC  FFE8         	movff	_DtKNF+14,wreg
  6789  0038F4  0A03               	xorlw	3
  6790  0038F6  E0DE               	bz	l689
  6791  0038F8  0012               	return	
  6792                           ;main.c: 2942: }
  6793  0038FA                     __end_of_Proba48Z3:
  6794                           ;main.c: 2946: void Rusz48Z3(void)
  6795                           ;main.c: 2947: {
  6796  0038FA                     _Rusz48Z3:
  6797  000000                     
  6798                           ;main.c: 2948: switch(DtKNF.tpkt)
  6799  0038FA  D023               	goto	l697
  6800  0038FC                     l698:
  6801                           ;main.c: 2949: {
  6802                           ;main.c: 2951: {
  6803  0038FC  D01B               	goto	l700
  6804  0038FE                     l701:
  6805                           ;main.c: 2953: {
  6806                           ;main.c: 2955: {
  6807  0038FE  EC03  F015         	call	_ToObiegCW	;wreg free
  6808                           ;main.c: 2957: if(M._ZMKCOCW) return;
  6809  003902  0103               	movlb	(_M+1) shr (0+8)
  6810  003904  B507               	btfsc	(_M+1)& (0+255),2,b
  6811  003906  0012               	return	
  6812                           ;main.c: 2958: StartRTS(5);
  6813  003908  0E05               	movlw	5
  6814  00390A  EC51  F07E         	call	_StartRTS
  6815                           ;main.c: 2959: RD2=1;
  6816  00390E  8483               	bsf	3971,2,c	;volatile
  6817                           ;main.c: 2960: M.R48Z3=1;
  6818  003910  0E01               	movlw	1
  6819  003912  CFE8 F316          	movff	wreg,_M+16
  6820  003916                     l703:
  6821                           ;main.c: 2961: }
  6822                           ;main.c: 2963: {
  6823  003916  0E05               	movlw	5
  6824  003918  EC63  F07E         	call	_RTS
  6825  00391C  6E00               	movwf	btemp,c
  6826  00391E  0E0F               	movlw	15
  6827  003920  5C00               	subwf	btemp,w,c
  6828  003922  A0D8               	btfss	status,0,c
  6829  003924  0012               	return	
  6830                           ;main.c: 2965: if(M._ZMKCOCW) return;
  6831  003926  0103               	movlb	(_M+1) shr (0+8)
  6832  003928  B507               	btfsc	(_M+1)& (0+255),2,b
  6833  00392A  0012               	return	
  6834                           ;main.c: 2966: RD2=0;
  6835  00392C  9483               	bcf	3971,2,c	;volatile
  6836                           ;main.c: 2967: M._RUSZ_48Z3=0;
  6837  00392E  9B07               	bcf	(_M+1)& (0+255),5,b
  6838                           ;main.c: 2968: M.R48Z3=0;
  6839  003930  6B16               	clrf	(_M+16)& (0+255),b
  6840                           ;main.c: 2969: }
  6841  003932  0012               	return	
  6842  003934                     l700:
  6843  003934  C316  FFE8         	movff	_M+16,wreg
  6844  003938  0A00               	xorlw	0
  6845  00393A  E0E1               	bz	l701
  6846  00393C  0A01               	xorlw	1
  6847  00393E  E0EB               	bz	l703
  6848  003940  0012               	return	
  6849                           ;main.c: 2971: break;
  6850  003942                     l697:
  6851  003942  C2BC  FFE8         	movff	_DtKNF+14,wreg
  6852  003946  0A03               	xorlw	3
  6853  003948  E0D9               	bz	l698
  6854  00394A  0012               	return	
  6855                           ;main.c: 2974: }
  6856  00394C                     __end_of_Rusz48Z3:
  6857                           ;main.c: 2978: void DecyzjaOdp(void)
  6858                           ;main.c: 2979: {
  6859  00394C                     _DecyzjaOdp:
  6860  000000                     
  6861                           ;main.c: 2980: if(DtKNF.robg!=0)
  6862  00394C  EE02  F0C3         	lfsr	0,_DtKNF+21
  6863  003950  50EF               	movf	indf0,w,c
  6864  003952  B4D8               	btfsc	status,2,c
  6865  003954  0012               	return	
  6866                           ;main.c: 2981: {
  6867  003956  0103               	movlb	_MGSD shr (0+8)
  6868  003958  ADAA               	btfss	_MGSD& (0+255),6,b
  6869  00395A  D008               	goto	u10930
  6870  00395C  0103               	movlb	_MGSD shr (0+8)
  6871  00395E  ADAA               	btfss	_MGSD& (0+255),6,b
  6872  003960  0012               	return	
  6873  003962  EE03  F076         	lfsr	0,_RSDT1+73
  6874  003966  50EF               	movf	indf0,w,c
  6875  003968  B4D8               	btfsc	status,2,c
  6876  00396A  0012               	return	
  6877  00396C                     u10930:
  6878                           ;main.c: 2983: {
  6879  00396C  0103               	movlb	(_M+7) shr (0+8)
  6880  00396E  AD0D               	btfss	(_M+7)& (0+255),6,b
  6881  003970  B508               	btfsc	(_M+2)& (0+255),2,b
  6882  003972  0012               	return	
  6883  003974  0103               	movlb	(_M+1) shr (0+8)
  6884  003976  A907               	btfss	(_M+1)& (0+255),4,b
  6885  003978  BB07               	btfsc	(_M+1)& (0+255),5,b
  6886  00397A  0012               	return	
  6887  00397C  0103               	movlb	(_M+3) shr (0+8)
  6888  00397E  A309               	btfss	(_M+3)& (0+255),1,b
  6889                           ;main.c: 2985: if(M._RUSZ_CISN&&!RdPrt(15)&&(DtC
      +                          S.CS<=4))
  6890  003980  AF09               	btfss	(_M+3)& (0+255),7,b
  6891  003982  0012               	return	
  6892  003984  0E0F               	movlw	15
  6893  003986  EC1C  F07A         	call	_RdPrt
  6894  00398A  B0D8               	btfsc	status,0,c
  6895  00398C  0012               	return	
  6896  00398E  0E05               	movlw	5
  6897  003990  0100               	movlb	(_DtCS+3) shr (0+8)
  6898  003992  6162               	cpfslt	(_DtCS+3)& (0+255),b
  6899  003994  0C05               	retlw	5
  6900                           ;main.c: 2986: {
  6901  003996  0103               	movlb	(_M+7) shr (0+8)
  6902  003998  8D0D               	bsf	(_M+7)& (0+255),6,b
  6903                           ;main.c: 2988: }
  6904  00399A  0C05               	retlw	5
  6905  00399C                     __end_of_DecyzjaOdp:
  6906                           ;main.c: 2992: void Odpowietrzenie(void)
  6907                           ;main.c: 2993: {
  6908  00399C                     _Odpowietrzenie:
  6909  000000                     
  6910                           ;main.c: 2994: static unsigned char obg=0;
  6911  00399C  0103               	movlb	(_M+7) shr (0+8)
  6912  00399E  BD0D               	btfsc	(_M+7)& (0+255),6,b
  6913  0039A0  A309               	btfss	(_M+3)& (0+255),1,b
  6914  0039A2  D00B               	goto	l712
  6915                           ;main.c: 2998: {
  6916  0039A4  9D0D               	bcf	(_M+7)& (0+255),6,b
  6917                           ;main.c: 3000: M._PROC_ODP=0;
  6918  0039A6  9F0D               	bcf	(_M+7)& (0+255),7,b
  6919                           ;main.c: 3001: M.LICZNIK_ODP=0;
  6920  0039A8  6B12               	clrf	(_M+12)& (0+255),b
  6921                           ;main.c: 3002: M.ODP=0;
  6922  0039AA  6B27               	clrf	(_M+33)& (0+255),b
  6923                           ;main.c: 3003: ToObiegCO();
  6924  0039AC  ECE9  F014         	call	_ToObiegCO	;wreg free
  6925                           ;main.c: 3004: RD2=1;
  6926  0039B0  8483               	bsf	3971,2,c	;volatile
  6927                           ;main.c: 3005: M._WYLACZ=1;
  6928  0039B2  0103               	movlb	(_M+1) shr (0+8)
  6929  0039B4  8307               	bsf	(_M+1)& (0+255),1,b
  6930                           ;main.c: 3006: M.WYL=0;
  6931  0039B6  6B19               	clrf	(_M+19)& (0+255),b
  6932                           ;main.c: 3007: return;
  6933  0039B8  0012               	return	
  6934  0039BA                     l712:
  6935                           ;main.c: 3008: }
  6936  0039BA  0103               	movlb	(_M+7) shr (0+8)
  6937  0039BC  BD0D               	btfsc	(_M+7)& (0+255),6,b
  6938  0039BE  AF0D               	btfss	(_M+7)& (0+255),7,b
  6939  0039C0  D0C9               	goto	l716
  6940                           ;main.c: 3012: {
  6941  0039C2  0E01               	movlw	1
  6942  0039C4  0100               	movlb	__Lparam shr (0+8)
  6943  0039C6  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  6944  0039C8  C37C  FFE8         	movff	_RSDT1+79,wreg
  6945  0039CC  ECB9  F003         	call	_GetBit2
  6946  0039D0  E308               	bnc	u11161
  6947  0039D2  0E02               	movlw	2
  6948  0039D4  0100               	movlb	__Lparam shr (0+8)
  6949  0039D6  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  6950  0039D8  C37C  FFE8         	movff	_RSDT1+79,wreg
  6951  0039DC  ECB9  F003         	call	_GetBit2
  6952  0039E0  E222               	bc	u11300
  6953  0039E2                     u11161:
  6954  0039E2  0100               	movlb	_PFN shr (0+8)
  6955  0039E4  A567               	btfss	_PFN& (0+255),2,b
  6956  0039E6  D013               	goto	u11241
  6957  0039E8  0102               	movlb	_DtKNF shr (0+8)
  6958  0039EA  A1AE               	btfss	_DtKNF& (0+255),0,b
  6959  0039EC  D010               	goto	u11241
  6960  0039EE  0E03               	movlw	3
  6961  0039F0  0100               	movlb	__Lparam shr (0+8)
  6962  0039F2  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  6963  0039F4  C37C  FFE8         	movff	_RSDT1+79,wreg
  6964  0039F8  ECB9  F003         	call	_GetBit2
  6965  0039FC  E308               	bnc	u11241
  6966  0039FE  0E04               	movlw	4
  6967  003A00  0100               	movlb	__Lparam shr (0+8)
  6968  003A02  6FAE               	movwf	?_GetBit2^(__Lparam& (0+65280)),b
  6969  003A04  C37C  FFE8         	movff	_RSDT1+79,wreg
  6970  003A08  ECB9  F003         	call	_GetBit2
  6971  003A0C  E20C               	bc	u11300
  6972  003A0E                     u11241:
  6973  003A0E  0103               	movlb	(_M+6) shr (0+8)
  6974  003A10  B90C               	btfsc	(_M+6)& (0+255),4,b
  6975  003A12  D009               	goto	u11300
  6976  003A14  C32C  F000         	movff	_M+38,btemp
  6977  003A18  0400               	decf	btemp,w,c
  6978  003A1A  E005               	bz	u11300
  6979  003A1C  C32C  FFE8         	movff	_M+38,wreg
  6980  003A20  0A02               	xorlw	2
  6981  003A22  E001 D097          	bnz	l716
  6982  003A26                     u11300:
  6983                           ;main.c: 3015: {
  6984  003A26  0103               	movlb	(_M+7) shr (0+8)
  6985  003A28  9D0D               	bcf	(_M+7)& (0+255),6,b
  6986                           ;main.c: 3017: M._PROC_ODP=0;
  6987  003A2A  9F0D               	bcf	(_M+7)& (0+255),7,b
  6988                           ;main.c: 3018: M.LICZNIK_ODP=0;
  6989  003A2C  6B12               	clrf	(_M+12)& (0+255),b
  6990                           ;main.c: 3019: M.ODP=0;
  6991  003A2E  6B27               	clrf	(_M+33)& (0+255),b
  6992                           ;main.c: 3020: ToObiegCO();
  6993  003A30  ECE9  F014         	call	_ToObiegCO	;wreg free
  6994                           ;main.c: 3021: RD2=1;
  6995  003A34  8483               	bsf	3971,2,c	;volatile
  6996                           ;main.c: 3022: M._WYLACZ=1;
  6997  003A36  0103               	movlb	(_M+1) shr (0+8)
  6998  003A38  8307               	bsf	(_M+1)& (0+255),1,b
  6999                           ;main.c: 3023: M.WYL=0;
  7000  003A3A  6B19               	clrf	(_M+19)& (0+255),b
  7001                           ;main.c: 3024: return;
  7002  003A3C  0012               	return	
  7003                           ;main.c: 3025: }
  7004  003A3E                     l717:
  7005                           ;main.c: 3029: {
  7006                           ;main.c: 3032: {
  7007  003A3E  010E               	movlb	F2628 shr (0+8)
  7008  003A40  6B64               	clrf	F2628& (0+255),b
  7009                           ;main.c: 3034: StartRTS(5);
  7010  003A42  0E05               	movlw	5
  7011  003A44  EC51  F07E         	call	_StartRTS
  7012                           ;main.c: 3035: if(M._ZMKCOCW) return;
  7013  003A48  0103               	movlb	(_M+1) shr (0+8)
  7014  003A4A  B507               	btfsc	(_M+1)& (0+255),2,b
  7015  003A4C  0012               	return	
  7016                           ;main.c: 3036: if(!M._WYM_ODP)
  7017  003A4E  0103               	movlb	(_M+8) shr (0+8)
  7018  003A50  B10E               	btfsc	(_M+8)& (0+255),0,b
  7019  003A52  D007               	goto	l719
  7020                           ;main.c: 3037: {
  7021  003A54  BF09               	btfsc	(_M+3)& (0+255),7,b
  7022  003A56  D00A               	goto	l721
  7023  003A58  0E0F               	movlw	15
  7024  003A5A  EC1C  F07A         	call	_RdPrt
  7025  003A5E  E306               	bnc	l721
  7026  003A60  D002               	goto	L13
  7027                           ;main.c: 3039: {
  7028                           ;main.c: 3041: }
  7029  003A62                     l719:
  7030                           ;main.c: 3043: else
  7031  003A62  0103               	movlb	(_M+8) shr (0+8)
  7032  003A64  910E               	bcf	(_M+8)& (0+255),0,b
  7033  003A66                     L13:
  7034                           ;main.c: 3046: M.ODP=1;
  7035  003A66  0E01               	movlw	1
  7036  003A68  CFE8 F327          	movff	wreg,_M+33
  7037  003A6C                     l721:
  7038                           ;main.c: 3047: }
  7039  003A6C  EE03  F027         	lfsr	0,_M+33
  7040  003A70  50EF               	movf	indf0,w,c
  7041  003A72  B4D8               	btfsc	status,2,c
  7042  003A74  0012               	return	
  7043                           ;main.c: 3049: {
  7044  003A76  0103               	movlb	(_M+7) shr (0+8)
  7045  003A78  8F0D               	bsf	(_M+7)& (0+255),7,b
  7046                           ;main.c: 3052: M._RUSZ_48=0;
  7047  003A7A  9907               	bcf	(_M+1)& (0+255),4,b
  7048                           ;main.c: 3053: M.R48=0;
  7049  003A7C  6B15               	clrf	(_M+15)& (0+255),b
  7050                           ;main.c: 3054: StartRTG(0);
  7051  003A7E  0E00               	movlw	0
  7052  003A80  ECA5  F07E         	call	_StartRTG
  7053                           ;main.c: 3056: M._RUSZ_48Z3=0;
  7054  003A84  0103               	movlb	(_M+1) shr (0+8)
  7055  003A86  9B07               	bcf	(_M+1)& (0+255),5,b
  7056                           ;main.c: 3057: M.R48Z3=0;
  7057  003A88  6B16               	clrf	(_M+16)& (0+255),b
  7058                           ;main.c: 3058: StartRTG(2);
  7059  003A8A  0E02               	movlw	2
  7060  003A8C  ECA5  F07E         	call	_StartRTG
  7061                           ;main.c: 3060: M._WYLACZ=0;
  7062  003A90  0103               	movlb	(_M+1) shr (0+8)
  7063  003A92  9307               	bcf	(_M+1)& (0+255),1,b
  7064                           ;main.c: 3061: M.WYL=0;
  7065  003A94  6B19               	clrf	(_M+19)& (0+255),b
  7066                           ;main.c: 3062: }
  7067  003A96  0012               	return	
  7068  003A98                     l723:
  7069                           ;main.c: 3064: }
  7070                           ;main.c: 3067: {
  7071  003A98  010E               	movlb	F2628 shr (0+8)
  7072  003A9A  5364               	movf	F2628& (0+255),f,b
  7073  003A9C  E103               	bnz	l724
  7074  003A9E  ECE9  F014         	call	_ToObiegCO	;wreg free
  7075  003AA2  D002               	goto	l725
  7076  003AA4                     l724:
  7077                           ;main.c: 3070: else ToObiegCW();
  7078  003AA4  EC03  F015         	call	_ToObiegCW	;wreg free
  7079  003AA8                     l725:
  7080                           ;main.c: 3071: if(M._ZMKCOCW) return;
  7081  003AA8  0103               	movlb	(_M+1) shr (0+8)
  7082  003AAA  B507               	btfsc	(_M+1)& (0+255),2,b
  7083  003AAC  0012               	return	
  7084                           ;main.c: 3072: PMP.APROC=99;
  7085  003AAE  0E63               	movlw	99
  7086  003AB0  CFE8 F2FE          	movff	wreg,_PMP+2
  7087                           ;main.c: 3073: WritePWM2(ProcToPmpPwm(PMP.APROC)
      +                          );
  7088  003AB4  C2FE  FFE8         	movff	_PMP+2,wreg
  7089  003AB8  EC27  F072         	call	_ProcToPmpPwm
  7090  003ABC  EC81  F001         	call	_WritePWM2
  7091                           ;main.c: 3074: RD2=1;
  7092  003AC0  8483               	bsf	3971,2,c	;volatile
  7093                           ;main.c: 3075: if(RTS(5)<15) return;
  7094  003AC2  0E05               	movlw	5
  7095  003AC4  EC63  F07E         	call	_RTS
  7096  003AC8  6E00               	movwf	btemp,c
  7097  003ACA  0E0F               	movlw	15
  7098  003ACC  5C00               	subwf	btemp,w,c
  7099  003ACE  A0D8               	btfss	status,0,c
  7100  003AD0  0012               	return	
  7101                           ;main.c: 3076: StartRTS(5);
  7102  003AD2  0E05               	movlw	5
  7103  003AD4  EC51  F07E         	call	_StartRTS
  7104                           ;main.c: 3077: M.ODP=2;
  7105  003AD8  0E02               	movlw	2
  7106  003ADA  CFE8 F327          	movff	wreg,_M+33
  7107                           ;main.c: 3078: break;
  7108  003ADE  0C02               	retlw	2
  7109  003AE0                     l728:
  7110                           ;main.c: 3079: }
  7111                           ;main.c: 3081: {
  7112  003AE0  0103               	movlb	(_M+1) shr (0+8)
  7113  003AE2  B507               	btfsc	(_M+1)& (0+255),2,b
  7114  003AE4  0012               	return	
  7115                           ;main.c: 3083: PMP.APROC=0;
  7116  003AE6  0102               	movlb	(_PMP+2) shr (0+8)
  7117  003AE8  6BFE               	clrf	(_PMP+2)& (0+255),b
  7118                           ;main.c: 3084: WritePWM2(ProcToPmpPwm(PMP.APROC)
      +                          );
  7119  003AEA  C2FE  FFE8         	movff	_PMP+2,wreg
  7120  003AEE  EC27  F072         	call	_ProcToPmpPwm
  7121  003AF2  EC81  F001         	call	_WritePWM2
  7122                           ;main.c: 3085: RD2=0;
  7123  003AF6  9483               	bcf	3971,2,c	;volatile
  7124                           ;main.c: 3086: if(RTS(5)<15) return;
  7125  003AF8  0E05               	movlw	5
  7126  003AFA  EC63  F07E         	call	_RTS
  7127  003AFE  6E00               	movwf	btemp,c
  7128  003B00  0E0F               	movlw	15
  7129  003B02  5C00               	subwf	btemp,w,c
  7130  003B04  A0D8               	btfss	status,0,c
  7131  003B06  0012               	return	
  7132                           ;main.c: 3087: StartRTS(5);
  7133  003B08  0E05               	movlw	5
  7134  003B0A  EC51  F07E         	call	_StartRTS
  7135                           ;main.c: 3088: M.LICZNIK_ODP++;
  7136  003B0E  0103               	movlb	(_M+12) shr (0+8)
  7137  003B10  2B12               	incf	(_M+12)& (0+255),f,b
  7138                           ;main.c: 3089: if(M.LICZNIK_ODP<6)
  7139  003B12  0E06               	movlw	6
  7140  003B14  6112               	cpfslt	(_M+12)& (0+255),b
  7141  003B16  D011               	goto	l731
  7142                           ;main.c: 3090: {
  7143  003B18  EE02  F0BC         	lfsr	0,_DtKNF+14
  7144  003B1C  50EF               	movf	indf0,w,c
  7145  003B1E  E103               	bnz	u11440
  7146                           ;main.c: 3092: {
  7147                           ;main.c: 3094: }
  7148                           ;main.c: 3095: else
  7149  003B20  010E               	movlb	F2628 shr (0+8)
  7150  003B22  5364               	movf	F2628& (0+255),f,b
  7151  003B24  E003               	bz	l734
  7152  003B26                     u11440:
  7153  003B26  010E               	movlb	F2628 shr (0+8)
  7154  003B28  6B64               	clrf	F2628& (0+255),b
  7155  003B2A  D003               	goto	l733
  7156  003B2C                     l734:
  7157                           ;main.c: 3098: else obg=1;
  7158  003B2C  0E01               	movlw	1
  7159  003B2E  CFE8 FE64          	movff	wreg,F2628
  7160  003B32                     l733:
  7161                           ;main.c: 3099: }
  7162  003B32  0E01               	movlw	1
  7163  003B34  CFE8 F327          	movff	wreg,_M+33
  7164                           ;main.c: 3101: }
  7165  003B38  0C01               	retlw	1
  7166  003B3A                     l731:
  7167                           ;main.c: 3102: else
  7168  003B3A  0103               	movlb	(_M+7) shr (0+8)
  7169  003B3C  9D0D               	bcf	(_M+7)& (0+255),6,b
  7170                           ;main.c: 3105: M._PROC_ODP=0;
  7171  003B3E  9F0D               	bcf	(_M+7)& (0+255),7,b
  7172                           ;main.c: 3106: M._WYM_ODP=0;
  7173  003B40  910E               	bcf	(_M+8)& (0+255),0,b
  7174                           ;main.c: 3107: M.LICZNIK_ODP=0;
  7175  003B42  6B12               	clrf	(_M+12)& (0+255),b
  7176                           ;main.c: 3108: M.ODP=0;
  7177  003B44  6B27               	clrf	(_M+33)& (0+255),b
  7178                           ;main.c: 3110: ToObiegCO();
  7179  003B46  ECE9  F014         	call	_ToObiegCO	;wreg free
  7180                           ;main.c: 3111: RD2=1;
  7181  003B4A  8483               	bsf	3971,2,c	;volatile
  7182                           ;main.c: 3112: M._WYLACZ=1;
  7183  003B4C  0103               	movlb	(_M+1) shr (0+8)
  7184  003B4E  8307               	bsf	(_M+1)& (0+255),1,b
  7185                           ;main.c: 3113: M.WYL=0;
  7186  003B50  6B19               	clrf	(_M+19)& (0+255),b
  7187                           ;main.c: 3114: }
  7188  003B52  0012               	return	
  7189  003B54                     l716:
  7190  003B54  C327  FFE8         	movff	_M+33,wreg
  7191  003B58  0A00               	xorlw	0
  7192  003B5A  E101 D770          	bz	l717
  7193  003B5E  0A01               	xorlw	1
  7194  003B60  E09B               	bz	l723
  7195  003B62  0A03               	xorlw	3
  7196  003B64  E0BD               	bz	l728
  7197  003B66  0012               	return	
  7198                           ;main.c: 3118: }
  7199  003B68                     __end_of_Odpowietrzenie:
  7200                           ;main.c: 3152: bit KeyRes(void)
  7201                           ;main.c: 3153: {
  7202  003B68                     _KeyRes:
  7203  000000                     
  7204                           ;main.c: 3154: switch(M.KRS)
  7205  003B68  D01B               	goto	l739
  7206  003B6A                     l740:
  7207                           ;main.c: 3155: {
  7208                           ;main.c: 3157: {
  7209  003B6A  0100               	movlb	_PFN shr (0+8)
  7210  003B6C  AB67               	btfss	_PFN& (0+255),5,b
  7211  003B6E  D01E               	goto	l738
  7212                           ;main.c: 3159: {
  7213  003B70  0E01               	movlw	1
  7214  003B72  CFE8 F321          	movff	wreg,_M+27
  7215                           ;main.c: 3161: StartRTS(8);
  7216  003B76  0E08               	movlw	8
  7217  003B78  EC51  F07E         	call	_StartRTS
  7218                           ;main.c: 3162: }
  7219  003B7C  D017               	goto	l738
  7220  003B7E                     l742:
  7221                           ;main.c: 3164: }
  7222                           ;main.c: 3166: {
  7223  003B7E  0100               	movlb	_PFN shr (0+8)
  7224  003B80  AB67               	btfss	_PFN& (0+255),5,b
  7225  003B82  D00B               	goto	l743
  7226                           ;main.c: 3168: {
  7227  003B84  0E08               	movlw	8
  7228  003B86  EC63  F07E         	call	_RTS
  7229  003B8A  6E00               	movwf	btemp,c
  7230  003B8C  0E01               	movlw	1
  7231  003B8E  5C00               	subwf	btemp,w,c
  7232  003B90  E202               	bc	l744
  7233  003B92  90D8               	bcf	status,0,c
  7234  003B94  0012               	return	
  7235  003B96                     l744:
  7236                           ;main.c: 3170: return 1;
  7237  003B96  80D8               	bsf	status,0,c
  7238  003B98  0012               	return	
  7239  003B9A                     l743:
  7240                           ;main.c: 3173: else
  7241  003B9A  0103               	movlb	(_M+27) shr (0+8)
  7242  003B9C  6B21               	clrf	(_M+27)& (0+255),b
  7243                           ;main.c: 3176: }
  7244  003B9E  D006               	goto	l738
  7245  003BA0                     l739:
  7246  003BA0  C321  FFE8         	movff	_M+27,wreg
  7247  003BA4  0A00               	xorlw	0
  7248  003BA6  E0E1               	bz	l740
  7249  003BA8  0A01               	xorlw	1
  7250  003BAA  E0E9               	bz	l742
  7251  003BAC                     l738:
  7252                           ;main.c: 3179: return 0;
  7253  003BAC  90D8               	bcf	status,0,c
  7254  003BAE  0012               	return	
  7255                           ;main.c: 3180: }
  7256  003BB0                     __end_of_KeyRes:
  7257                           ;main.c: 3184: void VZPauza(void)
  7258                           ;main.c: 3185: {
  7259  003BB0                     _VZPauza:
  7260  000000                     
  7261                           ;main.c: 3186: StartRTS(2);
  7262  003BB0  0E02               	movlw	2
  7263  003BB2  EC51  F07E         	call	_StartRTS
  7264  003BB6                     l748:
  7265                           ;main.c: 3187: while(1)
  7266                           ;main.c: 3188: {
  7267  003BB6  0004               	clrwdt		;#
  7268                           ;main.c: 3190: if(M.ERR_BTY==2)
  7269  003BB8  C313  FFE8         	movff	_M+13,wreg
  7270  003BBC  0A02               	xorlw	2
  7271                           ;main.c: 3191: {
  7272  003BBE  0E02               	movlw	2
  7273  003BC0  E108               	bnz	L35
  7274  003BC2  EC63  F07E         	call	_RTS
  7275  003BC6  6E00               	movwf	btemp,c
  7276  003BC8  0E03               	movlw	3
  7277  003BCA                     L10:
  7278  003BCA  5C00               	subwf	btemp,w,c
  7279  003BCC  B0D8               	btfsc	status,0,c
  7280  003BCE  0012               	return	
  7281  003BD0  D7F2               	goto	l748
  7282                           ;main.c: 3193: }
  7283                           ;main.c: 3194: else
  7284  003BD2                     L35:
  7285  003BD2  EC63  F07E         	call	_RTS
  7286  003BD6  6E00               	movwf	btemp,c
  7287  003BD8  0E02               	movlw	2
  7288  003BDA  D7F7               	goto	L10
  7289                           ;main.c: 3197: }
  7290  003BDC                     __end_of_VZPauza:
  7291                           ;main.c: 3203: void ErrPTG(void)
  7292                           ;main.c: 3204: {
  7293  003BDC                     _ErrPTG:
  7294  000000                     
  7295                           ;main.c: 3205: BitSet2(&RSDT1.outSTAT0,1,0);
  7296  003BDC  0100               	movlb	__Lparam shr (0+8)
  7297  003BDE  0E44               	movlw	low (_RSDT1+23)
  7298  003BE0  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7299  003BE2  0E03               	movlw	high (_RSDT1+23)
  7300  003BE4  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7301  003BE6  0E01               	movlw	1
  7302  003BE8  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7303  003BEA  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7304  003BEC  ECEC  F003         	call	_BitSet2	;wreg free
  7305                           ;main.c: 3206: BitSet2(&RSDT1.outSTAT0,0,1);
  7306  003BF0  0100               	movlb	__Lparam shr (0+8)
  7307  003BF2  0E44               	movlw	low (_RSDT1+23)
  7308  003BF4  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7309  003BF6  0E03               	movlw	high (_RSDT1+23)
  7310  003BF8  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7311  003BFA  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7312  003BFC  0E01               	movlw	1
  7313  003BFE  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7314  003C00  ECEC  F003         	call	_BitSet2	;wreg free
  7315                           ;main.c: 3207: if(RefBHist(0))
  7316  003C04  0E00               	movlw	0
  7317  003C06  ECE7  F07C         	call	_RefBHist
  7318  003C0A  0900               	iorlw	0
  7319  003C0C  E003               	bz	l755
  7320                           ;main.c: 3208: {
  7321  003C0E  0E00               	movlw	0
  7322  003C10  EC04  F07E         	call	_RefBStat
  7323  003C14                     l755:
  7324                           ;main.c: 3210: }
  7325  003C14  ECBF  F017         	call	_GrzejOFF	;wreg free
  7326                           ;main.c: 3215: VZPauza();
  7327  003C18  DFCB               	call	_VZPauza	;wreg free
  7328                           ;main.c: 3216: if(DtKNF.robg==0)
  7329  003C1A  EE02  F0C3         	lfsr	0,_DtKNF+21
  7330  003C1E  50EF               	movf	indf0,w,c
  7331  003C20  E10C               	bnz	l756
  7332                           ;main.c: 3217: {
  7333  003C22  C313  FFE8         	movff	_M+13,wreg
  7334  003C26  0A05               	xorlw	5
  7335  003C28  E108               	bnz	l756
  7336                           ;main.c: 3219: {
  7337  003C2A  0EC0               	movlw	192
  7338  003C2C  0100               	movlb	__Lparam shr (0+8)
  7339  003C2E  6FB7               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  7340  003C30  6BB8               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  7341  003C32  C313  F0B9         	movff	_M+13,?_eeprom_write+2
  7342  003C36  EC5C  F006         	call	_eeprom_write	;wreg free
  7343  003C3A                     l756:
  7344                           ;main.c: 3221: }
  7345  003C3A  0E00               	movlw	0
  7346  003C3C  0103               	movlb	(_M+13) shr (0+8)
  7347  003C3E  6513               	cpfsgt	(_M+13)& (0+255),b
  7348  003C40  D004               	goto	u11561
  7349  003C42  0E04               	movlw	4
  7350  003C44  6113               	cpfslt	(_M+13)& (0+255),b
  7351  003C46  D001               	goto	u11561
  7352  003C48  D008               	goto	u11590
  7353  003C4A                     u11561:
  7354  003C4A  C313  FFE8         	movff	_M+13,wreg
  7355  003C4E  0A07               	xorlw	7
  7356  003C50  E004               	bz	u11590
  7357  003C52  C313  FFE8         	movff	_M+13,wreg
  7358  003C56  0A0D               	xorlw	13
  7359  003C58  E108               	bnz	l758
  7360  003C5A                     u11590:
  7361  003C5A  0EC0               	movlw	192
  7362  003C5C  0100               	movlb	__Lparam shr (0+8)
  7363  003C5E  6FB7               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  7364  003C60  6BB8               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  7365  003C62  C313  F0B9         	movff	_M+13,?_eeprom_write+2
  7366  003C66  EC5C  F006         	call	_eeprom_write	;wreg free
  7367  003C6A                     l758:
  7368                           ;main.c: 3224: M._RUSZ_POMPE=0;
  7369  003C6A  0103               	movlb	(_M+2) shr (0+8)
  7370  003C6C  9508               	bcf	(_M+2)& (0+255),2,b
  7371                           ;main.c: 3225: M._ROZRUCH=0;
  7372  003C6E  9707               	bcf	(_M+1)& (0+255),3,b
  7373                           ;main.c: 3226: M._MODULUJ=0;
  7374  003C70  9B08               	bcf	(_M+2)& (0+255),5,b
  7375                           ;main.c: 3228: M._BLOKUJ_ODP=0;
  7376  003C72  9D0D               	bcf	(_M+7)& (0+255),6,b
  7377                           ;main.c: 3229: M._PROC_ODP=0;
  7378  003C74  9F0D               	bcf	(_M+7)& (0+255),7,b
  7379                           ;main.c: 3230: M._WYM_ODP=0;
  7380  003C76  910E               	bcf	(_M+8)& (0+255),0,b
  7381                           ;main.c: 3232: WritePWM(0);
  7382  003C78  0E00               	movlw	0
  7383  003C7A  EC74  F001         	call	_WritePWM
  7384                           ;main.c: 3233: if(!M._WYLACZ)
  7385  003C7E  0103               	movlb	(_M+1) shr (0+8)
  7386  003C80  B307               	btfsc	(_M+1)& (0+255),1,b
  7387  003C82  D00F               	goto	l759
  7388                           ;main.c: 3234: {
  7389  003C84  6B19               	clrf	(_M+19)& (0+255),b
  7390                           ;main.c: 3236: switch(DtKNF.tpkt)
  7391  003C86  D005               	goto	l761
  7392  003C88                     l763:
  7393                           ;main.c: 3239: case 3:
  7394  003C88  A483               	btfss	3971,2,c	;volatile
  7395  003C8A  D00B               	goto	l759
  7396  003C8C                     u11630:
  7397  003C8C  0103               	movlb	(_M+1) shr (0+8)
  7398  003C8E  8307               	bsf	(_M+1)& (0+255),1,b
  7399                           ;main.c: 3259: break;
  7400  003C90  D008               	goto	l759
  7401  003C92                     l761:
  7402  003C92  C2BC  FFE8         	movff	_DtKNF+14,wreg
  7403  003C96  0A00               	xorlw	0
  7404  003C98  E0F7               	bz	l763
  7405  003C9A  0A03               	xorlw	3
  7406  003C9C  E0F5               	bz	l763
  7407                           ;main.c: 3248: break;
  7408                           ;main.c: 3249: }
  7409                           ;main.c: 3251: {
  7410  003C9E  B483               	btfsc	3971,2,c	;volatile
  7411  003CA0  D7F5               	goto	u11630
  7412  003CA2                     l759:
  7413                           ;main.c: 3262: }
  7414  003CA2  A683               	btfss	3971,3,c	;volatile
  7415  003CA4  D003               	goto	l767
  7416  003CA6  0103               	movlb	(_M+1) shr (0+8)
  7417  003CA8  8F07               	bsf	(_M+1)& (0+255),7,b
  7418  003CAA  D002               	goto	l768
  7419  003CAC                     l767:
  7420                           ;main.c: 3264: else M.VVNT=0;
  7421  003CAC  0103               	movlb	(_M+30) shr (0+8)
  7422  003CAE  6B24               	clrf	(_M+30)& (0+255),b
  7423  003CB0                     l768:
  7424                           ;main.c: 3265: M._RUSZ_PWR=0;
  7425  003CB0  0103               	movlb	(_M+1) shr (0+8)
  7426  003CB2  9D07               	bcf	(_M+1)& (0+255),6,b
  7427                           ;main.c: 3266: M._SYNCH_PGD=0;
  7428  003CB4  950E               	bcf	(_M+8)& (0+255),2,b
  7429                           ;main.c: 3267: M.HVZ=0;
  7430  003CB6  6B22               	clrf	(_M+28)& (0+255),b
  7431                           ;main.c: 3268: M.KRS=0;
  7432  003CB8  6B21               	clrf	(_M+27)& (0+255),b
  7433  003CBA                     l770:
  7434                           ;main.c: 3271: while(1)
  7435                           ;main.c: 3272: {
  7436  003CBA  0004               	clrwdt		;#
  7437                           ;main.c: 3275: BitSet2(&RSDT1.outSTAT2,7,0);
  7438  003CBC  0100               	movlb	__Lparam shr (0+8)
  7439  003CBE  0E46               	movlw	low (_RSDT1+25)
  7440  003CC0  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7441  003CC2  0E03               	movlw	high (_RSDT1+25)
  7442  003CC4  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7443  003CC6  0E07               	movlw	7
  7444  003CC8  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7445  003CCA  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7446  003CCC  ECEC  F003         	call	_BitSet2	;wreg free
  7447                           ;main.c: 3276: BitSet2(&RSDT1.outSTAT0,1,0);
  7448  003CD0  0100               	movlb	__Lparam shr (0+8)
  7449  003CD2  0E44               	movlw	low (_RSDT1+23)
  7450  003CD4  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7451  003CD6  0E03               	movlw	high (_RSDT1+23)
  7452  003CD8  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7453  003CDA  0E01               	movlw	1
  7454  003CDC  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7455  003CDE  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7456  003CE0  ECEC  F003         	call	_BitSet2	;wreg free
  7457                           ;main.c: 3277: BitSet2(&RSDT1.outSTAT0,0,1);
  7458  003CE4  0100               	movlb	__Lparam shr (0+8)
  7459  003CE6  0E44               	movlw	low (_RSDT1+23)
  7460  003CE8  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7461  003CEA  0E03               	movlw	high (_RSDT1+23)
  7462  003CEC  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7463  003CEE  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7464  003CF0  0E01               	movlw	1
  7465  003CF2  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7466  003CF4  ECEC  F003         	call	_BitSet2	;wreg free
  7467                           ;main.c: 3278: BitSet2(&RSDT1.outSTAT1,3,1);
  7468  003CF8  0100               	movlb	__Lparam shr (0+8)
  7469  003CFA  0E45               	movlw	low (_RSDT1+24)
  7470  003CFC  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7471  003CFE  0E03               	movlw	high (_RSDT1+24)
  7472  003D00  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7473  003D02  0E03               	movlw	3
  7474  003D04  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7475  003D06  0E01               	movlw	1
  7476  003D08  6FAF               	movwf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7477  003D0A  ECEC  F003         	call	_BitSet2	;wreg free
  7478                           ;main.c: 3279: if(RTS(9)>=3)
  7479  003D0E  0E09               	movlw	9
  7480  003D10  EC63  F07E         	call	_RTS
  7481  003D14  6E00               	movwf	btemp,c
  7482  003D16  0E03               	movlw	3
  7483  003D18  5C00               	subwf	btemp,w,c
  7484  003D1A  E303               	bnc	l772
  7485                           ;main.c: 3280: {
  7486  003D1C  0103               	movlb	(_M+4) shr (0+8)
  7487  003D1E  950A               	bcf	(_M+4)& (0+255),2,b
  7488                           ;main.c: 3282: M._RS_START=0;
  7489  003D20  930A               	bcf	(_M+4)& (0+255),1,b
  7490  003D22                     l772:
  7491                           ;main.c: 3283: }
  7492  003D22  ECAB  F05D         	call	_ReceptDataLCD	;wreg free
  7493                           ;main.c: 3287: PomiarPCO();
  7494  003D26  EC35  F050         	call	_PomiarPCO	;wreg free
  7495                           ;main.c: 3288: PomiarPCW();
  7496  003D2A  ECED  F050         	call	_PomiarPCW	;wreg free
  7497                           ;main.c: 3289: PomiarPFN();
  7498  003D2E  ECDF  F051         	call	_PomiarPFN	;wreg free
  7499                           ;main.c: 3290: PomiarCO();
  7500  003D32  EC75  F048         	call	_PomiarCO	;wreg free
  7501                           ;main.c: 3291: PomiarCW();
  7502  003D36  ECE0  F04A         	call	_PomiarCW	;wreg free
  7503                           ;main.c: 3292: PomiarZW();
  7504  003D3A  ECD5  F04B         	call	_PomiarZW	;wreg free
  7505                           ;main.c: 3293: FiltrPomiarowyCOCW();
  7506  003D3E  ECFF  F047         	call	_FiltrPomiarowyCOCW	;wreg free
  7507                           ;main.c: 3294: PomiarCS();
  7508  003D42  ECE0  F052         	call	_PomiarCS	;wreg free
  7509                           ;main.c: 3295: PomiarIN();
  7510  003D46  ECC5  F04A         	call	_PomiarIN	;wreg free
  7511                           ;main.c: 3296: PomiarVNT();
  7512  003D4A  EC39  F06E         	call	_PomiarVNT	;wreg free
  7513                           ;main.c: 3298: SetTrbPGD();
  7514  003D4E  EC42  F04C         	call	_SetTrbPGD	;wreg free
  7515                           ;main.c: 3301: Proba48();
  7516  003D52  DD4C               	call	_Proba48	;wreg free
  7517                           ;main.c: 3302: Proba48Z3();
  7518  003D54  DDAE               	call	_Proba48Z3	;wreg free
  7519                           ;main.c: 3304: if(!RD3&&!M._VWYBIEG) M.VVNT=0;
  7520  003D56  B683               	btfsc	3971,3,c	;volatile
  7521  003D58  D005               	goto	l773
  7522  003D5A  0103               	movlb	(_M+1) shr (0+8)
  7523  003D5C  BF07               	btfsc	(_M+1)& (0+255),7,b
  7524  003D5E  D002               	goto	l773
  7525  003D60  0103               	movlb	(_M+30) shr (0+8)
  7526  003D62  6B24               	clrf	(_M+30)& (0+255),b
  7527  003D64                     l773:
  7528                           ;main.c: 3307: RefLCDData();
  7529  003D64  EC8A  F00B         	call	_RefLCDData	;wreg free
  7530                           ;main.c: 3310: switch(DtKNF.tpkt)
  7531  003D68  D09D               	goto	l775
  7532  003D6A                     l776:
  7533                           ;main.c: 3311: {
  7534                           ;main.c: 3313: {
  7535  003D6A  0103               	movlb	(_M+1) shr (0+8)
  7536  003D6C  B507               	btfsc	(_M+1)& (0+255),2,b
  7537  003D6E  D007               	goto	l777
  7538  003D70  0E0D               	movlw	13
  7539  003D72  EC1C  F07A         	call	_RdPrt
  7540  003D76  E303               	bnc	l777
  7541  003D78  ECE9  F014         	call	_ToObiegCO	;wreg free
  7542  003D7C  D00C               	goto	l778
  7543  003D7E                     l777:
  7544                           ;main.c: 3316: else
  7545  003D7E  0103               	movlb	(_M+1) shr (0+8)
  7546  003D80  A507               	btfss	(_M+1)& (0+255),2,b
  7547  003D82  B307               	btfsc	(_M+1)& (0+255),1,b
  7548  003D84  D008               	goto	l778
  7549  003D86  B907               	btfsc	(_M+1)& (0+255),4,b
  7550  003D88  D006               	goto	l778
  7551  003D8A  A483               	btfss	3971,2,c	;volatile
  7552  003D8C  D002               	goto	u11800
  7553  003D8E  0103               	movlb	(_M+1) shr (0+8)
  7554  003D90  BB07               	btfsc	(_M+1)& (0+255),5,b
  7555  003D92                     u11800:
  7556  003D92  EC03  F015         	call	_ToObiegCW	;wreg free
  7557  003D96                     l778:
  7558                           ;main.c: 3319: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!RD
      +                          2&&!M._WYLACZ&&!M._RUSZ_48&&!M._RUSZ_48Z3)
  7559  003D96  0103               	movlb	(_M+1) shr (0+8)
  7560  003D98  AD07               	btfss	(_M+1)& (0+255),6,b
  7561  003D9A  B507               	btfsc	(_M+1)& (0+255),2,b
  7562  003D9C  D08B               	goto	l774
  7563  003D9E  B483               	btfsc	3971,2,c	;volatile
  7564  003DA0  D089               	goto	l774
  7565  003DA2  0103               	movlb	(_M+1) shr (0+8)
  7566  003DA4  B307               	btfsc	(_M+1)& (0+255),1,b
  7567  003DA6  D086               	goto	l774
  7568  003DA8  0103               	movlb	(_M+1) shr (0+8)
  7569  003DAA  B907               	btfsc	(_M+1)& (0+255),4,b
  7570  003DAC  D083               	goto	l774
  7571  003DAE  0103               	movlb	(_M+1) shr (0+8)
  7572  003DB0  BB07               	btfsc	(_M+1)& (0+255),5,b
  7573  003DB2  D080               	goto	l774
  7574                           ;main.c: 3320: {
  7575  003DB4  0103               	movlb	(_M+5) shr (0+8)
  7576  003DB6  B10B               	btfsc	(_M+5)& (0+255),0,b
  7577  003DB8  D07D               	goto	l774
  7578  003DBA  0E0D               	movlw	13
  7579  003DBC  EC1C  F07A         	call	_RdPrt
  7580  003DC0  D06C               	goto	L15
  7581                           ;main.c: 3322: {
  7582                           ;main.c: 3324: RD2=1;
  7583                           ;main.c: 3325: }
  7584  003DC2                     l782:
  7585                           ;main.c: 3328: }
  7586                           ;main.c: 3330: {
  7587  003DC2  EE02  F0BC         	lfsr	0,_DtKNF+14
  7588  003DC6  50EF               	movf	indf0,w,c
  7589  003DC8  E10A               	bnz	l783
  7590  003DCA  0100               	movlb	(_DtCW+1) shr (0+8)
  7591  003DCC  A76F               	btfss	(_DtCW+1)& (0+255),3,b
  7592  003DCE  D007               	goto	l783
  7593                           ;main.c: 3333: {
  7594  003DD0  0103               	movlb	(_M+1) shr (0+8)
  7595  003DD2  A507               	btfss	(_M+1)& (0+255),2,b
  7596                           ;main.c: 3335: {
  7597  003DD4  BB07               	btfsc	(_M+1)& (0+255),5,b
  7598  003DD6  D021               	goto	l786
  7599  003DD8  ECE9  F014         	call	_ToObiegCO	;wreg free
  7600                           ;main.c: 3337: }
  7601  003DDC  D01E               	goto	l786
  7602  003DDE                     l783:
  7603                           ;main.c: 3339: else
  7604  003DDE  0103               	movlb	(_M+1) shr (0+8)
  7605  003DE0  B507               	btfsc	(_M+1)& (0+255),2,b
  7606  003DE2  D007               	goto	l787
  7607  003DE4  0E0D               	movlw	13
  7608  003DE6  EC1C  F07A         	call	_RdPrt
  7609  003DEA  E303               	bnc	l787
  7610  003DEC  ECE9  F014         	call	_ToObiegCO	;wreg free
  7611  003DF0  D014               	goto	l786
  7612  003DF2                     l787:
  7613                           ;main.c: 3342: else
  7614  003DF2  0103               	movlb	(_M+1) shr (0+8)
  7615  003DF4  B507               	btfsc	(_M+1)& (0+255),2,b
  7616  003DF6  D007               	goto	l789
  7617  003DF8  0E0A               	movlw	10
  7618  003DFA  EC1C  F07A         	call	_RdPrt
  7619  003DFE  E303               	bnc	l789
  7620  003E00  EC03  F015         	call	_ToObiegCW	;wreg free
  7621  003E04  D00A               	goto	l786
  7622  003E06                     l789:
  7623                           ;main.c: 3344: else
  7624  003E06  0103               	movlb	(_M+1) shr (0+8)
  7625  003E08  A507               	btfss	(_M+1)& (0+255),2,b
  7626  003E0A  B483               	btfsc	3971,2,c	;volatile
  7627  003E0C  D006               	goto	l786
  7628  003E0E  B307               	btfsc	(_M+1)& (0+255),1,b
  7629  003E10  D004               	goto	l786
  7630  003E12  0103               	movlb	(_M+1) shr (0+8)
  7631  003E14  A907               	btfss	(_M+1)& (0+255),4,b
  7632  003E16  EC03  F015         	call	_ToObiegCW	;wreg free
  7633  003E1A                     l786:
  7634                           ;main.c: 3346: }
  7635  003E1A  0103               	movlb	(_M+1) shr (0+8)
  7636  003E1C  AD07               	btfss	(_M+1)& (0+255),6,b
  7637  003E1E  B507               	btfsc	(_M+1)& (0+255),2,b
  7638  003E20  D049               	goto	l774
  7639  003E22  B483               	btfsc	3971,2,c	;volatile
  7640  003E24  D047               	goto	l774
  7641  003E26  0103               	movlb	(_M+1) shr (0+8)
  7642  003E28  B307               	btfsc	(_M+1)& (0+255),1,b
  7643  003E2A  D044               	goto	l774
  7644  003E2C  0103               	movlb	(_M+1) shr (0+8)
  7645  003E2E  B907               	btfsc	(_M+1)& (0+255),4,b
  7646  003E30  D041               	goto	l774
  7647                           ;main.c: 3349: {
  7648  003E32  0103               	movlb	(_M+5) shr (0+8)
  7649  003E34  B10B               	btfsc	(_M+5)& (0+255),0,b
  7650  003E36  D004               	goto	u12241
  7651  003E38  0E0D               	movlw	13
  7652  003E3A  EC1C  F07A         	call	_RdPrt
  7653  003E3E  E22E               	bc	u12500
  7654  003E40                     u12241:
  7655  003E40  0103               	movlb	(_M+5) shr (0+8)
  7656  003E42  A10B               	btfss	(_M+5)& (0+255),0,b
  7657  003E44  D037               	goto	l774
  7658  003E46  0E0A               	movlw	10
  7659  003E48  EC1C  F07A         	call	_RdPrt
  7660  003E4C  D026               	goto	L15
  7661                           ;main.c: 3351: {
  7662                           ;main.c: 3353: RD2=1;
  7663                           ;main.c: 3354: }
  7664  003E4E                     l794:
  7665                           ;main.c: 3357: }
  7666                           ;main.c: 3359: {
  7667  003E4E  0103               	movlb	(_M+1) shr (0+8)
  7668  003E50  B507               	btfsc	(_M+1)& (0+255),2,b
  7669  003E52  D007               	goto	l795
  7670  003E54  0E0D               	movlw	13
  7671  003E56  EC1C  F07A         	call	_RdPrt
  7672  003E5A  E303               	bnc	l795
  7673  003E5C  ECE9  F014         	call	_ToObiegCO	;wreg free
  7674  003E60  D00A               	goto	l796
  7675  003E62                     l795:
  7676                           ;main.c: 3361: else
  7677  003E62  0103               	movlb	(_M+1) shr (0+8)
  7678  003E64  A507               	btfss	(_M+1)& (0+255),2,b
  7679  003E66  B483               	btfsc	3971,2,c	;volatile
  7680  003E68  D006               	goto	l796
  7681  003E6A  B307               	btfsc	(_M+1)& (0+255),1,b
  7682  003E6C  D004               	goto	l796
  7683  003E6E  0103               	movlb	(_M+1) shr (0+8)
  7684  003E70  A907               	btfss	(_M+1)& (0+255),4,b
  7685  003E72  EC03  F015         	call	_ToObiegCW	;wreg free
  7686  003E76                     l796:
  7687                           ;main.c: 3364: if(!M._RUSZ_PWR&&!M._ZMKCOCW&&!RD
      +                          2&&!M._WYLACZ&&!M._RUSZ_48)
  7688  003E76  0103               	movlb	(_M+1) shr (0+8)
  7689  003E78  AD07               	btfss	(_M+1)& (0+255),6,b
  7690  003E7A  B507               	btfsc	(_M+1)& (0+255),2,b
  7691  003E7C  D01B               	goto	l774
  7692  003E7E  B483               	btfsc	3971,2,c	;volatile
  7693  003E80  D019               	goto	l774
  7694  003E82  0103               	movlb	(_M+1) shr (0+8)
  7695  003E84  B307               	btfsc	(_M+1)& (0+255),1,b
  7696  003E86  D016               	goto	l774
  7697  003E88  0103               	movlb	(_M+1) shr (0+8)
  7698  003E8A  B907               	btfsc	(_M+1)& (0+255),4,b
  7699  003E8C  D013               	goto	l774
  7700                           ;main.c: 3365: {
  7701  003E8E  0103               	movlb	(_M+5) shr (0+8)
  7702  003E90  B10B               	btfsc	(_M+5)& (0+255),0,b
  7703  003E92  D010               	goto	l774
  7704  003E94  0E0D               	movlw	13
  7705  003E96  EC1C  F07A         	call	_RdPrt
  7706  003E9A                     L15:
  7707  003E9A  E30C               	bnc	l774
  7708  003E9C                     u12500:
  7709                           ;main.c: 3367: {
  7710  003E9C  0103               	movlb	(_M+1) shr (0+8)
  7711  003E9E  8307               	bsf	(_M+1)& (0+255),1,b
  7712                           ;main.c: 3369: RD2=1;
  7713  003EA0  8483               	bsf	3971,2,c	;volatile
  7714                           ;main.c: 3370: }
  7715  003EA2  D008               	goto	l774
  7716  003EA4                     l775:
  7717  003EA4  C2BC  FFE8         	movff	_DtKNF+14,wreg
  7718  003EA8  0A00               	xorlw	0
  7719  003EAA  E08B               	bz	l782
  7720  003EAC  0A03               	xorlw	3
  7721  003EAE  E101 D75C          	bz	l776
  7722  003EB2  D7CD               	goto	l794
  7723  003EB4                     l774:
  7724                           ;main.c: 3376: if(M._ZMKCOCW) ZmienKCOKCW();
  7725  003EB4  0103               	movlb	(_M+1) shr (0+8)
  7726  003EB6  B507               	btfsc	(_M+1)& (0+255),2,b
  7727  003EB8  EC07  F01B         	call	_ZmienKCOKCW	;wreg free
  7728                           ;main.c: 3377: if(M._WYLACZ) Wylacz();
  7729  003EBC  0103               	movlb	(_M+1) shr (0+8)
  7730  003EBE  B307               	btfsc	(_M+1)& (0+255),1,b
  7731  003EC0  EC1F  F019         	call	_Wylacz	;wreg free
  7732                           ;main.c: 3378: if(M._VWYBIEG) VWybieg();
  7733  003EC4  0103               	movlb	(_M+1) shr (0+8)
  7734  003EC6  BF07               	btfsc	(_M+1)& (0+255),7,b
  7735  003EC8  EC46  F01A         	call	_VWybieg	;wreg free
  7736                           ;main.c: 3379: if(M._RUSZ_48) Rusz48();
  7737  003ECC  0103               	movlb	(_M+1) shr (0+8)
  7738  003ECE  B907               	btfsc	(_M+1)& (0+255),4,b
  7739  003ED0  DCA4               	call	_Rusz48	;wreg free
  7740                           ;main.c: 3380: if(M._RUSZ_48Z3) Rusz48Z3();
  7741  003ED2  0103               	movlb	(_M+1) shr (0+8)
  7742  003ED4  BB07               	btfsc	(_M+1)& (0+255),5,b
  7743  003ED6  DD11               	call	_Rusz48Z3	;wreg free
  7744                           ;main.c: 3383: if(RD2)
  7745  003ED8  A483               	btfss	3971,2,c	;volatile
  7746  003EDA  D004               	goto	l805
  7747                           ;main.c: 3384: {
  7748  003EDC  0E63               	movlw	99
  7749  003EDE  CFE8 F2FE          	movff	wreg,_PMP+2
  7750                           ;main.c: 3386: }
  7751  003EE2  D002               	goto	l806
  7752  003EE4                     l805:
  7753                           ;main.c: 3387: else
  7754  003EE4  0102               	movlb	(_PMP+2) shr (0+8)
  7755  003EE6  6BFE               	clrf	(_PMP+2)& (0+255),b
  7756  003EE8                     l806:
  7757                           ;main.c: 3390: }
  7758  003EE8  C2FE  FFE8         	movff	_PMP+2,wreg
  7759  003EEC  EC27  F072         	call	_ProcToPmpPwm
  7760  003EF0  EC81  F001         	call	_WritePWM2
  7761                           ;main.c: 3394: if(KeyRes())
  7762  003EF4  DE39               	call	_KeyRes	;wreg free
  7763  003EF6  E201 D6E0          	bnc	l770
  7764                           ;main.c: 3395: {
  7765  003EFA  9683               	bcf	3971,3,c	;volatile
  7766                           ;main.c: 3397: RD2=0;
  7767  003EFC  9483               	bcf	3971,2,c	;volatile
  7768                           ;main.c: 3398: ToReset();
  7769  003EFE  D801               	call	_ToReset	;wreg free
  7770  003F00  D6DC               	goto	l770
  7771  003F02                     __end_of_ErrPTG:
  7772                           ;main.c: 3403: void ToReset(void)
  7773                           ;main.c: 3404: {
  7774  003F02                     _ToReset:
  7775  000000                     
  7776                           ;main.c: 3405: RD3=0;
  7777  003F02  9683               	bcf	3971,3,c	;volatile
  7778                           ;main.c: 3406: RD2=0;
  7779  003F04  9483               	bcf	3971,2,c	;volatile
  7780                           ;main.c: 3407: EndErr();
  7781  003F06  EC7E  F003         	call	_EndErr	;wreg free
  7782                           ;main.c: 3408: BitSet2(&RSDT1.outSTAT0,0,0);
  7783  003F0A  0100               	movlb	__Lparam shr (0+8)
  7784  003F0C  0E44               	movlw	low (_RSDT1+23)
  7785  003F0E  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7786  003F10  0E03               	movlw	high (_RSDT1+23)
  7787  003F12  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7788  003F14  6BAE               	clrf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7789  003F16  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7790  003F18  ECEC  F003         	call	_BitSet2	;wreg free
  7791                           ;main.c: 3409: BitSet2(&RSDT1.outSTAT0,1,0);
  7792  003F1C  0100               	movlb	__Lparam shr (0+8)
  7793  003F1E  0E44               	movlw	low (_RSDT1+23)
  7794  003F20  6FAC               	movwf	?_BitSet2^(__Lparam& (0+65280)),b
  7795  003F22  0E03               	movlw	high (_RSDT1+23)
  7796  003F24  6FAD               	movwf	(?_BitSet2+1)^(__Lparam& (0+65280)),b
  7797  003F26  0E01               	movlw	1
  7798  003F28  6FAE               	movwf	(?_BitSet2+2)^(__Lparam& (0+65280)),b
  7799  003F2A  6BAF               	clrf	(?_BitSet2+3)^(__Lparam& (0+65280)),b
  7800  003F2C  ECEC  F003         	call	_BitSet2	;wreg free
  7801                           ;main.c: 3410: eeprom_write(0x00C0,0x00);
  7802  003F30  0EC0               	movlw	192
  7803  003F32  0100               	movlb	__Lparam shr (0+8)
  7804  003F34  6FB7               	movwf	?_eeprom_write^(__Lparam& (0+65280)),b
  7805  003F36  6BB8               	clrf	(?_eeprom_write+1)^(__Lparam& (0+65280)),b
  7806  003F38  6BB9               	clrf	(?_eeprom_write+2)^(__Lparam& (0+65280)),b
  7807  003F3A  EC5C  F006         	call	_eeprom_write	;wreg free
  7808                           ;main.c: 3411: StartRTS(2);
  7809  003F3E  0E02               	movlw	2
  7810  003F40  EC51  F07E         	call	_StartRTS
  7811                           ;main.c: 3412: while(RTS(2)<1)
  7812  003F44                     l809:
  7813  003F44  0E02               	movlw	2
  7814  003F46  EC63  F07E         	call	_RTS
  7815  003F4A  6E00               	movwf	btemp,c
  7816  003F4C  0E01               	movlw	1
  7817  003F4E  5C00               	subwf	btemp,w,c
  7818  003F50  E204               	bc	l812
  7819                           ;main.c: 3413: {
  7820  003F52  0004               	clrwdt		;#
  7821                           ;main.c: 3415: ReceptDataLCD();
  7822  003F54  ECAB  F05D         	call	_ReceptDataLCD	;wreg free
  7823  003F58  D7F5               	goto	l809
  7824                           ;main.c: 3416: }
  7825  003F5A                     l812:
  7826  003F5A  D7FF               	goto	l812
  7827  003F5C                     __end_of_ToReset:
  7828                           ;main.c: 3421: void InitGlobal(void)
  7829                           ;main.c: 3422: {
  7830  003F5C                     _InitGlobal:
  7831  000000                     
  7832                           ;main.c: 3424: IPEN=1;
  7833  003F5C  8ED0               	bsf	4048,7,c
  7834                           ;main.c: 3426: GIEH=1;
  7835  003F5E  8EF2               	bsf	intcon,7,c
  7836                           ;main.c: 3427: GIEL=1;
  7837  003F60  8CF2               	bsf	intcon,6,c
  7838                           ;main.c: 3428: }
  7839  003F62  0012               	return	
  7840  003F64                     __end_of_InitGlobal:
  7841  000000                     
  7842  000000                     
  7843  000000                     
  7844  000000                     
  7845  000000                     
  7846  000000                     
  7847  000000                     
  7848  000000                     
  7849  000000                     
  7850  000000                     
  7851  000000                     
  7852  000000                     
  7853  000000                     
  7854  000000                     
  7855  000000                     
  7856  000000                     
  7857  000000                     
  7858  000000                     
  7859  000000                     
  7860  000000                     
  7861  000000                     
  7862  000000                     
  7863  000000                     
  7864  000000                     
  7865  000000                     
  7866  000000                     
  7867  000000                     
  7868  000000                     
  7869  000000                     
  7870  000000                     
  7871  000000                     
  7872  000000                     
  7873  000000                     
  7874  000000                     
  7875  000000                     
  7876  000000                     
  7877  000000                     
  7878  000000                     
  7879  000000                     
  7880  000000                     
  7881  000000                     
  7882  000000                     
  7883  000000                     
  7884  000000                     
  7885  000000                     
  7886  000000                     
  7887  000000                     
  7888  000000                     
  7889  000000                     
  7890  000000                     
  7891  000000                     
  7892  000000                     
  7893  000000                     
  7894  000000                     
  7895  000000                     
  7896  000000                     
  7897  000000                     
  7898  000000                     
  7899  000000                     
  7900  000000                     
  7901  000000                     
  7902  000000                     
  7903  000000                     
  7904  000000                     
  7905  000000                     
  7906  000000                     
  7907  000000                     
  7908  000000                     
  7909  000000                     
  7910  000000                     
  7911  000000                     
  7912  000000                     
  7913  000000                     
  7914  000000                     
  7915  000000                     
  7916  000000                     
  7917  000000                     
  7918  000000                     
  7919  000000                     
  7920  000000                     
  7921  000000                     
  7922  000000                     
  7923  000000                     
  7924  000000                     
  7925  000000                     
  7926  000000                     
  7927  000000                     
  7928  000000                     
  7929  000000                     
  7930  000000                     
  7931  000000                     
  7932  000000                     
  7933  000000                     
  7934  000000                     
  7935  000000                     
  7936  000000                     
  7937  000000                     
  7938  000000                     
  7939  000000                     
  7940  000000                     
  7941  000000                     
  7942  000000                     
  7943  000000                     
  7944  000000                     
  7945  000000                     
  7946  000000                     
  7947  000000                     
  7948  000000                     
  7949  000000                     
  7950  000000                     
  7951  000000                     
  7952  000000                     
  7953  000000                     
  7954  000000                     
  7955  000000                     
  7956  000000                     
  7957  000000                     
  7958  000000                     
  7959  000000                     
  7960  000000                     
  7961  000000                     
  7962  000000                     
  7963  000000                     
  7964  000000                     
  7965  000000                     
  7966  000000                     
  7967  000000                     
  7968  000000                     
  7969  000000                     
  7970  000000                     
  7971  000000                     
  7972  000000                     
  7973  000000                     
  7974  000000                     
  7975  000000                     
  7976  000000                     
  7977  000000                     
  7978  000000                     
  7979  000000                     
  7980  000000                     
  7981  000000                     
  7982  000000                     
  7983  000000                     
  7984  000000                     
  7985  000000                     
  7986  000000                     
  7987  000000                     
  7988  000000                     
  7989  000000                     
  7990  000000                     
  7991  000000                     
  7992  000000                     
  7993  000000                     
  7994  000000                     
  7995  000000                     
  7996  000000                     
  7997  000000                     
  7998  000000                     
  7999  000000                     
  8000  000000                     
  8001  000000                     
  8002  000000                     
  8003  000000                     
  8004  000000                     
  8005  000000                     
  8006  000000                     
  8007  000000                     
  8008  000000                     
  8009  000000                     
  8010  000000                     
  8011  000000                     
  8012  000000                     
  8013  000000                     
  8014  000000                     
  8015  000000                     
  8016  000000                     
  8017  000000                     
  8018  000000                     
  8019  000000                     
  8020  000000                     
  8021  000000                     
  8022  000000                     
  8023  000000                     
  8024  000000                     
  8025  000000                     
  8026  000000                     
  8027  000000                     
  8028  000000                     
  8029  000000                     
  8030  000000                     
  8031  000000                     
  8032  000000                     
  8033  000000                     
  8034  000000                     
  8035  000000                     
  8036  000000                     
  8037  000000                     
  8038  000000                     
  8039  000000                     
  8040  000000                     
  8041  000000                     
  8042  000000                     
  8043  000000                     
  8044  000000                     
  8045  000000                     
  8046  000000                     
  8047  000000                     
  8048  000000                     
  8049  000000                     
  8050  000000                     
  8051  000000                     
  8052  000000                     
  8053  000000                     
  8054  000000                     
  8055  000000                     
  8056  000000                     
  8057  000000                     
  8058  000000                     
  8059  000000                     
  8060  000000                     
  8061  000000                     
  8062  000000                     
  8063  000000                     
  8064  000000                     
  8065  000000                     
  8066  000000                     
  8067  000000                     
  8068  000000                     
  8069  000000                     
  8070  000000                     
  8071  000000                     
  8072  000000                     
  8073  000000                     
  8074  000000                     
  8075  000000                     
  8076  000000                     
  8077  000000                     
  8078  000000                     
  8079  000000                     
  8080  000000                     
  8081  000000                     
  8082  000000                     
  8083  000000                     
  8084  000000                     
  8085  000000                     
  8086  000000                     
  8087  000000                     
  8088  000000                     
  8089  000000                     
  8090  000000                     
  8091  000000                     
  8092  000000                     
  8093  000000                     
  8094  000000                     
  8095  000000                     
  8096  000000                     
  8097  000000                     
  8098  000000                     
  8099  000000                     
  8100  000000                     
  8101  000000                     
  8102  000000                     
  8103  000000                     
  8104  000000                     
  8105  000000                     
  8106  000000                     
  8107  000000                     
  8108  000000                     
  8109  000000                     
  8110  000000                     
  8111  000000                     
  8112  000000                     
  8113  000000                     
  8114  000000                     
  8115  000000                     
  8116  000000                     
  8117  000000                     
  8118  000000                     
  8119  000000                     
  8120  000000                     
  8121  000000                     
  8122  000000                     
  8123  000000                     
  8124  000000                     
  8125  000000                     
  8126  000000                     
  8127  000000                     
  8128  000000                     
  8129  000000                     
  8130  000000                     
  8131  000000                     
  8132  000000                     
  8133  000000                     
  8134  000000                     
  8135  000000                     
  8136  000000                     
  8137  000000                     
  8138  000000                     
  8139  000000                     
  8140  000000                     
  8141  000000                     
  8142  000000                     
  8143  000000                     
  8144  000000                     
  8145  000000                     
  8146  000000                     
  8147  000000                     
  8148  000000                     
  8149  000000                     
  8150  000000                     
  8151  000000                     
  8152  000000                     
  8153  000000                     
  8154  000000                     
  8155  000000                     
  8156  000000                     
  8157  000000                     
  8158  000000                     
  8159  000000                     
  8160  000000                     
  8161  000000                     
  8162  000000                     
  8163  000000                     
  8164  000000                     
  8165  000000                     
  8166  000000                     
  8167  000000                     
  8168  000000                     
  8169  000000                     
  8170  000000                     
  8171  000000                     
  8172  000000                     
  8173  000000                     
  8174  000000                     
  8175  000000                     
  8176  000000                     
  8177  000000                     
  8178  000000                     
  8179  000000                     
  8180  000000                     
  8181  000000                     
  8182  000000                     
  8183  000000                     
  8184  000000                     
  8185  000000                     
  8186  000000                     
  8187  000000                     
  8188  000000                     
  8189  000000                     
  8190  000000                     
  8191  000000                     
  8192  000000                     
  8193  000000                     
  8194  000000                     
  8195  000000                     
  8196  000000                     
  8197  000000                     
  8198  000000                     
  8199  000000                     
  8200  000000                     
  8201  000000                     
  8202  000000                     
  8203  000000                     
  8204  000000                     
  8205  000000                     
  8206  000000                     
  8207  000000                     
  8208  000000                     
  8209  000000                     
  8210  000000                     
  8211  000000                     
  8212  000000                     
  8213  000000                     
  8214  000000                     
  8215  000000                     
  8216  000000                     
  8217  000000                     
  8218  000000                     
  8219  000000                     
  8220  000000                     
  8221  000000                     
  8222  000000                     
  8223  000000                     
  8224  000000                     
  8225  000000                     
  8226  000000                     
  8227  000000                     
  8228  000000                     
  8229  000000                     
  8230  000000                     
  8231  000000                     
  8232  000000                     
  8233  000000                     
  8234  000000                     
  8235  000000                     
  8236  000000                     
  8237  000000                     
  8238  000000                     
  8239  000000                     
  8240  000000                     
  8241  000000                     
  8242  000000                     
  8243  000000                     
  8244  000000                     
  8245  000000                     
  8246  000000                     
  8247  000000                     
  8248  000000                     
  8249  000000                     
  8250  000000                     
  8251  000000                     
  8252  000000                     
  8253  000000                     
  8254  000000                     
  8255  000000                     
  8256  000000                     
  8257  000000                     
  8258  000000                     
  8259  000000                     
  8260  000000                     
  8261  000000                     
  8262  000000                     
  8263  000000                     
  8264  000000                     
  8265  000000                     
  8266  000000                     
  8267  000000                     
  8268  000000                     
  8269  000000                     
  8270  000000                     
  8271  000000                     
  8272  000000                     
  8273  000000                     
  8274  000000                     
  8275  000000                     
  8276  000000                     
  8277                           
  8278                           	psect	eeprom_data
  8279                           ;main.h: 120: extern void GoldenEye(void);
  8280                           ;main.h: 123: void InitGlobal(void);
  8281                           ;main.h: 124: void ErrDTF(void);
  8282                           ;main.h: 125: void ErrPTG(void);
  8283                           ;main.h: 126: void ToReset(void);
  8284                           ;main.h: 127: void DecWSW(void);
  8285                           ;main.h: 128: void DecERR(void);
  8286                           ;main.h: 129: void DecSTR(void);
  8287                           ;main.h: 130: void DecRozruch(void);
  8288                           ;main.h: 131: void SetRozruch(void);
  8289                           ;main.h: 132: void DecWylacz(void);
  8290                           ;main.h: 133: void SetWylacz(void);
  8291                           ;main.h: 134: void RuszPlomien(void);
  8292                           ;main.h: 135: void ReloadPlomien(void);
  8293                           ;main.h: 136: void RuszCiag(void);
  8294                           ;main.h: 137: void ReloadCiag(void);
  8295                           ;main.h: 138: void Proba48(void);
  8296                           ;main.h: 139: void Rusz48(void);
  8297                           ;main.h: 140: void Proba48Z3(void);
  8298                           ;main.h: 141: void Rusz48Z3(void);
  8299                           ;main.h: 142: void Rozruch(void);
  8300                           ;main.h: 143: void DecyzjaPLM(void);
  8301                           ;main.h: 144: void DecyzjaPLM2(void);
  8302                           ;main.h: 145: void VWybieg(void);
  8303                           ;main.h: 146: void ZmienKCOKCW(void);
  8304                           ;main.h: 147: void FunkcjaSerwisowa(void);
  8305                           ;main.h: 148: void KolejkaPobudzen(void);
  8306                           ;main.h: 149: void BlokadaL3(void);
  8307                           ;main.h: 150: void Blokada15S(void);
  8308                           ;main.h: 151: void ToObiegCW(void);
  8309                           ;main.h: 152: void ToObiegCO(void);
  8310                           ;main.h: 153: void Wylacz(void);
  8311                           ;main.h: 154: void RuszPWR(void);
  8312                           ;main.h: 155: void ClearData(void);
  8313                           ;main.h: 156: void SetLoMod(void);
  8314                           ;main.h: 157: void RestartFltPrt(void);
  8315                           ;main.h: 158: void ClearDiode(void);
  8316                           ;main.h: 159: void DecyzjaAntyLeg(void);
  8317                           ;main.h: 160: void DetekcjaPrzeplywuWG(void);
  8318                           ;main.h: 161: void OczekujNaPrzeplywWG(void);
  8319                           ;main.h: 162: void RefLCDData(void);
  8320                           ;main.h: 163: void GrzejON(void);
  8321                           ;main.h: 164: void GrzejOFF(void);
  8322                           ;main.h: 165: void KalibracjaWentylatora(void);
  8323                           ;main.h: 166: void KontrolaWentylatora(void);
  8324                           ;main.h: 167: void Odpowietrzenie(void);
  8325                           ;main.h: 168: void DecyzjaOdp(void);
  8326                           ;main.h: 170: extern void InitOsc(void);
  8327                           ;main.h: 172: extern void InitAC(void);
  8328                           ;main.h: 174: extern void InitWsw(void);
  8329                           ;main.h: 175: extern bit GetPoz(const unsigned c
      +                          har nrkol,const unsigned char nrpoz);
  8330                           ;main.h: 177: extern void InitPWM(void);
  8331                           ;main.h: 178: extern void WritePWM(const unsigne
      +                          d char tpwm);
  8332                           ;main.h: 179: extern void WritePWM2(const unsign
      +                          ed char tpwm);
  8333                           ;main.h: 181: extern void ClsScr(void);
  8334                           ;main.h: 182: extern void EndClsScr(void);
  8335                           ;main.h: 183: extern void TestScr(void);
  8336                           ;main.h: 184: extern void EndTestScr(void);
  8337                           ;main.h: 185: extern void ClsScr(void);
  8338                           ;main.h: 186: extern void EndClsScr(void);
  8339                           ;main.h: 187: extern void PrintErr(const unsigne
      +                          d char kod, const unsigned char pls);
  8340                           ;main.h: 188: extern void PrintErrCs(const unsig
      +                          ned char kod,const unsigned char cs, const unsig
      +                          ned char pls);
  8341                           ;main.h: 189: extern void PrintErrTm(const unsig
      +                          ned char kod,const unsigned char tm, const unsig
      +                          ned char pls);
  8342                           ;main.h: 190: extern void EndErr(void);
  8343                           ;main.h: 191: extern void PrintPR(const unsigned
      +                           char lkod,unsigned char nkod,unsigned char tryb
      +                          );
  8344                           ;main.h: 192: extern void EndPR(void);
  8345                           ;main.h: 193: extern void PrintNstCO(const unsig
      +                          ned char nst);
  8346                           ;main.h: 194: extern void PrintNstCW(const unsig
      +                          ned char nst);
  8347                           ;main.h: 195: extern void PrintNstKt(const unsig
      +                          ned char nst);
  8348                           ;main.h: 196: extern void EndNst(void);
  8349                           ;main.h: 197: extern void PrintL3(void);
  8350                           ;main.h: 198: extern void EndL3(void);
  8351                           ;main.h: 199: extern void PrintTdzCO(const unsig
      +                          ned char tm);
  8352                           ;main.h: 200: extern void EndTdzCO(void);
  8353                           ;main.h: 201: extern void PrintTdzCW(const unsig
      +                          ned char tm);
  8354                           ;main.h: 202: extern void EndTdzCW(void);
  8355                           ;main.h: 203: extern void PrintOFF(void);
  8356                           ;main.h: 204: extern void EndOFF(void);
  8357                           ;main.h: 205: extern void PrintCS(const unsigned
      +                           char cs);
  8358                           ;main.h: 206: extern void EndCS(void);
  8359                           ;main.h: 207: extern void PrintCW(const unsigned
      +                           char tm);
  8360                           ;main.h: 208: extern void EndCW(void);
  8361                           ;main.h: 209: extern void PrintCO(const unsigned
      +                           char tm);
  8362                           ;main.h: 210: extern void PrintHex(const unsigne
      +                          d char tm);
  8363                           ;main.h: 211: extern void SetDiode(unsigned char
      +                           nrd, unsigned char stn);
  8364                           ;main.h: 212: extern void RefreshNst(const unsig
      +                          ned char nst);
  8365                           ;main.h: 214: extern bit GetBit(const unsigned c
      +                          har data,const unsigned char nbit);
  8366                           ;main.h: 215: extern void BitSet(unsigned char *
      +                          data, const unsigned char nbit,const unsigned ch
      +                          ar bt);
  8367                           ;main.h: 216: extern void BitSet2(unsigned char 
      +                          *data, const unsigned char nbit,const unsigned c
      +                          har bt);
  8368                           ;main.h: 218: extern void StartRTG(const unsigne
      +                          d char Index);
  8369                           ;main.h: 219: extern unsigned char RTG(const uns
      +                          igned char Index);
  8370                           ;main.h: 220: extern void StartRTS(const unsigne
      +                          d char Index);
  8371                           ;main.h: 221: extern unsigned char RTS(const uns
      +                          igned char Index);
  8372                           ;main.h: 222: extern void StartRTdS(const unsign
      +                          ed char Index);
  8373                           ;main.h: 223: extern unsigned char RTdS(const un
      +                          signed char Index);
  8374                           ;main.h: 225: extern void InitTimer1(void);
  8375                           ;main.h: 227: extern void InitTimer3(void);
  8376                           ;main.h: 229: extern void InitPort(void);
  8377                           ;main.h: 230: extern bit RdPrt(const unsigned ch
      +                          ar Index);
  8378                           ;main.h: 231: extern void SetPrt(const unsigned 
      +                          char Index, const unsigned char nw);
  8379  F00000  63 63 62 62 61 60  	db	99,99,98,98,97,96,95,95	;#
      +       5F 5F              
  8380                           ;eeprom.h: 16: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "94" "," "93" "," "92" "," 
      +                          "92" "," "91" "," "90" "," "90" "," "89");
  8381  F00008  5E 5D 5C 5C 5B 5A  	db	94,93,92,92,91,90,90,89	;#
      +       5A 59              
  8382                           ;eeprom.h: 17: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "88" "," "88" "," "87" "," 
      +                          "87" "," "86" "," "85" "," "85" "," "84");
  8383  F00010  58 58 57 57 56 55  	db	88,88,87,87,86,85,85,84	;#
      +       55 54              
  8384                           ;eeprom.h: 18: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "84" "," "83" "," "82" "," 
      +                          "82" "," "81" "," "81" "," "80" "," "80");
  8385  F00018  54 53 52 52 51 51  	db	84,83,82,82,81,81,80,80	;#
      +       50 50              
  8386                           ;eeprom.h: 19: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "79" "," "79" "," "78" "," 
      +                          "77" "," "77" "," "76" "," "76" "," "75");
  8387  F00020  4F 4F 4E 4D 4D 4C  	db	79,79,78,77,77,76,76,75	;#
      +       4C 4B              
  8388                           ;eeprom.h: 20: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "75" "," "74" "," "74" "," 
      +                          "73" "," "73" "," "72" "," "72" "," "71");
  8389  F00028  4B 4A 4A 49 49 48  	db	75,74,74,73,73,72,72,71	;#
      +       48 47              
  8390                           ;eeprom.h: 21: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "71" "," "70" "," "70" "," 
      +                          "70" "," "69" "," "69" "," "68" "," "68");
  8391  F00030  47 46 46 46 45 45  	db	71,70,70,70,69,69,68,68	;#
      +       44 44              
  8392                           ;eeprom.h: 22: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "67" "," "67" "," "66" "," 
      +                          "66" "," "65" "," "65" "," "64" "," "64");
  8393  F00038  43 43 42 42 41 41  	db	67,67,66,66,65,65,64,64	;#
      +       40 40              
  8394                           ;eeprom.h: 23: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "64" "," "63" "," "63" "," 
      +                          "62" "," "62" "," "61" "," "61" "," "61");
  8395  F00040  40 3F 3F 3E 3E 3D  	db	64,63,63,62,62,61,61,61	;#
      +       3D 3D              
  8396                           ;eeprom.h: 24: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "60" "," "60" "," "59" "," 
      +                          "59" "," "58" "," "58" "," "57" "," "57");
  8397  F00048  3C 3C 3B 3B 3A 3A  	db	60,60,59,59,58,58,57,57	;#
      +       39 39              
  8398                           ;eeprom.h: 25: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "57" "," "56" "," "56" "," 
      +                          "55" "," "55" "," "54" "," "54" "," "54");
  8399  F00050  39 38 38 37 37 36  	db	57,56,56,55,55,54,54,54	;#
      +       36 36              
  8400                           ;eeprom.h: 26: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "53" "," "53" "," "52" "," 
      +                          "52" "," "52" "," "51" "," "51" "," "50");
  8401  F00058  35 35 34 34 34 33  	db	53,53,52,52,52,51,51,50	;#
      +       33 32              
  8402                           ;eeprom.h: 27: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "50" "," "49" "," "49" "," 
      +                          "49" "," "48" "," "48" "," "47" "," "47");
  8403  F00060  32 31 31 31 30 30  	db	50,49,49,49,48,48,47,47	;#
      +       2F 2F              
  8404                           ;eeprom.h: 28: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "46" "," "46" "," "46" "," 
      +                          "45" "," "45" "," "44" "," "44" "," "44");
  8405  F00068  2E 2E 2E 2D 2D 2C  	db	46,46,46,45,45,44,44,44	;#
      +       2C 2C              
  8406                           ;eeprom.h: 29: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "43" "," "43" "," "42" "," 
      +                          "42" "," "41" "," "41" "," "41" "," "40");
  8407  F00070  2B 2B 2A 2A 29 29  	db	43,43,42,42,41,41,41,40	;#
      +       29 28              
  8408                           ;eeprom.h: 30: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "40" "," "39" "," "39" "," 
      +                          "38" "," "38" "," "37" "," "37" "," "37");
  8409  F00078  28 27 27 26 26 25  	db	40,39,39,38,38,37,37,37	;#
      +       25 25              
  8410                           ;eeprom.h: 31: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "36" "," "36" "," "35" "," 
      +                          "35" "," "34" "," "34" "," "33" "," "33");
  8411  F00080  24 24 23 23 22 22  	db	36,36,35,35,34,34,33,33	;#
      +       21 21              
  8412                           ;eeprom.h: 32: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "32" "," "32" "," "31" "," 
      +                          "31" "," "30" "," "30" "," "29" "," "29");
  8413  F00088  20 20 1F 1F 1E 1E  	db	32,32,31,31,30,30,29,29	;#
      +       1D 1D              
  8414                           ;eeprom.h: 33: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "28" "," "28" "," "27" "," 
      +                          "27" "," "26" "," "26" "," "25" "," "24");
  8415  F00090  1C 1C 1B 1B 1A 1A  	db	28,28,27,27,26,26,25,24	;#
      +       19 18              
  8416                           ;eeprom.h: 34: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "24" "," "23" "," "23" "," 
      +                          "22" "," "22" "," "21" "," "21" "," "20");
  8417  F00098  18 17 17 16 16 15  	db	24,23,23,22,22,21,21,20	;#
      +       15 14              
  8418                           ;eeprom.h: 35: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "19" "," "19" "," "18" "," 
      +                          "17" "," "17" "," "16" "," "16" "," "15");
  8419  F000A0  13 13 12 11 11 10  	db	19,19,18,17,17,16,16,15	;#
      +       10 0F              
  8420                           ;eeprom.h: 36: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "14" "," "14" "," "13" "," 
      +                          "12" "," "11" "," "11" "," "10" "," "09");
  8421  F000A8  0E 0E 0D 0C 0B 0B  	db	14,14,13,12,11,11,10,9	;#
      +       0A 09              
  8422                           ;eeprom.h: 37: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "08" "," "07" "," "06" "," 
      +                          "06" "," "05" "," "04" "," "03" "," "02");
  8423  F000B0  08 07 06 06 05 04  	db	8,7,6,6,5,4,3,2	;#
      +       03 02              
  8424                           ;eeprom.h: 38: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "01" "," "00" "," "00" "," 
      +                          "00" "," "00" "," "00" "," "00" "," "00");
  8425  F000B8  01 00 00 00 00 00  	db	1,0,0,0,0,0,0,0	;#
      +       00 00              
  8426                           ;eeprom.h: 70: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "0" "," "45" "," "99" "," "
      +                          99" "," "0" "," "2" "," "0" "," "0");
  8427  F000C0  00 2D 63 63 00 02  	db	0,45,99,99,0,2,0,0	;#
      +       00 00              
  8428                           ;eeprom.h: 71: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "1" "," "80" "," "60" "," "
      +                          (3<<4)|3" "," "2" "," "1" "," "15" "," "56");
  8429  F000C8  01 50 3C 33 02 01  	db	1,80,60,51,2,1,15,56	;#
      +       0F 38              
  8430                           ;eeprom.h: 73: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "1" "," "6" "," "50" "," "0
      +                          " "," "5" "," "0" "," "10" "," "80");
  8431  F000D0  01 06 32 00 05 00  	db	1,6,50,0,5,0,10,80	;#
      +       0A 50              
  8432                           ;eeprom.h: 74: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "0x01" "," "99" "," "5" ","
      +                           "75" "," "0" "," "0" "," "20" "," "3");
  8433  F000D8  01 63 05 4B 00 00  	db	1,99,5,75,0,0,20,3	;#
      +       14 03              
  8434                           ;eeprom.h: 78: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "0" "," "18" "," "20" "," "
      +                          51" "," "38" "," "84" "," "48" "," "117");
  8435  F000E0  00 12 14 33 26 54  	db	0,18,20,51,38,84,48,117	;#
      +       30 75              
  8436                           ;eeprom.h: 79: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "56" "," "150" "," "62" ","
      +                           "183" "," "67" "," "216" "," "71" "," "249");
  8437  F000E8  38 96 3E B7 43 D8  	db	56,150,62,183,67,216,71,249	;#
      +       47 F9              
  8438                           ;eeprom.h: 84: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "40" "," "40" "," "39" "," 
      +                          "38" "," "38" "," "37" "," "36" "," "36");
  8439  F000F0  28 28 27 26 26 25  	db	40,40,39,38,38,37,36,36	;#
      +       24 24              
  8440                           ;eeprom.h: 85: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "35" "," "34" "," "34" "," 
      +                          "33" "," "33" "," "32" "," "32" "," "31");
  8441  F000F8  23 22 22 21 21 20  	db	35,34,34,33,33,32,32,31	;#
      +       20 1F              
  8442                           ;eeprom.h: 86: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "31" "," "30" "," "30" "," 
      +                          "29" "," "29" "," "28" "," "28" "," "27");
  8443  F00100  1F 1E 1E 1D 1D 1C  	db	31,30,30,29,29,28,28,27	;#
      +       1C 1B              
  8444                           ;eeprom.h: 87: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "27" "," "26" "," "26" "," 
      +                          "25" "," "25" "," "24" "," "24" "," "23");
  8445  F00108  1B 1A 1A 19 19 18  	db	27,26,26,25,25,24,24,23	;#
      +       18 17              
  8446                           ;eeprom.h: 88: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "23" "," "22" "," "22" "," 
      +                          "22" "," "21" "," "21" "," "20" "," "20");
  8447  F00110  17 16 16 16 15 15  	db	23,22,22,22,21,21,20,20	;#
      +       14 14              
  8448                           ;eeprom.h: 89: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "20" "," "19" "," "19" "," 
      +                          "18" "," "18" "," "18" "," "17" "," "17");
  8449  F00118  14 13 13 12 12 12  	db	20,19,19,18,18,18,17,17	;#
      +       11 11              
  8450                           ;eeprom.h: 90: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "17" "," "16" "," "16" "," 
      +                          "15" "," "15" "," "15" "," "14" "," "14");
  8451  F00120  11 10 10 0F 0F 0F  	db	17,16,16,15,15,15,14,14	;#
      +       0E 0E              
  8452                           ;eeprom.h: 91: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "14" "," "13" "," "13" "," 
      +                          "13" "," "12" "," "12" "," "12" "," "11");
  8453  F00128  0E 0D 0D 0D 0C 0C  	db	14,13,13,13,12,12,12,11	;#
      +       0C 0B              
  8454                           ;eeprom.h: 92: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "11" "," "11" "," "10" "," 
      +                          "10" "," "10" "," "9" "," "9" "," "9");
  8455  F00130  0B 0B 0A 0A 0A 09  	db	11,11,10,10,10,9,9,9	;#
      +       09 09              
  8456                           ;eeprom.h: 93: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "8" "," "8" "," "8" "," "7"
      +                           "," "7" "," "7" "," "6" "," "6");
  8457  F00138  08 08 08 07 07 07  	db	8,8,8,7,7,7,6,6	;#
      +       06 06              
  8458                           ;eeprom.h: 94: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "6" "," "5" "," "5" "," "5"
      +                           "," "4" "," "4" "," "4" "," "3");
  8459  F00140  06 05 05 05 04 04  	db	6,5,5,5,4,4,4,3	;#
      +       04 03              
  8460                           ;eeprom.h: 95: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "3" "," "3" "," "2" "," "2"
      +                           "," "2" "," "1" "," "1" "," "1");
  8461  F00148  03 03 02 02 02 01  	db	3,3,2,2,2,1,1,1	;#
      +       01 01              
  8462                           ;eeprom.h: 96: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "1" "," "0" "," "0" "," "0"
      +                           "," "-1" "," "-1" "," "-1" "," "-2");
  8463  F00150  01 00 00 00 FF FF  	db	1,0,0,0,-1,-1,-1,-2	;#
      +       FF FE              
  8464                           ;eeprom.h: 97: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-2" "," "-2" "," "-2" "," 
      +                          "-3" "," "-3" "," "-3" "," "-4" "," "-4");
  8465  F00158  FE FE FE FD FD FD  	db	-2,-2,-2,-3,-3,-3,-4,-4	;#
      +       FC FC              
  8466                           ;eeprom.h: 98: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-4" "," "-5" "," "-5" "," 
      +                          "-5" "," "-6" "," "-6" "," "-6" "," "-7");
  8467  F00160  FC FB FB FB FA FA  	db	-4,-5,-5,-5,-6,-6,-6,-7	;#
      +       FA F9              
  8468                           ;eeprom.h: 99: asm("\tpsect eeprom_data,class=EE
      +                          DATA"); asm("\tdb\t" "-7" "," "-7" "," "-8" "," 
      +                          "-8" "," "-8" "," "-9" "," "-9" "," "-9");
  8469  F00168  F9 F9 F8 F8 F8 F7  	db	-7,-7,-8,-8,-8,-9,-9,-9	;#
      +       F7 F7              
  8470                           ;eeprom.h: 100: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-9" "," "-10" "," "-10" "
      +                          ," "-10" "," "-11" "," "-11" "," "-11" "," "-12"
      +                          );
  8471  F00170  F7 F6 F6 F6 F5 F5  	db	-9,-10,-10,-10,-11,-11,-11,-12	;#
      +       F5 F4              
  8472                           ;eeprom.h: 101: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-12" "," "-13" "," "-13" 
      +                          "," "-13" "," "-13" "," "-14" "," "-14" "," "-14
      +                          ");
  8473  F00178  F4 F3 F3 F3 F3 F2  	db	-12,-13,-13,-13,-13,-14,-14,-14	;#
      +       F2 F2              
  8474                           ;eeprom.h: 102: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-15" "," "-15" "," "-16" 
      +                          "," "-16" "," "-16" "," "-17" "," "-17" "," "-17
      +                          ");
  8475  F00180  F1 F1 F0 F0 F0 EF  	db	-15,-15,-16,-16,-16,-17,-17,-17	;#
      +       EF EF              
  8476                           ;eeprom.h: 103: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-18" "," "-18" "," "-18" 
      +                          "," "-19" "," "-19" "," "-20" "," "-20" "," "-20
      +                          ");
  8477  F00188  EE EE EE ED ED EC  	db	-18,-18,-18,-19,-19,-20,-20,-20	;#
      +       EC EC              
  8478                           ;eeprom.h: 104: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-21" "," "-21" "," "-22" 
      +                          "," "-22" "," "-22" "," "-23" "," "-23" "," "-24
      +                          ");
  8479  F00190  EB EB EA EA EA E9  	db	-21,-21,-22,-22,-22,-23,-23,-24	;#
      +       E9 E8              
  8480                           ;eeprom.h: 105: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-24" "," "-25" "," "-25" 
      +                          "," "-25" "," "-26" "," "-26" "," "-27" "," "-27
      +                          ");
  8481  F00198  E8 E7 E7 E7 E6 E6  	db	-24,-25,-25,-25,-26,-26,-27,-27	;#
      +       E5 E5              
  8482                           ;eeprom.h: 106: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-28" "," "-28" "," "-29" 
      +                          "," "-29" "," "-30" "," "-30" "," "-31" "," "-31
      +                          ");
  8483  F001A0  E4 E4 E3 E3 E2 E2  	db	-28,-28,-29,-29,-30,-30,-31,-31	;#
      +       E1 E1              
  8484                           ;eeprom.h: 107: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-32" "," "-33" "," "-33" 
      +                          "," "-34" "," "-35" "," "-35" "," "-36" "," "-37
      +                          ");
  8485  F001A8  E0 DF DF DE DD DD  	db	-32,-33,-33,-34,-35,-35,-36,-37	;#
      +       DC DB              
  8486                           ;eeprom.h: 108: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "-37" "," "-38" "," "-39" 
      +                          "," "-40" "," "-40" "," "-40" "," "-40" "," "-40
      +                          ");
  8487  F001B0  DB DA D9 D8 D8 D8  	db	-37,-38,-39,-40,-40,-40,-40,-40	;#
      +       D8 D8              
  8488                           ;eeprom.h: 138: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0xFF" "," "0xFF" "," "0xF
      +                          F" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "
      +                          ," "0xFF");
  8489  F001B8  FF FF FF FF FF FF  	db	255,255,255,255,255,255,255,255	;#
      +       FF FF              
  8490                           ;eeprom.h: 140: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "1" "," "18" "," "5" "," "
      +                          80" "," "0" "," "0" "," "99" "," "00");
  8491  F001C0  01 12 05 50 00 00  	db	1,18,5,80,0,0,99,0	;#
      +       63 00              
  8492                           ;eeprom.h: 141: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8493  F001C8  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8494                           ;eeprom.h: 142: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "0");
  8495  F001D0  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8496                           ;eeprom.h: 145: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0xFF" "," "0xFF" "," "0xF
      +                          F" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "
      +                          ," "0xFF");
  8497  F001D8  FF FF FF FF FF FF  	db	255,255,255,255,255,255,255,255	;#
      +       FF FF              
  8498                           ;eeprom.h: 146: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "0xFF" "," "0xFF" "," "0xF
      +                          F" "," "0xFF" "," "0xFF" "," "0xFF" "," "0xFF" "
      +                          ," "0xFF");
  8499  F001E0  FF FF FF FF FF FF  	db	255,255,255,255,255,255,255,255	;#
      +       FF FF              
  8500                           ;eeprom.h: 148: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "08" "," "00");
  8501  F001E8  00 00 00 00 00 00  	db	0,0,0,0,0,0,8,0	;#
      +       08 00              
  8502                           ;eeprom.h: 149: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8503  F001F0  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8504                           ;eeprom.h: 150: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8505  F001F8  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8506                           ;eeprom.h: 152: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8507  F00200  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8508                           ;eeprom.h: 154: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8509  F00208  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8510                           ;eeprom.h: 155: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8511  F00210  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8512                           ;eeprom.h: 156: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8513  F00218  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8514                           ;eeprom.h: 157: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8515  F00220  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8516                           ;eeprom.h: 159: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8517  F00228  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8518                           ;eeprom.h: 160: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8519  F00230  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8520                           ;eeprom.h: 161: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8521  F00238  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8522                           ;eeprom.h: 162: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8523  F00240  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8524                           ;eeprom.h: 164: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8525  F00248  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8526                           ;eeprom.h: 165: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8527  F00250  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8528                           ;eeprom.h: 166: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8529  F00258  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8530                           ;eeprom.h: 167: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8531  F00260  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8532                           ;eeprom.h: 169: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8533  F00268  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8534                           ;eeprom.h: 170: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8535  F00270  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8536                           ;eeprom.h: 171: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8537  F00278  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8538                           ;eeprom.h: 172: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8539  F00280  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8540                           ;eeprom.h: 174: asm("\tpsect eeprom_data,class=E
      +                          EDATA"); asm("\tdb\t" "00" "," "00" "," "00" ","
      +                           "00" "," "00" "," "00" "," "00" "," "00");
  8541  F00288  00 00 00 00 00 00  	db	0,0,0,0,0,0,0,0	;#
      +       00 00              
  8542                           
  8543                           	psect	bigbss
  8544  000E61                     F2592:
  8545  000E61                     	ds	1
  8546  000E61                     F2593:
  8547  000E61                     	ds	1
  8548  000E61                     F2606:
  8549  000E61                     	ds	1
  8550  000E61                     F2628:
  8551  000E61                     	ds	1
  8552  000000                     
  8553  000000                     
  8554  000000                     
  8555  000000                     
  8556  000000                     
  8557  000000                     
  8558  000000                     
  8559  000000                     
  8560  000000                     
  8561  000000                     
  8562  000000                     
  8563  000000                     
  8564  000000                     
  8565  000000                     
  8566  000000                     
  8567  000000                     
  8568  000000                     
  8569  000000                     
  8570  000000                     
  8571  000000                     
  8572  000000                     
  8573  000000                     
  8574  000000                     
  8575  000000                     
  8576  000000                     
  8577  000000                     
  8578  000000                     
  8579  000000                     
  8580  000000                     
  8581  000000                     
  8582  000000                     
  8583  000000                     
  8584  000000                     
  8585  000000                     
  8586  000000                     
  8587  000000                     
  8588  000000                     
  8589  000000                     
  8590  000000                     
  8591  000000                     
  8592  000000                     
  8593  000000                     
  8594  000000                     
  8595  000000                     
  8596  000000                     
  8597  000000                     
  8598  000000                     
  8599  000000                     
  8600  000000                     
  8601  000000                     
  8602  000000                     
  8603  000000                     
  8604  000000                     
  8605  000000                     
  8606  000000                     
  8607  000000                     
  8608  000000                     
  8609  000000                     
  8610  000000                     
  8611  000000                     
  8612  000000                     
  8613  000000                     
  8614  000000                     
  8615  000000                     
  8616  000000                     
  8617  000000                     
  8618  000000                     
  8619  000000                     
  8620  000000                     
  8621  000000                     
  8622  000000                     
  8623  000000                     
  8624  000000                     
  8625  000000                     
  8626  000000                     
  8627  000000                     
  8628  000000                     
  8629  000000                     
  8630  000000                     
  8631  000000                     
  8632  000000                     
  8633  000000                     
  8634  000000                     
  8635  000000                     
  8636  000000                     
  8637  000000                     
  8638  000000                     
  8639  000000                     
  8640  000000                     
  8641  000000                     
  8642  000000                     
  8643  000000                     
  8644  000000                     
  8645  000000                     
  8646  000000                     
  8647  000000                     
  8648  000000                     
  8649  000000                     
  8650  000000                     
  8651  000000                     
  8652  000000                     
  8653  000000                     
  8654  000000                     
  8655  000000                     
  8656  000000                     
  8657  000000                     
  8658  000000                     
  8659  000000                     
  8660  000000                     
  8661  000000                     
  8662  000000                     
  8663  000000                     
  8664  000000                     
  8665  000000                     
  8666  000000                     
  8667  000000                     
  8668  000000                     
  8669  000000                     
  8670  000000                     
  8671  000000                     
  8672  000000                     
  8673  000000                     
  8674  000000                     
  8675  000000                     
  8676  000000                     
  8677  000E61                     _bll:
  8678  000E61                     	ds	1
  8679  000E61                     _gll:
  8680  000E61                     	ds	1
  8681  000E61                     _hll:
  8682  000E61                     	ds	1
  8683  000E61                     _kll:
  8684  000E61                     	ds	1
  8685  000E61                     _vdw:
  8686  000E61                     	ds	1
  8687  000E61                     _vup:
  8688  000E61                     	ds	1
  8689  000E61                     _vvvv:
  8690  000E61                     	ds	1
  8691  000E61                     _x:
  8692  000E61                     	ds	1
  8693  000000                     
  8694  000000                     
  8695  000000                     
  8696  000000                     
  8697  000000                     
  8698  000000                     
  8699  000000                     
  8700                           
  8701                           	psect	bss
  8702  000300                     _pmppwm:
  8703  000300                     	ds	2
  8704  000300                     _vv:
  8705  000300                     	ds	2
  8706  000300                     _wn:
  8707  000300                     	ds	2
  8708  000300                     _M:
  8709  000300                     	ds	39
  8710  000300                     _RSDT1:
  8711  000300                     	ds	125
  8712                           
  8713                           	psect	temp
  8714  000000                     btemp:
  8715  000000                     	ds	2
  8716                           intcon	equ	0xFF2
  8717                           indf0	equ	0xFEF
  8718                           postinc0	equ	0xFEE
  8719                           wreg	equ	0xFE8
  8720                           fsr2l	equ	0xFD9
  8721                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL3
Symbol Table                                           Mon Sep 14 17:33:13 2020

              _KolejkaPobudzen 1F58              __end_of_SetLowPMP 36F2  
                    _SetTrbPGD 9884                              _M 0306  
       _OdczytDanychKalibracji C2FC                       _PomiarCO 90EA  
                     _PomiarCS A5C0                       _PomiarCW 95C0  
                     _PomiarIN 958A                              _x 0E6C  
                     _PomiarZW 97AA                      _Proba48Z3 38B2  
            __end_of_Proba48Z3 38FA                       _PrintErr 066C  
                    _SetWylacz 2DEC                             l41 11C8  
                           l42 11D6                             l51 12DA  
                           l43 125A                             l35 11AC  
                           l44 1222                             l36 11B4  
                           l37 11C4                             l62 13E8  
                           l46 1256                             l39 11CA  
                           l72 148C                             l48 12D6  
                           l73 1484                             l65 1406  
                           l82 155A                             l83 154A  
                           l75 14C8                             l67 140C  
                           l86 15B2                             l87 15B6  
                           l79 14FC                             l88 15F8  
                           l97 1706                             l89 15F2  
                           l98 1702                             l99 1704  
            __end_of_SetWylacz 2E3A                      _PomiarECO A30A  
                           u30 11A2                             u60 11C0  
                    _PomiarPCO A06A                      _PomiarPFN A3BE  
                    _PomiarPCW A1DA                      _PomiarVNT DC72  
                           _wn 0304                             _vv 0302  
                    ?_PrintErr 00A9                       _StartRTG FD4A  
                    _ProcToVNT C7A2                       _StartRTM FCDE  
                     _StartRTS FCA2                       _Rusz48Z3 38FA  
                    _ProcToMod 65DE                     _SetRozruch 2BCC  
           __end_of_SetRozruch 2BF8                            l200 2412  
                          l104 1A36                            l201 241E  
                          l121 1FAA                            l113 1C7C  
                          l122 1FA2                            l114 1F36  
                          l211 24B2                            l131 1FF8  
                          l123 1F8A                            l115 1F32  
                          l107 1A58                            l300 2932  
                          l212 24CA                            l204 2478  
                          l132 1FE6                            l124 1F8E  
                          l221 2528                            l213 24CE  
                          l133 1FEC                            l125 1F9C  
                          l117 1F46                            l109 1ABC  
                          l302 2944                            l230 25D4  
                          l214 24EA                            l150 20CC  
                          l118 1F52                            l231 25D0  
                          l223 2554                            l151 20DC  
                          l143 20A4                            l135 2022  
                          l400 2C8C                            l304 2962  
                          l240 261E                            l160 215E  
                          l152 20F4                            l321 2A64  
                          l313 29F8                            l305 297A  
                          l225 2592                            l217 26C8  
                          l153 2108                            l129 1FD0  
                          l410 2CD8                            l306 29AA  
                          l250 265A                            l234 2622  
                          l170 224C                            l162 218A  
                          l403 2C9A                            l323 2A08  
                          l315 29D4                            l307 29A0  
                          l243 2638                            l227 263C  
                          l219 250A                            l171 2256  
                          l155 21B6                            l139 2074  
                          l260 2760                            l252 267C  
                          l236 2608                            l228 25BC  
                          l172 2428                            l148 21C2  
                          l501 30EC                            l333 2BBA  
                          l317 29E6                            l309 29BE  
                          l261 26D0                            l253 2690  
                          l237 2604                            l173 2288  
                          l157 2176                            l149 2114  
                          l430 2DAE                            l342 2ABE  
                          l190 2354                            l182 22E4  
                          l174 2276                            l511 3140  
                          l503 30F0                            l351 2AEC  
                          l335 2A74                            l327 2A36  
                          l183 22D0                            l175 2282  
                          l159 2166                            l600 3536  
                          l512 3158                            l424 2D8E  
                          l280 286C                            l192 2388  
                          l184 22DC                            l168 2238  
                          l505 30EE                            l345 2ACC  
                          l281 285C                            l273 274C  
                          l249 26A4                            l177 22B6  
                          l169 225C                            l530 3240  
                          l514 3186                            l506 30FC  
                          l418 2D4E                            l354 2B04  
                          l282 2856                            l266 271A  
                          l258 279C                            l194 23DC  
                          l186 231A                            l178 229E  
                          l603 357E                            l443 2E0C  
                          l427 2DA0                            l291 28A8  
                          l195 23CA                            l187 2302  
                          l179 22AE                            l700 3934  
                          l612 3600                            l604 353E  
                          l532 32EA                            l524 3226  
                          l508 313E                            l444 2DFC  
                          l436 2CDA                            l356 2B16  
                          l292 28C4                            l276 27F0  
                          l196 23D6                            l188 2312  
                          l701 38FE                            l621 3610  
                          l613 35B0                            l605 354A  
                          l541 32A2                            l533 3242  
                          l437 2DEC                            l293 28E4  
                          l285 2882                            l614 35C0  
                          l606 3558                            l542 32C0  
                          l534 324E                            l470 2F5A  
                          l446 2DF0                            l366 2B6E  
                          l286 287A                            l198 2424  
                          l703 3916                            l631 36B0  
                          l623 3658                            l615 35D4  
                          l551 33AE                            l519 31EE  
                          l471 2F14                            l463 2F04  
                          l455 2E9A                            l439 2CF2  
                          l391 2C32                            l359 2B24  
                          l295 294A                            l287 28A4  
                          l279 27F4                            l712 39BA  
                          l632 366A                            l624 3612  
                          l608 3576                            l552 32FE  
                          l536 3276                            l480 2F90  
                          l472 2F20                            l464 2EAA  
                          l456 2E46                            l296 2912  
                          l721 3A6C                            l633 3680  
                          l625 3628                            l561 3350  
                          l553 330A                            l545 32D2  
                          l529 347A                            l481 2FA6  
                          l473 2F3E                            l465 2EB6  
                          l369 2B7C                            l642 3736  
                          l562 337E                            l554 3336  
                          l474 2F52                            l466 2EE8  
                          l458 2E72                            l394 2C6C  
                          l386 2D06                            l378 2BA0  
                          l298 2924                            l731 3B3A  
                          l723 3A98                            l651 3768  
                          l643 36F4                            l635 3698  
                          l627 3640                            l619 36C2  
                          l547 32E0                            l483 2FB2  
                          l459 2E92                            l812 3F5A  
                          l740 3B6A                            l724 3AA4  
                          l716 3B54                            l644 3700  
                          l572 3468                            l388 2BFA  
                          l805 3EE4                            l733 3B32  
                          l725 3AA8                            l717 3A3E  
                          l581 3420                            l573 33C0  
                          l565 3394                            l549 32FC  
                          l397 2C7A                            l806 3EE8  
                          l742 3B7E                            l734 3B2C  
                          l670 381C                            l646 371C  
                          l638 36DC                            l582 343E  
                          l574 33CC                            l494 304C  
                          l743 3B9A                            l719 3A62  
                          l655 379C                            l591 34F6  
                          l495 3058                            l479 31A0  
                          l744 3B96                            l728 3AE0  
                          l672 3854                            l648 3728  
                          l592 348E                            l576 33F4  
                          l568 33A4                            l496 3090  
                          l488 3010                            l809 3F44  
                          l761 3C92                            l681 3862  
                          l673 381E                            l593 34A8  
                          l585 3450                            l489 304A  
                          l770 3CBA                            l738 3BAC  
                          l594 34BA                            l498 3098  
                          l763 3C88                            l755 3C14  
                          l739 3BA0                            l691 38C4  
                          l683 387A                            l675 3836  
                          l587 345E                            l499 30A4  
                          l772 3D22                            l756 3C3A  
                          l748 3BB6                            l668 3898  
                          l596 34DC                            l773 3D64  
                          l782 3DC2                            l774 3EB4  
                          l758 3C6A                            l783 3DDE  
                          l775 3EA4                            l767 3CAC  
                          l759 3CA2                            l599 358C  
                          l776 3D6A                            l768 3CB0  
                          l688 38F0                            l777 3D7E  
                          l697 3942                            l689 38B4  
                          l794 3E4E                            l786 3E1A  
                          l778 3D96                            l698 38FC  
                          l795 3E62                            l787 3DF2  
                          l796 3E76                            l789 3E06  
                          u121 1232                            u220 1310  
                          u221 130C                            u230 1312  
                          u150 1242                            u420 14A2  
                          u190 12C2                            u530 15BE  
                          _PFN 0067                            u635 1720  
                          u820 18B8                            u740 179E  
                          u830 18BA                            u750 17A0  
                          u590 15DA                            u680 1772  
                          u690 1774                            _PMP 02FC  
                          u860 19E2                            u780 1894  
                          u950 1C94                            u870 19E4  
                          u790 1896                            u960 1C96  
                          u990 1CC4                            _RTG FD7A  
                          _PWM 02D9                            _RTM FD0E  
                          _RTS FCC6                       _WritePWM 02E8  
                          _bll 0E65                            _gll 0E66  
                          _hll 0E67                            _kll 0E68  
                          _rgl 03D7          ?a_OczekujNaPrzeplywWG 00A4  
                          _vdw 0E69                            _vup 0E6A  
                     __config1 0030FF                       __config2 00EFEF  
                     __config3 007DFF                       __config4 00FFFB  
                     __config5 00FFF0                       __config6 00DFF0  
                          wreg 000FE8                      _StartRTdS FC66  
                ?_eeprom_write 00B7                     _RestartMod 6726  
                _ReloadPlomien 3744                           F2606 0E63  
                         F2628 0E64                           F2592 0E61  
                         F2593 0E62         __end_of_Odpowietrzenie 3B68  
              _if_eeprom_write 870A                     _PrintErrCs 06B0  
                   _PwrOnDelay 0E42                           u1000 1CC6  
                         u1100 1D28                           u1130 1D54  
                         u1050 1CFC                           u1300 1DF2  
                         u1140 1D56                           u1060 1CFE  
                  _DecyzjaPLM2 3204                           u1310 1DF4  
                         u1230 1DBC                           u1400 1E54  
                         u1240 1DBE                           u2130 215A  
                         u1410 1E56                           u1170 1D84  
                         u1090 1D26                           u1340 1E22  
                         u1180 1D86                           u1350 1E24  
                         u2240 21EE                           u1440 1E82  
                         u2241 21EA                           u2250 21F0  
                         u1530 1EE8                           u1450 1E84  
                         u3300 2506                           u2420 2336  
                         u1540 1EEA                           u1630 1F7E  
                         u1480 1EB2                           u3410 2524  
                         u1570 1F18                           u1490 1EB4  
                         u1580 1F1A                           u2621 2384  
                         u5030 2796                           u1840 2040  
                         u1761 201E                           u2730 23B0  
                         u2570 236C                           u1850 2042  
                         u2740 23B2                           u2670 2398  
                         u3800 25AE                           u5170 27AE  
                         u4290 2678                           u1980 20D6  
                         _MGSD 03AA                           u6400 2A58  
                         u5610 288E                           u3690 2588  
                         u5700 28B6                           u8040 2CBA  
                         u6290 2A2A                           u5811 28F8  
                         u5830 28FE                           u8250 2D24  
                         u7530 2C08                           u5690 28B4  
                         u9140 2EDE                           u9240 2FA0  
                         u9081 2ECA               ?_if_eeprom_write 00B4  
                         u9520 317A                           u8760 2DCE  
                         u8950 2DF4                      _WritePWM2 0302  
                         _DtCO 007D                           _DtCS 005F  
                         _DtCW 006E                           _DtIN 0090  
                         _RTdS FC8A                           _DtZW 0063  
                  _ClrTachoDta D6D6            __end_of_DecyzjaPLM2 323E  
                         _main 113A          __end_of_ReloadPlomien 378A  
                         indf0 000FEF                           fsr2l 000FD9  
     __end_of_FunkcjaSerwisowa 2EA8                           btemp 0000  
                         _vvvv 0E6B                    ?_PrintErrCs 00A6  
              __end_of_VZPauza 3BDC                           start 0010  
              __end_of_InitPFN 14EA                __end_of_GrzejON 2F7E  
              __end_of_VWybieg 3508                __end_of_ToReset 3F5C  
                      ?_SetPrt 00AD                __end_of_Proba48 381A  
                 ?a_RefLCDData 00A9                __end_of_Rozruch 31D2  
          _DetekcjaPrzeplywuWG 3508        __end_of_KolejkaPobudzen 20AA  
                        u11300 3A26                          u11241 3A0E  
                        u11161 39E2                          u11440 3B26  
                        u12241 3E40                          u12500 3E9C  
                        u10580 3796                          u11630 3C8C  
                   _WriteEEPFN 84FA                          u11800 3D92  
                        u11561 3C4A                          u10930 396C  
                        u11590 3C5A                          _RSDT1 032D  
                        _DtKNF 02AE                          _EndL3 0736  
            ?a_KolejkaPobudzen 00A4                          _RdPrt F438  
                   used_btemp0 0001                     used_btemp1 0001  
  __end_of_DetekcjaPrzeplywuWG 3594                    _eeprom_read 0E5E  
               _DecyzjaAntyLeg 20AA                   _ToWriteESTAT FC00  
                      _BitSet2 07D8                     _CalkTimStr C8C0  
                      _GetBit2 0772                     _DecRozruch 2A72  
                     ?_BitSet2 00AC                          status 000FD8  
                     ?_GetBit2 00AE             __end_of_DecRozruch 2BCC  
                      _VZPauza 3BB0                        _InitI2C C954  
                      _InitPFN 1446                        _InitPWM 008E  
                 _ProcToPmpPwm E44E                        _InitOsc 0EF0  
             __end_of_GrzejOFF 2F82            _OczekujNaPrzeplywWG 3594  
                     ?a_DecERR 00A4                        _GrzejON 2F68  
                     ?a_DecSTR 00A4                        _VWybieg 348C  
                      _Moduluj 3F64                        _ToReset 3F02  
                      __Lparam 00A4                        _Proba48 37EC  
                _ReceptDataLCD BB56             _FiltrPomiarowyCOCW 8FFE  
        _KalibracjaWentylatora 14EA                        _PrintL3 0726  
               _InitReceptProc BA4E                        _Rozruch 2F82  
                 ?_eeprom_read 00B7               __end_of_Rusz48Z3 394C  
             _FunkcjaSerwisowa 2E3A                        __ramtop 1000  
               __end_of_DecERR 249E                 __end_of_DecSTR 29D2  
                   _DecyzjaPLM 31D2                     _DecyzjaOdp 394C  
  __end_of_OczekujNaPrzeplywWG 360E         __end_of_DecyzjaAntyLeg 21C8  
           __end_of_DecyzjaPLM 3204             __end_of_DecyzjaOdp 399C  
               __end_of_ErrPTG 3F02                     _Blokada15S 2F12  
               __end_of_KeyRes 3BB0                 __end_of_PomALL 1446  
           __end_of_Blokada15S 2F68                    _ZmienKCOKCW 360E  
                  _InitDataPmr 8A86                 __end_of_Rusz48 38B2  
          __end_of_ZmienKCOKCW 36D0                   _CalkVNTtoPWM C780  
               __end_of_Wylacz 348C                  _KodSterownika 1700  
                 __end_of_main 141A                         _DecERR 21C8  
                       _DecSTR 249E                    _RuszPlomien 36F2  
                       _ClrDtV DF0A                         _EndErr 06FC  
                   _RefLCDData 1714                         _ErrPTG 3BDC  
                    _DecWylacz 2BF8                         _InitAC 036A  
            __end_of_DecWylacz 2DEC             __end_of_RefLCDData 1F58  
                       _KeyRes 3B68            __end_of_RuszPlomien 3744  
                       _PomALL 141A                         _SetPFN 8306  
        __end_of_KodSterownika 1714                         _RglPmp EEB0  
                    _RdEEParam 7E54                      _VNTToProc C82C  
                       _SetPrt F45A                         _Rusz48 381A  
                    _ClearData 1606              __end_of_ClearData 16BA  
                       _Wylacz 323E                  _KalibracjaVNT BE12  
                      postinc0 000FEE                      _BlokadaL3 2EA8  
            __end_of_BlokadaL3 2F12                         _pmppwm 0300  
                   _InitGlobal 3F5C            _KontrolaWentylatora 378A  
           __end_of_InitGlobal 3F64                     _InitTimer1 0D9C  
                   _InitTimer3 0D74                   _eeprom_write 0CB8  
                _MKonfiguracja 674C                  _RestartFltPrt 16BA  
        ?a_DetekcjaPrzeplywuWG 00A4  __end_of_KalibracjaWentylatora 1606  
                     _RefBHist F9CE                       _RefBStat FC08  
  __end_of_KontrolaWentylatora 37EC                       _ModParam 00CA  
                     _InitUart F4DE                       _InitPort F2D4  
               _Odpowietrzenie 399C        ?a_KalibracjaWentylatora 00A4  
                     _GrzejOFF 2F7E                      _ToObiegCO 29D2  
                    _ToObiegCW 2A06          __end_of_RestartFltPrt 1700  
            __end_of_ToObiegCO 2A06              __end_of_ToObiegCW 2A72  
                    _SetLowPMP 36D0  
